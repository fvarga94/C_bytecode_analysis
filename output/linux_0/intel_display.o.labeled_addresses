assert_dsi_pll	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,6	47
0x400ce10	            0x4154	                                push r12	      1077	intel_display.c	FUNCTION_29
0x400ce12	              0x55	                                push rbp	      1077	intel_display.c	FUNCTION_29
0x400ce13	    0x488daf404800	                 lea rbp, [rdi + 0x4840]	      1081	intel_display.c	FUNCTION_29	CALL_1
0x400ce1a	              0x53	                                push rbx	      1077	intel_display.c	FUNCTION_29
0x400ce1b	          0x4889fb	                            mov rbx, rdi	      1077	intel_display.c	FUNCTION_29
0x400ce1e	          0x4189f4	                           mov r12d, esi	      1077	intel_display.c	FUNCTION_29
0x400ce21	          0x4889ef	                            mov rdi, rbp	      1081	intel_display.c	FUNCTION_29	CALL_1
0x400ce24	      0xe800000000	                          call 0x400ce29	      1081	intel_display.c	FUNCTION_29	CALL_1
0x400ce29	          0x4889df	                            mov rdi, rbx	      1082	intel_display.c	FUNCTION_29	CALL_2
0x400ce2c	      0xbe48000000	                           mov esi, 0x48	      1082	intel_display.c	FUNCTION_29	CALL_2
0x400ce31	      0xe800000000	                          call 0x400ce36	      1082	intel_display.c	FUNCTION_29	CALL_2
0x400ce36	          0x4889ef	                            mov rdi, rbp	      1083	intel_display.c	FUNCTION_29	CALL_3
0x400ce39	            0x89c3	                            mov ebx, eax	      1082	intel_display.c	FUNCTION_29	CALL_2
0x400ce3b	      0xe800000000	                          call 0x400ce40	      1083	intel_display.c	FUNCTION_29	CALL_3
0x400ce40	    0x81e300000080	                     and ebx, 0x80000000	      1086	intel_display.c	FUNCTION_29	CALL_4
0x400ce46	           0xf95c0	                                setne al	      1086	intel_display.c	FUNCTION_29	CALL_4
0x400ce49	          0x4438e0	                            cmp al, r12b	      1086	intel_display.c	FUNCTION_29	CALL_4
0x400ce4c	            0x7505	                           jne 0x400ce53	      1086	intel_display.c	FUNCTION_29	CALL_4
0x400ce4e	              0x5b	                                 pop rbx	      1089	intel_display.c	FUNCTION_29
0x400ce4f	              0x5d	                                 pop rbp	      1089	intel_display.c	FUNCTION_29
0x400ce50	            0x415c	                                 pop r12	      1089	intel_display.c	FUNCTION_29
0x400ce52	              0xc3	                                     ret	      1089	intel_display.c	FUNCTION_29
0x400ce53	    0x803d00000000	                cmp byte [0x0400ce5a], 0	      1086	intel_display.c	FUNCTION_29	CALL_4
0x400ce5a	            0x752e	                           jne 0x400ce8a	      1086	intel_display.c	FUNCTION_29	CALL_4
0x400ce5c	    0x48c7c6000000	                              mov rsi, 0	       150	i915_utils.h	FUNCTION_472
0x400ce63	            0x85db	                           test ebx, ebx	       150	i915_utils.h	FUNCTION_472
0x400ce65	    0x48c7c0000000	                              mov rax, 0	       150	i915_utils.h	FUNCTION_472
0x400ce6c	          0x4889f2	                            mov rdx, rsi	       150	i915_utils.h	FUNCTION_472
0x400ce6f	    0x48c7c7000000	                              mov rdi, 0	      1086	intel_display.c	FUNCTION_29	CALL_4
0x400ce76	              0x5b	                                 pop rbx	      1089	intel_display.c	FUNCTION_29
0x400ce77	        0x480f45d0	                         cmovne rdx, rax	       150	i915_utils.h	FUNCTION_472
0x400ce7b	          0x4584e4	                         test r12b, r12b	       150	i915_utils.h	FUNCTION_472
0x400ce7e	              0x5d	                                 pop rbp	      1089	intel_display.c	FUNCTION_29
0x400ce7f	            0x415c	                                 pop r12	      1089	intel_display.c	FUNCTION_29
0x400ce81	        0x480f45f0	                         cmovne rsi, rax	       150	i915_utils.h	FUNCTION_472
0x400ce85	      0xe900000000	                           jmp 0x400ce8a	      1086	intel_display.c	FUNCTION_29	CALL_4
0x400ce8a	    0x48c7c6000000	                              mov rsi, 0	       150	i915_utils.h	FUNCTION_472
0x400ce91	    0x48c7c0000000	                              mov rax, 0	       150	i915_utils.h	FUNCTION_472
0x400ce98	            0x85db	                           test ebx, ebx	       150	i915_utils.h	FUNCTION_472
0x400ce9a	          0x4889f2	                            mov rdx, rsi	       150	i915_utils.h	FUNCTION_472
0x400ce9d	    0x48c7c7000000	                              mov rdi, 0	      1086	intel_display.c	FUNCTION_29	CALL_4
0x400cea4	        0x480f44d0	                          cmove rdx, rax	       150	i915_utils.h	FUNCTION_472
0x400cea8	          0x4584e4	                         test r12b, r12b	       150	i915_utils.h	FUNCTION_472
0x400ceab	        0x480f44f0	                          cmove rsi, rax	       150	i915_utils.h	FUNCTION_472
0x400ceaf	      0xe800000000	                          call 0x400ceb4	      1086	intel_display.c	FUNCTION_29	CALL_4
0x400ceb4	             0xf0b	                                     ud2	      1086	intel_display.c	FUNCTION_29	CALL_4
0x400ceb6	            0xeb96	                           jmp 0x400ce4e	      1086	intel_display.c	FUNCTION_29	CALL_4
ironlake_crtc_enable	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,11:ELSE,1:functions,0:CALL,31	702
0x4013420	            0x4157	                                push r15	      5361	intel_display.c	FUNCTION_164
0x4013422	            0x4156	                                push r14	      5361	intel_display.c	FUNCTION_164
0x4013424	            0x4155	                                push r13	      5361	intel_display.c	FUNCTION_164
0x4013426	            0x4154	                                push r12	      5361	intel_display.c	FUNCTION_164
0x4013428	              0x55	                                push rbp	      5361	intel_display.c	FUNCTION_164
0x4013429	              0x53	                                push rbx	      5361	intel_display.c	FUNCTION_164
0x401342a	        0x4883ec40	                           sub rsp, 0x40	      5361	intel_display.c	FUNCTION_164
0x401342e	          0x488b1f	                    mov rbx, qword [rdi]	      5362	intel_display.c	FUNCTION_164
0x4013431	    0x80bbb4040000	               cmp byte [rbx + 0x4b4], 0	      5370	intel_display.c	FUNCTION_164	IF_1	CALL_4
0x4013438	    0x8b83b0040000	           mov eax, dword [rbx + 0x4b0] 	      5366	intel_display.c	FUNCTION_164
0x401343e	          0x4c8b33	                    mov r14, qword [rbx]	      5363	intel_display.c	FUNCTION_164
0x4013441	        0x89442404	                mov dword [rsp + 4], eax	      5366	intel_display.c	FUNCTION_164
0x4013445	     0xf8529080000	                           jne 0x4013c74	      5370	intel_display.c	FUNCTION_164	IF_1	CALL_4
0x401344b	    0x488b83c80400	           mov rax, qword [rbx + 0x4c8] 	      5383	intel_display.c	FUNCTION_164	IF_2	CALL_5
0x4013452	          0x4989ff	                            mov r15, rdi	      5383	intel_display.c	FUNCTION_164	IF_2	CALL_5
0x4013455	          0x4989f4	                            mov r12, rsi	      5383	intel_display.c	FUNCTION_164	IF_2	CALL_5
0x4013458	    0x80b838020000	               cmp byte [rax + 0x238], 0	      5383	intel_display.c	FUNCTION_164	IF_2	CALL_5
0x401345f	     0xf858b030000	                           jne 0x40137f0	      5383	intel_display.c	FUNCTION_164	IF_2	CALL_5
0x4013465	    0x41f6865a0600	          test byte [r14 + 0x65a], 0x10 	      5383	intel_display.c	FUNCTION_164	IF_2	CALL_5
0x401346d	     0xf857d030000	                           jne 0x40137f0	      5383	intel_display.c	FUNCTION_164	IF_2	CALL_5
0x4013473	    0xf78044020000	        test dword [rax + 0x244], 0x980 	      5391	intel_display.c	FUNCTION_164	IF_5	CALL_9
0x401347d	     0xf85d0030000	                           jne 0x4013853	      5391	intel_display.c	FUNCTION_164	IF_5	CALL_9
0x4013483	          0x4889df	                            mov rdi, rbx	      5394	intel_display.c	FUNCTION_164	CALL_11
0x4013486	      0xe8b5d4feff	         call sym.intel_set_pipe_timings	      5394	intel_display.c	FUNCTION_164	CALL_11
0x401348b	          0x4889df	                            mov rdi, rbx	      5395	intel_display.c	FUNCTION_164	CALL_12
0x401348e	      0xe8add7feff	        call sym.intel_set_pipe_src_size	      5395	intel_display.c	FUNCTION_164	CALL_12
0x4013493	    0x488bb3c80400	           mov rsi, qword [rbx + 0x4c8] 	      5397	intel_display.c	FUNCTION_164	IF_6
0x401349a	    0x80be38020000	               cmp byte [rsi + 0x238], 0	      5397	intel_display.c	FUNCTION_164	IF_6
0x40134a1	     0xf85ec030000	                           jne 0x4013893	      5397	intel_display.c	FUNCTION_164	IF_6
0x40134a7	    0x8b86dc020000	           mov eax, dword [rsi + 0x2dc] 	      8203	intel_display.c	FUNCTION_243	SWITCH_1
0x40134ad	          0x83f818	                           cmp eax, 0x18	      8203	intel_display.c	FUNCTION_243	SWITCH_1
0x40134b0	     0xf8404040000	                            je 0x40138ba	      8203	intel_display.c	FUNCTION_243	SWITCH_1
0x40134b6	     0xf8ea6030000	                           jle 0x4013862	      8203	intel_display.c	FUNCTION_243	SWITCH_1
0x40134bc	          0x83f81e	                           cmp eax, 0x1e	      8203	intel_display.c	FUNCTION_243	SWITCH_1
0x40134bf	     0xf84a5070000	                            je 0x4013c6a	      8203	intel_display.c	FUNCTION_243	SWITCH_1
0x40134c5	          0x83f824	                           cmp eax, 0x24	      8203	intel_display.c	FUNCTION_243	SWITCH_1
0x40134c8	      0xba60000000	                           mov edx, 0x60	      8214	intel_display.c	FUNCTION_243	SWITCH_1
0x40134cd	     0xf859d030000	                           jne 0x4013870	      8203	intel_display.c	FUNCTION_243	SWITCH_1
0x40134d3	            0x89d0	                            mov eax, edx	      8222	intel_display.c	FUNCTION_243	IF_1
0x40134d5	          0x488b2b	                    mov rbp, qword [rbx]	      8196	intel_display.c	FUNCTION_243	CALL_1
0x40134d8	          0x83c810	                            or eax, 0x10	      8222	intel_display.c	FUNCTION_243	IF_1
0x40134db	    0x80be4a020000	               cmp byte [rsi + 0x24a], 0	      8222	intel_display.c	FUNCTION_243	IF_1
0x40134e2	    0x8b8d6c060000	           mov ecx, dword [rbp + 0x66c] 	      8232	intel_display.c	FUNCTION_243	CALL_5
0x40134e8	    0x4c8b85180800	            mov r8, qword [rbp + 0x818] 	      8232	intel_display.c	FUNCTION_243	CALL_5
0x40134ef	          0x4889ef	                            mov rdi, rbp	      8232	intel_display.c	FUNCTION_243	CALL_5
0x40134f2	           0xf45d0	                         cmovne edx, eax	      8222	intel_display.c	FUNCTION_243	IF_1
0x40134f5	            0x89d0	                            mov eax, edx	      8225	intel_display.c	FUNCTION_243	IF_2
0x40134f7	       0xd00006000	                        or eax, 0x600000	      8225	intel_display.c	FUNCTION_243	IF_2
0x40134fc	    0xf6869c000000	           test byte [rsi + 0x9c], 0x10 	      8225	intel_display.c	FUNCTION_243	IF_2
0x4013503	           0xf45d0	                         cmovne edx, eax	      8225	intel_display.c	FUNCTION_243	IF_2
0x4013506	            0x89d0	                            mov eax, edx	      8230	intel_display.c	FUNCTION_243	IF_3
0x4013508	          0x80cc20	                             or ah, 0x20	      8230	intel_display.c	FUNCTION_243	IF_3
0x401350b	    0x80be40020000	               cmp byte [rsi + 0x240], 0	      8230	intel_display.c	FUNCTION_243	IF_3
0x4013512	           0xf45d0	                         cmovne edx, eax	      8230	intel_display.c	FUNCTION_243	IF_3
0x4013515	    0x486383b00400	        movsxd rax, dword [rbx + 0x4b0] 	      8230	intel_display.c	FUNCTION_243	IF_3
0x401351c	      0x4c8d6c8500	                  lea r13, [rbp + rax*4]	      8230	intel_display.c	FUNCTION_243	IF_3
0x4013521	    0x418b85800600	           mov eax, dword [r13 + 0x680] 	      8232	intel_display.c	FUNCTION_243	CALL_5
0x4013528	    0x2b8580060000	            sub eax, dword [rbp + 0x680]	      8232	intel_display.c	FUNCTION_243	CALL_5
0x401352e	    0x8db408080007	          lea esi, [rax + rcx + 0x70008]	      8232	intel_display.c	FUNCTION_243	CALL_5
0x4013535	      0xb901000000	                              mov ecx, 1	      8232	intel_display.c	FUNCTION_243	CALL_5
0x401353a	      0xe800000000	                          call 0x401353f	      8232	intel_display.c	FUNCTION_243	CALL_5
0x401353f	    0x418b85800600	           mov eax, dword [r13 + 0x680] 	      8233	intel_display.c	FUNCTION_243	CALL_7
0x4013546	    0x2b8580060000	            sub eax, dword [rbp + 0x680]	      8233	intel_display.c	FUNCTION_243	CALL_7
0x401354c	          0x4889ef	                            mov rdi, rbp	      8233	intel_display.c	FUNCTION_243	CALL_7
0x401354f	    0x8b956c060000	           mov edx, dword [rbp + 0x66c] 	      8233	intel_display.c	FUNCTION_243	CALL_7
0x4013555	    0x488b8df80700	           mov rcx, qword [rbp + 0x7f8] 	      8233	intel_display.c	FUNCTION_243	CALL_7
0x401355c	    0x8db410080007	          lea esi, [rax + rdx + 0x70008]	      8233	intel_display.c	FUNCTION_243	CALL_7
0x4013563	            0x31d2	                            xor edx, edx	      8233	intel_display.c	FUNCTION_243	CALL_7
0x4013565	      0xe800000000	                          call 0x401356a	      8233	intel_display.c	FUNCTION_243	CALL_7
0x401356a	      0x498d442428	                   lea rax, [r12 + 0x28]	      8233	intel_display.c	FUNCTION_243	CALL_7
0x401356f	      0x498d4c2430	                   lea rcx, [r12 + 0x30]	      8233	intel_display.c	FUNCTION_243	CALL_7
0x4013574	    0xc683b4040000	               mov byte [rbx + 0x4b4], 1	      5404	intel_display.c	FUNCTION_164
0x401357b	          0x4c89fe	                            mov rsi, r15	      5406	intel_display.c	FUNCTION_164	CALL_15
0x401357e	          0x4889df	                            mov rdi, rbx	      5406	intel_display.c	FUNCTION_164	CALL_15
0x4013581	          0x4889c2	                            mov rdx, rax	      5406	intel_display.c	FUNCTION_164	CALL_15
0x4013584	      0x4889442408	                mov qword [rsp + 8], rax	      5406	intel_display.c	FUNCTION_164	CALL_15
0x4013589	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      5406	intel_display.c	FUNCTION_164	CALL_15
0x401358e	      0xe85d2effff	call sym.intel_encoders_pre_enable.isra.97	      5406	intel_display.c	FUNCTION_164	CALL_15
0x4013593	    0x488b83c80400	           mov rax, qword [rbx + 0x4c8] 	      5408	intel_display.c	FUNCTION_164	IF_7
0x401359a	    0x80b838020000	               cmp byte [rax + 0x238], 0	      5408	intel_display.c	FUNCTION_164	IF_7
0x40135a1	     0xf84cb020000	                            je 0x4013872	      5408	intel_display.c	FUNCTION_164	IF_7
0x40135a7	    0x8b8bb0040000	           mov ecx, dword [rbx + 0x4b0] 	      4219	intel_display.c	FUNCTION_128
0x40135ad	          0x4c8b2b	                    mov r13, qword [rbx]	      4217	intel_display.c	FUNCTION_128
0x40135b0	      0xba01000000	                              mov edx, 1	      4225	intel_display.c	FUNCTION_128	CALL_3
0x40135b5	          0x4189c9	                            mov r9d, ecx	      4224	intel_display.c	FUNCTION_128	CALL_2
0x40135b8	        0x894c2428	             mov dword [rsp + 0x28], ecx	      4224	intel_display.c	FUNCTION_128	CALL_2
0x40135bc	          0x4c89ef	                            mov rdi, r13	      4225	intel_display.c	FUNCTION_128	CALL_3
0x40135bf	        0x41c1e10c	                            shl r9d, 0xc	      4224	intel_display.c	FUNCTION_128	CALL_2
0x40135c3	    0x418d810c000f	                 lea eax, [r9 + 0xf000c]	      4224	intel_display.c	FUNCTION_128	CALL_2
0x40135ca	      0x44894c2424	             mov dword [rsp + 0x24], r9d	      4224	intel_display.c	FUNCTION_128	CALL_2
0x40135cf	            0x89c5	                            mov ebp, eax	      4224	intel_display.c	FUNCTION_128	CALL_2
0x40135d1	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      4225	intel_display.c	FUNCTION_128	CALL_3
0x40135d8	            0x89ee	                            mov esi, ebp	      4225	intel_display.c	FUNCTION_128	CALL_3
0x40135da	        0x896c2418	             mov dword [rsp + 0x18], ebp	      4225	intel_display.c	FUNCTION_128	CALL_3
0x40135de	      0xe800000000	                          call 0x40135e3	      4225	intel_display.c	FUNCTION_128	CALL_3
0x40135e3	      0x48634c2428	         movsxd rcx, dword [rsp + 0x28] 	      4228	intel_display.c	FUNCTION_128	CALL_6
0x40135e8	        0x89442420	             mov dword [rsp + 0x20], eax	      4225	intel_display.c	FUNCTION_128	CALL_3
0x40135ec	          0x4c89ef	                            mov rdi, r13	      4228	intel_display.c	FUNCTION_128	CALL_6
0x40135ef	    0x488b83c80400	           mov rax, qword [rbx + 0x4c8] 	      4227	intel_display.c	FUNCTION_128	CALL_4
0x40135f6	    0x418b956c0600	           mov edx, dword [r13 + 0x66c] 	      4228	intel_display.c	FUNCTION_128	CALL_6
0x40135fd	    0x4d8b95f80700	           mov r10, qword [r13 + 0x7f8] 	      4228	intel_display.c	FUNCTION_128	CALL_6
0x4013604	    0x8ba830030000	           mov ebp, dword [rax + 0x330] 	      4228	intel_display.c	FUNCTION_128	CALL_6
0x401360a	    0x418b848d8006	   mov eax, dword [r13 + rcx*4 + 0x680] 	      4228	intel_display.c	FUNCTION_128	CALL_6
0x4013612	    0x412b85800600	            sub eax, dword [r13 + 0x680]	      4228	intel_display.c	FUNCTION_128	CALL_6
0x4013619	          0x83ed01	                              sub ebp, 1	      4228	intel_display.c	FUNCTION_128	CALL_6
0x401361c	          0xc1e513	                           shl ebp, 0x13	      4228	intel_display.c	FUNCTION_128	CALL_6
0x401361f	    0x8db410080007	          lea esi, [rax + rdx + 0x70008]	      4228	intel_display.c	FUNCTION_128	CALL_6
0x4013626	      0xba01000000	                              mov edx, 1	      4228	intel_display.c	FUNCTION_128	CALL_6
0x401362b	    0x81cd00200000	                          or ebp, 0x2000	      4228	intel_display.c	FUNCTION_128	CALL_6
0x4013631	      0xe800000000	                          call 0x4013636	      4228	intel_display.c	FUNCTION_128	CALL_6
0x4013636	        0x8b542420	            mov edx, dword [rsp + 0x20] 	      4229	intel_display.c	FUNCTION_128	CALL_7
0x401363a	      0x25e0000000	                           and eax, 0xe0	      4229	intel_display.c	FUNCTION_128	CALL_7
0x401363f	      0xb901000000	                              mov ecx, 1	      4229	intel_display.c	FUNCTION_128	CALL_7
0x4013644	          0xc1e00b	                            shl eax, 0xb	      4229	intel_display.c	FUNCTION_128	CALL_7
0x4013647	          0x4c89ef	                            mov rdi, r13	      4229	intel_display.c	FUNCTION_128	CALL_7
0x401364a	    0x81e2ffffc0ff	                     and edx, 0xffc0ffff	      4229	intel_display.c	FUNCTION_128	CALL_7
0x4013650	             0x9d5	                             or ebp, edx	      4229	intel_display.c	FUNCTION_128	CALL_7
0x4013652	            0x89c2	                            mov edx, eax	      4229	intel_display.c	FUNCTION_128	CALL_7
0x4013654	    0x498b85180800	           mov rax, qword [r13 + 0x818] 	      4229	intel_display.c	FUNCTION_128	CALL_7
0x401365b	             0x9ea	                             or edx, ebp	      4229	intel_display.c	FUNCTION_128	CALL_7
0x401365d	        0x8b6c2418	            mov ebp, dword [rsp + 0x18] 	      4229	intel_display.c	FUNCTION_128	CALL_7
0x4013661	            0x89ee	                            mov esi, ebp	      4229	intel_display.c	FUNCTION_128	CALL_7
0x4013663	      0xe800000000	                          call 0x4013668	      4229	intel_display.c	FUNCTION_128	CALL_7
0x4013668	            0x31d2	                            xor edx, edx	      4231	intel_display.c	FUNCTION_128	CALL_8
0x401366a	            0x89ee	                            mov esi, ebp	      4231	intel_display.c	FUNCTION_128	CALL_8
0x401366c	          0x4c89ef	                            mov rdi, r13	      4231	intel_display.c	FUNCTION_128	CALL_8
0x401366f	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      4231	intel_display.c	FUNCTION_128	CALL_8
0x4013676	      0xe800000000	                          call 0x401367b	      4231	intel_display.c	FUNCTION_128	CALL_8
0x401367b	      0xbf781b0d00	                        mov edi, 0xd1b78	      4232	intel_display.c	FUNCTION_128	CALL_9
0x4013680	      0xe800000000	                          call 0x4013685	      4232	intel_display.c	FUNCTION_128	CALL_9
0x4013685	            0x89ee	                            mov esi, ebp	      4235	intel_display.c	FUNCTION_128	CALL_10
0x4013687	      0xba01000000	                              mov edx, 1	      4235	intel_display.c	FUNCTION_128	CALL_10
0x401368c	          0x4c89ef	                            mov rdi, r13	      4235	intel_display.c	FUNCTION_128	CALL_10
0x401368f	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      4235	intel_display.c	FUNCTION_128	CALL_10
0x4013696	      0xe800000000	                          call 0x401369b	      4235	intel_display.c	FUNCTION_128	CALL_10
0x401369b	          0x83c810	                            or eax, 0x10	      4236	intel_display.c	FUNCTION_128	CALL_11
0x401369e	      0xb901000000	                              mov ecx, 1	      4236	intel_display.c	FUNCTION_128	CALL_11
0x40136a3	            0x89ee	                            mov esi, ebp	      4236	intel_display.c	FUNCTION_128	CALL_11
0x40136a5	            0x89c2	                            mov edx, eax	      4236	intel_display.c	FUNCTION_128	CALL_11
0x40136a7	          0x4c89ef	                            mov rdi, r13	      4236	intel_display.c	FUNCTION_128	CALL_11
0x40136aa	    0x498b85180800	           mov rax, qword [r13 + 0x818] 	      4236	intel_display.c	FUNCTION_128	CALL_11
0x40136b1	      0xe800000000	                          call 0x40136b6	      4236	intel_display.c	FUNCTION_128	CALL_11
0x40136b6	            0x31d2	                            xor edx, edx	      4238	intel_display.c	FUNCTION_128	CALL_12
0x40136b8	            0x89ee	                            mov esi, ebp	      4238	intel_display.c	FUNCTION_128	CALL_12
0x40136ba	          0x4c89ef	                            mov rdi, r13	      4238	intel_display.c	FUNCTION_128	CALL_12
0x40136bd	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      4238	intel_display.c	FUNCTION_128	CALL_12
0x40136c4	      0xe800000000	                          call 0x40136c9	      4238	intel_display.c	FUNCTION_128	CALL_12
0x40136c9	      0xbf781b0d00	                        mov edi, 0xd1b78	      4239	intel_display.c	FUNCTION_128	CALL_13
0x40136ce	      0xe800000000	                          call 0x40136d3	      4239	intel_display.c	FUNCTION_128	CALL_13
0x40136d3	      0x448b4c2424	            mov r9d, dword [rsp + 0x24] 	      4242	intel_display.c	FUNCTION_128	CALL_14
0x40136d8	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      4243	intel_display.c	FUNCTION_128	CALL_15
0x40136df	      0xba01000000	                              mov edx, 1	      4243	intel_display.c	FUNCTION_128	CALL_15
0x40136e4	          0x4c89ef	                            mov rdi, r13	      4243	intel_display.c	FUNCTION_128	CALL_15
0x40136e7	    0x418da9000106	                 lea ebp, [r9 + 0x60100]	      4242	intel_display.c	FUNCTION_128	CALL_14
0x40136ee	            0x89ee	                            mov esi, ebp	      4243	intel_display.c	FUNCTION_128	CALL_15
0x40136f0	      0xe800000000	                          call 0x40136f5	      4243	intel_display.c	FUNCTION_128	CALL_15
0x40136f5	          0xf6c440	                           test ah, 0x40	      4244	intel_display.c	FUNCTION_128	IF_1
0x40136f8	            0x7538	                           jne 0x4013732	      4244	intel_display.c	FUNCTION_128	IF_1
0x40136fa	          0x80cc40	                             or ah, 0x40	      4245	intel_display.c	FUNCTION_128	IF_1	CALL_16
0x40136fd	      0xb901000000	                              mov ecx, 1	      4245	intel_display.c	FUNCTION_128	IF_1	CALL_16
0x4013702	            0x89ee	                            mov esi, ebp	      4245	intel_display.c	FUNCTION_128	IF_1	CALL_16
0x4013704	            0x89c2	                            mov edx, eax	      4245	intel_display.c	FUNCTION_128	IF_1	CALL_16
0x4013706	          0x4c89ef	                            mov rdi, r13	      4245	intel_display.c	FUNCTION_128	IF_1	CALL_16
0x4013709	    0x498b85180800	           mov rax, qword [r13 + 0x818] 	      4245	intel_display.c	FUNCTION_128	IF_1	CALL_16
0x4013710	      0xe800000000	                          call 0x4013715	      4245	intel_display.c	FUNCTION_128	IF_1	CALL_16
0x4013715	          0x4c89ef	                            mov rdi, r13	      4247	intel_display.c	FUNCTION_128	IF_1	CALL_17
0x4013718	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      4247	intel_display.c	FUNCTION_128	IF_1	CALL_17
0x401371f	            0x31d2	                            xor edx, edx	      4247	intel_display.c	FUNCTION_128	IF_1	CALL_17
0x4013721	            0x89ee	                            mov esi, ebp	      4247	intel_display.c	FUNCTION_128	IF_1	CALL_17
0x4013723	      0xe800000000	                          call 0x4013728	      4247	intel_display.c	FUNCTION_128	IF_1	CALL_17
0x4013728	      0xbfbc8d0600	                        mov edi, 0x68dbc	      4248	intel_display.c	FUNCTION_128	IF_1	CALL_18
0x401372d	      0xe800000000	                          call 0x4013732	      4248	intel_display.c	FUNCTION_128	IF_1	CALL_18
0x4013732	          0x4889df	                            mov rdi, rbx	      5418	intel_display.c	FUNCTION_164	CALL_19
0x4013735	      0xe8a6cdfeff	           call sym.ironlake_pfit_enable	      5418	intel_display.c	FUNCTION_164	CALL_19
0x401373a	          0x4c89ff	                            mov rdi, r15	      5424	intel_display.c	FUNCTION_164	CALL_20
0x401373d	      0xe800000000	                          call 0x4013742	      5424	intel_display.c	FUNCTION_164	CALL_20
0x4013742	    0x498b86605500	          mov rax, qword [r14 + 0x5560] 	      5426	intel_display.c	FUNCTION_164	IF_8
0x4013749	          0x4885c0	                           test rax, rax	      5426	intel_display.c	FUNCTION_164	IF_8
0x401374c	            0x740f	                            je 0x401375d	      5426	intel_display.c	FUNCTION_164	IF_8
0x401374e	    0x488bb3c80400	           mov rsi, qword [rbx + 0x4c8] 	      5427	intel_display.c	FUNCTION_164	CALL_21
0x4013755	          0x4c89e7	                            mov rdi, r12	      5427	intel_display.c	FUNCTION_164	CALL_21
0x4013758	      0xe800000000	                          call 0x401375d	      5427	intel_display.c	FUNCTION_164	CALL_21
0x401375d	          0x4c89ff	                            mov rdi, r15	      5428	intel_display.c	FUNCTION_164	CALL_22
0x4013760	      0xe8eb97ffff	              call sym.intel_enable_pipe	      5428	intel_display.c	FUNCTION_164	CALL_22
0x4013765	    0x488b83c80400	           mov rax, qword [rbx + 0x4c8] 	      5430	intel_display.c	FUNCTION_164	IF_9
0x401376c	    0x80b838020000	               cmp byte [rax + 0x238], 0	      5430	intel_display.c	FUNCTION_164	IF_9
0x4013773	     0xf8548010000	                           jne 0x40138c1	      5430	intel_display.c	FUNCTION_164	IF_9
0x4013779	          0x4889df	                            mov rdi, rbx	      5433	intel_display.c	FUNCTION_164	CALL_24
0x401377c	      0xe82f0fffff	         call sym.assert_vblank_disabled	      5433	intel_display.c	FUNCTION_164	CALL_24
0x4013781	          0x4889df	                            mov rdi, rbx	      5434	intel_display.c	FUNCTION_164	CALL_25
0x4013784	      0xe800000000	                          call 0x4013789	      5434	intel_display.c	FUNCTION_164	CALL_25
0x4013789	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      5436	intel_display.c	FUNCTION_164	CALL_26
0x401378e	      0x488b542408	                mov rdx, qword [rsp + 8]	      5436	intel_display.c	FUNCTION_164	CALL_26
0x4013793	          0x4c89fe	                            mov rsi, r15	      5436	intel_display.c	FUNCTION_164	CALL_26
0x4013796	          0x4889df	                            mov rdi, rbx	      5436	intel_display.c	FUNCTION_164	CALL_26
0x4013799	      0xe8222dffff	  call sym.intel_encoders_enable.isra.99	      5436	intel_display.c	FUNCTION_164	CALL_26
0x401379e	    0x4183bef85500	            cmp dword [r14 + 0x55f8], 2 	      5438	intel_display.c	FUNCTION_164	IF_10	CALL_27
0x40137a6	     0xf84ec040000	                            je 0x4013c98	      5438	intel_display.c	FUNCTION_164	IF_10	CALL_27
0x40137ac	    0x488b83c80400	           mov rax, qword [rbx + 0x4c8] 	      5442	intel_display.c	FUNCTION_164	IF_11
0x40137b3	    0x80b838020000	               cmp byte [rax + 0x238], 0	      5442	intel_display.c	FUNCTION_164	IF_11
0x40137ba	     0xf8573040000	                           jne 0x4013c33	      5442	intel_display.c	FUNCTION_164	IF_11
0x40137c0	        0x8b5c2404	                mov ebx, dword [rsp + 4]	      5444	intel_display.c	FUNCTION_164	CALL_30
0x40137c4	          0x4c89f7	                            mov rdi, r14	      5444	intel_display.c	FUNCTION_164	CALL_30
0x40137c7	      0xba01000000	                              mov edx, 1	      5444	intel_display.c	FUNCTION_164	CALL_30
0x40137cc	            0x89de	                            mov esi, ebx	      5444	intel_display.c	FUNCTION_164	CALL_30
0x40137ce	      0xe800000000	                          call 0x40137d3	      5444	intel_display.c	FUNCTION_164	CALL_30
0x40137d3	        0x4883c440	                           add rsp, 0x40	      5446	intel_display.c	FUNCTION_164
0x40137d7	            0x89de	                            mov esi, ebx	      5445	intel_display.c	FUNCTION_164	CALL_31
0x40137d9	          0x4c89f7	                            mov rdi, r14	      5445	intel_display.c	FUNCTION_164	CALL_31
0x40137dc	              0x5b	                                 pop rbx	      5446	intel_display.c	FUNCTION_164
0x40137dd	              0x5d	                                 pop rbp	      5446	intel_display.c	FUNCTION_164
0x40137de	            0x415c	                                 pop r12	      5446	intel_display.c	FUNCTION_164
0x40137e0	            0x415d	                                 pop r13	      5446	intel_display.c	FUNCTION_164
0x40137e2	            0x415e	                                 pop r14	      5446	intel_display.c	FUNCTION_164
0x40137e4	            0x415f	                                 pop r15	      5446	intel_display.c	FUNCTION_164
0x40137e6	      0xba01000000	                              mov edx, 1	      5445	intel_display.c	FUNCTION_164	CALL_31
0x40137eb	      0xe900000000	                           jmp 0x40137f0	      5445	intel_display.c	FUNCTION_164	CALL_31
0x40137f0	        0x8b6c2404	                mov ebp, dword [rsp + 4]	      5384	intel_display.c	FUNCTION_164	CALL_6
0x40137f4	            0x31d2	                            xor edx, edx	      5384	intel_display.c	FUNCTION_164	CALL_6
0x40137f6	          0x4c89f7	                            mov rdi, r14	      5384	intel_display.c	FUNCTION_164	CALL_6
0x40137f9	            0x89ee	                            mov esi, ebp	      5384	intel_display.c	FUNCTION_164	CALL_6
0x40137fb	      0xe800000000	                          call 0x4013800	      5384	intel_display.c	FUNCTION_164	CALL_6
0x4013800	    0x488b83c80400	           mov rax, qword [rbx + 0x4c8] 	      5385	intel_display.c	FUNCTION_164	IF_3
0x4013807	    0x80b838020000	               cmp byte [rax + 0x238], 0	      5385	intel_display.c	FUNCTION_164	IF_3
0x401380e	     0xf845ffcffff	                            je 0x4013473	      5385	intel_display.c	FUNCTION_164	IF_3
0x4013814	            0x31d2	                            xor edx, edx	      5386	intel_display.c	FUNCTION_164	CALL_7
0x4013816	            0x89ee	                            mov esi, ebp	      5386	intel_display.c	FUNCTION_164	CALL_7
0x4013818	          0x4c89f7	                            mov rdi, r14	      5386	intel_display.c	FUNCTION_164	CALL_7
0x401381b	      0xe800000000	                          call 0x4013820	      5386	intel_display.c	FUNCTION_164	CALL_7
0x4013820	    0x488b83c80400	           mov rax, qword [rbx + 0x4c8] 	      5386	intel_display.c	FUNCTION_164	CALL_7
0x4013827	    0x80b838020000	               cmp byte [rax + 0x238], 0	      5388	intel_display.c	FUNCTION_164	IF_4
0x401382e	     0xf843ffcffff	                            je 0x4013473	      5388	intel_display.c	FUNCTION_164	IF_4
0x4013834	          0x4889df	                            mov rdi, rbx	      5389	intel_display.c	FUNCTION_164	CALL_8
0x4013837	      0xe800000000	                          call 0x401383c	      5389	intel_display.c	FUNCTION_164	CALL_8
0x401383c	    0x488b83c80400	           mov rax, qword [rbx + 0x4c8] 	      5389	intel_display.c	FUNCTION_164	CALL_8
0x4013843	    0xf78044020000	        test dword [rax + 0x244], 0x980 	      5391	intel_display.c	FUNCTION_164	IF_5	CALL_9
0x401384d	     0xf8430fcffff	                            je 0x4013483	      5391	intel_display.c	FUNCTION_164	IF_5	CALL_9
0x4013853	            0x31f6	                            xor esi, esi	      5392	intel_display.c	FUNCTION_164	CALL_10
0x4013855	          0x4889df	                            mov rdi, rbx	      5392	intel_display.c	FUNCTION_164	CALL_10
0x4013858	      0xe800000000	                          call 0x401385d	      5392	intel_display.c	FUNCTION_164	CALL_10
0x401385d	      0xe921fcffff	                           jmp 0x4013483	      5392	intel_display.c	FUNCTION_164	CALL_10
0x4013862	          0x83f812	                           cmp eax, 0x12	      8203	intel_display.c	FUNCTION_243	SWITCH_1
0x4013865	      0xba40000000	                           mov edx, 0x40	      8205	intel_display.c	FUNCTION_243	SWITCH_1
0x401386a	     0xf8463fcffff	                            je 0x40134d3	      8203	intel_display.c	FUNCTION_243	SWITCH_1
0x4013870	             0xf0b	                                     ud2	      8203	intel_display.c	FUNCTION_243	SWITCH_1
0x4013872	        0x8b6c2404	                mov ebp, dword [rsp + 4]	      5414	intel_display.c	FUNCTION_164	ELSE_1	CALL_17
0x4013876	            0x31d2	                            xor edx, edx	      5414	intel_display.c	FUNCTION_164	ELSE_1	CALL_17
0x4013878	          0x4c89f7	                            mov rdi, r14	      5414	intel_display.c	FUNCTION_164	ELSE_1	CALL_17
0x401387b	            0x89ee	                            mov esi, ebp	      5414	intel_display.c	FUNCTION_164	ELSE_1	CALL_17
0x401387d	      0xe8eeecfeff	                  call sym.assert_fdi_tx	      5414	intel_display.c	FUNCTION_164	ELSE_1	CALL_17
0x4013882	            0x31d2	                            xor edx, edx	      5415	intel_display.c	FUNCTION_164	ELSE_1	CALL_18
0x4013884	            0x89ee	                            mov esi, ebp	      5415	intel_display.c	FUNCTION_164	ELSE_1	CALL_18
0x4013886	          0x4c89f7	                            mov rdi, r14	      5415	intel_display.c	FUNCTION_164	ELSE_1	CALL_18
0x4013889	      0xe882eafeff	                  call sym.assert_fdi_rx	      5415	intel_display.c	FUNCTION_164	ELSE_1	CALL_18
0x401388e	      0xe99ffeffff	                           jmp 0x4013732	      5415	intel_display.c	FUNCTION_164	ELSE_1	CALL_18
0x4013893	    0x4881c6340300	                          add rsi, 0x334	      5398	intel_display.c	FUNCTION_164	IF_6	CALL_13
0x401389a	            0x31d2	                            xor edx, edx	      5398	intel_display.c	FUNCTION_164	IF_6	CALL_13
0x401389c	          0x4889df	                            mov rdi, rbx	      5398	intel_display.c	FUNCTION_164	IF_6	CALL_13
0x401389f	      0xe8eccdfeff	   call sym.intel_cpu_transcoder_set_m_n	      5398	intel_display.c	FUNCTION_164	IF_6	CALL_13
0x40138a4	    0x488bb3c80400	           mov rsi, qword [rbx + 0x4c8] 	      5398	intel_display.c	FUNCTION_164	IF_6	CALL_13
0x40138ab	    0x8b86dc020000	           mov eax, dword [rsi + 0x2dc] 	      8203	intel_display.c	FUNCTION_243	SWITCH_1
0x40138b1	          0x83f818	                           cmp eax, 0x18	      8203	intel_display.c	FUNCTION_243	SWITCH_1
0x40138b4	     0xf85fcfbffff	                           jne 0x40134b6	      8203	intel_display.c	FUNCTION_243	SWITCH_1
0x40138ba	            0x31d2	                            xor edx, edx	      8208	intel_display.c	FUNCTION_243	SWITCH_1
0x40138bc	      0xe912fcffff	                           jmp 0x40134d3	      8208	intel_display.c	FUNCTION_243	SWITCH_1
0x40138c1	          0x498b2f	                    mov rbp, qword [r15]	      4584	intel_display.c	FUNCTION_139	CALL_1
0x40138c4	        0x4c8b6500	                    mov r12, qword [rbp]	      4585	intel_display.c	FUNCTION_139
0x40138c8	    0x8b85b0040000	           mov eax, dword [rbp + 0x4b0] 	      4587	intel_display.c	FUNCTION_139
0x40138ce	          0x4c89e7	                            mov rdi, r12	      4590	intel_display.c	FUNCTION_139	CALL_3
0x40138d1	            0x89c6	                            mov esi, eax	      4590	intel_display.c	FUNCTION_139	CALL_3
0x40138d3	        0x89442420	             mov dword [rsp + 0x20], eax	      4587	intel_display.c	FUNCTION_139
0x40138d7	      0xe800000000	                          call 0x40138dc	      4590	intel_display.c	FUNCTION_139	CALL_3
0x40138dc	    0x41f684246606	              test byte [r12 + 0x666], 2	      4592	intel_display.c	FUNCTION_139	IF_1	CALL_4
0x40138e5	     0xf8559030000	                           jne 0x4013c44	      4592	intel_display.c	FUNCTION_139	IF_1	CALL_4
0x40138eb	      0x48637c2420	         movsxd rdi, dword [rsp + 0x20] 	      4592	intel_display.c	FUNCTION_139	IF_1	CALL_4
0x40138f0	    0x418b94246c06	           mov edx, dword [r12 + 0x66c] 	      4597	intel_display.c	FUNCTION_139	CALL_7
0x40138f8	    0x4d8bac241808	           mov r13, qword [r12 + 0x818] 	      4597	intel_display.c	FUNCTION_139	CALL_7
0x4013900	    0x498b8c24f807	           mov rcx, qword [r12 + 0x7f8] 	      4597	intel_display.c	FUNCTION_139	CALL_7
0x4013908	      0x48897c2438	             mov qword [rsp + 0x38], rdi	      4597	intel_display.c	FUNCTION_139	CALL_7
0x401390d	        0x498d3cbc	                  lea rdi, [r12 + rdi*4]	      4597	intel_display.c	FUNCTION_139	CALL_7
0x4013911	    0x8b8798060000	           mov eax, dword [rdi + 0x698] 	      4597	intel_display.c	FUNCTION_139	CALL_7
0x4013917	    0x412b84249806	            sub eax, dword [r12 + 0x698]	      4597	intel_display.c	FUNCTION_139	CALL_7
0x401391f	      0x48897c2428	             mov qword [rsp + 0x28], rdi	      4597	intel_display.c	FUNCTION_139	CALL_7
0x4013924	          0x4c89e7	                            mov rdi, r12	      4597	intel_display.c	FUNCTION_139	CALL_7
0x4013927	    0x8db410300006	          lea esi, [rax + rdx + 0x60030]	      4597	intel_display.c	FUNCTION_139	CALL_7
0x401392e	      0xba01000000	                              mov edx, 1	      4597	intel_display.c	FUNCTION_139	CALL_7
0x4013933	      0xe800000000	                          call 0x4013938	      4597	intel_display.c	FUNCTION_139	CALL_7
0x4013938	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      4597	intel_display.c	FUNCTION_139	CALL_7
0x401393c	      0x250000007e	                     and eax, 0x7e000000	      4597	intel_display.c	FUNCTION_139	CALL_7
0x4013941	          0x4c89e7	                            mov rdi, r12	      4597	intel_display.c	FUNCTION_139	CALL_7
0x4013944	            0x89c2	                            mov edx, eax	      4597	intel_display.c	FUNCTION_139	CALL_7
0x4013946	          0xc1e10c	                            shl ecx, 0xc	      4597	intel_display.c	FUNCTION_139	CALL_7
0x4013949	    0x8db130000f00	                lea esi, [rcx + 0xf0030]	      4597	intel_display.c	FUNCTION_139	CALL_7
0x401394f	        0x894c2424	             mov dword [rsp + 0x24], ecx	      4597	intel_display.c	FUNCTION_139	CALL_7
0x4013953	      0xb901000000	                              mov ecx, 1	      4597	intel_display.c	FUNCTION_139	CALL_7
0x4013958	      0xe800000000	                          call 0x401395d	      4597	intel_display.c	FUNCTION_139	CALL_7
0x401395d	    0x498b8424d055	          mov rax, qword [r12 + 0x55d0] 	      4601	intel_display.c	FUNCTION_139	CALL_10
0x4013965	          0x4c89fe	                            mov rsi, r15	      4601	intel_display.c	FUNCTION_139	CALL_10
0x4013968	          0x4889ef	                            mov rdi, rbp	      4601	intel_display.c	FUNCTION_139	CALL_10
0x401396b	      0xe800000000	                          call 0x4013970	      4601	intel_display.c	FUNCTION_139	CALL_10
0x4013970	    0x4183bc24f855	            cmp dword [r12 + 0x55f8], 2 	      4605	intel_display.c	FUNCTION_139	IF_2	CALL_11
0x4013979	     0xf84f4050000	                            je 0x4013f73	      4605	intel_display.c	FUNCTION_139	IF_2	CALL_11
0x401397f	          0x4889ef	                            mov rdi, rbp	      4626	intel_display.c	FUNCTION_139	CALL_17
0x4013982	      0xe800000000	                          call 0x4013987	      4626	intel_display.c	FUNCTION_139	CALL_17
0x4013987	      0x448b6c2420	           mov r13d, dword [rsp + 0x20] 	      4629	intel_display.c	FUNCTION_139	CALL_18
0x401398c	          0x4c89e7	                            mov rdi, r12	      4629	intel_display.c	FUNCTION_139	CALL_18
0x401398f	          0x4489ee	                           mov esi, r13d	      4629	intel_display.c	FUNCTION_139	CALL_18
0x4013992	      0xe800000000	                          call 0x4013997	      4629	intel_display.c	FUNCTION_139	CALL_18
0x4013997	    0x488bb5c80400	           mov rsi, qword [rbp + 0x4c8] 	      4630	intel_display.c	FUNCTION_139	CALL_19
0x401399e	        0x488b7d00	                    mov rdi, qword [rbp]	      4630	intel_display.c	FUNCTION_139	CALL_19
0x40139a2	          0x4489ea	                           mov edx, r13d	      4630	intel_display.c	FUNCTION_139	CALL_19
0x40139a5	      0xe8a620ffff	call sym.ironlake_pch_transcoder_set_timings.isra.69	      4630	intel_display.c	FUNCTION_139	CALL_19
0x40139aa	    0x8b85b0040000	           mov eax, dword [rbp + 0x4b0] 	      3829	intel_display.c	FUNCTION_124	CALL_2
0x40139b0	        0x4c8b6d00	                    mov r13, qword [rbp]	      3829	intel_display.c	FUNCTION_124	CALL_2
0x40139b4	      0xba01000000	                              mov edx, 1	      3830	intel_display.c	FUNCTION_124	CALL_3
0x40139b9	          0xc1e00c	                            shl eax, 0xc	      3829	intel_display.c	FUNCTION_124	CALL_2
0x40139bc	          0x4c89ef	                            mov rdi, r13	      3830	intel_display.c	FUNCTION_124	CALL_3
0x40139bf	    0x448d88000106	                lea r9d, [rax + 0x60100]	      3829	intel_display.c	FUNCTION_124	CALL_2
0x40139c6	        0x89442418	             mov dword [rsp + 0x18], eax	      3829	intel_display.c	FUNCTION_124	CALL_2
0x40139ca	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      3830	intel_display.c	FUNCTION_124	CALL_3
0x40139d1	          0x4489ce	                            mov esi, r9d	      3830	intel_display.c	FUNCTION_124	CALL_3
0x40139d4	      0x44894c2430	             mov dword [rsp + 0x30], r9d	      3830	intel_display.c	FUNCTION_124	CALL_3
0x40139d9	      0xe800000000	                          call 0x40139de	      3830	intel_display.c	FUNCTION_124	CALL_3
0x40139de	            0x89c2	                            mov edx, eax	      3836	intel_display.c	FUNCTION_124	ELSE_1
0x40139e0	      0x448b4c2430	            mov r9d, dword [rsp + 0x30] 	      3831	intel_display.c	FUNCTION_124	IF_1	CALL_4
0x40139e5	    0x81ca00000430	                      or edx, 0x30040000	      3836	intel_display.c	FUNCTION_124	ELSE_1
0x40139eb	    0x41f685660600	              test byte [r13 + 0x666], 2	      3831	intel_display.c	FUNCTION_124	IF_1	CALL_4
0x40139f3	            0x7407	                            je 0x40139fc	      3831	intel_display.c	FUNCTION_124	IF_1	CALL_4
0x40139f5	       0xd00030400	                         or eax, 0x40300	      3833	intel_display.c	FUNCTION_124	IF_1
0x40139fa	            0x89c2	                            mov edx, eax	      3833	intel_display.c	FUNCTION_124	IF_1
0x40139fc	          0x4489ce	                            mov esi, r9d	      3838	intel_display.c	FUNCTION_124	CALL_5
0x40139ff	    0x498b85180800	           mov rax, qword [r13 + 0x818] 	      3838	intel_display.c	FUNCTION_124	CALL_5
0x4013a06	      0xb901000000	                              mov ecx, 1	      3838	intel_display.c	FUNCTION_124	CALL_5
0x4013a0b	          0x4c89ef	                            mov rdi, r13	      3838	intel_display.c	FUNCTION_124	CALL_5
0x4013a0e	      0xe800000000	                          call 0x4013a13	      3838	intel_display.c	FUNCTION_124	CALL_5
0x4013a13	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      3840	intel_display.c	FUNCTION_124	CALL_6
0x4013a17	      0xba01000000	                              mov edx, 1	      3841	intel_display.c	FUNCTION_124	CALL_7
0x4013a1c	          0x4c89ef	                            mov rdi, r13	      3841	intel_display.c	FUNCTION_124	CALL_7
0x4013a1f	       0x50c000f00	                        add eax, 0xf000c	      3840	intel_display.c	FUNCTION_124	CALL_6
0x4013a24	            0x89c1	                            mov ecx, eax	      3840	intel_display.c	FUNCTION_124	CALL_6
0x4013a26	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      3841	intel_display.c	FUNCTION_124	CALL_7
0x4013a2d	            0x89ce	                            mov esi, ecx	      3841	intel_display.c	FUNCTION_124	CALL_7
0x4013a2f	        0x894c2418	             mov dword [rsp + 0x18], ecx	      3841	intel_display.c	FUNCTION_124	CALL_7
0x4013a33	      0xe800000000	                          call 0x4013a38	      3841	intel_display.c	FUNCTION_124	CALL_7
0x4013a38	            0x89c7	                            mov edi, eax	      3847	intel_display.c	FUNCTION_124	ELSE_2
0x4013a3a	            0x89c1	                            mov ecx, eax	      3844	intel_display.c	FUNCTION_124	IF_2
0x4013a3c	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      3849	intel_display.c	FUNCTION_124	CALL_9
0x4013a40	    0x81cf00000030	                      or edi, 0x30000000	      3847	intel_display.c	FUNCTION_124	ELSE_2
0x4013a46	          0x80cd03	                                or ch, 3	      3844	intel_display.c	FUNCTION_124	IF_2
0x4013a49	    0x4183bdf85500	            cmp dword [r13 + 0x55f8], 2 	      3844	intel_display.c	FUNCTION_124	IF_2
0x4013a51	            0x89ca	                            mov edx, ecx	      3844	intel_display.c	FUNCTION_124	IF_2
0x4013a53	    0x498b85180800	           mov rax, qword [r13 + 0x818] 	      3849	intel_display.c	FUNCTION_124	CALL_9
0x4013a5a	      0xb901000000	                              mov ecx, 1	      3849	intel_display.c	FUNCTION_124	CALL_9
0x4013a5f	           0xf45d7	                         cmovne edx, edi	      3844	intel_display.c	FUNCTION_124	IF_2
0x4013a62	          0x4c89ef	                            mov rdi, r13	      3849	intel_display.c	FUNCTION_124	CALL_9
0x4013a65	          0x83ca40	                            or edx, 0x40	      3849	intel_display.c	FUNCTION_124	CALL_9
0x4013a68	      0xe800000000	                          call 0x4013a6d	      3849	intel_display.c	FUNCTION_124	CALL_9
0x4013a6d	            0x31d2	                            xor edx, edx	      3852	intel_display.c	FUNCTION_124	CALL_10
0x4013a6f	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      3852	intel_display.c	FUNCTION_124	CALL_10
0x4013a73	          0x4c89ef	                            mov rdi, r13	      3852	intel_display.c	FUNCTION_124	CALL_10
0x4013a76	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      3852	intel_display.c	FUNCTION_124	CALL_10
0x4013a7d	      0xe800000000	                          call 0x4013a82	      3852	intel_display.c	FUNCTION_124	CALL_10
0x4013a82	      0xbf58894100	                       mov edi, 0x418958	      3853	intel_display.c	FUNCTION_124	CALL_11
0x4013a87	      0xe800000000	                          call 0x4013a8c	      3853	intel_display.c	FUNCTION_124	CALL_11
0x4013a8c	    0x41f685660600	              test byte [r13 + 0x666], 2	      3856	intel_display.c	FUNCTION_124	IF_3	CALL_12
0x4013a94	            0x7441	                            je 0x4013ad7	      3856	intel_display.c	FUNCTION_124	IF_3	CALL_12
0x4013a96	    0x4d8b8d180800	            mov r9, qword [r13 + 0x818] 	      3857	intel_display.c	FUNCTION_124	IF_3	CALL_14
0x4013a9d	      0xba01000000	                              mov edx, 1	      3857	intel_display.c	FUNCTION_124	IF_3	CALL_14
0x4013aa2	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      3857	intel_display.c	FUNCTION_124	IF_3	CALL_14
0x4013aa6	          0x4c89ef	                            mov rdi, r13	      3857	intel_display.c	FUNCTION_124	IF_3	CALL_14
0x4013aa9	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      3857	intel_display.c	FUNCTION_124	IF_3	CALL_14
0x4013ab0	      0x4c894c2430	              mov qword [rsp + 0x30], r9	      3857	intel_display.c	FUNCTION_124	IF_3	CALL_14
0x4013ab5	      0xe800000000	                          call 0x4013aba	      3857	intel_display.c	FUNCTION_124	IF_3	CALL_14
0x4013aba	       0xd0000000c	                       or eax, 0xc000000	      3857	intel_display.c	FUNCTION_124	IF_3	CALL_14
0x4013abf	      0xb901000000	                              mov ecx, 1	      3857	intel_display.c	FUNCTION_124	IF_3	CALL_14
0x4013ac4	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      3857	intel_display.c	FUNCTION_124	IF_3	CALL_14
0x4013ac8	            0x89c2	                            mov edx, eax	      3857	intel_display.c	FUNCTION_124	IF_3	CALL_14
0x4013aca	          0x4c89ef	                            mov rdi, r13	      3857	intel_display.c	FUNCTION_124	IF_3	CALL_14
0x4013acd	      0x4c8b4c2430	              mov r9, qword [rsp + 0x30]	      3857	intel_display.c	FUNCTION_124	IF_3	CALL_14
0x4013ad2	      0xe800000000	                          call 0x4013ad7	      3857	intel_display.c	FUNCTION_124	IF_3	CALL_14
0x4013ad7	    0x4183bc24f855	            cmp dword [r12 + 0x55f8], 2 	      4635	intel_display.c	FUNCTION_139	IF_4	CALL_21
0x4013ae0	            0x7511	                           jne 0x4013af3	      4635	intel_display.c	FUNCTION_139	IF_4	CALL_21
0x4013ae2	    0x41f787440200	        test dword [r15 + 0x244], 0x980 	      4635	intel_display.c	FUNCTION_139	IF_4	CALL_21
0x4013aed	     0xf856d030000	                           jne 0x4013e60	      4635	intel_display.c	FUNCTION_139	IF_4	CALL_21
0x4013af3	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1220	intel_drv.h	FUNCTION_432
0x4013af8	      0xba01000000	                              mov edx, 1	      1675	intel_display.c	FUNCTION_57	CALL_2
0x4013afd	          0x4c89e7	                            mov rdi, r12	      1675	intel_display.c	FUNCTION_57	CALL_2
0x4013b00	    0x4d8bacc46865	  mov r13, qword [r12 + rax*8 + 0x6568] 	      1220	intel_drv.h	FUNCTION_432
0x4013b08	    0x498b85c80400	           mov rax, qword [r13 + 0x4c8] 	      1675	intel_display.c	FUNCTION_57	CALL_2
0x4013b0f	    0x488bb0780200	           mov rsi, qword [rax + 0x278] 	      1675	intel_display.c	FUNCTION_57	CALL_2
0x4013b16	      0xe800000000	                          call 0x4013b1b	      1675	intel_display.c	FUNCTION_57	CALL_2
0x4013b1b	        0x8b6c2420	            mov ebp, dword [rsp + 0x20] 	      1678	intel_display.c	FUNCTION_57	CALL_3
0x4013b1f	      0xba01000000	                              mov edx, 1	      1678	intel_display.c	FUNCTION_57	CALL_3
0x4013b24	          0x4c89e7	                            mov rdi, r12	      1678	intel_display.c	FUNCTION_57	CALL_3
0x4013b27	            0x89ee	                            mov esi, ebp	      1678	intel_display.c	FUNCTION_57	CALL_3
0x4013b29	      0xe842eafeff	                  call sym.assert_fdi_tx	      1678	intel_display.c	FUNCTION_57	CALL_3
0x4013b2e	      0xba01000000	                              mov edx, 1	      1679	intel_display.c	FUNCTION_57	CALL_4
0x4013b33	            0x89ee	                            mov esi, ebp	      1679	intel_display.c	FUNCTION_57	CALL_4
0x4013b35	          0x4c89e7	                            mov rdi, r12	      1679	intel_display.c	FUNCTION_57	CALL_4
0x4013b38	      0xe8d3e7feff	                  call sym.assert_fdi_rx	      1679	intel_display.c	FUNCTION_57	CALL_4
0x4013b3d	    0x4183bc24f855	            cmp dword [r12 + 0x55f8], 2 	      1681	intel_display.c	FUNCTION_57	IF_1	CALL_5
0x4013b46	     0xf84b4040000	                            je 0x4014000	      1681	intel_display.c	FUNCTION_57	IF_1	CALL_5
0x4013b4c	        0x8b6c2424	            mov ebp, dword [rsp + 0x24] 	      1690	intel_display.c	FUNCTION_57	CALL_9
0x4013b50	      0xba01000000	                              mov edx, 1	      1691	intel_display.c	FUNCTION_57	CALL_10
0x4013b55	          0x4c89e7	                            mov rdi, r12	      1691	intel_display.c	FUNCTION_57	CALL_10
0x4013b58	    0x498b8424f807	           mov rax, qword [r12 + 0x7f8] 	      1691	intel_display.c	FUNCTION_57	CALL_10
0x4013b60	    0x81c508000f00	                        add ebp, 0xf0008	      1690	intel_display.c	FUNCTION_57	CALL_9
0x4013b66	            0x89ee	                            mov esi, ebp	      1691	intel_display.c	FUNCTION_57	CALL_10
0x4013b68	      0xe800000000	                          call 0x4013b6d	      1691	intel_display.c	FUNCTION_57	CALL_10
0x4013b6d	        0x89442418	             mov dword [rsp + 0x18], eax	      1691	intel_display.c	FUNCTION_57	CALL_10
0x4013b71	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1692	intel_display.c	FUNCTION_57	CALL_12
0x4013b76	          0x4c89e7	                            mov rdi, r12	      1692	intel_display.c	FUNCTION_57	CALL_12
0x4013b79	    0x418b94246c06	           mov edx, dword [r12 + 0x66c] 	      1692	intel_display.c	FUNCTION_57	CALL_12
0x4013b81	    0x498b8c24f807	           mov rcx, qword [r12 + 0x7f8] 	      1692	intel_display.c	FUNCTION_57	CALL_12
0x4013b89	    0x8b8080060000	           mov eax, dword [rax + 0x680] 	      1692	intel_display.c	FUNCTION_57	CALL_12
0x4013b8f	    0x412b84248006	            sub eax, dword [r12 + 0x680]	      1692	intel_display.c	FUNCTION_57	CALL_12
0x4013b97	    0x8db410080007	          lea esi, [rax + rdx + 0x70008]	      1692	intel_display.c	FUNCTION_57	CALL_12
0x4013b9e	      0xba01000000	                              mov edx, 1	      1692	intel_display.c	FUNCTION_57	CALL_12
0x4013ba3	      0xe800000000	                          call 0x4013ba8	      1692	intel_display.c	FUNCTION_57	CALL_12
0x4013ba8	    0x4183bc24f855	            cmp dword [r12 + 0x55f8], 1 	      1694	intel_display.c	FUNCTION_57	IF_2	CALL_13
0x4013bb1	     0xf8437020000	                            je 0x4013dee	      1694	intel_display.c	FUNCTION_57	IF_2	CALL_13
0x4013bb7	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	      1707	intel_display.c	FUNCTION_57
0x4013bbb	      0x250000e000	                       and eax, 0xe00000	      1708	intel_display.c	FUNCTION_57	IF_4
0x4013bc0	    0x81e1ffff1fff	                     and ecx, 0xff1fffff	      1707	intel_display.c	FUNCTION_57
0x4013bc6	      0x3d00006000	                       cmp eax, 0x600000	      1708	intel_display.c	FUNCTION_57	IF_4
0x4013bcb	     0xf8474030000	                            je 0x4013f45	      1708	intel_display.c	FUNCTION_57	IF_4
0x4013bd1	    0x81c900000080	                      or ecx, 0x80000000	      1717	intel_display.c	FUNCTION_57	CALL_17
0x4013bd7	    0x498b84241808	           mov rax, qword [r12 + 0x818] 	      1717	intel_display.c	FUNCTION_57	CALL_17
0x4013bdf	            0x89ee	                            mov esi, ebp	      1717	intel_display.c	FUNCTION_57	CALL_17
0x4013be1	            0x89ca	                            mov edx, ecx	      1717	intel_display.c	FUNCTION_57	CALL_17
0x4013be3	          0x4c89e7	                            mov rdi, r12	      1717	intel_display.c	FUNCTION_57	CALL_17
0x4013be6	      0xb901000000	                              mov ecx, 1	      1717	intel_display.c	FUNCTION_57	CALL_17
0x4013beb	      0xe800000000	                          call 0x4013bf0	      1717	intel_display.c	FUNCTION_57	CALL_17
0x4013bf0	            0x6a00	                                  push 0	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x4013bf2	      0xba00000040	                     mov edx, 0x40000000	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x4013bf7	    0x41b964000000	                           mov r9d, 0x64	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x4013bfd	    0x41b802000000	                              mov r8d, 2	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x4013c03	      0xb900000040	                     mov ecx, 0x40000000	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x4013c08	            0x89ee	                            mov esi, ebp	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x4013c0a	          0x4c89e7	                            mov rdi, r12	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x4013c0d	      0xe800000000	                          call 0x4013c12	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x4013c12	            0x85c0	                           test eax, eax	      1718	intel_display.c	FUNCTION_57	IF_6	CALL_18
0x4013c14	              0x5a	                                 pop rdx	      1718	intel_display.c	FUNCTION_57	IF_6	CALL_18
0x4013c15	     0xf845efbffff	                            je 0x4013779	      1718	intel_display.c	FUNCTION_57	IF_6	CALL_18
0x4013c1b	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      1721	intel_display.c	FUNCTION_57	CALL_20
0x4013c1f	    0x48c7c7000000	                              mov rdi, 0	      1721	intel_display.c	FUNCTION_57	CALL_20
0x4013c26	          0x83c641	                           add esi, 0x41	      1721	intel_display.c	FUNCTION_57	CALL_20
0x4013c29	      0xe800000000	                          call 0x4013c2e	      1721	intel_display.c	FUNCTION_57	CALL_20
0x4013c2e	      0xe946fbffff	                           jmp 0x4013779	      1721	intel_display.c	FUNCTION_57	CALL_20
0x4013c33	        0x8b742404	                mov esi, dword [rsp + 4]	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x4013c37	          0x4c89f7	                            mov rdi, r14	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x4013c3a	      0xe800000000	                          call 0x4013c3f	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x4013c3f	      0xe97cfbffff	                           jmp 0x40137c0	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x4013c44	    0x8b85b0040000	           mov eax, dword [rbp + 0x4b0] 	      4539	intel_display.c	FUNCTION_137	SWITCH_1
0x4013c4a	        0x488b7d00	                    mov rdi, qword [rbp]	      4537	intel_display.c	FUNCTION_137
0x4013c4e	          0x83f801	                              cmp eax, 1	      4539	intel_display.c	FUNCTION_137	SWITCH_1
0x4013c51	     0xf84e9010000	                            je 0x4013e40	      4539	intel_display.c	FUNCTION_137	SWITCH_1
0x4013c57	          0x83f802	                              cmp eax, 2	      4539	intel_display.c	FUNCTION_137	SWITCH_1
0x4013c5a	     0xf84e4030000	                            je 0x4014044	      4539	intel_display.c	FUNCTION_137	SWITCH_1
0x4013c60	            0x85c0	                           test eax, eax	      4539	intel_display.c	FUNCTION_137	SWITCH_1
0x4013c62	     0xf8483fcffff	                            je 0x40138eb	      4539	intel_display.c	FUNCTION_137	SWITCH_1
0x4013c68	             0xf0b	                                     ud2	      4539	intel_display.c	FUNCTION_137	SWITCH_1
0x4013c6a	      0xba20000000	                           mov edx, 0x20	      8211	intel_display.c	FUNCTION_243	SWITCH_1
0x4013c6f	      0xe95ff8ffff	                           jmp 0x40134d3	      8211	intel_display.c	FUNCTION_243	SWITCH_1
0x4013c74	    0x48c7c6000000	                              mov rsi, 0	      5370	intel_display.c	FUNCTION_164	IF_1	CALL_4
0x4013c7b	    0x48c7c7000000	                              mov rdi, 0	      5370	intel_display.c	FUNCTION_164	IF_1	CALL_4
0x4013c82	      0xe800000000	                          call 0x4013c87	      5370	intel_display.c	FUNCTION_164	IF_1	CALL_4
0x4013c87	             0xf0b	                                     ud2	      5370	intel_display.c	FUNCTION_164	IF_1	CALL_4
0x4013c89	        0x4883c440	                           add rsp, 0x40	      5446	intel_display.c	FUNCTION_164
0x4013c8d	              0x5b	                                 pop rbx	      5446	intel_display.c	FUNCTION_164
0x4013c8e	              0x5d	                                 pop rbp	      5446	intel_display.c	FUNCTION_164
0x4013c8f	            0x415c	                                 pop r12	      5446	intel_display.c	FUNCTION_164
0x4013c91	            0x415d	                                 pop r13	      5446	intel_display.c	FUNCTION_164
0x4013c93	            0x415e	                                 pop r14	      5446	intel_display.c	FUNCTION_164
0x4013c95	            0x415f	                                 pop r15	      5446	intel_display.c	FUNCTION_164
0x4013c97	              0xc3	                                     ret	      5446	intel_display.c	FUNCTION_164
0x4013c98	    0x486383b00400	        movsxd rax, dword [rbx + 0x4b0] 	      5439	intel_display.c	FUNCTION_164	CALL_28
0x4013c9f	    0x418b966c0600	           mov edx, dword [r14 + 0x66c] 	      4692	intel_display.c	FUNCTION_141	CALL_2
0x4013ca6	          0x4c89f7	                            mov rdi, r14	      4695	intel_display.c	FUNCTION_141	CALL_3
0x4013ca9	      0xbd0a000000	                            mov ebp, 0xa	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013cae	        0x89442410	             mov dword [rsp + 0x10], eax	      5439	intel_display.c	FUNCTION_164	CALL_28
0x4013cb2	    0x418b84868006	   mov eax, dword [r14 + rax*4 + 0x680] 	      4692	intel_display.c	FUNCTION_141	CALL_2
0x4013cba	    0x412b86800600	            sub eax, dword [r14 + 0x680]	      4692	intel_display.c	FUNCTION_141	CALL_2
0x4013cc1	    0x448da4100000	         lea r12d, [rax + rdx + 0x70000]	      4692	intel_display.c	FUNCTION_141	CALL_2
0x4013cc9	      0xba01000000	                              mov edx, 1	      4695	intel_display.c	FUNCTION_141	CALL_3
0x4013cce	    0x498b86f80700	           mov rax, qword [r14 + 0x7f8] 	      4695	intel_display.c	FUNCTION_141	CALL_3
0x4013cd5	          0x4489e6	                           mov esi, r12d	      4695	intel_display.c	FUNCTION_141	CALL_3
0x4013cd8	      0xe800000000	                          call 0x4013cdd	      4695	intel_display.c	FUNCTION_141	CALL_3
0x4013cdd	      0xbfacc42000	                       mov edi, 0x20c4ac	      4696	intel_display.c	FUNCTION_141	CALL_4
0x4013ce2	          0x4189c5	                           mov r13d, eax	      4695	intel_display.c	FUNCTION_141	CALL_3
0x4013ce5	      0xe800000000	                          call 0x4013cea	      4696	intel_display.c	FUNCTION_141	CALL_4
0x4013cea	      0xe800000000	                          call 0x4013cef	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013cef	    0x4805404b4c00	                       add rax, 0x4c4b40	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013cf5	          0x4989c7	                            mov r15, rax	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013cf8	      0xe800000000	                          call 0x4013cfd	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013cfd	      0x48895c2408	                mov qword [rsp + 8], rbx	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013d02	            0xeb3b	                           jmp 0x4013d3f	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013d04	    0x498b86f80700	           mov rax, qword [r14 + 0x7f8] 	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013d0b	      0xba01000000	                              mov edx, 1	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013d10	          0x4489e6	                           mov esi, r12d	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013d13	          0x4c89f7	                            mov rdi, r14	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013d16	      0xe800000000	                          call 0x4013d1b	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013d1b	          0x4139c5	                           cmp r13d, eax	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013d1e	     0xf85c0000000	                           jne 0x4013de4	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013d24	      0x488d5c2d00	                    lea rbx, [rbp + rbp]	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013d29	          0x4889ef	                            mov rdi, rbp	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013d2c	          0x4889de	                            mov rsi, rbx	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013d2f	      0xe800000000	                          call 0x4013d34	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013d34	    0x4881fde70300	                          cmp rbp, 0x3e7	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013d3b	        0x480f4eeb	                         cmovle rbp, rbx	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013d3f	      0xe800000000	                          call 0x4013d44	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013d44	          0x4939c7	                            cmp r15, rax	       113	ktime.h	FUNCTION_480	IF_2
0x4013d47	            0x7dbb	                           jge 0x4013d04	       113	ktime.h	FUNCTION_480	IF_2
0x4013d49	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       113	ktime.h	FUNCTION_480	IF_2
0x4013d4e	    0x498b86f80700	           mov rax, qword [r14 + 0x7f8] 	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013d55	      0xba01000000	                              mov edx, 1	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013d5a	          0x4489e6	                           mov esi, r12d	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013d5d	          0x4c89f7	                            mov rdi, r14	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013d60	      0xe800000000	                          call 0x4013d65	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013d65	          0x4139c5	                           cmp r13d, eax	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013d68	     0xf853efaffff	                           jne 0x40137ac	      4697	intel_display.c	FUNCTION_141	IF_1	CALL_6
0x4013d6e	      0xe800000000	                          call 0x4013d73	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013d73	    0x4805404b4c00	                       add rax, 0x4c4b40	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013d79	      0xbd0a000000	                            mov ebp, 0xa	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013d7e	          0x4989c7	                            mov r15, rax	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013d81	      0xe800000000	                          call 0x4013d86	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013d86	      0x48895c2408	                mov qword [rsp + 8], rbx	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013d8b	            0xeb2e	                           jmp 0x4013dbb	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013d8d	      0xe800000000	                          call 0x4013d92	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013d92	          0x4139c5	                           cmp r13d, eax	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013d95	            0x754d	                           jne 0x4013de4	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013d97	          0x4939df	                            cmp r15, rbx	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013d9a	     0xf8cb3020000	                            jl 0x4014053	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013da0	      0x488d5c2d00	                    lea rbx, [rbp + rbp]	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013da5	          0x4889ef	                            mov rdi, rbp	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013da8	          0x4889de	                            mov rsi, rbx	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013dab	      0xe800000000	                          call 0x4013db0	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013db0	    0x4881fde70300	                          cmp rbp, 0x3e7	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013db7	        0x480f4eeb	                         cmovle rbp, rbx	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013dbb	      0xe800000000	                          call 0x4013dc0	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013dc0	          0x4889c3	                            mov rbx, rax	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013dc3	      0xba01000000	                              mov edx, 1	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013dc8	    0x498b86f80700	           mov rax, qword [r14 + 0x7f8] 	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013dcf	          0x4939df	                            cmp r15, rbx	       111	ktime.h	FUNCTION_480	IF_1
0x4013dd2	          0x4489e6	                           mov esi, r12d	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013dd5	          0x4c89f7	                            mov rdi, r14	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013dd8	            0x7eb3	                           jle 0x4013d8d	       111	ktime.h	FUNCTION_480	IF_1
0x4013dda	      0xe800000000	                          call 0x4013ddf	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013ddf	          0x4439e8	                           cmp eax, r13d	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013de2	            0x74bc	                            je 0x4013da0	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013de4	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013de9	      0xe9bef9ffff	                           jmp 0x40137ac	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013dee	    0x498b95c80400	           mov rdx, qword [r13 + 0x4c8] 	      4698	intel_display.c	FUNCTION_141	IF_1	IF_2	CALL_8
0x4013df5	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      1700	intel_display.c	FUNCTION_57	IF_2
0x4013df9	    0x8b9244020000	           mov edx, dword [rdx + 0x244] 	      1700	intel_display.c	FUNCTION_57	IF_2
0x4013dff	        0x4080e61f	                           and sil, 0x1f	      1700	intel_display.c	FUNCTION_57	IF_2
0x4013e03	          0xf6c240	                           test dl, 0x40	      1701	intel_display.c	FUNCTION_57	IF_2	IF_3	CALL_14
0x4013e06	            0x742c	                            je 0x4013e34	      1701	intel_display.c	FUNCTION_57	IF_2	IF_3	CALL_14
0x4013e08	            0x89f1	                            mov ecx, esi	      1707	intel_display.c	FUNCTION_57
0x4013e0a	      0x250000e000	                       and eax, 0xe00000	      1708	intel_display.c	FUNCTION_57	IF_4
0x4013e0f	    0x81e1ffff1fff	                     and ecx, 0xff1fffff	      1707	intel_display.c	FUNCTION_57
0x4013e15	      0x3d00006000	                       cmp eax, 0x600000	      1708	intel_display.c	FUNCTION_57	IF_4
0x4013e1a	     0xf85b1fdffff	                           jne 0x4013bd1	      1708	intel_display.c	FUNCTION_57	IF_4
0x4013e20	          0x83e208	                              and edx, 8	      1709	intel_display.c	FUNCTION_57	IF_4	IF_5	CALL_15
0x4013e23	     0xf841c010000	                            je 0x4013f45	      1709	intel_display.c	FUNCTION_57	IF_4	IF_5	CALL_15
0x4013e29	    0x81c900004000	                        or ecx, 0x400000	      1711	intel_display.c	FUNCTION_57	IF_4	IF_5
0x4013e2f	      0xe99dfdffff	                           jmp 0x4013bd1	      1711	intel_display.c	FUNCTION_57	IF_4	IF_5
0x4013e34	            0x89c1	                            mov ecx, eax	      1704	intel_display.c	FUNCTION_57	IF_2	ELSE_1
0x4013e36	    0x81e1e0000000	                           and ecx, 0xe0	      1704	intel_display.c	FUNCTION_57	IF_2	ELSE_1
0x4013e3c	             0x9ce	                             or esi, ecx	      1704	intel_display.c	FUNCTION_57	IF_2	ELSE_1
0x4013e3e	            0xebc8	                           jmp 0x4013e08	      1704	intel_display.c	FUNCTION_57	IF_2	ELSE_1
0x4013e40	    0x488b85c80400	           mov rax, qword [rbp + 0x4c8] 	      4543	intel_display.c	FUNCTION_137	SWITCH_1	IF_1
0x4013e47	    0x83b830030000	              cmp dword [rax + 0x330], 2	      4543	intel_display.c	FUNCTION_137	SWITCH_1	IF_1
0x4013e4e	     0xf8ef0010000	                           jle 0x4014044	      4543	intel_display.c	FUNCTION_137	SWITCH_1	IF_1
0x4013e54	            0x31f6	                            xor esi, esi	      4544	intel_display.c	FUNCTION_137	SWITCH_1	CALL_1
0x4013e56	      0xe895eafeff	     call sym.cpt_set_fdi_bc_bifurcation	      4544	intel_display.c	FUNCTION_137	SWITCH_1	CALL_1
0x4013e5b	      0xe98bfaffff	                           jmp 0x40138eb	      4544	intel_display.c	FUNCTION_137	SWITCH_1	CALL_1
0x4013e60	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      4639	intel_display.c	FUNCTION_139	IF_4	CALL_24
0x4013e65	    0x418b94246c06	           mov edx, dword [r12 + 0x66c] 	      4639	intel_display.c	FUNCTION_139	IF_4	CALL_24
0x4013e6d	          0x4c89e7	                            mov rdi, r12	      4639	intel_display.c	FUNCTION_139	IF_4	CALL_24
0x4013e70	    0x498b8c24f807	           mov rcx, qword [r12 + 0x7f8] 	      4639	intel_display.c	FUNCTION_139	IF_4	CALL_24
0x4013e78	    0x8b8080060000	           mov eax, dword [rax + 0x680] 	      4639	intel_display.c	FUNCTION_139	IF_4	CALL_24
0x4013e7e	    0x412b84248006	            sub eax, dword [r12 + 0x680]	      4639	intel_display.c	FUNCTION_139	IF_4	CALL_24
0x4013e86	    0x8db410080007	          lea esi, [rax + rdx + 0x70008]	      4639	intel_display.c	FUNCTION_139	IF_4	CALL_24
0x4013e8d	      0xba01000000	                              mov edx, 1	      4639	intel_display.c	FUNCTION_139	IF_4	CALL_24
0x4013e92	      0xe800000000	                          call 0x4013e97	      4639	intel_display.c	FUNCTION_139	IF_4	CALL_24
0x4013e97	        0x8b4c2424	            mov ecx, dword [rsp + 0x24] 	      4640	intel_display.c	FUNCTION_139	IF_4	CALL_25
0x4013e9b	        0x89442418	             mov dword [rsp + 0x18], eax	      4639	intel_display.c	FUNCTION_139	IF_4	CALL_24
0x4013e9f	      0xba01000000	                              mov edx, 1	      4641	intel_display.c	FUNCTION_139	IF_4	CALL_26
0x4013ea4	          0x4c89e7	                            mov rdi, r12	      4641	intel_display.c	FUNCTION_139	IF_4	CALL_26
0x4013ea7	    0x498b8424f807	           mov rax, qword [r12 + 0x7f8] 	      4641	intel_display.c	FUNCTION_139	IF_4	CALL_26
0x4013eaf	    0x448da900030e	               lea r13d, [rcx + 0xe0300]	      4640	intel_display.c	FUNCTION_139	IF_4	CALL_25
0x4013eb6	          0x4489ee	                           mov esi, r13d	      4641	intel_display.c	FUNCTION_139	IF_4	CALL_26
0x4013eb9	      0xe800000000	                          call 0x4013ebe	      4641	intel_display.c	FUNCTION_139	IF_4	CALL_26
0x4013ebe	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      4646	intel_display.c	FUNCTION_139	IF_4
0x4013ec2	      0x25e7f9ff9f	                     and eax, 0x9ffff9e7	      4642	intel_display.c	FUNCTION_139	IF_4
0x4013ec7	        0x488b7d00	                    mov rdi, qword [rbp]	      4562	intel_display.c	FUNCTION_138
0x4013ecb	       0xd00000080	                      or eax, 0x80000000	      4645	intel_display.c	FUNCTION_139	IF_4
0x4013ed0	    0x81e2e0000000	                           and edx, 0xe0	      4646	intel_display.c	FUNCTION_139	IF_4
0x4013ed6	          0xc1e204	                              shl edx, 4	      4646	intel_display.c	FUNCTION_139	IF_4
0x4013ed9	             0x9c2	                             or edx, eax	      4646	intel_display.c	FUNCTION_139	IF_4
0x4013edb	    0x418b879c0000	            mov eax, dword [r15 + 0x9c] 	      4648	intel_display.c	FUNCTION_139	IF_4	IF_5
0x4013ee2	            0x89d1	                            mov ecx, edx	      4649	intel_display.c	FUNCTION_139	IF_4	IF_5
0x4013ee4	          0x83c908	                               or ecx, 8	      4649	intel_display.c	FUNCTION_139	IF_4	IF_5
0x4013ee7	            0xa801	                              test al, 1	      4649	intel_display.c	FUNCTION_139	IF_4	IF_5
0x4013ee9	           0xf45d1	                         cmovne edx, ecx	      4649	intel_display.c	FUNCTION_139	IF_4	IF_5
0x4013eec	            0x89d1	                            mov ecx, edx	      4651	intel_display.c	FUNCTION_139	IF_4	IF_6
0x4013eee	          0x83c910	                            or ecx, 0x10	      4651	intel_display.c	FUNCTION_139	IF_4	IF_6
0x4013ef1	            0xa804	                              test al, 4	      4651	intel_display.c	FUNCTION_139	IF_4	IF_6
0x4013ef3	    0x488b87380300	           mov rax, qword [rdi + 0x338] 	      4565	intel_display.c	FUNCTION_138	FUNCTION_1
0x4013efa	           0xf45d1	                         cmovne edx, ecx	      4651	intel_display.c	FUNCTION_139	IF_4	IF_6
0x4013efd	    0x4881c7380300	                          add rdi, 0x338	      4565	intel_display.c	FUNCTION_138	FUNCTION_1
0x4013f04	          0x4839c7	                            cmp rdi, rax	      4565	intel_display.c	FUNCTION_138	FUNCTION_1
0x4013f07	        0x488d48f8	                      lea rcx, [rax - 8]	      4565	intel_display.c	FUNCTION_138	FUNCTION_1
0x4013f0b	            0x750f	                           jne 0x4013f1c	      4565	intel_display.c	FUNCTION_138	FUNCTION_1
0x4013f0d	            0xeb34	                           jmp 0x4013f43	      4565	intel_display.c	FUNCTION_138	FUNCTION_1
0x4013f0f	        0x488b4108	                mov rax, qword [rcx + 8]	      4565	intel_display.c	FUNCTION_138	FUNCTION_1
0x4013f13	          0x4839c7	                            cmp rdi, rax	      4565	intel_display.c	FUNCTION_138	FUNCTION_1
0x4013f16	        0x488d48f8	                      lea rcx, [rax - 8]	      4565	intel_display.c	FUNCTION_138	FUNCTION_1
0x4013f1a	            0x7427	                            je 0x4013f43	      4565	intel_display.c	FUNCTION_138	FUNCTION_1
0x4013f1c	        0x48396950	            cmp qword [rcx + 0x50], rbp 	      4565	intel_display.c	FUNCTION_138	FUNCTION_1
0x4013f20	            0x75ed	                           jne 0x4013f0f	      4565	intel_display.c	FUNCTION_138	FUNCTION_1
0x4013f22	          0x8b4170	            mov eax, dword [rcx + 0x70] 	      4566	intel_display.c	FUNCTION_138	FUNCTION_1	IF_1
0x4013f25	          0x83e807	                              sub eax, 7	      4566	intel_display.c	FUNCTION_138	FUNCTION_1	IF_1
0x4013f28	          0x83f801	                              cmp eax, 1	      4566	intel_display.c	FUNCTION_138	FUNCTION_1	IF_1
0x4013f2b	            0x77e2	                            ja 0x4013f0f	      4566	intel_display.c	FUNCTION_138	FUNCTION_1	IF_1
0x4013f2d	          0x8b4174	            mov eax, dword [rcx + 0x74] 	      4653	intel_display.c	FUNCTION_139	IF_4	SWITCH_1	CALL_27
0x4013f30	          0x83f802	                              cmp eax, 2	      4653	intel_display.c	FUNCTION_139	IF_4	SWITCH_1	CALL_27
0x4013f33	            0x741b	                            je 0x4013f50	      4653	intel_display.c	FUNCTION_139	IF_4	SWITCH_1	CALL_27
0x4013f35	          0x83f803	                              cmp eax, 3	      4653	intel_display.c	FUNCTION_139	IF_4	SWITCH_1	CALL_27
0x4013f38	     0xf8432010000	                            je 0x4014070	      4653	intel_display.c	FUNCTION_139	IF_4	SWITCH_1	CALL_27
0x4013f3e	          0x83f801	                              cmp eax, 1	      4653	intel_display.c	FUNCTION_139	IF_4	SWITCH_1	CALL_27
0x4013f41	            0x7413	                            je 0x4013f56	      4653	intel_display.c	FUNCTION_139	IF_4	SWITCH_1	CALL_27
0x4013f43	             0xf0b	                                     ud2	      4653	intel_display.c	FUNCTION_139	IF_4	SWITCH_1	CALL_27
0x4013f45	    0x81c900006000	                        or ecx, 0x600000	      1713	intel_display.c	FUNCTION_57	ELSE_2
0x4013f4b	      0xe981fcffff	                           jmp 0x4013bd1	      1713	intel_display.c	FUNCTION_57	ELSE_2
0x4013f50	    0x81ca00000020	                      or edx, 0x20000000	      4658	intel_display.c	FUNCTION_139	IF_4	SWITCH_1
0x4013f56	    0x498b84241808	           mov rax, qword [r12 + 0x818] 	      4667	intel_display.c	FUNCTION_139	IF_4	CALL_29
0x4013f5e	      0xb901000000	                              mov ecx, 1	      4667	intel_display.c	FUNCTION_139	IF_4	CALL_29
0x4013f63	          0x4489ee	                           mov esi, r13d	      4667	intel_display.c	FUNCTION_139	IF_4	CALL_29
0x4013f66	          0x4c89e7	                            mov rdi, r12	      4667	intel_display.c	FUNCTION_139	IF_4	CALL_29
0x4013f69	      0xe800000000	                          call 0x4013f6e	      4667	intel_display.c	FUNCTION_139	IF_4	CALL_29
0x4013f6e	      0xe980fbffff	                           jmp 0x4013af3	      4667	intel_display.c	FUNCTION_139	IF_4	CALL_29
0x4013f73	          0x4c89e7	                            mov rdi, r12	      4608	intel_display.c	FUNCTION_139	IF_2	CALL_12
0x4013f76	    0x498b8424f807	           mov rax, qword [r12 + 0x7f8] 	      4608	intel_display.c	FUNCTION_139	IF_2	CALL_12
0x4013f7e	      0xba01000000	                              mov edx, 1	      4608	intel_display.c	FUNCTION_139	IF_2	CALL_12
0x4013f83	      0xbe00700c00	                        mov esi, 0xc7000	      4608	intel_display.c	FUNCTION_139	IF_2	CALL_12
0x4013f88	      0xe800000000	                          call 0x4013f8d	      4608	intel_display.c	FUNCTION_139	IF_2	CALL_12
0x4013f8d	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      4609	intel_display.c	FUNCTION_139	IF_2	CALL_13
0x4013f91	      0xba01000000	                              mov edx, 1	      4609	intel_display.c	FUNCTION_139	IF_2	CALL_13
0x4013f96	          0x4c89e7	                            mov rdi, r12	      4612	intel_display.c	FUNCTION_139	IF_2	IF_3	CALL_15
0x4013f99	          0x4189d5	                           mov r13d, edx	      4609	intel_display.c	FUNCTION_139	IF_2	CALL_13
0x4013f9c	    0x8d348d000000	                        lea esi, [rcx*4]	      4609	intel_display.c	FUNCTION_139	IF_2	CALL_13
0x4013fa3	          0x8d4e03	                      lea ecx, [rsi + 3]	      4609	intel_display.c	FUNCTION_139	IF_2	CALL_13
0x4013fa6	          0x41d3e5	                            shl r13d, cl	      4609	intel_display.c	FUNCTION_139	IF_2	CALL_13
0x4013fa9	            0x89f1	                            mov ecx, esi	      4610	intel_display.c	FUNCTION_139	IF_2	CALL_14
0x4013fab	      0xbe01000000	                              mov esi, 1	      4612	intel_display.c	FUNCTION_139	IF_2	IF_3	CALL_15
0x4013fb0	          0x4109c5	                            or r13d, eax	      4609	intel_display.c	FUNCTION_139	IF_2	CALL_13
0x4013fb3	    0x498b87780200	           mov rax, qword [r15 + 0x278] 	      4611	intel_display.c	FUNCTION_139	IF_2	IF_3
0x4013fba	            0xd3e2	                             shl edx, cl	      4610	intel_display.c	FUNCTION_139	IF_2	CALL_14
0x4013fbc	        0x89542430	             mov dword [rsp + 0x30], edx	      4610	intel_display.c	FUNCTION_139	IF_2	CALL_14
0x4013fc0	      0x4889442418	             mov qword [rsp + 0x18], rax	      4611	intel_display.c	FUNCTION_139	IF_2	IF_3
0x4013fc5	      0xe800000000	                          call 0x4013fca	      4612	intel_display.c	FUNCTION_139	IF_2	IF_3	CALL_15
0x4013fca	        0x8b542430	            mov edx, dword [rsp + 0x30] 	      4615	intel_display.c	FUNCTION_139	IF_2	ELSE_1
0x4013fce	      0xbe00700c00	                        mov esi, 0xc7000	      4616	intel_display.c	FUNCTION_139	IF_2	CALL_16
0x4013fd3	          0x4c89e7	                            mov rdi, r12	      4616	intel_display.c	FUNCTION_139	IF_2	CALL_16
0x4013fd6	            0x89d1	                            mov ecx, edx	      4615	intel_display.c	FUNCTION_139	IF_2	ELSE_1
0x4013fd8	          0x4409ea	                            or edx, r13d	      4613	intel_display.c	FUNCTION_139	IF_2	IF_3
0x4013fdb	            0xf7d1	                                 not ecx	      4615	intel_display.c	FUNCTION_139	IF_2	ELSE_1
0x4013fdd	          0x4121cd	                           and r13d, ecx	      4613	intel_display.c	FUNCTION_139	IF_2	IF_3
0x4013fe0	      0x4839442418	            cmp qword [rsp + 0x18], rax 	      4613	intel_display.c	FUNCTION_139	IF_2	IF_3
0x4013fe5	      0xb901000000	                              mov ecx, 1	      4616	intel_display.c	FUNCTION_139	IF_2	CALL_16
0x4013fea	    0x498b84241808	           mov rax, qword [r12 + 0x818] 	      4616	intel_display.c	FUNCTION_139	IF_2	CALL_16
0x4013ff2	        0x410f45d5	                        cmovne edx, r13d	      4613	intel_display.c	FUNCTION_139	IF_2	IF_3
0x4013ff6	      0xe800000000	                          call 0x4013ffb	      4616	intel_display.c	FUNCTION_139	IF_2	CALL_16
0x4013ffb	      0xe97ff9ffff	                           jmp 0x401397f	      4616	intel_display.c	FUNCTION_139	IF_2	CALL_16
0x4014000	        0x8b4c2424	            mov ecx, dword [rsp + 0x24] 	      1685	intel_display.c	FUNCTION_57	IF_1	CALL_7
0x4014004	          0x4c89e7	                            mov rdi, r12	      1685	intel_display.c	FUNCTION_57	IF_1	CALL_7
0x4014007	    0x498b8424f807	           mov rax, qword [r12 + 0x7f8] 	      1685	intel_display.c	FUNCTION_57	IF_1	CALL_7
0x401400f	      0xba01000000	                              mov edx, 1	      1685	intel_display.c	FUNCTION_57	IF_1	CALL_7
0x4014014	    0x8da964000f00	                lea ebp, [rcx + 0xf0064]	      1685	intel_display.c	FUNCTION_57	IF_1	CALL_7
0x401401a	            0x89ee	                            mov esi, ebp	      1685	intel_display.c	FUNCTION_57	IF_1	CALL_7
0x401401c	      0xe800000000	                          call 0x4014021	      1685	intel_display.c	FUNCTION_57	IF_1	CALL_7
0x4014021	       0xd00000080	                      or eax, 0x80000000	      1687	intel_display.c	FUNCTION_57	IF_1	CALL_8
0x4014026	      0xb901000000	                              mov ecx, 1	      1687	intel_display.c	FUNCTION_57	IF_1	CALL_8
0x401402b	            0x89ee	                            mov esi, ebp	      1687	intel_display.c	FUNCTION_57	IF_1	CALL_8
0x401402d	            0x89c2	                            mov edx, eax	      1687	intel_display.c	FUNCTION_57	IF_1	CALL_8
0x401402f	          0x4c89e7	                            mov rdi, r12	      1687	intel_display.c	FUNCTION_57	IF_1	CALL_8
0x4014032	    0x498b84241808	           mov rax, qword [r12 + 0x818] 	      1687	intel_display.c	FUNCTION_57	IF_1	CALL_8
0x401403a	      0xe800000000	                          call 0x401403f	      1687	intel_display.c	FUNCTION_57	IF_1	CALL_8
0x401403f	      0xe908fbffff	                           jmp 0x4013b4c	      1687	intel_display.c	FUNCTION_57	IF_1	CALL_8
0x4014044	      0xbe01000000	                              mov esi, 1	      4550	intel_display.c	FUNCTION_137	SWITCH_1	CALL_3
0x4014049	      0xe8a2e8feff	     call sym.cpt_set_fdi_bc_bifurcation	      4550	intel_display.c	FUNCTION_137	SWITCH_1	CALL_3
0x401404e	      0xe998f8ffff	                           jmp 0x40138eb	      4550	intel_display.c	FUNCTION_137	SWITCH_1	CALL_3
0x4014053	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      4699	intel_display.c	FUNCTION_141	IF_1	CALL_10
0x4014057	    0x48c7c7000000	                              mov rdi, 0	      4699	intel_display.c	FUNCTION_141	IF_1	CALL_10
0x401405e	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      4699	intel_display.c	FUNCTION_141	IF_1	CALL_10
0x4014063	          0x83c641	                           add esi, 0x41	      4699	intel_display.c	FUNCTION_141	IF_1	CALL_10
0x4014066	      0xe800000000	                          call 0x401406b	      4699	intel_display.c	FUNCTION_141	IF_1	CALL_10
0x401406b	      0xe93cf7ffff	                           jmp 0x40137ac	      4699	intel_display.c	FUNCTION_141	IF_1	CALL_10
0x4014070	    0x81ca00000040	                      or edx, 0x40000000	      4661	intel_display.c	FUNCTION_139	IF_4	SWITCH_1
0x4014076	      0xe9dbfeffff	                           jmp 0x4013f56	      4661	intel_display.c	FUNCTION_139	IF_4	SWITCH_1
lpt_disable_pch_transcoder	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,8	40
0x400dfa0	              0x53	                                push rbx	      1789	intel_display.c	FUNCTION_60
0x400dfa1	      0xba01000000	                              mov edx, 1	      1792	intel_display.c	FUNCTION_60	CALL_1
0x400dfa6	          0x4889fb	                            mov rbx, rdi	      1789	intel_display.c	FUNCTION_60
0x400dfa9	    0x488b87f80700	           mov rax, qword [rdi + 0x7f8] 	      1792	intel_display.c	FUNCTION_60	CALL_1
0x400dfb0	      0xbe08000f00	                        mov esi, 0xf0008	      1792	intel_display.c	FUNCTION_60	CALL_1
0x400dfb5	      0xe800000000	                          call 0x400dfba	      1792	intel_display.c	FUNCTION_60	CALL_1
0x400dfba	      0x25ffffff7f	                     and eax, 0x7fffffff	      1794	intel_display.c	FUNCTION_60	CALL_2
0x400dfbf	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	      1794	intel_display.c	FUNCTION_60	CALL_2
0x400dfc6	      0xb901000000	                              mov ecx, 1	      1794	intel_display.c	FUNCTION_60	CALL_2
0x400dfcb	            0x89c2	                            mov edx, eax	      1794	intel_display.c	FUNCTION_60	CALL_2
0x400dfcd	      0xbe08000f00	                        mov esi, 0xf0008	      1794	intel_display.c	FUNCTION_60	CALL_2
0x400dfd2	          0x4889df	                            mov rdi, rbx	      1794	intel_display.c	FUNCTION_60	CALL_2
0x400dfd5	      0xe800000000	                          call 0x400dfda	      1794	intel_display.c	FUNCTION_60	CALL_2
0x400dfda	            0x6a00	                                  push 0	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400dfdc	            0x31c9	                            xor ecx, ecx	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400dfde	      0xba00000040	                     mov edx, 0x40000000	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400dfe3	    0x41b932000000	                           mov r9d, 0x32	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400dfe9	    0x41b802000000	                              mov r8d, 2	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400dfef	      0xbe08000f00	                        mov esi, 0xf0008	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400dff4	          0x4889df	                            mov rdi, rbx	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400dff7	      0xe800000000	                          call 0x400dffc	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400dffc	            0x85c0	                           test eax, eax	      1796	intel_display.c	FUNCTION_60	IF_1	CALL_3
0x400dffe	              0x5a	                                 pop rdx	      1796	intel_display.c	FUNCTION_60	IF_1	CALL_3
0x400dfff	            0x740c	                            je 0x400e00d	      1796	intel_display.c	FUNCTION_60	IF_1	CALL_3
0x400e001	    0x48c7c7000000	                              mov rdi, 0	      1799	intel_display.c	FUNCTION_60	CALL_4
0x400e008	      0xe800000000	                          call 0x400e00d	      1799	intel_display.c	FUNCTION_60	CALL_4
0x400e00d	          0x4889df	                            mov rdi, rbx	      1802	intel_display.c	FUNCTION_60	CALL_6
0x400e010	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      1802	intel_display.c	FUNCTION_60	CALL_6
0x400e017	      0xba01000000	                              mov edx, 1	      1802	intel_display.c	FUNCTION_60	CALL_6
0x400e01c	      0xbe64000f00	                        mov esi, 0xf0064	      1802	intel_display.c	FUNCTION_60	CALL_6
0x400e021	      0xe800000000	                          call 0x400e026	      1802	intel_display.c	FUNCTION_60	CALL_6
0x400e026	      0x25ffffff7f	                     and eax, 0x7fffffff	      1804	intel_display.c	FUNCTION_60	CALL_8
0x400e02b	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	      1804	intel_display.c	FUNCTION_60	CALL_8
0x400e032	          0x4889df	                            mov rdi, rbx	      1804	intel_display.c	FUNCTION_60	CALL_8
0x400e035	            0x89c2	                            mov edx, eax	      1804	intel_display.c	FUNCTION_60	CALL_8
0x400e037	      0xb901000000	                              mov ecx, 1	      1804	intel_display.c	FUNCTION_60	CALL_8
0x400e03c	      0xbe64000f00	                        mov esi, 0xf0064	      1804	intel_display.c	FUNCTION_60	CALL_8
0x400e041	      0xe800000000	                          call 0x400e046	      1804	intel_display.c	FUNCTION_60	CALL_8
0x400e046	              0x5b	                                 pop rbx	      1805	intel_display.c	FUNCTION_60
0x400e047	              0xc3	                                     ret	      1805	intel_display.c	FUNCTION_60
intel_primary_plane_format_mod_supported	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,4:ELSE,2:functions,0:CALL,7	111
0x4001b70	    0x48b8ffffffff	           movabs rax, 0xffffffffffffff 	     13054	intel_display.c	FUNCTION_367	IF_1	CALL_2
0x4001b7a	          0x4839c2	                            cmp rdx, rax	     13054	intel_display.c	FUNCTION_367	IF_1	CALL_2
0x4001b7d	     0xf845f010000	                            je 0x4001ce2	     13054	intel_display.c	FUNCTION_367	IF_1	CALL_2
0x4001b83	          0x4889d0	                            mov rax, rdx	     13057	intel_display.c	FUNCTION_367	IF_2
0x4001b86	        0x48c1e838	                           shr rax, 0x38	     13057	intel_display.c	FUNCTION_367	IF_2
0x4001b8a	        0x4883f801	                              cmp rax, 1	     13057	intel_display.c	FUNCTION_367	IF_2
0x4001b8e	           0xf95c1	                                setne cl	     13057	intel_display.c	FUNCTION_367	IF_2
0x4001b91	          0x4885d2	                           test rdx, rdx	     13057	intel_display.c	FUNCTION_367	IF_2
0x4001b94	           0xf95c0	                                setne al	     13057	intel_display.c	FUNCTION_367	IF_2
0x4001b97	            0x20c8	                              and al, cl	     13057	intel_display.c	FUNCTION_367	IF_2
0x4001b99	     0xf8599000000	                           jne 0x4001c38	     13057	intel_display.c	FUNCTION_367	IF_2
0x4001b9f	          0x488b0f	                    mov rcx, qword [rdi]	     13061	intel_display.c	FUNCTION_367	IF_3	CALL_3
0x4001ba2	     0xfb6895c0600	          movzx ecx, byte [rcx + 0x65c] 	     13061	intel_display.c	FUNCTION_367	IF_3	CALL_3
0x4001ba9	          0x80f908	                               cmp cl, 8	     13061	intel_display.c	FUNCTION_367	IF_3	CALL_3
0x4001bac	            0x7741	                            ja 0x4001bef	     13061	intel_display.c	FUNCTION_367	IF_3	CALL_3
0x4001bae	          0x80f903	                               cmp cl, 3	     13063	intel_display.c	FUNCTION_367	ELSE_1	IF_4	CALL_5
0x4001bb1	     0xf8684000000	                           jbe 0x4001c3b	     13063	intel_display.c	FUNCTION_367	ELSE_1	IF_4	CALL_5
0x4001bb7	    0x81fe58523330	                     cmp esi, 0x30335258	     13002	intel_display.c	FUNCTION_365	SWITCH_1
0x4001bbd	     0xf8406010000	                            je 0x4001cc9	     13002	intel_display.c	FUNCTION_365	SWITCH_1
0x4001bc3	     0xf86ec000000	                           jbe 0x4001cb5	     13002	intel_display.c	FUNCTION_365	SWITCH_1
0x4001bc9	    0x81fe58523234	                     cmp esi, 0x34325258	     13002	intel_display.c	FUNCTION_365	SWITCH_1
0x4001bcf	     0xf84f4000000	                            je 0x4001cc9	     13002	intel_display.c	FUNCTION_365	SWITCH_1
0x4001bd5	    0x81fe52473136	                     cmp esi, 0x36314752	     13002	intel_display.c	FUNCTION_365	SWITCH_1
0x4001bdb	     0xf84e8000000	                            je 0x4001cc9	     13002	intel_display.c	FUNCTION_365	SWITCH_1
0x4001be1	    0x81fe58423234	                     cmp esi, 0x34324258	     13002	intel_display.c	FUNCTION_365	SWITCH_1
0x4001be7	     0xf84dc000000	                            je 0x4001cc9	     13002	intel_display.c	FUNCTION_365	SWITCH_1
0x4001bed	            0xf3c3	                                     ret	     13067	intel_display.c	FUNCTION_367
0x4001bef	    0x81fe41523234	                     cmp esi, 0x34325241	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001bf5	     0xf840d010000	                            je 0x4001d08	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001bfb	            0x7775	                            ja 0x4001c72	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001bfd	    0x81fe58523330	                     cmp esi, 0x30335258	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001c03	     0xf8493000000	                            je 0x4001c9c	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001c09	     0xf8724010000	                            ja 0x4001d33	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001c0f	    0x81fe43382020	                     cmp esi, 0x20203843	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001c15	     0xf852a010000	                           jne 0x4001d45	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001c1b	    0x48b8ffffffff	          movabs rax, 0xfeffffffffffffff	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001c25	          0x4801d0	                            add rax, rdx	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001c28	        0x4883f801	                              cmp rax, 1	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001c2c	           0xf96c1	                                setbe cl	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001c2f	          0x4885d2	                           test rdx, rdx	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001c32	           0xf94c0	                                 sete al	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001c35	             0x9c8	                             or eax, ecx	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001c37	              0xc3	                                     ret	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001c38	            0x31c0	                            xor eax, eax	     13059	intel_display.c	FUNCTION_367	IF_2
0x4001c3a	              0xc3	                                     ret	     13059	intel_display.c	FUNCTION_367	IF_2
0x4001c3b	    0x81fe58523234	                     cmp esi, 0x34325258	     12988	intel_display.c	FUNCTION_364	SWITCH_1
0x4001c41	            0x7416	                            je 0x4001c59	     12988	intel_display.c	FUNCTION_364	SWITCH_1
0x4001c43	     0xf86b1000000	                           jbe 0x4001cfa	     12988	intel_display.c	FUNCTION_364	SWITCH_1
0x4001c49	    0x81fe58523135	                     cmp esi, 0x35315258	     12988	intel_display.c	FUNCTION_364	SWITCH_1
0x4001c4f	            0x7408	                            je 0x4001c59	     12988	intel_display.c	FUNCTION_364	SWITCH_1
0x4001c51	    0x81fe52473136	                     cmp esi, 0x36314752	     12988	intel_display.c	FUNCTION_364	SWITCH_1
0x4001c57	            0x7594	                           jne 0x4001bed	     12988	intel_display.c	FUNCTION_364	SWITCH_1
0x4001c59	          0x4885d2	                           test rdx, rdx	     12993	intel_display.c	FUNCTION_364	SWITCH_1
0x4001c5c	    0x48b801000000	          movabs rax, 0x100000000000001 	     12993	intel_display.c	FUNCTION_364	SWITCH_1
0x4001c66	           0xf94c1	                                 sete cl	     12993	intel_display.c	FUNCTION_364	SWITCH_1
0x4001c69	          0x4839c2	                            cmp rdx, rax	     12993	intel_display.c	FUNCTION_364	SWITCH_1
0x4001c6c	           0xf94c0	                                 sete al	     12993	intel_display.c	FUNCTION_364	SWITCH_1
0x4001c6f	             0x9c8	                             or eax, ecx	     12993	intel_display.c	FUNCTION_364	SWITCH_1
0x4001c71	              0xc3	                                     ret	     12993	intel_display.c	FUNCTION_364	SWITCH_1
0x4001c72	    0x81fe59565955	                     cmp esi, 0x55595659	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001c78	            0x7422	                            je 0x4001c9c	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001c7a	     0xf869d000000	                           jbe 0x4001d1d	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001c80	    0x81fe56595559	                     cmp esi, 0x59555956	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001c86	            0x7414	                            je 0x4001c9c	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001c88	    0x81fe55595659	                     cmp esi, 0x59565955	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001c8e	            0x740c	                            je 0x4001c9c	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001c90	    0x81fe59555956	                     cmp esi, 0x56595559	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001c96	     0xf8551ffffff	                           jne 0x4001bed	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001c9c	    0x48b803000000	          movabs rax, 0x100000000000003 	     13034	intel_display.c	FUNCTION_366	SWITCH_1	IF_2
0x4001ca6	          0x4839c2	                            cmp rdx, rax	     13034	intel_display.c	FUNCTION_366	SWITCH_1	IF_2
0x4001ca9	     0xf856cffffff	                           jne 0x4001c1b	     13034	intel_display.c	FUNCTION_366	SWITCH_1	IF_2
0x4001caf	      0xb801000000	                              mov eax, 1	     13025	intel_display.c	FUNCTION_366	SWITCH_1	IF_1
0x4001cb4	              0xc3	                                     ret	     13025	intel_display.c	FUNCTION_366	SWITCH_1	IF_1
0x4001cb5	    0x81fe43382020	                     cmp esi, 0x20203843	     13002	intel_display.c	FUNCTION_365	SWITCH_1
0x4001cbb	            0x740c	                            je 0x4001cc9	     13002	intel_display.c	FUNCTION_365	SWITCH_1
0x4001cbd	    0x81fe58423330	                     cmp esi, 0x30334258	     13002	intel_display.c	FUNCTION_365	SWITCH_1
0x4001cc3	     0xf8524ffffff	                           jne 0x4001bed	     13002	intel_display.c	FUNCTION_365	SWITCH_1
0x4001cc9	    0x48b801000000	          movabs rax, 0x100000000000001 	     13009	intel_display.c	FUNCTION_365	SWITCH_1
0x4001cd3	          0x4839c2	                            cmp rdx, rax	     13009	intel_display.c	FUNCTION_365	SWITCH_1
0x4001cd6	           0xf94c1	                                 sete cl	     13009	intel_display.c	FUNCTION_365	SWITCH_1
0x4001cd9	          0x4885d2	                           test rdx, rdx	     13009	intel_display.c	FUNCTION_365	SWITCH_1
0x4001cdc	           0xf94c0	                                 sete al	     13009	intel_display.c	FUNCTION_365	SWITCH_1
0x4001cdf	             0x9c8	                             or eax, ecx	     13009	intel_display.c	FUNCTION_365	SWITCH_1
0x4001ce1	              0xc3	                                     ret	     13009	intel_display.c	FUNCTION_365	SWITCH_1
0x4001ce2	    0x48c7c6000000	                              mov rsi, 0	     13054	intel_display.c	FUNCTION_367	IF_1	CALL_2
0x4001ce9	    0x48c7c7000000	                              mov rdi, 0	     13054	intel_display.c	FUNCTION_367	IF_1	CALL_2
0x4001cf0	      0xe800000000	                          call 0x4001cf5	     13054	intel_display.c	FUNCTION_367	IF_1	CALL_2
0x4001cf5	             0xf0b	                                     ud2	     13054	intel_display.c	FUNCTION_367	IF_1	CALL_2
0x4001cf7	            0x31c0	                            xor eax, eax	     13055	intel_display.c	FUNCTION_367	IF_1
0x4001cf9	              0xc3	                                     ret	     13055	intel_display.c	FUNCTION_367	IF_1
0x4001cfa	    0x81fe43382020	                     cmp esi, 0x20203843	     12988	intel_display.c	FUNCTION_364	SWITCH_1
0x4001d00	     0xf8453ffffff	                            je 0x4001c59	     12988	intel_display.c	FUNCTION_364	SWITCH_1
0x4001d06	            0xf3c3	                                     ret	     13067	intel_display.c	FUNCTION_367
0x4001d08	    0x48b8fcffffff	          movabs rax, 0xfefffffffffffffc	     13023	intel_display.c	FUNCTION_366	SWITCH_1	IF_1
0x4001d12	          0x4801d0	                            add rax, rdx	     13023	intel_display.c	FUNCTION_366	SWITCH_1	IF_1
0x4001d15	        0x4883f801	                              cmp rax, 1	     13023	intel_display.c	FUNCTION_366	SWITCH_1	IF_1
0x4001d19	            0x7781	                            ja 0x4001c9c	     13023	intel_display.c	FUNCTION_366	SWITCH_1	IF_1
0x4001d1b	            0xeb92	                           jmp 0x4001caf	     13023	intel_display.c	FUNCTION_366	SWITCH_1	IF_1
0x4001d1d	    0x81fe58523234	                     cmp esi, 0x34325258	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001d23	            0x74e3	                            je 0x4001d08	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001d25	    0x81fe52473136	                     cmp esi, 0x36314752	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001d2b	     0xf846bffffff	                            je 0x4001c9c	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001d31	            0xf3c3	                                     ret	     13067	intel_display.c	FUNCTION_367
0x4001d33	    0x81fe41423234	                     cmp esi, 0x34324241	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001d39	            0x74cd	                            je 0x4001d08	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001d3b	    0x81fe58423234	                     cmp esi, 0x34324258	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001d41	            0x74c5	                            je 0x4001d08	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001d43	            0xf3c3	                                     ret	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001d45	    0x81fe58423330	                     cmp esi, 0x30334258	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001d4b	     0xf844bffffff	                            je 0x4001c9c	     13018	intel_display.c	FUNCTION_366	SWITCH_1
0x4001d51	            0xf3c3	                                     ret	     13067	intel_display.c	FUNCTION_367
hsw_disable_ips	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,3:ELSE,1:functions,0:CALL,12	59
0x400feb0	    0x80bf48030000	               cmp byte [rdi + 0x348], 0	      4964	intel_display.c	FUNCTION_149	IF_1
0x400feb7	     0xf84c2000000	                            je 0x400ff7f	      4964	intel_display.c	FUNCTION_149	IF_1
0x400febd	            0x4154	                                push r12	      4959	intel_display.c	FUNCTION_149
0x400febf	              0x55	                                push rbp	      4959	intel_display.c	FUNCTION_149
0x400fec0	              0x53	                                push rbx	      4959	intel_display.c	FUNCTION_149
0x400fec1	          0x488b2f	                    mov rbp, qword [rdi]	      4960	intel_display.c	FUNCTION_149	CALL_1
0x400fec4	        0x488b5d00	                    mov rbx, qword [rbp]	      4961	intel_display.c	FUNCTION_149
0x400fec8	    0xf68366060000	          test byte [rbx + 0x666], 0x10 	      4967	intel_display.c	FUNCTION_149	IF_2	CALL_3
0x400fecf	            0x746b	                            je 0x400ff3c	      4967	intel_display.c	FUNCTION_149	IF_2	CALL_3
0x400fed1	    0x4c8da3806b00	                 lea r12, [rbx + 0x6b80]	      4968	intel_display.c	FUNCTION_149	IF_2	CALL_4
0x400fed8	          0x4c89e7	                            mov rdi, r12	      4968	intel_display.c	FUNCTION_149	IF_2	CALL_4
0x400fedb	      0xe800000000	                          call 0x400fee0	      4968	intel_display.c	FUNCTION_149	IF_2	CALL_4
0x400fee0	          0x4531c0	                            xor r8d, r8d	      4969	intel_display.c	FUNCTION_149	IF_2	CALL_6
0x400fee3	            0x31d2	                            xor edx, edx	      4969	intel_display.c	FUNCTION_149	IF_2	CALL_6
0x400fee5	      0xb9f4010000	                          mov ecx, 0x1f4	      4969	intel_display.c	FUNCTION_149	IF_2	CALL_6
0x400feea	      0xbe19000000	                           mov esi, 0x19	      4969	intel_display.c	FUNCTION_149	IF_2	CALL_6
0x400feef	          0x4889df	                            mov rdi, rbx	      4969	intel_display.c	FUNCTION_149	IF_2	CALL_6
0x400fef2	      0xe800000000	                          call 0x400fef7	      4969	intel_display.c	FUNCTION_149	IF_2	CALL_6
0x400fef7	            0x85c0	                           test eax, eax	      4969	intel_display.c	FUNCTION_149	IF_2	CALL_6
0x400fef9	     0xf8582000000	                           jne 0x400ff81	      4969	intel_display.c	FUNCTION_149	IF_2	CALL_6
0x400feff	          0x4c89e7	                            mov rdi, r12	      4970	intel_display.c	FUNCTION_149	IF_2	CALL_7
0x400ff02	      0xe800000000	                          call 0x400ff07	      4970	intel_display.c	FUNCTION_149	IF_2	CALL_7
0x400ff07	            0x6a00	                                  push 0	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400ff09	            0x31c9	                            xor ecx, ecx	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400ff0b	      0xba00000080	                     mov edx, 0x80000000	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400ff10	    0x41b92a000000	                           mov r9d, 0x2a	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400ff16	    0x41b802000000	                              mov r8d, 2	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400ff1c	      0xbe08340400	                        mov esi, 0x43408	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400ff21	          0x4889df	                            mov rdi, rbx	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400ff24	      0xe800000000	                          call 0x400ff29	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400ff29	            0x85c0	                           test eax, eax	      4972	intel_display.c	FUNCTION_149	IF_2	IF_3	CALL_8
0x400ff2b	              0x5a	                                 pop rdx	      4972	intel_display.c	FUNCTION_149	IF_2	IF_3	CALL_8
0x400ff2c	            0x743f	                            je 0x400ff6d	      4972	intel_display.c	FUNCTION_149	IF_2	IF_3	CALL_8
0x400ff2e	    0x48c7c7000000	                              mov rdi, 0	      4975	intel_display.c	FUNCTION_149	IF_2	CALL_9
0x400ff35	      0xe800000000	                          call 0x400ff3a	      4975	intel_display.c	FUNCTION_149	IF_2	CALL_9
0x400ff3a	            0xeb31	                           jmp 0x400ff6d	      4975	intel_display.c	FUNCTION_149	IF_2	CALL_9
0x400ff3c	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      4977	intel_display.c	FUNCTION_149	ELSE_1	CALL_10
0x400ff43	            0x31d2	                            xor edx, edx	      4977	intel_display.c	FUNCTION_149	ELSE_1	CALL_10
0x400ff45	      0xbe08340400	                        mov esi, 0x43408	      4977	intel_display.c	FUNCTION_149	ELSE_1	CALL_10
0x400ff4a	          0x4889df	                            mov rdi, rbx	      4977	intel_display.c	FUNCTION_149	ELSE_1	CALL_10
0x400ff4d	      0xb901000000	                              mov ecx, 1	      4977	intel_display.c	FUNCTION_149	ELSE_1	CALL_10
0x400ff52	      0xe800000000	                          call 0x400ff57	      4977	intel_display.c	FUNCTION_149	ELSE_1	CALL_10
0x400ff57	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      4978	intel_display.c	FUNCTION_149	ELSE_1	CALL_11
0x400ff5e	            0x31d2	                            xor edx, edx	      4978	intel_display.c	FUNCTION_149	ELSE_1	CALL_11
0x400ff60	      0xbe08340400	                        mov esi, 0x43408	      4978	intel_display.c	FUNCTION_149	ELSE_1	CALL_11
0x400ff65	          0x4889df	                            mov rdi, rbx	      4978	intel_display.c	FUNCTION_149	ELSE_1	CALL_11
0x400ff68	      0xe800000000	                          call 0x400ff6d	      4978	intel_display.c	FUNCTION_149	ELSE_1	CALL_11
0x400ff6d	    0x8bb5b0040000	           mov esi, dword [rbp + 0x4b0] 	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x400ff73	          0x4889df	                            mov rdi, rbx	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x400ff76	              0x5b	                                 pop rbx	      4983	intel_display.c	FUNCTION_149
0x400ff77	              0x5d	                                 pop rbp	      4983	intel_display.c	FUNCTION_149
0x400ff78	            0x415c	                                 pop r12	      4983	intel_display.c	FUNCTION_149
0x400ff7a	      0xe900000000	                           jmp 0x400ff7f	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x400ff7f	            0xf3c3	                                     ret	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x400ff81	    0x48c7c6000000	                              mov rsi, 0	      4969	intel_display.c	FUNCTION_149	IF_2	CALL_6
0x400ff88	    0x48c7c7000000	                              mov rdi, 0	      4969	intel_display.c	FUNCTION_149	IF_2	CALL_6
0x400ff8f	      0xe800000000	                          call 0x400ff94	      4969	intel_display.c	FUNCTION_149	IF_2	CALL_6
0x400ff94	             0xf0b	                                     ud2	      4969	intel_display.c	FUNCTION_149	IF_2	CALL_6
0x400ff96	      0xe964ffffff	                           jmp 0x400feff	      4969	intel_display.c	FUNCTION_149	IF_2	CALL_6
intel_compute_tile_offset	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,1:functions,0:CALL,6	59
0x400e7d0	            0x4157	                                push r15	      2376	intel_display.c	FUNCTION_84
0x400e7d2	            0x4156	                                push r14	      2376	intel_display.c	FUNCTION_84
0x400e7d4	          0x4989f7	                            mov r15, rsi	      2376	intel_display.c	FUNCTION_84
0x400e7d7	            0x4155	                                push r13	      2376	intel_display.c	FUNCTION_84
0x400e7d9	            0x4154	                                push r12	      2376	intel_display.c	FUNCTION_84
0x400e7db	          0x4989fe	                            mov r14, rdi	      2376	intel_display.c	FUNCTION_84
0x400e7de	              0x55	                                push rbp	      2376	intel_display.c	FUNCTION_84
0x400e7df	              0x53	                                push rbx	      2376	intel_display.c	FUNCTION_84
0x400e7e0	            0x89cd	                            mov ebp, ecx	      2376	intel_display.c	FUNCTION_84
0x400e7e2	        0x4883ec08	                              sub rsp, 8	      2376	intel_display.c	FUNCTION_84
0x400e7e6	        0x448b6240	           mov r12d, dword [rdx + 0x40] 	      2380	intel_display.c	FUNCTION_84
0x400e7ea	          0x488b02	                    mov rax, qword [rdx]	      2377	intel_display.c	FUNCTION_84	CALL_1
0x400e7ed	        0x488b5a10	            mov rbx, qword [rdx + 0x10] 	      2379	intel_display.c	FUNCTION_84
0x400e7f1	          0x4863d1	                         movsxd rdx, ecx	      2186	intel_display.c	FUNCTION_77	CALL_2
0x400e7f4	        0x41f6c40a	                          test r12b, 0xa	      2185	intel_display.c	FUNCTION_77	IF_1	CALL_1
0x400e7f8	          0x4c8b28	                    mov r13, qword [rax]	      2378	intel_display.c	FUNCTION_84	CALL_2
0x400e7fb	            0x7453	                            je 0x400e850	      2185	intel_display.c	FUNCTION_77	IF_1	CALL_1
0x400e7fd	    0x83b884020000	              cmp dword [rax + 0x284], 4	      2384	intel_display.c	FUNCTION_84	IF_1
0x400e804	        0x488d1452	                  lea rdx, [rdx + rdx*2]	      2186	intel_display.c	FUNCTION_77	CALL_2
0x400e808	    0x448b8c930801	   mov r9d, dword [rbx + rdx*4 + 0x108] 	      2186	intel_display.c	FUNCTION_77	CALL_2
0x400e810	            0x744c	                            je 0x400e85e	      2384	intel_display.c	FUNCTION_84	IF_1
0x400e812	          0x488b3b	                    mov rdi, qword [rbx]	      2387	intel_display.c	FUNCTION_84	CALL_5
0x400e815	        0x488d7378	                   lea rsi, [rbx + 0x78]	      2387	intel_display.c	FUNCTION_84	CALL_5
0x400e819	            0x89ea	                            mov edx, ebp	      2387	intel_display.c	FUNCTION_84	CALL_5
0x400e81b	      0x44894c2404	                mov dword [rsp + 4], r9d	      2387	intel_display.c	FUNCTION_84	CALL_5
0x400e820	      0xe8ab6effff	   call sym.intel_surf_alignment.isra.55	      2387	intel_display.c	FUNCTION_84	CALL_5
0x400e825	      0x448b4c2404	                mov r9d, dword [rsp + 4]	      2387	intel_display.c	FUNCTION_84	CALL_5
0x400e82a	              0x50	                                push rax	      2389	intel_display.c	FUNCTION_84	CALL_6
0x400e82b	            0x4154	                                push r12	      2389	intel_display.c	FUNCTION_84	CALL_6
0x400e82d	          0x4189e8	                            mov r8d, ebp	      2389	intel_display.c	FUNCTION_84	CALL_6
0x400e830	          0x4889d9	                            mov rcx, rbx	      2389	intel_display.c	FUNCTION_84	CALL_6
0x400e833	          0x4c89fa	                            mov rdx, r15	      2389	intel_display.c	FUNCTION_84	CALL_6
0x400e836	          0x4c89f6	                            mov rsi, r14	      2389	intel_display.c	FUNCTION_84	CALL_6
0x400e839	          0x4c89ef	                            mov rdi, r13	      2389	intel_display.c	FUNCTION_84	CALL_6
0x400e83c	      0xe8ef30ffff	     call sym._intel_compute_tile_offset	      2389	intel_display.c	FUNCTION_84	CALL_6
0x400e841	        0x4883c418	                           add rsp, 0x18	      2391	intel_display.c	FUNCTION_84
0x400e845	              0x5b	                                 pop rbx	      2391	intel_display.c	FUNCTION_84
0x400e846	              0x5d	                                 pop rbp	      2391	intel_display.c	FUNCTION_84
0x400e847	            0x415c	                                 pop r12	      2391	intel_display.c	FUNCTION_84
0x400e849	            0x415d	                                 pop r13	      2391	intel_display.c	FUNCTION_84
0x400e84b	            0x415e	                                 pop r14	      2391	intel_display.c	FUNCTION_84
0x400e84d	            0x415f	                                 pop r15	      2391	intel_display.c	FUNCTION_84
0x400e84f	              0xc3	                                     ret	      2391	intel_display.c	FUNCTION_84
0x400e850	    0x83b884020000	              cmp dword [rax + 0x284], 4	      2384	intel_display.c	FUNCTION_84	IF_1
0x400e857	      0x448b4c9358	    mov r9d, dword [rbx + rdx*4 + 0x58] 	      2188	intel_display.c	FUNCTION_77	ELSE_1
0x400e85c	            0x75b4	                           jne 0x400e812	      2384	intel_display.c	FUNCTION_84	IF_1
0x400e85e	    0x418b95640600	           mov edx, dword [r13 + 0x664] 	      2020	intel_display.c	FUNCTION_71	IF_1	CALL_1
0x400e865	      0xb800400000	                         mov eax, 0x4000	      2021	intel_display.c	FUNCTION_71	IF_1
0x400e86a	          0xf6c202	                              test dl, 2	      2020	intel_display.c	FUNCTION_71	IF_1	CALL_1
0x400e86d	            0x75bb	                           jne 0x400e82a	      2020	intel_display.c	FUNCTION_71	IF_1	CALL_1
0x400e86f	          0xf6c208	                              test dl, 8	      2022	intel_display.c	FUNCTION_71	ELSE_1	IF_2	CALL_2
0x400e872	      0xb800010000	                          mov eax, 0x100	      2023	intel_display.c	FUNCTION_71	ELSE_1	IF_2
0x400e877	            0x75b1	                           jne 0x400e82a	      2022	intel_display.c	FUNCTION_71	ELSE_1	IF_2	CALL_2
0x400e879	          0x83e214	                           and edx, 0x14	      2024	intel_display.c	FUNCTION_71	ELSE_2	IF_3	CALL_4
0x400e87c	          0x83fa01	                              cmp edx, 1	      2027	intel_display.c	FUNCTION_71	ELSE_3
0x400e87f	            0x19c0	                            sbb eax, eax	      2027	intel_display.c	FUNCTION_71	ELSE_3
0x400e881	      0x25e00f0000	                          and eax, 0xfe0	      2027	intel_display.c	FUNCTION_71	ELSE_3
0x400e886	          0x83c020	                           add eax, 0x20	      2027	intel_display.c	FUNCTION_71	ELSE_3
0x400e889	            0xeb9f	                           jmp 0x400e82a	      2027	intel_display.c	FUNCTION_71	ELSE_3
vlv_disable_pll	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,5	47
0x400d970	              0x55	                                push rbp	      1592	intel_display.c	FUNCTION_54
0x400d971	              0x53	                                push rbx	      1592	intel_display.c	FUNCTION_54
0x400d972	          0x4863ee	                         movsxd rbp, esi	      1592	intel_display.c	FUNCTION_54
0x400d975	          0x4889fb	                            mov rbx, rdi	      1592	intel_display.c	FUNCTION_54
0x400d978	            0x31d2	                            xor edx, edx	      1596	intel_display.c	FUNCTION_54	CALL_1
0x400d97a	            0x89ee	                            mov esi, ebp	      1596	intel_display.c	FUNCTION_54	CALL_1
0x400d97c	        0x4883ec20	                           sub rsp, 0x20	      1592	intel_display.c	FUNCTION_54
0x400d980	    0x65488b042528	                mov rax, qword gs:[0x28]	      1592	intel_display.c	FUNCTION_54
0x400d989	      0x4889442418	             mov qword [rsp + 0x18], rax	      1592	intel_display.c	FUNCTION_54
0x400d98e	            0x31c0	                            xor eax, eax	      1592	intel_display.c	FUNCTION_54
0x400d990	      0xe800000000	                          call 0x400d995	      1596	intel_display.c	FUNCTION_54	CALL_1
0x400d995	    0x8b836c060000	           mov eax, dword [rbx + 0x66c] 	      1603	intel_display.c	FUNCTION_54	CALL_3
0x400d99b	          0x83fd01	                              cmp ebp, 1	      1601	intel_display.c	FUNCTION_54	IF_1
0x400d99e	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	      1603	intel_display.c	FUNCTION_54	CALL_3
0x400d9a5	            0x19d2	                            sbb edx, edx	      1601	intel_display.c	FUNCTION_54	IF_1
0x400d9a7	          0x4889df	                            mov rdi, rbx	      1603	intel_display.c	FUNCTION_54	CALL_3
0x400d9aa	    0x81e200c0ffff	                     and edx, 0xffffc000	      1601	intel_display.c	FUNCTION_54	IF_1
0x400d9b0	    0x8d8814600000	                 lea ecx, [rax + 0x6014]	      1603	intel_display.c	FUNCTION_54	CALL_3
0x400d9b6	    0x81c200600030	                     add edx, 0x30006000	      1601	intel_display.c	FUNCTION_54	IF_1
0x400d9bc	          0x890c24	                    mov dword [rsp], ecx	      1603	intel_display.c	FUNCTION_54	CALL_3
0x400d9bf	    0x8d8818600000	                 lea ecx, [rax + 0x6018]	      1603	intel_display.c	FUNCTION_54	CALL_3
0x400d9c5	       0x530600000	                         add eax, 0x6030	      1603	intel_display.c	FUNCTION_54	CALL_3
0x400d9ca	        0x89442408	                mov dword [rsp + 8], eax	      1603	intel_display.c	FUNCTION_54	CALL_3
0x400d9ce	        0x894c2404	                mov dword [rsp + 4], ecx	      1603	intel_display.c	FUNCTION_54	CALL_3
0x400d9d2	      0xb901000000	                              mov ecx, 1	      1603	intel_display.c	FUNCTION_54	CALL_3
0x400d9d7	          0x8b34ac	            mov esi, dword [rsp + rbp*4]	      1603	intel_display.c	FUNCTION_54	CALL_3
0x400d9da	      0xe800000000	                          call 0x400d9df	      1603	intel_display.c	FUNCTION_54	CALL_3
0x400d9df	    0x8b836c060000	           mov eax, dword [rbx + 0x66c] 	      1604	intel_display.c	FUNCTION_54	CALL_5
0x400d9e5	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	      1604	intel_display.c	FUNCTION_54	CALL_5
0x400d9ec	          0x4889df	                            mov rdi, rbx	      1604	intel_display.c	FUNCTION_54	CALL_5
0x400d9ef	    0x8d9014600000	                 lea edx, [rax + 0x6014]	      1604	intel_display.c	FUNCTION_54	CALL_5
0x400d9f5	        0x8954240c	              mov dword [rsp + 0xc], edx	      1604	intel_display.c	FUNCTION_54	CALL_5
0x400d9f9	    0x8d9018600000	                 lea edx, [rax + 0x6018]	      1604	intel_display.c	FUNCTION_54	CALL_5
0x400d9ff	       0x530600000	                         add eax, 0x6030	      1604	intel_display.c	FUNCTION_54	CALL_5
0x400da04	        0x89442414	             mov dword [rsp + 0x14], eax	      1604	intel_display.c	FUNCTION_54	CALL_5
0x400da08	        0x89542410	             mov dword [rsp + 0x10], edx	      1604	intel_display.c	FUNCTION_54	CALL_5
0x400da0c	            0x31d2	                            xor edx, edx	      1604	intel_display.c	FUNCTION_54	CALL_5
0x400da0e	        0x8b74ac0c	     mov esi, dword [rsp + rbp*4 + 0xc] 	      1604	intel_display.c	FUNCTION_54	CALL_5
0x400da12	      0xe800000000	                          call 0x400da17	      1604	intel_display.c	FUNCTION_54	CALL_5
0x400da17	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1605	intel_display.c	FUNCTION_54
0x400da1c	    0x654833042528	                xor rax, qword gs:[0x28]	      1605	intel_display.c	FUNCTION_54
0x400da25	            0x7507	                           jne 0x400da2e	      1605	intel_display.c	FUNCTION_54
0x400da27	        0x4883c420	                           add rsp, 0x20	      1605	intel_display.c	FUNCTION_54
0x400da2b	              0x5b	                                 pop rbx	      1605	intel_display.c	FUNCTION_54
0x400da2c	              0x5d	                                 pop rbp	      1605	intel_display.c	FUNCTION_54
0x400da2d	              0xc3	                                     ret	      1605	intel_display.c	FUNCTION_54
0x400da2e	      0xe800000000	                          call 0x400da33	      1605	intel_display.c	FUNCTION_54
valleyview_crtc_enable	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,4:ELSE,1:functions,0:CALL,30	120
0x4013210	            0x4157	                                push r15	      5813	intel_display.c	FUNCTION_177
0x4013212	            0x4156	                                push r14	      5813	intel_display.c	FUNCTION_177
0x4013214	            0x4155	                                push r13	      5813	intel_display.c	FUNCTION_177
0x4013216	            0x4154	                                push r12	      5813	intel_display.c	FUNCTION_177
0x4013218	              0x55	                                push rbp	      5813	intel_display.c	FUNCTION_177
0x4013219	              0x53	                                push rbx	      5813	intel_display.c	FUNCTION_177
0x401321a	          0x488b1f	                    mov rbx, qword [rdi]	      5816	intel_display.c	FUNCTION_177
0x401321d	    0x80bbb4040000	               cmp byte [rbx + 0x4b4], 0	      5822	intel_display.c	FUNCTION_177	IF_1	CALL_4
0x4013224	          0x4c8b23	                    mov r12, qword [rbx]	      5817	intel_display.c	FUNCTION_177
0x4013227	    0x448bb3b00400	          mov r14d, dword [rbx + 0x4b0] 	      5820	intel_display.c	FUNCTION_177
0x401322e	     0xf85c5010000	                           jne 0x40133f9	      5822	intel_display.c	FUNCTION_177	IF_1	CALL_4
0x4013234	    0x488b83c80400	           mov rax, qword [rbx + 0x4c8] 	      5822	intel_display.c	FUNCTION_177	IF_1	CALL_4
0x401323b	          0x4889fd	                            mov rbp, rdi	      5822	intel_display.c	FUNCTION_177	IF_1	CALL_4
0x401323e	          0x4989f5	                            mov r13, rsi	      5822	intel_display.c	FUNCTION_177	IF_1	CALL_4
0x4013241	    0xf78044020000	        test dword [rax + 0x244], 0x980 	      5825	intel_display.c	FUNCTION_177	IF_2	CALL_5
0x401324b	     0xf8528010000	                           jne 0x4013379	      5825	intel_display.c	FUNCTION_177	IF_2	CALL_5
0x4013251	          0x4889df	                            mov rdi, rbx	      5828	intel_display.c	FUNCTION_177	CALL_7
0x4013254	      0xe8e7d6feff	         call sym.intel_set_pipe_timings	      5828	intel_display.c	FUNCTION_177	CALL_7
0x4013259	          0x4889df	                            mov rdi, rbx	      5829	intel_display.c	FUNCTION_177	CALL_8
0x401325c	      0xe8dfd9feff	        call sym.intel_set_pipe_src_size	      5829	intel_display.c	FUNCTION_177	CALL_8
0x4013261	    0x41f684246606	          test byte [r12 + 0x666], 0x20 	      5831	intel_display.c	FUNCTION_177	IF_3	CALL_9
0x401326a	            0x740a	                            je 0x4013276	      5831	intel_display.c	FUNCTION_177	IF_3	CALL_9
0x401326c	        0x4183fe01	                             cmp r14d, 1	      5831	intel_display.c	FUNCTION_177	IF_3	CALL_9
0x4013270	     0xf8412010000	                            je 0x4013388	      5831	intel_display.c	FUNCTION_177	IF_3	CALL_9
0x4013276	          0x4889df	                            mov rdi, rbx	      5838	intel_display.c	FUNCTION_177	CALL_15
0x4013279	        0x4d8d7d30	                   lea r15, [r13 + 0x30]	      5838	intel_display.c	FUNCTION_177	CALL_15
0x401327d	      0xe8fef4feff	              call sym.i9xx_set_pipeconf	      5838	intel_display.c	FUNCTION_177	CALL_15
0x4013282	          0x4489f6	                           mov esi, r14d	      5842	intel_display.c	FUNCTION_177	CALL_16
0x4013285	        0x4d8d7528	                   lea r14, [r13 + 0x28]	      5842	intel_display.c	FUNCTION_177	CALL_16
0x4013289	      0xba01000000	                              mov edx, 1	      5842	intel_display.c	FUNCTION_177	CALL_16
0x401328e	          0x4c89e7	                            mov rdi, r12	      5842	intel_display.c	FUNCTION_177	CALL_16
0x4013291	    0xc683b4040000	               mov byte [rbx + 0x4b4], 1	      5840	intel_display.c	FUNCTION_177
0x4013298	      0xe800000000	                          call 0x401329d	      5842	intel_display.c	FUNCTION_177	CALL_16
0x401329d	          0x4c89f9	                            mov rcx, r15	      5844	intel_display.c	FUNCTION_177	CALL_17
0x40132a0	          0x4c89f2	                            mov rdx, r14	      5844	intel_display.c	FUNCTION_177	CALL_17
0x40132a3	          0x4889ee	                            mov rsi, rbp	      5844	intel_display.c	FUNCTION_177	CALL_17
0x40132a6	          0x4889df	                            mov rdi, rbx	      5844	intel_display.c	FUNCTION_177	CALL_17
0x40132a9	      0xe8823dffff	call sym.intel_encoders_pre_pll_enable.isra.105	      5844	intel_display.c	FUNCTION_177	CALL_17
0x40132ae	    0x41f684246606	          test byte [r12 + 0x666], 0x20 	      5846	intel_display.c	FUNCTION_177	IF_4	CALL_18
0x40132b7	     0xf8593000000	                           jne 0x4013350	      5846	intel_display.c	FUNCTION_177	IF_4	CALL_18
0x40132bd	    0x488bb3c80400	           mov rsi, qword [rbx + 0x4c8] 	      5850	intel_display.c	FUNCTION_177	ELSE_1	CALL_21
0x40132c4	          0x4889df	                            mov rdi, rbx	      5850	intel_display.c	FUNCTION_177	ELSE_1	CALL_21
0x40132c7	      0xe864fbfeff	                call sym.vlv_prepare_pll	      5850	intel_display.c	FUNCTION_177	ELSE_1	CALL_21
0x40132cc	    0x488bb3c80400	           mov rsi, qword [rbx + 0x4c8] 	      5851	intel_display.c	FUNCTION_177	ELSE_1	CALL_22
0x40132d3	          0x4889df	                            mov rdi, rbx	      5851	intel_display.c	FUNCTION_177	ELSE_1	CALL_22
0x40132d6	    0x488d96840200	                  lea rdx, [rsi + 0x284]	      5851	intel_display.c	FUNCTION_177	ELSE_1	CALL_22
0x40132dd	    0x4881c6800200	                          add rsi, 0x280	      5851	intel_display.c	FUNCTION_177	ELSE_1	CALL_22
0x40132e4	      0xe857a3ffff	        call sym.vlv_enable_pll.isra.129	      5851	intel_display.c	FUNCTION_177	ELSE_1	CALL_22
0x40132e9	          0x4c89f9	                            mov rcx, r15	      5854	intel_display.c	FUNCTION_177	CALL_23
0x40132ec	          0x4c89f2	                            mov rdx, r14	      5854	intel_display.c	FUNCTION_177	CALL_23
0x40132ef	          0x4889ee	                            mov rsi, rbp	      5854	intel_display.c	FUNCTION_177	CALL_23
0x40132f2	          0x4889df	                            mov rdi, rbx	      5854	intel_display.c	FUNCTION_177	CALL_23
0x40132f5	      0xe8f630ffff	call sym.intel_encoders_pre_enable.isra.97	      5854	intel_display.c	FUNCTION_177	CALL_23
0x40132fa	          0x4889df	                            mov rdi, rbx	      5856	intel_display.c	FUNCTION_177	CALL_24
0x40132fd	      0xe87eaaffff	               call sym.i9xx_pfit_enable	      5856	intel_display.c	FUNCTION_177	CALL_24
0x4013302	          0x4889ef	                            mov rdi, rbp	      5858	intel_display.c	FUNCTION_177	CALL_25
0x4013305	      0xe800000000	                          call 0x401330a	      5858	intel_display.c	FUNCTION_177	CALL_25
0x401330a	          0x4889ee	                            mov rsi, rbp	      5860	intel_display.c	FUNCTION_177	CALL_26
0x401330d	    0x498b84246055	          mov rax, qword [r12 + 0x5560] 	      5860	intel_display.c	FUNCTION_177	CALL_26
0x4013315	          0x4c89ef	                            mov rdi, r13	      5860	intel_display.c	FUNCTION_177	CALL_26
0x4013318	      0xe800000000	                          call 0x401331d	      5860	intel_display.c	FUNCTION_177	CALL_26
0x401331d	          0x4889ef	                            mov rdi, rbp	      5862	intel_display.c	FUNCTION_177	CALL_27
0x4013320	      0xe82b9cffff	              call sym.intel_enable_pipe	      5862	intel_display.c	FUNCTION_177	CALL_27
0x4013325	          0x4889df	                            mov rdi, rbx	      5864	intel_display.c	FUNCTION_177	CALL_28
0x4013328	      0xe88313ffff	         call sym.assert_vblank_disabled	      5864	intel_display.c	FUNCTION_177	CALL_28
0x401332d	          0x4889df	                            mov rdi, rbx	      5865	intel_display.c	FUNCTION_177	CALL_29
0x4013330	      0xe800000000	                          call 0x4013335	      5865	intel_display.c	FUNCTION_177	CALL_29
0x4013335	          0x4c89f9	                            mov rcx, r15	      5867	intel_display.c	FUNCTION_177	CALL_30
0x4013338	          0x4c89f2	                            mov rdx, r14	      5867	intel_display.c	FUNCTION_177	CALL_30
0x401333b	          0x4889ee	                            mov rsi, rbp	      5867	intel_display.c	FUNCTION_177	CALL_30
0x401333e	          0x4889df	                            mov rdi, rbx	      5867	intel_display.c	FUNCTION_177	CALL_30
0x4013341	              0x5b	                                 pop rbx	      5868	intel_display.c	FUNCTION_177
0x4013342	              0x5d	                                 pop rbp	      5868	intel_display.c	FUNCTION_177
0x4013343	            0x415c	                                 pop r12	      5868	intel_display.c	FUNCTION_177
0x4013345	            0x415d	                                 pop r13	      5868	intel_display.c	FUNCTION_177
0x4013347	            0x415e	                                 pop r14	      5868	intel_display.c	FUNCTION_177
0x4013349	            0x415f	                                 pop r15	      5868	intel_display.c	FUNCTION_177
0x401334b	      0xe97031ffff	   jmp sym.intel_encoders_enable.isra.99	      5867	intel_display.c	FUNCTION_177	CALL_30
0x4013350	    0x8bb3b0040000	           mov esi, dword [rbx + 0x4b0] 	      5847	intel_display.c	FUNCTION_177	IF_4	CALL_19
0x4013356	          0x488b3b	                    mov rdi, qword [rbx]	      5847	intel_display.c	FUNCTION_177	IF_4	CALL_19
0x4013359	    0x488b93c80400	           mov rdx, qword [rbx + 0x4c8] 	      5847	intel_display.c	FUNCTION_177	IF_4	CALL_19
0x4013360	      0xe85b7effff	        call sym.chv_prepare_pll.isra.83	      5847	intel_display.c	FUNCTION_177	IF_4	CALL_19
0x4013365	    0x488bb3c80400	           mov rsi, qword [rbx + 0x4c8] 	      5848	intel_display.c	FUNCTION_177	IF_4	CALL_20
0x401336c	          0x4889df	                            mov rdi, rbx	      5848	intel_display.c	FUNCTION_177	IF_4	CALL_20
0x401336f	      0xe81ca0ffff	                 call sym.chv_enable_pll	      5848	intel_display.c	FUNCTION_177	IF_4	CALL_20
0x4013374	      0xe970ffffff	                           jmp 0x40132e9	      5848	intel_display.c	FUNCTION_177	IF_4	CALL_20
0x4013379	            0x31f6	                            xor esi, esi	      5826	intel_display.c	FUNCTION_177	CALL_6
0x401337b	          0x4889df	                            mov rdi, rbx	      5826	intel_display.c	FUNCTION_177	CALL_6
0x401337e	      0xe800000000	                          call 0x4013383	      5826	intel_display.c	FUNCTION_177	CALL_6
0x4013383	      0xe9c9feffff	                           jmp 0x4013251	      5826	intel_display.c	FUNCTION_177	CALL_6
0x4013388	    0x418b84249c06	           mov eax, dword [r12 + 0x69c] 	      5834	intel_display.c	FUNCTION_177	IF_3	CALL_12
0x4013390	    0x412b84249806	            sub eax, dword [r12 + 0x698]	      5834	intel_display.c	FUNCTION_177	IF_3	CALL_12
0x4013398	          0x4c89e7	                            mov rdi, r12	      5834	intel_display.c	FUNCTION_177	IF_3	CALL_12
0x401339b	    0x418b94246c06	           mov edx, dword [r12 + 0x66c] 	      5834	intel_display.c	FUNCTION_177	IF_3	CALL_12
0x40133a3	    0x4d8b84241808	            mov r8, qword [r12 + 0x818] 	      5834	intel_display.c	FUNCTION_177	IF_3	CALL_12
0x40133ab	      0xb901000000	                              mov ecx, 1	      5834	intel_display.c	FUNCTION_177	IF_3	CALL_12
0x40133b0	    0x8db410000a06	          lea esi, [rax + rdx + 0x60a00]	      5834	intel_display.c	FUNCTION_177	IF_3	CALL_12
0x40133b7	            0x31d2	                            xor edx, edx	      5834	intel_display.c	FUNCTION_177	IF_3	CALL_12
0x40133b9	      0xe800000000	                          call 0x40133be	      5834	intel_display.c	FUNCTION_177	IF_3	CALL_12
0x40133be	    0x418b84249c06	           mov eax, dword [r12 + 0x69c] 	      5835	intel_display.c	FUNCTION_177	IF_3	CALL_14
0x40133c6	    0x412b84249806	            sub eax, dword [r12 + 0x698]	      5835	intel_display.c	FUNCTION_177	IF_3	CALL_14
0x40133ce	      0xb901000000	                              mov ecx, 1	      5835	intel_display.c	FUNCTION_177	IF_3	CALL_14
0x40133d3	    0x418b94246c06	           mov edx, dword [r12 + 0x66c] 	      5835	intel_display.c	FUNCTION_177	IF_3	CALL_14
0x40133db	    0x4d8b84241808	            mov r8, qword [r12 + 0x818] 	      5835	intel_display.c	FUNCTION_177	IF_3	CALL_14
0x40133e3	          0x4c89e7	                            mov rdi, r12	      5835	intel_display.c	FUNCTION_177	IF_3	CALL_14
0x40133e6	    0x8db410040a06	          lea esi, [rax + rdx + 0x60a04]	      5835	intel_display.c	FUNCTION_177	IF_3	CALL_14
0x40133ed	            0x31d2	                            xor edx, edx	      5835	intel_display.c	FUNCTION_177	IF_3	CALL_14
0x40133ef	      0xe800000000	                          call 0x40133f4	      5835	intel_display.c	FUNCTION_177	IF_3	CALL_14
0x40133f4	      0xe97dfeffff	                           jmp 0x4013276	      5835	intel_display.c	FUNCTION_177	IF_3	CALL_14
0x40133f9	    0x48c7c6000000	                              mov rsi, 0	      5822	intel_display.c	FUNCTION_177	IF_1	CALL_4
0x4013400	    0x48c7c7000000	                              mov rdi, 0	      5822	intel_display.c	FUNCTION_177	IF_1	CALL_4
0x4013407	      0xe800000000	                          call 0x401340c	      5822	intel_display.c	FUNCTION_177	IF_1	CALL_4
0x401340c	             0xf0b	                                     ud2	      5822	intel_display.c	FUNCTION_177	IF_1	CALL_4
0x401340e	              0x5b	                                 pop rbx	      5868	intel_display.c	FUNCTION_177
0x401340f	              0x5d	                                 pop rbp	      5868	intel_display.c	FUNCTION_177
0x4013410	            0x415c	                                 pop r12	      5868	intel_display.c	FUNCTION_177
0x4013412	            0x415d	                                 pop r13	      5868	intel_display.c	FUNCTION_177
0x4013414	            0x415e	                                 pop r14	      5868	intel_display.c	FUNCTION_177
0x4013416	            0x415f	                                 pop r15	      5868	intel_display.c	FUNCTION_177
0x4013418	              0xc3	                                     ret	      5868	intel_display.c	FUNCTION_177
intel_plane_atomic_calc_changes	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,16:ELSE,2:functions,0:CALL,25	320
0x4016fe0	            0x4157	                                push r15	     10275	intel_display.c	FUNCTION_302
0x4016fe2	            0x4156	                                push r14	     10275	intel_display.c	FUNCTION_302
0x4016fe4	            0x4155	                                push r13	     10275	intel_display.c	FUNCTION_302
0x4016fe6	            0x4154	                                push r12	     10275	intel_display.c	FUNCTION_302
0x4016fe8	          0x4989f4	                            mov r12, rsi	     10275	intel_display.c	FUNCTION_302
0x4016feb	              0x55	                                push rbp	     10275	intel_display.c	FUNCTION_302
0x4016fec	              0x53	                                push rbx	     10275	intel_display.c	FUNCTION_302
0x4016fed	          0x4889cb	                            mov rbx, rcx	     10275	intel_display.c	FUNCTION_302
0x4016ff0	        0x4883ec30	                           sub rsp, 0x30	     10275	intel_display.c	FUNCTION_302
0x4016ff4	          0x4c8b16	                    mov r10, qword [rsi]	     10277	intel_display.c	FUNCTION_302
0x4016ff7	          0x4c8b29	                    mov r13, qword [rcx]	     10279	intel_display.c	FUNCTION_302	CALL_3
0x4016ffa	      0x4889542408	                mov qword [rsp + 8], rdx	     10275	intel_display.c	FUNCTION_302
0x4016fff	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	       893	drm_atomic.h	FUNCTION_511
0x4017007	          0x498b02	                    mov rax, qword [r10]	     10280	intel_display.c	FUNCTION_302
0x401700a	        0x48890424	                    mov qword [rsp], rax	     10280	intel_display.c	FUNCTION_302
0x401700e	         0xfb6460a	            movzx eax, byte [rsi + 0xa] 	       893	drm_atomic.h	FUNCTION_511
0x4017012	            0x89c5	                            mov ebp, eax	       893	drm_atomic.h	FUNCTION_511
0x4017014	          0x40d0ed	                              shr bpl, 1	       893	drm_atomic.h	FUNCTION_511
0x4017017	          0x83e501	                              and ebp, 1	       893	drm_atomic.h	FUNCTION_511
0x401701a	            0x750f	                           jne 0x401702b	       893	drm_atomic.h	FUNCTION_511
0x401701c	            0x89c5	                            mov ebp, eax	       893	drm_atomic.h	FUNCTION_511
0x401701e	        0x40c0ed02	                              shr bpl, 2	       893	drm_atomic.h	FUNCTION_511
0x4017022	          0x83e501	                              and ebp, 1	       893	drm_atomic.h	FUNCTION_511
0x4017025	     0xf8455020000	                            je 0x4017280	       893	drm_atomic.h	FUNCTION_511
0x401702b	         0xfb64709	               movzx eax, byte [rdi + 9]	     10283	intel_display.c	FUNCTION_302
0x401702f	        0x4c8b5b10	            mov r11, qword [rbx + 0x10] 	     10286	intel_display.c	FUNCTION_302
0x4017033	        0x88442410	               mov byte [rsp + 0x10], al	     10283	intel_display.c	FUNCTION_302
0x4017037	    0x410fb6442409	               movzx eax, byte [r12 + 9]	     10284	intel_display.c	FUNCTION_302
0x401703d	        0x88442418	               mov byte [rsp + 0x18], al	     10284	intel_display.c	FUNCTION_302
0x4017041	        0x488b0424	                    mov rax, qword [rsp]	     10289	intel_display.c	FUNCTION_302	IF_1	CALL_6
0x4017045	    0x80b85c060000	               cmp byte [rax + 0x65c], 8	     10289	intel_display.c	FUNCTION_302	IF_1	CALL_6
0x401704c	     0xf86cf000000	                           jbe 0x4017121	     10289	intel_display.c	FUNCTION_302	IF_1	CALL_6
0x4017052	    0x4183bd840200	              cmp dword [r13 + 0x284], 4	     10289	intel_display.c	FUNCTION_302	IF_1	CALL_6
0x401705a	     0xf84c1000000	                            je 0x4017121	     10289	intel_display.c	FUNCTION_302	IF_1	CALL_6
0x4017060	          0x4d85db	                           test r11, r11	      4822	intel_display.c	FUNCTION_144
0x4017063	     0xf8479040000	                            je 0x40174e2	      4822	intel_display.c	FUNCTION_144
0x4017069	         0xfb67374	           movzx esi, byte [rbx + 0x74] 	      4822	intel_display.c	FUNCTION_144
0x401706d	          0x83f601	                              xor esi, 1	      4822	intel_display.c	FUNCTION_144
0x4017070	        0x400fb6f6	                          movzx esi, sil	      4822	intel_display.c	FUNCTION_144
0x4017074	          0x8b4370	            mov eax, dword [rbx + 0x70] 	      4824	intel_display.c	FUNCTION_144	CALL_2
0x4017077	          0x2b4368	             sub eax, dword [rbx + 0x68]	      4824	intel_display.c	FUNCTION_144	CALL_2
0x401707a	    0x488d8bb80000	                   lea rcx, [rbx + 0xb8]	      4824	intel_display.c	FUNCTION_144	CALL_2
0x4017081	      0x4c895c2428	             mov qword [rsp + 0x28], r11	      4824	intel_display.c	FUNCTION_144	CALL_2
0x4017086	      0x4c89542420	             mov qword [rsp + 0x20], r10	      4824	intel_display.c	FUNCTION_144	CALL_2
0x401708b	          0x4c89e7	                            mov rdi, r12	      4824	intel_display.c	FUNCTION_144	CALL_2
0x401708e	    0x418b954c0200	           mov edx, dword [r13 + 0x24c] 	      4824	intel_display.c	FUNCTION_144	CALL_2
0x4017095	        0x448b4b60	            mov r9d, dword [rbx + 0x60] 	      4824	intel_display.c	FUNCTION_144	CALL_2
0x4017099	        0x448b435c	            mov r8d, dword [rbx + 0x5c] 	      4824	intel_display.c	FUNCTION_144	CALL_2
0x401709d	        0x442b4b58	             sub r9d, dword [rbx + 0x58]	      4824	intel_display.c	FUNCTION_144	CALL_2
0x40170a1	              0x50	                                push rax	      4824	intel_display.c	FUNCTION_144	CALL_2
0x40170a2	          0x8b436c	            mov eax, dword [rbx + 0x6c] 	      4824	intel_display.c	FUNCTION_144	CALL_2
0x40170a5	          0x2b4364	             sub eax, dword [rbx + 0x64]	      4824	intel_display.c	FUNCTION_144	CALL_2
0x40170a8	        0x442b4354	             sub r8d, dword [rbx + 0x54]	      4824	intel_display.c	FUNCTION_144	CALL_2
0x40170ac	        0x41c1f910	                           sar r9d, 0x10	      4824	intel_display.c	FUNCTION_144	CALL_2
0x40170b0	              0x50	                                push rax	      4824	intel_display.c	FUNCTION_144	CALL_2
0x40170b1	        0x41c1f810	                           sar r8d, 0x10	      4824	intel_display.c	FUNCTION_144	CALL_2
0x40170b5	      0xe8c6b9feff	              call sym.skl_update_scaler	      4824	intel_display.c	FUNCTION_144	CALL_2
0x40170ba	            0x85c0	                           test eax, eax	      4832	intel_display.c	FUNCTION_144	IF_1
0x40170bc	              0x59	                                 pop rcx	      4832	intel_display.c	FUNCTION_144	IF_1
0x40170bd	              0x5e	                                 pop rsi	      4832	intel_display.c	FUNCTION_144	IF_1
0x40170be	     0xf8583010000	                           jne 0x4017247	      4832	intel_display.c	FUNCTION_144	IF_1
0x40170c4	    0x8b93b8000000	            mov edx, dword [rbx + 0xb8] 	      4832	intel_display.c	FUNCTION_144	IF_1
0x40170ca	      0x4c8b542420	            mov r10, qword [rsp + 0x20] 	      4832	intel_display.c	FUNCTION_144	IF_1
0x40170cf	      0x4c8b5c2428	            mov r11, qword [rsp + 0x28] 	      4832	intel_display.c	FUNCTION_144	IF_1
0x40170d4	            0x85d2	                           test edx, edx	      4832	intel_display.c	FUNCTION_144	IF_1
0x40170d6	            0x7849	                            js 0x4017121	      4832	intel_display.c	FUNCTION_144	IF_1
0x40170d8	    0x8b83cc000000	            mov eax, dword [rbx + 0xcc] 	      4836	intel_display.c	FUNCTION_144	IF_2
0x40170de	            0x85c0	                           test eax, eax	      4836	intel_display.c	FUNCTION_144	IF_2
0x40170e0	     0xf8544040000	                           jne 0x401752a	      4836	intel_display.c	FUNCTION_144	IF_2
0x40170e6	        0x498b4348	            mov rax, qword [r11 + 0x48] 	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x40170ea	          0x448b08	                    mov r9d, dword [rax]	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x40170ed	    0x4181f9585232	                     cmp r9d, 0x34325258	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x40170f4	            0x742b	                            je 0x4017121	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x40170f6	     0xf87d8020000	                            ja 0x40173d4	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x40170fc	    0x4181f9414232	                     cmp r9d, 0x34324241	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x4017103	            0x741c	                            je 0x4017121	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x4017105	     0xf87e1030000	                            ja 0x40174ec	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x401710b	    0x4181f9584233	                     cmp r9d, 0x30334258	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x4017112	            0x740d	                            je 0x4017121	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x4017114	    0x4181f9585233	                     cmp r9d, 0x30335258	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x401711b	     0xf85e0020000	                           jne 0x4017401	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x4017121	      0x807c241000	                cmp byte [rsp + 0x10], 0	     10300	intel_display.c	FUNCTION_302	IF_3	CALL_10
0x4017126	      0x488b442408	                mov rax, qword [rsp + 8]	     10297	intel_display.c	FUNCTION_302
0x401712b	      0x440fb67b74	          movzx r15d, byte [rbx + 0x74] 	     10298	intel_display.c	FUNCTION_302
0x4017130	      0x440fb67074	          movzx r14d, byte [rax + 0x74] 	     10297	intel_display.c	FUNCTION_302
0x4017135	            0x7509	                           jne 0x4017140	     10300	intel_display.c	FUNCTION_302	IF_3	CALL_10
0x4017137	          0x4584f6	                         test r14b, r14b	     10300	intel_display.c	FUNCTION_302	IF_3	CALL_10
0x401713a	     0xf8571030000	                           jne 0x40174b1	     10300	intel_display.c	FUNCTION_302	IF_3	CALL_10
0x4017140	      0x807c241800	                cmp byte [rsp + 0x18], 0	     10313	intel_display.c	FUNCTION_302	IF_4
0x4017145	     0xf840b010000	                            je 0x4017256	     10313	intel_display.c	FUNCTION_302	IF_4
0x401714b	          0x4489f8	                           mov eax, r15d	     10313	intel_display.c	FUNCTION_302	IF_4
0x401714e	          0x83f001	                              xor eax, 1	     10313	intel_display.c	FUNCTION_302	IF_4
0x4017151	          0x4138c6	                            cmp r14b, al	     10318	intel_display.c	FUNCTION_302	IF_5
0x4017154	     0xf82eb000000	                            jb 0x4017245	     10318	intel_display.c	FUNCTION_302	IF_5
0x401715a	      0x488b442408	                mov rax, qword [rsp + 8]	     10321	intel_display.c	FUNCTION_302	IF_6
0x401715f	        0x4c3b5810	            cmp r11, qword [rax + 0x10] 	     10321	intel_display.c	FUNCTION_302	IF_6
0x4017163	            0x7409	                            je 0x401716e	     10321	intel_display.c	FUNCTION_302	IF_6
0x4017165	    0x41c684242802	               mov byte [r12 + 0x228], 1	     10322	intel_display.c	FUNCTION_302	IF_6
0x401716e	          0x4138ef	                           cmp r15b, bpl	     10324	intel_display.c	FUNCTION_302
0x4017171	      0xbeffffffff	                     mov esi, 0xffffffff	     10327	intel_display.c	FUNCTION_302	CALL_13
0x4017176	           0xf96c0	                                setbe al	     10324	intel_display.c	FUNCTION_302
0x4017179	          0x4421f0	                           and eax, r14d	     10324	intel_display.c	FUNCTION_302
0x401717c	          0x4138ee	                           cmp r14b, bpl	     10325	intel_display.c	FUNCTION_302
0x401717f	        0x400f96c5	                               setbe bpl	     10325	intel_display.c	FUNCTION_302
0x4017183	        0x88442420	               mov byte [rsp + 0x20], al	     10324	intel_display.c	FUNCTION_302
0x4017187	           0xfb6c0	                           movzx eax, al	     10324	intel_display.c	FUNCTION_302
0x401718a	          0x4421fd	                           and ebp, r15d	     10325	intel_display.c	FUNCTION_302
0x401718d	          0x4d85db	                           test r11, r11	     10327	intel_display.c	FUNCTION_302	CALL_13
0x4017190	        0x89442410	             mov dword [rsp + 0x10], eax	     10324	intel_display.c	FUNCTION_302
0x4017194	        0x400fb6c5	                          movzx eax, bpl	     10325	intel_display.c	FUNCTION_302
0x4017198	            0x7404	                            je 0x401719e	     10327	intel_display.c	FUNCTION_302	CALL_13
0x401719a	        0x418b7318	            mov esi, dword [r11 + 0x18] 	     10327	intel_display.c	FUNCTION_302	CALL_13
0x401719e	        0x498b4a20	            mov rcx, qword [r10 + 0x20] 	     10327	intel_display.c	FUNCTION_302	CALL_13
0x40171a2	        0x418b5260	            mov edx, dword [r10 + 0x60] 	     10327	intel_display.c	FUNCTION_302	CALL_13
0x40171a6	      0xbf10000000	                           mov edi, 0x10	     10327	intel_display.c	FUNCTION_302	CALL_13
0x40171ab	        0x89442418	             mov dword [rsp + 0x18], eax	     10327	intel_display.c	FUNCTION_302	CALL_13
0x40171af	              0x56	                                push rsi	     10327	intel_display.c	FUNCTION_302	CALL_13
0x40171b0	    0x48c7c6000000	                              mov rsi, 0	     10327	intel_display.c	FUNCTION_302	CALL_13
0x40171b7	        0x4d8b4d18	              mov r9, qword [r13 + 0x18]	     10327	intel_display.c	FUNCTION_302	CALL_13
0x40171bb	        0x458b4558	            mov r8d, dword [r13 + 0x58] 	     10327	intel_display.c	FUNCTION_302	CALL_13
0x40171bf	      0xe800000000	                          call 0x40171c4	     10327	intel_display.c	FUNCTION_302	CALL_13
0x40171c4	        0x8b442424	            mov eax, dword [rsp + 0x24] 	     10332	intel_display.c	FUNCTION_302	CALL_14
0x40171c8	        0x498b4d18	            mov rcx, qword [r13 + 0x18] 	     10332	intel_display.c	FUNCTION_302	CALL_14
0x40171cc	        0x450fb6cf	                         movzx r9d, r15b	     10332	intel_display.c	FUNCTION_302	CALL_14
0x40171d0	        0x418b5558	            mov edx, dword [r13 + 0x58] 	     10332	intel_display.c	FUNCTION_302	CALL_14
0x40171d4	        0x450fb6c6	                         movzx r8d, r14b	     10332	intel_display.c	FUNCTION_302	CALL_14
0x40171d8	    0x48c7c6000000	                              mov rsi, 0	     10332	intel_display.c	FUNCTION_302	CALL_14
0x40171df	      0xbf10000000	                           mov edi, 0x10	     10332	intel_display.c	FUNCTION_302	CALL_14
0x40171e4	              0x50	                                push rax	     10332	intel_display.c	FUNCTION_302	CALL_14
0x40171e5	        0x8b442428	            mov eax, dword [rsp + 0x28] 	     10332	intel_display.c	FUNCTION_302	CALL_14
0x40171e9	              0x50	                                push rax	     10332	intel_display.c	FUNCTION_302	CALL_14
0x40171ea	        0x8b442428	            mov eax, dword [rsp + 0x28] 	     10332	intel_display.c	FUNCTION_302	CALL_14
0x40171ee	              0x50	                                push rax	     10332	intel_display.c	FUNCTION_302	CALL_14
0x40171ef	      0xe800000000	                          call 0x40171f4	     10332	intel_display.c	FUNCTION_302	CALL_14
0x40171f4	        0x4883c420	                           add rsp, 0x20	     10337	intel_display.c	FUNCTION_302	IF_7
0x40171f8	          0x4084ed	                           test bpl, bpl	     10337	intel_display.c	FUNCTION_302	IF_7
0x40171fb	     0xf842e010000	                            je 0x401732f	     10337	intel_display.c	FUNCTION_302	IF_7
0x4017201	        0x488b0424	                    mov rax, qword [rsp]	     10338	intel_display.c	FUNCTION_302	IF_7	IF_8	CALL_16
0x4017205	    0x80b85c060000	               cmp byte [rax + 0x65c], 4	     10338	intel_display.c	FUNCTION_302	IF_7	IF_8	CALL_16
0x401720c	     0xf8675010000	                           jbe 0x4017387	     10338	intel_display.c	FUNCTION_302	IF_7	IF_8	CALL_16
0x4017212	    0x4183bd840200	              cmp dword [r13 + 0x284], 4	     10342	intel_display.c	FUNCTION_302	IF_7	IF_9
0x401721a	     0xf84ed000000	                            je 0x401730d	     10342	intel_display.c	FUNCTION_302	IF_7	IF_9
0x4017220	    0x41c684242502	               mov byte [r12 + 0x225], 1	     10343	intel_display.c	FUNCTION_302	IF_7	IF_9
0x4017229	          0x4584ff	                         test r15b, r15b	     10359	intel_display.c	FUNCTION_302	IF_15
0x401722c	     0xf85e9000000	                           jne 0x401731b	     10359	intel_display.c	FUNCTION_302	IF_15
0x4017232	          0x4584f6	                         test r14b, r14b	     10359	intel_display.c	FUNCTION_302	IF_15
0x4017235	     0xf85e0000000	                           jne 0x401731b	     10359	intel_display.c	FUNCTION_302	IF_15
0x401723b	    0x4183bd840200	              cmp dword [r13 + 0x284], 1	     10368	intel_display.c	FUNCTION_302	IF_16	CALL_22
0x4017243	            0x7450	                            je 0x4017295	     10368	intel_display.c	FUNCTION_302	IF_16	CALL_22
0x4017245	            0x31c0	                            xor eax, eax	     10373	intel_display.c	FUNCTION_302
0x4017247	        0x4883c430	                           add rsp, 0x30	     10374	intel_display.c	FUNCTION_302
0x401724b	              0x5b	                                 pop rbx	     10374	intel_display.c	FUNCTION_302
0x401724c	              0x5d	                                 pop rbp	     10374	intel_display.c	FUNCTION_302
0x401724d	            0x415c	                                 pop r12	     10374	intel_display.c	FUNCTION_302
0x401724f	            0x415d	                                 pop r13	     10374	intel_display.c	FUNCTION_302
0x4017251	            0x415e	                                 pop r14	     10374	intel_display.c	FUNCTION_302
0x4017253	            0x415f	                                 pop r15	     10374	intel_display.c	FUNCTION_302
0x4017255	              0xc3	                                     ret	     10374	intel_display.c	FUNCTION_302
0x4017256	        0xc6437400	                mov byte [rbx + 0x74], 0	     10314	intel_display.c	FUNCTION_302	IF_4
0x401725a	    0x418b8d840200	           mov ecx, dword [r13 + 0x284] 	     10315	intel_display.c	FUNCTION_302	IF_4	CALL_12
0x4017261	    0x48c7c0feffff	             mov rax, 0xfffffffffffffffe	     10315	intel_display.c	FUNCTION_302	IF_4	CALL_12
0x4017268	          0x4531ff	                          xor r15d, r15d	     10314	intel_display.c	FUNCTION_302	IF_4
0x401726b	          0x48d3c0	                             rol rax, cl	     10315	intel_display.c	FUNCTION_302	IF_4	CALL_12
0x401726e	    0x412084249004	              and byte [r12 + 0x490], al	     10315	intel_display.c	FUNCTION_302	IF_4	CALL_12
0x4017276	      0xb801000000	                              mov eax, 1	     10315	intel_display.c	FUNCTION_302	IF_4	CALL_12
0x401727b	      0xe9d1feffff	                           jmp 0x4017151	     10315	intel_display.c	FUNCTION_302	IF_4	CALL_12
0x4017280	          0xc0e803	                               shr al, 3	       894	drm_atomic.h	FUNCTION_511
0x4017283	            0x89c5	                            mov ebp, eax	       894	drm_atomic.h	FUNCTION_511
0x4017285	          0x83e501	                              and ebp, 1	       894	drm_atomic.h	FUNCTION_511
0x4017288	        0x400fb6c5	                          movzx eax, bpl	       893	drm_atomic.h	FUNCTION_511
0x401728c	        0x8944241c	             mov dword [rsp + 0x1c], eax	       893	drm_atomic.h	FUNCTION_511
0x4017290	      0xe996fdffff	                           jmp 0x401702b	       893	drm_atomic.h	FUNCTION_511
0x4017295	        0x488b0424	                    mov rax, qword [rsp]	     10368	intel_display.c	FUNCTION_302	IF_16	CALL_22
0x4017299	    0xf68066060000	              test byte [rax + 0x666], 2	     10368	intel_display.c	FUNCTION_302	IF_16	CALL_22
0x40172a0	            0x74a3	                            je 0x4017245	     10368	intel_display.c	FUNCTION_302	IF_16	CALL_22
0x40172a2	          0x8b435c	            mov eax, dword [rbx + 0x5c] 	     10368	intel_display.c	FUNCTION_302	IF_16	CALL_22
0x40172a5	          0x2b4354	             sub eax, dword [rbx + 0x54]	     10368	intel_display.c	FUNCTION_302	IF_16	CALL_22
0x40172a8	          0x8b536c	            mov edx, dword [rbx + 0x6c] 	     10368	intel_display.c	FUNCTION_302	IF_16	CALL_22
0x40172ab	          0x2b5364	             sub edx, dword [rbx + 0x64]	     10368	intel_display.c	FUNCTION_302	IF_16	CALL_22
0x40172ae	          0xc1f810	                           sar eax, 0x10	     10368	intel_display.c	FUNCTION_302	IF_16	CALL_22
0x40172b1	            0x39d0	                            cmp eax, edx	     10368	intel_display.c	FUNCTION_302	IF_16	CALL_22
0x40172b3	            0x7517	                           jne 0x40172cc	     10368	intel_display.c	FUNCTION_302	IF_16	CALL_22
0x40172b5	          0x8b4360	            mov eax, dword [rbx + 0x60] 	     10368	intel_display.c	FUNCTION_302	IF_16	CALL_22
0x40172b8	          0x2b4358	             sub eax, dword [rbx + 0x58]	     10368	intel_display.c	FUNCTION_302	IF_16	CALL_22
0x40172bb	          0x8b5370	            mov edx, dword [rbx + 0x70] 	     10368	intel_display.c	FUNCTION_302	IF_16	CALL_22
0x40172be	          0x2b5368	             sub edx, dword [rbx + 0x68]	     10368	intel_display.c	FUNCTION_302	IF_16	CALL_22
0x40172c1	          0xc1f810	                           sar eax, 0x10	     10368	intel_display.c	FUNCTION_302	IF_16	CALL_22
0x40172c4	            0x39d0	                            cmp eax, edx	     10368	intel_display.c	FUNCTION_302	IF_16	CALL_22
0x40172c6	     0xf8479ffffff	                            je 0x4017245	     10368	intel_display.c	FUNCTION_302	IF_16	CALL_22
0x40172cc	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     10369	intel_display.c	FUNCTION_302	IF_16	CALL_24
0x40172d1	          0x8b475c	            mov eax, dword [rdi + 0x5c] 	     10369	intel_display.c	FUNCTION_302	IF_16	CALL_24
0x40172d4	          0x2b4754	             sub eax, dword [rdi + 0x54]	     10369	intel_display.c	FUNCTION_302	IF_16	CALL_24
0x40172d7	          0x8b576c	            mov edx, dword [rdi + 0x6c] 	     10369	intel_display.c	FUNCTION_302	IF_16	CALL_24
0x40172da	          0x2b5764	             sub edx, dword [rdi + 0x64]	     10369	intel_display.c	FUNCTION_302	IF_16	CALL_24
0x40172dd	          0xc1f810	                           sar eax, 0x10	     10369	intel_display.c	FUNCTION_302	IF_16	CALL_24
0x40172e0	            0x39d0	                            cmp eax, edx	     10369	intel_display.c	FUNCTION_302	IF_16	CALL_24
0x40172e2	     0xf855dffffff	                           jne 0x4017245	     10369	intel_display.c	FUNCTION_302	IF_16	CALL_24
0x40172e8	          0x8b4760	            mov eax, dword [rdi + 0x60] 	     10369	intel_display.c	FUNCTION_302	IF_16	CALL_24
0x40172eb	          0x2b4758	             sub eax, dword [rdi + 0x58]	     10369	intel_display.c	FUNCTION_302	IF_16	CALL_24
0x40172ee	          0x8b5770	            mov edx, dword [rdi + 0x70] 	     10369	intel_display.c	FUNCTION_302	IF_16	CALL_24
0x40172f1	          0x2b5768	             sub edx, dword [rdi + 0x68]	     10369	intel_display.c	FUNCTION_302	IF_16	CALL_24
0x40172f4	          0xc1f810	                           sar eax, 0x10	     10369	intel_display.c	FUNCTION_302	IF_16	CALL_24
0x40172f7	            0x39d0	                            cmp eax, edx	     10369	intel_display.c	FUNCTION_302	IF_16	CALL_24
0x40172f9	     0xf8546ffffff	                           jne 0x4017245	     10369	intel_display.c	FUNCTION_302	IF_16	CALL_24
0x40172ff	    0x41c684246c03	               mov byte [r12 + 0x36c], 1	     10371	intel_display.c	FUNCTION_302	IF_16
0x4017308	      0xe938ffffff	                           jmp 0x4017245	     10371	intel_display.c	FUNCTION_302	IF_16
0x401730d	          0x4584ff	                         test r15b, r15b	     10359	intel_display.c	FUNCTION_302	IF_15
0x4017310	            0x7509	                           jne 0x401731b	     10359	intel_display.c	FUNCTION_302	IF_15
0x4017312	          0x4584f6	                         test r14b, r14b	     10359	intel_display.c	FUNCTION_302	IF_15
0x4017315	     0xf842affffff	                            je 0x4017245	     10359	intel_display.c	FUNCTION_302	IF_15
0x401731b	    0x418b85940200	           mov eax, dword [r13 + 0x294] 	     10360	intel_display.c	FUNCTION_302	IF_15
0x4017322	    0x410984242002	             or dword [r12 + 0x220], eax	     10360	intel_display.c	FUNCTION_302	IF_15
0x401732a	      0xe90cffffff	                           jmp 0x401723b	     10360	intel_display.c	FUNCTION_302	IF_15
0x401732f	      0x807c242000	                cmp byte [rsp + 0x20], 0	     10344	intel_display.c	FUNCTION_302	ELSE_1	IF_10
0x4017334	            0x756f	                           jne 0x40173a5	     10344	intel_display.c	FUNCTION_302	ELSE_1	IF_10
0x4017336	    0x498b85580200	           mov rax, qword [r13 + 0x258] 	     10344	intel_display.c	FUNCTION_302	ELSE_1	IF_10
0x401733d	         0xfb67074	           movzx esi, byte [rax + 0x74] 	     10244	intel_display.c	FUNCTION_300	IF_1
0x4017341	        0x40387374	              cmp byte [rbx + 0x74], sil	     10244	intel_display.c	FUNCTION_300	IF_1
0x4017345	     0xf84dd000000	                            je 0x4017428	     10244	intel_display.c	FUNCTION_300	IF_1
0x401734b	        0x488b0424	                    mov rax, qword [rsp]	     10352	intel_display.c	FUNCTION_302	ELSE_2	IF_13	IF_14	CALL_21
0x401734f	    0x80b85c060000	               cmp byte [rax + 0x65c], 4	     10352	intel_display.c	FUNCTION_302	ELSE_2	IF_13	IF_14	CALL_21
0x4017356	     0xf87cdfeffff	                            ja 0x4017229	     10352	intel_display.c	FUNCTION_302	ELSE_2	IF_13	IF_14	CALL_21
0x401735c	        0x488b0424	                    mov rax, qword [rsp]	     10352	intel_display.c	FUNCTION_302	ELSE_2	IF_13	IF_14	CALL_21
0x4017360	    0xf78064060000	       test dword [rax + 0x664], 0x6000 	     10352	intel_display.c	FUNCTION_302	ELSE_2	IF_13	IF_14	CALL_21
0x401736a	     0xf85b9feffff	                           jne 0x4017229	     10352	intel_display.c	FUNCTION_302	ELSE_2	IF_13	IF_14	CALL_21
0x4017370	    0x41c684242602	               mov byte [r12 + 0x226], 1	     10354	intel_display.c	FUNCTION_302	ELSE_2	IF_13	IF_14
0x4017379	    0x41c684242702	               mov byte [r12 + 0x227], 1	     10355	intel_display.c	FUNCTION_302	ELSE_2	IF_13	IF_14
0x4017382	      0xe9a2feffff	                           jmp 0x4017229	     10355	intel_display.c	FUNCTION_302	ELSE_2	IF_13	IF_14
0x4017387	    0xf78064060000	       test dword [rax + 0x664], 0x6000 	     10338	intel_display.c	FUNCTION_302	IF_7	IF_8	CALL_16
0x4017391	     0xf857bfeffff	                           jne 0x4017212	     10338	intel_display.c	FUNCTION_302	IF_7	IF_8	CALL_16
0x4017397	    0x41c684242602	               mov byte [r12 + 0x226], 1	     10339	intel_display.c	FUNCTION_302	IF_7	IF_8
0x40173a0	      0xe96dfeffff	                           jmp 0x4017212	     10339	intel_display.c	FUNCTION_302	IF_7	IF_8
0x40173a5	        0x488b0424	                    mov rax, qword [rsp]	     10345	intel_display.c	FUNCTION_302	ELSE_1	IF_10	IF_11	CALL_18
0x40173a9	    0x80b85c060000	               cmp byte [rax + 0x65c], 4	     10345	intel_display.c	FUNCTION_302	ELSE_1	IF_10	IF_11	CALL_18
0x40173b0	     0xf875cfeffff	                            ja 0x4017212	     10345	intel_display.c	FUNCTION_302	ELSE_1	IF_10	IF_11	CALL_18
0x40173b6	    0xf78064060000	       test dword [rax + 0x664], 0x6000 	     10345	intel_display.c	FUNCTION_302	ELSE_1	IF_10	IF_11	CALL_18
0x40173c0	     0xf854cfeffff	                           jne 0x4017212	     10345	intel_display.c	FUNCTION_302	ELSE_1	IF_10	IF_11	CALL_18
0x40173c6	    0x41c684242702	               mov byte [r12 + 0x227], 1	     10346	intel_display.c	FUNCTION_302	ELSE_1	IF_10	IF_11
0x40173cf	      0xe93efeffff	                           jmp 0x4017212	     10346	intel_display.c	FUNCTION_302	ELSE_1	IF_10	IF_11
0x40173d4	    0x4181f9595559	                     cmp r9d, 0x56595559	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x40173db	     0xf8440fdffff	                            je 0x4017121	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x40173e1	     0xf8724010000	                            ja 0x401750b	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x40173e7	    0x4181f9524731	                     cmp r9d, 0x36314752	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x40173ee	     0xf842dfdffff	                            je 0x4017121	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x40173f4	    0x4181f9595659	                     cmp r9d, 0x55595659	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x40173fb	     0xf8420fdffff	                            je 0x4017121	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x4017401	        0x498b4d18	            mov rcx, qword [r13 + 0x18] 	      4858	intel_display.c	FUNCTION_144	SWITCH_1	CALL_9
0x4017405	        0x418b5558	            mov edx, dword [r13 + 0x58] 	      4858	intel_display.c	FUNCTION_144	SWITCH_1	CALL_9
0x4017409	    0x48c7c6000000	                              mov rsi, 0	      4858	intel_display.c	FUNCTION_144	SWITCH_1	CALL_9
0x4017410	        0x458b4318	            mov r8d, dword [r11 + 0x18] 	      4858	intel_display.c	FUNCTION_144	SWITCH_1	CALL_9
0x4017414	      0xbf04000000	                              mov edi, 4	      4858	intel_display.c	FUNCTION_144	SWITCH_1	CALL_9
0x4017419	      0xe800000000	                          call 0x401741e	      4858	intel_display.c	FUNCTION_144	SWITCH_1	CALL_9
0x401741e	      0xb8eaffffff	                     mov eax, 0xffffffea	      4861	intel_display.c	FUNCTION_144	SWITCH_1
0x4017423	      0xe91ffeffff	                           jmp 0x4017247	      4861	intel_display.c	FUNCTION_144	SWITCH_1
0x4017428	        0x488b5010	            mov rdx, qword [rax + 0x10] 	     10247	intel_display.c	FUNCTION_300	IF_2
0x401742c	          0x4885d2	                           test rdx, rdx	     10247	intel_display.c	FUNCTION_300	IF_2
0x401742f	     0xf84f4fdffff	                            je 0x4017229	     10247	intel_display.c	FUNCTION_300	IF_2
0x4017435	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	     10247	intel_display.c	FUNCTION_300	IF_2
0x4017439	          0x4885c9	                           test rcx, rcx	     10247	intel_display.c	FUNCTION_300	IF_2
0x401743c	     0xf84e7fdffff	                            je 0x4017229	     10247	intel_display.c	FUNCTION_300	IF_2
0x4017442	        0x488b7178	            mov rsi, qword [rcx + 0x78] 	     10250	intel_display.c	FUNCTION_300	IF_3
0x4017446	        0x48397278	            cmp qword [rdx + 0x78], rsi 	     10250	intel_display.c	FUNCTION_300	IF_3
0x401744a	     0xf85fbfeffff	                           jne 0x401734b	     10250	intel_display.c	FUNCTION_300	IF_3
0x4017450	          0x8b7340	            mov esi, dword [rbx + 0x40] 	     10250	intel_display.c	FUNCTION_300	IF_3
0x4017453	          0x397040	            cmp dword [rax + 0x40], esi 	     10250	intel_display.c	FUNCTION_300	IF_3
0x4017456	     0xf85effeffff	                           jne 0x401734b	     10250	intel_display.c	FUNCTION_300	IF_3
0x401745c	          0x8b4b5c	            mov ecx, dword [rbx + 0x5c] 	     10251	intel_display.c	FUNCTION_300	IF_3
0x401745f	          0x8b505c	            mov edx, dword [rax + 0x5c] 	     10251	intel_display.c	FUNCTION_300	IF_3
0x4017462	          0x2b4b54	             sub ecx, dword [rbx + 0x54]	     10251	intel_display.c	FUNCTION_300	IF_3
0x4017465	          0x2b5054	             sub edx, dword [rax + 0x54]	     10251	intel_display.c	FUNCTION_300	IF_3
0x4017468	            0x39d1	                            cmp ecx, edx	     10251	intel_display.c	FUNCTION_300	IF_3
0x401746a	     0xf85dbfeffff	                           jne 0x401734b	     10251	intel_display.c	FUNCTION_300	IF_3
0x4017470	          0x8b4b60	            mov ecx, dword [rbx + 0x60] 	     10252	intel_display.c	FUNCTION_300	IF_3	CALL_4
0x4017473	          0x8b5060	            mov edx, dword [rax + 0x60] 	     10252	intel_display.c	FUNCTION_300	IF_3	CALL_4
0x4017476	          0x2b4b58	             sub ecx, dword [rbx + 0x58]	     10252	intel_display.c	FUNCTION_300	IF_3	CALL_4
0x4017479	          0x2b5058	             sub edx, dword [rax + 0x58]	     10252	intel_display.c	FUNCTION_300	IF_3	CALL_4
0x401747c	            0x39d1	                            cmp ecx, edx	     10252	intel_display.c	FUNCTION_300	IF_3	CALL_4
0x401747e	     0xf85c7feffff	                           jne 0x401734b	     10252	intel_display.c	FUNCTION_300	IF_3	CALL_4
0x4017484	          0x8b4b6c	            mov ecx, dword [rbx + 0x6c] 	     10253	intel_display.c	FUNCTION_300	IF_3	CALL_6
0x4017487	          0x8b506c	            mov edx, dword [rax + 0x6c] 	     10253	intel_display.c	FUNCTION_300	IF_3	CALL_6
0x401748a	          0x2b4b64	             sub ecx, dword [rbx + 0x64]	     10253	intel_display.c	FUNCTION_300	IF_3	CALL_6
0x401748d	          0x2b5064	             sub edx, dword [rax + 0x64]	     10253	intel_display.c	FUNCTION_300	IF_3	CALL_6
0x4017490	            0x39d1	                            cmp ecx, edx	     10253	intel_display.c	FUNCTION_300	IF_3	CALL_6
0x4017492	     0xf85b3feffff	                           jne 0x401734b	     10253	intel_display.c	FUNCTION_300	IF_3	CALL_6
0x4017498	          0x8b4b70	            mov ecx, dword [rbx + 0x70] 	     10254	intel_display.c	FUNCTION_300	IF_3	CALL_8
0x401749b	          0x8b5070	            mov edx, dword [rax + 0x70] 	     10254	intel_display.c	FUNCTION_300	IF_3	CALL_8
0x401749e	          0x2b4b68	             sub ecx, dword [rbx + 0x68]	     10254	intel_display.c	FUNCTION_300	IF_3	CALL_8
0x40174a1	          0x2b5068	             sub edx, dword [rax + 0x68]	     10254	intel_display.c	FUNCTION_300	IF_3	CALL_8
0x40174a4	            0x39d1	                            cmp ecx, edx	     10254	intel_display.c	FUNCTION_300	IF_3	CALL_8
0x40174a6	     0xf859ffeffff	                           jne 0x401734b	     10254	intel_display.c	FUNCTION_300	IF_3	CALL_8
0x40174ac	      0xe978fdffff	                           jmp 0x4017229	     10254	intel_display.c	FUNCTION_300	IF_3	CALL_8
0x40174b1	    0x48c7c6000000	                              mov rsi, 0	     10300	intel_display.c	FUNCTION_302	IF_3	CALL_10
0x40174b8	    0x48c7c7000000	                              mov rdi, 0	     10300	intel_display.c	FUNCTION_302	IF_3	CALL_10
0x40174bf	      0x4c895c2420	             mov qword [rsp + 0x20], r11	     10300	intel_display.c	FUNCTION_302	IF_3	CALL_10
0x40174c4	      0x4c89542410	             mov qword [rsp + 0x10], r10	     10300	intel_display.c	FUNCTION_302	IF_3	CALL_10
0x40174c9	      0xe800000000	                          call 0x40174ce	     10300	intel_display.c	FUNCTION_302	IF_3	CALL_10
0x40174ce	             0xf0b	                                     ud2	     10300	intel_display.c	FUNCTION_302	IF_3	CALL_10
0x40174d0	          0x4531f6	                          xor r14d, r14d	     10301	intel_display.c	FUNCTION_302	IF_3
0x40174d3	      0x4c8b5c2420	            mov r11, qword [rsp + 0x20] 	     10301	intel_display.c	FUNCTION_302	IF_3
0x40174d8	      0x4c8b542410	            mov r10, qword [rsp + 0x10] 	     10301	intel_display.c	FUNCTION_302	IF_3
0x40174dd	      0xe95efcffff	                           jmp 0x4017140	     10301	intel_display.c	FUNCTION_302	IF_3
0x40174e2	      0xbe01000000	                              mov esi, 1	      4822	intel_display.c	FUNCTION_144
0x40174e7	      0xe988fbffff	                           jmp 0x4017074	      4822	intel_display.c	FUNCTION_144
0x40174ec	    0x4181f9584232	                     cmp r9d, 0x34324258	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x40174f3	     0xf8428fcffff	                            je 0x4017121	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x40174f9	    0x4181f9415232	                     cmp r9d, 0x34325241	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x4017500	     0xf841bfcffff	                            je 0x4017121	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x4017506	      0xe9f6feffff	                           jmp 0x4017401	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x401750b	    0x4181f9565955	                     cmp r9d, 0x59555956	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x4017512	     0xf8409fcffff	                            je 0x4017121	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x4017518	    0x4181f9555956	                     cmp r9d, 0x59565955	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x401751f	     0xf84fcfbffff	                            je 0x4017121	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x4017525	      0xe9d7feffff	                           jmp 0x4017401	      4844	intel_display.c	FUNCTION_144	SWITCH_1
0x401752a	        0x498b4d18	            mov rcx, qword [r13 + 0x18] 	      4837	intel_display.c	FUNCTION_144	IF_2	CALL_8
0x401752e	        0x418b5558	            mov edx, dword [r13 + 0x58] 	      4837	intel_display.c	FUNCTION_144	IF_2	CALL_8
0x4017532	    0x48c7c6000000	                              mov rsi, 0	      4837	intel_display.c	FUNCTION_144	IF_2	CALL_8
0x4017539	      0xbf04000000	                              mov edi, 4	      4837	intel_display.c	FUNCTION_144	IF_2	CALL_8
0x401753e	      0xe800000000	                          call 0x4017543	      4837	intel_display.c	FUNCTION_144	IF_2	CALL_8
0x4017543	      0xb8eaffffff	                     mov eax, 0xffffffea	      4840	intel_display.c	FUNCTION_144	IF_2
0x4017548	      0xe9fafcffff	                           jmp 0x4017247	      4840	intel_display.c	FUNCTION_144	IF_2
intel_crtc_active	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,0	14
0x400ccc0	     0xfb687b40400	          movzx eax, byte [rdi + 0x4b4] 	       989	intel_display.c	FUNCTION_21
0x400ccc7	            0x84c0	                             test al, al	       989	intel_display.c	FUNCTION_21
0x400ccc9	            0x742a	                            je 0x400ccf5	       989	intel_display.c	FUNCTION_21
0x400cccb	    0x488b87800000	            mov rax, qword [rdi + 0x80] 	       989	intel_display.c	FUNCTION_21
0x400ccd2	    0x488b80580200	           mov rax, qword [rax + 0x258] 	       989	intel_display.c	FUNCTION_21
0x400ccd9	      0x4883781000	               cmp qword [rax + 0x10], 0	       989	intel_display.c	FUNCTION_21
0x400ccde	            0x7413	                            je 0x400ccf3	       989	intel_display.c	FUNCTION_21
0x400cce0	    0x488b87c80400	           mov rax, qword [rdi + 0x4c8] 	       990	intel_display.c	FUNCTION_21
0x400cce7	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	       989	intel_display.c	FUNCTION_21
0x400cced	            0x85c0	                           test eax, eax	       989	intel_display.c	FUNCTION_21
0x400ccef	           0xf95c0	                                setne al	       989	intel_display.c	FUNCTION_21
0x400ccf2	              0xc3	                                     ret	       989	intel_display.c	FUNCTION_21
0x400ccf3	            0x31c0	                            xor eax, eax	       989	intel_display.c	FUNCTION_21
0x400ccf5	            0xf3c3	                                     ret	       991	intel_display.c	FUNCTION_21
i845_cursor_get_hw_state	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,6	23
0x4002730	              0x55	                                push rbp	      9569	intel_display.c	FUNCTION_283
0x4002731	              0x53	                                push rbx	      9569	intel_display.c	FUNCTION_283
0x4002732	            0x31f6	                            xor esi, esi	      9575	intel_display.c	FUNCTION_283	IF_1	CALL_3
0x4002734	          0x488b2f	                    mov rbp, qword [rdi]	      9570	intel_display.c	FUNCTION_283	CALL_1
0x4002737	          0x4889ef	                            mov rdi, rbp	      9575	intel_display.c	FUNCTION_283	IF_1	CALL_3
0x400273a	      0xe800000000	                          call 0x400273f	      9575	intel_display.c	FUNCTION_283	IF_1	CALL_3
0x400273f	            0x84c0	                             test al, al	      9575	intel_display.c	FUNCTION_283	IF_1	CALL_3
0x4002741	            0x7431	                            je 0x4002774	      9575	intel_display.c	FUNCTION_283	IF_1	CALL_3
0x4002743	    0x8b8d6c060000	           mov ecx, dword [rbp + 0x66c] 	      9578	intel_display.c	FUNCTION_283	CALL_5
0x4002749	      0xba01000000	                              mov edx, 1	      9578	intel_display.c	FUNCTION_283	CALL_5
0x400274e	          0x4889ef	                            mov rdi, rbp	      9578	intel_display.c	FUNCTION_283	CALL_5
0x4002751	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	      9578	intel_display.c	FUNCTION_283	CALL_5
0x4002758	    0x8db180000700	                lea esi, [rcx + 0x70080]	      9578	intel_display.c	FUNCTION_283	CALL_5
0x400275e	      0xe800000000	                          call 0x4002763	      9578	intel_display.c	FUNCTION_283	CALL_5
0x4002763	          0xc1e81f	                           shr eax, 0x1f	      9578	intel_display.c	FUNCTION_283	CALL_5
0x4002766	            0x31f6	                            xor esi, esi	      9580	intel_display.c	FUNCTION_283	CALL_6
0x4002768	          0x4889ef	                            mov rdi, rbp	      9580	intel_display.c	FUNCTION_283	CALL_6
0x400276b	            0x89c3	                            mov ebx, eax	      9578	intel_display.c	FUNCTION_283	CALL_5
0x400276d	      0xe800000000	                          call 0x4002772	      9580	intel_display.c	FUNCTION_283	CALL_6
0x4002772	            0x89d8	                            mov eax, ebx	      9582	intel_display.c	FUNCTION_283
0x4002774	              0x5b	                                 pop rbx	      9583	intel_display.c	FUNCTION_283
0x4002775	              0x5d	                                 pop rbp	      9583	intel_display.c	FUNCTION_283
0x4002776	              0xc3	                                     ret	      9583	intel_display.c	FUNCTION_283
assert_pch_dp_disabled	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,7	76
0x40023a0	            0x4155	                                push r13	      1338	intel_display.c	FUNCTION_44
0x40023a2	            0x4154	                                push r12	      1338	intel_display.c	FUNCTION_44
0x40023a4	          0x4189cd	                           mov r13d, ecx	      1338	intel_display.c	FUNCTION_44
0x40023a7	              0x55	                                push rbp	      1338	intel_display.c	FUNCTION_44
0x40023a8	            0x89d5	                            mov ebp, edx	      1338	intel_display.c	FUNCTION_44
0x40023aa	              0x53	                                push rbx	      1338	intel_display.c	FUNCTION_44
0x40023ab	          0x4189f4	                           mov r12d, esi	      1338	intel_display.c	FUNCTION_44
0x40023ae	          0x4889fb	                            mov rbx, rdi	      1338	intel_display.c	FUNCTION_44
0x40023b1	    0x488b87f80700	           mov rax, qword [rdi + 0x7f8] 	      1339	intel_display.c	FUNCTION_44	CALL_1
0x40023b8	      0xba01000000	                              mov edx, 1	      1339	intel_display.c	FUNCTION_44	CALL_1
0x40023bd	            0x89ee	                            mov esi, ebp	      1339	intel_display.c	FUNCTION_44	CALL_1
0x40023bf	      0xe800000000	                          call 0x40023c4	      1339	intel_display.c	FUNCTION_44	CALL_1
0x40023c4	            0x85c0	                           test eax, eax	      1268	intel_display.c	FUNCTION_40	IF_1
0x40023c6	            0x783d	                            js 0x4002405	      1268	intel_display.c	FUNCTION_40	IF_1
0x40023c8	    0x83bbf8550000	            cmp dword [rbx + 0x55f8], 1 	      1344	intel_display.c	FUNCTION_44	CALL_7
0x40023cf	            0x752d	                           jne 0x40023fe	      1344	intel_display.c	FUNCTION_44	CALL_7
0x40023d1	      0xa900000040	                    test eax, 0x40000000	      1344	intel_display.c	FUNCTION_44	CALL_7
0x40023d6	            0x7426	                            je 0x40023fe	      1344	intel_display.c	FUNCTION_44	CALL_7
0x40023d8	    0x803d00000000	                cmp byte [0x040023df], 0	      1344	intel_display.c	FUNCTION_44	CALL_7
0x40023df	    0x48c7c7000000	                              mov rdi, 0	      1344	intel_display.c	FUNCTION_44	CALL_7
0x40023e6	     0xf85a2000000	                           jne 0x400248e	      1344	intel_display.c	FUNCTION_44	CALL_7
0x40023ec	              0x5b	                                 pop rbx	      1347	intel_display.c	FUNCTION_44
0x40023ed	              0x5d	                                 pop rbp	      1347	intel_display.c	FUNCTION_44
0x40023ee	            0x415c	                                 pop r12	      1347	intel_display.c	FUNCTION_44
0x40023f0	            0x415d	                                 pop r13	      1347	intel_display.c	FUNCTION_44
0x40023f2	      0xe900000000	                           jmp 0x40023f7	      1344	intel_display.c	FUNCTION_44	CALL_7
0x40023f7	      0xe800000000	                          call 0x40023fc	      1340	intel_display.c	FUNCTION_44	CALL_3
0x40023fc	             0xf0b	                                     ud2	      1340	intel_display.c	FUNCTION_44	CALL_3
0x40023fe	              0x5b	                                 pop rbx	      1347	intel_display.c	FUNCTION_44
0x40023ff	              0x5d	                                 pop rbp	      1347	intel_display.c	FUNCTION_44
0x4002400	            0x415c	                                 pop r12	      1347	intel_display.c	FUNCTION_44
0x4002402	            0x415d	                                 pop r13	      1347	intel_display.c	FUNCTION_44
0x4002404	              0xc3	                                     ret	      1347	intel_display.c	FUNCTION_44
0x4002405	    0x83bbf8550000	            cmp dword [rbx + 0x55f8], 2 	      1271	intel_display.c	FUNCTION_40	IF_2	CALL_1
0x400240c	            0x7450	                            je 0x400245e	      1271	intel_display.c	FUNCTION_40	IF_2	CALL_1
0x400240e	    0xf68366060000	          test byte [rbx + 0x666], 0x20 	      1275	intel_display.c	FUNCTION_40	ELSE_1	IF_4	CALL_4
0x4002415	            0x7431	                            je 0x4002448	      1275	intel_display.c	FUNCTION_40	ELSE_1	IF_4	CALL_4
0x4002417	          0x4489e2	                           mov edx, r12d	      1276	intel_display.c	FUNCTION_40	ELSE_1	IF_4	IF_5	CALL_5
0x400241a	      0x2500000300	                        and eax, 0x30000	      1276	intel_display.c	FUNCTION_40	ELSE_1	IF_4	IF_5	CALL_5
0x400241f	          0xc1e210	                           shl edx, 0x10	      1276	intel_display.c	FUNCTION_40	ELSE_1	IF_4	IF_5	CALL_5
0x4002422	            0x39d0	                            cmp eax, edx	      1276	intel_display.c	FUNCTION_40	ELSE_1	IF_4	IF_5	CALL_5
0x4002424	            0x75d8	                           jne 0x40023fe	      1276	intel_display.c	FUNCTION_40	ELSE_1	IF_4	IF_5	CALL_5
0x4002426	    0x803d00000000	                cmp byte [0x0400242d], 0	      1340	intel_display.c	FUNCTION_44	CALL_3
0x400242d	      0x418d542441	                   lea edx, [r12 + 0x41]	      1340	intel_display.c	FUNCTION_44	CALL_3
0x4002432	            0x89ee	                            mov esi, ebp	      1340	intel_display.c	FUNCTION_44	CALL_3
0x4002434	    0x48c7c7000000	                              mov rdi, 0	      1340	intel_display.c	FUNCTION_44	CALL_3
0x400243b	            0x75ba	                           jne 0x40023f7	      1340	intel_display.c	FUNCTION_44	CALL_3
0x400243d	              0x5b	                                 pop rbx	      1347	intel_display.c	FUNCTION_44
0x400243e	              0x5d	                                 pop rbp	      1347	intel_display.c	FUNCTION_44
0x400243f	            0x415c	                                 pop r12	      1347	intel_display.c	FUNCTION_44
0x4002441	            0x415d	                                 pop r13	      1347	intel_display.c	FUNCTION_44
0x4002443	      0xe900000000	                           jmp 0x4002448	      1340	intel_display.c	FUNCTION_44	CALL_3
0x4002448	          0x4489e2	                           mov edx, r12d	      1279	intel_display.c	FUNCTION_40	ELSE_2	IF_6
0x400244b	      0x2500000040	                     and eax, 0x40000000	      1279	intel_display.c	FUNCTION_40	ELSE_2	IF_6
0x4002450	          0xc1e21e	                           shl edx, 0x1e	      1279	intel_display.c	FUNCTION_40	ELSE_2	IF_6
0x4002453	            0x39d0	                            cmp eax, edx	      1279	intel_display.c	FUNCTION_40	ELSE_2	IF_6
0x4002455	            0x74cf	                            je 0x4002426	      1279	intel_display.c	FUNCTION_40	ELSE_2	IF_6
0x4002457	              0x5b	                                 pop rbx	      1347	intel_display.c	FUNCTION_44
0x4002458	              0x5d	                                 pop rbp	      1347	intel_display.c	FUNCTION_44
0x4002459	            0x415c	                                 pop r12	      1347	intel_display.c	FUNCTION_44
0x400245b	            0x415d	                                 pop r13	      1347	intel_display.c	FUNCTION_44
0x400245d	              0xc3	                                     ret	      1347	intel_display.c	FUNCTION_44
0x400245e	          0x4489e6	                           mov esi, r12d	      1272	intel_display.c	FUNCTION_40	IF_2	CALL_3
0x4002461	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      1272	intel_display.c	FUNCTION_40	IF_2	CALL_3
0x4002468	      0xba01000000	                              mov edx, 1	      1272	intel_display.c	FUNCTION_40	IF_2	CALL_3
0x400246d	          0xc1e60c	                            shl esi, 0xc	      1272	intel_display.c	FUNCTION_40	IF_2	CALL_3
0x4002470	          0x4889df	                            mov rdi, rbx	      1272	intel_display.c	FUNCTION_40	IF_2	CALL_3
0x4002473	    0x81c600030e00	                        add esi, 0xe0300	      1272	intel_display.c	FUNCTION_40	IF_2	CALL_3
0x4002479	      0xe800000000	                          call 0x400247e	      1272	intel_display.c	FUNCTION_40	IF_2	CALL_3
0x400247e	      0x2500000060	                     and eax, 0x60000000	      1273	intel_display.c	FUNCTION_40	IF_2	IF_3
0x4002483	          0x4139c5	                           cmp r13d, eax	      1273	intel_display.c	FUNCTION_40	IF_2	IF_3
0x4002486	     0xf8572ffffff	                           jne 0x40023fe	      1273	intel_display.c	FUNCTION_40	IF_2	IF_3
0x400248c	            0xeb98	                           jmp 0x4002426	      1273	intel_display.c	FUNCTION_40	IF_2	IF_3
0x400248e	      0xe800000000	                          call 0x4002493	      1344	intel_display.c	FUNCTION_44	CALL_7
0x4002493	             0xf0b	                                     ud2	      1344	intel_display.c	FUNCTION_44	CALL_7
0x4002495	      0xe964ffffff	                           jmp 0x40023fe	      1347	intel_display.c	FUNCTION_44
intel_init_display_hooks	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,13:ELSE,12:functions,0:CALL,15	105
0x4017930	              0x53	                                push rbx	     14253	intel_display.c	FUNCTION_392
0x4017931	          0x4889fb	                            mov rbx, rdi	     14253	intel_display.c	FUNCTION_392
0x4017934	      0xe800000000	                          call 0x4017939	     14254	intel_display.c	FUNCTION_392	CALL_1
0x4017939	     0xfb6835c0600	          movzx eax, byte [rbx + 0x65c] 	     14256	intel_display.c	FUNCTION_392	IF_1	CALL_2
0x4017940	            0x3c08	                               cmp al, 8	     14256	intel_display.c	FUNCTION_392	IF_1	CALL_2
0x4017942	            0x766b	                           jbe 0x40179af	     14256	intel_display.c	FUNCTION_392	IF_1	CALL_2
0x4017944	     0xfb7935a0600	          movzx edx, word [rbx + 0x65a] 	     14256	intel_display.c	FUNCTION_392	IF_1	CALL_2
0x401794b	    0x48c783905500	            mov qword [rbx + 0x5590], 0 	     14257	intel_display.c	FUNCTION_392	IF_1
0x4017956	    0x48c783985500	            mov qword [rbx + 0x5598], 0 	     14258	intel_display.c	FUNCTION_392	IF_1
0x4017961	    0x48c783a05500	            mov qword [rbx + 0x55a0], 0 	     14260	intel_display.c	FUNCTION_392	IF_1
0x401796c	    0x48c783a85500	            mov qword [rbx + 0x55a8], 0 	     14262	intel_display.c	FUNCTION_392	IF_1
0x4017977	    0x48c783b05500	            mov qword [rbx + 0x55b0], 0 	     14263	intel_display.c	FUNCTION_392	IF_1
0x4017982	          0xf6c210	                           test dl, 0x10	     14324	intel_display.c	FUNCTION_392	IF_9	CALL_10
0x4017985	            0x7478	                            je 0x40179ff	     14324	intel_display.c	FUNCTION_392	IF_9	CALL_10
0x4017987	    0x48c783d05500	            mov qword [rbx + 0x55d0], 0 	     14325	intel_display.c	FUNCTION_392	IF_9
0x4017992	            0x3c09	                               cmp al, 9	     14336	intel_display.c	FUNCTION_392	IF_13
0x4017994	    0x48c7c2000000	                              mov rdx, 0	     14336	intel_display.c	FUNCTION_392	IF_13
0x401799b	    0x48c7c0000000	                              mov rax, 0	     14336	intel_display.c	FUNCTION_392	IF_13
0x40179a2	        0x480f43c2	                         cmovae rax, rdx	     14336	intel_display.c	FUNCTION_392	IF_13
0x40179a6	    0x488983b85500	          mov qword [rbx + 0x55b8], rax 	     14336	intel_display.c	FUNCTION_392	IF_13
0x40179ad	              0x5b	                                 pop rbx	     14339	intel_display.c	FUNCTION_392	ELSE_12
0x40179ae	              0xc3	                                     ret	     14339	intel_display.c	FUNCTION_392	ELSE_12
0x40179af	    0xf68377060000	          test byte [rbx + 0x677], 0x40 	     14264	intel_display.c	FUNCTION_392	ELSE_1	IF_2	CALL_3
0x40179b6	     0xf8483000000	                            je 0x4017a3f	     14264	intel_display.c	FUNCTION_392	ELSE_1	IF_2	CALL_3
0x40179bc	     0xfb7935a0600	          movzx edx, word [rbx + 0x65a] 	     14264	intel_display.c	FUNCTION_392	ELSE_1	IF_2	CALL_3
0x40179c3	    0x48c783905500	            mov qword [rbx + 0x5590], 0 	     14265	intel_display.c	FUNCTION_392	ELSE_1	IF_2
0x40179ce	    0x48c783985500	            mov qword [rbx + 0x5598], 0 	     14266	intel_display.c	FUNCTION_392	ELSE_1	IF_2
0x40179d9	    0x48c783a05500	            mov qword [rbx + 0x55a0], 0 	     14268	intel_display.c	FUNCTION_392	ELSE_1	IF_2
0x40179e4	    0x48c783a85500	            mov qword [rbx + 0x55a8], 0 	     14270	intel_display.c	FUNCTION_392	ELSE_1	IF_2
0x40179ef	    0x48c783b05500	            mov qword [rbx + 0x55b0], 0 	     14271	intel_display.c	FUNCTION_392	ELSE_1	IF_2
0x40179fa	          0xf6c210	                           test dl, 0x10	     14324	intel_display.c	FUNCTION_392	IF_9	CALL_10
0x40179fd	            0x7588	                           jne 0x4017987	     14324	intel_display.c	FUNCTION_392	IF_9	CALL_10
0x40179ff	          0x83e220	                           and edx, 0x20	     14326	intel_display.c	FUNCTION_392	ELSE_9	IF_10	CALL_11
0x4017a02	            0x740d	                            je 0x4017a11	     14326	intel_display.c	FUNCTION_392	ELSE_9	IF_10	CALL_11
0x4017a04	    0x48c783d05500	            mov qword [rbx + 0x55d0], 0 	     14327	intel_display.c	FUNCTION_392	ELSE_9	IF_10
0x4017a0f	            0xeb81	                           jmp 0x4017992	     14327	intel_display.c	FUNCTION_392	ELSE_9	IF_10
0x4017a11	    0x8b9364060000	           mov edx, dword [rbx + 0x664] 	     14328	intel_display.c	FUNCTION_392	ELSE_10	IF_11	CALL_12
0x4017a17	    0xf7c200000200	                       test edx, 0x20000	     14328	intel_display.c	FUNCTION_392	ELSE_10	IF_11	CALL_12
0x4017a1d	     0xf85be000000	                           jne 0x4017ae1	     14328	intel_display.c	FUNCTION_392	ELSE_10	IF_11	CALL_12
0x4017a23	    0x81e200001800	                       and edx, 0x180000	     14331	intel_display.c	FUNCTION_392	ELSE_11	IF_12	CALL_14
0x4017a29	     0xf8463ffffff	                            je 0x4017992	     14331	intel_display.c	FUNCTION_392	ELSE_11	IF_12	CALL_14
0x4017a2f	    0x48c783d05500	            mov qword [rbx + 0x55d0], 0 	     14332	intel_display.c	FUNCTION_392	ELSE_11	IF_12
0x4017a3a	      0xe953ffffff	                           jmp 0x4017992	     14332	intel_display.c	FUNCTION_392	ELSE_11	IF_12
0x4017a3f	    0x8b93f8550000	          mov edx, dword [rbx + 0x55f8] 	     14272	intel_display.c	FUNCTION_392	ELSE_2	IF_3	CALL_4
0x4017a45	            0x85d2	                           test edx, edx	     14272	intel_display.c	FUNCTION_392	ELSE_2	IF_3	CALL_4
0x4017a47	            0x7555	                           jne 0x4017a9e	     14272	intel_display.c	FUNCTION_392	ELSE_2	IF_3	CALL_4
0x4017a49	    0x8b9364060000	           mov edx, dword [rbx + 0x664] 	     14280	intel_display.c	FUNCTION_392	ELSE_3	IF_4	CALL_5
0x4017a4f	    0xf7c200002000	                      test edx, 0x200000	     14280	intel_display.c	FUNCTION_392	ELSE_3	IF_4	CALL_5
0x4017a55	     0xf8496000000	                            je 0x4017af1	     14280	intel_display.c	FUNCTION_392	ELSE_3	IF_4	CALL_5
0x4017a5b	    0x48c783905500	            mov qword [rbx + 0x5590], 0 	     14281	intel_display.c	FUNCTION_392	ELSE_3	IF_4
0x4017a66	    0x48c783985500	            mov qword [rbx + 0x5598], 0 	     14282	intel_display.c	FUNCTION_392	ELSE_3	IF_4
0x4017a71	    0x48c783a05500	            mov qword [rbx + 0x55a0], 0 	     14284	intel_display.c	FUNCTION_392	ELSE_3	IF_4
0x4017a7c	    0x48c783a85500	            mov qword [rbx + 0x55a8], 0 	     14285	intel_display.c	FUNCTION_392	ELSE_3	IF_4
0x4017a87	    0x48c783b05500	            mov qword [rbx + 0x55b0], 0 	     14286	intel_display.c	FUNCTION_392	ELSE_3	IF_4
0x4017a92	     0xfb7935a0600	          movzx edx, word [rbx + 0x65a] 	     14286	intel_display.c	FUNCTION_392	ELSE_3	IF_4
0x4017a99	      0xe9e4feffff	                           jmp 0x4017982	     14286	intel_display.c	FUNCTION_392	ELSE_3	IF_4
0x4017a9e	    0x48c783905500	            mov qword [rbx + 0x5590], 0 	     14273	intel_display.c	FUNCTION_392	ELSE_2	IF_3
0x4017aa9	    0x48c783985500	            mov qword [rbx + 0x5598], 0 	     14274	intel_display.c	FUNCTION_392	ELSE_2	IF_3
0x4017ab4	    0x48c783a05500	            mov qword [rbx + 0x55a0], 0 	     14276	intel_display.c	FUNCTION_392	ELSE_2	IF_3
0x4017abf	    0x48c783a85500	            mov qword [rbx + 0x55a8], 0 	     14278	intel_display.c	FUNCTION_392	ELSE_2	IF_3
0x4017aca	    0x48c783b05500	            mov qword [rbx + 0x55b0], 0 	     14279	intel_display.c	FUNCTION_392	ELSE_2	IF_3
0x4017ad5	     0xfb7935a0600	          movzx edx, word [rbx + 0x65a] 	     14279	intel_display.c	FUNCTION_392	ELSE_2	IF_3
0x4017adc	      0xe9a1feffff	                           jmp 0x4017982	     14279	intel_display.c	FUNCTION_392	ELSE_2	IF_3
0x4017ae1	    0x48c783d05500	            mov qword [rbx + 0x55d0], 0 	     14330	intel_display.c	FUNCTION_392	ELSE_10	IF_11
0x4017aec	      0xe9a1feffff	                           jmp 0x4017992	     14330	intel_display.c	FUNCTION_392	ELSE_10	IF_11
0x4017af1	    0xf7c200000400	                       test edx, 0x40000	     14287	intel_display.c	FUNCTION_392	ELSE_4	IF_5	CALL_6
0x4017af7	            0x754c	                           jne 0x4017b45	     14287	intel_display.c	FUNCTION_392	ELSE_4	IF_5	CALL_6
0x4017af9	          0xf6c660	                           test dh, 0x60	     14294	intel_display.c	FUNCTION_392	ELSE_5	IF_6	CALL_7
0x4017afc	     0xf8486000000	                            je 0x4017b88	     14294	intel_display.c	FUNCTION_392	ELSE_5	IF_6	CALL_7
0x4017b02	    0x48c783905500	            mov qword [rbx + 0x5590], 0 	     14295	intel_display.c	FUNCTION_392	ELSE_5	IF_6
0x4017b0d	    0x48c783985500	            mov qword [rbx + 0x5598], 0 	     14296	intel_display.c	FUNCTION_392	ELSE_5	IF_6
0x4017b18	    0x48c783a05500	            mov qword [rbx + 0x55a0], 0 	     14298	intel_display.c	FUNCTION_392	ELSE_5	IF_6
0x4017b23	    0x48c783a85500	            mov qword [rbx + 0x55a8], 0 	     14299	intel_display.c	FUNCTION_392	ELSE_5	IF_6
0x4017b2e	    0x48c783b05500	            mov qword [rbx + 0x55b0], 0 	     14300	intel_display.c	FUNCTION_392	ELSE_5	IF_6
0x4017b39	     0xfb7935a0600	          movzx edx, word [rbx + 0x65a] 	     14300	intel_display.c	FUNCTION_392	ELSE_5	IF_6
0x4017b40	      0xe93dfeffff	                           jmp 0x4017982	     14300	intel_display.c	FUNCTION_392	ELSE_5	IF_6
0x4017b45	    0x48c783905500	            mov qword [rbx + 0x5590], 0 	     14288	intel_display.c	FUNCTION_392	ELSE_4	IF_5
0x4017b50	    0x48c783985500	            mov qword [rbx + 0x5598], 0 	     14289	intel_display.c	FUNCTION_392	ELSE_4	IF_5
0x4017b5b	    0x48c783a05500	            mov qword [rbx + 0x55a0], 0 	     14291	intel_display.c	FUNCTION_392	ELSE_4	IF_5
0x4017b66	    0x48c783a85500	            mov qword [rbx + 0x55a8], 0 	     14292	intel_display.c	FUNCTION_392	ELSE_4	IF_5
0x4017b71	    0x48c783b05500	            mov qword [rbx + 0x55b0], 0 	     14293	intel_display.c	FUNCTION_392	ELSE_4	IF_5
0x4017b7c	     0xfb7935a0600	          movzx edx, word [rbx + 0x65a] 	     14293	intel_display.c	FUNCTION_392	ELSE_4	IF_5
0x4017b83	      0xe9fafdffff	                           jmp 0x4017982	     14293	intel_display.c	FUNCTION_392	ELSE_4	IF_5
0x4017b88	          0x80e604	                               and dh, 4	     14301	intel_display.c	FUNCTION_392	ELSE_6	IF_7	CALL_8
0x4017b8b	            0x7443	                            je 0x4017bd0	     14301	intel_display.c	FUNCTION_392	ELSE_6	IF_7	CALL_8
0x4017b8d	    0x48c783905500	            mov qword [rbx + 0x5590], 0 	     14302	intel_display.c	FUNCTION_392	ELSE_6	IF_7
0x4017b98	    0x48c783985500	            mov qword [rbx + 0x5598], 0 	     14303	intel_display.c	FUNCTION_392	ELSE_6	IF_7
0x4017ba3	    0x48c783a05500	            mov qword [rbx + 0x55a0], 0 	     14305	intel_display.c	FUNCTION_392	ELSE_6	IF_7
0x4017bae	    0x48c783a85500	            mov qword [rbx + 0x55a8], 0 	     14306	intel_display.c	FUNCTION_392	ELSE_6	IF_7
0x4017bb9	    0x48c783b05500	            mov qword [rbx + 0x55b0], 0 	     14307	intel_display.c	FUNCTION_392	ELSE_6	IF_7
0x4017bc4	     0xfb7935a0600	          movzx edx, word [rbx + 0x65a] 	     14307	intel_display.c	FUNCTION_392	ELSE_6	IF_7
0x4017bcb	      0xe9b2fdffff	                           jmp 0x4017982	     14307	intel_display.c	FUNCTION_392	ELSE_6	IF_7
0x4017bd0	     0xfb7935a0600	          movzx edx, word [rbx + 0x65a] 	     14308	intel_display.c	FUNCTION_392	ELSE_7	IF_8	CALL_9
0x4017bd7	    0x48c783905500	            mov qword [rbx + 0x5590], 0 	     14309	intel_display.c	FUNCTION_392	ELSE_7	IF_8
0x4017be2	    0x48c783985500	            mov qword [rbx + 0x5598], 0 	     14310	intel_display.c	FUNCTION_392	ELSE_7	IF_8
0x4017bed	          0xf6c202	                              test dl, 2	     14308	intel_display.c	FUNCTION_392	ELSE_7	IF_8	CALL_9
0x4017bf0	            0x7526	                           jne 0x4017c18	     14308	intel_display.c	FUNCTION_392	ELSE_7	IF_8	CALL_9
0x4017bf2	    0x48c783a05500	            mov qword [rbx + 0x55a0], 0 	     14312	intel_display.c	FUNCTION_392	ELSE_7	IF_8
0x4017bfd	    0x48c783a85500	            mov qword [rbx + 0x55a8], 0 	     14313	intel_display.c	FUNCTION_392	ELSE_7	IF_8
0x4017c08	    0x48c783b05500	            mov qword [rbx + 0x55b0], 0 	     14314	intel_display.c	FUNCTION_392	ELSE_7	IF_8
0x4017c13	      0xe96afdffff	                           jmp 0x4017982	     14314	intel_display.c	FUNCTION_392	ELSE_7	IF_8
0x4017c18	    0x48c783a05500	            mov qword [rbx + 0x55a0], 0 	     14319	intel_display.c	FUNCTION_392	ELSE_8
0x4017c23	    0x48c783a85500	            mov qword [rbx + 0x55a8], 0 	     14320	intel_display.c	FUNCTION_392	ELSE_8
0x4017c2e	    0x48c783b05500	            mov qword [rbx + 0x55b0], 0 	     14321	intel_display.c	FUNCTION_392	ELSE_8
0x4017c39	      0xe944fdffff	                           jmp 0x4017982	     14321	intel_display.c	FUNCTION_392	ELSE_8
chv_enable_pll	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,2:ELSE,1:functions,0:CALL,16	154
0x400d390	            0x4157	                                push r15	      1457	intel_display.c	FUNCTION_50
0x400d392	            0x4156	                                push r14	      1457	intel_display.c	FUNCTION_50
0x400d394	            0x31d2	                            xor edx, edx	      1461	intel_display.c	FUNCTION_50	CALL_2
0x400d396	            0x4155	                                push r13	      1457	intel_display.c	FUNCTION_50
0x400d398	            0x4154	                                push r12	      1457	intel_display.c	FUNCTION_50
0x400d39a	          0x4989fd	                            mov r13, rdi	      1457	intel_display.c	FUNCTION_50
0x400d39d	              0x55	                                push rbp	      1457	intel_display.c	FUNCTION_50
0x400d39e	              0x53	                                push rbx	      1457	intel_display.c	FUNCTION_50
0x400d39f	          0x4989f4	                            mov r12, rsi	      1457	intel_display.c	FUNCTION_50
0x400d3a2	        0x4883ec28	                           sub rsp, 0x28	      1457	intel_display.c	FUNCTION_50
0x400d3a6	    0x4863afb00400	        movsxd rbp, dword [rdi + 0x4b0] 	      1459	intel_display.c	FUNCTION_50
0x400d3ad	          0x488b1f	                    mov rbx, qword [rdi]	      1458	intel_display.c	FUNCTION_50	CALL_1
0x400d3b0	    0x65488b042528	                mov rax, qword gs:[0x28]	      1457	intel_display.c	FUNCTION_50
0x400d3b9	      0x4889442420	             mov qword [rsp + 0x20], rax	      1457	intel_display.c	FUNCTION_50
0x400d3be	            0x31c0	                            xor eax, eax	      1457	intel_display.c	FUNCTION_50
0x400d3c0	          0x4889df	                            mov rdi, rbx	      1461	intel_display.c	FUNCTION_50	CALL_2
0x400d3c3	            0x89ee	                            mov esi, ebp	      1461	intel_display.c	FUNCTION_50	CALL_2
0x400d3c5	      0xe800000000	                          call 0x400d3ca	      1461	intel_display.c	FUNCTION_50	CALL_2
0x400d3ca	            0x89ee	                            mov esi, ebp	      1464	intel_display.c	FUNCTION_50	CALL_3
0x400d3cc	          0x4889df	                            mov rdi, rbx	      1464	intel_display.c	FUNCTION_50	CALL_3
0x400d3cf	      0xe800000000	                          call 0x400d3d4	      1464	intel_display.c	FUNCTION_50	CALL_3
0x400d3d4	    0x418b8c248002	           mov ecx, dword [r12 + 0x280] 	      1466	intel_display.c	FUNCTION_50	IF_1
0x400d3dc	            0x85c9	                           test ecx, ecx	      1466	intel_display.c	FUNCTION_50	IF_1
0x400d3de	     0xf8824010000	                            js 0x400d508	      1466	intel_display.c	FUNCTION_50	IF_1
0x400d3e4	            0x85ed	                           test ebp, ebp	      1469	intel_display.c	FUNCTION_50	IF_2
0x400d3e6	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      1476	intel_display.c	FUNCTION_50	IF_2	CALL_6
0x400d3ed	            0x7561	                           jne 0x400d450	      1469	intel_display.c	FUNCTION_50	IF_2
0x400d3ef	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	      1487	intel_display.c	FUNCTION_50	ELSE_1	CALL_14
0x400d3f5	    0x418b94248402	           mov edx, dword [r12 + 0x284] 	      1487	intel_display.c	FUNCTION_50	ELSE_1	CALL_14
0x400d3fd	          0x4889df	                            mov rdi, rbx	      1487	intel_display.c	FUNCTION_50	ELSE_1	CALL_14
0x400d400	    0x8db11c600000	                 lea esi, [rcx + 0x601c]	      1487	intel_display.c	FUNCTION_50	ELSE_1	CALL_14
0x400d406	      0xb901000000	                              mov ecx, 1	      1487	intel_display.c	FUNCTION_50	ELSE_1	CALL_14
0x400d40b	      0xe800000000	                          call 0x400d410	      1487	intel_display.c	FUNCTION_50	ELSE_1	CALL_14
0x400d410	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	      1488	intel_display.c	FUNCTION_50	ELSE_1	CALL_16
0x400d416	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      1488	intel_display.c	FUNCTION_50	ELSE_1	CALL_16
0x400d41d	            0x31d2	                            xor edx, edx	      1488	intel_display.c	FUNCTION_50	ELSE_1	CALL_16
0x400d41f	          0x4889df	                            mov rdi, rbx	      1488	intel_display.c	FUNCTION_50	ELSE_1	CALL_16
0x400d422	    0x8db11c600000	                 lea esi, [rcx + 0x601c]	      1488	intel_display.c	FUNCTION_50	ELSE_1	CALL_16
0x400d428	      0xe800000000	                          call 0x400d42d	      1488	intel_display.c	FUNCTION_50	ELSE_1	CALL_16
0x400d42d	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1490	intel_display.c	FUNCTION_50
0x400d432	    0x654833042528	                xor rax, qword gs:[0x28]	      1490	intel_display.c	FUNCTION_50
0x400d43b	     0xf85f2010000	                           jne 0x400d633	      1490	intel_display.c	FUNCTION_50
0x400d441	        0x4883c428	                           add rsp, 0x28	      1490	intel_display.c	FUNCTION_50
0x400d445	              0x5b	                                 pop rbx	      1490	intel_display.c	FUNCTION_50
0x400d446	              0x5d	                                 pop rbp	      1490	intel_display.c	FUNCTION_50
0x400d447	            0x415c	                                 pop r12	      1490	intel_display.c	FUNCTION_50
0x400d449	            0x415d	                                 pop r13	      1490	intel_display.c	FUNCTION_50
0x400d44b	            0x415e	                                 pop r14	      1490	intel_display.c	FUNCTION_50
0x400d44d	            0x415f	                                 pop r15	      1490	intel_display.c	FUNCTION_50
0x400d44f	              0xc3	                                     ret	      1490	intel_display.c	FUNCTION_50
0x400d450	        0x8d54ad00	                  lea edx, [rbp + rbp*4]	      1476	intel_display.c	FUNCTION_50	IF_2	CALL_6
0x400d454	      0xbe50041f00	                       mov esi, 0x1f0450	      1476	intel_display.c	FUNCTION_50	IF_2	CALL_6
0x400d459	          0x4889df	                            mov rdi, rbx	      1476	intel_display.c	FUNCTION_50	IF_2	CALL_6
0x400d45c	        0x8d4c5507	              lea ecx, [rbp + rdx*2 + 7]	      1476	intel_display.c	FUNCTION_50	IF_2	CALL_6
0x400d460	      0xba01000000	                              mov edx, 1	      1476	intel_display.c	FUNCTION_50	IF_2	CALL_6
0x400d465	            0xd3e2	                             shl edx, cl	      1476	intel_display.c	FUNCTION_50	IF_2	CALL_6
0x400d467	      0xb901000000	                              mov ecx, 1	      1476	intel_display.c	FUNCTION_50	IF_2	CALL_6
0x400d46c	      0xe800000000	                          call 0x400d471	      1476	intel_display.c	FUNCTION_50	IF_2	CALL_6
0x400d471	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	      1477	intel_display.c	FUNCTION_50	IF_2	CALL_8
0x400d477	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      1477	intel_display.c	FUNCTION_50	IF_2	CALL_8
0x400d47e	          0x4889df	                            mov rdi, rbx	      1477	intel_display.c	FUNCTION_50	IF_2	CALL_8
0x400d481	    0x418b94248402	           mov edx, dword [r12 + 0x284] 	      1477	intel_display.c	FUNCTION_50	IF_2	CALL_8
0x400d489	    0x8db120600000	                 lea esi, [rcx + 0x6020]	      1477	intel_display.c	FUNCTION_50	IF_2	CALL_8
0x400d48f	      0xb901000000	                              mov ecx, 1	      1477	intel_display.c	FUNCTION_50	IF_2	CALL_8
0x400d494	      0xe800000000	                          call 0x400d499	      1477	intel_display.c	FUNCTION_50	IF_2	CALL_8
0x400d499	            0x31d2	                            xor edx, edx	      1478	intel_display.c	FUNCTION_50	IF_2	CALL_9
0x400d49b	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      1478	intel_display.c	FUNCTION_50	IF_2	CALL_9
0x400d4a2	      0xb901000000	                              mov ecx, 1	      1478	intel_display.c	FUNCTION_50	IF_2	CALL_9
0x400d4a7	      0xbe50041f00	                       mov esi, 0x1f0450	      1478	intel_display.c	FUNCTION_50	IF_2	CALL_9
0x400d4ac	          0x4889df	                            mov rdi, rbx	      1478	intel_display.c	FUNCTION_50	IF_2	CALL_9
0x400d4af	      0xe800000000	                          call 0x400d4b4	      1478	intel_display.c	FUNCTION_50	IF_2	CALL_9
0x400d4b4	    0x418b84248402	           mov eax, dword [r12 + 0x284] 	      1479	intel_display.c	FUNCTION_50	IF_2
0x400d4bc	      0xba01000000	                              mov edx, 1	      1485	intel_display.c	FUNCTION_50	IF_2	CALL_12
0x400d4c1	          0x4889df	                            mov rdi, rbx	      1485	intel_display.c	FUNCTION_50	IF_2	CALL_12
0x400d4c4	    0x8984abd06f00	  mov dword [rbx + rbp*4 + 0x6fd0], eax 	      1479	intel_display.c	FUNCTION_50	IF_2
0x400d4cb	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	      1485	intel_display.c	FUNCTION_50	IF_2	CALL_12
0x400d4d1	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      1485	intel_display.c	FUNCTION_50	IF_2	CALL_12
0x400d4d8	    0x8db118600000	                 lea esi, [rcx + 0x6018]	      1485	intel_display.c	FUNCTION_50	IF_2	CALL_12
0x400d4de	      0xe800000000	                          call 0x400d4e3	      1485	intel_display.c	FUNCTION_50	IF_2	CALL_12
0x400d4e3	      0xa900000010	                    test eax, 0x10000000	      1485	intel_display.c	FUNCTION_50	IF_2	CALL_12
0x400d4e8	     0xf853fffffff	                           jne 0x400d42d	      1485	intel_display.c	FUNCTION_50	IF_2	CALL_12
0x400d4ee	    0x48c7c6000000	                              mov rsi, 0	      1485	intel_display.c	FUNCTION_50	IF_2	CALL_12
0x400d4f5	    0x48c7c7000000	                              mov rdi, 0	      1485	intel_display.c	FUNCTION_50	IF_2	CALL_12
0x400d4fc	      0xe800000000	                          call 0x400d501	      1485	intel_display.c	FUNCTION_50	IF_2	CALL_12
0x400d501	             0xf0b	                                     ud2	      1485	intel_display.c	FUNCTION_50	IF_2	CALL_12
0x400d503	      0xe925ffffff	                           jmp 0x400d42d	      1485	intel_display.c	FUNCTION_50	IF_2	CALL_12
0x400d508	    0x458bb5b00400	          mov r14d, dword [r13 + 0x4b0] 	      1485	intel_display.c	FUNCTION_50	IF_2	CALL_12
0x400d50f	        0x4183fe01	                             cmp r14d, 1	      1206	intel_drv.h	FUNCTION_431	SWITCH_1
0x400d513	     0xf840f010000	                            je 0x400d628	      1206	intel_drv.h	FUNCTION_431	SWITCH_1
0x400d519	        0x4183fe02	                             cmp r14d, 2	      1206	intel_drv.h	FUNCTION_431	SWITCH_1
0x400d51d	            0x7407	                            je 0x400d526	      1206	intel_drv.h	FUNCTION_431	SWITCH_1
0x400d51f	          0x4585f6	                         test r14d, r14d	      1206	intel_drv.h	FUNCTION_431	SWITCH_1
0x400d522	            0x7402	                            je 0x400d526	      1206	intel_drv.h	FUNCTION_431	SWITCH_1
0x400d524	             0xf0b	                                     ud2	      1206	intel_drv.h	FUNCTION_431	SWITCH_1
0x400d526	    0x41bf38810000	                        mov r15d, 0x8138	      1206	intel_drv.h	FUNCTION_431	SWITCH_1
0x400d52c	        0x4d8b6d00	                    mov r13, qword [r13]	      1206	intel_drv.h	FUNCTION_431	SWITCH_1
0x400d530	    0x4d8d85404800	                  lea r8, [r13 + 0x4840]	      1431	intel_display.c	FUNCTION_49	CALL_3
0x400d537	          0x4c89c7	                             mov rdi, r8	      1431	intel_display.c	FUNCTION_49	CALL_3
0x400d53a	        0x4c890424	                     mov qword [rsp], r8	      1431	intel_display.c	FUNCTION_49	CALL_3
0x400d53e	      0xe800000000	                          call 0x400d543	      1431	intel_display.c	FUNCTION_49	CALL_3
0x400d543	          0x4489fa	                           mov edx, r15d	      1434	intel_display.c	FUNCTION_49	CALL_5
0x400d546	          0x4489f6	                           mov esi, r14d	      1434	intel_display.c	FUNCTION_49	CALL_5
0x400d549	          0x4c89ef	                            mov rdi, r13	      1434	intel_display.c	FUNCTION_49	CALL_5
0x400d54c	      0xe800000000	                          call 0x400d551	      1434	intel_display.c	FUNCTION_49	CALL_5
0x400d551	          0x80cc20	                             or ah, 0x20	      1436	intel_display.c	FUNCTION_49	CALL_7
0x400d554	          0x4489fa	                           mov edx, r15d	      1436	intel_display.c	FUNCTION_49	CALL_7
0x400d557	          0x4489f6	                           mov esi, r14d	      1436	intel_display.c	FUNCTION_49	CALL_7
0x400d55a	            0x89c1	                            mov ecx, eax	      1436	intel_display.c	FUNCTION_49	CALL_7
0x400d55c	          0x4c89ef	                            mov rdi, r13	      1436	intel_display.c	FUNCTION_49	CALL_7
0x400d55f	          0x4d63fe	                        movsxd r15, r14d	      1446	intel_display.c	FUNCTION_49	CALL_11
0x400d562	      0xe800000000	                          call 0x400d567	      1436	intel_display.c	FUNCTION_49	CALL_7
0x400d567	        0x4c8b0424	                     mov r8, qword [rsp]	      1438	intel_display.c	FUNCTION_49	CALL_8
0x400d56b	          0x4c89c7	                             mov rdi, r8	      1438	intel_display.c	FUNCTION_49	CALL_8
0x400d56e	      0xe800000000	                          call 0x400d573	      1438	intel_display.c	FUNCTION_49	CALL_8
0x400d573	      0xbfc7100000	                         mov edi, 0x10c7	      1443	intel_display.c	FUNCTION_49	CALL_9
0x400d578	      0xe800000000	                          call 0x400d57d	      1443	intel_display.c	FUNCTION_49	CALL_9
0x400d57d	    0x418b856c0600	           mov eax, dword [r13 + 0x66c] 	      1446	intel_display.c	FUNCTION_49	CALL_11
0x400d584	    0x4d8b85180800	            mov r8, qword [r13 + 0x818] 	      1446	intel_display.c	FUNCTION_49	CALL_11
0x400d58b	          0x4c89ef	                            mov rdi, r13	      1446	intel_display.c	FUNCTION_49	CALL_11
0x400d58e	    0x418b94248002	           mov edx, dword [r12 + 0x280] 	      1446	intel_display.c	FUNCTION_49	CALL_11
0x400d596	    0x8d8814600000	                 lea ecx, [rax + 0x6014]	      1446	intel_display.c	FUNCTION_49	CALL_11
0x400d59c	        0x894c2408	                mov dword [rsp + 8], ecx	      1446	intel_display.c	FUNCTION_49	CALL_11
0x400d5a0	    0x8d8818600000	                 lea ecx, [rax + 0x6018]	      1446	intel_display.c	FUNCTION_49	CALL_11
0x400d5a6	       0x530600000	                         add eax, 0x6030	      1446	intel_display.c	FUNCTION_49	CALL_11
0x400d5ab	        0x89442410	             mov dword [rsp + 0x10], eax	      1446	intel_display.c	FUNCTION_49	CALL_11
0x400d5af	        0x894c240c	              mov dword [rsp + 0xc], ecx	      1446	intel_display.c	FUNCTION_49	CALL_11
0x400d5b3	      0xb901000000	                              mov ecx, 1	      1446	intel_display.c	FUNCTION_49	CALL_11
0x400d5b8	      0x428b74bc08	       mov esi, dword [rsp + r15*4 + 8] 	      1446	intel_display.c	FUNCTION_49	CALL_11
0x400d5bd	      0xe800000000	                          call 0x400d5c2	      1446	intel_display.c	FUNCTION_49	CALL_11
0x400d5c2	    0x418b856c0600	           mov eax, dword [r13 + 0x66c] 	      1450	intel_display.c	FUNCTION_49	IF_1	CALL_13
0x400d5c9	    0x41b901000000	                              mov r9d, 1	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400d5cf	    0x41b802000000	                              mov r8d, 2	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400d5d5	      0xb900800000	                         mov ecx, 0x8000	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400d5da	          0x4c89ef	                            mov rdi, r13	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400d5dd	    0x8d9014600000	                 lea edx, [rax + 0x6014]	      1450	intel_display.c	FUNCTION_49	IF_1	CALL_13
0x400d5e3	        0x89542414	             mov dword [rsp + 0x14], edx	      1450	intel_display.c	FUNCTION_49	IF_1	CALL_13
0x400d5e7	    0x8d9018600000	                 lea edx, [rax + 0x6018]	      1450	intel_display.c	FUNCTION_49	IF_1	CALL_13
0x400d5ed	       0x530600000	                         add eax, 0x6030	      1450	intel_display.c	FUNCTION_49	IF_1	CALL_13
0x400d5f2	        0x8944241c	             mov dword [rsp + 0x1c], eax	      1450	intel_display.c	FUNCTION_49	IF_1	CALL_13
0x400d5f6	        0x89542418	             mov dword [rsp + 0x18], edx	      1450	intel_display.c	FUNCTION_49	IF_1	CALL_13
0x400d5fa	      0x428b74bc14	    mov esi, dword [rsp + r15*4 + 0x14] 	      1450	intel_display.c	FUNCTION_49	IF_1	CALL_13
0x400d5ff	      0xba00800000	                         mov edx, 0x8000	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400d604	            0x6a00	                                  push 0	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400d606	      0xe800000000	                          call 0x400d60b	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400d60b	            0x85c0	                           test eax, eax	      1449	intel_display.c	FUNCTION_49	IF_1	CALL_12
0x400d60d	              0x5a	                                 pop rdx	      1449	intel_display.c	FUNCTION_49	IF_1	CALL_12
0x400d60e	     0xf84d0fdffff	                            je 0x400d3e4	      1449	intel_display.c	FUNCTION_49	IF_1	CALL_12
0x400d614	          0x4489f6	                           mov esi, r14d	      1452	intel_display.c	FUNCTION_49	CALL_14
0x400d617	    0x48c7c7000000	                              mov rdi, 0	      1452	intel_display.c	FUNCTION_49	CALL_14
0x400d61e	      0xe800000000	                          call 0x400d623	      1452	intel_display.c	FUNCTION_49	CALL_14
0x400d623	      0xe9bcfdffff	                           jmp 0x400d3e4	      1452	intel_display.c	FUNCTION_49	CALL_14
0x400d628	    0x41bf84800000	                        mov r15d, 0x8084	      1206	intel_drv.h	FUNCTION_431	SWITCH_1
0x400d62e	      0xe9f9feffff	                           jmp 0x400d52c	      1206	intel_drv.h	FUNCTION_431	SWITCH_1
0x400d633	      0xe800000000	                          call 0x400d638	      1490	intel_display.c	FUNCTION_50
i9xx_check_cursor	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,5:ELSE,0:functions,0:CALL,8	126
0x400e9a0	            0x4156	                                push r14	      9663	intel_display.c	FUNCTION_286
0x400e9a2	            0x4155	                                push r13	      9663	intel_display.c	FUNCTION_286
0x400e9a4	            0x4154	                                push r12	      9663	intel_display.c	FUNCTION_286
0x400e9a6	              0x55	                                push rbp	      9663	intel_display.c	FUNCTION_286
0x400e9a7	          0x4889f5	                            mov rbp, rsi	      9663	intel_display.c	FUNCTION_286
0x400e9aa	              0x53	                                push rbx	      9663	intel_display.c	FUNCTION_286
0x400e9ab	          0x4889d6	                            mov rsi, rdx	      9669	intel_display.c	FUNCTION_286	CALL_2
0x400e9ae	          0x4c8b27	                    mov r12, qword [rdi]	      9664	intel_display.c	FUNCTION_286	CALL_1
0x400e9b1	    0x448baf880200	          mov r13d, dword [rdi + 0x288] 	      9666	intel_display.c	FUNCTION_286
0x400e9b8	          0x4889ef	                            mov rdi, rbp	      9669	intel_display.c	FUNCTION_286	CALL_2
0x400e9bb	          0x4889d3	                            mov rbx, rdx	      9663	intel_display.c	FUNCTION_286
0x400e9be	        0x4c8b7210	            mov r14, qword [rdx + 0x10] 	      9665	intel_display.c	FUNCTION_286
0x400e9c2	      0xe8c9feffff	             call sym.intel_check_cursor	      9669	intel_display.c	FUNCTION_286	CALL_2
0x400e9c7	            0x85c0	                           test eax, eax	      9670	intel_display.c	FUNCTION_286	IF_1
0x400e9c9	            0x7556	                           jne 0x400ea21	      9670	intel_display.c	FUNCTION_286	IF_1
0x400e9cb	          0x4d85f6	                           test r14, r14	      9674	intel_display.c	FUNCTION_286	IF_2
0x400e9ce	            0x7451	                            je 0x400ea21	      9674	intel_display.c	FUNCTION_286	IF_2
0x400e9d0	          0x8b7328	            mov esi, dword [rbx + 0x28] 	      9626	intel_display.c	FUNCTION_285
0x400e9d3	          0x8b4b2c	            mov ecx, dword [rbx + 0x2c] 	      9627	intel_display.c	FUNCTION_285
0x400e9d6	            0x85f6	                           test esi, esi	      9412	intel_display.c	FUNCTION_276
0x400e9d8	            0x7e2f	                           jle 0x400ea09	      9412	intel_display.c	FUNCTION_276
0x400e9da	          0x488b03	                    mov rax, qword [rbx]	      9625	intel_display.c	FUNCTION_285	CALL_1
0x400e9dd	          0x488b38	                    mov rdi, qword [rax]	      9625	intel_display.c	FUNCTION_285	CALL_1
0x400e9e0	    0x3bb7c0050000	           cmp esi, dword [rdi + 0x5c0] 	      9411	intel_display.c	FUNCTION_276
0x400e9e6	            0x7721	                            ja 0x400ea09	      9411	intel_display.c	FUNCTION_276
0x400e9e8	            0x85c9	                           test ecx, ecx	      9411	intel_display.c	FUNCTION_276
0x400e9ea	            0x7e1d	                           jle 0x400ea09	      9411	intel_display.c	FUNCTION_276
0x400e9ec	    0x3b8fc4050000	           cmp ecx, dword [rdi + 0x5c4] 	      9412	intel_display.c	FUNCTION_276
0x400e9f2	            0x7715	                            ja 0x400ea09	      9412	intel_display.c	FUNCTION_276
0x400e9f4	    0x81fe80000000	                           cmp esi, 0x80	      9633	intel_display.c	FUNCTION_285	SWITCH_1
0x400e9fa	            0x742e	                            je 0x400ea2a	      9633	intel_display.c	FUNCTION_285	SWITCH_1
0x400e9fc	    0x81fe00010000	                          cmp esi, 0x100	      9633	intel_display.c	FUNCTION_285	SWITCH_1
0x400ea02	            0x7426	                            je 0x400ea2a	      9633	intel_display.c	FUNCTION_285	SWITCH_1
0x400ea04	          0x83fe40	                           cmp esi, 0x40	      9633	intel_display.c	FUNCTION_285	SWITCH_1
0x400ea07	            0x7421	                            je 0x400ea2a	      9633	intel_display.c	FUNCTION_285	SWITCH_1
0x400ea09	            0x89f2	                            mov edx, esi	      9679	intel_display.c	FUNCTION_286	IF_3	CALL_4
0x400ea0b	      0xbf01000000	                              mov edi, 1	      9679	intel_display.c	FUNCTION_286	IF_3	CALL_4
0x400ea10	    0x48c7c6000000	                              mov rsi, 0	      9679	intel_display.c	FUNCTION_286	IF_3	CALL_4
0x400ea17	      0xe800000000	                          call 0x400ea1c	      9679	intel_display.c	FUNCTION_286	IF_3	CALL_4
0x400ea1c	      0xb8eaffffff	                     mov eax, 0xffffffea	      9682	intel_display.c	FUNCTION_286	IF_3
0x400ea21	              0x5b	                                 pop rbx	      9710	intel_display.c	FUNCTION_286
0x400ea22	              0x5d	                                 pop rbp	      9710	intel_display.c	FUNCTION_286
0x400ea23	            0x415c	                                 pop r12	      9710	intel_display.c	FUNCTION_286
0x400ea25	            0x415d	                                 pop r13	      9710	intel_display.c	FUNCTION_286
0x400ea27	            0x415e	                                 pop r14	      9710	intel_display.c	FUNCTION_286
0x400ea29	              0xc3	                                     ret	      9710	intel_display.c	FUNCTION_286
0x400ea2a	    0xf68778060000	          test byte [rdi + 0x678], 0x20 	      9648	intel_display.c	FUNCTION_285	IF_2	CALL_3
0x400ea31	     0xf84ac000000	                            je 0x400eae3	      9648	intel_display.c	FUNCTION_285	IF_2	CALL_3
0x400ea37	            0x39ce	                            cmp esi, ecx	      9653	intel_display.c	FUNCTION_285	ELSE_1	IF_4
0x400ea39	            0x75ce	                           jne 0x400ea09	      9653	intel_display.c	FUNCTION_285	ELSE_1	IF_4
0x400ea3b	        0x498b4648	            mov rax, qword [r14 + 0x48] 	      9685	intel_display.c	FUNCTION_286	IF_4
0x400ea3f	        0x418b5658	            mov edx, dword [r14 + 0x58] 	      9685	intel_display.c	FUNCTION_286	IF_4
0x400ea43	         0xfb64006	               movzx eax, byte [rax + 6]	      9685	intel_display.c	FUNCTION_286	IF_4
0x400ea47	           0xfafc6	                           imul eax, esi	      9685	intel_display.c	FUNCTION_286	IF_4
0x400ea4a	            0x39c2	                            cmp edx, eax	      9685	intel_display.c	FUNCTION_286	IF_4
0x400ea4c	     0xf8501010000	                           jne 0x400eb53	      9685	intel_display.c	FUNCTION_286	IF_4
0x400ea52	    0x41f684246606	          test byte [r12 + 0x666], 0x20 	      9701	intel_display.c	FUNCTION_286	IF_5	CALL_6
0x400ea5b	            0x740a	                            je 0x400ea67	      9701	intel_display.c	FUNCTION_286	IF_5	CALL_6
0x400ea5d	        0x4183fd02	                             cmp r13d, 2	      9701	intel_display.c	FUNCTION_286	IF_5	CALL_6
0x400ea61	     0xf84bc000000	                            je 0x400eb23	      9701	intel_display.c	FUNCTION_286	IF_5	CALL_6
0x400ea67	     0xfb687770600	          movzx eax, byte [rdi + 0x677] 	      9595	intel_display.c	FUNCTION_284	IF_1	CALL_3
0x400ea6e	          0x83e040	                           and eax, 0x40	      9595	intel_display.c	FUNCTION_284	IF_1	CALL_3
0x400ea71	            0x3c01	                               cmp al, 1	      9596	intel_display.c	FUNCTION_284	IF_1
0x400ea73	            0x19c0	                            sbb eax, eax	      9596	intel_display.c	FUNCTION_284	IF_1
0x400ea75	      0x25000000ff	                     and eax, 0xff000000	      9596	intel_display.c	FUNCTION_284	IF_1
0x400ea7a	       0x500000005	                      add eax, 0x5000000	      9596	intel_display.c	FUNCTION_284	IF_1
0x400ea7f	    0x80bf5c060000	               cmp byte [rdi + 0x65c], 4	      9598	intel_display.c	FUNCTION_284	IF_2	CALL_5
0x400ea86	            0x771b	                            ja 0x400eaa3	      9598	intel_display.c	FUNCTION_284	IF_2	CALL_5
0x400ea88	    0xf78764060000	       test dword [rdi + 0x664], 0x6000 	      9598	intel_display.c	FUNCTION_284	IF_2	CALL_5
0x400ea92	            0x750f	                           jne 0x400eaa3	      9598	intel_display.c	FUNCTION_284	IF_2	CALL_5
0x400ea94	        0x488b5500	                    mov rdx, qword [rbp]	      9599	intel_display.c	FUNCTION_284	CALL_6
0x400ea98	    0x8b92b0040000	           mov edx, dword [rdx + 0x4b0] 	      9599	intel_display.c	FUNCTION_284	CALL_6
0x400ea9e	          0xc1e21c	                           shl edx, 0x1c	      9599	intel_display.c	FUNCTION_284	CALL_6
0x400eaa1	             0x9d0	                             or eax, edx	      9599	intel_display.c	FUNCTION_284	CALL_6
0x400eaa3	    0x81fe80000000	                           cmp esi, 0x80	      9601	intel_display.c	FUNCTION_284	SWITCH_1
0x400eaa9	            0x7465	                            je 0x400eb10	      9601	intel_display.c	FUNCTION_284	SWITCH_1
0x400eaab	    0x81fe00010000	                          cmp esi, 0x100	      9601	intel_display.c	FUNCTION_284	SWITCH_1
0x400eab1	            0x746b	                            je 0x400eb1e	      9601	intel_display.c	FUNCTION_284	SWITCH_1
0x400eab3	          0x83c827	                            or eax, 0x27	      9603	intel_display.c	FUNCTION_284	SWITCH_1
0x400eab6	          0x83fe40	                           cmp esi, 0x40	      9601	intel_display.c	FUNCTION_284	SWITCH_1
0x400eab9	            0x7458	                            je 0x400eb13	      9601	intel_display.c	FUNCTION_284	SWITCH_1
0x400eabb	    0x48c7c2000000	                              mov rdx, 0	      9612	intel_display.c	FUNCTION_284	SWITCH_1	CALL_7
0x400eac2	    0x48c7c7000000	                              mov rdi, 0	      9612	intel_display.c	FUNCTION_284	SWITCH_1	CALL_7
0x400eac9	      0xe800000000	                          call 0x400eace	      9612	intel_display.c	FUNCTION_284	SWITCH_1	CALL_7
0x400eace	             0xf0b	                                     ud2	      9612	intel_display.c	FUNCTION_284	SWITCH_1	CALL_7
0x400ead0	            0x31c0	                            xor eax, eax	      9613	intel_display.c	FUNCTION_284	SWITCH_1
0x400ead2	    0x8983b0000000	             mov dword [rbx + 0xb0], eax	      9707	intel_display.c	FUNCTION_286	CALL_8
0x400ead8	            0x31c0	                            xor eax, eax	      9709	intel_display.c	FUNCTION_286
0x400eada	              0x5b	                                 pop rbx	      9710	intel_display.c	FUNCTION_286
0x400eadb	              0x5d	                                 pop rbp	      9710	intel_display.c	FUNCTION_286
0x400eadc	            0x415c	                                 pop r12	      9710	intel_display.c	FUNCTION_286
0x400eade	            0x415d	                                 pop r13	      9710	intel_display.c	FUNCTION_286
0x400eae0	            0x415e	                                 pop r14	      9710	intel_display.c	FUNCTION_286
0x400eae2	              0xc3	                                     ret	      9710	intel_display.c	FUNCTION_286
0x400eae3	    0x80bf5c060000	               cmp byte [rdi + 0x65c], 6	      9648	intel_display.c	FUNCTION_285	IF_2	CALL_3
0x400eaea	     0xf8647ffffff	                           jbe 0x400ea37	      9648	intel_display.c	FUNCTION_285	IF_2	CALL_3
0x400eaf0	        0xf6434001	               test byte [rbx + 0x40], 1	      9648	intel_display.c	FUNCTION_285	IF_2	CALL_3
0x400eaf4	     0xf843dffffff	                            je 0x400ea37	      9648	intel_display.c	FUNCTION_285	IF_2	CALL_3
0x400eafa	          0x83f907	                              cmp ecx, 7	      9650	intel_display.c	FUNCTION_285	IF_2	IF_3
0x400eafd	     0xf8e06ffffff	                           jle 0x400ea09	      9650	intel_display.c	FUNCTION_285	IF_2	IF_3
0x400eb03	            0x39ce	                            cmp esi, ecx	      9650	intel_display.c	FUNCTION_285	IF_2	IF_3
0x400eb05	     0xf8d30ffffff	                           jge 0x400ea3b	      9650	intel_display.c	FUNCTION_285	IF_2	IF_3
0x400eb0b	      0xe9f9feffff	                           jmp 0x400ea09	      9650	intel_display.c	FUNCTION_285	IF_2	IF_3
0x400eb10	          0x83c822	                            or eax, 0x22	      9606	intel_display.c	FUNCTION_284	SWITCH_1
0x400eb13	        0xf6434004	               test byte [rbx + 0x40], 4	      9616	intel_display.c	FUNCTION_284	IF_3
0x400eb17	            0x74b9	                            je 0x400ead2	      9616	intel_display.c	FUNCTION_284	IF_3
0x400eb19	          0x80cc80	                             or ah, 0x80	      9617	intel_display.c	FUNCTION_284	IF_3
0x400eb1c	            0xebb4	                           jmp 0x400ead2	      9617	intel_display.c	FUNCTION_284	IF_3
0x400eb1e	          0x83c823	                            or eax, 0x23	      9609	intel_display.c	FUNCTION_284	SWITCH_1
0x400eb21	            0xebf0	                           jmp 0x400eb13	      9609	intel_display.c	FUNCTION_284	SWITCH_1
0x400eb23	        0x807b7400	                cmp byte [rbx + 0x74], 0	      9701	intel_display.c	FUNCTION_286	IF_5	CALL_6
0x400eb27	     0xf843affffff	                            je 0x400ea67	      9701	intel_display.c	FUNCTION_286	IF_5	CALL_6
0x400eb2d	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      9702	intel_display.c	FUNCTION_286	IF_5
0x400eb30	            0x85c0	                           test eax, eax	      9702	intel_display.c	FUNCTION_286	IF_5
0x400eb32	     0xf892fffffff	                           jns 0x400ea67	      9702	intel_display.c	FUNCTION_286	IF_5
0x400eb38	    0x48c7c6000000	                              mov rsi, 0	      9703	intel_display.c	FUNCTION_286	IF_5	CALL_7
0x400eb3f	      0xbf04000000	                              mov edi, 4	      9703	intel_display.c	FUNCTION_286	IF_5	CALL_7
0x400eb44	      0xe800000000	                          call 0x400eb49	      9703	intel_display.c	FUNCTION_286	IF_5	CALL_7
0x400eb49	      0xb8eaffffff	                     mov eax, 0xffffffea	      9704	intel_display.c	FUNCTION_286	IF_5
0x400eb4e	      0xe9cefeffff	                           jmp 0x400ea21	      9704	intel_display.c	FUNCTION_286	IF_5
0x400eb53	            0x89f1	                            mov ecx, esi	      9686	intel_display.c	FUNCTION_286	IF_4	CALL_5
0x400eb55	      0xbf04000000	                              mov edi, 4	      9686	intel_display.c	FUNCTION_286	IF_4	CALL_5
0x400eb5a	    0x48c7c6000000	                              mov rsi, 0	      9686	intel_display.c	FUNCTION_286	IF_4	CALL_5
0x400eb61	      0xe800000000	                          call 0x400eb66	      9686	intel_display.c	FUNCTION_286	IF_4	CALL_5
0x400eb66	      0xb8eaffffff	                     mov eax, 0xffffffea	      9688	intel_display.c	FUNCTION_286	IF_4
0x400eb6b	      0xe9b1feffff	                           jmp 0x400ea21	      9688	intel_display.c	FUNCTION_286	IF_4
wait_for_pipe_scanline_moving	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,6	88
0x4004750	            0x4157	                                push r15	      1021	intel_display.c	FUNCTION_24
0x4004752	            0x4156	                                push r14	      1021	intel_display.c	FUNCTION_24
0x4004754	    0x41be0a000000	                           mov r14d, 0xa	      1026	intel_display.c	FUNCTION_24	IF_1	CALL_3
0x400475a	            0x4155	                                push r13	      1021	intel_display.c	FUNCTION_24
0x400475c	            0x4154	                                push r12	      1021	intel_display.c	FUNCTION_24
0x400475e	              0x55	                                push rbp	      1021	intel_display.c	FUNCTION_24
0x400475f	              0x53	                                push rbx	      1021	intel_display.c	FUNCTION_24
0x4004760	        0x4883ec18	                           sub rsp, 0x18	      1021	intel_display.c	FUNCTION_24
0x4004764	    0x8b87b0040000	           mov eax, dword [rdi + 0x4b0] 	      1023	intel_display.c	FUNCTION_24
0x400476a	          0x4c8b3f	                    mov r15, qword [rdi]	      1022	intel_display.c	FUNCTION_24	CALL_1
0x400476d	        0x89742414	             mov dword [rsp + 0x14], esi	      1021	intel_display.c	FUNCTION_24
0x4004771	      0x408874240f	               mov byte [rsp + 0xf], sil	      1021	intel_display.c	FUNCTION_24
0x4004776	            0x89c3	                            mov ebx, eax	      1023	intel_display.c	FUNCTION_24
0x4004778	        0x89442410	             mov dword [rsp + 0x10], eax	      1023	intel_display.c	FUNCTION_24
0x400477c	      0xe800000000	                          call 0x4004781	      1026	intel_display.c	FUNCTION_24	IF_1	CALL_3
0x4004781	    0x480500e1f505	                      add rax, 0x5f5e100	      1026	intel_display.c	FUNCTION_24	IF_1	CALL_3
0x4004787	          0x4c63e3	                         movsxd r12, ebx	      1026	intel_display.c	FUNCTION_24	IF_1	CALL_3
0x400478a	        0x48890424	                    mov qword [rsp], rax	      1026	intel_display.c	FUNCTION_24	IF_1	CALL_3
0x400478e	      0xe800000000	                          call 0x4004793	      1026	intel_display.c	FUNCTION_24	IF_1	CALL_3
0x4004793	            0xeb24	                           jmp 0x40047b9	      1026	intel_display.c	FUNCTION_24	IF_1	CALL_3
0x4004795	        0x4183fd01	                             cmp r13d, 1	      1026	intel_display.c	FUNCTION_24	IF_1	CALL_3
0x4004799	     0xf84d1000000	                            je 0x4004870	      1026	intel_display.c	FUNCTION_24	IF_1	CALL_3
0x400479f	        0x4b8d1c36	                    lea rbx, [r14 + r14]	      1026	intel_display.c	FUNCTION_24	IF_1	CALL_3
0x40047a3	          0x4c89f7	                            mov rdi, r14	      1026	intel_display.c	FUNCTION_24	IF_1	CALL_3
0x40047a6	          0x4889de	                            mov rsi, rbx	      1026	intel_display.c	FUNCTION_24	IF_1	CALL_3
0x40047a9	      0xe800000000	                          call 0x40047ae	      1026	intel_display.c	FUNCTION_24	IF_1	CALL_3
0x40047ae	    0x4981fee70300	                          cmp r14, 0x3e7	      1026	intel_display.c	FUNCTION_24	IF_1	CALL_3
0x40047b5	        0x4c0f4ef3	                         cmovle r14, rbx	      1026	intel_display.c	FUNCTION_24	IF_1	CALL_3
0x40047b9	      0xe800000000	                          call 0x40047be	      1026	intel_display.c	FUNCTION_24	IF_1	CALL_3
0x40047be	        0x488b0c24	                    mov rcx, qword [rsp]	       111	ktime.h	FUNCTION_480	IF_1
0x40047c2	          0x4531c9	                            xor r9d, r9d	       112	ktime.h	FUNCTION_480	IF_1
0x40047c5	    0x418b976c0600	           mov edx, dword [r15 + 0x66c] 	      1004	intel_display.c	FUNCTION_23	CALL_1
0x40047cc	          0x4c89ff	                            mov rdi, r15	      1013	intel_display.c	FUNCTION_23	CALL_3
0x40047cf	          0x4839c1	                            cmp rcx, rax	       112	ktime.h	FUNCTION_480	IF_1
0x40047d2	      0xb8ffffffff	                     mov eax, 0xffffffff	       112	ktime.h	FUNCTION_480	IF_1
0x40047d7	        0x410f9cc1	                                setl r9b	       112	ktime.h	FUNCTION_480	IF_1
0x40047db	        0x410f4ec1	                         cmovle eax, r9d	       112	ktime.h	FUNCTION_480	IF_1
0x40047df	          0x4189c5	                           mov r13d, eax	       112	ktime.h	FUNCTION_480	IF_1
0x40047e2	    0x438b84a78006	   mov eax, dword [r15 + r12*4 + 0x680] 	      1004	intel_display.c	FUNCTION_23	CALL_1
0x40047ea	    0x412b87800600	            sub eax, dword [r15 + 0x680]	      1004	intel_display.c	FUNCTION_23	CALL_1
0x40047f1	    0x8dac10000007	          lea ebp, [rax + rdx + 0x70000]	      1004	intel_display.c	FUNCTION_23	CALL_1
0x40047f8	    0x410fb7875a06	          movzx eax, word [r15 + 0x65a] 	      1008	intel_display.c	FUNCTION_23	IF_1	CALL_2
0x4004800	      0xba01000000	                              mov edx, 1	      1013	intel_display.c	FUNCTION_23	CALL_3
0x4004805	            0x89ee	                            mov esi, ebp	      1013	intel_display.c	FUNCTION_23	CALL_3
0x4004807	          0x83e002	                              and eax, 2	      1008	intel_display.c	FUNCTION_23	IF_1	CALL_2
0x400480a	        0x6683f801	                               cmp ax, 1	      1011	intel_display.c	FUNCTION_23	ELSE_1
0x400480e	    0x498b87f80700	           mov rax, qword [r15 + 0x7f8] 	      1013	intel_display.c	FUNCTION_23	CALL_3
0x4004815	            0x19db	                            sbb ebx, ebx	      1011	intel_display.c	FUNCTION_23	ELSE_1
0x4004817	    0x81e300100000	                         and ebx, 0x1000	      1011	intel_display.c	FUNCTION_23	ELSE_1
0x400481d	    0x81c3ff0f0000	                          add ebx, 0xfff	      1011	intel_display.c	FUNCTION_23	ELSE_1
0x4004823	      0xe800000000	                          call 0x4004828	      1013	intel_display.c	FUNCTION_23	CALL_3
0x4004828	      0xbf05000000	                              mov edi, 5	      1014	intel_display.c	FUNCTION_23	CALL_4
0x400482d	            0x21d8	                            and eax, ebx	      1013	intel_display.c	FUNCTION_23	CALL_3
0x400482f	        0x89442408	                mov dword [rsp + 8], eax	      1013	intel_display.c	FUNCTION_23	CALL_3
0x4004833	      0xe800000000	                          call 0x4004838	      1014	intel_display.c	FUNCTION_23	CALL_4
0x4004838	    0x498b87f80700	           mov rax, qword [r15 + 0x7f8] 	      1015	intel_display.c	FUNCTION_23	CALL_5
0x400483f	      0xba01000000	                              mov edx, 1	      1015	intel_display.c	FUNCTION_23	CALL_5
0x4004844	            0x89ee	                            mov esi, ebp	      1015	intel_display.c	FUNCTION_23	CALL_5
0x4004846	          0x4c89ff	                            mov rdi, r15	      1015	intel_display.c	FUNCTION_23	CALL_5
0x4004849	      0xe800000000	                          call 0x400484e	      1015	intel_display.c	FUNCTION_23	CALL_5
0x400484e	            0x21c3	                            and ebx, eax	      1026	intel_display.c	FUNCTION_24	IF_1	CALL_3
0x4004850	        0x3b5c2408	                cmp ebx, dword [rsp + 8]	      1026	intel_display.c	FUNCTION_24	IF_1	CALL_3
0x4004854	           0xf95c0	                                setne al	      1026	intel_display.c	FUNCTION_24	IF_1	CALL_3
0x4004857	        0x3844240f	                cmp byte [rsp + 0xf], al	      1026	intel_display.c	FUNCTION_24	IF_1	CALL_3
0x400485b	     0xf8534ffffff	                           jne 0x4004795	      1026	intel_display.c	FUNCTION_24	IF_1	CALL_3
0x4004861	        0x4883c418	                           add rsp, 0x18	      1029	intel_display.c	FUNCTION_24
0x4004865	              0x5b	                                 pop rbx	      1029	intel_display.c	FUNCTION_24
0x4004866	              0x5d	                                 pop rbp	      1029	intel_display.c	FUNCTION_24
0x4004867	            0x415c	                                 pop r12	      1029	intel_display.c	FUNCTION_24
0x4004869	            0x415d	                                 pop r13	      1029	intel_display.c	FUNCTION_24
0x400486b	            0x415e	                                 pop r14	      1029	intel_display.c	FUNCTION_24
0x400486d	            0x415f	                                 pop r15	      1029	intel_display.c	FUNCTION_24
0x400486f	              0xc3	                                     ret	      1029	intel_display.c	FUNCTION_24
0x4004870	      0x807c241400	                cmp byte [rsp + 0x14], 0	       150	i915_utils.h	FUNCTION_472
0x4004875	    0x48c7c2000000	                              mov rdx, 0	       150	i915_utils.h	FUNCTION_472
0x400487c	    0x48c7c0000000	                              mov rax, 0	       150	i915_utils.h	FUNCTION_472
0x4004883	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      1027	intel_display.c	FUNCTION_24	IF_1	CALL_4
0x4004887	    0x48c7c7000000	                              mov rdi, 0	      1027	intel_display.c	FUNCTION_24	IF_1	CALL_4
0x400488e	        0x480f45d0	                         cmovne rdx, rax	       150	i915_utils.h	FUNCTION_472
0x4004892	        0x4883c418	                           add rsp, 0x18	      1029	intel_display.c	FUNCTION_24
0x4004896	          0x83c641	                           add esi, 0x41	      1027	intel_display.c	FUNCTION_24	IF_1	CALL_4
0x4004899	              0x5b	                                 pop rbx	      1029	intel_display.c	FUNCTION_24
0x400489a	              0x5d	                                 pop rbp	      1029	intel_display.c	FUNCTION_24
0x400489b	            0x415c	                                 pop r12	      1029	intel_display.c	FUNCTION_24
0x400489d	            0x415d	                                 pop r13	      1029	intel_display.c	FUNCTION_24
0x400489f	            0x415e	                                 pop r14	      1029	intel_display.c	FUNCTION_24
0x40048a1	            0x415f	                                 pop r15	      1029	intel_display.c	FUNCTION_24
0x40048a3	      0xe900000000	                           jmp 0x40048a8	      1027	intel_display.c	FUNCTION_24	IF_1	CALL_4
assert_fdi_tx	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,1:functions,0:CALL,9	52
0x4002570	              0x53	                                push rbx	      1093	intel_display.c	FUNCTION_30
0x4002571	    0xf68777060000	          test byte [rdi + 0x677], 0x40 	      1098	intel_display.c	FUNCTION_30	IF_1	CALL_2
0x4002578	            0x89d3	                            mov ebx, edx	      1093	intel_display.c	FUNCTION_30
0x400257a	            0x744c	                            je 0x40025c8	      1098	intel_display.c	FUNCTION_30	IF_1	CALL_2
0x400257c	          0x4863f6	                         movsxd rsi, esi	      1220	intel_drv.h	FUNCTION_432
0x400257f	    0x8b976c060000	           mov edx, dword [rdi + 0x66c] 	      1100	intel_display.c	FUNCTION_30	IF_1	CALL_4
0x4002585	    0x488b8ff80700	           mov rcx, qword [rdi + 0x7f8] 	      1100	intel_display.c	FUNCTION_30	IF_1	CALL_4
0x400258c	    0x488b84f76865	  mov rax, qword [rdi + rsi*8 + 0x6568] 	       998	intel_display.c	FUNCTION_22
0x4002594	    0x488b80c80400	           mov rax, qword [rax + 0x4c8] 	       998	intel_display.c	FUNCTION_22
0x400259b	    0x8b803c020000	           mov eax, dword [rax + 0x23c] 	      1100	intel_display.c	FUNCTION_30	IF_1	CALL_4
0x40025a1	    0x8b8487980600	   mov eax, dword [rdi + rax*4 + 0x698] 	      1100	intel_display.c	FUNCTION_30	IF_1	CALL_4
0x40025a8	    0x2b8798060000	            sub eax, dword [rdi + 0x698]	      1100	intel_display.c	FUNCTION_30	IF_1	CALL_4
0x40025ae	    0x8db410000406	          lea esi, [rax + rdx + 0x60400]	      1100	intel_display.c	FUNCTION_30	IF_1	CALL_4
0x40025b5	      0xba01000000	                              mov edx, 1	      1100	intel_display.c	FUNCTION_30	IF_1	CALL_4
0x40025ba	      0xe800000000	                          call 0x40025bf	      1100	intel_display.c	FUNCTION_30	IF_1	CALL_4
0x40025bf	          0xc1e81f	                           shr eax, 0x1f	      1101	intel_display.c	FUNCTION_30	IF_1
0x40025c2	            0x38d8	                              cmp al, bl	      1106	intel_display.c	FUNCTION_30	CALL_7
0x40025c4	            0x7523	                           jne 0x40025e9	      1106	intel_display.c	FUNCTION_30	CALL_7
0x40025c6	              0x5b	                                 pop rbx	      1109	intel_display.c	FUNCTION_30
0x40025c7	              0xc3	                                     ret	      1109	intel_display.c	FUNCTION_30
0x40025c8	          0xc1e60c	                            shl esi, 0xc	      1103	intel_display.c	FUNCTION_30	ELSE_1	CALL_6
0x40025cb	    0x488b87f80700	           mov rax, qword [rdi + 0x7f8] 	      1103	intel_display.c	FUNCTION_30	ELSE_1	CALL_6
0x40025d2	      0xba01000000	                              mov edx, 1	      1103	intel_display.c	FUNCTION_30	ELSE_1	CALL_6
0x40025d7	    0x81c600010600	                        add esi, 0x60100	      1103	intel_display.c	FUNCTION_30	ELSE_1	CALL_6
0x40025dd	      0xe800000000	                          call 0x40025e2	      1103	intel_display.c	FUNCTION_30	ELSE_1	CALL_6
0x40025e2	          0xc1e81f	                           shr eax, 0x1f	      1104	intel_display.c	FUNCTION_30	ELSE_1
0x40025e5	            0x38d8	                              cmp al, bl	      1106	intel_display.c	FUNCTION_30	CALL_7
0x40025e7	            0x74dd	                            je 0x40025c6	      1106	intel_display.c	FUNCTION_30	CALL_7
0x40025e9	    0x803d00000000	                cmp byte [0x040025f0], 0	      1106	intel_display.c	FUNCTION_30	CALL_7
0x40025f0	            0x752a	                           jne 0x400261c	      1106	intel_display.c	FUNCTION_30	CALL_7
0x40025f2	    0x48c7c6000000	                              mov rsi, 0	       150	i915_utils.h	FUNCTION_472
0x40025f9	    0x48c7c1000000	                              mov rcx, 0	       150	i915_utils.h	FUNCTION_472
0x4002600	            0x84c0	                             test al, al	       150	i915_utils.h	FUNCTION_472
0x4002602	          0x4889f2	                            mov rdx, rsi	       150	i915_utils.h	FUNCTION_472
0x4002605	    0x48c7c7000000	                              mov rdi, 0	      1106	intel_display.c	FUNCTION_30	CALL_7
0x400260c	        0x480f45d1	                         cmovne rdx, rcx	       150	i915_utils.h	FUNCTION_472
0x4002610	            0x84db	                             test bl, bl	       150	i915_utils.h	FUNCTION_472
0x4002612	              0x5b	                                 pop rbx	      1109	intel_display.c	FUNCTION_30
0x4002613	        0x480f45f1	                         cmovne rsi, rcx	       150	i915_utils.h	FUNCTION_472
0x4002617	      0xe900000000	                           jmp 0x400261c	      1106	intel_display.c	FUNCTION_30	CALL_7
0x400261c	    0x48c7c6000000	                              mov rsi, 0	       150	i915_utils.h	FUNCTION_472
0x4002623	    0x48c7c1000000	                              mov rcx, 0	       150	i915_utils.h	FUNCTION_472
0x400262a	            0x84c0	                             test al, al	       150	i915_utils.h	FUNCTION_472
0x400262c	          0x4889f2	                            mov rdx, rsi	       150	i915_utils.h	FUNCTION_472
0x400262f	    0x48c7c7000000	                              mov rdi, 0	      1106	intel_display.c	FUNCTION_30	CALL_7
0x4002636	        0x480f44d1	                          cmove rdx, rcx	       150	i915_utils.h	FUNCTION_472
0x400263a	            0x84db	                             test bl, bl	       150	i915_utils.h	FUNCTION_472
0x400263c	        0x480f44f1	                          cmove rsi, rcx	       150	i915_utils.h	FUNCTION_472
0x4002640	      0xe800000000	                          call 0x4002645	      1106	intel_display.c	FUNCTION_30	CALL_7
0x4002645	             0xf0b	                                     ud2	      1106	intel_display.c	FUNCTION_30	CALL_7
0x4002647	              0x5b	                                 pop rbx	      1109	intel_display.c	FUNCTION_30
0x4002648	              0xc3	                                     ret	      1109	intel_display.c	FUNCTION_30
intel_crtc_get_vblank_counter	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,2	11
0x4017550	          0x488b07	                    mov rax, qword [rdi]	     12121	intel_display.c	FUNCTION_341
0x4017553	    0x8b9098010000	           mov edx, dword [rax + 0x198] 	     12123	intel_display.c	FUNCTION_341	IF_1
0x4017559	            0x85d2	                           test edx, edx	     12123	intel_display.c	FUNCTION_341	IF_1
0x401755b	            0x7416	                            je 0x4017573	     12123	intel_display.c	FUNCTION_341	IF_1
0x401755d	        0x488b5020	            mov rdx, qword [rax + 0x20] 	     12126	intel_display.c	FUNCTION_341	CALL_2
0x4017561	    0x8bb7b0040000	           mov esi, dword [rdi + 0x4b0] 	     12126	intel_display.c	FUNCTION_341	CALL_2
0x4017567	          0x4889c7	                            mov rdi, rax	     12126	intel_display.c	FUNCTION_341	CALL_2
0x401756a	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	     12126	intel_display.c	FUNCTION_341	CALL_2
0x401756e	      0xe900000000	                           jmp 0x4017573	     12126	intel_display.c	FUNCTION_341	CALL_2
0x4017573	      0xe800000000	                          call 0x4017578	     12124	intel_display.c	FUNCTION_341	CALL_1
0x4017578	            0xf3c3	                                     ret	     12127	intel_display.c	FUNCTION_341
vlv_get_cck_clock	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,5	54
0x400c1e0	            0x4156	                                push r14	       178	intel_display.c	FUNCTION_2
0x400c1e2	            0x4155	                                push r13	       178	intel_display.c	FUNCTION_2
0x400c1e4	          0x4189d6	                           mov r14d, edx	       178	intel_display.c	FUNCTION_2
0x400c1e7	            0x4154	                                push r12	       178	intel_display.c	FUNCTION_2
0x400c1e9	              0x55	                                push rbp	       178	intel_display.c	FUNCTION_2
0x400c1ea	    0x488daf404800	                 lea rbp, [rdi + 0x4840]	       182	intel_display.c	FUNCTION_2	CALL_1
0x400c1f1	              0x53	                                push rbx	       178	intel_display.c	FUNCTION_2
0x400c1f2	          0x4989fc	                            mov r12, rdi	       178	intel_display.c	FUNCTION_2
0x400c1f5	            0x89cb	                            mov ebx, ecx	       178	intel_display.c	FUNCTION_2
0x400c1f7	          0x4889ef	                            mov rdi, rbp	       182	intel_display.c	FUNCTION_2	CALL_1
0x400c1fa	          0x4989f5	                            mov r13, rsi	       178	intel_display.c	FUNCTION_2
0x400c1fd	      0xe800000000	                          call 0x400c202	       182	intel_display.c	FUNCTION_2	CALL_1
0x400c202	          0x4c89e7	                            mov rdi, r12	       183	intel_display.c	FUNCTION_2	CALL_2
0x400c205	          0x4489f6	                           mov esi, r14d	       183	intel_display.c	FUNCTION_2	CALL_2
0x400c208	      0xe800000000	                          call 0x400c20d	       183	intel_display.c	FUNCTION_2	CALL_2
0x400c20d	          0x4189c4	                           mov r12d, eax	       183	intel_display.c	FUNCTION_2	CALL_2
0x400c210	          0x4889ef	                            mov rdi, rbp	       184	intel_display.c	FUNCTION_2	CALL_3
0x400c213	          0x4489e5	                           mov ebp, r12d	       186	intel_display.c	FUNCTION_2
0x400c216	    0x4181e4001f00	                        and r12d, 0x1f00	       188	intel_display.c	FUNCTION_2	CALL_4
0x400c21d	          0x83e51f	                           and ebp, 0x1f	       186	intel_display.c	FUNCTION_2
0x400c220	      0xe800000000	                          call 0x400c225	       184	intel_display.c	FUNCTION_2	CALL_3
0x400c225	            0x89e8	                            mov eax, ebp	       188	intel_display.c	FUNCTION_2	CALL_4
0x400c227	          0xc1e008	                              shl eax, 8	       188	intel_display.c	FUNCTION_2	CALL_4
0x400c22a	          0x4139c4	                           cmp r12d, eax	       188	intel_display.c	FUNCTION_2	CALL_4
0x400c22d	            0x752a	                           jne 0x400c259	       188	intel_display.c	FUNCTION_2	CALL_4
0x400c22f	          0x8d7501	                      lea esi, [rbp + 1]	       192	intel_display.c	FUNCTION_2	CALL_5
0x400c232	          0x8d041b	                    lea eax, [rbx + rbx]	       192	intel_display.c	FUNCTION_2	CALL_5
0x400c235	            0x89f2	                            mov edx, esi	       192	intel_display.c	FUNCTION_2	CALL_5
0x400c237	            0xd1fa	                              sar edx, 1	       192	intel_display.c	FUNCTION_2	CALL_5
0x400c239	            0x85c0	                           test eax, eax	       192	intel_display.c	FUNCTION_2	CALL_5
0x400c23b	            0x7e0e	                           jle 0x400c24b	       192	intel_display.c	FUNCTION_2	CALL_5
0x400c23d	             0x1d0	                            add eax, edx	       192	intel_display.c	FUNCTION_2	CALL_5
0x400c23f	              0x99	                                     cdq	       192	intel_display.c	FUNCTION_2	CALL_5
0x400c240	              0x5b	                                 pop rbx	       193	intel_display.c	FUNCTION_2
0x400c241	            0xf7fe	                                idiv esi	       192	intel_display.c	FUNCTION_2	CALL_5
0x400c243	              0x5d	                                 pop rbp	       193	intel_display.c	FUNCTION_2
0x400c244	            0x415c	                                 pop r12	       193	intel_display.c	FUNCTION_2
0x400c246	            0x415d	                                 pop r13	       193	intel_display.c	FUNCTION_2
0x400c248	            0x415e	                                 pop r14	       193	intel_display.c	FUNCTION_2
0x400c24a	              0xc3	                                     ret	       193	intel_display.c	FUNCTION_2
0x400c24b	            0x29d0	                            sub eax, edx	       192	intel_display.c	FUNCTION_2	CALL_5
0x400c24d	              0x99	                                     cdq	       192	intel_display.c	FUNCTION_2	CALL_5
0x400c24e	              0x5b	                                 pop rbx	       193	intel_display.c	FUNCTION_2
0x400c24f	            0xf7fe	                                idiv esi	       192	intel_display.c	FUNCTION_2	CALL_5
0x400c251	              0x5d	                                 pop rbp	       193	intel_display.c	FUNCTION_2
0x400c252	            0x415c	                                 pop r12	       193	intel_display.c	FUNCTION_2
0x400c254	            0x415d	                                 pop r13	       193	intel_display.c	FUNCTION_2
0x400c256	            0x415e	                                 pop r14	       193	intel_display.c	FUNCTION_2
0x400c258	              0xc3	                                     ret	       193	intel_display.c	FUNCTION_2
0x400c259	          0x4c89ee	                            mov rsi, r13	       188	intel_display.c	FUNCTION_2	CALL_4
0x400c25c	    0x48c7c7000000	                              mov rdi, 0	       188	intel_display.c	FUNCTION_2	CALL_4
0x400c263	      0xe800000000	                          call 0x400c268	       188	intel_display.c	FUNCTION_2	CALL_4
0x400c268	             0xf0b	                                     ud2	       188	intel_display.c	FUNCTION_2	CALL_4
0x400c26a	            0xebc3	                           jmp 0x400c22f	       188	intel_display.c	FUNCTION_2	CALL_4
assert_plane	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,4	37
0x4002280	              0x55	                                push rbp	      1226	intel_display.c	FUNCTION_36
0x4002281	            0x89f5	                            mov ebp, esi	      1226	intel_display.c	FUNCTION_36
0x4002283	              0x53	                                push rbx	      1226	intel_display.c	FUNCTION_36
0x4002284	          0x4889fb	                            mov rbx, rdi	      1226	intel_display.c	FUNCTION_36
0x4002287	    0x488b87b80200	           mov rax, qword [rdi + 0x2b8] 	      1227	intel_display.c	FUNCTION_36	CALL_1
0x400228e	      0xe800000000	                          call 0x4002293	      1227	intel_display.c	FUNCTION_36	CALL_1
0x4002293	          0x4038e8	                             cmp al, bpl	      1229	intel_display.c	FUNCTION_36	CALL_2
0x4002296	            0x7503	                           jne 0x400229b	      1229	intel_display.c	FUNCTION_36	CALL_2
0x4002298	              0x5b	                                 pop rbx	      1232	intel_display.c	FUNCTION_36
0x4002299	              0x5d	                                 pop rbp	      1232	intel_display.c	FUNCTION_36
0x400229a	              0xc3	                                     ret	      1232	intel_display.c	FUNCTION_36
0x400229b	    0x803d00000000	                cmp byte [0x040022a2], 0	      1229	intel_display.c	FUNCTION_36	CALL_2
0x40022a2	            0x7530	                           jne 0x40022d4	      1229	intel_display.c	FUNCTION_36	CALL_2
0x40022a4	    0x48c7c6000000	                              mov rsi, 0	       150	i915_utils.h	FUNCTION_472
0x40022ab	    0x48c7c2000000	                              mov rdx, 0	       150	i915_utils.h	FUNCTION_472
0x40022b2	            0x84c0	                             test al, al	       150	i915_utils.h	FUNCTION_472
0x40022b4	          0x4889f1	                            mov rcx, rsi	       150	i915_utils.h	FUNCTION_472
0x40022b7	    0x48c7c7000000	                              mov rdi, 0	      1229	intel_display.c	FUNCTION_36	CALL_2
0x40022be	        0x480f45ca	                         cmovne rcx, rdx	       150	i915_utils.h	FUNCTION_472
0x40022c2	          0x4084ed	                           test bpl, bpl	       150	i915_utils.h	FUNCTION_472
0x40022c5	        0x480f44d6	                          cmove rdx, rsi	       150	i915_utils.h	FUNCTION_472
0x40022c9	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1229	intel_display.c	FUNCTION_36	CALL_2
0x40022cd	              0x5b	                                 pop rbx	      1232	intel_display.c	FUNCTION_36
0x40022ce	              0x5d	                                 pop rbp	      1232	intel_display.c	FUNCTION_36
0x40022cf	      0xe900000000	                           jmp 0x40022d4	      1229	intel_display.c	FUNCTION_36	CALL_2
0x40022d4	    0x48c7c6000000	                              mov rsi, 0	       150	i915_utils.h	FUNCTION_472
0x40022db	            0x84c0	                             test al, al	       150	i915_utils.h	FUNCTION_472
0x40022dd	    0x48c7c2000000	                              mov rdx, 0	       150	i915_utils.h	FUNCTION_472
0x40022e4	          0x4889f1	                            mov rcx, rsi	       150	i915_utils.h	FUNCTION_472
0x40022e7	    0x48c7c7000000	                              mov rdi, 0	      1229	intel_display.c	FUNCTION_36	CALL_2
0x40022ee	        0x480f44ca	                          cmove rcx, rdx	       150	i915_utils.h	FUNCTION_472
0x40022f2	          0x4084ed	                           test bpl, bpl	       150	i915_utils.h	FUNCTION_472
0x40022f5	        0x480f45d6	                         cmovne rdx, rsi	       150	i915_utils.h	FUNCTION_472
0x40022f9	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1229	intel_display.c	FUNCTION_36	CALL_2
0x40022fd	      0xe800000000	                          call 0x4002302	      1229	intel_display.c	FUNCTION_36	CALL_2
0x4002302	             0xf0b	                                     ud2	      1229	intel_display.c	FUNCTION_36	CALL_2
0x4002304	            0xeb92	                           jmp 0x4002298	      1229	intel_display.c	FUNCTION_36	CALL_2
i8xx_crtc_compute_clock	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,4:ELSE,2:functions,0:CALL,9	115
0x400abb0	              0x55	                                push rbp	      7302	intel_display.c	FUNCTION_224
0x400abb1	              0x53	                                push rbx	      7302	intel_display.c	FUNCTION_224
0x400abb2	          0x4889fd	                            mov rbp, rdi	      7302	intel_display.c	FUNCTION_224
0x400abb5	            0x89f0	                            mov eax, esi	      7308	intel_display.c	FUNCTION_224	CALL_2
0x400abb7	          0x4889f3	                            mov rbx, rsi	      7302	intel_display.c	FUNCTION_224
0x400abba	        0x4883ec08	                              sub rsp, 8	      7302	intel_display.c	FUNCTION_224
0x400abbe	          0x488b17	                    mov rdx, qword [rdi]	      7303	intel_display.c	FUNCTION_224
0x400abc1	    0x488dbe880200	                  lea rdi, [rsi + 0x288]	      7308	intel_display.c	FUNCTION_224	CALL_2
0x400abc8	    0x48c786800200	              mov qword [rsi + 0x280], 0	      7308	intel_display.c	FUNCTION_224	CALL_2
0x400abd3	    0x48c786cc0200	              mov qword [rsi + 0x2cc], 0	      7308	intel_display.c	FUNCTION_224	CALL_2
0x400abde	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	      7308	intel_display.c	FUNCTION_224	CALL_2
0x400abe2	            0x29f8	                            sub eax, edi	      7308	intel_display.c	FUNCTION_224	CALL_2
0x400abe4	    0x8d88d4020000	                  lea ecx, [rax + 0x2d4]	      7308	intel_display.c	FUNCTION_224	CALL_2
0x400abea	            0x31c0	                            xor eax, eax	      7308	intel_display.c	FUNCTION_224	CALL_2
0x400abec	          0xc1e903	                              shr ecx, 3	      7308	intel_display.c	FUNCTION_224	CALL_2
0x400abef	          0xf348ab	              rep stosq qword [rdi], rax	      7308	intel_display.c	FUNCTION_224	CALL_2
0x400abf2	    0x8b8644020000	           mov eax, dword [rsi + 0x244] 	      7308	intel_display.c	FUNCTION_224	CALL_2
0x400abf8	            0xa810	                           test al, 0x10	      7311	intel_display.c	FUNCTION_224	IF_1	CALL_3
0x400abfa	     0xf8490000000	                            je 0x400ac90	      7311	intel_display.c	FUNCTION_224	IF_1	CALL_3
0x400ac00	    0x8b0d00000000	            mov ecx, dword [0x0400ac06] 	      6551	intel_display.c	FUNCTION_202	IF_1
0x400ac06	            0x85c9	                           test ecx, ecx	      6551	intel_display.c	FUNCTION_202	IF_1
0x400ac08	     0xf8855010000	                            js 0x400ad63	      6551	intel_display.c	FUNCTION_202	IF_1
0x400ac0e	     0xf8575010000	                           jne 0x400ad89	      7312	intel_display.c	FUNCTION_224	IF_1	IF_2	CALL_4
0x400ac14	    0x80bb4c020000	               cmp byte [rbx + 0x24c], 0	      7324	intel_display.c	FUNCTION_224	IF_4
0x400ac1b	      0xb980bb0000	                         mov ecx, 0xbb80	      7306	intel_display.c	FUNCTION_224
0x400ac20	    0x48c7c7000000	                              mov rdi, 0	      7317	intel_display.c	FUNCTION_224	IF_1
0x400ac27	     0xf8489000000	                            je 0x400acb6	      7324	intel_display.c	FUNCTION_224	IF_4
0x400ac2d	        0x488b6d00	                    mov rbp, qword [rbp]	      7324	intel_display.c	FUNCTION_224	IF_4
0x400ac31	          0x4889de	                            mov rsi, rbx	      7068	intel_display.c	FUNCTION_217	CALL_2
0x400ac34	          0x4889ef	                            mov rdi, rbp	      7068	intel_display.c	FUNCTION_217	CALL_2
0x400ac37	      0xe814efffff	call sym.i9xx_update_pll_dividers.isra.62.constprop.157	      7068	intel_display.c	FUNCTION_217	CALL_2
0x400ac3c	    0x8b9344020000	           mov edx, dword [rbx + 0x244] 	      7068	intel_display.c	FUNCTION_217	CALL_2
0x400ac42	            0x89d6	                            mov esi, edx	      7072	intel_display.c	FUNCTION_217	IF_1	CALL_3
0x400ac44	          0x83e610	                           and esi, 0x10	      7072	intel_display.c	FUNCTION_217	IF_1	CALL_3
0x400ac47	     0xf8499000000	                            je 0x400ace6	      7072	intel_display.c	FUNCTION_217	IF_1	CALL_3
0x400ac4d	    0x8b835c020000	           mov eax, dword [rbx + 0x25c] 	      7073	intel_display.c	FUNCTION_217	IF_1
0x400ac53	          0x8d48ff	                      lea ecx, [rax - 1]	      7073	intel_display.c	FUNCTION_217	IF_1
0x400ac56	      0xb800000100	                        mov eax, 0x10000	      7073	intel_display.c	FUNCTION_217	IF_1
0x400ac5b	            0xd3e0	                             shl eax, cl	      7073	intel_display.c	FUNCTION_217	IF_1
0x400ac5d	       0xd00000010	                      or eax, 0x10000000	      7073	intel_display.c	FUNCTION_217	IF_1
0x400ac62	    0xf68564060000	              test byte [rbp + 0x664], 2	      7083	intel_display.c	FUNCTION_217	IF_4	CALL_4
0x400ac69	            0x7509	                           jne 0x400ac74	      7083	intel_display.c	FUNCTION_217	IF_4	CALL_4
0x400ac6b	          0x83e204	                              and edx, 4	      7083	intel_display.c	FUNCTION_217	IF_4	CALL_4
0x400ac6e	     0xf85c1000000	                           jne 0x400ad35	      7083	intel_display.c	FUNCTION_217	IF_4	CALL_4
0x400ac74	    0x8b1500000000	            mov edx, dword [0x0400ac7a] 	      6551	intel_display.c	FUNCTION_202	IF_1
0x400ac7a	            0x85d2	                           test edx, edx	      6551	intel_display.c	FUNCTION_202	IF_1
0x400ac7c	     0xf88ca000000	                            js 0x400ad4c	      6551	intel_display.c	FUNCTION_202	IF_1
0x400ac82	     0xf8494000000	                            je 0x400ad1c	      7087	intel_display.c	FUNCTION_217	IF_5	CALL_6
0x400ac88	          0x80cc60	                             or ah, 0x60	      7089	intel_display.c	FUNCTION_217	IF_5
0x400ac8b	      0xe98c000000	                           jmp 0x400ad1c	      7089	intel_display.c	FUNCTION_217	IF_5
0x400ac90	            0xa804	                              test al, 4	      7306	intel_display.c	FUNCTION_224
0x400ac92	    0x48c7c7000000	                              mov rdi, 0	      7306	intel_display.c	FUNCTION_224
0x400ac99	    0x48c7c0000000	                              mov rax, 0	      7306	intel_display.c	FUNCTION_224
0x400aca0	      0xb980bb0000	                         mov ecx, 0xbb80	      7306	intel_display.c	FUNCTION_224
0x400aca5	        0x480f44f8	                          cmove rdi, rax	      7306	intel_display.c	FUNCTION_224
0x400aca9	    0x80bb4c020000	               cmp byte [rbx + 0x24c], 0	      7324	intel_display.c	FUNCTION_224	IF_4
0x400acb0	     0xf8577ffffff	                           jne 0x400ac2d	      7324	intel_display.c	FUNCTION_224	IF_4
0x400acb6	    0x8b930c030000	           mov edx, dword [rbx + 0x30c] 	      7325	intel_display.c	FUNCTION_224	IF_4	CALL_7
0x400acbc	    0x4c8d83500200	                   lea r8, [rbx + 0x250]	      7325	intel_display.c	FUNCTION_224	IF_4	CALL_7
0x400acc3	          0x4889de	                            mov rsi, rbx	      7325	intel_display.c	FUNCTION_224	IF_4	CALL_7
0x400acc6	      0xe835e9ffff	call sym.i9xx_find_best_dpll.constprop.151	      7325	intel_display.c	FUNCTION_224	IF_4	CALL_7
0x400accb	            0x84c0	                             test al, al	      7324	intel_display.c	FUNCTION_224	IF_4
0x400accd	     0xf855affffff	                           jne 0x400ac2d	      7324	intel_display.c	FUNCTION_224	IF_4
0x400acd3	    0x48c7c7000000	                              mov rdi, 0	      7327	intel_display.c	FUNCTION_224	IF_4	CALL_8
0x400acda	      0xe800000000	                          call 0x400acdf	      7327	intel_display.c	FUNCTION_224	IF_4	CALL_8
0x400acdf	      0xb8eaffffff	                     mov eax, 0xffffffea	      7328	intel_display.c	FUNCTION_224	IF_4
0x400ace4	            0xeb43	                           jmp 0x400ad29	      7328	intel_display.c	FUNCTION_224	IF_4
0x400ace6	    0x8b8b5c020000	           mov ecx, dword [rbx + 0x25c] 	      7075	intel_display.c	FUNCTION_217	ELSE_1	IF_2
0x400acec	      0xb800002010	                     mov eax, 0x10200000	      7076	intel_display.c	FUNCTION_217	ELSE_1	IF_2
0x400acf1	          0x83f902	                              cmp ecx, 2	      7075	intel_display.c	FUNCTION_217	ELSE_1	IF_2
0x400acf4	            0x740b	                            je 0x400ad01	      7075	intel_display.c	FUNCTION_217	ELSE_1	IF_2
0x400acf6	          0x8d41fe	                      lea eax, [rcx - 2]	      7078	intel_display.c	FUNCTION_217	ELSE_1	ELSE_2
0x400acf9	          0xc1e010	                           shl eax, 0x10	      7078	intel_display.c	FUNCTION_217	ELSE_1	ELSE_2
0x400acfc	       0xd00000010	                      or eax, 0x10000000	      7078	intel_display.c	FUNCTION_217	ELSE_1	ELSE_2
0x400ad01	            0x89c1	                            mov ecx, eax	      7080	intel_display.c	FUNCTION_217	ELSE_1	IF_3
0x400ad03	    0x81c900008000	                        or ecx, 0x800000	      7080	intel_display.c	FUNCTION_217	ELSE_1	IF_3
0x400ad09	    0x83bb60020000	              cmp dword [rbx + 0x260], 4	      7080	intel_display.c	FUNCTION_217	ELSE_1	IF_3
0x400ad10	           0xf44c1	                          cmove eax, ecx	      7080	intel_display.c	FUNCTION_217	ELSE_1	IF_3
0x400ad13	    0xf68564060000	              test byte [rbp + 0x664], 2	      7083	intel_display.c	FUNCTION_217	IF_4	CALL_4
0x400ad1a	            0x7414	                            je 0x400ad30	      7083	intel_display.c	FUNCTION_217	IF_4	CALL_4
0x400ad1c	       0xd00000080	                      or eax, 0x80000000	      7094	intel_display.c	FUNCTION_217	ELSE_3
0x400ad21	    0x898380020000	            mov dword [rbx + 0x280], eax	      7094	intel_display.c	FUNCTION_217	ELSE_3
0x400ad27	            0x31c0	                            xor eax, eax	      7333	intel_display.c	FUNCTION_224
0x400ad29	        0x4883c408	                              add rsp, 8	      7334	intel_display.c	FUNCTION_224
0x400ad2d	              0x5b	                                 pop rbx	      7334	intel_display.c	FUNCTION_224
0x400ad2e	              0x5d	                                 pop rbp	      7334	intel_display.c	FUNCTION_224
0x400ad2f	              0xc3	                                     ret	      7334	intel_display.c	FUNCTION_224
0x400ad30	          0x83e204	                              and edx, 4	      7083	intel_display.c	FUNCTION_217	IF_4	CALL_4
0x400ad33	            0x74e7	                            je 0x400ad1c	      7083	intel_display.c	FUNCTION_217	IF_4	CALL_4
0x400ad35	       0xd00000040	                      or eax, 0x40000000	      7085	intel_display.c	FUNCTION_217	IF_4
0x400ad3a	            0x85f6	                           test esi, esi	      7087	intel_display.c	FUNCTION_217	IF_5	CALL_6
0x400ad3c	            0x74de	                            je 0x400ad1c	      7087	intel_display.c	FUNCTION_217	IF_5	CALL_6
0x400ad3e	    0x8b1500000000	            mov edx, dword [0x0400ad44] 	      6551	intel_display.c	FUNCTION_202	IF_1
0x400ad44	            0x85d2	                           test edx, edx	      6551	intel_display.c	FUNCTION_202	IF_1
0x400ad46	     0xf8936ffffff	                           jns 0x400ac82	      6551	intel_display.c	FUNCTION_202	IF_1
0x400ad4c	    0xf685f84c0000	         test byte [rbp + 0x4cf8], 0x10 	      6554	intel_display.c	FUNCTION_202
0x400ad53	            0x74c7	                            je 0x400ad1c	      6554	intel_display.c	FUNCTION_202
0x400ad55	    0xf68500560000	            test byte [rbp + 0x5600], 2 	      6554	intel_display.c	FUNCTION_202
0x400ad5c	            0x75be	                           jne 0x400ad1c	      6554	intel_display.c	FUNCTION_202
0x400ad5e	      0xe925ffffff	                           jmp 0x400ac88	      6554	intel_display.c	FUNCTION_202
0x400ad63	    0xf682f84c0000	         test byte [rdx + 0x4cf8], 0x10 	      6554	intel_display.c	FUNCTION_202
0x400ad6a	      0xb980bb0000	                         mov ecx, 0xbb80	      7306	intel_display.c	FUNCTION_224
0x400ad6f	    0x48c7c7000000	                              mov rdi, 0	      7317	intel_display.c	FUNCTION_224	IF_1
0x400ad76	     0xf842dffffff	                            je 0x400aca9	      6554	intel_display.c	FUNCTION_202
0x400ad7c	    0xf68200560000	            test byte [rdx + 0x5600], 2 	      6554	intel_display.c	FUNCTION_202
0x400ad83	     0xf8520ffffff	                           jne 0x400aca9	      6554	intel_display.c	FUNCTION_202
0x400ad89	    0x8b8afc4c0000	          mov ecx, dword [rdx + 0x4cfc] 	      7313	intel_display.c	FUNCTION_224	IF_1	IF_2
0x400ad8f	      0xbf04000000	                              mov edi, 4	      7314	intel_display.c	FUNCTION_224	IF_1	IF_2	CALL_5
0x400ad94	    0x48c7c6000000	                              mov rsi, 0	      7314	intel_display.c	FUNCTION_224	IF_1	IF_2	CALL_5
0x400ad9b	            0x89ca	                            mov edx, ecx	      7314	intel_display.c	FUNCTION_224	IF_1	IF_2	CALL_5
0x400ad9d	        0x894c2404	                mov dword [rsp + 4], ecx	      7314	intel_display.c	FUNCTION_224	IF_1	IF_2	CALL_5
0x400ada1	      0xe800000000	                          call 0x400ada6	      7314	intel_display.c	FUNCTION_224	IF_1	IF_2	CALL_5
0x400ada6	    0x48c7c7000000	                              mov rdi, 0	      7317	intel_display.c	FUNCTION_224	IF_1
0x400adad	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      7317	intel_display.c	FUNCTION_224	IF_1
0x400adb1	      0xe9f3feffff	                           jmp 0x400aca9	      7317	intel_display.c	FUNCTION_224	IF_1
i9xx_check_plane_surface	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,4:ELSE,2:functions,0:CALL,8	72
0x400f300	              0x55	                                push rbp	      3241	intel_display.c	FUNCTION_103
0x400f301	              0x53	                                push rbx	      3241	intel_display.c	FUNCTION_103
0x400f302	          0x4889fb	                            mov rbx, rdi	      3241	intel_display.c	FUNCTION_103
0x400f305	        0x4883ec10	                           sub rsp, 0x10	      3241	intel_display.c	FUNCTION_103
0x400f309	         0xfbf5756	           movsx edx, word [rdi + 0x56] 	      3244	intel_display.c	FUNCTION_103
0x400f30d	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	      2218	intel_display.c	FUNCTION_79	CALL_1
0x400f311	    0x65488b042528	                mov rax, qword gs:[0x28]	      3241	intel_display.c	FUNCTION_103
0x400f31a	      0x4889442408	                mov qword [rsp + 8], rax	      3241	intel_display.c	FUNCTION_103
0x400f31f	            0x31c0	                            xor eax, eax	      3241	intel_display.c	FUNCTION_103
0x400f321	          0x488b07	                    mov rax, qword [rdi]	      3243	intel_display.c	FUNCTION_103	CALL_1
0x400f324	        0xf647400a	            test byte [rdi + 0x40], 0xa 	      2221	intel_display.c	FUNCTION_79	IF_1	CALL_2
0x400f328	          0x488b28	                    mov rbp, qword [rax]	      3243	intel_display.c	FUNCTION_103	CALL_1
0x400f32b	         0xfbf475a	           movsx eax, word [rdi + 0x5a] 	      3245	intel_display.c	FUNCTION_103
0x400f32f	          0x891424	                    mov dword [rsp], edx	      3244	intel_display.c	FUNCTION_103
0x400f332	        0x89442404	                mov dword [rsp + 4], eax	      3245	intel_display.c	FUNCTION_103
0x400f336	            0x747f	                            je 0x400f3b7	      2221	intel_display.c	FUNCTION_79	IF_1	CALL_2
0x400f338	     0x38104010000	            add eax, dword [rcx + 0x104]	      2223	intel_display.c	FUNCTION_79	IF_1
0x400f33e	     0x39100010000	            add edx, dword [rcx + 0x100]	      2222	intel_display.c	FUNCTION_79	IF_1
0x400f344	        0x89442404	                mov dword [rsp + 4], eax	      2223	intel_display.c	FUNCTION_79	IF_1
0x400f348	            0x31c0	                            xor eax, eax	      3254	intel_display.c	FUNCTION_103	ELSE_1
0x400f34a	    0x80bd5c060000	               cmp byte [rbp + 0x65c], 3	      3250	intel_display.c	FUNCTION_103	IF_1	CALL_3
0x400f351	          0x891424	                    mov dword [rsp], edx	      2222	intel_display.c	FUNCTION_79	IF_1
0x400f354	            0x777f	                            ja 0x400f3d5	      3250	intel_display.c	FUNCTION_103	IF_1	CALL_3
0x400f356	    0xf78564060000	     test dword [rbp + 0x664], 0x180000 	      3257	intel_display.c	FUNCTION_103	ELSE_1	IF_2	CALL_6
0x400f360	            0x7523	                           jne 0x400f385	      3257	intel_display.c	FUNCTION_103	ELSE_1	IF_2	CALL_6
0x400f362	          0x8b535c	            mov edx, dword [rbx + 0x5c] 	      3259	intel_display.c	FUNCTION_103	ELSE_1	IF_2	CALL_7
0x400f365	          0x2b5354	             sub edx, dword [rbx + 0x54]	      3259	intel_display.c	FUNCTION_103	ELSE_1	IF_2	CALL_7
0x400f368	          0x8b4b40	            mov ecx, dword [rbx + 0x40] 	      3258	intel_display.c	FUNCTION_103	ELSE_1	IF_2
0x400f36b	          0xc1fa10	                           sar edx, 0x10	      3259	intel_display.c	FUNCTION_103	ELSE_1	IF_2	CALL_7
0x400f36e	          0xf6c104	                              test cl, 4	      3262	intel_display.c	FUNCTION_103	ELSE_1	IF_2	IF_3
0x400f371	            0x7579	                           jne 0x400f3ec	      3262	intel_display.c	FUNCTION_103	ELSE_1	IF_2	IF_3
0x400f373	          0x83e110	                           and ecx, 0x10	      3265	intel_display.c	FUNCTION_103	ELSE_1	IF_2	ELSE_2	IF_4
0x400f376	            0x740d	                            je 0x400f385	      3265	intel_display.c	FUNCTION_103	ELSE_1	IF_2	ELSE_2	IF_4
0x400f378	          0x8b0c24	                    mov ecx, dword [rsp]	      3266	intel_display.c	FUNCTION_103	ELSE_1	IF_2	ELSE_2	IF_4
0x400f37b	        0x8d4c0aff	                lea ecx, [rdx + rcx - 1]	      3266	intel_display.c	FUNCTION_103	ELSE_1	IF_2	ELSE_2	IF_4
0x400f37f	        0x8b542404	                mov edx, dword [rsp + 4]	      3266	intel_display.c	FUNCTION_103	ELSE_1	IF_2	ELSE_2	IF_4
0x400f383	            0xeb07	                           jmp 0x400f38c	      3266	intel_display.c	FUNCTION_103	ELSE_1	IF_2	ELSE_2	IF_4
0x400f385	          0x8b0c24	                    mov ecx, dword [rsp]	      3266	intel_display.c	FUNCTION_103	ELSE_1	IF_2	ELSE_2	IF_4
0x400f388	        0x8b542404	                mov edx, dword [rsp + 4]	      3266	intel_display.c	FUNCTION_103	ELSE_1	IF_2	ELSE_2	IF_4
0x400f38c	    0x898398000000	             mov dword [rbx + 0x98], eax	      3270	intel_display.c	FUNCTION_103
0x400f392	            0x31c0	                            xor eax, eax	      3275	intel_display.c	FUNCTION_103
0x400f394	    0x898b9c000000	             mov dword [rbx + 0x9c], ecx	      3271	intel_display.c	FUNCTION_103
0x400f39a	      0x488b742408	                mov rsi, qword [rsp + 8]	      3275	intel_display.c	FUNCTION_103
0x400f39f	    0x654833342528	                xor rsi, qword gs:[0x28]	      3275	intel_display.c	FUNCTION_103
0x400f3a8	    0x8993a0000000	             mov dword [rbx + 0xa0], edx	      3272	intel_display.c	FUNCTION_103
0x400f3ae	            0x7556	                           jne 0x400f406	      3275	intel_display.c	FUNCTION_103
0x400f3b0	        0x4883c410	                           add rsp, 0x10	      3275	intel_display.c	FUNCTION_103
0x400f3b4	              0x5b	                                 pop rbx	      3275	intel_display.c	FUNCTION_103
0x400f3b5	              0x5d	                                 pop rbp	      3275	intel_display.c	FUNCTION_103
0x400f3b6	              0xc3	                                     ret	      3275	intel_display.c	FUNCTION_103
0x400f3b7	     0x381f4000000	             add eax, dword [rcx + 0xf4]	      2226	intel_display.c	FUNCTION_79	ELSE_1
0x400f3bd	     0x391f0000000	             add edx, dword [rcx + 0xf0]	      2225	intel_display.c	FUNCTION_79	ELSE_1
0x400f3c3	        0x89442404	                mov dword [rsp + 4], eax	      2226	intel_display.c	FUNCTION_79	ELSE_1
0x400f3c7	            0x31c0	                            xor eax, eax	      3254	intel_display.c	FUNCTION_103	ELSE_1
0x400f3c9	    0x80bd5c060000	               cmp byte [rbp + 0x65c], 3	      3250	intel_display.c	FUNCTION_103	IF_1	CALL_3
0x400f3d0	          0x891424	                    mov dword [rsp], edx	      2225	intel_display.c	FUNCTION_79	ELSE_1
0x400f3d3	            0x7681	                           jbe 0x400f356	      3250	intel_display.c	FUNCTION_103	IF_1	CALL_3
0x400f3d5	      0x488d742404	                      lea rsi, [rsp + 4]	      3251	intel_display.c	FUNCTION_103	IF_1	CALL_4
0x400f3da	            0x31c9	                            xor ecx, ecx	      3251	intel_display.c	FUNCTION_103	IF_1	CALL_4
0x400f3dc	          0x4889da	                            mov rdx, rbx	      3251	intel_display.c	FUNCTION_103	IF_1	CALL_4
0x400f3df	          0x4889e7	                            mov rdi, rsp	      3251	intel_display.c	FUNCTION_103	IF_1	CALL_4
0x400f3e2	      0xe800000000	                          call 0x400f3e7	      3251	intel_display.c	FUNCTION_103	IF_1	CALL_4
0x400f3e7	      0xe96affffff	                           jmp 0x400f356	      3251	intel_display.c	FUNCTION_103	IF_1	CALL_4
0x400f3ec	          0x8b0c24	                    mov ecx, dword [rsp]	      3263	intel_display.c	FUNCTION_103	ELSE_1	IF_2	IF_3
0x400f3ef	        0x8b742404	                mov esi, dword [rsp + 4]	      3264	intel_display.c	FUNCTION_103	ELSE_1	IF_2	IF_3
0x400f3f3	        0x8d4c0aff	                lea ecx, [rdx + rcx - 1]	      3263	intel_display.c	FUNCTION_103	ELSE_1	IF_2	IF_3
0x400f3f7	          0x8b5360	            mov edx, dword [rbx + 0x60] 	      3264	intel_display.c	FUNCTION_103	ELSE_1	IF_2	IF_3
0x400f3fa	          0x2b5358	             sub edx, dword [rbx + 0x58]	      3264	intel_display.c	FUNCTION_103	ELSE_1	IF_2	IF_3
0x400f3fd	          0xc1fa10	                           sar edx, 0x10	      3264	intel_display.c	FUNCTION_103	ELSE_1	IF_2	IF_3
0x400f400	        0x8d5432ff	                lea edx, [rdx + rsi - 1]	      3264	intel_display.c	FUNCTION_103	ELSE_1	IF_2	IF_3
0x400f404	            0xeb86	                           jmp 0x400f38c	      3264	intel_display.c	FUNCTION_103	ELSE_1	IF_2	IF_3
0x400f406	      0xe800000000	                          call 0x400f40b	      3275	intel_display.c	FUNCTION_103
intel_cpu_transcoder_set_m_n	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,2:ELSE,1:functions,0:CALL,31	148
0x4000690	            0x4156	                                push r14	      6639	intel_display.c	FUNCTION_208
0x4000692	            0x4155	                                push r13	      6639	intel_display.c	FUNCTION_208
0x4000694	            0x4154	                                push r12	      6639	intel_display.c	FUNCTION_208
0x4000696	              0x55	                                push rbp	      6639	intel_display.c	FUNCTION_208
0x4000697	          0x4989fc	                            mov r12, rdi	      6639	intel_display.c	FUNCTION_208
0x400069a	              0x53	                                push rbx	      6639	intel_display.c	FUNCTION_208
0x400069b	          0x488b1f	                    mov rbx, qword [rdi]	      6640	intel_display.c	FUNCTION_208	CALL_1
0x400069e	          0x4889f5	                            mov rbp, rsi	      6639	intel_display.c	FUNCTION_208
0x40006a1	    0x80bb5c060000	               cmp byte [rbx + 0x65c], 4	      6644	intel_display.c	FUNCTION_208	IF_1	CALL_2
0x40006a8	     0xf8615010000	                           jbe 0x40007c3	      6644	intel_display.c	FUNCTION_208	IF_1	CALL_2
0x40006ae	            0x8b06	                    mov eax, dword [rsi]	      6645	intel_display.c	FUNCTION_208	IF_1	CALL_5
0x40006b0	          0x4989d6	                            mov r14, rdx	      6645	intel_display.c	FUNCTION_208	IF_1	CALL_5
0x40006b3	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	      6645	intel_display.c	FUNCTION_208	IF_1	CALL_5
0x40006b9	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	      6645	intel_display.c	FUNCTION_208	IF_1	CALL_5
0x40006c0	          0x8d50ff	                      lea edx, [rax - 1]	      6645	intel_display.c	FUNCTION_208	IF_1	CALL_5
0x40006c3	    0x488b87c80400	           mov rax, qword [rdi + 0x4c8] 	      6642	intel_display.c	FUNCTION_208
0x40006ca	          0x4889df	                            mov rdi, rbx	      6645	intel_display.c	FUNCTION_208	IF_1	CALL_5
0x40006cd	          0xc1e219	                           shl edx, 0x19	      6645	intel_display.c	FUNCTION_208	IF_1	CALL_5
0x40006d0	           0xb5604	                 or edx, dword [rsi + 4]	      6645	intel_display.c	FUNCTION_208	IF_1	CALL_5
0x40006d3	    0x8b803c020000	           mov eax, dword [rax + 0x23c] 	      6645	intel_display.c	FUNCTION_208	IF_1	CALL_5
0x40006d9	        0x4c8d2c83	                  lea r13, [rbx + rax*4]	      6645	intel_display.c	FUNCTION_208	IF_1	CALL_5
0x40006dd	    0x418b85980600	           mov eax, dword [r13 + 0x698] 	      6645	intel_display.c	FUNCTION_208	IF_1	CALL_5
0x40006e4	    0x2b8398060000	            sub eax, dword [rbx + 0x698]	      6645	intel_display.c	FUNCTION_208	IF_1	CALL_5
0x40006ea	    0x8db408300006	          lea esi, [rax + rcx + 0x60030]	      6645	intel_display.c	FUNCTION_208	IF_1	CALL_5
0x40006f1	      0xb901000000	                              mov ecx, 1	      6645	intel_display.c	FUNCTION_208	IF_1	CALL_5
0x40006f6	      0xe800000000	                          call 0x40006fb	      6645	intel_display.c	FUNCTION_208	IF_1	CALL_5
0x40006fb	    0x418b85980600	           mov eax, dword [r13 + 0x698] 	      6646	intel_display.c	FUNCTION_208	IF_1	CALL_7
0x4000702	    0x2b8398060000	            sub eax, dword [rbx + 0x698]	      6646	intel_display.c	FUNCTION_208	IF_1	CALL_7
0x4000708	          0x4889df	                            mov rdi, rbx	      6646	intel_display.c	FUNCTION_208	IF_1	CALL_7
0x400070b	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	      6646	intel_display.c	FUNCTION_208	IF_1	CALL_7
0x4000711	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	      6646	intel_display.c	FUNCTION_208	IF_1	CALL_7
0x4000718	          0x8b5508	                mov edx, dword [rbp + 8]	      6646	intel_display.c	FUNCTION_208	IF_1	CALL_7
0x400071b	    0x8db408340006	          lea esi, [rax + rcx + 0x60034]	      6646	intel_display.c	FUNCTION_208	IF_1	CALL_7
0x4000722	      0xb901000000	                              mov ecx, 1	      6646	intel_display.c	FUNCTION_208	IF_1	CALL_7
0x4000727	      0xe800000000	                          call 0x400072c	      6646	intel_display.c	FUNCTION_208	IF_1	CALL_7
0x400072c	    0x418b85980600	           mov eax, dword [r13 + 0x698] 	      6647	intel_display.c	FUNCTION_208	IF_1	CALL_9
0x4000733	    0x2b8398060000	            sub eax, dword [rbx + 0x698]	      6647	intel_display.c	FUNCTION_208	IF_1	CALL_9
0x4000739	          0x4889df	                            mov rdi, rbx	      6647	intel_display.c	FUNCTION_208	IF_1	CALL_9
0x400073c	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	      6647	intel_display.c	FUNCTION_208	IF_1	CALL_9
0x4000742	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	      6647	intel_display.c	FUNCTION_208	IF_1	CALL_9
0x4000749	          0x8b550c	              mov edx, dword [rbp + 0xc]	      6647	intel_display.c	FUNCTION_208	IF_1	CALL_9
0x400074c	    0x8db408400006	          lea esi, [rax + rcx + 0x60040]	      6647	intel_display.c	FUNCTION_208	IF_1	CALL_9
0x4000753	      0xb901000000	                              mov ecx, 1	      6647	intel_display.c	FUNCTION_208	IF_1	CALL_9
0x4000758	      0xe800000000	                          call 0x400075d	      6647	intel_display.c	FUNCTION_208	IF_1	CALL_9
0x400075d	    0x418b85980600	           mov eax, dword [r13 + 0x698] 	      6648	intel_display.c	FUNCTION_208	IF_1	CALL_11
0x4000764	    0x2b8398060000	            sub eax, dword [rbx + 0x698]	      6648	intel_display.c	FUNCTION_208	IF_1	CALL_11
0x400076a	          0x4889df	                            mov rdi, rbx	      6648	intel_display.c	FUNCTION_208	IF_1	CALL_11
0x400076d	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	      6648	intel_display.c	FUNCTION_208	IF_1	CALL_11
0x4000773	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	      6648	intel_display.c	FUNCTION_208	IF_1	CALL_11
0x400077a	          0x8b5510	            mov edx, dword [rbp + 0x10] 	      6648	intel_display.c	FUNCTION_208	IF_1	CALL_11
0x400077d	    0x8db408440006	          lea esi, [rax + rcx + 0x60044]	      6648	intel_display.c	FUNCTION_208	IF_1	CALL_11
0x4000784	      0xb901000000	                              mov ecx, 1	      6648	intel_display.c	FUNCTION_208	IF_1	CALL_11
0x4000789	      0xe800000000	                          call 0x400078e	      6648	intel_display.c	FUNCTION_208	IF_1	CALL_11
0x400078e	          0x4d85f6	                           test r14, r14	      6653	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_12
0x4000791	            0x7427	                            je 0x40007ba	      6653	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_12
0x4000793	    0xf68366060000	          test byte [rbx + 0x666], 0x20 	      6653	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_12
0x400079a	            0x7509	                           jne 0x40007a5	      6653	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_12
0x400079c	    0x80bb5c060000	               cmp byte [rbx + 0x65c], 7	      6653	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_12
0x40007a3	            0x7715	                            ja 0x40007ba	      6653	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_12
0x40007a5	    0x498b8424c804	           mov rax, qword [r12 + 0x4c8] 	      6654	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_13
0x40007ad	    0x80b808030000	               cmp byte [rax + 0x308], 0	      6654	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_13
0x40007b4	     0xf85a2000000	                           jne 0x400085c	      6654	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_13
0x40007ba	              0x5b	                                 pop rbx	      6667	intel_display.c	FUNCTION_208
0x40007bb	              0x5d	                                 pop rbp	      6667	intel_display.c	FUNCTION_208
0x40007bc	            0x415c	                                 pop r12	      6667	intel_display.c	FUNCTION_208
0x40007be	            0x415d	                                 pop r13	      6667	intel_display.c	FUNCTION_208
0x40007c0	            0x415e	                                 pop r14	      6667	intel_display.c	FUNCTION_208
0x40007c2	              0xc3	                                     ret	      6667	intel_display.c	FUNCTION_208
0x40007c3	            0x8b3e	                    mov edi, dword [rsi]	      6662	intel_display.c	FUNCTION_208	ELSE_1	CALL_25
0x40007c5	    0x458ba424b004	          mov r12d, dword [r12 + 0x4b0] 	      6662	intel_display.c	FUNCTION_208	ELSE_1	CALL_25
0x40007cd	      0xb901000000	                              mov ecx, 1	      6662	intel_display.c	FUNCTION_208	ELSE_1	CALL_25
0x40007d2	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      6662	intel_display.c	FUNCTION_208	ELSE_1	CALL_25
0x40007d9	          0x8d57ff	                      lea edx, [rdi - 1]	      6662	intel_display.c	FUNCTION_208	ELSE_1	CALL_25
0x40007dc	        0x41c1e40c	                           shl r12d, 0xc	      6662	intel_display.c	FUNCTION_208	ELSE_1	CALL_25
0x40007e0	          0x4889df	                            mov rdi, rbx	      6662	intel_display.c	FUNCTION_208	ELSE_1	CALL_25
0x40007e3	          0xc1e219	                           shl edx, 0x19	      6662	intel_display.c	FUNCTION_208	ELSE_1	CALL_25
0x40007e6	           0xb5604	                 or edx, dword [rsi + 4]	      6662	intel_display.c	FUNCTION_208	ELSE_1	CALL_25
0x40007e9	    0x418db4245000	                lea esi, [r12 + 0x70050]	      6662	intel_display.c	FUNCTION_208	ELSE_1	CALL_25
0x40007f1	      0xe800000000	                          call 0x40007f6	      6662	intel_display.c	FUNCTION_208	ELSE_1	CALL_25
0x40007f6	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      6663	intel_display.c	FUNCTION_208	ELSE_1	CALL_27
0x40007fd	          0x8b5508	                mov edx, dword [rbp + 8]	      6663	intel_display.c	FUNCTION_208	ELSE_1	CALL_27
0x4000800	    0x418db4245400	                lea esi, [r12 + 0x70054]	      6663	intel_display.c	FUNCTION_208	ELSE_1	CALL_27
0x4000808	          0x4889df	                            mov rdi, rbx	      6663	intel_display.c	FUNCTION_208	ELSE_1	CALL_27
0x400080b	      0xb901000000	                              mov ecx, 1	      6663	intel_display.c	FUNCTION_208	ELSE_1	CALL_27
0x4000810	      0xe800000000	                          call 0x4000815	      6663	intel_display.c	FUNCTION_208	ELSE_1	CALL_27
0x4000815	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      6664	intel_display.c	FUNCTION_208	ELSE_1	CALL_29
0x400081c	          0x8b550c	              mov edx, dword [rbp + 0xc]	      6664	intel_display.c	FUNCTION_208	ELSE_1	CALL_29
0x400081f	    0x418db4246000	                lea esi, [r12 + 0x70060]	      6664	intel_display.c	FUNCTION_208	ELSE_1	CALL_29
0x4000827	          0x4889df	                            mov rdi, rbx	      6664	intel_display.c	FUNCTION_208	ELSE_1	CALL_29
0x400082a	      0xb901000000	                              mov ecx, 1	      6664	intel_display.c	FUNCTION_208	ELSE_1	CALL_29
0x400082f	      0xe800000000	                          call 0x4000834	      6664	intel_display.c	FUNCTION_208	ELSE_1	CALL_29
0x4000834	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      6665	intel_display.c	FUNCTION_208	ELSE_1	CALL_31
0x400083b	          0x8b5510	            mov edx, dword [rbp + 0x10] 	      6665	intel_display.c	FUNCTION_208	ELSE_1	CALL_31
0x400083e	    0x418db4246400	                lea esi, [r12 + 0x70064]	      6665	intel_display.c	FUNCTION_208	ELSE_1	CALL_31
0x4000846	          0x4889df	                            mov rdi, rbx	      6665	intel_display.c	FUNCTION_208	ELSE_1	CALL_31
0x4000849	      0xb901000000	                              mov ecx, 1	      6665	intel_display.c	FUNCTION_208	ELSE_1	CALL_31
0x400084e	      0xe800000000	                          call 0x4000853	      6665	intel_display.c	FUNCTION_208	ELSE_1	CALL_31
0x4000853	              0x5b	                                 pop rbx	      6667	intel_display.c	FUNCTION_208
0x4000854	              0x5d	                                 pop rbp	      6667	intel_display.c	FUNCTION_208
0x4000855	            0x415c	                                 pop r12	      6667	intel_display.c	FUNCTION_208
0x4000857	            0x415d	                                 pop r13	      6667	intel_display.c	FUNCTION_208
0x4000859	            0x415e	                                 pop r14	      6667	intel_display.c	FUNCTION_208
0x400085b	              0xc3	                                     ret	      6667	intel_display.c	FUNCTION_208
0x400085c	          0x418b06	                    mov eax, dword [r14]	      6655	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_15
0x400085f	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	      6655	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_15
0x4000865	          0x4889df	                            mov rdi, rbx	      6655	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_15
0x4000868	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	      6655	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_15
0x400086f	          0x8d50ff	                      lea edx, [rax - 1]	      6655	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_15
0x4000872	    0x418b85980600	           mov eax, dword [r13 + 0x698] 	      6655	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_15
0x4000879	    0x2b8398060000	            sub eax, dword [rbx + 0x698]	      6655	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_15
0x400087f	          0xc1e219	                           shl edx, 0x19	      6655	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_15
0x4000882	        0x410b5604	                 or edx, dword [r14 + 4]	      6655	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_15
0x4000886	    0x8db408380006	          lea esi, [rax + rcx + 0x60038]	      6655	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_15
0x400088d	      0xb901000000	                              mov ecx, 1	      6655	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_15
0x4000892	      0xe800000000	                          call 0x4000897	      6655	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_15
0x4000897	    0x418b85980600	           mov eax, dword [r13 + 0x698] 	      6657	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_18
0x400089e	    0x2b8398060000	            sub eax, dword [rbx + 0x698]	      6657	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_18
0x40008a4	          0x4889df	                            mov rdi, rbx	      6657	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_18
0x40008a7	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	      6657	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_18
0x40008ad	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	      6657	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_18
0x40008b4	        0x418b5608	                mov edx, dword [r14 + 8]	      6657	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_18
0x40008b8	    0x8db4083c0006	          lea esi, [rax + rcx + 0x6003c]	      6657	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_18
0x40008bf	      0xb901000000	                              mov ecx, 1	      6657	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_18
0x40008c4	      0xe800000000	                          call 0x40008c9	      6657	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_18
0x40008c9	    0x418b85980600	           mov eax, dword [r13 + 0x698] 	      6658	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_20
0x40008d0	    0x2b8398060000	            sub eax, dword [rbx + 0x698]	      6658	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_20
0x40008d6	          0x4889df	                            mov rdi, rbx	      6658	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_20
0x40008d9	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	      6658	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_20
0x40008df	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	      6658	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_20
0x40008e6	        0x418b560c	              mov edx, dword [r14 + 0xc]	      6658	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_20
0x40008ea	    0x8db408480006	          lea esi, [rax + rcx + 0x60048]	      6658	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_20
0x40008f1	      0xb901000000	                              mov ecx, 1	      6658	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_20
0x40008f6	      0xe800000000	                          call 0x40008fb	      6658	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_20
0x40008fb	    0x418b85980600	           mov eax, dword [r13 + 0x698] 	      6659	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_22
0x4000902	    0x2b8398060000	            sub eax, dword [rbx + 0x698]	      6659	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_22
0x4000908	          0x4889df	                            mov rdi, rbx	      6659	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_22
0x400090b	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	      6659	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_22
0x4000911	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	      6659	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_22
0x4000918	        0x418b5610	            mov edx, dword [r14 + 0x10] 	      6659	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_22
0x400091c	    0x8db4084c0006	          lea esi, [rax + rcx + 0x6004c]	      6659	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_22
0x4000923	      0xb901000000	                              mov ecx, 1	      6659	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_22
0x4000928	      0xe800000000	                          call 0x400092d	      6659	intel_display.c	FUNCTION_208	IF_1	IF_2	CALL_22
0x400092d	              0x5b	                                 pop rbx	      6667	intel_display.c	FUNCTION_208
0x400092e	              0x5d	                                 pop rbp	      6667	intel_display.c	FUNCTION_208
0x400092f	            0x415c	                                 pop r12	      6667	intel_display.c	FUNCTION_208
0x4000931	            0x415d	                                 pop r13	      6667	intel_display.c	FUNCTION_208
0x4000933	            0x415e	                                 pop r14	      6667	intel_display.c	FUNCTION_208
0x4000935	              0xc3	                                     ret	      6667	intel_display.c	FUNCTION_208
intel_update_crtc	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,2:ELSE,1:functions,0:CALL,12	42
0x4010290	            0x4155	                                push r13	     12133	intel_display.c	FUNCTION_342
0x4010292	            0x4154	                                push r12	     12133	intel_display.c	FUNCTION_342
0x4010294	          0x4989f5	                            mov r13, rsi	     12133	intel_display.c	FUNCTION_342
0x4010297	              0x55	                                push rbp	     12133	intel_display.c	FUNCTION_342
0x4010298	          0x4889cd	                            mov rbp, rcx	     12133	intel_display.c	FUNCTION_342
0x401029b	              0x53	                                push rbx	     12133	intel_display.c	FUNCTION_342
0x401029c	         0xfb6450a	            movzx eax, byte [rbp + 0xa] 	       893	drm_atomic.h	FUNCTION_511
0x40102a0	          0x4889fb	                            mov rbx, rdi	     12133	intel_display.c	FUNCTION_342
0x40102a3	          0x4989d4	                            mov r12, rdx	     12133	intel_display.c	FUNCTION_342
0x40102a6	          0x488b0f	                    mov rcx, qword [rdi]	     12134	intel_display.c	FUNCTION_342
0x40102a9	            0xa802	                              test al, 2	       893	drm_atomic.h	FUNCTION_511
0x40102ab	            0x7504	                           jne 0x40102b1	       893	drm_atomic.h	FUNCTION_511
0x40102ad	            0xa804	                              test al, 4	       893	drm_atomic.h	FUNCTION_511
0x40102af	            0x7456	                            je 0x4010307	       893	drm_atomic.h	FUNCTION_511
0x40102b1	          0x4889df	                            mov rdi, rbx	     12141	intel_display.c	FUNCTION_342	IF_1	CALL_5
0x40102b4	      0xe8b754ffff	         call sym.update_scanline_offset	     12141	intel_display.c	FUNCTION_342	IF_1	CALL_5
0x40102b9	          0x4c89ee	                            mov rsi, r13	     12142	intel_display.c	FUNCTION_342	IF_1	CALL_6
0x40102bc	    0x488b81a85500	          mov rax, qword [rcx + 0x55a8] 	     12142	intel_display.c	FUNCTION_342	IF_1	CALL_6
0x40102c3	          0x4889ef	                            mov rdi, rbp	     12142	intel_display.c	FUNCTION_342	IF_1	CALL_6
0x40102c6	      0xe800000000	                          call 0x40102cb	     12142	intel_display.c	FUNCTION_342	IF_1	CALL_6
0x40102cb	    0x488b93800000	            mov rdx, qword [rbx + 0x80] 	     12148	intel_display.c	FUNCTION_342	IF_2	CALL_9
0x40102d2	    0x8b824c020000	           mov eax, dword [rdx + 0x24c] 	       449	drm_atomic.h	FUNCTION_504	CALL_1
0x40102d8	        0x48c1e005	                              shl rax, 5	       449	drm_atomic.h	FUNCTION_504	CALL_1
0x40102dc	        0x49034518	             add rax, qword [r13 + 0x18]	       449	drm_atomic.h	FUNCTION_504	CALL_1
0x40102e0	      0x4883780800	                  cmp qword [rax + 8], 0	     12148	intel_display.c	FUNCTION_342	IF_2	CALL_9
0x40102e5	            0x7412	                            je 0x40102f9	     12148	intel_display.c	FUNCTION_342	IF_2	CALL_9
0x40102e7	    0x488b92580200	           mov rdx, qword [rdx + 0x258] 	     12149	intel_display.c	FUNCTION_342	IF_2	CALL_10
0x40102ee	          0x4889ee	                            mov rsi, rbp	     12149	intel_display.c	FUNCTION_342	IF_2	CALL_10
0x40102f1	          0x4889df	                            mov rdi, rbx	     12149	intel_display.c	FUNCTION_342	IF_2	CALL_10
0x40102f4	      0xe800000000	                          call 0x40102f9	     12149	intel_display.c	FUNCTION_342	IF_2	CALL_10
0x40102f9	              0x5b	                                 pop rbx	     12155	intel_display.c	FUNCTION_342
0x40102fa	          0x4c89e7	                            mov rdi, r12	     12154	intel_display.c	FUNCTION_342	CALL_12
0x40102fd	              0x5d	                                 pop rbp	     12155	intel_display.c	FUNCTION_342
0x40102fe	            0x415c	                                 pop r12	     12155	intel_display.c	FUNCTION_342
0x4010300	            0x415d	                                 pop r13	     12155	intel_display.c	FUNCTION_342
0x4010302	      0xe900000000	                           jmp 0x4010307	     12154	intel_display.c	FUNCTION_342	CALL_12
0x4010307	            0xa808	                              test al, 8	       893	drm_atomic.h	FUNCTION_511
0x4010309	            0x75a6	                           jne 0x40102b1	       893	drm_atomic.h	FUNCTION_511
0x401030b	          0x4889ee	                            mov rsi, rbp	     12144	intel_display.c	FUNCTION_342	ELSE_1	CALL_8
0x401030e	          0x4889d7	                            mov rdi, rdx	     12144	intel_display.c	FUNCTION_342	ELSE_1	CALL_8
0x4010311	      0xe87afdffff	         call sym.intel_pre_plane_update	     12144	intel_display.c	FUNCTION_342	ELSE_1	CALL_8
0x4010316	            0xebb3	                           jmp 0x40102cb	     12144	intel_display.c	FUNCTION_342	ELSE_1	CALL_8
ironlake_crtc_disable	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,4:ELSE,0:functions,0:CALL,23	423
0x40068f0	            0x4157	                                push r15	      5608	intel_display.c	FUNCTION_170
0x40068f2	            0x4156	                                push r14	      5608	intel_display.c	FUNCTION_170
0x40068f4	          0x4989fe	                            mov r14, rdi	      5608	intel_display.c	FUNCTION_170
0x40068f7	            0x4155	                                push r13	      5608	intel_display.c	FUNCTION_170
0x40068f9	            0x4154	                                push r12	      5608	intel_display.c	FUNCTION_170
0x40068fb	          0x4989f5	                            mov r13, rsi	      5608	intel_display.c	FUNCTION_170
0x40068fe	              0x55	                                push rbp	      5608	intel_display.c	FUNCTION_170
0x40068ff	              0x53	                                push rbx	      5608	intel_display.c	FUNCTION_170
0x4006900	        0x4883ec20	                           sub rsp, 0x20	      5608	intel_display.c	FUNCTION_170
0x4006904	          0x488b1f	                    mov rbx, qword [rdi]	      5609	intel_display.c	FUNCTION_170
0x4006907	    0x488b83c80400	           mov rax, qword [rbx + 0x4c8] 	      5620	intel_display.c	FUNCTION_170	IF_1
0x400690e	          0x488b2b	                    mov rbp, qword [rbx]	      5610	intel_display.c	FUNCTION_170
0x4006911	    0x448ba3b00400	          mov r12d, dword [rbx + 0x4b0] 	      5613	intel_display.c	FUNCTION_170
0x4006918	    0x80b838020000	               cmp byte [rax + 0x238], 0	      5620	intel_display.c	FUNCTION_170	IF_1
0x400691f	     0xf85f8040000	                           jne 0x4006e1d	      5620	intel_display.c	FUNCTION_170	IF_1
0x4006925	        0x498d4530	                   lea rax, [r13 + 0x30]	      5620	intel_display.c	FUNCTION_170	IF_1
0x4006929	        0x4d8d7d28	                   lea r15, [r13 + 0x28]	      5620	intel_display.c	FUNCTION_170	IF_1
0x400692d	          0x4c89f6	                            mov rsi, r14	      5625	intel_display.c	FUNCTION_170	CALL_5
0x4006930	          0x4889df	                            mov rdi, rbx	      5625	intel_display.c	FUNCTION_170	CALL_5
0x4006933	          0x4889c1	                            mov rcx, rax	      5625	intel_display.c	FUNCTION_170	CALL_5
0x4006936	          0x4c89fa	                            mov rdx, r15	      5625	intel_display.c	FUNCTION_170	CALL_5
0x4006939	        0x48890424	                    mov qword [rsp], rax	      5625	intel_display.c	FUNCTION_170	CALL_5
0x400693d	      0xe8fefbffff	call sym.intel_encoders_disable.isra.101	      5625	intel_display.c	FUNCTION_170	CALL_5
0x4006942	          0x4889df	                            mov rdi, rbx	      5627	intel_display.c	FUNCTION_170	CALL_6
0x4006945	      0xe800000000	                          call 0x400694a	      5627	intel_display.c	FUNCTION_170	CALL_6
0x400694a	          0x4889df	                            mov rdi, rbx	      5628	intel_display.c	FUNCTION_170	CALL_7
0x400694d	      0xe85eddffff	         call sym.assert_vblank_disabled	      5628	intel_display.c	FUNCTION_170	CALL_7
0x4006952	          0x4c89f7	                            mov rdi, r14	      5630	intel_display.c	FUNCTION_170	CALL_8
0x4006955	      0xe876fcffff	             call sym.intel_disable_pipe	      5630	intel_display.c	FUNCTION_170	CALL_8
0x400695a	            0x31f6	                            xor esi, esi	      5632	intel_display.c	FUNCTION_170	CALL_9
0x400695c	          0x4889df	                            mov rdi, rbx	      5632	intel_display.c	FUNCTION_170	CALL_9
0x400695f	      0xe8ac9cffff	          call sym.ironlake_pfit_disable	      5632	intel_display.c	FUNCTION_170	CALL_9
0x4006964	    0x488b83c80400	           mov rax, qword [rbx + 0x4c8] 	      5634	intel_display.c	FUNCTION_170	IF_2
0x400696b	    0x80b838020000	               cmp byte [rax + 0x238], 0	      5634	intel_display.c	FUNCTION_170	IF_2
0x4006972	     0xf8581020000	                           jne 0x4006bf9	      5634	intel_display.c	FUNCTION_170	IF_2
0x4006978	        0x488b0c24	                    mov rcx, qword [rsp]	      5637	intel_display.c	FUNCTION_170	CALL_11
0x400697c	          0x4c89fa	                            mov rdx, r15	      5637	intel_display.c	FUNCTION_170	CALL_11
0x400697f	          0x4c89f6	                            mov rsi, r14	      5637	intel_display.c	FUNCTION_170	CALL_11
0x4006982	          0x4889df	                            mov rdi, rbx	      5637	intel_display.c	FUNCTION_170	CALL_11
0x4006985	      0xe8c6fdffff	call sym.intel_encoders_post_disable.isra.103	      5637	intel_display.c	FUNCTION_170	CALL_11
0x400698a	    0x488b83c80400	           mov rax, qword [rbx + 0x4c8] 	      5639	intel_display.c	FUNCTION_170	IF_3
0x4006991	    0x80b838020000	               cmp byte [rax + 0x238], 0	      5639	intel_display.c	FUNCTION_170	IF_3
0x4006998	            0x752e	                           jne 0x40069c8	      5639	intel_display.c	FUNCTION_170	IF_3
0x400699a	          0x4489e6	                           mov esi, r12d	      5663	intel_display.c	FUNCTION_170	CALL_22
0x400699d	          0x4889ef	                            mov rdi, rbp	      5663	intel_display.c	FUNCTION_170	CALL_22
0x40069a0	      0xba01000000	                              mov edx, 1	      5663	intel_display.c	FUNCTION_170	CALL_22
0x40069a5	      0xe800000000	                          call 0x40069aa	      5663	intel_display.c	FUNCTION_170	CALL_22
0x40069aa	        0x4883c420	                           add rsp, 0x20	      5665	intel_display.c	FUNCTION_170
0x40069ae	          0x4489e6	                           mov esi, r12d	      5664	intel_display.c	FUNCTION_170	CALL_23
0x40069b1	          0x4889ef	                            mov rdi, rbp	      5664	intel_display.c	FUNCTION_170	CALL_23
0x40069b4	              0x5b	                                 pop rbx	      5665	intel_display.c	FUNCTION_170
0x40069b5	              0x5d	                                 pop rbp	      5665	intel_display.c	FUNCTION_170
0x40069b6	            0x415c	                                 pop r12	      5665	intel_display.c	FUNCTION_170
0x40069b8	            0x415d	                                 pop r13	      5665	intel_display.c	FUNCTION_170
0x40069ba	            0x415e	                                 pop r14	      5665	intel_display.c	FUNCTION_170
0x40069bc	            0x415f	                                 pop r15	      5665	intel_display.c	FUNCTION_170
0x40069be	      0xba01000000	                              mov edx, 1	      5664	intel_display.c	FUNCTION_170	CALL_23
0x40069c3	      0xe900000000	                           jmp 0x40069c8	      5664	intel_display.c	FUNCTION_170	CALL_23
0x40069c8	            0x31d2	                            xor edx, edx	      1763	intel_display.c	FUNCTION_59	CALL_1
0x40069ca	          0x4489e6	                           mov esi, r12d	      1763	intel_display.c	FUNCTION_59	CALL_1
0x40069cd	          0x4889ef	                            mov rdi, rbp	      1763	intel_display.c	FUNCTION_59	CALL_1
0x40069d0	      0xe89bbbffff	                  call sym.assert_fdi_tx	      1763	intel_display.c	FUNCTION_59	CALL_1
0x40069d5	            0x31d2	                            xor edx, edx	      1764	intel_display.c	FUNCTION_59	CALL_2
0x40069d7	          0x4489e6	                           mov esi, r12d	      1764	intel_display.c	FUNCTION_59	CALL_2
0x40069da	          0x4889ef	                            mov rdi, rbp	      1764	intel_display.c	FUNCTION_59	CALL_2
0x40069dd	      0xe82eb9ffff	                  call sym.assert_fdi_rx	      1764	intel_display.c	FUNCTION_59	CALL_2
0x40069e2	            0x31c9	                            xor ecx, ecx	      1367	intel_display.c	FUNCTION_46	CALL_1
0x40069e4	      0xba00410e00	                        mov edx, 0xe4100	      1367	intel_display.c	FUNCTION_46	CALL_1
0x40069e9	          0x4489e6	                           mov esi, r12d	      1367	intel_display.c	FUNCTION_46	CALL_1
0x40069ec	          0x4889ef	                            mov rdi, rbp	      1367	intel_display.c	FUNCTION_46	CALL_1
0x40069ef	      0xe8acb9ffff	         call sym.assert_pch_dp_disabled	      1367	intel_display.c	FUNCTION_46	CALL_1
0x40069f4	      0xb900000020	                     mov ecx, 0x20000000	      1368	intel_display.c	FUNCTION_46	CALL_2
0x40069f9	      0xba00420e00	                        mov edx, 0xe4200	      1368	intel_display.c	FUNCTION_46	CALL_2
0x40069fe	          0x4489e6	                           mov esi, r12d	      1368	intel_display.c	FUNCTION_46	CALL_2
0x4006a01	          0x4889ef	                            mov rdi, rbp	      1368	intel_display.c	FUNCTION_46	CALL_2
0x4006a04	      0xe897b9ffff	         call sym.assert_pch_dp_disabled	      1368	intel_display.c	FUNCTION_46	CALL_2
0x4006a09	      0xb900000040	                     mov ecx, 0x40000000	      1369	intel_display.c	FUNCTION_46	CALL_3
0x4006a0e	      0xba00430e00	                        mov edx, 0xe4300	      1369	intel_display.c	FUNCTION_46	CALL_3
0x4006a13	          0x4489e6	                           mov esi, r12d	      1369	intel_display.c	FUNCTION_46	CALL_3
0x4006a16	          0x4889ef	                            mov rdi, rbp	      1369	intel_display.c	FUNCTION_46	CALL_3
0x4006a19	      0xe882b9ffff	         call sym.assert_pch_dp_disabled	      1369	intel_display.c	FUNCTION_46	CALL_3
0x4006a1e	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	      1371	intel_display.c	FUNCTION_46	CALL_4
0x4006a25	      0xba01000000	                              mov edx, 1	      1371	intel_display.c	FUNCTION_46	CALL_4
0x4006a2a	      0xbe00110e00	                        mov esi, 0xe1100	      1371	intel_display.c	FUNCTION_46	CALL_4
0x4006a2f	          0x4889ef	                            mov rdi, rbp	      1371	intel_display.c	FUNCTION_46	CALL_4
0x4006a32	      0xe800000000	                          call 0x4006a37	      1371	intel_display.c	FUNCTION_46	CALL_4
0x4006a37	            0x85c0	                           test eax, eax	      1323	intel_display.c	FUNCTION_43	IF_1
0x4006a39	     0xf8856040000	                            js 0x4006e95	      1323	intel_display.c	FUNCTION_43	IF_1
0x4006a3f	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	      1376	intel_display.c	FUNCTION_46	CALL_8
0x4006a46	      0xba01000000	                              mov edx, 1	      1376	intel_display.c	FUNCTION_46	CALL_8
0x4006a4b	      0xbe80110e00	                        mov esi, 0xe1180	      1376	intel_display.c	FUNCTION_46	CALL_8
0x4006a50	          0x4889ef	                            mov rdi, rbp	      1376	intel_display.c	FUNCTION_46	CALL_8
0x4006a53	      0xe800000000	                          call 0x4006a58	      1376	intel_display.c	FUNCTION_46	CALL_8
0x4006a58	            0x85c0	                           test eax, eax	      1307	intel_display.c	FUNCTION_42	IF_1
0x4006a5a	     0xf88f2030000	                            js 0x4006e52	      1307	intel_display.c	FUNCTION_42	IF_1
0x4006a60	          0x4589e6	                          mov r14d, r12d	      1769	intel_display.c	FUNCTION_59	CALL_4
0x4006a63	      0xba40110e00	                        mov edx, 0xe1140	      1381	intel_display.c	FUNCTION_46	CALL_12
0x4006a68	          0x4489e6	                           mov esi, r12d	      1381	intel_display.c	FUNCTION_46	CALL_12
0x4006a6b	          0x4889ef	                            mov rdi, rbp	      1381	intel_display.c	FUNCTION_46	CALL_12
0x4006a6e	        0x41c1e60c	                           shl r14d, 0xc	      1769	intel_display.c	FUNCTION_59	CALL_4
0x4006a72	      0xe829baffff	       call sym.assert_pch_hdmi_disabled	      1381	intel_display.c	FUNCTION_46	CALL_12
0x4006a77	    0x458dae08000f	               lea r13d, [r14 + 0xf0008]	      1769	intel_display.c	FUNCTION_59	CALL_4
0x4006a7e	      0xba50110e00	                        mov edx, 0xe1150	      1382	intel_display.c	FUNCTION_46	CALL_13
0x4006a83	          0x4489e6	                           mov esi, r12d	      1382	intel_display.c	FUNCTION_46	CALL_13
0x4006a86	          0x4889ef	                            mov rdi, rbp	      1382	intel_display.c	FUNCTION_46	CALL_13
0x4006a89	      0xe812baffff	       call sym.assert_pch_hdmi_disabled	      1382	intel_display.c	FUNCTION_46	CALL_13
0x4006a8e	      0xba60110e00	                        mov edx, 0xe1160	      1383	intel_display.c	FUNCTION_46	CALL_14
0x4006a93	          0x4489e6	                           mov esi, r12d	      1383	intel_display.c	FUNCTION_46	CALL_14
0x4006a96	          0x4889ef	                            mov rdi, rbp	      1383	intel_display.c	FUNCTION_46	CALL_14
0x4006a99	      0xe802baffff	       call sym.assert_pch_hdmi_disabled	      1383	intel_display.c	FUNCTION_46	CALL_14
0x4006a9e	      0xba01000000	                              mov edx, 1	      1770	intel_display.c	FUNCTION_59	CALL_5
0x4006aa3	          0x4489ee	                           mov esi, r13d	      1770	intel_display.c	FUNCTION_59	CALL_5
0x4006aa6	          0x4889ef	                            mov rdi, rbp	      1770	intel_display.c	FUNCTION_59	CALL_5
0x4006aa9	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	      1770	intel_display.c	FUNCTION_59	CALL_5
0x4006ab0	      0xe800000000	                          call 0x4006ab5	      1770	intel_display.c	FUNCTION_59	CALL_5
0x4006ab5	      0x25ffffff7f	                     and eax, 0x7fffffff	      1772	intel_display.c	FUNCTION_59	CALL_6
0x4006aba	      0xb901000000	                              mov ecx, 1	      1772	intel_display.c	FUNCTION_59	CALL_6
0x4006abf	          0x4489ee	                           mov esi, r13d	      1772	intel_display.c	FUNCTION_59	CALL_6
0x4006ac2	            0x89c2	                            mov edx, eax	      1772	intel_display.c	FUNCTION_59	CALL_6
0x4006ac4	          0x4889ef	                            mov rdi, rbp	      1772	intel_display.c	FUNCTION_59	CALL_6
0x4006ac7	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	      1772	intel_display.c	FUNCTION_59	CALL_6
0x4006ace	      0xe800000000	                          call 0x4006ad3	      1772	intel_display.c	FUNCTION_59	CALL_6
0x4006ad3	            0x6a00	                                  push 0	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x4006ad5	            0x31c9	                            xor ecx, ecx	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x4006ad7	      0xba00000040	                     mov edx, 0x40000000	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x4006adc	    0x41b932000000	                           mov r9d, 0x32	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x4006ae2	    0x41b802000000	                              mov r8d, 2	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x4006ae8	          0x4489ee	                           mov esi, r13d	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x4006aeb	          0x4889ef	                            mov rdi, rbp	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x4006aee	      0xe800000000	                          call 0x4006af3	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x4006af3	            0x85c0	                           test eax, eax	      1774	intel_display.c	FUNCTION_59	IF_1	CALL_7
0x4006af5	              0x5a	                                 pop rdx	      1774	intel_display.c	FUNCTION_59	IF_1	CALL_7
0x4006af6	     0xf8540030000	                           jne 0x4006e3c	      1774	intel_display.c	FUNCTION_59	IF_1	CALL_7
0x4006afc	    0x83bdf8550000	            cmp dword [rbp + 0x55f8], 2 	      1779	intel_display.c	FUNCTION_59	IF_2	CALL_10
0x4006b03	     0xf84cf030000	                            je 0x4006ed8	      1779	intel_display.c	FUNCTION_59	IF_2	CALL_10
0x4006b09	          0x4c8b2b	                    mov r13, qword [rbx]	      1779	intel_display.c	FUNCTION_59	IF_2	CALL_10
0x4006b0c	    0x8b9bb0040000	           mov ebx, dword [rbx + 0x4b0] 	      4261	intel_display.c	FUNCTION_129	CALL_2
0x4006b12	      0xba01000000	                              mov edx, 1	      4262	intel_display.c	FUNCTION_129	CALL_3
0x4006b17	          0xc1e30c	                            shl ebx, 0xc	      4261	intel_display.c	FUNCTION_129	CALL_2
0x4006b1a	          0x4c89ef	                            mov rdi, r13	      4262	intel_display.c	FUNCTION_129	CALL_3
0x4006b1d	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      4262	intel_display.c	FUNCTION_129	CALL_3
0x4006b24	    0x448db30c000f	               lea r14d, [rbx + 0xf000c]	      4261	intel_display.c	FUNCTION_129	CALL_2
0x4006b2b	    0x81c300010600	                        add ebx, 0x60100	      4266	intel_display.c	FUNCTION_129	CALL_5
0x4006b31	          0x4489f6	                           mov esi, r14d	      4262	intel_display.c	FUNCTION_129	CALL_3
0x4006b34	      0xe800000000	                          call 0x4006b39	      4262	intel_display.c	FUNCTION_129	CALL_3
0x4006b39	          0x83e0ef	                     and eax, 0xffffffef	      4263	intel_display.c	FUNCTION_129	CALL_4
0x4006b3c	      0xb901000000	                              mov ecx, 1	      4263	intel_display.c	FUNCTION_129	CALL_4
0x4006b41	          0x4489f6	                           mov esi, r14d	      4263	intel_display.c	FUNCTION_129	CALL_4
0x4006b44	            0x89c2	                            mov edx, eax	      4263	intel_display.c	FUNCTION_129	CALL_4
0x4006b46	          0x4c89ef	                            mov rdi, r13	      4263	intel_display.c	FUNCTION_129	CALL_4
0x4006b49	    0x498b85180800	           mov rax, qword [r13 + 0x818] 	      4263	intel_display.c	FUNCTION_129	CALL_4
0x4006b50	      0xe800000000	                          call 0x4006b55	      4263	intel_display.c	FUNCTION_129	CALL_4
0x4006b55	            0x89de	                            mov esi, ebx	      4267	intel_display.c	FUNCTION_129	CALL_6
0x4006b57	          0x4c89ef	                            mov rdi, r13	      4267	intel_display.c	FUNCTION_129	CALL_6
0x4006b5a	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      4267	intel_display.c	FUNCTION_129	CALL_6
0x4006b61	      0xba01000000	                              mov edx, 1	      4267	intel_display.c	FUNCTION_129	CALL_6
0x4006b66	      0xe800000000	                          call 0x4006b6b	      4267	intel_display.c	FUNCTION_129	CALL_6
0x4006b6b	          0x80e4bf	                            and ah, 0xbf	      4268	intel_display.c	FUNCTION_129	CALL_7
0x4006b6e	      0xb901000000	                              mov ecx, 1	      4268	intel_display.c	FUNCTION_129	CALL_7
0x4006b73	            0x89de	                            mov esi, ebx	      4268	intel_display.c	FUNCTION_129	CALL_7
0x4006b75	            0x89c2	                            mov edx, eax	      4268	intel_display.c	FUNCTION_129	CALL_7
0x4006b77	          0x4c89ef	                            mov rdi, r13	      4268	intel_display.c	FUNCTION_129	CALL_7
0x4006b7a	    0x498b85180800	           mov rax, qword [r13 + 0x818] 	      4268	intel_display.c	FUNCTION_129	CALL_7
0x4006b81	      0xe800000000	                          call 0x4006b86	      4268	intel_display.c	FUNCTION_129	CALL_7
0x4006b86	            0x31d2	                            xor edx, edx	      4270	intel_display.c	FUNCTION_129	CALL_8
0x4006b88	            0x89de	                            mov esi, ebx	      4270	intel_display.c	FUNCTION_129	CALL_8
0x4006b8a	          0x4c89ef	                            mov rdi, r13	      4270	intel_display.c	FUNCTION_129	CALL_8
0x4006b8d	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      4270	intel_display.c	FUNCTION_129	CALL_8
0x4006b94	      0xe800000000	                          call 0x4006b99	      4270	intel_display.c	FUNCTION_129	CALL_8
0x4006b99	      0xbfbc8d0600	                        mov edi, 0x68dbc	      4271	intel_display.c	FUNCTION_129	CALL_9
0x4006b9e	      0xe800000000	                          call 0x4006ba3	      4271	intel_display.c	FUNCTION_129	CALL_9
0x4006ba3	          0x4489f6	                           mov esi, r14d	      4274	intel_display.c	FUNCTION_129	CALL_11
0x4006ba6	          0x4c89ef	                            mov rdi, r13	      4274	intel_display.c	FUNCTION_129	CALL_11
0x4006ba9	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      4274	intel_display.c	FUNCTION_129	CALL_11
0x4006bb0	      0xba01000000	                              mov edx, 1	      4274	intel_display.c	FUNCTION_129	CALL_11
0x4006bb5	      0xe800000000	                          call 0x4006bba	      4274	intel_display.c	FUNCTION_129	CALL_11
0x4006bba	          0x80e4df	                            and ah, 0xdf	      4275	intel_display.c	FUNCTION_129	CALL_12
0x4006bbd	      0xb901000000	                              mov ecx, 1	      4275	intel_display.c	FUNCTION_129	CALL_12
0x4006bc2	          0x4489f6	                           mov esi, r14d	      4275	intel_display.c	FUNCTION_129	CALL_12
0x4006bc5	            0x89c2	                            mov edx, eax	      4275	intel_display.c	FUNCTION_129	CALL_12
0x4006bc7	          0x4c89ef	                            mov rdi, r13	      4275	intel_display.c	FUNCTION_129	CALL_12
0x4006bca	    0x498b85180800	           mov rax, qword [r13 + 0x818] 	      4275	intel_display.c	FUNCTION_129	CALL_12
0x4006bd1	      0xe800000000	                          call 0x4006bd6	      4275	intel_display.c	FUNCTION_129	CALL_12
0x4006bd6	          0x4c89ef	                            mov rdi, r13	      4278	intel_display.c	FUNCTION_129	CALL_13
0x4006bd9	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      4278	intel_display.c	FUNCTION_129	CALL_13
0x4006be0	            0x31d2	                            xor edx, edx	      4278	intel_display.c	FUNCTION_129	CALL_13
0x4006be2	          0x4489f6	                           mov esi, r14d	      4278	intel_display.c	FUNCTION_129	CALL_13
0x4006be5	      0xe800000000	                          call 0x4006bea	      4278	intel_display.c	FUNCTION_129	CALL_13
0x4006bea	      0xbfbc8d0600	                        mov edi, 0x68dbc	      4279	intel_display.c	FUNCTION_129	CALL_14
0x4006bef	      0xe800000000	                          call 0x4006bf4	      4279	intel_display.c	FUNCTION_129	CALL_14
0x4006bf4	      0xe9a1fdffff	                           jmp 0x400699a	      4279	intel_display.c	FUNCTION_129	CALL_14
0x4006bf9	    0x8b83b0040000	           mov eax, dword [rbx + 0x4b0] 	      4287	intel_display.c	FUNCTION_130
0x4006bff	          0x4c8b2b	                    mov r13, qword [rbx]	      4284	intel_display.c	FUNCTION_130
0x4006c02	      0xba01000000	                              mov edx, 1	      4293	intel_display.c	FUNCTION_130	CALL_4
0x4006c07	          0x4189c1	                            mov r9d, eax	      4292	intel_display.c	FUNCTION_130	CALL_3
0x4006c0a	        0x89442410	             mov dword [rsp + 0x10], eax	      4292	intel_display.c	FUNCTION_130	CALL_3
0x4006c0e	          0x4c89ef	                            mov rdi, r13	      4293	intel_display.c	FUNCTION_130	CALL_4
0x4006c11	        0x41c1e10c	                            shl r9d, 0xc	      4292	intel_display.c	FUNCTION_130	CALL_3
0x4006c15	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      4293	intel_display.c	FUNCTION_130	CALL_4
0x4006c1c	    0x418d89000106	                 lea ecx, [r9 + 0x60100]	      4292	intel_display.c	FUNCTION_130	CALL_3
0x4006c23	      0x44894c2408	                mov dword [rsp + 8], r9d	      4292	intel_display.c	FUNCTION_130	CALL_3
0x4006c28	            0x89ce	                            mov esi, ecx	      4293	intel_display.c	FUNCTION_130	CALL_4
0x4006c2a	        0x894c240c	              mov dword [rsp + 0xc], ecx	      4293	intel_display.c	FUNCTION_130	CALL_4
0x4006c2e	      0xe800000000	                          call 0x4006c33	      4293	intel_display.c	FUNCTION_130	CALL_4
0x4006c33	            0x89c2	                            mov edx, eax	      4294	intel_display.c	FUNCTION_130	CALL_5
0x4006c35	      0xb901000000	                              mov ecx, 1	      4294	intel_display.c	FUNCTION_130	CALL_5
0x4006c3a	    0x498b85180800	           mov rax, qword [r13 + 0x818] 	      4294	intel_display.c	FUNCTION_130	CALL_5
0x4006c41	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      4294	intel_display.c	FUNCTION_130	CALL_5
0x4006c47	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      4294	intel_display.c	FUNCTION_130	CALL_5
0x4006c4b	          0x4c89ef	                            mov rdi, r13	      4294	intel_display.c	FUNCTION_130	CALL_5
0x4006c4e	      0xe800000000	                          call 0x4006c53	      4294	intel_display.c	FUNCTION_130	CALL_5
0x4006c53	            0x31d2	                            xor edx, edx	      4295	intel_display.c	FUNCTION_130	CALL_6
0x4006c55	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      4295	intel_display.c	FUNCTION_130	CALL_6
0x4006c59	          0x4c89ef	                            mov rdi, r13	      4295	intel_display.c	FUNCTION_130	CALL_6
0x4006c5c	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      4295	intel_display.c	FUNCTION_130	CALL_6
0x4006c63	      0xe800000000	                          call 0x4006c68	      4295	intel_display.c	FUNCTION_130	CALL_6
0x4006c68	      0x448b4c2408	                mov r9d, dword [rsp + 8]	      4297	intel_display.c	FUNCTION_130	CALL_7
0x4006c6d	      0xba01000000	                              mov edx, 1	      4298	intel_display.c	FUNCTION_130	CALL_8
0x4006c72	          0x4c89ef	                            mov rdi, r13	      4298	intel_display.c	FUNCTION_130	CALL_8
0x4006c75	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      4298	intel_display.c	FUNCTION_130	CALL_8
0x4006c7c	    0x418d890c000f	                 lea ecx, [r9 + 0xf000c]	      4297	intel_display.c	FUNCTION_130	CALL_7
0x4006c83	            0x89ce	                            mov esi, ecx	      4298	intel_display.c	FUNCTION_130	CALL_8
0x4006c85	        0x894c2408	                mov dword [rsp + 8], ecx	      4298	intel_display.c	FUNCTION_130	CALL_8
0x4006c89	      0xe800000000	                          call 0x4006c8e	      4298	intel_display.c	FUNCTION_130	CALL_8
0x4006c8e	            0x89c6	                            mov esi, eax	      4299	intel_display.c	FUNCTION_130
0x4006c90	      0x4863442410	         movsxd rax, dword [rsp + 0x10] 	      4299	intel_display.c	FUNCTION_130
0x4006c95	    0x418b956c0600	           mov edx, dword [r13 + 0x66c] 	      4300	intel_display.c	FUNCTION_130	CALL_10
0x4006c9c	    0x81e6fffff8ff	                     and esi, 0xfff8ffff	      4299	intel_display.c	FUNCTION_130
0x4006ca2	    0x498b8df80700	           mov rcx, qword [r13 + 0x7f8] 	      4300	intel_display.c	FUNCTION_130	CALL_10
0x4006ca9	          0x4c89ef	                            mov rdi, r13	      4300	intel_display.c	FUNCTION_130	CALL_10
0x4006cac	        0x89742414	             mov dword [rsp + 0x14], esi	      4299	intel_display.c	FUNCTION_130
0x4006cb0	      0x498d448500	                  lea rax, [r13 + rax*4]	      4299	intel_display.c	FUNCTION_130
0x4006cb5	      0x4889442418	             mov qword [rsp + 0x18], rax	      4299	intel_display.c	FUNCTION_130
0x4006cba	    0x8b8080060000	           mov eax, dword [rax + 0x680] 	      4300	intel_display.c	FUNCTION_130	CALL_10
0x4006cc0	    0x412b85800600	            sub eax, dword [r13 + 0x680]	      4300	intel_display.c	FUNCTION_130	CALL_10
0x4006cc7	    0x8db410080007	          lea esi, [rax + rdx + 0x70008]	      4300	intel_display.c	FUNCTION_130	CALL_10
0x4006cce	      0xba01000000	                              mov edx, 1	      4300	intel_display.c	FUNCTION_130	CALL_10
0x4006cd3	      0xe800000000	                          call 0x4006cd8	      4300	intel_display.c	FUNCTION_130	CALL_10
0x4006cd8	      0x25e0000000	                           and eax, 0xe0	      4301	intel_display.c	FUNCTION_130	CALL_11
0x4006cdd	      0xb901000000	                              mov ecx, 1	      4301	intel_display.c	FUNCTION_130	CALL_11
0x4006ce2	        0x8b742408	                mov esi, dword [rsp + 8]	      4301	intel_display.c	FUNCTION_130	CALL_11
0x4006ce6	            0x89c2	                            mov edx, eax	      4301	intel_display.c	FUNCTION_130	CALL_11
0x4006ce8	          0x4c89ef	                            mov rdi, r13	      4301	intel_display.c	FUNCTION_130	CALL_11
0x4006ceb	    0x498b85180800	           mov rax, qword [r13 + 0x818] 	      4301	intel_display.c	FUNCTION_130	CALL_11
0x4006cf2	          0xc1e20b	                            shl edx, 0xb	      4301	intel_display.c	FUNCTION_130	CALL_11
0x4006cf5	         0xb542414	              or edx, dword [rsp + 0x14]	      4301	intel_display.c	FUNCTION_130	CALL_11
0x4006cf9	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      4301	intel_display.c	FUNCTION_130	CALL_11
0x4006cff	      0xe800000000	                          call 0x4006d04	      4301	intel_display.c	FUNCTION_130	CALL_11
0x4006d04	            0x31d2	                            xor edx, edx	      4303	intel_display.c	FUNCTION_130	CALL_12
0x4006d06	        0x8b742408	                mov esi, dword [rsp + 8]	      4303	intel_display.c	FUNCTION_130	CALL_12
0x4006d0a	          0x4c89ef	                            mov rdi, r13	      4303	intel_display.c	FUNCTION_130	CALL_12
0x4006d0d	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      4303	intel_display.c	FUNCTION_130	CALL_12
0x4006d14	      0xe800000000	                          call 0x4006d19	      4303	intel_display.c	FUNCTION_130	CALL_12
0x4006d19	      0xbfbc8d0600	                        mov edi, 0x68dbc	      4304	intel_display.c	FUNCTION_130	CALL_13
0x4006d1e	      0xe800000000	                          call 0x4006d23	      4304	intel_display.c	FUNCTION_130	CALL_13
0x4006d23	    0x4183bdf85500	            cmp dword [r13 + 0x55f8], 1 	      4307	intel_display.c	FUNCTION_130	IF_1	CALL_14
0x4006d2b	     0xf8489020000	                            je 0x4006fba	      4307	intel_display.c	FUNCTION_130	IF_1	CALL_14
0x4006d31	          0x4c89ef	                            mov rdi, r13	      4312	intel_display.c	FUNCTION_130	CALL_18
0x4006d34	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      4312	intel_display.c	FUNCTION_130	CALL_18
0x4006d3b	      0xba01000000	                              mov edx, 1	      4312	intel_display.c	FUNCTION_130	CALL_18
0x4006d40	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      4312	intel_display.c	FUNCTION_130	CALL_18
0x4006d44	      0xe800000000	                          call 0x4006d49	      4312	intel_display.c	FUNCTION_130	CALL_18
0x4006d49	      0x25ffffffcf	                     and eax, 0xcfffffff	      4315	intel_display.c	FUNCTION_130	CALL_19
0x4006d4e	      0xb901000000	                              mov ecx, 1	      4315	intel_display.c	FUNCTION_130	CALL_19
0x4006d53	          0x4c89ef	                            mov rdi, r13	      4315	intel_display.c	FUNCTION_130	CALL_19
0x4006d56	            0x89c2	                            mov edx, eax	      4315	intel_display.c	FUNCTION_130	CALL_19
0x4006d58	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      4315	intel_display.c	FUNCTION_130	CALL_19
0x4006d5c	    0x498b85180800	           mov rax, qword [r13 + 0x818] 	      4315	intel_display.c	FUNCTION_130	CALL_19
0x4006d63	      0xe800000000	                          call 0x4006d68	      4315	intel_display.c	FUNCTION_130	CALL_19
0x4006d68	          0x4c89ef	                            mov rdi, r13	      4318	intel_display.c	FUNCTION_130	CALL_21
0x4006d6b	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      4318	intel_display.c	FUNCTION_130	CALL_21
0x4006d72	      0xba01000000	                              mov edx, 1	      4318	intel_display.c	FUNCTION_130	CALL_21
0x4006d77	        0x8b742408	                mov esi, dword [rsp + 8]	      4318	intel_display.c	FUNCTION_130	CALL_21
0x4006d7b	      0xe800000000	                          call 0x4006d80	      4318	intel_display.c	FUNCTION_130	CALL_21
0x4006d80	            0x89c2	                            mov edx, eax	      4320	intel_display.c	FUNCTION_130	IF_2
0x4006d82	      0x25ffffffcf	                     and eax, 0xcfffffff	      4320	intel_display.c	FUNCTION_130	IF_2
0x4006d87	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      4328	intel_display.c	FUNCTION_130	CALL_24
0x4006d8c	          0x80e6fc	                            and dh, 0xfc	      4320	intel_display.c	FUNCTION_130	IF_2
0x4006d8f	    0x4183bdf85500	            cmp dword [r13 + 0x55f8], 2 	      4320	intel_display.c	FUNCTION_130	IF_2
0x4006d97	    0x498b8df80700	           mov rcx, qword [r13 + 0x7f8] 	      4328	intel_display.c	FUNCTION_130	CALL_24
0x4006d9e	          0x4c89ef	                            mov rdi, r13	      4328	intel_display.c	FUNCTION_130	CALL_24
0x4006da1	           0xf45d0	                         cmovne edx, eax	      4320	intel_display.c	FUNCTION_130	IF_2
0x4006da4	    0x8b8680060000	           mov eax, dword [rsi + 0x680] 	      4328	intel_display.c	FUNCTION_130	CALL_24
0x4006daa	    0x412b85800600	            sub eax, dword [r13 + 0x680]	      4328	intel_display.c	FUNCTION_130	CALL_24
0x4006db1	    0x81e2fffff8ff	                     and edx, 0xfff8ffff	      4327	intel_display.c	FUNCTION_130
0x4006db7	        0x8954240c	              mov dword [rsp + 0xc], edx	      4327	intel_display.c	FUNCTION_130
0x4006dbb	    0x418b956c0600	           mov edx, dword [r13 + 0x66c] 	      4328	intel_display.c	FUNCTION_130	CALL_24
0x4006dc2	    0x8db410080007	          lea esi, [rax + rdx + 0x70008]	      4328	intel_display.c	FUNCTION_130	CALL_24
0x4006dc9	      0xba01000000	                              mov edx, 1	      4328	intel_display.c	FUNCTION_130	CALL_24
0x4006dce	      0xe800000000	                          call 0x4006dd3	      4328	intel_display.c	FUNCTION_130	CALL_24
0x4006dd3	      0x25e0000000	                           and eax, 0xe0	      4329	intel_display.c	FUNCTION_130	CALL_25
0x4006dd8	      0xb901000000	                              mov ecx, 1	      4329	intel_display.c	FUNCTION_130	CALL_25
0x4006ddd	          0x4c89ef	                            mov rdi, r13	      4329	intel_display.c	FUNCTION_130	CALL_25
0x4006de0	            0x89c2	                            mov edx, eax	      4329	intel_display.c	FUNCTION_130	CALL_25
0x4006de2	        0x8b742408	                mov esi, dword [rsp + 8]	      4329	intel_display.c	FUNCTION_130	CALL_25
0x4006de6	    0x498b85180800	           mov rax, qword [r13 + 0x818] 	      4329	intel_display.c	FUNCTION_130	CALL_25
0x4006ded	          0xc1e20b	                            shl edx, 0xb	      4329	intel_display.c	FUNCTION_130	CALL_25
0x4006df0	         0xb54240c	               or edx, dword [rsp + 0xc]	      4329	intel_display.c	FUNCTION_130	CALL_25
0x4006df4	      0xe800000000	                          call 0x4006df9	      4329	intel_display.c	FUNCTION_130	CALL_25
0x4006df9	          0x4c89ef	                            mov rdi, r13	      4331	intel_display.c	FUNCTION_130	CALL_26
0x4006dfc	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      4331	intel_display.c	FUNCTION_130	CALL_26
0x4006e03	            0x31d2	                            xor edx, edx	      4331	intel_display.c	FUNCTION_130	CALL_26
0x4006e05	        0x8b742408	                mov esi, dword [rsp + 8]	      4331	intel_display.c	FUNCTION_130	CALL_26
0x4006e09	      0xe800000000	                          call 0x4006e0e	      4331	intel_display.c	FUNCTION_130	CALL_26
0x4006e0e	      0xbfbc8d0600	                        mov edi, 0x68dbc	      4332	intel_display.c	FUNCTION_130	CALL_27
0x4006e13	      0xe800000000	                          call 0x4006e18	      4332	intel_display.c	FUNCTION_130	CALL_27
0x4006e18	      0xe95bfbffff	                           jmp 0x4006978	      4332	intel_display.c	FUNCTION_130	CALL_27
0x4006e1d	            0x31d2	                            xor edx, edx	      5621	intel_display.c	FUNCTION_170	IF_1	CALL_3
0x4006e1f	          0x4489e6	                           mov esi, r12d	      5621	intel_display.c	FUNCTION_170	IF_1	CALL_3
0x4006e22	          0x4889ef	                            mov rdi, rbp	      5621	intel_display.c	FUNCTION_170	IF_1	CALL_3
0x4006e25	      0xe800000000	                          call 0x4006e2a	      5621	intel_display.c	FUNCTION_170	IF_1	CALL_3
0x4006e2a	            0x31d2	                            xor edx, edx	      5622	intel_display.c	FUNCTION_170	IF_1	CALL_4
0x4006e2c	          0x4489e6	                           mov esi, r12d	      5622	intel_display.c	FUNCTION_170	IF_1	CALL_4
0x4006e2f	          0x4889ef	                            mov rdi, rbp	      5622	intel_display.c	FUNCTION_170	IF_1	CALL_4
0x4006e32	      0xe800000000	                          call 0x4006e37	      5622	intel_display.c	FUNCTION_170	IF_1	CALL_4
0x4006e37	      0xe9e9faffff	                           jmp 0x4006925	      5622	intel_display.c	FUNCTION_170	IF_1	CALL_4
0x4006e3c	      0x418d742441	                   lea esi, [r12 + 0x41]	      1777	intel_display.c	FUNCTION_59	CALL_9
0x4006e41	    0x48c7c7000000	                              mov rdi, 0	      1777	intel_display.c	FUNCTION_59	CALL_9
0x4006e48	      0xe800000000	                          call 0x4006e4d	      1777	intel_display.c	FUNCTION_59	CALL_9
0x4006e4d	      0xe9aafcffff	                           jmp 0x4006afc	      1777	intel_display.c	FUNCTION_59	CALL_9
0x4006e52	    0x83bdf8550000	            cmp dword [rbp + 0x55f8], 2 	      1310	intel_display.c	FUNCTION_42	IF_2	CALL_1
0x4006e59	     0xf849c010000	                            je 0x4006ffb	      1310	intel_display.c	FUNCTION_42	IF_2	CALL_1
0x4006e5f	          0x4489e2	                           mov edx, r12d	      1314	intel_display.c	FUNCTION_42	ELSE_1	IF_4	CALL_3
0x4006e62	      0x2500000040	                     and eax, 0x40000000	      1314	intel_display.c	FUNCTION_42	ELSE_1	IF_4	CALL_3
0x4006e67	          0xc1e21e	                           shl edx, 0x1e	      1314	intel_display.c	FUNCTION_42	ELSE_1	IF_4	CALL_3
0x4006e6a	            0x39d0	                            cmp eax, edx	      1314	intel_display.c	FUNCTION_42	ELSE_1	IF_4	CALL_3
0x4006e6c	     0xf85eefbffff	                           jne 0x4006a60	      1314	intel_display.c	FUNCTION_42	ELSE_1	IF_4	CALL_3
0x4006e72	    0x803d00000000	                cmp byte [0x04006e79], 0	      1377	intel_display.c	FUNCTION_46	CALL_10
0x4006e79	      0x418d742441	                   lea esi, [r12 + 0x41]	      1377	intel_display.c	FUNCTION_46	CALL_10
0x4006e7e	    0x48c7c7000000	                              mov rdi, 0	      1377	intel_display.c	FUNCTION_46	CALL_10
0x4006e85	     0xf8594010000	                           jne 0x400701f	      1377	intel_display.c	FUNCTION_46	CALL_10
0x4006e8b	      0xe800000000	                          call 0x4006e90	      1377	intel_display.c	FUNCTION_46	CALL_10
0x4006e90	      0xe9cbfbffff	                           jmp 0x4006a60	      1377	intel_display.c	FUNCTION_46	CALL_10
0x4006e95	    0x83bdf8550000	            cmp dword [rbp + 0x55f8], 2 	      1325	intel_display.c	FUNCTION_43	IF_2	CALL_1
0x4006e9c	     0xf8441010000	                            je 0x4006fe3	      1325	intel_display.c	FUNCTION_43	IF_2	CALL_1
0x4006ea2	          0x4489e2	                           mov edx, r12d	      1329	intel_display.c	FUNCTION_43	ELSE_1	IF_4	CALL_3
0x4006ea5	      0x2500000040	                     and eax, 0x40000000	      1329	intel_display.c	FUNCTION_43	ELSE_1	IF_4	CALL_3
0x4006eaa	          0xc1e21e	                           shl edx, 0x1e	      1329	intel_display.c	FUNCTION_43	ELSE_1	IF_4	CALL_3
0x4006ead	            0x39d0	                            cmp eax, edx	      1329	intel_display.c	FUNCTION_43	ELSE_1	IF_4	CALL_3
0x4006eaf	     0xf858afbffff	                           jne 0x4006a3f	      1329	intel_display.c	FUNCTION_43	ELSE_1	IF_4	CALL_3
0x4006eb5	    0x803d00000000	                cmp byte [0x04006ebc], 0	      1372	intel_display.c	FUNCTION_46	CALL_6
0x4006ebc	      0x418d742441	                   lea esi, [r12 + 0x41]	      1372	intel_display.c	FUNCTION_46	CALL_6
0x4006ec1	    0x48c7c7000000	                              mov rdi, 0	      1372	intel_display.c	FUNCTION_46	CALL_6
0x4006ec8	     0xf8545010000	                           jne 0x4007013	      1372	intel_display.c	FUNCTION_46	CALL_6
0x4006ece	      0xe800000000	                          call 0x4006ed3	      1372	intel_display.c	FUNCTION_46	CALL_6
0x4006ed3	      0xe967fbffff	                           jmp 0x4006a3f	      1372	intel_display.c	FUNCTION_46	CALL_6
0x4006ed8	    0x458dae64000f	               lea r13d, [r14 + 0xf0064]	      1782	intel_display.c	FUNCTION_59	IF_2	CALL_12
0x4006edf	      0xba01000000	                              mov edx, 1	      1782	intel_display.c	FUNCTION_59	IF_2	CALL_12
0x4006ee4	          0x4889ef	                            mov rdi, rbp	      1782	intel_display.c	FUNCTION_59	IF_2	CALL_12
0x4006ee7	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	      1782	intel_display.c	FUNCTION_59	IF_2	CALL_12
0x4006eee	          0x4489ee	                           mov esi, r13d	      1782	intel_display.c	FUNCTION_59	IF_2	CALL_12
0x4006ef1	      0xe800000000	                          call 0x4006ef6	      1782	intel_display.c	FUNCTION_59	IF_2	CALL_12
0x4006ef6	      0x25ffffff7f	                     and eax, 0x7fffffff	      1784	intel_display.c	FUNCTION_59	IF_2	CALL_13
0x4006efb	      0xb901000000	                              mov ecx, 1	      1784	intel_display.c	FUNCTION_59	IF_2	CALL_13
0x4006f00	          0x4489ee	                           mov esi, r13d	      1784	intel_display.c	FUNCTION_59	IF_2	CALL_13
0x4006f03	            0x89c2	                            mov edx, eax	      1784	intel_display.c	FUNCTION_59	IF_2	CALL_13
0x4006f05	          0x4889ef	                            mov rdi, rbp	      1784	intel_display.c	FUNCTION_59	IF_2	CALL_13
0x4006f08	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	      1784	intel_display.c	FUNCTION_59	IF_2	CALL_13
0x4006f0f	      0xe800000000	                          call 0x4006f14	      1784	intel_display.c	FUNCTION_59	IF_2	CALL_13
0x4006f14	    0x83bdf8550000	            cmp dword [rbp + 0x55f8], 2 	      5642	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_13
0x4006f1b	     0xf85e8fbffff	                           jne 0x4006b09	      5642	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_13
0x4006f21	    0x4181c600030e	                       add r14d, 0xe0300	      5647	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_14
0x4006f28	          0x4889ef	                            mov rdi, rbp	      5648	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_15
0x4006f2b	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	      5648	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_15
0x4006f32	          0x4489f6	                           mov esi, r14d	      5648	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_15
0x4006f35	      0xba01000000	                              mov edx, 1	      5648	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_15
0x4006f3a	      0xe800000000	                          call 0x4006f3f	      5648	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_15
0x4006f3f	      0x25ffffff1f	                     and eax, 0x1fffffff	      5649	intel_display.c	FUNCTION_170	IF_3	IF_4
0x4006f44	      0xb901000000	                              mov ecx, 1	      5652	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_16
0x4006f49	          0x4489f6	                           mov esi, r14d	      5652	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_16
0x4006f4c	            0x89c2	                            mov edx, eax	      5649	intel_display.c	FUNCTION_170	IF_3	IF_4
0x4006f4e	          0x4889ef	                            mov rdi, rbp	      5652	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_16
0x4006f51	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	      5652	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_16
0x4006f58	    0x81ca00000060	                      or edx, 0x60000000	      5652	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_16
0x4006f5e	      0xe800000000	                          call 0x4006f63	      5652	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_16
0x4006f63	          0x4889ef	                            mov rdi, rbp	      5655	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_17
0x4006f66	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	      5655	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_17
0x4006f6d	      0xba01000000	                              mov edx, 1	      5655	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_17
0x4006f72	      0xbe00700c00	                        mov esi, 0xc7000	      5655	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_17
0x4006f77	      0xe800000000	                          call 0x4006f7c	      5655	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_17
0x4006f7c	    0x428d3ca50000	                        lea edi, [r12*4]	      5656	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_19
0x4006f84	      0xbe01000000	                              mov esi, 1	      5657	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_20
0x4006f89	    0x4c8b85180800	            mov r8, qword [rbp + 0x818] 	      5657	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_20
0x4006f90	            0x89f2	                            mov edx, esi	      5657	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_20
0x4006f92	          0x8d4f03	                      lea ecx, [rdi + 3]	      5657	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_20
0x4006f95	            0xd3e2	                             shl edx, cl	      5657	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_20
0x4006f97	            0x89f9	                            mov ecx, edi	      5657	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_20
0x4006f99	          0x4889ef	                            mov rdi, rbp	      5657	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_20
0x4006f9c	            0xd3e6	                             shl esi, cl	      5657	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_20
0x4006f9e	      0xb901000000	                              mov ecx, 1	      5657	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_20
0x4006fa3	             0x9d6	                             or esi, edx	      5657	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_20
0x4006fa5	            0xf7d6	                                 not esi	      5657	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_20
0x4006fa7	            0x21c6	                            and esi, eax	      5657	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_20
0x4006fa9	            0x89f2	                            mov edx, esi	      5657	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_20
0x4006fab	      0xbe00700c00	                        mov esi, 0xc7000	      5657	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_20
0x4006fb0	      0xe800000000	                          call 0x4006fb5	      5657	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_20
0x4006fb5	      0xe94ffbffff	                           jmp 0x4006b09	      5657	intel_display.c	FUNCTION_170	IF_3	IF_4	CALL_20
0x4006fba	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      4308	intel_display.c	FUNCTION_130	CALL_16
0x4006fbe	    0x498b85180800	           mov rax, qword [r13 + 0x818] 	      4308	intel_display.c	FUNCTION_130	CALL_16
0x4006fc5	      0xba02000000	                              mov edx, 2	      4308	intel_display.c	FUNCTION_130	CALL_16
0x4006fca	          0x4c89ef	                            mov rdi, r13	      4308	intel_display.c	FUNCTION_130	CALL_16
0x4006fcd	    0x8d348d0c200c	              lea esi, [rcx*4 + 0xc200c]	      4308	intel_display.c	FUNCTION_130	CALL_16
0x4006fd4	      0xb901000000	                              mov ecx, 1	      4308	intel_display.c	FUNCTION_130	CALL_16
0x4006fd9	      0xe800000000	                          call 0x4006fde	      4308	intel_display.c	FUNCTION_130	CALL_16
0x4006fde	      0xe94efdffff	                           jmp 0x4006d31	      4308	intel_display.c	FUNCTION_130	CALL_16
0x4006fe3	          0x4489e2	                           mov edx, r12d	      1326	intel_display.c	FUNCTION_43	IF_2	IF_3	CALL_2
0x4006fe6	      0x2500000060	                     and eax, 0x60000000	      1326	intel_display.c	FUNCTION_43	IF_2	IF_3	CALL_2
0x4006feb	          0xc1e21d	                           shl edx, 0x1d	      1326	intel_display.c	FUNCTION_43	IF_2	IF_3	CALL_2
0x4006fee	            0x39d0	                            cmp eax, edx	      1326	intel_display.c	FUNCTION_43	IF_2	IF_3	CALL_2
0x4006ff0	     0xf8549faffff	                           jne 0x4006a3f	      1326	intel_display.c	FUNCTION_43	IF_2	IF_3	CALL_2
0x4006ff6	      0xe9bafeffff	                           jmp 0x4006eb5	      1326	intel_display.c	FUNCTION_43	IF_2	IF_3	CALL_2
0x4006ffb	          0x4489e2	                           mov edx, r12d	      1311	intel_display.c	FUNCTION_42	IF_2	IF_3	CALL_2
0x4006ffe	      0x2500000060	                     and eax, 0x60000000	      1311	intel_display.c	FUNCTION_42	IF_2	IF_3	CALL_2
0x4007003	          0xc1e21d	                           shl edx, 0x1d	      1311	intel_display.c	FUNCTION_42	IF_2	IF_3	CALL_2
0x4007006	            0x39d0	                            cmp eax, edx	      1311	intel_display.c	FUNCTION_42	IF_2	IF_3	CALL_2
0x4007008	     0xf8552faffff	                           jne 0x4006a60	      1311	intel_display.c	FUNCTION_42	IF_2	IF_3	CALL_2
0x400700e	      0xe95ffeffff	                           jmp 0x4006e72	      1311	intel_display.c	FUNCTION_42	IF_2	IF_3	CALL_2
0x4007013	      0xe800000000	                          call 0x4007018	      1372	intel_display.c	FUNCTION_46	CALL_6
0x4007018	             0xf0b	                                     ud2	      1372	intel_display.c	FUNCTION_46	CALL_6
0x400701a	      0xe920faffff	                           jmp 0x4006a3f	      1372	intel_display.c	FUNCTION_46	CALL_6
0x400701f	      0xe800000000	                          call 0x4007024	      1377	intel_display.c	FUNCTION_46	CALL_10
0x4007024	             0xf0b	                                     ud2	      1377	intel_display.c	FUNCTION_46	CALL_10
0x4007026	      0xe935faffff	                           jmp 0x4006a60	      1377	intel_display.c	FUNCTION_46	CALL_10
ilk_pipe_pixel_rate	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,4:ELSE,0:functions,0:CALL,2	34
0x4001560	        0x4883ec08	                              sub rsp, 8	      6379	intel_display.c	FUNCTION_196
0x4001564	    0x80bf2c030000	               cmp byte [rdi + 0x32c], 0	      6389	intel_display.c	FUNCTION_196	IF_1
0x400156b	    0x8b87a8000000	            mov eax, dword [rdi + 0xa8] 	      6382	intel_display.c	FUNCTION_196
0x4001571	            0x744e	                            je 0x40015c1	      6389	intel_display.c	FUNCTION_196	IF_1
0x4001573	    0x8b8f28030000	           mov ecx, dword [rdi + 0x328] 	      6391	intel_display.c	FUNCTION_196	IF_1
0x4001579	    0x4863972c0200	        movsxd rdx, dword [rdi + 0x22c] 	      6393	intel_display.c	FUNCTION_196	IF_1
0x4001580	    0x4863b7300200	        movsxd rsi, dword [rdi + 0x230] 	      6394	intel_display.c	FUNCTION_196	IF_1
0x4001587	          0x4189c9	                            mov r9d, ecx	      6396	intel_display.c	FUNCTION_196	IF_1
0x400158a	        0x440fb7c1	                           movzx r8d, cx	      6396	intel_display.c	FUNCTION_196	IF_1
0x400158e	        0x41c1e910	                           shr r9d, 0x10	      6396	intel_display.c	FUNCTION_196	IF_1
0x4001592	          0x4c89c1	                             mov rcx, r8	      6396	intel_display.c	FUNCTION_196	IF_1
0x4001595	          0x4489cf	                            mov edi, r9d	      6396	intel_display.c	FUNCTION_196	IF_1
0x4001598	          0x4839fa	                            cmp rdx, rdi	      6396	intel_display.c	FUNCTION_196	IF_1
0x400159b	        0x480f42d7	                          cmovb rdx, rdi	      6396	intel_display.c	FUNCTION_196	IF_1
0x400159f	          0x4c39c6	                             cmp rsi, r8	      6396	intel_display.c	FUNCTION_196	IF_1
0x40015a2	        0x490f42f0	                           cmovb rsi, r8	      6396	intel_display.c	FUNCTION_196	IF_1
0x40015a6	          0x4885ff	                           test rdi, rdi	      6403	intel_display.c	FUNCTION_196	IF_1	IF_4	CALL_1
0x40015a9	            0x741b	                            je 0x40015c6	      6403	intel_display.c	FUNCTION_196	IF_1	IF_4	CALL_1
0x40015ab	          0x4d85c0	                             test r8, r8	      6403	intel_display.c	FUNCTION_196	IF_1	IF_4	CALL_1
0x40015ae	            0x7416	                            je 0x40015c6	      6403	intel_display.c	FUNCTION_196	IF_1	IF_4	CALL_1
0x40015b0	        0x480faff2	                           imul rsi, rdx	        27	math64.h	FUNCTION_623
0x40015b4	            0x31d2	                            xor edx, edx	      6406	intel_display.c	FUNCTION_196	IF_1	CALL_2
0x40015b6	        0x410fafc9	                           imul ecx, r9d	        27	math64.h	FUNCTION_623
0x40015ba	        0x480fafc6	                           imul rax, rsi	        27	math64.h	FUNCTION_623
0x40015be	          0x48f7f1	                                 div rcx	      6406	intel_display.c	FUNCTION_196	IF_1	CALL_2
0x40015c1	        0x4883c408	                              add rsp, 8	      6411	intel_display.c	FUNCTION_196
0x40015c5	              0xc3	                                     ret	      6411	intel_display.c	FUNCTION_196
0x40015c6	    0x48c7c6000000	                              mov rsi, 0	      6403	intel_display.c	FUNCTION_196	IF_1	IF_4	CALL_1
0x40015cd	    0x48c7c7000000	                              mov rdi, 0	      6403	intel_display.c	FUNCTION_196	IF_1	IF_4	CALL_1
0x40015d4	        0x89442404	                mov dword [rsp + 4], eax	      6403	intel_display.c	FUNCTION_196	IF_1	IF_4	CALL_1
0x40015d8	      0xe800000000	                          call 0x40015dd	      6403	intel_display.c	FUNCTION_196	IF_1	IF_4	CALL_1
0x40015dd	             0xf0b	                                     ud2	      6403	intel_display.c	FUNCTION_196	IF_1	IF_4	CALL_1
0x40015df	        0x8b442404	                mov eax, dword [rsp + 4]	      6403	intel_display.c	FUNCTION_196	IF_1	IF_4	CALL_1
0x40015e3	            0xebdc	                           jmp 0x40015c1	      6403	intel_display.c	FUNCTION_196	IF_1	IF_4	CALL_1
haswell_crtc_enable	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,18:ELSE,1:functions,0:CALL,48	457
0x4014080	            0x4157	                                push r15	      5484	intel_display.c	FUNCTION_168
0x4014082	            0x4156	                                push r14	      5484	intel_display.c	FUNCTION_168
0x4014084	            0x4155	                                push r13	      5484	intel_display.c	FUNCTION_168
0x4014086	            0x4154	                                push r12	      5484	intel_display.c	FUNCTION_168
0x4014088	              0x55	                                push rbp	      5484	intel_display.c	FUNCTION_168
0x4014089	              0x53	                                push rbx	      5484	intel_display.c	FUNCTION_168
0x401408a	        0x4883ec48	                           sub rsp, 0x48	      5484	intel_display.c	FUNCTION_168
0x401408e	          0x488b1f	                    mov rbx, qword [rdi]	      5485	intel_display.c	FUNCTION_168
0x4014091	    0x8b83b0040000	           mov eax, dword [rbx + 0x4b0] 	      5488	intel_display.c	FUNCTION_168
0x4014097	    0x80bbb4040000	               cmp byte [rbx + 0x4b4], 0	      5494	intel_display.c	FUNCTION_168	IF_1	CALL_4
0x401409e	          0x4c8b23	                    mov r12, qword [rbx]	      5486	intel_display.c	FUNCTION_168	CALL_1
0x40140a1	        0x8944241c	             mov dword [rsp + 0x1c], eax	      5488	intel_display.c	FUNCTION_168
0x40140a5	    0x488b83c80400	           mov rax, qword [rbx + 0x4c8] 	      5489	intel_display.c	FUNCTION_168
0x40140ac	    0x448bb03c0200	          mov r14d, dword [rax + 0x23c] 	      5489	intel_display.c	FUNCTION_168
0x40140b3	     0xf85d6030000	                           jne 0x401448f	      5494	intel_display.c	FUNCTION_168	IF_1	CALL_4
0x40140b9	        0x488d4628	                   lea rax, [rsi + 0x28]	      5494	intel_display.c	FUNCTION_168	IF_1	CALL_4
0x40140bd	        0x488d4e30	                   lea rcx, [rsi + 0x30]	      5494	intel_display.c	FUNCTION_168	IF_1	CALL_4
0x40140c1	          0x4889fd	                            mov rbp, rdi	      5494	intel_display.c	FUNCTION_168	IF_1	CALL_4
0x40140c4	          0x4989f7	                            mov r15, rsi	      5494	intel_display.c	FUNCTION_168	IF_1	CALL_4
0x40140c7	          0x4889fe	                            mov rsi, rdi	      5497	intel_display.c	FUNCTION_168	CALL_5
0x40140ca	          0x4889df	                            mov rdi, rbx	      5497	intel_display.c	FUNCTION_168	CALL_5
0x40140cd	          0x4889c2	                            mov rdx, rax	      5497	intel_display.c	FUNCTION_168	CALL_5
0x40140d0	        0x48890424	                    mov qword [rsp], rax	      5497	intel_display.c	FUNCTION_168	CALL_5
0x40140d4	      0x48894c2408	                mov qword [rsp + 8], rcx	      5497	intel_display.c	FUNCTION_168	CALL_5
0x40140d9	      0xe8522fffff	call sym.intel_encoders_pre_pll_enable.isra.105	      5497	intel_display.c	FUNCTION_168	CALL_5
0x40140de	    0x488b83c80400	           mov rax, qword [rbx + 0x4c8] 	      5499	intel_display.c	FUNCTION_168	IF_2
0x40140e5	    0x4883b8780200	              cmp qword [rax + 0x278], 0	      5499	intel_display.c	FUNCTION_168	IF_2
0x40140ed	            0x740f	                            je 0x40140fe	      5499	intel_display.c	FUNCTION_168	IF_2
0x40140ef	          0x4889df	                            mov rdi, rbx	      5500	intel_display.c	FUNCTION_168	CALL_6
0x40140f2	      0xe800000000	                          call 0x40140f7	      5500	intel_display.c	FUNCTION_168	CALL_6
0x40140f7	    0x488b83c80400	           mov rax, qword [rbx + 0x4c8] 	      5500	intel_display.c	FUNCTION_168	CALL_6
0x40140fe	    0xf78044020000	        test dword [rax + 0x244], 0x980 	      5502	intel_display.c	FUNCTION_168	IF_3	CALL_7
0x4014108	     0xf85a5030000	                           jne 0x40144b3	      5502	intel_display.c	FUNCTION_168	IF_3	CALL_7
0x401410e	        0x458d6efc	                     lea r13d, [r14 - 4]	        74	intel_display.h	FUNCTION_639
0x4014112	          0x4889df	                            mov rdi, rbx	      5506	intel_display.c	FUNCTION_168	CALL_10
0x4014115	        0x4183fd01	                             cmp r13d, 1	      5505	intel_display.c	FUNCTION_168	IF_4	CALL_9
0x4014119	     0xf86fb020000	                           jbe 0x401441a	      5505	intel_display.c	FUNCTION_168	IF_4	CALL_9
0x401411f	      0xe81cc8feff	         call sym.intel_set_pipe_timings	      5506	intel_display.c	FUNCTION_168	CALL_10
0x4014124	          0x4889df	                            mov rdi, rbx	      5508	intel_display.c	FUNCTION_168	CALL_11
0x4014127	      0xe814cbfeff	        call sym.intel_set_pipe_src_size	      5508	intel_display.c	FUNCTION_168	CALL_11
0x401412c	        0x4183fe03	                             cmp r14d, 3	      5510	intel_display.c	FUNCTION_168	IF_5
0x4014130	            0x7444	                            je 0x4014176	      5510	intel_display.c	FUNCTION_168	IF_5
0x4014132	    0x488b83c80400	           mov rax, qword [rbx + 0x4c8] 	      5512	intel_display.c	FUNCTION_168	IF_5	CALL_14
0x4014139	    0x418b8c246c06	           mov ecx, dword [r12 + 0x66c] 	      5512	intel_display.c	FUNCTION_168	IF_5	CALL_14
0x4014141	          0x4c89e7	                            mov rdi, r12	      5512	intel_display.c	FUNCTION_168	IF_5	CALL_14
0x4014144	    0x4d8b84241808	            mov r8, qword [r12 + 0x818] 	      5512	intel_display.c	FUNCTION_168	IF_5	CALL_14
0x401414c	    0x8b9010030000	           mov edx, dword [rax + 0x310] 	      5512	intel_display.c	FUNCTION_168	IF_5	CALL_14
0x4014152	    0x438b84b49806	   mov eax, dword [r12 + r14*4 + 0x698] 	      5512	intel_display.c	FUNCTION_168	IF_5	CALL_14
0x401415a	    0x412b84249806	            sub eax, dword [r12 + 0x698]	      5512	intel_display.c	FUNCTION_168	IF_5	CALL_14
0x4014162	          0x83ea01	                              sub edx, 1	      5512	intel_display.c	FUNCTION_168	IF_5	CALL_14
0x4014165	    0x8db4082c0006	          lea esi, [rax + rcx + 0x6002c]	      5512	intel_display.c	FUNCTION_168	IF_5	CALL_14
0x401416c	      0xb901000000	                              mov ecx, 1	      5512	intel_display.c	FUNCTION_168	IF_5	CALL_14
0x4014171	      0xe800000000	                          call 0x4014176	      5512	intel_display.c	FUNCTION_168	IF_5	CALL_14
0x4014176	    0x488bb3c80400	           mov rsi, qword [rbx + 0x4c8] 	      5516	intel_display.c	FUNCTION_168	IF_6
0x401417d	    0x80be38020000	               cmp byte [rsi + 0x238], 0	      5516	intel_display.c	FUNCTION_168	IF_6
0x4014184	     0xf85a9020000	                           jne 0x4014433	      5516	intel_display.c	FUNCTION_168	IF_6
0x401418a	          0x4c8b33	                    mov r14, qword [rbx]	      8238	intel_display.c	FUNCTION_244	CALL_1
0x401418d	            0x31d2	                            xor edx, edx	      8241	intel_display.c	FUNCTION_244
0x401418f	    0x8b863c020000	           mov eax, dword [rsi + 0x23c] 	      8240	intel_display.c	FUNCTION_244
0x4014195	    0x41f686660600	              test byte [r14 + 0x666], 8	      8243	intel_display.c	FUNCTION_244	IF_1	CALL_3
0x401419d	            0x740e	                            je 0x40141ad	      8243	intel_display.c	FUNCTION_244	IF_1	CALL_3
0x401419f	    0x80be4a020000	               cmp byte [rsi + 0x24a], 1	      8244	intel_display.c	FUNCTION_244	IF_1
0x40141a6	            0x19d2	                            sbb edx, edx	      8244	intel_display.c	FUNCTION_244	IF_1
0x40141a8	            0xf7d2	                                 not edx	      8244	intel_display.c	FUNCTION_244	IF_1
0x40141aa	          0x83e210	                           and edx, 0x10	      8244	intel_display.c	FUNCTION_244	IF_1
0x40141ad	            0x89d1	                            mov ecx, edx	      8247	intel_display.c	FUNCTION_244	IF_2
0x40141af	        0x4d8d0486	                   lea r8, [r14 + rax*4]	      8247	intel_display.c	FUNCTION_244	IF_2
0x40141b3	    0x4d8b8e180800	            mov r9, qword [r14 + 0x818] 	      8251	intel_display.c	FUNCTION_244	CALL_5
0x40141ba	    0x81c900006000	                        or ecx, 0x600000	      8247	intel_display.c	FUNCTION_244	IF_2
0x40141c0	    0xf6869c000000	           test byte [rsi + 0x9c], 0x10 	      8247	intel_display.c	FUNCTION_244	IF_2
0x40141c7	          0x4c89f7	                            mov rdi, r14	      8251	intel_display.c	FUNCTION_244	CALL_5
0x40141ca	    0x418b80800600	            mov eax, dword [r8 + 0x680] 	      8251	intel_display.c	FUNCTION_244	CALL_5
0x40141d1	      0x4c89442410	              mov qword [rsp + 0x10], r8	      8251	intel_display.c	FUNCTION_244	CALL_5
0x40141d6	           0xf45d1	                         cmovne edx, ecx	      8247	intel_display.c	FUNCTION_244	IF_2
0x40141d9	    0x412b86800600	            sub eax, dword [r14 + 0x680]	      8251	intel_display.c	FUNCTION_244	CALL_5
0x40141e0	    0x418b8e6c0600	           mov ecx, dword [r14 + 0x66c] 	      8251	intel_display.c	FUNCTION_244	CALL_5
0x40141e7	    0x8db408080007	          lea esi, [rax + rcx + 0x70008]	      8251	intel_display.c	FUNCTION_244	CALL_5
0x40141ee	      0xb901000000	                              mov ecx, 1	      8251	intel_display.c	FUNCTION_244	CALL_5
0x40141f3	      0xe800000000	                          call 0x40141f8	      8251	intel_display.c	FUNCTION_244	CALL_5
0x40141f8	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      8252	intel_display.c	FUNCTION_244	CALL_7
0x40141fd	    0x418b966c0600	           mov edx, dword [r14 + 0x66c] 	      8252	intel_display.c	FUNCTION_244	CALL_7
0x4014204	          0x4c89f7	                            mov rdi, r14	      8252	intel_display.c	FUNCTION_244	CALL_7
0x4014207	    0x498b8ef80700	           mov rcx, qword [r14 + 0x7f8] 	      8252	intel_display.c	FUNCTION_244	CALL_7
0x401420e	    0x418b80800600	            mov eax, dword [r8 + 0x680] 	      8252	intel_display.c	FUNCTION_244	CALL_7
0x4014215	    0x412b86800600	            sub eax, dword [r14 + 0x680]	      8252	intel_display.c	FUNCTION_244	CALL_7
0x401421c	    0x8db410080007	          lea esi, [rax + rdx + 0x70008]	      8252	intel_display.c	FUNCTION_244	CALL_7
0x4014223	            0x31d2	                            xor edx, edx	      8252	intel_display.c	FUNCTION_244	CALL_7
0x4014225	      0xe800000000	                          call 0x401422a	      8252	intel_display.c	FUNCTION_244	CALL_7
0x401422a	    0x488bb3c80400	           mov rsi, qword [rbx + 0x4c8] 	      8252	intel_display.c	FUNCTION_244	CALL_7
0x4014231	          0x488b3b	                    mov rdi, qword [rbx]	      8257	intel_display.c	FUNCTION_245	CALL_1
0x4014234	    0xf68766060000	          test byte [rdi + 0x666], 0x10 	      8261	intel_display.c	FUNCTION_245	IF_1	CALL_4
0x401423b	            0x7509	                           jne 0x4014246	      8261	intel_display.c	FUNCTION_245	IF_1	CALL_4
0x401423d	    0x80bf5c060000	               cmp byte [rdi + 0x65c], 8	      8261	intel_display.c	FUNCTION_245	IF_1	CALL_4
0x4014244	            0x767e	                           jbe 0x40142c4	      8261	intel_display.c	FUNCTION_245	IF_1	CALL_4
0x4014246	    0x8b86dc020000	           mov eax, dword [rsi + 0x2dc] 	      8264	intel_display.c	FUNCTION_245	IF_1	SWITCH_1
0x401424c	          0x83f818	                           cmp eax, 0x18	      8264	intel_display.c	FUNCTION_245	IF_1	SWITCH_1
0x401424f	     0xf84b1050000	                            je 0x4014806	      8264	intel_display.c	FUNCTION_245	IF_1	SWITCH_1
0x4014255	     0xf8e83050000	                           jle 0x40147de	      8264	intel_display.c	FUNCTION_245	IF_1	SWITCH_1
0x401425b	          0x83f81e	                           cmp eax, 0x1e	      8264	intel_display.c	FUNCTION_245	IF_1	SWITCH_1
0x401425e	     0xf8498050000	                            je 0x40147fc	      8264	intel_display.c	FUNCTION_245	IF_1	SWITCH_1
0x4014264	          0x83f824	                           cmp eax, 0x24	      8264	intel_display.c	FUNCTION_245	IF_1	SWITCH_1
0x4014267	      0xba60000000	                           mov edx, 0x60	      8275	intel_display.c	FUNCTION_245	IF_1	SWITCH_1
0x401426c	     0xf857a050000	                           jne 0x40147ec	      8264	intel_display.c	FUNCTION_245	IF_1	SWITCH_1
0x4014272	            0x89d0	                            mov eax, edx	      8283	intel_display.c	FUNCTION_245	IF_1	IF_2
0x4014274	    0x8b8f6c060000	           mov ecx, dword [rdi + 0x66c] 	      8291	intel_display.c	FUNCTION_245	IF_1	CALL_7
0x401427a	    0x4c8b87180800	            mov r8, qword [rdi + 0x818] 	      8291	intel_display.c	FUNCTION_245	IF_1	CALL_7
0x4014281	          0x83c810	                            or eax, 0x10	      8283	intel_display.c	FUNCTION_245	IF_1	IF_2
0x4014284	    0x80be4a020000	               cmp byte [rsi + 0x24a], 0	      8283	intel_display.c	FUNCTION_245	IF_1	IF_2
0x401428b	           0xf45d0	                         cmovne edx, eax	      8283	intel_display.c	FUNCTION_245	IF_1	IF_2
0x401428e	            0x89d0	                            mov eax, edx	      8286	intel_display.c	FUNCTION_245	IF_1	IF_3
0x4014290	       0xd0008000c	                       or eax, 0xc000800	      8286	intel_display.c	FUNCTION_245	IF_1	IF_3
0x4014295	    0x80be93040000	               cmp byte [rsi + 0x493], 0	      8286	intel_display.c	FUNCTION_245	IF_1	IF_3
0x401429c	           0xf45d0	                         cmovne edx, eax	      8286	intel_display.c	FUNCTION_245	IF_1	IF_3
0x401429f	    0x486383b00400	        movsxd rax, dword [rbx + 0x4b0] 	      8291	intel_display.c	FUNCTION_245	IF_1	CALL_7
0x40142a6	    0x8b8487800600	   mov eax, dword [rdi + rax*4 + 0x680] 	      8291	intel_display.c	FUNCTION_245	IF_1	CALL_7
0x40142ad	    0x2b8780060000	            sub eax, dword [rdi + 0x680]	      8291	intel_display.c	FUNCTION_245	IF_1	CALL_7
0x40142b3	    0x8db408300007	          lea esi, [rax + rcx + 0x70030]	      8291	intel_display.c	FUNCTION_245	IF_1	CALL_7
0x40142ba	      0xb901000000	                              mov ecx, 1	      8291	intel_display.c	FUNCTION_245	IF_1	CALL_7
0x40142bf	      0xe800000000	                          call 0x40142c4	      8291	intel_display.c	FUNCTION_245	IF_1	CALL_7
0x40142c4	          0x4889ef	                            mov rdi, rbp	      5526	intel_display.c	FUNCTION_168	CALL_19
0x40142c7	      0xe800000000	                          call 0x40142cc	      5526	intel_display.c	FUNCTION_168	CALL_19
0x40142cc	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5530	intel_display.c	FUNCTION_168	CALL_20
0x40142d1	        0x488b1424	                    mov rdx, qword [rsp]	      5530	intel_display.c	FUNCTION_168	CALL_20
0x40142d5	          0x4889ee	                            mov rsi, rbp	      5530	intel_display.c	FUNCTION_168	CALL_20
0x40142d8	    0xc683b4040000	               mov byte [rbx + 0x4b4], 1	      5528	intel_display.c	FUNCTION_168
0x40142df	          0x4889df	                            mov rdi, rbx	      5530	intel_display.c	FUNCTION_168	CALL_20
0x40142e2	      0xe80921ffff	call sym.intel_encoders_pre_enable.isra.97	      5530	intel_display.c	FUNCTION_168	CALL_20
0x40142e7	        0x4183fd01	                             cmp r13d, 1	      5532	intel_display.c	FUNCTION_168	IF_8	CALL_21
0x40142eb	            0x7608	                           jbe 0x40142f5	      5532	intel_display.c	FUNCTION_168	IF_8	CALL_21
0x40142ed	          0x4889ef	                            mov rdi, rbp	      5533	intel_display.c	FUNCTION_168	CALL_22
0x40142f0	      0xe800000000	                          call 0x40142f5	      5533	intel_display.c	FUNCTION_168	CALL_22
0x40142f5	    0x41f784246406	    test dword [r12 + 0x664], 0xa000000 	      5536	intel_display.c	FUNCTION_168	CALL_24
0x4014301	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5536	intel_display.c	FUNCTION_168	CALL_24
0x4014309	            0x7414	                            je 0x401431f	      5536	intel_display.c	FUNCTION_168	CALL_24
0x401430b	    0x488b83c80400	           mov rax, qword [rbx + 0x4c8] 	      5537	intel_display.c	FUNCTION_168
0x4014312	    0x80b82c030000	               cmp byte [rax + 0x32c], 0	      5536	intel_display.c	FUNCTION_168	CALL_24
0x4014319	     0xf853b010000	                           jne 0x401445a	      5536	intel_display.c	FUNCTION_168	CALL_24
0x401431f	    0x4180bc245c06	               cmp byte [r12 + 0x65c], 8	      5541	intel_display.c	FUNCTION_168	IF_10	CALL_26
0x4014328	          0x4889df	                            mov rdi, rbx	      5542	intel_display.c	FUNCTION_168	CALL_27
0x401432b	     0xf8654010000	                           jbe 0x4014485	      5541	intel_display.c	FUNCTION_168	IF_10	CALL_26
0x4014331	      0xe85ad7feff	            call sym.skylake_pfit_enable	      5542	intel_display.c	FUNCTION_168	CALL_27
0x4014336	          0x4889ef	                            mov rdi, rbp	      5550	intel_display.c	FUNCTION_168	CALL_29
0x4014339	      0xe800000000	                          call 0x401433e	      5550	intel_display.c	FUNCTION_168	CALL_29
0x401433e	          0x4889ef	                            mov rdi, rbp	      5552	intel_display.c	FUNCTION_168	CALL_30
0x4014341	      0xe800000000	                          call 0x4014346	      5552	intel_display.c	FUNCTION_168	CALL_30
0x4014346	        0x4183fd01	                             cmp r13d, 1	      5553	intel_display.c	FUNCTION_168	IF_11	CALL_31
0x401434a	            0x7608	                           jbe 0x4014354	      5553	intel_display.c	FUNCTION_168	IF_11	CALL_31
0x401434c	          0x4889ef	                            mov rdi, rbp	      5554	intel_display.c	FUNCTION_168	CALL_32
0x401434f	      0xe800000000	                          call 0x4014354	      5554	intel_display.c	FUNCTION_168	CALL_32
0x4014354	    0x498b84246055	          mov rax, qword [r12 + 0x5560] 	      5556	intel_display.c	FUNCTION_168	IF_12
0x401435c	          0x4885c0	                           test rax, rax	      5556	intel_display.c	FUNCTION_168	IF_12
0x401435f	            0x740b	                            je 0x401436c	      5556	intel_display.c	FUNCTION_168	IF_12
0x4014361	          0x4889ee	                            mov rsi, rbp	      5557	intel_display.c	FUNCTION_168	CALL_33
0x4014364	          0x4c89ff	                            mov rdi, r15	      5557	intel_display.c	FUNCTION_168	CALL_33
0x4014367	      0xe800000000	                          call 0x401436c	      5557	intel_display.c	FUNCTION_168	CALL_33
0x401436c	    0x4180bc245c06	            cmp byte [r12 + 0x65c], 0xa 	      5559	intel_display.c	FUNCTION_168	IF_13	CALL_34
0x4014375	     0xf8747010000	                            ja 0x40144c2	      5559	intel_display.c	FUNCTION_168	IF_13	CALL_34
0x401437b	        0x4183fd01	                             cmp r13d, 1	      5563	intel_display.c	FUNCTION_168	IF_14	CALL_36
0x401437f	            0x7608	                           jbe 0x4014389	      5563	intel_display.c	FUNCTION_168	IF_14	CALL_36
0x4014381	          0x4889ef	                            mov rdi, rbp	      5564	intel_display.c	FUNCTION_168	CALL_37
0x4014384	      0xe8c78bffff	              call sym.intel_enable_pipe	      5564	intel_display.c	FUNCTION_168	CALL_37
0x4014389	    0x488b83c80400	           mov rax, qword [rbx + 0x4c8] 	      5566	intel_display.c	FUNCTION_168	IF_15
0x4014390	    0x80b838020000	               cmp byte [rax + 0x238], 0	      5566	intel_display.c	FUNCTION_168	IF_15
0x4014397	     0xf8597010000	                           jne 0x4014534	      5566	intel_display.c	FUNCTION_168	IF_15
0x401439d	    0xf68045020000	              test byte [rax + 0x245], 8	      5569	intel_display.c	FUNCTION_168	IF_16	CALL_39
0x40143a4	     0xf8578010000	                           jne 0x4014522	      5569	intel_display.c	FUNCTION_168	IF_16	CALL_39
0x40143aa	          0x4889df	                            mov rdi, rbx	      5572	intel_display.c	FUNCTION_168	CALL_41
0x40143ad	      0xe8fe02ffff	         call sym.assert_vblank_disabled	      5572	intel_display.c	FUNCTION_168	CALL_41
0x40143b2	          0x4889df	                            mov rdi, rbx	      5573	intel_display.c	FUNCTION_168	CALL_42
0x40143b5	      0xe800000000	                          call 0x40143ba	      5573	intel_display.c	FUNCTION_168	CALL_42
0x40143ba	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5575	intel_display.c	FUNCTION_168	CALL_43
0x40143bf	        0x488b1424	                    mov rdx, qword [rsp]	      5575	intel_display.c	FUNCTION_168	CALL_43
0x40143c3	          0x4889ee	                            mov rsi, rbp	      5575	intel_display.c	FUNCTION_168	CALL_43
0x40143c6	          0x4889df	                            mov rdi, rbx	      5575	intel_display.c	FUNCTION_168	CALL_43
0x40143c9	      0xe8f220ffff	  call sym.intel_encoders_enable.isra.99	      5575	intel_display.c	FUNCTION_168	CALL_43
0x40143ce	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      5577	intel_display.c	FUNCTION_168	IF_17
0x40143d2	            0x85c0	                           test eax, eax	      5577	intel_display.c	FUNCTION_168	IF_17
0x40143d4	     0xf8529010000	                           jne 0x4014503	      5577	intel_display.c	FUNCTION_168	IF_17
0x40143da	    0x41f684246606	              test byte [r12 + 0x666], 8	      5585	intel_display.c	FUNCTION_168	IF_18	CALL_46
0x40143e3	    0x8b9d68030000	           mov ebx, dword [rbp + 0x368] 	      5584	intel_display.c	FUNCTION_168
0x40143e9	     0xf84b5000000	                            je 0x40144a4	      5585	intel_display.c	FUNCTION_168	IF_18	CALL_46
0x40143ef	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      5585	intel_display.c	FUNCTION_168	IF_18	CALL_46
0x40143f2	     0xf84ac000000	                            je 0x40144a4	      5585	intel_display.c	FUNCTION_168	IF_18	CALL_46
0x40143f8	            0x89de	                            mov esi, ebx	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x40143fa	          0x4c89e7	                            mov rdi, r12	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x40143fd	      0xe800000000	                          call 0x4014402	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x4014402	        0x4883c448	                           add rsp, 0x48	      5589	intel_display.c	FUNCTION_168
0x4014406	            0x89de	                            mov esi, ebx	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x4014408	          0x4c89e7	                            mov rdi, r12	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x401440b	              0x5b	                                 pop rbx	      5589	intel_display.c	FUNCTION_168
0x401440c	              0x5d	                                 pop rbp	      5589	intel_display.c	FUNCTION_168
0x401440d	            0x415c	                                 pop r12	      5589	intel_display.c	FUNCTION_168
0x401440f	            0x415d	                                 pop r13	      5589	intel_display.c	FUNCTION_168
0x4014411	            0x415e	                                 pop r14	      5589	intel_display.c	FUNCTION_168
0x4014413	            0x415f	                                 pop r15	      5589	intel_display.c	FUNCTION_168
0x4014415	      0xe900000000	                           jmp 0x401441a	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x401441a	      0xe821c8feff	        call sym.intel_set_pipe_src_size	      5508	intel_display.c	FUNCTION_168	CALL_11
0x401441f	    0x488bb3c80400	           mov rsi, qword [rbx + 0x4c8] 	      5516	intel_display.c	FUNCTION_168	IF_6
0x4014426	    0x80be38020000	               cmp byte [rsi + 0x238], 0	      5516	intel_display.c	FUNCTION_168	IF_6
0x401442d	     0xf84fefdffff	                            je 0x4014231	      5516	intel_display.c	FUNCTION_168	IF_6
0x4014433	    0x4881c6340300	                          add rsi, 0x334	      5517	intel_display.c	FUNCTION_168	IF_6	CALL_15
0x401443a	            0x31d2	                            xor edx, edx	      5517	intel_display.c	FUNCTION_168	IF_6	CALL_15
0x401443c	          0x4889df	                            mov rdi, rbx	      5517	intel_display.c	FUNCTION_168	IF_6	CALL_15
0x401443f	      0xe84cc2feff	   call sym.intel_cpu_transcoder_set_m_n	      5517	intel_display.c	FUNCTION_168	IF_6	CALL_15
0x4014444	        0x4183fd01	                             cmp r13d, 1	      5521	intel_display.c	FUNCTION_168	IF_7	CALL_16
0x4014448	    0x488bb3c80400	           mov rsi, qword [rbx + 0x4c8] 	      5521	intel_display.c	FUNCTION_168	IF_7	CALL_16
0x401444f	     0xf86dcfdffff	                           jbe 0x4014231	      5521	intel_display.c	FUNCTION_168	IF_7	CALL_16
0x4014455	      0xe930fdffff	                           jmp 0x401418a	      5521	intel_display.c	FUNCTION_168	IF_7	CALL_16
0x401445a	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      5539	intel_display.c	FUNCTION_168	CALL_25
0x401445e	          0x4c89e7	                            mov rdi, r12	      5539	intel_display.c	FUNCTION_168	CALL_25
0x4014461	      0xba01000000	                              mov edx, 1	      5539	intel_display.c	FUNCTION_168	CALL_25
0x4014466	      0xe855c1feff	call sym.glk_pipe_scaler_clock_gating_wa	      5539	intel_display.c	FUNCTION_168	CALL_25
0x401446b	    0x4180bc245c06	               cmp byte [r12 + 0x65c], 8	      5541	intel_display.c	FUNCTION_168	IF_10	CALL_26
0x4014474	    0xc74424100100	               mov dword [rsp + 0x10], 1	      5536	intel_display.c	FUNCTION_168	CALL_24
0x401447c	          0x4889df	                            mov rdi, rbx	      5542	intel_display.c	FUNCTION_168	CALL_27
0x401447f	     0xf87acfeffff	                            ja 0x4014331	      5541	intel_display.c	FUNCTION_168	IF_10	CALL_26
0x4014485	      0xe856c0feff	           call sym.ironlake_pfit_enable	      5544	intel_display.c	FUNCTION_168	CALL_28
0x401448a	      0xe9a7feffff	                           jmp 0x4014336	      5544	intel_display.c	FUNCTION_168	CALL_28
0x401448f	    0x48c7c6000000	                              mov rsi, 0	      5494	intel_display.c	FUNCTION_168	IF_1	CALL_4
0x4014496	    0x48c7c7000000	                              mov rdi, 0	      5494	intel_display.c	FUNCTION_168	IF_1	CALL_4
0x401449d	      0xe800000000	                          call 0x40144a2	      5494	intel_display.c	FUNCTION_168	IF_1	CALL_4
0x40144a2	             0xf0b	                                     ud2	      5494	intel_display.c	FUNCTION_168	IF_1	CALL_4
0x40144a4	        0x4883c448	                           add rsp, 0x48	      5589	intel_display.c	FUNCTION_168
0x40144a8	              0x5b	                                 pop rbx	      5589	intel_display.c	FUNCTION_168
0x40144a9	              0x5d	                                 pop rbp	      5589	intel_display.c	FUNCTION_168
0x40144aa	            0x415c	                                 pop r12	      5589	intel_display.c	FUNCTION_168
0x40144ac	            0x415d	                                 pop r13	      5589	intel_display.c	FUNCTION_168
0x40144ae	            0x415e	                                 pop r14	      5589	intel_display.c	FUNCTION_168
0x40144b0	            0x415f	                                 pop r15	      5589	intel_display.c	FUNCTION_168
0x40144b2	              0xc3	                                     ret	      5589	intel_display.c	FUNCTION_168
0x40144b3	            0x31f6	                            xor esi, esi	      5503	intel_display.c	FUNCTION_168	CALL_8
0x40144b5	          0x4889df	                            mov rdi, rbx	      5503	intel_display.c	FUNCTION_168	CALL_8
0x40144b8	      0xe800000000	                          call 0x40144bd	      5503	intel_display.c	FUNCTION_168	CALL_8
0x40144bd	      0xe94cfcffff	                           jmp 0x401410e	      5503	intel_display.c	FUNCTION_168	CALL_8
0x40144c2	          0x488b3b	                    mov rdi, qword [rbx]	      5503	intel_display.c	FUNCTION_168	CALL_8
0x40144c5	      0xb818000000	                           mov eax, 0x18	      5477	intel_display.c	FUNCTION_167	CALL_5
0x40144ca	    0x8bb3b0040000	           mov esi, dword [rbx + 0x4b0] 	      5479	intel_display.c	FUNCTION_167	CALL_7
0x40144d0	              0x99	                                     cdq	      5477	intel_display.c	FUNCTION_167	CALL_5
0x40144d1	     0xfb68f700600	          movzx ecx, byte [rdi + 0x670] 	      5477	intel_display.c	FUNCTION_167	CALL_5
0x40144d8	          0xc1e60c	                            shl esi, 0xc	      5479	intel_display.c	FUNCTION_167	CALL_7
0x40144db	    0x81c63c000700	                        add esi, 0x7003c	      5479	intel_display.c	FUNCTION_167	CALL_7
0x40144e1	            0xf7f9	                                idiv ecx	      5477	intel_display.c	FUNCTION_167	CALL_5
0x40144e3	      0xb901000000	                              mov ecx, 1	      5479	intel_display.c	FUNCTION_167	CALL_7
0x40144e8	          0xc1e008	                              shl eax, 8	      5477	intel_display.c	FUNCTION_167	CALL_5
0x40144eb	       0xd02400000	                          or eax, 0x4002	      5477	intel_display.c	FUNCTION_167	CALL_5
0x40144f0	            0x89c2	                            mov edx, eax	      5477	intel_display.c	FUNCTION_167	CALL_5
0x40144f2	    0x488b87180800	           mov rax, qword [rdi + 0x818] 	      5479	intel_display.c	FUNCTION_167	CALL_7
0x40144f9	      0xe800000000	                          call 0x40144fe	      5479	intel_display.c	FUNCTION_167	CALL_7
0x40144fe	      0xe978feffff	                           jmp 0x401437b	      5479	intel_display.c	FUNCTION_167	CALL_7
0x4014503	        0x8b5c241c	            mov ebx, dword [rsp + 0x1c] 	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x4014507	          0x4c89e7	                            mov rdi, r12	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x401450a	            0x89de	                            mov esi, ebx	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x401450c	      0xe800000000	                          call 0x4014511	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x4014511	            0x31d2	                            xor edx, edx	      5579	intel_display.c	FUNCTION_168	IF_17	CALL_45
0x4014513	            0x89de	                            mov esi, ebx	      5579	intel_display.c	FUNCTION_168	IF_17	CALL_45
0x4014515	          0x4c89e7	                            mov rdi, r12	      5579	intel_display.c	FUNCTION_168	IF_17	CALL_45
0x4014518	      0xe8a3c0feff	call sym.glk_pipe_scaler_clock_gating_wa	      5579	intel_display.c	FUNCTION_168	IF_17	CALL_45
0x401451d	      0xe9b8feffff	                           jmp 0x40143da	      5579	intel_display.c	FUNCTION_168	IF_17	CALL_45
0x4014522	      0xbe01000000	                              mov esi, 1	      5570	intel_display.c	FUNCTION_168	CALL_40
0x4014527	          0x4889ef	                            mov rdi, rbp	      5570	intel_display.c	FUNCTION_168	CALL_40
0x401452a	      0xe800000000	                          call 0x401452f	      5570	intel_display.c	FUNCTION_168	CALL_40
0x401452f	      0xe976feffff	                           jmp 0x40143aa	      5570	intel_display.c	FUNCTION_168	CALL_40
0x4014534	        0x4c8b5500	                    mov r10, qword [rbp]	      5570	intel_display.c	FUNCTION_168	CALL_40
0x4014538	    0x8b853c020000	           mov eax, dword [rbp + 0x23c] 	      5570	intel_display.c	FUNCTION_168	CALL_40
0x401453e	            0x31f6	                            xor esi, esi	      4679	intel_display.c	FUNCTION_140	CALL_3
0x4014540	          0x4d8b32	                    mov r14, qword [r10]	      4676	intel_display.c	FUNCTION_140	CALL_2
0x4014543	        0x89442428	             mov dword [rsp + 0x28], eax	      4676	intel_display.c	FUNCTION_140	CALL_2
0x4014547	      0x4c89542420	             mov qword [rsp + 0x20], r10	      4676	intel_display.c	FUNCTION_140	CALL_2
0x401454c	          0x4c89f7	                            mov rdi, r14	      4679	intel_display.c	FUNCTION_140	CALL_3
0x401454f	      0xe800000000	                          call 0x4014554	      4679	intel_display.c	FUNCTION_140	CALL_3
0x4014554	      0x4c8b542420	            mov r10, qword [rsp + 0x20] 	      4679	intel_display.c	FUNCTION_140	CALL_3
0x4014559	    0x498b82c80400	           mov rax, qword [r10 + 0x4c8] 	      4379	intel_display.c	FUNCTION_133
0x4014560	          0x4d8b2a	                    mov r13, qword [r10]	      4379	intel_display.c	FUNCTION_133
0x4014563	    0x448bb8a80000	           mov r15d, dword [rax + 0xa8] 	      4379	intel_display.c	FUNCTION_133
0x401456a	          0x4c89ef	                            mov rdi, r13	      4383	intel_display.c	FUNCTION_133	CALL_2
0x401456d	      0xe800000000	                          call 0x4014572	      4383	intel_display.c	FUNCTION_133	CALL_2
0x4014572	            0x31d2	                            xor edx, edx	      4396	intel_display.c	FUNCTION_133	FOR_1	CALL_3
0x4014574	      0x4c8b542420	            mov r10, qword [rsp + 0x20] 	      4405	intel_display.c	FUNCTION_133	FOR_1	IF_1
0x4014579	          0x4489f8	                           mov eax, r15d	      4396	intel_display.c	FUNCTION_133	FOR_1	CALL_3
0x401457c	          0xc1e81f	                           shr eax, 0x1f	      4396	intel_display.c	FUNCTION_133	FOR_1	CALL_3
0x401457f	          0x4401f8	                           add eax, r15d	      4396	intel_display.c	FUNCTION_133	FOR_1	CALL_3
0x4014582	            0xd1f8	                              sar eax, 1	      4396	intel_display.c	FUNCTION_133	FOR_1	CALL_3
0x4014584	       0x500b84c0a	                      add eax, 0xa4cb800	      4396	intel_display.c	FUNCTION_133	FOR_1	CALL_3
0x4014589	          0x41f7f7	                                div r15d	      4396	intel_display.c	FUNCTION_133	FOR_1	CALL_3
0x401458c	          0x4189c0	                            mov r8d, eax	      4398	intel_display.c	FUNCTION_133	FOR_1
0x401458f	        0x41c1e806	                              shr r8d, 6	      4398	intel_display.c	FUNCTION_133	FOR_1
0x4014593	        0x4183e802	                              sub r8d, 2	      4398	intel_display.c	FUNCTION_133	FOR_1
0x4014597	        0x4183f87f	                           cmp r8d, 0x7f	      4405	intel_display.c	FUNCTION_133	FOR_1	IF_1
0x401459b	     0xf86bd020000	                           jbe 0x401485e	      4405	intel_display.c	FUNCTION_133	FOR_1	IF_1
0x40145a1	        0x438d0c3f	                    lea ecx, [r15 + r15]	      4396	intel_display.c	FUNCTION_133	FOR_1	CALL_3
0x40145a5	            0x31d2	                            xor edx, edx	      4396	intel_display.c	FUNCTION_133	FOR_1	CALL_3
0x40145a7	    0xc74424202000	           mov dword [rsp + 0x20], 0x20 	      4405	intel_display.c	FUNCTION_133	FOR_1	IF_1
0x40145af	            0x89c8	                            mov eax, ecx	      4396	intel_display.c	FUNCTION_133	FOR_1	CALL_3
0x40145b1	            0xd1f8	                              sar eax, 1	      4396	intel_display.c	FUNCTION_133	FOR_1	CALL_3
0x40145b3	       0x500b84c0a	                      add eax, 0xa4cb800	      4396	intel_display.c	FUNCTION_133	FOR_1	CALL_3
0x40145b8	            0xf7f1	                                 div ecx	      4396	intel_display.c	FUNCTION_133	FOR_1	CALL_3
0x40145ba	      0xb902000000	                              mov ecx, 2	      4405	intel_display.c	FUNCTION_133	FOR_1	IF_1
0x40145bf	          0x4189c0	                            mov r8d, eax	      4398	intel_display.c	FUNCTION_133	FOR_1
0x40145c2	        0x41c1e806	                              shr r8d, 6	      4398	intel_display.c	FUNCTION_133	FOR_1
0x40145c6	        0x4183e802	                              sub r8d, 2	      4398	intel_display.c	FUNCTION_133	FOR_1
0x40145ca	        0x4183f87f	                           cmp r8d, 0x7f	      4405	intel_display.c	FUNCTION_133	FOR_1	IF_1
0x40145ce	     0xf8677020000	                           jbe 0x401484b	      4405	intel_display.c	FUNCTION_133	FOR_1	IF_1
0x40145d4	        0x438d1400	                      lea edx, [r8 + r8]	      4410	intel_display.c	FUNCTION_133	CALL_5
0x40145d8	        0x8954242c	             mov dword [rsp + 0x2c], edx	      4410	intel_display.c	FUNCTION_133	CALL_5
0x40145dc	    0x81e200ffffff	                     and edx, 0xffffff00	      4410	intel_display.c	FUNCTION_133	CALL_5
0x40145e2	     0xf8525020000	                           jne 0x401480d	      4410	intel_display.c	FUNCTION_133	CALL_5
0x40145e8	          0x83e03f	                           and eax, 0x3f	      4399	intel_display.c	FUNCTION_133	FOR_1
0x40145eb	      0x4c89542438	             mov qword [rsp + 0x38], r10	      4399	intel_display.c	FUNCTION_133	FOR_1
0x40145f0	          0x4489fa	                           mov edx, r15d	      4415	intel_display.c	FUNCTION_133	CALL_8
0x40145f3	              0x50	                                push rax	      4415	intel_display.c	FUNCTION_133	CALL_8
0x40145f4	    0x4d8dbd404800	                 lea r15, [r13 + 0x4840]	      4422	intel_display.c	FUNCTION_133	CALL_9
0x40145fb	          0x4531c9	                            xor r9d, r9d	      4415	intel_display.c	FUNCTION_133	CALL_8
0x40145fe	    0x48c7c6000000	                              mov rsi, 0	      4415	intel_display.c	FUNCTION_133	CALL_8
0x4014605	      0xbf04000000	                              mov edi, 4	      4415	intel_display.c	FUNCTION_133	CALL_8
0x401460a	        0x89442438	             mov dword [rsp + 0x38], eax	      4415	intel_display.c	FUNCTION_133	CALL_8
0x401460e	      0xe800000000	                          call 0x4014613	      4415	intel_display.c	FUNCTION_133	CALL_8
0x4014613	          0x4c89ff	                            mov rdi, r15	      4422	intel_display.c	FUNCTION_133	CALL_9
0x4014616	      0xe800000000	                          call 0x401461b	      4422	intel_display.c	FUNCTION_133	CALL_9
0x401461b	            0x31d2	                            xor edx, edx	      4425	intel_display.c	FUNCTION_133	CALL_10
0x401461d	      0xbe00060000	                          mov esi, 0x600	      4425	intel_display.c	FUNCTION_133	CALL_10
0x4014622	          0x4c89ef	                            mov rdi, r13	      4425	intel_display.c	FUNCTION_133	CALL_10
0x4014625	      0xe800000000	                          call 0x401462a	      4425	intel_display.c	FUNCTION_133	CALL_10
0x401462a	        0x8b542434	            mov edx, dword [rsp + 0x34] 	      4427	intel_display.c	FUNCTION_133	CALL_11
0x401462e	      0x448b5c2438	           mov r11d, dword [rsp + 0x38] 	      4432	intel_display.c	FUNCTION_133	CALL_14
0x4014633	            0x2401	                               and al, 1	      4426	intel_display.c	FUNCTION_133
0x4014635	      0xbe00060000	                          mov esi, 0x600	      4432	intel_display.c	FUNCTION_133	CALL_14
0x401463a	          0x4c89ef	                            mov rdi, r13	      4432	intel_display.c	FUNCTION_133	CALL_14
0x401463d	             0x9c2	                             or edx, eax	      4427	intel_display.c	FUNCTION_133	CALL_11
0x401463f	            0x89d1	                            mov ecx, edx	      4428	intel_display.c	FUNCTION_133
0x4014641	          0x4489da	                           mov edx, r11d	      4432	intel_display.c	FUNCTION_133	CALL_14
0x4014644	          0xc1e208	                              shl edx, 8	      4432	intel_display.c	FUNCTION_133	CALL_14
0x4014647	          0x80e580	                            and ch, 0x80	      4428	intel_display.c	FUNCTION_133
0x401464a	          0x83ca01	                               or edx, 1	      4432	intel_display.c	FUNCTION_133	CALL_14
0x401464d	             0x9ca	                             or edx, ecx	      4432	intel_display.c	FUNCTION_133	CALL_14
0x401464f	            0x31c9	                            xor ecx, ecx	      4432	intel_display.c	FUNCTION_133	CALL_14
0x4014651	      0xe800000000	                          call 0x4014656	      4432	intel_display.c	FUNCTION_133	CALL_14
0x4014656	            0x31d2	                            xor edx, edx	      4435	intel_display.c	FUNCTION_133	CALL_15
0x4014658	      0xbe10060000	                          mov esi, 0x610	      4435	intel_display.c	FUNCTION_133	CALL_15
0x401465d	          0x4c89ef	                            mov rdi, r13	      4435	intel_display.c	FUNCTION_133	CALL_15
0x4014660	      0xe800000000	                          call 0x4014665	      4435	intel_display.c	FUNCTION_133	CALL_15
0x4014665	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      4438	intel_display.c	FUNCTION_133	CALL_18
0x4014669	          0x83e0ef	                     and eax, 0xffffffef	      4436	intel_display.c	FUNCTION_133	CALL_16
0x401466c	            0x31c9	                            xor ecx, ecx	      4438	intel_display.c	FUNCTION_133	CALL_18
0x401466e	      0xbe10060000	                          mov esi, 0x610	      4438	intel_display.c	FUNCTION_133	CALL_18
0x4014673	          0x4c89ef	                            mov rdi, r13	      4438	intel_display.c	FUNCTION_133	CALL_18
0x4014676	             0x9c2	                             or edx, eax	      4438	intel_display.c	FUNCTION_133	CALL_18
0x4014678	      0xe800000000	                          call 0x401467d	      4438	intel_display.c	FUNCTION_133	CALL_18
0x401467d	            0x31d2	                            xor edx, edx	      4441	intel_display.c	FUNCTION_133	CALL_19
0x401467f	      0xbe0c060000	                          mov esi, 0x60c	      4441	intel_display.c	FUNCTION_133	CALL_19
0x4014684	          0x4c89ef	                            mov rdi, r13	      4441	intel_display.c	FUNCTION_133	CALL_19
0x4014687	      0xe800000000	                          call 0x401468c	      4441	intel_display.c	FUNCTION_133	CALL_19
0x401468c	          0x83e0fe	                     and eax, 0xfffffffe	      4443	intel_display.c	FUNCTION_133	CALL_20
0x401468f	            0x31c9	                            xor ecx, ecx	      4443	intel_display.c	FUNCTION_133	CALL_20
0x4014691	      0xbe0c060000	                          mov esi, 0x60c	      4443	intel_display.c	FUNCTION_133	CALL_20
0x4014696	            0x89c2	                            mov edx, eax	      4443	intel_display.c	FUNCTION_133	CALL_20
0x4014698	          0x4c89ef	                            mov rdi, r13	      4443	intel_display.c	FUNCTION_133	CALL_20
0x401469b	      0xe800000000	                          call 0x40146a0	      4443	intel_display.c	FUNCTION_133	CALL_20
0x40146a0	          0x4c89ff	                            mov rdi, r15	      4445	intel_display.c	FUNCTION_133	CALL_21
0x40146a3	      0xe800000000	                          call 0x40146a8	      4445	intel_display.c	FUNCTION_133	CALL_21
0x40146a8	      0xbfa8920100	                        mov edi, 0x192a8	      4448	intel_display.c	FUNCTION_133	CALL_22
0x40146ad	      0xe800000000	                          call 0x40146b2	      4448	intel_display.c	FUNCTION_133	CALL_22
0x40146b2	      0xb901000000	                              mov ecx, 1	      4450	intel_display.c	FUNCTION_133	CALL_23
0x40146b7	    0x498b85180800	           mov rax, qword [r13 + 0x818] 	      4450	intel_display.c	FUNCTION_133	CALL_23
0x40146be	      0xba01000000	                              mov edx, 1	      4450	intel_display.c	FUNCTION_133	CALL_23
0x40146c3	      0xbe20600c00	                        mov esi, 0xc6020	      4450	intel_display.c	FUNCTION_133	CALL_23
0x40146c8	          0x4c89ef	                            mov rdi, r13	      4450	intel_display.c	FUNCTION_133	CALL_23
0x40146cb	      0xe800000000	                          call 0x40146d0	      4450	intel_display.c	FUNCTION_133	CALL_23
0x40146d0	      0x4c8b542440	            mov r10, qword [rsp + 0x40] 	      4684	intel_display.c	FUNCTION_140	CALL_5
0x40146d5	            0x31d2	                            xor edx, edx	      4684	intel_display.c	FUNCTION_140	CALL_5
0x40146d7	    0x498bb2c80400	           mov rsi, qword [r10 + 0x4c8] 	      4684	intel_display.c	FUNCTION_140	CALL_5
0x40146de	          0x498b3a	                    mov rdi, qword [r10]	      4684	intel_display.c	FUNCTION_140	CALL_5
0x40146e1	      0xe86a13ffff	call sym.ironlake_pch_transcoder_set_timings.isra.69	      4684	intel_display.c	FUNCTION_140	CALL_5
0x40146e6	      0x448b7c2430	           mov r15d, dword [rsp + 0x30] 	      1730	intel_display.c	FUNCTION_58	CALL_1
0x40146eb	      0xba01000000	                              mov edx, 1	      1730	intel_display.c	FUNCTION_58	CALL_1
0x40146f0	          0x4c89f7	                            mov rdi, r14	      1730	intel_display.c	FUNCTION_58	CALL_1
0x40146f3	          0x4489fe	                           mov esi, r15d	      1730	intel_display.c	FUNCTION_58	CALL_1
0x40146f6	      0xe875defeff	                  call sym.assert_fdi_tx	      1730	intel_display.c	FUNCTION_58	CALL_1
0x40146fb	      0xba01000000	                              mov edx, 1	      1731	intel_display.c	FUNCTION_58	CALL_2
0x4014700	            0x31f6	                            xor esi, esi	      1731	intel_display.c	FUNCTION_58	CALL_2
0x4014702	          0x4c89f7	                            mov rdi, r14	      1731	intel_display.c	FUNCTION_58	CALL_2
0x4014705	      0xe806dcfeff	                  call sym.assert_fdi_rx	      1731	intel_display.c	FUNCTION_58	CALL_2
0x401470a	      0xba01000000	                              mov edx, 1	      1734	intel_display.c	FUNCTION_58	CALL_4
0x401470f	      0xbe64000f00	                        mov esi, 0xf0064	      1734	intel_display.c	FUNCTION_58	CALL_4
0x4014714	          0x4c89f7	                            mov rdi, r14	      1734	intel_display.c	FUNCTION_58	CALL_4
0x4014717	    0x498b86f80700	           mov rax, qword [r14 + 0x7f8] 	      1734	intel_display.c	FUNCTION_58	CALL_4
0x401471e	      0xe800000000	                          call 0x4014723	      1734	intel_display.c	FUNCTION_58	CALL_4
0x4014723	       0xd00000080	                      or eax, 0x80000000	      1736	intel_display.c	FUNCTION_58	CALL_6
0x4014728	    0x4d8b86180800	            mov r8, qword [r14 + 0x818] 	      1736	intel_display.c	FUNCTION_58	CALL_6
0x401472f	      0xb901000000	                              mov ecx, 1	      1736	intel_display.c	FUNCTION_58	CALL_6
0x4014734	            0x89c2	                            mov edx, eax	      1736	intel_display.c	FUNCTION_58	CALL_6
0x4014736	      0xbe64000f00	                        mov esi, 0xf0064	      1736	intel_display.c	FUNCTION_58	CALL_6
0x401473b	          0x4c89f7	                            mov rdi, r14	      1736	intel_display.c	FUNCTION_58	CALL_6
0x401473e	      0xe800000000	                          call 0x4014743	      1736	intel_display.c	FUNCTION_58	CALL_6
0x4014743	          0x4489f8	                           mov eax, r15d	      1739	intel_display.c	FUNCTION_58	CALL_8
0x4014746	    0x418b966c0600	           mov edx, dword [r14 + 0x66c] 	      1739	intel_display.c	FUNCTION_58	CALL_8
0x401474d	    0x498b8ef80700	           mov rcx, qword [r14 + 0x7f8] 	      1739	intel_display.c	FUNCTION_58	CALL_8
0x4014754	    0x418b84868006	   mov eax, dword [r14 + rax*4 + 0x680] 	      1739	intel_display.c	FUNCTION_58	CALL_8
0x401475c	    0x412b86800600	            sub eax, dword [r14 + 0x680]	      1739	intel_display.c	FUNCTION_58	CALL_8
0x4014763	          0x4c89f7	                            mov rdi, r14	      1739	intel_display.c	FUNCTION_58	CALL_8
0x4014766	    0x8db410080007	          lea esi, [rax + rdx + 0x70008]	      1739	intel_display.c	FUNCTION_58	CALL_8
0x401476d	      0xba01000000	                              mov edx, 1	      1739	intel_display.c	FUNCTION_58	CALL_8
0x4014772	      0xe800000000	                          call 0x4014777	      1739	intel_display.c	FUNCTION_58	CALL_8
0x4014777	      0x2500006000	                       and eax, 0x600000	      1741	intel_display.c	FUNCTION_58	IF_1
0x401477c	      0xb901000000	                              mov ecx, 1	      1747	intel_display.c	FUNCTION_58	CALL_9
0x4014781	      0xbe08000f00	                        mov esi, 0xf0008	      1747	intel_display.c	FUNCTION_58	CALL_9
0x4014786	      0x3d00006000	                       cmp eax, 0x600000	      1743	intel_display.c	FUNCTION_58	IF_1
0x401478b	      0xb800000080	                     mov eax, 0x80000000	      1743	intel_display.c	FUNCTION_58	IF_1
0x4014790	          0x4c89f7	                            mov rdi, r14	      1747	intel_display.c	FUNCTION_58	CALL_9
0x4014793	              0x5a	                                 pop rdx	      1741	intel_display.c	FUNCTION_58	IF_1
0x4014794	      0xba00006080	                     mov edx, 0x80600000	      1743	intel_display.c	FUNCTION_58	IF_1
0x4014799	           0xf45d0	                         cmovne edx, eax	      1743	intel_display.c	FUNCTION_58	IF_1
0x401479c	    0x498b86180800	           mov rax, qword [r14 + 0x818] 	      1747	intel_display.c	FUNCTION_58	CALL_9
0x40147a3	      0xe800000000	                          call 0x40147a8	      1747	intel_display.c	FUNCTION_58	CALL_9
0x40147a8	            0x6a00	                                  push 0	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x40147aa	      0xb900000040	                     mov ecx, 0x40000000	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x40147af	    0x41b964000000	                           mov r9d, 0x64	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x40147b5	    0x41b802000000	                              mov r8d, 2	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x40147bb	      0xba00000040	                     mov edx, 0x40000000	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x40147c0	      0xbe08000f00	                        mov esi, 0xf0008	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x40147c5	          0x4c89f7	                            mov rdi, r14	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x40147c8	      0xe800000000	                          call 0x40147cd	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x40147cd	            0x85c0	                           test eax, eax	      1748	intel_display.c	FUNCTION_58	IF_2	CALL_10
0x40147cf	              0x59	                                 pop rcx	      1748	intel_display.c	FUNCTION_58	IF_2	CALL_10
0x40147d0	            0x751c	                           jne 0x40147ee	      1748	intel_display.c	FUNCTION_58	IF_2	CALL_10
0x40147d2	    0x488b83c80400	           mov rax, qword [rbx + 0x4c8] 	      1748	intel_display.c	FUNCTION_58	IF_2	CALL_10
0x40147d9	      0xe9bffbffff	                           jmp 0x401439d	      1748	intel_display.c	FUNCTION_58	IF_2	CALL_10
0x40147de	          0x83f812	                           cmp eax, 0x12	      8264	intel_display.c	FUNCTION_245	IF_1	SWITCH_1
0x40147e1	      0xba40000000	                           mov edx, 0x40	      8266	intel_display.c	FUNCTION_245	IF_1	SWITCH_1
0x40147e6	     0xf8486faffff	                            je 0x4014272	      8264	intel_display.c	FUNCTION_245	IF_1	SWITCH_1
0x40147ec	             0xf0b	                                     ud2	      8264	intel_display.c	FUNCTION_245	IF_1	SWITCH_1
0x40147ee	    0x48c7c7000000	                              mov rdi, 0	      1753	intel_display.c	FUNCTION_58	CALL_11
0x40147f5	      0xe800000000	                          call 0x40147fa	      1753	intel_display.c	FUNCTION_58	CALL_11
0x40147fa	            0xebd6	                           jmp 0x40147d2	      1753	intel_display.c	FUNCTION_58	CALL_11
0x40147fc	      0xba20000000	                           mov edx, 0x20	      8272	intel_display.c	FUNCTION_245	IF_1	SWITCH_1
0x4014801	      0xe96cfaffff	                           jmp 0x4014272	      8272	intel_display.c	FUNCTION_245	IF_1	SWITCH_1
0x4014806	            0x31d2	                            xor edx, edx	      8269	intel_display.c	FUNCTION_245	IF_1	SWITCH_1
0x4014808	      0xe965faffff	                           jmp 0x4014272	      8269	intel_display.c	FUNCTION_245	IF_1	SWITCH_1
0x401480d	    0x48c7c6000000	                              mov rsi, 0	      4410	intel_display.c	FUNCTION_133	CALL_5
0x4014814	    0x48c7c7000000	                              mov rdi, 0	      4410	intel_display.c	FUNCTION_133	CALL_5
0x401481b	        0x894c2444	             mov dword [rsp + 0x44], ecx	      4410	intel_display.c	FUNCTION_133	CALL_5
0x401481f	      0x4489442440	             mov dword [rsp + 0x40], r8d	      4410	intel_display.c	FUNCTION_133	CALL_5
0x4014824	        0x89442438	             mov dword [rsp + 0x38], eax	      4410	intel_display.c	FUNCTION_133	CALL_5
0x4014828	      0x4c89542430	             mov qword [rsp + 0x30], r10	      4410	intel_display.c	FUNCTION_133	CALL_5
0x401482d	      0xe800000000	                          call 0x4014832	      4410	intel_display.c	FUNCTION_133	CALL_5
0x4014832	             0xf0b	                                     ud2	      4410	intel_display.c	FUNCTION_133	CALL_5
0x4014834	        0x8b4c2444	            mov ecx, dword [rsp + 0x44] 	      4410	intel_display.c	FUNCTION_133	CALL_5
0x4014838	      0x448b442440	            mov r8d, dword [rsp + 0x40] 	      4410	intel_display.c	FUNCTION_133	CALL_5
0x401483d	        0x8b442438	            mov eax, dword [rsp + 0x38] 	      4410	intel_display.c	FUNCTION_133	CALL_5
0x4014841	      0x4c8b542430	            mov r10, qword [rsp + 0x30] 	      4410	intel_display.c	FUNCTION_133	CALL_5
0x4014846	      0xe99dfdffff	                           jmp 0x40145e8	      4410	intel_display.c	FUNCTION_133	CALL_5
0x401484b	      0xb901000000	                              mov ecx, 1	      4391	intel_display.c	FUNCTION_133	FOR_1
0x4014850	            0x89ce	                            mov esi, ecx	      4391	intel_display.c	FUNCTION_133	FOR_1
0x4014852	          0xc1e604	                              shl esi, 4	      4391	intel_display.c	FUNCTION_133	FOR_1
0x4014855	        0x89742420	             mov dword [rsp + 0x20], esi	      4391	intel_display.c	FUNCTION_133	FOR_1
0x4014859	      0xe976fdffff	                           jmp 0x40145d4	      4391	intel_display.c	FUNCTION_133	FOR_1
0x401485e	            0x31c9	                            xor ecx, ecx	      4391	intel_display.c	FUNCTION_133	FOR_1
0x4014860	            0xebee	                           jmp 0x4014850	      4391	intel_display.c	FUNCTION_133	FOR_1
i9xx_pfit_enable	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,8	58
0x400dd80	            0x4154	                                push r12	      5702	intel_display.c	FUNCTION_172
0x400dd82	              0x55	                                push rbp	      5702	intel_display.c	FUNCTION_172
0x400dd83	              0x53	                                push rbx	      5702	intel_display.c	FUNCTION_172
0x400dd84	    0x488bafc80400	           mov rbp, qword [rdi + 0x4c8] 	      5705	intel_display.c	FUNCTION_172
0x400dd8b	    0x8b8518030000	           mov eax, dword [rbp + 0x318] 	      5707	intel_display.c	FUNCTION_172	IF_1
0x400dd91	            0x85c0	                           test eax, eax	      5707	intel_display.c	FUNCTION_172	IF_1
0x400dd93	            0x7505	                           jne 0x400dd9a	      5707	intel_display.c	FUNCTION_172	IF_1
0x400dd95	              0x5b	                                 pop rbx	      5723	intel_display.c	FUNCTION_172
0x400dd96	              0x5d	                                 pop rbp	      5723	intel_display.c	FUNCTION_172
0x400dd97	            0x415c	                                 pop r12	      5723	intel_display.c	FUNCTION_172
0x400dd99	              0xc3	                                     ret	      5723	intel_display.c	FUNCTION_172
0x400dd9a	          0x488b1f	                    mov rbx, qword [rdi]	      5703	intel_display.c	FUNCTION_172
0x400dd9d	          0x4989fc	                            mov r12, rdi	      5703	intel_display.c	FUNCTION_172
0x400dda0	      0xba01000000	                              mov edx, 1	      5714	intel_display.c	FUNCTION_172	CALL_3
0x400dda5	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	      5714	intel_display.c	FUNCTION_172	CALL_3
0x400ddab	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      5714	intel_display.c	FUNCTION_172	CALL_3
0x400ddb2	          0x4889df	                            mov rdi, rbx	      5714	intel_display.c	FUNCTION_172	CALL_3
0x400ddb5	    0x8db130120600	                lea esi, [rcx + 0x61230]	      5714	intel_display.c	FUNCTION_172	CALL_3
0x400ddbb	      0xe800000000	                          call 0x400ddc0	      5714	intel_display.c	FUNCTION_172	CALL_3
0x400ddc0	            0x85c0	                           test eax, eax	      5714	intel_display.c	FUNCTION_172	CALL_3
0x400ddc2	     0xf889b000000	                            js 0x400de63	      5714	intel_display.c	FUNCTION_172	CALL_3
0x400ddc8	    0x418bb424b004	           mov esi, dword [r12 + 0x4b0] 	      5715	intel_display.c	FUNCTION_172	CALL_4
0x400ddd0	          0x4889df	                            mov rdi, rbx	      5715	intel_display.c	FUNCTION_172	CALL_4
0x400ddd3	            0x31d2	                            xor edx, edx	      5715	intel_display.c	FUNCTION_172	CALL_4
0x400ddd5	      0xe800000000	                          call 0x400ddda	      5715	intel_display.c	FUNCTION_172	CALL_4
0x400ddda	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	      5717	intel_display.c	FUNCTION_172	CALL_5
0x400dde0	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      5717	intel_display.c	FUNCTION_172	CALL_5
0x400dde7	          0x4889df	                            mov rdi, rbx	      5717	intel_display.c	FUNCTION_172	CALL_5
0x400ddea	    0x8b951c030000	           mov edx, dword [rbp + 0x31c] 	      5717	intel_display.c	FUNCTION_172	CALL_5
0x400ddf0	    0x8db134120600	                lea esi, [rcx + 0x61234]	      5717	intel_display.c	FUNCTION_172	CALL_5
0x400ddf6	      0xb901000000	                              mov ecx, 1	      5717	intel_display.c	FUNCTION_172	CALL_5
0x400ddfb	      0xe800000000	                          call 0x400de00	      5717	intel_display.c	FUNCTION_172	CALL_5
0x400de00	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	      5718	intel_display.c	FUNCTION_172	CALL_6
0x400de06	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      5718	intel_display.c	FUNCTION_172	CALL_6
0x400de0d	          0x4889df	                            mov rdi, rbx	      5718	intel_display.c	FUNCTION_172	CALL_6
0x400de10	    0x8b9518030000	           mov edx, dword [rbp + 0x318] 	      5718	intel_display.c	FUNCTION_172	CALL_6
0x400de16	    0x8db130120600	                lea esi, [rcx + 0x61230]	      5718	intel_display.c	FUNCTION_172	CALL_6
0x400de1c	      0xb901000000	                              mov ecx, 1	      5718	intel_display.c	FUNCTION_172	CALL_6
0x400de21	      0xe800000000	                          call 0x400de26	      5718	intel_display.c	FUNCTION_172	CALL_6
0x400de26	    0x49638424b004	        movsxd rax, dword [r12 + 0x4b0] 	      5722	intel_display.c	FUNCTION_172	CALL_8
0x400de2e	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	      5722	intel_display.c	FUNCTION_172	CALL_8
0x400de34	          0x4889df	                            mov rdi, rbx	      5722	intel_display.c	FUNCTION_172	CALL_8
0x400de37	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	      5722	intel_display.c	FUNCTION_172	CALL_8
0x400de3e	      0xb901000000	                              mov ecx, 1	      5722	intel_display.c	FUNCTION_172	CALL_8
0x400de43	    0x8b8483980600	   mov eax, dword [rbx + rax*4 + 0x698] 	      5722	intel_display.c	FUNCTION_172	CALL_8
0x400de4a	    0x2b8398060000	            sub eax, dword [rbx + 0x698]	      5722	intel_display.c	FUNCTION_172	CALL_8
0x400de50	    0x8db410200006	          lea esi, [rax + rdx + 0x60020]	      5722	intel_display.c	FUNCTION_172	CALL_8
0x400de57	            0x31d2	                            xor edx, edx	      5722	intel_display.c	FUNCTION_172	CALL_8
0x400de59	      0xe800000000	                          call 0x400de5e	      5722	intel_display.c	FUNCTION_172	CALL_8
0x400de5e	              0x5b	                                 pop rbx	      5723	intel_display.c	FUNCTION_172
0x400de5f	              0x5d	                                 pop rbp	      5723	intel_display.c	FUNCTION_172
0x400de60	            0x415c	                                 pop r12	      5723	intel_display.c	FUNCTION_172
0x400de62	              0xc3	                                     ret	      5723	intel_display.c	FUNCTION_172
0x400de63	    0x48c7c6000000	                              mov rsi, 0	      5714	intel_display.c	FUNCTION_172	CALL_3
0x400de6a	    0x48c7c7000000	                              mov rdi, 0	      5714	intel_display.c	FUNCTION_172	CALL_3
0x400de71	      0xe800000000	                          call 0x400de76	      5714	intel_display.c	FUNCTION_172	CALL_3
0x400de76	             0xf0b	                                     ud2	      5714	intel_display.c	FUNCTION_172	CALL_3
0x400de78	      0xe94bffffff	                           jmp 0x400ddc8	      5714	intel_display.c	FUNCTION_172	CALL_3
intel_set_pipe_src_size	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,3	18
0x4000c40	    0x488b8fc80400	           mov rcx, qword [rdi + 0x4c8] 	      7167	intel_display.c	FUNCTION_219	CALL_3
0x4000c47	          0x488b07	                    mov rax, qword [rdi]	      7160	intel_display.c	FUNCTION_219
0x4000c4a	    0x8bb12c020000	           mov esi, dword [rcx + 0x22c] 	      7167	intel_display.c	FUNCTION_219	CALL_3
0x4000c50	    0x8b8930020000	           mov ecx, dword [rcx + 0x230] 	      7167	intel_display.c	FUNCTION_219	CALL_3
0x4000c56	    0x4c8b80180800	            mov r8, qword [rax + 0x818] 	      7167	intel_display.c	FUNCTION_219	CALL_3
0x4000c5d	          0x8d56ff	                      lea edx, [rsi - 1]	      7167	intel_display.c	FUNCTION_219	CALL_3
0x4000c60	          0x83e901	                              sub ecx, 1	      7167	intel_display.c	FUNCTION_219	CALL_3
0x4000c63	    0x8bb06c060000	           mov esi, dword [rax + 0x66c] 	      7167	intel_display.c	FUNCTION_219	CALL_3
0x4000c69	          0xc1e210	                           shl edx, 0x10	      7167	intel_display.c	FUNCTION_219	CALL_3
0x4000c6c	             0x9ca	                             or edx, ecx	      7167	intel_display.c	FUNCTION_219	CALL_3
0x4000c6e	    0x48638fb00400	        movsxd rcx, dword [rdi + 0x4b0] 	      7167	intel_display.c	FUNCTION_219	CALL_3
0x4000c75	          0x4889c7	                            mov rdi, rax	      7167	intel_display.c	FUNCTION_219	CALL_3
0x4000c78	    0x8b8c88980600	   mov ecx, dword [rax + rcx*4 + 0x698] 	      7167	intel_display.c	FUNCTION_219	CALL_3
0x4000c7f	    0x2b8898060000	            sub ecx, dword [rax + 0x698]	      7167	intel_display.c	FUNCTION_219	CALL_3
0x4000c85	    0x8db4311c0006	          lea esi, [rcx + rsi + 0x6001c]	      7167	intel_display.c	FUNCTION_219	CALL_3
0x4000c8c	      0xb901000000	                              mov ecx, 1	      7167	intel_display.c	FUNCTION_219	CALL_3
0x4000c91	      0xe800000000	                          call 0x4000c96	      7167	intel_display.c	FUNCTION_219	CALL_3
0x4000c96	            0xf3c3	                                     ret	      7167	intel_display.c	FUNCTION_219	CALL_3
i9xx_plane_get_hw_state	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,6	29
0x4002650	            0x4154	                                push r12	      3361	intel_display.c	FUNCTION_106
0x4002652	              0x55	                                push rbp	      3361	intel_display.c	FUNCTION_106
0x4002653	              0x53	                                push rbx	      3361	intel_display.c	FUNCTION_106
0x4002654	    0x448ba7880200	          mov r12d, dword [rdi + 0x288] 	      3373	intel_display.c	FUNCTION_106	CALL_2
0x400265b	          0x488b2f	                    mov rbp, qword [rdi]	      3362	intel_display.c	FUNCTION_106	CALL_1
0x400265e	    0x8b9f80020000	           mov ebx, dword [rdi + 0x280] 	      3364	intel_display.c	FUNCTION_106
0x4002664	          0x4489e6	                           mov esi, r12d	      3374	intel_display.c	FUNCTION_106	IF_1	CALL_3
0x4002667	          0x4889ef	                            mov rdi, rbp	      3374	intel_display.c	FUNCTION_106	IF_1	CALL_3
0x400266a	      0xe800000000	                          call 0x400266f	      3374	intel_display.c	FUNCTION_106	IF_1	CALL_3
0x400266f	            0x84c0	                             test al, al	      3374	intel_display.c	FUNCTION_106	IF_1	CALL_3
0x4002671	            0x7440	                            je 0x40026b3	      3374	intel_display.c	FUNCTION_106	IF_1	CALL_3
0x4002673	    0x8b849d800600	   mov eax, dword [rbp + rbx*4 + 0x680] 	      3377	intel_display.c	FUNCTION_106	CALL_5
0x400267a	    0x2b8580060000	            sub eax, dword [rbp + 0x680]	      3377	intel_display.c	FUNCTION_106	CALL_5
0x4002680	          0x4889ef	                            mov rdi, rbp	      3377	intel_display.c	FUNCTION_106	CALL_5
0x4002683	    0x8b956c060000	           mov edx, dword [rbp + 0x66c] 	      3377	intel_display.c	FUNCTION_106	CALL_5
0x4002689	    0x488b8df80700	           mov rcx, qword [rbp + 0x7f8] 	      3377	intel_display.c	FUNCTION_106	CALL_5
0x4002690	    0x8db410800107	          lea esi, [rax + rdx + 0x70180]	      3377	intel_display.c	FUNCTION_106	CALL_5
0x4002697	      0xba01000000	                              mov edx, 1	      3377	intel_display.c	FUNCTION_106	CALL_5
0x400269c	      0xe800000000	                          call 0x40026a1	      3377	intel_display.c	FUNCTION_106	CALL_5
0x40026a1	          0xc1e81f	                           shr eax, 0x1f	      3377	intel_display.c	FUNCTION_106	CALL_5
0x40026a4	          0x4489e6	                           mov esi, r12d	      3379	intel_display.c	FUNCTION_106	CALL_6
0x40026a7	          0x4889ef	                            mov rdi, rbp	      3379	intel_display.c	FUNCTION_106	CALL_6
0x40026aa	            0x89c3	                            mov ebx, eax	      3377	intel_display.c	FUNCTION_106	CALL_5
0x40026ac	      0xe800000000	                          call 0x40026b1	      3379	intel_display.c	FUNCTION_106	CALL_6
0x40026b1	            0x89d8	                            mov eax, ebx	      3381	intel_display.c	FUNCTION_106
0x40026b3	              0x5b	                                 pop rbx	      3382	intel_display.c	FUNCTION_106
0x40026b4	              0x5d	                                 pop rbp	      3382	intel_display.c	FUNCTION_106
0x40026b5	            0x415c	                                 pop r12	      3382	intel_display.c	FUNCTION_106
0x40026b7	              0xc3	                                     ret	      3382	intel_display.c	FUNCTION_106
intel_modeset_init_hw	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,3	17
0x4017c40	              0x53	                                push rbx	     14510	intel_display.c	FUNCTION_400
0x4017c41	          0x4889fb	                            mov rbx, rdi	     14510	intel_display.c	FUNCTION_400
0x4017c44	      0xe800000000	                          call 0x4017c49	     14513	intel_display.c	FUNCTION_400	CALL_2
0x4017c49	    0x488dbb145500	                 lea rdi, [rbx + 0x5514]	     14514	intel_display.c	FUNCTION_400	CALL_3
0x4017c50	    0x48c7c6000000	                              mov rsi, 0	     14514	intel_display.c	FUNCTION_400	CALL_3
0x4017c57	      0xe800000000	                          call 0x4017c5c	     14514	intel_display.c	FUNCTION_400	CALL_3
0x4017c5c	    0x488b8b145500	          mov rcx, qword [rbx + 0x5514] 	     14515	intel_display.c	FUNCTION_400
0x4017c63	    0x488b931c5500	          mov rdx, qword [rbx + 0x551c] 	     14515	intel_display.c	FUNCTION_400
0x4017c6a	    0x8b8324550000	          mov eax, dword [rbx + 0x5524] 	     14515	intel_display.c	FUNCTION_400
0x4017c70	    0x48898b005500	          mov qword [rbx + 0x5500], rcx 	     14515	intel_display.c	FUNCTION_400
0x4017c77	    0x488993085500	          mov qword [rbx + 0x5508], rdx 	     14515	intel_display.c	FUNCTION_400
0x4017c7e	    0x898310550000	          mov dword [rbx + 0x5510], eax 	     14515	intel_display.c	FUNCTION_400
0x4017c84	    0x48898bec5400	          mov qword [rbx + 0x54ec], rcx 	     14515	intel_display.c	FUNCTION_400
0x4017c8b	    0x488993f45400	          mov qword [rbx + 0x54f4], rdx 	     14515	intel_display.c	FUNCTION_400
0x4017c92	    0x8983fc540000	          mov dword [rbx + 0x54fc], eax 	     14515	intel_display.c	FUNCTION_400
0x4017c98	              0x5b	                                 pop rbx	     14516	intel_display.c	FUNCTION_400
0x4017c99	              0xc3	                                     ret	     14516	intel_display.c	FUNCTION_400
skylake_pfit_enable	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,2:ELSE,0:functions,0:CALL,8	48
0x4001a90	    0x488b87c80400	           mov rax, qword [rdi + 0x4c8] 	      4881	intel_display.c	FUNCTION_146
0x4001a97	    0x80b82c030000	               cmp byte [rax + 0x32c], 0	      4883	intel_display.c	FUNCTION_146	IF_1
0x4001a9e	     0xf84af000000	                            je 0x4001b53	      4883	intel_display.c	FUNCTION_146	IF_1
0x4001aa4	            0x4155	                                push r13	      4876	intel_display.c	FUNCTION_146
0x4001aa6	            0x4154	                                push r12	      4876	intel_display.c	FUNCTION_146
0x4001aa8	              0x55	                                push rbp	      4876	intel_display.c	FUNCTION_146
0x4001aa9	              0x53	                                push rbx	      4876	intel_display.c	FUNCTION_146
0x4001aaa	          0x4889fb	                            mov rbx, rdi	      4876	intel_display.c	FUNCTION_146
0x4001aad	    0x8b8864030000	           mov ecx, dword [rax + 0x364] 	      4886	intel_display.c	FUNCTION_146	IF_1	IF_2	CALL_2
0x4001ab3	            0x85c9	                           test ecx, ecx	      4886	intel_display.c	FUNCTION_146	IF_1	IF_2	CALL_2
0x4001ab5	     0xf889a000000	                            js 0x4001b55	      4886	intel_display.c	FUNCTION_146	IF_1	IF_2	CALL_2
0x4001abb	    0x448ba7b00400	          mov r12d, dword [rdi + 0x4b0] 	      4890	intel_display.c	FUNCTION_146	IF_1	CALL_4
0x4001ac2	          0x4863d1	                         movsxd rdx, ecx	      4890	intel_display.c	FUNCTION_146	IF_1	CALL_4
0x4001ac5	          0x488b2f	                    mov rbp, qword [rdi]	      4877	intel_display.c	FUNCTION_146
0x4001ac8	    0x8b94d0540300	   mov edx, dword [rax + rdx*8 + 0x354] 	      4890	intel_display.c	FUNCTION_146	IF_1	CALL_4
0x4001acf	          0xc1e108	                              shl ecx, 8	      4890	intel_display.c	FUNCTION_146	IF_1	CALL_4
0x4001ad2	          0x4189cd	                           mov r13d, ecx	      4890	intel_display.c	FUNCTION_146	IF_1	CALL_4
0x4001ad5	        0x41c1e40b	                           shl r12d, 0xb	      4890	intel_display.c	FUNCTION_146	IF_1	CALL_4
0x4001ad9	    0x4c8b85180800	            mov r8, qword [rbp + 0x818] 	      4890	intel_display.c	FUNCTION_146	IF_1	CALL_4
0x4001ae0	          0x4889ef	                            mov rdi, rbp	      4890	intel_display.c	FUNCTION_146	IF_1	CALL_4
0x4001ae3	    0x428db4218081	          lea esi, [rcx + r12 + 0x68180]	      4890	intel_display.c	FUNCTION_146	IF_1	CALL_4
0x4001aeb	    0x81ca00000080	                      or edx, 0x80000000	      4890	intel_display.c	FUNCTION_146	IF_1	CALL_4
0x4001af1	      0xb901000000	                              mov ecx, 1	      4890	intel_display.c	FUNCTION_146	IF_1	CALL_4
0x4001af6	      0xe800000000	                          call 0x4001afb	      4890	intel_display.c	FUNCTION_146	IF_1	CALL_4
0x4001afb	    0x488b93c80400	           mov rdx, qword [rbx + 0x4c8] 	      4892	intel_display.c	FUNCTION_146	IF_1	CALL_6
0x4001b02	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	      4892	intel_display.c	FUNCTION_146	IF_1	CALL_6
0x4001b09	    0x438db4257081	          lea esi, [r13 + r12 + 0x68170]	      4892	intel_display.c	FUNCTION_146	IF_1	CALL_6
0x4001b11	      0xb901000000	                              mov ecx, 1	      4892	intel_display.c	FUNCTION_146	IF_1	CALL_6
0x4001b16	          0x4889ef	                            mov rdi, rbp	      4892	intel_display.c	FUNCTION_146	IF_1	CALL_6
0x4001b19	    0x8b9224030000	           mov edx, dword [rdx + 0x324] 	      4892	intel_display.c	FUNCTION_146	IF_1	CALL_6
0x4001b1f	      0xe800000000	                          call 0x4001b24	      4892	intel_display.c	FUNCTION_146	IF_1	CALL_6
0x4001b24	    0x488b93c80400	           mov rdx, qword [rbx + 0x4c8] 	      4893	intel_display.c	FUNCTION_146	IF_1	CALL_8
0x4001b2b	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	      4893	intel_display.c	FUNCTION_146	IF_1	CALL_8
0x4001b32	    0x438db4257481	          lea esi, [r13 + r12 + 0x68174]	      4893	intel_display.c	FUNCTION_146	IF_1	CALL_8
0x4001b3a	      0xb901000000	                              mov ecx, 1	      4893	intel_display.c	FUNCTION_146	IF_1	CALL_8
0x4001b3f	          0x4889ef	                            mov rdi, rbp	      4893	intel_display.c	FUNCTION_146	IF_1	CALL_8
0x4001b42	    0x8b9228030000	           mov edx, dword [rdx + 0x328] 	      4893	intel_display.c	FUNCTION_146	IF_1	CALL_8
0x4001b48	      0xe800000000	                          call 0x4001b4d	      4893	intel_display.c	FUNCTION_146	IF_1	CALL_8
0x4001b4d	              0x5b	                                 pop rbx	      4895	intel_display.c	FUNCTION_146
0x4001b4e	              0x5d	                                 pop rbp	      4895	intel_display.c	FUNCTION_146
0x4001b4f	            0x415c	                                 pop r12	      4895	intel_display.c	FUNCTION_146
0x4001b51	            0x415d	                                 pop r13	      4895	intel_display.c	FUNCTION_146
0x4001b53	            0xf3c3	                                     ret	      4895	intel_display.c	FUNCTION_146
0x4001b55	    0x48c7c6000000	                              mov rsi, 0	      4886	intel_display.c	FUNCTION_146	IF_1	IF_2	CALL_2
0x4001b5c	    0x48c7c7000000	                              mov rdi, 0	      4886	intel_display.c	FUNCTION_146	IF_1	IF_2	CALL_2
0x4001b63	      0xe800000000	                          call 0x4001b68	      4886	intel_display.c	FUNCTION_146	IF_1	IF_2	CALL_2
0x4001b68	             0xf0b	                                     ud2	      4886	intel_display.c	FUNCTION_146	IF_1	IF_2	CALL_2
0x4001b6a	            0xebe1	                           jmp 0x4001b4d	      4886	intel_display.c	FUNCTION_146	IF_1	IF_2	CALL_2
intel_enable_pipe	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,5:ELSE,2:functions,0:CALL,19	107
0x400cf50	            0x4156	                                push r14	      1818	intel_display.c	ELSE_1	FUNCTION_62
0x400cf52	            0x4155	                                push r13	      1818	intel_display.c	ELSE_1	FUNCTION_62
0x400cf54	    0x48c7c6000000	                              mov rsi, 0	      1826	intel_display.c	ELSE_1	FUNCTION_62	CALL_4
0x400cf5b	            0x4154	                                push r12	      1818	intel_display.c	ELSE_1	FUNCTION_62
0x400cf5d	              0x55	                                push rbp	      1818	intel_display.c	ELSE_1	FUNCTION_62
0x400cf5e	          0x4989fd	                            mov r13, rdi	      1818	intel_display.c	ELSE_1	FUNCTION_62
0x400cf61	              0x53	                                push rbx	      1818	intel_display.c	ELSE_1	FUNCTION_62
0x400cf62	          0x488b2f	                    mov rbp, qword [rdi]	      1819	intel_display.c	ELSE_1	FUNCTION_62	CALL_1
0x400cf65	    0x448ba73c0200	          mov r12d, dword [rdi + 0x23c] 	      1821	intel_display.c	ELSE_1	FUNCTION_62
0x400cf6c	      0xbf04000000	                              mov edi, 4	      1826	intel_display.c	ELSE_1	FUNCTION_62	CALL_4
0x400cf71	    0x448bb5b00400	          mov r14d, dword [rbp + 0x4b0] 	      1822	intel_display.c	ELSE_1	FUNCTION_62
0x400cf78	        0x488b5d00	                    mov rbx, qword [rbp]	      1820	intel_display.c	ELSE_1	FUNCTION_62	CALL_2
0x400cf7c	        0x418d5641	                   lea edx, [r14 + 0x41]	      1826	intel_display.c	ELSE_1	FUNCTION_62	CALL_4
0x400cf80	      0xe800000000	                          call 0x400cf85	      1826	intel_display.c	ELSE_1	FUNCTION_62	CALL_4
0x400cf85	        0x488b7d00	                    mov rdi, qword [rbp]	      1828	intel_display.c	ELSE_1	FUNCTION_62	CALL_5
0x400cf89	    0x488db5b00400	                  lea rsi, [rbp + 0x4b0]	      1828	intel_display.c	ELSE_1	FUNCTION_62	CALL_5
0x400cf90	      0xe8cb94ffff	 call sym.assert_planes_disabled.isra.98	      1828	intel_display.c	ELSE_1	FUNCTION_62	CALL_5
0x400cf95	    0xf68378060000	          test byte [rbx + 0x678], 0x20 	      1835	intel_display.c	ELSE_1	FUNCTION_62	IF_1	CALL_6
0x400cf9c	     0xf849f000000	                            je 0x400d041	      1835	intel_display.c	ELSE_1	FUNCTION_62	IF_1	CALL_6
0x400cfa2	    0x41f685450200	              test byte [r13 + 0x245], 2	      1836	intel_display.c	ELSE_1	FUNCTION_62	IF_1	IF_2	CALL_7
0x400cfaa	     0xf841e010000	                            je 0x400d0ce	      1836	intel_display.c	ELSE_1	FUNCTION_62	IF_1	IF_2	CALL_7
0x400cfb0	      0xbe01000000	                              mov esi, 1	      1837	intel_display.c	ELSE_1	FUNCTION_62	IF_1	CALL_8
0x400cfb5	          0x4889df	                            mov rdi, rbx	      1837	intel_display.c	ELSE_1	FUNCTION_62	IF_1	CALL_8
0x400cfb8	      0xe800000000	                          call 0x400cfbd	      1837	intel_display.c	ELSE_1	FUNCTION_62	IF_1	CALL_8
0x400cfbd	    0x428b84a38006	   mov eax, dword [rbx + r12*4 + 0x680] 	      1851	intel_display.c	FUNCTION_62	ELSE_1	CALL_13
0x400cfc5	    0x2b8380060000	            sub eax, dword [rbx + 0x680]	      1851	intel_display.c	FUNCTION_62	ELSE_1	CALL_13
0x400cfcb	          0x4889df	                            mov rdi, rbx	      1852	intel_display.c	FUNCTION_62	ELSE_1	CALL_14
0x400cfce	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	      1851	intel_display.c	FUNCTION_62	ELSE_1	CALL_13
0x400cfd4	    0x448da4100800	         lea r12d, [rax + rdx + 0x70008]	      1851	intel_display.c	FUNCTION_62	ELSE_1	CALL_13
0x400cfdc	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      1852	intel_display.c	FUNCTION_62	ELSE_1	CALL_14
0x400cfe3	      0xba01000000	                              mov edx, 1	      1852	intel_display.c	FUNCTION_62	ELSE_1	CALL_14
0x400cfe8	          0x4489e6	                           mov esi, r12d	      1852	intel_display.c	FUNCTION_62	ELSE_1	CALL_14
0x400cfeb	      0xe800000000	                          call 0x400cff0	      1852	intel_display.c	FUNCTION_62	ELSE_1	CALL_14
0x400cff0	            0x85c0	                           test eax, eax	      1853	intel_display.c	FUNCTION_62	ELSE_1	IF_4
0x400cff2	     0xf88eb000000	                            js 0x400d0e3	      1853	intel_display.c	FUNCTION_62	ELSE_1	IF_4
0x400cff8	       0xd00000080	                      or eax, 0x80000000	      1859	intel_display.c	FUNCTION_62	ELSE_1	CALL_17
0x400cffd	      0xb901000000	                              mov ecx, 1	      1859	intel_display.c	FUNCTION_62	ELSE_1	CALL_17
0x400d002	          0x4489e6	                           mov esi, r12d	      1859	intel_display.c	FUNCTION_62	ELSE_1	CALL_17
0x400d005	            0x89c2	                            mov edx, eax	      1859	intel_display.c	FUNCTION_62	ELSE_1	CALL_17
0x400d007	          0x4889df	                            mov rdi, rbx	      1859	intel_display.c	FUNCTION_62	ELSE_1	CALL_17
0x400d00a	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      1859	intel_display.c	FUNCTION_62	ELSE_1	CALL_17
0x400d011	      0xe800000000	                          call 0x400d016	      1859	intel_display.c	FUNCTION_62	ELSE_1	CALL_17
0x400d016	            0x31d2	                            xor edx, edx	      1860	intel_display.c	FUNCTION_62	ELSE_1	CALL_18
0x400d018	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      1860	intel_display.c	FUNCTION_62	ELSE_1	CALL_18
0x400d01f	          0x4489e6	                           mov esi, r12d	      1860	intel_display.c	FUNCTION_62	ELSE_1	CALL_18
0x400d022	          0x4889df	                            mov rdi, rbx	      1860	intel_display.c	FUNCTION_62	ELSE_1	CALL_18
0x400d025	      0xe800000000	                          call 0x400d02a	      1860	intel_display.c	FUNCTION_62	ELSE_1	CALL_18
0x400d02a	    0x8b8398010000	           mov eax, dword [rbx + 0x198] 	      1869	intel_display.c	FUNCTION_62	ELSE_1	IF_5
0x400d030	            0x85c0	                           test eax, eax	      1869	intel_display.c	FUNCTION_62	ELSE_1	IF_5
0x400d032	     0xf84d2000000	                            je 0x400d10a	      1869	intel_display.c	FUNCTION_62	ELSE_1	IF_5
0x400d038	              0x5b	                                 pop rbx	      1871	intel_display.c	FUNCTION_62	ELSE_1
0x400d039	              0x5d	                                 pop rbp	      1871	intel_display.c	FUNCTION_62	ELSE_1
0x400d03a	            0x415c	                                 pop r12	      1871	intel_display.c	FUNCTION_62	ELSE_1
0x400d03c	            0x415d	                                 pop r13	      1871	intel_display.c	FUNCTION_62	ELSE_1
0x400d03e	            0x415e	                                 pop r14	      1871	intel_display.c	FUNCTION_62	ELSE_1
0x400d040	              0xc3	                                     ret	      1871	intel_display.c	FUNCTION_62	ELSE_1
0x400d041	    0x4180bd380200	               cmp byte [r13 + 0x238], 0	      1841	intel_display.c	FUNCTION_62	ELSE_1	ELSE_2	IF_3
0x400d049	     0xf846effffff	                            je 0x400cfbd	      1841	intel_display.c	FUNCTION_62	ELSE_1	ELSE_2	IF_3
0x400d04f	        0x488b4500	                    mov rax, qword [rbp]	      1811	intel_display.c	FUNCTION_61	IF_1	CALL_2
0x400d053	            0x31f6	                            xor esi, esi	      1812	intel_display.c	FUNCTION_61	IF_1
0x400d055	    0x83b8f8550000	            cmp dword [rax + 0x55f8], 3 	      1811	intel_display.c	FUNCTION_61	IF_1	CALL_2
0x400d05c	            0x7406	                            je 0x400d064	      1811	intel_display.c	FUNCTION_61	IF_1	CALL_2
0x400d05e	    0x8bb5b0040000	           mov esi, dword [rbp + 0x4b0] 	      1814	intel_display.c	FUNCTION_61	ELSE_1
0x400d064	      0xba01000000	                              mov edx, 1	      1843	intel_display.c	FUNCTION_62	ELSE_1	ELSE_2	IF_3	CALL_10
0x400d069	          0x4889df	                            mov rdi, rbx	      1843	intel_display.c	FUNCTION_62	ELSE_1	ELSE_2	IF_3	CALL_10
0x400d06c	      0xe800000000	                          call 0x400d071	      1843	intel_display.c	FUNCTION_62	ELSE_1	ELSE_2	IF_3	CALL_10
0x400d071	    0xf6835a060000	          test byte [rbx + 0x65a], 0x10 	      1134	intel_display.c	FUNCTION_32	IF_1	CALL_1
0x400d078	     0xf853fffffff	                           jne 0x400cfbd	      1134	intel_display.c	FUNCTION_32	IF_1	CALL_1
0x400d07e	    0xf68377060000	          test byte [rbx + 0x677], 0x40 	      1138	intel_display.c	FUNCTION_32	IF_2	CALL_2
0x400d085	     0xf8532ffffff	                           jne 0x400cfbd	      1138	intel_display.c	FUNCTION_32	IF_2	CALL_2
0x400d08b	          0x4489e6	                           mov esi, r12d	      1141	intel_display.c	FUNCTION_32	CALL_4
0x400d08e	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      1141	intel_display.c	FUNCTION_32	CALL_4
0x400d095	      0xba01000000	                              mov edx, 1	      1141	intel_display.c	FUNCTION_32	CALL_4
0x400d09a	          0xc1e60c	                            shl esi, 0xc	      1141	intel_display.c	FUNCTION_32	CALL_4
0x400d09d	          0x4889df	                            mov rdi, rbx	      1141	intel_display.c	FUNCTION_32	CALL_4
0x400d0a0	    0x81c600010600	                        add esi, 0x60100	      1141	intel_display.c	FUNCTION_32	CALL_4
0x400d0a6	      0xe800000000	                          call 0x400d0ab	      1141	intel_display.c	FUNCTION_32	CALL_4
0x400d0ab	          0xf6c440	                           test ah, 0x40	      1142	intel_display.c	FUNCTION_32	CALL_5
0x400d0ae	     0xf8509ffffff	                           jne 0x400cfbd	      1142	intel_display.c	FUNCTION_32	CALL_5
0x400d0b4	    0x803d00000000	                cmp byte [0x0400d0bb], 0	      1142	intel_display.c	FUNCTION_32	CALL_5
0x400d0bb	    0x48c7c7000000	                              mov rdi, 0	      1142	intel_display.c	FUNCTION_32	CALL_5
0x400d0c2	            0x755b	                           jne 0x400d11f	      1142	intel_display.c	FUNCTION_32	CALL_5
0x400d0c4	      0xe800000000	                          call 0x400d0c9	      1142	intel_display.c	FUNCTION_32	CALL_5
0x400d0c9	      0xe9effeffff	                           jmp 0x400cfbd	      1142	intel_display.c	FUNCTION_32	CALL_5
0x400d0ce	      0xba01000000	                              mov edx, 1	      1839	intel_display.c	FUNCTION_62	IF_1	ELSE_1	CALL_9
0x400d0d3	          0x4489f6	                           mov esi, r14d	      1839	intel_display.c	FUNCTION_62	IF_1	ELSE_1	CALL_9
0x400d0d6	          0x4889df	                            mov rdi, rbx	      1839	intel_display.c	FUNCTION_62	IF_1	ELSE_1	CALL_9
0x400d0d9	      0xe800000000	                          call 0x400d0de	      1839	intel_display.c	FUNCTION_62	IF_1	ELSE_1	CALL_9
0x400d0de	      0xe9dafeffff	                           jmp 0x400cfbd	      1839	intel_display.c	FUNCTION_62	IF_1	ELSE_1	CALL_9
0x400d0e3	    0xf68364060000	              test byte [rbx + 0x664], 2	      1855	intel_display.c	FUNCTION_62	ELSE_1	IF_4	CALL_16
0x400d0ea	     0xf8548ffffff	                           jne 0x400d038	      1855	intel_display.c	FUNCTION_62	ELSE_1	IF_4	CALL_16
0x400d0f0	    0x48c7c6000000	                              mov rsi, 0	      1855	intel_display.c	FUNCTION_62	ELSE_1	IF_4	CALL_16
0x400d0f7	    0x48c7c7000000	                              mov rdi, 0	      1855	intel_display.c	FUNCTION_62	ELSE_1	IF_4	CALL_16
0x400d0fe	      0xe800000000	                          call 0x400d103	      1855	intel_display.c	FUNCTION_62	ELSE_1	IF_4	CALL_16
0x400d103	             0xf0b	                                     ud2	      1855	intel_display.c	FUNCTION_62	ELSE_1	IF_4	CALL_16
0x400d105	      0xe92effffff	                           jmp 0x400d038	      1855	intel_display.c	FUNCTION_62	ELSE_1	IF_4	CALL_16
0x400d10a	              0x5b	                                 pop rbx	      1871	intel_display.c	FUNCTION_62	ELSE_1
0x400d10b	          0x4889ef	                            mov rdi, rbp	      1038	intel_display.c	FUNCTION_26	CALL_1
0x400d10e	      0xbe01000000	                              mov esi, 1	      1038	intel_display.c	FUNCTION_26	CALL_1
0x400d113	              0x5d	                                 pop rbp	      1871	intel_display.c	FUNCTION_62	ELSE_1
0x400d114	            0x415c	                                 pop r12	      1871	intel_display.c	FUNCTION_62	ELSE_1
0x400d116	            0x415d	                                 pop r13	      1871	intel_display.c	FUNCTION_62	ELSE_1
0x400d118	            0x415e	                                 pop r14	      1871	intel_display.c	FUNCTION_62	ELSE_1
0x400d11a	      0xe93176ffff	   jmp sym.wait_for_pipe_scanline_moving	      1038	intel_display.c	FUNCTION_26	CALL_1
0x400d11f	      0xe800000000	                          call 0x400d124	      1142	intel_display.c	FUNCTION_32	CALL_5
0x400d124	             0xf0b	                                     ud2	      1142	intel_display.c	FUNCTION_32	CALL_5
0x400d126	      0xe992feffff	                           jmp 0x400cfbd	      1142	intel_display.c	FUNCTION_32	CALL_5
intel_begin_crtc_commit	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,5:ELSE,1:functions,0:CALL,13	107
0x4008a40	            0x4157	                                push r15	     12910	intel_display.c	FUNCTION_361
0x4008a42	            0x4156	                                push r14	     12910	intel_display.c	FUNCTION_361
0x4008a44	            0x4155	                                push r13	     12910	intel_display.c	FUNCTION_361
0x4008a46	            0x4154	                                push r12	     12910	intel_display.c	FUNCTION_361
0x4008a48	              0x55	                                push rbp	     12910	intel_display.c	FUNCTION_361
0x4008a49	              0x53	                                push rbx	     12910	intel_display.c	FUNCTION_361
0x4008a4a	    0x8b8790000000	            mov eax, dword [rdi + 0x90] 	       431	drm_atomic.h	FUNCTION_503	CALL_1
0x4008a50	    0x488bae100200	           mov rbp, qword [rsi + 0x210] 	     12917	intel_display.c	FUNCTION_361	CALL_4
0x4008a57	          0x4c8b27	                    mov r12, qword [rdi]	     12911	intel_display.c	FUNCTION_361
0x4008a5a	        0x488d0440	                  lea rax, [rax + rax*2]	       431	drm_atomic.h	FUNCTION_503	CALL_1
0x4008a5e	        0x48c1e004	                              shl rax, 4	       431	drm_atomic.h	FUNCTION_503	CALL_1
0x4008a62	        0x48034520	             add rax, qword [rbp + 0x20]	       431	drm_atomic.h	FUNCTION_503	CALL_1
0x4008a66	        0x488b5818	            mov rbx, qword [rax + 0x18] 	       431	drm_atomic.h	FUNCTION_503	CALL_1
0x4008a6a	         0xfb6430a	            movzx eax, byte [rbx + 0xa] 	       893	drm_atomic.h	FUNCTION_511
0x4008a6e	            0xa802	                              test al, 2	       893	drm_atomic.h	FUNCTION_511
0x4008a70	            0x7504	                           jne 0x4008a76	       893	drm_atomic.h	FUNCTION_511
0x4008a72	            0xa804	                              test al, 4	       893	drm_atomic.h	FUNCTION_511
0x4008a74	            0x742a	                            je 0x4008aa0	       893	drm_atomic.h	FUNCTION_511
0x4008a76	          0x4889df	                            mov rdi, rbx	     12930	intel_display.c	FUNCTION_361	CALL_9
0x4008a79	      0xe800000000	                          call 0x4008a7e	     12930	intel_display.c	FUNCTION_361	CALL_9
0x4008a7e	    0x498b84246855	          mov rax, qword [r12 + 0x5568] 	     12941	intel_display.c	FUNCTION_361	IF_5
0x4008a86	          0x4885c0	                           test rax, rax	     12941	intel_display.c	FUNCTION_361	IF_5
0x4008a89	            0x745d	                            je 0x4008ae8	     12941	intel_display.c	FUNCTION_361	IF_5
0x4008a8b	          0x4889de	                            mov rsi, rbx	     12942	intel_display.c	FUNCTION_361	IF_5	CALL_13
0x4008a8e	          0x4889ef	                            mov rdi, rbp	     12942	intel_display.c	FUNCTION_361	IF_5	CALL_13
0x4008a91	              0x5b	                                 pop rbx	     12944	intel_display.c	FUNCTION_361
0x4008a92	              0x5d	                                 pop rbp	     12944	intel_display.c	FUNCTION_361
0x4008a93	            0x415c	                                 pop r12	     12944	intel_display.c	FUNCTION_361
0x4008a95	            0x415d	                                 pop r13	     12944	intel_display.c	FUNCTION_361
0x4008a97	            0x415e	                                 pop r14	     12944	intel_display.c	FUNCTION_361
0x4008a99	            0x415f	                                 pop r15	     12944	intel_display.c	FUNCTION_361
0x4008a9b	      0xe900000000	                           jmp 0x4008aa0	     12942	intel_display.c	FUNCTION_361	IF_5	CALL_13
0x4008aa0	            0xa808	                              test al, 8	       893	drm_atomic.h	FUNCTION_511
0x4008aa2	            0x75d2	                           jne 0x4008a76	       893	drm_atomic.h	FUNCTION_511
0x4008aa4	            0xa820	                           test al, 0x20	     12922	intel_display.c	FUNCTION_361	IF_1
0x4008aa6	          0x4989fd	                            mov r13, rdi	     12922	intel_display.c	FUNCTION_361	IF_1
0x4008aa9	          0x4989f6	                            mov r14, rsi	     12922	intel_display.c	FUNCTION_361	IF_1
0x4008aac	            0x7545	                           jne 0x4008af3	     12922	intel_display.c	FUNCTION_361	IF_1
0x4008aae	    0x80bb24020000	               cmp byte [rbx + 0x224], 0	     12923	intel_display.c	FUNCTION_361	IF_1
0x4008ab5	            0x753c	                           jne 0x4008af3	     12923	intel_display.c	FUNCTION_361	IF_1
0x4008ab7	          0x4889df	                            mov rdi, rbx	     12930	intel_display.c	FUNCTION_361	CALL_9
0x4008aba	      0xe800000000	                          call 0x4008abf	     12930	intel_display.c	FUNCTION_361	CALL_9
0x4008abf	    0x80bb24020000	               cmp byte [rbx + 0x224], 0	     12935	intel_display.c	FUNCTION_361	IF_3
0x4008ac6	            0x753d	                           jne 0x4008b05	     12935	intel_display.c	FUNCTION_361	IF_3
0x4008ac8	    0x4180bc245c06	               cmp byte [r12 + 0x65c], 8	     12937	intel_display.c	FUNCTION_361	ELSE_1	IF_4	CALL_11
0x4008ad1	            0x76ab	                           jbe 0x4008a7e	     12937	intel_display.c	FUNCTION_361	ELSE_1	IF_4	CALL_11
0x4008ad3	          0x4c89ef	                            mov rdi, r13	     12938	intel_display.c	FUNCTION_361	ELSE_1	IF_4
0x4008ad6	      0xe8e5d2ffff	             call sym.skl_detach_scalers	     12938	intel_display.c	FUNCTION_361	ELSE_1	IF_4
0x4008adb	    0x498b84246855	          mov rax, qword [r12 + 0x5568] 	     12941	intel_display.c	FUNCTION_361	IF_5
0x4008ae3	          0x4885c0	                           test rax, rax	     12941	intel_display.c	FUNCTION_361	IF_5
0x4008ae6	            0x75a3	                           jne 0x4008a8b	     12941	intel_display.c	FUNCTION_361	IF_5
0x4008ae8	              0x5b	                                 pop rbx	     12944	intel_display.c	FUNCTION_361
0x4008ae9	              0x5d	                                 pop rbp	     12944	intel_display.c	FUNCTION_361
0x4008aea	            0x415c	                                 pop r12	     12944	intel_display.c	FUNCTION_361
0x4008aec	            0x415d	                                 pop r13	     12944	intel_display.c	FUNCTION_361
0x4008aee	            0x415e	                                 pop r14	     12944	intel_display.c	FUNCTION_361
0x4008af0	            0x415f	                                 pop r15	     12944	intel_display.c	FUNCTION_361
0x4008af2	              0xc3	                                     ret	     12944	intel_display.c	FUNCTION_361
0x4008af3	          0x4889df	                            mov rdi, rbx	     12925	intel_display.c	FUNCTION_361	IF_1	CALL_7
0x4008af6	      0xe800000000	                          call 0x4008afb	     12925	intel_display.c	FUNCTION_361	IF_1	CALL_7
0x4008afb	          0x4889df	                            mov rdi, rbx	     12926	intel_display.c	FUNCTION_361	IF_1	CALL_8
0x4008afe	      0xe800000000	                          call 0x4008b03	     12926	intel_display.c	FUNCTION_361	IF_1	CALL_8
0x4008b03	            0xebb2	                           jmp 0x4008ab7	     12926	intel_display.c	FUNCTION_361	IF_1	CALL_8
0x4008b05	          0x4c8b3b	                    mov r15, qword [rbx]	      3787	intel_display.c	FUNCTION_123	CALL_1
0x4008b08	    0x488db3f80000	                   lea rsi, [rbx + 0xf8]	      3791	intel_display.c	FUNCTION_123
0x4008b0f	      0xb91c000000	                           mov ecx, 0x1c	      3791	intel_display.c	FUNCTION_123
0x4008b14	          0x4d8b2f	                    mov r13, qword [r15]	      3788	intel_display.c	FUNCTION_123	CALL_2
0x4008b17	    0x498dbfa00000	                   lea rdi, [r15 + 0xa0]	      3791	intel_display.c	FUNCTION_123
0x4008b1e	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      3791	intel_display.c	FUNCTION_123
0x4008b21	          0x4c89ef	                            mov rdi, r13	      3802	intel_display.c	FUNCTION_123	CALL_4
0x4008b24	    0x8b832c020000	           mov eax, dword [rbx + 0x22c] 	      3802	intel_display.c	FUNCTION_123	CALL_4
0x4008b2a	    0x418b8d6c0600	           mov ecx, dword [r13 + 0x66c] 	      3802	intel_display.c	FUNCTION_123	CALL_4
0x4008b31	    0x4d8b85180800	            mov r8, qword [r13 + 0x818] 	      3802	intel_display.c	FUNCTION_123	CALL_4
0x4008b38	          0x8d50ff	                      lea edx, [rax - 1]	      3802	intel_display.c	FUNCTION_123	CALL_4
0x4008b3b	    0x8b8330020000	           mov eax, dword [rbx + 0x230] 	      3802	intel_display.c	FUNCTION_123	CALL_4
0x4008b41	          0xc1e210	                           shl edx, 0x10	      3802	intel_display.c	FUNCTION_123	CALL_4
0x4008b44	          0x83e801	                              sub eax, 1	      3802	intel_display.c	FUNCTION_123	CALL_4
0x4008b47	             0x9c2	                             or edx, eax	      3802	intel_display.c	FUNCTION_123	CALL_4
0x4008b49	    0x496387b00400	        movsxd rax, dword [r15 + 0x4b0] 	      3802	intel_display.c	FUNCTION_123	CALL_4
0x4008b50	    0x418b84859806	   mov eax, dword [r13 + rax*4 + 0x698] 	      3802	intel_display.c	FUNCTION_123	CALL_4
0x4008b58	    0x412b85980600	            sub eax, dword [r13 + 0x698]	      3802	intel_display.c	FUNCTION_123	CALL_4
0x4008b5f	    0x8db4081c0006	          lea esi, [rax + rcx + 0x6001c]	      3802	intel_display.c	FUNCTION_123	CALL_4
0x4008b66	      0xb901000000	                              mov ecx, 1	      3802	intel_display.c	FUNCTION_123	CALL_4
0x4008b6b	      0xe800000000	                          call 0x4008b70	      3802	intel_display.c	FUNCTION_123	CALL_4
0x4008b70	    0x4180bd5c0600	               cmp byte [r13 + 0x65c], 8	      3807	intel_display.c	FUNCTION_123	IF_1	CALL_5
0x4008b78	            0x7745	                            ja 0x4008bbf	      3807	intel_display.c	FUNCTION_123	IF_1	CALL_5
0x4008b7a	    0x418b85f85500	          mov eax, dword [r13 + 0x55f8] 	      3812	intel_display.c	FUNCTION_123	ELSE_1	IF_3	CALL_8
0x4008b81	            0x85c0	                           test eax, eax	      3812	intel_display.c	FUNCTION_123	ELSE_1	IF_3	CALL_8
0x4008b83	     0xf84f5feffff	                            je 0x4008a7e	      3812	intel_display.c	FUNCTION_123	ELSE_1	IF_3	CALL_8
0x4008b89	    0x80bb2c030000	               cmp byte [rbx + 0x32c], 0	      3813	intel_display.c	FUNCTION_123	ELSE_1	IF_3	IF_4
0x4008b90	            0x7520	                           jne 0x4008bb2	      3813	intel_display.c	FUNCTION_123	ELSE_1	IF_3	IF_4
0x4008b92	    0x4180be2c0300	               cmp byte [r14 + 0x32c], 0	      3815	intel_display.c	FUNCTION_123	ELSE_1	IF_3	ELSE_2	IF_5
0x4008b9a	     0xf84defeffff	                            je 0x4008a7e	      3815	intel_display.c	FUNCTION_123	ELSE_1	IF_3	ELSE_2	IF_5
0x4008ba0	      0xbe01000000	                              mov esi, 1	      3816	intel_display.c	FUNCTION_123	ELSE_1	IF_3	ELSE_2	IF_5
0x4008ba5	          0x4c89ff	                            mov rdi, r15	      3816	intel_display.c	FUNCTION_123	ELSE_1	IF_3	ELSE_2	IF_5
0x4008ba8	      0xe8637affff	          call sym.ironlake_pfit_disable	      3816	intel_display.c	FUNCTION_123	ELSE_1	IF_3	ELSE_2	IF_5
0x4008bad	      0xe9ccfeffff	                           jmp 0x4008a7e	      3816	intel_display.c	FUNCTION_123	ELSE_1	IF_3	ELSE_2	IF_5
0x4008bb2	          0x4c89ff	                            mov rdi, r15	      3814	intel_display.c	FUNCTION_123	ELSE_1	IF_3	CALL_9
0x4008bb5	      0xe82679ffff	           call sym.ironlake_pfit_enable	      3814	intel_display.c	FUNCTION_123	ELSE_1	IF_3	CALL_9
0x4008bba	      0xe9bffeffff	                           jmp 0x4008a7e	      3814	intel_display.c	FUNCTION_123	ELSE_1	IF_3	CALL_9
0x4008bbf	          0x4c89ff	                            mov rdi, r15	      3808	intel_display.c	FUNCTION_123	IF_1	CALL_6
0x4008bc2	      0xe8f9d1ffff	             call sym.skl_detach_scalers	      3808	intel_display.c	FUNCTION_123	IF_1	CALL_6
0x4008bc7	    0x80bb2c030000	               cmp byte [rbx + 0x32c], 0	      3810	intel_display.c	FUNCTION_123	IF_1	IF_2
0x4008bce	     0xf84aafeffff	                            je 0x4008a7e	      3810	intel_display.c	FUNCTION_123	IF_1	IF_2
0x4008bd4	          0x4c89ff	                            mov rdi, r15	      3811	intel_display.c	FUNCTION_123	IF_1	CALL_7
0x4008bd7	      0xe8b48effff	            call sym.skylake_pfit_enable	      3811	intel_display.c	FUNCTION_123	IF_1	CALL_7
0x4008bdc	      0xe99dfeffff	                           jmp 0x4008a7e	      3811	intel_display.c	FUNCTION_123	IF_1	CALL_7
quirk_backlight_present	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,2	3
0x4004ea0	    0x48838f005600	              or qword [rdi + 0x5600], 8	     14366	intel_display.c	FUNCTION_395
0x4004ea8	    0x48c7c7000000	                              mov rdi, 0	     14367	intel_display.c	FUNCTION_395	CALL_2
0x4004eaf	      0xe900000000	                           jmp 0x4004eb4	     14367	intel_display.c	FUNCTION_395	CALL_2
assert_pipe	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,2:ELSE,1:functions,0:CALL,11	79
0x400d260	          0x4863c6	                         movsxd rax, esi	      1200	intel_display.c	FUNCTION_35
0x400d263	            0x4157	                                push r15	      1200	intel_display.c	FUNCTION_35
0x400d265	            0x4156	                                push r14	      1200	intel_display.c	FUNCTION_35
0x400d267	          0x4989c6	                            mov r14, rax	      1200	intel_display.c	FUNCTION_35
0x400d26a	            0x4155	                                push r13	      1200	intel_display.c	FUNCTION_35
0x400d26c	            0x4154	                                push r12	      1200	intel_display.c	FUNCTION_35
0x400d26e	              0x55	                                push rbp	      1200	intel_display.c	FUNCTION_35
0x400d26f	              0x53	                                push rbx	      1200	intel_display.c	FUNCTION_35
0x400d270	          0x4889fb	                            mov rbx, rdi	      1200	intel_display.c	FUNCTION_35
0x400d273	    0x488b84c76865	  mov rax, qword [rdi + rax*8 + 0x6568] 	       998	intel_display.c	FUNCTION_22
0x400d27b	    0xf68764060000	              test byte [rdi + 0x664], 2	      1208	intel_display.c	FUNCTION_35	IF_1
0x400d282	    0x488b80c80400	           mov rax, qword [rax + 0x4c8] 	       998	intel_display.c	FUNCTION_22
0x400d289	    0x448ba83c0200	          mov r13d, dword [rax + 0x23c] 	       998	intel_display.c	FUNCTION_22
0x400d290	      0xb801000000	                              mov eax, 1	      1208	intel_display.c	FUNCTION_35	IF_1
0x400d295	           0xf44c2	                          cmove eax, edx	      1208	intel_display.c	FUNCTION_35	IF_1
0x400d298	          0x4189c4	                           mov r12d, eax	      1208	intel_display.c	FUNCTION_35	IF_1
0x400d29b	      0xb809000000	                              mov eax, 9	      1210	intel_display.c	FUNCTION_35	CALL_3
0x400d2a0	        0x418d6d06	                      lea ebp, [r13 + 6]	      1210	intel_display.c	FUNCTION_35	CALL_3
0x400d2a4	        0x4183fd03	                             cmp r13d, 3	      1210	intel_display.c	FUNCTION_35	CALL_3
0x400d2a8	           0xf44e8	                          cmove ebp, eax	      1210	intel_display.c	FUNCTION_35	CALL_3
0x400d2ab	          0x4531ff	                          xor r15d, r15d	      1210	intel_display.c	FUNCTION_35	CALL_3
0x400d2ae	            0x89ee	                            mov esi, ebp	      1211	intel_display.c	FUNCTION_35	IF_2	CALL_4
0x400d2b0	      0xe800000000	                          call 0x400d2b5	      1211	intel_display.c	FUNCTION_35	IF_2	CALL_4
0x400d2b5	            0x84c0	                             test al, al	      1211	intel_display.c	FUNCTION_35	IF_2	CALL_4
0x400d2b7	            0x7510	                           jne 0x400d2c9	      1211	intel_display.c	FUNCTION_35	IF_2	CALL_4
0x400d2b9	          0x4538fc	                          cmp r12b, r15b	      1220	intel_display.c	FUNCTION_35	CALL_8
0x400d2bc	            0x754f	                           jne 0x400d30d	      1220	intel_display.c	FUNCTION_35	CALL_8
0x400d2be	              0x5b	                                 pop rbx	      1223	intel_display.c	FUNCTION_35
0x400d2bf	              0x5d	                                 pop rbp	      1223	intel_display.c	FUNCTION_35
0x400d2c0	            0x415c	                                 pop r12	      1223	intel_display.c	FUNCTION_35
0x400d2c2	            0x415d	                                 pop r13	      1223	intel_display.c	FUNCTION_35
0x400d2c4	            0x415e	                                 pop r14	      1223	intel_display.c	FUNCTION_35
0x400d2c6	            0x415f	                                 pop r15	      1223	intel_display.c	FUNCTION_35
0x400d2c8	              0xc3	                                     ret	      1223	intel_display.c	FUNCTION_35
0x400d2c9	    0x428b84ab8006	   mov eax, dword [rbx + r13*4 + 0x680] 	      1212	intel_display.c	FUNCTION_35	IF_2	CALL_6
0x400d2d1	    0x2b8380060000	            sub eax, dword [rbx + 0x680]	      1212	intel_display.c	FUNCTION_35	IF_2	CALL_6
0x400d2d7	          0x4889df	                            mov rdi, rbx	      1212	intel_display.c	FUNCTION_35	IF_2	CALL_6
0x400d2da	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	      1212	intel_display.c	FUNCTION_35	IF_2	CALL_6
0x400d2e0	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	      1212	intel_display.c	FUNCTION_35	IF_2	CALL_6
0x400d2e7	    0x8db410080007	          lea esi, [rax + rdx + 0x70008]	      1212	intel_display.c	FUNCTION_35	IF_2	CALL_6
0x400d2ee	      0xba01000000	                              mov edx, 1	      1212	intel_display.c	FUNCTION_35	IF_2	CALL_6
0x400d2f3	      0xe800000000	                          call 0x400d2f8	      1212	intel_display.c	FUNCTION_35	IF_2	CALL_6
0x400d2f8	          0xc1e81f	                           shr eax, 0x1f	      1213	intel_display.c	FUNCTION_35	IF_2
0x400d2fb	            0x89ee	                            mov esi, ebp	      1215	intel_display.c	FUNCTION_35	IF_2	CALL_7
0x400d2fd	          0x4889df	                            mov rdi, rbx	      1215	intel_display.c	FUNCTION_35	IF_2	CALL_7
0x400d300	          0x4189c7	                           mov r15d, eax	      1213	intel_display.c	FUNCTION_35	IF_2
0x400d303	      0xe800000000	                          call 0x400d308	      1215	intel_display.c	FUNCTION_35	IF_2	CALL_7
0x400d308	          0x4538fc	                          cmp r12b, r15b	      1220	intel_display.c	FUNCTION_35	CALL_8
0x400d30b	            0x74b1	                            je 0x400d2be	      1220	intel_display.c	FUNCTION_35	CALL_8
0x400d30d	    0x803d00000000	                cmp byte [0x0400d314], 0	      1220	intel_display.c	FUNCTION_35	CALL_8
0x400d314	            0x7539	                           jne 0x400d34f	      1220	intel_display.c	FUNCTION_35	CALL_8
0x400d316	    0x48c7c2000000	                              mov rdx, 0	       150	i915_utils.h	FUNCTION_472
0x400d31d	          0x4584ff	                         test r15b, r15b	       150	i915_utils.h	FUNCTION_472
0x400d320	    0x48c7c0000000	                              mov rax, 0	       150	i915_utils.h	FUNCTION_472
0x400d327	          0x4889d1	                            mov rcx, rdx	       150	i915_utils.h	FUNCTION_472
0x400d32a	        0x418d7641	                   lea esi, [r14 + 0x41]	      1220	intel_display.c	FUNCTION_35	CALL_8
0x400d32e	    0x48c7c7000000	                              mov rdi, 0	      1220	intel_display.c	FUNCTION_35	CALL_8
0x400d335	              0x5b	                                 pop rbx	      1223	intel_display.c	FUNCTION_35
0x400d336	        0x480f45c8	                         cmovne rcx, rax	       150	i915_utils.h	FUNCTION_472
0x400d33a	          0x4584e4	                         test r12b, r12b	       150	i915_utils.h	FUNCTION_472
0x400d33d	              0x5d	                                 pop rbp	      1223	intel_display.c	FUNCTION_35
0x400d33e	            0x415c	                                 pop r12	      1223	intel_display.c	FUNCTION_35
0x400d340	            0x415d	                                 pop r13	      1223	intel_display.c	FUNCTION_35
0x400d342	            0x415e	                                 pop r14	      1223	intel_display.c	FUNCTION_35
0x400d344	            0x415f	                                 pop r15	      1223	intel_display.c	FUNCTION_35
0x400d346	        0x480f45d0	                         cmovne rdx, rax	       150	i915_utils.h	FUNCTION_472
0x400d34a	      0xe900000000	                           jmp 0x400d34f	      1220	intel_display.c	FUNCTION_35	CALL_8
0x400d34f	    0x48c7c2000000	                              mov rdx, 0	       150	i915_utils.h	FUNCTION_472
0x400d356	    0x48c7c0000000	                              mov rax, 0	       150	i915_utils.h	FUNCTION_472
0x400d35d	          0x4584ff	                         test r15b, r15b	       150	i915_utils.h	FUNCTION_472
0x400d360	          0x4889d1	                            mov rcx, rdx	       150	i915_utils.h	FUNCTION_472
0x400d363	        0x418d7641	                   lea esi, [r14 + 0x41]	      1220	intel_display.c	FUNCTION_35	CALL_8
0x400d367	    0x48c7c7000000	                              mov rdi, 0	      1220	intel_display.c	FUNCTION_35	CALL_8
0x400d36e	        0x480f44c8	                          cmove rcx, rax	       150	i915_utils.h	FUNCTION_472
0x400d372	          0x4584e4	                         test r12b, r12b	       150	i915_utils.h	FUNCTION_472
0x400d375	        0x480f44d0	                          cmove rdx, rax	       150	i915_utils.h	FUNCTION_472
0x400d379	      0xe800000000	                          call 0x400d37e	      1220	intel_display.c	FUNCTION_35	CALL_8
0x400d37e	             0xf0b	                                     ud2	      1220	intel_display.c	FUNCTION_35	CALL_8
0x400d380	      0xe939ffffff	                           jmp 0x400d2be	      1220	intel_display.c	FUNCTION_35	CALL_8
intel_check_primary_plane	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,8:ELSE,1:functions,0:CALL,13	153
0x400f830	            0x4154	                                push r12	     12861	intel_display.c	FUNCTION_360
0x400f832	              0x55	                                push rbp	     12861	intel_display.c	FUNCTION_360
0x400f833	          0x4989d4	                            mov r12, rdx	     12861	intel_display.c	FUNCTION_360
0x400f836	              0x53	                                push rbx	     12861	intel_display.c	FUNCTION_360
0x400f837	          0x488b1f	                    mov rbx, qword [rdi]	     12862	intel_display.c	FUNCTION_360	CALL_1
0x400f83a	          0x4889f5	                            mov rbp, rsi	     12861	intel_display.c	FUNCTION_360
0x400f83d	    0x80bb5c060000	               cmp byte [rbx + 0x65c], 8	     12869	intel_display.c	FUNCTION_360	IF_1	CALL_2
0x400f844	            0x7633	                           jbe 0x400f879	     12869	intel_display.c	FUNCTION_360	IF_1	CALL_2
0x400f846	    0x8b82cc000000	            mov eax, dword [rdx + 0xcc] 	     12871	intel_display.c	FUNCTION_360	IF_1	IF_2
0x400f84c	            0x85c0	                           test eax, eax	     12871	intel_display.c	FUNCTION_360	IF_1	IF_2
0x400f84e	     0xf8556010000	                           jne 0x400f9aa	     12871	intel_display.c	FUNCTION_360	IF_1	IF_2
0x400f854	        0x488b7a08	                mov rdi, qword [rdx + 8]	     12863	intel_display.c	FUNCTION_360
0x400f858	          0x4885ff	                           test rdi, rdi	     12831	intel_display.c	FUNCTION_359	IF_1
0x400f85b	            0x740a	                            je 0x400f867	     12831	intel_display.c	FUNCTION_359	IF_1
0x400f85d	        0x807e0800	                   cmp byte [rsi + 8], 0	     12831	intel_display.c	FUNCTION_359	IF_1
0x400f861	     0xf8597010000	                           jne 0x400f9fe	     12831	intel_display.c	FUNCTION_359	IF_1
0x400f867	    0x41b801000000	                              mov r8d, 1	     12831	intel_display.c	FUNCTION_359	IF_1
0x400f86d	      0xb900000100	                        mov ecx, 0x10000	     12832	intel_display.c	FUNCTION_359	IF_1
0x400f872	      0xba01000000	                              mov edx, 1	     12872	intel_display.c	FUNCTION_360	IF_1	IF_2
0x400f877	            0xeb0d	                           jmp 0x400f886	     12872	intel_display.c	FUNCTION_360	IF_1	IF_2
0x400f879	          0x4531c0	                            xor r8d, r8d	     12872	intel_display.c	FUNCTION_360	IF_1	IF_2
0x400f87c	      0xb900000100	                        mov ecx, 0x10000	     12865	intel_display.c	FUNCTION_360
0x400f881	      0xba00000100	                        mov edx, 0x10000	     12864	intel_display.c	FUNCTION_360
0x400f886	    0x41b901000000	                              mov r9d, 1	     12878	intel_display.c	FUNCTION_360	CALL_5
0x400f88c	          0x4889ee	                            mov rsi, rbp	     12878	intel_display.c	FUNCTION_360	CALL_5
0x400f88f	          0x4c89e7	                            mov rdi, r12	     12878	intel_display.c	FUNCTION_360	CALL_5
0x400f892	      0xe800000000	                          call 0x400f897	     12878	intel_display.c	FUNCTION_360	CALL_5
0x400f897	            0x85c0	                           test eax, eax	     12882	intel_display.c	FUNCTION_360	IF_3
0x400f899	            0x7528	                           jne 0x400f8c3	     12882	intel_display.c	FUNCTION_360	IF_3
0x400f89b	    0x49837c241000	               cmp qword [r12 + 0x10], 0	     12885	intel_display.c	FUNCTION_360	IF_4
0x400f8a1	     0xf8450010000	                            je 0x400f9f7	     12885	intel_display.c	FUNCTION_360	IF_4
0x400f8a7	    0x80bb5c060000	               cmp byte [rbx + 0x65c], 8	     12888	intel_display.c	FUNCTION_360	IF_5	CALL_6
0x400f8ae	            0x7618	                           jbe 0x400f8c8	     12888	intel_display.c	FUNCTION_360	IF_5	CALL_6
0x400f8b0	          0x4c89e6	                            mov rsi, r12	     12889	intel_display.c	FUNCTION_360	IF_5	CALL_7
0x400f8b3	          0x4889ef	                            mov rdi, rbp	     12889	intel_display.c	FUNCTION_360	IF_5	CALL_7
0x400f8b6	      0xe800000000	                          call 0x400f8bb	     12889	intel_display.c	FUNCTION_360	IF_5	CALL_7
0x400f8bb	            0x85c0	                           test eax, eax	     12890	intel_display.c	FUNCTION_360	IF_5	IF_6
0x400f8bd	     0xf84fc000000	                            je 0x400f9bf	     12890	intel_display.c	FUNCTION_360	IF_5	IF_6
0x400f8c3	              0x5b	                                 pop rbx	     12906	intel_display.c	FUNCTION_360
0x400f8c4	              0x5d	                                 pop rbp	     12906	intel_display.c	FUNCTION_360
0x400f8c5	            0x415c	                                 pop r12	     12906	intel_display.c	FUNCTION_360
0x400f8c7	              0xc3	                                     ret	     12906	intel_display.c	FUNCTION_360
0x400f8c8	          0x4c89e7	                            mov rdi, r12	     12895	intel_display.c	FUNCTION_360	ELSE_1	CALL_9
0x400f8cb	      0xe800000000	                          call 0x400f8d0	     12895	intel_display.c	FUNCTION_360	ELSE_1	CALL_9
0x400f8d0	            0x85c0	                           test eax, eax	     12896	intel_display.c	FUNCTION_360	ELSE_1	IF_7
0x400f8d2	            0x75ef	                           jne 0x400f8c3	     12896	intel_display.c	FUNCTION_360	ELSE_1	IF_7
0x400f8d4	        0x498b0424	                    mov rax, qword [r12]	      3182	intel_display.c	FUNCTION_102	CALL_1
0x400f8d8	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	      3184	intel_display.c	FUNCTION_102
0x400f8dd	      0x418b742440	            mov esi, dword [r12 + 0x40] 	      3185	intel_display.c	FUNCTION_102
0x400f8e2	          0x488b10	                    mov rdx, qword [rax]	      3182	intel_display.c	FUNCTION_102	CALL_1
0x400f8e5	      0xb8004000c0	                     mov eax, 0xc0004000	      3192	intel_display.c	FUNCTION_102	IF_1
0x400f8ea	    0x8b8a64060000	           mov ecx, dword [rdx + 0x664] 	      3190	intel_display.c	FUNCTION_102	IF_1	CALL_4
0x400f8f0	          0xf6c560	                           test ch, 0x60	      3190	intel_display.c	FUNCTION_102	IF_1	CALL_4
0x400f8f3	            0x750d	                           jne 0x400f902	      3190	intel_display.c	FUNCTION_102	IF_1	CALL_4
0x400f8f5	    0xf6825a060000	          test byte [rdx + 0x65a], 0x30 	      3190	intel_display.c	FUNCTION_102	IF_1	CALL_4
0x400f8fc	     0xf8455010000	                            je 0x400fa57	      3190	intel_display.c	FUNCTION_102	IF_1	CALL_4
0x400f902	          0x4189c0	                            mov r8d, eax	      3195	intel_display.c	FUNCTION_102	IF_2
0x400f905	    0x4181c8000000	                       or r8d, 0x1000000	      3195	intel_display.c	FUNCTION_102	IF_2
0x400f90c	    0x81e100001800	                       and ecx, 0x180000	      3195	intel_display.c	FUNCTION_102	IF_2
0x400f912	     0xfb68a5c0600	          movzx ecx, byte [rdx + 0x65c] 	      3197	intel_display.c	FUNCTION_102	IF_3	CALL_9
0x400f919	        0x410f45c0	                         cmovne eax, r8d	      3195	intel_display.c	FUNCTION_102	IF_2
0x400f91d	          0x80f904	                               cmp cl, 4	      3197	intel_display.c	FUNCTION_102	IF_3	CALL_9
0x400f920	            0x770f	                            ja 0x400f931	      3197	intel_display.c	FUNCTION_102	IF_3	CALL_9
0x400f922	        0x488b5500	                    mov rdx, qword [rbp]	      3198	intel_display.c	FUNCTION_102	CALL_10
0x400f926	    0x8b92b0040000	           mov edx, dword [rdx + 0x4b0] 	      3198	intel_display.c	FUNCTION_102	CALL_10
0x400f92c	          0xc1e218	                           shl edx, 0x18	      3198	intel_display.c	FUNCTION_102	CALL_10
0x400f92f	             0x9d0	                             or eax, edx	      3198	intel_display.c	FUNCTION_102	CALL_10
0x400f931	        0x488b5748	            mov rdx, qword [rdi + 0x48] 	      3200	intel_display.c	FUNCTION_102	SWITCH_1
0x400f935	            0x8b12	                    mov edx, dword [rdx]	      3200	intel_display.c	FUNCTION_102	SWITCH_1
0x400f937	    0x81fa58423234	                     cmp edx, 0x34324258	      3200	intel_display.c	FUNCTION_102	SWITCH_1
0x400f93d	     0xf844d010000	                            je 0x400fa90	      3200	intel_display.c	FUNCTION_102	SWITCH_1
0x400f943	     0xf86cc000000	                           jbe 0x400fa15	      3200	intel_display.c	FUNCTION_102	SWITCH_1
0x400f949	    0x81fa58523135	                     cmp edx, 0x35315258	      3200	intel_display.c	FUNCTION_102	SWITCH_1
0x400f94f	     0xf841d010000	                            je 0x400fa72	      3200	intel_display.c	FUNCTION_102	SWITCH_1
0x400f955	    0x81fa52473136	                     cmp edx, 0x36314752	      3200	intel_display.c	FUNCTION_102	SWITCH_1
0x400f95b	     0xf8425010000	                            je 0x400fa86	      3200	intel_display.c	FUNCTION_102	SWITCH_1
0x400f961	    0x81fa58523234	                     cmp edx, 0x34325258	      3200	intel_display.c	FUNCTION_102	SWITCH_1
0x400f967	     0xf85c4000000	                           jne 0x400fa31	      3200	intel_display.c	FUNCTION_102	SWITCH_1
0x400f96d	       0xd00000018	                      or eax, 0x18000000	      3211	intel_display.c	FUNCTION_102	SWITCH_1
0x400f972	          0x80f903	                               cmp cl, 3	      3227	intel_display.c	FUNCTION_102	IF_4	CALL_12
0x400f975	            0x7616	                           jbe 0x400f98d	      3227	intel_display.c	FUNCTION_102	IF_4	CALL_12
0x400f977	            0x89c2	                            mov edx, eax	      3229	intel_display.c	FUNCTION_102	IF_4
0x400f979	    0x48b901000000	          movabs rcx, 0x100000000000001 	      3229	intel_display.c	FUNCTION_102	IF_4
0x400f983	          0x80ce04	                                or dh, 4	      3229	intel_display.c	FUNCTION_102	IF_4
0x400f986	        0x48394f78	            cmp qword [rdi + 0x78], rcx 	      3229	intel_display.c	FUNCTION_102	IF_4
0x400f98a	           0xf44c2	                          cmove eax, edx	      3229	intel_display.c	FUNCTION_102	IF_4
0x400f98d	            0x89c2	                            mov edx, eax	      3232	intel_display.c	FUNCTION_102	IF_5
0x400f98f	          0x80ce80	                             or dh, 0x80	      3232	intel_display.c	FUNCTION_102	IF_5
0x400f992	        0x40f6c604	                             test sil, 4	      3232	intel_display.c	FUNCTION_102	IF_5
0x400f996	           0xf45c2	                         cmovne eax, edx	      3232	intel_display.c	FUNCTION_102	IF_5
0x400f999	          0x83e610	                           and esi, 0x10	      3234	intel_display.c	FUNCTION_102	IF_6
0x400f99c	     0xf84a8000000	                            je 0x400fa4a	      3234	intel_display.c	FUNCTION_102	IF_6
0x400f9a2	          0x80cc01	                                or ah, 1	      3235	intel_display.c	FUNCTION_102	IF_6
0x400f9a5	      0xe9a0000000	                           jmp 0x400fa4a	      3235	intel_display.c	FUNCTION_102	IF_6
0x400f9aa	    0x41b801000000	                              mov r8d, 1	      3235	intel_display.c	FUNCTION_102	IF_6
0x400f9b0	      0xb900000100	                        mov ecx, 0x10000	     12865	intel_display.c	FUNCTION_360
0x400f9b5	      0xba00000100	                        mov edx, 0x10000	     12864	intel_display.c	FUNCTION_360
0x400f9ba	      0xe9c7feffff	                           jmp 0x400f886	     12864	intel_display.c	FUNCTION_360
0x400f9bf	          0x4c89e6	                            mov rsi, r12	     12893	intel_display.c	FUNCTION_360	IF_5	CALL_8
0x400f9c2	          0x4889ef	                            mov rdi, rbp	     12893	intel_display.c	FUNCTION_360	IF_5	CALL_8
0x400f9c5	      0xe800000000	                          call 0x400f9ca	     12893	intel_display.c	FUNCTION_360	IF_5	CALL_8
0x400f9ca	    0x41898424b000	             mov dword [r12 + 0xb0], eax	     12893	intel_display.c	FUNCTION_360	IF_5	CALL_8
0x400f9d2	    0x80bb5c060000	               cmp byte [rbx + 0x65c], 9	     12902	intel_display.c	FUNCTION_360	IF_8	CALL_12
0x400f9d9	            0x7709	                            ja 0x400f9e4	     12902	intel_display.c	FUNCTION_360	IF_8	CALL_12
0x400f9db	    0xf68367060000	              test byte [rbx + 0x667], 2	     12902	intel_display.c	FUNCTION_360	IF_8	CALL_12
0x400f9e2	            0x7413	                            je 0x400f9f7	     12902	intel_display.c	FUNCTION_360	IF_8	CALL_12
0x400f9e4	          0x4c89e6	                            mov rsi, r12	     12903	intel_display.c	FUNCTION_360	CALL_13
0x400f9e7	          0x4889ef	                            mov rdi, rbp	     12903	intel_display.c	FUNCTION_360	CALL_13
0x400f9ea	      0xe800000000	                          call 0x400f9ef	     12903	intel_display.c	FUNCTION_360	CALL_13
0x400f9ef	    0x41898424b400	             mov dword [r12 + 0xb4], eax	     12903	intel_display.c	FUNCTION_360	CALL_13
0x400f9f7	              0x5b	                                 pop rbx	     12906	intel_display.c	FUNCTION_360
0x400f9f8	            0x31c0	                            xor eax, eax	     12905	intel_display.c	FUNCTION_360
0x400f9fa	              0x5d	                                 pop rbp	     12906	intel_display.c	FUNCTION_360
0x400f9fb	            0x415c	                                 pop r12	     12906	intel_display.c	FUNCTION_360
0x400f9fd	              0xc3	                                     ret	     12906	intel_display.c	FUNCTION_360
0x400f9fe	      0xe84d95ffff	         call sym.skl_max_scale.part.141	     12906	intel_display.c	FUNCTION_360
0x400fa03	    0x41b801000000	                              mov r8d, 1	     12906	intel_display.c	FUNCTION_360
0x400fa09	            0x89c1	                            mov ecx, eax	     12906	intel_display.c	FUNCTION_360
0x400fa0b	      0xba01000000	                              mov edx, 1	     12872	intel_display.c	FUNCTION_360	IF_1	IF_2
0x400fa10	      0xe971feffff	                           jmp 0x400f886	     12872	intel_display.c	FUNCTION_360	IF_1	IF_2
0x400fa15	    0x81fa58423330	                     cmp edx, 0x30334258	      3200	intel_display.c	FUNCTION_102	SWITCH_1
0x400fa1b	     0xf8483000000	                            je 0x400faa4	      3200	intel_display.c	FUNCTION_102	SWITCH_1
0x400fa21	    0x81fa58523330	                     cmp edx, 0x30335258	      3200	intel_display.c	FUNCTION_102	SWITCH_1
0x400fa27	            0x7471	                            je 0x400fa9a	      3200	intel_display.c	FUNCTION_102	SWITCH_1
0x400fa29	    0x81fa43382020	                     cmp edx, 0x20203843	      3200	intel_display.c	FUNCTION_102	SWITCH_1
0x400fa2f	            0x744b	                            je 0x400fa7c	      3200	intel_display.c	FUNCTION_102	SWITCH_1
0x400fa31	            0x89d6	                            mov esi, edx	      3223	intel_display.c	FUNCTION_102	SWITCH_1	CALL_11
0x400fa33	    0x48c7c7000000	                              mov rdi, 0	      3223	intel_display.c	FUNCTION_102	SWITCH_1	CALL_11
0x400fa3a	    0x48c7c2000000	                              mov rdx, 0	      3223	intel_display.c	FUNCTION_102	SWITCH_1	CALL_11
0x400fa41	      0xe800000000	                          call 0x400fa46	      3223	intel_display.c	FUNCTION_102	SWITCH_1	CALL_11
0x400fa46	             0xf0b	                                     ud2	      3223	intel_display.c	FUNCTION_102	SWITCH_1	CALL_11
0x400fa48	            0x31c0	                            xor eax, eax	      3224	intel_display.c	FUNCTION_102	SWITCH_1
0x400fa4a	    0x41898424b000	             mov dword [r12 + 0xb0], eax	     12899	intel_display.c	FUNCTION_360	ELSE_1	CALL_10
0x400fa52	      0xe97bffffff	                           jmp 0x400f9d2	     12899	intel_display.c	FUNCTION_360	ELSE_1	CALL_10
0x400fa57	            0x89c8	                            mov eax, ecx	      3191	intel_display.c	FUNCTION_102	IF_1	CALL_6
0x400fa59	      0x2500000200	                        and eax, 0x20000	      3191	intel_display.c	FUNCTION_102	IF_1	CALL_6
0x400fa5e	          0x83f801	                              cmp eax, 1	      3188	intel_display.c	FUNCTION_102
0x400fa61	            0x19c0	                            sbb eax, eax	      3188	intel_display.c	FUNCTION_102
0x400fa63	      0x2500c0ffff	                     and eax, 0xffffc000	      3188	intel_display.c	FUNCTION_102
0x400fa68	      0x2d00c0ff3f	                     sub eax, 0x3fffc000	      3188	intel_display.c	FUNCTION_102
0x400fa6d	      0xe990feffff	                           jmp 0x400f902	      3188	intel_display.c	FUNCTION_102
0x400fa72	       0xd00000010	                      or eax, 0x10000000	      3205	intel_display.c	FUNCTION_102	SWITCH_1
0x400fa77	      0xe9f6feffff	                           jmp 0x400f972	      3205	intel_display.c	FUNCTION_102	SWITCH_1
0x400fa7c	       0xd00000008	                    or eax, section_end.	      3202	intel_display.c	FUNCTION_102	SWITCH_1
0x400fa81	      0xe9ecfeffff	                           jmp 0x400f972	      3202	intel_display.c	FUNCTION_102	SWITCH_1
0x400fa86	       0xd00000014	                      or eax, 0x14000000	      3208	intel_display.c	FUNCTION_102	SWITCH_1
0x400fa8b	      0xe9e2feffff	                           jmp 0x400f972	      3208	intel_display.c	FUNCTION_102	SWITCH_1
0x400fa90	       0xd00000038	                      or eax, 0x38000000	      3214	intel_display.c	FUNCTION_102	SWITCH_1
0x400fa95	      0xe9d8feffff	                           jmp 0x400f972	      3214	intel_display.c	FUNCTION_102	SWITCH_1
0x400fa9a	       0xd00000028	                      or eax, 0x28000000	      3217	intel_display.c	FUNCTION_102	SWITCH_1
0x400fa9f	      0xe9cefeffff	                           jmp 0x400f972	      3217	intel_display.c	FUNCTION_102	SWITCH_1
0x400faa4	       0xd00000020	                      or eax, 0x20000000	      3220	intel_display.c	FUNCTION_102	SWITCH_1
0x400faa9	      0xe9c4feffff	                           jmp 0x400f972	      3220	intel_display.c	FUNCTION_102	SWITCH_1
clear_intel_crtc_state	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,2:ELSE,0:functions,0:CALL,9	152
0x4001f30	      0x4c8d542408	                      lea r10, [rsp + 8]	     10822	intel_display.c	FUNCTION_314
0x4001f35	        0x4883e4f0	             and rsp, 0xfffffffffffffff0	     10822	intel_display.c	FUNCTION_314
0x4001f39	          0x4889fa	                            mov rdx, rdi	     10822	intel_display.c	FUNCTION_314
0x4001f3c	        0x41ff72f8	                    push qword [r10 - 8]	     10822	intel_display.c	FUNCTION_314
0x4001f40	              0x55	                                push rbp	     10822	intel_display.c	FUNCTION_314
0x4001f41	          0x4889e5	                            mov rbp, rsp	     10822	intel_display.c	FUNCTION_314
0x4001f44	            0x4157	                                push r15	     10822	intel_display.c	FUNCTION_314
0x4001f46	            0x4156	                                push r14	     10822	intel_display.c	FUNCTION_314
0x4001f48	            0x4155	                                push r13	     10822	intel_display.c	FUNCTION_314
0x4001f4a	            0x4154	                                push r12	     10822	intel_display.c	FUNCTION_314
0x4001f4c	            0x4152	                                push r10	     10822	intel_display.c	FUNCTION_314
0x4001f4e	              0x53	                                push rbx	     10822	intel_display.c	FUNCTION_314
0x4001f4f	    0x4881ec800100	                          sub rsp, 0x180	     10822	intel_display.c	FUNCTION_314
0x4001f56	    0x4c8bb7780200	           mov r14, qword [rdi + 0x278] 	     10837	intel_display.c	FUNCTION_314
0x4001f5d	    0x448baf800200	          mov r13d, dword [rdi + 0x280] 	     10838	intel_display.c	FUNCTION_314
0x4001f64	    0x65488b042528	                mov rax, qword gs:[0x28]	     10822	intel_display.c	FUNCTION_314
0x4001f6d	        0x488945c8	             mov qword [rbp - 0x38], rax	     10822	intel_display.c	FUNCTION_314
0x4001f71	            0x31c0	                            xor eax, eax	     10822	intel_display.c	FUNCTION_314
0x4001f73	          0x488b07	                    mov rax, qword [rdi]	     10824	intel_display.c	FUNCTION_314	CALL_1
0x4001f76	    0x448ba7840200	          mov r12d, dword [rdi + 0x284] 	     10838	intel_display.c	FUNCTION_314
0x4001f7d	    0x8b9f88020000	           mov ebx, dword [rdi + 0x288] 	     10838	intel_display.c	FUNCTION_314
0x4001f83	          0x4c8b00	                     mov r8, qword [rax]	     10824	intel_display.c	FUNCTION_314	CALL_1
0x4001f86	    0x488b87500300	           mov rax, qword [rdi + 0x350] 	     10836	intel_display.c	FUNCTION_314
0x4001f8d	    0x48898590feff	            mov qword [rbp - 0x170], rax	     10836	intel_display.c	FUNCTION_314
0x4001f94	    0x488b87580300	           mov rax, qword [rdi + 0x358] 	     10836	intel_display.c	FUNCTION_314
0x4001f9b	    0x48898598feff	            mov qword [rbp - 0x168], rax	     10836	intel_display.c	FUNCTION_314
0x4001fa2	    0x488b87600300	           mov rax, qword [rdi + 0x360] 	     10836	intel_display.c	FUNCTION_314
0x4001fa9	    0x488985a0feff	            mov qword [rbp - 0x160], rax	     10836	intel_display.c	FUNCTION_314
0x4001fb0	    0x8b878c020000	           mov eax, dword [rdi + 0x28c] 	     10838	intel_display.c	FUNCTION_314
0x4001fb6	    0x89858cfeffff	            mov dword [rbp - 0x174], eax	     10838	intel_display.c	FUNCTION_314
0x4001fbc	    0x8b8790020000	           mov eax, dword [rdi + 0x290] 	     10838	intel_display.c	FUNCTION_314
0x4001fc2	    0x898584feffff	            mov dword [rbp - 0x17c], eax	     10838	intel_display.c	FUNCTION_314
0x4001fc8	    0x8b8794020000	           mov eax, dword [rdi + 0x294] 	     10838	intel_display.c	FUNCTION_314
0x4001fce	    0x898588feffff	            mov dword [rbp - 0x178], eax	     10838	intel_display.c	FUNCTION_314
0x4001fd4	    0x8b8798020000	           mov eax, dword [rdi + 0x298] 	     10838	intel_display.c	FUNCTION_314
0x4001fda	    0x898580feffff	            mov dword [rbp - 0x180], eax	     10838	intel_display.c	FUNCTION_314
0x4001fe0	    0x8b879c020000	           mov eax, dword [rdi + 0x29c] 	     10838	intel_display.c	FUNCTION_314
0x4001fe6	    0x89857cfeffff	            mov dword [rbp - 0x184], eax	     10838	intel_display.c	FUNCTION_314
0x4001fec	    0x8b87a0020000	           mov eax, dword [rdi + 0x2a0] 	     10838	intel_display.c	FUNCTION_314
0x4001ff2	    0x41f780640600	      test dword [r8 + 0x664], 0x246000 	     10841	intel_display.c	FUNCTION_314	IF_1	CALL_2
0x4001ffd	    0x448bbfcc0200	          mov r15d, dword [rdi + 0x2cc] 	     10838	intel_display.c	FUNCTION_314
0x4002004	    0x448b9fd00200	          mov r11d, dword [rdi + 0x2d0] 	     10838	intel_display.c	FUNCTION_314
0x400200b	    0x440fb6972d03	         movzx r10d, byte [rdi + 0x32d] 	     10839	intel_display.c	FUNCTION_314
0x4002013	    0x898578feffff	            mov dword [rbp - 0x188], eax	     10838	intel_display.c	FUNCTION_314
0x4002019	    0x8b87a4020000	           mov eax, dword [rdi + 0x2a4] 	     10838	intel_display.c	FUNCTION_314
0x400201f	    0x440fb68f4903	          movzx r9d, byte [rdi + 0x349] 	     10840	intel_display.c	FUNCTION_314
0x4002027	    0x898574feffff	            mov dword [rbp - 0x18c], eax	     10838	intel_display.c	FUNCTION_314
0x400202d	    0x8b87a8020000	           mov eax, dword [rdi + 0x2a8] 	     10838	intel_display.c	FUNCTION_314
0x4002033	    0x898570feffff	            mov dword [rbp - 0x190], eax	     10838	intel_display.c	FUNCTION_314
0x4002039	    0x8b87ac020000	           mov eax, dword [rdi + 0x2ac] 	     10838	intel_display.c	FUNCTION_314
0x400203f	    0x89856cfeffff	            mov dword [rbp - 0x194], eax	     10838	intel_display.c	FUNCTION_314
0x4002045	    0x8b87b0020000	           mov eax, dword [rdi + 0x2b0] 	     10838	intel_display.c	FUNCTION_314
0x400204b	    0x898568feffff	            mov dword [rbp - 0x198], eax	     10838	intel_display.c	FUNCTION_314
0x4002051	    0x8b87b4020000	           mov eax, dword [rdi + 0x2b4] 	     10838	intel_display.c	FUNCTION_314
0x4002057	    0x898564feffff	            mov dword [rbp - 0x19c], eax	     10838	intel_display.c	FUNCTION_314
0x400205d	    0x8b87b8020000	           mov eax, dword [rdi + 0x2b8] 	     10838	intel_display.c	FUNCTION_314
0x4002063	    0x898560feffff	            mov dword [rbp - 0x1a0], eax	     10838	intel_display.c	FUNCTION_314
0x4002069	    0x8b87bc020000	           mov eax, dword [rdi + 0x2bc] 	     10838	intel_display.c	FUNCTION_314
0x400206f	    0x89855cfeffff	            mov dword [rbp - 0x1a4], eax	     10838	intel_display.c	FUNCTION_314
0x4002075	    0x8b87c0020000	           mov eax, dword [rdi + 0x2c0] 	     10838	intel_display.c	FUNCTION_314
0x400207b	    0x898558feffff	            mov dword [rbp - 0x1a8], eax	     10838	intel_display.c	FUNCTION_314
0x4002081	    0x8b87c4020000	           mov eax, dword [rdi + 0x2c4] 	     10838	intel_display.c	FUNCTION_314
0x4002087	    0x898554feffff	            mov dword [rbp - 0x1ac], eax	     10838	intel_display.c	FUNCTION_314
0x400208d	    0x8b87c8020000	           mov eax, dword [rdi + 0x2c8] 	     10838	intel_display.c	FUNCTION_314
0x4002093	    0x898550feffff	            mov dword [rbp - 0x1b0], eax	     10838	intel_display.c	FUNCTION_314
0x4002099	            0x742f	                            je 0x40020ca	     10841	intel_display.c	FUNCTION_314	IF_1	CALL_2
0x400209b	    0x488b87700300	           mov rax, qword [rdi + 0x370] 	     10843	intel_display.c	FUNCTION_314	IF_1
0x40020a2	    0x488db2740300	                  lea rsi, [rdx + 0x374]	     10843	intel_display.c	FUNCTION_314	IF_1
0x40020a9	      0xb923000000	                           mov ecx, 0x23	     10843	intel_display.c	FUNCTION_314	IF_1
0x40020ae	    0x488985acfeff	            mov qword [rbp - 0x154], rax	     10843	intel_display.c	FUNCTION_314	IF_1
0x40020b5	    0x488b87840400	           mov rax, qword [rdi + 0x484] 	     10843	intel_display.c	FUNCTION_314	IF_1
0x40020bc	    0x488dbdb0feff	                  lea rdi, [rbp - 0x150]	     10843	intel_display.c	FUNCTION_314	IF_1
0x40020c3	        0x488945c0	             mov qword [rbp - 0x40], rax	     10843	intel_display.c	FUNCTION_314	IF_1
0x40020c7	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	     10843	intel_display.c	FUNCTION_314	IF_1
0x40020ca	    0x488dba200200	                  lea rdi, [rdx + 0x220]	     10847	intel_display.c	FUNCTION_314	CALL_6
0x40020d1	            0x89d0	                            mov eax, edx	     10847	intel_display.c	FUNCTION_314	CALL_6
0x40020d3	    0x48c782180200	              mov qword [rdx + 0x218], 0	     10847	intel_display.c	FUNCTION_314	CALL_6
0x40020de	    0x48c782900400	              mov qword [rdx + 0x490], 0	     10847	intel_display.c	FUNCTION_314	CALL_6
0x40020e9	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	     10847	intel_display.c	FUNCTION_314	CALL_6
0x40020ed	            0x29f8	                            sub eax, edi	     10847	intel_display.c	FUNCTION_314	CALL_6
0x40020ef	    0x8d8898040000	                  lea ecx, [rax + 0x498]	     10847	intel_display.c	FUNCTION_314	CALL_6
0x40020f5	            0x31c0	                            xor eax, eax	     10847	intel_display.c	FUNCTION_314	CALL_6
0x40020f7	          0xc1e903	                              shr ecx, 3	     10847	intel_display.c	FUNCTION_314	CALL_6
0x40020fa	          0xf348ab	              rep stosq qword [rdi], rax	     10847	intel_display.c	FUNCTION_314	CALL_6
0x40020fd	    0x4c89b2780200	            mov qword [rdx + 0x278], r14	     10851	intel_display.c	FUNCTION_314
0x4002104	    0x4489aa800200	           mov dword [rdx + 0x280], r13d	     10852	intel_display.c	FUNCTION_314
0x400210b	    0x4489a2840200	           mov dword [rdx + 0x284], r12d	     10852	intel_display.c	FUNCTION_314
0x4002112	    0x899a88020000	            mov dword [rdx + 0x288], ebx	     10852	intel_display.c	FUNCTION_314
0x4002118	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	     10850	intel_display.c	FUNCTION_314
0x400211f	    0x488982500300	            mov qword [rdx + 0x350], rax	     10850	intel_display.c	FUNCTION_314
0x4002126	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	     10850	intel_display.c	FUNCTION_314
0x400212d	    0x488982580300	            mov qword [rdx + 0x358], rax	     10850	intel_display.c	FUNCTION_314
0x4002134	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	     10850	intel_display.c	FUNCTION_314
0x400213b	    0x488982600300	            mov qword [rdx + 0x360], rax	     10850	intel_display.c	FUNCTION_314
0x4002142	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	     10852	intel_display.c	FUNCTION_314
0x4002148	    0x89828c020000	            mov dword [rdx + 0x28c], eax	     10852	intel_display.c	FUNCTION_314
0x400214e	    0x8b8584feffff	            mov eax, dword [rbp - 0x17c]	     10852	intel_display.c	FUNCTION_314
0x4002154	    0x898290020000	            mov dword [rdx + 0x290], eax	     10852	intel_display.c	FUNCTION_314
0x400215a	    0x8b8588feffff	            mov eax, dword [rbp - 0x178]	     10852	intel_display.c	FUNCTION_314
0x4002160	    0x898294020000	            mov dword [rdx + 0x294], eax	     10852	intel_display.c	FUNCTION_314
0x4002166	    0x8b8580feffff	            mov eax, dword [rbp - 0x180]	     10852	intel_display.c	FUNCTION_314
0x400216c	    0x898298020000	            mov dword [rdx + 0x298], eax	     10852	intel_display.c	FUNCTION_314
0x4002172	    0x8b857cfeffff	            mov eax, dword [rbp - 0x184]	     10852	intel_display.c	FUNCTION_314
0x4002178	    0x89829c020000	            mov dword [rdx + 0x29c], eax	     10852	intel_display.c	FUNCTION_314
0x400217e	    0x8b8578feffff	            mov eax, dword [rbp - 0x188]	     10852	intel_display.c	FUNCTION_314
0x4002184	    0x8982a0020000	            mov dword [rdx + 0x2a0], eax	     10852	intel_display.c	FUNCTION_314
0x400218a	    0x8b8574feffff	            mov eax, dword [rbp - 0x18c]	     10852	intel_display.c	FUNCTION_314
0x4002190	    0x8982a4020000	            mov dword [rdx + 0x2a4], eax	     10852	intel_display.c	FUNCTION_314
0x4002196	    0x8b8570feffff	            mov eax, dword [rbp - 0x190]	     10852	intel_display.c	FUNCTION_314
0x400219c	    0x8982a8020000	            mov dword [rdx + 0x2a8], eax	     10852	intel_display.c	FUNCTION_314
0x40021a2	    0x8b856cfeffff	            mov eax, dword [rbp - 0x194]	     10852	intel_display.c	FUNCTION_314
0x40021a8	    0x8982ac020000	            mov dword [rdx + 0x2ac], eax	     10852	intel_display.c	FUNCTION_314
0x40021ae	    0x8b8568feffff	            mov eax, dword [rbp - 0x198]	     10852	intel_display.c	FUNCTION_314
0x40021b4	    0x8982b0020000	            mov dword [rdx + 0x2b0], eax	     10852	intel_display.c	FUNCTION_314
0x40021ba	    0x8b8564feffff	            mov eax, dword [rbp - 0x19c]	     10852	intel_display.c	FUNCTION_314
0x40021c0	    0x4489bacc0200	           mov dword [rdx + 0x2cc], r15d	     10852	intel_display.c	FUNCTION_314
0x40021c7	    0x44899ad00200	           mov dword [rdx + 0x2d0], r11d	     10852	intel_display.c	FUNCTION_314
0x40021ce	    0x4488922d0300	            mov byte [rdx + 0x32d], r10b	     10853	intel_display.c	FUNCTION_314
0x40021d5	    0x44888a490300	             mov byte [rdx + 0x349], r9b	     10854	intel_display.c	FUNCTION_314
0x40021dc	    0x8982b4020000	            mov dword [rdx + 0x2b4], eax	     10852	intel_display.c	FUNCTION_314
0x40021e2	    0x8b8560feffff	            mov eax, dword [rbp - 0x1a0]	     10852	intel_display.c	FUNCTION_314
0x40021e8	    0x8982b8020000	            mov dword [rdx + 0x2b8], eax	     10852	intel_display.c	FUNCTION_314
0x40021ee	    0x8b855cfeffff	            mov eax, dword [rbp - 0x1a4]	     10852	intel_display.c	FUNCTION_314
0x40021f4	    0x8982bc020000	            mov dword [rdx + 0x2bc], eax	     10852	intel_display.c	FUNCTION_314
0x40021fa	    0x8b8558feffff	            mov eax, dword [rbp - 0x1a8]	     10852	intel_display.c	FUNCTION_314
0x4002200	    0x8982c0020000	            mov dword [rdx + 0x2c0], eax	     10852	intel_display.c	FUNCTION_314
0x4002206	    0x8b8554feffff	            mov eax, dword [rbp - 0x1ac]	     10852	intel_display.c	FUNCTION_314
0x400220c	    0x8982c4020000	            mov dword [rdx + 0x2c4], eax	     10852	intel_display.c	FUNCTION_314
0x4002212	    0x8b8550feffff	            mov eax, dword [rbp - 0x1b0]	     10852	intel_display.c	FUNCTION_314
0x4002218	    0x8982c8020000	            mov dword [rdx + 0x2c8], eax	     10852	intel_display.c	FUNCTION_314
0x400221e	    0x41f780640600	      test dword [r8 + 0x664], 0x246000 	     10855	intel_display.c	FUNCTION_314	IF_2	CALL_7
0x4002229	            0x741a	                            je 0x4002245	     10855	intel_display.c	FUNCTION_314	IF_2	CALL_7
0x400222b	    0x488dba700300	                  lea rdi, [rdx + 0x370]	     10857	intel_display.c	FUNCTION_314	IF_2
0x4002232	    0x488db5acfeff	                  lea rsi, [rbp - 0x154]	     10857	intel_display.c	FUNCTION_314	IF_2
0x4002239	      0xb923000000	                           mov ecx, 0x23	     10857	intel_display.c	FUNCTION_314	IF_2
0x400223e	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	     10857	intel_display.c	FUNCTION_314	IF_2
0x4002241	            0x8b06	                    mov eax, dword [rsi]	     10857	intel_display.c	FUNCTION_314	IF_2
0x4002243	            0x8907	                    mov dword [rdi], eax	     10857	intel_display.c	FUNCTION_314	IF_2
0x4002245	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10858	intel_display.c	FUNCTION_314
0x4002249	    0x654833042528	                xor rax, qword gs:[0x28]	     10858	intel_display.c	FUNCTION_314
0x4002252	            0x7518	                           jne 0x400226c	     10858	intel_display.c	FUNCTION_314
0x4002254	    0x4881c4800100	                          add rsp, 0x180	     10858	intel_display.c	FUNCTION_314
0x400225b	              0x5b	                                 pop rbx	     10858	intel_display.c	FUNCTION_314
0x400225c	            0x415a	                                 pop r10	     10858	intel_display.c	FUNCTION_314
0x400225e	            0x415c	                                 pop r12	     10858	intel_display.c	FUNCTION_314
0x4002260	            0x415d	                                 pop r13	     10858	intel_display.c	FUNCTION_314
0x4002262	            0x415e	                                 pop r14	     10858	intel_display.c	FUNCTION_314
0x4002264	            0x415f	                                 pop r15	     10858	intel_display.c	FUNCTION_314
0x4002266	              0x5d	                                 pop rbp	     10858	intel_display.c	FUNCTION_314
0x4002267	        0x498d62f8	                      lea rsp, [r10 - 8]	     10858	intel_display.c	FUNCTION_314
0x400226b	              0xc3	                                     ret	     10858	intel_display.c	FUNCTION_314
0x400226c	      0xe800000000	                          call 0x4002271	     10858	intel_display.c	FUNCTION_314
quirk_increase_t12_delay	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,2	3
0x4004e80	    0x48838f005600	          or qword [rdi + 0x5600], 0x40 	     14377	intel_display.c	FUNCTION_396
0x4004e88	    0x48c7c7000000	                              mov rdi, 0	     14378	intel_display.c	FUNCTION_396	CALL_2
0x4004e8f	      0xe900000000	                           jmp 0x4004e94	     14378	intel_display.c	FUNCTION_396	CALL_2
intel_dmi_reverse_brightness	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,1	5
0x4004e60	        0x488b7708	                mov rsi, qword [rdi + 8]	     14396	intel_display.c	FUNCTION_397	CALL_1
0x4004e64	    0x48c7c7000000	                              mov rdi, 0	     14396	intel_display.c	FUNCTION_397	CALL_1
0x4004e6b	      0xe800000000	                          call 0x4004e70	     14396	intel_display.c	FUNCTION_397	CALL_1
0x4004e70	      0xb801000000	                              mov eax, 1	     14398	intel_display.c	FUNCTION_397
0x4004e75	              0xc3	                                     ret	     14398	intel_display.c	FUNCTION_397
intel_cpu_transcoder_get_m_n	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,2:ELSE,1:functions,0:CALL,33	168
0x4000ca0	            0x4156	                                push r14	      8488	intel_display.c	FUNCTION_251
0x4000ca2	            0x4155	                                push r13	      8488	intel_display.c	FUNCTION_251
0x4000ca4	          0x4989fd	                            mov r13, rdi	      8488	intel_display.c	FUNCTION_251
0x4000ca7	            0x4154	                                push r12	      8488	intel_display.c	FUNCTION_251
0x4000ca9	              0x55	                                push rbp	      8488	intel_display.c	FUNCTION_251
0x4000caa	          0x4889d5	                            mov rbp, rdx	      8488	intel_display.c	FUNCTION_251
0x4000cad	              0x53	                                push rbx	      8488	intel_display.c	FUNCTION_251
0x4000cae	          0x488b1f	                    mov rbx, qword [rdi]	      8489	intel_display.c	FUNCTION_251	CALL_1
0x4000cb1	    0x80bb5c060000	               cmp byte [rbx + 0x65c], 4	      8492	intel_display.c	FUNCTION_251	IF_1	CALL_2
0x4000cb8	     0xf863e010000	                           jbe 0x4000dfc	      8492	intel_display.c	FUNCTION_251	IF_1	CALL_2
0x4000cbe	            0x89f6	                            mov esi, esi	      8492	intel_display.c	FUNCTION_251	IF_1	CALL_2
0x4000cc0	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	      8493	intel_display.c	FUNCTION_251	IF_1	CALL_4
0x4000cc6	          0x4989ce	                            mov r14, rcx	      8493	intel_display.c	FUNCTION_251	IF_1	CALL_4
0x4000cc9	        0x4c8d24b3	                  lea r12, [rbx + rsi*4]	      8493	intel_display.c	FUNCTION_251	IF_1	CALL_4
0x4000ccd	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	      8493	intel_display.c	FUNCTION_251	IF_1	CALL_4
0x4000cd4	          0x4889df	                            mov rdi, rbx	      8493	intel_display.c	FUNCTION_251	IF_1	CALL_4
0x4000cd7	    0x418b84249806	           mov eax, dword [r12 + 0x698] 	      8493	intel_display.c	FUNCTION_251	IF_1	CALL_4
0x4000cdf	    0x2b8398060000	            sub eax, dword [rbx + 0x698]	      8493	intel_display.c	FUNCTION_251	IF_1	CALL_4
0x4000ce5	    0x8db410400006	          lea esi, [rax + rdx + 0x60040]	      8493	intel_display.c	FUNCTION_251	IF_1	CALL_4
0x4000cec	      0xba01000000	                              mov edx, 1	      8493	intel_display.c	FUNCTION_251	IF_1	CALL_4
0x4000cf1	      0xe800000000	                          call 0x4000cf6	      8493	intel_display.c	FUNCTION_251	IF_1	CALL_4
0x4000cf6	          0x89450c	              mov dword [rbp + 0xc], eax	      8493	intel_display.c	FUNCTION_251	IF_1	CALL_4
0x4000cf9	    0x418b84249806	           mov eax, dword [r12 + 0x698] 	      8494	intel_display.c	FUNCTION_251	IF_1	CALL_6
0x4000d01	          0x4889df	                            mov rdi, rbx	      8494	intel_display.c	FUNCTION_251	IF_1	CALL_6
0x4000d04	    0x2b8398060000	            sub eax, dword [rbx + 0x698]	      8494	intel_display.c	FUNCTION_251	IF_1	CALL_6
0x4000d0a	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	      8494	intel_display.c	FUNCTION_251	IF_1	CALL_6
0x4000d10	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	      8494	intel_display.c	FUNCTION_251	IF_1	CALL_6
0x4000d17	    0x8db410440006	          lea esi, [rax + rdx + 0x60044]	      8494	intel_display.c	FUNCTION_251	IF_1	CALL_6
0x4000d1e	      0xba01000000	                              mov edx, 1	      8494	intel_display.c	FUNCTION_251	IF_1	CALL_6
0x4000d23	      0xe800000000	                          call 0x4000d28	      8494	intel_display.c	FUNCTION_251	IF_1	CALL_6
0x4000d28	          0x894510	            mov dword [rbp + 0x10], eax 	      8494	intel_display.c	FUNCTION_251	IF_1	CALL_6
0x4000d2b	    0x418b84249806	           mov eax, dword [r12 + 0x698] 	      8495	intel_display.c	FUNCTION_251	IF_1	CALL_8
0x4000d33	          0x4889df	                            mov rdi, rbx	      8495	intel_display.c	FUNCTION_251	IF_1	CALL_8
0x4000d36	    0x2b8398060000	            sub eax, dword [rbx + 0x698]	      8495	intel_display.c	FUNCTION_251	IF_1	CALL_8
0x4000d3c	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	      8495	intel_display.c	FUNCTION_251	IF_1	CALL_8
0x4000d42	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	      8495	intel_display.c	FUNCTION_251	IF_1	CALL_8
0x4000d49	    0x8db410300006	          lea esi, [rax + rdx + 0x60030]	      8495	intel_display.c	FUNCTION_251	IF_1	CALL_8
0x4000d50	      0xba01000000	                              mov edx, 1	      8495	intel_display.c	FUNCTION_251	IF_1	CALL_8
0x4000d55	      0xe800000000	                          call 0x4000d5a	      8495	intel_display.c	FUNCTION_251	IF_1	CALL_8
0x4000d5a	      0x25ffffff81	                     and eax, 0x81ffffff	      8495	intel_display.c	FUNCTION_251	IF_1	CALL_8
0x4000d5f	          0x4889df	                            mov rdi, rbx	      8497	intel_display.c	FUNCTION_251	IF_1	CALL_10
0x4000d62	          0x894504	                mov dword [rbp + 4], eax	      8495	intel_display.c	FUNCTION_251	IF_1	CALL_8
0x4000d65	    0x418b84249806	           mov eax, dword [r12 + 0x698] 	      8497	intel_display.c	FUNCTION_251	IF_1	CALL_10
0x4000d6d	    0x2b8398060000	            sub eax, dword [rbx + 0x698]	      8497	intel_display.c	FUNCTION_251	IF_1	CALL_10
0x4000d73	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	      8497	intel_display.c	FUNCTION_251	IF_1	CALL_10
0x4000d79	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	      8497	intel_display.c	FUNCTION_251	IF_1	CALL_10
0x4000d80	    0x8db410340006	          lea esi, [rax + rdx + 0x60034]	      8497	intel_display.c	FUNCTION_251	IF_1	CALL_10
0x4000d87	      0xba01000000	                              mov edx, 1	      8497	intel_display.c	FUNCTION_251	IF_1	CALL_10
0x4000d8c	      0xe800000000	                          call 0x4000d91	      8497	intel_display.c	FUNCTION_251	IF_1	CALL_10
0x4000d91	          0x894508	                mov dword [rbp + 8], eax	      8497	intel_display.c	FUNCTION_251	IF_1	CALL_10
0x4000d94	    0x418b84249806	           mov eax, dword [r12 + 0x698] 	      8498	intel_display.c	FUNCTION_251	IF_1	CALL_12
0x4000d9c	          0x4889df	                            mov rdi, rbx	      8498	intel_display.c	FUNCTION_251	IF_1	CALL_12
0x4000d9f	    0x2b8398060000	            sub eax, dword [rbx + 0x698]	      8498	intel_display.c	FUNCTION_251	IF_1	CALL_12
0x4000da5	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	      8498	intel_display.c	FUNCTION_251	IF_1	CALL_12
0x4000dab	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	      8498	intel_display.c	FUNCTION_251	IF_1	CALL_12
0x4000db2	    0x8db410300006	          lea esi, [rax + rdx + 0x60030]	      8498	intel_display.c	FUNCTION_251	IF_1	CALL_12
0x4000db9	      0xba01000000	                              mov edx, 1	      8498	intel_display.c	FUNCTION_251	IF_1	CALL_12
0x4000dbe	      0xe800000000	                          call 0x4000dc3	      8498	intel_display.c	FUNCTION_251	IF_1	CALL_12
0x4000dc3	      0x250000007e	                     and eax, 0x7e000000	      8498	intel_display.c	FUNCTION_251	IF_1	CALL_12
0x4000dc8	          0xc1e819	                           shr eax, 0x19	      8498	intel_display.c	FUNCTION_251	IF_1	CALL_12
0x4000dcb	          0x83c001	                              add eax, 1	      8498	intel_display.c	FUNCTION_251	IF_1	CALL_12
0x4000dce	          0x4d85f6	                           test r14, r14	      8504	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_13
0x4000dd1	          0x894500	                    mov dword [rbp], eax	      8498	intel_display.c	FUNCTION_251	IF_1	CALL_12
0x4000dd4	            0x741d	                            je 0x4000df3	      8504	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_13
0x4000dd6	    0x80bb5c060000	               cmp byte [rbx + 0x65c], 7	      8504	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_13
0x4000ddd	            0x7714	                            ja 0x4000df3	      8504	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_13
0x4000ddf	    0x498b85c80400	           mov rax, qword [r13 + 0x4c8] 	      8505	intel_display.c	FUNCTION_251	IF_1	IF_2
0x4000de6	    0x80b808030000	               cmp byte [rax + 0x308], 0	      8504	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_13
0x4000ded	     0xf85c6000000	                           jne 0x4000eb9	      8504	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_13
0x4000df3	              0x5b	                                 pop rbx	      8523	intel_display.c	FUNCTION_251
0x4000df4	              0x5d	                                 pop rbp	      8523	intel_display.c	FUNCTION_251
0x4000df5	            0x415c	                                 pop r12	      8523	intel_display.c	FUNCTION_251
0x4000df7	            0x415d	                                 pop r13	      8523	intel_display.c	FUNCTION_251
0x4000df9	            0x415e	                                 pop r14	      8523	intel_display.c	FUNCTION_251
0x4000dfb	              0xc3	                                     ret	      8523	intel_display.c	FUNCTION_251
0x4000dfc	    0x448ba7b00400	          mov r12d, dword [rdi + 0x4b0] 	      8515	intel_display.c	FUNCTION_251	ELSE_1	CALL_25
0x4000e03	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      8515	intel_display.c	FUNCTION_251	ELSE_1	CALL_25
0x4000e0a	          0x4889df	                            mov rdi, rbx	      8515	intel_display.c	FUNCTION_251	ELSE_1	CALL_25
0x4000e0d	      0xba01000000	                              mov edx, 1	      8515	intel_display.c	FUNCTION_251	ELSE_1	CALL_25
0x4000e12	        0x41c1e40c	                           shl r12d, 0xc	      8515	intel_display.c	FUNCTION_251	ELSE_1	CALL_25
0x4000e16	    0x458dac245000	               lea r13d, [r12 + 0x70050]	      8517	intel_display.c	FUNCTION_251	ELSE_1	CALL_29
0x4000e1e	    0x418db4246000	                lea esi, [r12 + 0x70060]	      8515	intel_display.c	FUNCTION_251	ELSE_1	CALL_25
0x4000e26	      0xe800000000	                          call 0x4000e2b	      8515	intel_display.c	FUNCTION_251	ELSE_1	CALL_25
0x4000e2b	    0x418db4246400	                lea esi, [r12 + 0x70064]	      8516	intel_display.c	FUNCTION_251	ELSE_1	CALL_27
0x4000e33	          0x89450c	              mov dword [rbp + 0xc], eax	      8515	intel_display.c	FUNCTION_251	ELSE_1	CALL_25
0x4000e36	          0x4889df	                            mov rdi, rbx	      8516	intel_display.c	FUNCTION_251	ELSE_1	CALL_27
0x4000e39	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      8516	intel_display.c	FUNCTION_251	ELSE_1	CALL_27
0x4000e40	      0xba01000000	                              mov edx, 1	      8516	intel_display.c	FUNCTION_251	ELSE_1	CALL_27
0x4000e45	      0xe800000000	                          call 0x4000e4a	      8516	intel_display.c	FUNCTION_251	ELSE_1	CALL_27
0x4000e4a	          0x4489ee	                           mov esi, r13d	      8517	intel_display.c	FUNCTION_251	ELSE_1	CALL_29
0x4000e4d	          0x894510	            mov dword [rbp + 0x10], eax 	      8516	intel_display.c	FUNCTION_251	ELSE_1	CALL_27
0x4000e50	          0x4889df	                            mov rdi, rbx	      8517	intel_display.c	FUNCTION_251	ELSE_1	CALL_29
0x4000e53	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      8517	intel_display.c	FUNCTION_251	ELSE_1	CALL_29
0x4000e5a	      0xba01000000	                              mov edx, 1	      8517	intel_display.c	FUNCTION_251	ELSE_1	CALL_29
0x4000e5f	      0xe800000000	                          call 0x4000e64	      8517	intel_display.c	FUNCTION_251	ELSE_1	CALL_29
0x4000e64	      0x25ffffff81	                     and eax, 0x81ffffff	      8517	intel_display.c	FUNCTION_251	ELSE_1	CALL_29
0x4000e69	    0x418db4245400	                lea esi, [r12 + 0x70054]	      8519	intel_display.c	FUNCTION_251	ELSE_1	CALL_31
0x4000e71	          0x4889df	                            mov rdi, rbx	      8519	intel_display.c	FUNCTION_251	ELSE_1	CALL_31
0x4000e74	          0x894504	                mov dword [rbp + 4], eax	      8517	intel_display.c	FUNCTION_251	ELSE_1	CALL_29
0x4000e77	      0xba01000000	                              mov edx, 1	      8519	intel_display.c	FUNCTION_251	ELSE_1	CALL_31
0x4000e7c	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      8519	intel_display.c	FUNCTION_251	ELSE_1	CALL_31
0x4000e83	      0xe800000000	                          call 0x4000e88	      8519	intel_display.c	FUNCTION_251	ELSE_1	CALL_31
0x4000e88	          0x4489ee	                           mov esi, r13d	      8520	intel_display.c	FUNCTION_251	ELSE_1	CALL_33
0x4000e8b	          0x894508	                mov dword [rbp + 8], eax	      8519	intel_display.c	FUNCTION_251	ELSE_1	CALL_31
0x4000e8e	          0x4889df	                            mov rdi, rbx	      8520	intel_display.c	FUNCTION_251	ELSE_1	CALL_33
0x4000e91	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      8520	intel_display.c	FUNCTION_251	ELSE_1	CALL_33
0x4000e98	      0xba01000000	                              mov edx, 1	      8520	intel_display.c	FUNCTION_251	ELSE_1	CALL_33
0x4000e9d	      0xe800000000	                          call 0x4000ea2	      8520	intel_display.c	FUNCTION_251	ELSE_1	CALL_33
0x4000ea2	      0x250000007e	                     and eax, 0x7e000000	      8520	intel_display.c	FUNCTION_251	ELSE_1	CALL_33
0x4000ea7	          0xc1e819	                           shr eax, 0x19	      8520	intel_display.c	FUNCTION_251	ELSE_1	CALL_33
0x4000eaa	          0x83c001	                              add eax, 1	      8520	intel_display.c	FUNCTION_251	ELSE_1	CALL_33
0x4000ead	          0x894500	                    mov dword [rbp], eax	      8520	intel_display.c	FUNCTION_251	ELSE_1	CALL_33
0x4000eb0	              0x5b	                                 pop rbx	      8523	intel_display.c	FUNCTION_251
0x4000eb1	              0x5d	                                 pop rbp	      8523	intel_display.c	FUNCTION_251
0x4000eb2	            0x415c	                                 pop r12	      8523	intel_display.c	FUNCTION_251
0x4000eb4	            0x415d	                                 pop r13	      8523	intel_display.c	FUNCTION_251
0x4000eb6	            0x415e	                                 pop r14	      8523	intel_display.c	FUNCTION_251
0x4000eb8	              0xc3	                                     ret	      8523	intel_display.c	FUNCTION_251
0x4000eb9	    0x418b84249806	           mov eax, dword [r12 + 0x698] 	      8506	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_15
0x4000ec1	    0x2b8398060000	            sub eax, dword [rbx + 0x698]	      8506	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_15
0x4000ec7	          0x4889df	                            mov rdi, rbx	      8506	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_15
0x4000eca	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	      8506	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_15
0x4000ed0	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	      8506	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_15
0x4000ed7	    0x8db410480006	          lea esi, [rax + rdx + 0x60048]	      8506	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_15
0x4000ede	      0xba01000000	                              mov edx, 1	      8506	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_15
0x4000ee3	      0xe800000000	                          call 0x4000ee8	      8506	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_15
0x4000ee8	        0x4189460c	              mov dword [r14 + 0xc], eax	      8506	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_15
0x4000eec	    0x418b84249806	           mov eax, dword [r12 + 0x698] 	      8507	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_17
0x4000ef4	          0x4889df	                            mov rdi, rbx	      8507	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_17
0x4000ef7	    0x2b8398060000	            sub eax, dword [rbx + 0x698]	      8507	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_17
0x4000efd	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	      8507	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_17
0x4000f03	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	      8507	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_17
0x4000f0a	    0x8db4104c0006	          lea esi, [rax + rdx + 0x6004c]	      8507	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_17
0x4000f11	      0xba01000000	                              mov edx, 1	      8507	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_17
0x4000f16	      0xe800000000	                          call 0x4000f1b	      8507	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_17
0x4000f1b	        0x41894610	             mov dword [r14 + 0x10], eax	      8507	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_17
0x4000f1f	    0x418b84249806	           mov eax, dword [r12 + 0x698] 	      8508	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_19
0x4000f27	          0x4889df	                            mov rdi, rbx	      8508	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_19
0x4000f2a	    0x2b8398060000	            sub eax, dword [rbx + 0x698]	      8508	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_19
0x4000f30	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	      8508	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_19
0x4000f36	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	      8508	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_19
0x4000f3d	    0x8db410380006	          lea esi, [rax + rdx + 0x60038]	      8508	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_19
0x4000f44	      0xba01000000	                              mov edx, 1	      8508	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_19
0x4000f49	      0xe800000000	                          call 0x4000f4e	      8508	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_19
0x4000f4e	      0x25ffffff81	                     and eax, 0x81ffffff	      8508	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_19
0x4000f53	          0x4889df	                            mov rdi, rbx	      8510	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_21
0x4000f56	        0x41894604	                mov dword [r14 + 4], eax	      8508	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_19
0x4000f5a	    0x418b84249806	           mov eax, dword [r12 + 0x698] 	      8510	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_21
0x4000f62	    0x2b8398060000	            sub eax, dword [rbx + 0x698]	      8510	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_21
0x4000f68	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	      8510	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_21
0x4000f6e	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	      8510	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_21
0x4000f75	    0x8db4103c0006	          lea esi, [rax + rdx + 0x6003c]	      8510	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_21
0x4000f7c	      0xba01000000	                              mov edx, 1	      8510	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_21
0x4000f81	      0xe800000000	                          call 0x4000f86	      8510	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_21
0x4000f86	        0x41894608	                mov dword [r14 + 8], eax	      8510	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_21
0x4000f8a	    0x418b84249806	           mov eax, dword [r12 + 0x698] 	      8511	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_23
0x4000f92	          0x4889df	                            mov rdi, rbx	      8511	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_23
0x4000f95	    0x2b8398060000	            sub eax, dword [rbx + 0x698]	      8511	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_23
0x4000f9b	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	      8511	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_23
0x4000fa1	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	      8511	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_23
0x4000fa8	    0x8db410380006	          lea esi, [rax + rdx + 0x60038]	      8511	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_23
0x4000faf	      0xba01000000	                              mov edx, 1	      8511	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_23
0x4000fb4	      0xe800000000	                          call 0x4000fb9	      8511	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_23
0x4000fb9	      0x250000007e	                     and eax, 0x7e000000	      8511	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_23
0x4000fbe	          0xc1e819	                           shr eax, 0x19	      8511	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_23
0x4000fc1	          0x83c001	                              add eax, 1	      8511	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_23
0x4000fc4	          0x418906	                    mov dword [r14], eax	      8511	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_23
0x4000fc7	      0xe927feffff	                           jmp 0x4000df3	      8511	intel_display.c	FUNCTION_251	IF_1	IF_2	CALL_23
_intel_adjust_tile_offset	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,2:ELSE,2:functions,0:CALL,8	121
0x4001d60	            0x4157	                                push r15	      2261	intel_display.c	FUNCTION_81
0x4001d62	            0x4156	                                push r14	      2261	intel_display.c	FUNCTION_81
0x4001d64	          0x4189ca	                           mov r10d, ecx	      2261	intel_display.c	FUNCTION_81
0x4001d67	            0x4155	                                push r13	      2261	intel_display.c	FUNCTION_81
0x4001d69	            0x4154	                                push r12	      2261	intel_display.c	FUNCTION_81
0x4001d6b	          0x4589c3	                           mov r11d, r8d	        36	drm_blend.h	FUNCTION_642
0x4001d6e	              0x55	                                push rbp	      2261	intel_display.c	FUNCTION_81
0x4001d6f	              0x53	                                push rbx	      2261	intel_display.c	FUNCTION_81
0x4001d70	          0x4889d3	                            mov rbx, rdx	      2261	intel_display.c	FUNCTION_81
0x4001d73	        0x4183e30a	                           and r11d, 0xa	        36	drm_blend.h	FUNCTION_642
0x4001d77	          0x4989fd	                            mov r13, rdi	      2261	intel_display.c	FUNCTION_81
0x4001d7a	          0x4989f7	                            mov r15, rsi	      2261	intel_display.c	FUNCTION_81
0x4001d7d	        0x4883ec28	                           sub rsp, 0x28	      2261	intel_display.c	FUNCTION_81
0x4001d81	          0x488b0a	                    mov rcx, qword [rdx]	      2262	intel_display.c	FUNCTION_81	CALL_1
0x4001d84	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	      2263	intel_display.c	FUNCTION_81
0x4001d88	    0x65488b042528	                mov rax, qword gs:[0x28]	      2261	intel_display.c	FUNCTION_81
0x4001d91	      0x4889442420	             mov qword [rsp + 0x20], rax	      2261	intel_display.c	FUNCTION_81
0x4001d96	            0x31c0	                            xor eax, eax	      2261	intel_display.c	FUNCTION_81
0x4001d98	          0x4963c2	                        movsxd rax, r10d	      2263	intel_display.c	FUNCTION_81
0x4001d9b	          0x4585db	                         test r11d, r11d	      2185	intel_display.c	FUNCTION_77	IF_1	CALL_1
0x4001d9e	        0x8b6c2460	            mov ebp, dword [rsp + 0x60] 	      2261	intel_display.c	FUNCTION_81
0x4001da2	    0x440fb6740206	       movzx r14d, byte [rdx + rax + 6] 	      2263	intel_display.c	FUNCTION_81
0x4001da8	     0xf84ac000000	                            je 0x4001e5a	      2185	intel_display.c	FUNCTION_77	IF_1	CALL_1
0x4001dae	        0x488d0440	                  lea rax, [rax + rax*2]	      2186	intel_display.c	FUNCTION_77	CALL_2
0x4001db2	          0x4439cd	                            cmp ebp, r9d	      2266	intel_display.c	FUNCTION_81	CALL_3
0x4001db5	    0x448ba4830801	  mov r12d, dword [rbx + rax*4 + 0x108] 	      2186	intel_display.c	FUNCTION_77	CALL_2
0x4001dbd	     0xf87a5000000	                            ja 0x4001e68	      2266	intel_display.c	FUNCTION_81	CALL_3
0x4001dc3	      0x48837b7800	               cmp qword [rbx + 0x78], 0	      2268	intel_display.c	FUNCTION_81	IF_1
0x4001dc8	        0x44891c24	                   mov dword [rsp], r11d	      2268	intel_display.c	FUNCTION_81	IF_1
0x4001dcc	     0xf84e0000000	                            je 0x4001eb2	      2268	intel_display.c	FUNCTION_81	IF_1
0x4001dd2	     0xfb7815a0600	          movzx eax, word [rcx + 0x65a] 	      1913	intel_display.c	FUNCTION_64	CALL_1
0x4001dd9	      0x488d542418	                   lea rdx, [rsp + 0x18]	      2273	intel_display.c	FUNCTION_81	IF_1	CALL_5
0x4001dde	      0x488d4c241c	                   lea rcx, [rsp + 0x1c]	      2273	intel_display.c	FUNCTION_81	IF_1	CALL_5
0x4001de3	          0x4489d6	                           mov esi, r10d	      2273	intel_display.c	FUNCTION_81	IF_1	CALL_5
0x4001de6	          0x4889df	                            mov rdi, rbx	      2273	intel_display.c	FUNCTION_81	IF_1	CALL_5
0x4001de9	      0x44894c2410	             mov dword [rsp + 0x10], r9d	      2273	intel_display.c	FUNCTION_81	IF_1	CALL_5
0x4001dee	          0x83e002	                              and eax, 2	      1913	intel_display.c	FUNCTION_64	CALL_1
0x4001df1	        0x6683f801	                               cmp ax, 1	      1913	intel_display.c	FUNCTION_64	CALL_1
0x4001df5	          0x4519c0	                            sbb r8d, r8d	      1913	intel_display.c	FUNCTION_64	CALL_1
0x4001df8	    0x4181e0000800	                          and r8d, 0x800	      1913	intel_display.c	FUNCTION_64	CALL_1
0x4001dff	    0x4181c0000800	                          add r8d, 0x800	      1913	intel_display.c	FUNCTION_64	CALL_1
0x4001e06	      0x448944240c	              mov dword [rsp + 0xc], r8d	      1913	intel_display.c	FUNCTION_64	CALL_1
0x4001e0b	      0x4489442414	             mov dword [rsp + 0x14], r8d	      1913	intel_display.c	FUNCTION_64	CALL_1
0x4001e10	      0xe8bbfaffff	                call sym.intel_tile_dims	      2273	intel_display.c	FUNCTION_81	IF_1	CALL_5
0x4001e15	        0x448b1c24	                   mov r11d, dword [rsp]	      2275	intel_display.c	FUNCTION_81	IF_1	IF_2	CALL_6
0x4001e19	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      2275	intel_display.c	FUNCTION_81	IF_1	IF_2	CALL_6
0x4001e1e	      0x448b4c2410	            mov r9d, dword [rsp + 0x10] 	      2275	intel_display.c	FUNCTION_81	IF_1	IF_2	CALL_6
0x4001e23	          0x4585db	                         test r11d, r11d	      2275	intel_display.c	FUNCTION_81	IF_1	IF_2	CALL_6
0x4001e26	     0xf85da000000	                           jne 0x4001f06	      2275	intel_display.c	FUNCTION_81	IF_1	IF_2	CALL_6
0x4001e2c	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      2279	intel_display.c	FUNCTION_81	IF_1	ELSE_1
0x4001e30	          0x4489e0	                           mov eax, r12d	      2279	intel_display.c	FUNCTION_81	IF_1	ELSE_1
0x4001e33	            0x31d2	                            xor edx, edx	      2279	intel_display.c	FUNCTION_81	IF_1	ELSE_1
0x4001e35	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      2279	intel_display.c	FUNCTION_81	IF_1	ELSE_1
0x4001e39	        0x440faff6	                          imul r14d, esi	      2279	intel_display.c	FUNCTION_81	IF_1	ELSE_1
0x4001e3d	          0x41f7f6	                                div r14d	      2279	intel_display.c	FUNCTION_81	IF_1	ELSE_1
0x4001e40	              0x55	                                push rbp	      2282	intel_display.c	FUNCTION_81	IF_1	CALL_8
0x4001e41	            0x4151	                                 push r9	      2282	intel_display.c	FUNCTION_81	IF_1	CALL_8
0x4001e43	            0x89f2	                            mov edx, esi	      2282	intel_display.c	FUNCTION_81	IF_1	CALL_8
0x4001e45	          0x4189c1	                            mov r9d, eax	      2282	intel_display.c	FUNCTION_81	IF_1	CALL_8
0x4001e48	          0x4c89fe	                            mov rsi, r15	      2282	intel_display.c	FUNCTION_81	IF_1	CALL_8
0x4001e4b	          0x4c89ef	                            mov rdi, r13	      2282	intel_display.c	FUNCTION_81	IF_1	CALL_8
0x4001e4e	      0xe8cdf5ffff	     call sym.__intel_adjust_tile_offset	      2282	intel_display.c	FUNCTION_81	IF_1	CALL_8
0x4001e53	              0x58	                                 pop rax	      2282	intel_display.c	FUNCTION_81	IF_1	CALL_8
0x4001e54	              0x5a	                                 pop rdx	      2282	intel_display.c	FUNCTION_81	IF_1	CALL_8
0x4001e55	      0xe98b000000	                           jmp 0x4001ee5	      2282	intel_display.c	FUNCTION_81	IF_1	CALL_8
0x4001e5a	          0x4439cd	                            cmp ebp, r9d	      2266	intel_display.c	FUNCTION_81	CALL_3
0x4001e5d	      0x448b648358	   mov r12d, dword [rbx + rax*4 + 0x58] 	      2188	intel_display.c	FUNCTION_77	ELSE_1
0x4001e62	     0xf865bffffff	                           jbe 0x4001dc3	      2266	intel_display.c	FUNCTION_81	CALL_3
0x4001e68	    0x48c7c6000000	                              mov rsi, 0	      2266	intel_display.c	FUNCTION_81	CALL_3
0x4001e6f	    0x48c7c7000000	                              mov rdi, 0	      2266	intel_display.c	FUNCTION_81	CALL_3
0x4001e76	      0x44894c2414	             mov dword [rsp + 0x14], r9d	      2266	intel_display.c	FUNCTION_81	CALL_3
0x4001e7b	      0x4489542410	            mov dword [rsp + 0x10], r10d	      2266	intel_display.c	FUNCTION_81	CALL_3
0x4001e80	      0x44895c240c	             mov dword [rsp + 0xc], r11d	      2266	intel_display.c	FUNCTION_81	CALL_3
0x4001e85	        0x48890c24	                    mov qword [rsp], rcx	      2266	intel_display.c	FUNCTION_81	CALL_3
0x4001e89	      0xe800000000	                          call 0x4001e8e	      2266	intel_display.c	FUNCTION_81	CALL_3
0x4001e8e	             0xf0b	                                     ud2	      2266	intel_display.c	FUNCTION_81	CALL_3
0x4001e90	      0x48837b7800	               cmp qword [rbx + 0x78], 0	      2268	intel_display.c	FUNCTION_81	IF_1
0x4001e95	      0x448b5c240c	            mov r11d, dword [rsp + 0xc] 	      2266	intel_display.c	FUNCTION_81	CALL_3
0x4001e9a	        0x488b0c24	                    mov rcx, qword [rsp]	      2266	intel_display.c	FUNCTION_81	CALL_3
0x4001e9e	      0x448b4c2414	            mov r9d, dword [rsp + 0x14] 	      2266	intel_display.c	FUNCTION_81	CALL_3
0x4001ea3	      0x448b542410	           mov r10d, dword [rsp + 0x10] 	      2266	intel_display.c	FUNCTION_81	CALL_3
0x4001ea8	        0x44891c24	                   mov dword [rsp], r11d	      2266	intel_display.c	FUNCTION_81	CALL_3
0x4001eac	     0xf8520ffffff	                           jne 0x4001dd2	      2268	intel_display.c	FUNCTION_81	IF_1
0x4001eb2	        0x418b4d00	                    mov ecx, dword [r13]	      2288	intel_display.c	FUNCTION_81	ELSE_2
0x4001eb6	          0x4129e9	                            sub r9d, ebp	      2288	intel_display.c	FUNCTION_81	ELSE_2
0x4001eb9	            0x31d2	                            xor edx, edx	      2288	intel_display.c	FUNCTION_81	ELSE_2
0x4001ebb	        0x410fafce	                          imul ecx, r14d	      2288	intel_display.c	FUNCTION_81	ELSE_2
0x4001ebf	          0x4101c9	                            add r9d, ecx	      2288	intel_display.c	FUNCTION_81	ELSE_2
0x4001ec2	          0x418b0f	                    mov ecx, dword [r15]	      2288	intel_display.c	FUNCTION_81	ELSE_2
0x4001ec5	        0x410fafcc	                          imul ecx, r12d	      2288	intel_display.c	FUNCTION_81	ELSE_2
0x4001ec9	          0x4401c9	                            add ecx, r9d	      2288	intel_display.c	FUNCTION_81	ELSE_2
0x4001ecc	            0x89c8	                            mov eax, ecx	      2288	intel_display.c	FUNCTION_81	ELSE_2
0x4001ece	          0x41f7f4	                                div r12d	      2288	intel_display.c	FUNCTION_81	ELSE_2
0x4001ed1	            0x31d2	                            xor edx, edx	      2289	intel_display.c	FUNCTION_81	ELSE_2
0x4001ed3	          0x418907	                    mov dword [r15], eax	      2288	intel_display.c	FUNCTION_81	ELSE_2
0x4001ed6	        0x410fafc4	                          imul eax, r12d	      2289	intel_display.c	FUNCTION_81	ELSE_2
0x4001eda	            0x29c1	                            sub ecx, eax	      2289	intel_display.c	FUNCTION_81	ELSE_2
0x4001edc	            0x89c8	                            mov eax, ecx	      2289	intel_display.c	FUNCTION_81	ELSE_2
0x4001ede	          0x41f7f6	                                div r14d	      2289	intel_display.c	FUNCTION_81	ELSE_2
0x4001ee1	        0x41894500	                    mov dword [r13], eax	      2289	intel_display.c	FUNCTION_81	ELSE_2
0x4001ee5	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2293	intel_display.c	FUNCTION_81
0x4001eea	    0x6548333c2528	                xor rdi, qword gs:[0x28]	      2293	intel_display.c	FUNCTION_81
0x4001ef3	            0x89e8	                            mov eax, ebp	      2293	intel_display.c	FUNCTION_81
0x4001ef5	            0x752b	                           jne 0x4001f22	      2293	intel_display.c	FUNCTION_81
0x4001ef7	        0x4883c428	                           add rsp, 0x28	      2293	intel_display.c	FUNCTION_81
0x4001efb	              0x5b	                                 pop rbx	      2293	intel_display.c	FUNCTION_81
0x4001efc	              0x5d	                                 pop rbp	      2293	intel_display.c	FUNCTION_81
0x4001efd	            0x415c	                                 pop r12	      2293	intel_display.c	FUNCTION_81
0x4001eff	            0x415d	                                 pop r13	      2293	intel_display.c	FUNCTION_81
0x4001f01	            0x415e	                                 pop r14	      2293	intel_display.c	FUNCTION_81
0x4001f03	            0x415f	                                 pop r15	      2293	intel_display.c	FUNCTION_81
0x4001f05	              0xc3	                                     ret	      2293	intel_display.c	FUNCTION_81
0x4001f06	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      2276	intel_display.c	FUNCTION_81	IF_1	IF_2
0x4001f0a	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	      2277	intel_display.c	FUNCTION_81	IF_1	IF_2	CALL_7
0x4001f0e	          0x4489e0	                           mov eax, r12d	      2276	intel_display.c	FUNCTION_81	IF_1	IF_2
0x4001f11	            0x31d2	                            xor edx, edx	      2276	intel_display.c	FUNCTION_81	IF_1	IF_2
0x4001f13	            0xf7f6	                                 div esi	      2276	intel_display.c	FUNCTION_81	IF_1	IF_2
0x4001f15	        0x89742418	             mov dword [rsp + 0x18], esi	      2277	intel_display.c	FUNCTION_81	IF_1	IF_2	CALL_7
0x4001f19	        0x894c241c	             mov dword [rsp + 0x1c], ecx	      2277	intel_display.c	FUNCTION_81	IF_1	IF_2	CALL_7
0x4001f1d	      0xe91effffff	                           jmp 0x4001e40	      2277	intel_display.c	FUNCTION_81	IF_1	IF_2	CALL_7
0x4001f22	      0xe800000000	                          call 0x4001f27	      2293	intel_display.c	FUNCTION_81
i9xx_get_pipe_config	FOR,0:SWITCH,1:DO,0:WHILE,0:IF,12:ELSE,6:functions,0:CALL,39	346
0x400c360	            0x4157	                                push r15	      7653	intel_display.c	FUNCTION_234
0x400c362	            0x4156	                                push r14	      7653	intel_display.c	FUNCTION_234
0x400c364	            0x4155	                                push r13	      7653	intel_display.c	FUNCTION_234
0x400c366	            0x4154	                                push r12	      7653	intel_display.c	FUNCTION_234
0x400c368	          0x4989fc	                            mov r12, rdi	      7653	intel_display.c	FUNCTION_234
0x400c36b	              0x55	                                push rbp	      7653	intel_display.c	FUNCTION_234
0x400c36c	              0x53	                                push rbx	      7653	intel_display.c	FUNCTION_234
0x400c36d	          0x4889f3	                            mov rbx, rsi	      7653	intel_display.c	FUNCTION_234
0x400c370	        0x4883ec70	                           sub rsp, 0x70	      7653	intel_display.c	FUNCTION_234
0x400c374	    0x8bafb0040000	           mov ebp, dword [rdi + 0x4b0] 	      7659	intel_display.c	FUNCTION_234	CALL_2
0x400c37a	          0x4c8b3f	                    mov r15, qword [rdi]	      7654	intel_display.c	FUNCTION_234	CALL_1
0x400c37d	    0x65488b042528	                mov rax, qword gs:[0x28]	      7653	intel_display.c	FUNCTION_234
0x400c386	      0x4889442468	             mov qword [rsp + 0x68], rax	      7653	intel_display.c	FUNCTION_234
0x400c38b	            0x31c0	                            xor eax, eax	      7653	intel_display.c	FUNCTION_234
0x400c38d	            0x89ee	                            mov esi, ebp	      7660	intel_display.c	FUNCTION_234	IF_1	CALL_3
0x400c38f	          0x4c89ff	                            mov rdi, r15	      7660	intel_display.c	FUNCTION_234	IF_1	CALL_3
0x400c392	      0xe800000000	                          call 0x400c397	      7660	intel_display.c	FUNCTION_234	IF_1	CALL_3
0x400c397	            0x84c0	                             test al, al	      7660	intel_display.c	FUNCTION_234	IF_1	CALL_3
0x400c399	            0x7523	                           jne 0x400c3be	      7660	intel_display.c	FUNCTION_234	IF_1	CALL_3
0x400c39b	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      7763	intel_display.c	FUNCTION_234
0x400c3a0	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      7763	intel_display.c	FUNCTION_234
0x400c3a9	     0xf8512060000	                           jne 0x400c9c1	      7763	intel_display.c	FUNCTION_234
0x400c3af	        0x4883c470	                           add rsp, 0x70	      7763	intel_display.c	FUNCTION_234
0x400c3b3	              0x5b	                                 pop rbx	      7763	intel_display.c	FUNCTION_234
0x400c3b4	              0x5d	                                 pop rbp	      7763	intel_display.c	FUNCTION_234
0x400c3b5	            0x415c	                                 pop r12	      7763	intel_display.c	FUNCTION_234
0x400c3b7	            0x415d	                                 pop r13	      7763	intel_display.c	FUNCTION_234
0x400c3b9	            0x415e	                                 pop r14	      7763	intel_display.c	FUNCTION_234
0x400c3bb	            0x415f	                                 pop r15	      7763	intel_display.c	FUNCTION_234
0x400c3bd	              0xc3	                                     ret	      7763	intel_display.c	FUNCTION_234
0x400c3be	    0x418b8424b004	           mov eax, dword [r12 + 0x4b0] 	      7663	intel_display.c	FUNCTION_234
0x400c3c6	    0x48c783780200	              mov qword [rbx + 0x278], 0	      7664	intel_display.c	FUNCTION_234
0x400c3d1	          0x4c89ff	                            mov rdi, r15	      7668	intel_display.c	FUNCTION_234	CALL_5
0x400c3d4	          0x4531ed	                          xor r13d, r13d	      7666	intel_display.c	FUNCTION_234
0x400c3d7	    0x89833c020000	            mov dword [rbx + 0x23c], eax	      7663	intel_display.c	FUNCTION_234
0x400c3dd	    0x49638424b004	        movsxd rax, dword [r12 + 0x4b0] 	      7668	intel_display.c	FUNCTION_234	CALL_5
0x400c3e5	    0x418b976c0600	           mov edx, dword [r15 + 0x66c] 	      7668	intel_display.c	FUNCTION_234	CALL_5
0x400c3ec	    0x4d8b87f80700	            mov r8, qword [r15 + 0x7f8] 	      7668	intel_display.c	FUNCTION_234	CALL_5
0x400c3f3	    0x418b84878006	   mov eax, dword [r15 + rax*4 + 0x680] 	      7668	intel_display.c	FUNCTION_234	CALL_5
0x400c3fb	    0x412b87800600	            sub eax, dword [r15 + 0x680]	      7668	intel_display.c	FUNCTION_234	CALL_5
0x400c402	    0x8db410080007	          lea esi, [rax + rdx + 0x70008]	      7668	intel_display.c	FUNCTION_234	CALL_5
0x400c409	      0xba01000000	                              mov edx, 1	      7668	intel_display.c	FUNCTION_234	CALL_5
0x400c40e	      0xe800000000	                          call 0x400c413	      7668	intel_display.c	FUNCTION_234	CALL_5
0x400c413	            0x85c0	                           test eax, eax	      7669	intel_display.c	FUNCTION_234	IF_2
0x400c415	            0x7812	                            js 0x400c429	      7669	intel_display.c	FUNCTION_234	IF_2
0x400c417	            0x89ee	                            mov esi, ebp	      7760	intel_display.c	FUNCTION_234	CALL_39
0x400c419	          0x4c89ff	                            mov rdi, r15	      7760	intel_display.c	FUNCTION_234	CALL_39
0x400c41c	      0xe800000000	                          call 0x400c421	      7760	intel_display.c	FUNCTION_234	CALL_39
0x400c421	          0x4489e8	                           mov eax, r13d	      7762	intel_display.c	FUNCTION_234
0x400c424	      0xe972ffffff	                           jmp 0x400c39b	      7762	intel_display.c	FUNCTION_234
0x400c429	    0x418b97640600	           mov edx, dword [r15 + 0x664] 	      7672	intel_display.c	FUNCTION_234	IF_3	CALL_7
0x400c430	    0xf7c200602400	                      test edx, 0x246000	      7672	intel_display.c	FUNCTION_234	IF_3	CALL_7
0x400c436	            0x742f	                            je 0x400c467	      7672	intel_display.c	FUNCTION_234	IF_3	CALL_7
0x400c438	            0x89c6	                            mov esi, eax	      7674	intel_display.c	FUNCTION_234	IF_3	SWITCH_1
0x400c43a	    0x81e6e0000000	                           and esi, 0xe0	      7674	intel_display.c	FUNCTION_234	IF_3	SWITCH_1
0x400c440	          0x83fe20	                           cmp esi, 0x20	      7674	intel_display.c	FUNCTION_234	IF_3	SWITCH_1
0x400c443	     0xf8415030000	                            je 0x400c75e	      7674	intel_display.c	FUNCTION_234	IF_3	SWITCH_1
0x400c449	          0x83fe40	                           cmp esi, 0x40	      7674	intel_display.c	FUNCTION_234	IF_3	SWITCH_1
0x400c44c	     0xf845e030000	                            je 0x400c7b0	      7674	intel_display.c	FUNCTION_234	IF_3	SWITCH_1
0x400c452	            0x85f6	                           test esi, esi	      7674	intel_display.c	FUNCTION_234	IF_3	SWITCH_1
0x400c454	            0x7511	                           jne 0x400c467	      7674	intel_display.c	FUNCTION_234	IF_3	SWITCH_1
0x400c456	    0xc783dc020000	          mov dword [rbx + 0x2dc], 0x18 	      7679	intel_display.c	FUNCTION_234	IF_3	SWITCH_1
0x400c460	    0x418b97640600	           mov edx, dword [r15 + 0x664] 	      7679	intel_display.c	FUNCTION_234	IF_3	SWITCH_1
0x400c467	    0x81e200002400	                       and edx, 0x240000	      7689	intel_display.c	FUNCTION_234	IF_4	CALL_10
0x400c46d	            0x7409	                            je 0x400c478	      7689	intel_display.c	FUNCTION_234	IF_4	CALL_10
0x400c46f	          0xf6c420	                           test ah, 0x20	      7689	intel_display.c	FUNCTION_234	IF_4	CALL_10
0x400c472	     0xf85f1010000	                           jne 0x400c669	      7689	intel_display.c	FUNCTION_234	IF_4	CALL_10
0x400c478	    0x4180bf5c0600	               cmp byte [r15 + 0x65c], 3	      7693	intel_display.c	FUNCTION_234	IF_5	CALL_11
0x400c480	            0x770c	                            ja 0x400c48e	      7693	intel_display.c	FUNCTION_234	IF_5	CALL_11
0x400c482	          0xc1e81e	                           shr eax, 0x1e	      7694	intel_display.c	FUNCTION_234	IF_5
0x400c485	          0x83e001	                              and eax, 1	      7694	intel_display.c	FUNCTION_234	IF_5
0x400c488	    0x88834b030000	              mov byte [rbx + 0x34b], al	      7694	intel_display.c	FUNCTION_234	IF_5
0x400c48e	        0x498b3c24	                    mov rdi, qword [r12]	      7696	intel_display.c	FUNCTION_234	CALL_12
0x400c492	          0x4889de	                            mov rsi, rbx	      7696	intel_display.c	FUNCTION_234	CALL_12
0x400c495	      0xe84693ffff	 call sym.intel_get_pipe_timings.isra.65	      7696	intel_display.c	FUNCTION_234	CALL_12
0x400c49a	    0x418bb424b004	           mov esi, dword [r12 + 0x4b0] 	      7697	intel_display.c	FUNCTION_234	CALL_13
0x400c4a2	        0x498b3c24	                    mov rdi, qword [r12]	      7697	intel_display.c	FUNCTION_234	CALL_13
0x400c4a6	          0x4889da	                            mov rdx, rbx	      7697	intel_display.c	FUNCTION_234	CALL_13
0x400c4a9	      0xe84295ffff	call sym.intel_get_pipe_src_size.isra.66	      7697	intel_display.c	FUNCTION_234	CALL_13
0x400c4ae	        0x4d8b2c24	                    mov r13, qword [r12]	      7697	intel_display.c	FUNCTION_234	CALL_13
0x400c4b2	    0x4180bd5c0600	               cmp byte [r13 + 0x65c], 3	      7495	intel_display.c	FUNCTION_230	IF_1	CALL_2
0x400c4ba	            0x7714	                            ja 0x400c4d0	      7495	intel_display.c	FUNCTION_230	IF_1	CALL_2
0x400c4bc	    0x41f685640600	              test byte [r13 + 0x664], 2	      7495	intel_display.c	FUNCTION_230	IF_1	CALL_2
0x400c4c4	            0x7533	                           jne 0x400c4f9	      7495	intel_display.c	FUNCTION_230	IF_1	CALL_2
0x400c4c6	    0x41f685770600	              test byte [r13 + 0x677], 1	      7496	intel_display.c	FUNCTION_230	IF_1	CALL_4
0x400c4ce	            0x7429	                            je 0x400c4f9	      7496	intel_display.c	FUNCTION_230	IF_1	CALL_4
0x400c4d0	    0x418b8d6c0600	           mov ecx, dword [r13 + 0x66c] 	      7499	intel_display.c	FUNCTION_230	CALL_5
0x400c4d7	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      7499	intel_display.c	FUNCTION_230	CALL_5
0x400c4de	      0xba01000000	                              mov edx, 1	      7499	intel_display.c	FUNCTION_230	CALL_5
0x400c4e3	          0x4c89ef	                            mov rdi, r13	      7499	intel_display.c	FUNCTION_230	CALL_5
0x400c4e6	    0x8db130120600	                lea esi, [rcx + 0x61230]	      7499	intel_display.c	FUNCTION_230	CALL_5
0x400c4ec	      0xe800000000	                          call 0x400c4f1	      7499	intel_display.c	FUNCTION_230	CALL_5
0x400c4f1	            0x85c0	                           test eax, eax	      7500	intel_display.c	FUNCTION_230	IF_2
0x400c4f3	     0xf887c010000	                            js 0x400c675	      7500	intel_display.c	FUNCTION_230	IF_2
0x400c4f9	    0x4180bf5c0600	               cmp byte [r15 + 0x65c], 3	      7701	intel_display.c	FUNCTION_234	IF_6	CALL_15
0x400c501	            0x7642	                           jbe 0x400c545	      7701	intel_display.c	FUNCTION_234	IF_6	CALL_15
0x400c503	    0x41f687660600	          test byte [r15 + 0x666], 0x20 	      7703	intel_display.c	FUNCTION_234	IF_6	IF_7	CALL_16
0x400c50b	    0x49638424b004	        movsxd rax, dword [r12 + 0x4b0] 	      7703	intel_display.c	FUNCTION_234	IF_6	IF_7	CALL_16
0x400c513	     0xf84ab010000	                            je 0x400c6c4	      7703	intel_display.c	FUNCTION_234	IF_6	IF_7	CALL_16
0x400c519	            0x85c0	                           test eax, eax	      7703	intel_display.c	FUNCTION_234	IF_6	IF_7	CALL_16
0x400c51b	     0xf84a3010000	                            je 0x400c6c4	      7703	intel_display.c	FUNCTION_234	IF_6	IF_7	CALL_16
0x400c521	    0x418b8487d06f	  mov eax, dword [r15 + rax*4 + 0x6fd0] 	      7704	intel_display.c	FUNCTION_234	IF_6	IF_7
0x400c529	            0x89c2	                            mov edx, eax	      7707	intel_display.c	FUNCTION_234	IF_6
0x400c52b	    0x898384020000	            mov dword [rbx + 0x284], eax	      7710	intel_display.c	FUNCTION_234	IF_6
0x400c531	    0x81e2003f0000	                         and edx, 0x3f00	      7707	intel_display.c	FUNCTION_234	IF_6
0x400c537	          0xc1ea08	                              shr edx, 8	      7707	intel_display.c	FUNCTION_234	IF_6
0x400c53a	          0x83c201	                              add edx, 1	      7707	intel_display.c	FUNCTION_234	IF_6
0x400c53d	    0x899310030000	            mov dword [rbx + 0x310], edx	      7707	intel_display.c	FUNCTION_234	IF_6
0x400c543	            0xeb1b	                           jmp 0x400c560	      7707	intel_display.c	FUNCTION_234	IF_6
0x400c545	    0x41f787640600	        test dword [r15 + 0x664], 0x780 	      7711	intel_display.c	FUNCTION_234	ELSE_2	IF_8	CALL_20
0x400c550	     0xf85b0010000	                           jne 0x400c706	      7711	intel_display.c	FUNCTION_234	ELSE_2	IF_8	CALL_20
0x400c556	    0xc78310030000	              mov dword [rbx + 0x310], 1	      7721	intel_display.c	FUNCTION_234	ELSE_3
0x400c560	    0x418b876c0600	           mov eax, dword [r15 + 0x66c] 	      7723	intel_display.c	FUNCTION_234	CALL_26
0x400c567	    0x4d8b87f80700	            mov r8, qword [r15 + 0x7f8] 	      7723	intel_display.c	FUNCTION_234	CALL_26
0x400c56e	          0x4c89ff	                            mov rdi, r15	      7723	intel_display.c	FUNCTION_234	CALL_26
0x400c571	    0x8d9014600000	                 lea edx, [rax + 0x6014]	      7723	intel_display.c	FUNCTION_234	CALL_26
0x400c577	        0x8954245c	             mov dword [rsp + 0x5c], edx	      7723	intel_display.c	FUNCTION_234	CALL_26
0x400c57b	    0x8d9018600000	                 lea edx, [rax + 0x6018]	      7723	intel_display.c	FUNCTION_234	CALL_26
0x400c581	       0x530600000	                         add eax, 0x6030	      7723	intel_display.c	FUNCTION_234	CALL_26
0x400c586	        0x89442464	             mov dword [rsp + 0x64], eax	      7723	intel_display.c	FUNCTION_234	CALL_26
0x400c58a	    0x49638424b004	        movsxd rax, dword [r12 + 0x4b0] 	      7723	intel_display.c	FUNCTION_234	CALL_26
0x400c592	        0x89542460	             mov dword [rsp + 0x60], edx	      7723	intel_display.c	FUNCTION_234	CALL_26
0x400c596	      0xba01000000	                              mov edx, 1	      7723	intel_display.c	FUNCTION_234	CALL_26
0x400c59b	        0x8b74845c	    mov esi, dword [rsp + rax*4 + 0x5c] 	      7723	intel_display.c	FUNCTION_234	CALL_26
0x400c59f	      0xe800000000	                          call 0x400c5a4	      7723	intel_display.c	FUNCTION_234	CALL_26
0x400c5a4	    0x898380020000	            mov dword [rbx + 0x280], eax	      7723	intel_display.c	FUNCTION_234	CALL_26
0x400c5aa	    0x418b97640600	           mov edx, dword [r15 + 0x664] 	      7724	intel_display.c	FUNCTION_234	IF_9	CALL_28
0x400c5b1	    0xf7c200002400	                      test edx, 0x240000	      7724	intel_display.c	FUNCTION_234	IF_9	CALL_28
0x400c5b7	     0xf85b7010000	                           jne 0x400c774	      7724	intel_display.c	FUNCTION_234	IF_9	CALL_28
0x400c5bd	          0x83e202	                              and edx, 2	      7730	intel_display.c	FUNCTION_234	IF_9	IF_10	CALL_29
0x400c5c0	            0x740b	                            je 0x400c5cd	      7730	intel_display.c	FUNCTION_234	IF_9	IF_10	CALL_29
0x400c5c2	      0x25ffffffbf	                     and eax, 0xbfffffff	      7731	intel_display.c	FUNCTION_234	IF_9	IF_10
0x400c5c7	    0x898380020000	            mov dword [rbx + 0x280], eax	      7731	intel_display.c	FUNCTION_234	IF_9	IF_10
0x400c5cd	    0x418b9424b004	           mov edx, dword [r12 + 0x4b0] 	      7733	intel_display.c	FUNCTION_234	IF_9	CALL_31
0x400c5d5	          0x4c89ff	                            mov rdi, r15	      7733	intel_display.c	FUNCTION_234	IF_9	CALL_31
0x400c5d8	    0x498b87f80700	           mov rax, qword [r15 + 0x7f8] 	      7733	intel_display.c	FUNCTION_234	IF_9	CALL_31
0x400c5df	    0x8d34d5406000	               lea esi, [rdx*8 + 0x6040]	      7733	intel_display.c	FUNCTION_234	IF_9	CALL_31
0x400c5e6	      0xba01000000	                              mov edx, 1	      7733	intel_display.c	FUNCTION_234	IF_9	CALL_31
0x400c5eb	      0xe800000000	                          call 0x400c5f0	      7733	intel_display.c	FUNCTION_234	IF_9	CALL_31
0x400c5f0	    0x898388020000	            mov dword [rbx + 0x288], eax	      7733	intel_display.c	FUNCTION_234	IF_9	CALL_31
0x400c5f6	    0x418b9424b004	           mov edx, dword [r12 + 0x4b0] 	      7734	intel_display.c	FUNCTION_234	IF_9	CALL_33
0x400c5fe	          0x4c89ff	                            mov rdi, r15	      7734	intel_display.c	FUNCTION_234	IF_9	CALL_33
0x400c601	    0x498b87f80700	           mov rax, qword [r15 + 0x7f8] 	      7734	intel_display.c	FUNCTION_234	IF_9	CALL_33
0x400c608	    0x8d34d5446000	               lea esi, [rdx*8 + 0x6044]	      7734	intel_display.c	FUNCTION_234	IF_9	CALL_33
0x400c60f	      0xba01000000	                              mov edx, 1	      7734	intel_display.c	FUNCTION_234	IF_9	CALL_33
0x400c614	      0xe800000000	                          call 0x400c619	      7734	intel_display.c	FUNCTION_234	IF_9	CALL_33
0x400c619	    0x89838c020000	            mov dword [rbx + 0x28c], eax	      7734	intel_display.c	FUNCTION_234	IF_9	CALL_33
0x400c61f	    0x418b87640600	           mov eax, dword [r15 + 0x664] 	      7742	intel_display.c	FUNCTION_234	IF_11	CALL_34
0x400c626	      0xa900002000	                      test eax, 0x200000	      7742	intel_display.c	FUNCTION_234	IF_11	CALL_34
0x400c62b	     0xf8564010000	                           jne 0x400c795	      7742	intel_display.c	FUNCTION_234	IF_11	CALL_34
0x400c631	      0xa900000400	                       test eax, 0x40000	      7744	intel_display.c	FUNCTION_234	ELSE_5	IF_12	CALL_36
0x400c636	     0xf8448010000	                            je 0x400c784	      7744	intel_display.c	FUNCTION_234	ELSE_5	IF_12	CALL_36
0x400c63c	    0x8b8380020000	           mov eax, dword [rbx + 0x280] 	      7527	intel_display.c	FUNCTION_231	IF_1
0x400c642	            0x85c0	                           test eax, eax	      7527	intel_display.c	FUNCTION_231	IF_1
0x400c644	     0xf88e9020000	                            js 0x400c933	      7527	intel_display.c	FUNCTION_231	IF_1
0x400c64a	    0x8b830c030000	           mov eax, dword [rbx + 0x30c] 	      7527	intel_display.c	FUNCTION_231	IF_1
0x400c650	            0x31d2	                            xor edx, edx	      7754	intel_display.c	FUNCTION_234
0x400c652	    0x41bd01000000	                             mov r13d, 1	      7757	intel_display.c	FUNCTION_234
0x400c658	    0xf7b310030000	                 div dword [rbx + 0x310]	      7754	intel_display.c	FUNCTION_234
0x400c65e	    0x8983a8000000	             mov dword [rbx + 0xa8], eax	      7754	intel_display.c	FUNCTION_234
0x400c664	      0xe9aefdffff	                           jmp 0x400c417	      7754	intel_display.c	FUNCTION_234
0x400c669	    0xc68340020000	               mov byte [rbx + 0x240], 1	      7691	intel_display.c	FUNCTION_234	IF_4
0x400c670	      0xe903feffff	                           jmp 0x400c478	      7691	intel_display.c	FUNCTION_234	IF_4
0x400c675	    0x4180bd5c0600	               cmp byte [r13 + 0x65c], 3	      7504	intel_display.c	FUNCTION_230	IF_3	CALL_6
0x400c67d	     0xf8743010000	                            ja 0x400c7c6	      7504	intel_display.c	FUNCTION_230	IF_3	CALL_6
0x400c683	    0x4183bc24b004	              cmp dword [r12 + 0x4b0], 1	      7505	intel_display.c	FUNCTION_230	IF_3	IF_4
0x400c68c	     0xf8567feffff	                           jne 0x400c4f9	      7505	intel_display.c	FUNCTION_230	IF_3	IF_4
0x400c692	    0x898318030000	            mov dword [rbx + 0x318], eax	      7512	intel_display.c	FUNCTION_230
0x400c698	    0x418b8d6c0600	           mov ecx, dword [r13 + 0x66c] 	      7513	intel_display.c	FUNCTION_230	CALL_7
0x400c69f	      0xba01000000	                              mov edx, 1	      7513	intel_display.c	FUNCTION_230	CALL_7
0x400c6a4	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      7513	intel_display.c	FUNCTION_230	CALL_7
0x400c6ab	          0x4c89ef	                            mov rdi, r13	      7513	intel_display.c	FUNCTION_230	CALL_7
0x400c6ae	    0x8db134120600	                lea esi, [rcx + 0x61234]	      7513	intel_display.c	FUNCTION_230	CALL_7
0x400c6b4	      0xe800000000	                          call 0x400c6b9	      7513	intel_display.c	FUNCTION_230	CALL_7
0x400c6b9	    0x89831c030000	            mov dword [rbx + 0x31c], eax	      7513	intel_display.c	FUNCTION_230	CALL_7
0x400c6bf	      0xe935feffff	                           jmp 0x400c4f9	      7513	intel_display.c	FUNCTION_230	CALL_7
0x400c6c4	    0x418b976c0600	           mov edx, dword [r15 + 0x66c] 	      7706	intel_display.c	FUNCTION_234	IF_6	CALL_18
0x400c6cb	    0x4d8b87f80700	            mov r8, qword [r15 + 0x7f8] 	      7706	intel_display.c	FUNCTION_234	IF_6	CALL_18
0x400c6d2	          0x4c89ff	                            mov rdi, r15	      7706	intel_display.c	FUNCTION_234	IF_6	CALL_18
0x400c6d5	    0x8db21c600000	                 lea esi, [rdx + 0x601c]	      7706	intel_display.c	FUNCTION_234	IF_6	CALL_18
0x400c6db	        0x89742444	             mov dword [rsp + 0x44], esi	      7706	intel_display.c	FUNCTION_234	IF_6	CALL_18
0x400c6df	    0x8db220600000	                 lea esi, [rdx + 0x6020]	      7706	intel_display.c	FUNCTION_234	IF_6	CALL_18
0x400c6e5	    0x81c23c600000	                         add edx, 0x603c	      7706	intel_display.c	FUNCTION_234	IF_6	CALL_18
0x400c6eb	        0x8954244c	             mov dword [rsp + 0x4c], edx	      7706	intel_display.c	FUNCTION_234	IF_6	CALL_18
0x400c6ef	      0xba01000000	                              mov edx, 1	      7706	intel_display.c	FUNCTION_234	IF_6	CALL_18
0x400c6f4	        0x89742448	             mov dword [rsp + 0x48], esi	      7706	intel_display.c	FUNCTION_234	IF_6	CALL_18
0x400c6f8	        0x8b748444	    mov esi, dword [rsp + rax*4 + 0x44] 	      7706	intel_display.c	FUNCTION_234	IF_6	CALL_18
0x400c6fc	      0xe800000000	                          call 0x400c701	      7706	intel_display.c	FUNCTION_234	IF_6	CALL_18
0x400c701	      0xe923feffff	                           jmp 0x400c529	      7706	intel_display.c	FUNCTION_234	IF_6	CALL_18
0x400c706	    0x418b876c0600	           mov eax, dword [r15 + 0x66c] 	      7713	intel_display.c	FUNCTION_234	ELSE_2	IF_8	CALL_24
0x400c70d	    0x4d8b87f80700	            mov r8, qword [r15 + 0x7f8] 	      7713	intel_display.c	FUNCTION_234	ELSE_2	IF_8	CALL_24
0x400c714	          0x4c89ff	                            mov rdi, r15	      7713	intel_display.c	FUNCTION_234	ELSE_2	IF_8	CALL_24
0x400c717	    0x8d9014600000	                 lea edx, [rax + 0x6014]	      7713	intel_display.c	FUNCTION_234	ELSE_2	IF_8	CALL_24
0x400c71d	        0x89542450	             mov dword [rsp + 0x50], edx	      7713	intel_display.c	FUNCTION_234	ELSE_2	IF_8	CALL_24
0x400c721	    0x8d9018600000	                 lea edx, [rax + 0x6018]	      7713	intel_display.c	FUNCTION_234	ELSE_2	IF_8	CALL_24
0x400c727	       0x530600000	                         add eax, 0x6030	      7713	intel_display.c	FUNCTION_234	ELSE_2	IF_8	CALL_24
0x400c72c	        0x89442458	             mov dword [rsp + 0x58], eax	      7713	intel_display.c	FUNCTION_234	ELSE_2	IF_8	CALL_24
0x400c730	    0x49638424b004	        movsxd rax, dword [r12 + 0x4b0] 	      7713	intel_display.c	FUNCTION_234	ELSE_2	IF_8	CALL_24
0x400c738	        0x89542454	             mov dword [rsp + 0x54], edx	      7713	intel_display.c	FUNCTION_234	ELSE_2	IF_8	CALL_24
0x400c73c	      0xba01000000	                              mov edx, 1	      7713	intel_display.c	FUNCTION_234	ELSE_2	IF_8	CALL_24
0x400c741	        0x8b748450	    mov esi, dword [rsp + rax*4 + 0x50] 	      7713	intel_display.c	FUNCTION_234	ELSE_2	IF_8	CALL_24
0x400c745	      0xe800000000	                          call 0x400c74a	      7713	intel_display.c	FUNCTION_234	ELSE_2	IF_8	CALL_24
0x400c74a	           0xfb6c0	                           movzx eax, al	      7714	intel_display.c	FUNCTION_234	ELSE_2	IF_8
0x400c74d	          0xc1e804	                              shr eax, 4	      7714	intel_display.c	FUNCTION_234	ELSE_2	IF_8
0x400c750	          0x83c001	                              add eax, 1	      7714	intel_display.c	FUNCTION_234	ELSE_2	IF_8
0x400c753	    0x898310030000	            mov dword [rbx + 0x310], eax	      7714	intel_display.c	FUNCTION_234	ELSE_2	IF_8
0x400c759	      0xe902feffff	                           jmp 0x400c560	      7714	intel_display.c	FUNCTION_234	ELSE_2	IF_8
0x400c75e	    0xc783dc020000	          mov dword [rbx + 0x2dc], 0x1e 	      7682	intel_display.c	FUNCTION_234	IF_3	SWITCH_1
0x400c768	    0x418b97640600	           mov edx, dword [r15 + 0x664] 	      7682	intel_display.c	FUNCTION_234	IF_3	SWITCH_1
0x400c76f	      0xe9f3fcffff	                           jmp 0x400c467	      7683	intel_display.c	FUNCTION_234	IF_3	SWITCH_1
0x400c774	      0x25007fffff	                     and eax, 0xffff7f00	      7737	intel_display.c	FUNCTION_234	ELSE_4
0x400c779	    0x898380020000	            mov dword [rbx + 0x280], eax	      7737	intel_display.c	FUNCTION_234	ELSE_4
0x400c77f	      0xe99bfeffff	                           jmp 0x400c61f	      7737	intel_display.c	FUNCTION_234	ELSE_4
0x400c784	        0x498b3c24	                    mov rdi, qword [r12]	      7747	intel_display.c	FUNCTION_234	CALL_38
0x400c788	          0x4889de	                            mov rsi, rbx	      7747	intel_display.c	FUNCTION_234	CALL_38
0x400c78b	      0xe89096ffff	    call sym.i9xx_crtc_clock_get.isra.79	      7747	intel_display.c	FUNCTION_234	CALL_38
0x400c790	      0xe9b5feffff	                           jmp 0x400c64a	      7747	intel_display.c	FUNCTION_234	CALL_38
0x400c795	    0x448bb33c0200	          mov r14d, dword [rbx + 0x23c] 	      7622	intel_display.c	FUNCTION_233
0x400c79c	        0x4183fe01	                             cmp r14d, 1	      1206	intel_drv.h	FUNCTION_431	SWITCH_1
0x400c7a0	     0xf8482010000	                            je 0x400c928	      1206	intel_drv.h	FUNCTION_431	SWITCH_1
0x400c7a6	            0x723e	                            jb 0x400c7e6	      1206	intel_drv.h	FUNCTION_431	SWITCH_1
0x400c7a8	        0x4183fe02	                             cmp r14d, 2	      1206	intel_drv.h	FUNCTION_431	SWITCH_1
0x400c7ac	            0x7438	                            je 0x400c7e6	      1206	intel_drv.h	FUNCTION_431	SWITCH_1
0x400c7ae	             0xf0b	                                     ud2	      1206	intel_drv.h	FUNCTION_431	SWITCH_1
0x400c7b0	    0xc783dc020000	          mov dword [rbx + 0x2dc], 0x12 	      7676	intel_display.c	FUNCTION_234	IF_3	SWITCH_1
0x400c7ba	    0x418b97640600	           mov edx, dword [r15 + 0x664] 	      7676	intel_display.c	FUNCTION_234	IF_3	SWITCH_1
0x400c7c1	      0xe9a1fcffff	                           jmp 0x400c467	      7677	intel_display.c	FUNCTION_234	IF_3	SWITCH_1
0x400c7c6	    0x418b9424b004	           mov edx, dword [r12 + 0x4b0] 	      7508	intel_display.c	FUNCTION_230	ELSE_1	IF_5
0x400c7ce	            0x89c6	                            mov esi, eax	      7508	intel_display.c	FUNCTION_230	ELSE_1	IF_5
0x400c7d0	    0x81e600000060	                     and esi, 0x60000000	      7508	intel_display.c	FUNCTION_230	ELSE_1	IF_5
0x400c7d6	          0xc1e21d	                           shl edx, 0x1d	      7508	intel_display.c	FUNCTION_230	ELSE_1	IF_5
0x400c7d9	            0x39d6	                            cmp esi, edx	      7508	intel_display.c	FUNCTION_230	ELSE_1	IF_5
0x400c7db	     0xf8518fdffff	                           jne 0x400c4f9	      7508	intel_display.c	FUNCTION_230	ELSE_1	IF_5
0x400c7e1	      0xe9acfeffff	                           jmp 0x400c692	      7508	intel_display.c	FUNCTION_230	ELSE_1	IF_5
0x400c7e6	          0x4531ed	                          xor r13d, r13d	      1209	intel_drv.h	FUNCTION_431	SWITCH_1
0x400c7e9	    0x8b9380020000	           mov edx, dword [rbx + 0x280] 	      7629	intel_display.c	FUNCTION_233	IF_1
0x400c7ef	            0x85d2	                           test edx, edx	      7629	intel_display.c	FUNCTION_233	IF_1
0x400c7f1	     0xf8953feffff	                           jns 0x400c64a	      7629	intel_display.c	FUNCTION_233	IF_1
0x400c7f7	        0x498b0424	                    mov rax, qword [r12]	      7629	intel_display.c	FUNCTION_233	IF_1
0x400c7fb	    0x4c8d90404800	                 lea r10, [rax + 0x4840]	      7632	intel_display.c	FUNCTION_233	CALL_3
0x400c802	          0x4989c4	                            mov r12, rax	      7632	intel_display.c	FUNCTION_233	CALL_3
0x400c805	          0x4c89d7	                            mov rdi, r10	      7632	intel_display.c	FUNCTION_233	CALL_3
0x400c808	      0x4c89542410	             mov qword [rsp + 0x10], r10	      7632	intel_display.c	FUNCTION_233	CALL_3
0x400c80d	      0xe800000000	                          call 0x400c812	      7632	intel_display.c	FUNCTION_233	CALL_3
0x400c812	    0x4169d54cffff	              imul edx, r13d, 0xffffff4c	      7633	intel_display.c	FUNCTION_233	CALL_5
0x400c819	          0x4c89e7	                            mov rdi, r12	      7633	intel_display.c	FUNCTION_233	CALL_5
0x400c81c	        0x4c892424	                    mov qword [rsp], r12	      7633	intel_display.c	FUNCTION_233	CALL_5
0x400c820	      0x478d642d00	                   lea r12d, [r13 + r13]	      7634	intel_display.c	FUNCTION_233	CALL_7
0x400c825	          0x4489f6	                           mov esi, r14d	      7633	intel_display.c	FUNCTION_233	CALL_5
0x400c828	    0x81c234810000	                         add edx, 0x8134	      7633	intel_display.c	FUNCTION_233	CALL_5
0x400c82e	          0x4501ec	                          add r12d, r13d	      7634	intel_display.c	FUNCTION_233	CALL_7
0x400c831	      0xe800000000	                          call 0x400c836	      7633	intel_display.c	FUNCTION_233	CALL_5
0x400c836	        0x41c1e407	                             shl r12d, 7	      7634	intel_display.c	FUNCTION_233	CALL_7
0x400c83a	        0x488b3c24	                    mov rdi, qword [rsp]	      7634	intel_display.c	FUNCTION_233	CALL_7
0x400c83e	          0x4489f6	                           mov esi, r14d	      7634	intel_display.c	FUNCTION_233	CALL_7
0x400c841	    0x418d94240080	                 lea edx, [r12 + 0x8000]	      7634	intel_display.c	FUNCTION_233	CALL_7
0x400c849	        0x89442418	             mov dword [rsp + 0x18], eax	      7633	intel_display.c	FUNCTION_233	CALL_5
0x400c84d	      0xe800000000	                          call 0x400c852	      7634	intel_display.c	FUNCTION_233	CALL_7
0x400c852	        0x488b3c24	                    mov rdi, qword [rsp]	      7635	intel_display.c	FUNCTION_233	CALL_9
0x400c856	    0x418d94240480	                 lea edx, [r12 + 0x8004]	      7635	intel_display.c	FUNCTION_233	CALL_9
0x400c85e	          0x4489f6	                           mov esi, r14d	      7635	intel_display.c	FUNCTION_233	CALL_9
0x400c861	          0x4189c5	                           mov r13d, eax	      7634	intel_display.c	FUNCTION_233	CALL_7
0x400c864	        0x450fb6ed	                        movzx r13d, r13b	      7641	intel_display.c	FUNCTION_233
0x400c868	      0xe800000000	                          call 0x400c86d	      7635	intel_display.c	FUNCTION_233	CALL_9
0x400c86d	        0x488b3c24	                    mov rdi, qword [rsp]	      7636	intel_display.c	FUNCTION_233	CALL_11
0x400c871	    0x418d94240880	                 lea edx, [r12 + 0x8008]	      7636	intel_display.c	FUNCTION_233	CALL_11
0x400c879	          0x4489f6	                           mov esi, r14d	      7636	intel_display.c	FUNCTION_233	CALL_11
0x400c87c	        0x8944240c	              mov dword [rsp + 0xc], eax	      7635	intel_display.c	FUNCTION_233	CALL_9
0x400c880	      0xe800000000	                          call 0x400c885	      7636	intel_display.c	FUNCTION_233	CALL_11
0x400c885	        0x488b3c24	                    mov rdi, qword [rsp]	      7637	intel_display.c	FUNCTION_233	CALL_13
0x400c889	    0x418d94240c80	                 lea edx, [r12 + 0x800c]	      7637	intel_display.c	FUNCTION_233	CALL_13
0x400c891	          0x4489f6	                           mov esi, r14d	      7637	intel_display.c	FUNCTION_233	CALL_13
0x400c894	        0x8944241c	             mov dword [rsp + 0x1c], eax	      7636	intel_display.c	FUNCTION_233	CALL_11
0x400c898	      0xe800000000	                          call 0x400c89d	      7637	intel_display.c	FUNCTION_233	CALL_13
0x400c89d	      0x4c8b542410	            mov r10, qword [rsp + 0x10] 	      7638	intel_display.c	FUNCTION_233	CALL_14
0x400c8a2	          0x4189c4	                           mov r12d, eax	      7637	intel_display.c	FUNCTION_233	CALL_13
0x400c8a5	          0x4c89d7	                            mov rdi, r10	      7638	intel_display.c	FUNCTION_233	CALL_14
0x400c8a8	      0xe800000000	                          call 0x400c8ad	      7638	intel_display.c	FUNCTION_233	CALL_14
0x400c8ad	      0x448b5c240c	            mov r11d, dword [rsp + 0xc] 	      7640	intel_display.c	FUNCTION_233
0x400c8b2	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      7642	intel_display.c	FUNCTION_233	IF_2
0x400c8b7	          0x4489d8	                           mov eax, r11d	      7640	intel_display.c	FUNCTION_233
0x400c8ba	          0x83e007	                              and eax, 7	      7640	intel_display.c	FUNCTION_233
0x400c8bd	          0x83f801	                              cmp eax, 1	      7640	intel_display.c	FUNCTION_233
0x400c8c0	            0x19c0	                            sbb eax, eax	      7640	intel_display.c	FUNCTION_233
0x400c8c2	        0x41c1e516	                          shl r13d, 0x16	      7641	intel_display.c	FUNCTION_233
0x400c8c6	          0x83e002	                              and eax, 2	      7640	intel_display.c	FUNCTION_233
0x400c8c9	    0x4181e4000001	                       and r12d, 0x10000	      7642	intel_display.c	FUNCTION_233	IF_2
0x400c8d0	        0x89442424	             mov dword [rsp + 0x24], eax	      7640	intel_display.c	FUNCTION_233
0x400c8d4	            0x740c	                            je 0x400c8e2	      7642	intel_display.c	FUNCTION_233	IF_2
0x400c8d6	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      7643	intel_display.c	FUNCTION_233	IF_2
0x400c8da	      0x25ffff3f00	                       and eax, 0x3fffff	      7643	intel_display.c	FUNCTION_233	IF_2
0x400c8df	          0x4109c5	                            or r13d, eax	      7643	intel_display.c	FUNCTION_233	IF_2
0x400c8e2	          0x4489c8	                            mov eax, r9d	      7645	intel_display.c	FUNCTION_233
0x400c8e5	        0x41c1eb08	                             shr r11d, 8	      7644	intel_display.c	FUNCTION_233
0x400c8e9	        0x41c1e908	                              shr r9d, 8	      7646	intel_display.c	FUNCTION_233
0x400c8ed	          0xc1e80d	                            shr eax, 0xd	      7645	intel_display.c	FUNCTION_233
0x400c8f0	      0x488d742420	                   lea rsi, [rsp + 0x20]	      7648	intel_display.c	FUNCTION_233	CALL_15
0x400c8f5	        0x4183e30f	                           and r11d, 0xf	      7644	intel_display.c	FUNCTION_233
0x400c8f9	          0x83e007	                              and eax, 7	      7645	intel_display.c	FUNCTION_233
0x400c8fc	        0x4183e11f	                           and r9d, 0x1f	      7646	intel_display.c	FUNCTION_233
0x400c900	      0xbfa0860100	                        mov edi, 0x186a0	      7648	intel_display.c	FUNCTION_233	CALL_15
0x400c905	      0x44896c2428	            mov dword [rsp + 0x28], r13d	      7643	intel_display.c	FUNCTION_233	IF_2
0x400c90a	      0x44895c2420	            mov dword [rsp + 0x20], r11d	      7644	intel_display.c	FUNCTION_233
0x400c90f	        0x8944242c	             mov dword [rsp + 0x2c], eax	      7645	intel_display.c	FUNCTION_233
0x400c913	      0x44894c2430	             mov dword [rsp + 0x30], r9d	      7646	intel_display.c	FUNCTION_233
0x400c918	      0xe800000000	                          call 0x400c91d	      7648	intel_display.c	FUNCTION_233	CALL_15
0x400c91d	    0x89830c030000	            mov dword [rbx + 0x30c], eax	      7648	intel_display.c	FUNCTION_233	CALL_15
0x400c923	      0xe928fdffff	                           jmp 0x400c650	      7648	intel_display.c	FUNCTION_233	CALL_15
0x400c928	    0x41bd01000000	                             mov r13d, 1	      1211	intel_drv.h	FUNCTION_431	SWITCH_1
0x400c92e	      0xe9b6feffff	                           jmp 0x400c7e9	      1211	intel_drv.h	FUNCTION_431	SWITCH_1
0x400c933	        0x4d8b2424	                    mov r12, qword [r12]	      1211	intel_drv.h	FUNCTION_431	SWITCH_1
0x400c937	    0x448bb33c0200	          mov r14d, dword [rbx + 0x23c] 	      7521	intel_display.c	FUNCTION_231
0x400c93e	    0x4d8dac244048	                 lea r13, [r12 + 0x4840]	      7530	intel_display.c	FUNCTION_231	CALL_2
0x400c946	          0x4c89ef	                            mov rdi, r13	      7530	intel_display.c	FUNCTION_231	CALL_2
0x400c949	      0xe800000000	                          call 0x400c94e	      7530	intel_display.c	FUNCTION_231	CALL_2
0x400c94e	          0x4489f2	                           mov edx, r14d	      7531	intel_display.c	FUNCTION_231	CALL_4
0x400c951	          0x4489f6	                           mov esi, r14d	      7531	intel_display.c	FUNCTION_231	CALL_4
0x400c954	          0x4c89e7	                            mov rdi, r12	      7531	intel_display.c	FUNCTION_231	CALL_4
0x400c957	          0xc1e205	                              shl edx, 5	      7531	intel_display.c	FUNCTION_231	CALL_4
0x400c95a	    0x81c20c800000	                         add edx, 0x800c	      7531	intel_display.c	FUNCTION_231	CALL_4
0x400c960	      0xe800000000	                          call 0x400c965	      7531	intel_display.c	FUNCTION_231	CALL_4
0x400c965	          0x4c89ef	                            mov rdi, r13	      7532	intel_display.c	FUNCTION_231	CALL_5
0x400c968	          0x4189c4	                           mov r12d, eax	      7531	intel_display.c	FUNCTION_231	CALL_4
0x400c96b	      0xe800000000	                          call 0x400c970	      7532	intel_display.c	FUNCTION_231	CALL_5
0x400c970	          0x4489e0	                           mov eax, r12d	      7534	intel_display.c	FUNCTION_231
0x400c973	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      7540	intel_display.c	FUNCTION_231	CALL_6
0x400c978	          0xc1e808	                              shr eax, 8	      7534	intel_display.c	FUNCTION_231
0x400c97b	          0x83e007	                              and eax, 7	      7534	intel_display.c	FUNCTION_231
0x400c97e	        0x89442424	             mov dword [rsp + 0x24], eax	      7534	intel_display.c	FUNCTION_231
0x400c982	        0x410fb6c4	                         movzx eax, r12b	      7535	intel_display.c	FUNCTION_231
0x400c986	        0x89442428	             mov dword [rsp + 0x28], eax	      7535	intel_display.c	FUNCTION_231
0x400c98a	          0x4489e0	                           mov eax, r12d	      7536	intel_display.c	FUNCTION_231
0x400c98d	          0xc1e80c	                            shr eax, 0xc	      7536	intel_display.c	FUNCTION_231
0x400c990	          0x83e00f	                            and eax, 0xf	      7536	intel_display.c	FUNCTION_231
0x400c993	        0x89442420	             mov dword [rsp + 0x20], eax	      7536	intel_display.c	FUNCTION_231
0x400c997	          0x4489e0	                           mov eax, r12d	      7537	intel_display.c	FUNCTION_231
0x400c99a	        0x41c1ec10	                          shr r12d, 0x10	      7538	intel_display.c	FUNCTION_231
0x400c99e	          0xc1e815	                           shr eax, 0x15	      7537	intel_display.c	FUNCTION_231
0x400c9a1	        0x4183e41f	                          and r12d, 0x1f	      7538	intel_display.c	FUNCTION_231
0x400c9a5	          0x83e007	                              and eax, 7	      7537	intel_display.c	FUNCTION_231
0x400c9a8	      0x4489642430	            mov dword [rsp + 0x30], r12d	      7538	intel_display.c	FUNCTION_231
0x400c9ad	        0x8944242c	             mov dword [rsp + 0x2c], eax	      7537	intel_display.c	FUNCTION_231
0x400c9b1	      0xe8dacdffff	call sym.vlv_calc_dpll_params.constprop.154	      7540	intel_display.c	FUNCTION_231	CALL_6
0x400c9b6	    0x89830c030000	            mov dword [rbx + 0x30c], eax	      7540	intel_display.c	FUNCTION_231	CALL_6
0x400c9bc	      0xe98ffcffff	                           jmp 0x400c650	      7540	intel_display.c	FUNCTION_231	CALL_6
0x400c9c1	      0xe800000000	                          call 0x400c9c6	      7763	intel_display.c	FUNCTION_234
intel_pre_plane_update	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,8:ELSE,1:functions,0:CALL,21	130
0x4010090	            0x4157	                                push r15	      5136	intel_display.c	FUNCTION_156
0x4010092	            0x4156	                                push r14	      5136	intel_display.c	FUNCTION_156
0x4010094	            0x4155	                                push r13	      5136	intel_display.c	FUNCTION_156
0x4010096	            0x4154	                                push r12	      5136	intel_display.c	FUNCTION_156
0x4010098	              0x55	                                push rbp	      5136	intel_display.c	FUNCTION_156
0x4010099	              0x53	                                push rbx	      5136	intel_display.c	FUNCTION_156
0x401009a	          0x4889fd	                            mov rbp, rdi	      5136	intel_display.c	FUNCTION_156
0x401009d	          0x4889f3	                            mov rbx, rsi	      5136	intel_display.c	FUNCTION_156
0x40100a0	        0x4883ec10	                           sub rsp, 0x10	      5136	intel_display.c	FUNCTION_156
0x40100a4	          0x4c8b2f	                    mov r13, qword [rdi]	      5137	intel_display.c	FUNCTION_156	CALL_1
0x40100a7	    0x4c8ba7100200	           mov r12, qword [rdi + 0x210] 	      5140	intel_display.c	FUNCTION_156
0x40100ae	    0x4d8bbd800000	            mov r15, qword [r13 + 0x80] 	      5141	intel_display.c	FUNCTION_156
0x40100b5	        0x4d8b7500	                    mov r14, qword [r13]	      5138	intel_display.c	FUNCTION_156
0x40100b9	    0x418b874c0200	           mov eax, dword [r15 + 0x24c] 	       449	drm_atomic.h	FUNCTION_504	CALL_1
0x40100c0	        0x48c1e005	                              shl rax, 5	       449	drm_atomic.h	FUNCTION_504	CALL_1
0x40100c4	      0x4903442418	             add rax, qword [r12 + 0x18]	       449	drm_atomic.h	FUNCTION_504	CALL_1
0x40100c9	        0x4c8b4008	                 mov r8, qword [rax + 8]	       449	drm_atomic.h	FUNCTION_504	CALL_1
0x40100cd	         0xfb6460a	            movzx eax, byte [rsi + 0xa] 	       893	drm_atomic.h	FUNCTION_511
0x40100d1	            0xa802	                              test al, 2	       893	drm_atomic.h	FUNCTION_511
0x40100d3	            0x7508	                           jne 0x40100dd	       893	drm_atomic.h	FUNCTION_511
0x40100d5	            0xa804	                              test al, 4	       893	drm_atomic.h	FUNCTION_511
0x40100d7	     0xf848e000000	                            je 0x401016b	       893	drm_atomic.h	FUNCTION_511
0x40100dd	    0x80bd48030000	               cmp byte [rbp + 0x348], 0	      5070	intel_display.c	FUNCTION_153	IF_1
0x40100e4	    0xc744240c0100	                mov dword [rsp + 0xc], 1	       893	drm_atomic.h	FUNCTION_511
0x40100ec	     0xf85a4000000	                           jne 0x4010196	      5070	intel_display.c	FUNCTION_153	IF_1
0x40100f2	          0x4d85c0	                             test r8, r8	      5151	intel_display.c	FUNCTION_156	IF_2
0x40100f5	        0x4c890424	                     mov qword [rsp], r8	      5151	intel_display.c	FUNCTION_156	IF_2
0x40100f9	            0x7430	                            je 0x401012b	      5151	intel_display.c	FUNCTION_156	IF_2
0x40100fb	    0x418b874c0200	           mov eax, dword [r15 + 0x24c] 	       479	drm_atomic.h	FUNCTION_506	CALL_1
0x4010102	          0x4889de	                            mov rsi, rbx	      5158	intel_display.c	FUNCTION_156	IF_2	CALL_11
0x4010105	          0x4c89ef	                            mov rdi, r13	      5158	intel_display.c	FUNCTION_156	IF_2	CALL_11
0x4010108	        0x48c1e005	                              shl rax, 5	       479	drm_atomic.h	FUNCTION_506	CALL_1
0x401010c	      0x4903442418	             add rax, qword [r12 + 0x18]	       479	drm_atomic.h	FUNCTION_506	CALL_1
0x4010111	        0x4c8b7818	            mov r15, qword [rax + 0x18] 	       479	drm_atomic.h	FUNCTION_506	CALL_1
0x4010115	          0x4c89fa	                            mov rdx, r15	      5158	intel_display.c	FUNCTION_156	IF_2	CALL_11
0x4010118	      0xe800000000	                          call 0x401011d	      5158	intel_display.c	FUNCTION_156	IF_2	CALL_11
0x401011d	    0x41f6865a0600	              test byte [r14 + 0x65a], 2	      5163	intel_display.c	FUNCTION_156	IF_2	IF_3	CALL_12
0x4010125	     0xf8580000000	                           jne 0x40101ab	      5163	intel_display.c	FUNCTION_156	IF_2	IF_3	CALL_12
0x401012b	    0x41f686780600	          test byte [r14 + 0x678], 0x20 	      5177	intel_display.c	FUNCTION_156	IF_4	CALL_14
0x4010133	            0x740a	                            je 0x401013f	      5177	intel_display.c	FUNCTION_156	IF_4	CALL_14
0x4010135	        0x807d0900	                   cmp byte [rbp + 9], 0	      5177	intel_display.c	FUNCTION_156	IF_4	CALL_14
0x4010139	     0xf85a4000000	                           jne 0x40101e3	      5177	intel_display.c	FUNCTION_156	IF_4	CALL_14
0x401013f	    0x80bb6c030000	               cmp byte [rbx + 0x36c], 0	      5188	intel_display.c	FUNCTION_156	IF_5	CALL_17
0x4010146	     0xf85f7000000	                           jne 0x4010243	      5188	intel_display.c	FUNCTION_156	IF_5	CALL_17
0x401014c	         0xfb6430a	            movzx eax, byte [rbx + 0xa] 	       893	drm_atomic.h	FUNCTION_511
0x4010150	            0xa802	                              test al, 2	       893	drm_atomic.h	FUNCTION_511
0x4010152	            0x7508	                           jne 0x401015c	       893	drm_atomic.h	FUNCTION_511
0x4010154	            0xa804	                              test al, 4	       893	drm_atomic.h	FUNCTION_511
0x4010156	     0xf84ba000000	                            je 0x4010216	       893	drm_atomic.h	FUNCTION_511
0x401015c	        0x4883c410	                           add rsp, 0x10	      5217	intel_display.c	FUNCTION_156
0x4010160	              0x5b	                                 pop rbx	      5217	intel_display.c	FUNCTION_156
0x4010161	              0x5d	                                 pop rbp	      5217	intel_display.c	FUNCTION_156
0x4010162	            0x415c	                                 pop r12	      5217	intel_display.c	FUNCTION_156
0x4010164	            0x415d	                                 pop r13	      5217	intel_display.c	FUNCTION_156
0x4010166	            0x415e	                                 pop r14	      5217	intel_display.c	FUNCTION_156
0x4010168	            0x415f	                                 pop r15	      5217	intel_display.c	FUNCTION_156
0x401016a	              0xc3	                                     ret	      5217	intel_display.c	FUNCTION_156
0x401016b	          0xc0e803	                               shr al, 3	       894	drm_atomic.h	FUNCTION_511
0x401016e	          0x83e001	                              and eax, 1	       894	drm_atomic.h	FUNCTION_511
0x4010171	    0x80bf48030000	               cmp byte [rdi + 0x348], 0	      5070	intel_display.c	FUNCTION_153	IF_1
0x4010178	           0xfb6c8	                           movzx ecx, al	       893	drm_atomic.h	FUNCTION_511
0x401017b	        0x894c240c	              mov dword [rsp + 0xc], ecx	       893	drm_atomic.h	FUNCTION_511
0x401017f	     0xf846dffffff	                            je 0x40100f2	      5070	intel_display.c	FUNCTION_153	IF_1
0x4010185	            0x84c0	                             test al, al	       893	drm_atomic.h	FUNCTION_511
0x4010187	            0x750d	                           jne 0x4010196	       893	drm_atomic.h	FUNCTION_511
0x4010189	    0x80bb48030000	               cmp byte [rbx + 0x348], 0	      5148	intel_display.c	FUNCTION_156	IF_1	CALL_6
0x4010190	     0xf855cffffff	                           jne 0x40100f2	      5148	intel_display.c	FUNCTION_156	IF_1	CALL_6
0x4010196	          0x4889ef	                            mov rdi, rbp	      5149	intel_display.c	FUNCTION_156	CALL_7
0x4010199	        0x4c890424	                     mov qword [rsp], r8	      5149	intel_display.c	FUNCTION_156	CALL_7
0x401019d	      0xe800000000	                          call 0x40101a2	      5149	intel_display.c	FUNCTION_156	CALL_7
0x40101a2	        0x4c8b0424	                     mov r8, qword [rsp]	      5149	intel_display.c	FUNCTION_156	CALL_7
0x40101a6	      0xe947ffffff	                           jmp 0x40100f2	      5149	intel_display.c	FUNCTION_156	CALL_7
0x40101ab	        0x4c8b0424	                     mov r8, qword [rsp]	      5163	intel_display.c	FUNCTION_156	IF_2	IF_3	CALL_12
0x40101af	      0x4180787400	                 cmp byte [r8 + 0x74], 0	      5163	intel_display.c	FUNCTION_156	IF_2	IF_3	CALL_12
0x40101b4	     0xf8471ffffff	                            je 0x401012b	      5163	intel_display.c	FUNCTION_156	IF_2	IF_3	CALL_12
0x40101ba	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      5163	intel_display.c	FUNCTION_156	IF_2	IF_3	CALL_12
0x40101be	            0x85c0	                           test eax, eax	      5163	intel_display.c	FUNCTION_156	IF_2	IF_3	CALL_12
0x40101c0	            0x750b	                           jne 0x40101cd	      5163	intel_display.c	FUNCTION_156	IF_2	IF_3	CALL_12
0x40101c2	      0x41807f7400	                cmp byte [r15 + 0x74], 0	      5164	intel_display.c	FUNCTION_156	IF_2	IF_3
0x40101c7	     0xf855effffff	                           jne 0x401012b	      5164	intel_display.c	FUNCTION_156	IF_2	IF_3
0x40101cd	    0x418bb5b00400	           mov esi, dword [r13 + 0x4b0] 	      5165	intel_display.c	FUNCTION_156	IF_2	CALL_13
0x40101d4	            0x31d2	                            xor edx, edx	      5165	intel_display.c	FUNCTION_156	IF_2	CALL_13
0x40101d6	          0x4c89f7	                            mov rdi, r14	      5165	intel_display.c	FUNCTION_156	IF_2	CALL_13
0x40101d9	      0xe800000000	                          call 0x40101de	      5165	intel_display.c	FUNCTION_156	IF_2	CALL_13
0x40101de	      0xe948ffffff	                           jmp 0x401012b	      5165	intel_display.c	FUNCTION_156	IF_2	CALL_13
0x40101e3	    0x80bb25020000	               cmp byte [rbx + 0x225], 0	      5177	intel_display.c	FUNCTION_156	IF_4	CALL_14
0x40101ea	     0xf844fffffff	                            je 0x401013f	      5177	intel_display.c	FUNCTION_156	IF_4	CALL_14
0x40101f0	            0x31f6	                            xor esi, esi	      5178	intel_display.c	FUNCTION_156	IF_4	CALL_15
0x40101f2	          0x4c89f7	                            mov rdi, r14	      5178	intel_display.c	FUNCTION_156	IF_4	CALL_15
0x40101f5	      0xe800000000	                          call 0x40101fa	      5178	intel_display.c	FUNCTION_156	IF_4	CALL_15
0x40101fa	            0x84c0	                             test al, al	      5178	intel_display.c	FUNCTION_156	IF_4	CALL_15
0x40101fc	     0xf843dffffff	                            je 0x401013f	      5178	intel_display.c	FUNCTION_156	IF_4	CALL_15
0x4010202	    0x418bb5b00400	           mov esi, dword [r13 + 0x4b0] 	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x4010209	          0x4c89f7	                            mov rdi, r14	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x401020c	      0xe800000000	                          call 0x4010211	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x4010211	      0xe929ffffff	                           jmp 0x401013f	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x4010216	            0xa808	                              test al, 8	       893	drm_atomic.h	FUNCTION_511
0x4010218	     0xf853effffff	                           jne 0x401015c	       893	drm_atomic.h	FUNCTION_511
0x401021e	    0x498b86605500	          mov rax, qword [r14 + 0x5560] 	      5212	intel_display.c	FUNCTION_156	IF_7
0x4010225	          0x4885c0	                           test rax, rax	      5212	intel_display.c	FUNCTION_156	IF_7
0x4010228	            0x743d	                            je 0x4010267	      5212	intel_display.c	FUNCTION_156	IF_7
0x401022a	        0x4883c410	                           add rsp, 0x10	      5217	intel_display.c	FUNCTION_156
0x401022e	          0x4889de	                            mov rsi, rbx	      5213	intel_display.c	FUNCTION_156	IF_7	CALL_20
0x4010231	          0x4c89e7	                            mov rdi, r12	      5213	intel_display.c	FUNCTION_156	IF_7	CALL_20
0x4010234	              0x5b	                                 pop rbx	      5217	intel_display.c	FUNCTION_156
0x4010235	              0x5d	                                 pop rbp	      5217	intel_display.c	FUNCTION_156
0x4010236	            0x415c	                                 pop r12	      5217	intel_display.c	FUNCTION_156
0x4010238	            0x415d	                                 pop r13	      5217	intel_display.c	FUNCTION_156
0x401023a	            0x415e	                                 pop r14	      5217	intel_display.c	FUNCTION_156
0x401023c	            0x415f	                                 pop r15	      5217	intel_display.c	FUNCTION_156
0x401023e	      0xe900000000	                           jmp 0x4010243	      5213	intel_display.c	FUNCTION_156	IF_7	CALL_20
0x4010243	          0x4c89f7	                            mov rdi, r14	      5188	intel_display.c	FUNCTION_156	IF_5	CALL_17
0x4010246	      0xe800000000	                          call 0x401024b	      5188	intel_display.c	FUNCTION_156	IF_5	CALL_17
0x401024b	            0x84c0	                             test al, al	      5188	intel_display.c	FUNCTION_156	IF_5	CALL_17
0x401024d	     0xf84f9feffff	                            je 0x401014c	      5188	intel_display.c	FUNCTION_156	IF_5	CALL_17
0x4010253	    0x418bb5b00400	           mov esi, dword [r13 + 0x4b0] 	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x401025a	          0x4c89f7	                            mov rdi, r14	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x401025d	      0xe800000000	                          call 0x4010262	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x4010262	      0xe9e5feffff	                           jmp 0x401014c	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x4010267	    0x80bb26020000	               cmp byte [rbx + 0x226], 0	      5215	intel_display.c	FUNCTION_156	ELSE_1	IF_8
0x401026e	     0xf84e8feffff	                            je 0x401015c	      5215	intel_display.c	FUNCTION_156	ELSE_1	IF_8
0x4010274	        0x4883c410	                           add rsp, 0x10	      5217	intel_display.c	FUNCTION_156
0x4010278	          0x4c89ef	                            mov rdi, r13	      5216	intel_display.c	FUNCTION_156	ELSE_1	IF_8
0x401027b	              0x5b	                                 pop rbx	      5217	intel_display.c	FUNCTION_156
0x401027c	              0x5d	                                 pop rbp	      5217	intel_display.c	FUNCTION_156
0x401027d	            0x415c	                                 pop r12	      5217	intel_display.c	FUNCTION_156
0x401027f	            0x415d	                                 pop r13	      5217	intel_display.c	FUNCTION_156
0x4010281	            0x415e	                                 pop r14	      5217	intel_display.c	FUNCTION_156
0x4010283	            0x415f	                                 pop r15	      5217	intel_display.c	FUNCTION_156
0x4010285	      0xe900000000	                           jmp 0x401028a	      5216	intel_display.c	FUNCTION_156	ELSE_1	IF_8
assert_pll	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,5	56
0x400cd20	              0x53	                                push rbx	      1064	intel_display.c	FUNCTION_28
0x400cd21	            0x89d3	                            mov ebx, edx	      1064	intel_display.c	FUNCTION_28
0x400cd23	          0x4863f6	                         movsxd rsi, esi	      1068	intel_display.c	FUNCTION_28	CALL_2
0x400cd26	        0x4883ec18	                           sub rsp, 0x18	      1064	intel_display.c	FUNCTION_28
0x400cd2a	    0x488b8ff80700	           mov rcx, qword [rdi + 0x7f8] 	      1068	intel_display.c	FUNCTION_28	CALL_2
0x400cd31	    0x65488b042528	                mov rax, qword gs:[0x28]	      1064	intel_display.c	FUNCTION_28
0x400cd3a	      0x4889442410	             mov qword [rsp + 0x10], rax	      1064	intel_display.c	FUNCTION_28
0x400cd3f	            0x31c0	                            xor eax, eax	      1064	intel_display.c	FUNCTION_28
0x400cd41	    0x8b876c060000	           mov eax, dword [rdi + 0x66c] 	      1068	intel_display.c	FUNCTION_28	CALL_2
0x400cd47	    0x8d9014600000	                 lea edx, [rax + 0x6014]	      1068	intel_display.c	FUNCTION_28	CALL_2
0x400cd4d	        0x89542404	                mov dword [rsp + 4], edx	      1068	intel_display.c	FUNCTION_28	CALL_2
0x400cd51	    0x8d9018600000	                 lea edx, [rax + 0x6018]	      1068	intel_display.c	FUNCTION_28	CALL_2
0x400cd57	       0x530600000	                         add eax, 0x6030	      1068	intel_display.c	FUNCTION_28	CALL_2
0x400cd5c	        0x8944240c	              mov dword [rsp + 0xc], eax	      1068	intel_display.c	FUNCTION_28	CALL_2
0x400cd60	        0x89542408	                mov dword [rsp + 8], edx	      1068	intel_display.c	FUNCTION_28	CALL_2
0x400cd64	      0xba01000000	                              mov edx, 1	      1068	intel_display.c	FUNCTION_28	CALL_2
0x400cd69	        0x8b74b404	       mov esi, dword [rsp + rsi*4 + 4] 	      1068	intel_display.c	FUNCTION_28	CALL_2
0x400cd6d	      0xe800000000	                          call 0x400cd72	      1068	intel_display.c	FUNCTION_28	CALL_2
0x400cd72	            0x89c2	                            mov edx, eax	      1070	intel_display.c	FUNCTION_28	CALL_3
0x400cd74	          0xc1ea1f	                           shr edx, 0x1f	      1070	intel_display.c	FUNCTION_28	CALL_3
0x400cd77	            0x38d3	                              cmp bl, dl	      1070	intel_display.c	FUNCTION_28	CALL_3
0x400cd79	            0x7516	                           jne 0x400cd91	      1070	intel_display.c	FUNCTION_28	CALL_3
0x400cd7b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1073	intel_display.c	FUNCTION_28
0x400cd80	    0x654833042528	                xor rax, qword gs:[0x28]	      1073	intel_display.c	FUNCTION_28
0x400cd89	            0x757d	                           jne 0x400ce08	      1073	intel_display.c	FUNCTION_28
0x400cd8b	        0x4883c418	                           add rsp, 0x18	      1073	intel_display.c	FUNCTION_28
0x400cd8f	              0x5b	                                 pop rbx	      1073	intel_display.c	FUNCTION_28
0x400cd90	              0xc3	                                     ret	      1073	intel_display.c	FUNCTION_28
0x400cd91	    0x803d00000000	                cmp byte [0x0400cd98], 0	      1070	intel_display.c	FUNCTION_28	CALL_3
0x400cd98	            0x753e	                           jne 0x400cdd8	      1070	intel_display.c	FUNCTION_28	CALL_3
0x400cd9a	    0x48c7c6000000	                              mov rsi, 0	       150	i915_utils.h	FUNCTION_472
0x400cda1	            0x85c0	                           test eax, eax	       150	i915_utils.h	FUNCTION_472
0x400cda3	    0x48c7c1000000	                              mov rcx, 0	       150	i915_utils.h	FUNCTION_472
0x400cdaa	          0x4889f2	                            mov rdx, rsi	       150	i915_utils.h	FUNCTION_472
0x400cdad	        0x480f48d1	                          cmovs rdx, rcx	       150	i915_utils.h	FUNCTION_472
0x400cdb1	            0x84db	                             test bl, bl	       150	i915_utils.h	FUNCTION_472
0x400cdb3	        0x480f45f1	                         cmovne rsi, rcx	       150	i915_utils.h	FUNCTION_472
0x400cdb7	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1070	intel_display.c	FUNCTION_28	CALL_3
0x400cdbc	    0x654833042528	                xor rax, qword gs:[0x28]	      1070	intel_display.c	FUNCTION_28	CALL_3
0x400cdc5	            0x7541	                           jne 0x400ce08	      1070	intel_display.c	FUNCTION_28	CALL_3
0x400cdc7	        0x4883c418	                           add rsp, 0x18	      1073	intel_display.c	FUNCTION_28
0x400cdcb	    0x48c7c7000000	                              mov rdi, 0	      1070	intel_display.c	FUNCTION_28	CALL_3
0x400cdd2	              0x5b	                                 pop rbx	      1073	intel_display.c	FUNCTION_28
0x400cdd3	      0xe900000000	                           jmp 0x400cdd8	      1070	intel_display.c	FUNCTION_28	CALL_3
0x400cdd8	    0x48c7c6000000	                              mov rsi, 0	       150	i915_utils.h	FUNCTION_472
0x400cddf	    0x48c7c1000000	                              mov rcx, 0	       150	i915_utils.h	FUNCTION_472
0x400cde6	            0x85c0	                           test eax, eax	       150	i915_utils.h	FUNCTION_472
0x400cde8	          0x4889f2	                            mov rdx, rsi	       150	i915_utils.h	FUNCTION_472
0x400cdeb	    0x48c7c7000000	                              mov rdi, 0	      1070	intel_display.c	FUNCTION_28	CALL_3
0x400cdf2	        0x480f49d1	                         cmovns rdx, rcx	       150	i915_utils.h	FUNCTION_472
0x400cdf6	            0x84db	                             test bl, bl	       150	i915_utils.h	FUNCTION_472
0x400cdf8	        0x480f44f1	                          cmove rsi, rcx	       150	i915_utils.h	FUNCTION_472
0x400cdfc	      0xe800000000	                          call 0x400ce01	      1070	intel_display.c	FUNCTION_28	CALL_3
0x400ce01	             0xf0b	                                     ud2	      1070	intel_display.c	FUNCTION_28	CALL_3
0x400ce03	      0xe973ffffff	                           jmp 0x400cd7b	      1070	intel_display.c	FUNCTION_28	CALL_3
0x400ce08	      0xe800000000	                          call 0x400ce0d	      1073	intel_display.c	FUNCTION_28
intel_encoder_destroy	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,3	6
0x4011650	              0x53	                                push rbx	      6083	intel_display.c	ELSE_1	FUNCTION_184
0x4011651	          0x4889fb	                            mov rbx, rdi	      6083	intel_display.c	ELSE_1	FUNCTION_184
0x4011654	      0xe800000000	                          call 0x4011659	      6086	intel_display.c	ELSE_1	FUNCTION_184	CALL_2
0x4011659	          0x4889df	                            mov rdi, rbx	      6087	intel_display.c	ELSE_1	FUNCTION_184	CALL_3
0x401165c	              0x5b	                                 pop rbx	      6088	intel_display.c	ELSE_1	FUNCTION_184
0x401165d	      0xe900000000	                           jmp 0x4011662	      6087	intel_display.c	ELSE_1	FUNCTION_184	CALL_3
i9xx_calc_dpll_params	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,4	66
0x40015f0	          0x8b4e04	                mov ecx, dword [rsi + 4]	       520	intel_display.c	FUNCTION_8
0x40015f3	      0x448d44890a	           lea r8d, [rcx + rcx*4 + 0xa] 	       520	intel_display.c	FUNCTION_8
0x40015f8	          0x8b4e08	                mov ecx, dword [rsi + 8]	       520	intel_display.c	FUNCTION_8
0x40015fb	      0x418d440802	                 lea eax, [r8 + rcx + 2]	       520	intel_display.c	FUNCTION_8
0x4001600	          0x8b4e0c	              mov ecx, dword [rsi + 0xc]	       526	intel_display.c	FUNCTION_9
0x4001603	          0x448b06	                    mov r8d, dword [rsi]	       527	intel_display.c	FUNCTION_9	IF_1	CALL_2
0x4001606	         0xfaf4e10	            imul ecx, dword [rsi + 0x10]	       526	intel_display.c	FUNCTION_9
0x400160a	          0x89461c	             mov dword [rsi + 0x1c], eax	       525	intel_display.c	FUNCTION_9	CALL_1
0x400160d	        0x4183f8fe	             cmp r8d, 0xfffffffffffffffe	       527	intel_display.c	FUNCTION_9	IF_1	CALL_2
0x4001611	          0x894e20	             mov dword [rsi + 0x20], ecx	       526	intel_display.c	FUNCTION_9
0x4001614	            0x7452	                            je 0x4001668	       527	intel_display.c	FUNCTION_9	IF_1	CALL_2
0x4001616	            0x85c9	                           test ecx, ecx	       527	intel_display.c	FUNCTION_9	IF_1	CALL_2
0x4001618	            0x744e	                            je 0x4001668	       527	intel_display.c	FUNCTION_9	IF_1	CALL_2
0x400161a	           0xfafc7	                           imul eax, edi	       529	intel_display.c	FUNCTION_9	CALL_3
0x400161d	        0x4183c002	                              add r8d, 2	       529	intel_display.c	FUNCTION_9	CALL_3
0x4001621	            0x85c0	                           test eax, eax	       529	intel_display.c	FUNCTION_9	CALL_3
0x4001623	        0x400f9ec7	                               setle dil	       529	intel_display.c	FUNCTION_9	CALL_3
0x4001627	          0x4585c0	                           test r8d, r8d	       529	intel_display.c	FUNCTION_9	CALL_3
0x400162a	           0xf9fc2	                                 setg dl	       529	intel_display.c	FUNCTION_9	CALL_3
0x400162d	          0x4038d7	                             cmp dil, dl	       529	intel_display.c	FUNCTION_9	CALL_3
0x4001630	            0x744e	                            je 0x4001680	       529	intel_display.c	FUNCTION_9	CALL_3
0x4001632	          0x4489c2	                            mov edx, r8d	       529	intel_display.c	FUNCTION_9	CALL_3
0x4001635	          0xc1ea1f	                           shr edx, 0x1f	       529	intel_display.c	FUNCTION_9	CALL_3
0x4001638	          0x4401c2	                            add edx, r8d	       529	intel_display.c	FUNCTION_9	CALL_3
0x400163b	            0xd1fa	                              sar edx, 1	       529	intel_display.c	FUNCTION_9	CALL_3
0x400163d	             0x1d0	                            add eax, edx	       529	intel_display.c	FUNCTION_9	CALL_3
0x400163f	              0x99	                                     cdq	       529	intel_display.c	FUNCTION_9	CALL_3
0x4001640	          0x41f7f8	                                idiv r8d	       529	intel_display.c	FUNCTION_9	CALL_3
0x4001643	            0x85c0	                           test eax, eax	       530	intel_display.c	FUNCTION_9	CALL_4
0x4001645	          0x894618	             mov dword [rsi + 0x18], eax	       529	intel_display.c	FUNCTION_9	CALL_3
0x4001648	        0x400f9ec7	                               setle dil	       530	intel_display.c	FUNCTION_9	CALL_4
0x400164c	            0x85c9	                           test ecx, ecx	       530	intel_display.c	FUNCTION_9	CALL_4
0x400164e	           0xf9fc2	                                 setg dl	       530	intel_display.c	FUNCTION_9	CALL_4
0x4001651	          0x4038d7	                             cmp dil, dl	       530	intel_display.c	FUNCTION_9	CALL_4
0x4001654	            0x89ca	                            mov edx, ecx	       530	intel_display.c	FUNCTION_9	CALL_4
0x4001656	            0x743b	                            je 0x4001693	       530	intel_display.c	FUNCTION_9	CALL_4
0x4001658	          0xc1ea1f	                           shr edx, 0x1f	       530	intel_display.c	FUNCTION_9	CALL_4
0x400165b	             0x1ca	                            add edx, ecx	       530	intel_display.c	FUNCTION_9	CALL_4
0x400165d	            0xd1fa	                              sar edx, 1	       530	intel_display.c	FUNCTION_9	CALL_4
0x400165f	             0x1d0	                            add eax, edx	       530	intel_display.c	FUNCTION_9	CALL_4
0x4001661	              0x99	                                     cdq	       530	intel_display.c	FUNCTION_9	CALL_4
0x4001662	            0xf7f9	                                idiv ecx	       530	intel_display.c	FUNCTION_9	CALL_4
0x4001664	          0x894614	             mov dword [rsi + 0x14], eax	       530	intel_display.c	FUNCTION_9	CALL_4
0x4001667	              0xc3	                                     ret	       532	intel_display.c	FUNCTION_9
0x4001668	    0x48c7c6000000	                              mov rsi, 0	       527	intel_display.c	FUNCTION_9	IF_1	CALL_2
0x400166f	    0x48c7c7000000	                              mov rdi, 0	       527	intel_display.c	FUNCTION_9	IF_1	CALL_2
0x4001676	      0xe800000000	                          call 0x400167b	       527	intel_display.c	FUNCTION_9	IF_1	CALL_2
0x400167b	             0xf0b	                                     ud2	       527	intel_display.c	FUNCTION_9	IF_1	CALL_2
0x400167d	            0x31c0	                            xor eax, eax	       528	intel_display.c	FUNCTION_9	IF_1
0x400167f	              0xc3	                                     ret	       528	intel_display.c	FUNCTION_9	IF_1
0x4001680	          0x4489c2	                            mov edx, r8d	       529	intel_display.c	FUNCTION_9	CALL_3
0x4001683	          0xc1ea1f	                           shr edx, 0x1f	       529	intel_display.c	FUNCTION_9	CALL_3
0x4001686	          0x4401c2	                            add edx, r8d	       529	intel_display.c	FUNCTION_9	CALL_3
0x4001689	            0xd1fa	                              sar edx, 1	       529	intel_display.c	FUNCTION_9	CALL_3
0x400168b	            0x29d0	                            sub eax, edx	       529	intel_display.c	FUNCTION_9	CALL_3
0x400168d	              0x99	                                     cdq	       529	intel_display.c	FUNCTION_9	CALL_3
0x400168e	          0x41f7f8	                                idiv r8d	       529	intel_display.c	FUNCTION_9	CALL_3
0x4001691	            0xebb0	                           jmp 0x4001643	       529	intel_display.c	FUNCTION_9	CALL_3
0x4001693	          0xc1ea1f	                           shr edx, 0x1f	       530	intel_display.c	FUNCTION_9	CALL_4
0x4001696	             0x1ca	                            add edx, ecx	       530	intel_display.c	FUNCTION_9	CALL_4
0x4001698	            0xd1fa	                              sar edx, 1	       530	intel_display.c	FUNCTION_9	CALL_4
0x400169a	            0x29d0	                            sub eax, edx	       530	intel_display.c	FUNCTION_9	CALL_4
0x400169c	              0x99	                                     cdq	       530	intel_display.c	FUNCTION_9	CALL_4
0x400169d	            0xf7f9	                                idiv ecx	       530	intel_display.c	FUNCTION_9	CALL_4
0x400169f	          0x894614	             mov dword [rsi + 0x14], eax	       530	intel_display.c	FUNCTION_9	CALL_4
0x40016a2	              0xc3	                                     ret	       532	intel_display.c	FUNCTION_9
vlv_get_cck_clock_hpll	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,2	17
0x400c270	              0x53	                                push rbx	       197	intel_display.c	FUNCTION_3
0x400c271	          0x4889fb	                            mov rbx, rdi	       197	intel_display.c	FUNCTION_3
0x400c274	        0x4883ec10	                           sub rsp, 0x10	       197	intel_display.c	FUNCTION_3
0x400c278	    0x8b8fe0540000	          mov ecx, dword [rdi + 0x54e0] 	       198	intel_display.c	FUNCTION_3	IF_1
0x400c27e	            0x85c9	                           test ecx, ecx	       198	intel_display.c	FUNCTION_3	IF_1
0x400c280	            0x751d	                           jne 0x400c29f	       198	intel_display.c	FUNCTION_3	IF_1
0x400c282	        0x8954240c	              mov dword [rsp + 0xc], edx	       198	intel_display.c	FUNCTION_3	IF_1
0x400c286	        0x48893424	                    mov qword [rsp], rsi	       198	intel_display.c	FUNCTION_3	IF_1
0x400c28a	      0xe800000000	                          call 0x400c28f	       199	intel_display.c	FUNCTION_3	CALL_1
0x400c28f	        0x8b54240c	              mov edx, dword [rsp + 0xc]	       199	intel_display.c	FUNCTION_3	CALL_1
0x400c293	        0x488b3424	                    mov rsi, qword [rsp]	       199	intel_display.c	FUNCTION_3	CALL_1
0x400c297	            0x89c1	                            mov ecx, eax	       199	intel_display.c	FUNCTION_3	CALL_1
0x400c299	    0x8983e0540000	          mov dword [rbx + 0x54e0], eax 	       199	intel_display.c	FUNCTION_3	CALL_1
0x400c29f	        0x4883c410	                           add rsp, 0x10	       203	intel_display.c	FUNCTION_3
0x400c2a3	          0x4889df	                            mov rdi, rbx	       201	intel_display.c	FUNCTION_3	CALL_2
0x400c2a6	              0x5b	                                 pop rbx	       203	intel_display.c	FUNCTION_3
0x400c2a7	      0xe934ffffff	               jmp sym.vlv_get_cck_clock	       201	intel_display.c	FUNCTION_3	CALL_2
intel_dp_get_m_n	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,1:functions,0:CALL,2	54
0x4015ef0	    0x80be38020000	               cmp byte [rsi + 0x238], 0	      8528	intel_display.c	FUNCTION_252	IF_1
0x4015ef7	            0x7519	                           jne 0x4015f12	      8528	intel_display.c	FUNCTION_252	IF_1
0x4015ef9	    0x488d8ef40200	                  lea rcx, [rsi + 0x2f4]	      8531	intel_display.c	FUNCTION_252	ELSE_1	CALL_2
0x4015f00	    0x488d96e00200	                  lea rdx, [rsi + 0x2e0]	      8531	intel_display.c	FUNCTION_252	ELSE_1	CALL_2
0x4015f07	    0x8bb63c020000	           mov esi, dword [rsi + 0x23c] 	      8531	intel_display.c	FUNCTION_252	ELSE_1	CALL_2
0x4015f0d	      0xe98eadfeff	    jmp sym.intel_cpu_transcoder_get_m_n	      8531	intel_display.c	FUNCTION_252	ELSE_1	CALL_2
0x4015f12	            0x4155	                                push r13	      8527	intel_display.c	FUNCTION_252
0x4015f14	            0x4154	                                push r12	      8527	intel_display.c	FUNCTION_252
0x4015f16	      0xba01000000	                              mov edx, 1	      8475	intel_display.c	FUNCTION_250	CALL_3
0x4015f1b	              0x55	                                push rbp	      8527	intel_display.c	FUNCTION_252
0x4015f1c	              0x53	                                push rbx	      8527	intel_display.c	FUNCTION_252
0x4015f1d	          0x4889f3	                            mov rbx, rsi	      8527	intel_display.c	FUNCTION_252
0x4015f20	    0x448ba7b00400	          mov r12d, dword [rdi + 0x4b0] 	      8475	intel_display.c	FUNCTION_250	CALL_3
0x4015f27	          0x488b2f	                    mov rbp, qword [rdi]	      8475	intel_display.c	FUNCTION_250	CALL_3
0x4015f2a	        0x41c1e40c	                           shl r12d, 0xc	      8475	intel_display.c	FUNCTION_250	CALL_3
0x4015f2e	          0x4889ef	                            mov rdi, rbp	      8475	intel_display.c	FUNCTION_250	CALL_3
0x4015f31	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	      8475	intel_display.c	FUNCTION_250	CALL_3
0x4015f38	    0x458dac243000	               lea r13d, [r12 + 0xe0030]	      8477	intel_display.c	FUNCTION_250	CALL_7
0x4015f40	    0x418db4244000	                lea esi, [r12 + 0xe0040]	      8475	intel_display.c	FUNCTION_250	CALL_3
0x4015f48	      0xe800000000	                          call 0x4015f4d	      8475	intel_display.c	FUNCTION_250	CALL_3
0x4015f4d	    0x418db4244400	                lea esi, [r12 + 0xe0044]	      8476	intel_display.c	FUNCTION_250	CALL_5
0x4015f55	    0x8983ec020000	            mov dword [rbx + 0x2ec], eax	      8475	intel_display.c	FUNCTION_250	CALL_3
0x4015f5b	          0x4889ef	                            mov rdi, rbp	      8476	intel_display.c	FUNCTION_250	CALL_5
0x4015f5e	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	      8476	intel_display.c	FUNCTION_250	CALL_5
0x4015f65	      0xba01000000	                              mov edx, 1	      8476	intel_display.c	FUNCTION_250	CALL_5
0x4015f6a	      0xe800000000	                          call 0x4015f6f	      8476	intel_display.c	FUNCTION_250	CALL_5
0x4015f6f	          0x4489ee	                           mov esi, r13d	      8477	intel_display.c	FUNCTION_250	CALL_7
0x4015f72	    0x8983f0020000	            mov dword [rbx + 0x2f0], eax	      8476	intel_display.c	FUNCTION_250	CALL_5
0x4015f78	          0x4889ef	                            mov rdi, rbp	      8477	intel_display.c	FUNCTION_250	CALL_7
0x4015f7b	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	      8477	intel_display.c	FUNCTION_250	CALL_7
0x4015f82	      0xba01000000	                              mov edx, 1	      8477	intel_display.c	FUNCTION_250	CALL_7
0x4015f87	      0xe800000000	                          call 0x4015f8c	      8477	intel_display.c	FUNCTION_250	CALL_7
0x4015f8c	      0x25ffffff81	                     and eax, 0x81ffffff	      8477	intel_display.c	FUNCTION_250	CALL_7
0x4015f91	    0x418db4243400	                lea esi, [r12 + 0xe0034]	      8479	intel_display.c	FUNCTION_250	CALL_9
0x4015f99	          0x4889ef	                            mov rdi, rbp	      8479	intel_display.c	FUNCTION_250	CALL_9
0x4015f9c	    0x8983e4020000	            mov dword [rbx + 0x2e4], eax	      8477	intel_display.c	FUNCTION_250	CALL_7
0x4015fa2	      0xba01000000	                              mov edx, 1	      8479	intel_display.c	FUNCTION_250	CALL_9
0x4015fa7	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	      8479	intel_display.c	FUNCTION_250	CALL_9
0x4015fae	      0xe800000000	                          call 0x4015fb3	      8479	intel_display.c	FUNCTION_250	CALL_9
0x4015fb3	          0x4489ee	                           mov esi, r13d	      8480	intel_display.c	FUNCTION_250	CALL_11
0x4015fb6	    0x8983e8020000	            mov dword [rbx + 0x2e8], eax	      8479	intel_display.c	FUNCTION_250	CALL_9
0x4015fbc	          0x4889ef	                            mov rdi, rbp	      8480	intel_display.c	FUNCTION_250	CALL_11
0x4015fbf	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	      8480	intel_display.c	FUNCTION_250	CALL_11
0x4015fc6	      0xba01000000	                              mov edx, 1	      8480	intel_display.c	FUNCTION_250	CALL_11
0x4015fcb	      0xe800000000	                          call 0x4015fd0	      8480	intel_display.c	FUNCTION_250	CALL_11
0x4015fd0	      0x250000007e	                     and eax, 0x7e000000	      8480	intel_display.c	FUNCTION_250	CALL_11
0x4015fd5	          0xc1e819	                           shr eax, 0x19	      8480	intel_display.c	FUNCTION_250	CALL_11
0x4015fd8	          0x83c001	                              add eax, 1	      8480	intel_display.c	FUNCTION_250	CALL_11
0x4015fdb	    0x8983e0020000	            mov dword [rbx + 0x2e0], eax	      8480	intel_display.c	FUNCTION_250	CALL_11
0x4015fe1	              0x5b	                                 pop rbx	      8534	intel_display.c	FUNCTION_252
0x4015fe2	              0x5d	                                 pop rbp	      8534	intel_display.c	FUNCTION_252
0x4015fe3	            0x415c	                                 pop r12	      8534	intel_display.c	FUNCTION_252
0x4015fe5	            0x415d	                                 pop r13	      8534	intel_display.c	FUNCTION_252
0x4015fe7	              0xc3	                                     ret	      8534	intel_display.c	FUNCTION_252
assert_vblank_disabled	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,3	18
0x40046b0	              0x53	                                push rbx	      1247	intel_display.c	FUNCTION_38
0x40046b1	          0x4889fb	                            mov rbx, rdi	      1247	intel_display.c	FUNCTION_38
0x40046b4	      0xe800000000	                          call 0x40046b9	      1248	intel_display.c	FUNCTION_38	IF_1	CALL_2
0x40046b9	            0x85c0	                           test eax, eax	      1248	intel_display.c	FUNCTION_38	IF_1	CALL_2
0x40046bb	            0x7402	                            je 0x40046bf	      1248	intel_display.c	FUNCTION_38	IF_1	CALL_2
0x40046bd	              0x5b	                                 pop rbx	      1250	intel_display.c	FUNCTION_38
0x40046be	              0xc3	                                     ret	      1250	intel_display.c	FUNCTION_38
0x40046bf	    0x803d00000000	                cmp byte [0x040046c6], 0	      1248	intel_display.c	FUNCTION_38	IF_1	CALL_2
0x40046c6	    0x48c7c6000000	                              mov rsi, 0	      1248	intel_display.c	FUNCTION_38	IF_1	CALL_2
0x40046cd	    0x48c7c7000000	                              mov rdi, 0	      1248	intel_display.c	FUNCTION_38	IF_1	CALL_2
0x40046d4	            0x750e	                           jne 0x40046e4	      1248	intel_display.c	FUNCTION_38	IF_1	CALL_2
0x40046d6	      0xe800000000	                          call 0x40046db	      1248	intel_display.c	FUNCTION_38	IF_1	CALL_2
0x40046db	          0x4889df	                            mov rdi, rbx	      1249	intel_display.c	FUNCTION_38	CALL_3
0x40046de	              0x5b	                                 pop rbx	      1250	intel_display.c	FUNCTION_38
0x40046df	      0xe900000000	                           jmp 0x40046e4	      1249	intel_display.c	FUNCTION_38	CALL_3
0x40046e4	      0xe800000000	                          call 0x40046e9	      1248	intel_display.c	FUNCTION_38	IF_1	CALL_2
0x40046e9	             0xf0b	                                     ud2	      1248	intel_display.c	FUNCTION_38	IF_1	CALL_2
0x40046eb	            0xebee	                           jmp 0x40046db	      1248	intel_display.c	FUNCTION_38	IF_1	CALL_2
chv_calc_dpll_params	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,3	60
0x400c2b0	        0x448b4604	                mov r8d, dword [rsi + 4]	       549	intel_display.c	FUNCTION_11
0x400c2b4	        0x448b4e0c	              mov r9d, dword [rsi + 0xc]	       550	intel_display.c	FUNCTION_11
0x400c2b8	      0x440faf4608	               imul r8d, dword [rsi + 8]	       549	intel_display.c	FUNCTION_11
0x400c2bd	      0x440faf4e10	            imul r9d, dword [rsi + 0x10]	       550	intel_display.c	FUNCTION_11
0x400c2c2	            0x8b0e	                    mov ecx, dword [rsi]	       551	intel_display.c	FUNCTION_11	IF_1	CALL_1
0x400c2c4	            0x85c9	                           test ecx, ecx	       551	intel_display.c	FUNCTION_11	IF_1	CALL_1
0x400c2c6	        0x4489461c	             mov dword [rsi + 0x1c], r8d	       549	intel_display.c	FUNCTION_11
0x400c2ca	        0x44894e20	             mov dword [rsi + 0x20], r9d	       550	intel_display.c	FUNCTION_11
0x400c2ce	            0x745e	                            je 0x400c32e	       551	intel_display.c	FUNCTION_11	IF_1	CALL_1
0x400c2d0	          0x4585c9	                           test r9d, r9d	       551	intel_display.c	FUNCTION_11	IF_1	CALL_1
0x400c2d3	            0x7459	                            je 0x400c32e	       551	intel_display.c	FUNCTION_11	IF_1	CALL_1
0x400c2d5	          0x4d63c0	                          movsxd r8, r8d	       553	intel_display.c	FUNCTION_11	CALL_2
0x400c2d8	          0x4863c7	                         movsxd rax, edi	       553	intel_display.c	FUNCTION_11	CALL_2
0x400c2db	          0xc1e116	                           shl ecx, 0x16	       553	intel_display.c	FUNCTION_11	CALL_2
0x400c2de	        0x490fafc0	                            imul rax, r8	       553	intel_display.c	FUNCTION_11	CALL_2
0x400c2e2	          0x4189c8	                            mov r8d, ecx	       553	intel_display.c	FUNCTION_11	CALL_2
0x400c2e5	            0x31d2	                            xor edx, edx	       553	intel_display.c	FUNCTION_11	CALL_2
0x400c2e7	          0x41d1f8	                              sar r8d, 1	       553	intel_display.c	FUNCTION_11	CALL_2
0x400c2ea	          0x4d63c0	                          movsxd r8, r8d	       553	intel_display.c	FUNCTION_11	CALL_2
0x400c2ed	          0x4c01c0	                             add rax, r8	       553	intel_display.c	FUNCTION_11	CALL_2
0x400c2f0	          0x48f7f1	                                 div rcx	       553	intel_display.c	FUNCTION_11	CALL_2
0x400c2f3	            0x85c0	                           test eax, eax	       555	intel_display.c	FUNCTION_11	CALL_3
0x400c2f5	          0x894618	             mov dword [rsi + 0x18], eax	       553	intel_display.c	FUNCTION_11	CALL_2
0x400c2f8	           0xf9ec1	                                setle cl	       555	intel_display.c	FUNCTION_11	CALL_3
0x400c2fb	          0x4585c9	                           test r9d, r9d	       555	intel_display.c	FUNCTION_11	CALL_3
0x400c2fe	           0xf9fc2	                                 setg dl	       555	intel_display.c	FUNCTION_11	CALL_3
0x400c301	            0x38d1	                              cmp cl, dl	       555	intel_display.c	FUNCTION_11	CALL_3
0x400c303	            0x7441	                            je 0x400c346	       555	intel_display.c	FUNCTION_11	CALL_3
0x400c305	          0x4489c9	                            mov ecx, r9d	       555	intel_display.c	FUNCTION_11	CALL_3
0x400c308	          0xc1e91f	                           shr ecx, 0x1f	       555	intel_display.c	FUNCTION_11	CALL_3
0x400c30b	          0x4401c9	                            add ecx, r9d	       555	intel_display.c	FUNCTION_11	CALL_3
0x400c30e	            0xd1f9	                              sar ecx, 1	       555	intel_display.c	FUNCTION_11	CALL_3
0x400c310	             0x1c8	                            add eax, ecx	       555	intel_display.c	FUNCTION_11	CALL_3
0x400c312	              0x99	                                     cdq	       555	intel_display.c	FUNCTION_11	CALL_3
0x400c313	          0x41f7f9	                                idiv r9d	       555	intel_display.c	FUNCTION_11	CALL_3
0x400c316	            0x89c1	                            mov ecx, eax	       555	intel_display.c	FUNCTION_11	CALL_3
0x400c318	            0x89c8	                            mov eax, ecx	       557	intel_display.c	FUNCTION_11
0x400c31a	      0xba67666666	                     mov edx, 0x66666667	       557	intel_display.c	FUNCTION_11
0x400c31f	          0x894e14	             mov dword [rsi + 0x14], ecx	       555	intel_display.c	FUNCTION_11	CALL_3
0x400c322	            0xf7ea	                                imul edx	       557	intel_display.c	FUNCTION_11
0x400c324	          0xc1f91f	                           sar ecx, 0x1f	       557	intel_display.c	FUNCTION_11
0x400c327	            0x89d0	                            mov eax, edx	       557	intel_display.c	FUNCTION_11
0x400c329	            0xd1f8	                              sar eax, 1	       557	intel_display.c	FUNCTION_11
0x400c32b	            0x29c8	                            sub eax, ecx	       557	intel_display.c	FUNCTION_11
0x400c32d	              0xc3	                                     ret	       557	intel_display.c	FUNCTION_11
0x400c32e	    0x48c7c6000000	                              mov rsi, 0	       551	intel_display.c	FUNCTION_11	IF_1	CALL_1
0x400c335	    0x48c7c7000000	                              mov rdi, 0	       551	intel_display.c	FUNCTION_11	IF_1	CALL_1
0x400c33c	      0xe800000000	                          call 0x400c341	       551	intel_display.c	FUNCTION_11	IF_1	CALL_1
0x400c341	             0xf0b	                                     ud2	       551	intel_display.c	FUNCTION_11	IF_1	CALL_1
0x400c343	            0x31c0	                            xor eax, eax	       552	intel_display.c	FUNCTION_11	IF_1
0x400c345	              0xc3	                                     ret	       552	intel_display.c	FUNCTION_11	IF_1
0x400c346	          0x4489ca	                            mov edx, r9d	       555	intel_display.c	FUNCTION_11	CALL_3
0x400c349	          0xc1ea1f	                           shr edx, 0x1f	       555	intel_display.c	FUNCTION_11	CALL_3
0x400c34c	          0x4401ca	                            add edx, r9d	       555	intel_display.c	FUNCTION_11	CALL_3
0x400c34f	            0xd1fa	                              sar edx, 1	       555	intel_display.c	FUNCTION_11	CALL_3
0x400c351	            0x29d0	                            sub eax, edx	       555	intel_display.c	FUNCTION_11	CALL_3
0x400c353	              0x99	                                     cdq	       555	intel_display.c	FUNCTION_11	CALL_3
0x400c354	          0x41f7f9	                                idiv r9d	       555	intel_display.c	FUNCTION_11	CALL_3
0x400c357	            0x89c1	                            mov ecx, eax	       555	intel_display.c	FUNCTION_11	CALL_3
0x400c359	            0xebbd	                           jmp 0x400c318	       555	intel_display.c	FUNCTION_11	CALL_3
intel_connector_get_hw_state	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,1	15
0x4011710	        0x4883ec10	                           sub rsp, 0x10	      6182	intel_display.c	FUNCTION_189
0x4011714	    0x488bbf200400	           mov rdi, qword [rdi + 0x420] 	      6184	intel_display.c	FUNCTION_189
0x401171b	    0x65488b042528	                mov rax, qword gs:[0x28]	      6182	intel_display.c	FUNCTION_189
0x4011724	      0x4889442408	                mov qword [rsp + 8], rax	      6182	intel_display.c	FUNCTION_189
0x4011729	            0x31c0	                            xor eax, eax	      6182	intel_display.c	FUNCTION_189
0x401172b	    0xc74424040000	                  mov dword [rsp + 4], 0	      6183	intel_display.c	FUNCTION_189
0x4011733	      0x488d742404	                      lea rsi, [rsp + 4]	      6186	intel_display.c	FUNCTION_189	CALL_1
0x4011738	    0x488b87c80000	            mov rax, qword [rdi + 0xc8] 	      6186	intel_display.c	FUNCTION_189	CALL_1
0x401173f	      0xe800000000	                          call 0x4011744	      6186	intel_display.c	FUNCTION_189	CALL_1
0x4011744	      0x488b542408	                mov rdx, qword [rsp + 8]	      6187	intel_display.c	FUNCTION_189
0x4011749	    0x654833142528	                xor rdx, qword gs:[0x28]	      6187	intel_display.c	FUNCTION_189
0x4011752	            0x7505	                           jne 0x4011759	      6187	intel_display.c	FUNCTION_189
0x4011754	        0x4883c410	                           add rsp, 0x10	      6187	intel_display.c	FUNCTION_189
0x4011758	              0xc3	                                     ret	      6187	intel_display.c	FUNCTION_189
0x4011759	      0xe800000000	                          call 0x401175e	      6187	intel_display.c	FUNCTION_189
ironlake_pfit_enable	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,2:ELSE,1:functions,0:CALL,12	46
0x40004e0	    0x488b87c80400	           mov rax, qword [rdi + 0x4c8] 	      4903	intel_display.c	FUNCTION_147	IF_1
0x40004e7	    0x80b82c030000	               cmp byte [rax + 0x32c], 0	      4903	intel_display.c	FUNCTION_147	IF_1
0x40004ee	     0xf8497000000	                            je 0x400058b	      4903	intel_display.c	FUNCTION_147	IF_1
0x40004f4	            0x4154	                                push r12	      4898	intel_display.c	FUNCTION_147
0x40004f6	              0x55	                                push rbp	      4898	intel_display.c	FUNCTION_147
0x40004f7	              0x53	                                push rbx	      4898	intel_display.c	FUNCTION_147
0x40004f8	          0x488b2f	                    mov rbp, qword [rdi]	      4899	intel_display.c	FUNCTION_147
0x40004fb	          0x4889fb	                            mov rbx, rdi	      4899	intel_display.c	FUNCTION_147
0x40004fe	    0x8b97b0040000	           mov edx, dword [rdi + 0x4b0] 	      4901	intel_display.c	FUNCTION_147
0x4000504	    0xf78564060000	      test dword [rbp + 0x664], 0xa0000 	      4908	intel_display.c	FUNCTION_147	IF_1	IF_2	CALL_3
0x400050e	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	      4909	intel_display.c	FUNCTION_147	IF_1	IF_2	CALL_5
0x4000515	            0x7576	                           jne 0x400058d	      4908	intel_display.c	FUNCTION_147	IF_1	IF_2	CALL_3
0x4000517	          0xc1e20b	                            shl edx, 0xb	      4912	intel_display.c	FUNCTION_147	IF_1	CALL_8
0x400051a	      0xb901000000	                              mov ecx, 1	      4912	intel_display.c	FUNCTION_147	IF_1	CALL_8
0x400051f	          0x4889ef	                            mov rdi, rbp	      4912	intel_display.c	FUNCTION_147	IF_1	CALL_8
0x4000522	          0x4189d4	                           mov r12d, edx	      4912	intel_display.c	FUNCTION_147	IF_1	CALL_8
0x4000525	    0x8db280800600	                lea esi, [rdx + 0x68080]	      4912	intel_display.c	FUNCTION_147	IF_1	CALL_8
0x400052b	      0xba00008080	                     mov edx, 0x80800000	      4912	intel_display.c	FUNCTION_147	IF_1	CALL_8
0x4000530	      0xe800000000	                          call 0x4000535	      4912	intel_display.c	FUNCTION_147	IF_1	CALL_8
0x4000535	    0x488b93c80400	           mov rdx, qword [rbx + 0x4c8] 	      4913	intel_display.c	FUNCTION_147	IF_1	CALL_10
0x400053c	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	      4913	intel_display.c	FUNCTION_147	IF_1	CALL_10
0x4000543	    0x418db4247080	                lea esi, [r12 + 0x68070]	      4913	intel_display.c	FUNCTION_147	IF_1	CALL_10
0x400054b	          0x4889ef	                            mov rdi, rbp	      4913	intel_display.c	FUNCTION_147	IF_1	CALL_10
0x400054e	      0xb901000000	                              mov ecx, 1	      4913	intel_display.c	FUNCTION_147	IF_1	CALL_10
0x4000553	    0x8b9224030000	           mov edx, dword [rdx + 0x324] 	      4913	intel_display.c	FUNCTION_147	IF_1	CALL_10
0x4000559	      0xe800000000	                          call 0x400055e	      4913	intel_display.c	FUNCTION_147	IF_1	CALL_10
0x400055e	    0x488b93c80400	           mov rdx, qword [rbx + 0x4c8] 	      4914	intel_display.c	FUNCTION_147	IF_1	CALL_12
0x4000565	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	      4914	intel_display.c	FUNCTION_147	IF_1	CALL_12
0x400056c	    0x418db4247480	                lea esi, [r12 + 0x68074]	      4914	intel_display.c	FUNCTION_147	IF_1	CALL_12
0x4000574	          0x4889ef	                            mov rdi, rbp	      4914	intel_display.c	FUNCTION_147	IF_1	CALL_12
0x4000577	      0xb901000000	                              mov ecx, 1	      4914	intel_display.c	FUNCTION_147	IF_1	CALL_12
0x400057c	    0x8b9228030000	           mov edx, dword [rdx + 0x328] 	      4914	intel_display.c	FUNCTION_147	IF_1	CALL_12
0x4000582	      0xe800000000	                          call 0x4000587	      4914	intel_display.c	FUNCTION_147	IF_1	CALL_12
0x4000587	              0x5b	                                 pop rbx	      4916	intel_display.c	FUNCTION_147
0x4000588	              0x5d	                                 pop rbp	      4916	intel_display.c	FUNCTION_147
0x4000589	            0x415c	                                 pop r12	      4916	intel_display.c	FUNCTION_147
0x400058b	            0xf3c3	                                     ret	      4916	intel_display.c	FUNCTION_147
0x400058d	          0x4189d4	                           mov r12d, edx	      4909	intel_display.c	FUNCTION_147	IF_1	IF_2	CALL_5
0x4000590	          0xc1e21d	                           shl edx, 0x1d	      4909	intel_display.c	FUNCTION_147	IF_1	IF_2	CALL_5
0x4000593	      0xb901000000	                              mov ecx, 1	      4909	intel_display.c	FUNCTION_147	IF_1	IF_2	CALL_5
0x4000598	        0x41c1e40b	                           shl r12d, 0xb	      4909	intel_display.c	FUNCTION_147	IF_1	IF_2	CALL_5
0x400059c	    0x81ca00008080	                      or edx, 0x80800000	      4909	intel_display.c	FUNCTION_147	IF_1	IF_2	CALL_5
0x40005a2	          0x4889ef	                            mov rdi, rbp	      4909	intel_display.c	FUNCTION_147	IF_1	IF_2	CALL_5
0x40005a5	    0x418db4248080	                lea esi, [r12 + 0x68080]	      4909	intel_display.c	FUNCTION_147	IF_1	IF_2	CALL_5
0x40005ad	      0xe800000000	                          call 0x40005b2	      4909	intel_display.c	FUNCTION_147	IF_1	IF_2	CALL_5
0x40005b2	            0xeb81	                           jmp 0x4000535	      4909	intel_display.c	FUNCTION_147	IF_1	IF_2	CALL_5
intel_dump_pipe_config	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,6:ELSE,1:functions,1:CALL,27	305
0x400a600	            0x4157	                                push r15	     10653	intel_display.c	FUNCTION_312
0x400a602	            0x4156	                                push r14	     10653	intel_display.c	FUNCTION_312
0x400a604	          0x4989d0	                             mov r8, rdx	     10653	intel_display.c	FUNCTION_312
0x400a607	            0x4155	                                push r13	     10653	intel_display.c	FUNCTION_312
0x400a609	            0x4154	                                push r12	     10653	intel_display.c	FUNCTION_312
0x400a60b	          0x4989fd	                            mov r13, rdi	     10653	intel_display.c	FUNCTION_312
0x400a60e	              0x55	                                push rbp	     10653	intel_display.c	FUNCTION_312
0x400a60f	              0x53	                                push rbx	     10653	intel_display.c	FUNCTION_312
0x400a610	          0x4889f5	                            mov rbp, rsi	     10653	intel_display.c	FUNCTION_312
0x400a613	    0x48c7c6000000	                              mov rsi, 0	     10662	intel_display.c	FUNCTION_312	CALL_2
0x400a61a	            0x31db	                            xor ebx, ebx	     10629	intel_display.c	FUNCTION_311
0x400a61c	    0x41be40000000	                          mov r14d, 0x40	     10629	intel_display.c	FUNCTION_311
0x400a622	        0x4883ec78	                           sub rsp, 0x78	     10653	intel_display.c	FUNCTION_312
0x400a626	        0x488b4f20	            mov rcx, qword [rdi + 0x20] 	     10662	intel_display.c	FUNCTION_312	CALL_2
0x400a62a	          0x8b5760	            mov edx, dword [rdi + 0x60] 	     10662	intel_display.c	FUNCTION_312	CALL_2
0x400a62d	    0x65488b042528	                mov rax, qword gs:[0x28]	     10653	intel_display.c	FUNCTION_312
0x400a636	      0x4889442470	             mov qword [rsp + 0x70], rax	     10653	intel_display.c	FUNCTION_312
0x400a63b	            0x31c0	                            xor eax, eax	     10653	intel_display.c	FUNCTION_312
0x400a63d	          0x488b07	                    mov rax, qword [rdi]	     10654	intel_display.c	FUNCTION_312
0x400a640	      0xbf04000000	                              mov edi, 4	     10662	intel_display.c	FUNCTION_312	CALL_2
0x400a645	        0x48890424	                    mov qword [rsp], rax	     10654	intel_display.c	FUNCTION_312
0x400a649	      0xe800000000	                          call 0x400a64e	     10662	intel_display.c	FUNCTION_312	CALL_2
0x400a64e	    0x448ba5440200	          mov r12d, dword [rbp + 0x244] 	     10665	intel_display.c	FUNCTION_312	CALL_3
0x400a655	      0x4c8d7c2430	                   lea r15, [rsp + 0x30]	     10629	intel_display.c	FUNCTION_311
0x400a65a	      0xc644243000	                mov byte [rsp + 0x30], 0	     10629	intel_display.c	FUNCTION_311
0x400a65f	      0x48896c2408	                mov qword [rsp + 8], rbp	     10644	intel_display.c	FUNCTION_311	FOR_1	CALL_4
0x400a664	          0x4489e0	                           mov eax, r12d	     10634	intel_display.c	FUNCTION_311	FOR_1	IF_1	CALL_2
0x400a667	        0x480fa3d8	                             bt rax, rbx	     10634	intel_display.c	FUNCTION_311	FOR_1	IF_1	CALL_2
0x400a66b	            0x7350	                           jae 0x400a6bd	     10634	intel_display.c	FUNCTION_311	FOR_1	IF_1	CALL_2
0x400a66d	      0x488d442430	                   lea rax, [rsp + 0x30]	     10637	intel_display.c	FUNCTION_311	FOR_1	CALL_3
0x400a672	    0x4c8b04dd0000	                   mov r8, qword [rbx*8]	     10637	intel_display.c	FUNCTION_311	FOR_1	CALL_3
0x400a67a	    0x48c7c1000000	                              mov rcx, 0	     10637	intel_display.c	FUNCTION_311	FOR_1	CALL_3
0x400a681	    0x48c7c2000000	                              mov rdx, 0	     10637	intel_display.c	FUNCTION_311	FOR_1	CALL_3
0x400a688	          0x4c89f6	                            mov rsi, r14	     10637	intel_display.c	FUNCTION_311	FOR_1	CALL_3
0x400a68b	          0x4c89ff	                            mov rdi, r15	     10637	intel_display.c	FUNCTION_311	FOR_1	CALL_3
0x400a68e	          0x4939c7	                            cmp r15, rax	     10637	intel_display.c	FUNCTION_311	FOR_1	CALL_3
0x400a691	    0x48c7c0000000	                              mov rax, 0	     10637	intel_display.c	FUNCTION_311	FOR_1	CALL_3
0x400a698	        0x480f45c8	                         cmovne rcx, rax	     10637	intel_display.c	FUNCTION_311	FOR_1	CALL_3
0x400a69c	      0xe800000000	                          call 0x400a6a1	     10637	intel_display.c	FUNCTION_311	FOR_1	CALL_3
0x400a6a1	            0x4898	                                    cdqe	     10639	intel_display.c	FUNCTION_311	FOR_1	IF_2
0x400a6a3	          0x4c39f0	                            cmp rax, r14	     10639	intel_display.c	FUNCTION_311	FOR_1	IF_2
0x400a6a6	            0x731f	                           jae 0x400a6c7	     10639	intel_display.c	FUNCTION_311	FOR_1	IF_2
0x400a6a8	          0x4901c7	                            add r15, rax	     10641	intel_display.c	FUNCTION_311	FOR_1
0x400a6ab	          0x4929c6	                            sub r14, rax	     10642	intel_display.c	FUNCTION_311	FOR_1
0x400a6ae	            0x89d9	                            mov ecx, ebx	     10644	intel_display.c	FUNCTION_311	FOR_1	CALL_4
0x400a6b0	      0xb801000000	                              mov eax, 1	     10644	intel_display.c	FUNCTION_311	FOR_1	CALL_4
0x400a6b5	          0x48d3e0	                             shl rax, cl	     10644	intel_display.c	FUNCTION_311	FOR_1	CALL_4
0x400a6b8	            0xf7d0	                                 not eax	     10644	intel_display.c	FUNCTION_311	FOR_1	CALL_4
0x400a6ba	          0x4121c4	                           and r12d, eax	     10644	intel_display.c	FUNCTION_311	FOR_1	CALL_4
0x400a6bd	        0x4883c301	                              add rbx, 1	     10644	intel_display.c	FUNCTION_311	FOR_1	CALL_4
0x400a6c1	        0x4883fb0c	                            cmp rbx, 0xc	     10631	intel_display.c	FUNCTION_311	FOR_1	CALL_1
0x400a6c5	            0x759d	                           jne 0x400a664	     10631	intel_display.c	FUNCTION_311	FOR_1	CALL_1
0x400a6c7	          0x4585e4	                         test r12d, r12d	     10647	intel_display.c	FUNCTION_311	CALL_5
0x400a6ca	      0x488b6c2408	                mov rbp, qword [rsp + 8]	     10647	intel_display.c	FUNCTION_311	CALL_5
0x400a6cf	     0xf85a3040000	                           jne 0x400ab78	     10647	intel_display.c	FUNCTION_311	CALL_5
0x400a6d5	    0x8b8d44020000	           mov ecx, dword [rbp + 0x244] 	     10666	intel_display.c	FUNCTION_312	CALL_4
0x400a6db	      0x488d542430	                   lea rdx, [rsp + 0x30]	     10666	intel_display.c	FUNCTION_312	CALL_4
0x400a6e0	    0x48c7c6000000	                              mov rsi, 0	     10666	intel_display.c	FUNCTION_312	CALL_4
0x400a6e7	      0xbf04000000	                              mov edi, 4	     10666	intel_display.c	FUNCTION_312	CALL_4
0x400a6ec	      0xe800000000	                          call 0x400a6f1	     10666	intel_display.c	FUNCTION_312	CALL_4
0x400a6f1	    0x8b853c020000	           mov eax, dword [rbp + 0x23c] 	     10669	intel_display.c	FUNCTION_312	CALL_5
0x400a6f7	    0x440fb6854a02	          movzx r8d, byte [rbp + 0x24a] 	     10669	intel_display.c	FUNCTION_312	CALL_5
0x400a6ff	    0x48c7c2000000	                              mov rdx, 0	     10669	intel_display.c	FUNCTION_312	CALL_5
0x400a706	    0x8b8ddc020000	           mov ecx, dword [rbp + 0x2dc] 	     10669	intel_display.c	FUNCTION_312	CALL_5
0x400a70c	          0x83f805	                              cmp eax, 5	     10669	intel_display.c	FUNCTION_312	CALL_5
0x400a70f	            0x7708	                            ja 0x400a719	     10669	intel_display.c	FUNCTION_312	CALL_5
0x400a711	    0x488b14c50000	                  mov rdx, qword [rax*8]	     10669	intel_display.c	FUNCTION_312	CALL_5
0x400a719	    0x48c7c6000000	                              mov rsi, 0	     10669	intel_display.c	FUNCTION_312	CALL_5
0x400a720	      0xbf04000000	                              mov edi, 4	     10669	intel_display.c	FUNCTION_312	CALL_5
0x400a725	      0xe800000000	                          call 0x400a72a	     10669	intel_display.c	FUNCTION_312	CALL_5
0x400a72a	    0x80bd38020000	               cmp byte [rbp + 0x238], 0	     10673	intel_display.c	FUNCTION_312	IF_1
0x400a731	     0xf85f7030000	                           jne 0x400ab2e	     10673	intel_display.c	FUNCTION_312	IF_1
0x400a737	    0x80bd93040000	               cmp byte [rbp + 0x493], 0	     10678	intel_display.c	FUNCTION_312	IF_2
0x400a73e	     0xf85d4030000	                           jne 0x400ab18	     10678	intel_display.c	FUNCTION_312	IF_2
0x400a744	    0xf78544020000	        test dword [rbp + 0x244], 0x980 	     10681	intel_display.c	FUNCTION_312	IF_3	CALL_9
0x400a74e	     0xf8526030000	                           jne 0x400aa7a	     10681	intel_display.c	FUNCTION_312	IF_3	CALL_9
0x400a754	     0xfb68d390200	          movzx ecx, byte [rbp + 0x239] 	     10690	intel_display.c	FUNCTION_312	CALL_12
0x400a75b	     0xfb695490200	          movzx edx, byte [rbp + 0x249] 	     10690	intel_display.c	FUNCTION_312	CALL_12
0x400a762	    0x48c7c6000000	                              mov rsi, 0	     10690	intel_display.c	FUNCTION_312	CALL_12
0x400a769	      0xbf04000000	                              mov edi, 4	     10690	intel_display.c	FUNCTION_312	CALL_12
0x400a76e	      0xe800000000	                          call 0x400a773	     10690	intel_display.c	FUNCTION_312	CALL_12
0x400a773	    0x48c7c6000000	                              mov rsi, 0	     10693	intel_display.c	FUNCTION_312	CALL_13
0x400a77a	      0xbf04000000	                              mov edi, 4	     10693	intel_display.c	FUNCTION_312	CALL_13
0x400a77f	      0xe800000000	                          call 0x400a784	     10693	intel_display.c	FUNCTION_312	CALL_13
0x400a784	    0x488dbdf80000	                   lea rdi, [rbp + 0xf8]	     10694	intel_display.c	FUNCTION_312	CALL_14
0x400a78b	      0xe800000000	                          call 0x400a790	     10694	intel_display.c	FUNCTION_312	CALL_14
0x400a790	    0x48c7c6000000	                              mov rsi, 0	     10695	intel_display.c	FUNCTION_312	CALL_15
0x400a797	      0xbf04000000	                              mov edi, 4	     10695	intel_display.c	FUNCTION_312	CALL_15
0x400a79c	      0xe800000000	                          call 0x400a7a1	     10695	intel_display.c	FUNCTION_312	CALL_15
0x400a7a1	        0x488d7d18	                   lea rdi, [rbp + 0x18]	     10696	intel_display.c	FUNCTION_312	CALL_16
0x400a7a5	      0xe800000000	                          call 0x400a7aa	     10696	intel_display.c	FUNCTION_312	CALL_16
0x400a7aa	    0x8b859c000000	            mov eax, dword [rbp + 0x9c] 	     10585	intel_display.c	FUNCTION_309	CALL_1
0x400a7b0	    0x8b8dac000000	            mov ecx, dword [rbp + 0xac] 	     10585	intel_display.c	FUNCTION_309	CALL_1
0x400a7b6	    0x48c7c6000000	                              mov rsi, 0	     10585	intel_display.c	FUNCTION_309	CALL_1
0x400a7bd	    0x8b95a8000000	            mov edx, dword [rbp + 0xa8] 	     10585	intel_display.c	FUNCTION_309	CALL_1
0x400a7c3	      0xbf04000000	                              mov edi, 4	     10585	intel_display.c	FUNCTION_309	CALL_1
0x400a7c8	              0x50	                                push rax	     10585	intel_display.c	FUNCTION_309	CALL_1
0x400a7c9	          0x8b456c	            mov eax, dword [rbp + 0x6c] 	     10585	intel_display.c	FUNCTION_309	CALL_1
0x400a7cc	              0x50	                                push rax	     10585	intel_display.c	FUNCTION_309	CALL_1
0x400a7cd	    0x8b85dc000000	            mov eax, dword [rbp + 0xdc] 	     10585	intel_display.c	FUNCTION_309	CALL_1
0x400a7d3	              0x50	                                push rax	     10585	intel_display.c	FUNCTION_309	CALL_1
0x400a7d4	    0x8b85d8000000	            mov eax, dword [rbp + 0xd8] 	     10585	intel_display.c	FUNCTION_309	CALL_1
0x400a7da	              0x50	                                push rax	     10585	intel_display.c	FUNCTION_309	CALL_1
0x400a7db	    0x8b85d4000000	            mov eax, dword [rbp + 0xd4] 	     10585	intel_display.c	FUNCTION_309	CALL_1
0x400a7e1	              0x50	                                push rax	     10585	intel_display.c	FUNCTION_309	CALL_1
0x400a7e2	    0x8b85c8000000	            mov eax, dword [rbp + 0xc8] 	     10585	intel_display.c	FUNCTION_309	CALL_1
0x400a7e8	              0x50	                                push rax	     10585	intel_display.c	FUNCTION_309	CALL_1
0x400a7e9	    0x8b85c0000000	            mov eax, dword [rbp + 0xc0] 	     10585	intel_display.c	FUNCTION_309	CALL_1
0x400a7ef	              0x50	                                push rax	     10585	intel_display.c	FUNCTION_309	CALL_1
0x400a7f0	    0x448b8dbc0000	            mov r9d, dword [rbp + 0xbc] 	     10585	intel_display.c	FUNCTION_309	CALL_1
0x400a7f7	    0x448b85b80000	            mov r8d, dword [rbp + 0xb8] 	     10585	intel_display.c	FUNCTION_309	CALL_1
0x400a7fe	      0xe800000000	                          call 0x400a803	     10585	intel_display.c	FUNCTION_309	CALL_1
0x400a803	    0x8b8d2c020000	           mov ecx, dword [rbp + 0x22c] 	     10698	intel_display.c	FUNCTION_312	CALL_18
0x400a809	    0x8b950c030000	           mov edx, dword [rbp + 0x30c] 	     10698	intel_display.c	FUNCTION_312	CALL_18
0x400a80f	        0x4883c438	                           add rsp, 0x38	     10698	intel_display.c	FUNCTION_312	CALL_18
0x400a813	    0x448b8d340200	           mov r9d, dword [rbp + 0x234] 	     10698	intel_display.c	FUNCTION_312	CALL_18
0x400a81a	    0x448b85300200	           mov r8d, dword [rbp + 0x230] 	     10698	intel_display.c	FUNCTION_312	CALL_18
0x400a821	    0x48c7c6000000	                              mov rsi, 0	     10698	intel_display.c	FUNCTION_312	CALL_18
0x400a828	      0xbf04000000	                              mov edi, 4	     10698	intel_display.c	FUNCTION_312	CALL_18
0x400a82d	      0xe800000000	                          call 0x400a832	     10698	intel_display.c	FUNCTION_312	CALL_18
0x400a832	        0x488b0424	                    mov rax, qword [rsp]	     10703	intel_display.c	FUNCTION_312	IF_5	CALL_19
0x400a836	    0x80b85c060000	               cmp byte [rax + 0x65c], 8	     10703	intel_display.c	FUNCTION_312	IF_5	CALL_19
0x400a83d	     0xf870d020000	                            ja 0x400aa50	     10703	intel_display.c	FUNCTION_312	IF_5	CALL_19
0x400a843	        0x488b0424	                    mov rax, qword [rsp]	     10709	intel_display.c	FUNCTION_312	IF_6	CALL_21
0x400a847	    0xf68078060000	          test byte [rax + 0x678], 0x20 	     10709	intel_display.c	FUNCTION_312	IF_6	CALL_21
0x400a84e	     0xf85d3010000	                           jne 0x400aa27	     10709	intel_display.c	FUNCTION_312	IF_6	CALL_21
0x400a854	    0x80bd2c030000	               cmp byte [rbp + 0x32c], 0	       155	i915_utils.h	FUNCTION_473
0x400a85b	    0x8b8d28030000	           mov ecx, dword [rbp + 0x328] 	     10715	intel_display.c	FUNCTION_312	ELSE_1	CALL_23
0x400a861	    0x48c7c0000000	                              mov rax, 0	     10715	intel_display.c	FUNCTION_312	ELSE_1	CALL_23
0x400a868	    0x8b9524030000	           mov edx, dword [rbp + 0x324] 	     10715	intel_display.c	FUNCTION_312	ELSE_1	CALL_23
0x400a86e	    0x49c7c0000000	                               mov r8, 0	     10715	intel_display.c	FUNCTION_312	ELSE_1	CALL_23
0x400a875	    0x48c7c6000000	                              mov rsi, 0	     10715	intel_display.c	FUNCTION_312	ELSE_1	CALL_23
0x400a87c	      0xbf04000000	                              mov edi, 4	     10715	intel_display.c	FUNCTION_312	ELSE_1	CALL_23
0x400a881	        0x4c0f44c0	                           cmove r8, rax	     10715	intel_display.c	FUNCTION_312	ELSE_1	CALL_23
0x400a885	      0xe800000000	                          call 0x400a88a	     10715	intel_display.c	FUNCTION_312	ELSE_1	CALL_23
0x400a88a	     0xfb68d4b0300	          movzx ecx, byte [rbp + 0x34b] 	     10720	intel_display.c	FUNCTION_312	CALL_25
0x400a891	     0xfb695480300	          movzx edx, byte [rbp + 0x348] 	     10720	intel_display.c	FUNCTION_312	CALL_25
0x400a898	    0x48c7c6000000	                              mov rsi, 0	     10720	intel_display.c	FUNCTION_312	CALL_25
0x400a89f	      0xbf04000000	                              mov edi, 4	     10720	intel_display.c	FUNCTION_312	CALL_25
0x400a8a4	      0xe800000000	                          call 0x400a8a9	     10720	intel_display.c	FUNCTION_312	CALL_25
0x400a8a9	        0x488b1c24	                    mov rbx, qword [rsp]	     10723	intel_display.c	FUNCTION_312	CALL_26
0x400a8ad	    0x488db5800200	                  lea rsi, [rbp + 0x280]	     10723	intel_display.c	FUNCTION_312	CALL_26
0x400a8b4	          0x4889df	                            mov rdi, rbx	     10723	intel_display.c	FUNCTION_312	CALL_26
0x400a8b7	      0xe800000000	                          call 0x400a8bc	     10723	intel_display.c	FUNCTION_312	CALL_26
0x400a8bc	    0x48c7c6000000	                              mov rsi, 0	     10725	intel_display.c	FUNCTION_312	CALL_27
0x400a8c3	      0xbf04000000	                              mov edi, 4	     10725	intel_display.c	FUNCTION_312	CALL_27
0x400a8c8	      0xe800000000	                          call 0x400a8cd	     10725	intel_display.c	FUNCTION_312	CALL_27
0x400a8cd	          0x4889de	                            mov rsi, rbx	     10726	intel_display.c	FUNCTION_312	FUNCTION_1
0x400a8d0	    0x488b83500300	           mov rax, qword [rbx + 0x350] 	     10726	intel_display.c	FUNCTION_312	FUNCTION_1
0x400a8d7	    0x4c8dbe500300	                  lea r15, [rsi + 0x350]	     10726	intel_display.c	FUNCTION_312	FUNCTION_1
0x400a8de	          0x4939c7	                            cmp r15, rax	     10726	intel_display.c	FUNCTION_312	FUNCTION_1
0x400a8e1	        0x488d58f8	                      lea rbx, [rax - 8]	     10726	intel_display.c	FUNCTION_312	FUNCTION_1
0x400a8e5	     0xf84f4000000	                            je 0x400a9df	     10726	intel_display.c	FUNCTION_312	FUNCTION_1
0x400a8eb	          0x4989f6	                            mov r14, rsi	     10726	intel_display.c	FUNCTION_312	FUNCTION_1
0x400a8ee	            0xeb11	                           jmp 0x400a901	     10726	intel_display.c	FUNCTION_312	FUNCTION_1
0x400a8f0	        0x488b4308	                mov rax, qword [rbx + 8]	     10726	intel_display.c	FUNCTION_312	FUNCTION_1
0x400a8f4	          0x4939c7	                            cmp r15, rax	     10726	intel_display.c	FUNCTION_312	FUNCTION_1
0x400a8f7	        0x488d58f8	                      lea rbx, [rax - 8]	     10726	intel_display.c	FUNCTION_312	FUNCTION_1
0x400a8fb	     0xf84de000000	                            je 0x400a9df	     10726	intel_display.c	FUNCTION_312	FUNCTION_1
0x400a901	    0x418b85b00400	           mov eax, dword [r13 + 0x4b0] 	     10729	intel_display.c	FUNCTION_312	FUNCTION_1	IF_1
0x400a908	    0x398388020000	           cmp dword [rbx + 0x288], eax 	     10729	intel_display.c	FUNCTION_312	FUNCTION_1	IF_1
0x400a90e	            0x75e0	                           jne 0x400a8f0	     10729	intel_display.c	FUNCTION_312	FUNCTION_1	IF_1
0x400a910	    0x4c8ba3580200	           mov r12, qword [rbx + 0x258] 	     10732	intel_display.c	FUNCTION_312	FUNCTION_1	CALL_2
0x400a917	      0x498b6c2410	            mov rbp, qword [r12 + 0x10] 	     10733	intel_display.c	FUNCTION_312	FUNCTION_1
0x400a91c	          0x4885ed	                           test rbp, rbp	     10734	intel_display.c	FUNCTION_312	FUNCTION_1	IF_2
0x400a91f	     0xf84dd000000	                            je 0x400aa02	     10734	intel_display.c	FUNCTION_312	FUNCTION_1	IF_2
0x400a925	        0x488b4548	            mov rax, qword [rbp + 0x48] 	     10740	intel_display.c	FUNCTION_312	FUNCTION_1	CALL_4
0x400a929	      0x488d742410	                   lea rsi, [rsp + 0x10]	     10740	intel_display.c	FUNCTION_312	FUNCTION_1	CALL_4
0x400a92e	            0x8b38	                    mov edi, dword [rax]	     10740	intel_display.c	FUNCTION_312	FUNCTION_1	CALL_4
0x400a930	      0xe800000000	                          call 0x400a935	     10740	intel_display.c	FUNCTION_312	FUNCTION_1	CALL_4
0x400a935	          0x8b5358	            mov edx, dword [rbx + 0x58] 	     10740	intel_display.c	FUNCTION_312	FUNCTION_1	CALL_4
0x400a938	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	     10740	intel_display.c	FUNCTION_312	FUNCTION_1	CALL_4
0x400a93c	    0x48c7c6000000	                              mov rsi, 0	     10740	intel_display.c	FUNCTION_312	FUNCTION_1	CALL_4
0x400a943	              0x50	                                push rax	     10740	intel_display.c	FUNCTION_312	FUNCTION_1	CALL_4
0x400a944	    0x8b8584000000	            mov eax, dword [rbp + 0x84] 	     10740	intel_display.c	FUNCTION_312	FUNCTION_1	CALL_4
0x400a94a	      0xbf04000000	                              mov edi, 4	     10740	intel_display.c	FUNCTION_312	FUNCTION_1	CALL_4
0x400a94f	              0x50	                                push rax	     10740	intel_display.c	FUNCTION_312	FUNCTION_1	CALL_4
0x400a950	    0x448b8d800000	            mov r9d, dword [rbp + 0x80] 	     10740	intel_display.c	FUNCTION_312	FUNCTION_1	CALL_4
0x400a957	        0x448b4518	            mov r8d, dword [rbp + 0x18] 	     10740	intel_display.c	FUNCTION_312	FUNCTION_1	CALL_4
0x400a95b	      0xe800000000	                          call 0x400a960	     10740	intel_display.c	FUNCTION_312	FUNCTION_1	CALL_4
0x400a960	    0x4180be5c0600	               cmp byte [r14 + 0x65c], 8	     10744	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_6
0x400a968	              0x58	                                 pop rax	     10744	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_6
0x400a969	              0x5a	                                 pop rdx	     10744	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_6
0x400a96a	            0x7684	                           jbe 0x400a8f0	     10744	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_6
0x400a96c	      0x418b7c2468	            mov edi, dword [r12 + 0x68] 	     10744	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_6
0x400a971	      0x418b442470	            mov eax, dword [r12 + 0x70] 	     10745	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_7
0x400a976	      0x418b742464	            mov esi, dword [r12 + 0x64] 	     10745	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_7
0x400a97b	      0x458b442458	            mov r8d, dword [r12 + 0x58] 	     10745	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_7
0x400a980	      0x418b4c2454	            mov ecx, dword [r12 + 0x54] 	     10745	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_7
0x400a985	      0x458b4c245c	            mov r9d, dword [r12 + 0x5c] 	     10745	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_7
0x400a98a	            0x29f8	                            sub eax, edi	     10745	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_7
0x400a98c	    0x418b9424b800	            mov edx, dword [r12 + 0xb8] 	     10745	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_7
0x400a994	              0x50	                                push rax	     10745	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_7
0x400a995	      0x418b44246c	            mov eax, dword [r12 + 0x6c] 	     10745	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_7
0x400a99a	          0x4129c9	                            sub r9d, ecx	     10745	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_7
0x400a99d	          0xc1f910	                           sar ecx, 0x10	     10745	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_7
0x400a9a0	        0x41c1f910	                           sar r9d, 0x10	     10745	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_7
0x400a9a4	            0x29f0	                            sub eax, esi	     10745	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_7
0x400a9a6	              0x50	                                push rax	     10745	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_7
0x400a9a7	              0x57	                                push rdi	     10745	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_7
0x400a9a8	      0xbf04000000	                              mov edi, 4	     10745	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_7
0x400a9ad	              0x56	                                push rsi	     10745	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_7
0x400a9ae	      0x418b442460	            mov eax, dword [r12 + 0x60] 	     10745	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_7
0x400a9b3	    0x48c7c6000000	                              mov rsi, 0	     10745	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_7
0x400a9ba	          0x4429c0	                            sub eax, r8d	     10745	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_7
0x400a9bd	        0x41c1f810	                           sar r8d, 0x10	     10745	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_7
0x400a9c1	          0xc1f810	                           sar eax, 0x10	     10745	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_7
0x400a9c4	              0x50	                                push rax	     10745	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_7
0x400a9c5	      0xe800000000	                          call 0x400a9ca	     10745	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_7
0x400a9ca	        0x488b4308	                mov rax, qword [rbx + 8]	     10726	intel_display.c	FUNCTION_312	FUNCTION_1
0x400a9ce	        0x4883c428	                           add rsp, 0x28	     10745	intel_display.c	FUNCTION_312	FUNCTION_1	IF_3	CALL_7
0x400a9d2	          0x4939c7	                            cmp r15, rax	     10726	intel_display.c	FUNCTION_312	FUNCTION_1
0x400a9d5	        0x488d58f8	                      lea rbx, [rax - 8]	     10726	intel_display.c	FUNCTION_312	FUNCTION_1
0x400a9d9	     0xf8522ffffff	                           jne 0x400a901	     10726	intel_display.c	FUNCTION_312	FUNCTION_1
0x400a9df	      0x488b442470	            mov rax, qword [rsp + 0x70] 	     10755	intel_display.c	FUNCTION_312
0x400a9e4	    0x654833042528	                xor rax, qword gs:[0x28]	     10755	intel_display.c	FUNCTION_312
0x400a9ed	     0xf85b3010000	                           jne 0x400aba6	     10755	intel_display.c	FUNCTION_312
0x400a9f3	        0x4883c478	                           add rsp, 0x78	     10755	intel_display.c	FUNCTION_312
0x400a9f7	              0x5b	                                 pop rbx	     10755	intel_display.c	FUNCTION_312
0x400a9f8	              0x5d	                                 pop rbp	     10755	intel_display.c	FUNCTION_312
0x400a9f9	            0x415c	                                 pop r12	     10755	intel_display.c	FUNCTION_312
0x400a9fb	            0x415d	                                 pop r13	     10755	intel_display.c	FUNCTION_312
0x400a9fd	            0x415e	                                 pop r14	     10755	intel_display.c	FUNCTION_312
0x400a9ff	            0x415f	                                 pop r15	     10755	intel_display.c	FUNCTION_312
0x400aa01	              0xc3	                                     ret	     10755	intel_display.c	FUNCTION_312
0x400aa02	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	     10735	intel_display.c	FUNCTION_312	FUNCTION_1	IF_2	CALL_3
0x400aa06	          0x8b5358	            mov edx, dword [rbx + 0x58] 	     10735	intel_display.c	FUNCTION_312	FUNCTION_1	IF_2	CALL_3
0x400aa09	    0x48c7c6000000	                              mov rsi, 0	     10735	intel_display.c	FUNCTION_312	FUNCTION_1	IF_2	CALL_3
0x400aa10	    0x458b8424b800	            mov r8d, dword [r12 + 0xb8] 	     10735	intel_display.c	FUNCTION_312	FUNCTION_1	IF_2	CALL_3
0x400aa18	      0xbf04000000	                              mov edi, 4	     10735	intel_display.c	FUNCTION_312	FUNCTION_1	IF_2	CALL_3
0x400aa1d	      0xe800000000	                          call 0x400aa22	     10735	intel_display.c	FUNCTION_312	FUNCTION_1	IF_2	CALL_3
0x400aa22	      0xe9c9feffff	                           jmp 0x400a8f0	     10737	intel_display.c	FUNCTION_312	FUNCTION_1	IF_2
0x400aa27	    0x8b8d1c030000	           mov ecx, dword [rbp + 0x31c] 	     10710	intel_display.c	FUNCTION_312	IF_6	CALL_22
0x400aa2d	    0x8b9518030000	           mov edx, dword [rbp + 0x318] 	     10710	intel_display.c	FUNCTION_312	IF_6	CALL_22
0x400aa33	    0x48c7c6000000	                              mov rsi, 0	     10710	intel_display.c	FUNCTION_312	IF_6	CALL_22
0x400aa3a	    0x448b85200300	           mov r8d, dword [rbp + 0x320] 	     10710	intel_display.c	FUNCTION_312	IF_6	CALL_22
0x400aa41	      0xbf04000000	                              mov edi, 4	     10710	intel_display.c	FUNCTION_312	IF_6	CALL_22
0x400aa46	      0xe800000000	                          call 0x400aa4b	     10710	intel_display.c	FUNCTION_312	IF_6	CALL_22
0x400aa4b	      0xe93afeffff	                           jmp 0x400a88a	     10710	intel_display.c	FUNCTION_312	IF_6	CALL_22
0x400aa50	    0x8b8d60030000	           mov ecx, dword [rbp + 0x360] 	     10704	intel_display.c	FUNCTION_312	IF_5	CALL_20
0x400aa56	    0x418b95680500	           mov edx, dword [r13 + 0x568] 	     10704	intel_display.c	FUNCTION_312	IF_5	CALL_20
0x400aa5d	    0x48c7c6000000	                              mov rsi, 0	     10704	intel_display.c	FUNCTION_312	IF_5	CALL_20
0x400aa64	    0x448b85640300	           mov r8d, dword [rbp + 0x364] 	     10704	intel_display.c	FUNCTION_312	IF_5	CALL_20
0x400aa6b	      0xbf04000000	                              mov edi, 4	     10704	intel_display.c	FUNCTION_312	IF_5	CALL_20
0x400aa70	      0xe800000000	                          call 0x400aa75	     10704	intel_display.c	FUNCTION_312	IF_5	CALL_20
0x400aa75	      0xe9c9fdffff	                           jmp 0x400a843	     10704	intel_display.c	FUNCTION_312	IF_5	CALL_20
0x400aa7a	    0x8b85e0020000	           mov eax, dword [rbp + 0x2e0] 	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400aa80	     0xfb68d140300	          movzx ecx, byte [rbp + 0x314] 	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400aa87	    0x48c7c2000000	                              mov rdx, 0	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400aa8e	    0x48c7c6000000	                              mov rsi, 0	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400aa95	      0xbf04000000	                              mov edi, 4	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400aa9a	              0x50	                                push rax	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400aa9b	    0x8b85f0020000	           mov eax, dword [rbp + 0x2f0] 	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400aaa1	              0x50	                                push rax	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400aaa2	    0x8b85ec020000	           mov eax, dword [rbp + 0x2ec] 	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400aaa8	              0x50	                                push rax	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400aaa9	    0x448b8de80200	           mov r9d, dword [rbp + 0x2e8] 	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400aab0	    0x448b85e40200	           mov r8d, dword [rbp + 0x2e4] 	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400aab7	      0xe800000000	                          call 0x400aabc	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400aabc	        0x4883c418	                           add rsp, 0x18	     10684	intel_display.c	FUNCTION_312	IF_3	IF_4
0x400aac0	    0x80bd08030000	               cmp byte [rbp + 0x308], 0	     10684	intel_display.c	FUNCTION_312	IF_3	IF_4
0x400aac7	     0xf8487fcffff	                            je 0x400a754	     10684	intel_display.c	FUNCTION_312	IF_3	IF_4
0x400aacd	    0x8b85f4020000	           mov eax, dword [rbp + 0x2f4] 	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400aad3	     0xfb68d140300	          movzx ecx, byte [rbp + 0x314] 	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400aada	    0x48c7c2000000	                              mov rdx, 0	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400aae1	    0x48c7c6000000	                              mov rsi, 0	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400aae8	      0xbf04000000	                              mov edi, 4	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400aaed	              0x50	                                push rax	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400aaee	    0x8b8504030000	           mov eax, dword [rbp + 0x304] 	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400aaf4	              0x50	                                push rax	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400aaf5	    0x8b8500030000	           mov eax, dword [rbp + 0x300] 	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400aafb	              0x50	                                push rax	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400aafc	    0x448b8dfc0200	           mov r9d, dword [rbp + 0x2fc] 	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400ab03	    0x448b85f80200	           mov r8d, dword [rbp + 0x2f8] 	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400ab0a	      0xe800000000	                          call 0x400ab0f	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400ab0f	        0x4883c418	                           add rsp, 0x18	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400ab13	      0xe93cfcffff	                           jmp 0x400a754	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400ab18	    0x48c7c6000000	                              mov rsi, 0	     10679	intel_display.c	FUNCTION_312	CALL_8
0x400ab1f	      0xbf04000000	                              mov edi, 4	     10679	intel_display.c	FUNCTION_312	CALL_8
0x400ab24	      0xe800000000	                          call 0x400ab29	     10679	intel_display.c	FUNCTION_312	CALL_8
0x400ab29	      0xe916fcffff	                           jmp 0x400a744	     10679	intel_display.c	FUNCTION_312	CALL_8
0x400ab2e	    0x8b8534030000	           mov eax, dword [rbp + 0x334] 	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400ab34	    0x8b8d30030000	           mov ecx, dword [rbp + 0x330] 	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400ab3a	    0x48c7c2000000	                              mov rdx, 0	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400ab41	    0x48c7c6000000	                              mov rsi, 0	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400ab48	      0xbf04000000	                              mov edi, 4	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400ab4d	              0x50	                                push rax	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400ab4e	    0x8b8544030000	           mov eax, dword [rbp + 0x344] 	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400ab54	              0x50	                                push rax	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400ab55	    0x8b8540030000	           mov eax, dword [rbp + 0x340] 	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400ab5b	              0x50	                                push rax	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400ab5c	    0x448b8d3c0300	           mov r9d, dword [rbp + 0x33c] 	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400ab63	    0x448b85380300	           mov r8d, dword [rbp + 0x338] 	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400ab6a	      0xe800000000	                          call 0x400ab6f	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400ab6f	        0x4883c418	                           add rsp, 0x18	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400ab73	      0xe9bffbffff	                           jmp 0x400a737	     10598	intel_display.c	FUNCTION_310	CALL_1
0x400ab78	    0x803d00000000	                cmp byte [0x0400ab7f], 0	     10647	intel_display.c	FUNCTION_311	CALL_5
0x400ab7f	     0xf8550fbffff	                           jne 0x400a6d5	     10647	intel_display.c	FUNCTION_311	CALL_5
0x400ab85	    0x48c7c6000000	                              mov rsi, 0	     10647	intel_display.c	FUNCTION_311	CALL_5
0x400ab8c	    0x48c7c7000000	                              mov rdi, 0	     10647	intel_display.c	FUNCTION_311	CALL_5
0x400ab93	    0xc60500000000	                mov byte [0x0400ab9a], 1	     10647	intel_display.c	FUNCTION_311	CALL_5
0x400ab9a	      0xe800000000	                          call 0x400ab9f	     10647	intel_display.c	FUNCTION_311	CALL_5
0x400ab9f	             0xf0b	                                     ud2	     10647	intel_display.c	FUNCTION_311	CALL_5
0x400aba1	      0xe92ffbffff	                           jmp 0x400a6d5	     10647	intel_display.c	FUNCTION_311	CALL_5
0x400aba6	      0xe800000000	                          call 0x400abab	     10755	intel_display.c	FUNCTION_312
i9xx_disable_cursor	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,1	3
0x4001410	            0x31d2	                            xor edx, edx	      9776	intel_display.c	FUNCTION_288	CALL_1
0x4001412	            0x31f6	                            xor esi, esi	      9776	intel_display.c	FUNCTION_288	CALL_1
0x4001414	      0xe9c7fdffff	              jmp sym.i9xx_update_cursor	      9776	intel_display.c	FUNCTION_288	CALL_1
haswell_get_pipe_config	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,13:ELSE,4:functions,0:CALL,37	568
0x4009ba0	            0x4157	                                push r15	      9269	intel_display.c	FUNCTION_273
0x4009ba2	            0x4156	                                push r14	      9269	intel_display.c	FUNCTION_273
0x4009ba4	          0x4989ff	                            mov r15, rdi	      9269	intel_display.c	FUNCTION_273
0x4009ba7	            0x4155	                                push r13	      9269	intel_display.c	FUNCTION_273
0x4009ba9	            0x4154	                                push r12	      9269	intel_display.c	FUNCTION_273
0x4009bab	              0x55	                                push rbp	      9269	intel_display.c	FUNCTION_273
0x4009bac	              0x53	                                push rbx	      9269	intel_display.c	FUNCTION_273
0x4009bad	          0x4889f3	                            mov rbx, rsi	      9269	intel_display.c	FUNCTION_273
0x4009bb0	        0x4883ec10	                           sub rsp, 0x10	      9269	intel_display.c	FUNCTION_273
0x4009bb4	    0x486387b00400	        movsxd rax, dword [rdi + 0x4b0] 	     13484	intel_display.c	FUNCTION_374
0x4009bbb	          0x488b2f	                    mov rbp, qword [rdi]	      9270	intel_display.c	FUNCTION_273	CALL_1
0x4009bbe	          0x4989c5	                            mov r13, rax	     13484	intel_display.c	FUNCTION_374
0x4009bc1	     0xfb684057406	    movzx eax, byte [rbp + rax + 0x674] 	     13484	intel_display.c	FUNCTION_374
0x4009bc9	            0x85c0	                           test eax, eax	     13485	intel_display.c	FUNCTION_374	IF_1
0x4009bcb	    0x898768050000	            mov dword [rdi + 0x568], eax	     13484	intel_display.c	FUNCTION_374
0x4009bd1	     0xf85f5000000	                           jne 0x4009ccc	     13485	intel_display.c	FUNCTION_374	IF_1
0x4009bd7	          0x4489ee	                           mov esi, r13d	      9278	intel_display.c	FUNCTION_273	IF_1	CALL_4
0x4009bda	          0x4889ef	                            mov rdi, rbp	      9278	intel_display.c	FUNCTION_273	IF_1	CALL_4
0x4009bdd	      0xe800000000	                          call 0x4009be2	      9278	intel_display.c	FUNCTION_273	IF_1	CALL_4
0x4009be2	            0x84c0	                             test al, al	      9278	intel_display.c	FUNCTION_273	IF_1	CALL_4
0x4009be4	            0x750f	                           jne 0x4009bf5	      9278	intel_display.c	FUNCTION_273	IF_1	CALL_4
0x4009be6	        0x4883c410	                           add rsp, 0x10	      9357	intel_display.c	FUNCTION_273
0x4009bea	              0x5b	                                 pop rbx	      9357	intel_display.c	FUNCTION_273
0x4009beb	              0x5d	                                 pop rbp	      9357	intel_display.c	FUNCTION_273
0x4009bec	            0x415c	                                 pop r12	      9357	intel_display.c	FUNCTION_273
0x4009bee	            0x415d	                                 pop r13	      9357	intel_display.c	FUNCTION_273
0x4009bf0	            0x415e	                                 pop r14	      9357	intel_display.c	FUNCTION_273
0x4009bf2	            0x415f	                                 pop r15	      9357	intel_display.c	FUNCTION_273
0x4009bf4	              0xc3	                                     ret	      9357	intel_display.c	FUNCTION_273
0x4009bf5	    0x48c783780200	              mov qword [rbx + 0x278], 0	      9282	intel_display.c	FUNCTION_273
0x4009c00	          0x4489e9	                           mov ecx, r13d	      9280	intel_display.c	FUNCTION_273	CALL_5
0x4009c03	    0x418b87b00400	           mov eax, dword [r15 + 0x4b0] 	      9137	intel_display.c	FUNCTION_270
0x4009c0a	          0x4d8b2f	                    mov r13, qword [r15]	      9137	intel_display.c	FUNCTION_270
0x4009c0d	    0x41bc01000000	                             mov r12d, 1	      9280	intel_display.c	FUNCTION_273	CALL_5
0x4009c13	          0x49d3e4	                             shl r12, cl	      9280	intel_display.c	FUNCTION_273	CALL_5
0x4009c16	    0x89833c020000	            mov dword [rbx + 0x23c], eax	      9137	intel_display.c	FUNCTION_270
0x4009c1c	    0x418b85a40600	           mov eax, dword [r13 + 0x6a4] 	      9143	intel_display.c	FUNCTION_270	CALL_3
0x4009c23	    0x412b85980600	            sub eax, dword [r13 + 0x698]	      9143	intel_display.c	FUNCTION_270	CALL_3
0x4009c2a	          0x4c89ef	                            mov rdi, r13	      9143	intel_display.c	FUNCTION_270	CALL_3
0x4009c2d	    0x418b956c0600	           mov edx, dword [r13 + 0x66c] 	      9143	intel_display.c	FUNCTION_270	CALL_3
0x4009c34	    0x498b8df80700	           mov rcx, qword [r13 + 0x7f8] 	      9143	intel_display.c	FUNCTION_270	CALL_3
0x4009c3b	    0x8db410000406	          lea esi, [rax + rdx + 0x60400]	      9143	intel_display.c	FUNCTION_270	CALL_3
0x4009c42	      0xba01000000	                              mov edx, 1	      9143	intel_display.c	FUNCTION_270	CALL_3
0x4009c47	      0xe800000000	                          call 0x4009c4c	      9143	intel_display.c	FUNCTION_270	CALL_3
0x4009c4c	            0x85c0	                           test eax, eax	      9144	intel_display.c	FUNCTION_270	IF_1
0x4009c4e	     0xf88e7040000	                            js 0x400a13b	      9144	intel_display.c	FUNCTION_270	IF_1
0x4009c54	    0x8b833c020000	           mov eax, dword [rbx + 0x23c] 	      9165	intel_display.c	FUNCTION_270	CALL_5
0x4009c5a	        0x448d7006	                     lea r14d, [rax + 6]	      9165	intel_display.c	FUNCTION_270	CALL_5
0x4009c5e	          0x83f803	                              cmp eax, 3	      9165	intel_display.c	FUNCTION_270	CALL_5
0x4009c61	      0xb809000000	                              mov eax, 9	      9165	intel_display.c	FUNCTION_270	CALL_5
0x4009c66	        0x440f44f0	                         cmove r14d, eax	      9165	intel_display.c	FUNCTION_270	CALL_5
0x4009c6a	          0x4489f6	                           mov esi, r14d	      9166	intel_display.c	FUNCTION_270	IF_3	CALL_6
0x4009c6d	          0x4c89ef	                            mov rdi, r13	      9166	intel_display.c	FUNCTION_270	IF_3	CALL_6
0x4009c70	      0xe800000000	                          call 0x4009c75	      9166	intel_display.c	FUNCTION_270	IF_3	CALL_6
0x4009c75	            0x84c0	                             test al, al	      9166	intel_display.c	FUNCTION_270	IF_3	CALL_6
0x4009c77	     0xf8596000000	                           jne 0x4009d13	      9166	intel_display.c	FUNCTION_270	IF_3	CALL_6
0x4009c7d	    0xf6855b060000	              test byte [rbp + 0x65b], 1	      9286	intel_display.c	FUNCTION_273	IF_2	CALL_7
0x4009c84	            0x740d	                            je 0x4009c93	      9286	intel_display.c	FUNCTION_273	IF_2	CALL_7
0x4009c86	    0xf68577060000	              test byte [rbp + 0x677], 2	      9286	intel_display.c	FUNCTION_273	IF_2	CALL_7
0x4009c8d	     0xf8508050000	                           jne 0x400a19b	      9286	intel_display.c	FUNCTION_273	IF_2	CALL_7
0x4009c93	          0x4531ed	                          xor r13d, r13d	      9286	intel_display.c	FUNCTION_273	IF_2	CALL_7
0x4009c96	            0x31db	                            xor ebx, ebx	      9286	intel_display.c	FUNCTION_273	IF_2	CALL_7
0x4009c98	            0xeb08	                           jmp 0x4009ca2	      9286	intel_display.c	FUNCTION_273	IF_2	CALL_7
0x4009c9a	          0x83c301	                              add ebx, 1	      9353	intel_display.c	FUNCTION_273	CALL_36
0x4009c9d	          0x83fb28	                           cmp ebx, 0x28	      9353	intel_display.c	FUNCTION_273	CALL_36
0x4009ca0	            0x7418	                            je 0x4009cba	      9353	intel_display.c	FUNCTION_273	CALL_36
0x4009ca2	        0x490fa3dc	                             bt r12, rbx	      9353	intel_display.c	FUNCTION_273	CALL_36
0x4009ca6	            0x73f2	                           jae 0x4009c9a	      9353	intel_display.c	FUNCTION_273	CALL_36
0x4009ca8	            0x89de	                            mov esi, ebx	      9354	intel_display.c	FUNCTION_273	CALL_37
0x4009caa	          0x4889ef	                            mov rdi, rbp	      9354	intel_display.c	FUNCTION_273	CALL_37
0x4009cad	          0x83c301	                              add ebx, 1	      9353	intel_display.c	FUNCTION_273	CALL_36
0x4009cb0	      0xe800000000	                          call 0x4009cb5	      9354	intel_display.c	FUNCTION_273	CALL_37
0x4009cb5	          0x83fb28	                           cmp ebx, 0x28	      9353	intel_display.c	FUNCTION_273	CALL_36
0x4009cb8	            0x75e8	                           jne 0x4009ca2	      9353	intel_display.c	FUNCTION_273	CALL_36
0x4009cba	        0x4883c410	                           add rsp, 0x10	      9357	intel_display.c	FUNCTION_273
0x4009cbe	          0x4489e8	                           mov eax, r13d	      9357	intel_display.c	FUNCTION_273
0x4009cc1	              0x5b	                                 pop rbx	      9357	intel_display.c	FUNCTION_273
0x4009cc2	              0x5d	                                 pop rbp	      9357	intel_display.c	FUNCTION_273
0x4009cc3	            0x415c	                                 pop r12	      9357	intel_display.c	FUNCTION_273
0x4009cc5	            0x415d	                                 pop r13	      9357	intel_display.c	FUNCTION_273
0x4009cc7	            0x415e	                                 pop r14	      9357	intel_display.c	FUNCTION_273
0x4009cc9	            0x415f	                                 pop r15	      9357	intel_display.c	FUNCTION_273
0x4009ccb	              0xc3	                                     ret	      9357	intel_display.c	FUNCTION_273
0x4009ccc	    0xc78650030000	              mov dword [rsi + 0x350], 0	     13491	intel_display.c	FUNCTION_374	FOR_1
0x4009cd6	    0xc78654030000	              mov dword [rsi + 0x354], 0	     13492	intel_display.c	FUNCTION_374	FOR_1
0x4009ce0	    0x83bf68050000	              cmp dword [rdi + 0x568], 1	     13488	intel_display.c	FUNCTION_374	FOR_1
0x4009ce7	            0x7e14	                           jle 0x4009cfd	     13488	intel_display.c	FUNCTION_374	FOR_1
0x4009ce9	    0xc78658030000	              mov dword [rsi + 0x358], 0	     13491	intel_display.c	FUNCTION_374	FOR_1
0x4009cf3	    0xc7865c030000	              mov dword [rsi + 0x35c], 0	     13492	intel_display.c	FUNCTION_374	FOR_1
0x4009cfd	    0xc78364030000	    mov dword [rbx + 0x364], 0xffffffff 	     13495	intel_display.c	FUNCTION_374
0x4009d07	    0x458bafb00400	          mov r13d, dword [r15 + 0x4b0] 	     13495	intel_display.c	FUNCTION_374
0x4009d0e	      0xe9c4feffff	                           jmp 0x4009bd7	     13495	intel_display.c	FUNCTION_374
0x4009d13	          0x4489f1	                           mov ecx, r14d	      9168	intel_display.c	FUNCTION_270	CALL_7
0x4009d16	      0xb801000000	                              mov eax, 1	      9168	intel_display.c	FUNCTION_270	CALL_7
0x4009d1b	    0x418b956c0600	           mov edx, dword [r13 + 0x66c] 	      9170	intel_display.c	FUNCTION_270	CALL_9
0x4009d22	          0x48d3e0	                             shl rax, cl	      9168	intel_display.c	FUNCTION_270	CALL_7
0x4009d25	          0x4c89ef	                            mov rdi, r13	      9170	intel_display.c	FUNCTION_270	CALL_9
0x4009d28	    0x498b8df80700	           mov rcx, qword [r13 + 0x7f8] 	      9170	intel_display.c	FUNCTION_270	CALL_9
0x4009d2f	          0x4909c4	                             or r12, rax	      9168	intel_display.c	FUNCTION_270	CALL_7
0x4009d32	    0x8b833c020000	           mov eax, dword [rbx + 0x23c] 	      9170	intel_display.c	FUNCTION_270	CALL_9
0x4009d38	    0x418b84858006	   mov eax, dword [r13 + rax*4 + 0x680] 	      9170	intel_display.c	FUNCTION_270	CALL_9
0x4009d40	    0x412b85800600	            sub eax, dword [r13 + 0x680]	      9170	intel_display.c	FUNCTION_270	CALL_9
0x4009d47	    0x8db410080007	          lea esi, [rax + rdx + 0x70008]	      9170	intel_display.c	FUNCTION_270	CALL_9
0x4009d4e	      0xba01000000	                              mov edx, 1	      9170	intel_display.c	FUNCTION_270	CALL_9
0x4009d53	      0xe800000000	                          call 0x4009d58	      9170	intel_display.c	FUNCTION_270	CALL_9
0x4009d58	          0xc1e81f	                           shr eax, 0x1f	      9172	intel_display.c	FUNCTION_270
0x4009d5b	    0xf6855b060000	              test byte [rbp + 0x65b], 1	      9286	intel_display.c	FUNCTION_273	IF_2	CALL_7
0x4009d62	          0x4189c5	                           mov r13d, eax	      9172	intel_display.c	FUNCTION_270
0x4009d65	            0x740d	                            je 0x4009d74	      9286	intel_display.c	FUNCTION_273	IF_2	CALL_7
0x4009d67	    0xf68577060000	              test byte [rbp + 0x677], 2	      9286	intel_display.c	FUNCTION_273	IF_2	CALL_7
0x4009d6e	     0xf852a040000	                           jne 0x400a19e	      9286	intel_display.c	FUNCTION_273	IF_2	CALL_7
0x4009d74	          0x4584ed	                         test r13b, r13b	      9292	intel_display.c	FUNCTION_273	IF_3
0x4009d77	     0xf8419ffffff	                            je 0x4009c96	      9292	intel_display.c	FUNCTION_273	IF_3
0x4009d7d	    0x8b833c020000	           mov eax, dword [rbx + 0x23c] 	      9292	intel_display.c	FUNCTION_273	IF_3
0x4009d83	          0x8d50fc	                      lea edx, [rax - 4]	      9292	intel_display.c	FUNCTION_273	IF_3
0x4009d86	          0x83fa01	                              cmp edx, 1	      9295	intel_display.c	FUNCTION_273	IF_4	CALL_10
0x4009d89	     0xf860a010000	                           jbe 0x4009e99	      9295	intel_display.c	FUNCTION_273	IF_4	CALL_10
0x4009d8f	          0x4d8b2f	                    mov r13, qword [r15]	      9226	intel_display.c	FUNCTION_272	CALL_1
0x4009d92	    0x418b84859806	   mov eax, dword [r13 + rax*4 + 0x698] 	      9231	intel_display.c	FUNCTION_272	CALL_3
0x4009d9a	    0x412b85980600	            sub eax, dword [r13 + 0x698]	      9231	intel_display.c	FUNCTION_272	CALL_3
0x4009da1	          0x4c89ef	                            mov rdi, r13	      9231	intel_display.c	FUNCTION_272	CALL_3
0x4009da4	    0x418b956c0600	           mov edx, dword [r13 + 0x66c] 	      9231	intel_display.c	FUNCTION_272	CALL_3
0x4009dab	    0x498b8df80700	           mov rcx, qword [r13 + 0x7f8] 	      9231	intel_display.c	FUNCTION_272	CALL_3
0x4009db2	    0x8db410000406	          lea esi, [rax + rdx + 0x60400]	      9231	intel_display.c	FUNCTION_272	CALL_3
0x4009db9	      0xba01000000	                              mov edx, 1	      9231	intel_display.c	FUNCTION_272	CALL_3
0x4009dbe	      0xe800000000	                          call 0x4009dc3	      9231	intel_display.c	FUNCTION_272	CALL_3
0x4009dc3	      0x2500000070	                     and eax, 0x70000000	      9233	intel_display.c	FUNCTION_272
0x4009dc8	          0x4189c6	                           mov r14d, eax	      9233	intel_display.c	FUNCTION_272
0x4009dcb	        0x41c1ee1c	                          shr r14d, 0x1c	      9233	intel_display.c	FUNCTION_272
0x4009dcf	    0x41f685670600	              test byte [r13 + 0x667], 8	      9235	intel_display.c	FUNCTION_272	IF_1	CALL_4
0x4009dd7	     0xf8588050000	                           jne 0x400a365	      9235	intel_display.c	FUNCTION_272	IF_1	CALL_4
0x4009ddd	    0x41f6855b0600	              test byte [r13 + 0x65b], 1	      9237	intel_display.c	FUNCTION_272	ELSE_1	IF_2	CALL_6
0x4009de5	     0xf855c040000	                           jne 0x400a247	      9237	intel_display.c	FUNCTION_272	ELSE_1	IF_2	CALL_6
0x4009deb	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      9093	intel_display.c	FUNCTION_269	CALL_2
0x4009df2	    0x428d34b50061	              lea esi, [r14*4 + 0x46100]	      9093	intel_display.c	FUNCTION_269	CALL_2
0x4009dfa	      0xba01000000	                              mov edx, 1	      9093	intel_display.c	FUNCTION_269	CALL_2
0x4009dff	          0x4c89ef	                            mov rdi, r13	      9093	intel_display.c	FUNCTION_269	CALL_2
0x4009e02	      0xe800000000	                          call 0x4009e07	      9093	intel_display.c	FUNCTION_269	CALL_2
0x4009e07	      0x3d00000060	                     cmp eax, 0x60000000	      9095	intel_display.c	FUNCTION_269	SWITCH_1
0x4009e0c	     0xf8400060000	                            je 0x400a412	      9095	intel_display.c	FUNCTION_269	SWITCH_1
0x4009e12	     0xf87d2050000	                            ja 0x400a3ea	      9095	intel_display.c	FUNCTION_269	SWITCH_1
0x4009e18	      0x3d00000020	                     cmp eax, 0x20000000	      9095	intel_display.c	FUNCTION_269	SWITCH_1
0x4009e1d	     0xf84e2060000	                            je 0x400a505	      9095	intel_display.c	FUNCTION_269	SWITCH_1
0x4009e23	      0x3d00000040	                     cmp eax, 0x40000000	      9095	intel_display.c	FUNCTION_269	SWITCH_1
0x4009e28	     0xf84eb060000	                            je 0x400a519	      9095	intel_display.c	FUNCTION_269	SWITCH_1
0x4009e2e	            0x85c0	                           test eax, eax	      9095	intel_display.c	FUNCTION_269	SWITCH_1
0x4009e30	     0xf84d9060000	                            je 0x400a50f	      9095	intel_display.c	FUNCTION_269	SWITCH_1
0x4009e36	            0x89c6	                            mov esi, eax	      9115	intel_display.c	FUNCTION_269	SWITCH_1	CALL_3
0x4009e38	    0x48c7c2000000	                              mov rdx, 0	      9115	intel_display.c	FUNCTION_269	SWITCH_1	CALL_3
0x4009e3f	    0x48c7c7000000	                              mov rdi, 0	      9115	intel_display.c	FUNCTION_269	SWITCH_1	CALL_3
0x4009e46	      0xe800000000	                          call 0x4009e4b	      9115	intel_display.c	FUNCTION_269	SWITCH_1	CALL_3
0x4009e4b	             0xf0b	                                     ud2	      9115	intel_display.c	FUNCTION_269	SWITCH_1	CALL_3
0x4009e4d	    0x488b83780200	           mov rax, qword [rbx + 0x278] 	      9115	intel_display.c	FUNCTION_269	SWITCH_1	CALL_3
0x4009e54	          0x4885c0	                           test rax, rax	      9245	intel_display.c	FUNCTION_272	IF_4
0x4009e57	            0x7421	                            je 0x4009e7a	      9245	intel_display.c	FUNCTION_272	IF_4
0x4009e59	    0x488d93800200	                  lea rdx, [rbx + 0x280]	      9246	intel_display.c	FUNCTION_272	IF_4	CALL_12
0x4009e60	    0x488b88880000	            mov rcx, qword [rax + 0x88] 	      9246	intel_display.c	FUNCTION_272	IF_4	CALL_12
0x4009e67	          0x4889c6	                            mov rsi, rax	      9246	intel_display.c	FUNCTION_272	IF_4	CALL_12
0x4009e6a	          0x4c89ef	                            mov rdi, r13	      9246	intel_display.c	FUNCTION_272	IF_4	CALL_12
0x4009e6d	      0xe800000000	                          call 0x4009e72	      9246	intel_display.c	FUNCTION_272	IF_4	CALL_12
0x4009e72	            0x84c0	                             test al, al	      9246	intel_display.c	FUNCTION_272	IF_4	CALL_12
0x4009e74	     0xf8471060000	                            je 0x400a4eb	      9246	intel_display.c	FUNCTION_272	IF_4	CALL_12
0x4009e7a	    0x4180bd5c0600	               cmp byte [r13 + 0x65c], 8	      9255	intel_display.c	FUNCTION_272	IF_5	CALL_13
0x4009e82	            0x770a	                            ja 0x4009e8e	      9255	intel_display.c	FUNCTION_272	IF_5	CALL_13
0x4009e84	        0x4183fe04	                             cmp r14d, 4	      9255	intel_display.c	FUNCTION_272	IF_5	CALL_13
0x4009e88	     0xf848b050000	                            je 0x400a419	      9255	intel_display.c	FUNCTION_272	IF_5	CALL_13
0x4009e8e	          0x498b3f	                    mov rdi, qword [r15]	      9297	intel_display.c	FUNCTION_273	IF_4	CALL_12
0x4009e91	          0x4889de	                            mov rsi, rbx	      9297	intel_display.c	FUNCTION_273	IF_4	CALL_12
0x4009e94	      0xe847b9ffff	 call sym.intel_get_pipe_timings.isra.65	      9297	intel_display.c	FUNCTION_273	IF_4	CALL_12
0x4009e99	    0x418bb7b00400	           mov esi, dword [r15 + 0x4b0] 	      9300	intel_display.c	FUNCTION_273	CALL_13
0x4009ea0	          0x498b3f	                    mov rdi, qword [r15]	      9300	intel_display.c	FUNCTION_273	CALL_13
0x4009ea3	          0x4889da	                            mov rdx, rbx	      9300	intel_display.c	FUNCTION_273	CALL_13
0x4009ea6	      0xe845bbffff	call sym.intel_get_pipe_src_size.isra.66	      9300	intel_display.c	FUNCTION_273	CALL_13
0x4009eab	    0x418bb7b00400	           mov esi, dword [r15 + 0x4b0] 	      9303	intel_display.c	FUNCTION_273	CALL_15
0x4009eb2	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	      9303	intel_display.c	FUNCTION_273	CALL_15
0x4009eb9	      0xba01000000	                              mov edx, 1	      9303	intel_display.c	FUNCTION_273	CALL_15
0x4009ebe	          0x4889ef	                            mov rdi, rbp	      9303	intel_display.c	FUNCTION_273	CALL_15
0x4009ec1	          0xc1e60b	                            shl esi, 0xb	      9303	intel_display.c	FUNCTION_273	CALL_15
0x4009ec4	    0x81c680a40400	                        add esi, 0x4a480	      9303	intel_display.c	FUNCTION_273	CALL_15
0x4009eca	      0xe800000000	                          call 0x4009ecf	      9303	intel_display.c	FUNCTION_273	CALL_15
0x4009ecf	          0x83e003	                              and eax, 3	      9302	intel_display.c	FUNCTION_273
0x4009ed2	    0x89838c040000	            mov dword [rbx + 0x48c], eax	      9302	intel_display.c	FUNCTION_273
0x4009ed8	    0xf68566060000	          test byte [rbp + 0x666], 0x10 	      9305	intel_display.c	FUNCTION_273	IF_5	CALL_17
0x4009edf	            0x750d	                           jne 0x4009eee	      9305	intel_display.c	FUNCTION_273	IF_5	CALL_17
0x4009ee1	    0x80bd5c060000	               cmp byte [rbp + 0x65c], 8	      9305	intel_display.c	FUNCTION_273	IF_5	CALL_17
0x4009ee8	     0xf8689000000	                           jbe 0x4009f77	      9305	intel_display.c	FUNCTION_273	IF_5	CALL_17
0x4009eee	    0x496387b00400	        movsxd rax, dword [r15 + 0x4b0] 	      9306	intel_display.c	FUNCTION_273	IF_5	CALL_19
0x4009ef5	    0x8b956c060000	           mov edx, dword [rbp + 0x66c] 	      9306	intel_display.c	FUNCTION_273	IF_5	CALL_19
0x4009efb	          0x4889ef	                            mov rdi, rbp	      9306	intel_display.c	FUNCTION_273	IF_5	CALL_19
0x4009efe	    0x488b8df80700	           mov rcx, qword [rbp + 0x7f8] 	      9306	intel_display.c	FUNCTION_273	IF_5	CALL_19
0x4009f05	    0x8b8485800600	   mov eax, dword [rbp + rax*4 + 0x680] 	      9306	intel_display.c	FUNCTION_273	IF_5	CALL_19
0x4009f0c	    0x2b8580060000	            sub eax, dword [rbp + 0x680]	      9306	intel_display.c	FUNCTION_273	IF_5	CALL_19
0x4009f12	    0x8db410300007	          lea esi, [rax + rdx + 0x70030]	      9306	intel_display.c	FUNCTION_273	IF_5	CALL_19
0x4009f19	      0xba01000000	                              mov edx, 1	      9306	intel_display.c	FUNCTION_273	IF_5	CALL_19
0x4009f1e	      0xe800000000	                          call 0x4009f23	      9306	intel_display.c	FUNCTION_273	IF_5	CALL_19
0x4009f23	            0x89c2	                            mov edx, eax	      9307	intel_display.c	FUNCTION_273	IF_5
0x4009f25	    0x81e200080000	                          and edx, 0x800	      9307	intel_display.c	FUNCTION_273	IF_5
0x4009f2b	        0x400f95c6	                               setne sil	      9307	intel_display.c	FUNCTION_273	IF_5
0x4009f2f	    0xf68567060000	              test byte [rbp + 0x667], 2	      9309	intel_display.c	FUNCTION_273	IF_5	IF_6	CALL_21
0x4009f36	            0x750d	                           jne 0x4009f45	      9309	intel_display.c	FUNCTION_273	IF_5	IF_6	CALL_21
0x4009f38	    0x80bd5c060000	               cmp byte [rbp + 0x65c], 9	      9309	intel_display.c	FUNCTION_273	IF_5	IF_6	CALL_21
0x4009f3f	     0xf8642030000	                           jbe 0x400a287	      9309	intel_display.c	FUNCTION_273	IF_5	IF_6	CALL_21
0x4009f45	            0x89c2	                            mov edx, eax	      9313	intel_display.c	FUNCTION_273	IF_5	IF_6
0x4009f47	            0x89c1	                            mov ecx, eax	      9314	intel_display.c	FUNCTION_273	IF_5	IF_6	IF_7
0x4009f49	          0xc1ea1b	                           shr edx, 0x1b	      9313	intel_display.c	FUNCTION_273	IF_5	IF_6
0x4009f4c	          0xc1e91a	                           shr ecx, 0x1a	      9314	intel_display.c	FUNCTION_273	IF_5	IF_6	IF_7
0x4009f4f	          0x83e201	                              and edx, 1	      9313	intel_display.c	FUNCTION_273	IF_5	IF_6
0x4009f52	          0x83e101	                              and ecx, 1	      9314	intel_display.c	FUNCTION_273	IF_5	IF_6	IF_7
0x4009f55	            0x38d1	                              cmp cl, dl	      9314	intel_display.c	FUNCTION_273	IF_5	IF_6	IF_7
0x4009f57	    0x889393040000	              mov byte [rbx + 0x493], dl	      9313	intel_display.c	FUNCTION_273	IF_5	IF_6
0x4009f5d	            0x7505	                           jne 0x4009f64	      9314	intel_display.c	FUNCTION_273	IF_5	IF_6	IF_7
0x4009f5f	          0x4038d6	                             cmp sil, dl	      9314	intel_display.c	FUNCTION_273	IF_5	IF_6	IF_7
0x4009f62	            0x7413	                            je 0x4009f77	      9314	intel_display.c	FUNCTION_273	IF_5	IF_6	IF_7
0x4009f64	            0x89c2	                            mov edx, eax	      9316	intel_display.c	FUNCTION_273	IF_5	IF_6	CALL_22
0x4009f66	    0x48c7c6000000	                              mov rsi, 0	      9316	intel_display.c	FUNCTION_273	IF_5	IF_6	CALL_22
0x4009f6d	      0xbf04000000	                              mov edi, 4	      9316	intel_display.c	FUNCTION_273	IF_5	IF_6	CALL_22
0x4009f72	      0xe800000000	                          call 0x4009f77	      9316	intel_display.c	FUNCTION_273	IF_5	IF_6	CALL_22
0x4009f77	    0x418b87b00400	           mov eax, dword [r15 + 0x4b0] 	      9322	intel_display.c	FUNCTION_273	CALL_24
0x4009f7e	          0x4889ef	                            mov rdi, rbp	      9323	intel_display.c	FUNCTION_273	IF_9	CALL_25
0x4009f81	        0x448d6803	                     lea r13d, [rax + 3]	      9322	intel_display.c	FUNCTION_273	CALL_24
0x4009f85	          0x4489ee	                           mov esi, r13d	      9323	intel_display.c	FUNCTION_273	IF_9	CALL_25
0x4009f88	      0xe800000000	                          call 0x4009f8d	      9323	intel_display.c	FUNCTION_273	IF_9	CALL_25
0x4009f8d	            0x84c0	                             test al, al	      9323	intel_display.c	FUNCTION_273	IF_9	CALL_25
0x4009f8f	     0xf84fb000000	                            je 0x400a090	      9323	intel_display.c	FUNCTION_273	IF_9	CALL_25
0x4009f95	      0xb801000000	                              mov eax, 1	      9324	intel_display.c	FUNCTION_273	IF_9	CALL_26
0x4009f9a	          0x4489e9	                           mov ecx, r13d	      9324	intel_display.c	FUNCTION_273	IF_9	CALL_26
0x4009f9d	          0x48d3e0	                             shl rax, cl	      9324	intel_display.c	FUNCTION_273	IF_9	CALL_26
0x4009fa0	          0x4909c4	                             or r12, rax	      9324	intel_display.c	FUNCTION_273	IF_9	CALL_26
0x4009fa3	    0x80bd5c060000	               cmp byte [rbp + 0x65c], 8	      9325	intel_display.c	FUNCTION_273	IF_9	IF_10	CALL_27
0x4009faa	     0xf8680020000	                           jbe 0x400a230	      9325	intel_display.c	FUNCTION_273	IF_9	IF_10	CALL_27
0x4009fb0	    0x418b97680500	           mov edx, dword [r15 + 0x568] 	      8554	intel_display.c	FUNCTION_254	FOR_1
0x4009fb7	          0x4d8b37	                    mov r14, qword [r15]	      8546	intel_display.c	FUNCTION_254
0x4009fba	            0x85d2	                           test edx, edx	      8554	intel_display.c	FUNCTION_254	FOR_1
0x4009fbc	     0xf8e8a030000	                           jle 0x400a34c	      8554	intel_display.c	FUNCTION_254	FOR_1
0x4009fc2	          0x4531ed	                          xor r13d, r13d	      8554	intel_display.c	FUNCTION_254	FOR_1
0x4009fc5	            0xeb11	                           jmp 0x4009fd8	      8554	intel_display.c	FUNCTION_254	FOR_1
0x4009fc7	        0x4183c501	                             add r13d, 1	      8554	intel_display.c	FUNCTION_254	FOR_1
0x4009fcb	    0x453baf680500	          cmp r13d, dword [r15 + 0x568] 	      8554	intel_display.c	FUNCTION_254	FOR_1
0x4009fd2	     0xf8d74030000	                           jge 0x400a34c	      8554	intel_display.c	FUNCTION_254	FOR_1
0x4009fd8	          0x4489e8	                           mov eax, r13d	      8554	intel_display.c	FUNCTION_254	FOR_1
0x4009fdb	    0x498b8ef80700	           mov rcx, qword [r14 + 0x7f8] 	      8555	intel_display.c	FUNCTION_254	FOR_1	CALL_3
0x4009fe2	      0xba01000000	                              mov edx, 1	      8555	intel_display.c	FUNCTION_254	FOR_1	CALL_3
0x4009fe7	          0xc1e008	                              shl eax, 8	      8555	intel_display.c	FUNCTION_254	FOR_1	CALL_3
0x4009fea	            0x89c7	                            mov edi, eax	      8555	intel_display.c	FUNCTION_254	FOR_1	CALL_3
0x4009fec	          0x890424	                    mov dword [rsp], eax	      8555	intel_display.c	FUNCTION_254	FOR_1	CALL_3
0x4009fef	    0x418b87b00400	           mov eax, dword [r15 + 0x4b0] 	      8555	intel_display.c	FUNCTION_254	FOR_1	CALL_3
0x4009ff6	          0xc1e00b	                            shl eax, 0xb	      8555	intel_display.c	FUNCTION_254	FOR_1	CALL_3
0x4009ff9	    0x8db407808106	          lea esi, [rdi + rax + 0x68180]	      8555	intel_display.c	FUNCTION_254	FOR_1	CALL_3
0x400a000	          0x4c89f7	                            mov rdi, r14	      8555	intel_display.c	FUNCTION_254	FOR_1	CALL_3
0x400a003	      0xe800000000	                          call 0x400a008	      8555	intel_display.c	FUNCTION_254	FOR_1	CALL_3
0x400a008	            0x85c0	                           test eax, eax	      8556	intel_display.c	FUNCTION_254	FOR_1	IF_1
0x400a00a	            0x79bb	                           jns 0x4009fc7	      8556	intel_display.c	FUNCTION_254	FOR_1	IF_1
0x400a00c	      0xa90000000e	                     test eax, 0xe000000	      8556	intel_display.c	FUNCTION_254	FOR_1	IF_1
0x400a011	            0x75b4	                           jne 0x4009fc7	      8556	intel_display.c	FUNCTION_254	FOR_1	IF_1
0x400a013	    0xc6832c030000	               mov byte [rbx + 0x32c], 1	      8558	intel_display.c	FUNCTION_254	FOR_1	IF_1
0x400a01a	    0x418b87b00400	           mov eax, dword [r15 + 0x4b0] 	      8559	intel_display.c	FUNCTION_254	FOR_1	IF_1	CALL_5
0x400a021	          0x4c89f7	                            mov rdi, r14	      8559	intel_display.c	FUNCTION_254	FOR_1	IF_1	CALL_5
0x400a024	          0x8b1424	                    mov edx, dword [rsp]	      8559	intel_display.c	FUNCTION_254	FOR_1	IF_1	CALL_5
0x400a027	    0x498b8ef80700	           mov rcx, qword [r14 + 0x7f8] 	      8559	intel_display.c	FUNCTION_254	FOR_1	IF_1	CALL_5
0x400a02e	          0xc1e00b	                            shl eax, 0xb	      8559	intel_display.c	FUNCTION_254	FOR_1	IF_1	CALL_5
0x400a031	    0x8db402708106	          lea esi, [rdx + rax + 0x68170]	      8559	intel_display.c	FUNCTION_254	FOR_1	IF_1	CALL_5
0x400a038	      0xba01000000	                              mov edx, 1	      8559	intel_display.c	FUNCTION_254	FOR_1	IF_1	CALL_5
0x400a03d	      0xe800000000	                          call 0x400a042	      8559	intel_display.c	FUNCTION_254	FOR_1	IF_1	CALL_5
0x400a042	    0x898324030000	            mov dword [rbx + 0x324], eax	      8559	intel_display.c	FUNCTION_254	FOR_1	IF_1	CALL_5
0x400a048	    0x418b87b00400	           mov eax, dword [r15 + 0x4b0] 	      8560	intel_display.c	FUNCTION_254	FOR_1	IF_1	CALL_7
0x400a04f	          0x4c89f7	                            mov rdi, r14	      8560	intel_display.c	FUNCTION_254	FOR_1	IF_1	CALL_7
0x400a052	          0x8b1424	                    mov edx, dword [rsp]	      8560	intel_display.c	FUNCTION_254	FOR_1	IF_1	CALL_7
0x400a055	    0x498b8ef80700	           mov rcx, qword [r14 + 0x7f8] 	      8560	intel_display.c	FUNCTION_254	FOR_1	IF_1	CALL_7
0x400a05c	          0xc1e00b	                            shl eax, 0xb	      8560	intel_display.c	FUNCTION_254	FOR_1	IF_1	CALL_7
0x400a05f	    0x8db402748106	          lea esi, [rdx + rax + 0x68174]	      8560	intel_display.c	FUNCTION_254	FOR_1	IF_1	CALL_7
0x400a066	      0xba01000000	                              mov edx, 1	      8560	intel_display.c	FUNCTION_254	FOR_1	IF_1	CALL_7
0x400a06b	      0xe800000000	                          call 0x400a070	      8560	intel_display.c	FUNCTION_254	FOR_1	IF_1	CALL_7
0x400a070	          0x4585ed	                         test r13d, r13d	      8566	intel_display.c	FUNCTION_254	IF_2
0x400a073	    0x898328030000	            mov dword [rbx + 0x328], eax	      8560	intel_display.c	FUNCTION_254	FOR_1	IF_1	CALL_7
0x400a079	    0x4489ab640300	           mov dword [rbx + 0x364], r13d	      8565	intel_display.c	FUNCTION_254
0x400a080	     0xf88d0020000	                            js 0x400a356	      8566	intel_display.c	FUNCTION_254	IF_2
0x400a086	    0x818b60030000	      or dword [rbx + 0x360], 0x80000000	      8567	intel_display.c	FUNCTION_254	IF_2
0x400a090	          0x498b17	                    mov rdx, qword [r15]	      8567	intel_display.c	FUNCTION_254	IF_2
0x400a093	    0x8b8264060000	           mov eax, dword [rdx + 0x664] 	      5451	intel_display.c	FUNCTION_165	CALL_2
0x400a099	      0xa900000800	                       test eax, 0x80000	      5451	intel_display.c	FUNCTION_165	CALL_2
0x400a09e	            0x7410	                            je 0x400a0b0	      5451	intel_display.c	FUNCTION_165	CALL_2
0x400a0a0	     0xfb792580600	          movzx edx, word [rdx + 0x658] 	      5451	intel_display.c	FUNCTION_165	CALL_2
0x400a0a7	            0x30d2	                              xor dl, dl	      5451	intel_display.c	FUNCTION_165	CALL_2
0x400a0a9	      0x6681fa000a	                           cmp dx, 0xa00	      5451	intel_display.c	FUNCTION_165	CALL_2
0x400a0ae	            0x7407	                            je 0x400a0b7	      5451	intel_display.c	FUNCTION_165	CALL_2
0x400a0b0	      0xa900001000	                      test eax, 0x100000	      5451	intel_display.c	FUNCTION_165	CALL_2
0x400a0b5	            0x741f	                            je 0x400a0d6	      5451	intel_display.c	FUNCTION_165	CALL_2
0x400a0b7	    0x418b87b00400	           mov eax, dword [r15 + 0x4b0] 	      5451	intel_display.c	FUNCTION_165	CALL_2
0x400a0be	            0x85c0	                           test eax, eax	      5451	intel_display.c	FUNCTION_165	CALL_2
0x400a0c0	            0x7514	                           jne 0x400a0d6	      5451	intel_display.c	FUNCTION_165	CALL_2
0x400a0c2	    0xf68566060000	              test byte [rbp + 0x666], 8	      9332	intel_display.c	FUNCTION_273	IF_11	IF_12	CALL_31
0x400a0c9	     0xf85e5020000	                           jne 0x400a3b4	      9332	intel_display.c	FUNCTION_273	IF_11	IF_12	CALL_31
0x400a0cf	    0xc68348030000	               mov byte [rbx + 0x348], 1	      9340	intel_display.c	FUNCTION_273	IF_11	ELSE_3
0x400a0d6	    0x8b833c020000	           mov eax, dword [rbx + 0x23c] 	      9344	intel_display.c	FUNCTION_273	IF_13
0x400a0dc	          0x8d50fd	                      lea edx, [rax - 3]	      9344	intel_display.c	FUNCTION_273	IF_13
0x400a0df	          0x83fa02	                              cmp edx, 2	      9344	intel_display.c	FUNCTION_273	IF_13
0x400a0e2	            0x7642	                           jbe 0x400a126	      9344	intel_display.c	FUNCTION_273	IF_13
0x400a0e4	    0x8b8485980600	   mov eax, dword [rbp + rax*4 + 0x698] 	      9347	intel_display.c	FUNCTION_273	IF_13	CALL_35
0x400a0eb	    0x2b8598060000	            sub eax, dword [rbp + 0x698]	      9347	intel_display.c	FUNCTION_273	IF_13	CALL_35
0x400a0f1	          0x4889ef	                            mov rdi, rbp	      9347	intel_display.c	FUNCTION_273	IF_13	CALL_35
0x400a0f4	    0x8b956c060000	           mov edx, dword [rbp + 0x66c] 	      9347	intel_display.c	FUNCTION_273	IF_13	CALL_35
0x400a0fa	    0x488b8df80700	           mov rcx, qword [rbp + 0x7f8] 	      9347	intel_display.c	FUNCTION_273	IF_13	CALL_35
0x400a101	    0x41bd01000000	                             mov r13d, 1	      9346	intel_display.c	FUNCTION_273	IF_13
0x400a107	    0x8db4102c0006	          lea esi, [rax + rdx + 0x6002c]	      9347	intel_display.c	FUNCTION_273	IF_13	CALL_35
0x400a10e	      0xba01000000	                              mov edx, 1	      9347	intel_display.c	FUNCTION_273	IF_13	CALL_35
0x400a113	      0xe800000000	                          call 0x400a118	      9347	intel_display.c	FUNCTION_273	IF_13	CALL_35
0x400a118	          0x83c001	                              add eax, 1	      9346	intel_display.c	FUNCTION_273	IF_13
0x400a11b	    0x898310030000	            mov dword [rbx + 0x310], eax	      9346	intel_display.c	FUNCTION_273	IF_13
0x400a121	      0xe970fbffff	                           jmp 0x4009c96	      9346	intel_display.c	FUNCTION_273	IF_13
0x400a126	    0xc78310030000	              mov dword [rbx + 0x310], 1	      9349	intel_display.c	FUNCTION_273	ELSE_4
0x400a130	    0x41bd01000000	                             mov r13d, 1	      9349	intel_display.c	FUNCTION_273	ELSE_4
0x400a136	      0xe95bfbffff	                           jmp 0x4009c96	      9349	intel_display.c	FUNCTION_273	ELSE_4
0x400a13b	      0x2500700000	                         and eax, 0x7000	      9146	intel_display.c	FUNCTION_270	IF_1	SWITCH_1
0x400a140	      0x3d00400000	                         cmp eax, 0x4000	      9146	intel_display.c	FUNCTION_270	IF_1	SWITCH_1
0x400a145	     0xf8498020000	                            je 0x400a3e3	      9146	intel_display.c	FUNCTION_270	IF_1	SWITCH_1
0x400a14b	     0xf868a020000	                           jbe 0x400a3db	      9146	intel_display.c	FUNCTION_270	IF_1	SWITCH_1
0x400a151	      0x3d00500000	                         cmp eax, 0x5000	      9146	intel_display.c	FUNCTION_270	IF_1	SWITCH_1
0x400a156	      0xba01000000	                              mov edx, 1	      9154	intel_display.c	FUNCTION_270	IF_1	SWITCH_1
0x400a15b	            0x741c	                            je 0x400a179	      9146	intel_display.c	FUNCTION_270	IF_1	SWITCH_1
0x400a15d	      0x3d00600000	                         cmp eax, 0x6000	      9146	intel_display.c	FUNCTION_270	IF_1	SWITCH_1
0x400a162	      0xba02000000	                              mov edx, 2	      9157	intel_display.c	FUNCTION_270	IF_1	SWITCH_1
0x400a167	            0x7410	                            je 0x400a179	      9146	intel_display.c	FUNCTION_270	IF_1	SWITCH_1
0x400a169	    0x48c7c7000000	                              mov rdi, 0	      9148	intel_display.c	FUNCTION_270	IF_1	SWITCH_1	CALL_4
0x400a170	      0xe800000000	                          call 0x400a175	      9148	intel_display.c	FUNCTION_270	IF_1	SWITCH_1	CALL_4
0x400a175	             0xf0b	                                     ud2	      9148	intel_display.c	FUNCTION_270	IF_1	SWITCH_1	CALL_4
0x400a177	            0x31d2	                            xor edx, edx	      9151	intel_display.c	FUNCTION_270	IF_1	SWITCH_1
0x400a179	    0x413997b00400	           cmp dword [r15 + 0x4b0], edx 	      9161	intel_display.c	FUNCTION_270	IF_1	IF_2
0x400a180	     0xf85cefaffff	                           jne 0x4009c54	      9161	intel_display.c	FUNCTION_270	IF_1	IF_2
0x400a186	    0xc7833c020000	              mov dword [rbx + 0x23c], 3	      9162	intel_display.c	FUNCTION_270	IF_1	IF_2
0x400a190	    0x41be09000000	                             mov r14d, 9	      9165	intel_display.c	FUNCTION_270	CALL_5
0x400a196	      0xe9cffaffff	                           jmp 0x4009c6a	      9165	intel_display.c	FUNCTION_270	CALL_5
0x400a19b	          0x4531ed	                          xor r13d, r13d	      9167	intel_display.c	FUNCTION_270	IF_3
0x400a19e	          0x498b07	                    mov rax, qword [r15]	      9167	intel_display.c	FUNCTION_270	IF_3
0x400a1a1	    0x41b901000000	                              mov r9d, 1	      9167	intel_display.c	FUNCTION_270	IF_3
0x400a1a7	          0x4531f6	                          xor r14d, r14d	      9167	intel_display.c	FUNCTION_270	IF_3
0x400a1aa	        0x48890424	                    mov qword [rsp], rax	      9167	intel_display.c	FUNCTION_270	IF_3
0x400a1ae	            0xeb08	                           jmp 0x400a1b8	      9167	intel_display.c	FUNCTION_270	IF_3
0x400a1b0	        0x4183c601	                             add r14d, 1	      9167	intel_display.c	FUNCTION_270	IF_3
0x400a1b4	        0x4183c101	                              add r9d, 1	      9167	intel_display.c	FUNCTION_270	IF_3
0x400a1b8	      0xb805000000	                              mov eax, 5	      9186	intel_display.c	FUNCTION_271	FUNCTION_1
0x400a1bd	        0x4c0fa3f0	                             bt rax, r14	      9186	intel_display.c	FUNCTION_271	FUNCTION_1
0x400a1c1	            0x7329	                           jae 0x400a1ec	      9186	intel_display.c	FUNCTION_271	FUNCTION_1
0x400a1c3	          0x4585f6	                         test r14d, r14d	      9187	intel_display.c	FUNCTION_271	FUNCTION_1	IF_1
0x400a1c6	      0x44894c2408	                mov dword [rsp + 8], r9d	      9187	intel_display.c	FUNCTION_271	FUNCTION_1	IF_1
0x400a1cb	     0xf8473030000	                            je 0x400a544	      9187	intel_display.c	FUNCTION_271	FUNCTION_1	IF_1
0x400a1d1	        0x488b3c24	                    mov rdi, qword [rsp]	      9193	intel_display.c	FUNCTION_271	FUNCTION_1	IF_2	CALL_4
0x400a1d5	      0xbe0b000000	                            mov esi, 0xb	      9193	intel_display.c	FUNCTION_271	FUNCTION_1	IF_2	CALL_4
0x400a1da	      0xe800000000	                          call 0x400a1df	      9193	intel_display.c	FUNCTION_271	FUNCTION_1	IF_2	CALL_4
0x400a1df	            0x84c0	                             test al, al	      9193	intel_display.c	FUNCTION_271	FUNCTION_1	IF_2	CALL_4
0x400a1e1	      0x448b4c2408	                mov r9d, dword [rsp + 8]	      9193	intel_display.c	FUNCTION_271	FUNCTION_1	IF_2	CALL_4
0x400a1e6	     0xf85b9000000	                           jne 0x400a2a5	      9193	intel_display.c	FUNCTION_271	FUNCTION_1	IF_2	CALL_4
0x400a1ec	        0x4183f906	                              cmp r9d, 6	      9186	intel_display.c	FUNCTION_271	FUNCTION_1
0x400a1f0	            0x75be	                           jne 0x400a1b0	      9186	intel_display.c	FUNCTION_271	FUNCTION_1
0x400a1f2	    0x8b833c020000	           mov eax, dword [rbx + 0x23c] 	      9186	intel_display.c	FUNCTION_271	FUNCTION_1
0x400a1f8	          0x83e804	                              sub eax, 4	      9286	intel_display.c	FUNCTION_273	IF_2	CALL_7
0x400a1fb	          0x83f801	                              cmp eax, 1	      9286	intel_display.c	FUNCTION_273	IF_2	CALL_7
0x400a1fe	     0xf8770fbffff	                            ja 0x4009d74	      9286	intel_display.c	FUNCTION_273	IF_2	CALL_7
0x400a204	          0x4584ed	                         test r13b, r13b	      9288	intel_display.c	FUNCTION_273	IF_2	CALL_9
0x400a207	     0xf848cfcffff	                            je 0x4009e99	      9288	intel_display.c	FUNCTION_273	IF_2	CALL_9
0x400a20d	    0x48c7c6000000	                              mov rsi, 0	      9288	intel_display.c	FUNCTION_273	IF_2	CALL_9
0x400a214	    0x48c7c7000000	                              mov rdi, 0	      9288	intel_display.c	FUNCTION_273	IF_2	CALL_9
0x400a21b	      0xe800000000	                          call 0x400a220	      9288	intel_display.c	FUNCTION_273	IF_2	CALL_9
0x400a220	             0xf0b	                                     ud2	      9288	intel_display.c	FUNCTION_273	IF_2	CALL_9
0x400a222	    0x8b833c020000	           mov eax, dword [rbx + 0x23c] 	      9288	intel_display.c	FUNCTION_273	IF_2	CALL_9
0x400a228	          0x8d50fc	                      lea edx, [rax - 4]	      9288	intel_display.c	FUNCTION_273	IF_2	CALL_9
0x400a22b	      0xe956fbffff	                           jmp 0x4009d86	      9288	intel_display.c	FUNCTION_273	IF_2	CALL_9
0x400a230	          0x498b3f	                    mov rdi, qword [r15]	      9328	intel_display.c	FUNCTION_273	IF_9	CALL_29
0x400a233	    0x498db7b00400	                  lea rsi, [r15 + 0x4b0]	      9328	intel_display.c	FUNCTION_273	IF_9	CALL_29
0x400a23a	          0x4889da	                            mov rdx, rbx	      9328	intel_display.c	FUNCTION_273	IF_9	CALL_29
0x400a23d	      0xe82ebaffff	call sym.ironlake_get_pfit_config.isra.70	      9328	intel_display.c	FUNCTION_273	IF_9	CALL_29
0x400a242	      0xe949feffff	                           jmp 0x400a090	      9328	intel_display.c	FUNCTION_273	IF_9	CALL_29
0x400a247	    0x41f685770600	              test byte [r13 + 0x677], 2	      9237	intel_display.c	FUNCTION_272	ELSE_1	IF_2	CALL_6
0x400a24f	     0xf8432020000	                            je 0x400a487	      9237	intel_display.c	FUNCTION_272	ELSE_1	IF_2	CALL_6
0x400a255	        0x4183fe01	                             cmp r14d, 1	      9054	intel_display.c	FUNCTION_267	SWITCH_1
0x400a259	     0xf84ac010000	                            je 0x400a40b	      9054	intel_display.c	FUNCTION_267	SWITCH_1
0x400a25f	     0xf82a2010000	                            jb 0x400a407	      9054	intel_display.c	FUNCTION_267	SWITCH_1
0x400a265	        0x4183fe02	                             cmp r14d, 2	      9054	intel_display.c	FUNCTION_267	SWITCH_1
0x400a269	     0xf84a3010000	                            je 0x400a412	      9054	intel_display.c	FUNCTION_267	SWITCH_1
0x400a26f	    0x48c7c7000000	                              mov rdi, 0	      9065	intel_display.c	FUNCTION_267	SWITCH_1	CALL_1
0x400a276	      0xe800000000	                          call 0x400a27b	      9065	intel_display.c	FUNCTION_267	SWITCH_1	CALL_1
0x400a27b	    0x488b83780200	           mov rax, qword [rbx + 0x278] 	      9065	intel_display.c	FUNCTION_267	SWITCH_1	CALL_1
0x400a282	      0xe9cdfbffff	                           jmp 0x4009e54	      9065	intel_display.c	FUNCTION_267	SWITCH_1	CALL_1
0x400a287	            0x85d2	                           test edx, edx	      9317	intel_display.c	FUNCTION_273	IF_5	ELSE_1	IF_8
0x400a289	     0xf84e8fcffff	                            je 0x4009f77	      9317	intel_display.c	FUNCTION_273	IF_5	ELSE_1	IF_8
0x400a28f	    0x48c7c6000000	                              mov rsi, 0	      9318	intel_display.c	FUNCTION_273	IF_5	ELSE_1	IF_8	CALL_23
0x400a296	      0xbf04000000	                              mov edi, 4	      9318	intel_display.c	FUNCTION_273	IF_5	ELSE_1	IF_8	CALL_23
0x400a29b	      0xe800000000	                          call 0x400a2a0	      9318	intel_display.c	FUNCTION_273	IF_5	ELSE_1	IF_8	CALL_23
0x400a2a0	      0xe9d2fcffff	                           jmp 0x4009f77	      9318	intel_display.c	FUNCTION_273	IF_5	ELSE_1	IF_8	CALL_23
0x400a2a5	        0x488b3c24	                    mov rdi, qword [rsp]	      9204	intel_display.c	FUNCTION_271	FUNCTION_1	IF_3	CALL_6
0x400a2a9	      0x44894c2408	                mov dword [rsp + 8], r9d	      9204	intel_display.c	FUNCTION_271	FUNCTION_1	IF_3	CALL_6
0x400a2ae	    0x4981cc000800	                           or r12, 0x800	      9195	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_5
0x400a2b5	      0xe800000000	                          call 0x400a2ba	      9204	intel_display.c	FUNCTION_271	FUNCTION_1	IF_3	CALL_6
0x400a2ba	            0x84c0	                             test al, al	      9204	intel_display.c	FUNCTION_271	FUNCTION_1	IF_3	CALL_6
0x400a2bc	      0x448b4c2408	                mov r9d, dword [rsp + 8]	      9204	intel_display.c	FUNCTION_271	FUNCTION_1	IF_3	CALL_6
0x400a2c1	     0xf842bffffff	                            je 0x400a1f2	      9204	intel_display.c	FUNCTION_271	FUNCTION_1	IF_3	CALL_6
0x400a2c7	        0x488b3c24	                    mov rdi, qword [rsp]	      9208	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_8
0x400a2cb	      0x44894c2408	                mov dword [rsp + 8], r9d	      9208	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_8
0x400a2d0	      0xba01000000	                              mov edx, 1	      9208	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_8
0x400a2d5	      0xbec0b80600	                        mov esi, 0x6b8c0	      9208	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_8
0x400a2da	    0x488b87f80700	           mov rax, qword [rdi + 0x7f8] 	      9208	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_8
0x400a2e1	      0xe800000000	                          call 0x400a2e6	      9208	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_8
0x400a2e6	            0x85c0	                           test eax, eax	      9209	intel_display.c	FUNCTION_271	FUNCTION_1	IF_4
0x400a2e8	      0x448b4c2408	                mov r9d, dword [rsp + 8]	      9209	intel_display.c	FUNCTION_271	FUNCTION_1	IF_4
0x400a2ed	     0xf89f9feffff	                           jns 0x400a1ec	      9209	intel_display.c	FUNCTION_271	FUNCTION_1	IF_4
0x400a2f3	        0x488b0c24	                    mov rcx, qword [rsp]	      9212	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_10
0x400a2f7	      0x44894c240c	              mov dword [rsp + 0xc], r9d	      9212	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_10
0x400a2fc	    0x8b914c460000	          mov edx, dword [rcx + 0x464c] 	      9212	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_10
0x400a302	    0x488b81f80700	           mov rax, qword [rcx + 0x7f8] 	      9212	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_10
0x400a309	          0x4889cf	                            mov rdi, rcx	      9212	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_10
0x400a30c	        0x89542408	                mov dword [rsp + 8], edx	      9212	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_10
0x400a310	    0x8db204b90000	                 lea esi, [rdx + 0xb904]	      9212	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_10
0x400a316	      0xba01000000	                              mov edx, 1	      9212	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_10
0x400a31b	      0xe800000000	                          call 0x400a320	      9212	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_10
0x400a320	    0x418b97b00400	           mov edx, dword [r15 + 0x4b0] 	      9213	intel_display.c	FUNCTION_271	FUNCTION_1	IF_5	CALL_11
0x400a327	      0x2580030000	                          and eax, 0x380	      9213	intel_display.c	FUNCTION_271	FUNCTION_1	IF_5	CALL_11
0x400a32c	      0x448b4c240c	              mov r9d, dword [rsp + 0xc]	      9213	intel_display.c	FUNCTION_271	FUNCTION_1	IF_5	CALL_11
0x400a331	          0xc1e207	                              shl edx, 7	      9213	intel_display.c	FUNCTION_271	FUNCTION_1	IF_5	CALL_11
0x400a334	            0x39d0	                            cmp eax, edx	      9213	intel_display.c	FUNCTION_271	FUNCTION_1	IF_5	CALL_11
0x400a336	     0xf85b0feffff	                           jne 0x400a1ec	      9213	intel_display.c	FUNCTION_271	FUNCTION_1	IF_5	CALL_11
0x400a33c	      0xb805000000	                              mov eax, 5	      9190	intel_display.c	FUNCTION_271	FUNCTION_1	ELSE_1
0x400a341	    0x89833c020000	            mov dword [rbx + 0x23c], eax	      9216	intel_display.c	FUNCTION_271	FUNCTION_1
0x400a347	      0xe9acfeffff	                           jmp 0x400a1f8	      9216	intel_display.c	FUNCTION_271	FUNCTION_1
0x400a34c	    0xc78364030000	    mov dword [rbx + 0x364], 0xffffffff 	      8565	intel_display.c	FUNCTION_254
0x400a356	    0x81a360030000	     and dword [rbx + 0x360], 0x7fffffff	      8569	intel_display.c	FUNCTION_254	ELSE_1
0x400a360	      0xe92bfdffff	                           jmp 0x400a090	      8569	intel_display.c	FUNCTION_254	ELSE_1
0x400a365	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      9039	intel_display.c	FUNCTION_266	CALL_2
0x400a36c	      0xba01000000	                              mov edx, 1	      9039	intel_display.c	FUNCTION_266	CALL_2
0x400a371	      0xbe00c20600	                        mov esi, 0x6c200	      9039	intel_display.c	FUNCTION_266	CALL_2
0x400a376	          0x4c89ef	                            mov rdi, r13	      9039	intel_display.c	FUNCTION_266	CALL_2
0x400a379	      0xe800000000	                          call 0x400a37e	      9039	intel_display.c	FUNCTION_266	CALL_2
0x400a37e	        0x4183fe05	                             cmp r14d, 5	      9039	intel_display.c	FUNCTION_266	CALL_2
0x400a382	     0xf8452010000	                            je 0x400a4da	      9039	intel_display.c	FUNCTION_266	CALL_2
0x400a388	        0x438d0c36	                    lea ecx, [r14 + r14]	      9039	intel_display.c	FUNCTION_266	CALL_2
0x400a38c	      0xbe03000000	                              mov esi, 3	      9039	intel_display.c	FUNCTION_266	CALL_2
0x400a391	            0xd3e6	                             shl esi, cl	      9039	intel_display.c	FUNCTION_266	CALL_2
0x400a393	            0x21c6	                            and esi, eax	      9039	intel_display.c	FUNCTION_266	CALL_2
0x400a395	            0xd3ee	                             shr esi, cl	      9040	intel_display.c	FUNCTION_266	CALL_3
0x400a397	          0x83fe02	                              cmp esi, 2	      9042	intel_display.c	FUNCTION_266	IF_1	CALL_4
0x400a39a	     0xf8783010000	                            ja 0x400a523	      9042	intel_display.c	FUNCTION_266	IF_1	CALL_4
0x400a3a0	          0x4c89ef	                            mov rdi, r13	      9121	intel_display.c	FUNCTION_269	CALL_4
0x400a3a3	      0xe800000000	                          call 0x400a3a8	      9121	intel_display.c	FUNCTION_269	CALL_4
0x400a3a8	    0x488983780200	            mov qword [rbx + 0x278], rax	      9121	intel_display.c	FUNCTION_269	CALL_4
0x400a3af	      0xe9a0faffff	                           jmp 0x4009e54	      9121	intel_display.c	FUNCTION_269	CALL_4
0x400a3b4	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	      9333	intel_display.c	FUNCTION_273	IF_11	CALL_32
0x400a3bb	      0xba01000000	                              mov edx, 1	      9333	intel_display.c	FUNCTION_273	IF_11	CALL_32
0x400a3c0	      0xbe08340400	                        mov esi, 0x43408	      9333	intel_display.c	FUNCTION_273	IF_11	CALL_32
0x400a3c5	          0x4889ef	                            mov rdi, rbp	      9333	intel_display.c	FUNCTION_273	IF_11	CALL_32
0x400a3c8	      0xe800000000	                          call 0x400a3cd	      9333	intel_display.c	FUNCTION_273	IF_11	CALL_32
0x400a3cd	          0xc1e81f	                           shr eax, 0x1f	      9333	intel_display.c	FUNCTION_273	IF_11	CALL_32
0x400a3d0	    0x888348030000	              mov byte [rbx + 0x348], al	      9333	intel_display.c	FUNCTION_273	IF_11	CALL_32
0x400a3d6	      0xe9fbfcffff	                           jmp 0x400a0d6	      9333	intel_display.c	FUNCTION_273	IF_11	CALL_32
0x400a3db	            0x85c0	                           test eax, eax	      9146	intel_display.c	FUNCTION_270	IF_1	SWITCH_1
0x400a3dd	     0xf8586fdffff	                           jne 0x400a169	      9146	intel_display.c	FUNCTION_270	IF_1	SWITCH_1
0x400a3e3	            0x31d2	                            xor edx, edx	      9151	intel_display.c	FUNCTION_270	IF_1	SWITCH_1
0x400a3e5	      0xe98ffdffff	                           jmp 0x400a179	      9151	intel_display.c	FUNCTION_270	IF_1	SWITCH_1
0x400a3ea	      0x3d000000a0	                     cmp eax, 0xa0000000	      9095	intel_display.c	FUNCTION_269	SWITCH_1
0x400a3ef	            0x741a	                            je 0x400a40b	      9095	intel_display.c	FUNCTION_269	SWITCH_1
0x400a3f1	      0x3d000000e0	                     cmp eax, 0xe0000000	      9095	intel_display.c	FUNCTION_269	SWITCH_1
0x400a3f6	     0xf8451faffff	                            je 0x4009e4d	      9095	intel_display.c	FUNCTION_269	SWITCH_1
0x400a3fc	      0x3d00000080	                     cmp eax, 0x80000000	      9095	intel_display.c	FUNCTION_269	SWITCH_1
0x400a401	     0xf852ffaffff	                           jne 0x4009e36	      9095	intel_display.c	FUNCTION_269	SWITCH_1
0x400a407	            0x31f6	                            xor esi, esi	      9097	intel_display.c	FUNCTION_269	SWITCH_1
0x400a409	            0xeb95	                           jmp 0x400a3a0	      9097	intel_display.c	FUNCTION_269	SWITCH_1
0x400a40b	      0xbe01000000	                              mov esi, 1	      9100	intel_display.c	FUNCTION_269	SWITCH_1
0x400a410	            0xeb8e	                           jmp 0x400a3a0	      9100	intel_display.c	FUNCTION_269	SWITCH_1
0x400a412	      0xbe02000000	                              mov esi, 2	      9103	intel_display.c	FUNCTION_269	SWITCH_1
0x400a417	            0xeb87	                           jmp 0x400a3a0	      9103	intel_display.c	FUNCTION_269	SWITCH_1
0x400a419	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      9256	intel_display.c	FUNCTION_272	IF_5	CALL_14
0x400a420	      0xba01000000	                              mov edx, 1	      9256	intel_display.c	FUNCTION_272	IF_5	CALL_14
0x400a425	      0xbe08000f00	                        mov esi, 0xf0008	      9256	intel_display.c	FUNCTION_272	IF_5	CALL_14
0x400a42a	          0x4c89ef	                            mov rdi, r13	      9256	intel_display.c	FUNCTION_272	IF_5	CALL_14
0x400a42d	      0xe800000000	                          call 0x400a432	      9256	intel_display.c	FUNCTION_272	IF_5	CALL_14
0x400a432	            0x85c0	                           test eax, eax	      9256	intel_display.c	FUNCTION_272	IF_5	CALL_14
0x400a434	     0xf8954faffff	                           jns 0x4009e8e	      9256	intel_display.c	FUNCTION_272	IF_5	CALL_14
0x400a43a	    0xc68338020000	               mov byte [rbx + 0x238], 1	      9257	intel_display.c	FUNCTION_272	IF_5
0x400a441	          0x4c89ef	                            mov rdi, r13	      9259	intel_display.c	FUNCTION_272	IF_5	CALL_16
0x400a444	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      9259	intel_display.c	FUNCTION_272	IF_5	CALL_16
0x400a44b	      0xba01000000	                              mov edx, 1	      9259	intel_display.c	FUNCTION_272	IF_5	CALL_16
0x400a450	      0xbe0c000f00	                        mov esi, 0xf000c	      9259	intel_display.c	FUNCTION_272	IF_5	CALL_16
0x400a455	      0xe800000000	                          call 0x400a45a	      9259	intel_display.c	FUNCTION_272	IF_5	CALL_16
0x400a45a	      0x2500003800	                       and eax, 0x380000	      9260	intel_display.c	FUNCTION_272	IF_5
0x400a45f	    0x8bb33c020000	           mov esi, dword [rbx + 0x23c] 	      8539	intel_display.c	FUNCTION_253	CALL_1
0x400a465	    0x488d93340300	                  lea rdx, [rbx + 0x334]	      8539	intel_display.c	FUNCTION_253	CALL_1
0x400a46c	          0xc1e813	                           shr eax, 0x13	      9260	intel_display.c	FUNCTION_272	IF_5
0x400a46f	            0x31c9	                            xor ecx, ecx	      8539	intel_display.c	FUNCTION_253	CALL_1
0x400a471	          0x4c89ff	                            mov rdi, r15	      8539	intel_display.c	FUNCTION_253	CALL_1
0x400a474	          0x83c001	                              add eax, 1	      9260	intel_display.c	FUNCTION_272	IF_5
0x400a477	    0x898330030000	            mov dword [rbx + 0x330], eax	      9260	intel_display.c	FUNCTION_272	IF_5
0x400a47d	      0xe81e68ffff	   call sym.intel_cpu_transcoder_get_m_n	      8539	intel_display.c	FUNCTION_253	CALL_1
0x400a482	      0xe907faffff	                           jmp 0x4009e8e	      8539	intel_display.c	FUNCTION_253	CALL_1
0x400a487	      0xbe5cc00600	                        mov esi, 0x6c05c	      9079	intel_display.c	FUNCTION_268	CALL_2
0x400a48c	    0x498b85f80700	           mov rax, qword [r13 + 0x7f8] 	      9079	intel_display.c	FUNCTION_268	CALL_2
0x400a493	      0xba01000000	                              mov edx, 1	      9079	intel_display.c	FUNCTION_268	CALL_2
0x400a498	          0x4c89ef	                            mov rdi, r13	      9079	intel_display.c	FUNCTION_268	CALL_2
0x400a49b	      0xe800000000	                          call 0x400a4a0	      9079	intel_display.c	FUNCTION_268	CALL_2
0x400a4a0	      0x438d4c7601	              lea ecx, [r14 + r14*2 + 1]	      9079	intel_display.c	FUNCTION_268	CALL_2
0x400a4a5	      0xbe03000000	                              mov esi, 3	      9080	intel_display.c	FUNCTION_268
0x400a4aa	            0xd3e6	                             shl esi, cl	      9080	intel_display.c	FUNCTION_268
0x400a4ac	            0x21c6	                            and esi, eax	      9080	intel_display.c	FUNCTION_268
0x400a4ae	            0xd3ee	                             shr esi, cl	      9080	intel_display.c	FUNCTION_268
0x400a4b0	          0x83fe03	                              cmp esi, 3	      9082	intel_display.c	FUNCTION_268	IF_1	CALL_3
0x400a4b3	     0xf86e7feffff	                           jbe 0x400a3a0	      9082	intel_display.c	FUNCTION_268	IF_1	CALL_3
0x400a4b9	    0x48c7c6000000	                              mov rsi, 0	      9082	intel_display.c	FUNCTION_268	IF_1	CALL_3
0x400a4c0	    0x48c7c7000000	                              mov rdi, 0	      9082	intel_display.c	FUNCTION_268	IF_1	CALL_3
0x400a4c7	      0xe800000000	                          call 0x400a4cc	      9082	intel_display.c	FUNCTION_268	IF_1	CALL_3
0x400a4cc	             0xf0b	                                     ud2	      9082	intel_display.c	FUNCTION_268	IF_1	CALL_3
0x400a4ce	    0x488b83780200	           mov rax, qword [rbx + 0x278] 	      9082	intel_display.c	FUNCTION_268	IF_1	CALL_3
0x400a4d5	      0xe97af9ffff	                           jmp 0x4009e54	      9082	intel_display.c	FUNCTION_268	IF_1	CALL_3
0x400a4da	      0x2500006000	                       and eax, 0x600000	      9039	intel_display.c	FUNCTION_266	CALL_2
0x400a4df	      0xb915000000	                           mov ecx, 0x15	      9040	intel_display.c	FUNCTION_266	CALL_3
0x400a4e4	            0x89c6	                            mov esi, eax	      9039	intel_display.c	FUNCTION_266	CALL_2
0x400a4e6	      0xe9aafeffff	                           jmp 0x400a395	      9039	intel_display.c	FUNCTION_266	CALL_2
0x400a4eb	    0x48c7c6000000	                              mov rsi, 0	      9246	intel_display.c	FUNCTION_272	IF_4	CALL_12
0x400a4f2	    0x48c7c7000000	                              mov rdi, 0	      9246	intel_display.c	FUNCTION_272	IF_4	CALL_12
0x400a4f9	      0xe800000000	                          call 0x400a4fe	      9246	intel_display.c	FUNCTION_272	IF_4	CALL_12
0x400a4fe	             0xf0b	                                     ud2	      9246	intel_display.c	FUNCTION_272	IF_4	CALL_12
0x400a500	      0xe975f9ffff	                           jmp 0x4009e7a	      9246	intel_display.c	FUNCTION_272	IF_4	CALL_12
0x400a505	      0xbe04000000	                              mov esi, 4	      9109	intel_display.c	FUNCTION_269	SWITCH_1
0x400a50a	      0xe991feffff	                           jmp 0x400a3a0	      9109	intel_display.c	FUNCTION_269	SWITCH_1
0x400a50f	      0xbe05000000	                              mov esi, 5	      9112	intel_display.c	FUNCTION_269	SWITCH_1
0x400a514	      0xe987feffff	                           jmp 0x400a3a0	      9112	intel_display.c	FUNCTION_269	SWITCH_1
0x400a519	      0xbe03000000	                              mov esi, 3	      9106	intel_display.c	FUNCTION_269	SWITCH_1
0x400a51e	      0xe97dfeffff	                           jmp 0x400a3a0	      9106	intel_display.c	FUNCTION_269	SWITCH_1
0x400a523	    0x48c7c6000000	                              mov rsi, 0	      9042	intel_display.c	FUNCTION_266	IF_1	CALL_4
0x400a52a	    0x48c7c7000000	                              mov rdi, 0	      9042	intel_display.c	FUNCTION_266	IF_1	CALL_4
0x400a531	      0xe800000000	                          call 0x400a536	      9042	intel_display.c	FUNCTION_266	IF_1	CALL_4
0x400a536	             0xf0b	                                     ud2	      9042	intel_display.c	FUNCTION_266	IF_1	CALL_4
0x400a538	    0x488b83780200	           mov rax, qword [rbx + 0x278] 	      9042	intel_display.c	FUNCTION_266	IF_1	CALL_4
0x400a53f	      0xe910f9ffff	                           jmp 0x4009e54	      9042	intel_display.c	FUNCTION_266	IF_1	CALL_4
0x400a544	        0x488b3c24	                    mov rdi, qword [rsp]	      9193	intel_display.c	FUNCTION_271	FUNCTION_1	IF_2	CALL_4
0x400a548	      0xbe0a000000	                            mov esi, 0xa	      9193	intel_display.c	FUNCTION_271	FUNCTION_1	IF_2	CALL_4
0x400a54d	      0xe800000000	                          call 0x400a552	      9193	intel_display.c	FUNCTION_271	FUNCTION_1	IF_2	CALL_4
0x400a552	            0x84c0	                             test al, al	      9193	intel_display.c	FUNCTION_271	FUNCTION_1	IF_2	CALL_4
0x400a554	      0x448b4c2408	                mov r9d, dword [rsp + 8]	      9193	intel_display.c	FUNCTION_271	FUNCTION_1	IF_2	CALL_4
0x400a559	     0xf8451fcffff	                            je 0x400a1b0	      9193	intel_display.c	FUNCTION_271	FUNCTION_1	IF_2	CALL_4
0x400a55f	        0x488b3c24	                    mov rdi, qword [rsp]	      9204	intel_display.c	FUNCTION_271	FUNCTION_1	IF_3	CALL_6
0x400a563	      0x44894c2408	                mov dword [rsp + 8], r9d	      9204	intel_display.c	FUNCTION_271	FUNCTION_1	IF_3	CALL_6
0x400a568	    0x4981cc000400	                           or r12, 0x400	      9195	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_5
0x400a56f	      0xe800000000	                          call 0x400a574	      9204	intel_display.c	FUNCTION_271	FUNCTION_1	IF_3	CALL_6
0x400a574	            0x84c0	                             test al, al	      9204	intel_display.c	FUNCTION_271	FUNCTION_1	IF_3	CALL_6
0x400a576	      0x448b4c2408	                mov r9d, dword [rsp + 8]	      9204	intel_display.c	FUNCTION_271	FUNCTION_1	IF_3	CALL_6
0x400a57b	     0xf8471fcffff	                            je 0x400a1f2	      9204	intel_display.c	FUNCTION_271	FUNCTION_1	IF_3	CALL_6
0x400a581	        0x488b3c24	                    mov rdi, qword [rsp]	      9208	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_8
0x400a585	      0x44894c2408	                mov dword [rsp + 8], r9d	      9208	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_8
0x400a58a	      0xba01000000	                              mov edx, 1	      9208	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_8
0x400a58f	      0xbec0b00600	                        mov esi, 0x6b0c0	      9208	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_8
0x400a594	    0x488b87f80700	           mov rax, qword [rdi + 0x7f8] 	      9208	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_8
0x400a59b	      0xe800000000	                          call 0x400a5a0	      9208	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_8
0x400a5a0	            0x85c0	                           test eax, eax	      9209	intel_display.c	FUNCTION_271	FUNCTION_1	IF_4
0x400a5a2	      0x448b4c2408	                mov r9d, dword [rsp + 8]	      9209	intel_display.c	FUNCTION_271	FUNCTION_1	IF_4
0x400a5a7	     0xf8903fcffff	                           jns 0x400a1b0	      9209	intel_display.c	FUNCTION_271	FUNCTION_1	IF_4
0x400a5ad	        0x488b3c24	                    mov rdi, qword [rsp]	      9212	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_10
0x400a5b1	      0x44894c240c	              mov dword [rsp + 0xc], r9d	      9212	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_10
0x400a5b6	      0xba01000000	                              mov edx, 1	      9212	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_10
0x400a5bb	    0x8b8f4c460000	          mov ecx, dword [rdi + 0x464c] 	      9212	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_10
0x400a5c1	    0x488b87f80700	           mov rax, qword [rdi + 0x7f8] 	      9212	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_10
0x400a5c8	        0x894c2408	                mov dword [rsp + 8], ecx	      9212	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_10
0x400a5cc	    0x8db104b10000	                 lea esi, [rcx + 0xb104]	      9212	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_10
0x400a5d2	      0xe800000000	                          call 0x400a5d7	      9212	intel_display.c	FUNCTION_271	FUNCTION_1	CALL_10
0x400a5d7	      0x2580030000	                          and eax, 0x380	      9213	intel_display.c	FUNCTION_271	FUNCTION_1	IF_5	CALL_11
0x400a5dc	      0x448b4c240c	              mov r9d, dword [rsp + 0xc]	      9213	intel_display.c	FUNCTION_271	FUNCTION_1	IF_5	CALL_11
0x400a5e1	            0x89c2	                            mov edx, eax	      9213	intel_display.c	FUNCTION_271	FUNCTION_1	IF_5	CALL_11
0x400a5e3	    0x418b87b00400	           mov eax, dword [r15 + 0x4b0] 	      9213	intel_display.c	FUNCTION_271	FUNCTION_1	IF_5	CALL_11
0x400a5ea	          0xc1e007	                              shl eax, 7	      9213	intel_display.c	FUNCTION_271	FUNCTION_1	IF_5	CALL_11
0x400a5ed	            0x39c2	                            cmp edx, eax	      9213	intel_display.c	FUNCTION_271	FUNCTION_1	IF_5	CALL_11
0x400a5ef	     0xf85bbfbffff	                           jne 0x400a1b0	      9213	intel_display.c	FUNCTION_271	FUNCTION_1	IF_5	CALL_11
0x400a5f5	      0xb804000000	                              mov eax, 4	      9188	intel_display.c	FUNCTION_271	FUNCTION_1	IF_1
0x400a5fa	      0xe942fdffff	                           jmp 0x400a341	      9188	intel_display.c	FUNCTION_271	FUNCTION_1	IF_1
intel_atomic_state_free	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,4	6
0x40048b0	              0x53	                                push rbx	     14200	intel_display.c	FUNCTION_390
0x40048b1	          0x4889fb	                            mov rbx, rdi	     14200	intel_display.c	FUNCTION_390
0x40048b4	      0xe800000000	                          call 0x40048b9	     14203	intel_display.c	FUNCTION_390	CALL_2
0x40048b9	          0x4889df	                            mov rdi, rbx	     14207	intel_display.c	FUNCTION_390	CALL_4
0x40048bc	              0x5b	                                 pop rbx	     14208	intel_display.c	FUNCTION_390
0x40048bd	      0xe900000000	                           jmp 0x40048c2	     14207	intel_display.c	FUNCTION_390	CALL_4
i845_disable_cursor	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,1	3
0x40011d0	            0x31d2	                            xor edx, edx	      9565	intel_display.c	FUNCTION_282	CALL_1
0x40011d2	            0x31f6	                            xor esi, esi	      9565	intel_display.c	FUNCTION_282	CALL_1
0x40011d4	      0xe967feffff	              jmp sym.i845_update_cursor	      9565	intel_display.c	FUNCTION_282	CALL_1
lpt_disable_clkout_dp	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,2:ELSE,0:functions,0:CALL,9	55
0x40031b0	            0x4154	                                push r12	      8075	intel_display.c	FUNCTION_239
0x40031b2	    0x4c8da7404800	                 lea r12, [rdi + 0x4840]	      8078	intel_display.c	FUNCTION_239	CALL_1
0x40031b9	              0x55	                                push rbp	      8075	intel_display.c	FUNCTION_239
0x40031ba	              0x53	                                push rbx	      8075	intel_display.c	FUNCTION_239
0x40031bb	          0x4889fb	                            mov rbx, rdi	      8075	intel_display.c	FUNCTION_239
0x40031be	      0xbd001f0000	                         mov ebp, 0x1f00	      8080	intel_display.c	FUNCTION_239	CALL_2
0x40031c3	          0x4c89e7	                            mov rdi, r12	      8078	intel_display.c	FUNCTION_239	CALL_1
0x40031c6	        0x4883ec08	                              sub rsp, 8	      8075	intel_display.c	FUNCTION_239
0x40031ca	      0xe800000000	                          call 0x40031cf	      8078	intel_display.c	FUNCTION_239	CALL_1
0x40031cf	     0xfb783fc5500	         movzx eax, word [rbx + 0x55fc] 	      8080	intel_display.c	FUNCTION_239	CALL_2
0x40031d6	          0x4889df	                            mov rdi, rbx	      8081	intel_display.c	FUNCTION_239	CALL_3
0x40031d9	            0x247f	                            and al, 0x7f	      8080	intel_display.c	FUNCTION_239	CALL_2
0x40031db	        0x663d009c	                          cmp ax, 0x9c00	      8080	intel_display.c	FUNCTION_239	CALL_2
0x40031df	      0xb8002a0000	                         mov eax, 0x2a00	      8080	intel_display.c	FUNCTION_239	CALL_2
0x40031e4	           0xf45e8	                         cmovne ebp, eax	      8080	intel_display.c	FUNCTION_239	CALL_2
0x40031e7	            0x31d2	                            xor edx, edx	      8081	intel_display.c	FUNCTION_239	CALL_3
0x40031e9	            0x89ee	                            mov esi, ebp	      8081	intel_display.c	FUNCTION_239	CALL_3
0x40031eb	      0xe800000000	                          call 0x40031f0	      8081	intel_display.c	FUNCTION_239	CALL_3
0x40031f0	          0x83e0fe	                     and eax, 0xfffffffe	      8083	intel_display.c	FUNCTION_239	CALL_4
0x40031f3	            0x31c9	                            xor ecx, ecx	      8083	intel_display.c	FUNCTION_239	CALL_4
0x40031f5	            0x89ee	                            mov esi, ebp	      8083	intel_display.c	FUNCTION_239	CALL_4
0x40031f7	            0x89c2	                            mov edx, eax	      8083	intel_display.c	FUNCTION_239	CALL_4
0x40031f9	          0x4889df	                            mov rdi, rbx	      8083	intel_display.c	FUNCTION_239	CALL_4
0x40031fc	      0xe800000000	                          call 0x4003201	      8083	intel_display.c	FUNCTION_239	CALL_4
0x4003201	            0x31d2	                            xor edx, edx	      8085	intel_display.c	FUNCTION_239	CALL_5
0x4003203	      0xbe0c020000	                          mov esi, 0x20c	      8085	intel_display.c	FUNCTION_239	CALL_5
0x4003208	          0x4889df	                            mov rdi, rbx	      8085	intel_display.c	FUNCTION_239	CALL_5
0x400320b	      0xe800000000	                          call 0x4003210	      8085	intel_display.c	FUNCTION_239	CALL_5
0x4003210	            0xa801	                              test al, 1	      8086	intel_display.c	FUNCTION_239	IF_1
0x4003212	            0x7518	                           jne 0x400322c	      8086	intel_display.c	FUNCTION_239	IF_1
0x4003214	            0xa808	                              test al, 8	      8087	intel_display.c	FUNCTION_239	IF_1	IF_2
0x4003216	            0x7424	                            je 0x400323c	      8087	intel_display.c	FUNCTION_239	IF_1	IF_2
0x4003218	          0x83c801	                               or eax, 1	      8093	intel_display.c	FUNCTION_239	IF_1	CALL_8
0x400321b	            0x31c9	                            xor ecx, ecx	      8093	intel_display.c	FUNCTION_239	IF_1	CALL_8
0x400321d	      0xbe0c020000	                          mov esi, 0x20c	      8093	intel_display.c	FUNCTION_239	IF_1	CALL_8
0x4003222	            0x89c2	                            mov edx, eax	      8093	intel_display.c	FUNCTION_239	IF_1	CALL_8
0x4003224	          0x4889df	                            mov rdi, rbx	      8093	intel_display.c	FUNCTION_239	IF_1	CALL_8
0x4003227	      0xe800000000	                          call 0x400322c	      8093	intel_display.c	FUNCTION_239	IF_1	CALL_8
0x400322c	        0x4883c408	                              add rsp, 8	      8097	intel_display.c	FUNCTION_239
0x4003230	          0x4c89e7	                            mov rdi, r12	      8096	intel_display.c	FUNCTION_239	CALL_9
0x4003233	              0x5b	                                 pop rbx	      8097	intel_display.c	FUNCTION_239
0x4003234	              0x5d	                                 pop rbp	      8097	intel_display.c	FUNCTION_239
0x4003235	            0x415c	                                 pop r12	      8097	intel_display.c	FUNCTION_239
0x4003237	      0xe900000000	                           jmp 0x400323c	      8096	intel_display.c	FUNCTION_239	CALL_9
0x400323c	          0x83c808	                               or eax, 8	      8088	intel_display.c	FUNCTION_239	IF_1	IF_2
0x400323f	            0x31c9	                            xor ecx, ecx	      8089	intel_display.c	FUNCTION_239	IF_1	IF_2	CALL_6
0x4003241	      0xbe0c020000	                          mov esi, 0x20c	      8089	intel_display.c	FUNCTION_239	IF_1	IF_2	CALL_6
0x4003246	            0x89c2	                            mov edx, eax	      8089	intel_display.c	FUNCTION_239	IF_1	IF_2	CALL_6
0x4003248	          0x4889df	                            mov rdi, rbx	      8089	intel_display.c	FUNCTION_239	IF_1	IF_2	CALL_6
0x400324b	        0x89442404	                mov dword [rsp + 4], eax	      8089	intel_display.c	FUNCTION_239	IF_1	IF_2	CALL_6
0x400324f	      0xe800000000	                          call 0x4003254	      8089	intel_display.c	FUNCTION_239	IF_1	IF_2	CALL_6
0x4003254	      0xbfe0180200	                        mov edi, 0x218e0	      8090	intel_display.c	FUNCTION_239	IF_1	IF_2	CALL_7
0x4003259	      0xe800000000	                          call 0x400325e	      8090	intel_display.c	FUNCTION_239	IF_1	IF_2	CALL_7
0x400325e	        0x8b442404	                mov eax, dword [rsp + 4]	      8090	intel_display.c	FUNCTION_239	IF_1	IF_2	CALL_7
0x4003262	            0xebb4	                           jmp 0x4003218	      8090	intel_display.c	FUNCTION_239	IF_1	IF_2	CALL_7
vlv_prepare_pll	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,7:ELSE,4:functions,0:CALL,38	222
0x4002e30	            0x4157	                                push r15	      6729	intel_display.c	FUNCTION_212
0x4002e32	            0x4156	                                push r14	      6729	intel_display.c	FUNCTION_212
0x4002e34	          0x4989f6	                            mov r14, rsi	      6729	intel_display.c	FUNCTION_212
0x4002e37	            0x4155	                                push r13	      6729	intel_display.c	FUNCTION_212
0x4002e39	            0x4154	                                push r12	      6729	intel_display.c	FUNCTION_212
0x4002e3b	          0x4989fd	                            mov r13, rdi	      6729	intel_display.c	FUNCTION_212
0x4002e3e	              0x55	                                push rbp	      6729	intel_display.c	FUNCTION_212
0x4002e3f	              0x53	                                push rbx	      6729	intel_display.c	FUNCTION_212
0x4002e40	        0x4883ec30	                           sub rsp, 0x30	      6729	intel_display.c	FUNCTION_212
0x4002e44	          0x4c8b3f	                    mov r15, qword [rdi]	      6730	intel_display.c	FUNCTION_212
0x4002e47	    0x8b9fb0040000	           mov ebx, dword [rdi + 0x4b0] 	      6732	intel_display.c	FUNCTION_212
0x4002e4d	    0x65488b042528	                mov rax, qword gs:[0x28]	      6729	intel_display.c	FUNCTION_212
0x4002e56	      0x4889442428	             mov qword [rsp + 0x28], rax	      6729	intel_display.c	FUNCTION_212
0x4002e5b	            0x31c0	                            xor eax, eax	      6729	intel_display.c	FUNCTION_212
0x4002e5d	    0x8b9680020000	           mov edx, dword [rsi + 0x280] 	      6738	intel_display.c	FUNCTION_212	CALL_3
0x4002e63	    0x418b876c0600	           mov eax, dword [r15 + 0x66c] 	      6738	intel_display.c	FUNCTION_212	CALL_3
0x4002e6a	    0x4d8b9f180800	           mov r11, qword [r15 + 0x818] 	      6738	intel_display.c	FUNCTION_212	CALL_3
0x4002e71	          0x4c89ff	                            mov rdi, r15	      6738	intel_display.c	FUNCTION_212	CALL_3
0x4002e74	    0x81e2ffffff3f	                     and edx, 0x3fffffff	      6738	intel_display.c	FUNCTION_212	CALL_3
0x4002e7a	    0x8d8814600000	                 lea ecx, [rax + 0x6014]	      6738	intel_display.c	FUNCTION_212	CALL_3
0x4002e80	        0x894c241c	             mov dword [rsp + 0x1c], ecx	      6738	intel_display.c	FUNCTION_212	CALL_3
0x4002e84	    0x8d8818600000	                 lea ecx, [rax + 0x6018]	      6738	intel_display.c	FUNCTION_212	CALL_3
0x4002e8a	       0x530600000	                         add eax, 0x6030	      6738	intel_display.c	FUNCTION_212	CALL_3
0x4002e8f	        0x89442424	             mov dword [rsp + 0x24], eax	      6738	intel_display.c	FUNCTION_212	CALL_3
0x4002e93	          0x4863c3	                         movsxd rax, ebx	      6738	intel_display.c	FUNCTION_212	CALL_3
0x4002e96	        0x894c2420	             mov dword [rsp + 0x20], ecx	      6738	intel_display.c	FUNCTION_212	CALL_3
0x4002e9a	      0xb901000000	                              mov ecx, 1	      6738	intel_display.c	FUNCTION_212	CALL_3
0x4002e9f	        0x8b74841c	    mov esi, dword [rsp + rax*4 + 0x1c] 	      6738	intel_display.c	FUNCTION_212	CALL_3
0x4002ea3	      0xe800000000	                          call 0x4002ea8	      6738	intel_display.c	FUNCTION_212	CALL_3
0x4002ea8	    0x418b86800200	           mov eax, dword [r14 + 0x280] 	      6743	intel_display.c	FUNCTION_212	IF_1
0x4002eaf	            0x85c0	                           test eax, eax	      6743	intel_display.c	FUNCTION_212	IF_1
0x4002eb1	            0x7823	                            js 0x4002ed6	      6743	intel_display.c	FUNCTION_212	IF_1
0x4002eb3	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      6824	intel_display.c	FUNCTION_212
0x4002eb8	    0x654833042528	                xor rax, qword gs:[0x28]	      6824	intel_display.c	FUNCTION_212
0x4002ec1	     0xf85d6020000	                           jne 0x400319d	      6824	intel_display.c	FUNCTION_212
0x4002ec7	        0x4883c430	                           add rsp, 0x30	      6824	intel_display.c	FUNCTION_212
0x4002ecb	              0x5b	                                 pop rbx	      6824	intel_display.c	FUNCTION_212
0x4002ecc	              0x5d	                                 pop rbp	      6824	intel_display.c	FUNCTION_212
0x4002ecd	            0x415c	                                 pop r12	      6824	intel_display.c	FUNCTION_212
0x4002ecf	            0x415d	                                 pop r13	      6824	intel_display.c	FUNCTION_212
0x4002ed1	            0x415e	                                 pop r14	      6824	intel_display.c	FUNCTION_212
0x4002ed3	            0x415f	                                 pop r15	      6824	intel_display.c	FUNCTION_212
0x4002ed5	              0xc3	                                     ret	      6824	intel_display.c	FUNCTION_212
0x4002ed6	    0x498d87404800	                 lea rax, [r15 + 0x4840]	      6746	intel_display.c	FUNCTION_212	CALL_4
0x4002edd	          0x4889c7	                            mov rdi, rax	      6746	intel_display.c	FUNCTION_212	CALL_4
0x4002ee0	        0x48890424	                    mov qword [rsp], rax	      6746	intel_display.c	FUNCTION_212	CALL_4
0x4002ee4	      0xe800000000	                          call 0x4002ee9	      6746	intel_display.c	FUNCTION_212	CALL_4
0x4002ee9	    0x418b86500200	           mov eax, dword [r14 + 0x250] 	      6748	intel_display.c	FUNCTION_212
0x4002ef0	          0x83fb01	                              cmp ebx, 1	      6757	intel_display.c	FUNCTION_212	IF_2
0x4002ef3	    0x458ba65c0200	          mov r12d, dword [r14 + 0x25c] 	      6751	intel_display.c	FUNCTION_212
0x4002efa	        0x89442408	                mov dword [rsp + 8], eax	      6748	intel_display.c	FUNCTION_212
0x4002efe	    0x418b86540200	           mov eax, dword [r14 + 0x254] 	      6749	intel_display.c	FUNCTION_212
0x4002f05	        0x8944240c	              mov dword [rsp + 0xc], eax	      6749	intel_display.c	FUNCTION_212
0x4002f09	    0x418b86580200	           mov eax, dword [r14 + 0x258] 	      6750	intel_display.c	FUNCTION_212
0x4002f10	        0x89442410	             mov dword [rsp + 0x10], eax	      6750	intel_display.c	FUNCTION_212
0x4002f14	    0x418b86600200	           mov eax, dword [r14 + 0x260] 	      6752	intel_display.c	FUNCTION_212
0x4002f1b	        0x89442414	             mov dword [rsp + 0x14], eax	      6752	intel_display.c	FUNCTION_212
0x4002f1f	     0xf84aa010000	                            je 0x40030cf	      6757	intel_display.c	FUNCTION_212	IF_2
0x4002f25	    0x8dab02040000	                  lea ebp, [rbx + 0x402]	      6764	intel_display.c	FUNCTION_212	CALL_8
0x4002f2b	      0xb90f000001	                      mov ecx, 0x100000f	      6761	intel_display.c	FUNCTION_212	CALL_6
0x4002f30	      0xba44c00000	                         mov edx, 0xc044	      6761	intel_display.c	FUNCTION_212	CALL_6
0x4002f35	            0x89de	                            mov esi, ebx	      6761	intel_display.c	FUNCTION_212	CALL_6
0x4002f37	          0x4c89ff	                            mov rdi, r15	      6761	intel_display.c	FUNCTION_212	CALL_6
0x4002f3a	        0x41c1e415	                          shl r12d, 0x15	      6773	intel_display.c	FUNCTION_212
0x4002f3e	          0xc1e505	                              shl ebp, 5	      6764	intel_display.c	FUNCTION_212	CALL_8
0x4002f41	      0xe800000000	                          call 0x4002f46	      6761	intel_display.c	FUNCTION_212	CALL_6
0x4002f46	            0x89ea	                            mov edx, ebp	      6764	intel_display.c	FUNCTION_212	CALL_8
0x4002f48	            0x89de	                            mov esi, ebx	      6764	intel_display.c	FUNCTION_212	CALL_8
0x4002f4a	          0x4c89ff	                            mov rdi, r15	      6764	intel_display.c	FUNCTION_212	CALL_8
0x4002f4d	      0xe800000000	                          call 0x4002f52	      6764	intel_display.c	FUNCTION_212	CALL_8
0x4002f52	      0x25ffffff00	                       and eax, 0xffffff	      6766	intel_display.c	FUNCTION_212	CALL_10
0x4002f57	            0x89ea	                            mov edx, ebp	      6766	intel_display.c	FUNCTION_212	CALL_10
0x4002f59	            0x89de	                            mov esi, ebx	      6766	intel_display.c	FUNCTION_212	CALL_10
0x4002f5b	            0x89c1	                            mov ecx, eax	      6766	intel_display.c	FUNCTION_212	CALL_10
0x4002f5d	          0x4c89ff	                            mov rdi, r15	      6766	intel_display.c	FUNCTION_212	CALL_10
0x4002f60	      0xe800000000	                          call 0x4002f65	      6766	intel_display.c	FUNCTION_212	CALL_10
0x4002f65	      0xb910060000	                          mov ecx, 0x610	      6769	intel_display.c	FUNCTION_212	CALL_11
0x4002f6a	      0xba00810000	                         mov edx, 0x8100	      6769	intel_display.c	FUNCTION_212	CALL_11
0x4002f6f	            0x89de	                            mov esi, ebx	      6769	intel_display.c	FUNCTION_212	CALL_11
0x4002f71	          0x4c89ff	                            mov rdi, r15	      6769	intel_display.c	FUNCTION_212	CALL_11
0x4002f74	      0xe800000000	                          call 0x4002f79	      6769	intel_display.c	FUNCTION_212	CALL_11
0x4002f79	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      6773	intel_display.c	FUNCTION_212
0x4002f7d	       0xfb6442410	           movzx eax, byte [rsp + 0x10] 	      6773	intel_display.c	FUNCTION_212
0x4002f82	            0x89de	                            mov esi, ebx	      6783	intel_display.c	FUNCTION_212	CALL_13
0x4002f84	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      6773	intel_display.c	FUNCTION_212
0x4002f88	          0x4c89ff	                            mov rdi, r15	      6783	intel_display.c	FUNCTION_212	CALL_13
0x4002f8b	          0xc1e208	                              shl edx, 8	      6773	intel_display.c	FUNCTION_212
0x4002f8e	             0x9d0	                             or eax, edx	      6773	intel_display.c	FUNCTION_212
0x4002f90	          0xc1e110	                           shl ecx, 0x10	      6773	intel_display.c	FUNCTION_212
0x4002f93	          0x4109c4	                            or r12d, eax	      6773	intel_display.c	FUNCTION_212
0x4002f96	          0x8d45cc	                   lea eax, [rbp - 0x34]	      6783	intel_display.c	FUNCTION_212	CALL_13
0x4002f99	          0x4109cc	                            or r12d, ecx	      6773	intel_display.c	FUNCTION_212
0x4002f9c	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      6774	intel_display.c	FUNCTION_212
0x4002fa0	            0x89c2	                            mov edx, eax	      6783	intel_display.c	FUNCTION_212	CALL_13
0x4002fa2	        0x89442408	                mov dword [rsp + 8], eax	      6783	intel_display.c	FUNCTION_212	CALL_13
0x4002fa6	          0xc1e10c	                            shl ecx, 0xc	      6774	intel_display.c	FUNCTION_212
0x4002fa9	          0x4109cc	                            or r12d, ecx	      6774	intel_display.c	FUNCTION_212
0x4002fac	          0x4489e1	                           mov ecx, r12d	      6783	intel_display.c	FUNCTION_212	CALL_13
0x4002faf	    0x81c900000011	                      or ecx, 0x11000000	      6783	intel_display.c	FUNCTION_212	CALL_13
0x4002fb5	      0xe800000000	                          call 0x4002fba	      6783	intel_display.c	FUNCTION_212	CALL_13
0x4002fba	        0x8b442408	                mov eax, dword [rsp + 8]	      6786	intel_display.c	FUNCTION_212	CALL_15
0x4002fbe	          0x4489e1	                           mov ecx, r12d	      6786	intel_display.c	FUNCTION_212	CALL_15
0x4002fc1	            0x89de	                            mov esi, ebx	      6786	intel_display.c	FUNCTION_212	CALL_15
0x4002fc3	    0x81c900080011	                      or ecx, 0x11000800	      6786	intel_display.c	FUNCTION_212	CALL_15
0x4002fc9	          0x4c89ff	                            mov rdi, r15	      6786	intel_display.c	FUNCTION_212	CALL_15
0x4002fcc	            0x89c2	                            mov edx, eax	      6786	intel_display.c	FUNCTION_212	CALL_15
0x4002fce	      0xe800000000	                          call 0x4002fd3	      6786	intel_display.c	FUNCTION_212	CALL_15
0x4002fd3	    0x4181be0c0300	       cmp dword [r14 + 0x30c], 0x278d0 	      6789	intel_display.c	FUNCTION_212	IF_3
0x4002fde	          0x8d5508	                      lea edx, [rbp + 8]	      6792	intel_display.c	FUNCTION_212	IF_3	CALL_19
0x4002fe1	            0x7414	                            je 0x4002ff7	      6789	intel_display.c	FUNCTION_212	IF_3
0x4002fe3	    0x498b85c80400	           mov rax, qword [r13 + 0x4c8] 	      6789	intel_display.c	FUNCTION_212	IF_3
0x4002fea	    0xf68044020000	          test byte [rax + 0x244], 0x42 	      6790	intel_display.c	FUNCTION_212	IF_3	CALL_16
0x4002ff1	     0xf8492010000	                            je 0x4003189	      6790	intel_display.c	FUNCTION_212	IF_3	CALL_16
0x4002ff7	      0xb903009f00	                       mov ecx, 0x9f0003	      6792	intel_display.c	FUNCTION_212	IF_3	CALL_19
0x4002ffc	            0x89de	                            mov esi, ebx	      6792	intel_display.c	FUNCTION_212	IF_3	CALL_19
0x4002ffe	          0x4c89ff	                            mov rdi, r15	      6792	intel_display.c	FUNCTION_212	IF_3	CALL_19
0x4003001	      0xe800000000	                          call 0x4003006	      6792	intel_display.c	FUNCTION_212	IF_3	CALL_19
0x4003006	    0x41f786440200	        test dword [r14 + 0x244], 0x980 	      6798	intel_display.c	FUNCTION_212	IF_4	CALL_22
0x4003011	          0x8d55d4	                   lea edx, [rbp - 0x2c]	      6801	intel_display.c	FUNCTION_212	IF_4	IF_5	CALL_24
0x4003014	            0x7419	                            je 0x400302f	      6798	intel_display.c	FUNCTION_212	IF_4	CALL_22
0x4003016	            0x85db	                           test ebx, ebx	      6800	intel_display.c	FUNCTION_212	IF_4	IF_5
0x4003018	     0xf859d000000	                           jne 0x40030bb	      6800	intel_display.c	FUNCTION_212	IF_4	IF_5
0x400301e	      0xb90000f40d	                      mov ecx, 0xdf40000	      6801	intel_display.c	FUNCTION_212	IF_4	IF_5	CALL_24
0x4003023	            0x31f6	                            xor esi, esi	      6801	intel_display.c	FUNCTION_212	IF_4	IF_5	CALL_24
0x4003025	          0x4c89ff	                            mov rdi, r15	      6801	intel_display.c	FUNCTION_212	IF_4	IF_5	CALL_24
0x4003028	      0xe800000000	                          call 0x400302d	      6801	intel_display.c	FUNCTION_212	IF_4	IF_5	CALL_24
0x400302d	            0xeb13	                           jmp 0x4003042	      6801	intel_display.c	FUNCTION_212	IF_4	IF_5	CALL_24
0x400302f	            0x85db	                           test ebx, ebx	      6808	intel_display.c	FUNCTION_212	ELSE_3	IF_6
0x4003031	            0x7477	                            je 0x40030aa	      6808	intel_display.c	FUNCTION_212	ELSE_3	IF_6
0x4003033	      0xb90000f40d	                      mov ecx, 0xdf40000	      6812	intel_display.c	FUNCTION_212	ELSE_3	ELSE_4	CALL_30
0x4003038	            0x89de	                            mov esi, ebx	      6812	intel_display.c	FUNCTION_212	ELSE_3	ELSE_4	CALL_30
0x400303a	          0x4c89ff	                            mov rdi, r15	      6812	intel_display.c	FUNCTION_212	ELSE_3	ELSE_4	CALL_30
0x400303d	      0xe800000000	                          call 0x4003042	      6812	intel_display.c	FUNCTION_212	ELSE_3	ELSE_4	CALL_30
0x4003042	        0x448d65dc	                  lea r12d, [rbp - 0x24]	      6816	intel_display.c	FUNCTION_212	CALL_32
0x4003046	            0x89de	                            mov esi, ebx	      6816	intel_display.c	FUNCTION_212	CALL_32
0x4003048	          0x4c89ff	                            mov rdi, r15	      6816	intel_display.c	FUNCTION_212	CALL_32
0x400304b	          0x4489e2	                           mov edx, r12d	      6816	intel_display.c	FUNCTION_212	CALL_32
0x400304e	      0xe800000000	                          call 0x4003053	      6816	intel_display.c	FUNCTION_212	CALL_32
0x4003053	      0x2500ff0000	                         and eax, 0xff00	      6817	intel_display.c	FUNCTION_212
0x4003058	          0x4489e2	                           mov edx, r12d	      6820	intel_display.c	FUNCTION_212	CALL_35
0x400305b	            0x89de	                            mov esi, ebx	      6820	intel_display.c	FUNCTION_212	CALL_35
0x400305d	            0x89c1	                            mov ecx, eax	      6817	intel_display.c	FUNCTION_212
0x400305f	          0x4c89ff	                            mov rdi, r15	      6820	intel_display.c	FUNCTION_212	CALL_35
0x4003062	    0x81c90000c001	                       or ecx, 0x1c00000	      6820	intel_display.c	FUNCTION_212	CALL_35
0x4003068	      0xe800000000	                          call 0x400306d	      6820	intel_display.c	FUNCTION_212	CALL_35
0x400306d	          0x8d550c	                    lea edx, [rbp + 0xc]	      6822	intel_display.c	FUNCTION_212	CALL_37
0x4003070	      0xb900108787	                     mov ecx, 0x87871000	      6822	intel_display.c	FUNCTION_212	CALL_37
0x4003075	            0x89de	                            mov esi, ebx	      6822	intel_display.c	FUNCTION_212	CALL_37
0x4003077	          0x4c89ff	                            mov rdi, r15	      6822	intel_display.c	FUNCTION_212	CALL_37
0x400307a	      0xe800000000	                          call 0x400307f	      6822	intel_display.c	FUNCTION_212	CALL_37
0x400307f	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      6823	intel_display.c	FUNCTION_212	CALL_38
0x4003084	    0x654833042528	                xor rax, qword gs:[0x28]	      6823	intel_display.c	FUNCTION_212	CALL_38
0x400308d	     0xf850a010000	                           jne 0x400319d	      6823	intel_display.c	FUNCTION_212	CALL_38
0x4003093	        0x488b3c24	                    mov rdi, qword [rsp]	      6823	intel_display.c	FUNCTION_212	CALL_38
0x4003097	        0x4883c430	                           add rsp, 0x30	      6824	intel_display.c	FUNCTION_212
0x400309b	              0x5b	                                 pop rbx	      6824	intel_display.c	FUNCTION_212
0x400309c	              0x5d	                                 pop rbp	      6824	intel_display.c	FUNCTION_212
0x400309d	            0x415c	                                 pop r12	      6824	intel_display.c	FUNCTION_212
0x400309f	            0x415d	                                 pop r13	      6824	intel_display.c	FUNCTION_212
0x40030a1	            0x415e	                                 pop r14	      6824	intel_display.c	FUNCTION_212
0x40030a3	            0x415f	                                 pop r15	      6824	intel_display.c	FUNCTION_212
0x40030a5	      0xe900000000	                           jmp 0x40030aa	      6823	intel_display.c	FUNCTION_212	CALL_38
0x40030aa	      0xb90000f70d	                      mov ecx, 0xdf70000	      6809	intel_display.c	FUNCTION_212	ELSE_3	IF_6	CALL_28
0x40030af	            0x31f6	                            xor esi, esi	      6809	intel_display.c	FUNCTION_212	ELSE_3	IF_6	CALL_28
0x40030b1	          0x4c89ff	                            mov rdi, r15	      6809	intel_display.c	FUNCTION_212	ELSE_3	IF_6	CALL_28
0x40030b4	      0xe800000000	                          call 0x40030b9	      6809	intel_display.c	FUNCTION_212	ELSE_3	IF_6	CALL_28
0x40030b9	            0xeb87	                           jmp 0x4003042	      6809	intel_display.c	FUNCTION_212	ELSE_3	IF_6	CALL_28
0x40030bb	      0xb90000f70d	                      mov ecx, 0xdf70000	      6804	intel_display.c	FUNCTION_212	IF_4	ELSE_2	CALL_26
0x40030c0	            0x89de	                            mov esi, ebx	      6804	intel_display.c	FUNCTION_212	IF_4	ELSE_2	CALL_26
0x40030c2	          0x4c89ff	                            mov rdi, r15	      6804	intel_display.c	FUNCTION_212	IF_4	ELSE_2	CALL_26
0x40030c5	      0xe800000000	                          call 0x40030ca	      6804	intel_display.c	FUNCTION_212	IF_4	ELSE_2	CALL_26
0x40030ca	      0xe973ffffff	                           jmp 0x4003042	      6804	intel_display.c	FUNCTION_212	IF_4	ELSE_2	CALL_26
0x40030cf	          0x4c89ff	                            mov rdi, r15	      6603	intel_display.c	FUNCTION_206	CALL_2
0x40030d2	      0xba64800000	                         mov edx, 0x8064	      6603	intel_display.c	FUNCTION_206	CALL_2
0x40030d7	      0xbe01000000	                              mov esi, 1	      6603	intel_display.c	FUNCTION_206	CALL_2
0x40030dc	      0xe800000000	                          call 0x40030e1	      6603	intel_display.c	FUNCTION_206	CALL_2
0x40030e1	            0x30c0	                              xor al, al	      6604	intel_display.c	FUNCTION_206
0x40030e3	          0x4c89ff	                            mov rdi, r15	      6606	intel_display.c	FUNCTION_206	CALL_4
0x40030e6	      0xba64800000	                         mov edx, 0x8064	      6606	intel_display.c	FUNCTION_206	CALL_4
0x40030eb	            0x89c1	                            mov ecx, eax	      6604	intel_display.c	FUNCTION_206
0x40030ed	      0xbe01000000	                              mov esi, 1	      6606	intel_display.c	FUNCTION_206	CALL_4
0x40030f2	          0x83c930	                            or ecx, 0x30	      6606	intel_display.c	FUNCTION_206	CALL_4
0x40030f5	      0xe800000000	                          call 0x40030fa	      6606	intel_display.c	FUNCTION_206	CALL_4
0x40030fa	          0x4c89ff	                            mov rdi, r15	      6608	intel_display.c	FUNCTION_206	CALL_5
0x40030fd	      0xbaac800000	                         mov edx, 0x80ac	      6608	intel_display.c	FUNCTION_206	CALL_5
0x4003102	      0xbe01000000	                              mov esi, 1	      6608	intel_display.c	FUNCTION_206	CALL_5
0x4003107	      0xe800000000	                          call 0x400310c	      6608	intel_display.c	FUNCTION_206	CALL_5
0x400310c	      0x25ffffff00	                       and eax, 0xffffff	      6609	intel_display.c	FUNCTION_206
0x4003111	          0x4c89ff	                            mov rdi, r15	      6611	intel_display.c	FUNCTION_206	CALL_6
0x4003114	      0xbaac800000	                         mov edx, 0x80ac	      6611	intel_display.c	FUNCTION_206	CALL_6
0x4003119	            0x89c1	                            mov ecx, eax	      6609	intel_display.c	FUNCTION_206
0x400311b	      0xbe01000000	                              mov esi, 1	      6611	intel_display.c	FUNCTION_206	CALL_6
0x4003120	    0x81c90000008c	                      or ecx, 0x8c000000	      6611	intel_display.c	FUNCTION_206	CALL_6
0x4003126	      0xe800000000	                          call 0x400312b	      6611	intel_display.c	FUNCTION_206	CALL_6
0x400312b	          0x4c89ff	                            mov rdi, r15	      6613	intel_display.c	FUNCTION_206	CALL_8
0x400312e	      0xba64800000	                         mov edx, 0x8064	      6613	intel_display.c	FUNCTION_206	CALL_8
0x4003133	      0xbe01000000	                              mov esi, 1	      6613	intel_display.c	FUNCTION_206	CALL_8
0x4003138	      0xe800000000	                          call 0x400313d	      6613	intel_display.c	FUNCTION_206	CALL_8
0x400313d	            0x30c0	                              xor al, al	      6615	intel_display.c	FUNCTION_206	CALL_10
0x400313f	          0x4c89ff	                            mov rdi, r15	      6615	intel_display.c	FUNCTION_206	CALL_10
0x4003142	      0xba64800000	                         mov edx, 0x8064	      6615	intel_display.c	FUNCTION_206	CALL_10
0x4003147	            0x89c1	                            mov ecx, eax	      6615	intel_display.c	FUNCTION_206	CALL_10
0x4003149	      0xbe01000000	                              mov esi, 1	      6615	intel_display.c	FUNCTION_206	CALL_10
0x400314e	      0xe800000000	                          call 0x4003153	      6615	intel_display.c	FUNCTION_206	CALL_10
0x4003153	          0x4c89ff	                            mov rdi, r15	      6617	intel_display.c	FUNCTION_206	CALL_11
0x4003156	      0xbaac800000	                         mov edx, 0x80ac	      6617	intel_display.c	FUNCTION_206	CALL_11
0x400315b	      0xbe01000000	                              mov esi, 1	      6617	intel_display.c	FUNCTION_206	CALL_11
0x4003160	      0xe800000000	                          call 0x4003165	      6617	intel_display.c	FUNCTION_206	CALL_11
0x4003165	      0x25ffffff00	                       and eax, 0xffffff	      6618	intel_display.c	FUNCTION_206
0x400316a	      0xbaac800000	                         mov edx, 0x80ac	      6620	intel_display.c	FUNCTION_206	CALL_12
0x400316f	      0xbe01000000	                              mov esi, 1	      6620	intel_display.c	FUNCTION_206	CALL_12
0x4003174	            0x89c1	                            mov ecx, eax	      6618	intel_display.c	FUNCTION_206
0x4003176	          0x4c89ff	                            mov rdi, r15	      6620	intel_display.c	FUNCTION_206	CALL_12
0x4003179	    0x81c9000000b0	                      or ecx, 0xb0000000	      6620	intel_display.c	FUNCTION_206	CALL_12
0x400317f	      0xe800000000	                          call 0x4003184	      6620	intel_display.c	FUNCTION_206	CALL_12
0x4003184	      0xe99cfdffff	                           jmp 0x4002f25	      6620	intel_display.c	FUNCTION_206	CALL_12
0x4003189	      0xb90f00d000	                       mov ecx, 0xd0000f	      6795	intel_display.c	FUNCTION_212	ELSE_1	CALL_21
0x400318e	            0x89de	                            mov esi, ebx	      6795	intel_display.c	FUNCTION_212	ELSE_1	CALL_21
0x4003190	          0x4c89ff	                            mov rdi, r15	      6795	intel_display.c	FUNCTION_212	ELSE_1	CALL_21
0x4003193	      0xe800000000	                          call 0x4003198	      6795	intel_display.c	FUNCTION_212	ELSE_1	CALL_21
0x4003198	      0xe969feffff	                           jmp 0x4003006	      6795	intel_display.c	FUNCTION_212	ELSE_1	CALL_21
0x400319d	      0xe800000000	                          call 0x40031a2	      6824	intel_display.c	FUNCTION_212
pipe_config_err	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,1:functions,0:CALL,4	37
0x4004da0	              0x55	                                push rbp	     11061	intel_display.c	FUNCTION_319
0x4004da1	          0x4889e5	                            mov rbp, rsp	     11061	intel_display.c	FUNCTION_319
0x4004da4	            0x4152	                                push r10	     11061	intel_display.c	FUNCTION_319
0x4004da6	        0x4c8d5510	                   lea r10, [rbp + 0x10]	     11061	intel_display.c	FUNCTION_319
0x4004daa	        0x4883ec60	                           sub rsp, 0x60	     11061	intel_display.c	FUNCTION_319
0x4004dae	        0x48894de0	             mov qword [rbp - 0x20], rcx	     11061	intel_display.c	FUNCTION_319
0x4004db2	        0x4c8945e8	              mov qword [rbp - 0x18], r8	     11061	intel_display.c	FUNCTION_319
0x4004db6	    0x65488b042528	                mov rax, qword gs:[0x28]	     11061	intel_display.c	FUNCTION_319
0x4004dbf	        0x488945c0	             mov qword [rbp - 0x40], rax	     11061	intel_display.c	FUNCTION_319
0x4004dc3	            0x31c0	                            xor eax, eax	     11061	intel_display.c	FUNCTION_319
0x4004dc5	        0x488d45c8	                   lea rax, [rbp - 0x38]	     11065	intel_display.c	FUNCTION_319	CALL_1
0x4004dc9	          0x4084ff	                           test dil, dil	     11069	intel_display.c	FUNCTION_319	IF_1
0x4004dcc	        0x4c894df0	              mov qword [rbp - 0x10], r9	     11061	intel_display.c	FUNCTION_319
0x4004dd0	    0xc745a8180000	           mov dword [rbp - 0x58], 0x18 	     11065	intel_display.c	FUNCTION_319	CALL_1
0x4004dd7	        0x4c8955b0	             mov qword [rbp - 0x50], r10	     11065	intel_display.c	FUNCTION_319	CALL_1
0x4004ddb	        0x488945b8	             mov qword [rbp - 0x48], rax	     11065	intel_display.c	FUNCTION_319	CALL_1
0x4004ddf	        0x488d45a8	                   lea rax, [rbp - 0x58]	     11067	intel_display.c	FUNCTION_319
0x4004de3	        0x48895598	             mov qword [rbp - 0x68], rdx	     11066	intel_display.c	FUNCTION_319
0x4004de7	        0x488945a0	             mov qword [rbp - 0x60], rax	     11067	intel_display.c	FUNCTION_319
0x4004deb	            0x7527	                           jne 0x4004e14	     11069	intel_display.c	FUNCTION_319	IF_1
0x4004ded	        0x488d5598	                   lea rdx, [rbp - 0x68]	     11072	intel_display.c	FUNCTION_319	CALL_3
0x4004df1	    0x48c7c7000000	                              mov rdi, 0	     11072	intel_display.c	FUNCTION_319	CALL_3
0x4004df8	      0xe800000000	                          call 0x4004dfd	     11072	intel_display.c	FUNCTION_319	CALL_3
0x4004dfd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11075	intel_display.c	FUNCTION_319
0x4004e01	    0x654833042528	                xor rax, qword gs:[0x28]	     11075	intel_display.c	FUNCTION_319
0x4004e0a	            0x7522	                           jne 0x4004e2e	     11075	intel_display.c	FUNCTION_319
0x4004e0c	        0x4883c460	                           add rsp, 0x60	     11075	intel_display.c	FUNCTION_319
0x4004e10	            0x415a	                                 pop r10	     11075	intel_display.c	FUNCTION_319
0x4004e12	              0x5d	                                 pop rbp	     11075	intel_display.c	FUNCTION_319
0x4004e13	              0xc3	                                     ret	     11075	intel_display.c	FUNCTION_319
0x4004e14	        0x488d4d98	                   lea rcx, [rbp - 0x68]	     11070	intel_display.c	FUNCTION_319	CALL_2
0x4004e18	          0x4889f2	                            mov rdx, rsi	     11070	intel_display.c	FUNCTION_319	CALL_2
0x4004e1b	      0xbf04000000	                              mov edi, 4	     11070	intel_display.c	FUNCTION_319	CALL_2
0x4004e20	    0x48c7c6000000	                              mov rsi, 0	     11070	intel_display.c	FUNCTION_319	CALL_2
0x4004e27	      0xe800000000	                          call 0x4004e2c	     11070	intel_display.c	FUNCTION_319	CALL_2
0x4004e2c	            0xebcf	                           jmp 0x4004dfd	     11070	intel_display.c	FUNCTION_319	CALL_2
0x4004e2e	      0xe800000000	                          call 0x4004e33	     11075	intel_display.c	FUNCTION_319
intel_get_format_info	FOR,0:SWITCH,1:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,2	27
0x4000040	    0x48b8fcffffff	         movabs rax, 0xfefffffffffffffc 	      2464	intel_display.c	FUNCTION_88	SWITCH_1
0x400004a	        0x48034748	             add rax, qword [rdi + 0x48]	      2464	intel_display.c	FUNCTION_88	SWITCH_1
0x400004e	        0x4883f801	                              cmp rax, 1	      2464	intel_display.c	FUNCTION_88	SWITCH_1
0x4000052	            0x7727	                            ja 0x400007b	      2464	intel_display.c	FUNCTION_88	SWITCH_1
0x4000054	          0x8b570c	              mov edx, dword [rdi + 0xc]	      2467	intel_display.c	FUNCTION_88	SWITCH_1	CALL_1
0x4000057	    0x81fa58523234	                     cmp edx, 0x34325258	      2454	intel_display.c	FUNCTION_87	FOR_1	IF_1
0x400005d	            0x7431	                            je 0x4000090	      2454	intel_display.c	FUNCTION_87	FOR_1	IF_1
0x400005f	    0x81fa58423234	                     cmp edx, 0x34324258	      2454	intel_display.c	FUNCTION_87	FOR_1	IF_1
0x4000065	            0x742d	                            je 0x4000094	      2454	intel_display.c	FUNCTION_87	FOR_1	IF_1
0x4000067	    0x81fa41523234	                     cmp edx, 0x34325241	      2454	intel_display.c	FUNCTION_87	FOR_1	IF_1
0x400006d	            0x742c	                            je 0x400009b	      2454	intel_display.c	FUNCTION_87	FOR_1	IF_1
0x400006f	            0x31c0	                            xor eax, eax	      2458	intel_display.c	FUNCTION_87
0x4000071	    0x81fa41423234	                     cmp edx, 0x34324241	      2454	intel_display.c	FUNCTION_87	FOR_1	IF_1
0x4000077	            0x7405	                            je 0x400007e	      2454	intel_display.c	FUNCTION_87	FOR_1	IF_1
0x4000079	            0xf3c3	                                     ret	      2473	intel_display.c	FUNCTION_88
0x400007b	            0x31c0	                            xor eax, eax	      2471	intel_display.c	FUNCTION_88	SWITCH_1
0x400007d	              0xc3	                                     ret	      2473	intel_display.c	FUNCTION_88
0x400007e	      0xb803000000	                              mov eax, 3	      2453	intel_display.c	FUNCTION_87	FOR_1
0x4000083	        0x488d0440	                  lea rax, [rax + rax*2]	      2454	intel_display.c	FUNCTION_87	FOR_1	IF_1
0x4000087	    0x488d04850000	                        lea rax, [rax*4]	      2454	intel_display.c	FUNCTION_87	FOR_1	IF_1
0x400008f	              0xc3	                                     ret	      2454	intel_display.c	FUNCTION_87	FOR_1	IF_1
0x4000090	            0x31c0	                            xor eax, eax	      2453	intel_display.c	FUNCTION_87	FOR_1
0x4000092	            0xebef	                           jmp 0x4000083	      2453	intel_display.c	FUNCTION_87	FOR_1
0x4000094	      0xb801000000	                              mov eax, 1	      2453	intel_display.c	FUNCTION_87	FOR_1
0x4000099	            0xebe8	                           jmp 0x4000083	      2453	intel_display.c	FUNCTION_87	FOR_1
0x400009b	      0xb802000000	                              mov eax, 2	      2453	intel_display.c	FUNCTION_87	FOR_1
0x40000a0	            0xebe1	                           jmp 0x4000083	      2453	intel_display.c	FUNCTION_87	FOR_1
intel_finish_crtc_commit	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,3:ELSE,0:functions,0:CALL,10	52
0x4004ee0	            0x4155	                                push r13	     12948	intel_display.c	FUNCTION_362
0x4004ee2	            0x4154	                                push r12	     12948	intel_display.c	FUNCTION_362
0x4004ee4	          0x4989f5	                            mov r13, rsi	     12948	intel_display.c	FUNCTION_362
0x4004ee7	              0x55	                                push rbp	     12948	intel_display.c	FUNCTION_362
0x4004ee8	              0x53	                                push rbx	     12948	intel_display.c	FUNCTION_362
0x4004ee9	          0x4889fd	                            mov rbp, rdi	     12948	intel_display.c	FUNCTION_362
0x4004eec	    0x8b8790000000	            mov eax, dword [rdi + 0x90] 	       431	drm_atomic.h	FUNCTION_503	CALL_1
0x4004ef2	    0x488b96100200	           mov rdx, qword [rsi + 0x210] 	       431	drm_atomic.h	FUNCTION_503	CALL_1
0x4004ef9	          0x4c8b27	                    mov r12, qword [rdi]	     12949	intel_display.c	FUNCTION_362	CALL_1
0x4004efc	        0x488d0440	                  lea rax, [rax + rax*2]	       431	drm_atomic.h	FUNCTION_503	CALL_1
0x4004f00	        0x48c1e004	                              shl rax, 4	       431	drm_atomic.h	FUNCTION_503	CALL_1
0x4004f04	        0x48034220	             add rax, qword [rdx + 0x20]	       431	drm_atomic.h	FUNCTION_503	CALL_1
0x4004f08	        0x488b5818	            mov rbx, qword [rax + 0x18] 	       431	drm_atomic.h	FUNCTION_503	CALL_1
0x4004f0c	          0x4889df	                            mov rdi, rbx	     12956	intel_display.c	FUNCTION_362	CALL_5
0x4004f0f	      0xe800000000	                          call 0x4004f14	     12956	intel_display.c	FUNCTION_362	CALL_5
0x4004f14	    0x80bb24020000	               cmp byte [rbx + 0x224], 0	     12958	intel_display.c	FUNCTION_362	IF_1
0x4004f1b	            0x7408	                            je 0x4004f25	     12958	intel_display.c	FUNCTION_362	IF_1
0x4004f1d	         0xfb6430a	            movzx eax, byte [rbx + 0xa] 	       893	drm_atomic.h	FUNCTION_511
0x4004f21	            0xa802	                              test al, 2	       893	drm_atomic.h	FUNCTION_511
0x4004f23	            0x7407	                            je 0x4004f2c	       893	drm_atomic.h	FUNCTION_511
0x4004f25	              0x5b	                                 pop rbx	     12971	intel_display.c	FUNCTION_362
0x4004f26	              0x5d	                                 pop rbp	     12971	intel_display.c	FUNCTION_362
0x4004f27	            0x415c	                                 pop r12	     12971	intel_display.c	FUNCTION_362
0x4004f29	            0x415d	                                 pop r13	     12971	intel_display.c	FUNCTION_362
0x4004f2b	              0xc3	                                     ret	     12971	intel_display.c	FUNCTION_362
0x4004f2c	            0xa804	                              test al, 4	       893	drm_atomic.h	FUNCTION_511
0x4004f2e	            0x75f5	                           jne 0x4004f25	       893	drm_atomic.h	FUNCTION_511
0x4004f30	            0xa808	                              test al, 8	       893	drm_atomic.h	FUNCTION_511
0x4004f32	            0x75f1	                           jne 0x4004f25	       893	drm_atomic.h	FUNCTION_511
0x4004f34	    0x41f685c80100	              test byte [r13 + 0x1c8], 1	     12959	intel_display.c	FUNCTION_362	IF_1	CALL_6
0x4004f3c	            0x74e7	                            je 0x4004f25	     12959	intel_display.c	FUNCTION_362	IF_1	CALL_6
0x4004f3e	    0x41f684245a06	              test byte [r12 + 0x65a], 2	     12961	intel_display.c	FUNCTION_362	IF_1	IF_2	CALL_7
0x4004f47	            0x7431	                            je 0x4004f7a	     12961	intel_display.c	FUNCTION_362	IF_1	IF_2	CALL_7
0x4004f49	    0x80bb38020000	               cmp byte [rbx + 0x238], 0	     12964	intel_display.c	FUNCTION_362	IF_1	IF_3
0x4004f50	            0x74d3	                            je 0x4004f25	     12964	intel_display.c	FUNCTION_362	IF_1	IF_3
0x4004f52	        0x488b4500	                    mov rax, qword [rbp]	      1811	intel_display.c	FUNCTION_61	IF_1	CALL_2
0x4004f56	            0x31f6	                            xor esi, esi	      1812	intel_display.c	FUNCTION_61	IF_1
0x4004f58	    0x83b8f8550000	            cmp dword [rax + 0x55f8], 3 	      1811	intel_display.c	FUNCTION_61	IF_1	CALL_2
0x4004f5f	            0x7406	                            je 0x4004f67	      1811	intel_display.c	FUNCTION_61	IF_1	CALL_2
0x4004f61	    0x8bb5b0040000	           mov esi, dword [rbp + 0x4b0] 	      1814	intel_display.c	FUNCTION_61	ELSE_1
0x4004f67	              0x5b	                                 pop rbx	     12971	intel_display.c	FUNCTION_362
0x4004f68	          0x4c89e7	                            mov rdi, r12	     12968	intel_display.c	FUNCTION_362	IF_1	IF_3	CALL_10
0x4004f6b	      0xba01000000	                              mov edx, 1	     12968	intel_display.c	FUNCTION_362	IF_1	IF_3	CALL_10
0x4004f70	              0x5d	                                 pop rbp	     12971	intel_display.c	FUNCTION_362
0x4004f71	            0x415c	                                 pop r12	     12971	intel_display.c	FUNCTION_362
0x4004f73	            0x415d	                                 pop r13	     12971	intel_display.c	FUNCTION_362
0x4004f75	      0xe900000000	                           jmp 0x4004f7a	     12968	intel_display.c	FUNCTION_362	IF_1	IF_3	CALL_10
0x4004f7a	    0x8bb5b0040000	           mov esi, dword [rbp + 0x4b0] 	     12962	intel_display.c	FUNCTION_362	IF_1	CALL_8
0x4004f80	      0xba01000000	                              mov edx, 1	     12962	intel_display.c	FUNCTION_362	IF_1	CALL_8
0x4004f85	          0x4c89e7	                            mov rdi, r12	     12962	intel_display.c	FUNCTION_362	IF_1	CALL_8
0x4004f88	      0xe800000000	                          call 0x4004f8d	     12962	intel_display.c	FUNCTION_362	IF_1	CALL_8
0x4004f8d	            0xebba	                           jmp 0x4004f49	     12962	intel_display.c	FUNCTION_362	IF_1	CALL_8
intel_get_pipe_from_crtc_id_ioctl	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,2	17
0x40178e0	              0x53	                                push rbx	     13594	intel_display.c	FUNCTION_377
0x40178e1	          0x4889f3	                            mov rbx, rsi	     13594	intel_display.c	FUNCTION_377
0x40178e4	          0x4889d6	                            mov rsi, rdx	     13594	intel_display.c	FUNCTION_377
0x40178e7	            0x8b13	                    mov edx, dword [rbx]	       967	drm_crtc.h	FUNCTION_652	CALL_1
0x40178e9	      0xb9cccccccc	                     mov ecx, 0xcccccccc	       967	drm_crtc.h	FUNCTION_652	CALL_1
0x40178ee	      0xe800000000	                          call 0x40178f3	       967	drm_crtc.h	FUNCTION_652	CALL_1
0x40178f3	          0x4889c2	                            mov rdx, rax	       967	drm_crtc.h	FUNCTION_652	CALL_1
0x40178f6	      0xb8feffffff	                     mov eax, 0xfffffffe	     13601	intel_display.c	FUNCTION_377	IF_1
0x40178fb	          0x4885d2	                           test rdx, rdx	       968	drm_crtc.h	FUNCTION_652	CALL_2
0x40178fe	            0x7411	                            je 0x4017911	       968	drm_crtc.h	FUNCTION_652	CALL_2
0x4017900	        0x4883fa60	                           cmp rdx, 0x60	     13600	intel_display.c	FUNCTION_377	IF_1
0x4017904	            0x740b	                            je 0x4017911	     13600	intel_display.c	FUNCTION_377	IF_1
0x4017906	    0x8b8250040000	           mov eax, dword [rdx + 0x450] 	     13604	intel_display.c	FUNCTION_377
0x401790c	          0x894304	                mov dword [rbx + 4], eax	     13604	intel_display.c	FUNCTION_377
0x401790f	            0x31c0	                            xor eax, eax	     13606	intel_display.c	FUNCTION_377
0x4017911	              0x5b	                                 pop rbx	     13607	intel_display.c	FUNCTION_377
0x4017912	              0xc3	                                     ret	     13607	intel_display.c	FUNCTION_377
hsw_enable_ips	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,3:ELSE,1:functions,0:CALL,12	60
0x400fdc0	    0x80bf48030000	               cmp byte [rdi + 0x348], 0	      4924	intel_display.c	FUNCTION_148	IF_1
0x400fdc7	     0xf849e000000	                            je 0x400fe6b	      4924	intel_display.c	FUNCTION_148	IF_1
0x400fdcd	              0x55	                                push rbp	      4919	intel_display.c	FUNCTION_148
0x400fdce	              0x53	                                push rbx	      4919	intel_display.c	FUNCTION_148
0x400fdcf	          0x488b07	                    mov rax, qword [rdi]	      4921	intel_display.c	FUNCTION_148
0x400fdd2	          0x488b18	                    mov rbx, qword [rax]	      4921	intel_display.c	FUNCTION_148
0x400fdd5	     0xfb687900400	          movzx eax, byte [rdi + 0x490] 	      4932	intel_display.c	FUNCTION_148	CALL_4
0x400fddc	            0xa8ef	                           test al, 0xef	      4932	intel_display.c	FUNCTION_148	CALL_4
0x400fdde	     0xf8497000000	                            je 0x400fe7b	      4932	intel_display.c	FUNCTION_148	CALL_4
0x400fde4	    0xf68366060000	          test byte [rbx + 0x666], 0x10 	      4934	intel_display.c	FUNCTION_148	IF_2	CALL_5
0x400fdeb	            0x7437	                            je 0x400fe24	      4934	intel_display.c	FUNCTION_148	IF_2	CALL_5
0x400fded	    0x488dab806b00	                 lea rbp, [rbx + 0x6b80]	      4935	intel_display.c	FUNCTION_148	IF_2	CALL_6
0x400fdf4	          0x4889ef	                            mov rdi, rbp	      4935	intel_display.c	FUNCTION_148	IF_2	CALL_6
0x400fdf7	      0xe800000000	                          call 0x400fdfc	      4935	intel_display.c	FUNCTION_148	IF_2	CALL_6
0x400fdfc	          0x4531c0	                            xor r8d, r8d	      4936	intel_display.c	FUNCTION_148	IF_2	CALL_8
0x400fdff	      0xb9f4010000	                          mov ecx, 0x1f4	      4936	intel_display.c	FUNCTION_148	IF_2	CALL_8
0x400fe04	      0xba000000c0	                     mov edx, 0xc0000000	      4936	intel_display.c	FUNCTION_148	IF_2	CALL_8
0x400fe09	      0xbe19000000	                           mov esi, 0x19	      4936	intel_display.c	FUNCTION_148	IF_2	CALL_8
0x400fe0e	          0x4889df	                            mov rdi, rbx	      4936	intel_display.c	FUNCTION_148	IF_2	CALL_8
0x400fe11	      0xe800000000	                          call 0x400fe16	      4936	intel_display.c	FUNCTION_148	IF_2	CALL_8
0x400fe16	            0x85c0	                           test eax, eax	      4936	intel_display.c	FUNCTION_148	IF_2	CALL_8
0x400fe18	            0x757b	                           jne 0x400fe95	      4936	intel_display.c	FUNCTION_148	IF_2	CALL_8
0x400fe1a	          0x4889ef	                            mov rdi, rbp	      4938	intel_display.c	FUNCTION_148	IF_2	CALL_9
0x400fe1d	              0x5b	                                 pop rbx	      4956	intel_display.c	FUNCTION_148
0x400fe1e	              0x5d	                                 pop rbp	      4956	intel_display.c	FUNCTION_148
0x400fe1f	      0xe900000000	                           jmp 0x400fe24	      4938	intel_display.c	FUNCTION_148	IF_2	CALL_9
0x400fe24	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      4945	intel_display.c	FUNCTION_148	ELSE_1	CALL_10
0x400fe2b	      0xb901000000	                              mov ecx, 1	      4945	intel_display.c	FUNCTION_148	ELSE_1	CALL_10
0x400fe30	      0xba00000080	                     mov edx, 0x80000000	      4945	intel_display.c	FUNCTION_148	ELSE_1	CALL_10
0x400fe35	      0xbe08340400	                        mov esi, 0x43408	      4945	intel_display.c	FUNCTION_148	ELSE_1	CALL_10
0x400fe3a	          0x4889df	                            mov rdi, rbx	      4945	intel_display.c	FUNCTION_148	ELSE_1	CALL_10
0x400fe3d	      0xe800000000	                          call 0x400fe42	      4945	intel_display.c	FUNCTION_148	ELSE_1	CALL_10
0x400fe42	      0xb900000080	                     mov ecx, 0x80000000	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400fe47	            0x6a00	                                  push 0	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400fe49	    0x41b932000000	                           mov r9d, 0x32	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400fe4f	            0x89ca	                            mov edx, ecx	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400fe51	    0x41b802000000	                              mov r8d, 2	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400fe57	      0xbe08340400	                        mov esi, 0x43408	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400fe5c	          0x4889df	                            mov rdi, rbx	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400fe5f	      0xe800000000	                          call 0x400fe64	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400fe64	            0x85c0	                           test eax, eax	      4951	intel_display.c	FUNCTION_148	ELSE_1	IF_3	CALL_11
0x400fe66	              0x5a	                                 pop rdx	      4951	intel_display.c	FUNCTION_148	ELSE_1	IF_3	CALL_11
0x400fe67	            0x7504	                           jne 0x400fe6d	      4951	intel_display.c	FUNCTION_148	ELSE_1	IF_3	CALL_11
0x400fe69	              0x5b	                                 pop rbx	      4956	intel_display.c	FUNCTION_148
0x400fe6a	              0x5d	                                 pop rbp	      4956	intel_display.c	FUNCTION_148
0x400fe6b	            0xf3c3	                                     ret	      4956	intel_display.c	FUNCTION_148
0x400fe6d	              0x5b	                                 pop rbx	      4956	intel_display.c	FUNCTION_148
0x400fe6e	              0x5d	                                 pop rbp	      4956	intel_display.c	FUNCTION_148
0x400fe6f	    0x48c7c7000000	                              mov rdi, 0	      4954	intel_display.c	FUNCTION_148	ELSE_1	CALL_12
0x400fe76	      0xe900000000	                           jmp 0x400fe7b	      4954	intel_display.c	FUNCTION_148	ELSE_1	CALL_12
0x400fe7b	    0x48c7c6000000	                              mov rsi, 0	      4932	intel_display.c	FUNCTION_148	CALL_4
0x400fe82	    0x48c7c7000000	                              mov rdi, 0	      4932	intel_display.c	FUNCTION_148	CALL_4
0x400fe89	      0xe800000000	                          call 0x400fe8e	      4932	intel_display.c	FUNCTION_148	CALL_4
0x400fe8e	             0xf0b	                                     ud2	      4932	intel_display.c	FUNCTION_148	CALL_4
0x400fe90	      0xe94fffffff	                           jmp 0x400fde4	      4932	intel_display.c	FUNCTION_148	CALL_4
0x400fe95	    0x48c7c6000000	                              mov rsi, 0	      4936	intel_display.c	FUNCTION_148	IF_2	CALL_8
0x400fe9c	    0x48c7c7000000	                              mov rdi, 0	      4936	intel_display.c	FUNCTION_148	IF_2	CALL_8
0x400fea3	      0xe800000000	                          call 0x400fea8	      4936	intel_display.c	FUNCTION_148	IF_2	CALL_8
0x400fea8	             0xf0b	                                     ud2	      4936	intel_display.c	FUNCTION_148	IF_2	CALL_8
0x400feaa	      0xe96bffffff	                           jmp 0x400fe1a	      4936	intel_display.c	FUNCTION_148	IF_2	CALL_8
__intel_display_resume	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,2:ELSE,0:functions,1:CALL,8	57
0x401a390	            0x4154	                                push r12	      3630	intel_display.c	FUNCTION_119
0x401a392	              0x55	                                push rbp	      3630	intel_display.c	FUNCTION_119
0x401a393	          0x4889f5	                            mov rbp, rsi	      3630	intel_display.c	FUNCTION_119
0x401a396	              0x53	                                push rbx	      3630	intel_display.c	FUNCTION_119
0x401a397	          0x4889d6	                            mov rsi, rdx	      3635	intel_display.c	FUNCTION_119	CALL_1
0x401a39a	          0x4889fb	                            mov rbx, rdi	      3630	intel_display.c	FUNCTION_119
0x401a39d	          0x4989d4	                            mov r12, rdx	      3630	intel_display.c	FUNCTION_119
0x401a3a0	        0x4883ec08	                              sub rsp, 8	      3630	intel_display.c	FUNCTION_119
0x401a3a4	      0xe8c7a6ffff	   call sym.intel_modeset_setup_hw_state	      3635	intel_display.c	FUNCTION_119	CALL_1
0x401a3a9	          0x4889df	                            mov rdi, rbx	      3636	intel_display.c	FUNCTION_119	CALL_3
0x401a3ac	      0xe800000000	                          call 0x401a3b1	      3636	intel_display.c	FUNCTION_119	CALL_3
0x401a3b1	          0x4885ed	                           test rbp, rbp	      3638	intel_display.c	FUNCTION_119	IF_1
0x401a3b4	            0x7467	                            je 0x401a41d	      3638	intel_display.c	FUNCTION_119	IF_1
0x401a3b6	        0x488b7508	                mov rsi, qword [rbp + 8]	      3646	intel_display.c	FUNCTION_119	FUNCTION_1
0x401a3ba	            0x31c9	                            xor ecx, ecx	      3646	intel_display.c	FUNCTION_119	FUNCTION_1
0x401a3bc	    0x8b8660030000	           mov eax, dword [rsi + 0x360] 	      3646	intel_display.c	FUNCTION_119	FUNCTION_1
0x401a3c2	            0x85c0	                           test eax, eax	      3646	intel_display.c	FUNCTION_119	FUNCTION_1
0x401a3c4	            0x7e2c	                           jle 0x401a3f2	      3646	intel_display.c	FUNCTION_119	FUNCTION_1
0x401a3c6	          0x4863c1	                         movsxd rax, ecx	      3646	intel_display.c	FUNCTION_119	FUNCTION_1
0x401a3c9	        0x488d0440	                  lea rax, [rax + rax*2]	      3646	intel_display.c	FUNCTION_119	FUNCTION_1
0x401a3cd	        0x48c1e004	                              shl rax, 4	      3646	intel_display.c	FUNCTION_119	FUNCTION_1
0x401a3d1	        0x48034520	             add rax, qword [rbp + 0x20]	      3646	intel_display.c	FUNCTION_119	FUNCTION_1
0x401a3d5	        0x48833800	                      cmp qword [rax], 0	      3646	intel_display.c	FUNCTION_119	FUNCTION_1
0x401a3d9	            0x740c	                            je 0x401a3e7	      3646	intel_display.c	FUNCTION_119	FUNCTION_1
0x401a3db	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3646	intel_display.c	FUNCTION_119	FUNCTION_1
0x401a3df	        0x80480a02	                  or byte [rax + 0xa], 2	      3652	intel_display.c	FUNCTION_119	FUNCTION_1
0x401a3e3	        0x488b7508	                mov rsi, qword [rbp + 8]	      3652	intel_display.c	FUNCTION_119	FUNCTION_1
0x401a3e7	          0x83c101	                              add ecx, 1	      3646	intel_display.c	FUNCTION_119	FUNCTION_1
0x401a3ea	    0x398e60030000	           cmp dword [rsi + 0x360], ecx 	      3646	intel_display.c	FUNCTION_119	FUNCTION_1
0x401a3f0	            0x7fd4	                            jg 0x401a3c6	      3646	intel_display.c	FUNCTION_119	FUNCTION_1
0x401a3f2	    0xf68378060000	          test byte [rbx + 0x678], 0x20 	      3656	intel_display.c	FUNCTION_119	IF_2	CALL_5
0x401a3f9	            0x7419	                            je 0x401a414	      3656	intel_display.c	FUNCTION_119	IF_2	CALL_5
0x401a3fb	          0x4c89e6	                            mov rsi, r12	      3659	intel_display.c	FUNCTION_119	CALL_7
0x401a3fe	          0x4889ef	                            mov rdi, rbp	      3659	intel_display.c	FUNCTION_119	CALL_7
0x401a401	      0xe800000000	                          call 0x401a406	      3659	intel_display.c	FUNCTION_119	CALL_7
0x401a406	          0x83f8dd	             cmp eax, 0xffffffffffffffdd	      3661	intel_display.c	FUNCTION_119	CALL_8
0x401a409	            0x741d	                            je 0x401a428	      3661	intel_display.c	FUNCTION_119	CALL_8
0x401a40b	        0x4883c408	                              add rsp, 8	      3663	intel_display.c	FUNCTION_119
0x401a40f	              0x5b	                                 pop rbx	      3663	intel_display.c	FUNCTION_119
0x401a410	              0x5d	                                 pop rbp	      3663	intel_display.c	FUNCTION_119
0x401a411	            0x415c	                                 pop r12	      3663	intel_display.c	FUNCTION_119
0x401a413	              0xc3	                                     ret	      3663	intel_display.c	FUNCTION_119
0x401a414	    0xc685cc020000	               mov byte [rbp + 0x2cc], 1	      3657	intel_display.c	FUNCTION_119	CALL_6
0x401a41b	            0xebde	                           jmp 0x401a3fb	      3657	intel_display.c	FUNCTION_119	CALL_6
0x401a41d	        0x4883c408	                              add rsp, 8	      3663	intel_display.c	FUNCTION_119
0x401a421	            0x31c0	                            xor eax, eax	      3639	intel_display.c	FUNCTION_119	IF_1
0x401a423	              0x5b	                                 pop rbx	      3663	intel_display.c	FUNCTION_119
0x401a424	              0x5d	                                 pop rbp	      3663	intel_display.c	FUNCTION_119
0x401a425	            0x415c	                                 pop r12	      3663	intel_display.c	FUNCTION_119
0x401a427	              0xc3	                                     ret	      3663	intel_display.c	FUNCTION_119
0x401a428	    0x48c7c6000000	                              mov rsi, 0	      3661	intel_display.c	FUNCTION_119	CALL_8
0x401a42f	    0x48c7c7000000	                              mov rdi, 0	      3661	intel_display.c	FUNCTION_119	CALL_8
0x401a436	        0x89442404	                mov dword [rsp + 4], eax	      3661	intel_display.c	FUNCTION_119	CALL_8
0x401a43a	      0xe800000000	                          call 0x401a43f	      3661	intel_display.c	FUNCTION_119	CALL_8
0x401a43f	             0xf0b	                                     ud2	      3661	intel_display.c	FUNCTION_119	CALL_8
0x401a441	        0x8b442404	                mov eax, dword [rsp + 4]	      3661	intel_display.c	FUNCTION_119	CALL_8
0x401a445	            0xebc4	                           jmp 0x401a40b	      3661	intel_display.c	FUNCTION_119	CALL_8
i9xx_cursor_get_hw_state	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,6	29
0x40026c0	            0x4154	                                push r12	      9780	intel_display.c	FUNCTION_289
0x40026c2	              0x55	                                push rbp	      9780	intel_display.c	FUNCTION_289
0x40026c3	              0x53	                                push rbx	      9780	intel_display.c	FUNCTION_289
0x40026c4	    0x448ba7880200	          mov r12d, dword [rdi + 0x288] 	      9783	intel_display.c	FUNCTION_289
0x40026cb	          0x488b1f	                    mov rbx, qword [rdi]	      9781	intel_display.c	FUNCTION_289	CALL_1
0x40026ce	          0x4489e6	                           mov esi, r12d	      9792	intel_display.c	FUNCTION_289	IF_1	CALL_3
0x40026d1	          0x4889df	                            mov rdi, rbx	      9792	intel_display.c	FUNCTION_289	IF_1	CALL_3
0x40026d4	      0xe800000000	                          call 0x40026d9	      9792	intel_display.c	FUNCTION_289	IF_1	CALL_3
0x40026d9	            0x84c0	                             test al, al	      9792	intel_display.c	FUNCTION_289	IF_1	CALL_3
0x40026db	            0x7444	                            je 0x4002721	      9792	intel_display.c	FUNCTION_289	IF_1	CALL_3
0x40026dd	          0x4963c4	                        movsxd rax, r12d	      9795	intel_display.c	FUNCTION_289	CALL_5
0x40026e0	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	      9795	intel_display.c	FUNCTION_289	CALL_5
0x40026e6	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	      9795	intel_display.c	FUNCTION_289	CALL_5
0x40026ed	    0x8b8483bc0600	   mov eax, dword [rbx + rax*4 + 0x6bc] 	      9795	intel_display.c	FUNCTION_289	CALL_5
0x40026f4	    0x2b83bc060000	            sub eax, dword [rbx + 0x6bc]	      9795	intel_display.c	FUNCTION_289	CALL_5
0x40026fa	          0x4889df	                            mov rdi, rbx	      9795	intel_display.c	FUNCTION_289	CALL_5
0x40026fd	    0x8db410800007	          lea esi, [rax + rdx + 0x70080]	      9795	intel_display.c	FUNCTION_289	CALL_5
0x4002704	      0xba01000000	                              mov edx, 1	      9795	intel_display.c	FUNCTION_289	CALL_5
0x4002709	      0xe800000000	                          call 0x400270e	      9795	intel_display.c	FUNCTION_289	CALL_5
0x400270e	            0xa827	                           test al, 0x27	      9795	intel_display.c	FUNCTION_289	CALL_5
0x4002710	          0x4489e6	                           mov esi, r12d	      9797	intel_display.c	FUNCTION_289	CALL_6
0x4002713	          0x4889df	                            mov rdi, rbx	      9797	intel_display.c	FUNCTION_289	CALL_6
0x4002716	        0x400f95c5	                               setne bpl	      9795	intel_display.c	FUNCTION_289	CALL_5
0x400271a	      0xe800000000	                          call 0x400271f	      9797	intel_display.c	FUNCTION_289	CALL_6
0x400271f	            0x89e8	                            mov eax, ebp	      9799	intel_display.c	FUNCTION_289
0x4002721	              0x5b	                                 pop rbx	      9800	intel_display.c	FUNCTION_289
0x4002722	              0x5d	                                 pop rbp	      9800	intel_display.c	FUNCTION_289
0x4002723	            0x415c	                                 pop r12	      9800	intel_display.c	FUNCTION_289
0x4002725	              0xc3	                                     ret	      9800	intel_display.c	FUNCTION_289
_intel_compute_tile_offset	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,3:ELSE,2:functions,0:CALL,5	108
0x4001930	            0x4156	                                push r14	      2328	intel_display.c	FUNCTION_83
0x4001932	            0x4155	                                push r13	      2328	intel_display.c	FUNCTION_83
0x4001934	          0x4989ca	                            mov r10, rcx	      2328	intel_display.c	FUNCTION_83
0x4001937	            0x4154	                                push r12	      2328	intel_display.c	FUNCTION_83
0x4001939	              0x55	                                push rbp	      2328	intel_display.c	FUNCTION_83
0x400193a	          0x4889f5	                            mov rbp, rsi	      2328	intel_display.c	FUNCTION_83
0x400193d	              0x53	                                push rbx	      2328	intel_display.c	FUNCTION_83
0x400193e	          0x4989d4	                            mov r12, rdx	      2328	intel_display.c	FUNCTION_83
0x4001941	        0x4883ec18	                           sub rsp, 0x18	      2328	intel_display.c	FUNCTION_83
0x4001945	        0x488b7148	            mov rsi, qword [rcx + 0x48] 	      2330	intel_display.c	FUNCTION_83
0x4001949	        0x488b5178	            mov rdx, qword [rcx + 0x78] 	      2329	intel_display.c	FUNCTION_83
0x400194d	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      2328	intel_display.c	FUNCTION_83
0x4001951	          0x4963c8	                         movsxd rcx, r8d	      2330	intel_display.c	FUNCTION_83
0x4001954	    0x65488b1c2528	                mov rbx, qword gs:[0x28]	      2328	intel_display.c	FUNCTION_83
0x400195d	      0x48895c2410	             mov qword [rsp + 0x10], rbx	      2328	intel_display.c	FUNCTION_83
0x4001962	            0x31db	                            xor ebx, ebx	      2328	intel_display.c	FUNCTION_83
0x4001964	    0x440fb66c0e06	       movzx r13d, byte [rsi + rcx + 6] 	      2330	intel_display.c	FUNCTION_83
0x400196a	      0xbbffffffff	                     mov ebx, 0xffffffff	      2330	intel_display.c	FUNCTION_83
0x400196f	            0x85c0	                           test eax, eax	      2333	intel_display.c	FUNCTION_83	IF_1
0x4001971	            0x7406	                            je 0x4001979	      2333	intel_display.c	FUNCTION_83	IF_1
0x4001973	             0x1d8	                            add eax, ebx	      2334	intel_display.c	FUNCTION_83	IF_1
0x4001975	            0x89c3	                            mov ebx, eax	      2334	intel_display.c	FUNCTION_83	IF_1
0x4001977	            0xf7d3	                                 not ebx	      2334	intel_display.c	FUNCTION_83	IF_1
0x4001979	          0x4885d2	                           test rdx, rdx	      2336	intel_display.c	FUNCTION_83	IF_2
0x400197c	     0xf849a000000	                            je 0x4001a1c	      2336	intel_display.c	FUNCTION_83	IF_2
0x4001982	     0xfb7875a0600	          movzx eax, word [rdi + 0x65a] 	      1913	intel_display.c	FUNCTION_64	CALL_1
0x4001989	      0x488d4c240c	                    lea rcx, [rsp + 0xc]	      2341	intel_display.c	FUNCTION_83	IF_2	CALL_2
0x400198e	      0x488d542408	                      lea rdx, [rsp + 8]	      2341	intel_display.c	FUNCTION_83	IF_2	CALL_2
0x4001993	          0x4489c6	                            mov esi, r8d	      2341	intel_display.c	FUNCTION_83	IF_2	CALL_2
0x4001996	          0x4c89d7	                            mov rdi, r10	      2341	intel_display.c	FUNCTION_83	IF_2	CALL_2
0x4001999	      0x44894c2404	                mov dword [rsp + 4], r9d	      2341	intel_display.c	FUNCTION_83	IF_2	CALL_2
0x400199e	          0x83e002	                              and eax, 2	      1913	intel_display.c	FUNCTION_64	CALL_1
0x40019a1	        0x6683f801	                               cmp ax, 1	      1913	intel_display.c	FUNCTION_64	CALL_1
0x40019a5	          0x4519f6	                          sbb r14d, r14d	      1913	intel_display.c	FUNCTION_64	CALL_1
0x40019a8	    0x4181e6000800	                         and r14d, 0x800	      1913	intel_display.c	FUNCTION_64	CALL_1
0x40019af	      0xe81cffffff	                call sym.intel_tile_dims	      2341	intel_display.c	FUNCTION_83	IF_2	CALL_2
0x40019b4	    0x4181c6000800	                         add r14d, 0x800	      1913	intel_display.c	FUNCTION_64	CALL_1
0x40019bb	      0xf64424480a	            test byte [rsp + 0x48], 0xa 	      2343	intel_display.c	FUNCTION_83	IF_2	IF_3	CALL_3
0x40019c0	      0x448b4c2404	                mov r9d, dword [rsp + 4]	      2343	intel_display.c	FUNCTION_83	IF_2	IF_3	CALL_3
0x40019c5	     0xf85a1000000	                           jne 0x4001a6c	      2343	intel_display.c	FUNCTION_83	IF_2	IF_3	CALL_3
0x40019cb	        0x8b742408	                mov esi, dword [rsp + 8]	      2347	intel_display.c	FUNCTION_83	IF_2	ELSE_1
0x40019cf	          0x4489c8	                            mov eax, r9d	      2347	intel_display.c	FUNCTION_83	IF_2	ELSE_1
0x40019d2	            0x31d2	                            xor edx, edx	      2347	intel_display.c	FUNCTION_83	IF_2	ELSE_1
0x40019d4	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      2347	intel_display.c	FUNCTION_83	IF_2	ELSE_1
0x40019d8	        0x440fafee	                          imul r13d, esi	      2347	intel_display.c	FUNCTION_83	IF_2	ELSE_1
0x40019dc	          0x41f7f5	                                div r13d	      2347	intel_display.c	FUNCTION_83	IF_2	ELSE_1
0x40019df	          0x4189c1	                            mov r9d, eax	      2347	intel_display.c	FUNCTION_83	IF_2	ELSE_1
0x40019e2	        0x418b0424	                    mov eax, dword [r12]	      2350	intel_display.c	FUNCTION_83	IF_2
0x40019e6	            0x31d2	                            xor edx, edx	      2351	intel_display.c	FUNCTION_83	IF_2
0x40019e8	          0x4589f0	                           mov r8d, r14d	      2359	intel_display.c	FUNCTION_83	IF_2	CALL_5
0x40019eb	            0xf7f1	                                 div ecx	      2351	intel_display.c	FUNCTION_83	IF_2
0x40019ed	        0x41891424	                    mov dword [r12], edx	      2351	intel_display.c	FUNCTION_83	IF_2
0x40019f1	            0x89c7	                            mov edi, eax	      2351	intel_display.c	FUNCTION_83	IF_2
0x40019f3	          0x8b4500	                    mov eax, dword [rbp]	      2353	intel_display.c	FUNCTION_83	IF_2
0x40019f6	            0x31d2	                            xor edx, edx	      2354	intel_display.c	FUNCTION_83	IF_2
0x40019f8	        0x410faff9	                           imul edi, r9d	      2356	intel_display.c	FUNCTION_83	IF_2
0x40019fc	            0xf7f6	                                 div esi	      2354	intel_display.c	FUNCTION_83	IF_2
0x40019fe	             0x1f8	                            add eax, edi	      2356	intel_display.c	FUNCTION_83	IF_2
0x4001a00	          0x895500	                    mov dword [rbp], edx	      2354	intel_display.c	FUNCTION_83	IF_2
0x4001a03	          0x4889ef	                            mov rdi, rbp	      2359	intel_display.c	FUNCTION_83	IF_2	CALL_5
0x4001a06	        0x410fafc6	                          imul eax, r14d	      2356	intel_display.c	FUNCTION_83	IF_2
0x4001a0a	            0x89f2	                            mov edx, esi	      2359	intel_display.c	FUNCTION_83	IF_2	CALL_5
0x4001a0c	          0x4c89e6	                            mov rsi, r12	      2359	intel_display.c	FUNCTION_83	IF_2	CALL_5
0x4001a0f	            0x21c3	                            and ebx, eax	      2357	intel_display.c	FUNCTION_83	IF_2
0x4001a11	              0x53	                                push rbx	      2359	intel_display.c	FUNCTION_83	IF_2	CALL_5
0x4001a12	              0x50	                                push rax	      2359	intel_display.c	FUNCTION_83	IF_2	CALL_5
0x4001a13	      0xe808faffff	     call sym.__intel_adjust_tile_offset	      2359	intel_display.c	FUNCTION_83	IF_2	CALL_5
0x4001a18	              0x58	                                 pop rax	      2359	intel_display.c	FUNCTION_83	IF_2	CALL_5
0x4001a19	              0x5a	                                 pop rdx	      2359	intel_display.c	FUNCTION_83	IF_2	CALL_5
0x4001a1a	            0xeb31	                           jmp 0x4001a4d	      2359	intel_display.c	FUNCTION_83	IF_2	CALL_5
0x4001a1c	        0x418b0c24	                    mov ecx, dword [r12]	      2363	intel_display.c	FUNCTION_83	ELSE_2
0x4001a20	          0x8b7500	                    mov esi, dword [rbp]	      2363	intel_display.c	FUNCTION_83	ELSE_2
0x4001a23	            0x31d2	                            xor edx, edx	      2366	intel_display.c	FUNCTION_83	ELSE_2
0x4001a25	        0x410fafc9	                           imul ecx, r9d	      2363	intel_display.c	FUNCTION_83	ELSE_2
0x4001a29	        0x410faff5	                          imul esi, r13d	      2363	intel_display.c	FUNCTION_83	ELSE_2
0x4001a2d	             0x1f1	                            add ecx, esi	      2363	intel_display.c	FUNCTION_83	ELSE_2
0x4001a2f	            0x21cb	                            and ebx, ecx	      2364	intel_display.c	FUNCTION_83	ELSE_2
0x4001a31	            0x21c1	                            and ecx, eax	      2366	intel_display.c	FUNCTION_83	ELSE_2
0x4001a33	            0x89c8	                            mov eax, ecx	      2366	intel_display.c	FUNCTION_83	ELSE_2
0x4001a35	          0x41f7f1	                                 div r9d	      2366	intel_display.c	FUNCTION_83	ELSE_2
0x4001a38	            0x31d2	                            xor edx, edx	      2367	intel_display.c	FUNCTION_83	ELSE_2
0x4001a3a	        0x440fafc8	                           imul r9d, eax	      2367	intel_display.c	FUNCTION_83	ELSE_2
0x4001a3e	        0x41890424	                    mov dword [r12], eax	      2366	intel_display.c	FUNCTION_83	ELSE_2
0x4001a42	            0x89c8	                            mov eax, ecx	      2367	intel_display.c	FUNCTION_83	ELSE_2
0x4001a44	          0x4429c8	                            sub eax, r9d	      2367	intel_display.c	FUNCTION_83	ELSE_2
0x4001a47	          0x41f7f5	                                div r13d	      2367	intel_display.c	FUNCTION_83	ELSE_2
0x4001a4a	          0x894500	                    mov dword [rbp], eax	      2367	intel_display.c	FUNCTION_83	ELSE_2
0x4001a4d	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2371	intel_display.c	FUNCTION_83
0x4001a52	    0x6548333c2528	                xor rdi, qword gs:[0x28]	      2371	intel_display.c	FUNCTION_83
0x4001a5b	            0x89d8	                            mov eax, ebx	      2371	intel_display.c	FUNCTION_83
0x4001a5d	            0x752c	                           jne 0x4001a8b	      2371	intel_display.c	FUNCTION_83
0x4001a5f	        0x4883c418	                           add rsp, 0x18	      2371	intel_display.c	FUNCTION_83
0x4001a63	              0x5b	                                 pop rbx	      2371	intel_display.c	FUNCTION_83
0x4001a64	              0x5d	                                 pop rbp	      2371	intel_display.c	FUNCTION_83
0x4001a65	            0x415c	                                 pop r12	      2371	intel_display.c	FUNCTION_83
0x4001a67	            0x415d	                                 pop r13	      2371	intel_display.c	FUNCTION_83
0x4001a69	            0x415e	                                 pop r14	      2371	intel_display.c	FUNCTION_83
0x4001a6b	              0xc3	                                     ret	      2371	intel_display.c	FUNCTION_83
0x4001a6c	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      2344	intel_display.c	FUNCTION_83	IF_2	IF_3
0x4001a70	          0x4489c8	                            mov eax, r9d	      2344	intel_display.c	FUNCTION_83	IF_2	IF_3
0x4001a73	            0x31d2	                            xor edx, edx	      2344	intel_display.c	FUNCTION_83	IF_2	IF_3
0x4001a75	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      2345	intel_display.c	FUNCTION_83	IF_2	IF_3	CALL_4
0x4001a79	            0xf7f6	                                 div esi	      2344	intel_display.c	FUNCTION_83	IF_2	IF_3
0x4001a7b	        0x89742408	                mov dword [rsp + 8], esi	      2345	intel_display.c	FUNCTION_83	IF_2	IF_3	CALL_4
0x4001a7f	        0x894c240c	              mov dword [rsp + 0xc], ecx	      2345	intel_display.c	FUNCTION_83	IF_2	IF_3	CALL_4
0x4001a83	          0x4189c1	                            mov r9d, eax	      2344	intel_display.c	FUNCTION_83	IF_2	IF_3
0x4001a86	      0xe957ffffff	                           jmp 0x40019e2	      2344	intel_display.c	FUNCTION_83	IF_2	IF_3
0x4001a8b	      0xe800000000	            call sym.skylake_pfit_enable	      2371	intel_display.c	FUNCTION_83
vlv_force_pll_off	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,1:functions,0:CALL,3	4
0x40149c0	    0xf68766060000	          test byte [rdi + 0x666], 0x20 	      6980	intel_display.c	FUNCTION_215	IF_1	CALL_1
0x40149c7	            0x7505	                           jne 0x40149ce	      6980	intel_display.c	FUNCTION_215	IF_1	CALL_1
0x40149c9	      0xe9a28fffff	                 jmp sym.vlv_disable_pll	      6983	intel_display.c	FUNCTION_215	CALL_3
0x40149ce	      0xe95d8effff	                 jmp sym.chv_disable_pll	      6981	intel_display.c	FUNCTION_215	CALL_2
pnv_calc_dpll_params	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,3	64
0x40016b0	          0x8b4e0c	              mov ecx, dword [rsi + 0xc]	       509	intel_display.c	FUNCTION_7
0x40016b3	          0x8b4608	                mov eax, dword [rsi + 8]	       508	intel_display.c	FUNCTION_7
0x40016b6	         0xfaf4e10	            imul ecx, dword [rsi + 0x10]	       509	intel_display.c	FUNCTION_7
0x40016ba	          0x448b06	                    mov r8d, dword [rsi]	       510	intel_display.c	FUNCTION_7	IF_1	CALL_1
0x40016bd	          0x83c002	                              add eax, 2	       508	intel_display.c	FUNCTION_7
0x40016c0	          0x89461c	             mov dword [rsi + 0x1c], eax	       508	intel_display.c	FUNCTION_7
0x40016c3	          0x4585c0	                           test r8d, r8d	       510	intel_display.c	FUNCTION_7	IF_1	CALL_1
0x40016c6	          0x894e20	             mov dword [rsi + 0x20], ecx	       509	intel_display.c	FUNCTION_7
0x40016c9	            0x744c	                            je 0x4001717	       510	intel_display.c	FUNCTION_7	IF_1	CALL_1
0x40016cb	            0x85c9	                           test ecx, ecx	       510	intel_display.c	FUNCTION_7	IF_1	CALL_1
0x40016cd	            0x7448	                            je 0x4001717	       510	intel_display.c	FUNCTION_7	IF_1	CALL_1
0x40016cf	           0xfaff8	                           imul edi, eax	       512	intel_display.c	FUNCTION_7	CALL_2
0x40016d2	            0x85ff	                           test edi, edi	       512	intel_display.c	FUNCTION_7	CALL_2
0x40016d4	           0xf9ec2	                                setle dl	       512	intel_display.c	FUNCTION_7	CALL_2
0x40016d7	          0x4585c0	                           test r8d, r8d	       512	intel_display.c	FUNCTION_7	CALL_2
0x40016da	           0xf9fc0	                                 setg al	       512	intel_display.c	FUNCTION_7	CALL_2
0x40016dd	            0x38c2	                              cmp dl, al	       512	intel_display.c	FUNCTION_7	CALL_2
0x40016df	            0x744e	                            je 0x400172f	       512	intel_display.c	FUNCTION_7	CALL_2
0x40016e1	          0x4489c0	                            mov eax, r8d	       512	intel_display.c	FUNCTION_7	CALL_2
0x40016e4	          0xc1e81f	                           shr eax, 0x1f	       512	intel_display.c	FUNCTION_7	CALL_2
0x40016e7	          0x4401c0	                            add eax, r8d	       512	intel_display.c	FUNCTION_7	CALL_2
0x40016ea	            0xd1f8	                              sar eax, 1	       512	intel_display.c	FUNCTION_7	CALL_2
0x40016ec	             0x1f8	                            add eax, edi	       512	intel_display.c	FUNCTION_7	CALL_2
0x40016ee	              0x99	                                     cdq	       512	intel_display.c	FUNCTION_7	CALL_2
0x40016ef	          0x41f7f8	                                idiv r8d	       512	intel_display.c	FUNCTION_7	CALL_2
0x40016f2	            0x85c0	                           test eax, eax	       513	intel_display.c	FUNCTION_7	CALL_3
0x40016f4	          0x894618	             mov dword [rsi + 0x18], eax	       512	intel_display.c	FUNCTION_7	CALL_2
0x40016f7	        0x400f9ec7	                               setle dil	       513	intel_display.c	FUNCTION_7	CALL_3
0x40016fb	            0x85c9	                           test ecx, ecx	       513	intel_display.c	FUNCTION_7	CALL_3
0x40016fd	           0xf9fc2	                                 setg dl	       513	intel_display.c	FUNCTION_7	CALL_3
0x4001700	          0x4038d7	                             cmp dil, dl	       513	intel_display.c	FUNCTION_7	CALL_3
0x4001703	            0x89ca	                            mov edx, ecx	       513	intel_display.c	FUNCTION_7	CALL_3
0x4001705	            0x743d	                            je 0x4001744	       513	intel_display.c	FUNCTION_7	CALL_3
0x4001707	          0xc1ea1f	                           shr edx, 0x1f	       513	intel_display.c	FUNCTION_7	CALL_3
0x400170a	             0x1ca	                            add edx, ecx	       513	intel_display.c	FUNCTION_7	CALL_3
0x400170c	            0xd1fa	                              sar edx, 1	       513	intel_display.c	FUNCTION_7	CALL_3
0x400170e	             0x1d0	                            add eax, edx	       513	intel_display.c	FUNCTION_7	CALL_3
0x4001710	              0x99	                                     cdq	       513	intel_display.c	FUNCTION_7	CALL_3
0x4001711	            0xf7f9	                                idiv ecx	       513	intel_display.c	FUNCTION_7	CALL_3
0x4001713	          0x894614	             mov dword [rsi + 0x14], eax	       513	intel_display.c	FUNCTION_7	CALL_3
0x4001716	              0xc3	                                     ret	       515	intel_display.c	FUNCTION_7
0x4001717	    0x48c7c6000000	                              mov rsi, 0	       510	intel_display.c	FUNCTION_7	IF_1	CALL_1
0x400171e	    0x48c7c7000000	                              mov rdi, 0	       510	intel_display.c	FUNCTION_7	IF_1	CALL_1
0x4001725	      0xe800000000	                          call 0x400172a	       510	intel_display.c	FUNCTION_7	IF_1	CALL_1
0x400172a	             0xf0b	                                     ud2	       510	intel_display.c	FUNCTION_7	IF_1	CALL_1
0x400172c	            0x31c0	                            xor eax, eax	       511	intel_display.c	FUNCTION_7	IF_1
0x400172e	              0xc3	                                     ret	       511	intel_display.c	FUNCTION_7	IF_1
0x400172f	          0x4489c0	                            mov eax, r8d	       512	intel_display.c	FUNCTION_7	CALL_2
0x4001732	          0xc1e81f	                           shr eax, 0x1f	       512	intel_display.c	FUNCTION_7	CALL_2
0x4001735	          0x4401c0	                            add eax, r8d	       512	intel_display.c	FUNCTION_7	CALL_2
0x4001738	            0xd1f8	                              sar eax, 1	       512	intel_display.c	FUNCTION_7	CALL_2
0x400173a	            0x29c7	                            sub edi, eax	       512	intel_display.c	FUNCTION_7	CALL_2
0x400173c	            0x89f8	                            mov eax, edi	       512	intel_display.c	FUNCTION_7	CALL_2
0x400173e	              0x99	                                     cdq	       512	intel_display.c	FUNCTION_7	CALL_2
0x400173f	          0x41f7f8	                                idiv r8d	       512	intel_display.c	FUNCTION_7	CALL_2
0x4001742	            0xebae	                           jmp 0x40016f2	       512	intel_display.c	FUNCTION_7	CALL_2
0x4001744	          0xc1ea1f	                           shr edx, 0x1f	       513	intel_display.c	FUNCTION_7	CALL_3
0x4001747	             0x1ca	                            add edx, ecx	       513	intel_display.c	FUNCTION_7	CALL_3
0x4001749	            0xd1fa	                              sar edx, 1	       513	intel_display.c	FUNCTION_7	CALL_3
0x400174b	            0x29d0	                            sub eax, edx	       513	intel_display.c	FUNCTION_7	CALL_3
0x400174d	              0x99	                                     cdq	       513	intel_display.c	FUNCTION_7	CALL_3
0x400174e	            0xf7f9	                                idiv ecx	       513	intel_display.c	FUNCTION_7	CALL_3
0x4001750	          0x894614	             mov dword [rsi + 0x14], eax	       513	intel_display.c	FUNCTION_7	CALL_3
0x4001753	              0xc3	                                     ret	       515	intel_display.c	FUNCTION_7
intel_set_plane_visible	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,1:functions,0:CALL,8	30
0x4002a00	          0x4c8b06	                     mov r8, qword [rsi]	      2748	intel_display.c	FUNCTION_93	CALL_1
0x4002a03	      0xb801000000	                              mov eax, 1	      2754	intel_display.c	FUNCTION_93	IF_1	CALL_3
0x4002a08	            0x84d2	                             test dl, dl	      2753	intel_display.c	FUNCTION_93	IF_1
0x4002a0a	          0x885674	               mov byte [rsi + 0x74], dl	      2750	intel_display.c	FUNCTION_93
0x4002a0d	          0x4889c2	                            mov rdx, rax	      2754	intel_display.c	FUNCTION_93	IF_1	CALL_3
0x4002a10	    0x418b884c0200	            mov ecx, dword [r8 + 0x24c] 	      2754	intel_display.c	FUNCTION_93	IF_1	CALL_3
0x4002a17	            0x753f	                           jne 0x4002a58	      2753	intel_display.c	FUNCTION_93	IF_1
0x4002a19	          0x48d3e2	                             shl rdx, cl	      2757	intel_display.c	FUNCTION_93	ELSE_1	CALL_6
0x4002a1c	          0x48f7d2	                                 not rdx	      2757	intel_display.c	FUNCTION_93	ELSE_1	CALL_6
0x4002a1f	          0x21570c	              and dword [rdi + 0xc], edx	      2757	intel_display.c	FUNCTION_93	ELSE_1	CALL_6
0x4002a22	    0x418b88840200	            mov ecx, dword [r8 + 0x284] 	      2758	intel_display.c	FUNCTION_93	ELSE_1	CALL_7
0x4002a29	          0x48d3e0	                             shl rax, cl	      2758	intel_display.c	FUNCTION_93	ELSE_1	CALL_7
0x4002a2c	          0x4889c1	                            mov rcx, rax	      2758	intel_display.c	FUNCTION_93	ELSE_1	CALL_7
0x4002a2f	            0xf7d1	                                 not ecx	      2758	intel_display.c	FUNCTION_93	ELSE_1	CALL_7
0x4002a31	    0x228f90040000	              and cl, byte [rdi + 0x490]	      2758	intel_display.c	FUNCTION_93	ELSE_1	CALL_7
0x4002a37	    0x888f90040000	              mov byte [rdi + 0x490], cl	      2758	intel_display.c	FUNCTION_93	ELSE_1	CALL_7
0x4002a3d	          0x488b07	                    mov rax, qword [rdi]	      2761	intel_display.c	FUNCTION_93	CALL_8
0x4002a40	           0xfb6c9	                           movzx ecx, cl	      2761	intel_display.c	FUNCTION_93	CALL_8
0x4002a43	    0x48c7c6000000	                              mov rsi, 0	      2761	intel_display.c	FUNCTION_93	CALL_8
0x4002a4a	      0xbf04000000	                              mov edi, 4	      2761	intel_display.c	FUNCTION_93	CALL_8
0x4002a4f	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2761	intel_display.c	FUNCTION_93	CALL_8
0x4002a53	      0xe900000000	                           jmp 0x4002a58	      2761	intel_display.c	FUNCTION_93	CALL_8
0x4002a58	          0x48d3e2	                             shl rdx, cl	      2754	intel_display.c	FUNCTION_93	IF_1	CALL_3
0x4002a5b	           0x9570c	               or dword [rdi + 0xc], edx	      2754	intel_display.c	FUNCTION_93	IF_1	CALL_3
0x4002a5e	    0x418b88840200	            mov ecx, dword [r8 + 0x284] 	      2755	intel_display.c	FUNCTION_93	IF_1	CALL_4
0x4002a65	          0x48d3e0	                             shl rax, cl	      2755	intel_display.c	FUNCTION_93	IF_1	CALL_4
0x4002a68	          0x4889c1	                            mov rcx, rax	      2755	intel_display.c	FUNCTION_93	IF_1	CALL_4
0x4002a6b	     0xa8f90040000	               or cl, byte [rdi + 0x490]	      2755	intel_display.c	FUNCTION_93	IF_1	CALL_4
0x4002a71	    0x888f90040000	              mov byte [rdi + 0x490], cl	      2755	intel_display.c	FUNCTION_93	IF_1	CALL_4
0x4002a77	            0xebc4	                           jmp 0x4002a3d	      2755	intel_display.c	FUNCTION_93	IF_1	CALL_4
intel_disable_pipe	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,4:ELSE,0:functions,0:CALL,10	89
0x40065d0	            0x4155	                                push r13	      1874	intel_display.c	FUNCTION_63
0x40065d2	            0x4154	                                push r12	      1874	intel_display.c	FUNCTION_63
0x40065d4	    0x48c7c6000000	                              mov rsi, 0	      1882	intel_display.c	FUNCTION_63	CALL_4
0x40065db	              0x55	                                push rbp	      1874	intel_display.c	FUNCTION_63
0x40065dc	              0x53	                                push rbx	      1874	intel_display.c	FUNCTION_63
0x40065dd	          0x4989fd	                            mov r13, rdi	      1874	intel_display.c	FUNCTION_63
0x40065e0	        0x4883ec08	                              sub rsp, 8	      1874	intel_display.c	FUNCTION_63
0x40065e4	          0x488b2f	                    mov rbp, qword [rdi]	      1875	intel_display.c	FUNCTION_63	CALL_1
0x40065e7	    0x448ba73c0200	          mov r12d, dword [rdi + 0x23c] 	      1877	intel_display.c	FUNCTION_63
0x40065ee	      0xbf04000000	                              mov edi, 4	      1882	intel_display.c	FUNCTION_63	CALL_4
0x40065f3	    0x8b85b0040000	           mov eax, dword [rbp + 0x4b0] 	      1882	intel_display.c	FUNCTION_63	CALL_4
0x40065f9	        0x488b5d00	                    mov rbx, qword [rbp]	      1876	intel_display.c	FUNCTION_63	CALL_2
0x40065fd	          0x8d5041	                   lea edx, [rax + 0x41]	      1882	intel_display.c	FUNCTION_63	CALL_4
0x4006600	      0xe800000000	                          call 0x4006605	      1882	intel_display.c	FUNCTION_63	CALL_4
0x4006605	        0x488b7d00	                    mov rdi, qword [rbp]	      1888	intel_display.c	FUNCTION_63	CALL_5
0x4006609	    0x488db5b00400	                  lea rsi, [rbp + 0x4b0]	      1888	intel_display.c	FUNCTION_63	CALL_5
0x4006610	      0xe84bfeffff	 call sym.assert_planes_disabled.isra.98	      1888	intel_display.c	FUNCTION_63	CALL_5
0x4006615	    0x428b84a38006	   mov eax, dword [rbx + r12*4 + 0x680] 	      1890	intel_display.c	FUNCTION_63	CALL_6
0x400661d	    0x2b8380060000	            sub eax, dword [rbx + 0x680]	      1890	intel_display.c	FUNCTION_63	CALL_6
0x4006623	          0x4889df	                            mov rdi, rbx	      1891	intel_display.c	FUNCTION_63	CALL_7
0x4006626	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	      1890	intel_display.c	FUNCTION_63	CALL_6
0x400662c	    0x8dac10080007	          lea ebp, [rax + rdx + 0x70008]	      1890	intel_display.c	FUNCTION_63	CALL_6
0x4006633	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      1891	intel_display.c	FUNCTION_63	CALL_7
0x400663a	      0xba01000000	                              mov edx, 1	      1891	intel_display.c	FUNCTION_63	CALL_7
0x400663f	            0x89ee	                            mov esi, ebp	      1891	intel_display.c	FUNCTION_63	CALL_7
0x4006641	      0xe800000000	                          call 0x4006646	      1891	intel_display.c	FUNCTION_63	CALL_7
0x4006646	            0x85c0	                           test eax, eax	      1892	intel_display.c	FUNCTION_63	IF_1
0x4006648	            0x780b	                            js 0x4006655	      1892	intel_display.c	FUNCTION_63	IF_1
0x400664a	        0x4883c408	                              add rsp, 8	      1909	intel_display.c	FUNCTION_63
0x400664e	              0x5b	                                 pop rbx	      1909	intel_display.c	FUNCTION_63
0x400664f	              0x5d	                                 pop rbp	      1909	intel_display.c	FUNCTION_63
0x4006650	            0x415c	                                 pop r12	      1909	intel_display.c	FUNCTION_63
0x4006652	            0x415d	                                 pop r13	      1909	intel_display.c	FUNCTION_63
0x4006654	              0xc3	                                     ret	      1909	intel_display.c	FUNCTION_63
0x4006655	    0x4180bd4b0300	               cmp byte [r13 + 0x34b], 0	      1899	intel_display.c	FUNCTION_63	IF_2
0x400665d	     0xf84a5000000	                            je 0x4006708	      1899	intel_display.c	FUNCTION_63	IF_2
0x4006663	      0x25ffffffbf	                     and eax, 0xbfffffff	      1900	intel_display.c	FUNCTION_63	IF_2
0x4006668	    0xf68364060000	              test byte [rbx + 0x664], 2	      1903	intel_display.c	FUNCTION_63	IF_3	CALL_8
0x400666f	            0x7505	                           jne 0x4006676	      1903	intel_display.c	FUNCTION_63	IF_3	CALL_8
0x4006671	      0x25ffffff7f	                     and eax, 0x7fffffff	      1904	intel_display.c	FUNCTION_63	IF_3
0x4006676	            0x89c2	                            mov edx, eax	      1906	intel_display.c	FUNCTION_63	CALL_9
0x4006678	        0x89442404	                mov dword [rsp + 4], eax	      1906	intel_display.c	FUNCTION_63	CALL_9
0x400667c	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	      1906	intel_display.c	FUNCTION_63	CALL_9
0x4006683	      0xb901000000	                              mov ecx, 1	      1906	intel_display.c	FUNCTION_63	CALL_9
0x4006688	            0x89ee	                            mov esi, ebp	      1906	intel_display.c	FUNCTION_63	CALL_9
0x400668a	          0x4889df	                            mov rdi, rbx	      1906	intel_display.c	FUNCTION_63	CALL_9
0x400668d	      0xe800000000	                          call 0x4006692	      1906	intel_display.c	FUNCTION_63	CALL_9
0x4006692	        0x8b442404	                mov eax, dword [rsp + 4]	      1907	intel_display.c	FUNCTION_63	IF_4
0x4006696	            0x85c0	                           test eax, eax	      1907	intel_display.c	FUNCTION_63	IF_4
0x4006698	            0x78b0	                            js 0x400664a	      1907	intel_display.c	FUNCTION_63	IF_4
0x400669a	        0x498b7d00	                    mov rdi, qword [r13]	      1907	intel_display.c	FUNCTION_63	IF_4
0x400669e	          0x488b07	                    mov rax, qword [rdi]	      1045	intel_display.c	FUNCTION_27	CALL_2
0x40066a1	    0x80b85c060000	               cmp byte [rax + 0x65c], 3	      1047	intel_display.c	FUNCTION_27	IF_1	CALL_3
0x40066a8	     0xf8684000000	                           jbe 0x4006732	      1047	intel_display.c	FUNCTION_27	IF_1	CALL_3
0x40066ae	    0x418b953c0200	           mov edx, dword [r13 + 0x23c] 	      1049	intel_display.c	FUNCTION_27	IF_1	CALL_4
0x40066b5	    0x8b886c060000	           mov ecx, dword [rax + 0x66c] 	      1049	intel_display.c	FUNCTION_27	IF_1	CALL_4
0x40066bb	    0x41b964000000	                           mov r9d, 0x64	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x40066c1	    0x41b802000000	                              mov r8d, 2	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x40066c7	          0x4889c7	                            mov rdi, rax	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x40066ca	    0x8b9490800600	   mov edx, dword [rax + rdx*4 + 0x680] 	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x40066d1	    0x2b9080060000	            sub edx, dword [rax + 0x680]	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x40066d7	            0x6a00	                                  push 0	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x40066d9	    0x8db40a080007	          lea esi, [rdx + rcx + 0x70008]	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x40066e0	            0x31c9	                            xor ecx, ecx	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x40066e2	      0xba00000040	                     mov edx, 0x40000000	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x40066e7	      0xe800000000	                          call 0x40066ec	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x40066ec	            0x85c0	                           test eax, eax	      1052	intel_display.c	FUNCTION_27	IF_1	IF_2	CALL_5
0x40066ee	              0x5a	                                 pop rdx	      1052	intel_display.c	FUNCTION_27	IF_1	IF_2	CALL_5
0x40066ef	     0xf8455ffffff	                            je 0x400664a	      1052	intel_display.c	FUNCTION_27	IF_1	IF_2	CALL_5
0x40066f5	    0x48c7c7000000	                              mov rdi, 0	      1055	intel_display.c	FUNCTION_27	IF_1	CALL_6
0x40066fc	      0xe800000000	                          call 0x4006701	      1055	intel_display.c	FUNCTION_27	IF_1	CALL_6
0x4006701	             0xf0b	                                     ud2	      1055	intel_display.c	FUNCTION_27	IF_1	CALL_6
0x4006703	      0xe942ffffff	                           jmp 0x400664a	      1055	intel_display.c	FUNCTION_27	IF_1	CALL_6
0x4006708	    0xf68364060000	              test byte [rbx + 0x664], 2	      1903	intel_display.c	FUNCTION_63	IF_3	CALL_8
0x400670f	     0xf845cffffff	                            je 0x4006671	      1903	intel_display.c	FUNCTION_63	IF_3	CALL_8
0x4006715	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	      1906	intel_display.c	FUNCTION_63	CALL_9
0x400671c	      0xb901000000	                              mov ecx, 1	      1906	intel_display.c	FUNCTION_63	CALL_9
0x4006721	            0x89c2	                            mov edx, eax	      1906	intel_display.c	FUNCTION_63	CALL_9
0x4006723	            0x89ee	                            mov esi, ebp	      1906	intel_display.c	FUNCTION_63	CALL_9
0x4006725	          0x4889df	                            mov rdi, rbx	      1906	intel_display.c	FUNCTION_63	CALL_9
0x4006728	      0xe800000000	                          call 0x400672d	      1906	intel_display.c	FUNCTION_63	CALL_9
0x400672d	      0xe918ffffff	                           jmp 0x400664a	      1906	intel_display.c	FUNCTION_63	CALL_9
0x4006732	        0x4883c408	                              add rsp, 8	      1909	intel_display.c	FUNCTION_63
0x4006736	            0x31f6	                            xor esi, esi	      1033	intel_display.c	FUNCTION_25	CALL_1
0x4006738	              0x5b	                                 pop rbx	      1909	intel_display.c	FUNCTION_63
0x4006739	              0x5d	                                 pop rbp	      1909	intel_display.c	FUNCTION_63
0x400673a	            0x415c	                                 pop r12	      1909	intel_display.c	FUNCTION_63
0x400673c	            0x415d	                                 pop r13	      1909	intel_display.c	FUNCTION_63
0x400673e	      0xe90de0ffff	   jmp sym.wait_for_pipe_scanline_moving	      1033	intel_display.c	FUNCTION_25	CALL_1
cpt_set_fdi_bc_bifurcation	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,2:ELSE,0:functions,0:CALL,11	64
0x40028f0	            0x4154	                                push r12	      4515	intel_display.c	FUNCTION_136
0x40028f2	      0xba01000000	                              mov edx, 1	      4519	intel_display.c	FUNCTION_136	CALL_2
0x40028f7	              0x55	                                push rbp	      4515	intel_display.c	FUNCTION_136
0x40028f8	          0x4189f4	                           mov r12d, esi	      4515	intel_display.c	FUNCTION_136
0x40028fb	              0x53	                                push rbx	      4515	intel_display.c	FUNCTION_136
0x40028fc	      0xbe00200c00	                        mov esi, 0xc2000	      4519	intel_display.c	FUNCTION_136	CALL_2
0x4002901	          0x4889fb	                            mov rbx, rdi	      4515	intel_display.c	FUNCTION_136
0x4002904	    0x488b87f80700	           mov rax, qword [rdi + 0x7f8] 	      4519	intel_display.c	FUNCTION_136	CALL_2
0x400290b	      0xe800000000	                          call 0x4002910	      4519	intel_display.c	FUNCTION_136	CALL_2
0x4002910	            0x89c5	                            mov ebp, eax	      4519	intel_display.c	FUNCTION_136	CALL_2
0x4002912	          0xc1e80c	                            shr eax, 0xc	      4520	intel_display.c	FUNCTION_136	IF_1
0x4002915	        0x410fb6d4	                         movzx edx, r12b	      4520	intel_display.c	FUNCTION_136	IF_1
0x4002919	          0x83e001	                              and eax, 1	      4520	intel_display.c	FUNCTION_136	IF_1
0x400291c	            0x39d0	                            cmp eax, edx	      4520	intel_display.c	FUNCTION_136	IF_1
0x400291e	     0xf8492000000	                            je 0x40029b6	      4520	intel_display.c	FUNCTION_136	IF_1
0x4002924	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      4523	intel_display.c	FUNCTION_136	CALL_5
0x400292b	      0xba01000000	                              mov edx, 1	      4523	intel_display.c	FUNCTION_136	CALL_5
0x4002930	      0xbe0c100f00	                        mov esi, 0xf100c	      4523	intel_display.c	FUNCTION_136	CALL_5
0x4002935	          0x4889df	                            mov rdi, rbx	      4523	intel_display.c	FUNCTION_136	CALL_5
0x4002938	      0xe800000000	                          call 0x400293d	      4523	intel_display.c	FUNCTION_136	CALL_5
0x400293d	            0x85c0	                           test eax, eax	      4523	intel_display.c	FUNCTION_136	CALL_5
0x400293f	     0xf889c000000	                            js 0x40029e1	      4523	intel_display.c	FUNCTION_136	CALL_5
0x4002945	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      4524	intel_display.c	FUNCTION_136	CALL_8
0x400294c	      0xba01000000	                              mov edx, 1	      4524	intel_display.c	FUNCTION_136	CALL_8
0x4002951	      0xbe0c200f00	                        mov esi, 0xf200c	      4524	intel_display.c	FUNCTION_136	CALL_8
0x4002956	          0x4889df	                            mov rdi, rbx	      4524	intel_display.c	FUNCTION_136	CALL_8
0x4002959	      0xe800000000	                          call 0x400295e	      4524	intel_display.c	FUNCTION_136	CALL_8
0x400295e	            0x85c0	                           test eax, eax	      4524	intel_display.c	FUNCTION_136	CALL_8
0x4002960	            0x7868	                            js 0x40029ca	      4524	intel_display.c	FUNCTION_136	CALL_8
0x4002962	    0x81e5ffefffff	                     and ebp, 0xffffefff	      4526	intel_display.c	FUNCTION_136
0x4002968	          0x4584e4	                         test r12b, r12b	      4527	intel_display.c	FUNCTION_136	IF_2
0x400296b	    0x48c7c2000000	                              mov rdx, 0	      4530	intel_display.c	FUNCTION_136	CALL_9
0x4002972	            0x7547	                           jne 0x40029bb	      4527	intel_display.c	FUNCTION_136	IF_2
0x4002974	    0x48c7c6000000	                              mov rsi, 0	      4530	intel_display.c	FUNCTION_136	CALL_9
0x400297b	      0xbf04000000	                              mov edi, 4	      4530	intel_display.c	FUNCTION_136	CALL_9
0x4002980	      0xe800000000	                          call 0x4002985	      4530	intel_display.c	FUNCTION_136	CALL_9
0x4002985	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      4531	intel_display.c	FUNCTION_136	CALL_10
0x400298c	            0x89ea	                            mov edx, ebp	      4531	intel_display.c	FUNCTION_136	CALL_10
0x400298e	      0xbe00200c00	                        mov esi, 0xc2000	      4531	intel_display.c	FUNCTION_136	CALL_10
0x4002993	          0x4889df	                            mov rdi, rbx	      4531	intel_display.c	FUNCTION_136	CALL_10
0x4002996	      0xb901000000	                              mov ecx, 1	      4531	intel_display.c	FUNCTION_136	CALL_10
0x400299b	      0xe800000000	                          call 0x40029a0	      4531	intel_display.c	FUNCTION_136	CALL_10
0x40029a0	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      4532	intel_display.c	FUNCTION_136	CALL_11
0x40029a7	            0x31d2	                            xor edx, edx	      4532	intel_display.c	FUNCTION_136	CALL_11
0x40029a9	      0xbe00200c00	                        mov esi, 0xc2000	      4532	intel_display.c	FUNCTION_136	CALL_11
0x40029ae	          0x4889df	                            mov rdi, rbx	      4532	intel_display.c	FUNCTION_136	CALL_11
0x40029b1	      0xe800000000	                          call 0x40029b6	      4532	intel_display.c	FUNCTION_136	CALL_11
0x40029b6	              0x5b	                                 pop rbx	      4533	intel_display.c	FUNCTION_136
0x40029b7	              0x5d	                                 pop rbp	      4533	intel_display.c	FUNCTION_136
0x40029b8	            0x415c	                                 pop r12	      4533	intel_display.c	FUNCTION_136
0x40029ba	              0xc3	                                     ret	      4533	intel_display.c	FUNCTION_136
0x40029bb	    0x81cd00100000	                          or ebp, 0x1000	      4528	intel_display.c	FUNCTION_136	IF_2
0x40029c1	    0x48c7c2000000	                              mov rdx, 0	      4530	intel_display.c	FUNCTION_136	CALL_9
0x40029c8	            0xebaa	                           jmp 0x4002974	      4530	intel_display.c	FUNCTION_136	CALL_9
0x40029ca	    0x48c7c6000000	                              mov rsi, 0	      4524	intel_display.c	FUNCTION_136	CALL_8
0x40029d1	    0x48c7c7000000	                              mov rdi, 0	      4524	intel_display.c	FUNCTION_136	CALL_8
0x40029d8	      0xe800000000	                          call 0x40029dd	      4524	intel_display.c	FUNCTION_136	CALL_8
0x40029dd	             0xf0b	                                     ud2	      4524	intel_display.c	FUNCTION_136	CALL_8
0x40029df	            0xeb81	                           jmp 0x4002962	      4524	intel_display.c	FUNCTION_136	CALL_8
0x40029e1	    0x48c7c6000000	                              mov rsi, 0	      4523	intel_display.c	FUNCTION_136	CALL_5
0x40029e8	    0x48c7c7000000	                              mov rdi, 0	      4523	intel_display.c	FUNCTION_136	CALL_5
0x40029ef	      0xe800000000	                          call 0x40029f4	      4523	intel_display.c	FUNCTION_136	CALL_5
0x40029f4	             0xf0b	                                     ud2	      4523	intel_display.c	FUNCTION_136	CALL_5
0x40029f6	      0xe94affffff	                           jmp 0x4002945	      4523	intel_display.c	FUNCTION_136	CALL_5
skl_update_scaler	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,5:ELSE,0:functions,0:CALL,7	106
0x4002a80	            0x4154	                                push r12	      4707	intel_display.c	FUNCTION_142
0x4002a82	              0x55	                                push rbp	      4707	intel_display.c	FUNCTION_142
0x4002a83	          0x4189d2	                           mov r10d, edx	      4707	intel_display.c	FUNCTION_142
0x4002a86	              0x53	                                push rbx	      4707	intel_display.c	FUNCTION_142
0x4002a87	          0x4889cb	                            mov rbx, rcx	      4707	intel_display.c	FUNCTION_142
0x4002a8a	        0x4883ec08	                              sub rsp, 8	      4707	intel_display.c	FUNCTION_142
0x4002a8e	    0x80bf93040000	               cmp byte [rdi + 0x493], 0	      4724	intel_display.c	FUNCTION_142	IF_1
0x4002a95	          0x488b17	                    mov rdx, qword [rdi]	      4711	intel_display.c	FUNCTION_142	CALL_1
0x4002a98	      0x448b5c2428	           mov r11d, dword [rsp + 0x28] 	      4707	intel_display.c	FUNCTION_142
0x4002a9d	        0x8b6c2430	            mov ebp, dword [rsp + 0x30] 	      4707	intel_display.c	FUNCTION_142
0x4002aa1	          0x488b0a	                    mov rcx, qword [rdx]	      4712	intel_display.c	FUNCTION_142	CALL_2
0x4002aa4	            0x740b	                            je 0x4002ab1	      4724	intel_display.c	FUNCTION_142	IF_1
0x4002aa6	        0x4183fa1f	                          cmp r10d, 0x1f	      4724	intel_display.c	FUNCTION_142	IF_1
0x4002aaa	      0xb801000000	                              mov eax, 1	      4725	intel_display.c	FUNCTION_142	IF_1
0x4002aaf	            0x7413	                            je 0x4002ac4	      4724	intel_display.c	FUNCTION_142	IF_1
0x4002ab1	          0x4539d8	                           cmp r8d, r11d	      4722	intel_display.c	FUNCTION_142
0x4002ab4	        0x410f95c4	                              setne r12b	      4722	intel_display.c	FUNCTION_142
0x4002ab8	          0x4139e9	                            cmp r9d, ebp	      4722	intel_display.c	FUNCTION_142
0x4002abb	           0xf95c0	                                setne al	      4722	intel_display.c	FUNCTION_142
0x4002abe	          0x4409e0	                            or eax, r12d	      4722	intel_display.c	FUNCTION_142
0x4002ac1	           0xfb6c0	                           movzx eax, al	      4722	intel_display.c	FUNCTION_142
0x4002ac4	    0x80b95c060000	               cmp byte [rcx + 0x65c], 8	      4733	intel_display.c	FUNCTION_142	IF_2	CALL_3
0x4002acb	            0x7617	                           jbe 0x4002ae4	      4733	intel_display.c	FUNCTION_142	IF_2	CALL_3
0x4002acd	        0x807f0800	                   cmp byte [rdi + 8], 0	      4733	intel_display.c	FUNCTION_142	IF_2	CALL_3
0x4002ad1	            0x7411	                            je 0x4002ae4	      4733	intel_display.c	FUNCTION_142	IF_2	CALL_3
0x4002ad3	            0x85c0	                           test eax, eax	      4733	intel_display.c	FUNCTION_142	IF_2	CALL_3
0x4002ad5	            0x740d	                            je 0x4002ae4	      4733	intel_display.c	FUNCTION_142	IF_2	CALL_3
0x4002ad7	    0xf6879c000000	           test byte [rdi + 0x9c], 0x10 	      4734	intel_display.c	FUNCTION_142	IF_2
0x4002ade	     0xf8518010000	                           jne 0x4002bfc	      4734	intel_display.c	FUNCTION_142	IF_2
0x4002ae4	            0x85c0	                           test eax, eax	      4749	intel_display.c	FUNCTION_142	IF_3
0x4002ae6	     0xf8483000000	                            je 0x4002b6f	      4749	intel_display.c	FUNCTION_142	IF_3
0x4002aec	          0x4084f6	                           test sil, sil	      4749	intel_display.c	FUNCTION_142	IF_3
0x4002aef	            0x757e	                           jne 0x4002b6f	      4749	intel_display.c	FUNCTION_142	IF_3
0x4002af1	        0x418d40f8	                       lea eax, [r8 - 8]	      4764	intel_display.c	FUNCTION_142	IF_5
0x4002af5	      0x3df80f0000	                          cmp eax, 0xff8	      4764	intel_display.c	FUNCTION_142	IF_5
0x4002afa	     0xf87d3000000	                            ja 0x4002bd3	      4764	intel_display.c	FUNCTION_142	IF_5
0x4002b00	        0x418d41f8	                       lea eax, [r9 - 8]	      4764	intel_display.c	FUNCTION_142	IF_5
0x4002b04	      0x3df80f0000	                          cmp eax, 0xff8	      4764	intel_display.c	FUNCTION_142	IF_5
0x4002b09	     0xf87c4000000	                            ja 0x4002bd3	      4764	intel_display.c	FUNCTION_142	IF_5
0x4002b0f	        0x418d43f8	                      lea eax, [r11 - 8]	      4765	intel_display.c	FUNCTION_142	IF_5
0x4002b13	      0x3df80f0000	                          cmp eax, 0xff8	      4765	intel_display.c	FUNCTION_142	IF_5
0x4002b18	     0xf87b5000000	                            ja 0x4002bd3	      4765	intel_display.c	FUNCTION_142	IF_5
0x4002b1e	          0x8d45f8	                      lea eax, [rbp - 8]	      4765	intel_display.c	FUNCTION_142	IF_5
0x4002b21	      0x3df80f0000	                          cmp eax, 0xff8	      4765	intel_display.c	FUNCTION_142	IF_5
0x4002b26	     0xf87a7000000	                            ja 0x4002bd3	      4765	intel_display.c	FUNCTION_142	IF_5
0x4002b2c	          0x4489d1	                           mov ecx, r10d	      4776	intel_display.c	FUNCTION_142
0x4002b2f	      0xb801000000	                              mov eax, 1	      4776	intel_display.c	FUNCTION_142
0x4002b34	    0x48c7c6000000	                              mov rsi, 0	      4777	intel_display.c	FUNCTION_142	CALL_7
0x4002b3b	            0xd3e0	                             shl eax, cl	      4776	intel_display.c	FUNCTION_142
0x4002b3d	     0xb8760030000	             or eax, dword [rdi + 0x360]	      4776	intel_display.c	FUNCTION_142
0x4002b43	          0x4489d1	                           mov ecx, r10d	      4777	intel_display.c	FUNCTION_142	CALL_7
0x4002b46	    0x898760030000	            mov dword [rdi + 0x360], eax	      4776	intel_display.c	FUNCTION_142
0x4002b4c	    0x8b92b0040000	           mov edx, dword [rdx + 0x4b0] 	      4777	intel_display.c	FUNCTION_142	CALL_7
0x4002b52	      0xbf04000000	                              mov edi, 4	      4777	intel_display.c	FUNCTION_142	CALL_7
0x4002b57	              0x50	                                push rax	      4777	intel_display.c	FUNCTION_142	CALL_7
0x4002b58	              0x55	                                push rbp	      4777	intel_display.c	FUNCTION_142	CALL_7
0x4002b59	            0x4153	                                push r11	      4777	intel_display.c	FUNCTION_142	CALL_7
0x4002b5b	      0xe800000000	                          call 0x4002b60	      4777	intel_display.c	FUNCTION_142	CALL_7
0x4002b60	            0x31c0	                            xor eax, eax	      4782	intel_display.c	FUNCTION_142
0x4002b62	        0x4883c418	                           add rsp, 0x18	      4782	intel_display.c	FUNCTION_142
0x4002b66	        0x4883c408	                              add rsp, 8	      4783	intel_display.c	FUNCTION_142
0x4002b6a	              0x5b	                                 pop rbx	      4783	intel_display.c	FUNCTION_142
0x4002b6b	              0x5d	                                 pop rbp	      4783	intel_display.c	FUNCTION_142
0x4002b6c	            0x415c	                                 pop r12	      4783	intel_display.c	FUNCTION_142
0x4002b6e	              0xc3	                                     ret	      4783	intel_display.c	FUNCTION_142
0x4002b6f	            0x8b0b	                    mov ecx, dword [rbx]	      4750	intel_display.c	FUNCTION_142	IF_3	IF_4
0x4002b71	            0x31c0	                            xor eax, eax	      4760	intel_display.c	FUNCTION_142	IF_3
0x4002b73	            0x85c9	                           test ecx, ecx	      4750	intel_display.c	FUNCTION_142	IF_3	IF_4
0x4002b75	            0x78ef	                            js 0x4002b66	      4750	intel_display.c	FUNCTION_142	IF_3	IF_4
0x4002b77	          0x4489d1	                           mov ecx, r10d	      4751	intel_display.c	FUNCTION_142	IF_3	IF_4
0x4002b7a	    0x41b9feffffff	                     mov r9d, 0xfffffffe	      4751	intel_display.c	FUNCTION_142	IF_3	IF_4
0x4002b80	    0x48c7c6000000	                              mov rsi, 0	      4754	intel_display.c	FUNCTION_142	IF_3	IF_4	CALL_5
0x4002b87	          0x41d3c1	                             rol r9d, cl	      4751	intel_display.c	FUNCTION_142	IF_3	IF_4
0x4002b8a	    0x44238f600300	            and r9d, dword [rdi + 0x360]	      4751	intel_display.c	FUNCTION_142	IF_3	IF_4
0x4002b91	        0x89442404	                mov dword [rsp + 4], eax	      4751	intel_display.c	FUNCTION_142	IF_3	IF_4
0x4002b95	    0x44898f600300	            mov dword [rdi + 0x360], r9d	      4751	intel_display.c	FUNCTION_142	IF_3	IF_4
0x4002b9c	          0x48630b	                 movsxd rcx, dword [rbx]	      4752	intel_display.c	FUNCTION_142	IF_3	IF_4
0x4002b9f	    0xc784cf500300	      mov dword [rdi + rcx*8 + 0x350], 0	      4752	intel_display.c	FUNCTION_142	IF_3	IF_4
0x4002baa	          0x448b03	                    mov r8d, dword [rbx]	      4754	intel_display.c	FUNCTION_142	IF_3	IF_4	CALL_5
0x4002bad	          0x4489d1	                           mov ecx, r10d	      4754	intel_display.c	FUNCTION_142	IF_3	IF_4	CALL_5
0x4002bb0	    0x8b92b0040000	           mov edx, dword [rdx + 0x4b0] 	      4754	intel_display.c	FUNCTION_142	IF_3	IF_4	CALL_5
0x4002bb6	      0xbf04000000	                              mov edi, 4	      4754	intel_display.c	FUNCTION_142	IF_3	IF_4	CALL_5
0x4002bbb	      0xe800000000	                          call 0x4002bc0	      4754	intel_display.c	FUNCTION_142	IF_3	IF_4	CALL_5
0x4002bc0	    0xc703ffffffff	            mov dword [rbx], 0xffffffff 	      4758	intel_display.c	FUNCTION_142	IF_3	IF_4
0x4002bc6	        0x8b442404	                mov eax, dword [rsp + 4]	      4758	intel_display.c	FUNCTION_142	IF_3	IF_4
0x4002bca	        0x4883c408	                              add rsp, 8	      4783	intel_display.c	FUNCTION_142
0x4002bce	              0x5b	                                 pop rbx	      4783	intel_display.c	FUNCTION_142
0x4002bcf	              0x5d	                                 pop rbp	      4783	intel_display.c	FUNCTION_142
0x4002bd0	            0x415c	                                 pop r12	      4783	intel_display.c	FUNCTION_142
0x4002bd2	              0xc3	                                     ret	      4783	intel_display.c	FUNCTION_142
0x4002bd3	    0x8b92b0040000	           mov edx, dword [rdx + 0x4b0] 	      4769	intel_display.c	FUNCTION_142	IF_5	CALL_6
0x4002bd9	              0x55	                                push rbp	      4769	intel_display.c	FUNCTION_142	IF_5	CALL_6
0x4002bda	          0x4489d1	                           mov ecx, r10d	      4769	intel_display.c	FUNCTION_142	IF_5	CALL_6
0x4002bdd	            0x4153	                                push r11	      4769	intel_display.c	FUNCTION_142	IF_5	CALL_6
0x4002bdf	    0x48c7c6000000	                              mov rsi, 0	      4769	intel_display.c	FUNCTION_142	IF_5	CALL_6
0x4002be6	      0xbf04000000	                              mov edi, 4	      4769	intel_display.c	FUNCTION_142	IF_5	CALL_6
0x4002beb	      0xe800000000	                          call 0x4002bf0	      4769	intel_display.c	FUNCTION_142	IF_5	CALL_6
0x4002bf0	              0x58	                                 pop rax	      4772	intel_display.c	FUNCTION_142	IF_5
0x4002bf1	      0xb8eaffffff	                     mov eax, 0xffffffea	      4772	intel_display.c	FUNCTION_142	IF_5
0x4002bf6	              0x5a	                                 pop rdx	      4772	intel_display.c	FUNCTION_142	IF_5
0x4002bf7	      0xe96affffff	                           jmp 0x4002b66	      4772	intel_display.c	FUNCTION_142	IF_5
0x4002bfc	    0x48c7c6000000	                              mov rsi, 0	      4735	intel_display.c	FUNCTION_142	IF_2	CALL_4
0x4002c03	      0xbf04000000	                              mov edi, 4	      4735	intel_display.c	FUNCTION_142	IF_2	CALL_4
0x4002c08	      0xe800000000	                          call 0x4002c0d	      4735	intel_display.c	FUNCTION_142	IF_2	CALL_4
0x4002c0d	      0xb8eaffffff	                     mov eax, 0xffffffea	      4736	intel_display.c	FUNCTION_142	IF_2
0x4002c12	      0xe94fffffff	                           jmp 0x4002b66	      4736	intel_display.c	FUNCTION_142	IF_2
i9xx_crtc_enable	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,4:ELSE,1:functions,0:CALL,22	253
0x4012d90	            0x4157	                                push r15	      5881	intel_display.c	FUNCTION_179
0x4012d92	            0x4156	                                push r14	      5881	intel_display.c	FUNCTION_179
0x4012d94	            0x4155	                                push r13	      5881	intel_display.c	FUNCTION_179
0x4012d96	            0x4154	                                push r12	      5881	intel_display.c	FUNCTION_179
0x4012d98	              0x55	                                push rbp	      5881	intel_display.c	FUNCTION_179
0x4012d99	              0x53	                                push rbx	      5881	intel_display.c	FUNCTION_179
0x4012d9a	        0x4883ec58	                           sub rsp, 0x58	      5881	intel_display.c	FUNCTION_179
0x4012d9e	          0x488b1f	                    mov rbx, qword [rdi]	      5884	intel_display.c	FUNCTION_179
0x4012da1	    0x65488b042528	                mov rax, qword gs:[0x28]	      5881	intel_display.c	FUNCTION_179
0x4012daa	      0x4889442450	             mov qword [rsp + 0x50], rax	      5881	intel_display.c	FUNCTION_179
0x4012daf	            0x31c0	                            xor eax, eax	      5881	intel_display.c	FUNCTION_179
0x4012db1	      0x4889742408	                mov qword [rsp + 8], rsi	      5881	intel_display.c	FUNCTION_179
0x4012db6	    0x80bbb4040000	               cmp byte [rbx + 0x4b4], 0	      5890	intel_display.c	FUNCTION_179	IF_1	CALL_4
0x4012dbd	          0x4c8b33	                    mov r14, qword [rbx]	      5885	intel_display.c	FUNCTION_179
0x4012dc0	    0x8babb0040000	           mov ebp, dword [rbx + 0x4b0] 	      5888	intel_display.c	FUNCTION_179
0x4012dc6	     0xf85fd030000	                           jne 0x40131c9	      5890	intel_display.c	FUNCTION_179	IF_1	CALL_4
0x4012dcc	    0x488b93c80400	           mov rdx, qword [rbx + 0x4c8] 	      5875	intel_display.c	FUNCTION_178	CALL_3
0x4012dd3	    0x498b86180800	           mov rax, qword [r14 + 0x818] 	      5875	intel_display.c	FUNCTION_178	CALL_3
0x4012dda	    0x8d34ed406000	               lea esi, [rbp*8 + 0x6040]	      5875	intel_display.c	FUNCTION_178	CALL_3
0x4012de1	      0xb901000000	                              mov ecx, 1	      5875	intel_display.c	FUNCTION_178	CALL_3
0x4012de6	          0x4989fd	                            mov r13, rdi	      5875	intel_display.c	FUNCTION_178	CALL_3
0x4012de9	          0x4c89f7	                            mov rdi, r14	      5875	intel_display.c	FUNCTION_178	CALL_3
0x4012dec	    0x8b9288020000	           mov edx, dword [rdx + 0x288] 	      5875	intel_display.c	FUNCTION_178	CALL_3
0x4012df2	      0xe800000000	                          call 0x4012df7	      5875	intel_display.c	FUNCTION_178	CALL_3
0x4012df7	    0x8b8bb0040000	           mov ecx, dword [rbx + 0x4b0] 	      5876	intel_display.c	FUNCTION_178	CALL_5
0x4012dfd	    0x488b93c80400	           mov rdx, qword [rbx + 0x4c8] 	      5876	intel_display.c	FUNCTION_178	CALL_5
0x4012e04	          0x4c89f7	                            mov rdi, r14	      5876	intel_display.c	FUNCTION_178	CALL_5
0x4012e07	    0x498b86180800	           mov rax, qword [r14 + 0x818] 	      5876	intel_display.c	FUNCTION_178	CALL_5
0x4012e0e	    0x8d34cd446000	               lea esi, [rcx*8 + 0x6044]	      5876	intel_display.c	FUNCTION_178	CALL_5
0x4012e15	    0x8b928c020000	           mov edx, dword [rdx + 0x28c] 	      5876	intel_display.c	FUNCTION_178	CALL_5
0x4012e1b	      0xb901000000	                              mov ecx, 1	      5876	intel_display.c	FUNCTION_178	CALL_5
0x4012e20	      0xe800000000	                          call 0x4012e25	      5876	intel_display.c	FUNCTION_178	CALL_5
0x4012e25	    0x488b83c80400	           mov rax, qword [rbx + 0x4c8] 	      5876	intel_display.c	FUNCTION_178	CALL_5
0x4012e2c	    0xf78044020000	        test dword [rax + 0x244], 0x980 	      5895	intel_display.c	FUNCTION_179	IF_2	CALL_6
0x4012e36	     0xf8571030000	                           jne 0x40131ad	      5895	intel_display.c	FUNCTION_179	IF_2	CALL_6
0x4012e3c	          0x4889df	                            mov rdi, rbx	      5898	intel_display.c	FUNCTION_179	CALL_8
0x4012e3f	      0xe8fcdafeff	         call sym.intel_set_pipe_timings	      5898	intel_display.c	FUNCTION_179	CALL_8
0x4012e44	          0x4889df	                            mov rdi, rbx	      5899	intel_display.c	FUNCTION_179	CALL_9
0x4012e47	      0xe8f4ddfeff	        call sym.intel_set_pipe_src_size	      5899	intel_display.c	FUNCTION_179	CALL_9
0x4012e4c	          0x4889df	                            mov rdi, rbx	      5901	intel_display.c	FUNCTION_179	CALL_10
0x4012e4f	      0xe82cf9feff	              call sym.i9xx_set_pipeconf	      5901	intel_display.c	FUNCTION_179	CALL_10
0x4012e54	    0xc683b4040000	               mov byte [rbx + 0x4b4], 1	      5903	intel_display.c	FUNCTION_179
0x4012e5b	    0x41f6865a0600	              test byte [r14 + 0x65a], 2	      5905	intel_display.c	FUNCTION_179	IF_3	CALL_11
0x4012e63	     0xf8430030000	                            je 0x4013199	      5905	intel_display.c	FUNCTION_179	IF_3	CALL_11
0x4012e69	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5905	intel_display.c	FUNCTION_179	IF_3	CALL_11
0x4012e6e	          0x4c89ee	                            mov rsi, r13	      5908	intel_display.c	FUNCTION_179	CALL_13
0x4012e71	          0x4889df	                            mov rdi, rbx	      5908	intel_display.c	FUNCTION_179	CALL_13
0x4012e74	          0x4889c8	                            mov rax, rcx	      5908	intel_display.c	FUNCTION_179	CALL_13
0x4012e77	        0x4883c130	                           add rcx, 0x30	      5908	intel_display.c	FUNCTION_179	CALL_13
0x4012e7b	        0x4883c028	                           add rax, 0x28	      5908	intel_display.c	FUNCTION_179	CALL_13
0x4012e7f	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      5908	intel_display.c	FUNCTION_179	CALL_13
0x4012e84	          0x4889c2	                            mov rdx, rax	      5908	intel_display.c	FUNCTION_179	CALL_13
0x4012e87	      0x4889442410	             mov qword [rsp + 0x10], rax	      5908	intel_display.c	FUNCTION_179	CALL_13
0x4012e8c	      0xe85f35ffff	call sym.intel_encoders_pre_enable.isra.97	      5908	intel_display.c	FUNCTION_179	CALL_13
0x4012e91	          0x4c8b3b	                    mov r15, qword [rbx]	      5908	intel_display.c	FUNCTION_179	CALL_13
0x4012e94	    0x418b85800200	           mov eax, dword [r13 + 0x280] 	      5908	intel_display.c	FUNCTION_179	CALL_13
0x4012e9b	        0x89442404	                mov dword [rsp + 4], eax	      5908	intel_display.c	FUNCTION_179	CALL_13
0x4012e9f	    0x418b876c0600	           mov eax, dword [r15 + 0x66c] 	      1509	intel_display.c	FUNCTION_52	CALL_2
0x4012ea6	          0x4c89ff	                            mov rdi, r15	      1513	intel_display.c	FUNCTION_52	CALL_3
0x4012ea9	    0x8d9014600000	                 lea edx, [rax + 0x6014]	      1509	intel_display.c	FUNCTION_52	CALL_2
0x4012eaf	        0x89542420	             mov dword [rsp + 0x20], edx	      1509	intel_display.c	FUNCTION_52	CALL_2
0x4012eb3	    0x8d9018600000	                 lea edx, [rax + 0x6018]	      1509	intel_display.c	FUNCTION_52	CALL_2
0x4012eb9	       0x530600000	                         add eax, 0x6030	      1509	intel_display.c	FUNCTION_52	CALL_2
0x4012ebe	        0x89442428	             mov dword [rsp + 0x28], eax	      1509	intel_display.c	FUNCTION_52	CALL_2
0x4012ec2	    0x486383b00400	        movsxd rax, dword [rbx + 0x4b0] 	      1509	intel_display.c	FUNCTION_52	CALL_2
0x4012ec9	        0x89542424	             mov dword [rsp + 0x24], edx	      1509	intel_display.c	FUNCTION_52	CALL_2
0x4012ecd	            0x31d2	                            xor edx, edx	      1513	intel_display.c	FUNCTION_52	CALL_3
0x4012ecf	          0x4889c6	                            mov rsi, rax	      1509	intel_display.c	FUNCTION_52	CALL_2
0x4012ed2	        0x8b6c8420	    mov ebp, dword [rsp + rax*4 + 0x20] 	      1509	intel_display.c	FUNCTION_52	CALL_2
0x4012ed6	      0xe800000000	                          call 0x4012edb	      1513	intel_display.c	FUNCTION_52	CALL_3
0x4012edb	    0x41f687770600	              test byte [r15 + 0x677], 1	      1516	intel_display.c	FUNCTION_52	IF_1	CALL_5
0x4012ee3	     0xf844e020000	                            je 0x4013137	      1516	intel_display.c	FUNCTION_52	IF_1	CALL_5
0x4012ee9	    0x41f687640600	              test byte [r15 + 0x664], 2	      1516	intel_display.c	FUNCTION_52	IF_1	CALL_5
0x4012ef1	     0xf8432020000	                            je 0x4013129	      1516	intel_display.c	FUNCTION_52	IF_1	CALL_5
0x4012ef7	    0x498b87680300	           mov rax, qword [r15 + 0x368] 	      1497	intel_display.c	FUNCTION_51	FUNCTION_1
0x4012efe	    0x498dbf680300	                  lea rdi, [r15 + 0x368]	      1497	intel_display.c	FUNCTION_51	FUNCTION_1
0x4012f05	            0x31c9	                            xor ecx, ecx	      1497	intel_display.c	FUNCTION_51	FUNCTION_1
0x4012f07	          0x4839c7	                            cmp rdi, rax	      1497	intel_display.c	FUNCTION_51	FUNCTION_1
0x4012f0a	        0x488d50f0	                   lea rdx, [rax - 0x10]	      1497	intel_display.c	FUNCTION_51	FUNCTION_1
0x4012f0e	     0xf84db000000	                            je 0x4012fef	      1497	intel_display.c	FUNCTION_51	FUNCTION_1
0x4012f14	    0x488bb2100400	           mov rsi, qword [rdx + 0x410] 	      1498	intel_display.c	FUNCTION_51	FUNCTION_1
0x4012f1b	            0x31c0	                            xor eax, eax	      1498	intel_display.c	FUNCTION_51	FUNCTION_1
0x4012f1d	        0x807e0900	                   cmp byte [rsi + 9], 0	      1498	intel_display.c	FUNCTION_51	FUNCTION_1
0x4012f21	            0x7413	                            je 0x4012f36	      1498	intel_display.c	FUNCTION_51	FUNCTION_1
0x4012f23	    0x488b82c80400	           mov rax, qword [rdx + 0x4c8] 	      1498	intel_display.c	FUNCTION_51	FUNCTION_1
0x4012f2a	    0x8b8044020000	           mov eax, dword [rax + 0x244] 	      1498	intel_display.c	FUNCTION_51	FUNCTION_1
0x4012f30	          0xc1e802	                              shr eax, 2	      1498	intel_display.c	FUNCTION_51	FUNCTION_1
0x4012f33	          0x83e001	                              and eax, 1	      1498	intel_display.c	FUNCTION_51	FUNCTION_1
0x4012f36	             0x1c1	                            add ecx, eax	      1498	intel_display.c	FUNCTION_51	FUNCTION_1
0x4012f38	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      1497	intel_display.c	FUNCTION_51	FUNCTION_1
0x4012f3c	          0x4839c7	                            cmp rdi, rax	      1497	intel_display.c	FUNCTION_51	FUNCTION_1
0x4012f3f	        0x488d50f0	                   lea rdx, [rax - 0x10]	      1497	intel_display.c	FUNCTION_51	FUNCTION_1
0x4012f43	            0x75cf	                           jne 0x4012f14	      1497	intel_display.c	FUNCTION_51	FUNCTION_1
0x4012f45	            0x85c9	                           test ecx, ecx	      1520	intel_display.c	FUNCTION_52	IF_2	CALL_8
0x4012f47	     0xf8ea2000000	                           jle 0x4012fef	      1520	intel_display.c	FUNCTION_52	IF_2	CALL_8
0x4012f4d	    0x418b876c0600	           mov eax, dword [r15 + 0x66c] 	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012f54	    0x814c24040000	          or dword [rsp + 4], 0x40000000	      1527	intel_display.c	FUNCTION_52	IF_2
0x4012f5c	          0x4c89ff	                            mov rdi, r15	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012f5f	    0x498b8ff80700	           mov rcx, qword [r15 + 0x7f8] 	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012f66	    0x4d8ba7180800	           mov r12, qword [r15 + 0x818] 	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012f6d	    0x8d9014600000	                 lea edx, [rax + 0x6014]	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012f73	        0x8954242c	             mov dword [rsp + 0x2c], edx	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012f77	    0x8d9018600000	                 lea edx, [rax + 0x6018]	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012f7d	       0x530600000	                         add eax, 0x6030	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012f82	        0x89442434	             mov dword [rsp + 0x34], eax	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012f86	            0x31c0	                            xor eax, eax	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012f88	        0x89542430	             mov dword [rsp + 0x30], edx	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012f8c	    0x8b93b0040000	           mov edx, dword [rbx + 0x4b0] 	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012f92	            0x85d2	                           test edx, edx	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012f94	      0xba01000000	                              mov edx, 1	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012f99	           0xf94c0	                                 sete al	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012f9c	        0x8b74842c	    mov esi, dword [rsp + rax*4 + 0x2c] 	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012fa0	      0xe800000000	                          call 0x4012fa5	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012fa5	    0x418b8f6c0600	           mov ecx, dword [r15 + 0x66c] 	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012fac	          0x4c89ff	                            mov rdi, r15	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012faf	    0x8d9114600000	                 lea edx, [rcx + 0x6014]	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012fb5	        0x89542438	             mov dword [rsp + 0x38], edx	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012fb9	    0x8d9118600000	                 lea edx, [rcx + 0x6018]	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012fbf	    0x81c130600000	                         add ecx, 0x6030	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012fc5	        0x894c2440	             mov dword [rsp + 0x40], ecx	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012fc9	    0x8b8bb0040000	           mov ecx, dword [rbx + 0x4b0] 	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012fcf	        0x8954243c	             mov dword [rsp + 0x3c], edx	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012fd3	            0x31d2	                            xor edx, edx	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012fd5	            0x85c9	                           test ecx, ecx	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012fd7	      0xb901000000	                              mov ecx, 1	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012fdc	           0xf94c2	                                 sete dl	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012fdf	       0xd00000040	                      or eax, 0x40000000	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012fe4	        0x8b749438	    mov esi, dword [rsp + rdx*4 + 0x38] 	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012fe8	            0x89c2	                            mov edx, eax	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012fea	      0xe800000000	                          call 0x4012fef	      1528	intel_display.c	FUNCTION_52	IF_2	CALL_10
0x4012fef	            0x31d2	                            xor edx, edx	      1537	intel_display.c	FUNCTION_52	CALL_13
0x4012ff1	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	      1537	intel_display.c	FUNCTION_52	CALL_13
0x4012ff8	      0xb901000000	                              mov ecx, 1	      1537	intel_display.c	FUNCTION_52	CALL_13
0x4012ffd	            0x89ee	                            mov esi, ebp	      1537	intel_display.c	FUNCTION_52	CALL_13
0x4012fff	          0x4c89ff	                            mov rdi, r15	      1537	intel_display.c	FUNCTION_52	CALL_13
0x4013002	      0xe800000000	                          call 0x4013007	      1537	intel_display.c	FUNCTION_52	CALL_13
0x4013007	      0xb901000000	                              mov ecx, 1	      1539	intel_display.c	FUNCTION_52	CALL_14
0x401300c	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	      1539	intel_display.c	FUNCTION_52	CALL_14
0x4013013	        0x8b542404	                mov edx, dword [rsp + 4]	      1539	intel_display.c	FUNCTION_52	CALL_14
0x4013017	            0x89ee	                            mov esi, ebp	      1539	intel_display.c	FUNCTION_52	CALL_14
0x4013019	          0x4c89ff	                            mov rdi, r15	      1539	intel_display.c	FUNCTION_52	CALL_14
0x401301c	      0xe800000000	                          call 0x4013021	      1539	intel_display.c	FUNCTION_52	CALL_14
0x4013021	            0x31d2	                            xor edx, edx	      1542	intel_display.c	FUNCTION_52	CALL_15
0x4013023	            0x89ee	                            mov esi, ebp	      1542	intel_display.c	FUNCTION_52	CALL_15
0x4013025	          0x4c89ff	                            mov rdi, r15	      1542	intel_display.c	FUNCTION_52	CALL_15
0x4013028	    0x498b87f80700	           mov rax, qword [r15 + 0x7f8] 	      1542	intel_display.c	FUNCTION_52	CALL_15
0x401302f	      0xe800000000	                          call 0x4013034	      1542	intel_display.c	FUNCTION_52	CALL_15
0x4013034	      0xbf9ad40900	                        mov edi, 0x9d49a	      1543	intel_display.c	FUNCTION_52	CALL_16
0x4013039	      0xe800000000	                          call 0x401303e	      1543	intel_display.c	FUNCTION_52	CALL_16
0x401303e	    0x4180bf5c0600	               cmp byte [r15 + 0x65c], 3	      1545	intel_display.c	FUNCTION_52	IF_3	CALL_17
0x4013046	     0xf87fe000000	                            ja 0x401314a	      1545	intel_display.c	FUNCTION_52	IF_3	CALL_17
0x401304c	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	      1554	intel_display.c	FUNCTION_52	ELSE_1	CALL_20
0x4013053	      0xb901000000	                              mov ecx, 1	      1554	intel_display.c	FUNCTION_52	ELSE_1	CALL_20
0x4013058	        0x8b542404	                mov edx, dword [rsp + 4]	      1554	intel_display.c	FUNCTION_52	ELSE_1	CALL_20
0x401305c	            0x89ee	                            mov esi, ebp	      1554	intel_display.c	FUNCTION_52	ELSE_1	CALL_20
0x401305e	          0x4c89ff	                            mov rdi, r15	      1554	intel_display.c	FUNCTION_52	ELSE_1	CALL_20
0x4013061	      0xe800000000	                          call 0x4013066	      1554	intel_display.c	FUNCTION_52	ELSE_1	CALL_20
0x4013066	    0x41bc03000000	                             mov r12d, 3	      1498	intel_display.c	FUNCTION_51	FUNCTION_1
0x401306c	      0xb901000000	                              mov ecx, 1	      1559	intel_display.c	FUNCTION_52	FOR_1	CALL_21
0x4013071	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	      1559	intel_display.c	FUNCTION_52	FOR_1	CALL_21
0x4013078	        0x8b542404	                mov edx, dword [rsp + 4]	      1559	intel_display.c	FUNCTION_52	FOR_1	CALL_21
0x401307c	            0x89ee	                            mov esi, ebp	      1559	intel_display.c	FUNCTION_52	FOR_1	CALL_21
0x401307e	          0x4c89ff	                            mov rdi, r15	      1559	intel_display.c	FUNCTION_52	FOR_1	CALL_21
0x4013081	      0xe800000000	                          call 0x4013086	      1559	intel_display.c	FUNCTION_52	FOR_1	CALL_21
0x4013086	            0x31d2	                            xor edx, edx	      1560	intel_display.c	FUNCTION_52	FOR_1	CALL_22
0x4013088	            0x89ee	                            mov esi, ebp	      1560	intel_display.c	FUNCTION_52	FOR_1	CALL_22
0x401308a	          0x4c89ff	                            mov rdi, r15	      1560	intel_display.c	FUNCTION_52	FOR_1	CALL_22
0x401308d	    0x498b87f80700	           mov rax, qword [r15 + 0x7f8] 	      1560	intel_display.c	FUNCTION_52	FOR_1	CALL_22
0x4013094	      0xe800000000	                          call 0x4013099	      1560	intel_display.c	FUNCTION_52	FOR_1	CALL_22
0x4013099	      0xbf9ad40900	                        mov edi, 0x9d49a	      1561	intel_display.c	FUNCTION_52	FOR_1	CALL_23
0x401309e	      0xe800000000	                          call 0x40130a3	      1561	intel_display.c	FUNCTION_52	FOR_1	CALL_23
0x40130a3	        0x4183ec01	                             sub r12d, 1	      1558	intel_display.c	FUNCTION_52	FOR_1
0x40130a7	            0x75c3	                           jne 0x401306c	      1558	intel_display.c	FUNCTION_52	FOR_1
0x40130a9	          0x4889df	                            mov rdi, rbx	      5912	intel_display.c	FUNCTION_179	CALL_15
0x40130ac	      0xe8cfacffff	               call sym.i9xx_pfit_enable	      5912	intel_display.c	FUNCTION_179	CALL_15
0x40130b1	          0x4c89ef	                            mov rdi, r13	      5914	intel_display.c	FUNCTION_179	CALL_16
0x40130b4	      0xe800000000	                          call 0x40130b9	      5914	intel_display.c	FUNCTION_179	CALL_16
0x40130b9	    0x498b86605500	          mov rax, qword [r14 + 0x5560] 	      5916	intel_display.c	FUNCTION_179	IF_4
0x40130c0	          0x4885c0	                           test rax, rax	      5916	intel_display.c	FUNCTION_179	IF_4
0x40130c3	     0xf84f3000000	                            je 0x40131bc	      5916	intel_display.c	FUNCTION_179	IF_4
0x40130c9	    0x488bb3c80400	           mov rsi, qword [rbx + 0x4c8] 	      5917	intel_display.c	FUNCTION_179	IF_4	CALL_17
0x40130d0	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5917	intel_display.c	FUNCTION_179	IF_4	CALL_17
0x40130d5	      0xe800000000	                          call 0x40130da	      5917	intel_display.c	FUNCTION_179	IF_4	CALL_17
0x40130da	          0x4c89ef	                            mov rdi, r13	      5921	intel_display.c	FUNCTION_179	CALL_19
0x40130dd	      0xe86e9effff	              call sym.intel_enable_pipe	      5921	intel_display.c	FUNCTION_179	CALL_19
0x40130e2	          0x4889df	                            mov rdi, rbx	      5923	intel_display.c	FUNCTION_179	CALL_20
0x40130e5	      0xe8c615ffff	         call sym.assert_vblank_disabled	      5923	intel_display.c	FUNCTION_179	CALL_20
0x40130ea	          0x4889df	                            mov rdi, rbx	      5924	intel_display.c	FUNCTION_179	CALL_21
0x40130ed	      0xe800000000	                          call 0x40130f2	      5924	intel_display.c	FUNCTION_179	CALL_21
0x40130f2	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      5926	intel_display.c	FUNCTION_179	CALL_22
0x40130f7	    0x654833042528	                xor rax, qword gs:[0x28]	      5926	intel_display.c	FUNCTION_179	CALL_22
0x4013100	     0xf85f7000000	                           jne 0x40131fd	      5926	intel_display.c	FUNCTION_179	CALL_22
0x4013106	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      5926	intel_display.c	FUNCTION_179	CALL_22
0x401310b	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      5926	intel_display.c	FUNCTION_179	CALL_22
0x4013110	        0x4883c458	                           add rsp, 0x58	      5927	intel_display.c	FUNCTION_179
0x4013114	          0x4c89ee	                            mov rsi, r13	      5926	intel_display.c	FUNCTION_179	CALL_22
0x4013117	          0x4889df	                            mov rdi, rbx	      5926	intel_display.c	FUNCTION_179	CALL_22
0x401311a	              0x5b	                                 pop rbx	      5927	intel_display.c	FUNCTION_179
0x401311b	              0x5d	                                 pop rbp	      5927	intel_display.c	FUNCTION_179
0x401311c	            0x415c	                                 pop r12	      5927	intel_display.c	FUNCTION_179
0x401311e	            0x415d	                                 pop r13	      5927	intel_display.c	FUNCTION_179
0x4013120	            0x415e	                                 pop r14	      5927	intel_display.c	FUNCTION_179
0x4013122	            0x415f	                                 pop r15	      5927	intel_display.c	FUNCTION_179
0x4013124	      0xe99733ffff	   jmp sym.intel_encoders_enable.isra.99	      5926	intel_display.c	FUNCTION_179	CALL_22
0x4013129	    0x8bb3b0040000	           mov esi, dword [rbx + 0x4b0] 	      1517	intel_display.c	FUNCTION_52	CALL_6
0x401312f	          0x4c89ff	                            mov rdi, r15	      1517	intel_display.c	FUNCTION_52	CALL_6
0x4013132	      0xe800000000	                          call 0x4013137	      1517	intel_display.c	FUNCTION_52	CALL_6
0x4013137	    0x41f687640600	              test byte [r15 + 0x664], 2	      1520	intel_display.c	FUNCTION_52	IF_2	CALL_8
0x401313f	     0xf84aafeffff	                            je 0x4012fef	      1520	intel_display.c	FUNCTION_52	IF_2	CALL_8
0x4013145	      0xe9adfdffff	                           jmp 0x4012ef7	      1520	intel_display.c	FUNCTION_52	IF_2	CALL_8
0x401314a	    0x418b876c0600	           mov eax, dword [r15 + 0x66c] 	      1546	intel_display.c	FUNCTION_52	IF_3	CALL_19
0x4013151	    0x4d8b8f180800	            mov r9, qword [r15 + 0x818] 	      1546	intel_display.c	FUNCTION_52	IF_3	CALL_19
0x4013158	          0x4c89ff	                            mov rdi, r15	      1546	intel_display.c	FUNCTION_52	IF_3	CALL_19
0x401315b	    0x418b95840200	           mov edx, dword [r13 + 0x284] 	      1546	intel_display.c	FUNCTION_52	IF_3	CALL_19
0x4013162	    0x8d881c600000	                 lea ecx, [rax + 0x601c]	      1546	intel_display.c	FUNCTION_52	IF_3	CALL_19
0x4013168	        0x894c2444	             mov dword [rsp + 0x44], ecx	      1546	intel_display.c	FUNCTION_52	IF_3	CALL_19
0x401316c	    0x8d8820600000	                 lea ecx, [rax + 0x6020]	      1546	intel_display.c	FUNCTION_52	IF_3	CALL_19
0x4013172	       0x53c600000	                         add eax, 0x603c	      1546	intel_display.c	FUNCTION_52	IF_3	CALL_19
0x4013177	        0x8944244c	             mov dword [rsp + 0x4c], eax	      1546	intel_display.c	FUNCTION_52	IF_3	CALL_19
0x401317b	    0x486383b00400	        movsxd rax, dword [rbx + 0x4b0] 	      1546	intel_display.c	FUNCTION_52	IF_3	CALL_19
0x4013182	        0x894c2448	             mov dword [rsp + 0x48], ecx	      1546	intel_display.c	FUNCTION_52	IF_3	CALL_19
0x4013186	      0xb901000000	                              mov ecx, 1	      1546	intel_display.c	FUNCTION_52	IF_3	CALL_19
0x401318b	        0x8b748444	    mov esi, dword [rsp + rax*4 + 0x44] 	      1546	intel_display.c	FUNCTION_52	IF_3	CALL_19
0x401318f	      0xe800000000	                          call 0x4013194	      1546	intel_display.c	FUNCTION_52	IF_3	CALL_19
0x4013194	      0xe9cdfeffff	                           jmp 0x4013066	      1546	intel_display.c	FUNCTION_52	IF_3	CALL_19
0x4013199	      0xba01000000	                              mov edx, 1	      5906	intel_display.c	FUNCTION_179	CALL_12
0x401319e	            0x89ee	                            mov esi, ebp	      5906	intel_display.c	FUNCTION_179	CALL_12
0x40131a0	          0x4c89f7	                            mov rdi, r14	      5906	intel_display.c	FUNCTION_179	CALL_12
0x40131a3	      0xe800000000	                          call 0x40131a8	      5906	intel_display.c	FUNCTION_179	CALL_12
0x40131a8	      0xe9bcfcffff	                           jmp 0x4012e69	      5906	intel_display.c	FUNCTION_179	CALL_12
0x40131ad	            0x31f6	                            xor esi, esi	      5896	intel_display.c	FUNCTION_179	CALL_7
0x40131af	          0x4889df	                            mov rdi, rbx	      5896	intel_display.c	FUNCTION_179	CALL_7
0x40131b2	      0xe800000000	                          call 0x40131b7	      5896	intel_display.c	FUNCTION_179	CALL_7
0x40131b7	      0xe980fcffff	                           jmp 0x4012e3c	      5896	intel_display.c	FUNCTION_179	CALL_7
0x40131bc	          0x4889df	                            mov rdi, rbx	      5920	intel_display.c	FUNCTION_179	CALL_18
0x40131bf	      0xe800000000	                          call 0x40131c4	      5920	intel_display.c	FUNCTION_179	CALL_18
0x40131c4	      0xe911ffffff	                           jmp 0x40130da	      5920	intel_display.c	FUNCTION_179	CALL_18
0x40131c9	    0x48c7c6000000	                              mov rsi, 0	      5890	intel_display.c	FUNCTION_179	IF_1	CALL_4
0x40131d0	    0x48c7c7000000	                              mov rdi, 0	      5890	intel_display.c	FUNCTION_179	IF_1	CALL_4
0x40131d7	      0xe800000000	                          call 0x40131dc	      5890	intel_display.c	FUNCTION_179	IF_1	CALL_4
0x40131dc	             0xf0b	                                     ud2	      5890	intel_display.c	FUNCTION_179	IF_1	CALL_4
0x40131de	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      5927	intel_display.c	FUNCTION_179
0x40131e3	    0x654833042528	                xor rax, qword gs:[0x28]	      5927	intel_display.c	FUNCTION_179
0x40131ec	            0x750f	                           jne 0x40131fd	      5927	intel_display.c	FUNCTION_179
0x40131ee	        0x4883c458	                           add rsp, 0x58	      5927	intel_display.c	FUNCTION_179
0x40131f2	              0x5b	                                 pop rbx	      5927	intel_display.c	FUNCTION_179
0x40131f3	              0x5d	                                 pop rbp	      5927	intel_display.c	FUNCTION_179
0x40131f4	            0x415c	                                 pop r12	      5927	intel_display.c	FUNCTION_179
0x40131f6	            0x415d	                                 pop r13	      5927	intel_display.c	FUNCTION_179
0x40131f8	            0x415e	                                 pop r14	      5927	intel_display.c	FUNCTION_179
0x40131fa	            0x415f	                                 pop r15	      5927	intel_display.c	FUNCTION_179
0x40131fc	              0xc3	                                     ret	      5927	intel_display.c	FUNCTION_179
0x40131fd	      0xe800000000	                          call 0x4013202	      5927	intel_display.c	FUNCTION_179
intel_link_compute_m_n	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,2	24
0x4011b60	            0x4154	                                push r12	      6536	intel_display.c	FUNCTION_201
0x4011b62	              0x55	                                push rbp	      6536	intel_display.c	FUNCTION_201
0x4011b63	            0x89cd	                            mov ebp, ecx	      6536	intel_display.c	FUNCTION_201
0x4011b65	              0x53	                                push rbx	      6536	intel_display.c	FUNCTION_201
0x4011b66	            0x89d3	                            mov ebx, edx	      6536	intel_display.c	FUNCTION_201
0x4011b68	        0x450fb6e1	                         movzx r12d, r9b	      6539	intel_display.c	FUNCTION_201	CALL_1
0x4011b6c	           0xfaff5	                           imul esi, ebp	      6539	intel_display.c	FUNCTION_201	CALL_1
0x4011b6f	        0x498d4808	                       lea rcx, [r8 + 8]	      6541	intel_display.c	FUNCTION_201
0x4011b73	        0x498d5004	                       lea rdx, [r8 + 4]	      6541	intel_display.c	FUNCTION_201
0x4011b77	           0xfaffb	                           imul edi, ebx	      6539	intel_display.c	FUNCTION_201	CALL_1
0x4011b7a	          0x4d89c3	                             mov r11, r8	      6536	intel_display.c	FUNCTION_201
0x4011b7d	    0x41c700400000	                    mov dword [r8], 0x40	      6537	intel_display.c	FUNCTION_201
0x4011b84	          0x4589e0	                           mov r8d, r12d	      6539	intel_display.c	FUNCTION_201	CALL_1
0x4011b87	          0xc1e603	                              shl esi, 3	      6539	intel_display.c	FUNCTION_201	CALL_1
0x4011b8a	      0xe8c110ffff	                    call sym.compute_m_n	      6539	intel_display.c	FUNCTION_201	CALL_1
0x4011b8f	          0x4589e0	                           mov r8d, r12d	      6544	intel_display.c	FUNCTION_201	CALL_2
0x4011b92	            0x89ee	                            mov esi, ebp	      6544	intel_display.c	FUNCTION_201	CALL_2
0x4011b94	            0x89df	                            mov edi, ebx	      6544	intel_display.c	FUNCTION_201	CALL_2
0x4011b96	              0x5b	                                 pop rbx	      6547	intel_display.c	FUNCTION_201
0x4011b97	              0x5d	                                 pop rbp	      6547	intel_display.c	FUNCTION_201
0x4011b98	            0x415c	                                 pop r12	      6547	intel_display.c	FUNCTION_201
0x4011b9a	        0x498d4b10	                   lea rcx, [r11 + 0x10]	      6545	intel_display.c	FUNCTION_201
0x4011b9e	        0x498d530c	                    lea rdx, [r11 + 0xc]	      6545	intel_display.c	FUNCTION_201
0x4011ba2	      0xe9a910ffff	                     jmp sym.compute_m_n	      6544	intel_display.c	FUNCTION_201	CALL_2
ironlake_crtc_compute_clock	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,8:ELSE,4:functions,0:CALL,12	200
0x400ae20	            0x4155	                                push r13	      8415	intel_display.c	ELSE_4	FUNCTION_249
0x400ae22	            0x4154	                                push r12	      8415	intel_display.c	ELSE_4	FUNCTION_249
0x400ae24	            0x89f0	                            mov eax, esi	      8421	intel_display.c	ELSE_4	FUNCTION_249	CALL_2
0x400ae26	              0x55	                                push rbp	      8415	intel_display.c	ELSE_4	FUNCTION_249
0x400ae27	              0x53	                                push rbx	      8415	intel_display.c	ELSE_4	FUNCTION_249
0x400ae28	          0x4889fd	                            mov rbp, rdi	      8415	intel_display.c	ELSE_4	FUNCTION_249
0x400ae2b	        0x4883ec08	                              sub rsp, 8	      8415	intel_display.c	ELSE_4	FUNCTION_249
0x400ae2f	          0x4c8b27	                    mov r12, qword [rdi]	      8416	intel_display.c	ELSE_4	FUNCTION_249
0x400ae32	    0x488dbe880200	                  lea rdi, [rsi + 0x288]	      8421	intel_display.c	ELSE_4	FUNCTION_249	CALL_2
0x400ae39	    0x48c786800200	              mov qword [rsi + 0x280], 0	      8421	intel_display.c	ELSE_4	FUNCTION_249	CALL_2
0x400ae44	    0x48c786cc0200	              mov qword [rsi + 0x2cc], 0	      8421	intel_display.c	ELSE_4	FUNCTION_249	CALL_2
0x400ae4f	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	      8421	intel_display.c	ELSE_4	FUNCTION_249	CALL_2
0x400ae53	            0x29f8	                            sub eax, edi	      8421	intel_display.c	ELSE_4	FUNCTION_249	CALL_2
0x400ae55	    0x8d88d4020000	                  lea ecx, [rax + 0x2d4]	      8421	intel_display.c	ELSE_4	FUNCTION_249	CALL_2
0x400ae5b	            0x31c0	                            xor eax, eax	      8421	intel_display.c	ELSE_4	FUNCTION_249	CALL_2
0x400ae5d	          0xc1e903	                              shr ecx, 3	      8421	intel_display.c	ELSE_4	FUNCTION_249	CALL_2
0x400ae60	          0xf348ab	              rep stosq qword [rdi], rax	      8421	intel_display.c	ELSE_4	FUNCTION_249	CALL_2
0x400ae63	    0x80be38020000	               cmp byte [rsi + 0x238], 0	      8425	intel_display.c	ELSE_4	FUNCTION_249	IF_1
0x400ae6a	     0xf849d010000	                            je 0x400b00d	      8425	intel_display.c	ELSE_4	FUNCTION_249	IF_1
0x400ae70	          0x4889f3	                            mov rbx, rsi	      8425	intel_display.c	ELSE_4	FUNCTION_249	IF_1
0x400ae73	    0x8b8b44020000	           mov ecx, dword [rbx + 0x244] 	      8425	intel_display.c	ELSE_4	FUNCTION_249	IF_1
0x400ae79	          0xf6c110	                           test cl, 0x10	      8428	intel_display.c	ELSE_4	FUNCTION_249	IF_2	CALL_3
0x400ae7c	     0xf8498010000	                            je 0x400b01a	      8428	intel_display.c	ELSE_4	FUNCTION_249	IF_2	CALL_3
0x400ae82	    0x8b3d00000000	            mov edi, dword [0x0400ae88] 	      6551	intel_display.c	FUNCTION_202	IF_1
0x400ae88	            0x85ff	                           test edi, edi	      6551	intel_display.c	FUNCTION_202	IF_1
0x400ae8a	     0xf88f5010000	                            js 0x400b085	      6551	intel_display.c	FUNCTION_202	IF_1
0x400ae90	     0xf850d020000	                           jne 0x400b0a3	      8429	intel_display.c	ELSE_4	FUNCTION_249	IF_2	IF_3	CALL_4
0x400ae96	          0x4c89e7	                            mov rdi, r12	      8435	intel_display.c	ELSE_4	FUNCTION_249	IF_2	IF_4	CALL_6
0x400ae99	      0xe800000000	                          call 0x400ae9e	      8435	intel_display.c	ELSE_4	FUNCTION_249	IF_2	IF_4	CALL_6
0x400ae9e	    0x48c7c7000000	                              mov rdi, 0	      8419	intel_display.c	ELSE_4	FUNCTION_249
0x400aea5	            0x84c0	                             test al, al	      8419	intel_display.c	ELSE_4	FUNCTION_249
0x400aea7	    0x48c7c0000000	                              mov rax, 0	      8419	intel_display.c	ELSE_4	FUNCTION_249
0x400aeae	      0xb9c0d40100	                        mov ecx, 0x1d4c0	      8419	intel_display.c	ELSE_4	FUNCTION_249
0x400aeb3	        0x480f44f8	                          cmove rdi, rax	      8419	intel_display.c	ELSE_4	FUNCTION_249
0x400aeb7	    0x80bb4c020000	               cmp byte [rbx + 0x24c], 0	      8450	intel_display.c	FUNCTION_249	ELSE_3	ELSE_4	IF_7
0x400aebe	     0xf846b010000	                            je 0x400b02f	      8450	intel_display.c	FUNCTION_249	ELSE_3	ELSE_4	IF_7
0x400aec4	    0x8b8b44020000	           mov ecx, dword [rbx + 0x244] 	      8450	intel_display.c	FUNCTION_249	ELSE_3	ELSE_4	IF_7
0x400aeca	        0x4c8b6d00	                    mov r13, qword [rbp]	      8316	intel_display.c	FUNCTION_248
0x400aece	            0x89cf	                            mov edi, ecx	      8323	intel_display.c	FUNCTION_248	IF_1	CALL_2
0x400aed0	          0x83e710	                           and edi, 0x10	      8323	intel_display.c	FUNCTION_248	IF_1	CALL_2
0x400aed3	     0xf848a010000	                            je 0x400b063	      8323	intel_display.c	FUNCTION_248	IF_1	CALL_2
0x400aed9	    0x8b3500000000	            mov esi, dword [0x0400aedf] 	      6551	intel_display.c	FUNCTION_202	IF_1
0x400aedf	            0x85f6	                           test esi, esi	      6551	intel_display.c	FUNCTION_202	IF_1
0x400aee1	     0xf8842020000	                            js 0x400b129	      6551	intel_display.c	FUNCTION_202	IF_1
0x400aee7	            0x7413	                            je 0x400aefc	      8324	intel_display.c	FUNCTION_248	IF_1	IF_2	CALL_3
0x400aee9	    0x4181bdfc4c00	      cmp dword [r13 + 0x4cfc], 0x186a0 	      8324	intel_display.c	FUNCTION_248	IF_1	IF_2	CALL_3
0x400aef4	    0x41bc19000000	                          mov r12d, 0x19	      8327	intel_display.c	FUNCTION_248	IF_1	IF_2
0x400aefa	            0x7414	                            je 0x400af10	      8324	intel_display.c	FUNCTION_248	IF_1	IF_2	CALL_3
0x400aefc	    0x4183bdf85500	            cmp dword [r13 + 0x55f8], 1 	      8325	intel_display.c	FUNCTION_248	IF_1	IF_2
0x400af04	    0x41bc15000000	                          mov r12d, 0x15	      8322	intel_display.c	FUNCTION_248
0x400af0a	     0xf847b020000	                            je 0x400b18b	      8325	intel_display.c	FUNCTION_248	IF_1	IF_2
0x400af10	    0x448b83500200	           mov r8d, dword [rbx + 0x250] 	      8325	intel_display.c	FUNCTION_248	IF_1	IF_2
0x400af17	    0x8b8354020000	           mov eax, dword [rbx + 0x254] 	      8325	intel_display.c	FUNCTION_248	IF_1	IF_2
0x400af1d	    0x448b8b580200	           mov r9d, dword [rbx + 0x258] 	      8325	intel_display.c	FUNCTION_248	IF_1	IF_2
0x400af24	            0x89c2	                            mov edx, eax	      6564	intel_display.c	FUNCTION_204
0x400af26	          0x4489c6	                            mov esi, r8d	      6564	intel_display.c	FUNCTION_204
0x400af29	        0x8d44800a	           lea eax, [rax + rax*4 + 0xa] 	      8333	intel_display.c	FUNCTION_248	IF_4	CALL_7
0x400af2d	          0xc1e208	                              shl edx, 8	      6564	intel_display.c	FUNCTION_204
0x400af30	          0xc1e610	                           shl esi, 0x10	      6564	intel_display.c	FUNCTION_204
0x400af33	             0x9d6	                             or esi, edx	      6564	intel_display.c	FUNCTION_204
0x400af35	      0x418d540102	                 lea edx, [r9 + rax + 2]	      8333	intel_display.c	FUNCTION_248	IF_4	CALL_7
0x400af3a	        0x450fafe0	                          imul r12d, r8d	      8333	intel_display.c	FUNCTION_248	IF_4	CALL_7
0x400af3e	          0x4409ce	                             or esi, r9d	      6564	intel_display.c	FUNCTION_204
0x400af41	            0x89f0	                            mov eax, esi	      8334	intel_display.c	FUNCTION_248	IF_4
0x400af43	       0xd0000c000	                        or eax, 0xc00000	      8334	intel_display.c	FUNCTION_248	IF_4
0x400af48	          0x4439e2	                           cmp edx, r12d	      8334	intel_display.c	FUNCTION_248	IF_4
0x400af4b	           0xf42f0	                          cmovb esi, eax	      8334	intel_display.c	FUNCTION_248	IF_4
0x400af4e	    0x8b8310030000	           mov eax, dword [rbx + 0x310] 	      8352	intel_display.c	FUNCTION_248
0x400af54	          0x83ff01	                              cmp edi, 1	      8348	intel_display.c	FUNCTION_248	IF_7
0x400af57	            0x19d2	                            sbb edx, edx	      8348	intel_display.c	FUNCTION_248	IF_7
0x400af59	    0x81e2000000fc	                     and edx, 0xfc000000	      8348	intel_display.c	FUNCTION_248	IF_7
0x400af5f	          0x83e801	                              sub eax, 1	      8352	intel_display.c	FUNCTION_248
0x400af62	    0x81c200000008	                   add edx, section_end.	      8348	intel_display.c	FUNCTION_248	IF_7
0x400af68	          0xc1e009	                              shl eax, 9	      8352	intel_display.c	FUNCTION_248
0x400af6b	             0x9d0	                             or eax, edx	      8352	intel_display.c	FUNCTION_248
0x400af6d	            0x89c2	                            mov edx, eax	      8357	intel_display.c	FUNCTION_248	IF_8
0x400af6f	    0x81ca00000040	                      or edx, 0x40000000	      8357	intel_display.c	FUNCTION_248	IF_8
0x400af75	          0xf6c148	                           test cl, 0x48	      8357	intel_display.c	FUNCTION_248	IF_8
0x400af78	           0xf45c2	                         cmovne eax, edx	      8357	intel_display.c	FUNCTION_248	IF_8
0x400af7b	            0x89c2	                            mov edx, eax	      8360	intel_display.c	FUNCTION_248	IF_9
0x400af7d	    0x81ca00000040	                      or edx, 0x40000000	      8360	intel_display.c	FUNCTION_248	IF_9
0x400af83	    0xf7c180090000	                         test ecx, 0x980	      8360	intel_display.c	FUNCTION_248	IF_9
0x400af89	           0xf45c2	                         cmovne eax, edx	      8360	intel_display.c	FUNCTION_248	IF_9
0x400af8c	    0x4180bd700600	               cmp byte [r13 + 0x670], 3	      8376	intel_display.c	FUNCTION_248	IF_10	CALL_13
0x400af94	     0xf845b010000	                            je 0x400b0f5	      8376	intel_display.c	FUNCTION_248	IF_10	CALL_13
0x400af9a	    0x8b8b5c020000	           mov ecx, dword [rbx + 0x25c] 	      8381	intel_display.c	FUNCTION_248
0x400afa0	      0xba01000100	                        mov edx, 0x10001	      8383	intel_display.c	FUNCTION_248
0x400afa5	          0x83e901	                              sub ecx, 1	      8381	intel_display.c	FUNCTION_248
0x400afa8	            0xd3e2	                             shl edx, cl	      8383	intel_display.c	FUNCTION_248
0x400afaa	             0x9d0	                             or eax, edx	      8383	intel_display.c	FUNCTION_248
0x400afac	    0x8b9360020000	           mov edx, dword [rbx + 0x260] 	      8385	intel_display.c	FUNCTION_248	SWITCH_1
0x400afb2	          0x83fa05	                              cmp edx, 5	      8385	intel_display.c	FUNCTION_248	SWITCH_1
0x400afb5	     0xf84c0000000	                            je 0x400b07b	      8385	intel_display.c	FUNCTION_248	SWITCH_1
0x400afbb	            0x89c1	                            mov ecx, eax	      8390	intel_display.c	FUNCTION_248	SWITCH_1
0x400afbd	    0x81c900000001	                       or ecx, 0x1000000	      8390	intel_display.c	FUNCTION_248	SWITCH_1
0x400afc3	          0x83fa07	                              cmp edx, 7	      8390	intel_display.c	FUNCTION_248	SWITCH_1
0x400afc6	           0xf44c1	                          cmove eax, ecx	      8390	intel_display.c	FUNCTION_248	SWITCH_1
0x400afc9	            0x85ff	                           test edi, edi	      8400	intel_display.c	FUNCTION_248	IF_11	CALL_15
0x400afcb	            0x7413	                            je 0x400afe0	      8400	intel_display.c	FUNCTION_248	IF_11	CALL_15
0x400afcd	    0x8b1500000000	            mov edx, dword [0x0400afd3] 	      6551	intel_display.c	FUNCTION_202	IF_1
0x400afd3	            0x85d2	                           test edx, edx	      6551	intel_display.c	FUNCTION_202	IF_1
0x400afd5	     0xf882d010000	                            js 0x400b108	      6551	intel_display.c	FUNCTION_202	IF_1
0x400afdb	            0x7403	                            je 0x400afe0	      8400	intel_display.c	FUNCTION_248	IF_11	CALL_15
0x400afdd	          0x80cc60	                             or ah, 0x60	      8402	intel_display.c	FUNCTION_248	IF_11
0x400afe0	       0xd00000080	                      or eax, 0x80000000	      8408	intel_display.c	FUNCTION_248	ELSE_4
0x400afe5	    0x89b388020000	            mov dword [rbx + 0x288], esi	      8409	intel_display.c	FUNCTION_248	ELSE_4
0x400afeb	    0x89b38c020000	            mov dword [rbx + 0x28c], esi	      8410	intel_display.c	FUNCTION_248	ELSE_4
0x400aff1	            0x31d2	                            xor edx, edx	      8459	intel_display.c	FUNCTION_249	ELSE_4	IF_8	CALL_10
0x400aff3	    0x898380020000	            mov dword [rbx + 0x280], eax	      8408	intel_display.c	FUNCTION_248	ELSE_4
0x400aff9	          0x4889de	                            mov rsi, rbx	      8459	intel_display.c	FUNCTION_249	ELSE_4	IF_8	CALL_10
0x400affc	          0x4889ef	                            mov rdi, rbp	      8459	intel_display.c	FUNCTION_249	ELSE_4	IF_8	CALL_10
0x400afff	      0xe800000000	                          call 0x400b004	      8459	intel_display.c	FUNCTION_249	ELSE_4	IF_8	CALL_10
0x400b004	          0x4885c0	                           test rax, rax	      8459	intel_display.c	FUNCTION_249	ELSE_4	IF_8	CALL_10
0x400b007	     0xf845a010000	                            je 0x400b167	      8459	intel_display.c	FUNCTION_249	ELSE_4	IF_8	CALL_10
0x400b00d	            0x31c0	                            xor eax, eax	      8426	intel_display.c	ELSE_4	FUNCTION_249	IF_1
0x400b00f	        0x4883c408	                              add rsp, 8	      8466	intel_display.c	FUNCTION_249	ELSE_4
0x400b013	              0x5b	                                 pop rbx	      8466	intel_display.c	FUNCTION_249	ELSE_4
0x400b014	              0x5d	                                 pop rbp	      8466	intel_display.c	FUNCTION_249	ELSE_4
0x400b015	            0x415c	                                 pop r12	      8466	intel_display.c	FUNCTION_249	ELSE_4
0x400b017	            0x415d	                                 pop r13	      8466	intel_display.c	FUNCTION_249	ELSE_4
0x400b019	              0xc3	                                     ret	      8466	intel_display.c	FUNCTION_249	ELSE_4
0x400b01a	    0x80bb4c020000	               cmp byte [rbx + 0x24c], 0	      8450	intel_display.c	FUNCTION_249	ELSE_3	ELSE_4	IF_7
0x400b021	            0x753c	                           jne 0x400b05f	      8450	intel_display.c	FUNCTION_249	ELSE_3	ELSE_4	IF_7
0x400b023	      0xb9c0d40100	                        mov ecx, 0x1d4c0	      8419	intel_display.c	ELSE_4	FUNCTION_249
0x400b028	    0x48c7c7000000	                              mov rdi, 0	      8447	intel_display.c	FUNCTION_249	ELSE_3
0x400b02f	    0x8b930c030000	           mov edx, dword [rbx + 0x30c] 	      8451	intel_display.c	FUNCTION_249	ELSE_3	ELSE_4	IF_7	CALL_7
0x400b035	    0x4c8d83500200	                   lea r8, [rbx + 0x250]	      8451	intel_display.c	FUNCTION_249	ELSE_3	ELSE_4	IF_7	CALL_7
0x400b03c	          0x4889de	                            mov rsi, rbx	      8451	intel_display.c	FUNCTION_249	ELSE_3	ELSE_4	IF_7	CALL_7
0x400b03f	      0xe80cb2ffff	     call sym.g4x_find_best_dpll.isra.96	      8451	intel_display.c	FUNCTION_249	ELSE_3	ELSE_4	IF_7	CALL_7
0x400b044	            0x84c0	                             test al, al	      8450	intel_display.c	FUNCTION_249	ELSE_3	ELSE_4	IF_7
0x400b046	     0xf8578feffff	                           jne 0x400aec4	      8450	intel_display.c	FUNCTION_249	ELSE_3	ELSE_4	IF_7
0x400b04c	    0x48c7c7000000	                              mov rdi, 0	      8453	intel_display.c	FUNCTION_249	ELSE_3	ELSE_4	IF_7	CALL_8
0x400b053	      0xe800000000	                          call 0x400b058	      8453	intel_display.c	FUNCTION_249	ELSE_3	ELSE_4	IF_7	CALL_8
0x400b058	      0xb8eaffffff	                     mov eax, 0xffffffea	      8454	intel_display.c	FUNCTION_249	ELSE_3	ELSE_4	IF_7
0x400b05d	            0xebb0	                           jmp 0x400b00f	      8454	intel_display.c	FUNCTION_249	ELSE_3	ELSE_4	IF_7
0x400b05f	        0x4c8b6d00	                    mov r13, qword [rbp]	      8316	intel_display.c	FUNCTION_248
0x400b063	            0x31ff	                            xor edi, edi	      8328	intel_display.c	FUNCTION_248	ELSE_1	IF_3
0x400b065	    0x80bb4d020000	               cmp byte [rbx + 0x24d], 1	      8328	intel_display.c	FUNCTION_248	ELSE_1	IF_3
0x400b06c	          0x4519e4	                          sbb r12d, r12d	      8328	intel_display.c	FUNCTION_248	ELSE_1	IF_3
0x400b06f	          0x41f7d4	                                not r12d	      8328	intel_display.c	FUNCTION_248	ELSE_1	IF_3
0x400b072	        0x4183c415	                          add r12d, 0x15	      8328	intel_display.c	FUNCTION_248	ELSE_1	IF_3
0x400b076	      0xe995feffff	                           jmp 0x400af10	      8328	intel_display.c	FUNCTION_248	ELSE_1	IF_3
0x400b07b	       0xd00000001	                       or eax, 0x1000000	      8387	intel_display.c	FUNCTION_248	SWITCH_1
0x400b080	      0xe944ffffff	                           jmp 0x400afc9	      8387	intel_display.c	FUNCTION_248	SWITCH_1
0x400b085	    0x41f68424f84c	         test byte [r12 + 0x4cf8], 0x10 	      6554	intel_display.c	FUNCTION_202
0x400b08e	     0xf8402feffff	                            je 0x400ae96	      6554	intel_display.c	FUNCTION_202
0x400b094	    0x41f684240056	            test byte [r12 + 0x5600], 2 	      6554	intel_display.c	FUNCTION_202
0x400b09d	     0xf85f3fdffff	                           jne 0x400ae96	      6554	intel_display.c	FUNCTION_202
0x400b0a3	    0x418b9424fc4c	          mov edx, dword [r12 + 0x4cfc] 	      8430	intel_display.c	ELSE_4	FUNCTION_249	IF_2	IF_3	CALL_5
0x400b0ab	    0x48c7c6000000	                              mov rsi, 0	      8430	intel_display.c	ELSE_4	FUNCTION_249	IF_2	IF_3	CALL_5
0x400b0b2	      0xbf04000000	                              mov edi, 4	      8430	intel_display.c	ELSE_4	FUNCTION_249	IF_2	IF_3	CALL_5
0x400b0b7	      0xe800000000	                          call 0x400b0bc	      8430	intel_display.c	ELSE_4	FUNCTION_249	IF_2	IF_3	CALL_5
0x400b0bc	    0x418b8c24fc4c	          mov ecx, dword [r12 + 0x4cfc] 	      8432	intel_display.c	ELSE_4	FUNCTION_249	IF_2	IF_3
0x400b0c4	          0x4c89e7	                            mov rdi, r12	      8435	intel_display.c	ELSE_4	FUNCTION_249	IF_2	IF_4	CALL_6
0x400b0c7	        0x894c2404	                mov dword [rsp + 4], ecx	      8432	intel_display.c	ELSE_4	FUNCTION_249	IF_2	IF_3
0x400b0cb	      0xe800000000	                          call 0x400b0d0	      8435	intel_display.c	ELSE_4	FUNCTION_249	IF_2	IF_4	CALL_6
0x400b0d0	            0x84c0	                             test al, al	      8435	intel_display.c	ELSE_4	FUNCTION_249	IF_2	IF_4	CALL_6
0x400b0d2	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      8435	intel_display.c	ELSE_4	FUNCTION_249	IF_2	IF_4	CALL_6
0x400b0d6	            0x7472	                            je 0x400b14a	      8435	intel_display.c	ELSE_4	FUNCTION_249	IF_2	IF_4	CALL_6
0x400b0d8	    0x81f9a0860100	                        cmp ecx, 0x186a0	      8437	intel_display.c	ELSE_4	FUNCTION_249	IF_2	IF_4	IF_5
0x400b0de	    0x48c7c7000000	                              mov rdi, 0	      8437	intel_display.c	ELSE_4	FUNCTION_249	IF_2	IF_4	IF_5
0x400b0e5	    0x48c7c0000000	                              mov rax, 0	      8437	intel_display.c	ELSE_4	FUNCTION_249	IF_2	IF_4	IF_5
0x400b0ec	        0x480f45f8	                         cmovne rdi, rax	      8437	intel_display.c	ELSE_4	FUNCTION_249	IF_2	IF_4	IF_5
0x400b0f0	      0xe9c2fdffff	                           jmp 0x400aeb7	      8437	intel_display.c	ELSE_4	FUNCTION_249	IF_2	IF_4	IF_5
0x400b0f5	            0x89c2	                            mov edx, eax	      8378	intel_display.c	FUNCTION_248	IF_10
0x400b0f7	    0x81ca00000040	                      or edx, 0x40000000	      8378	intel_display.c	FUNCTION_248	IF_10
0x400b0fd	          0x83e102	                              and ecx, 2	      8378	intel_display.c	FUNCTION_248	IF_10
0x400b100	           0xf45c2	                         cmovne eax, edx	      8378	intel_display.c	FUNCTION_248	IF_10
0x400b103	      0xe992feffff	                           jmp 0x400af9a	      8378	intel_display.c	FUNCTION_248	IF_10
0x400b108	    0x41f685f84c00	         test byte [r13 + 0x4cf8], 0x10 	      6554	intel_display.c	FUNCTION_202
0x400b110	     0xf84cafeffff	                            je 0x400afe0	      6554	intel_display.c	FUNCTION_202
0x400b116	    0x41f685005600	            test byte [r13 + 0x5600], 2 	      6554	intel_display.c	FUNCTION_202
0x400b11e	     0xf85bcfeffff	                           jne 0x400afe0	      6554	intel_display.c	FUNCTION_202
0x400b124	      0xe9b4feffff	                           jmp 0x400afdd	      6554	intel_display.c	FUNCTION_202
0x400b129	    0x41f685f84c00	         test byte [r13 + 0x4cf8], 0x10 	      6554	intel_display.c	FUNCTION_202
0x400b131	     0xf84c5fdffff	                            je 0x400aefc	      6554	intel_display.c	FUNCTION_202
0x400b137	    0x41f685005600	            test byte [r13 + 0x5600], 2 	      6554	intel_display.c	FUNCTION_202
0x400b13f	     0xf85b7fdffff	                           jne 0x400aefc	      6554	intel_display.c	FUNCTION_202
0x400b145	      0xe99ffdffff	                           jmp 0x400aee9	      6554	intel_display.c	FUNCTION_202
0x400b14a	    0x81f9a0860100	                        cmp ecx, 0x186a0	      8442	intel_display.c	ELSE_4	FUNCTION_249	IF_2	ELSE_2	IF_6
0x400b150	    0x48c7c7000000	                              mov rdi, 0	      8442	intel_display.c	ELSE_4	FUNCTION_249	IF_2	ELSE_2	IF_6
0x400b157	    0x48c7c0000000	                              mov rax, 0	      8442	intel_display.c	ELSE_4	FUNCTION_249	IF_2	ELSE_2	IF_6
0x400b15e	        0x480f45f8	                         cmovne rdi, rax	      8442	intel_display.c	ELSE_4	FUNCTION_249	IF_2	ELSE_2	IF_6
0x400b162	      0xe950fdffff	                           jmp 0x400aeb7	      8442	intel_display.c	ELSE_4	FUNCTION_249	IF_2	ELSE_2	IF_6
0x400b167	    0x8b95b0040000	           mov edx, dword [rbp + 0x4b0] 	      8460	intel_display.c	FUNCTION_249	ELSE_4	IF_8	CALL_11
0x400b16d	    0x48c7c6000000	                              mov rsi, 0	      8460	intel_display.c	FUNCTION_249	ELSE_4	IF_8	CALL_11
0x400b174	      0xbf02000000	                              mov edi, 2	      8460	intel_display.c	FUNCTION_249	ELSE_4	IF_8	CALL_11
0x400b179	          0x83c241	                           add edx, 0x41	      8460	intel_display.c	FUNCTION_249	ELSE_4	IF_8	CALL_11
0x400b17c	      0xe800000000	                          call 0x400b181	      8460	intel_display.c	FUNCTION_249	ELSE_4	IF_8	CALL_11
0x400b181	      0xb8eaffffff	                     mov eax, 0xffffffea	      8462	intel_display.c	FUNCTION_249	ELSE_4	IF_8
0x400b186	      0xe984feffff	                           jmp 0x400b00f	      8462	intel_display.c	FUNCTION_249	ELSE_4	IF_8
0x400b18b	          0x4c89ef	                            mov rdi, r13	      8326	intel_display.c	FUNCTION_248	IF_1	IF_2	CALL_5
0x400b18e	      0xe800000000	                          call 0x400b193	      8326	intel_display.c	FUNCTION_248	IF_1	IF_2	CALL_5
0x400b193	    0x8b8b44020000	           mov ecx, dword [rbx + 0x244] 	      8326	intel_display.c	FUNCTION_248	IF_1	IF_2	CALL_5
0x400b199	            0x89cf	                            mov edi, ecx	      8326	intel_display.c	FUNCTION_248	IF_1	IF_2	CALL_5
0x400b19b	          0x83e710	                           and edi, 0x10	      8326	intel_display.c	FUNCTION_248	IF_1	IF_2	CALL_5
0x400b19e	            0x84c0	                             test al, al	      8326	intel_display.c	FUNCTION_248	IF_1	IF_2	CALL_5
0x400b1a0	     0xf846afdffff	                            je 0x400af10	      8326	intel_display.c	FUNCTION_248	IF_1	IF_2	CALL_5
0x400b1a6	    0x41bc19000000	                          mov r12d, 0x19	      8327	intel_display.c	FUNCTION_248	IF_1	IF_2
0x400b1ac	      0xe95ffdffff	                           jmp 0x400af10	      8327	intel_display.c	FUNCTION_248	IF_1	IF_2
i9xx_set_pipeconf	FOR,0:SWITCH,1:DO,0:WHILE,0:IF,7:ELSE,2:functions,0:CALL,16	81
0x4002780	              0x55	                                push rbp	      7246	intel_display.c	FUNCTION_223
0x4002781	              0x53	                                push rbx	      7246	intel_display.c	FUNCTION_223
0x4002782	            0x31d2	                            xor edx, edx	      7246	intel_display.c	FUNCTION_223
0x4002784	          0x488b1f	                    mov rbx, qword [rdi]	      7247	intel_display.c	FUNCTION_223	CALL_1
0x4002787	          0x4889fd	                            mov rbp, rdi	      7246	intel_display.c	FUNCTION_223
0x400278a	    0x8b8b64060000	           mov ecx, dword [rbx + 0x664] 	      7253	intel_display.c	FUNCTION_223	IF_1	CALL_2
0x4002790	          0xf6c102	                              test cl, 2	      7253	intel_display.c	FUNCTION_223	IF_1	CALL_2
0x4002793	     0xf85fb000000	                           jne 0x4002894	      7253	intel_display.c	FUNCTION_223	IF_1	CALL_2
0x4002799	    0x488b85c80400	           mov rax, qword [rbp + 0x4c8] 	      7256	intel_display.c	FUNCTION_223	IF_2
0x40027a0	            0x89d6	                            mov esi, edx	      7257	intel_display.c	FUNCTION_223	IF_2
0x40027a2	    0x81ce00000040	                      or esi, 0x40000000	      7257	intel_display.c	FUNCTION_223	IF_2
0x40027a8	    0x80b84b030000	               cmp byte [rax + 0x34b], 0	      7257	intel_display.c	FUNCTION_223	IF_2
0x40027af	           0xf45d6	                         cmovne edx, esi	      7257	intel_display.c	FUNCTION_223	IF_2
0x40027b2	    0xf7c100602400	                      test ecx, 0x246000	      7260	intel_display.c	FUNCTION_223	IF_3	CALL_6
0x40027b8	            0x742f	                            je 0x40027e9	      7260	intel_display.c	FUNCTION_223	IF_3	CALL_6
0x40027ba	    0x80b84a020000	               cmp byte [rax + 0x24a], 0	      7263	intel_display.c	FUNCTION_223	IF_3	IF_4
0x40027c1	    0x8bb0dc020000	           mov esi, dword [rax + 0x2dc] 	      7263	intel_display.c	FUNCTION_223	IF_3	IF_4
0x40027c7	            0x7514	                           jne 0x40027dd	      7263	intel_display.c	FUNCTION_223	IF_3	IF_4
0x40027c9	          0x83fe18	                           cmp esi, 0x18	      7267	intel_display.c	FUNCTION_223	IF_3	SWITCH_1
0x40027cc	            0x741b	                            je 0x40027e9	      7267	intel_display.c	FUNCTION_223	IF_3	SWITCH_1
0x40027ce	          0x83fe1e	                           cmp esi, 0x1e	      7267	intel_display.c	FUNCTION_223	IF_3	SWITCH_1
0x40027d1	            0x7413	                            je 0x40027e6	      7267	intel_display.c	FUNCTION_223	IF_3	SWITCH_1
0x40027d3	          0x83ca40	                            or edx, 0x40	      7269	intel_display.c	FUNCTION_223	IF_3	SWITCH_1
0x40027d6	          0x83fe12	                           cmp esi, 0x12	      7267	intel_display.c	FUNCTION_223	IF_3	SWITCH_1
0x40027d9	            0x740e	                            je 0x40027e9	      7267	intel_display.c	FUNCTION_223	IF_3	SWITCH_1
0x40027db	             0xf0b	                                     ud2	      7267	intel_display.c	FUNCTION_223	IF_3	SWITCH_1
0x40027dd	          0x83fe1e	                           cmp esi, 0x1e	      7263	intel_display.c	FUNCTION_223	IF_3	IF_4
0x40027e0	     0xf85f5000000	                           jne 0x40028db	      7263	intel_display.c	FUNCTION_223	IF_3	IF_4
0x40027e6	          0x83ca20	                            or edx, 0x20	      7275	intel_display.c	FUNCTION_223	IF_3	SWITCH_1
0x40027e9	    0xf6809c000000	           test byte [rax + 0x9c], 0x10 	      7283	intel_display.c	FUNCTION_223	IF_5
0x40027f0	     0xf8581000000	                           jne 0x4002877	      7283	intel_display.c	FUNCTION_223	IF_5
0x40027f6	    0x81e100002400	                       and ecx, 0x240000	      7292	intel_display.c	FUNCTION_223	IF_7	CALL_12
0x40027fc	            0x740f	                            je 0x400280d	      7292	intel_display.c	FUNCTION_223	IF_7	CALL_12
0x40027fe	            0x89d1	                            mov ecx, edx	      7294	intel_display.c	FUNCTION_223	IF_7
0x4002800	          0x80cd20	                             or ch, 0x20	      7294	intel_display.c	FUNCTION_223	IF_7
0x4002803	    0x80b840020000	               cmp byte [rax + 0x240], 0	      7294	intel_display.c	FUNCTION_223	IF_7
0x400280a	           0xf45d1	                         cmovne edx, ecx	      7294	intel_display.c	FUNCTION_223	IF_7
0x400280d	    0x486385b00400	        movsxd rax, dword [rbp + 0x4b0] 	      7296	intel_display.c	FUNCTION_223	CALL_14
0x4002814	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	      7296	intel_display.c	FUNCTION_223	CALL_14
0x400281a	          0x4889df	                            mov rdi, rbx	      7296	intel_display.c	FUNCTION_223	CALL_14
0x400281d	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	      7296	intel_display.c	FUNCTION_223	CALL_14
0x4002824	    0x8b8483800600	   mov eax, dword [rbx + rax*4 + 0x680] 	      7296	intel_display.c	FUNCTION_223	CALL_14
0x400282b	    0x2b8380060000	            sub eax, dword [rbx + 0x680]	      7296	intel_display.c	FUNCTION_223	CALL_14
0x4002831	    0x8db408080007	          lea esi, [rax + rcx + 0x70008]	      7296	intel_display.c	FUNCTION_223	CALL_14
0x4002838	      0xb901000000	                              mov ecx, 1	      7296	intel_display.c	FUNCTION_223	CALL_14
0x400283d	      0xe800000000	                          call 0x4002842	      7296	intel_display.c	FUNCTION_223	CALL_14
0x4002842	    0x486385b00400	        movsxd rax, dword [rbp + 0x4b0] 	      7297	intel_display.c	FUNCTION_223	CALL_16
0x4002849	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	      7297	intel_display.c	FUNCTION_223	CALL_16
0x400284f	          0x4889df	                            mov rdi, rbx	      7297	intel_display.c	FUNCTION_223	CALL_16
0x4002852	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	      7297	intel_display.c	FUNCTION_223	CALL_16
0x4002859	    0x8b8483800600	   mov eax, dword [rbx + rax*4 + 0x680] 	      7297	intel_display.c	FUNCTION_223	CALL_16
0x4002860	    0x2b8380060000	            sub eax, dword [rbx + 0x680]	      7297	intel_display.c	FUNCTION_223	CALL_16
0x4002866	    0x8db410080007	          lea esi, [rax + rdx + 0x70008]	      7297	intel_display.c	FUNCTION_223	CALL_16
0x400286d	            0x31d2	                            xor edx, edx	      7297	intel_display.c	FUNCTION_223	CALL_16
0x400286f	      0xe800000000	                          call 0x4002874	      7297	intel_display.c	FUNCTION_223	CALL_16
0x4002874	              0x5b	                                 pop rbx	      7298	intel_display.c	FUNCTION_223
0x4002875	              0x5d	                                 pop rbp	      7298	intel_display.c	FUNCTION_223
0x4002876	              0xc3	                                     ret	      7298	intel_display.c	FUNCTION_223
0x4002877	    0x80bb5c060000	               cmp byte [rbx + 0x65c], 3	      7284	intel_display.c	FUNCTION_223	IF_5	IF_6	CALL_9
0x400287e	            0x7609	                           jbe 0x4002889	      7284	intel_display.c	FUNCTION_223	IF_5	IF_6	CALL_9
0x4002880	    0xf68044020000	              test byte [rax + 0x244], 8	      7284	intel_display.c	FUNCTION_223	IF_5	IF_6	CALL_9
0x4002887	            0x745a	                            je 0x40028e3	      7284	intel_display.c	FUNCTION_223	IF_5	IF_6	CALL_9
0x4002889	    0x81ca0000c000	                        or edx, 0xc00000	      7286	intel_display.c	FUNCTION_223	IF_5	IF_6
0x400288f	      0xe962ffffff	                           jmp 0x40027f6	      7286	intel_display.c	FUNCTION_223	IF_5	IF_6
0x4002894	    0x486387b00400	        movsxd rax, dword [rdi + 0x4b0] 	      7254	intel_display.c	FUNCTION_223	CALL_4
0x400289b	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	      7254	intel_display.c	FUNCTION_223	CALL_4
0x40028a1	          0x4889df	                            mov rdi, rbx	      7254	intel_display.c	FUNCTION_223	CALL_4
0x40028a4	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	      7254	intel_display.c	FUNCTION_223	CALL_4
0x40028ab	    0x8b8483800600	   mov eax, dword [rbx + rax*4 + 0x680] 	      7254	intel_display.c	FUNCTION_223	CALL_4
0x40028b2	    0x2b8380060000	            sub eax, dword [rbx + 0x680]	      7254	intel_display.c	FUNCTION_223	CALL_4
0x40028b8	    0x8db410080007	          lea esi, [rax + rdx + 0x70008]	      7254	intel_display.c	FUNCTION_223	CALL_4
0x40028bf	      0xba01000000	                              mov edx, 1	      7254	intel_display.c	FUNCTION_223	CALL_4
0x40028c4	      0xe800000000	                          call 0x40028c9	      7254	intel_display.c	FUNCTION_223	CALL_4
0x40028c9	      0x2500000080	                     and eax, 0x80000000	      7254	intel_display.c	FUNCTION_223	CALL_4
0x40028ce	    0x8b8b64060000	           mov ecx, dword [rbx + 0x664] 	      7254	intel_display.c	FUNCTION_223	CALL_4
0x40028d4	            0x89c2	                            mov edx, eax	      7254	intel_display.c	FUNCTION_223	CALL_4
0x40028d6	      0xe9befeffff	                           jmp 0x4002799	      7254	intel_display.c	FUNCTION_223	CALL_4
0x40028db	          0x83ca10	                            or edx, 0x10	      7264	intel_display.c	FUNCTION_223	IF_3	IF_4
0x40028de	      0xe9e6feffff	                           jmp 0x40027c9	      7264	intel_display.c	FUNCTION_223	IF_3	IF_4
0x40028e3	    0x81ca0000a000	                        or edx, 0xa00000	      7288	intel_display.c	FUNCTION_223	IF_5	ELSE_1
0x40028e9	      0xe908ffffff	                           jmp 0x40027f6	      7288	intel_display.c	FUNCTION_223	IF_5	ELSE_1
intel_dp_set_m_n	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,3:ELSE,3:functions,0:CALL,3	60
0x4012c80	            0x85f6	                           test esi, esi	      6673	intel_display.c	FUNCTION_209	IF_1
0x4012c82	            0x4154	                                push r12	      6670	intel_display.c	FUNCTION_209
0x4012c84	              0x55	                                push rbp	      6670	intel_display.c	FUNCTION_209
0x4012c85	              0x53	                                push rbx	      6670	intel_display.c	FUNCTION_209
0x4012c86	            0x7527	                           jne 0x4012caf	      6673	intel_display.c	FUNCTION_209	IF_1
0x4012c88	    0x488b9fc80400	           mov rbx, qword [rdi + 0x4c8] 	      6674	intel_display.c	FUNCTION_209	IF_1
0x4012c8f	    0x80bb38020000	               cmp byte [rbx + 0x238], 0	      6688	intel_display.c	FUNCTION_209	IF_3
0x4012c96	    0x488db3e00200	                  lea rsi, [rbx + 0x2e0]	      6674	intel_display.c	FUNCTION_209	IF_1
0x4012c9d	    0x488d93f40200	                  lea rdx, [rbx + 0x2f4]	      6675	intel_display.c	FUNCTION_209	IF_1
0x4012ca4	            0x752b	                           jne 0x4012cd1	      6688	intel_display.c	FUNCTION_209	IF_3
0x4012ca6	              0x5b	                                 pop rbx	      6692	intel_display.c	FUNCTION_209
0x4012ca7	              0x5d	                                 pop rbp	      6692	intel_display.c	FUNCTION_209
0x4012ca8	            0x415c	                                 pop r12	      6692	intel_display.c	FUNCTION_209
0x4012caa	      0xe9e1d9feff	    jmp sym.intel_cpu_transcoder_set_m_n	      6691	intel_display.c	FUNCTION_209	CALL_3
0x4012caf	          0x83fe01	                              cmp esi, 1	      6676	intel_display.c	FUNCTION_209	ELSE_1	IF_2
0x4012cb2	     0xf85c0000000	                           jne 0x4012d78	      6676	intel_display.c	FUNCTION_209	ELSE_1	IF_2
0x4012cb8	    0x488b9fc80400	           mov rbx, qword [rdi + 0x4c8] 	      6682	intel_display.c	FUNCTION_209	ELSE_1	IF_2
0x4012cbf	            0x31d2	                            xor edx, edx	      6671	intel_display.c	FUNCTION_209
0x4012cc1	    0x80bb38020000	               cmp byte [rbx + 0x238], 0	      6688	intel_display.c	FUNCTION_209	IF_3
0x4012cc8	    0x488db3f40200	                  lea rsi, [rbx + 0x2f4]	      6682	intel_display.c	FUNCTION_209	ELSE_1	IF_2
0x4012ccf	            0x74d5	                            je 0x4012ca6	      6688	intel_display.c	FUNCTION_209	IF_3
0x4012cd1	    0x8b8be0020000	           mov ecx, dword [rbx + 0x2e0] 	      6630	intel_display.c	FUNCTION_207	CALL_4
0x4012cd7	    0x448ba7b00400	          mov r12d, dword [rdi + 0x4b0] 	      6630	intel_display.c	FUNCTION_207	CALL_4
0x4012cde	          0x488b2f	                    mov rbp, qword [rdi]	      6630	intel_display.c	FUNCTION_207	CALL_4
0x4012ce1	          0x8d51ff	                      lea edx, [rcx - 1]	      6630	intel_display.c	FUNCTION_207	CALL_4
0x4012ce4	        0x41c1e40c	                           shl r12d, 0xc	      6630	intel_display.c	FUNCTION_207	CALL_4
0x4012ce8	      0xb901000000	                              mov ecx, 1	      6630	intel_display.c	FUNCTION_207	CALL_4
0x4012ced	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	      6630	intel_display.c	FUNCTION_207	CALL_4
0x4012cf4	    0x418db4243000	                lea esi, [r12 + 0xe0030]	      6630	intel_display.c	FUNCTION_207	CALL_4
0x4012cfc	          0x4889ef	                            mov rdi, rbp	      6630	intel_display.c	FUNCTION_207	CALL_4
0x4012cff	          0xc1e219	                           shl edx, 0x19	      6630	intel_display.c	FUNCTION_207	CALL_4
0x4012d02	     0xb93e4020000	             or edx, dword [rbx + 0x2e4]	      6630	intel_display.c	FUNCTION_207	CALL_4
0x4012d08	      0xe800000000	                          call 0x4012d0d	      6630	intel_display.c	FUNCTION_207	CALL_4
0x4012d0d	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	      6631	intel_display.c	FUNCTION_207	CALL_6
0x4012d14	    0x8b93e8020000	           mov edx, dword [rbx + 0x2e8] 	      6631	intel_display.c	FUNCTION_207	CALL_6
0x4012d1a	    0x418db4243400	                lea esi, [r12 + 0xe0034]	      6631	intel_display.c	FUNCTION_207	CALL_6
0x4012d22	          0x4889ef	                            mov rdi, rbp	      6631	intel_display.c	FUNCTION_207	CALL_6
0x4012d25	      0xb901000000	                              mov ecx, 1	      6631	intel_display.c	FUNCTION_207	CALL_6
0x4012d2a	      0xe800000000	                          call 0x4012d2f	      6631	intel_display.c	FUNCTION_207	CALL_6
0x4012d2f	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	      6632	intel_display.c	FUNCTION_207	CALL_8
0x4012d36	    0x8b93ec020000	           mov edx, dword [rbx + 0x2ec] 	      6632	intel_display.c	FUNCTION_207	CALL_8
0x4012d3c	    0x418db4244000	                lea esi, [r12 + 0xe0040]	      6632	intel_display.c	FUNCTION_207	CALL_8
0x4012d44	          0x4889ef	                            mov rdi, rbp	      6632	intel_display.c	FUNCTION_207	CALL_8
0x4012d47	      0xb901000000	                              mov ecx, 1	      6632	intel_display.c	FUNCTION_207	CALL_8
0x4012d4c	      0xe800000000	                          call 0x4012d51	      6632	intel_display.c	FUNCTION_207	CALL_8
0x4012d51	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	      6633	intel_display.c	FUNCTION_207	CALL_10
0x4012d58	    0x8b93f0020000	           mov edx, dword [rbx + 0x2f0] 	      6633	intel_display.c	FUNCTION_207	CALL_10
0x4012d5e	    0x418db4244400	                lea esi, [r12 + 0xe0044]	      6633	intel_display.c	FUNCTION_207	CALL_10
0x4012d66	          0x4889ef	                            mov rdi, rbp	      6633	intel_display.c	FUNCTION_207	CALL_10
0x4012d69	      0xb901000000	                              mov ecx, 1	      6633	intel_display.c	FUNCTION_207	CALL_10
0x4012d6e	      0xe800000000	                          call 0x4012d73	      6633	intel_display.c	FUNCTION_207	CALL_10
0x4012d73	              0x5b	                                 pop rbx	      6692	intel_display.c	FUNCTION_209
0x4012d74	              0x5d	                                 pop rbp	      6692	intel_display.c	FUNCTION_209
0x4012d75	            0x415c	                                 pop r12	      6692	intel_display.c	FUNCTION_209
0x4012d77	              0xc3	                                     ret	      6692	intel_display.c	FUNCTION_209
0x4012d78	              0x5b	                                 pop rbx	      6692	intel_display.c	FUNCTION_209
0x4012d79	              0x5d	                                 pop rbp	      6692	intel_display.c	FUNCTION_209
0x4012d7a	            0x415c	                                 pop r12	      6692	intel_display.c	FUNCTION_209
0x4012d7c	    0x48c7c7000000	                              mov rdi, 0	      6684	intel_display.c	FUNCTION_209	ELSE_2	CALL_1
0x4012d83	      0xe900000000	                           jmp 0x4012d88	      6684	intel_display.c	FUNCTION_209	ELSE_2	CALL_1
intel_atomic_helper_free_state_worker	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,3	2
0x400ae10	    0x4881ef186b00	                         sub rdi, 0x6b18	     12259	intel_display.c	FUNCTION_346	CALL_3
0x400ae17	            0xeba7	  jmp sym.intel_atomic_helper_free_state	     12259	intel_display.c	FUNCTION_346	CALL_3
lpt_disable_iclkip	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,5	25
0x400fc50	              0x55	                                push rbp	      4361	intel_display.c	FUNCTION_132
0x400fc51	              0x53	                                push rbx	      4361	intel_display.c	FUNCTION_132
0x400fc52	          0x4889fb	                            mov rbx, rdi	      4361	intel_display.c	FUNCTION_132
0x400fc55	    0x488dab404800	                 lea rbp, [rbx + 0x4840]	      4366	intel_display.c	FUNCTION_132	CALL_2
0x400fc5c	    0x488b87180800	           mov rax, qword [rdi + 0x818] 	      4364	intel_display.c	FUNCTION_132	CALL_1
0x400fc63	      0xb901000000	                              mov ecx, 1	      4364	intel_display.c	FUNCTION_132	CALL_1
0x400fc68	            0x31d2	                            xor edx, edx	      4364	intel_display.c	FUNCTION_132	CALL_1
0x400fc6a	      0xbe20600c00	                        mov esi, 0xc6020	      4364	intel_display.c	FUNCTION_132	CALL_1
0x400fc6f	      0xe800000000	                          call 0x400fc74	      4364	intel_display.c	FUNCTION_132	CALL_1
0x400fc74	          0x4889ef	                            mov rdi, rbp	      4366	intel_display.c	FUNCTION_132	CALL_2
0x400fc77	      0xe800000000	                          call 0x400fc7c	      4366	intel_display.c	FUNCTION_132	CALL_2
0x400fc7c	          0x4889df	                            mov rdi, rbx	      4368	intel_display.c	FUNCTION_132	CALL_3
0x400fc7f	            0x31d2	                            xor edx, edx	      4368	intel_display.c	FUNCTION_132	CALL_3
0x400fc81	      0xbe0c060000	                          mov esi, 0x60c	      4368	intel_display.c	FUNCTION_132	CALL_3
0x400fc86	      0xe800000000	                          call 0x400fc8b	      4368	intel_display.c	FUNCTION_132	CALL_3
0x400fc8b	          0x83c801	                               or eax, 1	      4370	intel_display.c	FUNCTION_132	CALL_4
0x400fc8e	          0x4889df	                            mov rdi, rbx	      4370	intel_display.c	FUNCTION_132	CALL_4
0x400fc91	            0x31c9	                            xor ecx, ecx	      4370	intel_display.c	FUNCTION_132	CALL_4
0x400fc93	            0x89c2	                            mov edx, eax	      4370	intel_display.c	FUNCTION_132	CALL_4
0x400fc95	      0xbe0c060000	                          mov esi, 0x60c	      4370	intel_display.c	FUNCTION_132	CALL_4
0x400fc9a	      0xe800000000	                          call 0x400fc9f	      4370	intel_display.c	FUNCTION_132	CALL_4
0x400fc9f	          0x4889ef	                            mov rdi, rbp	      4372	intel_display.c	FUNCTION_132	CALL_5
0x400fca2	              0x5b	                                 pop rbx	      4373	intel_display.c	FUNCTION_132
0x400fca3	              0x5d	                                 pop rbp	      4373	intel_display.c	FUNCTION_132
0x400fca4	      0xe900000000	                           jmp 0x400fca9	      4372	intel_display.c	FUNCTION_132	CALL_5
intel_init_pch_refclk	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,2:ELSE,1:functions,0:CALL,5	265
0x4015a60	    0x8b97f8550000	          mov edx, dword [rdi + 0x55f8] 	      8188	intel_display.c	FUNCTION_242	IF_1	CALL_2
0x4015a66	          0x8d42ff	                      lea eax, [rdx - 1]	      8188	intel_display.c	FUNCTION_242	IF_1	CALL_2
0x4015a69	          0x83f801	                              cmp eax, 1	      8188	intel_display.c	FUNCTION_242	IF_1	CALL_2
0x4015a6c	            0x760b	                           jbe 0x4015a79	      8188	intel_display.c	FUNCTION_242	IF_1	CALL_2
0x4015a6e	          0x83fa03	                              cmp edx, 3	      8190	intel_display.c	FUNCTION_242	ELSE_1	IF_2	CALL_4
0x4015a71	            0x7401	                            je 0x4015a74	      8190	intel_display.c	FUNCTION_242	ELSE_1	IF_2	CALL_4
0x4015a73	              0xc3	                                     ret	      8192	intel_display.c	FUNCTION_242
0x4015a74	      0xe9d735ffff	             jmp sym.lpt_init_pch_refclk	      8191	intel_display.c	FUNCTION_242	ELSE_1	IF_2
0x4015a79	            0x4157	                                push r15	      8187	intel_display.c	FUNCTION_242
0x4015a7b	            0x4156	                                push r14	      8187	intel_display.c	FUNCTION_242
0x4015a7d	    0x488db7380300	                  lea rsi, [rdi + 0x338]	      7778	intel_display.c	FUNCTION_235	FUNCTION_1
0x4015a84	            0x4155	                                push r13	      8187	intel_display.c	FUNCTION_242
0x4015a86	            0x4154	                                push r12	      8187	intel_display.c	FUNCTION_242
0x4015a88	              0x55	                                push rbp	      8187	intel_display.c	FUNCTION_242
0x4015a89	              0x53	                                push rbx	      8187	intel_display.c	FUNCTION_242
0x4015a8a	        0x4883ec10	                           sub rsp, 0x10	      8187	intel_display.c	FUNCTION_242
0x4015a8e	    0x488b8f380300	           mov rcx, qword [rdi + 0x338] 	      7778	intel_display.c	FUNCTION_235	FUNCTION_1
0x4015a95	          0x4839ce	                            cmp rsi, rcx	      7778	intel_display.c	FUNCTION_235	FUNCTION_1
0x4015a98	        0x488d41f8	                      lea rax, [rcx - 8]	      7778	intel_display.c	FUNCTION_235	FUNCTION_1
0x4015a9c	     0xf8483030000	                            je 0x4015e25	      7778	intel_display.c	FUNCTION_235	FUNCTION_1
0x4015aa2	            0x31ed	                            xor ebp, ebp	      7778	intel_display.c	FUNCTION_235	FUNCTION_1
0x4015aa4	            0x31db	                            xor ebx, ebx	      7778	intel_display.c	FUNCTION_235	FUNCTION_1
0x4015aa6	          0x4531e4	                          xor r12d, r12d	      7778	intel_display.c	FUNCTION_235	FUNCTION_1
0x4015aa9	            0xeb21	                           jmp 0x4015acc	      7778	intel_display.c	FUNCTION_235	FUNCTION_1
0x4015aab	          0x83f908	                              cmp ecx, 8	      7779	intel_display.c	FUNCTION_235	FUNCTION_1	SWITCH_1
0x4015aae	            0x750f	                           jne 0x4015abf	      7779	intel_display.c	FUNCTION_235	FUNCTION_1	SWITCH_1
0x4015ab0	        0x448b4074	            mov r8d, dword [rax + 0x74] 	      7785	intel_display.c	FUNCTION_235	FUNCTION_1	SWITCH_1
0x4015ab4	      0xbb01000000	                              mov ebx, 1	      7785	intel_display.c	FUNCTION_235	FUNCTION_1	SWITCH_1
0x4015ab9	          0x4585c0	                           test r8d, r8d	      7785	intel_display.c	FUNCTION_235	FUNCTION_1	SWITCH_1
0x4015abc	           0xf44eb	                          cmove ebp, ebx	      7785	intel_display.c	FUNCTION_235	FUNCTION_1	SWITCH_1
0x4015abf	        0x488b4808	                mov rcx, qword [rax + 8]	      7778	intel_display.c	FUNCTION_235	FUNCTION_1
0x4015ac3	          0x4839ce	                            cmp rsi, rcx	      7778	intel_display.c	FUNCTION_235	FUNCTION_1
0x4015ac6	        0x488d41f8	                      lea rax, [rcx - 8]	      7778	intel_display.c	FUNCTION_235	FUNCTION_1
0x4015aca	            0x7415	                            je 0x4015ae1	      7778	intel_display.c	FUNCTION_235	FUNCTION_1
0x4015acc	          0x8b4870	            mov ecx, dword [rax + 0x70] 	      7779	intel_display.c	FUNCTION_235	FUNCTION_1	SWITCH_1
0x4015acf	          0x83f904	                              cmp ecx, 4	      7779	intel_display.c	FUNCTION_235	FUNCTION_1	SWITCH_1
0x4015ad2	            0x75d7	                           jne 0x4015aab	      7779	intel_display.c	FUNCTION_235	FUNCTION_1	SWITCH_1
0x4015ad4	      0xbb01000000	                              mov ebx, 1	      7781	intel_display.c	FUNCTION_235	FUNCTION_1	SWITCH_1
0x4015ad9	    0x41bc01000000	                             mov r12d, 1	      7782	intel_display.c	FUNCTION_235	FUNCTION_1	SWITCH_1
0x4015adf	            0xebde	                           jmp 0x4015abf	      7782	intel_display.c	FUNCTION_235	FUNCTION_1	SWITCH_1
0x4015ae1	        0x410fb6c4	                         movzx eax, r12b	      7782	intel_display.c	FUNCTION_235	FUNCTION_1	SWITCH_1
0x4015ae5	        0x89442404	                mov dword [rsp + 4], eax	      7782	intel_display.c	FUNCTION_235	FUNCTION_1	SWITCH_1
0x4015ae9	           0xfb6c3	                           movzx eax, bl	      7782	intel_display.c	FUNCTION_235	FUNCTION_1	SWITCH_1
0x4015aec	          0x890424	                    mov dword [rsp], eax	      7782	intel_display.c	FUNCTION_235	FUNCTION_1	SWITCH_1
0x4015aef	          0x83fa01	                              cmp edx, 1	      7794	intel_display.c	FUNCTION_235	IF_1	CALL_1
0x4015af2	     0xf8434020000	                            je 0x4015d2c	      7794	intel_display.c	FUNCTION_235	IF_1	CALL_1
0x4015af8	    0xc74424080000	                  mov dword [rsp + 8], 0	      7794	intel_display.c	FUNCTION_235	IF_1	CALL_1
0x4015b00	    0x41be01000000	                             mov r14d, 1	      7799	intel_display.c	FUNCTION_235	ELSE_1
0x4015b06	          0x4531ed	                          xor r13d, r13d	      7798	intel_display.c	FUNCTION_235	ELSE_1
0x4015b09	    0x8b8f40660000	          mov ecx, dword [rdi + 0x6640] 	      7803	intel_display.c	FUNCTION_235	FOR_1
0x4015b0f	          0x4531e4	                          xor r12d, r12d	      7803	intel_display.c	FUNCTION_235	FOR_1
0x4015b12	          0x4989ff	                            mov r15, rdi	      7803	intel_display.c	FUNCTION_235	FOR_1
0x4015b15	            0x85c9	                           test ecx, ecx	      7803	intel_display.c	FUNCTION_235	FOR_1
0x4015b17	            0x7f0f	                            jg 0x4015b28	      7803	intel_display.c	FUNCTION_235	FOR_1
0x4015b19	            0xeb4d	                           jmp 0x4015b68	      7803	intel_display.c	FUNCTION_235	FOR_1
0x4015b1b	        0x4183c401	                             add r12d, 1	      7803	intel_display.c	FUNCTION_235	FOR_1
0x4015b1f	    0x453ba7406600	         cmp r12d, dword [r15 + 0x6640] 	      7803	intel_display.c	FUNCTION_235	FOR_1
0x4015b26	            0x7d40	                           jge 0x4015b68	      7803	intel_display.c	FUNCTION_235	FOR_1
0x4015b28	        0x4183fc01	                             cmp r12d, 1	      7804	intel_display.c	FUNCTION_235	FOR_1	CALL_3
0x4015b2c	    0x498b87f80700	           mov rax, qword [r15 + 0x7f8] 	      7804	intel_display.c	FUNCTION_235	FOR_1	CALL_3
0x4015b33	      0xba01000000	                              mov edx, 1	      7804	intel_display.c	FUNCTION_235	FOR_1	CALL_3
0x4015b38	            0x19f6	                            sbb esi, esi	      7804	intel_display.c	FUNCTION_235	FOR_1	CALL_3
0x4015b3a	          0x4c89ff	                            mov rdi, r15	      7804	intel_display.c	FUNCTION_235	FOR_1	CALL_3
0x4015b3d	          0x83e6fc	                     and esi, 0xfffffffc	      7804	intel_display.c	FUNCTION_235	FOR_1	CALL_3
0x4015b40	    0x81c618600c00	                        add esi, 0xc6018	      7804	intel_display.c	FUNCTION_235	FOR_1	CALL_3
0x4015b46	      0xe800000000	                          call 0x4015b4b	      7804	intel_display.c	FUNCTION_235	FOR_1	CALL_3
0x4015b4b	            0x85c0	                           test eax, eax	      7806	intel_display.c	FUNCTION_235	FOR_1	IF_2
0x4015b4d	            0x79cc	                           jns 0x4015b1b	      7806	intel_display.c	FUNCTION_235	FOR_1	IF_2
0x4015b4f	      0x2500600000	                         and eax, 0x6000	      7809	intel_display.c	FUNCTION_235	FOR_1	IF_3
0x4015b54	      0x3d00600000	                         cmp eax, 0x6000	      7809	intel_display.c	FUNCTION_235	FOR_1	IF_3
0x4015b59	            0x75c0	                           jne 0x4015b1b	      7809	intel_display.c	FUNCTION_235	FOR_1	IF_3
0x4015b5b	    0x41b901000000	                              mov r9d, 1	      7809	intel_display.c	FUNCTION_235	FOR_1	IF_3
0x4015b61	      0xc644240f01	                 mov byte [rsp + 0xf], 1	      7811	intel_display.c	FUNCTION_235	FOR_1	IF_3
0x4015b66	            0xeb08	                           jmp 0x4015b70	      7811	intel_display.c	FUNCTION_235	FOR_1	IF_3
0x4015b68	          0x4531c9	                            xor r9d, r9d	      7811	intel_display.c	FUNCTION_235	FOR_1	IF_3
0x4015b6b	      0xc644240f00	                 mov byte [rsp + 0xf], 0	      7775	intel_display.c	FUNCTION_235
0x4015b70	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      7816	intel_display.c	FUNCTION_235	CALL_4
0x4015b74	      0x448b442408	                mov r8d, dword [rsp + 8]	      7816	intel_display.c	FUNCTION_235	CALL_4
0x4015b79	    0x48c7c6000000	                              mov rsi, 0	      7816	intel_display.c	FUNCTION_235	CALL_4
0x4015b80	          0x8b1424	                    mov edx, dword [rsp]	      7816	intel_display.c	FUNCTION_235	CALL_4
0x4015b83	      0xbf04000000	                              mov edi, 4	      7816	intel_display.c	FUNCTION_235	CALL_4
0x4015b88	      0xe800000000	                          call 0x4015b8d	      7816	intel_display.c	FUNCTION_235	CALL_4
0x4015b8d	      0xba01000000	                              mov edx, 1	      7824	intel_display.c	FUNCTION_235	CALL_5
0x4015b92	    0x498b87f80700	           mov rax, qword [r15 + 0x7f8] 	      7824	intel_display.c	FUNCTION_235	CALL_5
0x4015b99	      0xbe00620c00	                        mov esi, 0xc6200	      7824	intel_display.c	FUNCTION_235	CALL_5
0x4015b9e	          0x4c89ff	                            mov rdi, r15	      7824	intel_display.c	FUNCTION_235	CALL_5
0x4015ba1	      0xe800000000	                          call 0x4015ba6	      7824	intel_display.c	FUNCTION_235	CALL_5
0x4015ba6	            0x89c2	                            mov edx, eax	      7831	intel_display.c	FUNCTION_235
0x4015ba8	          0x80e6f9	                            and dh, 0xf9	      7831	intel_display.c	FUNCTION_235
0x4015bab	          0x4189d4	                           mov r12d, edx	      7833	intel_display.c	FUNCTION_235	IF_4
0x4015bae	            0x89d1	                            mov ecx, edx	      7833	intel_display.c	FUNCTION_235	IF_4
0x4015bb0	    0x4181cc000200	                          or r12d, 0x200	      7833	intel_display.c	FUNCTION_235	IF_4
0x4015bb7	          0x80cd04	                                or ch, 4	      7833	intel_display.c	FUNCTION_235	IF_4
0x4015bba	          0x4584ed	                         test r13b, r13b	      7833	intel_display.c	FUNCTION_235	IF_4
0x4015bbd	        0x440f44e1	                         cmove r12d, ecx	      7833	intel_display.c	FUNCTION_235	IF_4
0x4015bc1	    0x4181e4fd87ff	                    and r12d, 0xffff87fd	      7839	intel_display.c	FUNCTION_235	ELSE_2
0x4015bc8	            0x84db	                             test bl, bl	      7841	intel_display.c	FUNCTION_235	ELSE_2	IF_5
0x4015bca	     0xf8512010000	                           jne 0x4015ce2	      7841	intel_display.c	FUNCTION_235	ELSE_2	IF_5
0x4015bd0	          0x4489e1	                           mov ecx, r12d	      7856	intel_display.c	FUNCTION_235	ELSE_3	ELSE_4	ELSE_5	IF_9
0x4015bd3	    0x81c902100000	                          or ecx, 0x1002	      7856	intel_display.c	FUNCTION_235	ELSE_3	ELSE_4	ELSE_5	IF_9
0x4015bd9	      0x807c240f00	                 cmp byte [rsp + 0xf], 0	      7856	intel_display.c	FUNCTION_235	ELSE_3	ELSE_4	ELSE_5	IF_9
0x4015bde	        0x440f45e1	                        cmovne r12d, ecx	      7856	intel_display.c	FUNCTION_235	ELSE_3	ELSE_4	ELSE_5	IF_9
0x4015be2	          0x4439e0	                           cmp eax, r12d	      7859	intel_display.c	FUNCTION_235	IF_10
0x4015be5	     0xf84e8000000	                            je 0x4015cd3	      7859	intel_display.c	FUNCTION_235	IF_10
0x4015beb	            0x89d0	                            mov eax, edx	      7866	intel_display.c	FUNCTION_235	IF_11
0x4015bed	          0x80ce04	                                or dh, 4	      7866	intel_display.c	FUNCTION_235	IF_11
0x4015bf0	          0x80cc02	                                or ah, 2	      7866	intel_display.c	FUNCTION_235	IF_11
0x4015bf3	          0x4584ed	                         test r13b, r13b	      7866	intel_display.c	FUNCTION_235	IF_11
0x4015bf6	           0xf44c2	                          cmove eax, edx	      7866	intel_display.c	FUNCTION_235	IF_11
0x4015bf9	            0x84db	                             test bl, bl	      7870	intel_display.c	FUNCTION_235	ELSE_6	IF_12
0x4015bfb	          0x4189c5	                           mov r13d, eax	      7866	intel_display.c	FUNCTION_235	IF_11
0x4015bfe	     0xf8451010000	                            je 0x4015d55	      7870	intel_display.c	FUNCTION_235	ELSE_6	IF_12
0x4015c04	    0x8b1500000000	            mov edx, dword [0x04015c0a] 	      6551	intel_display.c	FUNCTION_202	IF_1
0x4015c0a	            0x85d2	                           test edx, edx	      6551	intel_display.c	FUNCTION_202	IF_1
0x4015c0c	     0xf88cb010000	                            js 0x4015ddd	      6551	intel_display.c	FUNCTION_202	IF_1
0x4015c12	           0xf95c0	                                setne al	      6551	intel_display.c	FUNCTION_202	IF_1
0x4015c15	          0x4421f0	                           and eax, r14d	      6551	intel_display.c	FUNCTION_202	IF_1
0x4015c18	            0x84c0	                             test al, al	      7875	intel_display.c	FUNCTION_235	ELSE_6	IF_12	IF_13	CALL_8
0x4015c1a	     0xf851d020000	                           jne 0x4015e3d	      7875	intel_display.c	FUNCTION_235	ELSE_6	IF_12	IF_13	CALL_8
0x4015c20	          0x4489eb	                           mov ebx, r13d	      7875	intel_display.c	FUNCTION_235	ELSE_6	IF_12	IF_13	CALL_8
0x4015c23	    0x81e3fde7ffff	                     and ebx, 0xffffe7fd	      7875	intel_display.c	FUNCTION_235	ELSE_6	IF_12	IF_13	CALL_8
0x4015c29	          0x80cf10	                             or bh, 0x10	      7879	intel_display.c	FUNCTION_235	ELSE_6	IF_12	ELSE_7
0x4015c2c	      0xb901000000	                              mov ecx, 1	      7882	intel_display.c	FUNCTION_235	ELSE_6	IF_12	CALL_10
0x4015c31	            0x89da	                            mov edx, ebx	      7882	intel_display.c	FUNCTION_235	ELSE_6	IF_12	CALL_10
0x4015c33	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	      7882	intel_display.c	FUNCTION_235	ELSE_6	IF_12	CALL_10
0x4015c3a	      0xbe00620c00	                        mov esi, 0xc6200	      7882	intel_display.c	FUNCTION_235	ELSE_6	IF_12	CALL_10
0x4015c3f	          0x4c89ff	                            mov rdi, r15	      7882	intel_display.c	FUNCTION_235	ELSE_6	IF_12	CALL_10
0x4015c42	          0x80e79f	                            and bh, 0x9f	      7886	intel_display.c	FUNCTION_235	ELSE_6	IF_12
0x4015c45	      0xe800000000	                          call 0x4015c4a	      7882	intel_display.c	FUNCTION_235	ELSE_6	IF_12	CALL_10
0x4015c4a	            0x31d2	                            xor edx, edx	      7883	intel_display.c	FUNCTION_235	ELSE_6	IF_12	CALL_11
0x4015c4c	      0xbe00620c00	                        mov esi, 0xc6200	      7883	intel_display.c	FUNCTION_235	ELSE_6	IF_12	CALL_11
0x4015c51	          0x4c89ff	                            mov rdi, r15	      7883	intel_display.c	FUNCTION_235	ELSE_6	IF_12	CALL_11
0x4015c54	    0x498b87f80700	           mov rax, qword [r15 + 0x7f8] 	      7883	intel_display.c	FUNCTION_235	ELSE_6	IF_12	CALL_11
0x4015c5b	      0xe800000000	                          call 0x4015c60	      7883	intel_display.c	FUNCTION_235	ELSE_6	IF_12	CALL_11
0x4015c60	      0xbf781b0d00	                        mov edi, 0xd1b78	      7884	intel_display.c	FUNCTION_235	ELSE_6	IF_12	CALL_12
0x4015c65	      0xe800000000	                          call 0x4015c6a	      7884	intel_display.c	FUNCTION_235	ELSE_6	IF_12	CALL_12
0x4015c6a	          0x4084ed	                           test bpl, bpl	      7889	intel_display.c	FUNCTION_235	ELSE_6	IF_12	IF_14
0x4015c6d	            0x7420	                            je 0x4015c8f	      7889	intel_display.c	FUNCTION_235	ELSE_6	IF_12	IF_14
0x4015c6f	    0x8b0500000000	            mov eax, dword [0x04015c75] 	      6551	intel_display.c	FUNCTION_202	IF_1
0x4015c75	            0x85c0	                           test eax, eax	      6551	intel_display.c	FUNCTION_202	IF_1
0x4015c77	     0xf88e4010000	                            js 0x4015e61	      6551	intel_display.c	FUNCTION_202	IF_1
0x4015c7d	           0xf95c0	                                setne al	      6551	intel_display.c	FUNCTION_202	IF_1
0x4015c80	          0x4121c6	                           and r14d, eax	      6551	intel_display.c	FUNCTION_202	IF_1
0x4015c83	          0x4584f6	                         test r14b, r14b	      7890	intel_display.c	FUNCTION_235	ELSE_6	IF_12	IF_14	IF_15	CALL_13
0x4015c86	     0xf851a020000	                           jne 0x4015ea6	      7890	intel_display.c	FUNCTION_235	ELSE_6	IF_12	IF_14	IF_15	CALL_13
0x4015c8c	          0x80cf60	                             or bh, 0x60	      7894	intel_display.c	FUNCTION_235	ELSE_6	IF_12	IF_14	ELSE_8
0x4015c8f	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	      7923	intel_display.c	FUNCTION_235	ELSE_10	IF_16	CALL_23
0x4015c96	      0xb901000000	                              mov ecx, 1	      7923	intel_display.c	FUNCTION_235	ELSE_10	IF_16	CALL_23
0x4015c9b	            0x89da	                            mov edx, ebx	      7923	intel_display.c	FUNCTION_235	ELSE_10	IF_16	CALL_23
0x4015c9d	      0xbe00620c00	                        mov esi, 0xc6200	      7923	intel_display.c	FUNCTION_235	ELSE_10	IF_16	CALL_23
0x4015ca2	          0x4c89ff	                            mov rdi, r15	      7923	intel_display.c	FUNCTION_235	ELSE_10	IF_16	CALL_23
0x4015ca5	      0xe800000000	                          call 0x4015caa	      7923	intel_display.c	FUNCTION_235	ELSE_10	IF_16	CALL_23
0x4015caa	          0x4c89ff	                            mov rdi, r15	      7924	intel_display.c	FUNCTION_235	ELSE_10	IF_16	CALL_24
0x4015cad	    0x498b87f80700	           mov rax, qword [r15 + 0x7f8] 	      7924	intel_display.c	FUNCTION_235	ELSE_10	IF_16	CALL_24
0x4015cb4	            0x31d2	                            xor edx, edx	      7924	intel_display.c	FUNCTION_235	ELSE_10	IF_16	CALL_24
0x4015cb6	      0xbe00620c00	                        mov esi, 0xc6200	      7924	intel_display.c	FUNCTION_235	ELSE_10	IF_16	CALL_24
0x4015cbb	      0xe800000000	                          call 0x4015cc0	      7924	intel_display.c	FUNCTION_235	ELSE_10	IF_16	CALL_24
0x4015cc0	      0xbf781b0d00	                        mov edi, 0xd1b78	      7925	intel_display.c	FUNCTION_235	ELSE_10	IF_16	CALL_25
0x4015cc5	      0xe800000000	                          call 0x4015cca	      7925	intel_display.c	FUNCTION_235	ELSE_10	IF_16	CALL_25
0x4015cca	          0x4139dc	                           cmp r12d, ebx	      7929	intel_display.c	FUNCTION_235	CALL_26
0x4015ccd	     0xf858c010000	                           jne 0x4015e5f	      7929	intel_display.c	FUNCTION_235	CALL_26
0x4015cd3	        0x4883c410	                           add rsp, 0x10	      8192	intel_display.c	FUNCTION_242
0x4015cd7	              0x5b	                                 pop rbx	      8192	intel_display.c	FUNCTION_242
0x4015cd8	              0x5d	                                 pop rbp	      8192	intel_display.c	FUNCTION_242
0x4015cd9	            0x415c	                                 pop r12	      8192	intel_display.c	FUNCTION_242
0x4015cdb	            0x415d	                                 pop r13	      8192	intel_display.c	FUNCTION_242
0x4015cdd	            0x415e	                                 pop r14	      8192	intel_display.c	FUNCTION_242
0x4015cdf	            0x415f	                                 pop r15	      8192	intel_display.c	FUNCTION_242
0x4015ce1	              0xc3	                                     ret	      8192	intel_display.c	FUNCTION_242
0x4015ce2	    0x8b3500000000	            mov esi, dword [0x04015ce8] 	      6551	intel_display.c	FUNCTION_202	IF_1
0x4015ce8	            0x85f6	                           test esi, esi	      6551	intel_display.c	FUNCTION_202	IF_1
0x4015cea	     0xf8811010000	                            js 0x4015e01	      6551	intel_display.c	FUNCTION_202	IF_1
0x4015cf0	           0xf95c1	                                setne cl	      6551	intel_display.c	FUNCTION_202	IF_1
0x4015cf3	          0x4421f1	                           and ecx, r14d	      6551	intel_display.c	FUNCTION_202	IF_1
0x4015cf6	            0x84c9	                             test cl, cl	      7844	intel_display.c	FUNCTION_235	ELSE_2	IF_5	IF_6	CALL_6
0x4015cf8	            0x7452	                            je 0x4015d4c	      7844	intel_display.c	FUNCTION_235	ELSE_2	IF_5	IF_6	CALL_6
0x4015cfa	    0x4181cc021000	                         or r12d, 0x1002	      7845	intel_display.c	FUNCTION_235	ELSE_2	IF_5	IF_6
0x4015d01	          0x4084ed	                           test bpl, bpl	      7847	intel_display.c	FUNCTION_235	ELSE_2	IF_5	IF_7
0x4015d04	     0xf84d8feffff	                            je 0x4015be2	      7847	intel_display.c	FUNCTION_235	ELSE_2	IF_5	IF_7
0x4015d0a	            0x85f6	                           test esi, esi	      6551	intel_display.c	FUNCTION_202	IF_1
0x4015d0c	     0xf8870010000	                            js 0x4015e82	      6551	intel_display.c	FUNCTION_202	IF_1
0x4015d12	           0xf95c1	                                setne cl	      6551	intel_display.c	FUNCTION_202	IF_1
0x4015d15	          0x4421f1	                           and ecx, r14d	      6551	intel_display.c	FUNCTION_202	IF_1
0x4015d18	            0x84c9	                             test cl, cl	      7848	intel_display.c	FUNCTION_235	ELSE_2	IF_5	IF_7	IF_8	CALL_7
0x4015d1a	     0xf84b1000000	                            je 0x4015dd1	      7848	intel_display.c	FUNCTION_235	ELSE_2	IF_5	IF_7	IF_8	CALL_7
0x4015d20	    0x4181cc004000	                         or r12d, 0x4000	      7849	intel_display.c	FUNCTION_235	ELSE_2	IF_5	IF_7	IF_8
0x4015d27	      0xe9b6feffff	                           jmp 0x4015be2	      7849	intel_display.c	FUNCTION_235	ELSE_2	IF_5	IF_7	IF_8
0x4015d2c	    0x440fb6aff84c	        movzx r13d, byte [rdi + 0x4cf8] 	      7795	intel_display.c	FUNCTION_235	IF_1
0x4015d34	        0x41c0ed05	                             shr r13b, 5	      7795	intel_display.c	FUNCTION_235	IF_1
0x4015d38	        0x4183e501	                             and r13d, 1	      7795	intel_display.c	FUNCTION_235	IF_1
0x4015d3c	        0x410fb6c5	                         movzx eax, r13b	      7795	intel_display.c	FUNCTION_235	IF_1
0x4015d40	          0x4589ee	                          mov r14d, r13d	      7796	intel_display.c	FUNCTION_235	IF_1
0x4015d43	        0x89442408	                mov dword [rsp + 8], eax	      7796	intel_display.c	FUNCTION_235	IF_1
0x4015d47	      0xe9bdfdffff	                           jmp 0x4015b09	      7796	intel_display.c	FUNCTION_235	IF_1
0x4015d4c	    0x4181cc001000	                         or r12d, 0x1000	      7842	intel_display.c	FUNCTION_235	ELSE_2	IF_5
0x4015d53	            0xebac	                           jmp 0x4015d01	      7842	intel_display.c	FUNCTION_235	ELSE_2	IF_5
0x4015d55	          0x4489eb	                           mov ebx, r13d	      7904	intel_display.c	FUNCTION_235	ELSE_10
0x4015d58	    0x48c7c6000000	                              mov rsi, 0	      7902	intel_display.c	FUNCTION_235	ELSE_10	CALL_18
0x4015d5f	      0xbf04000000	                              mov edi, 4	      7902	intel_display.c	FUNCTION_235	ELSE_10	CALL_18
0x4015d64	          0x80e79f	                            and bh, 0x9f	      7904	intel_display.c	FUNCTION_235	ELSE_10
0x4015d67	      0xe800000000	                          call 0x4015d6c	      7902	intel_display.c	FUNCTION_235	ELSE_10	CALL_18
0x4015d6c	      0xb901000000	                              mov ecx, 1	      7909	intel_display.c	FUNCTION_235	ELSE_10	CALL_19
0x4015d71	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	      7909	intel_display.c	FUNCTION_235	ELSE_10	CALL_19
0x4015d78	            0x89da	                            mov edx, ebx	      7909	intel_display.c	FUNCTION_235	ELSE_10	CALL_19
0x4015d7a	      0xbe00620c00	                        mov esi, 0xc6200	      7909	intel_display.c	FUNCTION_235	ELSE_10	CALL_19
0x4015d7f	          0x4c89ff	                            mov rdi, r15	      7909	intel_display.c	FUNCTION_235	ELSE_10	CALL_19
0x4015d82	      0xe800000000	                          call 0x4015d87	      7909	intel_display.c	FUNCTION_235	ELSE_10	CALL_19
0x4015d87	            0x31d2	                            xor edx, edx	      7910	intel_display.c	FUNCTION_235	ELSE_10	CALL_20
0x4015d89	      0xbe00620c00	                        mov esi, 0xc6200	      7910	intel_display.c	FUNCTION_235	ELSE_10	CALL_20
0x4015d8e	          0x4c89ff	                            mov rdi, r15	      7910	intel_display.c	FUNCTION_235	ELSE_10	CALL_20
0x4015d91	    0x498b87f80700	           mov rax, qword [r15 + 0x7f8] 	      7910	intel_display.c	FUNCTION_235	ELSE_10	CALL_20
0x4015d98	      0xe800000000	                          call 0x4015d9d	      7910	intel_display.c	FUNCTION_235	ELSE_10	CALL_20
0x4015d9d	      0xbf781b0d00	                        mov edi, 0xd1b78	      7911	intel_display.c	FUNCTION_235	ELSE_10	CALL_21
0x4015da2	      0xe800000000	                          call 0x4015da7	      7911	intel_display.c	FUNCTION_235	ELSE_10	CALL_21
0x4015da7	      0x807c240f00	                 cmp byte [rsp + 0xf], 0	      7913	intel_display.c	FUNCTION_235	ELSE_10	IF_16
0x4015dac	     0xf8518ffffff	                           jne 0x4015cca	      7913	intel_display.c	FUNCTION_235	ELSE_10	IF_16
0x4015db2	    0x48c7c6000000	                              mov rsi, 0	      7914	intel_display.c	FUNCTION_235	ELSE_10	IF_16	CALL_22
0x4015db9	      0xbf04000000	                              mov edi, 4	      7914	intel_display.c	FUNCTION_235	ELSE_10	IF_16	CALL_22
0x4015dbe	          0x4489eb	                           mov ebx, r13d	      7921	intel_display.c	FUNCTION_235	ELSE_10	IF_16
0x4015dc1	      0xe800000000	                          call 0x4015dc6	      7914	intel_display.c	FUNCTION_235	ELSE_10	IF_16	CALL_22
0x4015dc6	    0x81e3fd87ffff	                     and ebx, 0xffff87fd	      7921	intel_display.c	FUNCTION_235	ELSE_10	IF_16
0x4015dcc	      0xe9befeffff	                           jmp 0x4015c8f	      7921	intel_display.c	FUNCTION_235	ELSE_10	IF_16
0x4015dd1	    0x4181cc006000	                         or r12d, 0x6000	      7851	intel_display.c	FUNCTION_235	ELSE_2	IF_5	IF_7	ELSE_3
0x4015dd8	      0xe905feffff	                           jmp 0x4015be2	      7851	intel_display.c	FUNCTION_235	ELSE_2	IF_5	IF_7	ELSE_3
0x4015ddd	    0x41f687f84c00	         test byte [r15 + 0x4cf8], 0x10 	      6554	intel_display.c	FUNCTION_202
0x4015de5	     0xf8435feffff	                            je 0x4015c20	      6554	intel_display.c	FUNCTION_202
0x4015deb	    0x41f687005600	            test byte [r15 + 0x5600], 2 	      6554	intel_display.c	FUNCTION_202
0x4015df3	     0xf8527feffff	                           jne 0x4015c20	      6554	intel_display.c	FUNCTION_202
0x4015df9	          0x4489f0	                           mov eax, r14d	      6554	intel_display.c	FUNCTION_202
0x4015dfc	      0xe917feffff	                           jmp 0x4015c18	      6554	intel_display.c	FUNCTION_202
0x4015e01	    0x41f687f84c00	         test byte [r15 + 0x4cf8], 0x10 	      6554	intel_display.c	FUNCTION_202
0x4015e09	     0xf843dffffff	                            je 0x4015d4c	      6554	intel_display.c	FUNCTION_202
0x4015e0f	    0x41f687005600	            test byte [r15 + 0x5600], 2 	      6554	intel_display.c	FUNCTION_202
0x4015e17	     0xf852fffffff	                           jne 0x4015d4c	      6554	intel_display.c	FUNCTION_202
0x4015e1d	          0x4489f1	                           mov ecx, r14d	      6554	intel_display.c	FUNCTION_202
0x4015e20	      0xe9d1feffff	                           jmp 0x4015cf6	      6554	intel_display.c	FUNCTION_202
0x4015e25	    0xc70424000000	                      mov dword [rsp], 0	      7778	intel_display.c	FUNCTION_235	FUNCTION_1
0x4015e2c	    0xc74424040000	                  mov dword [rsp + 4], 0	      7778	intel_display.c	FUNCTION_235	FUNCTION_1
0x4015e34	            0x31ed	                            xor ebp, ebp	      7771	intel_display.c	FUNCTION_235
0x4015e36	            0x31db	                            xor ebx, ebx	      7772	intel_display.c	FUNCTION_235
0x4015e38	      0xe9b2fcffff	                           jmp 0x4015aef	      7772	intel_display.c	FUNCTION_235
0x4015e3d	          0x4489eb	                           mov ebx, r13d	      7871	intel_display.c	FUNCTION_235	ELSE_6	IF_12
0x4015e40	    0x48c7c6000000	                              mov rsi, 0	      7876	intel_display.c	FUNCTION_235	ELSE_6	IF_12	IF_13	CALL_9
0x4015e47	      0xbf04000000	                              mov edi, 4	      7876	intel_display.c	FUNCTION_235	ELSE_6	IF_12	IF_13	CALL_9
0x4015e4c	          0x80e7e7	                            and bh, 0xe7	      7871	intel_display.c	FUNCTION_235	ELSE_6	IF_12
0x4015e4f	      0xe800000000	                          call 0x4015e54	      7876	intel_display.c	FUNCTION_235	ELSE_6	IF_12	IF_13	CALL_9
0x4015e54	    0x81cb02100000	                          or ebx, 0x1002	      7877	intel_display.c	FUNCTION_235	ELSE_6	IF_12	IF_13
0x4015e5a	      0xe9cdfdffff	                           jmp 0x4015c2c	      7877	intel_display.c	FUNCTION_235	ELSE_6	IF_12	IF_13
0x4015e5f	             0xf0b	                                     ud2	      7877	intel_display.c	FUNCTION_235	ELSE_6	IF_12	IF_13
0x4015e61	    0x41f687f84c00	         test byte [r15 + 0x4cf8], 0x10 	      6554	intel_display.c	FUNCTION_202
0x4015e69	     0xf841dfeffff	                            je 0x4015c8c	      6554	intel_display.c	FUNCTION_202
0x4015e6f	    0x41f687005600	            test byte [r15 + 0x5600], 2 	      6554	intel_display.c	FUNCTION_202
0x4015e77	     0xf850ffeffff	                           jne 0x4015c8c	      6554	intel_display.c	FUNCTION_202
0x4015e7d	      0xe901feffff	                           jmp 0x4015c83	      6554	intel_display.c	FUNCTION_202
0x4015e82	    0x41f687f84c00	         test byte [r15 + 0x4cf8], 0x10 	      6554	intel_display.c	FUNCTION_202
0x4015e8a	     0xf8441ffffff	                            je 0x4015dd1	      6554	intel_display.c	FUNCTION_202
0x4015e90	    0x41f687005600	            test byte [r15 + 0x5600], 2 	      6554	intel_display.c	FUNCTION_202
0x4015e98	     0xf8533ffffff	                           jne 0x4015dd1	      6554	intel_display.c	FUNCTION_202
0x4015e9e	          0x4489f1	                           mov ecx, r14d	      6554	intel_display.c	FUNCTION_202
0x4015ea1	      0xe972feffff	                           jmp 0x4015d18	      6554	intel_display.c	FUNCTION_202
0x4015ea6	    0x48c7c6000000	                              mov rsi, 0	      7891	intel_display.c	FUNCTION_235	ELSE_6	IF_12	IF_14	IF_15	CALL_14
0x4015ead	      0xbf04000000	                              mov edi, 4	      7891	intel_display.c	FUNCTION_235	ELSE_6	IF_12	IF_14	IF_15	CALL_14
0x4015eb2	          0x80cf40	                             or bh, 0x40	      7892	intel_display.c	FUNCTION_235	ELSE_6	IF_12	IF_14	IF_15
0x4015eb5	      0xe800000000	                          call 0x4015eba	      7891	intel_display.c	FUNCTION_235	ELSE_6	IF_12	IF_14	IF_15	CALL_14
0x4015eba	      0xe9d0fdffff	                           jmp 0x4015c8f	      7891	intel_display.c	FUNCTION_235	ELSE_6	IF_12	IF_14	IF_15	CALL_14
i830_disable_pipe	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,27	142
0x401a050	            0x4155	                                push r13	     14831	intel_display.c	FUNCTION_405
0x401a052	            0x4154	                                push r12	     14831	intel_display.c	FUNCTION_405
0x401a054	          0x8d5641	                   lea edx, [rsi + 0x41]	     14834	intel_display.c	FUNCTION_405	CALL_2
0x401a057	              0x55	                                push rbp	     14831	intel_display.c	FUNCTION_405
0x401a058	              0x53	                                push rbx	     14831	intel_display.c	FUNCTION_405
0x401a059	          0x4863ee	                         movsxd rbp, esi	      1220	intel_drv.h	FUNCTION_432
0x401a05c	          0x4889fb	                            mov rbx, rdi	     14831	intel_display.c	FUNCTION_405
0x401a05f	    0x48c7c6000000	                              mov rsi, 0	     14834	intel_display.c	FUNCTION_405	CALL_2
0x401a066	        0x4883ec20	                           sub rsp, 0x20	     14831	intel_display.c	FUNCTION_405
0x401a06a	    0x4c8ba4ef6865	  mov r12, qword [rdi + rbp*8 + 0x6568] 	      1220	intel_drv.h	FUNCTION_432
0x401a072	      0xbf04000000	                              mov edi, 4	     14834	intel_display.c	FUNCTION_405	CALL_2
0x401a077	    0x65488b042528	                mov rax, qword gs:[0x28]	     14831	intel_display.c	FUNCTION_405
0x401a080	      0x4889442418	             mov qword [rsp + 0x18], rax	     14831	intel_display.c	FUNCTION_405
0x401a085	            0x31c0	                            xor eax, eax	     14831	intel_display.c	FUNCTION_405
0x401a087	      0xe800000000	                          call 0x401a08c	     14834	intel_display.c	FUNCTION_405	CALL_2
0x401a08c	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	     14837	intel_display.c	FUNCTION_405	CALL_6
0x401a092	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	     14837	intel_display.c	FUNCTION_405	CALL_6
0x401a099	      0xba01000000	                              mov edx, 1	     14837	intel_display.c	FUNCTION_405	CALL_6
0x401a09e	          0x4889df	                            mov rdi, rbx	     14837	intel_display.c	FUNCTION_405	CALL_6
0x401a0a1	    0x8db180010700	                lea esi, [rcx + 0x70180]	     14837	intel_display.c	FUNCTION_405	CALL_6
0x401a0a7	      0xe800000000	                          call 0x401a0ac	     14837	intel_display.c	FUNCTION_405	CALL_6
0x401a0ac	            0x85c0	                           test eax, eax	     14837	intel_display.c	FUNCTION_405	CALL_6
0x401a0ae	     0xf88c5010000	                            js 0x401a279	     14837	intel_display.c	FUNCTION_405	CALL_6
0x401a0b4	    0x8b8384060000	           mov eax, dword [rbx + 0x684] 	     14838	intel_display.c	FUNCTION_405	CALL_9
0x401a0ba	    0x2b8380060000	            sub eax, dword [rbx + 0x680]	     14838	intel_display.c	FUNCTION_405	CALL_9
0x401a0c0	          0x4889df	                            mov rdi, rbx	     14838	intel_display.c	FUNCTION_405	CALL_9
0x401a0c3	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	     14838	intel_display.c	FUNCTION_405	CALL_9
0x401a0c9	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	     14838	intel_display.c	FUNCTION_405	CALL_9
0x401a0d0	    0x8db410800107	          lea esi, [rax + rdx + 0x70180]	     14838	intel_display.c	FUNCTION_405	CALL_9
0x401a0d7	      0xba01000000	                              mov edx, 1	     14838	intel_display.c	FUNCTION_405	CALL_9
0x401a0dc	      0xe800000000	                          call 0x401a0e1	     14838	intel_display.c	FUNCTION_405	CALL_9
0x401a0e1	            0x85c0	                           test eax, eax	     14838	intel_display.c	FUNCTION_405	CALL_9
0x401a0e3	     0xf88aa010000	                            js 0x401a293	     14838	intel_display.c	FUNCTION_405	CALL_9
0x401a0e9	    0x8b8388060000	           mov eax, dword [rbx + 0x688] 	     14839	intel_display.c	FUNCTION_405	CALL_12
0x401a0ef	    0x2b8380060000	            sub eax, dword [rbx + 0x680]	     14839	intel_display.c	FUNCTION_405	CALL_12
0x401a0f5	          0x4889df	                            mov rdi, rbx	     14839	intel_display.c	FUNCTION_405	CALL_12
0x401a0f8	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	     14839	intel_display.c	FUNCTION_405	CALL_12
0x401a0fe	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	     14839	intel_display.c	FUNCTION_405	CALL_12
0x401a105	    0x8db410800107	          lea esi, [rax + rdx + 0x70180]	     14839	intel_display.c	FUNCTION_405	CALL_12
0x401a10c	      0xba01000000	                              mov edx, 1	     14839	intel_display.c	FUNCTION_405	CALL_12
0x401a111	      0xe800000000	                          call 0x401a116	     14839	intel_display.c	FUNCTION_405	CALL_12
0x401a116	            0x85c0	                           test eax, eax	     14839	intel_display.c	FUNCTION_405	CALL_12
0x401a118	     0xf888f010000	                            js 0x401a2ad	     14839	intel_display.c	FUNCTION_405	CALL_12
0x401a11e	    0x8bbb6c060000	           mov edi, dword [rbx + 0x66c] 	     14840	intel_display.c	FUNCTION_405	CALL_15
0x401a124	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	     14840	intel_display.c	FUNCTION_405	CALL_15
0x401a12b	      0xba01000000	                              mov edx, 1	     14840	intel_display.c	FUNCTION_405	CALL_15
0x401a130	    0x8db780000700	                lea esi, [rdi + 0x70080]	     14840	intel_display.c	FUNCTION_405	CALL_15
0x401a136	          0x4889df	                            mov rdi, rbx	     14840	intel_display.c	FUNCTION_405	CALL_15
0x401a139	      0xe800000000	                          call 0x401a13e	     14840	intel_display.c	FUNCTION_405	CALL_15
0x401a13e	            0xa827	                           test al, 0x27	     14840	intel_display.c	FUNCTION_405	CALL_15
0x401a140	     0xf8581010000	                           jne 0x401a2c7	     14840	intel_display.c	FUNCTION_405	CALL_15
0x401a146	    0x8b83c0060000	           mov eax, dword [rbx + 0x6c0] 	     14841	intel_display.c	FUNCTION_405	CALL_18
0x401a14c	    0x2b83bc060000	            sub eax, dword [rbx + 0x6bc]	     14841	intel_display.c	FUNCTION_405	CALL_18
0x401a152	          0x4889df	                            mov rdi, rbx	     14841	intel_display.c	FUNCTION_405	CALL_18
0x401a155	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	     14841	intel_display.c	FUNCTION_405	CALL_18
0x401a15b	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	     14841	intel_display.c	FUNCTION_405	CALL_18
0x401a162	    0x8db410800007	          lea esi, [rax + rdx + 0x70080]	     14841	intel_display.c	FUNCTION_405	CALL_18
0x401a169	      0xba01000000	                              mov edx, 1	     14841	intel_display.c	FUNCTION_405	CALL_18
0x401a16e	      0xe800000000	                          call 0x401a173	     14841	intel_display.c	FUNCTION_405	CALL_18
0x401a173	            0xa827	                           test al, 0x27	     14841	intel_display.c	FUNCTION_405	CALL_18
0x401a175	     0xf8566010000	                           jne 0x401a2e1	     14841	intel_display.c	FUNCTION_405	CALL_18
0x401a17b	        0x4c8d2cab	                  lea r13, [rbx + rbp*4]	     14841	intel_display.c	FUNCTION_405	CALL_18
0x401a17f	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	     14843	intel_display.c	FUNCTION_405	CALL_20
0x401a185	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	     14843	intel_display.c	FUNCTION_405	CALL_20
0x401a18c	      0xb901000000	                              mov ecx, 1	     14843	intel_display.c	FUNCTION_405	CALL_20
0x401a191	          0x4889df	                            mov rdi, rbx	     14843	intel_display.c	FUNCTION_405	CALL_20
0x401a194	    0x418b85800600	           mov eax, dword [r13 + 0x680] 	     14843	intel_display.c	FUNCTION_405	CALL_20
0x401a19b	    0x2b8380060000	            sub eax, dword [rbx + 0x680]	     14843	intel_display.c	FUNCTION_405	CALL_20
0x401a1a1	    0x8db410080007	          lea esi, [rax + rdx + 0x70008]	     14843	intel_display.c	FUNCTION_405	CALL_20
0x401a1a8	            0x31d2	                            xor edx, edx	     14843	intel_display.c	FUNCTION_405	CALL_20
0x401a1aa	      0xe800000000	                          call 0x401a1af	     14843	intel_display.c	FUNCTION_405	CALL_20
0x401a1af	    0x418b85800600	           mov eax, dword [r13 + 0x680] 	     14844	intel_display.c	FUNCTION_405	CALL_22
0x401a1b6	    0x2b8380060000	            sub eax, dword [rbx + 0x680]	     14844	intel_display.c	FUNCTION_405	CALL_22
0x401a1bc	          0x4889df	                            mov rdi, rbx	     14844	intel_display.c	FUNCTION_405	CALL_22
0x401a1bf	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	     14844	intel_display.c	FUNCTION_405	CALL_22
0x401a1c5	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	     14844	intel_display.c	FUNCTION_405	CALL_22
0x401a1cc	    0x8db410080007	          lea esi, [rax + rdx + 0x70008]	     14844	intel_display.c	FUNCTION_405	CALL_22
0x401a1d3	            0x31d2	                            xor edx, edx	     14844	intel_display.c	FUNCTION_405	CALL_22
0x401a1d5	      0xe800000000	                          call 0x401a1da	     14844	intel_display.c	FUNCTION_405	CALL_22
0x401a1da	            0x31f6	                            xor esi, esi	      1033	intel_display.c	FUNCTION_25	CALL_1
0x401a1dc	          0x4c89e7	                            mov rdi, r12	      1033	intel_display.c	FUNCTION_25	CALL_1
0x401a1df	      0xe86ca5feff	  call sym.wait_for_pipe_scanline_moving	      1033	intel_display.c	FUNCTION_25	CALL_1
0x401a1e4	    0x8b836c060000	           mov eax, dword [rbx + 0x66c] 	     14848	intel_display.c	FUNCTION_405	CALL_25
0x401a1ea	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	     14848	intel_display.c	FUNCTION_405	CALL_25
0x401a1f1	      0xb901000000	                              mov ecx, 1	     14848	intel_display.c	FUNCTION_405	CALL_25
0x401a1f6	          0x4889df	                            mov rdi, rbx	     14848	intel_display.c	FUNCTION_405	CALL_25
0x401a1f9	    0x8d9014600000	                 lea edx, [rax + 0x6014]	     14848	intel_display.c	FUNCTION_405	CALL_25
0x401a1ff	          0x891424	                    mov dword [rsp], edx	     14848	intel_display.c	FUNCTION_405	CALL_25
0x401a202	    0x8d9018600000	                 lea edx, [rax + 0x6018]	     14848	intel_display.c	FUNCTION_405	CALL_25
0x401a208	       0x530600000	                         add eax, 0x6030	     14848	intel_display.c	FUNCTION_405	CALL_25
0x401a20d	        0x89442408	                mov dword [rsp + 8], eax	     14848	intel_display.c	FUNCTION_405	CALL_25
0x401a211	        0x89542404	                mov dword [rsp + 4], edx	     14848	intel_display.c	FUNCTION_405	CALL_25
0x401a215	      0xba00000010	                     mov edx, 0x10000000	     14848	intel_display.c	FUNCTION_405	CALL_25
0x401a21a	          0x8b34ac	            mov esi, dword [rsp + rbp*4]	     14848	intel_display.c	FUNCTION_405	CALL_25
0x401a21d	      0xe800000000	                          call 0x401a222	     14848	intel_display.c	FUNCTION_405	CALL_25
0x401a222	    0x8b836c060000	           mov eax, dword [rbx + 0x66c] 	     14849	intel_display.c	FUNCTION_405	CALL_27
0x401a228	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	     14849	intel_display.c	FUNCTION_405	CALL_27
0x401a22f	          0x4889df	                            mov rdi, rbx	     14849	intel_display.c	FUNCTION_405	CALL_27
0x401a232	    0x8d9014600000	                 lea edx, [rax + 0x6014]	     14849	intel_display.c	FUNCTION_405	CALL_27
0x401a238	        0x8954240c	              mov dword [rsp + 0xc], edx	     14849	intel_display.c	FUNCTION_405	CALL_27
0x401a23c	    0x8d9018600000	                 lea edx, [rax + 0x6018]	     14849	intel_display.c	FUNCTION_405	CALL_27
0x401a242	       0x530600000	                         add eax, 0x6030	     14849	intel_display.c	FUNCTION_405	CALL_27
0x401a247	        0x89442414	             mov dword [rsp + 0x14], eax	     14849	intel_display.c	FUNCTION_405	CALL_27
0x401a24b	        0x89542410	             mov dword [rsp + 0x10], edx	     14849	intel_display.c	FUNCTION_405	CALL_27
0x401a24f	            0x31d2	                            xor edx, edx	     14849	intel_display.c	FUNCTION_405	CALL_27
0x401a251	        0x8b74ac0c	     mov esi, dword [rsp + rbp*4 + 0xc] 	     14849	intel_display.c	FUNCTION_405	CALL_27
0x401a255	      0xe800000000	                          call 0x401a25a	     14849	intel_display.c	FUNCTION_405	CALL_27
0x401a25a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	     14850	intel_display.c	FUNCTION_405
0x401a25f	    0x654833042528	                xor rax, qword gs:[0x28]	     14850	intel_display.c	FUNCTION_405
0x401a268	     0xf858d000000	                           jne 0x401a2fb	     14850	intel_display.c	FUNCTION_405
0x401a26e	        0x4883c420	                           add rsp, 0x20	     14850	intel_display.c	FUNCTION_405
0x401a272	              0x5b	                                 pop rbx	     14850	intel_display.c	FUNCTION_405
0x401a273	              0x5d	                                 pop rbp	     14850	intel_display.c	FUNCTION_405
0x401a274	            0x415c	                                 pop r12	     14850	intel_display.c	FUNCTION_405
0x401a276	            0x415d	                                 pop r13	     14850	intel_display.c	FUNCTION_405
0x401a278	              0xc3	                                     ret	     14850	intel_display.c	FUNCTION_405
0x401a279	    0x48c7c6000000	                              mov rsi, 0	     14837	intel_display.c	FUNCTION_405	CALL_6
0x401a280	    0x48c7c7000000	                              mov rdi, 0	     14837	intel_display.c	FUNCTION_405	CALL_6
0x401a287	      0xe800000000	                          call 0x401a28c	     14837	intel_display.c	FUNCTION_405	CALL_6
0x401a28c	             0xf0b	                                     ud2	     14837	intel_display.c	FUNCTION_405	CALL_6
0x401a28e	      0xe921feffff	                           jmp 0x401a0b4	     14837	intel_display.c	FUNCTION_405	CALL_6
0x401a293	    0x48c7c6000000	                              mov rsi, 0	     14838	intel_display.c	FUNCTION_405	CALL_9
0x401a29a	    0x48c7c7000000	                              mov rdi, 0	     14838	intel_display.c	FUNCTION_405	CALL_9
0x401a2a1	      0xe800000000	                          call 0x401a2a6	     14838	intel_display.c	FUNCTION_405	CALL_9
0x401a2a6	             0xf0b	                                     ud2	     14838	intel_display.c	FUNCTION_405	CALL_9
0x401a2a8	      0xe93cfeffff	                           jmp 0x401a0e9	     14838	intel_display.c	FUNCTION_405	CALL_9
0x401a2ad	    0x48c7c6000000	                              mov rsi, 0	     14839	intel_display.c	FUNCTION_405	CALL_12
0x401a2b4	    0x48c7c7000000	                              mov rdi, 0	     14839	intel_display.c	FUNCTION_405	CALL_12
0x401a2bb	      0xe800000000	                          call 0x401a2c0	     14839	intel_display.c	FUNCTION_405	CALL_12
0x401a2c0	             0xf0b	                                     ud2	     14839	intel_display.c	FUNCTION_405	CALL_12
0x401a2c2	      0xe957feffff	                           jmp 0x401a11e	     14839	intel_display.c	FUNCTION_405	CALL_12
0x401a2c7	    0x48c7c6000000	                              mov rsi, 0	     14840	intel_display.c	FUNCTION_405	CALL_15
0x401a2ce	    0x48c7c7000000	                              mov rdi, 0	     14840	intel_display.c	FUNCTION_405	CALL_15
0x401a2d5	      0xe800000000	                          call 0x401a2da	     14840	intel_display.c	FUNCTION_405	CALL_15
0x401a2da	             0xf0b	                                     ud2	     14840	intel_display.c	FUNCTION_405	CALL_15
0x401a2dc	      0xe965feffff	                           jmp 0x401a146	     14840	intel_display.c	FUNCTION_405	CALL_15
0x401a2e1	    0x48c7c6000000	                              mov rsi, 0	     14841	intel_display.c	FUNCTION_405	CALL_18
0x401a2e8	    0x48c7c7000000	                              mov rdi, 0	     14841	intel_display.c	FUNCTION_405	CALL_18
0x401a2ef	      0xe800000000	                          call 0x401a2f4	     14841	intel_display.c	FUNCTION_405	CALL_18
0x401a2f4	             0xf0b	                                     ud2	     14841	intel_display.c	FUNCTION_405	CALL_18
0x401a2f6	      0xe980feffff	                           jmp 0x401a17b	     14841	intel_display.c	FUNCTION_405	CALL_18
0x401a2fb	      0xe800000000	    call sym.i915_redisable_vga_power_on	     14850	intel_display.c	FUNCTION_405
verify_wm_state	FOR,1:SWITCH,0:DO,0:WHILE,0:IF,5:ELSE,0:functions,1:CALL,16	243
0x4004990	            0x4157	                                push r15	     11362	intel_display.c	FUNCTION_322
0x4004992	            0x4156	                                push r14	     11362	intel_display.c	FUNCTION_322
0x4004994	          0x4989f7	                            mov r15, rsi	     11362	intel_display.c	FUNCTION_322
0x4004997	            0x4155	                                push r13	     11362	intel_display.c	FUNCTION_322
0x4004999	            0x4154	                                push r12	     11362	intel_display.c	FUNCTION_322
0x400499b	              0x55	                                push rbp	     11362	intel_display.c	FUNCTION_322
0x400499c	              0x53	                                push rbx	     11362	intel_display.c	FUNCTION_322
0x400499d	          0x4889fb	                            mov rbx, rdi	     11362	intel_display.c	FUNCTION_322
0x40049a0	    0x4881ece00100	                          sub rsp, 0x1e0	     11362	intel_display.c	FUNCTION_322
0x40049a7	    0x8b97b0040000	           mov edx, dword [rdi + 0x4b0] 	     11369	intel_display.c	FUNCTION_322
0x40049ad	    0x65488b042528	                mov rax, qword gs:[0x28]	     11362	intel_display.c	FUNCTION_322
0x40049b6	    0x48898424d801	            mov qword [rsp + 0x1d8], rax	     11362	intel_display.c	FUNCTION_322
0x40049be	            0x31c0	                            xor eax, eax	     11362	intel_display.c	FUNCTION_322
0x40049c0	          0x488b07	                    mov rax, qword [rdi]	     11363	intel_display.c	FUNCTION_322	CALL_1
0x40049c3	      0x4889742430	             mov qword [rsp + 0x30], rsi	     11362	intel_display.c	FUNCTION_322
0x40049c8	        0x89542438	             mov dword [rsp + 0x38], edx	     11369	intel_display.c	FUNCTION_322
0x40049cc	          0x4989c6	                            mov r14, rax	     11363	intel_display.c	FUNCTION_322	CALL_1
0x40049cf	          0x4889c7	                            mov rdi, rax	     11370	intel_display.c	FUNCTION_322	CALL_3
0x40049d2	      0x4889442428	             mov qword [rsp + 0x28], rax	     11363	intel_display.c	FUNCTION_322	CALL_1
0x40049d7	      0xe800000000	                          call 0x40049dc	     11370	intel_display.c	FUNCTION_322	CALL_3
0x40049dc	    0x4180be5c0600	               cmp byte [r14 + 0x65c], 8	     11372	intel_display.c	FUNCTION_322	IF_1	CALL_4
0x40049e4	          0x4189c4	                           mov r12d, eax	     11370	intel_display.c	FUNCTION_322	CALL_3
0x40049e7	            0x7607	                           jbe 0x40049f0	     11372	intel_display.c	FUNCTION_322	IF_1	CALL_4
0x40049e9	      0x41807f0900	                   cmp byte [r15 + 9], 0	     11372	intel_display.c	FUNCTION_322	IF_1	CALL_4
0x40049ee	            0x7529	                           jne 0x4004a19	     11372	intel_display.c	FUNCTION_322	IF_1	CALL_4
0x40049f0	    0x488b8424d801	           mov rax, qword [rsp + 0x1d8] 	     11475	intel_display.c	FUNCTION_322
0x40049f8	    0x654833042528	                xor rax, qword gs:[0x28]	     11475	intel_display.c	FUNCTION_322
0x4004a01	     0xf8593030000	                           jne 0x4004d9a	     11475	intel_display.c	FUNCTION_322
0x4004a07	    0x4881c4e00100	                          add rsp, 0x1e0	     11475	intel_display.c	FUNCTION_322
0x4004a0e	              0x5b	                                 pop rbx	     11475	intel_display.c	FUNCTION_322
0x4004a0f	              0x5d	                                 pop rbp	     11475	intel_display.c	FUNCTION_322
0x4004a10	            0x415c	                                 pop r12	     11475	intel_display.c	FUNCTION_322
0x4004a12	            0x415d	                                 pop r13	     11475	intel_display.c	FUNCTION_322
0x4004a14	            0x415e	                                 pop r14	     11475	intel_display.c	FUNCTION_322
0x4004a16	            0x415f	                                 pop r15	     11475	intel_display.c	FUNCTION_322
0x4004a18	              0xc3	                                     ret	     11475	intel_display.c	FUNCTION_322
0x4004a19	    0x488db424c400	                   lea rsi, [rsp + 0xc4]	     11375	intel_display.c	FUNCTION_322	CALL_5
0x4004a21	          0x4889df	                            mov rdi, rbx	     11375	intel_display.c	FUNCTION_322	CALL_5
0x4004a24	      0xe800000000	                          call 0x4004a29	     11375	intel_display.c	FUNCTION_322	CALL_5
0x4004a29	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	     11378	intel_display.c	FUNCTION_322	CALL_7
0x4004a2e	      0x488d74244c	                   lea rsi, [rsp + 0x4c]	     11378	intel_display.c	FUNCTION_322	CALL_7
0x4004a33	          0x4889df	                            mov rdi, rbx	     11378	intel_display.c	FUNCTION_322	CALL_7
0x4004a36	      0xe800000000	                          call 0x4004a3b	     11378	intel_display.c	FUNCTION_322	CALL_7
0x4004a3b	        0x8b4c2438	            mov ecx, dword [rsp + 0x38] 	     11378	intel_display.c	FUNCTION_322	CALL_7
0x4004a3f	    0xc70424010000	                      mov dword [rsp], 1	     11378	intel_display.c	FUNCTION_322	CALL_7
0x4004a46	          0x4863c1	                         movsxd rax, ecx	     11378	intel_display.c	FUNCTION_322	CALL_7
0x4004a49	      0x4889442440	             mov qword [rsp + 0x40], rax	     11378	intel_display.c	FUNCTION_322	CALL_7
0x4004a4e	        0x488d0480	                  lea rax, [rax + rax*4]	     11378	intel_display.c	FUNCTION_322	CALL_7
0x4004a52	        0x48c1e002	                              shl rax, 2	     11378	intel_display.c	FUNCTION_322	CALL_7
0x4004a56	      0x488d54044e	            lea rdx, [rsp + rax + 0x4e] 	     11378	intel_display.c	FUNCTION_322	CALL_7
0x4004a5b	    0x488d8403ce72	           lea rax, [rbx + rax + 0x72ce]	     11378	intel_display.c	FUNCTION_322	CALL_7
0x4004a63	      0x4889442420	             mov qword [rsp + 0x20], rax	     11378	intel_display.c	FUNCTION_322	CALL_7
0x4004a68	    0x488d8424f400	                   lea rax, [rsp + 0xf4]	     11378	intel_display.c	FUNCTION_322	CALL_7
0x4004a70	      0x4889542418	             mov qword [rsp + 0x18], rdx	     11378	intel_display.c	FUNCTION_322	CALL_7
0x4004a75	      0x4889442408	                mov qword [rsp + 8], rax	     11378	intel_display.c	FUNCTION_322	CALL_7
0x4004a7a	      0x488b442430	            mov rax, qword [rsp + 0x30] 	     11378	intel_display.c	FUNCTION_322	CALL_7
0x4004a7f	    0x488d90a00300	                  lea rdx, [rax + 0x3a0]	     11378	intel_display.c	FUNCTION_322	CALL_7
0x4004a86	    0x4c8db0700300	                  lea r14, [rax + 0x370]	     11378	intel_display.c	FUNCTION_322	CALL_7
0x4004a8d	            0x89c8	                            mov eax, ecx	     11392	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	CALL_2
0x4004a8f	          0x83c041	                           add eax, 0x41	     11392	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	CALL_2
0x4004a92	      0x4889542410	             mov qword [rsp + 0x10], rdx	     11392	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	CALL_2
0x4004a97	        0x89442404	                mov dword [rsp + 4], eax	     11392	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	CALL_2
0x4004a9b	          0x8b0424	                    mov eax, dword [rsp]	     11392	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	CALL_2
0x4004a9e	          0x83e801	                              sub eax, 1	     11392	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	CALL_2
0x4004aa1	          0x4585e4	                         test r12d, r12d	     11387	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1
0x4004aa4	     0xf889a000000	                            js 0x4004b44	     11387	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1
0x4004aaa	          0x8b1424	                    mov edx, dword [rsp]	     11387	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1
0x4004aad	            0x4898	                                    cdqe	     11387	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1
0x4004aaf	      0x488b4c2408	                mov rcx, qword [rsp + 8]	     11387	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1
0x4004ab4	        0x488d0440	                  lea rax, [rax + rax*2]	     11389	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	IF_1
0x4004ab8	          0x4531ff	                          xor r15d, r15d	     11387	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1
0x4004abb	        0x8954243c	             mov dword [rsp + 0x3c], edx	     11387	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1
0x4004abf	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	     11387	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1
0x4004ac4	        0x4c8d2cc0	                  lea r13, [rax + rax*8]	     11389	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	IF_1
0x4004ac8	        0x488d69d4	                   lea rbp, [rcx - 0x2c]	     11389	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	IF_1
0x4004acc	          0x4d01ed	                            add r13, r13	     11389	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	IF_1
0x4004acf	        0x488d5ad4	                   lea rbx, [rdx - 0x2c]	     11389	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	IF_1
0x4004ad3	            0xeb11	                           jmp 0x4004ae6	     11389	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	IF_1
0x4004ad5	        0x4183c701	                             add r15d, 1	     11387	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1
0x4004ad9	        0x4883c506	                              add rbp, 6	     11387	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1
0x4004add	        0x4883c306	                              add rbx, 6	     11387	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1
0x4004ae1	          0x4539fc	                          cmp r12d, r15d	     11387	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1
0x4004ae4	            0x7c65	                            jl 0x4004b4b	     11387	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1
0x4004ae6	          0x4963c7	                        movsxd rax, r15d	     11389	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	IF_1
0x4004ae9	        0x488d0440	                  lea rax, [rax + rax*2]	     11389	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	IF_1
0x4004aed	      0x498d7c4500	                  lea rdi, [r13 + rax*2]	     11389	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	IF_1
0x4004af2	    0x488d8424c400	                   lea rax, [rsp + 0xc4]	     11388	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4004afa	        0x498d343e	                    lea rsi, [r14 + rdi]	     11389	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	IF_1
0x4004afe	          0x4801c7	                            add rdi, rax	     11388	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4004b01	      0xe800000000	                          call 0x4004b06	     11388	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4004b06	            0x84c0	                             test al, al	     11388	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4004b08	            0x75cb	                           jne 0x4004ad5	     11388	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4004b0a	         0xfb64500	                   movzx eax, byte [rbp]	     11392	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	CALL_2
0x4004b0e	          0x4489f9	                           mov ecx, r15d	     11392	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	CALL_2
0x4004b11	    0x48c7c7000000	                              mov rdi, 0	     11392	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	CALL_2
0x4004b18	              0x50	                                push rax	     11392	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	CALL_2
0x4004b19	         0xfb745fe	               movzx eax, word [rbp - 2]	     11392	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	CALL_2
0x4004b1d	              0x50	                                push rax	     11392	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	CALL_2
0x4004b1e	         0xfb645fc	               movzx eax, byte [rbp - 4]	     11392	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	CALL_2
0x4004b22	              0x50	                                push rax	     11392	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	CALL_2
0x4004b23	           0xfb603	                   movzx eax, byte [rbx]	     11392	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	CALL_2
0x4004b26	              0x50	                                push rax	     11392	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	CALL_2
0x4004b27	      0x440fb74bfe	               movzx r9d, word [rbx - 2]	     11392	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	CALL_2
0x4004b2c	      0x440fb643fc	               movzx r8d, byte [rbx - 4]	     11392	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	CALL_2
0x4004b31	        0x8b542420	            mov edx, dword [rsp + 0x20] 	     11392	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	CALL_2
0x4004b35	        0x8b742424	            mov esi, dword [rsp + 0x24] 	     11392	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	CALL_2
0x4004b39	      0xe800000000	                          call 0x4004b3e	     11392	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	CALL_2
0x4004b3e	        0x4883c420	                           add rsp, 0x20	     11392	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	CALL_2
0x4004b42	            0xeb91	                           jmp 0x4004ad5	     11392	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	CALL_2
0x4004b44	          0x8b0424	                    mov eax, dword [rsp]	     11392	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	CALL_2
0x4004b47	        0x8944243c	             mov dword [rsp + 0x3c], eax	     11392	intel_display.c	FUNCTION_322	FUNCTION_1	FOR_1	CALL_2
0x4004b4b	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	     11402	intel_display.c	FUNCTION_322	FUNCTION_1	IF_2	CALL_4
0x4004b50	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     11402	intel_display.c	FUNCTION_322	FUNCTION_1	IF_2	CALL_4
0x4004b55	      0xe800000000	                          call 0x4004b5a	     11402	intel_display.c	FUNCTION_322	FUNCTION_1	IF_2	CALL_4
0x4004b5a	            0x84c0	                             test al, al	     11402	intel_display.c	FUNCTION_322	FUNCTION_1	IF_2	CALL_4
0x4004b5c	     0xf8422010000	                            je 0x4004c84	     11402	intel_display.c	FUNCTION_322	FUNCTION_1	IF_2	CALL_4
0x4004b62	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004b67	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004b6c	      0x440fb748fe	               movzx r9d, word [rax - 2]	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004b71	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004b76	        0x440fb702	                   movzx r8d, word [rdx]	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004b7a	         0xfb748fe	               movzx ecx, word [rax - 2]	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004b7e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004b83	           0xfb700	                   movzx eax, word [rax]	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004b86	        0x664439c9	                             cmp cx, r9w	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004b8a	     0xf8436010000	                            je 0x4004cc6	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004b90	              0x50	                                push rax	     11419	intel_display.c	FUNCTION_322	FUNCTION_1	IF_3	CALL_8
0x4004b91	        0x8b542408	                mov edx, dword [rsp + 8]	     11419	intel_display.c	FUNCTION_322	FUNCTION_1	IF_3	CALL_8
0x4004b95	    0x48c7c7000000	                              mov rdi, 0	     11419	intel_display.c	FUNCTION_322	FUNCTION_1	IF_3	CALL_8
0x4004b9c	        0x8b74240c	              mov esi, dword [rsp + 0xc]	     11419	intel_display.c	FUNCTION_322	FUNCTION_1	IF_3	CALL_8
0x4004ba0	      0xe800000000	                          call 0x4004ba5	     11419	intel_display.c	FUNCTION_322	FUNCTION_1	IF_3	CALL_8
0x4004ba5	              0x58	                                 pop rax	     11419	intel_display.c	FUNCTION_322	FUNCTION_1	IF_3	CALL_8
0x4004ba6	      0x488b442428	            mov rax, qword [rsp + 0x28] 	     11382	intel_display.c	FUNCTION_322	FUNCTION_1
0x4004bab	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	     11382	intel_display.c	FUNCTION_322	FUNCTION_1
0x4004bb0	    0x488344241804	               add qword [rsp + 0x18], 4	     11382	intel_display.c	FUNCTION_322	FUNCTION_1
0x4004bb6	    0x488344242004	               add qword [rsp + 0x20], 4	     11382	intel_display.c	FUNCTION_322	FUNCTION_1
0x4004bbc	     0xfb684107106	    movzx eax, byte [rax + rdx + 0x671] 	     11382	intel_display.c	FUNCTION_322	FUNCTION_1
0x4004bc4	        0x83042401	                      add dword [rsp], 1	     11382	intel_display.c	FUNCTION_322	FUNCTION_1
0x4004bc8	    0x488344240836	               add qword [rsp + 8], 0x36	     11382	intel_display.c	FUNCTION_322	FUNCTION_1
0x4004bce	    0x488344241036	           add qword [rsp + 0x10], 0x36 	     11382	intel_display.c	FUNCTION_322	FUNCTION_1
0x4004bd4	          0x83c001	                              add eax, 1	     11382	intel_display.c	FUNCTION_322	FUNCTION_1
0x4004bd7	        0x3b44243c	            cmp eax, dword [rsp + 0x3c] 	     11382	intel_display.c	FUNCTION_322	FUNCTION_1
0x4004bdb	     0xf8fbafeffff	                            jg 0x4004a9b	     11382	intel_display.c	FUNCTION_322	FUNCTION_1
0x4004be1	          0x4585e4	                         test r12d, r12d	     11437	intel_display.c	FUNCTION_322	IF_2	FOR_1
0x4004be4	     0xf88eb000000	                            js 0x4004cd5	     11437	intel_display.c	FUNCTION_322	IF_2	FOR_1
0x4004bea	      0x488b442430	            mov rax, qword [rsp + 0x30] 	     11437	intel_display.c	FUNCTION_322	IF_2	FOR_1
0x4004bef	    0x488dac24c400	                   lea rbp, [rsp + 0xc4]	     11437	intel_display.c	FUNCTION_322	IF_2	FOR_1
0x4004bf7	          0x4531ff	                          xor r15d, r15d	     11437	intel_display.c	FUNCTION_322	IF_2	FOR_1
0x4004bfa	    0x488d984c0400	                  lea rbx, [rax + 0x44c]	     11437	intel_display.c	FUNCTION_322	IF_2	FOR_1
0x4004c01	    0x4c8da8480400	                  lea r13, [rax + 0x448]	     11437	intel_display.c	FUNCTION_322	IF_2	FOR_1
0x4004c08	        0x8b442438	            mov eax, dword [rsp + 0x38] 	     11442	intel_display.c	FUNCTION_322	IF_2	FOR_1	CALL_9
0x4004c0c	        0x448d7041	                  lea r14d, [rax + 0x41]	     11442	intel_display.c	FUNCTION_322	IF_2	FOR_1	CALL_9
0x4004c10	            0xeb15	                           jmp 0x4004c27	     11442	intel_display.c	FUNCTION_322	IF_2	FOR_1	CALL_9
0x4004c12	        0x4183c701	                             add r15d, 1	     11437	intel_display.c	FUNCTION_322	IF_2	FOR_1
0x4004c16	        0x4883c506	                              add rbp, 6	     11437	intel_display.c	FUNCTION_322	IF_2	FOR_1
0x4004c1a	        0x4883c306	                              add rbx, 6	     11437	intel_display.c	FUNCTION_322	IF_2	FOR_1
0x4004c1e	          0x4539fc	                          cmp r12d, r15d	     11437	intel_display.c	FUNCTION_322	IF_2	FOR_1
0x4004c21	     0xf8cae000000	                            jl 0x4004cd5	     11437	intel_display.c	FUNCTION_322	IF_2	FOR_1
0x4004c27	          0x4963c7	                        movsxd rax, r15d	     11439	intel_display.c	FUNCTION_322	IF_2	FOR_1	IF_3
0x4004c2a	        0x488d0440	                  lea rax, [rax + rax*2]	     11439	intel_display.c	FUNCTION_322	IF_2	FOR_1	IF_3
0x4004c2e	          0x4801c0	                            add rax, rax	     11439	intel_display.c	FUNCTION_322	IF_2	FOR_1	IF_3
0x4004c31	      0x498d740500	                    lea rsi, [r13 + rax]	     11439	intel_display.c	FUNCTION_322	IF_2	FOR_1	IF_3
0x4004c36	    0x488dbc049c01	           lea rdi, [rsp + rax + 0x19c] 	     11438	intel_display.c	FUNCTION_322	IF_2	FOR_1	IF_3	CALL_8
0x4004c3e	      0xe800000000	                          call 0x4004c43	     11438	intel_display.c	FUNCTION_322	IF_2	FOR_1	IF_3	CALL_8
0x4004c43	            0x84c0	                             test al, al	     11438	intel_display.c	FUNCTION_322	IF_2	FOR_1	IF_3	CALL_8
0x4004c45	            0x75cb	                           jne 0x4004c12	     11438	intel_display.c	FUNCTION_322	IF_2	FOR_1	IF_3	CALL_8
0x4004c47	     0xfb685dc0000	           movzx eax, byte [rbp + 0xdc] 	     11442	intel_display.c	FUNCTION_322	IF_2	FOR_1	CALL_9
0x4004c4e	         0xfb64bfc	               movzx ecx, byte [rbx - 4]	     11442	intel_display.c	FUNCTION_322	IF_2	FOR_1	CALL_9
0x4004c52	          0x4489fa	                           mov edx, r15d	     11442	intel_display.c	FUNCTION_322	IF_2	FOR_1	CALL_9
0x4004c55	          0x4489f6	                           mov esi, r14d	     11442	intel_display.c	FUNCTION_322	IF_2	FOR_1	CALL_9
0x4004c58	    0x48c7c7000000	                              mov rdi, 0	     11442	intel_display.c	FUNCTION_322	IF_2	FOR_1	CALL_9
0x4004c5f	              0x50	                                push rax	     11442	intel_display.c	FUNCTION_322	IF_2	FOR_1	CALL_9
0x4004c60	     0xfb785da0000	           movzx eax, word [rbp + 0xda] 	     11442	intel_display.c	FUNCTION_322	IF_2	FOR_1	CALL_9
0x4004c67	              0x50	                                push rax	     11442	intel_display.c	FUNCTION_322	IF_2	FOR_1	CALL_9
0x4004c68	     0xfb685d80000	           movzx eax, byte [rbp + 0xd8] 	     11442	intel_display.c	FUNCTION_322	IF_2	FOR_1	CALL_9
0x4004c6f	              0x50	                                push rax	     11442	intel_display.c	FUNCTION_322	IF_2	FOR_1	CALL_9
0x4004c70	        0x440fb60b	                   movzx r9d, byte [rbx]	     11442	intel_display.c	FUNCTION_322	IF_2	FOR_1	CALL_9
0x4004c74	      0x440fb743fe	               movzx r8d, word [rbx - 2]	     11442	intel_display.c	FUNCTION_322	IF_2	FOR_1	CALL_9
0x4004c79	      0xe800000000	                          call 0x4004c7e	     11442	intel_display.c	FUNCTION_322	IF_2	FOR_1	CALL_9
0x4004c7e	        0x4883c418	                           add rsp, 0x18	     11442	intel_display.c	FUNCTION_322	IF_2	FOR_1	CALL_9
0x4004c82	            0xeb8e	                           jmp 0x4004c12	     11442	intel_display.c	FUNCTION_322	IF_2	FOR_1	CALL_9
0x4004c84	      0x488b5c2408	                mov rbx, qword [rsp + 8]	     11404	intel_display.c	FUNCTION_322	FUNCTION_1	IF_2	CALL_5
0x4004c89	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	     11404	intel_display.c	FUNCTION_322	FUNCTION_1	IF_2	CALL_5
0x4004c8e	    0x48c7c7000000	                              mov rdi, 0	     11404	intel_display.c	FUNCTION_322	FUNCTION_1	IF_2	CALL_5
0x4004c95	         0xfb64304	               movzx eax, byte [rbx + 4]	     11404	intel_display.c	FUNCTION_322	FUNCTION_1	IF_2	CALL_5
0x4004c99	           0xfb60a	                   movzx ecx, byte [rdx]	     11404	intel_display.c	FUNCTION_322	FUNCTION_1	IF_2	CALL_5
0x4004c9c	              0x50	                                push rax	     11404	intel_display.c	FUNCTION_322	FUNCTION_1	IF_2	CALL_5
0x4004c9d	         0xfb74302	               movzx eax, word [rbx + 2]	     11404	intel_display.c	FUNCTION_322	FUNCTION_1	IF_2	CALL_5
0x4004ca1	              0x50	                                push rax	     11404	intel_display.c	FUNCTION_322	FUNCTION_1	IF_2	CALL_5
0x4004ca2	           0xfb603	                   movzx eax, byte [rbx]	     11404	intel_display.c	FUNCTION_322	FUNCTION_1	IF_2	CALL_5
0x4004ca5	              0x50	                                push rax	     11404	intel_display.c	FUNCTION_322	FUNCTION_1	IF_2	CALL_5
0x4004ca6	      0x440fb64a04	               movzx r9d, byte [rdx + 4]	     11404	intel_display.c	FUNCTION_322	FUNCTION_1	IF_2	CALL_5
0x4004cab	      0x440fb74202	               movzx r8d, word [rdx + 2]	     11404	intel_display.c	FUNCTION_322	FUNCTION_1	IF_2	CALL_5
0x4004cb0	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	     11404	intel_display.c	FUNCTION_322	FUNCTION_1	IF_2	CALL_5
0x4004cb4	        0x8b542418	            mov edx, dword [rsp + 0x18] 	     11404	intel_display.c	FUNCTION_322	FUNCTION_1	IF_2	CALL_5
0x4004cb8	      0xe800000000	                          call 0x4004cbd	     11404	intel_display.c	FUNCTION_322	FUNCTION_1	IF_2	CALL_5
0x4004cbd	        0x4883c418	                           add rsp, 0x18	     11404	intel_display.c	FUNCTION_322	FUNCTION_1	IF_2	CALL_5
0x4004cc1	      0xe99cfeffff	                           jmp 0x4004b62	     11404	intel_display.c	FUNCTION_322	FUNCTION_1	IF_2	CALL_5
0x4004cc6	        0x664139c0	                             cmp r8w, ax	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004cca	     0xf85c0feffff	                           jne 0x4004b90	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004cd0	      0xe9d1feffff	                           jmp 0x4004ba6	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004cd5	      0x488b442430	            mov rax, qword [rsp + 0x30] 	     11453	intel_display.c	FUNCTION_322	IF_2	IF_4
0x4004cda	    0x488dbc24cc01	                  lea rdi, [rsp + 0x1cc]	     11452	intel_display.c	FUNCTION_322	IF_2	IF_4	CALL_11
0x4004ce2	    0x488db0780400	                  lea rsi, [rax + 0x478]	     11453	intel_display.c	FUNCTION_322	IF_2	IF_4
0x4004ce9	      0xe800000000	                          call 0x4004cee	     11452	intel_display.c	FUNCTION_322	IF_2	IF_4	CALL_11
0x4004cee	            0x84c0	                             test al, al	     11452	intel_display.c	FUNCTION_322	IF_2	IF_4	CALL_11
0x4004cf0	            0x744d	                            je 0x4004d3f	     11452	intel_display.c	FUNCTION_322	IF_2	IF_4	CALL_11
0x4004cf2	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004cf7	        0x488d0c80	                  lea rcx, [rax + rax*4]	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004cfb	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004d00	        0x48c1e102	                              shl rcx, 2	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004d04	          0x4801c8	                            add rax, rcx	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004d07	    0x440fb7440c5c	     movzx r8d, word [rsp + rcx + 0x5c] 	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004d0d	    0x440fb74c0c5e	     movzx r9d, word [rsp + rcx + 0x5e] 	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004d13	     0xfb790dc7200	         movzx edx, word [rax + 0x72dc] 	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004d1a	     0xfb788de7200	         movzx ecx, word [rax + 0x72de] 	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004d21	        0x664139d0	                             cmp r8w, dx	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004d25	            0x7468	                            je 0x4004d8f	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004d27	        0x8b742438	            mov esi, dword [rsp + 0x38] 	     11469	intel_display.c	FUNCTION_322	IF_2	IF_5	CALL_15
0x4004d2b	    0x48c7c7000000	                              mov rdi, 0	     11469	intel_display.c	FUNCTION_322	IF_2	IF_5	CALL_15
0x4004d32	          0x83c641	                           add esi, 0x41	     11469	intel_display.c	FUNCTION_322	IF_2	IF_5	CALL_15
0x4004d35	      0xe800000000	                          call 0x4004d3a	     11469	intel_display.c	FUNCTION_322	IF_2	IF_5	CALL_15
0x4004d3a	      0xe9b1fcffff	                           jmp 0x40049f0	     11469	intel_display.c	FUNCTION_322	IF_2	IF_5	CALL_15
0x4004d3f	        0x8b442438	            mov eax, dword [rsp + 0x38] 	     11454	intel_display.c	FUNCTION_322	IF_2	IF_4	CALL_12
0x4004d43	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	     11454	intel_display.c	FUNCTION_322	IF_2	IF_4	CALL_12
0x4004d48	    0x48c7c7000000	                              mov rdi, 0	     11454	intel_display.c	FUNCTION_322	IF_2	IF_4	CALL_12
0x4004d4f	          0x8d7041	                   lea esi, [rax + 0x41]	     11454	intel_display.c	FUNCTION_322	IF_2	IF_4	CALL_12
0x4004d52	     0xfb68424d001	          movzx eax, byte [rsp + 0x1d0] 	     11454	intel_display.c	FUNCTION_322	IF_2	IF_4	CALL_12
0x4004d5a	     0xfb78b7a0400	          movzx ecx, word [rbx + 0x47a] 	     11454	intel_display.c	FUNCTION_322	IF_2	IF_4	CALL_12
0x4004d61	     0xfb693780400	          movzx edx, byte [rbx + 0x478] 	     11454	intel_display.c	FUNCTION_322	IF_2	IF_4	CALL_12
0x4004d68	              0x50	                                push rax	     11454	intel_display.c	FUNCTION_322	IF_2	IF_4	CALL_12
0x4004d69	     0xfb78424d601	          movzx eax, word [rsp + 0x1d6] 	     11454	intel_display.c	FUNCTION_322	IF_2	IF_4	CALL_12
0x4004d71	              0x50	                                push rax	     11454	intel_display.c	FUNCTION_322	IF_2	IF_4	CALL_12
0x4004d72	    0x440fb68c24dc	          movzx r9d, byte [rsp + 0x1dc] 	     11454	intel_display.c	FUNCTION_322	IF_2	IF_4	CALL_12
0x4004d7b	    0x440fb6837c04	          movzx r8d, byte [rbx + 0x47c] 	     11454	intel_display.c	FUNCTION_322	IF_2	IF_4	CALL_12
0x4004d83	      0xe800000000	                          call 0x4004d88	     11454	intel_display.c	FUNCTION_322	IF_2	IF_4	CALL_12
0x4004d88	              0x5a	                                 pop rdx	     11454	intel_display.c	FUNCTION_322	IF_2	IF_4	CALL_12
0x4004d89	              0x59	                                 pop rcx	     11454	intel_display.c	FUNCTION_322	IF_2	IF_4	CALL_12
0x4004d8a	      0xe963ffffff	                           jmp 0x4004cf2	     11454	intel_display.c	FUNCTION_322	IF_2	IF_4	CALL_12
0x4004d8f	        0x664139c9	                             cmp r9w, cx	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004d93	            0x7592	                           jne 0x4004d27	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004d95	      0xe956fcffff	                           jmp 0x40049f0	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4004d9a	      0xe800000000	                          call 0x4004d9f	     11475	intel_display.c	FUNCTION_322
chv_crtc_compute_clock	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,4	44
0x400cbd0	              0x55	                                push rbp	      7449	intel_display.c	FUNCTION_228
0x400cbd1	          0x4889fd	                            mov rbp, rdi	      7449	intel_display.c	FUNCTION_228
0x400cbd4	    0x488dbe880200	                  lea rdi, [rsi + 0x288]	      7453	intel_display.c	FUNCTION_228	CALL_1
0x400cbdb	            0x89f0	                            mov eax, esi	      7453	intel_display.c	FUNCTION_228	CALL_1
0x400cbdd	              0x53	                                push rbx	      7449	intel_display.c	FUNCTION_228
0x400cbde	    0x48c786800200	              mov qword [rsi + 0x280], 0	      7453	intel_display.c	FUNCTION_228	CALL_1
0x400cbe9	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	      7453	intel_display.c	FUNCTION_228	CALL_1
0x400cbed	    0x48c786cc0200	              mov qword [rsi + 0x2cc], 0	      7453	intel_display.c	FUNCTION_228	CALL_1
0x400cbf8	          0x4889f3	                            mov rbx, rsi	      7449	intel_display.c	FUNCTION_228
0x400cbfb	            0x29f8	                            sub eax, edi	      7453	intel_display.c	FUNCTION_228	CALL_1
0x400cbfd	    0x8d88d4020000	                  lea ecx, [rax + 0x2d4]	      7453	intel_display.c	FUNCTION_228	CALL_1
0x400cc03	            0x31c0	                            xor eax, eax	      7453	intel_display.c	FUNCTION_228	CALL_1
0x400cc05	          0xc1e903	                              shr ecx, 3	      7453	intel_display.c	FUNCTION_228	CALL_1
0x400cc08	          0xf348ab	              rep stosq qword [rdi], rax	      7453	intel_display.c	FUNCTION_228	CALL_1
0x400cc0b	    0x80be4c020000	               cmp byte [rsi + 0x24c], 0	      7456	intel_display.c	FUNCTION_228	IF_1
0x400cc12	            0x744a	                            je 0x400cc5e	      7456	intel_display.c	FUNCTION_228	IF_1
0x400cc14	    0xc78380020000	    mov dword [rbx + 0x280], 0x30002000 	      6714	intel_display.c	FUNCTION_211
0x400cc1e	    0x8b85b0040000	           mov eax, dword [rbp + 0x4b0] 	      6716	intel_display.c	FUNCTION_211	IF_1
0x400cc24	            0x85c0	                           test eax, eax	      6716	intel_display.c	FUNCTION_211	IF_1
0x400cc26	            0x740a	                            je 0x400cc32	      6716	intel_display.c	FUNCTION_211	IF_1
0x400cc28	    0xc78380020000	    mov dword [rbx + 0x280], 0x30006000 	      6717	intel_display.c	FUNCTION_211	IF_1
0x400cc32	    0xf68345020000	              test byte [rbx + 0x245], 2	      6720	intel_display.c	FUNCTION_211	IF_2	CALL_1
0x400cc39	            0x7417	                            je 0x400cc52	      6720	intel_display.c	FUNCTION_211	IF_2	CALL_1
0x400cc3b	    0x8b8310030000	           mov eax, dword [rbx + 0x310] 	      6723	intel_display.c	FUNCTION_211
0x400cc41	          0x83e801	                              sub eax, 1	      6723	intel_display.c	FUNCTION_211
0x400cc44	          0xc1e008	                              shl eax, 8	      6723	intel_display.c	FUNCTION_211
0x400cc47	    0x898384020000	            mov dword [rbx + 0x284], eax	      6723	intel_display.c	FUNCTION_211
0x400cc4d	            0x31c0	                            xor eax, eax	      7465	intel_display.c	FUNCTION_228
0x400cc4f	              0x5b	                                 pop rbx	      7466	intel_display.c	FUNCTION_228
0x400cc50	              0x5d	                                 pop rbp	      7466	intel_display.c	FUNCTION_228
0x400cc51	              0xc3	                                     ret	      7466	intel_display.c	FUNCTION_228
0x400cc52	    0x818b80020000	      or dword [rbx + 0x280], 0x80000000	      6721	intel_display.c	FUNCTION_211	IF_2
0x400cc5c	            0xebdd	                           jmp 0x400cc3b	      6721	intel_display.c	FUNCTION_211	IF_2
0x400cc5e	    0x488d8e500200	                  lea rcx, [rsi + 0x250]	      7457	intel_display.c	FUNCTION_228	IF_1	CALL_2
0x400cc65	    0x8b960c030000	           mov edx, dword [rsi + 0x30c] 	      7457	intel_display.c	FUNCTION_228	IF_1	CALL_2
0x400cc6b	          0x488b36	                    mov rsi, qword [rsi]	      7457	intel_display.c	FUNCTION_228	IF_1	CALL_2
0x400cc6e	    0x48c7c7000000	                              mov rdi, 0	      7457	intel_display.c	FUNCTION_228	IF_1	CALL_2
0x400cc75	      0xe856fdffff	call sym.chv_find_best_dpll.isra.127.constprop.152	      7457	intel_display.c	FUNCTION_228	IF_1	CALL_2
0x400cc7a	            0x84c0	                             test al, al	      7456	intel_display.c	FUNCTION_228	IF_1
0x400cc7c	            0x7596	                           jne 0x400cc14	      7456	intel_display.c	FUNCTION_228	IF_1
0x400cc7e	    0x48c7c7000000	                              mov rdi, 0	      7459	intel_display.c	FUNCTION_228	IF_1	CALL_3
0x400cc85	      0xe800000000	                          call 0x400cc8a	      7459	intel_display.c	FUNCTION_228	IF_1	CALL_3
0x400cc8a	      0xb8eaffffff	                     mov eax, 0xffffffea	      7460	intel_display.c	FUNCTION_228	IF_1
0x400cc8f	            0xebbe	                           jmp 0x400cc4f	      7460	intel_display.c	FUNCTION_228	IF_1
intel_update_crtcs	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,1:CALL,0	32
0x4010320	        0x488b5708	                mov rdx, qword [rdi + 8]	     12163	intel_display.c	FUNCTION_343	FUNCTION_1
0x4010324	    0x8b8260030000	           mov eax, dword [rdx + 0x360] 	     12163	intel_display.c	FUNCTION_343	FUNCTION_1
0x401032a	            0x85c0	                           test eax, eax	     12163	intel_display.c	FUNCTION_343	FUNCTION_1
0x401032c	            0x7e52	                           jle 0x4010380	     12163	intel_display.c	FUNCTION_343	FUNCTION_1
0x401032e	              0x55	                                push rbp	     12158	intel_display.c	FUNCTION_343
0x401032f	          0x4889fd	                            mov rbp, rdi	     12158	intel_display.c	FUNCTION_343
0x4010332	              0x53	                                push rbx	     12158	intel_display.c	FUNCTION_343
0x4010333	            0x31db	                            xor ebx, ebx	     12158	intel_display.c	FUNCTION_343
0x4010335	            0xeb0b	                           jmp 0x4010342	     12158	intel_display.c	FUNCTION_343
0x4010337	          0x83c301	                              add ebx, 1	     12163	intel_display.c	FUNCTION_343	FUNCTION_1
0x401033a	    0x399a60030000	           cmp dword [rdx + 0x360], ebx 	     12163	intel_display.c	FUNCTION_343	FUNCTION_1
0x4010340	            0x7e3c	                           jle 0x401037e	     12163	intel_display.c	FUNCTION_343	FUNCTION_1
0x4010342	          0x4863c3	                         movsxd rax, ebx	     12163	intel_display.c	FUNCTION_343	FUNCTION_1
0x4010345	        0x488d0440	                  lea rax, [rax + rax*2]	     12163	intel_display.c	FUNCTION_343	FUNCTION_1
0x4010349	        0x48c1e004	                              shl rax, 4	     12163	intel_display.c	FUNCTION_343	FUNCTION_1
0x401034d	        0x48034520	             add rax, qword [rbp + 0x20]	     12163	intel_display.c	FUNCTION_343	FUNCTION_1
0x4010351	          0x488b38	                    mov rdi, qword [rax]	     12163	intel_display.c	FUNCTION_343	FUNCTION_1
0x4010354	          0x4885ff	                           test rdi, rdi	     12163	intel_display.c	FUNCTION_343	FUNCTION_1
0x4010357	            0x74de	                            je 0x4010337	     12163	intel_display.c	FUNCTION_343	FUNCTION_1
0x4010359	        0x488b4818	            mov rcx, qword [rax + 0x18] 	     12163	intel_display.c	FUNCTION_343	FUNCTION_1
0x401035d	        0x80790900	                   cmp byte [rcx + 9], 0	     12164	intel_display.c	FUNCTION_343	FUNCTION_1	IF_1
0x4010361	            0x74d4	                            je 0x4010337	     12164	intel_display.c	FUNCTION_343	FUNCTION_1	IF_1
0x4010363	        0x488b5010	            mov rdx, qword [rax + 0x10] 	     12167	intel_display.c	FUNCTION_343	FUNCTION_1	CALL_1
0x4010367	          0x4889ee	                            mov rsi, rbp	     12167	intel_display.c	FUNCTION_343	FUNCTION_1	CALL_1
0x401036a	          0x83c301	                              add ebx, 1	     12163	intel_display.c	FUNCTION_343	FUNCTION_1
0x401036d	      0xe81effffff	              call sym.intel_update_crtc	     12167	intel_display.c	FUNCTION_343	FUNCTION_1	CALL_1
0x4010372	        0x488b5508	                mov rdx, qword [rbp + 8]	     12167	intel_display.c	FUNCTION_343	FUNCTION_1	CALL_1
0x4010376	    0x399a60030000	           cmp dword [rdx + 0x360], ebx 	     12163	intel_display.c	FUNCTION_343	FUNCTION_1
0x401037c	            0x7fc4	                            jg 0x4010342	     12163	intel_display.c	FUNCTION_343	FUNCTION_1
0x401037e	              0x5b	                                 pop rbx	     12170	intel_display.c	FUNCTION_343
0x401037f	              0x5d	                                 pop rbp	     12170	intel_display.c	FUNCTION_343
0x4010380	            0xf3c3	                                     ret	     12170	intel_display.c	FUNCTION_343
chv_disable_pll	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,12	81
0x400d830	            0x4155	                                push r13	      1608	intel_display.c	FUNCTION_55
0x400d832	            0x4154	                                push r12	      1608	intel_display.c	FUNCTION_55
0x400d834	              0x55	                                push rbp	      1608	intel_display.c	FUNCTION_55
0x400d835	              0x53	                                push rbx	      1608	intel_display.c	FUNCTION_55
0x400d836	            0x89f5	                            mov ebp, esi	      1608	intel_display.c	FUNCTION_55
0x400d838	          0x4889fb	                            mov rbx, rdi	      1608	intel_display.c	FUNCTION_55
0x400d83b	        0x4883ec20	                           sub rsp, 0x20	      1608	intel_display.c	FUNCTION_55
0x400d83f	    0x65488b042528	                mov rax, qword gs:[0x28]	      1608	intel_display.c	FUNCTION_55
0x400d848	      0x4889442418	             mov qword [rsp + 0x18], rax	      1608	intel_display.c	FUNCTION_55
0x400d84d	            0x31c0	                            xor eax, eax	      1608	intel_display.c	FUNCTION_55
0x400d84f	          0x83fe01	                              cmp esi, 1	      1206	intel_drv.h	FUNCTION_431	SWITCH_1
0x400d852	     0xf84f4000000	                            je 0x400d94c	      1206	intel_drv.h	FUNCTION_431	SWITCH_1
0x400d858	          0x83fe02	                              cmp esi, 2	      1206	intel_drv.h	FUNCTION_431	SWITCH_1
0x400d85b	            0x7406	                            je 0x400d863	      1206	intel_drv.h	FUNCTION_431	SWITCH_1
0x400d85d	            0x85f6	                           test esi, esi	      1206	intel_drv.h	FUNCTION_431	SWITCH_1
0x400d85f	            0x7402	                            je 0x400d863	      1206	intel_drv.h	FUNCTION_431	SWITCH_1
0x400d861	             0xf0b	                                     ud2	      1206	intel_drv.h	FUNCTION_431	SWITCH_1
0x400d863	            0x31d2	                            xor edx, edx	      1613	intel_display.c	FUNCTION_55	CALL_2
0x400d865	            0x89ee	                            mov esi, ebp	      1613	intel_display.c	FUNCTION_55	CALL_2
0x400d867	          0x4889df	                            mov rdi, rbx	      1613	intel_display.c	FUNCTION_55	CALL_2
0x400d86a	      0xe800000000	                          call 0x400d86f	      1613	intel_display.c	FUNCTION_55	CALL_2
0x400d86f	          0x83fd01	                              cmp ebp, 1	      1617	intel_display.c	FUNCTION_55	IF_1
0x400d872	    0x41bc38810000	                        mov r12d, 0x8138	      1617	intel_display.c	FUNCTION_55	IF_1
0x400d878	            0x19d2	                            sbb edx, edx	      1617	intel_display.c	FUNCTION_55	IF_1
0x400d87a	    0x81e200c0ffff	                     and edx, 0xffffc000	      1617	intel_display.c	FUNCTION_55	IF_1
0x400d880	    0x81c200600030	                     add edx, 0x30006000	      1617	intel_display.c	FUNCTION_55	IF_1
0x400d886	    0x8b836c060000	           mov eax, dword [rbx + 0x66c] 	      1620	intel_display.c	FUNCTION_55	CALL_4
0x400d88c	          0x4c63ed	                         movsxd r13, ebp	      1620	intel_display.c	FUNCTION_55	CALL_4
0x400d88f	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	      1620	intel_display.c	FUNCTION_55	CALL_4
0x400d896	          0x4889df	                            mov rdi, rbx	      1620	intel_display.c	FUNCTION_55	CALL_4
0x400d899	    0x8d8814600000	                 lea ecx, [rax + 0x6014]	      1620	intel_display.c	FUNCTION_55	CALL_4
0x400d89f	          0x890c24	                    mov dword [rsp], ecx	      1620	intel_display.c	FUNCTION_55	CALL_4
0x400d8a2	    0x8d8818600000	                 lea ecx, [rax + 0x6018]	      1620	intel_display.c	FUNCTION_55	CALL_4
0x400d8a8	       0x530600000	                         add eax, 0x6030	      1620	intel_display.c	FUNCTION_55	CALL_4
0x400d8ad	        0x89442408	                mov dword [rsp + 8], eax	      1620	intel_display.c	FUNCTION_55	CALL_4
0x400d8b1	        0x894c2404	                mov dword [rsp + 4], ecx	      1620	intel_display.c	FUNCTION_55	CALL_4
0x400d8b5	      0xb901000000	                              mov ecx, 1	      1620	intel_display.c	FUNCTION_55	CALL_4
0x400d8ba	        0x428b34ac	            mov esi, dword [rsp + r13*4]	      1620	intel_display.c	FUNCTION_55	CALL_4
0x400d8be	      0xe800000000	                          call 0x400d8c3	      1620	intel_display.c	FUNCTION_55	CALL_4
0x400d8c3	    0x8b836c060000	           mov eax, dword [rbx + 0x66c] 	      1621	intel_display.c	FUNCTION_55	CALL_6
0x400d8c9	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	      1621	intel_display.c	FUNCTION_55	CALL_6
0x400d8d0	          0x4889df	                            mov rdi, rbx	      1621	intel_display.c	FUNCTION_55	CALL_6
0x400d8d3	    0x8d9014600000	                 lea edx, [rax + 0x6014]	      1621	intel_display.c	FUNCTION_55	CALL_6
0x400d8d9	        0x8954240c	              mov dword [rsp + 0xc], edx	      1621	intel_display.c	FUNCTION_55	CALL_6
0x400d8dd	    0x8d9018600000	                 lea edx, [rax + 0x6018]	      1621	intel_display.c	FUNCTION_55	CALL_6
0x400d8e3	       0x530600000	                         add eax, 0x6030	      1621	intel_display.c	FUNCTION_55	CALL_6
0x400d8e8	        0x89442414	             mov dword [rsp + 0x14], eax	      1621	intel_display.c	FUNCTION_55	CALL_6
0x400d8ec	        0x89542410	             mov dword [rsp + 0x10], edx	      1621	intel_display.c	FUNCTION_55	CALL_6
0x400d8f0	      0x428b74ac0c	     mov esi, dword [rsp + r13*4 + 0xc] 	      1621	intel_display.c	FUNCTION_55	CALL_6
0x400d8f5	    0x4c8dab404800	                 lea r13, [rbx + 0x4840]	      1623	intel_display.c	FUNCTION_55	CALL_7
0x400d8fc	            0x31d2	                            xor edx, edx	      1621	intel_display.c	FUNCTION_55	CALL_6
0x400d8fe	      0xe800000000	                          call 0x400d903	      1621	intel_display.c	FUNCTION_55	CALL_6
0x400d903	          0x4c89ef	                            mov rdi, r13	      1623	intel_display.c	FUNCTION_55	CALL_7
0x400d906	      0xe800000000	                          call 0x400d90b	      1623	intel_display.c	FUNCTION_55	CALL_7
0x400d90b	          0x4489e2	                           mov edx, r12d	      1626	intel_display.c	FUNCTION_55	CALL_9
0x400d90e	            0x89ee	                            mov esi, ebp	      1626	intel_display.c	FUNCTION_55	CALL_9
0x400d910	          0x4889df	                            mov rdi, rbx	      1626	intel_display.c	FUNCTION_55	CALL_9
0x400d913	      0xe800000000	                          call 0x400d918	      1626	intel_display.c	FUNCTION_55	CALL_9
0x400d918	          0x80e4df	                            and ah, 0xdf	      1628	intel_display.c	FUNCTION_55	CALL_11
0x400d91b	          0x4489e2	                           mov edx, r12d	      1628	intel_display.c	FUNCTION_55	CALL_11
0x400d91e	            0x89ee	                            mov esi, ebp	      1628	intel_display.c	FUNCTION_55	CALL_11
0x400d920	            0x89c1	                            mov ecx, eax	      1628	intel_display.c	FUNCTION_55	CALL_11
0x400d922	          0x4889df	                            mov rdi, rbx	      1628	intel_display.c	FUNCTION_55	CALL_11
0x400d925	      0xe800000000	                          call 0x400d92a	      1628	intel_display.c	FUNCTION_55	CALL_11
0x400d92a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1630	intel_display.c	FUNCTION_55	CALL_12
0x400d92f	    0x654833042528	                xor rax, qword gs:[0x28]	      1630	intel_display.c	FUNCTION_55	CALL_12
0x400d938	            0x752e	                           jne 0x400d968	      1630	intel_display.c	FUNCTION_55	CALL_12
0x400d93a	        0x4883c420	                           add rsp, 0x20	      1631	intel_display.c	FUNCTION_55
0x400d93e	          0x4c89ef	                            mov rdi, r13	      1630	intel_display.c	FUNCTION_55	CALL_12
0x400d941	              0x5b	                                 pop rbx	      1631	intel_display.c	FUNCTION_55
0x400d942	              0x5d	                                 pop rbp	      1631	intel_display.c	FUNCTION_55
0x400d943	            0x415c	                                 pop r12	      1631	intel_display.c	FUNCTION_55
0x400d945	            0x415d	                                 pop r13	      1631	intel_display.c	FUNCTION_55
0x400d947	      0xe900000000	                           jmp 0x400d94c	      1630	intel_display.c	FUNCTION_55	CALL_12
0x400d94c	            0x31d2	                            xor edx, edx	      1613	intel_display.c	FUNCTION_55	CALL_2
0x400d94e	      0xbe01000000	                              mov esi, 1	      1613	intel_display.c	FUNCTION_55	CALL_2
0x400d953	    0x41bc84800000	                        mov r12d, 0x8084	      1613	intel_display.c	FUNCTION_55	CALL_2
0x400d959	      0xe800000000	                          call 0x400d95e	      1613	intel_display.c	FUNCTION_55	CALL_2
0x400d95e	      0xba00600030	                     mov edx, 0x30006000	      1618	intel_display.c	FUNCTION_55	IF_1
0x400d963	      0xe91effffff	                           jmp 0x400d886	      1618	intel_display.c	FUNCTION_55	IF_1
0x400d968	      0xe800000000	                          call 0x400d96d	      1630	intel_display.c	FUNCTION_55	CALL_12
vlv_crtc_compute_clock	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,4	171
0x4009850	            0x4157	                                push r15	      7470	intel_display.c	FUNCTION_229
0x4009852	            0x4156	                                push r14	      7470	intel_display.c	FUNCTION_229
0x4009854	            0x4155	                                push r13	      7470	intel_display.c	FUNCTION_229
0x4009856	            0x4154	                                push r12	      7470	intel_display.c	FUNCTION_229
0x4009858	              0x55	                                push rbp	      7470	intel_display.c	FUNCTION_229
0x4009859	              0x53	                                push rbx	      7470	intel_display.c	FUNCTION_229
0x400985a	          0x4889f3	                            mov rbx, rsi	      7470	intel_display.c	FUNCTION_229
0x400985d	        0x4883ec48	                           sub rsp, 0x48	      7470	intel_display.c	FUNCTION_229
0x4009861	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      7470	intel_display.c	FUNCTION_229
0x4009866	    0x488dbe880200	                  lea rdi, [rsi + 0x288]	      7474	intel_display.c	FUNCTION_229	CALL_1
0x400986d	    0x65488b042528	                mov rax, qword gs:[0x28]	      7470	intel_display.c	FUNCTION_229
0x4009876	      0x4889442440	             mov qword [rsp + 0x40], rax	      7470	intel_display.c	FUNCTION_229
0x400987b	            0x31c0	                            xor eax, eax	      7470	intel_display.c	FUNCTION_229
0x400987d	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	      7474	intel_display.c	FUNCTION_229	CALL_1
0x4009881	            0x89f0	                            mov eax, esi	      7474	intel_display.c	FUNCTION_229	CALL_1
0x4009883	    0x48c786800200	              mov qword [rsi + 0x280], 0	      7474	intel_display.c	FUNCTION_229	CALL_1
0x400988e	            0x29f8	                            sub eax, edi	      7474	intel_display.c	FUNCTION_229	CALL_1
0x4009890	    0x48c786cc0200	              mov qword [rsi + 0x2cc], 0	      7474	intel_display.c	FUNCTION_229	CALL_1
0x400989b	    0x8d88d4020000	                  lea ecx, [rax + 0x2d4]	      7474	intel_display.c	FUNCTION_229	CALL_1
0x40098a1	            0x31c0	                            xor eax, eax	      7474	intel_display.c	FUNCTION_229	CALL_1
0x40098a3	          0xc1e903	                              shr ecx, 3	      7474	intel_display.c	FUNCTION_229	CALL_1
0x40098a6	          0xf348ab	              rep stosq qword [rdi], rax	      7474	intel_display.c	FUNCTION_229	CALL_1
0x40098a9	    0x80be4c020000	               cmp byte [rsi + 0x24c], 0	      7477	intel_display.c	FUNCTION_229	IF_1
0x40098b0	            0x746d	                            je 0x400991f	      7477	intel_display.c	FUNCTION_229	IF_1
0x40098b2	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6699	intel_display.c	FUNCTION_210	IF_1
0x40098b7	    0xc78380020000	    mov dword [rbx + 0x280], 0x30002000 	      6697	intel_display.c	FUNCTION_210
0x40098c1	    0x8b80b0040000	           mov eax, dword [rax + 0x4b0] 	      6699	intel_display.c	FUNCTION_210	IF_1
0x40098c7	            0x85c0	                           test eax, eax	      6699	intel_display.c	FUNCTION_210	IF_1
0x40098c9	            0x740a	                            je 0x40098d5	      6699	intel_display.c	FUNCTION_210	IF_1
0x40098cb	    0xc78380020000	    mov dword [rbx + 0x280], 0x30006000 	      6700	intel_display.c	FUNCTION_210	IF_1
0x40098d5	    0xf68345020000	              test byte [rbx + 0x245], 2	      6703	intel_display.c	FUNCTION_210	IF_2	CALL_1
0x40098dc	            0x750a	                           jne 0x40098e8	      6703	intel_display.c	FUNCTION_210	IF_2	CALL_1
0x40098de	    0x818b80020000	      or dword [rbx + 0x280], 0xc0000000	      6704	intel_display.c	FUNCTION_210	IF_2
0x40098e8	    0x8b8310030000	           mov eax, dword [rbx + 0x310] 	      6707	intel_display.c	FUNCTION_210
0x40098ee	          0x83e801	                              sub eax, 1	      6707	intel_display.c	FUNCTION_210
0x40098f1	          0xc1e008	                              shl eax, 8	      6707	intel_display.c	FUNCTION_210
0x40098f4	    0x898384020000	            mov dword [rbx + 0x284], eax	      6707	intel_display.c	FUNCTION_210
0x40098fa	            0x31c0	                            xor eax, eax	      7486	intel_display.c	FUNCTION_229
0x40098fc	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	      7487	intel_display.c	FUNCTION_229
0x4009901	    0x6548331c2528	                xor rbx, qword gs:[0x28]	      7487	intel_display.c	FUNCTION_229
0x400990a	     0xf852f020000	                           jne 0x4009b3f	      7487	intel_display.c	FUNCTION_229
0x4009910	        0x4883c448	                           add rsp, 0x48	      7487	intel_display.c	FUNCTION_229
0x4009914	              0x5b	                                 pop rbx	      7487	intel_display.c	FUNCTION_229
0x4009915	              0x5d	                                 pop rbp	      7487	intel_display.c	FUNCTION_229
0x4009916	            0x415c	                                 pop r12	      7487	intel_display.c	FUNCTION_229
0x4009918	            0x415d	                                 pop r13	      7487	intel_display.c	FUNCTION_229
0x400991a	            0x415e	                                 pop r14	      7487	intel_display.c	FUNCTION_229
0x400991c	            0x415f	                                 pop r15	      7487	intel_display.c	FUNCTION_229
0x400991e	              0xc3	                                     ret	      7487	intel_display.c	FUNCTION_229
0x400991f	          0x488b06	                    mov rax, qword [rsi]	       853	intel_display.c	FUNCTION_18
0x4009922	      0x4c8d7c243c	                   lea r15, [rsp + 0x3c]	       853	intel_display.c	FUNCTION_18
0x4009927	    0x41bd40420f00	                       mov r13d, 0xf4240	       865	intel_display.c	FUNCTION_18	FOR_1
0x400992d	          0x4531f6	                          xor r14d, r14d	       865	intel_display.c	FUNCTION_18	FOR_1
0x4009930	          0x488b28	                    mov rbp, qword [rax]	       853	intel_display.c	FUNCTION_18
0x4009933	    0x8b860c030000	           mov eax, dword [rsi + 0x30c] 	       860	intel_display.c	FUNCTION_18
0x4009939	    0x48c786500200	              mov qword [rsi + 0x250], 0	       862	intel_display.c	FUNCTION_18	CALL_3
0x4009944	    0x48c786580200	              mov qword [rsi + 0x258], 0	       862	intel_display.c	FUNCTION_18	CALL_3
0x400994f	    0x48c786600200	              mov qword [rsi + 0x260], 0	       862	intel_display.c	FUNCTION_18	CALL_3
0x400995a	    0x48c786680200	              mov qword [rsi + 0x268], 0	       862	intel_display.c	FUNCTION_18	CALL_3
0x4009965	        0x448d2480	                 lea r12d, [rax + rax*4]	       860	intel_display.c	FUNCTION_18
0x4009969	    0x488d83700200	                  lea rax, [rbx + 0x270]	       860	intel_display.c	FUNCTION_18
0x4009970	    0xc78670020000	              mov dword [rsi + 0x270], 0	       862	intel_display.c	FUNCTION_18	CALL_3
0x400997a	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	       865	intel_display.c	FUNCTION_18	FOR_1
0x4009982	      0xbe01000000	                              mov esi, 1	       865	intel_display.c	FUNCTION_18	FOR_1
0x4009987	        0x48890424	                    mov qword [rsp], rax	       865	intel_display.c	FUNCTION_18	FOR_1
0x400998b	      0x488d44241c	                   lea rax, [rsp + 0x1c]	       865	intel_display.c	FUNCTION_18	FOR_1
0x4009990	        0x4883c014	                           add rax, 0x14	       865	intel_display.c	FUNCTION_18	FOR_1
0x4009994	      0x4889442408	                mov qword [rsp + 8], rax	       865	intel_display.c	FUNCTION_18	FOR_1
0x4009999	    0xc74424280300	               mov dword [rsp + 0x28], 3	       866	intel_display.c	FUNCTION_18	FOR_1	FOR_2
0x40099a1	      0xba03000000	                              mov edx, 3	       866	intel_display.c	FUNCTION_18	FOR_1	FOR_2
0x40099a6	    0xc744242c1400	           mov dword [rsp + 0x2c], 0x14 	       867	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3
0x40099ae	      0xb814000000	                           mov eax, 0x14	       867	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3
0x40099b3	           0xfafc2	                           imul eax, edx	       869	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3
0x40099b6	    0xc74424200200	               mov dword [rsp + 0x20], 2	       871	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4
0x40099be	      0xb902000000	                              mov ecx, 2	       871	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4
0x40099c3	        0x8944243c	             mov dword [rsp + 0x3c], eax	       869	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3
0x40099c7	      0xe9b0000000	                           jmp 0x4009a7c	       869	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3
0x40099cc	            0xd1fa	                              sar edx, 1	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x40099ce	             0x1d0	                            add eax, edx	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x40099d0	              0x99	                                     cdq	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x40099d1	            0xf7f9	                                idiv ecx	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x40099d3	      0x488d7c241c	                   lea rdi, [rsp + 0x1c]	       877	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_5
0x40099d8	        0x89442424	             mov dword [rsp + 0x24], eax	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x40099dc	      0xe8affdffff	call sym.vlv_calc_dpll_params.constprop.154	       877	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_5
0x40099e1	      0x488d54241c	                   lea rdx, [rsp + 0x1c]	       879	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	IF_1	CALL_7
0x40099e6	    0x48c7c6000000	                              mov rsi, 0	       879	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	IF_1	CALL_7
0x40099ed	          0x4889ef	                            mov rdi, rbp	       879	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	IF_1	CALL_7
0x40099f0	      0xe86bb6ffff	             call sym.intel_PLL_is_valid	       879	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	IF_1	CALL_7
0x40099f5	            0x84c0	                             test al, al	       879	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	IF_1	CALL_7
0x40099f7	            0x746b	                            je 0x4009a64	       879	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	IF_1	CALL_7
0x40099f9	    0xf68566060000	          test byte [rbp + 0x666], 0x20 	       815	intel_display.c	FUNCTION_17	IF_1	CALL_2
0x4009a00	     0xf84a5000000	                            je 0x4009aab	       815	intel_display.c	FUNCTION_17	IF_1	CALL_2
0x4009a06	    0x8b8370020000	           mov eax, dword [rbx + 0x270] 	       818	intel_display.c	FUNCTION_17	IF_1
0x4009a0c	        0x3944243c	            cmp dword [rsp + 0x3c], eax 	       818	intel_display.c	FUNCTION_17	IF_1
0x4009a10	    0xc74424180000	               mov dword [rsp + 0x18], 0	       816	intel_display.c	FUNCTION_17	IF_1
0x4009a18	           0xf9fc0	                                 setg al	       818	intel_display.c	FUNCTION_17	IF_1
0x4009a1b	            0x84c0	                             test al, al	       884	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	IF_2	CALL_8
0x4009a1d	            0x7445	                            je 0x4009a64	       884	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	IF_2	CALL_8
0x4009a1f	      0x488b44241c	            mov rax, qword [rsp + 0x1c] 	       890	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4
0x4009a24	      0x448b6c2418	           mov r13d, dword [rsp + 0x18] 	       891	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4
0x4009a29	    0x41be01000000	                             mov r14d, 1	       892	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4
0x4009a2f	    0x488983500200	            mov qword [rbx + 0x250], rax	       890	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4
0x4009a36	      0x488b442424	            mov rax, qword [rsp + 0x24] 	       890	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4
0x4009a3b	    0x488983580200	            mov qword [rbx + 0x258], rax	       890	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4
0x4009a42	      0x488b44242c	            mov rax, qword [rsp + 0x2c] 	       890	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4
0x4009a47	    0x488983600200	            mov qword [rbx + 0x260], rax	       890	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4
0x4009a4e	      0x488b442434	            mov rax, qword [rsp + 0x34] 	       890	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4
0x4009a53	    0x488983680200	            mov qword [rbx + 0x268], rax	       890	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4
0x4009a5a	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	       890	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4
0x4009a5e	    0x898370020000	            mov dword [rbx + 0x270], eax	       890	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4
0x4009a64	        0x8b442420	            mov eax, dword [rsp + 0x20] 	       871	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4
0x4009a68	          0x8d4801	                      lea ecx, [rax + 1]	       871	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4
0x4009a6b	          0x83f903	                              cmp ecx, 3	       871	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4
0x4009a6e	        0x894c2420	             mov dword [rsp + 0x20], ecx	       871	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4
0x4009a72	            0x7f58	                            jg 0x4009acc	       871	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4
0x4009a74	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	       871	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4
0x4009a78	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	       871	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4
0x4009a7c	        0x410fafc4	                          imul eax, r12d	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x4009a80	    0x69c9a0860100	                  imul ecx, ecx, 0x186a0	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x4009a86	           0xfafc6	                           imul eax, esi	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x4009a89	            0x85c0	                           test eax, eax	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x4009a8b	        0x400f9ec6	                               setle sil	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x4009a8f	            0x85c9	                           test ecx, ecx	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x4009a91	           0xf9fc2	                                 setg dl	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x4009a94	          0x4038d6	                             cmp sil, dl	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x4009a97	            0x89ca	                            mov edx, ecx	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x4009a99	     0xf852dffffff	                           jne 0x40099cc	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x4009a9f	            0xd1fa	                              sar edx, 1	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x4009aa1	            0x29d0	                            sub eax, edx	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x4009aa3	              0x99	                                     cdq	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x4009aa4	            0xf7f9	                                idiv ecx	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x4009aa6	      0xe928ffffff	                           jmp 0x40099d3	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x4009aab	        0x488b0c24	                    mov rcx, qword [rsp]	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x4009aaf	      0x488b742408	                mov rsi, qword [rsp + 8]	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x4009ab4	      0x4c8d4c2418	                    lea r9, [rsp + 0x18]	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x4009ab9	          0x4589e8	                           mov r8d, r13d	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x4009abc	          0x4c89fa	                            mov rdx, r15	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x4009abf	          0x4489e7	                           mov edi, r12d	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x4009ac2	      0xe8d9b7ffff	call sym.vlv_PLL_is_optimal.isra.52.part.53	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x4009ac7	      0xe94fffffff	                           jmp 0x4009a1b	       874	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3	FOR_4	CALL_4
0x4009acc	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	       868	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3
0x4009ad0	            0x31d2	                            xor edx, edx	       868	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3
0x4009ad2	          0x83f80b	                            cmp eax, 0xb	       868	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3
0x4009ad5	           0xf9dc2	                                setge dl	       868	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3
0x4009ad8	          0x83c201	                              add edx, 1	       868	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3
0x4009adb	            0x29d0	                            sub eax, edx	       868	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3
0x4009add	          0x83f801	                              cmp eax, 1	       867	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3
0x4009ae0	        0x8944242c	             mov dword [rsp + 0x2c], eax	       868	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3
0x4009ae4	            0x7e0d	                           jle 0x4009af3	       867	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3
0x4009ae6	        0x8b542428	            mov edx, dword [rsp + 0x28] 	       867	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3
0x4009aea	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	       867	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3
0x4009aee	      0xe9c0feffff	                           jmp 0x40099b3	       867	intel_display.c	FUNCTION_18	FOR_1	FOR_2	FOR_3
0x4009af3	        0x8b442428	            mov eax, dword [rsp + 0x28] 	       866	intel_display.c	FUNCTION_18	FOR_1	FOR_2
0x4009af7	          0x8d50ff	                      lea edx, [rax - 1]	       866	intel_display.c	FUNCTION_18	FOR_1	FOR_2
0x4009afa	          0x83fa01	                              cmp edx, 1	       866	intel_display.c	FUNCTION_18	FOR_1	FOR_2
0x4009afd	        0x89542428	             mov dword [rsp + 0x28], edx	       866	intel_display.c	FUNCTION_18	FOR_1	FOR_2
0x4009b01	            0x7e09	                           jle 0x4009b0c	       866	intel_display.c	FUNCTION_18	FOR_1	FOR_2
0x4009b03	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	       866	intel_display.c	FUNCTION_18	FOR_1	FOR_2
0x4009b07	      0xe99afeffff	                           jmp 0x40099a6	       866	intel_display.c	FUNCTION_18	FOR_1	FOR_2
0x4009b0c	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       865	intel_display.c	FUNCTION_18	FOR_1
0x4009b10	          0x8d7001	                      lea esi, [rax + 1]	       865	intel_display.c	FUNCTION_18	FOR_1
0x4009b13	          0x83fe05	                              cmp esi, 5	       865	intel_display.c	FUNCTION_18	FOR_1
0x4009b16	        0x8974241c	             mov dword [rsp + 0x1c], esi	       865	intel_display.c	FUNCTION_18	FOR_1
0x4009b1a	     0xf8e79feffff	                           jle 0x4009999	       865	intel_display.c	FUNCTION_18	FOR_1
0x4009b20	          0x4584f6	                         test r14b, r14b	      7477	intel_display.c	FUNCTION_229	IF_1
0x4009b23	     0xf8589fdffff	                           jne 0x40098b2	      7477	intel_display.c	FUNCTION_229	IF_1
0x4009b29	    0x48c7c7000000	                              mov rdi, 0	      7480	intel_display.c	FUNCTION_229	IF_1	CALL_3
0x4009b30	      0xe800000000	                          call 0x4009b35	      7480	intel_display.c	FUNCTION_229	IF_1	CALL_3
0x4009b35	      0xb8eaffffff	                     mov eax, 0xffffffea	      7481	intel_display.c	FUNCTION_229	IF_1
0x4009b3a	      0xe9bdfdffff	                           jmp 0x40098fc	      7481	intel_display.c	FUNCTION_229	IF_1
0x4009b3f	      0xe800000000	                          call 0x4009b44	      7487	intel_display.c	FUNCTION_229
glk_pipe_scaler_clock_gating_wa	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,1:functions,0:CALL,4	24
0x40005c0	            0x4154	                                push r12	      5456	intel_display.c	FUNCTION_166
0x40005c2	              0x55	                                push rbp	      5456	intel_display.c	FUNCTION_166
0x40005c3	    0x8d2cb5206504	              lea ebp, [rsi*4 + 0x46520]	      5457	intel_display.c	FUNCTION_166	CALL_2
0x40005ca	              0x53	                                push rbx	      5456	intel_display.c	FUNCTION_166
0x40005cb	          0x4189d4	                           mov r12d, edx	      5456	intel_display.c	FUNCTION_166
0x40005ce	          0x4889fb	                            mov rbx, rdi	      5456	intel_display.c	FUNCTION_166
0x40005d1	            0x89ee	                            mov esi, ebp	      5457	intel_display.c	FUNCTION_166	CALL_2
0x40005d3	    0x488b87f80700	           mov rax, qword [rdi + 0x7f8] 	      5457	intel_display.c	FUNCTION_166	CALL_2
0x40005da	      0xba01000000	                              mov edx, 1	      5457	intel_display.c	FUNCTION_166	CALL_2
0x40005df	      0xe800000000	                          call 0x40005e4	      5457	intel_display.c	FUNCTION_166	CALL_2
0x40005e4	            0x89c2	                            mov edx, eax	      5461	intel_display.c	FUNCTION_166	IF_1
0x40005e6	          0x80e4f8	                            and ah, 0xf8	      5461	intel_display.c	FUNCTION_166	IF_1
0x40005e9	            0x89ee	                            mov esi, ebp	      5465	intel_display.c	FUNCTION_166	CALL_4
0x40005eb	          0x80ce07	                                or dh, 7	      5461	intel_display.c	FUNCTION_166	IF_1
0x40005ee	          0x4584e4	                         test r12b, r12b	      5461	intel_display.c	FUNCTION_166	IF_1
0x40005f1	          0x4889df	                            mov rdi, rbx	      5465	intel_display.c	FUNCTION_166	CALL_4
0x40005f4	           0xf44d0	                          cmove edx, eax	      5461	intel_display.c	FUNCTION_166	IF_1
0x40005f7	      0xb901000000	                              mov ecx, 1	      5465	intel_display.c	FUNCTION_166	CALL_4
0x40005fc	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      5465	intel_display.c	FUNCTION_166	CALL_4
0x4000603	      0xe800000000	                          call 0x4000608	      5465	intel_display.c	FUNCTION_166	CALL_4
0x4000608	              0x5b	                                 pop rbx	      5466	intel_display.c	FUNCTION_166
0x4000609	              0x5d	                                 pop rbp	      5466	intel_display.c	FUNCTION_166
0x400060a	            0x415c	                                 pop r12	      5466	intel_display.c	FUNCTION_166
0x400060c	              0xc3	                                     ret	      5466	intel_display.c	FUNCTION_166
vlv_wait_port_ready	FOR,0:SWITCH,1:DO,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,7	57
0x400ded0	            0x4156	                                push r14	      1636	intel_display.c	FUNCTION_56
0x400ded2	            0x4155	                                push r13	      1636	intel_display.c	FUNCTION_56
0x400ded4	          0x4989f5	                            mov r13, rsi	      1636	intel_display.c	FUNCTION_56
0x400ded7	            0x4154	                                push r12	      1636	intel_display.c	FUNCTION_56
0x400ded9	              0x55	                                push rbp	      1636	intel_display.c	FUNCTION_56
0x400deda	          0x4189d4	                           mov r12d, edx	      1636	intel_display.c	FUNCTION_56
0x400dedd	              0x53	                                push rbx	      1636	intel_display.c	FUNCTION_56
0x400dede	          0x8b4674	            mov eax, dword [rsi + 0x74] 	      1640	intel_display.c	FUNCTION_56	SWITCH_1
0x400dee1	          0x4889fb	                            mov rbx, rdi	      1636	intel_display.c	FUNCTION_56
0x400dee4	          0x83f802	                              cmp eax, 2	      1640	intel_display.c	FUNCTION_56	SWITCH_1
0x400dee7	     0xf848a000000	                            je 0x400df77	      1640	intel_display.c	FUNCTION_56	SWITCH_1
0x400deed	          0x83f803	                              cmp eax, 3	      1640	intel_display.c	FUNCTION_56	SWITCH_1
0x400def0	            0x7478	                            je 0x400df6a	      1640	intel_display.c	FUNCTION_56	SWITCH_1
0x400def2	          0x83f801	                              cmp eax, 1	      1640	intel_display.c	FUNCTION_56	SWITCH_1
0x400def5	            0x7402	                            je 0x400def9	      1640	intel_display.c	FUNCTION_56	SWITCH_1
0x400def7	             0xf0b	                                     ud2	      1640	intel_display.c	FUNCTION_56	SWITCH_1
0x400def9	    0x8b876c060000	           mov eax, dword [rdi + 0x66c] 	      1643	intel_display.c	FUNCTION_56	SWITCH_1	CALL_1
0x400deff	    0x41be0f000000	                           mov r14d, 0xf	      1642	intel_display.c	FUNCTION_56	SWITCH_1
0x400df05	    0x8da814600000	                 lea ebp, [rax + 0x6014]	      1643	intel_display.c	FUNCTION_56	SWITCH_1	CALL_1
0x400df0b	            0x6a00	                                  push 0	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400df0d	          0x4489f2	                           mov edx, r14d	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400df10	    0x41b9e8030000	                          mov r9d, 0x3e8	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400df16	    0x41b802000000	                              mov r8d, 2	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400df1c	          0x4489e1	                           mov ecx, r12d	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400df1f	            0x89ee	                            mov esi, ebp	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400df21	          0x4889df	                            mov rdi, rbx	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400df24	      0xe800000000	                          call 0x400df29	       191	intel_uncore.h	FUNCTION_474	CALL_1
0x400df29	            0x85c0	                           test eax, eax	      1658	intel_display.c	FUNCTION_56	IF_1	CALL_4
0x400df2b	              0x5a	                                 pop rdx	      1658	intel_display.c	FUNCTION_56	IF_1	CALL_4
0x400df2c	            0x7433	                            je 0x400df61	      1658	intel_display.c	FUNCTION_56	IF_1	CALL_4
0x400df2e	            0x89ee	                            mov esi, ebp	      1661	intel_display.c	FUNCTION_56	IF_1	CALL_5
0x400df30	          0x4889df	                            mov rdi, rbx	      1661	intel_display.c	FUNCTION_56	IF_1	CALL_5
0x400df33	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      1661	intel_display.c	FUNCTION_56	IF_1	CALL_5
0x400df3a	      0xba01000000	                              mov edx, 1	      1661	intel_display.c	FUNCTION_56	IF_1	CALL_5
0x400df3f	      0xe800000000	                          call 0x400df44	      1661	intel_display.c	FUNCTION_56	IF_1	CALL_5
0x400df44	        0x418b7574	            mov esi, dword [r13 + 0x74] 	      1661	intel_display.c	FUNCTION_56	IF_1	CALL_5
0x400df48	          0x4489f2	                           mov edx, r14d	      1661	intel_display.c	FUNCTION_56	IF_1	CALL_5
0x400df4b	          0x4489e1	                           mov ecx, r12d	      1661	intel_display.c	FUNCTION_56	IF_1	CALL_5
0x400df4e	            0x21c2	                            and edx, eax	      1661	intel_display.c	FUNCTION_56	IF_1	CALL_5
0x400df50	    0x48c7c7000000	                              mov rdi, 0	      1661	intel_display.c	FUNCTION_56	IF_1	CALL_5
0x400df57	          0x83c641	                           add esi, 0x41	      1661	intel_display.c	FUNCTION_56	IF_1	CALL_5
0x400df5a	      0xe800000000	                          call 0x400df5f	      1661	intel_display.c	FUNCTION_56	IF_1	CALL_5
0x400df5f	             0xf0b	                                     ud2	      1661	intel_display.c	FUNCTION_56	IF_1	CALL_5
0x400df61	              0x5b	                                 pop rbx	      1664	intel_display.c	FUNCTION_56
0x400df62	              0x5d	                                 pop rbp	      1664	intel_display.c	FUNCTION_56
0x400df63	            0x415c	                                 pop r12	      1664	intel_display.c	FUNCTION_56
0x400df65	            0x415d	                                 pop r13	      1664	intel_display.c	FUNCTION_56
0x400df67	            0x415e	                                 pop r14	      1664	intel_display.c	FUNCTION_56
0x400df69	              0xc3	                                     ret	      1664	intel_display.c	FUNCTION_56
0x400df6a	      0xbd40621800	                       mov ebp, 0x186240	      1652	intel_display.c	FUNCTION_56	SWITCH_1
0x400df6f	    0x41be0f000000	                           mov r14d, 0xf	      1651	intel_display.c	FUNCTION_56	SWITCH_1
0x400df75	            0xeb94	                           jmp 0x400df0b	      1651	intel_display.c	FUNCTION_56	SWITCH_1
0x400df77	    0x8b876c060000	           mov eax, dword [rdi + 0x66c] 	      1647	intel_display.c	FUNCTION_56	SWITCH_1	CALL_2
0x400df7d	        0x41c1e404	                             shl r12d, 4	      1648	intel_display.c	FUNCTION_56	SWITCH_1
0x400df81	    0x41bef0000000	                          mov r14d, 0xf0	      1646	intel_display.c	FUNCTION_56	SWITCH_1
0x400df87	    0x8da814600000	                 lea ebp, [rax + 0x6014]	      1647	intel_display.c	FUNCTION_56	SWITCH_1	CALL_2
0x400df8d	      0xe979ffffff	                           jmp 0x400df0b	      1649	intel_display.c	FUNCTION_56	SWITCH_1
i830_enable_pipe	FOR,1:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,45	260
0x4019710	            0x4157	                                push r15	     14761	intel_display.c	FUNCTION_404
0x4019712	            0x4156	                                push r14	     14761	intel_display.c	FUNCTION_404
0x4019714	            0x4155	                                push r13	     14761	intel_display.c	FUNCTION_404
0x4019716	            0x4154	                                push r12	     14761	intel_display.c	FUNCTION_404
0x4019718	              0x55	                                push rbp	     14761	intel_display.c	FUNCTION_404
0x4019719	              0x53	                                push rbx	     14761	intel_display.c	FUNCTION_404
0x401971a	          0x4863ee	                         movsxd rbp, esi	     14761	intel_display.c	FUNCTION_404
0x401971d	          0x4889fb	                            mov rbx, rdi	     14761	intel_display.c	FUNCTION_404
0x4019720	          0x4989ed	                            mov r13, rbp	     14761	intel_display.c	FUNCTION_404
0x4019723	    0x4881ec880000	                           sub rsp, 0x88	     14761	intel_display.c	FUNCTION_404
0x401972a	    0x65488b042528	                mov rax, qword gs:[0x28]	     14761	intel_display.c	FUNCTION_404
0x4019733	    0x488984248000	             mov qword [rsp + 0x80], rax	     14761	intel_display.c	FUNCTION_404
0x401973b	            0x31c0	                            xor eax, eax	     14761	intel_display.c	FUNCTION_404
0x401973d	    0x488b84ef6865	  mov rax, qword [rdi + rbp*8 + 0x6568] 	      1220	intel_drv.h	FUNCTION_432
0x4019745	      0x488d742408	                      lea rsi, [rsp + 8]	     14774	intel_display.c	FUNCTION_404	CALL_3
0x401974a	      0xbf80bb0000	                         mov edi, 0xbb80	     14774	intel_display.c	FUNCTION_404	CALL_3
0x401974f	    0x48c744241800	               mov qword [rsp + 0x18], 0	     14764	intel_display.c	FUNCTION_404
0x4019758	    0x48c744242000	               mov qword [rsp + 0x20], 0	     14764	intel_display.c	FUNCTION_404
0x4019761	    0xc74424280000	               mov dword [rsp + 0x28], 0	     14764	intel_display.c	FUNCTION_404
0x4019769	    0xc74424080200	                  mov dword [rsp + 8], 2	     14764	intel_display.c	FUNCTION_404
0x4019771	        0x48890424	                    mov qword [rsp], rax	      1220	intel_drv.h	FUNCTION_432
0x4019775	    0xc744240c1200	            mov dword [rsp + 0xc], 0x12 	     14764	intel_display.c	FUNCTION_404
0x401977d	    0xc74424100700	               mov dword [rsp + 0x10], 7	     14764	intel_display.c	FUNCTION_404
0x4019785	    0xc74424140d00	            mov dword [rsp + 0x14], 0xd 	     14764	intel_display.c	FUNCTION_404
0x401978d	    0xc74424180400	               mov dword [rsp + 0x18], 4	     14764	intel_display.c	FUNCTION_404
0x4019795	      0xe8567efeff	          call sym.i9xx_calc_dpll_params	     14774	intel_display.c	FUNCTION_404	CALL_3
0x401979a	      0x3d42620000	                         cmp eax, 0x6242	     14774	intel_display.c	FUNCTION_404	CALL_3
0x401979f	     0xf8568040000	                           jne 0x4019c0d	     14774	intel_display.c	FUNCTION_404	CALL_3
0x40197a5	      0x448b44241c	            mov r8d, dword [rsp + 0x1c] 	     14776	intel_display.c	FUNCTION_404	CALL_4
0x40197aa	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	     14776	intel_display.c	FUNCTION_404	CALL_4
0x40197ae	        0x418d5541	                   lea edx, [r13 + 0x41]	     14776	intel_display.c	FUNCTION_404	CALL_4
0x40197b2	    0x48c7c6000000	                              mov rsi, 0	     14776	intel_display.c	FUNCTION_404	CALL_4
0x40197b9	      0xbf04000000	                              mov edi, 4	     14776	intel_display.c	FUNCTION_404	CALL_4
0x40197be	    0x468d2ced4060	              lea r13d, [r13*8 + 0x6040]	     14787	intel_display.c	FUNCTION_404	CALL_10
0x40197c6	      0xe800000000	                          call 0x40197cb	     14776	intel_display.c	FUNCTION_404	CALL_4
0x40197cb	      0x448b642408	               mov r12d, dword [rsp + 8]	      6564	intel_display.c	FUNCTION_204
0x40197d0	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      6564	intel_display.c	FUNCTION_204
0x40197d4	          0x4889df	                            mov rdi, rbx	     14780	intel_display.c	FUNCTION_404	CALL_8
0x40197d7	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	     14780	intel_display.c	FUNCTION_404	CALL_8
0x40197de	          0xc1e008	                              shl eax, 8	      6564	intel_display.c	FUNCTION_204
0x40197e1	        0x41c1e410	                          shl r12d, 0x10	      6564	intel_display.c	FUNCTION_204
0x40197e5	          0x4109c4	                            or r12d, eax	      6564	intel_display.c	FUNCTION_204
0x40197e8	    0x8b836c060000	           mov eax, dword [rbx + 0x66c] 	     14780	intel_display.c	FUNCTION_404	CALL_8
0x40197ee	      0x440b642410	             or r12d, dword [rsp + 0x10]	      6564	intel_display.c	FUNCTION_204
0x40197f3	    0x8d9014600000	                 lea edx, [rax + 0x6014]	     14780	intel_display.c	FUNCTION_404	CALL_8
0x40197f9	        0x8954242c	             mov dword [rsp + 0x2c], edx	     14780	intel_display.c	FUNCTION_404	CALL_8
0x40197fd	    0x8d9018600000	                 lea edx, [rax + 0x6018]	     14780	intel_display.c	FUNCTION_404	CALL_8
0x4019803	       0x530600000	                         add eax, 0x6030	     14780	intel_display.c	FUNCTION_404	CALL_8
0x4019808	        0x89442434	             mov dword [rsp + 0x34], eax	     14780	intel_display.c	FUNCTION_404	CALL_8
0x401980c	        0x89542430	             mov dword [rsp + 0x30], edx	     14780	intel_display.c	FUNCTION_404	CALL_8
0x4019810	      0xba01000000	                              mov edx, 1	     14780	intel_display.c	FUNCTION_404	CALL_8
0x4019815	        0x8b74ac2c	    mov esi, dword [rsp + rbp*4 + 0x2c] 	     14780	intel_display.c	FUNCTION_404	CALL_8
0x4019819	      0xe800000000	                          call 0x401981e	     14780	intel_display.c	FUNCTION_404	CALL_8
0x401981e	        0x8b7c2414	            mov edi, dword [rsp + 0x14] 	     14781	intel_display.c	FUNCTION_404
0x4019822	      0x2500000040	                     and eax, 0x40000000	     14781	intel_display.c	FUNCTION_404
0x4019827	          0x4489e2	                           mov edx, r12d	     14787	intel_display.c	FUNCTION_404	CALL_10
0x401982a	          0x4489ee	                           mov esi, r13d	     14787	intel_display.c	FUNCTION_404	CALL_10
0x401982d	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	     14787	intel_display.c	FUNCTION_404	CALL_10
0x4019834	          0x8d4ffe	                      lea ecx, [rdi - 2]	     14781	intel_display.c	FUNCTION_404
0x4019837	          0x4889df	                            mov rdi, rbx	     14787	intel_display.c	FUNCTION_404	CALL_10
0x401983a	          0xc1e110	                           shl ecx, 0x10	     14781	intel_display.c	FUNCTION_404
0x401983d	             0x9c1	                             or ecx, eax	     14781	intel_display.c	FUNCTION_404
0x401983f	          0x4189cf	                           mov r15d, ecx	     14781	intel_display.c	FUNCTION_404
0x4019842	          0x4189ce	                           mov r14d, ecx	     14780	intel_display.c	FUNCTION_404	CALL_8
0x4019845	      0xb901000000	                              mov ecx, 1	     14787	intel_display.c	FUNCTION_404	CALL_10
0x401984a	      0xe800000000	                          call 0x401984f	     14787	intel_display.c	FUNCTION_404	CALL_10
0x401984f	          0x4489e2	                           mov edx, r12d	     14788	intel_display.c	FUNCTION_404	CALL_12
0x4019852	        0x4c8d24ab	                  lea r12, [rbx + rbp*4]	     14788	intel_display.c	FUNCTION_404	CALL_12
0x4019856	        0x418d7504	                      lea esi, [r13 + 4]	     14788	intel_display.c	FUNCTION_404	CALL_12
0x401985a	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	     14788	intel_display.c	FUNCTION_404	CALL_12
0x4019861	      0xb901000000	                              mov ecx, 1	     14788	intel_display.c	FUNCTION_404	CALL_12
0x4019866	          0x4889df	                            mov rdi, rbx	     14788	intel_display.c	FUNCTION_404	CALL_12
0x4019869	      0xe800000000	                          call 0x401986e	     14788	intel_display.c	FUNCTION_404	CALL_12
0x401986e	    0x418b94249806	           mov edx, dword [r12 + 0x698] 	     14790	intel_display.c	FUNCTION_404	CALL_14
0x4019876	    0x2b9398060000	            sub edx, dword [rbx + 0x698]	     14790	intel_display.c	FUNCTION_404	CALL_14
0x401987c	          0x4889df	                            mov rdi, rbx	     14790	intel_display.c	FUNCTION_404	CALL_14
0x401987f	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	     14790	intel_display.c	FUNCTION_404	CALL_14
0x4019885	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	     14790	intel_display.c	FUNCTION_404	CALL_14
0x401988c	    0x4181ce000080	                     or r14d, 0x90800000	     14780	intel_display.c	FUNCTION_404	CALL_8
0x4019893	    0x41bd03000000	                             mov r13d, 3	     14815	intel_display.c	FUNCTION_404	CALL_35
0x4019899	    0x8db40a000006	          lea esi, [rdx + rcx + 0x60000]	     14790	intel_display.c	FUNCTION_404	CALL_14
0x40198a0	      0xb901000000	                              mov ecx, 1	     14790	intel_display.c	FUNCTION_404	CALL_14
0x40198a5	      0xba7f021f03	                      mov edx, 0x31f027f	     14790	intel_display.c	FUNCTION_404	CALL_14
0x40198aa	      0xe800000000	                          call 0x40198af	     14790	intel_display.c	FUNCTION_404	CALL_14
0x40198af	    0x418b94249806	           mov edx, dword [r12 + 0x698] 	     14791	intel_display.c	FUNCTION_404	CALL_16
0x40198b7	    0x2b9398060000	            sub edx, dword [rbx + 0x698]	     14791	intel_display.c	FUNCTION_404	CALL_16
0x40198bd	          0x4889df	                            mov rdi, rbx	     14791	intel_display.c	FUNCTION_404	CALL_16
0x40198c0	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	     14791	intel_display.c	FUNCTION_404	CALL_16
0x40198c6	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	     14791	intel_display.c	FUNCTION_404	CALL_16
0x40198cd	    0x8db40a040006	          lea esi, [rdx + rcx + 0x60004]	     14791	intel_display.c	FUNCTION_404	CALL_16
0x40198d4	      0xb901000000	                              mov ecx, 1	     14791	intel_display.c	FUNCTION_404	CALL_16
0x40198d9	      0xba7f021f03	                      mov edx, 0x31f027f	     14791	intel_display.c	FUNCTION_404	CALL_16
0x40198de	      0xe800000000	                          call 0x40198e3	     14791	intel_display.c	FUNCTION_404	CALL_16
0x40198e3	    0x418b94249806	           mov edx, dword [r12 + 0x698] 	     14792	intel_display.c	FUNCTION_404	CALL_18
0x40198eb	    0x2b9398060000	            sub edx, dword [rbx + 0x698]	     14792	intel_display.c	FUNCTION_404	CALL_18
0x40198f1	          0x4889df	                            mov rdi, rbx	     14792	intel_display.c	FUNCTION_404	CALL_18
0x40198f4	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	     14792	intel_display.c	FUNCTION_404	CALL_18
0x40198fa	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	     14792	intel_display.c	FUNCTION_404	CALL_18
0x4019901	    0x8db40a080006	          lea esi, [rdx + rcx + 0x60008]	     14792	intel_display.c	FUNCTION_404	CALL_18
0x4019908	      0xb901000000	                              mov ecx, 1	     14792	intel_display.c	FUNCTION_404	CALL_18
0x401990d	      0xba8f02ef02	                      mov edx, 0x2ef028f	     14792	intel_display.c	FUNCTION_404	CALL_18
0x4019912	      0xe800000000	                          call 0x4019917	     14792	intel_display.c	FUNCTION_404	CALL_18
0x4019917	    0x418b94249806	           mov edx, dword [r12 + 0x698] 	     14793	intel_display.c	FUNCTION_404	CALL_20
0x401991f	    0x2b9398060000	            sub edx, dword [rbx + 0x698]	     14793	intel_display.c	FUNCTION_404	CALL_20
0x4019925	          0x4889df	                            mov rdi, rbx	     14793	intel_display.c	FUNCTION_404	CALL_20
0x4019928	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	     14793	intel_display.c	FUNCTION_404	CALL_20
0x401992e	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	     14793	intel_display.c	FUNCTION_404	CALL_20
0x4019935	    0x8db40a0c0006	          lea esi, [rdx + rcx + 0x6000c]	     14793	intel_display.c	FUNCTION_404	CALL_20
0x401993c	      0xb901000000	                              mov ecx, 1	     14793	intel_display.c	FUNCTION_404	CALL_20
0x4019941	      0xbadf010c02	                      mov edx, 0x20c01df	     14793	intel_display.c	FUNCTION_404	CALL_20
0x4019946	      0xe800000000	                          call 0x401994b	     14793	intel_display.c	FUNCTION_404	CALL_20
0x401994b	    0x418b94249806	           mov edx, dword [r12 + 0x698] 	     14794	intel_display.c	FUNCTION_404	CALL_22
0x4019953	    0x2b9398060000	            sub edx, dword [rbx + 0x698]	     14794	intel_display.c	FUNCTION_404	CALL_22
0x4019959	          0x4889df	                            mov rdi, rbx	     14794	intel_display.c	FUNCTION_404	CALL_22
0x401995c	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	     14794	intel_display.c	FUNCTION_404	CALL_22
0x4019962	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	     14794	intel_display.c	FUNCTION_404	CALL_22
0x4019969	    0x8db40a100006	          lea esi, [rdx + rcx + 0x60010]	     14794	intel_display.c	FUNCTION_404	CALL_22
0x4019970	      0xb901000000	                              mov ecx, 1	     14794	intel_display.c	FUNCTION_404	CALL_22
0x4019975	      0xbadf010c02	                      mov edx, 0x20c01df	     14794	intel_display.c	FUNCTION_404	CALL_22
0x401997a	      0xe800000000	                          call 0x401997f	     14794	intel_display.c	FUNCTION_404	CALL_22
0x401997f	    0x418b94249806	           mov edx, dword [r12 + 0x698] 	     14795	intel_display.c	FUNCTION_404	CALL_24
0x4019987	    0x2b9398060000	            sub edx, dword [rbx + 0x698]	     14795	intel_display.c	FUNCTION_404	CALL_24
0x401998d	          0x4889df	                            mov rdi, rbx	     14795	intel_display.c	FUNCTION_404	CALL_24
0x4019990	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	     14795	intel_display.c	FUNCTION_404	CALL_24
0x4019996	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	     14795	intel_display.c	FUNCTION_404	CALL_24
0x401999d	    0x8db40a140006	          lea esi, [rdx + rcx + 0x60014]	     14795	intel_display.c	FUNCTION_404	CALL_24
0x40199a4	      0xb901000000	                              mov ecx, 1	     14795	intel_display.c	FUNCTION_404	CALL_24
0x40199a9	      0xbae901eb01	                      mov edx, 0x1eb01e9	     14795	intel_display.c	FUNCTION_404	CALL_24
0x40199ae	      0xe800000000	                          call 0x40199b3	     14795	intel_display.c	FUNCTION_404	CALL_24
0x40199b3	    0x418b94249806	           mov edx, dword [r12 + 0x698] 	     14796	intel_display.c	FUNCTION_404	CALL_26
0x40199bb	    0x2b9398060000	            sub edx, dword [rbx + 0x698]	     14796	intel_display.c	FUNCTION_404	CALL_26
0x40199c1	          0x4889df	                            mov rdi, rbx	     14796	intel_display.c	FUNCTION_404	CALL_26
0x40199c4	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	     14796	intel_display.c	FUNCTION_404	CALL_26
0x40199ca	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	     14796	intel_display.c	FUNCTION_404	CALL_26
0x40199d1	    0x8db40a1c0006	          lea esi, [rdx + rcx + 0x6001c]	     14796	intel_display.c	FUNCTION_404	CALL_26
0x40199d8	      0xb901000000	                              mov ecx, 1	     14796	intel_display.c	FUNCTION_404	CALL_26
0x40199dd	      0xbadf017f02	                      mov edx, 0x27f01df	     14796	intel_display.c	FUNCTION_404	CALL_26
0x40199e2	      0xe800000000	                          call 0x40199e7	     14796	intel_display.c	FUNCTION_404	CALL_26
0x40199e7	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	     14803	intel_display.c	FUNCTION_404	CALL_28
0x40199ed	          0x4489f8	                           mov eax, r15d	     14803	intel_display.c	FUNCTION_404	CALL_28
0x40199f0	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	     14803	intel_display.c	FUNCTION_404	CALL_28
0x40199f7	      0x25ffffffef	                     and eax, 0xefffffff	     14803	intel_display.c	FUNCTION_404	CALL_28
0x40199fc	          0x4889df	                            mov rdi, rbx	     14803	intel_display.c	FUNCTION_404	CALL_28
0x40199ff	       0xd00008080	                      or eax, 0x80800000	     14803	intel_display.c	FUNCTION_404	CALL_28
0x4019a04	    0x8d8a14600000	                 lea ecx, [rdx + 0x6014]	     14803	intel_display.c	FUNCTION_404	CALL_28
0x4019a0a	        0x894c2438	             mov dword [rsp + 0x38], ecx	     14803	intel_display.c	FUNCTION_404	CALL_28
0x4019a0e	    0x8d8a18600000	                 lea ecx, [rdx + 0x6018]	     14803	intel_display.c	FUNCTION_404	CALL_28
0x4019a14	    0x81c230600000	                         add edx, 0x6030	     14803	intel_display.c	FUNCTION_404	CALL_28
0x4019a1a	        0x89542440	             mov dword [rsp + 0x40], edx	     14803	intel_display.c	FUNCTION_404	CALL_28
0x4019a1e	            0x89c2	                            mov edx, eax	     14803	intel_display.c	FUNCTION_404	CALL_28
0x4019a20	        0x894c243c	             mov dword [rsp + 0x3c], ecx	     14803	intel_display.c	FUNCTION_404	CALL_28
0x4019a24	      0xb901000000	                              mov ecx, 1	     14803	intel_display.c	FUNCTION_404	CALL_28
0x4019a29	        0x8b74ac38	    mov esi, dword [rsp + rbp*4 + 0x38] 	     14803	intel_display.c	FUNCTION_404	CALL_28
0x4019a2d	      0xe800000000	                          call 0x4019a32	     14803	intel_display.c	FUNCTION_404	CALL_28
0x4019a32	    0x8b836c060000	           mov eax, dword [rbx + 0x66c] 	     14804	intel_display.c	FUNCTION_404	CALL_30
0x4019a38	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	     14804	intel_display.c	FUNCTION_404	CALL_30
0x4019a3f	      0xb901000000	                              mov ecx, 1	     14804	intel_display.c	FUNCTION_404	CALL_30
0x4019a44	          0x4889df	                            mov rdi, rbx	     14804	intel_display.c	FUNCTION_404	CALL_30
0x4019a47	    0x8d9014600000	                 lea edx, [rax + 0x6014]	     14804	intel_display.c	FUNCTION_404	CALL_30
0x4019a4d	        0x89542444	             mov dword [rsp + 0x44], edx	     14804	intel_display.c	FUNCTION_404	CALL_30
0x4019a51	    0x8d9018600000	                 lea edx, [rax + 0x6018]	     14804	intel_display.c	FUNCTION_404	CALL_30
0x4019a57	       0x530600000	                         add eax, 0x6030	     14804	intel_display.c	FUNCTION_404	CALL_30
0x4019a5c	        0x8944244c	             mov dword [rsp + 0x4c], eax	     14804	intel_display.c	FUNCTION_404	CALL_30
0x4019a60	        0x89542448	             mov dword [rsp + 0x48], edx	     14804	intel_display.c	FUNCTION_404	CALL_30
0x4019a64	          0x4489f2	                           mov edx, r14d	     14804	intel_display.c	FUNCTION_404	CALL_30
0x4019a67	        0x8b74ac44	    mov esi, dword [rsp + rbp*4 + 0x44] 	     14804	intel_display.c	FUNCTION_404	CALL_30
0x4019a6b	      0xe800000000	                          call 0x4019a70	     14804	intel_display.c	FUNCTION_404	CALL_30
0x4019a70	    0x8b836c060000	           mov eax, dword [rbx + 0x66c] 	     14807	intel_display.c	FUNCTION_404	CALL_32
0x4019a76	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	     14807	intel_display.c	FUNCTION_404	CALL_32
0x4019a7d	          0x4889df	                            mov rdi, rbx	     14807	intel_display.c	FUNCTION_404	CALL_32
0x4019a80	    0x8d9014600000	                 lea edx, [rax + 0x6014]	     14807	intel_display.c	FUNCTION_404	CALL_32
0x4019a86	        0x89542450	             mov dword [rsp + 0x50], edx	     14807	intel_display.c	FUNCTION_404	CALL_32
0x4019a8a	    0x8d9018600000	                 lea edx, [rax + 0x6018]	     14807	intel_display.c	FUNCTION_404	CALL_32
0x4019a90	       0x530600000	                         add eax, 0x6030	     14807	intel_display.c	FUNCTION_404	CALL_32
0x4019a95	        0x89442458	             mov dword [rsp + 0x58], eax	     14807	intel_display.c	FUNCTION_404	CALL_32
0x4019a99	        0x89542454	             mov dword [rsp + 0x54], edx	     14807	intel_display.c	FUNCTION_404	CALL_32
0x4019a9d	            0x31d2	                            xor edx, edx	     14807	intel_display.c	FUNCTION_404	CALL_32
0x4019a9f	        0x8b74ac50	    mov esi, dword [rsp + rbp*4 + 0x50] 	     14807	intel_display.c	FUNCTION_404	CALL_32
0x4019aa3	      0xe800000000	                          call 0x4019aa8	     14807	intel_display.c	FUNCTION_404	CALL_32
0x4019aa8	      0xbf9ad40900	                        mov edi, 0x9d49a	     14808	intel_display.c	FUNCTION_404	CALL_33
0x4019aad	      0xe800000000	                          call 0x4019ab2	     14808	intel_display.c	FUNCTION_404	CALL_33
0x4019ab2	    0x8b836c060000	           mov eax, dword [rbx + 0x66c] 	     14815	intel_display.c	FUNCTION_404	CALL_35
0x4019ab8	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	     14815	intel_display.c	FUNCTION_404	CALL_35
0x4019abf	      0xb901000000	                              mov ecx, 1	     14815	intel_display.c	FUNCTION_404	CALL_35
0x4019ac4	          0x4889df	                            mov rdi, rbx	     14815	intel_display.c	FUNCTION_404	CALL_35
0x4019ac7	    0x8d9014600000	                 lea edx, [rax + 0x6014]	     14815	intel_display.c	FUNCTION_404	CALL_35
0x4019acd	        0x8954245c	             mov dword [rsp + 0x5c], edx	     14815	intel_display.c	FUNCTION_404	CALL_35
0x4019ad1	    0x8d9018600000	                 lea edx, [rax + 0x6018]	     14815	intel_display.c	FUNCTION_404	CALL_35
0x4019ad7	       0x530600000	                         add eax, 0x6030	     14815	intel_display.c	FUNCTION_404	CALL_35
0x4019adc	        0x89442464	             mov dword [rsp + 0x64], eax	     14815	intel_display.c	FUNCTION_404	CALL_35
0x4019ae0	        0x89542460	             mov dword [rsp + 0x60], edx	     14815	intel_display.c	FUNCTION_404	CALL_35
0x4019ae4	          0x4489f2	                           mov edx, r14d	     14815	intel_display.c	FUNCTION_404	CALL_35
0x4019ae7	        0x8b74ac5c	    mov esi, dword [rsp + rbp*4 + 0x5c] 	     14815	intel_display.c	FUNCTION_404	CALL_35
0x4019aeb	      0xe800000000	                          call 0x4019af0	     14815	intel_display.c	FUNCTION_404	CALL_35
0x4019af0	    0x8b836c060000	           mov eax, dword [rbx + 0x66c] 	     14819	intel_display.c	FUNCTION_404	FOR_1	CALL_37
0x4019af6	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	     14819	intel_display.c	FUNCTION_404	FOR_1	CALL_37
0x4019afd	      0xb901000000	                              mov ecx, 1	     14819	intel_display.c	FUNCTION_404	FOR_1	CALL_37
0x4019b02	          0x4889df	                            mov rdi, rbx	     14819	intel_display.c	FUNCTION_404	FOR_1	CALL_37
0x4019b05	    0x8d9014600000	                 lea edx, [rax + 0x6014]	     14819	intel_display.c	FUNCTION_404	FOR_1	CALL_37
0x4019b0b	        0x89542468	             mov dword [rsp + 0x68], edx	     14819	intel_display.c	FUNCTION_404	FOR_1	CALL_37
0x4019b0f	    0x8d9018600000	                 lea edx, [rax + 0x6018]	     14819	intel_display.c	FUNCTION_404	FOR_1	CALL_37
0x4019b15	       0x530600000	                         add eax, 0x6030	     14819	intel_display.c	FUNCTION_404	FOR_1	CALL_37
0x4019b1a	        0x89442470	             mov dword [rsp + 0x70], eax	     14819	intel_display.c	FUNCTION_404	FOR_1	CALL_37
0x4019b1e	        0x8954246c	             mov dword [rsp + 0x6c], edx	     14819	intel_display.c	FUNCTION_404	FOR_1	CALL_37
0x4019b22	          0x4489f2	                           mov edx, r14d	     14819	intel_display.c	FUNCTION_404	FOR_1	CALL_37
0x4019b25	        0x8b74ac68	    mov esi, dword [rsp + rbp*4 + 0x68] 	     14819	intel_display.c	FUNCTION_404	FOR_1	CALL_37
0x4019b29	      0xe800000000	                          call 0x4019b2e	     14819	intel_display.c	FUNCTION_404	FOR_1	CALL_37
0x4019b2e	    0x8b836c060000	           mov eax, dword [rbx + 0x66c] 	     14820	intel_display.c	FUNCTION_404	FOR_1	CALL_39
0x4019b34	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	     14820	intel_display.c	FUNCTION_404	FOR_1	CALL_39
0x4019b3b	          0x4889df	                            mov rdi, rbx	     14820	intel_display.c	FUNCTION_404	FOR_1	CALL_39
0x4019b3e	    0x8d9014600000	                 lea edx, [rax + 0x6014]	     14820	intel_display.c	FUNCTION_404	FOR_1	CALL_39
0x4019b44	        0x89542474	             mov dword [rsp + 0x74], edx	     14820	intel_display.c	FUNCTION_404	FOR_1	CALL_39
0x4019b48	    0x8d9018600000	                 lea edx, [rax + 0x6018]	     14820	intel_display.c	FUNCTION_404	FOR_1	CALL_39
0x4019b4e	       0x530600000	                         add eax, 0x6030	     14820	intel_display.c	FUNCTION_404	FOR_1	CALL_39
0x4019b53	        0x8944247c	             mov dword [rsp + 0x7c], eax	     14820	intel_display.c	FUNCTION_404	FOR_1	CALL_39
0x4019b57	        0x89542478	             mov dword [rsp + 0x78], edx	     14820	intel_display.c	FUNCTION_404	FOR_1	CALL_39
0x4019b5b	            0x31d2	                            xor edx, edx	     14820	intel_display.c	FUNCTION_404	FOR_1	CALL_39
0x4019b5d	        0x8b74ac74	    mov esi, dword [rsp + rbp*4 + 0x74] 	     14820	intel_display.c	FUNCTION_404	FOR_1	CALL_39
0x4019b61	      0xe800000000	                          call 0x4019b66	     14820	intel_display.c	FUNCTION_404	FOR_1	CALL_39
0x4019b66	      0xbf9ad40900	                        mov edi, 0x9d49a	     14821	intel_display.c	FUNCTION_404	FOR_1	CALL_40
0x4019b6b	      0xe800000000	                          call 0x4019b70	     14821	intel_display.c	FUNCTION_404	FOR_1	CALL_40
0x4019b70	        0x4183ed01	                             sub r13d, 1	     14818	intel_display.c	FUNCTION_404	FOR_1
0x4019b74	     0xf8576ffffff	                           jne 0x4019af0	     14818	intel_display.c	FUNCTION_404	FOR_1
0x4019b7a	    0x418b84248006	           mov eax, dword [r12 + 0x680] 	     14824	intel_display.c	FUNCTION_404	CALL_42
0x4019b82	    0x2b8380060000	            sub eax, dword [rbx + 0x680]	     14824	intel_display.c	FUNCTION_404	CALL_42
0x4019b88	      0xb901000000	                              mov ecx, 1	     14824	intel_display.c	FUNCTION_404	CALL_42
0x4019b8d	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	     14824	intel_display.c	FUNCTION_404	CALL_42
0x4019b93	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	     14824	intel_display.c	FUNCTION_404	CALL_42
0x4019b9a	          0x4889df	                            mov rdi, rbx	     14824	intel_display.c	FUNCTION_404	CALL_42
0x4019b9d	    0x8db410080007	          lea esi, [rax + rdx + 0x70008]	     14824	intel_display.c	FUNCTION_404	CALL_42
0x4019ba4	      0xba00000080	                     mov edx, 0x80000000	     14824	intel_display.c	FUNCTION_404	CALL_42
0x4019ba9	      0xe800000000	                          call 0x4019bae	     14824	intel_display.c	FUNCTION_404	CALL_42
0x4019bae	    0x418b84248006	           mov eax, dword [r12 + 0x680] 	     14825	intel_display.c	FUNCTION_404	CALL_44
0x4019bb6	    0x2b8380060000	            sub eax, dword [rbx + 0x680]	     14825	intel_display.c	FUNCTION_404	CALL_44
0x4019bbc	          0x4889df	                            mov rdi, rbx	     14825	intel_display.c	FUNCTION_404	CALL_44
0x4019bbf	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	     14825	intel_display.c	FUNCTION_404	CALL_44
0x4019bc5	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	     14825	intel_display.c	FUNCTION_404	CALL_44
0x4019bcc	    0x8db410080007	          lea esi, [rax + rdx + 0x70008]	     14825	intel_display.c	FUNCTION_404	CALL_44
0x4019bd3	            0x31d2	                            xor edx, edx	     14825	intel_display.c	FUNCTION_404	CALL_44
0x4019bd5	      0xe800000000	                          call 0x4019bda	     14825	intel_display.c	FUNCTION_404	CALL_44
0x4019bda	        0x488b3c24	                    mov rdi, qword [rsp]	      1038	intel_display.c	FUNCTION_26	CALL_1
0x4019bde	      0xbe01000000	                              mov esi, 1	      1038	intel_display.c	FUNCTION_26	CALL_1
0x4019be3	      0xe868abfeff	  call sym.wait_for_pipe_scanline_moving	      1038	intel_display.c	FUNCTION_26	CALL_1
0x4019be8	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	     14828	intel_display.c	FUNCTION_404
0x4019bf0	    0x654833042528	                xor rax, qword gs:[0x28]	     14828	intel_display.c	FUNCTION_404
0x4019bf9	            0x752c	                           jne 0x4019c27	     14828	intel_display.c	FUNCTION_404
0x4019bfb	    0x4881c4880000	                           add rsp, 0x88	     14828	intel_display.c	FUNCTION_404
0x4019c02	              0x5b	                                 pop rbx	     14828	intel_display.c	FUNCTION_404
0x4019c03	              0x5d	                                 pop rbp	     14828	intel_display.c	FUNCTION_404
0x4019c04	            0x415c	                                 pop r12	     14828	intel_display.c	FUNCTION_404
0x4019c06	            0x415d	                                 pop r13	     14828	intel_display.c	FUNCTION_404
0x4019c08	            0x415e	                                 pop r14	     14828	intel_display.c	FUNCTION_404
0x4019c0a	            0x415f	                                 pop r15	     14828	intel_display.c	FUNCTION_404
0x4019c0c	              0xc3	                                     ret	     14828	intel_display.c	FUNCTION_404
0x4019c0d	    0x48c7c6000000	                              mov rsi, 0	     14774	intel_display.c	FUNCTION_404	CALL_3
0x4019c14	    0x48c7c7000000	                              mov rdi, 0	     14774	intel_display.c	FUNCTION_404	CALL_3
0x4019c1b	      0xe800000000	                          call 0x4019c20	     14774	intel_display.c	FUNCTION_404	CALL_3
0x4019c20	             0xf0b	                                     ud2	     14774	intel_display.c	FUNCTION_404	CALL_3
0x4019c22	      0xe97efbffff	                           jmp 0x40197a5	     14774	intel_display.c	FUNCTION_404	CALL_3
0x4019c27	      0xe800000000	                          call 0x4019c2c	     14828	intel_display.c	FUNCTION_404
assert_panel_unlocked	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,6:ELSE,2:functions,0:CALL,15	81
0x400d130	            0x4155	                                push r13	      1159	intel_display.c	FUNCTION_34
0x400d132	            0x4154	                                push r12	      1159	intel_display.c	FUNCTION_34
0x400d134	              0x55	                                push rbp	      1159	intel_display.c	FUNCTION_34
0x400d135	              0x53	                                push rbx	      1159	intel_display.c	FUNCTION_34
0x400d136	    0xf68777060000	          test byte [rdi + 0x677], 0x40 	      1165	intel_display.c	FUNCTION_34	IF_1	CALL_2
0x400d13d	     0xf85d6000000	                           jne 0x400d219	      1165	intel_display.c	FUNCTION_34	IF_1	CALL_2
0x400d143	    0x8b87f8550000	          mov eax, dword [rdi + 0x55f8] 	      1168	intel_display.c	FUNCTION_34	IF_2	CALL_3
0x400d149	          0x4889fb	                            mov rbx, rdi	      1168	intel_display.c	FUNCTION_34	IF_2	CALL_3
0x400d14c	          0x4189f4	                           mov r12d, esi	      1168	intel_display.c	FUNCTION_34	IF_2	CALL_3
0x400d14f	            0x85c0	                           test eax, eax	      1168	intel_display.c	FUNCTION_34	IF_2	CALL_3
0x400d151	            0x7559	                           jne 0x400d1ac	      1168	intel_display.c	FUNCTION_34	IF_2	CALL_3
0x400d153	    0xf78364060000	     test dword [rbx + 0x664], 0x240000 	      1178	intel_display.c	FUNCTION_34	ELSE_1	IF_4	CALL_9
0x400d15d	     0xf8486000000	                            je 0x400d1e9	      1178	intel_display.c	FUNCTION_34	ELSE_1	IF_4	CALL_9
0x400d163	    0x8b9354460000	          mov edx, dword [rbx + 0x4654] 	      1180	intel_display.c	FUNCTION_34	ELSE_1	IF_4	CALL_10
0x400d169	          0x4489e0	                           mov eax, r12d	      1180	intel_display.c	FUNCTION_34	ELSE_1	IF_4	CALL_10
0x400d16c	          0x4489e5	                           mov ebp, r12d	      1180	intel_display.c	FUNCTION_34	ELSE_1	IF_4	CALL_10
0x400d16f	          0xc1e008	                              shl eax, 8	      1180	intel_display.c	FUNCTION_34	ELSE_1	IF_4	CALL_10
0x400d172	      0x448d6c0204	               lea r13d, [rdx + rax + 4]	      1180	intel_display.c	FUNCTION_34	ELSE_1	IF_4	CALL_10
0x400d177	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      1188	intel_display.c	FUNCTION_34	CALL_13
0x400d17e	      0xba01000000	                              mov edx, 1	      1188	intel_display.c	FUNCTION_34	CALL_13
0x400d183	          0x4489ee	                           mov esi, r13d	      1188	intel_display.c	FUNCTION_34	CALL_13
0x400d186	          0x4889df	                            mov rdi, rbx	      1188	intel_display.c	FUNCTION_34	CALL_13
0x400d189	      0xe800000000	                          call 0x400d18e	      1188	intel_display.c	FUNCTION_34	CALL_13
0x400d18e	            0xa801	                              test al, 1	      1189	intel_display.c	FUNCTION_34	IF_6
0x400d190	            0x7413	                            je 0x400d1a5	      1189	intel_display.c	FUNCTION_34	IF_6
0x400d192	          0x6631c0	                              xor ax, ax	      1189	intel_display.c	FUNCTION_34	IF_6
0x400d195	      0x3d0000cdab	                     cmp eax, 0xabcd0000	      1189	intel_display.c	FUNCTION_34	IF_6
0x400d19a	            0x7409	                            je 0x400d1a5	      1189	intel_display.c	FUNCTION_34	IF_6
0x400d19c	          0x4439e5	                           cmp ebp, r12d	      1193	intel_display.c	FUNCTION_34	CALL_14
0x400d19f	     0xf8490000000	                            je 0x400d235	      1193	intel_display.c	FUNCTION_34	CALL_14
0x400d1a5	              0x5b	                                 pop rbx	      1196	intel_display.c	FUNCTION_34
0x400d1a6	              0x5d	                                 pop rbp	      1196	intel_display.c	FUNCTION_34
0x400d1a7	            0x415c	                                 pop r12	      1196	intel_display.c	FUNCTION_34
0x400d1a9	            0x415d	                                 pop r13	      1196	intel_display.c	FUNCTION_34
0x400d1ab	              0xc3	                                     ret	      1196	intel_display.c	FUNCTION_34
0x400d1ac	    0x8bb354460000	          mov esi, dword [rbx + 0x4654] 	      1171	intel_display.c	FUNCTION_34	IF_2	CALL_4
0x400d1b2	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      1172	intel_display.c	FUNCTION_34	IF_2	CALL_6
0x400d1b9	      0xba01000000	                              mov edx, 1	      1172	intel_display.c	FUNCTION_34	IF_2	CALL_6
0x400d1be	          0x4889df	                            mov rdi, rbx	      1172	intel_display.c	FUNCTION_34	IF_2	CALL_6
0x400d1c1	            0x31ed	                            xor ebp, ebp	      1162	intel_display.c	FUNCTION_34
0x400d1c3	        0x448d6e04	                     lea r13d, [rsi + 4]	      1171	intel_display.c	FUNCTION_34	IF_2	CALL_4
0x400d1c7	          0x83c608	                              add esi, 8	      1172	intel_display.c	FUNCTION_34	IF_2	CALL_6
0x400d1ca	      0xe800000000	                          call 0x400d1cf	      1172	intel_display.c	FUNCTION_34	IF_2	CALL_6
0x400d1cf	      0xa9000000c0	                    test eax, 0xc0000000	      1174	intel_display.c	FUNCTION_34	IF_2	IF_3
0x400d1d4	            0x75a1	                           jne 0x400d177	      1174	intel_display.c	FUNCTION_34	IF_2	IF_3
0x400d1d6	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      1175	intel_display.c	FUNCTION_34	IF_2	IF_3	CALL_7
0x400d1dd	      0xba01000000	                              mov edx, 1	      1175	intel_display.c	FUNCTION_34	IF_2	IF_3	CALL_7
0x400d1e2	      0xbe80110e00	                        mov esi, 0xe1180	      1175	intel_display.c	FUNCTION_34	IF_2	IF_3	CALL_7
0x400d1e7	            0xeb1b	                           jmp 0x400d204	      1175	intel_display.c	FUNCTION_34	IF_2	IF_3	CALL_7
0x400d1e9	    0x8b8354460000	          mov eax, dword [rbx + 0x4654] 	      1183	intel_display.c	FUNCTION_34	ELSE_2	CALL_11
0x400d1ef	      0xba01000000	                              mov edx, 1	      1184	intel_display.c	FUNCTION_34	ELSE_2	IF_5	CALL_12
0x400d1f4	      0xbe80110600	                        mov esi, 0x61180	      1184	intel_display.c	FUNCTION_34	ELSE_2	IF_5	CALL_12
0x400d1f9	        0x448d6804	                     lea r13d, [rax + 4]	      1183	intel_display.c	FUNCTION_34	ELSE_2	CALL_11
0x400d1fd	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      1184	intel_display.c	FUNCTION_34	ELSE_2	IF_5	CALL_12
0x400d204	          0x4889df	                            mov rdi, rbx	      1184	intel_display.c	FUNCTION_34	ELSE_2	IF_5	CALL_12
0x400d207	      0xe800000000	                          call 0x400d20c	      1184	intel_display.c	FUNCTION_34	ELSE_2	IF_5	CALL_12
0x400d20c	          0xc1e81e	                           shr eax, 0x1e	      1162	intel_display.c	FUNCTION_34
0x400d20f	            0x89c5	                            mov ebp, eax	      1162	intel_display.c	FUNCTION_34
0x400d211	          0x83e501	                              and ebp, 1	      1162	intel_display.c	FUNCTION_34
0x400d214	      0xe95effffff	                           jmp 0x400d177	      1162	intel_display.c	FUNCTION_34
0x400d219	    0x48c7c6000000	                              mov rsi, 0	      1165	intel_display.c	FUNCTION_34	IF_1	CALL_2
0x400d220	    0x48c7c7000000	                              mov rdi, 0	      1165	intel_display.c	FUNCTION_34	IF_1	CALL_2
0x400d227	      0xe800000000	                          call 0x400d22c	      1165	intel_display.c	FUNCTION_34	IF_1	CALL_2
0x400d22c	             0xf0b	                                     ud2	      1165	intel_display.c	FUNCTION_34	IF_1	CALL_2
0x400d22e	              0x5b	                                 pop rbx	      1196	intel_display.c	FUNCTION_34
0x400d22f	              0x5d	                                 pop rbp	      1196	intel_display.c	FUNCTION_34
0x400d230	            0x415c	                                 pop r12	      1196	intel_display.c	FUNCTION_34
0x400d232	            0x415d	                                 pop r13	      1196	intel_display.c	FUNCTION_34
0x400d234	              0xc3	                                     ret	      1196	intel_display.c	FUNCTION_34
0x400d235	    0x803d00000000	                cmp byte [0x0400d23c], 0	      1193	intel_display.c	FUNCTION_34	CALL_14
0x400d23c	          0x8d7541	                   lea esi, [rbp + 0x41]	      1193	intel_display.c	FUNCTION_34	CALL_14
0x400d23f	    0x48c7c7000000	                              mov rdi, 0	      1193	intel_display.c	FUNCTION_34	CALL_14
0x400d246	            0x750b	                           jne 0x400d253	      1193	intel_display.c	FUNCTION_34	CALL_14
0x400d248	              0x5b	                                 pop rbx	      1196	intel_display.c	FUNCTION_34
0x400d249	              0x5d	                                 pop rbp	      1196	intel_display.c	FUNCTION_34
0x400d24a	            0x415c	                                 pop r12	      1196	intel_display.c	FUNCTION_34
0x400d24c	            0x415d	                                 pop r13	      1196	intel_display.c	FUNCTION_34
0x400d24e	      0xe900000000	                           jmp 0x400d253	      1193	intel_display.c	FUNCTION_34	CALL_14
0x400d253	      0xe800000000	                          call 0x400d258	      1193	intel_display.c	FUNCTION_34	CALL_14
0x400d258	             0xf0b	                                     ud2	      1193	intel_display.c	FUNCTION_34	CALL_14
0x400d25a	      0xe946ffffff	                           jmp 0x400d1a5	      1193	intel_display.c	FUNCTION_34	CALL_14
vlv_get_hpll_vco	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,3	30
0x400c150	              0x55	                                push rbp	       164	intel_display.c	FUNCTION_1
0x400c151	    0x488daf404800	                 lea rbp, [rdi + 0x4840]	       168	intel_display.c	FUNCTION_1	CALL_1
0x400c158	              0x53	                                push rbx	       164	intel_display.c	FUNCTION_1
0x400c159	          0x4889fb	                            mov rbx, rdi	       164	intel_display.c	FUNCTION_1
0x400c15c	        0x4883ec18	                           sub rsp, 0x18	       164	intel_display.c	FUNCTION_1
0x400c160	          0x4889ef	                            mov rdi, rbp	       168	intel_display.c	FUNCTION_1	CALL_1
0x400c163	    0x65488b042528	                mov rax, qword gs:[0x28]	       164	intel_display.c	FUNCTION_1
0x400c16c	      0x4889442410	             mov qword [rsp + 0x10], rax	       164	intel_display.c	FUNCTION_1
0x400c171	            0x31c0	                            xor eax, eax	       164	intel_display.c	FUNCTION_1
0x400c173	    0xc70424200300	                  mov dword [rsp], 0x320	       165	intel_display.c	FUNCTION_1
0x400c17a	    0xc74424044006	              mov dword [rsp + 4], 0x640	       165	intel_display.c	FUNCTION_1
0x400c182	    0xc7442408d007	              mov dword [rsp + 8], 0x7d0	       165	intel_display.c	FUNCTION_1
0x400c18a	    0xc744240c6009	           mov dword [rsp + 0xc], 0x960 	       165	intel_display.c	FUNCTION_1
0x400c192	      0xe800000000	                          call 0x400c197	       168	intel_display.c	FUNCTION_1	CALL_1
0x400c197	          0x4889df	                            mov rdi, rbx	       169	intel_display.c	FUNCTION_1	CALL_2
0x400c19a	      0xbe08000000	                              mov esi, 8	       169	intel_display.c	FUNCTION_1	CALL_2
0x400c19f	      0xe800000000	                          call 0x400c1a4	       169	intel_display.c	FUNCTION_1	CALL_2
0x400c1a4	            0x89c3	                            mov ebx, eax	       169	intel_display.c	FUNCTION_1	CALL_2
0x400c1a6	          0x4889ef	                            mov rdi, rbp	       171	intel_display.c	FUNCTION_1	CALL_3
0x400c1a9	          0x83e303	                              and ebx, 3	       173	intel_display.c	FUNCTION_1
0x400c1ac	      0xe800000000	                          call 0x400c1b1	       171	intel_display.c	FUNCTION_1	CALL_3
0x400c1b1	    0x69049ce80300	    imul eax, dword [rsp + rbx*4], 0x3e8	       173	intel_display.c	FUNCTION_1
0x400c1b8	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       174	intel_display.c	FUNCTION_1
0x400c1bd	    0x654833142528	                xor rdx, qword gs:[0x28]	       174	intel_display.c	FUNCTION_1
0x400c1c6	            0x7507	                           jne 0x400c1cf	       174	intel_display.c	FUNCTION_1
0x400c1c8	        0x4883c418	                           add rsp, 0x18	       174	intel_display.c	FUNCTION_1
0x400c1cc	              0x5b	                                 pop rbx	       174	intel_display.c	FUNCTION_1
0x400c1cd	              0x5d	                                 pop rbp	       174	intel_display.c	FUNCTION_1
0x400c1ce	              0xc3	                                     ret	       174	intel_display.c	FUNCTION_1
0x400c1cf	      0xe800000000	                          call 0x400c1d4	       174	intel_display.c	FUNCTION_1
intel_connector_register	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,2	1
0x401a6a0	      0xe900000000	                           jmp 0x401a6a5	     15365	intel_display.c	FUNCTION_421	CALL_2
intel_rotation_info_size	FOR,1:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,1	7
0x400e0a0	            0x8b07	                    mov eax, dword [rdi]	      2003	intel_display.c	FUNCTION_69
0x400e0a2	         0xfaf4704	               imul eax, dword [rdi + 4]	      2003	intel_display.c	FUNCTION_69
0x400e0a6	            0x89c2	                            mov edx, eax	      2003	intel_display.c	FUNCTION_69
0x400e0a8	          0x8b4710	            mov eax, dword [rdi + 0x10] 	      2003	intel_display.c	FUNCTION_69
0x400e0ab	         0xfaf4714	            imul eax, dword [rdi + 0x14]	      2003	intel_display.c	FUNCTION_69
0x400e0af	             0x1d0	                            add eax, edx	      2003	intel_display.c	FUNCTION_69
0x400e0b1	              0xc3	                                     ret	      2004	intel_display.c	FUNCTION_69
intel_framebuffer_init	FOR,1:SWITCH,3:DO,0:WHILE,0:IF,19:ELSE,2:functions,0:CALL,49	645
0x4003b30	            0x4157	                                push r15	     13972	intel_display.c	ELSE_5	FUNCTION_388
0x4003b32	            0x4156	                                push r14	     13972	intel_display.c	ELSE_5	FUNCTION_388
0x4003b34	          0x4989ff	                            mov r15, rdi	     13972	intel_display.c	ELSE_5	FUNCTION_388
0x4003b37	            0x4155	                                push r13	     13972	intel_display.c	ELSE_5	FUNCTION_388
0x4003b39	            0x4154	                                push r12	     13972	intel_display.c	ELSE_5	FUNCTION_388
0x4003b3b	              0x55	                                push rbp	     13972	intel_display.c	ELSE_5	FUNCTION_388
0x4003b3c	              0x53	                                push rbx	     13972	intel_display.c	ELSE_5	FUNCTION_388
0x4003b3d	          0x4889f3	                            mov rbx, rsi	     13972	intel_display.c	ELSE_5	FUNCTION_388
0x4003b40	          0x4889d5	                            mov rbp, rdx	     13972	intel_display.c	ELSE_5	FUNCTION_388
0x4003b43	        0x4883c480	             add rsp, 0xffffffffffffff80	     13972	intel_display.c	ELSE_5	FUNCTION_388
0x4003b47	    0x488bbe400200	           mov rdi, qword [rsi + 0x240] 	       166	reservation.h	FUNCTION_605	CALL_1
0x4003b4e	        0x4c8b6608	                mov r12, qword [rsi + 8]	     13973	intel_display.c	ELSE_5	FUNCTION_388	CALL_1
0x4003b52	            0x31f6	                            xor esi, esi	       166	reservation.h	FUNCTION_605	CALL_1
0x4003b54	    0x65488b042528	                mov rax, qword gs:[0x28]	     13972	intel_display.c	ELSE_5	FUNCTION_388
0x4003b5d	      0x4889442478	             mov qword [rsp + 0x78], rax	     13972	intel_display.c	ELSE_5	FUNCTION_388
0x4003b62	            0x31c0	                            xor eax, eax	     13972	intel_display.c	ELSE_5	FUNCTION_388
0x4003b64	      0xe800000000	                          call 0x4003b69	       166	reservation.h	FUNCTION_605	CALL_1
0x4003b69	    0x838348020000	              add dword [rbx + 0x248], 1	     13982	intel_display.c	ELSE_5	FUNCTION_388
0x4003b70	    0x448bab900100	          mov r13d, dword [rbx + 0x190] 	     13982	intel_display.c	ELSE_5	FUNCTION_388
0x4003b77	    0x488bbb400200	           mov rdi, qword [rbx + 0x240] 	       221	reservation.h	FUNCTION_608	CALL_1
0x4003b7e	          0x4589ee	                          mov r14d, r13d	       425	i915_gem_object.h	FUNCTION_712
0x4003b81	        0x4183e67f	                          and r14d, 0x7f	       425	i915_gem_object.h	FUNCTION_712
0x4003b85	      0xe800000000	                          call 0x4003b8a	       221	reservation.h	FUNCTION_608	CALL_1
0x4003b8a	        0xf6451002	               test byte [rbp + 0x10], 2	     13987	intel_display.c	ELSE_5	FUNCTION_388	IF_1
0x4003b8e	            0x745a	                            je 0x4003bea	     13987	intel_display.c	ELSE_5	FUNCTION_388	IF_1
0x4003b90	          0x4585f6	                         test r14d, r14d	     13992	intel_display.c	ELSE_5	FUNCTION_388	IF_1	IF_2
0x4003b93	            0x7469	                            je 0x4003bfe	     13992	intel_display.c	ELSE_5	FUNCTION_388	IF_1	IF_2
0x4003b95	        0x488b5548	            mov rdx, qword [rbp + 0x48] 	     13993	intel_display.c	ELSE_5	FUNCTION_388	IF_1	IF_2	CALL_6
0x4003b99	    0x48b802000000	          movabs rax, 0x100000000000002 	      2415	intel_display.c	FUNCTION_86	SWITCH_1
0x4003ba3	          0x4839c2	                            cmp rdx, rax	      2415	intel_display.c	FUNCTION_86	SWITCH_1
0x4003ba6	     0xf84b3020000	                            je 0x4003e5f	      2415	intel_display.c	FUNCTION_86	SWITCH_1
0x4003bac	    0x48b804000000	          movabs rax, 0x100000000000004 	      2415	intel_display.c	FUNCTION_86	SWITCH_1
0x4003bb6	          0x4839c2	                            cmp rdx, rax	      2415	intel_display.c	FUNCTION_86	SWITCH_1
0x4003bb9	     0xf84a0020000	                            je 0x4003e5f	      2415	intel_display.c	FUNCTION_86	SWITCH_1
0x4003bbf	    0x48b801000000	          movabs rax, 0x100000000000001 	      2415	intel_display.c	FUNCTION_86	SWITCH_1
0x4003bc9	          0x4839c2	                            cmp rdx, rax	      2415	intel_display.c	FUNCTION_86	SWITCH_1
0x4003bcc	     0xf848d030000	                            je 0x4003f5f	      2415	intel_display.c	FUNCTION_86	SWITCH_1
0x4003bd2	    0x48c7c6000000	                              mov rsi, 0	     13994	intel_display.c	ELSE_5	FUNCTION_388	IF_1	IF_2	CALL_7
0x4003bd9	      0xbf04000000	                              mov edi, 4	     13994	intel_display.c	ELSE_5	FUNCTION_388	IF_1	IF_2	CALL_7
0x4003bde	      0xbdeaffffff	                     mov ebp, 0xffffffea	     13978	intel_display.c	ELSE_5	FUNCTION_388
0x4003be3	      0xe800000000	                          call 0x4003be8	     13994	intel_display.c	ELSE_5	FUNCTION_388	IF_1	IF_2	CALL_7
0x4003be8	            0xeb70	                           jmp 0x4003c5a	     13995	intel_display.c	ELSE_5	FUNCTION_388	IF_1	IF_2
0x4003bea	        0x4183fe01	                             cmp r14d, 1	     13998	intel_display.c	ELSE_5	FUNCTION_388	ELSE_1	IF_3
0x4003bee	     0xf8457010000	                            je 0x4003d4b	     13998	intel_display.c	ELSE_5	FUNCTION_388	ELSE_1	IF_3
0x4003bf4	        0x4183fe02	                             cmp r14d, 2	     14000	intel_display.c	ELSE_5	FUNCTION_388	ELSE_1	ELSE_2	IF_4
0x4003bf8	     0xf84f0030000	                            je 0x4003fee	     14000	intel_display.c	ELSE_5	FUNCTION_388	ELSE_1	ELSE_2	IF_4
0x4003bfe	        0x488b5548	            mov rdx, qword [rbp + 0x48] 	     14000	intel_display.c	ELSE_5	FUNCTION_388	ELSE_1	ELSE_2	IF_4
0x4003c02	    0x48b803000000	          movabs rax, 0x100000000000003 	     14007	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1
0x4003c0c	          0x4839c2	                            cmp rdx, rax	     14007	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1
0x4003c0f	     0xf878b000000	                            ja 0x4003ca0	     14007	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1
0x4003c15	    0x48b802000000	          movabs rax, 0x100000000000002 	     14007	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1
0x4003c1f	          0x4839c2	                            cmp rdx, rax	     14007	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1
0x4003c22	     0xf83a9000000	                           jae 0x4003cd1	     14007	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1
0x4003c28	          0x4885d2	                           test rdx, rdx	     14007	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1
0x4003c2b	     0xf84c8010000	                            je 0x4003df9	     14007	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1
0x4003c31	    0x48b801000000	          movabs rax, 0x100000000000001 	     14007	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1
0x4003c3b	          0x4839c2	                            cmp rdx, rax	     14007	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1
0x4003c3e	     0xf84b5010000	                            je 0x4003df9	     14007	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1
0x4003c44	    0x48c7c6000000	                              mov rsi, 0	     14032	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1	CALL_12
0x4003c4b	      0xbf04000000	                              mov edi, 4	     14032	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1	CALL_12
0x4003c50	      0xbdeaffffff	                     mov ebp, 0xffffffea	     13978	intel_display.c	ELSE_5	FUNCTION_388
0x4003c55	      0xe800000000	                          call 0x4003c5a	     14032	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1	CALL_12
0x4003c5a	    0x488bbb400200	           mov rdi, qword [rbx + 0x240] 	       166	reservation.h	FUNCTION_605	CALL_1
0x4003c61	            0x31f6	                            xor esi, esi	       166	reservation.h	FUNCTION_605	CALL_1
0x4003c63	      0xe800000000	                          call 0x4003c68	       166	reservation.h	FUNCTION_605	CALL_1
0x4003c68	    0x83ab48020000	              sub dword [rbx + 0x248], 1	     14174	intel_display.c	ELSE_5	FUNCTION_388
0x4003c6f	    0x488bbb400200	           mov rdi, qword [rbx + 0x240] 	       221	reservation.h	FUNCTION_608	CALL_1
0x4003c76	      0xe800000000	                          call 0x4003c7b	       221	reservation.h	FUNCTION_608	CALL_1
0x4003c7b	            0x89e8	                            mov eax, ebp	     14176	intel_display.c	ELSE_5	FUNCTION_388
0x4003c7d	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	     14177	intel_display.c	ELSE_5	FUNCTION_388
0x4003c82	    0x6548330c2528	                xor rcx, qword gs:[0x28]	     14177	intel_display.c	ELSE_5	FUNCTION_388
0x4003c8b	     0xf85ea080000	                           jne 0x400457b	     14177	intel_display.c	ELSE_5	FUNCTION_388
0x4003c91	        0x4883ec80	             sub rsp, 0xffffffffffffff80	     14177	intel_display.c	ELSE_5	FUNCTION_388
0x4003c95	              0x5b	                                 pop rbx	     14177	intel_display.c	ELSE_5	FUNCTION_388
0x4003c96	              0x5d	                                 pop rbp	     14177	intel_display.c	ELSE_5	FUNCTION_388
0x4003c97	            0x415c	                                 pop r12	     14177	intel_display.c	ELSE_5	FUNCTION_388
0x4003c99	            0x415d	                                 pop r13	     14177	intel_display.c	ELSE_5	FUNCTION_388
0x4003c9b	            0x415e	                                 pop r14	     14177	intel_display.c	ELSE_5	FUNCTION_388
0x4003c9d	            0x415f	                                 pop r15	     14177	intel_display.c	ELSE_5	FUNCTION_388
0x4003c9f	              0xc3	                                     ret	     14177	intel_display.c	ELSE_5	FUNCTION_388
0x4003ca0	    0x48b805000000	          movabs rax, 0x100000000000005 	     14007	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1
0x4003caa	          0x4839c2	                            cmp rdx, rax	     14007	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1
0x4003cad	            0x7795	                            ja 0x4003c44	     14007	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1
0x4003caf	          0x8b450c	              mov eax, dword [rbp + 0xc]	     14010	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1	SWITCH_2
0x4003cb2	      0x3d58423234	                     cmp eax, 0x34324258	     14010	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1	SWITCH_2
0x4003cb7	            0x7418	                            je 0x4003cd1	     14010	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1	SWITCH_2
0x4003cb9	     0xf86b3010000	                           jbe 0x4003e72	     14010	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1	SWITCH_2
0x4003cbf	      0x3d41523234	                     cmp eax, 0x34325241	     14010	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1	SWITCH_2
0x4003cc4	            0x740b	                            je 0x4003cd1	     14010	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1	SWITCH_2
0x4003cc6	      0x3d58523234	                     cmp eax, 0x34325258	     14010	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1	SWITCH_2
0x4003ccb	     0xf85ac010000	                           jne 0x4003e7d	     14010	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1	SWITCH_2
0x4003cd1	    0x410fb684245c	          movzx eax, byte [r12 + 0x65c] 	     14023	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1	IF_5	CALL_10
0x4003cda	            0x3c08	                               cmp al, 8	     14023	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1	IF_5	CALL_10
0x4003cdc	     0xf8662020000	                           jbe 0x4003f44	     14023	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1	IF_5	CALL_10
0x4003ce2	            0x3c08	                               cmp al, 8	     13944	intel_display.c	FUNCTION_387	IF_1
0x4003ce4	           0xfb6c8	                           movzx ecx, al	     13942	intel_display.c	FUNCTION_387	CALL_1
0x4003ce7	     0xf87e9000000	                            ja 0x4003dd6	     13944	intel_display.c	FUNCTION_387	IF_1
0x4003ced	          0x83f904	                              cmp ecx, 4	     13951	intel_display.c	FUNCTION_387	ELSE_1	IF_2	CALL_4
0x4003cf0	     0xf86b1000000	                           jbe 0x4003da7	     13951	intel_display.c	FUNCTION_387	ELSE_1	IF_2	CALL_4
0x4003cf6	    0x41f684247806	          test byte [r12 + 0x678], 0x20 	     13951	intel_display.c	FUNCTION_387	ELSE_1	IF_2	CALL_4
0x4003cff	    0x41b800800000	                         mov r8d, 0x8000	     13952	intel_display.c	FUNCTION_387	ELSE_1	IF_2
0x4003d05	     0xf855e020000	                           jne 0x4003f69	     13951	intel_display.c	FUNCTION_387	ELSE_1	IF_2	CALL_4
0x4003d0b	          0x8b4524	            mov eax, dword [rbp + 0x24] 	     14049	intel_display.c	ELSE_5	FUNCTION_388	IF_7
0x4003d0e	          0x4439c0	                            cmp eax, r8d	     14049	intel_display.c	ELSE_5	FUNCTION_388	IF_7
0x4003d11	     0xf87ef010000	                            ja 0x4003f06	     14049	intel_display.c	ELSE_5	FUNCTION_388	IF_7
0x4003d17	          0x4489e9	                           mov ecx, r13d	       437	i915_gem_object.h	FUNCTION_714
0x4003d1a	          0x83e180	                     and ecx, 0xffffff80	       437	i915_gem_object.h	FUNCTION_714
0x4003d1d	          0x4585f6	                         test r14d, r14d	     14061	intel_display.c	ELSE_5	FUNCTION_388	IF_8
0x4003d20	     0xf8472010000	                            je 0x4003e98	     14061	intel_display.c	ELSE_5	FUNCTION_388	IF_8
0x4003d26	            0x39c1	                            cmp ecx, eax	     14061	intel_display.c	ELSE_5	FUNCTION_388	IF_8
0x4003d28	     0xf846a010000	                            je 0x4003e98	     14061	intel_display.c	ELSE_5	FUNCTION_388	IF_8
0x4003d2e	            0x89c2	                            mov edx, eax	     14062	intel_display.c	ELSE_5	FUNCTION_388	IF_8	CALL_18
0x4003d30	    0x48c7c6000000	                              mov rsi, 0	     14062	intel_display.c	ELSE_5	FUNCTION_388	IF_8	CALL_18
0x4003d37	      0xbf04000000	                              mov edi, 4	     14062	intel_display.c	ELSE_5	FUNCTION_388	IF_8	CALL_18
0x4003d3c	      0xe800000000	                          call 0x4003d41	     14062	intel_display.c	ELSE_5	FUNCTION_388	IF_8	CALL_18
0x4003d41	      0xbdeaffffff	                     mov ebp, 0xffffffea	     13978	intel_display.c	ELSE_5	FUNCTION_388
0x4003d46	      0xe90fffffff	                           jmp 0x4003c5a	     14064	intel_display.c	ELSE_5	FUNCTION_388	IF_8
0x4003d4b	    0x48b801000000	          movabs rax, 0x100000000000001 	     13999	intel_display.c	ELSE_5	FUNCTION_388	ELSE_1	IF_3
0x4003d55	    0x48ba01000000	          movabs rdx, 0x100000000000001 	     14007	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1
0x4003d5f	        0x48894548	            mov qword [rbp + 0x48], rax 	     13999	intel_display.c	ELSE_5	FUNCTION_388	ELSE_1	IF_3
0x4003d63	    0x410fb684245c	          movzx eax, byte [r12 + 0x65c] 	     13999	intel_display.c	ELSE_5	FUNCTION_388	ELSE_1	IF_3
0x4003d6c	            0x3c03	                               cmp al, 3	     14041	intel_display.c	ELSE_5	FUNCTION_388	IF_6	CALL_13
0x4003d6e	     0xf876effffff	                            ja 0x4003ce2	     14041	intel_display.c	ELSE_5	FUNCTION_388	IF_6	CALL_13
0x4003d74	    0x48ba01000000	          movabs rdx, 0x100000000000001 	      2420	intel_display.c	FUNCTION_86	SWITCH_1
0x4003d7e	      0xb901000000	                              mov ecx, 1	      2417	intel_display.c	FUNCTION_86	SWITCH_1
0x4003d83	          0x4139ce	                           cmp r14d, ecx	     14041	intel_display.c	ELSE_5	FUNCTION_388	IF_6	CALL_13
0x4003d86	     0xf84c2000000	                            je 0x4003e4e	     14041	intel_display.c	ELSE_5	FUNCTION_388	IF_6	CALL_13
0x4003d8c	    0x48c7c6000000	                              mov rsi, 0	     14043	intel_display.c	ELSE_5	FUNCTION_388	IF_6	CALL_15
0x4003d93	      0xbf04000000	                              mov edi, 4	     14043	intel_display.c	ELSE_5	FUNCTION_388	IF_6	CALL_15
0x4003d98	      0xbdeaffffff	                     mov ebp, 0xffffffea	     13978	intel_display.c	ELSE_5	FUNCTION_388
0x4003d9d	      0xe800000000	                          call 0x4003da2	     14043	intel_display.c	ELSE_5	FUNCTION_388	IF_6	CALL_15
0x4003da2	      0xe9b3feffff	                           jmp 0x4003c5a	     14044	intel_display.c	ELSE_5	FUNCTION_388	IF_6
0x4003da7	     0xf84bc010000	                            je 0x4003f69	     13953	intel_display.c	FUNCTION_387	ELSE_2	IF_3
0x4003dad	    0x48b801000000	          movabs rax, 0x100000000000001 	     13959	intel_display.c	FUNCTION_387	ELSE_3	ELSE_4	IF_5	IF_6
0x4003db7	          0x4839c2	                            cmp rdx, rax	     13959	intel_display.c	FUNCTION_387	ELSE_3	ELSE_4	IF_5	IF_6
0x4003dba	            0x740f	                            je 0x4003dcb	     13959	intel_display.c	FUNCTION_387	ELSE_3	ELSE_4	IF_5	IF_6
0x4003dbc	          0x83f903	                              cmp ecx, 3	     13959	intel_display.c	FUNCTION_387	ELSE_3	ELSE_4	IF_5	IF_6
0x4003dbf	    0x41b800400000	                         mov r8d, 0x4000	     13962	intel_display.c	FUNCTION_387	ELSE_3	ELSE_4	IF_5	ELSE_5
0x4003dc5	     0xf8440ffffff	                            je 0x4003d0b	     13959	intel_display.c	FUNCTION_387	ELSE_3	ELSE_4	IF_5	IF_6
0x4003dcb	    0x41b800200000	                         mov r8d, 0x2000	     13960	intel_display.c	FUNCTION_387	ELSE_3	ELSE_4	IF_5	IF_6
0x4003dd1	      0xe935ffffff	                           jmp 0x4003d0b	     13960	intel_display.c	FUNCTION_387	ELSE_3	ELSE_4	IF_5	IF_6
0x4003dd6	          0x8b7d0c	              mov edi, dword [rbp + 0xc]	     13945	intel_display.c	FUNCTION_387	IF_1	CALL_2
0x4003dd9	            0x31f6	                            xor esi, esi	     13945	intel_display.c	FUNCTION_387	IF_1	CALL_2
0x4003ddb	      0xe800000000	                          call 0x4003de0	     13945	intel_display.c	FUNCTION_387	IF_1	CALL_2
0x4003de0	          0xc1e00d	                            shl eax, 0xd	     13950	intel_display.c	FUNCTION_387	IF_1	CALL_3
0x4003de3	          0x4189c0	                            mov r8d, eax	     13950	intel_display.c	FUNCTION_387	IF_1	CALL_3
0x4003de6	      0x3d00800000	                         cmp eax, 0x8000	     13950	intel_display.c	FUNCTION_387	IF_1	CALL_3
0x4003deb	      0xb800800000	                         mov eax, 0x8000	     13950	intel_display.c	FUNCTION_387	IF_1	CALL_3
0x4003df0	        0x440f4fc0	                          cmovg r8d, eax	     13950	intel_display.c	FUNCTION_387	IF_1	CALL_3
0x4003df4	      0xe912ffffff	                           jmp 0x4003d0b	     13950	intel_display.c	FUNCTION_387	IF_1	CALL_3
0x4003df9	    0x410fb684245c	          movzx eax, byte [r12 + 0x65c] 	     13950	intel_display.c	FUNCTION_387	IF_1	CALL_3
0x4003e02	            0x3c03	                               cmp al, 3	     14041	intel_display.c	ELSE_5	FUNCTION_388	IF_6	CALL_13
0x4003e04	     0xf87d8feffff	                            ja 0x4003ce2	     14041	intel_display.c	ELSE_5	FUNCTION_388	IF_6	CALL_13
0x4003e0a	    0x48b902000000	          movabs rcx, 0x100000000000002 	      2415	intel_display.c	FUNCTION_86	SWITCH_1
0x4003e14	          0x4839ca	                            cmp rdx, rcx	      2415	intel_display.c	FUNCTION_86	SWITCH_1
0x4003e17	     0xf841d010000	                            je 0x4003f3a	      2415	intel_display.c	FUNCTION_86	SWITCH_1
0x4003e1d	    0x48b904000000	          movabs rcx, 0x100000000000004 	      2415	intel_display.c	FUNCTION_86	SWITCH_1
0x4003e27	          0x4839ca	                            cmp rdx, rcx	      2415	intel_display.c	FUNCTION_86	SWITCH_1
0x4003e2a	     0xf840a010000	                            je 0x4003f3a	      2415	intel_display.c	FUNCTION_86	SWITCH_1
0x4003e30	    0x48b901000000	          movabs rcx, 0x100000000000001 	      2415	intel_display.c	FUNCTION_86	SWITCH_1
0x4003e3a	          0x4839ca	                            cmp rdx, rcx	      2415	intel_display.c	FUNCTION_86	SWITCH_1
0x4003e3d	     0xf8431ffffff	                            je 0x4003d74	      2415	intel_display.c	FUNCTION_86	SWITCH_1
0x4003e43	            0x31c9	                            xor ecx, ecx	      2422	intel_display.c	FUNCTION_86	SWITCH_1
0x4003e45	          0x4139ce	                           cmp r14d, ecx	     14041	intel_display.c	ELSE_5	FUNCTION_388	IF_6	CALL_13
0x4003e48	     0xf853effffff	                           jne 0x4003d8c	     14041	intel_display.c	ELSE_5	FUNCTION_388	IF_6	CALL_13
0x4003e4e	           0xfb6c8	                           movzx ecx, al	     13942	intel_display.c	FUNCTION_387	CALL_1
0x4003e51	          0x83f904	                              cmp ecx, 4	     13951	intel_display.c	FUNCTION_387	ELSE_1	IF_2	CALL_4
0x4003e54	     0xf864dffffff	                           jbe 0x4003da7	     13951	intel_display.c	FUNCTION_387	ELSE_1	IF_2	CALL_4
0x4003e5a	      0xe997feffff	                           jmp 0x4003cf6	     13951	intel_display.c	FUNCTION_387	ELSE_1	IF_2	CALL_4
0x4003e5f	      0xb802000000	                              mov eax, 2	      2420	intel_display.c	FUNCTION_86	SWITCH_1
0x4003e64	          0x4139c6	                           cmp r14d, eax	     13992	intel_display.c	ELSE_5	FUNCTION_388	IF_1	IF_2
0x4003e67	     0xf8495fdffff	                            je 0x4003c02	     13992	intel_display.c	ELSE_5	FUNCTION_388	IF_1	IF_2
0x4003e6d	      0xe960fdffff	                           jmp 0x4003bd2	     13992	intel_display.c	ELSE_5	FUNCTION_388	IF_1	IF_2
0x4003e72	      0x3d41423234	                     cmp eax, 0x34324241	     14010	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1	SWITCH_2
0x4003e77	     0xf8454feffff	                            je 0x4003cd1	     14010	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1	SWITCH_2
0x4003e7d	    0x48c7c6000000	                              mov rsi, 0	     14017	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1	SWITCH_2	CALL_9
0x4003e84	      0xbf04000000	                              mov edi, 4	     14017	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1	SWITCH_2	CALL_9
0x4003e89	      0xbdeaffffff	                     mov ebp, 0xffffffea	     13978	intel_display.c	ELSE_5	FUNCTION_388
0x4003e8e	      0xe800000000	                          call 0x4003e93	     14017	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1	SWITCH_2	CALL_9
0x4003e93	      0xe9c2fdffff	                           jmp 0x4003c5a	     14018	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1	SWITCH_2
0x4003e98	          0x8b7d0c	              mov edi, dword [rbp + 0xc]	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4003e9b	    0x81ff41523234	                     cmp edi, 0x34325241	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4003ea1	     0xf8430010000	                            je 0x4003fd7	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4003ea7	     0xf878d010000	                            ja 0x400403a	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4003ead	    0x81ff58423330	                     cmp edi, 0x30334258	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4003eb3	     0xf846b020000	                            je 0x4004124	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4003eb9	     0xf864a010000	                           jbe 0x4004009	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4003ebf	    0x81ff41423234	                     cmp edi, 0x34324241	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4003ec5	     0xf846d020000	                            je 0x4004138	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4003ecb	    0x81ff58423234	                     cmp edi, 0x34324258	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4003ed1	     0xf844d020000	                            je 0x4004124	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4003ed7	    0x81ff58523330	                     cmp edi, 0x30335258	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4003edd	     0xf8441020000	                            je 0x4004124	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4003ee3	      0x488d742458	                   lea rsi, [rsp + 0x58]	     14116	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	CALL_38
0x4003ee8	      0xe800000000	                          call 0x4003eed	     14084	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_10	CALL_25
0x4003eed	    0x48c7c6000000	                              mov rsi, 0	     14084	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_10	CALL_25
0x4003ef4	          0x4889c2	                            mov rdx, rax	     14084	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_10	CALL_25
0x4003ef7	      0xbf04000000	                              mov edi, 4	     14084	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_10	CALL_25
0x4003efc	      0xe800000000	                          call 0x4003f01	     14084	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_10	CALL_25
0x4003f01	      0xe9de000000	                           jmp 0x4003fe4	     14084	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_10	CALL_25
0x4003f06	      0x48837d4800	               cmp qword [rbp + 0x48], 0	     14050	intel_display.c	ELSE_5	FUNCTION_388	IF_7	CALL_17
0x4003f0b	    0x48c7c1000000	                              mov rcx, 0	     14050	intel_display.c	ELSE_5	FUNCTION_388	IF_7	CALL_17
0x4003f12	    0x48c7c2000000	                              mov rdx, 0	     14050	intel_display.c	ELSE_5	FUNCTION_388	IF_7	CALL_17
0x4003f19	        0x480f45d1	                         cmovne rdx, rcx	     14050	intel_display.c	ELSE_5	FUNCTION_388	IF_7	CALL_17
0x4003f1d	            0x89c1	                            mov ecx, eax	     14050	intel_display.c	ELSE_5	FUNCTION_388	IF_7	CALL_17
0x4003f1f	    0x48c7c6000000	                              mov rsi, 0	     14050	intel_display.c	ELSE_5	FUNCTION_388	IF_7	CALL_17
0x4003f26	      0xbf04000000	                              mov edi, 4	     14050	intel_display.c	ELSE_5	FUNCTION_388	IF_7	CALL_17
0x4003f2b	      0xe800000000	                          call 0x4003f30	     14050	intel_display.c	ELSE_5	FUNCTION_388	IF_7	CALL_17
0x4003f30	      0xbdeaffffff	                     mov ebp, 0xffffffea	     13978	intel_display.c	ELSE_5	FUNCTION_388
0x4003f35	      0xe920fdffff	                           jmp 0x4003c5a	     14054	intel_display.c	ELSE_5	FUNCTION_388	IF_7
0x4003f3a	      0xb902000000	                              mov ecx, 2	      2420	intel_display.c	FUNCTION_86	SWITCH_1
0x4003f3f	      0xe93ffeffff	                           jmp 0x4003d83	      2420	intel_display.c	FUNCTION_86	SWITCH_1
0x4003f44	    0x48c7c6000000	                              mov rsi, 0	     14024	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1	IF_5	CALL_11
0x4003f4b	      0xbf04000000	                              mov edi, 4	     14024	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1	IF_5	CALL_11
0x4003f50	      0xbdeaffffff	                     mov ebp, 0xffffffea	     13978	intel_display.c	ELSE_5	FUNCTION_388
0x4003f55	      0xe800000000	                          call 0x4003f5a	     14024	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1	IF_5	CALL_11
0x4003f5a	      0xe9fbfcffff	                           jmp 0x4003c5a	     14026	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_1	IF_5
0x4003f5f	      0xb801000000	                              mov eax, 1	      2417	intel_display.c	FUNCTION_86	SWITCH_1
0x4003f64	      0xe9fbfeffff	                           jmp 0x4003e64	      2417	intel_display.c	FUNCTION_86	SWITCH_1
0x4003f69	    0x48b801000000	          movabs rax, 0x100000000000001 	     13954	intel_display.c	FUNCTION_387	ELSE_2	IF_3	IF_4
0x4003f73	    0x41b800800000	                         mov r8d, 0x8000	     13952	intel_display.c	FUNCTION_387	ELSE_1	IF_2
0x4003f79	          0x4839c2	                            cmp rdx, rax	     13954	intel_display.c	FUNCTION_387	ELSE_2	IF_3	IF_4
0x4003f7c	     0xf8589fdffff	                           jne 0x4003d0b	     13954	intel_display.c	FUNCTION_387	ELSE_2	IF_3	IF_4
0x4003f82	          0x8b4524	            mov eax, dword [rbp + 0x24] 	     14049	intel_display.c	ELSE_5	FUNCTION_388	IF_7
0x4003f85	    0x41b800400000	                         mov r8d, 0x4000	     13955	intel_display.c	FUNCTION_387	ELSE_2	IF_3	IF_4
0x4003f8b	    0x48c7c2000000	                              mov rdx, 0	     14050	intel_display.c	ELSE_5	FUNCTION_388	IF_7	CALL_17
0x4003f92	      0x3d00400000	                         cmp eax, 0x4000	     14049	intel_display.c	ELSE_5	FUNCTION_388	IF_7
0x4003f97	            0x7784	                            ja 0x4003f1d	     14049	intel_display.c	ELSE_5	FUNCTION_388	IF_7
0x4003f99	      0xe979fdffff	                           jmp 0x4003d17	     14049	intel_display.c	ELSE_5	FUNCTION_388	IF_7
0x4003f9e	    0x81ff56595559	                     cmp edi, 0x59555956	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4003fa4	            0x7414	                            je 0x4003fba	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4003fa6	    0x81ff55595659	                     cmp edi, 0x59565955	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4003fac	            0x740c	                            je 0x4003fba	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4003fae	    0x81ff59555956	                     cmp edi, 0x56595559	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4003fb4	     0xf8529ffffff	                           jne 0x4003ee3	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4003fba	    0x4180bc245c06	               cmp byte [r12 + 0x65c], 4	     14109	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_13	CALL_35
0x4003fc3	            0x7712	                            ja 0x4003fd7	     14109	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_13	CALL_35
0x4003fc5	    0x41f784246406	       test dword [r12 + 0x664], 0x6000 	     14109	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_13	CALL_35
0x4003fd1	     0xf840cffffff	                            je 0x4003ee3	     14109	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_13	CALL_35
0x4003fd7	        0x448b4534	            mov r8d, dword [rbp + 0x34] 	     14122	intel_display.c	ELSE_5	FUNCTION_388	IF_14
0x4003fdb	          0x4585c0	                           test r8d, r8d	     14122	intel_display.c	ELSE_5	FUNCTION_388	IF_14
0x4003fde	     0xf8492000000	                            je 0x4004076	     14122	intel_display.c	ELSE_5	FUNCTION_388	IF_14
0x4003fe4	      0xbdeaffffff	                     mov ebp, 0xffffffea	     13978	intel_display.c	ELSE_5	FUNCTION_388
0x4003fe9	      0xe96cfcffff	                           jmp 0x4003c5a	     14086	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_10
0x4003fee	    0x48c7c6000000	                              mov rsi, 0	     14001	intel_display.c	ELSE_5	FUNCTION_388	ELSE_1	ELSE_2	IF_4	CALL_8
0x4003ff5	      0xbf04000000	                              mov edi, 4	     14001	intel_display.c	ELSE_5	FUNCTION_388	ELSE_1	ELSE_2	IF_4	CALL_8
0x4003ffa	      0xbdeaffffff	                     mov ebp, 0xffffffea	     13978	intel_display.c	ELSE_5	FUNCTION_388
0x4003fff	      0xe800000000	                          call 0x4004004	     14001	intel_display.c	ELSE_5	FUNCTION_388	ELSE_1	ELSE_2	IF_4	CALL_8
0x4004004	      0xe951fcffff	                           jmp 0x4003c5a	     14002	intel_display.c	ELSE_5	FUNCTION_388	ELSE_1	ELSE_2	IF_4
0x4004009	    0x81ff43382020	                     cmp edi, 0x20203843	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x400400f	            0x74c6	                            je 0x4003fd7	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4004011	    0x81ff41423330	                     cmp edi, 0x30334241	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4004017	     0xf85c6feffff	                           jne 0x4003ee3	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x400401d	    0x41f784246406	     test dword [r12 + 0x664], 0x240000 	     14099	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_12	CALL_31
0x4004029	      0x488d742458	                   lea rsi, [rsp + 0x58]	     14100	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_12	CALL_32
0x400402e	      0xbf41423330	                     mov edi, 0x30334241	     14100	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_12	CALL_32
0x4004033	            0x75a2	                           jne 0x4003fd7	     14099	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_12	CALL_31
0x4004035	      0xe9aefeffff	                           jmp 0x4003ee8	     14099	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_12	CALL_31
0x400403a	    0x81ff59565955	                     cmp edi, 0x55595659	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4004040	     0xf8474ffffff	                            je 0x4003fba	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4004046	     0xf8752ffffff	                            ja 0x4003f9e	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x400404c	    0x81ff58523135	                     cmp edi, 0x35315258	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4004052	     0xf8510010000	                           jne 0x4004168	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4004058	    0x4180bc245c06	               cmp byte [r12 + 0x65c], 3	     14075	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_9	CALL_19
0x4004061	      0x488d742458	                   lea rsi, [rsp + 0x58]	     14076	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_9	CALL_20
0x4004066	      0xbf58523135	                     mov edi, 0x35315258	     14076	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_9	CALL_20
0x400406b	     0xf8666ffffff	                           jbe 0x4003fd7	     14075	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_9	CALL_19
0x4004071	      0xe972feffff	                           jmp 0x4003ee8	     14075	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_9	CALL_19
0x4004076	          0x4889ea	                            mov rdx, rbp	     14125	intel_display.c	ELSE_5	FUNCTION_388	CALL_40
0x4004079	          0x4c89fe	                            mov rsi, r15	     14125	intel_display.c	ELSE_5	FUNCTION_388	CALL_40
0x400407c	          0x4c89e7	                            mov rdi, r12	     14125	intel_display.c	ELSE_5	FUNCTION_388	CALL_40
0x400407f	      0xe800000000	                          call 0x4004084	     14125	intel_display.c	ELSE_5	FUNCTION_388	CALL_40
0x4004084	        0x498b4748	            mov rax, qword [r15 + 0x48] 	     14127	intel_display.c	ELSE_5	FUNCTION_388	FOR_1
0x4004088	          0x4531ed	                          xor r13d, r13d	     14127	intel_display.c	ELSE_5	FUNCTION_388	FOR_1
0x400408b	        0x80780500	                   cmp byte [rax + 5], 0	     14127	intel_display.c	ELSE_5	FUNCTION_388	FOR_1
0x400408f	            0x7574	                           jne 0x4004105	     14127	intel_display.c	ELSE_5	FUNCTION_388	FOR_1
0x4004091	      0xe9ef000000	                           jmp 0x4004185	     14127	intel_display.c	ELSE_5	FUNCTION_388	FOR_1
0x4004096	    0x41f684245b06	              test byte [r12 + 0x65b], 1	     14146	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_16	CALL_43
0x400409f	            0x742e	                            je 0x40040cf	     14146	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_16	CALL_43
0x40040a1	          0x4585f6	                         test r14d, r14d	     14146	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_16	CALL_43
0x40040a4	            0x7529	                           jne 0x40040cf	     14146	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_16	CALL_43
0x40040a6	    0x4181bf800000	          cmp dword [r15 + 0x80], 0xf00 	     14146	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_16	CALL_43
0x40040b1	            0x761c	                           jbe 0x40040cf	     14146	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_16	CALL_43
0x40040b3	    0x48b9fcffffff	          movabs rcx, 0xfefffffffffffffc	     14146	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_16	CALL_43
0x40040bd	        0x49034f78	             add rcx, qword [r15 + 0x78]	     14146	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_16	CALL_43
0x40040c1	    0x8d1485000000	                        lea edx, [rax*4]	     14149	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_16
0x40040c8	        0x4883f901	                              cmp rcx, 1	     14149	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_16
0x40040cc	           0xf46c2	                         cmovbe eax, edx	     14149	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_16
0x40040cf	      0x438b4caf58	    mov ecx, dword [r15 + r13*4 + 0x58] 	     14151	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_17
0x40040d4	          0x8d50ff	                      lea edx, [rax - 1]	     14151	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_17
0x40040d7	            0x85ca	                           test edx, ecx	     14151	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_17
0x40040d9	     0xf85ec030000	                           jne 0x40044cb	     14151	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_17
0x40040df	        0x498b4748	            mov rax, qword [r15 + 0x48] 	     14127	intel_display.c	ELSE_5	FUNCTION_388	FOR_1
0x40040e3	        0x418d5501	                      lea edx, [r13 + 1]	     14127	intel_display.c	ELSE_5	FUNCTION_388	FOR_1
0x40040e7	         0xfb64805	               movzx ecx, byte [rax + 5]	     14127	intel_display.c	ELSE_5	FUNCTION_388	FOR_1
0x40040eb	            0x39d1	                            cmp ecx, edx	     14127	intel_display.c	ELSE_5	FUNCTION_388	FOR_1
0x40040ed	     0xf8e92000000	                           jle 0x4004185	     14127	intel_display.c	ELSE_5	FUNCTION_388	FOR_1
0x40040f3	      0x428b44ad18	    mov eax, dword [rbp + r13*4 + 0x18] 	     14130	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_15
0x40040f8	        0x4983c501	                              add r13, 1	     14130	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_15
0x40040fc	          0x3b4514	            cmp eax, dword [rbp + 0x14] 	     14130	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_15
0x40040ff	     0xf85ab030000	                           jne 0x40044b0	     14130	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_15
0x4004105	      0x49837f7800	               cmp qword [r15 + 0x78], 0	      3387	intel_display.c	FUNCTION_107	IF_1
0x400410a	          0x4589ee	                          mov r14d, r13d	      3387	intel_display.c	FUNCTION_107	IF_1
0x400410d	      0xb840000000	                           mov eax, 0x40	      3388	intel_display.c	FUNCTION_107	IF_1
0x4004112	            0x7482	                            je 0x4004096	      3387	intel_display.c	FUNCTION_107	IF_1
0x4004114	          0x4489ee	                           mov esi, r13d	      3390	intel_display.c	FUNCTION_107	CALL_1
0x4004117	          0x4c89ff	                            mov rdi, r15	      3390	intel_display.c	FUNCTION_107	CALL_1
0x400411a	      0xe881d6ffff	         call sym.intel_tile_width_bytes	      3390	intel_display.c	FUNCTION_107	CALL_1
0x400411f	      0xe972ffffff	                           jmp 0x4004096	      3390	intel_display.c	FUNCTION_107	CALL_1
0x4004124	    0x4180bc245c06	               cmp byte [r12 + 0x65c], 3	     14092	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_11	CALL_27
0x400412d	     0xf87a4feffff	                            ja 0x4003fd7	     14092	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_11	CALL_27
0x4004133	      0xe9abfdffff	                           jmp 0x4003ee3	     14092	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_11	CALL_27
0x4004138	    0x41f784246406	     test dword [r12 + 0x664], 0x240000 	     14082	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_10	CALL_23
0x4004144	     0xf858dfeffff	                           jne 0x4003fd7	     14082	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_10	CALL_23
0x400414a	    0x4180bc245c06	               cmp byte [r12 + 0x65c], 8	     14082	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_10	CALL_23
0x4004153	     0xf877efeffff	                            ja 0x4003fd7	     14082	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_10	CALL_23
0x4004159	      0x488d742458	                   lea rsi, [rsp + 0x58]	     14084	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_10	CALL_25
0x400415e	      0xbf41423234	                     mov edi, 0x34324241	     14084	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_10	CALL_25
0x4004163	      0xe980fdffff	                           jmp 0x4003ee8	     14084	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3	IF_10	CALL_25
0x4004168	    0x81ff52473136	                     cmp edi, 0x36314752	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x400416e	     0xf8463feffff	                            je 0x4003fd7	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4004174	    0x81ff58523234	                     cmp edi, 0x34325258	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x400417a	     0xf8563fdffff	                           jne 0x4003ee3	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4004180	      0xe952feffff	                           jmp 0x4003fd7	     14068	intel_display.c	ELSE_5	FUNCTION_388	SWITCH_3
0x4004185	    0x49899fc80000	             mov qword [r15 + 0xc8], rbx	     14158	intel_display.c	ELSE_5	FUNCTION_388
0x400418c	    0x410fb78c245a	          movzx ecx, word [r12 + 0x65a] 	      1913	intel_display.c	FUNCTION_64	CALL_1
0x4004195	         0xfb65005	               movzx edx, byte [rax + 5]	      2483	intel_display.c	FUNCTION_89
0x4004199	          0x83e102	                              and ecx, 2	      1913	intel_display.c	FUNCTION_64	CALL_1
0x400419c	        0x6683f901	                               cmp cx, 1	      1913	intel_display.c	FUNCTION_64	CALL_1
0x40041a0	            0x19f6	                            sbb esi, esi	      1913	intel_display.c	FUNCTION_64	CALL_1
0x40041a2	    0x81e600080000	                          and esi, 0x800	      1913	intel_display.c	FUNCTION_64	CALL_1
0x40041a8	    0x81c600080000	                          add esi, 0x800	      1913	intel_display.c	FUNCTION_64	CALL_1
0x40041ae	            0x84d2	                             test dl, dl	      2486	intel_display.c	FUNCTION_89	FOR_1
0x40041b0	          0x893424	                    mov dword [rsp], esi	      1913	intel_display.c	FUNCTION_64	CALL_1
0x40041b3	     0xf8454030000	                            je 0x400450d	      2486	intel_display.c	FUNCTION_89	FOR_1
0x40041b9	          0x83ea01	                              sub edx, 1	      2486	intel_display.c	FUNCTION_89	FOR_1
0x40041bc	    0x498db7d00000	                   lea rsi, [r15 + 0xd0]	      2486	intel_display.c	FUNCTION_89	FOR_1
0x40041c3	    0x498d8f080100	                  lea rcx, [r15 + 0x108]	      2486	intel_display.c	FUNCTION_89	FOR_1
0x40041ca	        0x488d1452	                  lea rdx, [rdx + rdx*2]	      2486	intel_display.c	FUNCTION_89	FOR_1
0x40041ce	        0x498d7f58	                   lea rdi, [r15 + 0x58]	      2486	intel_display.c	FUNCTION_89	FOR_1
0x40041d2	    0x4d8d9ff00000	                   lea r11, [r15 + 0xf0]	      2486	intel_display.c	FUNCTION_89	FOR_1
0x40041d9	      0x4c89642410	             mov qword [rsp + 0x10], r12	      2512	intel_display.c	FUNCTION_89	FOR_1	IF_2	CALL_7
0x40041de	      0x48895c2428	             mov qword [rsp + 0x28], rbx	      2512	intel_display.c	FUNCTION_89	FOR_1	IF_2	CALL_7
0x40041e3	          0x4531ed	                          xor r13d, r13d	      2486	intel_display.c	FUNCTION_89	FOR_1
0x40041e6	    0x498d94971401	         lea rdx, [r15 + rdx*4 + 0x114] 	      2486	intel_display.c	FUNCTION_89	FOR_1
0x40041ee	    0xc74424040000	                  mov dword [rsp + 4], 0	      2486	intel_display.c	FUNCTION_89	FOR_1
0x40041f6	    0xc74424240000	               mov dword [rsp + 0x24], 0	      2486	intel_display.c	FUNCTION_89	FOR_1
0x40041fe	          0x4d89de	                            mov r14, r11	      2512	intel_display.c	FUNCTION_89	FOR_1	IF_2	CALL_7
0x4004201	          0x4889f5	                            mov rbp, rsi	      2512	intel_display.c	FUNCTION_89	FOR_1	IF_2	CALL_7
0x4004204	          0x4989cc	                            mov r12, rcx	      2512	intel_display.c	FUNCTION_89	FOR_1	IF_2	CALL_7
0x4004207	      0x4889542418	             mov qword [rsp + 0x18], rdx	      2512	intel_display.c	FUNCTION_89	FOR_1	IF_2	CALL_7
0x400420c	          0x4889fb	                            mov rbx, rdi	      2512	intel_display.c	FUNCTION_89	FOR_1	IF_2	CALL_7
0x400420f	            0xeb5c	                           jmp 0x400426d	      2512	intel_display.c	FUNCTION_89	FOR_1	IF_2	CALL_7
0x4004211	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      2622	intel_display.c	FUNCTION_89	FOR_1	ELSE_1	CALL_19
0x4004215	         0x344243c	             add eax, dword [rsp + 0x3c]	      2622	intel_display.c	FUNCTION_89	FOR_1	ELSE_1	CALL_19
0x4004219	            0x31d2	                            xor edx, edx	      2622	intel_display.c	FUNCTION_89	FOR_1	ELSE_1	CALL_19
0x400421b	           0xfaf03	                   imul eax, dword [rbx]	      2622	intel_display.c	FUNCTION_89	FOR_1	ELSE_1	CALL_19
0x400421e	          0x8b0c24	                    mov ecx, dword [rsp]	      2622	intel_display.c	FUNCTION_89	FOR_1	ELSE_1	CALL_19
0x4004221	      0x448d5401ff	               lea r10d, [rcx + rax - 1]	      2622	intel_display.c	FUNCTION_89	FOR_1	ELSE_1	CALL_19
0x4004226	        0x8b442408	                mov eax, dword [rsp + 8]	      2622	intel_display.c	FUNCTION_89	FOR_1	ELSE_1	CALL_19
0x400422a	       0xfaf442438	            imul eax, dword [rsp + 0x38]	      2622	intel_display.c	FUNCTION_89	FOR_1	ELSE_1	CALL_19
0x400422f	          0x4401d0	                           add eax, r10d	      2622	intel_display.c	FUNCTION_89	FOR_1	ELSE_1	CALL_19
0x4004232	            0xf7f1	                                 div ecx	      2622	intel_display.c	FUNCTION_89	FOR_1	ELSE_1	CALL_19
0x4004234	          0x4189c2	                           mov r10d, eax	      2622	intel_display.c	FUNCTION_89	FOR_1	ELSE_1	CALL_19
0x4004237	        0x8b442404	                mov eax, dword [rsp + 4]	      2627	intel_display.c	FUNCTION_89	FOR_1	CALL_20
0x400423b	          0x4501da	                          add r10d, r11d	      2627	intel_display.c	FUNCTION_89	FOR_1	CALL_20
0x400423e	          0x4439d0	                           cmp eax, r10d	      2627	intel_display.c	FUNCTION_89	FOR_1	CALL_20
0x4004241	        0x440f43d0	                        cmovae r10d, eax	      2627	intel_display.c	FUNCTION_89	FOR_1	CALL_20
0x4004245	        0x4183c501	                             add r13d, 1	      2486	intel_display.c	FUNCTION_89	FOR_1
0x4004249	        0x4883c510	                           add rbp, 0x10	      2486	intel_display.c	FUNCTION_89	FOR_1
0x400424d	        0x4983c40c	                            add r12, 0xc	      2486	intel_display.c	FUNCTION_89	FOR_1
0x4004251	        0x4883c304	                              add rbx, 4	      2486	intel_display.c	FUNCTION_89	FOR_1
0x4004255	        0x4983c608	                              add r14, 8	      2486	intel_display.c	FUNCTION_89	FOR_1
0x4004259	      0x4c39642418	            cmp qword [rsp + 0x18], r12 	      2486	intel_display.c	FUNCTION_89	FOR_1
0x400425e	      0x4489542404	               mov dword [rsp + 4], r10d	      2627	intel_display.c	FUNCTION_89	FOR_1	CALL_20
0x4004263	     0xf84d5020000	                            je 0x400453e	      2486	intel_display.c	FUNCTION_89	FOR_1
0x4004269	        0x498b4748	            mov rax, qword [r15 + 0x48] 	      2486	intel_display.c	FUNCTION_89	FOR_1
0x400426d	          0x4963d5	                        movsxd rdx, r13d	      2493	intel_display.c	FUNCTION_89	FOR_1
0x4004270	    0x418bbf800000	            mov edi, dword [r15 + 0x80] 	      2494	intel_display.c	FUNCTION_89	FOR_1	CALL_3
0x4004277	          0x4c89fe	                            mov rsi, r15	      2494	intel_display.c	FUNCTION_89	FOR_1	CALL_3
0x400427a	       0xfb6441006	        movzx eax, byte [rax + rdx + 6] 	      2493	intel_display.c	FUNCTION_89	FOR_1
0x400427f	          0x4489ea	                           mov edx, r13d	      2494	intel_display.c	FUNCTION_89	FOR_1	CALL_3
0x4004282	        0x89442408	                mov dword [rsp + 8], eax	      2493	intel_display.c	FUNCTION_89	FOR_1
0x4004286	      0xe800000000	                          call 0x400428b	      2494	intel_display.c	FUNCTION_89	FOR_1	CALL_3
0x400428b	    0x418bbf840000	            mov edi, dword [r15 + 0x84] 	      2495	intel_display.c	FUNCTION_89	FOR_1	CALL_4
0x4004292	          0x4489ea	                           mov edx, r13d	      2495	intel_display.c	FUNCTION_89	FOR_1	CALL_4
0x4004295	          0x4c89fe	                            mov rsi, r15	      2495	intel_display.c	FUNCTION_89	FOR_1	CALL_4
0x4004298	        0x89442420	             mov dword [rsp + 0x20], eax	      2494	intel_display.c	FUNCTION_89	FOR_1	CALL_3
0x400429c	      0xe800000000	                          call 0x40042a1	      2495	intel_display.c	FUNCTION_89	FOR_1	CALL_4
0x40042a1	      0x49837f7800	               cmp qword [r15 + 0x78], 0	      2399	intel_display.c	FUNCTION_85	IF_1
0x40042a6	        0x8944240c	              mov dword [rsp + 0xc], eax	      2495	intel_display.c	FUNCTION_89	FOR_1	CALL_4
0x40042aa	        0x448b4b10	            mov r9d, dword [rbx + 0x10] 	      2400	intel_display.c	FUNCTION_85	IF_1	CALL_2
0x40042ae	            0x742e	                            je 0x40042de	      2399	intel_display.c	FUNCTION_85	IF_1
0x40042b0	          0x498b07	                    mov rax, qword [r15]	      1913	intel_display.c	FUNCTION_64	CALL_1
0x40042b3	     0xfb7805a0600	          movzx eax, word [rax + 0x65a] 	      1913	intel_display.c	FUNCTION_64	CALL_1
0x40042ba	          0x83e002	                              and eax, 2	      1913	intel_display.c	FUNCTION_64	CALL_1
0x40042bd	        0x6683f801	                               cmp ax, 1	      1913	intel_display.c	FUNCTION_64	CALL_1
0x40042c1	          0x4489c8	                            mov eax, r9d	      2399	intel_display.c	FUNCTION_85	IF_1
0x40042c4	            0x19c9	                            sbb ecx, ecx	      1913	intel_display.c	FUNCTION_64	CALL_1
0x40042c6	            0x31d2	                            xor edx, edx	      2399	intel_display.c	FUNCTION_85	IF_1
0x40042c8	    0x81e100080000	                          and ecx, 0x800	      1913	intel_display.c	FUNCTION_64	CALL_1
0x40042ce	    0x81c100080000	                          add ecx, 0x800	      1913	intel_display.c	FUNCTION_64	CALL_1
0x40042d4	            0xf7f1	                                 div ecx	      2399	intel_display.c	FUNCTION_85	IF_1
0x40042d6	            0x85d2	                           test edx, edx	      2399	intel_display.c	FUNCTION_85	IF_1
0x40042d8	     0xf850e020000	                           jne 0x40044ec	      2399	intel_display.c	FUNCTION_85	IF_1
0x40042de	    0xc74424380000	               mov dword [rsp + 0x38], 0	      2403	intel_display.c	FUNCTION_85
0x40042e6	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      2404	intel_display.c	FUNCTION_85
0x40042ee	    0x41b801000000	                              mov r8d, 1	      2406	intel_display.c	FUNCTION_85	CALL_3
0x40042f4	            0x6a00	                                  push 0	      2406	intel_display.c	FUNCTION_85	CALL_3
0x40042f6	          0x4489e9	                           mov ecx, r13d	      2406	intel_display.c	FUNCTION_85	CALL_3
0x40042f9	          0x4c89fa	                            mov rdx, r15	      2406	intel_display.c	FUNCTION_85	CALL_3
0x40042fc	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      2406	intel_display.c	FUNCTION_85	CALL_3
0x4004301	      0x488d742444	                   lea rsi, [rsp + 0x44]	      2406	intel_display.c	FUNCTION_85	CALL_3
0x4004306	      0xe855daffff	      call sym._intel_adjust_tile_offset	      2406	intel_display.c	FUNCTION_85	CALL_3
0x400430b	    0x48b8fcffffff	          movabs rax, 0xfefffffffffffffc	      2505	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x4004315	        0x49034778	             add rax, qword [r15 + 0x78]	      2505	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x4004319	              0x5f	                                 pop rdi	      2505	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x400431a	        0x4883f801	                              cmp rax, 1	      2505	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x400431e	            0x770a	                            ja 0x400432a	      2505	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x4004320	        0x4183fd01	                             cmp r13d, 1	      2505	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x4004324	     0xf8488020000	                            je 0x40045b2	      2505	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x400432a	          0x4585ed	                         test r13d, r13d	      2545	intel_display.c	FUNCTION_89	FOR_1	IF_4	CALL_9
0x400432d	     0xf844d020000	                            je 0x4004580	      2545	intel_display.c	FUNCTION_89	FOR_1	IF_4	CALL_9
0x4004333	        0x8b742438	            mov esi, dword [rsp + 0x38] 	      2545	intel_display.c	FUNCTION_89	FOR_1	IF_4	CALL_9
0x4004337	        0x8b7c243c	            mov edi, dword [rsp + 0x3c] 	      2545	intel_display.c	FUNCTION_89	FOR_1	IF_4	CALL_9
0x400433b	          0x8b0424	                    mov eax, dword [rsp]	      2559	intel_display.c	FUNCTION_89	FOR_1	CALL_11
0x400433e	          0x418936	                    mov dword [r14], esi	      2556	intel_display.c	FUNCTION_89	FOR_1
0x4004341	          0x4c89f9	                            mov rcx, r15	      2559	intel_display.c	FUNCTION_89	FOR_1	CALL_11
0x4004344	        0x41897e04	                mov dword [r14 + 4], edi	      2557	intel_display.c	FUNCTION_89	FOR_1
0x4004348	          0x4589e8	                           mov r8d, r13d	      2559	intel_display.c	FUNCTION_89	FOR_1	CALL_11
0x400434b	              0x50	                                push rax	      2559	intel_display.c	FUNCTION_89	FOR_1	CALL_11
0x400434c	            0x6a01	                                  push 1	      2559	intel_display.c	FUNCTION_89	FOR_1	CALL_11
0x400434e	          0x448b0b	                    mov r9d, dword [rbx]	      2559	intel_display.c	FUNCTION_89	FOR_1	CALL_11
0x4004351	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2559	intel_display.c	FUNCTION_89	FOR_1	CALL_11
0x4004356	      0x488d54244c	                   lea rdx, [rsp + 0x4c]	      2559	intel_display.c	FUNCTION_89	FOR_1	CALL_11
0x400435b	      0x488d742448	                   lea rsi, [rsp + 0x48]	      2559	intel_display.c	FUNCTION_89	FOR_1	CALL_11
0x4004360	      0xe8cbd5ffff	     call sym._intel_compute_tile_offset	      2559	intel_display.c	FUNCTION_89	FOR_1	CALL_11
0x4004365	            0x31d2	                            xor edx, edx	      2562	intel_display.c	FUNCTION_89	FOR_1
0x4004367	        0xf7742410	                  div dword [rsp + 0x10]	      2562	intel_display.c	FUNCTION_89	FOR_1
0x400436b	      0x49837f7800	               cmp qword [r15 + 0x78], 0	      2564	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x4004370	              0x59	                                 pop rcx	      2564	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x4004371	              0x5e	                                 pop rsi	      2564	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x4004372	          0x4189c3	                           mov r11d, eax	      2562	intel_display.c	FUNCTION_89	FOR_1
0x4004375	     0xf8496feffff	                            je 0x4004211	      2564	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x400437b	      0x488d4c2444	                   lea rcx, [rsp + 0x44]	      2569	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_12
0x4004380	      0x488d542440	                   lea rdx, [rsp + 0x40]	      2569	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_12
0x4004385	          0x4489ee	                           mov esi, r13d	      2569	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_12
0x4004388	          0x4c89ff	                            mov rdi, r15	      2569	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_12
0x400438b	        0x89442430	             mov dword [rsp + 0x30], eax	      2569	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_12
0x400438f	      0xe83cd5ffff	                call sym.intel_tile_dims	      2569	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_12
0x4004394	        0x8b742440	            mov esi, dword [rsp + 0x40] 	      2572	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_13
0x4004398	      0x448b5c2430	           mov r11d, dword [rsp + 0x30] 	      2571	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x400439d	            0x31d2	                            xor edx, edx	      2572	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_13
0x400439f	      0x448b542408	               mov r10d, dword [rsp + 8]	      2572	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_13
0x40043a4	      0x448b442438	            mov r8d, dword [rsp + 0x38] 	      2573	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_14
0x40043a9	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      2573	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_14
0x40043ad	      0x448b4c240c	              mov r9d, dword [rsp + 0xc]	      2574	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_15
0x40043b2	        0x44895d0c	            mov dword [rbp + 0xc], r11d 	      2571	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x40043b6	            0x8b03	                    mov eax, dword [rbx]	      2572	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_13
0x40043b8	        0x440fafd6	                          imul r10d, esi	      2572	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_13
0x40043bc	      0x44034c243c	             add r9d, dword [rsp + 0x3c]	      2574	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_15
0x40043c1	        0x8b7c2444	            mov edi, dword [rsp + 0x44] 	      2574	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_15
0x40043c5	          0x4401c1	                            add ecx, r8d	      2573	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_14
0x40043c8	      0x4489442448	             mov dword [rsp + 0x48], r8d	      2589	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x40043cd	        0x894c2450	             mov dword [rsp + 0x50], ecx	      2591	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x40043d1	      0x418d4402ff	                lea eax, [r10 + rax - 1]	      2572	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_13
0x40043d6	      0x44894c2454	             mov dword [rsp + 0x54], r9d	      2592	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x40043db	          0x41f7f2	                                div r10d	      2572	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_13
0x40043de	            0x31d2	                            xor edx, edx	      2573	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_14
0x40043e0	          0x894508	                mov dword [rbp + 8], eax	      2572	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_13
0x40043e3	        0x8d440eff	                lea eax, [rsi + rcx - 1]	      2573	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_14
0x40043e7	      0xb908000000	                              mov ecx, 8	      2593	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_16
0x40043ec	            0xf7f6	                                 div esi	      2573	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_14
0x40043ee	            0x31d2	                            xor edx, edx	      2574	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_15
0x40043f0	          0x894500	                    mov dword [rbp], eax	      2573	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_14
0x40043f3	      0x418d4439ff	                 lea eax, [r9 + rdi - 1]	      2574	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_15
0x40043f8	            0xf7f7	                                 div edi	      2574	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_15
0x40043fa	          0x894504	                mov dword [rbp + 4], eax	      2574	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_15
0x40043fd	           0xfafc7	                           imul eax, edi	      2576	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x4004400	        0x41890424	                    mov dword [r12], eax	      2576	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x4004404	          0x8b5504	                mov edx, dword [rbp + 4]	      2580	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x4004407	        0x448b5508	               mov r10d, dword [rbp + 8]	      2580	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x400440b	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	      2590	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x400440f	        0x440fafd2	                          imul r10d, edx	      2580	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x4004413	        0x4183f801	                              cmp r8d, 1	      2586	intel_display.c	FUNCTION_89	FOR_1	IF_5	IF_6
0x4004417	        0x8944244c	             mov dword [rsp + 0x4c], eax	      2590	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x400441b	        0x4183daff	            sbb r10d, 0xffffffffffffffff	      2586	intel_display.c	FUNCTION_89	FOR_1	IF_5	IF_6
0x400441f	         0xfaf7500	                   imul esi, dword [rbp]	      2593	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_16
0x4004423	           0xfafd7	                           imul edx, edi	      2593	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_16
0x4004426	      0x488d7c2448	                   lea rdi, [rsp + 0x48]	      2593	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_16
0x400442b	      0x4489542408	               mov dword [rsp + 8], r10d	      2586	intel_display.c	FUNCTION_89	FOR_1	IF_5	IF_6
0x4004430	      0xe800000000	                          call 0x4004435	      2593	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_16
0x4004435	        0x8b442448	            mov eax, dword [rsp + 0x48] 	      2597	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x4004439	        0x8b742444	            mov esi, dword [rsp + 0x44] 	      2601	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x400443d	            0x31d2	                            xor edx, edx	      2601	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x400443f	        0x8b4c2440	            mov ecx, dword [rsp + 0x40] 	      2602	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_17
0x4004443	        0x89442438	             mov dword [rsp + 0x38], eax	      2597	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x4004447	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      2598	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x400444b	        0x89742440	             mov dword [rsp + 0x40], esi	      2602	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_17
0x400444f	        0x894c2444	             mov dword [rsp + 0x44], ecx	      2602	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_17
0x4004453	        0x8944243c	             mov dword [rsp + 0x3c], eax	      2598	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x4004457	        0x418b0424	                    mov eax, dword [r12]	      2601	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x400445b	            0x6a00	                                  push 0	      2608	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_18
0x400445d	            0xf7f6	                                 div esi	      2601	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x400445f	        0x8b54242c	            mov edx, dword [rsp + 0x2c] 	      2608	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_18
0x4004463	          0x4189c1	                            mov r9d, eax	      2601	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x4004466	        0x8b442408	                mov eax, dword [rsp + 8]	      2608	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_18
0x400446a	           0xfafd0	                           imul edx, eax	      2608	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_18
0x400446d	          0x4189c0	                            mov r8d, eax	      2608	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_18
0x4004470	              0x52	                                push rdx	      2608	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_18
0x4004471	            0x89f2	                            mov edx, esi	      2608	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_18
0x4004473	      0x488d7c2448	                   lea rdi, [rsp + 0x48]	      2608	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_18
0x4004478	      0x488d74244c	                   lea rsi, [rsp + 0x4c]	      2608	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_18
0x400447d	      0xe89ecfffff	     call sym.__intel_adjust_tile_offset	      2608	intel_display.c	FUNCTION_89	FOR_1	IF_5	CALL_18
0x4004482	          0x8b4500	                    mov eax, dword [rbp]	      2613	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x4004485	         0xfaf4504	               imul eax, dword [rbp + 4]	      2613	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x4004489	         0x1442434	             add dword [rsp + 0x34], eax	      2613	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x400448d	        0x8b442448	            mov eax, dword [rsp + 0x48] 	      2619	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x4004491	      0x41894424f8	                mov dword [r12 - 8], eax	      2619	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x4004496	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      2620	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x400449a	      0x41894424fc	                mov dword [r12 - 4], eax	      2620	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x400449f	              0x58	                                 pop rax	      2620	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x40044a0	              0x5a	                                 pop rdx	      2620	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x40044a1	      0x448b542408	               mov r10d, dword [rsp + 8]	      2620	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x40044a6	      0x448b5c2430	           mov r11d, dword [rsp + 0x30] 	      2620	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x40044ab	      0xe987fdffff	                           jmp 0x4004237	      2620	intel_display.c	FUNCTION_89	FOR_1	IF_5
0x40044b0	    0x48c7c6000000	                              mov rsi, 0	     14131	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_15	CALL_41
0x40044b7	      0xbf04000000	                              mov edi, 4	     14131	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_15	CALL_41
0x40044bc	      0xbdeaffffff	                     mov ebp, 0xffffffea	     13978	intel_display.c	ELSE_5	FUNCTION_388
0x40044c1	      0xe800000000	                          call 0x40044c6	     14131	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_15	CALL_41
0x40044c6	      0xe98ff7ffff	                           jmp 0x4003c5a	     14132	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_15
0x40044cb	          0x4189c0	                            mov r8d, eax	     14152	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_17	CALL_44
0x40044ce	          0x4489f2	                           mov edx, r14d	     14152	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_17	CALL_44
0x40044d1	    0x48c7c6000000	                              mov rsi, 0	     14152	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_17	CALL_44
0x40044d8	      0xbf04000000	                              mov edi, 4	     14152	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_17	CALL_44
0x40044dd	      0xbdeaffffff	                     mov ebp, 0xffffffea	     13978	intel_display.c	ELSE_5	FUNCTION_388
0x40044e2	      0xe800000000	                          call 0x40044e7	     14152	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_17	CALL_44
0x40044e7	      0xe96ef7ffff	                           jmp 0x4003c5a	     14154	intel_display.c	ELSE_5	FUNCTION_388	FOR_1	IF_17
0x40044ec	          0x4489c9	                            mov ecx, r9d	      2499	intel_display.c	FUNCTION_89	FOR_1	IF_1	CALL_6
0x40044ef	          0x4489ea	                           mov edx, r13d	      2499	intel_display.c	FUNCTION_89	FOR_1	IF_1	CALL_6
0x40044f2	    0x48c7c6000000	                              mov rsi, 0	      2499	intel_display.c	FUNCTION_89	FOR_1	IF_1	CALL_6
0x40044f9	      0xbf04000000	                              mov edi, 4	      2499	intel_display.c	FUNCTION_89	FOR_1	IF_1	CALL_6
0x40044fe	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      2499	intel_display.c	FUNCTION_89	FOR_1	IF_1	CALL_6
0x4004503	      0xe800000000	                          call 0x4004508	      2499	intel_display.c	FUNCTION_89	FOR_1	IF_1	CALL_6
0x4004508	      0xe9d7faffff	                           jmp 0x4003fe4	      2499	intel_display.c	FUNCTION_89	FOR_1	IF_1	CALL_6
0x400450d	    0x48c7c2000000	                              mov rdx, 0	     14164	intel_display.c	ELSE_5	FUNCTION_388	CALL_46
0x4004514	          0x4c89fe	                            mov rsi, r15	     14164	intel_display.c	ELSE_5	FUNCTION_388	CALL_46
0x4004517	          0x4c89e7	                            mov rdi, r12	     14164	intel_display.c	ELSE_5	FUNCTION_388	CALL_46
0x400451a	      0xe800000000	                          call 0x400451f	     14164	intel_display.c	ELSE_5	FUNCTION_388	CALL_46
0x400451f	            0x89c5	                            mov ebp, eax	     14164	intel_display.c	ELSE_5	FUNCTION_388	CALL_46
0x4004521	            0x31c0	                            xor eax, eax	     14170	intel_display.c	ELSE_5	FUNCTION_388
0x4004523	            0x85ed	                           test ebp, ebp	     14165	intel_display.c	ELSE_5	FUNCTION_388	IF_19
0x4004525	     0xf8452f7ffff	                            je 0x4003c7d	     14165	intel_display.c	ELSE_5	FUNCTION_388	IF_19
0x400452b	            0x89ee	                            mov esi, ebp	     14166	intel_display.c	ELSE_5	FUNCTION_388	IF_19	CALL_47
0x400452d	    0x48c7c7000000	                              mov rdi, 0	     14166	intel_display.c	ELSE_5	FUNCTION_388	IF_19	CALL_47
0x4004534	      0xe800000000	                          call 0x4004539	     14166	intel_display.c	ELSE_5	FUNCTION_388	IF_19	CALL_47
0x4004539	      0xe91cf7ffff	                           jmp 0x4003c5a	     14167	intel_display.c	ELSE_5	FUNCTION_388	IF_19
0x400453e	          0x8b1424	                    mov edx, dword [rsp]	      2630	intel_display.c	FUNCTION_89	IF_7
0x4004541	    0x498b87c80000	            mov rax, qword [r15 + 0xc8] 	      2630	intel_display.c	FUNCTION_89	IF_7
0x4004548	       0xfaf542404	               imul edx, dword [rsp + 4]	      2630	intel_display.c	FUNCTION_89	IF_7
0x400454d	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	      2630	intel_display.c	FUNCTION_89	IF_7
0x4004552	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      2630	intel_display.c	FUNCTION_89	IF_7
0x4004557	    0x488b88c80000	            mov rcx, qword [rax + 0xc8] 	      2630	intel_display.c	FUNCTION_89	IF_7
0x400455e	            0x89d0	                            mov eax, edx	      2630	intel_display.c	FUNCTION_89	IF_7
0x4004560	          0x4839c8	                            cmp rax, rcx	      2630	intel_display.c	FUNCTION_89	IF_7
0x4004563	            0x76a8	                           jbe 0x400450d	      2630	intel_display.c	FUNCTION_89	IF_7
0x4004565	    0x48c7c6000000	                              mov rsi, 0	      2631	intel_display.c	FUNCTION_89	IF_7	CALL_21
0x400456c	      0xbf04000000	                              mov edi, 4	      2631	intel_display.c	FUNCTION_89	IF_7	CALL_21
0x4004571	      0xe800000000	                          call 0x4004576	      2631	intel_display.c	FUNCTION_89	IF_7	CALL_21
0x4004576	      0xe969faffff	                           jmp 0x4003fe4	      2631	intel_display.c	FUNCTION_89	IF_7	CALL_21
0x400457b	      0xe800000000	                          call 0x4004580	     14177	intel_display.c	ELSE_5	FUNCTION_388
0x4004580	    0x498b87c80000	            mov rax, qword [r15 + 0xc8] 	     14177	intel_display.c	ELSE_5	FUNCTION_388
0x4004587	        0x8b742438	            mov esi, dword [rsp + 0x38] 	      2545	intel_display.c	FUNCTION_89	FOR_1	IF_4	CALL_9
0x400458b	    0xf68090010000	          test byte [rax + 0x190], 0x7f 	      2545	intel_display.c	FUNCTION_89	FOR_1	IF_4	CALL_9
0x4004592	            0x7415	                            je 0x40045a9	      2545	intel_display.c	FUNCTION_89	FOR_1	IF_4	CALL_9
0x4004594	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      2545	intel_display.c	FUNCTION_89	FOR_1	IF_4	CALL_9
0x4004598	             0x1f0	                            add eax, esi	      2545	intel_display.c	FUNCTION_89	FOR_1	IF_4	CALL_9
0x400459a	       0xfaf442408	               imul eax, dword [rsp + 8]	      2545	intel_display.c	FUNCTION_89	FOR_1	IF_4	CALL_9
0x400459f	        0x413b4758	            cmp eax, dword [r15 + 0x58] 	      2545	intel_display.c	FUNCTION_89	FOR_1	IF_4	CALL_9
0x40045a3	     0xf87dd000000	                            ja 0x4004686	      2545	intel_display.c	FUNCTION_89	FOR_1	IF_4	CALL_9
0x40045a9	        0x8b7c243c	            mov edi, dword [rsp + 0x3c] 	      2545	intel_display.c	FUNCTION_89	FOR_1	IF_4	CALL_9
0x40045ad	      0xe989fdffff	                           jmp 0x400433b	      2545	intel_display.c	FUNCTION_89	FOR_1	IF_4	CALL_9
0x40045b2	        0x498b5748	            mov rdx, qword [r15 + 0x48] 	      2506	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x40045b6	      0x488d4c2448	                   lea rcx, [rsp + 0x48]	      2512	intel_display.c	FUNCTION_89	FOR_1	IF_2	CALL_7
0x40045bb	      0xbe01000000	                              mov esi, 1	      2512	intel_display.c	FUNCTION_89	FOR_1	IF_2	CALL_7
0x40045c0	          0x4c89ff	                            mov rdi, r15	      2512	intel_display.c	FUNCTION_89	FOR_1	IF_2	CALL_7
0x40045c3	         0xfb64209	               movzx eax, byte [rdx + 9]	      2506	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x40045c7	      0x440fb6420a	            movzx r8d, byte [rdx + 0xa] 	      2507	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x40045cc	      0x488d542444	                   lea rdx, [rsp + 0x44]	      2512	intel_display.c	FUNCTION_89	FOR_1	IF_2	CALL_7
0x40045d1	        0x89442434	             mov dword [rsp + 0x34], eax	      2506	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x40045d5	      0x4489442430	             mov dword [rsp + 0x30], r8d	      2507	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x40045da	      0xe8f1d2ffff	                call sym.intel_tile_dims	      2512	intel_display.c	FUNCTION_89	FOR_1	IF_2	CALL_7
0x40045df	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      2513	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x40045e3	        0x8b4c2444	            mov ecx, dword [rsp + 0x44] 	      2513	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x40045e7	        0x8b742438	            mov esi, dword [rsp + 0x38] 	      2516	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x40045eb	      0x448b442430	            mov r8d, dword [rsp + 0x30] 	      2514	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x40045f0	        0x8b7c243c	            mov edi, dword [rsp + 0x3c] 	      2517	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x40045f4	      0x448b4c2448	            mov r9d, dword [rsp + 0x48] 	      2514	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x40045f9	           0xfafc8	                           imul ecx, eax	      2513	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x40045fc	    0x458b97f00000	           mov r10d, dword [r15 + 0xf0] 	      2518	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x4004603	           0xfafc6	                           imul eax, esi	      2516	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x4004606	        0x894c2444	             mov dword [rsp + 0x44], ecx	      2513	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x400460a	              0x99	                                     cdq	      2516	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x400460b	            0xf7f9	                                idiv ecx	      2516	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x400460d	          0x4489c0	                            mov eax, r8d	      2517	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x4004610	           0xfafc7	                           imul eax, edi	      2517	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x4004613	        0x89542430	             mov dword [rsp + 0x30], edx	      2516	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x4004617	        0x450fafc8	                           imul r9d, r8d	      2514	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x400461b	    0x458b87f40000	            mov r8d, dword [r15 + 0xf4] 	      2519	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x4004622	              0x99	                                     cdq	      2517	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x4004623	          0x41f7f9	                                idiv r9d	      2517	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x4004626	          0x4489d0	                           mov eax, r10d	      2518	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x4004629	      0x44894c2448	             mov dword [rsp + 0x48], r9d	      2514	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x400462e	        0x89542434	             mov dword [rsp + 0x34], edx	      2517	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x4004632	            0x31d2	                            xor edx, edx	      2518	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x4004634	            0xf7f1	                                 div ecx	      2518	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x4004636	          0x4489c0	                            mov eax, r8d	      2519	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x4004639	          0x4189d3	                           mov r11d, edx	      2518	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x400463c	            0x31d2	                            xor edx, edx	      2519	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x400463e	          0x41f7f1	                                 div r9d	      2519	intel_display.c	FUNCTION_89	FOR_1	IF_2
0x4004641	      0x44395c2430	           cmp dword [rsp + 0x30], r11d 	      2525	intel_display.c	FUNCTION_89	FOR_1	IF_2	IF_3
0x4004646	            0x750a	                           jne 0x4004652	      2525	intel_display.c	FUNCTION_89	FOR_1	IF_2	IF_3
0x4004648	        0x39542434	            cmp dword [rsp + 0x34], edx 	      2525	intel_display.c	FUNCTION_89	FOR_1	IF_2	IF_3
0x400464c	     0xf84e9fcffff	                            je 0x400433b	      2525	intel_display.c	FUNCTION_89	FOR_1	IF_2	IF_3
0x4004652	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      2525	intel_display.c	FUNCTION_89	FOR_1	IF_2	IF_3
0x4004657	              0x57	                                push rdi	      2526	intel_display.c	FUNCTION_89	FOR_1	IF_2	IF_3	CALL_8
0x4004658	            0x89d1	                            mov ecx, edx	      2526	intel_display.c	FUNCTION_89	FOR_1	IF_2	IF_3	CALL_8
0x400465a	              0x56	                                push rsi	      2526	intel_display.c	FUNCTION_89	FOR_1	IF_2	IF_3	CALL_8
0x400465b	            0x4150	                                 push r8	      2526	intel_display.c	FUNCTION_89	FOR_1	IF_2	IF_3	CALL_8
0x400465d	          0x4489da	                           mov edx, r11d	      2526	intel_display.c	FUNCTION_89	FOR_1	IF_2	IF_3	CALL_8
0x4004660	            0x4152	                                push r10	      2526	intel_display.c	FUNCTION_89	FOR_1	IF_2	IF_3	CALL_8
0x4004662	      0x448b4c2454	            mov r9d, dword [rsp + 0x54] 	      2526	intel_display.c	FUNCTION_89	FOR_1	IF_2	IF_3	CALL_8
0x4004667	    0x48c7c6000000	                              mov rsi, 0	      2526	intel_display.c	FUNCTION_89	FOR_1	IF_2	IF_3	CALL_8
0x400466e	      0x448b442450	            mov r8d, dword [rsp + 0x50] 	      2526	intel_display.c	FUNCTION_89	FOR_1	IF_2	IF_3	CALL_8
0x4004673	      0xbf04000000	                              mov edi, 4	      2526	intel_display.c	FUNCTION_89	FOR_1	IF_2	IF_3	CALL_8
0x4004678	      0xe800000000	                          call 0x400467d	      2526	intel_display.c	FUNCTION_89	FOR_1	IF_2	IF_3	CALL_8
0x400467d	        0x4883c420	                           add rsp, 0x20	      2532	intel_display.c	FUNCTION_89	FOR_1	IF_2	IF_3
0x4004681	      0xe95ef9ffff	                           jmp 0x4003fe4	      2532	intel_display.c	FUNCTION_89	FOR_1	IF_2	IF_3
0x4004686	        0x418b4f68	            mov ecx, dword [r15 + 0x68] 	      2547	intel_display.c	FUNCTION_89	FOR_1	IF_4	CALL_10
0x400468a	            0x31d2	                            xor edx, edx	      2547	intel_display.c	FUNCTION_89	FOR_1	IF_4	CALL_10
0x400468c	    0x48c7c6000000	                              mov rsi, 0	      2547	intel_display.c	FUNCTION_89	FOR_1	IF_4	CALL_10
0x4004693	      0xbf04000000	                              mov edi, 4	      2547	intel_display.c	FUNCTION_89	FOR_1	IF_4	CALL_10
0x4004698	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      2547	intel_display.c	FUNCTION_89	FOR_1	IF_4	CALL_10
0x400469d	      0xe800000000	                          call 0x40046a2	      2547	intel_display.c	FUNCTION_89	FOR_1	IF_4	CALL_10
0x40046a2	      0xe93df9ffff	                           jmp 0x4003fe4	      2547	intel_display.c	FUNCTION_89	FOR_1	IF_4	CALL_10
ivb_manual_fdi_link_train	FOR,3:SWITCH,0:DO,0:WHILE,0:IF,4:ELSE,0:functions,0:CALL,52	255
0x4003270	            0x4157	                                push r15	      4098	intel_display.c	FUNCTION_127
0x4003272	            0x4156	                                push r14	      4098	intel_display.c	FUNCTION_127
0x4003274	      0xba01000000	                              mov edx, 1	      4108	intel_display.c	FUNCTION_127	CALL_3
0x4003279	            0x4155	                                push r13	      4098	intel_display.c	FUNCTION_127
0x400327b	            0x4154	                                push r12	      4098	intel_display.c	FUNCTION_127
0x400327d	              0x55	                                push rbp	      4098	intel_display.c	FUNCTION_127
0x400327e	              0x53	                                push rbx	      4098	intel_display.c	FUNCTION_127
0x400327f	        0x4883ec18	                           sub rsp, 0x18	      4098	intel_display.c	FUNCTION_127
0x4003283	    0x8bafb0040000	           mov ebp, dword [rdi + 0x4b0] 	      4107	intel_display.c	FUNCTION_127	CALL_2
0x4003289	          0x4c8b3f	                    mov r15, qword [rdi]	      4099	intel_display.c	FUNCTION_127
0x400328c	      0x4889742410	             mov qword [rsp + 0x10], rsi	      4098	intel_display.c	FUNCTION_127
0x4003291	          0xc1e50c	                            shl ebp, 0xc	      4107	intel_display.c	FUNCTION_127	CALL_2
0x4003294	          0x4c89ff	                            mov rdi, r15	      4108	intel_display.c	FUNCTION_127	CALL_3
0x4003297	    0x498b87f80700	           mov rax, qword [r15 + 0x7f8] 	      4108	intel_display.c	FUNCTION_127	CALL_3
0x400329e	    0x8d9d18000f00	                lea ebx, [rbp + 0xf0018]	      4107	intel_display.c	FUNCTION_127	CALL_2
0x40032a4	    0x448db5000106	               lea r14d, [rbp + 0x60100]	      4107	intel_display.c	FUNCTION_127	CALL_2
0x40032ab	    0x448dad0c000f	               lea r13d, [rbp + 0xf000c]	      4107	intel_display.c	FUNCTION_127	CALL_2
0x40032b2	            0x89de	                            mov esi, ebx	      4108	intel_display.c	FUNCTION_127	CALL_3
0x40032b4	      0xe800000000	                          call 0x40032b9	      4108	intel_display.c	FUNCTION_127	CALL_3
0x40032b9	          0x80e4fc	                            and ah, 0xfc	      4111	intel_display.c	FUNCTION_127	CALL_4
0x40032bc	      0xb901000000	                              mov ecx, 1	      4111	intel_display.c	FUNCTION_127	CALL_4
0x40032c1	            0x89de	                            mov esi, ebx	      4111	intel_display.c	FUNCTION_127	CALL_4
0x40032c3	            0x89c2	                            mov edx, eax	      4111	intel_display.c	FUNCTION_127	CALL_4
0x40032c5	          0x4c89ff	                            mov rdi, r15	      4111	intel_display.c	FUNCTION_127	CALL_4
0x40032c8	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	      4111	intel_display.c	FUNCTION_127	CALL_4
0x40032cf	      0xe800000000	                          call 0x40032d4	      4111	intel_display.c	FUNCTION_127	CALL_4
0x40032d4	            0x89de	                            mov esi, ebx	      4113	intel_display.c	FUNCTION_127	CALL_5
0x40032d6	    0x8d9d14000f00	                lea ebx, [rbp + 0xf0014]	      4116	intel_display.c	FUNCTION_127	CALL_7
0x40032dc	            0x31d2	                            xor edx, edx	      4113	intel_display.c	FUNCTION_127	CALL_5
0x40032de	          0x4c89ff	                            mov rdi, r15	      4113	intel_display.c	FUNCTION_127	CALL_5
0x40032e1	    0x498b87f80700	           mov rax, qword [r15 + 0x7f8] 	      4113	intel_display.c	FUNCTION_127	CALL_5
0x40032e8	      0xe800000000	                          call 0x40032ed	      4113	intel_display.c	FUNCTION_127	CALL_5
0x40032ed	      0xbf9ad40900	                        mov edi, 0x9d49a	      4114	intel_display.c	FUNCTION_127	CALL_6
0x40032f2	      0xe800000000	                          call 0x40032f7	      4114	intel_display.c	FUNCTION_127	CALL_6
0x40032f7	      0xba01000000	                              mov edx, 1	      4116	intel_display.c	FUNCTION_127	CALL_7
0x40032fc	            0x89de	                            mov esi, ebx	      4116	intel_display.c	FUNCTION_127	CALL_7
0x40032fe	          0x4c89ff	                            mov rdi, r15	      4116	intel_display.c	FUNCTION_127	CALL_7
0x4003301	    0x498b87f80700	           mov rax, qword [r15 + 0x7f8] 	      4116	intel_display.c	FUNCTION_127	CALL_7
0x4003308	      0xe800000000	                          call 0x400330d	      4116	intel_display.c	FUNCTION_127	CALL_7
0x400330d	    0x48c7c6000000	                              mov rsi, 0	      4116	intel_display.c	FUNCTION_127	CALL_7
0x4003314	            0x89c2	                            mov edx, eax	      4116	intel_display.c	FUNCTION_127	CALL_7
0x4003316	      0xbf04000000	                              mov edi, 4	      4116	intel_display.c	FUNCTION_127	CALL_7
0x400331b	      0xe800000000	                          call 0x4003320	      4116	intel_display.c	FUNCTION_127	CALL_7
0x4003320	    0x8d8510000f00	                lea eax, [rbp + 0xf0010]	      4116	intel_display.c	FUNCTION_127	CALL_7
0x4003326	    0xc74424040000	                  mov dword [rsp + 4], 0	      4120	intel_display.c	FUNCTION_127	FOR_1	CALL_10
0x400332e	            0x31ed	                            xor ebp, ebp	      4116	intel_display.c	FUNCTION_127	CALL_7
0x4003330	        0x8944240c	              mov dword [rsp + 0xc], eax	      4116	intel_display.c	FUNCTION_127	CALL_7
0x4003334	      0xba01000000	                              mov edx, 1	      4123	intel_display.c	FUNCTION_127	FOR_1	CALL_12
0x4003339	          0x4489f6	                           mov esi, r14d	      4123	intel_display.c	FUNCTION_127	FOR_1	CALL_12
0x400333c	          0x4c89ff	                            mov rdi, r15	      4123	intel_display.c	FUNCTION_127	FOR_1	CALL_12
0x400333f	    0x498b87f80700	           mov rax, qword [r15 + 0x7f8] 	      4123	intel_display.c	FUNCTION_127	FOR_1	CALL_12
0x4003346	          0x4531e4	                          xor r12d, r12d	      4158	intel_display.c	FUNCTION_127	FOR_1	FOR_2
0x4003349	      0xe800000000	                          call 0x400334e	      4123	intel_display.c	FUNCTION_127	FOR_1	CALL_12
0x400334e	      0x25fff8ff7f	                     and eax, 0x7ffff8ff	      4126	intel_display.c	FUNCTION_127	FOR_1	CALL_13
0x4003353	      0xb901000000	                              mov ecx, 1	      4126	intel_display.c	FUNCTION_127	FOR_1	CALL_13
0x4003358	          0x4489f6	                           mov esi, r14d	      4126	intel_display.c	FUNCTION_127	FOR_1	CALL_13
0x400335b	            0x89c2	                            mov edx, eax	      4126	intel_display.c	FUNCTION_127	FOR_1	CALL_13
0x400335d	          0x4c89ff	                            mov rdi, r15	      4126	intel_display.c	FUNCTION_127	FOR_1	CALL_13
0x4003360	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	      4126	intel_display.c	FUNCTION_127	FOR_1	CALL_13
0x4003367	      0xe800000000	                          call 0x400336c	      4126	intel_display.c	FUNCTION_127	FOR_1	CALL_13
0x400336c	      0xba01000000	                              mov edx, 1	      4129	intel_display.c	FUNCTION_127	FOR_1	CALL_15
0x4003371	          0x4489ee	                           mov esi, r13d	      4129	intel_display.c	FUNCTION_127	FOR_1	CALL_15
0x4003374	          0x4c89ff	                            mov rdi, r15	      4129	intel_display.c	FUNCTION_127	FOR_1	CALL_15
0x4003377	    0x498b87f80700	           mov rax, qword [r15 + 0x7f8] 	      4129	intel_display.c	FUNCTION_127	FOR_1	CALL_15
0x400337e	      0xe800000000	                          call 0x4003383	      4129	intel_display.c	FUNCTION_127	FOR_1	CALL_15
0x4003383	      0x25fff8ff7f	                     and eax, 0x7ffff8ff	      4133	intel_display.c	FUNCTION_127	FOR_1	CALL_16
0x4003388	      0xb901000000	                              mov ecx, 1	      4133	intel_display.c	FUNCTION_127	FOR_1	CALL_16
0x400338d	          0x4489ee	                           mov esi, r13d	      4133	intel_display.c	FUNCTION_127	FOR_1	CALL_16
0x4003390	            0x89c2	                            mov edx, eax	      4133	intel_display.c	FUNCTION_127	FOR_1	CALL_16
0x4003392	          0x4c89ff	                            mov rdi, r15	      4133	intel_display.c	FUNCTION_127	FOR_1	CALL_16
0x4003395	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	      4133	intel_display.c	FUNCTION_127	FOR_1	CALL_16
0x400339c	      0xe800000000	                          call 0x40033a1	      4133	intel_display.c	FUNCTION_127	FOR_1	CALL_16
0x40033a1	      0xba01000000	                              mov edx, 1	      4137	intel_display.c	FUNCTION_127	FOR_1	CALL_18
0x40033a6	          0x4489f6	                           mov esi, r14d	      4137	intel_display.c	FUNCTION_127	FOR_1	CALL_18
0x40033a9	          0x4c89ff	                            mov rdi, r15	      4137	intel_display.c	FUNCTION_127	FOR_1	CALL_18
0x40033ac	    0x498b87f80700	           mov rax, qword [r15 + 0x7f8] 	      4137	intel_display.c	FUNCTION_127	FOR_1	CALL_18
0x40033b3	      0xe800000000	                          call 0x40033b8	      4137	intel_display.c	FUNCTION_127	FOR_1	CALL_18
0x40033b8	      0x25ffffc7ff	                     and eax, 0xffc7ffff	      4138	intel_display.c	FUNCTION_127	FOR_1
0x40033bd	            0x89ea	                            mov edx, ebp	      4144	intel_display.c	FUNCTION_127	FOR_1	CALL_20
0x40033bf	          0x4489f6	                           mov esi, r14d	      4144	intel_display.c	FUNCTION_127	FOR_1	CALL_20
0x40033c2	            0x89c1	                            mov ecx, eax	      4138	intel_display.c	FUNCTION_127	FOR_1
0x40033c4	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4139	intel_display.c	FUNCTION_127	FOR_1	CALL_19
0x40033c9	    0x81ca00080080	                      or edx, 0x80000800	      4144	intel_display.c	FUNCTION_127	FOR_1	CALL_20
0x40033cf	          0x4c89ff	                            mov rdi, r15	      4144	intel_display.c	FUNCTION_127	FOR_1	CALL_20
0x40033d2	    0x8b8030030000	           mov eax, dword [rax + 0x330] 	      4139	intel_display.c	FUNCTION_127	FOR_1	CALL_19
0x40033d8	          0x83e801	                              sub eax, 1	      4139	intel_display.c	FUNCTION_127	FOR_1	CALL_19
0x40033db	          0xc1e013	                           shl eax, 0x13	      4139	intel_display.c	FUNCTION_127	FOR_1	CALL_19
0x40033de	             0x9c8	                             or eax, ecx	      4139	intel_display.c	FUNCTION_127	FOR_1	CALL_19
0x40033e0	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      4142	intel_display.c	FUNCTION_127	FOR_1
0x40033e4	      0x25ffff3ff0	                     and eax, 0xf03fffff	      4144	intel_display.c	FUNCTION_127	FOR_1	CALL_20
0x40033e9	             0x9c2	                             or edx, eax	      4144	intel_display.c	FUNCTION_127	FOR_1	CALL_20
0x40033eb	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	      4144	intel_display.c	FUNCTION_127	FOR_1	CALL_20
0x40033f2	            0xd1e9	                              shr ecx, 1	      4142	intel_display.c	FUNCTION_127	FOR_1
0x40033f4	        0x894c2408	                mov dword [rsp + 8], ecx	      4142	intel_display.c	FUNCTION_127	FOR_1
0x40033f8	      0xb901000000	                              mov ecx, 1	      4144	intel_display.c	FUNCTION_127	FOR_1	CALL_20
0x40033fd	      0xe800000000	                          call 0x4003402	      4144	intel_display.c	FUNCTION_127	FOR_1	CALL_20
0x4003402	      0xb901000000	                              mov ecx, 1	      4146	intel_display.c	FUNCTION_127	FOR_1	CALL_22
0x4003407	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	      4146	intel_display.c	FUNCTION_127	FOR_1	CALL_22
0x400340e	      0xba90002000	                       mov edx, 0x200090	      4146	intel_display.c	FUNCTION_127	FOR_1	CALL_22
0x4003413	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      4146	intel_display.c	FUNCTION_127	FOR_1	CALL_22
0x4003417	          0x4c89ff	                            mov rdi, r15	      4146	intel_display.c	FUNCTION_127	FOR_1	CALL_22
0x400341a	      0xe800000000	                          call 0x400341f	      4146	intel_display.c	FUNCTION_127	FOR_1	CALL_22
0x400341f	      0xba01000000	                              mov edx, 1	      4150	intel_display.c	FUNCTION_127	FOR_1	CALL_24
0x4003424	          0x4489ee	                           mov esi, r13d	      4150	intel_display.c	FUNCTION_127	FOR_1	CALL_24
0x4003427	          0x4c89ff	                            mov rdi, r15	      4150	intel_display.c	FUNCTION_127	FOR_1	CALL_24
0x400342a	    0x498b87f80700	           mov rax, qword [r15 + 0x7f8] 	      4150	intel_display.c	FUNCTION_127	FOR_1	CALL_24
0x4003431	      0xe800000000	                          call 0x4003436	      4150	intel_display.c	FUNCTION_127	FOR_1	CALL_24
0x4003436	       0xd00080080	                      or eax, 0x80000800	      4153	intel_display.c	FUNCTION_127	FOR_1	CALL_25
0x400343b	      0xb901000000	                              mov ecx, 1	      4153	intel_display.c	FUNCTION_127	FOR_1	CALL_25
0x4003440	          0x4489ee	                           mov esi, r13d	      4153	intel_display.c	FUNCTION_127	FOR_1	CALL_25
0x4003443	            0x89c2	                            mov edx, eax	      4153	intel_display.c	FUNCTION_127	FOR_1	CALL_25
0x4003445	          0x4c89ff	                            mov rdi, r15	      4153	intel_display.c	FUNCTION_127	FOR_1	CALL_25
0x4003448	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	      4153	intel_display.c	FUNCTION_127	FOR_1	CALL_25
0x400344f	      0xe800000000	                          call 0x4003454	      4153	intel_display.c	FUNCTION_127	FOR_1	CALL_25
0x4003454	            0x31d2	                            xor edx, edx	      4155	intel_display.c	FUNCTION_127	FOR_1	CALL_26
0x4003456	          0x4489ee	                           mov esi, r13d	      4155	intel_display.c	FUNCTION_127	FOR_1	CALL_26
0x4003459	          0x4c89ff	                            mov rdi, r15	      4155	intel_display.c	FUNCTION_127	FOR_1	CALL_26
0x400345c	    0x498b87f80700	           mov rax, qword [r15 + 0x7f8] 	      4155	intel_display.c	FUNCTION_127	FOR_1	CALL_26
0x4003463	      0xe800000000	                          call 0x4003468	      4155	intel_display.c	FUNCTION_127	FOR_1	CALL_26
0x4003468	      0xbfc7100000	                         mov edi, 0x10c7	      4156	intel_display.c	FUNCTION_127	FOR_1	CALL_27
0x400346d	      0xe800000000	                          call 0x4003472	      4156	intel_display.c	FUNCTION_127	FOR_1	CALL_27
0x4003472	      0xba01000000	                              mov edx, 1	      4160	intel_display.c	FUNCTION_127	FOR_1	FOR_2	CALL_29
0x4003477	            0x89de	                            mov esi, ebx	      4160	intel_display.c	FUNCTION_127	FOR_1	FOR_2	CALL_29
0x4003479	          0x4c89ff	                            mov rdi, r15	      4160	intel_display.c	FUNCTION_127	FOR_1	FOR_2	CALL_29
0x400347c	    0x498b87f80700	           mov rax, qword [r15 + 0x7f8] 	      4160	intel_display.c	FUNCTION_127	FOR_1	FOR_2	CALL_29
0x4003483	      0xe800000000	                          call 0x4003488	      4160	intel_display.c	FUNCTION_127	FOR_1	FOR_2	CALL_29
0x4003488	    0x48c7c6000000	                              mov rsi, 0	      4161	intel_display.c	FUNCTION_127	FOR_1	FOR_2	CALL_30
0x400348f	            0x89c5	                            mov ebp, eax	      4160	intel_display.c	FUNCTION_127	FOR_1	FOR_2	CALL_29
0x4003491	            0x89c2	                            mov edx, eax	      4161	intel_display.c	FUNCTION_127	FOR_1	FOR_2	CALL_30
0x4003493	      0xbf04000000	                              mov edi, 4	      4161	intel_display.c	FUNCTION_127	FOR_1	FOR_2	CALL_30
0x4003498	      0xe800000000	                          call 0x400349d	      4161	intel_display.c	FUNCTION_127	FOR_1	FOR_2	CALL_30
0x400349d	    0xf7c500010000	                         test ebp, 0x100	      4163	intel_display.c	FUNCTION_127	FOR_1	FOR_2	IF_1
0x40034a3	            0x7564	                           jne 0x4003509	      4163	intel_display.c	FUNCTION_127	FOR_1	FOR_2	IF_1
0x40034a5	    0x498b87f80700	           mov rax, qword [r15 + 0x7f8] 	      4164	intel_display.c	FUNCTION_127	FOR_1	FOR_2	IF_1	CALL_31
0x40034ac	      0xba01000000	                              mov edx, 1	      4164	intel_display.c	FUNCTION_127	FOR_1	FOR_2	IF_1	CALL_31
0x40034b1	            0x89de	                            mov esi, ebx	      4164	intel_display.c	FUNCTION_127	FOR_1	FOR_2	IF_1	CALL_31
0x40034b3	          0x4c89ff	                            mov rdi, r15	      4164	intel_display.c	FUNCTION_127	FOR_1	FOR_2	IF_1	CALL_31
0x40034b6	      0xe800000000	                          call 0x40034bb	      4164	intel_display.c	FUNCTION_127	FOR_1	FOR_2	IF_1	CALL_31
0x40034bb	          0xf6c401	                              test ah, 1	      4163	intel_display.c	FUNCTION_127	FOR_1	FOR_2	IF_1
0x40034be	            0x7549	                           jne 0x4003509	      4163	intel_display.c	FUNCTION_127	FOR_1	FOR_2	IF_1
0x40034c0	      0xbfc7100000	                         mov edi, 0x10c7	      4170	intel_display.c	FUNCTION_127	FOR_1	FOR_2	CALL_34
0x40034c5	        0x4183c401	                             add r12d, 1	      4158	intel_display.c	FUNCTION_127	FOR_1	FOR_2
0x40034c9	      0xe800000000	                          call 0x40034ce	      4170	intel_display.c	FUNCTION_127	FOR_1	FOR_2	CALL_34
0x40034ce	        0x4183fc04	                             cmp r12d, 4	      4158	intel_display.c	FUNCTION_127	FOR_1	FOR_2
0x40034d2	            0x759e	                           jne 0x4003472	      4158	intel_display.c	FUNCTION_127	FOR_1	FOR_2
0x40034d4	        0x8b542408	                mov edx, dword [rsp + 8]	      4173	intel_display.c	FUNCTION_127	FOR_1	IF_2	CALL_35
0x40034d8	    0x48c7c6000000	                              mov rsi, 0	      4173	intel_display.c	FUNCTION_127	FOR_1	IF_2	CALL_35
0x40034df	      0xbf04000000	                              mov edi, 4	      4173	intel_display.c	FUNCTION_127	FOR_1	IF_2	CALL_35
0x40034e4	      0xe800000000	                          call 0x40034e9	      4173	intel_display.c	FUNCTION_127	FOR_1	IF_2	CALL_35
0x40034e9	      0x8344240401	                  add dword [rsp + 4], 1	      4120	intel_display.c	FUNCTION_127	FOR_1	CALL_10
0x40034ee	        0x8b442404	                mov eax, dword [rsp + 4]	      4120	intel_display.c	FUNCTION_127	FOR_1	CALL_10
0x40034f2	          0x83f808	                              cmp eax, 8	      4120	intel_display.c	FUNCTION_127	FOR_1	CALL_10
0x40034f5	     0xf8452010000	                            je 0x400364d	      4120	intel_display.c	FUNCTION_127	FOR_1	CALL_10
0x40034fb	            0xd1e8	                              shr eax, 1	      4120	intel_display.c	FUNCTION_127	FOR_1	CALL_10
0x40034fd	    0x8b2c85000000	                  mov ebp, dword [rax*4]	      4120	intel_display.c	FUNCTION_127	FOR_1	CALL_10
0x4003504	      0xe92bfeffff	                           jmp 0x4003334	      4120	intel_display.c	FUNCTION_127	FOR_1	CALL_10
0x4003509	            0x89ea	                            mov edx, ebp	      4165	intel_display.c	FUNCTION_127	FOR_1	FOR_2	IF_1	CALL_32
0x400350b	      0xb901000000	                              mov ecx, 1	      4165	intel_display.c	FUNCTION_127	FOR_1	FOR_2	IF_1	CALL_32
0x4003510	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	      4165	intel_display.c	FUNCTION_127	FOR_1	FOR_2	IF_1	CALL_32
0x4003517	          0x80ce01	                                or dh, 1	      4165	intel_display.c	FUNCTION_127	FOR_1	FOR_2	IF_1	CALL_32
0x400351a	            0x89de	                            mov esi, ebx	      4165	intel_display.c	FUNCTION_127	FOR_1	FOR_2	IF_1	CALL_32
0x400351c	          0x4c89ff	                            mov rdi, r15	      4165	intel_display.c	FUNCTION_127	FOR_1	FOR_2	IF_1	CALL_32
0x400351f	      0xe800000000	                          call 0x4003524	      4165	intel_display.c	FUNCTION_127	FOR_1	FOR_2	IF_1	CALL_32
0x4003524	          0x4489e2	                           mov edx, r12d	      4166	intel_display.c	FUNCTION_127	FOR_1	FOR_2	IF_1	CALL_33
0x4003527	    0x48c7c6000000	                              mov rsi, 0	      4166	intel_display.c	FUNCTION_127	FOR_1	FOR_2	IF_1	CALL_33
0x400352e	      0xbf04000000	                              mov edi, 4	      4166	intel_display.c	FUNCTION_127	FOR_1	FOR_2	IF_1	CALL_33
0x4003533	      0xe800000000	                          call 0x4003538	      4166	intel_display.c	FUNCTION_127	FOR_1	FOR_2	IF_1	CALL_33
0x4003538	      0xba01000000	                              mov edx, 1	      4179	intel_display.c	FUNCTION_127	FOR_1	CALL_37
0x400353d	          0x4489f6	                           mov esi, r14d	      4179	intel_display.c	FUNCTION_127	FOR_1	CALL_37
0x4003540	          0x4c89ff	                            mov rdi, r15	      4179	intel_display.c	FUNCTION_127	FOR_1	CALL_37
0x4003543	    0x498b87f80700	           mov rax, qword [r15 + 0x7f8] 	      4179	intel_display.c	FUNCTION_127	FOR_1	CALL_37
0x400354a	            0x31ed	                            xor ebp, ebp	      4193	intel_display.c	FUNCTION_127	FOR_1	FOR_3
0x400354c	      0xe800000000	                          call 0x4003551	      4179	intel_display.c	FUNCTION_127	FOR_1	CALL_37
0x4003551	          0x80e4fc	                            and ah, 0xfc	      4180	intel_display.c	FUNCTION_127	FOR_1
0x4003554	      0xb901000000	                              mov ecx, 1	      4182	intel_display.c	FUNCTION_127	FOR_1	CALL_38
0x4003559	          0x4489f6	                           mov esi, r14d	      4182	intel_display.c	FUNCTION_127	FOR_1	CALL_38
0x400355c	            0x89c2	                            mov edx, eax	      4180	intel_display.c	FUNCTION_127	FOR_1
0x400355e	          0x4c89ff	                            mov rdi, r15	      4182	intel_display.c	FUNCTION_127	FOR_1	CALL_38
0x4003561	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	      4182	intel_display.c	FUNCTION_127	FOR_1	CALL_38
0x4003568	          0x80ce01	                                or dh, 1	      4182	intel_display.c	FUNCTION_127	FOR_1	CALL_38
0x400356b	      0xe800000000	                          call 0x4003570	      4182	intel_display.c	FUNCTION_127	FOR_1	CALL_38
0x4003570	      0xba01000000	                              mov edx, 1	      4185	intel_display.c	FUNCTION_127	FOR_1	CALL_40
0x4003575	          0x4489ee	                           mov esi, r13d	      4185	intel_display.c	FUNCTION_127	FOR_1	CALL_40
0x4003578	          0x4c89ff	                            mov rdi, r15	      4185	intel_display.c	FUNCTION_127	FOR_1	CALL_40
0x400357b	    0x498b87f80700	           mov rax, qword [r15 + 0x7f8] 	      4185	intel_display.c	FUNCTION_127	FOR_1	CALL_40
0x4003582	      0xe800000000	                          call 0x4003587	      4185	intel_display.c	FUNCTION_127	FOR_1	CALL_40
0x4003587	          0x80e4fc	                            and ah, 0xfc	      4186	intel_display.c	FUNCTION_127	FOR_1
0x400358a	      0xb901000000	                              mov ecx, 1	      4188	intel_display.c	FUNCTION_127	FOR_1	CALL_41
0x400358f	          0x4489ee	                           mov esi, r13d	      4188	intel_display.c	FUNCTION_127	FOR_1	CALL_41
0x4003592	            0x89c2	                            mov edx, eax	      4186	intel_display.c	FUNCTION_127	FOR_1
0x4003594	          0x4c89ff	                            mov rdi, r15	      4188	intel_display.c	FUNCTION_127	FOR_1	CALL_41
0x4003597	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	      4188	intel_display.c	FUNCTION_127	FOR_1	CALL_41
0x400359e	          0x80ce01	                                or dh, 1	      4188	intel_display.c	FUNCTION_127	FOR_1	CALL_41
0x40035a1	      0xe800000000	                          call 0x40035a6	      4188	intel_display.c	FUNCTION_127	FOR_1	CALL_41
0x40035a6	            0x31d2	                            xor edx, edx	      4190	intel_display.c	FUNCTION_127	FOR_1	CALL_42
0x40035a8	          0x4489ee	                           mov esi, r13d	      4190	intel_display.c	FUNCTION_127	FOR_1	CALL_42
0x40035ab	          0x4c89ff	                            mov rdi, r15	      4190	intel_display.c	FUNCTION_127	FOR_1	CALL_42
0x40035ae	    0x498b87f80700	           mov rax, qword [r15 + 0x7f8] 	      4190	intel_display.c	FUNCTION_127	FOR_1	CALL_42
0x40035b5	      0xe800000000	                          call 0x40035ba	      4190	intel_display.c	FUNCTION_127	FOR_1	CALL_42
0x40035ba	      0xbf8e210000	                         mov edi, 0x218e	      4191	intel_display.c	FUNCTION_127	FOR_1	CALL_43
0x40035bf	      0xe800000000	                          call 0x40035c4	      4191	intel_display.c	FUNCTION_127	FOR_1	CALL_43
0x40035c4	      0xba01000000	                              mov edx, 1	      4195	intel_display.c	FUNCTION_127	FOR_1	FOR_3	CALL_45
0x40035c9	            0x89de	                            mov esi, ebx	      4195	intel_display.c	FUNCTION_127	FOR_1	FOR_3	CALL_45
0x40035cb	          0x4c89ff	                            mov rdi, r15	      4195	intel_display.c	FUNCTION_127	FOR_1	FOR_3	CALL_45
0x40035ce	    0x498b87f80700	           mov rax, qword [r15 + 0x7f8] 	      4195	intel_display.c	FUNCTION_127	FOR_1	FOR_3	CALL_45
0x40035d5	      0xe800000000	                          call 0x40035da	      4195	intel_display.c	FUNCTION_127	FOR_1	FOR_3	CALL_45
0x40035da	    0x48c7c6000000	                              mov rsi, 0	      4196	intel_display.c	FUNCTION_127	FOR_1	FOR_3	CALL_46
0x40035e1	          0x4189c4	                           mov r12d, eax	      4195	intel_display.c	FUNCTION_127	FOR_1	FOR_3	CALL_45
0x40035e4	            0x89c2	                            mov edx, eax	      4196	intel_display.c	FUNCTION_127	FOR_1	FOR_3	CALL_46
0x40035e6	      0xbf04000000	                              mov edi, 4	      4196	intel_display.c	FUNCTION_127	FOR_1	FOR_3	CALL_46
0x40035eb	      0xe800000000	                          call 0x40035f0	      4196	intel_display.c	FUNCTION_127	FOR_1	FOR_3	CALL_46
0x40035f0	    0x41f7c4000200	                        test r12d, 0x200	      4198	intel_display.c	FUNCTION_127	FOR_1	FOR_3	IF_3
0x40035f7	            0x7573	                           jne 0x400366c	      4198	intel_display.c	FUNCTION_127	FOR_1	FOR_3	IF_3
0x40035f9	    0x498b87f80700	           mov rax, qword [r15 + 0x7f8] 	      4199	intel_display.c	FUNCTION_127	FOR_1	FOR_3	IF_3	CALL_47
0x4003600	      0xba01000000	                              mov edx, 1	      4199	intel_display.c	FUNCTION_127	FOR_1	FOR_3	IF_3	CALL_47
0x4003605	            0x89de	                            mov esi, ebx	      4199	intel_display.c	FUNCTION_127	FOR_1	FOR_3	IF_3	CALL_47
0x4003607	          0x4c89ff	                            mov rdi, r15	      4199	intel_display.c	FUNCTION_127	FOR_1	FOR_3	IF_3	CALL_47
0x400360a	      0xe800000000	                          call 0x400360f	      4199	intel_display.c	FUNCTION_127	FOR_1	FOR_3	IF_3	CALL_47
0x400360f	          0xf6c402	                              test ah, 2	      4198	intel_display.c	FUNCTION_127	FOR_1	FOR_3	IF_3
0x4003612	            0x7558	                           jne 0x400366c	      4198	intel_display.c	FUNCTION_127	FOR_1	FOR_3	IF_3
0x4003614	      0xbf8e210000	                         mov edi, 0x218e	      4205	intel_display.c	FUNCTION_127	FOR_1	FOR_3	CALL_50
0x4003619	          0x83c501	                              add ebp, 1	      4193	intel_display.c	FUNCTION_127	FOR_1	FOR_3
0x400361c	      0xe800000000	                          call 0x4003621	      4205	intel_display.c	FUNCTION_127	FOR_1	FOR_3	CALL_50
0x4003621	          0x83fd04	                              cmp ebp, 4	      4193	intel_display.c	FUNCTION_127	FOR_1	FOR_3
0x4003624	            0x759e	                           jne 0x40035c4	      4193	intel_display.c	FUNCTION_127	FOR_1	FOR_3
0x4003626	        0x8b542408	                mov edx, dword [rsp + 8]	      4208	intel_display.c	FUNCTION_127	FOR_1	CALL_51
0x400362a	    0x48c7c6000000	                              mov rsi, 0	      4208	intel_display.c	FUNCTION_127	FOR_1	CALL_51
0x4003631	      0xbf04000000	                              mov edi, 4	      4208	intel_display.c	FUNCTION_127	FOR_1	CALL_51
0x4003636	      0xe800000000	                          call 0x400363b	      4208	intel_display.c	FUNCTION_127	FOR_1	CALL_51
0x400363b	      0x8344240401	                  add dword [rsp + 4], 1	      4120	intel_display.c	FUNCTION_127	FOR_1	CALL_10
0x4003640	        0x8b442404	                mov eax, dword [rsp + 4]	      4120	intel_display.c	FUNCTION_127	FOR_1	CALL_10
0x4003644	          0x83f808	                              cmp eax, 8	      4120	intel_display.c	FUNCTION_127	FOR_1	CALL_10
0x4003647	     0xf85aefeffff	                           jne 0x40034fb	      4120	intel_display.c	FUNCTION_127	FOR_1	CALL_10
0x400364d	        0x4883c418	                           add rsp, 0x18	      4213	intel_display.c	FUNCTION_127
0x4003651	    0x48c7c6000000	                              mov rsi, 0	      4212	intel_display.c	FUNCTION_127	CALL_52
0x4003658	      0xbf04000000	                              mov edi, 4	      4212	intel_display.c	FUNCTION_127	CALL_52
0x400365d	              0x5b	                                 pop rbx	      4213	intel_display.c	FUNCTION_127
0x400365e	              0x5d	                                 pop rbp	      4213	intel_display.c	FUNCTION_127
0x400365f	            0x415c	                                 pop r12	      4213	intel_display.c	FUNCTION_127
0x4003661	            0x415d	                                 pop r13	      4213	intel_display.c	FUNCTION_127
0x4003663	            0x415e	                                 pop r14	      4213	intel_display.c	FUNCTION_127
0x4003665	            0x415f	                                 pop r15	      4213	intel_display.c	FUNCTION_127
0x4003667	      0xe900000000	                           jmp 0x400366c	      4212	intel_display.c	FUNCTION_127	CALL_52
0x400366c	          0x4489e2	                           mov edx, r12d	      4200	intel_display.c	FUNCTION_127	FOR_1	FOR_3	IF_3	CALL_48
0x400366f	            0x89de	                            mov esi, ebx	      4200	intel_display.c	FUNCTION_127	FOR_1	FOR_3	IF_3	CALL_48
0x4003671	          0x4c89ff	                            mov rdi, r15	      4200	intel_display.c	FUNCTION_127	FOR_1	FOR_3	IF_3	CALL_48
0x4003674	          0x80ce02	                                or dh, 2	      4200	intel_display.c	FUNCTION_127	FOR_1	FOR_3	IF_3	CALL_48
0x4003677	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	      4200	intel_display.c	FUNCTION_127	FOR_1	FOR_3	IF_3	CALL_48
0x400367e	      0xb901000000	                              mov ecx, 1	      4200	intel_display.c	FUNCTION_127	FOR_1	FOR_3	IF_3	CALL_48
0x4003683	      0xe800000000	                          call 0x4003688	      4200	intel_display.c	FUNCTION_127	FOR_1	FOR_3	IF_3	CALL_48
0x4003688	            0x89ea	                            mov edx, ebp	      4201	intel_display.c	FUNCTION_127	FOR_1	FOR_3	IF_3	CALL_49
0x400368a	    0x48c7c6000000	                              mov rsi, 0	      4201	intel_display.c	FUNCTION_127	FOR_1	FOR_3	IF_3	CALL_49
0x4003691	      0xbf04000000	                              mov edi, 4	      4201	intel_display.c	FUNCTION_127	FOR_1	FOR_3	IF_3	CALL_49
0x4003696	      0xe800000000	                          call 0x400369b	      4201	intel_display.c	FUNCTION_127	FOR_1	FOR_3	IF_3	CALL_49
0x400369b	            0xebb0	                           jmp 0x400364d	      4203	intel_display.c	FUNCTION_127	FOR_1	FOR_3	IF_3
intel_cursor_plane_format_mod_supported	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,1	15
0x4001760	    0x48b8ffffffff	           movabs rax, 0xffffffffffffff 	     13073	intel_display.c	FUNCTION_368	IF_1	CALL_1
0x400176a	          0x4839c2	                            cmp rdx, rax	     13073	intel_display.c	FUNCTION_368	IF_1	CALL_1
0x400176d	            0x7412	                            je 0x4001781	     13073	intel_display.c	FUNCTION_368	IF_1	CALL_1
0x400176f	          0x4885d2	                           test rdx, rdx	     13076	intel_display.c	FUNCTION_368
0x4001772	           0xf94c2	                                 sete dl	     13076	intel_display.c	FUNCTION_368
0x4001775	    0x81fe41523234	                     cmp esi, 0x34325241	     13076	intel_display.c	FUNCTION_368
0x400177b	           0xf94c0	                                 sete al	     13076	intel_display.c	FUNCTION_368
0x400177e	            0x21d0	                            and eax, edx	     13076	intel_display.c	FUNCTION_368
0x4001780	              0xc3	                                     ret	     13077	intel_display.c	FUNCTION_368
0x4001781	    0x48c7c6000000	                              mov rsi, 0	     13073	intel_display.c	FUNCTION_368	IF_1	CALL_1
0x4001788	    0x48c7c7000000	                              mov rdi, 0	     13073	intel_display.c	FUNCTION_368	IF_1	CALL_1
0x400178f	      0xe800000000	                          call 0x4001794	     13073	intel_display.c	FUNCTION_368	IF_1	CALL_1
0x4001794	             0xf0b	                                     ud2	     13073	intel_display.c	FUNCTION_368	IF_1	CALL_1
0x4001796	            0x31c0	                            xor eax, eax	     13074	intel_display.c	FUNCTION_368	IF_1
0x4001798	              0xc3	                                     ret	     13074	intel_display.c	FUNCTION_368	IF_1
intel_connector_free	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,3	7
0x40116f0	              0x53	                                push rbx	      6173	intel_display.c	FUNCTION_188
0x40116f1	          0x4889fb	                            mov rbx, rdi	      6173	intel_display.c	FUNCTION_188
0x40116f4	    0x488bbff00300	           mov rdi, qword [rdi + 0x3f0] 	      6174	intel_display.c	FUNCTION_188	CALL_2
0x40116fb	      0xe800000000	                          call 0x4011700	      6174	intel_display.c	FUNCTION_188	CALL_2
0x4011700	          0x4889df	                            mov rdi, rbx	      6175	intel_display.c	FUNCTION_188	CALL_3
0x4011703	              0x5b	                                 pop rbx	      6176	intel_display.c	FUNCTION_188
0x4011704	      0xe900000000	                           jmp 0x4011709	      6175	intel_display.c	FUNCTION_188	CALL_3
intel_display_print_error_state	FOR,1:SWITCH,0:DO,0:WHILE,0:IF,2:ELSE,0:functions,1:CALL,16	187
0x401aec0	          0x4885f6	                           test rsi, rsi	     15617	intel_display.c	FUNCTION_428	IF_1
0x401aec3	     0xf84d2020000	                            je 0x401b19b	     15617	intel_display.c	FUNCTION_428	IF_1
0x401aec9	            0x4157	                                push r15	     15613	intel_display.c	FUNCTION_428
0x401aecb	            0x4156	                                push r14	     15613	intel_display.c	FUNCTION_428
0x401aecd	            0x4155	                                push r13	     15613	intel_display.c	FUNCTION_428
0x401aecf	            0x4154	                                push r12	     15613	intel_display.c	FUNCTION_428
0x401aed1	              0x55	                                push rbp	     15613	intel_display.c	FUNCTION_428
0x401aed2	              0x53	                                push rbx	     15613	intel_display.c	FUNCTION_428
0x401aed3	          0x4889f5	                            mov rbp, rsi	     15613	intel_display.c	FUNCTION_428
0x401aed6	    0x48c7c6000000	                              mov rsi, 0	     15620	intel_display.c	FUNCTION_428	CALL_2
0x401aedd	          0x4889fb	                            mov rbx, rdi	     15620	intel_display.c	FUNCTION_428	CALL_2
0x401aee0	        0x4883ec08	                              sub rsp, 8	     15613	intel_display.c	FUNCTION_428
0x401aee4	          0x488b07	                    mov rax, qword [rdi]	     15614	intel_display.c	FUNCTION_428
0x401aee7	     0xfb690700600	          movzx edx, byte [rax + 0x670] 	     15620	intel_display.c	FUNCTION_428	CALL_2
0x401aeee	          0x4989c6	                            mov r14, rax	     15614	intel_display.c	FUNCTION_428
0x401aef1	        0x48890424	                    mov qword [rsp], rax	     15614	intel_display.c	FUNCTION_428
0x401aef5	      0xe800000000	                          call 0x401aefa	     15620	intel_display.c	FUNCTION_428	CALL_2
0x401aefa	    0x41f786640600	     test dword [r14 + 0x664], 0x180000 	     15621	intel_display.c	FUNCTION_428	IF_2	CALL_4
0x401af05	     0xf8510030000	                           jne 0x401b21b	     15621	intel_display.c	FUNCTION_428	IF_2	CALL_4
0x401af0b	        0x488b0424	                    mov rax, qword [rsp]	     15624	intel_display.c	FUNCTION_428	FUNCTION_1
0x401af0f	    0x80b870060000	               cmp byte [rax + 0x670], 0	     15624	intel_display.c	FUNCTION_428	FUNCTION_1
0x401af16	     0xf844d010000	                            je 0x401b069	     15624	intel_display.c	FUNCTION_428	FUNCTION_1
0x401af1c	        0x4c8d7d38	                   lea r15, [rbp + 0x38]	     15624	intel_display.c	FUNCTION_428	FUNCTION_1
0x401af20	        0x4c8d7508	                      lea r14, [rbp + 8]	     15624	intel_display.c	FUNCTION_428	FUNCTION_1
0x401af24	        0x4c8d6d70	                   lea r13, [rbp + 0x70]	     15624	intel_display.c	FUNCTION_428	FUNCTION_1
0x401af28	          0x4531e4	                          xor r12d, r12d	     15624	intel_display.c	FUNCTION_428	FUNCTION_1
0x401af2b	          0x4489e2	                           mov edx, r12d	     15625	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_1
0x401af2e	    0x48c7c6000000	                              mov rsi, 0	     15625	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_1
0x401af35	          0x4889df	                            mov rdi, rbx	     15625	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_1
0x401af38	      0xe800000000	                          call 0x401af3d	     15625	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_1
0x401af3d	        0x41803f00	                       cmp byte [r15], 0	       150	i915_utils.h	FUNCTION_472
0x401af41	    0x48c7c0000000	                              mov rax, 0	       150	i915_utils.h	FUNCTION_472
0x401af48	    0x48c7c2000000	                              mov rdx, 0	       150	i915_utils.h	FUNCTION_472
0x401af4f	    0x48c7c6000000	                              mov rsi, 0	     15626	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_2
0x401af56	          0x4889df	                            mov rdi, rbx	     15626	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_2
0x401af59	        0x480f44d0	                          cmove rdx, rax	       150	i915_utils.h	FUNCTION_472
0x401af5d	      0xe800000000	                          call 0x401af62	     15626	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_2
0x401af62	        0x418b5704	                mov edx, dword [r15 + 4]	     15628	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_4
0x401af66	    0x48c7c6000000	                              mov rsi, 0	     15628	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_4
0x401af6d	          0x4889df	                            mov rdi, rbx	     15628	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_4
0x401af70	      0xe800000000	                          call 0x401af75	     15628	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_4
0x401af75	        0x418b5708	                mov edx, dword [r15 + 8]	     15629	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_5
0x401af79	    0x48c7c6000000	                              mov rsi, 0	     15629	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_5
0x401af80	          0x4889df	                            mov rdi, rbx	     15629	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_5
0x401af83	      0xe800000000	                          call 0x401af88	     15629	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_5
0x401af88	          0x4489e2	                           mov edx, r12d	     15631	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_6
0x401af8b	    0x48c7c6000000	                              mov rsi, 0	     15631	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_6
0x401af92	          0x4889df	                            mov rdi, rbx	     15631	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_6
0x401af95	      0xe800000000	                          call 0x401af9a	     15631	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_6
0x401af9a	        0x418b55ec	             mov edx, dword [r13 - 0x14]	     15632	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_7
0x401af9e	    0x48c7c6000000	                              mov rsi, 0	     15632	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_7
0x401afa5	          0x4889df	                            mov rdi, rbx	     15632	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_7
0x401afa8	      0xe800000000	                          call 0x401afad	     15632	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_7
0x401afad	        0x418b55f0	             mov edx, dword [r13 - 0x10]	     15633	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_8
0x401afb1	    0x48c7c6000000	                              mov rsi, 0	     15633	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_8
0x401afb8	          0x4889df	                            mov rdi, rbx	     15633	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_8
0x401afbb	      0xe800000000	                          call 0x401afc0	     15633	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_8
0x401afc0	        0x488b0424	                    mov rax, qword [rsp]	     15634	intel_display.c	FUNCTION_428	FUNCTION_1	IF_1	CALL_9
0x401afc4	     0xfb6805c0600	          movzx eax, byte [rax + 0x65c] 	     15634	intel_display.c	FUNCTION_428	FUNCTION_1	IF_1	CALL_9
0x401afcb	            0x3c03	                               cmp al, 3	     15634	intel_display.c	FUNCTION_428	FUNCTION_1	IF_1	CALL_9
0x401afcd	     0xf86ca010000	                           jbe 0x401b19d	     15634	intel_display.c	FUNCTION_428	FUNCTION_1	IF_1	CALL_9
0x401afd3	            0x3c07	                               cmp al, 7	     15638	intel_display.c	FUNCTION_428	FUNCTION_1	IF_2	CALL_13
0x401afd5	     0xf87f9010000	                            ja 0x401b1d4	     15638	intel_display.c	FUNCTION_428	FUNCTION_1	IF_2	CALL_13
0x401afdb	        0x488b0424	                    mov rax, qword [rsp]	     15638	intel_display.c	FUNCTION_428	FUNCTION_1	IF_2	CALL_13
0x401afdf	    0xf68066060000	              test byte [rax + 0x666], 8	     15638	intel_display.c	FUNCTION_428	FUNCTION_1	IF_2	CALL_13
0x401afe6	     0xf8413020000	                            je 0x401b1ff	     15638	intel_display.c	FUNCTION_428	FUNCTION_1	IF_2	CALL_13
0x401afec	     0xfb6805c0600	          movzx eax, byte [rax + 0x65c] 	     15638	intel_display.c	FUNCTION_428	FUNCTION_1	IF_2	CALL_13
0x401aff3	            0x3c03	                               cmp al, 3	     15640	intel_display.c	FUNCTION_428	FUNCTION_1	IF_3	CALL_15
0x401aff5	     0xf87d9010000	                            ja 0x401b1d4	     15640	intel_display.c	FUNCTION_428	FUNCTION_1	IF_3	CALL_15
0x401affb	          0x4489e2	                           mov edx, r12d	     15645	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_18
0x401affe	    0x48c7c6000000	                              mov rsi, 0	     15645	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_18
0x401b005	          0x4889df	                            mov rdi, rbx	     15645	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_18
0x401b008	      0xe800000000	                          call 0x401b00d	     15645	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_18
0x401b00d	          0x418b16	                    mov edx, dword [r14]	     15646	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_19
0x401b010	    0x48c7c6000000	                              mov rsi, 0	     15646	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_19
0x401b017	          0x4889df	                            mov rdi, rbx	     15646	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_19
0x401b01a	        0x4183c401	                             add r12d, 1	     15624	intel_display.c	FUNCTION_428	FUNCTION_1
0x401b01e	        0x4983c70c	                            add r15, 0xc	     15624	intel_display.c	FUNCTION_428	FUNCTION_1
0x401b022	        0x4983c610	                           add r14, 0x10	     15624	intel_display.c	FUNCTION_428	FUNCTION_1
0x401b026	        0x4983c51c	                           add r13, 0x1c	     15624	intel_display.c	FUNCTION_428	FUNCTION_1
0x401b02a	      0xe800000000	                          call 0x401b02f	     15646	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_19
0x401b02f	        0x418b56f4	              mov edx, dword [r14 - 0xc]	     15647	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_20
0x401b033	    0x48c7c6000000	                              mov rsi, 0	     15647	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_20
0x401b03a	          0x4889df	                            mov rdi, rbx	     15647	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_20
0x401b03d	      0xe800000000	                          call 0x401b042	     15647	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_20
0x401b042	        0x418b56f8	                mov edx, dword [r14 - 8]	     15648	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_21
0x401b046	    0x48c7c6000000	                              mov rsi, 0	     15648	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_21
0x401b04d	          0x4889df	                            mov rdi, rbx	     15648	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_21
0x401b050	      0xe800000000	                          call 0x401b055	     15648	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_21
0x401b055	        0x488b0424	                    mov rax, qword [rsp]	     15624	intel_display.c	FUNCTION_428	FUNCTION_1
0x401b059	     0xfb680700600	          movzx eax, byte [rax + 0x670] 	     15624	intel_display.c	FUNCTION_428	FUNCTION_1
0x401b060	          0x4439e0	                           cmp eax, r12d	     15624	intel_display.c	FUNCTION_428	FUNCTION_1
0x401b063	     0xf8fc2feffff	                            jg 0x401af2b	     15624	intel_display.c	FUNCTION_428	FUNCTION_1
0x401b069	          0x8b4504	                mov eax, dword [rbp + 4]	     15651	intel_display.c	FUNCTION_428	FOR_1
0x401b06c	          0x4531ff	                          xor r15d, r15d	     15651	intel_display.c	FUNCTION_428	FOR_1
0x401b06f	    0x49c7c6000000	                              mov r14, 0	       150	i915_utils.h	FUNCTION_472
0x401b076	    0x49c7c5000000	                              mov r13, 0	       150	i915_utils.h	FUNCTION_472
0x401b07d	            0x85c0	                           test eax, eax	     15651	intel_display.c	FUNCTION_428	FOR_1
0x401b07f	     0xf8e08010000	                           jle 0x401b18d	     15651	intel_display.c	FUNCTION_428	FOR_1
0x401b085	          0x4d63e7	                        movsxd r12, r15d	     15652	intel_display.c	FUNCTION_428	FOR_1	CALL_6
0x401b088	    0x48c7c2000000	                              mov rdx, 0	     15652	intel_display.c	FUNCTION_428	FOR_1	CALL_6
0x401b08f	        0x4b8d04e4	                  lea rax, [r12 + r12*8]	     15652	intel_display.c	FUNCTION_428	FOR_1	CALL_6
0x401b093	    0x8b8485b40000	    mov eax, dword [rbp + rax*4 + 0xb4] 	     15652	intel_display.c	FUNCTION_428	FOR_1	CALL_6
0x401b09a	          0x83f805	                              cmp eax, 5	     15652	intel_display.c	FUNCTION_428	FOR_1	CALL_6
0x401b09d	            0x7708	                            ja 0x401b0a7	     15652	intel_display.c	FUNCTION_428	FOR_1	CALL_6
0x401b09f	    0x488b14c50000	                  mov rdx, qword [rax*8]	     15652	intel_display.c	FUNCTION_428	FOR_1	CALL_6
0x401b0a7	    0x48c7c6000000	                              mov rsi, 0	     15652	intel_display.c	FUNCTION_428	FOR_1	CALL_6
0x401b0ae	          0x4889df	                            mov rdi, rbx	     15652	intel_display.c	FUNCTION_428	FOR_1	CALL_6
0x401b0b1	      0xe800000000	                          call 0x401b0b6	     15652	intel_display.c	FUNCTION_428	FOR_1	CALL_6
0x401b0b6	        0x4b8d04e4	                  lea rax, [r12 + r12*8]	     15654	intel_display.c	FUNCTION_428	FOR_1	CALL_8
0x401b0ba	          0x4c89ea	                            mov rdx, r13	       150	i915_utils.h	FUNCTION_472
0x401b0bd	    0x48c7c6000000	                              mov rsi, 0	     15654	intel_display.c	FUNCTION_428	FOR_1	CALL_8
0x401b0c4	          0x4889df	                            mov rdi, rbx	     15654	intel_display.c	FUNCTION_428	FOR_1	CALL_8
0x401b0c7	      0x4c8d648500	                  lea r12, [rbp + rax*4]	     15654	intel_display.c	FUNCTION_428	FOR_1	CALL_8
0x401b0cc	    0x4180bc24b000	                cmp byte [r12 + 0xb0], 0	       150	i915_utils.h	FUNCTION_472
0x401b0d5	        0x490f44d6	                          cmove rdx, r14	       150	i915_utils.h	FUNCTION_472
0x401b0d9	        0x4183c701	                             add r15d, 1	     15651	intel_display.c	FUNCTION_428	FOR_1
0x401b0dd	      0xe800000000	                          call 0x401b0e2	     15654	intel_display.c	FUNCTION_428	FOR_1	CALL_8
0x401b0e2	    0x418b9424b800	            mov edx, dword [r12 + 0xb8] 	     15656	intel_display.c	FUNCTION_428	FOR_1	CALL_10
0x401b0ea	    0x48c7c6000000	                              mov rsi, 0	     15656	intel_display.c	FUNCTION_428	FOR_1	CALL_10
0x401b0f1	          0x4889df	                            mov rdi, rbx	     15656	intel_display.c	FUNCTION_428	FOR_1	CALL_10
0x401b0f4	      0xe800000000	                          call 0x401b0f9	     15656	intel_display.c	FUNCTION_428	FOR_1	CALL_10
0x401b0f9	    0x418b9424bc00	            mov edx, dword [r12 + 0xbc] 	     15657	intel_display.c	FUNCTION_428	FOR_1	CALL_11
0x401b101	    0x48c7c6000000	                              mov rsi, 0	     15657	intel_display.c	FUNCTION_428	FOR_1	CALL_11
0x401b108	          0x4889df	                            mov rdi, rbx	     15657	intel_display.c	FUNCTION_428	FOR_1	CALL_11
0x401b10b	      0xe800000000	                          call 0x401b110	     15657	intel_display.c	FUNCTION_428	FOR_1	CALL_11
0x401b110	    0x418b9424c000	            mov edx, dword [r12 + 0xc0] 	     15658	intel_display.c	FUNCTION_428	FOR_1	CALL_12
0x401b118	    0x48c7c6000000	                              mov rsi, 0	     15658	intel_display.c	FUNCTION_428	FOR_1	CALL_12
0x401b11f	          0x4889df	                            mov rdi, rbx	     15658	intel_display.c	FUNCTION_428	FOR_1	CALL_12
0x401b122	      0xe800000000	                          call 0x401b127	     15658	intel_display.c	FUNCTION_428	FOR_1	CALL_12
0x401b127	    0x418b9424c400	            mov edx, dword [r12 + 0xc4] 	     15659	intel_display.c	FUNCTION_428	FOR_1	CALL_13
0x401b12f	    0x48c7c6000000	                              mov rsi, 0	     15659	intel_display.c	FUNCTION_428	FOR_1	CALL_13
0x401b136	          0x4889df	                            mov rdi, rbx	     15659	intel_display.c	FUNCTION_428	FOR_1	CALL_13
0x401b139	      0xe800000000	                          call 0x401b13e	     15659	intel_display.c	FUNCTION_428	FOR_1	CALL_13
0x401b13e	    0x418b9424c800	            mov edx, dword [r12 + 0xc8] 	     15660	intel_display.c	FUNCTION_428	FOR_1	CALL_14
0x401b146	    0x48c7c6000000	                              mov rsi, 0	     15660	intel_display.c	FUNCTION_428	FOR_1	CALL_14
0x401b14d	          0x4889df	                            mov rdi, rbx	     15660	intel_display.c	FUNCTION_428	FOR_1	CALL_14
0x401b150	      0xe800000000	                          call 0x401b155	     15660	intel_display.c	FUNCTION_428	FOR_1	CALL_14
0x401b155	    0x418b9424cc00	            mov edx, dword [r12 + 0xcc] 	     15661	intel_display.c	FUNCTION_428	FOR_1	CALL_15
0x401b15d	    0x48c7c6000000	                              mov rsi, 0	     15661	intel_display.c	FUNCTION_428	FOR_1	CALL_15
0x401b164	          0x4889df	                            mov rdi, rbx	     15661	intel_display.c	FUNCTION_428	FOR_1	CALL_15
0x401b167	      0xe800000000	                          call 0x401b16c	     15661	intel_display.c	FUNCTION_428	FOR_1	CALL_15
0x401b16c	    0x418b9424d000	            mov edx, dword [r12 + 0xd0] 	     15662	intel_display.c	FUNCTION_428	FOR_1	CALL_16
0x401b174	    0x48c7c6000000	                              mov rsi, 0	     15662	intel_display.c	FUNCTION_428	FOR_1	CALL_16
0x401b17b	          0x4889df	                            mov rdi, rbx	     15662	intel_display.c	FUNCTION_428	FOR_1	CALL_16
0x401b17e	      0xe800000000	                          call 0x401b183	     15662	intel_display.c	FUNCTION_428	FOR_1	CALL_16
0x401b183	        0x44397d04	               cmp dword [rbp + 4], r15d	     15651	intel_display.c	FUNCTION_428	FOR_1
0x401b187	     0xf8ff8feffff	                            jg 0x401b085	     15651	intel_display.c	FUNCTION_428	FOR_1
0x401b18d	        0x4883c408	                              add rsp, 8	     15664	intel_display.c	FUNCTION_428
0x401b191	              0x5b	                                 pop rbx	     15664	intel_display.c	FUNCTION_428
0x401b192	              0x5d	                                 pop rbp	     15664	intel_display.c	FUNCTION_428
0x401b193	            0x415c	                                 pop r12	     15664	intel_display.c	FUNCTION_428
0x401b195	            0x415d	                                 pop r13	     15664	intel_display.c	FUNCTION_428
0x401b197	            0x415e	                                 pop r14	     15664	intel_display.c	FUNCTION_428
0x401b199	            0x415f	                                 pop r15	     15664	intel_display.c	FUNCTION_428
0x401b19b	            0xf3c3	                                     ret	     15664	intel_display.c	FUNCTION_428
0x401b19d	        0x418b55f4	              mov edx, dword [r13 - 0xc]	     15635	intel_display.c	FUNCTION_428	FUNCTION_1	IF_1	CALL_10
0x401b1a1	    0x48c7c6000000	                              mov rsi, 0	     15635	intel_display.c	FUNCTION_428	FUNCTION_1	IF_1	CALL_10
0x401b1a8	          0x4889df	                            mov rdi, rbx	     15635	intel_display.c	FUNCTION_428	FUNCTION_1	IF_1	CALL_10
0x401b1ab	      0xe800000000	                          call 0x401b1b0	     15635	intel_display.c	FUNCTION_428	FUNCTION_1	IF_1	CALL_10
0x401b1b0	        0x418b55f8	                mov edx, dword [r13 - 8]	     15636	intel_display.c	FUNCTION_428	FUNCTION_1	IF_1	CALL_11
0x401b1b4	    0x48c7c6000000	                              mov rsi, 0	     15636	intel_display.c	FUNCTION_428	FUNCTION_1	IF_1	CALL_11
0x401b1bb	          0x4889df	                            mov rdi, rbx	     15636	intel_display.c	FUNCTION_428	FUNCTION_1	IF_1	CALL_11
0x401b1be	      0xe800000000	                          call 0x401b1c3	     15636	intel_display.c	FUNCTION_428	FUNCTION_1	IF_1	CALL_11
0x401b1c3	        0x488b0424	                    mov rax, qword [rsp]	     15638	intel_display.c	FUNCTION_428	FUNCTION_1	IF_2	CALL_13
0x401b1c7	    0x80b85c060000	               cmp byte [rax + 0x65c], 7	     15638	intel_display.c	FUNCTION_428	FUNCTION_1	IF_2	CALL_13
0x401b1ce	     0xf8607feffff	                           jbe 0x401afdb	     15638	intel_display.c	FUNCTION_428	FUNCTION_1	IF_2	CALL_13
0x401b1d4	        0x418b5500	                    mov edx, dword [r13]	     15641	intel_display.c	FUNCTION_428	FUNCTION_1	IF_3	CALL_16
0x401b1d8	          0x4889df	                            mov rdi, rbx	     15641	intel_display.c	FUNCTION_428	FUNCTION_1	IF_3	CALL_16
0x401b1db	    0x48c7c6000000	                              mov rsi, 0	     15641	intel_display.c	FUNCTION_428	FUNCTION_1	IF_3	CALL_16
0x401b1e2	      0xe800000000	                          call 0x401b1e7	     15641	intel_display.c	FUNCTION_428	FUNCTION_1	IF_3	CALL_16
0x401b1e7	        0x418b5504	                mov edx, dword [r13 + 4]	     15642	intel_display.c	FUNCTION_428	FUNCTION_1	IF_3	CALL_17
0x401b1eb	    0x48c7c6000000	                              mov rsi, 0	     15642	intel_display.c	FUNCTION_428	FUNCTION_1	IF_3	CALL_17
0x401b1f2	          0x4889df	                            mov rdi, rbx	     15642	intel_display.c	FUNCTION_428	FUNCTION_1	IF_3	CALL_17
0x401b1f5	      0xe800000000	                          call 0x401b1fa	     15642	intel_display.c	FUNCTION_428	FUNCTION_1	IF_3	CALL_17
0x401b1fa	      0xe9fcfdffff	                           jmp 0x401affb	     15642	intel_display.c	FUNCTION_428	FUNCTION_1	IF_3	CALL_17
0x401b1ff	        0x418b55fc	                mov edx, dword [r13 - 4]	     15639	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_14
0x401b203	    0x48c7c6000000	                              mov rsi, 0	     15639	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_14
0x401b20a	          0x4889df	                            mov rdi, rbx	     15639	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_14
0x401b20d	      0xe800000000	                          call 0x401b212	     15639	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_14
0x401b212	        0x488b0424	                    mov rax, qword [rsp]	     15639	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_14
0x401b216	      0xe9d1fdffff	                           jmp 0x401afec	     15639	intel_display.c	FUNCTION_428	FUNCTION_1	CALL_14
0x401b21b	          0x8b5500	                    mov edx, dword [rbp]	     15622	intel_display.c	FUNCTION_428	IF_2	CALL_5
0x401b21e	    0x48c7c6000000	                              mov rsi, 0	     15622	intel_display.c	FUNCTION_428	IF_2	CALL_5
0x401b225	          0x4889df	                            mov rdi, rbx	     15622	intel_display.c	FUNCTION_428	IF_2	CALL_5
0x401b228	      0xe800000000	                          call 0x401b22d	     15622	intel_display.c	FUNCTION_428	IF_2	CALL_5
0x401b22d	      0xe9d9fcffff	                           jmp 0x401af0b	     15622	intel_display.c	FUNCTION_428	IF_2	CALL_5
hsw_crtc_state_ips_capable	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,4:ELSE,0:functions,0:CALL,4	33
0x4011760	          0x488b37	                    mov rsi, qword [rdi]	      6317	intel_display.c	FUNCTION_193	CALL_1
0x4011763	          0x488b0e	                    mov rcx, qword [rsi]	      6318	intel_display.c	FUNCTION_193	CALL_2
0x4011766	    0x8b9164060000	           mov edx, dword [rcx + 0x664] 	      5451	intel_display.c	FUNCTION_165	CALL_2
0x401176c	    0xf7c200000800	                       test edx, 0x80000	      5451	intel_display.c	FUNCTION_165	CALL_2
0x4011772	            0x740f	                            je 0x4011783	      5451	intel_display.c	FUNCTION_165	CALL_2
0x4011774	     0xfb781580600	          movzx eax, word [rcx + 0x658] 	      5451	intel_display.c	FUNCTION_165	CALL_2
0x401177b	            0x30c0	                              xor al, al	      5451	intel_display.c	FUNCTION_165	CALL_2
0x401177d	        0x663d000a	                           cmp ax, 0xa00	      5451	intel_display.c	FUNCTION_165	CALL_2
0x4011781	            0x740a	                            je 0x401178d	      5451	intel_display.c	FUNCTION_165	CALL_2
0x4011783	            0x31c0	                            xor eax, eax	      6322	intel_display.c	FUNCTION_193	IF_1
0x4011785	    0xf7c200001000	                      test edx, 0x100000	      5451	intel_display.c	FUNCTION_165	CALL_2
0x401178b	            0x7449	                            je 0x40117d6	      5451	intel_display.c	FUNCTION_165	CALL_2
0x401178d	    0x448b86b00400	           mov r8d, dword [rsi + 0x4b0] 	      5451	intel_display.c	FUNCTION_165	CALL_2
0x4011794	            0x31c0	                            xor eax, eax	      6322	intel_display.c	FUNCTION_193	IF_1
0x4011796	          0x4585c0	                           test r8d, r8d	      5451	intel_display.c	FUNCTION_165	CALL_2
0x4011799	            0x753d	                           jne 0x40117d8	      5451	intel_display.c	FUNCTION_165	CALL_2
0x401179b	    0x8b3500000000	            mov esi, dword [0x040117a1] 	      6324	intel_display.c	FUNCTION_193	IF_2
0x40117a1	            0x85f6	                           test esi, esi	      6324	intel_display.c	FUNCTION_193	IF_2
0x40117a3	            0x7431	                            je 0x40117d6	      6324	intel_display.c	FUNCTION_193	IF_2
0x40117a5	    0x83bfdc020000	          cmp dword [rdi + 0x2dc], 0x18 	      6327	intel_display.c	FUNCTION_193	IF_3
0x40117ac	            0x7f28	                            jg 0x40117d6	      6327	intel_display.c	FUNCTION_193	IF_3
0x40117ae	    0x81e200001000	                       and edx, 0x100000	      6337	intel_display.c	FUNCTION_193	IF_4	CALL_4
0x40117b4	      0xb801000000	                              mov eax, 1	      6341	intel_display.c	FUNCTION_193
0x40117b9	            0x741b	                            je 0x40117d6	      6337	intel_display.c	FUNCTION_193	IF_4	CALL_4
0x40117bb	    0x6b81d4540000	    imul eax, dword [rcx + 0x54d4], 0x5f	      6337	intel_display.c	FUNCTION_193	IF_4	CALL_4
0x40117c2	      0xba1f85eb51	                     mov edx, 0x51eb851f	      6337	intel_display.c	FUNCTION_193	IF_4	CALL_4
0x40117c7	            0xf7e2	                                 mul edx	      6337	intel_display.c	FUNCTION_193	IF_4	CALL_4
0x40117c9	          0xc1ea05	                              shr edx, 5	      6337	intel_display.c	FUNCTION_193	IF_4	CALL_4
0x40117cc	    0x399734020000	           cmp dword [rdi + 0x234], edx 	      6337	intel_display.c	FUNCTION_193	IF_4	CALL_4
0x40117d2	           0xf96c0	                                setbe al	      6337	intel_display.c	FUNCTION_193	IF_4	CALL_4
0x40117d5	              0xc3	                                     ret	      6337	intel_display.c	FUNCTION_193	IF_4	CALL_4
0x40117d6	            0xf3c3	                                     ret	      6342	intel_display.c	FUNCTION_193
0x40117d8	            0xf3c3	                                     ret	      6342	intel_display.c	FUNCTION_193
__intel_adjust_tile_offset	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,3	87
0x4001420	            0x4157	                                push r15	      2237	intel_display.c	FUNCTION_80
0x4001422	            0x4156	                                push r14	      2237	intel_display.c	FUNCTION_80
0x4001424	        0x418d40ff	                       lea eax, [r8 - 1]	      2241	intel_display.c	FUNCTION_80	CALL_1
0x4001428	            0x4155	                                push r13	      2237	intel_display.c	FUNCTION_80
0x400142a	            0x4154	                                push r12	      2237	intel_display.c	FUNCTION_80
0x400142c	          0x4589cf	                           mov r15d, r9d	      2238	intel_display.c	FUNCTION_80
0x400142f	              0x55	                                push rbp	      2237	intel_display.c	FUNCTION_80
0x4001430	              0x53	                                push rbx	      2237	intel_display.c	FUNCTION_80
0x4001431	          0x4989fc	                            mov r12, rdi	      2237	intel_display.c	FUNCTION_80
0x4001434	        0x440faffa	                          imul r15d, edx	      2238	intel_display.c	FUNCTION_80
0x4001438	          0x4989f5	                            mov r13, rsi	      2237	intel_display.c	FUNCTION_80
0x400143b	            0x89d5	                            mov ebp, edx	      2237	intel_display.c	FUNCTION_80
0x400143d	        0x4883ec10	                           sub rsp, 0x10	      2237	intel_display.c	FUNCTION_80
0x4001441	        0x8b5c2448	            mov ebx, dword [rsp + 0x48] 	      2237	intel_display.c	FUNCTION_80
0x4001445	      0x448b742450	           mov r14d, dword [rsp + 0x50] 	      2237	intel_display.c	FUNCTION_80
0x400144a	            0x85d8	                           test eax, ebx	      2241	intel_display.c	FUNCTION_80	CALL_1
0x400144c	            0x7560	                           jne 0x40014ae	      2241	intel_display.c	FUNCTION_80	CALL_1
0x400144e	          0x4485f0	                          test eax, r14d	      2242	intel_display.c	FUNCTION_80	CALL_2
0x4001451	     0xf8597000000	                           jne 0x40014ee	      2242	intel_display.c	FUNCTION_80	CALL_2
0x4001457	          0x4439f3	                           cmp ebx, r14d	      2243	intel_display.c	FUNCTION_80	CALL_3
0x400145a	     0xf82c6000000	                            jb 0x4001526	      2243	intel_display.c	FUNCTION_80	CALL_3
0x4001460	            0x89d8	                            mov eax, ebx	      2245	intel_display.c	FUNCTION_80
0x4001462	            0x31d2	                            xor edx, edx	      2245	intel_display.c	FUNCTION_80
0x4001464	          0x4429f0	                           sub eax, r14d	      2245	intel_display.c	FUNCTION_80
0x4001467	          0x41f7f0	                                 div r8d	      2245	intel_display.c	FUNCTION_80
0x400146a	            0x31d2	                            xor edx, edx	      2247	intel_display.c	FUNCTION_80
0x400146c	          0x41f7f1	                                 div r9d	      2247	intel_display.c	FUNCTION_80
0x400146f	           0xfafc1	                           imul eax, ecx	      2247	intel_display.c	FUNCTION_80
0x4001472	        0x41014500	                    add dword [r13], eax	      2247	intel_display.c	FUNCTION_80
0x4001476	        0x418b0424	                    mov eax, dword [r12]	      2248	intel_display.c	FUNCTION_80
0x400147a	           0xfafea	                           imul ebp, edx	      2248	intel_display.c	FUNCTION_80
0x400147d	            0x31d2	                            xor edx, edx	      2251	intel_display.c	FUNCTION_80
0x400147f	             0x1e8	                            add eax, ebp	      2248	intel_display.c	FUNCTION_80
0x4001481	        0x41890424	                    mov dword [r12], eax	      2248	intel_display.c	FUNCTION_80
0x4001485	          0x41f7f7	                                div r15d	      2251	intel_display.c	FUNCTION_80
0x4001488	            0x31d2	                            xor edx, edx	      2252	intel_display.c	FUNCTION_80
0x400148a	           0xfafc1	                           imul eax, ecx	      2251	intel_display.c	FUNCTION_80
0x400148d	        0x41014500	                    add dword [r13], eax	      2251	intel_display.c	FUNCTION_80
0x4001491	        0x418b0424	                    mov eax, dword [r12]	      2252	intel_display.c	FUNCTION_80
0x4001495	          0x41f7f7	                                div r15d	      2252	intel_display.c	FUNCTION_80
0x4001498	          0x4489f0	                           mov eax, r14d	      2255	intel_display.c	FUNCTION_80
0x400149b	        0x41891424	                    mov dword [r12], edx	      2252	intel_display.c	FUNCTION_80
0x400149f	        0x4883c410	                           add rsp, 0x10	      2255	intel_display.c	FUNCTION_80
0x40014a3	              0x5b	                                 pop rbx	      2255	intel_display.c	FUNCTION_80
0x40014a4	              0x5d	                                 pop rbp	      2255	intel_display.c	FUNCTION_80
0x40014a5	            0x415c	                                 pop r12	      2255	intel_display.c	FUNCTION_80
0x40014a7	            0x415d	                                 pop r13	      2255	intel_display.c	FUNCTION_80
0x40014a9	            0x415e	                                 pop r14	      2255	intel_display.c	FUNCTION_80
0x40014ab	            0x415f	                                 pop r15	      2255	intel_display.c	FUNCTION_80
0x40014ad	              0xc3	                                     ret	      2255	intel_display.c	FUNCTION_80
0x40014ae	    0x48c7c6000000	                              mov rsi, 0	      2241	intel_display.c	FUNCTION_80	CALL_1
0x40014b5	    0x48c7c7000000	                              mov rdi, 0	      2241	intel_display.c	FUNCTION_80	CALL_1
0x40014bc	      0x44894c240c	              mov dword [rsp + 0xc], r9d	      2241	intel_display.c	FUNCTION_80	CALL_1
0x40014c1	      0x4489442408	                mov dword [rsp + 8], r8d	      2241	intel_display.c	FUNCTION_80	CALL_1
0x40014c6	        0x894c2404	                mov dword [rsp + 4], ecx	      2241	intel_display.c	FUNCTION_80	CALL_1
0x40014ca	          0x890424	                    mov dword [rsp], eax	      2241	intel_display.c	FUNCTION_80	CALL_1
0x40014cd	      0xe800000000	                          call 0x40014d2	      2241	intel_display.c	FUNCTION_80	CALL_1
0x40014d2	             0xf0b	                                     ud2	      2241	intel_display.c	FUNCTION_80	CALL_1
0x40014d4	          0x8b0424	                    mov eax, dword [rsp]	      2241	intel_display.c	FUNCTION_80	CALL_1
0x40014d7	      0x448b4c240c	              mov r9d, dword [rsp + 0xc]	      2241	intel_display.c	FUNCTION_80	CALL_1
0x40014dc	      0x448b442408	                mov r8d, dword [rsp + 8]	      2241	intel_display.c	FUNCTION_80	CALL_1
0x40014e1	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      2241	intel_display.c	FUNCTION_80	CALL_1
0x40014e5	          0x4485f0	                          test eax, r14d	      2242	intel_display.c	FUNCTION_80	CALL_2
0x40014e8	     0xf8469ffffff	                            je 0x4001457	      2242	intel_display.c	FUNCTION_80	CALL_2
0x40014ee	    0x48c7c6000000	                              mov rsi, 0	      2242	intel_display.c	FUNCTION_80	CALL_2
0x40014f5	    0x48c7c7000000	                              mov rdi, 0	      2242	intel_display.c	FUNCTION_80	CALL_2
0x40014fc	      0x44894c2408	                mov dword [rsp + 8], r9d	      2242	intel_display.c	FUNCTION_80	CALL_2
0x4001501	      0x4489442404	                mov dword [rsp + 4], r8d	      2242	intel_display.c	FUNCTION_80	CALL_2
0x4001506	          0x890c24	                    mov dword [rsp], ecx	      2242	intel_display.c	FUNCTION_80	CALL_2
0x4001509	      0xe800000000	                          call 0x400150e	      2242	intel_display.c	FUNCTION_80	CALL_2
0x400150e	             0xf0b	                                     ud2	      2242	intel_display.c	FUNCTION_80	CALL_2
0x4001510	          0x4439f3	                           cmp ebx, r14d	      2243	intel_display.c	FUNCTION_80	CALL_3
0x4001513	      0x448b4c2408	                mov r9d, dword [rsp + 8]	      2242	intel_display.c	FUNCTION_80	CALL_2
0x4001518	      0x448b442404	                mov r8d, dword [rsp + 4]	      2242	intel_display.c	FUNCTION_80	CALL_2
0x400151d	          0x8b0c24	                    mov ecx, dword [rsp]	      2242	intel_display.c	FUNCTION_80	CALL_2
0x4001520	     0xf833affffff	                           jae 0x4001460	      2243	intel_display.c	FUNCTION_80	CALL_3
0x4001526	    0x48c7c6000000	                              mov rsi, 0	      2243	intel_display.c	FUNCTION_80	CALL_3
0x400152d	    0x48c7c7000000	                              mov rdi, 0	      2243	intel_display.c	FUNCTION_80	CALL_3
0x4001534	      0x44894c2408	                mov dword [rsp + 8], r9d	      2243	intel_display.c	FUNCTION_80	CALL_3
0x4001539	      0x4489442404	                mov dword [rsp + 4], r8d	      2243	intel_display.c	FUNCTION_80	CALL_3
0x400153e	          0x890c24	                    mov dword [rsp], ecx	      2243	intel_display.c	FUNCTION_80	CALL_3
0x4001541	      0xe800000000	                          call 0x4001546	      2243	intel_display.c	FUNCTION_80	CALL_3
0x4001546	             0xf0b	                                     ud2	      2243	intel_display.c	FUNCTION_80	CALL_3
0x4001548	      0x448b4c2408	                mov r9d, dword [rsp + 8]	      2243	intel_display.c	FUNCTION_80	CALL_3
0x400154d	      0x448b442404	                mov r8d, dword [rsp + 4]	      2243	intel_display.c	FUNCTION_80	CALL_3
0x4001552	          0x8b0c24	                    mov ecx, dword [rsp]	      2243	intel_display.c	FUNCTION_80	CALL_3
0x4001555	      0xe906ffffff	                           jmp 0x4001460	      2243	intel_display.c	FUNCTION_80	CALL_3
intel_tile_dims	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,3	32
0x40018d0	            0x4155	                                push r13	      1978	intel_display.c	FUNCTION_67
0x40018d2	            0x4154	                                push r12	      1978	intel_display.c	FUNCTION_67
0x40018d4	          0x4989d5	                            mov r13, rdx	      1978	intel_display.c	FUNCTION_67
0x40018d7	              0x55	                                push rbp	      1978	intel_display.c	FUNCTION_67
0x40018d8	              0x53	                                push rbx	      1978	intel_display.c	FUNCTION_67
0x40018d9	          0x4863de	                         movsxd rbx, esi	      1978	intel_display.c	FUNCTION_67
0x40018dc	          0x4889fd	                            mov rbp, rdi	      1978	intel_display.c	FUNCTION_67
0x40018df	            0x89de	                            mov esi, ebx	      1979	intel_display.c	FUNCTION_67	CALL_1
0x40018e1	          0x4989cc	                            mov r12, rcx	      1978	intel_display.c	FUNCTION_67
0x40018e4	      0xe8b7feffff	         call sym.intel_tile_width_bytes	      1979	intel_display.c	FUNCTION_67	CALL_1
0x40018e9	            0x89c7	                            mov edi, eax	      1979	intel_display.c	FUNCTION_67	CALL_1
0x40018eb	        0x488b4548	            mov rax, qword [rbp + 0x48] 	      1980	intel_display.c	FUNCTION_67
0x40018ef	            0x31d2	                            xor edx, edx	      1982	intel_display.c	FUNCTION_67
0x40018f1	       0xfb6741806	        movzx esi, byte [rax + rbx + 6] 	      1982	intel_display.c	FUNCTION_67
0x40018f6	            0x89f8	                            mov eax, edi	      1982	intel_display.c	FUNCTION_67
0x40018f8	              0x5b	                                 pop rbx	      1984	intel_display.c	FUNCTION_67
0x40018f9	            0xf7f6	                                 div esi	      1982	intel_display.c	FUNCTION_67
0x40018fb	        0x41894500	                    mov dword [r13], eax	      1982	intel_display.c	FUNCTION_67
0x40018ff	        0x488b4500	                    mov rax, qword [rbp]	      1913	intel_display.c	FUNCTION_64	CALL_1
0x4001903	              0x5d	                                 pop rbp	      1984	intel_display.c	FUNCTION_67
0x4001904	     0xfb7805a0600	          movzx eax, word [rax + 0x65a] 	      1913	intel_display.c	FUNCTION_64	CALL_1
0x400190b	          0x83e002	                              and eax, 2	      1913	intel_display.c	FUNCTION_64	CALL_1
0x400190e	        0x6683f801	                               cmp ax, 1	      1913	intel_display.c	FUNCTION_64	CALL_1
0x4001912	            0x19c0	                            sbb eax, eax	      1913	intel_display.c	FUNCTION_64	CALL_1
0x4001914	            0x31d2	                            xor edx, edx	      1983	intel_display.c	FUNCTION_67	CALL_3
0x4001916	      0x2500080000	                          and eax, 0x800	      1913	intel_display.c	FUNCTION_64	CALL_1
0x400191b	       0x500080000	                          add eax, 0x800	      1913	intel_display.c	FUNCTION_64	CALL_1
0x4001920	            0xf7f7	                                 div edi	      1983	intel_display.c	FUNCTION_67	CALL_3
0x4001922	        0x41890424	                    mov dword [r12], eax	      1983	intel_display.c	FUNCTION_67	CALL_3
0x4001926	            0x415c	                                 pop r12	      1984	intel_display.c	FUNCTION_67
0x4001928	            0x415d	                                 pop r13	      1984	intel_display.c	FUNCTION_67
0x400192a	              0xc3	                                     ret	      1984	intel_display.c	FUNCTION_67
skl_detach_scalers	FOR,1:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,1	29
0x4005dc0	    0x8b9768050000	           mov edx, dword [rdi + 0x568] 	      3414	intel_display.c	FUNCTION_109	FOR_1
0x4005dc6	            0x85d2	                           test edx, edx	      3414	intel_display.c	FUNCTION_109	FOR_1
0x4005dc8	            0x7e3d	                           jle 0x4005e07	      3414	intel_display.c	FUNCTION_109	FOR_1
0x4005dca	            0x4155	                                push r13	      3407	intel_display.c	FUNCTION_109
0x4005dcc	            0x4154	                                push r12	      3407	intel_display.c	FUNCTION_109
0x4005dce	    0x4c8dafb00400	                  lea r13, [rdi + 0x4b0]	      3407	intel_display.c	FUNCTION_109
0x4005dd5	              0x55	                                push rbp	      3407	intel_display.c	FUNCTION_109
0x4005dd6	              0x53	                                push rbx	      3407	intel_display.c	FUNCTION_109
0x4005dd7	          0x4989fc	                            mov r12, rdi	      3407	intel_display.c	FUNCTION_109
0x4005dda	    0x488b87c80400	           mov rax, qword [rdi + 0x4c8] 	      3407	intel_display.c	FUNCTION_109
0x4005de1	            0x31ed	                            xor ebp, ebp	      3411	intel_display.c	FUNCTION_109
0x4005de3	    0x488d98500300	                  lea rbx, [rax + 0x350]	      3411	intel_display.c	FUNCTION_109
0x4005dea	            0x8b03	                    mov eax, dword [rbx]	      3415	intel_display.c	FUNCTION_109	FOR_1	IF_1
0x4005dec	            0x85c0	                           test eax, eax	      3415	intel_display.c	FUNCTION_109	FOR_1	IF_1
0x4005dee	            0x7419	                            je 0x4005e09	      3415	intel_display.c	FUNCTION_109	FOR_1	IF_1
0x4005df0	          0x83c501	                              add ebp, 1	      3414	intel_display.c	FUNCTION_109	FOR_1
0x4005df3	        0x4883c308	                              add rbx, 8	      3414	intel_display.c	FUNCTION_109	FOR_1
0x4005df7	    0x4139ac246805	           cmp dword [r12 + 0x568], ebp 	      3414	intel_display.c	FUNCTION_109	FOR_1
0x4005dff	            0x7fe9	                            jg 0x4005dea	      3414	intel_display.c	FUNCTION_109	FOR_1
0x4005e01	              0x5b	                                 pop rbx	      3418	intel_display.c	FUNCTION_109
0x4005e02	              0x5d	                                 pop rbp	      3418	intel_display.c	FUNCTION_109
0x4005e03	            0x415c	                                 pop r12	      3418	intel_display.c	FUNCTION_109
0x4005e05	            0x415d	                                 pop r13	      3418	intel_display.c	FUNCTION_109
0x4005e07	            0xf3c3	                                     ret	      3418	intel_display.c	FUNCTION_109
0x4005e09	        0x498b3c24	                    mov rdi, qword [r12]	      3416	intel_display.c	FUNCTION_109	FOR_1	CALL_1
0x4005e0d	            0x89ea	                            mov edx, ebp	      3416	intel_display.c	FUNCTION_109	FOR_1	CALL_1
0x4005e0f	          0x4c89ee	                            mov rsi, r13	      3416	intel_display.c	FUNCTION_109	FOR_1	CALL_1
0x4005e12	      0xe829ffffff	      call sym.skl_detach_scaler.isra.71	      3416	intel_display.c	FUNCTION_109	FOR_1	CALL_1
0x4005e17	            0xebd7	                           jmp 0x4005df0	      3416	intel_display.c	FUNCTION_109	FOR_1	CALL_1
assert_fdi_rx_pll	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,5	37
0x400cec0	          0xc1e60c	                            shl esi, 0xc	      1151	intel_display.c	FUNCTION_33	CALL_2
0x400cec3	              0x53	                                push rbx	      1147	intel_display.c	FUNCTION_33
0x400cec4	            0x89d3	                            mov ebx, edx	      1147	intel_display.c	FUNCTION_33
0x400cec6	    0x81c60c000f00	                        add esi, 0xf000c	      1151	intel_display.c	FUNCTION_33	CALL_2
0x400cecc	      0xba01000000	                              mov edx, 1	      1151	intel_display.c	FUNCTION_33	CALL_2
0x400ced1	    0x488b87f80700	           mov rax, qword [rdi + 0x7f8] 	      1151	intel_display.c	FUNCTION_33	CALL_2
0x400ced8	      0xe800000000	                          call 0x400cedd	      1151	intel_display.c	FUNCTION_33	CALL_2
0x400cedd	      0x2500200000	                         and eax, 0x2000	      1153	intel_display.c	FUNCTION_33	CALL_3
0x400cee2	           0xf95c2	                                setne dl	      1153	intel_display.c	FUNCTION_33	CALL_3
0x400cee5	            0x38da	                              cmp dl, bl	      1153	intel_display.c	FUNCTION_33	CALL_3
0x400cee7	            0x7502	                           jne 0x400ceeb	      1153	intel_display.c	FUNCTION_33	CALL_3
0x400cee9	              0x5b	                                 pop rbx	      1156	intel_display.c	FUNCTION_33
0x400ceea	              0xc3	                                     ret	      1156	intel_display.c	FUNCTION_33
0x400ceeb	    0x803d00000000	                cmp byte [0x0400cef2], 0	      1153	intel_display.c	FUNCTION_33	CALL_3
0x400cef2	            0x752a	                           jne 0x400cf1e	      1153	intel_display.c	FUNCTION_33	CALL_3
0x400cef4	    0x48c7c6000000	                              mov rsi, 0	       150	i915_utils.h	FUNCTION_472
0x400cefb	    0x48c7c1000000	                              mov rcx, 0	       150	i915_utils.h	FUNCTION_472
0x400cf02	            0x85c0	                           test eax, eax	       150	i915_utils.h	FUNCTION_472
0x400cf04	          0x4889f2	                            mov rdx, rsi	       150	i915_utils.h	FUNCTION_472
0x400cf07	    0x48c7c7000000	                              mov rdi, 0	      1153	intel_display.c	FUNCTION_33	CALL_3
0x400cf0e	        0x480f45d1	                         cmovne rdx, rcx	       150	i915_utils.h	FUNCTION_472
0x400cf12	            0x84db	                             test bl, bl	       150	i915_utils.h	FUNCTION_472
0x400cf14	              0x5b	                                 pop rbx	      1156	intel_display.c	FUNCTION_33
0x400cf15	        0x480f45f1	                         cmovne rsi, rcx	       150	i915_utils.h	FUNCTION_472
0x400cf19	      0xe900000000	                           jmp 0x400cf1e	      1153	intel_display.c	FUNCTION_33	CALL_3
0x400cf1e	    0x48c7c6000000	                              mov rsi, 0	       150	i915_utils.h	FUNCTION_472
0x400cf25	    0x48c7c1000000	                              mov rcx, 0	       150	i915_utils.h	FUNCTION_472
0x400cf2c	            0x85c0	                           test eax, eax	       150	i915_utils.h	FUNCTION_472
0x400cf2e	          0x4889f2	                            mov rdx, rsi	       150	i915_utils.h	FUNCTION_472
0x400cf31	    0x48c7c7000000	                              mov rdi, 0	      1153	intel_display.c	FUNCTION_33	CALL_3
0x400cf38	        0x480f44d1	                          cmove rdx, rcx	       150	i915_utils.h	FUNCTION_472
0x400cf3c	            0x84db	                             test bl, bl	       150	i915_utils.h	FUNCTION_472
0x400cf3e	        0x480f44f1	                          cmove rsi, rcx	       150	i915_utils.h	FUNCTION_472
0x400cf42	      0xe800000000	                          call 0x400cf47	      1153	intel_display.c	FUNCTION_33	CALL_3
0x400cf47	             0xf0b	                                     ud2	      1153	intel_display.c	FUNCTION_33	CALL_3
0x400cf49	              0x5b	                                 pop rbx	      1156	intel_display.c	FUNCTION_33
0x400cf4a	              0xc3	                                     ret	      1156	intel_display.c	FUNCTION_33
i9xx_crtc_disable	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,7:ELSE,2:functions,0:CALL,22	241
0x4019c30	            0x4157	                                push r15	      5946	intel_display.c	FUNCTION_181
0x4019c32	            0x4156	                                push r14	      5946	intel_display.c	FUNCTION_181
0x4019c34	            0x4155	                                push r13	      5946	intel_display.c	FUNCTION_181
0x4019c36	            0x4154	                                push r12	      5946	intel_display.c	FUNCTION_181
0x4019c38	          0x4989f5	                            mov r13, rsi	      5946	intel_display.c	FUNCTION_181
0x4019c3b	              0x55	                                push rbp	      5946	intel_display.c	FUNCTION_181
0x4019c3c	              0x53	                                push rbx	      5946	intel_display.c	FUNCTION_181
0x4019c3d	          0x4889fd	                            mov rbp, rdi	      5946	intel_display.c	FUNCTION_181
0x4019c40	        0x4883ec30	                           sub rsp, 0x30	      5946	intel_display.c	FUNCTION_181
0x4019c44	          0x4c8b27	                    mov r12, qword [rdi]	      5947	intel_display.c	FUNCTION_181
0x4019c47	    0x65488b042528	                mov rax, qword gs:[0x28]	      5946	intel_display.c	FUNCTION_181
0x4019c50	      0x4889442428	             mov qword [rsp + 0x28], rax	      5946	intel_display.c	FUNCTION_181
0x4019c55	            0x31c0	                            xor eax, eax	      5946	intel_display.c	FUNCTION_181
0x4019c57	        0x498b1c24	                    mov rbx, qword [r12]	      5948	intel_display.c	FUNCTION_181
0x4019c5b	    0x418b8424b004	           mov eax, dword [r12 + 0x4b0] 	      5951	intel_display.c	FUNCTION_181
0x4019c63	    0xf6835a060000	              test byte [rbx + 0x65a], 2	      5957	intel_display.c	FUNCTION_181	IF_1	CALL_3
0x4019c6a	        0x89442404	                mov dword [rsp + 4], eax	      5951	intel_display.c	FUNCTION_181
0x4019c6e	     0xf856d020000	                           jne 0x4019ee1	      5957	intel_display.c	FUNCTION_181	IF_1	CALL_3
0x4019c74	        0x4d8d7528	                   lea r14, [r13 + 0x28]	      5957	intel_display.c	FUNCTION_181	IF_1	CALL_3
0x4019c78	        0x4d8d7d30	                   lea r15, [r13 + 0x30]	      5957	intel_display.c	FUNCTION_181	IF_1	CALL_3
0x4019c7c	          0x4889ee	                            mov rsi, rbp	      5960	intel_display.c	FUNCTION_181	CALL_5
0x4019c7f	          0x4c89e7	                            mov rdi, r12	      5960	intel_display.c	FUNCTION_181	CALL_5
0x4019c82	          0x4c89f2	                            mov rdx, r14	      5960	intel_display.c	FUNCTION_181	CALL_5
0x4019c85	          0x4c89f9	                            mov rcx, r15	      5960	intel_display.c	FUNCTION_181	CALL_5
0x4019c88	      0xe8b3c8feff	call sym.intel_encoders_disable.isra.101	      5960	intel_display.c	FUNCTION_181	CALL_5
0x4019c8d	          0x4c89e7	                            mov rdi, r12	      5962	intel_display.c	FUNCTION_181	CALL_6
0x4019c90	      0xe800000000	                          call 0x4019c95	      5962	intel_display.c	FUNCTION_181	CALL_6
0x4019c95	          0x4c89e7	                            mov rdi, r12	      5963	intel_display.c	FUNCTION_181	CALL_7
0x4019c98	      0xe813aafeff	         call sym.assert_vblank_disabled	      5963	intel_display.c	FUNCTION_181	CALL_7
0x4019c9d	          0x4889ef	                            mov rdi, rbp	      5965	intel_display.c	FUNCTION_181	CALL_8
0x4019ca0	      0xe82bc9feff	             call sym.intel_disable_pipe	      5965	intel_display.c	FUNCTION_181	CALL_8
0x4019ca5	    0x498b8424c804	           mov rax, qword [r12 + 0x4c8] 	      5934	intel_display.c	FUNCTION_180	IF_1
0x4019cad	    0x8b9018030000	           mov edx, dword [rax + 0x318] 	      5934	intel_display.c	FUNCTION_180	IF_1
0x4019cb3	            0x85d2	                           test edx, edx	      5934	intel_display.c	FUNCTION_180	IF_1
0x4019cb5	            0x747c	                            je 0x4019d33	      5934	intel_display.c	FUNCTION_180	IF_1
0x4019cb7	        0x4d8b0c24	                     mov r9, qword [r12]	      5931	intel_display.c	FUNCTION_180
0x4019cbb	    0x418bb424b004	           mov esi, dword [r12 + 0x4b0] 	      5937	intel_display.c	FUNCTION_180	CALL_2
0x4019cc3	            0x31d2	                            xor edx, edx	      5937	intel_display.c	FUNCTION_180	CALL_2
0x4019cc5	          0x4c89cf	                             mov rdi, r9	      5937	intel_display.c	FUNCTION_180	CALL_2
0x4019cc8	      0x4c894c2408	                 mov qword [rsp + 8], r9	      5937	intel_display.c	FUNCTION_180	CALL_2
0x4019ccd	      0xe800000000	                          call 0x4019cd2	      5937	intel_display.c	FUNCTION_180	CALL_2
0x4019cd2	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      5939	intel_display.c	FUNCTION_180	CALL_3
0x4019cd7	      0xba01000000	                              mov edx, 1	      5939	intel_display.c	FUNCTION_180	CALL_3
0x4019cdc	    0x418b896c0600	            mov ecx, dword [r9 + 0x66c] 	      5939	intel_display.c	FUNCTION_180	CALL_3
0x4019ce3	          0x4c89cf	                             mov rdi, r9	      5939	intel_display.c	FUNCTION_180	CALL_3
0x4019ce6	    0x498b81f80700	            mov rax, qword [r9 + 0x7f8] 	      5939	intel_display.c	FUNCTION_180	CALL_3
0x4019ced	    0x8db130120600	                lea esi, [rcx + 0x61230]	      5939	intel_display.c	FUNCTION_180	CALL_3
0x4019cf3	      0xe800000000	                          call 0x4019cf8	      5939	intel_display.c	FUNCTION_180	CALL_3
0x4019cf8	    0x48c7c6000000	                              mov rsi, 0	      5939	intel_display.c	FUNCTION_180	CALL_3
0x4019cff	            0x89c2	                            mov edx, eax	      5939	intel_display.c	FUNCTION_180	CALL_3
0x4019d01	      0xbf02000000	                              mov edi, 2	      5939	intel_display.c	FUNCTION_180	CALL_3
0x4019d06	      0xe800000000	                          call 0x4019d0b	      5939	intel_display.c	FUNCTION_180	CALL_3
0x4019d0b	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      5941	intel_display.c	FUNCTION_180	CALL_5
0x4019d10	            0x31d2	                            xor edx, edx	      5941	intel_display.c	FUNCTION_180	CALL_5
0x4019d12	    0x418b896c0600	            mov ecx, dword [r9 + 0x66c] 	      5941	intel_display.c	FUNCTION_180	CALL_5
0x4019d19	    0x498b81180800	            mov rax, qword [r9 + 0x818] 	      5941	intel_display.c	FUNCTION_180	CALL_5
0x4019d20	          0x4c89cf	                             mov rdi, r9	      5941	intel_display.c	FUNCTION_180	CALL_5
0x4019d23	    0x8db130120600	                lea esi, [rcx + 0x61230]	      5941	intel_display.c	FUNCTION_180	CALL_5
0x4019d29	      0xb901000000	                              mov ecx, 1	      5941	intel_display.c	FUNCTION_180	CALL_5
0x4019d2e	      0xe800000000	                          call 0x4019d33	      5941	intel_display.c	FUNCTION_180	CALL_5
0x4019d33	          0x4c89f9	                            mov rcx, r15	      5969	intel_display.c	FUNCTION_181	CALL_10
0x4019d36	          0x4c89f2	                            mov rdx, r14	      5969	intel_display.c	FUNCTION_181	CALL_10
0x4019d39	          0x4889ee	                            mov rsi, rbp	      5969	intel_display.c	FUNCTION_181	CALL_10
0x4019d3c	          0x4c89e7	                            mov rdi, r12	      5969	intel_display.c	FUNCTION_181	CALL_10
0x4019d3f	      0xe80ccafeff	call sym.intel_encoders_post_disable.isra.103	      5969	intel_display.c	FUNCTION_181	CALL_10
0x4019d44	    0x498b8424c804	           mov rax, qword [r12 + 0x4c8] 	      5969	intel_display.c	FUNCTION_181	CALL_10
0x4019d4c	    0x8b8044020000	           mov eax, dword [rax + 0x244] 	      5969	intel_display.c	FUNCTION_181	CALL_10
0x4019d52	          0xf6c402	                              test ah, 2	      5971	intel_display.c	FUNCTION_181	IF_2	CALL_11
0x4019d55	     0xf85c1000000	                           jne 0x4019e1c	      5971	intel_display.c	FUNCTION_181	IF_2	CALL_11
0x4019d5b	    0x8b9364060000	           mov edx, dword [rbx + 0x664] 	      5972	intel_display.c	FUNCTION_181	IF_2	IF_3	CALL_12
0x4019d61	    0xf7c200002000	                      test edx, 0x200000	      5972	intel_display.c	FUNCTION_181	IF_2	IF_3	CALL_12
0x4019d67	     0xf85a7010000	                           jne 0x4019f14	      5972	intel_display.c	FUNCTION_181	IF_2	IF_3	CALL_12
0x4019d6d	    0x81e200000400	                        and edx, 0x40000	      5974	intel_display.c	FUNCTION_181	IF_2	ELSE_1	IF_4	CALL_14
0x4019d73	     0xf858a010000	                           jne 0x4019f03	      5974	intel_display.c	FUNCTION_181	IF_2	ELSE_1	IF_4	CALL_14
0x4019d79	        0x4d8b3424	                    mov r14, qword [r12]	      1567	intel_display.c	FUNCTION_53	CALL_1
0x4019d7d	    0x4d63bc24b004	        movsxd r15, dword [r12 + 0x4b0] 	      1568	intel_display.c	FUNCTION_53
0x4019d85	    0x41f686640600	              test byte [r14 + 0x664], 2	      1571	intel_display.c	FUNCTION_53	IF_1	CALL_2
0x4019d8d	     0xf8592010000	                           jne 0x4019f25	      1571	intel_display.c	FUNCTION_53	IF_1	CALL_2
0x4019d93	            0x31d2	                            xor edx, edx	      1585	intel_display.c	FUNCTION_53	CALL_14
0x4019d95	          0x4489fe	                           mov esi, r15d	      1585	intel_display.c	FUNCTION_53	CALL_14
0x4019d98	          0x4c89f7	                            mov rdi, r14	      1585	intel_display.c	FUNCTION_53	CALL_14
0x4019d9b	      0xe800000000	                          call 0x4019da0	      1585	intel_display.c	FUNCTION_53	CALL_14
0x4019da0	    0x418b866c0600	           mov eax, dword [r14 + 0x66c] 	      1587	intel_display.c	FUNCTION_53	CALL_16
0x4019da7	      0xb901000000	                              mov ecx, 1	      1587	intel_display.c	FUNCTION_53	CALL_16
0x4019dac	          0x4c89f7	                            mov rdi, r14	      1587	intel_display.c	FUNCTION_53	CALL_16
0x4019daf	    0x4d8b8e180800	            mov r9, qword [r14 + 0x818] 	      1587	intel_display.c	FUNCTION_53	CALL_16
0x4019db6	    0x8d9014600000	                 lea edx, [rax + 0x6014]	      1587	intel_display.c	FUNCTION_53	CALL_16
0x4019dbc	        0x8954241c	             mov dword [rsp + 0x1c], edx	      1587	intel_display.c	FUNCTION_53	CALL_16
0x4019dc0	    0x8d9018600000	                 lea edx, [rax + 0x6018]	      1587	intel_display.c	FUNCTION_53	CALL_16
0x4019dc6	       0x530600000	                         add eax, 0x6030	      1587	intel_display.c	FUNCTION_53	CALL_16
0x4019dcb	        0x89442424	             mov dword [rsp + 0x24], eax	      1587	intel_display.c	FUNCTION_53	CALL_16
0x4019dcf	        0x89542420	             mov dword [rsp + 0x20], edx	      1587	intel_display.c	FUNCTION_53	CALL_16
0x4019dd3	      0xba00000010	                     mov edx, 0x10000000	      1587	intel_display.c	FUNCTION_53	CALL_16
0x4019dd8	      0x428b74bc1c	    mov esi, dword [rsp + r15*4 + 0x1c] 	      1587	intel_display.c	FUNCTION_53	CALL_16
0x4019ddd	      0xe800000000	                          call 0x4019de2	      1587	intel_display.c	FUNCTION_53	CALL_16
0x4019de2	    0x418b866c0600	           mov eax, dword [r14 + 0x66c] 	      1588	intel_display.c	FUNCTION_53	CALL_18
0x4019de9	    0x498b8ef80700	           mov rcx, qword [r14 + 0x7f8] 	      1588	intel_display.c	FUNCTION_53	CALL_18
0x4019df0	          0x4c89f7	                            mov rdi, r14	      1588	intel_display.c	FUNCTION_53	CALL_18
0x4019df3	    0x8d9014600000	                 lea edx, [rax + 0x6014]	      1588	intel_display.c	FUNCTION_53	CALL_18
0x4019df9	        0x89542410	             mov dword [rsp + 0x10], edx	      1588	intel_display.c	FUNCTION_53	CALL_18
0x4019dfd	    0x8d9018600000	                 lea edx, [rax + 0x6018]	      1588	intel_display.c	FUNCTION_53	CALL_18
0x4019e03	       0x530600000	                         add eax, 0x6030	      1588	intel_display.c	FUNCTION_53	CALL_18
0x4019e08	        0x89442418	             mov dword [rsp + 0x18], eax	      1588	intel_display.c	FUNCTION_53	CALL_18
0x4019e0c	        0x89542414	             mov dword [rsp + 0x14], edx	      1588	intel_display.c	FUNCTION_53	CALL_18
0x4019e10	            0x31d2	                            xor edx, edx	      1588	intel_display.c	FUNCTION_53	CALL_18
0x4019e12	      0x428b74bc10	    mov esi, dword [rsp + r15*4 + 0x10] 	      1588	intel_display.c	FUNCTION_53	CALL_18
0x4019e17	      0xe800000000	                          call 0x4019e1c	      1588	intel_display.c	FUNCTION_53	CALL_18
0x4019e1c	        0x418b4528	            mov eax, dword [r13 + 0x28] 	      5347	intel_display.c	FUNCTION_163	FUNCTION_1
0x4019e20	          0x4531f6	                          xor r14d, r14d	      5347	intel_display.c	FUNCTION_163	FUNCTION_1
0x4019e23	            0x85c0	                           test eax, eax	      5347	intel_display.c	FUNCTION_163	FUNCTION_1
0x4019e25	            0x7f0c	                            jg 0x4019e33	      5347	intel_display.c	FUNCTION_163	FUNCTION_1
0x4019e27	            0xeb47	                           jmp 0x4019e70	      5347	intel_display.c	FUNCTION_163	FUNCTION_1
0x4019e29	        0x4183c601	                             add r14d, 1	      5347	intel_display.c	FUNCTION_163	FUNCTION_1
0x4019e2d	        0x453b7528	           cmp r14d, dword [r13 + 0x28] 	      5347	intel_display.c	FUNCTION_163	FUNCTION_1
0x4019e31	            0x7d3d	                           jge 0x4019e70	      5347	intel_display.c	FUNCTION_163	FUNCTION_1
0x4019e33	          0x4963c6	                        movsxd rax, r14d	      5347	intel_display.c	FUNCTION_163	FUNCTION_1
0x4019e36	        0x48c1e005	                              shl rax, 5	      5347	intel_display.c	FUNCTION_163	FUNCTION_1
0x4019e3a	        0x49034530	             add rax, qword [r13 + 0x30]	      5347	intel_display.c	FUNCTION_163	FUNCTION_1
0x4019e3e	        0x48833800	                      cmp qword [rax], 0	      5347	intel_display.c	FUNCTION_163	FUNCTION_1
0x4019e42	            0x74e5	                            je 0x4019e29	      5347	intel_display.c	FUNCTION_163	FUNCTION_1
0x4019e44	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5347	intel_display.c	FUNCTION_163	FUNCTION_1
0x4019e48	        0x4c3b6208	                cmp r12, qword [rdx + 8]	      5351	intel_display.c	FUNCTION_163	FUNCTION_1	IF_1
0x4019e4c	            0x75db	                           jne 0x4019e29	      5351	intel_display.c	FUNCTION_163	FUNCTION_1	IF_1
0x4019e4e	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	      5349	intel_display.c	FUNCTION_163	FUNCTION_1	CALL_1
0x4019e52	    0x488b87c00000	            mov rax, qword [rdi + 0xc0] 	      5354	intel_display.c	FUNCTION_163	FUNCTION_1	IF_2
0x4019e59	          0x4885c0	                           test rax, rax	      5354	intel_display.c	FUNCTION_163	FUNCTION_1	IF_2
0x4019e5c	            0x74cb	                            je 0x4019e29	      5354	intel_display.c	FUNCTION_163	FUNCTION_1	IF_2
0x4019e5e	          0x4889ee	                            mov rsi, rbp	      5355	intel_display.c	FUNCTION_163	FUNCTION_1	CALL_2
0x4019e61	        0x4183c601	                             add r14d, 1	      5347	intel_display.c	FUNCTION_163	FUNCTION_1
0x4019e65	      0xe800000000	                          call 0x4019e6a	      5355	intel_display.c	FUNCTION_163	FUNCTION_1	CALL_2
0x4019e6a	        0x453b7528	           cmp r14d, dword [r13 + 0x28] 	      5347	intel_display.c	FUNCTION_163	FUNCTION_1
0x4019e6e	            0x7cc3	                            jl 0x4019e33	      5347	intel_display.c	FUNCTION_163	FUNCTION_1
0x4019e70	    0xf6835a060000	              test byte [rbx + 0x65a], 2	      5982	intel_display.c	FUNCTION_181	IF_5	CALL_18
0x4019e77	            0x7477	                            je 0x4019ef0	      5982	intel_display.c	FUNCTION_181	IF_5	CALL_18
0x4019e79	    0x4883bb605500	             cmp qword [rbx + 0x5560], 0	      5985	intel_display.c	FUNCTION_181	IF_6
0x4019e81	     0xf84b1010000	                            je 0x401a038	      5985	intel_display.c	FUNCTION_181	IF_6
0x4019e87	    0xf68364060000	              test byte [rbx + 0x664], 2	      5989	intel_display.c	FUNCTION_181	IF_7	CALL_21
0x4019e8e	            0x7523	                           jne 0x4019eb3	      5989	intel_display.c	FUNCTION_181	IF_7	CALL_21
0x4019e90	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5991	intel_display.c	FUNCTION_181
0x4019e95	    0x654833042528	                xor rax, qword gs:[0x28]	      5991	intel_display.c	FUNCTION_181
0x4019e9e	     0xf85a1010000	                           jne 0x401a045	      5991	intel_display.c	FUNCTION_181
0x4019ea4	        0x4883c430	                           add rsp, 0x30	      5991	intel_display.c	FUNCTION_181
0x4019ea8	              0x5b	                                 pop rbx	      5991	intel_display.c	FUNCTION_181
0x4019ea9	              0x5d	                                 pop rbp	      5991	intel_display.c	FUNCTION_181
0x4019eaa	            0x415c	                                 pop r12	      5991	intel_display.c	FUNCTION_181
0x4019eac	            0x415d	                                 pop r13	      5991	intel_display.c	FUNCTION_181
0x4019eae	            0x415e	                                 pop r14	      5991	intel_display.c	FUNCTION_181
0x4019eb0	            0x415f	                                 pop r15	      5991	intel_display.c	FUNCTION_181
0x4019eb2	              0xc3	                                     ret	      5991	intel_display.c	FUNCTION_181
0x4019eb3	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5990	intel_display.c	FUNCTION_181	CALL_22
0x4019eb8	    0x654833042528	                xor rax, qword gs:[0x28]	      5990	intel_display.c	FUNCTION_181	CALL_22
0x4019ec1	     0xf857e010000	                           jne 0x401a045	      5990	intel_display.c	FUNCTION_181	CALL_22
0x4019ec7	        0x8b742404	                mov esi, dword [rsp + 4]	      5990	intel_display.c	FUNCTION_181	CALL_22
0x4019ecb	        0x4883c430	                           add rsp, 0x30	      5991	intel_display.c	FUNCTION_181
0x4019ecf	          0x4889df	                            mov rdi, rbx	      5990	intel_display.c	FUNCTION_181	CALL_22
0x4019ed2	              0x5b	                                 pop rbx	      5991	intel_display.c	FUNCTION_181
0x4019ed3	              0x5d	                                 pop rbp	      5991	intel_display.c	FUNCTION_181
0x4019ed4	            0x415c	                                 pop r12	      5991	intel_display.c	FUNCTION_181
0x4019ed6	            0x415d	                                 pop r13	      5991	intel_display.c	FUNCTION_181
0x4019ed8	            0x415e	                                 pop r14	      5991	intel_display.c	FUNCTION_181
0x4019eda	            0x415f	                                 pop r15	      5991	intel_display.c	FUNCTION_181
0x4019edc	      0xe92ff8ffff	                jmp sym.i830_enable_pipe	      5990	intel_display.c	FUNCTION_181	CALL_22
0x4019ee1	            0x89c6	                            mov esi, eax	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x4019ee3	          0x4889df	                            mov rdi, rbx	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x4019ee6	      0xe800000000	                          call 0x4019eeb	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x4019eeb	      0xe984fdffff	                           jmp 0x4019c74	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x4019ef0	        0x8b742404	                mov esi, dword [rsp + 4]	      5983	intel_display.c	FUNCTION_181	CALL_19
0x4019ef4	            0x31d2	                            xor edx, edx	      5983	intel_display.c	FUNCTION_181	CALL_19
0x4019ef6	          0x4889df	                            mov rdi, rbx	      5983	intel_display.c	FUNCTION_181	CALL_19
0x4019ef9	      0xe800000000	                          call 0x4019efe	      5983	intel_display.c	FUNCTION_181	CALL_19
0x4019efe	      0xe976ffffff	                           jmp 0x4019e79	      5983	intel_display.c	FUNCTION_181	CALL_19
0x4019f03	        0x8b742404	                mov esi, dword [rsp + 4]	      5975	intel_display.c	FUNCTION_181	IF_2	ELSE_1	IF_4
0x4019f07	          0x4889df	                            mov rdi, rbx	      5975	intel_display.c	FUNCTION_181	IF_2	ELSE_1	IF_4
0x4019f0a	      0xe8613affff	                call sym.vlv_disable_pll	      5975	intel_display.c	FUNCTION_181	IF_2	ELSE_1	IF_4
0x4019f0f	      0xe908ffffff	                           jmp 0x4019e1c	      5975	intel_display.c	FUNCTION_181	IF_2	ELSE_1	IF_4
0x4019f14	        0x8b742404	                mov esi, dword [rsp + 4]	      5973	intel_display.c	FUNCTION_181	IF_2	CALL_13
0x4019f18	          0x4889df	                            mov rdi, rbx	      5973	intel_display.c	FUNCTION_181	IF_2	CALL_13
0x4019f1b	      0xe81039ffff	                call sym.chv_disable_pll	      5973	intel_display.c	FUNCTION_181	IF_2	CALL_13
0x4019f20	      0xe9f7feffff	                           jmp 0x4019e1c	      5973	intel_display.c	FUNCTION_181	IF_2	CALL_13
0x4019f25	            0xa804	                              test al, 4	      1571	intel_display.c	FUNCTION_53	IF_1	CALL_2
0x4019f27	     0xf84effeffff	                            je 0x4019e1c	      1571	intel_display.c	FUNCTION_53	IF_1	CALL_2
0x4019f2d	    0x498b86680300	           mov rax, qword [r14 + 0x368] 	      1497	intel_display.c	FUNCTION_51	FUNCTION_1
0x4019f34	    0x498dbe680300	                  lea rdi, [r14 + 0x368]	      1497	intel_display.c	FUNCTION_51	FUNCTION_1
0x4019f3b	          0x4839c7	                            cmp rdi, rax	      1497	intel_display.c	FUNCTION_51	FUNCTION_1
0x4019f3e	        0x488d50f0	                   lea rdx, [rax - 0x10]	      1497	intel_display.c	FUNCTION_51	FUNCTION_1
0x4019f42	            0x743b	                            je 0x4019f7f	      1497	intel_display.c	FUNCTION_51	FUNCTION_1
0x4019f44	            0x31c9	                            xor ecx, ecx	      1497	intel_display.c	FUNCTION_51	FUNCTION_1
0x4019f46	    0x488bb2100400	           mov rsi, qword [rdx + 0x410] 	      1498	intel_display.c	FUNCTION_51	FUNCTION_1
0x4019f4d	            0x31c0	                            xor eax, eax	      1498	intel_display.c	FUNCTION_51	FUNCTION_1
0x4019f4f	        0x807e0900	                   cmp byte [rsi + 9], 0	      1498	intel_display.c	FUNCTION_51	FUNCTION_1
0x4019f53	            0x7413	                            je 0x4019f68	      1498	intel_display.c	FUNCTION_51	FUNCTION_1
0x4019f55	    0x488b82c80400	           mov rax, qword [rdx + 0x4c8] 	      1498	intel_display.c	FUNCTION_51	FUNCTION_1
0x4019f5c	    0x8b8044020000	           mov eax, dword [rax + 0x244] 	      1498	intel_display.c	FUNCTION_51	FUNCTION_1
0x4019f62	          0xc1e802	                              shr eax, 2	      1498	intel_display.c	FUNCTION_51	FUNCTION_1
0x4019f65	          0x83e001	                              and eax, 1	      1498	intel_display.c	FUNCTION_51	FUNCTION_1
0x4019f68	             0x1c1	                            add ecx, eax	      1498	intel_display.c	FUNCTION_51	FUNCTION_1
0x4019f6a	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      1497	intel_display.c	FUNCTION_51	FUNCTION_1
0x4019f6e	          0x4839c7	                            cmp rdi, rax	      1497	intel_display.c	FUNCTION_51	FUNCTION_1
0x4019f71	        0x488d50f0	                   lea rdx, [rax - 0x10]	      1497	intel_display.c	FUNCTION_51	FUNCTION_1
0x4019f75	            0x75cf	                           jne 0x4019f46	      1497	intel_display.c	FUNCTION_51	FUNCTION_1
0x4019f77	            0x85c9	                           test ecx, ecx	      1572	intel_display.c	FUNCTION_53	IF_1	CALL_3
0x4019f79	     0xf859dfeffff	                           jne 0x4019e1c	      1572	intel_display.c	FUNCTION_53	IF_1	CALL_3
0x4019f7f	    0x4d8b8e180800	            mov r9, qword [r14 + 0x818] 	      1574	intel_display.c	FUNCTION_53	IF_1	CALL_6
0x4019f86	    0x418b8e6c0600	           mov ecx, dword [r14 + 0x66c] 	      1574	intel_display.c	FUNCTION_53	IF_1	CALL_6
0x4019f8d	      0xba01000000	                              mov edx, 1	      1574	intel_display.c	FUNCTION_53	IF_1	CALL_6
0x4019f92	          0x4c89f7	                            mov rdi, r14	      1574	intel_display.c	FUNCTION_53	IF_1	CALL_6
0x4019f95	    0x498b86f80700	           mov rax, qword [r14 + 0x7f8] 	      1574	intel_display.c	FUNCTION_53	IF_1	CALL_6
0x4019f9c	    0x8db118600000	                 lea esi, [rcx + 0x6018]	      1574	intel_display.c	FUNCTION_53	IF_1	CALL_6
0x4019fa2	      0x4c894c2408	                 mov qword [rsp + 8], r9	      1574	intel_display.c	FUNCTION_53	IF_1	CALL_6
0x4019fa7	      0xe800000000	                          call 0x4019fac	      1574	intel_display.c	FUNCTION_53	IF_1	CALL_6
0x4019fac	    0x418b8e6c0600	           mov ecx, dword [r14 + 0x66c] 	      1574	intel_display.c	FUNCTION_53	IF_1	CALL_6
0x4019fb3	      0x25ffffffbf	                     and eax, 0xbfffffff	      1574	intel_display.c	FUNCTION_53	IF_1	CALL_6
0x4019fb8	          0x4c89f7	                            mov rdi, r14	      1574	intel_display.c	FUNCTION_53	IF_1	CALL_6
0x4019fbb	            0x89c2	                            mov edx, eax	      1574	intel_display.c	FUNCTION_53	IF_1	CALL_6
0x4019fbd	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      1574	intel_display.c	FUNCTION_53	IF_1	CALL_6
0x4019fc2	    0x8db118600000	                 lea esi, [rcx + 0x6018]	      1574	intel_display.c	FUNCTION_53	IF_1	CALL_6
0x4019fc8	      0xb901000000	                              mov ecx, 1	      1574	intel_display.c	FUNCTION_53	IF_1	CALL_6
0x4019fcd	      0xe800000000	                          call 0x4019fd2	      1574	intel_display.c	FUNCTION_53	IF_1	CALL_6
0x4019fd2	    0x4d8b8e180800	            mov r9, qword [r14 + 0x818] 	      1576	intel_display.c	FUNCTION_53	IF_1	CALL_10
0x4019fd9	    0x418b8e6c0600	           mov ecx, dword [r14 + 0x66c] 	      1576	intel_display.c	FUNCTION_53	IF_1	CALL_10
0x4019fe0	      0xba01000000	                              mov edx, 1	      1576	intel_display.c	FUNCTION_53	IF_1	CALL_10
0x4019fe5	          0x4c89f7	                            mov rdi, r14	      1576	intel_display.c	FUNCTION_53	IF_1	CALL_10
0x4019fe8	    0x498b86f80700	           mov rax, qword [r14 + 0x7f8] 	      1576	intel_display.c	FUNCTION_53	IF_1	CALL_10
0x4019fef	    0x8db114600000	                 lea esi, [rcx + 0x6014]	      1576	intel_display.c	FUNCTION_53	IF_1	CALL_10
0x4019ff5	      0x4c894c2408	                 mov qword [rsp + 8], r9	      1576	intel_display.c	FUNCTION_53	IF_1	CALL_10
0x4019ffa	      0xe800000000	                          call 0x4019fff	      1576	intel_display.c	FUNCTION_53	IF_1	CALL_10
0x4019fff	    0x418b8e6c0600	           mov ecx, dword [r14 + 0x66c] 	      1576	intel_display.c	FUNCTION_53	IF_1	CALL_10
0x401a006	      0x25ffffffbf	                     and eax, 0xbfffffff	      1576	intel_display.c	FUNCTION_53	IF_1	CALL_10
0x401a00b	          0x4c89f7	                            mov rdi, r14	      1576	intel_display.c	FUNCTION_53	IF_1	CALL_10
0x401a00e	            0x89c2	                            mov edx, eax	      1576	intel_display.c	FUNCTION_53	IF_1	CALL_10
0x401a010	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      1576	intel_display.c	FUNCTION_53	IF_1	CALL_10
0x401a015	    0x8db114600000	                 lea esi, [rcx + 0x6014]	      1576	intel_display.c	FUNCTION_53	IF_1	CALL_10
0x401a01b	      0xb901000000	                              mov ecx, 1	      1576	intel_display.c	FUNCTION_53	IF_1	CALL_10
0x401a020	      0xe800000000	                          call 0x401a025	      1576	intel_display.c	FUNCTION_53	IF_1	CALL_10
0x401a025	    0x41f686640600	              test byte [r14 + 0x664], 2	      1581	intel_display.c	FUNCTION_53	IF_2	CALL_13
0x401a02d	     0xf85e9fdffff	                           jne 0x4019e1c	      1581	intel_display.c	FUNCTION_53	IF_2	CALL_13
0x401a033	      0xe95bfdffff	                           jmp 0x4019d93	      1581	intel_display.c	FUNCTION_53	IF_2	CALL_13
0x401a038	          0x4c89e7	                            mov rdi, r12	      5986	intel_display.c	FUNCTION_181	CALL_20
0x401a03b	      0xe800000000	                          call 0x401a040	      5986	intel_display.c	FUNCTION_181	CALL_20
0x401a040	      0xe942feffff	                           jmp 0x4019e87	      5986	intel_display.c	FUNCTION_181	CALL_20
0x401a045	      0xe800000000	                          call 0x401a04a	      5991	intel_display.c	FUNCTION_181
intel_modeset_vga_set_state	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,4:ELSE,1:functions,0:CALL,5	61
0x401a810	            0x4155	                                push r13	     15456	intel_display.c	FUNCTION_426
0x401a812	            0x4154	                                push r12	     15456	intel_display.c	FUNCTION_426
0x401a814	          0x4189f5	                           mov r13d, esi	     15456	intel_display.c	FUNCTION_426
0x401a817	              0x55	                                push rbp	     15456	intel_display.c	FUNCTION_426
0x401a818	              0x53	                                push rbx	     15456	intel_display.c	FUNCTION_426
0x401a819	          0x4889fd	                            mov rbp, rdi	     15456	intel_display.c	FUNCTION_426
0x401a81c	        0x4883ec10	                           sub rsp, 0x10	     15456	intel_display.c	FUNCTION_426
0x401a820	    0x65488b042528	                mov rax, qword gs:[0x28]	     15456	intel_display.c	FUNCTION_426
0x401a829	      0x4889442408	                mov qword [rsp + 8], rax	     15456	intel_display.c	FUNCTION_426
0x401a82e	            0x31c0	                            xor eax, eax	     15456	intel_display.c	FUNCTION_426
0x401a830	    0x80bf5c060000	               cmp byte [rdi + 0x65c], 6	     15457	intel_display.c	FUNCTION_426	CALL_1
0x401a837	    0x488bbf704600	          mov rdi, qword [rdi + 0x4670] 	     15460	intel_display.c	FUNCTION_426	IF_1	CALL_2
0x401a83e	      0x488d542406	                      lea rdx, [rsp + 6]	     15460	intel_display.c	FUNCTION_426	IF_1	CALL_2
0x401a843	            0x19db	                            sbb ebx, ebx	     15457	intel_display.c	FUNCTION_426	CALL_1
0x401a845	          0x83e302	                              and ebx, 2	     15457	intel_display.c	FUNCTION_426	CALL_1
0x401a848	          0x83c350	                           add ebx, 0x50	     15457	intel_display.c	FUNCTION_426	CALL_1
0x401a84b	            0x89de	                            mov esi, ebx	     15460	intel_display.c	FUNCTION_426	IF_1	CALL_2
0x401a84d	      0xe800000000	                          call 0x401a852	     15460	intel_display.c	FUNCTION_426	IF_1	CALL_2
0x401a852	            0x85c0	                           test eax, eax	     15460	intel_display.c	FUNCTION_426	IF_1	CALL_2
0x401a854	            0x7578	                           jne 0x401a8ce	     15460	intel_display.c	FUNCTION_426	IF_1	CALL_2
0x401a856	       0xfb7542406	               movzx edx, word [rsp + 6]	     15465	intel_display.c	FUNCTION_426	IF_2
0x401a85b	          0x4189c4	                           mov r12d, eax	     15465	intel_display.c	FUNCTION_426	IF_2
0x401a85e	          0x4489e9	                           mov ecx, r13d	     15465	intel_display.c	FUNCTION_426	IF_2
0x401a861	          0x83f101	                              xor ecx, 1	     15465	intel_display.c	FUNCTION_426	IF_2
0x401a864	            0x89d0	                            mov eax, edx	     15465	intel_display.c	FUNCTION_426	IF_2
0x401a866	          0x66d1e8	                               shr ax, 1	     15465	intel_display.c	FUNCTION_426	IF_2
0x401a869	          0x83e001	                              and eax, 1	     15465	intel_display.c	FUNCTION_426	IF_2
0x401a86c	            0x38c8	                              cmp al, cl	     15465	intel_display.c	FUNCTION_426	IF_2
0x401a86e	            0x7422	                            je 0x401a892	     15465	intel_display.c	FUNCTION_426	IF_2
0x401a870	          0x4584ed	                         test r13b, r13b	     15468	intel_display.c	FUNCTION_426	IF_3
0x401a873	            0x753b	                           jne 0x401a8b0	     15468	intel_display.c	FUNCTION_426	IF_3
0x401a875	          0x83ca02	                               or edx, 2	     15471	intel_display.c	FUNCTION_426	ELSE_1
0x401a878	      0x6689542406	                  mov word [rsp + 6], dx	     15471	intel_display.c	FUNCTION_426	ELSE_1
0x401a87d	    0x488bbd704600	          mov rdi, qword [rbp + 0x4670] 	     15473	intel_display.c	FUNCTION_426	ELSE_1	IF_4	CALL_4
0x401a884	           0xfb7d2	                           movzx edx, dx	     15473	intel_display.c	FUNCTION_426	ELSE_1	IF_4	CALL_4
0x401a887	            0x89de	                            mov esi, ebx	     15473	intel_display.c	FUNCTION_426	ELSE_1	IF_4	CALL_4
0x401a889	      0xe800000000	                          call 0x401a88e	     15473	intel_display.c	FUNCTION_426	ELSE_1	IF_4	CALL_4
0x401a88e	            0x85c0	                           test eax, eax	     15473	intel_display.c	FUNCTION_426	ELSE_1	IF_4	CALL_4
0x401a890	            0x7528	                           jne 0x401a8ba	     15473	intel_display.c	FUNCTION_426	ELSE_1	IF_4	CALL_4
0x401a892	      0x488b742408	                mov rsi, qword [rsp + 8]	     15479	intel_display.c	FUNCTION_426
0x401a897	    0x654833342528	                xor rsi, qword gs:[0x28]	     15479	intel_display.c	FUNCTION_426
0x401a8a0	          0x4489e0	                           mov eax, r12d	     15479	intel_display.c	FUNCTION_426
0x401a8a3	            0x753d	                           jne 0x401a8e2	     15479	intel_display.c	FUNCTION_426
0x401a8a5	        0x4883c410	                           add rsp, 0x10	     15479	intel_display.c	FUNCTION_426
0x401a8a9	              0x5b	                                 pop rbx	     15479	intel_display.c	FUNCTION_426
0x401a8aa	              0x5d	                                 pop rbp	     15479	intel_display.c	FUNCTION_426
0x401a8ab	            0x415c	                                 pop r12	     15479	intel_display.c	FUNCTION_426
0x401a8ad	            0x415d	                                 pop r13	     15479	intel_display.c	FUNCTION_426
0x401a8af	              0xc3	                                     ret	     15479	intel_display.c	FUNCTION_426
0x401a8b0	          0x83e2fd	                     and edx, 0xfffffffd	     15469	intel_display.c	FUNCTION_426	IF_3
0x401a8b3	      0x6689542406	                  mov word [rsp + 6], dx	     15469	intel_display.c	FUNCTION_426	IF_3
0x401a8b8	            0xebc3	                           jmp 0x401a87d	     15469	intel_display.c	FUNCTION_426	IF_3
0x401a8ba	    0x48c7c7000000	                              mov rdi, 0	     15474	intel_display.c	FUNCTION_426	ELSE_1	IF_4	CALL_5
0x401a8c1	    0x41bcfbffffff	                    mov r12d, 0xfffffffb	     15475	intel_display.c	FUNCTION_426	ELSE_1	IF_4
0x401a8c7	      0xe800000000	                          call 0x401a8cc	     15474	intel_display.c	FUNCTION_426	ELSE_1	IF_4	CALL_5
0x401a8cc	            0xebc4	                           jmp 0x401a892	     15475	intel_display.c	FUNCTION_426	ELSE_1	IF_4
0x401a8ce	    0x48c7c7000000	                              mov rdi, 0	     15461	intel_display.c	FUNCTION_426	IF_1	CALL_3
0x401a8d5	    0x41bcfbffffff	                    mov r12d, 0xfffffffb	     15462	intel_display.c	FUNCTION_426	IF_1
0x401a8db	      0xe800000000	                          call 0x401a8e0	     15461	intel_display.c	FUNCTION_426	IF_1	CALL_3
0x401a8e0	            0xebb0	                           jmp 0x401a892	     15462	intel_display.c	FUNCTION_426	IF_1
0x401a8e2	      0xe800000000	                          call 0x401a8e7	     15479	intel_display.c	FUNCTION_426
modeset_get_crtc_power_domains	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,5	92
0x4002cd0	            0x4156	                                push r14	      5784	intel_display.c	FUNCTION_175
0x4002cd2	            0x4155	                                push r13	      5784	intel_display.c	FUNCTION_175
0x4002cd4	            0x4154	                                push r12	      5784	intel_display.c	FUNCTION_175
0x4002cd6	              0x55	                                push rbp	      5784	intel_display.c	FUNCTION_175
0x4002cd7	              0x53	                                push rbx	      5784	intel_display.c	FUNCTION_175
0x4002cd8	        0x807e0900	                   cmp byte [rsi + 9], 0	      5757	intel_display.c	FUNCTION_174	IF_1
0x4002cdc	          0x4c8b27	                    mov r12, qword [rdi]	      5785	intel_display.c	FUNCTION_175	CALL_1
0x4002cdf	    0x4c8bafb80400	           mov r13, qword [rdi + 0x4b8] 	      5790	intel_display.c	FUNCTION_175
0x4002ce6	     0xf8427010000	                            je 0x4002e13	      5757	intel_display.c	FUNCTION_174	IF_1
0x4002cec	    0x8b87b0040000	           mov eax, dword [rdi + 0x4b0] 	      5753	intel_display.c	FUNCTION_174
0x4002cf2	    0x8b963c020000	           mov edx, dword [rsi + 0x23c] 	      5755	intel_display.c	FUNCTION_174
0x4002cf8	    0x41b901000000	                              mov r9d, 1	      5760	intel_display.c	FUNCTION_174	CALL_4
0x4002cfe	          0x4d89c8	                              mov r8, r9	      5760	intel_display.c	FUNCTION_174	CALL_4
0x4002d01	            0x89c1	                            mov ecx, eax	      5760	intel_display.c	FUNCTION_174	CALL_4
0x4002d03	          0x49d3e0	                              shl r8, cl	      5760	intel_display.c	FUNCTION_174	CALL_4
0x4002d06	          0x83fa03	                              cmp edx, 3	      5761	intel_display.c	FUNCTION_174	CALL_6
0x4002d09	      0xb900020000	                          mov ecx, 0x200	      5761	intel_display.c	FUNCTION_174	CALL_6
0x4002d0e	            0x7409	                            je 0x4002d19	      5761	intel_display.c	FUNCTION_174	CALL_6
0x4002d10	          0x8d4a06	                      lea ecx, [rdx + 6]	      5761	intel_display.c	FUNCTION_174	CALL_6
0x4002d13	          0x49d3e1	                              shl r9, cl	      5761	intel_display.c	FUNCTION_174	CALL_6
0x4002d16	          0x4c89c9	                             mov rcx, r9	      5761	intel_display.c	FUNCTION_174	CALL_6
0x4002d19	          0x4909c8	                              or r8, rcx	      5761	intel_display.c	FUNCTION_174	CALL_6
0x4002d1c	    0x80be2c030000	               cmp byte [rsi + 0x32c], 0	      5762	intel_display.c	FUNCTION_174	IF_2
0x4002d23	     0xf84d8000000	                            je 0x4002e01	      5762	intel_display.c	FUNCTION_174	IF_2
0x4002d29	          0x8d4803	                      lea ecx, [rax + 3]	      5764	intel_display.c	FUNCTION_174	CALL_8
0x4002d2c	      0xb801000000	                              mov eax, 1	      5764	intel_display.c	FUNCTION_174	CALL_8
0x4002d31	          0x48d3e0	                             shl rax, cl	      5764	intel_display.c	FUNCTION_174	CALL_8
0x4002d34	          0x4909c0	                              or r8, rax	      5764	intel_display.c	FUNCTION_174	CALL_8
0x4002d37	    0x498b94243803	           mov rdx, qword [r12 + 0x338] 	      5766	intel_display.c	FUNCTION_174	FUNCTION_1
0x4002d3f	    0x4d8d8c243803	                   lea r9, [r12 + 0x338]	      5766	intel_display.c	FUNCTION_174	FUNCTION_1
0x4002d47	          0x4939d1	                             cmp r9, rdx	      5766	intel_display.c	FUNCTION_174	FUNCTION_1
0x4002d4a	        0x488d42f8	                      lea rax, [rdx - 8]	      5766	intel_display.c	FUNCTION_174	FUNCTION_1
0x4002d4e	            0x7438	                            je 0x4002d88	      5766	intel_display.c	FUNCTION_174	FUNCTION_1
0x4002d50	        0x448b5e14	           mov r11d, dword [rsi + 0x14] 	      5766	intel_display.c	FUNCTION_174	FUNCTION_1
0x4002d54	    0x41ba01000000	                             mov r10d, 1	      5766	intel_display.c	FUNCTION_174	FUNCTION_1
0x4002d5a	      0xbb01000000	                              mov ebx, 1	      5769	intel_display.c	FUNCTION_174	FUNCTION_1	CALL_2
0x4002d5f	          0x8b4844	            mov ecx, dword [rax + 0x44] 	      5766	intel_display.c	FUNCTION_174	FUNCTION_1
0x4002d62	          0x4489d2	                           mov edx, r10d	      5766	intel_display.c	FUNCTION_174	FUNCTION_1
0x4002d65	            0xd3e2	                             shl edx, cl	      5766	intel_display.c	FUNCTION_174	FUNCTION_1
0x4002d67	          0x4485da	                          test edx, r11d	      5766	intel_display.c	FUNCTION_174	FUNCTION_1
0x4002d6a	            0x740f	                            je 0x4002d7b	      5766	intel_display.c	FUNCTION_174	FUNCTION_1
0x4002d6c	    0x8b88f0000000	            mov ecx, dword [rax + 0xf0] 	      5769	intel_display.c	FUNCTION_174	FUNCTION_1	CALL_2
0x4002d72	          0x4889da	                            mov rdx, rbx	      5769	intel_display.c	FUNCTION_174	FUNCTION_1	CALL_2
0x4002d75	          0x48d3e2	                             shl rdx, cl	      5769	intel_display.c	FUNCTION_174	FUNCTION_1	CALL_2
0x4002d78	          0x4909d0	                              or r8, rdx	      5769	intel_display.c	FUNCTION_174	FUNCTION_1	CALL_2
0x4002d7b	        0x488b5008	                mov rdx, qword [rax + 8]	      5766	intel_display.c	FUNCTION_174	FUNCTION_1
0x4002d7f	          0x4939d1	                             cmp r9, rdx	      5766	intel_display.c	FUNCTION_174	FUNCTION_1
0x4002d82	        0x488d42f8	                      lea rax, [rdx - 8]	      5766	intel_display.c	FUNCTION_174	FUNCTION_1
0x4002d86	            0x75d7	                           jne 0x4002d5f	      5766	intel_display.c	FUNCTION_174	FUNCTION_1
0x4002d88	    0x41f684247706	          test byte [r12 + 0x677], 0x40 	      5772	intel_display.c	FUNCTION_174	IF_3	CALL_9
0x4002d91	            0x7414	                            je 0x4002da7	      5772	intel_display.c	FUNCTION_174	IF_3	CALL_9
0x4002d93	          0x4c89c0	                             mov rax, r8	      5773	intel_display.c	FUNCTION_174	CALL_10
0x4002d96	    0x480d00000010	                      or rax, 0x10000000	      5773	intel_display.c	FUNCTION_174	CALL_10
0x4002d9c	    0x80be49020000	               cmp byte [rsi + 0x249], 0	      5773	intel_display.c	FUNCTION_174	CALL_10
0x4002da3	        0x4c0f45c0	                          cmovne r8, rax	      5773	intel_display.c	FUNCTION_174	CALL_10
0x4002da7	    0x4883be780200	              cmp qword [rsi + 0x278], 0	      5775	intel_display.c	FUNCTION_174	IF_4
0x4002daf	            0x7407	                            je 0x4002db8	      5775	intel_display.c	FUNCTION_174	IF_4
0x4002db1	    0x4981c8000000	                       or r8, 0x20000000	      5776	intel_display.c	FUNCTION_174	CALL_11
0x4002db8	          0x4c89ed	                            mov rbp, r13	      5776	intel_display.c	FUNCTION_174	CALL_11
0x4002dbb	          0x4d89c6	                             mov r14, r8	      5776	intel_display.c	FUNCTION_174	CALL_11
0x4002dbe	          0x48f7d5	                                 not rbp	      5776	intel_display.c	FUNCTION_174	CALL_11
0x4002dc1	          0x49f7d6	                                 not r14	      5776	intel_display.c	FUNCTION_174	CALL_11
0x4002dc4	          0x4c21c5	                             and rbp, r8	      5776	intel_display.c	FUNCTION_174	CALL_11
0x4002dc7	    0x4c8987b80400	             mov qword [rdi + 0x4b8], r8	      5791	intel_display.c	FUNCTION_175
0x4002dce	            0x31db	                            xor ebx, ebx	      5796	intel_display.c	FUNCTION_175	CALL_4
0x4002dd0	            0xeb08	                           jmp 0x4002dda	      5796	intel_display.c	FUNCTION_175	CALL_4
0x4002dd2	          0x83c301	                              add ebx, 1	      5796	intel_display.c	FUNCTION_175	CALL_4
0x4002dd5	          0x83fb28	                           cmp ebx, 0x28	      5796	intel_display.c	FUNCTION_175	CALL_4
0x4002dd8	            0x7418	                            je 0x4002df2	      5796	intel_display.c	FUNCTION_175	CALL_4
0x4002dda	        0x480fa3dd	                             bt rbp, rbx	      5796	intel_display.c	FUNCTION_175	CALL_4
0x4002dde	            0x73f2	                           jae 0x4002dd2	      5796	intel_display.c	FUNCTION_175	CALL_4
0x4002de0	            0x89de	                            mov esi, ebx	      5797	intel_display.c	FUNCTION_175	CALL_5
0x4002de2	          0x4c89e7	                            mov rdi, r12	      5797	intel_display.c	FUNCTION_175	CALL_5
0x4002de5	          0x83c301	                              add ebx, 1	      5796	intel_display.c	FUNCTION_175	CALL_4
0x4002de8	      0xe800000000	                          call 0x4002ded	      5797	intel_display.c	FUNCTION_175	CALL_5
0x4002ded	          0x83fb28	                           cmp ebx, 0x28	      5796	intel_display.c	FUNCTION_175	CALL_4
0x4002df0	            0x75e8	                           jne 0x4002dda	      5796	intel_display.c	FUNCTION_175	CALL_4
0x4002df2	          0x4c89e8	                            mov rax, r13	      5799	intel_display.c	FUNCTION_175
0x4002df5	              0x5b	                                 pop rbx	      5800	intel_display.c	FUNCTION_175
0x4002df6	          0x4c21f0	                            and rax, r14	      5799	intel_display.c	FUNCTION_175
0x4002df9	              0x5d	                                 pop rbp	      5800	intel_display.c	FUNCTION_175
0x4002dfa	            0x415c	                                 pop r12	      5800	intel_display.c	FUNCTION_175
0x4002dfc	            0x415d	                                 pop r13	      5800	intel_display.c	FUNCTION_175
0x4002dfe	            0x415e	                                 pop r14	      5800	intel_display.c	FUNCTION_175
0x4002e00	              0xc3	                                     ret	      5800	intel_display.c	FUNCTION_175
0x4002e01	    0x80be2d030000	               cmp byte [rsi + 0x32d], 0	      5762	intel_display.c	FUNCTION_174	IF_2
0x4002e08	     0xf8429ffffff	                            je 0x4002d37	      5762	intel_display.c	FUNCTION_174	IF_2
0x4002e0e	      0xe916ffffff	                           jmp 0x4002d29	      5762	intel_display.c	FUNCTION_174	IF_2
0x4002e13	    0x49c7c6ffffff	             mov r14, 0xffffffffffffffff	      5757	intel_display.c	FUNCTION_174	IF_1
0x4002e1a	            0x31ed	                            xor ebp, ebp	      5757	intel_display.c	FUNCTION_174	IF_1
0x4002e1c	          0x4531c0	                            xor r8d, r8d	      5758	intel_display.c	FUNCTION_174	IF_1
0x4002e1f	            0xeba6	                           jmp 0x4002dc7	      5758	intel_display.c	FUNCTION_174	IF_1
intel_crtc_destroy	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,3	6
0x4004f90	              0x53	                                push rbx	     10220	intel_display.c	FUNCTION_299
0x4004f91	          0x4889fb	                            mov rbx, rdi	     10220	intel_display.c	FUNCTION_299
0x4004f94	      0xe800000000	                          call 0x4004f99	     10223	intel_display.c	FUNCTION_299	CALL_2
0x4004f99	          0x4889df	                            mov rdi, rbx	     10224	intel_display.c	FUNCTION_299	CALL_3
0x4004f9c	              0x5b	                                 pop rbx	     10225	intel_display.c	FUNCTION_299
0x4004f9d	      0xe900000000	                           jmp 0x4004fa2	     10224	intel_display.c	FUNCTION_299	CALL_3
quirk_ssc_force_disable	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,2	3
0x4004ec0	    0x48838f005600	              or qword [rdi + 0x5600], 2	     14347	intel_display.c	ELSE_12	FUNCTION_393
0x4004ec8	    0x48c7c7000000	                              mov rdi, 0	     14348	intel_display.c	ELSE_12	FUNCTION_393	CALL_2
0x4004ecf	      0xe900000000	                           jmp 0x4004ed4	     14348	intel_display.c	ELSE_12	FUNCTION_393	CALL_2
intel_cleanup_plane_fb	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,5	17
0x4017820	              0x55	                                push rbp	     12815	intel_display.c	FUNCTION_358
0x4017821	              0x53	                                push rbx	     12815	intel_display.c	FUNCTION_358
0x4017822	          0x4889f5	                            mov rbp, rsi	     12815	intel_display.c	FUNCTION_358
0x4017825	          0x488b1f	                    mov rbx, qword [rdi]	     12819	intel_display.c	FUNCTION_358	CALL_2
0x4017828	        0x4883c370	                           add rbx, 0x70	     12819	intel_display.c	FUNCTION_358	CALL_2
0x401782c	          0x4889df	                            mov rdi, rbx	     12819	intel_display.c	FUNCTION_358	CALL_2
0x401782f	      0xe800000000	                          call 0x4017834	     12819	intel_display.c	FUNCTION_358	CALL_2
0x4017834	    0x488bbd880000	            mov rdi, qword [rbp + 0x88] 	     12693	intel_display.c	FUNCTION_356	CALL_1
0x401783b	    0x48c785880000	               mov qword [rbp + 0x88], 0	     12693	intel_display.c	FUNCTION_356	CALL_1
0x4017846	          0x4885ff	                           test rdi, rdi	     12694	intel_display.c	FUNCTION_356	IF_1
0x4017849	            0x740c	                            je 0x4017857	     12694	intel_display.c	FUNCTION_356	IF_1
0x401784b	    0x488bb5900000	            mov rsi, qword [rbp + 0x90] 	     12695	intel_display.c	FUNCTION_356	CALL_2
0x4017852	      0xe800000000	                          call 0x4017857	     12695	intel_display.c	FUNCTION_356	CALL_2
0x4017857	          0x4889df	                            mov rdi, rbx	     12821	intel_display.c	FUNCTION_358	CALL_5
0x401785a	              0x5b	                                 pop rbx	     12822	intel_display.c	FUNCTION_358
0x401785b	              0x5d	                                 pop rbp	     12822	intel_display.c	FUNCTION_358
0x401785c	      0xe900000000	                           jmp 0x4017861	     12821	intel_display.c	FUNCTION_358	CALL_5
skl_plane_stride	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,2:ELSE,1:functions,0:CALL,4	29
0x400f410	        0x488b4748	            mov rax, qword [rdi + 0x48] 	      3425	intel_display.c	FUNCTION_110	IF_1
0x400f414	         0xfb64805	               movzx ecx, byte [rax + 5]	      3425	intel_display.c	FUNCTION_110	IF_1
0x400f418	            0x31c0	                            xor eax, eax	      3426	intel_display.c	FUNCTION_110	IF_1
0x400f41a	            0x39f1	                            cmp ecx, esi	      3425	intel_display.c	FUNCTION_110	IF_1
0x400f41c	            0x7e20	                           jle 0x400f43e	      3425	intel_display.c	FUNCTION_110	IF_1
0x400f41e	          0x83e20a	                            and edx, 0xa	      2185	intel_display.c	FUNCTION_77	IF_1	CALL_1
0x400f421	              0x53	                                push rbx	      3422	intel_display.c	FUNCTION_110
0x400f422	          0x4863c6	                         movsxd rax, esi	      2186	intel_display.c	FUNCTION_77	CALL_2
0x400f425	            0x7519	                           jne 0x400f440	      2185	intel_display.c	FUNCTION_77	IF_1	CALL_1
0x400f427	      0x48837f7800	               cmp qword [rdi + 0x78], 0	      3387	intel_display.c	FUNCTION_107	IF_1
0x400f42c	        0x8b5c8758	    mov ebx, dword [rdi + rax*4 + 0x58] 	      2188	intel_display.c	FUNCTION_77	ELSE_1
0x400f430	      0xb940000000	                           mov ecx, 0x40	      3388	intel_display.c	FUNCTION_107	IF_1
0x400f435	            0x7529	                           jne 0x400f460	      3387	intel_display.c	FUNCTION_107	IF_1
0x400f437	            0x89d8	                            mov eax, ebx	      3437	intel_display.c	FUNCTION_110	CALL_4
0x400f439	            0x31d2	                            xor edx, edx	      3437	intel_display.c	FUNCTION_110	CALL_4
0x400f43b	              0x5b	                                 pop rbx	      3440	intel_display.c	FUNCTION_110
0x400f43c	            0xf7f1	                                 div ecx	      3437	intel_display.c	FUNCTION_110	CALL_4
0x400f43e	            0xf3c3	                                     ret	      3440	intel_display.c	FUNCTION_110
0x400f440	      0x48837f7800	               cmp qword [rdi + 0x78], 0	      1967	intel_display.c	FUNCTION_66	IF_1
0x400f445	        0x488d0440	                  lea rax, [rax + rax*2]	      2186	intel_display.c	FUNCTION_77	CALL_2
0x400f449	      0xb901000000	                              mov ecx, 1	      1968	intel_display.c	FUNCTION_66	IF_1
0x400f44e	    0x8b9c87080100	   mov ebx, dword [rdi + rax*4 + 0x108] 	      2186	intel_display.c	FUNCTION_77	CALL_2
0x400f455	            0x74e0	                            je 0x400f437	      1967	intel_display.c	FUNCTION_66	IF_1
0x400f457	      0xe8b45effff	      call sym.intel_tile_height.part.54	      1967	intel_display.c	FUNCTION_66	IF_1
0x400f45c	            0x89c1	                            mov ecx, eax	      1967	intel_display.c	FUNCTION_66	IF_1
0x400f45e	            0xebd7	                           jmp 0x400f437	      1967	intel_display.c	FUNCTION_66	IF_1
0x400f460	      0xe83b23ffff	         call sym.intel_tile_width_bytes	      3390	intel_display.c	FUNCTION_107	CALL_1
0x400f465	            0x89c1	                            mov ecx, eax	      3390	intel_display.c	FUNCTION_107	CALL_1
0x400f467	            0xebce	                           jmp 0x400f437	      3390	intel_display.c	FUNCTION_107	CALL_1
intel_crtc_atomic_check	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,17:ELSE,1:functions,0:CALL,21	198
0x40117e0	            0x4156	                                push r14	     10408	intel_display.c	FUNCTION_305
0x40117e2	            0x4155	                                push r13	     10408	intel_display.c	FUNCTION_305
0x40117e4	            0x4154	                                push r12	     10408	intel_display.c	FUNCTION_305
0x40117e6	              0x55	                                push rbp	     10408	intel_display.c	FUNCTION_305
0x40117e7	          0x4889fd	                            mov rbp, rdi	     10408	intel_display.c	FUNCTION_305
0x40117ea	              0x53	                                push rbx	     10408	intel_display.c	FUNCTION_305
0x40117eb	          0x4889f3	                            mov rbx, rsi	     10408	intel_display.c	FUNCTION_305
0x40117ee	        0x4883ec08	                              sub rsp, 8	     10408	intel_display.c	FUNCTION_305
0x40117f2	         0xfb6460a	            movzx eax, byte [rsi + 0xa] 	       893	drm_atomic.h	FUNCTION_511
0x40117f6	          0x4c8b37	                    mov r14, qword [rdi]	     10409	intel_display.c	FUNCTION_305
0x40117f9	    0x4c8bae100200	           mov r13, qword [rsi + 0x210] 	     10414	intel_display.c	FUNCTION_305
0x4011800	            0xa802	                              test al, 2	       893	drm_atomic.h	FUNCTION_511
0x4011802	            0x7508	                           jne 0x401180c	       893	drm_atomic.h	FUNCTION_511
0x4011804	            0xa804	                              test al, 4	       893	drm_atomic.h	FUNCTION_511
0x4011806	     0xf845f010000	                            je 0x401196b	       893	drm_atomic.h	FUNCTION_511
0x401180c	        0x807b0900	                   cmp byte [rbx + 9], 0	     10418	intel_display.c	FUNCTION_305	IF_1
0x4011810	            0x7507	                           jne 0x4011819	     10418	intel_display.c	FUNCTION_305	IF_1
0x4011812	    0xc68327020000	               mov byte [rbx + 0x227], 1	     10419	intel_display.c	FUNCTION_305	IF_1
0x4011819	        0x807b0800	                   cmp byte [rbx + 8], 0	     10421	intel_display.c	FUNCTION_305	IF_2
0x401181d	     0xf8512010000	                           jne 0x4011935	     10421	intel_display.c	FUNCTION_305	IF_2
0x4011823	    0x41bc01000000	                             mov r12d, 1	     10423	intel_display.c	FUNCTION_305	IF_2	CALL_5
0x4011829	            0xa820	                           test al, 0x20	     10430	intel_display.c	FUNCTION_305	IF_4
0x401182b	     0xf854d010000	                           jne 0x401197e	     10430	intel_display.c	FUNCTION_305	IF_4
0x4011831	    0x498b86505500	          mov rax, qword [r14 + 0x5550] 	     10443	intel_display.c	FUNCTION_305	IF_6
0x4011838	          0x4885c0	                           test rax, rax	     10443	intel_display.c	FUNCTION_305	IF_6
0x401183b	            0x7410	                            je 0x401184d	     10443	intel_display.c	FUNCTION_305	IF_6
0x401183d	          0x4889df	                            mov rdi, rbx	     10444	intel_display.c	FUNCTION_305	IF_6	CALL_8
0x4011840	      0xe800000000	                          call 0x4011845	     10444	intel_display.c	FUNCTION_305	IF_6	CALL_8
0x4011845	            0x85c0	                           test eax, eax	     10445	intel_display.c	FUNCTION_305	IF_6	IF_7
0x4011847	     0xf856e020000	                           jne 0x4011abb	     10445	intel_display.c	FUNCTION_305	IF_6	IF_7
0x401184d	    0x498b86585500	          mov rax, qword [r14 + 0x5558] 	     10451	intel_display.c	FUNCTION_305	IF_8
0x4011854	          0x4885c0	                           test rax, rax	     10451	intel_display.c	FUNCTION_305	IF_8
0x4011857	            0x7432	                            je 0x401188b	     10451	intel_display.c	FUNCTION_305	IF_8
0x4011859	    0x4180bdcc0200	               cmp byte [r13 + 0x2cc], 0	     10451	intel_display.c	FUNCTION_305	IF_8
0x4011861	     0xf852f010000	                           jne 0x4011996	     10451	intel_display.c	FUNCTION_305	IF_8
0x4011867	    0x4983be505500	             cmp qword [r14 + 0x5550], 0	     10453	intel_display.c	FUNCTION_305	IF_8	IF_9	CALL_11
0x401186f	     0xf84c3020000	                            je 0x4011b38	     10453	intel_display.c	FUNCTION_305	IF_8	IF_9	CALL_11
0x4011875	          0x4889da	                            mov rdx, rbx	     10461	intel_display.c	FUNCTION_305	IF_8	CALL_12
0x4011878	          0x4889ee	                            mov rsi, rbp	     10461	intel_display.c	FUNCTION_305	IF_8	CALL_12
0x401187b	          0x4c89f7	                            mov rdi, r14	     10461	intel_display.c	FUNCTION_305	IF_8	CALL_12
0x401187e	      0xe800000000	                          call 0x4011883	     10461	intel_display.c	FUNCTION_305	IF_8	CALL_12
0x4011883	            0x85c0	                           test eax, eax	     10464	intel_display.c	FUNCTION_305	IF_8	IF_10
0x4011885	     0xf856b020000	                           jne 0x4011af6	     10464	intel_display.c	FUNCTION_305	IF_8	IF_10
0x401188b	          0x4531c9	                            xor r9d, r9d	     10464	intel_display.c	FUNCTION_305	IF_8	IF_10
0x401188e	    0x4180be5c0600	               cmp byte [r14 + 0x65c], 8	     10473	intel_display.c	FUNCTION_305	IF_13	CALL_16
0x4011896	     0xf87de010000	                            ja 0x4011a7a	     10473	intel_display.c	FUNCTION_305	IF_13	CALL_16
0x401189c	    0x418b96640600	           mov edx, dword [r14 + 0x664] 	     10485	intel_display.c	FUNCTION_305	IF_17	CALL_20
0x40118a3	    0xf7c200000800	                       test edx, 0x80000	     10485	intel_display.c	FUNCTION_305	IF_17	CALL_20
0x40118a9	            0x7410	                            je 0x40118bb	     10485	intel_display.c	FUNCTION_305	IF_17	CALL_20
0x40118ab	    0x410fb7865806	          movzx eax, word [r14 + 0x658] 	     10485	intel_display.c	FUNCTION_305	IF_17	CALL_20
0x40118b3	            0x30c0	                              xor al, al	     10485	intel_display.c	FUNCTION_305	IF_17	CALL_20
0x40118b5	        0x663d000a	                           cmp ax, 0xa00	     10485	intel_display.c	FUNCTION_305	IF_17	CALL_20
0x40118b9	            0x740b	                            je 0x40118c6	     10485	intel_display.c	FUNCTION_305	IF_17	CALL_20
0x40118bb	    0x81e200001000	                       and edx, 0x100000	     10485	intel_display.c	FUNCTION_305	IF_17	CALL_20
0x40118c1	          0x4489c8	                            mov eax, r9d	     10488	intel_display.c	FUNCTION_305
0x40118c4	            0x7462	                            je 0x4011928	     10485	intel_display.c	FUNCTION_305	IF_17	CALL_20
0x40118c6	          0x4889df	                            mov rdi, rbx	      6351	intel_display.c	FUNCTION_194	IF_1	CALL_3
0x40118c9	      0xe800000000	                          call 0x40118ce	      6351	intel_display.c	FUNCTION_194	IF_1	CALL_3
0x40118ce	            0x84c0	                             test al, al	      6351	intel_display.c	FUNCTION_194	IF_1	CALL_3
0x40118d0	            0x744d	                            je 0x401191f	      6351	intel_display.c	FUNCTION_194	IF_1	CALL_3
0x40118d2	    0x80bb49030000	               cmp byte [rbx + 0x349], 0	      6354	intel_display.c	FUNCTION_194	IF_2
0x40118d9	     0xf85cc010000	                           jne 0x4011aab	      6354	intel_display.c	FUNCTION_194	IF_2
0x40118df	     0xfb693900400	          movzx edx, byte [rbx + 0x490] 	      6358	intel_display.c	FUNCTION_194	IF_3	CALL_4
0x40118e6	    0x81e2ef000000	                           and edx, 0xef	      6358	intel_display.c	FUNCTION_194	IF_3	CALL_4
0x40118ec	     0xf84b9010000	                            je 0x4011aab	      6358	intel_display.c	FUNCTION_194	IF_3	CALL_4
0x40118f2	          0x488b13	                    mov rdx, qword [rbx]	      6347	intel_display.c	FUNCTION_194	CALL_1
0x40118f5	          0x488b12	                    mov rdx, qword [rdx]	      6362	intel_display.c	FUNCTION_194	IF_4	CALL_5
0x40118f8	    0xf68266060000	          test byte [rdx + 0x666], 0x10 	      6362	intel_display.c	FUNCTION_194	IF_4	CALL_5
0x40118ff	            0x741e	                            je 0x401191f	      6362	intel_display.c	FUNCTION_194	IF_4	CALL_5
0x4011901	    0x488b83100200	           mov rax, qword [rbx + 0x210] 	      6363	intel_display.c	FUNCTION_194	IF_4
0x4011908	      0xba1f85eb51	                     mov edx, 0x51eb851f	      6362	intel_display.c	FUNCTION_194	IF_4	CALL_5
0x401190d	        0x6b40785f	      imul eax, dword [rax + 0x78], 0x5f	      6362	intel_display.c	FUNCTION_194	IF_4	CALL_5
0x4011911	            0xf7e2	                                 mul edx	      6362	intel_display.c	FUNCTION_194	IF_4	CALL_5
0x4011913	          0xc1ea05	                              shr edx, 5	      6362	intel_display.c	FUNCTION_194	IF_4	CALL_5
0x4011916	    0x399334020000	           cmp dword [rbx + 0x234], edx 	      6362	intel_display.c	FUNCTION_194	IF_4	CALL_5
0x401191c	           0xf96c0	                                setbe al	      6362	intel_display.c	FUNCTION_194	IF_4	CALL_5
0x401191f	    0x888348030000	              mov byte [rbx + 0x348], al	     10486	intel_display.c	FUNCTION_305	CALL_21
0x4011925	          0x4489c8	                            mov eax, r9d	     10488	intel_display.c	FUNCTION_305
0x4011928	        0x4883c408	                              add rsp, 8	     10489	intel_display.c	FUNCTION_305
0x401192c	              0x5b	                                 pop rbx	     10489	intel_display.c	FUNCTION_305
0x401192d	              0x5d	                                 pop rbp	     10489	intel_display.c	FUNCTION_305
0x401192e	            0x415c	                                 pop r12	     10489	intel_display.c	FUNCTION_305
0x4011930	            0x415d	                                 pop r13	     10489	intel_display.c	FUNCTION_305
0x4011932	            0x415e	                                 pop r14	     10489	intel_display.c	FUNCTION_305
0x4011934	              0xc3	                                     ret	     10489	intel_display.c	FUNCTION_305
0x4011935	    0x498b96a05500	          mov rdx, qword [r14 + 0x55a0] 	     10422	intel_display.c	FUNCTION_305	IF_2
0x401193c	          0x4885d2	                           test rdx, rdx	     10421	intel_display.c	FUNCTION_305	IF_2
0x401193f	     0xf84defeffff	                            je 0x4011823	     10421	intel_display.c	FUNCTION_305	IF_2
0x4011945	    0x4883bb780200	              cmp qword [rbx + 0x278], 0	     10423	intel_display.c	FUNCTION_305	IF_2	CALL_5
0x401194d	     0xf85c1010000	                           jne 0x4011b14	     10423	intel_display.c	FUNCTION_305	IF_2	CALL_5
0x4011953	          0x4889de	                            mov rsi, rbx	     10424	intel_display.c	FUNCTION_305	IF_2	CALL_6
0x4011956	          0x4889ef	                            mov rdi, rbp	     10424	intel_display.c	FUNCTION_305	IF_2	CALL_6
0x4011959	      0xe800000000	                          call 0x401195e	     10424	intel_display.c	FUNCTION_305	IF_2	CALL_6
0x401195e	            0x85c0	                           test eax, eax	     10426	intel_display.c	FUNCTION_305	IF_2	IF_3
0x4011960	            0x75c6	                           jne 0x4011928	     10426	intel_display.c	FUNCTION_305	IF_2	IF_3
0x4011962	         0xfb6430a	            movzx eax, byte [rbx + 0xa] 	     10426	intel_display.c	FUNCTION_305	IF_2	IF_3
0x4011966	      0xe9b8feffff	                           jmp 0x4011823	     10426	intel_display.c	FUNCTION_305	IF_2	IF_3
0x401196b	          0x4531e4	                          xor r12d, r12d	       893	drm_atomic.h	FUNCTION_511
0x401196e	            0xa808	                              test al, 8	       893	drm_atomic.h	FUNCTION_511
0x4011970	     0xf8596feffff	                           jne 0x401180c	       893	drm_atomic.h	FUNCTION_511
0x4011976	            0xa820	                           test al, 0x20	     10430	intel_display.c	FUNCTION_305	IF_4
0x4011978	     0xf84b3feffff	                            je 0x4011831	     10430	intel_display.c	FUNCTION_305	IF_4
0x401197e	          0x4889de	                            mov rsi, rbx	     10431	intel_display.c	FUNCTION_305	IF_4	CALL_7
0x4011981	          0x4889ef	                            mov rdi, rbp	     10431	intel_display.c	FUNCTION_305	IF_4	CALL_7
0x4011984	      0xe800000000	                          call 0x4011989	     10431	intel_display.c	FUNCTION_305	IF_4	CALL_7
0x4011989	            0x85c0	                           test eax, eax	     10432	intel_display.c	FUNCTION_305	IF_4	IF_5
0x401198b	            0x759b	                           jne 0x4011928	     10432	intel_display.c	FUNCTION_305	IF_4	IF_5
0x401198d	        0x804b0a01	                  or byte [rbx + 0xa], 1	     10439	intel_display.c	FUNCTION_305	IF_4
0x4011991	      0xe99bfeffff	                           jmp 0x4011831	     10439	intel_display.c	FUNCTION_305	IF_4
0x4011996	    0x418b86f85500	          mov eax, dword [r14 + 0x55f8] 	     10469	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12	CALL_15
0x401199d	            0x85c0	                           test eax, eax	     10469	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12	CALL_15
0x401199f	     0xf84e6feffff	                            je 0x401188b	     10469	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12	CALL_15
0x40119a5	    0x4180be5c0600	               cmp byte [r14 + 0x65c], 8	     10469	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12	CALL_15
0x40119ad	     0xf87c7000000	                            ja 0x4011a7a	     10469	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12	CALL_15
0x40119b3	    0x488b83dc0300	           mov rax, qword [rbx + 0x3dc] 	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x40119ba	    0x488983700300	            mov qword [rbx + 0x370], rax	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x40119c1	    0x488b83e40300	           mov rax, qword [rbx + 0x3e4] 	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x40119c8	    0x488983780300	            mov qword [rbx + 0x378], rax	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x40119cf	    0x488b83ec0300	           mov rax, qword [rbx + 0x3ec] 	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x40119d6	    0x488983800300	            mov qword [rbx + 0x380], rax	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x40119dd	    0x488b83f40300	           mov rax, qword [rbx + 0x3f4] 	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x40119e4	    0x488983880300	            mov qword [rbx + 0x388], rax	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x40119eb	    0x488b83fc0300	           mov rax, qword [rbx + 0x3fc] 	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x40119f2	    0x488983900300	            mov qword [rbx + 0x390], rax	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x40119f9	    0x488b83040400	           mov rax, qword [rbx + 0x404] 	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x4011a00	    0x488983980300	            mov qword [rbx + 0x398], rax	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x4011a07	    0x488b830c0400	           mov rax, qword [rbx + 0x40c] 	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x4011a0e	    0x488983a00300	            mov qword [rbx + 0x3a0], rax	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x4011a15	    0x488b83140400	           mov rax, qword [rbx + 0x414] 	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x4011a1c	    0x488983a80300	            mov qword [rbx + 0x3a8], rax	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x4011a23	    0x488b831c0400	           mov rax, qword [rbx + 0x41c] 	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x4011a2a	    0x488983b00300	            mov qword [rbx + 0x3b0], rax	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x4011a31	    0x488b83240400	           mov rax, qword [rbx + 0x424] 	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x4011a38	    0x488983b80300	            mov qword [rbx + 0x3b8], rax	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x4011a3f	    0x488b832c0400	           mov rax, qword [rbx + 0x42c] 	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x4011a46	    0x488983c00300	            mov qword [rbx + 0x3c0], rax	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x4011a4d	    0x488b83340400	           mov rax, qword [rbx + 0x434] 	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x4011a54	    0x488983c80300	            mov qword [rbx + 0x3c8], rax	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x4011a5b	    0x488b833c0400	           mov rax, qword [rbx + 0x43c] 	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x4011a62	    0x488983d00300	            mov qword [rbx + 0x3d0], rax	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x4011a69	    0x8b8344040000	           mov eax, dword [rbx + 0x444] 	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x4011a6f	    0x8983d8030000	            mov dword [rbx + 0x3d8], eax	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x4011a75	      0xe911feffff	                           jmp 0x401188b	     10470	intel_display.c	FUNCTION_305	ELSE_1	IF_11	IF_12
0x4011a7a	          0x4585e4	                         test r12d, r12d	     10474	intel_display.c	FUNCTION_305	IF_13	IF_14
0x4011a7d	            0x7562	                           jne 0x4011ae1	     10474	intel_display.c	FUNCTION_305	IF_13	IF_14
0x4011a7f	          0x4889de	                            mov rsi, rbx	     10478	intel_display.c	FUNCTION_305	IF_13	IF_15	CALL_18
0x4011a82	          0x4889ef	                            mov rdi, rbp	     10478	intel_display.c	FUNCTION_305	IF_13	IF_15	CALL_18
0x4011a85	      0xe800000000	                          call 0x4011a8a	     10478	intel_display.c	FUNCTION_305	IF_13	IF_15	CALL_18
0x4011a8a	            0x85c0	                           test eax, eax	     10480	intel_display.c	FUNCTION_305	IF_13	IF_16
0x4011a8c	          0x4189c1	                            mov r9d, eax	     10478	intel_display.c	FUNCTION_305	IF_13	IF_15	CALL_18
0x4011a8f	     0xf8507feffff	                           jne 0x401189c	     10480	intel_display.c	FUNCTION_305	IF_13	IF_16
0x4011a95	          0x4889da	                            mov rdx, rbx	     10481	intel_display.c	FUNCTION_305	IF_13	IF_16	CALL_19
0x4011a98	          0x4889ee	                            mov rsi, rbp	     10481	intel_display.c	FUNCTION_305	IF_13	IF_16	CALL_19
0x4011a9b	          0x4c89f7	                            mov rdi, r14	     10481	intel_display.c	FUNCTION_305	IF_13	IF_16	CALL_19
0x4011a9e	      0xe800000000	                          call 0x4011aa3	     10481	intel_display.c	FUNCTION_305	IF_13	IF_16	CALL_19
0x4011aa3	          0x4189c1	                            mov r9d, eax	     10481	intel_display.c	FUNCTION_305	IF_13	IF_16	CALL_19
0x4011aa6	      0xe9f1fdffff	                           jmp 0x401189c	     10481	intel_display.c	FUNCTION_305	IF_13	IF_16	CALL_19
0x4011aab	            0x31c0	                            xor eax, eax	      6352	intel_display.c	FUNCTION_194	IF_1
0x4011aad	    0x888348030000	              mov byte [rbx + 0x348], al	     10486	intel_display.c	FUNCTION_305	CALL_21
0x4011ab3	          0x4489c8	                            mov eax, r9d	     10488	intel_display.c	FUNCTION_305
0x4011ab6	      0xe96dfeffff	                           jmp 0x4011928	     10488	intel_display.c	FUNCTION_305
0x4011abb	    0x48c7c6000000	                              mov rsi, 0	     10446	intel_display.c	FUNCTION_305	IF_6	IF_7	CALL_9
0x4011ac2	      0xbf04000000	                              mov edi, 4	     10446	intel_display.c	FUNCTION_305	IF_6	IF_7	CALL_9
0x4011ac7	        0x89442404	                mov dword [rsp + 4], eax	     10446	intel_display.c	FUNCTION_305	IF_6	IF_7	CALL_9
0x4011acb	      0xe800000000	                          call 0x4011ad0	     10446	intel_display.c	FUNCTION_305	IF_6	IF_7	CALL_9
0x4011ad0	        0x8b442404	                mov eax, dword [rsp + 4]	     10447	intel_display.c	FUNCTION_305	IF_6	IF_7
0x4011ad4	        0x4883c408	                              add rsp, 8	     10489	intel_display.c	FUNCTION_305
0x4011ad8	              0x5b	                                 pop rbx	     10489	intel_display.c	FUNCTION_305
0x4011ad9	              0x5d	                                 pop rbp	     10489	intel_display.c	FUNCTION_305
0x4011ada	            0x415c	                                 pop r12	     10489	intel_display.c	FUNCTION_305
0x4011adc	            0x415d	                                 pop r13	     10489	intel_display.c	FUNCTION_305
0x4011ade	            0x415e	                                 pop r14	     10489	intel_display.c	FUNCTION_305
0x4011ae0	              0xc3	                                     ret	     10489	intel_display.c	FUNCTION_305
0x4011ae1	          0x4889df	                            mov rdi, rbx	     10475	intel_display.c	FUNCTION_305	IF_13	CALL_17
0x4011ae4	      0xe800000000	                          call 0x4011ae9	     10475	intel_display.c	FUNCTION_305	IF_13	CALL_17
0x4011ae9	            0x85c0	                           test eax, eax	     10477	intel_display.c	FUNCTION_305	IF_13	IF_15
0x4011aeb	          0x4189c1	                            mov r9d, eax	     10475	intel_display.c	FUNCTION_305	IF_13	CALL_17
0x4011aee	     0xf85a8fdffff	                           jne 0x401189c	     10477	intel_display.c	FUNCTION_305	IF_13	IF_15
0x4011af4	            0xeb89	                           jmp 0x4011a7f	     10477	intel_display.c	FUNCTION_305	IF_13	IF_15
0x4011af6	    0x48c7c6000000	                              mov rsi, 0	     10465	intel_display.c	FUNCTION_305	IF_8	IF_10	CALL_13
0x4011afd	      0xbf04000000	                              mov edi, 4	     10465	intel_display.c	FUNCTION_305	IF_8	IF_10	CALL_13
0x4011b02	        0x89442404	                mov dword [rsp + 4], eax	     10465	intel_display.c	FUNCTION_305	IF_8	IF_10	CALL_13
0x4011b06	      0xe800000000	                          call 0x4011b0b	     10465	intel_display.c	FUNCTION_305	IF_8	IF_10	CALL_13
0x4011b0b	        0x8b442404	                mov eax, dword [rsp + 4]	     10466	intel_display.c	FUNCTION_305	IF_8	IF_10
0x4011b0f	      0xe914feffff	                           jmp 0x4011928	     10466	intel_display.c	FUNCTION_305	IF_8	IF_10
0x4011b14	    0x48c7c6000000	                              mov rsi, 0	     10423	intel_display.c	FUNCTION_305	IF_2	CALL_5
0x4011b1b	    0x48c7c7000000	                              mov rdi, 0	     10423	intel_display.c	FUNCTION_305	IF_2	CALL_5
0x4011b22	      0xe800000000	                          call 0x4011b27	     10423	intel_display.c	FUNCTION_305	IF_2	CALL_5
0x4011b27	             0xf0b	                                     ud2	     10423	intel_display.c	FUNCTION_305	IF_2	CALL_5
0x4011b29	    0x41bc01000000	                             mov r12d, 1	     10423	intel_display.c	FUNCTION_305	IF_2	CALL_5
0x4011b2f	         0xfb6430a	            movzx eax, byte [rbx + 0xa] 	     10423	intel_display.c	FUNCTION_305	IF_2	CALL_5
0x4011b33	      0xe9f1fcffff	                           jmp 0x4011829	     10423	intel_display.c	FUNCTION_305	IF_2	CALL_5
0x4011b38	    0x48c7c6000000	                              mov rsi, 0	     10453	intel_display.c	FUNCTION_305	IF_8	IF_9	CALL_11
0x4011b3f	    0x48c7c7000000	                              mov rdi, 0	     10453	intel_display.c	FUNCTION_305	IF_8	IF_9	CALL_11
0x4011b46	      0xe800000000	                          call 0x4011b4b	     10453	intel_display.c	FUNCTION_305	IF_8	IF_9	CALL_11
0x4011b4b	             0xf0b	                                     ud2	     10453	intel_display.c	FUNCTION_305	IF_8	IF_9	CALL_11
0x4011b4d	            0x31c0	                            xor eax, eax	     10454	intel_display.c	FUNCTION_305	IF_8	IF_9
0x4011b4f	      0xe9d4fdffff	                           jmp 0x4011928	     10454	intel_display.c	FUNCTION_305	IF_8	IF_9
skl_check_plane_surface	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,8:ELSE,2:functions,0:CALL,6	415
0x400ec30	            0x4157	                                push r15	      3132	intel_display.c	FUNCTION_101
0x400ec32	            0x4156	                                push r14	      3132	intel_display.c	FUNCTION_101
0x400ec34	            0x4155	                                push r13	      3132	intel_display.c	FUNCTION_101
0x400ec36	            0x4154	                                push r12	      3132	intel_display.c	FUNCTION_101
0x400ec38	          0x4989f5	                            mov r13, rsi	      3132	intel_display.c	FUNCTION_101
0x400ec3b	              0x55	                                push rbp	      3132	intel_display.c	FUNCTION_101
0x400ec3c	              0x53	                                push rbx	      3132	intel_display.c	FUNCTION_101
0x400ec3d	          0x4889fd	                            mov rbp, rdi	      3132	intel_display.c	FUNCTION_101
0x400ec40	        0x4883ec28	                           sub rsp, 0x28	      3132	intel_display.c	FUNCTION_101
0x400ec44	          0x8b5640	            mov edx, dword [rsi + 0x40] 	      3134	intel_display.c	FUNCTION_101
0x400ec47	        0x488b5e10	            mov rbx, qword [rsi + 0x10] 	      3133	intel_display.c	FUNCTION_101
0x400ec4b	    0x65488b042528	                mov rax, qword gs:[0x28]	      3132	intel_display.c	FUNCTION_101
0x400ec54	      0x4889442420	             mov qword [rsp + 0x20], rax	      3132	intel_display.c	FUNCTION_101
0x400ec59	            0x31c0	                            xor eax, eax	      3132	intel_display.c	FUNCTION_101
0x400ec5b	          0xf6c210	                           test dl, 0x10	      3137	intel_display.c	FUNCTION_101	IF_1
0x400ec5e	            0x740b	                            je 0x400ec6b	      3137	intel_display.c	FUNCTION_101	IF_1
0x400ec60	      0x48837b7800	               cmp qword [rbx + 0x78], 0	      3137	intel_display.c	FUNCTION_101	IF_1
0x400ec65	     0xf84c8050000	                            je 0x400f233	      3137	intel_display.c	FUNCTION_101	IF_1
0x400ec6b	            0x31c0	                            xor eax, eax	      3144	intel_display.c	FUNCTION_101	IF_2
0x400ec6d	      0x41807d7400	                cmp byte [r13 + 0x74], 0	      3143	intel_display.c	FUNCTION_101	IF_2
0x400ec72	     0xf8499010000	                            je 0x400ee11	      3143	intel_display.c	FUNCTION_101	IF_2
0x400ec78	          0x83e20a	                            and edx, 0xa	      3147	intel_display.c	FUNCTION_101	IF_3	CALL_2
0x400ec7b	          0x4989df	                            mov r15, rbx	      3147	intel_display.c	FUNCTION_101	IF_3	CALL_2
0x400ec7e	     0xf8522030000	                           jne 0x400efa6	      3147	intel_display.c	FUNCTION_101	IF_3	CALL_2
0x400ec84	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      3156	intel_display.c	FUNCTION_101	IF_4
0x400ec88	    0x81384e563132	            cmp dword [rax], 0x3231564e 	      3156	intel_display.c	FUNCTION_101	IF_4
0x400ec8e	     0xf84a4040000	                            je 0x400f138	      3156	intel_display.c	FUNCTION_101	IF_4
0x400ec94	    0x48b8fcffffff	          movabs rax, 0xfefffffffffffffc	      3160	intel_display.c	FUNCTION_101	ELSE_1	IF_6
0x400ec9e	        0x48034378	             add rax, qword [rbx + 0x78]	      3160	intel_display.c	FUNCTION_101	ELSE_1	IF_6
0x400eca2	        0x4883f801	                              cmp rax, 1	      3160	intel_display.c	FUNCTION_101	ELSE_1	IF_6
0x400eca6	     0xf8623030000	                           jbe 0x400efcf	      3160	intel_display.c	FUNCTION_101	ELSE_1	IF_6
0x400ecac	    0x41c785a40000	     mov dword [r13 + 0xa4], 0xfffff000 	      3166	intel_display.c	FUNCTION_101	ELSE_2
0x400ecb7	    0x41c785a80000	               mov dword [r13 + 0xa8], 0	      3167	intel_display.c	FUNCTION_101	ELSE_2
0x400ecc2	    0x41c785ac0000	               mov dword [r13 + 0xac], 0	      3168	intel_display.c	FUNCTION_101	ELSE_2
0x400eccd	    0x8b852c020000	           mov eax, dword [rbp + 0x22c] 	      3168	intel_display.c	FUNCTION_101	ELSE_2
0x400ecd3	        0x418b5554	            mov edx, dword [r13 + 0x54] 	      2980	intel_display.c	FUNCTION_98
0x400ecd7	        0x418b6d60	            mov ebp, dword [r13 + 0x60] 	      2983	intel_display.c	FUNCTION_98	CALL_3
0x400ecdb	        0x418b5d5c	            mov ebx, dword [r13 + 0x5c] 	      2982	intel_display.c	FUNCTION_98	CALL_2
0x400ecdf	        0x498b7f48	            mov rdi, qword [r15 + 0x48] 	      2986	intel_display.c	FUNCTION_98	CALL_4
0x400ece3	        0x89442408	                mov dword [rsp + 8], eax	      2986	intel_display.c	FUNCTION_98	CALL_4
0x400ece7	        0x498b4500	                    mov rax, qword [r13]	      2977	intel_display.c	FUNCTION_98	CALL_1
0x400eceb	            0x29d3	                            sub ebx, edx	      2982	intel_display.c	FUNCTION_98	CALL_2
0x400eced	          0xc1fb10	                           sar ebx, 0x10	      2982	intel_display.c	FUNCTION_98	CALL_2
0x400ecf0	          0x4c8b30	                    mov r14, qword [rax]	      2977	intel_display.c	FUNCTION_98	CALL_1
0x400ecf3	            0x89d0	                            mov eax, edx	      2980	intel_display.c	FUNCTION_98
0x400ecf5	            0x31d2	                            xor edx, edx	      2986	intel_display.c	FUNCTION_98	CALL_4
0x400ecf7	          0xc1f810	                           sar eax, 0x10	      2980	intel_display.c	FUNCTION_98
0x400ecfa	        0x89442410	             mov dword [rsp + 0x10], eax	      2980	intel_display.c	FUNCTION_98
0x400ecfe	        0x418b4558	            mov eax, dword [r13 + 0x58] 	      2981	intel_display.c	FUNCTION_98
0x400ed02	            0x89c6	                            mov esi, eax	      2981	intel_display.c	FUNCTION_98
0x400ed04	            0x29c5	                            sub ebp, eax	      2983	intel_display.c	FUNCTION_98	CALL_3
0x400ed06	        0x418b4564	            mov eax, dword [r13 + 0x64] 	      2984	intel_display.c	FUNCTION_98
0x400ed0a	          0xc1fe10	                           sar esi, 0x10	      2981	intel_display.c	FUNCTION_98
0x400ed0d	          0xc1fd10	                           sar ebp, 0x10	      2983	intel_display.c	FUNCTION_98	CALL_3
0x400ed10	        0x89742414	             mov dword [rsp + 0x14], esi	      2981	intel_display.c	FUNCTION_98
0x400ed14	        0x498b7778	            mov rsi, qword [r15 + 0x78] 	      2986	intel_display.c	FUNCTION_98	CALL_4
0x400ed18	        0x89442404	                mov dword [rsp + 4], eax	      2984	intel_display.c	FUNCTION_98
0x400ed1c	      0xe8af64ffff	    call sym.skl_max_plane_width.isra.51	      2986	intel_display.c	FUNCTION_98	CALL_4
0x400ed21	            0x39c3	                            cmp ebx, eax	      2990	intel_display.c	FUNCTION_98	IF_1
0x400ed23	    0x458ba5a40000	           mov r12d, dword [r13 + 0xa4] 	      2988	intel_display.c	FUNCTION_98
0x400ed2a	     0xf8f51050000	                            jg 0x400f281	      2990	intel_display.c	FUNCTION_98	IF_1
0x400ed30	    0x81fd00100000	                         cmp ebp, 0x1000	      2990	intel_display.c	FUNCTION_98	IF_1
0x400ed36	     0xf8f45050000	                            jg 0x400f281	      2990	intel_display.c	FUNCTION_98	IF_1
0x400ed3c	    0x41f786640600	    test dword [r14 + 0x664], 0xa000000 	      3005	intel_display.c	FUNCTION_98	IF_2	CALL_7
0x400ed47	            0x7422	                            je 0x400ed6b	      3005	intel_display.c	FUNCTION_98	IF_2	CALL_7
0x400ed49	        0x8b442404	                mov eax, dword [rsp + 4]	      3006	intel_display.c	FUNCTION_98	IF_2
0x400ed4d	      0x448b4c2408	                mov r9d, dword [rsp + 8]	      3007	intel_display.c	FUNCTION_98	IF_2	CALL_8
0x400ed52	          0x8d0c03	                    lea ecx, [rbx + rax]	      3006	intel_display.c	FUNCTION_98	IF_2
0x400ed55	        0x4183e904	                              sub r9d, 4	      3007	intel_display.c	FUNCTION_98	IF_2	CALL_8
0x400ed59	          0x83f903	                              cmp ecx, 3	      3005	intel_display.c	FUNCTION_98	IF_2	CALL_7
0x400ed5c	     0xf8eec040000	                           jle 0x400f24e	      3005	intel_display.c	FUNCTION_98	IF_2	CALL_7
0x400ed62	          0x4439c8	                            cmp eax, r9d	      3006	intel_display.c	FUNCTION_98	IF_2
0x400ed65	     0xf8f0b050000	                            jg 0x400f276	      3006	intel_display.c	FUNCTION_98	IF_2
0x400ed6b	      0x41f645400a	            test byte [r13 + 0x40], 0xa 	      2221	intel_display.c	FUNCTION_79	IF_1	CALL_2
0x400ed70	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      2218	intel_display.c	FUNCTION_79	CALL_1
0x400ed74	     0xf8413020000	                            je 0x400ef8d	      2221	intel_display.c	FUNCTION_79	IF_1	CALL_2
0x400ed7a	    0x8b9000010000	           mov edx, dword [rax + 0x100] 	      2222	intel_display.c	FUNCTION_79	IF_1
0x400ed80	    0x8b8004010000	           mov eax, dword [rax + 0x104] 	      2223	intel_display.c	FUNCTION_79	IF_1
0x400ed86	         0x1542410	             add dword [rsp + 0x10], edx	      2222	intel_display.c	FUNCTION_79	IF_1
0x400ed8a	         0x1442414	             add dword [rsp + 0x14], eax	      2223	intel_display.c	FUNCTION_79	IF_1
0x400ed8e	      0x488d742414	                   lea rsi, [rsp + 0x14]	      3015	intel_display.c	FUNCTION_98	CALL_10
0x400ed93	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3015	intel_display.c	FUNCTION_98	CALL_10
0x400ed98	            0x31c9	                            xor ecx, ecx	      3015	intel_display.c	FUNCTION_98	CALL_10
0x400ed9a	          0x4c89ea	                            mov rdx, r13	      3015	intel_display.c	FUNCTION_98	CALL_10
0x400ed9d	      0xe800000000	                          call 0x400eda2	      3015	intel_display.c	FUNCTION_98	CALL_10
0x400eda2	        0x498d7778	                   lea rsi, [r15 + 0x78]	      3015	intel_display.c	FUNCTION_98	CALL_10
0x400eda6	          0x4189c6	                           mov r14d, eax	      3015	intel_display.c	FUNCTION_98	CALL_10
0x400eda9	            0x31d2	                            xor edx, edx	      3016	intel_display.c	FUNCTION_98	CALL_11
0x400edab	          0x498b3f	                    mov rdi, qword [r15]	      3016	intel_display.c	FUNCTION_98	CALL_11
0x400edae	      0xe81d69ffff	   call sym.intel_surf_alignment.isra.55	      3016	intel_display.c	FUNCTION_98	CALL_11
0x400edb3	          0x4539f4	                          cmp r12d, r14d	      3023	intel_display.c	FUNCTION_98	IF_3
0x400edb6	        0x8944240c	              mov dword [rsp + 0xc], eax	      3016	intel_display.c	FUNCTION_98	CALL_11
0x400edba	     0xf82cd020000	                            jb 0x400f08d	      3023	intel_display.c	FUNCTION_98	IF_3
0x400edc0	        0x498b5778	            mov rdx, qword [r15 + 0x78] 	      3033	intel_display.c	FUNCTION_98	IF_4
0x400edc4	    0x48b801000000	          movabs rax, 0x100000000000001 	      3033	intel_display.c	FUNCTION_98	IF_4
0x400edce	          0x4839c2	                            cmp rdx, rax	      3033	intel_display.c	FUNCTION_98	IF_4
0x400edd1	     0xf84e2020000	                            je 0x400f0b9	      3033	intel_display.c	FUNCTION_98	IF_4
0x400edd7	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      3033	intel_display.c	FUNCTION_98	IF_4
0x400eddb	        0x89442408	                mov dword [rsp + 8], eax	      3033	intel_display.c	FUNCTION_98	IF_4
0x400eddf	    0x48b8fcffffff	          movabs rax, 0xfefffffffffffffc	      3051	intel_display.c	FUNCTION_98	IF_6
0x400ede9	          0x4801d0	                            add rax, rdx	      3051	intel_display.c	FUNCTION_98	IF_6
0x400edec	        0x8b542414	            mov edx, dword [rsp + 0x14] 	      3051	intel_display.c	FUNCTION_98	IF_6
0x400edf0	        0x4883f801	                              cmp rax, 1	      3051	intel_display.c	FUNCTION_98	IF_6
0x400edf4	            0x7677	                           jbe 0x400ee6d	      3051	intel_display.c	FUNCTION_98	IF_6
0x400edf6	        0x8b442408	                mov eax, dword [rsp + 8]	      3068	intel_display.c	FUNCTION_98
0x400edfa	    0x4589b5980000	            mov dword [r13 + 0x98], r14d	      3067	intel_display.c	FUNCTION_98
0x400ee01	    0x418995a00000	             mov dword [r13 + 0xa0], edx	      3069	intel_display.c	FUNCTION_98
0x400ee08	    0x4189859c0000	             mov dword [r13 + 0x9c], eax	      3068	intel_display.c	FUNCTION_98
0x400ee0f	            0x31c0	                            xor eax, eax	      3175	intel_display.c	FUNCTION_101
0x400ee11	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      3176	intel_display.c	FUNCTION_101
0x400ee16	    0x6548331c2528	                xor rbx, qword gs:[0x28]	      3176	intel_display.c	FUNCTION_101
0x400ee1f	     0xf85d1040000	                           jne 0x400f2f6	      3176	intel_display.c	FUNCTION_101
0x400ee25	        0x4883c428	                           add rsp, 0x28	      3176	intel_display.c	FUNCTION_101
0x400ee29	              0x5b	                                 pop rbx	      3176	intel_display.c	FUNCTION_101
0x400ee2a	              0x5d	                                 pop rbp	      3176	intel_display.c	FUNCTION_101
0x400ee2b	            0x415c	                                 pop r12	      3176	intel_display.c	FUNCTION_101
0x400ee2d	            0x415d	                                 pop r13	      3176	intel_display.c	FUNCTION_101
0x400ee2f	            0x415e	                                 pop r14	      3176	intel_display.c	FUNCTION_101
0x400ee31	            0x415f	                                 pop r15	      3176	intel_display.c	FUNCTION_101
0x400ee33	              0xc3	                                     ret	      3176	intel_display.c	FUNCTION_101
0x400ee34	          0x4585f6	                         test r14d, r14d	      3054	intel_display.c	FUNCTION_98	IF_6	WHILE_2	IF_7
0x400ee37	     0xf84b9030000	                            je 0x400f1f6	      3054	intel_display.c	FUNCTION_98	IF_6	WHILE_2	IF_7
0x400ee3d	          0x4489f0	                           mov eax, r14d	      3057	intel_display.c	FUNCTION_98	IF_6	WHILE_2	CALL_16
0x400ee40	        0x2b44240c	              sub eax, dword [rsp + 0xc]	      3057	intel_display.c	FUNCTION_98	IF_6	WHILE_2	CALL_16
0x400ee44	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400ee48	        0x458b4540	            mov r8d, dword [r13 + 0x40] 	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400ee4c	          0x4589f1	                           mov r9d, r14d	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400ee4f	            0x31c9	                            xor ecx, ecx	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400ee51	              0x50	                                push rax	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400ee52	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400ee57	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400ee5c	      0xe8ff2effff	      call sym._intel_adjust_tile_offset	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400ee61	          0x4189c6	                           mov r14d, eax	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400ee64	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400ee68	        0x89442410	             mov dword [rsp + 0x10], eax	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400ee6c	              0x59	                                 pop rcx	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400ee6d	        0x498b7510	            mov rsi, qword [r13 + 0x10] 	      2938	intel_display.c	FUNCTION_97
0x400ee71	      0x448b7c2414	           mov r15d, dword [rsp + 0x14] 	      3053	intel_display.c	FUNCTION_98	IF_6	WHILE_2	CALL_15
0x400ee76	    0x458ba5ac0000	           mov r12d, dword [r13 + 0xac] 	      2942	intel_display.c	FUNCTION_97
0x400ee7d	    0x458b8da40000	            mov r9d, dword [r13 + 0xa4] 	      2943	intel_display.c	FUNCTION_97
0x400ee84	        0x488b4648	            mov rax, qword [rsi + 0x48] 	      2939	intel_display.c	FUNCTION_97
0x400ee88	          0x4539e7	                          cmp r15d, r12d	      2946	intel_display.c	FUNCTION_97	WHILE_1
0x400ee8b	         0xfb65809	               movzx ebx, byte [rax + 9]	      2939	intel_display.c	FUNCTION_97
0x400ee8f	         0xfb6680a	            movzx ebp, byte [rax + 0xa] 	      2940	intel_display.c	FUNCTION_97
0x400ee93	    0x418b85a80000	            mov eax, dword [r13 + 0xa8] 	      2941	intel_display.c	FUNCTION_97
0x400ee9a	     0xf8c8d000000	                            jl 0x400ef2d	      2946	intel_display.c	FUNCTION_97	WHILE_1
0x400eea0	          0x4539ce	                           cmp r14d, r9d	      2946	intel_display.c	FUNCTION_97	WHILE_1
0x400eea3	     0xf8784000000	                            ja 0x400ef2d	      2946	intel_display.c	FUNCTION_97	WHILE_1
0x400eea9	          0x4539e7	                          cmp r15d, r12d	      2949	intel_display.c	FUNCTION_97	WHILE_1	IF_1
0x400eeac	            0x7506	                           jne 0x400eeb4	      2949	intel_display.c	FUNCTION_97	WHILE_1	IF_1
0x400eeae	        0x3b442408	                cmp eax, dword [rsp + 8]	      2949	intel_display.c	FUNCTION_97	WHILE_1	IF_1
0x400eeb2	            0x7479	                            je 0x400ef2d	      2949	intel_display.c	FUNCTION_97	WHILE_1	IF_1
0x400eeb4	          0x4585c9	                           test r9d, r9d	      2952	intel_display.c	FUNCTION_97	WHILE_1	IF_2
0x400eeb7	            0x750b	                           jne 0x400eec4	      2952	intel_display.c	FUNCTION_97	WHILE_1	IF_2
0x400eeb9	            0xeb72	                           jmp 0x400ef2d	      2952	intel_display.c	FUNCTION_97	WHILE_1	IF_2
0x400eebb	          0x4585c9	                           test r9d, r9d	      2952	intel_display.c	FUNCTION_97	WHILE_1	IF_2
0x400eebe	            0x746d	                            je 0x400ef2d	      2952	intel_display.c	FUNCTION_97	WHILE_1	IF_2
0x400eec0	        0x498b7510	            mov rsi, qword [r13 + 0x10] 	      2952	intel_display.c	FUNCTION_97	WHILE_1	IF_2
0x400eec4	              0x99	                                     cdq	      2955	intel_display.c	FUNCTION_97	WHILE_1
0x400eec5	        0x458b4540	            mov r8d, dword [r13 + 0x40] 	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400eec9	      0xb901000000	                              mov ecx, 1	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400eece	            0xf7fb	                                idiv ebx	      2955	intel_display.c	FUNCTION_97	WHILE_1
0x400eed0	        0x89442418	             mov dword [rsp + 0x18], eax	      2955	intel_display.c	FUNCTION_97	WHILE_1
0x400eed4	          0x4489e0	                           mov eax, r12d	      2956	intel_display.c	FUNCTION_97	WHILE_1
0x400eed7	        0x89542404	                mov dword [rsp + 4], edx	      2955	intel_display.c	FUNCTION_97	WHILE_1
0x400eedb	              0x99	                                     cdq	      2956	intel_display.c	FUNCTION_97	WHILE_1
0x400eedc	            0xf7fd	                                idiv ebp	      2956	intel_display.c	FUNCTION_97	WHILE_1
0x400eede	        0x8944241c	             mov dword [rsp + 0x1c], eax	      2956	intel_display.c	FUNCTION_97	WHILE_1
0x400eee2	    0x418d8100f0ff	                  lea eax, [r9 - 0x1000]	      2957	intel_display.c	FUNCTION_97	WHILE_1	CALL_2
0x400eee9	          0x4189d4	                           mov r12d, edx	      2956	intel_display.c	FUNCTION_97	WHILE_1
0x400eeec	          0x4889f2	                            mov rdx, rsi	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400eeef	              0x50	                                push rax	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400eef0	      0x488d742424	                   lea rsi, [rsp + 0x24]	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400eef5	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400eefa	      0xe8612effff	      call sym._intel_adjust_tile_offset	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400eeff	        0x8b542424	            mov edx, dword [rsp + 0x24] 	      2960	intel_display.c	FUNCTION_97	WHILE_1
0x400ef03	          0x4189c1	                            mov r9d, eax	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400ef06	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      2959	intel_display.c	FUNCTION_97	WHILE_1
0x400ef0a	           0xfafd5	                           imul edx, ebp	      2960	intel_display.c	FUNCTION_97	WHILE_1
0x400ef0d	           0xfafc3	                           imul eax, ebx	      2959	intel_display.c	FUNCTION_97	WHILE_1
0x400ef10	         0x344240c	              add eax, dword [rsp + 0xc]	      2959	intel_display.c	FUNCTION_97	WHILE_1
0x400ef14	          0x4101d4	                           add r12d, edx	      2960	intel_display.c	FUNCTION_97	WHILE_1
0x400ef17	          0x4539ce	                           cmp r14d, r9d	      2946	intel_display.c	FUNCTION_97	WHILE_1
0x400ef1a	              0x5a	                                 pop rdx	      2946	intel_display.c	FUNCTION_97	WHILE_1
0x400ef1b	            0x7710	                            ja 0x400ef2d	      2946	intel_display.c	FUNCTION_97	WHILE_1
0x400ef1d	          0x4539e7	                          cmp r15d, r12d	      2946	intel_display.c	FUNCTION_97	WHILE_1
0x400ef20	            0x7c0b	                            jl 0x400ef2d	      2946	intel_display.c	FUNCTION_97	WHILE_1
0x400ef22	        0x3b442408	                cmp eax, dword [rsp + 8]	      2949	intel_display.c	FUNCTION_97	WHILE_1	IF_1
0x400ef26	            0x7593	                           jne 0x400eebb	      2949	intel_display.c	FUNCTION_97	WHILE_1	IF_1
0x400ef28	          0x4539e7	                          cmp r15d, r12d	      2949	intel_display.c	FUNCTION_97	WHILE_1	IF_1
0x400ef2b	            0x758e	                           jne 0x400eebb	      2949	intel_display.c	FUNCTION_97	WHILE_1	IF_1
0x400ef2d	        0x3b442408	                cmp eax, dword [rsp + 8]	      2963	intel_display.c	FUNCTION_97	IF_3
0x400ef31	     0xf85fdfeffff	                           jne 0x400ee34	      2963	intel_display.c	FUNCTION_97	IF_3
0x400ef37	          0x4539e7	                          cmp r15d, r12d	      2963	intel_display.c	FUNCTION_97	IF_3
0x400ef3a	     0xf85f4feffff	                           jne 0x400ee34	      2963	intel_display.c	FUNCTION_97	IF_3
0x400ef40	    0x45898da40000	             mov dword [r13 + 0xa4], r9d	      2966	intel_display.c	FUNCTION_97
0x400ef47	    0x418985a80000	             mov dword [r13 + 0xa8], eax	      2967	intel_display.c	FUNCTION_97
0x400ef4e	    0x4589a5ac0000	            mov dword [r13 + 0xac], r12d	      2968	intel_display.c	FUNCTION_97
0x400ef55	        0x8b5c2410	            mov ebx, dword [rsp + 0x10] 	      3061	intel_display.c	FUNCTION_98	IF_6	IF_8
0x400ef59	            0x39c3	                            cmp ebx, eax	      3061	intel_display.c	FUNCTION_98	IF_6	IF_8
0x400ef5b	        0x895c2408	                mov dword [rsp + 8], ebx	      3061	intel_display.c	FUNCTION_98	IF_6	IF_8
0x400ef5f	            0x7511	                           jne 0x400ef72	      3061	intel_display.c	FUNCTION_98	IF_6	IF_8
0x400ef61	        0x8b542414	            mov edx, dword [rsp + 0x14] 	      3061	intel_display.c	FUNCTION_98	IF_6	IF_8
0x400ef65	    0x413995ac0000	            cmp dword [r13 + 0xac], edx 	      3061	intel_display.c	FUNCTION_98	IF_6	IF_8
0x400ef6c	     0xf8484feffff	                            je 0x400edf6	      3061	intel_display.c	FUNCTION_98	IF_6	IF_8
0x400ef72	    0x48c7c6000000	                              mov rsi, 0	      3062	intel_display.c	FUNCTION_98	IF_6	IF_8	CALL_17
0x400ef79	      0xbf04000000	                              mov edi, 4	      3062	intel_display.c	FUNCTION_98	IF_6	IF_8	CALL_17
0x400ef7e	      0xe800000000	                          call 0x400ef83	      3062	intel_display.c	FUNCTION_98	IF_6	IF_8	CALL_17
0x400ef83	      0xb8eaffffff	                     mov eax, 0xffffffea	      3063	intel_display.c	FUNCTION_98	IF_6	IF_8
0x400ef88	      0xe984feffff	                           jmp 0x400ee11	      3063	intel_display.c	FUNCTION_98	IF_6	IF_8
0x400ef8d	    0x8b90f0000000	            mov edx, dword [rax + 0xf0] 	      2225	intel_display.c	FUNCTION_79	ELSE_1
0x400ef93	    0x8b80f4000000	            mov eax, dword [rax + 0xf4] 	      2226	intel_display.c	FUNCTION_79	ELSE_1
0x400ef99	         0x1542410	             add dword [rsp + 0x10], edx	      2225	intel_display.c	FUNCTION_79	ELSE_1
0x400ef9d	         0x1442414	             add dword [rsp + 0x14], eax	      2226	intel_display.c	FUNCTION_79	ELSE_1
0x400efa1	      0xe9e8fdffff	                           jmp 0x400ed8e	      2226	intel_display.c	FUNCTION_79	ELSE_1
0x400efa6	    0x8b9384000000	            mov edx, dword [rbx + 0x84] 	      3148	intel_display.c	FUNCTION_101	IF_3	CALL_3
0x400efac	    0x8bb380000000	            mov esi, dword [rbx + 0x80] 	      3148	intel_display.c	FUNCTION_101	IF_3	CALL_3
0x400efb2	        0x498d7d54	                   lea rdi, [r13 + 0x54]	      3148	intel_display.c	FUNCTION_101	IF_3	CALL_3
0x400efb6	      0xb908000000	                              mov ecx, 8	      3148	intel_display.c	FUNCTION_101	IF_3	CALL_3
0x400efbb	          0xc1e210	                           shl edx, 0x10	      3148	intel_display.c	FUNCTION_101	IF_3	CALL_3
0x400efbe	          0xc1e610	                           shl esi, 0x10	      3148	intel_display.c	FUNCTION_101	IF_3	CALL_3
0x400efc1	      0xe800000000	                          call 0x400efc6	      3148	intel_display.c	FUNCTION_101	IF_3	CALL_3
0x400efc6	        0x4d8b7d10	            mov r15, qword [r13 + 0x10] 	      3148	intel_display.c	FUNCTION_101	IF_3	CALL_3
0x400efca	      0xe9b5fcffff	                           jmp 0x400ec84	      3148	intel_display.c	FUNCTION_101	IF_3	CALL_3
0x400efcf	        0x498b4748	            mov rax, qword [r15 + 0x48] 	      3108	intel_display.c	FUNCTION_100
0x400efd3	      0x450fbf4556	           movsx r8d, word [r13 + 0x56] 	      3106	intel_display.c	FUNCTION_100
0x400efd8	      0x410fbf5d5a	           movsx ebx, word [r13 + 0x5a] 	      3107	intel_display.c	FUNCTION_100
0x400efdd	      0x440fb67009	              movzx r14d, byte [rax + 9]	      3108	intel_display.c	FUNCTION_100
0x400efe2	      0x440fb6600a	           movzx r12d, byte [rax + 0xa] 	      3109	intel_display.c	FUNCTION_100
0x400efe7	          0x4489c0	                            mov eax, r8d	      3110	intel_display.c	FUNCTION_100
0x400efea	              0x99	                                     cdq	      3110	intel_display.c	FUNCTION_100
0x400efeb	          0x41f7fe	                               idiv r14d	      3110	intel_display.c	FUNCTION_100
0x400efee	            0x89c1	                            mov ecx, eax	      3110	intel_display.c	FUNCTION_100
0x400eff0	        0x89442418	             mov dword [rsp + 0x18], eax	      3110	intel_display.c	FUNCTION_100
0x400eff4	            0x89d8	                            mov eax, ebx	      3111	intel_display.c	FUNCTION_100
0x400eff6	              0x99	                                     cdq	      3111	intel_display.c	FUNCTION_100
0x400eff7	          0x41f7fc	                               idiv r12d	      3111	intel_display.c	FUNCTION_100
0x400effa	        0x418b5540	            mov edx, dword [r13 + 0x40] 	      3114	intel_display.c	FUNCTION_100	IF_1
0x400effe	    0xf7c2faffffff	                    test edx, 0xfffffffa	      3114	intel_display.c	FUNCTION_100	IF_1
0x400f004	        0x8944241c	             mov dword [rsp + 0x1c], eax	      3111	intel_display.c	FUNCTION_100
0x400f008	     0xf85a4020000	                           jne 0x400f2b2	      3114	intel_display.c	FUNCTION_100	IF_1
0x400f00e	          0x83e20a	                            and edx, 0xa	      2221	intel_display.c	FUNCTION_79	IF_1	CALL_2
0x400f011	     0xf8501020000	                           jne 0x400f218	      2221	intel_display.c	FUNCTION_79	IF_1	CALL_2
0x400f017	    0x41038ff80000	             add ecx, dword [r15 + 0xf8]	      2225	intel_display.c	FUNCTION_79	ELSE_1
0x400f01e	        0x894c2418	             mov dword [rsp + 0x18], ecx	      2225	intel_display.c	FUNCTION_79	ELSE_1
0x400f022	    0x410387fc0000	             add eax, dword [r15 + 0xfc]	      2226	intel_display.c	FUNCTION_79	ELSE_1
0x400f029	        0x8944241c	             mov dword [rsp + 0x1c], eax	      2226	intel_display.c	FUNCTION_79	ELSE_1
0x400f02d	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      3121	intel_display.c	FUNCTION_100	CALL_3
0x400f032	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      3121	intel_display.c	FUNCTION_100	CALL_3
0x400f037	      0xb901000000	                              mov ecx, 1	      3121	intel_display.c	FUNCTION_100	CALL_3
0x400f03c	          0x4c89ea	                            mov rdx, r13	      3121	intel_display.c	FUNCTION_100	CALL_3
0x400f03f	      0x4489442404	                mov dword [rsp + 4], r8d	      3121	intel_display.c	FUNCTION_100	CALL_3
0x400f044	      0xe800000000	                          call 0x400f049	      3121	intel_display.c	FUNCTION_100	CALL_3
0x400f049	      0x448b442404	                mov r8d, dword [rsp + 4]	      3124	intel_display.c	FUNCTION_100
0x400f04e	    0x418985a40000	             mov dword [r13 + 0xa4], eax	      3123	intel_display.c	FUNCTION_100
0x400f055	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	      3124	intel_display.c	FUNCTION_100
0x400f059	        0x4d8b7d10	            mov r15, qword [r13 + 0x10] 	      3124	intel_display.c	FUNCTION_100
0x400f05d	          0x4489c0	                            mov eax, r8d	      3124	intel_display.c	FUNCTION_100
0x400f060	              0x99	                                     cdq	      3124	intel_display.c	FUNCTION_100
0x400f061	          0x41f7fe	                               idiv r14d	      3124	intel_display.c	FUNCTION_100
0x400f064	            0x89d8	                            mov eax, ebx	      3125	intel_display.c	FUNCTION_100
0x400f066	        0x410fafce	                          imul ecx, r14d	      3124	intel_display.c	FUNCTION_100
0x400f06a	             0x1ca	                            add edx, ecx	      3124	intel_display.c	FUNCTION_100
0x400f06c	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      3125	intel_display.c	FUNCTION_100
0x400f070	    0x418995a80000	             mov dword [r13 + 0xa8], edx	      3124	intel_display.c	FUNCTION_100
0x400f077	              0x99	                                     cdq	      3125	intel_display.c	FUNCTION_100
0x400f078	          0x41f7fc	                               idiv r12d	      3125	intel_display.c	FUNCTION_100
0x400f07b	        0x410fafcc	                          imul ecx, r12d	      3125	intel_display.c	FUNCTION_100
0x400f07f	             0x1ca	                            add edx, ecx	      3125	intel_display.c	FUNCTION_100
0x400f081	    0x418995ac0000	             mov dword [r13 + 0xac], edx	      3125	intel_display.c	FUNCTION_100
0x400f088	      0xe940fcffff	                           jmp 0x400eccd	      3125	intel_display.c	FUNCTION_100
0x400f08d	            0xf7d8	                                 neg eax	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400f08f	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400f093	        0x458b4540	            mov r8d, dword [r13 + 0x40] 	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400f097	          0x4121c4	                           and r12d, eax	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400f09a	          0x4589f1	                           mov r9d, r14d	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400f09d	            0x31c9	                            xor ecx, ecx	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400f09f	            0x4154	                                push r12	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400f0a1	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400f0a6	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400f0ab	      0xe8b02cffff	      call sym._intel_adjust_tile_offset	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400f0b0	          0x4189c6	                           mov r14d, eax	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400f0b3	              0x5f	                                 pop rdi	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400f0b4	      0xe907fdffff	                           jmp 0x400edc0	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400f0b9	        0x498b4748	            mov rax, qword [r15 + 0x48] 	      3034	intel_display.c	FUNCTION_98	IF_4
0x400f0bd	         0xfb66806	               movzx ebp, byte [rax + 6]	      3034	intel_display.c	FUNCTION_98	IF_4
0x400f0c1	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      3036	intel_display.c	FUNCTION_98	IF_4	WHILE_1
0x400f0c5	        0x89442408	                mov dword [rsp + 8], eax	      3036	intel_display.c	FUNCTION_98	IF_4	WHILE_1
0x400f0c9	             0x1d8	                            add eax, ebx	      3036	intel_display.c	FUNCTION_98	IF_4	WHILE_1
0x400f0cb	           0xfafc5	                           imul eax, ebp	      3036	intel_display.c	FUNCTION_98	IF_4	WHILE_1
0x400f0ce	        0x41394758	            cmp dword [r15 + 0x58], eax 	      3036	intel_display.c	FUNCTION_98	IF_4	WHILE_1
0x400f0d2	            0x7244	                            jb 0x400f118	      3036	intel_display.c	FUNCTION_98	IF_4	WHILE_1
0x400f0d4	      0xe9d0010000	                           jmp 0x400f2a9	      3036	intel_display.c	FUNCTION_98	IF_4	WHILE_1
0x400f0d9	          0x4489f0	                           mov eax, r14d	      3042	intel_display.c	FUNCTION_98	IF_4	WHILE_1	CALL_14
0x400f0dc	        0x2b44240c	              sub eax, dword [rsp + 0xc]	      3042	intel_display.c	FUNCTION_98	IF_4	WHILE_1	CALL_14
0x400f0e0	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400f0e4	        0x458b4540	            mov r8d, dword [r13 + 0x40] 	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400f0e8	          0x4589f1	                           mov r9d, r14d	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400f0eb	            0x31c9	                            xor ecx, ecx	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400f0ed	              0x50	                                push rax	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400f0ee	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400f0f3	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400f0f8	      0xe8632cffff	      call sym._intel_adjust_tile_offset	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400f0fd	          0x4189c6	                           mov r14d, eax	      2303	intel_display.c	FUNCTION_82	CALL_1
0x400f100	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      3036	intel_display.c	FUNCTION_98	IF_4	WHILE_1
0x400f104	        0x89442410	             mov dword [rsp + 0x10], eax	      3036	intel_display.c	FUNCTION_98	IF_4	WHILE_1
0x400f108	             0x1d8	                            add eax, ebx	      3036	intel_display.c	FUNCTION_98	IF_4	WHILE_1
0x400f10a	           0xfafc5	                           imul eax, ebp	      3036	intel_display.c	FUNCTION_98	IF_4	WHILE_1
0x400f10d	        0x413b4758	            cmp eax, dword [r15 + 0x58] 	      3036	intel_display.c	FUNCTION_98	IF_4	WHILE_1
0x400f111	              0x5e	                                 pop rsi	      3036	intel_display.c	FUNCTION_98	IF_4	WHILE_1
0x400f112	     0xf86d5000000	                           jbe 0x400f1ed	      3036	intel_display.c	FUNCTION_98	IF_4	WHILE_1
0x400f118	          0x4585f6	                         test r14d, r14d	      3037	intel_display.c	FUNCTION_98	IF_4	WHILE_1	IF_5
0x400f11b	            0x75bc	                           jne 0x400f0d9	      3037	intel_display.c	FUNCTION_98	IF_4	WHILE_1	IF_5
0x400f11d	    0x48c7c6000000	                              mov rsi, 0	      3038	intel_display.c	FUNCTION_98	IF_4	WHILE_1	IF_5	CALL_13
0x400f124	      0xbf04000000	                              mov edi, 4	      3038	intel_display.c	FUNCTION_98	IF_4	WHILE_1	IF_5	CALL_13
0x400f129	      0xe800000000	                          call 0x400f12e	      3038	intel_display.c	FUNCTION_98	IF_4	WHILE_1	IF_5	CALL_13
0x400f12e	      0xb8eaffffff	                     mov eax, 0xffffffea	      3039	intel_display.c	FUNCTION_98	IF_4	WHILE_1	IF_5
0x400f133	      0xe9d9fcffff	                           jmp 0x400ee11	      3039	intel_display.c	FUNCTION_98	IF_4	WHILE_1	IF_5
0x400f138	        0x498b7778	            mov rsi, qword [r15 + 0x78] 	      3078	intel_display.c	FUNCTION_99	CALL_1
0x400f13c	        0x498b7f48	            mov rdi, qword [r15 + 0x48] 	      3078	intel_display.c	FUNCTION_99	CALL_1
0x400f140	      0xba01000000	                              mov edx, 1	      3078	intel_display.c	FUNCTION_99	CALL_1
0x400f145	      0xe88660ffff	    call sym.skl_max_plane_width.isra.51	      3078	intel_display.c	FUNCTION_99	CALL_1
0x400f14a	        0x418b4d58	            mov ecx, dword [r13 + 0x58] 	      3081	intel_display.c	FUNCTION_99
0x400f14e	        0x418b7554	            mov esi, dword [r13 + 0x54] 	      3080	intel_display.c	FUNCTION_99
0x400f152	          0x4189c6	                           mov r14d, eax	      3078	intel_display.c	FUNCTION_99	CALL_1
0x400f155	        0x418b5d5c	            mov ebx, dword [r13 + 0x5c] 	      3082	intel_display.c	FUNCTION_99	CALL_2
0x400f159	        0x458b6560	           mov r12d, dword [r13 + 0x60] 	      3083	intel_display.c	FUNCTION_99	CALL_3
0x400f15d	            0x89c8	                            mov eax, ecx	      3081	intel_display.c	FUNCTION_99
0x400f15f	            0x89f2	                            mov edx, esi	      3080	intel_display.c	FUNCTION_99
0x400f161	          0x4129cc	                           sub r12d, ecx	      3083	intel_display.c	FUNCTION_99	CALL_3
0x400f164	            0x29f3	                            sub ebx, esi	      3082	intel_display.c	FUNCTION_99	CALL_2
0x400f166	          0xc1fa11	                           sar edx, 0x11	      3080	intel_display.c	FUNCTION_99
0x400f169	          0xc1f811	                           sar eax, 0x11	      3081	intel_display.c	FUNCTION_99
0x400f16c	          0xc1fb11	                           sar ebx, 0x11	      3082	intel_display.c	FUNCTION_99	CALL_2
0x400f16f	        0x41c1fc11	                          sar r12d, 0x11	      3083	intel_display.c	FUNCTION_99	CALL_3
0x400f173	      0x41f645400a	            test byte [r13 + 0x40], 0xa 	      2221	intel_display.c	FUNCTION_79	IF_1	CALL_2
0x400f178	        0x89542418	             mov dword [rsp + 0x18], edx	      3080	intel_display.c	FUNCTION_99
0x400f17c	        0x8944241c	             mov dword [rsp + 0x1c], eax	      3081	intel_display.c	FUNCTION_99
0x400f180	        0x498b4d10	            mov rcx, qword [r13 + 0x10] 	      2218	intel_display.c	FUNCTION_79	CALL_1
0x400f184	            0x757c	                           jne 0x400f202	      2221	intel_display.c	FUNCTION_79	IF_1	CALL_2
0x400f186	     0x391f8000000	             add edx, dword [rcx + 0xf8]	      2225	intel_display.c	FUNCTION_79	ELSE_1
0x400f18c	        0x89542418	             mov dword [rsp + 0x18], edx	      2225	intel_display.c	FUNCTION_79	ELSE_1
0x400f190	     0x381fc000000	             add eax, dword [rcx + 0xfc]	      2226	intel_display.c	FUNCTION_79	ELSE_1
0x400f196	        0x8944241c	             mov dword [rsp + 0x1c], eax	      2226	intel_display.c	FUNCTION_79	ELSE_1
0x400f19a	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      3087	intel_display.c	FUNCTION_99	CALL_5
0x400f19f	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      3087	intel_display.c	FUNCTION_99	CALL_5
0x400f1a4	      0xb901000000	                              mov ecx, 1	      3087	intel_display.c	FUNCTION_99	CALL_5
0x400f1a9	          0x4c89ea	                            mov rdx, r13	      3087	intel_display.c	FUNCTION_99	CALL_5
0x400f1ac	      0xe800000000	                          call 0x400f1b1	      3087	intel_display.c	FUNCTION_99	CALL_5
0x400f1b1	          0x4139de	                           cmp r14d, ebx	      3090	intel_display.c	FUNCTION_99	IF_1
0x400f1b4	     0xf8c13010000	                            jl 0x400f2cd	      3090	intel_display.c	FUNCTION_99	IF_1
0x400f1ba	    0x4181fc001000	                        cmp r12d, 0x1000	      3090	intel_display.c	FUNCTION_99	IF_1
0x400f1c1	     0xf8f06010000	                            jg 0x400f2cd	      3090	intel_display.c	FUNCTION_99	IF_1
0x400f1c7	    0x418985a40000	             mov dword [r13 + 0xa4], eax	      3096	intel_display.c	FUNCTION_99
0x400f1ce	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      3097	intel_display.c	FUNCTION_99
0x400f1d2	        0x4d8b7d10	            mov r15, qword [r13 + 0x10] 	      3097	intel_display.c	FUNCTION_99
0x400f1d6	    0x418985a80000	             mov dword [r13 + 0xa8], eax	      3097	intel_display.c	FUNCTION_99
0x400f1dd	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      3098	intel_display.c	FUNCTION_99
0x400f1e1	    0x418985ac0000	             mov dword [r13 + 0xac], eax	      3098	intel_display.c	FUNCTION_99
0x400f1e8	      0xe9e0faffff	                           jmp 0x400eccd	      3098	intel_display.c	FUNCTION_99
0x400f1ed	        0x498b5778	            mov rdx, qword [r15 + 0x78] 	      3098	intel_display.c	FUNCTION_99
0x400f1f1	      0xe9e9fbffff	                           jmp 0x400eddf	      3098	intel_display.c	FUNCTION_99
0x400f1f6	    0x418b85a80000	            mov eax, dword [r13 + 0xa8] 	      3098	intel_display.c	FUNCTION_99
0x400f1fd	      0xe953fdffff	                           jmp 0x400ef55	      3098	intel_display.c	FUNCTION_99
0x400f202	     0x3910c010000	            add edx, dword [rcx + 0x10c]	      2222	intel_display.c	FUNCTION_79	IF_1
0x400f208	        0x89542418	             mov dword [rsp + 0x18], edx	      2222	intel_display.c	FUNCTION_79	IF_1
0x400f20c	     0x38110010000	            add eax, dword [rcx + 0x110]	      2223	intel_display.c	FUNCTION_79	IF_1
0x400f212	        0x8944241c	             mov dword [rsp + 0x1c], eax	      2223	intel_display.c	FUNCTION_79	IF_1
0x400f216	            0xeb82	                           jmp 0x400f19a	      2223	intel_display.c	FUNCTION_79	IF_1
0x400f218	    0x41038f0c0100	            add ecx, dword [r15 + 0x10c]	      2222	intel_display.c	FUNCTION_79	IF_1
0x400f21f	        0x894c2418	             mov dword [rsp + 0x18], ecx	      2222	intel_display.c	FUNCTION_79	IF_1
0x400f223	    0x410387100100	            add eax, dword [r15 + 0x110]	      2223	intel_display.c	FUNCTION_79	IF_1
0x400f22a	        0x8944241c	             mov dword [rsp + 0x1c], eax	      2223	intel_display.c	FUNCTION_79	IF_1
0x400f22e	      0xe9fafdffff	                           jmp 0x400f02d	      2223	intel_display.c	FUNCTION_79	IF_1
0x400f233	    0x48c7c6000000	                              mov rsi, 0	      3139	intel_display.c	FUNCTION_101	IF_1	CALL_1
0x400f23a	      0xbf04000000	                              mov edi, 4	      3139	intel_display.c	FUNCTION_101	IF_1	CALL_1
0x400f23f	      0xe800000000	                          call 0x400f244	      3139	intel_display.c	FUNCTION_101	IF_1	CALL_1
0x400f244	      0xb8eaffffff	                     mov eax, 0xffffffea	      3140	intel_display.c	FUNCTION_101	IF_1
0x400f249	      0xe9c3fbffff	                           jmp 0x400ee11	      3140	intel_display.c	FUNCTION_101	IF_1
0x400f24e	    0x48c7c2000000	                              mov rdx, 0	      3007	intel_display.c	FUNCTION_98	IF_2	CALL_8
0x400f255	    0x41b804000000	                              mov r8d, 4	      3007	intel_display.c	FUNCTION_98	IF_2	CALL_8
0x400f25b	    0x48c7c6000000	                              mov rsi, 0	      3007	intel_display.c	FUNCTION_98	IF_2	CALL_8
0x400f262	      0xbf04000000	                              mov edi, 4	      3007	intel_display.c	FUNCTION_98	IF_2	CALL_8
0x400f267	      0xe800000000	                          call 0x400f26c	      3007	intel_display.c	FUNCTION_98	IF_2	CALL_8
0x400f26c	      0xb8deffffff	                     mov eax, 0xffffffde	      3011	intel_display.c	FUNCTION_98	IF_2
0x400f271	      0xe99bfbffff	                           jmp 0x400ee11	      3011	intel_display.c	FUNCTION_98	IF_2
0x400f276	            0x89c1	                            mov ecx, eax	      3006	intel_display.c	FUNCTION_98	IF_2
0x400f278	    0x48c7c2000000	                              mov rdx, 0	      3007	intel_display.c	FUNCTION_98	IF_2	CALL_8
0x400f27f	            0xebd4	                           jmp 0x400f255	      3007	intel_display.c	FUNCTION_98	IF_2	CALL_8
0x400f281	          0x4189c0	                            mov r8d, eax	      2991	intel_display.c	FUNCTION_98	IF_1	CALL_5
0x400f284	    0x41b900100000	                         mov r9d, 0x1000	      2991	intel_display.c	FUNCTION_98	IF_1	CALL_5
0x400f28a	            0x89e9	                            mov ecx, ebp	      2991	intel_display.c	FUNCTION_98	IF_1	CALL_5
0x400f28c	            0x89da	                            mov edx, ebx	      2991	intel_display.c	FUNCTION_98	IF_1	CALL_5
0x400f28e	    0x48c7c6000000	                              mov rsi, 0	      2991	intel_display.c	FUNCTION_98	IF_1	CALL_5
0x400f295	      0xbf04000000	                              mov edi, 4	      2991	intel_display.c	FUNCTION_98	IF_1	CALL_5
0x400f29a	      0xe800000000	                          call 0x400f29f	      2991	intel_display.c	FUNCTION_98	IF_1	CALL_5
0x400f29f	      0xb8eaffffff	                     mov eax, 0xffffffea	      2993	intel_display.c	FUNCTION_98	IF_1
0x400f2a4	      0xe968fbffff	                           jmp 0x400ee11	      2993	intel_display.c	FUNCTION_98	IF_1
0x400f2a9	        0x8b542414	            mov edx, dword [rsp + 0x14] 	      2993	intel_display.c	FUNCTION_98	IF_1
0x400f2ad	      0xe944fbffff	                           jmp 0x400edf6	      2993	intel_display.c	FUNCTION_98	IF_1
0x400f2b2	    0x48c7c6000000	                              mov rsi, 0	      3115	intel_display.c	FUNCTION_100	IF_1	CALL_1
0x400f2b9	      0xbf04000000	                              mov edi, 4	      3115	intel_display.c	FUNCTION_100	IF_1	CALL_1
0x400f2be	      0xe800000000	                          call 0x400f2c3	      3115	intel_display.c	FUNCTION_100	IF_1	CALL_1
0x400f2c3	      0xb8eaffffff	                     mov eax, 0xffffffea	      3117	intel_display.c	FUNCTION_100	IF_1
0x400f2c8	      0xe944fbffff	                           jmp 0x400ee11	      3117	intel_display.c	FUNCTION_100	IF_1
0x400f2cd	    0x41b900100000	                         mov r9d, 0x1000	      3091	intel_display.c	FUNCTION_99	IF_1	CALL_6
0x400f2d3	          0x4589f0	                           mov r8d, r14d	      3091	intel_display.c	FUNCTION_99	IF_1	CALL_6
0x400f2d6	          0x4489e1	                           mov ecx, r12d	      3091	intel_display.c	FUNCTION_99	IF_1	CALL_6
0x400f2d9	            0x89da	                            mov edx, ebx	      3091	intel_display.c	FUNCTION_99	IF_1	CALL_6
0x400f2db	    0x48c7c6000000	                              mov rsi, 0	      3091	intel_display.c	FUNCTION_99	IF_1	CALL_6
0x400f2e2	      0xbf04000000	                              mov edi, 4	      3091	intel_display.c	FUNCTION_99	IF_1	CALL_6
0x400f2e7	      0xe800000000	                          call 0x400f2ec	      3091	intel_display.c	FUNCTION_99	IF_1	CALL_6
0x400f2ec	      0xb8eaffffff	                     mov eax, 0xffffffea	      3093	intel_display.c	FUNCTION_99	IF_1
0x400f2f1	      0xe91bfbffff	                           jmp 0x400ee11	      3093	intel_display.c	FUNCTION_99	IF_1
0x400f2f6	      0xe800000000	                          call 0x400f2fb	      3176	intel_display.c	FUNCTION_101
intel_connector_attach_encoder	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,1	2
0x401a800	    0x4889b7200400	            mov qword [rdi + 0x420], rsi	     15447	intel_display.c	FUNCTION_425
0x401a807	      0xe900000000	                           jmp 0x401a80c	     15448	intel_display.c	FUNCTION_425	CALL_1
quirk_invert_brightness	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,2	3
0x4004e40	    0x48838f005600	              or qword [rdi + 0x5600], 4	     14358	intel_display.c	FUNCTION_394
0x4004e48	    0x48c7c7000000	                              mov rdi, 0	     14359	intel_display.c	FUNCTION_394	CALL_2
0x4004e4f	      0xe900000000	                           jmp 0x4004e54	     14359	intel_display.c	FUNCTION_394	CALL_2
intel_connector_unregister	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,3	6
0x401a6b0	              0x53	                                push rbx	     15376	intel_display.c	FUNCTION_422
0x401a6b1	          0x4889fb	                            mov rbx, rdi	     15376	intel_display.c	FUNCTION_422
0x401a6b4	      0xe800000000	                          call 0x401a6b9	     15379	intel_display.c	FUNCTION_422	CALL_2
0x401a6b9	          0x4889df	                            mov rdi, rbx	     15380	intel_display.c	FUNCTION_422	CALL_3
0x401a6bc	              0x5b	                                 pop rbx	     15381	intel_display.c	FUNCTION_422
0x401a6bd	      0xe900000000	                           jmp 0x401a6c2	     15380	intel_display.c	FUNCTION_422	CALL_3
skl_update_crtcs	FOR,0:SWITCH,0:DO,1:WHILE,0:IF,1:ELSE,0:functions,1:CALL,4	123
0x4010390	            0x4157	                                push r15	     12173	intel_display.c	FUNCTION_344
0x4010392	            0x4156	                                push r14	     12173	intel_display.c	FUNCTION_344
0x4010394	            0x4155	                                push r13	     12173	intel_display.c	FUNCTION_344
0x4010396	            0x4154	                                push r12	     12173	intel_display.c	FUNCTION_344
0x4010398	              0x55	                                push rbp	     12173	intel_display.c	FUNCTION_344
0x4010399	              0x53	                                push rbx	     12173	intel_display.c	FUNCTION_344
0x401039a	        0x4883ec40	                           sub rsp, 0x40	     12173	intel_display.c	FUNCTION_344
0x401039e	        0x488b7708	                mov rsi, qword [rdi + 8]	     12174	intel_display.c	FUNCTION_344	CALL_1
0x40103a2	    0x65488b042528	                mov rax, qword gs:[0x28]	     12173	intel_display.c	FUNCTION_344
0x40103ab	      0x4889442438	             mov qword [rsp + 0x38], rax	     12173	intel_display.c	FUNCTION_344
0x40103b0	            0x31c0	                            xor eax, eax	     12173	intel_display.c	FUNCTION_344
0x40103b2	    0x48c744242000	               mov qword [rsp + 0x20], 0	     12185	intel_display.c	FUNCTION_344
0x40103bb	    0x48c744242800	               mov qword [rsp + 0x28], 0	     12185	intel_display.c	FUNCTION_344
0x40103c4	    0x448b86600300	           mov r8d, dword [rsi + 0x360] 	     12187	intel_display.c	FUNCTION_344	CALL_3
0x40103cb	      0x4889742410	             mov qword [rsp + 0x10], rsi	     12174	intel_display.c	FUNCTION_344	CALL_1
0x40103d0	    0x48c744243000	               mov qword [rsp + 0x30], 0	     12185	intel_display.c	FUNCTION_344
0x40103d9	          0x4585c0	                           test r8d, r8d	     12187	intel_display.c	FUNCTION_344	CALL_3
0x40103dc	     0xf8e70010000	                           jle 0x4010552	     12187	intel_display.c	FUNCTION_344	CALL_3
0x40103e2	        0x488b4f20	            mov rcx, qword [rdi + 0x20] 	     12187	intel_display.c	FUNCTION_344	CALL_3
0x40103e6	          0x4989fd	                            mov r13, rdi	     12187	intel_display.c	FUNCTION_344	CALL_3
0x40103e9	            0x31d2	                            xor edx, edx	     12187	intel_display.c	FUNCTION_344	CALL_3
0x40103eb	          0x4889c8	                            mov rax, rcx	     12187	intel_display.c	FUNCTION_344	CALL_3
0x40103ee	        0x48833800	                      cmp qword [rax], 0	     12187	intel_display.c	FUNCTION_344	CALL_3
0x40103f2	            0x741a	                            je 0x401040e	     12187	intel_display.c	FUNCTION_344	CALL_3
0x40103f4	        0x488b7818	            mov rdi, qword [rax + 0x18] 	     12189	intel_display.c	FUNCTION_344	IF_1
0x40103f8	        0x807f0900	                   cmp byte [rdi + 9], 0	     12189	intel_display.c	FUNCTION_344	IF_1
0x40103fc	            0x7410	                            je 0x401040e	     12189	intel_display.c	FUNCTION_344	IF_1
0x40103fe	        0x488b7810	            mov rdi, qword [rax + 0x10] 	     12190	intel_display.c	FUNCTION_344	CALL_4
0x4010402	    0x4881c7840400	                          add rdi, 0x484	     12190	intel_display.c	FUNCTION_344	CALL_4
0x4010409	      0x48897cd420	     mov qword [rsp + rdx*8 + 0x20], rdi	     12190	intel_display.c	FUNCTION_344	CALL_4
0x401040e	        0x4883c201	                              add rdx, 1	     12190	intel_display.c	FUNCTION_344	CALL_4
0x4010412	        0x4883c030	                           add rax, 0x30	     12190	intel_display.c	FUNCTION_344	CALL_4
0x4010416	          0x4139d0	                            cmp r8d, edx	     12187	intel_display.c	FUNCTION_344	CALL_3
0x4010419	            0x7fd3	                            jg 0x40103ee	     12187	intel_display.c	FUNCTION_344	CALL_3
0x401041b	          0x4531ff	                          xor r15d, r15d	     12187	intel_display.c	FUNCTION_344	CALL_3
0x401041e	            0x31db	                            xor ebx, ebx	     12187	intel_display.c	FUNCTION_344	CALL_3
0x4010420	      0xc644241b00	                mov byte [rsp + 0x1b], 0	     12187	intel_display.c	FUNCTION_344	CALL_3
0x4010425	            0xeb19	                           jmp 0x4010440	     12187	intel_display.c	FUNCTION_344	CALL_3
0x4010427	    0x8b8660030000	           mov eax, dword [rsi + 0x360] 	     12201	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x401042d	          0x8d5301	                      lea edx, [rbx + 1]	     12201	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x4010430	        0x4883c301	                              add rbx, 1	     12201	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x4010434	            0x39c2	                            cmp edx, eax	     12201	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x4010436	     0xf8d02010000	                           jge 0x401053e	     12201	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x401043c	        0x498b4d20	            mov rcx, qword [r13 + 0x20] 	     12201	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x4010440	          0x4863d3	                         movsxd rdx, ebx	     12201	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x4010443	        0x488d0452	                  lea rax, [rdx + rdx*2]	     12201	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x4010447	        0x48c1e004	                              shl rax, 4	     12201	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x401044b	          0x4801c8	                            add rax, rcx	     12201	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x401044e	          0x4c8b20	                    mov r12, qword [rax]	     12201	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x4010451	          0x4d85e4	                           test r12, r12	     12201	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x4010454	            0x74d1	                            je 0x4010427	     12201	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x4010456	    0x418b8c249000	            mov ecx, dword [r12 + 0x90] 	       943	drm_crtc.h	FUNCTION_651	CALL_1
0x401045e	      0xbd01000000	                              mov ebp, 1	       943	drm_crtc.h	FUNCTION_651	CALL_1
0x4010463	            0xd3e5	                             shl ebp, cl	       943	drm_crtc.h	FUNCTION_651	CALL_1
0x4010465	          0x4485fd	                          test ebp, r15d	     12209	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	IF_1
0x4010468	            0x75bd	                           jne 0x4010427	     12209	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	IF_1
0x401046a	        0x4c8b4018	              mov r8, qword [rax + 0x18]	     12201	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x401046e	      0x4180780900	                    cmp byte [r8 + 9], 0	     12209	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	IF_1
0x4010473	            0x74b2	                            je 0x4010427	     12209	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	IF_1
0x4010475	    0x4d8d90840400	                   lea r10, [r8 + 0x484]	     12214	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	IF_2
0x401047c	        0x4c8b7010	            mov r14, qword [rax + 0x10] 	     12201	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x4010480	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	     12212	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	IF_2	CALL_4
0x4010485	    0x418b8424b004	           mov eax, dword [r12 + 0x4b0] 	     12207	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x401048d	      0x488d742420	                   lea rsi, [rsp + 0x20]	     12212	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	IF_2	CALL_4
0x4010492	            0x89d9	                            mov ecx, ebx	     12212	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	IF_2	CALL_4
0x4010494	          0x4c89d2	                            mov rdx, r10	     12212	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	IF_2	CALL_4
0x4010497	      0x4c89442408	                 mov qword [rsp + 8], r8	     12214	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	IF_2
0x401049c	        0x4c891424	                    mov qword [rsp], r10	     12212	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	IF_2	CALL_4
0x40104a0	        0x8944241c	             mov dword [rsp + 0x1c], eax	     12207	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x40104a4	      0xe800000000	                          call 0x40104a9	     12212	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	IF_2	CALL_4
0x40104a9	            0x84c0	                             test al, al	     12212	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	IF_2	CALL_4
0x40104ab	        0x4c8b1424	                    mov r10, qword [rsp]	     12212	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	IF_2	CALL_4
0x40104af	      0x4c8b442408	                 mov r8, qword [rsp + 8]	     12212	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	IF_2	CALL_4
0x40104b4	            0x757f	                           jne 0x4010535	     12212	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	IF_2	CALL_4
0x40104b6	    0x410fb7868404	          movzx eax, word [r14 + 0x484] 	      1447	i915_drv.h	FUNCTION_535	IF_1
0x40104be	          0x4109ef	                            or r15d, ebp	     12218	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x40104c1	      0x4c8954dc20	     mov qword [rsp + rbx*8 + 0x20], r10	     12219	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x40104c6	    0x664139808404	               cmp word [r8 + 0x484], ax	      1447	i915_drv.h	FUNCTION_535	IF_1
0x40104ce	            0x743d	                            je 0x401050d	      1447	i915_drv.h	FUNCTION_535	IF_1
0x40104d0	      0x41f6400a04	                 test byte [r8 + 0xa], 4	     12228	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	IF_3	CALL_6
0x40104d5	            0x7548	                           jne 0x401051f	     12228	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	IF_3	CALL_6
0x40104d7	    0x453bbdd00200	          cmp r15d, dword [r13 + 0x2d0] 	     12229	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	IF_3
0x40104de	            0x743f	                            je 0x401051f	     12229	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	IF_3
0x40104e0	          0x4c89c1	                             mov rcx, r8	     12233	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	CALL_7
0x40104e3	          0x4c89f2	                            mov rdx, r14	     12233	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	CALL_7
0x40104e6	          0x4c89ee	                            mov rsi, r13	     12233	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	CALL_7
0x40104e9	          0x4c89e7	                            mov rdi, r12	     12233	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	CALL_7
0x40104ec	      0xe89ffdffff	              call sym.intel_update_crtc	     12233	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	CALL_7
0x40104f1	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x40104f5	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x40104fa	      0xe800000000	                          call 0x40104ff	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x40104ff	        0x498b7508	                mov rsi, qword [r13 + 8]	      1488	intel_drv.h	FUNCTION_448	CALL_1
0x4010503	      0xc644241b01	                mov byte [rsp + 0x1b], 1	     12239	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x4010508	      0xe91affffff	                           jmp 0x4010427	     12239	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x401050d	    0x410fb7868604	          movzx eax, word [r14 + 0x486] 	      1447	i915_drv.h	FUNCTION_535	IF_1
0x4010515	    0x664139808604	               cmp word [r8 + 0x486], ax	      1447	i915_drv.h	FUNCTION_535	IF_1
0x401051d	            0x75b1	                           jne 0x40104d0	      1447	i915_drv.h	FUNCTION_535	IF_1
0x401051f	          0x4c89c1	                             mov rcx, r8	     12233	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	CALL_7
0x4010522	          0x4c89f2	                            mov rdx, r14	     12233	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	CALL_7
0x4010525	          0x4c89ee	                            mov rsi, r13	     12233	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	CALL_7
0x4010528	          0x4c89e7	                            mov rdi, r12	     12233	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	CALL_7
0x401052b	      0xe860fdffff	              call sym.intel_update_crtc	     12233	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1	CALL_7
0x4010530	      0xc644241b01	                mov byte [rsp + 0x1b], 1	     12239	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x4010535	        0x498b7508	                mov rsi, qword [r13 + 8]	     12239	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x4010539	      0xe9e9feffff	                           jmp 0x4010427	     12239	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x401053e	      0x807c241b00	                cmp byte [rsp + 0x1b], 0	     12241	intel_display.c	FUNCTION_344	DO_1
0x4010543	            0x740d	                            je 0x4010552	     12241	intel_display.c	FUNCTION_344	DO_1
0x4010545	            0x85c0	                           test eax, eax	     12201	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x4010547	            0x7e09	                           jle 0x4010552	     12201	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x4010549	        0x498b4d20	            mov rcx, qword [r13 + 0x20] 	     12201	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x401054d	      0xe9ccfeffff	                           jmp 0x401041e	     12201	intel_display.c	FUNCTION_344	DO_1	FUNCTION_1
0x4010552	      0x488b442438	            mov rax, qword [rsp + 0x38] 	     12242	intel_display.c	FUNCTION_344
0x4010557	    0x654833042528	                xor rax, qword gs:[0x28]	     12242	intel_display.c	FUNCTION_344
0x4010560	            0x750f	                           jne 0x4010571	     12242	intel_display.c	FUNCTION_344
0x4010562	        0x4883c440	                           add rsp, 0x40	     12242	intel_display.c	FUNCTION_344
0x4010566	              0x5b	                                 pop rbx	     12242	intel_display.c	FUNCTION_344
0x4010567	              0x5d	                                 pop rbp	     12242	intel_display.c	FUNCTION_344
0x4010568	            0x415c	                                 pop r12	     12242	intel_display.c	FUNCTION_344
0x401056a	            0x415d	                                 pop r13	     12242	intel_display.c	FUNCTION_344
0x401056c	            0x415e	                                 pop r14	     12242	intel_display.c	FUNCTION_344
0x401056e	            0x415f	                                 pop r15	     12242	intel_display.c	FUNCTION_344
0x4010570	              0xc3	                                     ret	     12242	intel_display.c	FUNCTION_344
0x4010571	      0xe800000000	                          call 0x4010576	     12242	intel_display.c	FUNCTION_344
bxt_find_best_dpll	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,1	5
0x400cca0	          0x4889d1	                            mov rcx, rdx	       970	intel_display.c	FUNCTION_20	CALL_1
0x400cca3	            0x89f2	                            mov edx, esi	       970	intel_display.c	FUNCTION_20	CALL_1
0x400cca5	          0x488b37	                    mov rsi, qword [rdi]	       970	intel_display.c	FUNCTION_20	CALL_1
0x400cca8	    0x48c7c7000000	                              mov rdi, 0	       970	intel_display.c	FUNCTION_20	CALL_1
0x400ccaf	      0xe91cfdffff	jmp sym.chv_find_best_dpll.isra.127.constprop.152	       970	intel_display.c	FUNCTION_20	CALL_1
assert_fdi_rx	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,5	37
0x4002310	          0xc1e60c	                            shl esi, 0xc	      1119	intel_display.c	FUNCTION_31	CALL_2
0x4002313	              0x53	                                push rbx	      1115	intel_display.c	FUNCTION_31
0x4002314	            0x89d3	                            mov ebx, edx	      1115	intel_display.c	FUNCTION_31
0x4002316	    0x81c60c000f00	                        add esi, 0xf000c	      1119	intel_display.c	FUNCTION_31	CALL_2
0x400231c	      0xba01000000	                              mov edx, 1	      1119	intel_display.c	FUNCTION_31	CALL_2
0x4002321	    0x488b87f80700	           mov rax, qword [rdi + 0x7f8] 	      1119	intel_display.c	FUNCTION_31	CALL_2
0x4002328	      0xe800000000	                          call 0x400232d	      1119	intel_display.c	FUNCTION_31	CALL_2
0x400232d	            0x89c2	                            mov edx, eax	      1121	intel_display.c	FUNCTION_31	CALL_3
0x400232f	          0xc1ea1f	                           shr edx, 0x1f	      1121	intel_display.c	FUNCTION_31	CALL_3
0x4002332	            0x38d3	                              cmp bl, dl	      1121	intel_display.c	FUNCTION_31	CALL_3
0x4002334	            0x7502	                           jne 0x4002338	      1121	intel_display.c	FUNCTION_31	CALL_3
0x4002336	              0x5b	                                 pop rbx	      1124	intel_display.c	FUNCTION_31
0x4002337	              0xc3	                                     ret	      1124	intel_display.c	FUNCTION_31
0x4002338	    0x803d00000000	                cmp byte [0x0400233f], 0	      1121	intel_display.c	FUNCTION_31	CALL_3
0x400233f	            0x752a	                           jne 0x400236b	      1121	intel_display.c	FUNCTION_31	CALL_3
0x4002341	    0x48c7c6000000	                              mov rsi, 0	       150	i915_utils.h	FUNCTION_472
0x4002348	    0x48c7c1000000	                              mov rcx, 0	       150	i915_utils.h	FUNCTION_472
0x400234f	            0x85c0	                           test eax, eax	       150	i915_utils.h	FUNCTION_472
0x4002351	          0x4889f2	                            mov rdx, rsi	       150	i915_utils.h	FUNCTION_472
0x4002354	    0x48c7c7000000	                              mov rdi, 0	      1121	intel_display.c	FUNCTION_31	CALL_3
0x400235b	        0x480f48d1	                          cmovs rdx, rcx	       150	i915_utils.h	FUNCTION_472
0x400235f	            0x84db	                             test bl, bl	       150	i915_utils.h	FUNCTION_472
0x4002361	              0x5b	                                 pop rbx	      1124	intel_display.c	FUNCTION_31
0x4002362	        0x480f45f1	                         cmovne rsi, rcx	       150	i915_utils.h	FUNCTION_472
0x4002366	      0xe900000000	                           jmp 0x400236b	      1121	intel_display.c	FUNCTION_31	CALL_3
0x400236b	    0x48c7c6000000	                              mov rsi, 0	       150	i915_utils.h	FUNCTION_472
0x4002372	    0x48c7c1000000	                              mov rcx, 0	       150	i915_utils.h	FUNCTION_472
0x4002379	            0x85c0	                           test eax, eax	       150	i915_utils.h	FUNCTION_472
0x400237b	          0x4889f2	                            mov rdx, rsi	       150	i915_utils.h	FUNCTION_472
0x400237e	    0x48c7c7000000	                              mov rdi, 0	      1121	intel_display.c	FUNCTION_31	CALL_3
0x4002385	        0x480f49d1	                         cmovns rdx, rcx	       150	i915_utils.h	FUNCTION_472
0x4002389	            0x84db	                             test bl, bl	       150	i915_utils.h	FUNCTION_472
0x400238b	        0x480f44f1	                          cmove rsi, rcx	       150	i915_utils.h	FUNCTION_472
0x400238f	      0xe800000000	                          call 0x4002394	      1121	intel_display.c	FUNCTION_31	CALL_3
0x4002394	             0xf0b	                                     ud2	      1121	intel_display.c	FUNCTION_31	CALL_3
0x4002396	              0x5b	                                 pop rbx	      1124	intel_display.c	FUNCTION_31
0x4002397	              0xc3	                                     ret	      1124	intel_display.c	FUNCTION_31
g4x_crtc_compute_clock	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,6:ELSE,4:functions,0:CALL,12	73
0x400b5f0	            0x4155	                                push r13	      7338	intel_display.c	FUNCTION_225
0x400b5f2	            0x4154	                                push r12	      7338	intel_display.c	FUNCTION_225
0x400b5f4	            0x89f0	                            mov eax, esi	      7344	intel_display.c	FUNCTION_225	CALL_2
0x400b5f6	              0x55	                                push rbp	      7338	intel_display.c	FUNCTION_225
0x400b5f7	          0x4889fd	                            mov rbp, rdi	      7338	intel_display.c	FUNCTION_225
0x400b5fa	              0x53	                                push rbx	      7338	intel_display.c	FUNCTION_225
0x400b5fb	          0x4c8b27	                    mov r12, qword [rdi]	      7339	intel_display.c	FUNCTION_225
0x400b5fe	    0x488dbe880200	                  lea rdi, [rsi + 0x288]	      7344	intel_display.c	FUNCTION_225	CALL_2
0x400b605	    0x48c786800200	              mov qword [rsi + 0x280], 0	      7344	intel_display.c	FUNCTION_225	CALL_2
0x400b610	    0x48c786cc0200	              mov qword [rsi + 0x2cc], 0	      7344	intel_display.c	FUNCTION_225	CALL_2
0x400b61b	          0x4889f3	                            mov rbx, rsi	      7338	intel_display.c	FUNCTION_225
0x400b61e	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	      7344	intel_display.c	FUNCTION_225	CALL_2
0x400b622	            0x29f8	                            sub eax, edi	      7344	intel_display.c	FUNCTION_225	CALL_2
0x400b624	    0x8d88d4020000	                  lea ecx, [rax + 0x2d4]	      7344	intel_display.c	FUNCTION_225	CALL_2
0x400b62a	            0x31c0	                            xor eax, eax	      7344	intel_display.c	FUNCTION_225	CALL_2
0x400b62c	          0xc1e903	                              shr ecx, 3	      7344	intel_display.c	FUNCTION_225	CALL_2
0x400b62f	          0xf348ab	              rep stosq qword [rdi], rax	      7344	intel_display.c	FUNCTION_225	CALL_2
0x400b632	    0x8b8644020000	           mov eax, dword [rsi + 0x244] 	      7344	intel_display.c	FUNCTION_225	CALL_2
0x400b638	            0xa810	                           test al, 0x10	      7347	intel_display.c	FUNCTION_225	IF_1	CALL_3
0x400b63a	            0x7474	                            je 0x400b6b0	      7347	intel_display.c	FUNCTION_225	IF_1	CALL_3
0x400b63c	    0x8b0500000000	            mov eax, dword [0x0400b642] 	      6551	intel_display.c	FUNCTION_202	IF_1
0x400b642	            0x85c0	                           test eax, eax	      6551	intel_display.c	FUNCTION_202	IF_1
0x400b644	     0xf888d000000	                            js 0x400b6d7	      6551	intel_display.c	FUNCTION_202	IF_1
0x400b64a	    0x41bd00770100	                       mov r13d, 0x17700	      7342	intel_display.c	FUNCTION_225
0x400b650	     0xf85a5000000	                           jne 0x400b6fb	      7348	intel_display.c	FUNCTION_225	IF_1	IF_2	CALL_4
0x400b656	          0x4c89e7	                            mov rdi, r12	      7353	intel_display.c	FUNCTION_225	IF_1	IF_3	CALL_6
0x400b659	      0xe800000000	                          call 0x400b65e	      7353	intel_display.c	FUNCTION_225	IF_1	IF_3	CALL_6
0x400b65e	    0x48c7c7000000	                              mov rdi, 0	      7354	intel_display.c	FUNCTION_225	IF_1	IF_3
0x400b665	            0x84c0	                             test al, al	      7354	intel_display.c	FUNCTION_225	IF_1	IF_3
0x400b667	    0x48c7c0000000	                              mov rax, 0	      7354	intel_display.c	FUNCTION_225	IF_1	IF_3
0x400b66e	        0x480f44f8	                          cmove rdi, rax	      7354	intel_display.c	FUNCTION_225	IF_1	IF_3
0x400b672	    0x80bb4c020000	               cmp byte [rbx + 0x24c], 0	      7367	intel_display.c	FUNCTION_225	IF_6
0x400b679	            0x7520	                           jne 0x400b69b	      7367	intel_display.c	FUNCTION_225	IF_6
0x400b67b	    0x8b930c030000	           mov edx, dword [rbx + 0x30c] 	      7368	intel_display.c	FUNCTION_225	IF_6	CALL_10
0x400b681	    0x4c8d83500200	                   lea r8, [rbx + 0x250]	      7368	intel_display.c	FUNCTION_225	IF_6	CALL_10
0x400b688	          0x4489e9	                           mov ecx, r13d	      7368	intel_display.c	FUNCTION_225	IF_6	CALL_10
0x400b68b	          0x4889de	                            mov rsi, rbx	      7368	intel_display.c	FUNCTION_225	IF_6	CALL_10
0x400b68e	      0xe8bdabffff	     call sym.g4x_find_best_dpll.isra.96	      7368	intel_display.c	FUNCTION_225	IF_6	CALL_10
0x400b693	            0x84c0	                             test al, al	      7367	intel_display.c	FUNCTION_225	IF_6
0x400b695	     0xf8481000000	                            je 0x400b71c	      7367	intel_display.c	FUNCTION_225	IF_6
0x400b69b	        0x488b7d00	                    mov rdi, qword [rbp]	      7374	intel_display.c	FUNCTION_225	CALL_12
0x400b69f	          0x4889de	                            mov rsi, rbx	      7374	intel_display.c	FUNCTION_225	CALL_12
0x400b6a2	      0xe819feffff	call sym.i9xx_compute_dpll.isra.64.constprop.155	      7374	intel_display.c	FUNCTION_225	CALL_12
0x400b6a7	            0x31c0	                            xor eax, eax	      7376	intel_display.c	FUNCTION_225
0x400b6a9	              0x5b	                                 pop rbx	      7377	intel_display.c	FUNCTION_225
0x400b6aa	              0x5d	                                 pop rbp	      7377	intel_display.c	FUNCTION_225
0x400b6ab	            0x415c	                                 pop r12	      7377	intel_display.c	FUNCTION_225
0x400b6ad	            0x415d	                                 pop r13	      7377	intel_display.c	FUNCTION_225
0x400b6af	              0xc3	                                     ret	      7377	intel_display.c	FUNCTION_225
0x400b6b0	            0xa842	                           test al, 0x42	      7357	intel_display.c	FUNCTION_225	ELSE_1	ELSE_2	IF_4	CALL_7
0x400b6b2	    0x41bd00770100	                       mov r13d, 0x17700	      7342	intel_display.c	FUNCTION_225
0x400b6b8	    0x48c7c7000000	                              mov rdi, 0	      7359	intel_display.c	FUNCTION_225	ELSE_1	ELSE_2	IF_4
0x400b6bf	            0x75b1	                           jne 0x400b672	      7357	intel_display.c	FUNCTION_225	ELSE_1	ELSE_2	IF_4	CALL_7
0x400b6c1	            0xa808	                              test al, 8	      7342	intel_display.c	FUNCTION_225
0x400b6c3	    0x48c7c7000000	                              mov rdi, 0	      7342	intel_display.c	FUNCTION_225
0x400b6ca	    0x48c7c0000000	                              mov rax, 0	      7342	intel_display.c	FUNCTION_225
0x400b6d1	        0x480f44f8	                          cmove rdi, rax	      7342	intel_display.c	FUNCTION_225
0x400b6d5	            0xeb9b	                           jmp 0x400b672	      7342	intel_display.c	FUNCTION_225
0x400b6d7	    0x41f68424f84c	         test byte [r12 + 0x4cf8], 0x10 	      6554	intel_display.c	FUNCTION_202
0x400b6e0	    0x41bd00770100	                       mov r13d, 0x17700	      7342	intel_display.c	FUNCTION_225
0x400b6e6	     0xf846affffff	                            je 0x400b656	      6554	intel_display.c	FUNCTION_202
0x400b6ec	    0x41f684240056	            test byte [r12 + 0x5600], 2 	      6554	intel_display.c	FUNCTION_202
0x400b6f5	     0xf855bffffff	                           jne 0x400b656	      6554	intel_display.c	FUNCTION_202
0x400b6fb	    0x458bac24fc4c	         mov r13d, dword [r12 + 0x4cfc] 	      7349	intel_display.c	FUNCTION_225	IF_1	IF_2
0x400b703	    0x48c7c6000000	                              mov rsi, 0	      7350	intel_display.c	FUNCTION_225	IF_1	IF_2	CALL_5
0x400b70a	      0xbf04000000	                              mov edi, 4	      7350	intel_display.c	FUNCTION_225	IF_1	IF_2	CALL_5
0x400b70f	          0x4489ea	                           mov edx, r13d	      7350	intel_display.c	FUNCTION_225	IF_1	IF_2	CALL_5
0x400b712	      0xe800000000	                          call 0x400b717	      7350	intel_display.c	FUNCTION_225	IF_1	IF_2	CALL_5
0x400b717	      0xe93affffff	                           jmp 0x400b656	      7350	intel_display.c	FUNCTION_225	IF_1	IF_2	CALL_5
0x400b71c	    0x48c7c7000000	                              mov rdi, 0	      7370	intel_display.c	FUNCTION_225	IF_6	CALL_11
0x400b723	      0xe800000000	                          call 0x400b728	      7370	intel_display.c	FUNCTION_225	IF_6	CALL_11
0x400b728	      0xb8eaffffff	                     mov eax, 0xffffffea	      7371	intel_display.c	FUNCTION_225	IF_6
0x400b72d	      0xe977ffffff	                           jmp 0x400b6a9	      7371	intel_display.c	FUNCTION_225	IF_6
ironlake_pfit_disable	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,7	31
0x4000610	          0x4084f6	                           test sil, sil	      5599	intel_display.c	FUNCTION_169	IF_1
0x4000613	              0x55	                                push rbp	      5592	intel_display.c	FUNCTION_169
0x4000614	              0x53	                                push rbx	      5592	intel_display.c	FUNCTION_169
0x4000615	            0x7510	                           jne 0x4000627	      5599	intel_display.c	FUNCTION_169	IF_1
0x4000617	    0x488b87c80400	           mov rax, qword [rdi + 0x4c8] 	      5599	intel_display.c	FUNCTION_169	IF_1
0x400061e	    0x80b82c030000	               cmp byte [rax + 0x32c], 0	      5599	intel_display.c	FUNCTION_169	IF_1
0x4000625	            0x7460	                            je 0x4000687	      5599	intel_display.c	FUNCTION_169	IF_1
0x4000627	    0x8b9fb0040000	           mov ebx, dword [rdi + 0x4b0] 	      5600	intel_display.c	FUNCTION_169	IF_1	CALL_3
0x400062d	          0x488b2f	                    mov rbp, qword [rdi]	      5593	intel_display.c	FUNCTION_169
0x4000630	      0xb901000000	                              mov ecx, 1	      5600	intel_display.c	FUNCTION_169	IF_1	CALL_3
0x4000635	            0x31d2	                            xor edx, edx	      5600	intel_display.c	FUNCTION_169	IF_1	CALL_3
0x4000637	          0xc1e30b	                            shl ebx, 0xb	      5600	intel_display.c	FUNCTION_169	IF_1	CALL_3
0x400063a	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	      5600	intel_display.c	FUNCTION_169	IF_1	CALL_3
0x4000641	          0x4889ef	                            mov rdi, rbp	      5600	intel_display.c	FUNCTION_169	IF_1	CALL_3
0x4000644	    0x8db380800600	                lea esi, [rbx + 0x68080]	      5600	intel_display.c	FUNCTION_169	IF_1	CALL_3
0x400064a	      0xe800000000	                          call 0x400064f	      5600	intel_display.c	FUNCTION_169	IF_1	CALL_3
0x400064f	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	      5601	intel_display.c	FUNCTION_169	IF_1	CALL_5
0x4000656	    0x8db370800600	                lea esi, [rbx + 0x68070]	      5601	intel_display.c	FUNCTION_169	IF_1	CALL_5
0x400065c	      0xb901000000	                              mov ecx, 1	      5601	intel_display.c	FUNCTION_169	IF_1	CALL_5
0x4000661	            0x31d2	                            xor edx, edx	      5601	intel_display.c	FUNCTION_169	IF_1	CALL_5
0x4000663	          0x4889ef	                            mov rdi, rbp	      5601	intel_display.c	FUNCTION_169	IF_1	CALL_5
0x4000666	      0xe800000000	                          call 0x400066b	      5601	intel_display.c	FUNCTION_169	IF_1	CALL_5
0x400066b	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	      5602	intel_display.c	FUNCTION_169	IF_1	CALL_7
0x4000672	    0x8db374800600	                lea esi, [rbx + 0x68074]	      5602	intel_display.c	FUNCTION_169	IF_1	CALL_7
0x4000678	      0xb901000000	                              mov ecx, 1	      5602	intel_display.c	FUNCTION_169	IF_1	CALL_7
0x400067d	            0x31d2	                            xor edx, edx	      5602	intel_display.c	FUNCTION_169	IF_1	CALL_7
0x400067f	          0x4889ef	                            mov rdi, rbp	      5602	intel_display.c	FUNCTION_169	IF_1	CALL_7
0x4000682	      0xe800000000	                          call 0x4000687	      5602	intel_display.c	FUNCTION_169	IF_1	CALL_7
0x4000687	              0x5b	                                 pop rbx	      5604	intel_display.c	FUNCTION_169
0x4000688	              0x5d	                                 pop rbp	      5604	intel_display.c	FUNCTION_169
0x4000689	              0xc3	                                     ret	      5604	intel_display.c	FUNCTION_169
intel_plane_destroy	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,3	6
0x40046f0	              0x53	                                push rbx	     12981	intel_display.c	FUNCTION_363
0x40046f1	          0x4889fb	                            mov rbx, rdi	     12981	intel_display.c	FUNCTION_363
0x40046f4	      0xe800000000	                          call 0x40046f9	     12982	intel_display.c	FUNCTION_363	CALL_1
0x40046f9	          0x4889df	                            mov rdi, rbx	     12983	intel_display.c	FUNCTION_363	CALL_3
0x40046fc	              0x5b	                                 pop rbx	     12984	intel_display.c	FUNCTION_363
0x40046fd	      0xe900000000	                           jmp 0x4004702	     12983	intel_display.c	FUNCTION_363	CALL_3
intel_pipe_config_compare	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,8:ELSE,1:functions,0:CALL,83	1024
0x4007760	            0x4157	                                push r15	     11082	intel_display.c	FUNCTION_320
0x4007762	            0x4156	                                push r14	     11082	intel_display.c	FUNCTION_320
0x4007764	          0x4189ce	                           mov r14d, ecx	     11082	intel_display.c	FUNCTION_320
0x4007767	            0x4155	                                push r13	     11082	intel_display.c	FUNCTION_320
0x4007769	            0x4154	                                push r12	     11082	intel_display.c	FUNCTION_320
0x400776b	          0x4989f5	                            mov r13, rsi	     11082	intel_display.c	FUNCTION_320
0x400776e	              0x55	                                push rbp	     11082	intel_display.c	FUNCTION_320
0x400776f	              0x53	                                push rbx	     11082	intel_display.c	FUNCTION_320
0x4007770	          0x4989fc	                            mov r12, rdi	     11082	intel_display.c	FUNCTION_320
0x4007773	          0x4889d3	                            mov rbx, rdx	     11082	intel_display.c	FUNCTION_320
0x4007776	        0x4883ec10	                           sub rsp, 0x10	     11082	intel_display.c	FUNCTION_320
0x400777a	            0x84c9	                             test cl, cl	     11085	intel_display.c	FUNCTION_320
0x400777c	    0xc74424040000	                  mov dword [rsp + 4], 0	     11085	intel_display.c	FUNCTION_320
0x4007784	            0x7413	                            je 0x4007799	     11085	intel_display.c	FUNCTION_320
0x4007786	    0x8b86c8010000	           mov eax, dword [rsi + 0x1c8] 	     11084	intel_display.c	FUNCTION_320
0x400778c	          0x83e001	                              and eax, 1	     11084	intel_display.c	FUNCTION_320
0x400778f	        0x89442404	                mov dword [rsp + 4], eax	     11084	intel_display.c	FUNCTION_320
0x4007793	     0xf85290f0000	                           jne 0x40086c2	     11084	intel_display.c	FUNCTION_320
0x4007799	    0x418b8d3c0200	           mov ecx, dword [r13 + 0x23c] 	     11214	intel_display.c	FUNCTION_320	CALL_1
0x40077a0	    0x448b833c0200	           mov r8d, dword [rbx + 0x23c] 	     11214	intel_display.c	FUNCTION_320	CALL_1
0x40077a7	        0x410fb6ee	                         movzx ebp, r14b	     11214	intel_display.c	FUNCTION_320	CALL_1
0x40077ab	    0x41bf01000000	                             mov r15d, 1	     11083	intel_display.c	FUNCTION_320
0x40077b1	          0x4439c1	                            cmp ecx, r8d	     11214	intel_display.c	FUNCTION_320	CALL_1
0x40077b4	            0x7418	                            je 0x40077ce	     11214	intel_display.c	FUNCTION_320	CALL_1
0x40077b6	    0x48c7c2000000	                              mov rdx, 0	     11214	intel_display.c	FUNCTION_320	CALL_1
0x40077bd	    0x48c7c6000000	                              mov rsi, 0	     11214	intel_display.c	FUNCTION_320	CALL_1
0x40077c4	            0x89ef	                            mov edi, ebp	     11214	intel_display.c	FUNCTION_320	CALL_1
0x40077c6	          0x4531ff	                          xor r15d, r15d	     11214	intel_display.c	FUNCTION_320	CALL_1
0x40077c9	      0xe8d2d5ffff	                call sym.pipe_config_err	     11214	intel_display.c	FUNCTION_320	CALL_1
0x40077ce	    0x410fb6953802	          movzx edx, byte [r13 + 0x238] 	     11216	intel_display.c	FUNCTION_320	CALL_2
0x40077d6	     0xfb6b3380200	          movzx esi, byte [rbx + 0x238] 	     11216	intel_display.c	FUNCTION_320	CALL_2
0x40077dd	          0x4038f2	                             cmp dl, sil	     11216	intel_display.c	FUNCTION_320	CALL_2
0x40077e0	            0x7436	                            je 0x4007818	     11216	intel_display.c	FUNCTION_320	CALL_2
0x40077e2	    0x48c7c1000000	                              mov rcx, 0	       145	i915_utils.h	FUNCTION_471
0x40077e9	    0x48c7c0000000	                              mov rax, 0	       145	i915_utils.h	FUNCTION_471
0x40077f0	          0x4084f6	                           test sil, sil	       145	i915_utils.h	FUNCTION_471
0x40077f3	          0x4989c8	                             mov r8, rcx	       145	i915_utils.h	FUNCTION_471
0x40077f6	    0x48c7c6000000	                              mov rsi, 0	     11216	intel_display.c	FUNCTION_320	CALL_2
0x40077fd	            0x89ef	                            mov edi, ebp	     11216	intel_display.c	FUNCTION_320	CALL_2
0x40077ff	        0x4c0f44c0	                           cmove r8, rax	       145	i915_utils.h	FUNCTION_471
0x4007803	            0x84d2	                             test dl, dl	       145	i915_utils.h	FUNCTION_471
0x4007805	    0x48c7c2000000	                              mov rdx, 0	     11216	intel_display.c	FUNCTION_320	CALL_2
0x400780c	        0x480f44c8	                          cmove rcx, rax	       145	i915_utils.h	FUNCTION_471
0x4007810	          0x4531ff	                          xor r15d, r15d	     11216	intel_display.c	FUNCTION_320	CALL_2
0x4007813	      0xe888d5ffff	                call sym.pipe_config_err	     11216	intel_display.c	FUNCTION_320	CALL_2
0x4007818	    0x418b8d300300	           mov ecx, dword [r13 + 0x330] 	     11217	intel_display.c	FUNCTION_320	CALL_3
0x400781f	    0x448b83300300	           mov r8d, dword [rbx + 0x330] 	     11217	intel_display.c	FUNCTION_320	CALL_3
0x4007826	          0x4439c1	                            cmp ecx, r8d	     11217	intel_display.c	FUNCTION_320	CALL_3
0x4007829	            0x7418	                            je 0x4007843	     11217	intel_display.c	FUNCTION_320	CALL_3
0x400782b	    0x48c7c2000000	                              mov rdx, 0	     11217	intel_display.c	FUNCTION_320	CALL_3
0x4007832	    0x48c7c6000000	                              mov rsi, 0	     11217	intel_display.c	FUNCTION_320	CALL_3
0x4007839	            0x89ef	                            mov edi, ebp	     11217	intel_display.c	FUNCTION_320	CALL_3
0x400783b	          0x4531ff	                          xor r15d, r15d	     11217	intel_display.c	FUNCTION_320	CALL_3
0x400783e	      0xe85dd5ffff	                call sym.pipe_config_err	     11217	intel_display.c	FUNCTION_320	CALL_3
0x4007843	    0x488db3340300	                  lea rsi, [rbx + 0x334]	     11218	intel_display.c	FUNCTION_320	CALL_4
0x400784a	    0x498dbd340300	                  lea rdi, [r13 + 0x334]	     11218	intel_display.c	FUNCTION_320	CALL_4
0x4007851	            0x89ea	                            mov edx, ebp	     11218	intel_display.c	FUNCTION_320	CALL_4
0x4007853	      0xe898feffff	         call sym.intel_compare_link_m_n	     11218	intel_display.c	FUNCTION_320	CALL_4
0x4007858	            0x84c0	                             test al, al	     11218	intel_display.c	FUNCTION_320	CALL_4
0x400785a	     0xf84310f0000	                            je 0x4008791	     11218	intel_display.c	FUNCTION_320	CALL_4
0x4007860	    0x410fb68d1403	          movzx ecx, byte [r13 + 0x314] 	     11220	intel_display.c	FUNCTION_320	CALL_5
0x4007868	    0x440fb6831403	          movzx r8d, byte [rbx + 0x314] 	     11220	intel_display.c	FUNCTION_320	CALL_5
0x4007870	          0x4438c1	                             cmp cl, r8b	     11220	intel_display.c	FUNCTION_320	CALL_5
0x4007873	            0x7418	                            je 0x400788d	     11220	intel_display.c	FUNCTION_320	CALL_5
0x4007875	    0x48c7c2000000	                              mov rdx, 0	     11220	intel_display.c	FUNCTION_320	CALL_5
0x400787c	    0x48c7c6000000	                              mov rsi, 0	     11220	intel_display.c	FUNCTION_320	CALL_5
0x4007883	            0x89ef	                            mov edi, ebp	     11220	intel_display.c	FUNCTION_320	CALL_5
0x4007885	          0x4531ff	                          xor r15d, r15d	     11220	intel_display.c	FUNCTION_320	CALL_5
0x4007888	      0xe813d5ffff	                call sym.pipe_config_err	     11220	intel_display.c	FUNCTION_320	CALL_5
0x400788d	    0x410fb68d1503	          movzx ecx, byte [r13 + 0x315] 	     11221	intel_display.c	FUNCTION_320	CALL_6
0x4007895	    0x440fb6831503	          movzx r8d, byte [rbx + 0x315] 	     11221	intel_display.c	FUNCTION_320	CALL_6
0x400789d	          0x4438c1	                             cmp cl, r8b	     11221	intel_display.c	FUNCTION_320	CALL_6
0x40078a0	            0x7418	                            je 0x40078ba	     11221	intel_display.c	FUNCTION_320	CALL_6
0x40078a2	    0x48c7c2000000	                              mov rdx, 0	     11221	intel_display.c	FUNCTION_320	CALL_6
0x40078a9	    0x48c7c6000000	                              mov rsi, 0	     11221	intel_display.c	FUNCTION_320	CALL_6
0x40078b0	            0x89ef	                            mov edi, ebp	     11221	intel_display.c	FUNCTION_320	CALL_6
0x40078b2	          0x4531ff	                          xor r15d, r15d	     11221	intel_display.c	FUNCTION_320	CALL_6
0x40078b5	      0xe8e6d4ffff	                call sym.pipe_config_err	     11221	intel_display.c	FUNCTION_320	CALL_6
0x40078ba	    0x4180bc245c06	               cmp byte [r12 + 0x65c], 7	     11223	intel_display.c	FUNCTION_320	IF_1	CALL_7
0x40078c3	     0xf873f0c0000	                            ja 0x4008508	     11223	intel_display.c	FUNCTION_320	IF_1	CALL_7
0x40078c9	    0x488db3e00200	                  lea rsi, [rbx + 0x2e0]	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x40078d0	    0x498dbde00200	                  lea rdi, [r13 + 0x2e0]	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x40078d7	            0x89ea	                            mov edx, ebp	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x40078d9	      0xe812feffff	         call sym.intel_compare_link_m_n	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x40078de	            0x84c0	                             test al, al	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x40078e0	     0xf848c100000	                            je 0x4008972	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x40078e6	    0x4180bd080300	               cmp byte [r13 + 0x308], 0	     11226	intel_display.c	FUNCTION_320	IF_1	IF_2
0x40078ee	     0xf85ce0f0000	                           jne 0x40088c2	     11226	intel_display.c	FUNCTION_320	IF_1	IF_2
0x40078f4	    0x418b8d440200	           mov ecx, dword [r13 + 0x244] 	     11231	intel_display.c	FUNCTION_320	CALL_11
0x40078fb	    0x448b83440200	           mov r8d, dword [rbx + 0x244] 	     11231	intel_display.c	FUNCTION_320	CALL_11
0x4007902	          0x4439c1	                            cmp ecx, r8d	     11231	intel_display.c	FUNCTION_320	CALL_11
0x4007905	            0x7418	                            je 0x400791f	     11231	intel_display.c	FUNCTION_320	CALL_11
0x4007907	    0x48c7c2000000	                              mov rdx, 0	     11231	intel_display.c	FUNCTION_320	CALL_11
0x400790e	    0x48c7c6000000	                              mov rsi, 0	     11231	intel_display.c	FUNCTION_320	CALL_11
0x4007915	            0x89ef	                            mov edi, ebp	     11231	intel_display.c	FUNCTION_320	CALL_11
0x4007917	          0x4531ff	                          xor r15d, r15d	     11231	intel_display.c	FUNCTION_320	CALL_11
0x400791a	      0xe881d4ffff	                call sym.pipe_config_err	     11231	intel_display.c	FUNCTION_320	CALL_11
0x400791f	    0x418b8dac0000	            mov ecx, dword [r13 + 0xac] 	     11233	intel_display.c	FUNCTION_320	CALL_12
0x4007926	    0x448b83ac0000	            mov r8d, dword [rbx + 0xac] 	     11233	intel_display.c	FUNCTION_320	CALL_12
0x400792d	          0x4439c1	                            cmp ecx, r8d	     11233	intel_display.c	FUNCTION_320	CALL_12
0x4007930	            0x7418	                            je 0x400794a	     11233	intel_display.c	FUNCTION_320	CALL_12
0x4007932	    0x48c7c2000000	                              mov rdx, 0	     11233	intel_display.c	FUNCTION_320	CALL_12
0x4007939	    0x48c7c6000000	                              mov rsi, 0	     11233	intel_display.c	FUNCTION_320	CALL_12
0x4007940	            0x89ef	                            mov edi, ebp	     11233	intel_display.c	FUNCTION_320	CALL_12
0x4007942	          0x4531ff	                          xor r15d, r15d	     11233	intel_display.c	FUNCTION_320	CALL_12
0x4007945	      0xe856d4ffff	                call sym.pipe_config_err	     11233	intel_display.c	FUNCTION_320	CALL_12
0x400794a	    0x418b8dc00000	            mov ecx, dword [r13 + 0xc0] 	     11234	intel_display.c	FUNCTION_320	CALL_13
0x4007951	    0x448b83c00000	            mov r8d, dword [rbx + 0xc0] 	     11234	intel_display.c	FUNCTION_320	CALL_13
0x4007958	          0x4439c1	                            cmp ecx, r8d	     11234	intel_display.c	FUNCTION_320	CALL_13
0x400795b	            0x7418	                            je 0x4007975	     11234	intel_display.c	FUNCTION_320	CALL_13
0x400795d	    0x48c7c2000000	                              mov rdx, 0	     11234	intel_display.c	FUNCTION_320	CALL_13
0x4007964	    0x48c7c6000000	                              mov rsi, 0	     11234	intel_display.c	FUNCTION_320	CALL_13
0x400796b	            0x89ef	                            mov edi, ebp	     11234	intel_display.c	FUNCTION_320	CALL_13
0x400796d	          0x4531ff	                          xor r15d, r15d	     11234	intel_display.c	FUNCTION_320	CALL_13
0x4007970	      0xe82bd4ffff	                call sym.pipe_config_err	     11234	intel_display.c	FUNCTION_320	CALL_13
0x4007975	    0x418b8db00000	            mov ecx, dword [r13 + 0xb0] 	     11235	intel_display.c	FUNCTION_320	CALL_14
0x400797c	    0x448b83b00000	            mov r8d, dword [rbx + 0xb0] 	     11235	intel_display.c	FUNCTION_320	CALL_14
0x4007983	          0x4439c1	                            cmp ecx, r8d	     11235	intel_display.c	FUNCTION_320	CALL_14
0x4007986	            0x7418	                            je 0x40079a0	     11235	intel_display.c	FUNCTION_320	CALL_14
0x4007988	    0x48c7c2000000	                              mov rdx, 0	     11235	intel_display.c	FUNCTION_320	CALL_14
0x400798f	    0x48c7c6000000	                              mov rsi, 0	     11235	intel_display.c	FUNCTION_320	CALL_14
0x4007996	            0x89ef	                            mov edi, ebp	     11235	intel_display.c	FUNCTION_320	CALL_14
0x4007998	          0x4531ff	                          xor r15d, r15d	     11235	intel_display.c	FUNCTION_320	CALL_14
0x400799b	      0xe800d4ffff	                call sym.pipe_config_err	     11235	intel_display.c	FUNCTION_320	CALL_14
0x40079a0	    0x418b8db40000	            mov ecx, dword [r13 + 0xb4] 	     11236	intel_display.c	FUNCTION_320	CALL_15
0x40079a7	    0x448b83b40000	            mov r8d, dword [rbx + 0xb4] 	     11236	intel_display.c	FUNCTION_320	CALL_15
0x40079ae	          0x4439c1	                            cmp ecx, r8d	     11236	intel_display.c	FUNCTION_320	CALL_15
0x40079b1	            0x7418	                            je 0x40079cb	     11236	intel_display.c	FUNCTION_320	CALL_15
0x40079b3	    0x48c7c2000000	                              mov rdx, 0	     11236	intel_display.c	FUNCTION_320	CALL_15
0x40079ba	    0x48c7c6000000	                              mov rsi, 0	     11236	intel_display.c	FUNCTION_320	CALL_15
0x40079c1	            0x89ef	                            mov edi, ebp	     11236	intel_display.c	FUNCTION_320	CALL_15
0x40079c3	          0x4531ff	                          xor r15d, r15d	     11236	intel_display.c	FUNCTION_320	CALL_15
0x40079c6	      0xe8d5d3ffff	                call sym.pipe_config_err	     11236	intel_display.c	FUNCTION_320	CALL_15
0x40079cb	    0x418b8db80000	            mov ecx, dword [r13 + 0xb8] 	     11237	intel_display.c	FUNCTION_320	CALL_16
0x40079d2	    0x448b83b80000	            mov r8d, dword [rbx + 0xb8] 	     11237	intel_display.c	FUNCTION_320	CALL_16
0x40079d9	          0x4439c1	                            cmp ecx, r8d	     11237	intel_display.c	FUNCTION_320	CALL_16
0x40079dc	            0x7418	                            je 0x40079f6	     11237	intel_display.c	FUNCTION_320	CALL_16
0x40079de	    0x48c7c2000000	                              mov rdx, 0	     11237	intel_display.c	FUNCTION_320	CALL_16
0x40079e5	    0x48c7c6000000	                              mov rsi, 0	     11237	intel_display.c	FUNCTION_320	CALL_16
0x40079ec	            0x89ef	                            mov edi, ebp	     11237	intel_display.c	FUNCTION_320	CALL_16
0x40079ee	          0x4531ff	                          xor r15d, r15d	     11237	intel_display.c	FUNCTION_320	CALL_16
0x40079f1	      0xe8aad3ffff	                call sym.pipe_config_err	     11237	intel_display.c	FUNCTION_320	CALL_16
0x40079f6	    0x418b8dbc0000	            mov ecx, dword [r13 + 0xbc] 	     11238	intel_display.c	FUNCTION_320	CALL_17
0x40079fd	    0x448b83bc0000	            mov r8d, dword [rbx + 0xbc] 	     11238	intel_display.c	FUNCTION_320	CALL_17
0x4007a04	          0x4439c1	                            cmp ecx, r8d	     11238	intel_display.c	FUNCTION_320	CALL_17
0x4007a07	            0x7418	                            je 0x4007a21	     11238	intel_display.c	FUNCTION_320	CALL_17
0x4007a09	    0x48c7c2000000	                              mov rdx, 0	     11238	intel_display.c	FUNCTION_320	CALL_17
0x4007a10	    0x48c7c6000000	                              mov rsi, 0	     11238	intel_display.c	FUNCTION_320	CALL_17
0x4007a17	            0x89ef	                            mov edi, ebp	     11238	intel_display.c	FUNCTION_320	CALL_17
0x4007a19	          0x4531ff	                          xor r15d, r15d	     11238	intel_display.c	FUNCTION_320	CALL_17
0x4007a1c	      0xe87fd3ffff	                call sym.pipe_config_err	     11238	intel_display.c	FUNCTION_320	CALL_17
0x4007a21	    0x418b8dc80000	            mov ecx, dword [r13 + 0xc8] 	     11240	intel_display.c	FUNCTION_320	CALL_18
0x4007a28	    0x448b83c80000	            mov r8d, dword [rbx + 0xc8] 	     11240	intel_display.c	FUNCTION_320	CALL_18
0x4007a2f	          0x4439c1	                            cmp ecx, r8d	     11240	intel_display.c	FUNCTION_320	CALL_18
0x4007a32	            0x7418	                            je 0x4007a4c	     11240	intel_display.c	FUNCTION_320	CALL_18
0x4007a34	    0x48c7c2000000	                              mov rdx, 0	     11240	intel_display.c	FUNCTION_320	CALL_18
0x4007a3b	    0x48c7c6000000	                              mov rsi, 0	     11240	intel_display.c	FUNCTION_320	CALL_18
0x4007a42	            0x89ef	                            mov edi, ebp	     11240	intel_display.c	FUNCTION_320	CALL_18
0x4007a44	          0x4531ff	                          xor r15d, r15d	     11240	intel_display.c	FUNCTION_320	CALL_18
0x4007a47	      0xe854d3ffff	                call sym.pipe_config_err	     11240	intel_display.c	FUNCTION_320	CALL_18
0x4007a4c	    0x418b8ddc0000	            mov ecx, dword [r13 + 0xdc] 	     11241	intel_display.c	FUNCTION_320	CALL_19
0x4007a53	    0x448b83dc0000	            mov r8d, dword [rbx + 0xdc] 	     11241	intel_display.c	FUNCTION_320	CALL_19
0x4007a5a	          0x4439c1	                            cmp ecx, r8d	     11241	intel_display.c	FUNCTION_320	CALL_19
0x4007a5d	            0x7418	                            je 0x4007a77	     11241	intel_display.c	FUNCTION_320	CALL_19
0x4007a5f	    0x48c7c2000000	                              mov rdx, 0	     11241	intel_display.c	FUNCTION_320	CALL_19
0x4007a66	    0x48c7c6000000	                              mov rsi, 0	     11241	intel_display.c	FUNCTION_320	CALL_19
0x4007a6d	            0x89ef	                            mov edi, ebp	     11241	intel_display.c	FUNCTION_320	CALL_19
0x4007a6f	          0x4531ff	                          xor r15d, r15d	     11241	intel_display.c	FUNCTION_320	CALL_19
0x4007a72	      0xe829d3ffff	                call sym.pipe_config_err	     11241	intel_display.c	FUNCTION_320	CALL_19
0x4007a77	    0x418b8dcc0000	            mov ecx, dword [r13 + 0xcc] 	     11242	intel_display.c	FUNCTION_320	CALL_20
0x4007a7e	    0x448b83cc0000	            mov r8d, dword [rbx + 0xcc] 	     11242	intel_display.c	FUNCTION_320	CALL_20
0x4007a85	          0x4439c1	                            cmp ecx, r8d	     11242	intel_display.c	FUNCTION_320	CALL_20
0x4007a88	            0x7418	                            je 0x4007aa2	     11242	intel_display.c	FUNCTION_320	CALL_20
0x4007a8a	    0x48c7c2000000	                              mov rdx, 0	     11242	intel_display.c	FUNCTION_320	CALL_20
0x4007a91	    0x48c7c6000000	                              mov rsi, 0	     11242	intel_display.c	FUNCTION_320	CALL_20
0x4007a98	            0x89ef	                            mov edi, ebp	     11242	intel_display.c	FUNCTION_320	CALL_20
0x4007a9a	          0x4531ff	                          xor r15d, r15d	     11242	intel_display.c	FUNCTION_320	CALL_20
0x4007a9d	      0xe8fed2ffff	                call sym.pipe_config_err	     11242	intel_display.c	FUNCTION_320	CALL_20
0x4007aa2	    0x418b8dd00000	            mov ecx, dword [r13 + 0xd0] 	     11243	intel_display.c	FUNCTION_320	CALL_21
0x4007aa9	    0x448b83d00000	            mov r8d, dword [rbx + 0xd0] 	     11243	intel_display.c	FUNCTION_320	CALL_21
0x4007ab0	          0x4439c1	                            cmp ecx, r8d	     11243	intel_display.c	FUNCTION_320	CALL_21
0x4007ab3	            0x7418	                            je 0x4007acd	     11243	intel_display.c	FUNCTION_320	CALL_21
0x4007ab5	    0x48c7c2000000	                              mov rdx, 0	     11243	intel_display.c	FUNCTION_320	CALL_21
0x4007abc	    0x48c7c6000000	                              mov rsi, 0	     11243	intel_display.c	FUNCTION_320	CALL_21
0x4007ac3	            0x89ef	                            mov edi, ebp	     11243	intel_display.c	FUNCTION_320	CALL_21
0x4007ac5	          0x4531ff	                          xor r15d, r15d	     11243	intel_display.c	FUNCTION_320	CALL_21
0x4007ac8	      0xe8d3d2ffff	                call sym.pipe_config_err	     11243	intel_display.c	FUNCTION_320	CALL_21
0x4007acd	    0x418b8dd40000	            mov ecx, dword [r13 + 0xd4] 	     11244	intel_display.c	FUNCTION_320	CALL_22
0x4007ad4	    0x448b83d40000	            mov r8d, dword [rbx + 0xd4] 	     11244	intel_display.c	FUNCTION_320	CALL_22
0x4007adb	          0x4439c1	                            cmp ecx, r8d	     11244	intel_display.c	FUNCTION_320	CALL_22
0x4007ade	            0x7418	                            je 0x4007af8	     11244	intel_display.c	FUNCTION_320	CALL_22
0x4007ae0	    0x48c7c2000000	                              mov rdx, 0	     11244	intel_display.c	FUNCTION_320	CALL_22
0x4007ae7	    0x48c7c6000000	                              mov rsi, 0	     11244	intel_display.c	FUNCTION_320	CALL_22
0x4007aee	            0x89ef	                            mov edi, ebp	     11244	intel_display.c	FUNCTION_320	CALL_22
0x4007af0	          0x4531ff	                          xor r15d, r15d	     11244	intel_display.c	FUNCTION_320	CALL_22
0x4007af3	      0xe8a8d2ffff	                call sym.pipe_config_err	     11244	intel_display.c	FUNCTION_320	CALL_22
0x4007af8	    0x418b8dd80000	            mov ecx, dword [r13 + 0xd8] 	     11245	intel_display.c	FUNCTION_320	CALL_23
0x4007aff	    0x448b83d80000	            mov r8d, dword [rbx + 0xd8] 	     11245	intel_display.c	FUNCTION_320	CALL_23
0x4007b06	          0x4439c1	                            cmp ecx, r8d	     11245	intel_display.c	FUNCTION_320	CALL_23
0x4007b09	            0x7418	                            je 0x4007b23	     11245	intel_display.c	FUNCTION_320	CALL_23
0x4007b0b	    0x48c7c2000000	                              mov rdx, 0	     11245	intel_display.c	FUNCTION_320	CALL_23
0x4007b12	    0x48c7c6000000	                              mov rsi, 0	     11245	intel_display.c	FUNCTION_320	CALL_23
0x4007b19	            0x89ef	                            mov edi, ebp	     11245	intel_display.c	FUNCTION_320	CALL_23
0x4007b1b	          0x4531ff	                          xor r15d, r15d	     11245	intel_display.c	FUNCTION_320	CALL_23
0x4007b1e	      0xe87dd2ffff	                call sym.pipe_config_err	     11245	intel_display.c	FUNCTION_320	CALL_23
0x4007b23	    0x418b8d100300	           mov ecx, dword [r13 + 0x310] 	     11247	intel_display.c	FUNCTION_320	CALL_24
0x4007b2a	    0x448b83100300	           mov r8d, dword [rbx + 0x310] 	     11247	intel_display.c	FUNCTION_320	CALL_24
0x4007b31	          0x4439c1	                            cmp ecx, r8d	     11247	intel_display.c	FUNCTION_320	CALL_24
0x4007b34	            0x7418	                            je 0x4007b4e	     11247	intel_display.c	FUNCTION_320	CALL_24
0x4007b36	    0x48c7c2000000	                              mov rdx, 0	     11247	intel_display.c	FUNCTION_320	CALL_24
0x4007b3d	    0x48c7c6000000	                              mov rsi, 0	     11247	intel_display.c	FUNCTION_320	CALL_24
0x4007b44	            0x89ef	                            mov edi, ebp	     11247	intel_display.c	FUNCTION_320	CALL_24
0x4007b46	          0x4531ff	                          xor r15d, r15d	     11247	intel_display.c	FUNCTION_320	CALL_24
0x4007b49	      0xe852d2ffff	                call sym.pipe_config_err	     11247	intel_display.c	FUNCTION_320	CALL_24
0x4007b4e	    0x410fb6954802	          movzx edx, byte [r13 + 0x248] 	     11248	intel_display.c	FUNCTION_320	CALL_25
0x4007b56	     0xfb6b3480200	          movzx esi, byte [rbx + 0x248] 	     11248	intel_display.c	FUNCTION_320	CALL_25
0x4007b5d	          0x4038f2	                             cmp dl, sil	     11248	intel_display.c	FUNCTION_320	CALL_25
0x4007b60	            0x7436	                            je 0x4007b98	     11248	intel_display.c	FUNCTION_320	CALL_25
0x4007b62	    0x48c7c1000000	                              mov rcx, 0	       145	i915_utils.h	FUNCTION_471
0x4007b69	    0x48c7c0000000	                              mov rax, 0	       145	i915_utils.h	FUNCTION_471
0x4007b70	          0x4084f6	                           test sil, sil	       145	i915_utils.h	FUNCTION_471
0x4007b73	          0x4989c8	                             mov r8, rcx	       145	i915_utils.h	FUNCTION_471
0x4007b76	    0x48c7c6000000	                              mov rsi, 0	     11248	intel_display.c	FUNCTION_320	CALL_25
0x4007b7d	            0x89ef	                            mov edi, ebp	     11248	intel_display.c	FUNCTION_320	CALL_25
0x4007b7f	        0x4c0f44c0	                           cmove r8, rax	       145	i915_utils.h	FUNCTION_471
0x4007b83	            0x84d2	                             test dl, dl	       145	i915_utils.h	FUNCTION_471
0x4007b85	    0x48c7c2000000	                              mov rdx, 0	     11248	intel_display.c	FUNCTION_320	CALL_25
0x4007b8c	        0x480f44c8	                          cmove rcx, rax	       145	i915_utils.h	FUNCTION_471
0x4007b90	          0x4531ff	                          xor r15d, r15d	     11248	intel_display.c	FUNCTION_320	CALL_25
0x4007b93	      0xe808d2ffff	                call sym.pipe_config_err	     11248	intel_display.c	FUNCTION_320	CALL_25
0x4007b98	    0x4180bc245c06	               cmp byte [r12 + 0x65c], 7	     11249	intel_display.c	FUNCTION_320	IF_3	CALL_27
0x4007ba1	    0x418b84246406	           mov eax, dword [r12 + 0x664] 	     11249	intel_display.c	FUNCTION_320	IF_3	CALL_27
0x4007ba9	     0xf8749090000	                            ja 0x40084f8	     11249	intel_display.c	FUNCTION_320	IF_3	CALL_27
0x4007baf	      0xa900000800	                       test eax, 0x80000	     11249	intel_display.c	FUNCTION_320	IF_3	CALL_27
0x4007bb4	     0xf853e090000	                           jne 0x40084f8	     11249	intel_display.c	FUNCTION_320	IF_3	CALL_27
0x4007bba	    0x410fb6954002	          movzx edx, byte [r13 + 0x240] 	     11251	intel_display.c	FUNCTION_320	CALL_30
0x4007bc2	     0xfb6b3400200	          movzx esi, byte [rbx + 0x240] 	     11251	intel_display.c	FUNCTION_320	CALL_30
0x4007bc9	          0x4038f2	                             cmp dl, sil	     11251	intel_display.c	FUNCTION_320	CALL_30
0x4007bcc	            0x7436	                            je 0x4007c04	     11251	intel_display.c	FUNCTION_320	CALL_30
0x4007bce	    0x48c7c1000000	                              mov rcx, 0	       145	i915_utils.h	FUNCTION_471
0x4007bd5	    0x48c7c0000000	                              mov rax, 0	       145	i915_utils.h	FUNCTION_471
0x4007bdc	          0x4084f6	                           test sil, sil	       145	i915_utils.h	FUNCTION_471
0x4007bdf	          0x4989c8	                             mov r8, rcx	       145	i915_utils.h	FUNCTION_471
0x4007be2	    0x48c7c6000000	                              mov rsi, 0	     11251	intel_display.c	FUNCTION_320	CALL_30
0x4007be9	            0x89ef	                            mov edi, ebp	     11251	intel_display.c	FUNCTION_320	CALL_30
0x4007beb	        0x4c0f44c0	                           cmove r8, rax	       145	i915_utils.h	FUNCTION_471
0x4007bef	            0x84d2	                             test dl, dl	       145	i915_utils.h	FUNCTION_471
0x4007bf1	    0x48c7c2000000	                              mov rdx, 0	     11251	intel_display.c	FUNCTION_320	CALL_30
0x4007bf8	        0x480f44c8	                          cmove rcx, rax	       145	i915_utils.h	FUNCTION_471
0x4007bfc	          0x4531ff	                          xor r15d, r15d	     11251	intel_display.c	FUNCTION_320	CALL_30
0x4007bff	      0xe89cd1ffff	                call sym.pipe_config_err	     11251	intel_display.c	FUNCTION_320	CALL_30
0x4007c04	    0x410fb6959104	          movzx edx, byte [r13 + 0x491] 	     11253	intel_display.c	FUNCTION_320	CALL_31
0x4007c0c	     0xfb6b3910400	          movzx esi, byte [rbx + 0x491] 	     11253	intel_display.c	FUNCTION_320	CALL_31
0x4007c13	          0x4038f2	                             cmp dl, sil	     11253	intel_display.c	FUNCTION_320	CALL_31
0x4007c16	            0x7436	                            je 0x4007c4e	     11253	intel_display.c	FUNCTION_320	CALL_31
0x4007c18	    0x48c7c1000000	                              mov rcx, 0	       145	i915_utils.h	FUNCTION_471
0x4007c1f	    0x48c7c0000000	                              mov rax, 0	       145	i915_utils.h	FUNCTION_471
0x4007c26	          0x4084f6	                           test sil, sil	       145	i915_utils.h	FUNCTION_471
0x4007c29	          0x4989c8	                             mov r8, rcx	       145	i915_utils.h	FUNCTION_471
0x4007c2c	    0x48c7c6000000	                              mov rsi, 0	     11253	intel_display.c	FUNCTION_320	CALL_31
0x4007c33	            0x89ef	                            mov edi, ebp	     11253	intel_display.c	FUNCTION_320	CALL_31
0x4007c35	        0x4c0f44c0	                           cmove r8, rax	       145	i915_utils.h	FUNCTION_471
0x4007c39	            0x84d2	                             test dl, dl	       145	i915_utils.h	FUNCTION_471
0x4007c3b	    0x48c7c2000000	                              mov rdx, 0	     11253	intel_display.c	FUNCTION_320	CALL_31
0x4007c42	        0x480f44c8	                          cmove rcx, rax	       145	i915_utils.h	FUNCTION_471
0x4007c46	          0x4531ff	                          xor r15d, r15d	     11253	intel_display.c	FUNCTION_320	CALL_31
0x4007c49	      0xe852d1ffff	                call sym.pipe_config_err	     11253	intel_display.c	FUNCTION_320	CALL_31
0x4007c4e	    0x410fb6959204	          movzx edx, byte [r13 + 0x492] 	     11254	intel_display.c	FUNCTION_320	CALL_32
0x4007c56	     0xfb6b3920400	          movzx esi, byte [rbx + 0x492] 	     11254	intel_display.c	FUNCTION_320	CALL_32
0x4007c5d	          0x4038f2	                             cmp dl, sil	     11254	intel_display.c	FUNCTION_320	CALL_32
0x4007c60	            0x7436	                            je 0x4007c98	     11254	intel_display.c	FUNCTION_320	CALL_32
0x4007c62	    0x48c7c1000000	                              mov rcx, 0	       145	i915_utils.h	FUNCTION_471
0x4007c69	    0x48c7c0000000	                              mov rax, 0	       145	i915_utils.h	FUNCTION_471
0x4007c70	          0x4084f6	                           test sil, sil	       145	i915_utils.h	FUNCTION_471
0x4007c73	          0x4989c8	                             mov r8, rcx	       145	i915_utils.h	FUNCTION_471
0x4007c76	    0x48c7c6000000	                              mov rsi, 0	     11254	intel_display.c	FUNCTION_320	CALL_32
0x4007c7d	            0x89ef	                            mov edi, ebp	     11254	intel_display.c	FUNCTION_320	CALL_32
0x4007c7f	        0x4c0f44c0	                           cmove r8, rax	       145	i915_utils.h	FUNCTION_471
0x4007c83	            0x84d2	                             test dl, dl	       145	i915_utils.h	FUNCTION_471
0x4007c85	    0x48c7c2000000	                              mov rdx, 0	     11254	intel_display.c	FUNCTION_320	CALL_32
0x4007c8c	        0x480f44c8	                          cmove rcx, rax	       145	i915_utils.h	FUNCTION_471
0x4007c90	          0x4531ff	                          xor r15d, r15d	     11254	intel_display.c	FUNCTION_320	CALL_32
0x4007c93	      0xe808d1ffff	                call sym.pipe_config_err	     11254	intel_display.c	FUNCTION_320	CALL_32
0x4007c98	        0x8b542404	                mov edx, dword [rsp + 4]	     11255	intel_display.c	FUNCTION_320	CALL_33
0x4007c9c	            0x85d2	                           test edx, edx	     11255	intel_display.c	FUNCTION_320	CALL_33
0x4007c9e	     0xf8435090000	                            je 0x40085d9	     11255	intel_display.c	FUNCTION_320	CALL_33
0x4007ca4	    0x4180bd390200	               cmp byte [r13 + 0x239], 0	     11255	intel_display.c	FUNCTION_320	CALL_33
0x4007cac	     0xf84250a0000	                            je 0x40086d7	     11255	intel_display.c	FUNCTION_320	CALL_33
0x4007cb2	    0x80bb39020000	               cmp byte [rbx + 0x239], 0	       145	i915_utils.h	FUNCTION_471
0x4007cb9	    0x49c7c0000000	                               mov r8, 0	       145	i915_utils.h	FUNCTION_471
0x4007cc0	    0x48c7c1000000	                              mov rcx, 0	       145	i915_utils.h	FUNCTION_471
0x4007cc7	        0x4c0f45c1	                          cmovne r8, rcx	       145	i915_utils.h	FUNCTION_471
0x4007ccb	    0x48c7c2000000	                              mov rdx, 0	     11255	intel_display.c	FUNCTION_320	CALL_33
0x4007cd2	    0x48c7c6000000	                              mov rsi, 0	     11255	intel_display.c	FUNCTION_320	CALL_33
0x4007cd9	            0x89ef	                            mov edi, ebp	     11255	intel_display.c	FUNCTION_320	CALL_33
0x4007cdb	      0xe8c0d0ffff	                call sym.pipe_config_err	     11255	intel_display.c	FUNCTION_320	CALL_33
0x4007ce0	    0x410fb6959304	          movzx edx, byte [r13 + 0x493] 	     11256	intel_display.c	FUNCTION_320	CALL_34
0x4007ce8	     0xfb6b3930400	          movzx esi, byte [rbx + 0x493] 	     11256	intel_display.c	FUNCTION_320	CALL_34
0x4007cef	          0x4038f2	                             cmp dl, sil	     11256	intel_display.c	FUNCTION_320	CALL_34
0x4007cf2	     0xf84040d0000	                            je 0x40089fc	     11256	intel_display.c	FUNCTION_320	CALL_34
0x4007cf8	    0x48c7c1000000	                              mov rcx, 0	       145	i915_utils.h	FUNCTION_471
0x4007cff	    0x48c7c0000000	                              mov rax, 0	       145	i915_utils.h	FUNCTION_471
0x4007d06	          0x4084f6	                           test sil, sil	       145	i915_utils.h	FUNCTION_471
0x4007d09	          0x4989c8	                             mov r8, rcx	       145	i915_utils.h	FUNCTION_471
0x4007d0c	    0x48c7c6000000	                              mov rsi, 0	     11256	intel_display.c	FUNCTION_320	CALL_34
0x4007d13	            0x89ef	                            mov edi, ebp	     11256	intel_display.c	FUNCTION_320	CALL_34
0x4007d15	        0x4c0f44c0	                           cmove r8, rax	       145	i915_utils.h	FUNCTION_471
0x4007d19	            0x84d2	                             test dl, dl	       145	i915_utils.h	FUNCTION_471
0x4007d1b	    0x48c7c2000000	                              mov rdx, 0	     11256	intel_display.c	FUNCTION_320	CALL_34
0x4007d22	        0x480f44c8	                          cmove rcx, rax	       145	i915_utils.h	FUNCTION_471
0x4007d26	          0x4531ff	                          xor r15d, r15d	     11256	intel_display.c	FUNCTION_320	CALL_34
0x4007d29	      0xe872d0ffff	                call sym.pipe_config_err	     11256	intel_display.c	FUNCTION_320	CALL_34
0x4007d2e	        0x8b442404	                mov eax, dword [rsp + 4]	     11258	intel_display.c	FUNCTION_320	CALL_35
0x4007d32	            0x85c0	                           test eax, eax	     11258	intel_display.c	FUNCTION_320	CALL_35
0x4007d34	     0xf8401090000	                            je 0x400863b	     11258	intel_display.c	FUNCTION_320	CALL_35
0x4007d3a	    0x4180bd490200	               cmp byte [r13 + 0x249], 0	     11258	intel_display.c	FUNCTION_320	CALL_35
0x4007d42	     0xf84b9090000	                            je 0x4008701	     11258	intel_display.c	FUNCTION_320	CALL_35
0x4007d48	    0x80bb49020000	               cmp byte [rbx + 0x249], 0	       145	i915_utils.h	FUNCTION_471
0x4007d4f	    0x49c7c0000000	                               mov r8, 0	       145	i915_utils.h	FUNCTION_471
0x4007d56	    0x48c7c1000000	                              mov rcx, 0	       145	i915_utils.h	FUNCTION_471
0x4007d5d	        0x4c0f45c1	                          cmovne r8, rcx	       145	i915_utils.h	FUNCTION_471
0x4007d61	    0x48c7c2000000	                              mov rdx, 0	     11258	intel_display.c	FUNCTION_320	CALL_35
0x4007d68	    0x48c7c6000000	                              mov rsi, 0	     11258	intel_display.c	FUNCTION_320	CALL_35
0x4007d6f	            0x89ef	                            mov edi, ebp	     11258	intel_display.c	FUNCTION_320	CALL_35
0x4007d71	          0x4531ff	                          xor r15d, r15d	     11258	intel_display.c	FUNCTION_320	CALL_35
0x4007d74	      0xe827d0ffff	                call sym.pipe_config_err	     11258	intel_display.c	FUNCTION_320	CALL_35
0x4007d79	    0x458b859c0000	            mov r8d, dword [r13 + 0x9c] 	     11260	intel_display.c	FUNCTION_320	CALL_36
0x4007d80	    0x448b8b9c0000	            mov r9d, dword [rbx + 0x9c] 	     11260	intel_display.c	FUNCTION_320	CALL_36
0x4007d87	          0x4489c0	                            mov eax, r8d	     11260	intel_display.c	FUNCTION_320	CALL_36
0x4007d8a	          0x4431c8	                            xor eax, r9d	     11260	intel_display.c	FUNCTION_320	CALL_36
0x4007d8d	            0xa810	                           test al, 0x10	     11260	intel_display.c	FUNCTION_320	CALL_36
0x4007d8f	     0xf85d2090000	                           jne 0x4008767	     11260	intel_display.c	FUNCTION_320	CALL_36
0x4007d95	    0x498b85180200	           mov rax, qword [r13 + 0x218] 	     11263	intel_display.c	FUNCTION_320	IF_4	CALL_37
0x4007d9c	    0x480b83180200	             or rax, qword [rbx + 0x218]	     11263	intel_display.c	FUNCTION_320	IF_4	CALL_37
0x4007da3	            0xa801	                              test al, 1	     11263	intel_display.c	FUNCTION_320	IF_4	CALL_37
0x4007da5	            0x7534	                           jne 0x4007ddb	     11263	intel_display.c	FUNCTION_320	IF_4	CALL_37
0x4007da7	    0x458b859c0000	            mov r8d, dword [r13 + 0x9c] 	     11264	intel_display.c	FUNCTION_320	IF_4	CALL_38
0x4007dae	    0x448b8b9c0000	            mov r9d, dword [rbx + 0x9c] 	     11264	intel_display.c	FUNCTION_320	IF_4	CALL_38
0x4007db5	          0x4489c0	                            mov eax, r8d	     11264	intel_display.c	FUNCTION_320	IF_4	CALL_38
0x4007db8	          0x4431c8	                            xor eax, r9d	     11264	intel_display.c	FUNCTION_320	IF_4	CALL_38
0x4007dbb	            0xa801	                              test al, 1	     11264	intel_display.c	FUNCTION_320	IF_4	CALL_38
0x4007dbd	     0xf85370a0000	                           jne 0x40087fa	     11264	intel_display.c	FUNCTION_320	IF_4	CALL_38
0x4007dc3	            0xa802	                              test al, 2	     11266	intel_display.c	FUNCTION_320	IF_4	CALL_39
0x4007dc5	     0xf85700a0000	                           jne 0x400883b	     11266	intel_display.c	FUNCTION_320	IF_4	CALL_39
0x4007dcb	            0xa804	                              test al, 4	     11268	intel_display.c	FUNCTION_320	IF_4	CALL_40
0x4007dcd	     0xf85a90a0000	                           jne 0x400887c	     11268	intel_display.c	FUNCTION_320	IF_4	CALL_40
0x4007dd3	            0xa808	                              test al, 8	     11270	intel_display.c	FUNCTION_320	IF_4	CALL_41
0x4007dd5	     0xf856d0b0000	                           jne 0x4008948	     11270	intel_display.c	FUNCTION_320	IF_4	CALL_41
0x4007ddb	    0x418b8d180300	           mov ecx, dword [r13 + 0x318] 	     11274	intel_display.c	FUNCTION_320	CALL_42
0x4007de2	    0x448b83180300	           mov r8d, dword [rbx + 0x318] 	     11274	intel_display.c	FUNCTION_320	CALL_42
0x4007de9	          0x4439c1	                            cmp ecx, r8d	     11274	intel_display.c	FUNCTION_320	CALL_42
0x4007dec	            0x7418	                            je 0x4007e06	     11274	intel_display.c	FUNCTION_320	CALL_42
0x4007dee	    0x48c7c2000000	                              mov rdx, 0	     11274	intel_display.c	FUNCTION_320	CALL_42
0x4007df5	    0x48c7c6000000	                              mov rsi, 0	     11274	intel_display.c	FUNCTION_320	CALL_42
0x4007dfc	            0x89ef	                            mov edi, ebp	     11274	intel_display.c	FUNCTION_320	CALL_42
0x4007dfe	          0x4531ff	                          xor r15d, r15d	     11274	intel_display.c	FUNCTION_320	CALL_42
0x4007e01	      0xe89acfffff	                call sym.pipe_config_err	     11274	intel_display.c	FUNCTION_320	CALL_42
0x4007e06	    0x4180bc245c06	               cmp byte [r12 + 0x65c], 3	     11276	intel_display.c	FUNCTION_320	IF_5	CALL_43
0x4007e0f	            0x772b	                            ja 0x4007e3c	     11276	intel_display.c	FUNCTION_320	IF_5	CALL_43
0x4007e11	    0x418b8d1c0300	           mov ecx, dword [r13 + 0x31c] 	     11277	intel_display.c	FUNCTION_320	CALL_44
0x4007e18	    0x448b831c0300	           mov r8d, dword [rbx + 0x31c] 	     11277	intel_display.c	FUNCTION_320	CALL_44
0x4007e1f	          0x4439c1	                            cmp ecx, r8d	     11277	intel_display.c	FUNCTION_320	CALL_44
0x4007e22	            0x7418	                            je 0x4007e3c	     11277	intel_display.c	FUNCTION_320	CALL_44
0x4007e24	    0x48c7c2000000	                              mov rdx, 0	     11277	intel_display.c	FUNCTION_320	CALL_44
0x4007e2b	    0x48c7c6000000	                              mov rsi, 0	     11277	intel_display.c	FUNCTION_320	CALL_44
0x4007e32	            0x89ef	                            mov edi, ebp	     11277	intel_display.c	FUNCTION_320	CALL_44
0x4007e34	          0x4531ff	                          xor r15d, r15d	     11277	intel_display.c	FUNCTION_320	CALL_44
0x4007e37	      0xe864cfffff	                call sym.pipe_config_err	     11277	intel_display.c	FUNCTION_320	CALL_44
0x4007e3c	    0x418b8d200300	           mov ecx, dword [r13 + 0x320] 	     11278	intel_display.c	FUNCTION_320	CALL_45
0x4007e43	    0x448b83200300	           mov r8d, dword [rbx + 0x320] 	     11278	intel_display.c	FUNCTION_320	CALL_45
0x4007e4a	          0x4439c1	                            cmp ecx, r8d	     11278	intel_display.c	FUNCTION_320	CALL_45
0x4007e4d	            0x7418	                            je 0x4007e67	     11278	intel_display.c	FUNCTION_320	CALL_45
0x4007e4f	    0x48c7c2000000	                              mov rdx, 0	     11278	intel_display.c	FUNCTION_320	CALL_45
0x4007e56	    0x48c7c6000000	                              mov rsi, 0	     11278	intel_display.c	FUNCTION_320	CALL_45
0x4007e5d	            0x89ef	                            mov edi, ebp	     11278	intel_display.c	FUNCTION_320	CALL_45
0x4007e5f	          0x4531ff	                          xor r15d, r15d	     11278	intel_display.c	FUNCTION_320	CALL_45
0x4007e62	      0xe839cfffff	                call sym.pipe_config_err	     11278	intel_display.c	FUNCTION_320	CALL_45
0x4007e67	          0x4584f6	                         test r14b, r14b	     11280	intel_display.c	FUNCTION_320	IF_6
0x4007e6a	     0xf8566010000	                           jne 0x4007fd6	     11280	intel_display.c	FUNCTION_320	IF_6
0x4007e70	    0x418b8d2c0200	           mov ecx, dword [r13 + 0x22c] 	     11281	intel_display.c	FUNCTION_320	IF_6	CALL_46
0x4007e77	    0x448b832c0200	           mov r8d, dword [rbx + 0x22c] 	     11281	intel_display.c	FUNCTION_320	IF_6	CALL_46
0x4007e7e	          0x4439c1	                            cmp ecx, r8d	     11281	intel_display.c	FUNCTION_320	IF_6	CALL_46
0x4007e81	            0x7418	                            je 0x4007e9b	     11281	intel_display.c	FUNCTION_320	IF_6	CALL_46
0x4007e83	    0x48c7c2000000	                              mov rdx, 0	     11281	intel_display.c	FUNCTION_320	IF_6	CALL_46
0x4007e8a	    0x48c7c6000000	                              mov rsi, 0	     11281	intel_display.c	FUNCTION_320	IF_6	CALL_46
0x4007e91	            0x89ef	                            mov edi, ebp	     11281	intel_display.c	FUNCTION_320	IF_6	CALL_46
0x4007e93	          0x4531ff	                          xor r15d, r15d	     11281	intel_display.c	FUNCTION_320	IF_6	CALL_46
0x4007e96	      0xe805cfffff	                call sym.pipe_config_err	     11281	intel_display.c	FUNCTION_320	IF_6	CALL_46
0x4007e9b	    0x418b8d300200	           mov ecx, dword [r13 + 0x230] 	     11282	intel_display.c	FUNCTION_320	IF_6	CALL_47
0x4007ea2	    0x448b83300200	           mov r8d, dword [rbx + 0x230] 	     11282	intel_display.c	FUNCTION_320	IF_6	CALL_47
0x4007ea9	          0x4439c1	                            cmp ecx, r8d	     11282	intel_display.c	FUNCTION_320	IF_6	CALL_47
0x4007eac	            0x7418	                            je 0x4007ec6	     11282	intel_display.c	FUNCTION_320	IF_6	CALL_47
0x4007eae	    0x48c7c2000000	                              mov rdx, 0	     11282	intel_display.c	FUNCTION_320	IF_6	CALL_47
0x4007eb5	    0x48c7c6000000	                              mov rsi, 0	     11282	intel_display.c	FUNCTION_320	IF_6	CALL_47
0x4007ebc	            0x89ef	                            mov edi, ebp	     11282	intel_display.c	FUNCTION_320	IF_6	CALL_47
0x4007ebe	          0x4531ff	                          xor r15d, r15d	     11282	intel_display.c	FUNCTION_320	IF_6	CALL_47
0x4007ec1	      0xe8daceffff	                call sym.pipe_config_err	     11282	intel_display.c	FUNCTION_320	IF_6	CALL_47
0x4007ec6	    0x410fb6b52c03	          movzx esi, byte [r13 + 0x32c] 	     11284	intel_display.c	FUNCTION_320	IF_6	CALL_48
0x4007ece	     0xfb6832c0300	          movzx eax, byte [rbx + 0x32c] 	     11284	intel_display.c	FUNCTION_320	IF_6	CALL_48
0x4007ed5	          0x4038c6	                             cmp sil, al	     11284	intel_display.c	FUNCTION_320	IF_6	CALL_48
0x4007ed8	            0x743e	                            je 0x4007f18	     11284	intel_display.c	FUNCTION_320	IF_6	CALL_48
0x4007eda	    0x48c7c2000000	                              mov rdx, 0	       145	i915_utils.h	FUNCTION_471
0x4007ee1	            0x84c0	                             test al, al	       145	i915_utils.h	FUNCTION_471
0x4007ee3	    0x48c7c1000000	                              mov rcx, 0	       145	i915_utils.h	FUNCTION_471
0x4007eea	          0x4989d0	                             mov r8, rdx	       145	i915_utils.h	FUNCTION_471
0x4007eed	            0x89ef	                            mov edi, ebp	     11284	intel_display.c	FUNCTION_320	IF_6	CALL_48
0x4007eef	        0x4c0f45c1	                          cmovne r8, rcx	       145	i915_utils.h	FUNCTION_471
0x4007ef3	          0x4084f6	                           test sil, sil	       145	i915_utils.h	FUNCTION_471
0x4007ef6	    0x48c7c6000000	                              mov rsi, 0	     11284	intel_display.c	FUNCTION_320	IF_6	CALL_48
0x4007efd	        0x480f44ca	                          cmove rcx, rdx	       145	i915_utils.h	FUNCTION_471
0x4007f01	    0x48c7c2000000	                              mov rdx, 0	     11284	intel_display.c	FUNCTION_320	IF_6	CALL_48
0x4007f08	          0x4531ff	                          xor r15d, r15d	     11284	intel_display.c	FUNCTION_320	IF_6	CALL_48
0x4007f0b	      0xe890ceffff	                call sym.pipe_config_err	     11284	intel_display.c	FUNCTION_320	IF_6	CALL_48
0x4007f10	    0x410fb6852c03	          movzx eax, byte [r13 + 0x32c] 	     11284	intel_display.c	FUNCTION_320	IF_6	CALL_48
0x4007f18	            0x84c0	                             test al, al	     11285	intel_display.c	FUNCTION_320	IF_6	IF_7
0x4007f1a	            0x7456	                            je 0x4007f72	     11285	intel_display.c	FUNCTION_320	IF_6	IF_7
0x4007f1c	    0x418b8d240300	           mov ecx, dword [r13 + 0x324] 	     11286	intel_display.c	FUNCTION_320	IF_6	IF_7	CALL_49
0x4007f23	    0x448b83240300	           mov r8d, dword [rbx + 0x324] 	     11286	intel_display.c	FUNCTION_320	IF_6	IF_7	CALL_49
0x4007f2a	          0x4439c1	                            cmp ecx, r8d	     11286	intel_display.c	FUNCTION_320	IF_6	IF_7	CALL_49
0x4007f2d	            0x7418	                            je 0x4007f47	     11286	intel_display.c	FUNCTION_320	IF_6	IF_7	CALL_49
0x4007f2f	    0x48c7c2000000	                              mov rdx, 0	     11286	intel_display.c	FUNCTION_320	IF_6	IF_7	CALL_49
0x4007f36	    0x48c7c6000000	                              mov rsi, 0	     11286	intel_display.c	FUNCTION_320	IF_6	IF_7	CALL_49
0x4007f3d	            0x89ef	                            mov edi, ebp	     11286	intel_display.c	FUNCTION_320	IF_6	IF_7	CALL_49
0x4007f3f	          0x4531ff	                          xor r15d, r15d	     11286	intel_display.c	FUNCTION_320	IF_6	IF_7	CALL_49
0x4007f42	      0xe859ceffff	                call sym.pipe_config_err	     11286	intel_display.c	FUNCTION_320	IF_6	IF_7	CALL_49
0x4007f47	    0x418b8d280300	           mov ecx, dword [r13 + 0x328] 	     11287	intel_display.c	FUNCTION_320	IF_6	IF_7	CALL_50
0x4007f4e	    0x448b83280300	           mov r8d, dword [rbx + 0x328] 	     11287	intel_display.c	FUNCTION_320	IF_6	IF_7	CALL_50
0x4007f55	          0x4439c1	                            cmp ecx, r8d	     11287	intel_display.c	FUNCTION_320	IF_6	IF_7	CALL_50
0x4007f58	            0x7418	                            je 0x4007f72	     11287	intel_display.c	FUNCTION_320	IF_6	IF_7	CALL_50
0x4007f5a	    0x48c7c2000000	                              mov rdx, 0	     11287	intel_display.c	FUNCTION_320	IF_6	IF_7	CALL_50
0x4007f61	    0x48c7c6000000	                              mov rsi, 0	     11287	intel_display.c	FUNCTION_320	IF_6	IF_7	CALL_50
0x4007f68	            0x89ef	                            mov edi, ebp	     11287	intel_display.c	FUNCTION_320	IF_6	IF_7	CALL_50
0x4007f6a	          0x4531ff	                          xor r15d, r15d	     11287	intel_display.c	FUNCTION_320	IF_6	IF_7	CALL_50
0x4007f6d	      0xe82eceffff	                call sym.pipe_config_err	     11287	intel_display.c	FUNCTION_320	IF_6	IF_7	CALL_50
0x4007f72	    0x418b8d640300	           mov ecx, dword [r13 + 0x364] 	     11290	intel_display.c	FUNCTION_320	IF_6	CALL_51
0x4007f79	    0x448b83640300	           mov r8d, dword [rbx + 0x364] 	     11290	intel_display.c	FUNCTION_320	IF_6	CALL_51
0x4007f80	          0x4439c1	                            cmp ecx, r8d	     11290	intel_display.c	FUNCTION_320	IF_6	CALL_51
0x4007f83	            0x7418	                            je 0x4007f9d	     11290	intel_display.c	FUNCTION_320	IF_6	CALL_51
0x4007f85	    0x48c7c2000000	                              mov rdx, 0	     11290	intel_display.c	FUNCTION_320	IF_6	CALL_51
0x4007f8c	    0x48c7c6000000	                              mov rsi, 0	     11290	intel_display.c	FUNCTION_320	IF_6	CALL_51
0x4007f93	            0x89ef	                            mov edi, ebp	     11290	intel_display.c	FUNCTION_320	IF_6	CALL_51
0x4007f95	          0x4531ff	                          xor r15d, r15d	     11290	intel_display.c	FUNCTION_320	IF_6	CALL_51
0x4007f98	      0xe803ceffff	                call sym.pipe_config_err	     11290	intel_display.c	FUNCTION_320	IF_6	CALL_51
0x4007f9d	    0x8b8334020000	           mov eax, dword [rbx + 0x234] 	     11291	intel_display.c	FUNCTION_320	IF_6	CALL_52
0x4007fa3	    0x458bb5340200	          mov r14d, dword [r13 + 0x234] 	     11291	intel_display.c	FUNCTION_320	IF_6	CALL_52
0x4007faa	          0x4439f0	                           cmp eax, r14d	     10995	intel_display.c	FUNCTION_316	IF_1
0x4007fad	        0x89442404	                mov dword [rsp + 4], eax	     11291	intel_display.c	FUNCTION_320	IF_6	CALL_52
0x4007fb1	            0x7423	                            je 0x4007fd6	     10995	intel_display.c	FUNCTION_316	IF_1
0x4007fb3	          0x4585f6	                         test r14d, r14d	     10998	intel_display.c	FUNCTION_316	IF_2
0x4007fb6	     0xf84560a0000	                            je 0x4008a12	     10998	intel_display.c	FUNCTION_316	IF_2
0x4007fbc	            0x85c0	                           test eax, eax	     10998	intel_display.c	FUNCTION_316	IF_2
0x4007fbe	     0xf844e0a0000	                            je 0x4008a12	     10998	intel_display.c	FUNCTION_316	IF_2
0x4007fc4	            0x89c6	                            mov esi, eax	     10998	intel_display.c	FUNCTION_316	IF_2
0x4007fc6	          0x4489f7	                           mov edi, r14d	     10998	intel_display.c	FUNCTION_316	IF_2
0x4007fc9	      0xe892d1ffff	call sym.intel_fuzzy_clock_check.part.49	     10998	intel_display.c	FUNCTION_316	IF_2
0x4007fce	            0x84c0	                             test al, al	     11291	intel_display.c	FUNCTION_320	IF_6	CALL_52
0x4007fd0	     0xf843c0a0000	                            je 0x4008a12	     11291	intel_display.c	FUNCTION_320	IF_6	CALL_52
0x4007fd6	    0x410fb6954b03	          movzx edx, byte [r13 + 0x34b] 	     11294	intel_display.c	FUNCTION_320	CALL_53
0x4007fde	     0xfb6b34b0300	          movzx esi, byte [rbx + 0x34b] 	     11294	intel_display.c	FUNCTION_320	CALL_53
0x4007fe5	          0x4038f2	                             cmp dl, sil	     11294	intel_display.c	FUNCTION_320	CALL_53
0x4007fe8	            0x7436	                            je 0x4008020	     11294	intel_display.c	FUNCTION_320	CALL_53
0x4007fea	    0x48c7c1000000	                              mov rcx, 0	       145	i915_utils.h	FUNCTION_471
0x4007ff1	    0x48c7c0000000	                              mov rax, 0	       145	i915_utils.h	FUNCTION_471
0x4007ff8	          0x4084f6	                           test sil, sil	       145	i915_utils.h	FUNCTION_471
0x4007ffb	          0x4989c8	                             mov r8, rcx	       145	i915_utils.h	FUNCTION_471
0x4007ffe	    0x48c7c6000000	                              mov rsi, 0	     11294	intel_display.c	FUNCTION_320	CALL_53
0x4008005	            0x89ef	                            mov edi, ebp	     11294	intel_display.c	FUNCTION_320	CALL_53
0x4008007	        0x4c0f44c0	                           cmove r8, rax	       145	i915_utils.h	FUNCTION_471
0x400800b	            0x84d2	                             test dl, dl	       145	i915_utils.h	FUNCTION_471
0x400800d	    0x48c7c2000000	                              mov rdx, 0	     11294	intel_display.c	FUNCTION_320	CALL_53
0x4008014	        0x480f44c8	                          cmove rcx, rax	       145	i915_utils.h	FUNCTION_471
0x4008018	          0x4531ff	                          xor r15d, r15d	     11294	intel_display.c	FUNCTION_320	CALL_53
0x400801b	      0xe880cdffff	                call sym.pipe_config_err	     11294	intel_display.c	FUNCTION_320	CALL_53
0x4008020	    0x498b8d780200	           mov rcx, qword [r13 + 0x278] 	     11296	intel_display.c	FUNCTION_320	CALL_54
0x4008027	    0x4c8b83780200	            mov r8, qword [rbx + 0x278] 	     11296	intel_display.c	FUNCTION_320	CALL_54
0x400802e	          0x4c39c1	                             cmp rcx, r8	     11296	intel_display.c	FUNCTION_320	CALL_54
0x4008031	            0x7418	                            je 0x400804b	     11296	intel_display.c	FUNCTION_320	CALL_54
0x4008033	    0x48c7c2000000	                              mov rdx, 0	     11296	intel_display.c	FUNCTION_320	CALL_54
0x400803a	    0x48c7c6000000	                              mov rsi, 0	     11296	intel_display.c	FUNCTION_320	CALL_54
0x4008041	            0x89ef	                            mov edi, ebp	     11296	intel_display.c	FUNCTION_320	CALL_54
0x4008043	          0x4531ff	                          xor r15d, r15d	     11296	intel_display.c	FUNCTION_320	CALL_54
0x4008046	      0xe855cdffff	                call sym.pipe_config_err	     11296	intel_display.c	FUNCTION_320	CALL_54
0x400804b	    0x418b8d800200	           mov ecx, dword [r13 + 0x280] 	     11297	intel_display.c	FUNCTION_320	CALL_55
0x4008052	    0x448b83800200	           mov r8d, dword [rbx + 0x280] 	     11297	intel_display.c	FUNCTION_320	CALL_55
0x4008059	          0x4439c1	                            cmp ecx, r8d	     11297	intel_display.c	FUNCTION_320	CALL_55
0x400805c	            0x7418	                            je 0x4008076	     11297	intel_display.c	FUNCTION_320	CALL_55
0x400805e	    0x48c7c2000000	                              mov rdx, 0	     11297	intel_display.c	FUNCTION_320	CALL_55
0x4008065	    0x48c7c6000000	                              mov rsi, 0	     11297	intel_display.c	FUNCTION_320	CALL_55
0x400806c	            0x89ef	                            mov edi, ebp	     11297	intel_display.c	FUNCTION_320	CALL_55
0x400806e	          0x4531ff	                          xor r15d, r15d	     11297	intel_display.c	FUNCTION_320	CALL_55
0x4008071	      0xe82acdffff	                call sym.pipe_config_err	     11297	intel_display.c	FUNCTION_320	CALL_55
0x4008076	    0x418b8d840200	           mov ecx, dword [r13 + 0x284] 	     11298	intel_display.c	FUNCTION_320	CALL_56
0x400807d	    0x448b83840200	           mov r8d, dword [rbx + 0x284] 	     11298	intel_display.c	FUNCTION_320	CALL_56
0x4008084	          0x4439c1	                            cmp ecx, r8d	     11298	intel_display.c	FUNCTION_320	CALL_56
0x4008087	            0x7418	                            je 0x40080a1	     11298	intel_display.c	FUNCTION_320	CALL_56
0x4008089	    0x48c7c2000000	                              mov rdx, 0	     11298	intel_display.c	FUNCTION_320	CALL_56
0x4008090	    0x48c7c6000000	                              mov rsi, 0	     11298	intel_display.c	FUNCTION_320	CALL_56
0x4008097	            0x89ef	                            mov edi, ebp	     11298	intel_display.c	FUNCTION_320	CALL_56
0x4008099	          0x4531ff	                          xor r15d, r15d	     11298	intel_display.c	FUNCTION_320	CALL_56
0x400809c	      0xe8ffccffff	                call sym.pipe_config_err	     11298	intel_display.c	FUNCTION_320	CALL_56
0x40080a1	    0x418b8d880200	           mov ecx, dword [r13 + 0x288] 	     11299	intel_display.c	FUNCTION_320	CALL_57
0x40080a8	    0x448b83880200	           mov r8d, dword [rbx + 0x288] 	     11299	intel_display.c	FUNCTION_320	CALL_57
0x40080af	          0x4439c1	                            cmp ecx, r8d	     11299	intel_display.c	FUNCTION_320	CALL_57
0x40080b2	            0x7418	                            je 0x40080cc	     11299	intel_display.c	FUNCTION_320	CALL_57
0x40080b4	    0x48c7c2000000	                              mov rdx, 0	     11299	intel_display.c	FUNCTION_320	CALL_57
0x40080bb	    0x48c7c6000000	                              mov rsi, 0	     11299	intel_display.c	FUNCTION_320	CALL_57
0x40080c2	            0x89ef	                            mov edi, ebp	     11299	intel_display.c	FUNCTION_320	CALL_57
0x40080c4	          0x4531ff	                          xor r15d, r15d	     11299	intel_display.c	FUNCTION_320	CALL_57
0x40080c7	      0xe8d4ccffff	                call sym.pipe_config_err	     11299	intel_display.c	FUNCTION_320	CALL_57
0x40080cc	    0x418b8d8c0200	           mov ecx, dword [r13 + 0x28c] 	     11300	intel_display.c	FUNCTION_320	CALL_58
0x40080d3	    0x448b838c0200	           mov r8d, dword [rbx + 0x28c] 	     11300	intel_display.c	FUNCTION_320	CALL_58
0x40080da	          0x4439c1	                            cmp ecx, r8d	     11300	intel_display.c	FUNCTION_320	CALL_58
0x40080dd	            0x7418	                            je 0x40080f7	     11300	intel_display.c	FUNCTION_320	CALL_58
0x40080df	    0x48c7c2000000	                              mov rdx, 0	     11300	intel_display.c	FUNCTION_320	CALL_58
0x40080e6	    0x48c7c6000000	                              mov rsi, 0	     11300	intel_display.c	FUNCTION_320	CALL_58
0x40080ed	            0x89ef	                            mov edi, ebp	     11300	intel_display.c	FUNCTION_320	CALL_58
0x40080ef	          0x4531ff	                          xor r15d, r15d	     11300	intel_display.c	FUNCTION_320	CALL_58
0x40080f2	      0xe8a9ccffff	                call sym.pipe_config_err	     11300	intel_display.c	FUNCTION_320	CALL_58
0x40080f7	    0x418b8d900200	           mov ecx, dword [r13 + 0x290] 	     11301	intel_display.c	FUNCTION_320	CALL_59
0x40080fe	    0x448b83900200	           mov r8d, dword [rbx + 0x290] 	     11301	intel_display.c	FUNCTION_320	CALL_59
0x4008105	          0x4439c1	                            cmp ecx, r8d	     11301	intel_display.c	FUNCTION_320	CALL_59
0x4008108	            0x7418	                            je 0x4008122	     11301	intel_display.c	FUNCTION_320	CALL_59
0x400810a	    0x48c7c2000000	                              mov rdx, 0	     11301	intel_display.c	FUNCTION_320	CALL_59
0x4008111	    0x48c7c6000000	                              mov rsi, 0	     11301	intel_display.c	FUNCTION_320	CALL_59
0x4008118	            0x89ef	                            mov edi, ebp	     11301	intel_display.c	FUNCTION_320	CALL_59
0x400811a	          0x4531ff	                          xor r15d, r15d	     11301	intel_display.c	FUNCTION_320	CALL_59
0x400811d	      0xe87eccffff	                call sym.pipe_config_err	     11301	intel_display.c	FUNCTION_320	CALL_59
0x4008122	    0x418b8d940200	           mov ecx, dword [r13 + 0x294] 	     11302	intel_display.c	FUNCTION_320	CALL_60
0x4008129	    0x448b83940200	           mov r8d, dword [rbx + 0x294] 	     11302	intel_display.c	FUNCTION_320	CALL_60
0x4008130	          0x4439c1	                            cmp ecx, r8d	     11302	intel_display.c	FUNCTION_320	CALL_60
0x4008133	            0x7418	                            je 0x400814d	     11302	intel_display.c	FUNCTION_320	CALL_60
0x4008135	    0x48c7c2000000	                              mov rdx, 0	     11302	intel_display.c	FUNCTION_320	CALL_60
0x400813c	    0x48c7c6000000	                              mov rsi, 0	     11302	intel_display.c	FUNCTION_320	CALL_60
0x4008143	            0x89ef	                            mov edi, ebp	     11302	intel_display.c	FUNCTION_320	CALL_60
0x4008145	          0x4531ff	                          xor r15d, r15d	     11302	intel_display.c	FUNCTION_320	CALL_60
0x4008148	      0xe853ccffff	                call sym.pipe_config_err	     11302	intel_display.c	FUNCTION_320	CALL_60
0x400814d	    0x418b8d980200	           mov ecx, dword [r13 + 0x298] 	     11303	intel_display.c	FUNCTION_320	CALL_61
0x4008154	    0x448b83980200	           mov r8d, dword [rbx + 0x298] 	     11303	intel_display.c	FUNCTION_320	CALL_61
0x400815b	          0x4439c1	                            cmp ecx, r8d	     11303	intel_display.c	FUNCTION_320	CALL_61
0x400815e	            0x7418	                            je 0x4008178	     11303	intel_display.c	FUNCTION_320	CALL_61
0x4008160	    0x48c7c2000000	                              mov rdx, 0	     11303	intel_display.c	FUNCTION_320	CALL_61
0x4008167	    0x48c7c6000000	                              mov rsi, 0	     11303	intel_display.c	FUNCTION_320	CALL_61
0x400816e	            0x89ef	                            mov edi, ebp	     11303	intel_display.c	FUNCTION_320	CALL_61
0x4008170	          0x4531ff	                          xor r15d, r15d	     11303	intel_display.c	FUNCTION_320	CALL_61
0x4008173	      0xe828ccffff	                call sym.pipe_config_err	     11303	intel_display.c	FUNCTION_320	CALL_61
0x4008178	    0x418b8d9c0200	           mov ecx, dword [r13 + 0x29c] 	     11304	intel_display.c	FUNCTION_320	CALL_62
0x400817f	    0x448b839c0200	           mov r8d, dword [rbx + 0x29c] 	     11304	intel_display.c	FUNCTION_320	CALL_62
0x4008186	          0x4439c1	                            cmp ecx, r8d	     11304	intel_display.c	FUNCTION_320	CALL_62
0x4008189	            0x7418	                            je 0x40081a3	     11304	intel_display.c	FUNCTION_320	CALL_62
0x400818b	    0x48c7c2000000	                              mov rdx, 0	     11304	intel_display.c	FUNCTION_320	CALL_62
0x4008192	    0x48c7c6000000	                              mov rsi, 0	     11304	intel_display.c	FUNCTION_320	CALL_62
0x4008199	            0x89ef	                            mov edi, ebp	     11304	intel_display.c	FUNCTION_320	CALL_62
0x400819b	          0x4531ff	                          xor r15d, r15d	     11304	intel_display.c	FUNCTION_320	CALL_62
0x400819e	      0xe8fdcbffff	                call sym.pipe_config_err	     11304	intel_display.c	FUNCTION_320	CALL_62
0x40081a3	    0x418b8da00200	           mov ecx, dword [r13 + 0x2a0] 	     11305	intel_display.c	FUNCTION_320	CALL_63
0x40081aa	    0x448b83a00200	           mov r8d, dword [rbx + 0x2a0] 	     11305	intel_display.c	FUNCTION_320	CALL_63
0x40081b1	          0x4439c1	                            cmp ecx, r8d	     11305	intel_display.c	FUNCTION_320	CALL_63
0x40081b4	            0x7418	                            je 0x40081ce	     11305	intel_display.c	FUNCTION_320	CALL_63
0x40081b6	    0x48c7c2000000	                              mov rdx, 0	     11305	intel_display.c	FUNCTION_320	CALL_63
0x40081bd	    0x48c7c6000000	                              mov rsi, 0	     11305	intel_display.c	FUNCTION_320	CALL_63
0x40081c4	            0x89ef	                            mov edi, ebp	     11305	intel_display.c	FUNCTION_320	CALL_63
0x40081c6	          0x4531ff	                          xor r15d, r15d	     11305	intel_display.c	FUNCTION_320	CALL_63
0x40081c9	      0xe8d2cbffff	                call sym.pipe_config_err	     11305	intel_display.c	FUNCTION_320	CALL_63
0x40081ce	    0x418b8da40200	           mov ecx, dword [r13 + 0x2a4] 	     11306	intel_display.c	FUNCTION_320	CALL_64
0x40081d5	    0x448b83a40200	           mov r8d, dword [rbx + 0x2a4] 	     11306	intel_display.c	FUNCTION_320	CALL_64
0x40081dc	          0x4439c1	                            cmp ecx, r8d	     11306	intel_display.c	FUNCTION_320	CALL_64
0x40081df	            0x7418	                            je 0x40081f9	     11306	intel_display.c	FUNCTION_320	CALL_64
0x40081e1	    0x48c7c2000000	                              mov rdx, 0	     11306	intel_display.c	FUNCTION_320	CALL_64
0x40081e8	    0x48c7c6000000	                              mov rsi, 0	     11306	intel_display.c	FUNCTION_320	CALL_64
0x40081ef	            0x89ef	                            mov edi, ebp	     11306	intel_display.c	FUNCTION_320	CALL_64
0x40081f1	          0x4531ff	                          xor r15d, r15d	     11306	intel_display.c	FUNCTION_320	CALL_64
0x40081f4	      0xe8a7cbffff	                call sym.pipe_config_err	     11306	intel_display.c	FUNCTION_320	CALL_64
0x40081f9	    0x418b8da80200	           mov ecx, dword [r13 + 0x2a8] 	     11307	intel_display.c	FUNCTION_320	CALL_65
0x4008200	    0x448b83a80200	           mov r8d, dword [rbx + 0x2a8] 	     11307	intel_display.c	FUNCTION_320	CALL_65
0x4008207	          0x4439c1	                            cmp ecx, r8d	     11307	intel_display.c	FUNCTION_320	CALL_65
0x400820a	            0x7418	                            je 0x4008224	     11307	intel_display.c	FUNCTION_320	CALL_65
0x400820c	    0x48c7c2000000	                              mov rdx, 0	     11307	intel_display.c	FUNCTION_320	CALL_65
0x4008213	    0x48c7c6000000	                              mov rsi, 0	     11307	intel_display.c	FUNCTION_320	CALL_65
0x400821a	            0x89ef	                            mov edi, ebp	     11307	intel_display.c	FUNCTION_320	CALL_65
0x400821c	          0x4531ff	                          xor r15d, r15d	     11307	intel_display.c	FUNCTION_320	CALL_65
0x400821f	      0xe87ccbffff	                call sym.pipe_config_err	     11307	intel_display.c	FUNCTION_320	CALL_65
0x4008224	    0x418b8dac0200	           mov ecx, dword [r13 + 0x2ac] 	     11308	intel_display.c	FUNCTION_320	CALL_66
0x400822b	    0x448b83ac0200	           mov r8d, dword [rbx + 0x2ac] 	     11308	intel_display.c	FUNCTION_320	CALL_66
0x4008232	          0x4439c1	                            cmp ecx, r8d	     11308	intel_display.c	FUNCTION_320	CALL_66
0x4008235	            0x7418	                            je 0x400824f	     11308	intel_display.c	FUNCTION_320	CALL_66
0x4008237	    0x48c7c2000000	                              mov rdx, 0	     11308	intel_display.c	FUNCTION_320	CALL_66
0x400823e	    0x48c7c6000000	                              mov rsi, 0	     11308	intel_display.c	FUNCTION_320	CALL_66
0x4008245	            0x89ef	                            mov edi, ebp	     11308	intel_display.c	FUNCTION_320	CALL_66
0x4008247	          0x4531ff	                          xor r15d, r15d	     11308	intel_display.c	FUNCTION_320	CALL_66
0x400824a	      0xe851cbffff	                call sym.pipe_config_err	     11308	intel_display.c	FUNCTION_320	CALL_66
0x400824f	    0x418b8db00200	           mov ecx, dword [r13 + 0x2b0] 	     11309	intel_display.c	FUNCTION_320	CALL_67
0x4008256	    0x448b83b00200	           mov r8d, dword [rbx + 0x2b0] 	     11309	intel_display.c	FUNCTION_320	CALL_67
0x400825d	          0x4439c1	                            cmp ecx, r8d	     11309	intel_display.c	FUNCTION_320	CALL_67
0x4008260	            0x7418	                            je 0x400827a	     11309	intel_display.c	FUNCTION_320	CALL_67
0x4008262	    0x48c7c2000000	                              mov rdx, 0	     11309	intel_display.c	FUNCTION_320	CALL_67
0x4008269	    0x48c7c6000000	                              mov rsi, 0	     11309	intel_display.c	FUNCTION_320	CALL_67
0x4008270	            0x89ef	                            mov edi, ebp	     11309	intel_display.c	FUNCTION_320	CALL_67
0x4008272	          0x4531ff	                          xor r15d, r15d	     11309	intel_display.c	FUNCTION_320	CALL_67
0x4008275	      0xe826cbffff	                call sym.pipe_config_err	     11309	intel_display.c	FUNCTION_320	CALL_67
0x400827a	    0x418b8db40200	           mov ecx, dword [r13 + 0x2b4] 	     11310	intel_display.c	FUNCTION_320	CALL_68
0x4008281	    0x448b83b40200	           mov r8d, dword [rbx + 0x2b4] 	     11310	intel_display.c	FUNCTION_320	CALL_68
0x4008288	          0x4439c1	                            cmp ecx, r8d	     11310	intel_display.c	FUNCTION_320	CALL_68
0x400828b	            0x7418	                            je 0x40082a5	     11310	intel_display.c	FUNCTION_320	CALL_68
0x400828d	    0x48c7c2000000	                              mov rdx, 0	     11310	intel_display.c	FUNCTION_320	CALL_68
0x4008294	    0x48c7c6000000	                              mov rsi, 0	     11310	intel_display.c	FUNCTION_320	CALL_68
0x400829b	            0x89ef	                            mov edi, ebp	     11310	intel_display.c	FUNCTION_320	CALL_68
0x400829d	          0x4531ff	                          xor r15d, r15d	     11310	intel_display.c	FUNCTION_320	CALL_68
0x40082a0	      0xe8fbcaffff	                call sym.pipe_config_err	     11310	intel_display.c	FUNCTION_320	CALL_68
0x40082a5	    0x418b8db80200	           mov ecx, dword [r13 + 0x2b8] 	     11311	intel_display.c	FUNCTION_320	CALL_69
0x40082ac	    0x448b83b80200	           mov r8d, dword [rbx + 0x2b8] 	     11311	intel_display.c	FUNCTION_320	CALL_69
0x40082b3	          0x4439c1	                            cmp ecx, r8d	     11311	intel_display.c	FUNCTION_320	CALL_69
0x40082b6	            0x7418	                            je 0x40082d0	     11311	intel_display.c	FUNCTION_320	CALL_69
0x40082b8	    0x48c7c2000000	                              mov rdx, 0	     11311	intel_display.c	FUNCTION_320	CALL_69
0x40082bf	    0x48c7c6000000	                              mov rsi, 0	     11311	intel_display.c	FUNCTION_320	CALL_69
0x40082c6	            0x89ef	                            mov edi, ebp	     11311	intel_display.c	FUNCTION_320	CALL_69
0x40082c8	          0x4531ff	                          xor r15d, r15d	     11311	intel_display.c	FUNCTION_320	CALL_69
0x40082cb	      0xe8d0caffff	                call sym.pipe_config_err	     11311	intel_display.c	FUNCTION_320	CALL_69
0x40082d0	    0x418b8dbc0200	           mov ecx, dword [r13 + 0x2bc] 	     11312	intel_display.c	FUNCTION_320	CALL_70
0x40082d7	    0x448b83bc0200	           mov r8d, dword [rbx + 0x2bc] 	     11312	intel_display.c	FUNCTION_320	CALL_70
0x40082de	          0x4439c1	                            cmp ecx, r8d	     11312	intel_display.c	FUNCTION_320	CALL_70
0x40082e1	            0x7418	                            je 0x40082fb	     11312	intel_display.c	FUNCTION_320	CALL_70
0x40082e3	    0x48c7c2000000	                              mov rdx, 0	     11312	intel_display.c	FUNCTION_320	CALL_70
0x40082ea	    0x48c7c6000000	                              mov rsi, 0	     11312	intel_display.c	FUNCTION_320	CALL_70
0x40082f1	            0x89ef	                            mov edi, ebp	     11312	intel_display.c	FUNCTION_320	CALL_70
0x40082f3	          0x4531ff	                          xor r15d, r15d	     11312	intel_display.c	FUNCTION_320	CALL_70
0x40082f6	      0xe8a5caffff	                call sym.pipe_config_err	     11312	intel_display.c	FUNCTION_320	CALL_70
0x40082fb	    0x418b8dc00200	           mov ecx, dword [r13 + 0x2c0] 	     11313	intel_display.c	FUNCTION_320	CALL_71
0x4008302	    0x448b83c00200	           mov r8d, dword [rbx + 0x2c0] 	     11313	intel_display.c	FUNCTION_320	CALL_71
0x4008309	          0x4439c1	                            cmp ecx, r8d	     11313	intel_display.c	FUNCTION_320	CALL_71
0x400830c	            0x7418	                            je 0x4008326	     11313	intel_display.c	FUNCTION_320	CALL_71
0x400830e	    0x48c7c2000000	                              mov rdx, 0	     11313	intel_display.c	FUNCTION_320	CALL_71
0x4008315	    0x48c7c6000000	                              mov rsi, 0	     11313	intel_display.c	FUNCTION_320	CALL_71
0x400831c	            0x89ef	                            mov edi, ebp	     11313	intel_display.c	FUNCTION_320	CALL_71
0x400831e	          0x4531ff	                          xor r15d, r15d	     11313	intel_display.c	FUNCTION_320	CALL_71
0x4008321	      0xe87acaffff	                call sym.pipe_config_err	     11313	intel_display.c	FUNCTION_320	CALL_71
0x4008326	    0x418b8dc40200	           mov ecx, dword [r13 + 0x2c4] 	     11314	intel_display.c	FUNCTION_320	CALL_72
0x400832d	    0x448b83c40200	           mov r8d, dword [rbx + 0x2c4] 	     11314	intel_display.c	FUNCTION_320	CALL_72
0x4008334	          0x4439c1	                            cmp ecx, r8d	     11314	intel_display.c	FUNCTION_320	CALL_72
0x4008337	            0x7418	                            je 0x4008351	     11314	intel_display.c	FUNCTION_320	CALL_72
0x4008339	    0x48c7c2000000	                              mov rdx, 0	     11314	intel_display.c	FUNCTION_320	CALL_72
0x4008340	    0x48c7c6000000	                              mov rsi, 0	     11314	intel_display.c	FUNCTION_320	CALL_72
0x4008347	            0x89ef	                            mov edi, ebp	     11314	intel_display.c	FUNCTION_320	CALL_72
0x4008349	          0x4531ff	                          xor r15d, r15d	     11314	intel_display.c	FUNCTION_320	CALL_72
0x400834c	      0xe84fcaffff	                call sym.pipe_config_err	     11314	intel_display.c	FUNCTION_320	CALL_72
0x4008351	    0x418b8dc80200	           mov ecx, dword [r13 + 0x2c8] 	     11315	intel_display.c	FUNCTION_320	CALL_73
0x4008358	    0x448b83c80200	           mov r8d, dword [rbx + 0x2c8] 	     11315	intel_display.c	FUNCTION_320	CALL_73
0x400835f	          0x4439c1	                            cmp ecx, r8d	     11315	intel_display.c	FUNCTION_320	CALL_73
0x4008362	            0x7418	                            je 0x400837c	     11315	intel_display.c	FUNCTION_320	CALL_73
0x4008364	    0x48c7c2000000	                              mov rdx, 0	     11315	intel_display.c	FUNCTION_320	CALL_73
0x400836b	    0x48c7c6000000	                              mov rsi, 0	     11315	intel_display.c	FUNCTION_320	CALL_73
0x4008372	            0x89ef	                            mov edi, ebp	     11315	intel_display.c	FUNCTION_320	CALL_73
0x4008374	          0x4531ff	                          xor r15d, r15d	     11315	intel_display.c	FUNCTION_320	CALL_73
0x4008377	      0xe824caffff	                call sym.pipe_config_err	     11315	intel_display.c	FUNCTION_320	CALL_73
0x400837c	    0x418b8dcc0200	           mov ecx, dword [r13 + 0x2cc] 	     11316	intel_display.c	FUNCTION_320	CALL_74
0x4008383	    0x448b83cc0200	           mov r8d, dword [rbx + 0x2cc] 	     11316	intel_display.c	FUNCTION_320	CALL_74
0x400838a	          0x4439c1	                            cmp ecx, r8d	     11316	intel_display.c	FUNCTION_320	CALL_74
0x400838d	            0x7418	                            je 0x40083a7	     11316	intel_display.c	FUNCTION_320	CALL_74
0x400838f	    0x48c7c2000000	                              mov rdx, 0	     11316	intel_display.c	FUNCTION_320	CALL_74
0x4008396	    0x48c7c6000000	                              mov rsi, 0	     11316	intel_display.c	FUNCTION_320	CALL_74
0x400839d	            0x89ef	                            mov edi, ebp	     11316	intel_display.c	FUNCTION_320	CALL_74
0x400839f	          0x4531ff	                          xor r15d, r15d	     11316	intel_display.c	FUNCTION_320	CALL_74
0x40083a2	      0xe8f9c9ffff	                call sym.pipe_config_err	     11316	intel_display.c	FUNCTION_320	CALL_74
0x40083a7	    0x418b8dd00200	           mov ecx, dword [r13 + 0x2d0] 	     11317	intel_display.c	FUNCTION_320	CALL_75
0x40083ae	    0x448b83d00200	           mov r8d, dword [rbx + 0x2d0] 	     11317	intel_display.c	FUNCTION_320	CALL_75
0x40083b5	          0x4439c1	                            cmp ecx, r8d	     11317	intel_display.c	FUNCTION_320	CALL_75
0x40083b8	            0x7418	                            je 0x40083d2	     11317	intel_display.c	FUNCTION_320	CALL_75
0x40083ba	    0x48c7c2000000	                              mov rdx, 0	     11317	intel_display.c	FUNCTION_320	CALL_75
0x40083c1	    0x48c7c6000000	                              mov rsi, 0	     11317	intel_display.c	FUNCTION_320	CALL_75
0x40083c8	            0x89ef	                            mov edi, ebp	     11317	intel_display.c	FUNCTION_320	CALL_75
0x40083ca	          0x4531ff	                          xor r15d, r15d	     11317	intel_display.c	FUNCTION_320	CALL_75
0x40083cd	      0xe8cec9ffff	                call sym.pipe_config_err	     11317	intel_display.c	FUNCTION_320	CALL_75
0x40083d2	    0x418b8dd40200	           mov ecx, dword [r13 + 0x2d4] 	     11319	intel_display.c	FUNCTION_320	CALL_76
0x40083d9	    0x448b83d40200	           mov r8d, dword [rbx + 0x2d4] 	     11319	intel_display.c	FUNCTION_320	CALL_76
0x40083e0	          0x4439c1	                            cmp ecx, r8d	     11319	intel_display.c	FUNCTION_320	CALL_76
0x40083e3	            0x7418	                            je 0x40083fd	     11319	intel_display.c	FUNCTION_320	CALL_76
0x40083e5	    0x48c7c2000000	                              mov rdx, 0	     11319	intel_display.c	FUNCTION_320	CALL_76
0x40083ec	    0x48c7c6000000	                              mov rsi, 0	     11319	intel_display.c	FUNCTION_320	CALL_76
0x40083f3	            0x89ef	                            mov edi, ebp	     11319	intel_display.c	FUNCTION_320	CALL_76
0x40083f5	          0x4531ff	                          xor r15d, r15d	     11319	intel_display.c	FUNCTION_320	CALL_76
0x40083f8	      0xe8a3c9ffff	                call sym.pipe_config_err	     11319	intel_display.c	FUNCTION_320	CALL_76
0x40083fd	    0x418b8dd80200	           mov ecx, dword [r13 + 0x2d8] 	     11320	intel_display.c	FUNCTION_320	CALL_77
0x4008404	    0x448b83d80200	           mov r8d, dword [rbx + 0x2d8] 	     11320	intel_display.c	FUNCTION_320	CALL_77
0x400840b	          0x4439c1	                            cmp ecx, r8d	     11320	intel_display.c	FUNCTION_320	CALL_77
0x400840e	            0x7418	                            je 0x4008428	     11320	intel_display.c	FUNCTION_320	CALL_77
0x4008410	    0x48c7c2000000	                              mov rdx, 0	     11320	intel_display.c	FUNCTION_320	CALL_77
0x4008417	    0x48c7c6000000	                              mov rsi, 0	     11320	intel_display.c	FUNCTION_320	CALL_77
0x400841e	            0x89ef	                            mov edi, ebp	     11320	intel_display.c	FUNCTION_320	CALL_77
0x4008420	          0x4531ff	                          xor r15d, r15d	     11320	intel_display.c	FUNCTION_320	CALL_77
0x4008423	      0xe878c9ffff	                call sym.pipe_config_err	     11320	intel_display.c	FUNCTION_320	CALL_77
0x4008428	    0x41f784246406	       test dword [r12 + 0x664], 0x6000 	     11322	intel_display.c	FUNCTION_320	IF_8	CALL_79
0x4008434	     0xf8554020000	                           jne 0x400868e	     11322	intel_display.c	FUNCTION_320	IF_8	CALL_79
0x400843a	    0x4180bc245c06	               cmp byte [r12 + 0x65c], 4	     11322	intel_display.c	FUNCTION_320	IF_8	CALL_79
0x4008443	     0xf8745020000	                            ja 0x400868e	     11322	intel_display.c	FUNCTION_320	IF_8	CALL_79
0x4008449	    0x448ba3a80000	           mov r12d, dword [rbx + 0xa8] 	     11325	intel_display.c	FUNCTION_320	CALL_81
0x4008450	    0x458bb5a80000	           mov r14d, dword [r13 + 0xa8] 	     11325	intel_display.c	FUNCTION_320	CALL_81
0x4008457	          0x4539f4	                          cmp r12d, r14d	     10995	intel_display.c	FUNCTION_316	IF_1
0x400845a	            0x7425	                            je 0x4008481	     10995	intel_display.c	FUNCTION_316	IF_1
0x400845c	          0x4585f6	                         test r14d, r14d	     10998	intel_display.c	FUNCTION_316	IF_2
0x400845f	     0xf84df020000	                            je 0x4008744	     10998	intel_display.c	FUNCTION_316	IF_2
0x4008465	          0x4585e4	                         test r12d, r12d	     10998	intel_display.c	FUNCTION_316	IF_2
0x4008468	     0xf84d6020000	                            je 0x4008744	     10998	intel_display.c	FUNCTION_316	IF_2
0x400846e	          0x4489e6	                           mov esi, r12d	     10998	intel_display.c	FUNCTION_316	IF_2
0x4008471	          0x4489f7	                           mov edi, r14d	     10998	intel_display.c	FUNCTION_316	IF_2
0x4008474	      0xe8e7ccffff	call sym.intel_fuzzy_clock_check.part.49	     10998	intel_display.c	FUNCTION_316	IF_2
0x4008479	            0x84c0	                             test al, al	     11325	intel_display.c	FUNCTION_320	CALL_81
0x400847b	     0xf84c3020000	                            je 0x4008744	     11325	intel_display.c	FUNCTION_320	CALL_81
0x4008481	    0x448ba30c0300	          mov r12d, dword [rbx + 0x30c] 	     11326	intel_display.c	FUNCTION_320	CALL_82
0x4008488	    0x458bb50c0300	          mov r14d, dword [r13 + 0x30c] 	     11326	intel_display.c	FUNCTION_320	CALL_82
0x400848f	          0x4539f4	                          cmp r12d, r14d	     10995	intel_display.c	FUNCTION_316	IF_1
0x4008492	            0x7425	                            je 0x40084b9	     10995	intel_display.c	FUNCTION_316	IF_1
0x4008494	          0x4585f6	                         test r14d, r14d	     10998	intel_display.c	FUNCTION_316	IF_2
0x4008497	     0xf8484020000	                            je 0x4008721	     10998	intel_display.c	FUNCTION_316	IF_2
0x400849d	          0x4585e4	                         test r12d, r12d	     10998	intel_display.c	FUNCTION_316	IF_2
0x40084a0	     0xf847b020000	                            je 0x4008721	     10998	intel_display.c	FUNCTION_316	IF_2
0x40084a6	          0x4489e6	                           mov esi, r12d	     10998	intel_display.c	FUNCTION_316	IF_2
0x40084a9	          0x4489f7	                           mov edi, r14d	     10998	intel_display.c	FUNCTION_316	IF_2
0x40084ac	      0xe8afccffff	call sym.intel_fuzzy_clock_check.part.49	     10998	intel_display.c	FUNCTION_316	IF_2
0x40084b1	            0x84c0	                             test al, al	     11326	intel_display.c	FUNCTION_320	CALL_82
0x40084b3	     0xf8468020000	                            je 0x4008721	     11326	intel_display.c	FUNCTION_320	CALL_82
0x40084b9	    0x410fb68d1603	          movzx ecx, byte [r13 + 0x316] 	     11328	intel_display.c	FUNCTION_320	CALL_83
0x40084c1	    0x440fb6831603	          movzx r8d, byte [rbx + 0x316] 	     11328	intel_display.c	FUNCTION_320	CALL_83
0x40084c9	          0x4438c1	                             cmp cl, r8b	     11328	intel_display.c	FUNCTION_320	CALL_83
0x40084cc	            0x7418	                            je 0x40084e6	     11328	intel_display.c	FUNCTION_320	CALL_83
0x40084ce	    0x48c7c2000000	                              mov rdx, 0	     11328	intel_display.c	FUNCTION_320	CALL_83
0x40084d5	    0x48c7c6000000	                              mov rsi, 0	     11328	intel_display.c	FUNCTION_320	CALL_83
0x40084dc	            0x89ef	                            mov edi, ebp	     11328	intel_display.c	FUNCTION_320	CALL_83
0x40084de	          0x4531ff	                          xor r15d, r15d	     11328	intel_display.c	FUNCTION_320	CALL_83
0x40084e1	      0xe8bac8ffff	                call sym.pipe_config_err	     11328	intel_display.c	FUNCTION_320	CALL_83
0x40084e6	        0x4883c410	                           add rsp, 0x10	     11340	intel_display.c	FUNCTION_320
0x40084ea	          0x4489f8	                           mov eax, r15d	     11340	intel_display.c	FUNCTION_320
0x40084ed	              0x5b	                                 pop rbx	     11340	intel_display.c	FUNCTION_320
0x40084ee	              0x5d	                                 pop rbp	     11340	intel_display.c	FUNCTION_320
0x40084ef	            0x415c	                                 pop r12	     11340	intel_display.c	FUNCTION_320
0x40084f1	            0x415d	                                 pop r13	     11340	intel_display.c	FUNCTION_320
0x40084f3	            0x415e	                                 pop r14	     11340	intel_display.c	FUNCTION_320
0x40084f5	            0x415f	                                 pop r15	     11340	intel_display.c	FUNCTION_320
0x40084f7	              0xc3	                                     ret	     11340	intel_display.c	FUNCTION_320
0x40084f8	      0xa900002400	                      test eax, 0x240000	     11250	intel_display.c	FUNCTION_320	IF_3	CALL_29
0x40084fd	     0xf8401f7ffff	                            je 0x4007c04	     11250	intel_display.c	FUNCTION_320	IF_3	CALL_29
0x4008503	      0xe9b2f6ffff	                           jmp 0x4007bba	     11250	intel_display.c	FUNCTION_320	IF_3	CALL_29
0x4008508	    0x488d83e00200	                  lea rax, [rbx + 0x2e0]	     11229	intel_display.c	FUNCTION_320	CALL_10
0x400850f	    0x498dbde00200	                  lea rdi, [r13 + 0x2e0]	     11229	intel_display.c	FUNCTION_320	CALL_10
0x4008516	            0x89ea	                            mov edx, ebp	     11229	intel_display.c	FUNCTION_320	CALL_10
0x4008518	          0x4889c6	                            mov rsi, rax	     11229	intel_display.c	FUNCTION_320	CALL_10
0x400851b	      0x4889442408	                mov qword [rsp + 8], rax	     11229	intel_display.c	FUNCTION_320	CALL_10
0x4008520	      0xe8cbf1ffff	         call sym.intel_compare_link_m_n	     11229	intel_display.c	FUNCTION_320	CALL_10
0x4008525	            0x84c0	                             test al, al	     11229	intel_display.c	FUNCTION_320	CALL_10
0x4008527	     0xf85c7f3ffff	                           jne 0x40078f4	     11229	intel_display.c	FUNCTION_320	CALL_10
0x400852d	      0x488b742408	                mov rsi, qword [rsp + 8]	     11229	intel_display.c	FUNCTION_320	CALL_10
0x4008532	    0x498dbdf40200	                  lea rdi, [r13 + 0x2f4]	     11229	intel_display.c	FUNCTION_320	CALL_10
0x4008539	            0x89ea	                            mov edx, ebp	     11229	intel_display.c	FUNCTION_320	CALL_10
0x400853b	      0xe8b0f1ffff	         call sym.intel_compare_link_m_n	     11229	intel_display.c	FUNCTION_320	CALL_10
0x4008540	            0x84c0	                             test al, al	     11229	intel_display.c	FUNCTION_320	CALL_10
0x4008542	     0xf85acf3ffff	                           jne 0x40078f4	     11229	intel_display.c	FUNCTION_320	CALL_10
0x4008548	    0x8b83f0020000	           mov eax, dword [rbx + 0x2f0] 	     11229	intel_display.c	FUNCTION_320	CALL_10
0x400854e	    0x418b8de00200	           mov ecx, dword [r13 + 0x2e0] 	     11229	intel_display.c	FUNCTION_320	CALL_10
0x4008555	    0x48c7c2000000	                              mov rdx, 0	     11229	intel_display.c	FUNCTION_320	CALL_10
0x400855c	    0x458b8de80200	           mov r9d, dword [r13 + 0x2e8] 	     11229	intel_display.c	FUNCTION_320	CALL_10
0x4008563	    0x458b85e40200	           mov r8d, dword [r13 + 0x2e4] 	     11229	intel_display.c	FUNCTION_320	CALL_10
0x400856a	    0x48c7c6000000	                              mov rsi, 0	     11229	intel_display.c	FUNCTION_320	CALL_10
0x4008571	            0x89ef	                            mov edi, ebp	     11229	intel_display.c	FUNCTION_320	CALL_10
0x4008573	          0x4531ff	                          xor r15d, r15d	     11229	intel_display.c	FUNCTION_320	CALL_10
0x4008576	              0x50	                                push rax	     11229	intel_display.c	FUNCTION_320	CALL_10
0x4008577	    0x8b83ec020000	           mov eax, dword [rbx + 0x2ec] 	     11229	intel_display.c	FUNCTION_320	CALL_10
0x400857d	              0x50	                                push rax	     11229	intel_display.c	FUNCTION_320	CALL_10
0x400857e	    0x8b83e8020000	           mov eax, dword [rbx + 0x2e8] 	     11229	intel_display.c	FUNCTION_320	CALL_10
0x4008584	              0x50	                                push rax	     11229	intel_display.c	FUNCTION_320	CALL_10
0x4008585	    0x8b83e4020000	           mov eax, dword [rbx + 0x2e4] 	     11229	intel_display.c	FUNCTION_320	CALL_10
0x400858b	              0x50	                                push rax	     11229	intel_display.c	FUNCTION_320	CALL_10
0x400858c	    0x8b83e0020000	           mov eax, dword [rbx + 0x2e0] 	     11229	intel_display.c	FUNCTION_320	CALL_10
0x4008592	              0x50	                                push rax	     11229	intel_display.c	FUNCTION_320	CALL_10
0x4008593	    0x418b85040300	           mov eax, dword [r13 + 0x304] 	     11229	intel_display.c	FUNCTION_320	CALL_10
0x400859a	              0x50	                                push rax	     11229	intel_display.c	FUNCTION_320	CALL_10
0x400859b	    0x418b85000300	           mov eax, dword [r13 + 0x300] 	     11229	intel_display.c	FUNCTION_320	CALL_10
0x40085a2	              0x50	                                push rax	     11229	intel_display.c	FUNCTION_320	CALL_10
0x40085a3	    0x418b85fc0200	           mov eax, dword [r13 + 0x2fc] 	     11229	intel_display.c	FUNCTION_320	CALL_10
0x40085aa	              0x50	                                push rax	     11229	intel_display.c	FUNCTION_320	CALL_10
0x40085ab	    0x418b85f80200	           mov eax, dword [r13 + 0x2f8] 	     11229	intel_display.c	FUNCTION_320	CALL_10
0x40085b2	              0x50	                                push rax	     11229	intel_display.c	FUNCTION_320	CALL_10
0x40085b3	    0x418b85f40200	           mov eax, dword [r13 + 0x2f4] 	     11229	intel_display.c	FUNCTION_320	CALL_10
0x40085ba	              0x50	                                push rax	     11229	intel_display.c	FUNCTION_320	CALL_10
0x40085bb	    0x418b85f00200	           mov eax, dword [r13 + 0x2f0] 	     11229	intel_display.c	FUNCTION_320	CALL_10
0x40085c2	              0x50	                                push rax	     11229	intel_display.c	FUNCTION_320	CALL_10
0x40085c3	    0x418b85ec0200	           mov eax, dword [r13 + 0x2ec] 	     11229	intel_display.c	FUNCTION_320	CALL_10
0x40085ca	              0x50	                                push rax	     11229	intel_display.c	FUNCTION_320	CALL_10
0x40085cb	      0xe8d0c7ffff	                call sym.pipe_config_err	     11229	intel_display.c	FUNCTION_320	CALL_10
0x40085d0	        0x4883c460	                           add rsp, 0x60	     11229	intel_display.c	FUNCTION_320	CALL_10
0x40085d4	      0xe91bf3ffff	                           jmp 0x40078f4	     11229	intel_display.c	FUNCTION_320	CALL_10
0x40085d9	    0x410fb6953902	          movzx edx, byte [r13 + 0x239] 	     11255	intel_display.c	FUNCTION_320	CALL_33
0x40085e1	     0xfb6b3390200	          movzx esi, byte [rbx + 0x239] 	     11255	intel_display.c	FUNCTION_320	CALL_33
0x40085e8	          0x4038f2	                             cmp dl, sil	     11255	intel_display.c	FUNCTION_320	CALL_33
0x40085eb	            0x7436	                            je 0x4008623	     11255	intel_display.c	FUNCTION_320	CALL_33
0x40085ed	    0x48c7c1000000	                              mov rcx, 0	       145	i915_utils.h	FUNCTION_471
0x40085f4	    0x48c7c0000000	                              mov rax, 0	       145	i915_utils.h	FUNCTION_471
0x40085fb	          0x4084f6	                           test sil, sil	       145	i915_utils.h	FUNCTION_471
0x40085fe	          0x4989c8	                             mov r8, rcx	       145	i915_utils.h	FUNCTION_471
0x4008601	    0x48c7c6000000	                              mov rsi, 0	     11255	intel_display.c	FUNCTION_320	CALL_33
0x4008608	            0x89ef	                            mov edi, ebp	     11255	intel_display.c	FUNCTION_320	CALL_33
0x400860a	        0x4c0f44c0	                           cmove r8, rax	       145	i915_utils.h	FUNCTION_471
0x400860e	            0x84d2	                             test dl, dl	       145	i915_utils.h	FUNCTION_471
0x4008610	    0x48c7c2000000	                              mov rdx, 0	     11255	intel_display.c	FUNCTION_320	CALL_33
0x4008617	        0x480f44c8	                          cmove rcx, rax	       145	i915_utils.h	FUNCTION_471
0x400861b	          0x4531ff	                          xor r15d, r15d	     11255	intel_display.c	FUNCTION_320	CALL_33
0x400861e	      0xe87dc7ffff	                call sym.pipe_config_err	     11255	intel_display.c	FUNCTION_320	CALL_33
0x4008623	    0x410fb6959304	          movzx edx, byte [r13 + 0x493] 	     11256	intel_display.c	FUNCTION_320	CALL_34
0x400862b	     0xfb6b3930400	          movzx esi, byte [rbx + 0x493] 	     11256	intel_display.c	FUNCTION_320	CALL_34
0x4008632	          0x4038d6	                             cmp sil, dl	     11256	intel_display.c	FUNCTION_320	CALL_34
0x4008635	     0xf85bdf6ffff	                           jne 0x4007cf8	     11256	intel_display.c	FUNCTION_320	CALL_34
0x400863b	    0x410fb6954902	          movzx edx, byte [r13 + 0x249] 	     11258	intel_display.c	FUNCTION_320	CALL_35
0x4008643	     0xfb6b3490200	          movzx esi, byte [rbx + 0x249] 	     11258	intel_display.c	FUNCTION_320	CALL_35
0x400864a	          0x4038f2	                             cmp dl, sil	     11258	intel_display.c	FUNCTION_320	CALL_35
0x400864d	     0xf8426f7ffff	                            je 0x4007d79	     11258	intel_display.c	FUNCTION_320	CALL_35
0x4008653	    0x48c7c1000000	                              mov rcx, 0	       145	i915_utils.h	FUNCTION_471
0x400865a	    0x48c7c0000000	                              mov rax, 0	       145	i915_utils.h	FUNCTION_471
0x4008661	          0x4084f6	                           test sil, sil	       145	i915_utils.h	FUNCTION_471
0x4008664	          0x4989c8	                             mov r8, rcx	       145	i915_utils.h	FUNCTION_471
0x4008667	    0x48c7c6000000	                              mov rsi, 0	     11258	intel_display.c	FUNCTION_320	CALL_35
0x400866e	            0x89ef	                            mov edi, ebp	     11258	intel_display.c	FUNCTION_320	CALL_35
0x4008670	        0x4c0f44c0	                           cmove r8, rax	       145	i915_utils.h	FUNCTION_471
0x4008674	            0x84d2	                             test dl, dl	       145	i915_utils.h	FUNCTION_471
0x4008676	    0x48c7c2000000	                              mov rdx, 0	     11258	intel_display.c	FUNCTION_320	CALL_35
0x400867d	        0x480f44c8	                          cmove rcx, rax	       145	i915_utils.h	FUNCTION_471
0x4008681	          0x4531ff	                          xor r15d, r15d	     11258	intel_display.c	FUNCTION_320	CALL_35
0x4008684	      0xe817c7ffff	                call sym.pipe_config_err	     11258	intel_display.c	FUNCTION_320	CALL_35
0x4008689	      0xe9ebf6ffff	                           jmp 0x4007d79	     11258	intel_display.c	FUNCTION_320	CALL_35
0x400868e	    0x418b8ddc0200	           mov ecx, dword [r13 + 0x2dc] 	     11323	intel_display.c	FUNCTION_320	CALL_80
0x4008695	    0x448b83dc0200	           mov r8d, dword [rbx + 0x2dc] 	     11323	intel_display.c	FUNCTION_320	CALL_80
0x400869c	          0x4439c1	                            cmp ecx, r8d	     11323	intel_display.c	FUNCTION_320	CALL_80
0x400869f	     0xf84a4fdffff	                            je 0x4008449	     11323	intel_display.c	FUNCTION_320	CALL_80
0x40086a5	    0x48c7c2000000	                              mov rdx, 0	     11323	intel_display.c	FUNCTION_320	CALL_80
0x40086ac	    0x48c7c6000000	                              mov rsi, 0	     11323	intel_display.c	FUNCTION_320	CALL_80
0x40086b3	            0x89ef	                            mov edi, ebp	     11323	intel_display.c	FUNCTION_320	CALL_80
0x40086b5	      0xe8e6c6ffff	                call sym.pipe_config_err	     11323	intel_display.c	FUNCTION_320	CALL_80
0x40086ba	          0x4531ff	                          xor r15d, r15d	     11323	intel_display.c	FUNCTION_320	CALL_80
0x40086bd	      0xe987fdffff	                           jmp 0x4008449	     11323	intel_display.c	FUNCTION_320	CALL_80
0x40086c2	            0x31c0	                            xor eax, eax	     11085	intel_display.c	FUNCTION_320
0x40086c4	    0xf682c8010000	              test byte [rdx + 0x1c8], 1	     11085	intel_display.c	FUNCTION_320
0x40086cb	           0xf94c0	                                 sete al	     11085	intel_display.c	FUNCTION_320
0x40086ce	        0x89442404	                mov dword [rsp + 4], eax	     11085	intel_display.c	FUNCTION_320
0x40086d2	      0xe9c2f0ffff	                           jmp 0x4007799	     11085	intel_display.c	FUNCTION_320
0x40086d7	    0x80bb39020000	               cmp byte [rbx + 0x239], 0	     11255	intel_display.c	FUNCTION_320	CALL_33
0x40086de	     0xf8505030000	                           jne 0x40089e9	     11255	intel_display.c	FUNCTION_320	CALL_33
0x40086e4	    0x410fb6959304	          movzx edx, byte [r13 + 0x493] 	     11256	intel_display.c	FUNCTION_320	CALL_34
0x40086ec	     0xfb6b3930400	          movzx esi, byte [rbx + 0x493] 	     11256	intel_display.c	FUNCTION_320	CALL_34
0x40086f3	          0x4038d6	                             cmp sil, dl	     11256	intel_display.c	FUNCTION_320	CALL_34
0x40086f6	     0xf85fcf5ffff	                           jne 0x4007cf8	     11256	intel_display.c	FUNCTION_320	CALL_34
0x40086fc	      0xe939f6ffff	                           jmp 0x4007d3a	     11256	intel_display.c	FUNCTION_320	CALL_34
0x4008701	    0x80bb49020000	               cmp byte [rbx + 0x249], 0	     11258	intel_display.c	FUNCTION_320	CALL_35
0x4008708	     0xf846bf6ffff	                            je 0x4007d79	     11258	intel_display.c	FUNCTION_320	CALL_35
0x400870e	    0x49c7c0000000	                               mov r8, 0	       145	i915_utils.h	FUNCTION_471
0x4008715	    0x48c7c1000000	                              mov rcx, 0	       145	i915_utils.h	FUNCTION_471
0x400871c	      0xe940f6ffff	                           jmp 0x4007d61	       145	i915_utils.h	FUNCTION_471
0x4008721	          0x4589e0	                           mov r8d, r12d	     11326	intel_display.c	FUNCTION_320	CALL_82
0x4008724	          0x4489f1	                           mov ecx, r14d	     11326	intel_display.c	FUNCTION_320	CALL_82
0x4008727	    0x48c7c2000000	                              mov rdx, 0	     11326	intel_display.c	FUNCTION_320	CALL_82
0x400872e	    0x48c7c6000000	                              mov rsi, 0	     11326	intel_display.c	FUNCTION_320	CALL_82
0x4008735	            0x89ef	                            mov edi, ebp	     11326	intel_display.c	FUNCTION_320	CALL_82
0x4008737	          0x4531ff	                          xor r15d, r15d	     11326	intel_display.c	FUNCTION_320	CALL_82
0x400873a	      0xe861c6ffff	                call sym.pipe_config_err	     11326	intel_display.c	FUNCTION_320	CALL_82
0x400873f	      0xe975fdffff	                           jmp 0x40084b9	     11326	intel_display.c	FUNCTION_320	CALL_82
0x4008744	          0x4589e0	                           mov r8d, r12d	     11325	intel_display.c	FUNCTION_320	CALL_81
0x4008747	          0x4489f1	                           mov ecx, r14d	     11325	intel_display.c	FUNCTION_320	CALL_81
0x400874a	    0x48c7c2000000	                              mov rdx, 0	     11325	intel_display.c	FUNCTION_320	CALL_81
0x4008751	    0x48c7c6000000	                              mov rsi, 0	     11325	intel_display.c	FUNCTION_320	CALL_81
0x4008758	            0x89ef	                            mov edi, ebp	     11325	intel_display.c	FUNCTION_320	CALL_81
0x400875a	          0x4531ff	                          xor r15d, r15d	     11325	intel_display.c	FUNCTION_320	CALL_81
0x400875d	      0xe83ec6ffff	                call sym.pipe_config_err	     11325	intel_display.c	FUNCTION_320	CALL_81
0x4008762	      0xe91afdffff	                           jmp 0x4008481	     11325	intel_display.c	FUNCTION_320	CALL_81
0x4008767	        0x4183e110	                           and r9d, 0x10	     11260	intel_display.c	FUNCTION_320	CALL_36
0x400876b	        0x4183e010	                           and r8d, 0x10	     11260	intel_display.c	FUNCTION_320	CALL_36
0x400876f	      0xb910000000	                           mov ecx, 0x10	     11260	intel_display.c	FUNCTION_320	CALL_36
0x4008774	    0x48c7c2000000	                              mov rdx, 0	     11260	intel_display.c	FUNCTION_320	CALL_36
0x400877b	    0x48c7c6000000	                              mov rsi, 0	     11260	intel_display.c	FUNCTION_320	CALL_36
0x4008782	            0x89ef	                            mov edi, ebp	     11260	intel_display.c	FUNCTION_320	CALL_36
0x4008784	      0xe817c6ffff	                call sym.pipe_config_err	     11260	intel_display.c	FUNCTION_320	CALL_36
0x4008789	          0x4531ff	                          xor r15d, r15d	     11260	intel_display.c	FUNCTION_320	CALL_36
0x400878c	      0xe904f6ffff	                           jmp 0x4007d95	     11260	intel_display.c	FUNCTION_320	CALL_36
0x4008791	    0x8b8344030000	           mov eax, dword [rbx + 0x344] 	     11218	intel_display.c	FUNCTION_320	CALL_4
0x4008797	    0x418b8d340300	           mov ecx, dword [r13 + 0x334] 	     11218	intel_display.c	FUNCTION_320	CALL_4
0x400879e	    0x48c7c2000000	                              mov rdx, 0	     11218	intel_display.c	FUNCTION_320	CALL_4
0x40087a5	    0x458b8d3c0300	           mov r9d, dword [r13 + 0x33c] 	     11218	intel_display.c	FUNCTION_320	CALL_4
0x40087ac	    0x458b85380300	           mov r8d, dword [r13 + 0x338] 	     11218	intel_display.c	FUNCTION_320	CALL_4
0x40087b3	    0x48c7c6000000	                              mov rsi, 0	     11218	intel_display.c	FUNCTION_320	CALL_4
0x40087ba	            0x89ef	                            mov edi, ebp	     11218	intel_display.c	FUNCTION_320	CALL_4
0x40087bc	          0x4531ff	                          xor r15d, r15d	     11218	intel_display.c	FUNCTION_320	CALL_4
0x40087bf	              0x50	                                push rax	     11218	intel_display.c	FUNCTION_320	CALL_4
0x40087c0	    0x8b8340030000	           mov eax, dword [rbx + 0x340] 	     11218	intel_display.c	FUNCTION_320	CALL_4
0x40087c6	              0x50	                                push rax	     11218	intel_display.c	FUNCTION_320	CALL_4
0x40087c7	    0x8b833c030000	           mov eax, dword [rbx + 0x33c] 	     11218	intel_display.c	FUNCTION_320	CALL_4
0x40087cd	              0x50	                                push rax	     11218	intel_display.c	FUNCTION_320	CALL_4
0x40087ce	    0x8b8338030000	           mov eax, dword [rbx + 0x338] 	     11218	intel_display.c	FUNCTION_320	CALL_4
0x40087d4	              0x50	                                push rax	     11218	intel_display.c	FUNCTION_320	CALL_4
0x40087d5	    0x8b8334030000	           mov eax, dword [rbx + 0x334] 	     11218	intel_display.c	FUNCTION_320	CALL_4
0x40087db	              0x50	                                push rax	     11218	intel_display.c	FUNCTION_320	CALL_4
0x40087dc	    0x418b85440300	           mov eax, dword [r13 + 0x344] 	     11218	intel_display.c	FUNCTION_320	CALL_4
0x40087e3	              0x50	                                push rax	     11218	intel_display.c	FUNCTION_320	CALL_4
0x40087e4	    0x418b85400300	           mov eax, dword [r13 + 0x340] 	     11218	intel_display.c	FUNCTION_320	CALL_4
0x40087eb	              0x50	                                push rax	     11218	intel_display.c	FUNCTION_320	CALL_4
0x40087ec	      0xe8afc5ffff	                call sym.pipe_config_err	     11218	intel_display.c	FUNCTION_320	CALL_4
0x40087f1	        0x4883c438	                           add rsp, 0x38	     11218	intel_display.c	FUNCTION_320	CALL_4
0x40087f5	      0xe966f0ffff	                           jmp 0x4007860	     11218	intel_display.c	FUNCTION_320	CALL_4
0x40087fa	        0x4183e101	                              and r9d, 1	     11264	intel_display.c	FUNCTION_320	IF_4	CALL_38
0x40087fe	        0x4183e001	                              and r8d, 1	     11264	intel_display.c	FUNCTION_320	IF_4	CALL_38
0x4008802	      0xb901000000	                              mov ecx, 1	     11264	intel_display.c	FUNCTION_320	IF_4	CALL_38
0x4008807	    0x48c7c2000000	                              mov rdx, 0	     11264	intel_display.c	FUNCTION_320	IF_4	CALL_38
0x400880e	    0x48c7c6000000	                              mov rsi, 0	     11264	intel_display.c	FUNCTION_320	IF_4	CALL_38
0x4008815	            0x89ef	                            mov edi, ebp	     11264	intel_display.c	FUNCTION_320	IF_4	CALL_38
0x4008817	      0xe884c5ffff	                call sym.pipe_config_err	     11264	intel_display.c	FUNCTION_320	IF_4	CALL_38
0x400881c	    0x448b8b9c0000	            mov r9d, dword [rbx + 0x9c] 	     11264	intel_display.c	FUNCTION_320	IF_4	CALL_38
0x4008823	    0x458b859c0000	            mov r8d, dword [r13 + 0x9c] 	     11264	intel_display.c	FUNCTION_320	IF_4	CALL_38
0x400882a	          0x4531ff	                          xor r15d, r15d	     11264	intel_display.c	FUNCTION_320	IF_4	CALL_38
0x400882d	          0x4489c8	                            mov eax, r9d	     11264	intel_display.c	FUNCTION_320	IF_4	CALL_38
0x4008830	          0x4431c0	                            xor eax, r8d	     11264	intel_display.c	FUNCTION_320	IF_4	CALL_38
0x4008833	            0xa802	                              test al, 2	     11266	intel_display.c	FUNCTION_320	IF_4	CALL_39
0x4008835	     0xf8490f5ffff	                            je 0x4007dcb	     11266	intel_display.c	FUNCTION_320	IF_4	CALL_39
0x400883b	        0x4183e102	                              and r9d, 2	     11266	intel_display.c	FUNCTION_320	IF_4	CALL_39
0x400883f	        0x4183e002	                              and r8d, 2	     11266	intel_display.c	FUNCTION_320	IF_4	CALL_39
0x4008843	      0xb902000000	                              mov ecx, 2	     11266	intel_display.c	FUNCTION_320	IF_4	CALL_39
0x4008848	    0x48c7c2000000	                              mov rdx, 0	     11266	intel_display.c	FUNCTION_320	IF_4	CALL_39
0x400884f	    0x48c7c6000000	                              mov rsi, 0	     11266	intel_display.c	FUNCTION_320	IF_4	CALL_39
0x4008856	            0x89ef	                            mov edi, ebp	     11266	intel_display.c	FUNCTION_320	IF_4	CALL_39
0x4008858	      0xe843c5ffff	                call sym.pipe_config_err	     11266	intel_display.c	FUNCTION_320	IF_4	CALL_39
0x400885d	    0x448b8b9c0000	            mov r9d, dword [rbx + 0x9c] 	     11266	intel_display.c	FUNCTION_320	IF_4	CALL_39
0x4008864	    0x458b859c0000	            mov r8d, dword [r13 + 0x9c] 	     11266	intel_display.c	FUNCTION_320	IF_4	CALL_39
0x400886b	          0x4531ff	                          xor r15d, r15d	     11266	intel_display.c	FUNCTION_320	IF_4	CALL_39
0x400886e	          0x4489c8	                            mov eax, r9d	     11266	intel_display.c	FUNCTION_320	IF_4	CALL_39
0x4008871	          0x4431c0	                            xor eax, r8d	     11266	intel_display.c	FUNCTION_320	IF_4	CALL_39
0x4008874	            0xa804	                              test al, 4	     11268	intel_display.c	FUNCTION_320	IF_4	CALL_40
0x4008876	     0xf8457f5ffff	                            je 0x4007dd3	     11268	intel_display.c	FUNCTION_320	IF_4	CALL_40
0x400887c	        0x4183e104	                              and r9d, 4	     11268	intel_display.c	FUNCTION_320	IF_4	CALL_40
0x4008880	        0x4183e004	                              and r8d, 4	     11268	intel_display.c	FUNCTION_320	IF_4	CALL_40
0x4008884	      0xb904000000	                              mov ecx, 4	     11268	intel_display.c	FUNCTION_320	IF_4	CALL_40
0x4008889	    0x48c7c2000000	                              mov rdx, 0	     11268	intel_display.c	FUNCTION_320	IF_4	CALL_40
0x4008890	    0x48c7c6000000	                              mov rsi, 0	     11268	intel_display.c	FUNCTION_320	IF_4	CALL_40
0x4008897	            0x89ef	                            mov edi, ebp	     11268	intel_display.c	FUNCTION_320	IF_4	CALL_40
0x4008899	      0xe802c5ffff	                call sym.pipe_config_err	     11268	intel_display.c	FUNCTION_320	IF_4	CALL_40
0x400889e	    0x448b8b9c0000	            mov r9d, dword [rbx + 0x9c] 	     11268	intel_display.c	FUNCTION_320	IF_4	CALL_40
0x40088a5	    0x458b859c0000	            mov r8d, dword [r13 + 0x9c] 	     11268	intel_display.c	FUNCTION_320	IF_4	CALL_40
0x40088ac	          0x4531ff	                          xor r15d, r15d	     11268	intel_display.c	FUNCTION_320	IF_4	CALL_40
0x40088af	          0x4489c8	                            mov eax, r9d	     11268	intel_display.c	FUNCTION_320	IF_4	CALL_40
0x40088b2	          0x4431c0	                            xor eax, r8d	     11268	intel_display.c	FUNCTION_320	IF_4	CALL_40
0x40088b5	            0xa808	                              test al, 8	     11270	intel_display.c	FUNCTION_320	IF_4	CALL_41
0x40088b7	     0xf841ef5ffff	                            je 0x4007ddb	     11270	intel_display.c	FUNCTION_320	IF_4	CALL_41
0x40088bd	      0xe986000000	                           jmp 0x4008948	     11270	intel_display.c	FUNCTION_320	IF_4	CALL_41
0x40088c2	    0x488db3f40200	                  lea rsi, [rbx + 0x2f4]	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x40088c9	    0x498dbdf40200	                  lea rdi, [r13 + 0x2f4]	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x40088d0	            0x89ea	                            mov edx, ebp	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x40088d2	      0xe819eeffff	         call sym.intel_compare_link_m_n	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x40088d7	            0x84c0	                             test al, al	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x40088d9	     0xf8515f0ffff	                           jne 0x40078f4	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x40088df	    0x8b8304030000	           mov eax, dword [rbx + 0x304] 	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x40088e5	    0x418b8df40200	           mov ecx, dword [r13 + 0x2f4] 	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x40088ec	    0x48c7c2000000	                              mov rdx, 0	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x40088f3	    0x458b8dfc0200	           mov r9d, dword [r13 + 0x2fc] 	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x40088fa	    0x458b85f80200	           mov r8d, dword [r13 + 0x2f8] 	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x4008901	    0x48c7c6000000	                              mov rsi, 0	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x4008908	            0x89ef	                            mov edi, ebp	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x400890a	          0x4531ff	                          xor r15d, r15d	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x400890d	              0x50	                                push rax	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x400890e	    0x8b8300030000	           mov eax, dword [rbx + 0x300] 	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x4008914	              0x50	                                push rax	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x4008915	    0x8b83fc020000	           mov eax, dword [rbx + 0x2fc] 	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x400891b	              0x50	                                push rax	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x400891c	    0x8b83f8020000	           mov eax, dword [rbx + 0x2f8] 	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x4008922	              0x50	                                push rax	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x4008923	    0x8b83f4020000	           mov eax, dword [rbx + 0x2f4] 	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x4008929	              0x50	                                push rax	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x400892a	    0x418b85040300	           mov eax, dword [r13 + 0x304] 	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x4008931	              0x50	                                push rax	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x4008932	    0x418b85000300	           mov eax, dword [r13 + 0x300] 	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x4008939	              0x50	                                push rax	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x400893a	      0xe861c4ffff	                call sym.pipe_config_err	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x400893f	        0x4883c438	                           add rsp, 0x38	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x4008943	      0xe9acefffff	                           jmp 0x40078f4	     11227	intel_display.c	FUNCTION_320	IF_1	CALL_9
0x4008948	        0x4183e108	                              and r9d, 8	     11270	intel_display.c	FUNCTION_320	IF_4	CALL_41
0x400894c	        0x4183e008	                              and r8d, 8	     11270	intel_display.c	FUNCTION_320	IF_4	CALL_41
0x4008950	      0xb908000000	                              mov ecx, 8	     11270	intel_display.c	FUNCTION_320	IF_4	CALL_41
0x4008955	    0x48c7c2000000	                              mov rdx, 0	     11270	intel_display.c	FUNCTION_320	IF_4	CALL_41
0x400895c	    0x48c7c6000000	                              mov rsi, 0	     11270	intel_display.c	FUNCTION_320	IF_4	CALL_41
0x4008963	            0x89ef	                            mov edi, ebp	     11270	intel_display.c	FUNCTION_320	IF_4	CALL_41
0x4008965	      0xe836c4ffff	                call sym.pipe_config_err	     11270	intel_display.c	FUNCTION_320	IF_4	CALL_41
0x400896a	          0x4531ff	                          xor r15d, r15d	     11270	intel_display.c	FUNCTION_320	IF_4	CALL_41
0x400896d	      0xe969f4ffff	                           jmp 0x4007ddb	     11270	intel_display.c	FUNCTION_320	IF_4	CALL_41
0x4008972	    0x8b83f0020000	           mov eax, dword [rbx + 0x2f0] 	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x4008978	    0x418b8de00200	           mov ecx, dword [r13 + 0x2e0] 	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x400897f	    0x48c7c2000000	                              mov rdx, 0	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x4008986	    0x458b8de80200	           mov r9d, dword [r13 + 0x2e8] 	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x400898d	    0x458b85e40200	           mov r8d, dword [r13 + 0x2e4] 	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x4008994	    0x48c7c6000000	                              mov rsi, 0	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x400899b	            0x89ef	                            mov edi, ebp	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x400899d	          0x4531ff	                          xor r15d, r15d	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x40089a0	              0x50	                                push rax	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x40089a1	    0x8b83ec020000	           mov eax, dword [rbx + 0x2ec] 	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x40089a7	              0x50	                                push rax	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x40089a8	    0x8b83e8020000	           mov eax, dword [rbx + 0x2e8] 	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x40089ae	              0x50	                                push rax	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x40089af	    0x8b83e4020000	           mov eax, dword [rbx + 0x2e4] 	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x40089b5	              0x50	                                push rax	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x40089b6	    0x8b83e0020000	           mov eax, dword [rbx + 0x2e0] 	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x40089bc	              0x50	                                push rax	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x40089bd	    0x418b85f00200	           mov eax, dword [r13 + 0x2f0] 	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x40089c4	              0x50	                                push rax	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x40089c5	    0x418b85ec0200	           mov eax, dword [r13 + 0x2ec] 	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x40089cc	              0x50	                                push rax	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x40089cd	      0xe8cec3ffff	                call sym.pipe_config_err	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x40089d2	        0x4883c438	                           add rsp, 0x38	     11224	intel_display.c	FUNCTION_320	IF_1	CALL_8
0x40089d6	    0x4180bd080300	               cmp byte [r13 + 0x308], 0	     11226	intel_display.c	FUNCTION_320	IF_1	IF_2
0x40089de	     0xf8410efffff	                            je 0x40078f4	     11226	intel_display.c	FUNCTION_320	IF_1	IF_2
0x40089e4	      0xe9d9feffff	                           jmp 0x40088c2	     11226	intel_display.c	FUNCTION_320	IF_1	IF_2
0x40089e9	    0x49c7c0000000	                               mov r8, 0	       145	i915_utils.h	FUNCTION_471
0x40089f0	    0x48c7c1000000	                              mov rcx, 0	       145	i915_utils.h	FUNCTION_471
0x40089f7	      0xe9cff2ffff	                           jmp 0x4007ccb	       145	i915_utils.h	FUNCTION_471
0x40089fc	          0x4531ff	                          xor r15d, r15d	     11255	intel_display.c	FUNCTION_320	CALL_33
0x40089ff	    0x4180bd490200	               cmp byte [r13 + 0x249], 0	     11258	intel_display.c	FUNCTION_320	CALL_35
0x4008a07	     0xf853bf3ffff	                           jne 0x4007d48	     11258	intel_display.c	FUNCTION_320	CALL_35
0x4008a0d	      0xe9effcffff	                           jmp 0x4008701	     11258	intel_display.c	FUNCTION_320	CALL_35
0x4008a12	      0x448b442404	                mov r8d, dword [rsp + 4]	     11291	intel_display.c	FUNCTION_320	IF_6	CALL_52
0x4008a17	          0x4489f1	                           mov ecx, r14d	     11291	intel_display.c	FUNCTION_320	IF_6	CALL_52
0x4008a1a	    0x48c7c2000000	                              mov rdx, 0	     11291	intel_display.c	FUNCTION_320	IF_6	CALL_52
0x4008a21	    0x48c7c6000000	                              mov rsi, 0	     11291	intel_display.c	FUNCTION_320	IF_6	CALL_52
0x4008a28	            0x89ef	                            mov edi, ebp	     11291	intel_display.c	FUNCTION_320	IF_6	CALL_52
0x4008a2a	          0x4531ff	                          xor r15d, r15d	     11291	intel_display.c	FUNCTION_320	IF_6	CALL_52
0x4008a2d	      0xe86ec3ffff	                call sym.pipe_config_err	     11291	intel_display.c	FUNCTION_320	IF_6	CALL_52
0x4008a32	      0xe99ff5ffff	                           jmp 0x4007fd6	     11291	intel_display.c	FUNCTION_320	IF_6	CALL_52
pnv_crtc_compute_clock	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,3:ELSE,1:functions,0:CALL,8	145
0x400b740	            0x4157	                                push r15	      7381	intel_display.c	FUNCTION_226
0x400b742	            0x4156	                                push r14	      7381	intel_display.c	FUNCTION_226
0x400b744	            0x89f0	                            mov eax, esi	      7387	intel_display.c	FUNCTION_226	CALL_2
0x400b746	            0x4155	                                push r13	      7381	intel_display.c	FUNCTION_226
0x400b748	            0x4154	                                push r12	      7381	intel_display.c	FUNCTION_226
0x400b74a	    0x41bc00770100	                       mov r12d, 0x17700	      7385	intel_display.c	FUNCTION_226
0x400b750	              0x55	                                push rbp	      7381	intel_display.c	FUNCTION_226
0x400b751	              0x53	                                push rbx	      7381	intel_display.c	FUNCTION_226
0x400b752	          0x4889f5	                            mov rbp, rsi	      7381	intel_display.c	FUNCTION_226
0x400b755	    0x48c7c3000000	                              mov rbx, 0	      7398	intel_display.c	FUNCTION_226	ELSE_1
0x400b75c	        0x4883ec38	                           sub rsp, 0x38	      7381	intel_display.c	FUNCTION_226
0x400b760	          0x488b17	                    mov rdx, qword [rdi]	      7382	intel_display.c	FUNCTION_226
0x400b763	        0x48893c24	                    mov qword [rsp], rdi	      7381	intel_display.c	FUNCTION_226
0x400b767	    0x488dbe880200	                  lea rdi, [rsi + 0x288]	      7387	intel_display.c	FUNCTION_226	CALL_2
0x400b76e	    0x65488b0c2528	                mov rcx, qword gs:[0x28]	      7381	intel_display.c	FUNCTION_226
0x400b777	      0x48894c2430	             mov qword [rsp + 0x30], rcx	      7381	intel_display.c	FUNCTION_226
0x400b77c	            0x31c9	                            xor ecx, ecx	      7381	intel_display.c	FUNCTION_226
0x400b77e	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	      7387	intel_display.c	FUNCTION_226	CALL_2
0x400b782	    0x48c786800200	              mov qword [rsi + 0x280], 0	      7387	intel_display.c	FUNCTION_226	CALL_2
0x400b78d	    0x48c786cc0200	              mov qword [rsi + 0x2cc], 0	      7387	intel_display.c	FUNCTION_226	CALL_2
0x400b798	            0x29f8	                            sub eax, edi	      7387	intel_display.c	FUNCTION_226	CALL_2
0x400b79a	    0x8d88d4020000	                  lea ecx, [rax + 0x2d4]	      7387	intel_display.c	FUNCTION_226	CALL_2
0x400b7a0	            0x31c0	                            xor eax, eax	      7387	intel_display.c	FUNCTION_226	CALL_2
0x400b7a2	          0xc1e903	                              shr ecx, 3	      7387	intel_display.c	FUNCTION_226	CALL_2
0x400b7a5	          0xf348ab	              rep stosq qword [rdi], rax	      7387	intel_display.c	FUNCTION_226	CALL_2
0x400b7a8	    0xf68644020000	          test byte [rsi + 0x244], 0x10 	      7390	intel_display.c	FUNCTION_226	IF_1	CALL_3
0x400b7af	            0x741b	                            je 0x400b7cc	      7390	intel_display.c	FUNCTION_226	IF_1	CALL_3
0x400b7b1	    0x8b0500000000	            mov eax, dword [0x0400b7b7] 	      6551	intel_display.c	FUNCTION_202	IF_1
0x400b7b7	            0x85c0	                           test eax, eax	      6551	intel_display.c	FUNCTION_202	IF_1
0x400b7b9	     0xf889f010000	                            js 0x400b95e	      6551	intel_display.c	FUNCTION_202	IF_1
0x400b7bf	     0xf85ba010000	                           jne 0x400b97f	      7391	intel_display.c	FUNCTION_226	IF_1	IF_2	CALL_4
0x400b7c5	    0x48c7c3000000	                              mov rbx, 0	      7396	intel_display.c	FUNCTION_226	IF_1
0x400b7cc	    0x80bd4c020000	               cmp byte [rbp + 0x24c], 0	      7401	intel_display.c	FUNCTION_226	IF_3
0x400b7d3	     0xf8555010000	                           jne 0x400b92e	      7401	intel_display.c	FUNCTION_226	IF_3
0x400b7d9	    0x448bbd0c0300	          mov r15d, dword [rbp + 0x30c] 	      7402	intel_display.c	FUNCTION_226	IF_3	CALL_6
0x400b7e0	        0x488b4500	                    mov rax, qword [rbp]	       702	intel_display.c	FUNCTION_15
0x400b7e4	          0x4889ee	                            mov rsi, rbp	       708	intel_display.c	FUNCTION_15	CALL_2
0x400b7e7	          0x4889df	                            mov rdi, rbx	       708	intel_display.c	FUNCTION_15	CALL_2
0x400b7ea	          0x4c8b28	                    mov r13, qword [rax]	       702	intel_display.c	FUNCTION_15
0x400b7ed	          0x4489fa	                           mov edx, r15d	       708	intel_display.c	FUNCTION_15	CALL_2
0x400b7f0	    0x48c785500200	              mov qword [rbp + 0x250], 0	       706	intel_display.c	FUNCTION_15	CALL_1
0x400b7fb	    0x48c785580200	              mov qword [rbp + 0x258], 0	       706	intel_display.c	FUNCTION_15	CALL_1
0x400b806	    0x48c785600200	              mov qword [rbp + 0x260], 0	       706	intel_display.c	FUNCTION_15	CALL_1
0x400b811	    0x48c785680200	              mov qword [rbp + 0x268], 0	       706	intel_display.c	FUNCTION_15	CALL_1
0x400b81c	    0xc78570020000	              mov dword [rbp + 0x270], 0	       706	intel_display.c	FUNCTION_15	CALL_1
0x400b826	      0xe8e58effff	             call sym.i9xx_select_p2_div	       708	intel_display.c	FUNCTION_15	CALL_2
0x400b82b	        0x8944241c	             mov dword [rsp + 0x1c], eax	       708	intel_display.c	FUNCTION_15	CALL_2
0x400b82f	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       710	intel_display.c	FUNCTION_15	FOR_1
0x400b832	          0x3b4324	            cmp eax, dword [rbx + 0x24] 	       710	intel_display.c	FUNCTION_15	FOR_1
0x400b835	        0x89442410	             mov dword [rsp + 0x10], eax	       710	intel_display.c	FUNCTION_15	FOR_1
0x400b839	     0xf8f60010000	                            jg 0x400b99f	       710	intel_display.c	FUNCTION_15	FOR_1
0x400b83f	          0x4589fe	                          mov r14d, r15d	       710	intel_display.c	FUNCTION_15	FOR_1
0x400b842	          0x8b4328	            mov eax, dword [rbx + 0x28] 	       712	intel_display.c	FUNCTION_15	FOR_1	FOR_2
0x400b845	          0x3b432c	            cmp eax, dword [rbx + 0x2c] 	       712	intel_display.c	FUNCTION_15	FOR_1	FOR_2
0x400b848	        0x89442414	             mov dword [rsp + 0x14], eax	       712	intel_display.c	FUNCTION_15	FOR_1	FOR_2
0x400b84c	     0xf8fc3000000	                            jg 0x400b915	       712	intel_display.c	FUNCTION_15	FOR_1	FOR_2
0x400b852	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       714	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3
0x400b855	          0x3b4314	            cmp eax, dword [rbx + 0x14] 	       714	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3
0x400b858	        0x8944240c	              mov dword [rsp + 0xc], eax	       714	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3
0x400b85c	     0xf8f9f000000	                            jg 0x400b901	       714	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3
0x400b862	          0x8b4338	            mov eax, dword [rbx + 0x38] 	       716	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4
0x400b865	          0x3b433c	            cmp eax, dword [rbx + 0x3c] 	       716	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4
0x400b868	        0x89442418	             mov dword [rsp + 0x18], eax	       716	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4
0x400b86c	            0x7f7f	                            jg 0x400b8ed	       716	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4
0x400b86e	      0x488d74240c	                    lea rsi, [rsp + 0xc]	       720	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	CALL_3
0x400b873	          0x4489e7	                           mov edi, r12d	       720	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	CALL_3
0x400b876	      0xe8355effff	           call sym.pnv_calc_dpll_params	       720	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	CALL_3
0x400b87b	      0x488d54240c	                    lea rdx, [rsp + 0xc]	       721	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	IF_1	CALL_5
0x400b880	          0x4889de	                            mov rsi, rbx	       721	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	IF_1	CALL_5
0x400b883	          0x4c89ef	                            mov rdi, r13	       721	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	IF_1	CALL_5
0x400b886	      0xe8d597ffff	             call sym.intel_PLL_is_valid	       721	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	IF_1	CALL_5
0x400b88b	            0x84c0	                             test al, al	       721	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	IF_1	CALL_5
0x400b88d	            0x744e	                            je 0x400b8dd	       721	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	IF_1	CALL_5
0x400b88f	        0x8b442420	            mov eax, dword [rsp + 0x20] 	       729	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	CALL_6
0x400b893	          0x4429f8	                           sub eax, r15d	       729	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	CALL_6
0x400b896	              0x99	                                     cdq	       729	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	CALL_6
0x400b897	            0x31d0	                            xor eax, edx	       729	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	CALL_6
0x400b899	            0x29d0	                            sub eax, edx	       729	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	CALL_6
0x400b89b	          0x4439f0	                           cmp eax, r14d	       730	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	IF_3
0x400b89e	            0x7d3d	                           jge 0x400b8dd	       730	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	IF_3
0x400b8a0	      0x488b54240c	              mov rdx, qword [rsp + 0xc]	       731	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	IF_3
0x400b8a5	          0x4189c6	                           mov r14d, eax	       731	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	IF_3
0x400b8a8	    0x488995500200	           mov qword [rbp + 0x250], rdx 	       731	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	IF_3
0x400b8af	      0x488b542414	            mov rdx, qword [rsp + 0x14] 	       731	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	IF_3
0x400b8b4	    0x488995580200	           mov qword [rbp + 0x258], rdx 	       731	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	IF_3
0x400b8bb	      0x488b54241c	            mov rdx, qword [rsp + 0x1c] 	       731	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	IF_3
0x400b8c0	    0x488995600200	           mov qword [rbp + 0x260], rdx 	       731	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	IF_3
0x400b8c7	      0x488b542424	            mov rdx, qword [rsp + 0x24] 	       731	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	IF_3
0x400b8cc	    0x488995680200	           mov qword [rbp + 0x268], rdx 	       731	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	IF_3
0x400b8d3	        0x8b54242c	            mov edx, dword [rsp + 0x2c] 	       731	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	IF_3
0x400b8d7	    0x899570020000	           mov dword [rbp + 0x270], edx 	       731	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4	IF_3
0x400b8dd	        0x8b442418	            mov eax, dword [rsp + 0x18] 	       717	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4
0x400b8e1	          0x83c001	                              add eax, 1	       717	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4
0x400b8e4	          0x3b433c	            cmp eax, dword [rbx + 0x3c] 	       716	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4
0x400b8e7	        0x89442418	             mov dword [rsp + 0x18], eax	       717	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4
0x400b8eb	            0x7e81	                           jle 0x400b86e	       716	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3	FOR_4
0x400b8ed	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       715	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3
0x400b8f1	          0x83c001	                              add eax, 1	       715	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3
0x400b8f4	          0x3b4314	            cmp eax, dword [rbx + 0x14] 	       714	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3
0x400b8f7	        0x8944240c	              mov dword [rsp + 0xc], eax	       715	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3
0x400b8fb	     0xf8e61ffffff	                           jle 0x400b862	       714	intel_display.c	FUNCTION_15	FOR_1	FOR_2	FOR_3
0x400b901	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       713	intel_display.c	FUNCTION_15	FOR_1	FOR_2
0x400b905	          0x83c001	                              add eax, 1	       713	intel_display.c	FUNCTION_15	FOR_1	FOR_2
0x400b908	          0x3b432c	            cmp eax, dword [rbx + 0x2c] 	       712	intel_display.c	FUNCTION_15	FOR_1	FOR_2
0x400b90b	        0x89442414	             mov dword [rsp + 0x14], eax	       713	intel_display.c	FUNCTION_15	FOR_1	FOR_2
0x400b90f	     0xf8e3dffffff	                           jle 0x400b852	       712	intel_display.c	FUNCTION_15	FOR_1	FOR_2
0x400b915	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       711	intel_display.c	FUNCTION_15	FOR_1
0x400b919	          0x83c001	                              add eax, 1	       711	intel_display.c	FUNCTION_15	FOR_1
0x400b91c	          0x3b4324	            cmp eax, dword [rbx + 0x24] 	       710	intel_display.c	FUNCTION_15	FOR_1
0x400b91f	        0x89442410	             mov dword [rsp + 0x10], eax	       711	intel_display.c	FUNCTION_15	FOR_1
0x400b923	     0xf8e19ffffff	                           jle 0x400b842	       710	intel_display.c	FUNCTION_15	FOR_1
0x400b929	          0x4539f7	                          cmp r15d, r14d	      7401	intel_display.c	FUNCTION_226	IF_3
0x400b92c	            0x7471	                            je 0x400b99f	      7401	intel_display.c	FUNCTION_226	IF_3
0x400b92e	        0x488b0424	                    mov rax, qword [rsp]	      7408	intel_display.c	FUNCTION_226	CALL_8
0x400b932	          0x4889ee	                            mov rsi, rbp	      7408	intel_display.c	FUNCTION_226	CALL_8
0x400b935	          0x488b38	                    mov rdi, qword [rax]	      7408	intel_display.c	FUNCTION_226	CALL_8
0x400b938	      0xe883fbffff	call sym.i9xx_compute_dpll.isra.64.constprop.155	      7408	intel_display.c	FUNCTION_226	CALL_8
0x400b93d	            0x31c0	                            xor eax, eax	      7410	intel_display.c	FUNCTION_226
0x400b93f	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      7411	intel_display.c	FUNCTION_226
0x400b944	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      7411	intel_display.c	FUNCTION_226
0x400b94d	            0x7563	                           jne 0x400b9b2	      7411	intel_display.c	FUNCTION_226
0x400b94f	        0x4883c438	                           add rsp, 0x38	      7411	intel_display.c	FUNCTION_226
0x400b953	              0x5b	                                 pop rbx	      7411	intel_display.c	FUNCTION_226
0x400b954	              0x5d	                                 pop rbp	      7411	intel_display.c	FUNCTION_226
0x400b955	            0x415c	                                 pop r12	      7411	intel_display.c	FUNCTION_226
0x400b957	            0x415d	                                 pop r13	      7411	intel_display.c	FUNCTION_226
0x400b959	            0x415e	                                 pop r14	      7411	intel_display.c	FUNCTION_226
0x400b95b	            0x415f	                                 pop r15	      7411	intel_display.c	FUNCTION_226
0x400b95d	              0xc3	                                     ret	      7411	intel_display.c	FUNCTION_226
0x400b95e	    0xf682f84c0000	         test byte [rdx + 0x4cf8], 0x10 	      6554	intel_display.c	FUNCTION_202
0x400b965	    0x48c7c3000000	                              mov rbx, 0	      7396	intel_display.c	FUNCTION_226	IF_1
0x400b96c	     0xf845afeffff	                            je 0x400b7cc	      6554	intel_display.c	FUNCTION_202
0x400b972	    0xf68200560000	            test byte [rdx + 0x5600], 2 	      6554	intel_display.c	FUNCTION_202
0x400b979	     0xf854dfeffff	                           jne 0x400b7cc	      6554	intel_display.c	FUNCTION_202
0x400b97f	    0x448ba2fc4c00	         mov r12d, dword [rdx + 0x4cfc] 	      7392	intel_display.c	FUNCTION_226	IF_1	IF_2
0x400b986	    0x48c7c6000000	                              mov rsi, 0	      7393	intel_display.c	FUNCTION_226	IF_1	IF_2	CALL_5
0x400b98d	      0xbf04000000	                              mov edi, 4	      7393	intel_display.c	FUNCTION_226	IF_1	IF_2	CALL_5
0x400b992	          0x4489e2	                           mov edx, r12d	      7393	intel_display.c	FUNCTION_226	IF_1	IF_2	CALL_5
0x400b995	      0xe800000000	                          call 0x400b99a	      7393	intel_display.c	FUNCTION_226	IF_1	IF_2	CALL_5
0x400b99a	      0xe926feffff	                           jmp 0x400b7c5	      7393	intel_display.c	FUNCTION_226	IF_1	IF_2	CALL_5
0x400b99f	    0x48c7c7000000	                              mov rdi, 0	      7404	intel_display.c	FUNCTION_226	IF_3	CALL_7
0x400b9a6	      0xe800000000	                          call 0x400b9ab	      7404	intel_display.c	FUNCTION_226	IF_3	CALL_7
0x400b9ab	      0xb8eaffffff	                     mov eax, 0xffffffea	      7405	intel_display.c	FUNCTION_226	IF_3
0x400b9b0	            0xeb8d	                           jmp 0x400b93f	      7405	intel_display.c	FUNCTION_226	IF_3
0x400b9b2	      0xe800000000	                          call 0x400b9b7	      7411	intel_display.c	FUNCTION_226
assert_pch_hdmi_disabled	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,7	62
0x40024a0	            0x4154	                                push r12	      1351	intel_display.c	FUNCTION_45
0x40024a2	              0x55	                                push rbp	      1351	intel_display.c	FUNCTION_45
0x40024a3	            0x89d5	                            mov ebp, edx	      1351	intel_display.c	FUNCTION_45
0x40024a5	              0x53	                                push rbx	      1351	intel_display.c	FUNCTION_45
0x40024a6	          0x4189f4	                           mov r12d, esi	      1351	intel_display.c	FUNCTION_45
0x40024a9	          0x4889fb	                            mov rbx, rdi	      1351	intel_display.c	FUNCTION_45
0x40024ac	    0x488b87f80700	           mov rax, qword [rdi + 0x7f8] 	      1352	intel_display.c	FUNCTION_45	CALL_1
0x40024b3	      0xba01000000	                              mov edx, 1	      1352	intel_display.c	FUNCTION_45	CALL_1
0x40024b8	            0x89ee	                            mov esi, ebp	      1352	intel_display.c	FUNCTION_45	CALL_1
0x40024ba	      0xe800000000	                          call 0x40024bf	      1352	intel_display.c	FUNCTION_45	CALL_1
0x40024bf	            0x85c0	                           test eax, eax	      1288	intel_display.c	FUNCTION_41	IF_1
0x40024c1	            0x7835	                            js 0x40024f8	      1288	intel_display.c	FUNCTION_41	IF_1
0x40024c3	    0x83bbf8550000	            cmp dword [rbx + 0x55f8], 1 	      1357	intel_display.c	FUNCTION_45	CALL_7
0x40024ca	            0x7527	                           jne 0x40024f3	      1357	intel_display.c	FUNCTION_45	CALL_7
0x40024cc	      0xa900000040	                    test eax, 0x40000000	      1357	intel_display.c	FUNCTION_45	CALL_7
0x40024d1	            0x7420	                            je 0x40024f3	      1357	intel_display.c	FUNCTION_45	CALL_7
0x40024d3	    0x803d00000000	                cmp byte [0x040024da], 0	      1357	intel_display.c	FUNCTION_45	CALL_7
0x40024da	    0x48c7c7000000	                              mov rdi, 0	      1357	intel_display.c	FUNCTION_45	CALL_7
0x40024e1	            0x7578	                           jne 0x400255b	      1357	intel_display.c	FUNCTION_45	CALL_7
0x40024e3	              0x5b	                                 pop rbx	      1360	intel_display.c	FUNCTION_45
0x40024e4	              0x5d	                                 pop rbp	      1360	intel_display.c	FUNCTION_45
0x40024e5	            0x415c	                                 pop r12	      1360	intel_display.c	FUNCTION_45
0x40024e7	      0xe900000000	                           jmp 0x40024ec	      1357	intel_display.c	FUNCTION_45	CALL_7
0x40024ec	      0xe800000000	                          call 0x40024f1	      1353	intel_display.c	FUNCTION_45	CALL_3
0x40024f1	             0xf0b	                                     ud2	      1353	intel_display.c	FUNCTION_45	CALL_3
0x40024f3	              0x5b	                                 pop rbx	      1360	intel_display.c	FUNCTION_45
0x40024f4	              0x5d	                                 pop rbp	      1360	intel_display.c	FUNCTION_45
0x40024f5	            0x415c	                                 pop r12	      1360	intel_display.c	FUNCTION_45
0x40024f7	              0xc3	                                     ret	      1360	intel_display.c	FUNCTION_45
0x40024f8	    0x83bbf8550000	            cmp dword [rbx + 0x55f8], 2 	      1291	intel_display.c	FUNCTION_41	IF_2	CALL_1
0x40024ff	            0x7449	                            je 0x400254a	      1291	intel_display.c	FUNCTION_41	IF_2	CALL_1
0x4002501	    0xf68366060000	          test byte [rbx + 0x666], 0x20 	      1294	intel_display.c	FUNCTION_41	ELSE_1	IF_4	CALL_3
0x4002508	            0x742f	                            je 0x4002539	      1294	intel_display.c	FUNCTION_41	ELSE_1	IF_4	CALL_3
0x400250a	          0x4489e2	                           mov edx, r12d	      1295	intel_display.c	FUNCTION_41	ELSE_1	IF_4	IF_5	CALL_4
0x400250d	      0x2500000003	                      and eax, 0x3000000	      1295	intel_display.c	FUNCTION_41	ELSE_1	IF_4	IF_5	CALL_4
0x4002512	          0xc1e218	                           shl edx, 0x18	      1295	intel_display.c	FUNCTION_41	ELSE_1	IF_4	IF_5	CALL_4
0x4002515	            0x39d0	                            cmp eax, edx	      1295	intel_display.c	FUNCTION_41	ELSE_1	IF_4	IF_5	CALL_4
0x4002517	            0x75da	                           jne 0x40024f3	      1295	intel_display.c	FUNCTION_41	ELSE_1	IF_4	IF_5	CALL_4
0x4002519	    0x803d00000000	                cmp byte [0x04002520], 0	      1353	intel_display.c	FUNCTION_45	CALL_3
0x4002520	      0x418d542441	                   lea edx, [r12 + 0x41]	      1353	intel_display.c	FUNCTION_45	CALL_3
0x4002525	            0x89ee	                            mov esi, ebp	      1353	intel_display.c	FUNCTION_45	CALL_3
0x4002527	    0x48c7c7000000	                              mov rdi, 0	      1353	intel_display.c	FUNCTION_45	CALL_3
0x400252e	            0x75bc	                           jne 0x40024ec	      1353	intel_display.c	FUNCTION_45	CALL_3
0x4002530	              0x5b	                                 pop rbx	      1360	intel_display.c	FUNCTION_45
0x4002531	              0x5d	                                 pop rbp	      1360	intel_display.c	FUNCTION_45
0x4002532	            0x415c	                                 pop r12	      1360	intel_display.c	FUNCTION_45
0x4002534	      0xe900000000	                           jmp 0x4002539	      1353	intel_display.c	FUNCTION_45	CALL_3
0x4002539	          0x4489e2	                           mov edx, r12d	      1298	intel_display.c	FUNCTION_41	ELSE_2	IF_6	CALL_5
0x400253c	      0x2500000040	                     and eax, 0x40000000	      1298	intel_display.c	FUNCTION_41	ELSE_2	IF_6	CALL_5
0x4002541	          0xc1e21e	                           shl edx, 0x1e	      1298	intel_display.c	FUNCTION_41	ELSE_2	IF_6	CALL_5
0x4002544	            0x39d0	                            cmp eax, edx	      1298	intel_display.c	FUNCTION_41	ELSE_2	IF_6	CALL_5
0x4002546	            0x75ab	                           jne 0x40024f3	      1298	intel_display.c	FUNCTION_41	ELSE_2	IF_6	CALL_5
0x4002548	            0xebcf	                           jmp 0x4002519	      1298	intel_display.c	FUNCTION_41	ELSE_2	IF_6	CALL_5
0x400254a	          0x4489e2	                           mov edx, r12d	      1292	intel_display.c	FUNCTION_41	IF_2	IF_3	CALL_2
0x400254d	      0x2500000060	                     and eax, 0x60000000	      1292	intel_display.c	FUNCTION_41	IF_2	IF_3	CALL_2
0x4002552	          0xc1e21d	                           shl edx, 0x1d	      1292	intel_display.c	FUNCTION_41	IF_2	IF_3	CALL_2
0x4002555	            0x39d0	                            cmp eax, edx	      1292	intel_display.c	FUNCTION_41	IF_2	IF_3	CALL_2
0x4002557	            0x759a	                           jne 0x40024f3	      1292	intel_display.c	FUNCTION_41	IF_2	IF_3	CALL_2
0x4002559	            0xebbe	                           jmp 0x4002519	      1292	intel_display.c	FUNCTION_41	IF_2	IF_3	CALL_2
0x400255b	      0xe800000000	                          call 0x4002560	      1357	intel_display.c	FUNCTION_45	CALL_7
0x4002560	             0xf0b	                                     ud2	      1357	intel_display.c	FUNCTION_45	CALL_7
0x4002562	            0xeb8f	                           jmp 0x40024f3	      1360	intel_display.c	FUNCTION_45
intel_atomic_commit_work	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,2	2
0x4011590	        0x4883ef58	                           sub rdi, 0x58	     12453	intel_display.c	FUNCTION_349	CALL_2
0x4011594	      0xe9e7efffff	        jmp sym.intel_atomic_commit_tail	     12453	intel_display.c	FUNCTION_349	CALL_2
intel_plane_pin_fb	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,2:ELSE,0:functions,0:CALL,10	43
0x400e2a0	              0x53	                                push rbx	     12663	intel_display.c	FUNCTION_355
0x400e2a1	          0x488b37	                    mov rsi, qword [rdi]	     12664	intel_display.c	FUNCTION_355	CALL_1
0x400e2a4	          0x4889f8	                            mov rax, rdi	     12663	intel_display.c	FUNCTION_355
0x400e2a7	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	     12666	intel_display.c	FUNCTION_355
0x400e2ab	    0x83be84020000	              cmp dword [rsi + 0x284], 4	     12669	intel_display.c	FUNCTION_355	IF_1
0x400e2b2	          0x4c8b06	                     mov r8, qword [rsi]	     12665	intel_display.c	FUNCTION_355	CALL_2
0x400e2b5	            0x743d	                            je 0x400e2f4	     12669	intel_display.c	FUNCTION_355	IF_1
0x400e2b7	    0x4180b85c0600	                cmp byte [r8 + 0x65c], 3	      2075	intel_display.c	FUNCTION_74	CALL_3
0x400e2bf	    0x488d88900000	                   lea rcx, [rax + 0x90]	     12677	intel_display.c	FUNCTION_355	CALL_7
0x400e2c6	      0xba01000000	                              mov edx, 1	      2075	intel_display.c	FUNCTION_74	CALL_3
0x400e2cb	            0x771e	                            ja 0x400e2eb	      2075	intel_display.c	FUNCTION_74	CALL_3
0x400e2cd	          0x8b7040	            mov esi, dword [rax + 0x40] 	     12677	intel_display.c	FUNCTION_355	CALL_7
0x400e2d0	          0x4889c3	                            mov rbx, rax	     12677	intel_display.c	FUNCTION_355	CALL_7
0x400e2d3	      0xe800000000	                          call 0x400e2d8	     12677	intel_display.c	FUNCTION_355	CALL_7
0x400e2d8	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	     12681	intel_display.c	FUNCTION_355	IF_2	CALL_9
0x400e2de	            0x7709	                            ja 0x400e2e9	     12681	intel_display.c	FUNCTION_355	IF_2	CALL_9
0x400e2e0	    0x488983880000	             mov qword [rbx + 0x88], rax	     12684	intel_display.c	FUNCTION_355
0x400e2e7	            0x31c0	                            xor eax, eax	     12686	intel_display.c	FUNCTION_355
0x400e2e9	              0x5b	                                 pop rbx	     12687	intel_display.c	FUNCTION_355
0x400e2ea	              0xc3	                                     ret	     12687	intel_display.c	FUNCTION_355
0x400e2eb	     0xfb6968d0200	          movzx edx, byte [rsi + 0x28d] 	      2075	intel_display.c	FUNCTION_74	CALL_3
0x400e2f2	            0xebd9	                           jmp 0x400e2cd	      2075	intel_display.c	FUNCTION_74	CALL_3
0x400e2f4	    0x4180b87a0600	                cmp byte [r8 + 0x67a], 0	     12669	intel_display.c	FUNCTION_355	IF_1
0x400e2fc	            0x79b9	                           jns 0x400e2b7	     12669	intel_display.c	FUNCTION_355	IF_1
0x400e2fe	          0x4885ff	                           test rdi, rdi	     12671	intel_display.c	FUNCTION_355	IF_1	CALL_4
0x400e301	            0x7437	                            je 0x400e33a	     12671	intel_display.c	FUNCTION_355	IF_1	CALL_4
0x400e303	    0x488bbfc80000	            mov rdi, qword [rdi + 0xc8] 	     12671	intel_display.c	FUNCTION_355	IF_1	CALL_4
0x400e30a	    0x418b80640600	            mov eax, dword [r8 + 0x664] 	      2020	intel_display.c	FUNCTION_71	IF_1	CALL_1
0x400e311	      0xbe00400000	                         mov esi, 0x4000	      2020	intel_display.c	FUNCTION_71	IF_1	CALL_1
0x400e316	            0xa802	                              test al, 2	      2020	intel_display.c	FUNCTION_71	IF_1	CALL_1
0x400e318	            0x751a	                           jne 0x400e334	      2020	intel_display.c	FUNCTION_71	IF_1	CALL_1
0x400e31a	            0xa808	                              test al, 8	      2022	intel_display.c	FUNCTION_71	ELSE_1	IF_2	CALL_2
0x400e31c	      0xbe00010000	                          mov esi, 0x100	      2022	intel_display.c	FUNCTION_71	ELSE_1	IF_2	CALL_2
0x400e321	            0x7511	                           jne 0x400e334	      2022	intel_display.c	FUNCTION_71	ELSE_1	IF_2	CALL_2
0x400e323	          0x83e014	                           and eax, 0x14	      2024	intel_display.c	FUNCTION_71	ELSE_2	IF_3	CALL_4
0x400e326	          0x83f801	                              cmp eax, 1	      2024	intel_display.c	FUNCTION_71	ELSE_2	IF_3	CALL_4
0x400e329	            0x19f6	                            sbb esi, esi	      2024	intel_display.c	FUNCTION_71	ELSE_2	IF_3	CALL_4
0x400e32b	    0x81e6e00f0000	                          and esi, 0xfe0	      2024	intel_display.c	FUNCTION_71	ELSE_2	IF_3	CALL_4
0x400e331	          0x83c620	                           add esi, 0x20	      2024	intel_display.c	FUNCTION_71	ELSE_2	IF_3	CALL_4
0x400e334	              0x5b	                                 pop rbx	     12687	intel_display.c	FUNCTION_355
0x400e335	      0xe900000000	                           jmp 0x400e33a	     12674	intel_display.c	FUNCTION_355	IF_1	CALL_6
0x400e33a	            0x31ff	                            xor edi, edi	     12671	intel_display.c	FUNCTION_355	IF_1	CALL_4
0x400e33c	            0xebcc	                           jmp 0x400e30a	     12671	intel_display.c	FUNCTION_355	IF_1	CALL_4
i9xx_crtc_compute_clock	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,3:ELSE,1:functions,0:CALL,8	59
0x400b9c0	              0x55	                                push rbp	      7415	intel_display.c	FUNCTION_227
0x400b9c1	              0x53	                                push rbx	      7415	intel_display.c	FUNCTION_227
0x400b9c2	          0x4889fd	                            mov rbp, rdi	      7415	intel_display.c	FUNCTION_227
0x400b9c5	            0x89f0	                            mov eax, esi	      7421	intel_display.c	FUNCTION_227	CALL_2
0x400b9c7	          0x4889f3	                            mov rbx, rsi	      7415	intel_display.c	FUNCTION_227
0x400b9ca	        0x4883ec08	                              sub rsp, 8	      7415	intel_display.c	FUNCTION_227
0x400b9ce	          0x488b17	                    mov rdx, qword [rdi]	      7416	intel_display.c	FUNCTION_227
0x400b9d1	    0x488dbe880200	                  lea rdi, [rsi + 0x288]	      7421	intel_display.c	FUNCTION_227	CALL_2
0x400b9d8	    0x48c786800200	              mov qword [rsi + 0x280], 0	      7421	intel_display.c	FUNCTION_227	CALL_2
0x400b9e3	    0x48c786cc0200	              mov qword [rsi + 0x2cc], 0	      7421	intel_display.c	FUNCTION_227	CALL_2
0x400b9ee	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	      7421	intel_display.c	FUNCTION_227	CALL_2
0x400b9f2	            0x29f8	                            sub eax, edi	      7421	intel_display.c	FUNCTION_227	CALL_2
0x400b9f4	    0x8d88d4020000	                  lea ecx, [rax + 0x2d4]	      7421	intel_display.c	FUNCTION_227	CALL_2
0x400b9fa	            0x31c0	                            xor eax, eax	      7421	intel_display.c	FUNCTION_227	CALL_2
0x400b9fc	          0xc1e903	                              shr ecx, 3	      7421	intel_display.c	FUNCTION_227	CALL_2
0x400b9ff	          0xf348ab	              rep stosq qword [rdi], rax	      7421	intel_display.c	FUNCTION_227	CALL_2
0x400ba02	      0xb900770100	                        mov ecx, 0x17700	      7419	intel_display.c	FUNCTION_227
0x400ba07	    0x48c7c7000000	                              mov rdi, 0	      7432	intel_display.c	FUNCTION_227	ELSE_1
0x400ba0e	    0xf68644020000	          test byte [rsi + 0x244], 0x10 	      7424	intel_display.c	FUNCTION_227	IF_1	CALL_3
0x400ba15	            0x7413	                            je 0x400ba2a	      7424	intel_display.c	FUNCTION_227	IF_1	CALL_3
0x400ba17	    0x8b0500000000	            mov eax, dword [0x0400ba1d] 	      6551	intel_display.c	FUNCTION_202	IF_1
0x400ba1d	            0x85c0	                           test eax, eax	      6551	intel_display.c	FUNCTION_202	IF_1
0x400ba1f	            0x7840	                            js 0x400ba61	      6551	intel_display.c	FUNCTION_202	IF_1
0x400ba21	    0x48c7c7000000	                              mov rdi, 0	      7430	intel_display.c	FUNCTION_227	IF_1
0x400ba28	            0x7550	                           jne 0x400ba7a	      7425	intel_display.c	FUNCTION_227	IF_1	IF_2	CALL_4
0x400ba2a	    0x80bb4c020000	               cmp byte [rbx + 0x24c], 0	      7435	intel_display.c	FUNCTION_227	IF_3
0x400ba31	            0x7519	                           jne 0x400ba4c	      7435	intel_display.c	FUNCTION_227	IF_3
0x400ba33	    0x8b930c030000	           mov edx, dword [rbx + 0x30c] 	      7436	intel_display.c	FUNCTION_227	IF_3	CALL_6
0x400ba39	    0x4c8d83500200	                   lea r8, [rbx + 0x250]	      7436	intel_display.c	FUNCTION_227	IF_3	CALL_6
0x400ba40	          0x4889de	                            mov rsi, rbx	      7436	intel_display.c	FUNCTION_227	IF_3	CALL_6
0x400ba43	      0xe8b8dbffff	call sym.i9xx_find_best_dpll.constprop.151	      7436	intel_display.c	FUNCTION_227	IF_3	CALL_6
0x400ba48	            0x84c0	                             test al, al	      7435	intel_display.c	FUNCTION_227	IF_3
0x400ba4a	            0x7458	                            je 0x400baa4	      7435	intel_display.c	FUNCTION_227	IF_3
0x400ba4c	        0x488b7d00	                    mov rdi, qword [rbp]	      7442	intel_display.c	FUNCTION_227	CALL_8
0x400ba50	          0x4889de	                            mov rsi, rbx	      7442	intel_display.c	FUNCTION_227	CALL_8
0x400ba53	      0xe868faffff	call sym.i9xx_compute_dpll.isra.64.constprop.155	      7442	intel_display.c	FUNCTION_227	CALL_8
0x400ba58	            0x31c0	                            xor eax, eax	      7444	intel_display.c	FUNCTION_227
0x400ba5a	        0x4883c408	                              add rsp, 8	      7445	intel_display.c	FUNCTION_227
0x400ba5e	              0x5b	                                 pop rbx	      7445	intel_display.c	FUNCTION_227
0x400ba5f	              0x5d	                                 pop rbp	      7445	intel_display.c	FUNCTION_227
0x400ba60	              0xc3	                                     ret	      7445	intel_display.c	FUNCTION_227
0x400ba61	    0xf682f84c0000	         test byte [rdx + 0x4cf8], 0x10 	      6554	intel_display.c	FUNCTION_202
0x400ba68	    0x48c7c7000000	                              mov rdi, 0	      7430	intel_display.c	FUNCTION_227	IF_1
0x400ba6f	            0x74b9	                            je 0x400ba2a	      6554	intel_display.c	FUNCTION_202
0x400ba71	    0xf68200560000	            test byte [rdx + 0x5600], 2 	      6554	intel_display.c	FUNCTION_202
0x400ba78	            0x75b0	                           jne 0x400ba2a	      6554	intel_display.c	FUNCTION_202
0x400ba7a	    0x8b8afc4c0000	          mov ecx, dword [rdx + 0x4cfc] 	      7426	intel_display.c	FUNCTION_227	IF_1	IF_2
0x400ba80	      0xbf04000000	                              mov edi, 4	      7427	intel_display.c	FUNCTION_227	IF_1	IF_2	CALL_5
0x400ba85	    0x48c7c6000000	                              mov rsi, 0	      7427	intel_display.c	FUNCTION_227	IF_1	IF_2	CALL_5
0x400ba8c	            0x89ca	                            mov edx, ecx	      7427	intel_display.c	FUNCTION_227	IF_1	IF_2	CALL_5
0x400ba8e	        0x894c2404	                mov dword [rsp + 4], ecx	      7427	intel_display.c	FUNCTION_227	IF_1	IF_2	CALL_5
0x400ba92	      0xe800000000	                          call 0x400ba97	      7427	intel_display.c	FUNCTION_227	IF_1	IF_2	CALL_5
0x400ba97	    0x48c7c7000000	                              mov rdi, 0	      7430	intel_display.c	FUNCTION_227	IF_1
0x400ba9e	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      7430	intel_display.c	FUNCTION_227	IF_1
0x400baa2	            0xeb86	                           jmp 0x400ba2a	      7430	intel_display.c	FUNCTION_227	IF_1
0x400baa4	    0x48c7c7000000	                              mov rdi, 0	      7438	intel_display.c	FUNCTION_227	IF_3	CALL_7
0x400baab	      0xe800000000	                          call 0x400bab0	      7438	intel_display.c	FUNCTION_227	IF_3	CALL_7
0x400bab0	      0xb8eaffffff	                     mov eax, 0xffffffea	      7439	intel_display.c	FUNCTION_227	IF_3
0x400bab5	            0xeba3	                           jmp 0x400ba5a	      7439	intel_display.c	FUNCTION_227	IF_3
gen6_fdi_link_train	FOR,4:SWITCH,0:DO,0:WHILE,0:IF,9:ELSE,2:functions,0:CALL,53	252
0x40036a0	            0x4157	                                push r15	      3965	intel_display.c	FUNCTION_126
0x40036a2	            0x4156	                                push r14	      3965	intel_display.c	FUNCTION_126
0x40036a4	      0xba01000000	                              mov edx, 1	      3975	intel_display.c	FUNCTION_126	CALL_3
0x40036a9	            0x4155	                                push r13	      3965	intel_display.c	FUNCTION_126
0x40036ab	            0x4154	                                push r12	      3965	intel_display.c	FUNCTION_126
0x40036ad	          0x4989f6	                            mov r14, rsi	      3965	intel_display.c	FUNCTION_126
0x40036b0	              0x55	                                push rbp	      3965	intel_display.c	FUNCTION_126
0x40036b1	              0x53	                                push rbx	      3965	intel_display.c	FUNCTION_126
0x40036b2	        0x4883ec08	                              sub rsp, 8	      3965	intel_display.c	FUNCTION_126
0x40036b6	    0x448ba7b00400	          mov r12d, dword [rdi + 0x4b0] 	      3974	intel_display.c	FUNCTION_126	CALL_2
0x40036bd	          0x488b1f	                    mov rbx, qword [rdi]	      3966	intel_display.c	FUNCTION_126
0x40036c0	        0x41c1e40c	                           shl r12d, 0xc	      3974	intel_display.c	FUNCTION_126	CALL_2
0x40036c4	          0x4889df	                            mov rdi, rbx	      3975	intel_display.c	FUNCTION_126	CALL_3
0x40036c7	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      3975	intel_display.c	FUNCTION_126	CALL_3
0x40036ce	    0x418dac241800	                lea ebp, [r12 + 0xf0018]	      3974	intel_display.c	FUNCTION_126	CALL_2
0x40036d6	    0x458dac240001	               lea r13d, [r12 + 0x60100]	      3984	intel_display.c	FUNCTION_126	CALL_7
0x40036de	            0x89ee	                            mov esi, ebp	      3975	intel_display.c	FUNCTION_126	CALL_3
0x40036e0	      0xe800000000	                          call 0x40036e5	      3975	intel_display.c	FUNCTION_126	CALL_3
0x40036e5	          0x80e4fc	                            and ah, 0xfc	      3978	intel_display.c	FUNCTION_126	CALL_4
0x40036e8	      0xb901000000	                              mov ecx, 1	      3978	intel_display.c	FUNCTION_126	CALL_4
0x40036ed	            0x89ee	                            mov esi, ebp	      3978	intel_display.c	FUNCTION_126	CALL_4
0x40036ef	            0x89c2	                            mov edx, eax	      3978	intel_display.c	FUNCTION_126	CALL_4
0x40036f1	          0x4889df	                            mov rdi, rbx	      3978	intel_display.c	FUNCTION_126	CALL_4
0x40036f4	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      3978	intel_display.c	FUNCTION_126	CALL_4
0x40036fb	      0xe800000000	                          call 0x4003700	      3978	intel_display.c	FUNCTION_126	CALL_4
0x4003700	            0x31d2	                            xor edx, edx	      3980	intel_display.c	FUNCTION_126	CALL_5
0x4003702	            0x89ee	                            mov esi, ebp	      3980	intel_display.c	FUNCTION_126	CALL_5
0x4003704	          0x4889df	                            mov rdi, rbx	      3980	intel_display.c	FUNCTION_126	CALL_5
0x4003707	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      3980	intel_display.c	FUNCTION_126	CALL_5
0x400370e	      0xe800000000	                          call 0x4003713	      3980	intel_display.c	FUNCTION_126	CALL_5
0x4003713	      0xbf9ad40900	                        mov edi, 0x9d49a	      3981	intel_display.c	FUNCTION_126	CALL_6
0x4003718	      0xe800000000	                          call 0x400371d	      3981	intel_display.c	FUNCTION_126	CALL_6
0x400371d	      0xba01000000	                              mov edx, 1	      3985	intel_display.c	FUNCTION_126	CALL_8
0x4003722	          0x4489ee	                           mov esi, r13d	      3985	intel_display.c	FUNCTION_126	CALL_8
0x4003725	          0x4889df	                            mov rdi, rbx	      3985	intel_display.c	FUNCTION_126	CALL_8
0x4003728	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      3985	intel_display.c	FUNCTION_126	CALL_8
0x400372f	      0xe800000000	                          call 0x4003734	      3985	intel_display.c	FUNCTION_126	CALL_8
0x4003734	    0x418b96300300	           mov edx, dword [r14 + 0x330] 	      3987	intel_display.c	FUNCTION_126	CALL_9
0x400373b	      0x25ffffc7ff	                     and eax, 0xffc7ffff	      3986	intel_display.c	FUNCTION_126
0x4003740	      0xb901000000	                              mov ecx, 1	      3993	intel_display.c	FUNCTION_126	CALL_10
0x4003745	          0x4489ee	                           mov esi, r13d	      3993	intel_display.c	FUNCTION_126	CALL_10
0x4003748	          0x4889df	                            mov rdi, rbx	      3993	intel_display.c	FUNCTION_126	CALL_10
0x400374b	          0x83ea01	                              sub edx, 1	      3987	intel_display.c	FUNCTION_126	CALL_9
0x400374e	          0xc1e213	                           shl edx, 0x13	      3987	intel_display.c	FUNCTION_126	CALL_9
0x4003751	             0x9c2	                             or edx, eax	      3987	intel_display.c	FUNCTION_126	CALL_9
0x4003753	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      3993	intel_display.c	FUNCTION_126	CALL_10
0x400375a	    0x81e2ffff3fc0	                     and edx, 0xc03fffff	      3993	intel_display.c	FUNCTION_126	CALL_10
0x4003760	    0x81ca00000080	                      or edx, 0x80000000	      3993	intel_display.c	FUNCTION_126	CALL_10
0x4003766	      0xe800000000	                          call 0x400376b	      3993	intel_display.c	FUNCTION_126	CALL_10
0x400376b	    0x418db4241000	                lea esi, [r12 + 0xf0010]	      3995	intel_display.c	FUNCTION_126	CALL_12
0x4003773	      0xb901000000	                              mov ecx, 1	      3995	intel_display.c	FUNCTION_126	CALL_12
0x4003778	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      3995	intel_display.c	FUNCTION_126	CALL_12
0x400377f	      0xba90002000	                       mov edx, 0x200090	      3995	intel_display.c	FUNCTION_126	CALL_12
0x4003784	          0x4889df	                            mov rdi, rbx	      3995	intel_display.c	FUNCTION_126	CALL_12
0x4003787	      0xe800000000	                          call 0x400378c	      3995	intel_display.c	FUNCTION_126	CALL_12
0x400378c	    0x418d84240c00	                lea eax, [r12 + 0xf000c]	      3998	intel_display.c	FUNCTION_126	CALL_13
0x4003794	      0xba01000000	                              mov edx, 1	      3999	intel_display.c	FUNCTION_126	CALL_14
0x4003799	          0x4889df	                            mov rdi, rbx	      3999	intel_display.c	FUNCTION_126	CALL_14
0x400379c	          0x4189c6	                           mov r14d, eax	      3998	intel_display.c	FUNCTION_126	CALL_13
0x400379f	        0x89442404	                mov dword [rsp + 4], eax	      3998	intel_display.c	FUNCTION_126	CALL_13
0x40037a3	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      3999	intel_display.c	FUNCTION_126	CALL_14
0x40037aa	          0x4489f6	                           mov esi, r14d	      3999	intel_display.c	FUNCTION_126	CALL_14
0x40037ad	      0xe800000000	                          call 0x40037b2	      3999	intel_display.c	FUNCTION_126	CALL_14
0x40037b2	            0x89c2	                            mov edx, eax	      4001	intel_display.c	FUNCTION_126	IF_1
0x40037b4	      0x25ffffffcf	                     and eax, 0xcfffffff	      4001	intel_display.c	FUNCTION_126	IF_1
0x40037b9	      0xb901000000	                              mov ecx, 1	      4007	intel_display.c	FUNCTION_126	CALL_16
0x40037be	          0x80e6fc	                            and dh, 0xfc	      4001	intel_display.c	FUNCTION_126	IF_1
0x40037c1	    0x83bbf8550000	            cmp dword [rbx + 0x55f8], 2 	      4001	intel_display.c	FUNCTION_126	IF_1
0x40037c8	          0x4489f6	                           mov esi, r14d	      4007	intel_display.c	FUNCTION_126	CALL_16
0x40037cb	          0x4889df	                            mov rdi, rbx	      4007	intel_display.c	FUNCTION_126	CALL_16
0x40037ce	           0xf45d0	                         cmovne edx, eax	      4001	intel_display.c	FUNCTION_126	IF_1
0x40037d1	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      4007	intel_display.c	FUNCTION_126	CALL_16
0x40037d8	    0x4181c414000f	                       add r12d, 0xf0014	      4007	intel_display.c	FUNCTION_126	CALL_16
0x40037df	    0x81ca00000080	                      or edx, 0x80000000	      4007	intel_display.c	FUNCTION_126	CALL_16
0x40037e5	            0x31ed	                            xor ebp, ebp	      4010	intel_display.c	FUNCTION_126	CALL_18
0x40037e7	      0xe800000000	                          call 0x40037ec	      4007	intel_display.c	FUNCTION_126	CALL_16
0x40037ec	          0x4489f6	                           mov esi, r14d	      4009	intel_display.c	FUNCTION_126	CALL_17
0x40037ef	            0x31d2	                            xor edx, edx	      4009	intel_display.c	FUNCTION_126	CALL_17
0x40037f1	          0x4889df	                            mov rdi, rbx	      4009	intel_display.c	FUNCTION_126	CALL_17
0x40037f4	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      4009	intel_display.c	FUNCTION_126	CALL_17
0x40037fb	          0x4531f6	                          xor r14d, r14d	      4010	intel_display.c	FUNCTION_126	CALL_18
0x40037fe	      0xe800000000	                          call 0x4003803	      4009	intel_display.c	FUNCTION_126	CALL_17
0x4003803	      0xbf9ad40900	                        mov edi, 0x9d49a	      4010	intel_display.c	FUNCTION_126	CALL_18
0x4003808	      0xe800000000	                          call 0x400380d	      4010	intel_display.c	FUNCTION_126	CALL_18
0x400380d	      0xba01000000	                              mov edx, 1	      4014	intel_display.c	FUNCTION_126	FOR_1	CALL_20
0x4003812	          0x4489ee	                           mov esi, r13d	      4014	intel_display.c	FUNCTION_126	FOR_1	CALL_20
0x4003815	          0x4889df	                            mov rdi, rbx	      4014	intel_display.c	FUNCTION_126	FOR_1	CALL_20
0x4003818	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      4014	intel_display.c	FUNCTION_126	FOR_1	CALL_20
0x400381f	      0xe800000000	                          call 0x4003824	      4014	intel_display.c	FUNCTION_126	FOR_1	CALL_20
0x4003824	      0x25ffff3ff0	                     and eax, 0xf03fffff	      4015	intel_display.c	FUNCTION_126	FOR_1
0x4003829	      0xb901000000	                              mov ecx, 1	      4017	intel_display.c	FUNCTION_126	FOR_1	CALL_21
0x400382e	          0x4489ee	                           mov esi, r13d	      4017	intel_display.c	FUNCTION_126	FOR_1	CALL_21
0x4003831	            0x89c2	                            mov edx, eax	      4015	intel_display.c	FUNCTION_126	FOR_1
0x4003833	          0x4889df	                            mov rdi, rbx	      4017	intel_display.c	FUNCTION_126	FOR_1	CALL_21
0x4003836	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      4017	intel_display.c	FUNCTION_126	FOR_1	CALL_21
0x400383d	             0x9ea	                             or edx, ebp	      4017	intel_display.c	FUNCTION_126	FOR_1	CALL_21
0x400383f	      0xbd05000000	                              mov ebp, 5	      4020	intel_display.c	FUNCTION_126	FOR_1	CALL_23
0x4003844	      0xe800000000	                          call 0x4003849	      4017	intel_display.c	FUNCTION_126	FOR_1	CALL_21
0x4003849	            0x31d2	                            xor edx, edx	      4019	intel_display.c	FUNCTION_126	FOR_1	CALL_22
0x400384b	          0x4489ee	                           mov esi, r13d	      4019	intel_display.c	FUNCTION_126	FOR_1	CALL_22
0x400384e	          0x4889df	                            mov rdi, rbx	      4019	intel_display.c	FUNCTION_126	FOR_1	CALL_22
0x4003851	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      4019	intel_display.c	FUNCTION_126	FOR_1	CALL_22
0x4003858	      0xe800000000	                          call 0x400385d	      4019	intel_display.c	FUNCTION_126	FOR_1	CALL_22
0x400385d	      0xbfacc42000	                       mov edi, 0x20c4ac	      4020	intel_display.c	FUNCTION_126	FOR_1	CALL_23
0x4003862	      0xe800000000	                          call 0x4003867	      4020	intel_display.c	FUNCTION_126	FOR_1	CALL_23
0x4003867	      0xba01000000	                              mov edx, 1	      4024	intel_display.c	FUNCTION_126	FOR_1	FOR_2	CALL_25
0x400386c	          0x4489e6	                           mov esi, r12d	      4024	intel_display.c	FUNCTION_126	FOR_1	FOR_2	CALL_25
0x400386f	          0x4889df	                            mov rdi, rbx	      4024	intel_display.c	FUNCTION_126	FOR_1	FOR_2	CALL_25
0x4003872	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      4024	intel_display.c	FUNCTION_126	FOR_1	FOR_2	CALL_25
0x4003879	      0xe800000000	                          call 0x400387e	      4024	intel_display.c	FUNCTION_126	FOR_1	FOR_2	CALL_25
0x400387e	    0x48c7c6000000	                              mov rsi, 0	      4025	intel_display.c	FUNCTION_126	FOR_1	FOR_2	CALL_26
0x4003885	          0x4189c7	                           mov r15d, eax	      4024	intel_display.c	FUNCTION_126	FOR_1	FOR_2	CALL_25
0x4003888	            0x89c2	                            mov edx, eax	      4025	intel_display.c	FUNCTION_126	FOR_1	FOR_2	CALL_26
0x400388a	      0xbf04000000	                              mov edi, 4	      4025	intel_display.c	FUNCTION_126	FOR_1	FOR_2	CALL_26
0x400388f	      0xe800000000	                          call 0x4003894	      4025	intel_display.c	FUNCTION_126	FOR_1	FOR_2	CALL_26
0x4003894	    0x41f7c7000100	                        test r15d, 0x100	      4026	intel_display.c	FUNCTION_126	FOR_1	FOR_2	IF_2
0x400389b	     0xf85fc010000	                           jne 0x4003a9d	      4026	intel_display.c	FUNCTION_126	FOR_1	FOR_2	IF_2
0x40038a1	      0xbfde460300	                        mov edi, 0x346de	      4031	intel_display.c	FUNCTION_126	FOR_1	FOR_2	CALL_29
0x40038a6	      0xe800000000	                          call 0x40038ab	      4031	intel_display.c	FUNCTION_126	FOR_1	FOR_2	CALL_29
0x40038ab	          0x83ed01	                              sub ebp, 1	      4022	intel_display.c	FUNCTION_126	FOR_1	FOR_2
0x40038ae	            0x75b7	                           jne 0x4003867	      4022	intel_display.c	FUNCTION_126	FOR_1	FOR_2
0x40038b0	        0x4983c601	                              add r14, 1	      4022	intel_display.c	FUNCTION_126	FOR_1	FOR_2
0x40038b4	        0x4983fe04	                              cmp r14, 4	      4012	intel_display.c	FUNCTION_126	FOR_1
0x40038b8	            0x740d	                            je 0x40038c7	      4012	intel_display.c	FUNCTION_126	FOR_1
0x40038ba	    0x428b2cb50000	                  mov ebp, dword [r14*4]	      4012	intel_display.c	FUNCTION_126	FOR_1
0x40038c2	      0xe946ffffff	                           jmp 0x400380d	      4012	intel_display.c	FUNCTION_126	FOR_1
0x40038c7	    0x48c7c7000000	                              mov rdi, 0	      4037	intel_display.c	FUNCTION_126	CALL_30
0x40038ce	      0xe800000000	                          call 0x40038d3	      4037	intel_display.c	FUNCTION_126	CALL_30
0x40038d3	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      4041	intel_display.c	FUNCTION_126	CALL_32
0x40038da	      0xba01000000	                              mov edx, 1	      4041	intel_display.c	FUNCTION_126	CALL_32
0x40038df	          0x4489ee	                           mov esi, r13d	      4041	intel_display.c	FUNCTION_126	CALL_32
0x40038e2	          0x4889df	                            mov rdi, rbx	      4041	intel_display.c	FUNCTION_126	CALL_32
0x40038e5	      0xe800000000	                          call 0x40038ea	      4041	intel_display.c	FUNCTION_126	CALL_32
0x40038ea	    0xf6835a060000	          test byte [rbx + 0x65a], 0x20 	      4044	intel_display.c	FUNCTION_126	IF_5	CALL_33
0x40038f1	     0xf85d9010000	                           jne 0x4003ad0	      4044	intel_display.c	FUNCTION_126	IF_5	CALL_33
0x40038f7	      0x25ffffffcf	                     and eax, 0xcfffffff	      4042	intel_display.c	FUNCTION_126
0x40038fc	            0x89c2	                            mov edx, eax	      4042	intel_display.c	FUNCTION_126
0x40038fe	    0x81ca00000010	                      or edx, 0x10000000	      4043	intel_display.c	FUNCTION_126
0x4003904	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      4049	intel_display.c	FUNCTION_126	CALL_34
0x400390b	      0xb901000000	                              mov ecx, 1	      4049	intel_display.c	FUNCTION_126	CALL_34
0x4003910	          0x4489ee	                           mov esi, r13d	      4049	intel_display.c	FUNCTION_126	CALL_34
0x4003913	          0x4889df	                            mov rdi, rbx	      4049	intel_display.c	FUNCTION_126	CALL_34
0x4003916	      0xe800000000	                          call 0x400391b	      4049	intel_display.c	FUNCTION_126	CALL_34
0x400391b	      0xba01000000	                              mov edx, 1	      4052	intel_display.c	FUNCTION_126	CALL_36
0x4003920	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      4052	intel_display.c	FUNCTION_126	CALL_36
0x4003927	        0x8b742404	                mov esi, dword [rsp + 4]	      4052	intel_display.c	FUNCTION_126	CALL_36
0x400392b	          0x4889df	                            mov rdi, rbx	      4052	intel_display.c	FUNCTION_126	CALL_36
0x400392e	      0xe800000000	                          call 0x4003933	      4052	intel_display.c	FUNCTION_126	CALL_36
0x4003933	            0x89c2	                            mov edx, eax	      4057	intel_display.c	FUNCTION_126	ELSE_2
0x4003935	    0x81e2ffffffcf	                     and edx, 0xcfffffff	      4057	intel_display.c	FUNCTION_126	ELSE_2
0x400393b	    0x81ca00000010	                      or edx, 0x10000000	      4058	intel_display.c	FUNCTION_126	ELSE_2
0x4003941	    0x83bbf8550000	            cmp dword [rbx + 0x55f8], 2 	      4053	intel_display.c	FUNCTION_126	IF_6	CALL_37
0x4003948	     0xf8494010000	                            je 0x4003ae2	      4053	intel_display.c	FUNCTION_126	IF_6	CALL_37
0x400394e	      0x448b742404	               mov r14d, dword [rsp + 4]	      4060	intel_display.c	FUNCTION_126	CALL_38
0x4003953	      0xb901000000	                              mov ecx, 1	      4060	intel_display.c	FUNCTION_126	CALL_38
0x4003958	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      4060	intel_display.c	FUNCTION_126	CALL_38
0x400395f	          0x4889df	                            mov rdi, rbx	      4060	intel_display.c	FUNCTION_126	CALL_38
0x4003962	          0x4531ff	                          xor r15d, r15d	      4063	intel_display.c	FUNCTION_126	CALL_40
0x4003965	            0x31ed	                            xor ebp, ebp	      4063	intel_display.c	FUNCTION_126	CALL_40
0x4003967	          0x4489f6	                           mov esi, r14d	      4060	intel_display.c	FUNCTION_126	CALL_38
0x400396a	      0xe800000000	                          call 0x400396f	      4060	intel_display.c	FUNCTION_126	CALL_38
0x400396f	            0x31d2	                            xor edx, edx	      4062	intel_display.c	FUNCTION_126	CALL_39
0x4003971	          0x4489f6	                           mov esi, r14d	      4062	intel_display.c	FUNCTION_126	CALL_39
0x4003974	          0x4889df	                            mov rdi, rbx	      4062	intel_display.c	FUNCTION_126	CALL_39
0x4003977	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      4062	intel_display.c	FUNCTION_126	CALL_39
0x400397e	      0xe800000000	                          call 0x4003983	      4062	intel_display.c	FUNCTION_126	CALL_39
0x4003983	      0xbf9ad40900	                        mov edi, 0x9d49a	      4063	intel_display.c	FUNCTION_126	CALL_40
0x4003988	      0xe800000000	                          call 0x400398d	      4063	intel_display.c	FUNCTION_126	CALL_40
0x400398d	      0xba01000000	                              mov edx, 1	      4067	intel_display.c	FUNCTION_126	FOR_3	CALL_42
0x4003992	          0x4489ee	                           mov esi, r13d	      4067	intel_display.c	FUNCTION_126	FOR_3	CALL_42
0x4003995	          0x4889df	                            mov rdi, rbx	      4067	intel_display.c	FUNCTION_126	FOR_3	CALL_42
0x4003998	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      4067	intel_display.c	FUNCTION_126	FOR_3	CALL_42
0x400399f	    0x41be05000000	                             mov r14d, 5	      4073	intel_display.c	FUNCTION_126	FOR_3	CALL_45
0x40039a5	      0xe800000000	                          call 0x40039aa	      4067	intel_display.c	FUNCTION_126	FOR_3	CALL_42
0x40039aa	      0x25ffff3ff0	                     and eax, 0xf03fffff	      4068	intel_display.c	FUNCTION_126	FOR_3
0x40039af	      0xb901000000	                              mov ecx, 1	      4070	intel_display.c	FUNCTION_126	FOR_3	CALL_43
0x40039b4	          0x4489ee	                           mov esi, r13d	      4070	intel_display.c	FUNCTION_126	FOR_3	CALL_43
0x40039b7	            0x89c2	                            mov edx, eax	      4068	intel_display.c	FUNCTION_126	FOR_3
0x40039b9	          0x4889df	                            mov rdi, rbx	      4070	intel_display.c	FUNCTION_126	FOR_3	CALL_43
0x40039bc	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      4070	intel_display.c	FUNCTION_126	FOR_3	CALL_43
0x40039c3	             0x9ea	                             or edx, ebp	      4070	intel_display.c	FUNCTION_126	FOR_3	CALL_43
0x40039c5	      0xe800000000	                          call 0x40039ca	      4070	intel_display.c	FUNCTION_126	FOR_3	CALL_43
0x40039ca	            0x31d2	                            xor edx, edx	      4072	intel_display.c	FUNCTION_126	FOR_3	CALL_44
0x40039cc	          0x4489ee	                           mov esi, r13d	      4072	intel_display.c	FUNCTION_126	FOR_3	CALL_44
0x40039cf	          0x4889df	                            mov rdi, rbx	      4072	intel_display.c	FUNCTION_126	FOR_3	CALL_44
0x40039d2	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      4072	intel_display.c	FUNCTION_126	FOR_3	CALL_44
0x40039d9	      0xe800000000	                          call 0x40039de	      4072	intel_display.c	FUNCTION_126	FOR_3	CALL_44
0x40039de	      0xbfacc42000	                       mov edi, 0x20c4ac	      4073	intel_display.c	FUNCTION_126	FOR_3	CALL_45
0x40039e3	      0xe800000000	                          call 0x40039e8	      4073	intel_display.c	FUNCTION_126	FOR_3	CALL_45
0x40039e8	      0xba01000000	                              mov edx, 1	      4077	intel_display.c	FUNCTION_126	FOR_3	FOR_4	CALL_47
0x40039ed	          0x4489e6	                           mov esi, r12d	      4077	intel_display.c	FUNCTION_126	FOR_3	FOR_4	CALL_47
0x40039f0	          0x4889df	                            mov rdi, rbx	      4077	intel_display.c	FUNCTION_126	FOR_3	FOR_4	CALL_47
0x40039f3	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      4077	intel_display.c	FUNCTION_126	FOR_3	FOR_4	CALL_47
0x40039fa	      0xe800000000	                          call 0x40039ff	      4077	intel_display.c	FUNCTION_126	FOR_3	FOR_4	CALL_47
0x40039ff	    0x48c7c6000000	                              mov rsi, 0	      4078	intel_display.c	FUNCTION_126	FOR_3	FOR_4	CALL_48
0x4003a06	            0x89c5	                            mov ebp, eax	      4077	intel_display.c	FUNCTION_126	FOR_3	FOR_4	CALL_47
0x4003a08	            0x89c2	                            mov edx, eax	      4078	intel_display.c	FUNCTION_126	FOR_3	FOR_4	CALL_48
0x4003a0a	      0xbf04000000	                              mov edi, 4	      4078	intel_display.c	FUNCTION_126	FOR_3	FOR_4	CALL_48
0x4003a0f	      0xe800000000	                          call 0x4003a14	      4078	intel_display.c	FUNCTION_126	FOR_3	FOR_4	CALL_48
0x4003a14	    0xf7c500020000	                         test ebp, 0x200	      4079	intel_display.c	FUNCTION_126	FOR_3	FOR_4	IF_7
0x4003a1a	            0x7552	                           jne 0x4003a6e	      4079	intel_display.c	FUNCTION_126	FOR_3	FOR_4	IF_7
0x4003a1c	      0xbfde460300	                        mov edi, 0x346de	      4084	intel_display.c	FUNCTION_126	FOR_3	FOR_4	CALL_51
0x4003a21	      0xe800000000	                          call 0x4003a26	      4084	intel_display.c	FUNCTION_126	FOR_3	FOR_4	CALL_51
0x4003a26	        0x4183ee01	                             sub r14d, 1	      4075	intel_display.c	FUNCTION_126	FOR_3	FOR_4
0x4003a2a	            0x75bc	                           jne 0x40039e8	      4075	intel_display.c	FUNCTION_126	FOR_3	FOR_4
0x4003a2c	        0x4983c701	                              add r15, 1	      4075	intel_display.c	FUNCTION_126	FOR_3	FOR_4
0x4003a30	        0x4983ff04	                              cmp r15, 4	      4065	intel_display.c	FUNCTION_126	FOR_3
0x4003a34	            0x740d	                            je 0x4003a43	      4065	intel_display.c	FUNCTION_126	FOR_3
0x4003a36	    0x428b2cbd0000	                  mov ebp, dword [r15*4]	      4065	intel_display.c	FUNCTION_126	FOR_3
0x4003a3e	      0xe94affffff	                           jmp 0x400398d	      4065	intel_display.c	FUNCTION_126	FOR_3
0x4003a43	    0x48c7c7000000	                              mov rdi, 0	      4090	intel_display.c	FUNCTION_126	CALL_52
0x4003a4a	      0xe800000000	                          call 0x4003a4f	      4090	intel_display.c	FUNCTION_126	CALL_52
0x4003a4f	        0x4883c408	                              add rsp, 8	      4093	intel_display.c	FUNCTION_126
0x4003a53	    0x48c7c6000000	                              mov rsi, 0	      4092	intel_display.c	FUNCTION_126	CALL_53
0x4003a5a	      0xbf04000000	                              mov edi, 4	      4092	intel_display.c	FUNCTION_126	CALL_53
0x4003a5f	              0x5b	                                 pop rbx	      4093	intel_display.c	FUNCTION_126
0x4003a60	              0x5d	                                 pop rbp	      4093	intel_display.c	FUNCTION_126
0x4003a61	            0x415c	                                 pop r12	      4093	intel_display.c	FUNCTION_126
0x4003a63	            0x415d	                                 pop r13	      4093	intel_display.c	FUNCTION_126
0x4003a65	            0x415e	                                 pop r14	      4093	intel_display.c	FUNCTION_126
0x4003a67	            0x415f	                                 pop r15	      4093	intel_display.c	FUNCTION_126
0x4003a69	      0xe900000000	                           jmp 0x4003a6e	      4092	intel_display.c	FUNCTION_126	CALL_53
0x4003a6e	            0x89ea	                            mov edx, ebp	      4080	intel_display.c	FUNCTION_126	FOR_3	FOR_4	IF_7	CALL_49
0x4003a70	          0x4489e6	                           mov esi, r12d	      4080	intel_display.c	FUNCTION_126	FOR_3	FOR_4	IF_7	CALL_49
0x4003a73	          0x4889df	                            mov rdi, rbx	      4080	intel_display.c	FUNCTION_126	FOR_3	FOR_4	IF_7	CALL_49
0x4003a76	          0x80ce02	                                or dh, 2	      4080	intel_display.c	FUNCTION_126	FOR_3	FOR_4	IF_7	CALL_49
0x4003a79	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      4080	intel_display.c	FUNCTION_126	FOR_3	FOR_4	IF_7	CALL_49
0x4003a80	      0xb901000000	                              mov ecx, 1	      4080	intel_display.c	FUNCTION_126	FOR_3	FOR_4	IF_7	CALL_49
0x4003a85	      0xe800000000	                          call 0x4003a8a	      4080	intel_display.c	FUNCTION_126	FOR_3	FOR_4	IF_7	CALL_49
0x4003a8a	    0x48c7c6000000	                              mov rsi, 0	      4081	intel_display.c	FUNCTION_126	FOR_3	FOR_4	IF_7	CALL_50
0x4003a91	      0xbf04000000	                              mov edi, 4	      4081	intel_display.c	FUNCTION_126	FOR_3	FOR_4	IF_7	CALL_50
0x4003a96	      0xe800000000	                          call 0x4003a9b	      4081	intel_display.c	FUNCTION_126	FOR_3	FOR_4	IF_7	CALL_50
0x4003a9b	            0xebb2	                           jmp 0x4003a4f	      4081	intel_display.c	FUNCTION_126	FOR_3	FOR_4	IF_7	CALL_50
0x4003a9d	          0x4489fa	                           mov edx, r15d	      4027	intel_display.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_27
0x4003aa0	          0x4489e6	                           mov esi, r12d	      4027	intel_display.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_27
0x4003aa3	          0x4889df	                            mov rdi, rbx	      4027	intel_display.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_27
0x4003aa6	          0x80ce01	                                or dh, 1	      4027	intel_display.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_27
0x4003aa9	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      4027	intel_display.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_27
0x4003ab0	      0xb901000000	                              mov ecx, 1	      4027	intel_display.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_27
0x4003ab5	      0xe800000000	                          call 0x4003aba	      4027	intel_display.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_27
0x4003aba	    0x48c7c6000000	                              mov rsi, 0	      4028	intel_display.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_28
0x4003ac1	      0xbf04000000	                              mov edi, 4	      4028	intel_display.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_28
0x4003ac6	      0xe800000000	                          call 0x4003acb	      4028	intel_display.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_28
0x4003acb	      0xe903feffff	                           jmp 0x40038d3	      4028	intel_display.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_28
0x4003ad0	      0x25ffff3fc0	                     and eax, 0xc03fffff	      4028	intel_display.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_28
0x4003ad5	            0x89c2	                            mov edx, eax	      4028	intel_display.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_28
0x4003ad7	    0x81ca00000010	                      or edx, 0x10000000	      4045	intel_display.c	FUNCTION_126	IF_5
0x4003add	      0xe922feffff	                           jmp 0x4003904	      4045	intel_display.c	FUNCTION_126	IF_5
0x4003ae2	          0x80e4fc	                            and ah, 0xfc	      4054	intel_display.c	FUNCTION_126	IF_6
0x4003ae5	            0x89c2	                            mov edx, eax	      4054	intel_display.c	FUNCTION_126	IF_6
0x4003ae7	          0x80ce01	                                or dh, 1	      4055	intel_display.c	FUNCTION_126	IF_6
0x4003aea	      0xe95ffeffff	                           jmp 0x400394e	      4055	intel_display.c	FUNCTION_126	IF_6
skl_plane_ctl	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,6:ELSE,1:functions,0:CALL,9	191
0x400f470	            0x4156	                                push r14	      3562	intel_display.c	FUNCTION_117
0x400f472	            0x4155	                                push r13	      3562	intel_display.c	FUNCTION_117
0x400f474	            0x4154	                                push r12	      3562	intel_display.c	FUNCTION_117
0x400f476	              0x55	                                push rbp	      3562	intel_display.c	FUNCTION_117
0x400f477	              0x53	                                push rbx	      3562	intel_display.c	FUNCTION_117
0x400f478	          0x4889f3	                            mov rbx, rsi	      3562	intel_display.c	FUNCTION_117
0x400f47b	        0x4883ec08	                              sub rsp, 8	      3562	intel_display.c	FUNCTION_117
0x400f47f	          0x488b06	                    mov rax, qword [rsi]	      3564	intel_display.c	FUNCTION_117	CALL_1
0x400f482	        0x4c8b6e10	            mov r13, qword [rsi + 0x10] 	      3565	intel_display.c	FUNCTION_117
0x400f486	          0x8b6e40	            mov ebp, dword [rsi + 0x40] 	      3566	intel_display.c	FUNCTION_117
0x400f489	          0x4c8b20	                    mov r12, qword [rax]	      3564	intel_display.c	FUNCTION_117	CALL_1
0x400f48c	    0x4180bc245c06	               cmp byte [r12 + 0x65c], 9	      3572	intel_display.c	FUNCTION_117	IF_1	CALL_3
0x400f495	     0xf862e010000	                           jbe 0x400f5c9	      3572	intel_display.c	FUNCTION_117	IF_1	CALL_3
0x400f49b	        0x498b4548	            mov rax, qword [r13 + 0x48] 	      3572	intel_display.c	FUNCTION_117	IF_1	CALL_3
0x400f49f	    0x41be00000080	                    mov r14d, 0x80000000	      3570	intel_display.c	FUNCTION_117
0x400f4a5	            0x8b30	                    mov esi, dword [rax]	      3570	intel_display.c	FUNCTION_117
0x400f4a7	    0x81fe41523234	                     cmp esi, 0x34325241	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f4ad	     0xf84f8020000	                            je 0x400f7ab	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f4b3	     0xf8672010000	                           jbe 0x400f62b	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f4b9	    0x81fe59565955	                     cmp esi, 0x55595659	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f4bf	     0xf845e020000	                            je 0x400f723	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f4c5	     0xf8672020000	                           jbe 0x400f73d	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f4cb	    0x81fe56595559	                     cmp esi, 0x59555956	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f4d1	      0xba00000300	                        mov edx, 0x30000	      3466	intel_display.c	FUNCTION_111	SWITCH_1
0x400f4d6	            0x742e	                            je 0x400f506	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f4d8	    0x81fe55595659	                     cmp esi, 0x59565955	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f4de	      0xba00000100	                        mov edx, 0x10000	      3464	intel_display.c	FUNCTION_111	SWITCH_1
0x400f4e3	            0x7421	                            je 0x400f506	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f4e5	            0x31d2	                            xor edx, edx	      3460	intel_display.c	FUNCTION_111	SWITCH_1
0x400f4e7	    0x81fe59555956	                     cmp esi, 0x56595559	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f4ed	            0x7417	                            je 0x400f506	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f4ef	    0x48c7c2000000	                              mov rdx, 0	      3468	intel_display.c	FUNCTION_111	SWITCH_1	CALL_1
0x400f4f6	    0x48c7c7000000	                              mov rdi, 0	      3468	intel_display.c	FUNCTION_111	SWITCH_1	CALL_1
0x400f4fd	      0xe800000000	                          call 0x400f502	      3468	intel_display.c	FUNCTION_111	SWITCH_1	CALL_1
0x400f502	             0xf0b	                                     ud2	      3468	intel_display.c	FUNCTION_111	SWITCH_1	CALL_1
0x400f504	            0x31d2	                            xor edx, edx	      3471	intel_display.c	FUNCTION_111
0x400f506	        0x498b7578	            mov rsi, qword [r13 + 0x78] 	      3587	intel_display.c	FUNCTION_117	CALL_6
0x400f50a	          0x4109d6	                            or r14d, edx	      3586	intel_display.c	FUNCTION_117	CALL_5
0x400f50d	    0x48ba02000000	          movabs rdx, 0x100000000000002 	      3503	intel_display.c	FUNCTION_114	SWITCH_1
0x400f517	          0x4839d6	                            cmp rsi, rdx	      3503	intel_display.c	FUNCTION_114	SWITCH_1
0x400f51a	     0xf843b020000	                            je 0x400f75b	      3503	intel_display.c	FUNCTION_114	SWITCH_1
0x400f520	     0xf8655010000	                           jbe 0x400f67b	      3503	intel_display.c	FUNCTION_114	SWITCH_1
0x400f526	    0x48b904000000	          movabs rcx, 0x100000000000004 	      3503	intel_display.c	FUNCTION_114	SWITCH_1
0x400f530	      0xba00900000	                         mov edx, 0x9000	      3511	intel_display.c	FUNCTION_114	SWITCH_1
0x400f535	          0x4839ce	                            cmp rsi, rcx	      3503	intel_display.c	FUNCTION_114	SWITCH_1
0x400f538	            0x741f	                            je 0x400f559	      3503	intel_display.c	FUNCTION_114	SWITCH_1
0x400f53a	      0xba00140000	                         mov edx, 0x1400	      3513	intel_display.c	FUNCTION_114	SWITCH_1
0x400f53f	            0x7218	                            jb 0x400f559	      3503	intel_display.c	FUNCTION_114	SWITCH_1
0x400f541	    0x48b905000000	          movabs rcx, 0x100000000000005 	      3503	intel_display.c	FUNCTION_114	SWITCH_1
0x400f54b	      0xba00940000	                         mov edx, 0x9400	      3515	intel_display.c	FUNCTION_114	SWITCH_1
0x400f550	          0x4839ce	                            cmp rsi, rcx	      3503	intel_display.c	FUNCTION_114	SWITCH_1
0x400f553	     0xf8545010000	                           jne 0x400f69e	      3503	intel_display.c	FUNCTION_114	SWITCH_1
0x400f559	            0x89ee	                            mov esi, ebp	      3588	intel_display.c	FUNCTION_117	CALL_7
0x400f55b	          0x4109d6	                            or r14d, edx	      3587	intel_display.c	FUNCTION_117	CALL_6
0x400f55e	          0x83e60f	                            and esi, 0xf	      3588	intel_display.c	FUNCTION_117	CALL_7
0x400f561	          0x4589f5	                          mov r13d, r14d	      3587	intel_display.c	FUNCTION_117	CALL_6
0x400f564	          0x83fe02	                              cmp esi, 2	      3525	intel_display.c	FUNCTION_115	SWITCH_1
0x400f567	     0xf845c010000	                            je 0x400f6c9	      3525	intel_display.c	FUNCTION_115	SWITCH_1
0x400f56d	     0xf8689010000	                           jbe 0x400f6fc	      3525	intel_display.c	FUNCTION_115	SWITCH_1
0x400f573	          0x83fe04	                              cmp esi, 4	      3525	intel_display.c	FUNCTION_115	SWITCH_1
0x400f576	      0xba02000000	                              mov edx, 2	      3535	intel_display.c	FUNCTION_115	SWITCH_1
0x400f57b	            0x740e	                            je 0x400f58b	      3525	intel_display.c	FUNCTION_115	SWITCH_1
0x400f57d	          0x83fe08	                              cmp esi, 8	      3525	intel_display.c	FUNCTION_115	SWITCH_1
0x400f580	      0xba01000000	                              mov edx, 1	      3537	intel_display.c	FUNCTION_115	SWITCH_1
0x400f585	     0xf857c010000	                           jne 0x400f707	      3525	intel_display.c	FUNCTION_115	SWITCH_1
0x400f58b	          0x4489e8	                           mov eax, r13d	      3588	intel_display.c	FUNCTION_117	CALL_7
0x400f58e	             0x9d0	                             or eax, edx	      3588	intel_display.c	FUNCTION_117	CALL_7
0x400f590	    0x4180bc245c06	               cmp byte [r12 + 0x65c], 9	      3590	intel_display.c	FUNCTION_117	IF_4	CALL_8
0x400f599	     0xf8743010000	                            ja 0x400f6e2	      3590	intel_display.c	FUNCTION_117	IF_4	CALL_8
0x400f59f	    0x8b93cc000000	            mov edx, dword [rbx + 0xcc] 	      3594	intel_display.c	FUNCTION_117	IF_5
0x400f5a5	          0xf6c202	                              test dl, 2	      3594	intel_display.c	FUNCTION_117	IF_5
0x400f5a8	     0xf85bb000000	                           jne 0x400f669	      3594	intel_display.c	FUNCTION_117	IF_5
0x400f5ae	            0x89c1	                            mov ecx, eax	      3597	intel_display.c	FUNCTION_117	ELSE_1	IF_6
0x400f5b0	    0x81c900002000	                        or ecx, 0x200000	      3597	intel_display.c	FUNCTION_117	ELSE_1	IF_6
0x400f5b6	          0x83e204	                              and edx, 4	      3597	intel_display.c	FUNCTION_117	ELSE_1	IF_6
0x400f5b9	           0xf45c1	                         cmovne eax, ecx	      3597	intel_display.c	FUNCTION_117	ELSE_1	IF_6
0x400f5bc	        0x4883c408	                              add rsp, 8	      3600	intel_display.c	FUNCTION_117
0x400f5c0	              0x5b	                                 pop rbx	      3600	intel_display.c	FUNCTION_117
0x400f5c1	              0x5d	                                 pop rbp	      3600	intel_display.c	FUNCTION_117
0x400f5c2	            0x415c	                                 pop r12	      3600	intel_display.c	FUNCTION_117
0x400f5c4	            0x415d	                                 pop r13	      3600	intel_display.c	FUNCTION_117
0x400f5c6	            0x415e	                                 pop r14	      3600	intel_display.c	FUNCTION_117
0x400f5c8	              0xc3	                                     ret	      3600	intel_display.c	FUNCTION_117
0x400f5c9	    0x418b94246406	           mov edx, dword [r12 + 0x664] 	      3572	intel_display.c	FUNCTION_117	IF_1	CALL_3
0x400f5d1	        0x498b4548	            mov rax, qword [r13 + 0x48] 	      3573	intel_display.c	FUNCTION_117	IF_1	CALL_4
0x400f5d5	    0x41be00000080	                    mov r14d, 0x80000000	      3570	intel_display.c	FUNCTION_117
0x400f5db	    0x81e200000002	                      and edx, 0x2000000	      3572	intel_display.c	FUNCTION_117	IF_1	CALL_3
0x400f5e1	            0x8b30	                    mov esi, dword [rax]	      3573	intel_display.c	FUNCTION_117	IF_1	CALL_4
0x400f5e3	     0xf85befeffff	                           jne 0x400f4a7	      3572	intel_display.c	FUNCTION_117	IF_1	CALL_3
0x400f5e9	    0x81fe41423234	                     cmp esi, 0x34324241	      3481	intel_display.c	FUNCTION_112	SWITCH_1
0x400f5ef	     0xf8438010000	                            je 0x400f72d	      3481	intel_display.c	FUNCTION_112	SWITCH_1
0x400f5f5	    0x81fe41523234	                     cmp esi, 0x34325241	      3481	intel_display.c	FUNCTION_112	SWITCH_1
0x400f5fb	    0x41be002080c0	                    mov r14d, 0xc0802000	      3481	intel_display.c	FUNCTION_112	SWITCH_1
0x400f601	     0xf8426010000	                            je 0x400f72d	      3481	intel_display.c	FUNCTION_112	SWITCH_1
0x400f607	    0x81ca002084c0	                      or edx, 0xc0842000	      3580	intel_display.c	FUNCTION_117	IF_1	IF_2
0x400f60d	        0x837b4c01	               cmp dword [rbx + 0x4c], 1	      3580	intel_display.c	FUNCTION_117	IF_1	IF_2
0x400f611	        0x440f44f2	                         cmove r14d, edx	      3580	intel_display.c	FUNCTION_117	IF_1	IF_2
0x400f615	          0x4489f2	                           mov edx, r14d	      3583	intel_display.c	FUNCTION_117	IF_1	IF_3
0x400f618	    0x81ca00000010	                      or edx, 0x10000000	      3583	intel_display.c	FUNCTION_117	IF_1	IF_3
0x400f61e	        0x837b5001	               cmp dword [rbx + 0x50], 1	      3583	intel_display.c	FUNCTION_117	IF_1	IF_3
0x400f622	        0x440f44f2	                         cmove r14d, edx	      3583	intel_display.c	FUNCTION_117	IF_1	IF_3
0x400f626	      0xe97cfeffff	                           jmp 0x400f4a7	      3583	intel_display.c	FUNCTION_117	IF_1	IF_3
0x400f62b	    0x81fe58523330	                     cmp esi, 0x30335258	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f631	      0xba00000002	                      mov edx, 0x2000000	      3456	intel_display.c	FUNCTION_111	SWITCH_1
0x400f636	     0xf84cafeffff	                            je 0x400f506	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f63c	     0xf8723010000	                            ja 0x400f765	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f642	    0x81fe43382020	                     cmp esi, 0x20203843	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f648	      0xba0000000c	                      mov edx, 0xc000000	      3446	intel_display.c	FUNCTION_111	SWITCH_1
0x400f64d	     0xf84b3feffff	                            je 0x400f506	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f653	    0x81fe58423330	                     cmp esi, 0x30334258	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f659	      0xba00001002	                      mov edx, 0x2100000	      3458	intel_display.c	FUNCTION_111	SWITCH_1
0x400f65e	     0xf84a2feffff	                            je 0x400f506	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f664	      0xe986feffff	                           jmp 0x400f4ef	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f669	        0x4883c408	                              add rsp, 8	      3600	intel_display.c	FUNCTION_117
0x400f66d	       0xd00004000	                        or eax, 0x400000	      3595	intel_display.c	FUNCTION_117	IF_5
0x400f672	              0x5b	                                 pop rbx	      3600	intel_display.c	FUNCTION_117
0x400f673	              0x5d	                                 pop rbp	      3600	intel_display.c	FUNCTION_117
0x400f674	            0x415c	                                 pop r12	      3600	intel_display.c	FUNCTION_117
0x400f676	            0x415d	                                 pop r13	      3600	intel_display.c	FUNCTION_117
0x400f678	            0x415e	                                 pop r14	      3600	intel_display.c	FUNCTION_117
0x400f67a	              0xc3	                                     ret	      3600	intel_display.c	FUNCTION_117
0x400f67b	            0x31d2	                            xor edx, edx	      3520	intel_display.c	FUNCTION_114
0x400f67d	          0x4885f6	                           test rsi, rsi	      3503	intel_display.c	FUNCTION_114	SWITCH_1
0x400f680	     0xf84d3feffff	                            je 0x400f559	      3503	intel_display.c	FUNCTION_114	SWITCH_1
0x400f686	    0x48b901000000	          movabs rcx, 0x100000000000001 	      3503	intel_display.c	FUNCTION_114	SWITCH_1
0x400f690	      0xba00040000	                          mov edx, 0x400	      3507	intel_display.c	FUNCTION_114	SWITCH_1
0x400f695	          0x4839ce	                            cmp rsi, rcx	      3503	intel_display.c	FUNCTION_114	SWITCH_1
0x400f698	     0xf84bbfeffff	                            je 0x400f559	      3503	intel_display.c	FUNCTION_114	SWITCH_1
0x400f69e	    0x48c7c2000000	                              mov rdx, 0	      3517	intel_display.c	FUNCTION_114	SWITCH_1	CALL_1
0x400f6a5	    0x48c7c7000000	                              mov rdi, 0	      3517	intel_display.c	FUNCTION_114	SWITCH_1	CALL_1
0x400f6ac	      0xe800000000	                          call 0x400f6b1	      3517	intel_display.c	FUNCTION_114	SWITCH_1	CALL_1
0x400f6b1	             0xf0b	                                     ud2	      3517	intel_display.c	FUNCTION_114	SWITCH_1	CALL_1
0x400f6b3	            0x89ee	                            mov esi, ebp	      3588	intel_display.c	FUNCTION_117	CALL_7
0x400f6b5	            0x31d2	                            xor edx, edx	      3520	intel_display.c	FUNCTION_114
0x400f6b7	          0x83e60f	                            and esi, 0xf	      3588	intel_display.c	FUNCTION_117	CALL_7
0x400f6ba	          0x4109d6	                            or r14d, edx	      3587	intel_display.c	FUNCTION_117	CALL_6
0x400f6bd	          0x83fe02	                              cmp esi, 2	      3525	intel_display.c	FUNCTION_115	SWITCH_1
0x400f6c0	          0x4589f5	                          mov r13d, r14d	      3587	intel_display.c	FUNCTION_117	CALL_6
0x400f6c3	     0xf85a4feffff	                           jne 0x400f56d	      3525	intel_display.c	FUNCTION_115	SWITCH_1
0x400f6c9	      0xba03000000	                              mov edx, 3	      3533	intel_display.c	FUNCTION_115	SWITCH_1
0x400f6ce	          0x4489e8	                           mov eax, r13d	      3588	intel_display.c	FUNCTION_117	CALL_7
0x400f6d1	             0x9d0	                             or eax, edx	      3588	intel_display.c	FUNCTION_117	CALL_7
0x400f6d3	    0x4180bc245c06	               cmp byte [r12 + 0x65c], 9	      3590	intel_display.c	FUNCTION_117	IF_4	CALL_8
0x400f6dc	     0xf86bdfeffff	                           jbe 0x400f59f	      3590	intel_display.c	FUNCTION_117	IF_4	CALL_8
0x400f6e2	          0x83e530	                           and ebp, 0x30	      3547	intel_display.c	FUNCTION_116	SWITCH_1
0x400f6e5	            0x740e	                            je 0x400f6f5	      3547	intel_display.c	FUNCTION_116	SWITCH_1
0x400f6e7	          0x83fd10	                           cmp ebp, 0x10	      3547	intel_display.c	FUNCTION_116	SWITCH_1
0x400f6ea	     0xf8593000000	                           jne 0x400f783	      3547	intel_display.c	FUNCTION_116	SWITCH_1
0x400f6f0	      0xbd00010000	                          mov ebp, 0x100	      3551	intel_display.c	FUNCTION_116	SWITCH_1
0x400f6f5	             0x9e8	                             or eax, ebp	      3591	intel_display.c	FUNCTION_117	IF_4	CALL_9
0x400f6f7	      0xe9a3feffff	                           jmp 0x400f59f	      3591	intel_display.c	FUNCTION_117	IF_4	CALL_9
0x400f6fc	            0x31d2	                            xor edx, edx	      3542	intel_display.c	FUNCTION_115
0x400f6fe	          0x83fe01	                              cmp esi, 1	      3525	intel_display.c	FUNCTION_115	SWITCH_1
0x400f701	     0xf8484feffff	                            je 0x400f58b	      3525	intel_display.c	FUNCTION_115	SWITCH_1
0x400f707	    0x48c7c2000000	                              mov rdx, 0	      3539	intel_display.c	FUNCTION_115	SWITCH_1	CALL_1
0x400f70e	    0x48c7c7000000	                              mov rdi, 0	      3539	intel_display.c	FUNCTION_115	SWITCH_1	CALL_1
0x400f715	      0xe800000000	                          call 0x400f71a	      3539	intel_display.c	FUNCTION_115	SWITCH_1	CALL_1
0x400f71a	             0xf0b	                                     ud2	      3539	intel_display.c	FUNCTION_115	SWITCH_1	CALL_1
0x400f71c	            0x31d2	                            xor edx, edx	      3542	intel_display.c	FUNCTION_115
0x400f71e	      0xe968feffff	                           jmp 0x400f58b	      3542	intel_display.c	FUNCTION_115
0x400f723	      0xba00000200	                        mov edx, 0x20000	      3462	intel_display.c	FUNCTION_111	SWITCH_1
0x400f728	      0xe9d9fdffff	                           jmp 0x400f506	      3462	intel_display.c	FUNCTION_111	SWITCH_1
0x400f72d	    0x41be202080c0	                    mov r14d, 0xc0802020	      3481	intel_display.c	FUNCTION_112	SWITCH_1
0x400f733	      0xba20000000	                           mov edx, 0x20	      3484	intel_display.c	FUNCTION_112	SWITCH_1
0x400f738	      0xe9cafeffff	                           jmp 0x400f607	      3484	intel_display.c	FUNCTION_112	SWITCH_1
0x400f73d	    0x81fe58523234	                     cmp esi, 0x34325258	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f743	            0x7466	                            je 0x400f7ab	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f745	    0x81fe52473136	                     cmp esi, 0x36314752	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f74b	      0xba0000000e	                      mov edx, 0xe000000	      3448	intel_display.c	FUNCTION_111	SWITCH_1
0x400f750	     0xf84b0fdffff	                            je 0x400f506	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f756	      0xe994fdffff	                           jmp 0x400f4ef	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f75b	      0xba00100000	                         mov edx, 0x1000	      3509	intel_display.c	FUNCTION_114	SWITCH_1
0x400f760	      0xe9f4fdffff	                           jmp 0x400f559	      3509	intel_display.c	FUNCTION_114	SWITCH_1
0x400f765	    0x81fe41423234	                     cmp esi, 0x34324241	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f76b	            0x740c	                            je 0x400f779	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f76d	    0x81fe58423234	                     cmp esi, 0x34324258	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f773	     0xf8576fdffff	                           jne 0x400f4ef	      3444	intel_display.c	FUNCTION_111	SWITCH_1
0x400f779	      0xba00001004	                      mov edx, 0x4100000	      3451	intel_display.c	FUNCTION_111	SWITCH_1
0x400f77e	      0xe983fdffff	                           jmp 0x400f506	      3451	intel_display.c	FUNCTION_111	SWITCH_1
0x400f783	            0x89ee	                            mov esi, ebp	      3554	intel_display.c	FUNCTION_116	SWITCH_1	CALL_1
0x400f785	    0x48c7c2000000	                              mov rdx, 0	      3554	intel_display.c	FUNCTION_116	SWITCH_1	CALL_1
0x400f78c	    0x48c7c7000000	                              mov rdi, 0	      3554	intel_display.c	FUNCTION_116	SWITCH_1	CALL_1
0x400f793	        0x89442404	                mov dword [rsp + 4], eax	      3554	intel_display.c	FUNCTION_116	SWITCH_1	CALL_1
0x400f797	      0xe800000000	                          call 0x400f79c	      3554	intel_display.c	FUNCTION_116	SWITCH_1	CALL_1
0x400f79c	             0xf0b	                                     ud2	      3554	intel_display.c	FUNCTION_116	SWITCH_1	CALL_1
0x400f79e	        0x8b442404	                mov eax, dword [rsp + 4]	      3557	intel_display.c	FUNCTION_116
0x400f7a2	            0x31ed	                            xor ebp, ebp	      3557	intel_display.c	FUNCTION_116
0x400f7a4	             0x9e8	                             or eax, ebp	      3591	intel_display.c	FUNCTION_117	IF_4	CALL_9
0x400f7a6	      0xe9f4fdffff	                           jmp 0x400f59f	      3591	intel_display.c	FUNCTION_117	IF_4	CALL_9
0x400f7ab	      0xba00000004	mov edx, loc.imp.intel_crtc_set_crc_source 	      3454	intel_display.c	FUNCTION_111	SWITCH_1
0x400f7b0	      0xe951fdffff	                           jmp 0x400f506	      3454	intel_display.c	FUNCTION_111	SWITCH_1
intel_cursor_base	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,2:ELSE,1:functions,0:CALL,5	28
0x4000fd0	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      9363	intel_display.c	FUNCTION_274
0x4000fd4	          0x488b07	                    mov rax, qword [rdi]	      9362	intel_display.c	FUNCTION_274	CALL_1
0x4000fd7	          0x4885d2	                           test rdx, rdx	      9364	intel_display.c	FUNCTION_274	CALL_2
0x4000fda	          0x488b08	                    mov rcx, qword [rax]	      9362	intel_display.c	FUNCTION_274	CALL_1
0x4000fdd	            0x7453	                            je 0x4001032	      9364	intel_display.c	FUNCTION_274	CALL_2
0x4000fdf	    0x488b82c80000	            mov rax, qword [rdx + 0xc8] 	      9364	intel_display.c	FUNCTION_274	CALL_2
0x4000fe6	    0x80b97a060000	               cmp byte [rcx + 0x67a], 0	      9367	intel_display.c	FUNCTION_274	IF_1	CALL_3
0x4000fed	            0x7937	                           jns 0x4001026	      9367	intel_display.c	FUNCTION_274	IF_1	CALL_3
0x4000fef	    0x488b80800200	           mov rax, qword [rax + 0x280] 	      9368	intel_display.c	FUNCTION_274	IF_1
0x4000ff6	            0x8b00	                    mov eax, dword [rax]	      9368	intel_display.c	FUNCTION_274	IF_1
0x4000ff8	     0x38798000000	             add eax, dword [rdi + 0x98]	      9372	intel_display.c	FUNCTION_274
0x4000ffe	    0xf68178060000	          test byte [rcx + 0x678], 0x20 	      9375	intel_display.c	FUNCTION_274	IF_2	CALL_5
0x4001005	            0x741d	                            je 0x4001024	      9375	intel_display.c	FUNCTION_274	IF_2	CALL_5
0x4001007	        0xf6474004	               test byte [rdi + 0x40], 4	      9375	intel_display.c	FUNCTION_274	IF_2	CALL_5
0x400100b	            0x7417	                            je 0x4001024	      9375	intel_display.c	FUNCTION_274	IF_2	CALL_5
0x400100d	          0x8b4f2c	            mov ecx, dword [rdi + 0x2c] 	      9377	intel_display.c	FUNCTION_274	IF_2
0x4001010	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	      9378	intel_display.c	FUNCTION_274	IF_2
0x4001014	         0xfaf4f28	            imul ecx, dword [rdi + 0x28]	      9377	intel_display.c	FUNCTION_274	IF_2
0x4001018	         0xfb65206	               movzx edx, byte [rdx + 6]	      9377	intel_display.c	FUNCTION_274	IF_2
0x400101c	          0x83e901	                              sub ecx, 1	      9377	intel_display.c	FUNCTION_274	IF_2
0x400101f	           0xfafca	                           imul ecx, edx	      9377	intel_display.c	FUNCTION_274	IF_2
0x4001022	             0x1c8	                            add eax, ecx	      9377	intel_display.c	FUNCTION_274	IF_2
0x4001024	            0xf3c3	                                     ret	      9381	intel_display.c	FUNCTION_274
0x4001026	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	      9381	intel_display.c	FUNCTION_274
0x400102d	          0x8b4008	                mov eax, dword [rax + 8]	       220	i915_vma.h	FUNCTION_748	CALL_8
0x4001030	            0xebc6	                           jmp 0x4000ff8	       220	i915_vma.h	FUNCTION_748	CALL_8
0x4001032	            0x31c0	                            xor eax, eax	      9364	intel_display.c	FUNCTION_274	CALL_2
0x4001034	            0xebb0	                           jmp 0x4000fe6	      9364	intel_display.c	FUNCTION_274	CALL_2
intel_port_to_power_domain	FOR,0:SWITCH,1:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,1	24
0x40115a0	          0x83ff05	                              cmp edi, 5	      5727	intel_display.c	FUNCTION_173	SWITCH_1
0x40115a3	            0x7733	                            ja 0x40115d8	      5727	intel_display.c	FUNCTION_173	SWITCH_1
0x40115a5	            0x89ff	                            mov edi, edi	      5727	intel_display.c	FUNCTION_173	SWITCH_1
0x40115a7	    0x488b04fd0000	                  mov rax, qword [rdi*8]	      5727	intel_display.c	FUNCTION_173	SWITCH_1
0x40115af	      0xe900000000	                           jmp 0x40115b4	      5727	intel_display.c	FUNCTION_173	SWITCH_1
0x40115b4	      0xb80c000000	                            mov eax, 0xc	      5729	intel_display.c	FUNCTION_173	SWITCH_1
0x40115b9	              0xc3	                                     ret	      5744	intel_display.c	FUNCTION_173
0x40115ba	      0xb80d000000	                            mov eax, 0xd	      5731	intel_display.c	FUNCTION_173	SWITCH_1
0x40115bf	              0xc3	                                     ret	      5731	intel_display.c	FUNCTION_173	SWITCH_1
0x40115c0	      0xb80e000000	                            mov eax, 0xe	      5733	intel_display.c	FUNCTION_173	SWITCH_1
0x40115c5	              0xc3	                                     ret	      5733	intel_display.c	FUNCTION_173	SWITCH_1
0x40115c6	      0xb80f000000	                            mov eax, 0xf	      5735	intel_display.c	FUNCTION_173	SWITCH_1
0x40115cb	              0xc3	                                     ret	      5735	intel_display.c	FUNCTION_173	SWITCH_1
0x40115cc	      0xb810000000	                           mov eax, 0x10	      5737	intel_display.c	FUNCTION_173	SWITCH_1
0x40115d1	              0xc3	                                     ret	      5737	intel_display.c	FUNCTION_173	SWITCH_1
0x40115d2	      0xb811000000	                           mov eax, 0x11	      5739	intel_display.c	FUNCTION_173	SWITCH_1
0x40115d7	              0xc3	                                     ret	      5739	intel_display.c	FUNCTION_173	SWITCH_1
0x40115d8	          0x4863f7	                         movsxd rsi, edi	      5741	intel_display.c	FUNCTION_173	SWITCH_1	CALL_1
0x40115db	    0x48c7c2000000	                              mov rdx, 0	      5741	intel_display.c	FUNCTION_173	SWITCH_1	CALL_1
0x40115e2	    0x48c7c7000000	                              mov rdi, 0	      5741	intel_display.c	FUNCTION_173	SWITCH_1	CALL_1
0x40115e9	      0xe800000000	                          call 0x40115ee	      5741	intel_display.c	FUNCTION_173	SWITCH_1	CALL_1
0x40115ee	             0xf0b	                                     ud2	      5741	intel_display.c	FUNCTION_173	SWITCH_1	CALL_1
0x40115f0	      0xb81a000000	                           mov eax, 0x1a	      5742	intel_display.c	FUNCTION_173	SWITCH_1
0x40115f5	              0xc3	                                     ret	      5742	intel_display.c	FUNCTION_173	SWITCH_1
ironlake_fdi_link_train	FOR,2:SWITCH,0:DO,0:WHILE,0:IF,4:ELSE,0:functions,0:CALL,41	186
0x400da40	            0x4157	                                push r15	      3864	intel_display.c	FUNCTION_125
0x400da42	            0x4156	                                push r14	      3864	intel_display.c	FUNCTION_125
0x400da44	          0x4989f7	                            mov r15, rsi	      3864	intel_display.c	FUNCTION_125
0x400da47	            0x4155	                                push r13	      3864	intel_display.c	FUNCTION_125
0x400da49	            0x4154	                                push r12	      3864	intel_display.c	FUNCTION_125
0x400da4b	      0xba01000000	                              mov edx, 1	      3872	intel_display.c	FUNCTION_125	CALL_2
0x400da50	              0x55	                                push rbp	      3864	intel_display.c	FUNCTION_125
0x400da51	              0x53	                                push rbx	      3864	intel_display.c	FUNCTION_125
0x400da52	    0x448ba7b00400	          mov r12d, dword [rdi + 0x4b0] 	      3867	intel_display.c	FUNCTION_125
0x400da59	          0x488b1f	                    mov rbx, qword [rdi]	      3865	intel_display.c	FUNCTION_125
0x400da5c	          0x4489e5	                           mov ebp, r12d	      3876	intel_display.c	FUNCTION_125	CALL_3
0x400da5f	          0x4489e6	                           mov esi, r12d	      3872	intel_display.c	FUNCTION_125	CALL_2
0x400da62	          0x4889df	                            mov rdi, rbx	      3872	intel_display.c	FUNCTION_125	CALL_2
0x400da65	          0xc1e50c	                            shl ebp, 0xc	      3876	intel_display.c	FUNCTION_125	CALL_3
0x400da68	    0x468d24a50c20	             lea r12d, [r12*4 + 0xc200c]	      3903	intel_display.c	FUNCTION_125	CALL_18
0x400da70	    0x448dad18000f	               lea r13d, [rbp + 0xf0018]	      3876	intel_display.c	FUNCTION_125	CALL_3
0x400da77	    0x448db5000106	               lea r14d, [rbp + 0x60100]	      3885	intel_display.c	FUNCTION_125	CALL_8
0x400da7e	      0xe800000000	                          call 0x400da83	      3872	intel_display.c	FUNCTION_125	CALL_2
0x400da83	          0x4489ee	                           mov esi, r13d	      3877	intel_display.c	FUNCTION_125	CALL_4
0x400da86	      0xba01000000	                              mov edx, 1	      3877	intel_display.c	FUNCTION_125	CALL_4
0x400da8b	          0x4889df	                            mov rdi, rbx	      3877	intel_display.c	FUNCTION_125	CALL_4
0x400da8e	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      3877	intel_display.c	FUNCTION_125	CALL_4
0x400da95	      0xe800000000	                          call 0x400da9a	      3877	intel_display.c	FUNCTION_125	CALL_4
0x400da9a	          0x80e4fc	                            and ah, 0xfc	      3880	intel_display.c	FUNCTION_125	CALL_5
0x400da9d	      0xb901000000	                              mov ecx, 1	      3880	intel_display.c	FUNCTION_125	CALL_5
0x400daa2	          0x4489ee	                           mov esi, r13d	      3880	intel_display.c	FUNCTION_125	CALL_5
0x400daa5	            0x89c2	                            mov edx, eax	      3880	intel_display.c	FUNCTION_125	CALL_5
0x400daa7	          0x4889df	                            mov rdi, rbx	      3880	intel_display.c	FUNCTION_125	CALL_5
0x400daaa	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      3880	intel_display.c	FUNCTION_125	CALL_5
0x400dab1	      0xe800000000	                          call 0x400dab6	      3880	intel_display.c	FUNCTION_125	CALL_5
0x400dab6	          0x4489ee	                           mov esi, r13d	      3881	intel_display.c	FUNCTION_125	CALL_6
0x400dab9	      0xba01000000	                              mov edx, 1	      3881	intel_display.c	FUNCTION_125	CALL_6
0x400dabe	          0x4889df	                            mov rdi, rbx	      3881	intel_display.c	FUNCTION_125	CALL_6
0x400dac1	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      3881	intel_display.c	FUNCTION_125	CALL_6
0x400dac8	    0x448dad0c000f	               lea r13d, [rbp + 0xf000c]	      3893	intel_display.c	FUNCTION_125	CALL_12
0x400dacf	    0x81c514000f00	                        add ebp, 0xf0014	      3907	intel_display.c	FUNCTION_125	CALL_21
0x400dad5	      0xe800000000	                          call 0x400dada	      3881	intel_display.c	FUNCTION_125	CALL_6
0x400dada	      0xbf9ad40900	                        mov edi, 0x9d49a	      3882	intel_display.c	FUNCTION_125	CALL_7
0x400dadf	      0xe800000000	                          call 0x400dae4	      3882	intel_display.c	FUNCTION_125	CALL_7
0x400dae4	      0xba01000000	                              mov edx, 1	      3886	intel_display.c	FUNCTION_125	CALL_9
0x400dae9	          0x4489f6	                           mov esi, r14d	      3886	intel_display.c	FUNCTION_125	CALL_9
0x400daec	          0x4889df	                            mov rdi, rbx	      3886	intel_display.c	FUNCTION_125	CALL_9
0x400daef	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      3886	intel_display.c	FUNCTION_125	CALL_9
0x400daf6	      0xe800000000	                          call 0x400dafb	      3886	intel_display.c	FUNCTION_125	CALL_9
0x400dafb	    0x418b97300300	           mov edx, dword [r15 + 0x330] 	      3888	intel_display.c	FUNCTION_125	CALL_10
0x400db02	      0x25ffffc7ff	                     and eax, 0xffc7ffff	      3887	intel_display.c	FUNCTION_125
0x400db07	      0xb901000000	                              mov ecx, 1	      3891	intel_display.c	FUNCTION_125	CALL_11
0x400db0c	          0x4489f6	                           mov esi, r14d	      3891	intel_display.c	FUNCTION_125	CALL_11
0x400db0f	          0x4889df	                            mov rdi, rbx	      3891	intel_display.c	FUNCTION_125	CALL_11
0x400db12	    0x41bf05000000	                             mov r15d, 5	      3907	intel_display.c	FUNCTION_125	CALL_21
0x400db18	          0x83ea01	                              sub edx, 1	      3888	intel_display.c	FUNCTION_125	CALL_10
0x400db1b	          0xc1e213	                           shl edx, 0x13	      3888	intel_display.c	FUNCTION_125	CALL_10
0x400db1e	             0x9c2	                             or edx, eax	      3888	intel_display.c	FUNCTION_125	CALL_10
0x400db20	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      3891	intel_display.c	FUNCTION_125	CALL_11
0x400db27	    0x81e2ffffffcf	                     and edx, 0xcfffffff	      3891	intel_display.c	FUNCTION_125	CALL_11
0x400db2d	    0x81ca00000080	                      or edx, 0x80000000	      3891	intel_display.c	FUNCTION_125	CALL_11
0x400db33	      0xe800000000	                          call 0x400db38	      3891	intel_display.c	FUNCTION_125	CALL_11
0x400db38	      0xba01000000	                              mov edx, 1	      3894	intel_display.c	FUNCTION_125	CALL_13
0x400db3d	          0x4489ee	                           mov esi, r13d	      3894	intel_display.c	FUNCTION_125	CALL_13
0x400db40	          0x4889df	                            mov rdi, rbx	      3894	intel_display.c	FUNCTION_125	CALL_13
0x400db43	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      3894	intel_display.c	FUNCTION_125	CALL_13
0x400db4a	      0xe800000000	                          call 0x400db4f	      3894	intel_display.c	FUNCTION_125	CALL_13
0x400db4f	      0x25ffffffcf	                     and eax, 0xcfffffff	      3897	intel_display.c	FUNCTION_125	CALL_14
0x400db54	      0xb901000000	                              mov ecx, 1	      3897	intel_display.c	FUNCTION_125	CALL_14
0x400db59	          0x4489ee	                           mov esi, r13d	      3897	intel_display.c	FUNCTION_125	CALL_14
0x400db5c	            0x89c2	                            mov edx, eax	      3897	intel_display.c	FUNCTION_125	CALL_14
0x400db5e	          0x4889df	                            mov rdi, rbx	      3897	intel_display.c	FUNCTION_125	CALL_14
0x400db61	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      3897	intel_display.c	FUNCTION_125	CALL_14
0x400db68	    0x81ca00000080	                      or edx, 0x80000000	      3897	intel_display.c	FUNCTION_125	CALL_14
0x400db6e	      0xe800000000	                          call 0x400db73	      3897	intel_display.c	FUNCTION_125	CALL_14
0x400db73	            0x31d2	                            xor edx, edx	      3899	intel_display.c	FUNCTION_125	CALL_15
0x400db75	          0x4489ee	                           mov esi, r13d	      3899	intel_display.c	FUNCTION_125	CALL_15
0x400db78	          0x4889df	                            mov rdi, rbx	      3899	intel_display.c	FUNCTION_125	CALL_15
0x400db7b	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      3899	intel_display.c	FUNCTION_125	CALL_15
0x400db82	      0xe800000000	                          call 0x400db87	      3899	intel_display.c	FUNCTION_125	CALL_15
0x400db87	      0xbf9ad40900	                        mov edi, 0x9d49a	      3900	intel_display.c	FUNCTION_125	CALL_16
0x400db8c	      0xe800000000	                          call 0x400db91	      3900	intel_display.c	FUNCTION_125	CALL_16
0x400db91	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      3903	intel_display.c	FUNCTION_125	CALL_18
0x400db98	      0xb901000000	                              mov ecx, 1	      3903	intel_display.c	FUNCTION_125	CALL_18
0x400db9d	      0xba02000000	                              mov edx, 2	      3903	intel_display.c	FUNCTION_125	CALL_18
0x400dba2	          0x4489e6	                           mov esi, r12d	      3903	intel_display.c	FUNCTION_125	CALL_18
0x400dba5	          0x4889df	                            mov rdi, rbx	      3903	intel_display.c	FUNCTION_125	CALL_18
0x400dba8	      0xe800000000	                          call 0x400dbad	      3903	intel_display.c	FUNCTION_125	CALL_18
0x400dbad	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      3904	intel_display.c	FUNCTION_125	CALL_20
0x400dbb4	      0xb901000000	                              mov ecx, 1	      3904	intel_display.c	FUNCTION_125	CALL_20
0x400dbb9	      0xba03000000	                              mov edx, 3	      3904	intel_display.c	FUNCTION_125	CALL_20
0x400dbbe	          0x4489e6	                           mov esi, r12d	      3904	intel_display.c	FUNCTION_125	CALL_20
0x400dbc1	          0x4889df	                            mov rdi, rbx	      3904	intel_display.c	FUNCTION_125	CALL_20
0x400dbc4	      0xe800000000	                          call 0x400dbc9	      3904	intel_display.c	FUNCTION_125	CALL_20
0x400dbc9	      0xba01000000	                              mov edx, 1	      3909	intel_display.c	FUNCTION_125	FOR_1	CALL_22
0x400dbce	            0x89ee	                            mov esi, ebp	      3909	intel_display.c	FUNCTION_125	FOR_1	CALL_22
0x400dbd0	          0x4889df	                            mov rdi, rbx	      3909	intel_display.c	FUNCTION_125	FOR_1	CALL_22
0x400dbd3	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      3909	intel_display.c	FUNCTION_125	FOR_1	CALL_22
0x400dbda	      0xe800000000	                          call 0x400dbdf	      3909	intel_display.c	FUNCTION_125	FOR_1	CALL_22
0x400dbdf	    0x48c7c6000000	                              mov rsi, 0	      3910	intel_display.c	FUNCTION_125	FOR_1	CALL_23
0x400dbe6	          0x4189c4	                           mov r12d, eax	      3909	intel_display.c	FUNCTION_125	FOR_1	CALL_22
0x400dbe9	            0x89c2	                            mov edx, eax	      3910	intel_display.c	FUNCTION_125	FOR_1	CALL_23
0x400dbeb	      0xbf04000000	                              mov edi, 4	      3910	intel_display.c	FUNCTION_125	FOR_1	CALL_23
0x400dbf0	      0xe800000000	                          call 0x400dbf5	      3910	intel_display.c	FUNCTION_125	FOR_1	CALL_23
0x400dbf5	    0x41f7c4000100	                        test r12d, 0x100	      3912	intel_display.c	FUNCTION_125	FOR_1	IF_1
0x400dbfc	     0xf850e010000	                           jne 0x400dd10	      3912	intel_display.c	FUNCTION_125	FOR_1	IF_1
0x400dc02	        0x4183ef01	                             sub r15d, 1	      3908	intel_display.c	FUNCTION_125	FOR_1
0x400dc06	            0x75c1	                           jne 0x400dbc9	      3908	intel_display.c	FUNCTION_125	FOR_1
0x400dc08	    0x48c7c7000000	                              mov rdi, 0	      3919	intel_display.c	FUNCTION_125	CALL_26
0x400dc0f	      0xe800000000	                          call 0x400dc14	      3919	intel_display.c	FUNCTION_125	CALL_26
0x400dc14	      0xba01000000	                              mov edx, 1	      3923	intel_display.c	FUNCTION_125	CALL_28
0x400dc19	          0x4489f6	                           mov esi, r14d	      3923	intel_display.c	FUNCTION_125	CALL_28
0x400dc1c	          0x4889df	                            mov rdi, rbx	      3923	intel_display.c	FUNCTION_125	CALL_28
0x400dc1f	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      3923	intel_display.c	FUNCTION_125	CALL_28
0x400dc26	      0xe800000000	                          call 0x400dc2b	      3923	intel_display.c	FUNCTION_125	CALL_28
0x400dc2b	      0x25ffffffcf	                     and eax, 0xcfffffff	      3924	intel_display.c	FUNCTION_125
0x400dc30	      0xb901000000	                              mov ecx, 1	      3926	intel_display.c	FUNCTION_125	CALL_29
0x400dc35	          0x4489f6	                           mov esi, r14d	      3926	intel_display.c	FUNCTION_125	CALL_29
0x400dc38	            0x89c2	                            mov edx, eax	      3924	intel_display.c	FUNCTION_125
0x400dc3a	          0x4889df	                            mov rdi, rbx	      3926	intel_display.c	FUNCTION_125	CALL_29
0x400dc3d	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      3926	intel_display.c	FUNCTION_125	CALL_29
0x400dc44	    0x81ca00000010	                      or edx, 0x10000000	      3926	intel_display.c	FUNCTION_125	CALL_29
0x400dc4a	      0xe800000000	                          call 0x400dc4f	      3926	intel_display.c	FUNCTION_125	CALL_29
0x400dc4f	          0x4489ee	                           mov esi, r13d	      3929	intel_display.c	FUNCTION_125	CALL_31
0x400dc52	      0xba01000000	                              mov edx, 1	      3929	intel_display.c	FUNCTION_125	CALL_31
0x400dc57	          0x4889df	                            mov rdi, rbx	      3929	intel_display.c	FUNCTION_125	CALL_31
0x400dc5a	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      3929	intel_display.c	FUNCTION_125	CALL_31
0x400dc61	      0xe800000000	                          call 0x400dc66	      3929	intel_display.c	FUNCTION_125	CALL_31
0x400dc66	      0x25ffffffcf	                     and eax, 0xcfffffff	      3930	intel_display.c	FUNCTION_125
0x400dc6b	      0xb901000000	                              mov ecx, 1	      3932	intel_display.c	FUNCTION_125	CALL_32
0x400dc70	          0x4489ee	                           mov esi, r13d	      3932	intel_display.c	FUNCTION_125	CALL_32
0x400dc73	            0x89c2	                            mov edx, eax	      3930	intel_display.c	FUNCTION_125
0x400dc75	          0x4889df	                            mov rdi, rbx	      3932	intel_display.c	FUNCTION_125	CALL_32
0x400dc78	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      3932	intel_display.c	FUNCTION_125	CALL_32
0x400dc7f	    0x81ca00000010	                      or edx, 0x10000000	      3932	intel_display.c	FUNCTION_125	CALL_32
0x400dc85	      0xe800000000	                          call 0x400dc8a	      3932	intel_display.c	FUNCTION_125	CALL_32
0x400dc8a	          0x4489ee	                           mov esi, r13d	      3934	intel_display.c	FUNCTION_125	CALL_33
0x400dc8d	            0x31d2	                            xor edx, edx	      3934	intel_display.c	FUNCTION_125	CALL_33
0x400dc8f	          0x4889df	                            mov rdi, rbx	      3934	intel_display.c	FUNCTION_125	CALL_33
0x400dc92	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      3934	intel_display.c	FUNCTION_125	CALL_33
0x400dc99	    0x41bd05000000	                             mov r13d, 5	      3937	intel_display.c	FUNCTION_125	CALL_35
0x400dc9f	      0xe800000000	                          call 0x400dca4	      3934	intel_display.c	FUNCTION_125	CALL_33
0x400dca4	      0xbf9ad40900	                        mov edi, 0x9d49a	      3935	intel_display.c	FUNCTION_125	CALL_34
0x400dca9	      0xe800000000	                          call 0x400dcae	      3935	intel_display.c	FUNCTION_125	CALL_34
0x400dcae	      0xba01000000	                              mov edx, 1	      3939	intel_display.c	FUNCTION_125	FOR_2	CALL_36
0x400dcb3	            0x89ee	                            mov esi, ebp	      3939	intel_display.c	FUNCTION_125	FOR_2	CALL_36
0x400dcb5	          0x4889df	                            mov rdi, rbx	      3939	intel_display.c	FUNCTION_125	FOR_2	CALL_36
0x400dcb8	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      3939	intel_display.c	FUNCTION_125	FOR_2	CALL_36
0x400dcbf	      0xe800000000	                          call 0x400dcc4	      3939	intel_display.c	FUNCTION_125	FOR_2	CALL_36
0x400dcc4	    0x48c7c6000000	                              mov rsi, 0	      3940	intel_display.c	FUNCTION_125	FOR_2	CALL_37
0x400dccb	          0x4189c4	                           mov r12d, eax	      3939	intel_display.c	FUNCTION_125	FOR_2	CALL_36
0x400dcce	            0x89c2	                            mov edx, eax	      3940	intel_display.c	FUNCTION_125	FOR_2	CALL_37
0x400dcd0	      0xbf04000000	                              mov edi, 4	      3940	intel_display.c	FUNCTION_125	FOR_2	CALL_37
0x400dcd5	      0xe800000000	                          call 0x400dcda	      3940	intel_display.c	FUNCTION_125	FOR_2	CALL_37
0x400dcda	    0x41f7c4000200	                        test r12d, 0x200	      3942	intel_display.c	FUNCTION_125	FOR_2	IF_3
0x400dce1	            0x755f	                           jne 0x400dd42	      3942	intel_display.c	FUNCTION_125	FOR_2	IF_3
0x400dce3	        0x4183ed01	                             sub r13d, 1	      3938	intel_display.c	FUNCTION_125	FOR_2
0x400dce7	            0x75c5	                           jne 0x400dcae	      3938	intel_display.c	FUNCTION_125	FOR_2
0x400dce9	    0x48c7c7000000	                              mov rdi, 0	      3949	intel_display.c	FUNCTION_125	CALL_40
0x400dcf0	      0xe800000000	                          call 0x400dcf5	      3949	intel_display.c	FUNCTION_125	CALL_40
0x400dcf5	              0x5b	                                 pop rbx	      3953	intel_display.c	FUNCTION_125
0x400dcf6	              0x5d	                                 pop rbp	      3953	intel_display.c	FUNCTION_125
0x400dcf7	            0x415c	                                 pop r12	      3953	intel_display.c	FUNCTION_125
0x400dcf9	            0x415d	                                 pop r13	      3953	intel_display.c	FUNCTION_125
0x400dcfb	            0x415e	                                 pop r14	      3953	intel_display.c	FUNCTION_125
0x400dcfd	            0x415f	                                 pop r15	      3953	intel_display.c	FUNCTION_125
0x400dcff	    0x48c7c6000000	                              mov rsi, 0	      3951	intel_display.c	FUNCTION_125	CALL_41
0x400dd06	      0xbf04000000	                              mov edi, 4	      3951	intel_display.c	FUNCTION_125	CALL_41
0x400dd0b	      0xe900000000	                           jmp 0x400dd10	      3951	intel_display.c	FUNCTION_125	CALL_41
0x400dd10	    0x48c7c6000000	                              mov rsi, 0	      3913	intel_display.c	FUNCTION_125	FOR_1	IF_1	CALL_24
0x400dd17	      0xbf04000000	                              mov edi, 4	      3913	intel_display.c	FUNCTION_125	FOR_1	IF_1	CALL_24
0x400dd1c	      0xe800000000	                          call 0x400dd21	      3913	intel_display.c	FUNCTION_125	FOR_1	IF_1	CALL_24
0x400dd21	          0x4489e2	                           mov edx, r12d	      3914	intel_display.c	FUNCTION_125	FOR_1	IF_1	CALL_25
0x400dd24	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      3914	intel_display.c	FUNCTION_125	FOR_1	IF_1	CALL_25
0x400dd2b	      0xb901000000	                              mov ecx, 1	      3914	intel_display.c	FUNCTION_125	FOR_1	IF_1	CALL_25
0x400dd30	          0x80ce01	                                or dh, 1	      3914	intel_display.c	FUNCTION_125	FOR_1	IF_1	CALL_25
0x400dd33	            0x89ee	                            mov esi, ebp	      3914	intel_display.c	FUNCTION_125	FOR_1	IF_1	CALL_25
0x400dd35	          0x4889df	                            mov rdi, rbx	      3914	intel_display.c	FUNCTION_125	FOR_1	IF_1	CALL_25
0x400dd38	      0xe800000000	                          call 0x400dd3d	      3914	intel_display.c	FUNCTION_125	FOR_1	IF_1	CALL_25
0x400dd3d	      0xe9d2feffff	                           jmp 0x400dc14	      3914	intel_display.c	FUNCTION_125	FOR_1	IF_1	CALL_25
0x400dd42	          0x4489e2	                           mov edx, r12d	      3943	intel_display.c	FUNCTION_125	FOR_2	IF_3	CALL_38
0x400dd45	            0x89ee	                            mov esi, ebp	      3943	intel_display.c	FUNCTION_125	FOR_2	IF_3	CALL_38
0x400dd47	          0x4889df	                            mov rdi, rbx	      3943	intel_display.c	FUNCTION_125	FOR_2	IF_3	CALL_38
0x400dd4a	          0x80ce02	                                or dh, 2	      3943	intel_display.c	FUNCTION_125	FOR_2	IF_3	CALL_38
0x400dd4d	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	      3943	intel_display.c	FUNCTION_125	FOR_2	IF_3	CALL_38
0x400dd54	      0xb901000000	                              mov ecx, 1	      3943	intel_display.c	FUNCTION_125	FOR_2	IF_3	CALL_38
0x400dd59	      0xe800000000	                          call 0x400dd5e	      3943	intel_display.c	FUNCTION_125	FOR_2	IF_3	CALL_38
0x400dd5e	    0x48c7c6000000	                              mov rsi, 0	      3944	intel_display.c	FUNCTION_125	FOR_2	IF_3	CALL_39
0x400dd65	      0xbf04000000	                              mov edi, 4	      3944	intel_display.c	FUNCTION_125	FOR_2	IF_3	CALL_39
0x400dd6a	      0xe800000000	                          call 0x400dd6f	      3944	intel_display.c	FUNCTION_125	FOR_2	IF_3	CALL_39
0x400dd6f	            0xeb84	                           jmp 0x400dcf5	      3944	intel_display.c	FUNCTION_125	FOR_2	IF_3	CALL_39
i9xx_select_p2_div	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,3:ELSE,3:functions,0:CALL,2	21
0x4004710	    0xf68644020000	          test byte [rsi + 0x244], 0x10 	       610	intel_display.c	FUNCTION_13	IF_1	CALL_1
0x4004717	            0x750d	                           jne 0x4004726	       610	intel_display.c	FUNCTION_13	IF_1	CALL_1
0x4004719	          0x395740	            cmp dword [rdi + 0x40], edx 	       621	intel_display.c	FUNCTION_13	ELSE_2	IF_3
0x400471c	            0x7f04	                            jg 0x4004722	       621	intel_display.c	FUNCTION_13	ELSE_2	IF_3
0x400471e	          0x8b4748	            mov eax, dword [rdi + 0x48] 	       624	intel_display.c	FUNCTION_13	ELSE_2	ELSE_3
0x4004721	              0xc3	                                     ret	       624	intel_display.c	FUNCTION_13	ELSE_2	ELSE_3
0x4004722	          0x8b4744	            mov eax, dword [rdi + 0x44] 	       622	intel_display.c	FUNCTION_13	ELSE_2	IF_3
0x4004725	              0xc3	                                     ret	       622	intel_display.c	FUNCTION_13	ELSE_2	IF_3
0x4004726	          0x488b06	                    mov rax, qword [rsi]	       608	intel_display.c	FUNCTION_13
0x4004729	              0x53	                                push rbx	       607	intel_display.c	FUNCTION_13
0x400472a	          0x4889fb	                            mov rbx, rdi	       607	intel_display.c	FUNCTION_13
0x400472d	          0x488b38	                    mov rdi, qword [rax]	       616	intel_display.c	FUNCTION_13	IF_1	IF_2	CALL_2
0x4004730	      0xe800000000	                          call 0x4004735	       616	intel_display.c	FUNCTION_13	IF_1	IF_2	CALL_2
0x4004735	            0x84c0	                             test al, al	       616	intel_display.c	FUNCTION_13	IF_1	IF_2	CALL_2
0x4004737	            0x7405	                            je 0x400473e	       616	intel_display.c	FUNCTION_13	IF_1	IF_2	CALL_2
0x4004739	          0x8b4348	            mov eax, dword [rbx + 0x48] 	       617	intel_display.c	FUNCTION_13	IF_1	IF_2
0x400473c	              0x5b	                                 pop rbx	       626	intel_display.c	FUNCTION_13	ELSE_3
0x400473d	              0xc3	                                     ret	       626	intel_display.c	FUNCTION_13	ELSE_3
0x400473e	          0x8b4344	            mov eax, dword [rbx + 0x44] 	       619	intel_display.c	FUNCTION_13	IF_1	ELSE_1
0x4004741	              0x5b	                                 pop rbx	       626	intel_display.c	FUNCTION_13	ELSE_3
0x4004742	              0xc3	                                     ret	       626	intel_display.c	FUNCTION_13	ELSE_3
skl_update_scaler_crtc	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,1	15
0x400fd80	    0x8b87c8000000	            mov eax, dword [rdi + 0xc8] 	      4798	intel_display.c	FUNCTION_143	CALL_1
0x400fd86	         0xfb67709	               movzx esi, byte [rdi + 9]	      4798	intel_display.c	FUNCTION_143	CALL_1
0x400fd8a	    0x488d8f640300	                  lea rcx, [rdi + 0x364]	      4798	intel_display.c	FUNCTION_143	CALL_1
0x400fd91	    0x448b8f300200	           mov r9d, dword [rdi + 0x230] 	      4798	intel_display.c	FUNCTION_143	CALL_1
0x400fd98	    0x448b872c0200	           mov r8d, dword [rdi + 0x22c] 	      4798	intel_display.c	FUNCTION_143	CALL_1
0x400fd9f	      0xba1f000000	                           mov edx, 0x1f	      4798	intel_display.c	FUNCTION_143	CALL_1
0x400fda4	              0x50	                                push rax	      4798	intel_display.c	FUNCTION_143	CALL_1
0x400fda5	    0x8b87ac000000	            mov eax, dword [rdi + 0xac] 	      4798	intel_display.c	FUNCTION_143	CALL_1
0x400fdab	          0x83f601	                              xor esi, 1	      4798	intel_display.c	FUNCTION_143	CALL_1
0x400fdae	        0x400fb6f6	                          movzx esi, sil	      4798	intel_display.c	FUNCTION_143	CALL_1
0x400fdb2	              0x50	                                push rax	      4798	intel_display.c	FUNCTION_143	CALL_1
0x400fdb3	      0xe8c82cffff	              call sym.skl_update_scaler	      4798	intel_display.c	FUNCTION_143	CALL_1
0x400fdb8	              0x5a	                                 pop rdx	      4798	intel_display.c	FUNCTION_143	CALL_1
0x400fdb9	              0x59	                                 pop rcx	      4798	intel_display.c	FUNCTION_143	CALL_1
0x400fdba	              0xc3	                                     ret	      4802	intel_display.c	FUNCTION_143
glk_plane_color_ctl	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,3:ELSE,1:functions,0:CALL,2	33
0x400f7c0	        0x488b4610	            mov rax, qword [rsi + 0x10] 	      3611	intel_display.c	FUNCTION_118	CALL_1
0x400f7c4	            0x4154	                                push r12	      3604	intel_display.c	FUNCTION_118
0x400f7c6	          0x4989f4	                            mov r12, rsi	      3604	intel_display.c	FUNCTION_118
0x400f7c9	              0x55	                                push rbp	      3604	intel_display.c	FUNCTION_118
0x400f7ca	              0x53	                                push rbx	      3604	intel_display.c	FUNCTION_118
0x400f7cb	        0x488b4048	            mov rax, qword [rax + 0x48] 	      3611	intel_display.c	FUNCTION_118	CALL_1
0x400f7cf	            0x8b38	                    mov edi, dword [rax]	      3611	intel_display.c	FUNCTION_118	CALL_1
0x400f7d1	    0x81ff41423234	                     cmp edi, 0x34324241	      3492	intel_display.c	FUNCTION_113	SWITCH_1
0x400f7d7	            0x7445	                            je 0x400f81e	      3492	intel_display.c	FUNCTION_113	SWITCH_1
0x400f7d9	    0x81ff41523234	                     cmp edi, 0x34325241	      3492	intel_display.c	FUNCTION_113	SWITCH_1
0x400f7df	            0x743d	                            je 0x400f81e	      3492	intel_display.c	FUNCTION_113	SWITCH_1
0x400f7e1	      0xbb00208040	                     mov ebx, 0x40802000	      3492	intel_display.c	FUNCTION_113	SWITCH_1
0x400f7e6	            0x31ed	                            xor ebp, ebp	      3497	intel_display.c	FUNCTION_113	SWITCH_1
0x400f7e8	      0xe800000000	                          call 0x400f7ed	      3613	intel_display.c	FUNCTION_118	IF_1	CALL_2
0x400f7ed	            0x84c0	                             test al, al	      3613	intel_display.c	FUNCTION_118	IF_1	CALL_2
0x400f7ef	            0x7426	                            je 0x400f817	      3613	intel_display.c	FUNCTION_118	IF_1	CALL_2
0x400f7f1	            0x89e8	                            mov eax, ebp	      3615	intel_display.c	FUNCTION_118	IF_1	IF_2
0x400f7f3	    0x81cd00208240	                      or ebp, 0x40822000	      3615	intel_display.c	FUNCTION_118	IF_1	IF_2
0x400f7f9	       0xd00208440	                      or eax, 0x40842000	      3615	intel_display.c	FUNCTION_118	IF_1	IF_2
0x400f7fe	    0x41837c244c01	               cmp dword [r12 + 0x4c], 1	      3615	intel_display.c	FUNCTION_118	IF_1	IF_2
0x400f804	           0xf45c5	                         cmovne eax, ebp	      3615	intel_display.c	FUNCTION_118	IF_1	IF_2
0x400f807	            0x89c3	                            mov ebx, eax	      3615	intel_display.c	FUNCTION_118	IF_1	IF_2
0x400f809	       0xd00000010	                      or eax, 0x10000000	      3620	intel_display.c	FUNCTION_118	IF_1	IF_3
0x400f80e	    0x41837c245001	               cmp dword [r12 + 0x50], 1	      3620	intel_display.c	FUNCTION_118	IF_1	IF_3
0x400f814	           0xf44d8	                          cmove ebx, eax	      3620	intel_display.c	FUNCTION_118	IF_1	IF_3
0x400f817	            0x89d8	                            mov eax, ebx	      3624	intel_display.c	FUNCTION_118
0x400f819	              0x5b	                                 pop rbx	      3624	intel_display.c	FUNCTION_118
0x400f81a	              0x5d	                                 pop rbp	      3624	intel_display.c	FUNCTION_118
0x400f81b	            0x415c	                                 pop r12	      3624	intel_display.c	FUNCTION_118
0x400f81d	              0xc3	                                     ret	      3624	intel_display.c	FUNCTION_118
0x400f81e	      0xbb20208040	                     mov ebx, 0x40802020	      3492	intel_display.c	FUNCTION_113	SWITCH_1
0x400f823	      0xbd20000000	                           mov ebp, 0x20	      3495	intel_display.c	FUNCTION_113	SWITCH_1
0x400f828	            0xebbe	                           jmp 0x400f7e8	      3495	intel_display.c	FUNCTION_113	SWITCH_1
ironlake_get_pipe_config	FOR,0:SWITCH,1:DO,0:WHILE,0:IF,6:ELSE,3:functions,0:CALL,21	163
0x4008c70	            0x4156	                                push r14	      8700	intel_display.c	FUNCTION_257
0x4008c72	            0x4155	                                push r13	      8700	intel_display.c	FUNCTION_257
0x4008c74	          0x4989f5	                            mov r13, rsi	      8700	intel_display.c	FUNCTION_257
0x4008c77	            0x4154	                                push r12	      8700	intel_display.c	FUNCTION_257
0x4008c79	              0x55	                                push rbp	      8700	intel_display.c	FUNCTION_257
0x4008c7a	          0x4889fd	                            mov rbp, rdi	      8700	intel_display.c	FUNCTION_257
0x4008c7d	              0x53	                                push rbx	      8700	intel_display.c	FUNCTION_257
0x4008c7e	    0x448bb7b00400	          mov r14d, dword [rdi + 0x4b0] 	      8707	intel_display.c	FUNCTION_257	CALL_2
0x4008c85	          0x488b1f	                    mov rbx, qword [rdi]	      8701	intel_display.c	FUNCTION_257
0x4008c88	          0x4489f6	                           mov esi, r14d	      8708	intel_display.c	FUNCTION_257	IF_1	CALL_3
0x4008c8b	          0x4889df	                            mov rdi, rbx	      8708	intel_display.c	FUNCTION_257	IF_1	CALL_3
0x4008c8e	      0xe800000000	                          call 0x4008c93	      8708	intel_display.c	FUNCTION_257	IF_1	CALL_3
0x4008c93	            0x84c0	                             test al, al	      8708	intel_display.c	FUNCTION_257	IF_1	CALL_3
0x4008c95	            0x7509	                           jne 0x4008ca0	      8708	intel_display.c	FUNCTION_257	IF_1	CALL_3
0x4008c97	              0x5b	                                 pop rbx	      8793	intel_display.c	FUNCTION_257
0x4008c98	              0x5d	                                 pop rbp	      8793	intel_display.c	FUNCTION_257
0x4008c99	            0x415c	                                 pop r12	      8793	intel_display.c	FUNCTION_257
0x4008c9b	            0x415d	                                 pop r13	      8793	intel_display.c	FUNCTION_257
0x4008c9d	            0x415e	                                 pop r14	      8793	intel_display.c	FUNCTION_257
0x4008c9f	              0xc3	                                     ret	      8793	intel_display.c	FUNCTION_257
0x4008ca0	    0x8b85b0040000	           mov eax, dword [rbp + 0x4b0] 	      8711	intel_display.c	FUNCTION_257
0x4008ca6	    0x49c785780200	              mov qword [r13 + 0x278], 0	      8712	intel_display.c	FUNCTION_257
0x4008cb1	          0x4889df	                            mov rdi, rbx	      8715	intel_display.c	FUNCTION_257	CALL_5
0x4008cb4	          0x4531e4	                          xor r12d, r12d	      8714	intel_display.c	FUNCTION_257
0x4008cb7	    0x4189853c0200	            mov dword [r13 + 0x23c], eax	      8711	intel_display.c	FUNCTION_257
0x4008cbe	    0x486385b00400	        movsxd rax, dword [rbp + 0x4b0] 	      8715	intel_display.c	FUNCTION_257	CALL_5
0x4008cc5	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	      8715	intel_display.c	FUNCTION_257	CALL_5
0x4008ccb	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	      8715	intel_display.c	FUNCTION_257	CALL_5
0x4008cd2	    0x8b8483800600	   mov eax, dword [rbx + rax*4 + 0x680] 	      8715	intel_display.c	FUNCTION_257	CALL_5
0x4008cd9	    0x2b8380060000	            sub eax, dword [rbx + 0x680]	      8715	intel_display.c	FUNCTION_257	CALL_5
0x4008cdf	    0x8db410080007	          lea esi, [rax + rdx + 0x70008]	      8715	intel_display.c	FUNCTION_257	CALL_5
0x4008ce6	      0xba01000000	                              mov edx, 1	      8715	intel_display.c	FUNCTION_257	CALL_5
0x4008ceb	      0xe800000000	                          call 0x4008cf0	      8715	intel_display.c	FUNCTION_257	CALL_5
0x4008cf0	            0x85c0	                           test eax, eax	      8716	intel_display.c	FUNCTION_257	IF_2
0x4008cf2	            0x7817	                            js 0x4008d0b	      8716	intel_display.c	FUNCTION_257	IF_2
0x4008cf4	          0x4489f6	                           mov esi, r14d	      8790	intel_display.c	FUNCTION_257	CALL_21
0x4008cf7	          0x4889df	                            mov rdi, rbx	      8790	intel_display.c	FUNCTION_257	CALL_21
0x4008cfa	      0xe800000000	                          call 0x4008cff	      8790	intel_display.c	FUNCTION_257	CALL_21
0x4008cff	          0x4489e0	                           mov eax, r12d	      8792	intel_display.c	FUNCTION_257
0x4008d02	              0x5b	                                 pop rbx	      8793	intel_display.c	FUNCTION_257
0x4008d03	              0x5d	                                 pop rbp	      8793	intel_display.c	FUNCTION_257
0x4008d04	            0x415c	                                 pop r12	      8793	intel_display.c	FUNCTION_257
0x4008d06	            0x415d	                                 pop r13	      8793	intel_display.c	FUNCTION_257
0x4008d08	            0x415e	                                 pop r14	      8793	intel_display.c	FUNCTION_257
0x4008d0a	              0xc3	                                     ret	      8793	intel_display.c	FUNCTION_257
0x4008d0b	            0x89c2	                            mov edx, eax	      8719	intel_display.c	FUNCTION_257	SWITCH_1
0x4008d0d	    0x81e2e0000000	                           and edx, 0xe0	      8719	intel_display.c	FUNCTION_257	SWITCH_1
0x4008d13	          0x83fa20	                           cmp edx, 0x20	      8719	intel_display.c	FUNCTION_257	SWITCH_1
0x4008d16	     0xf84c2000000	                            je 0x4008dde	      8719	intel_display.c	FUNCTION_257	SWITCH_1
0x4008d1c	     0xf86a4000000	                           jbe 0x4008dc6	      8719	intel_display.c	FUNCTION_257	SWITCH_1
0x4008d22	          0x83fa40	                           cmp edx, 0x40	      8719	intel_display.c	FUNCTION_257	SWITCH_1
0x4008d25	     0xf848b000000	                            je 0x4008db6	      8719	intel_display.c	FUNCTION_257	SWITCH_1
0x4008d2b	          0x83fa60	                           cmp edx, 0x60	      8719	intel_display.c	FUNCTION_257	SWITCH_1
0x4008d2e	            0x750b	                           jne 0x4008d3b	      8719	intel_display.c	FUNCTION_257	SWITCH_1
0x4008d30	    0x41c785dc0200	          mov dword [r13 + 0x2dc], 0x24 	      8730	intel_display.c	FUNCTION_257	SWITCH_1
0x4008d3b	          0xf6c420	                           test ah, 0x20	      8736	intel_display.c	FUNCTION_257	IF_3
0x4008d3e	            0x7408	                            je 0x4008d48	      8736	intel_display.c	FUNCTION_257	IF_3
0x4008d40	    0x41c685400200	               mov byte [r13 + 0x240], 1	      8737	intel_display.c	FUNCTION_257	IF_3
0x4008d48	    0x8bb5b0040000	           mov esi, dword [rbp + 0x4b0] 	      8739	intel_display.c	FUNCTION_257	IF_4	CALL_7
0x4008d4e	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      8739	intel_display.c	FUNCTION_257	IF_4	CALL_7
0x4008d55	      0xba01000000	                              mov edx, 1	      8739	intel_display.c	FUNCTION_257	IF_4	CALL_7
0x4008d5a	          0x4889df	                            mov rdi, rbx	      8739	intel_display.c	FUNCTION_257	IF_4	CALL_7
0x4008d5d	          0xc1e60c	                            shl esi, 0xc	      8739	intel_display.c	FUNCTION_257	IF_4	CALL_7
0x4008d60	    0x81c608000f00	                        add esi, 0xf0008	      8739	intel_display.c	FUNCTION_257	IF_4	CALL_7
0x4008d66	      0xe800000000	                          call 0x4008d6b	      8739	intel_display.c	FUNCTION_257	IF_4	CALL_7
0x4008d6b	            0x85c0	                           test eax, eax	      8739	intel_display.c	FUNCTION_257	IF_4	CALL_7
0x4008d6d	            0x787f	                            js 0x4008dee	      8739	intel_display.c	FUNCTION_257	IF_4	CALL_7
0x4008d6f	    0x41c785100300	              mov dword [r13 + 0x310], 1	      8779	intel_display.c	FUNCTION_257	ELSE_3
0x4008d7a	        0x488b7d00	                    mov rdi, qword [rbp]	      8782	intel_display.c	FUNCTION_257	CALL_18
0x4008d7e	          0x4c89ee	                            mov rsi, r13	      8782	intel_display.c	FUNCTION_257	CALL_18
0x4008d81	    0x41bc01000000	                             mov r12d, 1	      8787	intel_display.c	FUNCTION_257
0x4008d87	      0xe854caffff	 call sym.intel_get_pipe_timings.isra.65	      8782	intel_display.c	FUNCTION_257	CALL_18
0x4008d8c	    0x8bb5b0040000	           mov esi, dword [rbp + 0x4b0] 	      8783	intel_display.c	FUNCTION_257	CALL_19
0x4008d92	        0x488b7d00	                    mov rdi, qword [rbp]	      8783	intel_display.c	FUNCTION_257	CALL_19
0x4008d96	          0x4c89ea	                            mov rdx, r13	      8783	intel_display.c	FUNCTION_257	CALL_19
0x4008d99	      0xe852ccffff	call sym.intel_get_pipe_src_size.isra.66	      8783	intel_display.c	FUNCTION_257	CALL_19
0x4008d9e	        0x488b7d00	                    mov rdi, qword [rbp]	      8785	intel_display.c	FUNCTION_257	CALL_20
0x4008da2	    0x488db5b00400	                  lea rsi, [rbp + 0x4b0]	      8785	intel_display.c	FUNCTION_257	CALL_20
0x4008da9	          0x4c89ea	                            mov rdx, r13	      8785	intel_display.c	FUNCTION_257	CALL_20
0x4008dac	      0xe8bfceffff	call sym.ironlake_get_pfit_config.isra.70	      8785	intel_display.c	FUNCTION_257	CALL_20
0x4008db1	      0xe93effffff	                           jmp 0x4008cf4	      8785	intel_display.c	FUNCTION_257	CALL_20
0x4008db6	    0x41c785dc0200	          mov dword [r13 + 0x2dc], 0x12 	      8721	intel_display.c	FUNCTION_257	SWITCH_1
0x4008dc1	      0xe975ffffff	                           jmp 0x4008d3b	      8722	intel_display.c	FUNCTION_257	SWITCH_1
0x4008dc6	            0x85d2	                           test edx, edx	      8719	intel_display.c	FUNCTION_257	SWITCH_1
0x4008dc8	     0xf856dffffff	                           jne 0x4008d3b	      8719	intel_display.c	FUNCTION_257	SWITCH_1
0x4008dce	    0x41c785dc0200	          mov dword [r13 + 0x2dc], 0x18 	      8724	intel_display.c	FUNCTION_257	SWITCH_1
0x4008dd9	      0xe95dffffff	                           jmp 0x4008d3b	      8725	intel_display.c	FUNCTION_257	SWITCH_1
0x4008dde	    0x41c785dc0200	          mov dword [r13 + 0x2dc], 0x1e 	      8727	intel_display.c	FUNCTION_257	SWITCH_1
0x4008de9	      0xe94dffffff	                           jmp 0x4008d3b	      8728	intel_display.c	FUNCTION_257	SWITCH_1
0x4008dee	    0x41c685380200	               mov byte [r13 + 0x238], 1	      8743	intel_display.c	FUNCTION_257	IF_4
0x4008df6	    0x8bb5b0040000	           mov esi, dword [rbp + 0x4b0] 	      8745	intel_display.c	FUNCTION_257	IF_4	CALL_9
0x4008dfc	      0xba01000000	                              mov edx, 1	      8745	intel_display.c	FUNCTION_257	IF_4	CALL_9
0x4008e01	          0x4889df	                            mov rdi, rbx	      8745	intel_display.c	FUNCTION_257	IF_4	CALL_9
0x4008e04	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      8745	intel_display.c	FUNCTION_257	IF_4	CALL_9
0x4008e0b	          0xc1e60c	                            shl esi, 0xc	      8745	intel_display.c	FUNCTION_257	IF_4	CALL_9
0x4008e0e	    0x81c60c000f00	                        add esi, 0xf000c	      8745	intel_display.c	FUNCTION_257	IF_4	CALL_9
0x4008e14	      0xe800000000	                          call 0x4008e19	      8745	intel_display.c	FUNCTION_257	IF_4	CALL_9
0x4008e19	      0x2500003800	                       and eax, 0x380000	      8746	intel_display.c	FUNCTION_257	IF_4
0x4008e1e	    0x418bb53c0200	           mov esi, dword [r13 + 0x23c] 	      8539	intel_display.c	FUNCTION_253	CALL_1
0x4008e25	    0x498d95340300	                  lea rdx, [r13 + 0x334]	      8539	intel_display.c	FUNCTION_253	CALL_1
0x4008e2c	          0xc1e813	                           shr eax, 0x13	      8746	intel_display.c	FUNCTION_257	IF_4
0x4008e2f	            0x31c9	                            xor ecx, ecx	      8539	intel_display.c	FUNCTION_253	CALL_1
0x4008e31	          0x4889ef	                            mov rdi, rbp	      8539	intel_display.c	FUNCTION_253	CALL_1
0x4008e34	          0x83c001	                              add eax, 1	      8746	intel_display.c	FUNCTION_257	IF_4
0x4008e37	    0x418985300300	            mov dword [r13 + 0x330], eax	      8746	intel_display.c	FUNCTION_257	IF_4
0x4008e3e	      0xe85d7effff	   call sym.intel_cpu_transcoder_get_m_n	      8539	intel_display.c	FUNCTION_253	CALL_1
0x4008e43	    0x83bbf8550000	            cmp dword [rbx + 0x55f8], 1 	      8751	intel_display.c	FUNCTION_257	IF_4	IF_5	CALL_11
0x4008e4a	     0xf859d000000	                           jne 0x4008eed	      8751	intel_display.c	FUNCTION_257	IF_4	IF_5	CALL_11
0x4008e50	    0x8bb5b0040000	           mov esi, dword [rbp + 0x4b0] 	      8756	intel_display.c	FUNCTION_257	IF_4	IF_5
0x4008e56	          0x4889df	                            mov rdi, rbx	      8766	intel_display.c	FUNCTION_257	IF_4	CALL_14
0x4008e59	      0xe800000000	                          call 0x4008e5e	      8766	intel_display.c	FUNCTION_257	IF_4	CALL_14
0x4008e5e	    0x498d95800200	                  lea rdx, [r13 + 0x280]	      8769	intel_display.c	FUNCTION_257	IF_4	CALL_16
0x4008e65	    0x498985780200	            mov qword [r13 + 0x278], rax	      8765	intel_display.c	FUNCTION_257	IF_4
0x4008e6c	          0x4889c6	                            mov rsi, rax	      8769	intel_display.c	FUNCTION_257	IF_4	CALL_16
0x4008e6f	    0x488b88880000	            mov rcx, qword [rax + 0x88] 	      8769	intel_display.c	FUNCTION_257	IF_4	CALL_16
0x4008e76	          0x4889df	                            mov rdi, rbx	      8769	intel_display.c	FUNCTION_257	IF_4	CALL_16
0x4008e79	      0xe800000000	                          call 0x4008e7e	      8769	intel_display.c	FUNCTION_257	IF_4	CALL_16
0x4008e7e	            0x84c0	                             test al, al	      8769	intel_display.c	FUNCTION_257	IF_4	CALL_16
0x4008e80	     0xf84a7000000	                            je 0x4008f2d	      8769	intel_display.c	FUNCTION_257	IF_4	CALL_16
0x4008e86	    0x418b85800200	           mov eax, dword [r13 + 0x280] 	      8773	intel_display.c	FUNCTION_257	IF_4
0x4008e8d	          0x4c89ee	                            mov rsi, r13	     10165	intel_display.c	FUNCTION_297	CALL_2
0x4008e90	      0x25000e0000	                          and eax, 0xe00	      8773	intel_display.c	FUNCTION_257	IF_4
0x4008e95	          0xc1e809	                              shr eax, 9	      8773	intel_display.c	FUNCTION_257	IF_4
0x4008e98	          0x83c001	                              add eax, 1	      8773	intel_display.c	FUNCTION_257	IF_4
0x4008e9b	    0x418985100300	            mov dword [r13 + 0x310], eax	      8773	intel_display.c	FUNCTION_257	IF_4
0x4008ea2	        0x4c8b6500	                    mov r12, qword [rbp]	      8773	intel_display.c	FUNCTION_257	IF_4
0x4008ea6	          0x4c89e7	                            mov rdi, r12	     10165	intel_display.c	FUNCTION_297	CALL_2
0x4008ea9	      0xe872cfffff	    call sym.i9xx_crtc_clock_get.isra.79	     10165	intel_display.c	FUNCTION_297	CALL_2
0x4008eae	    0x41f684247706	          test byte [r12 + 0x677], 0x40 	       220	intel_display.c	FUNCTION_5	IF_1	CALL_1
0x4008eb7	            0x746a	                            je 0x4008f23	       220	intel_display.c	FUNCTION_5	IF_1	CALL_1
0x4008eb9	    0x418b8d0c0300	           mov ecx, dword [r13 + 0x30c] 	       221	intel_display.c	FUNCTION_5	IF_1
0x4008ec0	    0x418b95440300	           mov edx, dword [r13 + 0x344] 	     10153	intel_display.c	FUNCTION_296	IF_1
0x4008ec7	            0x31c0	                            xor eax, eax	     10154	intel_display.c	FUNCTION_296	IF_1
0x4008ec9	            0x85d2	                           test edx, edx	     10153	intel_display.c	FUNCTION_296	IF_1
0x4008ecb	            0x7414	                            je 0x4008ee1	     10153	intel_display.c	FUNCTION_296	IF_1
0x4008ecd	    0x418bb5400300	           mov esi, dword [r13 + 0x340] 	     10156	intel_display.c	FUNCTION_296	CALL_2
0x4008ed4	            0x89c8	                            mov eax, ecx	     10156	intel_display.c	FUNCTION_296	CALL_2
0x4008ed6	            0x89d1	                            mov ecx, edx	     10156	intel_display.c	FUNCTION_296	CALL_2
0x4008ed8	            0x31d2	                            xor edx, edx	     10156	intel_display.c	FUNCTION_296	CALL_2
0x4008eda	        0x480fafc6	                           imul rax, rsi	     10156	intel_display.c	FUNCTION_296	CALL_2
0x4008ede	          0x48f7f1	                                 div rcx	     10156	intel_display.c	FUNCTION_296	CALL_2
0x4008ee1	    0x418985a80000	             mov dword [r13 + 0xa8], eax	     10172	intel_display.c	FUNCTION_297
0x4008ee8	      0xe98dfeffff	                           jmp 0x4008d7a	     10172	intel_display.c	FUNCTION_297
0x4008eed	      0xba01000000	                              mov edx, 1	      8758	intel_display.c	FUNCTION_257	IF_4	ELSE_1	CALL_12
0x4008ef2	      0xbe00700c00	                        mov esi, 0xc7000	      8758	intel_display.c	FUNCTION_257	IF_4	ELSE_1	CALL_12
0x4008ef7	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	      8758	intel_display.c	FUNCTION_257	IF_4	ELSE_1	CALL_12
0x4008efe	          0x4889df	                            mov rdi, rbx	      8758	intel_display.c	FUNCTION_257	IF_4	ELSE_1	CALL_12
0x4008f01	      0xe800000000	                          call 0x4008f06	      8758	intel_display.c	FUNCTION_257	IF_4	ELSE_1	CALL_12
0x4008f06	    0x8b8db0040000	           mov ecx, dword [rbp + 0x4b0] 	      8756	intel_display.c	FUNCTION_257	IF_4	IF_5
0x4008f0c	      0xba01000000	                              mov edx, 1	      8756	intel_display.c	FUNCTION_257	IF_4	IF_5
0x4008f11	            0x31f6	                            xor esi, esi	      8756	intel_display.c	FUNCTION_257	IF_4	IF_5
0x4008f13	          0xc1e102	                              shl ecx, 2	      8756	intel_display.c	FUNCTION_257	IF_4	IF_5
0x4008f16	            0xd3e2	                             shl edx, cl	      8756	intel_display.c	FUNCTION_257	IF_4	IF_5
0x4008f18	            0x85c2	                           test edx, eax	      8756	intel_display.c	FUNCTION_257	IF_4	IF_5
0x4008f1a	        0x400f95c6	                               setne sil	      8756	intel_display.c	FUNCTION_257	IF_4	IF_5
0x4008f1e	      0xe933ffffff	                           jmp 0x4008e56	      8756	intel_display.c	FUNCTION_257	IF_4	IF_5
0x4008f23	    0x418b8c24e454	          mov ecx, dword [r12 + 0x54e4] 	       223	intel_display.c	FUNCTION_5	ELSE_1
0x4008f2b	            0xeb93	                           jmp 0x4008ec0	       223	intel_display.c	FUNCTION_5	ELSE_1
0x4008f2d	    0x48c7c6000000	                              mov rsi, 0	      8769	intel_display.c	FUNCTION_257	IF_4	CALL_16
0x4008f34	    0x48c7c7000000	                              mov rdi, 0	      8769	intel_display.c	FUNCTION_257	IF_4	CALL_16
0x4008f3b	      0xe800000000	                          call 0x4008f40	      8769	intel_display.c	FUNCTION_257	IF_4	CALL_16
0x4008f40	             0xf0b	                                     ud2	      8769	intel_display.c	FUNCTION_257	IF_4	CALL_16
0x4008f42	      0xe93fffffff	                           jmp 0x4008e86	      8769	intel_display.c	FUNCTION_257	IF_4	CALL_16
haswell_crtc_disable	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,5:ELSE,1:functions,0:CALL,17	77
0x40067c0	            0x4157	                                push r15	      5669	intel_display.c	FUNCTION_171
0x40067c2	            0x4156	                                push r14	      5669	intel_display.c	FUNCTION_171
0x40067c4	        0x488d4630	                   lea rax, [rsi + 0x30]	      5669	intel_display.c	FUNCTION_171
0x40067c8	            0x4155	                                push r13	      5669	intel_display.c	FUNCTION_171
0x40067ca	            0x4154	                                push r12	      5669	intel_display.c	FUNCTION_171
0x40067cc	        0x4c8d7e28	                   lea r15, [rsi + 0x28]	      5669	intel_display.c	FUNCTION_171
0x40067d0	              0x55	                                push rbp	      5669	intel_display.c	FUNCTION_171
0x40067d1	              0x53	                                push rbx	      5669	intel_display.c	FUNCTION_171
0x40067d2	          0x4889fe	                            mov rsi, rdi	      5675	intel_display.c	FUNCTION_171	CALL_3
0x40067d5	          0x4889c1	                            mov rcx, rax	      5675	intel_display.c	FUNCTION_171	CALL_3
0x40067d8	          0x4989fd	                            mov r13, rdi	      5669	intel_display.c	FUNCTION_171
0x40067db	        0x4883ec08	                              sub rsp, 8	      5669	intel_display.c	FUNCTION_171
0x40067df	          0x4c8b27	                    mov r12, qword [rdi]	      5670	intel_display.c	FUNCTION_171
0x40067e2	        0x48890424	                    mov qword [rsp], rax	      5670	intel_display.c	FUNCTION_171
0x40067e6	    0x498b9424c804	           mov rdx, qword [r12 + 0x4c8] 	      5673	intel_display.c	FUNCTION_171
0x40067ee	          0x4c89e7	                            mov rdi, r12	      5675	intel_display.c	FUNCTION_171	CALL_3
0x40067f1	        0x498b1c24	                    mov rbx, qword [r12]	      5671	intel_display.c	FUNCTION_171	CALL_1
0x40067f5	    0x8baa3c020000	           mov ebp, dword [rdx + 0x23c] 	      5673	intel_display.c	FUNCTION_171
0x40067fb	          0x4c89fa	                            mov rdx, r15	      5675	intel_display.c	FUNCTION_171	CALL_3
0x40067fe	      0xe83dfdffff	call sym.intel_encoders_disable.isra.101	      5675	intel_display.c	FUNCTION_171	CALL_3
0x4006803	          0x4c89e7	                            mov rdi, r12	      5677	intel_display.c	FUNCTION_171	CALL_4
0x4006806	        0x448d75fc	                     lea r14d, [rbp - 4]	        74	intel_display.h	FUNCTION_639
0x400680a	      0xe800000000	                          call 0x400680f	      5677	intel_display.c	FUNCTION_171	CALL_4
0x400680f	          0x4c89e7	                            mov rdi, r12	      5678	intel_display.c	FUNCTION_171	CALL_5
0x4006812	      0xe899deffff	         call sym.assert_vblank_disabled	      5678	intel_display.c	FUNCTION_171	CALL_5
0x4006817	        0x4183fe01	                             cmp r14d, 1	      5681	intel_display.c	FUNCTION_171	IF_1	CALL_6
0x400681b	     0xf869b000000	                           jbe 0x40068bc	      5681	intel_display.c	FUNCTION_171	IF_1	CALL_6
0x4006821	          0x4c89ef	                            mov rdi, r13	      5682	intel_display.c	FUNCTION_171	CALL_7
0x4006824	      0xe8a7fdffff	             call sym.intel_disable_pipe	      5682	intel_display.c	FUNCTION_171	CALL_7
0x4006829	    0x498bbc24c804	           mov rdi, qword [r12 + 0x4c8] 	      5684	intel_display.c	FUNCTION_171	IF_2	CALL_8
0x4006831	    0xf68745020000	              test byte [rdi + 0x245], 8	      5684	intel_display.c	FUNCTION_171	IF_2	CALL_8
0x4006838	            0x7407	                            je 0x4006841	      5684	intel_display.c	FUNCTION_171	IF_2	CALL_8
0x400683a	            0x31f6	                            xor esi, esi	      5685	intel_display.c	FUNCTION_171	CALL_9
0x400683c	      0xe800000000	                          call 0x4006841	      5685	intel_display.c	FUNCTION_171	CALL_9
0x4006841	            0x89ee	                            mov esi, ebp	      5688	intel_display.c	FUNCTION_171	CALL_11
0x4006843	          0x4889df	                            mov rdi, rbx	      5688	intel_display.c	FUNCTION_171	CALL_11
0x4006846	      0xe800000000	                          call 0x400684b	      5688	intel_display.c	FUNCTION_171	CALL_11
0x400684b	    0x80bb5c060000	               cmp byte [rbx + 0x65c], 8	      5690	intel_display.c	FUNCTION_171	IF_4	CALL_12
0x4006852	     0xf8685000000	                           jbe 0x40068dd	      5690	intel_display.c	FUNCTION_171	IF_4	CALL_12
0x4006858	    0x418b84246805	           mov eax, dword [r12 + 0x568] 	      4871	intel_display.c	FUNCTION_145	FOR_1
0x4006860	            0x31db	                            xor ebx, ebx	      4871	intel_display.c	FUNCTION_145	FOR_1
0x4006862	    0x498dac24b004	                  lea rbp, [r12 + 0x4b0]	      4871	intel_display.c	FUNCTION_145	FOR_1
0x400686a	            0x85c0	                           test eax, eax	      4871	intel_display.c	FUNCTION_145	FOR_1
0x400686c	            0x7e1b	                           jle 0x4006889	      4871	intel_display.c	FUNCTION_145	FOR_1
0x400686e	        0x498b3c24	                    mov rdi, qword [r12]	      4872	intel_display.c	FUNCTION_145	CALL_1
0x4006872	            0x89da	                            mov edx, ebx	      4872	intel_display.c	FUNCTION_145	CALL_1
0x4006874	          0x4889ee	                            mov rsi, rbp	      4872	intel_display.c	FUNCTION_145	CALL_1
0x4006877	          0x83c301	                              add ebx, 1	      4871	intel_display.c	FUNCTION_145	FOR_1
0x400687a	      0xe8c1f4ffff	      call sym.skl_detach_scaler.isra.71	      4872	intel_display.c	FUNCTION_145	CALL_1
0x400687f	    0x413b9c246805	           cmp ebx, dword [r12 + 0x568] 	      4871	intel_display.c	FUNCTION_145	FOR_1
0x4006887	            0x7ce5	                            jl 0x400686e	      4871	intel_display.c	FUNCTION_145	FOR_1
0x4006889	        0x4183fe01	                             cmp r14d, 1	      5695	intel_display.c	FUNCTION_171	IF_5	CALL_15
0x400688d	            0x760d	                           jbe 0x400689c	      5695	intel_display.c	FUNCTION_171	IF_5	CALL_15
0x400688f	    0x498bbc24c804	           mov rdi, qword [r12 + 0x4c8] 	      5696	intel_display.c	FUNCTION_171	CALL_16
0x4006897	      0xe800000000	                          call 0x400689c	      5696	intel_display.c	FUNCTION_171	CALL_16
0x400689c	        0x488b0c24	                    mov rcx, qword [rsp]	      5698	intel_display.c	FUNCTION_171	CALL_17
0x40068a0	        0x4883c408	                              add rsp, 8	      5699	intel_display.c	FUNCTION_171
0x40068a4	          0x4c89fa	                            mov rdx, r15	      5698	intel_display.c	FUNCTION_171	CALL_17
0x40068a7	              0x5b	                                 pop rbx	      5699	intel_display.c	FUNCTION_171
0x40068a8	          0x4c89ee	                            mov rsi, r13	      5698	intel_display.c	FUNCTION_171	CALL_17
0x40068ab	          0x4c89e7	                            mov rdi, r12	      5698	intel_display.c	FUNCTION_171	CALL_17
0x40068ae	              0x5d	                                 pop rbp	      5699	intel_display.c	FUNCTION_171
0x40068af	            0x415c	                                 pop r12	      5699	intel_display.c	FUNCTION_171
0x40068b1	            0x415d	                                 pop r13	      5699	intel_display.c	FUNCTION_171
0x40068b3	            0x415e	                                 pop r14	      5699	intel_display.c	FUNCTION_171
0x40068b5	            0x415f	                                 pop r15	      5699	intel_display.c	FUNCTION_171
0x40068b7	      0xe994feffff	jmp sym.intel_encoders_post_disable.isra.103	      5698	intel_display.c	FUNCTION_171	CALL_17
0x40068bc	    0x498bbc24c804	           mov rdi, qword [r12 + 0x4c8] 	      5684	intel_display.c	FUNCTION_171	IF_2	CALL_8
0x40068c4	    0xf68745020000	              test byte [rdi + 0x245], 8	      5684	intel_display.c	FUNCTION_171	IF_2	CALL_8
0x40068cb	     0xf847affffff	                            je 0x400684b	      5684	intel_display.c	FUNCTION_171	IF_2	CALL_8
0x40068d1	            0x31f6	                            xor esi, esi	      5685	intel_display.c	FUNCTION_171	CALL_9
0x40068d3	      0xe800000000	                          call 0x40068d8	      5685	intel_display.c	FUNCTION_171	CALL_9
0x40068d8	      0xe96effffff	                           jmp 0x400684b	      5685	intel_display.c	FUNCTION_171	CALL_9
0x40068dd	            0x31f6	                            xor esi, esi	      5693	intel_display.c	FUNCTION_171	CALL_14
0x40068df	          0x4c89e7	                            mov rdi, r12	      5693	intel_display.c	FUNCTION_171	CALL_14
0x40068e2	      0xe8299dffff	          call sym.ironlake_pfit_disable	      5693	intel_display.c	FUNCTION_171	CALL_14
0x40068e7	            0xeba0	                           jmp 0x4006889	      5693	intel_display.c	FUNCTION_171	CALL_14
intel_tile_width_bytes	FOR,0:SWITCH,2:DO,0:WHILE,0:IF,4:ELSE,2:functions,0:CALL,6	78
0x40017a0	              0x53	                                push rbx	      1918	intel_display.c	FUNCTION_65
0x40017a1	        0x488b5748	            mov rdx, qword [rdi + 0x48] 	      1920	intel_display.c	FUNCTION_65
0x40017a5	          0x4863c6	                         movsxd rax, esi	      1920	intel_display.c	FUNCTION_65
0x40017a8	        0x488b4f78	            mov rcx, qword [rdi + 0x78] 	      1922	intel_display.c	FUNCTION_65	SWITCH_1
0x40017ac	          0x4c8b07	                     mov r8, qword [rdi]	      1919	intel_display.c	FUNCTION_65	CALL_1
0x40017af	       0xfb65c0206	        movzx ebx, byte [rdx + rax + 6] 	      1920	intel_display.c	FUNCTION_65
0x40017b4	    0x48b802000000	          movabs rax, 0x100000000000002 	      1922	intel_display.c	FUNCTION_65	SWITCH_1
0x40017be	          0x4839c1	                            cmp rcx, rax	      1922	intel_display.c	FUNCTION_65	SWITCH_1
0x40017c1	     0xf8486000000	                            je 0x400184d	      1922	intel_display.c	FUNCTION_65	SWITCH_1
0x40017c7	            0x7649	                           jbe 0x4001812	      1922	intel_display.c	FUNCTION_65	SWITCH_1
0x40017c9	    0x48b804000000	          movabs rax, 0x100000000000004 	      1922	intel_display.c	FUNCTION_65	SWITCH_1
0x40017d3	          0x4839c1	                            cmp rcx, rax	      1922	intel_display.c	FUNCTION_65	SWITCH_1
0x40017d6	            0x746b	                            je 0x4001843	      1922	intel_display.c	FUNCTION_65	SWITCH_1
0x40017d8	            0x89da	                            mov edx, ebx	      1922	intel_display.c	FUNCTION_65	SWITCH_1
0x40017da	            0x721d	                            jb 0x40017f9	      1922	intel_display.c	FUNCTION_65	SWITCH_1
0x40017dc	    0x48b805000000	          movabs rax, 0x100000000000005 	      1922	intel_display.c	FUNCTION_65	SWITCH_1
0x40017e6	          0x4839c1	                            cmp rcx, rax	      1922	intel_display.c	FUNCTION_65	SWITCH_1
0x40017e9	     0xf8588000000	                           jne 0x4001877	      1922	intel_display.c	FUNCTION_65	SWITCH_1
0x40017ef	          0x83fe01	                              cmp esi, 1	      1940	intel_display.c	FUNCTION_65	SWITCH_1	IF_4
0x40017f2	      0xb880000000	                           mov eax, 0x80	      1927	intel_display.c	FUNCTION_65	SWITCH_1	IF_1
0x40017f7	            0x7448	                            je 0x4001841	      1940	intel_display.c	FUNCTION_65	SWITCH_1	IF_4
0x40017f9	          0x80fa10	                            cmp dl, 0x10	      1944	intel_display.c	FUNCTION_65	SWITCH_1	SWITCH_2
0x40017fc	           0xfb6f2	                           movzx esi, dl	      1944	intel_display.c	FUNCTION_65	SWITCH_1	SWITCH_2
0x40017ff	     0xf87a3000000	                            ja 0x40018a8	      1944	intel_display.c	FUNCTION_65	SWITCH_1	SWITCH_2
0x4001805	    0x488b04f50000	                  mov rax, qword [rsi*8]	      1944	intel_display.c	FUNCTION_65	SWITCH_1	SWITCH_2
0x400180d	      0xe900000000	                           jmp 0x4001812	      1944	intel_display.c	FUNCTION_65	SWITCH_1	SWITCH_2
0x4001812	          0x4885c9	                           test rcx, rcx	      1922	intel_display.c	FUNCTION_65	SWITCH_1
0x4001815	            0x89d8	                            mov eax, ebx	      1924	intel_display.c	FUNCTION_65	SWITCH_1
0x4001817	            0x7428	                            je 0x4001841	      1922	intel_display.c	FUNCTION_65	SWITCH_1
0x4001819	    0x48b801000000	          movabs rax, 0x100000000000001 	      1922	intel_display.c	FUNCTION_65	SWITCH_1
0x4001823	          0x4839c1	                            cmp rcx, rax	      1922	intel_display.c	FUNCTION_65	SWITCH_1
0x4001826	            0x754f	                           jne 0x4001877	      1922	intel_display.c	FUNCTION_65	SWITCH_1
0x4001828	    0x410fb7805a06	           movzx eax, word [r8 + 0x65a] 	      1926	intel_display.c	FUNCTION_65	SWITCH_1	IF_1	CALL_2
0x4001830	          0x83e002	                              and eax, 2	      1926	intel_display.c	FUNCTION_65	SWITCH_1	IF_1	CALL_2
0x4001833	        0x6683f801	                               cmp ax, 1	      1927	intel_display.c	FUNCTION_65	SWITCH_1	IF_1
0x4001837	            0x19c0	                            sbb eax, eax	      1927	intel_display.c	FUNCTION_65	SWITCH_1	IF_1
0x4001839	      0x2580010000	                          and eax, 0x180	      1927	intel_display.c	FUNCTION_65	SWITCH_1	IF_1
0x400183e	          0x83e880	             sub eax, 0xffffffffffffff80	      1927	intel_display.c	FUNCTION_65	SWITCH_1	IF_1
0x4001841	              0x5b	                                 pop rbx	      1962	intel_display.c	FUNCTION_65
0x4001842	              0xc3	                                     ret	      1962	intel_display.c	FUNCTION_65
0x4001843	          0x83fe01	                              cmp esi, 1	      1931	intel_display.c	FUNCTION_65	SWITCH_1	IF_2
0x4001846	      0xb880000000	                           mov eax, 0x80	      1927	intel_display.c	FUNCTION_65	SWITCH_1	IF_1
0x400184b	            0x74f4	                            je 0x4001841	      1931	intel_display.c	FUNCTION_65	SWITCH_1	IF_2
0x400184d	    0x41f6805a0600	               test byte [r8 + 0x65a], 2	      1935	intel_display.c	FUNCTION_65	SWITCH_1	IF_3	CALL_4
0x4001855	      0xb880000000	                           mov eax, 0x80	      1927	intel_display.c	FUNCTION_65	SWITCH_1	IF_1
0x400185a	            0x75e5	                           jne 0x4001841	      1935	intel_display.c	FUNCTION_65	SWITCH_1	IF_3	CALL_4
0x400185c	    0x418b80640600	            mov eax, dword [r8 + 0x664] 	      1935	intel_display.c	FUNCTION_65	SWITCH_1	IF_3	CALL_4
0x4001863	              0x5b	                                 pop rbx	      1962	intel_display.c	FUNCTION_65
0x4001864	          0x83e060	                           and eax, 0x60	      1935	intel_display.c	FUNCTION_65	SWITCH_1	IF_3	CALL_4
0x4001867	          0x83f801	                              cmp eax, 1	      1927	intel_display.c	FUNCTION_65	SWITCH_1	IF_1
0x400186a	            0x19c0	                            sbb eax, eax	      1927	intel_display.c	FUNCTION_65	SWITCH_1	IF_1
0x400186c	      0x2580feffff	                     and eax, 0xfffffe80	      1927	intel_display.c	FUNCTION_65	SWITCH_1	IF_1
0x4001871	       0x500020000	                          add eax, 0x200	      1927	intel_display.c	FUNCTION_65	SWITCH_1	IF_1
0x4001876	              0xc3	                                     ret	      1962	intel_display.c	FUNCTION_65
0x4001877	    0x48c7c2000000	                              mov rdx, 0	      1959	intel_display.c	FUNCTION_65	SWITCH_1	CALL_6
0x400187e	          0x4889ce	                            mov rsi, rcx	      1959	intel_display.c	FUNCTION_65	SWITCH_1	CALL_6
0x4001881	    0x48c7c7000000	                              mov rdi, 0	      1959	intel_display.c	FUNCTION_65	SWITCH_1	CALL_6
0x4001888	      0xe800000000	                          call 0x400188d	      1959	intel_display.c	FUNCTION_65	SWITCH_1	CALL_6
0x400188d	             0xf0b	                                     ud2	      1959	intel_display.c	FUNCTION_65	SWITCH_1	CALL_6
0x400188f	            0x89d8	                            mov eax, ebx	      1960	intel_display.c	FUNCTION_65	SWITCH_1
0x4001891	              0x5b	                                 pop rbx	      1962	intel_display.c	FUNCTION_65
0x4001892	              0xc3	                                     ret	      1962	intel_display.c	FUNCTION_65
0x4001893	      0xb840000000	                           mov eax, 0x40	      1946	intel_display.c	FUNCTION_65	SWITCH_1	SWITCH_2
0x4001898	              0x5b	                                 pop rbx	      1962	intel_display.c	FUNCTION_65
0x4001899	              0xc3	                                     ret	      1962	intel_display.c	FUNCTION_65
0x400189a	      0xb880000000	                           mov eax, 0x80	      1949	intel_display.c	FUNCTION_65	SWITCH_1	SWITCH_2
0x400189f	              0x5b	                                 pop rbx	      1962	intel_display.c	FUNCTION_65
0x40018a0	              0xc3	                                     ret	      1962	intel_display.c	FUNCTION_65
0x40018a1	      0xb800010000	                          mov eax, 0x100	      1952	intel_display.c	FUNCTION_65	SWITCH_1	SWITCH_2
0x40018a6	              0x5b	                                 pop rbx	      1962	intel_display.c	FUNCTION_65
0x40018a7	              0xc3	                                     ret	      1962	intel_display.c	FUNCTION_65
0x40018a8	    0x48c7c2000000	                              mov rdx, 0	      1954	intel_display.c	FUNCTION_65	SWITCH_1	SWITCH_2	CALL_5
0x40018af	    0x48c7c7000000	                              mov rdi, 0	      1954	intel_display.c	FUNCTION_65	SWITCH_1	SWITCH_2	CALL_5
0x40018b6	      0xe800000000	                          call 0x40018bb	      1954	intel_display.c	FUNCTION_65	SWITCH_1	SWITCH_2	CALL_5
0x40018bb	             0xf0b	                                     ud2	      1954	intel_display.c	FUNCTION_65	SWITCH_1	SWITCH_2	CALL_5
0x40018bd	            0x89d8	                            mov eax, ebx	      1955	intel_display.c	FUNCTION_65	SWITCH_1	SWITCH_2
0x40018bf	              0x5b	                                 pop rbx	      1962	intel_display.c	FUNCTION_65
0x40018c0	              0xc3	                                     ret	      1962	intel_display.c	FUNCTION_65
gpu_reset_clobbers_display	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,3	12
0x4002c20	              0x53	                                push rbx	      3666	intel_display.c	FUNCTION_120
0x4002c21	          0x4889fb	                            mov rbx, rdi	      3666	intel_display.c	FUNCTION_120
0x4002c24	      0xe800000000	                          call 0x4002c29	      3667	intel_display.c	FUNCTION_120	CALL_1
0x4002c29	            0x84c0	                             test al, al	      3668	intel_display.c	FUNCTION_120	CALL_3
0x4002c2b	            0x7418	                            je 0x4002c45	      3668	intel_display.c	FUNCTION_120	CALL_3
0x4002c2d	            0x31c0	                            xor eax, eax	      3668	intel_display.c	FUNCTION_120	CALL_3
0x4002c2f	    0x80bb5c060000	               cmp byte [rbx + 0x65c], 4	      3667	intel_display.c	FUNCTION_120	CALL_1
0x4002c36	            0x770d	                            ja 0x4002c45	      3667	intel_display.c	FUNCTION_120	CALL_1
0x4002c38	    0xf78364060000	       test dword [rbx + 0x664], 0x6000 	      3668	intel_display.c	FUNCTION_120	CALL_3
0x4002c42	           0xf94c0	                                 sete al	      3668	intel_display.c	FUNCTION_120	CALL_3
0x4002c45	              0x5b	                                 pop rbx	      3669	intel_display.c	FUNCTION_120
0x4002c46	              0xc3	                                     ret	      3669	intel_display.c	FUNCTION_120
lpt_get_iclkip	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,2:ELSE,0:functions,0:CALL,8	66
0x400fcb0	            0x4154	                                push r12	      4454	intel_display.c	FUNCTION_134
0x400fcb2	      0xba01000000	                              mov edx, 1	      4461	intel_display.c	FUNCTION_134	IF_1	CALL_1
0x400fcb7	              0x55	                                push rbp	      4454	intel_display.c	FUNCTION_134
0x400fcb8	      0xbe20600c00	                        mov esi, 0xc6020	      4461	intel_display.c	FUNCTION_134	IF_1	CALL_1
0x400fcbd	              0x53	                                push rbx	      4454	intel_display.c	FUNCTION_134
0x400fcbe	            0x31ed	                            xor ebp, ebp	      4462	intel_display.c	FUNCTION_134	IF_1
0x400fcc0	          0x4889fb	                            mov rbx, rdi	      4454	intel_display.c	FUNCTION_134
0x400fcc3	    0x488b87f80700	           mov rax, qword [rdi + 0x7f8] 	      4461	intel_display.c	FUNCTION_134	IF_1	CALL_1
0x400fcca	      0xe800000000	                          call 0x400fccf	      4461	intel_display.c	FUNCTION_134	IF_1	CALL_1
0x400fccf	            0xa801	                              test al, 1	      4461	intel_display.c	FUNCTION_134	IF_1	CALL_1
0x400fcd1	            0x7507	                           jne 0x400fcda	      4461	intel_display.c	FUNCTION_134	IF_1	CALL_1
0x400fcd3	            0x89e8	                            mov eax, ebp	      4488	intel_display.c	FUNCTION_134
0x400fcd5	              0x5b	                                 pop rbx	      4488	intel_display.c	FUNCTION_134
0x400fcd6	              0x5d	                                 pop rbp	      4488	intel_display.c	FUNCTION_134
0x400fcd7	            0x415c	                                 pop r12	      4488	intel_display.c	FUNCTION_134
0x400fcd9	              0xc3	                                     ret	      4488	intel_display.c	FUNCTION_134
0x400fcda	    0x4c8da3404800	                 lea r12, [rbx + 0x4840]	      4464	intel_display.c	FUNCTION_134	CALL_2
0x400fce1	          0x4c89e7	                            mov rdi, r12	      4464	intel_display.c	FUNCTION_134	CALL_2
0x400fce4	      0xe800000000	                          call 0x400fce9	      4464	intel_display.c	FUNCTION_134	CALL_2
0x400fce9	            0x31d2	                            xor edx, edx	      4466	intel_display.c	FUNCTION_134	CALL_3
0x400fceb	      0xbe0c060000	                          mov esi, 0x60c	      4466	intel_display.c	FUNCTION_134	CALL_3
0x400fcf0	          0x4889df	                            mov rdi, rbx	      4466	intel_display.c	FUNCTION_134	CALL_3
0x400fcf3	      0xe800000000	                          call 0x400fcf8	      4466	intel_display.c	FUNCTION_134	CALL_3
0x400fcf8	            0xa801	                              test al, 1	      4467	intel_display.c	FUNCTION_134	IF_2
0x400fcfa	            0x7566	                           jne 0x400fd62	      4467	intel_display.c	FUNCTION_134	IF_2
0x400fcfc	          0x4889df	                            mov rdi, rbx	      4472	intel_display.c	FUNCTION_134	CALL_5
0x400fcff	            0x31d2	                            xor edx, edx	      4472	intel_display.c	FUNCTION_134	CALL_5
0x400fd01	      0xbe00060000	                          mov esi, 0x600	      4472	intel_display.c	FUNCTION_134	CALL_5
0x400fd06	      0xe800000000	                          call 0x400fd0b	      4472	intel_display.c	FUNCTION_134	CALL_5
0x400fd0b	            0x31d2	                            xor edx, edx	      4478	intel_display.c	FUNCTION_134	CALL_6
0x400fd0d	          0x4889df	                            mov rdi, rbx	      4478	intel_display.c	FUNCTION_134	CALL_6
0x400fd10	      0xbe10060000	                          mov esi, 0x610	      4478	intel_display.c	FUNCTION_134	CALL_6
0x400fd15	            0x89c5	                            mov ebp, eax	      4472	intel_display.c	FUNCTION_134	CALL_5
0x400fd17	      0xe800000000	                          call 0x400fd1c	      4478	intel_display.c	FUNCTION_134	CALL_6
0x400fd1c	          0x4c89e7	                            mov rdi, r12	      4482	intel_display.c	FUNCTION_134	CALL_7
0x400fd1f	            0x89c3	                            mov ebx, eax	      4478	intel_display.c	FUNCTION_134	CALL_6
0x400fd21	      0xe800000000	                          call 0x400fd26	      4482	intel_display.c	FUNCTION_134	CALL_7
0x400fd26	            0x89e8	                            mov eax, ebp	      4486	intel_display.c	FUNCTION_134	CALL_8
0x400fd28	    0x81e5007f0000	                         and ebp, 0x7f00	      4486	intel_display.c	FUNCTION_134	CALL_8
0x400fd2e	            0x89d9	                            mov ecx, ebx	      4486	intel_display.c	FUNCTION_134	CALL_8
0x400fd30	      0x25fe000000	                           and eax, 0xfe	      4486	intel_display.c	FUNCTION_134	CALL_8
0x400fd35	          0xc1ed08	                              shr ebp, 8	      4486	intel_display.c	FUNCTION_134	CALL_8
0x400fd38	          0x83e110	                           and ecx, 0x10	      4486	intel_display.c	FUNCTION_134	CALL_8
0x400fd3b	          0xc1e005	                              shl eax, 5	      4486	intel_display.c	FUNCTION_134	CALL_8
0x400fd3e	          0xc1e904	                              shr ecx, 4	      4486	intel_display.c	FUNCTION_134	CALL_8
0x400fd41	    0x8d9428800000	            lea edx, [rax + rbp + 0x80] 	      4486	intel_display.c	FUNCTION_134	CALL_8
0x400fd48	              0x5b	                                 pop rbx	      4488	intel_display.c	FUNCTION_134
0x400fd49	            0xd3e2	                             shl edx, cl	      4486	intel_display.c	FUNCTION_134	CALL_8
0x400fd4b	            0x89d0	                            mov eax, edx	      4486	intel_display.c	FUNCTION_134	CALL_8
0x400fd4d	            0x89d1	                            mov ecx, edx	      4486	intel_display.c	FUNCTION_134	CALL_8
0x400fd4f	            0x31d2	                            xor edx, edx	      4486	intel_display.c	FUNCTION_134	CALL_8
0x400fd51	            0xd1e8	                              shr eax, 1	      4486	intel_display.c	FUNCTION_134	CALL_8
0x400fd53	       0x500b84c0a	                      add eax, 0xa4cb800	      4486	intel_display.c	FUNCTION_134	CALL_8
0x400fd58	            0xf7f1	                                 div ecx	      4486	intel_display.c	FUNCTION_134	CALL_8
0x400fd5a	            0x89c5	                            mov ebp, eax	      4486	intel_display.c	FUNCTION_134	CALL_8
0x400fd5c	            0x89e8	                            mov eax, ebp	      4488	intel_display.c	FUNCTION_134
0x400fd5e	              0x5d	                                 pop rbp	      4488	intel_display.c	FUNCTION_134
0x400fd5f	            0x415c	                                 pop r12	      4488	intel_display.c	FUNCTION_134
0x400fd61	              0xc3	                                     ret	      4488	intel_display.c	FUNCTION_134
0x400fd62	          0x4c89e7	                            mov rdi, r12	      4468	intel_display.c	FUNCTION_134	IF_2	CALL_4
0x400fd65	      0xe800000000	                          call 0x400fd6a	      4468	intel_display.c	FUNCTION_134	IF_2	CALL_4
0x400fd6a	            0x89e8	                            mov eax, ebp	      4488	intel_display.c	FUNCTION_134
0x400fd6c	              0x5b	                                 pop rbx	      4488	intel_display.c	FUNCTION_134
0x400fd6d	              0x5d	                                 pop rbp	      4488	intel_display.c	FUNCTION_134
0x400fd6e	            0x415c	                                 pop r12	      4488	intel_display.c	FUNCTION_134
0x400fd70	              0xc3	                                     ret	      4488	intel_display.c	FUNCTION_134
intel_set_pipe_timings	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,5:ELSE,1:functions,0:CALL,22	168
0x4000940	            0x4157	                                push r15	      7098	intel_display.c	ELSE_3	FUNCTION_218
0x4000942	            0x4156	                                push r14	      7098	intel_display.c	ELSE_3	FUNCTION_218
0x4000944	            0x31d2	                            xor edx, edx	      7098	intel_display.c	ELSE_3	FUNCTION_218
0x4000946	            0x4155	                                push r13	      7098	intel_display.c	ELSE_3	FUNCTION_218
0x4000948	            0x4154	                                push r12	      7098	intel_display.c	ELSE_3	FUNCTION_218
0x400094a	              0x55	                                push rbp	      7098	intel_display.c	ELSE_3	FUNCTION_218
0x400094b	              0x53	                                push rbx	      7098	intel_display.c	ELSE_3	FUNCTION_218
0x400094c	        0x4883ec08	                              sub rsp, 8	      7098	intel_display.c	ELSE_3	FUNCTION_218
0x4000950	    0x488bafc80400	           mov rbp, qword [rdi + 0x4c8] 	      7101	intel_display.c	ELSE_3	FUNCTION_218
0x4000957	    0x8b87b0040000	           mov eax, dword [rdi + 0x4b0] 	      7100	intel_display.c	ELSE_3	FUNCTION_218
0x400095d	          0x488b1f	                    mov rbx, qword [rdi]	      7099	intel_display.c	ELSE_3	FUNCTION_218	CALL_1
0x4000960	    0xf6859c000000	           test byte [rbp + 0x9c], 0x10 	      7111	intel_display.c	ELSE_3	FUNCTION_218	IF_1
0x4000967	        0x89442404	                mov dword [rsp + 4], eax	      7100	intel_display.c	ELSE_3	FUNCTION_218
0x400096b	    0x448bad3c0200	          mov r13d, dword [rbp + 0x23c] 	      7101	intel_display.c	ELSE_3	FUNCTION_218
0x4000972	    0x448bbddc0000	           mov r15d, dword [rbp + 0xdc] 	      7108	intel_display.c	ELSE_3	FUNCTION_218
0x4000979	    0x448ba5d00000	           mov r12d, dword [rbp + 0xd0] 	      7109	intel_display.c	ELSE_3	FUNCTION_218
0x4000980	            0x7435	                            je 0x40009b7	      7111	intel_display.c	ELSE_3	FUNCTION_218	IF_1
0x4000982	        0x4183ef01	                             sub r15d, 1	      7113	intel_display.c	ELSE_3	FUNCTION_218	IF_1
0x4000986	        0x4183ec01	                             sub r12d, 1	      7114	intel_display.c	ELSE_3	FUNCTION_218	IF_1
0x400098a	    0xf68544020000	              test byte [rbp + 0x244], 8	      7116	intel_display.c	ELSE_3	FUNCTION_218	IF_1	IF_2	CALL_2
0x4000991	    0x8b85c0000000	            mov eax, dword [rbp + 0xc0] 	      7117	intel_display.c	ELSE_3	FUNCTION_218	IF_1	IF_2
0x4000997	     0xf85f0010000	                           jne 0x4000b8d	      7116	intel_display.c	ELSE_3	FUNCTION_218	IF_1	IF_2	CALL_2
0x400099d	            0x89c2	                            mov edx, eax	      7119	intel_display.c	ELSE_3	FUNCTION_218	IF_1	ELSE_1
0x400099f	    0x8bbdb8000000	            mov edi, dword [rbp + 0xb8] 	      7119	intel_display.c	ELSE_3	FUNCTION_218	IF_1	ELSE_1
0x40009a5	          0xc1ea1f	                           shr edx, 0x1f	      7119	intel_display.c	ELSE_3	FUNCTION_218	IF_1	ELSE_1
0x40009a8	             0x1c2	                            add edx, eax	      7119	intel_display.c	ELSE_3	FUNCTION_218	IF_1	ELSE_1
0x40009aa	            0xd1fa	                              sar edx, 1	      7119	intel_display.c	ELSE_3	FUNCTION_218	IF_1	ELSE_1
0x40009ac	            0x29d7	                            sub edi, edx	      7119	intel_display.c	ELSE_3	FUNCTION_218	IF_1	ELSE_1
0x40009ae	            0x89fa	                            mov edx, edi	      7119	intel_display.c	ELSE_3	FUNCTION_218	IF_1	ELSE_1
0x40009b0	             0x1d0	                            add eax, edx	      7122	intel_display.c	ELSE_3	FUNCTION_218	IF_1	IF_3
0x40009b2	            0x85d2	                           test edx, edx	      7122	intel_display.c	ELSE_3	FUNCTION_218	IF_1	IF_3
0x40009b4	           0xf48d0	                          cmovs edx, eax	      7122	intel_display.c	ELSE_3	FUNCTION_218	IF_1	IF_3
0x40009b7	    0x80bb5c060000	               cmp byte [rbx + 0x65c], 3	      7125	intel_display.c	ELSE_3	FUNCTION_218	IF_4	CALL_3
0x40009be	          0x4589ee	                          mov r14d, r13d	      7125	intel_display.c	ELSE_3	FUNCTION_218	IF_4	CALL_3
0x40009c1	     0xf87d7010000	                            ja 0x4000b9e	      7125	intel_display.c	ELSE_3	FUNCTION_218	IF_4	CALL_3
0x40009c7	    0x8b85c0000000	            mov eax, dword [rbp + 0xc0] 	      7128	intel_display.c	ELSE_3	FUNCTION_218	CALL_7
0x40009cd	        0x4e8d34b3	                  lea r14, [rbx + r14*4]	      7128	intel_display.c	ELSE_3	FUNCTION_218	CALL_7
0x40009d1	    0x8bb36c060000	           mov esi, dword [rbx + 0x66c] 	      7128	intel_display.c	ELSE_3	FUNCTION_218	CALL_7
0x40009d7	    0x4c8b8b180800	            mov r9, qword [rbx + 0x818] 	      7128	intel_display.c	ELSE_3	FUNCTION_218	CALL_7
0x40009de	          0x4889df	                            mov rdi, rbx	      7128	intel_display.c	ELSE_3	FUNCTION_218	CALL_7
0x40009e1	        0x4183ef01	                             sub r15d, 1	      7138	intel_display.c	ELSE_3	FUNCTION_218	CALL_13
0x40009e5	    0x418b8e980600	           mov ecx, dword [r14 + 0x698] 	      7128	intel_display.c	ELSE_3	FUNCTION_218	CALL_7
0x40009ec	    0x2b8b98060000	            sub ecx, dword [rbx + 0x698]	      7128	intel_display.c	ELSE_3	FUNCTION_218	CALL_7
0x40009f2	        0x41c1e710	                          shl r15d, 0x10	      7138	intel_display.c	ELSE_3	FUNCTION_218	CALL_13
0x40009f6	          0x8d50ff	                      lea edx, [rax - 1]	      7128	intel_display.c	ELSE_3	FUNCTION_218	CALL_7
0x40009f9	    0x8b85ac000000	            mov eax, dword [rbp + 0xac] 	      7128	intel_display.c	ELSE_3	FUNCTION_218	CALL_7
0x40009ff	        0x4183ec01	                             sub r12d, 1	      7141	intel_display.c	ELSE_3	FUNCTION_218	CALL_15
0x4000a03	        0x41c1e410	                          shl r12d, 0x10	      7141	intel_display.c	ELSE_3	FUNCTION_218	CALL_15
0x4000a07	          0xc1e210	                           shl edx, 0x10	      7128	intel_display.c	ELSE_3	FUNCTION_218	CALL_7
0x4000a0a	          0x83e801	                              sub eax, 1	      7128	intel_display.c	ELSE_3	FUNCTION_218	CALL_7
0x4000a0d	    0x8db431000006	          lea esi, [rcx + rsi + 0x60000]	      7128	intel_display.c	ELSE_3	FUNCTION_218	CALL_7
0x4000a14	      0xb901000000	                              mov ecx, 1	      7128	intel_display.c	ELSE_3	FUNCTION_218	CALL_7
0x4000a19	             0x9c2	                             or edx, eax	      7128	intel_display.c	ELSE_3	FUNCTION_218	CALL_7
0x4000a1b	      0xe800000000	                          call 0x4000a20	      7128	intel_display.c	ELSE_3	FUNCTION_218	CALL_7
0x4000a20	    0x8b85b4000000	            mov eax, dword [rbp + 0xb4] 	      7131	intel_display.c	ELSE_3	FUNCTION_218	CALL_9
0x4000a26	    0x8bb36c060000	           mov esi, dword [rbx + 0x66c] 	      7131	intel_display.c	ELSE_3	FUNCTION_218	CALL_9
0x4000a2c	          0x4889df	                            mov rdi, rbx	      7131	intel_display.c	ELSE_3	FUNCTION_218	CALL_9
0x4000a2f	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	      7131	intel_display.c	ELSE_3	FUNCTION_218	CALL_9
0x4000a36	          0x8d50ff	                      lea edx, [rax - 1]	      7131	intel_display.c	ELSE_3	FUNCTION_218	CALL_9
0x4000a39	    0x8b85b0000000	            mov eax, dword [rbp + 0xb0] 	      7131	intel_display.c	ELSE_3	FUNCTION_218	CALL_9
0x4000a3f	          0xc1e210	                           shl edx, 0x10	      7131	intel_display.c	ELSE_3	FUNCTION_218	CALL_9
0x4000a42	          0x8d48ff	                      lea ecx, [rax - 1]	      7131	intel_display.c	ELSE_3	FUNCTION_218	CALL_9
0x4000a45	             0x9ca	                             or edx, ecx	      7131	intel_display.c	ELSE_3	FUNCTION_218	CALL_9
0x4000a47	    0x418b8e980600	           mov ecx, dword [r14 + 0x698] 	      7131	intel_display.c	ELSE_3	FUNCTION_218	CALL_9
0x4000a4e	    0x2b8b98060000	            sub ecx, dword [rbx + 0x698]	      7131	intel_display.c	ELSE_3	FUNCTION_218	CALL_9
0x4000a54	    0x8db431040006	          lea esi, [rcx + rsi + 0x60004]	      7131	intel_display.c	ELSE_3	FUNCTION_218	CALL_9
0x4000a5b	      0xb901000000	                              mov ecx, 1	      7131	intel_display.c	ELSE_3	FUNCTION_218	CALL_9
0x4000a60	      0xe800000000	                          call 0x4000a65	      7131	intel_display.c	ELSE_3	FUNCTION_218	CALL_9
0x4000a65	    0x8b85bc000000	            mov eax, dword [rbp + 0xbc] 	      7134	intel_display.c	ELSE_3	FUNCTION_218	CALL_11
0x4000a6b	    0x8bb36c060000	           mov esi, dword [rbx + 0x66c] 	      7134	intel_display.c	ELSE_3	FUNCTION_218	CALL_11
0x4000a71	          0x4889df	                            mov rdi, rbx	      7134	intel_display.c	ELSE_3	FUNCTION_218	CALL_11
0x4000a74	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	      7134	intel_display.c	ELSE_3	FUNCTION_218	CALL_11
0x4000a7b	          0x8d50ff	                      lea edx, [rax - 1]	      7134	intel_display.c	ELSE_3	FUNCTION_218	CALL_11
0x4000a7e	    0x8b85b8000000	            mov eax, dword [rbp + 0xb8] 	      7134	intel_display.c	ELSE_3	FUNCTION_218	CALL_11
0x4000a84	          0xc1e210	                           shl edx, 0x10	      7134	intel_display.c	ELSE_3	FUNCTION_218	CALL_11
0x4000a87	          0x8d48ff	                      lea ecx, [rax - 1]	      7134	intel_display.c	ELSE_3	FUNCTION_218	CALL_11
0x4000a8a	             0x9ca	                             or edx, ecx	      7134	intel_display.c	ELSE_3	FUNCTION_218	CALL_11
0x4000a8c	    0x418b8e980600	           mov ecx, dword [r14 + 0x698] 	      7134	intel_display.c	ELSE_3	FUNCTION_218	CALL_11
0x4000a93	    0x2b8b98060000	            sub ecx, dword [rbx + 0x698]	      7134	intel_display.c	ELSE_3	FUNCTION_218	CALL_11
0x4000a99	    0x8db431080006	          lea esi, [rcx + rsi + 0x60008]	      7134	intel_display.c	ELSE_3	FUNCTION_218	CALL_11
0x4000aa0	      0xb901000000	                              mov ecx, 1	      7134	intel_display.c	ELSE_3	FUNCTION_218	CALL_11
0x4000aa5	      0xe800000000	                          call 0x4000aaa	      7134	intel_display.c	ELSE_3	FUNCTION_218	CALL_11
0x4000aaa	    0x8b85c8000000	            mov eax, dword [rbp + 0xc8] 	      7138	intel_display.c	ELSE_3	FUNCTION_218	CALL_13
0x4000ab0	    0x418b8e980600	           mov ecx, dword [r14 + 0x698] 	      7138	intel_display.c	ELSE_3	FUNCTION_218	CALL_13
0x4000ab7	          0x4889df	                            mov rdi, rbx	      7138	intel_display.c	ELSE_3	FUNCTION_218	CALL_13
0x4000aba	    0x2b8b98060000	            sub ecx, dword [rbx + 0x698]	      7138	intel_display.c	ELSE_3	FUNCTION_218	CALL_13
0x4000ac0	    0x8bb36c060000	           mov esi, dword [rbx + 0x66c] 	      7138	intel_display.c	ELSE_3	FUNCTION_218	CALL_13
0x4000ac6	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	      7138	intel_display.c	ELSE_3	FUNCTION_218	CALL_13
0x4000acd	          0x8d50ff	                      lea edx, [rax - 1]	      7138	intel_display.c	ELSE_3	FUNCTION_218	CALL_13
0x4000ad0	    0x8db4310c0006	          lea esi, [rcx + rsi + 0x6000c]	      7138	intel_display.c	ELSE_3	FUNCTION_218	CALL_13
0x4000ad7	          0x4409fa	                            or edx, r15d	      7138	intel_display.c	ELSE_3	FUNCTION_218	CALL_13
0x4000ada	      0xb901000000	                              mov ecx, 1	      7138	intel_display.c	ELSE_3	FUNCTION_218	CALL_13
0x4000adf	      0xe800000000	                          call 0x4000ae4	      7138	intel_display.c	ELSE_3	FUNCTION_218	CALL_13
0x4000ae4	    0x8b85cc000000	            mov eax, dword [rbp + 0xcc] 	      7141	intel_display.c	ELSE_3	FUNCTION_218	CALL_15
0x4000aea	    0x418b8e980600	           mov ecx, dword [r14 + 0x698] 	      7141	intel_display.c	ELSE_3	FUNCTION_218	CALL_15
0x4000af1	          0x4889df	                            mov rdi, rbx	      7141	intel_display.c	ELSE_3	FUNCTION_218	CALL_15
0x4000af4	    0x2b8b98060000	            sub ecx, dword [rbx + 0x698]	      7141	intel_display.c	ELSE_3	FUNCTION_218	CALL_15
0x4000afa	    0x8bb36c060000	           mov esi, dword [rbx + 0x66c] 	      7141	intel_display.c	ELSE_3	FUNCTION_218	CALL_15
0x4000b00	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	      7141	intel_display.c	ELSE_3	FUNCTION_218	CALL_15
0x4000b07	          0x8d50ff	                      lea edx, [rax - 1]	      7141	intel_display.c	ELSE_3	FUNCTION_218	CALL_15
0x4000b0a	    0x8db431100006	          lea esi, [rcx + rsi + 0x60010]	      7141	intel_display.c	ELSE_3	FUNCTION_218	CALL_15
0x4000b11	          0x4409e2	                            or edx, r12d	      7141	intel_display.c	ELSE_3	FUNCTION_218	CALL_15
0x4000b14	      0xb901000000	                              mov ecx, 1	      7141	intel_display.c	ELSE_3	FUNCTION_218	CALL_15
0x4000b19	      0xe800000000	                          call 0x4000b1e	      7141	intel_display.c	ELSE_3	FUNCTION_218	CALL_15
0x4000b1e	    0x8b85d8000000	            mov eax, dword [rbp + 0xd8] 	      7144	intel_display.c	ELSE_3	FUNCTION_218	CALL_17
0x4000b24	    0x8b8dd4000000	            mov ecx, dword [rbp + 0xd4] 	      7144	intel_display.c	ELSE_3	FUNCTION_218	CALL_17
0x4000b2a	          0x4889df	                            mov rdi, rbx	      7144	intel_display.c	ELSE_3	FUNCTION_218	CALL_17
0x4000b2d	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	      7144	intel_display.c	ELSE_3	FUNCTION_218	CALL_17
0x4000b34	          0x8d50ff	                      lea edx, [rax - 1]	      7144	intel_display.c	ELSE_3	FUNCTION_218	CALL_17
0x4000b37	          0x83e901	                              sub ecx, 1	      7144	intel_display.c	ELSE_3	FUNCTION_218	CALL_17
0x4000b3a	    0x418b86980600	           mov eax, dword [r14 + 0x698] 	      7144	intel_display.c	ELSE_3	FUNCTION_218	CALL_17
0x4000b41	    0x2b8398060000	            sub eax, dword [rbx + 0x698]	      7144	intel_display.c	ELSE_3	FUNCTION_218	CALL_17
0x4000b47	          0xc1e210	                           shl edx, 0x10	      7144	intel_display.c	ELSE_3	FUNCTION_218	CALL_17
0x4000b4a	             0x9ca	                             or edx, ecx	      7144	intel_display.c	ELSE_3	FUNCTION_218	CALL_17
0x4000b4c	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	      7144	intel_display.c	ELSE_3	FUNCTION_218	CALL_17
0x4000b52	    0x8db408140006	          lea esi, [rax + rcx + 0x60014]	      7144	intel_display.c	ELSE_3	FUNCTION_218	CALL_17
0x4000b59	      0xb901000000	                              mov ecx, 1	      7144	intel_display.c	ELSE_3	FUNCTION_218	CALL_17
0x4000b5e	      0xe800000000	                          call 0x4000b63	      7144	intel_display.c	ELSE_3	FUNCTION_218	CALL_17
0x4000b63	    0xf68366060000	              test byte [rbx + 0x666], 8	      7152	intel_display.c	ELSE_3	FUNCTION_218	IF_5	CALL_18
0x4000b6a	            0x7412	                            je 0x4000b7e	      7152	intel_display.c	ELSE_3	FUNCTION_218	IF_5	CALL_18
0x4000b6c	        0x4183fd03	                             cmp r13d, 3	      7152	intel_display.c	ELSE_3	FUNCTION_218	IF_5	CALL_18
0x4000b70	            0x750c	                           jne 0x4000b7e	      7152	intel_display.c	ELSE_3	FUNCTION_218	IF_5	CALL_18
0x4000b72	        0x8b442404	                mov eax, dword [rsp + 4]	      7152	intel_display.c	ELSE_3	FUNCTION_218	IF_5	CALL_18
0x4000b76	          0x83e801	                              sub eax, 1	      7152	intel_display.c	ELSE_3	FUNCTION_218	IF_5	CALL_18
0x4000b79	          0x83f801	                              cmp eax, 1	      7152	intel_display.c	ELSE_3	FUNCTION_218	IF_5	CALL_18
0x4000b7c	            0x7654	                           jbe 0x4000bd2	      7152	intel_display.c	ELSE_3	FUNCTION_218	IF_5	CALL_18
0x4000b7e	        0x4883c408	                              add rsp, 8	      7156	intel_display.c	ELSE_3	FUNCTION_218
0x4000b82	              0x5b	                                 pop rbx	      7156	intel_display.c	ELSE_3	FUNCTION_218
0x4000b83	              0x5d	                                 pop rbp	      7156	intel_display.c	ELSE_3	FUNCTION_218
0x4000b84	            0x415c	                                 pop r12	      7156	intel_display.c	ELSE_3	FUNCTION_218
0x4000b86	            0x415d	                                 pop r13	      7156	intel_display.c	ELSE_3	FUNCTION_218
0x4000b88	            0x415e	                                 pop r14	      7156	intel_display.c	ELSE_3	FUNCTION_218
0x4000b8a	            0x415f	                                 pop r15	      7156	intel_display.c	ELSE_3	FUNCTION_218
0x4000b8c	              0xc3	                                     ret	      7156	intel_display.c	ELSE_3	FUNCTION_218
0x4000b8d	          0x8d50ff	                      lea edx, [rax - 1]	      7117	intel_display.c	ELSE_3	FUNCTION_218	IF_1	IF_2
0x4000b90	            0x89d1	                            mov ecx, edx	      7117	intel_display.c	ELSE_3	FUNCTION_218	IF_1	IF_2
0x4000b92	          0xc1e91f	                           shr ecx, 0x1f	      7117	intel_display.c	ELSE_3	FUNCTION_218	IF_1	IF_2
0x4000b95	             0x1ca	                            add edx, ecx	      7117	intel_display.c	ELSE_3	FUNCTION_218	IF_1	IF_2
0x4000b97	            0xd1fa	                              sar edx, 1	      7117	intel_display.c	ELSE_3	FUNCTION_218	IF_1	IF_2
0x4000b99	      0xe912feffff	                           jmp 0x40009b0	      7117	intel_display.c	ELSE_3	FUNCTION_218	IF_1	IF_2
0x4000b9e	    0x428b84b39806	   mov eax, dword [rbx + r14*4 + 0x698] 	      7126	intel_display.c	ELSE_3	FUNCTION_218	CALL_5
0x4000ba6	    0x2b8398060000	            sub eax, dword [rbx + 0x698]	      7126	intel_display.c	ELSE_3	FUNCTION_218	CALL_5
0x4000bac	          0x4889df	                            mov rdi, rbx	      7126	intel_display.c	ELSE_3	FUNCTION_218	CALL_5
0x4000baf	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	      7126	intel_display.c	ELSE_3	FUNCTION_218	CALL_5
0x4000bb5	    0x4c8b8b180800	            mov r9, qword [rbx + 0x818] 	      7126	intel_display.c	ELSE_3	FUNCTION_218	CALL_5
0x4000bbc	    0x8db408280006	          lea esi, [rax + rcx + 0x60028]	      7126	intel_display.c	ELSE_3	FUNCTION_218	CALL_5
0x4000bc3	      0xb901000000	                              mov ecx, 1	      7126	intel_display.c	ELSE_3	FUNCTION_218	CALL_5
0x4000bc8	      0xe800000000	                          call 0x4000bcd	      7126	intel_display.c	ELSE_3	FUNCTION_218	CALL_5
0x4000bcd	      0xe9f5fdffff	                           jmp 0x40009c7	      7126	intel_display.c	ELSE_3	FUNCTION_218	CALL_5
0x4000bd2	    0x8b83a4060000	           mov eax, dword [rbx + 0x6a4] 	      7154	intel_display.c	ELSE_3	FUNCTION_218	CALL_22
0x4000bd8	    0x2b8398060000	            sub eax, dword [rbx + 0x698]	      7154	intel_display.c	ELSE_3	FUNCTION_218	CALL_22
0x4000bde	          0x4889df	                            mov rdi, rbx	      7154	intel_display.c	ELSE_3	FUNCTION_218	CALL_22
0x4000be1	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	      7154	intel_display.c	ELSE_3	FUNCTION_218	CALL_22
0x4000be7	    0x488b8bf80700	           mov rcx, qword [rbx + 0x7f8] 	      7154	intel_display.c	ELSE_3	FUNCTION_218	CALL_22
0x4000bee	    0x488bab180800	           mov rbp, qword [rbx + 0x818] 	      7154	intel_display.c	ELSE_3	FUNCTION_218	CALL_22
0x4000bf5	    0x8db4100c0006	          lea esi, [rax + rdx + 0x6000c]	      7154	intel_display.c	ELSE_3	FUNCTION_218	CALL_22
0x4000bfc	      0xba01000000	                              mov edx, 1	      7154	intel_display.c	ELSE_3	FUNCTION_218	CALL_22
0x4000c01	      0xe800000000	                          call 0x4000c06	      7154	intel_display.c	ELSE_3	FUNCTION_218	CALL_22
0x4000c06	      0x4c63742404	            movsxd r14, dword [rsp + 4] 	      7154	intel_display.c	ELSE_3	FUNCTION_218	CALL_22
0x4000c0b	    0x8b936c060000	           mov edx, dword [rbx + 0x66c] 	      7154	intel_display.c	ELSE_3	FUNCTION_218	CALL_22
0x4000c11	          0x4889df	                            mov rdi, rbx	      7154	intel_display.c	ELSE_3	FUNCTION_218	CALL_22
0x4000c14	    0x428b8cb39806	   mov ecx, dword [rbx + r14*4 + 0x698] 	      7154	intel_display.c	ELSE_3	FUNCTION_218	CALL_22
0x4000c1c	    0x2b8b98060000	            sub ecx, dword [rbx + 0x698]	      7154	intel_display.c	ELSE_3	FUNCTION_218	CALL_22
0x4000c22	    0x8db4110c0006	          lea esi, [rcx + rdx + 0x6000c]	      7154	intel_display.c	ELSE_3	FUNCTION_218	CALL_22
0x4000c29	      0xb901000000	                              mov ecx, 1	      7154	intel_display.c	ELSE_3	FUNCTION_218	CALL_22
0x4000c2e	            0x89c2	                            mov edx, eax	      7154	intel_display.c	ELSE_3	FUNCTION_218	CALL_22
0x4000c30	      0xe800000000	                          call 0x4000c35	      7154	intel_display.c	ELSE_3	FUNCTION_218	CALL_22
0x4000c35	      0xe944ffffff	                           jmp 0x4000b7e	      7156	intel_display.c	ELSE_3	FUNCTION_218
intel_mode_from_pipe_config	FOR,0:SWITCH,0:DO,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,3	31
0x40149e0	    0x8b86ac000000	            mov eax, dword [rsi + 0xac] 	      7225	intel_display.c	FUNCTION_222
0x40149e6	              0x53	                                push rbx	      7224	intel_display.c	FUNCTION_222
0x40149e7	          0x4889fb	                            mov rbx, rdi	      7224	intel_display.c	FUNCTION_222
0x40149ea	          0x89475c	             mov dword [rdi + 0x5c], eax	      7225	intel_display.c	FUNCTION_222
0x40149ed	    0x8b86c0000000	            mov eax, dword [rsi + 0xc0] 	      7226	intel_display.c	FUNCTION_222
0x40149f3	          0x894768	             mov dword [rdi + 0x68], eax	      7226	intel_display.c	FUNCTION_222
0x40149f6	    0x8b86b8000000	            mov eax, dword [rsi + 0xb8] 	      7227	intel_display.c	FUNCTION_222
0x40149fc	          0x894760	             mov dword [rdi + 0x60], eax	      7227	intel_display.c	FUNCTION_222
0x40149ff	    0x8b86bc000000	            mov eax, dword [rsi + 0xbc] 	      7228	intel_display.c	FUNCTION_222
0x4014a05	          0x894764	             mov dword [rdi + 0x64], eax	      7228	intel_display.c	FUNCTION_222
0x4014a08	    0x8b86c8000000	            mov eax, dword [rsi + 0xc8] 	      7230	intel_display.c	FUNCTION_222
0x4014a0e	          0x894770	             mov dword [rdi + 0x70], eax	      7230	intel_display.c	FUNCTION_222
0x4014a11	    0x8b86dc000000	            mov eax, dword [rsi + 0xdc] 	      7231	intel_display.c	FUNCTION_222
0x4014a17	          0x89477c	             mov dword [rdi + 0x7c], eax	      7231	intel_display.c	FUNCTION_222
0x4014a1a	    0x8b86d4000000	            mov eax, dword [rsi + 0xd4] 	      7232	intel_display.c	FUNCTION_222
0x4014a20	          0x894774	             mov dword [rdi + 0x74], eax	      7232	intel_display.c	FUNCTION_222
0x4014a23	    0x8b86d8000000	            mov eax, dword [rsi + 0xd8] 	      7233	intel_display.c	FUNCTION_222
0x4014a29	          0x894778	             mov dword [rdi + 0x78], eax	      7233	intel_display.c	FUNCTION_222
0x4014a2c	    0x8b869c000000	            mov eax, dword [rsi + 0x9c] 	      7235	intel_display.c	FUNCTION_222
0x4014a32	    0xc74754400000	           mov dword [rdi + 0x54], 0x40 	      7236	intel_display.c	FUNCTION_222
0x4014a39	    0x898784000000	             mov dword [rdi + 0x84], eax	      7235	intel_display.c	FUNCTION_222
0x4014a3f	    0x8b86a8000000	            mov eax, dword [rsi + 0xa8] 	      7238	intel_display.c	FUNCTION_222
0x4014a45	          0x894758	             mov dword [rdi + 0x58], eax	      7238	intel_display.c	FUNCTION_222
0x4014a48	      0xe800000000	                          call 0x4014a4d	      7240	intel_display.c	FUNCTION_222	CALL_1
0x4014a4d	          0x4889df	                            mov rdi, rbx	      7241	intel_display.c	FUNCTION_222	CALL_2
0x4014a50	    0x8983d8000000	             mov dword [rbx + 0xd8], eax	      7240	intel_display.c	FUNCTION_222	CALL_1
0x4014a56	      0xe800000000	                          call 0x4014a5b	      7241	intel_display.c	FUNCTION_222	CALL_2
0x4014a5b	          0x4889df	                            mov rdi, rbx	      7242	intel_display.c	FUNCTION_222	CALL_3
0x4014a5e	    0x8983d4000000	             mov dword [rbx + 0xd4], eax	      7241	intel_display.c	FUNCTION_222	CALL_2
0x4014a64	              0x5b	                                 pop rbx	      7243	intel_display.c	FUNCTION_222
0x4014a65	      0xe900000000	                           jmp 0x4014a6a	      7242	intel_display.c	FUNCTION_222	CALL_3
