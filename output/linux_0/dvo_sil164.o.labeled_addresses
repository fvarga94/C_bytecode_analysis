sil164_mode_set	FOR,0:functions,0:IF,0:WHILE,0:ELSE,0:CALL,0:SWITCH,0:DO,0	1
0x4000050	            0xf3c3	                                     ret	       195	dvo_sil164.c	FUNCTION_6
sil164_readb	FOR,0:functions,0:IF,2:WHILE,0:ELSE,0:CALL,2:SWITCH,0:DO,0	74
0x4000060	      0x4c8d542408	                      lea r10, [rsp + 8]	        69	dvo_sil164.c	FUNCTION_1
0x4000065	        0x4883e4f0	             and rsp, 0xfffffffffffffff0	        69	dvo_sil164.c	FUNCTION_1
0x4000069	      0xb901000000	                              mov ecx, 1	        75	dvo_sil164.c	FUNCTION_1
0x400006e	    0x41b801000000	                              mov r8d, 1	        75	dvo_sil164.c	FUNCTION_1
0x4000074	        0x41ff72f8	                    push qword [r10 - 8]	        69	dvo_sil164.c	FUNCTION_1
0x4000078	              0x55	                                push rbp	        69	dvo_sil164.c	FUNCTION_1
0x4000079	          0x4889e5	                            mov rbp, rsp	        69	dvo_sil164.c	FUNCTION_1
0x400007c	            0x4157	                                push r15	        69	dvo_sil164.c	FUNCTION_1
0x400007e	            0x4156	                                push r14	        69	dvo_sil164.c	FUNCTION_1
0x4000080	            0x4155	                                push r13	        69	dvo_sil164.c	FUNCTION_1
0x4000082	            0x4154	                                push r12	        69	dvo_sil164.c	FUNCTION_1
0x4000084	          0x4989d6	                            mov r14, rdx	        69	dvo_sil164.c	FUNCTION_1
0x4000087	            0x4152	                                push r10	        69	dvo_sil164.c	FUNCTION_1
0x4000089	              0x53	                                push rbx	        69	dvo_sil164.c	FUNCTION_1
0x400008a	            0x31d2	                            xor edx, edx	        75	dvo_sil164.c	FUNCTION_1
0x400008c	          0x4889fb	                            mov rbx, rdi	        69	dvo_sil164.c	FUNCTION_1
0x400008f	          0x4189f7	                           mov r15d, esi	        69	dvo_sil164.c	FUNCTION_1
0x4000092	        0x4883ec40	                           sub rsp, 0x40	        69	dvo_sil164.c	FUNCTION_1
0x4000096	        0x4c8b6730	            mov r12, qword [rdi + 0x30] 	        71	dvo_sil164.c	FUNCTION_1
0x400009a	        0x668955a2	               mov word [rbp - 0x5e], dx	        75	dvo_sil164.c	FUNCTION_1
0x400009e	    0x65488b042528	                mov rax, qword gs:[0x28]	        69	dvo_sil164.c	FUNCTION_1
0x40000a7	        0x488945c8	             mov qword [rbp - 0x38], rax	        69	dvo_sil164.c	FUNCTION_1
0x40000ab	            0x31c0	                            xor eax, eax	        69	dvo_sil164.c	FUNCTION_1
0x40000ad	          0x8b4718	            mov eax, dword [rdi + 0x18] 	        75	dvo_sil164.c	FUNCTION_1
0x40000b0	        0x488d55c4	                   lea rdx, [rbp - 0x3c]	        75	dvo_sil164.c	FUNCTION_1
0x40000b4	        0x4c8b6f28	            mov r13, qword [rdi + 0x28] 	        70	dvo_sil164.c	FUNCTION_1
0x40000b8	        0x408875c4	              mov byte [rbp - 0x3c], sil	        90	dvo_sil164.c	FUNCTION_1
0x40000bc	      0xbf01000000	                              mov edi, 1	        75	dvo_sil164.c	FUNCTION_1
0x40000c1	        0x488d75a0	                   lea rsi, [rbp - 0x60]	        93	dvo_sil164.c	FUNCTION_1	IF_1	CALL_1
0x40000c5	        0x488955a8	             mov qword [rbp - 0x58], rdx	        75	dvo_sil164.c	FUNCTION_1
0x40000c9	        0x66897db2	               mov word [rbp - 0x4e], di	        75	dvo_sil164.c	FUNCTION_1
0x40000cd	      0xba02000000	                              mov edx, 2	        93	dvo_sil164.c	FUNCTION_1	IF_1	CALL_1
0x40000d2	        0x668945a0	               mov word [rbp - 0x60], ax	        75	dvo_sil164.c	FUNCTION_1
0x40000d6	        0x668945b0	               mov word [rbp - 0x50], ax	        75	dvo_sil164.c	FUNCTION_1
0x40000da	        0x488d45c6	                   lea rax, [rbp - 0x3a]	        75	dvo_sil164.c	FUNCTION_1
0x40000de	          0x4c89e7	                            mov rdi, r12	        93	dvo_sil164.c	FUNCTION_1	IF_1	CALL_1
0x40000e1	        0x66894da4	               mov word [rbp - 0x5c], cx	        75	dvo_sil164.c	FUNCTION_1
0x40000e5	      0x66448945b4	              mov word [rbp - 0x4c], r8w	        75	dvo_sil164.c	FUNCTION_1
0x40000ea	        0x488945b8	             mov qword [rbp - 0x48], rax	        75	dvo_sil164.c	FUNCTION_1
0x40000ee	        0xc645c500	                mov byte [rbp - 0x3b], 0	        91	dvo_sil164.c	FUNCTION_1
0x40000f2	      0xe800000000	                          call 0x40000f7	        93	dvo_sil164.c	FUNCTION_1	IF_1	CALL_1
0x40000f7	          0x83f802	                              cmp eax, 2	        93	dvo_sil164.c	FUNCTION_1	IF_1	CALL_1
0x40000fa	            0x7458	                            je 0x4000154	        93	dvo_sil164.c	FUNCTION_1	IF_1	CALL_1
0x40000fc	      0x410fb64500	                   movzx eax, byte [r13]	        98	dvo_sil164.c	FUNCTION_1	IF_2
0x4000101	            0x84c0	                             test al, al	        98	dvo_sil164.c	FUNCTION_1	IF_2
0x4000103	            0x7426	                            je 0x400012b	        98	dvo_sil164.c	FUNCTION_1	IF_2
0x4000105	            0x31c0	                            xor eax, eax	       102	dvo_sil164.c	FUNCTION_1
0x4000107	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       103	dvo_sil164.c	FUNCTION_1
0x400010b	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       103	dvo_sil164.c	FUNCTION_1
0x4000114	            0x754c	                           jne 0x4000162	       103	dvo_sil164.c	FUNCTION_1
0x4000116	        0x4883c440	                           add rsp, 0x40	       103	dvo_sil164.c	FUNCTION_1
0x400011a	              0x5b	                                 pop rbx	       103	dvo_sil164.c	FUNCTION_1
0x400011b	            0x415a	                                 pop r10	       103	dvo_sil164.c	FUNCTION_1
0x400011d	            0x415c	                                 pop r12	       103	dvo_sil164.c	FUNCTION_1
0x400011f	            0x415d	                                 pop r13	       103	dvo_sil164.c	FUNCTION_1
0x4000121	            0x415e	                                 pop r14	       103	dvo_sil164.c	FUNCTION_1
0x4000123	            0x415f	                                 pop r15	       103	dvo_sil164.c	FUNCTION_1
0x4000125	              0x5d	                                 pop rbp	       103	dvo_sil164.c	FUNCTION_1
0x4000126	        0x498d62f8	                      lea rsp, [r10 - 8]	       103	dvo_sil164.c	FUNCTION_1
0x400012a	              0xc3	                                     ret	       103	dvo_sil164.c	FUNCTION_1
0x400012b	        0x448b4318	            mov r8d, dword [rbx + 0x18] 	        99	dvo_sil164.c	FUNCTION_1	IF_2	CALL_2
0x400012f	    0x498d8c244403	                  lea rcx, [r12 + 0x344]	        99	dvo_sil164.c	FUNCTION_1	IF_2	CALL_2
0x4000137	          0x4489fa	                           mov edx, r15d	        99	dvo_sil164.c	FUNCTION_1	IF_2	CALL_2
0x400013a	    0x48c7c6000000	                              mov rsi, 0	        99	dvo_sil164.c	FUNCTION_1	IF_2	CALL_2
0x4000141	      0xbf04000000	                              mov edi, 4	        99	dvo_sil164.c	FUNCTION_1	IF_2	CALL_2
0x4000146	          0x88459f	               mov byte [rbp - 0x61], al	        99	dvo_sil164.c	FUNCTION_1	IF_2	CALL_2
0x4000149	      0xe800000000	                          call 0x400014e	        99	dvo_sil164.c	FUNCTION_1	IF_2	CALL_2
0x400014e	         0xfb6459f	            movzx eax, byte [rbp - 0x61]	        99	dvo_sil164.c	FUNCTION_1	IF_2	CALL_2
0x4000152	            0xebb3	                           jmp 0x4000107	        99	dvo_sil164.c	FUNCTION_1	IF_2	CALL_2
0x4000154	         0xfb645c6	            movzx eax, byte [rbp - 0x3a]	        94	dvo_sil164.c	FUNCTION_1	IF_1
0x4000158	          0x418806	                      mov byte [r14], al	        94	dvo_sil164.c	FUNCTION_1	IF_1
0x400015b	      0xb801000000	                              mov eax, 1	        95	dvo_sil164.c	FUNCTION_1	IF_1
0x4000160	            0xeba5	                           jmp 0x4000107	        95	dvo_sil164.c	FUNCTION_1	IF_1
0x4000162	      0xe800000000	                          call 0x4000167	       103	dvo_sil164.c	FUNCTION_1
sil164_dump_regs	FOR,0:functions,0:IF,0:WHILE,0:ELSE,0:CALL,10:SWITCH,0:DO,0	52
0x4000170	              0x53	                                push rbx	       245	dvo_sil164.c	ELSE_1	FUNCTION_9
0x4000171	      0xbe06000000	                              mov esi, 6	       248	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_1
0x4000176	          0x4889fb	                            mov rbx, rdi	       245	dvo_sil164.c	ELSE_1	FUNCTION_9
0x4000179	        0x4883ec10	                           sub rsp, 0x10	       245	dvo_sil164.c	ELSE_1	FUNCTION_9
0x400017d	      0x488d542407	                      lea rdx, [rsp + 7]	       248	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_1
0x4000182	    0x65488b042528	                mov rax, qword gs:[0x28]	       245	dvo_sil164.c	ELSE_1	FUNCTION_9
0x400018b	      0x4889442408	                mov qword [rsp + 8], rax	       245	dvo_sil164.c	ELSE_1	FUNCTION_9
0x4000190	            0x31c0	                            xor eax, eax	       245	dvo_sil164.c	ELSE_1	FUNCTION_9
0x4000192	      0xe8c9feffff	                   call sym.sil164_readb	       248	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_1
0x4000197	       0xfb6542407	               movzx edx, byte [rsp + 7]	       249	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_2
0x400019c	    0x48c7c6000000	                              mov rsi, 0	       249	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_2
0x40001a3	      0xbf04000000	                              mov edi, 4	       249	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_2
0x40001a8	      0xe800000000	                          call 0x40001ad	       249	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_2
0x40001ad	      0x488d542407	                      lea rdx, [rsp + 7]	       250	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_3
0x40001b2	      0xbe07000000	                              mov esi, 7	       250	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_3
0x40001b7	          0x4889df	                            mov rdi, rbx	       250	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_3
0x40001ba	      0xe8a1feffff	                   call sym.sil164_readb	       250	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_3
0x40001bf	       0xfb6542407	               movzx edx, byte [rsp + 7]	       251	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_4
0x40001c4	    0x48c7c6000000	                              mov rsi, 0	       251	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_4
0x40001cb	      0xbf04000000	                              mov edi, 4	       251	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_4
0x40001d0	      0xe800000000	                          call 0x40001d5	       251	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_4
0x40001d5	      0x488d542407	                      lea rdx, [rsp + 7]	       252	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_5
0x40001da	      0xbe08000000	                              mov esi, 8	       252	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_5
0x40001df	          0x4889df	                            mov rdi, rbx	       252	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_5
0x40001e2	      0xe879feffff	                   call sym.sil164_readb	       252	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_5
0x40001e7	       0xfb6542407	               movzx edx, byte [rsp + 7]	       253	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_6
0x40001ec	    0x48c7c6000000	                              mov rsi, 0	       253	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_6
0x40001f3	      0xbf04000000	                              mov edi, 4	       253	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_6
0x40001f8	      0xe800000000	                          call 0x40001fd	       253	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_6
0x40001fd	      0x488d542407	                      lea rdx, [rsp + 7]	       254	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_7
0x4000202	      0xbe09000000	                              mov esi, 9	       254	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_7
0x4000207	          0x4889df	                            mov rdi, rbx	       254	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_7
0x400020a	      0xe851feffff	                   call sym.sil164_readb	       254	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_7
0x400020f	       0xfb6542407	               movzx edx, byte [rsp + 7]	       255	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_8
0x4000214	    0x48c7c6000000	                              mov rsi, 0	       255	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_8
0x400021b	      0xbf04000000	                              mov edi, 4	       255	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_8
0x4000220	      0xe800000000	                          call 0x4000225	       255	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_8
0x4000225	      0x488d542407	                      lea rdx, [rsp + 7]	       256	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_9
0x400022a	      0xbe0c000000	                            mov esi, 0xc	       256	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_9
0x400022f	          0x4889df	                            mov rdi, rbx	       256	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_9
0x4000232	      0xe829feffff	                   call sym.sil164_readb	       256	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_9
0x4000237	       0xfb6542407	               movzx edx, byte [rsp + 7]	       257	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_10
0x400023c	    0x48c7c6000000	                              mov rsi, 0	       257	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_10
0x4000243	      0xbf04000000	                              mov edi, 4	       257	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_10
0x4000248	      0xe800000000	                          call 0x400024d	       257	dvo_sil164.c	ELSE_1	FUNCTION_9	CALL_10
0x400024d	      0x488b442408	                mov rax, qword [rsp + 8]	       258	dvo_sil164.c	ELSE_1	FUNCTION_9
0x4000252	    0x654833042528	                xor rax, qword gs:[0x28]	       258	dvo_sil164.c	ELSE_1	FUNCTION_9
0x400025b	            0x7506	                           jne 0x4000263	       258	dvo_sil164.c	ELSE_1	FUNCTION_9
0x400025d	        0x4883c410	                           add rsp, 0x10	       258	dvo_sil164.c	ELSE_1	FUNCTION_9
0x4000261	              0x5b	                                 pop rbx	       258	dvo_sil164.c	ELSE_1	FUNCTION_9
0x4000262	              0xc3	                                     ret	       258	dvo_sil164.c	ELSE_1	FUNCTION_9
0x4000263	      0xe800000000	                          call 0x4000268	       258	dvo_sil164.c	ELSE_1	FUNCTION_9
sil164_dpms	FOR,0:functions,0:IF,2:WHILE,0:ELSE,1:CALL,2:SWITCH,0:DO,0	58
0x4000330	            0x4154	                                push r12	       212	dvo_sil164.c	FUNCTION_7
0x4000332	              0x55	                                push rbp	       212	dvo_sil164.c	FUNCTION_7
0x4000333	            0x89f5	                            mov ebp, esi	       212	dvo_sil164.c	FUNCTION_7
0x4000335	              0x53	                                push rbx	       212	dvo_sil164.c	FUNCTION_7
0x4000336	      0xbe08000000	                              mov esi, 8	       216	dvo_sil164.c	FUNCTION_7	CALL_1
0x400033b	          0x4889fb	                            mov rbx, rdi	       212	dvo_sil164.c	FUNCTION_7
0x400033e	        0x4883ec28	                           sub rsp, 0x28	       212	dvo_sil164.c	FUNCTION_7
0x4000342	      0x488d542407	                      lea rdx, [rsp + 7]	       216	dvo_sil164.c	FUNCTION_7	CALL_1
0x4000347	    0x65488b042528	                mov rax, qword gs:[0x28]	       212	dvo_sil164.c	FUNCTION_7
0x4000350	      0x4889442420	             mov qword [rsp + 0x20], rax	       212	dvo_sil164.c	FUNCTION_7
0x4000355	            0x31c0	                            xor eax, eax	       212	dvo_sil164.c	FUNCTION_7
0x4000357	      0xe804fdffff	                   call sym.sil164_readb	       216	dvo_sil164.c	FUNCTION_7	CALL_1
0x400035c	            0x84c0	                             test al, al	       217	dvo_sil164.c	FUNCTION_7	IF_1
0x400035e	            0x7463	                            je 0x40003c3	       217	dvo_sil164.c	FUNCTION_7	IF_1
0x4000360	          0x4084ed	                           test bpl, bpl	       220	dvo_sil164.c	FUNCTION_7	IF_2
0x4000363	       0xfb6442407	               movzx eax, byte [rsp + 7]	       221	dvo_sil164.c	FUNCTION_7	IF_2
0x4000368	            0x7572	                           jne 0x40003dc	       220	dvo_sil164.c	FUNCTION_7	IF_2
0x400036a	          0x83e0fe	                     and eax, 0xfffffffe	       223	dvo_sil164.c	FUNCTION_7	ELSE_1
0x400036d	        0x88442407	                  mov byte [rsp + 7], al	       223	dvo_sil164.c	FUNCTION_7	ELSE_1
0x4000371	          0x8b5318	            mov edx, dword [rbx + 0x18] 	       110	dvo_sil164.c	FUNCTION_2
0x4000374	        0x488b6b30	            mov rbp, qword [rbx + 0x30] 	       108	dvo_sil164.c	FUNCTION_2
0x4000378	      0x488d742408	                      lea rsi, [rsp + 8]	       120	dvo_sil164.c	FUNCTION_2	IF_1	CALL_1
0x400037d	      0xb902000000	                              mov ecx, 2	       110	dvo_sil164.c	FUNCTION_2
0x4000382	        0x4c8b6328	            mov r12, qword [rbx + 0x28] 	       107	dvo_sil164.c	FUNCTION_2
0x4000386	      0xc644241e08	                mov byte [rsp + 0x1e], 8	       117	dvo_sil164.c	FUNCTION_2
0x400038b	      0x66894c240c	                mov word [rsp + 0xc], cx	       110	dvo_sil164.c	FUNCTION_2
0x4000390	        0x8844241f	               mov byte [rsp + 0x1f], al	       118	dvo_sil164.c	FUNCTION_2
0x4000394	      0x6689542408	                  mov word [rsp + 8], dx	       110	dvo_sil164.c	FUNCTION_2
0x4000399	            0x31d2	                            xor edx, edx	       110	dvo_sil164.c	FUNCTION_2
0x400039b	          0x4889ef	                            mov rdi, rbp	       120	dvo_sil164.c	FUNCTION_2	IF_1	CALL_1
0x400039e	      0x668954240a	                mov word [rsp + 0xa], dx	       110	dvo_sil164.c	FUNCTION_2
0x40003a3	      0x488d54241e	                   lea rdx, [rsp + 0x1e]	       110	dvo_sil164.c	FUNCTION_2
0x40003a8	      0x4889542410	             mov qword [rsp + 0x10], rdx	       110	dvo_sil164.c	FUNCTION_2
0x40003ad	      0xba01000000	                              mov edx, 1	       120	dvo_sil164.c	FUNCTION_2	IF_1	CALL_1
0x40003b2	      0xe800000000	                          call 0x40003b7	       120	dvo_sil164.c	FUNCTION_2	IF_1	CALL_1
0x40003b7	          0x83f801	                              cmp eax, 1	       120	dvo_sil164.c	FUNCTION_2	IF_1	CALL_1
0x40003ba	            0x7407	                            je 0x40003c3	       120	dvo_sil164.c	FUNCTION_2	IF_1	CALL_1
0x40003bc	      0x41803c2400	                       cmp byte [r12], 0	       123	dvo_sil164.c	FUNCTION_2	IF_2
0x40003c1	            0x7422	                            je 0x40003e5	       123	dvo_sil164.c	FUNCTION_2	IF_2
0x40003c3	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       227	dvo_sil164.c	FUNCTION_7
0x40003c8	    0x654833042528	                xor rax, qword gs:[0x28]	       227	dvo_sil164.c	FUNCTION_7
0x40003d1	            0x7535	                           jne 0x4000408	       227	dvo_sil164.c	FUNCTION_7
0x40003d3	        0x4883c428	                           add rsp, 0x28	       227	dvo_sil164.c	FUNCTION_7
0x40003d7	              0x5b	                                 pop rbx	       227	dvo_sil164.c	FUNCTION_7
0x40003d8	              0x5d	                                 pop rbp	       227	dvo_sil164.c	FUNCTION_7
0x40003d9	            0x415c	                                 pop r12	       227	dvo_sil164.c	FUNCTION_7
0x40003db	              0xc3	                                     ret	       227	dvo_sil164.c	FUNCTION_7
0x40003dc	          0x83c801	                               or eax, 1	       221	dvo_sil164.c	FUNCTION_7	IF_2
0x40003df	        0x88442407	                  mov byte [rsp + 7], al	       221	dvo_sil164.c	FUNCTION_7	IF_2
0x40003e3	            0xeb8c	                           jmp 0x4000371	       221	dvo_sil164.c	FUNCTION_7	IF_2
0x40003e5	        0x448b4318	            mov r8d, dword [rbx + 0x18] 	       124	dvo_sil164.c	FUNCTION_2	IF_2	CALL_2
0x40003e9	    0x488d8d440300	                  lea rcx, [rbp + 0x344]	       124	dvo_sil164.c	FUNCTION_2	IF_2	CALL_2
0x40003f0	      0xba08000000	                              mov edx, 8	       124	dvo_sil164.c	FUNCTION_2	IF_2	CALL_2
0x40003f5	    0x48c7c6000000	                              mov rsi, 0	       124	dvo_sil164.c	FUNCTION_2	IF_2	CALL_2
0x40003fc	      0xbf04000000	                              mov edi, 4	       124	dvo_sil164.c	FUNCTION_2	IF_2	CALL_2
0x4000401	      0xe800000000	                          call 0x4000406	       124	dvo_sil164.c	FUNCTION_2	IF_2	CALL_2
0x4000406	            0xebbb	                           jmp 0x40003c3	       124	dvo_sil164.c	FUNCTION_2	IF_2	CALL_2
0x4000408	      0xe800000000	                          call 0x400040d	       227	dvo_sil164.c	FUNCTION_7
sil164_mode_valid	FOR,0:functions,0:IF,0:WHILE,0:ELSE,0:CALL,0:SWITCH,0:DO,0	2
0x4000040	            0x31c0	                            xor eax, eax	       190	dvo_sil164.c	ELSE_1	FUNCTION_5
0x4000042	              0xc3	                                     ret	       190	dvo_sil164.c	ELSE_1	FUNCTION_5
sil164_detect	FOR,0:functions,0:IF,1:WHILE,0:ELSE,1:CALL,1:SWITCH,0:DO,0	17
0x40002c0	        0x4883ec10	                           sub rsp, 0x10	       175	dvo_sil164.c	FUNCTION_4
0x40002c4	      0xbe09000000	                              mov esi, 9	       178	dvo_sil164.c	FUNCTION_4	CALL_1
0x40002c9	      0x488d542407	                      lea rdx, [rsp + 7]	       178	dvo_sil164.c	FUNCTION_4	CALL_1
0x40002ce	    0x65488b042528	                mov rax, qword gs:[0x28]	       175	dvo_sil164.c	FUNCTION_4
0x40002d7	      0x4889442408	                mov qword [rsp + 8], rax	       175	dvo_sil164.c	FUNCTION_4
0x40002dc	            0x31c0	                            xor eax, eax	       175	dvo_sil164.c	FUNCTION_4
0x40002de	      0xe87dfdffff	                   call sym.sil164_readb	       178	dvo_sil164.c	FUNCTION_4	CALL_1
0x40002e3	       0xfb6442407	               movzx eax, byte [rsp + 7]	       180	dvo_sil164.c	FUNCTION_4	IF_1
0x40002e8	          0xc1e01e	                           shl eax, 0x1e	       183	dvo_sil164.c	FUNCTION_4	ELSE_1
0x40002eb	          0xc1f81f	                           sar eax, 0x1f	       183	dvo_sil164.c	FUNCTION_4	ELSE_1
0x40002ee	          0x83c002	                              add eax, 2	       183	dvo_sil164.c	FUNCTION_4	ELSE_1
0x40002f1	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       184	dvo_sil164.c	FUNCTION_4	ELSE_1
0x40002f6	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       184	dvo_sil164.c	FUNCTION_4	ELSE_1
0x40002ff	            0x7505	                           jne 0x4000306	       184	dvo_sil164.c	FUNCTION_4	ELSE_1
0x4000301	        0x4883c410	                           add rsp, 0x10	       184	dvo_sil164.c	FUNCTION_4	ELSE_1
0x4000305	              0xc3	                                     ret	       184	dvo_sil164.c	FUNCTION_4	ELSE_1
0x4000306	      0xe800000000	                          call 0x400030b	       184	dvo_sil164.c	FUNCTION_4	ELSE_1
sil164_get_hw_state	FOR,0:functions,0:IF,2:WHILE,0:ELSE,1:CALL,1:SWITCH,0:DO,0	17
0x4000270	        0x4883ec10	                           sub rsp, 0x10	       230	dvo_sil164.c	FUNCTION_8
0x4000274	      0xbe08000000	                              mov esi, 8	       234	dvo_sil164.c	FUNCTION_8	CALL_1
0x4000279	      0x488d542407	                      lea rdx, [rsp + 7]	       234	dvo_sil164.c	FUNCTION_8	CALL_1
0x400027e	    0x65488b042528	                mov rax, qword gs:[0x28]	       230	dvo_sil164.c	FUNCTION_8
0x4000287	      0x4889442408	                mov qword [rsp + 8], rax	       230	dvo_sil164.c	FUNCTION_8
0x400028c	            0x31c0	                            xor eax, eax	       230	dvo_sil164.c	FUNCTION_8
0x400028e	      0xe8cdfdffff	                   call sym.sil164_readb	       234	dvo_sil164.c	FUNCTION_8	CALL_1
0x4000293	            0x84c0	                             test al, al	       235	dvo_sil164.c	FUNCTION_8	IF_1
0x4000295	            0x7408	                            je 0x400029f	       235	dvo_sil164.c	FUNCTION_8	IF_1
0x4000297	       0xfb6442407	               movzx eax, byte [rsp + 7]	       238	dvo_sil164.c	FUNCTION_8	IF_2
0x400029c	          0x83e001	                              and eax, 1	       238	dvo_sil164.c	FUNCTION_8	IF_2
0x400029f	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       242	dvo_sil164.c	FUNCTION_8	ELSE_1
0x40002a4	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       242	dvo_sil164.c	FUNCTION_8	ELSE_1
0x40002ad	            0x7505	                           jne 0x40002b4	       242	dvo_sil164.c	FUNCTION_8	ELSE_1
0x40002af	        0x4883c410	                           add rsp, 0x10	       242	dvo_sil164.c	FUNCTION_8	ELSE_1
0x40002b3	              0xc3	                                     ret	       242	dvo_sil164.c	FUNCTION_8	ELSE_1
0x40002b4	      0xe800000000	                          call 0x40002b9	       242	dvo_sil164.c	FUNCTION_8	ELSE_1
sil164_destroy	FOR,0:functions,0:IF,1:WHILE,0:ELSE,0:CALL,1:SWITCH,0:DO,0	10
0x4000310	          0x4889f8	                            mov rax, rdi	       261	dvo_sil164.c	FUNCTION_10
0x4000313	        0x488b7f28	            mov rdi, qword [rdi + 0x28] 	       262	dvo_sil164.c	FUNCTION_10
0x4000317	          0x4885ff	                           test rdi, rdi	       264	dvo_sil164.c	FUNCTION_10	IF_1
0x400031a	            0x7412	                            je 0x400032e	       264	dvo_sil164.c	FUNCTION_10	IF_1
0x400031c	              0x53	                                push rbx	       261	dvo_sil164.c	FUNCTION_10
0x400031d	          0x4889c3	                            mov rbx, rax	       261	dvo_sil164.c	FUNCTION_10
0x4000320	      0xe800000000	                          call 0x4000325	       265	dvo_sil164.c	FUNCTION_10	IF_1	CALL_1
0x4000325	    0x48c743280000	               mov qword [rbx + 0x28], 0	       266	dvo_sil164.c	FUNCTION_10	IF_1
0x400032d	              0x5b	                                 pop rbx	       268	dvo_sil164.c	FUNCTION_10
0x400032e	            0xf3c3	                                     ret	       268	dvo_sil164.c	FUNCTION_10
