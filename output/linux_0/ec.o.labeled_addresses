ec_read	CALL,1:SWITCH,0:WHILE,0:functions,0:DO,0:FOR,0:ELSE,0:IF,2	26
0x4001490	              0x53	                                push rbx	       886	ec.c	FUNCTION_41
0x4001491	            0x89f8	                            mov eax, edi	       886	ec.c	FUNCTION_41
0x4001493	        0x4883ec10	                           sub rsp, 0x10	       886	ec.c	FUNCTION_41
0x4001497	    0x488b3d000000	            mov rdi, qword [0x0400149e] 	       890	ec.c	FUNCTION_41	IF_1
0x400149e	    0x65488b0c2528	                mov rcx, qword gs:[0x28]	       886	ec.c	FUNCTION_41
0x40014a7	      0x48894c2408	                mov qword [rsp + 8], rcx	       886	ec.c	FUNCTION_41
0x40014ac	            0x31c9	                            xor ecx, ecx	       886	ec.c	FUNCTION_41
0x40014ae	          0x4885ff	                           test rdi, rdi	       890	ec.c	FUNCTION_41	IF_1
0x40014b1	            0x7431	                            je 0x40014e4	       890	ec.c	FUNCTION_41	IF_1
0x40014b3	      0x488d542407	                      lea rdx, [rsp + 7]	       893	ec.c	FUNCTION_41	CALL_1
0x40014b8	          0x4889f3	                            mov rbx, rsi	       893	ec.c	FUNCTION_41	CALL_1
0x40014bb	           0xfb6f0	                           movzx esi, al	       893	ec.c	FUNCTION_41	CALL_1
0x40014be	      0xe84dffffff	                   call sym.acpi_ec_read	       893	ec.c	FUNCTION_41	CALL_1
0x40014c3	            0x85c0	                           test eax, eax	       895	ec.c	FUNCTION_41	IF_2
0x40014c5	            0x7507	                           jne 0x40014ce	       895	ec.c	FUNCTION_41	IF_2
0x40014c7	       0xfb6542407	               movzx edx, byte [rsp + 7]	       896	ec.c	FUNCTION_41	IF_2
0x40014cc	            0x8813	                      mov byte [rbx], dl	       896	ec.c	FUNCTION_41	IF_2
0x40014ce	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       900	ec.c	FUNCTION_41
0x40014d3	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       900	ec.c	FUNCTION_41
0x40014dc	            0x750d	                           jne 0x40014eb	       900	ec.c	FUNCTION_41
0x40014de	        0x4883c410	                           add rsp, 0x10	       900	ec.c	FUNCTION_41
0x40014e2	              0x5b	                                 pop rbx	       900	ec.c	FUNCTION_41
0x40014e3	              0xc3	                                     ret	       900	ec.c	FUNCTION_41
0x40014e4	      0xb8edffffff	                     mov eax, 0xffffffed	       891	ec.c	FUNCTION_41	IF_1
0x40014e9	            0xebe3	                           jmp 0x40014ce	       891	ec.c	FUNCTION_41	IF_1
0x40014eb	      0xe800000000	                       call sym.ec_write	       900	ec.c	FUNCTION_41
acpi_ec_add	CALL,21:SWITCH,0:WHILE,0:functions,0:DO,0:FOR,0:ELSE,2:IF,9	131
0x4001f20	            0x4155	                                push r13	      1603	ec.c	FUNCTION_78
0x4001f22	            0x4154	                                push r12	      1603	ec.c	FUNCTION_78
0x4001f24	    0x48ba456d6265	          movabs rdx, 0x6465646465626d45	      1609	ec.c	FUNCTION_78	CALL_2
0x4001f2e	              0x55	                                push rbp	      1603	ec.c	FUNCTION_78
0x4001f2f	              0x53	                                push rbx	      1603	ec.c	FUNCTION_78
0x4001f30	    0x48b920436f6e	          movabs rcx, 0x6c6f72746e6f4320	      1609	ec.c	FUNCTION_78	CALL_2
0x4001f3a	    0x48be656d6265	          movabs rsi, 0x6465646465626d65	      1610	ec.c	FUNCTION_78	CALL_4
0x4001f44	          0x4889fd	                            mov rbp, rdi	      1603	ec.c	FUNCTION_78
0x4001f47	        0x4883ec08	                              sub rsp, 8	      1603	ec.c	FUNCTION_78
0x4001f4b	    0x488997a00000	             mov qword [rdi + 0xa0], rdx	      1609	ec.c	FUNCTION_78	CALL_2
0x4001f52	    0x48ba5f636f6e	          movabs rdx, 0x6c6f72746e6f635f	      1610	ec.c	FUNCTION_78	CALL_4
0x4001f5c	    0x48898fa80000	             mov qword [rdi + 0xa8], rcx	      1609	ec.c	FUNCTION_78	CALL_2
0x4001f63	    0x4889b7c80000	             mov qword [rdi + 0xc8], rsi	      1610	ec.c	FUNCTION_78	CALL_4
0x4001f6a	    0xc787b0000000	       mov dword [rdi + 0xb0], 0x72656c 	      1609	ec.c	FUNCTION_78	CALL_2
0x4001f74	    0x488997d00000	             mov qword [rdi + 0xd0], rdx	      1610	ec.c	FUNCTION_78	CALL_4
0x4001f7b	    0xc787d8000000	       mov dword [rdi + 0xd8], 0x72656c 	      1610	ec.c	FUNCTION_78	CALL_4
0x4001f85	      0xe800000000	                          call 0x4001f8a	      1612	ec.c	FUNCTION_78	IF_1	CALL_6
0x4001f8a	      0xb906000000	                              mov ecx, 6	      1612	ec.c	FUNCTION_78	IF_1	CALL_6
0x4001f8f	    0x48c7c7000000	                              mov rdi, 0	      1612	ec.c	FUNCTION_78	IF_1	CALL_6
0x4001f96	          0x4889c6	                            mov rsi, rax	      1612	ec.c	FUNCTION_78	IF_1	CALL_6
0x4001f99	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1612	ec.c	FUNCTION_78	IF_1	CALL_6
0x4001f9b	            0x7579	                           jne 0x4002016	      1612	ec.c	FUNCTION_78	IF_1	CALL_6
0x4001f9d	    0x488b1d000000	            mov rbx, qword [0x04001fa4] 	      1614	ec.c	FUNCTION_78	IF_1
0x4001fa4	    0x41bd01000000	                             mov r13d, 1	      1613	ec.c	FUNCTION_78	IF_1
0x4001faa	          0x4889d8	                            mov rax, rbx	      1613	ec.c	FUNCTION_78	IF_1
0x4001fad	          0x4885c0	                           test rax, rax	      1594	ec.c	FUNCTION_77	IF_1
0x4001fb0	            0x740e	                            je 0x4001fc0	      1594	ec.c	FUNCTION_77	IF_1
0x4001fb2	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      1596	ec.c	FUNCTION_77	IF_2
0x4001fb6	        0x48394b10	            cmp qword [rbx + 0x10], rcx 	      1596	ec.c	FUNCTION_77	IF_2
0x4001fba	     0xf8493000000	                            je 0x4002053	      1596	ec.c	FUNCTION_77	IF_2
0x4001fc0	      0xbe01000000	                              mov esi, 1	      1514	ec.c	FUNCTION_74	CALL_1
0x4001fc5	          0x4889df	                            mov rdi, rbx	      1514	ec.c	FUNCTION_74	CALL_1
0x4001fc8	      0xe8e3faffff	            call sym.ec_install_handlers	      1514	ec.c	FUNCTION_74	CALL_1
0x4001fcd	            0x85c0	                           test eax, eax	      1515	ec.c	FUNCTION_74	IF_1
0x4001fcf	          0x4189c4	                           mov r12d, eax	      1514	ec.c	FUNCTION_74	CALL_1
0x4001fd2	     0xf8441010000	                            je 0x4002119	      1515	ec.c	FUNCTION_74	IF_1
0x4001fd8	    0x48391d000000	            cmp qword [0x04001fdf], rbx 	      1661	ec.c	FUNCTION_78	IF_8
0x4001fdf	          0x4489e0	                           mov eax, r12d	      1661	ec.c	FUNCTION_78	IF_8
0x4001fe2	            0x7427	                            je 0x400200b	      1661	ec.c	FUNCTION_78	IF_8
0x4001fe4	            0x31d2	                            xor edx, edx	      1662	ec.c	FUNCTION_78	CALL_20
0x4001fe6	      0xbe01000000	                              mov esi, 1	      1662	ec.c	FUNCTION_78	CALL_20
0x4001feb	          0x4889df	                            mov rdi, rbx	      1662	ec.c	FUNCTION_78	CALL_20
0x4001fee	      0xe83dfcffff	  call sym.acpi_ec_remove_query_handlers	      1662	ec.c	FUNCTION_78	CALL_20
0x4001ff3	    0x483b1d000000	            cmp rbx, qword [0x04001ffa] 	      1664	ec.c	FUNCTION_78	IF_9
0x4001ffa	     0xf8458010000	                            je 0x4002158	      1664	ec.c	FUNCTION_78	IF_9
0x4002000	          0x4889df	                            mov rdi, rbx	      1665	ec.c	FUNCTION_78	CALL_21
0x4002003	      0xe838e3ffff	                   call sym.acpi_ec_free	      1665	ec.c	FUNCTION_78	CALL_21
0x4002008	          0x4489e0	                           mov eax, r12d	      1665	ec.c	FUNCTION_78	CALL_21
0x400200b	        0x4883c408	                              add rsp, 8	      1667	ec.c	FUNCTION_78
0x400200f	              0x5b	                                 pop rbx	      1667	ec.c	FUNCTION_78
0x4002010	              0x5d	                                 pop rbp	      1667	ec.c	FUNCTION_78
0x4002011	            0x415c	                                 pop r12	      1667	ec.c	FUNCTION_78
0x4002013	            0x415d	                                 pop r13	      1667	ec.c	FUNCTION_78
0x4002015	              0xc3	                                     ret	      1667	ec.c	FUNCTION_78
0x4002016	      0xe8d5e6ffff	                  call sym.acpi_ec_alloc	      1616	ec.c	FUNCTION_78	ELSE_1	CALL_7
0x400201b	          0x4885c0	                           test rax, rax	      1617	ec.c	FUNCTION_78	ELSE_1	IF_2
0x400201e	          0x4889c3	                            mov rbx, rax	      1616	ec.c	FUNCTION_78	ELSE_1	CALL_7
0x4002021	     0xf8427010000	                            je 0x400214e	      1617	ec.c	FUNCTION_78	ELSE_1	IF_2
0x4002027	        0x488b7d08	                mov rdi, qword [rbp + 8]	      1619	ec.c	FUNCTION_78	ELSE_1	CALL_8
0x400202b	            0x31c9	                            xor ecx, ecx	      1619	ec.c	FUNCTION_78	ELSE_1	CALL_8
0x400202d	            0x31f6	                            xor esi, esi	      1619	ec.c	FUNCTION_78	ELSE_1	CALL_8
0x400202f	          0x4889c2	                            mov rdx, rax	      1619	ec.c	FUNCTION_78	ELSE_1	CALL_8
0x4002032	    0x41bceaffffff	                    mov r12d, 0xffffffea	      1621	ec.c	FUNCTION_78	ELSE_1	IF_3
0x4002038	      0xe843e3ffff	                call sym.ec_parse_device	      1619	ec.c	FUNCTION_78	ELSE_1	CALL_8
0x400203d	      0x3d03400000	                         cmp eax, 0x4003	      1620	ec.c	FUNCTION_78	ELSE_1	IF_3
0x4002042	            0x75af	                           jne 0x4001ff3	      1620	ec.c	FUNCTION_78	ELSE_1	IF_3
0x4002044	    0x488b05000000	            mov rax, qword [0x0400204b] 	      1620	ec.c	FUNCTION_78	ELSE_1	IF_3
0x400204b	          0x4531ed	                          xor r13d, r13d	      1606	ec.c	FUNCTION_78
0x400204e	      0xe95affffff	                           jmp 0x4001fad	      1606	ec.c	FUNCTION_78
0x4002053	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      1596	ec.c	FUNCTION_77	IF_2
0x4002057	        0x48397318	            cmp qword [rbx + 0x18], rsi 	      1596	ec.c	FUNCTION_77	IF_2
0x400205b	     0xf855fffffff	                           jne 0x4001fc0	      1596	ec.c	FUNCTION_77	IF_2
0x4002061	          0x4584ed	                         test r13b, r13b	      1628	ec.c	FUNCTION_78	IF_4	IF_5
0x4002064	    0x44882d000000	            mov byte [0x0400206b], r13b 	      1627	ec.c	FUNCTION_78	IF_4
0x400206b	     0xf848e000000	                            je 0x40020ff	      1628	ec.c	FUNCTION_78	IF_4	IF_5
0x4002071	          0x488b33	                    mov rsi, qword [rbx]	      1640	ec.c	FUNCTION_78	IF_4	CALL_12
0x4002074	        0x410fb6cd	                         movzx ecx, r13b	      1640	ec.c	FUNCTION_78	IF_4	CALL_12
0x4002078	      0xba01000000	                              mov edx, 1	      1640	ec.c	FUNCTION_78	IF_4	CALL_12
0x400207d	          0x4889df	                            mov rdi, rbx	      1640	ec.c	FUNCTION_78	IF_4	CALL_12
0x4002080	      0xe85bfdffff	            call sym.acpi_config_boot_ec	      1640	ec.c	FUNCTION_78	IF_4	CALL_12
0x4002085	            0x85c0	                           test eax, eax	      1643	ec.c	FUNCTION_78	IF_6
0x4002087	          0x4189c4	                           mov r12d, eax	      1640	ec.c	FUNCTION_78	IF_4	CALL_12
0x400208a	     0xf8548ffffff	                           jne 0x4001fd8	      1643	ec.c	FUNCTION_78	IF_6
0x4002090	    0x48899d480200	           mov qword [rbp + 0x248], rbx 	      1646	ec.c	FUNCTION_78
0x4002097	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1648	ec.c	FUNCTION_78	CALL_14
0x400209b	          0x4531c0	                            xor r8d, r8d	      1648	ec.c	FUNCTION_78	CALL_14
0x400209e	    0x48c7c1000000	                              mov rcx, 0	      1648	ec.c	FUNCTION_78	CALL_14
0x40020a5	      0xba01000000	                              mov edx, 1	      1648	ec.c	FUNCTION_78	CALL_14
0x40020aa	    0x48c7c7000000	                              mov rdi, 0	      1648	ec.c	FUNCTION_78	CALL_14
0x40020b1	      0xe800000000	                          call 0x40020b6	      1648	ec.c	FUNCTION_78	CALL_14
0x40020b6	          0x4885c0	                           test rax, rax	      1649	ec.c	FUNCTION_78	CALL_15
0x40020b9	            0x746b	                            je 0x4002126	      1649	ec.c	FUNCTION_78	CALL_15
0x40020bb	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      1650	ec.c	FUNCTION_78	CALL_16
0x40020bf	          0x4531c0	                            xor r8d, r8d	      1650	ec.c	FUNCTION_78	CALL_16
0x40020c2	    0x48c7c1000000	                              mov rcx, 0	      1650	ec.c	FUNCTION_78	CALL_16
0x40020c9	      0xba01000000	                              mov edx, 1	      1650	ec.c	FUNCTION_78	CALL_16
0x40020ce	    0x48c7c7000000	                              mov rdi, 0	      1650	ec.c	FUNCTION_78	CALL_16
0x40020d5	      0xe800000000	                          call 0x40020da	      1650	ec.c	FUNCTION_78	CALL_16
0x40020da	          0x4885c0	                           test rax, rax	      1651	ec.c	FUNCTION_78	CALL_17
0x40020dd	            0x745b	                            je 0x400213a	      1651	ec.c	FUNCTION_78	CALL_17
0x40020df	            0x31c0	                            xor eax, eax	      1658	ec.c	FUNCTION_78
0x40020e1	          0x4584ed	                         test r13b, r13b	      1653	ec.c	FUNCTION_78	IF_7
0x40020e4	     0xf8521ffffff	                           jne 0x400200b	      1653	ec.c	FUNCTION_78	IF_7
0x40020ea	          0x488b3b	                    mov rdi, qword [rbx]	      1655	ec.c	FUNCTION_78	IF_7	CALL_18
0x40020ed	        0x89442404	                mov dword [rsp + 4], eax	      1655	ec.c	FUNCTION_78	IF_7	CALL_18
0x40020f1	      0xe800000000	                          call 0x40020f6	      1655	ec.c	FUNCTION_78	IF_7	CALL_18
0x40020f6	        0x8b442404	                mov eax, dword [rsp + 4]	      1655	ec.c	FUNCTION_78	IF_7	CALL_18
0x40020fa	      0xe90cffffff	                           jmp 0x400200b	      1655	ec.c	FUNCTION_78	IF_7	CALL_18
0x40020ff	          0x488b13	                    mov rdx, qword [rbx]	      1635	ec.c	FUNCTION_78	IF_4	IF_5
0x4002102	          0x4889df	                            mov rdi, rbx	      1637	ec.c	FUNCTION_78	IF_4	IF_5	CALL_11
0x4002105	          0x488910	                    mov qword [rax], rdx	      1635	ec.c	FUNCTION_78	IF_4	IF_5
0x4002108	      0xe833e2ffff	                   call sym.acpi_ec_free	      1637	ec.c	FUNCTION_78	IF_4	IF_5	CALL_11
0x400210d	    0x488b1d000000	            mov rbx, qword [0x04002114] 	      1638	ec.c	FUNCTION_78	IF_4	IF_5
0x4002114	      0xe958ffffff	                           jmp 0x4002071	      1638	ec.c	FUNCTION_78	IF_4	IF_5
0x4002119	          0x4889df	                            mov rdi, rbx	      1638	ec.c	FUNCTION_78	IF_4	IF_5
0x400211c	      0xe8efe4ffff	          call sym.acpi_ec_setup.part.19	      1638	ec.c	FUNCTION_78	IF_4	IF_5
0x4002121	      0xe96affffff	                           jmp 0x4002090	      1638	ec.c	FUNCTION_78	IF_4	IF_5
0x4002126	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1649	ec.c	FUNCTION_78	CALL_15
0x400212a	    0x48c7c7000000	                              mov rdi, 0	      1649	ec.c	FUNCTION_78	CALL_15
0x4002131	      0xe800000000	                          call 0x4002136	      1649	ec.c	FUNCTION_78	CALL_15
0x4002136	             0xf0b	                                     ud2	      1649	ec.c	FUNCTION_78	CALL_15
0x4002138	            0xeb81	                           jmp 0x40020bb	      1649	ec.c	FUNCTION_78	CALL_15
0x400213a	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      1651	ec.c	FUNCTION_78	CALL_17
0x400213e	    0x48c7c7000000	                              mov rdi, 0	      1651	ec.c	FUNCTION_78	CALL_17
0x4002145	      0xe800000000	                          call 0x400214a	      1651	ec.c	FUNCTION_78	CALL_17
0x400214a	             0xf0b	                                     ud2	      1651	ec.c	FUNCTION_78	CALL_17
0x400214c	            0xeb91	                           jmp 0x40020df	      1651	ec.c	FUNCTION_78	CALL_17
0x400214e	      0xb8f4ffffff	                     mov eax, 0xfffffff4	      1618	ec.c	FUNCTION_78	ELSE_1	IF_2
0x4002153	      0xe9b3feffff	                           jmp 0x400200b	      1618	ec.c	FUNCTION_78	ELSE_1	IF_2
0x4002158	          0x4489e0	                           mov eax, r12d	      1618	ec.c	FUNCTION_78	ELSE_1	IF_2
0x400215b	      0xe9abfeffff	                           jmp 0x400200b	      1618	ec.c	FUNCTION_78	ELSE_1	IF_2
ec_write	CALL,1:SWITCH,0:WHILE,0:functions,0:DO,0:FOR,0:ELSE,0:IF,1	26
0x40014f0	        0x4883ec28	                           sub rsp, 0x28	       904	ec.c	FUNCTION_42
0x40014f4	    0x65488b042528	                mov rax, qword gs:[0x28]	       904	ec.c	FUNCTION_42
0x40014fd	      0x4889442420	             mov qword [rsp + 0x20], rax	       904	ec.c	FUNCTION_42
0x4001502	            0x31c0	                            xor eax, eax	       904	ec.c	FUNCTION_42
0x4001504	    0x488b05000000	            mov rax, qword [0x0400150b] 	       907	ec.c	FUNCTION_42	IF_1
0x400150b	          0x4885c0	                           test rax, rax	       907	ec.c	FUNCTION_42	IF_1
0x400150e	            0x744f	                            je 0x400155f	       907	ec.c	FUNCTION_42	IF_1
0x4001510	      0x488d54241e	                   lea rdx, [rsp + 0x1e]	       878	ec.c	FUNCTION_40
0x4001515	      0x40887c241e	              mov byte [rsp + 0x1e], dil	       877	ec.c	FUNCTION_40
0x400151a	      0x408874241f	              mov byte [rsp + 0x1f], sil	       877	ec.c	FUNCTION_40
0x400151f	          0x4889c7	                            mov rdi, rax	       882	ec.c	FUNCTION_40	CALL_1
0x4001522	          0x4889e6	                            mov rsi, rsp	       882	ec.c	FUNCTION_40	CALL_1
0x4001525	    0x48c744241000	               mov qword [rsp + 0x10], 0	       878	ec.c	FUNCTION_40
0x400152e	    0x48c744240800	                  mov qword [rsp + 8], 0	       878	ec.c	FUNCTION_40
0x4001537	        0x48891424	                    mov qword [rsp], rdx	       878	ec.c	FUNCTION_40
0x400153b	      0xc644241281	            mov byte [rsp + 0x12], 0x81 	       878	ec.c	FUNCTION_40
0x4001540	      0xc644241502	                mov byte [rsp + 0x15], 2	       878	ec.c	FUNCTION_40
0x4001545	      0xe806fcffff	            call sym.acpi_ec_transaction	       882	ec.c	FUNCTION_40	CALL_1
0x400154a	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       913	ec.c	FUNCTION_42
0x400154f	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       913	ec.c	FUNCTION_42
0x4001558	            0x750c	                           jne 0x4001566	       913	ec.c	FUNCTION_42
0x400155a	        0x4883c428	                           add rsp, 0x28	       913	ec.c	FUNCTION_42
0x400155e	              0xc3	                                     ret	       913	ec.c	FUNCTION_42
0x400155f	      0xb8edffffff	                     mov eax, 0xffffffed	       908	ec.c	FUNCTION_42	IF_1
0x4001564	            0xebe4	                           jmp 0x400154a	       908	ec.c	FUNCTION_42	IF_1
0x4001566	      0xe800000000	                          call 0x400156b	       913	ec.c	FUNCTION_42
ec_parse_device	CALL,5:SWITCH,0:WHILE,0:functions,0:DO,0:FOR,0:ELSE,1:IF,4	63
0x4000380	            0x4154	                                push r12	      1375	ec.c	FUNCTION_71
0x4000382	              0x55	                                push rbp	      1375	ec.c	FUNCTION_71
0x4000383	          0x4889d1	                            mov rcx, rdx	      1383	ec.c	FUNCTION_71	CALL_1
0x4000386	              0x53	                                push rbx	      1375	ec.c	FUNCTION_71
0x4000387	    0x48c7c6000000	                              mov rsi, 0	      1383	ec.c	FUNCTION_71	CALL_1
0x400038e	          0x4889d3	                            mov rbx, rdx	      1375	ec.c	FUNCTION_71
0x4000391	          0x4889fd	                            mov rbp, rdi	      1375	ec.c	FUNCTION_71
0x4000394	        0x4883ec10	                           sub rsp, 0x10	      1375	ec.c	FUNCTION_71
0x4000398	    0x48c742180000	               mov qword [rdx + 0x18], 0	      1381	ec.c	FUNCTION_71
0x40003a0	    0x48c742100000	               mov qword [rdx + 0x10], 0	      1381	ec.c	FUNCTION_71
0x40003a8	    0x48c7c2000000	                              mov rdx, 0	      1383	ec.c	FUNCTION_71	CALL_1
0x40003af	    0x48c704240000	                      mov qword [rsp], 0	      1377	ec.c	FUNCTION_71
0x40003b7	    0x65488b042528	                mov rax, qword gs:[0x28]	      1375	ec.c	FUNCTION_71
0x40003c0	      0x4889442408	                mov qword [rsp + 8], rax	      1375	ec.c	FUNCTION_71
0x40003c5	            0x31c0	                            xor eax, eax	      1375	ec.c	FUNCTION_71
0x40003c7	      0xe800000000	                          call 0x40003cc	      1383	ec.c	FUNCTION_71	CALL_1
0x40003cc	            0x85c0	                           test eax, eax	      1385	ec.c	FUNCTION_71	IF_1	CALL_2
0x40003ce	            0x7572	                           jne 0x4000442	      1385	ec.c	FUNCTION_71	IF_1	CALL_2
0x40003d0	      0x48837b1800	               cmp qword [rbx + 0x18], 0	      1387	ec.c	FUNCTION_71	IF_2
0x40003d5	            0x746b	                            je 0x4000442	      1387	ec.c	FUNCTION_71	IF_2
0x40003d7	      0x48837b1000	               cmp qword [rbx + 0x10], 0	      1387	ec.c	FUNCTION_71	IF_2
0x40003dc	            0x7464	                            je 0x4000442	      1387	ec.c	FUNCTION_71	IF_2
0x40003de	    0x488b05000000	            mov rax, qword [0x040003e5] 	      1390	ec.c	FUNCTION_71	IF_3
0x40003e5	          0x4885c0	                           test rax, rax	      1390	ec.c	FUNCTION_71	IF_3
0x40003e8	            0x7409	                            je 0x40003f3	      1390	ec.c	FUNCTION_71	IF_3
0x40003ea	    0x803d00000000	                cmp byte [0x040003f1], 0	      1390	ec.c	FUNCTION_71	IF_3
0x40003f1	            0x7568	                           jne 0x400045b	      1390	ec.c	FUNCTION_71	IF_3
0x40003f3	            0x31d2	                            xor edx, edx	      1399	ec.c	FUNCTION_71	ELSE_1	CALL_3
0x40003f5	          0x4889e1	                            mov rcx, rsp	      1399	ec.c	FUNCTION_71	ELSE_1	CALL_3
0x40003f8	    0x48c7c6000000	                              mov rsi, 0	      1399	ec.c	FUNCTION_71	ELSE_1	CALL_3
0x40003ff	          0x4889ef	                            mov rdi, rbp	      1399	ec.c	FUNCTION_71	ELSE_1	CALL_3
0x4000402	          0x4989e4	                            mov r12, rsp	      1399	ec.c	FUNCTION_71	ELSE_1	CALL_3
0x4000405	      0xe800000000	                          call 0x400040a	      1399	ec.c	FUNCTION_71	ELSE_1	CALL_3
0x400040a	            0x85c0	                           test eax, eax	      1400	ec.c	FUNCTION_71	ELSE_1	IF_4	CALL_4
0x400040c	            0x7534	                           jne 0x4000442	      1400	ec.c	FUNCTION_71	ELSE_1	IF_4	CALL_4
0x400040e	        0x488b0424	                    mov rax, qword [rsp]	      1402	ec.c	FUNCTION_71	ELSE_1
0x4000412	          0x894308	                mov dword [rbx + 8], eax	      1402	ec.c	FUNCTION_71	ELSE_1
0x4000415	            0x31d2	                            xor edx, edx	      1406	ec.c	FUNCTION_71	CALL_5
0x4000417	          0x4c89e1	                            mov rcx, r12	      1406	ec.c	FUNCTION_71	CALL_5
0x400041a	    0x48c7c6000000	                              mov rsi, 0	      1406	ec.c	FUNCTION_71	CALL_5
0x4000421	          0x4889ef	                            mov rdi, rbp	      1406	ec.c	FUNCTION_71	CALL_5
0x4000424	    0x48c704240000	                      mov qword [rsp], 0	      1405	ec.c	FUNCTION_71
0x400042c	      0xe800000000	                          call 0x4000431	      1406	ec.c	FUNCTION_71	CALL_5
0x4000431	      0x48833c2400	                      cmp qword [rsp], 0	      1407	ec.c	FUNCTION_71
0x4000436	          0x48892b	                    mov qword [rbx], rbp	      1408	ec.c	FUNCTION_71
0x4000439	      0xb803400000	                         mov eax, 0x4003	      1409	ec.c	FUNCTION_71
0x400043e	         0xf954320	                 setne byte [rbx + 0x20]	      1407	ec.c	FUNCTION_71
0x4000442	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1410	ec.c	FUNCTION_71
0x4000447	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      1410	ec.c	FUNCTION_71
0x4000450	            0x751e	                           jne 0x4000470	      1410	ec.c	FUNCTION_71
0x4000452	        0x4883c410	                           add rsp, 0x10	      1410	ec.c	FUNCTION_71
0x4000456	              0x5b	                                 pop rbx	      1410	ec.c	FUNCTION_71
0x4000457	              0x5d	                                 pop rbp	      1410	ec.c	FUNCTION_71
0x4000458	            0x415c	                                 pop r12	      1410	ec.c	FUNCTION_71
0x400045a	              0xc3	                                     ret	      1410	ec.c	FUNCTION_71
0x400045b	    0x8b1500000000	            mov edx, dword [0x04000461] 	      1390	ec.c	FUNCTION_71	IF_3
0x4000461	            0x85d2	                           test edx, edx	      1390	ec.c	FUNCTION_71	IF_3
0x4000463	            0x748e	                            je 0x40003f3	      1390	ec.c	FUNCTION_71	IF_3
0x4000465	          0x8b4008	                mov eax, dword [rax + 8]	      1395	ec.c	FUNCTION_71	IF_3
0x4000468	          0x4989e4	                            mov r12, rsp	      1395	ec.c	FUNCTION_71	IF_3
0x400046b	          0x894308	                mov dword [rbx + 8], eax	      1395	ec.c	FUNCTION_71	IF_3
0x400046e	            0xeba5	                           jmp 0x4000415	      1395	ec.c	FUNCTION_71	IF_3
0x4000470	      0xe800000000	                          call 0x4000475	      1410	ec.c	FUNCTION_71
acpi_ec_read	CALL,1:SWITCH,0:WHILE,0:functions,0:DO,0:FOR,0:ELSE,0:IF,0	26
0x4001410	              0x53	                                push rbx	       863	ec.c	FUNCTION_39
0x4001411	          0x4889d3	                            mov rbx, rdx	       863	ec.c	FUNCTION_39
0x4001414	        0x4883ec30	                           sub rsp, 0x30	       863	ec.c	FUNCTION_39
0x4001418	    0x65488b042528	                mov rax, qword gs:[0x28]	       863	ec.c	FUNCTION_39
0x4001421	      0x4889442428	             mov qword [rsp + 0x28], rax	       863	ec.c	FUNCTION_39
0x4001426	            0x31c0	                            xor eax, eax	       863	ec.c	FUNCTION_39
0x4001428	      0x488d442404	                      lea rax, [rsp + 4]	       866	ec.c	FUNCTION_39
0x400142d	      0x4088742404	                 mov byte [rsp + 4], sil	       863	ec.c	FUNCTION_39
0x4001432	      0x488d742410	                   lea rsi, [rsp + 0x10]	       870	ec.c	FUNCTION_39	CALL_1
0x4001437	    0x48c744242000	               mov qword [rsp + 0x20], 0	       866	ec.c	FUNCTION_39
0x4001440	      0xc644242280	            mov byte [rsp + 0x22], 0x80 	       866	ec.c	FUNCTION_39
0x4001445	      0x4889442410	             mov qword [rsp + 0x10], rax	       866	ec.c	FUNCTION_39
0x400144a	      0x488d44240f	                    lea rax, [rsp + 0xf]	       866	ec.c	FUNCTION_39
0x400144f	      0xc644242501	                mov byte [rsp + 0x25], 1	       866	ec.c	FUNCTION_39
0x4001454	      0xc644242601	                mov byte [rsp + 0x26], 1	       866	ec.c	FUNCTION_39
0x4001459	      0x4889442418	             mov qword [rsp + 0x18], rax	       866	ec.c	FUNCTION_39
0x400145e	      0xe8edfcffff	            call sym.acpi_ec_transaction	       870	ec.c	FUNCTION_39	CALL_1
0x4001463	       0xfb654240f	            movzx edx, byte [rsp + 0xf] 	       871	ec.c	FUNCTION_39
0x4001468	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       873	ec.c	FUNCTION_39
0x400146d	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       873	ec.c	FUNCTION_39
0x4001476	            0x8813	                      mov byte [rbx], dl	       871	ec.c	FUNCTION_39
0x4001478	            0x7506	                           jne 0x4001480	       873	ec.c	FUNCTION_39
0x400147a	        0x4883c430	                           add rsp, 0x30	       873	ec.c	FUNCTION_39
0x400147e	              0x5b	                                 pop rbx	       873	ec.c	FUNCTION_39
0x400147f	              0xc3	                                     ret	       873	ec.c	FUNCTION_39
0x4001480	      0xe800000000	                          call 0x4001485	       873	ec.c	FUNCTION_39
acpi_ec_dispatch_gpe	CALL,1:SWITCH,0:WHILE,0:functions,0:DO,0:FOR,0:ELSE,0:IF,1	7
0x40021e0	    0x488b05000000	            mov rax, qword [0x040021e7] 	      1039	ec.c	FUNCTION_52	IF_1
0x40021e7	          0x4885c0	                           test rax, rax	      1039	ec.c	FUNCTION_52	IF_1
0x40021ea	            0x740a	                            je 0x40021f6	      1039	ec.c	FUNCTION_52	IF_1
0x40021ec	          0x8b7008	                mov esi, dword [rax + 8]	      1040	ec.c	FUNCTION_52	CALL_1
0x40021ef	            0x31ff	                            xor edi, edi	      1040	ec.c	FUNCTION_52	CALL_1
0x40021f1	      0xe900000000	                           jmp 0x40021f6	      1040	ec.c	FUNCTION_52	CALL_1
0x40021f6	            0xf3c3	                                     ret	      1040	ec.c	FUNCTION_52	CALL_1
acpi_ec_remove	CALL,5:SWITCH,0:WHILE,0:functions,0:DO,0:FOR,0:ELSE,0:IF,2	28
0x4001eb0	          0x4885ff	                           test rdi, rdi	      1673	ec.c	FUNCTION_79	IF_1
0x4001eb3	              0x55	                                push rbp	      1670	ec.c	FUNCTION_79
0x4001eb4	              0x53	                                push rbx	      1670	ec.c	FUNCTION_79
0x4001eb5	            0x745f	                            je 0x4001f16	      1673	ec.c	FUNCTION_79	IF_1
0x4001eb7	    0x488baf480200	           mov rbp, qword [rdi + 0x248] 	      1673	ec.c	FUNCTION_79	IF_1
0x4001ebe	          0x4889fb	                            mov rbx, rdi	      1673	ec.c	FUNCTION_79	IF_1
0x4001ec1	      0xba01000000	                              mov edx, 1	      1677	ec.c	FUNCTION_79	CALL_2
0x4001ec6	    0x48c7c7000000	                              mov rdi, 0	      1677	ec.c	FUNCTION_79	CALL_2
0x4001ecd	        0x488b7518	            mov rsi, qword [rbp + 0x18] 	      1677	ec.c	FUNCTION_79	CALL_2
0x4001ed1	      0xe800000000	                          call 0x4001ed6	      1677	ec.c	FUNCTION_79	CALL_2
0x4001ed6	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	      1678	ec.c	FUNCTION_79	CALL_3
0x4001eda	      0xba01000000	                              mov edx, 1	      1678	ec.c	FUNCTION_79	CALL_3
0x4001edf	    0x48c7c7000000	                              mov rdi, 0	      1678	ec.c	FUNCTION_79	CALL_3
0x4001ee6	      0xe800000000	                          call 0x4001eeb	      1678	ec.c	FUNCTION_79	CALL_3
0x4001eeb	    0x48c783480200	              mov qword [rbx + 0x248], 0	      1679	ec.c	FUNCTION_79
0x4001ef6	            0x31db	                            xor ebx, ebx	      1684	ec.c	FUNCTION_79
0x4001ef8	    0x48392d000000	            cmp qword [0x04001eff], rbp 	      1680	ec.c	FUNCTION_79	IF_2
0x4001eff	            0x7410	                            je 0x4001f11	      1680	ec.c	FUNCTION_79	IF_2
0x4001f01	          0x4889ef	                            mov rdi, rbp	      1681	ec.c	FUNCTION_79	IF_2	CALL_4
0x4001f04	      0xe837feffff	             call sym.ec_remove_handlers	      1681	ec.c	FUNCTION_79	IF_2	CALL_4
0x4001f09	          0x4889ef	                            mov rdi, rbp	      1682	ec.c	FUNCTION_79	IF_2	CALL_5
0x4001f0c	      0xe82fe4ffff	                   call sym.acpi_ec_free	      1682	ec.c	FUNCTION_79	IF_2	CALL_5
0x4001f11	            0x89d8	                            mov eax, ebx	      1685	ec.c	FUNCTION_79
0x4001f13	              0x5b	                                 pop rbx	      1685	ec.c	FUNCTION_79
0x4001f14	              0x5d	                                 pop rbp	      1685	ec.c	FUNCTION_79
0x4001f15	              0xc3	                                     ret	      1685	ec.c	FUNCTION_79
0x4001f16	      0xbbeaffffff	                     mov ebx, 0xffffffea	      1674	ec.c	FUNCTION_79	IF_1
0x4001f1b	            0xebf4	                           jmp 0x4001f11	      1674	ec.c	FUNCTION_79	IF_1
ec_transaction	CALL,1:SWITCH,0:WHILE,0:functions,0:DO,0:FOR,0:ELSE,0:IF,1	23
0x4001570	        0x4883ec20	                           sub rsp, 0x20	       919	ec.c	FUNCTION_43
0x4001574	    0x48c744241000	               mov qword [rsp + 0x10], 0	       920	ec.c	FUNCTION_43
0x400157d	      0x40887c2412	              mov byte [rsp + 0x12], dil	       920	ec.c	FUNCTION_43
0x4001582	    0x488b3d000000	            mov rdi, qword [0x04001589] 	       924	ec.c	FUNCTION_43	IF_1
0x4001589	        0x48893424	                    mov qword [rsp], rsi	       920	ec.c	FUNCTION_43
0x400158d	    0x65488b042528	                mov rax, qword gs:[0x28]	       919	ec.c	FUNCTION_43
0x4001596	      0x4889442418	             mov qword [rsp + 0x18], rax	       919	ec.c	FUNCTION_43
0x400159b	            0x31c0	                            xor eax, eax	       919	ec.c	FUNCTION_43
0x400159d	      0x48894c2408	                mov qword [rsp + 8], rcx	       920	ec.c	FUNCTION_43
0x40015a2	        0x88542415	               mov byte [rsp + 0x15], dl	       920	ec.c	FUNCTION_43
0x40015a6	          0x4885ff	                           test rdi, rdi	       924	ec.c	FUNCTION_43	IF_1
0x40015a9	      0x4488442416	              mov byte [rsp + 0x16], r8b	       920	ec.c	FUNCTION_43
0x40015ae	            0x741d	                            je 0x40015cd	       924	ec.c	FUNCTION_43	IF_1
0x40015b0	          0x4889e6	                            mov rsi, rsp	       927	ec.c	FUNCTION_43	CALL_1
0x40015b3	      0xe898fbffff	            call sym.acpi_ec_transaction	       927	ec.c	FUNCTION_43	CALL_1
0x40015b8	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       928	ec.c	FUNCTION_43
0x40015bd	    0x654833142528	                xor rdx, qword gs:[0x28]	       928	ec.c	FUNCTION_43
0x40015c6	            0x750c	                           jne 0x40015d4	       928	ec.c	FUNCTION_43
0x40015c8	        0x4883c420	                           add rsp, 0x20	       928	ec.c	FUNCTION_43
0x40015cc	              0xc3	                                     ret	       928	ec.c	FUNCTION_43
0x40015cd	      0xb8edffffff	                     mov eax, 0xffffffed	       925	ec.c	FUNCTION_43	IF_1
0x40015d2	            0xebe4	                           jmp 0x40015b8	       925	ec.c	FUNCTION_43	IF_1
0x40015d4	      0xe800000000	                          call 0x40015d9	       928	ec.c	FUNCTION_43
ec_correct_ecdt	CALL,1:SWITCH,0:WHILE,0:functions,0:DO,0:FOR,0:ELSE,0:IF,0	3
0x40000b0	    0xc70500000000	               mov dword [0x040000ba], 1	      1819	ec.c	FUNCTION_84
0x40000ba	            0x31c0	                            xor eax, eax	      1821	ec.c	FUNCTION_84
0x40000bc	              0xc3	                                     ret	      1821	ec.c	FUNCTION_84
acpi_ec_unblock_transactions	CALL,1:SWITCH,0:WHILE,0:functions,0:DO,0:FOR,0:ELSE,0:IF,1	6
0x40021c0	    0x488b3d000000	            mov rdi, qword [0x040021c7] 	      1033	ec.c	FUNCTION_51	IF_1
0x40021c7	          0x4885ff	                           test rdi, rdi	      1033	ec.c	FUNCTION_51	IF_1
0x40021ca	            0x740a	                            je 0x40021d6	      1033	ec.c	FUNCTION_51	IF_1
0x40021cc	      0xbe01000000	                              mov esi, 1	      1034	ec.c	FUNCTION_51	CALL_1
0x40021d1	      0xe96af8ffff	                   jmp sym.acpi_ec_start	      1034	ec.c	FUNCTION_51	CALL_1
0x40021d6	            0xf3c3	                                     ret	      1034	ec.c	FUNCTION_51	CALL_1
acpi_ec_block_transactions	CALL,3:SWITCH,0:WHILE,0:functions,0:DO,0:FOR,0:ELSE,0:IF,1	18
0x4002180	              0x55	                                push rbp	      1015	ec.c	FUNCTION_50
0x4002181	              0x53	                                push rbx	      1015	ec.c	FUNCTION_50
0x4002182	    0x488b1d000000	            mov rbx, qword [0x04002189] 	      1016	ec.c	FUNCTION_50
0x4002189	          0x4885db	                           test rbx, rbx	      1018	ec.c	FUNCTION_50	IF_1
0x400218c	            0x7423	                            je 0x40021b1	      1018	ec.c	FUNCTION_50	IF_1
0x400218e	        0x488d6b38	                   lea rbp, [rbx + 0x38]	      1021	ec.c	FUNCTION_50	CALL_1
0x4002192	          0x4889ef	                            mov rdi, rbp	      1021	ec.c	FUNCTION_50	CALL_1
0x4002195	      0xe800000000	                          call 0x400219a	      1021	ec.c	FUNCTION_50	CALL_1
0x400219a	          0x4889df	                            mov rdi, rbx	      1023	ec.c	FUNCTION_50	CALL_2
0x400219d	      0xbe01000000	                              mov esi, 1	      1023	ec.c	FUNCTION_50	CALL_2
0x40021a2	      0xe829e9ffff	                   call sym.acpi_ec_stop	      1023	ec.c	FUNCTION_50	CALL_2
0x40021a7	          0x4889ef	                            mov rdi, rbp	      1024	ec.c	FUNCTION_50	CALL_3
0x40021aa	              0x5b	                                 pop rbx	      1025	ec.c	FUNCTION_50
0x40021ab	              0x5d	                                 pop rbp	      1025	ec.c	FUNCTION_50
0x40021ac	      0xe900000000	                           jmp 0x40021b1	      1024	ec.c	FUNCTION_50	CALL_3
0x40021b1	              0x5b	                                 pop rbx	      1025	ec.c	FUNCTION_50
0x40021b2	              0x5d	                                 pop rbp	      1025	ec.c	FUNCTION_50
0x40021b3	              0xc3	                                     ret	      1025	ec.c	FUNCTION_50
ec_get_handle	CALL,0:SWITCH,0:WHILE,0:functions,0:DO,0:FOR,0:ELSE,0:IF,1	7
0x4000090	    0x488b05000000	            mov rax, qword [0x04000097] 	       934	ec.c	FUNCTION_44	IF_1
0x4000097	          0x4885c0	                           test rax, rax	       934	ec.c	FUNCTION_44	IF_1
0x400009a	            0x7404	                            je 0x40000a0	       934	ec.c	FUNCTION_44	IF_1
0x400009c	          0x488b00	                    mov rax, qword [rax]	       936	ec.c	FUNCTION_44
0x400009f	              0xc3	                                     ret	       936	ec.c	FUNCTION_44
0x40000a0	            0x31c0	                            xor eax, eax	       935	ec.c	FUNCTION_44	IF_1
0x40000a2	              0xc3	                                     ret	       937	ec.c	FUNCTION_44
ec_honor_ecdt_gpe	CALL,1:SWITCH,0:WHILE,0:functions,0:DO,0:FOR,0:ELSE,0:IF,0	3
0x40000c0	    0xc70500000000	               mov dword [0x040000ca], 1	      1831	ec.c	FUNCTION_85
0x40000ca	            0x31c0	                            xor eax, eax	      1833	ec.c	FUNCTION_85
0x40000cc	              0xc3	                                     ret	      1833	ec.c	FUNCTION_85
acpi_ec_resume	CALL,3:SWITCH,0:WHILE,0:functions,0:DO,0:FOR,0:ELSE,0:IF,0	4
0x4001020	        0x488b7ff8	                mov rdi, qword [rdi - 8]	      1961	ec.c	FUNCTION_90	CALL_3
0x4001024	      0xe897ffffff	           call sym.acpi_ec_enable_event	      1961	ec.c	FUNCTION_90	CALL_3
0x4001029	            0x31c0	                            xor eax, eax	      1963	ec.c	FUNCTION_90
0x400102b	              0xc3	                                     ret	      1963	ec.c	FUNCTION_90
acpi_ec_event_processor	CALL,6:SWITCH,0:WHILE,0:functions,0:DO,0:FOR,0:ELSE,1:IF,2	21
0x40007f0	              0x53	                                push rbx	      1156	ec.c	FUNCTION_62
0x40007f1	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      1158	ec.c	FUNCTION_62
0x40007f5	        0x488d5fe8	                   lea rbx, [rdi - 0x18]	      1157	ec.c	FUNCTION_62	CALL_1
0x40007f9	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1161	ec.c	FUNCTION_62	IF_1
0x40007fd	          0x4885d2	                           test rdx, rdx	      1161	ec.c	FUNCTION_62	IF_1
0x4000800	            0x740f	                            je 0x4000811	      1161	ec.c	FUNCTION_62	IF_1
0x4000802	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      1162	ec.c	FUNCTION_62	CALL_3
0x4000806	      0xe800000000	                          call 0x400080b	      1162	ec.c	FUNCTION_62	CALL_3
0x400080b	          0x4889df	                            mov rdi, rbx	      1166	ec.c	FUNCTION_62	CALL_6
0x400080e	              0x5b	                                 pop rbx	      1167	ec.c	FUNCTION_62
0x400080f	            0xeb9f	            jmp sym.acpi_ec_delete_query	      1166	ec.c	FUNCTION_62	CALL_6
0x4000811	        0x488b7818	            mov rdi, qword [rax + 0x18] 	      1163	ec.c	FUNCTION_62	ELSE_1	IF_2
0x4000815	          0x4885ff	                           test rdi, rdi	      1163	ec.c	FUNCTION_62	ELSE_1	IF_2
0x4000818	            0x74f1	                            je 0x400080b	      1163	ec.c	FUNCTION_62	ELSE_1	IF_2
0x400081a	            0x31c9	                            xor ecx, ecx	      1164	ec.c	FUNCTION_62	ELSE_1	IF_2
0x400081c	            0x31d2	                            xor edx, edx	      1164	ec.c	FUNCTION_62	ELSE_1	IF_2
0x400081e	            0x31f6	                            xor esi, esi	      1164	ec.c	FUNCTION_62	ELSE_1	IF_2
0x4000820	      0xe800000000	                          call 0x4000825	      1164	ec.c	FUNCTION_62	ELSE_1	IF_2
0x4000825	          0x4889df	                            mov rdi, rbx	      1166	ec.c	FUNCTION_62	CALL_6
0x4000828	              0x5b	                                 pop rbx	      1167	ec.c	FUNCTION_62
0x4000829	            0xeb85	            jmp sym.acpi_ec_delete_query	      1166	ec.c	FUNCTION_62	CALL_6
acpi_ec_free	CALL,1:SWITCH,0:WHILE,0:functions,0:DO,0:FOR,0:ELSE,0:IF,2	9
0x4000340	    0x48393d000000	            cmp qword [0x04000347], rdi 	      1332	ec.c	FUNCTION_68	IF_1
0x4000347	            0x741e	                            je 0x4000367	      1332	ec.c	FUNCTION_68	IF_1
0x4000349	    0x483b3d000000	            cmp rdi, qword [0x04000350] 	      1334	ec.c	FUNCTION_68	IF_2
0x4000350	            0x7405	                            je 0x4000357	      1334	ec.c	FUNCTION_68	IF_2
0x4000352	      0xe900000000	                           jmp 0x4000357	      1336	ec.c	FUNCTION_68	CALL_1
0x4000357	    0x48c705000000	               mov qword [0x04000362], 0	      1335	ec.c	FUNCTION_68	IF_2
0x4000362	      0xe900000000	                           jmp 0x4000367	      1336	ec.c	FUNCTION_68	CALL_1
0x4000367	    0x48c705000000	               mov qword [0x04000372], 0	      1333	ec.c	FUNCTION_68	IF_1
0x4000372	            0xebd5	                           jmp 0x4000349	      1333	ec.c	FUNCTION_68	IF_1
acpi_ec_remove_query_handler	CALL,1:SWITCH,0:WHILE,0:functions,0:DO,0:FOR,0:ELSE,0:IF,0	3
0x4001d30	        0x400fb6d6	                          movzx edx, sil	      1126	ec.c	FUNCTION_59	CALL_1
0x4001d34	            0x31f6	                            xor esi, esi	      1126	ec.c	FUNCTION_59	CALL_1
0x4001d36	      0xe9f5feffff	   jmp sym.acpi_ec_remove_query_handlers	      1126	ec.c	FUNCTION_59	CALL_1
acpi_ec_register_query_methods	CALL,4:SWITCH,0:WHILE,0:functions,0:DO,0:FOR,0:ELSE,0:IF,1	41
0x4000990	            0x4154	                                push r12	      1359	ec.c	FUNCTION_70
0x4000992	              0x55	                                push rbp	      1359	ec.c	FUNCTION_70
0x4000993	          0x4989d4	                            mov r12, rdx	      1359	ec.c	FUNCTION_70
0x4000996	              0x53	                                push rbx	      1359	ec.c	FUNCTION_70
0x4000997	      0xbe01000000	                              mov esi, 1	      1366	ec.c	FUNCTION_70	CALL_1
0x400099c	          0x4889fd	                            mov rbp, rdi	      1359	ec.c	FUNCTION_70
0x400099f	        0x4883ec28	                           sub rsp, 0x28	      1359	ec.c	FUNCTION_70
0x40009a3	      0x488d5c241b	                   lea rbx, [rsp + 0x1b]	      1361	ec.c	FUNCTION_70
0x40009a8	      0x488d542408	                      lea rdx, [rsp + 8]	      1366	ec.c	FUNCTION_70	CALL_1
0x40009ad	    0x48c744240805	                  mov qword [rsp + 8], 5	      1361	ec.c	FUNCTION_70
0x40009b6	    0x65488b042528	                mov rax, qword gs:[0x28]	      1359	ec.c	FUNCTION_70
0x40009bf	      0x4889442420	             mov qword [rsp + 0x20], rax	      1359	ec.c	FUNCTION_70
0x40009c4	            0x31c0	                            xor eax, eax	      1359	ec.c	FUNCTION_70
0x40009c6	      0x48895c2410	             mov qword [rsp + 0x10], rbx	      1361	ec.c	FUNCTION_70
0x40009cb	    0xc74424040000	                  mov dword [rsp + 4], 0	      1363	ec.c	FUNCTION_70
0x40009d3	      0xe800000000	                          call 0x40009d8	      1366	ec.c	FUNCTION_70	CALL_1
0x40009d8	            0x85c0	                           test eax, eax	      1368	ec.c	FUNCTION_70	IF_1	CALL_3
0x40009da	            0x741b	                            je 0x40009f7	      1368	ec.c	FUNCTION_70	IF_1	CALL_3
0x40009dc	            0x31c0	                            xor eax, eax	      1371	ec.c	FUNCTION_70
0x40009de	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      1371	ec.c	FUNCTION_70
0x40009e3	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      1371	ec.c	FUNCTION_70
0x40009ec	            0x7539	                           jne 0x4000a27	      1371	ec.c	FUNCTION_70
0x40009ee	        0x4883c428	                           add rsp, 0x28	      1371	ec.c	FUNCTION_70
0x40009f2	              0x5b	                                 pop rbx	      1371	ec.c	FUNCTION_70
0x40009f3	              0x5d	                                 pop rbp	      1371	ec.c	FUNCTION_70
0x40009f4	            0x415c	                                 pop r12	      1371	ec.c	FUNCTION_70
0x40009f6	              0xc3	                                     ret	      1371	ec.c	FUNCTION_70
0x40009f7	      0x488d542404	                      lea rdx, [rsp + 4]	      1368	ec.c	FUNCTION_70	IF_1	CALL_3
0x40009fc	    0x48c7c6000000	                              mov rsi, 0	      1368	ec.c	FUNCTION_70	IF_1	CALL_3
0x4000a03	          0x4889df	                            mov rdi, rbx	      1368	ec.c	FUNCTION_70	IF_1	CALL_3
0x4000a06	      0xe800000000	                          call 0x4000a0b	      1368	ec.c	FUNCTION_70	IF_1	CALL_3
0x4000a0b	          0x83f801	                              cmp eax, 1	      1368	ec.c	FUNCTION_70	IF_1	CALL_3
0x4000a0e	            0x75cc	                           jne 0x40009dc	      1368	ec.c	FUNCTION_70	IF_1	CALL_3
0x4000a10	       0xfb6742404	               movzx esi, byte [rsp + 4]	      1369	ec.c	FUNCTION_70	CALL_4
0x4000a15	          0x4531c0	                            xor r8d, r8d	      1369	ec.c	FUNCTION_70	CALL_4
0x4000a18	            0x31c9	                            xor ecx, ecx	      1369	ec.c	FUNCTION_70	CALL_4
0x4000a1a	          0x4889ea	                            mov rdx, rbp	      1369	ec.c	FUNCTION_70	CALL_4
0x4000a1d	          0x4c89e7	                            mov rdi, r12	      1369	ec.c	FUNCTION_70	CALL_4
0x4000a20	      0xe800000000	                          call 0x4000a25	      1369	ec.c	FUNCTION_70	CALL_4
0x4000a25	            0xebb5	                           jmp 0x40009dc	      1369	ec.c	FUNCTION_70	CALL_4
0x4000a27	      0xe800000000	                          call 0x4000a2c	      1371	ec.c	FUNCTION_70
