resources_show	CALL,4:SWITCH,0:IF,2:ELSE,0:FOR,0:WHILE,0:functions,1:DO,0	92
0x40006e0	          0x4885ff	                           test rdi, rdi	       256	interface.c	FUNCTION_8	IF_1
0x40006e3	     0xf844b010000	                            je 0x4000834	       256	interface.c	FUNCTION_8	IF_1
0x40006e9	            0x4157	                                push r15	       249	interface.c	FUNCTION_8
0x40006eb	            0x4156	                                push r14	       249	interface.c	FUNCTION_8
0x40006ed	            0x4155	                                push r13	       249	interface.c	FUNCTION_8
0x40006ef	            0x4154	                                push r12	       249	interface.c	FUNCTION_8
0x40006f1	          0x4989fc	                            mov r12, rdi	       249	interface.c	FUNCTION_8
0x40006f4	              0x55	                                push rbp	       249	interface.c	FUNCTION_8
0x40006f5	              0x53	                                push rbx	       249	interface.c	FUNCTION_8
0x40006f6	      0xbf28000000	                           mov edi, 0x28	       259	interface.c	FUNCTION_8	CALL_2
0x40006fb	          0x4989d5	                            mov r13, rdx	       259	interface.c	FUNCTION_8	CALL_2
0x40006fe	      0xe800000000	                          call 0x4000703	       259	interface.c	FUNCTION_8	CALL_2
0x4000703	          0x4885c0	                           test rax, rax	       260	interface.c	FUNCTION_8	IF_2
0x4000706	          0x4889c5	                            mov rbp, rax	       259	interface.c	FUNCTION_8	CALL_2
0x4000709	     0xf842d010000	                            je 0x400083c	       260	interface.c	FUNCTION_8	IF_2
0x400070f	    0x48c740180010	         mov qword [rax + 0x18], 0x1000 	       263	interface.c	FUNCTION_8
0x4000717	          0x4c8928	                    mov qword [rax], r13	       264	interface.c	FUNCTION_8
0x400071a	    0x48c7c2000000	                              mov rdx, 0	       267	interface.c	FUNCTION_8	CALL_3
0x4000721	        0x4c896808	                mov qword [rax + 8], r13	       265	interface.c	FUNCTION_8
0x4000725	    0x418b84244803	           mov eax, dword [r12 + 0x348] 	       267	interface.c	FUNCTION_8	CALL_3
0x400072d	    0x48c7c6000000	                              mov rsi, 0	       267	interface.c	FUNCTION_8	CALL_3
0x4000734	          0x4889ef	                            mov rdi, rbp	       267	interface.c	FUNCTION_8	CALL_3
0x4000737	    0x49c7c7000000	                              mov r15, 0	       283	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_5
0x400073e	            0x85c0	                           test eax, eax	       267	interface.c	FUNCTION_8	CALL_3
0x4000740	    0x48c7c0000000	                              mov rax, 0	       267	interface.c	FUNCTION_8	CALL_3
0x4000747	        0x480f45d0	                         cmovne rdx, rax	       267	interface.c	FUNCTION_8	CALL_3
0x400074b	    0x4981c4580300	                          add r12, 0x358	       269	interface.c	FUNCTION_8	FUNCTION_1
0x4000752	      0xe839f9ffff	                     call sym.pnp_printf	       267	interface.c	FUNCTION_8	CALL_3
0x4000757	        0x498b1c24	                    mov rbx, qword [r12]	       269	interface.c	FUNCTION_8	FUNCTION_1
0x400075b	          0x4c39e3	                            cmp rbx, r12	       269	interface.c	FUNCTION_8	FUNCTION_1
0x400075e	            0x751c	                           jne 0x400077c	       269	interface.c	FUNCTION_8	FUNCTION_1
0x4000760	      0xe984000000	                           jmp 0x40007e9	       269	interface.c	FUNCTION_8	FUNCTION_1
0x4000765	    0x48c7c6000000	                              mov rsi, 0	       275	interface.c	FUNCTION_8	FUNCTION_1	IF_1	CALL_3
0x400076c	          0x4889ef	                            mov rdi, rbp	       275	interface.c	FUNCTION_8	FUNCTION_1	IF_1	CALL_3
0x400076f	      0xe81cf9ffff	                     call sym.pnp_printf	       275	interface.c	FUNCTION_8	FUNCTION_1	IF_1	CALL_3
0x4000774	          0x488b1b	                    mov rbx, qword [rbx]	       269	interface.c	FUNCTION_8	FUNCTION_1
0x4000777	          0x4c39e3	                            cmp rbx, r12	       269	interface.c	FUNCTION_8	FUNCTION_1
0x400077a	            0x746d	                            je 0x40007e9	       269	interface.c	FUNCTION_8	FUNCTION_1
0x400077c	        0x4c8d7310	                   lea r14, [rbx + 0x10]	       270	interface.c	FUNCTION_8	FUNCTION_1
0x4000780	          0x4c89f7	                            mov rdi, r14	       272	interface.c	FUNCTION_8	FUNCTION_1	CALL_2
0x4000783	      0xe800000000	                          call 0x4000788	       272	interface.c	FUNCTION_8	FUNCTION_1	CALL_2
0x4000788	          0x4889ef	                            mov rdi, rbp	       272	interface.c	FUNCTION_8	FUNCTION_1	CALL_2
0x400078b	          0x4889c6	                            mov rsi, rax	       272	interface.c	FUNCTION_8	FUNCTION_1	CALL_2
0x400078e	      0xe8fdf8ffff	                     call sym.pnp_printf	       272	interface.c	FUNCTION_8	FUNCTION_1	CALL_2
0x4000793	        0xf6432b10	           test byte [rbx + 0x2b], 0x10 	       274	interface.c	FUNCTION_8	FUNCTION_1	IF_1
0x4000797	            0x75cc	                           jne 0x4000765	       274	interface.c	FUNCTION_8	FUNCTION_1	IF_1
0x4000799	          0x4c89f7	                            mov rdi, r14	       279	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_4
0x400079c	      0xe800000000	                          call 0x40007a1	       279	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_4
0x40007a1	    0x483d00040000	                          cmp rax, 0x400	       279	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_4
0x40007a7	            0x7473	                            je 0x400081c	       279	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_4
0x40007a9	            0x765b	                           jbe 0x4000806	       279	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_4
0x40007ab	    0x483d00080000	                          cmp rax, 0x800	       279	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_4
0x40007b1	            0x7469	                            je 0x400081c	       279	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_4
0x40007b3	    0x483d00100000	                         cmp rax, 0x1000	       279	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_4
0x40007b9	            0x75b9	                           jne 0x4000774	       279	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_4
0x40007bb	        0xf6432a20	           test byte [rbx + 0x2a], 0x20 	       283	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_5
0x40007bf	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	       283	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_5
0x40007c3	    0x49c7c0000000	                               mov r8, 0	       283	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_5
0x40007ca	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       283	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_5
0x40007ce	    0x48c7c6000000	                              mov rsi, 0	       283	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_5
0x40007d5	          0x4889ef	                            mov rdi, rbp	       283	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_5
0x40007d8	        0x4d0f45c7	                          cmovne r8, r15	       283	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_5
0x40007dc	      0xe8aff8ffff	                     call sym.pnp_printf	       283	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_5
0x40007e1	          0x488b1b	                    mov rbx, qword [rbx]	       269	interface.c	FUNCTION_8	FUNCTION_1
0x40007e4	          0x4c39e3	                            cmp rbx, r12	       269	interface.c	FUNCTION_8	FUNCTION_1
0x40007e7	            0x7593	                           jne 0x400077c	       269	interface.c	FUNCTION_8	FUNCTION_1
0x40007e9	        0x488b5d08	                mov rbx, qword [rbp + 8]	       297	interface.c	FUNCTION_8
0x40007ed	          0x4889ef	                            mov rdi, rbp	       298	interface.c	FUNCTION_8	CALL_4
0x40007f0	      0xe800000000	                          call 0x40007f5	       298	interface.c	FUNCTION_8	CALL_4
0x40007f5	          0x4c29eb	                            sub rbx, r13	       297	interface.c	FUNCTION_8
0x40007f8	          0x4863c3	                         movsxd rax, ebx	       299	interface.c	FUNCTION_8
0x40007fb	              0x5b	                                 pop rbx	       300	interface.c	FUNCTION_8
0x40007fc	              0x5d	                                 pop rbp	       300	interface.c	FUNCTION_8
0x40007fd	            0x415c	                                 pop r12	       300	interface.c	FUNCTION_8
0x40007ff	            0x415d	                                 pop r13	       300	interface.c	FUNCTION_8
0x4000801	            0x415e	                                 pop r14	       300	interface.c	FUNCTION_8
0x4000803	            0x415f	                                 pop r15	       300	interface.c	FUNCTION_8
0x4000805	              0xc3	                                     ret	       300	interface.c	FUNCTION_8
0x4000806	    0x483d00010000	                          cmp rax, 0x100	       279	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_4
0x400080c	            0x74ad	                            je 0x40007bb	       279	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_4
0x400080e	    0x483d00020000	                          cmp rax, 0x200	       279	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_4
0x4000814	     0xf855affffff	                           jne 0x4000774	       279	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_4
0x400081a	            0xeb9f	                           jmp 0x40007bb	       279	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_4
0x400081c	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       291	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_6
0x4000820	    0x48c7c6000000	                              mov rsi, 0	       291	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_6
0x4000827	          0x4889ef	                            mov rdi, rbp	       291	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_6
0x400082a	      0xe861f8ffff	                     call sym.pnp_printf	       291	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1	CALL_6
0x400082f	      0xe940ffffff	                           jmp 0x4000774	       293	interface.c	FUNCTION_8	FUNCTION_1	SWITCH_1
0x4000834	    0x48c7c0eaffff	             mov rax, 0xffffffffffffffea	       257	interface.c	FUNCTION_8	IF_1
0x400083b	              0xc3	                                     ret	       300	interface.c	FUNCTION_8
0x400083c	    0x48c7c0f4ffff	             mov rax, 0xfffffffffffffff4	       261	interface.c	FUNCTION_8	IF_2
0x4000843	            0xebb6	                           jmp 0x40007fb	       261	interface.c	FUNCTION_8	IF_2
id_show	CALL,2:SWITCH,0:IF,0:ELSE,0:FOR,0:WHILE,1:functions,0:DO,0	25
0x4000040	            0x4154	                                push r12	       442	interface.c	FUNCTION_11
0x4000042	              0x55	                                push rbp	       442	interface.c	FUNCTION_11
0x4000043	              0x53	                                push rbx	       442	interface.c	FUNCTION_11
0x4000044	    0x488b9f400300	           mov rbx, qword [rdi + 0x340] 	       445	interface.c	FUNCTION_11
0x400004b	          0x4885db	                           test rbx, rbx	       447	interface.c	FUNCTION_11	WHILE_1
0x400004e	            0x7431	                            je 0x4000081	       447	interface.c	FUNCTION_11	WHILE_1
0x4000050	          0x4989d4	                            mov r12, rdx	       447	interface.c	FUNCTION_11	WHILE_1
0x4000053	          0x4889d5	                            mov rbp, rdx	       447	interface.c	FUNCTION_11	WHILE_1
0x4000056	          0x4889da	                            mov rdx, rbx	       448	interface.c	FUNCTION_11	WHILE_1	CALL_2
0x4000059	          0x4889ef	                            mov rdi, rbp	       448	interface.c	FUNCTION_11	WHILE_1	CALL_2
0x400005c	    0x48c7c6000000	                              mov rsi, 0	       448	interface.c	FUNCTION_11	WHILE_1	CALL_2
0x4000063	      0xe800000000	                          call 0x4000068	       448	interface.c	FUNCTION_11	WHILE_1	CALL_2
0x4000068	        0x488b5b08	                mov rbx, qword [rbx + 8]	       449	interface.c	FUNCTION_11	WHILE_1
0x400006c	            0x4898	                                    cdqe	       448	interface.c	FUNCTION_11	WHILE_1	CALL_2
0x400006e	          0x4801c5	                            add rbp, rax	       448	interface.c	FUNCTION_11	WHILE_1	CALL_2
0x4000071	          0x4885db	                           test rbx, rbx	       447	interface.c	FUNCTION_11	WHILE_1
0x4000074	            0x75e0	                           jne 0x4000056	       447	interface.c	FUNCTION_11	WHILE_1
0x4000076	          0x4889e8	                            mov rax, rbp	       447	interface.c	FUNCTION_11	WHILE_1
0x4000079	          0x4c29e0	                            sub rax, r12	       447	interface.c	FUNCTION_11	WHILE_1
0x400007c	              0x5b	                                 pop rbx	       452	interface.c	FUNCTION_11
0x400007d	              0x5d	                                 pop rbp	       452	interface.c	FUNCTION_11
0x400007e	            0x415c	                                 pop r12	       452	interface.c	FUNCTION_11
0x4000080	              0xc3	                                     ret	       452	interface.c	FUNCTION_11
0x4000081	            0x31c0	                            xor eax, eax	       447	interface.c	FUNCTION_11	WHILE_1
0x4000083	            0xebf7	                           jmp 0x400007c	       447	interface.c	FUNCTION_11	WHILE_1
resources_store	CALL,39:SWITCH,0:IF,19:ELSE,5:FOR,0:WHILE,1:functions,0:DO,0	208
0x4000900	            0x4154	                                push r12	       338	interface.c	ELSE_1	FUNCTION_10
0x4000902	              0x55	                                push rbp	       338	interface.c	ELSE_1	FUNCTION_10
0x4000903	          0x4889fd	                            mov rbp, rdi	       338	interface.c	ELSE_1	FUNCTION_10
0x4000906	              0x53	                                push rbx	       338	interface.c	ELSE_1	FUNCTION_10
0x4000907	        0x4883ec20	                           sub rsp, 0x20	       338	interface.c	ELSE_1	FUNCTION_10
0x400090b	    0x65488b042528	                mov rax, qword gs:[0x28]	       338	interface.c	ELSE_1	FUNCTION_10
0x4000914	      0x4889442418	             mov qword [rsp + 0x18], rax	       338	interface.c	ELSE_1	FUNCTION_10
0x4000919	            0x31c0	                            xor eax, eax	       338	interface.c	ELSE_1	FUNCTION_10
0x400091b	    0xf687dc020000	              test byte [rdi + 0x2dc], 1	       343	interface.c	ELSE_1	FUNCTION_10	IF_1
0x4000922	            0x7430	                            je 0x4000954	       343	interface.c	ELSE_1	FUNCTION_10	IF_1
0x4000924	    0x48c7c6000000	                              mov rsi, 0	       345	interface.c	ELSE_1	FUNCTION_10	IF_1	CALL_2
0x400092b	      0xe800000000	                          call 0x4000930	       345	interface.c	ELSE_1	FUNCTION_10	IF_1	CALL_2
0x4000930	    0x48c7c0f0ffff	             mov rax, 0xfffffffffffffff0	       345	interface.c	ELSE_1	FUNCTION_10	IF_1	CALL_2
0x4000937	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       437	interface.c	FUNCTION_10	ELSE_1
0x400093c	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       437	interface.c	FUNCTION_10	ELSE_1
0x4000945	     0xf850e030000	                           jne 0x4000c59	       437	interface.c	FUNCTION_10	ELSE_1
0x400094b	        0x4883c420	                           add rsp, 0x20	       437	interface.c	FUNCTION_10	ELSE_1
0x400094f	              0x5b	                                 pop rbx	       437	interface.c	FUNCTION_10	ELSE_1
0x4000950	              0x5d	                                 pop rbp	       437	interface.c	FUNCTION_10	ELSE_1
0x4000951	            0x415c	                                 pop r12	       437	interface.c	FUNCTION_10	ELSE_1
0x4000953	              0xc3	                                     ret	       437	interface.c	FUNCTION_10	ELSE_1
0x4000954	          0x4889d7	                            mov rdi, rdx	       349	interface.c	ELSE_1	FUNCTION_10	CALL_3
0x4000957	          0x4889cb	                            mov rbx, rcx	       349	interface.c	ELSE_1	FUNCTION_10	CALL_3
0x400095a	      0xe800000000	                          call 0x400095f	       349	interface.c	ELSE_1	FUNCTION_10	CALL_3
0x400095f	      0xba07000000	                              mov edx, 7	       350	interface.c	ELSE_1	FUNCTION_10	IF_2	CALL_4
0x4000964	    0x48c7c6000000	                              mov rsi, 0	       350	interface.c	ELSE_1	FUNCTION_10	IF_2	CALL_4
0x400096b	          0x4889c7	                            mov rdi, rax	       350	interface.c	ELSE_1	FUNCTION_10	IF_2	CALL_4
0x400096e	          0x4989c4	                            mov r12, rax	       349	interface.c	ELSE_1	FUNCTION_10	CALL_3
0x4000971	      0xe800000000	                          call 0x4000976	       350	interface.c	ELSE_1	FUNCTION_10	IF_2	CALL_4
0x4000976	            0x85c0	                           test eax, eax	       350	interface.c	ELSE_1	FUNCTION_10	IF_2	CALL_4
0x4000978	            0x7464	                            je 0x40009de	       350	interface.c	ELSE_1	FUNCTION_10	IF_2	CALL_4
0x400097a	      0xba08000000	                              mov edx, 8	       354	interface.c	ELSE_1	FUNCTION_10	IF_3	CALL_6
0x400097f	    0x48c7c6000000	                              mov rsi, 0	       354	interface.c	ELSE_1	FUNCTION_10	IF_3	CALL_6
0x4000986	          0x4c89e7	                            mov rdi, r12	       354	interface.c	ELSE_1	FUNCTION_10	IF_3	CALL_6
0x4000989	      0xe800000000	                          call 0x400098e	       354	interface.c	ELSE_1	FUNCTION_10	IF_3	CALL_6
0x400098e	            0x85c0	                           test eax, eax	       354	interface.c	ELSE_1	FUNCTION_10	IF_3	CALL_6
0x4000990	            0x7470	                            je 0x4000a02	       354	interface.c	ELSE_1	FUNCTION_10	IF_3	CALL_6
0x4000992	      0xba04000000	                              mov edx, 4	       358	interface.c	ELSE_1	FUNCTION_10	IF_4	CALL_8
0x4000997	    0x48c7c6000000	                              mov rsi, 0	       358	interface.c	ELSE_1	FUNCTION_10	IF_4	CALL_8
0x400099e	          0x4c89e7	                            mov rdi, r12	       358	interface.c	ELSE_1	FUNCTION_10	IF_4	CALL_8
0x40009a1	      0xe800000000	                          call 0x40009a6	       358	interface.c	ELSE_1	FUNCTION_10	IF_4	CALL_8
0x40009a6	            0x85c0	                           test eax, eax	       358	interface.c	ELSE_1	FUNCTION_10	IF_4	CALL_8
0x40009a8	            0x744c	                            je 0x40009f6	       358	interface.c	ELSE_1	FUNCTION_10	IF_4	CALL_8
0x40009aa	      0xba04000000	                              mov edx, 4	       364	interface.c	ELSE_1	FUNCTION_10	IF_6	CALL_10
0x40009af	    0x48c7c6000000	                              mov rsi, 0	       364	interface.c	ELSE_1	FUNCTION_10	IF_6	CALL_10
0x40009b6	          0x4c89e7	                            mov rdi, r12	       364	interface.c	ELSE_1	FUNCTION_10	IF_6	CALL_10
0x40009b9	      0xe800000000	                          call 0x40009be	       364	interface.c	ELSE_1	FUNCTION_10	IF_6	CALL_10
0x40009be	            0x85c0	                           test eax, eax	       364	interface.c	ELSE_1	FUNCTION_10	IF_6	CALL_10
0x40009c0	            0x754a	                           jne 0x4000a0c	       364	interface.c	ELSE_1	FUNCTION_10	IF_6	CALL_10
0x40009c2	    0x8b8d48030000	           mov ecx, dword [rbp + 0x348] 	       365	interface.c	ELSE_1	FUNCTION_10	IF_6	IF_7
0x40009c8	            0x85c9	                           test ecx, ecx	       365	interface.c	ELSE_1	FUNCTION_10	IF_6	IF_7
0x40009ca	            0x7522	                           jne 0x40009ee	       365	interface.c	ELSE_1	FUNCTION_10	IF_6	IF_7
0x40009cc	          0x4889ef	                            mov rdi, rbp	       367	interface.c	ELSE_1	FUNCTION_10	IF_6	CALL_11
0x40009cf	      0xe800000000	                          call 0x40009d4	       367	interface.c	ELSE_1	FUNCTION_10	IF_6	CALL_11
0x40009d4	          0x4889ef	                            mov rdi, rbp	       368	interface.c	ELSE_1	FUNCTION_10	IF_6	CALL_12
0x40009d7	      0xe800000000	                          call 0x40009dc	       368	interface.c	ELSE_1	FUNCTION_10	IF_6	CALL_12
0x40009dc	            0xeb08	                           jmp 0x40009e6	       369	interface.c	ELSE_1	FUNCTION_10	IF_6
0x40009de	          0x4889ef	                            mov rdi, rbp	       351	interface.c	ELSE_1	FUNCTION_10	IF_2	CALL_5
0x40009e1	      0xe800000000	                          call 0x40009e6	       351	interface.c	ELSE_1	FUNCTION_10	IF_2	CALL_5
0x40009e6	            0x85c0	                           test eax, eax	       434	interface.c	FUNCTION_10	ELSE_1	IF_19
0x40009e8	     0xf8870020000	                            js 0x4000c5e	       434	interface.c	FUNCTION_10	ELSE_1	IF_19
0x40009ee	          0x4889d8	                            mov rax, rbx	       436	interface.c	FUNCTION_10	ELSE_1
0x40009f1	      0xe941ffffff	                           jmp 0x4000937	       436	interface.c	FUNCTION_10	ELSE_1
0x40009f6	    0x8bb548030000	           mov esi, dword [rbp + 0x348] 	       359	interface.c	ELSE_1	FUNCTION_10	IF_4	IF_5
0x40009fc	            0x85f6	                           test esi, esi	       359	interface.c	ELSE_1	FUNCTION_10	IF_4	IF_5
0x40009fe	            0x75ee	                           jne 0x40009ee	       359	interface.c	ELSE_1	FUNCTION_10	IF_4	IF_5
0x4000a00	            0xebd2	                           jmp 0x40009d4	       359	interface.c	ELSE_1	FUNCTION_10	IF_4	IF_5
0x4000a02	          0x4889ef	                            mov rdi, rbp	       355	interface.c	ELSE_1	FUNCTION_10	IF_3	CALL_7
0x4000a05	      0xe800000000	                          call 0x4000a0a	       355	interface.c	ELSE_1	FUNCTION_10	IF_3	CALL_7
0x4000a0a	            0xebda	                           jmp 0x40009e6	       356	interface.c	ELSE_1	FUNCTION_10	IF_3
0x4000a0c	      0xba05000000	                              mov edx, 5	       371	interface.c	ELSE_1	FUNCTION_10	IF_8	CALL_13
0x4000a11	    0x48c7c6000000	                              mov rsi, 0	       371	interface.c	ELSE_1	FUNCTION_10	IF_8	CALL_13
0x4000a18	          0x4c89e7	                            mov rdi, r12	       371	interface.c	ELSE_1	FUNCTION_10	IF_8	CALL_13
0x4000a1b	      0xe800000000	                          call 0x4000a20	       371	interface.c	ELSE_1	FUNCTION_10	IF_8	CALL_13
0x4000a20	            0x85c0	                           test eax, eax	       371	interface.c	ELSE_1	FUNCTION_10	IF_8	CALL_13
0x4000a22	     0xf841a010000	                            je 0x4000b42	       371	interface.c	ELSE_1	FUNCTION_10	IF_8	CALL_13
0x4000a28	      0xba03000000	                              mov edx, 3	       377	interface.c	ELSE_1	FUNCTION_10	IF_10	CALL_15
0x4000a2d	    0x48c7c6000000	                              mov rsi, 0	       377	interface.c	ELSE_1	FUNCTION_10	IF_10	CALL_15
0x4000a34	          0x4c89e7	                            mov rdi, r12	       377	interface.c	ELSE_1	FUNCTION_10	IF_10	CALL_15
0x4000a37	      0xe800000000	                          call 0x4000a3c	       377	interface.c	ELSE_1	FUNCTION_10	IF_10	CALL_15
0x4000a3c	            0x85c0	                           test eax, eax	       377	interface.c	ELSE_1	FUNCTION_10	IF_10	CALL_15
0x4000a3e	     0xf84d7010000	                            je 0x4000c1b	       377	interface.c	ELSE_1	FUNCTION_10	IF_10	CALL_15
0x4000a44	      0xba03000000	                              mov edx, 3	       384	interface.c	ELSE_1	FUNCTION_10	IF_12	CALL_20
0x4000a49	    0x48c7c6000000	                              mov rsi, 0	       384	interface.c	ELSE_1	FUNCTION_10	IF_12	CALL_20
0x4000a50	          0x4c89e7	                            mov rdi, r12	       384	interface.c	ELSE_1	FUNCTION_10	IF_12	CALL_20
0x4000a53	      0xe800000000	                          call 0x4000a58	       384	interface.c	ELSE_1	FUNCTION_10	IF_12	CALL_20
0x4000a58	            0x85c0	                           test eax, eax	       384	interface.c	ELSE_1	FUNCTION_10	IF_12	CALL_20
0x4000a5a	            0x7592	                           jne 0x40009ee	       384	interface.c	ELSE_1	FUNCTION_10	IF_12	CALL_20
0x4000a5c	    0x8b8548030000	           mov eax, dword [rbp + 0x348] 	       389	interface.c	ELSE_1	FUNCTION_10	IF_12	IF_13
0x4000a62	            0x85c0	                           test eax, eax	       389	interface.c	ELSE_1	FUNCTION_10	IF_12	IF_13
0x4000a64	            0x7588	                           jne 0x40009ee	       389	interface.c	ELSE_1	FUNCTION_10	IF_12	IF_13
0x4000a66	          0x4889ef	                            mov rdi, rbp	       392	interface.c	ELSE_1	FUNCTION_10	IF_12	CALL_21
0x4000a69	        0x4983c403	                              add r12, 3	       391	interface.c	ELSE_1	FUNCTION_10	IF_12
0x4000a6d	      0xe800000000	                          call 0x4000a72	       392	interface.c	ELSE_1	FUNCTION_10	IF_12	CALL_21
0x4000a72	    0x48c7c7000000	                              mov rdi, 0	       393	interface.c	ELSE_1	FUNCTION_10	IF_12	CALL_22
0x4000a79	      0xe800000000	                          call 0x4000a7e	       393	interface.c	ELSE_1	FUNCTION_10	IF_12	CALL_22
0x4000a7e	          0x4c89e7	                            mov rdi, r12	       395	interface.c	ELSE_1	FUNCTION_10	IF_12	WHILE_1	CALL_23
0x4000a81	      0xe800000000	                          call 0x4000a86	       395	interface.c	ELSE_1	FUNCTION_10	IF_12	WHILE_1	CALL_23
0x4000a86	      0xba02000000	                              mov edx, 2	       396	interface.c	ELSE_1	FUNCTION_10	IF_12	WHILE_1	IF_14	CALL_24
0x4000a8b	    0x48c7c6000000	                              mov rsi, 0	       396	interface.c	ELSE_1	FUNCTION_10	IF_12	WHILE_1	IF_14	CALL_24
0x4000a92	          0x4889c7	                            mov rdi, rax	       396	interface.c	ELSE_1	FUNCTION_10	IF_12	WHILE_1	IF_14	CALL_24
0x4000a95	          0x4989c4	                            mov r12, rax	       395	interface.c	ELSE_1	FUNCTION_10	IF_12	WHILE_1	CALL_23
0x4000a98	      0xe800000000	                          call 0x4000a9d	       396	interface.c	ELSE_1	FUNCTION_10	IF_12	WHILE_1	IF_14	CALL_24
0x4000a9d	            0x85c0	                           test eax, eax	       396	interface.c	ELSE_1	FUNCTION_10	IF_12	WHILE_1	IF_14	CALL_24
0x4000a9f	     0xf84b8000000	                            je 0x4000b5d	       396	interface.c	ELSE_1	FUNCTION_10	IF_12	WHILE_1	IF_14	CALL_24
0x4000aa5	      0xba03000000	                              mov edx, 3	       402	interface.c	FUNCTION_10	IF_12	WHILE_1	IF_15	CALL_27
0x4000aaa	    0x48c7c6000000	                              mov rsi, 0	       402	interface.c	FUNCTION_10	IF_12	WHILE_1	IF_15	CALL_27
0x4000ab1	          0x4c89e7	                            mov rdi, r12	       402	interface.c	FUNCTION_10	IF_12	WHILE_1	IF_15	CALL_27
0x4000ab4	      0xe800000000	                          call 0x4000ab9	       402	interface.c	FUNCTION_10	IF_12	WHILE_1	IF_15	CALL_27
0x4000ab9	            0x85c0	                           test eax, eax	       402	interface.c	FUNCTION_10	IF_12	WHILE_1	IF_15	CALL_27
0x4000abb	     0xf84d0000000	                            je 0x4000b91	       402	interface.c	FUNCTION_10	IF_12	WHILE_1	IF_15	CALL_27
0x4000ac1	      0xba03000000	                              mov edx, 3	       408	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_2	IF_16	CALL_30
0x4000ac6	    0x48c7c6000000	                              mov rsi, 0	       408	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_2	IF_16	CALL_30
0x4000acd	          0x4c89e7	                            mov rdi, r12	       408	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_2	IF_16	CALL_30
0x4000ad0	      0xe800000000	                          call 0x4000ad5	       408	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_2	IF_16	CALL_30
0x4000ad5	            0x85c0	                           test eax, eax	       408	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_2	IF_16	CALL_30
0x4000ad7	     0xf84e8000000	                            je 0x4000bc5	       408	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_2	IF_16	CALL_30
0x4000add	      0xba03000000	                              mov edx, 3	       414	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_3	IF_17	CALL_33
0x4000ae2	    0x48c7c6000000	                              mov rsi, 0	       414	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_3	IF_17	CALL_33
0x4000ae9	          0x4c89e7	                            mov rdi, r12	       414	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_3	IF_17	CALL_33
0x4000aec	      0xe800000000	                          call 0x4000af1	       414	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_3	IF_17	CALL_33
0x4000af1	            0x85c0	                           test eax, eax	       414	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_3	IF_17	CALL_33
0x4000af3	     0xf84f7000000	                            je 0x4000bf0	       414	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_3	IF_17	CALL_33
0x4000af9	      0xba03000000	                              mov edx, 3	       420	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_4	IF_18	CALL_36
0x4000afe	    0x48c7c6000000	                              mov rsi, 0	       420	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_4	IF_18	CALL_36
0x4000b05	          0x4c89e7	                            mov rdi, r12	       420	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_4	IF_18	CALL_36
0x4000b08	      0xe800000000	                          call 0x4000b0d	       420	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_4	IF_18	CALL_36
0x4000b0d	            0x85c0	                           test eax, eax	       420	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_4	IF_18	CALL_36
0x4000b0f	     0xf8533010000	                           jne 0x4000c48	       420	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_4	IF_18	CALL_36
0x4000b15	      0x498d7c2403	                      lea rdi, [r12 + 3]	       421	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_4	IF_18	CALL_37
0x4000b1a	      0x488d542408	                      lea rdx, [rsp + 8]	       421	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_4	IF_18	CALL_37
0x4000b1f	            0x31c9	                            xor ecx, ecx	       421	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_4	IF_18	CALL_37
0x4000b21	          0x4889e6	                            mov rsi, rsp	       421	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_4	IF_18	CALL_37
0x4000b24	      0xe827fdffff	  call sym.pnp_get_resource_value.isra.2	       421	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_4	IF_18	CALL_37
0x4000b29	      0x488b542408	                mov rdx, qword [rsp + 8]	       425	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_4	IF_18	CALL_38
0x4000b2e	        0x488b3424	                    mov rsi, qword [rsp]	       425	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_4	IF_18	CALL_38
0x4000b32	          0x4889ef	                            mov rdi, rbp	       425	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_4	IF_18	CALL_38
0x4000b35	          0x4989c4	                            mov r12, rax	       421	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_4	IF_18	CALL_37
0x4000b38	      0xe800000000	                          call 0x4000b3d	       425	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_4	IF_18	CALL_38
0x4000b3d	      0xe93cffffff	                           jmp 0x4000a7e	       425	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_4	IF_18	CALL_38
0x4000b42	    0x8b9548030000	           mov edx, dword [rbp + 0x348] 	       372	interface.c	ELSE_1	FUNCTION_10	IF_8	IF_9
0x4000b48	            0x85d2	                           test edx, edx	       372	interface.c	ELSE_1	FUNCTION_10	IF_8	IF_9
0x4000b4a	     0xf859efeffff	                           jne 0x40009ee	       372	interface.c	ELSE_1	FUNCTION_10	IF_8	IF_9
0x4000b50	          0x4889ef	                            mov rdi, rbp	       374	interface.c	ELSE_1	FUNCTION_10	IF_8	CALL_14
0x4000b53	      0xe800000000	                          call 0x4000b58	       374	interface.c	ELSE_1	FUNCTION_10	IF_8	CALL_14
0x4000b58	      0xe991feffff	                           jmp 0x40009ee	       375	interface.c	ELSE_1	FUNCTION_10	IF_8
0x4000b5d	      0x498d7c2402	                      lea rdi, [r12 + 2]	       397	interface.c	ELSE_1	FUNCTION_10	IF_12	WHILE_1	IF_14	CALL_25
0x4000b62	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	       397	interface.c	ELSE_1	FUNCTION_10	IF_12	WHILE_1	IF_14	CALL_25
0x4000b67	      0x488d542408	                      lea rdx, [rsp + 8]	       397	interface.c	ELSE_1	FUNCTION_10	IF_12	WHILE_1	IF_14	CALL_25
0x4000b6c	          0x4889e6	                            mov rsi, rsp	       397	interface.c	ELSE_1	FUNCTION_10	IF_12	WHILE_1	IF_14	CALL_25
0x4000b6f	      0xe8dcfcffff	  call sym.pnp_get_resource_value.isra.2	       397	interface.c	ELSE_1	FUNCTION_10	IF_12	WHILE_1	IF_14	CALL_25
0x4000b74	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	       401	interface.c	ELSE_1	FUNCTION_10	IF_12	WHILE_1	IF_14	CALL_26
0x4000b78	      0x488b542408	                mov rdx, qword [rsp + 8]	       401	interface.c	ELSE_1	FUNCTION_10	IF_12	WHILE_1	IF_14	CALL_26
0x4000b7d	          0x4889ef	                            mov rdi, rbp	       401	interface.c	ELSE_1	FUNCTION_10	IF_12	WHILE_1	IF_14	CALL_26
0x4000b80	        0x488b3424	                    mov rsi, qword [rsp]	       401	interface.c	ELSE_1	FUNCTION_10	IF_12	WHILE_1	IF_14	CALL_26
0x4000b84	          0x4989c4	                            mov r12, rax	       397	interface.c	ELSE_1	FUNCTION_10	IF_12	WHILE_1	IF_14	CALL_25
0x4000b87	      0xe800000000	                          call 0x4000b8c	       401	interface.c	ELSE_1	FUNCTION_10	IF_12	WHILE_1	IF_14	CALL_26
0x4000b8c	      0xe9edfeffff	                           jmp 0x4000a7e	       401	interface.c	ELSE_1	FUNCTION_10	IF_12	WHILE_1	IF_14	CALL_26
0x4000b91	      0x498d7c2403	                      lea rdi, [r12 + 3]	       403	interface.c	FUNCTION_10	IF_12	WHILE_1	IF_15	CALL_28
0x4000b96	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	       403	interface.c	FUNCTION_10	IF_12	WHILE_1	IF_15	CALL_28
0x4000b9b	      0x488d542408	                      lea rdx, [rsp + 8]	       403	interface.c	FUNCTION_10	IF_12	WHILE_1	IF_15	CALL_28
0x4000ba0	          0x4889e6	                            mov rsi, rsp	       403	interface.c	FUNCTION_10	IF_12	WHILE_1	IF_15	CALL_28
0x4000ba3	      0xe8a8fcffff	  call sym.pnp_get_resource_value.isra.2	       403	interface.c	FUNCTION_10	IF_12	WHILE_1	IF_15	CALL_28
0x4000ba8	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	       407	interface.c	FUNCTION_10	IF_12	WHILE_1	IF_15	CALL_29
0x4000bac	      0x488b542408	                mov rdx, qword [rsp + 8]	       407	interface.c	FUNCTION_10	IF_12	WHILE_1	IF_15	CALL_29
0x4000bb1	          0x4889ef	                            mov rdi, rbp	       407	interface.c	FUNCTION_10	IF_12	WHILE_1	IF_15	CALL_29
0x4000bb4	        0x488b3424	                    mov rsi, qword [rsp]	       407	interface.c	FUNCTION_10	IF_12	WHILE_1	IF_15	CALL_29
0x4000bb8	          0x4989c4	                            mov r12, rax	       403	interface.c	FUNCTION_10	IF_12	WHILE_1	IF_15	CALL_28
0x4000bbb	      0xe800000000	                          call 0x4000bc0	       407	interface.c	FUNCTION_10	IF_12	WHILE_1	IF_15	CALL_29
0x4000bc0	      0xe9b9feffff	                           jmp 0x4000a7e	       407	interface.c	FUNCTION_10	IF_12	WHILE_1	IF_15	CALL_29
0x4000bc5	      0x498d7c2403	                      lea rdi, [r12 + 3]	       409	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_2	IF_16	CALL_31
0x4000bca	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	       409	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_2	IF_16	CALL_31
0x4000bcf	            0x31d2	                            xor edx, edx	       409	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_2	IF_16	CALL_31
0x4000bd1	          0x4889e6	                            mov rsi, rsp	       409	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_2	IF_16	CALL_31
0x4000bd4	      0xe877fcffff	  call sym.pnp_get_resource_value.isra.2	       409	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_2	IF_16	CALL_31
0x4000bd9	        0x8b542410	            mov edx, dword [rsp + 0x10] 	       413	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_2	IF_16	CALL_32
0x4000bdd	          0x8b3424	                    mov esi, dword [rsp]	       413	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_2	IF_16	CALL_32
0x4000be0	          0x4889ef	                            mov rdi, rbp	       413	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_2	IF_16	CALL_32
0x4000be3	          0x4989c4	                            mov r12, rax	       409	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_2	IF_16	CALL_31
0x4000be6	      0xe800000000	                          call 0x4000beb	       413	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_2	IF_16	CALL_32
0x4000beb	      0xe98efeffff	                           jmp 0x4000a7e	       413	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_2	IF_16	CALL_32
0x4000bf0	      0x498d7c2403	                      lea rdi, [r12 + 3]	       415	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_3	IF_17	CALL_34
0x4000bf5	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	       415	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_3	IF_17	CALL_34
0x4000bfa	            0x31d2	                            xor edx, edx	       415	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_3	IF_17	CALL_34
0x4000bfc	          0x4889e6	                            mov rsi, rsp	       415	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_3	IF_17	CALL_34
0x4000bff	      0xe84cfcffff	  call sym.pnp_get_resource_value.isra.2	       415	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_3	IF_17	CALL_34
0x4000c04	        0x8b542410	            mov edx, dword [rsp + 0x10] 	       419	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_3	IF_17	CALL_35
0x4000c08	          0x8b3424	                    mov esi, dword [rsp]	       419	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_3	IF_17	CALL_35
0x4000c0b	          0x4889ef	                            mov rdi, rbp	       419	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_3	IF_17	CALL_35
0x4000c0e	          0x4989c4	                            mov r12, rax	       415	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_3	IF_17	CALL_34
0x4000c11	      0xe800000000	                          call 0x4000c16	       419	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_3	IF_17	CALL_35
0x4000c16	      0xe963feffff	                           jmp 0x4000a7e	       419	interface.c	FUNCTION_10	IF_12	WHILE_1	ELSE_1	ELSE_3	IF_17	CALL_35
0x4000c1b	    0x48c7c7000000	                              mov rdi, 0	       378	interface.c	ELSE_1	FUNCTION_10	IF_10	CALL_16
0x4000c22	      0xe800000000	                          call 0x4000c27	       378	interface.c	ELSE_1	FUNCTION_10	IF_10	CALL_16
0x4000c27	    0x488b85200300	           mov rax, qword [rbp + 0x320] 	       379	interface.c	ELSE_1	FUNCTION_10	IF_10	IF_11	CALL_17
0x4000c2e	        0x488b4018	            mov rax, qword [rax + 0x18] 	       379	interface.c	ELSE_1	FUNCTION_10	IF_10	IF_11	CALL_17
0x4000c32	          0x4885c0	                           test rax, rax	       379	interface.c	ELSE_1	FUNCTION_10	IF_10	IF_11	CALL_17
0x4000c35	            0x7411	                            je 0x4000c48	       379	interface.c	ELSE_1	FUNCTION_10	IF_10	IF_11	CALL_17
0x4000c37	    0xf6854c030000	              test byte [rbp + 0x34c], 1	       379	interface.c	ELSE_1	FUNCTION_10	IF_10	IF_11	CALL_17
0x4000c3e	            0x7408	                            je 0x4000c48	       379	interface.c	ELSE_1	FUNCTION_10	IF_10	IF_11	CALL_17
0x4000c40	          0x4889ef	                            mov rdi, rbp	       380	interface.c	ELSE_1	FUNCTION_10	IF_10	CALL_18
0x4000c43	      0xe800000000	                          call 0x4000c48	       380	interface.c	ELSE_1	FUNCTION_10	IF_10	CALL_18
0x4000c48	    0x48c7c7000000	                              mov rdi, 0	       429	interface.c	FUNCTION_10	IF_12	ELSE_1	CALL_39
0x4000c4f	      0xe800000000	                          call 0x4000c54	       429	interface.c	FUNCTION_10	IF_12	ELSE_1	CALL_39
0x4000c54	      0xe995fdffff	                           jmp 0x40009ee	       430	interface.c	FUNCTION_10	IF_12	ELSE_1
0x4000c59	      0xe800000000	                          call 0x4000c5e	       437	interface.c	FUNCTION_10	ELSE_1
0x4000c5e	            0x4898	                                    cdqe	       437	interface.c	FUNCTION_10	ELSE_1
0x4000c60	      0xe9d2fcffff	                           jmp 0x4000937	       435	interface.c	FUNCTION_10	ELSE_1	IF_19
pnp_printf	CALL,3:SWITCH,0:IF,2:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	51
0x4000090	              0x55	                                push rbp	        37	interface.c	FUNCTION_1
0x4000091	          0x4889e5	                            mov rbp, rsp	        37	interface.c	FUNCTION_1
0x4000094	            0x4154	                                push r12	        37	interface.c	FUNCTION_1
0x4000096	            0x4152	                                push r10	        37	interface.c	FUNCTION_1
0x4000098	              0x53	                                push rbx	        37	interface.c	FUNCTION_1
0x4000099	          0x4531e4	                          xor r12d, r12d	        42	interface.c	FUNCTION_1	IF_1
0x400009c	        0x4c8d5510	                   lea r10, [rbp + 0x10]	        37	interface.c	FUNCTION_1
0x40000a0	        0x4883ec50	                           sub rsp, 0x50	        37	interface.c	FUNCTION_1
0x40000a4	        0x488955c8	             mov qword [rbp - 0x38], rdx	        37	interface.c	FUNCTION_1
0x40000a8	        0x48894dd0	             mov qword [rbp - 0x30], rcx	        37	interface.c	FUNCTION_1
0x40000ac	        0x4c8945d8	              mov qword [rbp - 0x28], r8	        37	interface.c	FUNCTION_1
0x40000b0	        0x4c894de0	              mov qword [rbp - 0x20], r9	        37	interface.c	FUNCTION_1
0x40000b4	    0x65488b042528	                mov rax, qword gs:[0x28]	        37	interface.c	FUNCTION_1
0x40000bd	        0x488945b0	             mov qword [rbp - 0x50], rax	        37	interface.c	FUNCTION_1
0x40000c1	            0x31c0	                            xor eax, eax	        37	interface.c	FUNCTION_1
0x40000c3	      0x48837f2000	               cmp qword [rdi + 0x20], 0	        41	interface.c	FUNCTION_1	IF_1
0x40000c8	            0x741d	                            je 0x40000e7	        41	interface.c	FUNCTION_1	IF_1
0x40000ca	        0x488b7db0	             mov rdi, qword [rbp - 0x50]	        53	interface.c	FUNCTION_1
0x40000ce	    0x6548333c2528	                xor rdi, qword gs:[0x28]	        53	interface.c	FUNCTION_1
0x40000d7	          0x4489e0	                           mov eax, r12d	        53	interface.c	FUNCTION_1
0x40000da	            0x7562	                           jne 0x400013e	        53	interface.c	FUNCTION_1
0x40000dc	        0x4883c450	                           add rsp, 0x50	        53	interface.c	FUNCTION_1
0x40000e0	              0x5b	                                 pop rbx	        53	interface.c	FUNCTION_1
0x40000e1	            0x415a	                                 pop r10	        53	interface.c	FUNCTION_1
0x40000e3	            0x415c	                                 pop r12	        53	interface.c	FUNCTION_1
0x40000e5	              0x5d	                                 pop rbp	        53	interface.c	FUNCTION_1
0x40000e6	              0xc3	                                     ret	        53	interface.c	FUNCTION_1
0x40000e7	        0x488d45b8	                   lea rax, [rbp - 0x48]	        43	interface.c	FUNCTION_1	CALL_1
0x40000eb	          0x4889fb	                            mov rbx, rdi	        43	interface.c	FUNCTION_1	CALL_1
0x40000ee	        0x488d4d98	                   lea rcx, [rbp - 0x68]	        44	interface.c	FUNCTION_1	CALL_2
0x40000f2	          0x4889f2	                            mov rdx, rsi	        44	interface.c	FUNCTION_1	CALL_2
0x40000f5	    0xc74598100000	           mov dword [rbp - 0x68], 0x10 	        43	interface.c	FUNCTION_1	CALL_1
0x40000fc	        0x4c8955a0	             mov qword [rbp - 0x60], r10	        43	interface.c	FUNCTION_1	CALL_1
0x4000100	        0x488945a8	             mov qword [rbp - 0x58], rax	        43	interface.c	FUNCTION_1	CALL_1
0x4000104	        0x488b4718	            mov rax, qword [rdi + 0x18] 	        44	interface.c	FUNCTION_1	CALL_2
0x4000108	        0x482b4710	             sub rax, qword [rdi + 0x10]	        44	interface.c	FUNCTION_1	CALL_2
0x400010c	        0x488b7f08	                mov rdi, qword [rdi + 8]	        44	interface.c	FUNCTION_1	CALL_2
0x4000110	          0x4889c6	                            mov rsi, rax	        44	interface.c	FUNCTION_1	CALL_2
0x4000113	      0xe800000000	                          call 0x4000118	        44	interface.c	FUNCTION_1	CALL_2
0x4000118	          0x4863c8	                         movsxd rcx, eax	        46	interface.c	FUNCTION_1	IF_2
0x400011b	          0x4889ca	                            mov rdx, rcx	        46	interface.c	FUNCTION_1	IF_2
0x400011e	        0x48035310	             add rdx, qword [rbx + 0x10]	        46	interface.c	FUNCTION_1	IF_2
0x4000122	        0x483b5318	            cmp rdx, qword [rbx + 0x18] 	        46	interface.c	FUNCTION_1	IF_2
0x4000126	            0x730d	                           jae 0x4000135	        46	interface.c	FUNCTION_1	IF_2
0x4000128	        0x48014b08	                add qword [rbx + 8], rcx	        50	interface.c	FUNCTION_1
0x400012c	        0x48895310	             mov qword [rbx + 0x10], rdx	        51	interface.c	FUNCTION_1
0x4000130	          0x4189c4	                           mov r12d, eax	        52	interface.c	FUNCTION_1
0x4000133	            0xeb95	                           jmp 0x40000ca	        52	interface.c	FUNCTION_1
0x4000135	    0xc74320010000	               mov dword [rbx + 0x20], 1	        47	interface.c	FUNCTION_1	IF_2
0x400013c	            0xeb8c	                           jmp 0x40000ca	        48	interface.c	FUNCTION_1	IF_2
0x400013e	      0xe800000000	                          call 0x4000143	        53	interface.c	FUNCTION_1
