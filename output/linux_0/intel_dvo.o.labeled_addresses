intel_enable_dvo	WHILE,0:CALL,7:ELSE,0:DO,0:FOR,0:functions,0:IF,0:SWITCH,0	46
0x40001c0	            0x4157	                                push r15	       196	intel_dvo.c	FUNCTION_7
0x40001c2	            0x4156	                                push r14	       196	intel_dvo.c	FUNCTION_7
0x40001c4	      0xba01000000	                              mov edx, 1	       200	intel_dvo.c	FUNCTION_7	CALL_3
0x40001c9	            0x4155	                                push r13	       196	intel_dvo.c	FUNCTION_7
0x40001cb	            0x4154	                                push r12	       196	intel_dvo.c	FUNCTION_7
0x40001cd	          0x4989f4	                            mov r12, rsi	       196	intel_dvo.c	FUNCTION_7
0x40001d0	              0x55	                                push rbp	       196	intel_dvo.c	FUNCTION_7
0x40001d1	              0x53	                                push rbx	       196	intel_dvo.c	FUNCTION_7
0x40001d2	          0x4889fd	                            mov rbp, rdi	       196	intel_dvo.c	FUNCTION_7
0x40001d5	          0x488b1f	                    mov rbx, qword [rdi]	       197	intel_dvo.c	FUNCTION_7	CALL_1
0x40001d8	    0x448baf0c0100	          mov r13d, dword [rdi + 0x10c] 	       199	intel_dvo.c	FUNCTION_7
0x40001df	    0x4c8dbd000100	                  lea r15, [rbp + 0x100]	       202	intel_dvo.c	FUNCTION_7	CALL_4
0x40001e6	          0x4489ee	                           mov esi, r13d	       200	intel_dvo.c	FUNCTION_7	CALL_3
0x40001e9	          0x4889df	                            mov rdi, rbx	       200	intel_dvo.c	FUNCTION_7	CALL_3
0x40001ec	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       200	intel_dvo.c	FUNCTION_7	CALL_3
0x40001f3	      0xe800000000	                          call 0x40001f8	       200	intel_dvo.c	FUNCTION_7	CALL_3
0x40001f8	          0x4189c6	                           mov r14d, eax	       200	intel_dvo.c	FUNCTION_7	CALL_3
0x40001fb	    0x488b85200100	           mov rax, qword [rbp + 0x120] 	       202	intel_dvo.c	FUNCTION_7	CALL_4
0x4000202	      0x498d542418	                   lea rdx, [r12 + 0x18]	       202	intel_dvo.c	FUNCTION_7	CALL_4
0x4000207	    0x498db424f800	                   lea rsi, [r12 + 0xf8]	       202	intel_dvo.c	FUNCTION_7	CALL_4
0x400020f	          0x4c89ff	                            mov rdi, r15	       202	intel_dvo.c	FUNCTION_7	CALL_4
0x4000212	        0x488b4030	            mov rax, qword [rax + 0x30] 	       202	intel_dvo.c	FUNCTION_7	CALL_4
0x4000216	      0xe800000000	                          call 0x400021b	       202	intel_dvo.c	FUNCTION_7	CALL_4
0x400021b	          0x4489f2	                           mov edx, r14d	       206	intel_dvo.c	FUNCTION_7	CALL_5
0x400021e	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       206	intel_dvo.c	FUNCTION_7	CALL_5
0x4000225	          0x4489ee	                           mov esi, r13d	       206	intel_dvo.c	FUNCTION_7	CALL_5
0x4000228	          0x4889df	                            mov rdi, rbx	       206	intel_dvo.c	FUNCTION_7	CALL_5
0x400022b	    0x81ca00000080	                      or edx, 0x80000000	       206	intel_dvo.c	FUNCTION_7	CALL_5
0x4000231	      0xb901000000	                              mov ecx, 1	       206	intel_dvo.c	FUNCTION_7	CALL_5
0x4000236	      0xe800000000	                          call 0x400023b	       206	intel_dvo.c	FUNCTION_7	CALL_5
0x400023b	          0x4489ee	                           mov esi, r13d	       207	intel_dvo.c	FUNCTION_7	CALL_6
0x400023e	          0x4889df	                            mov rdi, rbx	       207	intel_dvo.c	FUNCTION_7	CALL_6
0x4000241	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       207	intel_dvo.c	FUNCTION_7	CALL_6
0x4000248	      0xba01000000	                              mov edx, 1	       207	intel_dvo.c	FUNCTION_7	CALL_6
0x400024d	      0xe800000000	                          call 0x4000252	       207	intel_dvo.c	FUNCTION_7	CALL_6
0x4000252	    0x488b85200100	           mov rax, qword [rbp + 0x120] 	       209	intel_dvo.c	FUNCTION_7	CALL_7
0x4000259	          0x4c89ff	                            mov rdi, r15	       209	intel_dvo.c	FUNCTION_7	CALL_7
0x400025c	      0xbe01000000	                              mov esi, 1	       209	intel_dvo.c	FUNCTION_7	CALL_7
0x4000261	              0x5b	                                 pop rbx	       210	intel_dvo.c	FUNCTION_7
0x4000262	              0x5d	                                 pop rbp	       210	intel_dvo.c	FUNCTION_7
0x4000263	            0x415c	                                 pop r12	       210	intel_dvo.c	FUNCTION_7
0x4000265	            0x415d	                                 pop r13	       210	intel_dvo.c	FUNCTION_7
0x4000267	            0x415e	                                 pop r14	       210	intel_dvo.c	FUNCTION_7
0x4000269	            0x415f	                                 pop r15	       210	intel_dvo.c	FUNCTION_7
0x400026b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       209	intel_dvo.c	FUNCTION_7	CALL_7
0x400026f	      0xe900000000	                           jmp 0x4000274	       209	intel_dvo.c	FUNCTION_7	CALL_7
intel_dvo_enc_destroy	WHILE,0:CALL,4:ELSE,0:DO,0:FOR,0:functions,0:IF,1:SWITCH,0	11
0x4000480	              0x53	                                push rbx	       358	intel_dvo.c	FUNCTION_14
0x4000481	    0x488b87200100	           mov rax, qword [rdi + 0x120] 	       361	intel_dvo.c	FUNCTION_14	IF_1
0x4000488	          0x4889fb	                            mov rbx, rdi	       358	intel_dvo.c	FUNCTION_14
0x400048b	        0x488b4050	            mov rax, qword [rax + 0x50] 	       361	intel_dvo.c	FUNCTION_14	IF_1
0x400048f	          0x4885c0	                           test rax, rax	       361	intel_dvo.c	FUNCTION_14	IF_1
0x4000492	            0x740c	                            je 0x40004a0	       361	intel_dvo.c	FUNCTION_14	IF_1
0x4000494	    0x488dbf000100	                  lea rdi, [rdi + 0x100]	       362	intel_dvo.c	FUNCTION_14	CALL_3
0x400049b	      0xe800000000	                          call 0x40004a0	       362	intel_dvo.c	FUNCTION_14	CALL_3
0x40004a0	          0x4889df	                            mov rdi, rbx	       364	intel_dvo.c	FUNCTION_14	CALL_4
0x40004a3	              0x5b	                                 pop rbx	       365	intel_dvo.c	FUNCTION_14
0x40004a4	      0xe900000000	                           jmp 0x40004a9	       364	intel_dvo.c	FUNCTION_14	CALL_4
intel_dvo_compute_config	WHILE,0:CALL,2:ELSE,0:DO,0:FOR,0:functions,0:IF,1:SWITCH,0	8
0x40004b0	    0x488b87380100	           mov rax, qword [rdi + 0x138] 	       244	intel_dvo.c	FUNCTION_9
0x40004b7	        0x4883c618	                           add rsi, 0x18	       246	intel_dvo.c	FUNCTION_9
0x40004bb	    0x488bb8380400	           mov rdi, qword [rax + 0x438] 	       244	intel_dvo.c	FUNCTION_9
0x40004c2	          0x4885ff	                           test rdi, rdi	       254	intel_dvo.c	FUNCTION_9	IF_1
0x40004c5	            0x7405	                            je 0x40004cc	       254	intel_dvo.c	FUNCTION_9	IF_1
0x40004c7	      0xe800000000	                          call 0x40004cc	       255	intel_dvo.c	FUNCTION_9	CALL_2
0x40004cc	      0xb801000000	                              mov eax, 1	       258	intel_dvo.c	FUNCTION_9
0x40004d1	              0xc3	                                     ret	       258	intel_dvo.c	FUNCTION_9
intel_dvo_get_config	WHILE,0:CALL,4:ELSE,2:DO,0:FOR,0:functions,0:IF,2:SWITCH,0	23
0x40000d0	              0x53	                                push rbx	       157	intel_dvo.c	FUNCTION_5
0x40000d1	          0x488b07	                    mov rax, qword [rdi]	       158	intel_dvo.c	FUNCTION_5	CALL_1
0x40000d4	          0x4889f3	                            mov rbx, rsi	       157	intel_dvo.c	FUNCTION_5
0x40000d7	    0x838e44020000	               or dword [rsi + 0x244], 4	       162	intel_dvo.c	FUNCTION_5	CALL_3
0x40000de	      0xba01000000	                              mov edx, 1	       164	intel_dvo.c	FUNCTION_5	CALL_4
0x40000e3	    0x8bb70c010000	           mov esi, dword [rdi + 0x10c] 	       164	intel_dvo.c	FUNCTION_5	CALL_4
0x40000e9	    0x488b88f80700	           mov rcx, qword [rax + 0x7f8] 	       164	intel_dvo.c	FUNCTION_5	CALL_4
0x40000f0	          0x4889c7	                            mov rdi, rax	       164	intel_dvo.c	FUNCTION_5	CALL_4
0x40000f3	      0xe800000000	                          call 0x40000f8	       164	intel_dvo.c	FUNCTION_5	CALL_4
0x40000f8	            0x89c2	                            mov edx, eax	       168	intel_dvo.c	FUNCTION_5	ELSE_1
0x40000fa	          0xc1e21c	                           shl edx, 0x1c	       168	intel_dvo.c	FUNCTION_5	ELSE_1
0x40000fd	          0xc1fa1f	                           sar edx, 0x1f	       168	intel_dvo.c	FUNCTION_5	ELSE_1
0x4000100	          0x83c202	                              add edx, 2	       168	intel_dvo.c	FUNCTION_5	ELSE_1
0x4000103	            0x89d1	                            mov ecx, edx	       170	intel_dvo.c	FUNCTION_5	IF_2
0x4000105	          0x83ca08	                               or edx, 8	       170	intel_dvo.c	FUNCTION_5	IF_2
0x4000108	          0x83c904	                               or ecx, 4	       170	intel_dvo.c	FUNCTION_5	IF_2
0x400010b	            0xa810	                           test al, 0x10	       170	intel_dvo.c	FUNCTION_5	IF_2
0x400010d	    0x8b830c030000	           mov eax, dword [rbx + 0x30c] 	       176	intel_dvo.c	FUNCTION_5	ELSE_2
0x4000113	           0xf45d1	                         cmovne edx, ecx	       170	intel_dvo.c	FUNCTION_5	IF_2
0x4000116	     0x9939c000000	              or dword [rbx + 0x9c], edx	       174	intel_dvo.c	FUNCTION_5	ELSE_2
0x400011c	    0x8983a8000000	             mov dword [rbx + 0xa8], eax	       176	intel_dvo.c	FUNCTION_5	ELSE_2
0x4000122	              0x5b	                                 pop rbx	       177	intel_dvo.c	FUNCTION_5	ELSE_2
0x4000123	              0xc3	                                     ret	       177	intel_dvo.c	FUNCTION_5	ELSE_2
intel_dvo_destroy	WHILE,0:CALL,4:ELSE,0:DO,0:FOR,0:functions,0:IF,0:SWITCH,0	8
0x4000420	              0x53	                                push rbx	       336	intel_dvo.c	FUNCTION_13
0x4000421	          0x4889fb	                            mov rbx, rdi	       336	intel_dvo.c	FUNCTION_13
0x4000424	      0xe800000000	                          call 0x4000429	       337	intel_dvo.c	FUNCTION_13	CALL_1
0x4000429	    0x488dbb380400	                  lea rdi, [rbx + 0x438]	       338	intel_dvo.c	FUNCTION_13	CALL_3
0x4000430	      0xe800000000	                          call 0x4000435	       338	intel_dvo.c	FUNCTION_13	CALL_3
0x4000435	          0x4889df	                            mov rdi, rbx	       339	intel_dvo.c	FUNCTION_13	CALL_4
0x4000438	              0x5b	                                 pop rbx	       340	intel_dvo.c	FUNCTION_13
0x4000439	      0xe900000000	                           jmp 0x400043e	       339	intel_dvo.c	FUNCTION_13	CALL_4
intel_dvo_get_hw_state	WHILE,0:CALL,4:ELSE,0:DO,0:FOR,0:functions,0:IF,1:SWITCH,0	20
0x4000090	              0x53	                                push rbx	       139	intel_dvo.c	FUNCTION_4
0x4000091	          0x488b07	                    mov rax, qword [rdi]	       140	intel_dvo.c	FUNCTION_4
0x4000094	      0xba01000000	                              mov edx, 1	       145	intel_dvo.c	FUNCTION_4	CALL_3
0x4000099	          0x4889f3	                            mov rbx, rsi	       139	intel_dvo.c	FUNCTION_4
0x400009c	    0x8bb70c010000	           mov esi, dword [rdi + 0x10c] 	       145	intel_dvo.c	FUNCTION_4	CALL_3
0x40000a2	    0x488b88f80700	           mov rcx, qword [rax + 0x7f8] 	       145	intel_dvo.c	FUNCTION_4	CALL_3
0x40000a9	          0x4889c7	                            mov rdi, rax	       145	intel_dvo.c	FUNCTION_4	CALL_3
0x40000ac	      0xe800000000	                          call 0x40000b1	       145	intel_dvo.c	FUNCTION_4	CALL_3
0x40000b1	            0x89c2	                            mov edx, eax	       145	intel_dvo.c	FUNCTION_4	CALL_3
0x40000b3	            0x31c0	                            xor eax, eax	       145	intel_dvo.c	FUNCTION_4	CALL_3
0x40000b5	            0x85d2	                           test edx, edx	       147	intel_dvo.c	FUNCTION_4	IF_1
0x40000b7	            0x7802	                            js 0x40000bb	       147	intel_dvo.c	FUNCTION_4	IF_1
0x40000b9	              0x5b	                                 pop rbx	       153	intel_dvo.c	FUNCTION_4
0x40000ba	              0xc3	                                     ret	       153	intel_dvo.c	FUNCTION_4
0x40000bb	    0x81e200000040	                     and edx, 0x40000000	       150	intel_dvo.c	FUNCTION_4	CALL_4
0x40000c1	      0xb801000000	                              mov eax, 1	       152	intel_dvo.c	FUNCTION_4
0x40000c6	          0xc1ea1e	                           shr edx, 0x1e	       150	intel_dvo.c	FUNCTION_4	CALL_4
0x40000c9	            0x8913	                    mov dword [rbx], edx	       150	intel_dvo.c	FUNCTION_4	CALL_4
0x40000cb	              0x5b	                                 pop rbx	       153	intel_dvo.c	FUNCTION_4
0x40000cc	              0xc3	                                     ret	       153	intel_dvo.c	FUNCTION_4
intel_dvo_detect	WHILE,0:CALL,3:ELSE,0:DO,0:FOR,0:functions,0:IF,0:SWITCH,0	12
0x4000440	              0x53	                                push rbx	       299	intel_dvo.c	FUNCTION_11
0x4000441	    0x488b9f200400	           mov rbx, qword [rdi + 0x420] 	      1236	intel_drv.h	FUNCTION_27	CALL_1
0x4000448	    0x48c7c6000000	                              mov rsi, 0	       301	intel_dvo.c	FUNCTION_11	CALL_2
0x400044f	        0x488b4f48	            mov rcx, qword [rdi + 0x48] 	       301	intel_dvo.c	FUNCTION_11	CALL_2
0x4000453	          0x8b5728	            mov edx, dword [rdi + 0x28] 	       301	intel_dvo.c	FUNCTION_11	CALL_2
0x4000456	      0xbf04000000	                              mov edi, 4	       301	intel_dvo.c	FUNCTION_11	CALL_2
0x400045b	      0xe800000000	                          call 0x4000460	       301	intel_dvo.c	FUNCTION_11	CALL_2
0x4000460	    0x488b83200100	           mov rax, qword [rbx + 0x120] 	       303	intel_dvo.c	FUNCTION_11	CALL_3
0x4000467	    0x488dbb000100	                  lea rdi, [rbx + 0x100]	       303	intel_dvo.c	FUNCTION_11	CALL_3
0x400046e	              0x5b	                                 pop rbx	       304	intel_dvo.c	FUNCTION_11
0x400046f	        0x488b4038	            mov rax, qword [rax + 0x38] 	       303	intel_dvo.c	FUNCTION_11	CALL_3
0x4000473	      0xe900000000	                           jmp 0x4000478	       303	intel_dvo.c	FUNCTION_11	CALL_3
intel_dvo_connector_get_hw_state	WHILE,0:CALL,4:ELSE,0:DO,0:FOR,0:functions,0:IF,1:SWITCH,0	18
0x4000040	              0x53	                                push rbx	       123	intel_dvo.c	FUNCTION_3
0x4000041	          0x488b07	                    mov rax, qword [rdi]	       124	intel_dvo.c	FUNCTION_3
0x4000044	      0xba01000000	                              mov edx, 1	       129	intel_dvo.c	FUNCTION_3	CALL_3
0x4000049	    0x488b9f200400	           mov rbx, qword [rdi + 0x420] 	      1236	intel_drv.h	FUNCTION_27	CALL_1
0x4000050	    0x488b88f80700	           mov rcx, qword [rax + 0x7f8] 	       129	intel_dvo.c	FUNCTION_3	CALL_3
0x4000057	          0x4889c7	                            mov rdi, rax	       129	intel_dvo.c	FUNCTION_3	CALL_3
0x400005a	    0x8bb30c010000	           mov esi, dword [rbx + 0x10c] 	       129	intel_dvo.c	FUNCTION_3	CALL_3
0x4000060	      0xe800000000	                          call 0x4000065	       129	intel_dvo.c	FUNCTION_3	CALL_3
0x4000065	            0x85c0	                           test eax, eax	       131	intel_dvo.c	FUNCTION_3	IF_1
0x4000067	            0x7804	                            js 0x400006d	       131	intel_dvo.c	FUNCTION_3	IF_1
0x4000069	            0x31c0	                            xor eax, eax	       135	intel_dvo.c	FUNCTION_3
0x400006b	              0x5b	                                 pop rbx	       135	intel_dvo.c	FUNCTION_3
0x400006c	              0xc3	                                     ret	       135	intel_dvo.c	FUNCTION_3
0x400006d	    0x488b83200100	           mov rax, qword [rbx + 0x120] 	       134	intel_dvo.c	FUNCTION_3	CALL_4
0x4000074	    0x488dbb000100	                  lea rdi, [rbx + 0x100]	       134	intel_dvo.c	FUNCTION_3	CALL_4
0x400007b	              0x5b	                                 pop rbx	       135	intel_dvo.c	FUNCTION_3
0x400007c	        0x488b4040	            mov rax, qword [rax + 0x40] 	       134	intel_dvo.c	FUNCTION_3	CALL_4
0x4000080	      0xe900000000	                           jmp 0x4000085	       134	intel_dvo.c	FUNCTION_3	CALL_4
intel_dvo_mode_valid	WHILE,0:CALL,4:ELSE,0:DO,0:FOR,0:functions,0:IF,4:SWITCH,0	22
0x4000280	    0x488b97380400	           mov rdx, qword [rdi + 0x438] 	       217	intel_dvo.c	FUNCTION_8
0x4000287	          0x8b4e58	            mov ecx, dword [rsi + 0x58] 	       220	intel_dvo.c	FUNCTION_8
0x400028a	          0x4885d2	                           test rdx, rdx	       224	intel_dvo.c	FUNCTION_8	IF_1
0x400028d	            0x741a	                            je 0x40002a9	       224	intel_dvo.c	FUNCTION_8	IF_1
0x400028f	          0x8b4a5c	            mov ecx, dword [rdx + 0x5c] 	       225	intel_dvo.c	FUNCTION_8	IF_1	IF_2
0x4000292	          0x394e5c	            cmp dword [rsi + 0x5c], ecx 	       225	intel_dvo.c	FUNCTION_8	IF_1	IF_2
0x4000295	      0xb81d000000	                           mov eax, 0x1d	       226	intel_dvo.c	FUNCTION_8	IF_1	IF_2
0x400029a	            0x7e02	                           jle 0x400029e	       225	intel_dvo.c	FUNCTION_8	IF_1	IF_2
0x400029c	            0xf3c3	                                     ret	       237	intel_dvo.c	FUNCTION_8
0x400029e	          0x8b4a70	            mov ecx, dword [rdx + 0x70] 	       227	intel_dvo.c	FUNCTION_8	IF_1	IF_3
0x40002a1	          0x394e70	            cmp dword [rsi + 0x70], ecx 	       227	intel_dvo.c	FUNCTION_8	IF_1	IF_3
0x40002a4	            0x7ff6	                            jg 0x400029c	       227	intel_dvo.c	FUNCTION_8	IF_1	IF_3
0x40002a6	          0x8b4a58	            mov ecx, dword [rdx + 0x58] 	       230	intel_dvo.c	FUNCTION_8	IF_1
0x40002a9	          0x488b17	                    mov rdx, qword [rdi]	       219	intel_dvo.c	FUNCTION_8	CALL_3
0x40002ac	      0xb80f000000	                            mov eax, 0xf	       234	intel_dvo.c	FUNCTION_8	IF_4
0x40002b1	    0x3b8ad8540000	          cmp ecx, dword [rdx + 0x54d8] 	       233	intel_dvo.c	FUNCTION_8	IF_4
0x40002b7	            0x7fe3	                            jg 0x400029c	       233	intel_dvo.c	FUNCTION_8	IF_4
0x40002b9	    0x488b87200400	           mov rax, qword [rdi + 0x420] 	      1236	intel_drv.h	FUNCTION_27	CALL_1
0x40002c0	    0x488db8000100	                  lea rdi, [rax + 0x100]	       236	intel_dvo.c	FUNCTION_8	CALL_4
0x40002c7	    0x488b80200100	           mov rax, qword [rax + 0x120] 	       236	intel_dvo.c	FUNCTION_8	CALL_4
0x40002ce	        0x488b4018	            mov rax, qword [rax + 0x18] 	       236	intel_dvo.c	FUNCTION_8	CALL_4
0x40002d2	      0xe900000000	                           jmp 0x40002d7	       236	intel_dvo.c	FUNCTION_8	CALL_4
intel_dvo_pre_enable	WHILE,0:CALL,6:ELSE,0:DO,0:FOR,0:functions,0:IF,3:SWITCH,0	54
0x40002e0	            0x4157	                                push r15	       263	intel_dvo.c	FUNCTION_10
0x40002e2	            0x4156	                                push r14	       263	intel_dvo.c	FUNCTION_10
0x40002e4	          0x4989f7	                            mov r15, rsi	       263	intel_dvo.c	FUNCTION_10
0x40002e7	            0x4155	                                push r13	       263	intel_dvo.c	FUNCTION_10
0x40002e9	            0x4154	                                push r12	       263	intel_dvo.c	FUNCTION_10
0x40002eb	      0xba01000000	                              mov edx, 1	       274	intel_dvo.c	FUNCTION_10	CALL_4
0x40002f0	              0x55	                                push rbp	       263	intel_dvo.c	FUNCTION_10
0x40002f1	              0x53	                                push rbx	       263	intel_dvo.c	FUNCTION_10
0x40002f2	          0x488b06	                    mov rax, qword [rsi]	       268	intel_dvo.c	FUNCTION_10
0x40002f5	          0x4c8b27	                    mov r12, qword [rdi]	       264	intel_dvo.c	FUNCTION_10	CALL_1
0x40002f8	    0x448bb70c0100	          mov r14d, dword [rdi + 0x10c] 	       270	intel_dvo.c	FUNCTION_10
0x40002ff	    0x8baf10010000	           mov ebp, dword [rdi + 0x110] 	       271	intel_dvo.c	FUNCTION_10
0x4000305	    0x448ba8b00400	          mov r13d, dword [rax + 0x4b0] 	       268	intel_dvo.c	FUNCTION_10
0x400030c	          0x4c89e7	                            mov rdi, r12	       274	intel_dvo.c	FUNCTION_10	CALL_4
0x400030f	    0x498b8424f807	           mov rax, qword [r12 + 0x7f8] 	       274	intel_dvo.c	FUNCTION_10	CALL_4
0x4000317	          0x4489f6	                           mov esi, r14d	       274	intel_dvo.c	FUNCTION_10	CALL_4
0x400031a	      0xe800000000	                          call 0x400031f	       274	intel_dvo.c	FUNCTION_10	CALL_4
0x400031f	      0x2540000007	                      and eax, 0x7000040	       274	intel_dvo.c	FUNCTION_10	CALL_4
0x4000324	            0x89ee	                            mov esi, ebp	       290	intel_dvo.c	FUNCTION_10	CALL_5
0x4000326	          0x4c89e7	                            mov rdi, r12	       290	intel_dvo.c	FUNCTION_10	CALL_5
0x4000329	            0x89c3	                            mov ebx, eax	       276	intel_dvo.c	FUNCTION_10
0x400032b	       0xd84400040	                      or eax, 0x40004084	       276	intel_dvo.c	FUNCTION_10
0x4000330	      0xb901000000	                              mov ecx, 1	       290	intel_dvo.c	FUNCTION_10	CALL_5
0x4000335	    0x81cb84400000	                          or ebx, 0x4084	       276	intel_dvo.c	FUNCTION_10
0x400033b	        0x4183fd01	                             cmp r13d, 1	       276	intel_dvo.c	FUNCTION_10
0x400033f	           0xf44d8	                          cmove ebx, eax	       276	intel_dvo.c	FUNCTION_10
0x4000342	    0x418b879c0000	            mov eax, dword [r15 + 0x9c] 	       282	intel_dvo.c	FUNCTION_10	IF_2
0x4000349	            0x89da	                            mov edx, ebx	       281	intel_dvo.c	FUNCTION_10
0x400034b	    0x81cb08000010	                      or ebx, 0x10000008	       281	intel_dvo.c	FUNCTION_10
0x4000351	    0x81ca00000010	                      or edx, 0x10000000	       281	intel_dvo.c	FUNCTION_10
0x4000357	            0xa801	                              test al, 1	       281	intel_dvo.c	FUNCTION_10
0x4000359	           0xf44da	                          cmove ebx, edx	       281	intel_dvo.c	FUNCTION_10
0x400035c	            0x89da	                            mov edx, ebx	       285	intel_dvo.c	FUNCTION_10	IF_3
0x400035e	          0x83ca10	                            or edx, 0x10	       285	intel_dvo.c	FUNCTION_10	IF_3
0x4000361	            0xa804	                              test al, 4	       285	intel_dvo.c	FUNCTION_10	IF_3
0x4000363	    0x498b84241808	           mov rax, qword [r12 + 0x818] 	       290	intel_dvo.c	FUNCTION_10	CALL_5
0x400036b	           0xf45da	                         cmovne ebx, edx	       285	intel_dvo.c	FUNCTION_10	IF_3
0x400036e	    0x418b97ac0000	            mov edx, dword [r15 + 0xac] 	       290	intel_dvo.c	FUNCTION_10	CALL_5
0x4000375	          0xc1e20c	                            shl edx, 0xc	       290	intel_dvo.c	FUNCTION_10	CALL_5
0x4000378	    0x410b97c80000	              or edx, dword [r15 + 0xc8]	       290	intel_dvo.c	FUNCTION_10	CALL_5
0x400037f	      0xe800000000	                          call 0x4000384	       290	intel_dvo.c	FUNCTION_10	CALL_5
0x4000384	    0x498b84241808	           mov rax, qword [r12 + 0x818] 	       294	intel_dvo.c	FUNCTION_10	CALL_6
0x400038c	            0x89da	                            mov edx, ebx	       294	intel_dvo.c	FUNCTION_10	CALL_6
0x400038e	          0x4489f6	                           mov esi, r14d	       294	intel_dvo.c	FUNCTION_10	CALL_6
0x4000391	          0x4c89e7	                            mov rdi, r12	       294	intel_dvo.c	FUNCTION_10	CALL_6
0x4000394	      0xb901000000	                              mov ecx, 1	       294	intel_dvo.c	FUNCTION_10	CALL_6
0x4000399	      0xe800000000	                          call 0x400039e	       294	intel_dvo.c	FUNCTION_10	CALL_6
0x400039e	              0x5b	                                 pop rbx	       295	intel_dvo.c	FUNCTION_10
0x400039f	              0x5d	                                 pop rbp	       295	intel_dvo.c	FUNCTION_10
0x40003a0	            0x415c	                                 pop r12	       295	intel_dvo.c	FUNCTION_10
0x40003a2	            0x415d	                                 pop r13	       295	intel_dvo.c	FUNCTION_10
0x40003a4	            0x415e	                                 pop r14	       295	intel_dvo.c	FUNCTION_10
0x40003a6	            0x415f	                                 pop r15	       295	intel_dvo.c	FUNCTION_10
0x40003a8	              0xc3	                                     ret	       295	intel_dvo.c	FUNCTION_10
intel_disable_dvo	WHILE,0:CALL,6:ELSE,0:DO,0:FOR,0:functions,0:IF,0:SWITCH,0	35
0x4000130	            0x4155	                                push r13	       182	intel_dvo.c	ELSE_2	FUNCTION_6
0x4000132	            0x4154	                                push r12	       182	intel_dvo.c	ELSE_2	FUNCTION_6
0x4000134	      0xba01000000	                              mov edx, 1	       186	intel_dvo.c	ELSE_2	FUNCTION_6	CALL_3
0x4000139	              0x55	                                push rbp	       182	intel_dvo.c	ELSE_2	FUNCTION_6
0x400013a	              0x53	                                push rbx	       182	intel_dvo.c	ELSE_2	FUNCTION_6
0x400013b	          0x4889fd	                            mov rbp, rdi	       182	intel_dvo.c	ELSE_2	FUNCTION_6
0x400013e	          0x488b1f	                    mov rbx, qword [rdi]	       183	intel_dvo.c	ELSE_2	FUNCTION_6	CALL_1
0x4000141	    0x448ba70c0100	          mov r12d, dword [rdi + 0x10c] 	       185	intel_dvo.c	ELSE_2	FUNCTION_6
0x4000148	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       186	intel_dvo.c	ELSE_2	FUNCTION_6	CALL_3
0x400014f	          0x4489e6	                           mov esi, r12d	       186	intel_dvo.c	ELSE_2	FUNCTION_6	CALL_3
0x4000152	          0x4889df	                            mov rdi, rbx	       186	intel_dvo.c	ELSE_2	FUNCTION_6	CALL_3
0x4000155	      0xe800000000	                          call 0x400015a	       186	intel_dvo.c	ELSE_2	FUNCTION_6	CALL_3
0x400015a	          0x4189c5	                           mov r13d, eax	       186	intel_dvo.c	ELSE_2	FUNCTION_6	CALL_3
0x400015d	    0x488b85200100	           mov rax, qword [rbp + 0x120] 	       188	intel_dvo.c	ELSE_2	FUNCTION_6	CALL_4
0x4000164	    0x488dbd000100	                  lea rdi, [rbp + 0x100]	       188	intel_dvo.c	ELSE_2	FUNCTION_6	CALL_4
0x400016b	            0x31f6	                            xor esi, esi	       188	intel_dvo.c	ELSE_2	FUNCTION_6	CALL_4
0x400016d	        0x488b4010	            mov rax, qword [rax + 0x10] 	       188	intel_dvo.c	ELSE_2	FUNCTION_6	CALL_4
0x4000171	      0xe800000000	                          call 0x4000176	       188	intel_dvo.c	ELSE_2	FUNCTION_6	CALL_4
0x4000176	          0x4489ea	                           mov edx, r13d	       189	intel_dvo.c	ELSE_2	FUNCTION_6	CALL_5
0x4000179	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       189	intel_dvo.c	ELSE_2	FUNCTION_6	CALL_5
0x4000180	          0x4489e6	                           mov esi, r12d	       189	intel_dvo.c	ELSE_2	FUNCTION_6	CALL_5
0x4000183	          0x4889df	                            mov rdi, rbx	       189	intel_dvo.c	ELSE_2	FUNCTION_6	CALL_5
0x4000186	    0x81e2ffffff7f	                     and edx, 0x7fffffff	       189	intel_dvo.c	ELSE_2	FUNCTION_6	CALL_5
0x400018c	      0xb901000000	                              mov ecx, 1	       189	intel_dvo.c	ELSE_2	FUNCTION_6	CALL_5
0x4000191	      0xe800000000	                          call 0x4000196	       189	intel_dvo.c	ELSE_2	FUNCTION_6	CALL_5
0x4000196	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       190	intel_dvo.c	ELSE_2	FUNCTION_6	CALL_6
0x400019d	          0x4489e6	                           mov esi, r12d	       190	intel_dvo.c	ELSE_2	FUNCTION_6	CALL_6
0x40001a0	          0x4889df	                            mov rdi, rbx	       190	intel_dvo.c	ELSE_2	FUNCTION_6	CALL_6
0x40001a3	      0xba01000000	                              mov edx, 1	       190	intel_dvo.c	ELSE_2	FUNCTION_6	CALL_6
0x40001a8	      0xe800000000	                          call 0x40001ad	       190	intel_dvo.c	ELSE_2	FUNCTION_6	CALL_6
0x40001ad	              0x5b	                                 pop rbx	       191	intel_dvo.c	ELSE_2	FUNCTION_6
0x40001ae	              0x5d	                                 pop rbp	       191	intel_dvo.c	ELSE_2	FUNCTION_6
0x40001af	            0x415c	                                 pop r12	       191	intel_dvo.c	ELSE_2	FUNCTION_6
0x40001b1	            0x415d	                                 pop r13	       191	intel_dvo.c	ELSE_2	FUNCTION_6
0x40001b3	              0xc3	                                     ret	       191	intel_dvo.c	ELSE_2	FUNCTION_6
