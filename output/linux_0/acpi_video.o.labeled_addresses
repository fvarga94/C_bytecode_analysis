video_disable_backlight_sysfs_if	IF,1:DO,0:functions,0:CALL,0:SWITCH,0:WHILE,0:FOR,0:ELSE,0	5
0x4000080	    0x833d00000000	cmp dword [0x04000087], 0xffffffffffffffff	       397	acpi_video.c	FUNCTION_9	IF_1
0x4000087	            0x750a	                           jne 0x4000093	       397	acpi_video.c	FUNCTION_9	IF_1
0x4000089	    0xc70500000000	               mov dword [0x04000093], 1	       398	acpi_video.c	FUNCTION_9	IF_1
0x4000093	            0x31c0	                            xor eax, eax	       400	acpi_video.c	FUNCTION_9
0x4000095	              0xc3	                                     ret	       400	acpi_video.c	FUNCTION_9
acpi_video_cmp_level	IF,0:DO,0:functions,0:CALL,0:SWITCH,0:WHILE,0:FOR,0:ELSE,0	3
0x40000e0	            0x8b07	                    mov eax, dword [rdi]	       719	acpi_video.c	FUNCTION_17
0x40000e2	            0x2b06	                    sub eax, dword [rsi]	       719	acpi_video.c	FUNCTION_17
0x40000e4	              0xc3	                                     ret	       720	acpi_video.c	FUNCTION_17
acpi_video_register	IF,4:DO,0:functions,0:CALL,6:SWITCH,0:WHILE,0:FOR,0:ELSE,1	63
0x40007c0	              0x53	                                push rbx	      2146	acpi_video.c	FUNCTION_58
0x40007c1	    0x48c7c7000000	                              mov rdi, 0	      2149	acpi_video.c	FUNCTION_58	CALL_1
0x40007c8	            0x31db	                            xor ebx, ebx	      2147	acpi_video.c	FUNCTION_58
0x40007ca	      0xe800000000	                          call 0x40007cf	      2149	acpi_video.c	FUNCTION_58	CALL_1
0x40007cf	    0x8b0500000000	            mov eax, dword [0x040007d5] 	      2150	acpi_video.c	FUNCTION_58	IF_1
0x40007d5	            0x85c0	                           test eax, eax	      2150	acpi_video.c	FUNCTION_58	IF_1
0x40007d7	            0x7531	                           jne 0x400080a	      2150	acpi_video.c	FUNCTION_58	IF_1
0x40007d9	    0x833d00000000	cmp dword [0x040007e0], 0xffffffffffffffff	      2165	acpi_video.c	FUNCTION_58	IF_2
0x40007e0	            0x7438	                            je 0x400081a	      2165	acpi_video.c	FUNCTION_58	IF_2
0x40007e2	    0x48c7c7000000	                              mov rdi, 0	      2172	acpi_video.c	FUNCTION_58	CALL_4
0x40007e9	      0xe800000000	                          call 0x40007ee	      2172	acpi_video.c	FUNCTION_58	CALL_4
0x40007ee	    0x48c7c7000000	                              mov rdi, 0	      2174	acpi_video.c	FUNCTION_58	CALL_5
0x40007f5	      0xe800000000	                          call 0x40007fa	      2174	acpi_video.c	FUNCTION_58	CALL_5
0x40007fa	            0x85c0	                           test eax, eax	      2175	acpi_video.c	FUNCTION_58	IF_4
0x40007fc	            0x89c3	                            mov ebx, eax	      2174	acpi_video.c	FUNCTION_58	CALL_5
0x40007fe	            0x750a	                           jne 0x400080a	      2175	acpi_video.c	FUNCTION_58	IF_4
0x4000800	    0xc70500000000	               mov dword [0x0400080a], 1	      2182	acpi_video.c	FUNCTION_58
0x400080a	    0x48c7c7000000	                              mov rdi, 0	      2185	acpi_video.c	FUNCTION_58	CALL_6
0x4000811	      0xe800000000	                          call 0x4000816	      2185	acpi_video.c	FUNCTION_58	CALL_6
0x4000816	            0x89d8	                            mov eax, ebx	      2187	acpi_video.c	FUNCTION_58
0x4000818	              0x5b	                                 pop rbx	      2187	acpi_video.c	FUNCTION_58
0x4000819	              0xc3	                                     ret	      2187	acpi_video.c	FUNCTION_58
0x400081a	      0xbf10000000	                           mov edi, 0x10	      2130	acpi_video.c	FUNCTION_57	CALL_1
0x400081f	      0xe800000000	                          call 0x4000824	      2130	acpi_video.c	FUNCTION_57	CALL_1
0x4000824	          0x4885c0	                           test rax, rax	      2131	acpi_video.c	FUNCTION_57	IF_1
0x4000827	            0x7472	                            je 0x400089b	      2131	acpi_video.c	FUNCTION_57	IF_1
0x4000829	      0xb902000000	                              mov ecx, 2	      2134	acpi_video.c	FUNCTION_57	IF_2	CALL_2
0x400082e	    0x48c7c7000000	                              mov rdi, 0	      2134	acpi_video.c	FUNCTION_57	IF_2	CALL_2
0x4000835	          0x4889c6	                            mov rsi, rax	      2134	acpi_video.c	FUNCTION_57	IF_2	CALL_2
0x4000838	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2134	acpi_video.c	FUNCTION_57	IF_2	CALL_2
0x400083a	            0x746e	                            je 0x40008aa	      2134	acpi_video.c	FUNCTION_57	IF_2	CALL_2
0x400083c	      0xb902000000	                              mov ecx, 2	      2135	acpi_video.c	FUNCTION_57	IF_2	CALL_3
0x4000841	    0x48c7c7000000	                              mov rdi, 0	      2135	acpi_video.c	FUNCTION_57	IF_2	CALL_3
0x4000848	          0x4889c6	                            mov rsi, rax	      2135	acpi_video.c	FUNCTION_57	IF_2	CALL_3
0x400084b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2134	acpi_video.c	FUNCTION_57	IF_2	CALL_2
0x400084d	            0x745b	                            je 0x40008aa	      2134	acpi_video.c	FUNCTION_57	IF_2	CALL_2
0x400084f	      0xb902000000	                              mov ecx, 2	      2136	acpi_video.c	FUNCTION_57	IF_2	CALL_4
0x4000854	    0x48c7c7000000	                              mov rdi, 0	      2136	acpi_video.c	FUNCTION_57	IF_2	CALL_4
0x400085b	          0x4889c6	                            mov rsi, rax	      2136	acpi_video.c	FUNCTION_57	IF_2	CALL_4
0x400085e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2135	acpi_video.c	FUNCTION_57	IF_2	CALL_3
0x4000860	            0x7448	                            je 0x40008aa	      2135	acpi_video.c	FUNCTION_57	IF_2	CALL_3
0x4000862	      0xb902000000	                              mov ecx, 2	      2137	acpi_video.c	FUNCTION_57	IF_2	CALL_5
0x4000867	    0x48c7c7000000	                              mov rdi, 0	      2137	acpi_video.c	FUNCTION_57	IF_2	CALL_5
0x400086e	          0x4889c6	                            mov rsi, rax	      2137	acpi_video.c	FUNCTION_57	IF_2	CALL_5
0x4000871	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2136	acpi_video.c	FUNCTION_57	IF_2	CALL_4
0x4000873	            0x7435	                            je 0x40008aa	      2136	acpi_video.c	FUNCTION_57	IF_2	CALL_4
0x4000875	      0xb902000000	                              mov ecx, 2	      2138	acpi_video.c	FUNCTION_57	IF_2	CALL_6
0x400087a	    0x48c7c7000000	                              mov rdi, 0	      2138	acpi_video.c	FUNCTION_57	IF_2	CALL_6
0x4000881	          0x4889c6	                            mov rsi, rax	      2138	acpi_video.c	FUNCTION_57	IF_2	CALL_6
0x4000884	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2137	acpi_video.c	FUNCTION_57	IF_2	CALL_5
0x4000886	            0x7422	                            je 0x40008aa	      2137	acpi_video.c	FUNCTION_57	IF_2	CALL_5
0x4000888	      0xb903000000	                              mov ecx, 3	      2139	acpi_video.c	FUNCTION_57	IF_2	CALL_7
0x400088d	    0x48c7c7000000	                              mov rdi, 0	      2139	acpi_video.c	FUNCTION_57	IF_2	CALL_7
0x4000894	          0x4889c6	                            mov rsi, rax	      2139	acpi_video.c	FUNCTION_57	IF_2	CALL_7
0x4000897	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2138	acpi_video.c	FUNCTION_57	IF_2	CALL_6
0x4000899	            0x740f	                            je 0x40008aa	      2138	acpi_video.c	FUNCTION_57	IF_2	CALL_6
0x400089b	    0xc70500000000	               mov dword [0x040008a5], 0	      2169	acpi_video.c	FUNCTION_58	IF_2	ELSE_1
0x40008a5	      0xe938ffffff	                           jmp 0x40007e2	      2169	acpi_video.c	FUNCTION_58	IF_2	ELSE_1
0x40008aa	      0xe800000000	                          call 0x40008af	      2166	acpi_video.c	FUNCTION_58	IF_2	IF_3	CALL_3
0x40008af	            0x84c0	                             test al, al	      2166	acpi_video.c	FUNCTION_58	IF_2	IF_3	CALL_3
0x40008b1	            0x74e8	                            je 0x400089b	      2166	acpi_video.c	FUNCTION_58	IF_2	IF_3	CALL_3
0x40008b3	    0xc70500000000	               mov dword [0x040008bd], 1	      2167	acpi_video.c	FUNCTION_58	IF_2	IF_3
0x40008bd	      0xe920ffffff	                           jmp 0x40007e2	      2167	acpi_video.c	FUNCTION_58	IF_2	IF_3
video_set_device_id_scheme	IF,0:DO,0:functions,0:CALL,0:SWITCH,0:WHILE,0:FOR,0:ELSE,0	3
0x40000a0	    0xc60500000000	                mov byte [0x040000a7], 1	       404	acpi_video.c	FUNCTION_10
0x40000a7	            0x31c0	                            xor eax, eax	       406	acpi_video.c	FUNCTION_10
0x40000a9	              0xc3	                                     ret	       406	acpi_video.c	FUNCTION_10
acpi_video_device_EDID	IF,5:DO,0:functions,0:CALL,4:SWITCH,0:WHILE,0:FOR,0:ELSE,3	57
0x4000180	              0x55	                                push rbp	       634	acpi_video.c	FUNCTION_15
0x4000181	              0x53	                                push rbx	       634	acpi_video.c	FUNCTION_15
0x4000182	        0x4883ec40	                           sub rsp, 0x40	       634	acpi_video.c	FUNCTION_15
0x4000186	    0x48c706000000	                      mov qword [rsi], 0	       642	acpi_video.c	FUNCTION_15
0x400018d	    0x65488b042528	                mov rax, qword gs:[0x28]	       634	acpi_video.c	FUNCTION_15
0x4000196	      0x4889442438	             mov qword [rsp + 0x38], rax	       634	acpi_video.c	FUNCTION_15
0x400019b	            0x31c0	                            xor eax, eax	       634	acpi_video.c	FUNCTION_15
0x400019d	      0x488d442420	                   lea rax, [rsp + 0x20]	       639	acpi_video.c	FUNCTION_15
0x40001a2	          0x4885ff	                           test rdi, rdi	       644	acpi_video.c	FUNCTION_15	IF_1
0x40001a5	    0x48c744242000	               mov qword [rsp + 0x20], 0	       638	acpi_video.c	FUNCTION_15
0x40001ae	    0x48c70424ffff	     mov qword [rsp], 0xffffffffffffffff	       636	acpi_video.c	FUNCTION_15
0x40001b6	    0x48c744240800	                  mov qword [rsp + 8], 0	       636	acpi_video.c	FUNCTION_15
0x40001bf	    0x48c744242800	               mov qword [rsp + 0x28], 0	       638	acpi_video.c	FUNCTION_15
0x40001c8	    0x48c744243000	               mov qword [rsp + 0x30], 0	       638	acpi_video.c	FUNCTION_15
0x40001d1	    0xc74424200100	               mov dword [rsp + 0x20], 1	       638	acpi_video.c	FUNCTION_15
0x40001d9	    0xc74424100100	               mov dword [rsp + 0x10], 1	       639	acpi_video.c	FUNCTION_15
0x40001e1	      0x4889442418	             mov qword [rsp + 0x18], rax	       639	acpi_video.c	FUNCTION_15
0x40001e6	            0x747b	                            je 0x4000263	       644	acpi_video.c	FUNCTION_15	IF_1
0x40001e8	    0x4881fa800000	                           cmp rdx, 0x80	       646	acpi_video.c	FUNCTION_15	IF_2
0x40001ef	          0x4889f5	                            mov rbp, rsi	       646	acpi_video.c	FUNCTION_15	IF_2
0x40001f2	            0x7464	                            je 0x4000258	       646	acpi_video.c	FUNCTION_15	IF_2
0x40001f4	    0x4881fa000100	                          cmp rdx, 0x100	       648	acpi_video.c	FUNCTION_15	ELSE_1	IF_3
0x40001fb	      0xb8eaffffff	                     mov eax, 0xffffffea	       651	acpi_video.c	FUNCTION_15	ELSE_2
0x4000200	            0x753f	                           jne 0x4000241	       648	acpi_video.c	FUNCTION_15	ELSE_1	IF_3
0x4000202	    0x48c744242802	               mov qword [rsp + 0x28], 2	       649	acpi_video.c	FUNCTION_15	ELSE_1	IF_3
0x400020b	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	       653	acpi_video.c	FUNCTION_15	CALL_1
0x4000212	      0x488d542410	                   lea rdx, [rsp + 0x10]	       653	acpi_video.c	FUNCTION_15	CALL_1
0x4000217	          0x4889e1	                            mov rcx, rsp	       653	acpi_video.c	FUNCTION_15	CALL_1
0x400021a	    0x48c7c6000000	                              mov rsi, 0	       653	acpi_video.c	FUNCTION_15	CALL_1
0x4000221	        0x488b7808	                mov rdi, qword [rax + 8]	       653	acpi_video.c	FUNCTION_15	CALL_1
0x4000225	      0xe800000000	                          call 0x400022a	       653	acpi_video.c	FUNCTION_15	CALL_1
0x400022a	            0x85c0	                           test eax, eax	       654	acpi_video.c	FUNCTION_15	IF_4	CALL_2
0x400022c	            0x7535	                           jne 0x4000263	       654	acpi_video.c	FUNCTION_15	IF_4	CALL_2
0x400022e	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       657	acpi_video.c	FUNCTION_15
0x4000233	          0x4885db	                           test rbx, rbx	       659	acpi_video.c	FUNCTION_15	IF_5
0x4000236	            0x7432	                            je 0x400026a	       659	acpi_video.c	FUNCTION_15	IF_5
0x4000238	          0x833b03	                      cmp dword [rbx], 3	       659	acpi_video.c	FUNCTION_15	IF_5
0x400023b	            0x752d	                           jne 0x400026a	       659	acpi_video.c	FUNCTION_15	IF_5
0x400023d	        0x48895d00	                    mov qword [rbp], rbx	       660	acpi_video.c	FUNCTION_15	IF_5
0x4000241	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       668	acpi_video.c	FUNCTION_15
0x4000246	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       668	acpi_video.c	FUNCTION_15
0x400024f	            0x7534	                           jne 0x4000285	       668	acpi_video.c	FUNCTION_15
0x4000251	        0x4883c440	                           add rsp, 0x40	       668	acpi_video.c	FUNCTION_15
0x4000255	              0x5b	                                 pop rbx	       668	acpi_video.c	FUNCTION_15
0x4000256	              0x5d	                                 pop rbp	       668	acpi_video.c	FUNCTION_15
0x4000257	              0xc3	                                     ret	       668	acpi_video.c	FUNCTION_15
0x4000258	    0x48c744242801	               mov qword [rsp + 0x28], 1	       647	acpi_video.c	FUNCTION_15	IF_2
0x4000261	            0xeba8	                           jmp 0x400020b	       647	acpi_video.c	FUNCTION_15	IF_2
0x4000263	      0xb8edffffff	                     mov eax, 0xffffffed	       645	acpi_video.c	FUNCTION_15	IF_1
0x4000268	            0xebd7	                           jmp 0x4000241	       645	acpi_video.c	FUNCTION_15	IF_1
0x400026a	    0x48c7c7000000	                              mov rdi, 0	       662	acpi_video.c	FUNCTION_15	ELSE_3	CALL_3
0x4000271	      0xe800000000	                          call 0x4000276	       662	acpi_video.c	FUNCTION_15	ELSE_3	CALL_3
0x4000276	          0x4889df	                            mov rdi, rbx	       664	acpi_video.c	FUNCTION_15	ELSE_3	CALL_4
0x4000279	      0xe800000000	                          call 0x400027e	       664	acpi_video.c	FUNCTION_15	ELSE_3	CALL_4
0x400027e	      0xb8f2ffffff	                     mov eax, 0xfffffff2	       663	acpi_video.c	FUNCTION_15	ELSE_3
0x4000283	            0xebbc	                           jmp 0x4000241	       663	acpi_video.c	FUNCTION_15	ELSE_3
0x4000285	      0xe800000000	                          call 0x400028a	       668	acpi_video.c	FUNCTION_15
video_set_bqc_offset	IF,0:DO,0:functions,0:CALL,0:SWITCH,0:WHILE,0:FOR,0:ELSE,0	3
0x4000070	    0xc70500000000	               mov dword [0x0400007a], 9	       390	acpi_video.c	FUNCTION_8
0x400007a	            0x31c0	                            xor eax, eax	       392	acpi_video.c	FUNCTION_8
0x400007c	              0xc3	                                     ret	       392	acpi_video.c	FUNCTION_8
acpi_video_switch_brightness	IF,5:DO,0:functions,0:CALL,7:SWITCH,0:WHILE,0:FOR,0:ELSE,0	118
0x4000b80	            0x4155	                                push r13	      1403	acpi_video.c	FUNCTION_32
0x4000b82	            0x4154	                                push r12	      1403	acpi_video.c	FUNCTION_32
0x4000b84	              0x55	                                push rbp	      1403	acpi_video.c	FUNCTION_32
0x4000b85	              0x53	                                push rbx	      1403	acpi_video.c	FUNCTION_32
0x4000b86	        0x4883ec10	                           sub rsp, 0x10	      1403	acpi_video.c	FUNCTION_32
0x4000b8a	    0x65488b042528	                mov rax, qword gs:[0x28]	      1403	acpi_video.c	FUNCTION_32
0x4000b93	      0x4889442408	                mov qword [rsp + 8], rax	      1403	acpi_video.c	FUNCTION_32
0x4000b98	            0x31c0	                            xor eax, eax	      1403	acpi_video.c	FUNCTION_32
0x4000b9a	      0x48837f7800	               cmp qword [rdi + 0x78], 0	      1411	acpi_video.c	FUNCTION_32	IF_1
0x4000b9f	            0x742e	                            je 0x4000bcf	      1411	acpi_video.c	FUNCTION_32	IF_1
0x4000ba1	      0x48837f7000	               cmp qword [rdi + 0x70], 0	      1414	acpi_video.c	FUNCTION_32	IF_2
0x4000ba6	          0x4989fc	                            mov r12, rdi	      1414	acpi_video.c	FUNCTION_32	IF_2
0x4000ba9	            0x7418	                            je 0x4000bc3	      1414	acpi_video.c	FUNCTION_32	IF_2
0x4000bab	        0x488d6fe0	                   lea rbp, [rdi - 0x20]	      1404	acpi_video.c	FUNCTION_32	CALL_2
0x4000baf	          0x8b5f58	            mov ebx, dword [rdi + 0x58] 	      1407	acpi_video.c	FUNCTION_32
0x4000bb2	            0x31d2	                            xor edx, edx	      1417	acpi_video.c	FUNCTION_32	CALL_3
0x4000bb4	          0x4889e6	                            mov rsi, rsp	      1417	acpi_video.c	FUNCTION_32	CALL_3
0x4000bb7	          0x4889ef	                            mov rdi, rbp	      1417	acpi_video.c	FUNCTION_32	CALL_3
0x4000bba	      0xe871f9ffff	call sym.acpi_video_device_lcd_get_level_current	      1417	acpi_video.c	FUNCTION_32	CALL_3
0x4000bbf	            0x85c0	                           test eax, eax	      1420	acpi_video.c	FUNCTION_32	IF_3
0x4000bc1	            0x742b	                            je 0x4000bee	      1420	acpi_video.c	FUNCTION_32	IF_3
0x4000bc3	    0x48c7c7000000	                              mov rdi, 0	      1433	acpi_video.c	FUNCTION_32	CALL_7
0x4000bca	      0xe800000000	                          call 0x4000bcf	      1433	acpi_video.c	FUNCTION_32	CALL_7
0x4000bcf	      0x488b442408	                mov rax, qword [rsp + 8]	      1434	acpi_video.c	FUNCTION_32
0x4000bd4	    0x654833042528	                xor rax, qword gs:[0x28]	      1434	acpi_video.c	FUNCTION_32
0x4000bdd	     0xf851b010000	                           jne 0x4000cfe	      1434	acpi_video.c	FUNCTION_32
0x4000be3	        0x4883c410	                           add rsp, 0x10	      1434	acpi_video.c	FUNCTION_32
0x4000be7	              0x5b	                                 pop rbx	      1434	acpi_video.c	FUNCTION_32
0x4000be8	              0x5d	                                 pop rbp	      1434	acpi_video.c	FUNCTION_32
0x4000be9	            0x415c	                                 pop r12	      1434	acpi_video.c	FUNCTION_32
0x4000beb	            0x415d	                                 pop r13	      1434	acpi_video.c	FUNCTION_32
0x4000bed	              0xc3	                                     ret	      1434	acpi_video.c	FUNCTION_32
0x4000bee	      0x498b542470	            mov rdx, qword [r12 + 0x70] 	      1434	acpi_video.c	FUNCTION_32
0x4000bf3	        0x4c8b2c24	                    mov r13, qword [rsp]	      1423	acpi_video.c	FUNCTION_32	CALL_4
0x4000bf7	          0x8b4204	                mov eax, dword [rdx + 4]	      1364	acpi_video.c	FUNCTION_31	FOR_1
0x4000bfa	          0x4489ee	                           mov esi, r13d	      1423	acpi_video.c	FUNCTION_32	CALL_4
0x4000bfd	          0x83f802	                              cmp eax, 2	      1364	acpi_video.c	FUNCTION_31	FOR_1
0x4000c00	     0xf8ee0000000	                           jle 0x4000ce6	      1364	acpi_video.c	FUNCTION_31	FOR_1
0x4000c06	        0x488b5208	                mov rdx, qword [rdx + 8]	      1364	acpi_video.c	FUNCTION_31	FOR_1
0x4000c0a	          0x83e803	                              sub eax, 3	      1364	acpi_video.c	FUNCTION_31	FOR_1
0x4000c0d	    0x41baff000000	                          mov r10d, 0xff	      1364	acpi_video.c	FUNCTION_31	FOR_1
0x4000c13	        0x4c8d4a08	                       lea r9, [rdx + 8]	      1364	acpi_video.c	FUNCTION_31	FOR_1
0x4000c17	      0x4c8d5c820c	           lea r11, [rdx + rax*4 + 0xc] 	      1364	acpi_video.c	FUNCTION_31	FOR_1
0x4000c1c	          0x4c89ca	                             mov rdx, r9	      1364	acpi_video.c	FUNCTION_31	FOR_1
0x4000c1f	            0x8b02	                    mov eax, dword [rdx]	      1366	acpi_video.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x4000c21	          0x4589d0	                           mov r8d, r10d	      1366	acpi_video.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x4000c24	        0x41c1f81f	                           sar r8d, 0x1f	      1366	acpi_video.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x4000c28	            0x29f0	                            sub eax, esi	      1366	acpi_video.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x4000c2a	            0x89c1	                            mov ecx, eax	      1366	acpi_video.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x4000c2c	          0xc1f91f	                           sar ecx, 0x1f	      1366	acpi_video.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x4000c2f	            0x89cf	                            mov edi, ecx	      1366	acpi_video.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x4000c31	            0x31c7	                            xor edi, eax	      1366	acpi_video.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x4000c33	            0x29cf	                            sub edi, ecx	      1366	acpi_video.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x4000c35	          0x4489c1	                            mov ecx, r8d	      1366	acpi_video.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x4000c38	          0x4431d1	                           xor ecx, r10d	      1366	acpi_video.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x4000c3b	          0x4429c1	                            sub ecx, r8d	      1366	acpi_video.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x4000c3e	            0x39cf	                            cmp edi, ecx	      1366	acpi_video.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x4000c40	            0x7d07	                           jge 0x4000c49	      1366	acpi_video.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x4000c42	            0x85c0	                           test eax, eax	      1368	acpi_video.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4000c44	            0x7410	                            je 0x4000c56	      1368	acpi_video.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4000c46	          0x4189c2	                           mov r10d, eax	      1368	acpi_video.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4000c49	        0x4883c204	                              add rdx, 4	      1368	acpi_video.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4000c4d	          0x4939d3	                            cmp r11, rdx	      1364	acpi_video.c	FUNCTION_31	FOR_1
0x4000c50	            0x75cd	                           jne 0x4000c1f	      1364	acpi_video.c	FUNCTION_31	FOR_1
0x4000c52	        0x438d342a	                    lea esi, [r10 + r13]	      1373	acpi_video.c	FUNCTION_31
0x4000c56	          0x4531c0	                            xor r8d, r8d	      1368	acpi_video.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4000c59	      0xbfff000000	                           mov edi, 0xff	      1368	acpi_video.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4000c5e	            0x31c9	                            xor ecx, ecx	      1368	acpi_video.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4000c60	      0xbaff000000	                           mov edx, 0xff	      1368	acpi_video.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4000c65	          0x418b01	                     mov eax, dword [r9]	      1375	acpi_video.c	FUNCTION_31	FOR_2
0x4000c68	            0x39c2	                            cmp edx, eax	      1375	acpi_video.c	FUNCTION_31	FOR_2
0x4000c6a	           0xf4fd0	                          cmovg edx, eax	      1375	acpi_video.c	FUNCTION_31	FOR_2
0x4000c6d	            0x39c1	                            cmp ecx, eax	      1375	acpi_video.c	FUNCTION_31	FOR_2
0x4000c6f	           0xf4cc8	                          cmovl ecx, eax	      1375	acpi_video.c	FUNCTION_31	FOR_2
0x4000c72	            0x39f8	                            cmp eax, edi	      1380	acpi_video.c	FUNCTION_31	FOR_2	IF_5
0x4000c74	            0x7d05	                           jge 0x4000c7b	      1380	acpi_video.c	FUNCTION_31	FOR_2	IF_5
0x4000c76	            0x39f0	                            cmp eax, esi	      1380	acpi_video.c	FUNCTION_31	FOR_2	IF_5
0x4000c78	           0xf47f8	                          cmova edi, eax	      1380	acpi_video.c	FUNCTION_31	FOR_2	IF_5
0x4000c7b	          0x4439c0	                            cmp eax, r8d	      1382	acpi_video.c	FUNCTION_31	FOR_2	IF_6
0x4000c7e	            0x7e06	                           jle 0x4000c86	      1382	acpi_video.c	FUNCTION_31	FOR_2	IF_6
0x4000c80	            0x39f0	                            cmp eax, esi	      1382	acpi_video.c	FUNCTION_31	FOR_2	IF_6
0x4000c82	        0x440f42c0	                          cmovb r8d, eax	      1382	acpi_video.c	FUNCTION_31	FOR_2	IF_6
0x4000c86	        0x4983c104	                               add r9, 4	      1382	acpi_video.c	FUNCTION_31	FOR_2	IF_6
0x4000c8a	          0x4d39cb	                             cmp r11, r9	      1374	acpi_video.c	FUNCTION_31	FOR_2
0x4000c8d	            0x75d6	                           jne 0x4000c65	      1374	acpi_video.c	FUNCTION_31	FOR_2
0x4000c8f	    0x81eb85000000	                           sub ebx, 0x85	      1386	acpi_video.c	FUNCTION_31	SWITCH_1
0x4000c95	          0x83fb04	                              cmp ebx, 4	      1386	acpi_video.c	FUNCTION_31	SWITCH_1
0x4000c98	            0x7714	                            ja 0x4000cae	      1386	acpi_video.c	FUNCTION_31	SWITCH_1
0x4000c9a	    0x488b04dd0000	                  mov rax, qword [rbx*8]	      1386	acpi_video.c	FUNCTION_31	SWITCH_1
0x4000ca2	      0xe900000000	                           jmp 0x4000ca7	      1386	acpi_video.c	FUNCTION_31	SWITCH_1
0x4000ca7	            0x39f1	                            cmp ecx, esi	      1390	acpi_video.c	FUNCTION_31	SWITCH_1
0x4000ca9	            0x89fe	                            mov esi, edi	      1390	acpi_video.c	FUNCTION_31	SWITCH_1
0x4000cab	           0xf46f1	                         cmovbe esi, ecx	      1390	acpi_video.c	FUNCTION_31	SWITCH_1
0x4000cae	          0x4889ef	                            mov rdi, rbp	      1425	acpi_video.c	FUNCTION_32	CALL_5
0x4000cb1	      0xe8cafdffff	call sym.acpi_video_device_lcd_set_level	      1425	acpi_video.c	FUNCTION_32	CALL_5
0x4000cb6	            0x85c0	                           test eax, eax	      1427	acpi_video.c	FUNCTION_32	IF_4
0x4000cb8	     0xf8505ffffff	                           jne 0x4000bc3	      1427	acpi_video.c	FUNCTION_32	IF_4
0x4000cbe	      0x498b7c2478	            mov rdi, qword [r12 + 0x78] 	      1428	acpi_video.c	FUNCTION_32	IF_4	CALL_6
0x4000cc3	            0x31f6	                            xor esi, esi	      1428	acpi_video.c	FUNCTION_32	IF_4	CALL_6
0x4000cc5	      0xe800000000	                          call 0x4000cca	      1428	acpi_video.c	FUNCTION_32	IF_4	CALL_6
0x4000cca	      0xe900ffffff	                           jmp 0x4000bcf	      1428	acpi_video.c	FUNCTION_32	IF_4	CALL_6
0x4000ccf	            0x31f6	                            xor esi, esi	      1395	acpi_video.c	FUNCTION_31	SWITCH_1
0x4000cd1	            0xebdb	                           jmp 0x4000cae	      1395	acpi_video.c	FUNCTION_31	SWITCH_1
0x4000cd3	            0x39f2	                            cmp edx, esi	      1392	acpi_video.c	FUNCTION_31	SWITCH_1
0x4000cd5	          0x4489c6	                            mov esi, r8d	      1392	acpi_video.c	FUNCTION_31	SWITCH_1
0x4000cd8	           0xf43f2	                         cmovae esi, edx	      1392	acpi_video.c	FUNCTION_31	SWITCH_1
0x4000cdb	            0xebd1	                           jmp 0x4000cae	      1392	acpi_video.c	FUNCTION_31	SWITCH_1
0x4000cdd	            0x39f1	                            cmp ecx, esi	      1388	acpi_video.c	FUNCTION_31	SWITCH_1
0x4000cdf	            0x89fe	                            mov esi, edi	      1388	acpi_video.c	FUNCTION_31	SWITCH_1
0x4000ce1	           0xf46f2	                         cmovbe esi, edx	      1388	acpi_video.c	FUNCTION_31	SWITCH_1
0x4000ce4	            0xebc8	                           jmp 0x4000cae	      1388	acpi_video.c	FUNCTION_31	SWITCH_1
0x4000ce6	    0x418db5ff0000	                   lea esi, [r13 + 0xff]	      1373	acpi_video.c	FUNCTION_31
0x4000ced	          0x4531c0	                            xor r8d, r8d	      1361	acpi_video.c	FUNCTION_31
0x4000cf0	      0xbfff000000	                           mov edi, 0xff	      1362	acpi_video.c	FUNCTION_31
0x4000cf5	            0x31c9	                            xor ecx, ecx	      1361	acpi_video.c	FUNCTION_31
0x4000cf7	      0xbaff000000	                           mov edx, 0xff	      1362	acpi_video.c	FUNCTION_31
0x4000cfc	            0xeb91	                           jmp 0x4000c8f	      1362	acpi_video.c	FUNCTION_31
0x4000cfe	      0xe800000000	                          call 0x4000d03	      1434	acpi_video.c	FUNCTION_32
acpi_video_get_edid	IF,11:DO,0:functions,0:CALL,6:SWITCH,1:WHILE,0:FOR,1:ELSE,1	118
0x4000290	            0x4157	                                push r15	      1438	acpi_video.c	FUNCTION_33
0x4000292	            0x4156	                                push r14	      1438	acpi_video.c	FUNCTION_33
0x4000294	            0x4155	                                push r13	      1438	acpi_video.c	FUNCTION_33
0x4000296	            0x4154	                                push r12	      1438	acpi_video.c	FUNCTION_33
0x4000298	              0x55	                                push rbp	      1438	acpi_video.c	FUNCTION_33
0x4000299	              0x53	                                push rbx	      1438	acpi_video.c	FUNCTION_33
0x400029a	        0x4883ec10	                           sub rsp, 0x10	      1438	acpi_video.c	FUNCTION_33
0x400029e	    0x65488b042528	                mov rax, qword gs:[0x28]	      1438	acpi_video.c	FUNCTION_33
0x40002a7	      0x4889442408	                mov qword [rsp + 8], rax	      1438	acpi_video.c	FUNCTION_33
0x40002ac	            0x31c0	                            xor eax, eax	      1438	acpi_video.c	FUNCTION_33
0x40002ae	          0x4885ff	                           test rdi, rdi	      1445	acpi_video.c	FUNCTION_33	IF_1	CALL_1
0x40002b1	    0x48c704240000	                      mov qword [rsp], 0	      1441	acpi_video.c	FUNCTION_33
0x40002b9	     0xf8495010000	                            je 0x4000454	      1445	acpi_video.c	FUNCTION_33	IF_1	CALL_1
0x40002bf	    0x4c8bb7480200	           mov r14, qword [rdi + 0x248] 	      1445	acpi_video.c	FUNCTION_33	IF_1	CALL_1
0x40002c6	          0x4d85f6	                           test r14, r14	      1445	acpi_video.c	FUNCTION_33	IF_1	CALL_1
0x40002c9	     0xf8485010000	                            je 0x4000454	      1445	acpi_video.c	FUNCTION_33	IF_1	CALL_1
0x40002cf	            0x31db	                            xor ebx, ebx	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x40002d1	      0x41807e1800	                cmp byte [r14 + 0x18], 0	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x40002d6	          0x4189f7	                           mov r15d, esi	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x40002d9	          0x4989cc	                            mov r12, rcx	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x40002dc	          0x4863ea	                         movsxd rbp, edx	      1479	acpi_video.c	FUNCTION_33	FOR_1	ELSE_1	IF_9
0x40002df	     0xf84ab000000	                            je 0x4000390	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x40002e5	          0x4863c3	                         movsxd rax, ebx	      1451	acpi_video.c	FUNCTION_33	FOR_1
0x40002e8	        0x48c1e004	                              shl rax, 4	      1451	acpi_video.c	FUNCTION_33	FOR_1
0x40002ec	        0x49034610	             add rax, qword [r14 + 0x10]	      1451	acpi_video.c	FUNCTION_33	FOR_1
0x40002f0	        0x4c8b6808	                mov r13, qword [rax + 8]	      1451	acpi_video.c	FUNCTION_33	FOR_1
0x40002f4	          0x4d85ed	                           test r13, r13	      1454	acpi_video.c	FUNCTION_33	FOR_1	IF_2
0x40002f7	     0xf8483000000	                            je 0x4000380	      1454	acpi_video.c	FUNCTION_33	FOR_1	IF_2
0x40002fd	      0x41f6450920	               test byte [r13 + 9], 0x20	      1457	acpi_video.c	FUNCTION_33	FOR_1	IF_3
0x4000302	            0x747c	                            je 0x4000380	      1457	acpi_video.c	FUNCTION_33	FOR_1	IF_3
0x4000304	          0x4585ff	                         test r15d, r15d	      1460	acpi_video.c	FUNCTION_33	FOR_1	IF_4
0x4000307	     0xf84ab000000	                            je 0x40003b8	      1460	acpi_video.c	FUNCTION_33	FOR_1	IF_4
0x400030d	        0x4183ff02	                             cmp r15d, 2	      1461	acpi_video.c	FUNCTION_33	FOR_1	IF_4	SWITCH_1
0x4000311	     0xf84e4000000	                            je 0x40003fb	      1461	acpi_video.c	FUNCTION_33	FOR_1	IF_4	SWITCH_1
0x4000317	     0xf8eb7000000	                           jle 0x40003d4	      1461	acpi_video.c	FUNCTION_33	FOR_1	IF_4	SWITCH_1
0x400031d	        0x4183ff03	                             cmp r15d, 3	      1461	acpi_video.c	FUNCTION_33	FOR_1	IF_4	SWITCH_1
0x4000321	     0xf84f4000000	                            je 0x400041b	      1461	acpi_video.c	FUNCTION_33	FOR_1	IF_4	SWITCH_1
0x4000327	        0x4183ff04	                             cmp r15d, 4	      1461	acpi_video.c	FUNCTION_33	FOR_1	IF_4	SWITCH_1
0x400032b	            0x7507	                           jne 0x4000334	      1461	acpi_video.c	FUNCTION_33	FOR_1	IF_4	SWITCH_1
0x400032d	      0x41f6450802	                  test byte [r13 + 8], 2	      1475	acpi_video.c	FUNCTION_33	FOR_1	IF_4	SWITCH_1	IF_8
0x4000332	            0x744c	                            je 0x4000380	      1475	acpi_video.c	FUNCTION_33	FOR_1	IF_4	SWITCH_1	IF_8
0x4000334	      0xba00010000	                          mov edx, 0x100	      1483	acpi_video.c	FUNCTION_33	FOR_1	CALL_3
0x4000339	          0x4889e6	                            mov rsi, rsp	      1483	acpi_video.c	FUNCTION_33	FOR_1	CALL_3
0x400033c	          0x4c89ef	                            mov rdi, r13	      1483	acpi_video.c	FUNCTION_33	FOR_1	CALL_3
0x400033f	      0xe83cfeffff	         call sym.acpi_video_device_EDID	      1483	acpi_video.c	FUNCTION_33	FOR_1	CALL_3
0x4000344	            0x85c0	                           test eax, eax	      1485	acpi_video.c	FUNCTION_33	FOR_1	IF_10	CALL_4
0x4000346	            0x7512	                           jne 0x400035a	      1485	acpi_video.c	FUNCTION_33	FOR_1	IF_10	CALL_4
0x4000348	        0x488b1424	                    mov rdx, qword [rsp]	      1485	acpi_video.c	FUNCTION_33	FOR_1	IF_10	CALL_4
0x400034c	          0x4885d2	                           test rdx, rdx	      1485	acpi_video.c	FUNCTION_33	FOR_1	IF_10	CALL_4
0x400034f	            0x7409	                            je 0x400035a	      1485	acpi_video.c	FUNCTION_33	FOR_1	IF_10	CALL_4
0x4000351	          0x833a03	                      cmp dword [rdx], 3	      1485	acpi_video.c	FUNCTION_33	FOR_1	IF_10	CALL_4
0x4000354	     0xf84f3000000	                            je 0x400044d	      1485	acpi_video.c	FUNCTION_33	FOR_1	IF_10	CALL_4
0x400035a	      0xba80000000	                           mov edx, 0x80	      1488	acpi_video.c	FUNCTION_33	FOR_1	IF_10	CALL_5
0x400035f	          0x4889e6	                            mov rsi, rsp	      1488	acpi_video.c	FUNCTION_33	FOR_1	IF_10	CALL_5
0x4000362	          0x4c89ef	                            mov rdi, r13	      1488	acpi_video.c	FUNCTION_33	FOR_1	IF_10	CALL_5
0x4000365	      0xe816feffff	         call sym.acpi_video_device_EDID	      1488	acpi_video.c	FUNCTION_33	FOR_1	IF_10	CALL_5
0x400036a	            0x85c0	                           test eax, eax	      1490	acpi_video.c	FUNCTION_33	FOR_1	IF_10	IF_11	CALL_6
0x400036c	            0x7512	                           jne 0x4000380	      1490	acpi_video.c	FUNCTION_33	FOR_1	IF_10	IF_11	CALL_6
0x400036e	        0x488b1424	                    mov rdx, qword [rsp]	      1490	acpi_video.c	FUNCTION_33	FOR_1	IF_10	IF_11	CALL_6
0x4000372	          0x4885d2	                           test rdx, rdx	      1490	acpi_video.c	FUNCTION_33	FOR_1	IF_10	IF_11	CALL_6
0x4000375	            0x7409	                            je 0x4000380	      1490	acpi_video.c	FUNCTION_33	FOR_1	IF_10	IF_11	CALL_6
0x4000377	          0x833a03	                      cmp dword [rdx], 3	      1490	acpi_video.c	FUNCTION_33	FOR_1	IF_10	IF_11	CALL_6
0x400037a	     0xf84bb000000	                            je 0x400043b	      1490	acpi_video.c	FUNCTION_33	FOR_1	IF_10	IF_11	CALL_6
0x4000380	      0x410fb64618	           movzx eax, byte [r14 + 0x18] 	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x4000385	          0x83c301	                              add ebx, 1	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x4000388	            0x39d8	                            cmp eax, ebx	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x400038a	     0xf8f55ffffff	                            jg 0x40002e5	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x4000390	      0xb8edffffff	                     mov eax, 0xffffffed	      1500	acpi_video.c	FUNCTION_33
0x4000395	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1501	acpi_video.c	FUNCTION_33
0x400039a	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      1501	acpi_video.c	FUNCTION_33
0x40003a3	     0xf85b5000000	                           jne 0x400045e	      1501	acpi_video.c	FUNCTION_33
0x40003a9	        0x4883c410	                           add rsp, 0x10	      1501	acpi_video.c	FUNCTION_33
0x40003ad	              0x5b	                                 pop rbx	      1501	acpi_video.c	FUNCTION_33
0x40003ae	              0x5d	                                 pop rbp	      1501	acpi_video.c	FUNCTION_33
0x40003af	            0x415c	                                 pop r12	      1501	acpi_video.c	FUNCTION_33
0x40003b1	            0x415d	                                 pop r13	      1501	acpi_video.c	FUNCTION_33
0x40003b3	            0x415e	                                 pop r14	      1501	acpi_video.c	FUNCTION_33
0x40003b5	            0x415f	                                 pop r15	      1501	acpi_video.c	FUNCTION_33
0x40003b7	              0xc3	                                     ret	      1501	acpi_video.c	FUNCTION_33
0x40003b8	        0x49396d00	                    cmp qword [r13], rbp	      1479	acpi_video.c	FUNCTION_33	FOR_1	ELSE_1	IF_9
0x40003bc	     0xf8472ffffff	                            je 0x4000334	      1479	acpi_video.c	FUNCTION_33	FOR_1	ELSE_1	IF_9
0x40003c2	      0x410fb64618	           movzx eax, byte [r14 + 0x18] 	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x40003c7	          0x83c301	                              add ebx, 1	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x40003ca	            0x39d8	                            cmp eax, ebx	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x40003cc	     0xf8f13ffffff	                            jg 0x40002e5	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x40003d2	            0xebbc	                           jmp 0x4000390	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x40003d4	        0x4183ff01	                             cmp r15d, 1	      1461	acpi_video.c	FUNCTION_33	FOR_1	IF_4	SWITCH_1
0x40003d8	     0xf8556ffffff	                           jne 0x4000334	      1461	acpi_video.c	FUNCTION_33	FOR_1	IF_4	SWITCH_1
0x40003de	      0x41f6450801	                  test byte [r13 + 8], 1	      1463	acpi_video.c	FUNCTION_33	FOR_1	IF_4	SWITCH_1	IF_5
0x40003e3	     0xf854bffffff	                           jne 0x4000334	      1463	acpi_video.c	FUNCTION_33	FOR_1	IF_4	SWITCH_1	IF_5
0x40003e9	      0x410fb64618	           movzx eax, byte [r14 + 0x18] 	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x40003ee	          0x83c301	                              add ebx, 1	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x40003f1	            0x39d8	                            cmp eax, ebx	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x40003f3	     0xf8fecfeffff	                            jg 0x40002e5	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x40003f9	            0xeb95	                           jmp 0x4000390	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x40003fb	      0x41f6450804	                  test byte [r13 + 8], 4	      1467	acpi_video.c	FUNCTION_33	FOR_1	IF_4	SWITCH_1	IF_6
0x4000400	     0xf852effffff	                           jne 0x4000334	      1467	acpi_video.c	FUNCTION_33	FOR_1	IF_4	SWITCH_1	IF_6
0x4000406	      0x410fb64618	           movzx eax, byte [r14 + 0x18] 	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x400040b	          0x83c301	                              add ebx, 1	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x400040e	            0x39d8	                            cmp eax, ebx	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x4000410	     0xf8fcffeffff	                            jg 0x40002e5	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x4000416	      0xe975ffffff	                           jmp 0x4000390	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x400041b	      0x41f6450808	                  test byte [r13 + 8], 8	      1471	acpi_video.c	FUNCTION_33	FOR_1	IF_4	SWITCH_1	IF_7
0x4000420	     0xf850effffff	                           jne 0x4000334	      1471	acpi_video.c	FUNCTION_33	FOR_1	IF_4	SWITCH_1	IF_7
0x4000426	      0x410fb64618	           movzx eax, byte [r14 + 0x18] 	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x400042b	          0x83c301	                              add ebx, 1	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x400042e	            0x39d8	                            cmp eax, ebx	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x4000430	     0xf8faffeffff	                            jg 0x40002e5	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x4000436	      0xe955ffffff	                           jmp 0x4000390	      1450	acpi_video.c	FUNCTION_33	FOR_1
0x400043b	      0xb880000000	                           mov eax, 0x80	      1487	acpi_video.c	FUNCTION_33	FOR_1	IF_10
0x4000440	        0x488b5208	                mov rdx, qword [rdx + 8]	      1496	acpi_video.c	FUNCTION_33	FOR_1
0x4000444	        0x49891424	                    mov qword [r12], rdx	      1496	acpi_video.c	FUNCTION_33	FOR_1
0x4000448	      0xe948ffffff	                           jmp 0x4000395	      1497	acpi_video.c	FUNCTION_33	FOR_1
0x400044d	      0xb800010000	                          mov eax, 0x100	      1452	acpi_video.c	FUNCTION_33	FOR_1
0x4000452	            0xebec	                           jmp 0x4000440	      1452	acpi_video.c	FUNCTION_33	FOR_1
0x4000454	      0xb8eaffffff	                     mov eax, 0xffffffea	      1446	acpi_video.c	FUNCTION_33	IF_1
0x4000459	      0xe937ffffff	                           jmp 0x4000395	      1446	acpi_video.c	FUNCTION_33	IF_1
0x400045e	      0xe800000000	                          call 0x4000463	      1501	acpi_video.c	FUNCTION_33
acpi_video_bus_stop_devices	IF,0:DO,0:functions,0:CALL,2:SWITCH,0:WHILE,0:FOR,0:ELSE,0	8
0x4001550	              0x53	                                push rbx	      1543	acpi_video.c	FUNCTION_36
0x4001551	          0x4889fb	                            mov rbx, rdi	      1543	acpi_video.c	FUNCTION_36
0x4001554	      0xe800000000	                          call 0x4001559	      1545	acpi_video.c	FUNCTION_36	CALL_2
0x4001559	          0x4889df	                            mov rdi, rbx	      1544	acpi_video.c	FUNCTION_36	CALL_1
0x400155c	          0x83f001	                              xor eax, 1	      1544	acpi_video.c	FUNCTION_36	CALL_1
0x400155f	              0x5b	                                 pop rbx	      1546	acpi_video.c	FUNCTION_36
0x4001560	           0xfb6f0	                           movzx esi, al	      1544	acpi_video.c	FUNCTION_36	CALL_1
0x4001563	            0xebab	 jmp sym.acpi_video_bus_DOS.constprop.19	      1544	acpi_video.c	FUNCTION_36	CALL_1
video_get_cur_state	IF,2:DO,0:functions,0:CALL,2:SWITCH,0:WHILE,0:FOR,1:ELSE,0	49
0x4000670	              0x55	                                push rbp	       279	acpi_video.c	FUNCTION_4
0x4000671	              0x53	                                push rbx	       279	acpi_video.c	FUNCTION_4
0x4000672	            0x31d2	                            xor edx, edx	       285	acpi_video.c	FUNCTION_4	IF_1	CALL_2
0x4000674	          0x4889f3	                            mov rbx, rsi	       279	acpi_video.c	FUNCTION_4
0x4000677	        0x4883ec10	                           sub rsp, 0x10	       279	acpi_video.c	FUNCTION_4
0x400067b	    0x65488b042528	                mov rax, qword gs:[0x28]	       279	acpi_video.c	FUNCTION_4
0x4000684	      0x4889442408	                mov qword [rsp + 8], rax	       279	acpi_video.c	FUNCTION_4
0x4000689	            0x31c0	                            xor eax, eax	       279	acpi_video.c	FUNCTION_4
0x400068b	    0x488b87f00200	           mov rax, qword [rdi + 0x2f0] 	       279	acpi_video.c	FUNCTION_4
0x4000692	          0x4889e6	                            mov rsi, rsp	       285	acpi_video.c	FUNCTION_4	IF_1	CALL_2
0x4000695	    0x488ba8480200	           mov rbp, qword [rax + 0x248] 	       285	acpi_video.c	FUNCTION_4	IF_1	CALL_2
0x400069c	          0x4889ef	                            mov rdi, rbp	       285	acpi_video.c	FUNCTION_4	IF_1	CALL_2
0x400069f	      0xe88cfeffff	call sym.acpi_video_device_lcd_get_level_current	       285	acpi_video.c	FUNCTION_4	IF_1	CALL_2
0x40006a4	            0x85c0	                           test eax, eax	       285	acpi_video.c	FUNCTION_4	IF_1	CALL_2
0x40006a6	            0x753e	                           jne 0x40006e6	       285	acpi_video.c	FUNCTION_4	IF_1	CALL_2
0x40006a8	    0x488b95900000	            mov rdx, qword [rbp + 0x90] 	       287	acpi_video.c	FUNCTION_4	FOR_1
0x40006af	          0x8b7a04	                mov edi, dword [rdx + 4]	       287	acpi_video.c	FUNCTION_4	FOR_1
0x40006b2	          0x83ff02	                              cmp edi, 2	       287	acpi_video.c	FUNCTION_4	FOR_1
0x40006b5	            0x7e2f	                           jle 0x40006e6	       287	acpi_video.c	FUNCTION_4	FOR_1
0x40006b7	        0x488b5208	                mov rdx, qword [rdx + 8]	       289	acpi_video.c	FUNCTION_4	FOR_1	IF_2
0x40006bb	        0x4c8b0424	                     mov r8, qword [rsp]	       289	acpi_video.c	FUNCTION_4	FOR_1	IF_2
0x40006bf	        0x48634a08	            movsxd rcx, dword [rdx + 8] 	       289	acpi_video.c	FUNCTION_4	FOR_1	IF_2
0x40006c3	          0x4c39c1	                             cmp rcx, r8	       289	acpi_video.c	FUNCTION_4	FOR_1	IF_2
0x40006c6	            0x743a	                            je 0x4000702	       289	acpi_video.c	FUNCTION_4	FOR_1	IF_2
0x40006c8	        0x4883c20c	                            add rdx, 0xc	       289	acpi_video.c	FUNCTION_4	FOR_1	IF_2
0x40006cc	      0xb902000000	                              mov ecx, 2	       289	acpi_video.c	FUNCTION_4	FOR_1	IF_2
0x40006d1	            0xeb0c	                           jmp 0x40006df	       289	acpi_video.c	FUNCTION_4	FOR_1	IF_2
0x40006d3	          0x486332	                 movsxd rsi, dword [rdx]	       289	acpi_video.c	FUNCTION_4	FOR_1	IF_2
0x40006d6	        0x4883c204	                              add rdx, 4	       289	acpi_video.c	FUNCTION_4	FOR_1	IF_2
0x40006da	          0x4c39c6	                             cmp rsi, r8	       289	acpi_video.c	FUNCTION_4	FOR_1	IF_2
0x40006dd	            0x7428	                            je 0x4000707	       289	acpi_video.c	FUNCTION_4	FOR_1	IF_2
0x40006df	          0x83c101	                              add ecx, 1	       288	acpi_video.c	FUNCTION_4	FOR_1
0x40006e2	            0x39f9	                            cmp ecx, edi	       287	acpi_video.c	FUNCTION_4	FOR_1
0x40006e4	            0x75ed	                           jne 0x40006d3	       287	acpi_video.c	FUNCTION_4	FOR_1
0x40006e6	      0xb8eaffffff	                     mov eax, 0xffffffea	       286	acpi_video.c	FUNCTION_4	IF_1
0x40006eb	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       295	acpi_video.c	FUNCTION_4
0x40006f0	    0x6548331c2528	                xor rbx, qword gs:[0x28]	       295	acpi_video.c	FUNCTION_4
0x40006f9	            0x7519	                           jne 0x4000714	       295	acpi_video.c	FUNCTION_4
0x40006fb	        0x4883c410	                           add rsp, 0x10	       295	acpi_video.c	FUNCTION_4
0x40006ff	              0x5b	                                 pop rbx	       295	acpi_video.c	FUNCTION_4
0x4000700	              0x5d	                                 pop rbp	       295	acpi_video.c	FUNCTION_4
0x4000701	              0xc3	                                     ret	       295	acpi_video.c	FUNCTION_4
0x4000702	      0xb902000000	                              mov ecx, 2	       289	acpi_video.c	FUNCTION_4	FOR_1	IF_2
0x4000707	            0x29cf	                            sub edi, ecx	       290	acpi_video.c	FUNCTION_4	FOR_1	IF_2
0x4000709	          0x8d57ff	                      lea edx, [rdi - 1]	       290	acpi_video.c	FUNCTION_4	FOR_1	IF_2
0x400070c	          0x4863d2	                         movsxd rdx, edx	       290	acpi_video.c	FUNCTION_4	FOR_1	IF_2
0x400070f	          0x488913	                    mov qword [rbx], rdx	       290	acpi_video.c	FUNCTION_4	FOR_1	IF_2
0x4000712	            0xebd7	                           jmp 0x40006eb	       291	acpi_video.c	FUNCTION_4	FOR_1	IF_2
0x4000714	      0xe800000000	                          call 0x4000719	       295	acpi_video.c	FUNCTION_4
acpi_video_get_brightness	IF,2:DO,0:functions,0:CALL,2:SWITCH,0:WHILE,0:FOR,1:ELSE,0	43
0x4000720	              0x53	                                push rbx	       237	acpi_video.c	FUNCTION_1
0x4000721	            0x31d2	                            xor edx, edx	       242	acpi_video.c	FUNCTION_1	IF_1	CALL_2
0x4000723	        0x4883ec10	                           sub rsp, 0x10	       237	acpi_video.c	FUNCTION_1
0x4000727	    0x488b9f200100	           mov rbx, qword [rdi + 0x120] 	       237	acpi_video.c	FUNCTION_1
0x400072e	          0x4889e6	                            mov rsi, rsp	       242	acpi_video.c	FUNCTION_1	IF_1	CALL_2
0x4000731	    0x65488b042528	                mov rax, qword gs:[0x28]	       237	acpi_video.c	FUNCTION_1
0x400073a	      0x4889442408	                mov qword [rsp + 8], rax	       237	acpi_video.c	FUNCTION_1
0x400073f	            0x31c0	                            xor eax, eax	       237	acpi_video.c	FUNCTION_1
0x4000741	          0x4889df	                            mov rdi, rbx	       242	acpi_video.c	FUNCTION_1	IF_1	CALL_2
0x4000744	      0xe8e7fdffff	call sym.acpi_video_device_lcd_get_level_current	       242	acpi_video.c	FUNCTION_1	IF_1	CALL_2
0x4000749	            0x85c0	                           test eax, eax	       242	acpi_video.c	FUNCTION_1	IF_1	CALL_2
0x400074b	            0x755e	                           jne 0x40007ab	       242	acpi_video.c	FUNCTION_1	IF_1	CALL_2
0x400074d	    0x488b93900000	            mov rdx, qword [rbx + 0x90] 	       244	acpi_video.c	FUNCTION_1	FOR_1
0x4000754	        0x448b4204	                mov r8d, dword [rdx + 4]	       244	acpi_video.c	FUNCTION_1	FOR_1
0x4000758	        0x4183f802	                              cmp r8d, 2	       244	acpi_video.c	FUNCTION_1	FOR_1
0x400075c	            0x7e32	                           jle 0x4000790	       244	acpi_video.c	FUNCTION_1	FOR_1
0x400075e	        0x488b5208	                mov rdx, qword [rdx + 8]	       245	acpi_video.c	FUNCTION_1	FOR_1	IF_2
0x4000762	        0x4c8b0c24	                     mov r9, qword [rsp]	       245	acpi_video.c	FUNCTION_1	FOR_1	IF_2
0x4000766	      0xbe02000000	                              mov esi, 2	       245	acpi_video.c	FUNCTION_1	FOR_1	IF_2
0x400076b	        0x48634a08	            movsxd rcx, dword [rdx + 8] 	       245	acpi_video.c	FUNCTION_1	FOR_1	IF_2
0x400076f	        0x4883c20c	                            add rdx, 0xc	       245	acpi_video.c	FUNCTION_1	FOR_1	IF_2
0x4000773	          0x4c39c9	                             cmp rcx, r9	       245	acpi_video.c	FUNCTION_1	FOR_1	IF_2
0x4000776	            0x7510	                           jne 0x4000788	       245	acpi_video.c	FUNCTION_1	FOR_1	IF_2
0x4000778	            0xeb16	                           jmp 0x4000790	       245	acpi_video.c	FUNCTION_1	FOR_1	IF_2
0x400077a	          0x48633a	                 movsxd rdi, dword [rdx]	       245	acpi_video.c	FUNCTION_1	FOR_1	IF_2
0x400077d	        0x4883c204	                              add rdx, 4	       245	acpi_video.c	FUNCTION_1	FOR_1	IF_2
0x4000781	          0x4c39cf	                             cmp rdi, r9	       245	acpi_video.c	FUNCTION_1	FOR_1	IF_2
0x4000784	            0x7420	                            je 0x40007a6	       245	acpi_video.c	FUNCTION_1	FOR_1	IF_2
0x4000786	            0x89ce	                            mov esi, ecx	       245	acpi_video.c	FUNCTION_1	FOR_1	IF_2
0x4000788	          0x8d4e01	                      lea ecx, [rsi + 1]	       244	acpi_video.c	FUNCTION_1	FOR_1
0x400078b	          0x4439c1	                            cmp ecx, r8d	       244	acpi_video.c	FUNCTION_1	FOR_1
0x400078e	            0x75ea	                           jne 0x400077a	       244	acpi_video.c	FUNCTION_1	FOR_1
0x4000790	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       249	acpi_video.c	FUNCTION_1
0x4000795	    0x6548331c2528	                xor rbx, qword gs:[0x28]	       249	acpi_video.c	FUNCTION_1
0x400079e	            0x7512	                           jne 0x40007b2	       249	acpi_video.c	FUNCTION_1
0x40007a0	        0x4883c410	                           add rsp, 0x10	       249	acpi_video.c	FUNCTION_1
0x40007a4	              0x5b	                                 pop rbx	       249	acpi_video.c	FUNCTION_1
0x40007a5	              0xc3	                                     ret	       249	acpi_video.c	FUNCTION_1
0x40007a6	          0x8d46ff	                      lea eax, [rsi - 1]	       249	acpi_video.c	FUNCTION_1
0x40007a9	            0xebe5	                           jmp 0x4000790	       246	acpi_video.c	FUNCTION_1	FOR_1	IF_2
0x40007ab	      0xb8eaffffff	                     mov eax, 0xffffffea	       243	acpi_video.c	FUNCTION_1	IF_1
0x40007b0	            0xebde	                           jmp 0x4000790	       243	acpi_video.c	FUNCTION_1	IF_1
0x40007b2	      0xe800000000	                          call 0x40007b7	       249	acpi_video.c	FUNCTION_1
video_set_report_key_events	IF,1:DO,0:functions,0:CALL,0:SWITCH,0:WHILE,0:FOR,0:ELSE,0	6
0x40000c0	    0x833d00000000	cmp dword [0x040000c7], 0xffffffffffffffff	       416	acpi_video.c	FUNCTION_12	IF_1
0x40000c7	            0x750d	                           jne 0x40000d6	       416	acpi_video.c	FUNCTION_12	IF_1
0x40000c9	    0x488b87500100	           mov rax, qword [rdi + 0x150] 	       417	acpi_video.c	FUNCTION_12	IF_1
0x40000d0	    0x890500000000	            mov dword [0x040000d6], eax 	       417	acpi_video.c	FUNCTION_12	IF_1
0x40000d6	            0x31c0	                            xor eax, eax	       419	acpi_video.c	FUNCTION_12
0x40000d8	              0xc3	                                     ret	       419	acpi_video.c	FUNCTION_12
acpi_video_set_brightness	IF,0:DO,0:functions,0:CALL,3:SWITCH,0:WHILE,0:FOR,0:ELSE,0	15
0x4000d10	              0x55	                                push rbp	       252	acpi_video.c	FUNCTION_2
0x4000d11	              0x53	                                push rbx	       252	acpi_video.c	FUNCTION_2
0x4000d12	    0x488baf200100	           mov rbp, qword [rdi + 0x120] 	       252	acpi_video.c	FUNCTION_2
0x4000d19	            0x8b07	                    mov eax, dword [rdi]	       253	acpi_video.c	FUNCTION_2
0x4000d1b	        0x488d7d20	                   lea rdi, [rbp + 0x20]	       256	acpi_video.c	FUNCTION_2	CALL_2
0x4000d1f	          0x8d5802	                      lea ebx, [rax + 2]	       253	acpi_video.c	FUNCTION_2
0x4000d22	      0xe800000000	                          call 0x4000d27	       256	acpi_video.c	FUNCTION_2	CALL_2
0x4000d27	    0x488b85900000	            mov rax, qword [rbp + 0x90] 	       258	acpi_video.c	FUNCTION_2
0x4000d2e	          0x4863db	                         movsxd rbx, ebx	       257	acpi_video.c	FUNCTION_2	CALL_3
0x4000d31	          0x4889ef	                            mov rdi, rbp	       257	acpi_video.c	FUNCTION_2	CALL_3
0x4000d34	        0x488b4008	                mov rax, qword [rax + 8]	       257	acpi_video.c	FUNCTION_2	CALL_3
0x4000d38	          0x8b3498	            mov esi, dword [rax + rbx*4]	       257	acpi_video.c	FUNCTION_2	CALL_3
0x4000d3b	              0x5b	                                 pop rbx	       259	acpi_video.c	FUNCTION_2
0x4000d3c	              0x5d	                                 pop rbp	       259	acpi_video.c	FUNCTION_2
0x4000d3d	      0xe93efdffff	 jmp sym.acpi_video_device_lcd_set_level	       257	acpi_video.c	FUNCTION_2	CALL_3
video_enable_only_lcd	IF,0:DO,0:functions,0:CALL,0:SWITCH,0:WHILE,0:FOR,0:ELSE,0	3
0x40000b0	    0xc70500000000	               mov dword [0x040000ba], 1	       410	acpi_video.c	FUNCTION_11
0x40000ba	            0x31c0	                            xor eax, eax	       412	acpi_video.c	FUNCTION_11
0x40000bc	              0xc3	                                     ret	       412	acpi_video.c	FUNCTION_11
acpi_video_unregister	IF,1:DO,0:functions,0:CALL,3:SWITCH,0:WHILE,0:FOR,0:ELSE,0	10
0x40008d0	    0x48c7c7000000	                              mov rdi, 0	      2192	acpi_video.c	FUNCTION_59	CALL_1
0x40008d7	      0xe800000000	                          call 0x40008dc	      2192	acpi_video.c	FUNCTION_59	CALL_1
0x40008dc	    0x8b0500000000	            mov eax, dword [0x040008e2] 	      2193	acpi_video.c	FUNCTION_59	IF_1
0x40008e2	            0x85c0	                           test eax, eax	      2193	acpi_video.c	FUNCTION_59	IF_1
0x40008e4	            0x7416	                            je 0x40008fc	      2193	acpi_video.c	FUNCTION_59	IF_1
0x40008e6	    0x48c7c7000000	                              mov rdi, 0	      2194	acpi_video.c	FUNCTION_59	IF_1	CALL_2
0x40008ed	      0xe800000000	                          call 0x40008f2	      2194	acpi_video.c	FUNCTION_59	IF_1	CALL_2
0x40008f2	    0xc70500000000	               mov dword [0x040008fc], 0	      2195	acpi_video.c	FUNCTION_59	IF_1
0x40008fc	    0x48c7c7000000	                              mov rdi, 0	      2197	acpi_video.c	FUNCTION_59	CALL_3
0x4000903	      0xe900000000	                           jmp 0x4000908	      2197	acpi_video.c	FUNCTION_59	CALL_3
video_set_cur_state	IF,1:DO,0:functions,0:CALL,2:SWITCH,0:WHILE,0:FOR,0:ELSE,0	14
0x4000b40	    0x488b87f00200	           mov rax, qword [rdi + 0x2f0] 	       299	acpi_video.c	FUNCTION_5
0x4000b47	    0x488bb8480200	           mov rdi, qword [rax + 0x248] 	       299	acpi_video.c	FUNCTION_5
0x4000b4e	    0x488b8f900000	            mov rcx, qword [rdi + 0x90] 	       304	acpi_video.c	FUNCTION_5	IF_1
0x4000b55	        0x48634104	            movsxd rax, dword [rcx + 4] 	       304	acpi_video.c	FUNCTION_5	IF_1
0x4000b59	          0x8d50fe	                      lea edx, [rax - 2]	       304	acpi_video.c	FUNCTION_5	IF_1
0x4000b5c	          0x4863d2	                         movsxd rdx, edx	       304	acpi_video.c	FUNCTION_5	IF_1
0x4000b5f	          0x4839f2	                            cmp rdx, rsi	       304	acpi_video.c	FUNCTION_5	IF_1
0x4000b62	            0x7610	                           jbe 0x4000b74	       304	acpi_video.c	FUNCTION_5	IF_1
0x4000b64	        0x488b5108	                mov rdx, qword [rcx + 8]	       308	acpi_video.c	FUNCTION_5
0x4000b68	          0x4829f0	                            sub rax, rsi	       308	acpi_video.c	FUNCTION_5
0x4000b6b	        0x8b7482fc	        mov esi, dword [rdx + rax*4 - 4]	       309	acpi_video.c	FUNCTION_5	CALL_2
0x4000b6f	      0xe90cffffff	 jmp sym.acpi_video_device_lcd_set_level	       309	acpi_video.c	FUNCTION_5	CALL_2
0x4000b74	      0xb8eaffffff	                     mov eax, 0xffffffea	       310	acpi_video.c	FUNCTION_5
0x4000b79	              0xc3	                                     ret	       310	acpi_video.c	FUNCTION_5
video_get_max_state	IF,0:DO,0:functions,0:CALL,1:SWITCH,0:WHILE,0:FOR,0:ELSE,0	9
0x4000040	    0x488b87f00200	           mov rax, qword [rdi + 0x2f0] 	       269	acpi_video.c	FUNCTION_3
0x4000047	    0x488b80480200	           mov rax, qword [rax + 0x248] 	       273	acpi_video.c	FUNCTION_3
0x400004e	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       273	acpi_video.c	FUNCTION_3
0x4000055	          0x8b4004	                mov eax, dword [rax + 4]	       273	acpi_video.c	FUNCTION_3
0x4000058	          0x83e803	                              sub eax, 3	       273	acpi_video.c	FUNCTION_3
0x400005b	            0x4898	                                    cdqe	       273	acpi_video.c	FUNCTION_3
0x400005d	          0x488906	                    mov qword [rsi], rax	       273	acpi_video.c	FUNCTION_3
0x4000060	            0x31c0	                            xor eax, eax	       275	acpi_video.c	FUNCTION_3
0x4000062	              0xc3	                                     ret	       275	acpi_video.c	FUNCTION_3
acpi_video_unregister_backlight	IF,1:DO,0:functions,0:CALL,6:SWITCH,0:WHILE,0:FOR,0:ELSE,0	33
0x4002410	              0x53	                                push rbx	      2202	acpi_video.c	FUNCTION_60
0x4002411	    0x48c7c7000000	                              mov rdi, 0	      2205	acpi_video.c	FUNCTION_60	CALL_1
0x4002418	      0xe800000000	                          call 0x400241d	      2205	acpi_video.c	FUNCTION_60	CALL_1
0x400241d	    0x8b0500000000	            mov eax, dword [0x04002423] 	      2206	acpi_video.c	FUNCTION_60	IF_1
0x4002423	            0x85c0	                           test eax, eax	      2206	acpi_video.c	FUNCTION_60	IF_1
0x4002425	            0x750d	                           jne 0x4002434	      2206	acpi_video.c	FUNCTION_60	IF_1
0x4002427	              0x5b	                                 pop rbx	      2213	acpi_video.c	FUNCTION_60
0x4002428	    0x48c7c7000000	                              mov rdi, 0	      2212	acpi_video.c	FUNCTION_60	CALL_6
0x400242f	      0xe900000000	                           jmp 0x4002434	      2212	acpi_video.c	FUNCTION_60	CALL_6
0x4002434	    0x48c7c7000000	                              mov rdi, 0	      2207	acpi_video.c	FUNCTION_60	IF_1	CALL_2
0x400243b	      0xe800000000	                          call 0x4002440	      2207	acpi_video.c	FUNCTION_60	IF_1	CALL_2
0x4002440	    0x488b05000000	            mov rax, qword [0x04002447] 	      2208	acpi_video.c	FUNCTION_60	IF_1	CALL_3
0x4002447	    0x483d00000000	                              cmp rax, 0	      2208	acpi_video.c	FUNCTION_60	IF_1	CALL_3
0x400244d	        0x488d58b0	                   lea rbx, [rax - 0x50]	      2208	acpi_video.c	FUNCTION_60	IF_1	CALL_3
0x4002451	            0x7512	                           jne 0x4002465	      2208	acpi_video.c	FUNCTION_60	IF_1	CALL_3
0x4002453	            0xeb2e	                           jmp 0x4002483	      2208	acpi_video.c	FUNCTION_60	IF_1	CALL_3
0x4002455	        0x488b4350	            mov rax, qword [rbx + 0x50] 	      2208	acpi_video.c	FUNCTION_60	IF_1	CALL_3
0x4002459	    0x483d00000000	                              cmp rax, 0	      2208	acpi_video.c	FUNCTION_60	IF_1	CALL_3
0x400245f	        0x488d58b0	                   lea rbx, [rax - 0x50]	      2208	acpi_video.c	FUNCTION_60	IF_1	CALL_3
0x4002463	            0x741e	                            je 0x4002483	      2208	acpi_video.c	FUNCTION_60	IF_1	CALL_3
0x4002465	        0x807b0800	                   cmp byte [rbx + 8], 0	      1872	acpi_video.c	FUNCTION_47	IF_1
0x4002469	            0x74ea	                            je 0x4002455	      1872	acpi_video.c	FUNCTION_47	IF_1
0x400246b	          0x4889df	                            mov rdi, rbx	      1872	acpi_video.c	FUNCTION_47	IF_1
0x400246e	      0xe8dde8ffff	call sym.acpi_video_bus_unregister_backlight.part.15	      1872	acpi_video.c	FUNCTION_47	IF_1
0x4002473	        0x488b4350	            mov rax, qword [rbx + 0x50] 	      2208	acpi_video.c	FUNCTION_60	IF_1	CALL_3
0x4002477	    0x483d00000000	                              cmp rax, 0	      2208	acpi_video.c	FUNCTION_60	IF_1	CALL_3
0x400247d	        0x488d58b0	                   lea rbx, [rax - 0x50]	      2208	acpi_video.c	FUNCTION_60	IF_1	CALL_3
0x4002481	            0x75e2	                           jne 0x4002465	      2208	acpi_video.c	FUNCTION_60	IF_1	CALL_3
0x4002483	    0x48c7c7000000	                              mov rdi, 0	      2210	acpi_video.c	FUNCTION_60	IF_1	CALL_5
0x400248a	      0xe800000000	                          call 0x400248f	      2210	acpi_video.c	FUNCTION_60	IF_1	CALL_5
0x400248f	              0x5b	                                 pop rbx	      2213	acpi_video.c	FUNCTION_60
0x4002490	    0x48c7c7000000	                              mov rdi, 0	      2212	acpi_video.c	FUNCTION_60	CALL_6
0x4002497	      0xe900000000	                   jmp section_end..text	      2212	acpi_video.c	FUNCTION_60	CALL_6
acpi_video_device_lcd_get_level_current	IF,4:DO,0:functions,0:CALL,5:SWITCH,0:WHILE,0:FOR,1:ELSE,1	88
0x4000530	            0x4155	                                push r13	       578	acpi_video.c	FUNCTION_14
0x4000532	            0x4154	                                push r12	       578	acpi_video.c	FUNCTION_14
0x4000534	              0x55	                                push rbp	       578	acpi_video.c	FUNCTION_14
0x4000535	              0x53	                                push rbx	       578	acpi_video.c	FUNCTION_14
0x4000536	          0x4889f5	                            mov rbp, rsi	       578	acpi_video.c	FUNCTION_14
0x4000539	         0xfb64709	               movzx eax, byte [rdi + 9]	       582	acpi_video.c	FUNCTION_14	IF_1
0x400053d	          0x4889fb	                            mov rbx, rdi	       578	acpi_video.c	FUNCTION_14
0x4000540	            0xa818	                           test al, 0x18	       582	acpi_video.c	FUNCTION_14	IF_1
0x4000542	     0xf84d9000000	                            je 0x4000621	       582	acpi_video.c	FUNCTION_14	IF_1
0x4000548	            0xa808	                              test al, 8	       583	acpi_video.c	FUNCTION_14	IF_1
0x400054a	    0x49c7c4000000	                              mov r12, 0	       583	acpi_video.c	FUNCTION_14	IF_1
0x4000551	    0x48c7c0000000	                              mov rax, 0	       583	acpi_video.c	FUNCTION_14	IF_1
0x4000558	        0x4c0f44e0	                          cmove r12, rax	       583	acpi_video.c	FUNCTION_14	IF_1
0x400055c	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	       585	acpi_video.c	FUNCTION_14	IF_1	CALL_1
0x4000563	          0x4889f1	                            mov rcx, rsi	       585	acpi_video.c	FUNCTION_14	IF_1	CALL_1
0x4000566	          0x4189d5	                           mov r13d, edx	       585	acpi_video.c	FUNCTION_14	IF_1	CALL_1
0x4000569	          0x4c89e6	                            mov rsi, r12	       585	acpi_video.c	FUNCTION_14	IF_1	CALL_1
0x400056c	            0x31d2	                            xor edx, edx	       585	acpi_video.c	FUNCTION_14	IF_1	CALL_1
0x400056e	        0x488b7808	                mov rdi, qword [rax + 8]	       585	acpi_video.c	FUNCTION_14	IF_1	CALL_1
0x4000572	      0xe800000000	                          call 0x4000577	       585	acpi_video.c	FUNCTION_14	IF_1	CALL_1
0x4000577	            0x85c0	                           test eax, eax	       587	acpi_video.c	FUNCTION_14	IF_1	IF_2	CALL_2
0x4000579	     0xf85b9000000	                           jne 0x4000638	       587	acpi_video.c	FUNCTION_14	IF_1	IF_2	CALL_2
0x400057f	          0x4584ed	                         test r13b, r13b	       588	acpi_video.c	FUNCTION_14	IF_1	IF_2	IF_3
0x4000582	     0xf85a7000000	                           jne 0x400062f	       588	acpi_video.c	FUNCTION_14	IF_1	IF_2	IF_3
0x4000588	    0x488b93900000	            mov rdx, qword [rbx + 0x90] 	       588	acpi_video.c	FUNCTION_14	IF_1	IF_2	IF_3
0x400058f	        0x488b4500	                    mov rax, qword [rbp]	       597	acpi_video.c	FUNCTION_14	IF_1	IF_2	CALL_3
0x4000593	         0xfb64a10	           movzx ecx, byte [rdx + 0x10] 	       554	acpi_video.c	FUNCTION_13	IF_1
0x4000597	          0xf6c104	                              test cl, 4	       554	acpi_video.c	FUNCTION_13	IF_1
0x400059a	            0x741d	                            je 0x40005b9	       554	acpi_video.c	FUNCTION_13	IF_1
0x400059c	          0x83e102	                              and ecx, 2	       560	acpi_video.c	FUNCTION_13	IF_1	IF_2
0x400059f	            0x740f	                            je 0x40005b0	       560	acpi_video.c	FUNCTION_13	IF_1	IF_2
0x40005a1	          0x8b7a04	                mov edi, dword [rdx + 4]	       561	acpi_video.c	FUNCTION_13	IF_1	IF_2
0x40005a4	          0x8d4ffd	                      lea ecx, [rdi - 3]	       561	acpi_video.c	FUNCTION_13	IF_1	IF_2
0x40005a7	          0x4863c9	                         movsxd rcx, ecx	       561	acpi_video.c	FUNCTION_13	IF_1	IF_2
0x40005aa	          0x4829c1	                            sub rcx, rax	       561	acpi_video.c	FUNCTION_13	IF_1	IF_2
0x40005ad	          0x4889c8	                            mov rax, rcx	       561	acpi_video.c	FUNCTION_13	IF_1	IF_2
0x40005b0	        0x488b5208	                mov rdx, qword [rdx + 8]	       564	acpi_video.c	FUNCTION_13	IF_1
0x40005b4	      0x4863448208	    movsxd rax, dword [rdx + rax*4 + 8] 	       564	acpi_video.c	FUNCTION_13	IF_1
0x40005b9	    0x48630d000000	         movsxd rcx, dword [0x040005c0] 	       570	acpi_video.c	FUNCTION_13
0x40005c0	          0x4801c1	                            add rcx, rax	       570	acpi_video.c	FUNCTION_13
0x40005c3	        0x48894d00	                    mov qword [rbp], rcx	       597	acpi_video.c	FUNCTION_14	IF_1	IF_2	CALL_3
0x40005c7	    0x488bbb900000	            mov rdi, qword [rbx + 0x90] 	       600	acpi_video.c	FUNCTION_14	IF_1	IF_2	FOR_1
0x40005ce	          0x8b7704	                mov esi, dword [rdi + 4]	       600	acpi_video.c	FUNCTION_14	IF_1	IF_2	FOR_1
0x40005d1	          0x83fe02	                              cmp esi, 2	       599	acpi_video.c	FUNCTION_14	IF_1	IF_2	FOR_1
0x40005d4	            0x7e2c	                           jle 0x4000602	       599	acpi_video.c	FUNCTION_14	IF_1	IF_2	FOR_1
0x40005d6	        0x488b5708	                mov rdx, qword [rdi + 8]	       601	acpi_video.c	FUNCTION_14	IF_1	IF_2	FOR_1	IF_4
0x40005da	        0x48634208	            movsxd rax, dword [rdx + 8] 	       601	acpi_video.c	FUNCTION_14	IF_1	IF_2	FOR_1	IF_4
0x40005de	          0x4839c1	                            cmp rcx, rax	       601	acpi_video.c	FUNCTION_14	IF_1	IF_2	FOR_1	IF_4
0x40005e1	            0x7476	                            je 0x4000659	       601	acpi_video.c	FUNCTION_14	IF_1	IF_2	FOR_1	IF_4
0x40005e3	          0x83ee03	                              sub esi, 3	       601	acpi_video.c	FUNCTION_14	IF_1	IF_2	FOR_1	IF_4
0x40005e6	        0x488d420c	                    lea rax, [rdx + 0xc]	       601	acpi_video.c	FUNCTION_14	IF_1	IF_2	FOR_1	IF_4
0x40005ea	      0x488d74b20c	           lea rsi, [rdx + rsi*4 + 0xc] 	       601	acpi_video.c	FUNCTION_14	IF_1	IF_2	FOR_1	IF_4
0x40005ef	            0xeb0c	                           jmp 0x40005fd	       601	acpi_video.c	FUNCTION_14	IF_1	IF_2	FOR_1	IF_4
0x40005f1	          0x486310	                 movsxd rdx, dword [rax]	       601	acpi_video.c	FUNCTION_14	IF_1	IF_2	FOR_1	IF_4
0x40005f4	        0x4883c004	                              add rax, 4	       601	acpi_video.c	FUNCTION_14	IF_1	IF_2	FOR_1	IF_4
0x40005f8	          0x4839ca	                            cmp rdx, rcx	       601	acpi_video.c	FUNCTION_14	IF_1	IF_2	FOR_1	IF_4
0x40005fb	            0x745c	                            je 0x4000659	       601	acpi_video.c	FUNCTION_14	IF_1	IF_2	FOR_1	IF_4
0x40005fd	          0x4839c6	                            cmp rsi, rax	       599	acpi_video.c	FUNCTION_14	IF_1	IF_2	FOR_1
0x4000600	            0x75ef	                           jne 0x40005f1	       599	acpi_video.c	FUNCTION_14	IF_1	IF_2	FOR_1
0x4000602	          0x4c89e1	                            mov rcx, r12	       609	acpi_video.c	FUNCTION_14	IF_1	IF_2	CALL_4
0x4000605	    0x48c7c2000000	                              mov rdx, 0	       609	acpi_video.c	FUNCTION_14	IF_1	IF_2	CALL_4
0x400060c	      0xbe63020000	                          mov esi, 0x263	       609	acpi_video.c	FUNCTION_14	IF_1	IF_2	CALL_4
0x4000611	    0x48c7c7000000	                              mov rdi, 0	       609	acpi_video.c	FUNCTION_14	IF_1	IF_2	CALL_4
0x4000618	      0xe800000000	                          call 0x400061d	       609	acpi_video.c	FUNCTION_14	IF_1	IF_2	CALL_4
0x400061d	        0x806309e7	                and byte [rbx + 9], 0xe7	       612	acpi_video.c	FUNCTION_14	IF_1	IF_2
0x4000621	    0x488b83900000	            mov rax, qword [rbx + 0x90] 	       627	acpi_video.c	FUNCTION_14
0x4000628	          0x486300	                 movsxd rax, dword [rax]	       627	acpi_video.c	FUNCTION_14
0x400062b	        0x48894500	                    mov qword [rbp], rax	       627	acpi_video.c	FUNCTION_14
0x400062f	              0x5b	                                 pop rbx	       629	acpi_video.c	FUNCTION_14
0x4000630	            0x31c0	                            xor eax, eax	       629	acpi_video.c	FUNCTION_14
0x4000632	              0x5d	                                 pop rbp	       629	acpi_video.c	FUNCTION_14
0x4000633	            0x415c	                                 pop r12	       629	acpi_video.c	FUNCTION_14
0x4000635	            0x415d	                                 pop r13	       629	acpi_video.c	FUNCTION_14
0x4000637	              0xc3	                                     ret	       629	acpi_video.c	FUNCTION_14
0x4000638	          0x4c89e1	                            mov rcx, r12	       622	acpi_video.c	FUNCTION_14	IF_1	ELSE_1	CALL_5
0x400063b	    0x48c7c2000000	                              mov rdx, 0	       622	acpi_video.c	FUNCTION_14	IF_1	ELSE_1	CALL_5
0x4000642	      0xbe6e020000	                          mov esi, 0x26e	       622	acpi_video.c	FUNCTION_14	IF_1	ELSE_1	CALL_5
0x4000647	    0x48c7c7000000	                              mov rdi, 0	       622	acpi_video.c	FUNCTION_14	IF_1	ELSE_1	CALL_5
0x400064e	      0xe800000000	                          call 0x4000653	       622	acpi_video.c	FUNCTION_14	IF_1	ELSE_1	CALL_5
0x4000653	        0x806309e7	                and byte [rbx + 9], 0xe7	       623	acpi_video.c	FUNCTION_14	IF_1	ELSE_1
0x4000657	            0xebc8	                           jmp 0x4000621	       623	acpi_video.c	FUNCTION_14	IF_1	ELSE_1
0x4000659	            0x890f	                    mov dword [rdi], ecx	       602	acpi_video.c	FUNCTION_14	IF_1	IF_2	FOR_1	IF_4
0x400065b	            0x31c0	                            xor eax, eax	       629	acpi_video.c	FUNCTION_14
0x400065d	              0x5b	                                 pop rbx	       629	acpi_video.c	FUNCTION_14
0x400065e	              0x5d	                                 pop rbp	       629	acpi_video.c	FUNCTION_14
0x400065f	            0x415c	                                 pop r12	       629	acpi_video.c	FUNCTION_14
0x4000661	            0x415d	                                 pop r13	       629	acpi_video.c	FUNCTION_14
0x4000663	              0xc3	                                     ret	       629	acpi_video.c	FUNCTION_14
acpi_video_device_lcd_query_levels	IF,2:DO,0:functions,0:CALL,4:SWITCH,0:WHILE,0:FOR,0:ELSE,0	34
0x40000f0	              0x53	                                push rbx	       327	acpi_video.c	FUNCTION_6
0x40000f1	            0x31d2	                            xor edx, edx	       335	acpi_video.c	FUNCTION_6	CALL_1
0x40000f3	          0x4889f3	                            mov rbx, rsi	       327	acpi_video.c	FUNCTION_6
0x40000f6	        0x4883ec18	                           sub rsp, 0x18	       327	acpi_video.c	FUNCTION_6
0x40000fa	    0x48c706000000	                      mov qword [rsi], 0	       333	acpi_video.c	FUNCTION_6
0x4000101	    0x48c7c6000000	                              mov rsi, 0	       335	acpi_video.c	FUNCTION_6	CALL_1
0x4000108	          0x4889e1	                            mov rcx, rsp	       335	acpi_video.c	FUNCTION_6	CALL_1
0x400010b	    0x48c70424ffff	     mov qword [rsp], 0xffffffffffffffff	       329	acpi_video.c	FUNCTION_6
0x4000113	    0x48c744240800	                  mov qword [rsp + 8], 0	       329	acpi_video.c	FUNCTION_6
0x400011c	    0x65488b042528	                mov rax, qword gs:[0x28]	       327	acpi_video.c	FUNCTION_6
0x4000125	      0x4889442410	             mov qword [rsp + 0x10], rax	       327	acpi_video.c	FUNCTION_6
0x400012a	            0x31c0	                            xor eax, eax	       327	acpi_video.c	FUNCTION_6
0x400012c	      0xe800000000	                          call 0x4000131	       335	acpi_video.c	FUNCTION_6	CALL_1
0x4000131	            0x85c0	                           test eax, eax	       336	acpi_video.c	FUNCTION_6	IF_1	CALL_2
0x4000133	            0x7512	                           jne 0x4000147	       336	acpi_video.c	FUNCTION_6	IF_1	CALL_2
0x4000135	      0x488b542408	                mov rdx, qword [rsp + 8]	       338	acpi_video.c	FUNCTION_6
0x400013a	          0x4885d2	                           test rdx, rdx	       339	acpi_video.c	FUNCTION_6	IF_2
0x400013d	            0x741e	                            je 0x400015d	       339	acpi_video.c	FUNCTION_6	IF_2
0x400013f	          0x833a04	                      cmp dword [rdx], 4	       339	acpi_video.c	FUNCTION_6	IF_2
0x4000142	            0x7519	                           jne 0x400015d	       339	acpi_video.c	FUNCTION_6	IF_2
0x4000144	          0x488913	                    mov qword [rbx], rdx	       345	acpi_video.c	FUNCTION_6
0x4000147	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       353	acpi_video.c	FUNCTION_6
0x400014c	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       353	acpi_video.c	FUNCTION_6
0x4000155	            0x7523	                           jne 0x400017a	       353	acpi_video.c	FUNCTION_6
0x4000157	        0x4883c418	                           add rsp, 0x18	       353	acpi_video.c	FUNCTION_6
0x400015b	              0x5b	                                 pop rbx	       353	acpi_video.c	FUNCTION_6
0x400015c	              0xc3	                                     ret	       353	acpi_video.c	FUNCTION_6
0x400015d	    0x48c7c7000000	                              mov rdi, 0	       340	acpi_video.c	FUNCTION_6	IF_2	CALL_3
0x4000164	      0xe800000000	                          call 0x4000169	       340	acpi_video.c	FUNCTION_6	IF_2	CALL_3
0x4000169	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       350	acpi_video.c	FUNCTION_6	CALL_4
0x400016e	      0xe800000000	                          call 0x4000173	       350	acpi_video.c	FUNCTION_6	CALL_4
0x4000173	      0xb8f2ffffff	                     mov eax, 0xfffffff2	       352	acpi_video.c	FUNCTION_6
0x4000178	            0xebcd	                           jmp 0x4000147	       352	acpi_video.c	FUNCTION_6
0x400017a	      0xe800000000	                          call 0x400017f	       353	acpi_video.c	FUNCTION_6
acpi_video_exit	IF,0:DO,0:functions,0:CALL,2:SWITCH,0:WHILE,0:FOR,0:ELSE,0	4
0x4000040	    0x488b87f00200	           mov rax, qword [rdi + 0x2f0] 	       269	acpi_video.c	FUNCTION_3
0x4000047	              0x48	                                 invalid	       273	acpi_video.c	FUNCTION_3
0x4000048	              0x8b	                                 invalid	       273	acpi_video.c	FUNCTION_3
0x4000049	              0x80	                                 invalid	       273	acpi_video.c	FUNCTION_3
