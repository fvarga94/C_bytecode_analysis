evdev_disconnect	SWITCH,0:DO,0:functions,0:FOR,0:CALL,6:ELSE,0:IF,0:WHILE,0	21
0x40001b0	            0x4154	                                push r12	      1441	evdev.c	FUNCTION_52
0x40001b2	              0x55	                                push rbp	      1441	evdev.c	FUNCTION_52
0x40001b3	          0x4989fc	                            mov r12, rdi	      1441	evdev.c	FUNCTION_52
0x40001b6	              0x53	                                push rbx	      1441	evdev.c	FUNCTION_52
0x40001b7	          0x488b1f	                    mov rbx, qword [rdi]	      1442	evdev.c	FUNCTION_52
0x40001ba	    0x488daba80000	                   lea rbp, [rbx + 0xa8]	      1444	evdev.c	FUNCTION_52	CALL_1
0x40001c1	    0x488dbb780300	                  lea rdi, [rbx + 0x378]	      1444	evdev.c	FUNCTION_52	CALL_1
0x40001c8	          0x4889ee	                            mov rsi, rbp	      1444	evdev.c	FUNCTION_52	CALL_1
0x40001cb	      0xe800000000	                          call 0x40001d0	      1444	evdev.c	FUNCTION_52	CALL_1
0x40001d0	          0x4889df	                            mov rdi, rbx	      1445	evdev.c	FUNCTION_52	CALL_2
0x40001d3	      0xe828ffffff	                  call sym.evdev_cleanup	      1445	evdev.c	FUNCTION_52	CALL_2
0x40001d8	    0x8bbb08030000	           mov edi, dword [rbx + 0x308] 	      1446	evdev.c	FUNCTION_52	CALL_4
0x40001de	    0x81e7ffff0f00	                        and edi, 0xfffff	      1446	evdev.c	FUNCTION_52	CALL_4
0x40001e4	      0xe800000000	                          call 0x40001e9	      1446	evdev.c	FUNCTION_52	CALL_4
0x40001e9	          0x4c89e7	                            mov rdi, r12	      1447	evdev.c	FUNCTION_52	CALL_5
0x40001ec	      0xe800000000	                          call 0x40001f1	      1447	evdev.c	FUNCTION_52	CALL_5
0x40001f1	          0x4889ef	                            mov rdi, rbp	      1448	evdev.c	FUNCTION_52	CALL_6
0x40001f4	              0x5b	                                 pop rbx	      1449	evdev.c	FUNCTION_52
0x40001f5	              0x5d	                                 pop rbp	      1449	evdev.c	FUNCTION_52
0x40001f6	            0x415c	                                 pop r12	      1449	evdev.c	FUNCTION_52
0x40001f8	      0xe900000000	                           jmp 0x40001fd	      1448	evdev.c	FUNCTION_52	CALL_6
evdev_ioctl	SWITCH,0:DO,0:functions,0:FOR,0:CALL,1:ELSE,0:IF,0:WHILE,0	2
0x4001f30	            0x31c9	                            xor ecx, ecx	      1317	evdev.c	FUNCTION_47	CALL_1
0x4001f32	      0xe9b9f4ffff	             jmp sym.evdev_ioctl_handler	      1317	evdev.c	FUNCTION_47	CALL_1
evdev_event	SWITCH,0:DO,0:functions,0:FOR,0:CALL,1:ELSE,0:IF,0:WHILE,0	16
0x4000c90	        0x4883ec10	                           sub rsp, 0x10	       338	evdev.c	FUNCTION_10
0x4000c94	        0x66893424	                      mov word [rsp], si	       339	evdev.c	FUNCTION_10
0x4000c98	      0x6689542402	                  mov word [rsp + 2], dx	       339	evdev.c	FUNCTION_10
0x4000c9d	          0x4889e6	                            mov rsi, rsp	       341	evdev.c	FUNCTION_10	CALL_1
0x4000ca0	      0xba01000000	                              mov edx, 1	       341	evdev.c	FUNCTION_10	CALL_1
0x4000ca5	        0x894c2404	                mov dword [rsp + 4], ecx	       339	evdev.c	FUNCTION_10
0x4000ca9	    0x65488b042528	                mov rax, qword gs:[0x28]	       338	evdev.c	FUNCTION_10
0x4000cb2	      0x4889442408	                mov qword [rsp + 8], rax	       338	evdev.c	FUNCTION_10
0x4000cb7	            0x31c0	                            xor eax, eax	       338	evdev.c	FUNCTION_10
0x4000cb9	      0xe812ffffff	                   call sym.evdev_events	       341	evdev.c	FUNCTION_10	CALL_1
0x4000cbe	      0x488b442408	                mov rax, qword [rsp + 8]	       342	evdev.c	FUNCTION_10
0x4000cc3	    0x654833042528	                xor rax, qword gs:[0x28]	       342	evdev.c	FUNCTION_10
0x4000ccc	            0x7505	                           jne 0x4000cd3	       342	evdev.c	FUNCTION_10
0x4000cce	        0x4883c410	                           add rsp, 0x10	       342	evdev.c	FUNCTION_10
0x4000cd2	              0xc3	                                     ret	       342	evdev.c	FUNCTION_10
0x4000cd3	      0xe800000000	                          call 0x4000cd8	       342	evdev.c	FUNCTION_10
evdev_ioctl_compat	SWITCH,0:DO,0:functions,0:FOR,0:CALL,2:ELSE,0:IF,0:WHILE,0	3
0x4001f20	            0x89d2	                            mov edx, edx	      1324	evdev.c	FUNCTION_48	CALL_2
0x4001f22	      0xb901000000	                              mov ecx, 1	      1324	evdev.c	FUNCTION_48	CALL_2
0x4001f27	      0xe9c4f4ffff	             jmp sym.evdev_ioctl_handler	      1324	evdev.c	FUNCTION_48	CALL_2
evdev_fasync	SWITCH,0:DO,0:functions,0:FOR,0:CALL,1:ELSE,0:IF,0:WHILE,0	3
0x4000200	    0x488b86c80000	            mov rax, qword [rsi + 0xc8] 	       348	evdev.c	FUNCTION_11	CALL_1
0x4000207	        0x488d4810	                   lea rcx, [rax + 0x10]	       348	evdev.c	FUNCTION_11	CALL_1
0x400020b	      0xe900000000	                      jmp sym.evdev_free	       348	evdev.c	FUNCTION_11	CALL_1
evdev_flush	SWITCH,0:DO,0:functions,0:FOR,0:CALL,3:ELSE,0:IF,1:WHILE,0	26
0x40000a0	            0x4155	                                push r13	       352	evdev.c	FUNCTION_12
0x40000a2	            0x4154	                                push r12	       352	evdev.c	FUNCTION_12
0x40000a4	          0x4989fd	                            mov r13, rdi	       352	evdev.c	FUNCTION_12
0x40000a7	              0x55	                                push rbp	       352	evdev.c	FUNCTION_12
0x40000a8	              0x53	                                push rbx	       352	evdev.c	FUNCTION_12
0x40000a9	    0x4c8ba7c80000	            mov r12, qword [rdi + 0xc8] 	       353	evdev.c	FUNCTION_12
0x40000b0	      0x498b5c2418	            mov rbx, qword [r12 + 0x18] 	       354	evdev.c	FUNCTION_12
0x40000b5	    0x488dab880000	                   lea rbp, [rbx + 0x88]	       356	evdev.c	FUNCTION_12	CALL_1
0x40000bc	          0x4889ef	                            mov rdi, rbp	       356	evdev.c	FUNCTION_12	CALL_1
0x40000bf	      0xe800000000	                          call 0x40000c4	       356	evdev.c	FUNCTION_12	CALL_1
0x40000c4	    0x80bbe0030000	               cmp byte [rbx + 0x3e0], 0	       358	evdev.c	FUNCTION_12	IF_1
0x40000cb	            0x7408	                            je 0x40000d5	       358	evdev.c	FUNCTION_12	IF_1
0x40000cd	    0x41807c243400	                cmp byte [r12 + 0x34], 0	       358	evdev.c	FUNCTION_12	IF_1
0x40000d3	            0x7411	                            je 0x40000e6	       358	evdev.c	FUNCTION_12	IF_1
0x40000d5	          0x4889ef	                            mov rdi, rbp	       361	evdev.c	FUNCTION_12	CALL_3
0x40000d8	      0xe800000000	                          call 0x40000dd	       361	evdev.c	FUNCTION_12	CALL_3
0x40000dd	            0x31c0	                            xor eax, eax	       363	evdev.c	FUNCTION_12
0x40000df	              0x5b	                                 pop rbx	       363	evdev.c	FUNCTION_12
0x40000e0	              0x5d	                                 pop rbp	       363	evdev.c	FUNCTION_12
0x40000e1	            0x415c	                                 pop r12	       363	evdev.c	FUNCTION_12
0x40000e3	            0x415d	                                 pop r13	       363	evdev.c	FUNCTION_12
0x40000e5	              0xc3	                                     ret	       363	evdev.c	FUNCTION_12
0x40000e6	        0x488d7b08	                      lea rdi, [rbx + 8]	       359	evdev.c	FUNCTION_12	CALL_2
0x40000ea	          0x4c89ee	                            mov rsi, r13	       359	evdev.c	FUNCTION_12	CALL_2
0x40000ed	      0xe800000000	                          call 0x40000f2	       359	evdev.c	FUNCTION_12	CALL_2
0x40000f2	            0xebe1	                           jmp 0x40000d5	       359	evdev.c	FUNCTION_12	CALL_2
