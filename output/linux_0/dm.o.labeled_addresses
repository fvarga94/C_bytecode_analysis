get_num_secure_erase_bios	DO,0:functions,0:CALL,0:ELSE,0:IF,0:WHILE,0:SWITCH,0:FOR,0	2
0x40000f0	          0x8b472c	            mov eax, dword [rdi + 0x2c] 	      1411	dm.c	FUNCTION_70
0x40000f3	              0xc3	                                     ret	      1412	dm.c	FUNCTION_70
dm_set_mdptr	DO,0:functions,0:CALL,0:ELSE,0:IF,0:WHILE,0:SWITCH,0:FOR,0	2
0x4002e10	    0x4889b7c80000	             mov qword [rdi + 0xc8], rsi	      2245	dm.c	FUNCTION_110
0x4002e17	              0xc3	                                     ret	      2245	dm.c	FUNCTION_110
dm_unlock_md_type	DO,0:functions,0:CALL,1:ELSE,0:IF,0:WHILE,0:SWITCH,0:FOR,0	2
0x4002c50	        0x4883c770	                           add rdi, 0x70	      2134	dm.c	FUNCTION_102	CALL_1
0x4002c54	      0xe900000000	                           jmp 0x4002c59	      2134	dm.c	FUNCTION_102	CALL_1
dm_per_bio_data	DO,0:functions,0:CALL,1:ELSE,0:IF,1:WHILE,0:SWITCH,0:FOR,0	8
0x4000040	        0x807ff800	                   cmp byte [rdi - 8], 0	       108	dm.c	FUNCTION_2	IF_1
0x4000044	            0x7408	                            je 0x400004e	       108	dm.c	FUNCTION_2	IF_1
0x4000046	          0x4829f7	                            sub rdi, rsi	       110	dm.c	FUNCTION_2
0x4000049	        0x488d4790	                   lea rax, [rdi - 0x70]	       110	dm.c	FUNCTION_2
0x400004d	              0xc3	                                     ret	       111	dm.c	FUNCTION_2
0x400004e	          0x4829f7	                            sub rdi, rsi	       109	dm.c	FUNCTION_2	IF_1
0x4000051	        0x488d47d0	                   lea rax, [rdi - 0x30]	       109	dm.c	FUNCTION_2	IF_1
0x4000055	              0xc3	                                     ret	       109	dm.c	FUNCTION_2	IF_1
dm_make_request_nvme	DO,0:functions,0:CALL,1:ELSE,0:IF,0:WHILE,0:SWITCH,0:FOR,0	3
0x40017a0	    0x488bbf980100	           mov rdi, qword [rdi + 0x198] 	      1691	dm.c	FUNCTION_86	CALL_1
0x40017a7	    0x48c7c2000000	                              mov rdx, 0	      1691	dm.c	FUNCTION_86	CALL_1
0x40017ae	      0xe95dffffff	       jmp sym.__dm_make_request.isra.39	      1691	dm.c	FUNCTION_86	CALL_1
__dm_pr_register	DO,0:functions,0:CALL,1:ELSE,0:IF,1:WHILE,0:SWITCH,0:FOR,0	15
0x4000160	          0x488b3e	                    mov rdi, qword [rsi]	      2997	dm.c	FUNCTION_150
0x4000163	    0x488b87800000	            mov rax, qword [rdi + 0x80] 	      2997	dm.c	FUNCTION_150
0x400016a	    0x488b80b80300	           mov rax, qword [rax + 0x3b8] 	      2997	dm.c	FUNCTION_150
0x4000171	        0x488b4060	            mov rax, qword [rax + 0x60] 	      2997	dm.c	FUNCTION_150
0x4000175	          0x4885c0	                           test rax, rax	      2999	dm.c	FUNCTION_150	IF_1
0x4000178	            0x7418	                            je 0x4000192	      2999	dm.c	FUNCTION_150	IF_1
0x400017a	          0x488b00	                    mov rax, qword [rax]	      2999	dm.c	FUNCTION_150	IF_1
0x400017d	          0x4885c0	                           test rax, rax	      2999	dm.c	FUNCTION_150	IF_1
0x4000180	            0x7410	                            je 0x4000192	      2999	dm.c	FUNCTION_150	IF_1
0x4000182	        0x418b4810	              mov ecx, dword [r8 + 0x10]	      3001	dm.c	FUNCTION_150	CALL_1
0x4000186	        0x498b5008	                 mov rdx, qword [r8 + 8]	      3001	dm.c	FUNCTION_150	CALL_1
0x400018a	          0x498b30	                     mov rsi, qword [r8]	      3001	dm.c	FUNCTION_150	CALL_1
0x400018d	      0xe900000000	                           jmp 0x4000192	      3001	dm.c	FUNCTION_150	CALL_1
0x4000192	      0xb8a1ffffff	                     mov eax, 0xffffffa1	      3002	dm.c	FUNCTION_150
0x4000197	              0xc3	                                     ret	      3002	dm.c	FUNCTION_150
dm_kobject_uevent	DO,0:functions,0:CALL,5:ELSE,1:IF,1:WHILE,0:SWITCH,0:FOR,0	35
0x4003420	              0x55	                                push rbp	      2796	dm.c	FUNCTION_134
0x4003421	              0x53	                                push rbx	      2796	dm.c	FUNCTION_134
0x4003422	          0x4889fd	                            mov rbp, rdi	      2796	dm.c	FUNCTION_134
0x4003425	            0x89f3	                            mov ebx, esi	      2796	dm.c	FUNCTION_134
0x4003427	        0x4883ec30	                           sub rsp, 0x30	      2796	dm.c	FUNCTION_134
0x400342b	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2798	dm.c	FUNCTION_134
0x4003430	    0x48c744240800	                  mov qword [rsp + 8], 0	      2798	dm.c	FUNCTION_134
0x4003439	    0x65488b042528	                mov rax, qword gs:[0x28]	      2796	dm.c	FUNCTION_134
0x4003442	      0x4889442428	             mov qword [rsp + 0x28], rax	      2796	dm.c	FUNCTION_134
0x4003447	            0x31c0	                            xor eax, eax	      2796	dm.c	FUNCTION_134
0x4003449	            0x85d2	                           test edx, edx	      2800	dm.c	FUNCTION_134	IF_1
0x400344b	        0x48893c24	                    mov qword [rsp], rdi	      2798	dm.c	FUNCTION_134
0x400344f	            0x7447	                            je 0x4003498	      2800	dm.c	FUNCTION_134	IF_1
0x4003451	          0x4189d0	                            mov r8d, edx	      2803	dm.c	FUNCTION_134	ELSE_1	CALL_3
0x4003454	      0xbe18000000	                           mov esi, 0x18	      2803	dm.c	FUNCTION_134	ELSE_1	CALL_3
0x4003459	    0x48c7c2000000	                              mov rdx, 0	      2803	dm.c	FUNCTION_134	ELSE_1	CALL_3
0x4003460	    0x48c7c1000000	                              mov rcx, 0	      2803	dm.c	FUNCTION_134	ELSE_1	CALL_3
0x4003467	      0xe800000000	                          call 0x400346c	      2803	dm.c	FUNCTION_134	ELSE_1	CALL_3
0x400346c	    0x488bbda80000	            mov rdi, qword [rbp + 0xa8] 	      2805	dm.c	FUNCTION_134	ELSE_1	CALL_5
0x4003473	          0x4889e2	                            mov rdx, rsp	      2805	dm.c	FUNCTION_134	ELSE_1	CALL_5
0x4003476	            0x89de	                            mov esi, ebx	      2805	dm.c	FUNCTION_134	ELSE_1	CALL_5
0x4003478	        0x4883ef80	             sub rdi, 0xffffffffffffff80	      2805	dm.c	FUNCTION_134	ELSE_1	CALL_5
0x400347c	      0xe800000000	                          call 0x4003481	      2805	dm.c	FUNCTION_134	ELSE_1	CALL_5
0x4003481	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      2808	dm.c	FUNCTION_134
0x4003486	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      2808	dm.c	FUNCTION_134
0x400348f	            0x7519	                           jne 0x40034aa	      2808	dm.c	FUNCTION_134
0x4003491	        0x4883c430	                           add rsp, 0x30	      2808	dm.c	FUNCTION_134
0x4003495	              0x5b	                                 pop rbx	      2808	dm.c	FUNCTION_134
0x4003496	              0x5d	                                 pop rbp	      2808	dm.c	FUNCTION_134
0x4003497	              0xc3	                                     ret	      2808	dm.c	FUNCTION_134
0x4003498	    0x488bbda80000	            mov rdi, qword [rbp + 0xa8] 	      2801	dm.c	FUNCTION_134	CALL_2
0x400349f	        0x4883ef80	             sub rdi, 0xffffffffffffff80	      2801	dm.c	FUNCTION_134	CALL_2
0x40034a3	      0xe800000000	                          call 0x40034a8	      2801	dm.c	FUNCTION_134	CALL_2
0x40034a8	            0xebd7	                           jmp 0x4003481	      2801	dm.c	FUNCTION_134	CALL_2
0x40034aa	      0xe800000000	                          call 0x40034af	      2808	dm.c	FUNCTION_134
do_deferred_remove	DO,0:functions,0:CALL,1:ELSE,0:IF,0:WHILE,0:SWITCH,0:FOR,0	1
0x4000710	      0xe900000000	                           jmp 0x4000715	       436	dm.c	FUNCTION_19	CALL_1
dm_get_immutable_target_type	DO,0:functions,0:CALL,0:ELSE,0:IF,0:WHILE,0:SWITCH,0:FOR,0	2
0x4002c90	    0x488b87a00000	            mov rax, qword [rdi + 0xa0] 	      2150	dm.c	FUNCTION_105
0x4002c97	              0xc3	                                     ret	      2151	dm.c	FUNCTION_105
get_num_write_same_bios	DO,0:functions,0:CALL,0:ELSE,0:IF,0:WHILE,0:SWITCH,0:FOR,0	2
0x4000100	          0x8b4730	            mov eax, dword [rdi + 0x30] 	      1416	dm.c	FUNCTION_71
0x4000103	              0xc3	                                     ret	      1417	dm.c	FUNCTION_71
get_num_discard_bios	DO,0:functions,0:CALL,0:ELSE,0:IF,0:WHILE,0:SWITCH,0:FOR,0	2
0x40000e0	          0x8b4728	            mov eax, dword [rdi + 0x28] 	      1406	dm.c	FUNCTION_69
0x40000e3	              0xc3	                                     ret	      1407	dm.c	FUNCTION_69
dm_destroy	DO,0:functions,0:CALL,1:ELSE,0:IF,0:WHILE,0:SWITCH,0:FOR,0	2
0x4002f70	      0xbe01000000	                              mov esi, 1	      2324	dm.c	FUNCTION_115	CALL_1
0x4002f75	      0xe976e3ffff	                    jmp sym.__dm_destroy	      2324	dm.c	FUNCTION_115	CALL_1
dm_set_geometry	DO,0:functions,0:CALL,1:ELSE,0:IF,1:WHILE,0:SWITCH,0:FOR,0	22
0x40026a0	         0xfb75602	               movzx edx, word [rsi + 2]	       838	dm.c	FUNCTION_47	IF_1
0x40026a4	           0xfb606	                   movzx eax, byte [rsi]	       838	dm.c	FUNCTION_47	IF_1
0x40026a7	        0x480fafc2	                           imul rax, rdx	       838	dm.c	FUNCTION_47	IF_1
0x40026ab	         0xfb65601	               movzx edx, byte [rsi + 1]	       838	dm.c	FUNCTION_47	IF_1
0x40026af	        0x480fafc2	                           imul rax, rdx	       838	dm.c	FUNCTION_47	IF_1
0x40026b3	        0x483b4608	                cmp rax, qword [rsi + 8]	       838	dm.c	FUNCTION_47	IF_1
0x40026b7	            0x7218	                            jb 0x40026d1	       838	dm.c	FUNCTION_47	IF_1
0x40026b9	          0x488b06	                    mov rax, qword [rsi]	       843	dm.c	FUNCTION_47
0x40026bc	        0x488b5608	                mov rdx, qword [rsi + 8]	       843	dm.c	FUNCTION_47
0x40026c0	    0x488987300300	            mov qword [rdi + 0x330], rax	       843	dm.c	FUNCTION_47
0x40026c7	    0x488997380300	            mov qword [rdi + 0x338], rdx	       843	dm.c	FUNCTION_47
0x40026ce	            0x31c0	                            xor eax, eax	       845	dm.c	FUNCTION_47
0x40026d0	              0xc3	                                     ret	       845	dm.c	FUNCTION_47
0x40026d1	              0x55	                                push rbp	       835	dm.c	FUNCTION_47
0x40026d2	    0x48c7c7000000	                              mov rdi, 0	       839	dm.c	FUNCTION_47	IF_1	CALL_1
0x40026d9	          0x4889e5	                            mov rbp, rsp	       835	dm.c	FUNCTION_47
0x40026dc	            0x4152	                                push r10	       835	dm.c	FUNCTION_47
0x40026de	      0xe800000000	                          call 0x40026e3	       839	dm.c	FUNCTION_47	IF_1	CALL_1
0x40026e3	      0xb8eaffffff	                     mov eax, 0xffffffea	       840	dm.c	FUNCTION_47	IF_1
0x40026e8	            0x415a	                                 pop r10	       846	dm.c	FUNCTION_47
0x40026ea	              0x5d	                                 pop rbp	       846	dm.c	FUNCTION_47
0x40026eb	              0xc3	                                     ret	       846	dm.c	FUNCTION_47
__send_duplicate_bios	DO,0:functions,0:CALL,4:ELSE,0:IF,0:WHILE,1:SWITCH,0:FOR,0	116
0x40018a0	            0x85d2	                           test edx, edx	      1308	dm.c	FUNCTION_64	IF_1
0x40018a2	     0xf8400010000	                            je 0x40019a8	      1308	dm.c	FUNCTION_64	IF_1
0x40018a8	            0x4157	                                push r15	      1358	dm.c	FUNCTION_66
0x40018aa	            0x4156	                                push r14	      1358	dm.c	FUNCTION_66
0x40018ac	            0x4155	                                push r13	      1358	dm.c	FUNCTION_66
0x40018ae	            0x4154	                                push r12	      1358	dm.c	FUNCTION_66
0x40018b0	              0x55	                                push rbp	      1358	dm.c	FUNCTION_66
0x40018b1	              0x53	                                push rbx	      1358	dm.c	FUNCTION_66
0x40018b2	          0x4889fd	                            mov rbp, rdi	      1358	dm.c	FUNCTION_66
0x40018b5	          0x4889cb	                            mov rbx, rcx	      1358	dm.c	FUNCTION_66
0x40018b8	        0x4883ec20	                           sub rsp, 0x20	      1358	dm.c	FUNCTION_66
0x40018bc	          0x83fa01	                              cmp edx, 1	      1311	dm.c	FUNCTION_64	IF_2
0x40018bf	        0x89542410	             mov dword [rsp + 0x10], edx	      1311	dm.c	FUNCTION_64	IF_2
0x40018c3	        0x48893424	                    mov qword [rsp], rsi	      1311	dm.c	FUNCTION_64	IF_2
0x40018c7	     0xf845c010000	                            je 0x4001a29	      1311	dm.c	FUNCTION_64	IF_2
0x40018cd	        0x488d4710	                   lea rax, [rdi + 0x10]	      1311	dm.c	FUNCTION_64	IF_2
0x40018d1	    0xc74424140000	               mov dword [rsp + 0x14], 0	      1311	dm.c	FUNCTION_64	IF_2
0x40018d9	          0x4531ff	                          xor r15d, r15d	      1359	dm.c	FUNCTION_66
0x40018dc	      0x4889442408	                mov qword [rsp + 8], rax	      1359	dm.c	FUNCTION_66
0x40018e1	      0x837c241401	               cmp dword [rsp + 0x14], 1	      1359	dm.c	FUNCTION_66
0x40018e6	          0x4519e4	                          sbb r12d, r12d	      1359	dm.c	FUNCTION_66
0x40018e9	          0x4531f6	                          xor r14d, r14d	      1359	dm.c	FUNCTION_66
0x40018ec	          0x4531ed	                          xor r13d, r13d	      1359	dm.c	FUNCTION_66
0x40018ef	    0x4181e40000c0	                    and r12d, 0xffc00000	      1359	dm.c	FUNCTION_66
0x40018f6	    0x4181c4000040	                     add r12d, 0x1400000	      1359	dm.c	FUNCTION_66
0x40018fd	            0xeb11	                           jmp 0x4001910	      1359	dm.c	FUNCTION_66
0x40018ff	        0x4183c501	                             add r13d, 1	      1323	dm.c	FUNCTION_64	FOR_1	FOR_2
0x4001903	      0x443b6c2410	           cmp r13d, dword [rsp + 0x10] 	      1323	dm.c	FUNCTION_64	FOR_1	FOR_2
0x4001908	          0x498917	                    mov qword [r15], rdx	       642	bio.h	FUNCTION_256	IF_1
0x400190b	          0x4989d7	                            mov r15, rdx	      1328	dm.c	FUNCTION_64	FOR_1	FOR_2	CALL_5
0x400190e	            0x743b	                            je 0x400194b	      1323	dm.c	FUNCTION_64	FOR_1	FOR_2
0x4001910	        0x488b3424	                    mov rsi, qword [rsp]	      1324	dm.c	FUNCTION_64	FOR_1	FOR_2	CALL_4
0x4001914	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1324	dm.c	FUNCTION_64	FOR_1	FOR_2	CALL_4
0x4001919	          0x4489e1	                           mov ecx, r12d	      1324	dm.c	FUNCTION_64	FOR_1	FOR_2	CALL_4
0x400191c	          0x4489ea	                           mov edx, r13d	      1324	dm.c	FUNCTION_64	FOR_1	FOR_2	CALL_4
0x400191f	      0xe88cf8ffff	              call sym.alloc_tio.isra.29	      1324	dm.c	FUNCTION_64	FOR_1	FOR_2	CALL_4
0x4001924	          0x4885c0	                           test rax, rax	      1325	dm.c	FUNCTION_64	FOR_1	FOR_2	IF_4
0x4001927	            0x7422	                            je 0x400194b	      1325	dm.c	FUNCTION_64	FOR_1	FOR_2	IF_4
0x4001929	          0x4d85ff	                           test r15, r15	       641	bio.h	FUNCTION_256	IF_1
0x400192c	        0x488d5030	                   lea rdx, [rax + 0x30]	      1328	dm.c	FUNCTION_64	FOR_1	FOR_2	CALL_5
0x4001930	    0x48c740300000	               mov qword [rax + 0x30], 0	       639	bio.h	FUNCTION_256
0x4001938	            0x75c5	                           jne 0x40018ff	       641	bio.h	FUNCTION_256	IF_1
0x400193a	        0x4183c501	                             add r13d, 1	      1323	dm.c	FUNCTION_64	FOR_1	FOR_2
0x400193e	      0x443b6c2410	           cmp r13d, dword [rsp + 0x10] 	      1323	dm.c	FUNCTION_64	FOR_1	FOR_2
0x4001943	          0x4989d6	                            mov r14, rdx	      1328	dm.c	FUNCTION_64	FOR_1	FOR_2	CALL_5
0x4001946	          0x4989d7	                            mov r15, rdx	      1328	dm.c	FUNCTION_64	FOR_1	FOR_2	CALL_5
0x4001949	            0x75c5	                           jne 0x4001910	      1323	dm.c	FUNCTION_64	FOR_1	FOR_2
0x400194b	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      1330	dm.c	FUNCTION_64	FOR_1	IF_5
0x400194f	            0x85c0	                           test eax, eax	      1330	dm.c	FUNCTION_64	FOR_1	IF_5
0x4001951	            0x7411	                            je 0x4001964	      1330	dm.c	FUNCTION_64	FOR_1	IF_5
0x4001953	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1331	dm.c	FUNCTION_64	FOR_1	CALL_6
0x4001957	        0x488b7808	                mov rdi, qword [rax + 8]	      1331	dm.c	FUNCTION_64	FOR_1	CALL_6
0x400195b	        0x4883c738	                           add rdi, 0x38	      1331	dm.c	FUNCTION_64	FOR_1	CALL_6
0x400195f	      0xe800000000	                          call 0x4001964	      1331	dm.c	FUNCTION_64	FOR_1	CALL_6
0x4001964	      0x44396c2410	           cmp dword [rsp + 0x10], r13d 	      1332	dm.c	FUNCTION_64	FOR_1	IF_6
0x4001969	            0x747f	                            je 0x40019ea	      1332	dm.c	FUNCTION_64	FOR_1	IF_6
0x400196b	            0x31c0	                            xor eax, eax	       698	bio.h	FUNCTION_261	IF_1	IF_2
0x400196d	            0xeb1f	                           jmp 0x400198e	       698	bio.h	FUNCTION_261	IF_1	IF_2
0x400196f	          0x4d8b26	                    mov r12, qword [r14]	       696	bio.h	FUNCTION_261	IF_1
0x4001972	    0x49c706000000	                      mov qword [r14], 0	       700	bio.h	FUNCTION_261	IF_1
0x4001979	          0x4d85e4	                           test r12, r12	       698	bio.h	FUNCTION_261	IF_1	IF_2
0x400197c	        0x4c0f44f8	                          cmove r15, rax	       698	bio.h	FUNCTION_261	IF_1	IF_2
0x4001980	      0x41807ef800	                   cmp byte [r14 - 8], 0	       593	dm.c	FUNCTION_30	IF_1
0x4001985	     0xf8484000000	                            je 0x4001a0f	       593	dm.c	FUNCTION_30	IF_1
0x400198b	          0x4d89e6	                            mov r14, r12	       696	bio.h	FUNCTION_261	IF_1
0x400198e	          0x4d85f6	                           test r14, r14	       695	bio.h	FUNCTION_261	IF_1
0x4001991	            0x75dc	                           jne 0x400196f	       695	bio.h	FUNCTION_261	IF_1
0x4001993	      0x837c241401	               cmp dword [rsp + 0x14], 1	      1317	dm.c	FUNCTION_64	FOR_1
0x4001998	            0x7557	                           jne 0x40019f1	      1317	dm.c	FUNCTION_64	FOR_1
0x400199a	        0x4883c420	                           add rsp, 0x20	      1369	dm.c	FUNCTION_66
0x400199e	              0x5b	                                 pop rbx	      1369	dm.c	FUNCTION_66
0x400199f	              0x5d	                                 pop rbp	      1369	dm.c	FUNCTION_66
0x40019a0	            0x415c	                                 pop r12	      1369	dm.c	FUNCTION_66
0x40019a2	            0x415d	                                 pop r13	      1369	dm.c	FUNCTION_66
0x40019a4	            0x415e	                                 pop r14	      1369	dm.c	FUNCTION_66
0x40019a6	            0x415f	                                 pop r15	      1369	dm.c	FUNCTION_66
0x40019a8	            0xf3c3	                                     ret	      1369	dm.c	FUNCTION_66
0x40019aa	          0x4d8b2e	                    mov r13, qword [r14]	       696	bio.h	FUNCTION_261	IF_1
0x40019ad	        0x49895ef0	             mov qword [r14 - 0x10], rbx	      1347	dm.c	FUNCTION_65
0x40019b1	          0x4c89f7	                            mov rdi, r14	      1349	dm.c	FUNCTION_65	CALL_1
0x40019b4	    0x49c706000000	                      mov qword [r14], 0	       700	bio.h	FUNCTION_261	IF_1
0x40019bb	        0x488b7508	                mov rsi, qword [rbp + 8]	      1349	dm.c	FUNCTION_65	CALL_1
0x40019bf	        0x4d8d66d0	                   lea r12, [r14 - 0x30]	      1366	dm.c	FUNCTION_66	WHILE_1	CALL_3
0x40019c3	      0xe800000000	                          call 0x40019c8	      1349	dm.c	FUNCTION_65	CALL_1
0x40019c8	          0x4885db	                           test rbx, rbx	      1350	dm.c	FUNCTION_65	IF_1
0x40019cb	            0x7412	                            je 0x40019df	      1350	dm.c	FUNCTION_65	IF_1
0x40019cd	            0x8b03	                    mov eax, dword [rbx]	      1351	dm.c	FUNCTION_65	CALL_2
0x40019cf	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	      1351	dm.c	FUNCTION_65	CALL_2
0x40019d3	        0x49895628	             mov qword [r14 + 0x28], rdx	      1262	dm.c	FUNCTION_62
0x40019d7	        0x48c1e009	                              shl rax, 9	      1263	dm.c	FUNCTION_62	CALL_1
0x40019db	        0x41894630	             mov dword [r14 + 0x30], eax	      1263	dm.c	FUNCTION_62	CALL_1
0x40019df	          0x4c89e7	                            mov rdi, r12	      1353	dm.c	FUNCTION_65	CALL_3
0x40019e2	          0x4d89ee	                            mov r14, r13	      1353	dm.c	FUNCTION_65	CALL_3
0x40019e5	      0xe8b6f1ffff	                      call sym.__map_bio	      1353	dm.c	FUNCTION_65	CALL_3
0x40019ea	          0x4d85f6	                           test r14, r14	       695	bio.h	FUNCTION_261	IF_1
0x40019ed	            0x75bb	                           jne 0x40019aa	       695	bio.h	FUNCTION_261	IF_1
0x40019ef	            0xeba9	                           jmp 0x400199a	       695	bio.h	FUNCTION_261	IF_1
0x40019f1	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1322	dm.c	FUNCTION_64	FOR_1	CALL_3
0x40019f5	        0x488b7808	                mov rdi, qword [rax + 8]	      1322	dm.c	FUNCTION_64	FOR_1	CALL_3
0x40019f9	        0x4883c738	                           add rdi, 0x38	      1322	dm.c	FUNCTION_64	FOR_1	CALL_3
0x40019fd	      0xe800000000	                          call 0x4001a02	      1322	dm.c	FUNCTION_64	FOR_1	CALL_3
0x4001a02	    0xc74424140100	               mov dword [rsp + 0x14], 1	      1322	dm.c	FUNCTION_64	FOR_1	CALL_3
0x4001a0a	      0xe9d2feffff	                           jmp 0x40018e1	      1322	dm.c	FUNCTION_64	FOR_1	CALL_3
0x4001a0f	          0x4c89f7	                            mov rdi, r14	       595	dm.c	FUNCTION_30	CALL_1
0x4001a12	      0x4889442418	             mov qword [rsp + 0x18], rax	       595	dm.c	FUNCTION_30	CALL_1
0x4001a17	          0x4d89e6	                            mov r14, r12	       696	bio.h	FUNCTION_261	IF_1
0x4001a1a	      0xe800000000	                          call 0x4001a1f	       595	dm.c	FUNCTION_30	CALL_1
0x4001a1f	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       595	dm.c	FUNCTION_30	CALL_1
0x4001a24	      0xe965ffffff	                           jmp 0x400198e	       595	dm.c	FUNCTION_30	CALL_1
0x4001a29	        0x488d7f10	                   lea rdi, [rdi + 0x10]	       595	dm.c	FUNCTION_30	CALL_1
0x4001a2d	      0xb900004001	                      mov ecx, 0x1400000	      1312	dm.c	FUNCTION_64	IF_2	CALL_1
0x4001a32	            0x31d2	                            xor edx, edx	      1312	dm.c	FUNCTION_64	IF_2	CALL_1
0x4001a34	      0xe877f7ffff	              call sym.alloc_tio.isra.29	      1312	dm.c	FUNCTION_64	IF_2	CALL_1
0x4001a39	        0x4c8d7030	                   lea r14, [rax + 0x30]	      1313	dm.c	FUNCTION_64	IF_2	CALL_2
0x4001a3d	    0x48c740300000	               mov qword [rax + 0x30], 0	       639	bio.h	FUNCTION_256
0x4001a45	            0xeba3	                           jmp 0x40019ea	       639	bio.h	FUNCTION_256
dm_lock_md_type	DO,0:functions,0:CALL,1:ELSE,0:IF,0:WHILE,0:SWITCH,0:FOR,0	2
0x4002c40	        0x4883c770	                           add rdi, 0x70	      2129	dm.c	FUNCTION_101	CALL_1
0x4002c44	      0xe900000000	                           jmp 0x4002c49	      2129	dm.c	FUNCTION_101	CALL_1
dm_setup_md_queue	DO,0:functions,0:CALL,15:ELSE,0:IF,3:WHILE,0:SWITCH,1:FOR,0	77
0x4002ca0	            0x4154	                                push r12	      2168	dm.c	FUNCTION_107
0x4002ca2	              0x55	                                push rbp	      2168	dm.c	FUNCTION_107
0x4002ca3	          0x4989f4	                            mov r12, rsi	      2168	dm.c	FUNCTION_107
0x4002ca6	              0x53	                                push rbx	      2168	dm.c	FUNCTION_107
0x4002ca7	          0x4889fb	                            mov rbx, rdi	      2168	dm.c	FUNCTION_107
0x4002caa	        0x4883ec70	                           sub rsp, 0x70	      2168	dm.c	FUNCTION_107
0x4002cae	    0x65488b042528	                mov rax, qword gs:[0x28]	      2168	dm.c	FUNCTION_107
0x4002cb7	      0x4889442468	             mov qword [rsp + 0x68], rax	      2168	dm.c	FUNCTION_107
0x4002cbc	            0x31c0	                            xor eax, eax	      2168	dm.c	FUNCTION_107
0x4002cbe	        0x837f6c05	               cmp dword [rdi + 0x6c], 5	      2173	dm.c	FUNCTION_107	SWITCH_1
0x4002cc2	            0x773a	                            ja 0x4002cfe	      2173	dm.c	FUNCTION_107	SWITCH_1
0x4002cc4	          0x8b476c	            mov eax, dword [rdi + 0x6c] 	      2173	dm.c	FUNCTION_107	SWITCH_1
0x4002cc7	    0x488b04c50000	                  mov rax, qword [rax*8]	      2173	dm.c	FUNCTION_107	SWITCH_1
0x4002ccf	      0xe900000000	                           jmp 0x4002cd4	      2173	dm.c	FUNCTION_107	SWITCH_1
0x4002cd4	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      1779	dm.c	FUNCTION_91
0x4002cd8	    0x80a7c0040000	            and byte [rdi + 0x4c0], 0xfe	      1774	dm.c	FUNCTION_91
0x4002cdf	    0x48c7c6000000	                              mov rsi, 0	      2192	dm.c	FUNCTION_107	SWITCH_1	CALL_8
0x4002ce6	    0x488b80900100	           mov rax, qword [rax + 0x190] 	      1779	dm.c	FUNCTION_91
0x4002ced	    0x48c740200000	               mov qword [rax + 0x20], 0	      1779	dm.c	FUNCTION_91
0x4002cf5	        0x488b7f60	            mov rdi, qword [rdi + 0x60] 	      2192	dm.c	FUNCTION_107	SWITCH_1	CALL_8
0x4002cf9	      0xe800000000	                          call 0x4002cfe	      2192	dm.c	FUNCTION_107	SWITCH_1	CALL_8
0x4002cfe	          0x4889e6	                            mov rsi, rsp	      2203	dm.c	FUNCTION_107	CALL_12
0x4002d01	          0x4c89e7	                            mov rdi, r12	      2203	dm.c	FUNCTION_107	CALL_12
0x4002d04	      0xe800000000	                          call 0x4002d09	      2203	dm.c	FUNCTION_107	CALL_12
0x4002d09	            0x85c0	                           test eax, eax	      2204	dm.c	FUNCTION_107	IF_3
0x4002d0b	            0x89c5	                            mov ebp, eax	      2203	dm.c	FUNCTION_107	CALL_12
0x4002d0d	     0xf85cc000000	                           jne 0x4002ddf	      2204	dm.c	FUNCTION_107	IF_3
0x4002d13	        0x488b7360	            mov rsi, qword [rbx + 0x60] 	      2208	dm.c	FUNCTION_107	CALL_14
0x4002d17	          0x4889e2	                            mov rdx, rsp	      2208	dm.c	FUNCTION_107	CALL_14
0x4002d1a	          0x4c89e7	                            mov rdi, r12	      2208	dm.c	FUNCTION_107	CALL_14
0x4002d1d	      0xe800000000	                          call 0x4002d22	      2208	dm.c	FUNCTION_107	CALL_14
0x4002d22	    0x488bbba80000	            mov rdi, qword [rbx + 0xa8] 	      2209	dm.c	FUNCTION_107	CALL_15
0x4002d29	      0xe800000000	                          call 0x4002d2e	      2209	dm.c	FUNCTION_107	CALL_15
0x4002d2e	            0x31c0	                            xor eax, eax	      2211	dm.c	FUNCTION_107
0x4002d30	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      2212	dm.c	FUNCTION_107
0x4002d35	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      2212	dm.c	FUNCTION_107
0x4002d3e	     0xf8596000000	                           jne 0x4002dda	      2212	dm.c	FUNCTION_107
0x4002d44	        0x4883c470	                           add rsp, 0x70	      2212	dm.c	FUNCTION_107
0x4002d48	              0x5b	                                 pop rbx	      2212	dm.c	FUNCTION_107
0x4002d49	              0x5d	                                 pop rbp	      2212	dm.c	FUNCTION_107
0x4002d4a	            0x415c	                                 pop r12	      2212	dm.c	FUNCTION_107
0x4002d4c	              0xc3	                                     ret	      2212	dm.c	FUNCTION_107
0x4002d4d	      0xe800000000	                          call 0x4002d52	      2183	dm.c	FUNCTION_107	SWITCH_1	CALL_5
0x4002d52	            0x85c0	                           test eax, eax	      2184	dm.c	FUNCTION_107	SWITCH_1	IF_2
0x4002d54	            0x89c5	                            mov ebp, eax	      2183	dm.c	FUNCTION_107	SWITCH_1	CALL_5
0x4002d56	            0x74a6	                            je 0x4002cfe	      2184	dm.c	FUNCTION_107	SWITCH_1	IF_2
0x4002d58	    0x48c7c7000000	                              mov rdi, 0	      2185	dm.c	FUNCTION_107	SWITCH_1	IF_2	CALL_6
0x4002d5f	      0xe800000000	                          call 0x4002d64	      2185	dm.c	FUNCTION_107	SWITCH_1	IF_2	CALL_6
0x4002d64	            0x89e8	                            mov eax, ebp	      2186	dm.c	FUNCTION_107	SWITCH_1	IF_2
0x4002d66	            0xebc8	                           jmp 0x4002d30	      2186	dm.c	FUNCTION_107	SWITCH_1	IF_2
0x4002d68	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      1779	dm.c	FUNCTION_91
0x4002d6c	    0x80a7c0040000	            and byte [rdi + 0x4c0], 0xfe	      1774	dm.c	FUNCTION_91
0x4002d73	    0x48c7c6000000	                              mov rsi, 0	      2196	dm.c	FUNCTION_107	SWITCH_1	CALL_10
0x4002d7a	    0x488b80900100	           mov rax, qword [rax + 0x190] 	      1779	dm.c	FUNCTION_91
0x4002d81	    0x48c740200000	               mov qword [rax + 0x20], 0	      1779	dm.c	FUNCTION_91
0x4002d89	        0x488b7f60	            mov rdi, qword [rdi + 0x60] 	      2196	dm.c	FUNCTION_107	SWITCH_1	CALL_10
0x4002d8d	      0xe800000000	                          call 0x4002d92	      2196	dm.c	FUNCTION_107	SWITCH_1	CALL_10
0x4002d92	      0xe967ffffff	                           jmp 0x4002cfe	      2197	dm.c	FUNCTION_107	SWITCH_1
0x4002d97	             0xf0b	                                     ud2	      2197	dm.c	FUNCTION_107	SWITCH_1
0x4002d99	      0xe960ffffff	                           jmp 0x4002cfe	      2200	dm.c	FUNCTION_107	SWITCH_1
0x4002d9e	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      1779	dm.c	FUNCTION_91
0x4002da2	    0x80a7c0040000	            and byte [rdi + 0x4c0], 0xfe	      1774	dm.c	FUNCTION_91
0x4002da9	    0x488b80900100	           mov rax, qword [rax + 0x190] 	      1779	dm.c	FUNCTION_91
0x4002db0	    0x48c740200000	               mov qword [rax + 0x20], 0	      1779	dm.c	FUNCTION_91
0x4002db8	      0xe800000000	                          call 0x4002dbd	      2176	dm.c	FUNCTION_107	SWITCH_1	CALL_3
0x4002dbd	            0x85c0	                           test eax, eax	      2177	dm.c	FUNCTION_107	SWITCH_1	IF_1
0x4002dbf	            0x89c5	                            mov ebp, eax	      2176	dm.c	FUNCTION_107	SWITCH_1	CALL_3
0x4002dc1	     0xf8437ffffff	                            je 0x4002cfe	      2177	dm.c	FUNCTION_107	SWITCH_1	IF_1
0x4002dc7	    0x48c7c7000000	                              mov rdi, 0	      2178	dm.c	FUNCTION_107	SWITCH_1	IF_1	CALL_4
0x4002dce	      0xe800000000	                          call 0x4002dd3	      2178	dm.c	FUNCTION_107	SWITCH_1	IF_1	CALL_4
0x4002dd3	            0x89e8	                            mov eax, ebp	      2179	dm.c	FUNCTION_107	SWITCH_1	IF_1
0x4002dd5	      0xe956ffffff	                           jmp 0x4002d30	      2179	dm.c	FUNCTION_107	SWITCH_1	IF_1
0x4002dda	      0xe800000000	                          call 0x4002ddf	      2212	dm.c	FUNCTION_107
0x4002ddf	    0x48c7c7000000	                              mov rdi, 0	      2205	dm.c	FUNCTION_107	IF_3	CALL_13
0x4002de6	      0xe800000000	                          call 0x4002deb	      2205	dm.c	FUNCTION_107	IF_3	CALL_13
0x4002deb	            0x89e8	                            mov eax, ebp	      2206	dm.c	FUNCTION_107	IF_3
0x4002ded	      0xe93effffff	                           jmp 0x4002d30	      2206	dm.c	FUNCTION_107	IF_3
__process_bio	DO,0:functions,0:CALL,14:ELSE,1:IF,4:WHILE,0:SWITCH,0:FOR,0	83
0x4001db0	              0x55	                                push rbp	      1607	dm.c	FUNCTION_83
0x4001db1	              0x53	                                push rbx	      1607	dm.c	FUNCTION_83
0x4001db2	          0x4889d3	                            mov rbx, rdx	      1607	dm.c	FUNCTION_83
0x4001db5	        0x4883ec38	                           sub rsp, 0x38	      1607	dm.c	FUNCTION_83
0x4001db9	    0x65488b042528	                mov rax, qword gs:[0x28]	      1607	dm.c	FUNCTION_83
0x4001dc2	      0x4889442430	             mov qword [rsp + 0x30], rax	      1607	dm.c	FUNCTION_83
0x4001dc7	            0x31c0	                            xor eax, eax	      1607	dm.c	FUNCTION_83
0x4001dc9	          0x4885f6	                           test rsi, rsi	      1612	dm.c	FUNCTION_83	IF_1	CALL_1
0x4001dcc	    0xc74424040000	                  mov dword [rsp + 4], 0	      1610	dm.c	FUNCTION_83
0x4001dd4	     0xf841b010000	                            je 0x4001ef5	      1612	dm.c	FUNCTION_83	IF_1	CALL_1
0x4001dda	      0x4889742408	                mov qword [rsp + 8], rsi	      1537	dm.c	FUNCTION_81
0x4001ddf	          0x4889d6	                            mov rsi, rdx	      1538	dm.c	FUNCTION_81	CALL_1
0x4001de2	          0x4889fd	                            mov rbp, rdi	      1538	dm.c	FUNCTION_81	CALL_1
0x4001de5	      0xe866eaffff	                       call sym.alloc_io	      1538	dm.c	FUNCTION_81	CALL_1
0x4001dea	        0xf6431204	               test byte [rbx + 0x12], 4	      1619	dm.c	FUNCTION_83	IF_2
0x4001dee	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1539	dm.c	FUNCTION_81
0x4001df2	      0x4889442418	             mov qword [rsp + 0x18], rax	      1538	dm.c	FUNCTION_81	CALL_1
0x4001df7	      0x4889542420	             mov qword [rsp + 0x20], rdx	      1539	dm.c	FUNCTION_81
0x4001dfc	     0xf85af000000	                           jne 0x4001eb1	      1619	dm.c	FUNCTION_83	IF_2
0x4001e02	    0x488bad980000	            mov rbp, qword [rbp + 0x98] 	      1625	dm.c	FUNCTION_83	ELSE_1
0x4001e09	          0x4885ed	                           test rbp, rbp	      1632	dm.c	FUNCTION_83	ELSE_1	IF_3	CALL_7
0x4001e0c	     0xf84cd000000	                            je 0x4001edf	      1632	dm.c	FUNCTION_83	ELSE_1	IF_3	CALL_7
0x4001e12	      0x48837d0000	                      cmp qword [rbp], 0	      1632	dm.c	FUNCTION_83	ELSE_1	IF_3	CALL_7
0x4001e17	     0xf84c2000000	                            je 0x4001edf	      1632	dm.c	FUNCTION_83	ELSE_1	IF_3	CALL_7
0x4001e1d	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      1638	dm.c	FUNCTION_83	ELSE_1	CALL_8
0x4001e20	      0x488d7c2408	                      lea rdi, [rsp + 8]	      1639	dm.c	FUNCTION_83	ELSE_1	IF_4	CALL_10
0x4001e25	      0x488d542404	                      lea rdx, [rsp + 4]	      1639	dm.c	FUNCTION_83	ELSE_1	IF_4	CALL_10
0x4001e2a	          0x4889ee	                            mov rsi, rbp	      1639	dm.c	FUNCTION_83	ELSE_1	IF_4	CALL_10
0x4001e2d	      0x48895c2410	             mov qword [rsp + 0x10], rbx	      1637	dm.c	FUNCTION_83	ELSE_1
0x4001e32	      0xbbffffffff	                     mov ebx, 0xffffffff	      1609	dm.c	FUNCTION_83
0x4001e37	          0xc1e809	                              shr eax, 9	      1638	dm.c	FUNCTION_83	ELSE_1	CALL_8
0x4001e3a	        0x89442428	             mov dword [rsp + 0x28], eax	      1638	dm.c	FUNCTION_83	ELSE_1	CALL_8
0x4001e3e	      0xe81dfdffff	          call sym.__process_abnormal_io	      1639	dm.c	FUNCTION_83	ELSE_1	IF_4	CALL_10
0x4001e43	            0x84c0	                             test al, al	      1639	dm.c	FUNCTION_83	ELSE_1	IF_4	CALL_10
0x4001e45	        0x8b7c2404	                mov edi, dword [rsp + 4]	      1639	dm.c	FUNCTION_83	ELSE_1	IF_4	CALL_10
0x4001e49	            0x753b	                           jne 0x4001e86	      1639	dm.c	FUNCTION_83	ELSE_1	IF_4	CALL_10
0x4001e4b	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      1642	dm.c	FUNCTION_83	ELSE_1	CALL_11
0x4001e50	      0xb900004001	                      mov ecx, 0x1400000	      1642	dm.c	FUNCTION_83	ELSE_1	CALL_11
0x4001e55	            0x31d2	                            xor edx, edx	      1642	dm.c	FUNCTION_83	ELSE_1	CALL_11
0x4001e57	          0x4889ee	                            mov rsi, rbp	      1642	dm.c	FUNCTION_83	ELSE_1	CALL_11
0x4001e5a	      0xe851f3ffff	              call sym.alloc_tio.isra.29	      1642	dm.c	FUNCTION_83	ELSE_1	CALL_11
0x4001e5f	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1349	dm.c	FUNCTION_65	CALL_1
0x4001e64	        0x488d7830	                   lea rdi, [rax + 0x30]	      1345	dm.c	FUNCTION_65
0x4001e68	          0x4889c3	                            mov rbx, rax	      1642	dm.c	FUNCTION_83	ELSE_1	CALL_11
0x4001e6b	    0x48c740200000	               mov qword [rax + 0x20], 0	      1347	dm.c	FUNCTION_65
0x4001e73	      0xe800000000	                          call 0x4001e78	      1349	dm.c	FUNCTION_65	CALL_1
0x4001e78	          0x4889df	                            mov rdi, rbx	      1353	dm.c	FUNCTION_65	CALL_3
0x4001e7b	      0xe820edffff	                      call sym.__map_bio	      1353	dm.c	FUNCTION_65	CALL_3
0x4001e80	        0x8b7c2404	                mov edi, dword [rsp + 4]	      1353	dm.c	FUNCTION_65	CALL_3
0x4001e84	            0x89c3	                            mov ebx, eax	      1353	dm.c	FUNCTION_65	CALL_3
0x4001e86	      0xe800000000	                          call 0x4001e8b	      1647	dm.c	FUNCTION_83	CALL_14
0x4001e8b	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1647	dm.c	FUNCTION_83	CALL_14
0x4001e90	           0xfb6f0	                           movzx esi, al	      1647	dm.c	FUNCTION_83	CALL_14
0x4001e93	      0xe8c8eaffff	                    call sym.dec_pending	      1647	dm.c	FUNCTION_83	CALL_14
0x4001e98	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      1649	dm.c	FUNCTION_83
0x4001e9d	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      1649	dm.c	FUNCTION_83
0x4001ea6	            0x89d8	                            mov eax, ebx	      1649	dm.c	FUNCTION_83
0x4001ea8	            0x755e	                           jne 0x4001f08	      1649	dm.c	FUNCTION_83
0x4001eaa	        0x4883c438	                           add rsp, 0x38	      1649	dm.c	FUNCTION_83
0x4001eae	              0x5b	                                 pop rbx	      1649	dm.c	FUNCTION_83
0x4001eaf	              0x5d	                                 pop rbp	      1649	dm.c	FUNCTION_83
0x4001eb0	              0xc3	                                     ret	      1649	dm.c	FUNCTION_83
0x4001eb1	        0x488b4008	                mov rax, qword [rax + 8]	      1620	dm.c	FUNCTION_83	IF_2
0x4001eb5	      0x488d7c2408	                      lea rdi, [rsp + 8]	      1622	dm.c	FUNCTION_83	IF_2	CALL_4
0x4001eba	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1621	dm.c	FUNCTION_83	IF_2
0x4001ec2	      0xbbffffffff	                     mov ebx, 0xffffffff	      1609	dm.c	FUNCTION_83
0x4001ec7	    0x4805a8030000	                          add rax, 0x3a8	      1620	dm.c	FUNCTION_83	IF_2
0x4001ecd	      0x4889442410	             mov qword [rsp + 0x10], rax	      1620	dm.c	FUNCTION_83	IF_2
0x4001ed2	      0xe879feffff	call sym.__send_empty_flush.constprop.43	      1622	dm.c	FUNCTION_83	IF_2	CALL_4
0x4001ed7	            0x89c7	                            mov edi, eax	      1622	dm.c	FUNCTION_83	IF_2	CALL_4
0x4001ed9	        0x89442404	                mov dword [rsp + 4], eax	      1622	dm.c	FUNCTION_83	IF_2	CALL_4
0x4001edd	            0xeba7	                           jmp 0x4001e86	      1622	dm.c	FUNCTION_83	IF_2	CALL_4
0x4001edf	             0xf0b	                                     ud2	      1622	dm.c	FUNCTION_83	IF_2	CALL_4
0x4001ee1	      0xbffbffffff	                     mov edi, 0xfffffffb	      1634	dm.c	FUNCTION_83	ELSE_1	IF_3
0x4001ee6	    0xc7442404fbff	        mov dword [rsp + 4], 0xfffffffb 	      1633	dm.c	FUNCTION_83	ELSE_1	IF_3
0x4001eee	      0xbbffffffff	                     mov ebx, 0xffffffff	      1609	dm.c	FUNCTION_83
0x4001ef3	            0xeb91	                           jmp 0x4001e86	      1634	dm.c	FUNCTION_83	ELSE_1	IF_3
0x4001ef5	        0xc6421a0a	              mov byte [rdx + 0x1a], 0xa	       452	bio.h	FUNCTION_242
0x4001ef9	          0x4889d7	                            mov rdi, rdx	       453	bio.h	FUNCTION_242	CALL_1
0x4001efc	      0xbbffffffff	                     mov ebx, 0xffffffff	      1614	dm.c	FUNCTION_83	IF_1
0x4001f01	      0xe800000000	                          call 0x4001f06	       453	bio.h	FUNCTION_242	CALL_1
0x4001f06	            0xeb90	                           jmp 0x4001e98	      1614	dm.c	FUNCTION_83	IF_1
0x4001f08	      0xe800000000	                          call 0x4001f0d	      1649	dm.c	FUNCTION_83
dm_make_request	DO,0:functions,0:CALL,1:ELSE,0:IF,0:WHILE,0:SWITCH,0:FOR,0	3
0x40017c0	    0x488bbf980100	           mov rdi, qword [rdi + 0x198] 	      1686	dm.c	FUNCTION_85	CALL_1
0x40017c7	    0x48c7c2000000	                              mov rdx, 0	      1686	dm.c	FUNCTION_85	CALL_1
0x40017ce	      0xe93dffffff	       jmp sym.__dm_make_request.isra.39	      1686	dm.c	FUNCTION_85	CALL_1
dm_pr_register	DO,0:functions,0:CALL,2:ELSE,0:IF,1:WHILE,0:SWITCH,0:FOR,0	38
0x4002200	            0x4154	                                push r12	      3006	dm.c	FUNCTION_151
0x4002202	              0x55	                                push rbp	      3006	dm.c	FUNCTION_151
0x4002203	          0x4989fc	                            mov r12, rdi	      3006	dm.c	FUNCTION_151
0x4002206	              0x53	                                push rbx	      3006	dm.c	FUNCTION_151
0x4002207	          0x4889d3	                            mov rbx, rdx	      3006	dm.c	FUNCTION_151
0x400220a	        0x4883ec20	                           sub rsp, 0x20	      3006	dm.c	FUNCTION_151
0x400220e	    0x488bbf800000	            mov rdi, qword [rdi + 0x80] 	      3015	dm.c	FUNCTION_151	CALL_1
0x4002215	        0x48893424	                    mov qword [rsp], rsi	      3007	dm.c	FUNCTION_151
0x4002219	          0x4889e6	                            mov rsi, rsp	      3015	dm.c	FUNCTION_151	CALL_1
0x400221c	      0x4889542408	                mov qword [rsp + 8], rdx	      3007	dm.c	FUNCTION_151
0x4002221	    0x65488b042528	                mov rax, qword gs:[0x28]	      3006	dm.c	FUNCTION_151
0x400222a	      0x4889442418	             mov qword [rsp + 0x18], rax	      3006	dm.c	FUNCTION_151
0x400222f	            0x31c0	                            xor eax, eax	      3006	dm.c	FUNCTION_151
0x4002231	        0x894c2410	             mov dword [rsp + 0x10], ecx	      3007	dm.c	FUNCTION_151
0x4002235	      0xc644241401	                mov byte [rsp + 0x14], 1	      3007	dm.c	FUNCTION_151
0x400223a	      0xe821ffffff	call sym.dm_call_pr.isra.38.constprop.46	      3015	dm.c	FUNCTION_151	CALL_1
0x400223f	            0x85c0	                           test eax, eax	      3016	dm.c	FUNCTION_151	IF_1
0x4002241	            0x89c5	                            mov ebp, eax	      3015	dm.c	FUNCTION_151	CALL_1
0x4002243	            0x742f	                            je 0x4002274	      3016	dm.c	FUNCTION_151	IF_1
0x4002245	          0x4885db	                           test rbx, rbx	      3016	dm.c	FUNCTION_151	IF_1
0x4002248	            0x742a	                            je 0x4002274	      3016	dm.c	FUNCTION_151	IF_1
0x400224a	    0x498bbc248000	            mov rdi, qword [r12 + 0x80] 	      3022	dm.c	FUNCTION_151	IF_1	CALL_2
0x4002252	          0x4889e6	                            mov rsi, rsp	      3022	dm.c	FUNCTION_151	IF_1	CALL_2
0x4002255	        0x48891c24	                    mov qword [rsp], rbx	      3018	dm.c	FUNCTION_151	IF_1
0x4002259	    0x48c744240800	                  mov qword [rsp + 8], 0	      3019	dm.c	FUNCTION_151	IF_1
0x4002262	    0xc74424100000	               mov dword [rsp + 0x10], 0	      3020	dm.c	FUNCTION_151	IF_1
0x400226a	      0xc644241400	                mov byte [rsp + 0x14], 0	      3021	dm.c	FUNCTION_151	IF_1
0x400226f	      0xe8ecfeffff	call sym.dm_call_pr.isra.38.constprop.46	      3022	dm.c	FUNCTION_151	IF_1	CALL_2
0x4002274	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      3026	dm.c	FUNCTION_151
0x4002279	    0x654833142528	                xor rdx, qword gs:[0x28]	      3026	dm.c	FUNCTION_151
0x4002282	            0x89e8	                            mov eax, ebp	      3026	dm.c	FUNCTION_151
0x4002284	            0x7509	                           jne 0x400228f	      3026	dm.c	FUNCTION_151
0x4002286	        0x4883c420	                           add rsp, 0x20	      3026	dm.c	FUNCTION_151
0x400228a	              0x5b	                                 pop rbx	      3026	dm.c	FUNCTION_151
0x400228b	              0x5d	                                 pop rbp	      3026	dm.c	FUNCTION_151
0x400228c	            0x415c	                                 pop r12	      3026	dm.c	FUNCTION_151
0x400228e	              0xc3	                                     ret	      3026	dm.c	FUNCTION_151
0x400228f	      0xe800000000	                          call 0x4002294	      3026	dm.c	FUNCTION_151
is_split_required_for_discard	DO,0:functions,0:CALL,0:ELSE,0:IF,0:WHILE,0:SWITCH,0:FOR,0	4
0x4000120	         0xfb64750	           movzx eax, byte [rdi + 0x50] 	      1428	dm.c	FUNCTION_73
0x4000124	          0xc0e802	                               shr al, 2	      1428	dm.c	FUNCTION_73
0x4000127	          0x83e001	                              and eax, 1	      1428	dm.c	FUNCTION_73
0x400012a	              0xc3	                                     ret	      1429	dm.c	FUNCTION_73
dm_get_mdptr	DO,0:functions,0:CALL,0:ELSE,0:IF,0:WHILE,0:SWITCH,0:FOR,0	2
0x4002e00	    0x488b87c80000	            mov rax, qword [rdi + 0xc8] 	      2240	dm.c	FUNCTION_109
0x4002e07	              0xc3	                                     ret	      2241	dm.c	FUNCTION_109
get_num_write_zeroes_bios	DO,0:functions,0:CALL,0:ELSE,0:IF,0:WHILE,0:SWITCH,0:FOR,0	2
0x4000110	          0x8b4734	            mov eax, dword [rdi + 0x34] 	      1421	dm.c	FUNCTION_72
0x4000113	              0xc3	                                     ret	      1422	dm.c	FUNCTION_72
dm_get_stats	DO,0:functions,0:CALL,0:ELSE,0:IF,0:WHILE,0:SWITCH,0:FOR,0	2
0x4002600	    0x488d87180400	                  lea rax, [rdi + 0x418]	       451	dm.c	FUNCTION_22
0x4002607	              0xc3	                                     ret	       452	dm.c	FUNCTION_22
dm_bio_get_target_bio_nr	DO,0:functions,0:CALL,1:ELSE,0:IF,0:WHILE,0:SWITCH,0:FOR,0	2
0x4000060	          0x8b47e8	             mov eax, dword [rdi - 0x18]	       126	dm.c	FUNCTION_4	CALL_1
0x4000063	              0xc3	                                     ret	       127	dm.c	FUNCTION_4
dm_free_md_mempools	DO,0:functions,0:CALL,3:ELSE,0:IF,1:WHILE,0:SWITCH,0:FOR,0	11
0x4003670	          0x4885ff	                           test rdi, rdi	      2947	dm.c	FUNCTION_148	IF_1
0x4003673	            0x741e	                            je 0x4003693	      2947	dm.c	FUNCTION_148	IF_1
0x4003675	              0x53	                                push rbx	      2946	dm.c	FUNCTION_148
0x4003676	          0x4889fb	                            mov rbx, rdi	      2946	dm.c	FUNCTION_148
0x4003679	      0xe800000000	                          call 0x400367e	      2950	dm.c	FUNCTION_148	CALL_1
0x400367e	    0x488dbbe00000	                   lea rdi, [rbx + 0xe0]	      2951	dm.c	FUNCTION_148	CALL_2
0x4003685	      0xe800000000	                          call 0x400368a	      2951	dm.c	FUNCTION_148	CALL_2
0x400368a	          0x4889df	                            mov rdi, rbx	      2953	dm.c	FUNCTION_148	CALL_3
0x400368d	              0x5b	                                 pop rbx	      2954	dm.c	FUNCTION_148
0x400368e	      0xe900000000	                           jmp 0x4003693	      2953	dm.c	FUNCTION_148	CALL_3
0x4003693	            0xf3c3	                                     ret	      2953	dm.c	FUNCTION_148	CALL_3
dm_blk_getgeo	DO,0:functions,0:CALL,1:ELSE,0:IF,0:WHILE,0:SWITCH,0:FOR,0	13
0x40000a0	    0x488b87800000	            mov rax, qword [rdi + 0x80] 	       456	dm.c	FUNCTION_23
0x40000a7	              0x55	                                push rbp	       455	dm.c	FUNCTION_23
0x40000a8	          0x4889e5	                            mov rbp, rsp	       455	dm.c	FUNCTION_23
0x40000ab	            0x4152	                                push r10	       455	dm.c	FUNCTION_23
0x40000ad	    0x488b80c80300	           mov rax, qword [rax + 0x3c8] 	       456	dm.c	FUNCTION_23
0x40000b4	            0x415a	                                 pop r10	       459	dm.c	FUNCTION_23
0x40000b6	              0x5d	                                 pop rbp	       459	dm.c	FUNCTION_23
0x40000b7	    0x488b90380300	           mov rdx, qword [rax + 0x338] 	       826	dm.c	FUNCTION_46
0x40000be	    0x488b80300300	           mov rax, qword [rax + 0x330] 	       826	dm.c	FUNCTION_46
0x40000c5	        0x48895608	                mov qword [rsi + 8], rdx	       826	dm.c	FUNCTION_46
0x40000c9	          0x488906	                    mov qword [rsi], rax	       826	dm.c	FUNCTION_46
0x40000cc	            0x31c0	                            xor eax, eax	       459	dm.c	FUNCTION_23
0x40000ce	              0xc3	                                     ret	       459	dm.c	FUNCTION_23
dm_kobject	DO,0:functions,0:CALL,0:ELSE,0:IF,0:WHILE,0:SWITCH,0:FOR,0	2
0x40035d0	    0x488d87480300	                  lea rax, [rdi + 0x348]	      2847	dm.c	FUNCTION_140
0x40035d7	              0xc3	                                     ret	      2848	dm.c	FUNCTION_140
__send_changing_extent_only	DO,0:functions,0:CALL,7:ELSE,1:IF,2:WHILE,0:SWITCH,0:FOR,0	81
0x4001a50	            0x4155	                                push r13	      1434	dm.c	FUNCTION_74
0x4001a52	            0x4154	                                push r12	      1434	dm.c	FUNCTION_74
0x4001a54	              0x55	                                push rbp	      1434	dm.c	FUNCTION_74
0x4001a55	              0x53	                                push rbx	      1434	dm.c	FUNCTION_74
0x4001a56	        0x4883ec10	                           sub rsp, 0x10	      1434	dm.c	FUNCTION_74
0x4001a5a	    0x65488b042528	                mov rax, qword gs:[0x28]	      1434	dm.c	FUNCTION_74
0x4001a63	      0x4889442408	                mov qword [rsp + 8], rax	      1434	dm.c	FUNCTION_74
0x4001a68	            0x31c0	                            xor eax, eax	      1434	dm.c	FUNCTION_74
0x4001a6a	          0x4885d2	                           test rdx, rdx	      1444	dm.c	FUNCTION_74	CALL_1
0x4001a6d	     0xf84ce000000	                            je 0x4001b41	      1444	dm.c	FUNCTION_74	CALL_1
0x4001a73	          0x4889fb	                            mov rbx, rdi	      1444	dm.c	FUNCTION_74	CALL_1
0x4001a76	          0x4889f5	                            mov rbp, rsi	      1444	dm.c	FUNCTION_74	CALL_1
0x4001a79	          0x4989cc	                            mov r12, rcx	      1444	dm.c	FUNCTION_74	CALL_1
0x4001a7c	          0x4889f7	                            mov rdi, rsi	      1444	dm.c	FUNCTION_74	CALL_1
0x4001a7f	      0xe800000000	                          call 0x4001a84	      1444	dm.c	FUNCTION_74	CALL_1
0x4001a84	            0x85c0	                           test eax, eax	      1445	dm.c	FUNCTION_74	IF_1
0x4001a86	          0x4189c5	                           mov r13d, eax	      1444	dm.c	FUNCTION_74	CALL_1
0x4001a89	     0xf84b2000000	                            je 0x4001b41	      1445	dm.c	FUNCTION_74	IF_1
0x4001a8f	          0x4d85e4	                           test r12, r12	      1448	dm.c	FUNCTION_74	IF_2	CALL_2
0x4001a92	            0x742e	                            je 0x4001ac2	      1448	dm.c	FUNCTION_74	IF_2	CALL_2
0x4001a94	          0x4889ef	                            mov rdi, rbp	      1448	dm.c	FUNCTION_74	IF_2	CALL_2
0x4001a97	      0xe800000000	                          call 0x4001a9c	      1448	dm.c	FUNCTION_74	IF_2	CALL_2
0x4001a9c	            0x84c0	                             test al, al	      1448	dm.c	FUNCTION_74	IF_2	CALL_2
0x4001a9e	            0x7522	                           jne 0x4001ac2	      1448	dm.c	FUNCTION_74	IF_2	CALL_2
0x4001aa0	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1449	dm.c	FUNCTION_74	CALL_4
0x4001aa4	        0x482b4510	             sub rax, qword [rbp + 0x10]	      1449	dm.c	FUNCTION_74	CALL_4
0x4001aa8	          0x8b5320	            mov edx, dword [rbx + 0x20] 	      1449	dm.c	FUNCTION_74	CALL_4
0x4001aab	        0x488b7518	            mov rsi, qword [rbp + 0x18] 	      1449	dm.c	FUNCTION_74	CALL_4
0x4001aaf	          0x4829c6	                            sub rsi, rax	      1449	dm.c	FUNCTION_74	CALL_4
0x4001ab2	          0x4889f0	                            mov rax, rsi	      1449	dm.c	FUNCTION_74	CALL_4
0x4001ab5	          0x4839d6	                            cmp rsi, rdx	      1449	dm.c	FUNCTION_74	CALL_4
0x4001ab8	        0x480f47c2	                          cmova rax, rdx	      1449	dm.c	FUNCTION_74	CALL_4
0x4001abc	        0x89442404	                mov dword [rsp + 4], eax	      1449	dm.c	FUNCTION_74	CALL_4
0x4001ac0	            0xeb24	                           jmp 0x4001ae6	      1449	dm.c	FUNCTION_74	CALL_4
0x4001ac2	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       971	dm.c	FUNCTION_53	CALL_1
0x4001ac6	        0x482b4510	             sub rax, qword [rbp + 0x10]	       971	dm.c	FUNCTION_53	CALL_1
0x4001aca	        0x488b4d18	            mov rcx, qword [rbp + 0x18] 	       973	dm.c	FUNCTION_53
0x4001ace	          0x8b7d20	            mov edi, dword [rbp + 0x20] 	       984	dm.c	FUNCTION_54	IF_1
0x4001ad1	          0x8b7320	            mov esi, dword [rbx + 0x20] 	      1451	dm.c	FUNCTION_74	CALL_6
0x4001ad4	          0x4829c1	                            sub rcx, rax	       973	dm.c	FUNCTION_53
0x4001ad7	            0x85ff	                           test edi, edi	       984	dm.c	FUNCTION_54	IF_1
0x4001ad9	            0x7546	                           jne 0x4001b21	       984	dm.c	FUNCTION_54	IF_1
0x4001adb	          0x4839ce	                            cmp rsi, rcx	      1451	dm.c	FUNCTION_74	CALL_6
0x4001ade	        0x480f46ce	                         cmovbe rcx, rsi	      1451	dm.c	FUNCTION_74	CALL_6
0x4001ae2	        0x894c2404	                mov dword [rsp + 4], ecx	      1451	dm.c	FUNCTION_74	CALL_6
0x4001ae6	      0x488d4c2404	                      lea rcx, [rsp + 4]	      1453	dm.c	FUNCTION_74	CALL_7
0x4001aeb	          0x4489ea	                           mov edx, r13d	      1453	dm.c	FUNCTION_74	CALL_7
0x4001aee	          0x4889ee	                            mov rsi, rbp	      1453	dm.c	FUNCTION_74	CALL_7
0x4001af1	          0x4889df	                            mov rdi, rbx	      1453	dm.c	FUNCTION_74	CALL_7
0x4001af4	      0xe8a7fdffff	          call sym.__send_duplicate_bios	      1453	dm.c	FUNCTION_74	CALL_7
0x4001af9	        0x8b542404	                mov edx, dword [rsp + 4]	      1455	dm.c	FUNCTION_74
0x4001afd	            0x31c0	                            xor eax, eax	      1458	dm.c	FUNCTION_74
0x4001aff	        0x48015318	            add qword [rbx + 0x18], rdx 	      1455	dm.c	FUNCTION_74
0x4001b03	          0x295320	             sub dword [rbx + 0x20], edx	      1456	dm.c	FUNCTION_74
0x4001b06	      0x488b742408	                mov rsi, qword [rsp + 8]	      1459	dm.c	FUNCTION_74
0x4001b0b	    0x654833342528	                xor rsi, qword gs:[0x28]	      1459	dm.c	FUNCTION_74
0x4001b14	            0x753c	                           jne 0x4001b52	      1459	dm.c	FUNCTION_74
0x4001b16	        0x4883c410	                           add rsp, 0x10	      1459	dm.c	FUNCTION_74
0x4001b1a	              0x5b	                                 pop rbx	      1459	dm.c	FUNCTION_74
0x4001b1b	              0x5d	                                 pop rbp	      1459	dm.c	FUNCTION_74
0x4001b1c	            0x415c	                                 pop r12	      1459	dm.c	FUNCTION_74
0x4001b1e	            0x415d	                                 pop r13	      1459	dm.c	FUNCTION_74
0x4001b20	              0xc3	                                     ret	      1459	dm.c	FUNCTION_74
0x4001b21	        0x448d4fff	                      lea r9d, [rdi - 1]	       986	dm.c	FUNCTION_54	IF_1	IF_2	CALL_3
0x4001b25	          0x4189f8	                            mov r8d, edi	       986	dm.c	FUNCTION_54	IF_1	IF_2	CALL_3
0x4001b28	          0x4489ca	                            mov edx, r9d	       989	dm.c	FUNCTION_54	IF_1	ELSE_1
0x4001b2b	            0x21c2	                            and edx, eax	       989	dm.c	FUNCTION_54	IF_1	ELSE_1
0x4001b2d	          0x4485cf	                           test edi, r9d	       986	dm.c	FUNCTION_54	IF_1	IF_2	CALL_3
0x4001b30	            0x7516	                           jne 0x4001b48	       986	dm.c	FUNCTION_54	IF_1	IF_2	CALL_3
0x4001b32	          0x4c89c0	                             mov rax, r8	       990	dm.c	FUNCTION_54	IF_1
0x4001b35	          0x4829d0	                            sub rax, rdx	       990	dm.c	FUNCTION_54	IF_1
0x4001b38	          0x4839c1	                            cmp rcx, rax	       990	dm.c	FUNCTION_54	IF_1
0x4001b3b	        0x480f47c8	                          cmova rcx, rax	       990	dm.c	FUNCTION_54	IF_1
0x4001b3f	            0xeb9a	                           jmp 0x4001adb	       990	dm.c	FUNCTION_54	IF_1
0x4001b41	      0xb8a1ffffff	                     mov eax, 0xffffffa1	      1446	dm.c	FUNCTION_74	IF_1
0x4001b46	            0xebbe	                           jmp 0x4001b06	      1446	dm.c	FUNCTION_74	IF_1
0x4001b48	            0x31d2	                            xor edx, edx	       987	dm.c	FUNCTION_54	IF_1	CALL_4
0x4001b4a	          0x49f7f0	                                  div r8	       987	dm.c	FUNCTION_54	IF_1	CALL_4
0x4001b4d	          0x4863d2	                         movsxd rdx, edx	       987	dm.c	FUNCTION_54	IF_1	CALL_4
0x4001b50	            0xebe0	                           jmp 0x4001b32	       987	dm.c	FUNCTION_54	IF_1	CALL_4
0x4001b52	      0xe800000000	                          call 0x4001b57	      1459	dm.c	FUNCTION_74
dm_get_md_queue	DO,0:functions,0:CALL,0:ELSE,0:IF,0:WHILE,0:SWITCH,0:FOR,0	2
0x40025f0	        0x488b4760	            mov rax, qword [rdi + 0x60] 	       446	dm.c	FUNCTION_21
0x40025f4	              0xc3	                                     ret	       447	dm.c	FUNCTION_21
dm_accept_partial_bio	DO,0:functions,0:CALL,4:ELSE,0:IF,0:WHILE,0:SWITCH,0:FOR,0	20
0x40001a0	          0x8b4730	            mov eax, dword [rdi + 0x30] 	      1123	dm.c	FUNCTION_59
0x40001a3	          0xc1e809	                              shr eax, 9	      1123	dm.c	FUNCTION_59
0x40001a6	        0xf6471204	               test byte [rdi + 0x12], 4	      1124	dm.c	FUNCTION_59	CALL_2
0x40001aa	            0x7520	                           jne 0x40001cc	      1124	dm.c	FUNCTION_59	CALL_2
0x40001ac	        0x488b4ff0	             mov rcx, qword [rdi - 0x10]	      1125	dm.c	FUNCTION_59	CALL_3
0x40001b0	            0x8b11	                    mov edx, dword [rcx]	      1125	dm.c	FUNCTION_59	CALL_3
0x40001b2	            0x39d0	                            cmp eax, edx	      1125	dm.c	FUNCTION_59	CALL_3
0x40001b4	            0x7718	                            ja 0x40001ce	      1125	dm.c	FUNCTION_59	CALL_3
0x40001b6	            0x39f0	                            cmp eax, esi	      1126	dm.c	FUNCTION_59	CALL_4
0x40001b8	            0x7216	                            jb 0x40001d0	      1126	dm.c	FUNCTION_59	CALL_4
0x40001ba	          0x4189f0	                            mov r8d, esi	      1127	dm.c	FUNCTION_59
0x40001bd	          0xc1e609	                              shl esi, 9	      1128	dm.c	FUNCTION_59
0x40001c0	          0x4129c0	                            sub r8d, eax	      1127	dm.c	FUNCTION_59
0x40001c3	          0x4401c2	                            add edx, r8d	      1127	dm.c	FUNCTION_59
0x40001c6	            0x8911	                    mov dword [rcx], edx	      1127	dm.c	FUNCTION_59
0x40001c8	          0x897730	             mov dword [rdi + 0x30], esi	      1128	dm.c	FUNCTION_59
0x40001cb	              0xc3	                                     ret	      1128	dm.c	FUNCTION_59
0x40001cc	             0xf0b	                                     ud2	      1128	dm.c	FUNCTION_59
0x40001ce	             0xf0b	                                     ud2	      1124	dm.c	FUNCTION_59	CALL_2
0x40001d0	             0xf0b	                                     ud2	      1125	dm.c	FUNCTION_59	CALL_3
dm_exit	DO,0:functions,0:CALL,2:ELSE,0:IF,0:WHILE,1:SWITCH,0:FOR,0	14
0x4000040	        0x807ff800	                   cmp byte [rdi - 8], 0	       108	dm.c	FUNCTION_2	IF_1
0x4000044	            0x7408	                            je 0x400004e	       108	dm.c	FUNCTION_2	IF_1
0x4000046	          0x4829f7	                            sub rdi, rsi	       110	dm.c	FUNCTION_2
0x4000049	        0x488d4790	                   lea rax, [rdi - 0x70]	       110	dm.c	FUNCTION_2
0x400004d	              0xc3	                                     ret	       111	dm.c	FUNCTION_2
0x400004e	          0x4829f7	                            sub rdi, rsi	       109	dm.c	FUNCTION_2	IF_1
0x4000051	        0x488d47d0	                   lea rax, [rdi - 0x30]	       109	dm.c	FUNCTION_2	IF_1
0x4000055	              0xc3	                                     ret	       109	dm.c	FUNCTION_2	IF_1
0x4000056	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       109	dm.c	FUNCTION_2	IF_1
0x4000060	          0x8b47e8	             mov eax, dword [rdi - 0x18]	       126	dm.c	FUNCTION_4	CALL_1
0x4000063	              0xc3	                                     ret	       127	dm.c	FUNCTION_4
0x4000064	            0x6690	                                     nop	       127	dm.c	FUNCTION_4
0x4000066	              0x66	                                 invalid	       127	dm.c	FUNCTION_4
0x4000067	              0x2e	                                 invalid	       127	dm.c	FUNCTION_4
dm_remap_zone_report	DO,0:functions,1:CALL,3:ELSE,0:IF,2:WHILE,0:SWITCH,0:FOR,0	2
0x40000d0	        0xc6461a01	                mov byte [rsi + 0x1a], 1	      1206	dm.c	FUNCTION_60
0x40000d4	              0xc3	                                     ret	      1206	dm.c	FUNCTION_60
dm_destroy_immediate	DO,0:functions,0:CALL,1:ELSE,0:IF,0:WHILE,0:SWITCH,0:FOR,0	2
0x4002f80	            0x31f6	                            xor esi, esi	      2329	dm.c	FUNCTION_116	CALL_1
0x4002f82	      0xe969e3ffff	                    jmp sym.__dm_destroy	      2329	dm.c	FUNCTION_116	CALL_1
__split_and_process_non_flush	DO,0:functions,0:CALL,8:ELSE,1:IF,4:WHILE,0:SWITCH,0:FOR,0	101
0x4001bf0	            0x4157	                                push r15	      1505	dm.c	ELSE_4	FUNCTION_80
0x4001bf2	            0x4156	                                push r14	      1505	dm.c	ELSE_4	FUNCTION_80
0x4001bf4	            0x4155	                                push r13	      1505	dm.c	ELSE_4	FUNCTION_80
0x4001bf6	            0x4154	                                push r12	      1505	dm.c	ELSE_4	FUNCTION_80
0x4001bf8	              0x55	                                push rbp	      1505	dm.c	ELSE_4	FUNCTION_80
0x4001bf9	              0x53	                                push rbx	      1505	dm.c	ELSE_4	FUNCTION_80
0x4001bfa	          0x4889fb	                            mov rbx, rdi	      1505	dm.c	ELSE_4	FUNCTION_80
0x4001bfd	        0x4883ec10	                           sub rsp, 0x10	      1505	dm.c	ELSE_4	FUNCTION_80
0x4001c01	        0x4c8b6708	                mov r12, qword [rdi + 8]	      1506	dm.c	ELSE_4	FUNCTION_80
0x4001c05	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	      1511	dm.c	ELSE_4	FUNCTION_80	CALL_1
0x4001c09	          0x488b3f	                    mov rdi, qword [rdi]	      1511	dm.c	ELSE_4	FUNCTION_80	CALL_1
0x4001c0c	    0x65488b042528	                mov rax, qword gs:[0x28]	      1505	dm.c	ELSE_4	FUNCTION_80
0x4001c15	      0x4889442408	                mov qword [rsp + 8], rax	      1505	dm.c	ELSE_4	FUNCTION_80
0x4001c1a	            0x31c0	                            xor eax, eax	      1505	dm.c	ELSE_4	FUNCTION_80
0x4001c1c	      0xe800000000	                          call 0x4001c21	      1511	dm.c	ELSE_4	FUNCTION_80	CALL_1
0x4001c21	        0x48833800	                      cmp qword [rax], 0	      1512	dm.c	ELSE_4	FUNCTION_80	IF_1	CALL_2
0x4001c25	     0xf8419010000	                            je 0x4001d44	      1512	dm.c	ELSE_4	FUNCTION_80	IF_1	CALL_2
0x4001c2b	      0x488d542404	                      lea rdx, [rsp + 4]	      1515	dm.c	ELSE_4	FUNCTION_80	IF_2	CALL_4
0x4001c30	          0x4889c6	                            mov rsi, rax	      1515	dm.c	ELSE_4	FUNCTION_80	IF_2	CALL_4
0x4001c33	          0x4889df	                            mov rdi, rbx	      1515	dm.c	ELSE_4	FUNCTION_80	IF_2	CALL_4
0x4001c36	          0x4889c5	                            mov rbp, rax	      1515	dm.c	ELSE_4	FUNCTION_80	IF_2	CALL_4
0x4001c39	      0xe822ffffff	          call sym.__process_abnormal_io	      1515	dm.c	ELSE_4	FUNCTION_80	IF_2	CALL_4
0x4001c3e	            0x84c0	                             test al, al	      1515	dm.c	ELSE_4	FUNCTION_80	IF_2	CALL_4
0x4001c40	     0xf85ee000000	                           jne 0x4001d34	      1515	dm.c	ELSE_4	FUNCTION_80	IF_2	CALL_4
0x4001c46	    0x41807c241004	                cmp byte [r12 + 0x10], 4	      1518	dm.c	ELSE_4	FUNCTION_80	IF_3	CALL_5
0x4001c4c	     0xf84d3000000	                            je 0x4001d25	      1518	dm.c	ELSE_4	FUNCTION_80	IF_3	CALL_5
0x4001c52	        0x4c8b6b18	            mov r13, qword [rbx + 0x18] 	      1521	dm.c	ELSE_4	FUNCTION_80	ELSE_1	CALL_7
0x4001c56	        0x488b4d18	            mov rcx, qword [rbp + 0x18] 	       973	dm.c	FUNCTION_53
0x4001c5a	          0x8b7520	            mov esi, dword [rbp + 0x20] 	       984	dm.c	FUNCTION_54	IF_1
0x4001c5d	          0x4c89e8	                            mov rax, r13	       971	dm.c	FUNCTION_53	CALL_1
0x4001c60	        0x482b4510	             sub rax, qword [rbp + 0x10]	       971	dm.c	FUNCTION_53	CALL_1
0x4001c64	          0x4829c1	                            sub rcx, rax	       973	dm.c	FUNCTION_53
0x4001c67	            0x85f6	                           test esi, esi	       984	dm.c	FUNCTION_54	IF_1
0x4001c69	     0xf8594000000	                           jne 0x4001d03	       984	dm.c	FUNCTION_54	IF_1
0x4001c6f	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      1521	dm.c	ELSE_4	FUNCTION_80	ELSE_1	CALL_7
0x4001c72	          0x4839c8	                            cmp rax, rcx	      1521	dm.c	ELSE_4	FUNCTION_80	ELSE_1	CALL_7
0x4001c75	        0x480f46c8	                         cmovbe rcx, rax	      1521	dm.c	ELSE_4	FUNCTION_80	ELSE_1	CALL_7
0x4001c79	          0x890c24	                    mov dword [rsp], ecx	      1521	dm.c	ELSE_4	FUNCTION_80	ELSE_1	CALL_7
0x4001c7c	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      1521	dm.c	ELSE_4	FUNCTION_80	ELSE_1	CALL_7
0x4001c80	        0x4c8b7308	                mov r14, qword [rbx + 8]	      1386	dm.c	FUNCTION_68
0x4001c84	            0x31d2	                            xor edx, edx	      1390	dm.c	FUNCTION_68	CALL_1
0x4001c86	          0x4889ee	                            mov rsi, rbp	      1390	dm.c	FUNCTION_68	CALL_1
0x4001c89	      0xb900004001	                      mov ecx, 0x1400000	      1390	dm.c	FUNCTION_68	CALL_1
0x4001c8e	      0xe81df5ffff	              call sym.alloc_tio.isra.29	      1390	dm.c	FUNCTION_68	CALL_1
0x4001c93	        0x4c8d7830	                   lea r15, [rax + 0x30]	      1272	dm.c	FUNCTION_63
0x4001c97	        0x48896020	             mov qword [rax + 0x20], rsp	      1391	dm.c	FUNCTION_68
0x4001c9b	          0x4c89f6	                            mov rsi, r14	      1274	dm.c	FUNCTION_63	CALL_1
0x4001c9e	          0x4989c4	                            mov r12, rax	      1390	dm.c	FUNCTION_68	CALL_1
0x4001ca1	          0x8b2c24	                    mov ebp, dword [rsp]	      1392	dm.c	FUNCTION_68	CALL_2
0x4001ca4	          0x4c89ff	                            mov rdi, r15	      1274	dm.c	FUNCTION_63	CALL_1
0x4001ca7	      0xe800000000	                          call 0x4001cac	      1274	dm.c	FUNCTION_63	CALL_1
0x4001cac	      0x41807e1004	                cmp byte [r14 + 0x10], 4	      1292	dm.c	FUNCTION_63	IF_4	CALL_10
0x4001cb1	            0x7414	                            je 0x4001cc7	      1292	dm.c	FUNCTION_63	IF_4	CALL_10
0x4001cb3	          0x4c89ee	                            mov rsi, r13	      1293	dm.c	FUNCTION_63	CALL_12
0x4001cb6	      0x492b742458	             sub rsi, qword [r12 + 0x58]	      1293	dm.c	FUNCTION_63	CALL_12
0x4001cbb	          0x4c89ff	                            mov rdi, r15	      1293	dm.c	FUNCTION_63	CALL_12
0x4001cbe	        0x48c1e609	                              shl rsi, 9	      1293	dm.c	FUNCTION_63	CALL_12
0x4001cc2	      0xe800000000	                          call 0x4001cc7	      1293	dm.c	FUNCTION_63	CALL_12
0x4001cc7	        0x48c1e509	                              shl rbp, 9	      1294	dm.c	FUNCTION_63	CALL_13
0x4001ccb	          0x4c89e7	                            mov rdi, r12	      1397	dm.c	FUNCTION_68	CALL_4
0x4001cce	      0x41896c2460	             mov dword [r12 + 0x60], ebp	      1294	dm.c	FUNCTION_63	CALL_13
0x4001cd3	      0xe8c8eeffff	                      call sym.__map_bio	      1397	dm.c	FUNCTION_68	CALL_4
0x4001cd8	          0x8b1424	                    mov edx, dword [rsp]	      1528	dm.c	ELSE_4	FUNCTION_80
0x4001cdb	            0x31c0	                            xor eax, eax	      1531	dm.c	ELSE_4	FUNCTION_80
0x4001cdd	        0x48015318	            add qword [rbx + 0x18], rdx 	      1528	dm.c	ELSE_4	FUNCTION_80
0x4001ce1	          0x295320	             sub dword [rbx + 0x20], edx	      1529	dm.c	ELSE_4	FUNCTION_80
0x4001ce4	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1532	dm.c	ELSE_4	FUNCTION_80
0x4001ce9	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      1532	dm.c	ELSE_4	FUNCTION_80
0x4001cf2	            0x7557	                           jne 0x4001d4b	      1532	dm.c	ELSE_4	FUNCTION_80
0x4001cf4	        0x4883c410	                           add rsp, 0x10	      1532	dm.c	ELSE_4	FUNCTION_80
0x4001cf8	              0x5b	                                 pop rbx	      1532	dm.c	ELSE_4	FUNCTION_80
0x4001cf9	              0x5d	                                 pop rbp	      1532	dm.c	ELSE_4	FUNCTION_80
0x4001cfa	            0x415c	                                 pop r12	      1532	dm.c	ELSE_4	FUNCTION_80
0x4001cfc	            0x415d	                                 pop r13	      1532	dm.c	ELSE_4	FUNCTION_80
0x4001cfe	            0x415e	                                 pop r14	      1532	dm.c	ELSE_4	FUNCTION_80
0x4001d00	            0x415f	                                 pop r15	      1532	dm.c	ELSE_4	FUNCTION_80
0x4001d02	              0xc3	                                     ret	      1532	dm.c	ELSE_4	FUNCTION_80
0x4001d03	        0x448d46ff	                      lea r8d, [rsi - 1]	       986	dm.c	FUNCTION_54	IF_1	IF_2	CALL_3
0x4001d07	            0x89f7	                            mov edi, esi	       986	dm.c	FUNCTION_54	IF_1	IF_2	CALL_3
0x4001d09	          0x4489c2	                            mov edx, r8d	       989	dm.c	FUNCTION_54	IF_1	ELSE_1
0x4001d0c	            0x21c2	                            and edx, eax	       989	dm.c	FUNCTION_54	IF_1	ELSE_1
0x4001d0e	          0x4485c6	                           test esi, r8d	       986	dm.c	FUNCTION_54	IF_1	IF_2	CALL_3
0x4001d11	            0x7527	                           jne 0x4001d3a	       986	dm.c	FUNCTION_54	IF_1	IF_2	CALL_3
0x4001d13	          0x4889f8	                            mov rax, rdi	       990	dm.c	FUNCTION_54	IF_1
0x4001d16	          0x4829d0	                            sub rax, rdx	       990	dm.c	FUNCTION_54	IF_1
0x4001d19	          0x4839c1	                            cmp rcx, rax	       990	dm.c	FUNCTION_54	IF_1
0x4001d1c	        0x480f47c8	                          cmova rcx, rax	       990	dm.c	FUNCTION_54	IF_1
0x4001d20	      0xe94affffff	                           jmp 0x4001c6f	       990	dm.c	FUNCTION_54	IF_1
0x4001d25	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      1519	dm.c	ELSE_4	FUNCTION_80	IF_3
0x4001d28	        0x4c8b6b18	            mov r13, qword [rbx + 0x18] 	      1519	dm.c	ELSE_4	FUNCTION_80	IF_3
0x4001d2c	          0x890424	                    mov dword [rsp], eax	      1519	dm.c	ELSE_4	FUNCTION_80	IF_3
0x4001d2f	      0xe948ffffff	                           jmp 0x4001c7c	      1519	dm.c	ELSE_4	FUNCTION_80	IF_3
0x4001d34	        0x8b442404	                mov eax, dword [rsp + 4]	      1516	dm.c	ELSE_4	FUNCTION_80	IF_2
0x4001d38	            0xebaa	                           jmp 0x4001ce4	      1516	dm.c	ELSE_4	FUNCTION_80	IF_2
0x4001d3a	            0x31d2	                            xor edx, edx	       987	dm.c	FUNCTION_54	IF_1	CALL_4
0x4001d3c	          0x48f7f7	                                 div rdi	       987	dm.c	FUNCTION_54	IF_1	CALL_4
0x4001d3f	          0x4863d2	                         movsxd rdx, edx	       987	dm.c	FUNCTION_54	IF_1	CALL_4
0x4001d42	            0xebcf	                           jmp 0x4001d13	       987	dm.c	FUNCTION_54	IF_1	CALL_4
0x4001d44	      0xb8fbffffff	                     mov eax, 0xfffffffb	      1513	dm.c	ELSE_4	FUNCTION_80	IF_1
0x4001d49	            0xeb99	                           jmp 0x4001ce4	      1513	dm.c	ELSE_4	FUNCTION_80	IF_1
0x4001d4b	      0xe800000000	call sym.__send_empty_flush.constprop.43	      1532	dm.c	ELSE_4	FUNCTION_80
