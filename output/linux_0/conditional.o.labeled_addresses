cond_compute_xperms	FOR,1:SWITCH,0:DO,0:IF,2:ELSE,0:functions,0:CALL,3:WHILE,0	33
0x4000c70	          0x4885f6	                           test rsi, rsi	       624	conditional.c	FUNCTION_22	IF_1
0x4000c73	           0xf94c1	                                 sete cl	       624	conditional.c	FUNCTION_22	IF_1
0x4000c76	          0x4885d2	                           test rdx, rdx	       624	conditional.c	FUNCTION_22	IF_1
0x4000c79	           0xf94c0	                                 sete al	       624	conditional.c	FUNCTION_22	IF_1
0x4000c7c	             0x8c1	                               or cl, al	       624	conditional.c	FUNCTION_22	IF_1
0x4000c7e	            0x7521	                           jne 0x4000ca1	       624	conditional.c	FUNCTION_22	IF_1
0x4000c80	          0x4885ff	                           test rdi, rdi	       624	conditional.c	FUNCTION_22	IF_1
0x4000c83	            0x741c	                            je 0x4000ca1	       624	conditional.c	FUNCTION_22	IF_1
0x4000c85	              0x55	                                push rbp	       621	conditional.c	FUNCTION_22
0x4000c86	              0x53	                                push rbx	       621	conditional.c	FUNCTION_22
0x4000c87	          0x4889d5	                            mov rbp, rdx	       621	conditional.c	FUNCTION_22
0x4000c8a	          0x4889f3	                            mov rbx, rsi	       621	conditional.c	FUNCTION_22
0x4000c8d	        0x4883ec08	                              sub rsp, 8	       621	conditional.c	FUNCTION_22
0x4000c91	      0xe800000000	                          call 0x4000c96	       627	conditional.c	FUNCTION_22	FOR_1	CALL_1
0x4000c96	          0x4885c0	                           test rax, rax	       627	conditional.c	FUNCTION_22	FOR_1	CALL_1
0x4000c99	            0x752c	                           jne 0x4000cc7	       627	conditional.c	FUNCTION_22	FOR_1	CALL_1
0x4000c9b	        0x4883c408	                              add rsp, 8	       634	conditional.c	FUNCTION_22
0x4000c9f	              0x5b	                                 pop rbx	       634	conditional.c	FUNCTION_22
0x4000ca0	              0x5d	                                 pop rbp	       634	conditional.c	FUNCTION_22
0x4000ca1	            0xf3c3	                                     ret	       634	conditional.c	FUNCTION_22
0x4000ca3	          0x4889c6	                            mov rsi, rax	       630	conditional.c	FUNCTION_22	FOR_1	CALL_3
0x4000ca6	          0x4889ef	                            mov rdi, rbp	       630	conditional.c	FUNCTION_22	FOR_1	CALL_3
0x4000ca9	        0x48890424	                    mov qword [rsp], rax	       630	conditional.c	FUNCTION_22	FOR_1	CALL_3
0x4000cad	      0xe800000000	                          call 0x4000cb2	       630	conditional.c	FUNCTION_22	FOR_1	CALL_3
0x4000cb2	        0x488b0424	                    mov rax, qword [rsp]	       630	conditional.c	FUNCTION_22	FOR_1	CALL_3
0x4000cb6	         0xfb77306	               movzx esi, word [rbx + 6]	       628	conditional.c	FUNCTION_22	FOR_1	CALL_2
0x4000cba	          0x4889c7	                            mov rdi, rax	       628	conditional.c	FUNCTION_22	FOR_1	CALL_2
0x4000cbd	      0xe800000000	                          call 0x4000cc2	       628	conditional.c	FUNCTION_22	FOR_1	CALL_2
0x4000cc2	          0x4885c0	                           test rax, rax	       627	conditional.c	FUNCTION_22	FOR_1	CALL_1
0x4000cc5	            0x74d4	                            je 0x4000c9b	       627	conditional.c	FUNCTION_22	FOR_1	CALL_1
0x4000cc7	      0x6683780600	                   cmp word [rax + 6], 0	       629	conditional.c	FUNCTION_22	FOR_1	IF_2
0x4000ccc	            0x79e8	                           jns 0x4000cb6	       629	conditional.c	FUNCTION_22	FOR_1	IF_2
0x4000cce	            0xebd3	                           jmp 0x4000ca3	       629	conditional.c	FUNCTION_22	FOR_1	IF_2
cond_compute_av	FOR,1:SWITCH,0:DO,0:IF,5:ELSE,0:functions,0:CALL,3:WHILE,0	69
0x4000cd0	          0x4885f6	                           test rsi, rsi	       643	conditional.c	FUNCTION_23	IF_1
0x4000cd3	        0x410f94c0	                                sete r8b	       643	conditional.c	FUNCTION_23	IF_1
0x4000cd7	          0x4885d2	                           test rdx, rdx	       643	conditional.c	FUNCTION_23	IF_1
0x4000cda	           0xf94c0	                                 sete al	       643	conditional.c	FUNCTION_23	IF_1
0x4000cdd	          0x4108c0	                              or r8b, al	       643	conditional.c	FUNCTION_23	IF_1
0x4000ce0	            0x7528	                           jne 0x4000d0a	       643	conditional.c	FUNCTION_23	IF_1
0x4000ce2	          0x4885ff	                           test rdi, rdi	       643	conditional.c	FUNCTION_23	IF_1
0x4000ce5	            0x7423	                            je 0x4000d0a	       643	conditional.c	FUNCTION_23	IF_1
0x4000ce7	            0x4154	                                push r12	       640	conditional.c	FUNCTION_23
0x4000ce9	              0x55	                                push rbp	       640	conditional.c	FUNCTION_23
0x4000cea	          0x4989cc	                            mov r12, rcx	       640	conditional.c	FUNCTION_23
0x4000ced	              0x53	                                push rbx	       640	conditional.c	FUNCTION_23
0x4000cee	          0x4889f5	                            mov rbp, rsi	       640	conditional.c	FUNCTION_23
0x4000cf1	          0x4889d3	                            mov rbx, rdx	       640	conditional.c	FUNCTION_23
0x4000cf4	        0x4883ec08	                              sub rsp, 8	       640	conditional.c	FUNCTION_23
0x4000cf8	      0xe800000000	                          call 0x4000cfd	       646	conditional.c	FUNCTION_23	FOR_1	CALL_1
0x4000cfd	          0x4885c0	                           test rax, rax	       646	conditional.c	FUNCTION_23	FOR_1	CALL_1
0x4000d00	            0x754c	                           jne 0x4000d4e	       646	conditional.c	FUNCTION_23	FOR_1	CALL_1
0x4000d02	        0x4883c408	                              add rsp, 8	       666	conditional.c	FUNCTION_23
0x4000d06	              0x5b	                                 pop rbx	       666	conditional.c	FUNCTION_23
0x4000d07	              0x5d	                                 pop rbp	       666	conditional.c	FUNCTION_23
0x4000d08	            0x415c	                                 pop r12	       666	conditional.c	FUNCTION_23
0x4000d0a	            0xf3c3	                                     ret	       666	conditional.c	FUNCTION_23
0x4000d0c	          0x8b5008	                mov edx, dword [rax + 8]	       650	conditional.c	FUNCTION_23	FOR_1	IF_2
0x4000d0f	             0x913	                     or dword [rbx], edx	       650	conditional.c	FUNCTION_23	FOR_1	IF_2
0x4000d11	         0xfb77806	               movzx edi, word [rax + 6]	       650	conditional.c	FUNCTION_23	FOR_1	IF_2
0x4000d15	            0x89fa	                            mov edx, edi	       651	conditional.c	FUNCTION_23	FOR_1	IF_3
0x4000d17	      0x6681e20480	                          and dx, 0x8004	       651	conditional.c	FUNCTION_23	FOR_1	IF_3
0x4000d1c	      0x6681fa0480	                          cmp dx, 0x8004	       651	conditional.c	FUNCTION_23	FOR_1	IF_3
0x4000d21	            0x744b	                            je 0x4000d6e	       651	conditional.c	FUNCTION_23	FOR_1	IF_3
0x4000d23	      0x6681e70280	                          and di, 0x8002	       659	conditional.c	FUNCTION_23	FOR_1	IF_4
0x4000d28	      0x6681ff0280	                          cmp di, 0x8002	       659	conditional.c	FUNCTION_23	FOR_1	IF_4
0x4000d2d	            0x7455	                            je 0x4000d84	       659	conditional.c	FUNCTION_23	FOR_1	IF_4
0x4000d2f	          0x4d85e4	                           test r12, r12	       662	conditional.c	FUNCTION_23	FOR_1	IF_5
0x4000d32	            0x7409	                            je 0x4000d3d	       662	conditional.c	FUNCTION_23	FOR_1	IF_5
0x4000d34	         0xfb75006	               movzx edx, word [rax + 6]	       662	conditional.c	FUNCTION_23	FOR_1	IF_5
0x4000d38	          0x6685d2	                             test dx, dx	       662	conditional.c	FUNCTION_23	FOR_1	IF_5
0x4000d3b	            0x784f	                            js 0x4000d8c	       662	conditional.c	FUNCTION_23	FOR_1	IF_5
0x4000d3d	         0xfb77506	               movzx esi, word [rbp + 6]	       647	conditional.c	FUNCTION_23	FOR_1	CALL_2
0x4000d41	          0x4889c7	                            mov rdi, rax	       647	conditional.c	FUNCTION_23	FOR_1	CALL_2
0x4000d44	      0xe800000000	                          call 0x4000d49	       647	conditional.c	FUNCTION_23	FOR_1	CALL_2
0x4000d49	          0x4885c0	                           test rax, rax	       646	conditional.c	FUNCTION_23	FOR_1	CALL_1
0x4000d4c	            0x74b4	                            je 0x4000d02	       646	conditional.c	FUNCTION_23	FOR_1	CALL_1
0x4000d4e	         0xfb77806	               movzx edi, word [rax + 6]	       649	conditional.c	FUNCTION_23	FOR_1	IF_2
0x4000d52	            0x89fa	                            mov edx, edi	       648	conditional.c	FUNCTION_23	FOR_1	IF_2
0x4000d54	      0x6681e20180	                          and dx, 0x8001	       648	conditional.c	FUNCTION_23	FOR_1	IF_2
0x4000d59	      0x6681fa0180	                          cmp dx, 0x8001	       648	conditional.c	FUNCTION_23	FOR_1	IF_2
0x4000d5e	            0x74ac	                            je 0x4000d0c	       648	conditional.c	FUNCTION_23	FOR_1	IF_2
0x4000d60	            0x89fa	                            mov edx, edi	       651	conditional.c	FUNCTION_23	FOR_1	IF_3
0x4000d62	      0x6681e20480	                          and dx, 0x8004	       651	conditional.c	FUNCTION_23	FOR_1	IF_3
0x4000d67	      0x6681fa0480	                          cmp dx, 0x8004	       651	conditional.c	FUNCTION_23	FOR_1	IF_3
0x4000d6c	            0x75b5	                           jne 0x4000d23	       651	conditional.c	FUNCTION_23	FOR_1	IF_3
0x4000d6e	          0x8b5008	                mov edx, dword [rax + 8]	       658	conditional.c	FUNCTION_23	FOR_1	IF_3
0x4000d71	          0x215308	                and dword [rbx + 8], edx	       658	conditional.c	FUNCTION_23	FOR_1	IF_3
0x4000d74	         0xfb77806	               movzx edi, word [rax + 6]	       658	conditional.c	FUNCTION_23	FOR_1	IF_3
0x4000d78	      0x6681e70280	                          and di, 0x8002	       659	conditional.c	FUNCTION_23	FOR_1	IF_4
0x4000d7d	      0x6681ff0280	                          cmp di, 0x8002	       659	conditional.c	FUNCTION_23	FOR_1	IF_4
0x4000d82	            0x75ab	                           jne 0x4000d2f	       659	conditional.c	FUNCTION_23	FOR_1	IF_4
0x4000d84	          0x8b5008	                mov edx, dword [rax + 8]	       661	conditional.c	FUNCTION_23	FOR_1	IF_4
0x4000d87	           0x95304	                 or dword [rbx + 4], edx	       661	conditional.c	FUNCTION_23	FOR_1	IF_4
0x4000d8a	            0xeba3	                           jmp 0x4000d2f	       661	conditional.c	FUNCTION_23	FOR_1	IF_4
0x4000d8c	          0x80e607	                               and dh, 7	       662	conditional.c	FUNCTION_23	FOR_1	IF_5
0x4000d8f	            0x74ac	                            je 0x4000d3d	       662	conditional.c	FUNCTION_23	FOR_1	IF_5
0x4000d91	          0x4889c6	                            mov rsi, rax	       664	conditional.c	FUNCTION_23	FOR_1	CALL_3
0x4000d94	          0x4c89e7	                            mov rdi, r12	       664	conditional.c	FUNCTION_23	FOR_1	CALL_3
0x4000d97	        0x48890424	                    mov qword [rsp], rax	       664	conditional.c	FUNCTION_23	FOR_1	CALL_3
0x4000d9b	      0xe800000000	                          call 0x4000da0	       664	conditional.c	FUNCTION_23	FOR_1	CALL_3
0x4000da0	        0x488b0424	                    mov rax, qword [rsp]	       664	conditional.c	FUNCTION_23	FOR_1	CALL_3
0x4000da4	            0xeb97	                           jmp 0x4000d3d	       664	conditional.c	FUNCTION_23	FOR_1	CALL_3
cond_write_bool	FOR,0:SWITCH,0:DO,0:IF,2:ELSE,0:functions,0:CALL,6:WHILE,0	28
0x4000ad0	            0x4154	                                push r12	       496	conditional.c	FUNCTION_18
0x4000ad2	              0x55	                                push rbp	       496	conditional.c	FUNCTION_18
0x4000ad3	          0x4889f5	                            mov rbp, rsi	       496	conditional.c	FUNCTION_18
0x4000ad6	              0x53	                                push rbx	       496	conditional.c	FUNCTION_18
0x4000ad7	        0x488b5a08	                mov rbx, qword [rdx + 8]	       500	conditional.c	FUNCTION_18
0x4000adb	          0x4989fc	                            mov r12, rdi	       496	conditional.c	FUNCTION_18
0x4000ade	      0xe800000000	                          call 0x4000ae3	       505	conditional.c	FUNCTION_18	CALL_1
0x4000ae3	          0x8b7500	                    mov esi, dword [rbp]	       506	conditional.c	FUNCTION_18	CALL_2
0x4000ae6	          0x8b4d04	                mov ecx, dword [rbp + 4]	       507	conditional.c	FUNCTION_18	CALL_3
0x4000ae9	          0x4863e8	                         movsxd rbp, eax	       361	policydb.h	FUNCTION_25
0x4000aec	          0x488b13	                    mov rdx, qword [rbx]	       363	policydb.h	FUNCTION_25	CALL_1
0x4000aef	            0x8932	                    mov dword [rdx], esi	       363	policydb.h	FUNCTION_25	CALL_1
0x4000af1	          0x894a04	                mov dword [rdx + 4], ecx	       363	policydb.h	FUNCTION_25	CALL_1
0x4000af4	          0x4c89e6	                            mov rsi, r12	       363	policydb.h	FUNCTION_25	CALL_1
0x4000af7	          0x894208	                mov dword [rdx + 8], eax	       363	policydb.h	FUNCTION_25	CALL_1
0x4000afa	          0x488b0b	                    mov rcx, qword [rbx]	       364	policydb.h	FUNCTION_25
0x4000afd	          0x4889ea	                            mov rdx, rbp	       363	policydb.h	FUNCTION_25	CALL_1
0x4000b00	      0x48836b080c	                sub qword [rbx + 8], 0xc	       365	policydb.h	FUNCTION_25
0x4000b05	        0x488d790c	                    lea rdi, [rcx + 0xc]	       364	policydb.h	FUNCTION_25
0x4000b09	          0x48893b	                    mov qword [rbx], rdi	       364	policydb.h	FUNCTION_25
0x4000b0c	      0xe800000000	                          call 0x4000b11	       363	policydb.h	FUNCTION_25	CALL_1
0x4000b11	          0x48012b	                    add qword [rbx], rbp	       364	policydb.h	FUNCTION_25
0x4000b14	        0x48296b08	                sub qword [rbx + 8], rbp	       365	policydb.h	FUNCTION_25
0x4000b18	            0x31c0	                            xor eax, eax	       516	conditional.c	FUNCTION_18
0x4000b1a	              0x5b	                                 pop rbx	       516	conditional.c	FUNCTION_18
0x4000b1b	              0x5d	                                 pop rbp	       516	conditional.c	FUNCTION_18
0x4000b1c	            0x415c	                                 pop r12	       516	conditional.c	FUNCTION_18
0x4000b1e	              0xc3	                                     ret	       516	conditional.c	FUNCTION_18
evaluate_cond_node	FOR,2:SWITCH,0:DO,0:IF,4:ELSE,2:functions,0:CALL,2:WHILE,0	139
0x40003a0	        0x4883ec38	                           sub rsp, 0x38	        91	conditional.c	FUNCTION_2
0x40003a4	    0x65488b042528	                mov rax, qword gs:[0x28]	        91	conditional.c	FUNCTION_2
0x40003ad	      0x4889442430	             mov qword [rsp + 0x30], rax	        91	conditional.c	FUNCTION_2
0x40003b2	            0x31c0	                            xor eax, eax	        91	conditional.c	FUNCTION_2
0x40003b4	        0x488b4608	                mov rax, qword [rsi + 8]	        95	conditional.c	FUNCTION_2	CALL_1
0x40003b8	          0x4885c0	                           test rax, rax	        33	conditional.c	FUNCTION_1	FOR_1
0x40003bb	            0x744d	                            je 0x400040a	        33	conditional.c	FUNCTION_1	FOR_1
0x40003bd	      0xbaffffffff	                     mov edx, 0xffffffff	        33	conditional.c	FUNCTION_1	FOR_1
0x40003c2	          0x833807	                      cmp dword [rax], 7	        34	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40003c5	     0xf879f010000	                            ja 0x400056a	        34	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40003cb	            0x8b08	                    mov ecx, dword [rax]	        34	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40003cd	    0x488b0ccd0000	                  mov rcx, qword [rcx*8]	        34	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40003d5	      0xe900000000	                           jmp 0x40003da	        34	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40003da	            0x85d2	                           test edx, edx	        71	conditional.c	FUNCTION_1	FOR_1	SWITCH_1	IF_7
0x40003dc	     0xf8e88010000	                           jle 0x400056a	        71	conditional.c	FUNCTION_1	FOR_1	SWITCH_1	IF_7
0x40003e2	          0x8d4aff	                      lea ecx, [rdx - 1]	        73	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40003e5	          0x4863d2	                         movsxd rdx, edx	        74	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40003e8	        0x8b549408	       mov edx, dword [rsp + rdx*4 + 8] 	        74	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40003ec	          0x4c63c1	                          movsxd r8, ecx	        74	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40003ef	      0x4239548408	        cmp dword [rsp + r8*4 + 8], edx 	        74	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40003f4	           0xf95c2	                                setne dl	        74	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40003f7	           0xfb6d2	                           movzx edx, dl	        74	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40003fa	      0x4289548408	         mov dword [rsp + r8*4 + 8], edx	        74	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40003ff	            0x89ca	                            mov edx, ecx	        73	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000401	        0x488b4008	                mov rax, qword [rax + 8]	        33	conditional.c	FUNCTION_1	FOR_1
0x4000405	          0x4885c0	                           test rax, rax	        33	conditional.c	FUNCTION_1	FOR_1
0x4000408	            0x75b8	                           jne 0x40003c2	        33	conditional.c	FUNCTION_1	FOR_1
0x400040a	        0x8b542408	                mov edx, dword [rsp + 8]	        80	conditional.c	FUNCTION_1
0x400040e	            0x3916	                    cmp dword [rsi], edx	        96	conditional.c	FUNCTION_2	IF_1
0x4000410	     0xf8459010000	                            je 0x400056f	        96	conditional.c	FUNCTION_2	IF_1
0x4000416	          0x83faff	             cmp edx, 0xffffffffffffffff	        98	conditional.c	FUNCTION_2	IF_1	IF_2
0x4000419	            0x8916	                    mov dword [rsi], edx	        97	conditional.c	FUNCTION_2	IF_1
0x400041b	     0xf846b010000	                            je 0x400058c	        98	conditional.c	FUNCTION_2	IF_1	IF_2
0x4000421	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       101	conditional.c	FUNCTION_2	IF_1	FOR_1
0x4000425	          0x4885c0	                           test rax, rax	       101	conditional.c	FUNCTION_2	IF_1	FOR_1
0x4000428	            0x7511	                           jne 0x400043b	       101	conditional.c	FUNCTION_2	IF_1	FOR_1
0x400042a	            0xeb25	                           jmp 0x4000451	       101	conditional.c	FUNCTION_2	IF_1	FOR_1
0x400042c	    0x668149060080	               or word [rcx + 6], 0x8000	       105	conditional.c	FUNCTION_2	IF_1	FOR_1	ELSE_1
0x4000432	        0x488b4008	                mov rax, qword [rax + 8]	       101	conditional.c	FUNCTION_2	IF_1	FOR_1
0x4000436	          0x4885c0	                           test rax, rax	       101	conditional.c	FUNCTION_2	IF_1	FOR_1
0x4000439	            0x7416	                            je 0x4000451	       101	conditional.c	FUNCTION_2	IF_1	FOR_1
0x400043b	            0x85d2	                           test edx, edx	       102	conditional.c	FUNCTION_2	IF_1	FOR_1	IF_3
0x400043d	          0x488b08	                    mov rcx, qword [rax]	       103	conditional.c	FUNCTION_2	IF_1	FOR_1	IF_3
0x4000440	            0x7fea	                            jg 0x400042c	       102	conditional.c	FUNCTION_2	IF_1	FOR_1	IF_3
0x4000442	    0x66816106ff7f	              and word [rcx + 6], 0x7fff	       103	conditional.c	FUNCTION_2	IF_1	FOR_1	IF_3
0x4000448	        0x488b4008	                mov rax, qword [rax + 8]	       101	conditional.c	FUNCTION_2	IF_1	FOR_1
0x400044c	          0x4885c0	                           test rax, rax	       101	conditional.c	FUNCTION_2	IF_1	FOR_1
0x400044f	            0x75ea	                           jne 0x400043b	       101	conditional.c	FUNCTION_2	IF_1	FOR_1
0x4000451	        0x488b4618	            mov rax, qword [rsi + 0x18] 	       108	conditional.c	FUNCTION_2	IF_1	ELSE_1	FOR_2
0x4000455	          0x4885c0	                           test rax, rax	       108	conditional.c	FUNCTION_2	IF_1	ELSE_1	FOR_2
0x4000458	            0x7518	                           jne 0x4000472	       108	conditional.c	FUNCTION_2	IF_1	ELSE_1	FOR_2
0x400045a	      0xe910010000	                           jmp 0x400056f	       108	conditional.c	FUNCTION_2	IF_1	ELSE_1	FOR_2
0x400045f	    0x66816106ff7f	              and word [rcx + 6], 0x7fff	       111	conditional.c	FUNCTION_2	IF_1	ELSE_1	FOR_2	IF_4
0x4000465	        0x488b4008	                mov rax, qword [rax + 8]	       108	conditional.c	FUNCTION_2	IF_1	ELSE_1	FOR_2
0x4000469	          0x4885c0	                           test rax, rax	       108	conditional.c	FUNCTION_2	IF_1	ELSE_1	FOR_2
0x400046c	     0xf84fd000000	                            je 0x400056f	       108	conditional.c	FUNCTION_2	IF_1	ELSE_1	FOR_2
0x4000472	            0x85d2	                           test edx, edx	       110	conditional.c	FUNCTION_2	IF_1	ELSE_1	FOR_2	IF_4
0x4000474	          0x488b08	                    mov rcx, qword [rax]	       111	conditional.c	FUNCTION_2	IF_1	ELSE_1	FOR_2	IF_4
0x4000477	            0x75e6	                           jne 0x400045f	       110	conditional.c	FUNCTION_2	IF_1	ELSE_1	FOR_2	IF_4
0x4000479	    0x668149060080	               or word [rcx + 6], 0x8000	       113	conditional.c	FUNCTION_2	IF_1	ELSE_1	FOR_2	ELSE_2
0x400047f	            0xebe4	                           jmp 0x4000465	       113	conditional.c	FUNCTION_2	IF_1	ELSE_1	FOR_2	ELSE_2
0x4000481	            0x85d2	                           test edx, edx	        65	conditional.c	FUNCTION_1	FOR_1	SWITCH_1	IF_6
0x4000483	     0xf8ee1000000	                           jle 0x400056a	        65	conditional.c	FUNCTION_1	FOR_1	SWITCH_1	IF_6
0x4000489	          0x8d4aff	                      lea ecx, [rdx - 1]	        67	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x400048c	          0x4863d2	                         movsxd rdx, edx	        68	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x400048f	        0x8b549408	       mov edx, dword [rsp + rdx*4 + 8] 	        68	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000493	          0x4c63c1	                          movsxd r8, ecx	        68	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000496	      0x4239548408	        cmp dword [rsp + r8*4 + 8], edx 	        68	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x400049b	           0xf94c2	                                 sete dl	        68	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x400049e	           0xfb6d2	                           movzx edx, dl	        68	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40004a1	      0x4289548408	         mov dword [rsp + r8*4 + 8], edx	        68	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40004a6	            0x89ca	                            mov edx, ecx	        67	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40004a8	      0xe954ffffff	                           jmp 0x4000401	        67	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40004ad	            0x85d2	                           test edx, edx	        59	conditional.c	FUNCTION_1	FOR_1	SWITCH_1	IF_5
0x40004af	     0xf8eb5000000	                           jle 0x400056a	        59	conditional.c	FUNCTION_1	FOR_1	SWITCH_1	IF_5
0x40004b5	          0x8d4aff	                      lea ecx, [rdx - 1]	        61	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40004b8	          0x4c63ca	                          movsxd r9, edx	        62	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40004bb	          0x4c63c1	                          movsxd r8, ecx	        62	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40004be	      0x428b548408	        mov edx, dword [rsp + r8*4 + 8] 	        62	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40004c3	      0x4233548c08	         xor edx, dword [rsp + r9*4 + 8]	        62	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40004c8	      0x4289548408	         mov dword [rsp + r8*4 + 8], edx	        62	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40004cd	            0x89ca	                            mov edx, ecx	        61	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40004cf	      0xe92dffffff	                           jmp 0x4000401	        61	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40004d4	            0x85d2	                           test edx, edx	        53	conditional.c	FUNCTION_1	FOR_1	SWITCH_1	IF_4
0x40004d6	     0xf8e8e000000	                           jle 0x400056a	        53	conditional.c	FUNCTION_1	FOR_1	SWITCH_1	IF_4
0x40004dc	          0x8d4aff	                      lea ecx, [rdx - 1]	        55	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40004df	          0x4c63ca	                          movsxd r9, edx	        56	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40004e2	          0x4c63c1	                          movsxd r8, ecx	        56	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40004e5	      0x428b548408	        mov edx, dword [rsp + r8*4 + 8] 	        56	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40004ea	      0x4223548c08	         and edx, dword [rsp + r9*4 + 8]	        56	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40004ef	      0x4289548408	         mov dword [rsp + r8*4 + 8], edx	        56	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40004f4	            0x89ca	                            mov edx, ecx	        55	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40004f6	      0xe906ffffff	                           jmp 0x4000401	        55	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x40004fb	            0x85d2	                           test edx, edx	        47	conditional.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3
0x40004fd	            0x7e6b	                           jle 0x400056a	        47	conditional.c	FUNCTION_1	FOR_1	SWITCH_1	IF_3
0x40004ff	          0x8d4aff	                      lea ecx, [rdx - 1]	        49	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000502	          0x4c63ca	                          movsxd r9, edx	        50	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000505	          0x4c63c1	                          movsxd r8, ecx	        50	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000508	      0x428b548408	        mov edx, dword [rsp + r8*4 + 8] 	        50	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x400050d	      0x420b548c08	          or edx, dword [rsp + r9*4 + 8]	        50	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000512	      0x4289548408	         mov dword [rsp + r8*4 + 8], edx	        50	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000517	            0x89ca	                            mov edx, ecx	        49	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000519	      0xe9e3feffff	                           jmp 0x4000401	        49	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x400051e	            0x85d2	                           test edx, edx	        42	conditional.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2
0x4000520	            0x7848	                            js 0x400056a	        42	conditional.c	FUNCTION_1	FOR_1	SWITCH_1	IF_2
0x4000522	          0x4863ca	                         movsxd rcx, edx	        44	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000525	          0x4531c0	                            xor r8d, r8d	        44	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000528	      0x448b4c8c08	       mov r9d, dword [rsp + rcx*4 + 8] 	        44	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x400052d	          0x4585c9	                           test r9d, r9d	        44	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000530	        0x410f94c0	                                sete r8b	        44	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000534	      0x4489448c08	        mov dword [rsp + rcx*4 + 8], r8d	        44	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000539	      0xe9c3feffff	                           jmp 0x4000401	        44	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x400053e	          0x83fa09	                              cmp edx, 9	        36	conditional.c	FUNCTION_1	FOR_1	SWITCH_1	IF_1
0x4000541	            0x7427	                            je 0x400056a	        36	conditional.c	FUNCTION_1	FOR_1	SWITCH_1	IF_1
0x4000543	        0x448b4004	                mov r8d, dword [rax + 4]	        39	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000547	          0x83c201	                              add edx, 1	        38	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x400054a	          0x4863ca	                         movsxd rcx, edx	        39	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x400054d	        0x458d48ff	                       lea r9d, [r8 - 1]	        39	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000551	    0x4c8b87200100	            mov r8, qword [rdi + 0x120] 	        39	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000558	        0x4f8b04c8	               mov r8, qword [r8 + r9*8]	        39	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x400055c	        0x458b4004	                 mov r8d, dword [r8 + 4]	        39	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000560	      0x4489448c08	        mov dword [rsp + rcx*4 + 8], r8d	        39	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x4000565	      0xe997feffff	                           jmp 0x4000401	        39	conditional.c	FUNCTION_1	FOR_1	SWITCH_1
0x400056a	          0x833eff	     cmp dword [rsi], 0xffffffffffffffff	        96	conditional.c	FUNCTION_2	IF_1
0x400056d	            0x7517	                           jne 0x4000586	        96	conditional.c	FUNCTION_2	IF_1
0x400056f	            0x31c0	                            xor eax, eax	       117	conditional.c	FUNCTION_2	ELSE_2
0x4000571	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       117	conditional.c	FUNCTION_2	ELSE_2
0x4000576	    0x6548333c2528	                xor rdi, qword gs:[0x28]	       117	conditional.c	FUNCTION_2	ELSE_2
0x400057f	            0x7527	                           jne 0x40005a8	       117	conditional.c	FUNCTION_2	ELSE_2
0x4000581	        0x4883c438	                           add rsp, 0x38	       117	conditional.c	FUNCTION_2	ELSE_2
0x4000585	              0xc3	                                     ret	       117	conditional.c	FUNCTION_2	ELSE_2
0x4000586	    0xc706ffffffff	            mov dword [rsi], 0xffffffff 	        97	conditional.c	FUNCTION_2	IF_1
0x400058c	    0x48c7c7000000	                              mov rdi, 0	        99	conditional.c	FUNCTION_2	IF_1	CALL_2
0x4000593	        0x48893424	                    mov qword [rsp], rsi	        99	conditional.c	FUNCTION_2	IF_1	CALL_2
0x4000597	      0xe800000000	                          call 0x400059c	        99	conditional.c	FUNCTION_2	IF_1	CALL_2
0x400059c	          0x83caff	                      or edx, 0xffffffff	        99	conditional.c	FUNCTION_2	IF_1	CALL_2
0x400059f	        0x488b3424	                    mov rsi, qword [rsp]	        99	conditional.c	FUNCTION_2	IF_1	CALL_2
0x40005a3	      0xe979feffff	                           jmp 0x4000421	        99	conditional.c	FUNCTION_2	IF_1	CALL_2
0x40005a8	      0xe800000000	                          call 0x40005ad	       117	conditional.c	FUNCTION_2	ELSE_2
cond_index_bool	FOR,0:SWITCH,0:DO,0:IF,2:ELSE,0:functions,0:CALL,2:WHILE,0	32
0x4000680	              0x55	                                push rbp	       195	conditional.c	FUNCTION_10
0x4000681	              0x53	                                push rbx	       195	conditional.c	FUNCTION_10
0x4000682	        0x4883ec08	                              sub rsp, 8	       195	conditional.c	FUNCTION_10
0x4000686	            0x8b06	                    mov eax, dword [rsi]	       203	conditional.c	FUNCTION_10	IF_1
0x4000688	        0x48893c24	                    mov qword [rsp], rdi	       195	conditional.c	FUNCTION_10
0x400068c	            0x85c0	                           test eax, eax	       203	conditional.c	FUNCTION_10	IF_1
0x400068e	            0x743d	                            je 0x40006cd	       203	conditional.c	FUNCTION_10	IF_1
0x4000690	          0x3b4260	            cmp eax, dword [rdx + 0x60] 	       203	conditional.c	FUNCTION_10	IF_1
0x4000693	            0x7738	                            ja 0x40006cd	       203	conditional.c	FUNCTION_10	IF_1
0x4000695	    0x488bbab00000	            mov rdi, qword [rdx + 0xb0] 	       207	conditional.c	FUNCTION_10	IF_2	CALL_1
0x400069c	          0x4889f3	                            mov rbx, rsi	       207	conditional.c	FUNCTION_10	IF_2	CALL_1
0x400069f	          0x8d70ff	                      lea esi, [rax - 1]	       207	conditional.c	FUNCTION_10	IF_2	CALL_1
0x40006a2	          0x4889d5	                            mov rbp, rdx	       207	conditional.c	FUNCTION_10	IF_2	CALL_1
0x40006a5	      0xb9c0804001	                      mov ecx, 0x14080c0	       207	conditional.c	FUNCTION_10	IF_2	CALL_1
0x40006aa	          0x4889e2	                            mov rdx, rsp	       207	conditional.c	FUNCTION_10	IF_2	CALL_1
0x40006ad	      0xe800000000	                          call 0x40006b2	       207	conditional.c	FUNCTION_10	IF_2	CALL_1
0x40006b2	            0x85c0	                           test eax, eax	       207	conditional.c	FUNCTION_10	IF_2	CALL_1
0x40006b4	            0x7523	                           jne 0x40006d9	       207	conditional.c	FUNCTION_10	IF_2	CALL_1
0x40006b6	            0x8b13	                    mov edx, dword [rbx]	       210	conditional.c	FUNCTION_10
0x40006b8	          0x8d4aff	                      lea ecx, [rdx - 1]	       210	conditional.c	FUNCTION_10
0x40006bb	    0x488b95200100	           mov rdx, qword [rbp + 0x120] 	       210	conditional.c	FUNCTION_10
0x40006c2	        0x48891cca	            mov qword [rdx + rcx*8], rbx	       210	conditional.c	FUNCTION_10
0x40006c6	        0x4883c408	                              add rsp, 8	       213	conditional.c	FUNCTION_10
0x40006ca	              0x5b	                                 pop rbx	       213	conditional.c	FUNCTION_10
0x40006cb	              0x5d	                                 pop rbp	       213	conditional.c	FUNCTION_10
0x40006cc	              0xc3	                                     ret	       213	conditional.c	FUNCTION_10
0x40006cd	        0x4883c408	                              add rsp, 8	       213	conditional.c	FUNCTION_10
0x40006d1	      0xb8eaffffff	                     mov eax, 0xffffffea	       204	conditional.c	FUNCTION_10	IF_1
0x40006d6	              0x5b	                                 pop rbx	       213	conditional.c	FUNCTION_10
0x40006d7	              0x5d	                                 pop rbp	       213	conditional.c	FUNCTION_10
0x40006d8	              0xc3	                                     ret	       213	conditional.c	FUNCTION_10
0x40006d9	             0xf0b	                                     ud2	       213	conditional.c	FUNCTION_10
cond_write_list	FOR,2:SWITCH,0:DO,0:IF,2:ELSE,0:functions,0:CALL,3:WHILE,0	98
0x4000b20	            0x4156	                                push r14	       596	conditional.c	FUNCTION_21
0x4000b22	            0x4155	                                push r13	       596	conditional.c	FUNCTION_21
0x4000b24	          0x4989d5	                            mov r13, rdx	       596	conditional.c	FUNCTION_21
0x4000b27	            0x4154	                                push r12	       596	conditional.c	FUNCTION_21
0x4000b29	              0x55	                                push rbp	       596	conditional.c	FUNCTION_21
0x4000b2a	              0x53	                                push rbx	       596	conditional.c	FUNCTION_21
0x4000b2b	        0x4883ec08	                              sub rsp, 8	       596	conditional.c	FUNCTION_21
0x4000b2f	    0x65488b042528	                mov rax, qword gs:[0x28]	       596	conditional.c	FUNCTION_21
0x4000b38	        0x48890424	                    mov qword [rsp], rax	       596	conditional.c	FUNCTION_21
0x4000b3c	            0x31c0	                            xor eax, eax	       596	conditional.c	FUNCTION_21
0x4000b3e	          0x4885f6	                           test rsi, rsi	       603	conditional.c	FUNCTION_21	FOR_1
0x4000b41	     0xf8407010000	                            je 0x4000c4e	       603	conditional.c	FUNCTION_21	FOR_1
0x4000b47	          0x4889fd	                            mov rbp, rdi	       603	conditional.c	FUNCTION_21	FOR_1
0x4000b4a	          0x4989f6	                            mov r14, rsi	       603	conditional.c	FUNCTION_21	FOR_1
0x4000b4d	          0x4889f0	                            mov rax, rsi	       603	conditional.c	FUNCTION_21	FOR_1
0x4000b50	            0x31d2	                            xor edx, edx	       603	conditional.c	FUNCTION_21	FOR_1
0x4000b52	        0x488b4020	            mov rax, qword [rax + 0x20] 	       603	conditional.c	FUNCTION_21	FOR_1
0x4000b56	          0x83c201	                              add edx, 1	       604	conditional.c	FUNCTION_21	FOR_1
0x4000b59	          0x4885c0	                           test rax, rax	       603	conditional.c	FUNCTION_21	FOR_1
0x4000b5c	            0x75f4	                           jne 0x4000b52	       603	conditional.c	FUNCTION_21	FOR_1
0x4000b5e	        0x498b4500	                    mov rax, qword [r13]	       363	policydb.h	FUNCTION_25	CALL_1
0x4000b62	    0x49bc00000000	          movabs r12, 0xffffffff00000000	       572	conditional.c	FUNCTION_20	CALL_3
0x4000b6c	            0x8910	                    mov dword [rax], edx	       363	policydb.h	FUNCTION_25	CALL_1
0x4000b6e	        0x498b4500	                    mov rax, qword [r13]	       364	policydb.h	FUNCTION_25
0x4000b72	      0x49836d0804	                  sub qword [r13 + 8], 4	       365	policydb.h	FUNCTION_25
0x4000b77	        0x4883c004	                              add rax, 4	       364	policydb.h	FUNCTION_25
0x4000b7b	        0x49894500	                    mov qword [r13], rax	       364	policydb.h	FUNCTION_25
0x4000b7f	          0x418b16	                    mov edx, dword [r14]	       363	policydb.h	FUNCTION_25	CALL_1
0x4000b82	            0x8910	                    mov dword [rax], edx	       363	policydb.h	FUNCTION_25	CALL_1
0x4000b84	        0x498b4d00	                    mov rcx, qword [r13]	       364	policydb.h	FUNCTION_25
0x4000b88	            0x31d2	                            xor edx, edx	       569	conditional.c	FUNCTION_20	FOR_1
0x4000b8a	      0x49836d0804	                  sub qword [r13 + 8], 4	       365	policydb.h	FUNCTION_25
0x4000b8f	        0x488d4104	                      lea rax, [rcx + 4]	       364	policydb.h	FUNCTION_25
0x4000b93	        0x49894500	                    mov qword [r13], rax	       364	policydb.h	FUNCTION_25
0x4000b97	        0x498b4608	                mov rax, qword [r14 + 8]	       569	conditional.c	FUNCTION_20	FOR_1
0x4000b9b	          0x4885c0	                           test rax, rax	       569	conditional.c	FUNCTION_20	FOR_1
0x4000b9e	            0x740c	                            je 0x4000bac	       569	conditional.c	FUNCTION_20	FOR_1
0x4000ba0	        0x488b4008	                mov rax, qword [rax + 8]	       569	conditional.c	FUNCTION_20	FOR_1
0x4000ba4	          0x83c201	                              add edx, 1	       570	conditional.c	FUNCTION_20	FOR_1
0x4000ba7	          0x4885c0	                           test rax, rax	       569	conditional.c	FUNCTION_20	FOR_1
0x4000baa	            0x75f4	                           jne 0x4000ba0	       569	conditional.c	FUNCTION_20	FOR_1
0x4000bac	            0x89d0	                            mov eax, edx	       572	conditional.c	FUNCTION_20	CALL_3
0x4000bae	          0x4c21e3	                            and rbx, r12	       572	conditional.c	FUNCTION_20	CALL_3
0x4000bb1	          0x895104	                mov dword [rcx + 4], edx	       363	policydb.h	FUNCTION_25	CALL_1
0x4000bb4	          0x4809c3	                             or rbx, rax	       572	conditional.c	FUNCTION_20	CALL_3
0x4000bb7	        0x498b4500	                    mov rax, qword [r13]	       364	policydb.h	FUNCTION_25
0x4000bbb	      0x49836d0804	                  sub qword [r13 + 8], 4	       365	policydb.h	FUNCTION_25
0x4000bc0	        0x4883c004	                              add rax, 4	       364	policydb.h	FUNCTION_25
0x4000bc4	        0x49894500	                    mov qword [r13], rax	       364	policydb.h	FUNCTION_25
0x4000bc8	        0x498b5608	                mov rdx, qword [r14 + 8]	       577	conditional.c	FUNCTION_20	FOR_2
0x4000bcc	          0x4885d2	                           test rdx, rdx	       577	conditional.c	FUNCTION_20	FOR_2
0x4000bcf	            0x7429	                            je 0x4000bfa	       577	conditional.c	FUNCTION_20	FOR_2
0x4000bd1	          0x8b5a04	                mov ebx, dword [rdx + 4]	       579	conditional.c	FUNCTION_20	FOR_2	CALL_6
0x4000bd4	            0x8b0a	                    mov ecx, dword [rdx]	       579	conditional.c	FUNCTION_20	FOR_2	CALL_6
0x4000bd6	        0x48c1e320	                           shl rbx, 0x20	       579	conditional.c	FUNCTION_20	FOR_2	CALL_6
0x4000bda	          0x4809cb	                             or rbx, rcx	       579	conditional.c	FUNCTION_20	FOR_2	CALL_6
0x4000bdd	          0x488918	                    mov qword [rax], rbx	       363	policydb.h	FUNCTION_25	CALL_1
0x4000be0	        0x498b4500	                    mov rax, qword [r13]	       364	policydb.h	FUNCTION_25
0x4000be4	      0x49836d0808	                  sub qword [r13 + 8], 8	       365	policydb.h	FUNCTION_25
0x4000be9	        0x4883c008	                              add rax, 8	       364	policydb.h	FUNCTION_25
0x4000bed	        0x49894500	                    mov qword [r13], rax	       364	policydb.h	FUNCTION_25
0x4000bf1	        0x488b5208	                mov rdx, qword [rdx + 8]	       577	conditional.c	FUNCTION_20	FOR_2
0x4000bf5	          0x4885d2	                           test rdx, rdx	       577	conditional.c	FUNCTION_20	FOR_2
0x4000bf8	            0x75d7	                           jne 0x4000bd1	       577	conditional.c	FUNCTION_20	FOR_2
0x4000bfa	        0x498b7610	            mov rsi, qword [r14 + 0x10] 	       585	conditional.c	FUNCTION_20	CALL_8
0x4000bfe	          0x4c89ea	                            mov rdx, r13	       585	conditional.c	FUNCTION_20	CALL_8
0x4000c01	          0x4889ef	                            mov rdi, rbp	       585	conditional.c	FUNCTION_20	CALL_8
0x4000c04	      0xe877f5ffff	             call sym.cond_write_av_list	       585	conditional.c	FUNCTION_20	CALL_8
0x4000c09	            0x85c0	                           test eax, eax	       586	conditional.c	FUNCTION_20	IF_4
0x4000c0b	            0x741c	                            je 0x4000c29	       586	conditional.c	FUNCTION_20	IF_4
0x4000c0d	        0x488b3c24	                    mov rdi, qword [rsp]	       617	conditional.c	FUNCTION_21
0x4000c11	    0x6548333c2528	                xor rdi, qword gs:[0x28]	       617	conditional.c	FUNCTION_21
0x4000c1a	            0x7548	                           jne 0x4000c64	       617	conditional.c	FUNCTION_21
0x4000c1c	        0x4883c408	                              add rsp, 8	       617	conditional.c	FUNCTION_21
0x4000c20	              0x5b	                                 pop rbx	       617	conditional.c	FUNCTION_21
0x4000c21	              0x5d	                                 pop rbp	       617	conditional.c	FUNCTION_21
0x4000c22	            0x415c	                                 pop r12	       617	conditional.c	FUNCTION_21
0x4000c24	            0x415d	                                 pop r13	       617	conditional.c	FUNCTION_21
0x4000c26	            0x415e	                                 pop r14	       617	conditional.c	FUNCTION_21
0x4000c28	              0xc3	                                     ret	       617	conditional.c	FUNCTION_21
0x4000c29	        0x498b7618	            mov rsi, qword [r14 + 0x18] 	       588	conditional.c	FUNCTION_20	CALL_9
0x4000c2d	          0x4c89ea	                            mov rdx, r13	       588	conditional.c	FUNCTION_20	CALL_9
0x4000c30	          0x4889ef	                            mov rdi, rbp	       588	conditional.c	FUNCTION_20	CALL_9
0x4000c33	      0xe848f5ffff	             call sym.cond_write_av_list	       588	conditional.c	FUNCTION_20	CALL_9
0x4000c38	            0x85c0	                           test eax, eax	       589	conditional.c	FUNCTION_20	IF_5
0x4000c3a	            0x75d1	                           jne 0x4000c0d	       589	conditional.c	FUNCTION_20	IF_5
0x4000c3c	        0x4d8b7620	            mov r14, qword [r14 + 0x20] 	       610	conditional.c	FUNCTION_21	FOR_2
0x4000c40	          0x4d85f6	                           test r14, r14	       610	conditional.c	FUNCTION_21	FOR_2
0x4000c43	            0x741b	                            je 0x4000c60	       610	conditional.c	FUNCTION_21	FOR_2
0x4000c45	        0x498b4500	                    mov rax, qword [r13]	       610	conditional.c	FUNCTION_21	FOR_2
0x4000c49	      0xe931ffffff	                           jmp 0x4000b7f	       610	conditional.c	FUNCTION_21	FOR_2
0x4000c4e	          0x488b02	                    mov rax, qword [rdx]	       363	policydb.h	FUNCTION_25	CALL_1
0x4000c51	    0xc70000000000	                      mov dword [rax], 0	       363	policydb.h	FUNCTION_25	CALL_1
0x4000c57	        0x48830204	                      add qword [rdx], 4	       364	policydb.h	FUNCTION_25
0x4000c5b	      0x48836a0804	                  sub qword [rdx + 8], 4	       365	policydb.h	FUNCTION_25
0x4000c60	            0x31c0	                            xor eax, eax	       616	conditional.c	FUNCTION_21
0x4000c62	            0xeba9	                           jmp 0x4000c0d	       616	conditional.c	FUNCTION_21
0x4000c64	      0xe800000000	                          call 0x4000c69	       617	conditional.c	FUNCTION_21
cond_read_av_list	FOR,1:SWITCH,0:DO,0:IF,3:ELSE,0:functions,0:CALL,3:WHILE,0	61
0x40000a0	            0x4157	                                push r15	       356	conditional.c	FUNCTION_14
0x40000a2	            0x4156	                                push r14	       356	conditional.c	FUNCTION_14
0x40000a4	          0x4989d7	                            mov r15, rdx	       356	conditional.c	FUNCTION_14
0x40000a7	            0x4155	                                push r13	       356	conditional.c	FUNCTION_14
0x40000a9	            0x4154	                                push r12	       356	conditional.c	FUNCTION_14
0x40000ab	              0x55	                                push rbp	       356	conditional.c	FUNCTION_14
0x40000ac	              0x53	                                push rbx	       356	conditional.c	FUNCTION_14
0x40000ad	        0x4883ec28	                           sub rsp, 0x28	       356	conditional.c	FUNCTION_14
0x40000b1	    0x48c702000000	                      mov qword [rdx], 0	       362	conditional.c	FUNCTION_14
0x40000b8	        0x488b5608	                mov rdx, qword [rsi + 8]	       350	policydb.h	FUNCTION_24	IF_1
0x40000bc	    0x65488b042528	                mov rax, qword gs:[0x28]	       356	conditional.c	FUNCTION_14
0x40000c5	      0x4889442420	             mov qword [rsp + 0x20], rax	       356	conditional.c	FUNCTION_14
0x40000ca	            0x31c0	                            xor eax, eax	       356	conditional.c	FUNCTION_14
0x40000cc	      0xb8eaffffff	                     mov eax, 0xffffffea	       351	policydb.h	FUNCTION_24	IF_1
0x40000d1	        0x4883fa03	                              cmp rdx, 3	       350	policydb.h	FUNCTION_24	IF_1
0x40000d5	            0x766c	                           jbe 0x4000143	       350	policydb.h	FUNCTION_24	IF_1
0x40000d7	          0x488b06	                    mov rax, qword [rsi]	       353	policydb.h	FUNCTION_24	CALL_1
0x40000da	        0x4883ea04	                              sub rdx, 4	       355	policydb.h	FUNCTION_24
0x40000de	          0x4889f5	                            mov rbp, rsi	       355	policydb.h	FUNCTION_24
0x40000e1	          0x448b28	                   mov r13d, dword [rax]	       355	policydb.h	FUNCTION_24
0x40000e4	        0x4883c004	                              add rax, 4	       354	policydb.h	FUNCTION_24
0x40000e8	        0x48895608	                mov qword [rsi + 8], rdx	       355	policydb.h	FUNCTION_24
0x40000ec	          0x488906	                    mov qword [rsi], rax	       354	policydb.h	FUNCTION_24
0x40000ef	            0x31c0	                            xor eax, eax	       370	conditional.c	FUNCTION_14	IF_2
0x40000f1	          0x4585ed	                         test r13d, r13d	       369	conditional.c	FUNCTION_14	IF_2
0x40000f4	            0x744d	                            je 0x4000143	       369	conditional.c	FUNCTION_14	IF_2
0x40000f6	          0x4989fc	                            mov r12, rdi	       369	conditional.c	FUNCTION_14	IF_2
0x40000f9	        0x48893c24	                    mov qword [rsp], rdi	       372	conditional.c	FUNCTION_14
0x40000fd	      0x48894c2408	                mov qword [rsp + 8], rcx	       373	conditional.c	FUNCTION_14
0x4000102	    0x48c744241000	               mov qword [rsp + 0x10], 0	       374	conditional.c	FUNCTION_14
0x400010b	    0x48c744241800	               mov qword [rsp + 0x18], 0	       375	conditional.c	FUNCTION_14
0x4000114	    0x4c8db7280100	                  lea r14, [rdi + 0x128]	       375	conditional.c	FUNCTION_14
0x400011b	            0x31db	                            xor ebx, ebx	       375	conditional.c	FUNCTION_14
0x400011d	            0xeb08	                           jmp 0x4000127	       375	conditional.c	FUNCTION_14
0x400011f	          0x83c301	                              add ebx, 1	       376	conditional.c	FUNCTION_14	FOR_1
0x4000122	          0x4139dd	                           cmp r13d, ebx	       376	conditional.c	FUNCTION_14	FOR_1
0x4000125	            0x743b	                            je 0x4000162	       376	conditional.c	FUNCTION_14	FOR_1
0x4000127	          0x4989e0	                             mov r8, rsp	       377	conditional.c	FUNCTION_14	FOR_1	CALL_3
0x400012a	    0x48c7c1000000	                              mov rcx, 0	       377	conditional.c	FUNCTION_14	FOR_1	CALL_3
0x4000131	          0x4c89e2	                            mov rdx, r12	       377	conditional.c	FUNCTION_14	FOR_1	CALL_3
0x4000134	          0x4889ee	                            mov rsi, rbp	       377	conditional.c	FUNCTION_14	FOR_1	CALL_3
0x4000137	          0x4c89f7	                            mov rdi, r14	       377	conditional.c	FUNCTION_14	FOR_1	CALL_3
0x400013a	      0xe800000000	                          call 0x400013f	       377	conditional.c	FUNCTION_14	FOR_1	CALL_3
0x400013f	            0x85c0	                           test eax, eax	       379	conditional.c	FUNCTION_14	FOR_1	IF_3
0x4000141	            0x74dc	                            je 0x400011f	       379	conditional.c	FUNCTION_14	FOR_1	IF_3
0x4000143	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       385	conditional.c	FUNCTION_14
0x4000148	    0x654833342528	                xor rsi, qword gs:[0x28]	       385	conditional.c	FUNCTION_14
0x4000151	            0x751b	                           jne 0x400016e	       385	conditional.c	FUNCTION_14
0x4000153	        0x4883c428	                           add rsp, 0x28	       385	conditional.c	FUNCTION_14
0x4000157	              0x5b	                                 pop rbx	       385	conditional.c	FUNCTION_14
0x4000158	              0x5d	                                 pop rbp	       385	conditional.c	FUNCTION_14
0x4000159	            0x415c	                                 pop r12	       385	conditional.c	FUNCTION_14
0x400015b	            0x415d	                                 pop r13	       385	conditional.c	FUNCTION_14
0x400015d	            0x415e	                                 pop r14	       385	conditional.c	FUNCTION_14
0x400015f	            0x415f	                                 pop r15	       385	conditional.c	FUNCTION_14
0x4000161	              0xc3	                                     ret	       385	conditional.c	FUNCTION_14
0x4000162	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       383	conditional.c	FUNCTION_14
0x4000167	          0x498907	                    mov qword [r15], rax	       383	conditional.c	FUNCTION_14
0x400016a	            0x31c0	                            xor eax, eax	       384	conditional.c	FUNCTION_14
0x400016c	            0xebd5	                           jmp 0x4000143	       384	conditional.c	FUNCTION_14
0x400016e	      0xe800000000	                          call 0x4000173	       385	conditional.c	FUNCTION_14
cond_policydb_init	FOR,0:SWITCH,0:DO,0:IF,1:ELSE,0:functions,0:CALL,1:WHILE,0	4
0x40005b0	    0x48c787200100	              mov qword [rdi + 0x120], 0	       123	conditional.c	ELSE_2	FUNCTION_3
0x40005bb	    0x48c787400100	              mov qword [rdi + 0x140], 0	       124	conditional.c	ELSE_2	FUNCTION_3
0x40005c6	    0x4881c7280100	                          add rdi, 0x128	       126	conditional.c	ELSE_2	FUNCTION_3	CALL_1
0x40005cd	      0xe900000000	                           jmp 0x40005d2	       126	conditional.c	ELSE_2	FUNCTION_3	CALL_1
cond_policydb_destroy	FOR,0:SWITCH,0:DO,0:IF,0:ELSE,0:functions,0:CALL,3:WHILE,0	16
0x40005e0	              0x53	                                push rbx	       170	conditional.c	FUNCTION_7
0x40005e1	          0x4889fb	                            mov rbx, rdi	       170	conditional.c	FUNCTION_7
0x40005e4	    0x488bbf200100	           mov rdi, qword [rdi + 0x120] 	       171	conditional.c	FUNCTION_7	CALL_1
0x40005eb	      0xe800000000	                          call 0x40005f0	       171	conditional.c	FUNCTION_7	CALL_1
0x40005f0	    0x488dbb280100	                  lea rdi, [rbx + 0x128]	       172	conditional.c	FUNCTION_7	CALL_2
0x40005f7	      0xe800000000	                          call 0x40005fc	       172	conditional.c	FUNCTION_7	CALL_2
0x40005fc	    0x488bbb400100	           mov rdi, qword [rbx + 0x140] 	       173	conditional.c	FUNCTION_7	CALL_3
0x4000603	          0x4885ff	                           test rdi, rdi	       160	conditional.c	FUNCTION_6	IF_1
0x4000606	            0x7411	                            je 0x4000619	       160	conditional.c	FUNCTION_6	IF_1
0x4000608	        0x488b5f20	            mov rbx, qword [rdi + 0x20] 	       164	conditional.c	FUNCTION_6	FOR_1
0x400060c	      0xe82ffaffff	              call sym.cond_node_destroy	       165	conditional.c	FUNCTION_6	FOR_1	CALL_1
0x4000611	          0x4885db	                           test rbx, rbx	       163	conditional.c	FUNCTION_6	FOR_1
0x4000614	          0x4889df	                            mov rdi, rbx	       163	conditional.c	FUNCTION_6	FOR_1
0x4000617	            0x75ef	                           jne 0x4000608	       163	conditional.c	FUNCTION_6	FOR_1
0x4000619	              0x5b	                                 pop rbx	       174	conditional.c	FUNCTION_7
0x400061a	              0xc3	                                     ret	       174	conditional.c	FUNCTION_7
cond_node_destroy	FOR,1:SWITCH,0:DO,0:IF,0:ELSE,0:functions,0:CALL,4:WHILE,0	31
0x4000040	              0x55	                                push rbp	       144	conditional.c	FUNCTION_5
0x4000041	          0x4889fd	                            mov rbp, rdi	       144	conditional.c	FUNCTION_5
0x4000044	              0x53	                                push rbx	       144	conditional.c	FUNCTION_5
0x4000045	        0x488b7f08	                mov rdi, qword [rdi + 8]	       147	conditional.c	FUNCTION_5	FOR_1
0x4000049	          0x4885ff	                           test rdi, rdi	       147	conditional.c	FUNCTION_5	FOR_1
0x400004c	            0x7411	                            je 0x400005f	       147	conditional.c	FUNCTION_5	FOR_1
0x400004e	        0x488b5f08	                mov rbx, qword [rdi + 8]	       148	conditional.c	FUNCTION_5	FOR_1
0x4000052	      0xe800000000	                          call 0x4000057	       149	conditional.c	FUNCTION_5	FOR_1	CALL_1
0x4000057	          0x4885db	                           test rbx, rbx	       147	conditional.c	FUNCTION_5	FOR_1
0x400005a	          0x4889df	                            mov rdi, rbx	       147	conditional.c	FUNCTION_5	FOR_1
0x400005d	            0x75ef	                           jne 0x400004e	       147	conditional.c	FUNCTION_5	FOR_1
0x400005f	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       151	conditional.c	FUNCTION_5	CALL_2
0x4000063	          0x4885ff	                           test rdi, rdi	       136	conditional.c	FUNCTION_4	FOR_1
0x4000066	            0x7411	                            je 0x4000079	       136	conditional.c	FUNCTION_4	FOR_1
0x4000068	        0x488b5f08	                mov rbx, qword [rdi + 8]	       137	conditional.c	FUNCTION_4	FOR_1
0x400006c	      0xe800000000	                          call 0x4000071	       139	conditional.c	FUNCTION_4	FOR_1	CALL_1
0x4000071	          0x4885db	                           test rbx, rbx	       136	conditional.c	FUNCTION_4	FOR_1
0x4000074	          0x4889df	                            mov rdi, rbx	       136	conditional.c	FUNCTION_4	FOR_1
0x4000077	            0x75ef	                           jne 0x4000068	       136	conditional.c	FUNCTION_4	FOR_1
0x4000079	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       152	conditional.c	FUNCTION_5	CALL_3
0x400007d	          0x4885ff	                           test rdi, rdi	       136	conditional.c	FUNCTION_4	FOR_1
0x4000080	            0x7411	                            je 0x4000093	       136	conditional.c	FUNCTION_4	FOR_1
0x4000082	        0x488b5f08	                mov rbx, qword [rdi + 8]	       137	conditional.c	FUNCTION_4	FOR_1
0x4000086	      0xe800000000	                          call 0x400008b	       139	conditional.c	FUNCTION_4	FOR_1	CALL_1
0x400008b	          0x4885db	                           test rbx, rbx	       136	conditional.c	FUNCTION_4	FOR_1
0x400008e	          0x4889df	                            mov rdi, rbx	       136	conditional.c	FUNCTION_4	FOR_1
0x4000091	            0x75ef	                           jne 0x4000082	       136	conditional.c	FUNCTION_4	FOR_1
0x4000093	          0x4889ef	                            mov rdi, rbp	       153	conditional.c	FUNCTION_5	CALL_4
0x4000096	              0x5b	                                 pop rbx	       154	conditional.c	FUNCTION_5
0x4000097	              0x5d	                                 pop rbp	       154	conditional.c	FUNCTION_5
0x4000098	      0xe900000000	                           jmp 0x400009d	       153	conditional.c	FUNCTION_5	CALL_4
