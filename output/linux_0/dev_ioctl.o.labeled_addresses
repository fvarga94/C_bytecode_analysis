dev_ifconf	SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0:WHILE,0:functions,1	64
0x40004d0	            0x4157	                                push r15	        54	dev_ioctl.c	FUNCTION_3
0x40004d2	            0x4156	                                push r14	        54	dev_ioctl.c	FUNCTION_3
0x40004d4	    0x488d8f100100	                  lea rcx, [rdi + 0x110]	        73	dev_ioctl.c	FUNCTION_3	FUNCTION_1
0x40004db	            0x4155	                                push r13	        54	dev_ioctl.c	FUNCTION_3
0x40004dd	            0x4154	                                push r12	        54	dev_ioctl.c	FUNCTION_3
0x40004df	              0x55	                                push rbp	        54	dev_ioctl.c	FUNCTION_3
0x40004e0	              0x53	                                push rbx	        54	dev_ioctl.c	FUNCTION_3
0x40004e1	        0x4883ec10	                           sub rsp, 0x10	        54	dev_ioctl.c	FUNCTION_3
0x40004e5	    0x488b87100100	           mov rax, qword [rdi + 0x110] 	        73	dev_ioctl.c	FUNCTION_3	FUNCTION_1
0x40004ec	        0x488b5e08	                mov rbx, qword [rsi + 8]	        65	dev_ioctl.c	FUNCTION_3
0x40004f0	      0x4889742408	                mov qword [rsp + 8], rsi	        54	dev_ioctl.c	FUNCTION_3
0x40004f5	          0x448b2e	                   mov r13d, dword [rsi]	        66	dev_ioctl.c	FUNCTION_3
0x40004f8	        0x48890c24	                    mov qword [rsp], rcx	        73	dev_ioctl.c	FUNCTION_3	FUNCTION_1
0x40004fc	          0x4839c1	                            cmp rcx, rax	        73	dev_ioctl.c	FUNCTION_3	FUNCTION_1
0x40004ff	     0xf848c000000	                            je 0x4000591	        73	dev_ioctl.c	FUNCTION_3	FUNCTION_1
0x4000505	        0x488d68b0	                   lea rbp, [rax - 0x50]	        73	dev_ioctl.c	FUNCTION_3	FUNCTION_1
0x4000509	          0x4189d4	                           mov r12d, edx	        73	dev_ioctl.c	FUNCTION_3	FUNCTION_1
0x400050c	          0x4531f6	                          xor r14d, r14d	        73	dev_ioctl.c	FUNCTION_3	FUNCTION_1
0x400050f	    0x49c7c7000000	                              mov r15, 0	        73	dev_ioctl.c	FUNCTION_3	FUNCTION_1
0x4000516	            0xeb2b	                           jmp 0x4000543	        73	dev_ioctl.c	FUNCTION_3	FUNCTION_1
0x4000518	          0x4489ea	                           mov edx, r13d	        80	dev_ioctl.c	FUNCTION_3	FUNCTION_1	FOR_1	IF_1	ELSE_1
0x400051b	          0x4963f6	                        movsxd rsi, r14d	        80	dev_ioctl.c	FUNCTION_3	FUNCTION_1	FOR_1	IF_1	ELSE_1
0x400051e	          0x4489e1	                           mov ecx, r12d	        80	dev_ioctl.c	FUNCTION_3	FUNCTION_1	FOR_1	IF_1	ELSE_1
0x4000521	          0x4429f2	                           sub edx, r14d	        80	dev_ioctl.c	FUNCTION_3	FUNCTION_1	FOR_1	IF_1	ELSE_1
0x4000524	          0x4801de	                            add rsi, rbx	        80	dev_ioctl.c	FUNCTION_3	FUNCTION_1	FOR_1	IF_1	ELSE_1
0x4000527	          0x4889ef	                            mov rdi, rbp	        80	dev_ioctl.c	FUNCTION_3	FUNCTION_1	FOR_1	IF_1	ELSE_1
0x400052a	      0xe800000000	                          call 0x400052f	        80	dev_ioctl.c	FUNCTION_3	FUNCTION_1	FOR_1	IF_1	ELSE_1
0x400052f	            0x85c0	                           test eax, eax	        82	dev_ioctl.c	FUNCTION_3	FUNCTION_1	FOR_1	IF_1	IF_3
0x4000531	            0x7830	                            js 0x4000563	        82	dev_ioctl.c	FUNCTION_3	FUNCTION_1	FOR_1	IF_1	IF_3
0x4000533	          0x4101c6	                           add r14d, eax	        84	dev_ioctl.c	FUNCTION_3	FUNCTION_1	FOR_1	IF_1
0x4000536	        0x4983c708	                              add r15, 8	        84	dev_ioctl.c	FUNCTION_3	FUNCTION_1	FOR_1	IF_1
0x400053a	    0x4981ff000000	                              cmp r15, 0	        74	dev_ioctl.c	FUNCTION_3	FUNCTION_1	FOR_1
0x4000541	            0x7434	                            je 0x4000577	        74	dev_ioctl.c	FUNCTION_3	FUNCTION_1	FOR_1
0x4000543	          0x498b07	                    mov rax, qword [r15]	        75	dev_ioctl.c	FUNCTION_3	FUNCTION_1	FOR_1	IF_1
0x4000546	          0x4885c0	                           test rax, rax	        75	dev_ioctl.c	FUNCTION_3	FUNCTION_1	FOR_1	IF_1
0x4000549	            0x74eb	                            je 0x4000536	        75	dev_ioctl.c	FUNCTION_3	FUNCTION_1	FOR_1	IF_1
0x400054b	          0x4885db	                           test rbx, rbx	        77	dev_ioctl.c	FUNCTION_3	FUNCTION_1	FOR_1	IF_1	IF_2
0x400054e	            0x75c8	                           jne 0x4000518	        77	dev_ioctl.c	FUNCTION_3	FUNCTION_1	FOR_1	IF_1	IF_2
0x4000550	            0x31d2	                            xor edx, edx	        78	dev_ioctl.c	FUNCTION_3	FUNCTION_1	FOR_1	IF_1	IF_2
0x4000552	            0x31f6	                            xor esi, esi	        78	dev_ioctl.c	FUNCTION_3	FUNCTION_1	FOR_1	IF_1	IF_2
0x4000554	          0x4489e1	                           mov ecx, r12d	        78	dev_ioctl.c	FUNCTION_3	FUNCTION_1	FOR_1	IF_1	IF_2
0x4000557	          0x4889ef	                            mov rdi, rbp	        78	dev_ioctl.c	FUNCTION_3	FUNCTION_1	FOR_1	IF_1	IF_2
0x400055a	      0xe800000000	                          call 0x400055f	        78	dev_ioctl.c	FUNCTION_3	FUNCTION_1	FOR_1	IF_1	IF_2
0x400055f	            0x85c0	                           test eax, eax	        82	dev_ioctl.c	FUNCTION_3	FUNCTION_1	FOR_1	IF_1	IF_3
0x4000561	            0x79d0	                           jns 0x4000533	        82	dev_ioctl.c	FUNCTION_3	FUNCTION_1	FOR_1	IF_1	IF_3
0x4000563	      0xb8f2ffffff	                     mov eax, 0xfffffff2	        83	dev_ioctl.c	FUNCTION_3	FUNCTION_1	FOR_1	IF_1	IF_3
0x4000568	        0x4883c410	                           add rsp, 0x10	        98	dev_ioctl.c	FUNCTION_3
0x400056c	              0x5b	                                 pop rbx	        98	dev_ioctl.c	FUNCTION_3
0x400056d	              0x5d	                                 pop rbp	        98	dev_ioctl.c	FUNCTION_3
0x400056e	            0x415c	                                 pop r12	        98	dev_ioctl.c	FUNCTION_3
0x4000570	            0x415d	                                 pop r13	        98	dev_ioctl.c	FUNCTION_3
0x4000572	            0x415e	                                 pop r14	        98	dev_ioctl.c	FUNCTION_3
0x4000574	            0x415f	                                 pop r15	        98	dev_ioctl.c	FUNCTION_3
0x4000576	              0xc3	                                     ret	        98	dev_ioctl.c	FUNCTION_3
0x4000577	        0x488b4550	            mov rax, qword [rbp + 0x50] 	        73	dev_ioctl.c	FUNCTION_3	FUNCTION_1
0x400057b	        0x48390424	                    cmp qword [rsp], rax	        73	dev_ioctl.c	FUNCTION_3	FUNCTION_1
0x400057f	        0x488d68b0	                   lea rbp, [rax - 0x50]	        73	dev_ioctl.c	FUNCTION_3	FUNCTION_1
0x4000583	            0x758a	                           jne 0x400050f	        73	dev_ioctl.c	FUNCTION_3	FUNCTION_1
0x4000585	      0x488b442408	                mov rax, qword [rsp + 8]	        92	dev_ioctl.c	FUNCTION_3
0x400058a	          0x448930	                   mov dword [rax], r14d	        92	dev_ioctl.c	FUNCTION_3
0x400058d	            0x31c0	                            xor eax, eax	        97	dev_ioctl.c	FUNCTION_3
0x400058f	            0xebd7	                           jmp 0x4000568	        97	dev_ioctl.c	FUNCTION_3
0x4000591	          0x4531f6	                          xor r14d, r14d	        72	dev_ioctl.c	FUNCTION_3
0x4000594	            0xebef	                           jmp 0x4000585	        72	dev_ioctl.c	FUNCTION_3
dev_ioctl	SWITCH,1:DO,0:CALL,25:ELSE,0:FOR,0:IF,11:WHILE,0:functions,0	263
0x40005a0	          0x4885c9	                           test rcx, rcx	       394	dev_ioctl.c	FUNCTION_8	IF_1
0x40005a3	            0x4156	                                push r14	       390	dev_ioctl.c	FUNCTION_8
0x40005a5	            0x4155	                                push r13	       390	dev_ioctl.c	FUNCTION_8
0x40005a7	            0x4154	                                push r12	       390	dev_ioctl.c	FUNCTION_8
0x40005a9	              0x55	                                push rbp	       390	dev_ioctl.c	FUNCTION_8
0x40005aa	              0x53	                                push rbx	       390	dev_ioctl.c	FUNCTION_8
0x40005ab	          0x4889d3	                            mov rbx, rdx	       390	dev_ioctl.c	FUNCTION_8
0x40005ae	            0x7403	                            je 0x40005b3	       394	dev_ioctl.c	FUNCTION_8	IF_1
0x40005b0	          0xc60101	                       mov byte [rcx], 1	       395	dev_ioctl.c	FUNCTION_8	IF_1
0x40005b3	    0x81fe10890000	                         cmp esi, 0x8910	       396	dev_ioctl.c	FUNCTION_8	IF_2
0x40005b9	     0xf8422020000	                            je 0x40007e1	       396	dev_ioctl.c	FUNCTION_8	IF_2
0x40005bf	            0x89f5	                            mov ebp, esi	       396	dev_ioctl.c	FUNCTION_8	IF_2
0x40005c1	          0x4989fc	                            mov r12, rdi	       396	dev_ioctl.c	FUNCTION_8	IF_2
0x40005c4	        0xc6430f00	                 mov byte [rbx + 0xf], 0	       399	dev_ioctl.c	FUNCTION_8
0x40005c8	      0xbe3a000000	                           mov esi, 0x3a	       401	dev_ioctl.c	FUNCTION_8	CALL_2
0x40005cd	          0x4889df	                            mov rdi, rbx	       401	dev_ioctl.c	FUNCTION_8	CALL_2
0x40005d0	          0x4989cd	                            mov r13, rcx	       401	dev_ioctl.c	FUNCTION_8	CALL_2
0x40005d3	      0xe800000000	                          call 0x40005d8	       401	dev_ioctl.c	FUNCTION_8	CALL_2
0x40005d8	          0x4885c0	                           test rax, rax	       402	dev_ioctl.c	FUNCTION_8	IF_3
0x40005db	          0x4989c6	                            mov r14, rax	       401	dev_ioctl.c	FUNCTION_8	CALL_2
0x40005de	            0x7403	                            je 0x40005e3	       402	dev_ioctl.c	FUNCTION_8	IF_3
0x40005e0	          0xc60000	                       mov byte [rax], 0	       403	dev_ioctl.c	FUNCTION_8	IF_3
0x40005e3	    0x8d85ef76ffff	                 lea eax, [rbp - 0x8911]	       409	dev_ioctl.c	FUNCTION_8	SWITCH_1
0x40005e9	      0x3d9f000000	                           cmp eax, 0x9f	       409	dev_ioctl.c	FUNCTION_8	SWITCH_1
0x40005ee	     0xf879f010000	                            ja 0x4000793	       409	dev_ioctl.c	FUNCTION_8	SWITCH_1
0x40005f4	    0x488b04c50000	                  mov rax, qword [rax*8]	       409	dev_ioctl.c	FUNCTION_8	SWITCH_1
0x40005fc	      0xe900000000	                           jmp 0x4000601	       409	dev_ioctl.c	FUNCTION_8	SWITCH_1
0x4000601	      0xbf0c000000	                            mov edi, 0xc	       468	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_16
0x4000606	      0xe800000000	                          call 0x400060b	       468	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_16
0x400060b	            0x84c0	                             test al, al	       468	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_16
0x400060d	     0xf84f5010000	                            je 0x4000808	       468	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_16
0x4000613	      0x498b7c2440	            mov rdi, qword [r12 + 0x40] 	       493	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_9	CALL_17
0x4000618	      0xbe0c000000	                            mov esi, 0xc	       493	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_9	CALL_17
0x400061d	      0xe800000000	                          call 0x4000622	       493	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_9	CALL_17
0x4000622	            0x84c0	                             test al, al	       493	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_9	CALL_17
0x4000624	     0xf84de010000	                            je 0x4000808	       493	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_9	CALL_17
0x400062a	          0x4889de	                            mov rsi, rbx	       498	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_18
0x400062d	          0x4c89e7	                            mov rdi, r12	       498	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_18
0x4000630	      0xe800000000	                          call 0x4000635	       498	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_18
0x4000635	      0xe800000000	                          call 0x400063a	       499	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_19
0x400063a	          0x4889de	                            mov rsi, rbx	       500	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_20
0x400063d	            0x89ea	                            mov edx, ebp	       500	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_20
0x400063f	          0x4c89e7	                            mov rdi, r12	       500	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_20
0x4000642	      0xe819faffff	                     call sym.dev_ifsioc	       500	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_20
0x4000647	            0x89c3	                            mov ebx, eax	       500	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_20
0x4000649	      0xe800000000	                          call 0x400064e	       501	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_21
0x400064e	          0x4d85ed	                           test r13, r13	       502	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_10
0x4000651	     0xf8435010000	                            je 0x400078c	       502	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_10
0x4000657	      0x41c6450000	                       mov byte [r13], 0	       503	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_10
0x400065c	            0x89d8	                            mov eax, ebx	       504	dev_ioctl.c	FUNCTION_8	SWITCH_1
0x400065e	              0x5b	                                 pop rbx	       531	dev_ioctl.c	FUNCTION_8
0x400065f	              0x5d	                                 pop rbp	       531	dev_ioctl.c	FUNCTION_8
0x4000660	            0x415c	                                 pop r12	       531	dev_ioctl.c	FUNCTION_8
0x4000662	            0x415d	                                 pop r13	       531	dev_ioctl.c	FUNCTION_8
0x4000664	            0x415e	                                 pop r14	       531	dev_ioctl.c	FUNCTION_8
0x4000666	              0xc3	                                     ret	       531	dev_ioctl.c	FUNCTION_8
0x4000667	              0x5b	                                 pop rbx	       531	dev_ioctl.c	FUNCTION_8
0x4000668	      0xb8e7ffffff	                     mov eax, 0xffffffe7	       529	dev_ioctl.c	FUNCTION_8	SWITCH_1
0x400066d	              0x5d	                                 pop rbp	       531	dev_ioctl.c	FUNCTION_8
0x400066e	            0x415c	                                 pop r12	       531	dev_ioctl.c	FUNCTION_8
0x4000670	            0x415d	                                 pop r13	       531	dev_ioctl.c	FUNCTION_8
0x4000672	            0x415e	                                 pop r14	       531	dev_ioctl.c	FUNCTION_8
0x4000674	              0xc3	                                     ret	       531	dev_ioctl.c	FUNCTION_8
0x4000675	          0x4889de	                            mov rsi, rbx	       424	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_3
0x4000678	          0x4c89e7	                            mov rdi, r12	       424	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_3
0x400067b	      0xe800000000	                          call 0x4000680	       424	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_3
0x4000680	          0x4889de	                            mov rsi, rbx	       106	dev_ioctl.c	FUNCTION_4	CALL_1
0x4000683	          0x4c89e7	                            mov rdi, r12	       106	dev_ioctl.c	FUNCTION_4	CALL_1
0x4000686	      0xe800000000	                          call 0x400068b	       106	dev_ioctl.c	FUNCTION_4	CALL_1
0x400068b	          0x4885c0	                           test rax, rax	       108	dev_ioctl.c	FUNCTION_4	IF_1
0x400068e	     0xf84ae020000	                            je 0x4000942	       108	dev_ioctl.c	FUNCTION_4	IF_1
0x4000694	    0x81fd27890000	                         cmp ebp, 0x8927	       111	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x400069a	     0xf84ea010000	                            je 0x400088a	       111	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x40006a0	     0xf866c010000	                           jbe 0x4000812	       111	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x40006a6	    0x81fd33890000	                         cmp ebp, 0x8933	       111	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x40006ac	     0xf8446010000	                            je 0x40007f8	       111	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x40006b2	     0xf867e010000	                           jbe 0x4000836	       111	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x40006b8	    0x81fd42890000	                         cmp ebp, 0x8942	       111	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x40006be	     0xf84b6010000	                            je 0x400087a	       111	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x40006c4	    0x81fd70890000	                         cmp ebp, 0x8970	       111	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x40006ca	     0xf855a010000	                           jne 0x400082a	       111	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x40006d0	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       141	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x40006d4	        0x48895310	             mov qword [rbx + 0x10], rdx	       141	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x40006d8	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       142	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x40006dc	        0x48895318	             mov qword [rbx + 0x18], rdx	       142	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x40006e0	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       143	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x40006e4	        0x66895320	               mov word [rbx + 0x20], dx	       143	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x40006e8	          0x8b5040	            mov edx, dword [rax + 0x40] 	       144	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x40006eb	          0x885322	               mov byte [rbx + 0x22], dl	       144	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x40006ee	     0xfb690170200	          movzx edx, byte [rax + 0x217] 	       145	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x40006f5	          0x885323	               mov byte [rbx + 0x23], dl	       145	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x40006f8	     0xfb680160200	          movzx eax, byte [rax + 0x216] 	       146	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x40006ff	          0x884324	               mov byte [rbx + 0x24], al	       146	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x4000702	            0x31c0	                            xor eax, eax	       147	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x4000704	          0x4d85f6	                           test r14, r14	       428	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_4
0x4000707	     0xf8451ffffff	                            je 0x400065e	       428	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_4
0x400070d	        0x41c6063a	                    mov byte [r14], 0x3a	       429	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_4
0x4000711	      0xe948ffffff	                           jmp 0x400065e	       429	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_4
0x4000716	          0x4889de	                            mov rsi, rbx	       450	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_11
0x4000719	          0x4c89e7	                            mov rdi, r12	       450	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_11
0x400071c	      0xe800000000	                          call 0x4000721	       450	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_11
0x4000721	      0x498b7c2440	            mov rdi, qword [r12 + 0x40] 	       451	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_6	CALL_12
0x4000726	      0xbe0c000000	                            mov esi, 0xc	       451	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_6	CALL_12
0x400072b	      0xe800000000	                          call 0x4000730	       451	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_6	CALL_12
0x4000730	            0x84c0	                             test al, al	       451	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_6	CALL_12
0x4000732	     0xf84d0000000	                            je 0x4000808	       451	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_6	CALL_12
0x4000738	      0xe800000000	                          call 0x400073d	       453	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_13
0x400073d	          0x4889de	                            mov rsi, rbx	       454	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_14
0x4000740	            0x89ea	                            mov edx, ebp	       454	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_14
0x4000742	          0x4c89e7	                            mov rdi, r12	       454	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_14
0x4000745	      0xe816f9ffff	                     call sym.dev_ifsioc	       454	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_14
0x400074a	            0x89c3	                            mov ebx, eax	       454	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_14
0x400074c	      0xe800000000	                          call 0x4000751	       455	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_15
0x4000751	          0x4d85f6	                           test r14, r14	       456	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_7
0x4000754	            0x7436	                            je 0x400078c	       456	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_7
0x4000756	        0x41c6063a	                    mov byte [r14], 0x3a	       457	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_7
0x400075a	            0x89d8	                            mov eax, ebx	       458	dev_ioctl.c	FUNCTION_8	SWITCH_1
0x400075c	              0x5b	                                 pop rbx	       531	dev_ioctl.c	FUNCTION_8
0x400075d	              0x5d	                                 pop rbp	       531	dev_ioctl.c	FUNCTION_8
0x400075e	            0x415c	                                 pop r12	       531	dev_ioctl.c	FUNCTION_8
0x4000760	            0x415d	                                 pop r13	       531	dev_ioctl.c	FUNCTION_8
0x4000762	            0x415e	                                 pop r14	       531	dev_ioctl.c	FUNCTION_8
0x4000764	              0xc3	                                     ret	       531	dev_ioctl.c	FUNCTION_8
0x4000765	          0x4889de	                            mov rsi, rbx	       433	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_7
0x4000768	          0x4c89e7	                            mov rdi, r12	       433	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_7
0x400076b	      0xe800000000	                          call 0x4000770	       433	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_7
0x4000770	      0xe800000000	                          call 0x4000775	       434	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_8
0x4000775	          0x4889de	                            mov rsi, rbx	       435	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_9
0x4000778	          0x4c89e7	                            mov rdi, r12	       435	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_9
0x400077b	      0xe800000000	                          call 0x4000780	       435	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_9
0x4000780	            0x89c3	                            mov ebx, eax	       435	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_9
0x4000782	      0xe800000000	                          call 0x4000787	       436	dev_ioctl.c	FUNCTION_8	SWITCH_1	CALL_10
0x4000787	          0x4d85f6	                           test r14, r14	       437	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_5
0x400078a	            0x75ca	                           jne 0x4000756	       437	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_5
0x400078c	            0x89d8	                            mov eax, ebx	       504	dev_ioctl.c	FUNCTION_8	SWITCH_1
0x400078e	      0xe9cbfeffff	                           jmp 0x400065e	       504	dev_ioctl.c	FUNCTION_8	SWITCH_1
0x4000793	    0x81fd4a890000	                         cmp ebp, 0x894a	       519	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_11
0x4000799	            0x7417	                            je 0x40007b2	       519	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_11
0x400079b	    0x81fdb1890000	                         cmp ebp, 0x89b1	       519	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_11
0x40007a1	            0x740f	                            je 0x40007b2	       519	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_11
0x40007a3	    0x8d851076ffff	                 lea eax, [rbp - 0x89f0]	       520	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_11
0x40007a9	          0x83f80f	                            cmp eax, 0xf	       520	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_11
0x40007ac	     0xf87b5feffff	                            ja 0x4000667	       520	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_11
0x40007b2	          0x4889de	                            mov rsi, rbx	       523	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_11	CALL_22
0x40007b5	          0x4c89e7	                            mov rdi, r12	       523	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_11	CALL_22
0x40007b8	      0xe800000000	                          call 0x40007bd	       523	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_11	CALL_22
0x40007bd	      0xe800000000	                          call 0x40007c2	       524	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_11	CALL_23
0x40007c2	            0x89ea	                            mov edx, ebp	       525	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_11	CALL_24
0x40007c4	          0x4889de	                            mov rsi, rbx	       525	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_11	CALL_24
0x40007c7	          0x4c89e7	                            mov rdi, r12	       525	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_11	CALL_24
0x40007ca	      0xe891f8ffff	                     call sym.dev_ifsioc	       525	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_11	CALL_24
0x40007cf	            0x89c3	                            mov ebx, eax	       525	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_11	CALL_24
0x40007d1	      0xe800000000	                          call 0x40007d6	       526	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_11	CALL_25
0x40007d6	            0x89d8	                            mov eax, ebx	       527	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_11
0x40007d8	              0x5b	                                 pop rbx	       531	dev_ioctl.c	FUNCTION_8
0x40007d9	              0x5d	                                 pop rbp	       531	dev_ioctl.c	FUNCTION_8
0x40007da	            0x415c	                                 pop r12	       531	dev_ioctl.c	FUNCTION_8
0x40007dc	            0x415d	                                 pop r13	       531	dev_ioctl.c	FUNCTION_8
0x40007de	            0x415e	                                 pop r14	       531	dev_ioctl.c	FUNCTION_8
0x40007e0	              0xc3	                                     ret	       531	dev_ioctl.c	FUNCTION_8
0x40007e1	        0xc6430f00	                 mov byte [rbx + 0xf], 0	        23	dev_ioctl.c	FUNCTION_1
0x40007e5	          0x8b5310	            mov edx, dword [rbx + 0x10] 	        24	dev_ioctl.c	FUNCTION_1	CALL_1
0x40007e8	          0x4889de	                            mov rsi, rbx	        24	dev_ioctl.c	FUNCTION_1	CALL_1
0x40007eb	              0x5b	                                 pop rbx	       531	dev_ioctl.c	FUNCTION_8
0x40007ec	              0x5d	                                 pop rbp	       531	dev_ioctl.c	FUNCTION_8
0x40007ed	            0x415c	                                 pop r12	       531	dev_ioctl.c	FUNCTION_8
0x40007ef	            0x415d	                                 pop r13	       531	dev_ioctl.c	FUNCTION_8
0x40007f1	            0x415e	                                 pop r14	       531	dev_ioctl.c	FUNCTION_8
0x40007f3	      0xe900000000	                           jmp 0x40007f8	        24	dev_ioctl.c	FUNCTION_1	CALL_1
0x40007f8	    0x8b8008010000	           mov eax, dword [rax + 0x108] 	       150	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x40007fe	          0x894310	             mov dword [rbx + 0x10], eax	       150	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x4000801	            0x31c0	                            xor eax, eax	       151	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x4000803	      0xe9fcfeffff	                           jmp 0x4000704	       151	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x4000808	      0xb8ffffffff	                     mov eax, 0xffffffff	       452	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_6
0x400080d	      0xe94cfeffff	                           jmp 0x400065e	       452	dev_ioctl.c	FUNCTION_8	SWITCH_1	IF_6
0x4000812	    0x81fd1d890000	                         cmp ebp, 0x891d	       111	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x4000818	            0x743f	                            je 0x4000859	       111	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x400081a	    0x81fd21890000	                         cmp ebp, 0x8921	       111	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x4000820	            0x7427	                            je 0x4000849	       111	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x4000822	    0x81fd13890000	                         cmp ebp, 0x8913	       111	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x4000828	            0x743d	                            je 0x4000867	       111	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x400082a	             0xf0b	                                     ud2	       111	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x400082c	      0xb8e7ffffff	                     mov eax, 0xffffffe7	       162	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x4000831	      0xe9cefeffff	                           jmp 0x4000704	       162	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x4000836	    0x81fd29890000	                         cmp ebp, 0x8929	       111	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x400083c	      0xb8eaffffff	                     mov eax, 0xffffffea	       137	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x4000841	     0xf84bdfeffff	                            je 0x4000704	       111	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x4000847	            0xebe1	                           jmp 0x400082a	       111	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x4000849	    0x8b8018020000	           mov eax, dword [rax + 0x218] 	       122	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x400084f	          0x894310	             mov dword [rbx + 0x10], eax	       122	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x4000852	            0x31c0	                            xor eax, eax	       123	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x4000854	      0xe9abfeffff	                           jmp 0x4000704	       123	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x4000859	    0xc74310000000	               mov dword [rbx + 0x10], 0	       118	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x4000860	            0x31c0	                            xor eax, eax	       119	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x4000862	      0xe99dfeffff	                           jmp 0x4000704	       119	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x4000867	          0x4889c7	                            mov rdi, rax	       113	dev_ioctl.c	FUNCTION_4	SWITCH_1	CALL_2
0x400086a	      0xe800000000	                          call 0x400086f	       113	dev_ioctl.c	FUNCTION_4	SWITCH_1	CALL_2
0x400086f	        0x66894310	               mov word [rbx + 0x10], ax	       113	dev_ioctl.c	FUNCTION_4	SWITCH_1	CALL_2
0x4000873	            0x31c0	                            xor eax, eax	       114	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x4000875	      0xe98afeffff	                           jmp 0x4000704	       114	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x400087a	    0x8b8018040000	           mov eax, dword [rax + 0x418] 	       154	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x4000880	          0x894310	             mov dword [rbx + 0x10], eax	       154	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x4000883	            0x31c0	                            xor eax, eax	       155	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x4000885	      0xe97afeffff	                           jmp 0x4000704	       155	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x400088a	     0xfb6904f0200	          movzx edx, byte [rax + 0x24f] 	       126	dev_ioctl.c	FUNCTION_4	SWITCH_1	IF_2
0x4000891	            0x84d2	                             test dl, dl	       126	dev_ioctl.c	FUNCTION_4	SWITCH_1	IF_2
0x4000893	            0x7527	                           jne 0x40008bc	       126	dev_ioctl.c	FUNCTION_4	SWITCH_1	IF_2
0x4000895	            0x31d2	                            xor edx, edx	       127	dev_ioctl.c	FUNCTION_4	SWITCH_1	IF_2	CALL_3
0x4000897	    0x48c743120000	               mov qword [rbx + 0x12], 0	       127	dev_ioctl.c	FUNCTION_4	SWITCH_1	IF_2	CALL_3
0x400089f	    0xc7431a000000	               mov dword [rbx + 0x1a], 0	       127	dev_ioctl.c	FUNCTION_4	SWITCH_1	IF_2	CALL_3
0x40008a6	        0x6689531e	               mov word [rbx + 0x1e], dx	       127	dev_ioctl.c	FUNCTION_4	SWITCH_1	IF_2	CALL_3
0x40008aa	     0xfb780240200	          movzx eax, word [rax + 0x224] 	       133	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x40008b1	        0x66894310	               mov word [rbx + 0x10], ax	       133	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x40008b5	            0x31c0	                            xor eax, eax	       134	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x40008b7	      0xe948feffff	                           jmp 0x4000704	       134	dev_ioctl.c	FUNCTION_4	SWITCH_1
0x40008bc	        0x4883fa0e	                            cmp rdx, 0xe	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x40008c0	      0xb90e000000	                            mov ecx, 0xe	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x40008c5	        0x488d7b12	                   lea rdi, [rbx + 0x12]	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x40008c9	        0x480f47d1	                          cmova rdx, rcx	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x40008cd	    0x488bb0d80200	           mov rsi, qword [rax + 0x2d8] 	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x40008d4	          0x83fa08	                              cmp edx, 8	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x40008d7	            0x89d1	                            mov ecx, edx	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x40008d9	            0x7320	                           jae 0x40008fb	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x40008db	          0x83e204	                              and edx, 4	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x40008de	            0x756c	                           jne 0x400094c	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x40008e0	            0x85c9	                           test ecx, ecx	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x40008e2	            0x74c6	                            je 0x40008aa	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x40008e4	           0xfb616	                   movzx edx, byte [rsi]	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x40008e7	          0xf6c102	                              test cl, 2	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x40008ea	          0x885312	               mov byte [rbx + 0x12], dl	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x40008ed	            0x74bb	                            je 0x40008aa	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x40008ef	       0xfb7540efe	         movzx edx, word [rsi + rcx - 2]	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x40008f4	      0x6689540ffe	            mov word [rdi + rcx - 2], dx	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x40008f9	            0xebaf	                           jmp 0x40008aa	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x40008fb	          0x488b0e	                    mov rcx, qword [rsi]	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x40008fe	        0x48894b12	             mov qword [rbx + 0x12], rcx	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x4000902	            0x89d1	                            mov ecx, edx	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x4000904	      0x4c8b440ef8	           mov r8, qword [rsi + rcx - 8]	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x4000909	      0x4c89440ff8	           mov qword [rdi + rcx - 8], r8	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x400090e	        0x4c8d431a	                    lea r8, [rbx + 0x1a]	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x4000912	        0x4983e0f8	              and r8, 0xfffffffffffffff8	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x4000916	          0x4c29c7	                             sub rdi, r8	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x4000919	          0x8d0c3a	                    lea ecx, [rdx + rdi]	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x400091c	          0x4829fe	                            sub rsi, rdi	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x400091f	          0x83e1f8	                     and ecx, 0xfffffff8	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x4000922	          0x83f908	                              cmp ecx, 8	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x4000925	            0x7283	                            jb 0x40008aa	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x4000927	          0x83e1f8	                     and ecx, 0xfffffff8	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x400092a	            0x31d2	                            xor edx, edx	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x400092c	            0x89d7	                            mov edi, edx	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x400092e	          0x83c208	                              add edx, 8	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x4000931	        0x4c8b0c3e	               mov r9, qword [rsi + rdi]	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x4000935	            0x39ca	                            cmp edx, ecx	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x4000937	        0x4d890c38	                mov qword [r8 + rdi], r9	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x400093b	            0x72ef	                            jb 0x400092c	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x400093d	      0xe968ffffff	                           jmp 0x40008aa	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x4000942	      0xb8edffffff	                     mov eax, 0xffffffed	       109	dev_ioctl.c	FUNCTION_4	IF_1
0x4000947	      0xe9b8fdffff	                           jmp 0x4000704	       109	dev_ioctl.c	FUNCTION_4	IF_1
0x400094c	            0x8b16	                    mov edx, dword [rsi]	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x400094e	          0x895312	             mov dword [rbx + 0x12], edx	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x4000951	        0x8b540efc	          mov edx, dword [rsi + rcx - 4]	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x4000955	        0x89540ffc	          mov dword [rdi + rcx - 4], edx	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
0x4000959	      0xe94cffffff	                           jmp 0x40008aa	       130	dev_ioctl.c	FUNCTION_4	SWITCH_1	ELSE_1	CALL_4
register_gifconf	SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,1:WHILE,0:functions,0	8
0x4000040	          0x83ff2b	                           cmp edi, 0x2b	        40	dev_ioctl.c	FUNCTION_2	IF_1
0x4000043	            0x770d	                            ja 0x4000052	        40	dev_ioctl.c	FUNCTION_2	IF_1
0x4000045	            0x89ff	                            mov edi, edi	        42	dev_ioctl.c	FUNCTION_2
0x4000047	            0x31c0	                            xor eax, eax	        43	dev_ioctl.c	FUNCTION_2
0x4000049	    0x488934fd0000	                  mov qword [rdi*8], rsi	        42	dev_ioctl.c	FUNCTION_2
0x4000051	              0xc3	                                     ret	        43	dev_ioctl.c	FUNCTION_2
0x4000052	      0xb8eaffffff	                     mov eax, 0xffffffea	        41	dev_ioctl.c	FUNCTION_2	IF_1
0x4000057	              0xc3	                                     ret	        44	dev_ioctl.c	FUNCTION_2
