dst_cache_destroy	WHILE,0:IF,1:CALL,4:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0	23
0x4000080	        0x48833f00	                      cmp qword [rdi], 0	       160	dst_cache.c	FUNCTION_9	IF_1
0x4000084	            0x7448	                            je 0x40000ce	       160	dst_cache.c	FUNCTION_9	IF_1
0x4000086	              0x55	                                push rbp	       157	dst_cache.c	FUNCTION_9
0x4000087	          0x4889fd	                            mov rbp, rdi	       157	dst_cache.c	FUNCTION_9
0x400008a	              0x53	                                push rbx	       157	dst_cache.c	FUNCTION_9
0x400008b	      0xbbffffffff	                     mov ebx, 0xffffffff	       157	dst_cache.c	FUNCTION_9
0x4000090	            0xeb19	                           jmp 0x40000ab	       157	dst_cache.c	FUNCTION_9
0x4000092	          0x4863c3	                         movsxd rax, ebx	       164	dst_cache.c	FUNCTION_9	CALL_3
0x4000095	        0x488b5500	                    mov rdx, qword [rbp]	       164	dst_cache.c	FUNCTION_9	CALL_3
0x4000099	    0x488b04c50000	                  mov rax, qword [rax*8]	       164	dst_cache.c	FUNCTION_9	CALL_3
0x40000a1	      0x488b7c1008	         mov rdi, qword [rax + rdx + 8] 	       164	dst_cache.c	FUNCTION_9	CALL_3
0x40000a6	      0xe800000000	                          call 0x40000ab	       164	dst_cache.c	FUNCTION_9	CALL_3
0x40000ab	            0x89df	                            mov edi, ebx	       163	dst_cache.c	FUNCTION_9	CALL_1
0x40000ad	    0x48c7c6000000	                              mov rsi, 0	       163	dst_cache.c	FUNCTION_9	CALL_1
0x40000b4	      0xe800000000	                          call 0x40000b9	       163	dst_cache.c	FUNCTION_9	CALL_1
0x40000b9	    0x3b0500000000	            cmp eax, dword [0x040000bf] 	       163	dst_cache.c	FUNCTION_9	CALL_1
0x40000bf	            0x89c3	                            mov ebx, eax	       163	dst_cache.c	FUNCTION_9	CALL_1
0x40000c1	            0x72cf	                            jb 0x4000092	       163	dst_cache.c	FUNCTION_9	CALL_1
0x40000c3	        0x488b7d00	                    mov rdi, qword [rbp]	       166	dst_cache.c	FUNCTION_9	CALL_4
0x40000c7	              0x5b	                                 pop rbx	       167	dst_cache.c	FUNCTION_9
0x40000c8	              0x5d	                                 pop rbp	       167	dst_cache.c	FUNCTION_9
0x40000c9	      0xe900000000	                           jmp 0x40000ce	       166	dst_cache.c	FUNCTION_9	CALL_4
0x40000ce	            0xf3c3	                                     ret	       166	dst_cache.c	FUNCTION_9	CALL_4
dst_cache_get_ip6	WHILE,0:IF,2:CALL,2:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0	26
0x40002a0	              0x55	                                push rbp	       126	dst_cache.c	FUNCTION_7
0x40002a1	          0x4889e5	                            mov rbp, rsp	       126	dst_cache.c	FUNCTION_7
0x40002a4	            0x4154	                                push r12	       126	dst_cache.c	FUNCTION_7
0x40002a6	            0x4152	                                push r10	       126	dst_cache.c	FUNCTION_7
0x40002a8	              0x53	                                push rbx	       126	dst_cache.c	FUNCTION_7
0x40002a9	          0x488b1f	                    mov rbx, qword [rdi]	       130	dst_cache.c	FUNCTION_7	IF_1
0x40002ac	          0x4885db	                           test rbx, rbx	       130	dst_cache.c	FUNCTION_7	IF_1
0x40002af	            0x7434	                            je 0x40002e5	       130	dst_cache.c	FUNCTION_7	IF_1
0x40002b1	          0x4989f4	                            mov r12, rsi	       130	dst_cache.c	FUNCTION_7	IF_1
0x40002b4	    0x6548031d0000	          add rbx, qword gs:[0x040002bc]	       133	dst_cache.c	FUNCTION_7	CALL_1
0x40002bc	        0x4883c708	                              add rdi, 8	       133	dst_cache.c	FUNCTION_7	CALL_1
0x40002c0	          0x4889de	                            mov rsi, rbx	       134	dst_cache.c	FUNCTION_7	CALL_2
0x40002c3	      0xe808ffffff	   call sym.dst_cache_per_cpu_get.isra.4	       134	dst_cache.c	FUNCTION_7	CALL_2
0x40002c8	          0x4885c0	                           test rax, rax	       135	dst_cache.c	FUNCTION_7	IF_2
0x40002cb	            0x7418	                            je 0x40002e5	       135	dst_cache.c	FUNCTION_7	IF_2
0x40002cd	        0x488b4b14	            mov rcx, qword [rbx + 0x14] 	       138	dst_cache.c	FUNCTION_7
0x40002d1	        0x488b5b1c	            mov rbx, qword [rbx + 0x1c] 	       138	dst_cache.c	FUNCTION_7
0x40002d5	        0x49890c24	                    mov qword [r12], rcx	       138	dst_cache.c	FUNCTION_7
0x40002d9	      0x49895c2408	                mov qword [r12 + 8], rbx	       138	dst_cache.c	FUNCTION_7
0x40002de	              0x5b	                                 pop rbx	       140	dst_cache.c	FUNCTION_7
0x40002df	            0x415a	                                 pop r10	       140	dst_cache.c	FUNCTION_7
0x40002e1	            0x415c	                                 pop r12	       140	dst_cache.c	FUNCTION_7
0x40002e3	              0x5d	                                 pop rbp	       140	dst_cache.c	FUNCTION_7
0x40002e4	              0xc3	                                     ret	       140	dst_cache.c	FUNCTION_7
0x40002e5	            0x31c0	                            xor eax, eax	       136	dst_cache.c	FUNCTION_7	IF_2
0x40002e7	            0xebf5	                           jmp 0x40002de	       136	dst_cache.c	FUNCTION_7	IF_2
dst_cache_get_ip4	WHILE,0:IF,2:CALL,3:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0	19
0x40002f0	              0x55	                                push rbp	        77	dst_cache.c	FUNCTION_4
0x40002f1	              0x53	                                push rbx	        77	dst_cache.c	FUNCTION_4
0x40002f2	          0x488b1f	                    mov rbx, qword [rdi]	        81	dst_cache.c	FUNCTION_4	IF_1
0x40002f5	          0x4885db	                           test rbx, rbx	        81	dst_cache.c	FUNCTION_4	IF_1
0x40002f8	            0x7425	                            je 0x400031f	        81	dst_cache.c	FUNCTION_4	IF_1
0x40002fa	          0x4889f5	                            mov rbp, rsi	        81	dst_cache.c	FUNCTION_4	IF_1
0x40002fd	    0x6548031d0000	          add rbx, qword gs:[0x04000305]	        84	dst_cache.c	FUNCTION_4	CALL_1
0x4000305	        0x4883c708	                              add rdi, 8	        84	dst_cache.c	FUNCTION_4	CALL_1
0x4000309	          0x4889de	                            mov rsi, rbx	        85	dst_cache.c	FUNCTION_4	CALL_2
0x400030c	      0xe8bffeffff	   call sym.dst_cache_per_cpu_get.isra.4	        85	dst_cache.c	FUNCTION_4	CALL_2
0x4000311	          0x4885c0	                           test rax, rax	        86	dst_cache.c	FUNCTION_4	IF_2
0x4000314	            0x7409	                            je 0x400031f	        86	dst_cache.c	FUNCTION_4	IF_2
0x4000316	          0x8b5314	            mov edx, dword [rbx + 0x14] 	        89	dst_cache.c	FUNCTION_4
0x4000319	          0x895500	                    mov dword [rbp], edx	        89	dst_cache.c	FUNCTION_4
0x400031c	              0x5b	                                 pop rbx	        91	dst_cache.c	FUNCTION_4
0x400031d	              0x5d	                                 pop rbp	        91	dst_cache.c	FUNCTION_4
0x400031e	              0xc3	                                     ret	        91	dst_cache.c	FUNCTION_4
0x400031f	            0x31c0	                            xor eax, eax	        87	dst_cache.c	FUNCTION_4	IF_2
0x4000321	            0xebf9	                           jmp 0x400031c	        87	dst_cache.c	FUNCTION_4	IF_2
dst_cache_get	WHILE,0:IF,1:CALL,2:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0	8
0x4000280	          0x488b37	                    mov rsi, qword [rdi]	        69	dst_cache.c	FUNCTION_3	IF_1
0x4000283	          0x4885f6	                           test rsi, rsi	        69	dst_cache.c	FUNCTION_3	IF_1
0x4000286	            0x7411	                            je 0x4000299	        69	dst_cache.c	FUNCTION_3	IF_1
0x4000288	    0x654803350000	          add rsi, qword gs:[0x04000290]	        72	dst_cache.c	FUNCTION_3	CALL_2
0x4000290	        0x4883c708	                              add rdi, 8	        72	dst_cache.c	FUNCTION_3	CALL_2
0x4000294	      0xe937ffffff	    jmp sym.dst_cache_per_cpu_get.isra.4	        72	dst_cache.c	FUNCTION_3	CALL_2
0x4000299	            0x31c0	                            xor eax, eax	        73	dst_cache.c	FUNCTION_3
0x400029b	              0xc3	                                     ret	        73	dst_cache.c	FUNCTION_3
dst_cache_init	WHILE,0:IF,1:CALL,2:FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0	18
0x4000040	              0x53	                                push rbx	       145	dst_cache.c	FUNCTION_8
0x4000041	            0x89f2	                            mov edx, esi	       146	dst_cache.c	FUNCTION_8	CALL_1
0x4000043	          0x4889fb	                            mov rbx, rdi	       145	dst_cache.c	FUNCTION_8
0x4000046	          0x80ce80	                             or dh, 0x80	       146	dst_cache.c	FUNCTION_8	CALL_1
0x4000049	      0xbe08000000	                              mov esi, 8	       146	dst_cache.c	FUNCTION_8	CALL_1
0x400004e	      0xbf28000000	                           mov edi, 0x28	       146	dst_cache.c	FUNCTION_8	CALL_1
0x4000053	      0xe800000000	                          call 0x4000058	       146	dst_cache.c	FUNCTION_8	CALL_1
0x4000058	          0x4885c0	                           test rax, rax	       148	dst_cache.c	FUNCTION_8	IF_1
0x400005b	          0x488903	                    mov qword [rbx], rax	       146	dst_cache.c	FUNCTION_8	CALL_1
0x400005e	            0x740f	                            je 0x400006f	       148	dst_cache.c	FUNCTION_8	IF_1
0x4000060	    0x488b05000000	            mov rax, qword [0x04000067] 	        79	dst_cache.h	FUNCTION_69
0x4000067	        0x48894308	                mov qword [rbx + 8], rax	        79	dst_cache.h	FUNCTION_69
0x400006b	            0x31c0	                            xor eax, eax	       152	dst_cache.c	FUNCTION_8
0x400006d	              0x5b	                                 pop rbx	       153	dst_cache.c	FUNCTION_8
0x400006e	              0xc3	                                     ret	       153	dst_cache.c	FUNCTION_8
0x400006f	      0xb8f4ffffff	                     mov eax, 0xfffffff4	       149	dst_cache.c	FUNCTION_8	IF_1
0x4000074	              0x5b	                                 pop rbx	       153	dst_cache.c	FUNCTION_8
0x4000075	              0xc3	                                     ret	       153	dst_cache.c	FUNCTION_8
