security_task_prlimit	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x40027b0	            0x4155	                                push r13	      1104	security.c	FUNCTION_120
0x40027b2	            0x4154	                                push r12	      1104	security.c	FUNCTION_120
0x40027b4	              0x55	                                push rbp	      1104	security.c	FUNCTION_120
0x40027b5	              0x53	                                push rbx	      1104	security.c	FUNCTION_120
0x40027b6	    0x488b1d000000	            mov rbx, qword [0x040027bd] 	      1105	security.c	FUNCTION_120	CALL_1
0x40027bd	          0x4885db	                           test rbx, rbx	      1105	security.c	FUNCTION_120	CALL_1
0x40027c0	            0x742e	                            je 0x40027f0	      1105	security.c	FUNCTION_120	CALL_1
0x40027c2	          0x4989fd	                            mov r13, rdi	      1105	security.c	FUNCTION_120	CALL_1
0x40027c5	          0x4989f4	                            mov r12, rsi	      1105	security.c	FUNCTION_120	CALL_1
0x40027c8	            0x89d5	                            mov ebp, edx	      1105	security.c	FUNCTION_120	CALL_1
0x40027ca	            0xeb08	                           jmp 0x40027d4	      1105	security.c	FUNCTION_120	CALL_1
0x40027cc	          0x488b1b	                    mov rbx, qword [rbx]	      1105	security.c	FUNCTION_120	CALL_1
0x40027cf	          0x4885db	                           test rbx, rbx	      1105	security.c	FUNCTION_120	CALL_1
0x40027d2	            0x741c	                            je 0x40027f0	      1105	security.c	FUNCTION_120	CALL_1
0x40027d4	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1105	security.c	FUNCTION_120	CALL_1
0x40027d8	            0x89ea	                            mov edx, ebp	      1105	security.c	FUNCTION_120	CALL_1
0x40027da	          0x4c89e6	                            mov rsi, r12	      1105	security.c	FUNCTION_120	CALL_1
0x40027dd	          0x4c89ef	                            mov rdi, r13	      1105	security.c	FUNCTION_120	CALL_1
0x40027e0	      0xe800000000	                          call 0x40027e5	      1105	security.c	FUNCTION_120	CALL_1
0x40027e5	            0x85c0	                           test eax, eax	      1105	security.c	FUNCTION_120	CALL_1
0x40027e7	            0x74e3	                            je 0x40027cc	      1105	security.c	FUNCTION_120	CALL_1
0x40027e9	              0x5b	                                 pop rbx	      1106	security.c	FUNCTION_120
0x40027ea	              0x5d	                                 pop rbp	      1106	security.c	FUNCTION_120
0x40027eb	            0x415c	                                 pop r12	      1106	security.c	FUNCTION_120
0x40027ed	            0x415d	                                 pop r13	      1106	security.c	FUNCTION_120
0x40027ef	              0xc3	                                     ret	      1106	security.c	FUNCTION_120
0x40027f0	              0x5b	                                 pop rbx	      1106	security.c	FUNCTION_120
0x40027f1	            0x31c0	                            xor eax, eax	      1104	security.c	FUNCTION_120
0x40027f3	              0x5d	                                 pop rbp	      1106	security.c	FUNCTION_120
0x40027f4	            0x415c	                                 pop r12	      1106	security.c	FUNCTION_120
0x40027f6	            0x415d	                                 pop r13	      1106	security.c	FUNCTION_120
0x40027f8	              0xc3	                                     ret	      1106	security.c	FUNCTION_120
security_inode_permission	IF,1:SWITCH,0:functions,0:CALL,3:FOR,0:WHILE,0:DO,0:ELSE,0	31
0x4001ad0	        0xf6470d02	                test byte [rdi + 0xd], 2	       701	security.c	FUNCTION_70	IF_1	CALL_2
0x4001ad4	            0x753f	                           jne 0x4001b15	       701	security.c	FUNCTION_70	IF_1	CALL_2
0x4001ad6	            0x4154	                                push r12	       700	security.c	FUNCTION_70
0x4001ad8	              0x55	                                push rbp	       700	security.c	FUNCTION_70
0x4001ad9	          0x4189f4	                           mov r12d, esi	       700	security.c	FUNCTION_70
0x4001adc	              0x53	                                push rbx	       700	security.c	FUNCTION_70
0x4001add	    0x488b1d000000	            mov rbx, qword [0x04001ae4] 	       703	security.c	FUNCTION_70	CALL_3
0x4001ae4	          0x4889fd	                            mov rbp, rdi	       703	security.c	FUNCTION_70	CALL_3
0x4001ae7	          0x4885db	                           test rbx, rbx	       703	security.c	FUNCTION_70	CALL_3
0x4001aea	            0x750a	                           jne 0x4001af6	       703	security.c	FUNCTION_70	CALL_3
0x4001aec	            0xeb20	                           jmp 0x4001b0e	       703	security.c	FUNCTION_70	CALL_3
0x4001aee	          0x488b1b	                    mov rbx, qword [rbx]	       703	security.c	FUNCTION_70	CALL_3
0x4001af1	          0x4885db	                           test rbx, rbx	       703	security.c	FUNCTION_70	CALL_3
0x4001af4	            0x7418	                            je 0x4001b0e	       703	security.c	FUNCTION_70	CALL_3
0x4001af6	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       703	security.c	FUNCTION_70	CALL_3
0x4001afa	          0x4489e6	                           mov esi, r12d	       703	security.c	FUNCTION_70	CALL_3
0x4001afd	          0x4889ef	                            mov rdi, rbp	       703	security.c	FUNCTION_70	CALL_3
0x4001b00	      0xe800000000	                          call 0x4001b05	       703	security.c	FUNCTION_70	CALL_3
0x4001b05	            0x85c0	                           test eax, eax	       703	security.c	FUNCTION_70	CALL_3
0x4001b07	            0x74e5	                            je 0x4001aee	       703	security.c	FUNCTION_70	CALL_3
0x4001b09	              0x5b	                                 pop rbx	       704	security.c	FUNCTION_70
0x4001b0a	              0x5d	                                 pop rbp	       704	security.c	FUNCTION_70
0x4001b0b	            0x415c	                                 pop r12	       704	security.c	FUNCTION_70
0x4001b0d	              0xc3	                                     ret	       704	security.c	FUNCTION_70
0x4001b0e	              0x5b	                                 pop rbx	       704	security.c	FUNCTION_70
0x4001b0f	            0x31c0	                            xor eax, eax	       702	security.c	FUNCTION_70	IF_1
0x4001b11	              0x5d	                                 pop rbp	       704	security.c	FUNCTION_70
0x4001b12	            0x415c	                                 pop r12	       704	security.c	FUNCTION_70
0x4001b14	              0xc3	                                     ret	       704	security.c	FUNCTION_70
0x4001b15	            0x31c0	                            xor eax, eax	       702	security.c	FUNCTION_70	IF_1
0x4001b17	              0xc3	                                     ret	       704	security.c	FUNCTION_70
security_tun_dev_open	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x4000a90	              0x55	                                push rbp	      1540	security.c	FUNCTION_195
0x4000a91	              0x53	                                push rbx	      1540	security.c	FUNCTION_195
0x4000a92	          0x4889fd	                            mov rbp, rdi	      1540	security.c	FUNCTION_195
0x4000a95	    0x488b1d000000	            mov rbx, qword [0x04000a9c] 	      1541	security.c	FUNCTION_195	CALL_1
0x4000a9c	          0x4885db	                           test rbx, rbx	      1541	security.c	FUNCTION_195	CALL_1
0x4000a9f	            0x750a	                           jne 0x4000aab	      1541	security.c	FUNCTION_195	CALL_1
0x4000aa1	            0xeb1b	                           jmp 0x4000abe	      1541	security.c	FUNCTION_195	CALL_1
0x4000aa3	          0x488b1b	                    mov rbx, qword [rbx]	      1541	security.c	FUNCTION_195	CALL_1
0x4000aa6	          0x4885db	                           test rbx, rbx	      1541	security.c	FUNCTION_195	CALL_1
0x4000aa9	            0x7413	                            je 0x4000abe	      1541	security.c	FUNCTION_195	CALL_1
0x4000aab	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1541	security.c	FUNCTION_195	CALL_1
0x4000aaf	          0x4889ef	                            mov rdi, rbp	      1541	security.c	FUNCTION_195	CALL_1
0x4000ab2	      0xe800000000	                          call 0x4000ab7	      1541	security.c	FUNCTION_195	CALL_1
0x4000ab7	            0x85c0	                           test eax, eax	      1541	security.c	FUNCTION_195	CALL_1
0x4000ab9	            0x74e8	                            je 0x4000aa3	      1541	security.c	FUNCTION_195	CALL_1
0x4000abb	              0x5b	                                 pop rbx	      1542	security.c	FUNCTION_195
0x4000abc	              0x5d	                                 pop rbp	      1542	security.c	FUNCTION_195
0x4000abd	              0xc3	                                     ret	      1542	security.c	FUNCTION_195
0x4000abe	            0x31c0	                            xor eax, eax	      1540	security.c	FUNCTION_195
0x4000ac0	              0x5b	                                 pop rbx	      1542	security.c	FUNCTION_195
0x4000ac1	              0x5d	                                 pop rbp	      1542	security.c	FUNCTION_195
0x4000ac2	              0xc3	                                     ret	      1542	security.c	FUNCTION_195
security_sb_alloc	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x40014d0	              0x55	                                push rbp	       362	security.c	FUNCTION_30
0x40014d1	              0x53	                                push rbx	       362	security.c	FUNCTION_30
0x40014d2	          0x4889fd	                            mov rbp, rdi	       362	security.c	FUNCTION_30
0x40014d5	    0x488b1d000000	            mov rbx, qword [0x040014dc] 	       363	security.c	FUNCTION_30	CALL_1
0x40014dc	          0x4885db	                           test rbx, rbx	       363	security.c	FUNCTION_30	CALL_1
0x40014df	            0x750a	                           jne 0x40014eb	       363	security.c	FUNCTION_30	CALL_1
0x40014e1	            0xeb1b	                           jmp 0x40014fe	       363	security.c	FUNCTION_30	CALL_1
0x40014e3	          0x488b1b	                    mov rbx, qword [rbx]	       363	security.c	FUNCTION_30	CALL_1
0x40014e6	          0x4885db	                           test rbx, rbx	       363	security.c	FUNCTION_30	CALL_1
0x40014e9	            0x7413	                            je 0x40014fe	       363	security.c	FUNCTION_30	CALL_1
0x40014eb	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       363	security.c	FUNCTION_30	CALL_1
0x40014ef	          0x4889ef	                            mov rdi, rbp	       363	security.c	FUNCTION_30	CALL_1
0x40014f2	      0xe800000000	                          call 0x40014f7	       363	security.c	FUNCTION_30	CALL_1
0x40014f7	            0x85c0	                           test eax, eax	       363	security.c	FUNCTION_30	CALL_1
0x40014f9	            0x74e8	                            je 0x40014e3	       363	security.c	FUNCTION_30	CALL_1
0x40014fb	              0x5b	                                 pop rbx	       364	security.c	FUNCTION_30
0x40014fc	              0x5d	                                 pop rbp	       364	security.c	FUNCTION_30
0x40014fd	              0xc3	                                     ret	       364	security.c	FUNCTION_30
0x40014fe	            0x31c0	                            xor eax, eax	       362	security.c	FUNCTION_30
0x4001500	              0x5b	                                 pop rbx	       364	security.c	FUNCTION_30
0x4001501	              0x5d	                                 pop rbp	       364	security.c	FUNCTION_30
0x4001502	              0xc3	                                     ret	       364	security.c	FUNCTION_30
security_key_free	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	15
0x40035a0	              0x55	                                push rbp	      1700	security.c	FUNCTION_216
0x40035a1	              0x53	                                push rbx	      1700	security.c	FUNCTION_216
0x40035a2	    0x488b1d000000	            mov rbx, qword [0x040035a9] 	      1701	security.c	FUNCTION_216	CALL_1
0x40035a9	          0x4885db	                           test rbx, rbx	      1701	security.c	FUNCTION_216	CALL_1
0x40035ac	            0x7417	                            je 0x40035c5	      1701	security.c	FUNCTION_216	CALL_1
0x40035ae	          0x4889fd	                            mov rbp, rdi	      1701	security.c	FUNCTION_216	CALL_1
0x40035b1	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1701	security.c	FUNCTION_216	CALL_1
0x40035b5	          0x4889ef	                            mov rdi, rbp	      1701	security.c	FUNCTION_216	CALL_1
0x40035b8	      0xe800000000	                          call 0x40035bd	      1701	security.c	FUNCTION_216	CALL_1
0x40035bd	          0x488b1b	                    mov rbx, qword [rbx]	      1701	security.c	FUNCTION_216	CALL_1
0x40035c0	          0x4885db	                           test rbx, rbx	      1701	security.c	FUNCTION_216	CALL_1
0x40035c3	            0x75ec	                           jne 0x40035b1	      1701	security.c	FUNCTION_216	CALL_1
0x40035c5	              0x5b	                                 pop rbx	      1702	security.c	FUNCTION_216
0x40035c6	              0x5d	                                 pop rbp	      1702	security.c	FUNCTION_216
0x40035c7	              0xc3	                                     ret	      1702	security.c	FUNCTION_216
call_lsm_notifier	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	4
0x4000de0	          0x4889f2	                            mov rdx, rsi	       179	security.c	FUNCTION_8
0x4000de3	            0x89fe	                            mov esi, edi	       180	security.c	FUNCTION_8	CALL_1
0x4000de5	    0x48c7c7000000	                              mov rdi, 0	       180	security.c	FUNCTION_8	CALL_1
0x4000dec	      0xe900000000	                           jmp 0x4000df1	       180	security.c	FUNCTION_8	CALL_1
security_secid_to_secctx	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4000440	            0x4155	                                push r13	      1292	security.c	FUNCTION_153
0x4000442	            0x4154	                                push r12	      1292	security.c	FUNCTION_153
0x4000444	      0xb8a1ffffff	                     mov eax, 0xffffffa1	      1292	security.c	FUNCTION_153
0x4000449	              0x55	                                push rbp	      1292	security.c	FUNCTION_153
0x400044a	              0x53	                                push rbx	      1292	security.c	FUNCTION_153
0x400044b	    0x488b1d000000	            mov rbx, qword [0x04000452] 	      1293	security.c	FUNCTION_153	CALL_1
0x4000452	          0x4885db	                           test rbx, rbx	      1293	security.c	FUNCTION_153	CALL_1
0x4000455	            0x7429	                            je 0x4000480	      1293	security.c	FUNCTION_153	CALL_1
0x4000457	          0x4189fd	                           mov r13d, edi	      1293	security.c	FUNCTION_153	CALL_1
0x400045a	          0x4989f4	                            mov r12, rsi	      1293	security.c	FUNCTION_153	CALL_1
0x400045d	          0x4889d5	                            mov rbp, rdx	      1293	security.c	FUNCTION_153	CALL_1
0x4000460	            0xeb08	                           jmp 0x400046a	      1293	security.c	FUNCTION_153	CALL_1
0x4000462	          0x488b1b	                    mov rbx, qword [rbx]	      1293	security.c	FUNCTION_153	CALL_1
0x4000465	          0x4885db	                           test rbx, rbx	      1293	security.c	FUNCTION_153	CALL_1
0x4000468	            0x7416	                            je 0x4000480	      1293	security.c	FUNCTION_153	CALL_1
0x400046a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1293	security.c	FUNCTION_153	CALL_1
0x400046e	          0x4889ea	                            mov rdx, rbp	      1293	security.c	FUNCTION_153	CALL_1
0x4000471	          0x4c89e6	                            mov rsi, r12	      1293	security.c	FUNCTION_153	CALL_1
0x4000474	          0x4489ef	                           mov edi, r13d	      1293	security.c	FUNCTION_153	CALL_1
0x4000477	      0xe800000000	                          call 0x400047c	      1293	security.c	FUNCTION_153	CALL_1
0x400047c	            0x85c0	                           test eax, eax	      1293	security.c	FUNCTION_153	CALL_1
0x400047e	            0x74e2	                            je 0x4000462	      1293	security.c	FUNCTION_153	CALL_1
0x4000480	              0x5b	                                 pop rbx	      1295	security.c	FUNCTION_153
0x4000481	              0x5d	                                 pop rbp	      1295	security.c	FUNCTION_153
0x4000482	            0x415c	                                 pop r12	      1295	security.c	FUNCTION_153
0x4000484	            0x415d	                                 pop r13	      1295	security.c	FUNCTION_153
0x4000486	              0xc3	                                     ret	      1295	security.c	FUNCTION_153
security_sk_clone	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	19
0x4000760	            0x4154	                                push r12	      1448	security.c	FUNCTION_180
0x4000762	              0x55	                                push rbp	      1448	security.c	FUNCTION_180
0x4000763	              0x53	                                push rbx	      1448	security.c	FUNCTION_180
0x4000764	    0x488b1d000000	            mov rbx, qword [0x0400076b] 	      1449	security.c	FUNCTION_180	CALL_1
0x400076b	          0x4885db	                           test rbx, rbx	      1449	security.c	FUNCTION_180	CALL_1
0x400076e	            0x741d	                            je 0x400078d	      1449	security.c	FUNCTION_180	CALL_1
0x4000770	          0x4989fc	                            mov r12, rdi	      1449	security.c	FUNCTION_180	CALL_1
0x4000773	          0x4889f5	                            mov rbp, rsi	      1449	security.c	FUNCTION_180	CALL_1
0x4000776	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1449	security.c	FUNCTION_180	CALL_1
0x400077a	          0x4889ee	                            mov rsi, rbp	      1449	security.c	FUNCTION_180	CALL_1
0x400077d	          0x4c89e7	                            mov rdi, r12	      1449	security.c	FUNCTION_180	CALL_1
0x4000780	      0xe800000000	                          call 0x4000785	      1449	security.c	FUNCTION_180	CALL_1
0x4000785	          0x488b1b	                    mov rbx, qword [rbx]	      1449	security.c	FUNCTION_180	CALL_1
0x4000788	          0x4885db	                           test rbx, rbx	      1449	security.c	FUNCTION_180	CALL_1
0x400078b	            0x75e9	                           jne 0x4000776	      1449	security.c	FUNCTION_180	CALL_1
0x400078d	              0x5b	                                 pop rbx	      1450	security.c	FUNCTION_180
0x400078e	              0x5d	                                 pop rbp	      1450	security.c	FUNCTION_180
0x400078f	            0x415c	                                 pop r12	      1450	security.c	FUNCTION_180
0x4000791	              0xc3	                                     ret	      1450	security.c	FUNCTION_180
security_file_set_fowner	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	15
0x4002260	              0x55	                                push rbp	       958	security.c	FUNCTION_96
0x4002261	              0x53	                                push rbx	       958	security.c	FUNCTION_96
0x4002262	    0x488b1d000000	            mov rbx, qword [0x04002269] 	       959	security.c	FUNCTION_96	CALL_1
0x4002269	          0x4885db	                           test rbx, rbx	       959	security.c	FUNCTION_96	CALL_1
0x400226c	            0x7417	                            je 0x4002285	       959	security.c	FUNCTION_96	CALL_1
0x400226e	          0x4889fd	                            mov rbp, rdi	       959	security.c	FUNCTION_96	CALL_1
0x4002271	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       959	security.c	FUNCTION_96	CALL_1
0x4002275	          0x4889ef	                            mov rdi, rbp	       959	security.c	FUNCTION_96	CALL_1
0x4002278	      0xe800000000	                          call 0x400227d	       959	security.c	FUNCTION_96	CALL_1
0x400227d	          0x488b1b	                    mov rbx, qword [rbx]	       959	security.c	FUNCTION_96	CALL_1
0x4002280	          0x4885db	                           test rbx, rbx	       959	security.c	FUNCTION_96	CALL_1
0x4002283	            0x75ec	                           jne 0x4002271	       959	security.c	FUNCTION_96	CALL_1
0x4002285	              0x5b	                                 pop rbx	       960	security.c	FUNCTION_96
0x4002286	              0x5d	                                 pop rbp	       960	security.c	FUNCTION_96
0x4002287	              0xc3	                                     ret	       960	security.c	FUNCTION_96
security_kernel_act_as	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4002520	            0x4154	                                push r12	      1022	security.c	FUNCTION_107
0x4002522	              0x55	                                push rbp	      1022	security.c	FUNCTION_107
0x4002523	          0x4989fc	                            mov r12, rdi	      1022	security.c	FUNCTION_107
0x4002526	              0x53	                                push rbx	      1022	security.c	FUNCTION_107
0x4002527	    0x488b1d000000	            mov rbx, qword [0x0400252e] 	      1023	security.c	FUNCTION_107	CALL_1
0x400252e	            0x89f5	                            mov ebp, esi	      1023	security.c	FUNCTION_107	CALL_1
0x4002530	          0x4885db	                           test rbx, rbx	      1023	security.c	FUNCTION_107	CALL_1
0x4002533	            0x750a	                           jne 0x400253f	      1023	security.c	FUNCTION_107	CALL_1
0x4002535	            0xeb1f	                           jmp 0x4002556	      1023	security.c	FUNCTION_107	CALL_1
0x4002537	          0x488b1b	                    mov rbx, qword [rbx]	      1023	security.c	FUNCTION_107	CALL_1
0x400253a	          0x4885db	                           test rbx, rbx	      1023	security.c	FUNCTION_107	CALL_1
0x400253d	            0x7417	                            je 0x4002556	      1023	security.c	FUNCTION_107	CALL_1
0x400253f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1023	security.c	FUNCTION_107	CALL_1
0x4002543	            0x89ee	                            mov esi, ebp	      1023	security.c	FUNCTION_107	CALL_1
0x4002545	          0x4c89e7	                            mov rdi, r12	      1023	security.c	FUNCTION_107	CALL_1
0x4002548	      0xe800000000	                          call 0x400254d	      1023	security.c	FUNCTION_107	CALL_1
0x400254d	            0x85c0	                           test eax, eax	      1023	security.c	FUNCTION_107	CALL_1
0x400254f	            0x74e6	                            je 0x4002537	      1023	security.c	FUNCTION_107	CALL_1
0x4002551	              0x5b	                                 pop rbx	      1024	security.c	FUNCTION_107
0x4002552	              0x5d	                                 pop rbp	      1024	security.c	FUNCTION_107
0x4002553	            0x415c	                                 pop r12	      1024	security.c	FUNCTION_107
0x4002555	              0xc3	                                     ret	      1024	security.c	FUNCTION_107
0x4002556	              0x5b	                                 pop rbx	      1024	security.c	FUNCTION_107
0x4002557	            0x31c0	                            xor eax, eax	      1022	security.c	FUNCTION_107
0x4002559	              0x5d	                                 pop rbp	      1024	security.c	FUNCTION_107
0x400255a	            0x415c	                                 pop r12	      1024	security.c	FUNCTION_107
0x400255c	              0xc3	                                     ret	      1024	security.c	FUNCTION_107
security_binder_transfer_file	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x4001030	            0x4155	                                push r13	       249	security.c	FUNCTION_14
0x4001032	            0x4154	                                push r12	       249	security.c	FUNCTION_14
0x4001034	              0x55	                                push rbp	       249	security.c	FUNCTION_14
0x4001035	              0x53	                                push rbx	       249	security.c	FUNCTION_14
0x4001036	    0x488b1d000000	            mov rbx, qword [0x0400103d] 	       250	security.c	FUNCTION_14	CALL_1
0x400103d	          0x4885db	                           test rbx, rbx	       250	security.c	FUNCTION_14	CALL_1
0x4001040	            0x7430	                            je 0x4001072	       250	security.c	FUNCTION_14	CALL_1
0x4001042	          0x4989fd	                            mov r13, rdi	       250	security.c	FUNCTION_14	CALL_1
0x4001045	          0x4989f4	                            mov r12, rsi	       250	security.c	FUNCTION_14	CALL_1
0x4001048	          0x4889d5	                            mov rbp, rdx	       250	security.c	FUNCTION_14	CALL_1
0x400104b	            0xeb08	                           jmp 0x4001055	       250	security.c	FUNCTION_14	CALL_1
0x400104d	          0x488b1b	                    mov rbx, qword [rbx]	       250	security.c	FUNCTION_14	CALL_1
0x4001050	          0x4885db	                           test rbx, rbx	       250	security.c	FUNCTION_14	CALL_1
0x4001053	            0x741d	                            je 0x4001072	       250	security.c	FUNCTION_14	CALL_1
0x4001055	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       250	security.c	FUNCTION_14	CALL_1
0x4001059	          0x4889ea	                            mov rdx, rbp	       250	security.c	FUNCTION_14	CALL_1
0x400105c	          0x4c89e6	                            mov rsi, r12	       250	security.c	FUNCTION_14	CALL_1
0x400105f	          0x4c89ef	                            mov rdi, r13	       250	security.c	FUNCTION_14	CALL_1
0x4001062	      0xe800000000	                          call 0x4001067	       250	security.c	FUNCTION_14	CALL_1
0x4001067	            0x85c0	                           test eax, eax	       250	security.c	FUNCTION_14	CALL_1
0x4001069	            0x74e2	                            je 0x400104d	       250	security.c	FUNCTION_14	CALL_1
0x400106b	              0x5b	                                 pop rbx	       251	security.c	FUNCTION_14
0x400106c	              0x5d	                                 pop rbp	       251	security.c	FUNCTION_14
0x400106d	            0x415c	                                 pop r12	       251	security.c	FUNCTION_14
0x400106f	            0x415d	                                 pop r13	       251	security.c	FUNCTION_14
0x4001071	              0xc3	                                     ret	       251	security.c	FUNCTION_14
0x4001072	              0x5b	                                 pop rbx	       251	security.c	FUNCTION_14
0x4001073	            0x31c0	                            xor eax, eax	       249	security.c	FUNCTION_14
0x4001075	              0x5d	                                 pop rbp	       251	security.c	FUNCTION_14
0x4001076	            0x415c	                                 pop r12	       251	security.c	FUNCTION_14
0x4001078	            0x415d	                                 pop r13	       251	security.c	FUNCTION_14
0x400107a	              0xc3	                                     ret	       251	security.c	FUNCTION_14
security_bprm_check	IF,1:SWITCH,0:functions,0:CALL,2:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x4001430	              0x55	                                push rbp	       342	security.c	FUNCTION_27
0x4001431	              0x53	                                push rbx	       342	security.c	FUNCTION_27
0x4001432	          0x4889fd	                            mov rbp, rdi	       342	security.c	FUNCTION_27
0x4001435	    0x488b1d000000	            mov rbx, qword [0x0400143c] 	       345	security.c	FUNCTION_27	CALL_1
0x400143c	          0x4885db	                           test rbx, rbx	       345	security.c	FUNCTION_27	CALL_1
0x400143f	            0x750a	                           jne 0x400144b	       345	security.c	FUNCTION_27	CALL_1
0x4001441	            0xeb1b	                           jmp 0x400145e	       345	security.c	FUNCTION_27	CALL_1
0x4001443	          0x488b1b	                    mov rbx, qword [rbx]	       345	security.c	FUNCTION_27	CALL_1
0x4001446	          0x4885db	                           test rbx, rbx	       345	security.c	FUNCTION_27	CALL_1
0x4001449	            0x7413	                            je 0x400145e	       345	security.c	FUNCTION_27	CALL_1
0x400144b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       345	security.c	FUNCTION_27	CALL_1
0x400144f	          0x4889ef	                            mov rdi, rbp	       345	security.c	FUNCTION_27	CALL_1
0x4001452	      0xe800000000	                          call 0x4001457	       345	security.c	FUNCTION_27	CALL_1
0x4001457	            0x85c0	                           test eax, eax	       345	security.c	FUNCTION_27	CALL_1
0x4001459	            0x74e8	                            je 0x4001443	       345	security.c	FUNCTION_27	CALL_1
0x400145b	              0x5b	                                 pop rbx	       349	security.c	FUNCTION_27
0x400145c	              0x5d	                                 pop rbp	       349	security.c	FUNCTION_27
0x400145d	              0xc3	                                     ret	       349	security.c	FUNCTION_27
0x400145e	            0x31c0	                            xor eax, eax	       348	security.c	FUNCTION_27	CALL_2
0x4001460	              0x5b	                                 pop rbx	       349	security.c	FUNCTION_27
0x4001461	              0x5d	                                 pop rbp	       349	security.c	FUNCTION_27
0x4001462	              0xc3	                                     ret	       349	security.c	FUNCTION_27
security_setprocattr	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4002fb0	            0x4155	                                push r13	      1276	security.c	FUNCTION_150
0x4002fb2	            0x4154	                                push r12	      1276	security.c	FUNCTION_150
0x4002fb4	      0xb8eaffffff	                     mov eax, 0xffffffea	      1276	security.c	FUNCTION_150
0x4002fb9	              0x55	                                push rbp	      1276	security.c	FUNCTION_150
0x4002fba	              0x53	                                push rbx	      1276	security.c	FUNCTION_150
0x4002fbb	    0x488b1d000000	            mov rbx, qword [0x04002fc2] 	      1277	security.c	FUNCTION_150	CALL_1
0x4002fc2	          0x4885db	                           test rbx, rbx	      1277	security.c	FUNCTION_150	CALL_1
0x4002fc5	            0x7429	                            je 0x4002ff0	      1277	security.c	FUNCTION_150	CALL_1
0x4002fc7	          0x4989fd	                            mov r13, rdi	      1277	security.c	FUNCTION_150	CALL_1
0x4002fca	          0x4989f4	                            mov r12, rsi	      1277	security.c	FUNCTION_150	CALL_1
0x4002fcd	          0x4889d5	                            mov rbp, rdx	      1277	security.c	FUNCTION_150	CALL_1
0x4002fd0	            0xeb08	                           jmp 0x4002fda	      1277	security.c	FUNCTION_150	CALL_1
0x4002fd2	          0x488b1b	                    mov rbx, qword [rbx]	      1277	security.c	FUNCTION_150	CALL_1
0x4002fd5	          0x4885db	                           test rbx, rbx	      1277	security.c	FUNCTION_150	CALL_1
0x4002fd8	            0x7416	                            je 0x4002ff0	      1277	security.c	FUNCTION_150	CALL_1
0x4002fda	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1277	security.c	FUNCTION_150	CALL_1
0x4002fde	          0x4889ea	                            mov rdx, rbp	      1277	security.c	FUNCTION_150	CALL_1
0x4002fe1	          0x4c89e6	                            mov rsi, r12	      1277	security.c	FUNCTION_150	CALL_1
0x4002fe4	          0x4c89ef	                            mov rdi, r13	      1277	security.c	FUNCTION_150	CALL_1
0x4002fe7	      0xe800000000	                          call 0x4002fec	      1277	security.c	FUNCTION_150	CALL_1
0x4002fec	            0x85c0	                           test eax, eax	      1277	security.c	FUNCTION_150	CALL_1
0x4002fee	            0x74e2	                            je 0x4002fd2	      1277	security.c	FUNCTION_150	CALL_1
0x4002ff0	              0x5b	                                 pop rbx	      1278	security.c	FUNCTION_150
0x4002ff1	              0x5d	                                 pop rbp	      1278	security.c	FUNCTION_150
0x4002ff2	            0x415c	                                 pop r12	      1278	security.c	FUNCTION_150
0x4002ff4	            0x415d	                                 pop r13	      1278	security.c	FUNCTION_150
0x4002ff6	              0xc3	                                     ret	      1278	security.c	FUNCTION_150
security_secmark_refcount_dec	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	11
0x4000950	              0x53	                                push rbx	      1504	security.c	FUNCTION_189
0x4000951	    0x488b1d000000	            mov rbx, qword [0x04000958] 	      1505	security.c	FUNCTION_189	CALL_1
0x4000958	          0x4885db	                           test rbx, rbx	      1505	security.c	FUNCTION_189	CALL_1
0x400095b	            0x7411	                            je 0x400096e	      1505	security.c	FUNCTION_189	CALL_1
0x400095d	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1505	security.c	FUNCTION_189	CALL_1
0x4000961	      0xe800000000	                          call 0x4000966	      1505	security.c	FUNCTION_189	CALL_1
0x4000966	          0x488b1b	                    mov rbx, qword [rbx]	      1505	security.c	FUNCTION_189	CALL_1
0x4000969	          0x4885db	                           test rbx, rbx	      1505	security.c	FUNCTION_189	CALL_1
0x400096c	            0x75ef	                           jne 0x400095d	      1505	security.c	FUNCTION_189	CALL_1
0x400096e	              0x5b	                                 pop rbx	      1506	security.c	FUNCTION_189
0x400096f	              0xc3	                                     ret	      1506	security.c	FUNCTION_189
security_task_setpgid	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4002630	            0x4154	                                push r12	      1066	security.c	FUNCTION_113
0x4002632	              0x55	                                push rbp	      1066	security.c	FUNCTION_113
0x4002633	          0x4989fc	                            mov r12, rdi	      1066	security.c	FUNCTION_113
0x4002636	              0x53	                                push rbx	      1066	security.c	FUNCTION_113
0x4002637	    0x488b1d000000	            mov rbx, qword [0x0400263e] 	      1067	security.c	FUNCTION_113	CALL_1
0x400263e	            0x89f5	                            mov ebp, esi	      1067	security.c	FUNCTION_113	CALL_1
0x4002640	          0x4885db	                           test rbx, rbx	      1067	security.c	FUNCTION_113	CALL_1
0x4002643	            0x750a	                           jne 0x400264f	      1067	security.c	FUNCTION_113	CALL_1
0x4002645	            0xeb1f	                           jmp 0x4002666	      1067	security.c	FUNCTION_113	CALL_1
0x4002647	          0x488b1b	                    mov rbx, qword [rbx]	      1067	security.c	FUNCTION_113	CALL_1
0x400264a	          0x4885db	                           test rbx, rbx	      1067	security.c	FUNCTION_113	CALL_1
0x400264d	            0x7417	                            je 0x4002666	      1067	security.c	FUNCTION_113	CALL_1
0x400264f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1067	security.c	FUNCTION_113	CALL_1
0x4002653	            0x89ee	                            mov esi, ebp	      1067	security.c	FUNCTION_113	CALL_1
0x4002655	          0x4c89e7	                            mov rdi, r12	      1067	security.c	FUNCTION_113	CALL_1
0x4002658	      0xe800000000	                          call 0x400265d	      1067	security.c	FUNCTION_113	CALL_1
0x400265d	            0x85c0	                           test eax, eax	      1067	security.c	FUNCTION_113	CALL_1
0x400265f	            0x74e6	                            je 0x4002647	      1067	security.c	FUNCTION_113	CALL_1
0x4002661	              0x5b	                                 pop rbx	      1068	security.c	FUNCTION_113
0x4002662	              0x5d	                                 pop rbp	      1068	security.c	FUNCTION_113
0x4002663	            0x415c	                                 pop r12	      1068	security.c	FUNCTION_113
0x4002665	              0xc3	                                     ret	      1068	security.c	FUNCTION_113
0x4002666	              0x5b	                                 pop rbx	      1068	security.c	FUNCTION_113
0x4002667	            0x31c0	                            xor eax, eax	      1066	security.c	FUNCTION_113
0x4002669	              0x5d	                                 pop rbp	      1068	security.c	FUNCTION_113
0x400266a	            0x415c	                                 pop r12	      1068	security.c	FUNCTION_113
0x400266c	              0xc3	                                     ret	      1068	security.c	FUNCTION_113
security_socket_getsockopt	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x4003360	            0x4155	                                push r13	      1403	security.c	FUNCTION_172
0x4003362	            0x4154	                                push r12	      1403	security.c	FUNCTION_172
0x4003364	              0x55	                                push rbp	      1403	security.c	FUNCTION_172
0x4003365	              0x53	                                push rbx	      1403	security.c	FUNCTION_172
0x4003366	    0x488b1d000000	            mov rbx, qword [0x0400336d] 	      1404	security.c	FUNCTION_172	CALL_1
0x400336d	          0x4885db	                           test rbx, rbx	      1404	security.c	FUNCTION_172	CALL_1
0x4003370	            0x742e	                            je 0x40033a0	      1404	security.c	FUNCTION_172	CALL_1
0x4003372	          0x4989fd	                            mov r13, rdi	      1404	security.c	FUNCTION_172	CALL_1
0x4003375	          0x4189f4	                           mov r12d, esi	      1404	security.c	FUNCTION_172	CALL_1
0x4003378	            0x89d5	                            mov ebp, edx	      1404	security.c	FUNCTION_172	CALL_1
0x400337a	            0xeb08	                           jmp 0x4003384	      1404	security.c	FUNCTION_172	CALL_1
0x400337c	          0x488b1b	                    mov rbx, qword [rbx]	      1404	security.c	FUNCTION_172	CALL_1
0x400337f	          0x4885db	                           test rbx, rbx	      1404	security.c	FUNCTION_172	CALL_1
0x4003382	            0x741c	                            je 0x40033a0	      1404	security.c	FUNCTION_172	CALL_1
0x4003384	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1404	security.c	FUNCTION_172	CALL_1
0x4003388	            0x89ea	                            mov edx, ebp	      1404	security.c	FUNCTION_172	CALL_1
0x400338a	          0x4489e6	                           mov esi, r12d	      1404	security.c	FUNCTION_172	CALL_1
0x400338d	          0x4c89ef	                            mov rdi, r13	      1404	security.c	FUNCTION_172	CALL_1
0x4003390	      0xe800000000	                          call 0x4003395	      1404	security.c	FUNCTION_172	CALL_1
0x4003395	            0x85c0	                           test eax, eax	      1404	security.c	FUNCTION_172	CALL_1
0x4003397	            0x74e3	                            je 0x400337c	      1404	security.c	FUNCTION_172	CALL_1
0x4003399	              0x5b	                                 pop rbx	      1405	security.c	FUNCTION_172
0x400339a	              0x5d	                                 pop rbp	      1405	security.c	FUNCTION_172
0x400339b	            0x415c	                                 pop r12	      1405	security.c	FUNCTION_172
0x400339d	            0x415d	                                 pop r13	      1405	security.c	FUNCTION_172
0x400339f	              0xc3	                                     ret	      1405	security.c	FUNCTION_172
0x40033a0	              0x5b	                                 pop rbx	      1405	security.c	FUNCTION_172
0x40033a1	            0x31c0	                            xor eax, eax	      1403	security.c	FUNCTION_172
0x40033a3	              0x5d	                                 pop rbp	      1405	security.c	FUNCTION_172
0x40033a4	            0x415c	                                 pop r12	      1405	security.c	FUNCTION_172
0x40033a6	            0x415d	                                 pop r13	      1405	security.c	FUNCTION_172
0x40033a8	              0xc3	                                     ret	      1405	security.c	FUNCTION_172
security_d_instantiate	IF,1:SWITCH,0:functions,0:CALL,3:FOR,0:WHILE,0:DO,0:ELSE,0	24
0x4000da0	          0x4885f6	                           test rsi, rsi	      1264	security.c	FUNCTION_148	IF_1	CALL_2
0x4000da3	            0x4154	                                push r12	      1263	security.c	FUNCTION_148
0x4000da5	          0x4989fc	                            mov r12, rdi	      1263	security.c	FUNCTION_148
0x4000da8	              0x55	                                push rbp	      1263	security.c	FUNCTION_148
0x4000da9	          0x4889f5	                            mov rbp, rsi	      1263	security.c	FUNCTION_148
0x4000dac	              0x53	                                push rbx	      1263	security.c	FUNCTION_148
0x4000dad	            0x7528	                           jne 0x4000dd7	      1264	security.c	FUNCTION_148	IF_1	CALL_2
0x4000daf	    0x488b1d000000	            mov rbx, qword [0x04000db6] 	      1266	security.c	FUNCTION_148	CALL_3
0x4000db6	          0x4885db	                           test rbx, rbx	      1266	security.c	FUNCTION_148	CALL_3
0x4000db9	            0x7417	                            je 0x4000dd2	      1266	security.c	FUNCTION_148	CALL_3
0x4000dbb	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1266	security.c	FUNCTION_148	CALL_3
0x4000dbf	          0x4889ee	                            mov rsi, rbp	      1266	security.c	FUNCTION_148	CALL_3
0x4000dc2	          0x4c89e7	                            mov rdi, r12	      1266	security.c	FUNCTION_148	CALL_3
0x4000dc5	      0xe800000000	                          call 0x4000dca	      1266	security.c	FUNCTION_148	CALL_3
0x4000dca	          0x488b1b	                    mov rbx, qword [rbx]	      1266	security.c	FUNCTION_148	CALL_3
0x4000dcd	          0x4885db	                           test rbx, rbx	      1266	security.c	FUNCTION_148	CALL_3
0x4000dd0	            0x75e9	                           jne 0x4000dbb	      1266	security.c	FUNCTION_148	CALL_3
0x4000dd2	              0x5b	                                 pop rbx	      1267	security.c	FUNCTION_148
0x4000dd3	              0x5d	                                 pop rbp	      1267	security.c	FUNCTION_148
0x4000dd4	            0x415c	                                 pop r12	      1267	security.c	FUNCTION_148
0x4000dd6	              0xc3	                                     ret	      1267	security.c	FUNCTION_148
0x4000dd7	        0xf6460d02	                test byte [rsi + 0xd], 2	      1264	security.c	FUNCTION_148	IF_1	CALL_2
0x4000ddb	            0x74d2	                            je 0x4000daf	      1264	security.c	FUNCTION_148	IF_1	CALL_2
0x4000ddd	            0xebf3	                           jmp 0x4000dd2	      1264	security.c	FUNCTION_148	IF_1	CALL_2
security_tun_dev_alloc_security	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x4000970	              0x55	                                push rbp	      1510	security.c	FUNCTION_190
0x4000971	              0x53	                                push rbx	      1510	security.c	FUNCTION_190
0x4000972	          0x4889fd	                            mov rbp, rdi	      1510	security.c	FUNCTION_190
0x4000975	    0x488b1d000000	            mov rbx, qword [0x0400097c] 	      1511	security.c	FUNCTION_190	CALL_1
0x400097c	          0x4885db	                           test rbx, rbx	      1511	security.c	FUNCTION_190	CALL_1
0x400097f	            0x750a	                           jne 0x400098b	      1511	security.c	FUNCTION_190	CALL_1
0x4000981	            0xeb1b	                           jmp 0x400099e	      1511	security.c	FUNCTION_190	CALL_1
0x4000983	          0x488b1b	                    mov rbx, qword [rbx]	      1511	security.c	FUNCTION_190	CALL_1
0x4000986	          0x4885db	                           test rbx, rbx	      1511	security.c	FUNCTION_190	CALL_1
0x4000989	            0x7413	                            je 0x400099e	      1511	security.c	FUNCTION_190	CALL_1
0x400098b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1511	security.c	FUNCTION_190	CALL_1
0x400098f	          0x4889ef	                            mov rdi, rbp	      1511	security.c	FUNCTION_190	CALL_1
0x4000992	      0xe800000000	                          call 0x4000997	      1511	security.c	FUNCTION_190	CALL_1
0x4000997	            0x85c0	                           test eax, eax	      1511	security.c	FUNCTION_190	CALL_1
0x4000999	            0x74e8	                            je 0x4000983	      1511	security.c	FUNCTION_190	CALL_1
0x400099b	              0x5b	                                 pop rbx	      1512	security.c	FUNCTION_190
0x400099c	              0x5d	                                 pop rbp	      1512	security.c	FUNCTION_190
0x400099d	              0xc3	                                     ret	      1512	security.c	FUNCTION_190
0x400099e	            0x31c0	                            xor eax, eax	      1510	security.c	FUNCTION_190
0x40009a0	              0x5b	                                 pop rbx	      1512	security.c	FUNCTION_190
0x40009a1	              0x5d	                                 pop rbp	      1512	security.c	FUNCTION_190
0x40009a2	              0xc3	                                     ret	      1512	security.c	FUNCTION_190
security_inode_listsecurity	IF,1:SWITCH,0:functions,0:CALL,3:FOR,0:WHILE,0:DO,0:ELSE,0	36
0x4000d40	        0xf6470d02	                test byte [rdi + 0xd], 2	       843	security.c	FUNCTION_82	IF_1	CALL_2
0x4000d44	            0x754b	                           jne 0x4000d91	       843	security.c	FUNCTION_82	IF_1	CALL_2
0x4000d46	            0x4155	                                push r13	       842	security.c	FUNCTION_82
0x4000d48	            0x4154	                                push r12	       842	security.c	FUNCTION_82
0x4000d4a	          0x4989d5	                            mov r13, rdx	       842	security.c	FUNCTION_82
0x4000d4d	              0x55	                                push rbp	       842	security.c	FUNCTION_82
0x4000d4e	              0x53	                                push rbx	       842	security.c	FUNCTION_82
0x4000d4f	          0x4989f4	                            mov r12, rsi	       842	security.c	FUNCTION_82
0x4000d52	    0x488b1d000000	            mov rbx, qword [0x04000d59] 	       845	security.c	FUNCTION_82	CALL_3
0x4000d59	          0x4889fd	                            mov rbp, rdi	       845	security.c	FUNCTION_82	CALL_3
0x4000d5c	          0x4885db	                           test rbx, rbx	       845	security.c	FUNCTION_82	CALL_3
0x4000d5f	            0x750a	                           jne 0x4000d6b	       845	security.c	FUNCTION_82	CALL_3
0x4000d61	            0xeb25	                           jmp 0x4000d88	       845	security.c	FUNCTION_82	CALL_3
0x4000d63	          0x488b1b	                    mov rbx, qword [rbx]	       845	security.c	FUNCTION_82	CALL_3
0x4000d66	          0x4885db	                           test rbx, rbx	       845	security.c	FUNCTION_82	CALL_3
0x4000d69	            0x741d	                            je 0x4000d88	       845	security.c	FUNCTION_82	CALL_3
0x4000d6b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       845	security.c	FUNCTION_82	CALL_3
0x4000d6f	          0x4c89ea	                            mov rdx, r13	       845	security.c	FUNCTION_82	CALL_3
0x4000d72	          0x4c89e6	                            mov rsi, r12	       845	security.c	FUNCTION_82	CALL_3
0x4000d75	          0x4889ef	                            mov rdi, rbp	       845	security.c	FUNCTION_82	CALL_3
0x4000d78	      0xe800000000	                          call 0x4000d7d	       845	security.c	FUNCTION_82	CALL_3
0x4000d7d	            0x85c0	                           test eax, eax	       845	security.c	FUNCTION_82	CALL_3
0x4000d7f	            0x74e2	                            je 0x4000d63	       845	security.c	FUNCTION_82	CALL_3
0x4000d81	              0x5b	                                 pop rbx	       846	security.c	FUNCTION_82
0x4000d82	              0x5d	                                 pop rbp	       846	security.c	FUNCTION_82
0x4000d83	            0x415c	                                 pop r12	       846	security.c	FUNCTION_82
0x4000d85	            0x415d	                                 pop r13	       846	security.c	FUNCTION_82
0x4000d87	              0xc3	                                     ret	       846	security.c	FUNCTION_82
0x4000d88	              0x5b	                                 pop rbx	       846	security.c	FUNCTION_82
0x4000d89	            0x31c0	                            xor eax, eax	       844	security.c	FUNCTION_82	IF_1
0x4000d8b	              0x5d	                                 pop rbp	       846	security.c	FUNCTION_82
0x4000d8c	            0x415c	                                 pop r12	       846	security.c	FUNCTION_82
0x4000d8e	            0x415d	                                 pop r13	       846	security.c	FUNCTION_82
0x4000d90	              0xc3	                                     ret	       846	security.c	FUNCTION_82
0x4000d91	            0x31c0	                            xor eax, eax	       844	security.c	FUNCTION_82	IF_1
0x4000d93	              0xc3	                                     ret	       846	security.c	FUNCTION_82
security_task_getsecid	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	20
0x40003c0	            0x4154	                                push r12	      1081	security.c	FUNCTION_116
0x40003c2	              0x55	                                push rbp	      1081	security.c	FUNCTION_116
0x40003c3	              0x53	                                push rbx	      1081	security.c	FUNCTION_116
0x40003c4	    0xc70600000000	                      mov dword [rsi], 0	      1082	security.c	FUNCTION_116
0x40003ca	    0x488b1d000000	            mov rbx, qword [0x040003d1] 	      1083	security.c	FUNCTION_116	CALL_1
0x40003d1	          0x4885db	                           test rbx, rbx	      1083	security.c	FUNCTION_116	CALL_1
0x40003d4	            0x741d	                            je 0x40003f3	      1083	security.c	FUNCTION_116	CALL_1
0x40003d6	          0x4989fc	                            mov r12, rdi	      1083	security.c	FUNCTION_116	CALL_1
0x40003d9	          0x4889f5	                            mov rbp, rsi	      1083	security.c	FUNCTION_116	CALL_1
0x40003dc	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1083	security.c	FUNCTION_116	CALL_1
0x40003e0	          0x4889ee	                            mov rsi, rbp	      1083	security.c	FUNCTION_116	CALL_1
0x40003e3	          0x4c89e7	                            mov rdi, r12	      1083	security.c	FUNCTION_116	CALL_1
0x40003e6	      0xe800000000	                          call 0x40003eb	      1083	security.c	FUNCTION_116	CALL_1
0x40003eb	          0x488b1b	                    mov rbx, qword [rbx]	      1083	security.c	FUNCTION_116	CALL_1
0x40003ee	          0x4885db	                           test rbx, rbx	      1083	security.c	FUNCTION_116	CALL_1
0x40003f1	            0x75e9	                           jne 0x40003dc	      1083	security.c	FUNCTION_116	CALL_1
0x40003f3	              0x5b	                                 pop rbx	      1084	security.c	FUNCTION_116
0x40003f4	              0x5d	                                 pop rbp	      1084	security.c	FUNCTION_116
0x40003f5	            0x415c	                                 pop r12	      1084	security.c	FUNCTION_116
0x40003f7	              0xc3	                                     ret	      1084	security.c	FUNCTION_116
security_sk_free	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	15
0x40034e0	              0x55	                                push rbp	      1443	security.c	FUNCTION_179
0x40034e1	              0x53	                                push rbx	      1443	security.c	FUNCTION_179
0x40034e2	    0x488b1d000000	            mov rbx, qword [0x040034e9] 	      1444	security.c	FUNCTION_179	CALL_1
0x40034e9	          0x4885db	                           test rbx, rbx	      1444	security.c	FUNCTION_179	CALL_1
0x40034ec	            0x7417	                            je 0x4003505	      1444	security.c	FUNCTION_179	CALL_1
0x40034ee	          0x4889fd	                            mov rbp, rdi	      1444	security.c	FUNCTION_179	CALL_1
0x40034f1	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1444	security.c	FUNCTION_179	CALL_1
0x40034f5	          0x4889ef	                            mov rdi, rbp	      1444	security.c	FUNCTION_179	CALL_1
0x40034f8	      0xe800000000	                          call 0x40034fd	      1444	security.c	FUNCTION_179	CALL_1
0x40034fd	          0x488b1b	                    mov rbx, qword [rbx]	      1444	security.c	FUNCTION_179	CALL_1
0x4003500	          0x4885db	                           test rbx, rbx	      1444	security.c	FUNCTION_179	CALL_1
0x4003503	            0x75ec	                           jne 0x40034f1	      1444	security.c	FUNCTION_179	CALL_1
0x4003505	              0x5b	                                 pop rbx	      1445	security.c	FUNCTION_179
0x4003506	              0x5d	                                 pop rbp	      1445	security.c	FUNCTION_179
0x4003507	              0xc3	                                     ret	      1445	security.c	FUNCTION_179
security_task_getsid	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x40026b0	              0x55	                                push rbp	      1076	security.c	FUNCTION_115
0x40026b1	              0x53	                                push rbx	      1076	security.c	FUNCTION_115
0x40026b2	          0x4889fd	                            mov rbp, rdi	      1076	security.c	FUNCTION_115
0x40026b5	    0x488b1d000000	            mov rbx, qword [0x040026bc] 	      1077	security.c	FUNCTION_115	CALL_1
0x40026bc	          0x4885db	                           test rbx, rbx	      1077	security.c	FUNCTION_115	CALL_1
0x40026bf	            0x750a	                           jne 0x40026cb	      1077	security.c	FUNCTION_115	CALL_1
0x40026c1	            0xeb1b	                           jmp 0x40026de	      1077	security.c	FUNCTION_115	CALL_1
0x40026c3	          0x488b1b	                    mov rbx, qword [rbx]	      1077	security.c	FUNCTION_115	CALL_1
0x40026c6	          0x4885db	                           test rbx, rbx	      1077	security.c	FUNCTION_115	CALL_1
0x40026c9	            0x7413	                            je 0x40026de	      1077	security.c	FUNCTION_115	CALL_1
0x40026cb	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1077	security.c	FUNCTION_115	CALL_1
0x40026cf	          0x4889ef	                            mov rdi, rbp	      1077	security.c	FUNCTION_115	CALL_1
0x40026d2	      0xe800000000	                          call 0x40026d7	      1077	security.c	FUNCTION_115	CALL_1
0x40026d7	            0x85c0	                           test eax, eax	      1077	security.c	FUNCTION_115	CALL_1
0x40026d9	            0x74e8	                            je 0x40026c3	      1077	security.c	FUNCTION_115	CALL_1
0x40026db	              0x5b	                                 pop rbx	      1078	security.c	FUNCTION_115
0x40026dc	              0x5d	                                 pop rbp	      1078	security.c	FUNCTION_115
0x40026dd	              0xc3	                                     ret	      1078	security.c	FUNCTION_115
0x40026de	            0x31c0	                            xor eax, eax	      1076	security.c	FUNCTION_115
0x40026e0	              0x5b	                                 pop rbx	      1078	security.c	FUNCTION_115
0x40026e1	              0x5d	                                 pop rbp	      1078	security.c	FUNCTION_115
0x40026e2	              0xc3	                                     ret	      1078	security.c	FUNCTION_115
security_key_permission	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x40035d0	            0x4155	                                push r13	      1706	security.c	FUNCTION_217
0x40035d2	            0x4154	                                push r12	      1706	security.c	FUNCTION_217
0x40035d4	              0x55	                                push rbp	      1706	security.c	FUNCTION_217
0x40035d5	              0x53	                                push rbx	      1706	security.c	FUNCTION_217
0x40035d6	    0x488b1d000000	            mov rbx, qword [0x040035dd] 	      1707	security.c	FUNCTION_217	CALL_1
0x40035dd	          0x4885db	                           test rbx, rbx	      1707	security.c	FUNCTION_217	CALL_1
0x40035e0	            0x742e	                            je 0x4003610	      1707	security.c	FUNCTION_217	CALL_1
0x40035e2	          0x4989fd	                            mov r13, rdi	      1707	security.c	FUNCTION_217	CALL_1
0x40035e5	          0x4989f4	                            mov r12, rsi	      1707	security.c	FUNCTION_217	CALL_1
0x40035e8	            0x89d5	                            mov ebp, edx	      1707	security.c	FUNCTION_217	CALL_1
0x40035ea	            0xeb08	                           jmp 0x40035f4	      1707	security.c	FUNCTION_217	CALL_1
0x40035ec	          0x488b1b	                    mov rbx, qword [rbx]	      1707	security.c	FUNCTION_217	CALL_1
0x40035ef	          0x4885db	                           test rbx, rbx	      1707	security.c	FUNCTION_217	CALL_1
0x40035f2	            0x741c	                            je 0x4003610	      1707	security.c	FUNCTION_217	CALL_1
0x40035f4	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1707	security.c	FUNCTION_217	CALL_1
0x40035f8	            0x89ea	                            mov edx, ebp	      1707	security.c	FUNCTION_217	CALL_1
0x40035fa	          0x4c89e6	                            mov rsi, r12	      1707	security.c	FUNCTION_217	CALL_1
0x40035fd	          0x4c89ef	                            mov rdi, r13	      1707	security.c	FUNCTION_217	CALL_1
0x4003600	      0xe800000000	                          call 0x4003605	      1707	security.c	FUNCTION_217	CALL_1
0x4003605	            0x85c0	                           test eax, eax	      1707	security.c	FUNCTION_217	CALL_1
0x4003607	            0x74e3	                            je 0x40035ec	      1707	security.c	FUNCTION_217	CALL_1
0x4003609	              0x5b	                                 pop rbx	      1708	security.c	FUNCTION_217
0x400360a	              0x5d	                                 pop rbp	      1708	security.c	FUNCTION_217
0x400360b	            0x415c	                                 pop r12	      1708	security.c	FUNCTION_217
0x400360d	            0x415d	                                 pop r13	      1708	security.c	FUNCTION_217
0x400360f	              0xc3	                                     ret	      1708	security.c	FUNCTION_217
0x4003610	              0x5b	                                 pop rbx	      1708	security.c	FUNCTION_217
0x4003611	            0x31c0	                            xor eax, eax	      1706	security.c	FUNCTION_217
0x4003613	              0x5d	                                 pop rbp	      1708	security.c	FUNCTION_217
0x4003614	            0x415c	                                 pop r12	      1708	security.c	FUNCTION_217
0x4003616	            0x415d	                                 pop r13	      1708	security.c	FUNCTION_217
0x4003618	              0xc3	                                     ret	      1708	security.c	FUNCTION_217
security_cred_alloc_blank	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4002420	            0x4154	                                push r12	       995	security.c	FUNCTION_102
0x4002422	              0x55	                                push rbp	       995	security.c	FUNCTION_102
0x4002423	          0x4989fc	                            mov r12, rdi	       995	security.c	FUNCTION_102
0x4002426	              0x53	                                push rbx	       995	security.c	FUNCTION_102
0x4002427	    0x488b1d000000	            mov rbx, qword [0x0400242e] 	       996	security.c	FUNCTION_102	CALL_1
0x400242e	            0x89f5	                            mov ebp, esi	       996	security.c	FUNCTION_102	CALL_1
0x4002430	          0x4885db	                           test rbx, rbx	       996	security.c	FUNCTION_102	CALL_1
0x4002433	            0x750a	                           jne 0x400243f	       996	security.c	FUNCTION_102	CALL_1
0x4002435	            0xeb1f	                           jmp 0x4002456	       996	security.c	FUNCTION_102	CALL_1
0x4002437	          0x488b1b	                    mov rbx, qword [rbx]	       996	security.c	FUNCTION_102	CALL_1
0x400243a	          0x4885db	                           test rbx, rbx	       996	security.c	FUNCTION_102	CALL_1
0x400243d	            0x7417	                            je 0x4002456	       996	security.c	FUNCTION_102	CALL_1
0x400243f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       996	security.c	FUNCTION_102	CALL_1
0x4002443	            0x89ee	                            mov esi, ebp	       996	security.c	FUNCTION_102	CALL_1
0x4002445	          0x4c89e7	                            mov rdi, r12	       996	security.c	FUNCTION_102	CALL_1
0x4002448	      0xe800000000	                          call 0x400244d	       996	security.c	FUNCTION_102	CALL_1
0x400244d	            0x85c0	                           test eax, eax	       996	security.c	FUNCTION_102	CALL_1
0x400244f	            0x74e6	                            je 0x4002437	       996	security.c	FUNCTION_102	CALL_1
0x4002451	              0x5b	                                 pop rbx	       997	security.c	FUNCTION_102
0x4002452	              0x5d	                                 pop rbp	       997	security.c	FUNCTION_102
0x4002453	            0x415c	                                 pop r12	       997	security.c	FUNCTION_102
0x4002455	              0xc3	                                     ret	       997	security.c	FUNCTION_102
0x4002456	              0x5b	                                 pop rbx	       997	security.c	FUNCTION_102
0x4002457	            0x31c0	                            xor eax, eax	       995	security.c	FUNCTION_102
0x4002459	              0x5d	                                 pop rbp	       997	security.c	FUNCTION_102
0x400245a	            0x415c	                                 pop r12	       997	security.c	FUNCTION_102
0x400245c	              0xc3	                                     ret	       997	security.c	FUNCTION_102
security_inode_getxattr	IF,1:SWITCH,0:functions,0:CALL,4:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x4001c60	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       761	security.c	FUNCTION_75	IF_1	CALL_3
0x4001c64	        0xf6400d02	                test byte [rax + 0xd], 2	       761	security.c	FUNCTION_75	IF_1	CALL_3
0x4001c68	            0x753f	                           jne 0x4001ca9	       761	security.c	FUNCTION_75	IF_1	CALL_3
0x4001c6a	            0x4154	                                push r12	       760	security.c	FUNCTION_75
0x4001c6c	              0x55	                                push rbp	       760	security.c	FUNCTION_75
0x4001c6d	          0x4989f4	                            mov r12, rsi	       760	security.c	FUNCTION_75
0x4001c70	              0x53	                                push rbx	       760	security.c	FUNCTION_75
0x4001c71	    0x488b1d000000	            mov rbx, qword [0x04001c78] 	       763	security.c	FUNCTION_75	CALL_4
0x4001c78	          0x4889fd	                            mov rbp, rdi	       763	security.c	FUNCTION_75	CALL_4
0x4001c7b	          0x4885db	                           test rbx, rbx	       763	security.c	FUNCTION_75	CALL_4
0x4001c7e	            0x750a	                           jne 0x4001c8a	       763	security.c	FUNCTION_75	CALL_4
0x4001c80	            0xeb20	                           jmp 0x4001ca2	       763	security.c	FUNCTION_75	CALL_4
0x4001c82	          0x488b1b	                    mov rbx, qword [rbx]	       763	security.c	FUNCTION_75	CALL_4
0x4001c85	          0x4885db	                           test rbx, rbx	       763	security.c	FUNCTION_75	CALL_4
0x4001c88	            0x7418	                            je 0x4001ca2	       763	security.c	FUNCTION_75	CALL_4
0x4001c8a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       763	security.c	FUNCTION_75	CALL_4
0x4001c8e	          0x4c89e6	                            mov rsi, r12	       763	security.c	FUNCTION_75	CALL_4
0x4001c91	          0x4889ef	                            mov rdi, rbp	       763	security.c	FUNCTION_75	CALL_4
0x4001c94	      0xe800000000	                          call 0x4001c99	       763	security.c	FUNCTION_75	CALL_4
0x4001c99	            0x85c0	                           test eax, eax	       763	security.c	FUNCTION_75	CALL_4
0x4001c9b	            0x74e5	                            je 0x4001c82	       763	security.c	FUNCTION_75	CALL_4
0x4001c9d	              0x5b	                                 pop rbx	       764	security.c	FUNCTION_75
0x4001c9e	              0x5d	                                 pop rbp	       764	security.c	FUNCTION_75
0x4001c9f	            0x415c	                                 pop r12	       764	security.c	FUNCTION_75
0x4001ca1	              0xc3	                                     ret	       764	security.c	FUNCTION_75
0x4001ca2	              0x5b	                                 pop rbx	       764	security.c	FUNCTION_75
0x4001ca3	            0x31c0	                            xor eax, eax	       762	security.c	FUNCTION_75	IF_1
0x4001ca5	              0x5d	                                 pop rbp	       764	security.c	FUNCTION_75
0x4001ca6	            0x415c	                                 pop r12	       764	security.c	FUNCTION_75
0x4001ca8	              0xc3	                                     ret	       764	security.c	FUNCTION_75
0x4001ca9	            0x31c0	                            xor eax, eax	       762	security.c	FUNCTION_75	IF_1
0x4001cab	              0xc3	                                     ret	       764	security.c	FUNCTION_75
security_secmark_relabel_packet	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x40008f0	              0x55	                                push rbp	      1492	security.c	FUNCTION_187
0x40008f1	              0x53	                                push rbx	      1492	security.c	FUNCTION_187
0x40008f2	            0x89fd	                            mov ebp, edi	      1492	security.c	FUNCTION_187
0x40008f4	    0x488b1d000000	            mov rbx, qword [0x040008fb] 	      1493	security.c	FUNCTION_187	CALL_1
0x40008fb	          0x4885db	                           test rbx, rbx	      1493	security.c	FUNCTION_187	CALL_1
0x40008fe	            0x750a	                           jne 0x400090a	      1493	security.c	FUNCTION_187	CALL_1
0x4000900	            0xeb1a	                           jmp 0x400091c	      1493	security.c	FUNCTION_187	CALL_1
0x4000902	          0x488b1b	                    mov rbx, qword [rbx]	      1493	security.c	FUNCTION_187	CALL_1
0x4000905	          0x4885db	                           test rbx, rbx	      1493	security.c	FUNCTION_187	CALL_1
0x4000908	            0x7412	                            je 0x400091c	      1493	security.c	FUNCTION_187	CALL_1
0x400090a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1493	security.c	FUNCTION_187	CALL_1
0x400090e	            0x89ef	                            mov edi, ebp	      1493	security.c	FUNCTION_187	CALL_1
0x4000910	      0xe800000000	                          call 0x4000915	      1493	security.c	FUNCTION_187	CALL_1
0x4000915	            0x85c0	                           test eax, eax	      1493	security.c	FUNCTION_187	CALL_1
0x4000917	            0x74e9	                            je 0x4000902	      1493	security.c	FUNCTION_187	CALL_1
0x4000919	              0x5b	                                 pop rbx	      1494	security.c	FUNCTION_187
0x400091a	              0x5d	                                 pop rbp	      1494	security.c	FUNCTION_187
0x400091b	              0xc3	                                     ret	      1494	security.c	FUNCTION_187
0x400091c	            0x31c0	                            xor eax, eax	      1492	security.c	FUNCTION_187
0x400091e	              0x5b	                                 pop rbx	      1494	security.c	FUNCTION_187
0x400091f	              0x5d	                                 pop rbp	      1494	security.c	FUNCTION_187
0x4000920	              0xc3	                                     ret	      1494	security.c	FUNCTION_187
security_sock_graft	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	19
0x4000820	            0x4154	                                push r12	      1466	security.c	FUNCTION_183
0x4000822	              0x55	                                push rbp	      1466	security.c	FUNCTION_183
0x4000823	              0x53	                                push rbx	      1466	security.c	FUNCTION_183
0x4000824	    0x488b1d000000	            mov rbx, qword [0x0400082b] 	      1467	security.c	FUNCTION_183	CALL_1
0x400082b	          0x4885db	                           test rbx, rbx	      1467	security.c	FUNCTION_183	CALL_1
0x400082e	            0x741d	                            je 0x400084d	      1467	security.c	FUNCTION_183	CALL_1
0x4000830	          0x4989fc	                            mov r12, rdi	      1467	security.c	FUNCTION_183	CALL_1
0x4000833	          0x4889f5	                            mov rbp, rsi	      1467	security.c	FUNCTION_183	CALL_1
0x4000836	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1467	security.c	FUNCTION_183	CALL_1
0x400083a	          0x4889ee	                            mov rsi, rbp	      1467	security.c	FUNCTION_183	CALL_1
0x400083d	          0x4c89e7	                            mov rdi, r12	      1467	security.c	FUNCTION_183	CALL_1
0x4000840	      0xe800000000	                          call 0x4000845	      1467	security.c	FUNCTION_183	CALL_1
0x4000845	          0x488b1b	                    mov rbx, qword [rbx]	      1467	security.c	FUNCTION_183	CALL_1
0x4000848	          0x4885db	                           test rbx, rbx	      1467	security.c	FUNCTION_183	CALL_1
0x400084b	            0x75e9	                           jne 0x4000836	      1467	security.c	FUNCTION_183	CALL_1
0x400084d	              0x5b	                                 pop rbx	      1468	security.c	FUNCTION_183
0x400084e	              0x5d	                                 pop rbp	      1468	security.c	FUNCTION_183
0x400084f	            0x415c	                                 pop r12	      1468	security.c	FUNCTION_183
0x4000851	              0xc3	                                     ret	      1468	security.c	FUNCTION_183
security_file_free	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	15
0x4001fe0	              0x55	                                push rbp	       883	security.c	FUNCTION_88
0x4001fe1	              0x53	                                push rbx	       883	security.c	FUNCTION_88
0x4001fe2	    0x488b1d000000	            mov rbx, qword [0x04001fe9] 	       884	security.c	FUNCTION_88	CALL_1
0x4001fe9	          0x4885db	                           test rbx, rbx	       884	security.c	FUNCTION_88	CALL_1
0x4001fec	            0x7417	                            je 0x4002005	       884	security.c	FUNCTION_88	CALL_1
0x4001fee	          0x4889fd	                            mov rbp, rdi	       884	security.c	FUNCTION_88	CALL_1
0x4001ff1	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       884	security.c	FUNCTION_88	CALL_1
0x4001ff5	          0x4889ef	                            mov rdi, rbp	       884	security.c	FUNCTION_88	CALL_1
0x4001ff8	      0xe800000000	                          call 0x4001ffd	       884	security.c	FUNCTION_88	CALL_1
0x4001ffd	          0x488b1b	                    mov rbx, qword [rbx]	       884	security.c	FUNCTION_88	CALL_1
0x4002000	          0x4885db	                           test rbx, rbx	       884	security.c	FUNCTION_88	CALL_1
0x4002003	            0x75ec	                           jne 0x4001ff1	       884	security.c	FUNCTION_88	CALL_1
0x4002005	              0x5b	                                 pop rbx	       885	security.c	FUNCTION_88
0x4002006	              0x5d	                                 pop rbp	       885	security.c	FUNCTION_88
0x4002007	              0xc3	                                     ret	       885	security.c	FUNCTION_88
security_capset	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	42
0x4001160	            0x4157	                                push r15	       276	security.c	FUNCTION_18
0x4001162	            0x4156	                                push r14	       276	security.c	FUNCTION_18
0x4001164	            0x4155	                                push r13	       276	security.c	FUNCTION_18
0x4001166	            0x4154	                                push r12	       276	security.c	FUNCTION_18
0x4001168	              0x55	                                push rbp	       276	security.c	FUNCTION_18
0x4001169	              0x53	                                push rbx	       276	security.c	FUNCTION_18
0x400116a	    0x488b1d000000	            mov rbx, qword [0x04001171] 	       277	security.c	FUNCTION_18	CALL_1
0x4001171	          0x4885db	                           test rbx, rbx	       277	security.c	FUNCTION_18	CALL_1
0x4001174	            0x7440	                            je 0x40011b6	       277	security.c	FUNCTION_18	CALL_1
0x4001176	          0x4989ff	                            mov r15, rdi	       277	security.c	FUNCTION_18	CALL_1
0x4001179	          0x4989f6	                            mov r14, rsi	       277	security.c	FUNCTION_18	CALL_1
0x400117c	          0x4989d5	                            mov r13, rdx	       277	security.c	FUNCTION_18	CALL_1
0x400117f	          0x4989cc	                            mov r12, rcx	       277	security.c	FUNCTION_18	CALL_1
0x4001182	          0x4c89c5	                             mov rbp, r8	       277	security.c	FUNCTION_18	CALL_1
0x4001185	            0xeb08	                           jmp 0x400118f	       277	security.c	FUNCTION_18	CALL_1
0x4001187	          0x488b1b	                    mov rbx, qword [rbx]	       277	security.c	FUNCTION_18	CALL_1
0x400118a	          0x4885db	                           test rbx, rbx	       277	security.c	FUNCTION_18	CALL_1
0x400118d	            0x7427	                            je 0x40011b6	       277	security.c	FUNCTION_18	CALL_1
0x400118f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       277	security.c	FUNCTION_18	CALL_1
0x4001193	          0x4989e8	                             mov r8, rbp	       277	security.c	FUNCTION_18	CALL_1
0x4001196	          0x4c89e1	                            mov rcx, r12	       277	security.c	FUNCTION_18	CALL_1
0x4001199	          0x4c89ea	                            mov rdx, r13	       277	security.c	FUNCTION_18	CALL_1
0x400119c	          0x4c89f6	                            mov rsi, r14	       277	security.c	FUNCTION_18	CALL_1
0x400119f	          0x4c89ff	                            mov rdi, r15	       277	security.c	FUNCTION_18	CALL_1
0x40011a2	      0xe800000000	                          call 0x40011a7	       277	security.c	FUNCTION_18	CALL_1
0x40011a7	            0x85c0	                           test eax, eax	       277	security.c	FUNCTION_18	CALL_1
0x40011a9	            0x74dc	                            je 0x4001187	       277	security.c	FUNCTION_18	CALL_1
0x40011ab	              0x5b	                                 pop rbx	       279	security.c	FUNCTION_18
0x40011ac	              0x5d	                                 pop rbp	       279	security.c	FUNCTION_18
0x40011ad	            0x415c	                                 pop r12	       279	security.c	FUNCTION_18
0x40011af	            0x415d	                                 pop r13	       279	security.c	FUNCTION_18
0x40011b1	            0x415e	                                 pop r14	       279	security.c	FUNCTION_18
0x40011b3	            0x415f	                                 pop r15	       279	security.c	FUNCTION_18
0x40011b5	              0xc3	                                     ret	       279	security.c	FUNCTION_18
0x40011b6	              0x5b	                                 pop rbx	       279	security.c	FUNCTION_18
0x40011b7	            0x31c0	                            xor eax, eax	       276	security.c	FUNCTION_18
0x40011b9	              0x5d	                                 pop rbp	       279	security.c	FUNCTION_18
0x40011ba	            0x415c	                                 pop r12	       279	security.c	FUNCTION_18
0x40011bc	            0x415d	                                 pop r13	       279	security.c	FUNCTION_18
0x40011be	            0x415e	                                 pop r14	       279	security.c	FUNCTION_18
0x40011c0	            0x415f	                                 pop r15	       279	security.c	FUNCTION_18
0x40011c2	              0xc3	                                     ret	       279	security.c	FUNCTION_18
security_socket_bind	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x4003110	            0x4155	                                push r13	      1362	security.c	FUNCTION_164
0x4003112	            0x4154	                                push r12	      1362	security.c	FUNCTION_164
0x4003114	              0x55	                                push rbp	      1362	security.c	FUNCTION_164
0x4003115	              0x53	                                push rbx	      1362	security.c	FUNCTION_164
0x4003116	    0x488b1d000000	            mov rbx, qword [0x0400311d] 	      1363	security.c	FUNCTION_164	CALL_1
0x400311d	          0x4885db	                           test rbx, rbx	      1363	security.c	FUNCTION_164	CALL_1
0x4003120	            0x742e	                            je 0x4003150	      1363	security.c	FUNCTION_164	CALL_1
0x4003122	          0x4989fd	                            mov r13, rdi	      1363	security.c	FUNCTION_164	CALL_1
0x4003125	          0x4989f4	                            mov r12, rsi	      1363	security.c	FUNCTION_164	CALL_1
0x4003128	            0x89d5	                            mov ebp, edx	      1363	security.c	FUNCTION_164	CALL_1
0x400312a	            0xeb08	                           jmp 0x4003134	      1363	security.c	FUNCTION_164	CALL_1
0x400312c	          0x488b1b	                    mov rbx, qword [rbx]	      1363	security.c	FUNCTION_164	CALL_1
0x400312f	          0x4885db	                           test rbx, rbx	      1363	security.c	FUNCTION_164	CALL_1
0x4003132	            0x741c	                            je 0x4003150	      1363	security.c	FUNCTION_164	CALL_1
0x4003134	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1363	security.c	FUNCTION_164	CALL_1
0x4003138	            0x89ea	                            mov edx, ebp	      1363	security.c	FUNCTION_164	CALL_1
0x400313a	          0x4c89e6	                            mov rsi, r12	      1363	security.c	FUNCTION_164	CALL_1
0x400313d	          0x4c89ef	                            mov rdi, r13	      1363	security.c	FUNCTION_164	CALL_1
0x4003140	      0xe800000000	                          call 0x4003145	      1363	security.c	FUNCTION_164	CALL_1
0x4003145	            0x85c0	                           test eax, eax	      1363	security.c	FUNCTION_164	CALL_1
0x4003147	            0x74e3	                            je 0x400312c	      1363	security.c	FUNCTION_164	CALL_1
0x4003149	              0x5b	                                 pop rbx	      1364	security.c	FUNCTION_164
0x400314a	              0x5d	                                 pop rbp	      1364	security.c	FUNCTION_164
0x400314b	            0x415c	                                 pop r12	      1364	security.c	FUNCTION_164
0x400314d	            0x415d	                                 pop r13	      1364	security.c	FUNCTION_164
0x400314f	              0xc3	                                     ret	      1364	security.c	FUNCTION_164
0x4003150	              0x5b	                                 pop rbx	      1364	security.c	FUNCTION_164
0x4003151	            0x31c0	                            xor eax, eax	      1362	security.c	FUNCTION_164
0x4003153	              0x5d	                                 pop rbp	      1364	security.c	FUNCTION_164
0x4003154	            0x415c	                                 pop r12	      1364	security.c	FUNCTION_164
0x4003156	            0x415d	                                 pop r13	      1364	security.c	FUNCTION_164
0x4003158	              0xc3	                                     ret	      1364	security.c	FUNCTION_164
security_old_inode_init_security	IF,1:SWITCH,0:functions,0:CALL,3:FOR,0:WHILE,0:DO,0:ELSE,0	41
0x4000bb0	        0xf6470d02	                test byte [rdi + 0xd], 2	       509	security.c	FUNCTION_48	IF_1	CALL_2
0x4000bb4	      0xb8a1ffffff	                     mov eax, 0xffffffa1	       510	security.c	FUNCTION_48	IF_1
0x4000bb9	            0x7565	                           jne 0x4000c20	       509	security.c	FUNCTION_48	IF_1	CALL_2
0x4000bbb	            0x4157	                                push r15	       508	security.c	FUNCTION_48
0x4000bbd	            0x4156	                                push r14	       508	security.c	FUNCTION_48
0x4000bbf	          0x4d89cf	                             mov r15, r9	       508	security.c	FUNCTION_48
0x4000bc2	            0x4155	                                push r13	       508	security.c	FUNCTION_48
0x4000bc4	            0x4154	                                push r12	       508	security.c	FUNCTION_48
0x4000bc6	          0x4d89c6	                             mov r14, r8	       508	security.c	FUNCTION_48
0x4000bc9	              0x55	                                push rbp	       508	security.c	FUNCTION_48
0x4000bca	              0x53	                                push rbx	       508	security.c	FUNCTION_48
0x4000bcb	          0x4989cd	                            mov r13, rcx	       508	security.c	FUNCTION_48
0x4000bce	          0x4989d4	                            mov r12, rdx	       508	security.c	FUNCTION_48
0x4000bd1	          0x4889f5	                            mov rbp, rsi	       508	security.c	FUNCTION_48
0x4000bd4	        0x4883ec08	                              sub rsp, 8	       508	security.c	FUNCTION_48
0x4000bd8	    0x488b1d000000	            mov rbx, qword [0x04000bdf] 	       511	security.c	FUNCTION_48	CALL_3
0x4000bdf	        0x48893c24	                    mov qword [rsp], rdi	       511	security.c	FUNCTION_48	CALL_3
0x4000be3	          0x4885db	                           test rbx, rbx	       511	security.c	FUNCTION_48	CALL_3
0x4000be6	            0x750a	                           jne 0x4000bf2	       511	security.c	FUNCTION_48	CALL_3
0x4000be8	            0xeb28	                           jmp 0x4000c12	       511	security.c	FUNCTION_48	CALL_3
0x4000bea	          0x488b1b	                    mov rbx, qword [rbx]	       511	security.c	FUNCTION_48	CALL_3
0x4000bed	          0x4885db	                           test rbx, rbx	       511	security.c	FUNCTION_48	CALL_3
0x4000bf0	            0x7420	                            je 0x4000c12	       511	security.c	FUNCTION_48	CALL_3
0x4000bf2	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       511	security.c	FUNCTION_48	CALL_3
0x4000bf6	          0x4d89f9	                             mov r9, r15	       511	security.c	FUNCTION_48	CALL_3
0x4000bf9	          0x4d89f0	                             mov r8, r14	       511	security.c	FUNCTION_48	CALL_3
0x4000bfc	          0x4c89e9	                            mov rcx, r13	       511	security.c	FUNCTION_48	CALL_3
0x4000bff	          0x4c89e2	                            mov rdx, r12	       511	security.c	FUNCTION_48	CALL_3
0x4000c02	          0x4889ee	                            mov rsi, rbp	       511	security.c	FUNCTION_48	CALL_3
0x4000c05	        0x488b3c24	                    mov rdi, qword [rsp]	       511	security.c	FUNCTION_48	CALL_3
0x4000c09	      0xe800000000	                          call 0x4000c0e	       511	security.c	FUNCTION_48	CALL_3
0x4000c0e	            0x85c0	                           test eax, eax	       511	security.c	FUNCTION_48	CALL_3
0x4000c10	            0x74d8	                            je 0x4000bea	       511	security.c	FUNCTION_48	CALL_3
0x4000c12	        0x4883c408	                              add rsp, 8	       513	security.c	FUNCTION_48
0x4000c16	              0x5b	                                 pop rbx	       513	security.c	FUNCTION_48
0x4000c17	              0x5d	                                 pop rbp	       513	security.c	FUNCTION_48
0x4000c18	            0x415c	                                 pop r12	       513	security.c	FUNCTION_48
0x4000c1a	            0x415d	                                 pop r13	       513	security.c	FUNCTION_48
0x4000c1c	            0x415e	                                 pop r14	       513	security.c	FUNCTION_48
0x4000c1e	            0x415f	                                 pop r15	       513	security.c	FUNCTION_48
0x4000c20	            0xf3c3	                                     ret	       513	security.c	FUNCTION_48
security_file_receive	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x40022e0	              0x55	                                push rbp	       969	security.c	FUNCTION_98
0x40022e1	              0x53	                                push rbx	       969	security.c	FUNCTION_98
0x40022e2	          0x4889fd	                            mov rbp, rdi	       969	security.c	FUNCTION_98
0x40022e5	    0x488b1d000000	            mov rbx, qword [0x040022ec] 	       970	security.c	FUNCTION_98	CALL_1
0x40022ec	          0x4885db	                           test rbx, rbx	       970	security.c	FUNCTION_98	CALL_1
0x40022ef	            0x750a	                           jne 0x40022fb	       970	security.c	FUNCTION_98	CALL_1
0x40022f1	            0xeb1b	                           jmp 0x400230e	       970	security.c	FUNCTION_98	CALL_1
0x40022f3	          0x488b1b	                    mov rbx, qword [rbx]	       970	security.c	FUNCTION_98	CALL_1
0x40022f6	          0x4885db	                           test rbx, rbx	       970	security.c	FUNCTION_98	CALL_1
0x40022f9	            0x7413	                            je 0x400230e	       970	security.c	FUNCTION_98	CALL_1
0x40022fb	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       970	security.c	FUNCTION_98	CALL_1
0x40022ff	          0x4889ef	                            mov rdi, rbp	       970	security.c	FUNCTION_98	CALL_1
0x4002302	      0xe800000000	                          call 0x4002307	       970	security.c	FUNCTION_98	CALL_1
0x4002307	            0x85c0	                           test eax, eax	       970	security.c	FUNCTION_98	CALL_1
0x4002309	            0x74e8	                            je 0x40022f3	       970	security.c	FUNCTION_98	CALL_1
0x400230b	              0x5b	                                 pop rbx	       971	security.c	FUNCTION_98
0x400230c	              0x5d	                                 pop rbp	       971	security.c	FUNCTION_98
0x400230d	              0xc3	                                     ret	       971	security.c	FUNCTION_98
0x400230e	            0x31c0	                            xor eax, eax	       969	security.c	FUNCTION_98
0x4002310	              0x5b	                                 pop rbx	       971	security.c	FUNCTION_98
0x4002311	              0x5d	                                 pop rbp	       971	security.c	FUNCTION_98
0x4002312	              0xc3	                                     ret	       971	security.c	FUNCTION_98
security_socket_sendmsg	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x4003230	            0x4155	                                push r13	      1382	security.c	FUNCTION_168
0x4003232	            0x4154	                                push r12	      1382	security.c	FUNCTION_168
0x4003234	              0x55	                                push rbp	      1382	security.c	FUNCTION_168
0x4003235	              0x53	                                push rbx	      1382	security.c	FUNCTION_168
0x4003236	    0x488b1d000000	            mov rbx, qword [0x0400323d] 	      1383	security.c	FUNCTION_168	CALL_1
0x400323d	          0x4885db	                           test rbx, rbx	      1383	security.c	FUNCTION_168	CALL_1
0x4003240	            0x742e	                            je 0x4003270	      1383	security.c	FUNCTION_168	CALL_1
0x4003242	          0x4989fd	                            mov r13, rdi	      1383	security.c	FUNCTION_168	CALL_1
0x4003245	          0x4989f4	                            mov r12, rsi	      1383	security.c	FUNCTION_168	CALL_1
0x4003248	            0x89d5	                            mov ebp, edx	      1383	security.c	FUNCTION_168	CALL_1
0x400324a	            0xeb08	                           jmp 0x4003254	      1383	security.c	FUNCTION_168	CALL_1
0x400324c	          0x488b1b	                    mov rbx, qword [rbx]	      1383	security.c	FUNCTION_168	CALL_1
0x400324f	          0x4885db	                           test rbx, rbx	      1383	security.c	FUNCTION_168	CALL_1
0x4003252	            0x741c	                            je 0x4003270	      1383	security.c	FUNCTION_168	CALL_1
0x4003254	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1383	security.c	FUNCTION_168	CALL_1
0x4003258	            0x89ea	                            mov edx, ebp	      1383	security.c	FUNCTION_168	CALL_1
0x400325a	          0x4c89e6	                            mov rsi, r12	      1383	security.c	FUNCTION_168	CALL_1
0x400325d	          0x4c89ef	                            mov rdi, r13	      1383	security.c	FUNCTION_168	CALL_1
0x4003260	      0xe800000000	                          call 0x4003265	      1383	security.c	FUNCTION_168	CALL_1
0x4003265	            0x85c0	                           test eax, eax	      1383	security.c	FUNCTION_168	CALL_1
0x4003267	            0x74e3	                            je 0x400324c	      1383	security.c	FUNCTION_168	CALL_1
0x4003269	              0x5b	                                 pop rbx	      1384	security.c	FUNCTION_168
0x400326a	              0x5d	                                 pop rbp	      1384	security.c	FUNCTION_168
0x400326b	            0x415c	                                 pop r12	      1384	security.c	FUNCTION_168
0x400326d	            0x415d	                                 pop r13	      1384	security.c	FUNCTION_168
0x400326f	              0xc3	                                     ret	      1384	security.c	FUNCTION_168
0x4003270	              0x5b	                                 pop rbx	      1384	security.c	FUNCTION_168
0x4003271	            0x31c0	                            xor eax, eax	      1382	security.c	FUNCTION_168
0x4003273	              0x5d	                                 pop rbp	      1384	security.c	FUNCTION_168
0x4003274	            0x415c	                                 pop r12	      1384	security.c	FUNCTION_168
0x4003276	            0x415d	                                 pop r13	      1384	security.c	FUNCTION_168
0x4003278	              0xc3	                                     ret	      1384	security.c	FUNCTION_168
security_inode_getsecctx	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x40005f0	            0x4155	                                push r13	      1330	security.c	FUNCTION_159
0x40005f2	            0x4154	                                push r12	      1330	security.c	FUNCTION_159
0x40005f4	      0xb8a1ffffff	                     mov eax, 0xffffffa1	      1330	security.c	FUNCTION_159
0x40005f9	              0x55	                                push rbp	      1330	security.c	FUNCTION_159
0x40005fa	              0x53	                                push rbx	      1330	security.c	FUNCTION_159
0x40005fb	    0x488b1d000000	            mov rbx, qword [0x04000602] 	      1331	security.c	FUNCTION_159	CALL_1
0x4000602	          0x4885db	                           test rbx, rbx	      1331	security.c	FUNCTION_159	CALL_1
0x4000605	            0x7429	                            je 0x4000630	      1331	security.c	FUNCTION_159	CALL_1
0x4000607	          0x4989fd	                            mov r13, rdi	      1331	security.c	FUNCTION_159	CALL_1
0x400060a	          0x4989f4	                            mov r12, rsi	      1331	security.c	FUNCTION_159	CALL_1
0x400060d	          0x4889d5	                            mov rbp, rdx	      1331	security.c	FUNCTION_159	CALL_1
0x4000610	            0xeb08	                           jmp 0x400061a	      1331	security.c	FUNCTION_159	CALL_1
0x4000612	          0x488b1b	                    mov rbx, qword [rbx]	      1331	security.c	FUNCTION_159	CALL_1
0x4000615	          0x4885db	                           test rbx, rbx	      1331	security.c	FUNCTION_159	CALL_1
0x4000618	            0x7416	                            je 0x4000630	      1331	security.c	FUNCTION_159	CALL_1
0x400061a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1331	security.c	FUNCTION_159	CALL_1
0x400061e	          0x4889ea	                            mov rdx, rbp	      1331	security.c	FUNCTION_159	CALL_1
0x4000621	          0x4c89e6	                            mov rsi, r12	      1331	security.c	FUNCTION_159	CALL_1
0x4000624	          0x4c89ef	                            mov rdi, r13	      1331	security.c	FUNCTION_159	CALL_1
0x4000627	      0xe800000000	                          call 0x400062c	      1331	security.c	FUNCTION_159	CALL_1
0x400062c	            0x85c0	                           test eax, eax	      1331	security.c	FUNCTION_159	CALL_1
0x400062e	            0x74e2	                            je 0x4000612	      1331	security.c	FUNCTION_159	CALL_1
0x4000630	              0x5b	                                 pop rbx	      1332	security.c	FUNCTION_159
0x4000631	              0x5d	                                 pop rbp	      1332	security.c	FUNCTION_159
0x4000632	            0x415c	                                 pop r12	      1332	security.c	FUNCTION_159
0x4000634	            0x415d	                                 pop r13	      1332	security.c	FUNCTION_159
0x4000636	              0xc3	                                     ret	      1332	security.c	FUNCTION_159
security_capable_noaudit	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	33
0x4001220	            0x4155	                                push r13	       289	security.c	FUNCTION_20
0x4001222	            0x4154	                                push r12	       289	security.c	FUNCTION_20
0x4001224	              0x55	                                push rbp	       289	security.c	FUNCTION_20
0x4001225	              0x53	                                push rbx	       289	security.c	FUNCTION_20
0x4001226	    0x488b1d000000	            mov rbx, qword [0x0400122d] 	       290	security.c	FUNCTION_20	CALL_1
0x400122d	          0x4885db	                           test rbx, rbx	       290	security.c	FUNCTION_20	CALL_1
0x4001230	            0x7430	                            je 0x4001262	       290	security.c	FUNCTION_20	CALL_1
0x4001232	          0x4989fd	                            mov r13, rdi	       290	security.c	FUNCTION_20	CALL_1
0x4001235	          0x4989f4	                            mov r12, rsi	       290	security.c	FUNCTION_20	CALL_1
0x4001238	            0x89d5	                            mov ebp, edx	       290	security.c	FUNCTION_20	CALL_1
0x400123a	            0xeb08	                           jmp 0x4001244	       290	security.c	FUNCTION_20	CALL_1
0x400123c	          0x488b1b	                    mov rbx, qword [rbx]	       290	security.c	FUNCTION_20	CALL_1
0x400123f	          0x4885db	                           test rbx, rbx	       290	security.c	FUNCTION_20	CALL_1
0x4001242	            0x741e	                            je 0x4001262	       290	security.c	FUNCTION_20	CALL_1
0x4001244	            0x31c9	                            xor ecx, ecx	       290	security.c	FUNCTION_20	CALL_1
0x4001246	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       290	security.c	FUNCTION_20	CALL_1
0x400124a	            0x89ea	                            mov edx, ebp	       290	security.c	FUNCTION_20	CALL_1
0x400124c	          0x4c89e6	                            mov rsi, r12	       290	security.c	FUNCTION_20	CALL_1
0x400124f	          0x4c89ef	                            mov rdi, r13	       290	security.c	FUNCTION_20	CALL_1
0x4001252	      0xe800000000	                          call 0x4001257	       290	security.c	FUNCTION_20	CALL_1
0x4001257	            0x85c0	                           test eax, eax	       290	security.c	FUNCTION_20	CALL_1
0x4001259	            0x74e1	                            je 0x400123c	       290	security.c	FUNCTION_20	CALL_1
0x400125b	              0x5b	                                 pop rbx	       291	security.c	FUNCTION_20
0x400125c	              0x5d	                                 pop rbp	       291	security.c	FUNCTION_20
0x400125d	            0x415c	                                 pop r12	       291	security.c	FUNCTION_20
0x400125f	            0x415d	                                 pop r13	       291	security.c	FUNCTION_20
0x4001261	              0xc3	                                     ret	       291	security.c	FUNCTION_20
0x4001262	              0x5b	                                 pop rbx	       291	security.c	FUNCTION_20
0x4001263	            0x31c0	                            xor eax, eax	       289	security.c	FUNCTION_20
0x4001265	              0x5d	                                 pop rbp	       291	security.c	FUNCTION_20
0x4001266	            0x415c	                                 pop r12	       291	security.c	FUNCTION_20
0x4001268	            0x415d	                                 pop r13	       291	security.c	FUNCTION_20
0x400126a	              0xc3	                                     ret	       291	security.c	FUNCTION_20
security_inode_create	IF,1:SWITCH,0:functions,0:CALL,3:FOR,0:WHILE,0:DO,0:ELSE,0	36
0x4000c30	        0xf6470d02	                test byte [rdi + 0xd], 2	       614	security.c	FUNCTION_60	IF_1	CALL_2
0x4000c34	            0x754a	                           jne 0x4000c80	       614	security.c	FUNCTION_60	IF_1	CALL_2
0x4000c36	            0x4155	                                push r13	       613	security.c	FUNCTION_60
0x4000c38	            0x4154	                                push r12	       613	security.c	FUNCTION_60
0x4000c3a	              0x55	                                push rbp	       613	security.c	FUNCTION_60
0x4000c3b	              0x53	                                push rbx	       613	security.c	FUNCTION_60
0x4000c3c	    0x488b1d000000	            mov rbx, qword [0x04000c43] 	       616	security.c	FUNCTION_60	CALL_3
0x4000c43	          0x4885db	                           test rbx, rbx	       616	security.c	FUNCTION_60	CALL_3
0x4000c46	            0x742f	                            je 0x4000c77	       616	security.c	FUNCTION_60	CALL_3
0x4000c48	          0x4989f5	                            mov r13, rsi	       616	security.c	FUNCTION_60	CALL_3
0x4000c4b	          0x4989fc	                            mov r12, rdi	       616	security.c	FUNCTION_60	CALL_3
0x4000c4e	           0xfb7ea	                           movzx ebp, dx	       616	security.c	FUNCTION_60	CALL_3
0x4000c51	            0xeb08	                           jmp 0x4000c5b	       616	security.c	FUNCTION_60	CALL_3
0x4000c53	          0x488b1b	                    mov rbx, qword [rbx]	       616	security.c	FUNCTION_60	CALL_3
0x4000c56	          0x4885db	                           test rbx, rbx	       616	security.c	FUNCTION_60	CALL_3
0x4000c59	            0x741c	                            je 0x4000c77	       616	security.c	FUNCTION_60	CALL_3
0x4000c5b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       616	security.c	FUNCTION_60	CALL_3
0x4000c5f	            0x89ea	                            mov edx, ebp	       616	security.c	FUNCTION_60	CALL_3
0x4000c61	          0x4c89ee	                            mov rsi, r13	       616	security.c	FUNCTION_60	CALL_3
0x4000c64	          0x4c89e7	                            mov rdi, r12	       616	security.c	FUNCTION_60	CALL_3
0x4000c67	      0xe800000000	                          call 0x4000c6c	       616	security.c	FUNCTION_60	CALL_3
0x4000c6c	            0x85c0	                           test eax, eax	       616	security.c	FUNCTION_60	CALL_3
0x4000c6e	            0x74e3	                            je 0x4000c53	       616	security.c	FUNCTION_60	CALL_3
0x4000c70	              0x5b	                                 pop rbx	       617	security.c	FUNCTION_60
0x4000c71	              0x5d	                                 pop rbp	       617	security.c	FUNCTION_60
0x4000c72	            0x415c	                                 pop r12	       617	security.c	FUNCTION_60
0x4000c74	            0x415d	                                 pop r13	       617	security.c	FUNCTION_60
0x4000c76	              0xc3	                                     ret	       617	security.c	FUNCTION_60
0x4000c77	              0x5b	                                 pop rbx	       617	security.c	FUNCTION_60
0x4000c78	            0x31c0	                            xor eax, eax	       615	security.c	FUNCTION_60	IF_1
0x4000c7a	              0x5d	                                 pop rbp	       617	security.c	FUNCTION_60
0x4000c7b	            0x415c	                                 pop r12	       617	security.c	FUNCTION_60
0x4000c7d	            0x415d	                                 pop r13	       617	security.c	FUNCTION_60
0x4000c7f	              0xc3	                                     ret	       617	security.c	FUNCTION_60
0x4000c80	            0x31c0	                            xor eax, eax	       615	security.c	FUNCTION_60	IF_1
0x4000c82	              0xc3	                                     ret	       617	security.c	FUNCTION_60
security_socket_accept	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x40031f0	            0x4154	                                push r12	      1377	security.c	FUNCTION_167
0x40031f2	              0x55	                                push rbp	      1377	security.c	FUNCTION_167
0x40031f3	          0x4989fc	                            mov r12, rdi	      1377	security.c	FUNCTION_167
0x40031f6	              0x53	                                push rbx	      1377	security.c	FUNCTION_167
0x40031f7	    0x488b1d000000	            mov rbx, qword [0x040031fe] 	      1378	security.c	FUNCTION_167	CALL_1
0x40031fe	          0x4889f5	                            mov rbp, rsi	      1378	security.c	FUNCTION_167	CALL_1
0x4003201	          0x4885db	                           test rbx, rbx	      1378	security.c	FUNCTION_167	CALL_1
0x4003204	            0x750a	                           jne 0x4003210	      1378	security.c	FUNCTION_167	CALL_1
0x4003206	            0xeb20	                           jmp 0x4003228	      1378	security.c	FUNCTION_167	CALL_1
0x4003208	          0x488b1b	                    mov rbx, qword [rbx]	      1378	security.c	FUNCTION_167	CALL_1
0x400320b	          0x4885db	                           test rbx, rbx	      1378	security.c	FUNCTION_167	CALL_1
0x400320e	            0x7418	                            je 0x4003228	      1378	security.c	FUNCTION_167	CALL_1
0x4003210	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1378	security.c	FUNCTION_167	CALL_1
0x4003214	          0x4889ee	                            mov rsi, rbp	      1378	security.c	FUNCTION_167	CALL_1
0x4003217	          0x4c89e7	                            mov rdi, r12	      1378	security.c	FUNCTION_167	CALL_1
0x400321a	      0xe800000000	                          call 0x400321f	      1378	security.c	FUNCTION_167	CALL_1
0x400321f	            0x85c0	                           test eax, eax	      1378	security.c	FUNCTION_167	CALL_1
0x4003221	            0x74e5	                            je 0x4003208	      1378	security.c	FUNCTION_167	CALL_1
0x4003223	              0x5b	                                 pop rbx	      1379	security.c	FUNCTION_167
0x4003224	              0x5d	                                 pop rbp	      1379	security.c	FUNCTION_167
0x4003225	            0x415c	                                 pop r12	      1379	security.c	FUNCTION_167
0x4003227	              0xc3	                                     ret	      1379	security.c	FUNCTION_167
0x4003228	              0x5b	                                 pop rbx	      1379	security.c	FUNCTION_167
0x4003229	            0x31c0	                            xor eax, eax	      1377	security.c	FUNCTION_167
0x400322b	              0x5d	                                 pop rbp	      1379	security.c	FUNCTION_167
0x400322c	            0x415c	                                 pop r12	      1379	security.c	FUNCTION_167
0x400322e	              0xc3	                                     ret	      1379	security.c	FUNCTION_167
security_task_kill	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	37
0x4002910	            0x4156	                                push r14	      1131	security.c	FUNCTION_125
0x4002912	            0x4155	                                push r13	      1131	security.c	FUNCTION_125
0x4002914	            0x4154	                                push r12	      1131	security.c	FUNCTION_125
0x4002916	              0x55	                                push rbp	      1131	security.c	FUNCTION_125
0x4002917	              0x53	                                push rbx	      1131	security.c	FUNCTION_125
0x4002918	    0x488b1d000000	            mov rbx, qword [0x0400291f] 	      1132	security.c	FUNCTION_125	CALL_1
0x400291f	          0x4885db	                           test rbx, rbx	      1132	security.c	FUNCTION_125	CALL_1
0x4002922	            0x7438	                            je 0x400295c	      1132	security.c	FUNCTION_125	CALL_1
0x4002924	          0x4989fe	                            mov r14, rdi	      1132	security.c	FUNCTION_125	CALL_1
0x4002927	          0x4989f5	                            mov r13, rsi	      1132	security.c	FUNCTION_125	CALL_1
0x400292a	          0x4189d4	                           mov r12d, edx	      1132	security.c	FUNCTION_125	CALL_1
0x400292d	          0x4889cd	                            mov rbp, rcx	      1132	security.c	FUNCTION_125	CALL_1
0x4002930	            0xeb08	                           jmp 0x400293a	      1132	security.c	FUNCTION_125	CALL_1
0x4002932	          0x488b1b	                    mov rbx, qword [rbx]	      1132	security.c	FUNCTION_125	CALL_1
0x4002935	          0x4885db	                           test rbx, rbx	      1132	security.c	FUNCTION_125	CALL_1
0x4002938	            0x7422	                            je 0x400295c	      1132	security.c	FUNCTION_125	CALL_1
0x400293a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1132	security.c	FUNCTION_125	CALL_1
0x400293e	          0x4889e9	                            mov rcx, rbp	      1132	security.c	FUNCTION_125	CALL_1
0x4002941	          0x4489e2	                           mov edx, r12d	      1132	security.c	FUNCTION_125	CALL_1
0x4002944	          0x4c89ee	                            mov rsi, r13	      1132	security.c	FUNCTION_125	CALL_1
0x4002947	          0x4c89f7	                            mov rdi, r14	      1132	security.c	FUNCTION_125	CALL_1
0x400294a	      0xe800000000	                          call 0x400294f	      1132	security.c	FUNCTION_125	CALL_1
0x400294f	            0x85c0	                           test eax, eax	      1132	security.c	FUNCTION_125	CALL_1
0x4002951	            0x74df	                            je 0x4002932	      1132	security.c	FUNCTION_125	CALL_1
0x4002953	              0x5b	                                 pop rbx	      1133	security.c	FUNCTION_125
0x4002954	              0x5d	                                 pop rbp	      1133	security.c	FUNCTION_125
0x4002955	            0x415c	                                 pop r12	      1133	security.c	FUNCTION_125
0x4002957	            0x415d	                                 pop r13	      1133	security.c	FUNCTION_125
0x4002959	            0x415e	                                 pop r14	      1133	security.c	FUNCTION_125
0x400295b	              0xc3	                                     ret	      1133	security.c	FUNCTION_125
0x400295c	              0x5b	                                 pop rbx	      1133	security.c	FUNCTION_125
0x400295d	            0x31c0	                            xor eax, eax	      1131	security.c	FUNCTION_125
0x400295f	              0x5d	                                 pop rbp	      1133	security.c	FUNCTION_125
0x4002960	            0x415c	                                 pop r12	      1133	security.c	FUNCTION_125
0x4002962	            0x415d	                                 pop r13	      1133	security.c	FUNCTION_125
0x4002964	            0x415e	                                 pop r14	      1133	security.c	FUNCTION_125
0x4002966	              0xc3	                                     ret	      1133	security.c	FUNCTION_125
security_bprm_committing_creds	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	15
0x4001470	              0x55	                                push rbp	       352	security.c	FUNCTION_28
0x4001471	              0x53	                                push rbx	       352	security.c	FUNCTION_28
0x4001472	    0x488b1d000000	            mov rbx, qword [0x04001479] 	       353	security.c	FUNCTION_28	CALL_1
0x4001479	          0x4885db	                           test rbx, rbx	       353	security.c	FUNCTION_28	CALL_1
0x400147c	            0x7417	                            je 0x4001495	       353	security.c	FUNCTION_28	CALL_1
0x400147e	          0x4889fd	                            mov rbp, rdi	       353	security.c	FUNCTION_28	CALL_1
0x4001481	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       353	security.c	FUNCTION_28	CALL_1
0x4001485	          0x4889ef	                            mov rdi, rbp	       353	security.c	FUNCTION_28	CALL_1
0x4001488	      0xe800000000	                          call 0x400148d	       353	security.c	FUNCTION_28	CALL_1
0x400148d	          0x488b1b	                    mov rbx, qword [rbx]	       353	security.c	FUNCTION_28	CALL_1
0x4001490	          0x4885db	                           test rbx, rbx	       353	security.c	FUNCTION_28	CALL_1
0x4001493	            0x75ec	                           jne 0x4001481	       353	security.c	FUNCTION_28	CALL_1
0x4001495	              0x5b	                                 pop rbx	       354	security.c	FUNCTION_28
0x4001496	              0x5d	                                 pop rbp	       354	security.c	FUNCTION_28
0x4001497	              0xc3	                                     ret	       354	security.c	FUNCTION_28
security_ptrace_traceme	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x40010c0	              0x55	                                push rbp	       259	security.c	FUNCTION_16
0x40010c1	              0x53	                                push rbx	       259	security.c	FUNCTION_16
0x40010c2	          0x4889fd	                            mov rbp, rdi	       259	security.c	FUNCTION_16
0x40010c5	    0x488b1d000000	            mov rbx, qword [0x040010cc] 	       260	security.c	FUNCTION_16	CALL_1
0x40010cc	          0x4885db	                           test rbx, rbx	       260	security.c	FUNCTION_16	CALL_1
0x40010cf	            0x750a	                           jne 0x40010db	       260	security.c	FUNCTION_16	CALL_1
0x40010d1	            0xeb1b	                           jmp 0x40010ee	       260	security.c	FUNCTION_16	CALL_1
0x40010d3	          0x488b1b	                    mov rbx, qword [rbx]	       260	security.c	FUNCTION_16	CALL_1
0x40010d6	          0x4885db	                           test rbx, rbx	       260	security.c	FUNCTION_16	CALL_1
0x40010d9	            0x7413	                            je 0x40010ee	       260	security.c	FUNCTION_16	CALL_1
0x40010db	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       260	security.c	FUNCTION_16	CALL_1
0x40010df	          0x4889ef	                            mov rdi, rbp	       260	security.c	FUNCTION_16	CALL_1
0x40010e2	      0xe800000000	                          call 0x40010e7	       260	security.c	FUNCTION_16	CALL_1
0x40010e7	            0x85c0	                           test eax, eax	       260	security.c	FUNCTION_16	CALL_1
0x40010e9	            0x74e8	                            je 0x40010d3	       260	security.c	FUNCTION_16	CALL_1
0x40010eb	              0x5b	                                 pop rbx	       261	security.c	FUNCTION_16
0x40010ec	              0x5d	                                 pop rbp	       261	security.c	FUNCTION_16
0x40010ed	              0xc3	                                     ret	       261	security.c	FUNCTION_16
0x40010ee	            0x31c0	                            xor eax, eax	       259	security.c	FUNCTION_16
0x40010f0	              0x5b	                                 pop rbx	       261	security.c	FUNCTION_16
0x40010f1	              0x5d	                                 pop rbp	       261	security.c	FUNCTION_16
0x40010f2	              0xc3	                                     ret	       261	security.c	FUNCTION_16
security_cred_getsecid	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	20
0x40002e0	            0x4154	                                push r12	      1015	security.c	FUNCTION_106
0x40002e2	              0x55	                                push rbp	      1015	security.c	FUNCTION_106
0x40002e3	              0x53	                                push rbx	      1015	security.c	FUNCTION_106
0x40002e4	    0xc70600000000	                      mov dword [rsi], 0	      1016	security.c	FUNCTION_106
0x40002ea	    0x488b1d000000	            mov rbx, qword [0x040002f1] 	      1017	security.c	FUNCTION_106	CALL_1
0x40002f1	          0x4885db	                           test rbx, rbx	      1017	security.c	FUNCTION_106	CALL_1
0x40002f4	            0x741d	                            je 0x4000313	      1017	security.c	FUNCTION_106	CALL_1
0x40002f6	          0x4989fc	                            mov r12, rdi	      1017	security.c	FUNCTION_106	CALL_1
0x40002f9	          0x4889f5	                            mov rbp, rsi	      1017	security.c	FUNCTION_106	CALL_1
0x40002fc	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1017	security.c	FUNCTION_106	CALL_1
0x4000300	          0x4889ee	                            mov rsi, rbp	      1017	security.c	FUNCTION_106	CALL_1
0x4000303	          0x4c89e7	                            mov rdi, r12	      1017	security.c	FUNCTION_106	CALL_1
0x4000306	      0xe800000000	                          call 0x400030b	      1017	security.c	FUNCTION_106	CALL_1
0x400030b	          0x488b1b	                    mov rbx, qword [rbx]	      1017	security.c	FUNCTION_106	CALL_1
0x400030e	          0x4885db	                           test rbx, rbx	      1017	security.c	FUNCTION_106	CALL_1
0x4000311	            0x75e9	                           jne 0x40002fc	      1017	security.c	FUNCTION_106	CALL_1
0x4000313	              0x5b	                                 pop rbx	      1018	security.c	FUNCTION_106
0x4000314	              0x5d	                                 pop rbp	      1018	security.c	FUNCTION_106
0x4000315	            0x415c	                                 pop r12	      1018	security.c	FUNCTION_106
0x4000317	              0xc3	                                     ret	      1018	security.c	FUNCTION_106
unregister_lsm_notifier	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	3
0x4000e10	          0x4889fe	                            mov rsi, rdi	       191	security.c	FUNCTION_10
0x4000e13	    0x48c7c7000000	                              mov rdi, 0	       192	security.c	FUNCTION_10	CALL_1
0x4000e1a	      0xe900000000	                           jmp 0x4000e1f	       192	security.c	FUNCTION_10	CALL_1
security_inode_mknod	IF,1:SWITCH,0:functions,0:CALL,3:FOR,0:WHILE,0:DO,0:ELSE,0	41
0x4001910	        0xf6470d02	                test byte [rdi + 0xd], 2	       660	security.c	FUNCTION_66	IF_1	CALL_2
0x4001914	            0x7556	                           jne 0x400196c	       660	security.c	FUNCTION_66	IF_1	CALL_2
0x4001916	            0x4156	                                push r14	       659	security.c	FUNCTION_66
0x4001918	            0x4155	                                push r13	       659	security.c	FUNCTION_66
0x400191a	            0x4154	                                push r12	       659	security.c	FUNCTION_66
0x400191c	              0x55	                                push rbp	       659	security.c	FUNCTION_66
0x400191d	              0x53	                                push rbx	       659	security.c	FUNCTION_66
0x400191e	    0x488b1d000000	            mov rbx, qword [0x04001925] 	       662	security.c	FUNCTION_66	CALL_3
0x4001925	          0x4885db	                           test rbx, rbx	       662	security.c	FUNCTION_66	CALL_3
0x4001928	            0x7437	                            je 0x4001961	       662	security.c	FUNCTION_66	CALL_3
0x400192a	          0x4189ce	                           mov r14d, ecx	       662	security.c	FUNCTION_66	CALL_3
0x400192d	          0x4989f5	                            mov r13, rsi	       662	security.c	FUNCTION_66	CALL_3
0x4001930	          0x4989fc	                            mov r12, rdi	       662	security.c	FUNCTION_66	CALL_3
0x4001933	           0xfb7ea	                           movzx ebp, dx	       662	security.c	FUNCTION_66	CALL_3
0x4001936	            0xeb08	                           jmp 0x4001940	       662	security.c	FUNCTION_66	CALL_3
0x4001938	          0x488b1b	                    mov rbx, qword [rbx]	       662	security.c	FUNCTION_66	CALL_3
0x400193b	          0x4885db	                           test rbx, rbx	       662	security.c	FUNCTION_66	CALL_3
0x400193e	            0x7421	                            je 0x4001961	       662	security.c	FUNCTION_66	CALL_3
0x4001940	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       662	security.c	FUNCTION_66	CALL_3
0x4001944	          0x4489f1	                           mov ecx, r14d	       662	security.c	FUNCTION_66	CALL_3
0x4001947	            0x89ea	                            mov edx, ebp	       662	security.c	FUNCTION_66	CALL_3
0x4001949	          0x4c89ee	                            mov rsi, r13	       662	security.c	FUNCTION_66	CALL_3
0x400194c	          0x4c89e7	                            mov rdi, r12	       662	security.c	FUNCTION_66	CALL_3
0x400194f	      0xe800000000	                          call 0x4001954	       662	security.c	FUNCTION_66	CALL_3
0x4001954	            0x85c0	                           test eax, eax	       662	security.c	FUNCTION_66	CALL_3
0x4001956	            0x74e0	                            je 0x4001938	       662	security.c	FUNCTION_66	CALL_3
0x4001958	              0x5b	                                 pop rbx	       663	security.c	FUNCTION_66
0x4001959	              0x5d	                                 pop rbp	       663	security.c	FUNCTION_66
0x400195a	            0x415c	                                 pop r12	       663	security.c	FUNCTION_66
0x400195c	            0x415d	                                 pop r13	       663	security.c	FUNCTION_66
0x400195e	            0x415e	                                 pop r14	       663	security.c	FUNCTION_66
0x4001960	              0xc3	                                     ret	       663	security.c	FUNCTION_66
0x4001961	              0x5b	                                 pop rbx	       663	security.c	FUNCTION_66
0x4001962	            0x31c0	                            xor eax, eax	       661	security.c	FUNCTION_66	IF_1
0x4001964	              0x5d	                                 pop rbp	       663	security.c	FUNCTION_66
0x4001965	            0x415c	                                 pop r12	       663	security.c	FUNCTION_66
0x4001967	            0x415d	                                 pop r13	       663	security.c	FUNCTION_66
0x4001969	            0x415e	                                 pop r14	       663	security.c	FUNCTION_66
0x400196b	              0xc3	                                     ret	       663	security.c	FUNCTION_66
0x400196c	            0x31c0	                            xor eax, eax	       661	security.c	FUNCTION_66	IF_1
0x400196e	              0xc3	                                     ret	       663	security.c	FUNCTION_66
security_inode_setsecctx	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x40005a0	            0x4155	                                push r13	      1324	security.c	FUNCTION_158
0x40005a2	            0x4154	                                push r12	      1324	security.c	FUNCTION_158
0x40005a4	              0x55	                                push rbp	      1324	security.c	FUNCTION_158
0x40005a5	              0x53	                                push rbx	      1324	security.c	FUNCTION_158
0x40005a6	    0x488b1d000000	            mov rbx, qword [0x040005ad] 	      1325	security.c	FUNCTION_158	CALL_1
0x40005ad	          0x4885db	                           test rbx, rbx	      1325	security.c	FUNCTION_158	CALL_1
0x40005b0	            0x742e	                            je 0x40005e0	      1325	security.c	FUNCTION_158	CALL_1
0x40005b2	          0x4989fd	                            mov r13, rdi	      1325	security.c	FUNCTION_158	CALL_1
0x40005b5	          0x4989f4	                            mov r12, rsi	      1325	security.c	FUNCTION_158	CALL_1
0x40005b8	            0x89d5	                            mov ebp, edx	      1325	security.c	FUNCTION_158	CALL_1
0x40005ba	            0xeb08	                           jmp 0x40005c4	      1325	security.c	FUNCTION_158	CALL_1
0x40005bc	          0x488b1b	                    mov rbx, qword [rbx]	      1325	security.c	FUNCTION_158	CALL_1
0x40005bf	          0x4885db	                           test rbx, rbx	      1325	security.c	FUNCTION_158	CALL_1
0x40005c2	            0x741c	                            je 0x40005e0	      1325	security.c	FUNCTION_158	CALL_1
0x40005c4	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1325	security.c	FUNCTION_158	CALL_1
0x40005c8	            0x89ea	                            mov edx, ebp	      1325	security.c	FUNCTION_158	CALL_1
0x40005ca	          0x4c89e6	                            mov rsi, r12	      1325	security.c	FUNCTION_158	CALL_1
0x40005cd	          0x4c89ef	                            mov rdi, r13	      1325	security.c	FUNCTION_158	CALL_1
0x40005d0	      0xe800000000	                          call 0x40005d5	      1325	security.c	FUNCTION_158	CALL_1
0x40005d5	            0x85c0	                           test eax, eax	      1325	security.c	FUNCTION_158	CALL_1
0x40005d7	            0x74e3	                            je 0x40005bc	      1325	security.c	FUNCTION_158	CALL_1
0x40005d9	              0x5b	                                 pop rbx	      1326	security.c	FUNCTION_158
0x40005da	              0x5d	                                 pop rbp	      1326	security.c	FUNCTION_158
0x40005db	            0x415c	                                 pop r12	      1326	security.c	FUNCTION_158
0x40005dd	            0x415d	                                 pop r13	      1326	security.c	FUNCTION_158
0x40005df	              0xc3	                                     ret	      1326	security.c	FUNCTION_158
0x40005e0	              0x5b	                                 pop rbx	      1326	security.c	FUNCTION_158
0x40005e1	            0x31c0	                            xor eax, eax	      1324	security.c	FUNCTION_158
0x40005e3	              0x5d	                                 pop rbp	      1326	security.c	FUNCTION_158
0x40005e4	            0x415c	                                 pop r12	      1326	security.c	FUNCTION_158
0x40005e6	            0x415d	                                 pop r13	      1326	security.c	FUNCTION_158
0x40005e8	              0xc3	                                     ret	      1326	security.c	FUNCTION_158
security_inode_need_killpriv	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x4001d50	              0x55	                                push rbp	       795	security.c	FUNCTION_78
0x4001d51	              0x53	                                push rbx	       795	security.c	FUNCTION_78
0x4001d52	          0x4889fd	                            mov rbp, rdi	       795	security.c	FUNCTION_78
0x4001d55	    0x488b1d000000	            mov rbx, qword [0x04001d5c] 	       796	security.c	FUNCTION_78	CALL_1
0x4001d5c	          0x4885db	                           test rbx, rbx	       796	security.c	FUNCTION_78	CALL_1
0x4001d5f	            0x750a	                           jne 0x4001d6b	       796	security.c	FUNCTION_78	CALL_1
0x4001d61	            0xeb1b	                           jmp 0x4001d7e	       796	security.c	FUNCTION_78	CALL_1
0x4001d63	          0x488b1b	                    mov rbx, qword [rbx]	       796	security.c	FUNCTION_78	CALL_1
0x4001d66	          0x4885db	                           test rbx, rbx	       796	security.c	FUNCTION_78	CALL_1
0x4001d69	            0x7413	                            je 0x4001d7e	       796	security.c	FUNCTION_78	CALL_1
0x4001d6b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       796	security.c	FUNCTION_78	CALL_1
0x4001d6f	          0x4889ef	                            mov rdi, rbp	       796	security.c	FUNCTION_78	CALL_1
0x4001d72	      0xe800000000	                          call 0x4001d77	       796	security.c	FUNCTION_78	CALL_1
0x4001d77	            0x85c0	                           test eax, eax	       796	security.c	FUNCTION_78	CALL_1
0x4001d79	            0x74e8	                            je 0x4001d63	       796	security.c	FUNCTION_78	CALL_1
0x4001d7b	              0x5b	                                 pop rbx	       797	security.c	FUNCTION_78
0x4001d7c	              0x5d	                                 pop rbp	       797	security.c	FUNCTION_78
0x4001d7d	              0xc3	                                     ret	       797	security.c	FUNCTION_78
0x4001d7e	            0x31c0	                            xor eax, eax	       795	security.c	FUNCTION_78
0x4001d80	              0x5b	                                 pop rbx	       797	security.c	FUNCTION_78
0x4001d81	              0x5d	                                 pop rbp	       797	security.c	FUNCTION_78
0x4001d82	              0xc3	                                     ret	       797	security.c	FUNCTION_78
security_inode_copy_up	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4000260	            0x4154	                                push r12	       855	security.c	FUNCTION_84
0x4000262	              0x55	                                push rbp	       855	security.c	FUNCTION_84
0x4000263	          0x4989fc	                            mov r12, rdi	       855	security.c	FUNCTION_84
0x4000266	              0x53	                                push rbx	       855	security.c	FUNCTION_84
0x4000267	    0x488b1d000000	            mov rbx, qword [0x0400026e] 	       856	security.c	FUNCTION_84	CALL_1
0x400026e	          0x4889f5	                            mov rbp, rsi	       856	security.c	FUNCTION_84	CALL_1
0x4000271	          0x4885db	                           test rbx, rbx	       856	security.c	FUNCTION_84	CALL_1
0x4000274	            0x750a	                           jne 0x4000280	       856	security.c	FUNCTION_84	CALL_1
0x4000276	            0xeb20	                           jmp 0x4000298	       856	security.c	FUNCTION_84	CALL_1
0x4000278	          0x488b1b	                    mov rbx, qword [rbx]	       856	security.c	FUNCTION_84	CALL_1
0x400027b	          0x4885db	                           test rbx, rbx	       856	security.c	FUNCTION_84	CALL_1
0x400027e	            0x7418	                            je 0x4000298	       856	security.c	FUNCTION_84	CALL_1
0x4000280	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       856	security.c	FUNCTION_84	CALL_1
0x4000284	          0x4889ee	                            mov rsi, rbp	       856	security.c	FUNCTION_84	CALL_1
0x4000287	          0x4c89e7	                            mov rdi, r12	       856	security.c	FUNCTION_84	CALL_1
0x400028a	      0xe800000000	                          call 0x400028f	       856	security.c	FUNCTION_84	CALL_1
0x400028f	            0x85c0	                           test eax, eax	       856	security.c	FUNCTION_84	CALL_1
0x4000291	            0x74e5	                            je 0x4000278	       856	security.c	FUNCTION_84	CALL_1
0x4000293	              0x5b	                                 pop rbx	       857	security.c	FUNCTION_84
0x4000294	              0x5d	                                 pop rbp	       857	security.c	FUNCTION_84
0x4000295	            0x415c	                                 pop r12	       857	security.c	FUNCTION_84
0x4000297	              0xc3	                                     ret	       857	security.c	FUNCTION_84
0x4000298	              0x5b	                                 pop rbx	       857	security.c	FUNCTION_84
0x4000299	            0x31c0	                            xor eax, eax	       855	security.c	FUNCTION_84
0x400029b	              0x5d	                                 pop rbp	       857	security.c	FUNCTION_84
0x400029c	            0x415c	                                 pop r12	       857	security.c	FUNCTION_84
0x400029e	              0xc3	                                     ret	       857	security.c	FUNCTION_84
security_socket_shutdown	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4003400	            0x4154	                                push r12	      1413	security.c	FUNCTION_174
0x4003402	              0x55	                                push rbp	      1413	security.c	FUNCTION_174
0x4003403	          0x4989fc	                            mov r12, rdi	      1413	security.c	FUNCTION_174
0x4003406	              0x53	                                push rbx	      1413	security.c	FUNCTION_174
0x4003407	    0x488b1d000000	            mov rbx, qword [0x0400340e] 	      1414	security.c	FUNCTION_174	CALL_1
0x400340e	            0x89f5	                            mov ebp, esi	      1414	security.c	FUNCTION_174	CALL_1
0x4003410	          0x4885db	                           test rbx, rbx	      1414	security.c	FUNCTION_174	CALL_1
0x4003413	            0x750a	                           jne 0x400341f	      1414	security.c	FUNCTION_174	CALL_1
0x4003415	            0xeb1f	                           jmp 0x4003436	      1414	security.c	FUNCTION_174	CALL_1
0x4003417	          0x488b1b	                    mov rbx, qword [rbx]	      1414	security.c	FUNCTION_174	CALL_1
0x400341a	          0x4885db	                           test rbx, rbx	      1414	security.c	FUNCTION_174	CALL_1
0x400341d	            0x7417	                            je 0x4003436	      1414	security.c	FUNCTION_174	CALL_1
0x400341f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1414	security.c	FUNCTION_174	CALL_1
0x4003423	            0x89ee	                            mov esi, ebp	      1414	security.c	FUNCTION_174	CALL_1
0x4003425	          0x4c89e7	                            mov rdi, r12	      1414	security.c	FUNCTION_174	CALL_1
0x4003428	      0xe800000000	                          call 0x400342d	      1414	security.c	FUNCTION_174	CALL_1
0x400342d	            0x85c0	                           test eax, eax	      1414	security.c	FUNCTION_174	CALL_1
0x400342f	            0x74e6	                            je 0x4003417	      1414	security.c	FUNCTION_174	CALL_1
0x4003431	              0x5b	                                 pop rbx	      1415	security.c	FUNCTION_174
0x4003432	              0x5d	                                 pop rbp	      1415	security.c	FUNCTION_174
0x4003433	            0x415c	                                 pop r12	      1415	security.c	FUNCTION_174
0x4003435	              0xc3	                                     ret	      1415	security.c	FUNCTION_174
0x4003436	              0x5b	                                 pop rbx	      1415	security.c	FUNCTION_174
0x4003437	            0x31c0	                            xor eax, eax	      1413	security.c	FUNCTION_174
0x4003439	              0x5d	                                 pop rbp	      1415	security.c	FUNCTION_174
0x400343a	            0x415c	                                 pop r12	      1415	security.c	FUNCTION_174
0x400343c	              0xc3	                                     ret	      1415	security.c	FUNCTION_174
security_task_alloc	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x40023b0	            0x4154	                                push r12	       985	security.c	FUNCTION_100
0x40023b2	              0x55	                                push rbp	       985	security.c	FUNCTION_100
0x40023b3	          0x4989fc	                            mov r12, rdi	       985	security.c	FUNCTION_100
0x40023b6	              0x53	                                push rbx	       985	security.c	FUNCTION_100
0x40023b7	    0x488b1d000000	            mov rbx, qword [0x040023be] 	       986	security.c	FUNCTION_100	CALL_1
0x40023be	          0x4889f5	                            mov rbp, rsi	       986	security.c	FUNCTION_100	CALL_1
0x40023c1	          0x4885db	                           test rbx, rbx	       986	security.c	FUNCTION_100	CALL_1
0x40023c4	            0x750a	                           jne 0x40023d0	       986	security.c	FUNCTION_100	CALL_1
0x40023c6	            0xeb20	                           jmp 0x40023e8	       986	security.c	FUNCTION_100	CALL_1
0x40023c8	          0x488b1b	                    mov rbx, qword [rbx]	       986	security.c	FUNCTION_100	CALL_1
0x40023cb	          0x4885db	                           test rbx, rbx	       986	security.c	FUNCTION_100	CALL_1
0x40023ce	            0x7418	                            je 0x40023e8	       986	security.c	FUNCTION_100	CALL_1
0x40023d0	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       986	security.c	FUNCTION_100	CALL_1
0x40023d4	          0x4889ee	                            mov rsi, rbp	       986	security.c	FUNCTION_100	CALL_1
0x40023d7	          0x4c89e7	                            mov rdi, r12	       986	security.c	FUNCTION_100	CALL_1
0x40023da	      0xe800000000	                          call 0x40023df	       986	security.c	FUNCTION_100	CALL_1
0x40023df	            0x85c0	                           test eax, eax	       986	security.c	FUNCTION_100	CALL_1
0x40023e1	            0x74e5	                            je 0x40023c8	       986	security.c	FUNCTION_100	CALL_1
0x40023e3	              0x5b	                                 pop rbx	       987	security.c	FUNCTION_100
0x40023e4	              0x5d	                                 pop rbp	       987	security.c	FUNCTION_100
0x40023e5	            0x415c	                                 pop r12	       987	security.c	FUNCTION_100
0x40023e7	              0xc3	                                     ret	       987	security.c	FUNCTION_100
0x40023e8	              0x5b	                                 pop rbx	       987	security.c	FUNCTION_100
0x40023e9	            0x31c0	                            xor eax, eax	       985	security.c	FUNCTION_100
0x40023eb	              0x5d	                                 pop rbp	       987	security.c	FUNCTION_100
0x40023ec	            0x415c	                                 pop r12	       987	security.c	FUNCTION_100
0x40023ee	              0xc3	                                     ret	       987	security.c	FUNCTION_100
security_sb_statfs	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x4001610	              0x55	                                push rbp	       393	security.c	FUNCTION_36
0x4001611	              0x53	                                push rbx	       393	security.c	FUNCTION_36
0x4001612	          0x4889fd	                            mov rbp, rdi	       393	security.c	FUNCTION_36
0x4001615	    0x488b1d000000	            mov rbx, qword [0x0400161c] 	       394	security.c	FUNCTION_36	CALL_1
0x400161c	          0x4885db	                           test rbx, rbx	       394	security.c	FUNCTION_36	CALL_1
0x400161f	            0x750a	                           jne 0x400162b	       394	security.c	FUNCTION_36	CALL_1
0x4001621	            0xeb1b	                           jmp 0x400163e	       394	security.c	FUNCTION_36	CALL_1
0x4001623	          0x488b1b	                    mov rbx, qword [rbx]	       394	security.c	FUNCTION_36	CALL_1
0x4001626	          0x4885db	                           test rbx, rbx	       394	security.c	FUNCTION_36	CALL_1
0x4001629	            0x7413	                            je 0x400163e	       394	security.c	FUNCTION_36	CALL_1
0x400162b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       394	security.c	FUNCTION_36	CALL_1
0x400162f	          0x4889ef	                            mov rdi, rbp	       394	security.c	FUNCTION_36	CALL_1
0x4001632	      0xe800000000	                          call 0x4001637	       394	security.c	FUNCTION_36	CALL_1
0x4001637	            0x85c0	                           test eax, eax	       394	security.c	FUNCTION_36	CALL_1
0x4001639	            0x74e8	                            je 0x4001623	       394	security.c	FUNCTION_36	CALL_1
0x400163b	              0x5b	                                 pop rbx	       395	security.c	FUNCTION_36
0x400163c	              0x5d	                                 pop rbp	       395	security.c	FUNCTION_36
0x400163d	              0xc3	                                     ret	       395	security.c	FUNCTION_36
0x400163e	            0x31c0	                            xor eax, eax	       393	security.c	FUNCTION_36
0x4001640	              0x5b	                                 pop rbx	       395	security.c	FUNCTION_36
0x4001641	              0x5d	                                 pop rbp	       395	security.c	FUNCTION_36
0x4001642	              0xc3	                                     ret	       395	security.c	FUNCTION_36
security_vm_enough_memory_mm	IF,0:SWITCH,0:functions,1:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x4001390	            0x4154	                                push r12	       314	security.c	FUNCTION_25
0x4001392	              0x55	                                push rbp	       314	security.c	FUNCTION_25
0x4001393	          0x4989f4	                            mov r12, rsi	       314	security.c	FUNCTION_25
0x4001396	              0x53	                                push rbx	       314	security.c	FUNCTION_25
0x4001397	    0x488b1d000000	            mov rbx, qword [0x0400139e] 	       326	security.c	FUNCTION_25	FUNCTION_1
0x400139e	          0x4889fd	                            mov rbp, rdi	       314	security.c	FUNCTION_25
0x40013a1	          0x4885db	                           test rbx, rbx	       326	security.c	FUNCTION_25	FUNCTION_1
0x40013a4	            0x750a	                           jne 0x40013b0	       326	security.c	FUNCTION_25	FUNCTION_1
0x40013a6	            0xeb2c	                           jmp 0x40013d4	       326	security.c	FUNCTION_25	FUNCTION_1
0x40013a8	          0x488b1b	                    mov rbx, qword [rbx]	       326	security.c	FUNCTION_25	FUNCTION_1
0x40013ab	          0x4885db	                           test rbx, rbx	       326	security.c	FUNCTION_25	FUNCTION_1
0x40013ae	            0x7424	                            je 0x40013d4	       326	security.c	FUNCTION_25	FUNCTION_1
0x40013b0	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       327	security.c	FUNCTION_25	FUNCTION_1	CALL_1
0x40013b4	          0x4c89e6	                            mov rsi, r12	       327	security.c	FUNCTION_25	FUNCTION_1	CALL_1
0x40013b7	          0x4889ef	                            mov rdi, rbp	       327	security.c	FUNCTION_25	FUNCTION_1	CALL_1
0x40013ba	      0xe800000000	                          call 0x40013bf	       327	security.c	FUNCTION_25	FUNCTION_1	CALL_1
0x40013bf	            0x85c0	                           test eax, eax	       328	security.c	FUNCTION_25	FUNCTION_1	IF_1
0x40013c1	            0x7fe5	                            jg 0x40013a8	       328	security.c	FUNCTION_25	FUNCTION_1	IF_1
0x40013c3	              0x5b	                                 pop rbx	       334	security.c	FUNCTION_25
0x40013c4	          0x4c89e6	                            mov rsi, r12	       333	security.c	FUNCTION_25	CALL_1
0x40013c7	          0x4889ef	                            mov rdi, rbp	       333	security.c	FUNCTION_25	CALL_1
0x40013ca	            0x31d2	                            xor edx, edx	       329	security.c	FUNCTION_25	FUNCTION_1	IF_1
0x40013cc	              0x5d	                                 pop rbp	       334	security.c	FUNCTION_25
0x40013cd	            0x415c	                                 pop r12	       334	security.c	FUNCTION_25
0x40013cf	      0xe900000000	                           jmp 0x40013d4	       333	security.c	FUNCTION_25	CALL_1
0x40013d4	              0x5b	                                 pop rbx	       334	security.c	FUNCTION_25
0x40013d5	          0x4c89e6	                            mov rsi, r12	       333	security.c	FUNCTION_25	CALL_1
0x40013d8	          0x4889ef	                            mov rdi, rbp	       333	security.c	FUNCTION_25	CALL_1
0x40013db	      0xba01000000	                              mov edx, 1	       316	security.c	FUNCTION_25
0x40013e0	              0x5d	                                 pop rbp	       334	security.c	FUNCTION_25
0x40013e1	            0x415c	                                 pop r12	       334	security.c	FUNCTION_25
0x40013e3	      0xe900000000	                           jmp 0x40013e8	       333	security.c	FUNCTION_25	CALL_1
security_prepare_creds	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x4002490	            0x4155	                                push r13	      1005	security.c	FUNCTION_104
0x4002492	            0x4154	                                push r12	      1005	security.c	FUNCTION_104
0x4002494	              0x55	                                push rbp	      1005	security.c	FUNCTION_104
0x4002495	              0x53	                                push rbx	      1005	security.c	FUNCTION_104
0x4002496	    0x488b1d000000	            mov rbx, qword [0x0400249d] 	      1006	security.c	FUNCTION_104	CALL_1
0x400249d	          0x4885db	                           test rbx, rbx	      1006	security.c	FUNCTION_104	CALL_1
0x40024a0	            0x742e	                            je 0x40024d0	      1006	security.c	FUNCTION_104	CALL_1
0x40024a2	          0x4989fd	                            mov r13, rdi	      1006	security.c	FUNCTION_104	CALL_1
0x40024a5	          0x4989f4	                            mov r12, rsi	      1006	security.c	FUNCTION_104	CALL_1
0x40024a8	            0x89d5	                            mov ebp, edx	      1006	security.c	FUNCTION_104	CALL_1
0x40024aa	            0xeb08	                           jmp 0x40024b4	      1006	security.c	FUNCTION_104	CALL_1
0x40024ac	          0x488b1b	                    mov rbx, qword [rbx]	      1006	security.c	FUNCTION_104	CALL_1
0x40024af	          0x4885db	                           test rbx, rbx	      1006	security.c	FUNCTION_104	CALL_1
0x40024b2	            0x741c	                            je 0x40024d0	      1006	security.c	FUNCTION_104	CALL_1
0x40024b4	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1006	security.c	FUNCTION_104	CALL_1
0x40024b8	            0x89ea	                            mov edx, ebp	      1006	security.c	FUNCTION_104	CALL_1
0x40024ba	          0x4c89e6	                            mov rsi, r12	      1006	security.c	FUNCTION_104	CALL_1
0x40024bd	          0x4c89ef	                            mov rdi, r13	      1006	security.c	FUNCTION_104	CALL_1
0x40024c0	      0xe800000000	                          call 0x40024c5	      1006	security.c	FUNCTION_104	CALL_1
0x40024c5	            0x85c0	                           test eax, eax	      1006	security.c	FUNCTION_104	CALL_1
0x40024c7	            0x74e3	                            je 0x40024ac	      1006	security.c	FUNCTION_104	CALL_1
0x40024c9	              0x5b	                                 pop rbx	      1007	security.c	FUNCTION_104
0x40024ca	              0x5d	                                 pop rbp	      1007	security.c	FUNCTION_104
0x40024cb	            0x415c	                                 pop r12	      1007	security.c	FUNCTION_104
0x40024cd	            0x415d	                                 pop r13	      1007	security.c	FUNCTION_104
0x40024cf	              0xc3	                                     ret	      1007	security.c	FUNCTION_104
0x40024d0	              0x5b	                                 pop rbx	      1007	security.c	FUNCTION_104
0x40024d1	            0x31c0	                            xor eax, eax	      1005	security.c	FUNCTION_104
0x40024d3	              0x5d	                                 pop rbp	      1007	security.c	FUNCTION_104
0x40024d4	            0x415c	                                 pop r12	      1007	security.c	FUNCTION_104
0x40024d6	            0x415d	                                 pop r13	      1007	security.c	FUNCTION_104
0x40024d8	              0xc3	                                     ret	      1007	security.c	FUNCTION_104
security_msg_queue_msgrcv	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	42
0x4002c60	            0x4157	                                push r15	      1207	security.c	FUNCTION_137
0x4002c62	            0x4156	                                push r14	      1207	security.c	FUNCTION_137
0x4002c64	            0x4155	                                push r13	      1207	security.c	FUNCTION_137
0x4002c66	            0x4154	                                push r12	      1207	security.c	FUNCTION_137
0x4002c68	              0x55	                                push rbp	      1207	security.c	FUNCTION_137
0x4002c69	              0x53	                                push rbx	      1207	security.c	FUNCTION_137
0x4002c6a	    0x488b1d000000	            mov rbx, qword [0x04002c71] 	      1208	security.c	FUNCTION_137	CALL_1
0x4002c71	          0x4885db	                           test rbx, rbx	      1208	security.c	FUNCTION_137	CALL_1
0x4002c74	            0x7440	                            je 0x4002cb6	      1208	security.c	FUNCTION_137	CALL_1
0x4002c76	          0x4989ff	                            mov r15, rdi	      1208	security.c	FUNCTION_137	CALL_1
0x4002c79	          0x4989f6	                            mov r14, rsi	      1208	security.c	FUNCTION_137	CALL_1
0x4002c7c	          0x4989d5	                            mov r13, rdx	      1208	security.c	FUNCTION_137	CALL_1
0x4002c7f	          0x4989cc	                            mov r12, rcx	      1208	security.c	FUNCTION_137	CALL_1
0x4002c82	          0x4489c5	                            mov ebp, r8d	      1208	security.c	FUNCTION_137	CALL_1
0x4002c85	            0xeb08	                           jmp 0x4002c8f	      1208	security.c	FUNCTION_137	CALL_1
0x4002c87	          0x488b1b	                    mov rbx, qword [rbx]	      1208	security.c	FUNCTION_137	CALL_1
0x4002c8a	          0x4885db	                           test rbx, rbx	      1208	security.c	FUNCTION_137	CALL_1
0x4002c8d	            0x7427	                            je 0x4002cb6	      1208	security.c	FUNCTION_137	CALL_1
0x4002c8f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1208	security.c	FUNCTION_137	CALL_1
0x4002c93	          0x4189e8	                            mov r8d, ebp	      1208	security.c	FUNCTION_137	CALL_1
0x4002c96	          0x4c89e1	                            mov rcx, r12	      1208	security.c	FUNCTION_137	CALL_1
0x4002c99	          0x4c89ea	                            mov rdx, r13	      1208	security.c	FUNCTION_137	CALL_1
0x4002c9c	          0x4c89f6	                            mov rsi, r14	      1208	security.c	FUNCTION_137	CALL_1
0x4002c9f	          0x4c89ff	                            mov rdi, r15	      1208	security.c	FUNCTION_137	CALL_1
0x4002ca2	      0xe800000000	                          call 0x4002ca7	      1208	security.c	FUNCTION_137	CALL_1
0x4002ca7	            0x85c0	                           test eax, eax	      1208	security.c	FUNCTION_137	CALL_1
0x4002ca9	            0x74dc	                            je 0x4002c87	      1208	security.c	FUNCTION_137	CALL_1
0x4002cab	              0x5b	                                 pop rbx	      1209	security.c	FUNCTION_137
0x4002cac	              0x5d	                                 pop rbp	      1209	security.c	FUNCTION_137
0x4002cad	            0x415c	                                 pop r12	      1209	security.c	FUNCTION_137
0x4002caf	            0x415d	                                 pop r13	      1209	security.c	FUNCTION_137
0x4002cb1	            0x415e	                                 pop r14	      1209	security.c	FUNCTION_137
0x4002cb3	            0x415f	                                 pop r15	      1209	security.c	FUNCTION_137
0x4002cb5	              0xc3	                                     ret	      1209	security.c	FUNCTION_137
0x4002cb6	              0x5b	                                 pop rbx	      1209	security.c	FUNCTION_137
0x4002cb7	            0x31c0	                            xor eax, eax	      1207	security.c	FUNCTION_137
0x4002cb9	              0x5d	                                 pop rbp	      1209	security.c	FUNCTION_137
0x4002cba	            0x415c	                                 pop r12	      1209	security.c	FUNCTION_137
0x4002cbc	            0x415d	                                 pop r13	      1209	security.c	FUNCTION_137
0x4002cbe	            0x415e	                                 pop r14	      1209	security.c	FUNCTION_137
0x4002cc0	            0x415f	                                 pop r15	      1209	security.c	FUNCTION_137
0x4002cc2	              0xc3	                                     ret	      1209	security.c	FUNCTION_137
security_dentry_create_files_as	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	42
0x40001f0	            0x4157	                                push r15	       464	security.c	FUNCTION_46
0x40001f2	            0x4156	                                push r14	       464	security.c	FUNCTION_46
0x40001f4	            0x4155	                                push r13	       464	security.c	FUNCTION_46
0x40001f6	            0x4154	                                push r12	       464	security.c	FUNCTION_46
0x40001f8	              0x55	                                push rbp	       464	security.c	FUNCTION_46
0x40001f9	              0x53	                                push rbx	       464	security.c	FUNCTION_46
0x40001fa	    0x488b1d000000	            mov rbx, qword [0x04000201] 	       465	security.c	FUNCTION_46	CALL_1
0x4000201	          0x4885db	                           test rbx, rbx	       465	security.c	FUNCTION_46	CALL_1
0x4000204	            0x7440	                            je 0x4000246	       465	security.c	FUNCTION_46	CALL_1
0x4000206	          0x4989ff	                            mov r15, rdi	       465	security.c	FUNCTION_46	CALL_1
0x4000209	          0x4189f6	                           mov r14d, esi	       465	security.c	FUNCTION_46	CALL_1
0x400020c	          0x4989d5	                            mov r13, rdx	       465	security.c	FUNCTION_46	CALL_1
0x400020f	          0x4989cc	                            mov r12, rcx	       465	security.c	FUNCTION_46	CALL_1
0x4000212	          0x4c89c5	                             mov rbp, r8	       465	security.c	FUNCTION_46	CALL_1
0x4000215	            0xeb08	                           jmp 0x400021f	       465	security.c	FUNCTION_46	CALL_1
0x4000217	          0x488b1b	                    mov rbx, qword [rbx]	       465	security.c	FUNCTION_46	CALL_1
0x400021a	          0x4885db	                           test rbx, rbx	       465	security.c	FUNCTION_46	CALL_1
0x400021d	            0x7427	                            je 0x4000246	       465	security.c	FUNCTION_46	CALL_1
0x400021f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       465	security.c	FUNCTION_46	CALL_1
0x4000223	          0x4989e8	                             mov r8, rbp	       465	security.c	FUNCTION_46	CALL_1
0x4000226	          0x4c89e1	                            mov rcx, r12	       465	security.c	FUNCTION_46	CALL_1
0x4000229	          0x4c89ea	                            mov rdx, r13	       465	security.c	FUNCTION_46	CALL_1
0x400022c	          0x4489f6	                           mov esi, r14d	       465	security.c	FUNCTION_46	CALL_1
0x400022f	          0x4c89ff	                            mov rdi, r15	       465	security.c	FUNCTION_46	CALL_1
0x4000232	      0xe800000000	                          call 0x4000237	       465	security.c	FUNCTION_46	CALL_1
0x4000237	            0x85c0	                           test eax, eax	       465	security.c	FUNCTION_46	CALL_1
0x4000239	            0x74dc	                            je 0x4000217	       465	security.c	FUNCTION_46	CALL_1
0x400023b	              0x5b	                                 pop rbx	       467	security.c	FUNCTION_46
0x400023c	              0x5d	                                 pop rbp	       467	security.c	FUNCTION_46
0x400023d	            0x415c	                                 pop r12	       467	security.c	FUNCTION_46
0x400023f	            0x415d	                                 pop r13	       467	security.c	FUNCTION_46
0x4000241	            0x415e	                                 pop r14	       467	security.c	FUNCTION_46
0x4000243	            0x415f	                                 pop r15	       467	security.c	FUNCTION_46
0x4000245	              0xc3	                                     ret	       467	security.c	FUNCTION_46
0x4000246	              0x5b	                                 pop rbx	       467	security.c	FUNCTION_46
0x4000247	            0x31c0	                            xor eax, eax	       464	security.c	FUNCTION_46
0x4000249	              0x5d	                                 pop rbp	       467	security.c	FUNCTION_46
0x400024a	            0x415c	                                 pop r12	       467	security.c	FUNCTION_46
0x400024c	            0x415d	                                 pop r13	       467	security.c	FUNCTION_46
0x400024e	            0x415e	                                 pop r14	       467	security.c	FUNCTION_46
0x4000250	            0x415f	                                 pop r15	       467	security.c	FUNCTION_46
0x4000252	              0xc3	                                     ret	       467	security.c	FUNCTION_46
security_sctp_assoc_request	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4000ad0	            0x4154	                                push r12	      1546	security.c	FUNCTION_196
0x4000ad2	              0x55	                                push rbp	      1546	security.c	FUNCTION_196
0x4000ad3	          0x4989fc	                            mov r12, rdi	      1546	security.c	FUNCTION_196
0x4000ad6	              0x53	                                push rbx	      1546	security.c	FUNCTION_196
0x4000ad7	    0x488b1d000000	            mov rbx, qword [0x04000ade] 	      1547	security.c	FUNCTION_196	CALL_1
0x4000ade	          0x4889f5	                            mov rbp, rsi	      1547	security.c	FUNCTION_196	CALL_1
0x4000ae1	          0x4885db	                           test rbx, rbx	      1547	security.c	FUNCTION_196	CALL_1
0x4000ae4	            0x750a	                           jne 0x4000af0	      1547	security.c	FUNCTION_196	CALL_1
0x4000ae6	            0xeb20	                           jmp 0x4000b08	      1547	security.c	FUNCTION_196	CALL_1
0x4000ae8	          0x488b1b	                    mov rbx, qword [rbx]	      1547	security.c	FUNCTION_196	CALL_1
0x4000aeb	          0x4885db	                           test rbx, rbx	      1547	security.c	FUNCTION_196	CALL_1
0x4000aee	            0x7418	                            je 0x4000b08	      1547	security.c	FUNCTION_196	CALL_1
0x4000af0	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1547	security.c	FUNCTION_196	CALL_1
0x4000af4	          0x4889ee	                            mov rsi, rbp	      1547	security.c	FUNCTION_196	CALL_1
0x4000af7	          0x4c89e7	                            mov rdi, r12	      1547	security.c	FUNCTION_196	CALL_1
0x4000afa	      0xe800000000	                          call 0x4000aff	      1547	security.c	FUNCTION_196	CALL_1
0x4000aff	            0x85c0	                           test eax, eax	      1547	security.c	FUNCTION_196	CALL_1
0x4000b01	            0x74e5	                            je 0x4000ae8	      1547	security.c	FUNCTION_196	CALL_1
0x4000b03	              0x5b	                                 pop rbx	      1548	security.c	FUNCTION_196
0x4000b04	              0x5d	                                 pop rbp	      1548	security.c	FUNCTION_196
0x4000b05	            0x415c	                                 pop r12	      1548	security.c	FUNCTION_196
0x4000b07	              0xc3	                                     ret	      1548	security.c	FUNCTION_196
0x4000b08	              0x5b	                                 pop rbx	      1548	security.c	FUNCTION_196
0x4000b09	            0x31c0	                            xor eax, eax	      1546	security.c	FUNCTION_196
0x4000b0b	              0x5d	                                 pop rbp	      1548	security.c	FUNCTION_196
0x4000b0c	            0x415c	                                 pop r12	      1548	security.c	FUNCTION_196
0x4000b0e	              0xc3	                                     ret	      1548	security.c	FUNCTION_196
security_task_setscheduler	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x4002850	              0x55	                                push rbp	      1115	security.c	FUNCTION_122
0x4002851	              0x53	                                push rbx	      1115	security.c	FUNCTION_122
0x4002852	          0x4889fd	                            mov rbp, rdi	      1115	security.c	FUNCTION_122
0x4002855	    0x488b1d000000	            mov rbx, qword [0x0400285c] 	      1116	security.c	FUNCTION_122	CALL_1
0x400285c	          0x4885db	                           test rbx, rbx	      1116	security.c	FUNCTION_122	CALL_1
0x400285f	            0x750a	                           jne 0x400286b	      1116	security.c	FUNCTION_122	CALL_1
0x4002861	            0xeb1b	                           jmp 0x400287e	      1116	security.c	FUNCTION_122	CALL_1
0x4002863	          0x488b1b	                    mov rbx, qword [rbx]	      1116	security.c	FUNCTION_122	CALL_1
0x4002866	          0x4885db	                           test rbx, rbx	      1116	security.c	FUNCTION_122	CALL_1
0x4002869	            0x7413	                            je 0x400287e	      1116	security.c	FUNCTION_122	CALL_1
0x400286b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1116	security.c	FUNCTION_122	CALL_1
0x400286f	          0x4889ef	                            mov rdi, rbp	      1116	security.c	FUNCTION_122	CALL_1
0x4002872	      0xe800000000	                          call 0x4002877	      1116	security.c	FUNCTION_122	CALL_1
0x4002877	            0x85c0	                           test eax, eax	      1116	security.c	FUNCTION_122	CALL_1
0x4002879	            0x74e8	                            je 0x4002863	      1116	security.c	FUNCTION_122	CALL_1
0x400287b	              0x5b	                                 pop rbx	      1117	security.c	FUNCTION_122
0x400287c	              0x5d	                                 pop rbp	      1117	security.c	FUNCTION_122
0x400287d	              0xc3	                                     ret	      1117	security.c	FUNCTION_122
0x400287e	            0x31c0	                            xor eax, eax	      1115	security.c	FUNCTION_122
0x4002880	              0x5b	                                 pop rbx	      1117	security.c	FUNCTION_122
0x4002881	              0x5d	                                 pop rbp	      1117	security.c	FUNCTION_122
0x4002882	              0xc3	                                     ret	      1117	security.c	FUNCTION_122
security_shm_shmctl	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4002d80	            0x4154	                                push r12	      1227	security.c	FUNCTION_141
0x4002d82	              0x55	                                push rbp	      1227	security.c	FUNCTION_141
0x4002d83	          0x4989fc	                            mov r12, rdi	      1227	security.c	FUNCTION_141
0x4002d86	              0x53	                                push rbx	      1227	security.c	FUNCTION_141
0x4002d87	    0x488b1d000000	            mov rbx, qword [0x04002d8e] 	      1228	security.c	FUNCTION_141	CALL_1
0x4002d8e	            0x89f5	                            mov ebp, esi	      1228	security.c	FUNCTION_141	CALL_1
0x4002d90	          0x4885db	                           test rbx, rbx	      1228	security.c	FUNCTION_141	CALL_1
0x4002d93	            0x750a	                           jne 0x4002d9f	      1228	security.c	FUNCTION_141	CALL_1
0x4002d95	            0xeb1f	                           jmp 0x4002db6	      1228	security.c	FUNCTION_141	CALL_1
0x4002d97	          0x488b1b	                    mov rbx, qword [rbx]	      1228	security.c	FUNCTION_141	CALL_1
0x4002d9a	          0x4885db	                           test rbx, rbx	      1228	security.c	FUNCTION_141	CALL_1
0x4002d9d	            0x7417	                            je 0x4002db6	      1228	security.c	FUNCTION_141	CALL_1
0x4002d9f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1228	security.c	FUNCTION_141	CALL_1
0x4002da3	            0x89ee	                            mov esi, ebp	      1228	security.c	FUNCTION_141	CALL_1
0x4002da5	          0x4c89e7	                            mov rdi, r12	      1228	security.c	FUNCTION_141	CALL_1
0x4002da8	      0xe800000000	                          call 0x4002dad	      1228	security.c	FUNCTION_141	CALL_1
0x4002dad	            0x85c0	                           test eax, eax	      1228	security.c	FUNCTION_141	CALL_1
0x4002daf	            0x74e6	                            je 0x4002d97	      1228	security.c	FUNCTION_141	CALL_1
0x4002db1	              0x5b	                                 pop rbx	      1229	security.c	FUNCTION_141
0x4002db2	              0x5d	                                 pop rbp	      1229	security.c	FUNCTION_141
0x4002db3	            0x415c	                                 pop r12	      1229	security.c	FUNCTION_141
0x4002db5	              0xc3	                                     ret	      1229	security.c	FUNCTION_141
0x4002db6	              0x5b	                                 pop rbx	      1229	security.c	FUNCTION_141
0x4002db7	            0x31c0	                            xor eax, eax	      1227	security.c	FUNCTION_141
0x4002db9	              0x5d	                                 pop rbp	      1229	security.c	FUNCTION_141
0x4002dba	            0x415c	                                 pop r12	      1229	security.c	FUNCTION_141
0x4002dbc	              0xc3	                                     ret	      1229	security.c	FUNCTION_141
security_sb_pivotroot	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4001700	            0x4154	                                push r12	       409	security.c	FUNCTION_39
0x4001702	              0x55	                                push rbp	       409	security.c	FUNCTION_39
0x4001703	          0x4989fc	                            mov r12, rdi	       409	security.c	FUNCTION_39
0x4001706	              0x53	                                push rbx	       409	security.c	FUNCTION_39
0x4001707	    0x488b1d000000	            mov rbx, qword [0x0400170e] 	       410	security.c	FUNCTION_39	CALL_1
0x400170e	          0x4889f5	                            mov rbp, rsi	       410	security.c	FUNCTION_39	CALL_1
0x4001711	          0x4885db	                           test rbx, rbx	       410	security.c	FUNCTION_39	CALL_1
0x4001714	            0x750a	                           jne 0x4001720	       410	security.c	FUNCTION_39	CALL_1
0x4001716	            0xeb20	                           jmp 0x4001738	       410	security.c	FUNCTION_39	CALL_1
0x4001718	          0x488b1b	                    mov rbx, qword [rbx]	       410	security.c	FUNCTION_39	CALL_1
0x400171b	          0x4885db	                           test rbx, rbx	       410	security.c	FUNCTION_39	CALL_1
0x400171e	            0x7418	                            je 0x4001738	       410	security.c	FUNCTION_39	CALL_1
0x4001720	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       410	security.c	FUNCTION_39	CALL_1
0x4001724	          0x4889ee	                            mov rsi, rbp	       410	security.c	FUNCTION_39	CALL_1
0x4001727	          0x4c89e7	                            mov rdi, r12	       410	security.c	FUNCTION_39	CALL_1
0x400172a	      0xe800000000	                          call 0x400172f	       410	security.c	FUNCTION_39	CALL_1
0x400172f	            0x85c0	                           test eax, eax	       410	security.c	FUNCTION_39	CALL_1
0x4001731	            0x74e5	                            je 0x4001718	       410	security.c	FUNCTION_39	CALL_1
0x4001733	              0x5b	                                 pop rbx	       411	security.c	FUNCTION_39
0x4001734	              0x5d	                                 pop rbp	       411	security.c	FUNCTION_39
0x4001735	            0x415c	                                 pop r12	       411	security.c	FUNCTION_39
0x4001737	              0xc3	                                     ret	       411	security.c	FUNCTION_39
0x4001738	              0x5b	                                 pop rbx	       411	security.c	FUNCTION_39
0x4001739	            0x31c0	                            xor eax, eax	       409	security.c	FUNCTION_39
0x400173b	              0x5d	                                 pop rbp	       411	security.c	FUNCTION_39
0x400173c	            0x415c	                                 pop r12	       411	security.c	FUNCTION_39
0x400173e	              0xc3	                                     ret	       411	security.c	FUNCTION_39
security_file_lock	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x40021d0	            0x4154	                                push r12	       948	security.c	FUNCTION_94
0x40021d2	              0x55	                                push rbp	       948	security.c	FUNCTION_94
0x40021d3	          0x4989fc	                            mov r12, rdi	       948	security.c	FUNCTION_94
0x40021d6	              0x53	                                push rbx	       948	security.c	FUNCTION_94
0x40021d7	    0x488b1d000000	            mov rbx, qword [0x040021de] 	       949	security.c	FUNCTION_94	CALL_1
0x40021de	            0x89f5	                            mov ebp, esi	       949	security.c	FUNCTION_94	CALL_1
0x40021e0	          0x4885db	                           test rbx, rbx	       949	security.c	FUNCTION_94	CALL_1
0x40021e3	            0x750a	                           jne 0x40021ef	       949	security.c	FUNCTION_94	CALL_1
0x40021e5	            0xeb1f	                           jmp 0x4002206	       949	security.c	FUNCTION_94	CALL_1
0x40021e7	          0x488b1b	                    mov rbx, qword [rbx]	       949	security.c	FUNCTION_94	CALL_1
0x40021ea	          0x4885db	                           test rbx, rbx	       949	security.c	FUNCTION_94	CALL_1
0x40021ed	            0x7417	                            je 0x4002206	       949	security.c	FUNCTION_94	CALL_1
0x40021ef	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       949	security.c	FUNCTION_94	CALL_1
0x40021f3	            0x89ee	                            mov esi, ebp	       949	security.c	FUNCTION_94	CALL_1
0x40021f5	          0x4c89e7	                            mov rdi, r12	       949	security.c	FUNCTION_94	CALL_1
0x40021f8	      0xe800000000	                          call 0x40021fd	       949	security.c	FUNCTION_94	CALL_1
0x40021fd	            0x85c0	                           test eax, eax	       949	security.c	FUNCTION_94	CALL_1
0x40021ff	            0x74e6	                            je 0x40021e7	       949	security.c	FUNCTION_94	CALL_1
0x4002201	              0x5b	                                 pop rbx	       950	security.c	FUNCTION_94
0x4002202	              0x5d	                                 pop rbp	       950	security.c	FUNCTION_94
0x4002203	            0x415c	                                 pop r12	       950	security.c	FUNCTION_94
0x4002205	              0xc3	                                     ret	       950	security.c	FUNCTION_94
0x4002206	              0x5b	                                 pop rbx	       950	security.c	FUNCTION_94
0x4002207	            0x31c0	                            xor eax, eax	       948	security.c	FUNCTION_94
0x4002209	              0x5d	                                 pop rbp	       950	security.c	FUNCTION_94
0x400220a	            0x415c	                                 pop r12	       950	security.c	FUNCTION_94
0x400220c	              0xc3	                                     ret	       950	security.c	FUNCTION_94
security_sem_semctl	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4002ec0	            0x4154	                                push r12	      1252	security.c	FUNCTION_146
0x4002ec2	              0x55	                                push rbp	      1252	security.c	FUNCTION_146
0x4002ec3	          0x4989fc	                            mov r12, rdi	      1252	security.c	FUNCTION_146
0x4002ec6	              0x53	                                push rbx	      1252	security.c	FUNCTION_146
0x4002ec7	    0x488b1d000000	            mov rbx, qword [0x04002ece] 	      1253	security.c	FUNCTION_146	CALL_1
0x4002ece	            0x89f5	                            mov ebp, esi	      1253	security.c	FUNCTION_146	CALL_1
0x4002ed0	          0x4885db	                           test rbx, rbx	      1253	security.c	FUNCTION_146	CALL_1
0x4002ed3	            0x750a	                           jne 0x4002edf	      1253	security.c	FUNCTION_146	CALL_1
0x4002ed5	            0xeb1f	                           jmp 0x4002ef6	      1253	security.c	FUNCTION_146	CALL_1
0x4002ed7	          0x488b1b	                    mov rbx, qword [rbx]	      1253	security.c	FUNCTION_146	CALL_1
0x4002eda	          0x4885db	                           test rbx, rbx	      1253	security.c	FUNCTION_146	CALL_1
0x4002edd	            0x7417	                            je 0x4002ef6	      1253	security.c	FUNCTION_146	CALL_1
0x4002edf	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1253	security.c	FUNCTION_146	CALL_1
0x4002ee3	            0x89ee	                            mov esi, ebp	      1253	security.c	FUNCTION_146	CALL_1
0x4002ee5	          0x4c89e7	                            mov rdi, r12	      1253	security.c	FUNCTION_146	CALL_1
0x4002ee8	      0xe800000000	                          call 0x4002eed	      1253	security.c	FUNCTION_146	CALL_1
0x4002eed	            0x85c0	                           test eax, eax	      1253	security.c	FUNCTION_146	CALL_1
0x4002eef	            0x74e6	                            je 0x4002ed7	      1253	security.c	FUNCTION_146	CALL_1
0x4002ef1	              0x5b	                                 pop rbx	      1254	security.c	FUNCTION_146
0x4002ef2	              0x5d	                                 pop rbp	      1254	security.c	FUNCTION_146
0x4002ef3	            0x415c	                                 pop r12	      1254	security.c	FUNCTION_146
0x4002ef5	              0xc3	                                     ret	      1254	security.c	FUNCTION_146
0x4002ef6	              0x5b	                                 pop rbx	      1254	security.c	FUNCTION_146
0x4002ef7	            0x31c0	                            xor eax, eax	      1252	security.c	FUNCTION_146
0x4002ef9	              0x5d	                                 pop rbp	      1254	security.c	FUNCTION_146
0x4002efa	            0x415c	                                 pop r12	      1254	security.c	FUNCTION_146
0x4002efc	              0xc3	                                     ret	      1254	security.c	FUNCTION_146
security_file_mprotect	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x4002180	            0x4155	                                push r13	       943	security.c	FUNCTION_93
0x4002182	            0x4154	                                push r12	       943	security.c	FUNCTION_93
0x4002184	              0x55	                                push rbp	       943	security.c	FUNCTION_93
0x4002185	              0x53	                                push rbx	       943	security.c	FUNCTION_93
0x4002186	    0x488b1d000000	            mov rbx, qword [0x0400218d] 	       944	security.c	FUNCTION_93	CALL_1
0x400218d	          0x4885db	                           test rbx, rbx	       944	security.c	FUNCTION_93	CALL_1
0x4002190	            0x7430	                            je 0x40021c2	       944	security.c	FUNCTION_93	CALL_1
0x4002192	          0x4989fd	                            mov r13, rdi	       944	security.c	FUNCTION_93	CALL_1
0x4002195	          0x4989f4	                            mov r12, rsi	       944	security.c	FUNCTION_93	CALL_1
0x4002198	          0x4889d5	                            mov rbp, rdx	       944	security.c	FUNCTION_93	CALL_1
0x400219b	            0xeb08	                           jmp 0x40021a5	       944	security.c	FUNCTION_93	CALL_1
0x400219d	          0x488b1b	                    mov rbx, qword [rbx]	       944	security.c	FUNCTION_93	CALL_1
0x40021a0	          0x4885db	                           test rbx, rbx	       944	security.c	FUNCTION_93	CALL_1
0x40021a3	            0x741d	                            je 0x40021c2	       944	security.c	FUNCTION_93	CALL_1
0x40021a5	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       944	security.c	FUNCTION_93	CALL_1
0x40021a9	          0x4889ea	                            mov rdx, rbp	       944	security.c	FUNCTION_93	CALL_1
0x40021ac	          0x4c89e6	                            mov rsi, r12	       944	security.c	FUNCTION_93	CALL_1
0x40021af	          0x4c89ef	                            mov rdi, r13	       944	security.c	FUNCTION_93	CALL_1
0x40021b2	      0xe800000000	                          call 0x40021b7	       944	security.c	FUNCTION_93	CALL_1
0x40021b7	            0x85c0	                           test eax, eax	       944	security.c	FUNCTION_93	CALL_1
0x40021b9	            0x74e2	                            je 0x400219d	       944	security.c	FUNCTION_93	CALL_1
0x40021bb	              0x5b	                                 pop rbx	       945	security.c	FUNCTION_93
0x40021bc	              0x5d	                                 pop rbp	       945	security.c	FUNCTION_93
0x40021bd	            0x415c	                                 pop r12	       945	security.c	FUNCTION_93
0x40021bf	            0x415d	                                 pop r13	       945	security.c	FUNCTION_93
0x40021c1	              0xc3	                                     ret	       945	security.c	FUNCTION_93
0x40021c2	              0x5b	                                 pop rbx	       945	security.c	FUNCTION_93
0x40021c3	            0x31c0	                            xor eax, eax	       943	security.c	FUNCTION_93
0x40021c5	              0x5d	                                 pop rbp	       945	security.c	FUNCTION_93
0x40021c6	            0x415c	                                 pop r12	       945	security.c	FUNCTION_93
0x40021c8	            0x415d	                                 pop r13	       945	security.c	FUNCTION_93
0x40021ca	              0xc3	                                     ret	       945	security.c	FUNCTION_93
security_inode_removexattr	IF,4:SWITCH,0:functions,0:CALL,7:FOR,0:WHILE,0:DO,0:ELSE,0	35
0x4001cf0	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       777	security.c	FUNCTION_77	IF_1	CALL_3
0x4001cf4	        0xf6400d02	                test byte [rax + 0xd], 2	       777	security.c	FUNCTION_77	IF_1	CALL_3
0x4001cf8	            0x754c	                           jne 0x4001d46	       777	security.c	FUNCTION_77	IF_1	CALL_3
0x4001cfa	            0x4154	                                push r12	       774	security.c	FUNCTION_77
0x4001cfc	              0x55	                                push rbp	       774	security.c	FUNCTION_77
0x4001cfd	          0x4989f4	                            mov r12, rsi	       774	security.c	FUNCTION_77
0x4001d00	              0x53	                                push rbx	       774	security.c	FUNCTION_77
0x4001d01	    0x488b1d000000	            mov rbx, qword [0x04001d08] 	       783	security.c	FUNCTION_77	CALL_4
0x4001d08	          0x4889fd	                            mov rbp, rdi	       783	security.c	FUNCTION_77	CALL_4
0x4001d0b	          0x4885db	                           test rbx, rbx	       783	security.c	FUNCTION_77	CALL_4
0x4001d0e	            0x750a	                           jne 0x4001d1a	       783	security.c	FUNCTION_77	CALL_4
0x4001d10	            0xeb25	                           jmp 0x4001d37	       783	security.c	FUNCTION_77	CALL_4
0x4001d12	          0x488b1b	                    mov rbx, qword [rbx]	       783	security.c	FUNCTION_77	CALL_4
0x4001d15	          0x4885db	                           test rbx, rbx	       783	security.c	FUNCTION_77	CALL_4
0x4001d18	            0x7418	                            je 0x4001d32	       783	security.c	FUNCTION_77	CALL_4
0x4001d1a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       783	security.c	FUNCTION_77	CALL_4
0x4001d1e	          0x4c89e6	                            mov rsi, r12	       783	security.c	FUNCTION_77	CALL_4
0x4001d21	          0x4889ef	                            mov rdi, rbp	       783	security.c	FUNCTION_77	CALL_4
0x4001d24	      0xe800000000	                          call 0x4001d29	       783	security.c	FUNCTION_77	CALL_4
0x4001d29	            0x85c0	                           test eax, eax	       783	security.c	FUNCTION_77	CALL_4
0x4001d2b	            0x74e5	                            je 0x4001d12	       783	security.c	FUNCTION_77	CALL_4
0x4001d2d	          0x83f801	                              cmp eax, 1	       784	security.c	FUNCTION_77	IF_2
0x4001d30	            0x7405	                            je 0x4001d37	       784	security.c	FUNCTION_77	IF_2
0x4001d32	              0x5b	                                 pop rbx	       792	security.c	FUNCTION_77
0x4001d33	              0x5d	                                 pop rbp	       792	security.c	FUNCTION_77
0x4001d34	            0x415c	                                 pop r12	       792	security.c	FUNCTION_77
0x4001d36	              0xc3	                                     ret	       792	security.c	FUNCTION_77
0x4001d37	              0x5b	                                 pop rbx	       792	security.c	FUNCTION_77
0x4001d38	          0x4c89e6	                            mov rsi, r12	       785	security.c	FUNCTION_77	CALL_5
0x4001d3b	          0x4889ef	                            mov rdi, rbp	       785	security.c	FUNCTION_77	CALL_5
0x4001d3e	              0x5d	                                 pop rbp	       792	security.c	FUNCTION_77
0x4001d3f	            0x415c	                                 pop r12	       792	security.c	FUNCTION_77
0x4001d41	      0xe900000000	                           jmp 0x4001d46	       785	security.c	FUNCTION_77	CALL_5
0x4001d46	            0x31c0	                            xor eax, eax	       778	security.c	FUNCTION_77	IF_1
0x4001d48	              0xc3	                                     ret	       778	security.c	FUNCTION_77	IF_1
security_sem_semop	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	37
0x4002f00	            0x4156	                                push r14	      1258	security.c	FUNCTION_147
0x4002f02	            0x4155	                                push r13	      1258	security.c	FUNCTION_147
0x4002f04	            0x4154	                                push r12	      1258	security.c	FUNCTION_147
0x4002f06	              0x55	                                push rbp	      1258	security.c	FUNCTION_147
0x4002f07	              0x53	                                push rbx	      1258	security.c	FUNCTION_147
0x4002f08	    0x488b1d000000	            mov rbx, qword [0x04002f0f] 	      1259	security.c	FUNCTION_147	CALL_1
0x4002f0f	          0x4885db	                           test rbx, rbx	      1259	security.c	FUNCTION_147	CALL_1
0x4002f12	            0x7436	                            je 0x4002f4a	      1259	security.c	FUNCTION_147	CALL_1
0x4002f14	          0x4989fe	                            mov r14, rdi	      1259	security.c	FUNCTION_147	CALL_1
0x4002f17	          0x4989f5	                            mov r13, rsi	      1259	security.c	FUNCTION_147	CALL_1
0x4002f1a	          0x4189d4	                           mov r12d, edx	      1259	security.c	FUNCTION_147	CALL_1
0x4002f1d	            0x89cd	                            mov ebp, ecx	      1259	security.c	FUNCTION_147	CALL_1
0x4002f1f	            0xeb08	                           jmp 0x4002f29	      1259	security.c	FUNCTION_147	CALL_1
0x4002f21	          0x488b1b	                    mov rbx, qword [rbx]	      1259	security.c	FUNCTION_147	CALL_1
0x4002f24	          0x4885db	                           test rbx, rbx	      1259	security.c	FUNCTION_147	CALL_1
0x4002f27	            0x7421	                            je 0x4002f4a	      1259	security.c	FUNCTION_147	CALL_1
0x4002f29	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1259	security.c	FUNCTION_147	CALL_1
0x4002f2d	            0x89e9	                            mov ecx, ebp	      1259	security.c	FUNCTION_147	CALL_1
0x4002f2f	          0x4489e2	                           mov edx, r12d	      1259	security.c	FUNCTION_147	CALL_1
0x4002f32	          0x4c89ee	                            mov rsi, r13	      1259	security.c	FUNCTION_147	CALL_1
0x4002f35	          0x4c89f7	                            mov rdi, r14	      1259	security.c	FUNCTION_147	CALL_1
0x4002f38	      0xe800000000	                          call 0x4002f3d	      1259	security.c	FUNCTION_147	CALL_1
0x4002f3d	            0x85c0	                           test eax, eax	      1259	security.c	FUNCTION_147	CALL_1
0x4002f3f	            0x74e0	                            je 0x4002f21	      1259	security.c	FUNCTION_147	CALL_1
0x4002f41	              0x5b	                                 pop rbx	      1260	security.c	FUNCTION_147
0x4002f42	              0x5d	                                 pop rbp	      1260	security.c	FUNCTION_147
0x4002f43	            0x415c	                                 pop r12	      1260	security.c	FUNCTION_147
0x4002f45	            0x415d	                                 pop r13	      1260	security.c	FUNCTION_147
0x4002f47	            0x415e	                                 pop r14	      1260	security.c	FUNCTION_147
0x4002f49	              0xc3	                                     ret	      1260	security.c	FUNCTION_147
0x4002f4a	              0x5b	                                 pop rbx	      1260	security.c	FUNCTION_147
0x4002f4b	            0x31c0	                            xor eax, eax	      1258	security.c	FUNCTION_147
0x4002f4d	              0x5d	                                 pop rbp	      1260	security.c	FUNCTION_147
0x4002f4e	            0x415c	                                 pop r12	      1260	security.c	FUNCTION_147
0x4002f50	            0x415d	                                 pop r13	      1260	security.c	FUNCTION_147
0x4002f52	            0x415e	                                 pop r14	      1260	security.c	FUNCTION_147
0x4002f54	              0xc3	                                     ret	      1260	security.c	FUNCTION_147
security_mmap_addr	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x4002140	              0x55	                                push rbp	       937	security.c	FUNCTION_92
0x4002141	              0x53	                                push rbx	       937	security.c	FUNCTION_92
0x4002142	          0x4889fd	                            mov rbp, rdi	       937	security.c	FUNCTION_92
0x4002145	    0x488b1d000000	            mov rbx, qword [0x0400214c] 	       938	security.c	FUNCTION_92	CALL_1
0x400214c	          0x4885db	                           test rbx, rbx	       938	security.c	FUNCTION_92	CALL_1
0x400214f	            0x750a	                           jne 0x400215b	       938	security.c	FUNCTION_92	CALL_1
0x4002151	            0xeb1b	                           jmp 0x400216e	       938	security.c	FUNCTION_92	CALL_1
0x4002153	          0x488b1b	                    mov rbx, qword [rbx]	       938	security.c	FUNCTION_92	CALL_1
0x4002156	          0x4885db	                           test rbx, rbx	       938	security.c	FUNCTION_92	CALL_1
0x4002159	            0x7413	                            je 0x400216e	       938	security.c	FUNCTION_92	CALL_1
0x400215b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       938	security.c	FUNCTION_92	CALL_1
0x400215f	          0x4889ef	                            mov rdi, rbp	       938	security.c	FUNCTION_92	CALL_1
0x4002162	      0xe800000000	                          call 0x4002167	       938	security.c	FUNCTION_92	CALL_1
0x4002167	            0x85c0	                           test eax, eax	       938	security.c	FUNCTION_92	CALL_1
0x4002169	            0x74e8	                            je 0x4002153	       938	security.c	FUNCTION_92	CALL_1
0x400216b	              0x5b	                                 pop rbx	       939	security.c	FUNCTION_92
0x400216c	              0x5d	                                 pop rbp	       939	security.c	FUNCTION_92
0x400216d	              0xc3	                                     ret	       939	security.c	FUNCTION_92
0x400216e	            0x31c0	                            xor eax, eax	       937	security.c	FUNCTION_92
0x4002170	              0x5b	                                 pop rbx	       939	security.c	FUNCTION_92
0x4002171	              0x5d	                                 pop rbp	       939	security.c	FUNCTION_92
0x4002172	              0xc3	                                     ret	       939	security.c	FUNCTION_92
security_socket_listen	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x40031b0	            0x4154	                                push r12	      1372	security.c	FUNCTION_166
0x40031b2	              0x55	                                push rbp	      1372	security.c	FUNCTION_166
0x40031b3	          0x4989fc	                            mov r12, rdi	      1372	security.c	FUNCTION_166
0x40031b6	              0x53	                                push rbx	      1372	security.c	FUNCTION_166
0x40031b7	    0x488b1d000000	            mov rbx, qword [0x040031be] 	      1373	security.c	FUNCTION_166	CALL_1
0x40031be	            0x89f5	                            mov ebp, esi	      1373	security.c	FUNCTION_166	CALL_1
0x40031c0	          0x4885db	                           test rbx, rbx	      1373	security.c	FUNCTION_166	CALL_1
0x40031c3	            0x750a	                           jne 0x40031cf	      1373	security.c	FUNCTION_166	CALL_1
0x40031c5	            0xeb1f	                           jmp 0x40031e6	      1373	security.c	FUNCTION_166	CALL_1
0x40031c7	          0x488b1b	                    mov rbx, qword [rbx]	      1373	security.c	FUNCTION_166	CALL_1
0x40031ca	          0x4885db	                           test rbx, rbx	      1373	security.c	FUNCTION_166	CALL_1
0x40031cd	            0x7417	                            je 0x40031e6	      1373	security.c	FUNCTION_166	CALL_1
0x40031cf	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1373	security.c	FUNCTION_166	CALL_1
0x40031d3	            0x89ee	                            mov esi, ebp	      1373	security.c	FUNCTION_166	CALL_1
0x40031d5	          0x4c89e7	                            mov rdi, r12	      1373	security.c	FUNCTION_166	CALL_1
0x40031d8	      0xe800000000	                          call 0x40031dd	      1373	security.c	FUNCTION_166	CALL_1
0x40031dd	            0x85c0	                           test eax, eax	      1373	security.c	FUNCTION_166	CALL_1
0x40031df	            0x74e6	                            je 0x40031c7	      1373	security.c	FUNCTION_166	CALL_1
0x40031e1	              0x5b	                                 pop rbx	      1374	security.c	FUNCTION_166
0x40031e2	              0x5d	                                 pop rbp	      1374	security.c	FUNCTION_166
0x40031e3	            0x415c	                                 pop r12	      1374	security.c	FUNCTION_166
0x40031e5	              0xc3	                                     ret	      1374	security.c	FUNCTION_166
0x40031e6	              0x5b	                                 pop rbx	      1374	security.c	FUNCTION_166
0x40031e7	            0x31c0	                            xor eax, eax	      1372	security.c	FUNCTION_166
0x40031e9	              0x5d	                                 pop rbp	      1374	security.c	FUNCTION_166
0x40031ea	            0x415c	                                 pop r12	      1374	security.c	FUNCTION_166
0x40031ec	              0xc3	                                     ret	      1374	security.c	FUNCTION_166
security_quotactl	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	37
0x4001270	            0x4156	                                push r14	       294	security.c	FUNCTION_21
0x4001272	            0x4155	                                push r13	       294	security.c	FUNCTION_21
0x4001274	            0x4154	                                push r12	       294	security.c	FUNCTION_21
0x4001276	              0x55	                                push rbp	       294	security.c	FUNCTION_21
0x4001277	              0x53	                                push rbx	       294	security.c	FUNCTION_21
0x4001278	    0x488b1d000000	            mov rbx, qword [0x0400127f] 	       295	security.c	FUNCTION_21	CALL_1
0x400127f	          0x4885db	                           test rbx, rbx	       295	security.c	FUNCTION_21	CALL_1
0x4001282	            0x7438	                            je 0x40012bc	       295	security.c	FUNCTION_21	CALL_1
0x4001284	          0x4189fe	                           mov r14d, edi	       295	security.c	FUNCTION_21	CALL_1
0x4001287	          0x4189f5	                           mov r13d, esi	       295	security.c	FUNCTION_21	CALL_1
0x400128a	          0x4189d4	                           mov r12d, edx	       295	security.c	FUNCTION_21	CALL_1
0x400128d	          0x4889cd	                            mov rbp, rcx	       295	security.c	FUNCTION_21	CALL_1
0x4001290	            0xeb08	                           jmp 0x400129a	       295	security.c	FUNCTION_21	CALL_1
0x4001292	          0x488b1b	                    mov rbx, qword [rbx]	       295	security.c	FUNCTION_21	CALL_1
0x4001295	          0x4885db	                           test rbx, rbx	       295	security.c	FUNCTION_21	CALL_1
0x4001298	            0x7422	                            je 0x40012bc	       295	security.c	FUNCTION_21	CALL_1
0x400129a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       295	security.c	FUNCTION_21	CALL_1
0x400129e	          0x4889e9	                            mov rcx, rbp	       295	security.c	FUNCTION_21	CALL_1
0x40012a1	          0x4489e2	                           mov edx, r12d	       295	security.c	FUNCTION_21	CALL_1
0x40012a4	          0x4489ee	                           mov esi, r13d	       295	security.c	FUNCTION_21	CALL_1
0x40012a7	          0x4489f7	                           mov edi, r14d	       295	security.c	FUNCTION_21	CALL_1
0x40012aa	      0xe800000000	                          call 0x40012af	       295	security.c	FUNCTION_21	CALL_1
0x40012af	            0x85c0	                           test eax, eax	       295	security.c	FUNCTION_21	CALL_1
0x40012b1	            0x74df	                            je 0x4001292	       295	security.c	FUNCTION_21	CALL_1
0x40012b3	              0x5b	                                 pop rbx	       296	security.c	FUNCTION_21
0x40012b4	              0x5d	                                 pop rbp	       296	security.c	FUNCTION_21
0x40012b5	            0x415c	                                 pop r12	       296	security.c	FUNCTION_21
0x40012b7	            0x415d	                                 pop r13	       296	security.c	FUNCTION_21
0x40012b9	            0x415e	                                 pop r14	       296	security.c	FUNCTION_21
0x40012bb	              0xc3	                                     ret	       296	security.c	FUNCTION_21
0x40012bc	              0x5b	                                 pop rbx	       296	security.c	FUNCTION_21
0x40012bd	            0x31c0	                            xor eax, eax	       294	security.c	FUNCTION_21
0x40012bf	              0x5d	                                 pop rbp	       296	security.c	FUNCTION_21
0x40012c0	            0x415c	                                 pop r12	       296	security.c	FUNCTION_21
0x40012c2	            0x415d	                                 pop r13	       296	security.c	FUNCTION_21
0x40012c4	            0x415e	                                 pop r14	       296	security.c	FUNCTION_21
0x40012c6	              0xc3	                                     ret	       296	security.c	FUNCTION_21
security_inode_follow_link	IF,1:SWITCH,0:functions,0:CALL,3:FOR,0:WHILE,0:DO,0:ELSE,0	36
0x4001a70	        0xf6460d02	                test byte [rsi + 0xd], 2	       694	security.c	FUNCTION_69	IF_1	CALL_2
0x4001a74	            0x754a	                           jne 0x4001ac0	       694	security.c	FUNCTION_69	IF_1	CALL_2
0x4001a76	            0x4155	                                push r13	       693	security.c	FUNCTION_69
0x4001a78	            0x4154	                                push r12	       693	security.c	FUNCTION_69
0x4001a7a	              0x55	                                push rbp	       693	security.c	FUNCTION_69
0x4001a7b	              0x53	                                push rbx	       693	security.c	FUNCTION_69
0x4001a7c	    0x488b1d000000	            mov rbx, qword [0x04001a83] 	       696	security.c	FUNCTION_69	CALL_3
0x4001a83	          0x4885db	                           test rbx, rbx	       696	security.c	FUNCTION_69	CALL_3
0x4001a86	            0x742f	                            je 0x4001ab7	       696	security.c	FUNCTION_69	CALL_3
0x4001a88	          0x4989f4	                            mov r12, rsi	       696	security.c	FUNCTION_69	CALL_3
0x4001a8b	          0x4989fd	                            mov r13, rdi	       696	security.c	FUNCTION_69	CALL_3
0x4001a8e	           0xfb6ea	                           movzx ebp, dl	       696	security.c	FUNCTION_69	CALL_3
0x4001a91	            0xeb08	                           jmp 0x4001a9b	       696	security.c	FUNCTION_69	CALL_3
0x4001a93	          0x488b1b	                    mov rbx, qword [rbx]	       696	security.c	FUNCTION_69	CALL_3
0x4001a96	          0x4885db	                           test rbx, rbx	       696	security.c	FUNCTION_69	CALL_3
0x4001a99	            0x741c	                            je 0x4001ab7	       696	security.c	FUNCTION_69	CALL_3
0x4001a9b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       696	security.c	FUNCTION_69	CALL_3
0x4001a9f	            0x89ea	                            mov edx, ebp	       696	security.c	FUNCTION_69	CALL_3
0x4001aa1	          0x4c89e6	                            mov rsi, r12	       696	security.c	FUNCTION_69	CALL_3
0x4001aa4	          0x4c89ef	                            mov rdi, r13	       696	security.c	FUNCTION_69	CALL_3
0x4001aa7	      0xe800000000	                          call 0x4001aac	       696	security.c	FUNCTION_69	CALL_3
0x4001aac	            0x85c0	                           test eax, eax	       696	security.c	FUNCTION_69	CALL_3
0x4001aae	            0x74e3	                            je 0x4001a93	       696	security.c	FUNCTION_69	CALL_3
0x4001ab0	              0x5b	                                 pop rbx	       697	security.c	FUNCTION_69
0x4001ab1	              0x5d	                                 pop rbp	       697	security.c	FUNCTION_69
0x4001ab2	            0x415c	                                 pop r12	       697	security.c	FUNCTION_69
0x4001ab4	            0x415d	                                 pop r13	       697	security.c	FUNCTION_69
0x4001ab6	              0xc3	                                     ret	       697	security.c	FUNCTION_69
0x4001ab7	              0x5b	                                 pop rbx	       697	security.c	FUNCTION_69
0x4001ab8	            0x31c0	                            xor eax, eax	       695	security.c	FUNCTION_69	IF_1
0x4001aba	              0x5d	                                 pop rbp	       697	security.c	FUNCTION_69
0x4001abb	            0x415c	                                 pop r12	       697	security.c	FUNCTION_69
0x4001abd	            0x415d	                                 pop r13	       697	security.c	FUNCTION_69
0x4001abf	              0xc3	                                     ret	       697	security.c	FUNCTION_69
0x4001ac0	            0x31c0	                            xor eax, eax	       695	security.c	FUNCTION_69	IF_1
0x4001ac2	              0xc3	                                     ret	       697	security.c	FUNCTION_69
security_unix_stream_connect	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x4000640	            0x4155	                                push r13	      1338	security.c	FUNCTION_160
0x4000642	            0x4154	                                push r12	      1338	security.c	FUNCTION_160
0x4000644	              0x55	                                push rbp	      1338	security.c	FUNCTION_160
0x4000645	              0x53	                                push rbx	      1338	security.c	FUNCTION_160
0x4000646	    0x488b1d000000	            mov rbx, qword [0x0400064d] 	      1339	security.c	FUNCTION_160	CALL_1
0x400064d	          0x4885db	                           test rbx, rbx	      1339	security.c	FUNCTION_160	CALL_1
0x4000650	            0x7430	                            je 0x4000682	      1339	security.c	FUNCTION_160	CALL_1
0x4000652	          0x4989fd	                            mov r13, rdi	      1339	security.c	FUNCTION_160	CALL_1
0x4000655	          0x4989f4	                            mov r12, rsi	      1339	security.c	FUNCTION_160	CALL_1
0x4000658	          0x4889d5	                            mov rbp, rdx	      1339	security.c	FUNCTION_160	CALL_1
0x400065b	            0xeb08	                           jmp 0x4000665	      1339	security.c	FUNCTION_160	CALL_1
0x400065d	          0x488b1b	                    mov rbx, qword [rbx]	      1339	security.c	FUNCTION_160	CALL_1
0x4000660	          0x4885db	                           test rbx, rbx	      1339	security.c	FUNCTION_160	CALL_1
0x4000663	            0x741d	                            je 0x4000682	      1339	security.c	FUNCTION_160	CALL_1
0x4000665	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1339	security.c	FUNCTION_160	CALL_1
0x4000669	          0x4889ea	                            mov rdx, rbp	      1339	security.c	FUNCTION_160	CALL_1
0x400066c	          0x4c89e6	                            mov rsi, r12	      1339	security.c	FUNCTION_160	CALL_1
0x400066f	          0x4c89ef	                            mov rdi, r13	      1339	security.c	FUNCTION_160	CALL_1
0x4000672	      0xe800000000	                          call 0x4000677	      1339	security.c	FUNCTION_160	CALL_1
0x4000677	            0x85c0	                           test eax, eax	      1339	security.c	FUNCTION_160	CALL_1
0x4000679	            0x74e2	                            je 0x400065d	      1339	security.c	FUNCTION_160	CALL_1
0x400067b	              0x5b	                                 pop rbx	      1340	security.c	FUNCTION_160
0x400067c	              0x5d	                                 pop rbp	      1340	security.c	FUNCTION_160
0x400067d	            0x415c	                                 pop r12	      1340	security.c	FUNCTION_160
0x400067f	            0x415d	                                 pop r13	      1340	security.c	FUNCTION_160
0x4000681	              0xc3	                                     ret	      1340	security.c	FUNCTION_160
0x4000682	              0x5b	                                 pop rbx	      1340	security.c	FUNCTION_160
0x4000683	            0x31c0	                            xor eax, eax	      1338	security.c	FUNCTION_160
0x4000685	              0x5d	                                 pop rbp	      1340	security.c	FUNCTION_160
0x4000686	            0x415c	                                 pop r12	      1340	security.c	FUNCTION_160
0x4000688	            0x415d	                                 pop r13	      1340	security.c	FUNCTION_160
0x400068a	              0xc3	                                     ret	      1340	security.c	FUNCTION_160
security_inet_conn_request	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x4000860	            0x4155	                                push r13	      1473	security.c	FUNCTION_184
0x4000862	            0x4154	                                push r12	      1473	security.c	FUNCTION_184
0x4000864	              0x55	                                push rbp	      1473	security.c	FUNCTION_184
0x4000865	              0x53	                                push rbx	      1473	security.c	FUNCTION_184
0x4000866	    0x488b1d000000	            mov rbx, qword [0x0400086d] 	      1474	security.c	FUNCTION_184	CALL_1
0x400086d	          0x4885db	                           test rbx, rbx	      1474	security.c	FUNCTION_184	CALL_1
0x4000870	            0x7430	                            je 0x40008a2	      1474	security.c	FUNCTION_184	CALL_1
0x4000872	          0x4989fd	                            mov r13, rdi	      1474	security.c	FUNCTION_184	CALL_1
0x4000875	          0x4989f4	                            mov r12, rsi	      1474	security.c	FUNCTION_184	CALL_1
0x4000878	          0x4889d5	                            mov rbp, rdx	      1474	security.c	FUNCTION_184	CALL_1
0x400087b	            0xeb08	                           jmp 0x4000885	      1474	security.c	FUNCTION_184	CALL_1
0x400087d	          0x488b1b	                    mov rbx, qword [rbx]	      1474	security.c	FUNCTION_184	CALL_1
0x4000880	          0x4885db	                           test rbx, rbx	      1474	security.c	FUNCTION_184	CALL_1
0x4000883	            0x741d	                            je 0x40008a2	      1474	security.c	FUNCTION_184	CALL_1
0x4000885	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1474	security.c	FUNCTION_184	CALL_1
0x4000889	          0x4889ea	                            mov rdx, rbp	      1474	security.c	FUNCTION_184	CALL_1
0x400088c	          0x4c89e6	                            mov rsi, r12	      1474	security.c	FUNCTION_184	CALL_1
0x400088f	          0x4c89ef	                            mov rdi, r13	      1474	security.c	FUNCTION_184	CALL_1
0x4000892	      0xe800000000	                          call 0x4000897	      1474	security.c	FUNCTION_184	CALL_1
0x4000897	            0x85c0	                           test eax, eax	      1474	security.c	FUNCTION_184	CALL_1
0x4000899	            0x74e2	                            je 0x400087d	      1474	security.c	FUNCTION_184	CALL_1
0x400089b	              0x5b	                                 pop rbx	      1475	security.c	FUNCTION_184
0x400089c	              0x5d	                                 pop rbp	      1475	security.c	FUNCTION_184
0x400089d	            0x415c	                                 pop r12	      1475	security.c	FUNCTION_184
0x400089f	            0x415d	                                 pop r13	      1475	security.c	FUNCTION_184
0x40008a1	              0xc3	                                     ret	      1475	security.c	FUNCTION_184
0x40008a2	              0x5b	                                 pop rbx	      1475	security.c	FUNCTION_184
0x40008a3	            0x31c0	                            xor eax, eax	      1473	security.c	FUNCTION_184
0x40008a5	              0x5d	                                 pop rbp	      1475	security.c	FUNCTION_184
0x40008a6	            0x415c	                                 pop r12	      1475	security.c	FUNCTION_184
0x40008a8	            0x415d	                                 pop r13	      1475	security.c	FUNCTION_184
0x40008aa	              0xc3	                                     ret	      1475	security.c	FUNCTION_184
security_inode_notifysecctx	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x4000550	            0x4155	                                push r13	      1318	security.c	FUNCTION_157
0x4000552	            0x4154	                                push r12	      1318	security.c	FUNCTION_157
0x4000554	              0x55	                                push rbp	      1318	security.c	FUNCTION_157
0x4000555	              0x53	                                push rbx	      1318	security.c	FUNCTION_157
0x4000556	    0x488b1d000000	            mov rbx, qword [0x0400055d] 	      1319	security.c	FUNCTION_157	CALL_1
0x400055d	          0x4885db	                           test rbx, rbx	      1319	security.c	FUNCTION_157	CALL_1
0x4000560	            0x742e	                            je 0x4000590	      1319	security.c	FUNCTION_157	CALL_1
0x4000562	          0x4989fd	                            mov r13, rdi	      1319	security.c	FUNCTION_157	CALL_1
0x4000565	          0x4989f4	                            mov r12, rsi	      1319	security.c	FUNCTION_157	CALL_1
0x4000568	            0x89d5	                            mov ebp, edx	      1319	security.c	FUNCTION_157	CALL_1
0x400056a	            0xeb08	                           jmp 0x4000574	      1319	security.c	FUNCTION_157	CALL_1
0x400056c	          0x488b1b	                    mov rbx, qword [rbx]	      1319	security.c	FUNCTION_157	CALL_1
0x400056f	          0x4885db	                           test rbx, rbx	      1319	security.c	FUNCTION_157	CALL_1
0x4000572	            0x741c	                            je 0x4000590	      1319	security.c	FUNCTION_157	CALL_1
0x4000574	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1319	security.c	FUNCTION_157	CALL_1
0x4000578	            0x89ea	                            mov edx, ebp	      1319	security.c	FUNCTION_157	CALL_1
0x400057a	          0x4c89e6	                            mov rsi, r12	      1319	security.c	FUNCTION_157	CALL_1
0x400057d	          0x4c89ef	                            mov rdi, r13	      1319	security.c	FUNCTION_157	CALL_1
0x4000580	      0xe800000000	                          call 0x4000585	      1319	security.c	FUNCTION_157	CALL_1
0x4000585	            0x85c0	                           test eax, eax	      1319	security.c	FUNCTION_157	CALL_1
0x4000587	            0x74e3	                            je 0x400056c	      1319	security.c	FUNCTION_157	CALL_1
0x4000589	              0x5b	                                 pop rbx	      1320	security.c	FUNCTION_157
0x400058a	              0x5d	                                 pop rbp	      1320	security.c	FUNCTION_157
0x400058b	            0x415c	                                 pop r12	      1320	security.c	FUNCTION_157
0x400058d	            0x415d	                                 pop r13	      1320	security.c	FUNCTION_157
0x400058f	              0xc3	                                     ret	      1320	security.c	FUNCTION_157
0x4000590	              0x5b	                                 pop rbx	      1320	security.c	FUNCTION_157
0x4000591	            0x31c0	                            xor eax, eax	      1318	security.c	FUNCTION_157
0x4000593	              0x5d	                                 pop rbp	      1320	security.c	FUNCTION_157
0x4000594	            0x415c	                                 pop r12	      1320	security.c	FUNCTION_157
0x4000596	            0x415d	                                 pop r13	      1320	security.c	FUNCTION_157
0x4000598	              0xc3	                                     ret	      1320	security.c	FUNCTION_157
security_inode_free	IF,0:SWITCH,0:functions,0:CALL,2:FOR,0:WHILE,0:DO,0:ELSE,0	16
0x4001780	              0x55	                                push rbp	       447	security.c	FUNCTION_44
0x4001781	              0x53	                                push rbx	       447	security.c	FUNCTION_44
0x4001782	          0x4889fd	                            mov rbp, rdi	       447	security.c	FUNCTION_44
0x4001785	      0xe800000000	                          call 0x400178a	       448	security.c	FUNCTION_44	CALL_1
0x400178a	    0x488b1d000000	            mov rbx, qword [0x04001791] 	       449	security.c	FUNCTION_44	CALL_2
0x4001791	          0x4885db	                           test rbx, rbx	       449	security.c	FUNCTION_44	CALL_2
0x4001794	            0x7414	                            je 0x40017aa	       449	security.c	FUNCTION_44	CALL_2
0x4001796	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       449	security.c	FUNCTION_44	CALL_2
0x400179a	          0x4889ef	                            mov rdi, rbp	       449	security.c	FUNCTION_44	CALL_2
0x400179d	      0xe800000000	                          call 0x40017a2	       449	security.c	FUNCTION_44	CALL_2
0x40017a2	          0x488b1b	                    mov rbx, qword [rbx]	       449	security.c	FUNCTION_44	CALL_2
0x40017a5	          0x4885db	                           test rbx, rbx	       449	security.c	FUNCTION_44	CALL_2
0x40017a8	            0x75ec	                           jne 0x4001796	       449	security.c	FUNCTION_44	CALL_2
0x40017aa	              0x5b	                                 pop rbx	       450	security.c	FUNCTION_44
0x40017ab	              0x5d	                                 pop rbp	       450	security.c	FUNCTION_44
0x40017ac	              0xc3	                                     ret	       450	security.c	FUNCTION_44
security_task_setnice	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x40026f0	            0x4154	                                push r12	      1088	security.c	FUNCTION_117
0x40026f2	              0x55	                                push rbp	      1088	security.c	FUNCTION_117
0x40026f3	          0x4989fc	                            mov r12, rdi	      1088	security.c	FUNCTION_117
0x40026f6	              0x53	                                push rbx	      1088	security.c	FUNCTION_117
0x40026f7	    0x488b1d000000	            mov rbx, qword [0x040026fe] 	      1089	security.c	FUNCTION_117	CALL_1
0x40026fe	            0x89f5	                            mov ebp, esi	      1089	security.c	FUNCTION_117	CALL_1
0x4002700	          0x4885db	                           test rbx, rbx	      1089	security.c	FUNCTION_117	CALL_1
0x4002703	            0x750a	                           jne 0x400270f	      1089	security.c	FUNCTION_117	CALL_1
0x4002705	            0xeb1f	                           jmp 0x4002726	      1089	security.c	FUNCTION_117	CALL_1
0x4002707	          0x488b1b	                    mov rbx, qword [rbx]	      1089	security.c	FUNCTION_117	CALL_1
0x400270a	          0x4885db	                           test rbx, rbx	      1089	security.c	FUNCTION_117	CALL_1
0x400270d	            0x7417	                            je 0x4002726	      1089	security.c	FUNCTION_117	CALL_1
0x400270f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1089	security.c	FUNCTION_117	CALL_1
0x4002713	            0x89ee	                            mov esi, ebp	      1089	security.c	FUNCTION_117	CALL_1
0x4002715	          0x4c89e7	                            mov rdi, r12	      1089	security.c	FUNCTION_117	CALL_1
0x4002718	      0xe800000000	                          call 0x400271d	      1089	security.c	FUNCTION_117	CALL_1
0x400271d	            0x85c0	                           test eax, eax	      1089	security.c	FUNCTION_117	CALL_1
0x400271f	            0x74e6	                            je 0x4002707	      1089	security.c	FUNCTION_117	CALL_1
0x4002721	              0x5b	                                 pop rbx	      1090	security.c	FUNCTION_117
0x4002722	              0x5d	                                 pop rbp	      1090	security.c	FUNCTION_117
0x4002723	            0x415c	                                 pop r12	      1090	security.c	FUNCTION_117
0x4002725	              0xc3	                                     ret	      1090	security.c	FUNCTION_117
0x4002726	              0x5b	                                 pop rbx	      1090	security.c	FUNCTION_117
0x4002727	            0x31c0	                            xor eax, eax	      1088	security.c	FUNCTION_117
0x4002729	              0x5d	                                 pop rbp	      1090	security.c	FUNCTION_117
0x400272a	            0x415c	                                 pop r12	      1090	security.c	FUNCTION_117
0x400272c	              0xc3	                                     ret	      1090	security.c	FUNCTION_117
security_sb_remount	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4001540	            0x4154	                                push r12	       378	security.c	FUNCTION_33
0x4001542	              0x55	                                push rbp	       378	security.c	FUNCTION_33
0x4001543	          0x4989fc	                            mov r12, rdi	       378	security.c	FUNCTION_33
0x4001546	              0x53	                                push rbx	       378	security.c	FUNCTION_33
0x4001547	    0x488b1d000000	            mov rbx, qword [0x0400154e] 	       379	security.c	FUNCTION_33	CALL_1
0x400154e	          0x4889f5	                            mov rbp, rsi	       379	security.c	FUNCTION_33	CALL_1
0x4001551	          0x4885db	                           test rbx, rbx	       379	security.c	FUNCTION_33	CALL_1
0x4001554	            0x750a	                           jne 0x4001560	       379	security.c	FUNCTION_33	CALL_1
0x4001556	            0xeb20	                           jmp 0x4001578	       379	security.c	FUNCTION_33	CALL_1
0x4001558	          0x488b1b	                    mov rbx, qword [rbx]	       379	security.c	FUNCTION_33	CALL_1
0x400155b	          0x4885db	                           test rbx, rbx	       379	security.c	FUNCTION_33	CALL_1
0x400155e	            0x7418	                            je 0x4001578	       379	security.c	FUNCTION_33	CALL_1
0x4001560	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       379	security.c	FUNCTION_33	CALL_1
0x4001564	          0x4889ee	                            mov rsi, rbp	       379	security.c	FUNCTION_33	CALL_1
0x4001567	          0x4c89e7	                            mov rdi, r12	       379	security.c	FUNCTION_33	CALL_1
0x400156a	      0xe800000000	                          call 0x400156f	       379	security.c	FUNCTION_33	CALL_1
0x400156f	            0x85c0	                           test eax, eax	       379	security.c	FUNCTION_33	CALL_1
0x4001571	            0x74e5	                            je 0x4001558	       379	security.c	FUNCTION_33	CALL_1
0x4001573	              0x5b	                                 pop rbx	       380	security.c	FUNCTION_33
0x4001574	              0x5d	                                 pop rbp	       380	security.c	FUNCTION_33
0x4001575	            0x415c	                                 pop r12	       380	security.c	FUNCTION_33
0x4001577	              0xc3	                                     ret	       380	security.c	FUNCTION_33
0x4001578	              0x5b	                                 pop rbx	       380	security.c	FUNCTION_33
0x4001579	            0x31c0	                            xor eax, eax	       378	security.c	FUNCTION_33
0x400157b	              0x5d	                                 pop rbp	       380	security.c	FUNCTION_33
0x400157c	            0x415c	                                 pop r12	       380	security.c	FUNCTION_33
0x400157e	              0xc3	                                     ret	       380	security.c	FUNCTION_33
security_bprm_committed_creds	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	15
0x40014a0	              0x55	                                push rbp	       357	security.c	FUNCTION_29
0x40014a1	              0x53	                                push rbx	       357	security.c	FUNCTION_29
0x40014a2	    0x488b1d000000	            mov rbx, qword [0x040014a9] 	       358	security.c	FUNCTION_29	CALL_1
0x40014a9	          0x4885db	                           test rbx, rbx	       358	security.c	FUNCTION_29	CALL_1
0x40014ac	            0x7417	                            je 0x40014c5	       358	security.c	FUNCTION_29	CALL_1
0x40014ae	          0x4889fd	                            mov rbp, rdi	       358	security.c	FUNCTION_29	CALL_1
0x40014b1	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       358	security.c	FUNCTION_29	CALL_1
0x40014b5	          0x4889ef	                            mov rdi, rbp	       358	security.c	FUNCTION_29	CALL_1
0x40014b8	      0xe800000000	                          call 0x40014bd	       358	security.c	FUNCTION_29	CALL_1
0x40014bd	          0x488b1b	                    mov rbx, qword [rbx]	       358	security.c	FUNCTION_29	CALL_1
0x40014c0	          0x4885db	                           test rbx, rbx	       358	security.c	FUNCTION_29	CALL_1
0x40014c3	            0x75ec	                           jne 0x40014b1	       358	security.c	FUNCTION_29	CALL_1
0x40014c5	              0x5b	                                 pop rbx	       359	security.c	FUNCTION_29
0x40014c6	              0x5d	                                 pop rbp	       359	security.c	FUNCTION_29
0x40014c7	              0xc3	                                     ret	       359	security.c	FUNCTION_29
security_file_send_sigiotask	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x4002290	            0x4155	                                push r13	       964	security.c	FUNCTION_97
0x4002292	            0x4154	                                push r12	       964	security.c	FUNCTION_97
0x4002294	              0x55	                                push rbp	       964	security.c	FUNCTION_97
0x4002295	              0x53	                                push rbx	       964	security.c	FUNCTION_97
0x4002296	    0x488b1d000000	            mov rbx, qword [0x0400229d] 	       965	security.c	FUNCTION_97	CALL_1
0x400229d	          0x4885db	                           test rbx, rbx	       965	security.c	FUNCTION_97	CALL_1
0x40022a0	            0x742e	                            je 0x40022d0	       965	security.c	FUNCTION_97	CALL_1
0x40022a2	          0x4989fd	                            mov r13, rdi	       965	security.c	FUNCTION_97	CALL_1
0x40022a5	          0x4989f4	                            mov r12, rsi	       965	security.c	FUNCTION_97	CALL_1
0x40022a8	            0x89d5	                            mov ebp, edx	       965	security.c	FUNCTION_97	CALL_1
0x40022aa	            0xeb08	                           jmp 0x40022b4	       965	security.c	FUNCTION_97	CALL_1
0x40022ac	          0x488b1b	                    mov rbx, qword [rbx]	       965	security.c	FUNCTION_97	CALL_1
0x40022af	          0x4885db	                           test rbx, rbx	       965	security.c	FUNCTION_97	CALL_1
0x40022b2	            0x741c	                            je 0x40022d0	       965	security.c	FUNCTION_97	CALL_1
0x40022b4	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       965	security.c	FUNCTION_97	CALL_1
0x40022b8	            0x89ea	                            mov edx, ebp	       965	security.c	FUNCTION_97	CALL_1
0x40022ba	          0x4c89e6	                            mov rsi, r12	       965	security.c	FUNCTION_97	CALL_1
0x40022bd	          0x4c89ef	                            mov rdi, r13	       965	security.c	FUNCTION_97	CALL_1
0x40022c0	      0xe800000000	                          call 0x40022c5	       965	security.c	FUNCTION_97	CALL_1
0x40022c5	            0x85c0	                           test eax, eax	       965	security.c	FUNCTION_97	CALL_1
0x40022c7	            0x74e3	                            je 0x40022ac	       965	security.c	FUNCTION_97	CALL_1
0x40022c9	              0x5b	                                 pop rbx	       966	security.c	FUNCTION_97
0x40022ca	              0x5d	                                 pop rbp	       966	security.c	FUNCTION_97
0x40022cb	            0x415c	                                 pop r12	       966	security.c	FUNCTION_97
0x40022cd	            0x415d	                                 pop r13	       966	security.c	FUNCTION_97
0x40022cf	              0xc3	                                     ret	       966	security.c	FUNCTION_97
0x40022d0	              0x5b	                                 pop rbx	       966	security.c	FUNCTION_97
0x40022d1	            0x31c0	                            xor eax, eax	       964	security.c	FUNCTION_97
0x40022d3	              0x5d	                                 pop rbp	       966	security.c	FUNCTION_97
0x40022d4	            0x415c	                                 pop r12	       966	security.c	FUNCTION_97
0x40022d6	            0x415d	                                 pop r13	       966	security.c	FUNCTION_97
0x40022d8	              0xc3	                                     ret	       966	security.c	FUNCTION_97
security_kernel_post_read_file	IF,1:SWITCH,0:functions,0:CALL,2:FOR,0:WHILE,0:DO,0:ELSE,0	37
0x4000360	            0x4156	                                push r14	      1049	security.c	FUNCTION_111
0x4000362	            0x4155	                                push r13	      1049	security.c	FUNCTION_111
0x4000364	            0x4154	                                push r12	      1049	security.c	FUNCTION_111
0x4000366	              0x55	                                push rbp	      1049	security.c	FUNCTION_111
0x4000367	              0x53	                                push rbx	      1049	security.c	FUNCTION_111
0x4000368	    0x488b1d000000	            mov rbx, qword [0x0400036f] 	      1052	security.c	FUNCTION_111	CALL_1
0x400036f	          0x4885db	                           test rbx, rbx	      1052	security.c	FUNCTION_111	CALL_1
0x4000372	            0x7436	                            je 0x40003aa	      1052	security.c	FUNCTION_111	CALL_1
0x4000374	          0x4989fe	                            mov r14, rdi	      1052	security.c	FUNCTION_111	CALL_1
0x4000377	          0x4989f5	                            mov r13, rsi	      1052	security.c	FUNCTION_111	CALL_1
0x400037a	          0x4989d4	                            mov r12, rdx	      1052	security.c	FUNCTION_111	CALL_1
0x400037d	            0x89cd	                            mov ebp, ecx	      1052	security.c	FUNCTION_111	CALL_1
0x400037f	            0xeb08	                           jmp 0x4000389	      1052	security.c	FUNCTION_111	CALL_1
0x4000381	          0x488b1b	                    mov rbx, qword [rbx]	      1052	security.c	FUNCTION_111	CALL_1
0x4000384	          0x4885db	                           test rbx, rbx	      1052	security.c	FUNCTION_111	CALL_1
0x4000387	            0x7421	                            je 0x40003aa	      1052	security.c	FUNCTION_111	CALL_1
0x4000389	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1052	security.c	FUNCTION_111	CALL_1
0x400038d	            0x89e9	                            mov ecx, ebp	      1052	security.c	FUNCTION_111	CALL_1
0x400038f	          0x4c89e2	                            mov rdx, r12	      1052	security.c	FUNCTION_111	CALL_1
0x4000392	          0x4c89ee	                            mov rsi, r13	      1052	security.c	FUNCTION_111	CALL_1
0x4000395	          0x4c89f7	                            mov rdi, r14	      1052	security.c	FUNCTION_111	CALL_1
0x4000398	      0xe800000000	                          call 0x400039d	      1052	security.c	FUNCTION_111	CALL_1
0x400039d	            0x85c0	                           test eax, eax	      1052	security.c	FUNCTION_111	CALL_1
0x400039f	            0x74e0	                            je 0x4000381	      1052	security.c	FUNCTION_111	CALL_1
0x40003a1	              0x5b	                                 pop rbx	      1056	security.c	FUNCTION_111
0x40003a2	              0x5d	                                 pop rbp	      1056	security.c	FUNCTION_111
0x40003a3	            0x415c	                                 pop r12	      1056	security.c	FUNCTION_111
0x40003a5	            0x415d	                                 pop r13	      1056	security.c	FUNCTION_111
0x40003a7	            0x415e	                                 pop r14	      1056	security.c	FUNCTION_111
0x40003a9	              0xc3	                                     ret	      1056	security.c	FUNCTION_111
0x40003aa	              0x5b	                                 pop rbx	      1056	security.c	FUNCTION_111
0x40003ab	            0x31c0	                            xor eax, eax	      1055	security.c	FUNCTION_111	CALL_2
0x40003ad	              0x5d	                                 pop rbp	      1056	security.c	FUNCTION_111
0x40003ae	            0x415c	                                 pop r12	      1056	security.c	FUNCTION_111
0x40003b0	            0x415d	                                 pop r13	      1056	security.c	FUNCTION_111
0x40003b2	            0x415e	                                 pop r14	      1056	security.c	FUNCTION_111
0x40003b4	              0xc3	                                     ret	      1056	security.c	FUNCTION_111
security_key_getsecurity	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	28
0x4003620	            0x4154	                                push r12	      1711	security.c	FUNCTION_218
0x4003622	              0x55	                                push rbp	      1711	security.c	FUNCTION_218
0x4003623	          0x4989fc	                            mov r12, rdi	      1711	security.c	FUNCTION_218
0x4003626	              0x53	                                push rbx	      1711	security.c	FUNCTION_218
0x4003627	    0x48c706000000	                      mov qword [rsi], 0	      1712	security.c	FUNCTION_218
0x400362e	          0x4889f5	                            mov rbp, rsi	      1712	security.c	FUNCTION_218
0x4003631	    0x488b1d000000	            mov rbx, qword [0x04003638] 	      1713	security.c	FUNCTION_218	CALL_1
0x4003638	          0x4885db	                           test rbx, rbx	      1713	security.c	FUNCTION_218	CALL_1
0x400363b	            0x750a	                           jne 0x4003647	      1713	security.c	FUNCTION_218	CALL_1
0x400363d	            0xeb20	                           jmp 0x400365f	      1713	security.c	FUNCTION_218	CALL_1
0x400363f	          0x488b1b	                    mov rbx, qword [rbx]	      1713	security.c	FUNCTION_218	CALL_1
0x4003642	          0x4885db	                           test rbx, rbx	      1713	security.c	FUNCTION_218	CALL_1
0x4003645	            0x7418	                            je 0x400365f	      1713	security.c	FUNCTION_218	CALL_1
0x4003647	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1713	security.c	FUNCTION_218	CALL_1
0x400364b	          0x4889ee	                            mov rsi, rbp	      1713	security.c	FUNCTION_218	CALL_1
0x400364e	          0x4c89e7	                            mov rdi, r12	      1713	security.c	FUNCTION_218	CALL_1
0x4003651	      0xe800000000	                          call 0x4003656	      1713	security.c	FUNCTION_218	CALL_1
0x4003656	            0x85c0	                           test eax, eax	      1713	security.c	FUNCTION_218	CALL_1
0x4003658	            0x74e5	                            je 0x400363f	      1713	security.c	FUNCTION_218	CALL_1
0x400365a	              0x5b	                                 pop rbx	      1714	security.c	FUNCTION_218
0x400365b	              0x5d	                                 pop rbp	      1714	security.c	FUNCTION_218
0x400365c	            0x415c	                                 pop r12	      1714	security.c	FUNCTION_218
0x400365e	              0xc3	                                     ret	      1714	security.c	FUNCTION_218
0x400365f	              0x5b	                                 pop rbx	      1714	security.c	FUNCTION_218
0x4003660	            0x31c0	                            xor eax, eax	      1711	security.c	FUNCTION_218
0x4003662	              0x5d	                                 pop rbp	      1714	security.c	FUNCTION_218
0x4003663	            0x415c	                                 pop r12	      1714	security.c	FUNCTION_218
0x4003665	              0xc3	                                     ret	      1714	security.c	FUNCTION_218
security_inode_link	IF,1:SWITCH,0:functions,0:CALL,4:FOR,0:WHILE,0:DO,0:ELSE,0	37
0x40017b0	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       623	security.c	FUNCTION_61	IF_1	CALL_3
0x40017b4	        0xf6400d02	                test byte [rax + 0xd], 2	       623	security.c	FUNCTION_61	IF_1	CALL_3
0x40017b8	            0x754b	                           jne 0x4001805	       623	security.c	FUNCTION_61	IF_1	CALL_3
0x40017ba	            0x4155	                                push r13	       622	security.c	FUNCTION_61
0x40017bc	            0x4154	                                push r12	       622	security.c	FUNCTION_61
0x40017be	          0x4989d5	                            mov r13, rdx	       622	security.c	FUNCTION_61
0x40017c1	              0x55	                                push rbp	       622	security.c	FUNCTION_61
0x40017c2	              0x53	                                push rbx	       622	security.c	FUNCTION_61
0x40017c3	          0x4989f4	                            mov r12, rsi	       622	security.c	FUNCTION_61
0x40017c6	    0x488b1d000000	            mov rbx, qword [0x040017cd] 	       625	security.c	FUNCTION_61	CALL_4
0x40017cd	          0x4889fd	                            mov rbp, rdi	       625	security.c	FUNCTION_61	CALL_4
0x40017d0	          0x4885db	                           test rbx, rbx	       625	security.c	FUNCTION_61	CALL_4
0x40017d3	            0x750a	                           jne 0x40017df	       625	security.c	FUNCTION_61	CALL_4
0x40017d5	            0xeb25	                           jmp 0x40017fc	       625	security.c	FUNCTION_61	CALL_4
0x40017d7	          0x488b1b	                    mov rbx, qword [rbx]	       625	security.c	FUNCTION_61	CALL_4
0x40017da	          0x4885db	                           test rbx, rbx	       625	security.c	FUNCTION_61	CALL_4
0x40017dd	            0x741d	                            je 0x40017fc	       625	security.c	FUNCTION_61	CALL_4
0x40017df	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       625	security.c	FUNCTION_61	CALL_4
0x40017e3	          0x4c89ea	                            mov rdx, r13	       625	security.c	FUNCTION_61	CALL_4
0x40017e6	          0x4c89e6	                            mov rsi, r12	       625	security.c	FUNCTION_61	CALL_4
0x40017e9	          0x4889ef	                            mov rdi, rbp	       625	security.c	FUNCTION_61	CALL_4
0x40017ec	      0xe800000000	                          call 0x40017f1	       625	security.c	FUNCTION_61	CALL_4
0x40017f1	            0x85c0	                           test eax, eax	       625	security.c	FUNCTION_61	CALL_4
0x40017f3	            0x74e2	                            je 0x40017d7	       625	security.c	FUNCTION_61	CALL_4
0x40017f5	              0x5b	                                 pop rbx	       626	security.c	FUNCTION_61
0x40017f6	              0x5d	                                 pop rbp	       626	security.c	FUNCTION_61
0x40017f7	            0x415c	                                 pop r12	       626	security.c	FUNCTION_61
0x40017f9	            0x415d	                                 pop r13	       626	security.c	FUNCTION_61
0x40017fb	              0xc3	                                     ret	       626	security.c	FUNCTION_61
0x40017fc	              0x5b	                                 pop rbx	       626	security.c	FUNCTION_61
0x40017fd	            0x31c0	                            xor eax, eax	       624	security.c	FUNCTION_61	IF_1
0x40017ff	              0x5d	                                 pop rbp	       626	security.c	FUNCTION_61
0x4001800	            0x415c	                                 pop r12	       626	security.c	FUNCTION_61
0x4001802	            0x415d	                                 pop r13	       626	security.c	FUNCTION_61
0x4001804	              0xc3	                                     ret	       626	security.c	FUNCTION_61
0x4001805	            0x31c0	                            xor eax, eax	       624	security.c	FUNCTION_61	IF_1
0x4001807	              0xc3	                                     ret	       626	security.c	FUNCTION_61
security_add_hooks	IF,1:SWITCH,0:functions,0:CALL,3:FOR,1:WHILE,0:DO,0:ELSE,0	96
0x40001a7	            0x85db	                           test ebx, ebx	       456	security.c	FUNCTION_45	CALL_1
0x40001a9	            0x7435	                            je 0x40001e0	       456	security.c	FUNCTION_45	CALL_1
0x40001ab	          0x4989ff	                            mov r15, rdi	       456	security.c	FUNCTION_45	CALL_1
0x40001ae	          0x4189f6	                           mov r14d, esi	       456	security.c	FUNCTION_45	CALL_1
0x40001b1	          0x4989d5	                            mov r13, rdx	       456	security.c	FUNCTION_45	CALL_1
0x40001b4	          0x4989cc	                            mov r12, rcx	       456	security.c	FUNCTION_45	CALL_1
0x40001b7	          0x4c89c5	                             mov rbp, r8	       456	security.c	FUNCTION_45	CALL_1
0x40001ba	            0xeb08	                           jmp 0x40001c4	       456	security.c	FUNCTION_45	CALL_1
0x40001bc	          0x488b1b	                    mov rbx, qword [rbx]	       456	security.c	FUNCTION_45	CALL_1
0x40001bf	          0x4885db	                           test rbx, rbx	       456	security.c	FUNCTION_45	CALL_1
0x40001c2	            0x741c	                            je 0x40001e0	       456	security.c	FUNCTION_45	CALL_1
0x40001c4	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       456	security.c	FUNCTION_45	CALL_1
0x40001c8	          0x4989e8	                             mov r8, rbp	       456	security.c	FUNCTION_45	CALL_1
0x40001cb	          0x4c89e1	                            mov rcx, r12	       456	security.c	FUNCTION_45	CALL_1
0x40001ce	          0x4c89ea	                            mov rdx, r13	       456	security.c	FUNCTION_45	CALL_1
0x40001d1	          0x4489f6	                           mov esi, r14d	       456	security.c	FUNCTION_45	CALL_1
0x40001d4	          0x4c89ff	                            mov rdi, r15	       456	security.c	FUNCTION_45	CALL_1
0x40001d7	      0xe800000000	                          call 0x40001dc	       456	security.c	FUNCTION_45	CALL_1
0x40001dc	            0x85c0	                           test eax, eax	       456	security.c	FUNCTION_45	CALL_1
0x40001de	            0x74dc	                            je 0x40001bc	       456	security.c	FUNCTION_45	CALL_1
0x40001e0	              0x5b	                                 pop rbx	       458	security.c	FUNCTION_45
0x40001e1	              0x5d	                                 pop rbp	       458	security.c	FUNCTION_45
0x40001e2	            0x415c	                                 pop r12	       458	security.c	FUNCTION_45
0x40001e4	            0x415d	                                 pop r13	       458	security.c	FUNCTION_45
0x40001e6	            0x415e	                                 pop r14	       458	security.c	FUNCTION_45
0x40001e8	            0x415f	                                 pop r15	       458	security.c	FUNCTION_45
0x40001ea	              0xc3	                                     ret	       458	security.c	FUNCTION_45
0x40001eb	       0xf1f440000	                   nop dword [rax + rax]	       458	security.c	FUNCTION_45
0x40001f0	            0x4157	                                push r15	       464	security.c	FUNCTION_46
0x40001f2	            0x4156	                                push r14	       464	security.c	FUNCTION_46
0x40001f4	            0x4155	                                push r13	       464	security.c	FUNCTION_46
0x40001f6	            0x4154	                                push r12	       464	security.c	FUNCTION_46
0x40001f8	              0x55	                                push rbp	       464	security.c	FUNCTION_46
0x40001f9	              0x53	                                push rbx	       464	security.c	FUNCTION_46
0x40001fa	    0x488b1d000000	            mov rbx, qword [0x04000201] 	       465	security.c	FUNCTION_46	CALL_1
0x4000201	          0x4885db	                           test rbx, rbx	       465	security.c	FUNCTION_46	CALL_1
0x4000204	            0x7440	                            je 0x4000246	       465	security.c	FUNCTION_46	CALL_1
0x4000206	          0x4989ff	                            mov r15, rdi	       465	security.c	FUNCTION_46	CALL_1
0x4000209	          0x4189f6	                           mov r14d, esi	       465	security.c	FUNCTION_46	CALL_1
0x400020c	          0x4989d5	                            mov r13, rdx	       465	security.c	FUNCTION_46	CALL_1
0x400020f	          0x4989cc	                            mov r12, rcx	       465	security.c	FUNCTION_46	CALL_1
0x4000212	          0x4c89c5	                             mov rbp, r8	       465	security.c	FUNCTION_46	CALL_1
0x4000215	            0xeb08	                           jmp 0x400021f	       465	security.c	FUNCTION_46	CALL_1
0x4000217	          0x488b1b	                    mov rbx, qword [rbx]	       465	security.c	FUNCTION_46	CALL_1
0x400021a	          0x4885db	                           test rbx, rbx	       465	security.c	FUNCTION_46	CALL_1
0x400021d	            0x7427	                            je 0x4000246	       465	security.c	FUNCTION_46	CALL_1
0x400021f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       465	security.c	FUNCTION_46	CALL_1
0x4000223	          0x4989e8	                             mov r8, rbp	       465	security.c	FUNCTION_46	CALL_1
0x4000226	          0x4c89e1	                            mov rcx, r12	       465	security.c	FUNCTION_46	CALL_1
0x4000229	          0x4c89ea	                            mov rdx, r13	       465	security.c	FUNCTION_46	CALL_1
0x400022c	          0x4489f6	                           mov esi, r14d	       465	security.c	FUNCTION_46	CALL_1
0x400022f	          0x4c89ff	                            mov rdi, r15	       465	security.c	FUNCTION_46	CALL_1
0x4000232	      0xe800000000	                          call 0x4000237	       465	security.c	FUNCTION_46	CALL_1
0x4000237	            0x85c0	                           test eax, eax	       465	security.c	FUNCTION_46	CALL_1
0x4000239	            0x74dc	                            je 0x4000217	       465	security.c	FUNCTION_46	CALL_1
0x400023b	              0x5b	                                 pop rbx	       467	security.c	FUNCTION_46
0x400023c	              0x5d	                                 pop rbp	       467	security.c	FUNCTION_46
0x400023d	            0x415c	                                 pop r12	       467	security.c	FUNCTION_46
0x400023f	            0x415d	                                 pop r13	       467	security.c	FUNCTION_46
0x4000241	            0x415e	                                 pop r14	       467	security.c	FUNCTION_46
0x4000243	            0x415f	                                 pop r15	       467	security.c	FUNCTION_46
0x4000245	              0xc3	                                     ret	       467	security.c	FUNCTION_46
0x4000246	              0x5b	                                 pop rbx	       467	security.c	FUNCTION_46
0x4000247	            0x31c0	                            xor eax, eax	       464	security.c	FUNCTION_46
0x4000249	              0x5d	                                 pop rbp	       467	security.c	FUNCTION_46
0x400024a	            0x415c	                                 pop r12	       467	security.c	FUNCTION_46
0x400024c	            0x415d	                                 pop r13	       467	security.c	FUNCTION_46
0x400024e	            0x415e	                                 pop r14	       467	security.c	FUNCTION_46
0x4000250	            0x415f	                                 pop r15	       467	security.c	FUNCTION_46
0x4000252	              0xc3	                                     ret	       467	security.c	FUNCTION_46
0x4000253	           0xf1f00	                         nop dword [rax]	       467	security.c	FUNCTION_46
0x4000256	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       467	security.c	FUNCTION_46
0x4000260	            0x4154	                                push r12	       855	security.c	FUNCTION_84
0x4000262	              0x55	                                push rbp	       855	security.c	FUNCTION_84
0x4000263	          0x4989fc	                            mov r12, rdi	       855	security.c	FUNCTION_84
0x4000266	              0x53	                                push rbx	       855	security.c	FUNCTION_84
0x4000267	    0x488b1d000000	            mov rbx, qword [0x0400026e] 	       856	security.c	FUNCTION_84	CALL_1
0x400026e	          0x4889f5	                            mov rbp, rsi	       856	security.c	FUNCTION_84	CALL_1
0x4000271	          0x4885db	                           test rbx, rbx	       856	security.c	FUNCTION_84	CALL_1
0x4000274	            0x750a	                           jne 0x4000280	       856	security.c	FUNCTION_84	CALL_1
0x4000276	            0xeb20	                           jmp 0x4000298	       856	security.c	FUNCTION_84	CALL_1
0x4000278	          0x488b1b	                    mov rbx, qword [rbx]	       856	security.c	FUNCTION_84	CALL_1
0x400027b	          0x4885db	                           test rbx, rbx	       856	security.c	FUNCTION_84	CALL_1
0x400027e	            0x7418	                            je 0x4000298	       856	security.c	FUNCTION_84	CALL_1
0x4000280	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       856	security.c	FUNCTION_84	CALL_1
0x4000284	          0x4889ee	                            mov rsi, rbp	       856	security.c	FUNCTION_84	CALL_1
0x4000287	          0x4c89e7	                            mov rdi, r12	       856	security.c	FUNCTION_84	CALL_1
0x400028a	      0xe800000000	                          call 0x400028f	       856	security.c	FUNCTION_84	CALL_1
0x400028f	            0x85c0	                           test eax, eax	       856	security.c	FUNCTION_84	CALL_1
0x4000291	            0x74e5	                            je 0x4000278	       856	security.c	FUNCTION_84	CALL_1
0x4000293	              0x5b	                                 pop rbx	       857	security.c	FUNCTION_84
0x4000294	              0x5d	                                 pop rbp	       857	security.c	FUNCTION_84
0x4000295	            0x415c	                                 pop r12	       857	security.c	FUNCTION_84
0x4000297	              0xc3	                                     ret	       857	security.c	FUNCTION_84
0x4000298	              0x5b	                                 pop rbx	       857	security.c	FUNCTION_84
0x4000299	              0x31	                                 invalid	       855	security.c	FUNCTION_84
security_msg_queue_associate	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4002b90	            0x4154	                                push r12	      1190	security.c	FUNCTION_134
0x4002b92	              0x55	                                push rbp	      1190	security.c	FUNCTION_134
0x4002b93	          0x4989fc	                            mov r12, rdi	      1190	security.c	FUNCTION_134
0x4002b96	              0x53	                                push rbx	      1190	security.c	FUNCTION_134
0x4002b97	    0x488b1d000000	            mov rbx, qword [0x04002b9e] 	      1191	security.c	FUNCTION_134	CALL_1
0x4002b9e	            0x89f5	                            mov ebp, esi	      1191	security.c	FUNCTION_134	CALL_1
0x4002ba0	          0x4885db	                           test rbx, rbx	      1191	security.c	FUNCTION_134	CALL_1
0x4002ba3	            0x750a	                           jne 0x4002baf	      1191	security.c	FUNCTION_134	CALL_1
0x4002ba5	            0xeb1f	                           jmp 0x4002bc6	      1191	security.c	FUNCTION_134	CALL_1
0x4002ba7	          0x488b1b	                    mov rbx, qword [rbx]	      1191	security.c	FUNCTION_134	CALL_1
0x4002baa	          0x4885db	                           test rbx, rbx	      1191	security.c	FUNCTION_134	CALL_1
0x4002bad	            0x7417	                            je 0x4002bc6	      1191	security.c	FUNCTION_134	CALL_1
0x4002baf	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1191	security.c	FUNCTION_134	CALL_1
0x4002bb3	            0x89ee	                            mov esi, ebp	      1191	security.c	FUNCTION_134	CALL_1
0x4002bb5	          0x4c89e7	                            mov rdi, r12	      1191	security.c	FUNCTION_134	CALL_1
0x4002bb8	      0xe800000000	                          call 0x4002bbd	      1191	security.c	FUNCTION_134	CALL_1
0x4002bbd	            0x85c0	                           test eax, eax	      1191	security.c	FUNCTION_134	CALL_1
0x4002bbf	            0x74e6	                            je 0x4002ba7	      1191	security.c	FUNCTION_134	CALL_1
0x4002bc1	              0x5b	                                 pop rbx	      1192	security.c	FUNCTION_134
0x4002bc2	              0x5d	                                 pop rbp	      1192	security.c	FUNCTION_134
0x4002bc3	            0x415c	                                 pop r12	      1192	security.c	FUNCTION_134
0x4002bc5	              0xc3	                                     ret	      1192	security.c	FUNCTION_134
0x4002bc6	              0x5b	                                 pop rbx	      1192	security.c	FUNCTION_134
0x4002bc7	            0x31c0	                            xor eax, eax	      1190	security.c	FUNCTION_134
0x4002bc9	              0x5d	                                 pop rbp	      1192	security.c	FUNCTION_134
0x4002bca	            0x415c	                                 pop r12	      1192	security.c	FUNCTION_134
0x4002bcc	              0xc3	                                     ret	      1192	security.c	FUNCTION_134
security_task_fix_setuid	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x40025e0	            0x4155	                                push r13	      1061	security.c	FUNCTION_112
0x40025e2	            0x4154	                                push r12	      1061	security.c	FUNCTION_112
0x40025e4	              0x55	                                push rbp	      1061	security.c	FUNCTION_112
0x40025e5	              0x53	                                push rbx	      1061	security.c	FUNCTION_112
0x40025e6	    0x488b1d000000	            mov rbx, qword [0x040025ed] 	      1062	security.c	FUNCTION_112	CALL_1
0x40025ed	          0x4885db	                           test rbx, rbx	      1062	security.c	FUNCTION_112	CALL_1
0x40025f0	            0x742e	                            je 0x4002620	      1062	security.c	FUNCTION_112	CALL_1
0x40025f2	          0x4989fd	                            mov r13, rdi	      1062	security.c	FUNCTION_112	CALL_1
0x40025f5	          0x4989f4	                            mov r12, rsi	      1062	security.c	FUNCTION_112	CALL_1
0x40025f8	            0x89d5	                            mov ebp, edx	      1062	security.c	FUNCTION_112	CALL_1
0x40025fa	            0xeb08	                           jmp 0x4002604	      1062	security.c	FUNCTION_112	CALL_1
0x40025fc	          0x488b1b	                    mov rbx, qword [rbx]	      1062	security.c	FUNCTION_112	CALL_1
0x40025ff	          0x4885db	                           test rbx, rbx	      1062	security.c	FUNCTION_112	CALL_1
0x4002602	            0x741c	                            je 0x4002620	      1062	security.c	FUNCTION_112	CALL_1
0x4002604	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1062	security.c	FUNCTION_112	CALL_1
0x4002608	            0x89ea	                            mov edx, ebp	      1062	security.c	FUNCTION_112	CALL_1
0x400260a	          0x4c89e6	                            mov rsi, r12	      1062	security.c	FUNCTION_112	CALL_1
0x400260d	          0x4c89ef	                            mov rdi, r13	      1062	security.c	FUNCTION_112	CALL_1
0x4002610	      0xe800000000	                          call 0x4002615	      1062	security.c	FUNCTION_112	CALL_1
0x4002615	            0x85c0	                           test eax, eax	      1062	security.c	FUNCTION_112	CALL_1
0x4002617	            0x74e3	                            je 0x40025fc	      1062	security.c	FUNCTION_112	CALL_1
0x4002619	              0x5b	                                 pop rbx	      1063	security.c	FUNCTION_112
0x400261a	              0x5d	                                 pop rbp	      1063	security.c	FUNCTION_112
0x400261b	            0x415c	                                 pop r12	      1063	security.c	FUNCTION_112
0x400261d	            0x415d	                                 pop r13	      1063	security.c	FUNCTION_112
0x400261f	              0xc3	                                     ret	      1063	security.c	FUNCTION_112
0x4002620	              0x5b	                                 pop rbx	      1063	security.c	FUNCTION_112
0x4002621	            0x31c0	                            xor eax, eax	      1061	security.c	FUNCTION_112
0x4002623	              0x5d	                                 pop rbp	      1063	security.c	FUNCTION_112
0x4002624	            0x415c	                                 pop r12	      1063	security.c	FUNCTION_112
0x4002626	            0x415d	                                 pop r13	      1063	security.c	FUNCTION_112
0x4002628	              0xc3	                                     ret	      1063	security.c	FUNCTION_112
security_inode_post_setxattr	IF,1:SWITCH,0:functions,0:CALL,5:FOR,0:WHILE,0:DO,0:ELSE,0	34
0x4001c00	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       753	security.c	FUNCTION_74	IF_1	CALL_3
0x4001c04	        0xf6400d02	                test byte [rax + 0xd], 2	       753	security.c	FUNCTION_74	IF_1	CALL_3
0x4001c08	            0x754f	                           jne 0x4001c59	       753	security.c	FUNCTION_74	IF_1	CALL_3
0x4001c0a	            0x4157	                                push r15	       752	security.c	FUNCTION_74
0x4001c0c	            0x4156	                                push r14	       752	security.c	FUNCTION_74
0x4001c0e	          0x4589c7	                           mov r15d, r8d	       752	security.c	FUNCTION_74
0x4001c11	            0x4155	                                push r13	       752	security.c	FUNCTION_74
0x4001c13	            0x4154	                                push r12	       752	security.c	FUNCTION_74
0x4001c15	          0x4989ce	                            mov r14, rcx	       752	security.c	FUNCTION_74
0x4001c18	              0x55	                                push rbp	       752	security.c	FUNCTION_74
0x4001c19	              0x53	                                push rbx	       752	security.c	FUNCTION_74
0x4001c1a	          0x4989d5	                            mov r13, rdx	       752	security.c	FUNCTION_74
0x4001c1d	    0x488b1d000000	            mov rbx, qword [0x04001c24] 	       755	security.c	FUNCTION_74	CALL_4
0x4001c24	          0x4989f4	                            mov r12, rsi	       755	security.c	FUNCTION_74	CALL_4
0x4001c27	          0x4889fd	                            mov rbp, rdi	       755	security.c	FUNCTION_74	CALL_4
0x4001c2a	          0x4885db	                           test rbx, rbx	       755	security.c	FUNCTION_74	CALL_4
0x4001c2d	            0x7420	                            je 0x4001c4f	       755	security.c	FUNCTION_74	CALL_4
0x4001c2f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       755	security.c	FUNCTION_74	CALL_4
0x4001c33	          0x4589f8	                           mov r8d, r15d	       755	security.c	FUNCTION_74	CALL_4
0x4001c36	          0x4c89f1	                            mov rcx, r14	       755	security.c	FUNCTION_74	CALL_4
0x4001c39	          0x4c89ea	                            mov rdx, r13	       755	security.c	FUNCTION_74	CALL_4
0x4001c3c	          0x4c89e6	                            mov rsi, r12	       755	security.c	FUNCTION_74	CALL_4
0x4001c3f	          0x4889ef	                            mov rdi, rbp	       755	security.c	FUNCTION_74	CALL_4
0x4001c42	      0xe800000000	                          call 0x4001c47	       755	security.c	FUNCTION_74	CALL_4
0x4001c47	          0x488b1b	                    mov rbx, qword [rbx]	       755	security.c	FUNCTION_74	CALL_4
0x4001c4a	          0x4885db	                           test rbx, rbx	       755	security.c	FUNCTION_74	CALL_4
0x4001c4d	            0x75e0	                           jne 0x4001c2f	       755	security.c	FUNCTION_74	CALL_4
0x4001c4f	              0x5b	                                 pop rbx	       757	security.c	FUNCTION_74
0x4001c50	              0x5d	                                 pop rbp	       757	security.c	FUNCTION_74
0x4001c51	            0x415c	                                 pop r12	       757	security.c	FUNCTION_74
0x4001c53	            0x415d	                                 pop r13	       757	security.c	FUNCTION_74
0x4001c55	            0x415e	                                 pop r14	       757	security.c	FUNCTION_74
0x4001c57	            0x415f	                                 pop r15	       757	security.c	FUNCTION_74
0x4001c59	            0xf3c3	                                     ret	       757	security.c	FUNCTION_74
security_inode_rename	IF,3:SWITCH,0:functions,0:CALL,8:FOR,0:WHILE,0:DO,0:ELSE,0	63
0x4001970	            0x4156	                                push r14	       668	security.c	FUNCTION_67
0x4001972	            0x4155	                                push r13	       668	security.c	FUNCTION_67
0x4001974	            0x4154	                                push r12	       668	security.c	FUNCTION_67
0x4001976	              0x55	                                push rbp	       668	security.c	FUNCTION_67
0x4001977	              0x53	                                push rbx	       668	security.c	FUNCTION_67
0x4001978	        0x488b4630	            mov rax, qword [rsi + 0x30] 	       669	security.c	FUNCTION_67	IF_1	CALL_3
0x400197c	        0xf6400d02	                test byte [rax + 0xd], 2	       669	security.c	FUNCTION_67	IF_1	CALL_3
0x4001980	     0xf8591000000	                           jne 0x4001a17	       669	security.c	FUNCTION_67	IF_1	CALL_3
0x4001986	    0xf70100007000	              test dword [rcx], 0x700000	       669	security.c	FUNCTION_67	IF_1	CALL_3
0x400198c	            0x757b	                           jne 0x4001a09	       669	security.c	FUNCTION_67	IF_1	CALL_3
0x400198e	        0x4183e002	                              and r8d, 2	       673	security.c	FUNCTION_67	IF_2
0x4001992	          0x4989cc	                            mov r12, rcx	       673	security.c	FUNCTION_67	IF_2
0x4001995	          0x4989d6	                            mov r14, rdx	       673	security.c	FUNCTION_67	IF_2
0x4001998	          0x4889f5	                            mov rbp, rsi	       673	security.c	FUNCTION_67	IF_2
0x400199b	          0x4989fd	                            mov r13, rdi	       673	security.c	FUNCTION_67	IF_2
0x400199e	            0x7438	                            je 0x40019d8	       673	security.c	FUNCTION_67	IF_2
0x40019a0	    0x488b1d000000	            mov rbx, qword [0x040019a7] 	       674	security.c	FUNCTION_67	IF_2	CALL_7
0x40019a7	          0x4885db	                           test rbx, rbx	       674	security.c	FUNCTION_67	IF_2	CALL_7
0x40019aa	            0x750a	                           jne 0x40019b6	       674	security.c	FUNCTION_67	IF_2	CALL_7
0x40019ac	            0xeb69	                           jmp 0x4001a17	       674	security.c	FUNCTION_67	IF_2	CALL_7
0x40019ae	          0x488b1b	                    mov rbx, qword [rbx]	       674	security.c	FUNCTION_67	IF_2	CALL_7
0x40019b1	          0x4885db	                           test rbx, rbx	       674	security.c	FUNCTION_67	IF_2	CALL_7
0x40019b4	            0x7422	                            je 0x40019d8	       674	security.c	FUNCTION_67	IF_2	CALL_7
0x40019b6	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       674	security.c	FUNCTION_67	IF_2	CALL_7
0x40019ba	          0x4889e9	                            mov rcx, rbp	       674	security.c	FUNCTION_67	IF_2	CALL_7
0x40019bd	          0x4c89ea	                            mov rdx, r13	       674	security.c	FUNCTION_67	IF_2	CALL_7
0x40019c0	          0x4c89e6	                            mov rsi, r12	       674	security.c	FUNCTION_67	IF_2	CALL_7
0x40019c3	          0x4c89f7	                            mov rdi, r14	       674	security.c	FUNCTION_67	IF_2	CALL_7
0x40019c6	      0xe800000000	                          call 0x40019cb	       674	security.c	FUNCTION_67	IF_2	CALL_7
0x40019cb	            0x85c0	                           test eax, eax	       674	security.c	FUNCTION_67	IF_2	CALL_7
0x40019cd	            0x74df	                            je 0x40019ae	       674	security.c	FUNCTION_67	IF_2	CALL_7
0x40019cf	              0x5b	                                 pop rbx	       682	security.c	FUNCTION_67
0x40019d0	              0x5d	                                 pop rbp	       682	security.c	FUNCTION_67
0x40019d1	            0x415c	                                 pop r12	       682	security.c	FUNCTION_67
0x40019d3	            0x415d	                                 pop r13	       682	security.c	FUNCTION_67
0x40019d5	            0x415e	                                 pop r14	       682	security.c	FUNCTION_67
0x40019d7	              0xc3	                                     ret	       682	security.c	FUNCTION_67
0x40019d8	    0x488b1d000000	            mov rbx, qword [0x040019df] 	       680	security.c	FUNCTION_67	CALL_8
0x40019df	          0x4885db	                           test rbx, rbx	       680	security.c	FUNCTION_67	CALL_8
0x40019e2	            0x750a	                           jne 0x40019ee	       680	security.c	FUNCTION_67	CALL_8
0x40019e4	            0xeb31	                           jmp 0x4001a17	       680	security.c	FUNCTION_67	CALL_8
0x40019e6	          0x488b1b	                    mov rbx, qword [rbx]	       680	security.c	FUNCTION_67	CALL_8
0x40019e9	          0x4885db	                           test rbx, rbx	       680	security.c	FUNCTION_67	CALL_8
0x40019ec	            0x7429	                            je 0x4001a17	       680	security.c	FUNCTION_67	CALL_8
0x40019ee	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       680	security.c	FUNCTION_67	CALL_8
0x40019f2	          0x4c89e1	                            mov rcx, r12	       680	security.c	FUNCTION_67	CALL_8
0x40019f5	          0x4c89f2	                            mov rdx, r14	       680	security.c	FUNCTION_67	CALL_8
0x40019f8	          0x4889ee	                            mov rsi, rbp	       680	security.c	FUNCTION_67	CALL_8
0x40019fb	          0x4c89ef	                            mov rdi, r13	       680	security.c	FUNCTION_67	CALL_8
0x40019fe	      0xe800000000	                          call 0x4001a03	       680	security.c	FUNCTION_67	CALL_8
0x4001a03	            0x85c0	                           test eax, eax	       680	security.c	FUNCTION_67	CALL_8
0x4001a05	            0x74df	                            je 0x40019e6	       680	security.c	FUNCTION_67	CALL_8
0x4001a07	            0xebc6	                           jmp 0x40019cf	       680	security.c	FUNCTION_67	CALL_8
0x4001a09	        0x488b4130	            mov rax, qword [rcx + 0x30] 	       669	security.c	FUNCTION_67	IF_1	CALL_3
0x4001a0d	        0xf6400d02	                test byte [rax + 0xd], 2	       669	security.c	FUNCTION_67	IF_1	CALL_3
0x4001a11	     0xf8477ffffff	                            je 0x400198e	       669	security.c	FUNCTION_67	IF_1	CALL_3
0x4001a17	              0x5b	                                 pop rbx	       682	security.c	FUNCTION_67
0x4001a18	            0x31c0	                            xor eax, eax	       671	security.c	FUNCTION_67	IF_1
0x4001a1a	              0x5d	                                 pop rbp	       682	security.c	FUNCTION_67
0x4001a1b	            0x415c	                                 pop r12	       682	security.c	FUNCTION_67
0x4001a1d	            0x415d	                                 pop r13	       682	security.c	FUNCTION_67
0x4001a1f	            0x415e	                                 pop r14	       682	security.c	FUNCTION_67
0x4001a21	              0xc3	                                     ret	       682	security.c	FUNCTION_67
security_inode_mkdir	IF,1:SWITCH,0:functions,0:CALL,3:FOR,0:WHILE,0:DO,0:ELSE,0	36
0x4000c90	        0xf6470d02	                test byte [rdi + 0xd], 2	       645	security.c	FUNCTION_64	IF_1	CALL_2
0x4000c94	            0x754a	                           jne 0x4000ce0	       645	security.c	FUNCTION_64	IF_1	CALL_2
0x4000c96	            0x4155	                                push r13	       644	security.c	FUNCTION_64
0x4000c98	            0x4154	                                push r12	       644	security.c	FUNCTION_64
0x4000c9a	              0x55	                                push rbp	       644	security.c	FUNCTION_64
0x4000c9b	              0x53	                                push rbx	       644	security.c	FUNCTION_64
0x4000c9c	    0x488b1d000000	            mov rbx, qword [0x04000ca3] 	       647	security.c	FUNCTION_64	CALL_3
0x4000ca3	          0x4885db	                           test rbx, rbx	       647	security.c	FUNCTION_64	CALL_3
0x4000ca6	            0x742f	                            je 0x4000cd7	       647	security.c	FUNCTION_64	CALL_3
0x4000ca8	          0x4989f5	                            mov r13, rsi	       647	security.c	FUNCTION_64	CALL_3
0x4000cab	          0x4989fc	                            mov r12, rdi	       647	security.c	FUNCTION_64	CALL_3
0x4000cae	           0xfb7ea	                           movzx ebp, dx	       647	security.c	FUNCTION_64	CALL_3
0x4000cb1	            0xeb08	                           jmp 0x4000cbb	       647	security.c	FUNCTION_64	CALL_3
0x4000cb3	          0x488b1b	                    mov rbx, qword [rbx]	       647	security.c	FUNCTION_64	CALL_3
0x4000cb6	          0x4885db	                           test rbx, rbx	       647	security.c	FUNCTION_64	CALL_3
0x4000cb9	            0x741c	                            je 0x4000cd7	       647	security.c	FUNCTION_64	CALL_3
0x4000cbb	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       647	security.c	FUNCTION_64	CALL_3
0x4000cbf	            0x89ea	                            mov edx, ebp	       647	security.c	FUNCTION_64	CALL_3
0x4000cc1	          0x4c89ee	                            mov rsi, r13	       647	security.c	FUNCTION_64	CALL_3
0x4000cc4	          0x4c89e7	                            mov rdi, r12	       647	security.c	FUNCTION_64	CALL_3
0x4000cc7	      0xe800000000	                          call 0x4000ccc	       647	security.c	FUNCTION_64	CALL_3
0x4000ccc	            0x85c0	                           test eax, eax	       647	security.c	FUNCTION_64	CALL_3
0x4000cce	            0x74e3	                            je 0x4000cb3	       647	security.c	FUNCTION_64	CALL_3
0x4000cd0	              0x5b	                                 pop rbx	       648	security.c	FUNCTION_64
0x4000cd1	              0x5d	                                 pop rbp	       648	security.c	FUNCTION_64
0x4000cd2	            0x415c	                                 pop r12	       648	security.c	FUNCTION_64
0x4000cd4	            0x415d	                                 pop r13	       648	security.c	FUNCTION_64
0x4000cd6	              0xc3	                                     ret	       648	security.c	FUNCTION_64
0x4000cd7	              0x5b	                                 pop rbx	       648	security.c	FUNCTION_64
0x4000cd8	            0x31c0	                            xor eax, eax	       646	security.c	FUNCTION_64	IF_1
0x4000cda	              0x5d	                                 pop rbp	       648	security.c	FUNCTION_64
0x4000cdb	            0x415c	                                 pop r12	       648	security.c	FUNCTION_64
0x4000cdd	            0x415d	                                 pop r13	       648	security.c	FUNCTION_64
0x4000cdf	              0xc3	                                     ret	       648	security.c	FUNCTION_64
0x4000ce0	            0x31c0	                            xor eax, eax	       646	security.c	FUNCTION_64	IF_1
0x4000ce2	              0xc3	                                     ret	       648	security.c	FUNCTION_64
security_sb_free	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	15
0x4001510	              0x55	                                push rbp	       367	security.c	FUNCTION_31
0x4001511	              0x53	                                push rbx	       367	security.c	FUNCTION_31
0x4001512	    0x488b1d000000	            mov rbx, qword [0x04001519] 	       368	security.c	FUNCTION_31	CALL_1
0x4001519	          0x4885db	                           test rbx, rbx	       368	security.c	FUNCTION_31	CALL_1
0x400151c	            0x7417	                            je 0x4001535	       368	security.c	FUNCTION_31	CALL_1
0x400151e	          0x4889fd	                            mov rbp, rdi	       368	security.c	FUNCTION_31	CALL_1
0x4001521	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       368	security.c	FUNCTION_31	CALL_1
0x4001525	          0x4889ef	                            mov rdi, rbp	       368	security.c	FUNCTION_31	CALL_1
0x4001528	      0xe800000000	                          call 0x400152d	       368	security.c	FUNCTION_31	CALL_1
0x400152d	          0x488b1b	                    mov rbx, qword [rbx]	       368	security.c	FUNCTION_31	CALL_1
0x4001530	          0x4885db	                           test rbx, rbx	       368	security.c	FUNCTION_31	CALL_1
0x4001533	            0x75ec	                           jne 0x4001521	       368	security.c	FUNCTION_31	CALL_1
0x4001535	              0x5b	                                 pop rbx	       369	security.c	FUNCTION_31
0x4001536	              0x5d	                                 pop rbp	       369	security.c	FUNCTION_31
0x4001537	              0xc3	                                     ret	       369	security.c	FUNCTION_31
security_tun_dev_attach_queue	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x4000a10	              0x55	                                push rbp	      1528	security.c	FUNCTION_193
0x4000a11	              0x53	                                push rbx	      1528	security.c	FUNCTION_193
0x4000a12	          0x4889fd	                            mov rbp, rdi	      1528	security.c	FUNCTION_193
0x4000a15	    0x488b1d000000	            mov rbx, qword [0x04000a1c] 	      1529	security.c	FUNCTION_193	CALL_1
0x4000a1c	          0x4885db	                           test rbx, rbx	      1529	security.c	FUNCTION_193	CALL_1
0x4000a1f	            0x750a	                           jne 0x4000a2b	      1529	security.c	FUNCTION_193	CALL_1
0x4000a21	            0xeb1b	                           jmp 0x4000a3e	      1529	security.c	FUNCTION_193	CALL_1
0x4000a23	          0x488b1b	                    mov rbx, qword [rbx]	      1529	security.c	FUNCTION_193	CALL_1
0x4000a26	          0x4885db	                           test rbx, rbx	      1529	security.c	FUNCTION_193	CALL_1
0x4000a29	            0x7413	                            je 0x4000a3e	      1529	security.c	FUNCTION_193	CALL_1
0x4000a2b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1529	security.c	FUNCTION_193	CALL_1
0x4000a2f	          0x4889ef	                            mov rdi, rbp	      1529	security.c	FUNCTION_193	CALL_1
0x4000a32	      0xe800000000	                          call 0x4000a37	      1529	security.c	FUNCTION_193	CALL_1
0x4000a37	            0x85c0	                           test eax, eax	      1529	security.c	FUNCTION_193	CALL_1
0x4000a39	            0x74e8	                            je 0x4000a23	      1529	security.c	FUNCTION_193	CALL_1
0x4000a3b	              0x5b	                                 pop rbx	      1530	security.c	FUNCTION_193
0x4000a3c	              0x5d	                                 pop rbp	      1530	security.c	FUNCTION_193
0x4000a3d	              0xc3	                                     ret	      1530	security.c	FUNCTION_193
0x4000a3e	            0x31c0	                            xor eax, eax	      1528	security.c	FUNCTION_193
0x4000a40	              0x5b	                                 pop rbx	      1530	security.c	FUNCTION_193
0x4000a41	              0x5d	                                 pop rbp	      1530	security.c	FUNCTION_193
0x4000a42	              0xc3	                                     ret	      1530	security.c	FUNCTION_193
security_shm_alloc	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x4002cd0	              0x55	                                push rbp	      1212	security.c	FUNCTION_138
0x4002cd1	              0x53	                                push rbx	      1212	security.c	FUNCTION_138
0x4002cd2	          0x4889fd	                            mov rbp, rdi	      1212	security.c	FUNCTION_138
0x4002cd5	    0x488b1d000000	            mov rbx, qword [0x04002cdc] 	      1213	security.c	FUNCTION_138	CALL_1
0x4002cdc	          0x4885db	                           test rbx, rbx	      1213	security.c	FUNCTION_138	CALL_1
0x4002cdf	            0x750a	                           jne 0x4002ceb	      1213	security.c	FUNCTION_138	CALL_1
0x4002ce1	            0xeb1b	                           jmp 0x4002cfe	      1213	security.c	FUNCTION_138	CALL_1
0x4002ce3	          0x488b1b	                    mov rbx, qword [rbx]	      1213	security.c	FUNCTION_138	CALL_1
0x4002ce6	          0x4885db	                           test rbx, rbx	      1213	security.c	FUNCTION_138	CALL_1
0x4002ce9	            0x7413	                            je 0x4002cfe	      1213	security.c	FUNCTION_138	CALL_1
0x4002ceb	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1213	security.c	FUNCTION_138	CALL_1
0x4002cef	          0x4889ef	                            mov rdi, rbp	      1213	security.c	FUNCTION_138	CALL_1
0x4002cf2	      0xe800000000	                          call 0x4002cf7	      1213	security.c	FUNCTION_138	CALL_1
0x4002cf7	            0x85c0	                           test eax, eax	      1213	security.c	FUNCTION_138	CALL_1
0x4002cf9	            0x74e8	                            je 0x4002ce3	      1213	security.c	FUNCTION_138	CALL_1
0x4002cfb	              0x5b	                                 pop rbx	      1214	security.c	FUNCTION_138
0x4002cfc	              0x5d	                                 pop rbp	      1214	security.c	FUNCTION_138
0x4002cfd	              0xc3	                                     ret	      1214	security.c	FUNCTION_138
0x4002cfe	            0x31c0	                            xor eax, eax	      1212	security.c	FUNCTION_138
0x4002d00	              0x5b	                                 pop rbx	      1214	security.c	FUNCTION_138
0x4002d01	              0x5d	                                 pop rbp	      1214	security.c	FUNCTION_138
0x4002d02	              0xc3	                                     ret	      1214	security.c	FUNCTION_138
security_msg_queue_free	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	15
0x4002b60	              0x55	                                push rbp	      1185	security.c	FUNCTION_133
0x4002b61	              0x53	                                push rbx	      1185	security.c	FUNCTION_133
0x4002b62	    0x488b1d000000	            mov rbx, qword [0x04002b69] 	      1186	security.c	FUNCTION_133	CALL_1
0x4002b69	          0x4885db	                           test rbx, rbx	      1186	security.c	FUNCTION_133	CALL_1
0x4002b6c	            0x7417	                            je 0x4002b85	      1186	security.c	FUNCTION_133	CALL_1
0x4002b6e	          0x4889fd	                            mov rbp, rdi	      1186	security.c	FUNCTION_133	CALL_1
0x4002b71	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1186	security.c	FUNCTION_133	CALL_1
0x4002b75	          0x4889ef	                            mov rdi, rbp	      1186	security.c	FUNCTION_133	CALL_1
0x4002b78	      0xe800000000	                          call 0x4002b7d	      1186	security.c	FUNCTION_133	CALL_1
0x4002b7d	          0x488b1b	                    mov rbx, qword [rbx]	      1186	security.c	FUNCTION_133	CALL_1
0x4002b80	          0x4885db	                           test rbx, rbx	      1186	security.c	FUNCTION_133	CALL_1
0x4002b83	            0x75ec	                           jne 0x4002b71	      1186	security.c	FUNCTION_133	CALL_1
0x4002b85	              0x5b	                                 pop rbx	      1187	security.c	FUNCTION_133
0x4002b86	              0x5d	                                 pop rbp	      1187	security.c	FUNCTION_133
0x4002b87	              0xc3	                                     ret	      1187	security.c	FUNCTION_133
security_socket_getpeername	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x4003320	              0x55	                                push rbp	      1398	security.c	FUNCTION_171
0x4003321	              0x53	                                push rbx	      1398	security.c	FUNCTION_171
0x4003322	          0x4889fd	                            mov rbp, rdi	      1398	security.c	FUNCTION_171
0x4003325	    0x488b1d000000	            mov rbx, qword [0x0400332c] 	      1399	security.c	FUNCTION_171	CALL_1
0x400332c	          0x4885db	                           test rbx, rbx	      1399	security.c	FUNCTION_171	CALL_1
0x400332f	            0x750a	                           jne 0x400333b	      1399	security.c	FUNCTION_171	CALL_1
0x4003331	            0xeb1b	                           jmp 0x400334e	      1399	security.c	FUNCTION_171	CALL_1
0x4003333	          0x488b1b	                    mov rbx, qword [rbx]	      1399	security.c	FUNCTION_171	CALL_1
0x4003336	          0x4885db	                           test rbx, rbx	      1399	security.c	FUNCTION_171	CALL_1
0x4003339	            0x7413	                            je 0x400334e	      1399	security.c	FUNCTION_171	CALL_1
0x400333b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1399	security.c	FUNCTION_171	CALL_1
0x400333f	          0x4889ef	                            mov rdi, rbp	      1399	security.c	FUNCTION_171	CALL_1
0x4003342	      0xe800000000	                          call 0x4003347	      1399	security.c	FUNCTION_171	CALL_1
0x4003347	            0x85c0	                           test eax, eax	      1399	security.c	FUNCTION_171	CALL_1
0x4003349	            0x74e8	                            je 0x4003333	      1399	security.c	FUNCTION_171	CALL_1
0x400334b	              0x5b	                                 pop rbx	      1400	security.c	FUNCTION_171
0x400334c	              0x5d	                                 pop rbp	      1400	security.c	FUNCTION_171
0x400334d	              0xc3	                                     ret	      1400	security.c	FUNCTION_171
0x400334e	            0x31c0	                            xor eax, eax	      1398	security.c	FUNCTION_171
0x4003350	              0x5b	                                 pop rbx	      1400	security.c	FUNCTION_171
0x4003351	              0x5d	                                 pop rbp	      1400	security.c	FUNCTION_171
0x4003352	              0xc3	                                     ret	      1400	security.c	FUNCTION_171
security_kernel_module_request	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x40025a0	              0x55	                                push rbp	      1032	security.c	FUNCTION_109
0x40025a1	              0x53	                                push rbx	      1032	security.c	FUNCTION_109
0x40025a2	          0x4889fd	                            mov rbp, rdi	      1032	security.c	FUNCTION_109
0x40025a5	    0x488b1d000000	            mov rbx, qword [0x040025ac] 	      1033	security.c	FUNCTION_109	CALL_1
0x40025ac	          0x4885db	                           test rbx, rbx	      1033	security.c	FUNCTION_109	CALL_1
0x40025af	            0x750a	                           jne 0x40025bb	      1033	security.c	FUNCTION_109	CALL_1
0x40025b1	            0xeb1b	                           jmp 0x40025ce	      1033	security.c	FUNCTION_109	CALL_1
0x40025b3	          0x488b1b	                    mov rbx, qword [rbx]	      1033	security.c	FUNCTION_109	CALL_1
0x40025b6	          0x4885db	                           test rbx, rbx	      1033	security.c	FUNCTION_109	CALL_1
0x40025b9	            0x7413	                            je 0x40025ce	      1033	security.c	FUNCTION_109	CALL_1
0x40025bb	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1033	security.c	FUNCTION_109	CALL_1
0x40025bf	          0x4889ef	                            mov rdi, rbp	      1033	security.c	FUNCTION_109	CALL_1
0x40025c2	      0xe800000000	                          call 0x40025c7	      1033	security.c	FUNCTION_109	CALL_1
0x40025c7	            0x85c0	                           test eax, eax	      1033	security.c	FUNCTION_109	CALL_1
0x40025c9	            0x74e8	                            je 0x40025b3	      1033	security.c	FUNCTION_109	CALL_1
0x40025cb	              0x5b	                                 pop rbx	      1034	security.c	FUNCTION_109
0x40025cc	              0x5d	                                 pop rbp	      1034	security.c	FUNCTION_109
0x40025cd	              0xc3	                                     ret	      1034	security.c	FUNCTION_109
0x40025ce	            0x31c0	                            xor eax, eax	      1032	security.c	FUNCTION_109
0x40025d0	              0x5b	                                 pop rbx	      1034	security.c	FUNCTION_109
0x40025d1	              0x5d	                                 pop rbp	      1034	security.c	FUNCTION_109
0x40025d2	              0xc3	                                     ret	      1034	security.c	FUNCTION_109
security_dentry_init_security	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	35
0x4000190	            0x4157	                                push r15	       455	security.c	FUNCTION_45
0x4000192	            0x4156	                                push r14	       455	security.c	FUNCTION_45
0x4000194	      0xb8a1ffffff	                     mov eax, 0xffffffa1	       455	security.c	FUNCTION_45
0x4000199	            0x4155	                                push r13	       455	security.c	FUNCTION_45
0x400019b	            0x4154	                                push r12	       455	security.c	FUNCTION_45
0x400019d	              0x55	                                push rbp	       455	security.c	FUNCTION_45
0x400019e	              0x53	                                push rbx	       455	security.c	FUNCTION_45
0x400019f	    0x488b1d000000	            mov rbx, qword [0x040001a6] 	       456	security.c	FUNCTION_45	CALL_1
0x40001a6	          0x4885db	                           test rbx, rbx	       456	security.c	FUNCTION_45	CALL_1
0x40001a9	            0x7435	                            je 0x40001e0	       456	security.c	FUNCTION_45	CALL_1
0x40001ab	          0x4989ff	                            mov r15, rdi	       456	security.c	FUNCTION_45	CALL_1
0x40001ae	          0x4189f6	                           mov r14d, esi	       456	security.c	FUNCTION_45	CALL_1
0x40001b1	          0x4989d5	                            mov r13, rdx	       456	security.c	FUNCTION_45	CALL_1
0x40001b4	          0x4989cc	                            mov r12, rcx	       456	security.c	FUNCTION_45	CALL_1
0x40001b7	          0x4c89c5	                             mov rbp, r8	       456	security.c	FUNCTION_45	CALL_1
0x40001ba	            0xeb08	                           jmp 0x40001c4	       456	security.c	FUNCTION_45	CALL_1
0x40001bc	          0x488b1b	                    mov rbx, qword [rbx]	       456	security.c	FUNCTION_45	CALL_1
0x40001bf	          0x4885db	                           test rbx, rbx	       456	security.c	FUNCTION_45	CALL_1
0x40001c2	            0x741c	                            je 0x40001e0	       456	security.c	FUNCTION_45	CALL_1
0x40001c4	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       456	security.c	FUNCTION_45	CALL_1
0x40001c8	          0x4989e8	                             mov r8, rbp	       456	security.c	FUNCTION_45	CALL_1
0x40001cb	          0x4c89e1	                            mov rcx, r12	       456	security.c	FUNCTION_45	CALL_1
0x40001ce	          0x4c89ea	                            mov rdx, r13	       456	security.c	FUNCTION_45	CALL_1
0x40001d1	          0x4489f6	                           mov esi, r14d	       456	security.c	FUNCTION_45	CALL_1
0x40001d4	          0x4c89ff	                            mov rdi, r15	       456	security.c	FUNCTION_45	CALL_1
0x40001d7	      0xe800000000	                          call 0x40001dc	       456	security.c	FUNCTION_45	CALL_1
0x40001dc	            0x85c0	                           test eax, eax	       456	security.c	FUNCTION_45	CALL_1
0x40001de	            0x74dc	                            je 0x40001bc	       456	security.c	FUNCTION_45	CALL_1
0x40001e0	              0x5b	                                 pop rbx	       458	security.c	FUNCTION_45
0x40001e1	              0x5d	                                 pop rbp	       458	security.c	FUNCTION_45
0x40001e2	            0x415c	                                 pop r12	       458	security.c	FUNCTION_45
0x40001e4	            0x415d	                                 pop r13	       458	security.c	FUNCTION_45
0x40001e6	            0x415e	                                 pop r14	       458	security.c	FUNCTION_45
0x40001e8	            0x415f	                                 pop r15	       458	security.c	FUNCTION_45
0x40001ea	              0xc3	                                     ret	       458	security.c	FUNCTION_45
security_sctp_sk_clone	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	23
0x4000b70	            0x4155	                                push r13	      1561	security.c	FUNCTION_198
0x4000b72	            0x4154	                                push r12	      1561	security.c	FUNCTION_198
0x4000b74	              0x55	                                push rbp	      1561	security.c	FUNCTION_198
0x4000b75	              0x53	                                push rbx	      1561	security.c	FUNCTION_198
0x4000b76	    0x488b1d000000	            mov rbx, qword [0x04000b7d] 	      1562	security.c	FUNCTION_198	CALL_1
0x4000b7d	          0x4885db	                           test rbx, rbx	      1562	security.c	FUNCTION_198	CALL_1
0x4000b80	            0x7423	                            je 0x4000ba5	      1562	security.c	FUNCTION_198	CALL_1
0x4000b82	          0x4989fd	                            mov r13, rdi	      1562	security.c	FUNCTION_198	CALL_1
0x4000b85	          0x4989f4	                            mov r12, rsi	      1562	security.c	FUNCTION_198	CALL_1
0x4000b88	          0x4889d5	                            mov rbp, rdx	      1562	security.c	FUNCTION_198	CALL_1
0x4000b8b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1562	security.c	FUNCTION_198	CALL_1
0x4000b8f	          0x4889ea	                            mov rdx, rbp	      1562	security.c	FUNCTION_198	CALL_1
0x4000b92	          0x4c89e6	                            mov rsi, r12	      1562	security.c	FUNCTION_198	CALL_1
0x4000b95	          0x4c89ef	                            mov rdi, r13	      1562	security.c	FUNCTION_198	CALL_1
0x4000b98	      0xe800000000	                          call 0x4000b9d	      1562	security.c	FUNCTION_198	CALL_1
0x4000b9d	          0x488b1b	                    mov rbx, qword [rbx]	      1562	security.c	FUNCTION_198	CALL_1
0x4000ba0	          0x4885db	                           test rbx, rbx	      1562	security.c	FUNCTION_198	CALL_1
0x4000ba3	            0x75e6	                           jne 0x4000b8b	      1562	security.c	FUNCTION_198	CALL_1
0x4000ba5	              0x5b	                                 pop rbx	      1563	security.c	FUNCTION_198
0x4000ba6	              0x5d	                                 pop rbp	      1563	security.c	FUNCTION_198
0x4000ba7	            0x415c	                                 pop r12	      1563	security.c	FUNCTION_198
0x4000ba9	            0x415d	                                 pop r13	      1563	security.c	FUNCTION_198
0x4000bab	              0xc3	                                     ret	      1563	security.c	FUNCTION_198
security_msg_queue_alloc	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x4002b20	              0x55	                                push rbp	      1180	security.c	FUNCTION_132
0x4002b21	              0x53	                                push rbx	      1180	security.c	FUNCTION_132
0x4002b22	          0x4889fd	                            mov rbp, rdi	      1180	security.c	FUNCTION_132
0x4002b25	    0x488b1d000000	            mov rbx, qword [0x04002b2c] 	      1181	security.c	FUNCTION_132	CALL_1
0x4002b2c	          0x4885db	                           test rbx, rbx	      1181	security.c	FUNCTION_132	CALL_1
0x4002b2f	            0x750a	                           jne 0x4002b3b	      1181	security.c	FUNCTION_132	CALL_1
0x4002b31	            0xeb1b	                           jmp 0x4002b4e	      1181	security.c	FUNCTION_132	CALL_1
0x4002b33	          0x488b1b	                    mov rbx, qword [rbx]	      1181	security.c	FUNCTION_132	CALL_1
0x4002b36	          0x4885db	                           test rbx, rbx	      1181	security.c	FUNCTION_132	CALL_1
0x4002b39	            0x7413	                            je 0x4002b4e	      1181	security.c	FUNCTION_132	CALL_1
0x4002b3b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1181	security.c	FUNCTION_132	CALL_1
0x4002b3f	          0x4889ef	                            mov rdi, rbp	      1181	security.c	FUNCTION_132	CALL_1
0x4002b42	      0xe800000000	                          call 0x4002b47	      1181	security.c	FUNCTION_132	CALL_1
0x4002b47	            0x85c0	                           test eax, eax	      1181	security.c	FUNCTION_132	CALL_1
0x4002b49	            0x74e8	                            je 0x4002b33	      1181	security.c	FUNCTION_132	CALL_1
0x4002b4b	              0x5b	                                 pop rbx	      1182	security.c	FUNCTION_132
0x4002b4c	              0x5d	                                 pop rbp	      1182	security.c	FUNCTION_132
0x4002b4d	              0xc3	                                     ret	      1182	security.c	FUNCTION_132
0x4002b4e	            0x31c0	                            xor eax, eax	      1180	security.c	FUNCTION_132
0x4002b50	              0x5b	                                 pop rbx	      1182	security.c	FUNCTION_132
0x4002b51	              0x5d	                                 pop rbp	      1182	security.c	FUNCTION_132
0x4002b52	              0xc3	                                     ret	      1182	security.c	FUNCTION_132
security_ismaclabel	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x4000400	              0x55	                                push rbp	      1286	security.c	FUNCTION_152
0x4000401	              0x53	                                push rbx	      1286	security.c	FUNCTION_152
0x4000402	          0x4889fd	                            mov rbp, rdi	      1286	security.c	FUNCTION_152
0x4000405	    0x488b1d000000	            mov rbx, qword [0x0400040c] 	      1287	security.c	FUNCTION_152	CALL_1
0x400040c	          0x4885db	                           test rbx, rbx	      1287	security.c	FUNCTION_152	CALL_1
0x400040f	            0x750a	                           jne 0x400041b	      1287	security.c	FUNCTION_152	CALL_1
0x4000411	            0xeb1b	                           jmp 0x400042e	      1287	security.c	FUNCTION_152	CALL_1
0x4000413	          0x488b1b	                    mov rbx, qword [rbx]	      1287	security.c	FUNCTION_152	CALL_1
0x4000416	          0x4885db	                           test rbx, rbx	      1287	security.c	FUNCTION_152	CALL_1
0x4000419	            0x7413	                            je 0x400042e	      1287	security.c	FUNCTION_152	CALL_1
0x400041b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1287	security.c	FUNCTION_152	CALL_1
0x400041f	          0x4889ef	                            mov rdi, rbp	      1287	security.c	FUNCTION_152	CALL_1
0x4000422	      0xe800000000	                          call 0x4000427	      1287	security.c	FUNCTION_152	CALL_1
0x4000427	            0x85c0	                           test eax, eax	      1287	security.c	FUNCTION_152	CALL_1
0x4000429	            0x74e8	                            je 0x4000413	      1287	security.c	FUNCTION_152	CALL_1
0x400042b	              0x5b	                                 pop rbx	      1288	security.c	FUNCTION_152
0x400042c	              0x5d	                                 pop rbp	      1288	security.c	FUNCTION_152
0x400042d	              0xc3	                                     ret	      1288	security.c	FUNCTION_152
0x400042e	            0x31c0	                            xor eax, eax	      1286	security.c	FUNCTION_152
0x4000430	              0x5b	                                 pop rbx	      1288	security.c	FUNCTION_152
0x4000431	              0x5d	                                 pop rbp	      1288	security.c	FUNCTION_152
0x4000432	              0xc3	                                     ret	      1288	security.c	FUNCTION_152
security_audit_rule_free	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	15
0x4003710	              0x55	                                push rbp	      1731	security.c	FUNCTION_221
0x4003711	              0x53	                                push rbx	      1731	security.c	FUNCTION_221
0x4003712	    0x488b1d000000	            mov rbx, qword [0x04003719] 	      1732	security.c	FUNCTION_221	CALL_1
0x4003719	          0x4885db	                           test rbx, rbx	      1732	security.c	FUNCTION_221	CALL_1
0x400371c	            0x7417	                            je 0x4003735	      1732	security.c	FUNCTION_221	CALL_1
0x400371e	          0x4889fd	                            mov rbp, rdi	      1732	security.c	FUNCTION_221	CALL_1
0x4003721	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1732	security.c	FUNCTION_221	CALL_1
0x4003725	          0x4889ef	                            mov rdi, rbp	      1732	security.c	FUNCTION_221	CALL_1
0x4003728	      0xe800000000	                          call 0x400372d	      1732	security.c	FUNCTION_221	CALL_1
0x400372d	          0x488b1b	                    mov rbx, qword [rbx]	      1732	security.c	FUNCTION_221	CALL_1
0x4003730	          0x4885db	                           test rbx, rbx	      1732	security.c	FUNCTION_221	CALL_1
0x4003733	            0x75ec	                           jne 0x4003721	      1732	security.c	FUNCTION_221	CALL_1
0x4003735	              0x5b	                                 pop rbx	      1733	security.c	FUNCTION_221
0x4003736	              0x5d	                                 pop rbp	      1733	security.c	FUNCTION_221
0x4003737	              0xc3	                                     ret	      1733	security.c	FUNCTION_221
security_sb_show_options	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x40015d0	            0x4154	                                push r12	       388	security.c	FUNCTION_35
0x40015d2	              0x55	                                push rbp	       388	security.c	FUNCTION_35
0x40015d3	          0x4989fc	                            mov r12, rdi	       388	security.c	FUNCTION_35
0x40015d6	              0x53	                                push rbx	       388	security.c	FUNCTION_35
0x40015d7	    0x488b1d000000	            mov rbx, qword [0x040015de] 	       389	security.c	FUNCTION_35	CALL_1
0x40015de	          0x4889f5	                            mov rbp, rsi	       389	security.c	FUNCTION_35	CALL_1
0x40015e1	          0x4885db	                           test rbx, rbx	       389	security.c	FUNCTION_35	CALL_1
0x40015e4	            0x750a	                           jne 0x40015f0	       389	security.c	FUNCTION_35	CALL_1
0x40015e6	            0xeb20	                           jmp 0x4001608	       389	security.c	FUNCTION_35	CALL_1
0x40015e8	          0x488b1b	                    mov rbx, qword [rbx]	       389	security.c	FUNCTION_35	CALL_1
0x40015eb	          0x4885db	                           test rbx, rbx	       389	security.c	FUNCTION_35	CALL_1
0x40015ee	            0x7418	                            je 0x4001608	       389	security.c	FUNCTION_35	CALL_1
0x40015f0	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       389	security.c	FUNCTION_35	CALL_1
0x40015f4	          0x4889ee	                            mov rsi, rbp	       389	security.c	FUNCTION_35	CALL_1
0x40015f7	          0x4c89e7	                            mov rdi, r12	       389	security.c	FUNCTION_35	CALL_1
0x40015fa	      0xe800000000	                          call 0x40015ff	       389	security.c	FUNCTION_35	CALL_1
0x40015ff	            0x85c0	                           test eax, eax	       389	security.c	FUNCTION_35	CALL_1
0x4001601	            0x74e5	                            je 0x40015e8	       389	security.c	FUNCTION_35	CALL_1
0x4001603	              0x5b	                                 pop rbx	       390	security.c	FUNCTION_35
0x4001604	              0x5d	                                 pop rbp	       390	security.c	FUNCTION_35
0x4001605	            0x415c	                                 pop r12	       390	security.c	FUNCTION_35
0x4001607	              0xc3	                                     ret	       390	security.c	FUNCTION_35
0x4001608	              0x5b	                                 pop rbx	       390	security.c	FUNCTION_35
0x4001609	            0x31c0	                            xor eax, eax	       388	security.c	FUNCTION_35
0x400160b	              0x5d	                                 pop rbp	       390	security.c	FUNCTION_35
0x400160c	            0x415c	                                 pop r12	       390	security.c	FUNCTION_35
0x400160e	              0xc3	                                     ret	       390	security.c	FUNCTION_35
security_inode_setattr	IF,2:SWITCH,0:functions,0:CALL,5:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x4000cf0	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       710	security.c	FUNCTION_71	IF_1	CALL_3
0x4000cf4	        0xf6400d02	                test byte [rax + 0xd], 2	       710	security.c	FUNCTION_71	IF_1	CALL_3
0x4000cf8	            0x753f	                           jne 0x4000d39	       710	security.c	FUNCTION_71	IF_1	CALL_3
0x4000cfa	            0x4154	                                push r12	       707	security.c	FUNCTION_71
0x4000cfc	              0x55	                                push rbp	       707	security.c	FUNCTION_71
0x4000cfd	          0x4989f4	                            mov r12, rsi	       707	security.c	FUNCTION_71
0x4000d00	              0x53	                                push rbx	       707	security.c	FUNCTION_71
0x4000d01	    0x488b1d000000	            mov rbx, qword [0x04000d08] 	       712	security.c	FUNCTION_71	CALL_4
0x4000d08	          0x4889fd	                            mov rbp, rdi	       712	security.c	FUNCTION_71	CALL_4
0x4000d0b	          0x4885db	                           test rbx, rbx	       712	security.c	FUNCTION_71	CALL_4
0x4000d0e	            0x750a	                           jne 0x4000d1a	       712	security.c	FUNCTION_71	CALL_4
0x4000d10	            0xeb20	                           jmp 0x4000d32	       712	security.c	FUNCTION_71	CALL_4
0x4000d12	          0x488b1b	                    mov rbx, qword [rbx]	       712	security.c	FUNCTION_71	CALL_4
0x4000d15	          0x4885db	                           test rbx, rbx	       712	security.c	FUNCTION_71	CALL_4
0x4000d18	            0x7418	                            je 0x4000d32	       712	security.c	FUNCTION_71	CALL_4
0x4000d1a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       712	security.c	FUNCTION_71	CALL_4
0x4000d1e	          0x4c89e6	                            mov rsi, r12	       712	security.c	FUNCTION_71	CALL_4
0x4000d21	          0x4889ef	                            mov rdi, rbp	       712	security.c	FUNCTION_71	CALL_4
0x4000d24	      0xe800000000	                          call 0x4000d29	       712	security.c	FUNCTION_71	CALL_4
0x4000d29	            0x85c0	                           test eax, eax	       712	security.c	FUNCTION_71	CALL_4
0x4000d2b	            0x74e5	                            je 0x4000d12	       712	security.c	FUNCTION_71	CALL_4
0x4000d2d	              0x5b	                                 pop rbx	       716	security.c	FUNCTION_71
0x4000d2e	              0x5d	                                 pop rbp	       716	security.c	FUNCTION_71
0x4000d2f	            0x415c	                                 pop r12	       716	security.c	FUNCTION_71
0x4000d31	              0xc3	                                     ret	       716	security.c	FUNCTION_71
0x4000d32	              0x5b	                                 pop rbx	       716	security.c	FUNCTION_71
0x4000d33	            0x31c0	                            xor eax, eax	       711	security.c	FUNCTION_71	IF_1
0x4000d35	              0x5d	                                 pop rbp	       716	security.c	FUNCTION_71
0x4000d36	            0x415c	                                 pop r12	       716	security.c	FUNCTION_71
0x4000d38	              0xc3	                                     ret	       716	security.c	FUNCTION_71
0x4000d39	            0x31c0	                            xor eax, eax	       711	security.c	FUNCTION_71	IF_1
0x4000d3b	              0xc3	                                     ret	       716	security.c	FUNCTION_71
security_ipc_getsecid	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	20
0x4002a70	            0x4154	                                push r12	      1164	security.c	FUNCTION_129
0x4002a72	              0x55	                                push rbp	      1164	security.c	FUNCTION_129
0x4002a73	              0x53	                                push rbx	      1164	security.c	FUNCTION_129
0x4002a74	    0xc70600000000	                      mov dword [rsi], 0	      1165	security.c	FUNCTION_129
0x4002a7a	    0x488b1d000000	            mov rbx, qword [0x04002a81] 	      1166	security.c	FUNCTION_129	CALL_1
0x4002a81	          0x4885db	                           test rbx, rbx	      1166	security.c	FUNCTION_129	CALL_1
0x4002a84	            0x741d	                            je 0x4002aa3	      1166	security.c	FUNCTION_129	CALL_1
0x4002a86	          0x4989fc	                            mov r12, rdi	      1166	security.c	FUNCTION_129	CALL_1
0x4002a89	          0x4889f5	                            mov rbp, rsi	      1166	security.c	FUNCTION_129	CALL_1
0x4002a8c	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1166	security.c	FUNCTION_129	CALL_1
0x4002a90	          0x4889ee	                            mov rsi, rbp	      1166	security.c	FUNCTION_129	CALL_1
0x4002a93	          0x4c89e7	                            mov rdi, r12	      1166	security.c	FUNCTION_129	CALL_1
0x4002a96	      0xe800000000	                          call 0x4002a9b	      1166	security.c	FUNCTION_129	CALL_1
0x4002a9b	          0x488b1b	                    mov rbx, qword [rbx]	      1166	security.c	FUNCTION_129	CALL_1
0x4002a9e	          0x4885db	                           test rbx, rbx	      1166	security.c	FUNCTION_129	CALL_1
0x4002aa1	            0x75e9	                           jne 0x4002a8c	      1166	security.c	FUNCTION_129	CALL_1
0x4002aa3	              0x5b	                                 pop rbx	      1167	security.c	FUNCTION_129
0x4002aa4	              0x5d	                                 pop rbp	      1167	security.c	FUNCTION_129
0x4002aa5	            0x415c	                                 pop r12	      1167	security.c	FUNCTION_129
0x4002aa7	              0xc3	                                     ret	      1167	security.c	FUNCTION_129
security_inet_conn_established	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	19
0x40008b0	            0x4154	                                push r12	      1486	security.c	FUNCTION_186
0x40008b2	              0x55	                                push rbp	      1486	security.c	FUNCTION_186
0x40008b3	              0x53	                                push rbx	      1486	security.c	FUNCTION_186
0x40008b4	    0x488b1d000000	            mov rbx, qword [0x040008bb] 	      1487	security.c	FUNCTION_186	CALL_1
0x40008bb	          0x4885db	                           test rbx, rbx	      1487	security.c	FUNCTION_186	CALL_1
0x40008be	            0x741d	                            je 0x40008dd	      1487	security.c	FUNCTION_186	CALL_1
0x40008c0	          0x4989fc	                            mov r12, rdi	      1487	security.c	FUNCTION_186	CALL_1
0x40008c3	          0x4889f5	                            mov rbp, rsi	      1487	security.c	FUNCTION_186	CALL_1
0x40008c6	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1487	security.c	FUNCTION_186	CALL_1
0x40008ca	          0x4889ee	                            mov rsi, rbp	      1487	security.c	FUNCTION_186	CALL_1
0x40008cd	          0x4c89e7	                            mov rdi, r12	      1487	security.c	FUNCTION_186	CALL_1
0x40008d0	      0xe800000000	                          call 0x40008d5	      1487	security.c	FUNCTION_186	CALL_1
0x40008d5	          0x488b1b	                    mov rbx, qword [rbx]	      1487	security.c	FUNCTION_186	CALL_1
0x40008d8	          0x4885db	                           test rbx, rbx	      1487	security.c	FUNCTION_186	CALL_1
0x40008db	            0x75e9	                           jne 0x40008c6	      1487	security.c	FUNCTION_186	CALL_1
0x40008dd	              0x5b	                                 pop rbx	      1488	security.c	FUNCTION_186
0x40008de	              0x5d	                                 pop rbp	      1488	security.c	FUNCTION_186
0x40008df	            0x415c	                                 pop r12	      1488	security.c	FUNCTION_186
0x40008e1	              0xc3	                                     ret	      1488	security.c	FUNCTION_186
security_tun_dev_create	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	17
0x40009e0	              0x53	                                push rbx	      1522	security.c	FUNCTION_192
0x40009e1	    0x488b1d000000	            mov rbx, qword [0x040009e8] 	      1523	security.c	FUNCTION_192	CALL_1
0x40009e8	          0x4885db	                           test rbx, rbx	      1523	security.c	FUNCTION_192	CALL_1
0x40009eb	            0x750a	                           jne 0x40009f7	      1523	security.c	FUNCTION_192	CALL_1
0x40009ed	            0xeb17	                           jmp 0x4000a06	      1523	security.c	FUNCTION_192	CALL_1
0x40009ef	          0x488b1b	                    mov rbx, qword [rbx]	      1523	security.c	FUNCTION_192	CALL_1
0x40009f2	          0x4885db	                           test rbx, rbx	      1523	security.c	FUNCTION_192	CALL_1
0x40009f5	            0x740f	                            je 0x4000a06	      1523	security.c	FUNCTION_192	CALL_1
0x40009f7	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1523	security.c	FUNCTION_192	CALL_1
0x40009fb	      0xe800000000	                          call 0x4000a00	      1523	security.c	FUNCTION_192	CALL_1
0x4000a00	            0x85c0	                           test eax, eax	      1523	security.c	FUNCTION_192	CALL_1
0x4000a02	            0x74eb	                            je 0x40009ef	      1523	security.c	FUNCTION_192	CALL_1
0x4000a04	              0x5b	                                 pop rbx	      1524	security.c	FUNCTION_192
0x4000a05	              0xc3	                                     ret	      1524	security.c	FUNCTION_192
0x4000a06	            0x31c0	                            xor eax, eax	      1522	security.c	FUNCTION_192
0x4000a08	              0x5b	                                 pop rbx	      1524	security.c	FUNCTION_192
0x4000a09	              0xc3	                                     ret	      1524	security.c	FUNCTION_192
security_audit_rule_init	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	37
0x4003670	            0x4156	                                push r14	      1721	security.c	FUNCTION_219
0x4003672	            0x4155	                                push r13	      1721	security.c	FUNCTION_219
0x4003674	            0x4154	                                push r12	      1721	security.c	FUNCTION_219
0x4003676	              0x55	                                push rbp	      1721	security.c	FUNCTION_219
0x4003677	              0x53	                                push rbx	      1721	security.c	FUNCTION_219
0x4003678	    0x488b1d000000	            mov rbx, qword [0x0400367f] 	      1722	security.c	FUNCTION_219	CALL_1
0x400367f	          0x4885db	                           test rbx, rbx	      1722	security.c	FUNCTION_219	CALL_1
0x4003682	            0x7438	                            je 0x40036bc	      1722	security.c	FUNCTION_219	CALL_1
0x4003684	          0x4189fe	                           mov r14d, edi	      1722	security.c	FUNCTION_219	CALL_1
0x4003687	          0x4189f5	                           mov r13d, esi	      1722	security.c	FUNCTION_219	CALL_1
0x400368a	          0x4989d4	                            mov r12, rdx	      1722	security.c	FUNCTION_219	CALL_1
0x400368d	          0x4889cd	                            mov rbp, rcx	      1722	security.c	FUNCTION_219	CALL_1
0x4003690	            0xeb08	                           jmp 0x400369a	      1722	security.c	FUNCTION_219	CALL_1
0x4003692	          0x488b1b	                    mov rbx, qword [rbx]	      1722	security.c	FUNCTION_219	CALL_1
0x4003695	          0x4885db	                           test rbx, rbx	      1722	security.c	FUNCTION_219	CALL_1
0x4003698	            0x7422	                            je 0x40036bc	      1722	security.c	FUNCTION_219	CALL_1
0x400369a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1722	security.c	FUNCTION_219	CALL_1
0x400369e	          0x4889e9	                            mov rcx, rbp	      1722	security.c	FUNCTION_219	CALL_1
0x40036a1	          0x4c89e2	                            mov rdx, r12	      1722	security.c	FUNCTION_219	CALL_1
0x40036a4	          0x4489ee	                           mov esi, r13d	      1722	security.c	FUNCTION_219	CALL_1
0x40036a7	          0x4489f7	                           mov edi, r14d	      1722	security.c	FUNCTION_219	CALL_1
0x40036aa	      0xe800000000	                          call 0x40036af	      1722	security.c	FUNCTION_219	CALL_1
0x40036af	            0x85c0	                           test eax, eax	      1722	security.c	FUNCTION_219	CALL_1
0x40036b1	            0x74df	                            je 0x4003692	      1722	security.c	FUNCTION_219	CALL_1
0x40036b3	              0x5b	                                 pop rbx	      1723	security.c	FUNCTION_219
0x40036b4	              0x5d	                                 pop rbp	      1723	security.c	FUNCTION_219
0x40036b5	            0x415c	                                 pop r12	      1723	security.c	FUNCTION_219
0x40036b7	            0x415d	                                 pop r13	      1723	security.c	FUNCTION_219
0x40036b9	            0x415e	                                 pop r14	      1723	security.c	FUNCTION_219
0x40036bb	              0xc3	                                     ret	      1723	security.c	FUNCTION_219
0x40036bc	              0x5b	                                 pop rbx	      1723	security.c	FUNCTION_219
0x40036bd	            0x31c0	                            xor eax, eax	      1721	security.c	FUNCTION_219
0x40036bf	              0x5d	                                 pop rbp	      1723	security.c	FUNCTION_219
0x40036c0	            0x415c	                                 pop r12	      1723	security.c	FUNCTION_219
0x40036c2	            0x415d	                                 pop r13	      1723	security.c	FUNCTION_219
0x40036c4	            0x415e	                                 pop r14	      1723	security.c	FUNCTION_219
0x40036c6	              0xc3	                                     ret	      1723	security.c	FUNCTION_219
security_sb_kern_mount	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x4001580	            0x4155	                                push r13	       383	security.c	FUNCTION_34
0x4001582	            0x4154	                                push r12	       383	security.c	FUNCTION_34
0x4001584	              0x55	                                push rbp	       383	security.c	FUNCTION_34
0x4001585	              0x53	                                push rbx	       383	security.c	FUNCTION_34
0x4001586	    0x488b1d000000	            mov rbx, qword [0x0400158d] 	       384	security.c	FUNCTION_34	CALL_1
0x400158d	          0x4885db	                           test rbx, rbx	       384	security.c	FUNCTION_34	CALL_1
0x4001590	            0x7430	                            je 0x40015c2	       384	security.c	FUNCTION_34	CALL_1
0x4001592	          0x4989fd	                            mov r13, rdi	       384	security.c	FUNCTION_34	CALL_1
0x4001595	          0x4189f4	                           mov r12d, esi	       384	security.c	FUNCTION_34	CALL_1
0x4001598	          0x4889d5	                            mov rbp, rdx	       384	security.c	FUNCTION_34	CALL_1
0x400159b	            0xeb08	                           jmp 0x40015a5	       384	security.c	FUNCTION_34	CALL_1
0x400159d	          0x488b1b	                    mov rbx, qword [rbx]	       384	security.c	FUNCTION_34	CALL_1
0x40015a0	          0x4885db	                           test rbx, rbx	       384	security.c	FUNCTION_34	CALL_1
0x40015a3	            0x741d	                            je 0x40015c2	       384	security.c	FUNCTION_34	CALL_1
0x40015a5	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       384	security.c	FUNCTION_34	CALL_1
0x40015a9	          0x4889ea	                            mov rdx, rbp	       384	security.c	FUNCTION_34	CALL_1
0x40015ac	          0x4489e6	                           mov esi, r12d	       384	security.c	FUNCTION_34	CALL_1
0x40015af	          0x4c89ef	                            mov rdi, r13	       384	security.c	FUNCTION_34	CALL_1
0x40015b2	      0xe800000000	                          call 0x40015b7	       384	security.c	FUNCTION_34	CALL_1
0x40015b7	            0x85c0	                           test eax, eax	       384	security.c	FUNCTION_34	CALL_1
0x40015b9	            0x74e2	                            je 0x400159d	       384	security.c	FUNCTION_34	CALL_1
0x40015bb	              0x5b	                                 pop rbx	       385	security.c	FUNCTION_34
0x40015bc	              0x5d	                                 pop rbp	       385	security.c	FUNCTION_34
0x40015bd	            0x415c	                                 pop r12	       385	security.c	FUNCTION_34
0x40015bf	            0x415d	                                 pop r13	       385	security.c	FUNCTION_34
0x40015c1	              0xc3	                                     ret	       385	security.c	FUNCTION_34
0x40015c2	              0x5b	                                 pop rbx	       385	security.c	FUNCTION_34
0x40015c3	            0x31c0	                            xor eax, eax	       383	security.c	FUNCTION_34
0x40015c5	              0x5d	                                 pop rbp	       385	security.c	FUNCTION_34
0x40015c6	            0x415c	                                 pop r12	       385	security.c	FUNCTION_34
0x40015c8	            0x415d	                                 pop r13	       385	security.c	FUNCTION_34
0x40015ca	              0xc3	                                     ret	       385	security.c	FUNCTION_34
security_socket_setsockopt	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x40033b0	            0x4155	                                push r13	      1408	security.c	FUNCTION_173
0x40033b2	            0x4154	                                push r12	      1408	security.c	FUNCTION_173
0x40033b4	              0x55	                                push rbp	      1408	security.c	FUNCTION_173
0x40033b5	              0x53	                                push rbx	      1408	security.c	FUNCTION_173
0x40033b6	    0x488b1d000000	            mov rbx, qword [0x040033bd] 	      1409	security.c	FUNCTION_173	CALL_1
0x40033bd	          0x4885db	                           test rbx, rbx	      1409	security.c	FUNCTION_173	CALL_1
0x40033c0	            0x742e	                            je 0x40033f0	      1409	security.c	FUNCTION_173	CALL_1
0x40033c2	          0x4989fd	                            mov r13, rdi	      1409	security.c	FUNCTION_173	CALL_1
0x40033c5	          0x4189f4	                           mov r12d, esi	      1409	security.c	FUNCTION_173	CALL_1
0x40033c8	            0x89d5	                            mov ebp, edx	      1409	security.c	FUNCTION_173	CALL_1
0x40033ca	            0xeb08	                           jmp 0x40033d4	      1409	security.c	FUNCTION_173	CALL_1
0x40033cc	          0x488b1b	                    mov rbx, qword [rbx]	      1409	security.c	FUNCTION_173	CALL_1
0x40033cf	          0x4885db	                           test rbx, rbx	      1409	security.c	FUNCTION_173	CALL_1
0x40033d2	            0x741c	                            je 0x40033f0	      1409	security.c	FUNCTION_173	CALL_1
0x40033d4	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1409	security.c	FUNCTION_173	CALL_1
0x40033d8	            0x89ea	                            mov edx, ebp	      1409	security.c	FUNCTION_173	CALL_1
0x40033da	          0x4489e6	                           mov esi, r12d	      1409	security.c	FUNCTION_173	CALL_1
0x40033dd	          0x4c89ef	                            mov rdi, r13	      1409	security.c	FUNCTION_173	CALL_1
0x40033e0	      0xe800000000	                          call 0x40033e5	      1409	security.c	FUNCTION_173	CALL_1
0x40033e5	            0x85c0	                           test eax, eax	      1409	security.c	FUNCTION_173	CALL_1
0x40033e7	            0x74e3	                            je 0x40033cc	      1409	security.c	FUNCTION_173	CALL_1
0x40033e9	              0x5b	                                 pop rbx	      1410	security.c	FUNCTION_173
0x40033ea	              0x5d	                                 pop rbp	      1410	security.c	FUNCTION_173
0x40033eb	            0x415c	                                 pop r12	      1410	security.c	FUNCTION_173
0x40033ed	            0x415d	                                 pop r13	      1410	security.c	FUNCTION_173
0x40033ef	              0xc3	                                     ret	      1410	security.c	FUNCTION_173
0x40033f0	              0x5b	                                 pop rbx	      1410	security.c	FUNCTION_173
0x40033f1	            0x31c0	                            xor eax, eax	      1408	security.c	FUNCTION_173
0x40033f3	              0x5d	                                 pop rbp	      1410	security.c	FUNCTION_173
0x40033f4	            0x415c	                                 pop r12	      1410	security.c	FUNCTION_173
0x40033f6	            0x415d	                                 pop r13	      1410	security.c	FUNCTION_173
0x40033f8	              0xc3	                                     ret	      1410	security.c	FUNCTION_173
security_release_secctx	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	19
0x40004f0	            0x4154	                                push r12	      1306	security.c	FUNCTION_155
0x40004f2	              0x55	                                push rbp	      1306	security.c	FUNCTION_155
0x40004f3	              0x53	                                push rbx	      1306	security.c	FUNCTION_155
0x40004f4	    0x488b1d000000	            mov rbx, qword [0x040004fb] 	      1307	security.c	FUNCTION_155	CALL_1
0x40004fb	          0x4885db	                           test rbx, rbx	      1307	security.c	FUNCTION_155	CALL_1
0x40004fe	            0x741b	                            je 0x400051b	      1307	security.c	FUNCTION_155	CALL_1
0x4000500	          0x4989fc	                            mov r12, rdi	      1307	security.c	FUNCTION_155	CALL_1
0x4000503	            0x89f5	                            mov ebp, esi	      1307	security.c	FUNCTION_155	CALL_1
0x4000505	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1307	security.c	FUNCTION_155	CALL_1
0x4000509	            0x89ee	                            mov esi, ebp	      1307	security.c	FUNCTION_155	CALL_1
0x400050b	          0x4c89e7	                            mov rdi, r12	      1307	security.c	FUNCTION_155	CALL_1
0x400050e	      0xe800000000	                          call 0x4000513	      1307	security.c	FUNCTION_155	CALL_1
0x4000513	          0x488b1b	                    mov rbx, qword [rbx]	      1307	security.c	FUNCTION_155	CALL_1
0x4000516	          0x4885db	                           test rbx, rbx	      1307	security.c	FUNCTION_155	CALL_1
0x4000519	            0x75ea	                           jne 0x4000505	      1307	security.c	FUNCTION_155	CALL_1
0x400051b	              0x5b	                                 pop rbx	      1308	security.c	FUNCTION_155
0x400051c	              0x5d	                                 pop rbp	      1308	security.c	FUNCTION_155
0x400051d	            0x415c	                                 pop r12	      1308	security.c	FUNCTION_155
0x400051f	              0xc3	                                     ret	      1308	security.c	FUNCTION_155
register_lsm_notifier	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	3
0x4000e00	          0x4889fe	                            mov rsi, rdi	       185	security.c	FUNCTION_9
0x4000e03	    0x48c7c7000000	                              mov rdi, 0	       186	security.c	FUNCTION_9	CALL_1
0x4000e0a	      0xe900000000	                           jmp 0x4000e0f	       186	security.c	FUNCTION_9	CALL_1
security_msg_queue_msgctl	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4002bd0	            0x4154	                                push r12	      1195	security.c	FUNCTION_135
0x4002bd2	              0x55	                                push rbp	      1195	security.c	FUNCTION_135
0x4002bd3	          0x4989fc	                            mov r12, rdi	      1195	security.c	FUNCTION_135
0x4002bd6	              0x53	                                push rbx	      1195	security.c	FUNCTION_135
0x4002bd7	    0x488b1d000000	            mov rbx, qword [0x04002bde] 	      1196	security.c	FUNCTION_135	CALL_1
0x4002bde	            0x89f5	                            mov ebp, esi	      1196	security.c	FUNCTION_135	CALL_1
0x4002be0	          0x4885db	                           test rbx, rbx	      1196	security.c	FUNCTION_135	CALL_1
0x4002be3	            0x750a	                           jne 0x4002bef	      1196	security.c	FUNCTION_135	CALL_1
0x4002be5	            0xeb1f	                           jmp 0x4002c06	      1196	security.c	FUNCTION_135	CALL_1
0x4002be7	          0x488b1b	                    mov rbx, qword [rbx]	      1196	security.c	FUNCTION_135	CALL_1
0x4002bea	          0x4885db	                           test rbx, rbx	      1196	security.c	FUNCTION_135	CALL_1
0x4002bed	            0x7417	                            je 0x4002c06	      1196	security.c	FUNCTION_135	CALL_1
0x4002bef	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1196	security.c	FUNCTION_135	CALL_1
0x4002bf3	            0x89ee	                            mov esi, ebp	      1196	security.c	FUNCTION_135	CALL_1
0x4002bf5	          0x4c89e7	                            mov rdi, r12	      1196	security.c	FUNCTION_135	CALL_1
0x4002bf8	      0xe800000000	                          call 0x4002bfd	      1196	security.c	FUNCTION_135	CALL_1
0x4002bfd	            0x85c0	                           test eax, eax	      1196	security.c	FUNCTION_135	CALL_1
0x4002bff	            0x74e6	                            je 0x4002be7	      1196	security.c	FUNCTION_135	CALL_1
0x4002c01	              0x5b	                                 pop rbx	      1197	security.c	FUNCTION_135
0x4002c02	              0x5d	                                 pop rbp	      1197	security.c	FUNCTION_135
0x4002c03	            0x415c	                                 pop r12	      1197	security.c	FUNCTION_135
0x4002c05	              0xc3	                                     ret	      1197	security.c	FUNCTION_135
0x4002c06	              0x5b	                                 pop rbx	      1197	security.c	FUNCTION_135
0x4002c07	            0x31c0	                            xor eax, eax	      1195	security.c	FUNCTION_135
0x4002c09	              0x5d	                                 pop rbp	      1197	security.c	FUNCTION_135
0x4002c0a	            0x415c	                                 pop r12	      1197	security.c	FUNCTION_135
0x4002c0c	              0xc3	                                     ret	      1197	security.c	FUNCTION_135
security_task_getscheduler	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x4002890	              0x55	                                push rbp	      1120	security.c	FUNCTION_123
0x4002891	              0x53	                                push rbx	      1120	security.c	FUNCTION_123
0x4002892	          0x4889fd	                            mov rbp, rdi	      1120	security.c	FUNCTION_123
0x4002895	    0x488b1d000000	            mov rbx, qword [0x0400289c] 	      1121	security.c	FUNCTION_123	CALL_1
0x400289c	          0x4885db	                           test rbx, rbx	      1121	security.c	FUNCTION_123	CALL_1
0x400289f	            0x750a	                           jne 0x40028ab	      1121	security.c	FUNCTION_123	CALL_1
0x40028a1	            0xeb1b	                           jmp 0x40028be	      1121	security.c	FUNCTION_123	CALL_1
0x40028a3	          0x488b1b	                    mov rbx, qword [rbx]	      1121	security.c	FUNCTION_123	CALL_1
0x40028a6	          0x4885db	                           test rbx, rbx	      1121	security.c	FUNCTION_123	CALL_1
0x40028a9	            0x7413	                            je 0x40028be	      1121	security.c	FUNCTION_123	CALL_1
0x40028ab	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1121	security.c	FUNCTION_123	CALL_1
0x40028af	          0x4889ef	                            mov rdi, rbp	      1121	security.c	FUNCTION_123	CALL_1
0x40028b2	      0xe800000000	                          call 0x40028b7	      1121	security.c	FUNCTION_123	CALL_1
0x40028b7	            0x85c0	                           test eax, eax	      1121	security.c	FUNCTION_123	CALL_1
0x40028b9	            0x74e8	                            je 0x40028a3	      1121	security.c	FUNCTION_123	CALL_1
0x40028bb	              0x5b	                                 pop rbx	      1122	security.c	FUNCTION_123
0x40028bc	              0x5d	                                 pop rbp	      1122	security.c	FUNCTION_123
0x40028bd	              0xc3	                                     ret	      1122	security.c	FUNCTION_123
0x40028be	            0x31c0	                            xor eax, eax	      1120	security.c	FUNCTION_123
0x40028c0	              0x5b	                                 pop rbx	      1122	security.c	FUNCTION_123
0x40028c1	              0x5d	                                 pop rbp	      1122	security.c	FUNCTION_123
0x40028c2	              0xc3	                                     ret	      1122	security.c	FUNCTION_123
security_sctp_bind_connect	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	37
0x4000b10	            0x4156	                                push r14	      1553	security.c	FUNCTION_197
0x4000b12	            0x4155	                                push r13	      1553	security.c	FUNCTION_197
0x4000b14	            0x4154	                                push r12	      1553	security.c	FUNCTION_197
0x4000b16	              0x55	                                push rbp	      1553	security.c	FUNCTION_197
0x4000b17	              0x53	                                push rbx	      1553	security.c	FUNCTION_197
0x4000b18	    0x488b1d000000	            mov rbx, qword [0x04000b1f] 	      1554	security.c	FUNCTION_197	CALL_1
0x4000b1f	          0x4885db	                           test rbx, rbx	      1554	security.c	FUNCTION_197	CALL_1
0x4000b22	            0x7436	                            je 0x4000b5a	      1554	security.c	FUNCTION_197	CALL_1
0x4000b24	          0x4989fe	                            mov r14, rdi	      1554	security.c	FUNCTION_197	CALL_1
0x4000b27	          0x4189f5	                           mov r13d, esi	      1554	security.c	FUNCTION_197	CALL_1
0x4000b2a	          0x4989d4	                            mov r12, rdx	      1554	security.c	FUNCTION_197	CALL_1
0x4000b2d	            0x89cd	                            mov ebp, ecx	      1554	security.c	FUNCTION_197	CALL_1
0x4000b2f	            0xeb08	                           jmp 0x4000b39	      1554	security.c	FUNCTION_197	CALL_1
0x4000b31	          0x488b1b	                    mov rbx, qword [rbx]	      1554	security.c	FUNCTION_197	CALL_1
0x4000b34	          0x4885db	                           test rbx, rbx	      1554	security.c	FUNCTION_197	CALL_1
0x4000b37	            0x7421	                            je 0x4000b5a	      1554	security.c	FUNCTION_197	CALL_1
0x4000b39	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1554	security.c	FUNCTION_197	CALL_1
0x4000b3d	            0x89e9	                            mov ecx, ebp	      1554	security.c	FUNCTION_197	CALL_1
0x4000b3f	          0x4c89e2	                            mov rdx, r12	      1554	security.c	FUNCTION_197	CALL_1
0x4000b42	          0x4489ee	                           mov esi, r13d	      1554	security.c	FUNCTION_197	CALL_1
0x4000b45	          0x4c89f7	                            mov rdi, r14	      1554	security.c	FUNCTION_197	CALL_1
0x4000b48	      0xe800000000	                          call 0x4000b4d	      1554	security.c	FUNCTION_197	CALL_1
0x4000b4d	            0x85c0	                           test eax, eax	      1554	security.c	FUNCTION_197	CALL_1
0x4000b4f	            0x74e0	                            je 0x4000b31	      1554	security.c	FUNCTION_197	CALL_1
0x4000b51	              0x5b	                                 pop rbx	      1556	security.c	FUNCTION_197
0x4000b52	              0x5d	                                 pop rbp	      1556	security.c	FUNCTION_197
0x4000b53	            0x415c	                                 pop r12	      1556	security.c	FUNCTION_197
0x4000b55	            0x415d	                                 pop r13	      1556	security.c	FUNCTION_197
0x4000b57	            0x415e	                                 pop r14	      1556	security.c	FUNCTION_197
0x4000b59	              0xc3	                                     ret	      1556	security.c	FUNCTION_197
0x4000b5a	              0x5b	                                 pop rbx	      1556	security.c	FUNCTION_197
0x4000b5b	            0x31c0	                            xor eax, eax	      1553	security.c	FUNCTION_197
0x4000b5d	              0x5d	                                 pop rbp	      1556	security.c	FUNCTION_197
0x4000b5e	            0x415c	                                 pop r12	      1556	security.c	FUNCTION_197
0x4000b60	            0x415d	                                 pop r13	      1556	security.c	FUNCTION_197
0x4000b62	            0x415e	                                 pop r14	      1556	security.c	FUNCTION_197
0x4000b64	              0xc3	                                     ret	      1556	security.c	FUNCTION_197
choose_lsm	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	11
0x4000040	            0x4154	                                push r12	       372	security.c	FUNCTION_32
0x4000042	              0x55	                                push rbp	       372	security.c	FUNCTION_32
0x4000043	          0x4989fc	                            mov r12, rdi	       372	security.c	FUNCTION_32
0x4000046	              0x53	                                push rbx	       372	security.c	FUNCTION_32
0x4000047	    0x488b1d000000	            mov rbx, qword [0x0400004e] 	       373	security.c	FUNCTION_32	CALL_1
0x400004e	          0x4889f5	                            mov rbp, rsi	       373	security.c	FUNCTION_32	CALL_1
0x4000051	          0x4885db	                           test rbx, rbx	       373	security.c	FUNCTION_32	CALL_1
0x4000054	            0x750a	                           jne 0x4000060	       373	security.c	FUNCTION_32	CALL_1
0x4000056	            0xeb20	                           jmp 0x4000078	       373	security.c	FUNCTION_32	CALL_1
0x4000058	              0x48	                                 invalid	       373	security.c	FUNCTION_32	CALL_1
0x4000059	              0x8b	                                 invalid	       373	security.c	FUNCTION_32	CALL_1
security_socket_getsockname	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x40032e0	              0x55	                                push rbp	      1393	security.c	FUNCTION_170
0x40032e1	              0x53	                                push rbx	      1393	security.c	FUNCTION_170
0x40032e2	          0x4889fd	                            mov rbp, rdi	      1393	security.c	FUNCTION_170
0x40032e5	    0x488b1d000000	            mov rbx, qword [0x040032ec] 	      1394	security.c	FUNCTION_170	CALL_1
0x40032ec	          0x4885db	                           test rbx, rbx	      1394	security.c	FUNCTION_170	CALL_1
0x40032ef	            0x750a	                           jne 0x40032fb	      1394	security.c	FUNCTION_170	CALL_1
0x40032f1	            0xeb1b	                           jmp 0x400330e	      1394	security.c	FUNCTION_170	CALL_1
0x40032f3	          0x488b1b	                    mov rbx, qword [rbx]	      1394	security.c	FUNCTION_170	CALL_1
0x40032f6	          0x4885db	                           test rbx, rbx	      1394	security.c	FUNCTION_170	CALL_1
0x40032f9	            0x7413	                            je 0x400330e	      1394	security.c	FUNCTION_170	CALL_1
0x40032fb	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1394	security.c	FUNCTION_170	CALL_1
0x40032ff	          0x4889ef	                            mov rdi, rbp	      1394	security.c	FUNCTION_170	CALL_1
0x4003302	      0xe800000000	                          call 0x4003307	      1394	security.c	FUNCTION_170	CALL_1
0x4003307	            0x85c0	                           test eax, eax	      1394	security.c	FUNCTION_170	CALL_1
0x4003309	            0x74e8	                            je 0x40032f3	      1394	security.c	FUNCTION_170	CALL_1
0x400330b	              0x5b	                                 pop rbx	      1395	security.c	FUNCTION_170
0x400330c	              0x5d	                                 pop rbp	      1395	security.c	FUNCTION_170
0x400330d	              0xc3	                                     ret	      1395	security.c	FUNCTION_170
0x400330e	            0x31c0	                            xor eax, eax	      1393	security.c	FUNCTION_170
0x4003310	              0x5b	                                 pop rbx	      1395	security.c	FUNCTION_170
0x4003311	              0x5d	                                 pop rbp	      1395	security.c	FUNCTION_170
0x4003312	              0xc3	                                     ret	      1395	security.c	FUNCTION_170
security_module_enable	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	7
0x400005a	          0x1b4885	             sbb ecx, dword [rax - 0x7b]	       373	security.c	FUNCTION_32	CALL_1
0x400005d	              0xdb	                                 invalid	       373	security.c	FUNCTION_32	CALL_1
0x400005e	            0x7418	                            je 0x4000078	       373	security.c	FUNCTION_32	CALL_1
0x4000060	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       373	security.c	FUNCTION_32	CALL_1
0x4000064	          0x4889ee	                            mov rsi, rbp	       373	security.c	FUNCTION_32	CALL_1
0x4000067	          0x4c89e7	                            mov rdi, r12	       373	security.c	FUNCTION_32	CALL_1
0x400006a	      0xe800000000	                          call 0x400006f	       373	security.c	FUNCTION_32	CALL_1
security_tun_dev_attach	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4000a50	            0x4154	                                push r12	      1534	security.c	FUNCTION_194
0x4000a52	              0x55	                                push rbp	      1534	security.c	FUNCTION_194
0x4000a53	          0x4989fc	                            mov r12, rdi	      1534	security.c	FUNCTION_194
0x4000a56	              0x53	                                push rbx	      1534	security.c	FUNCTION_194
0x4000a57	    0x488b1d000000	            mov rbx, qword [0x04000a5e] 	      1535	security.c	FUNCTION_194	CALL_1
0x4000a5e	          0x4889f5	                            mov rbp, rsi	      1535	security.c	FUNCTION_194	CALL_1
0x4000a61	          0x4885db	                           test rbx, rbx	      1535	security.c	FUNCTION_194	CALL_1
0x4000a64	            0x750a	                           jne 0x4000a70	      1535	security.c	FUNCTION_194	CALL_1
0x4000a66	            0xeb20	                           jmp 0x4000a88	      1535	security.c	FUNCTION_194	CALL_1
0x4000a68	          0x488b1b	                    mov rbx, qword [rbx]	      1535	security.c	FUNCTION_194	CALL_1
0x4000a6b	          0x4885db	                           test rbx, rbx	      1535	security.c	FUNCTION_194	CALL_1
0x4000a6e	            0x7418	                            je 0x4000a88	      1535	security.c	FUNCTION_194	CALL_1
0x4000a70	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1535	security.c	FUNCTION_194	CALL_1
0x4000a74	          0x4889ee	                            mov rsi, rbp	      1535	security.c	FUNCTION_194	CALL_1
0x4000a77	          0x4c89e7	                            mov rdi, r12	      1535	security.c	FUNCTION_194	CALL_1
0x4000a7a	      0xe800000000	                          call 0x4000a7f	      1535	security.c	FUNCTION_194	CALL_1
0x4000a7f	            0x85c0	                           test eax, eax	      1535	security.c	FUNCTION_194	CALL_1
0x4000a81	            0x74e5	                            je 0x4000a68	      1535	security.c	FUNCTION_194	CALL_1
0x4000a83	              0x5b	                                 pop rbx	      1536	security.c	FUNCTION_194
0x4000a84	              0x5d	                                 pop rbp	      1536	security.c	FUNCTION_194
0x4000a85	            0x415c	                                 pop r12	      1536	security.c	FUNCTION_194
0x4000a87	              0xc3	                                     ret	      1536	security.c	FUNCTION_194
0x4000a88	              0x5b	                                 pop rbx	      1536	security.c	FUNCTION_194
0x4000a89	            0x31c0	                            xor eax, eax	      1534	security.c	FUNCTION_194
0x4000a8b	              0x5d	                                 pop rbp	      1536	security.c	FUNCTION_194
0x4000a8c	            0x415c	                                 pop r12	      1536	security.c	FUNCTION_194
0x4000a8e	              0xc3	                                     ret	      1536	security.c	FUNCTION_194
security_settime64	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4001350	            0x4154	                                push r12	       309	security.c	FUNCTION_24
0x4001352	              0x55	                                push rbp	       309	security.c	FUNCTION_24
0x4001353	          0x4989fc	                            mov r12, rdi	       309	security.c	FUNCTION_24
0x4001356	              0x53	                                push rbx	       309	security.c	FUNCTION_24
0x4001357	    0x488b1d000000	            mov rbx, qword [0x0400135e] 	       310	security.c	FUNCTION_24	CALL_1
0x400135e	          0x4889f5	                            mov rbp, rsi	       310	security.c	FUNCTION_24	CALL_1
0x4001361	          0x4885db	                           test rbx, rbx	       310	security.c	FUNCTION_24	CALL_1
0x4001364	            0x750a	                           jne 0x4001370	       310	security.c	FUNCTION_24	CALL_1
0x4001366	            0xeb20	                           jmp 0x4001388	       310	security.c	FUNCTION_24	CALL_1
0x4001368	          0x488b1b	                    mov rbx, qword [rbx]	       310	security.c	FUNCTION_24	CALL_1
0x400136b	          0x4885db	                           test rbx, rbx	       310	security.c	FUNCTION_24	CALL_1
0x400136e	            0x7418	                            je 0x4001388	       310	security.c	FUNCTION_24	CALL_1
0x4001370	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       310	security.c	FUNCTION_24	CALL_1
0x4001374	          0x4889ee	                            mov rsi, rbp	       310	security.c	FUNCTION_24	CALL_1
0x4001377	          0x4c89e7	                            mov rdi, r12	       310	security.c	FUNCTION_24	CALL_1
0x400137a	      0xe800000000	                          call 0x400137f	       310	security.c	FUNCTION_24	CALL_1
0x400137f	            0x85c0	                           test eax, eax	       310	security.c	FUNCTION_24	CALL_1
0x4001381	            0x74e5	                            je 0x4001368	       310	security.c	FUNCTION_24	CALL_1
0x4001383	              0x5b	                                 pop rbx	       311	security.c	FUNCTION_24
0x4001384	              0x5d	                                 pop rbp	       311	security.c	FUNCTION_24
0x4001385	            0x415c	                                 pop r12	       311	security.c	FUNCTION_24
0x4001387	              0xc3	                                     ret	       311	security.c	FUNCTION_24
0x4001388	              0x5b	                                 pop rbx	       311	security.c	FUNCTION_24
0x4001389	            0x31c0	                            xor eax, eax	       309	security.c	FUNCTION_24
0x400138b	              0x5d	                                 pop rbp	       311	security.c	FUNCTION_24
0x400138c	            0x415c	                                 pop r12	       311	security.c	FUNCTION_24
0x400138e	              0xc3	                                     ret	       311	security.c	FUNCTION_24
security_kernel_read_file	IF,1:SWITCH,0:functions,0:CALL,2:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4000320	            0x4154	                                push r12	      1037	security.c	FUNCTION_110
0x4000322	              0x55	                                push rbp	      1037	security.c	FUNCTION_110
0x4000323	          0x4989fc	                            mov r12, rdi	      1037	security.c	FUNCTION_110
0x4000326	              0x53	                                push rbx	      1037	security.c	FUNCTION_110
0x4000327	    0x488b1d000000	            mov rbx, qword [0x0400032e] 	      1040	security.c	FUNCTION_110	CALL_1
0x400032e	            0x89f5	                            mov ebp, esi	      1040	security.c	FUNCTION_110	CALL_1
0x4000330	          0x4885db	                           test rbx, rbx	      1040	security.c	FUNCTION_110	CALL_1
0x4000333	            0x750a	                           jne 0x400033f	      1040	security.c	FUNCTION_110	CALL_1
0x4000335	            0xeb1f	                           jmp 0x4000356	      1040	security.c	FUNCTION_110	CALL_1
0x4000337	          0x488b1b	                    mov rbx, qword [rbx]	      1040	security.c	FUNCTION_110	CALL_1
0x400033a	          0x4885db	                           test rbx, rbx	      1040	security.c	FUNCTION_110	CALL_1
0x400033d	            0x7417	                            je 0x4000356	      1040	security.c	FUNCTION_110	CALL_1
0x400033f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1040	security.c	FUNCTION_110	CALL_1
0x4000343	            0x89ee	                            mov esi, ebp	      1040	security.c	FUNCTION_110	CALL_1
0x4000345	          0x4c89e7	                            mov rdi, r12	      1040	security.c	FUNCTION_110	CALL_1
0x4000348	      0xe800000000	                          call 0x400034d	      1040	security.c	FUNCTION_110	CALL_1
0x400034d	            0x85c0	                           test eax, eax	      1040	security.c	FUNCTION_110	CALL_1
0x400034f	            0x74e6	                            je 0x4000337	      1040	security.c	FUNCTION_110	CALL_1
0x4000351	              0x5b	                                 pop rbx	      1044	security.c	FUNCTION_110
0x4000352	              0x5d	                                 pop rbp	      1044	security.c	FUNCTION_110
0x4000353	            0x415c	                                 pop r12	      1044	security.c	FUNCTION_110
0x4000355	              0xc3	                                     ret	      1044	security.c	FUNCTION_110
0x4000356	              0x5b	                                 pop rbx	      1044	security.c	FUNCTION_110
0x4000357	            0x31c0	                            xor eax, eax	      1043	security.c	FUNCTION_110	CALL_2
0x4000359	              0x5d	                                 pop rbp	      1044	security.c	FUNCTION_110
0x400035a	            0x415c	                                 pop r12	      1044	security.c	FUNCTION_110
0x400035c	              0xc3	                                     ret	      1044	security.c	FUNCTION_110
security_shm_shmat	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x4002dc0	            0x4155	                                push r13	      1232	security.c	FUNCTION_142
0x4002dc2	            0x4154	                                push r12	      1232	security.c	FUNCTION_142
0x4002dc4	              0x55	                                push rbp	      1232	security.c	FUNCTION_142
0x4002dc5	              0x53	                                push rbx	      1232	security.c	FUNCTION_142
0x4002dc6	    0x488b1d000000	            mov rbx, qword [0x04002dcd] 	      1233	security.c	FUNCTION_142	CALL_1
0x4002dcd	          0x4885db	                           test rbx, rbx	      1233	security.c	FUNCTION_142	CALL_1
0x4002dd0	            0x742e	                            je 0x4002e00	      1233	security.c	FUNCTION_142	CALL_1
0x4002dd2	          0x4989fd	                            mov r13, rdi	      1233	security.c	FUNCTION_142	CALL_1
0x4002dd5	          0x4989f4	                            mov r12, rsi	      1233	security.c	FUNCTION_142	CALL_1
0x4002dd8	            0x89d5	                            mov ebp, edx	      1233	security.c	FUNCTION_142	CALL_1
0x4002dda	            0xeb08	                           jmp 0x4002de4	      1233	security.c	FUNCTION_142	CALL_1
0x4002ddc	          0x488b1b	                    mov rbx, qword [rbx]	      1233	security.c	FUNCTION_142	CALL_1
0x4002ddf	          0x4885db	                           test rbx, rbx	      1233	security.c	FUNCTION_142	CALL_1
0x4002de2	            0x741c	                            je 0x4002e00	      1233	security.c	FUNCTION_142	CALL_1
0x4002de4	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1233	security.c	FUNCTION_142	CALL_1
0x4002de8	            0x89ea	                            mov edx, ebp	      1233	security.c	FUNCTION_142	CALL_1
0x4002dea	          0x4c89e6	                            mov rsi, r12	      1233	security.c	FUNCTION_142	CALL_1
0x4002ded	          0x4c89ef	                            mov rdi, r13	      1233	security.c	FUNCTION_142	CALL_1
0x4002df0	      0xe800000000	                          call 0x4002df5	      1233	security.c	FUNCTION_142	CALL_1
0x4002df5	            0x85c0	                           test eax, eax	      1233	security.c	FUNCTION_142	CALL_1
0x4002df7	            0x74e3	                            je 0x4002ddc	      1233	security.c	FUNCTION_142	CALL_1
0x4002df9	              0x5b	                                 pop rbx	      1234	security.c	FUNCTION_142
0x4002dfa	              0x5d	                                 pop rbp	      1234	security.c	FUNCTION_142
0x4002dfb	            0x415c	                                 pop r12	      1234	security.c	FUNCTION_142
0x4002dfd	            0x415d	                                 pop r13	      1234	security.c	FUNCTION_142
0x4002dff	              0xc3	                                     ret	      1234	security.c	FUNCTION_142
0x4002e00	              0x5b	                                 pop rbx	      1234	security.c	FUNCTION_142
0x4002e01	            0x31c0	                            xor eax, eax	      1232	security.c	FUNCTION_142
0x4002e03	              0x5d	                                 pop rbp	      1234	security.c	FUNCTION_142
0x4002e04	            0x415c	                                 pop r12	      1234	security.c	FUNCTION_142
0x4002e06	            0x415d	                                 pop r13	      1234	security.c	FUNCTION_142
0x4002e08	              0xc3	                                     ret	      1234	security.c	FUNCTION_142
security_task_movememory	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x40028d0	              0x55	                                push rbp	      1125	security.c	FUNCTION_124
0x40028d1	              0x53	                                push rbx	      1125	security.c	FUNCTION_124
0x40028d2	          0x4889fd	                            mov rbp, rdi	      1125	security.c	FUNCTION_124
0x40028d5	    0x488b1d000000	            mov rbx, qword [0x040028dc] 	      1126	security.c	FUNCTION_124	CALL_1
0x40028dc	          0x4885db	                           test rbx, rbx	      1126	security.c	FUNCTION_124	CALL_1
0x40028df	            0x750a	                           jne 0x40028eb	      1126	security.c	FUNCTION_124	CALL_1
0x40028e1	            0xeb1b	                           jmp 0x40028fe	      1126	security.c	FUNCTION_124	CALL_1
0x40028e3	          0x488b1b	                    mov rbx, qword [rbx]	      1126	security.c	FUNCTION_124	CALL_1
0x40028e6	          0x4885db	                           test rbx, rbx	      1126	security.c	FUNCTION_124	CALL_1
0x40028e9	            0x7413	                            je 0x40028fe	      1126	security.c	FUNCTION_124	CALL_1
0x40028eb	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1126	security.c	FUNCTION_124	CALL_1
0x40028ef	          0x4889ef	                            mov rdi, rbp	      1126	security.c	FUNCTION_124	CALL_1
0x40028f2	      0xe800000000	                          call 0x40028f7	      1126	security.c	FUNCTION_124	CALL_1
0x40028f7	            0x85c0	                           test eax, eax	      1126	security.c	FUNCTION_124	CALL_1
0x40028f9	            0x74e8	                            je 0x40028e3	      1126	security.c	FUNCTION_124	CALL_1
0x40028fb	              0x5b	                                 pop rbx	      1127	security.c	FUNCTION_124
0x40028fc	              0x5d	                                 pop rbp	      1127	security.c	FUNCTION_124
0x40028fd	              0xc3	                                     ret	      1127	security.c	FUNCTION_124
0x40028fe	            0x31c0	                            xor eax, eax	      1125	security.c	FUNCTION_124
0x4002900	              0x5b	                                 pop rbx	      1127	security.c	FUNCTION_124
0x4002901	              0x5d	                                 pop rbp	      1127	security.c	FUNCTION_124
0x4002902	              0xc3	                                     ret	      1127	security.c	FUNCTION_124
security_msg_msg_alloc	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x4002ab0	              0x55	                                push rbp	      1170	security.c	FUNCTION_130
0x4002ab1	              0x53	                                push rbx	      1170	security.c	FUNCTION_130
0x4002ab2	          0x4889fd	                            mov rbp, rdi	      1170	security.c	FUNCTION_130
0x4002ab5	    0x488b1d000000	            mov rbx, qword [0x04002abc] 	      1171	security.c	FUNCTION_130	CALL_1
0x4002abc	          0x4885db	                           test rbx, rbx	      1171	security.c	FUNCTION_130	CALL_1
0x4002abf	            0x750a	                           jne 0x4002acb	      1171	security.c	FUNCTION_130	CALL_1
0x4002ac1	            0xeb1b	                           jmp 0x4002ade	      1171	security.c	FUNCTION_130	CALL_1
0x4002ac3	          0x488b1b	                    mov rbx, qword [rbx]	      1171	security.c	FUNCTION_130	CALL_1
0x4002ac6	          0x4885db	                           test rbx, rbx	      1171	security.c	FUNCTION_130	CALL_1
0x4002ac9	            0x7413	                            je 0x4002ade	      1171	security.c	FUNCTION_130	CALL_1
0x4002acb	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1171	security.c	FUNCTION_130	CALL_1
0x4002acf	          0x4889ef	                            mov rdi, rbp	      1171	security.c	FUNCTION_130	CALL_1
0x4002ad2	      0xe800000000	                          call 0x4002ad7	      1171	security.c	FUNCTION_130	CALL_1
0x4002ad7	            0x85c0	                           test eax, eax	      1171	security.c	FUNCTION_130	CALL_1
0x4002ad9	            0x74e8	                            je 0x4002ac3	      1171	security.c	FUNCTION_130	CALL_1
0x4002adb	              0x5b	                                 pop rbx	      1172	security.c	FUNCTION_130
0x4002adc	              0x5d	                                 pop rbp	      1172	security.c	FUNCTION_130
0x4002add	              0xc3	                                     ret	      1172	security.c	FUNCTION_130
0x4002ade	            0x31c0	                            xor eax, eax	      1170	security.c	FUNCTION_130
0x4002ae0	              0x5b	                                 pop rbx	      1172	security.c	FUNCTION_130
0x4002ae1	              0x5d	                                 pop rbp	      1172	security.c	FUNCTION_130
0x4002ae2	              0xc3	                                     ret	      1172	security.c	FUNCTION_130
security_inode_setsecurity	IF,1:SWITCH,0:functions,1:CALL,2:FOR,0:WHILE,0:DO,0:ELSE,0	46
0x4001e40	        0xf6470d02	                test byte [rdi + 0xd], 2	       827	security.c	FUNCTION_81	IF_1	CALL_2
0x4001e44	            0x7567	                           jne 0x4001ead	       827	security.c	FUNCTION_81	IF_1	CALL_2
0x4001e46	            0x4157	                                push r15	       823	security.c	FUNCTION_81
0x4001e48	            0x4156	                                push r14	       823	security.c	FUNCTION_81
0x4001e4a	          0x4589c7	                           mov r15d, r8d	       823	security.c	FUNCTION_81
0x4001e4d	            0x4155	                                push r13	       823	security.c	FUNCTION_81
0x4001e4f	            0x4154	                                push r12	       823	security.c	FUNCTION_81
0x4001e51	          0x4989ce	                            mov r14, rcx	       823	security.c	FUNCTION_81
0x4001e54	              0x55	                                push rbp	       823	security.c	FUNCTION_81
0x4001e55	              0x53	                                push rbx	       823	security.c	FUNCTION_81
0x4001e56	          0x4989d5	                            mov r13, rdx	       823	security.c	FUNCTION_81
0x4001e59	    0x488b1d000000	            mov rbx, qword [0x04001e60] 	       832	security.c	FUNCTION_81	FUNCTION_1
0x4001e60	          0x4989f4	                            mov r12, rsi	       832	security.c	FUNCTION_81	FUNCTION_1
0x4001e63	          0x4889fd	                            mov rbp, rdi	       832	security.c	FUNCTION_81	FUNCTION_1
0x4001e66	          0x4885db	                           test rbx, rbx	       832	security.c	FUNCTION_81	FUNCTION_1
0x4001e69	            0x750a	                           jne 0x4001e75	       832	security.c	FUNCTION_81	FUNCTION_1
0x4001e6b	            0xeb30	                           jmp 0x4001e9d	       832	security.c	FUNCTION_81	FUNCTION_1
0x4001e6d	          0x488b1b	                    mov rbx, qword [rbx]	       832	security.c	FUNCTION_81	FUNCTION_1
0x4001e70	          0x4885db	                           test rbx, rbx	       832	security.c	FUNCTION_81	FUNCTION_1
0x4001e73	            0x7428	                            je 0x4001e9d	       832	security.c	FUNCTION_81	FUNCTION_1
0x4001e75	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       833	security.c	FUNCTION_81	FUNCTION_1	CALL_1
0x4001e79	          0x4589f8	                           mov r8d, r15d	       833	security.c	FUNCTION_81	FUNCTION_1	CALL_1
0x4001e7c	          0x4c89f1	                            mov rcx, r14	       833	security.c	FUNCTION_81	FUNCTION_1	CALL_1
0x4001e7f	          0x4c89ea	                            mov rdx, r13	       833	security.c	FUNCTION_81	FUNCTION_1	CALL_1
0x4001e82	          0x4c89e6	                            mov rsi, r12	       833	security.c	FUNCTION_81	FUNCTION_1	CALL_1
0x4001e85	          0x4889ef	                            mov rdi, rbp	       833	security.c	FUNCTION_81	FUNCTION_1	CALL_1
0x4001e88	      0xe800000000	                          call 0x4001e8d	       833	security.c	FUNCTION_81	FUNCTION_1	CALL_1
0x4001e8d	          0x83f8a1	             cmp eax, 0xffffffffffffffa1	       835	security.c	FUNCTION_81	FUNCTION_1	IF_1
0x4001e90	            0x74db	                            je 0x4001e6d	       835	security.c	FUNCTION_81	FUNCTION_1	IF_1
0x4001e92	              0x5b	                                 pop rbx	       839	security.c	FUNCTION_81
0x4001e93	              0x5d	                                 pop rbp	       839	security.c	FUNCTION_81
0x4001e94	            0x415c	                                 pop r12	       839	security.c	FUNCTION_81
0x4001e96	            0x415d	                                 pop r13	       839	security.c	FUNCTION_81
0x4001e98	            0x415e	                                 pop r14	       839	security.c	FUNCTION_81
0x4001e9a	            0x415f	                                 pop r15	       839	security.c	FUNCTION_81
0x4001e9c	              0xc3	                                     ret	       839	security.c	FUNCTION_81
0x4001e9d	              0x5b	                                 pop rbx	       839	security.c	FUNCTION_81
0x4001e9e	      0xb8a1ffffff	                     mov eax, 0xffffffa1	       828	security.c	FUNCTION_81	IF_1
0x4001ea3	              0x5d	                                 pop rbp	       839	security.c	FUNCTION_81
0x4001ea4	            0x415c	                                 pop r12	       839	security.c	FUNCTION_81
0x4001ea6	            0x415d	                                 pop r13	       839	security.c	FUNCTION_81
0x4001ea8	            0x415e	                                 pop r14	       839	security.c	FUNCTION_81
0x4001eaa	            0x415f	                                 pop r15	       839	security.c	FUNCTION_81
0x4001eac	              0xc3	                                     ret	       839	security.c	FUNCTION_81
0x4001ead	      0xb8a1ffffff	                     mov eax, 0xffffffa1	       828	security.c	FUNCTION_81	IF_1
0x4001eb2	              0xc3	                                     ret	       839	security.c	FUNCTION_81
security_task_to_inode	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	19
0x40029f0	            0x4154	                                push r12	      1154	security.c	FUNCTION_127
0x40029f2	              0x55	                                push rbp	      1154	security.c	FUNCTION_127
0x40029f3	              0x53	                                push rbx	      1154	security.c	FUNCTION_127
0x40029f4	    0x488b1d000000	            mov rbx, qword [0x040029fb] 	      1155	security.c	FUNCTION_127	CALL_1
0x40029fb	          0x4885db	                           test rbx, rbx	      1155	security.c	FUNCTION_127	CALL_1
0x40029fe	            0x741d	                            je 0x4002a1d	      1155	security.c	FUNCTION_127	CALL_1
0x4002a00	          0x4989fc	                            mov r12, rdi	      1155	security.c	FUNCTION_127	CALL_1
0x4002a03	          0x4889f5	                            mov rbp, rsi	      1155	security.c	FUNCTION_127	CALL_1
0x4002a06	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1155	security.c	FUNCTION_127	CALL_1
0x4002a0a	          0x4889ee	                            mov rsi, rbp	      1155	security.c	FUNCTION_127	CALL_1
0x4002a0d	          0x4c89e7	                            mov rdi, r12	      1155	security.c	FUNCTION_127	CALL_1
0x4002a10	      0xe800000000	                          call 0x4002a15	      1155	security.c	FUNCTION_127	CALL_1
0x4002a15	          0x488b1b	                    mov rbx, qword [rbx]	      1155	security.c	FUNCTION_127	CALL_1
0x4002a18	          0x4885db	                           test rbx, rbx	      1155	security.c	FUNCTION_127	CALL_1
0x4002a1b	            0x75e9	                           jne 0x4002a06	      1155	security.c	FUNCTION_127	CALL_1
0x4002a1d	              0x5b	                                 pop rbx	      1156	security.c	FUNCTION_127
0x4002a1e	              0x5d	                                 pop rbp	      1156	security.c	FUNCTION_127
0x4002a1f	            0x415c	                                 pop r12	      1156	security.c	FUNCTION_127
0x4002a21	              0xc3	                                     ret	      1156	security.c	FUNCTION_127
security_socket_create	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	37
0x4003040	            0x4156	                                push r14	      1350	security.c	FUNCTION_162
0x4003042	            0x4155	                                push r13	      1350	security.c	FUNCTION_162
0x4003044	            0x4154	                                push r12	      1350	security.c	FUNCTION_162
0x4003046	              0x55	                                push rbp	      1350	security.c	FUNCTION_162
0x4003047	              0x53	                                push rbx	      1350	security.c	FUNCTION_162
0x4003048	    0x488b1d000000	            mov rbx, qword [0x0400304f] 	      1351	security.c	FUNCTION_162	CALL_1
0x400304f	          0x4885db	                           test rbx, rbx	      1351	security.c	FUNCTION_162	CALL_1
0x4003052	            0x7436	                            je 0x400308a	      1351	security.c	FUNCTION_162	CALL_1
0x4003054	          0x4189fe	                           mov r14d, edi	      1351	security.c	FUNCTION_162	CALL_1
0x4003057	          0x4189f5	                           mov r13d, esi	      1351	security.c	FUNCTION_162	CALL_1
0x400305a	          0x4189d4	                           mov r12d, edx	      1351	security.c	FUNCTION_162	CALL_1
0x400305d	            0x89cd	                            mov ebp, ecx	      1351	security.c	FUNCTION_162	CALL_1
0x400305f	            0xeb08	                           jmp 0x4003069	      1351	security.c	FUNCTION_162	CALL_1
0x4003061	          0x488b1b	                    mov rbx, qword [rbx]	      1351	security.c	FUNCTION_162	CALL_1
0x4003064	          0x4885db	                           test rbx, rbx	      1351	security.c	FUNCTION_162	CALL_1
0x4003067	            0x7421	                            je 0x400308a	      1351	security.c	FUNCTION_162	CALL_1
0x4003069	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1351	security.c	FUNCTION_162	CALL_1
0x400306d	            0x89e9	                            mov ecx, ebp	      1351	security.c	FUNCTION_162	CALL_1
0x400306f	          0x4489e2	                           mov edx, r12d	      1351	security.c	FUNCTION_162	CALL_1
0x4003072	          0x4489ee	                           mov esi, r13d	      1351	security.c	FUNCTION_162	CALL_1
0x4003075	          0x4489f7	                           mov edi, r14d	      1351	security.c	FUNCTION_162	CALL_1
0x4003078	      0xe800000000	                          call 0x400307d	      1351	security.c	FUNCTION_162	CALL_1
0x400307d	            0x85c0	                           test eax, eax	      1351	security.c	FUNCTION_162	CALL_1
0x400307f	            0x74e0	                            je 0x4003061	      1351	security.c	FUNCTION_162	CALL_1
0x4003081	              0x5b	                                 pop rbx	      1352	security.c	FUNCTION_162
0x4003082	              0x5d	                                 pop rbp	      1352	security.c	FUNCTION_162
0x4003083	            0x415c	                                 pop r12	      1352	security.c	FUNCTION_162
0x4003085	            0x415d	                                 pop r13	      1352	security.c	FUNCTION_162
0x4003087	            0x415e	                                 pop r14	      1352	security.c	FUNCTION_162
0x4003089	              0xc3	                                     ret	      1352	security.c	FUNCTION_162
0x400308a	              0x5b	                                 pop rbx	      1352	security.c	FUNCTION_162
0x400308b	            0x31c0	                            xor eax, eax	      1350	security.c	FUNCTION_162
0x400308d	              0x5d	                                 pop rbp	      1352	security.c	FUNCTION_162
0x400308e	            0x415c	                                 pop r12	      1352	security.c	FUNCTION_162
0x4003090	            0x415d	                                 pop r13	      1352	security.c	FUNCTION_162
0x4003092	            0x415e	                                 pop r14	      1352	security.c	FUNCTION_162
0x4003094	              0xc3	                                     ret	      1352	security.c	FUNCTION_162
security_secmark_refcount_inc	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	11
0x4000930	              0x53	                                push rbx	      1498	security.c	FUNCTION_188
0x4000931	    0x488b1d000000	            mov rbx, qword [0x04000938] 	      1499	security.c	FUNCTION_188	CALL_1
0x4000938	          0x4885db	                           test rbx, rbx	      1499	security.c	FUNCTION_188	CALL_1
0x400093b	            0x7411	                            je 0x400094e	      1499	security.c	FUNCTION_188	CALL_1
0x400093d	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1499	security.c	FUNCTION_188	CALL_1
0x4000941	      0xe800000000	                          call 0x4000946	      1499	security.c	FUNCTION_188	CALL_1
0x4000946	          0x488b1b	                    mov rbx, qword [rbx]	      1499	security.c	FUNCTION_188	CALL_1
0x4000949	          0x4885db	                           test rbx, rbx	      1499	security.c	FUNCTION_188	CALL_1
0x400094c	            0x75ef	                           jne 0x400093d	      1499	security.c	FUNCTION_188	CALL_1
0x400094e	              0x5b	                                 pop rbx	      1500	security.c	FUNCTION_188
0x400094f	              0xc3	                                     ret	      1500	security.c	FUNCTION_188
security_task_free	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	15
0x40023f0	              0x55	                                push rbp	       990	security.c	FUNCTION_101
0x40023f1	              0x53	                                push rbx	       990	security.c	FUNCTION_101
0x40023f2	    0x488b1d000000	            mov rbx, qword [0x040023f9] 	       991	security.c	FUNCTION_101	CALL_1
0x40023f9	          0x4885db	                           test rbx, rbx	       991	security.c	FUNCTION_101	CALL_1
0x40023fc	            0x7417	                            je 0x4002415	       991	security.c	FUNCTION_101	CALL_1
0x40023fe	          0x4889fd	                            mov rbp, rdi	       991	security.c	FUNCTION_101	CALL_1
0x4002401	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       991	security.c	FUNCTION_101	CALL_1
0x4002405	          0x4889ef	                            mov rdi, rbp	       991	security.c	FUNCTION_101	CALL_1
0x4002408	      0xe800000000	                          call 0x400240d	       991	security.c	FUNCTION_101	CALL_1
0x400240d	          0x488b1b	                    mov rbx, qword [rbx]	       991	security.c	FUNCTION_101	CALL_1
0x4002410	          0x4885db	                           test rbx, rbx	       991	security.c	FUNCTION_101	CALL_1
0x4002413	            0x75ec	                           jne 0x4002401	       991	security.c	FUNCTION_101	CALL_1
0x4002415	              0x5b	                                 pop rbx	       992	security.c	FUNCTION_101
0x4002416	              0x5d	                                 pop rbp	       992	security.c	FUNCTION_101
0x4002417	              0xc3	                                     ret	       992	security.c	FUNCTION_101
security_ptrace_access_check	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4001080	            0x4154	                                push r12	       254	security.c	FUNCTION_15
0x4001082	              0x55	                                push rbp	       254	security.c	FUNCTION_15
0x4001083	          0x4989fc	                            mov r12, rdi	       254	security.c	FUNCTION_15
0x4001086	              0x53	                                push rbx	       254	security.c	FUNCTION_15
0x4001087	    0x488b1d000000	            mov rbx, qword [0x0400108e] 	       255	security.c	FUNCTION_15	CALL_1
0x400108e	            0x89f5	                            mov ebp, esi	       255	security.c	FUNCTION_15	CALL_1
0x4001090	          0x4885db	                           test rbx, rbx	       255	security.c	FUNCTION_15	CALL_1
0x4001093	            0x750a	                           jne 0x400109f	       255	security.c	FUNCTION_15	CALL_1
0x4001095	            0xeb1f	                           jmp 0x40010b6	       255	security.c	FUNCTION_15	CALL_1
0x4001097	          0x488b1b	                    mov rbx, qword [rbx]	       255	security.c	FUNCTION_15	CALL_1
0x400109a	          0x4885db	                           test rbx, rbx	       255	security.c	FUNCTION_15	CALL_1
0x400109d	            0x7417	                            je 0x40010b6	       255	security.c	FUNCTION_15	CALL_1
0x400109f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       255	security.c	FUNCTION_15	CALL_1
0x40010a3	            0x89ee	                            mov esi, ebp	       255	security.c	FUNCTION_15	CALL_1
0x40010a5	          0x4c89e7	                            mov rdi, r12	       255	security.c	FUNCTION_15	CALL_1
0x40010a8	      0xe800000000	                          call 0x40010ad	       255	security.c	FUNCTION_15	CALL_1
0x40010ad	            0x85c0	                           test eax, eax	       255	security.c	FUNCTION_15	CALL_1
0x40010af	            0x74e6	                            je 0x4001097	       255	security.c	FUNCTION_15	CALL_1
0x40010b1	              0x5b	                                 pop rbx	       256	security.c	FUNCTION_15
0x40010b2	              0x5d	                                 pop rbp	       256	security.c	FUNCTION_15
0x40010b3	            0x415c	                                 pop r12	       256	security.c	FUNCTION_15
0x40010b5	              0xc3	                                     ret	       256	security.c	FUNCTION_15
0x40010b6	              0x5b	                                 pop rbx	       256	security.c	FUNCTION_15
0x40010b7	            0x31c0	                            xor eax, eax	       254	security.c	FUNCTION_15
0x40010b9	              0x5d	                                 pop rbp	       256	security.c	FUNCTION_15
0x40010ba	            0x415c	                                 pop r12	       256	security.c	FUNCTION_15
0x40010bc	              0xc3	                                     ret	       256	security.c	FUNCTION_15
security_bprm_set_creds	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x40013f0	              0x55	                                push rbp	       337	security.c	FUNCTION_26
0x40013f1	              0x53	                                push rbx	       337	security.c	FUNCTION_26
0x40013f2	          0x4889fd	                            mov rbp, rdi	       337	security.c	FUNCTION_26
0x40013f5	    0x488b1d000000	            mov rbx, qword [0x040013fc] 	       338	security.c	FUNCTION_26	CALL_1
0x40013fc	          0x4885db	                           test rbx, rbx	       338	security.c	FUNCTION_26	CALL_1
0x40013ff	            0x750a	                           jne 0x400140b	       338	security.c	FUNCTION_26	CALL_1
0x4001401	            0xeb1b	                           jmp 0x400141e	       338	security.c	FUNCTION_26	CALL_1
0x4001403	          0x488b1b	                    mov rbx, qword [rbx]	       338	security.c	FUNCTION_26	CALL_1
0x4001406	          0x4885db	                           test rbx, rbx	       338	security.c	FUNCTION_26	CALL_1
0x4001409	            0x7413	                            je 0x400141e	       338	security.c	FUNCTION_26	CALL_1
0x400140b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       338	security.c	FUNCTION_26	CALL_1
0x400140f	          0x4889ef	                            mov rdi, rbp	       338	security.c	FUNCTION_26	CALL_1
0x4001412	      0xe800000000	                          call 0x4001417	       338	security.c	FUNCTION_26	CALL_1
0x4001417	            0x85c0	                           test eax, eax	       338	security.c	FUNCTION_26	CALL_1
0x4001419	            0x74e8	                            je 0x4001403	       338	security.c	FUNCTION_26	CALL_1
0x400141b	              0x5b	                                 pop rbx	       339	security.c	FUNCTION_26
0x400141c	              0x5d	                                 pop rbp	       339	security.c	FUNCTION_26
0x400141d	              0xc3	                                     ret	       339	security.c	FUNCTION_26
0x400141e	            0x31c0	                            xor eax, eax	       337	security.c	FUNCTION_26
0x4001420	              0x5b	                                 pop rbx	       339	security.c	FUNCTION_26
0x4001421	              0x5d	                                 pop rbp	       339	security.c	FUNCTION_26
0x4001422	              0xc3	                                     ret	       339	security.c	FUNCTION_26
security_socket_post_create	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	42
0x40030a0	            0x4157	                                push r15	      1356	security.c	FUNCTION_163
0x40030a2	            0x4156	                                push r14	      1356	security.c	FUNCTION_163
0x40030a4	            0x4155	                                push r13	      1356	security.c	FUNCTION_163
0x40030a6	            0x4154	                                push r12	      1356	security.c	FUNCTION_163
0x40030a8	              0x55	                                push rbp	      1356	security.c	FUNCTION_163
0x40030a9	              0x53	                                push rbx	      1356	security.c	FUNCTION_163
0x40030aa	    0x488b1d000000	            mov rbx, qword [0x040030b1] 	      1357	security.c	FUNCTION_163	CALL_1
0x40030b1	          0x4885db	                           test rbx, rbx	      1357	security.c	FUNCTION_163	CALL_1
0x40030b4	            0x7440	                            je 0x40030f6	      1357	security.c	FUNCTION_163	CALL_1
0x40030b6	          0x4989ff	                            mov r15, rdi	      1357	security.c	FUNCTION_163	CALL_1
0x40030b9	          0x4189f6	                           mov r14d, esi	      1357	security.c	FUNCTION_163	CALL_1
0x40030bc	          0x4189d5	                           mov r13d, edx	      1357	security.c	FUNCTION_163	CALL_1
0x40030bf	          0x4189cc	                           mov r12d, ecx	      1357	security.c	FUNCTION_163	CALL_1
0x40030c2	          0x4489c5	                            mov ebp, r8d	      1357	security.c	FUNCTION_163	CALL_1
0x40030c5	            0xeb08	                           jmp 0x40030cf	      1357	security.c	FUNCTION_163	CALL_1
0x40030c7	          0x488b1b	                    mov rbx, qword [rbx]	      1357	security.c	FUNCTION_163	CALL_1
0x40030ca	          0x4885db	                           test rbx, rbx	      1357	security.c	FUNCTION_163	CALL_1
0x40030cd	            0x7427	                            je 0x40030f6	      1357	security.c	FUNCTION_163	CALL_1
0x40030cf	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1357	security.c	FUNCTION_163	CALL_1
0x40030d3	          0x4189e8	                            mov r8d, ebp	      1357	security.c	FUNCTION_163	CALL_1
0x40030d6	          0x4489e1	                           mov ecx, r12d	      1357	security.c	FUNCTION_163	CALL_1
0x40030d9	          0x4489ea	                           mov edx, r13d	      1357	security.c	FUNCTION_163	CALL_1
0x40030dc	          0x4489f6	                           mov esi, r14d	      1357	security.c	FUNCTION_163	CALL_1
0x40030df	          0x4c89ff	                            mov rdi, r15	      1357	security.c	FUNCTION_163	CALL_1
0x40030e2	      0xe800000000	                          call 0x40030e7	      1357	security.c	FUNCTION_163	CALL_1
0x40030e7	            0x85c0	                           test eax, eax	      1357	security.c	FUNCTION_163	CALL_1
0x40030e9	            0x74dc	                            je 0x40030c7	      1357	security.c	FUNCTION_163	CALL_1
0x40030eb	              0x5b	                                 pop rbx	      1359	security.c	FUNCTION_163
0x40030ec	              0x5d	                                 pop rbp	      1359	security.c	FUNCTION_163
0x40030ed	            0x415c	                                 pop r12	      1359	security.c	FUNCTION_163
0x40030ef	            0x415d	                                 pop r13	      1359	security.c	FUNCTION_163
0x40030f1	            0x415e	                                 pop r14	      1359	security.c	FUNCTION_163
0x40030f3	            0x415f	                                 pop r15	      1359	security.c	FUNCTION_163
0x40030f5	              0xc3	                                     ret	      1359	security.c	FUNCTION_163
0x40030f6	              0x5b	                                 pop rbx	      1359	security.c	FUNCTION_163
0x40030f7	            0x31c0	                            xor eax, eax	      1356	security.c	FUNCTION_163
0x40030f9	              0x5d	                                 pop rbp	      1359	security.c	FUNCTION_163
0x40030fa	            0x415c	                                 pop r12	      1359	security.c	FUNCTION_163
0x40030fc	            0x415d	                                 pop r13	      1359	security.c	FUNCTION_163
0x40030fe	            0x415e	                                 pop r14	      1359	security.c	FUNCTION_163
0x4003100	            0x415f	                                 pop r15	      1359	security.c	FUNCTION_163
0x4003102	              0xc3	                                     ret	      1359	security.c	FUNCTION_163
security_inode_setxattr	IF,4:SWITCH,0:functions,0:CALL,7:FOR,0:WHILE,0:DO,0:ELSE,0	53
0x4001b70	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       731	security.c	FUNCTION_73	IF_1	CALL_3
0x4001b74	        0xf6400d02	                test byte [rax + 0xd], 2	       731	security.c	FUNCTION_73	IF_1	CALL_3
0x4001b78	            0x7579	                           jne 0x4001bf3	       731	security.c	FUNCTION_73	IF_1	CALL_3
0x4001b7a	            0x4157	                                push r15	       728	security.c	FUNCTION_73
0x4001b7c	            0x4156	                                push r14	       728	security.c	FUNCTION_73
0x4001b7e	          0x4589c7	                           mov r15d, r8d	       728	security.c	FUNCTION_73
0x4001b81	            0x4155	                                push r13	       728	security.c	FUNCTION_73
0x4001b83	            0x4154	                                push r12	       728	security.c	FUNCTION_73
0x4001b85	          0x4989ce	                            mov r14, rcx	       728	security.c	FUNCTION_73
0x4001b88	              0x55	                                push rbp	       728	security.c	FUNCTION_73
0x4001b89	              0x53	                                push rbx	       728	security.c	FUNCTION_73
0x4001b8a	          0x4989d5	                            mov r13, rdx	       728	security.c	FUNCTION_73
0x4001b8d	    0x488b1d000000	            mov rbx, qword [0x04001b94] 	       737	security.c	FUNCTION_73	CALL_4
0x4001b94	          0x4989f4	                            mov r12, rsi	       737	security.c	FUNCTION_73	CALL_4
0x4001b97	          0x4889fd	                            mov rbp, rdi	       737	security.c	FUNCTION_73	CALL_4
0x4001b9a	          0x4885db	                           test rbx, rbx	       737	security.c	FUNCTION_73	CALL_4
0x4001b9d	            0x750a	                           jne 0x4001ba9	       737	security.c	FUNCTION_73	CALL_4
0x4001b9f	            0xeb34	                           jmp 0x4001bd5	       737	security.c	FUNCTION_73	CALL_4
0x4001ba1	          0x488b1b	                    mov rbx, qword [rbx]	       737	security.c	FUNCTION_73	CALL_4
0x4001ba4	          0x4885db	                           test rbx, rbx	       737	security.c	FUNCTION_73	CALL_4
0x4001ba7	            0x7421	                            je 0x4001bca	       737	security.c	FUNCTION_73	CALL_4
0x4001ba9	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       737	security.c	FUNCTION_73	CALL_4
0x4001bad	          0x4589f8	                           mov r8d, r15d	       737	security.c	FUNCTION_73	CALL_4
0x4001bb0	          0x4c89f1	                            mov rcx, r14	       737	security.c	FUNCTION_73	CALL_4
0x4001bb3	          0x4c89ea	                            mov rdx, r13	       737	security.c	FUNCTION_73	CALL_4
0x4001bb6	          0x4c89e6	                            mov rsi, r12	       737	security.c	FUNCTION_73	CALL_4
0x4001bb9	          0x4889ef	                            mov rdi, rbp	       737	security.c	FUNCTION_73	CALL_4
0x4001bbc	      0xe800000000	                          call 0x4001bc1	       737	security.c	FUNCTION_73	CALL_4
0x4001bc1	            0x85c0	                           test eax, eax	       737	security.c	FUNCTION_73	CALL_4
0x4001bc3	            0x74dc	                            je 0x4001ba1	       737	security.c	FUNCTION_73	CALL_4
0x4001bc5	          0x83f801	                              cmp eax, 1	       740	security.c	FUNCTION_73	IF_2
0x4001bc8	            0x740b	                            je 0x4001bd5	       740	security.c	FUNCTION_73	IF_2
0x4001bca	              0x5b	                                 pop rbx	       748	security.c	FUNCTION_73
0x4001bcb	              0x5d	                                 pop rbp	       748	security.c	FUNCTION_73
0x4001bcc	            0x415c	                                 pop r12	       748	security.c	FUNCTION_73
0x4001bce	            0x415d	                                 pop r13	       748	security.c	FUNCTION_73
0x4001bd0	            0x415e	                                 pop r14	       748	security.c	FUNCTION_73
0x4001bd2	            0x415f	                                 pop r15	       748	security.c	FUNCTION_73
0x4001bd4	              0xc3	                                     ret	       748	security.c	FUNCTION_73
0x4001bd5	              0x5b	                                 pop rbx	       748	security.c	FUNCTION_73
0x4001bd6	          0x4589f8	                           mov r8d, r15d	       741	security.c	FUNCTION_73	CALL_5
0x4001bd9	          0x4c89f1	                            mov rcx, r14	       741	security.c	FUNCTION_73	CALL_5
0x4001bdc	          0x4c89ea	                            mov rdx, r13	       741	security.c	FUNCTION_73	CALL_5
0x4001bdf	          0x4c89e6	                            mov rsi, r12	       741	security.c	FUNCTION_73	CALL_5
0x4001be2	          0x4889ef	                            mov rdi, rbp	       741	security.c	FUNCTION_73	CALL_5
0x4001be5	              0x5d	                                 pop rbp	       748	security.c	FUNCTION_73
0x4001be6	            0x415c	                                 pop r12	       748	security.c	FUNCTION_73
0x4001be8	            0x415d	                                 pop r13	       748	security.c	FUNCTION_73
0x4001bea	            0x415e	                                 pop r14	       748	security.c	FUNCTION_73
0x4001bec	            0x415f	                                 pop r15	       748	security.c	FUNCTION_73
0x4001bee	      0xe900000000	                           jmp 0x4001bf3	       741	security.c	FUNCTION_73	CALL_5
0x4001bf3	            0x31c0	                            xor eax, eax	       732	security.c	FUNCTION_73	IF_1
0x4001bf5	              0xc3	                                     ret	       732	security.c	FUNCTION_73	IF_1
security_unix_may_send	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4000690	            0x4154	                                push r12	      1344	security.c	FUNCTION_161
0x4000692	              0x55	                                push rbp	      1344	security.c	FUNCTION_161
0x4000693	          0x4989fc	                            mov r12, rdi	      1344	security.c	FUNCTION_161
0x4000696	              0x53	                                push rbx	      1344	security.c	FUNCTION_161
0x4000697	    0x488b1d000000	            mov rbx, qword [0x0400069e] 	      1345	security.c	FUNCTION_161	CALL_1
0x400069e	          0x4889f5	                            mov rbp, rsi	      1345	security.c	FUNCTION_161	CALL_1
0x40006a1	          0x4885db	                           test rbx, rbx	      1345	security.c	FUNCTION_161	CALL_1
0x40006a4	            0x750a	                           jne 0x40006b0	      1345	security.c	FUNCTION_161	CALL_1
0x40006a6	            0xeb20	                           jmp 0x40006c8	      1345	security.c	FUNCTION_161	CALL_1
0x40006a8	          0x488b1b	                    mov rbx, qword [rbx]	      1345	security.c	FUNCTION_161	CALL_1
0x40006ab	          0x4885db	                           test rbx, rbx	      1345	security.c	FUNCTION_161	CALL_1
0x40006ae	            0x7418	                            je 0x40006c8	      1345	security.c	FUNCTION_161	CALL_1
0x40006b0	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1345	security.c	FUNCTION_161	CALL_1
0x40006b4	          0x4889ee	                            mov rsi, rbp	      1345	security.c	FUNCTION_161	CALL_1
0x40006b7	          0x4c89e7	                            mov rdi, r12	      1345	security.c	FUNCTION_161	CALL_1
0x40006ba	      0xe800000000	                          call 0x40006bf	      1345	security.c	FUNCTION_161	CALL_1
0x40006bf	            0x85c0	                           test eax, eax	      1345	security.c	FUNCTION_161	CALL_1
0x40006c1	            0x74e5	                            je 0x40006a8	      1345	security.c	FUNCTION_161	CALL_1
0x40006c3	              0x5b	                                 pop rbx	      1346	security.c	FUNCTION_161
0x40006c4	              0x5d	                                 pop rbp	      1346	security.c	FUNCTION_161
0x40006c5	            0x415c	                                 pop r12	      1346	security.c	FUNCTION_161
0x40006c7	              0xc3	                                     ret	      1346	security.c	FUNCTION_161
0x40006c8	              0x5b	                                 pop rbx	      1346	security.c	FUNCTION_161
0x40006c9	            0x31c0	                            xor eax, eax	      1344	security.c	FUNCTION_161
0x40006cb	              0x5d	                                 pop rbp	      1346	security.c	FUNCTION_161
0x40006cc	            0x415c	                                 pop r12	      1346	security.c	FUNCTION_161
0x40006ce	              0xc3	                                     ret	      1346	security.c	FUNCTION_161
security_ipc_permission	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4002a30	            0x4154	                                push r12	      1159	security.c	FUNCTION_128
0x4002a32	              0x55	                                push rbp	      1159	security.c	FUNCTION_128
0x4002a33	          0x4989fc	                            mov r12, rdi	      1159	security.c	FUNCTION_128
0x4002a36	              0x53	                                push rbx	      1159	security.c	FUNCTION_128
0x4002a37	    0x488b1d000000	            mov rbx, qword [0x04002a3e] 	      1160	security.c	FUNCTION_128	CALL_1
0x4002a3e	           0xfbfee	                           movsx ebp, si	      1160	security.c	FUNCTION_128	CALL_1
0x4002a41	          0x4885db	                           test rbx, rbx	      1160	security.c	FUNCTION_128	CALL_1
0x4002a44	            0x750a	                           jne 0x4002a50	      1160	security.c	FUNCTION_128	CALL_1
0x4002a46	            0xeb1f	                           jmp 0x4002a67	      1160	security.c	FUNCTION_128	CALL_1
0x4002a48	          0x488b1b	                    mov rbx, qword [rbx]	      1160	security.c	FUNCTION_128	CALL_1
0x4002a4b	          0x4885db	                           test rbx, rbx	      1160	security.c	FUNCTION_128	CALL_1
0x4002a4e	            0x7417	                            je 0x4002a67	      1160	security.c	FUNCTION_128	CALL_1
0x4002a50	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1160	security.c	FUNCTION_128	CALL_1
0x4002a54	            0x89ee	                            mov esi, ebp	      1160	security.c	FUNCTION_128	CALL_1
0x4002a56	          0x4c89e7	                            mov rdi, r12	      1160	security.c	FUNCTION_128	CALL_1
0x4002a59	      0xe800000000	                          call 0x4002a5e	      1160	security.c	FUNCTION_128	CALL_1
0x4002a5e	            0x85c0	                           test eax, eax	      1160	security.c	FUNCTION_128	CALL_1
0x4002a60	            0x74e6	                            je 0x4002a48	      1160	security.c	FUNCTION_128	CALL_1
0x4002a62	              0x5b	                                 pop rbx	      1161	security.c	FUNCTION_128
0x4002a63	              0x5d	                                 pop rbp	      1161	security.c	FUNCTION_128
0x4002a64	            0x415c	                                 pop r12	      1161	security.c	FUNCTION_128
0x4002a66	              0xc3	                                     ret	      1161	security.c	FUNCTION_128
0x4002a67	              0x5b	                                 pop rbx	      1161	security.c	FUNCTION_128
0x4002a68	            0x31c0	                            xor eax, eax	      1159	security.c	FUNCTION_128
0x4002a6a	              0x5d	                                 pop rbp	      1161	security.c	FUNCTION_128
0x4002a6b	            0x415c	                                 pop r12	      1161	security.c	FUNCTION_128
0x4002a6d	              0xc3	                                     ret	      1161	security.c	FUNCTION_128
security_socket_connect	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x4003160	            0x4155	                                push r13	      1367	security.c	FUNCTION_165
0x4003162	            0x4154	                                push r12	      1367	security.c	FUNCTION_165
0x4003164	              0x55	                                push rbp	      1367	security.c	FUNCTION_165
0x4003165	              0x53	                                push rbx	      1367	security.c	FUNCTION_165
0x4003166	    0x488b1d000000	            mov rbx, qword [0x0400316d] 	      1368	security.c	FUNCTION_165	CALL_1
0x400316d	          0x4885db	                           test rbx, rbx	      1368	security.c	FUNCTION_165	CALL_1
0x4003170	            0x742e	                            je 0x40031a0	      1368	security.c	FUNCTION_165	CALL_1
0x4003172	          0x4989fd	                            mov r13, rdi	      1368	security.c	FUNCTION_165	CALL_1
0x4003175	          0x4989f4	                            mov r12, rsi	      1368	security.c	FUNCTION_165	CALL_1
0x4003178	            0x89d5	                            mov ebp, edx	      1368	security.c	FUNCTION_165	CALL_1
0x400317a	            0xeb08	                           jmp 0x4003184	      1368	security.c	FUNCTION_165	CALL_1
0x400317c	          0x488b1b	                    mov rbx, qword [rbx]	      1368	security.c	FUNCTION_165	CALL_1
0x400317f	          0x4885db	                           test rbx, rbx	      1368	security.c	FUNCTION_165	CALL_1
0x4003182	            0x741c	                            je 0x40031a0	      1368	security.c	FUNCTION_165	CALL_1
0x4003184	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1368	security.c	FUNCTION_165	CALL_1
0x4003188	            0x89ea	                            mov edx, ebp	      1368	security.c	FUNCTION_165	CALL_1
0x400318a	          0x4c89e6	                            mov rsi, r12	      1368	security.c	FUNCTION_165	CALL_1
0x400318d	          0x4c89ef	                            mov rdi, r13	      1368	security.c	FUNCTION_165	CALL_1
0x4003190	      0xe800000000	                          call 0x4003195	      1368	security.c	FUNCTION_165	CALL_1
0x4003195	            0x85c0	                           test eax, eax	      1368	security.c	FUNCTION_165	CALL_1
0x4003197	            0x74e3	                            je 0x400317c	      1368	security.c	FUNCTION_165	CALL_1
0x4003199	              0x5b	                                 pop rbx	      1369	security.c	FUNCTION_165
0x400319a	              0x5d	                                 pop rbp	      1369	security.c	FUNCTION_165
0x400319b	            0x415c	                                 pop r12	      1369	security.c	FUNCTION_165
0x400319d	            0x415d	                                 pop r13	      1369	security.c	FUNCTION_165
0x400319f	              0xc3	                                     ret	      1369	security.c	FUNCTION_165
0x40031a0	              0x5b	                                 pop rbx	      1369	security.c	FUNCTION_165
0x40031a1	            0x31c0	                            xor eax, eax	      1367	security.c	FUNCTION_165
0x40031a3	              0x5d	                                 pop rbp	      1369	security.c	FUNCTION_165
0x40031a4	            0x415c	                                 pop r12	      1369	security.c	FUNCTION_165
0x40031a6	            0x415d	                                 pop r13	      1369	security.c	FUNCTION_165
0x40031a8	              0xc3	                                     ret	      1369	security.c	FUNCTION_165
security_inode_killpriv	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x4001d90	              0x55	                                push rbp	       800	security.c	FUNCTION_79
0x4001d91	              0x53	                                push rbx	       800	security.c	FUNCTION_79
0x4001d92	          0x4889fd	                            mov rbp, rdi	       800	security.c	FUNCTION_79
0x4001d95	    0x488b1d000000	            mov rbx, qword [0x04001d9c] 	       801	security.c	FUNCTION_79	CALL_1
0x4001d9c	          0x4885db	                           test rbx, rbx	       801	security.c	FUNCTION_79	CALL_1
0x4001d9f	            0x750a	                           jne 0x4001dab	       801	security.c	FUNCTION_79	CALL_1
0x4001da1	            0xeb1b	                           jmp 0x4001dbe	       801	security.c	FUNCTION_79	CALL_1
0x4001da3	          0x488b1b	                    mov rbx, qword [rbx]	       801	security.c	FUNCTION_79	CALL_1
0x4001da6	          0x4885db	                           test rbx, rbx	       801	security.c	FUNCTION_79	CALL_1
0x4001da9	            0x7413	                            je 0x4001dbe	       801	security.c	FUNCTION_79	CALL_1
0x4001dab	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       801	security.c	FUNCTION_79	CALL_1
0x4001daf	          0x4889ef	                            mov rdi, rbp	       801	security.c	FUNCTION_79	CALL_1
0x4001db2	      0xe800000000	                          call 0x4001db7	       801	security.c	FUNCTION_79	CALL_1
0x4001db7	            0x85c0	                           test eax, eax	       801	security.c	FUNCTION_79	CALL_1
0x4001db9	            0x74e8	                            je 0x4001da3	       801	security.c	FUNCTION_79	CALL_1
0x4001dbb	              0x5b	                                 pop rbx	       802	security.c	FUNCTION_79
0x4001dbc	              0x5d	                                 pop rbp	       802	security.c	FUNCTION_79
0x4001dbd	              0xc3	                                     ret	       802	security.c	FUNCTION_79
0x4001dbe	            0x31c0	                            xor eax, eax	       800	security.c	FUNCTION_79
0x4001dc0	              0x5b	                                 pop rbx	       802	security.c	FUNCTION_79
0x4001dc1	              0x5d	                                 pop rbp	       802	security.c	FUNCTION_79
0x4001dc2	              0xc3	                                     ret	       802	security.c	FUNCTION_79
security_sem_alloc	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x4002e10	              0x55	                                push rbp	      1237	security.c	FUNCTION_143
0x4002e11	              0x53	                                push rbx	      1237	security.c	FUNCTION_143
0x4002e12	          0x4889fd	                            mov rbp, rdi	      1237	security.c	FUNCTION_143
0x4002e15	    0x488b1d000000	            mov rbx, qword [0x04002e1c] 	      1238	security.c	FUNCTION_143	CALL_1
0x4002e1c	          0x4885db	                           test rbx, rbx	      1238	security.c	FUNCTION_143	CALL_1
0x4002e1f	            0x750a	                           jne 0x4002e2b	      1238	security.c	FUNCTION_143	CALL_1
0x4002e21	            0xeb1b	                           jmp 0x4002e3e	      1238	security.c	FUNCTION_143	CALL_1
0x4002e23	          0x488b1b	                    mov rbx, qword [rbx]	      1238	security.c	FUNCTION_143	CALL_1
0x4002e26	          0x4885db	                           test rbx, rbx	      1238	security.c	FUNCTION_143	CALL_1
0x4002e29	            0x7413	                            je 0x4002e3e	      1238	security.c	FUNCTION_143	CALL_1
0x4002e2b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1238	security.c	FUNCTION_143	CALL_1
0x4002e2f	          0x4889ef	                            mov rdi, rbp	      1238	security.c	FUNCTION_143	CALL_1
0x4002e32	      0xe800000000	                          call 0x4002e37	      1238	security.c	FUNCTION_143	CALL_1
0x4002e37	            0x85c0	                           test eax, eax	      1238	security.c	FUNCTION_143	CALL_1
0x4002e39	            0x74e8	                            je 0x4002e23	      1238	security.c	FUNCTION_143	CALL_1
0x4002e3b	              0x5b	                                 pop rbx	      1239	security.c	FUNCTION_143
0x4002e3c	              0x5d	                                 pop rbp	      1239	security.c	FUNCTION_143
0x4002e3d	              0xc3	                                     ret	      1239	security.c	FUNCTION_143
0x4002e3e	            0x31c0	                            xor eax, eax	      1237	security.c	FUNCTION_143
0x4002e40	              0x5b	                                 pop rbx	      1239	security.c	FUNCTION_143
0x4002e41	              0x5d	                                 pop rbp	      1239	security.c	FUNCTION_143
0x4002e42	              0xc3	                                     ret	      1239	security.c	FUNCTION_143
security_binder_transfer_binder	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4000ff0	            0x4154	                                push r12	       243	security.c	FUNCTION_13
0x4000ff2	              0x55	                                push rbp	       243	security.c	FUNCTION_13
0x4000ff3	          0x4989fc	                            mov r12, rdi	       243	security.c	FUNCTION_13
0x4000ff6	              0x53	                                push rbx	       243	security.c	FUNCTION_13
0x4000ff7	    0x488b1d000000	            mov rbx, qword [0x04000ffe] 	       244	security.c	FUNCTION_13	CALL_1
0x4000ffe	          0x4889f5	                            mov rbp, rsi	       244	security.c	FUNCTION_13	CALL_1
0x4001001	          0x4885db	                           test rbx, rbx	       244	security.c	FUNCTION_13	CALL_1
0x4001004	            0x750a	                           jne 0x4001010	       244	security.c	FUNCTION_13	CALL_1
0x4001006	            0xeb20	                           jmp 0x4001028	       244	security.c	FUNCTION_13	CALL_1
0x4001008	          0x488b1b	                    mov rbx, qword [rbx]	       244	security.c	FUNCTION_13	CALL_1
0x400100b	          0x4885db	                           test rbx, rbx	       244	security.c	FUNCTION_13	CALL_1
0x400100e	            0x7418	                            je 0x4001028	       244	security.c	FUNCTION_13	CALL_1
0x4001010	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       244	security.c	FUNCTION_13	CALL_1
0x4001014	          0x4889ee	                            mov rsi, rbp	       244	security.c	FUNCTION_13	CALL_1
0x4001017	          0x4c89e7	                            mov rdi, r12	       244	security.c	FUNCTION_13	CALL_1
0x400101a	      0xe800000000	                          call 0x400101f	       244	security.c	FUNCTION_13	CALL_1
0x400101f	            0x85c0	                           test eax, eax	       244	security.c	FUNCTION_13	CALL_1
0x4001021	            0x74e5	                            je 0x4001008	       244	security.c	FUNCTION_13	CALL_1
0x4001023	              0x5b	                                 pop rbx	       245	security.c	FUNCTION_13
0x4001024	              0x5d	                                 pop rbp	       245	security.c	FUNCTION_13
0x4001025	            0x415c	                                 pop r12	       245	security.c	FUNCTION_13
0x4001027	              0xc3	                                     ret	       245	security.c	FUNCTION_13
0x4001028	              0x5b	                                 pop rbx	       245	security.c	FUNCTION_13
0x4001029	            0x31c0	                            xor eax, eax	       243	security.c	FUNCTION_13
0x400102b	              0x5d	                                 pop rbp	       245	security.c	FUNCTION_13
0x400102c	            0x415c	                                 pop r12	       245	security.c	FUNCTION_13
0x400102e	              0xc3	                                     ret	       245	security.c	FUNCTION_13
security_file_fcntl	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x4002210	            0x4155	                                push r13	       953	security.c	FUNCTION_95
0x4002212	            0x4154	                                push r12	       953	security.c	FUNCTION_95
0x4002214	              0x55	                                push rbp	       953	security.c	FUNCTION_95
0x4002215	              0x53	                                push rbx	       953	security.c	FUNCTION_95
0x4002216	    0x488b1d000000	            mov rbx, qword [0x0400221d] 	       954	security.c	FUNCTION_95	CALL_1
0x400221d	          0x4885db	                           test rbx, rbx	       954	security.c	FUNCTION_95	CALL_1
0x4002220	            0x7430	                            je 0x4002252	       954	security.c	FUNCTION_95	CALL_1
0x4002222	          0x4989fd	                            mov r13, rdi	       954	security.c	FUNCTION_95	CALL_1
0x4002225	          0x4189f4	                           mov r12d, esi	       954	security.c	FUNCTION_95	CALL_1
0x4002228	          0x4889d5	                            mov rbp, rdx	       954	security.c	FUNCTION_95	CALL_1
0x400222b	            0xeb08	                           jmp 0x4002235	       954	security.c	FUNCTION_95	CALL_1
0x400222d	          0x488b1b	                    mov rbx, qword [rbx]	       954	security.c	FUNCTION_95	CALL_1
0x4002230	          0x4885db	                           test rbx, rbx	       954	security.c	FUNCTION_95	CALL_1
0x4002233	            0x741d	                            je 0x4002252	       954	security.c	FUNCTION_95	CALL_1
0x4002235	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       954	security.c	FUNCTION_95	CALL_1
0x4002239	          0x4889ea	                            mov rdx, rbp	       954	security.c	FUNCTION_95	CALL_1
0x400223c	          0x4489e6	                           mov esi, r12d	       954	security.c	FUNCTION_95	CALL_1
0x400223f	          0x4c89ef	                            mov rdi, r13	       954	security.c	FUNCTION_95	CALL_1
0x4002242	      0xe800000000	                          call 0x4002247	       954	security.c	FUNCTION_95	CALL_1
0x4002247	            0x85c0	                           test eax, eax	       954	security.c	FUNCTION_95	CALL_1
0x4002249	            0x74e2	                            je 0x400222d	       954	security.c	FUNCTION_95	CALL_1
0x400224b	              0x5b	                                 pop rbx	       955	security.c	FUNCTION_95
0x400224c	              0x5d	                                 pop rbp	       955	security.c	FUNCTION_95
0x400224d	            0x415c	                                 pop r12	       955	security.c	FUNCTION_95
0x400224f	            0x415d	                                 pop r13	       955	security.c	FUNCTION_95
0x4002251	              0xc3	                                     ret	       955	security.c	FUNCTION_95
0x4002252	              0x5b	                                 pop rbx	       955	security.c	FUNCTION_95
0x4002253	            0x31c0	                            xor eax, eax	       953	security.c	FUNCTION_95
0x4002255	              0x5d	                                 pop rbp	       955	security.c	FUNCTION_95
0x4002256	            0x415c	                                 pop r12	       955	security.c	FUNCTION_95
0x4002258	            0x415d	                                 pop r13	       955	security.c	FUNCTION_95
0x400225a	              0xc3	                                     ret	       955	security.c	FUNCTION_95
security_inode_symlink	IF,1:SWITCH,0:functions,0:CALL,3:FOR,0:WHILE,0:DO,0:ELSE,0	36
0x4001860	        0xf6470d02	                test byte [rdi + 0xd], 2	       638	security.c	FUNCTION_63	IF_1	CALL_2
0x4001864	            0x754b	                           jne 0x40018b1	       638	security.c	FUNCTION_63	IF_1	CALL_2
0x4001866	            0x4155	                                push r13	       637	security.c	FUNCTION_63
0x4001868	            0x4154	                                push r12	       637	security.c	FUNCTION_63
0x400186a	          0x4989d5	                            mov r13, rdx	       637	security.c	FUNCTION_63
0x400186d	              0x55	                                push rbp	       637	security.c	FUNCTION_63
0x400186e	              0x53	                                push rbx	       637	security.c	FUNCTION_63
0x400186f	          0x4989f4	                            mov r12, rsi	       637	security.c	FUNCTION_63
0x4001872	    0x488b1d000000	            mov rbx, qword [0x04001879] 	       640	security.c	FUNCTION_63	CALL_3
0x4001879	          0x4889fd	                            mov rbp, rdi	       640	security.c	FUNCTION_63	CALL_3
0x400187c	          0x4885db	                           test rbx, rbx	       640	security.c	FUNCTION_63	CALL_3
0x400187f	            0x750a	                           jne 0x400188b	       640	security.c	FUNCTION_63	CALL_3
0x4001881	            0xeb25	                           jmp 0x40018a8	       640	security.c	FUNCTION_63	CALL_3
0x4001883	          0x488b1b	                    mov rbx, qword [rbx]	       640	security.c	FUNCTION_63	CALL_3
0x4001886	          0x4885db	                           test rbx, rbx	       640	security.c	FUNCTION_63	CALL_3
0x4001889	            0x741d	                            je 0x40018a8	       640	security.c	FUNCTION_63	CALL_3
0x400188b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       640	security.c	FUNCTION_63	CALL_3
0x400188f	          0x4c89ea	                            mov rdx, r13	       640	security.c	FUNCTION_63	CALL_3
0x4001892	          0x4c89e6	                            mov rsi, r12	       640	security.c	FUNCTION_63	CALL_3
0x4001895	          0x4889ef	                            mov rdi, rbp	       640	security.c	FUNCTION_63	CALL_3
0x4001898	      0xe800000000	                          call 0x400189d	       640	security.c	FUNCTION_63	CALL_3
0x400189d	            0x85c0	                           test eax, eax	       640	security.c	FUNCTION_63	CALL_3
0x400189f	            0x74e2	                            je 0x4001883	       640	security.c	FUNCTION_63	CALL_3
0x40018a1	              0x5b	                                 pop rbx	       641	security.c	FUNCTION_63
0x40018a2	              0x5d	                                 pop rbp	       641	security.c	FUNCTION_63
0x40018a3	            0x415c	                                 pop r12	       641	security.c	FUNCTION_63
0x40018a5	            0x415d	                                 pop r13	       641	security.c	FUNCTION_63
0x40018a7	              0xc3	                                     ret	       641	security.c	FUNCTION_63
0x40018a8	              0x5b	                                 pop rbx	       641	security.c	FUNCTION_63
0x40018a9	            0x31c0	                            xor eax, eax	       639	security.c	FUNCTION_63	IF_1
0x40018ab	              0x5d	                                 pop rbp	       641	security.c	FUNCTION_63
0x40018ac	            0x415c	                                 pop r12	       641	security.c	FUNCTION_63
0x40018ae	            0x415d	                                 pop r13	       641	security.c	FUNCTION_63
0x40018b0	              0xc3	                                     ret	       641	security.c	FUNCTION_63
0x40018b1	            0x31c0	                            xor eax, eax	       639	security.c	FUNCTION_63	IF_1
0x40018b3	              0xc3	                                     ret	       641	security.c	FUNCTION_63
security_task_getioprio	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x4002770	              0x55	                                push rbp	      1098	security.c	FUNCTION_119
0x4002771	              0x53	                                push rbx	      1098	security.c	FUNCTION_119
0x4002772	          0x4889fd	                            mov rbp, rdi	      1098	security.c	FUNCTION_119
0x4002775	    0x488b1d000000	            mov rbx, qword [0x0400277c] 	      1099	security.c	FUNCTION_119	CALL_1
0x400277c	          0x4885db	                           test rbx, rbx	      1099	security.c	FUNCTION_119	CALL_1
0x400277f	            0x750a	                           jne 0x400278b	      1099	security.c	FUNCTION_119	CALL_1
0x4002781	            0xeb1b	                           jmp 0x400279e	      1099	security.c	FUNCTION_119	CALL_1
0x4002783	          0x488b1b	                    mov rbx, qword [rbx]	      1099	security.c	FUNCTION_119	CALL_1
0x4002786	          0x4885db	                           test rbx, rbx	      1099	security.c	FUNCTION_119	CALL_1
0x4002789	            0x7413	                            je 0x400279e	      1099	security.c	FUNCTION_119	CALL_1
0x400278b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1099	security.c	FUNCTION_119	CALL_1
0x400278f	          0x4889ef	                            mov rdi, rbp	      1099	security.c	FUNCTION_119	CALL_1
0x4002792	      0xe800000000	                          call 0x4002797	      1099	security.c	FUNCTION_119	CALL_1
0x4002797	            0x85c0	                           test eax, eax	      1099	security.c	FUNCTION_119	CALL_1
0x4002799	            0x74e8	                            je 0x4002783	      1099	security.c	FUNCTION_119	CALL_1
0x400279b	              0x5b	                                 pop rbx	      1100	security.c	FUNCTION_119
0x400279c	              0x5d	                                 pop rbp	      1100	security.c	FUNCTION_119
0x400279d	              0xc3	                                     ret	      1100	security.c	FUNCTION_119
0x400279e	            0x31c0	                            xor eax, eax	      1098	security.c	FUNCTION_119
0x40027a0	              0x5b	                                 pop rbx	      1100	security.c	FUNCTION_119
0x40027a1	              0x5d	                                 pop rbp	      1100	security.c	FUNCTION_119
0x40027a2	              0xc3	                                     ret	      1100	security.c	FUNCTION_119
security_msg_queue_msgsnd	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x4002c10	            0x4155	                                push r13	      1201	security.c	FUNCTION_136
0x4002c12	            0x4154	                                push r12	      1201	security.c	FUNCTION_136
0x4002c14	              0x55	                                push rbp	      1201	security.c	FUNCTION_136
0x4002c15	              0x53	                                push rbx	      1201	security.c	FUNCTION_136
0x4002c16	    0x488b1d000000	            mov rbx, qword [0x04002c1d] 	      1202	security.c	FUNCTION_136	CALL_1
0x4002c1d	          0x4885db	                           test rbx, rbx	      1202	security.c	FUNCTION_136	CALL_1
0x4002c20	            0x742e	                            je 0x4002c50	      1202	security.c	FUNCTION_136	CALL_1
0x4002c22	          0x4989fd	                            mov r13, rdi	      1202	security.c	FUNCTION_136	CALL_1
0x4002c25	          0x4989f4	                            mov r12, rsi	      1202	security.c	FUNCTION_136	CALL_1
0x4002c28	            0x89d5	                            mov ebp, edx	      1202	security.c	FUNCTION_136	CALL_1
0x4002c2a	            0xeb08	                           jmp 0x4002c34	      1202	security.c	FUNCTION_136	CALL_1
0x4002c2c	          0x488b1b	                    mov rbx, qword [rbx]	      1202	security.c	FUNCTION_136	CALL_1
0x4002c2f	          0x4885db	                           test rbx, rbx	      1202	security.c	FUNCTION_136	CALL_1
0x4002c32	            0x741c	                            je 0x4002c50	      1202	security.c	FUNCTION_136	CALL_1
0x4002c34	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1202	security.c	FUNCTION_136	CALL_1
0x4002c38	            0x89ea	                            mov edx, ebp	      1202	security.c	FUNCTION_136	CALL_1
0x4002c3a	          0x4c89e6	                            mov rsi, r12	      1202	security.c	FUNCTION_136	CALL_1
0x4002c3d	          0x4c89ef	                            mov rdi, r13	      1202	security.c	FUNCTION_136	CALL_1
0x4002c40	      0xe800000000	                          call 0x4002c45	      1202	security.c	FUNCTION_136	CALL_1
0x4002c45	            0x85c0	                           test eax, eax	      1202	security.c	FUNCTION_136	CALL_1
0x4002c47	            0x74e3	                            je 0x4002c2c	      1202	security.c	FUNCTION_136	CALL_1
0x4002c49	              0x5b	                                 pop rbx	      1203	security.c	FUNCTION_136
0x4002c4a	              0x5d	                                 pop rbp	      1203	security.c	FUNCTION_136
0x4002c4b	            0x415c	                                 pop r12	      1203	security.c	FUNCTION_136
0x4002c4d	            0x415d	                                 pop r13	      1203	security.c	FUNCTION_136
0x4002c4f	              0xc3	                                     ret	      1203	security.c	FUNCTION_136
0x4002c50	              0x5b	                                 pop rbx	      1203	security.c	FUNCTION_136
0x4002c51	            0x31c0	                            xor eax, eax	      1201	security.c	FUNCTION_136
0x4002c53	              0x5d	                                 pop rbp	      1203	security.c	FUNCTION_136
0x4002c54	            0x415c	                                 pop r12	      1203	security.c	FUNCTION_136
0x4002c56	            0x415d	                                 pop r13	      1203	security.c	FUNCTION_136
0x4002c58	              0xc3	                                     ret	      1203	security.c	FUNCTION_136
security_sem_free	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	15
0x4002e50	              0x55	                                push rbp	      1242	security.c	FUNCTION_144
0x4002e51	              0x53	                                push rbx	      1242	security.c	FUNCTION_144
0x4002e52	    0x488b1d000000	            mov rbx, qword [0x04002e59] 	      1243	security.c	FUNCTION_144	CALL_1
0x4002e59	          0x4885db	                           test rbx, rbx	      1243	security.c	FUNCTION_144	CALL_1
0x4002e5c	            0x7417	                            je 0x4002e75	      1243	security.c	FUNCTION_144	CALL_1
0x4002e5e	          0x4889fd	                            mov rbp, rdi	      1243	security.c	FUNCTION_144	CALL_1
0x4002e61	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1243	security.c	FUNCTION_144	CALL_1
0x4002e65	          0x4889ef	                            mov rdi, rbp	      1243	security.c	FUNCTION_144	CALL_1
0x4002e68	      0xe800000000	                          call 0x4002e6d	      1243	security.c	FUNCTION_144	CALL_1
0x4002e6d	          0x488b1b	                    mov rbx, qword [rbx]	      1243	security.c	FUNCTION_144	CALL_1
0x4002e70	          0x4885db	                           test rbx, rbx	      1243	security.c	FUNCTION_144	CALL_1
0x4002e73	            0x75ec	                           jne 0x4002e61	      1243	security.c	FUNCTION_144	CALL_1
0x4002e75	              0x5b	                                 pop rbx	      1244	security.c	FUNCTION_144
0x4002e76	              0x5d	                                 pop rbp	      1244	security.c	FUNCTION_144
0x4002e77	              0xc3	                                     ret	      1244	security.c	FUNCTION_144
security_audit_rule_known	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x40036d0	              0x55	                                push rbp	      1726	security.c	FUNCTION_220
0x40036d1	              0x53	                                push rbx	      1726	security.c	FUNCTION_220
0x40036d2	          0x4889fd	                            mov rbp, rdi	      1726	security.c	FUNCTION_220
0x40036d5	    0x488b1d000000	            mov rbx, qword [0x040036dc] 	      1727	security.c	FUNCTION_220	CALL_1
0x40036dc	          0x4885db	                           test rbx, rbx	      1727	security.c	FUNCTION_220	CALL_1
0x40036df	            0x750a	                           jne 0x40036eb	      1727	security.c	FUNCTION_220	CALL_1
0x40036e1	            0xeb1b	                           jmp 0x40036fe	      1727	security.c	FUNCTION_220	CALL_1
0x40036e3	          0x488b1b	                    mov rbx, qword [rbx]	      1727	security.c	FUNCTION_220	CALL_1
0x40036e6	          0x4885db	                           test rbx, rbx	      1727	security.c	FUNCTION_220	CALL_1
0x40036e9	            0x7413	                            je 0x40036fe	      1727	security.c	FUNCTION_220	CALL_1
0x40036eb	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1727	security.c	FUNCTION_220	CALL_1
0x40036ef	          0x4889ef	                            mov rdi, rbp	      1727	security.c	FUNCTION_220	CALL_1
0x40036f2	      0xe800000000	                          call 0x40036f7	      1727	security.c	FUNCTION_220	CALL_1
0x40036f7	            0x85c0	                           test eax, eax	      1727	security.c	FUNCTION_220	CALL_1
0x40036f9	            0x74e8	                            je 0x40036e3	      1727	security.c	FUNCTION_220	CALL_1
0x40036fb	              0x5b	                                 pop rbx	      1728	security.c	FUNCTION_220
0x40036fc	              0x5d	                                 pop rbp	      1728	security.c	FUNCTION_220
0x40036fd	              0xc3	                                     ret	      1728	security.c	FUNCTION_220
0x40036fe	            0x31c0	                            xor eax, eax	      1726	security.c	FUNCTION_220
0x4003700	              0x5b	                                 pop rbx	      1728	security.c	FUNCTION_220
0x4003701	              0x5d	                                 pop rbp	      1728	security.c	FUNCTION_220
0x4003702	              0xc3	                                     ret	      1728	security.c	FUNCTION_220
security_sb_clone_mnt_opts	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	37
0x40000f0	            0x4156	                                push r14	       428	security.c	FUNCTION_41
0x40000f2	            0x4155	                                push r13	       428	security.c	FUNCTION_41
0x40000f4	            0x4154	                                push r12	       428	security.c	FUNCTION_41
0x40000f6	              0x55	                                push rbp	       428	security.c	FUNCTION_41
0x40000f7	              0x53	                                push rbx	       428	security.c	FUNCTION_41
0x40000f8	    0x488b1d000000	            mov rbx, qword [0x040000ff] 	       429	security.c	FUNCTION_41	CALL_1
0x40000ff	          0x4885db	                           test rbx, rbx	       429	security.c	FUNCTION_41	CALL_1
0x4000102	            0x7438	                            je 0x400013c	       429	security.c	FUNCTION_41	CALL_1
0x4000104	          0x4989fe	                            mov r14, rdi	       429	security.c	FUNCTION_41	CALL_1
0x4000107	          0x4989f5	                            mov r13, rsi	       429	security.c	FUNCTION_41	CALL_1
0x400010a	          0x4989d4	                            mov r12, rdx	       429	security.c	FUNCTION_41	CALL_1
0x400010d	          0x4889cd	                            mov rbp, rcx	       429	security.c	FUNCTION_41	CALL_1
0x4000110	            0xeb08	                           jmp 0x400011a	       429	security.c	FUNCTION_41	CALL_1
0x4000112	          0x488b1b	                    mov rbx, qword [rbx]	       429	security.c	FUNCTION_41	CALL_1
0x4000115	          0x4885db	                           test rbx, rbx	       429	security.c	FUNCTION_41	CALL_1
0x4000118	            0x7422	                            je 0x400013c	       429	security.c	FUNCTION_41	CALL_1
0x400011a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       429	security.c	FUNCTION_41	CALL_1
0x400011e	          0x4889e9	                            mov rcx, rbp	       429	security.c	FUNCTION_41	CALL_1
0x4000121	          0x4c89e2	                            mov rdx, r12	       429	security.c	FUNCTION_41	CALL_1
0x4000124	          0x4c89ee	                            mov rsi, r13	       429	security.c	FUNCTION_41	CALL_1
0x4000127	          0x4c89f7	                            mov rdi, r14	       429	security.c	FUNCTION_41	CALL_1
0x400012a	      0xe800000000	                          call 0x400012f	       429	security.c	FUNCTION_41	CALL_1
0x400012f	            0x85c0	                           test eax, eax	       429	security.c	FUNCTION_41	CALL_1
0x4000131	            0x74df	                            je 0x4000112	       429	security.c	FUNCTION_41	CALL_1
0x4000133	              0x5b	                                 pop rbx	       431	security.c	FUNCTION_41
0x4000134	              0x5d	                                 pop rbp	       431	security.c	FUNCTION_41
0x4000135	            0x415c	                                 pop r12	       431	security.c	FUNCTION_41
0x4000137	            0x415d	                                 pop r13	       431	security.c	FUNCTION_41
0x4000139	            0x415e	                                 pop r14	       431	security.c	FUNCTION_41
0x400013b	              0xc3	                                     ret	       431	security.c	FUNCTION_41
0x400013c	              0x5b	                                 pop rbx	       431	security.c	FUNCTION_41
0x400013d	            0x31c0	                            xor eax, eax	       428	security.c	FUNCTION_41
0x400013f	              0x5d	                                 pop rbp	       431	security.c	FUNCTION_41
0x4000140	            0x415c	                                 pop r12	       431	security.c	FUNCTION_41
0x4000142	            0x415d	                                 pop r13	       431	security.c	FUNCTION_41
0x4000144	            0x415e	                                 pop r14	       431	security.c	FUNCTION_41
0x4000146	              0xc3	                                     ret	       431	security.c	FUNCTION_41
security_sb_mount	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	42
0x4001650	            0x4157	                                push r15	       399	security.c	FUNCTION_37
0x4001652	            0x4156	                                push r14	       399	security.c	FUNCTION_37
0x4001654	            0x4155	                                push r13	       399	security.c	FUNCTION_37
0x4001656	            0x4154	                                push r12	       399	security.c	FUNCTION_37
0x4001658	              0x55	                                push rbp	       399	security.c	FUNCTION_37
0x4001659	              0x53	                                push rbx	       399	security.c	FUNCTION_37
0x400165a	    0x488b1d000000	            mov rbx, qword [0x04001661] 	       400	security.c	FUNCTION_37	CALL_1
0x4001661	          0x4885db	                           test rbx, rbx	       400	security.c	FUNCTION_37	CALL_1
0x4001664	            0x7440	                            je 0x40016a6	       400	security.c	FUNCTION_37	CALL_1
0x4001666	          0x4989ff	                            mov r15, rdi	       400	security.c	FUNCTION_37	CALL_1
0x4001669	          0x4989f6	                            mov r14, rsi	       400	security.c	FUNCTION_37	CALL_1
0x400166c	          0x4989d5	                            mov r13, rdx	       400	security.c	FUNCTION_37	CALL_1
0x400166f	          0x4989cc	                            mov r12, rcx	       400	security.c	FUNCTION_37	CALL_1
0x4001672	          0x4c89c5	                             mov rbp, r8	       400	security.c	FUNCTION_37	CALL_1
0x4001675	            0xeb08	                           jmp 0x400167f	       400	security.c	FUNCTION_37	CALL_1
0x4001677	          0x488b1b	                    mov rbx, qword [rbx]	       400	security.c	FUNCTION_37	CALL_1
0x400167a	          0x4885db	                           test rbx, rbx	       400	security.c	FUNCTION_37	CALL_1
0x400167d	            0x7427	                            je 0x40016a6	       400	security.c	FUNCTION_37	CALL_1
0x400167f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       400	security.c	FUNCTION_37	CALL_1
0x4001683	          0x4989e8	                             mov r8, rbp	       400	security.c	FUNCTION_37	CALL_1
0x4001686	          0x4c89e1	                            mov rcx, r12	       400	security.c	FUNCTION_37	CALL_1
0x4001689	          0x4c89ea	                            mov rdx, r13	       400	security.c	FUNCTION_37	CALL_1
0x400168c	          0x4c89f6	                            mov rsi, r14	       400	security.c	FUNCTION_37	CALL_1
0x400168f	          0x4c89ff	                            mov rdi, r15	       400	security.c	FUNCTION_37	CALL_1
0x4001692	      0xe800000000	                          call 0x4001697	       400	security.c	FUNCTION_37	CALL_1
0x4001697	            0x85c0	                           test eax, eax	       400	security.c	FUNCTION_37	CALL_1
0x4001699	            0x74dc	                            je 0x4001677	       400	security.c	FUNCTION_37	CALL_1
0x400169b	              0x5b	                                 pop rbx	       401	security.c	FUNCTION_37
0x400169c	              0x5d	                                 pop rbp	       401	security.c	FUNCTION_37
0x400169d	            0x415c	                                 pop r12	       401	security.c	FUNCTION_37
0x400169f	            0x415d	                                 pop r13	       401	security.c	FUNCTION_37
0x40016a1	            0x415e	                                 pop r14	       401	security.c	FUNCTION_37
0x40016a3	            0x415f	                                 pop r15	       401	security.c	FUNCTION_37
0x40016a5	              0xc3	                                     ret	       401	security.c	FUNCTION_37
0x40016a6	              0x5b	                                 pop rbx	       401	security.c	FUNCTION_37
0x40016a7	            0x31c0	                            xor eax, eax	       399	security.c	FUNCTION_37
0x40016a9	              0x5d	                                 pop rbp	       401	security.c	FUNCTION_37
0x40016aa	            0x415c	                                 pop r12	       401	security.c	FUNCTION_37
0x40016ac	            0x415d	                                 pop r13	       401	security.c	FUNCTION_37
0x40016ae	            0x415e	                                 pop r14	       401	security.c	FUNCTION_37
0x40016b0	            0x415f	                                 pop r15	       401	security.c	FUNCTION_37
0x40016b2	              0xc3	                                     ret	       401	security.c	FUNCTION_37
security_netlink_send	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4003000	            0x4154	                                push r12	      1281	security.c	FUNCTION_151
0x4003002	              0x55	                                push rbp	      1281	security.c	FUNCTION_151
0x4003003	          0x4989fc	                            mov r12, rdi	      1281	security.c	FUNCTION_151
0x4003006	              0x53	                                push rbx	      1281	security.c	FUNCTION_151
0x4003007	    0x488b1d000000	            mov rbx, qword [0x0400300e] 	      1282	security.c	FUNCTION_151	CALL_1
0x400300e	          0x4889f5	                            mov rbp, rsi	      1282	security.c	FUNCTION_151	CALL_1
0x4003011	          0x4885db	                           test rbx, rbx	      1282	security.c	FUNCTION_151	CALL_1
0x4003014	            0x750a	                           jne 0x4003020	      1282	security.c	FUNCTION_151	CALL_1
0x4003016	            0xeb20	                           jmp 0x4003038	      1282	security.c	FUNCTION_151	CALL_1
0x4003018	          0x488b1b	                    mov rbx, qword [rbx]	      1282	security.c	FUNCTION_151	CALL_1
0x400301b	          0x4885db	                           test rbx, rbx	      1282	security.c	FUNCTION_151	CALL_1
0x400301e	            0x7418	                            je 0x4003038	      1282	security.c	FUNCTION_151	CALL_1
0x4003020	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1282	security.c	FUNCTION_151	CALL_1
0x4003024	          0x4889ee	                            mov rsi, rbp	      1282	security.c	FUNCTION_151	CALL_1
0x4003027	          0x4c89e7	                            mov rdi, r12	      1282	security.c	FUNCTION_151	CALL_1
0x400302a	      0xe800000000	                          call 0x400302f	      1282	security.c	FUNCTION_151	CALL_1
0x400302f	            0x85c0	                           test eax, eax	      1282	security.c	FUNCTION_151	CALL_1
0x4003031	            0x74e5	                            je 0x4003018	      1282	security.c	FUNCTION_151	CALL_1
0x4003033	              0x5b	                                 pop rbx	      1283	security.c	FUNCTION_151
0x4003034	              0x5d	                                 pop rbp	      1283	security.c	FUNCTION_151
0x4003035	            0x415c	                                 pop r12	      1283	security.c	FUNCTION_151
0x4003037	              0xc3	                                     ret	      1283	security.c	FUNCTION_151
0x4003038	              0x5b	                                 pop rbx	      1283	security.c	FUNCTION_151
0x4003039	            0x31c0	                            xor eax, eax	      1281	security.c	FUNCTION_151
0x400303b	              0x5d	                                 pop rbp	      1283	security.c	FUNCTION_151
0x400303c	            0x415c	                                 pop r12	      1283	security.c	FUNCTION_151
0x400303e	              0xc3	                                     ret	      1283	security.c	FUNCTION_151
security_inode_alloc	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	23
0x4001740	              0x55	                                push rbp	       441	security.c	FUNCTION_43
0x4001741	              0x53	                                push rbx	       441	security.c	FUNCTION_43
0x4001742	          0x4889fd	                            mov rbp, rdi	       441	security.c	FUNCTION_43
0x4001745	    0x48c747380000	               mov qword [rdi + 0x38], 0	       442	security.c	FUNCTION_43
0x400174d	    0x488b1d000000	            mov rbx, qword [0x04001754] 	       443	security.c	FUNCTION_43	CALL_1
0x4001754	          0x4885db	                           test rbx, rbx	       443	security.c	FUNCTION_43	CALL_1
0x4001757	            0x750a	                           jne 0x4001763	       443	security.c	FUNCTION_43	CALL_1
0x4001759	            0xeb1b	                           jmp 0x4001776	       443	security.c	FUNCTION_43	CALL_1
0x400175b	          0x488b1b	                    mov rbx, qword [rbx]	       443	security.c	FUNCTION_43	CALL_1
0x400175e	          0x4885db	                           test rbx, rbx	       443	security.c	FUNCTION_43	CALL_1
0x4001761	            0x7413	                            je 0x4001776	       443	security.c	FUNCTION_43	CALL_1
0x4001763	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       443	security.c	FUNCTION_43	CALL_1
0x4001767	          0x4889ef	                            mov rdi, rbp	       443	security.c	FUNCTION_43	CALL_1
0x400176a	      0xe800000000	                          call 0x400176f	       443	security.c	FUNCTION_43	CALL_1
0x400176f	            0x85c0	                           test eax, eax	       443	security.c	FUNCTION_43	CALL_1
0x4001771	            0x74e8	                            je 0x400175b	       443	security.c	FUNCTION_43	CALL_1
0x4001773	              0x5b	                                 pop rbx	       444	security.c	FUNCTION_43
0x4001774	              0x5d	                                 pop rbp	       444	security.c	FUNCTION_43
0x4001775	              0xc3	                                     ret	       444	security.c	FUNCTION_43
0x4001776	            0x31c0	                            xor eax, eax	       441	security.c	FUNCTION_43
0x4001778	              0x5b	                                 pop rbx	       444	security.c	FUNCTION_43
0x4001779	              0x5d	                                 pop rbp	       444	security.c	FUNCTION_43
0x400177a	              0xc3	                                     ret	       444	security.c	FUNCTION_43
security_task_setrlimit	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x4002800	            0x4155	                                push r13	      1110	security.c	FUNCTION_121
0x4002802	            0x4154	                                push r12	      1110	security.c	FUNCTION_121
0x4002804	              0x55	                                push rbp	      1110	security.c	FUNCTION_121
0x4002805	              0x53	                                push rbx	      1110	security.c	FUNCTION_121
0x4002806	    0x488b1d000000	            mov rbx, qword [0x0400280d] 	      1111	security.c	FUNCTION_121	CALL_1
0x400280d	          0x4885db	                           test rbx, rbx	      1111	security.c	FUNCTION_121	CALL_1
0x4002810	            0x7430	                            je 0x4002842	      1111	security.c	FUNCTION_121	CALL_1
0x4002812	          0x4989fd	                            mov r13, rdi	      1111	security.c	FUNCTION_121	CALL_1
0x4002815	          0x4189f4	                           mov r12d, esi	      1111	security.c	FUNCTION_121	CALL_1
0x4002818	          0x4889d5	                            mov rbp, rdx	      1111	security.c	FUNCTION_121	CALL_1
0x400281b	            0xeb08	                           jmp 0x4002825	      1111	security.c	FUNCTION_121	CALL_1
0x400281d	          0x488b1b	                    mov rbx, qword [rbx]	      1111	security.c	FUNCTION_121	CALL_1
0x4002820	          0x4885db	                           test rbx, rbx	      1111	security.c	FUNCTION_121	CALL_1
0x4002823	            0x741d	                            je 0x4002842	      1111	security.c	FUNCTION_121	CALL_1
0x4002825	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1111	security.c	FUNCTION_121	CALL_1
0x4002829	          0x4889ea	                            mov rdx, rbp	      1111	security.c	FUNCTION_121	CALL_1
0x400282c	          0x4489e6	                           mov esi, r12d	      1111	security.c	FUNCTION_121	CALL_1
0x400282f	          0x4c89ef	                            mov rdi, r13	      1111	security.c	FUNCTION_121	CALL_1
0x4002832	      0xe800000000	                          call 0x4002837	      1111	security.c	FUNCTION_121	CALL_1
0x4002837	            0x85c0	                           test eax, eax	      1111	security.c	FUNCTION_121	CALL_1
0x4002839	            0x74e2	                            je 0x400281d	      1111	security.c	FUNCTION_121	CALL_1
0x400283b	              0x5b	                                 pop rbx	      1112	security.c	FUNCTION_121
0x400283c	              0x5d	                                 pop rbp	      1112	security.c	FUNCTION_121
0x400283d	            0x415c	                                 pop r12	      1112	security.c	FUNCTION_121
0x400283f	            0x415d	                                 pop r13	      1112	security.c	FUNCTION_121
0x4002841	              0xc3	                                     ret	      1112	security.c	FUNCTION_121
0x4002842	              0x5b	                                 pop rbx	      1112	security.c	FUNCTION_121
0x4002843	            0x31c0	                            xor eax, eax	      1110	security.c	FUNCTION_121
0x4002845	              0x5d	                                 pop rbp	      1112	security.c	FUNCTION_121
0x4002846	            0x415c	                                 pop r12	      1112	security.c	FUNCTION_121
0x4002848	            0x415d	                                 pop r13	      1112	security.c	FUNCTION_121
0x400284a	              0xc3	                                     ret	      1112	security.c	FUNCTION_121
security_sk_alloc	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x4003490	            0x4155	                                push r13	      1438	security.c	FUNCTION_178
0x4003492	            0x4154	                                push r12	      1438	security.c	FUNCTION_178
0x4003494	              0x55	                                push rbp	      1438	security.c	FUNCTION_178
0x4003495	              0x53	                                push rbx	      1438	security.c	FUNCTION_178
0x4003496	    0x488b1d000000	            mov rbx, qword [0x0400349d] 	      1439	security.c	FUNCTION_178	CALL_1
0x400349d	          0x4885db	                           test rbx, rbx	      1439	security.c	FUNCTION_178	CALL_1
0x40034a0	            0x742e	                            je 0x40034d0	      1439	security.c	FUNCTION_178	CALL_1
0x40034a2	          0x4989fd	                            mov r13, rdi	      1439	security.c	FUNCTION_178	CALL_1
0x40034a5	          0x4189f4	                           mov r12d, esi	      1439	security.c	FUNCTION_178	CALL_1
0x40034a8	            0x89d5	                            mov ebp, edx	      1439	security.c	FUNCTION_178	CALL_1
0x40034aa	            0xeb08	                           jmp 0x40034b4	      1439	security.c	FUNCTION_178	CALL_1
0x40034ac	          0x488b1b	                    mov rbx, qword [rbx]	      1439	security.c	FUNCTION_178	CALL_1
0x40034af	          0x4885db	                           test rbx, rbx	      1439	security.c	FUNCTION_178	CALL_1
0x40034b2	            0x741c	                            je 0x40034d0	      1439	security.c	FUNCTION_178	CALL_1
0x40034b4	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1439	security.c	FUNCTION_178	CALL_1
0x40034b8	            0x89ea	                            mov edx, ebp	      1439	security.c	FUNCTION_178	CALL_1
0x40034ba	          0x4489e6	                           mov esi, r12d	      1439	security.c	FUNCTION_178	CALL_1
0x40034bd	          0x4c89ef	                            mov rdi, r13	      1439	security.c	FUNCTION_178	CALL_1
0x40034c0	      0xe800000000	                          call 0x40034c5	      1439	security.c	FUNCTION_178	CALL_1
0x40034c5	            0x85c0	                           test eax, eax	      1439	security.c	FUNCTION_178	CALL_1
0x40034c7	            0x74e3	                            je 0x40034ac	      1439	security.c	FUNCTION_178	CALL_1
0x40034c9	              0x5b	                                 pop rbx	      1440	security.c	FUNCTION_178
0x40034ca	              0x5d	                                 pop rbp	      1440	security.c	FUNCTION_178
0x40034cb	            0x415c	                                 pop r12	      1440	security.c	FUNCTION_178
0x40034cd	            0x415d	                                 pop r13	      1440	security.c	FUNCTION_178
0x40034cf	              0xc3	                                     ret	      1440	security.c	FUNCTION_178
0x40034d0	              0x5b	                                 pop rbx	      1440	security.c	FUNCTION_178
0x40034d1	            0x31c0	                            xor eax, eax	      1438	security.c	FUNCTION_178
0x40034d3	              0x5d	                                 pop rbp	      1440	security.c	FUNCTION_178
0x40034d4	            0x415c	                                 pop r12	      1440	security.c	FUNCTION_178
0x40034d6	            0x415d	                                 pop r13	      1440	security.c	FUNCTION_178
0x40034d8	              0xc3	                                     ret	      1440	security.c	FUNCTION_178
security_file_ioctl	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x4002010	            0x4155	                                push r13	       888	security.c	FUNCTION_89
0x4002012	            0x4154	                                push r12	       888	security.c	FUNCTION_89
0x4002014	              0x55	                                push rbp	       888	security.c	FUNCTION_89
0x4002015	              0x53	                                push rbx	       888	security.c	FUNCTION_89
0x4002016	    0x488b1d000000	            mov rbx, qword [0x0400201d] 	       889	security.c	FUNCTION_89	CALL_1
0x400201d	          0x4885db	                           test rbx, rbx	       889	security.c	FUNCTION_89	CALL_1
0x4002020	            0x7430	                            je 0x4002052	       889	security.c	FUNCTION_89	CALL_1
0x4002022	          0x4989fd	                            mov r13, rdi	       889	security.c	FUNCTION_89	CALL_1
0x4002025	          0x4189f4	                           mov r12d, esi	       889	security.c	FUNCTION_89	CALL_1
0x4002028	          0x4889d5	                            mov rbp, rdx	       889	security.c	FUNCTION_89	CALL_1
0x400202b	            0xeb08	                           jmp 0x4002035	       889	security.c	FUNCTION_89	CALL_1
0x400202d	          0x488b1b	                    mov rbx, qword [rbx]	       889	security.c	FUNCTION_89	CALL_1
0x4002030	          0x4885db	                           test rbx, rbx	       889	security.c	FUNCTION_89	CALL_1
0x4002033	            0x741d	                            je 0x4002052	       889	security.c	FUNCTION_89	CALL_1
0x4002035	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       889	security.c	FUNCTION_89	CALL_1
0x4002039	          0x4889ea	                            mov rdx, rbp	       889	security.c	FUNCTION_89	CALL_1
0x400203c	          0x4489e6	                           mov esi, r12d	       889	security.c	FUNCTION_89	CALL_1
0x400203f	          0x4c89ef	                            mov rdi, r13	       889	security.c	FUNCTION_89	CALL_1
0x4002042	      0xe800000000	                          call 0x4002047	       889	security.c	FUNCTION_89	CALL_1
0x4002047	            0x85c0	                           test eax, eax	       889	security.c	FUNCTION_89	CALL_1
0x4002049	            0x74e2	                            je 0x400202d	       889	security.c	FUNCTION_89	CALL_1
0x400204b	              0x5b	                                 pop rbx	       890	security.c	FUNCTION_89
0x400204c	              0x5d	                                 pop rbp	       890	security.c	FUNCTION_89
0x400204d	            0x415c	                                 pop r12	       890	security.c	FUNCTION_89
0x400204f	            0x415d	                                 pop r13	       890	security.c	FUNCTION_89
0x4002051	              0xc3	                                     ret	       890	security.c	FUNCTION_89
0x4002052	              0x5b	                                 pop rbx	       890	security.c	FUNCTION_89
0x4002053	            0x31c0	                            xor eax, eax	       888	security.c	FUNCTION_89
0x4002055	              0x5d	                                 pop rbp	       890	security.c	FUNCTION_89
0x4002056	            0x415c	                                 pop r12	       890	security.c	FUNCTION_89
0x4002058	            0x415d	                                 pop r13	       890	security.c	FUNCTION_89
0x400205a	              0xc3	                                     ret	       890	security.c	FUNCTION_89
security_key_alloc	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x4003550	            0x4155	                                push r13	      1695	security.c	FUNCTION_215
0x4003552	            0x4154	                                push r12	      1695	security.c	FUNCTION_215
0x4003554	              0x55	                                push rbp	      1695	security.c	FUNCTION_215
0x4003555	              0x53	                                push rbx	      1695	security.c	FUNCTION_215
0x4003556	    0x488b1d000000	            mov rbx, qword [0x0400355d] 	      1696	security.c	FUNCTION_215	CALL_1
0x400355d	          0x4885db	                           test rbx, rbx	      1696	security.c	FUNCTION_215	CALL_1
0x4003560	            0x7430	                            je 0x4003592	      1696	security.c	FUNCTION_215	CALL_1
0x4003562	          0x4989fd	                            mov r13, rdi	      1696	security.c	FUNCTION_215	CALL_1
0x4003565	          0x4989f4	                            mov r12, rsi	      1696	security.c	FUNCTION_215	CALL_1
0x4003568	          0x4889d5	                            mov rbp, rdx	      1696	security.c	FUNCTION_215	CALL_1
0x400356b	            0xeb08	                           jmp 0x4003575	      1696	security.c	FUNCTION_215	CALL_1
0x400356d	          0x488b1b	                    mov rbx, qword [rbx]	      1696	security.c	FUNCTION_215	CALL_1
0x4003570	          0x4885db	                           test rbx, rbx	      1696	security.c	FUNCTION_215	CALL_1
0x4003573	            0x741d	                            je 0x4003592	      1696	security.c	FUNCTION_215	CALL_1
0x4003575	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1696	security.c	FUNCTION_215	CALL_1
0x4003579	          0x4889ea	                            mov rdx, rbp	      1696	security.c	FUNCTION_215	CALL_1
0x400357c	          0x4c89e6	                            mov rsi, r12	      1696	security.c	FUNCTION_215	CALL_1
0x400357f	          0x4c89ef	                            mov rdi, r13	      1696	security.c	FUNCTION_215	CALL_1
0x4003582	      0xe800000000	                          call 0x4003587	      1696	security.c	FUNCTION_215	CALL_1
0x4003587	            0x85c0	                           test eax, eax	      1696	security.c	FUNCTION_215	CALL_1
0x4003589	            0x74e2	                            je 0x400356d	      1696	security.c	FUNCTION_215	CALL_1
0x400358b	              0x5b	                                 pop rbx	      1697	security.c	FUNCTION_215
0x400358c	              0x5d	                                 pop rbp	      1697	security.c	FUNCTION_215
0x400358d	            0x415c	                                 pop r12	      1697	security.c	FUNCTION_215
0x400358f	            0x415d	                                 pop r13	      1697	security.c	FUNCTION_215
0x4003591	              0xc3	                                     ret	      1697	security.c	FUNCTION_215
0x4003592	              0x5b	                                 pop rbx	      1697	security.c	FUNCTION_215
0x4003593	            0x31c0	                            xor eax, eax	      1695	security.c	FUNCTION_215
0x4003595	              0x5d	                                 pop rbp	      1697	security.c	FUNCTION_215
0x4003596	            0x415c	                                 pop r12	      1697	security.c	FUNCTION_215
0x4003598	            0x415d	                                 pop r13	      1697	security.c	FUNCTION_215
0x400359a	              0xc3	                                     ret	      1697	security.c	FUNCTION_215
security_socket_getpeersec_dgram	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4000710	            0x4155	                                push r13	      1431	security.c	FUNCTION_177
0x4000712	            0x4154	                                push r12	      1431	security.c	FUNCTION_177
0x4000714	      0xb8a4ffffff	                     mov eax, 0xffffffa4	      1431	security.c	FUNCTION_177
0x4000719	              0x55	                                push rbp	      1431	security.c	FUNCTION_177
0x400071a	              0x53	                                push rbx	      1431	security.c	FUNCTION_177
0x400071b	    0x488b1d000000	            mov rbx, qword [0x04000722] 	      1432	security.c	FUNCTION_177	CALL_1
0x4000722	          0x4885db	                           test rbx, rbx	      1432	security.c	FUNCTION_177	CALL_1
0x4000725	            0x7429	                            je 0x4000750	      1432	security.c	FUNCTION_177	CALL_1
0x4000727	          0x4989fd	                            mov r13, rdi	      1432	security.c	FUNCTION_177	CALL_1
0x400072a	          0x4989f4	                            mov r12, rsi	      1432	security.c	FUNCTION_177	CALL_1
0x400072d	          0x4889d5	                            mov rbp, rdx	      1432	security.c	FUNCTION_177	CALL_1
0x4000730	            0xeb08	                           jmp 0x400073a	      1432	security.c	FUNCTION_177	CALL_1
0x4000732	          0x488b1b	                    mov rbx, qword [rbx]	      1432	security.c	FUNCTION_177	CALL_1
0x4000735	          0x4885db	                           test rbx, rbx	      1432	security.c	FUNCTION_177	CALL_1
0x4000738	            0x7416	                            je 0x4000750	      1432	security.c	FUNCTION_177	CALL_1
0x400073a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1432	security.c	FUNCTION_177	CALL_1
0x400073e	          0x4889ea	                            mov rdx, rbp	      1432	security.c	FUNCTION_177	CALL_1
0x4000741	          0x4c89e6	                            mov rsi, r12	      1432	security.c	FUNCTION_177	CALL_1
0x4000744	          0x4c89ef	                            mov rdi, r13	      1432	security.c	FUNCTION_177	CALL_1
0x4000747	      0xe800000000	                          call 0x400074c	      1432	security.c	FUNCTION_177	CALL_1
0x400074c	            0x85c0	                           test eax, eax	      1432	security.c	FUNCTION_177	CALL_1
0x400074e	            0x74e2	                            je 0x4000732	      1432	security.c	FUNCTION_177	CALL_1
0x4000750	              0x5b	                                 pop rbx	      1434	security.c	FUNCTION_177
0x4000751	              0x5d	                                 pop rbp	      1434	security.c	FUNCTION_177
0x4000752	            0x415c	                                 pop r12	      1434	security.c	FUNCTION_177
0x4000754	            0x415d	                                 pop r13	      1434	security.c	FUNCTION_177
0x4000756	              0xc3	                                     ret	      1434	security.c	FUNCTION_177
security_msg_msg_free	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	15
0x4002af0	              0x55	                                push rbp	      1175	security.c	FUNCTION_131
0x4002af1	              0x53	                                push rbx	      1175	security.c	FUNCTION_131
0x4002af2	    0x488b1d000000	            mov rbx, qword [0x04002af9] 	      1176	security.c	FUNCTION_131	CALL_1
0x4002af9	          0x4885db	                           test rbx, rbx	      1176	security.c	FUNCTION_131	CALL_1
0x4002afc	            0x7417	                            je 0x4002b15	      1176	security.c	FUNCTION_131	CALL_1
0x4002afe	          0x4889fd	                            mov rbp, rdi	      1176	security.c	FUNCTION_131	CALL_1
0x4002b01	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1176	security.c	FUNCTION_131	CALL_1
0x4002b05	          0x4889ef	                            mov rdi, rbp	      1176	security.c	FUNCTION_131	CALL_1
0x4002b08	      0xe800000000	                          call 0x4002b0d	      1176	security.c	FUNCTION_131	CALL_1
0x4002b0d	          0x488b1b	                    mov rbx, qword [rbx]	      1176	security.c	FUNCTION_131	CALL_1
0x4002b10	          0x4885db	                           test rbx, rbx	      1176	security.c	FUNCTION_131	CALL_1
0x4002b13	            0x75ec	                           jne 0x4002b01	      1176	security.c	FUNCTION_131	CALL_1
0x4002b15	              0x5b	                                 pop rbx	      1177	security.c	FUNCTION_131
0x4002b16	              0x5d	                                 pop rbp	      1177	security.c	FUNCTION_131
0x4002b17	              0xc3	                                     ret	      1177	security.c	FUNCTION_131
security_file_alloc	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x4001fa0	              0x55	                                push rbp	       878	security.c	FUNCTION_87
0x4001fa1	              0x53	                                push rbx	       878	security.c	FUNCTION_87
0x4001fa2	          0x4889fd	                            mov rbp, rdi	       878	security.c	FUNCTION_87
0x4001fa5	    0x488b1d000000	            mov rbx, qword [0x04001fac] 	       879	security.c	FUNCTION_87	CALL_1
0x4001fac	          0x4885db	                           test rbx, rbx	       879	security.c	FUNCTION_87	CALL_1
0x4001faf	            0x750a	                           jne 0x4001fbb	       879	security.c	FUNCTION_87	CALL_1
0x4001fb1	            0xeb1b	                           jmp 0x4001fce	       879	security.c	FUNCTION_87	CALL_1
0x4001fb3	          0x488b1b	                    mov rbx, qword [rbx]	       879	security.c	FUNCTION_87	CALL_1
0x4001fb6	          0x4885db	                           test rbx, rbx	       879	security.c	FUNCTION_87	CALL_1
0x4001fb9	            0x7413	                            je 0x4001fce	       879	security.c	FUNCTION_87	CALL_1
0x4001fbb	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       879	security.c	FUNCTION_87	CALL_1
0x4001fbf	          0x4889ef	                            mov rdi, rbp	       879	security.c	FUNCTION_87	CALL_1
0x4001fc2	      0xe800000000	                          call 0x4001fc7	       879	security.c	FUNCTION_87	CALL_1
0x4001fc7	            0x85c0	                           test eax, eax	       879	security.c	FUNCTION_87	CALL_1
0x4001fc9	            0x74e8	                            je 0x4001fb3	       879	security.c	FUNCTION_87	CALL_1
0x4001fcb	              0x5b	                                 pop rbx	       880	security.c	FUNCTION_87
0x4001fcc	              0x5d	                                 pop rbp	       880	security.c	FUNCTION_87
0x4001fcd	              0xc3	                                     ret	       880	security.c	FUNCTION_87
0x4001fce	            0x31c0	                            xor eax, eax	       878	security.c	FUNCTION_87
0x4001fd0	              0x5b	                                 pop rbx	       880	security.c	FUNCTION_87
0x4001fd1	              0x5d	                                 pop rbp	       880	security.c	FUNCTION_87
0x4001fd2	              0xc3	                                     ret	       880	security.c	FUNCTION_87
security_task_prctl	IF,0:SWITCH,0:functions,1:CALL,0:FOR,0:WHILE,0:DO,0:ELSE,0	42
0x4002970	            0x4157	                                push r15	      1137	security.c	FUNCTION_126
0x4002972	            0x4156	                                push r14	      1137	security.c	FUNCTION_126
0x4002974	    0x41bfdaffffff	                    mov r15d, 0xffffffda	      1137	security.c	FUNCTION_126
0x400297a	            0x4155	                                push r13	      1137	security.c	FUNCTION_126
0x400297c	            0x4154	                                push r12	      1137	security.c	FUNCTION_126
0x400297e	              0x55	                                push rbp	      1137	security.c	FUNCTION_126
0x400297f	              0x53	                                push rbx	      1137	security.c	FUNCTION_126
0x4002980	        0x4883ec08	                              sub rsp, 8	      1137	security.c	FUNCTION_126
0x4002984	    0x488b1d000000	            mov rbx, qword [0x0400298b] 	      1142	security.c	FUNCTION_126	FUNCTION_1
0x400298b	        0x4c890424	                     mov qword [rsp], r8	      1137	security.c	FUNCTION_126
0x400298f	          0x4885db	                           test rbx, rbx	      1142	security.c	FUNCTION_126	FUNCTION_1
0x4002992	            0x7439	                            je 0x40029cd	      1142	security.c	FUNCTION_126	FUNCTION_1
0x4002994	          0x4189fe	                           mov r14d, edi	      1142	security.c	FUNCTION_126	FUNCTION_1
0x4002997	          0x4989f5	                            mov r13, rsi	      1142	security.c	FUNCTION_126	FUNCTION_1
0x400299a	          0x4989d4	                            mov r12, rdx	      1142	security.c	FUNCTION_126	FUNCTION_1
0x400299d	          0x4889cd	                            mov rbp, rcx	      1142	security.c	FUNCTION_126	FUNCTION_1
0x40029a0	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1143	security.c	FUNCTION_126	FUNCTION_1	CALL_1
0x40029a4	        0x4c8b0424	                     mov r8, qword [rsp]	      1143	security.c	FUNCTION_126	FUNCTION_1	CALL_1
0x40029a8	          0x4889e9	                            mov rcx, rbp	      1143	security.c	FUNCTION_126	FUNCTION_1	CALL_1
0x40029ab	          0x4c89e2	                            mov rdx, r12	      1143	security.c	FUNCTION_126	FUNCTION_1	CALL_1
0x40029ae	          0x4c89ee	                            mov rsi, r13	      1143	security.c	FUNCTION_126	FUNCTION_1	CALL_1
0x40029b1	          0x4489f7	                           mov edi, r14d	      1143	security.c	FUNCTION_126	FUNCTION_1	CALL_1
0x40029b4	      0xe800000000	                          call 0x40029b9	      1143	security.c	FUNCTION_126	FUNCTION_1	CALL_1
0x40029b9	          0x83f8da	             cmp eax, 0xffffffffffffffda	      1144	security.c	FUNCTION_126	FUNCTION_1	IF_1
0x40029bc	            0x7407	                            je 0x40029c5	      1144	security.c	FUNCTION_126	FUNCTION_1	IF_1
0x40029be	            0x85c0	                           test eax, eax	      1146	security.c	FUNCTION_126	FUNCTION_1	IF_1	IF_2
0x40029c0	            0x751d	                           jne 0x40029df	      1146	security.c	FUNCTION_126	FUNCTION_1	IF_1	IF_2
0x40029c2	          0x4531ff	                          xor r15d, r15d	      1146	security.c	FUNCTION_126	FUNCTION_1	IF_1	IF_2
0x40029c5	          0x488b1b	                    mov rbx, qword [rbx]	      1142	security.c	FUNCTION_126	FUNCTION_1
0x40029c8	          0x4885db	                           test rbx, rbx	      1142	security.c	FUNCTION_126	FUNCTION_1
0x40029cb	            0x75d3	                           jne 0x40029a0	      1142	security.c	FUNCTION_126	FUNCTION_1
0x40029cd	        0x4883c408	                              add rsp, 8	      1151	security.c	FUNCTION_126
0x40029d1	          0x4489f8	                           mov eax, r15d	      1151	security.c	FUNCTION_126
0x40029d4	              0x5b	                                 pop rbx	      1151	security.c	FUNCTION_126
0x40029d5	              0x5d	                                 pop rbp	      1151	security.c	FUNCTION_126
0x40029d6	            0x415c	                                 pop r12	      1151	security.c	FUNCTION_126
0x40029d8	            0x415d	                                 pop r13	      1151	security.c	FUNCTION_126
0x40029da	            0x415e	                                 pop r14	      1151	security.c	FUNCTION_126
0x40029dc	            0x415f	                                 pop r15	      1151	security.c	FUNCTION_126
0x40029de	              0xc3	                                     ret	      1151	security.c	FUNCTION_126
0x40029df	          0x4189c7	                           mov r15d, eax	      1143	security.c	FUNCTION_126	FUNCTION_1	CALL_1
0x40029e2	            0xebe9	                           jmp 0x40029cd	      1143	security.c	FUNCTION_126	FUNCTION_1	CALL_1
security_kernel_create_files_as	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4002560	            0x4154	                                push r12	      1027	security.c	FUNCTION_108
0x4002562	              0x55	                                push rbp	      1027	security.c	FUNCTION_108
0x4002563	          0x4989fc	                            mov r12, rdi	      1027	security.c	FUNCTION_108
0x4002566	              0x53	                                push rbx	      1027	security.c	FUNCTION_108
0x4002567	    0x488b1d000000	            mov rbx, qword [0x0400256e] 	      1028	security.c	FUNCTION_108	CALL_1
0x400256e	          0x4889f5	                            mov rbp, rsi	      1028	security.c	FUNCTION_108	CALL_1
0x4002571	          0x4885db	                           test rbx, rbx	      1028	security.c	FUNCTION_108	CALL_1
0x4002574	            0x750a	                           jne 0x4002580	      1028	security.c	FUNCTION_108	CALL_1
0x4002576	            0xeb20	                           jmp 0x4002598	      1028	security.c	FUNCTION_108	CALL_1
0x4002578	          0x488b1b	                    mov rbx, qword [rbx]	      1028	security.c	FUNCTION_108	CALL_1
0x400257b	          0x4885db	                           test rbx, rbx	      1028	security.c	FUNCTION_108	CALL_1
0x400257e	            0x7418	                            je 0x4002598	      1028	security.c	FUNCTION_108	CALL_1
0x4002580	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1028	security.c	FUNCTION_108	CALL_1
0x4002584	          0x4889ee	                            mov rsi, rbp	      1028	security.c	FUNCTION_108	CALL_1
0x4002587	          0x4c89e7	                            mov rdi, r12	      1028	security.c	FUNCTION_108	CALL_1
0x400258a	      0xe800000000	                          call 0x400258f	      1028	security.c	FUNCTION_108	CALL_1
0x400258f	            0x85c0	                           test eax, eax	      1028	security.c	FUNCTION_108	CALL_1
0x4002591	            0x74e5	                            je 0x4002578	      1028	security.c	FUNCTION_108	CALL_1
0x4002593	              0x5b	                                 pop rbx	      1029	security.c	FUNCTION_108
0x4002594	              0x5d	                                 pop rbp	      1029	security.c	FUNCTION_108
0x4002595	            0x415c	                                 pop r12	      1029	security.c	FUNCTION_108
0x4002597	              0xc3	                                     ret	      1029	security.c	FUNCTION_108
0x4002598	              0x5b	                                 pop rbx	      1029	security.c	FUNCTION_108
0x4002599	            0x31c0	                            xor eax, eax	      1027	security.c	FUNCTION_108
0x400259b	              0x5d	                                 pop rbp	      1029	security.c	FUNCTION_108
0x400259c	            0x415c	                                 pop r12	      1029	security.c	FUNCTION_108
0x400259e	              0xc3	                                     ret	      1029	security.c	FUNCTION_108
security_inode_copy_up_xattr	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	19
0x40002a0	              0x55	                                push rbp	       861	security.c	FUNCTION_85
0x40002a1	              0x53	                                push rbx	       861	security.c	FUNCTION_85
0x40002a2	      0xb8a1ffffff	                     mov eax, 0xffffffa1	       861	security.c	FUNCTION_85
0x40002a7	    0x488b1d000000	            mov rbx, qword [0x040002ae] 	       862	security.c	FUNCTION_85	CALL_1
0x40002ae	          0x4885db	                           test rbx, rbx	       862	security.c	FUNCTION_85	CALL_1
0x40002b1	            0x741d	                            je 0x40002d0	       862	security.c	FUNCTION_85	CALL_1
0x40002b3	          0x4889fd	                            mov rbp, rdi	       862	security.c	FUNCTION_85	CALL_1
0x40002b6	            0xeb08	                           jmp 0x40002c0	       862	security.c	FUNCTION_85	CALL_1
0x40002b8	          0x488b1b	                    mov rbx, qword [rbx]	       862	security.c	FUNCTION_85	CALL_1
0x40002bb	          0x4885db	                           test rbx, rbx	       862	security.c	FUNCTION_85	CALL_1
0x40002be	            0x7410	                            je 0x40002d0	       862	security.c	FUNCTION_85	CALL_1
0x40002c0	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       862	security.c	FUNCTION_85	CALL_1
0x40002c4	          0x4889ef	                            mov rdi, rbp	       862	security.c	FUNCTION_85	CALL_1
0x40002c7	      0xe800000000	                          call 0x40002cc	       862	security.c	FUNCTION_85	CALL_1
0x40002cc	            0x85c0	                           test eax, eax	       862	security.c	FUNCTION_85	CALL_1
0x40002ce	            0x74e8	                            je 0x40002b8	       862	security.c	FUNCTION_85	CALL_1
0x40002d0	              0x5b	                                 pop rbx	       863	security.c	FUNCTION_85
0x40002d1	              0x5d	                                 pop rbp	       863	security.c	FUNCTION_85
0x40002d2	              0xc3	                                     ret	       863	security.c	FUNCTION_85
security_cred_free	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	15
0x4002460	              0x55	                                push rbp	      1000	security.c	FUNCTION_103
0x4002461	              0x53	                                push rbx	      1000	security.c	FUNCTION_103
0x4002462	    0x488b1d000000	            mov rbx, qword [0x04002469] 	      1001	security.c	FUNCTION_103	CALL_1
0x4002469	          0x4885db	                           test rbx, rbx	      1001	security.c	FUNCTION_103	CALL_1
0x400246c	            0x7417	                            je 0x4002485	      1001	security.c	FUNCTION_103	CALL_1
0x400246e	          0x4889fd	                            mov rbp, rdi	      1001	security.c	FUNCTION_103	CALL_1
0x4002471	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1001	security.c	FUNCTION_103	CALL_1
0x4002475	          0x4889ef	                            mov rdi, rbp	      1001	security.c	FUNCTION_103	CALL_1
0x4002478	      0xe800000000	                          call 0x400247d	      1001	security.c	FUNCTION_103	CALL_1
0x400247d	          0x488b1b	                    mov rbx, qword [rbx]	      1001	security.c	FUNCTION_103	CALL_1
0x4002480	          0x4885db	                           test rbx, rbx	      1001	security.c	FUNCTION_103	CALL_1
0x4002483	            0x75ec	                           jne 0x4002471	      1001	security.c	FUNCTION_103	CALL_1
0x4002485	              0x5b	                                 pop rbx	      1002	security.c	FUNCTION_103
0x4002486	              0x5d	                                 pop rbp	      1002	security.c	FUNCTION_103
0x4002487	              0xc3	                                     ret	      1002	security.c	FUNCTION_103
security_capget	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	37
0x4001100	            0x4156	                                push r14	       267	security.c	FUNCTION_17
0x4001102	            0x4155	                                push r13	       267	security.c	FUNCTION_17
0x4001104	            0x4154	                                push r12	       267	security.c	FUNCTION_17
0x4001106	              0x55	                                push rbp	       267	security.c	FUNCTION_17
0x4001107	              0x53	                                push rbx	       267	security.c	FUNCTION_17
0x4001108	    0x488b1d000000	            mov rbx, qword [0x0400110f] 	       268	security.c	FUNCTION_17	CALL_1
0x400110f	          0x4885db	                           test rbx, rbx	       268	security.c	FUNCTION_17	CALL_1
0x4001112	            0x7438	                            je 0x400114c	       268	security.c	FUNCTION_17	CALL_1
0x4001114	          0x4989fe	                            mov r14, rdi	       268	security.c	FUNCTION_17	CALL_1
0x4001117	          0x4989f5	                            mov r13, rsi	       268	security.c	FUNCTION_17	CALL_1
0x400111a	          0x4989d4	                            mov r12, rdx	       268	security.c	FUNCTION_17	CALL_1
0x400111d	          0x4889cd	                            mov rbp, rcx	       268	security.c	FUNCTION_17	CALL_1
0x4001120	            0xeb08	                           jmp 0x400112a	       268	security.c	FUNCTION_17	CALL_1
0x4001122	          0x488b1b	                    mov rbx, qword [rbx]	       268	security.c	FUNCTION_17	CALL_1
0x4001125	          0x4885db	                           test rbx, rbx	       268	security.c	FUNCTION_17	CALL_1
0x4001128	            0x7422	                            je 0x400114c	       268	security.c	FUNCTION_17	CALL_1
0x400112a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       268	security.c	FUNCTION_17	CALL_1
0x400112e	          0x4889e9	                            mov rcx, rbp	       268	security.c	FUNCTION_17	CALL_1
0x4001131	          0x4c89e2	                            mov rdx, r12	       268	security.c	FUNCTION_17	CALL_1
0x4001134	          0x4c89ee	                            mov rsi, r13	       268	security.c	FUNCTION_17	CALL_1
0x4001137	          0x4c89f7	                            mov rdi, r14	       268	security.c	FUNCTION_17	CALL_1
0x400113a	      0xe800000000	                          call 0x400113f	       268	security.c	FUNCTION_17	CALL_1
0x400113f	            0x85c0	                           test eax, eax	       268	security.c	FUNCTION_17	CALL_1
0x4001141	            0x74df	                            je 0x4001122	       268	security.c	FUNCTION_17	CALL_1
0x4001143	              0x5b	                                 pop rbx	       270	security.c	FUNCTION_17
0x4001144	              0x5d	                                 pop rbp	       270	security.c	FUNCTION_17
0x4001145	            0x415c	                                 pop r12	       270	security.c	FUNCTION_17
0x4001147	            0x415d	                                 pop r13	       270	security.c	FUNCTION_17
0x4001149	            0x415e	                                 pop r14	       270	security.c	FUNCTION_17
0x400114b	              0xc3	                                     ret	       270	security.c	FUNCTION_17
0x400114c	              0x5b	                                 pop rbx	       270	security.c	FUNCTION_17
0x400114d	            0x31c0	                            xor eax, eax	       267	security.c	FUNCTION_17
0x400114f	              0x5d	                                 pop rbp	       270	security.c	FUNCTION_17
0x4001150	            0x415c	                                 pop r12	       270	security.c	FUNCTION_17
0x4001152	            0x415d	                                 pop r13	       270	security.c	FUNCTION_17
0x4001154	            0x415e	                                 pop r14	       270	security.c	FUNCTION_17
0x4001156	              0xc3	                                     ret	       270	security.c	FUNCTION_17
security_task_getpgid	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x4002670	              0x55	                                push rbp	      1071	security.c	FUNCTION_114
0x4002671	              0x53	                                push rbx	      1071	security.c	FUNCTION_114
0x4002672	          0x4889fd	                            mov rbp, rdi	      1071	security.c	FUNCTION_114
0x4002675	    0x488b1d000000	            mov rbx, qword [0x0400267c] 	      1072	security.c	FUNCTION_114	CALL_1
0x400267c	          0x4885db	                           test rbx, rbx	      1072	security.c	FUNCTION_114	CALL_1
0x400267f	            0x750a	                           jne 0x400268b	      1072	security.c	FUNCTION_114	CALL_1
0x4002681	            0xeb1b	                           jmp 0x400269e	      1072	security.c	FUNCTION_114	CALL_1
0x4002683	          0x488b1b	                    mov rbx, qword [rbx]	      1072	security.c	FUNCTION_114	CALL_1
0x4002686	          0x4885db	                           test rbx, rbx	      1072	security.c	FUNCTION_114	CALL_1
0x4002689	            0x7413	                            je 0x400269e	      1072	security.c	FUNCTION_114	CALL_1
0x400268b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1072	security.c	FUNCTION_114	CALL_1
0x400268f	          0x4889ef	                            mov rdi, rbp	      1072	security.c	FUNCTION_114	CALL_1
0x4002692	      0xe800000000	                          call 0x4002697	      1072	security.c	FUNCTION_114	CALL_1
0x4002697	            0x85c0	                           test eax, eax	      1072	security.c	FUNCTION_114	CALL_1
0x4002699	            0x74e8	                            je 0x4002683	      1072	security.c	FUNCTION_114	CALL_1
0x400269b	              0x5b	                                 pop rbx	      1073	security.c	FUNCTION_114
0x400269c	              0x5d	                                 pop rbp	      1073	security.c	FUNCTION_114
0x400269d	              0xc3	                                     ret	      1073	security.c	FUNCTION_114
0x400269e	            0x31c0	                            xor eax, eax	      1071	security.c	FUNCTION_114
0x40026a0	              0x5b	                                 pop rbx	      1073	security.c	FUNCTION_114
0x40026a1	              0x5d	                                 pop rbp	      1073	security.c	FUNCTION_114
0x40026a2	              0xc3	                                     ret	      1073	security.c	FUNCTION_114
security_inode_getsecid	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	19
0x4001ec0	            0x4154	                                push r12	       850	security.c	FUNCTION_83
0x4001ec2	              0x55	                                push rbp	       850	security.c	FUNCTION_83
0x4001ec3	              0x53	                                push rbx	       850	security.c	FUNCTION_83
0x4001ec4	    0x488b1d000000	            mov rbx, qword [0x04001ecb] 	       851	security.c	FUNCTION_83	CALL_1
0x4001ecb	          0x4885db	                           test rbx, rbx	       851	security.c	FUNCTION_83	CALL_1
0x4001ece	            0x741d	                            je 0x4001eed	       851	security.c	FUNCTION_83	CALL_1
0x4001ed0	          0x4989fc	                            mov r12, rdi	       851	security.c	FUNCTION_83	CALL_1
0x4001ed3	          0x4889f5	                            mov rbp, rsi	       851	security.c	FUNCTION_83	CALL_1
0x4001ed6	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       851	security.c	FUNCTION_83	CALL_1
0x4001eda	          0x4889ee	                            mov rsi, rbp	       851	security.c	FUNCTION_83	CALL_1
0x4001edd	          0x4c89e7	                            mov rdi, r12	       851	security.c	FUNCTION_83	CALL_1
0x4001ee0	      0xe800000000	                          call 0x4001ee5	       851	security.c	FUNCTION_83	CALL_1
0x4001ee5	          0x488b1b	                    mov rbx, qword [rbx]	       851	security.c	FUNCTION_83	CALL_1
0x4001ee8	          0x4885db	                           test rbx, rbx	       851	security.c	FUNCTION_83	CALL_1
0x4001eeb	            0x75e9	                           jne 0x4001ed6	       851	security.c	FUNCTION_83	CALL_1
0x4001eed	              0x5b	                                 pop rbx	       852	security.c	FUNCTION_83
0x4001eee	              0x5d	                                 pop rbp	       852	security.c	FUNCTION_83
0x4001eef	            0x415c	                                 pop r12	       852	security.c	FUNCTION_83
0x4001ef1	              0xc3	                                     ret	       852	security.c	FUNCTION_83
security_getprocattr	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4002f60	            0x4155	                                push r13	      1271	security.c	FUNCTION_149
0x4002f62	            0x4154	                                push r12	      1271	security.c	FUNCTION_149
0x4002f64	      0xb8eaffffff	                     mov eax, 0xffffffea	      1271	security.c	FUNCTION_149
0x4002f69	              0x55	                                push rbp	      1271	security.c	FUNCTION_149
0x4002f6a	              0x53	                                push rbx	      1271	security.c	FUNCTION_149
0x4002f6b	    0x488b1d000000	            mov rbx, qword [0x04002f72] 	      1272	security.c	FUNCTION_149	CALL_1
0x4002f72	          0x4885db	                           test rbx, rbx	      1272	security.c	FUNCTION_149	CALL_1
0x4002f75	            0x7429	                            je 0x4002fa0	      1272	security.c	FUNCTION_149	CALL_1
0x4002f77	          0x4989fd	                            mov r13, rdi	      1272	security.c	FUNCTION_149	CALL_1
0x4002f7a	          0x4989f4	                            mov r12, rsi	      1272	security.c	FUNCTION_149	CALL_1
0x4002f7d	          0x4889d5	                            mov rbp, rdx	      1272	security.c	FUNCTION_149	CALL_1
0x4002f80	            0xeb08	                           jmp 0x4002f8a	      1272	security.c	FUNCTION_149	CALL_1
0x4002f82	          0x488b1b	                    mov rbx, qword [rbx]	      1272	security.c	FUNCTION_149	CALL_1
0x4002f85	          0x4885db	                           test rbx, rbx	      1272	security.c	FUNCTION_149	CALL_1
0x4002f88	            0x7416	                            je 0x4002fa0	      1272	security.c	FUNCTION_149	CALL_1
0x4002f8a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1272	security.c	FUNCTION_149	CALL_1
0x4002f8e	          0x4889ea	                            mov rdx, rbp	      1272	security.c	FUNCTION_149	CALL_1
0x4002f91	          0x4c89e6	                            mov rsi, r12	      1272	security.c	FUNCTION_149	CALL_1
0x4002f94	          0x4c89ef	                            mov rdi, r13	      1272	security.c	FUNCTION_149	CALL_1
0x4002f97	      0xe800000000	                          call 0x4002f9c	      1272	security.c	FUNCTION_149	CALL_1
0x4002f9c	            0x85c0	                           test eax, eax	      1272	security.c	FUNCTION_149	CALL_1
0x4002f9e	            0x74e2	                            je 0x4002f82	      1272	security.c	FUNCTION_149	CALL_1
0x4002fa0	              0x5b	                                 pop rbx	      1273	security.c	FUNCTION_149
0x4002fa1	              0x5d	                                 pop rbp	      1273	security.c	FUNCTION_149
0x4002fa2	            0x415c	                                 pop r12	      1273	security.c	FUNCTION_149
0x4002fa4	            0x415d	                                 pop r13	      1273	security.c	FUNCTION_149
0x4002fa6	              0xc3	                                     ret	      1273	security.c	FUNCTION_149
security_inode_invalidate_secctx	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	15
0x4000520	              0x55	                                push rbp	      1312	security.c	FUNCTION_156
0x4000521	              0x53	                                push rbx	      1312	security.c	FUNCTION_156
0x4000522	    0x488b1d000000	            mov rbx, qword [0x04000529] 	      1313	security.c	FUNCTION_156	CALL_1
0x4000529	          0x4885db	                           test rbx, rbx	      1313	security.c	FUNCTION_156	CALL_1
0x400052c	            0x7417	                            je 0x4000545	      1313	security.c	FUNCTION_156	CALL_1
0x400052e	          0x4889fd	                            mov rbp, rdi	      1313	security.c	FUNCTION_156	CALL_1
0x4000531	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1313	security.c	FUNCTION_156	CALL_1
0x4000535	          0x4889ef	                            mov rdi, rbp	      1313	security.c	FUNCTION_156	CALL_1
0x4000538	      0xe800000000	                          call 0x400053d	      1313	security.c	FUNCTION_156	CALL_1
0x400053d	          0x488b1b	                    mov rbx, qword [rbx]	      1313	security.c	FUNCTION_156	CALL_1
0x4000540	          0x4885db	                           test rbx, rbx	      1313	security.c	FUNCTION_156	CALL_1
0x4000543	            0x75ec	                           jne 0x4000531	      1313	security.c	FUNCTION_156	CALL_1
0x4000545	              0x5b	                                 pop rbx	      1314	security.c	FUNCTION_156
0x4000546	              0x5d	                                 pop rbp	      1314	security.c	FUNCTION_156
0x4000547	              0xc3	                                     ret	      1314	security.c	FUNCTION_156
security_sb_parse_opts_str	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4000150	            0x4154	                                push r12	       435	security.c	FUNCTION_42
0x4000152	              0x55	                                push rbp	       435	security.c	FUNCTION_42
0x4000153	          0x4989fc	                            mov r12, rdi	       435	security.c	FUNCTION_42
0x4000156	              0x53	                                push rbx	       435	security.c	FUNCTION_42
0x4000157	    0x488b1d000000	            mov rbx, qword [0x0400015e] 	       436	security.c	FUNCTION_42	CALL_1
0x400015e	          0x4889f5	                            mov rbp, rsi	       436	security.c	FUNCTION_42	CALL_1
0x4000161	          0x4885db	                           test rbx, rbx	       436	security.c	FUNCTION_42	CALL_1
0x4000164	            0x750a	                           jne 0x4000170	       436	security.c	FUNCTION_42	CALL_1
0x4000166	            0xeb20	                           jmp 0x4000188	       436	security.c	FUNCTION_42	CALL_1
0x4000168	          0x488b1b	                    mov rbx, qword [rbx]	       436	security.c	FUNCTION_42	CALL_1
0x400016b	          0x4885db	                           test rbx, rbx	       436	security.c	FUNCTION_42	CALL_1
0x400016e	            0x7418	                            je 0x4000188	       436	security.c	FUNCTION_42	CALL_1
0x4000170	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       436	security.c	FUNCTION_42	CALL_1
0x4000174	          0x4889ee	                            mov rsi, rbp	       436	security.c	FUNCTION_42	CALL_1
0x4000177	          0x4c89e7	                            mov rdi, r12	       436	security.c	FUNCTION_42	CALL_1
0x400017a	      0xe800000000	                          call 0x400017f	       436	security.c	FUNCTION_42	CALL_1
0x400017f	            0x85c0	                           test eax, eax	       436	security.c	FUNCTION_42	CALL_1
0x4000181	            0x74e5	                            je 0x4000168	       436	security.c	FUNCTION_42	CALL_1
0x4000183	              0x5b	                                 pop rbx	       437	security.c	FUNCTION_42
0x4000184	              0x5d	                                 pop rbp	       437	security.c	FUNCTION_42
0x4000185	            0x415c	                                 pop r12	       437	security.c	FUNCTION_42
0x4000187	              0xc3	                                     ret	       437	security.c	FUNCTION_42
0x4000188	              0x5b	                                 pop rbx	       437	security.c	FUNCTION_42
0x4000189	            0x31c0	                            xor eax, eax	       435	security.c	FUNCTION_42
0x400018b	              0x5d	                                 pop rbp	       437	security.c	FUNCTION_42
0x400018c	            0x415c	                                 pop r12	       437	security.c	FUNCTION_42
0x400018e	              0xc3	                                     ret	       437	security.c	FUNCTION_42
security_syslog	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x4001310	              0x55	                                push rbp	       304	security.c	FUNCTION_23
0x4001311	              0x53	                                push rbx	       304	security.c	FUNCTION_23
0x4001312	            0x89fd	                            mov ebp, edi	       304	security.c	FUNCTION_23
0x4001314	    0x488b1d000000	            mov rbx, qword [0x0400131b] 	       305	security.c	FUNCTION_23	CALL_1
0x400131b	          0x4885db	                           test rbx, rbx	       305	security.c	FUNCTION_23	CALL_1
0x400131e	            0x750a	                           jne 0x400132a	       305	security.c	FUNCTION_23	CALL_1
0x4001320	            0xeb1a	                           jmp 0x400133c	       305	security.c	FUNCTION_23	CALL_1
0x4001322	          0x488b1b	                    mov rbx, qword [rbx]	       305	security.c	FUNCTION_23	CALL_1
0x4001325	          0x4885db	                           test rbx, rbx	       305	security.c	FUNCTION_23	CALL_1
0x4001328	            0x7412	                            je 0x400133c	       305	security.c	FUNCTION_23	CALL_1
0x400132a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       305	security.c	FUNCTION_23	CALL_1
0x400132e	            0x89ef	                            mov edi, ebp	       305	security.c	FUNCTION_23	CALL_1
0x4001330	      0xe800000000	                          call 0x4001335	       305	security.c	FUNCTION_23	CALL_1
0x4001335	            0x85c0	                           test eax, eax	       305	security.c	FUNCTION_23	CALL_1
0x4001337	            0x74e9	                            je 0x4001322	       305	security.c	FUNCTION_23	CALL_1
0x4001339	              0x5b	                                 pop rbx	       306	security.c	FUNCTION_23
0x400133a	              0x5d	                                 pop rbp	       306	security.c	FUNCTION_23
0x400133b	              0xc3	                                     ret	       306	security.c	FUNCTION_23
0x400133c	            0x31c0	                            xor eax, eax	       304	security.c	FUNCTION_23
0x400133e	              0x5b	                                 pop rbx	       306	security.c	FUNCTION_23
0x400133f	              0x5d	                                 pop rbp	       306	security.c	FUNCTION_23
0x4001340	              0xc3	                                     ret	       306	security.c	FUNCTION_23
security_sock_rcv_skb	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x40006d0	            0x4154	                                push r12	      1418	security.c	FUNCTION_175
0x40006d2	              0x55	                                push rbp	      1418	security.c	FUNCTION_175
0x40006d3	          0x4989fc	                            mov r12, rdi	      1418	security.c	FUNCTION_175
0x40006d6	              0x53	                                push rbx	      1418	security.c	FUNCTION_175
0x40006d7	    0x488b1d000000	            mov rbx, qword [0x040006de] 	      1419	security.c	FUNCTION_175	CALL_1
0x40006de	          0x4889f5	                            mov rbp, rsi	      1419	security.c	FUNCTION_175	CALL_1
0x40006e1	          0x4885db	                           test rbx, rbx	      1419	security.c	FUNCTION_175	CALL_1
0x40006e4	            0x750a	                           jne 0x40006f0	      1419	security.c	FUNCTION_175	CALL_1
0x40006e6	            0xeb20	                           jmp 0x4000708	      1419	security.c	FUNCTION_175	CALL_1
0x40006e8	          0x488b1b	                    mov rbx, qword [rbx]	      1419	security.c	FUNCTION_175	CALL_1
0x40006eb	          0x4885db	                           test rbx, rbx	      1419	security.c	FUNCTION_175	CALL_1
0x40006ee	            0x7418	                            je 0x4000708	      1419	security.c	FUNCTION_175	CALL_1
0x40006f0	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1419	security.c	FUNCTION_175	CALL_1
0x40006f4	          0x4889ee	                            mov rsi, rbp	      1419	security.c	FUNCTION_175	CALL_1
0x40006f7	          0x4c89e7	                            mov rdi, r12	      1419	security.c	FUNCTION_175	CALL_1
0x40006fa	      0xe800000000	                          call 0x40006ff	      1419	security.c	FUNCTION_175	CALL_1
0x40006ff	            0x85c0	                           test eax, eax	      1419	security.c	FUNCTION_175	CALL_1
0x4000701	            0x74e5	                            je 0x40006e8	      1419	security.c	FUNCTION_175	CALL_1
0x4000703	              0x5b	                                 pop rbx	      1420	security.c	FUNCTION_175
0x4000704	              0x5d	                                 pop rbp	      1420	security.c	FUNCTION_175
0x4000705	            0x415c	                                 pop r12	      1420	security.c	FUNCTION_175
0x4000707	              0xc3	                                     ret	      1420	security.c	FUNCTION_175
0x4000708	              0x5b	                                 pop rbx	      1420	security.c	FUNCTION_175
0x4000709	            0x31c0	                            xor eax, eax	      1418	security.c	FUNCTION_175
0x400070b	              0x5d	                                 pop rbp	      1420	security.c	FUNCTION_175
0x400070c	            0x415c	                                 pop r12	      1420	security.c	FUNCTION_175
0x400070e	              0xc3	                                     ret	      1420	security.c	FUNCTION_175
security_tun_dev_free_security	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	15
0x40009b0	              0x55	                                push rbp	      1516	security.c	FUNCTION_191
0x40009b1	              0x53	                                push rbx	      1516	security.c	FUNCTION_191
0x40009b2	    0x488b1d000000	            mov rbx, qword [0x040009b9] 	      1517	security.c	FUNCTION_191	CALL_1
0x40009b9	          0x4885db	                           test rbx, rbx	      1517	security.c	FUNCTION_191	CALL_1
0x40009bc	            0x7417	                            je 0x40009d5	      1517	security.c	FUNCTION_191	CALL_1
0x40009be	          0x4889fd	                            mov rbp, rdi	      1517	security.c	FUNCTION_191	CALL_1
0x40009c1	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1517	security.c	FUNCTION_191	CALL_1
0x40009c5	          0x4889ef	                            mov rdi, rbp	      1517	security.c	FUNCTION_191	CALL_1
0x40009c8	      0xe800000000	                          call 0x40009cd	      1517	security.c	FUNCTION_191	CALL_1
0x40009cd	          0x488b1b	                    mov rbx, qword [rbx]	      1517	security.c	FUNCTION_191	CALL_1
0x40009d0	          0x4885db	                           test rbx, rbx	      1517	security.c	FUNCTION_191	CALL_1
0x40009d3	            0x75ec	                           jne 0x40009c1	      1517	security.c	FUNCTION_191	CALL_1
0x40009d5	              0x5b	                                 pop rbx	      1518	security.c	FUNCTION_191
0x40009d6	              0x5d	                                 pop rbp	      1518	security.c	FUNCTION_191
0x40009d7	              0xc3	                                     ret	      1518	security.c	FUNCTION_191
security_socket_recvmsg	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	37
0x4003280	            0x4156	                                push r14	      1388	security.c	FUNCTION_169
0x4003282	            0x4155	                                push r13	      1388	security.c	FUNCTION_169
0x4003284	            0x4154	                                push r12	      1388	security.c	FUNCTION_169
0x4003286	              0x55	                                push rbp	      1388	security.c	FUNCTION_169
0x4003287	              0x53	                                push rbx	      1388	security.c	FUNCTION_169
0x4003288	    0x488b1d000000	            mov rbx, qword [0x0400328f] 	      1389	security.c	FUNCTION_169	CALL_1
0x400328f	          0x4885db	                           test rbx, rbx	      1389	security.c	FUNCTION_169	CALL_1
0x4003292	            0x7436	                            je 0x40032ca	      1389	security.c	FUNCTION_169	CALL_1
0x4003294	          0x4989fe	                            mov r14, rdi	      1389	security.c	FUNCTION_169	CALL_1
0x4003297	          0x4989f5	                            mov r13, rsi	      1389	security.c	FUNCTION_169	CALL_1
0x400329a	          0x4189d4	                           mov r12d, edx	      1389	security.c	FUNCTION_169	CALL_1
0x400329d	            0x89cd	                            mov ebp, ecx	      1389	security.c	FUNCTION_169	CALL_1
0x400329f	            0xeb08	                           jmp 0x40032a9	      1389	security.c	FUNCTION_169	CALL_1
0x40032a1	          0x488b1b	                    mov rbx, qword [rbx]	      1389	security.c	FUNCTION_169	CALL_1
0x40032a4	          0x4885db	                           test rbx, rbx	      1389	security.c	FUNCTION_169	CALL_1
0x40032a7	            0x7421	                            je 0x40032ca	      1389	security.c	FUNCTION_169	CALL_1
0x40032a9	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1389	security.c	FUNCTION_169	CALL_1
0x40032ad	            0x89e9	                            mov ecx, ebp	      1389	security.c	FUNCTION_169	CALL_1
0x40032af	          0x4489e2	                           mov edx, r12d	      1389	security.c	FUNCTION_169	CALL_1
0x40032b2	          0x4c89ee	                            mov rsi, r13	      1389	security.c	FUNCTION_169	CALL_1
0x40032b5	          0x4c89f7	                            mov rdi, r14	      1389	security.c	FUNCTION_169	CALL_1
0x40032b8	      0xe800000000	                          call 0x40032bd	      1389	security.c	FUNCTION_169	CALL_1
0x40032bd	            0x85c0	                           test eax, eax	      1389	security.c	FUNCTION_169	CALL_1
0x40032bf	            0x74e0	                            je 0x40032a1	      1389	security.c	FUNCTION_169	CALL_1
0x40032c1	              0x5b	                                 pop rbx	      1390	security.c	FUNCTION_169
0x40032c2	              0x5d	                                 pop rbp	      1390	security.c	FUNCTION_169
0x40032c3	            0x415c	                                 pop r12	      1390	security.c	FUNCTION_169
0x40032c5	            0x415d	                                 pop r13	      1390	security.c	FUNCTION_169
0x40032c7	            0x415e	                                 pop r14	      1390	security.c	FUNCTION_169
0x40032c9	              0xc3	                                     ret	      1390	security.c	FUNCTION_169
0x40032ca	              0x5b	                                 pop rbx	      1390	security.c	FUNCTION_169
0x40032cb	            0x31c0	                            xor eax, eax	      1388	security.c	FUNCTION_169
0x40032cd	              0x5d	                                 pop rbp	      1390	security.c	FUNCTION_169
0x40032ce	            0x415c	                                 pop r12	      1390	security.c	FUNCTION_169
0x40032d0	            0x415d	                                 pop r13	      1390	security.c	FUNCTION_169
0x40032d2	            0x415e	                                 pop r14	      1390	security.c	FUNCTION_169
0x40032d4	              0xc3	                                     ret	      1390	security.c	FUNCTION_169
security_inode_rmdir	IF,1:SWITCH,0:functions,0:CALL,4:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x40018c0	        0x488b4630	            mov rax, qword [rsi + 0x30] 	       653	security.c	FUNCTION_65	IF_1	CALL_3
0x40018c4	        0xf6400d02	                test byte [rax + 0xd], 2	       653	security.c	FUNCTION_65	IF_1	CALL_3
0x40018c8	            0x753f	                           jne 0x4001909	       653	security.c	FUNCTION_65	IF_1	CALL_3
0x40018ca	            0x4154	                                push r12	       652	security.c	FUNCTION_65
0x40018cc	              0x55	                                push rbp	       652	security.c	FUNCTION_65
0x40018cd	          0x4989fc	                            mov r12, rdi	       652	security.c	FUNCTION_65
0x40018d0	              0x53	                                push rbx	       652	security.c	FUNCTION_65
0x40018d1	    0x488b1d000000	            mov rbx, qword [0x040018d8] 	       655	security.c	FUNCTION_65	CALL_4
0x40018d8	          0x4889f5	                            mov rbp, rsi	       655	security.c	FUNCTION_65	CALL_4
0x40018db	          0x4885db	                           test rbx, rbx	       655	security.c	FUNCTION_65	CALL_4
0x40018de	            0x750a	                           jne 0x40018ea	       655	security.c	FUNCTION_65	CALL_4
0x40018e0	            0xeb20	                           jmp 0x4001902	       655	security.c	FUNCTION_65	CALL_4
0x40018e2	          0x488b1b	                    mov rbx, qword [rbx]	       655	security.c	FUNCTION_65	CALL_4
0x40018e5	          0x4885db	                           test rbx, rbx	       655	security.c	FUNCTION_65	CALL_4
0x40018e8	            0x7418	                            je 0x4001902	       655	security.c	FUNCTION_65	CALL_4
0x40018ea	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       655	security.c	FUNCTION_65	CALL_4
0x40018ee	          0x4889ee	                            mov rsi, rbp	       655	security.c	FUNCTION_65	CALL_4
0x40018f1	          0x4c89e7	                            mov rdi, r12	       655	security.c	FUNCTION_65	CALL_4
0x40018f4	      0xe800000000	                          call 0x40018f9	       655	security.c	FUNCTION_65	CALL_4
0x40018f9	            0x85c0	                           test eax, eax	       655	security.c	FUNCTION_65	CALL_4
0x40018fb	            0x74e5	                            je 0x40018e2	       655	security.c	FUNCTION_65	CALL_4
0x40018fd	              0x5b	                                 pop rbx	       656	security.c	FUNCTION_65
0x40018fe	              0x5d	                                 pop rbp	       656	security.c	FUNCTION_65
0x40018ff	            0x415c	                                 pop r12	       656	security.c	FUNCTION_65
0x4001901	              0xc3	                                     ret	       656	security.c	FUNCTION_65
0x4001902	              0x5b	                                 pop rbx	       656	security.c	FUNCTION_65
0x4001903	            0x31c0	                            xor eax, eax	       654	security.c	FUNCTION_65	IF_1
0x4001905	              0x5d	                                 pop rbp	       656	security.c	FUNCTION_65
0x4001906	            0x415c	                                 pop r12	       656	security.c	FUNCTION_65
0x4001908	              0xc3	                                     ret	       656	security.c	FUNCTION_65
0x4001909	            0x31c0	                            xor eax, eax	       654	security.c	FUNCTION_65	IF_1
0x400190b	              0xc3	                                     ret	       656	security.c	FUNCTION_65
security_inode_unlink	IF,1:SWITCH,0:functions,0:CALL,4:FOR,0:WHILE,0:DO,0:ELSE,0	32
0x4001810	        0x488b4630	            mov rax, qword [rsi + 0x30] 	       630	security.c	FUNCTION_62	IF_1	CALL_3
0x4001814	        0xf6400d02	                test byte [rax + 0xd], 2	       630	security.c	FUNCTION_62	IF_1	CALL_3
0x4001818	            0x753f	                           jne 0x4001859	       630	security.c	FUNCTION_62	IF_1	CALL_3
0x400181a	            0x4154	                                push r12	       629	security.c	FUNCTION_62
0x400181c	              0x55	                                push rbp	       629	security.c	FUNCTION_62
0x400181d	          0x4989fc	                            mov r12, rdi	       629	security.c	FUNCTION_62
0x4001820	              0x53	                                push rbx	       629	security.c	FUNCTION_62
0x4001821	    0x488b1d000000	            mov rbx, qword [0x04001828] 	       632	security.c	FUNCTION_62	CALL_4
0x4001828	          0x4889f5	                            mov rbp, rsi	       632	security.c	FUNCTION_62	CALL_4
0x400182b	          0x4885db	                           test rbx, rbx	       632	security.c	FUNCTION_62	CALL_4
0x400182e	            0x750a	                           jne 0x400183a	       632	security.c	FUNCTION_62	CALL_4
0x4001830	            0xeb20	                           jmp 0x4001852	       632	security.c	FUNCTION_62	CALL_4
0x4001832	          0x488b1b	                    mov rbx, qword [rbx]	       632	security.c	FUNCTION_62	CALL_4
0x4001835	          0x4885db	                           test rbx, rbx	       632	security.c	FUNCTION_62	CALL_4
0x4001838	            0x7418	                            je 0x4001852	       632	security.c	FUNCTION_62	CALL_4
0x400183a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       632	security.c	FUNCTION_62	CALL_4
0x400183e	          0x4889ee	                            mov rsi, rbp	       632	security.c	FUNCTION_62	CALL_4
0x4001841	          0x4c89e7	                            mov rdi, r12	       632	security.c	FUNCTION_62	CALL_4
0x4001844	      0xe800000000	                          call 0x4001849	       632	security.c	FUNCTION_62	CALL_4
0x4001849	            0x85c0	                           test eax, eax	       632	security.c	FUNCTION_62	CALL_4
0x400184b	            0x74e5	                            je 0x4001832	       632	security.c	FUNCTION_62	CALL_4
0x400184d	              0x5b	                                 pop rbx	       633	security.c	FUNCTION_62
0x400184e	              0x5d	                                 pop rbp	       633	security.c	FUNCTION_62
0x400184f	            0x415c	                                 pop r12	       633	security.c	FUNCTION_62
0x4001851	              0xc3	                                     ret	       633	security.c	FUNCTION_62
0x4001852	              0x5b	                                 pop rbx	       633	security.c	FUNCTION_62
0x4001853	            0x31c0	                            xor eax, eax	       631	security.c	FUNCTION_62	IF_1
0x4001855	              0x5d	                                 pop rbp	       633	security.c	FUNCTION_62
0x4001856	            0x415c	                                 pop r12	       633	security.c	FUNCTION_62
0x4001858	              0xc3	                                     ret	       633	security.c	FUNCTION_62
0x4001859	            0x31c0	                            xor eax, eax	       631	security.c	FUNCTION_62	IF_1
0x400185b	              0xc3	                                     ret	       633	security.c	FUNCTION_62
security_task_setioprio	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4002730	            0x4154	                                push r12	      1093	security.c	FUNCTION_118
0x4002732	              0x55	                                push rbp	      1093	security.c	FUNCTION_118
0x4002733	          0x4989fc	                            mov r12, rdi	      1093	security.c	FUNCTION_118
0x4002736	              0x53	                                push rbx	      1093	security.c	FUNCTION_118
0x4002737	    0x488b1d000000	            mov rbx, qword [0x0400273e] 	      1094	security.c	FUNCTION_118	CALL_1
0x400273e	            0x89f5	                            mov ebp, esi	      1094	security.c	FUNCTION_118	CALL_1
0x4002740	          0x4885db	                           test rbx, rbx	      1094	security.c	FUNCTION_118	CALL_1
0x4002743	            0x750a	                           jne 0x400274f	      1094	security.c	FUNCTION_118	CALL_1
0x4002745	            0xeb1f	                           jmp 0x4002766	      1094	security.c	FUNCTION_118	CALL_1
0x4002747	          0x488b1b	                    mov rbx, qword [rbx]	      1094	security.c	FUNCTION_118	CALL_1
0x400274a	          0x4885db	                           test rbx, rbx	      1094	security.c	FUNCTION_118	CALL_1
0x400274d	            0x7417	                            je 0x4002766	      1094	security.c	FUNCTION_118	CALL_1
0x400274f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1094	security.c	FUNCTION_118	CALL_1
0x4002753	            0x89ee	                            mov esi, ebp	      1094	security.c	FUNCTION_118	CALL_1
0x4002755	          0x4c89e7	                            mov rdi, r12	      1094	security.c	FUNCTION_118	CALL_1
0x4002758	      0xe800000000	                          call 0x400275d	      1094	security.c	FUNCTION_118	CALL_1
0x400275d	            0x85c0	                           test eax, eax	      1094	security.c	FUNCTION_118	CALL_1
0x400275f	            0x74e6	                            je 0x4002747	      1094	security.c	FUNCTION_118	CALL_1
0x4002761	              0x5b	                                 pop rbx	      1095	security.c	FUNCTION_118
0x4002762	              0x5d	                                 pop rbp	      1095	security.c	FUNCTION_118
0x4002763	            0x415c	                                 pop r12	      1095	security.c	FUNCTION_118
0x4002765	              0xc3	                                     ret	      1095	security.c	FUNCTION_118
0x4002766	              0x5b	                                 pop rbx	      1095	security.c	FUNCTION_118
0x4002767	            0x31c0	                            xor eax, eax	      1093	security.c	FUNCTION_118
0x4002769	              0x5d	                                 pop rbp	      1095	security.c	FUNCTION_118
0x400276a	            0x415c	                                 pop r12	      1095	security.c	FUNCTION_118
0x400276c	              0xc3	                                     ret	      1095	security.c	FUNCTION_118
security_transfer_creds	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	19
0x40024e0	            0x4154	                                push r12	      1010	security.c	FUNCTION_105
0x40024e2	              0x55	                                push rbp	      1010	security.c	FUNCTION_105
0x40024e3	              0x53	                                push rbx	      1010	security.c	FUNCTION_105
0x40024e4	    0x488b1d000000	            mov rbx, qword [0x040024eb] 	      1011	security.c	FUNCTION_105	CALL_1
0x40024eb	          0x4885db	                           test rbx, rbx	      1011	security.c	FUNCTION_105	CALL_1
0x40024ee	            0x741d	                            je 0x400250d	      1011	security.c	FUNCTION_105	CALL_1
0x40024f0	          0x4989fc	                            mov r12, rdi	      1011	security.c	FUNCTION_105	CALL_1
0x40024f3	          0x4889f5	                            mov rbp, rsi	      1011	security.c	FUNCTION_105	CALL_1
0x40024f6	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1011	security.c	FUNCTION_105	CALL_1
0x40024fa	          0x4889ee	                            mov rsi, rbp	      1011	security.c	FUNCTION_105	CALL_1
0x40024fd	          0x4c89e7	                            mov rdi, r12	      1011	security.c	FUNCTION_105	CALL_1
0x4002500	      0xe800000000	                          call 0x4002505	      1011	security.c	FUNCTION_105	CALL_1
0x4002505	          0x488b1b	                    mov rbx, qword [rbx]	      1011	security.c	FUNCTION_105	CALL_1
0x4002508	          0x4885db	                           test rbx, rbx	      1011	security.c	FUNCTION_105	CALL_1
0x400250b	            0x75e9	                           jne 0x40024f6	      1011	security.c	FUNCTION_105	CALL_1
0x400250d	              0x5b	                                 pop rbx	      1012	security.c	FUNCTION_105
0x400250e	              0x5d	                                 pop rbp	      1012	security.c	FUNCTION_105
0x400250f	            0x415c	                                 pop r12	      1012	security.c	FUNCTION_105
0x4002511	              0xc3	                                     ret	      1012	security.c	FUNCTION_105
security_inode_getattr	IF,1:SWITCH,0:functions,0:CALL,4:FOR,0:WHILE,0:DO,0:ELSE,0	28
0x4001b20	        0x488b4708	                mov rax, qword [rdi + 8]	       720	security.c	FUNCTION_72
0x4001b24	        0x488b4030	            mov rax, qword [rax + 0x30] 	       721	security.c	FUNCTION_72	IF_1	CALL_3
0x4001b28	        0xf6400d02	                test byte [rax + 0xd], 2	       721	security.c	FUNCTION_72	IF_1	CALL_3
0x4001b2c	            0x7533	                           jne 0x4001b61	       721	security.c	FUNCTION_72	IF_1	CALL_3
0x4001b2e	              0x55	                                push rbp	       720	security.c	FUNCTION_72
0x4001b2f	              0x53	                                push rbx	       720	security.c	FUNCTION_72
0x4001b30	          0x4889fd	                            mov rbp, rdi	       720	security.c	FUNCTION_72
0x4001b33	    0x488b1d000000	            mov rbx, qword [0x04001b3a] 	       723	security.c	FUNCTION_72	CALL_4
0x4001b3a	          0x4885db	                           test rbx, rbx	       723	security.c	FUNCTION_72	CALL_4
0x4001b3d	            0x750a	                           jne 0x4001b49	       723	security.c	FUNCTION_72	CALL_4
0x4001b3f	            0xeb1b	                           jmp 0x4001b5c	       723	security.c	FUNCTION_72	CALL_4
0x4001b41	          0x488b1b	                    mov rbx, qword [rbx]	       723	security.c	FUNCTION_72	CALL_4
0x4001b44	          0x4885db	                           test rbx, rbx	       723	security.c	FUNCTION_72	CALL_4
0x4001b47	            0x7413	                            je 0x4001b5c	       723	security.c	FUNCTION_72	CALL_4
0x4001b49	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       723	security.c	FUNCTION_72	CALL_4
0x4001b4d	          0x4889ef	                            mov rdi, rbp	       723	security.c	FUNCTION_72	CALL_4
0x4001b50	      0xe800000000	                          call 0x4001b55	       723	security.c	FUNCTION_72	CALL_4
0x4001b55	            0x85c0	                           test eax, eax	       723	security.c	FUNCTION_72	CALL_4
0x4001b57	            0x74e8	                            je 0x4001b41	       723	security.c	FUNCTION_72	CALL_4
0x4001b59	              0x5b	                                 pop rbx	       724	security.c	FUNCTION_72
0x4001b5a	              0x5d	                                 pop rbp	       724	security.c	FUNCTION_72
0x4001b5b	              0xc3	                                     ret	       724	security.c	FUNCTION_72
0x4001b5c	            0x31c0	                            xor eax, eax	       722	security.c	FUNCTION_72	IF_1
0x4001b5e	              0x5b	                                 pop rbx	       724	security.c	FUNCTION_72
0x4001b5f	              0x5d	                                 pop rbp	       724	security.c	FUNCTION_72
0x4001b60	              0xc3	                                     ret	       724	security.c	FUNCTION_72
0x4001b61	            0x31c0	                            xor eax, eax	       722	security.c	FUNCTION_72	IF_1
0x4001b63	              0xc3	                                     ret	       724	security.c	FUNCTION_72
security_sb_copy_data	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4000040	            0x4154	                                push r12	       372	security.c	FUNCTION_32
0x4000042	              0x55	                                push rbp	       372	security.c	FUNCTION_32
0x4000043	          0x4989fc	                            mov r12, rdi	       372	security.c	FUNCTION_32
0x4000046	              0x53	                                push rbx	       372	security.c	FUNCTION_32
0x4000047	    0x488b1d000000	            mov rbx, qword [0x0400004e] 	       373	security.c	FUNCTION_32	CALL_1
0x400004e	          0x4889f5	                            mov rbp, rsi	       373	security.c	FUNCTION_32	CALL_1
0x4000051	          0x4885db	                           test rbx, rbx	       373	security.c	FUNCTION_32	CALL_1
0x4000054	            0x750a	                           jne 0x4000060	       373	security.c	FUNCTION_32	CALL_1
0x4000056	            0xeb20	                           jmp 0x4000078	       373	security.c	FUNCTION_32	CALL_1
0x4000058	          0x488b1b	                    mov rbx, qword [rbx]	       373	security.c	FUNCTION_32	CALL_1
0x400005b	          0x4885db	                           test rbx, rbx	       373	security.c	FUNCTION_32	CALL_1
0x400005e	            0x7418	                            je 0x4000078	       373	security.c	FUNCTION_32	CALL_1
0x4000060	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       373	security.c	FUNCTION_32	CALL_1
0x4000064	          0x4889ee	                            mov rsi, rbp	       373	security.c	FUNCTION_32	CALL_1
0x4000067	          0x4c89e7	                            mov rdi, r12	       373	security.c	FUNCTION_32	CALL_1
0x400006a	      0xe800000000	                          call 0x400006f	       373	security.c	FUNCTION_32	CALL_1
0x400006f	            0x85c0	                           test eax, eax	       373	security.c	FUNCTION_32	CALL_1
0x4000071	            0x74e5	                            je 0x4000058	       373	security.c	FUNCTION_32	CALL_1
0x4000073	              0x5b	                                 pop rbx	       374	security.c	FUNCTION_32
0x4000074	              0x5d	                                 pop rbp	       374	security.c	FUNCTION_32
0x4000075	            0x415c	                                 pop r12	       374	security.c	FUNCTION_32
0x4000077	              0xc3	                                     ret	       374	security.c	FUNCTION_32
0x4000078	              0x5b	                                 pop rbx	       374	security.c	FUNCTION_32
0x4000079	            0x31c0	                            xor eax, eax	       372	security.c	FUNCTION_32
0x400007b	              0x5d	                                 pop rbp	       374	security.c	FUNCTION_32
0x400007c	            0x415c	                                 pop r12	       374	security.c	FUNCTION_32
0x400007e	              0xc3	                                     ret	       374	security.c	FUNCTION_32
security_sem_associate	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4002e80	            0x4154	                                push r12	      1247	security.c	FUNCTION_145
0x4002e82	              0x55	                                push rbp	      1247	security.c	FUNCTION_145
0x4002e83	          0x4989fc	                            mov r12, rdi	      1247	security.c	FUNCTION_145
0x4002e86	              0x53	                                push rbx	      1247	security.c	FUNCTION_145
0x4002e87	    0x488b1d000000	            mov rbx, qword [0x04002e8e] 	      1248	security.c	FUNCTION_145	CALL_1
0x4002e8e	            0x89f5	                            mov ebp, esi	      1248	security.c	FUNCTION_145	CALL_1
0x4002e90	          0x4885db	                           test rbx, rbx	      1248	security.c	FUNCTION_145	CALL_1
0x4002e93	            0x750a	                           jne 0x4002e9f	      1248	security.c	FUNCTION_145	CALL_1
0x4002e95	            0xeb1f	                           jmp 0x4002eb6	      1248	security.c	FUNCTION_145	CALL_1
0x4002e97	          0x488b1b	                    mov rbx, qword [rbx]	      1248	security.c	FUNCTION_145	CALL_1
0x4002e9a	          0x4885db	                           test rbx, rbx	      1248	security.c	FUNCTION_145	CALL_1
0x4002e9d	            0x7417	                            je 0x4002eb6	      1248	security.c	FUNCTION_145	CALL_1
0x4002e9f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1248	security.c	FUNCTION_145	CALL_1
0x4002ea3	            0x89ee	                            mov esi, ebp	      1248	security.c	FUNCTION_145	CALL_1
0x4002ea5	          0x4c89e7	                            mov rdi, r12	      1248	security.c	FUNCTION_145	CALL_1
0x4002ea8	      0xe800000000	                          call 0x4002ead	      1248	security.c	FUNCTION_145	CALL_1
0x4002ead	            0x85c0	                           test eax, eax	      1248	security.c	FUNCTION_145	CALL_1
0x4002eaf	            0x74e6	                            je 0x4002e97	      1248	security.c	FUNCTION_145	CALL_1
0x4002eb1	              0x5b	                                 pop rbx	      1249	security.c	FUNCTION_145
0x4002eb2	              0x5d	                                 pop rbp	      1249	security.c	FUNCTION_145
0x4002eb3	            0x415c	                                 pop r12	      1249	security.c	FUNCTION_145
0x4002eb5	              0xc3	                                     ret	      1249	security.c	FUNCTION_145
0x4002eb6	              0x5b	                                 pop rbx	      1249	security.c	FUNCTION_145
0x4002eb7	            0x31c0	                            xor eax, eax	      1247	security.c	FUNCTION_145
0x4002eb9	              0x5d	                                 pop rbp	      1249	security.c	FUNCTION_145
0x4002eba	            0x415c	                                 pop r12	      1249	security.c	FUNCTION_145
0x4002ebc	              0xc3	                                     ret	      1249	security.c	FUNCTION_145
security_quota_on	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x40012d0	              0x55	                                push rbp	       299	security.c	FUNCTION_22
0x40012d1	              0x53	                                push rbx	       299	security.c	FUNCTION_22
0x40012d2	          0x4889fd	                            mov rbp, rdi	       299	security.c	FUNCTION_22
0x40012d5	    0x488b1d000000	            mov rbx, qword [0x040012dc] 	       300	security.c	FUNCTION_22	CALL_1
0x40012dc	          0x4885db	                           test rbx, rbx	       300	security.c	FUNCTION_22	CALL_1
0x40012df	            0x750a	                           jne 0x40012eb	       300	security.c	FUNCTION_22	CALL_1
0x40012e1	            0xeb1b	                           jmp 0x40012fe	       300	security.c	FUNCTION_22	CALL_1
0x40012e3	          0x488b1b	                    mov rbx, qword [rbx]	       300	security.c	FUNCTION_22	CALL_1
0x40012e6	          0x4885db	                           test rbx, rbx	       300	security.c	FUNCTION_22	CALL_1
0x40012e9	            0x7413	                            je 0x40012fe	       300	security.c	FUNCTION_22	CALL_1
0x40012eb	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       300	security.c	FUNCTION_22	CALL_1
0x40012ef	          0x4889ef	                            mov rdi, rbp	       300	security.c	FUNCTION_22	CALL_1
0x40012f2	      0xe800000000	                          call 0x40012f7	       300	security.c	FUNCTION_22	CALL_1
0x40012f7	            0x85c0	                           test eax, eax	       300	security.c	FUNCTION_22	CALL_1
0x40012f9	            0x74e8	                            je 0x40012e3	       300	security.c	FUNCTION_22	CALL_1
0x40012fb	              0x5b	                                 pop rbx	       301	security.c	FUNCTION_22
0x40012fc	              0x5d	                                 pop rbp	       301	security.c	FUNCTION_22
0x40012fd	              0xc3	                                     ret	       301	security.c	FUNCTION_22
0x40012fe	            0x31c0	                            xor eax, eax	       299	security.c	FUNCTION_22
0x4001300	              0x5b	                                 pop rbx	       301	security.c	FUNCTION_22
0x4001301	              0x5d	                                 pop rbp	       301	security.c	FUNCTION_22
0x4001302	              0xc3	                                     ret	       301	security.c	FUNCTION_22
security_shm_associate	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4002d40	            0x4154	                                push r12	      1222	security.c	FUNCTION_140
0x4002d42	              0x55	                                push rbp	      1222	security.c	FUNCTION_140
0x4002d43	          0x4989fc	                            mov r12, rdi	      1222	security.c	FUNCTION_140
0x4002d46	              0x53	                                push rbx	      1222	security.c	FUNCTION_140
0x4002d47	    0x488b1d000000	            mov rbx, qword [0x04002d4e] 	      1223	security.c	FUNCTION_140	CALL_1
0x4002d4e	            0x89f5	                            mov ebp, esi	      1223	security.c	FUNCTION_140	CALL_1
0x4002d50	          0x4885db	                           test rbx, rbx	      1223	security.c	FUNCTION_140	CALL_1
0x4002d53	            0x750a	                           jne 0x4002d5f	      1223	security.c	FUNCTION_140	CALL_1
0x4002d55	            0xeb1f	                           jmp 0x4002d76	      1223	security.c	FUNCTION_140	CALL_1
0x4002d57	          0x488b1b	                    mov rbx, qword [rbx]	      1223	security.c	FUNCTION_140	CALL_1
0x4002d5a	          0x4885db	                           test rbx, rbx	      1223	security.c	FUNCTION_140	CALL_1
0x4002d5d	            0x7417	                            je 0x4002d76	      1223	security.c	FUNCTION_140	CALL_1
0x4002d5f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1223	security.c	FUNCTION_140	CALL_1
0x4002d63	            0x89ee	                            mov esi, ebp	      1223	security.c	FUNCTION_140	CALL_1
0x4002d65	          0x4c89e7	                            mov rdi, r12	      1223	security.c	FUNCTION_140	CALL_1
0x4002d68	      0xe800000000	                          call 0x4002d6d	      1223	security.c	FUNCTION_140	CALL_1
0x4002d6d	            0x85c0	                           test eax, eax	      1223	security.c	FUNCTION_140	CALL_1
0x4002d6f	            0x74e6	                            je 0x4002d57	      1223	security.c	FUNCTION_140	CALL_1
0x4002d71	              0x5b	                                 pop rbx	      1224	security.c	FUNCTION_140
0x4002d72	              0x5d	                                 pop rbp	      1224	security.c	FUNCTION_140
0x4002d73	            0x415c	                                 pop r12	      1224	security.c	FUNCTION_140
0x4002d75	              0xc3	                                     ret	      1224	security.c	FUNCTION_140
0x4002d76	              0x5b	                                 pop rbx	      1224	security.c	FUNCTION_140
0x4002d77	            0x31c0	                            xor eax, eax	      1222	security.c	FUNCTION_140
0x4002d79	              0x5d	                                 pop rbp	      1224	security.c	FUNCTION_140
0x4002d7a	            0x415c	                                 pop r12	      1224	security.c	FUNCTION_140
0x4002d7c	              0xc3	                                     ret	      1224	security.c	FUNCTION_140
security_sb_set_mnt_opts	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	46
0x4000080	            0x4156	                                push r14	       417	security.c	FUNCTION_40
0x4000082	            0x4155	                                push r13	       417	security.c	FUNCTION_40
0x4000084	          0x4989ce	                            mov r14, rcx	       417	security.c	FUNCTION_40
0x4000087	            0x4154	                                push r12	       417	security.c	FUNCTION_40
0x4000089	              0x55	                                push rbp	       417	security.c	FUNCTION_40
0x400008a	          0x4989fc	                            mov r12, rdi	       417	security.c	FUNCTION_40
0x400008d	              0x53	                                push rbx	       417	security.c	FUNCTION_40
0x400008e	          0x8b4610	            mov eax, dword [rsi + 0x10] 	       418	security.c	FUNCTION_40	CALL_1
0x4000091	          0x4889f5	                            mov rbp, rsi	       417	security.c	FUNCTION_40
0x4000094	          0x4989d5	                            mov r13, rdx	       417	security.c	FUNCTION_40
0x4000097	    0x488b1d000000	            mov rbx, qword [0x0400009e] 	       418	security.c	FUNCTION_40	CALL_1
0x400009e	            0x85c0	                           test eax, eax	       418	security.c	FUNCTION_40	CALL_1
0x40000a0	            0x7416	                            je 0x40000b8	       418	security.c	FUNCTION_40	CALL_1
0x40000a2	          0x4885db	                           test rbx, rbx	       418	security.c	FUNCTION_40	CALL_1
0x40000a5	            0x7516	                           jne 0x40000bd	       418	security.c	FUNCTION_40	CALL_1
0x40000a7	              0x5b	                                 pop rbx	       421	security.c	FUNCTION_40
0x40000a8	      0xb8a1ffffff	                     mov eax, 0xffffffa1	       418	security.c	FUNCTION_40	CALL_1
0x40000ad	              0x5d	                                 pop rbp	       421	security.c	FUNCTION_40
0x40000ae	            0x415c	                                 pop r12	       421	security.c	FUNCTION_40
0x40000b0	            0x415d	                                 pop r13	       421	security.c	FUNCTION_40
0x40000b2	            0x415e	                                 pop r14	       421	security.c	FUNCTION_40
0x40000b4	              0xc3	                                     ret	       421	security.c	FUNCTION_40
0x40000b5	          0x488b1b	                    mov rbx, qword [rbx]	       418	security.c	FUNCTION_40	CALL_1
0x40000b8	          0x4885db	                           test rbx, rbx	       418	security.c	FUNCTION_40	CALL_1
0x40000bb	            0x7422	                            je 0x40000df	       418	security.c	FUNCTION_40	CALL_1
0x40000bd	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       418	security.c	FUNCTION_40	CALL_1
0x40000c1	          0x4c89f1	                            mov rcx, r14	       418	security.c	FUNCTION_40	CALL_1
0x40000c4	          0x4c89ea	                            mov rdx, r13	       418	security.c	FUNCTION_40	CALL_1
0x40000c7	          0x4889ee	                            mov rsi, rbp	       418	security.c	FUNCTION_40	CALL_1
0x40000ca	          0x4c89e7	                            mov rdi, r12	       418	security.c	FUNCTION_40	CALL_1
0x40000cd	      0xe800000000	                          call 0x40000d2	       418	security.c	FUNCTION_40	CALL_1
0x40000d2	            0x85c0	                           test eax, eax	       418	security.c	FUNCTION_40	CALL_1
0x40000d4	            0x74df	                            je 0x40000b5	       418	security.c	FUNCTION_40	CALL_1
0x40000d6	              0x5b	                                 pop rbx	       421	security.c	FUNCTION_40
0x40000d7	              0x5d	                                 pop rbp	       421	security.c	FUNCTION_40
0x40000d8	            0x415c	                                 pop r12	       421	security.c	FUNCTION_40
0x40000da	            0x415d	                                 pop r13	       421	security.c	FUNCTION_40
0x40000dc	            0x415e	                                 pop r14	       421	security.c	FUNCTION_40
0x40000de	              0xc3	                                     ret	       421	security.c	FUNCTION_40
0x40000df	              0x5b	                                 pop rbx	       421	security.c	FUNCTION_40
0x40000e0	            0x31c0	                            xor eax, eax	       418	security.c	FUNCTION_40	CALL_1
0x40000e2	              0x5d	                                 pop rbp	       421	security.c	FUNCTION_40
0x40000e3	            0x415c	                                 pop r12	       421	security.c	FUNCTION_40
0x40000e5	            0x415d	                                 pop r13	       421	security.c	FUNCTION_40
0x40000e7	            0x415e	                                 pop r14	       421	security.c	FUNCTION_40
0x40000e9	              0xc3	                                     ret	       421	security.c	FUNCTION_40
security_binder_transaction	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4000fb0	            0x4154	                                push r12	       237	security.c	FUNCTION_12
0x4000fb2	              0x55	                                push rbp	       237	security.c	FUNCTION_12
0x4000fb3	          0x4989fc	                            mov r12, rdi	       237	security.c	FUNCTION_12
0x4000fb6	              0x53	                                push rbx	       237	security.c	FUNCTION_12
0x4000fb7	    0x488b1d000000	            mov rbx, qword [0x04000fbe] 	       238	security.c	FUNCTION_12	CALL_1
0x4000fbe	          0x4889f5	                            mov rbp, rsi	       238	security.c	FUNCTION_12	CALL_1
0x4000fc1	          0x4885db	                           test rbx, rbx	       238	security.c	FUNCTION_12	CALL_1
0x4000fc4	            0x750a	                           jne 0x4000fd0	       238	security.c	FUNCTION_12	CALL_1
0x4000fc6	            0xeb20	                           jmp 0x4000fe8	       238	security.c	FUNCTION_12	CALL_1
0x4000fc8	          0x488b1b	                    mov rbx, qword [rbx]	       238	security.c	FUNCTION_12	CALL_1
0x4000fcb	          0x4885db	                           test rbx, rbx	       238	security.c	FUNCTION_12	CALL_1
0x4000fce	            0x7418	                            je 0x4000fe8	       238	security.c	FUNCTION_12	CALL_1
0x4000fd0	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       238	security.c	FUNCTION_12	CALL_1
0x4000fd4	          0x4889ee	                            mov rsi, rbp	       238	security.c	FUNCTION_12	CALL_1
0x4000fd7	          0x4c89e7	                            mov rdi, r12	       238	security.c	FUNCTION_12	CALL_1
0x4000fda	      0xe800000000	                          call 0x4000fdf	       238	security.c	FUNCTION_12	CALL_1
0x4000fdf	            0x85c0	                           test eax, eax	       238	security.c	FUNCTION_12	CALL_1
0x4000fe1	            0x74e5	                            je 0x4000fc8	       238	security.c	FUNCTION_12	CALL_1
0x4000fe3	              0x5b	                                 pop rbx	       239	security.c	FUNCTION_12
0x4000fe4	              0x5d	                                 pop rbp	       239	security.c	FUNCTION_12
0x4000fe5	            0x415c	                                 pop r12	       239	security.c	FUNCTION_12
0x4000fe7	              0xc3	                                     ret	       239	security.c	FUNCTION_12
0x4000fe8	              0x5b	                                 pop rbx	       239	security.c	FUNCTION_12
0x4000fe9	            0x31c0	                            xor eax, eax	       237	security.c	FUNCTION_12
0x4000feb	              0x5d	                                 pop rbp	       239	security.c	FUNCTION_12
0x4000fec	            0x415c	                                 pop r12	       239	security.c	FUNCTION_12
0x4000fee	              0xc3	                                     ret	       239	security.c	FUNCTION_12
security_inode_readlink	IF,1:SWITCH,0:functions,0:CALL,4:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4001a30	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       686	security.c	FUNCTION_68	IF_1	CALL_3
0x4001a34	        0xf6400d02	                test byte [rax + 0xd], 2	       686	security.c	FUNCTION_68	IF_1	CALL_3
0x4001a38	            0x7533	                           jne 0x4001a6d	       686	security.c	FUNCTION_68	IF_1	CALL_3
0x4001a3a	              0x55	                                push rbp	       685	security.c	FUNCTION_68
0x4001a3b	              0x53	                                push rbx	       685	security.c	FUNCTION_68
0x4001a3c	          0x4889fd	                            mov rbp, rdi	       685	security.c	FUNCTION_68
0x4001a3f	    0x488b1d000000	            mov rbx, qword [0x04001a46] 	       688	security.c	FUNCTION_68	CALL_4
0x4001a46	          0x4885db	                           test rbx, rbx	       688	security.c	FUNCTION_68	CALL_4
0x4001a49	            0x750a	                           jne 0x4001a55	       688	security.c	FUNCTION_68	CALL_4
0x4001a4b	            0xeb1b	                           jmp 0x4001a68	       688	security.c	FUNCTION_68	CALL_4
0x4001a4d	          0x488b1b	                    mov rbx, qword [rbx]	       688	security.c	FUNCTION_68	CALL_4
0x4001a50	          0x4885db	                           test rbx, rbx	       688	security.c	FUNCTION_68	CALL_4
0x4001a53	            0x7413	                            je 0x4001a68	       688	security.c	FUNCTION_68	CALL_4
0x4001a55	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       688	security.c	FUNCTION_68	CALL_4
0x4001a59	          0x4889ef	                            mov rdi, rbp	       688	security.c	FUNCTION_68	CALL_4
0x4001a5c	      0xe800000000	                          call 0x4001a61	       688	security.c	FUNCTION_68	CALL_4
0x4001a61	            0x85c0	                           test eax, eax	       688	security.c	FUNCTION_68	CALL_4
0x4001a63	            0x74e8	                            je 0x4001a4d	       688	security.c	FUNCTION_68	CALL_4
0x4001a65	              0x5b	                                 pop rbx	       689	security.c	FUNCTION_68
0x4001a66	              0x5d	                                 pop rbp	       689	security.c	FUNCTION_68
0x4001a67	              0xc3	                                     ret	       689	security.c	FUNCTION_68
0x4001a68	            0x31c0	                            xor eax, eax	       687	security.c	FUNCTION_68	IF_1
0x4001a6a	              0x5b	                                 pop rbx	       689	security.c	FUNCTION_68
0x4001a6b	              0x5d	                                 pop rbp	       689	security.c	FUNCTION_68
0x4001a6c	              0xc3	                                     ret	       689	security.c	FUNCTION_68
0x4001a6d	            0x31c0	                            xor eax, eax	       687	security.c	FUNCTION_68	IF_1
0x4001a6f	              0xc3	                                     ret	       689	security.c	FUNCTION_68
security_init	IF,0:SWITCH,0:functions,0:CALL,6:FOR,1:WHILE,0:DO,0:ELSE,0	134
0x400006f	            0x85c0	                           test eax, eax	       373	security.c	FUNCTION_32	CALL_1
0x4000071	            0x74e5	                            je 0x4000058	       373	security.c	FUNCTION_32	CALL_1
0x4000073	              0x5b	                                 pop rbx	       374	security.c	FUNCTION_32
0x4000074	              0x5d	                                 pop rbp	       374	security.c	FUNCTION_32
0x4000075	            0x415c	                                 pop r12	       374	security.c	FUNCTION_32
0x4000077	              0xc3	                                     ret	       374	security.c	FUNCTION_32
0x4000078	              0x5b	                                 pop rbx	       374	security.c	FUNCTION_32
0x4000079	            0x31c0	                            xor eax, eax	       372	security.c	FUNCTION_32
0x400007b	              0x5d	                                 pop rbp	       374	security.c	FUNCTION_32
0x400007c	            0x415c	                                 pop r12	       374	security.c	FUNCTION_32
0x400007e	              0xc3	                                     ret	       374	security.c	FUNCTION_32
0x400007f	              0x90	                                     nop	       374	security.c	FUNCTION_32
0x4000080	            0x4156	                                push r14	       417	security.c	FUNCTION_40
0x4000082	            0x4155	                                push r13	       417	security.c	FUNCTION_40
0x4000084	          0x4989ce	                            mov r14, rcx	       417	security.c	FUNCTION_40
0x4000087	            0x4154	                                push r12	       417	security.c	FUNCTION_40
0x4000089	              0x55	                                push rbp	       417	security.c	FUNCTION_40
0x400008a	          0x4989fc	                            mov r12, rdi	       417	security.c	FUNCTION_40
0x400008d	              0x53	                                push rbx	       417	security.c	FUNCTION_40
0x400008e	          0x8b4610	            mov eax, dword [rsi + 0x10] 	       418	security.c	FUNCTION_40	CALL_1
0x4000091	          0x4889f5	                            mov rbp, rsi	       417	security.c	FUNCTION_40
0x4000094	          0x4989d5	                            mov r13, rdx	       417	security.c	FUNCTION_40
0x4000097	    0x488b1d000000	            mov rbx, qword [0x0400009e] 	       418	security.c	FUNCTION_40	CALL_1
0x400009e	            0x85c0	                           test eax, eax	       418	security.c	FUNCTION_40	CALL_1
0x40000a0	            0x7416	                            je 0x40000b8	       418	security.c	FUNCTION_40	CALL_1
0x40000a2	          0x4885db	                           test rbx, rbx	       418	security.c	FUNCTION_40	CALL_1
0x40000a5	            0x7516	                           jne 0x40000bd	       418	security.c	FUNCTION_40	CALL_1
0x40000a7	              0x5b	                                 pop rbx	       421	security.c	FUNCTION_40
0x40000a8	      0xb8a1ffffff	                     mov eax, 0xffffffa1	       418	security.c	FUNCTION_40	CALL_1
0x40000ad	              0x5d	                                 pop rbp	       421	security.c	FUNCTION_40
0x40000ae	            0x415c	                                 pop r12	       421	security.c	FUNCTION_40
0x40000b0	            0x415d	                                 pop r13	       421	security.c	FUNCTION_40
0x40000b2	            0x415e	                                 pop r14	       421	security.c	FUNCTION_40
0x40000b4	              0xc3	                                     ret	       421	security.c	FUNCTION_40
0x40000b5	          0x488b1b	                    mov rbx, qword [rbx]	       418	security.c	FUNCTION_40	CALL_1
0x40000b8	          0x4885db	                           test rbx, rbx	       418	security.c	FUNCTION_40	CALL_1
0x40000bb	            0x7422	                            je 0x40000df	       418	security.c	FUNCTION_40	CALL_1
0x40000bd	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       418	security.c	FUNCTION_40	CALL_1
0x40000c1	          0x4c89f1	                            mov rcx, r14	       418	security.c	FUNCTION_40	CALL_1
0x40000c4	          0x4c89ea	                            mov rdx, r13	       418	security.c	FUNCTION_40	CALL_1
0x40000c7	          0x4889ee	                            mov rsi, rbp	       418	security.c	FUNCTION_40	CALL_1
0x40000ca	          0x4c89e7	                            mov rdi, r12	       418	security.c	FUNCTION_40	CALL_1
0x40000cd	      0xe800000000	                          call 0x40000d2	       418	security.c	FUNCTION_40	CALL_1
0x40000d2	            0x85c0	                           test eax, eax	       418	security.c	FUNCTION_40	CALL_1
0x40000d4	            0x74df	                            je 0x40000b5	       418	security.c	FUNCTION_40	CALL_1
0x40000d6	              0x5b	                                 pop rbx	       421	security.c	FUNCTION_40
0x40000d7	              0x5d	                                 pop rbp	       421	security.c	FUNCTION_40
0x40000d8	            0x415c	                                 pop r12	       421	security.c	FUNCTION_40
0x40000da	            0x415d	                                 pop r13	       421	security.c	FUNCTION_40
0x40000dc	            0x415e	                                 pop r14	       421	security.c	FUNCTION_40
0x40000de	              0xc3	                                     ret	       421	security.c	FUNCTION_40
0x40000df	              0x5b	                                 pop rbx	       421	security.c	FUNCTION_40
0x40000e0	            0x31c0	                            xor eax, eax	       418	security.c	FUNCTION_40	CALL_1
0x40000e2	              0x5d	                                 pop rbp	       421	security.c	FUNCTION_40
0x40000e3	            0x415c	                                 pop r12	       421	security.c	FUNCTION_40
0x40000e5	            0x415d	                                 pop r13	       421	security.c	FUNCTION_40
0x40000e7	            0x415e	                                 pop r14	       421	security.c	FUNCTION_40
0x40000e9	              0xc3	                                     ret	       421	security.c	FUNCTION_40
0x40000ea	    0x660f1f440000	                    nop word [rax + rax]	       421	security.c	FUNCTION_40
0x40000f0	            0x4156	                                push r14	       428	security.c	FUNCTION_41
0x40000f2	            0x4155	                                push r13	       428	security.c	FUNCTION_41
0x40000f4	            0x4154	                                push r12	       428	security.c	FUNCTION_41
0x40000f6	              0x55	                                push rbp	       428	security.c	FUNCTION_41
0x40000f7	              0x53	                                push rbx	       428	security.c	FUNCTION_41
0x40000f8	    0x488b1d000000	            mov rbx, qword [0x040000ff] 	       429	security.c	FUNCTION_41	CALL_1
0x40000ff	          0x4885db	                           test rbx, rbx	       429	security.c	FUNCTION_41	CALL_1
0x4000102	            0x7438	                            je 0x400013c	       429	security.c	FUNCTION_41	CALL_1
0x4000104	          0x4989fe	                            mov r14, rdi	       429	security.c	FUNCTION_41	CALL_1
0x4000107	          0x4989f5	                            mov r13, rsi	       429	security.c	FUNCTION_41	CALL_1
0x400010a	          0x4989d4	                            mov r12, rdx	       429	security.c	FUNCTION_41	CALL_1
0x400010d	          0x4889cd	                            mov rbp, rcx	       429	security.c	FUNCTION_41	CALL_1
0x4000110	            0xeb08	                           jmp 0x400011a	       429	security.c	FUNCTION_41	CALL_1
0x4000112	          0x488b1b	                    mov rbx, qword [rbx]	       429	security.c	FUNCTION_41	CALL_1
0x4000115	          0x4885db	                           test rbx, rbx	       429	security.c	FUNCTION_41	CALL_1
0x4000118	            0x7422	                            je 0x400013c	       429	security.c	FUNCTION_41	CALL_1
0x400011a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       429	security.c	FUNCTION_41	CALL_1
0x400011e	          0x4889e9	                            mov rcx, rbp	       429	security.c	FUNCTION_41	CALL_1
0x4000121	          0x4c89e2	                            mov rdx, r12	       429	security.c	FUNCTION_41	CALL_1
0x4000124	          0x4c89ee	                            mov rsi, r13	       429	security.c	FUNCTION_41	CALL_1
0x4000127	          0x4c89f7	                            mov rdi, r14	       429	security.c	FUNCTION_41	CALL_1
0x400012a	      0xe800000000	                          call 0x400012f	       429	security.c	FUNCTION_41	CALL_1
0x400012f	            0x85c0	                           test eax, eax	       429	security.c	FUNCTION_41	CALL_1
0x4000131	            0x74df	                            je 0x4000112	       429	security.c	FUNCTION_41	CALL_1
0x4000133	              0x5b	                                 pop rbx	       431	security.c	FUNCTION_41
0x4000134	              0x5d	                                 pop rbp	       431	security.c	FUNCTION_41
0x4000135	            0x415c	                                 pop r12	       431	security.c	FUNCTION_41
0x4000137	            0x415d	                                 pop r13	       431	security.c	FUNCTION_41
0x4000139	            0x415e	                                 pop r14	       431	security.c	FUNCTION_41
0x400013b	              0xc3	                                     ret	       431	security.c	FUNCTION_41
0x400013c	              0x5b	                                 pop rbx	       431	security.c	FUNCTION_41
0x400013d	            0x31c0	                            xor eax, eax	       428	security.c	FUNCTION_41
0x400013f	              0x5d	                                 pop rbp	       431	security.c	FUNCTION_41
0x4000140	            0x415c	                                 pop r12	       431	security.c	FUNCTION_41
0x4000142	            0x415d	                                 pop r13	       431	security.c	FUNCTION_41
0x4000144	            0x415e	                                 pop r14	       431	security.c	FUNCTION_41
0x4000146	              0xc3	                                     ret	       431	security.c	FUNCTION_41
0x4000147	    0x660f1f840000	                    nop word [rax + rax]	       431	security.c	FUNCTION_41
0x4000150	            0x4154	                                push r12	       435	security.c	FUNCTION_42
0x4000152	              0x55	                                push rbp	       435	security.c	FUNCTION_42
0x4000153	          0x4989fc	                            mov r12, rdi	       435	security.c	FUNCTION_42
0x4000156	              0x53	                                push rbx	       435	security.c	FUNCTION_42
0x4000157	    0x488b1d000000	            mov rbx, qword [0x0400015e] 	       436	security.c	FUNCTION_42	CALL_1
0x400015e	          0x4889f5	                            mov rbp, rsi	       436	security.c	FUNCTION_42	CALL_1
0x4000161	          0x4885db	                           test rbx, rbx	       436	security.c	FUNCTION_42	CALL_1
0x4000164	            0x750a	                           jne 0x4000170	       436	security.c	FUNCTION_42	CALL_1
0x4000166	            0xeb20	                           jmp 0x4000188	       436	security.c	FUNCTION_42	CALL_1
0x4000168	          0x488b1b	                    mov rbx, qword [rbx]	       436	security.c	FUNCTION_42	CALL_1
0x400016b	          0x4885db	                           test rbx, rbx	       436	security.c	FUNCTION_42	CALL_1
0x400016e	            0x7418	                            je 0x4000188	       436	security.c	FUNCTION_42	CALL_1
0x4000170	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       436	security.c	FUNCTION_42	CALL_1
0x4000174	          0x4889ee	                            mov rsi, rbp	       436	security.c	FUNCTION_42	CALL_1
0x4000177	          0x4c89e7	                            mov rdi, r12	       436	security.c	FUNCTION_42	CALL_1
0x400017a	      0xe800000000	                          call 0x400017f	       436	security.c	FUNCTION_42	CALL_1
0x400017f	            0x85c0	                           test eax, eax	       436	security.c	FUNCTION_42	CALL_1
0x4000181	            0x74e5	                            je 0x4000168	       436	security.c	FUNCTION_42	CALL_1
0x4000183	              0x5b	                                 pop rbx	       437	security.c	FUNCTION_42
0x4000184	              0x5d	                                 pop rbp	       437	security.c	FUNCTION_42
0x4000185	            0x415c	                                 pop r12	       437	security.c	FUNCTION_42
0x4000187	              0xc3	                                     ret	       437	security.c	FUNCTION_42
0x4000188	              0x5b	                                 pop rbx	       437	security.c	FUNCTION_42
0x4000189	            0x31c0	                            xor eax, eax	       435	security.c	FUNCTION_42
0x400018b	              0x5d	                                 pop rbp	       437	security.c	FUNCTION_42
0x400018c	            0x415c	                                 pop r12	       437	security.c	FUNCTION_42
0x400018e	              0xc3	                                     ret	       437	security.c	FUNCTION_42
0x400018f	              0x90	                                     nop	       437	security.c	FUNCTION_42
0x4000190	            0x4157	                                push r15	       455	security.c	FUNCTION_45
0x4000192	            0x4156	                                push r14	       455	security.c	FUNCTION_45
0x4000194	      0xb8a1ffffff	                     mov eax, 0xffffffa1	       455	security.c	FUNCTION_45
0x4000199	            0x4155	                                push r13	       455	security.c	FUNCTION_45
0x400019b	            0x4154	                                push r12	       455	security.c	FUNCTION_45
0x400019d	              0x55	                                push rbp	       455	security.c	FUNCTION_45
0x400019e	              0x53	                                push rbx	       455	security.c	FUNCTION_45
0x400019f	    0x488b1d000000	            mov rbx, qword [0x040001a6] 	       456	security.c	FUNCTION_45	CALL_1
0x40001a6	              0x48	                                 invalid	       456	security.c	FUNCTION_45	CALL_1
security_inet_csk_clone	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	19
0x4003510	            0x4154	                                push r12	      1480	security.c	FUNCTION_185
0x4003512	              0x55	                                push rbp	      1480	security.c	FUNCTION_185
0x4003513	              0x53	                                push rbx	      1480	security.c	FUNCTION_185
0x4003514	    0x488b1d000000	            mov rbx, qword [0x0400351b] 	      1481	security.c	FUNCTION_185	CALL_1
0x400351b	          0x4885db	                           test rbx, rbx	      1481	security.c	FUNCTION_185	CALL_1
0x400351e	            0x741d	                            je 0x400353d	      1481	security.c	FUNCTION_185	CALL_1
0x4003520	          0x4989fc	                            mov r12, rdi	      1481	security.c	FUNCTION_185	CALL_1
0x4003523	          0x4889f5	                            mov rbp, rsi	      1481	security.c	FUNCTION_185	CALL_1
0x4003526	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1481	security.c	FUNCTION_185	CALL_1
0x400352a	          0x4889ee	                            mov rsi, rbp	      1481	security.c	FUNCTION_185	CALL_1
0x400352d	          0x4c89e7	                            mov rdi, r12	      1481	security.c	FUNCTION_185	CALL_1
0x4003530	      0xe800000000	                          call 0x4003535	      1481	security.c	FUNCTION_185	CALL_1
0x4003535	          0x488b1b	                    mov rbx, qword [rbx]	      1481	security.c	FUNCTION_185	CALL_1
0x4003538	          0x4885db	                           test rbx, rbx	      1481	security.c	FUNCTION_185	CALL_1
0x400353b	            0x75e9	                           jne 0x4003526	      1481	security.c	FUNCTION_185	CALL_1
0x400353d	              0x5b	                                 pop rbx	      1482	security.c	FUNCTION_185
0x400353e	              0x5d	                                 pop rbp	      1482	security.c	FUNCTION_185
0x400353f	            0x415c	                                 pop r12	      1482	security.c	FUNCTION_185
0x4003541	              0xc3	                                     ret	      1482	security.c	FUNCTION_185
security_binder_set_context_mgr	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	22
0x4000f70	              0x55	                                push rbp	       231	security.c	FUNCTION_11
0x4000f71	              0x53	                                push rbx	       231	security.c	FUNCTION_11
0x4000f72	          0x4889fd	                            mov rbp, rdi	       231	security.c	FUNCTION_11
0x4000f75	    0x488b1d000000	            mov rbx, qword [0x04000f7c] 	       232	security.c	FUNCTION_11	CALL_1
0x4000f7c	          0x4885db	                           test rbx, rbx	       232	security.c	FUNCTION_11	CALL_1
0x4000f7f	            0x750a	                           jne 0x4000f8b	       232	security.c	FUNCTION_11	CALL_1
0x4000f81	            0xeb1b	                           jmp 0x4000f9e	       232	security.c	FUNCTION_11	CALL_1
0x4000f83	          0x488b1b	                    mov rbx, qword [rbx]	       232	security.c	FUNCTION_11	CALL_1
0x4000f86	          0x4885db	                           test rbx, rbx	       232	security.c	FUNCTION_11	CALL_1
0x4000f89	            0x7413	                            je 0x4000f9e	       232	security.c	FUNCTION_11	CALL_1
0x4000f8b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       232	security.c	FUNCTION_11	CALL_1
0x4000f8f	          0x4889ef	                            mov rdi, rbp	       232	security.c	FUNCTION_11	CALL_1
0x4000f92	      0xe800000000	                          call 0x4000f97	       232	security.c	FUNCTION_11	CALL_1
0x4000f97	            0x85c0	                           test eax, eax	       232	security.c	FUNCTION_11	CALL_1
0x4000f99	            0x74e8	                            je 0x4000f83	       232	security.c	FUNCTION_11	CALL_1
0x4000f9b	              0x5b	                                 pop rbx	       233	security.c	FUNCTION_11
0x4000f9c	              0x5d	                                 pop rbp	       233	security.c	FUNCTION_11
0x4000f9d	              0xc3	                                     ret	       233	security.c	FUNCTION_11
0x4000f9e	            0x31c0	                            xor eax, eax	       231	security.c	FUNCTION_11
0x4000fa0	              0x5b	                                 pop rbx	       233	security.c	FUNCTION_11
0x4000fa1	              0x5d	                                 pop rbp	       233	security.c	FUNCTION_11
0x4000fa2	              0xc3	                                     ret	       233	security.c	FUNCTION_11
security_req_classify_flow	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	19
0x40007e0	            0x4154	                                push r12	      1460	security.c	FUNCTION_182
0x40007e2	              0x55	                                push rbp	      1460	security.c	FUNCTION_182
0x40007e3	              0x53	                                push rbx	      1460	security.c	FUNCTION_182
0x40007e4	    0x488b1d000000	            mov rbx, qword [0x040007eb] 	      1461	security.c	FUNCTION_182	CALL_1
0x40007eb	          0x4885db	                           test rbx, rbx	      1461	security.c	FUNCTION_182	CALL_1
0x40007ee	            0x741d	                            je 0x400080d	      1461	security.c	FUNCTION_182	CALL_1
0x40007f0	          0x4989fc	                            mov r12, rdi	      1461	security.c	FUNCTION_182	CALL_1
0x40007f3	          0x4889f5	                            mov rbp, rsi	      1461	security.c	FUNCTION_182	CALL_1
0x40007f6	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1461	security.c	FUNCTION_182	CALL_1
0x40007fa	          0x4889ee	                            mov rsi, rbp	      1461	security.c	FUNCTION_182	CALL_1
0x40007fd	          0x4c89e7	                            mov rdi, r12	      1461	security.c	FUNCTION_182	CALL_1
0x4000800	      0xe800000000	                          call 0x4000805	      1461	security.c	FUNCTION_182	CALL_1
0x4000805	          0x488b1b	                    mov rbx, qword [rbx]	      1461	security.c	FUNCTION_182	CALL_1
0x4000808	          0x4885db	                           test rbx, rbx	      1461	security.c	FUNCTION_182	CALL_1
0x400080b	            0x75e9	                           jne 0x40007f6	      1461	security.c	FUNCTION_182	CALL_1
0x400080d	              0x5b	                                 pop rbx	      1462	security.c	FUNCTION_182
0x400080e	              0x5d	                                 pop rbp	      1462	security.c	FUNCTION_182
0x400080f	            0x415c	                                 pop r12	      1462	security.c	FUNCTION_182
0x4000811	              0xc3	                                     ret	      1462	security.c	FUNCTION_182
security_sb_umount	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x40016c0	            0x4154	                                push r12	       404	security.c	FUNCTION_38
0x40016c2	              0x55	                                push rbp	       404	security.c	FUNCTION_38
0x40016c3	          0x4989fc	                            mov r12, rdi	       404	security.c	FUNCTION_38
0x40016c6	              0x53	                                push rbx	       404	security.c	FUNCTION_38
0x40016c7	    0x488b1d000000	            mov rbx, qword [0x040016ce] 	       405	security.c	FUNCTION_38	CALL_1
0x40016ce	            0x89f5	                            mov ebp, esi	       405	security.c	FUNCTION_38	CALL_1
0x40016d0	          0x4885db	                           test rbx, rbx	       405	security.c	FUNCTION_38	CALL_1
0x40016d3	            0x750a	                           jne 0x40016df	       405	security.c	FUNCTION_38	CALL_1
0x40016d5	            0xeb1f	                           jmp 0x40016f6	       405	security.c	FUNCTION_38	CALL_1
0x40016d7	          0x488b1b	                    mov rbx, qword [rbx]	       405	security.c	FUNCTION_38	CALL_1
0x40016da	          0x4885db	                           test rbx, rbx	       405	security.c	FUNCTION_38	CALL_1
0x40016dd	            0x7417	                            je 0x40016f6	       405	security.c	FUNCTION_38	CALL_1
0x40016df	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       405	security.c	FUNCTION_38	CALL_1
0x40016e3	            0x89ee	                            mov esi, ebp	       405	security.c	FUNCTION_38	CALL_1
0x40016e5	          0x4c89e7	                            mov rdi, r12	       405	security.c	FUNCTION_38	CALL_1
0x40016e8	      0xe800000000	                          call 0x40016ed	       405	security.c	FUNCTION_38	CALL_1
0x40016ed	            0x85c0	                           test eax, eax	       405	security.c	FUNCTION_38	CALL_1
0x40016ef	            0x74e6	                            je 0x40016d7	       405	security.c	FUNCTION_38	CALL_1
0x40016f1	              0x5b	                                 pop rbx	       406	security.c	FUNCTION_38
0x40016f2	              0x5d	                                 pop rbp	       406	security.c	FUNCTION_38
0x40016f3	            0x415c	                                 pop r12	       406	security.c	FUNCTION_38
0x40016f5	              0xc3	                                     ret	       406	security.c	FUNCTION_38
0x40016f6	              0x5b	                                 pop rbx	       406	security.c	FUNCTION_38
0x40016f7	            0x31c0	                            xor eax, eax	       404	security.c	FUNCTION_38
0x40016f9	              0x5d	                                 pop rbp	       406	security.c	FUNCTION_38
0x40016fa	            0x415c	                                 pop r12	       406	security.c	FUNCTION_38
0x40016fc	              0xc3	                                     ret	       406	security.c	FUNCTION_38
security_inode_getsecurity	IF,1:SWITCH,0:functions,1:CALL,2:FOR,0:WHILE,0:DO,0:ELSE,0	41
0x4001dd0	        0xf6470d02	                test byte [rdi + 0xd], 2	       809	security.c	FUNCTION_80	IF_1	CALL_2
0x4001dd4	            0x755a	                           jne 0x4001e30	       809	security.c	FUNCTION_80	IF_1	CALL_2
0x4001dd6	            0x4156	                                push r14	       805	security.c	FUNCTION_80
0x4001dd8	            0x4155	                                push r13	       805	security.c	FUNCTION_80
0x4001dda	            0x4154	                                push r12	       805	security.c	FUNCTION_80
0x4001ddc	              0x55	                                push rbp	       805	security.c	FUNCTION_80
0x4001ddd	              0x53	                                push rbx	       805	security.c	FUNCTION_80
0x4001dde	    0x488b1d000000	            mov rbx, qword [0x04001de5] 	       814	security.c	FUNCTION_80	FUNCTION_1
0x4001de5	          0x4885db	                           test rbx, rbx	       814	security.c	FUNCTION_80	FUNCTION_1
0x4001de8	            0x7438	                            je 0x4001e22	       814	security.c	FUNCTION_80	FUNCTION_1
0x4001dea	          0x4989d6	                            mov r14, rdx	       814	security.c	FUNCTION_80	FUNCTION_1
0x4001ded	          0x4989f5	                            mov r13, rsi	       814	security.c	FUNCTION_80	FUNCTION_1
0x4001df0	          0x4989fc	                            mov r12, rdi	       814	security.c	FUNCTION_80	FUNCTION_1
0x4001df3	           0xfb6e9	                           movzx ebp, cl	       814	security.c	FUNCTION_80	FUNCTION_1
0x4001df6	            0xeb08	                           jmp 0x4001e00	       814	security.c	FUNCTION_80	FUNCTION_1
0x4001df8	          0x488b1b	                    mov rbx, qword [rbx]	       814	security.c	FUNCTION_80	FUNCTION_1
0x4001dfb	          0x4885db	                           test rbx, rbx	       814	security.c	FUNCTION_80	FUNCTION_1
0x4001dfe	            0x7422	                            je 0x4001e22	       814	security.c	FUNCTION_80	FUNCTION_1
0x4001e00	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       815	security.c	FUNCTION_80	FUNCTION_1	CALL_1
0x4001e04	            0x89e9	                            mov ecx, ebp	       815	security.c	FUNCTION_80	FUNCTION_1	CALL_1
0x4001e06	          0x4c89f2	                            mov rdx, r14	       815	security.c	FUNCTION_80	FUNCTION_1	CALL_1
0x4001e09	          0x4c89ee	                            mov rsi, r13	       815	security.c	FUNCTION_80	FUNCTION_1	CALL_1
0x4001e0c	          0x4c89e7	                            mov rdi, r12	       815	security.c	FUNCTION_80	FUNCTION_1	CALL_1
0x4001e0f	      0xe800000000	                          call 0x4001e14	       815	security.c	FUNCTION_80	FUNCTION_1	CALL_1
0x4001e14	          0x83f8a1	             cmp eax, 0xffffffffffffffa1	       816	security.c	FUNCTION_80	FUNCTION_1	IF_1
0x4001e17	            0x74df	                            je 0x4001df8	       816	security.c	FUNCTION_80	FUNCTION_1	IF_1
0x4001e19	              0x5b	                                 pop rbx	       820	security.c	FUNCTION_80
0x4001e1a	              0x5d	                                 pop rbp	       820	security.c	FUNCTION_80
0x4001e1b	            0x415c	                                 pop r12	       820	security.c	FUNCTION_80
0x4001e1d	            0x415d	                                 pop r13	       820	security.c	FUNCTION_80
0x4001e1f	            0x415e	                                 pop r14	       820	security.c	FUNCTION_80
0x4001e21	              0xc3	                                     ret	       820	security.c	FUNCTION_80
0x4001e22	              0x5b	                                 pop rbx	       820	security.c	FUNCTION_80
0x4001e23	      0xb8a1ffffff	                     mov eax, 0xffffffa1	       810	security.c	FUNCTION_80	IF_1
0x4001e28	              0x5d	                                 pop rbp	       820	security.c	FUNCTION_80
0x4001e29	            0x415c	                                 pop r12	       820	security.c	FUNCTION_80
0x4001e2b	            0x415d	                                 pop r13	       820	security.c	FUNCTION_80
0x4001e2d	            0x415e	                                 pop r14	       820	security.c	FUNCTION_80
0x4001e2f	              0xc3	                                     ret	       820	security.c	FUNCTION_80
0x4001e30	      0xb8a1ffffff	                     mov eax, 0xffffffa1	       810	security.c	FUNCTION_80	IF_1
0x4001e35	              0xc3	                                     ret	       820	security.c	FUNCTION_80
security_secctx_to_secid	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	33
0x4000490	            0x4155	                                push r13	      1299	security.c	FUNCTION_154
0x4000492	            0x4154	                                push r12	      1299	security.c	FUNCTION_154
0x4000494	              0x55	                                push rbp	      1299	security.c	FUNCTION_154
0x4000495	              0x53	                                push rbx	      1299	security.c	FUNCTION_154
0x4000496	    0xc70200000000	                      mov dword [rdx], 0	      1300	security.c	FUNCTION_154
0x400049c	    0x488b1d000000	            mov rbx, qword [0x040004a3] 	      1301	security.c	FUNCTION_154	CALL_1
0x40004a3	          0x4885db	                           test rbx, rbx	      1301	security.c	FUNCTION_154	CALL_1
0x40004a6	            0x7430	                            je 0x40004d8	      1301	security.c	FUNCTION_154	CALL_1
0x40004a8	          0x4989fd	                            mov r13, rdi	      1301	security.c	FUNCTION_154	CALL_1
0x40004ab	          0x4189f4	                           mov r12d, esi	      1301	security.c	FUNCTION_154	CALL_1
0x40004ae	          0x4889d5	                            mov rbp, rdx	      1301	security.c	FUNCTION_154	CALL_1
0x40004b1	            0xeb08	                           jmp 0x40004bb	      1301	security.c	FUNCTION_154	CALL_1
0x40004b3	          0x488b1b	                    mov rbx, qword [rbx]	      1301	security.c	FUNCTION_154	CALL_1
0x40004b6	          0x4885db	                           test rbx, rbx	      1301	security.c	FUNCTION_154	CALL_1
0x40004b9	            0x741d	                            je 0x40004d8	      1301	security.c	FUNCTION_154	CALL_1
0x40004bb	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1301	security.c	FUNCTION_154	CALL_1
0x40004bf	          0x4889ea	                            mov rdx, rbp	      1301	security.c	FUNCTION_154	CALL_1
0x40004c2	          0x4489e6	                           mov esi, r12d	      1301	security.c	FUNCTION_154	CALL_1
0x40004c5	          0x4c89ef	                            mov rdi, r13	      1301	security.c	FUNCTION_154	CALL_1
0x40004c8	      0xe800000000	                          call 0x40004cd	      1301	security.c	FUNCTION_154	CALL_1
0x40004cd	            0x85c0	                           test eax, eax	      1301	security.c	FUNCTION_154	CALL_1
0x40004cf	            0x74e2	                            je 0x40004b3	      1301	security.c	FUNCTION_154	CALL_1
0x40004d1	              0x5b	                                 pop rbx	      1302	security.c	FUNCTION_154
0x40004d2	              0x5d	                                 pop rbp	      1302	security.c	FUNCTION_154
0x40004d3	            0x415c	                                 pop r12	      1302	security.c	FUNCTION_154
0x40004d5	            0x415d	                                 pop r13	      1302	security.c	FUNCTION_154
0x40004d7	              0xc3	                                     ret	      1302	security.c	FUNCTION_154
0x40004d8	              0x5b	                                 pop rbx	      1302	security.c	FUNCTION_154
0x40004d9	            0x31c0	                            xor eax, eax	      1299	security.c	FUNCTION_154
0x40004db	              0x5d	                                 pop rbp	      1302	security.c	FUNCTION_154
0x40004dc	            0x415c	                                 pop r12	      1302	security.c	FUNCTION_154
0x40004de	            0x415d	                                 pop r13	      1302	security.c	FUNCTION_154
0x40004e0	              0xc3	                                     ret	      1302	security.c	FUNCTION_154
security_shm_free	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	15
0x4002d10	              0x55	                                push rbp	      1217	security.c	FUNCTION_139
0x4002d11	              0x53	                                push rbx	      1217	security.c	FUNCTION_139
0x4002d12	    0x488b1d000000	            mov rbx, qword [0x04002d19] 	      1218	security.c	FUNCTION_139	CALL_1
0x4002d19	          0x4885db	                           test rbx, rbx	      1218	security.c	FUNCTION_139	CALL_1
0x4002d1c	            0x7417	                            je 0x4002d35	      1218	security.c	FUNCTION_139	CALL_1
0x4002d1e	          0x4889fd	                            mov rbp, rdi	      1218	security.c	FUNCTION_139	CALL_1
0x4002d21	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1218	security.c	FUNCTION_139	CALL_1
0x4002d25	          0x4889ef	                            mov rdi, rbp	      1218	security.c	FUNCTION_139	CALL_1
0x4002d28	      0xe800000000	                          call 0x4002d2d	      1218	security.c	FUNCTION_139	CALL_1
0x4002d2d	          0x488b1b	                    mov rbx, qword [rbx]	      1218	security.c	FUNCTION_139	CALL_1
0x4002d30	          0x4885db	                           test rbx, rbx	      1218	security.c	FUNCTION_139	CALL_1
0x4002d33	            0x75ec	                           jne 0x4002d21	      1218	security.c	FUNCTION_139	CALL_1
0x4002d35	              0x5b	                                 pop rbx	      1219	security.c	FUNCTION_139
0x4002d36	              0x5d	                                 pop rbp	      1219	security.c	FUNCTION_139
0x4002d37	              0xc3	                                     ret	      1219	security.c	FUNCTION_139
security_sk_classify_flow	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	19
0x40007a0	            0x4154	                                push r12	      1454	security.c	FUNCTION_181
0x40007a2	              0x55	                                push rbp	      1454	security.c	FUNCTION_181
0x40007a3	              0x53	                                push rbx	      1454	security.c	FUNCTION_181
0x40007a4	    0x488b1d000000	            mov rbx, qword [0x040007ab] 	      1455	security.c	FUNCTION_181	CALL_1
0x40007ab	          0x4885db	                           test rbx, rbx	      1455	security.c	FUNCTION_181	CALL_1
0x40007ae	            0x741e	                            je 0x40007ce	      1455	security.c	FUNCTION_181	CALL_1
0x40007b0	        0x488d6e10	                   lea rbp, [rsi + 0x10]	      1455	security.c	FUNCTION_181	CALL_1
0x40007b4	          0x4989fc	                            mov r12, rdi	      1455	security.c	FUNCTION_181	CALL_1
0x40007b7	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1455	security.c	FUNCTION_181	CALL_1
0x40007bb	          0x4889ee	                            mov rsi, rbp	      1455	security.c	FUNCTION_181	CALL_1
0x40007be	          0x4c89e7	                            mov rdi, r12	      1455	security.c	FUNCTION_181	CALL_1
0x40007c1	      0xe800000000	                          call 0x40007c6	      1455	security.c	FUNCTION_181	CALL_1
0x40007c6	          0x488b1b	                    mov rbx, qword [rbx]	      1455	security.c	FUNCTION_181	CALL_1
0x40007c9	          0x4885db	                           test rbx, rbx	      1455	security.c	FUNCTION_181	CALL_1
0x40007cc	            0x75e9	                           jne 0x40007b7	      1455	security.c	FUNCTION_181	CALL_1
0x40007ce	              0x5b	                                 pop rbx	      1456	security.c	FUNCTION_181
0x40007cf	              0x5d	                                 pop rbp	      1456	security.c	FUNCTION_181
0x40007d0	            0x415c	                                 pop r12	      1456	security.c	FUNCTION_181
0x40007d2	              0xc3	                                     ret	      1456	security.c	FUNCTION_181
security_capable	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	33
0x40011d0	            0x4155	                                push r13	       283	security.c	FUNCTION_19
0x40011d2	            0x4154	                                push r12	       283	security.c	FUNCTION_19
0x40011d4	              0x55	                                push rbp	       283	security.c	FUNCTION_19
0x40011d5	              0x53	                                push rbx	       283	security.c	FUNCTION_19
0x40011d6	    0x488b1d000000	            mov rbx, qword [0x040011dd] 	       284	security.c	FUNCTION_19	CALL_1
0x40011dd	          0x4885db	                           test rbx, rbx	       284	security.c	FUNCTION_19	CALL_1
0x40011e0	            0x7433	                            je 0x4001215	       284	security.c	FUNCTION_19	CALL_1
0x40011e2	          0x4989fd	                            mov r13, rdi	       284	security.c	FUNCTION_19	CALL_1
0x40011e5	          0x4989f4	                            mov r12, rsi	       284	security.c	FUNCTION_19	CALL_1
0x40011e8	            0x89d5	                            mov ebp, edx	       284	security.c	FUNCTION_19	CALL_1
0x40011ea	            0xeb08	                           jmp 0x40011f4	       284	security.c	FUNCTION_19	CALL_1
0x40011ec	          0x488b1b	                    mov rbx, qword [rbx]	       284	security.c	FUNCTION_19	CALL_1
0x40011ef	          0x4885db	                           test rbx, rbx	       284	security.c	FUNCTION_19	CALL_1
0x40011f2	            0x7421	                            je 0x4001215	       284	security.c	FUNCTION_19	CALL_1
0x40011f4	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       284	security.c	FUNCTION_19	CALL_1
0x40011f8	      0xb901000000	                              mov ecx, 1	       284	security.c	FUNCTION_19	CALL_1
0x40011fd	            0x89ea	                            mov edx, ebp	       284	security.c	FUNCTION_19	CALL_1
0x40011ff	          0x4c89e6	                            mov rsi, r12	       284	security.c	FUNCTION_19	CALL_1
0x4001202	          0x4c89ef	                            mov rdi, r13	       284	security.c	FUNCTION_19	CALL_1
0x4001205	      0xe800000000	                          call 0x400120a	       284	security.c	FUNCTION_19	CALL_1
0x400120a	            0x85c0	                           test eax, eax	       284	security.c	FUNCTION_19	CALL_1
0x400120c	            0x74de	                            je 0x40011ec	       284	security.c	FUNCTION_19	CALL_1
0x400120e	              0x5b	                                 pop rbx	       285	security.c	FUNCTION_19
0x400120f	              0x5d	                                 pop rbp	       285	security.c	FUNCTION_19
0x4001210	            0x415c	                                 pop r12	       285	security.c	FUNCTION_19
0x4001212	            0x415d	                                 pop r13	       285	security.c	FUNCTION_19
0x4001214	              0xc3	                                     ret	       285	security.c	FUNCTION_19
0x4001215	              0x5b	                                 pop rbx	       285	security.c	FUNCTION_19
0x4001216	            0x31c0	                            xor eax, eax	       283	security.c	FUNCTION_19
0x4001218	              0x5d	                                 pop rbp	       285	security.c	FUNCTION_19
0x4001219	            0x415c	                                 pop r12	       285	security.c	FUNCTION_19
0x400121b	            0x415d	                                 pop r13	       285	security.c	FUNCTION_19
0x400121d	              0xc3	                                     ret	       285	security.c	FUNCTION_19
security_socket_getpeersec_stream	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	31
0x4003440	            0x4156	                                push r14	      1425	security.c	FUNCTION_176
0x4003442	            0x4155	                                push r13	      1425	security.c	FUNCTION_176
0x4003444	      0xb8a4ffffff	                     mov eax, 0xffffffa4	      1425	security.c	FUNCTION_176
0x4003449	            0x4154	                                push r12	      1425	security.c	FUNCTION_176
0x400344b	              0x55	                                push rbp	      1425	security.c	FUNCTION_176
0x400344c	              0x53	                                push rbx	      1425	security.c	FUNCTION_176
0x400344d	    0x488b1d000000	            mov rbx, qword [0x04003454] 	      1426	security.c	FUNCTION_176	CALL_1
0x4003454	          0x4885db	                           test rbx, rbx	      1426	security.c	FUNCTION_176	CALL_1
0x4003457	            0x742d	                            je 0x4003486	      1426	security.c	FUNCTION_176	CALL_1
0x4003459	          0x4989fe	                            mov r14, rdi	      1426	security.c	FUNCTION_176	CALL_1
0x400345c	          0x4989f5	                            mov r13, rsi	      1426	security.c	FUNCTION_176	CALL_1
0x400345f	          0x4989d4	                            mov r12, rdx	      1426	security.c	FUNCTION_176	CALL_1
0x4003462	            0x89cd	                            mov ebp, ecx	      1426	security.c	FUNCTION_176	CALL_1
0x4003464	            0xeb08	                           jmp 0x400346e	      1426	security.c	FUNCTION_176	CALL_1
0x4003466	          0x488b1b	                    mov rbx, qword [rbx]	      1426	security.c	FUNCTION_176	CALL_1
0x4003469	          0x4885db	                           test rbx, rbx	      1426	security.c	FUNCTION_176	CALL_1
0x400346c	            0x7418	                            je 0x4003486	      1426	security.c	FUNCTION_176	CALL_1
0x400346e	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1426	security.c	FUNCTION_176	CALL_1
0x4003472	            0x89e9	                            mov ecx, ebp	      1426	security.c	FUNCTION_176	CALL_1
0x4003474	          0x4c89e2	                            mov rdx, r12	      1426	security.c	FUNCTION_176	CALL_1
0x4003477	          0x4c89ee	                            mov rsi, r13	      1426	security.c	FUNCTION_176	CALL_1
0x400347a	          0x4c89f7	                            mov rdi, r14	      1426	security.c	FUNCTION_176	CALL_1
0x400347d	      0xe800000000	                          call 0x4003482	      1426	security.c	FUNCTION_176	CALL_1
0x4003482	            0x85c0	                           test eax, eax	      1426	security.c	FUNCTION_176	CALL_1
0x4003484	            0x74e0	                            je 0x4003466	      1426	security.c	FUNCTION_176	CALL_1
0x4003486	              0x5b	                                 pop rbx	      1428	security.c	FUNCTION_176
0x4003487	              0x5d	                                 pop rbp	      1428	security.c	FUNCTION_176
0x4003488	            0x415c	                                 pop r12	      1428	security.c	FUNCTION_176
0x400348a	            0x415d	                                 pop r13	      1428	security.c	FUNCTION_176
0x400348c	            0x415e	                                 pop r14	      1428	security.c	FUNCTION_176
0x400348e	              0xc3	                                     ret	      1428	security.c	FUNCTION_176
security_audit_rule_match	IF,0:SWITCH,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0	42
0x4003740	            0x4157	                                push r15	      1737	security.c	FUNCTION_222
0x4003742	            0x4156	                                push r14	      1737	security.c	FUNCTION_222
0x4003744	            0x4155	                                push r13	      1737	security.c	FUNCTION_222
0x4003746	            0x4154	                                push r12	      1737	security.c	FUNCTION_222
0x4003748	              0x55	                                push rbp	      1737	security.c	FUNCTION_222
0x4003749	              0x53	                                push rbx	      1737	security.c	FUNCTION_222
0x400374a	    0x488b1d000000	            mov rbx, qword [0x04003751] 	      1738	security.c	FUNCTION_222	CALL_1
0x4003751	          0x4885db	                           test rbx, rbx	      1738	security.c	FUNCTION_222	CALL_1
0x4003754	            0x7440	                            je 0x4003796	      1738	security.c	FUNCTION_222	CALL_1
0x4003756	          0x4189ff	                           mov r15d, edi	      1738	security.c	FUNCTION_222	CALL_1
0x4003759	          0x4189f6	                           mov r14d, esi	      1738	security.c	FUNCTION_222	CALL_1
0x400375c	          0x4189d5	                           mov r13d, edx	      1738	security.c	FUNCTION_222	CALL_1
0x400375f	          0x4989cc	                            mov r12, rcx	      1738	security.c	FUNCTION_222	CALL_1
0x4003762	          0x4c89c5	                             mov rbp, r8	      1738	security.c	FUNCTION_222	CALL_1
0x4003765	            0xeb08	                           jmp 0x400376f	      1738	security.c	FUNCTION_222	CALL_1
0x4003767	          0x488b1b	                    mov rbx, qword [rbx]	      1738	security.c	FUNCTION_222	CALL_1
0x400376a	          0x4885db	                           test rbx, rbx	      1738	security.c	FUNCTION_222	CALL_1
0x400376d	            0x7427	                            je 0x4003796	      1738	security.c	FUNCTION_222	CALL_1
0x400376f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1738	security.c	FUNCTION_222	CALL_1
0x4003773	          0x4989e8	                             mov r8, rbp	      1738	security.c	FUNCTION_222	CALL_1
0x4003776	          0x4c89e1	                            mov rcx, r12	      1738	security.c	FUNCTION_222	CALL_1
0x4003779	          0x4489ea	                           mov edx, r13d	      1738	security.c	FUNCTION_222	CALL_1
0x400377c	          0x4489f6	                           mov esi, r14d	      1738	security.c	FUNCTION_222	CALL_1
0x400377f	          0x4489ff	                           mov edi, r15d	      1738	security.c	FUNCTION_222	CALL_1
0x4003782	      0xe800000000	                          call 0x4003787	      1738	security.c	FUNCTION_222	CALL_1
0x4003787	            0x85c0	                           test eax, eax	      1738	security.c	FUNCTION_222	CALL_1
0x4003789	            0x74dc	                            je 0x4003767	      1738	security.c	FUNCTION_222	CALL_1
0x400378b	              0x5b	                                 pop rbx	      1740	security.c	FUNCTION_222
0x400378c	              0x5d	                                 pop rbp	      1740	security.c	FUNCTION_222
0x400378d	            0x415c	                                 pop r12	      1740	security.c	FUNCTION_222
0x400378f	            0x415d	                                 pop r13	      1740	security.c	FUNCTION_222
0x4003791	            0x415e	                                 pop r14	      1740	security.c	FUNCTION_222
0x4003793	            0x415f	                                 pop r15	      1740	security.c	FUNCTION_222
0x4003795	              0xc3	                                     ret	      1740	security.c	FUNCTION_222
0x4003796	              0x5b	                                 pop rbx	      1740	security.c	FUNCTION_222
0x4003797	            0x31c0	                            xor eax, eax	      1737	security.c	FUNCTION_222
0x4003799	              0x5d	                                 pop rbp	      1740	security.c	FUNCTION_222
0x400379a	            0x415c	                                 pop r12	      1740	security.c	FUNCTION_222
0x400379c	            0x415d	                                 pop r13	      1740	security.c	FUNCTION_222
0x400379e	            0x415e	                                 pop r14	      1740	security.c	FUNCTION_222
0x40037a0	            0x415f	                                 pop r15	      1740	security.c	FUNCTION_222
0x40037a2	              0xc3	                                     ret	      1740	security.c	FUNCTION_222
security_inode_listxattr	IF,1:SWITCH,0:functions,0:CALL,4:FOR,0:WHILE,0:DO,0:ELSE,0	27
0x4001cb0	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       768	security.c	FUNCTION_76	IF_1	CALL_3
0x4001cb4	        0xf6400d02	                test byte [rax + 0xd], 2	       768	security.c	FUNCTION_76	IF_1	CALL_3
0x4001cb8	            0x7533	                           jne 0x4001ced	       768	security.c	FUNCTION_76	IF_1	CALL_3
0x4001cba	              0x55	                                push rbp	       767	security.c	FUNCTION_76
0x4001cbb	              0x53	                                push rbx	       767	security.c	FUNCTION_76
0x4001cbc	          0x4889fd	                            mov rbp, rdi	       767	security.c	FUNCTION_76
0x4001cbf	    0x488b1d000000	            mov rbx, qword [0x04001cc6] 	       770	security.c	FUNCTION_76	CALL_4
0x4001cc6	          0x4885db	                           test rbx, rbx	       770	security.c	FUNCTION_76	CALL_4
0x4001cc9	            0x750a	                           jne 0x4001cd5	       770	security.c	FUNCTION_76	CALL_4
0x4001ccb	            0xeb1b	                           jmp 0x4001ce8	       770	security.c	FUNCTION_76	CALL_4
0x4001ccd	          0x488b1b	                    mov rbx, qword [rbx]	       770	security.c	FUNCTION_76	CALL_4
0x4001cd0	          0x4885db	                           test rbx, rbx	       770	security.c	FUNCTION_76	CALL_4
0x4001cd3	            0x7413	                            je 0x4001ce8	       770	security.c	FUNCTION_76	CALL_4
0x4001cd5	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       770	security.c	FUNCTION_76	CALL_4
0x4001cd9	          0x4889ef	                            mov rdi, rbp	       770	security.c	FUNCTION_76	CALL_4
0x4001cdc	      0xe800000000	                          call 0x4001ce1	       770	security.c	FUNCTION_76	CALL_4
0x4001ce1	            0x85c0	                           test eax, eax	       770	security.c	FUNCTION_76	CALL_4
0x4001ce3	            0x74e8	                            je 0x4001ccd	       770	security.c	FUNCTION_76	CALL_4
0x4001ce5	              0x5b	                                 pop rbx	       771	security.c	FUNCTION_76
0x4001ce6	              0x5d	                                 pop rbp	       771	security.c	FUNCTION_76
0x4001ce7	              0xc3	                                     ret	       771	security.c	FUNCTION_76
0x4001ce8	            0x31c0	                            xor eax, eax	       769	security.c	FUNCTION_76	IF_1
0x4001cea	              0x5b	                                 pop rbx	       771	security.c	FUNCTION_76
0x4001ceb	              0x5d	                                 pop rbp	       771	security.c	FUNCTION_76
0x4001cec	              0xc3	                                     ret	       771	security.c	FUNCTION_76
0x4001ced	            0x31c0	                            xor eax, eax	       769	security.c	FUNCTION_76	IF_1
0x4001cef	              0xc3	                                     ret	       771	security.c	FUNCTION_76
