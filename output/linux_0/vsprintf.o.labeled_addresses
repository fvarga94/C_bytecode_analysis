snprintf	IF,0:WHILE,0:functions,0:CALL,3:SWITCH,0:DO,0:ELSE,0:FOR,0	25
0x4003350	              0x55	                                push rbp	      2424	vsprintf.c	FUNCTION_55
0x4003351	          0x4889e5	                            mov rbp, rsp	      2424	vsprintf.c	FUNCTION_55
0x4003354	            0x4152	                                push r10	      2424	vsprintf.c	FUNCTION_55
0x4003356	        0x4c8d5510	                   lea r10, [rbp + 0x10]	      2424	vsprintf.c	FUNCTION_55
0x400335a	        0x4883ec50	                           sub rsp, 0x50	      2424	vsprintf.c	FUNCTION_55
0x400335e	        0x48894de0	             mov qword [rbp - 0x20], rcx	      2424	vsprintf.c	FUNCTION_55
0x4003362	        0x488d4da8	                   lea rcx, [rbp - 0x58]	      2429	vsprintf.c	FUNCTION_55	CALL_2
0x4003366	    0x65488b042528	                mov rax, qword gs:[0x28]	      2424	vsprintf.c	FUNCTION_55
0x400336f	        0x488945c0	             mov qword [rbp - 0x40], rax	      2424	vsprintf.c	FUNCTION_55
0x4003373	            0x31c0	                            xor eax, eax	      2424	vsprintf.c	FUNCTION_55
0x4003375	        0x488d45c8	                   lea rax, [rbp - 0x38]	      2428	vsprintf.c	FUNCTION_55	CALL_1
0x4003379	        0x4c8945e8	              mov qword [rbp - 0x18], r8	      2424	vsprintf.c	FUNCTION_55
0x400337d	        0x4c894df0	              mov qword [rbp - 0x10], r9	      2424	vsprintf.c	FUNCTION_55
0x4003381	    0xc745a8180000	           mov dword [rbp - 0x58], 0x18 	      2428	vsprintf.c	FUNCTION_55	CALL_1
0x4003388	        0x4c8955b0	             mov qword [rbp - 0x50], r10	      2428	vsprintf.c	FUNCTION_55	CALL_1
0x400338c	        0x488945b8	             mov qword [rbp - 0x48], rax	      2428	vsprintf.c	FUNCTION_55	CALL_1
0x4003390	      0xe800000000	                          call 0x4003395	      2429	vsprintf.c	FUNCTION_55	CALL_2
0x4003395	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2433	vsprintf.c	FUNCTION_55
0x4003399	    0x654833142528	                xor rdx, qword gs:[0x28]	      2433	vsprintf.c	FUNCTION_55
0x40033a2	            0x7508	                           jne 0x40033ac	      2433	vsprintf.c	FUNCTION_55
0x40033a4	        0x4883c450	                           add rsp, 0x50	      2433	vsprintf.c	FUNCTION_55
0x40033a8	            0x415a	                                 pop r10	      2433	vsprintf.c	FUNCTION_55
0x40033aa	              0x5d	                                 pop rbp	      2433	vsprintf.c	FUNCTION_55
0x40033ab	              0xc3	                                     ret	      2433	vsprintf.c	FUNCTION_55
0x40033ac	      0xe800000000	                          call 0x40033b1	      2433	vsprintf.c	FUNCTION_55
vsnprintf	IF,12:WHILE,4:functions,0:CALL,26:SWITCH,2:DO,0:ELSE,2:FOR,0	326
0x4002e30	            0x4157	                                push r15	      2227	vsprintf.c	FUNCTION_53
0x4002e32	            0x4156	                                push r14	      2227	vsprintf.c	FUNCTION_53
0x4002e34	            0x4155	                                push r13	      2227	vsprintf.c	FUNCTION_53
0x4002e36	            0x4154	                                push r12	      2227	vsprintf.c	FUNCTION_53
0x4002e38	              0x55	                                push rbp	      2227	vsprintf.c	FUNCTION_53
0x4002e39	              0x53	                                push rbx	      2227	vsprintf.c	FUNCTION_53
0x4002e3a	        0x4883ec20	                           sub rsp, 0x20	      2227	vsprintf.c	FUNCTION_53
0x4002e3e	    0x65488b042528	                mov rax, qword gs:[0x28]	      2227	vsprintf.c	FUNCTION_53
0x4002e47	      0x4889442418	             mov qword [rsp + 0x18], rax	      2227	vsprintf.c	FUNCTION_53
0x4002e4c	            0x31c0	                            xor eax, eax	      2227	vsprintf.c	FUNCTION_53
0x4002e4e	    0x4881feffffff	                     cmp rsi, 0x7fffffff	      2234	vsprintf.c	FUNCTION_53	IF_1	CALL_1
0x4002e55	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2230	vsprintf.c	FUNCTION_53
0x4002e5e	     0xf872f040000	                            ja 0x4003293	      2234	vsprintf.c	FUNCTION_53	IF_1	CALL_1
0x4002e64	          0x4889fd	                            mov rbp, rdi	      2241	vsprintf.c	FUNCTION_53	IF_2
0x4002e67	          0x4889fb	                            mov rbx, rdi	      2241	vsprintf.c	FUNCTION_53	IF_2
0x4002e6a	          0x4989f5	                            mov r13, rsi	      2241	vsprintf.c	FUNCTION_53	IF_2
0x4002e6d	          0x4801f5	                            add rbp, rsi	      2241	vsprintf.c	FUNCTION_53	IF_2
0x4002e70	          0x4989d7	                            mov r15, rdx	      2241	vsprintf.c	FUNCTION_53	IF_2
0x4002e73	          0x4989cc	                            mov r12, rcx	      2241	vsprintf.c	FUNCTION_53	IF_2
0x4002e76	        0x48893c24	                    mov qword [rsp], rdi	      2243	vsprintf.c	FUNCTION_53	IF_2
0x4002e7a	     0xf8279020000	                            jb 0x40030f9	      2241	vsprintf.c	FUNCTION_53	IF_2
0x4002e80	        0x410fb607	                   movzx eax, byte [r15]	      2241	vsprintf.c	FUNCTION_53	IF_2
0x4002e84	            0x84c0	                             test al, al	      2246	vsprintf.c	FUNCTION_53	WHILE_1
0x4002e86	            0x742f	                            je 0x4002eb7	      2246	vsprintf.c	FUNCTION_53	WHILE_1
0x4002e88	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2248	vsprintf.c	FUNCTION_53	WHILE_1	CALL_2
0x4002e8d	          0x4c89ff	                            mov rdi, r15	      2248	vsprintf.c	FUNCTION_53	WHILE_1	CALL_2
0x4002e90	      0xe82bdaffff	                  call sym.format_decode	      2248	vsprintf.c	FUNCTION_53	WHILE_1	CALL_2
0x4002e95	       0xfb6542410	           movzx edx, byte [rsp + 0x10] 	      2252	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1
0x4002e9a	          0x4863c8	                         movsxd rcx, eax	      2250	vsprintf.c	FUNCTION_53	WHILE_1
0x4002e9d	        0x4d8d340f	                    lea r14, [r15 + rcx]	      2250	vsprintf.c	FUNCTION_53	WHILE_1
0x4002ea1	          0x80fa07	                               cmp dl, 7	      2252	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1
0x4002ea4	     0xf8733020000	                            ja 0x40030dd	      2252	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1
0x4002eaa	    0x488b04d50000	                  mov rax, qword [rdx*8]	      2252	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1
0x4002eb2	      0xe900000000	                           jmp 0x4002eb7	      2252	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1
0x4002eb7	          0x4d85ed	                           test r13, r13	      2367	vsprintf.c	FUNCTION_53	IF_11
0x4002eba	     0xf854b020000	                           jne 0x400310b	      2367	vsprintf.c	FUNCTION_53	IF_11
0x4002ec0	            0x89d8	                            mov eax, ebx	      2375	vsprintf.c	FUNCTION_53
0x4002ec2	          0x2b0424	                    sub eax, dword [rsp]	      2375	vsprintf.c	FUNCTION_53
0x4002ec5	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      2377	vsprintf.c	FUNCTION_53
0x4002eca	    0x654833342528	                xor rsi, qword gs:[0x28]	      2377	vsprintf.c	FUNCTION_53
0x4002ed3	     0xf8532040000	                           jne 0x400330b	      2377	vsprintf.c	FUNCTION_53
0x4002ed9	        0x4883c420	                           add rsp, 0x20	      2377	vsprintf.c	FUNCTION_53
0x4002edd	              0x5b	                                 pop rbx	      2377	vsprintf.c	FUNCTION_53
0x4002ede	              0x5d	                                 pop rbp	      2377	vsprintf.c	FUNCTION_53
0x4002edf	            0x415c	                                 pop r12	      2377	vsprintf.c	FUNCTION_53
0x4002ee1	            0x415d	                                 pop r13	      2377	vsprintf.c	FUNCTION_53
0x4002ee3	            0x415e	                                 pop r14	      2377	vsprintf.c	FUNCTION_53
0x4002ee5	            0x415f	                                 pop r15	      2377	vsprintf.c	FUNCTION_53
0x4002ee7	              0xc3	                                     ret	      2377	vsprintf.c	FUNCTION_53
0x4002ee8	          0x4839eb	                            cmp rbx, rbp	      2307	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_9
0x4002eeb	     0xf822b020000	                            jb 0x400311c	      2307	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_9
0x4002ef1	        0x4883c301	                              add rbx, 1	      2309	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1
0x4002ef5	        0x410fb606	                   movzx eax, byte [r14]	      2309	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1
0x4002ef9	          0x4d89f7	                            mov r15, r14	      2250	vsprintf.c	FUNCTION_53	WHILE_1
0x4002efc	            0xeb86	                           jmp 0x4002e84	      2250	vsprintf.c	FUNCTION_53	WHILE_1
0x4002efe	        0x418b0424	                    mov eax, dword [r12]	      2269	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_7
0x4002f02	          0x83f82f	                           cmp eax, 0x2f	      2269	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_7
0x4002f05	     0xf8719020000	                            ja 0x4003124	      2269	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_7
0x4002f0b	            0x89c2	                            mov edx, eax	      2269	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_7
0x4002f0d	      0x4903542410	             add rdx, qword [r12 + 0x10]	      2269	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_7
0x4002f12	          0x83c008	                              add eax, 8	      2269	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_7
0x4002f15	        0x41890424	                    mov dword [r12], eax	      2269	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_7
0x4002f19	            0x8b32	                    mov esi, dword [rdx]	      2269	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_7
0x4002f1b	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2269	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_7
0x4002f20	          0x4d89f7	                            mov r15, r14	      2250	vsprintf.c	FUNCTION_53	WHILE_1
0x4002f23	      0xe838d9ffff	                  call sym.set_precision	      2269	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_7
0x4002f28	        0x410fb606	                   movzx eax, byte [r14]	      2269	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_7
0x4002f2c	      0xe953ffffff	                           jmp 0x4002e84	      2270	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1
0x4002f31	        0x418b0424	                    mov eax, dword [r12]	      2296	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_10
0x4002f35	          0x83f82f	                           cmp eax, 0x2f	      2296	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_10
0x4002f38	     0xf870c020000	                            ja 0x400314a	      2296	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_10
0x4002f3e	            0x89c2	                            mov edx, eax	      2296	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_10
0x4002f40	      0x4903542410	             add rdx, qword [r12 + 0x10]	      2296	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_10
0x4002f45	          0x83c008	                              add eax, 8	      2296	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_10
0x4002f48	        0x41890424	                    mov dword [r12], eax	      2296	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_10
0x4002f4c	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      2296	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_10
0x4002f51	          0x488b12	                    mov rdx, qword [rdx]	      2296	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_10
0x4002f54	          0x4889df	                            mov rdi, rbx	      2296	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_10
0x4002f57	          0x4889ee	                            mov rsi, rbp	      2296	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_10
0x4002f5a	          0x4d89f7	                            mov r15, r14	      2250	vsprintf.c	FUNCTION_53	WHILE_1
0x4002f5d	      0xe8beddffff	                         call sym.string	      2296	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_10
0x4002f62	          0x4889c3	                            mov rbx, rax	      2296	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_10
0x4002f65	        0x410fb606	                   movzx eax, byte [r14]	      2296	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_10
0x4002f69	      0xe916ffffff	                           jmp 0x4002e84	      2297	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1
0x4002f6e	      0xf644241402	               test byte [rsp + 0x14], 2	      2275	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_5
0x4002f73	            0x7464	                            je 0x4002fd9	      2275	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_5
0x4002f75	        0x418b0424	                    mov eax, dword [r12]	      2283	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_8
0x4002f79	          0x83f82f	                           cmp eax, 0x2f	      2283	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_8
0x4002f7c	     0xf87db010000	                            ja 0x400315d	      2283	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_8
0x4002f82	            0x89c2	                            mov edx, eax	      2283	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_8
0x4002f84	      0x4903542410	             add rdx, qword [r12 + 0x10]	      2283	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_8
0x4002f89	          0x83c008	                              add eax, 8	      2283	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_8
0x4002f8c	        0x41890424	                    mov dword [r12], eax	      2283	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_8
0x4002f90	          0x4839eb	                            cmp rbx, rbp	      2284	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_7
0x4002f93	            0x7304	                           jae 0x4002f99	      2284	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_7
0x4002f95	            0x8b02	                    mov eax, dword [rdx]	      2285	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_7
0x4002f97	            0x8803	                      mov byte [rbx], al	      2285	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_7
0x4002f99	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      2287	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_3
0x4002f9d	        0x4883c301	                              add rbx, 1	      2290	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_3
0x4002fa1	            0x89d0	                            mov eax, edx	      2287	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_3
0x4002fa3	           0xfb6d2	                           movzx edx, dl	      2287	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_3
0x4002fa6	            0x30c0	                              xor al, al	      2287	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_3
0x4002fa8	      0x2d00010000	                          sub eax, 0x100	      2287	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_3
0x4002fad	          0xc1f808	                              sar eax, 8	      2287	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_3
0x4002fb0	            0x89c1	                            mov ecx, eax	      2287	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_3
0x4002fb2	          0xc1e108	                              shl ecx, 8	      2287	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_3
0x4002fb5	             0x9ca	                             or edx, ecx	      2287	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_3
0x4002fb7	            0x85c0	                           test eax, eax	      2287	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_3
0x4002fb9	        0x89542410	             mov dword [rsp + 0x10], edx	      2287	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_3
0x4002fbd	     0xf8e32ffffff	                           jle 0x4002ef5	      2287	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_3
0x4002fc3	          0x4839dd	                            cmp rbp, rbx	      2288	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_3	IF_8
0x4002fc6	            0x76d1	                           jbe 0x4002f99	      2288	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_3	IF_8
0x4002fc8	          0xc60320	                    mov byte [rbx], 0x20	      2289	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_3	IF_8
0x4002fcb	            0xebcc	                           jmp 0x4002f99	      2289	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_3	IF_8
0x4002fcd	          0x4839eb	                            cmp rbx, rbp	      2277	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_5	WHILE_2	IF_6
0x4002fd0	            0x7303	                           jae 0x4002fd5	      2277	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_5	WHILE_2	IF_6
0x4002fd2	          0xc60320	                    mov byte [rbx], 0x20	      2278	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_5	WHILE_2	IF_6
0x4002fd5	        0x4883c301	                              add rbx, 1	      2279	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_5	WHILE_2
0x4002fd9	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      2276	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_5	WHILE_2
0x4002fdd	            0x89d0	                            mov eax, edx	      2276	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_5	WHILE_2
0x4002fdf	           0xfb6d2	                           movzx edx, dl	      2276	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_5	WHILE_2
0x4002fe2	            0x30c0	                              xor al, al	      2276	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_5	WHILE_2
0x4002fe4	      0x2d00010000	                          sub eax, 0x100	      2276	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_5	WHILE_2
0x4002fe9	          0xc1f808	                              sar eax, 8	      2276	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_5	WHILE_2
0x4002fec	            0x89c1	                            mov ecx, eax	      2276	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_5	WHILE_2
0x4002fee	          0xc1e108	                              shl ecx, 8	      2276	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_5	WHILE_2
0x4002ff1	             0x9ca	                             or edx, ecx	      2276	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_5	WHILE_2
0x4002ff3	            0x85c0	                           test eax, eax	      2276	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_5	WHILE_2
0x4002ff5	        0x89542410	             mov dword [rsp + 0x10], edx	      2276	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_5	WHILE_2
0x4002ff9	            0x7fd2	                            jg 0x4002fcd	      2276	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_5	WHILE_2
0x4002ffb	        0x418b0424	                    mov eax, dword [r12]	      2283	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_8
0x4002fff	          0x83f82f	                           cmp eax, 0x2f	      2283	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_8
0x4003002	     0xf8755010000	                            ja 0x400315d	      2283	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_8
0x4003008	      0xe975ffffff	                           jmp 0x4002f82	      2283	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_8
0x400300d	        0x418b0424	                    mov eax, dword [r12]	      2300	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_12
0x4003011	          0x83f82f	                           cmp eax, 0x2f	      2300	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_12
0x4003014	     0xf871d010000	                            ja 0x4003137	      2300	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_12
0x400301a	            0x89c2	                            mov edx, eax	      2300	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_12
0x400301c	      0x4903542410	             add rdx, qword [r12 + 0x10]	      2300	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_12
0x4003021	          0x83c008	                              add eax, 8	      2300	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_12
0x4003024	        0x41890424	                    mov dword [r12], eax	      2300	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_12
0x4003028	          0x488b0a	                    mov rcx, qword [rdx]	      2300	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_12
0x400302b	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      2300	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_12
0x4003030	          0x4889ea	                            mov rdx, rbp	      2300	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_12
0x4003033	          0x4889de	                            mov rsi, rbx	      2300	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_12
0x4003036	          0x4c89f7	                            mov rdi, r14	      2300	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_12
0x4003039	          0x4d89f7	                            mov r15, r14	      2302	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_4	CALL_13
0x400303c	      0xe80ffaffff	                        call sym.pointer	      2300	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_12
0x4003041	        0x410fb616	                   movzx edx, byte [r14]	      2302	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_4	CALL_13
0x4003045	          0x4889c3	                            mov rbx, rax	      2300	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_12
0x4003048	    0xf68200000000	                      test byte [rdx], 7	      2302	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_4	CALL_13
0x400304f	          0x4889d0	                            mov rax, rdx	      2302	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_4	CALL_13
0x4003052	     0xf842cfeffff	                            je 0x4002e84	      2302	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_4	CALL_13
0x4003058	        0x4983c701	                              add r15, 1	      2303	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_4
0x400305c	        0x410fb617	                   movzx edx, byte [r15]	      2302	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_4	CALL_13
0x4003060	    0xf68200000000	                      test byte [rdx], 7	      2302	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_4	CALL_13
0x4003067	          0x4889d0	                            mov rax, rdx	      2302	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_4	CALL_13
0x400306a	            0x75ec	                           jne 0x4003058	      2302	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_4	CALL_13
0x400306c	      0xe913feffff	                           jmp 0x4002e84	      2302	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	WHILE_4	CALL_13
0x4003071	          0x4839eb	                            cmp rbx, rbp	      2255	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_3
0x4003074	            0x7325	                           jae 0x400309b	      2255	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_3
0x4003076	          0x4889e8	                            mov rax, rbp	      2256	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_3	IF_4
0x4003079	          0x4c89fe	                            mov rsi, r15	      2258	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_3	CALL_3
0x400307c	          0x4889df	                            mov rdi, rbx	      2258	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_3	CALL_3
0x400307f	          0x4829d8	                            sub rax, rbx	      2256	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_3	IF_4
0x4003082	      0x48894c2408	                mov qword [rsp + 8], rcx	      2256	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_3	IF_4
0x4003087	          0x4839c1	                            cmp rcx, rax	      2256	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_3	IF_4
0x400308a	          0x4863d0	                         movsxd rdx, eax	      2256	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_3	IF_4
0x400308d	        0x480f4ed1	                         cmovle rdx, rcx	      2256	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_3	IF_4
0x4003091	      0xe800000000	                          call 0x4003096	      2258	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_3	CALL_3
0x4003096	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2258	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_3	CALL_3
0x400309b	          0x4801cb	                            add rbx, rcx	      2260	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1
0x400309e	        0x410fb606	                   movzx eax, byte [r14]	      2260	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1
0x40030a2	          0x4d89f7	                            mov r15, r14	      2250	vsprintf.c	FUNCTION_53	WHILE_1
0x40030a5	      0xe9dafdffff	                           jmp 0x4002e84	      2261	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1
0x40030aa	        0x418b0424	                    mov eax, dword [r12]	      2265	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_5
0x40030ae	          0x83f82f	                           cmp eax, 0x2f	      2265	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_5
0x40030b1	     0xf87b9000000	                            ja 0x4003170	      2265	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_5
0x40030b7	            0x89c2	                            mov edx, eax	      2265	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_5
0x40030b9	      0x4903542410	             add rdx, qword [r12 + 0x10]	      2265	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_5
0x40030be	          0x83c008	                              add eax, 8	      2265	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_5
0x40030c1	        0x41890424	                    mov dword [r12], eax	      2265	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_5
0x40030c5	            0x8b32	                    mov esi, dword [rdx]	      2265	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_5
0x40030c7	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2265	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_5
0x40030cc	          0x4d89f7	                            mov r15, r14	      2250	vsprintf.c	FUNCTION_53	WHILE_1
0x40030cf	      0xe80cd7ffff	                call sym.set_field_width	      2265	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_5
0x40030d4	        0x410fb606	                   movzx eax, byte [r14]	      2265	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_5
0x40030d8	      0xe9a7fdffff	                           jmp 0x4002e84	      2266	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1
0x40030dd	          0x83ea08	                              sub edx, 8	      2324	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2
0x40030e0	          0x80fa0a	                             cmp dl, 0xa	      2324	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2
0x40030e3	     0xf878c010000	                            ja 0x4003275	      2324	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2
0x40030e9	           0xfb6d2	                           movzx edx, dl	      2324	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2
0x40030ec	    0x488b04d50000	                  mov rax, qword [rdx*8]	      2324	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2
0x40030f4	      0xe900000000	                           jmp 0x40030f9	      2324	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2
0x40030f9	          0x4989fd	                            mov r13, rdi	      2243	vsprintf.c	FUNCTION_53	IF_2
0x40030fc	    0x48c7c5ffffff	             mov rbp, 0xffffffffffffffff	      2242	vsprintf.c	FUNCTION_53	IF_2
0x4003103	          0x49f7d5	                                 not r13	      2243	vsprintf.c	FUNCTION_53	IF_2
0x4003106	      0xe975fdffff	                           jmp 0x4002e80	      2243	vsprintf.c	FUNCTION_53	IF_2
0x400310b	          0x4839eb	                            cmp rbx, rbp	      2368	vsprintf.c	FUNCTION_53	IF_11	IF_12
0x400310e	     0xf83a1000000	                           jae 0x40031b5	      2368	vsprintf.c	FUNCTION_53	IF_11	IF_12
0x4003114	          0xc60300	                       mov byte [rbx], 0	      2369	vsprintf.c	FUNCTION_53	IF_11	IF_12
0x4003117	      0xe9a4fdffff	                           jmp 0x4002ec0	      2369	vsprintf.c	FUNCTION_53	IF_11	IF_12
0x400311c	          0xc60325	                    mov byte [rbx], 0x25	      2308	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_9
0x400311f	      0xe9cdfdffff	                           jmp 0x4002ef1	      2308	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	IF_9
0x4003124	      0x498b542408	                mov rdx, qword [r12 + 8]	      2269	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_7
0x4003129	        0x488d4208	                      lea rax, [rdx + 8]	      2269	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_7
0x400312d	      0x4989442408	                mov qword [r12 + 8], rax	      2269	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_7
0x4003132	      0xe9e2fdffff	                           jmp 0x4002f19	      2269	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_7
0x4003137	      0x498b542408	                mov rdx, qword [r12 + 8]	      2300	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_12
0x400313c	        0x488d4208	                      lea rax, [rdx + 8]	      2300	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_12
0x4003140	      0x4989442408	                mov qword [r12 + 8], rax	      2300	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_12
0x4003145	      0xe9defeffff	                           jmp 0x4003028	      2300	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_12
0x400314a	      0x498b542408	                mov rdx, qword [r12 + 8]	      2296	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_10
0x400314f	        0x488d4208	                      lea rax, [rdx + 8]	      2296	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_10
0x4003153	      0x4989442408	                mov qword [r12 + 8], rax	      2296	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_10
0x4003158	      0xe9effdffff	                           jmp 0x4002f4c	      2296	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_10
0x400315d	      0x498b542408	                mov rdx, qword [r12 + 8]	      2283	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_8
0x4003162	        0x488d4208	                      lea rax, [rdx + 8]	      2283	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_8
0x4003166	      0x4989442408	                mov qword [r12 + 8], rax	      2283	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_8
0x400316b	      0xe920feffff	                           jmp 0x4002f90	      2283	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_8
0x4003170	      0x498b542408	                mov rdx, qword [r12 + 8]	      2265	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_5
0x4003175	        0x488d4208	                      lea rax, [rdx + 8]	      2265	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_5
0x4003179	      0x4989442408	                mov qword [r12 + 8], rax	      2265	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_5
0x400317e	      0xe942ffffff	                           jmp 0x40030c5	      2265	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_5
0x4003183	        0x418b0424	                    mov eax, dword [r12]	      2341	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_19
0x4003187	          0x83f82f	                           cmp eax, 0x2f	      2341	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_19
0x400318a	            0x7732	                            ja 0x40031be	      2341	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_19
0x400318c	            0x89c2	                            mov edx, eax	      2341	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_19
0x400318e	      0x4903542410	             add rdx, qword [r12 + 0x10]	      2341	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_19
0x4003193	          0x83c008	                              add eax, 8	      2341	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_19
0x4003196	        0x41890424	                    mov dword [r12], eax	      2341	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_19
0x400319a	          0x488b12	                    mov rdx, qword [rdx]	      2341	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_19
0x400319d	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      2362	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_26
0x40031a2	          0x4889df	                            mov rdi, rbx	      2362	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_26
0x40031a5	          0x4889ee	                            mov rsi, rbp	      2362	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_26
0x40031a8	      0xe863d0ffff	                         call sym.number	      2362	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_26
0x40031ad	          0x4889c3	                            mov rbx, rax	      2362	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_26
0x40031b0	      0xe940fdffff	                           jmp 0x4002ef5	      2362	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	CALL_26
0x40031b5	        0xc645ff00	                   mov byte [rbp - 1], 0	      2371	vsprintf.c	FUNCTION_53	IF_11	ELSE_2
0x40031b9	      0xe902fdffff	                           jmp 0x4002ec0	      2371	vsprintf.c	FUNCTION_53	IF_11	ELSE_2
0x40031be	      0x498b542408	                mov rdx, qword [r12 + 8]	      2341	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_19
0x40031c3	        0x488d4208	                      lea rax, [rdx + 8]	      2341	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_19
0x40031c7	      0x4989442408	                mov qword [r12 + 8], rax	      2341	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_19
0x40031cc	            0xebcc	                           jmp 0x400319a	      2341	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_19
0x40031ce	        0x418b0424	                    mov eax, dword [r12]	      2353	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_23
0x40031d2	          0x83f82f	                           cmp eax, 0x2f	      2353	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_23
0x40031d5	     0xf871d010000	                            ja 0x40032f8	      2353	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_23
0x40031db	            0x89c2	                            mov edx, eax	      2353	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_23
0x40031dd	      0x4903542410	             add rdx, qword [r12 + 0x10]	      2353	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_23
0x40031e2	          0x83c008	                              add eax, 8	      2353	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_23
0x40031e5	        0x41890424	                    mov dword [r12], eax	      2353	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_23
0x40031e9	        0x480fbf12	                   movsx rdx, word [rdx]	      2353	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_23
0x40031ed	            0xebae	                           jmp 0x400319d	      2354	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2
0x40031ef	        0x418b0424	                    mov eax, dword [r12]	      2356	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_24
0x40031f3	          0x83f82f	                           cmp eax, 0x2f	      2356	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_24
0x40031f6	     0xf87e9000000	                            ja 0x40032e5	      2356	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_24
0x40031fc	            0x89c2	                            mov edx, eax	      2356	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_24
0x40031fe	      0x4903542410	             add rdx, qword [r12 + 0x10]	      2356	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_24
0x4003203	          0x83c008	                              add eax, 8	      2356	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_24
0x4003206	        0x41890424	                    mov dword [r12], eax	      2356	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_24
0x400320a	          0x486312	                 movsxd rdx, dword [rdx]	      2356	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_24
0x400320d	            0xeb8e	                           jmp 0x400319d	      2357	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2
0x400320f	        0x418b0424	                    mov eax, dword [r12]	      2344	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_20
0x4003213	          0x83f82f	                           cmp eax, 0x2f	      2344	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_20
0x4003216	     0xf87b6000000	                            ja 0x40032d2	      2344	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_20
0x400321c	            0x89c2	                            mov edx, eax	      2344	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_20
0x400321e	      0x4903542410	             add rdx, qword [r12 + 0x10]	      2344	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_20
0x4003223	          0x83c008	                              add eax, 8	      2344	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_20
0x4003226	        0x41890424	                    mov dword [r12], eax	      2344	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_20
0x400322a	           0xfb612	                   movzx edx, byte [rdx]	      2344	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_20
0x400322d	      0xe96bffffff	                           jmp 0x400319d	      2345	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2
0x4003232	        0x418b0424	                    mov eax, dword [r12]	      2347	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_21
0x4003236	          0x83f82f	                           cmp eax, 0x2f	      2347	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_21
0x4003239	     0xf8780000000	                            ja 0x40032bf	      2347	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_21
0x400323f	            0x89c2	                            mov edx, eax	      2347	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_21
0x4003241	      0x4903542410	             add rdx, qword [r12 + 0x10]	      2347	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_21
0x4003246	          0x83c008	                              add eax, 8	      2347	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_21
0x4003249	        0x41890424	                    mov dword [r12], eax	      2347	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_21
0x400324d	        0x480fbe12	                   movsx rdx, byte [rdx]	      2347	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_21
0x4003251	      0xe947ffffff	                           jmp 0x400319d	      2348	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2
0x4003256	        0x418b0424	                    mov eax, dword [r12]	      2350	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_22
0x400325a	          0x83f82f	                           cmp eax, 0x2f	      2350	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_22
0x400325d	            0x7750	                            ja 0x40032af	      2350	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_22
0x400325f	            0x89c2	                            mov edx, eax	      2350	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_22
0x4003261	      0x4903542410	             add rdx, qword [r12 + 0x10]	      2350	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_22
0x4003266	          0x83c008	                              add eax, 8	      2350	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_22
0x4003269	        0x41890424	                    mov dword [r12], eax	      2350	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_22
0x400326d	           0xfb712	                   movzx edx, word [rdx]	      2350	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_22
0x4003270	      0xe928ffffff	                           jmp 0x400319d	      2351	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2
0x4003275	        0x418b0424	                    mov eax, dword [r12]	      2359	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_25
0x4003279	          0x83f82f	                           cmp eax, 0x2f	      2359	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_25
0x400327c	            0x761c	                           jbe 0x400329a	      2359	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_25
0x400327e	      0x498b542408	                mov rdx, qword [r12 + 8]	      2359	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_25
0x4003283	        0x488d4208	                      lea rax, [rdx + 8]	      2359	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_25
0x4003287	      0x4989442408	                mov qword [r12 + 8], rax	      2359	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_25
0x400328c	            0x8b12	                    mov edx, dword [rdx]	      2359	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_25
0x400328e	      0xe90affffff	                           jmp 0x400319d	      2359	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_25
0x4003293	             0xf0b	                                     ud2	      2359	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_25
0x4003295	      0xe92bfcffff	                           jmp 0x4002ec5	      2234	vsprintf.c	FUNCTION_53	IF_1	CALL_1
0x400329a	            0x89c2	                            mov edx, eax	      2359	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_25
0x400329c	      0x4903542410	             add rdx, qword [r12 + 0x10]	      2359	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_25
0x40032a1	          0x83c008	                              add eax, 8	      2359	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_25
0x40032a4	        0x41890424	                    mov dword [r12], eax	      2359	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_25
0x40032a8	            0x8b12	                    mov edx, dword [rdx]	      2359	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_25
0x40032aa	      0xe9eefeffff	                           jmp 0x400319d	      2359	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_25
0x40032af	      0x498b542408	                mov rdx, qword [r12 + 8]	      2350	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_22
0x40032b4	        0x488d4208	                      lea rax, [rdx + 8]	      2350	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_22
0x40032b8	      0x4989442408	                mov qword [r12 + 8], rax	      2350	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_22
0x40032bd	            0xebae	                           jmp 0x400326d	      2350	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_22
0x40032bf	      0x498b542408	                mov rdx, qword [r12 + 8]	      2347	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_21
0x40032c4	        0x488d4208	                      lea rax, [rdx + 8]	      2347	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_21
0x40032c8	      0x4989442408	                mov qword [r12 + 8], rax	      2347	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_21
0x40032cd	      0xe97bffffff	                           jmp 0x400324d	      2347	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_21
0x40032d2	      0x498b542408	                mov rdx, qword [r12 + 8]	      2344	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_20
0x40032d7	        0x488d4208	                      lea rax, [rdx + 8]	      2344	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_20
0x40032db	      0x4989442408	                mov qword [r12 + 8], rax	      2344	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_20
0x40032e0	      0xe945ffffff	                           jmp 0x400322a	      2344	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_20
0x40032e5	      0x498b542408	                mov rdx, qword [r12 + 8]	      2356	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_24
0x40032ea	        0x488d4208	                      lea rax, [rdx + 8]	      2356	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_24
0x40032ee	      0x4989442408	                mov qword [r12 + 8], rax	      2356	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_24
0x40032f3	      0xe912ffffff	                           jmp 0x400320a	      2356	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_24
0x40032f8	      0x498b542408	                mov rdx, qword [r12 + 8]	      2353	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_23
0x40032fd	        0x488d4208	                      lea rax, [rdx + 8]	      2353	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_23
0x4003301	      0x4989442408	                mov qword [r12 + 8], rax	      2353	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_23
0x4003306	      0xe9defeffff	                           jmp 0x40031e9	      2353	vsprintf.c	FUNCTION_53	WHILE_1	SWITCH_1	SWITCH_2	CALL_23
0x400330b	      0xe800000000	                     call sym.vscnprintf	      2377	vsprintf.c	FUNCTION_53
scnprintf	IF,0:WHILE,0:functions,0:CALL,3:SWITCH,0:DO,0:ELSE,0:FOR,0	36
0x40033c0	              0x55	                                push rbp	      2448	vsprintf.c	FUNCTION_56
0x40033c1	          0x4889e5	                            mov rbp, rsp	      2448	vsprintf.c	FUNCTION_56
0x40033c4	            0x4152	                                push r10	      2448	vsprintf.c	FUNCTION_56
0x40033c6	              0x53	                                push rbx	      2448	vsprintf.c	FUNCTION_56
0x40033c7	        0x4c8d5510	                   lea r10, [rbp + 0x10]	      2448	vsprintf.c	FUNCTION_56
0x40033cb	          0x4889f3	                            mov rbx, rsi	      2448	vsprintf.c	FUNCTION_56
0x40033ce	        0x4883ec50	                           sub rsp, 0x50	      2448	vsprintf.c	FUNCTION_56
0x40033d2	        0x48894dd8	             mov qword [rbp - 0x28], rcx	      2448	vsprintf.c	FUNCTION_56
0x40033d6	        0x488d4da0	                   lea rcx, [rbp - 0x60]	      2399	vsprintf.c	FUNCTION_54	CALL_1
0x40033da	    0x65488b042528	                mov rax, qword gs:[0x28]	      2448	vsprintf.c	FUNCTION_56
0x40033e3	        0x488945b8	             mov qword [rbp - 0x48], rax	      2448	vsprintf.c	FUNCTION_56
0x40033e7	            0x31c0	                            xor eax, eax	      2448	vsprintf.c	FUNCTION_56
0x40033e9	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2452	vsprintf.c	FUNCTION_56	CALL_1
0x40033ed	        0x4c8945e0	              mov qword [rbp - 0x20], r8	      2448	vsprintf.c	FUNCTION_56
0x40033f1	        0x4c894de8	              mov qword [rbp - 0x18], r9	      2448	vsprintf.c	FUNCTION_56
0x40033f5	    0xc745a0180000	           mov dword [rbp - 0x60], 0x18 	      2452	vsprintf.c	FUNCTION_56	CALL_1
0x40033fc	        0x4c8955a8	             mov qword [rbp - 0x58], r10	      2452	vsprintf.c	FUNCTION_56	CALL_1
0x4003400	        0x488945b0	             mov qword [rbp - 0x50], rax	      2452	vsprintf.c	FUNCTION_56	CALL_1
0x4003404	      0xe800000000	                          call 0x4003409	      2399	vsprintf.c	FUNCTION_54	CALL_1
0x4003409	          0x4863d0	                         movsxd rdx, eax	      2401	vsprintf.c	FUNCTION_54	IF_1	CALL_2
0x400340c	          0x4839d3	                            cmp rbx, rdx	      2401	vsprintf.c	FUNCTION_54	IF_1	CALL_2
0x400340f	            0x7618	                           jbe 0x4003429	      2401	vsprintf.c	FUNCTION_54	IF_1	CALL_2
0x4003411	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	      2457	vsprintf.c	FUNCTION_56
0x4003415	    0x654833342528	                xor rsi, qword gs:[0x28]	      2457	vsprintf.c	FUNCTION_56
0x400341e	            0x7519	                           jne 0x4003439	      2457	vsprintf.c	FUNCTION_56
0x4003420	        0x4883c450	                           add rsp, 0x50	      2457	vsprintf.c	FUNCTION_56
0x4003424	              0x5b	                                 pop rbx	      2457	vsprintf.c	FUNCTION_56
0x4003425	            0x415a	                                 pop r10	      2457	vsprintf.c	FUNCTION_56
0x4003427	              0x5d	                                 pop rbp	      2457	vsprintf.c	FUNCTION_56
0x4003428	              0xc3	                                     ret	      2457	vsprintf.c	FUNCTION_56
0x4003429	          0x8d43ff	                      lea eax, [rbx - 1]	      2404	vsprintf.c	FUNCTION_54	IF_2
0x400342c	          0x4885db	                           test rbx, rbx	      2404	vsprintf.c	FUNCTION_54	IF_2
0x400342f	      0xba00000000	                              mov edx, 0	      2404	vsprintf.c	FUNCTION_54	IF_2
0x4003434	           0xf44c2	                          cmove eax, edx	      2404	vsprintf.c	FUNCTION_54	IF_2
0x4003437	            0xebd8	                           jmp 0x4003411	      2404	vsprintf.c	FUNCTION_54	IF_2
0x4003439	      0xe800000000	                          call 0x400343e	      2457	vsprintf.c	FUNCTION_56
widen_string	IF,3:WHILE,1:functions,0:CALL,2:SWITCH,0:DO,0:ELSE,0:FOR,0	58
0x4000c70	            0x4154	                                push r12	       575	vsprintf.c	FUNCTION_16
0x4000c72	              0x55	                                push rbp	       575	vsprintf.c	FUNCTION_16
0x4000c73	              0x53	                                push rbx	       575	vsprintf.c	FUNCTION_16
0x4000c74	          0x4889fb	                            mov rbx, rdi	       575	vsprintf.c	FUNCTION_16
0x4000c77	            0x89cf	                            mov edi, ecx	       575	vsprintf.c	FUNCTION_16
0x4000c79	          0xc1ff08	                              sar edi, 8	       575	vsprintf.c	FUNCTION_16
0x4000c7c	          0x4889d8	                            mov rax, rbx	       579	vsprintf.c	FUNCTION_16	IF_1
0x4000c7f	            0x39f7	                            cmp edi, esi	       578	vsprintf.c	FUNCTION_16	IF_1	CALL_1
0x4000c81	            0x7f05	                            jg 0x4000c88	       578	vsprintf.c	FUNCTION_16	IF_1	CALL_1
0x4000c83	              0x5b	                                 pop rbx	       592	vsprintf.c	FUNCTION_16
0x4000c84	              0x5d	                                 pop rbp	       592	vsprintf.c	FUNCTION_16
0x4000c85	            0x415c	                                 pop r12	       592	vsprintf.c	FUNCTION_16
0x4000c87	              0xc3	                                     ret	       592	vsprintf.c	FUNCTION_16
0x4000c88	        0x48c1e920	                           shr rcx, 0x20	       582	vsprintf.c	FUNCTION_16	IF_2
0x4000c8c	            0x29f7	                            sub edi, esi	       581	vsprintf.c	FUNCTION_16
0x4000c8e	          0x83e102	                              and ecx, 2	       582	vsprintf.c	FUNCTION_16	IF_2
0x4000c91	            0x741f	                            je 0x4000cb2	       582	vsprintf.c	FUNCTION_16	IF_2
0x4000c93	          0x8d4fff	                      lea ecx, [rdi - 1]	       582	vsprintf.c	FUNCTION_16	IF_2
0x4000c96	            0x85ff	                           test edi, edi	       586	vsprintf.c	FUNCTION_16	WHILE_1
0x4000c98	      0x488d440b01	                lea rax, [rbx + rcx + 1]	       586	vsprintf.c	FUNCTION_16	WHILE_1
0x4000c9d	            0x746c	                            je 0x4000d0b	       586	vsprintf.c	FUNCTION_16	WHILE_1
0x4000c9f	          0x4839da	                            cmp rdx, rbx	       587	vsprintf.c	FUNCTION_16	WHILE_1	IF_3
0x4000ca2	            0x7603	                           jbe 0x4000ca7	       587	vsprintf.c	FUNCTION_16	WHILE_1	IF_3
0x4000ca4	          0xc60320	                    mov byte [rbx], 0x20	       588	vsprintf.c	FUNCTION_16	WHILE_1	IF_3
0x4000ca7	        0x4883c301	                              add rbx, 1	       589	vsprintf.c	FUNCTION_16	WHILE_1
0x4000cab	          0x4839c3	                            cmp rbx, rax	       586	vsprintf.c	FUNCTION_16	WHILE_1
0x4000cae	            0x75ef	                           jne 0x4000c9f	       586	vsprintf.c	FUNCTION_16	WHILE_1
0x4000cb0	            0xebd1	                           jmp 0x4000c83	       586	vsprintf.c	FUNCTION_16	WHILE_1
0x4000cb2	          0x4863c6	                         movsxd rax, esi	       583	vsprintf.c	FUNCTION_16	IF_2	CALL_2
0x4000cb5	          0x4989dc	                            mov r12, rbx	       583	vsprintf.c	FUNCTION_16	IF_2	CALL_2
0x4000cb8	          0x4863ef	                         movsxd rbp, edi	       583	vsprintf.c	FUNCTION_16	IF_2	CALL_2
0x4000cbb	          0x4929c4	                            sub r12, rax	       583	vsprintf.c	FUNCTION_16	IF_2	CALL_2
0x4000cbe	          0x4939d4	                            cmp r12, rdx	       550	vsprintf.c	FUNCTION_15	IF_1
0x4000cc1	            0x733f	                           jae 0x4000d02	       550	vsprintf.c	FUNCTION_15	IF_1
0x4000cc3	          0x4c29e2	                            sub rdx, r12	       552	vsprintf.c	FUNCTION_15
0x4000cc6	          0x4863ef	                         movsxd rbp, edi	       553	vsprintf.c	FUNCTION_15	IF_2
0x4000cc9	          0x4839ea	                            cmp rdx, rbp	       553	vsprintf.c	FUNCTION_15	IF_2
0x4000ccc	            0x7627	                           jbe 0x4000cf5	       553	vsprintf.c	FUNCTION_15	IF_2
0x4000cce	            0x85f6	                           test esi, esi	       557	vsprintf.c	FUNCTION_15	IF_3
0x4000cd0	            0x7420	                            je 0x4000cf2	       557	vsprintf.c	FUNCTION_15	IF_3
0x4000cd2	          0x4889d0	                            mov rax, rdx	       558	vsprintf.c	FUNCTION_15	IF_3	IF_4
0x4000cd5	            0x89f6	                            mov esi, esi	       558	vsprintf.c	FUNCTION_15	IF_3	IF_4
0x4000cd7	            0x29fa	                            sub edx, edi	       558	vsprintf.c	FUNCTION_15	IF_3	IF_4
0x4000cd9	          0x4829e8	                            sub rax, rbp	       558	vsprintf.c	FUNCTION_15	IF_3	IF_4
0x4000cdc	        0x498d3c2c	                    lea rdi, [r12 + rbp]	       560	vsprintf.c	FUNCTION_15	IF_3	CALL_2
0x4000ce0	          0x4839c6	                            cmp rsi, rax	       560	vsprintf.c	FUNCTION_15	IF_3	CALL_2
0x4000ce3	        0x480f47f2	                          cmova rsi, rdx	       560	vsprintf.c	FUNCTION_15	IF_3	CALL_2
0x4000ce7	          0x4889f2	                            mov rdx, rsi	       560	vsprintf.c	FUNCTION_15	IF_3	CALL_2
0x4000cea	          0x4c89e6	                            mov rsi, r12	       560	vsprintf.c	FUNCTION_15	IF_3	CALL_2
0x4000ced	      0xe800000000	                          call 0x4000cf2	       560	vsprintf.c	FUNCTION_15	IF_3	CALL_2
0x4000cf2	          0x4889ea	                            mov rdx, rbp	       562	vsprintf.c	FUNCTION_15	CALL_3
0x4000cf5	      0xbe20000000	                           mov esi, 0x20	       562	vsprintf.c	FUNCTION_15	CALL_3
0x4000cfa	          0x4c89e7	                            mov rdi, r12	       562	vsprintf.c	FUNCTION_15	CALL_3
0x4000cfd	      0xe800000000	                          call 0x4000d02	       562	vsprintf.c	FUNCTION_15	CALL_3
0x4000d02	        0x488d042b	                    lea rax, [rbx + rbp]	       584	vsprintf.c	FUNCTION_16	IF_2
0x4000d06	      0xe978ffffff	                           jmp 0x4000c83	       584	vsprintf.c	FUNCTION_16	IF_2
0x4000d0b	          0x4889d8	                            mov rax, rbx	       579	vsprintf.c	FUNCTION_16	IF_1
0x4000d0e	      0xe970ffffff	                           jmp 0x4000c83	       579	vsprintf.c	FUNCTION_16	IF_1
format_decode	IF,23:WHILE,1:functions,0:CALL,11:SWITCH,2:DO,0:ELSE,9:FOR,1	249
0x40008c0	              0x55	                                push rbp	      2006	vsprintf.c	FUNCTION_50
0x40008c1	              0x53	                                push rbx	      2006	vsprintf.c	FUNCTION_50
0x40008c2	          0x4889fd	                            mov rbp, rdi	      2006	vsprintf.c	FUNCTION_50
0x40008c5	          0x4889f3	                            mov rbx, rsi	      2006	vsprintf.c	FUNCTION_50
0x40008c8	        0x4883ec08	                              sub rsp, 8	      2006	vsprintf.c	FUNCTION_50
0x40008cc	           0xfb606	                   movzx eax, byte [rsi]	      2011	vsprintf.c	FUNCTION_50	IF_1
0x40008cf	        0x48893c24	                    mov qword [rsp], rdi	      2006	vsprintf.c	FUNCTION_50
0x40008d3	            0x3c01	                               cmp al, 1	      2011	vsprintf.c	FUNCTION_50	IF_1
0x40008d5	            0x7443	                            je 0x400091a	      2011	vsprintf.c	FUNCTION_50	IF_1
0x40008d7	            0x3c02	                               cmp al, 2	      2021	vsprintf.c	FUNCTION_50	IF_3
0x40008d9	     0xf8497010000	                            je 0x4000a76	      2021	vsprintf.c	FUNCTION_50	IF_3
0x40008df	          0xc60600	                       mov byte [rsi], 0	      2030	vsprintf.c	FUNCTION_50
0x40008e2	           0xfb607	                   movzx eax, byte [rdi]	      2032	vsprintf.c	FUNCTION_50	FOR_1
0x40008e5	            0x84c0	                             test al, al	      2032	vsprintf.c	FUNCTION_50	FOR_1
0x40008e7	     0xf84bd020000	                            je 0x4000baa	      2032	vsprintf.c	FUNCTION_50	FOR_1
0x40008ed	            0x3c25	                            cmp al, 0x25	      2033	vsprintf.c	FUNCTION_50	FOR_1	IF_5
0x40008ef	          0x4889f8	                            mov rax, rdi	      2007	vsprintf.c	FUNCTION_50
0x40008f2	            0x750e	                           jne 0x4000902	      2033	vsprintf.c	FUNCTION_50	FOR_1	IF_5
0x40008f4	      0xe951010000	                           jmp 0x4000a4a	      2033	vsprintf.c	FUNCTION_50	FOR_1	IF_5
0x40008f9	          0x80fa25	                            cmp dl, 0x25	      2033	vsprintf.c	FUNCTION_50	FOR_1	IF_5
0x40008fc	     0xf843f010000	                            je 0x4000a41	      2033	vsprintf.c	FUNCTION_50	FOR_1	IF_5
0x4000902	        0x4883c001	                              add rax, 1	      2032	vsprintf.c	FUNCTION_50	FOR_1
0x4000906	        0x48890424	                    mov qword [rsp], rax	      2032	vsprintf.c	FUNCTION_50	FOR_1
0x400090a	           0xfb610	                   movzx edx, byte [rax]	      2032	vsprintf.c	FUNCTION_50	FOR_1
0x400090d	            0x84d2	                             test dl, dl	      2032	vsprintf.c	FUNCTION_50	FOR_1
0x400090f	            0x75e8	                           jne 0x40008f9	      2032	vsprintf.c	FUNCTION_50	FOR_1
0x4000911	            0x29e8	                            sub eax, ebp	      2177	vsprintf.c	FUNCTION_50
0x4000913	        0x4883c408	                              add rsp, 8	      2178	vsprintf.c	FUNCTION_50
0x4000917	              0x5b	                                 pop rbx	      2178	vsprintf.c	FUNCTION_50
0x4000918	              0x5d	                                 pop rbp	      2178	vsprintf.c	FUNCTION_50
0x4000919	              0xc3	                                     ret	      2178	vsprintf.c	FUNCTION_50
0x400091a	         0xfb64602	               movzx eax, byte [rsi + 2]	      2012	vsprintf.c	FUNCTION_50	IF_1	IF_2
0x400091e	         0xfb64e01	               movzx ecx, byte [rsi + 1]	      2012	vsprintf.c	FUNCTION_50	IF_1	IF_2
0x4000922	        0x48c1e008	                              shl rax, 8	      2012	vsprintf.c	FUNCTION_50	IF_1	IF_2
0x4000926	          0x4809c8	                             or rax, rcx	      2012	vsprintf.c	FUNCTION_50	IF_1	IF_2
0x4000929	          0x4889c2	                            mov rdx, rax	      2012	vsprintf.c	FUNCTION_50	IF_1	IF_2
0x400092c	         0xfb64603	               movzx eax, byte [rsi + 3]	      2012	vsprintf.c	FUNCTION_50	IF_1	IF_2
0x4000930	        0x48c1e010	                           shl rax, 0x10	      2012	vsprintf.c	FUNCTION_50	IF_1	IF_2
0x4000934	          0x4809d0	                             or rax, rdx	      2012	vsprintf.c	FUNCTION_50	IF_1	IF_2
0x4000937	        0x48c1e028	                           shl rax, 0x28	      2012	vsprintf.c	FUNCTION_50	IF_1	IF_2
0x400093b	        0x48c1f828	                           sar rax, 0x28	      2012	vsprintf.c	FUNCTION_50	IF_1	IF_2
0x400093f	            0x85c0	                           test eax, eax	      2012	vsprintf.c	FUNCTION_50	IF_1	IF_2
0x4000941	     0xf8838020000	                            js 0x4000b7f	      2012	vsprintf.c	FUNCTION_50	IF_1	IF_2
0x4000947	          0xc60300	                       mov byte [rbx], 0	      2016	vsprintf.c	FUNCTION_50	IF_1
0x400094a	          0x4889e9	                            mov rcx, rbp	      2007	vsprintf.c	FUNCTION_50
0x400094d	        0xc64306ff	                mov byte [rbx + 6], 0xff	      2075	vsprintf.c	FUNCTION_50
0x4000951	        0xc64307ff	                mov byte [rbx + 7], 0xff	      2075	vsprintf.c	FUNCTION_50
0x4000955	           0xfb601	                   movzx eax, byte [rcx]	      2076	vsprintf.c	FUNCTION_50	IF_10
0x4000958	            0x3c2e	                            cmp al, 0x2e	      2076	vsprintf.c	FUNCTION_50	IF_10
0x400095a	     0xf84f9010000	                            je 0x4000b59	      2076	vsprintf.c	FUNCTION_50	IF_10
0x4000960	          0x8d5098	                   lea edx, [rax - 0x68]	      2092	vsprintf.c	FUNCTION_50	IF_14	CALL_5
0x4000963	          0x80fa12	                            cmp dl, 0x12	      2092	vsprintf.c	FUNCTION_50	IF_14	CALL_5
0x4000966	     0xf868b000000	                           jbe 0x40009f7	      2092	vsprintf.c	FUNCTION_50	IF_14	CALL_5
0x400096c	          0x83c820	                            or eax, 0x20	      2093	vsprintf.c	FUNCTION_50	IF_14
0x400096f	            0x31f6	                            xor esi, esi	      2091	vsprintf.c	FUNCTION_50
0x4000971	            0x89c2	                            mov edx, eax	      2093	vsprintf.c	FUNCTION_50	IF_14
0x4000973	          0x4889c8	                            mov rax, rcx	      2093	vsprintf.c	FUNCTION_50	IF_14
0x4000976	          0x80fa6c	                            cmp dl, 0x6c	      2093	vsprintf.c	FUNCTION_50	IF_14
0x4000979	     0xf8487000000	                            je 0x4000a06	      2093	vsprintf.c	FUNCTION_50	IF_14
0x400097f	        0xc643050a	                 mov byte [rbx + 5], 0xa	      2107	vsprintf.c	FUNCTION_50
0x4000983	           0xfb608	                   movzx ecx, byte [rax]	      2108	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000986	          0x8d51db	                   lea edx, [rcx - 0x25]	      2108	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000989	          0x80fa53	                            cmp dl, 0x53	      2108	vsprintf.c	FUNCTION_50	SWITCH_2
0x400098c	     0xf87b4010000	                            ja 0x4000b46	      2108	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000992	           0xfb6d2	                           movzx edx, dl	      2108	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000995	    0x488b14d50000	                  mov rdx, qword [rdx*8]	      2108	vsprintf.c	FUNCTION_50	SWITCH_2
0x400099d	      0xe900000000	                           jmp 0x40009a2	      2108	vsprintf.c	FUNCTION_50	SWITCH_2
0x40009a2	        0x804b0420	                 or byte [rbx + 4], 0x20	      2131	vsprintf.c	FUNCTION_50	SWITCH_2
0x40009a6	        0xc6430510	                mov byte [rbx + 5], 0x10	      2134	vsprintf.c	FUNCTION_50	SWITCH_2
0x40009aa	        0x4080fe4c	                           cmp sil, 0x4c	      2157	vsprintf.c	FUNCTION_50	IF_18
0x40009ae	     0xf84d8000000	                            je 0x4000a8c	      2157	vsprintf.c	FUNCTION_50	IF_18
0x40009b4	        0x4080fe6c	                           cmp sil, 0x6c	      2159	vsprintf.c	FUNCTION_50	ELSE_4	IF_19
0x40009b8	     0xf84db010000	                            je 0x4000b99	      2159	vsprintf.c	FUNCTION_50	ELSE_4	IF_19
0x40009be	        0x4080fe7a	                           cmp sil, 0x7a	      2162	vsprintf.c	FUNCTION_50	ELSE_5	IF_20
0x40009c2	     0xf8414020000	                            je 0x4000bdc	      2162	vsprintf.c	FUNCTION_50	ELSE_5	IF_20
0x40009c8	        0x4080fe74	                           cmp sil, 0x74	      2164	vsprintf.c	FUNCTION_50	ELSE_6	IF_21
0x40009cc	     0xf8434020000	                            je 0x4000c06	      2164	vsprintf.c	FUNCTION_50	ELSE_6	IF_21
0x40009d2	         0xfb65304	               movzx edx, byte [rbx + 4]	      2168	vsprintf.c	FUNCTION_50	ELSE_7	IF_22
0x40009d6	          0x83e201	                              and edx, 1	      2168	vsprintf.c	FUNCTION_50	ELSE_7	IF_22
0x40009d9	        0x4080fe48	                           cmp sil, 0x48	      2166	vsprintf.c	FUNCTION_50	ELSE_7	IF_22
0x40009dd	     0xf844b020000	                            je 0x4000c2e	      2166	vsprintf.c	FUNCTION_50	ELSE_7	IF_22
0x40009e3	        0x4080fe68	                           cmp sil, 0x68	      2169	vsprintf.c	FUNCTION_50	ELSE_8	IF_23
0x40009e7	     0xf84c4010000	                            je 0x4000bb1	      2169	vsprintf.c	FUNCTION_50	ELSE_8	IF_23
0x40009ed	          0x83c20f	                            add edx, 0xf	      2174	vsprintf.c	FUNCTION_50	ELSE_9
0x40009f0	            0x8813	                      mov byte [rbx], dl	      2174	vsprintf.c	FUNCTION_50	ELSE_9
0x40009f2	      0xe998000000	                           jmp 0x4000a8f	      2174	vsprintf.c	FUNCTION_50	ELSE_9
0x40009f7	      0xbe01100400	                        mov esi, 0x41001	      2092	vsprintf.c	FUNCTION_50	IF_14	CALL_5
0x40009fc	        0x480fa3d6	                             bt rsi, rdx	      2092	vsprintf.c	FUNCTION_50	IF_14	CALL_5
0x4000a00	     0xf8366ffffff	                           jae 0x400096c	      2092	vsprintf.c	FUNCTION_50	IF_14	CALL_5
0x4000a06	        0x488d4101	                      lea rax, [rcx + 1]	      2094	vsprintf.c	FUNCTION_50	IF_14
0x4000a0a	        0x48890424	                    mov qword [rsp], rax	      2094	vsprintf.c	FUNCTION_50	IF_14
0x4000a0e	           0xfb631	                   movzx esi, byte [rcx]	      2094	vsprintf.c	FUNCTION_50	IF_14
0x4000a11	        0x403a7101	                 cmp sil, byte [rcx + 1]	      2095	vsprintf.c	FUNCTION_50	IF_14	IF_15	CALL_6
0x4000a15	     0xf8564ffffff	                           jne 0x400097f	      2095	vsprintf.c	FUNCTION_50	IF_14	IF_15	CALL_6
0x4000a1b	        0x4080fe6c	                           cmp sil, 0x6c	      2096	vsprintf.c	FUNCTION_50	IF_14	IF_15	IF_16
0x4000a1f	     0xf8421020000	                            je 0x4000c46	      2096	vsprintf.c	FUNCTION_50	IF_14	IF_15	IF_16
0x4000a25	        0x4080fe68	                           cmp sil, 0x68	      2099	vsprintf.c	FUNCTION_50	IF_14	IF_15	ELSE_3	IF_17
0x4000a29	     0xf8550ffffff	                           jne 0x400097f	      2099	vsprintf.c	FUNCTION_50	IF_14	IF_15	ELSE_3	IF_17
0x4000a2f	        0x488d4102	                      lea rax, [rcx + 2]	      2101	vsprintf.c	FUNCTION_50	IF_14	IF_15	ELSE_3	IF_17
0x4000a33	      0xbe48000000	                           mov esi, 0x48	      2100	vsprintf.c	FUNCTION_50	IF_14	IF_15	ELSE_3	IF_17
0x4000a38	        0x48890424	                    mov qword [rsp], rax	      2101	vsprintf.c	FUNCTION_50	IF_14	IF_15	ELSE_3	IF_17
0x4000a3c	      0xe93effffff	                           jmp 0x400097f	      2101	vsprintf.c	FUNCTION_50	IF_14	IF_15	ELSE_3	IF_17
0x4000a41	          0x4839c5	                            cmp rbp, rax	      2038	vsprintf.c	FUNCTION_50	IF_6
0x4000a44	     0xf85c7feffff	                           jne 0x4000911	      2038	vsprintf.c	FUNCTION_50	IF_6
0x4000a4a	        0xc6430400	                   mov byte [rbx + 4], 0	      2042	vsprintf.c	FUNCTION_50
0x4000a4e	        0x488d4801	                      lea rcx, [rax + 1]	      2047	vsprintf.c	FUNCTION_50	WHILE_1
0x4000a52	        0x48890c24	                    mov qword [rsp], rcx	      2047	vsprintf.c	FUNCTION_50	WHILE_1
0x4000a56	         0xfb67801	               movzx edi, byte [rax + 1]	      2049	vsprintf.c	FUNCTION_50	WHILE_1	SWITCH_1
0x4000a5a	          0x8d57e0	                   lea edx, [rdi - 0x20]	      2049	vsprintf.c	FUNCTION_50	WHILE_1	SWITCH_1
0x4000a5d	          0x80fa10	                            cmp dl, 0x10	      2049	vsprintf.c	FUNCTION_50	WHILE_1	SWITCH_1
0x4000a60	     0xf87aa000000	                            ja 0x4000b10	      2049	vsprintf.c	FUNCTION_50	WHILE_1	SWITCH_1
0x4000a66	           0xfb6d2	                           movzx edx, dl	      2049	vsprintf.c	FUNCTION_50	WHILE_1	SWITCH_1
0x4000a69	    0x488b14d50000	                  mov rdx, qword [rdx*8]	      2049	vsprintf.c	FUNCTION_50	WHILE_1	SWITCH_1
0x4000a71	      0xe900000000	                           jmp 0x4000a76	      2049	vsprintf.c	FUNCTION_50	WHILE_1	SWITCH_1
0x4000a76	      0x66837e0600	                   cmp word [rsi + 6], 0	      2022	vsprintf.c	FUNCTION_50	IF_3	IF_4
0x4000a7b	            0x781b	                            js 0x4000a98	      2022	vsprintf.c	FUNCTION_50	IF_3	IF_4
0x4000a7d	          0xc60300	                       mov byte [rbx], 0	      2025	vsprintf.c	FUNCTION_50	IF_3
0x4000a80	          0x4889e9	                            mov rcx, rbp	      2007	vsprintf.c	FUNCTION_50
0x4000a83	         0xfb64500	                   movzx eax, byte [rbp]	      2007	vsprintf.c	FUNCTION_50
0x4000a87	      0xe9d4feffff	                           jmp 0x4000960	      2026	vsprintf.c	FUNCTION_50	IF_3
0x4000a8c	          0xc60308	                       mov byte [rbx], 8	      2158	vsprintf.c	FUNCTION_50	IF_18
0x4000a8f	        0x4883c001	                              add rax, 1	      2177	vsprintf.c	FUNCTION_50
0x4000a93	      0xe979feffff	                           jmp 0x4000911	      2177	vsprintf.c	FUNCTION_50
0x4000a98	        0xc6460600	                   mov byte [rsi + 6], 0	      2023	vsprintf.c	FUNCTION_50	IF_3	IF_4
0x4000a9c	        0xc6460700	                   mov byte [rsi + 7], 0	      2023	vsprintf.c	FUNCTION_50	IF_3	IF_4
0x4000aa0	            0xebdb	                           jmp 0x4000a7d	      2023	vsprintf.c	FUNCTION_50	IF_3	IF_4
0x4000aa2	        0x4883c001	                              add rax, 1	      2123	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000aa6	          0xc60306	                       mov byte [rbx], 6	      2122	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000aa9	            0x29e8	                            sub eax, ebp	      2123	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000aab	      0xe963feffff	                           jmp 0x4000913	      2123	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000ab0	        0x4883c001	                              add rax, 1	      2111	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000ab4	          0xc60303	                       mov byte [rbx], 3	      2110	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000ab7	            0x29e8	                            sub eax, ebp	      2111	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000ab9	      0xe955feffff	                           jmp 0x4000913	      2111	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000abe	        0xc6430508	                   mov byte [rbx + 5], 8	      2127	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000ac2	      0xe9e3feffff	                           jmp 0x40009aa	      2128	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000ac7	        0x804b0401	                    or byte [rbx + 4], 1	      2139	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000acb	      0xe9dafeffff	                           jmp 0x40009aa	      2139	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000ad0	        0x4883c001	                              add rax, 1	      2115	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000ad4	          0xc60304	                       mov byte [rbx], 4	      2114	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000ad7	            0x29e8	                            sub eax, ebp	      2115	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000ad9	      0xe935feffff	                           jmp 0x4000913	      2115	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000ade	        0x4883c001	                              add rax, 1	      2119	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000ae2	          0xc60305	                       mov byte [rbx], 5	      2118	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000ae5	            0x29e8	                            sub eax, ebp	      2119	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000ae7	      0xe927feffff	                           jmp 0x4000913	      2119	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000aec	        0x804b0410	                 or byte [rbx + 4], 0x10	      2054	vsprintf.c	FUNCTION_50	WHILE_1	SWITCH_1
0x4000af0	          0x4889c8	                            mov rax, rcx	      2047	vsprintf.c	FUNCTION_50	WHILE_1
0x4000af3	      0xe956ffffff	                           jmp 0x4000a4e	      2047	vsprintf.c	FUNCTION_50	WHILE_1
0x4000af8	        0x804b0402	                    or byte [rbx + 4], 2	      2050	vsprintf.c	FUNCTION_50	WHILE_1	SWITCH_1
0x4000afc	            0xebf2	                           jmp 0x4000af0	      2050	vsprintf.c	FUNCTION_50	WHILE_1	SWITCH_1
0x4000afe	        0x804b0404	                    or byte [rbx + 4], 4	      2051	vsprintf.c	FUNCTION_50	WHILE_1	SWITCH_1
0x4000b02	            0xebec	                           jmp 0x4000af0	      2051	vsprintf.c	FUNCTION_50	WHILE_1	SWITCH_1
0x4000b04	        0x804b0440	                 or byte [rbx + 4], 0x40	      2053	vsprintf.c	FUNCTION_50	WHILE_1	SWITCH_1
0x4000b08	            0xebe6	                           jmp 0x4000af0	      2053	vsprintf.c	FUNCTION_50	WHILE_1	SWITCH_1
0x4000b0a	        0x804b0408	                    or byte [rbx + 4], 8	      2052	vsprintf.c	FUNCTION_50	WHILE_1	SWITCH_1
0x4000b0e	            0xebe0	                           jmp 0x4000af0	      2052	vsprintf.c	FUNCTION_50	WHILE_1	SWITCH_1
0x4000b10	        0xc64301ff	                mov byte [rbx + 1], 0xff	      2063	vsprintf.c	FUNCTION_50
0x4000b14	        0xc64302ff	                mov byte [rbx + 2], 0xff	      2063	vsprintf.c	FUNCTION_50
0x4000b18	        0xc64303ff	                mov byte [rbx + 3], 0xff	      2063	vsprintf.c	FUNCTION_50
0x4000b1c	         0xfbe5001	               movsx edx, byte [rax + 1]	      2065	vsprintf.c	FUNCTION_50	IF_8	CALL_1
0x4000b20	            0x89d6	                            mov esi, edx	      2065	vsprintf.c	FUNCTION_50	IF_8	CALL_1
0x4000b22	          0x83ea30	                           sub edx, 0x30	      2065	vsprintf.c	FUNCTION_50	IF_8	CALL_1
0x4000b25	          0x83fa09	                              cmp edx, 9	      2065	vsprintf.c	FUNCTION_50	IF_8	CALL_1
0x4000b28	     0xf86e0000000	                           jbe 0x4000c0e	      2065	vsprintf.c	FUNCTION_50	IF_8	CALL_1
0x4000b2e	        0x4080fe2a	                           cmp sil, 0x2a	      2067	vsprintf.c	FUNCTION_50	ELSE_1	IF_9
0x4000b32	     0xf8515feffff	                           jne 0x400094d	      2067	vsprintf.c	FUNCTION_50	ELSE_1	IF_9
0x4000b38	        0x4883c002	                              add rax, 2	      2070	vsprintf.c	FUNCTION_50	ELSE_1	IF_9
0x4000b3c	          0xc60301	                       mov byte [rbx], 1	      2069	vsprintf.c	FUNCTION_50	ELSE_1	IF_9
0x4000b3f	            0x29e8	                            sub eax, ebp	      2070	vsprintf.c	FUNCTION_50	ELSE_1	IF_9
0x4000b41	      0xe9cdfdffff	                           jmp 0x4000913	      2070	vsprintf.c	FUNCTION_50	ELSE_1	IF_9
0x4000b46	    0x803d00000000	                cmp byte [0x04000b4d], 0	      2152	vsprintf.c	FUNCTION_50	SWITCH_2	CALL_7
0x4000b4d	            0x746c	                            je 0x4000bbb	      2152	vsprintf.c	FUNCTION_50	SWITCH_2	CALL_7
0x4000b4f	          0xc60307	                       mov byte [rbx], 7	      2153	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000b52	            0x29e8	                            sub eax, ebp	      2154	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000b54	      0xe9bafdffff	                           jmp 0x4000913	      2154	vsprintf.c	FUNCTION_50	SWITCH_2
0x4000b59	        0x488d7101	                      lea rsi, [rcx + 1]	      2077	vsprintf.c	FUNCTION_50	IF_10
0x4000b5d	        0x48893424	                    mov qword [rsp], rsi	      2077	vsprintf.c	FUNCTION_50	IF_10
0x4000b61	         0xfbe5101	               movsx edx, byte [rcx + 1]	      2078	vsprintf.c	FUNCTION_50	IF_10	IF_11	CALL_3
0x4000b65	            0x89d0	                            mov eax, edx	      2078	vsprintf.c	FUNCTION_50	IF_10	IF_11	CALL_3
0x4000b67	          0x83ea30	                           sub edx, 0x30	      2078	vsprintf.c	FUNCTION_50	IF_10	IF_11	CALL_3
0x4000b6a	          0x83fa09	                              cmp edx, 9	      2078	vsprintf.c	FUNCTION_50	IF_10	IF_11	CALL_3
0x4000b6d	            0x7675	                           jbe 0x4000be4	      2078	vsprintf.c	FUNCTION_50	IF_10	IF_11	CALL_3
0x4000b6f	            0x3c2a	                            cmp al, 0x2a	      2082	vsprintf.c	FUNCTION_50	IF_10	ELSE_2	IF_13
0x4000b71	     0xf84c1000000	                            je 0x4000c38	      2082	vsprintf.c	FUNCTION_50	IF_10	ELSE_2	IF_13
0x4000b77	          0x4889f1	                            mov rcx, rsi	      2082	vsprintf.c	FUNCTION_50	IF_10	ELSE_2	IF_13
0x4000b7a	      0xe9e1fdffff	                           jmp 0x4000960	      2082	vsprintf.c	FUNCTION_50	IF_10	ELSE_2	IF_13
0x4000b7f	            0xf7d8	                                 neg eax	      2013	vsprintf.c	FUNCTION_50	IF_1	IF_2
0x4000b81	        0x804e0402	                    or byte [rsi + 4], 2	      2014	vsprintf.c	FUNCTION_50	IF_1	IF_2
0x4000b85	           0xfb6d4	                           movzx edx, ah	      2013	vsprintf.c	FUNCTION_50	IF_1	IF_2
0x4000b88	          0x884601	                  mov byte [rsi + 1], al	      2013	vsprintf.c	FUNCTION_50	IF_1	IF_2
0x4000b8b	          0xc1e810	                           shr eax, 0x10	      2013	vsprintf.c	FUNCTION_50	IF_1	IF_2
0x4000b8e	          0x885602	                  mov byte [rsi + 2], dl	      2013	vsprintf.c	FUNCTION_50	IF_1	IF_2
0x4000b91	          0x884603	                  mov byte [rsi + 3], al	      2013	vsprintf.c	FUNCTION_50	IF_1	IF_2
0x4000b94	      0xe9aefdffff	                           jmp 0x4000947	      2013	vsprintf.c	FUNCTION_50	IF_1	IF_2
0x4000b99	         0xfb65304	               movzx edx, byte [rbx + 4]	      2161	vsprintf.c	FUNCTION_50	ELSE_4	IF_19
0x4000b9d	          0x83e201	                              and edx, 1	      2161	vsprintf.c	FUNCTION_50	ELSE_4	IF_19
0x4000ba0	          0x83c209	                              add edx, 9	      2161	vsprintf.c	FUNCTION_50	ELSE_4	IF_19
0x4000ba3	            0x8813	                      mov byte [rbx], dl	      2161	vsprintf.c	FUNCTION_50	ELSE_4	IF_19
0x4000ba5	      0xe9e5feffff	                           jmp 0x4000a8f	      2161	vsprintf.c	FUNCTION_50	ELSE_4	IF_19
0x4000baa	            0x31c0	                            xor eax, eax	      2032	vsprintf.c	FUNCTION_50	FOR_1
0x4000bac	      0xe962fdffff	                           jmp 0x4000913	      2039	vsprintf.c	FUNCTION_50	IF_6
0x4000bb1	          0x83c20d	                            add edx, 0xd	      2171	vsprintf.c	FUNCTION_50	ELSE_8	IF_23
0x4000bb4	            0x8813	                      mov byte [rbx], dl	      2171	vsprintf.c	FUNCTION_50	ELSE_8	IF_23
0x4000bb6	      0xe9d4feffff	                           jmp 0x4000a8f	      2171	vsprintf.c	FUNCTION_50	ELSE_8	IF_23
0x4000bbb	           0xfbef1	                           movsx esi, cl	      2152	vsprintf.c	FUNCTION_50	SWITCH_2	CALL_7
0x4000bbe	    0x48c7c7000000	                              mov rdi, 0	      2152	vsprintf.c	FUNCTION_50	SWITCH_2	CALL_7
0x4000bc5	    0xc60500000000	                mov byte [0x04000bcc], 1	      2152	vsprintf.c	FUNCTION_50	SWITCH_2	CALL_7
0x4000bcc	      0xe800000000	                          call 0x4000bd1	      2152	vsprintf.c	FUNCTION_50	SWITCH_2	CALL_7
0x4000bd1	             0xf0b	                                     ud2	      2152	vsprintf.c	FUNCTION_50	SWITCH_2	CALL_7
0x4000bd3	        0x488b0424	                    mov rax, qword [rsp]	      2152	vsprintf.c	FUNCTION_50	SWITCH_2	CALL_7
0x4000bd7	      0xe973ffffff	                           jmp 0x4000b4f	      2152	vsprintf.c	FUNCTION_50	SWITCH_2	CALL_7
0x4000bdc	          0xc60311	                    mov byte [rbx], 0x11	      2163	vsprintf.c	FUNCTION_50	ELSE_5	IF_20
0x4000bdf	      0xe9abfeffff	                           jmp 0x4000a8f	      2163	vsprintf.c	FUNCTION_50	ELSE_5	IF_20
0x4000be4	          0x4889e7	                            mov rdi, rsp	      2079	vsprintf.c	FUNCTION_50	IF_10	IF_11	CALL_4
0x4000be7	      0xe854f4ffff	                      call sym.skip_atoi	      2079	vsprintf.c	FUNCTION_50	IF_10	IF_11	CALL_4
0x4000bec	           0xfb6d4	                           movzx edx, ah	      2079	vsprintf.c	FUNCTION_50	IF_10	IF_11	CALL_4
0x4000bef	          0x6685c0	                             test ax, ax	      2080	vsprintf.c	FUNCTION_50	IF_10	IF_11	IF_12
0x4000bf2	          0x884306	                  mov byte [rbx + 6], al	      2079	vsprintf.c	FUNCTION_50	IF_10	IF_11	CALL_4
0x4000bf5	          0x885307	                  mov byte [rbx + 7], dl	      2079	vsprintf.c	FUNCTION_50	IF_10	IF_11	CALL_4
0x4000bf8	            0x785e	                            js 0x4000c58	      2080	vsprintf.c	FUNCTION_50	IF_10	IF_11	IF_12
0x4000bfa	        0x488b0c24	                    mov rcx, qword [rsp]	      2080	vsprintf.c	FUNCTION_50	IF_10	IF_11	IF_12
0x4000bfe	           0xfb601	                   movzx eax, byte [rcx]	      2080	vsprintf.c	FUNCTION_50	IF_10	IF_11	IF_12
0x4000c01	      0xe95afdffff	                           jmp 0x4000960	      2080	vsprintf.c	FUNCTION_50	IF_10	IF_11	IF_12
0x4000c06	          0xc60312	                    mov byte [rbx], 0x12	      2165	vsprintf.c	FUNCTION_50	ELSE_6	IF_21
0x4000c09	      0xe981feffff	                           jmp 0x4000a8f	      2165	vsprintf.c	FUNCTION_50	ELSE_6	IF_21
0x4000c0e	          0x4889e7	                            mov rdi, rsp	      2066	vsprintf.c	FUNCTION_50	CALL_2
0x4000c11	      0xe82af4ffff	                      call sym.skip_atoi	      2066	vsprintf.c	FUNCTION_50	CALL_2
0x4000c16	           0xfb6d4	                           movzx edx, ah	      2066	vsprintf.c	FUNCTION_50	CALL_2
0x4000c19	          0x884301	                  mov byte [rbx + 1], al	      2066	vsprintf.c	FUNCTION_50	CALL_2
0x4000c1c	          0xc1e810	                           shr eax, 0x10	      2066	vsprintf.c	FUNCTION_50	CALL_2
0x4000c1f	          0x885302	                  mov byte [rbx + 2], dl	      2066	vsprintf.c	FUNCTION_50	CALL_2
0x4000c22	          0x884303	                  mov byte [rbx + 3], al	      2066	vsprintf.c	FUNCTION_50	CALL_2
0x4000c25	        0x488b0c24	                    mov rcx, qword [rsp]	      2066	vsprintf.c	FUNCTION_50	CALL_2
0x4000c29	      0xe91ffdffff	                           jmp 0x400094d	      2066	vsprintf.c	FUNCTION_50	CALL_2
0x4000c2e	          0x83c20b	                            add edx, 0xb	      2168	vsprintf.c	FUNCTION_50	ELSE_7	IF_22
0x4000c31	            0x8813	                      mov byte [rbx], dl	      2168	vsprintf.c	FUNCTION_50	ELSE_7	IF_22
0x4000c33	      0xe957feffff	                           jmp 0x4000a8f	      2168	vsprintf.c	FUNCTION_50	ELSE_7	IF_22
0x4000c38	        0x488d4102	                      lea rax, [rcx + 2]	      2085	vsprintf.c	FUNCTION_50	IF_10	ELSE_2	IF_13
0x4000c3c	          0xc60302	                       mov byte [rbx], 2	      2084	vsprintf.c	FUNCTION_50	IF_10	ELSE_2	IF_13
0x4000c3f	            0x29e8	                            sub eax, ebp	      2085	vsprintf.c	FUNCTION_50	IF_10	ELSE_2	IF_13
0x4000c41	      0xe9cdfcffff	                           jmp 0x4000913	      2085	vsprintf.c	FUNCTION_50	IF_10	ELSE_2	IF_13
0x4000c46	        0x488d4102	                      lea rax, [rcx + 2]	      2098	vsprintf.c	FUNCTION_50	IF_14	IF_15	IF_16
0x4000c4a	      0xbe4c000000	                           mov esi, 0x4c	      2097	vsprintf.c	FUNCTION_50	IF_14	IF_15	IF_16
0x4000c4f	        0x48890424	                    mov qword [rsp], rax	      2098	vsprintf.c	FUNCTION_50	IF_14	IF_15	IF_16
0x4000c53	      0xe927fdffff	                           jmp 0x400097f	      2098	vsprintf.c	FUNCTION_50	IF_14	IF_15	IF_16
0x4000c58	        0xc6430600	                   mov byte [rbx + 6], 0	      2081	vsprintf.c	FUNCTION_50	IF_10	IF_11	IF_12
0x4000c5c	        0xc6430700	                   mov byte [rbx + 7], 0	      2081	vsprintf.c	FUNCTION_50	IF_10	IF_11	IF_12
0x4000c60	            0xeb98	                           jmp 0x4000bfa	      2081	vsprintf.c	FUNCTION_50	IF_10	IF_11	IF_12
put_dec	IF,2:WHILE,1:functions,0:CALL,5:SWITCH,0:DO,0:ELSE,1:FOR,0	33
0x4000180	    0x4881feffe0f5	                      cmp rsi, 0x5f5e0ff	       252	vsprintf.c	FUNCTION_8	IF_1
0x4000187	          0x4989f0	                             mov r8, rsi	       251	vsprintf.c	FUNCTION_8
0x400018a	            0x7708	                            ja 0x4000194	       252	vsprintf.c	FUNCTION_8	IF_1
0x400018c	          0x4489c6	                            mov esi, r8d	       258	vsprintf.c	FUNCTION_8	CALL_5
0x400018f	      0xe9dcfeffff	                  jmp sym.put_dec_trunc8	       258	vsprintf.c	FUNCTION_8	CALL_5
0x4000194	          0x4889f0	                            mov rax, rsi	       253	vsprintf.c	FUNCTION_8	CALL_2
0x4000197	    0x49b9fdce6184	           movabs r9, 0xabcc77118461cefd	       253	vsprintf.c	FUNCTION_8	CALL_2
0x40001a1	          0x49f7e1	                                  mul r9	       253	vsprintf.c	FUNCTION_8	CALL_2
0x40001a4	        0x48c1ea1a	                           shr rdx, 0x1a	       253	vsprintf.c	FUNCTION_8	CALL_2
0x40001a8	    0x4869c200e1f5	                imul rax, rdx, 0x5f5e100	       253	vsprintf.c	FUNCTION_8	CALL_2
0x40001af	          0x4989d2	                            mov r10, rdx	       253	vsprintf.c	FUNCTION_8	CALL_2
0x40001b2	          0x4829c6	                            sub rsi, rax	       253	vsprintf.c	FUNCTION_8	CALL_2
0x40001b5	      0xe856ffffff	                  call sym.put_dec_full8	       253	vsprintf.c	FUNCTION_8	CALL_2
0x40001ba	    0x4981faffe0f5	                      cmp r10, 0x5f5e0ff	       255	vsprintf.c	FUNCTION_8	IF_2
0x40001c1	          0x4889c7	                            mov rdi, rax	       253	vsprintf.c	FUNCTION_8	CALL_2
0x40001c4	            0x763e	                           jbe 0x4000204	       255	vsprintf.c	FUNCTION_8	IF_2
0x40001c6	          0x4c89c0	                             mov rax, r8	       256	vsprintf.c	FUNCTION_8	CALL_4
0x40001c9	    0x48ba577813b1	          movabs rdx, 0x39a5652fb1137857	       256	vsprintf.c	FUNCTION_8	CALL_4
0x40001d3	          0x4c89d6	                            mov rsi, r10	       256	vsprintf.c	FUNCTION_8	CALL_4
0x40001d6	          0x48f7e2	                                 mul rdx	       256	vsprintf.c	FUNCTION_8	CALL_4
0x40001d9	          0x4c89d0	                            mov rax, r10	       256	vsprintf.c	FUNCTION_8	CALL_4
0x40001dc	        0x48c1ea33	                           shr rdx, 0x33	       256	vsprintf.c	FUNCTION_8	CALL_4
0x40001e0	          0x4989d0	                             mov r8, rdx	       256	vsprintf.c	FUNCTION_8	CALL_4
0x40001e3	          0x49f7e1	                                  mul r9	       256	vsprintf.c	FUNCTION_8	CALL_4
0x40001e6	        0x48c1ea1a	                           shr rdx, 0x1a	       256	vsprintf.c	FUNCTION_8	CALL_4
0x40001ea	    0x4c69ca00e1f5	                 imul r9, rdx, 0x5f5e100	       256	vsprintf.c	FUNCTION_8	CALL_4
0x40001f1	          0x4c29ce	                             sub rsi, r9	       256	vsprintf.c	FUNCTION_8	CALL_4
0x40001f4	      0xe817ffffff	                  call sym.put_dec_full8	       256	vsprintf.c	FUNCTION_8	CALL_4
0x40001f9	          0x4889c7	                            mov rdi, rax	       256	vsprintf.c	FUNCTION_8	CALL_4
0x40001fc	          0x4489c6	                            mov esi, r8d	       258	vsprintf.c	FUNCTION_8	CALL_5
0x40001ff	      0xe96cfeffff	                  jmp sym.put_dec_trunc8	       258	vsprintf.c	FUNCTION_8	CALL_5
0x4000204	          0x4d89d0	                             mov r8, r10	       258	vsprintf.c	FUNCTION_8	CALL_5
0x4000207	            0xeb83	                           jmp 0x400018c	       258	vsprintf.c	FUNCTION_8	CALL_5
put_dec_trunc8	IF,3:WHILE,0:functions,0:CALL,0:SWITCH,0:DO,0:ELSE,0:FOR,0	39
0x4000070	          0x83fe63	                           cmp esi, 0x63	       187	vsprintf.c	FUNCTION_6	IF_1
0x4000073	            0x7629	                           jbe 0x400009e	       187	vsprintf.c	FUNCTION_6	IF_1
0x4000075	            0x89f0	                            mov eax, esi	       191	vsprintf.c	FUNCTION_6
0x4000077	    0x4869c0295c8f	                imul rax, rax, 0x28f5c29	       191	vsprintf.c	FUNCTION_6
0x400007e	        0x48c1e820	                           shr rax, 0x20	       191	vsprintf.c	FUNCTION_6
0x4000082	          0x6bd064	                     imul edx, eax, 0x64	       192	vsprintf.c	FUNCTION_6
0x4000085	            0x29d6	                            sub esi, edx	       192	vsprintf.c	FUNCTION_6
0x4000087	        0x4883f863	                           cmp rax, 0x63	       196	vsprintf.c	FUNCTION_6	IF_2
0x400008b	     0xfb794360000	             movzx edx, word [rsi + rsi]	       192	vsprintf.c	FUNCTION_6
0x4000093	          0x668917	                      mov word [rdi], dx	       192	vsprintf.c	FUNCTION_6
0x4000096	            0x771f	                            ja 0x40000b7	       196	vsprintf.c	FUNCTION_6	IF_2
0x4000098	        0x4883c702	                              add rdi, 2	       193	vsprintf.c	FUNCTION_6
0x400009c	            0x89c6	                            mov esi, eax	       193	vsprintf.c	FUNCTION_6
0x400009e	            0x89f0	                            mov eax, esi	       217	vsprintf.c	FUNCTION_6
0x40000a0	          0x83fe0a	                            cmp esi, 0xa	       218	vsprintf.c	FUNCTION_6
0x40000a3	     0xfb784000000	             movzx eax, word [rax + rax]	       217	vsprintf.c	FUNCTION_6
0x40000ab	          0x668907	                      mov word [rdi], ax	       217	vsprintf.c	FUNCTION_6
0x40000ae	          0x4819c0	                            sbb rax, rax	       218	vsprintf.c	FUNCTION_6
0x40000b1	      0x488d440702	                lea rax, [rdi + rax + 2]	       219	vsprintf.c	FUNCTION_6
0x40000b6	              0xc3	                                     ret	       220	vsprintf.c	FUNCTION_6
0x40000b7	    0x4869d0295c8f	                imul rdx, rax, 0x28f5c29	       200	vsprintf.c	FUNCTION_6
0x40000be	        0x48c1ea20	                           shr rdx, 0x20	       200	vsprintf.c	FUNCTION_6
0x40000c2	          0x6bca64	                     imul ecx, edx, 0x64	       201	vsprintf.c	FUNCTION_6
0x40000c5	            0x89d6	                            mov esi, edx	       200	vsprintf.c	FUNCTION_6
0x40000c7	            0x29c8	                            sub eax, ecx	       201	vsprintf.c	FUNCTION_6
0x40000c9	        0x4883fa63	                           cmp rdx, 0x63	       205	vsprintf.c	FUNCTION_6	IF_3
0x40000cd	     0xfb784000000	             movzx eax, word [rax + rax]	       201	vsprintf.c	FUNCTION_6
0x40000d5	        0x66894702	                  mov word [rdi + 2], ax	       201	vsprintf.c	FUNCTION_6
0x40000d9	            0x7706	                            ja 0x40000e1	       205	vsprintf.c	FUNCTION_6	IF_3
0x40000db	        0x4883c704	                              add rdi, 4	       202	vsprintf.c	FUNCTION_6
0x40000df	            0xebbd	                           jmp 0x400009e	       202	vsprintf.c	FUNCTION_6
0x40000e1	    0x69f27b140000	                   imul esi, edx, 0x147b	       209	vsprintf.c	FUNCTION_6
0x40000e7	        0x4883c706	                              add rdi, 6	       211	vsprintf.c	FUNCTION_6
0x40000eb	          0xc1ee13	                           shr esi, 0x13	       209	vsprintf.c	FUNCTION_6
0x40000ee	          0x6bc664	                     imul eax, esi, 0x64	       210	vsprintf.c	FUNCTION_6
0x40000f1	            0x29c2	                            sub edx, eax	       210	vsprintf.c	FUNCTION_6
0x40000f3	     0xfb784120000	             movzx eax, word [rdx + rdx]	       210	vsprintf.c	FUNCTION_6
0x40000fb	        0x668947fe	                  mov word [rdi - 2], ax	       210	vsprintf.c	FUNCTION_6
0x40000ff	            0xeb9d	                           jmp 0x400009e	       210	vsprintf.c	FUNCTION_6
symbol_string	IF,3:WHILE,0:functions,0:CALL,6:SWITCH,0:DO,0:ELSE,2:FOR,0	41
0x40012d0	            0x4155	                                push r13	       682	vsprintf.c	FUNCTION_20
0x40012d2	            0x4154	                                push r12	       682	vsprintf.c	FUNCTION_20
0x40012d4	          0x4989cd	                            mov r13, rcx	       682	vsprintf.c	FUNCTION_20
0x40012d7	              0x55	                                push rbp	       682	vsprintf.c	FUNCTION_20
0x40012d8	              0x53	                                push rbx	       682	vsprintf.c	FUNCTION_20
0x40012d9	          0x4889fd	                            mov rbp, rdi	       682	vsprintf.c	FUNCTION_20
0x40012dc	          0x4989f4	                            mov r12, rsi	       682	vsprintf.c	FUNCTION_20
0x40012df	          0x4889d6	                            mov rsi, rdx	       694	vsprintf.c	FUNCTION_20	CALL_2
0x40012e2	    0x4881ecf80000	                           sub rsp, 0xf8	       682	vsprintf.c	FUNCTION_20
0x40012e9	    0x65488b042528	                mov rax, qword gs:[0x28]	       682	vsprintf.c	FUNCTION_20
0x40012f2	    0x48898424f000	             mov qword [rsp + 0xf0], rax	       682	vsprintf.c	FUNCTION_20
0x40012fa	            0x31c0	                            xor eax, eax	       682	vsprintf.c	FUNCTION_20
0x40012fc	        0x410fb600	                    movzx eax, byte [r8]	       693	vsprintf.c	FUNCTION_20	IF_2
0x4001300	      0x488d5c2401	                      lea rbx, [rsp + 1]	       694	vsprintf.c	FUNCTION_20	CALL_2
0x4001305	          0x4889df	                            mov rdi, rbx	       694	vsprintf.c	FUNCTION_20	CALL_2
0x4001308	            0x3c42	                            cmp al, 0x42	       693	vsprintf.c	FUNCTION_20	IF_2
0x400130a	            0x7446	                            je 0x4001352	       693	vsprintf.c	FUNCTION_20	IF_2
0x400130c	            0x3c66	                            cmp al, 0x66	       695	vsprintf.c	FUNCTION_20	ELSE_1	IF_3
0x400130e	            0x740b	                            je 0x400131b	       695	vsprintf.c	FUNCTION_20	ELSE_1	IF_3
0x4001310	            0x3c73	                            cmp al, 0x73	       695	vsprintf.c	FUNCTION_20	ELSE_1	IF_3
0x4001312	            0x7407	                            je 0x400131b	       695	vsprintf.c	FUNCTION_20	ELSE_1	IF_3
0x4001314	      0xe800000000	                          call 0x4001319	       696	vsprintf.c	FUNCTION_20	ELSE_1	IF_3
0x4001319	            0xeb05	                           jmp 0x4001320	       696	vsprintf.c	FUNCTION_20	ELSE_1	IF_3
0x400131b	      0xe800000000	                          call 0x4001320	       698	vsprintf.c	FUNCTION_20	CALL_4
0x4001320	          0x4c89e9	                            mov rcx, r13	       700	vsprintf.c	FUNCTION_20	CALL_5
0x4001323	          0x4889da	                            mov rdx, rbx	       700	vsprintf.c	FUNCTION_20	CALL_5
0x4001326	          0x4c89e6	                            mov rsi, r12	       700	vsprintf.c	FUNCTION_20	CALL_5
0x4001329	          0x4889ef	                            mov rdi, rbp	       700	vsprintf.c	FUNCTION_20	CALL_5
0x400132c	      0xe8eff9ffff	                         call sym.string	       700	vsprintf.c	FUNCTION_20	CALL_5
0x4001331	    0x488b8c24f000	            mov rcx, qword [rsp + 0xf0] 	       704	vsprintf.c	FUNCTION_20
0x4001339	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       704	vsprintf.c	FUNCTION_20
0x4001342	            0x7515	                           jne 0x4001359	       704	vsprintf.c	FUNCTION_20
0x4001344	    0x4881c4f80000	                           add rsp, 0xf8	       704	vsprintf.c	FUNCTION_20
0x400134b	              0x5b	                                 pop rbx	       704	vsprintf.c	FUNCTION_20
0x400134c	              0x5d	                                 pop rbp	       704	vsprintf.c	FUNCTION_20
0x400134d	            0x415c	                                 pop r12	       704	vsprintf.c	FUNCTION_20
0x400134f	            0x415d	                                 pop r13	       704	vsprintf.c	FUNCTION_20
0x4001351	              0xc3	                                     ret	       704	vsprintf.c	FUNCTION_20
0x4001352	      0xe800000000	                          call 0x4001357	       694	vsprintf.c	FUNCTION_20	CALL_2
0x4001357	            0xebc7	                           jmp 0x4001320	       694	vsprintf.c	FUNCTION_20	CALL_2
0x4001359	      0xe800000000	                          call 0x400135e	       704	vsprintf.c	FUNCTION_20
ip4_addr_string_sa	IF,1:WHILE,1:functions,0:CALL,5:SWITCH,1:DO,0:ELSE,0:FOR,0	76
0x4001650	            0x4156	                                push r14	      1224	vsprintf.c	FUNCTION_32
0x4001652	            0x4155	                                push r13	      1224	vsprintf.c	FUNCTION_32
0x4001654	        0x4983c001	                               add r8, 1	      1231	vsprintf.c	FUNCTION_32
0x4001658	            0x4154	                                push r12	      1224	vsprintf.c	FUNCTION_32
0x400165a	              0x55	                                push rbp	      1224	vsprintf.c	FUNCTION_32
0x400165b	          0x4989f4	                            mov r12, rsi	      1224	vsprintf.c	FUNCTION_32
0x400165e	              0x53	                                push rbx	      1224	vsprintf.c	FUNCTION_32
0x400165f	        0x488d7204	                      lea rsi, [rdx + 4]	      1228	vsprintf.c	FUNCTION_32
0x4001663	          0x4889fd	                            mov rbp, rdi	      1224	vsprintf.c	FUNCTION_32
0x4001666	          0x4989d5	                            mov r13, rdx	      1224	vsprintf.c	FUNCTION_32
0x4001669	          0x4889cb	                            mov rbx, rcx	      1224	vsprintf.c	FUNCTION_32
0x400166c	          0x4531c9	                            xor r9d, r9d	      1232	vsprintf.c	FUNCTION_32	WHILE_1	CALL_1
0x400166f	        0x4883ec28	                           sub rsp, 0x28	      1224	vsprintf.c	FUNCTION_32
0x4001673	          0x4531d2	                          xor r10d, r10d	      1232	vsprintf.c	FUNCTION_32	WHILE_1	CALL_1
0x4001676	          0x4531f6	                          xor r14d, r14d	      1225	vsprintf.c	FUNCTION_32
0x4001679	    0x65488b042528	                mov rax, qword gs:[0x28]	      1224	vsprintf.c	FUNCTION_32
0x4001682	      0x4889442420	             mov qword [rsp + 0x20], rax	      1224	vsprintf.c	FUNCTION_32
0x4001687	            0x31c0	                            xor eax, eax	      1224	vsprintf.c	FUNCTION_32
0x4001689	      0x410fb640ff	                movzx eax, byte [r8 - 1]	      1229	vsprintf.c	FUNCTION_32
0x400168e	      0xc644240734	                mov byte [rsp + 7], 0x34	      1229	vsprintf.c	FUNCTION_32
0x4001693	      0xbf01000000	                              mov edi, 1	      1229	vsprintf.c	FUNCTION_32
0x4001698	      0xc644240800	                   mov byte [rsp + 8], 0	      1229	vsprintf.c	FUNCTION_32
0x400169d	        0x88442406	                  mov byte [rsp + 6], al	      1229	vsprintf.c	FUNCTION_32
0x40016a1	        0x4983c001	                               add r8, 1	      1232	vsprintf.c	FUNCTION_32	WHILE_1	CALL_1
0x40016a5	        0x410fb610	                    movzx edx, byte [r8]	      1232	vsprintf.c	FUNCTION_32	WHILE_1	CALL_1
0x40016a9	    0xf68200000000	                      test byte [rdx], 3	      1232	vsprintf.c	FUNCTION_32	WHILE_1	CALL_1
0x40016b0	          0x4889d0	                            mov rax, rdx	      1232	vsprintf.c	FUNCTION_32	WHILE_1	CALL_1
0x40016b3	            0x742f	                            je 0x40016e4	      1232	vsprintf.c	FUNCTION_32	WHILE_1	CALL_1
0x40016b5	          0x8d489e	                   lea ecx, [rax - 0x62]	      1232	vsprintf.c	FUNCTION_32	WHILE_1	CALL_1
0x40016b8	          0x80f90e	                             cmp cl, 0xe	      1232	vsprintf.c	FUNCTION_32	WHILE_1	CALL_1
0x40016bb	            0x77e4	                            ja 0x40016a1	      1232	vsprintf.c	FUNCTION_32	WHILE_1	CALL_1
0x40016bd	          0x4889fa	                            mov rdx, rdi	      1232	vsprintf.c	FUNCTION_32	WHILE_1	CALL_1
0x40016c0	          0x48d3e2	                             shl rdx, cl	      1232	vsprintf.c	FUNCTION_32	WHILE_1	CALL_1
0x40016c3	    0xf7c241140000	                        test edx, 0x1441	      1232	vsprintf.c	FUNCTION_32	WHILE_1	CALL_1
0x40016c9	            0x750e	                           jne 0x40016d9	      1232	vsprintf.c	FUNCTION_32	WHILE_1	CALL_1
0x40016cb	          0x80e640	                            and dh, 0x40	      1235	vsprintf.c	FUNCTION_32	WHILE_1	SWITCH_1
0x40016ce	      0xb801000000	                              mov eax, 1	      1235	vsprintf.c	FUNCTION_32	WHILE_1	SWITCH_1
0x40016d3	        0x440f45f0	                        cmovne r14d, eax	      1235	vsprintf.c	FUNCTION_32	WHILE_1	SWITCH_1
0x40016d7	            0xebc8	                           jmp 0x40016a1	      1235	vsprintf.c	FUNCTION_32	WHILE_1	SWITCH_1
0x40016d9	          0x4189c2	                           mov r10d, eax	      1232	vsprintf.c	FUNCTION_32	WHILE_1	CALL_1
0x40016dc	    0x41b901000000	                              mov r9d, 1	      1232	vsprintf.c	FUNCTION_32	WHILE_1	CALL_1
0x40016e2	            0xebbd	                           jmp 0x40016a1	      1232	vsprintf.c	FUNCTION_32	WHILE_1	CALL_1
0x40016e4	          0x4584c9	                           test r9b, r9b	      1232	vsprintf.c	FUNCTION_32	WHILE_1	CALL_1
0x40016e7	            0x7567	                           jne 0x4001750	      1232	vsprintf.c	FUNCTION_32	WHILE_1	CALL_1
0x40016e9	      0x488d542406	                      lea rdx, [rsp + 6]	      1246	vsprintf.c	FUNCTION_32	CALL_2
0x40016ee	      0x488d7c2409	                      lea rdi, [rsp + 9]	      1246	vsprintf.c	FUNCTION_32	CALL_2
0x40016f3	      0xe828eeffff	                     call sym.ip4_string	      1246	vsprintf.c	FUNCTION_32	CALL_2
0x40016f8	          0x4584f6	                         test r14b, r14b	      1247	vsprintf.c	FUNCTION_32	IF_1
0x40016fb	            0x7420	                            je 0x400171d	      1247	vsprintf.c	FUNCTION_32	IF_1
0x40016fd	          0xc6003a	                    mov byte [rax], 0x3a	      1248	vsprintf.c	FUNCTION_32	IF_1
0x4001700	      0x410fb75502	               movzx edx, word [r13 + 2]	      1249	vsprintf.c	FUNCTION_32	IF_1	CALL_4
0x4001705	        0x488d7801	                      lea rdi, [rax + 1]	      1248	vsprintf.c	FUNCTION_32	IF_1
0x4001709	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1249	vsprintf.c	FUNCTION_32	IF_1	CALL_4
0x400170e	          0x4889d9	                            mov rcx, rbx	      1249	vsprintf.c	FUNCTION_32	IF_1	CALL_4
0x4001711	        0x66c1c208	                               rol dx, 8	      1249	vsprintf.c	FUNCTION_32	IF_1	CALL_4
0x4001715	           0xfb7d2	                           movzx edx, dx	      1249	vsprintf.c	FUNCTION_32	IF_1	CALL_4
0x4001718	      0xe8f3eaffff	                         call sym.number	      1249	vsprintf.c	FUNCTION_32	IF_1	CALL_4
0x400171d	      0x488d542409	                      lea rdx, [rsp + 9]	      1253	vsprintf.c	FUNCTION_32	CALL_5
0x4001722	          0x4889d9	                            mov rcx, rbx	      1253	vsprintf.c	FUNCTION_32	CALL_5
0x4001725	          0xc60000	                       mov byte [rax], 0	      1251	vsprintf.c	FUNCTION_32
0x4001728	          0x4c89e6	                            mov rsi, r12	      1253	vsprintf.c	FUNCTION_32	CALL_5
0x400172b	          0x4889ef	                            mov rdi, rbp	      1253	vsprintf.c	FUNCTION_32	CALL_5
0x400172e	      0xe8edf5ffff	                         call sym.string	      1253	vsprintf.c	FUNCTION_32	CALL_5
0x4001733	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      1254	vsprintf.c	FUNCTION_32
0x4001738	    0x6548331c2528	                xor rbx, qword gs:[0x28]	      1254	vsprintf.c	FUNCTION_32
0x4001741	            0x7514	                           jne 0x4001757	      1254	vsprintf.c	FUNCTION_32
0x4001743	        0x4883c428	                           add rsp, 0x28	      1254	vsprintf.c	FUNCTION_32
0x4001747	              0x5b	                                 pop rbx	      1254	vsprintf.c	FUNCTION_32
0x4001748	              0x5d	                                 pop rbp	      1254	vsprintf.c	FUNCTION_32
0x4001749	            0x415c	                                 pop r12	      1254	vsprintf.c	FUNCTION_32
0x400174b	            0x415d	                                 pop r13	      1254	vsprintf.c	FUNCTION_32
0x400174d	            0x415e	                                 pop r14	      1254	vsprintf.c	FUNCTION_32
0x400174f	              0xc3	                                     ret	      1254	vsprintf.c	FUNCTION_32
0x4001750	      0x4488542408	                mov byte [rsp + 8], r10b	      1254	vsprintf.c	FUNCTION_32
0x4001755	            0xeb92	                           jmp 0x40016e9	      1254	vsprintf.c	FUNCTION_32
0x4001757	      0xe800000000	                          call 0x400175c	      1254	vsprintf.c	FUNCTION_32
ip6_addr_string_sa	IF,6:WHILE,1:functions,0:CALL,9:SWITCH,1:DO,0:ELSE,1:FOR,0	120
0x4001760	            0x4157	                                push r15	      1162	vsprintf.c	FUNCTION_31
0x4001762	            0x4156	                                push r14	      1162	vsprintf.c	FUNCTION_31
0x4001764	        0x4983c001	                               add r8, 1	      1172	vsprintf.c	FUNCTION_31
0x4001768	            0x4155	                                push r13	      1162	vsprintf.c	FUNCTION_31
0x400176a	            0x4154	                                push r12	      1162	vsprintf.c	FUNCTION_31
0x400176c	          0x4989d6	                            mov r14, rdx	      1162	vsprintf.c	FUNCTION_31
0x400176f	              0x55	                                push rbp	      1162	vsprintf.c	FUNCTION_31
0x4001770	              0x53	                                push rbx	      1162	vsprintf.c	FUNCTION_31
0x4001771	          0x4531db	                          xor r11d, r11d	      1163	vsprintf.c	FUNCTION_31
0x4001774	          0x4889cb	                            mov rbx, rcx	      1162	vsprintf.c	FUNCTION_31
0x4001777	          0x4531e4	                          xor r12d, r12d	      1163	vsprintf.c	FUNCTION_31
0x400177a	          0x4531ed	                          xor r13d, r13d	      1163	vsprintf.c	FUNCTION_31
0x400177d	        0x4883ec70	                           sub rsp, 0x70	      1162	vsprintf.c	FUNCTION_31
0x4001781	      0x450fb650ff	               movzx r10d, byte [r8 - 1]	      1169	vsprintf.c	FUNCTION_31
0x4001786	            0x31c9	                            xor ecx, ecx	      1163	vsprintf.c	FUNCTION_31
0x4001788	      0x4889742408	                mov qword [rsp + 8], rsi	      1162	vsprintf.c	FUNCTION_31
0x400178d	        0x488d7208	                      lea rsi, [rdx + 8]	      1168	vsprintf.c	FUNCTION_31
0x4001791	        0x48893c24	                    mov qword [rsp], rdi	      1162	vsprintf.c	FUNCTION_31
0x4001795	    0x65488b042528	                mov rax, qword gs:[0x28]	      1162	vsprintf.c	FUNCTION_31
0x400179e	      0x4889442468	             mov qword [rsp + 0x68], rax	      1162	vsprintf.c	FUNCTION_31
0x40017a3	            0x31c0	                            xor eax, eax	      1162	vsprintf.c	FUNCTION_31
0x40017a5	      0xc644241936	            mov byte [rsp + 0x19], 0x36 	      1169	vsprintf.c	FUNCTION_31
0x40017aa	      0x4488542418	             mov byte [rsp + 0x18], r10b	      1169	vsprintf.c	FUNCTION_31
0x40017af	        0x4983c001	                               add r8, 1	      1173	vsprintf.c	FUNCTION_31	WHILE_1	CALL_1
0x40017b3	        0x410fb610	                    movzx edx, byte [r8]	      1173	vsprintf.c	FUNCTION_31	WHILE_1	CALL_1
0x40017b7	    0xf68200000000	                      test byte [rdx], 3	      1173	vsprintf.c	FUNCTION_31	WHILE_1	CALL_1
0x40017be	          0x4889d0	                            mov rax, rdx	      1173	vsprintf.c	FUNCTION_31	WHILE_1	CALL_1
0x40017c1	            0x7433	                            je 0x40017f6	      1173	vsprintf.c	FUNCTION_31	WHILE_1	CALL_1
0x40017c3	            0x3c66	                            cmp al, 0x66	      1174	vsprintf.c	FUNCTION_31	WHILE_1	SWITCH_1
0x40017c5	            0x7420	                            je 0x40017e7	      1174	vsprintf.c	FUNCTION_31	WHILE_1	SWITCH_1
0x40017c7	            0x7e11	                           jle 0x40017da	      1174	vsprintf.c	FUNCTION_31	WHILE_1	SWITCH_1
0x40017c9	            0x3c70	                            cmp al, 0x70	      1174	vsprintf.c	FUNCTION_31	WHILE_1	SWITCH_1
0x40017cb	            0x7422	                            je 0x40017ef	      1174	vsprintf.c	FUNCTION_31	WHILE_1	SWITCH_1
0x40017cd	            0x3c73	                            cmp al, 0x73	      1182	vsprintf.c	FUNCTION_31	WHILE_1	SWITCH_1
0x40017cf	      0xb801000000	                              mov eax, 1	      1182	vsprintf.c	FUNCTION_31	WHILE_1	SWITCH_1
0x40017d4	        0x440f44e8	                         cmove r13d, eax	      1182	vsprintf.c	FUNCTION_31	WHILE_1	SWITCH_1
0x40017d8	            0xebd5	                           jmp 0x40017af	      1182	vsprintf.c	FUNCTION_31	WHILE_1	SWITCH_1
0x40017da	            0x3c63	                            cmp al, 0x63	      1185	vsprintf.c	FUNCTION_31	WHILE_1	SWITCH_1
0x40017dc	      0xb801000000	                              mov eax, 1	      1185	vsprintf.c	FUNCTION_31	WHILE_1	SWITCH_1
0x40017e1	        0x440f44d8	                         cmove r11d, eax	      1185	vsprintf.c	FUNCTION_31	WHILE_1	SWITCH_1
0x40017e5	            0xebc8	                           jmp 0x40017af	      1185	vsprintf.c	FUNCTION_31	WHILE_1	SWITCH_1
0x40017e7	    0x41bc01000000	                             mov r12d, 1	      1179	vsprintf.c	FUNCTION_31	WHILE_1	SWITCH_1
0x40017ed	            0xebc0	                           jmp 0x40017af	      1180	vsprintf.c	FUNCTION_31	WHILE_1	SWITCH_1
0x40017ef	      0xb901000000	                              mov ecx, 1	      1176	vsprintf.c	FUNCTION_31	WHILE_1	SWITCH_1
0x40017f4	            0xebb9	                           jmp 0x40017af	      1176	vsprintf.c	FUNCTION_31	WHILE_1	SWITCH_1
0x40017f6	          0x4589ef	                          mov r15d, r13d	      1176	vsprintf.c	FUNCTION_31	WHILE_1	SWITCH_1
0x40017f9	          0x4509e7	                           or r15d, r12d	      1176	vsprintf.c	FUNCTION_31	WHILE_1	SWITCH_1
0x40017fc	          0x4108cf	                             or r15b, cl	      1190	vsprintf.c	FUNCTION_31	IF_1
0x40017ff	     0xf8595000000	                           jne 0x400189a	      1190	vsprintf.c	FUNCTION_31	IF_1
0x4001805	      0x488d6c241a	                   lea rbp, [rsp + 0x1a]	      1190	vsprintf.c	FUNCTION_31	IF_1
0x400180a	          0x4889ef	                            mov rdi, rbp	      1190	vsprintf.c	FUNCTION_31	IF_1
0x400180d	        0x4180fa49	                          cmp r10b, 0x49	      1195	vsprintf.c	FUNCTION_31	IF_2
0x4001811	        0x884c2417	               mov byte [rsp + 0x17], cl	      1195	vsprintf.c	FUNCTION_31	IF_2
0x4001815	            0x7509	                           jne 0x4001820	      1195	vsprintf.c	FUNCTION_31	IF_2
0x4001817	          0x4584db	                         test r11b, r11b	      1195	vsprintf.c	FUNCTION_31	IF_2
0x400181a	     0xf85d9000000	                           jne 0x40018f9	      1195	vsprintf.c	FUNCTION_31	IF_2
0x4001820	      0x488d542418	                   lea rdx, [rsp + 0x18]	      1198	vsprintf.c	FUNCTION_31	CALL_3
0x4001825	      0xe8f6edffff	                     call sym.ip6_string	      1198	vsprintf.c	FUNCTION_31	CALL_3
0x400182a	       0xfb64c2417	           movzx ecx, byte [rsp + 0x17] 	      1198	vsprintf.c	FUNCTION_31	CALL_3
0x400182f	          0x4584ff	                         test r15b, r15b	      1200	vsprintf.c	FUNCTION_31	IF_3
0x4001832	            0x740b	                            je 0x400183f	      1200	vsprintf.c	FUNCTION_31	IF_3
0x4001834	            0x84c9	                             test cl, cl	      1203	vsprintf.c	FUNCTION_31	IF_4
0x4001836	          0xc6005d	                    mov byte [rax], 0x5d	      1201	vsprintf.c	FUNCTION_31	IF_3
0x4001839	            0x7572	                           jne 0x40018ad	      1203	vsprintf.c	FUNCTION_31	IF_4
0x400183b	        0x4883c001	                              add rax, 1	      1201	vsprintf.c	FUNCTION_31	IF_3
0x400183f	          0x4584e4	                         test r12b, r12b	      1207	vsprintf.c	FUNCTION_31	IF_5
0x4001842	     0xf858e000000	                           jne 0x40018d6	      1207	vsprintf.c	FUNCTION_31	IF_5
0x4001848	          0x4584ed	                         test r13b, r13b	      1212	vsprintf.c	FUNCTION_31	IF_6
0x400184b	            0x7417	                            je 0x4001864	      1212	vsprintf.c	FUNCTION_31	IF_6
0x400184d	          0xc60025	                    mov byte [rax], 0x25	      1213	vsprintf.c	FUNCTION_31	IF_6
0x4001850	        0x418b5618	            mov edx, dword [r14 + 0x18] 	      1214	vsprintf.c	FUNCTION_31	IF_6	CALL_8
0x4001854	        0x488d7801	                      lea rdi, [rax + 1]	      1213	vsprintf.c	FUNCTION_31	IF_6
0x4001858	        0x488d754e	                   lea rsi, [rbp + 0x4e]	      1214	vsprintf.c	FUNCTION_31	IF_6	CALL_8
0x400185c	          0x4889d9	                            mov rcx, rbx	      1214	vsprintf.c	FUNCTION_31	IF_6	CALL_8
0x400185f	      0xe8ace9ffff	                         call sym.number	      1214	vsprintf.c	FUNCTION_31	IF_6	CALL_8
0x4001864	      0x488b742408	                mov rsi, qword [rsp + 8]	      1218	vsprintf.c	FUNCTION_31	CALL_9
0x4001869	        0x488b3c24	                    mov rdi, qword [rsp]	      1218	vsprintf.c	FUNCTION_31	CALL_9
0x400186d	          0x4889d9	                            mov rcx, rbx	      1218	vsprintf.c	FUNCTION_31	CALL_9
0x4001870	          0xc60000	                       mov byte [rax], 0	      1216	vsprintf.c	FUNCTION_31
0x4001873	          0x4889ea	                            mov rdx, rbp	      1218	vsprintf.c	FUNCTION_31	CALL_9
0x4001876	      0xe8a5f4ffff	                         call sym.string	      1218	vsprintf.c	FUNCTION_31	CALL_9
0x400187b	      0x488b5c2468	            mov rbx, qword [rsp + 0x68] 	      1219	vsprintf.c	FUNCTION_31
0x4001880	    0x6548331c2528	                xor rbx, qword gs:[0x28]	      1219	vsprintf.c	FUNCTION_31
0x4001889	            0x757d	                           jne 0x4001908	      1219	vsprintf.c	FUNCTION_31
0x400188b	        0x4883c470	                           add rsp, 0x70	      1219	vsprintf.c	FUNCTION_31
0x400188f	              0x5b	                                 pop rbx	      1219	vsprintf.c	FUNCTION_31
0x4001890	              0x5d	                                 pop rbp	      1219	vsprintf.c	FUNCTION_31
0x4001891	            0x415c	                                 pop r12	      1219	vsprintf.c	FUNCTION_31
0x4001893	            0x415d	                                 pop r13	      1219	vsprintf.c	FUNCTION_31
0x4001895	            0x415e	                                 pop r14	      1219	vsprintf.c	FUNCTION_31
0x4001897	            0x415f	                                 pop r15	      1219	vsprintf.c	FUNCTION_31
0x4001899	              0xc3	                                     ret	      1219	vsprintf.c	FUNCTION_31
0x400189a	      0x488d6c241a	                   lea rbp, [rsp + 0x1a]	      1191	vsprintf.c	FUNCTION_31	IF_1
0x400189f	      0xc644241a5b	            mov byte [rsp + 0x1a], 0x5b 	      1191	vsprintf.c	FUNCTION_31	IF_1
0x40018a4	        0x488d7d01	                      lea rdi, [rbp + 1]	      1191	vsprintf.c	FUNCTION_31	IF_1
0x40018a8	      0xe960ffffff	                           jmp 0x400180d	      1191	vsprintf.c	FUNCTION_31	IF_1
0x40018ad	        0xc640013a	                mov byte [rax + 1], 0x3a	      1204	vsprintf.c	FUNCTION_31	IF_4
0x40018b1	      0x410fb75602	               movzx edx, word [r14 + 2]	      1205	vsprintf.c	FUNCTION_31	IF_4	CALL_5
0x40018b6	        0x488d7802	                      lea rdi, [rax + 2]	      1204	vsprintf.c	FUNCTION_31	IF_4
0x40018ba	        0x488d754e	                   lea rsi, [rbp + 0x4e]	      1205	vsprintf.c	FUNCTION_31	IF_4	CALL_5
0x40018be	          0x4889d9	                            mov rcx, rbx	      1205	vsprintf.c	FUNCTION_31	IF_4	CALL_5
0x40018c1	        0x66c1c208	                               rol dx, 8	      1205	vsprintf.c	FUNCTION_31	IF_4	CALL_5
0x40018c5	           0xfb7d2	                           movzx edx, dx	      1205	vsprintf.c	FUNCTION_31	IF_4	CALL_5
0x40018c8	      0xe843e9ffff	                         call sym.number	      1205	vsprintf.c	FUNCTION_31	IF_4	CALL_5
0x40018cd	          0x4584e4	                         test r12b, r12b	      1207	vsprintf.c	FUNCTION_31	IF_5
0x40018d0	     0xf8472ffffff	                            je 0x4001848	      1207	vsprintf.c	FUNCTION_31	IF_5
0x40018d6	          0xc6002f	                    mov byte [rax], 0x2f	      1208	vsprintf.c	FUNCTION_31	IF_5
0x40018d9	        0x418b5604	                mov edx, dword [r14 + 4]	      1209	vsprintf.c	FUNCTION_31	IF_5	CALL_7
0x40018dd	        0x488d7801	                      lea rdi, [rax + 1]	      1208	vsprintf.c	FUNCTION_31	IF_5
0x40018e1	        0x488d754e	                   lea rsi, [rbp + 0x4e]	      1209	vsprintf.c	FUNCTION_31	IF_5	CALL_7
0x40018e5	          0x4889d9	                            mov rcx, rbx	      1209	vsprintf.c	FUNCTION_31	IF_5	CALL_7
0x40018e8	          0x80e20f	                             and dl, 0xf	      1209	vsprintf.c	FUNCTION_31	IF_5	CALL_7
0x40018eb	             0xfca	                               bswap edx	      1209	vsprintf.c	FUNCTION_31	IF_5	CALL_7
0x40018ed	            0x89d2	                            mov edx, edx	      1209	vsprintf.c	FUNCTION_31	IF_5	CALL_7
0x40018ef	      0xe81ce9ffff	                         call sym.number	      1209	vsprintf.c	FUNCTION_31	IF_5	CALL_7
0x40018f4	      0xe94fffffff	                           jmp 0x4001848	      1209	vsprintf.c	FUNCTION_31	IF_5	CALL_7
0x40018f9	      0xe862faffff	          call sym.ip6_compressed_string	      1196	vsprintf.c	FUNCTION_31	CALL_2
0x40018fe	       0xfb64c2417	           movzx ecx, byte [rsp + 0x17] 	      1196	vsprintf.c	FUNCTION_31	CALL_2
0x4001903	      0xe927ffffff	                           jmp 0x400182f	      1196	vsprintf.c	FUNCTION_31	CALL_2
0x4001908	      0xe800000000	                          call 0x400190d	      1219	vsprintf.c	FUNCTION_31
num_to_str	IF,3:WHILE,0:functions,0:CALL,2:SWITCH,0:DO,0:ELSE,2:FOR,2	60
0x4003d10	              0x55	                                push rbp	       340	vsprintf.c	FUNCTION_12
0x4003d11	              0x53	                                push rbx	       340	vsprintf.c	FUNCTION_12
0x4003d12	          0x4989fb	                            mov r11, rdi	       340	vsprintf.c	FUNCTION_12
0x4003d15	            0x89f3	                            mov ebx, esi	       340	vsprintf.c	FUNCTION_12
0x4003d17	        0x4883ec28	                           sub rsp, 0x28	       340	vsprintf.c	FUNCTION_12
0x4003d1b	    0x65488b042528	                mov rax, qword gs:[0x28]	       340	vsprintf.c	FUNCTION_12
0x4003d24	      0x4889442420	             mov qword [rsp + 0x20], rax	       340	vsprintf.c	FUNCTION_12
0x4003d29	            0x31c0	                            xor eax, eax	       340	vsprintf.c	FUNCTION_12
0x4003d2b	        0x4883fa09	                              cmp rdx, 9	       346	vsprintf.c	FUNCTION_12	IF_1
0x4003d2f	            0x7775	                            ja 0x4003da6	       346	vsprintf.c	FUNCTION_12	IF_1
0x4003d31	          0x83c230	                           add edx, 0x30	       347	vsprintf.c	FUNCTION_12	IF_1
0x4003d34	      0xb801000000	                              mov eax, 1	       348	vsprintf.c	FUNCTION_12	IF_1
0x4003d39	        0x88542408	                  mov byte [rsp + 8], dl	       347	vsprintf.c	FUNCTION_12	IF_1
0x4003d3d	            0x39d8	                            cmp eax, ebx	       353	vsprintf.c	FUNCTION_12	IF_2
0x4003d3f	            0x7f61	                            jg 0x4003da2	       353	vsprintf.c	FUNCTION_12	IF_2
0x4003d41	            0x39cb	                            cmp ebx, ecx	       353	vsprintf.c	FUNCTION_12	IF_2
0x4003d43	            0x725d	                            jb 0x4003da2	       353	vsprintf.c	FUNCTION_12	IF_2
0x4003d45	          0x4531c0	                            xor r8d, r8d	       361	vsprintf.c	FUNCTION_12	ELSE_2
0x4003d48	            0x39c1	                            cmp ecx, eax	       356	vsprintf.c	FUNCTION_12	IF_3
0x4003d4a	            0x7619	                           jbe 0x4003d65	       356	vsprintf.c	FUNCTION_12	IF_3
0x4003d4c	            0x29c1	                            sub ecx, eax	       358	vsprintf.c	FUNCTION_12	IF_3	FOR_1
0x4003d4e	          0x4189c8	                            mov r8d, ecx	       358	vsprintf.c	FUNCTION_12	IF_3	FOR_1
0x4003d51	            0x7412	                            je 0x4003d65	       358	vsprintf.c	FUNCTION_12	IF_3	FOR_1
0x4003d53	            0x31d2	                            xor edx, edx	       358	vsprintf.c	FUNCTION_12	IF_3	FOR_1
0x4003d55	          0x4863ca	                         movsxd rcx, edx	       359	vsprintf.c	FUNCTION_12	IF_3	FOR_1
0x4003d58	          0x83c201	                              add edx, 1	       358	vsprintf.c	FUNCTION_12	IF_3	FOR_1
0x4003d5b	          0x4439c2	                            cmp edx, r8d	       358	vsprintf.c	FUNCTION_12	IF_3	FOR_1
0x4003d5e	      0x41c6040b20	              mov byte [r11 + rcx], 0x20	       359	vsprintf.c	FUNCTION_12	IF_3	FOR_1
0x4003d63	            0x75f0	                           jne 0x4003d55	       358	vsprintf.c	FUNCTION_12	IF_3	FOR_1
0x4003d65	            0x85c0	                           test eax, eax	       364	vsprintf.c	FUNCTION_12	FOR_2
0x4003d67	          0x8d50ff	                      lea edx, [rax - 1]	       364	vsprintf.c	FUNCTION_12	FOR_2
0x4003d6a	          0x4489c1	                            mov ecx, r8d	       364	vsprintf.c	FUNCTION_12	FOR_2
0x4003d6d	            0x7e19	                           jle 0x4003d88	       364	vsprintf.c	FUNCTION_12	FOR_2
0x4003d6f	          0x4863fa	                         movsxd rdi, edx	       365	vsprintf.c	FUNCTION_12	FOR_2
0x4003d72	          0x83ea01	                              sub edx, 1	       365	vsprintf.c	FUNCTION_12	FOR_2
0x4003d75	            0x89ce	                            mov esi, ecx	       365	vsprintf.c	FUNCTION_12	FOR_2
0x4003d77	       0xfb67c3c08	        movzx edi, byte [rsp + rdi + 8] 	       365	vsprintf.c	FUNCTION_12	FOR_2
0x4003d7c	          0x83c101	                              add ecx, 1	       365	vsprintf.c	FUNCTION_12	FOR_2
0x4003d7f	          0x83faff	             cmp edx, 0xffffffffffffffff	       364	vsprintf.c	FUNCTION_12	FOR_2
0x4003d82	        0x41883c33	               mov byte [r11 + rsi], dil	       365	vsprintf.c	FUNCTION_12	FOR_2
0x4003d86	            0x75e7	                           jne 0x4003d6f	       364	vsprintf.c	FUNCTION_12	FOR_2
0x4003d88	          0x4401c0	                            add eax, r8d	       367	vsprintf.c	FUNCTION_12
0x4003d8b	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	       368	vsprintf.c	FUNCTION_12
0x4003d90	    0x6548331c2528	                xor rbx, qword gs:[0x28]	       368	vsprintf.c	FUNCTION_12
0x4003d99	            0x752a	                           jne 0x4003dc5	       368	vsprintf.c	FUNCTION_12
0x4003d9b	        0x4883c428	                           add rsp, 0x28	       368	vsprintf.c	FUNCTION_12
0x4003d9f	              0x5b	                                 pop rbx	       368	vsprintf.c	FUNCTION_12
0x4003da0	              0x5d	                                 pop rbp	       368	vsprintf.c	FUNCTION_12
0x4003da1	              0xc3	                                     ret	       368	vsprintf.c	FUNCTION_12
0x4003da2	            0x31c0	                            xor eax, eax	       354	vsprintf.c	FUNCTION_12	IF_2
0x4003da4	            0xebe5	                           jmp 0x4003d8b	       354	vsprintf.c	FUNCTION_12	IF_2
0x4003da6	      0x488d6c2408	                      lea rbp, [rsp + 8]	       350	vsprintf.c	FUNCTION_12	ELSE_1	CALL_2
0x4003dab	          0x4889d6	                            mov rsi, rdx	       350	vsprintf.c	FUNCTION_12	ELSE_1	CALL_2
0x4003dae	        0x894c2404	                mov dword [rsp + 4], ecx	       350	vsprintf.c	FUNCTION_12	ELSE_1	CALL_2
0x4003db2	          0x4889ef	                            mov rdi, rbp	       350	vsprintf.c	FUNCTION_12	ELSE_1	CALL_2
0x4003db5	      0xe8c6c3ffff	                        call sym.put_dec	       350	vsprintf.c	FUNCTION_12	ELSE_1	CALL_2
0x4003dba	            0x29e8	                            sub eax, ebp	       350	vsprintf.c	FUNCTION_12	ELSE_1	CALL_2
0x4003dbc	        0x8b4c2404	                mov ecx, dword [rsp + 4]	       350	vsprintf.c	FUNCTION_12	ELSE_1	CALL_2
0x4003dc0	      0xe978ffffff	                           jmp 0x4003d3d	       350	vsprintf.c	FUNCTION_12	ELSE_1	CALL_2
0x4003dc5	      0xe800000000	                  call section_end..text	       368	vsprintf.c	FUNCTION_12
vsprintf	IF,0:WHILE,0:functions,0:CALL,1:SWITCH,0:DO,0:ELSE,0:FOR,0	4
0x4003340	          0x4889d1	                            mov rcx, rdx	      2476	vsprintf.c	FUNCTION_57	CALL_1
0x4003343	          0x4889f2	                            mov rdx, rsi	      2476	vsprintf.c	FUNCTION_57	CALL_1
0x4003346	      0xbeffffff7f	                     mov esi, 0x7fffffff	      2476	vsprintf.c	FUNCTION_57	CALL_1
0x400334b	      0xe9e0faffff	                       jmp sym.vsnprintf	      2476	vsprintf.c	FUNCTION_57	CALL_1
sscanf	IF,0:WHILE,0:functions,0:CALL,3:SWITCH,0:DO,0:ELSE,0:FOR,0	26
0x40023f0	              0x55	                                push rbp	      3194	vsprintf.c	FUNCTION_63
0x40023f1	          0x4889e5	                            mov rbp, rsp	      3194	vsprintf.c	FUNCTION_63
0x40023f4	            0x4152	                                push r10	      3194	vsprintf.c	FUNCTION_63
0x40023f6	        0x4c8d5510	                   lea r10, [rbp + 0x10]	      3194	vsprintf.c	FUNCTION_63
0x40023fa	        0x4883ec50	                           sub rsp, 0x50	      3194	vsprintf.c	FUNCTION_63
0x40023fe	        0x488955d8	             mov qword [rbp - 0x28], rdx	      3194	vsprintf.c	FUNCTION_63
0x4002402	        0x488d55a8	                   lea rdx, [rbp - 0x58]	      3199	vsprintf.c	FUNCTION_63	CALL_2
0x4002406	    0x65488b042528	                mov rax, qword gs:[0x28]	      3194	vsprintf.c	FUNCTION_63
0x400240f	        0x488945c0	             mov qword [rbp - 0x40], rax	      3194	vsprintf.c	FUNCTION_63
0x4002413	            0x31c0	                            xor eax, eax	      3194	vsprintf.c	FUNCTION_63
0x4002415	        0x488d45c8	                   lea rax, [rbp - 0x38]	      3198	vsprintf.c	FUNCTION_63	CALL_1
0x4002419	        0x48894de0	             mov qword [rbp - 0x20], rcx	      3194	vsprintf.c	FUNCTION_63
0x400241d	        0x4c8945e8	              mov qword [rbp - 0x18], r8	      3194	vsprintf.c	FUNCTION_63
0x4002421	        0x4c894df0	              mov qword [rbp - 0x10], r9	      3194	vsprintf.c	FUNCTION_63
0x4002425	    0xc745a8100000	           mov dword [rbp - 0x58], 0x10 	      3198	vsprintf.c	FUNCTION_63	CALL_1
0x400242c	        0x4c8955b0	             mov qword [rbp - 0x50], r10	      3198	vsprintf.c	FUNCTION_63	CALL_1
0x4002430	        0x488945b8	             mov qword [rbp - 0x48], rax	      3198	vsprintf.c	FUNCTION_63	CALL_1
0x4002434	      0xe800000000	                          call 0x4002439	      3199	vsprintf.c	FUNCTION_63	CALL_2
0x4002439	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      3203	vsprintf.c	FUNCTION_63
0x400243d	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      3203	vsprintf.c	FUNCTION_63
0x4002446	            0x7508	                           jne 0x4002450	      3203	vsprintf.c	FUNCTION_63
0x4002448	        0x4883c450	                           add rsp, 0x50	      3203	vsprintf.c	FUNCTION_63
0x400244c	            0x415a	                                 pop r10	      3203	vsprintf.c	FUNCTION_63
0x400244e	              0x5d	                                 pop rbp	      3203	vsprintf.c	FUNCTION_63
0x400244f	              0xc3	                                     ret	      3203	vsprintf.c	FUNCTION_63
0x4002450	      0xe800000000	                          call 0x4002455	      3203	vsprintf.c	FUNCTION_63
flags_string	IF,0:WHILE,0:functions,0:CALL,2:SWITCH,1:DO,0:ELSE,0:FOR,0	84
0x40010c0	            0x4156	                                push r14	      1511	vsprintf.c	FUNCTION_40
0x40010c2	            0x4155	                                push r13	      1511	vsprintf.c	FUNCTION_40
0x40010c4	          0x4889f8	                            mov rax, rdi	      1511	vsprintf.c	FUNCTION_40
0x40010c7	            0x4154	                                push r12	      1511	vsprintf.c	FUNCTION_40
0x40010c9	              0x55	                                push rbp	      1511	vsprintf.c	FUNCTION_40
0x40010ca	          0x4989f6	                            mov r14, rsi	      1511	vsprintf.c	FUNCTION_40
0x40010cd	              0x53	                                push rbx	      1511	vsprintf.c	FUNCTION_40
0x40010ce	        0x4883ec08	                              sub rsp, 8	      1511	vsprintf.c	FUNCTION_40
0x40010d2	         0xfb64901	               movzx ecx, byte [rcx + 1]	      1515	vsprintf.c	FUNCTION_40	SWITCH_1
0x40010d6	          0x80f970	                            cmp cl, 0x70	      1515	vsprintf.c	FUNCTION_40	SWITCH_1
0x40010d9	     0xf84c8000000	                            je 0x40011a7	      1515	vsprintf.c	FUNCTION_40	SWITCH_1
0x40010df	          0x80f976	                            cmp cl, 0x76	      1515	vsprintf.c	FUNCTION_40	SWITCH_1
0x40010e2	     0xf84b0000000	                            je 0x4001198	      1515	vsprintf.c	FUNCTION_40	SWITCH_1
0x40010e8	          0x80f967	                            cmp cl, 0x67	      1515	vsprintf.c	FUNCTION_40	SWITCH_1
0x40010eb	            0x741a	                            je 0x4001107	      1515	vsprintf.c	FUNCTION_40	SWITCH_1
0x40010ed	    0x803d00000000	                cmp byte [0x040010f4], 0	      1531	vsprintf.c	FUNCTION_40	SWITCH_1	CALL_1
0x40010f4	     0xf84c3000000	                            je 0x40011bd	      1531	vsprintf.c	FUNCTION_40	SWITCH_1	CALL_1
0x40010fa	        0x4883c408	                              add rsp, 8	      1536	vsprintf.c	FUNCTION_40
0x40010fe	              0x5b	                                 pop rbx	      1536	vsprintf.c	FUNCTION_40
0x40010ff	              0x5d	                                 pop rbp	      1536	vsprintf.c	FUNCTION_40
0x4001100	            0x415c	                                 pop r12	      1536	vsprintf.c	FUNCTION_40
0x4001102	            0x415d	                                 pop r13	      1536	vsprintf.c	FUNCTION_40
0x4001104	            0x415e	                                 pop r14	      1536	vsprintf.c	FUNCTION_40
0x4001106	              0xc3	                                     ret	      1536	vsprintf.c	FUNCTION_40
0x4001107	          0x448b2a	                   mov r13d, dword [rdx]	      1527	vsprintf.c	FUNCTION_40	SWITCH_1
0x400110a	    0x48c7c3000000	                              mov rbx, 0	      1528	vsprintf.c	FUNCTION_40	SWITCH_1
0x4001111	          0x4d85ed	                           test r13, r13	      1488	vsprintf.c	FUNCTION_39	FOR_1
0x4001114	            0x74e4	                            je 0x40010fa	      1488	vsprintf.c	FUNCTION_39	FOR_1
0x4001116	        0x488b5308	                mov rdx, qword [rbx + 8]	      1488	vsprintf.c	FUNCTION_39	FOR_1
0x400111a	        0x4883c310	                           add rbx, 0x10	      1488	vsprintf.c	FUNCTION_39	FOR_1
0x400111e	    0x4c8b25000000	            mov r12, qword [0x04001125] 	      1493	vsprintf.c	FUNCTION_39	FOR_1	CALL_1
0x4001125	          0x4885d2	                           test rdx, rdx	      1488	vsprintf.c	FUNCTION_39	FOR_1
0x4001128	            0x750f	                           jne 0x4001139	      1488	vsprintf.c	FUNCTION_39	FOR_1
0x400112a	            0xeb4b	                           jmp 0x4001177	      1488	vsprintf.c	FUNCTION_39	FOR_1
0x400112c	        0x488b5308	                mov rdx, qword [rbx + 8]	      1488	vsprintf.c	FUNCTION_39	FOR_1
0x4001130	        0x4883c310	                           add rbx, 0x10	      1488	vsprintf.c	FUNCTION_39	FOR_1
0x4001134	          0x4885d2	                           test rdx, rdx	      1488	vsprintf.c	FUNCTION_39	FOR_1
0x4001137	            0x743e	                            je 0x4001177	      1488	vsprintf.c	FUNCTION_39	FOR_1
0x4001139	        0x488b6bf0	             mov rbp, qword [rbx - 0x10]	      1489	vsprintf.c	FUNCTION_39	FOR_1
0x400113d	          0x4c89e9	                            mov rcx, r13	      1490	vsprintf.c	FUNCTION_39	FOR_1	IF_1
0x4001140	          0x4821e9	                            and rcx, rbp	      1490	vsprintf.c	FUNCTION_39	FOR_1	IF_1
0x4001143	          0x4839cd	                            cmp rbp, rcx	      1490	vsprintf.c	FUNCTION_39	FOR_1	IF_1
0x4001146	            0x75e4	                           jne 0x400112c	      1490	vsprintf.c	FUNCTION_39	FOR_1	IF_1
0x4001148	          0x4c89e1	                            mov rcx, r12	      1493	vsprintf.c	FUNCTION_39	FOR_1	CALL_1
0x400114b	          0x4c89f6	                            mov rsi, r14	      1493	vsprintf.c	FUNCTION_39	FOR_1	CALL_1
0x400114e	          0x4889c7	                            mov rdi, rax	      1493	vsprintf.c	FUNCTION_39	FOR_1	CALL_1
0x4001151	          0x48f7d5	                                 not rbp	      1495	vsprintf.c	FUNCTION_39	FOR_1
0x4001154	      0xe8c7fbffff	                         call sym.string	      1493	vsprintf.c	FUNCTION_39	FOR_1	CALL_1
0x4001159	          0x4921ed	                            and r13, rbp	      1496	vsprintf.c	FUNCTION_39	FOR_1	IF_2
0x400115c	            0x749c	                            je 0x40010fa	      1496	vsprintf.c	FUNCTION_39	FOR_1	IF_2
0x400115e	          0x4939c6	                            cmp r14, rax	      1497	vsprintf.c	FUNCTION_39	FOR_1	IF_2	IF_3
0x4001161	            0x7603	                           jbe 0x4001166	      1497	vsprintf.c	FUNCTION_39	FOR_1	IF_2	IF_3
0x4001163	          0xc6007c	                    mov byte [rax], 0x7c	      1498	vsprintf.c	FUNCTION_39	FOR_1	IF_2	IF_3
0x4001166	        0x488b5308	                mov rdx, qword [rbx + 8]	      1488	vsprintf.c	FUNCTION_39	FOR_1
0x400116a	        0x4883c001	                              add rax, 1	      1499	vsprintf.c	FUNCTION_39	FOR_1	IF_2
0x400116e	        0x4883c310	                           add rbx, 0x10	      1499	vsprintf.c	FUNCTION_39	FOR_1	IF_2
0x4001172	          0x4885d2	                           test rdx, rdx	      1488	vsprintf.c	FUNCTION_39	FOR_1
0x4001175	            0x75c2	                           jne 0x4001139	      1488	vsprintf.c	FUNCTION_39	FOR_1
0x4001177	    0x488b0d000000	            mov rcx, qword [0x0400117e] 	      1504	vsprintf.c	FUNCTION_39	CALL_2
0x400117e	        0x4883c408	                              add rsp, 8	      1536	vsprintf.c	FUNCTION_40
0x4001182	          0x4c89ea	                            mov rdx, r13	      1504	vsprintf.c	FUNCTION_39	CALL_2
0x4001185	              0x5b	                                 pop rbx	      1536	vsprintf.c	FUNCTION_40
0x4001186	          0x4c89f6	                            mov rsi, r14	      1504	vsprintf.c	FUNCTION_39	CALL_2
0x4001189	          0x4889c7	                            mov rdi, rax	      1504	vsprintf.c	FUNCTION_39	CALL_2
0x400118c	              0x5d	                                 pop rbp	      1536	vsprintf.c	FUNCTION_40
0x400118d	            0x415c	                                 pop r12	      1536	vsprintf.c	FUNCTION_40
0x400118f	            0x415d	                                 pop r13	      1536	vsprintf.c	FUNCTION_40
0x4001191	            0x415e	                                 pop r14	      1536	vsprintf.c	FUNCTION_40
0x4001193	      0xe978f0ffff	                          jmp sym.number	      1504	vsprintf.c	FUNCTION_39	CALL_2
0x4001198	          0x4c8b2a	                    mov r13, qword [rdx]	      1523	vsprintf.c	FUNCTION_40	SWITCH_1
0x400119b	    0x48c7c3000000	                              mov rbx, 0	      1524	vsprintf.c	FUNCTION_40	SWITCH_1
0x40011a2	      0xe96affffff	                           jmp 0x4001111	      1525	vsprintf.c	FUNCTION_40	SWITCH_1
0x40011a7	          0x4c8b2a	                    mov r13, qword [rdx]	      1517	vsprintf.c	FUNCTION_40	SWITCH_1
0x40011aa	    0x48c7c3000000	                              mov rbx, 0	      1520	vsprintf.c	FUNCTION_40	SWITCH_1
0x40011b1	    0x4181e5ffff3f	                      and r13d, 0x3fffff	      1519	vsprintf.c	FUNCTION_40	SWITCH_1
0x40011b8	      0xe954ffffff	                           jmp 0x4001111	      1521	vsprintf.c	FUNCTION_40	SWITCH_1
0x40011bd	        0x48893c24	                    mov qword [rsp], rdi	      1521	vsprintf.c	FUNCTION_40	SWITCH_1
0x40011c1	           0xfbef1	                           movsx esi, cl	      1531	vsprintf.c	FUNCTION_40	SWITCH_1	CALL_1
0x40011c4	    0x48c7c7000000	                              mov rdi, 0	      1531	vsprintf.c	FUNCTION_40	SWITCH_1	CALL_1
0x40011cb	    0xc60500000000	                mov byte [0x040011d2], 1	      1531	vsprintf.c	FUNCTION_40	SWITCH_1	CALL_1
0x40011d2	      0xe800000000	                          call 0x40011d7	      1531	vsprintf.c	FUNCTION_40	SWITCH_1	CALL_1
0x40011d7	             0xf0b	                                     ud2	      1531	vsprintf.c	FUNCTION_40	SWITCH_1	CALL_1
0x40011d9	        0x488b0424	                    mov rax, qword [rsp]	      1531	vsprintf.c	FUNCTION_40	SWITCH_1	CALL_1
0x40011dd	      0xe918ffffff	                           jmp 0x40010fa	      1531	vsprintf.c	FUNCTION_40	SWITCH_1	CALL_1
escaped_string	IF,3:WHILE,0:functions,0:CALL,3:SWITCH,1:DO,1:ELSE,0:FOR,0	59
0x4001910	          0x4189cb	                           mov r11d, ecx	      1259	vsprintf.c	FUNCTION_33
0x4001913	              0x53	                                push rbx	      1259	vsprintf.c	FUNCTION_33
0x4001914	          0x4889f8	                            mov rax, rdi	      1259	vsprintf.c	FUNCTION_33
0x4001917	        0x41c1fb08	                             sar r11d, 8	      1259	vsprintf.c	FUNCTION_33
0x400191b	          0x4585db	                         test r11d, r11d	      1265	vsprintf.c	FUNCTION_33	IF_1
0x400191e	            0x747c	                            je 0x400199c	      1265	vsprintf.c	FUNCTION_33	IF_1
0x4001920	        0x4883fa10	                           cmp rdx, 0x10	      1268	vsprintf.c	FUNCTION_33	IF_2	CALL_1
0x4001924	     0xf86a1000000	                           jbe 0x40019cb	      1268	vsprintf.c	FUNCTION_33	IF_2	CALL_1
0x400192a	          0x4531d2	                          xor r10d, r10d	      1268	vsprintf.c	FUNCTION_33	IF_2	CALL_1
0x400192d	      0xb901000000	                              mov ecx, 1	      1268	vsprintf.c	FUNCTION_33	IF_2	CALL_1
0x4001932	        0x448d4901	                      lea r9d, [rcx + 1]	      1273	vsprintf.c	FUNCTION_33	DO_1	SWITCH_1
0x4001936	      0x410fb60c08	              movzx ecx, byte [r8 + rcx]	      1273	vsprintf.c	FUNCTION_33	DO_1	SWITCH_1
0x400193b	          0x83e961	                           sub ecx, 0x61	      1273	vsprintf.c	FUNCTION_33	DO_1	SWITCH_1
0x400193e	          0x80f912	                            cmp cl, 0x12	      1273	vsprintf.c	FUNCTION_33	DO_1	SWITCH_1
0x4001941	            0x7710	                            ja 0x4001953	      1273	vsprintf.c	FUNCTION_33	DO_1	SWITCH_1
0x4001943	           0xfb6c9	                           movzx ecx, cl	      1273	vsprintf.c	FUNCTION_33	DO_1	SWITCH_1
0x4001946	    0x488b0ccd0000	                  mov rcx, qword [rcx*8]	      1273	vsprintf.c	FUNCTION_33	DO_1	SWITCH_1
0x400194e	      0xe900000000	                           jmp 0x4001953	      1273	vsprintf.c	FUNCTION_33	DO_1	SWITCH_1
0x4001953	          0x4889c3	                            mov rbx, rax	      1273	vsprintf.c	FUNCTION_33	DO_1	SWITCH_1
0x4001956	          0x4585d2	                         test r10d, r10d	      1302	vsprintf.c	FUNCTION_33	IF_3
0x4001959	      0xb81f000000	                           mov eax, 0x1f	      1302	vsprintf.c	FUNCTION_33	IF_3
0x400195e	          0x4989f0	                             mov r8, rsi	      1302	vsprintf.c	FUNCTION_33	IF_3
0x4001961	        0x440f44d0	                         cmove r10d, eax	      1302	vsprintf.c	FUNCTION_33	IF_3
0x4001965	      0xbe01000000	                              mov esi, 1	      1302	vsprintf.c	FUNCTION_33	IF_3
0x400196a	          0x4585db	                         test r11d, r11d	      1302	vsprintf.c	FUNCTION_33	IF_3
0x400196d	          0x4963c3	                        movsxd rax, r11d	      1302	vsprintf.c	FUNCTION_33	IF_3
0x4001970	      0xb900000000	                              mov ecx, 0	      1311	vsprintf.c	FUNCTION_33	CALL_3
0x4001975	        0x480f49f0	                         cmovns rsi, rax	      1311	vsprintf.c	FUNCTION_33	CALL_3
0x4001979	          0x4c89c0	                             mov rax, r8	      1311	vsprintf.c	FUNCTION_33	CALL_3
0x400197c	          0x4889d7	                            mov rdi, rdx	      1311	vsprintf.c	FUNCTION_33	CALL_3
0x400197f	          0x4829d8	                            sub rax, rbx	      1311	vsprintf.c	FUNCTION_33	CALL_3
0x4001982	          0x4c39c3	                             cmp rbx, r8	      1311	vsprintf.c	FUNCTION_33	CALL_3
0x4001985	          0x4889da	                            mov rdx, rbx	      1311	vsprintf.c	FUNCTION_33	CALL_3
0x4001988	        0x480f42c8	                          cmovb rcx, rax	      1311	vsprintf.c	FUNCTION_33	CALL_3
0x400198c	          0x4589d0	                           mov r8d, r10d	      1311	vsprintf.c	FUNCTION_33	CALL_3
0x400198f	          0x4531c9	                            xor r9d, r9d	      1311	vsprintf.c	FUNCTION_33	CALL_3
0x4001992	      0xe800000000	                          call 0x4001997	      1311	vsprintf.c	FUNCTION_33	CALL_3
0x4001997	            0x4898	                                    cdqe	      1311	vsprintf.c	FUNCTION_33	CALL_3
0x4001999	          0x4801d8	                            add rax, rbx	      1313	vsprintf.c	FUNCTION_33
0x400199c	              0x5b	                                 pop rbx	      1314	vsprintf.c	FUNCTION_33
0x400199d	              0xc3	                                     ret	      1314	vsprintf.c	FUNCTION_33
0x400199e	        0x4183ca01	                              or r10d, 1	      1293	vsprintf.c	FUNCTION_33	DO_1	SWITCH_1
0x40019a2	          0x4963c9	                         movsxd rcx, r9d	      1273	vsprintf.c	FUNCTION_33	DO_1	SWITCH_1
0x40019a5	            0xeb8b	                           jmp 0x4001932	      1273	vsprintf.c	FUNCTION_33	DO_1	SWITCH_1
0x40019a7	        0x4183ca10	                           or r10d, 0x10	      1290	vsprintf.c	FUNCTION_33	DO_1	SWITCH_1
0x40019ab	            0xebf5	                           jmp 0x40019a2	      1291	vsprintf.c	FUNCTION_33	DO_1	SWITCH_1
0x40019ad	        0x4183ca08	                              or r10d, 8	      1287	vsprintf.c	FUNCTION_33	DO_1	SWITCH_1
0x40019b1	            0xebef	                           jmp 0x40019a2	      1288	vsprintf.c	FUNCTION_33	DO_1	SWITCH_1
0x40019b3	        0x4183ca04	                              or r10d, 4	      1284	vsprintf.c	FUNCTION_33	DO_1	SWITCH_1
0x40019b7	            0xebe9	                           jmp 0x40019a2	      1285	vsprintf.c	FUNCTION_33	DO_1	SWITCH_1
0x40019b9	        0x4183ca20	                           or r10d, 0x20	      1281	vsprintf.c	FUNCTION_33	DO_1	SWITCH_1
0x40019bd	            0xebe3	                           jmp 0x40019a2	      1282	vsprintf.c	FUNCTION_33	DO_1	SWITCH_1
0x40019bf	        0x4183ca02	                              or r10d, 2	      1278	vsprintf.c	FUNCTION_33	DO_1	SWITCH_1
0x40019c3	            0xebdd	                           jmp 0x40019a2	      1279	vsprintf.c	FUNCTION_33	DO_1	SWITCH_1
0x40019c5	        0x4183ca0f	                            or r10d, 0xf	      1275	vsprintf.c	FUNCTION_33	DO_1	SWITCH_1
0x40019c9	            0xebd7	                           jmp 0x40019a2	      1276	vsprintf.c	FUNCTION_33	DO_1	SWITCH_1
0x40019cb	              0x5b	                                 pop rbx	      1314	vsprintf.c	FUNCTION_33
0x40019cc	            0x31d2	                            xor edx, edx	      1269	vsprintf.c	FUNCTION_33	CALL_2
0x40019ce	      0xe94df3ffff	                          jmp sym.string	      1269	vsprintf.c	FUNCTION_33	CALL_2
pointer_string	IF,1:WHILE,0:functions,0:CALL,1:SWITCH,0:DO,0:ELSE,0:FOR,0	28
0x40006a0	          0x4189c8	                            mov r8d, ecx	      1661	vsprintf.c	FUNCTION_44
0x40006a3	    0x49b9ffffffff	           movabs r9, 0xffff00ffffffffff	      1662	vsprintf.c	FUNCTION_44
0x40006ad	          0x4889c8	                            mov rax, rcx	      1662	vsprintf.c	FUNCTION_44
0x40006b0	        0x41c1f808	                              sar r8d, 8	      1662	vsprintf.c	FUNCTION_44
0x40006b4	          0x4c21c9	                             and rcx, r9	      1662	vsprintf.c	FUNCTION_44
0x40006b7	    0x49b900000000	               movabs r9, 0x100000000000	      1662	vsprintf.c	FUNCTION_44
0x40006c1	        0x48c1e820	                           shr rax, 0x20	      1662	vsprintf.c	FUNCTION_44
0x40006c5	          0x4c09c9	                              or rcx, r9	      1662	vsprintf.c	FUNCTION_44
0x40006c8	        0x4183f8ff	             cmp r8d, 0xffffffffffffffff	      1664	vsprintf.c	FUNCTION_44	IF_1
0x40006cc	            0x7443	                            je 0x4000711	      1664	vsprintf.c	FUNCTION_44	IF_1
0x40006ce	          0x83c820	                            or eax, 0x20	      1663	vsprintf.c	FUNCTION_44
0x40006d1	    0x4181e0ffffff	                       and r8d, 0xffffff	      1669	vsprintf.c	FUNCTION_44	CALL_1
0x40006d8	    0x49baff000000	          movabs r10, 0xffffffff000000ff	      1669	vsprintf.c	FUNCTION_44	CALL_1
0x40006e2	          0x4d89c1	                              mov r9, r8	      1669	vsprintf.c	FUNCTION_44	CALL_1
0x40006e5	          0x4c21d1	                            and rcx, r10	      1669	vsprintf.c	FUNCTION_44	CALL_1
0x40006e8	          0x4989c8	                             mov r8, rcx	      1669	vsprintf.c	FUNCTION_44	CALL_1
0x40006eb	        0x49c1e108	                               shl r9, 8	      1669	vsprintf.c	FUNCTION_44	CALL_1
0x40006ef	           0xfb6c8	                           movzx ecx, al	      1669	vsprintf.c	FUNCTION_44	CALL_1
0x40006f2	          0x4889c8	                            mov rax, rcx	      1669	vsprintf.c	FUNCTION_44	CALL_1
0x40006f5	          0x4d09c8	                               or r8, r9	      1669	vsprintf.c	FUNCTION_44	CALL_1
0x40006f8	    0x48b9ffffffff	          movabs rcx, 0xffffff00ffffffff	      1669	vsprintf.c	FUNCTION_44	CALL_1
0x4000702	        0x48c1e020	                           shl rax, 0x20	      1669	vsprintf.c	FUNCTION_44	CALL_1
0x4000706	          0x4c21c1	                             and rcx, r8	      1669	vsprintf.c	FUNCTION_44	CALL_1
0x4000709	          0x4809c1	                             or rcx, rax	      1669	vsprintf.c	FUNCTION_44	CALL_1
0x400070c	      0xe9fffaffff	                          jmp sym.number	      1669	vsprintf.c	FUNCTION_44	CALL_1
0x4000711	          0x83c830	                            or eax, 0x30	      1666	vsprintf.c	FUNCTION_44	IF_1
0x4000714	    0x41b810000000	                           mov r8d, 0x10	      1665	vsprintf.c	FUNCTION_44	IF_1
0x400071a	            0xebb5	                           jmp 0x40006d1	      1665	vsprintf.c	FUNCTION_44	IF_1
string	IF,3:WHILE,1:functions,0:CALL,1:SWITCH,0:DO,0:ELSE,0:FOR,0	30
0x4000d20	          0x4989c9	                             mov r9, rcx	       598	vsprintf.c	FUNCTION_17
0x4000d23	    0x48c7c0000000	                              mov rax, 0	       601	vsprintf.c	FUNCTION_17	IF_1
0x4000d2a	          0x4989f2	                            mov r10, rsi	       596	vsprintf.c	FUNCTION_17
0x4000d2d	        0x49c1f930	                            sar r9, 0x30	       598	vsprintf.c	FUNCTION_17
0x4000d31	    0x4881faff0f00	                          cmp rdx, 0xfff	       601	vsprintf.c	FUNCTION_17	IF_1
0x4000d38	        0x480f46d0	                         cmovbe rdx, rax	       601	vsprintf.c	FUNCTION_17	IF_1
0x4000d3c	          0x4d85c9	                             test r9, r9	       603	vsprintf.c	FUNCTION_17	WHILE_1
0x4000d3f	            0x743e	                            je 0x4000d7f	       603	vsprintf.c	FUNCTION_17	WHILE_1
0x4000d41	        0x440fb602	                   movzx r8d, byte [rdx]	       604	vsprintf.c	FUNCTION_17	WHILE_1
0x4000d45	        0x488d4201	                      lea rax, [rdx + 1]	       604	vsprintf.c	FUNCTION_17	WHILE_1
0x4000d49	          0x4584c0	                           test r8b, r8b	       605	vsprintf.c	FUNCTION_17	WHILE_1	IF_2
0x4000d4c	            0x7431	                            je 0x4000d7f	       605	vsprintf.c	FUNCTION_17	WHILE_1	IF_2
0x4000d4e	          0x4c01ca	                             add rdx, r9	       605	vsprintf.c	FUNCTION_17	WHILE_1	IF_2
0x4000d51	            0x31f6	                            xor esi, esi	       605	vsprintf.c	FUNCTION_17	WHILE_1	IF_2
0x4000d53	            0xeb0e	                           jmp 0x4000d63	       605	vsprintf.c	FUNCTION_17	WHILE_1	IF_2
0x4000d55	        0x4883c001	                              add rax, 1	       604	vsprintf.c	FUNCTION_17	WHILE_1
0x4000d59	      0x440fb640ff	               movzx r8d, byte [rax - 1]	       604	vsprintf.c	FUNCTION_17	WHILE_1
0x4000d5e	          0x4584c0	                           test r8b, r8b	       605	vsprintf.c	FUNCTION_17	WHILE_1	IF_2
0x4000d61	            0x7414	                            je 0x4000d77	       605	vsprintf.c	FUNCTION_17	WHILE_1	IF_2
0x4000d63	          0x4939fa	                            cmp r10, rdi	       607	vsprintf.c	FUNCTION_17	WHILE_1	IF_3
0x4000d66	            0x7603	                           jbe 0x4000d6b	       607	vsprintf.c	FUNCTION_17	WHILE_1	IF_3
0x4000d68	          0x448807	                     mov byte [rdi], r8b	       608	vsprintf.c	FUNCTION_17	WHILE_1	IF_3
0x4000d6b	        0x4883c701	                              add rdi, 1	       609	vsprintf.c	FUNCTION_17	WHILE_1
0x4000d6f	          0x83c601	                              add esi, 1	       610	vsprintf.c	FUNCTION_17	WHILE_1
0x4000d72	          0x4839c2	                            cmp rdx, rax	       603	vsprintf.c	FUNCTION_17	WHILE_1
0x4000d75	            0x75de	                           jne 0x4000d55	       603	vsprintf.c	FUNCTION_17	WHILE_1
0x4000d77	          0x4c89d2	                            mov rdx, r10	       612	vsprintf.c	FUNCTION_17	CALL_1
0x4000d7a	      0xe9f1feffff	                    jmp sym.widen_string	       612	vsprintf.c	FUNCTION_17	CALL_1
0x4000d7f	            0x31f6	                            xor esi, esi	       605	vsprintf.c	FUNCTION_17	WHILE_1	IF_2
0x4000d81	            0xebf4	                           jmp 0x4000d77	       605	vsprintf.c	FUNCTION_17	WHILE_1	IF_2
ip4_addr_string	IF,0:WHILE,0:functions,0:CALL,2:SWITCH,0:DO,0:ELSE,0:FOR,0	28
0x4000f40	            0x4154	                                push r12	      1151	vsprintf.c	FUNCTION_30
0x4000f42	              0x55	                                push rbp	      1151	vsprintf.c	FUNCTION_30
0x4000f43	          0x4989cc	                            mov r12, rcx	      1151	vsprintf.c	FUNCTION_30
0x4000f46	              0x53	                                push rbx	      1151	vsprintf.c	FUNCTION_30
0x4000f47	          0x4889f5	                            mov rbp, rsi	      1151	vsprintf.c	FUNCTION_30
0x4000f4a	          0x4889fb	                            mov rbx, rdi	      1151	vsprintf.c	FUNCTION_30
0x4000f4d	          0x4889d6	                            mov rsi, rdx	      1151	vsprintf.c	FUNCTION_30
0x4000f50	          0x4c89c2	                             mov rdx, r8	      1154	vsprintf.c	FUNCTION_30	CALL_1
0x4000f53	        0x4883ec18	                           sub rsp, 0x18	      1151	vsprintf.c	FUNCTION_30
0x4000f57	          0x4889e7	                            mov rdi, rsp	      1154	vsprintf.c	FUNCTION_30	CALL_1
0x4000f5a	    0x65488b042528	                mov rax, qword gs:[0x28]	      1151	vsprintf.c	FUNCTION_30
0x4000f63	      0x4889442410	             mov qword [rsp + 0x10], rax	      1151	vsprintf.c	FUNCTION_30
0x4000f68	            0x31c0	                            xor eax, eax	      1151	vsprintf.c	FUNCTION_30
0x4000f6a	      0xe8b1f5ffff	                     call sym.ip4_string	      1154	vsprintf.c	FUNCTION_30	CALL_1
0x4000f6f	          0x4c89e1	                            mov rcx, r12	      1156	vsprintf.c	FUNCTION_30	CALL_2
0x4000f72	          0x4889e2	                            mov rdx, rsp	      1156	vsprintf.c	FUNCTION_30	CALL_2
0x4000f75	          0x4889ee	                            mov rsi, rbp	      1156	vsprintf.c	FUNCTION_30	CALL_2
0x4000f78	          0x4889df	                            mov rdi, rbx	      1156	vsprintf.c	FUNCTION_30	CALL_2
0x4000f7b	      0xe8a0fdffff	                         call sym.string	      1156	vsprintf.c	FUNCTION_30	CALL_2
0x4000f80	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      1157	vsprintf.c	FUNCTION_30
0x4000f85	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      1157	vsprintf.c	FUNCTION_30
0x4000f8e	            0x7509	                           jne 0x4000f99	      1157	vsprintf.c	FUNCTION_30
0x4000f90	        0x4883c418	                           add rsp, 0x18	      1157	vsprintf.c	FUNCTION_30
0x4000f94	              0x5b	                                 pop rbx	      1157	vsprintf.c	FUNCTION_30
0x4000f95	              0x5d	                                 pop rbp	      1157	vsprintf.c	FUNCTION_30
0x4000f96	            0x415c	                                 pop r12	      1157	vsprintf.c	FUNCTION_30
0x4000f98	              0xc3	                                     ret	      1157	vsprintf.c	FUNCTION_30
0x4000f99	      0xe800000000	                          call 0x4000f9e	      1157	vsprintf.c	FUNCTION_30
skip_atoi	IF,0:WHILE,0:functions,0:CALL,1:SWITCH,0:DO,1:ELSE,0:FOR,0	14
0x4000040	          0x488b07	                    mov rax, qword [rdi]	       125	vsprintf.c	FUNCTION_5
0x4000043	        0x488d5001	                      lea rdx, [rax + 1]	       125	vsprintf.c	FUNCTION_5
0x4000047	            0x31c0	                            xor eax, eax	       126	vsprintf.c	FUNCTION_5
0x4000049	          0x4889d1	                            mov rcx, rdx	       129	vsprintf.c	FUNCTION_5	DO_1
0x400004c	          0x488917	                    mov qword [rdi], rdx	       129	vsprintf.c	FUNCTION_5	DO_1
0x400004f	          0x8d3480	                  lea esi, [rax + rax*4]	       129	vsprintf.c	FUNCTION_5	DO_1
0x4000052	           0xfbe09	                   movsx ecx, byte [rcx]	       130	vsprintf.c	FUNCTION_5	CALL_1
0x4000055	         0xfbe42ff	               movsx eax, byte [rdx - 1]	       129	vsprintf.c	FUNCTION_5	DO_1
0x4000059	        0x4883c201	                              add rdx, 1	       129	vsprintf.c	FUNCTION_5	DO_1
0x400005d	          0x83e930	                           sub ecx, 0x30	       130	vsprintf.c	FUNCTION_5	CALL_1
0x4000060	        0x8d4470d0	           lea eax, [rax + rsi*2 - 0x30]	       129	vsprintf.c	FUNCTION_5	DO_1
0x4000064	          0x83f909	                              cmp ecx, 9	       130	vsprintf.c	FUNCTION_5	CALL_1
0x4000067	            0x76e0	                           jbe 0x4000049	       130	vsprintf.c	FUNCTION_5	CALL_1
0x4000069	            0xf3c3	                                     ret	       133	vsprintf.c	FUNCTION_5
clock	IF,1:WHILE,0:functions,0:CALL,7:SWITCH,1:DO,0:ELSE,0:FOR,0	29
0x4001b70	          0x4885d2	                           test rdx, rdx	      1455	vsprintf.c	FUNCTION_38	IF_1	CALL_1
0x4001b73	            0x742c	                            je 0x4001ba1	      1455	vsprintf.c	FUNCTION_38	IF_1	CALL_1
0x4001b75	      0x4180780172	                 cmp byte [r8 + 1], 0x72	      1458	vsprintf.c	FUNCTION_38	SWITCH_1
0x4001b7a	            0x4154	                                push r12	      1454	vsprintf.c	FUNCTION_38
0x4001b7c	          0x4989f4	                            mov r12, rsi	      1454	vsprintf.c	FUNCTION_38
0x4001b7f	              0x55	                                push rbp	      1454	vsprintf.c	FUNCTION_38
0x4001b80	          0x4889cd	                            mov rbp, rcx	      1454	vsprintf.c	FUNCTION_38
0x4001b83	              0x53	                                push rbx	      1454	vsprintf.c	FUNCTION_38
0x4001b84	          0x4889fb	                            mov rbx, rdi	      1454	vsprintf.c	FUNCTION_38
0x4001b87	          0x4889d7	                            mov rdi, rdx	      1460	vsprintf.c	FUNCTION_38	SWITCH_1	CALL_4
0x4001b8a	            0x741a	                            je 0x4001ba6	      1458	vsprintf.c	FUNCTION_38	SWITCH_1
0x4001b8c	      0xe800000000	                          call 0x4001b91	      1465	vsprintf.c	FUNCTION_38	SWITCH_1	CALL_6
0x4001b91	          0x4889e9	                            mov rcx, rbp	      1465	vsprintf.c	FUNCTION_38	SWITCH_1	CALL_6
0x4001b94	          0x4c89e6	                            mov rsi, r12	      1465	vsprintf.c	FUNCTION_38	SWITCH_1	CALL_6
0x4001b97	          0x4889df	                            mov rdi, rbx	      1465	vsprintf.c	FUNCTION_38	SWITCH_1	CALL_6
0x4001b9a	              0x5b	                                 pop rbx	      1470	vsprintf.c	FUNCTION_38
0x4001b9b	              0x5d	                                 pop rbp	      1470	vsprintf.c	FUNCTION_38
0x4001b9c	            0x415c	                                 pop r12	      1470	vsprintf.c	FUNCTION_38
0x4001b9e	          0x4889c2	                            mov rdx, rax	      1465	vsprintf.c	FUNCTION_38	SWITCH_1	CALL_6
0x4001ba1	      0xe97af1ffff	                          jmp sym.string	      1465	vsprintf.c	FUNCTION_38	SWITCH_1	CALL_6
0x4001ba6	      0xe800000000	                          call 0x4001bab	      1460	vsprintf.c	FUNCTION_38	SWITCH_1	CALL_4
0x4001bab	          0x4889e9	                            mov rcx, rbp	      1460	vsprintf.c	FUNCTION_38	SWITCH_1	CALL_4
0x4001bae	          0x4c89e6	                            mov rsi, r12	      1460	vsprintf.c	FUNCTION_38	SWITCH_1	CALL_4
0x4001bb1	          0x4889df	                            mov rdi, rbx	      1460	vsprintf.c	FUNCTION_38	SWITCH_1	CALL_4
0x4001bb4	              0x5b	                                 pop rbx	      1470	vsprintf.c	FUNCTION_38
0x4001bb5	              0x5d	                                 pop rbp	      1470	vsprintf.c	FUNCTION_38
0x4001bb6	            0x415c	                                 pop r12	      1470	vsprintf.c	FUNCTION_38
0x4001bb8	          0x4889c2	                            mov rdx, rax	      1460	vsprintf.c	FUNCTION_38	SWITCH_1	CALL_4
0x4001bbb	      0xe950e6ffff	                          jmp sym.number	      1460	vsprintf.c	FUNCTION_38	SWITCH_1	CALL_4
vbin_printf	IF,5:WHILE,2:functions,0:CALL,21:SWITCH,3:DO,0:ELSE,1:FOR,0	265
0x40034b0	            0x4157	                                push r15	      2530	vsprintf.c	FUNCTION_59
0x40034b2	            0x4156	                                push r14	      2530	vsprintf.c	FUNCTION_59
0x40034b4	    0x41bf01000000	                             mov r15d, 1	      2530	vsprintf.c	FUNCTION_59
0x40034ba	            0x4155	                                push r13	      2530	vsprintf.c	FUNCTION_59
0x40034bc	            0x4154	                                push r12	      2530	vsprintf.c	FUNCTION_59
0x40034be	        0x4c8d24b7	                  lea r12, [rdi + rsi*4]	      2536	vsprintf.c	FUNCTION_59
0x40034c2	              0x55	                                push rbp	      2530	vsprintf.c	FUNCTION_59
0x40034c3	              0x53	                                push rbx	      2530	vsprintf.c	FUNCTION_59
0x40034c4	          0x4989fd	                            mov r13, rdi	      2530	vsprintf.c	FUNCTION_59
0x40034c7	          0x4989d6	                            mov r14, rdx	      2530	vsprintf.c	FUNCTION_59
0x40034ca	          0x4889cd	                            mov rbp, rcx	      2530	vsprintf.c	FUNCTION_59
0x40034cd	          0x4889fb	                            mov rbx, rdi	      2535	vsprintf.c	FUNCTION_59
0x40034d0	        0x4883ec20	                           sub rsp, 0x20	      2530	vsprintf.c	FUNCTION_59
0x40034d4	    0x65488b042528	                mov rax, qword gs:[0x28]	      2530	vsprintf.c	FUNCTION_59
0x40034dd	      0x4889442418	             mov qword [rsp + 0x18], rax	      2530	vsprintf.c	FUNCTION_59
0x40034e2	            0x31c0	                            xor eax, eax	      2530	vsprintf.c	FUNCTION_59
0x40034e4	           0xfb602	                   movzx eax, byte [rdx]	      2530	vsprintf.c	FUNCTION_59
0x40034e7	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2531	vsprintf.c	FUNCTION_59
0x40034f0	            0x84c0	                             test al, al	      2562	vsprintf.c	FUNCTION_59	WHILE_1
0x40034f2	            0x7461	                            je 0x4003555	      2562	vsprintf.c	FUNCTION_59	WHILE_1
0x40034f4	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2563	vsprintf.c	FUNCTION_59	WHILE_1	CALL_1
0x40034f9	          0x4c89f7	                            mov rdi, r14	      2563	vsprintf.c	FUNCTION_59	WHILE_1	CALL_1
0x40034fc	      0xe8bfd3ffff	                  call sym.format_decode	      2563	vsprintf.c	FUNCTION_59	WHILE_1	CALL_1
0x4003501	            0x4898	                                    cdqe	      2565	vsprintf.c	FUNCTION_59	WHILE_1
0x4003503	          0x4901c6	                            add r14, rax	      2565	vsprintf.c	FUNCTION_59	WHILE_1
0x4003506	       0xfb6442410	           movzx eax, byte [rsp + 0x10] 	      2567	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1
0x400350b	            0x3c07	                               cmp al, 7	      2567	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1
0x400350d	     0xf8724020000	                            ja 0x4003737	      2567	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1
0x4003513	    0x488b04c50000	                  mov rax, qword [rax*8]	      2567	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1
0x400351b	      0xe900000000	                           jmp 0x4003520	      2567	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1
0x4003520	          0x8b5500	                    mov edx, dword [rbp]	      2654	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x4003523	        0x488d4303	                      lea rax, [rbx + 3]	      2654	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x4003527	        0x4883e0fc	             and rax, 0xfffffffffffffffc	      2654	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x400352b	          0x83fa2f	                           cmp edx, 0x2f	      2654	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x400352e	     0xf8746030000	                            ja 0x400387a	      2654	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x4003534	            0x89d1	                            mov ecx, edx	      2654	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x4003536	        0x48034d10	             add rcx, qword [rbp + 0x10]	      2654	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x400353a	          0x83c208	                              add edx, 8	      2654	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x400353d	          0x895500	                    mov dword [rbp], edx	      2654	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x4003540	        0x488d5804	                      lea rbx, [rax + 4]	      2654	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x4003544	          0x4939dc	                            cmp r12, rbx	      2654	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x4003547	            0x7204	                            jb 0x400354d	      2654	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x4003549	            0x8b11	                    mov edx, dword [rcx]	      2654	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x400354b	            0x8910	                    mov dword [rax], edx	      2654	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x400354d	        0x410fb606	                   movzx eax, byte [r14]	      2654	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x4003551	            0x84c0	                             test al, al	      2562	vsprintf.c	FUNCTION_59	WHILE_1
0x4003553	            0x759f	                           jne 0x40034f4	      2562	vsprintf.c	FUNCTION_59	WHILE_1
0x4003555	        0x488d4303	                      lea rax, [rbx + 3]	      2660	vsprintf.c	FUNCTION_59	CALL_21
0x4003559	        0x4883e0fc	             and rax, 0xfffffffffffffffc	      2660	vsprintf.c	FUNCTION_59	CALL_21
0x400355d	          0x4c29e8	                            sub rax, r13	      2660	vsprintf.c	FUNCTION_59	CALL_21
0x4003560	        0x48c1f802	                              sar rax, 2	      2660	vsprintf.c	FUNCTION_59	CALL_21
0x4003564	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2662	vsprintf.c	FUNCTION_59
0x4003569	    0x6548333c2528	                xor rdi, qword gs:[0x28]	      2662	vsprintf.c	FUNCTION_59
0x4003572	     0xf8521030000	                           jne 0x4003899	      2662	vsprintf.c	FUNCTION_59
0x4003578	        0x4883c420	                           add rsp, 0x20	      2662	vsprintf.c	FUNCTION_59
0x400357c	              0x5b	                                 pop rbx	      2662	vsprintf.c	FUNCTION_59
0x400357d	              0x5d	                                 pop rbp	      2662	vsprintf.c	FUNCTION_59
0x400357e	            0x415c	                                 pop r12	      2662	vsprintf.c	FUNCTION_59
0x4003580	            0x415d	                                 pop r13	      2662	vsprintf.c	FUNCTION_59
0x4003582	            0x415e	                                 pop r14	      2662	vsprintf.c	FUNCTION_59
0x4003584	            0x415f	                                 pop r15	      2662	vsprintf.c	FUNCTION_59
0x4003586	              0xc3	                                     ret	      2662	vsprintf.c	FUNCTION_59
0x4003587	          0x8b4500	                    mov eax, dword [rbp]	      2647	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_18
0x400358a	          0x83f82f	                           cmp eax, 0x2f	      2647	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_18
0x400358d	     0xf87bf010000	                            ja 0x4003752	      2647	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_18
0x4003593	            0x89c1	                            mov ecx, eax	      2647	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_18
0x4003595	        0x48034d10	             add rcx, qword [rbp + 0x10]	      2647	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_18
0x4003599	          0x83c008	                              add eax, 8	      2647	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_18
0x400359c	          0x894500	                    mov dword [rbp], eax	      2647	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_18
0x400359f	        0x488d5301	                      lea rdx, [rbx + 1]	      2647	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_18
0x40035a3	          0x4939d4	                            cmp r12, rdx	      2647	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_18
0x40035a6	            0x7204	                            jb 0x40035ac	      2647	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_18
0x40035a8	            0x8b01	                    mov eax, dword [rcx]	      2647	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_18
0x40035aa	            0x8803	                      mov byte [rbx], al	      2647	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_18
0x40035ac	        0x410fb606	                   movzx eax, byte [r14]	      2647	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_18
0x40035b0	          0x4889d3	                            mov rbx, rdx	      2647	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_18
0x40035b3	      0xe938ffffff	                           jmp 0x40034f0	      2647	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_18
0x40035b8	          0x8b5500	                    mov edx, dword [rbp]	      2576	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_2
0x40035bb	        0x488d4303	                      lea rax, [rbx + 3]	      2576	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_2
0x40035bf	        0x4883e0fc	             and rax, 0xfffffffffffffffc	      2576	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_2
0x40035c3	          0x83fa2f	                           cmp edx, 0x2f	      2576	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_2
0x40035c6	     0xf87f3010000	                            ja 0x40037bf	      2576	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_2
0x40035cc	            0x89d1	                            mov ecx, edx	      2576	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_2
0x40035ce	        0x48034d10	             add rcx, qword [rbp + 0x10]	      2576	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_2
0x40035d2	          0x83c208	                              add edx, 8	      2576	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_2
0x40035d5	          0x895500	                    mov dword [rbp], edx	      2576	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_2
0x40035d8	        0x488d5804	                      lea rbx, [rax + 4]	      2576	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_2
0x40035dc	            0x8b31	                    mov esi, dword [rcx]	      2576	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_2
0x40035de	          0x4939dc	                            cmp r12, rbx	      2576	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_2
0x40035e1	            0x7202	                            jb 0x40035e5	      2576	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_2
0x40035e3	            0x8930	                    mov dword [rax], esi	      2576	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_2
0x40035e5	        0x410fb606	                   movzx eax, byte [r14]	      2578	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	IF_1
0x40035e9	            0x3c70	                            cmp al, 0x70	      2578	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	IF_1
0x40035eb	     0xf85fffeffff	                           jne 0x40034f0	      2578	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	IF_1
0x40035f1	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2579	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_3
0x40035f6	      0xe8e5d1ffff	                call sym.set_field_width	      2579	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_3
0x40035fb	        0x410fb606	                   movzx eax, byte [r14]	      2579	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_3
0x40035ff	      0xe9ecfeffff	                           jmp 0x40034f0	      2579	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_3
0x4003604	        0x410fb606	                   movzx eax, byte [r14]	      2579	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_3
0x4003608	          0x8d48ba	                   lea ecx, [rax - 0x46]	      2579	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_3
0x400360b	          0x80f932	                            cmp cl, 0x32	      2579	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_3
0x400360e	     0xf87cd000000	                            ja 0x40036e1	      2579	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_3
0x4003614	          0x4c89fa	                            mov rdx, r15	      2579	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_3
0x4003617	    0x48bf21200000	             movabs rdi, 0x4200100002021	      2579	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_3
0x4003621	          0x48d3e2	                             shl rdx, cl	      2579	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_3
0x4003624	          0x4885fa	                           test rdx, rdi	      2579	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_3
0x4003627	     0xf84b4000000	                            je 0x40036e1	      2579	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_3
0x400362d	          0x8b5500	                    mov edx, dword [rbp]	      2614	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_4	CALL_10
0x4003630	        0x488d4303	                      lea rax, [rbx + 3]	      2614	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_4	CALL_10
0x4003634	        0x4883e0fc	             and rax, 0xfffffffffffffffc	      2614	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_4	CALL_10
0x4003638	          0x83fa2f	                           cmp edx, 0x2f	      2614	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_4	CALL_10
0x400363b	     0xf87c4010000	                            ja 0x4003805	      2614	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_4	CALL_10
0x4003641	            0x89d1	                            mov ecx, edx	      2614	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_4	CALL_10
0x4003643	        0x48034d10	             add rcx, qword [rbp + 0x10]	      2614	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_4	CALL_10
0x4003647	          0x83c208	                              add edx, 8	      2614	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_4	CALL_10
0x400364a	          0x895500	                    mov dword [rbp], edx	      2614	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_4	CALL_10
0x400364d	          0x488b11	                    mov rdx, qword [rcx]	      2614	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_4	CALL_10
0x4003650	        0x488d5808	                      lea rbx, [rax + 8]	      2614	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_4	CALL_10
0x4003654	          0x4939dc	                            cmp r12, rbx	      2614	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_4	CALL_10
0x4003657	      0x4889542408	                mov qword [rsp + 8], rdx	      2614	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_4	CALL_10
0x400365c	            0x7213	                            jb 0x4003671	      2614	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_4	CALL_10
0x400365e	        0x8b542408	                mov edx, dword [rsp + 8]	      2614	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_4	CALL_10
0x4003662	            0x8910	                    mov dword [rax], edx	      2614	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_4	CALL_10
0x4003664	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      2614	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_4	CALL_10
0x4003668	          0x895004	                mov dword [rax + 4], edx	      2614	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_4	CALL_10
0x400366b	            0xeb04	                           jmp 0x4003671	      2615	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_4
0x400366d	        0x4983c601	                              add r14, 1	      2626	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	WHILE_2
0x4003671	        0x410fb616	                   movzx edx, byte [r14]	      2625	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	WHILE_2	CALL_13
0x4003675	    0xf68200000000	                      test byte [rdx], 7	      2625	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	WHILE_2	CALL_13
0x400367c	          0x4889d0	                            mov rax, rdx	      2625	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	WHILE_2	CALL_13
0x400367f	            0x75ec	                           jne 0x400366d	      2625	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	WHILE_2	CALL_13
0x4003681	      0xe96afeffff	                           jmp 0x40034f0	      2625	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	WHILE_2	CALL_13
0x4003686	          0x8b4500	                    mov eax, dword [rbp]	      2587	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_5
0x4003689	          0x83f82f	                           cmp eax, 0x2f	      2587	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_5
0x400368c	     0xf871c010000	                            ja 0x40037ae	      2587	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_5
0x4003692	            0x89c2	                            mov edx, eax	      2587	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_5
0x4003694	        0x48035510	             add rdx, qword [rbp + 0x10]	      2587	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_5
0x4003698	          0x83c008	                              add eax, 8	      2587	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_5
0x400369b	          0x894500	                    mov dword [rbp], eax	      2587	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_5
0x400369e	          0x488b32	                    mov rsi, qword [rdx]	      2587	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_5
0x40036a1	    0x488d8600f0ff	                 lea rax, [rsi - 0x1000]	      2590	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	IF_2
0x40036a8	    0x483d00e0ffff	             cmp rax, 0xffffffffffffe000	      2590	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	IF_2
0x40036ae	     0xf871c010000	                            ja 0x40037d0	      2590	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	IF_2
0x40036b4	          0x4889f7	                            mov rdi, rsi	      2590	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	IF_2
0x40036b7	        0x48893424	                    mov qword [rsp], rsi	      2590	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	IF_2
0x40036bb	      0xe800000000	                          call 0x40036c0	      2590	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	IF_2
0x40036c0	        0x488d5001	                      lea rdx, [rax + 1]	      2590	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	IF_2
0x40036c4	        0x488b3424	                    mov rsi, qword [rsp]	      2590	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	IF_2
0x40036c8	        0x488d0c13	                    lea rcx, [rbx + rdx]	      2594	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	IF_3
0x40036cc	          0x4939cc	                            cmp r12, rcx	      2594	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	IF_3
0x40036cf	     0xf8714010000	                            ja 0x40037e9	      2594	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	IF_3
0x40036d5	        0x410fb606	                   movzx eax, byte [r14]	      2594	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	IF_3
0x40036d9	          0x4889cb	                            mov rbx, rcx	      2594	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	IF_3
0x40036dc	      0xe90ffeffff	                           jmp 0x40034f0	      2594	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	IF_3
0x40036e1	    0xf68000000000	                      test byte [rax], 7	      2613	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_4	CALL_9
0x40036e8	     0xf843fffffff	                            je 0x400362d	      2613	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_4	CALL_9
0x40036ee	          0x8b4500	                    mov eax, dword [rbp]	      2617	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	CALL_12
0x40036f1	          0x83f82f	                           cmp eax, 0x2f	      2617	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	CALL_12
0x40036f4	     0xf872d010000	                            ja 0x4003827	      2617	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	CALL_12
0x40036fa	            0x89c2	                            mov edx, eax	      2617	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	CALL_12
0x40036fc	        0x48035510	             add rdx, qword [rbp + 0x10]	      2617	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	CALL_12
0x4003700	          0x83c008	                              add eax, 8	      2617	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	CALL_12
0x4003703	          0x894500	                    mov dword [rbp], eax	      2617	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	CALL_12
0x4003706	          0x488b0a	                    mov rcx, qword [rdx]	      2617	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	CALL_12
0x4003709	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      2617	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	CALL_12
0x400370e	          0x4889de	                            mov rsi, rbx	      2617	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	CALL_12
0x4003711	          0x4c89e2	                            mov rdx, r12	      2617	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	CALL_12
0x4003714	          0x4c89f7	                            mov rdi, r14	      2617	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	CALL_12
0x4003717	      0xe834f3ffff	                        call sym.pointer	      2617	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	CALL_12
0x400371c	          0x4889c3	                            mov rbx, rax	      2617	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	CALL_12
0x400371f	        0x488d4001	                      lea rax, [rax + 1]	      2619	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_5
0x4003723	          0x4939c4	                            cmp r12, rax	      2619	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_5
0x4003726	     0xf8643010000	                           jbe 0x400386f	      2619	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_5
0x400372c	          0xc60300	                       mov byte [rbx], 0	      2620	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_5
0x400372f	          0x4889c3	                            mov rbx, rax	      2620	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_5
0x4003732	      0xe93affffff	                           jmp 0x4003671	      2620	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_5
0x4003737	          0x83e808	                              sub eax, 8	      2630	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3
0x400373a	            0x3c0a	                             cmp al, 0xa	      2630	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3
0x400373c	     0xf87defdffff	                            ja 0x4003520	      2630	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3
0x4003742	           0xfb6c0	                           movzx eax, al	      2630	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3
0x4003745	    0x488b04c50000	                  mov rax, qword [rax*8]	      2630	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3
0x400374d	      0xe900000000	                           jmp 0x4003752	      2630	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3
0x4003752	        0x488b4d08	                mov rcx, qword [rbp + 8]	      2647	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_18
0x4003756	        0x488d4108	                      lea rax, [rcx + 8]	      2647	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_18
0x400375a	        0x48894508	                mov qword [rbp + 8], rax	      2647	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_18
0x400375e	      0xe93cfeffff	                           jmp 0x400359f	      2647	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_18
0x4003763	          0x8b5500	                    mov edx, dword [rbp]	      2643	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x4003766	        0x488d4303	                      lea rax, [rbx + 3]	      2643	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x400376a	        0x4883e0fc	             and rax, 0xfffffffffffffffc	      2643	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x400376e	          0x83fa2f	                           cmp edx, 0x2f	      2643	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x4003771	     0xf879f000000	                            ja 0x4003816	      2643	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x4003777	            0x89d1	                            mov ecx, edx	      2643	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x4003779	        0x48034d10	             add rcx, qword [rbp + 0x10]	      2643	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x400377d	          0x83c208	                              add edx, 8	      2643	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x4003780	          0x895500	                    mov dword [rbp], edx	      2643	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x4003783	          0x488b11	                    mov rdx, qword [rcx]	      2643	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x4003786	        0x488d5808	                      lea rbx, [rax + 8]	      2643	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x400378a	          0x4939dc	                            cmp r12, rbx	      2643	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x400378d	      0x4889542408	                mov qword [rsp + 8], rdx	      2643	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x4003792	     0xf82b5fdffff	                            jb 0x400354d	      2643	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x4003798	        0x8b542408	                mov edx, dword [rsp + 8]	      2643	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x400379c	            0x8910	                    mov dword [rax], edx	      2643	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x400379e	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      2643	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x40037a2	          0x895004	                mov dword [rax + 4], edx	      2643	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x40037a5	        0x410fb606	                   movzx eax, byte [r14]	      2643	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x40037a9	      0xe9a3fdffff	                           jmp 0x4003551	      2643	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x40037ae	        0x488b5508	                mov rdx, qword [rbp + 8]	      2587	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_5
0x40037b2	        0x488d4208	                      lea rax, [rdx + 8]	      2587	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_5
0x40037b6	        0x48894508	                mov qword [rbp + 8], rax	      2587	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_5
0x40037ba	      0xe9dffeffff	                           jmp 0x400369e	      2587	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_5
0x40037bf	        0x488b4d08	                mov rcx, qword [rbp + 8]	      2576	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_2
0x40037c3	        0x488d5108	                      lea rdx, [rcx + 8]	      2576	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_2
0x40037c7	        0x48895508	                mov qword [rbp + 8], rdx	      2576	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_2
0x40037cb	      0xe908feffff	                           jmp 0x40035d8	      2576	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_2
0x40037d0	      0xba07000000	                              mov edx, 7	      2576	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_2
0x40037d5	    0x48c7c6000000	                              mov rsi, 0	      2592	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	IF_2
0x40037dc	        0x488d0c13	                    lea rcx, [rbx + rdx]	      2594	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	IF_3
0x40037e0	          0x4939cc	                            cmp r12, rcx	      2594	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	IF_3
0x40037e3	     0xf86ecfeffff	                           jbe 0x40036d5	      2594	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	IF_3
0x40037e9	          0x4889df	                            mov rdi, rbx	      2595	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_7
0x40037ec	        0x48890c24	                    mov qword [rsp], rcx	      2595	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_7
0x40037f0	      0xe800000000	                          call 0x40037f5	      2595	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_7
0x40037f5	        0x488b0c24	                    mov rcx, qword [rsp]	      2595	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_7
0x40037f9	        0x410fb606	                   movzx eax, byte [r14]	      2595	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_7
0x40037fd	          0x4889cb	                            mov rbx, rcx	      2595	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_7
0x4003800	      0xe9ebfcffff	                           jmp 0x40034f0	      2595	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	CALL_7
0x4003805	        0x488b4d08	                mov rcx, qword [rbp + 8]	      2614	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_4	CALL_10
0x4003809	        0x488d5108	                      lea rdx, [rcx + 8]	      2614	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_4	CALL_10
0x400380d	        0x48895508	                mov qword [rbp + 8], rdx	      2614	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_4	CALL_10
0x4003811	      0xe937feffff	                           jmp 0x400364d	      2614	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	IF_4	CALL_10
0x4003816	        0x488b4d08	                mov rcx, qword [rbp + 8]	      2643	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x400381a	        0x488d5108	                      lea rdx, [rcx + 8]	      2643	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x400381e	        0x48895508	                mov qword [rbp + 8], rdx	      2643	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x4003822	      0xe95cffffff	                           jmp 0x4003783	      2643	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_17
0x4003827	        0x488b5508	                mov rdx, qword [rbp + 8]	      2617	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	CALL_12
0x400382b	        0x488d4208	                      lea rax, [rdx + 8]	      2617	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	CALL_12
0x400382f	        0x48894508	                mov qword [rbp + 8], rax	      2617	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	CALL_12
0x4003833	      0xe9cefeffff	                           jmp 0x4003706	      2617	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	CALL_12
0x4003838	          0x8b5500	                    mov edx, dword [rbp]	      2651	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_19
0x400383b	        0x488d4301	                      lea rax, [rbx + 1]	      2651	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_19
0x400383f	        0x4883e0fe	             and rax, 0xfffffffffffffffe	      2651	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_19
0x4003843	          0x83fa2f	                           cmp edx, 0x2f	      2651	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_19
0x4003846	            0x7743	                            ja 0x400388b	      2651	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_19
0x4003848	            0x89d1	                            mov ecx, edx	      2651	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_19
0x400384a	        0x48034d10	             add rcx, qword [rbp + 0x10]	      2651	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_19
0x400384e	          0x83c208	                              add edx, 8	      2651	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_19
0x4003851	          0x895500	                    mov dword [rbp], edx	      2651	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_19
0x4003854	        0x488d5802	                      lea rbx, [rax + 2]	      2651	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_19
0x4003858	          0x4939dc	                            cmp r12, rbx	      2651	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_19
0x400385b	     0xf82ecfcffff	                            jb 0x400354d	      2651	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_19
0x4003861	            0x8b11	                    mov edx, dword [rcx]	      2651	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_19
0x4003863	          0x668910	                      mov word [rax], dx	      2651	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_19
0x4003866	        0x410fb606	                   movzx eax, byte [r14]	      2651	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_19
0x400386a	      0xe981fcffff	                           jmp 0x40034f0	      2651	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_19
0x400386f	    0x41c64424ff00	                   mov byte [r12 - 1], 0	      2622	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	ELSE_1
0x4003875	      0xe9f7fdffff	                           jmp 0x4003671	      2622	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_2	ELSE_1
0x400387a	        0x488b4d08	                mov rcx, qword [rbp + 8]	      2654	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x400387e	        0x488d5108	                      lea rdx, [rcx + 8]	      2654	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x4003882	        0x48895508	                mov qword [rbp + 8], rdx	      2654	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x4003886	      0xe9b5fcffff	                           jmp 0x4003540	      2654	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x400388b	        0x488b4d08	                mov rcx, qword [rbp + 8]	      2651	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_19
0x400388f	        0x488d5108	                      lea rdx, [rcx + 8]	      2651	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_19
0x4003893	        0x48895508	                mov qword [rbp + 8], rdx	      2651	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_19
0x4003897	            0xebbb	                           jmp 0x4003854	      2651	vsprintf.c	FUNCTION_59	WHILE_1	SWITCH_1	SWITCH_3	CALL_19
0x4003899	      0xe800000000	                          call 0x400389e	      2662	vsprintf.c	FUNCTION_59
set_precision	IF,1:WHILE,0:functions,0:CALL,2:SWITCH,0:DO,0:ELSE,0:FOR,0	31
0x4000860	          0x4889f0	                            mov rax, rsi	      2192	vsprintf.c	FUNCTION_52
0x4000863	        0x40887706	                 mov byte [rdi + 6], sil	      2192	vsprintf.c	FUNCTION_52
0x4000867	           0xfb6c4	                           movzx eax, ah	      2192	vsprintf.c	FUNCTION_52
0x400086a	          0x884707	                  mov byte [rdi + 7], al	      2192	vsprintf.c	FUNCTION_52
0x400086d	           0xfbfc6	                           movsx eax, si	      2193	vsprintf.c	FUNCTION_52	IF_1	CALL_1
0x4000870	            0x39c6	                            cmp esi, eax	      2193	vsprintf.c	FUNCTION_52	IF_1	CALL_1
0x4000872	            0x7501	                           jne 0x4000875	      2193	vsprintf.c	FUNCTION_52	IF_1	CALL_1
0x4000874	              0xc3	                                     ret	      2196	vsprintf.c	FUNCTION_52
0x4000875	    0x803d00000000	                cmp byte [0x0400087c], 0	      2193	vsprintf.c	FUNCTION_52	IF_1	CALL_1
0x400087c	              0x55	                                push rbp	      2191	vsprintf.c	FUNCTION_52
0x400087d	          0x4889fd	                            mov rbp, rdi	      2191	vsprintf.c	FUNCTION_52
0x4000880	              0x53	                                push rbx	      2191	vsprintf.c	FUNCTION_52
0x4000881	            0x89f3	                            mov ebx, esi	      2191	vsprintf.c	FUNCTION_52
0x4000883	            0x7423	                            je 0x40008a8	      2193	vsprintf.c	FUNCTION_52	IF_1	CALL_1
0x4000885	            0x85db	                           test ebx, ebx	      2194	vsprintf.c	FUNCTION_52	IF_1	CALL_2
0x4000887	      0xb800000000	                              mov eax, 0	      2194	vsprintf.c	FUNCTION_52	IF_1	CALL_2
0x400088c	      0xbaff7f0000	                         mov edx, 0x7fff	      2194	vsprintf.c	FUNCTION_52	IF_1	CALL_2
0x4000891	           0xf49c3	                         cmovns eax, ebx	      2194	vsprintf.c	FUNCTION_52	IF_1	CALL_2
0x4000894	      0x3dff7f0000	                         cmp eax, 0x7fff	      2194	vsprintf.c	FUNCTION_52	IF_1	CALL_2
0x4000899	           0xf4fc2	                          cmovg eax, edx	      2194	vsprintf.c	FUNCTION_52	IF_1	CALL_2
0x400089c	          0x884506	                  mov byte [rbp + 6], al	      2194	vsprintf.c	FUNCTION_52	IF_1	CALL_2
0x400089f	           0xfb6c4	                           movzx eax, ah	      2194	vsprintf.c	FUNCTION_52	IF_1	CALL_2
0x40008a2	          0x884507	                  mov byte [rbp + 7], al	      2194	vsprintf.c	FUNCTION_52	IF_1	CALL_2
0x40008a5	              0x5b	                                 pop rbx	      2196	vsprintf.c	FUNCTION_52
0x40008a6	              0x5d	                                 pop rbp	      2196	vsprintf.c	FUNCTION_52
0x40008a7	              0xc3	                                     ret	      2196	vsprintf.c	FUNCTION_52
0x40008a8	    0x48c7c7000000	                              mov rdi, 0	      2193	vsprintf.c	FUNCTION_52	IF_1	CALL_1
0x40008af	    0xc60500000000	                mov byte [0x040008b6], 1	      2193	vsprintf.c	FUNCTION_52	IF_1	CALL_1
0x40008b6	      0xe800000000	                          call 0x40008bb	      2193	vsprintf.c	FUNCTION_52	IF_1	CALL_1
0x40008bb	             0xf0b	                                     ud2	      2193	vsprintf.c	FUNCTION_52	IF_1	CALL_1
0x40008bd	            0xebc6	                           jmp 0x4000885	      2193	vsprintf.c	FUNCTION_52	IF_1	CALL_1
sprintf	IF,0:WHILE,0:functions,0:CALL,3:SWITCH,0:DO,0:ELSE,0:FOR,0	28
0x4003440	              0x55	                                push rbp	      2493	vsprintf.c	FUNCTION_58
0x4003441	          0x4889e5	                            mov rbp, rsp	      2493	vsprintf.c	FUNCTION_58
0x4003444	            0x4152	                                push r10	      2493	vsprintf.c	FUNCTION_58
0x4003446	        0x4c8d5510	                   lea r10, [rbp + 0x10]	      2493	vsprintf.c	FUNCTION_58
0x400344a	        0x4883ec50	                           sub rsp, 0x50	      2493	vsprintf.c	FUNCTION_58
0x400344e	        0x48894de0	             mov qword [rbp - 0x20], rcx	      2493	vsprintf.c	FUNCTION_58
0x4003452	        0x488d4da8	                   lea rcx, [rbp - 0x58]	      2498	vsprintf.c	FUNCTION_58	CALL_2
0x4003456	    0x65488b042528	                mov rax, qword gs:[0x28]	      2493	vsprintf.c	FUNCTION_58
0x400345f	        0x488945c0	             mov qword [rbp - 0x40], rax	      2493	vsprintf.c	FUNCTION_58
0x4003463	            0x31c0	                            xor eax, eax	      2493	vsprintf.c	FUNCTION_58
0x4003465	        0x488d45c8	                   lea rax, [rbp - 0x38]	      2497	vsprintf.c	FUNCTION_58	CALL_1
0x4003469	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2493	vsprintf.c	FUNCTION_58
0x400346d	          0x4889f2	                            mov rdx, rsi	      2498	vsprintf.c	FUNCTION_58	CALL_2
0x4003470	      0xbeffffff7f	                     mov esi, 0x7fffffff	      2498	vsprintf.c	FUNCTION_58	CALL_2
0x4003475	        0x4c8945e8	              mov qword [rbp - 0x18], r8	      2493	vsprintf.c	FUNCTION_58
0x4003479	        0x4c894df0	              mov qword [rbp - 0x10], r9	      2493	vsprintf.c	FUNCTION_58
0x400347d	    0xc745a8100000	           mov dword [rbp - 0x58], 0x10 	      2497	vsprintf.c	FUNCTION_58	CALL_1
0x4003484	        0x4c8955b0	             mov qword [rbp - 0x50], r10	      2497	vsprintf.c	FUNCTION_58	CALL_1
0x4003488	        0x488945b8	             mov qword [rbp - 0x48], rax	      2497	vsprintf.c	FUNCTION_58	CALL_1
0x400348c	      0xe800000000	                          call 0x4003491	      2498	vsprintf.c	FUNCTION_58	CALL_2
0x4003491	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2502	vsprintf.c	FUNCTION_58
0x4003495	    0x654833142528	                xor rdx, qword gs:[0x28]	      2502	vsprintf.c	FUNCTION_58
0x400349e	            0x7508	                           jne 0x40034a8	      2502	vsprintf.c	FUNCTION_58
0x40034a0	        0x4883c450	                           add rsp, 0x50	      2502	vsprintf.c	FUNCTION_58
0x40034a4	            0x415a	                                 pop r10	      2502	vsprintf.c	FUNCTION_58
0x40034a6	              0x5d	                                 pop rbp	      2502	vsprintf.c	FUNCTION_58
0x40034a7	              0xc3	                                     ret	      2502	vsprintf.c	FUNCTION_58
0x40034a8	      0xe800000000	                          call 0x40034ad	      2502	vsprintf.c	FUNCTION_58
netdev_bits	IF,0:WHILE,0:functions,0:CALL,1:SWITCH,1:DO,0:ELSE,0:FOR,0	4
0x4002a40	        0x80790146	                cmp byte [rcx + 1], 0x46	      1416	vsprintf.c	FUNCTION_36	SWITCH_1
0x4002a44	            0x7503	                           jne 0x4002a49	      1416	vsprintf.c	FUNCTION_36	SWITCH_1
0x4002a46	          0x488b12	                    mov rdx, qword [rdx]	      1418	vsprintf.c	FUNCTION_36	SWITCH_1
0x4002a49	            0xebc5	 jmp sym.special_hex_number.constprop.10	      1427	vsprintf.c	FUNCTION_36	CALL_1
hex_string	IF,7:WHILE,0:functions,0:CALL,5:SWITCH,1:DO,0:ELSE,0:FOR,1	56
0x4000d90	            0x89c8	                            mov eax, ecx	       817	vsprintf.c	FUNCTION_22
0x4000d92	          0xc1f808	                              sar eax, 8	       817	vsprintf.c	FUNCTION_22
0x4000d95	            0x85c0	                           test eax, eax	       822	vsprintf.c	FUNCTION_22	IF_1
0x4000d97	     0xf84a9000000	                            je 0x4000e46	       822	vsprintf.c	FUNCTION_22	IF_1
0x4000d9d	        0x4883fa10	                           cmp rdx, 0x10	       826	vsprintf.c	FUNCTION_22	IF_2	CALL_1
0x4000da1	     0xf86a3000000	                           jbe 0x4000e4a	       826	vsprintf.c	FUNCTION_22	IF_2	CALL_1
0x4000da7	      0x410fb64801	                movzx ecx, byte [r8 + 1]	       826	vsprintf.c	FUNCTION_22	IF_2	CALL_1
0x4000dac	    0x41b920000000	                           mov r9d, 0x20	       830	vsprintf.c	FUNCTION_22	SWITCH_1
0x4000db2	          0x83e943	                           sub ecx, 0x43	       830	vsprintf.c	FUNCTION_22	SWITCH_1
0x4000db5	          0x80f90b	                             cmp cl, 0xb	       830	vsprintf.c	FUNCTION_22	SWITCH_1
0x4000db8	            0x770b	                            ja 0x4000dc5	       830	vsprintf.c	FUNCTION_22	SWITCH_1
0x4000dba	           0xfb6c9	                           movzx ecx, cl	       830	vsprintf.c	FUNCTION_22	SWITCH_1
0x4000dbd	    0x440fb6890000	                   movzx r9d, byte [rcx]	       830	vsprintf.c	FUNCTION_22	SWITCH_1
0x4000dc5	            0x85c0	                           test eax, eax	       845	vsprintf.c	FUNCTION_22	IF_3
0x4000dc7	    0x41b801000000	                              mov r8d, 1	       818	vsprintf.c	FUNCTION_22
0x4000dcd	            0x7e0d	                           jle 0x4000ddc	       845	vsprintf.c	FUNCTION_22	IF_3
0x4000dcf	          0x83f840	                           cmp eax, 0x40	       846	vsprintf.c	FUNCTION_22	CALL_3
0x4000dd2	    0x41b840000000	                           mov r8d, 0x40	       846	vsprintf.c	FUNCTION_22	CALL_3
0x4000dd8	        0x440f4ec0	                         cmovle r8d, eax	       846	vsprintf.c	FUNCTION_22	CALL_3
0x4000ddc	            0x31c0	                            xor eax, eax	       818	vsprintf.c	FUNCTION_22
0x4000dde	        0x458d50ff	                      lea r10d, [r8 - 1]	       856	vsprintf.c	FUNCTION_22	FOR_1	IF_6
0x4000de2	            0xeb1b	                           jmp 0x4000dff	       856	vsprintf.c	FUNCTION_22	FOR_1	IF_6
0x4000de4	          0x4139c2	                           cmp r10d, eax	       856	vsprintf.c	FUNCTION_22	FOR_1	IF_6
0x4000de7	            0x7451	                            je 0x4000e3a	       856	vsprintf.c	FUNCTION_22	FOR_1	IF_6
0x4000de9	          0x4839ce	                            cmp rsi, rcx	       857	vsprintf.c	FUNCTION_22	FOR_1	IF_6	IF_7
0x4000dec	            0x7604	                           jbe 0x4000df2	       857	vsprintf.c	FUNCTION_22	FOR_1	IF_6	IF_7
0x4000dee	        0x44884f02	                 mov byte [rdi + 2], r9b	       858	vsprintf.c	FUNCTION_22	FOR_1	IF_6	IF_7
0x4000df2	        0x4883c001	                              add rax, 1	       858	vsprintf.c	FUNCTION_22	FOR_1	IF_6	IF_7
0x4000df6	        0x4883c703	                              add rdi, 3	       859	vsprintf.c	FUNCTION_22	FOR_1	IF_6
0x4000dfa	          0x4139c0	                            cmp r8d, eax	       848	vsprintf.c	FUNCTION_22	FOR_1
0x4000dfd	            0x7e47	                           jle 0x4000e46	       848	vsprintf.c	FUNCTION_22	FOR_1
0x4000dff	          0x4839fe	                            cmp rsi, rdi	       849	vsprintf.c	FUNCTION_22	FOR_1	IF_4
0x4000e02	            0x7613	                           jbe 0x4000e17	       849	vsprintf.c	FUNCTION_22	FOR_1	IF_4
0x4000e04	         0xfb60c02	             movzx ecx, byte [rdx + rax]	       850	vsprintf.c	FUNCTION_22	FOR_1	CALL_4
0x4000e08	          0xc0e904	                               shr cl, 4	       850	vsprintf.c	FUNCTION_22	FOR_1	CALL_4
0x4000e0b	          0x83e10f	                            and ecx, 0xf	       850	vsprintf.c	FUNCTION_22	FOR_1	CALL_4
0x4000e0e	     0xfb689000000	                   movzx ecx, byte [rcx]	       850	vsprintf.c	FUNCTION_22	FOR_1	CALL_4
0x4000e15	            0x880f	                      mov byte [rdi], cl	       850	vsprintf.c	FUNCTION_22	FOR_1	CALL_4
0x4000e17	        0x488d4f01	                      lea rcx, [rdi + 1]	       852	vsprintf.c	FUNCTION_22	FOR_1	IF_5
0x4000e1b	          0x4839ce	                            cmp rsi, rcx	       852	vsprintf.c	FUNCTION_22	FOR_1	IF_5
0x4000e1e	            0x7611	                           jbe 0x4000e31	       852	vsprintf.c	FUNCTION_22	FOR_1	IF_5
0x4000e20	         0xfb60c02	             movzx ecx, byte [rdx + rax]	       853	vsprintf.c	FUNCTION_22	FOR_1	CALL_5
0x4000e24	          0x83e10f	                            and ecx, 0xf	       853	vsprintf.c	FUNCTION_22	FOR_1	CALL_5
0x4000e27	     0xfb689000000	                   movzx ecx, byte [rcx]	       853	vsprintf.c	FUNCTION_22	FOR_1	CALL_5
0x4000e2e	          0x884f01	                  mov byte [rdi + 1], cl	       853	vsprintf.c	FUNCTION_22	FOR_1	CALL_5
0x4000e31	          0x4584c9	                           test r9b, r9b	       856	vsprintf.c	FUNCTION_22	FOR_1	IF_6
0x4000e34	        0x488d4f02	                      lea rcx, [rdi + 2]	       854	vsprintf.c	FUNCTION_22	FOR_1
0x4000e38	            0x75aa	                           jne 0x4000de4	       856	vsprintf.c	FUNCTION_22	FOR_1	IF_6
0x4000e3a	        0x4883c001	                              add rax, 1	       856	vsprintf.c	FUNCTION_22	FOR_1	IF_6
0x4000e3e	          0x4889cf	                            mov rdi, rcx	       854	vsprintf.c	FUNCTION_22	FOR_1
0x4000e41	          0x4139c0	                            cmp r8d, eax	       848	vsprintf.c	FUNCTION_22	FOR_1
0x4000e44	            0x7fb9	                            jg 0x4000dff	       848	vsprintf.c	FUNCTION_22	FOR_1
0x4000e46	          0x4889f8	                            mov rax, rdi	       864	vsprintf.c	FUNCTION_22
0x4000e49	              0xc3	                                     ret	       864	vsprintf.c	FUNCTION_22
0x4000e4a	            0x31d2	                            xor edx, edx	       828	vsprintf.c	FUNCTION_22	CALL_2
0x4000e4c	      0xe9cffeffff	                          jmp sym.string	       828	vsprintf.c	FUNCTION_22	CALL_2
number	IF,26:WHILE,5:functions,0:CALL,4:SWITCH,0:DO,1:ELSE,5:FOR,0	223
0x4000210	            0x4157	                                push r15	       413	vsprintf.c	FUNCTION_13
0x4000212	            0x4156	                                push r14	       413	vsprintf.c	FUNCTION_13
0x4000214	          0x4989ce	                            mov r14, rcx	       413	vsprintf.c	FUNCTION_13
0x4000217	            0x4155	                                push r13	       413	vsprintf.c	FUNCTION_13
0x4000219	            0x4154	                                push r12	       413	vsprintf.c	FUNCTION_13
0x400021b	        0x49c1ee28	                           shr r14, 0x28	       413	vsprintf.c	FUNCTION_13
0x400021f	              0x55	                                push rbp	       413	vsprintf.c	FUNCTION_13
0x4000220	              0x53	                                push rbx	       413	vsprintf.c	FUNCTION_13
0x4000221	          0x4889f3	                            mov rbx, rsi	       413	vsprintf.c	FUNCTION_13
0x4000224	            0x89cd	                            mov ebp, ecx	       421	vsprintf.c	FUNCTION_13
0x4000226	          0x4989fb	                            mov r11, rdi	       413	vsprintf.c	FUNCTION_13
0x4000229	        0x4883ec48	                           sub rsp, 0x48	       413	vsprintf.c	FUNCTION_13
0x400022d	    0x65488b042528	                mov rax, qword gs:[0x28]	       413	vsprintf.c	FUNCTION_13
0x4000236	      0x4889442440	             mov qword [rsp + 0x40], rax	       413	vsprintf.c	FUNCTION_13
0x400023b	            0x31c0	                            xor eax, eax	       413	vsprintf.c	FUNCTION_13
0x400023d	          0x4889c8	                            mov rax, rcx	       413	vsprintf.c	FUNCTION_13
0x4000240	        0x48c1e820	                           shr rax, 0x20	       413	vsprintf.c	FUNCTION_13
0x4000244	          0x4189c7	                           mov r15d, eax	       418	vsprintf.c	FUNCTION_13
0x4000247	          0x4189c4	                           mov r12d, eax	       428	vsprintf.c	FUNCTION_13
0x400024a	          0x4189c5	                           mov r13d, eax	       428	vsprintf.c	FUNCTION_13
0x400024d	        0x41c0ef06	                             shr r15b, 6	       418	vsprintf.c	FUNCTION_13
0x4000251	        0x4180fe0a	                           cmp r14b, 0xa	       418	vsprintf.c	FUNCTION_13
0x4000255	        0x400f95c6	                               setne sil	       418	vsprintf.c	FUNCTION_13
0x4000259	        0x48c1f930	                           sar rcx, 0x30	       422	vsprintf.c	FUNCTION_13
0x400025d	          0xc1fd08	                              sar ebp, 8	       421	vsprintf.c	FUNCTION_13
0x4000260	          0x4121f7	                           and r15d, esi	       418	vsprintf.c	FUNCTION_13
0x4000263	            0x89c6	                            mov esi, eax	       429	vsprintf.c	FUNCTION_13	IF_1
0x4000265	        0x4183e420	                          and r12d, 0x20	       428	vsprintf.c	FUNCTION_13
0x4000269	          0x83e602	                              and esi, 2	       429	vsprintf.c	FUNCTION_13	IF_1
0x400026c	        0x48890c24	                    mov qword [rsp], rcx	       422	vsprintf.c	FUNCTION_13
0x4000270	      0x4088742416	              mov byte [rsp + 0x16], sil	       429	vsprintf.c	FUNCTION_13	IF_1
0x4000275	            0x7404	                            je 0x400027b	       429	vsprintf.c	FUNCTION_13	IF_1
0x4000277	        0x4183e5ef	                    and r13d, 0xffffffef	       430	vsprintf.c	FUNCTION_13	IF_1
0x400027b	        0x41f6c501	                            test r13b, 1	       432	vsprintf.c	FUNCTION_13	IF_2
0x400027f	            0x7426	                            je 0x40002a7	       432	vsprintf.c	FUNCTION_13	IF_2
0x4000281	          0x4885d2	                           test rdx, rdx	       433	vsprintf.c	FUNCTION_13	IF_2	IF_3
0x4000284	     0xf883d020000	                            js 0x40004c7	       433	vsprintf.c	FUNCTION_13	IF_2	IF_3
0x400028a	        0x41f6c504	                            test r13b, 4	       437	vsprintf.c	FUNCTION_13	IF_2	ELSE_1	IF_4
0x400028e	     0xf85f0010000	                           jne 0x4000484	       437	vsprintf.c	FUNCTION_13	IF_2	ELSE_1	IF_4
0x4000294	        0x41f6c508	                            test r13b, 8	       440	vsprintf.c	FUNCTION_13	IF_2	ELSE_2	IF_5
0x4000298	            0x740d	                            je 0x40002a7	       440	vsprintf.c	FUNCTION_13	IF_2	ELSE_2	IF_5
0x400029a	          0x83ed01	                              sub ebp, 1	       442	vsprintf.c	FUNCTION_13	IF_2	ELSE_2	IF_5
0x400029d	          0x4889d6	                            mov rsi, rdx	       442	vsprintf.c	FUNCTION_13	IF_2	ELSE_2	IF_5
0x40002a0	      0xc644241720	            mov byte [rsp + 0x17], 0x20 	       441	vsprintf.c	FUNCTION_13	IF_2	ELSE_2	IF_5
0x40002a5	            0xeb08	                           jmp 0x40002af	       441	vsprintf.c	FUNCTION_13	IF_2	ELSE_2	IF_5
0x40002a7	          0x4889d6	                            mov rsi, rdx	       441	vsprintf.c	FUNCTION_13	IF_2	ELSE_2	IF_5
0x40002aa	      0xc644241700	                mov byte [rsp + 0x17], 0	       431	vsprintf.c	FUNCTION_13
0x40002af	          0x4584ff	                         test r15b, r15b	       445	vsprintf.c	FUNCTION_13	IF_6
0x40002b2	            0x7411	                            je 0x40002c5	       445	vsprintf.c	FUNCTION_13	IF_6
0x40002b4	        0x4180fe10	                          cmp r14b, 0x10	       446	vsprintf.c	FUNCTION_13	IF_6	IF_7
0x40002b8	     0xf84ec010000	                            je 0x40004aa	       446	vsprintf.c	FUNCTION_13	IF_6	IF_7
0x40002be	        0x4883fa01	                              cmp rdx, 1	       449	vsprintf.c	FUNCTION_13	IF_6	ELSE_3	IF_8
0x40002c2	          0x83d5ff	             adc ebp, 0xffffffffffffffff	       449	vsprintf.c	FUNCTION_13	IF_6	ELSE_3	IF_8
0x40002c5	        0x410fb6c6	                         movzx eax, r14b	       454	vsprintf.c	FUNCTION_13	IF_9
0x40002c9	          0x4839c6	                            cmp rsi, rax	       454	vsprintf.c	FUNCTION_13	IF_9
0x40002cc	            0x725c	                            jb 0x400032a	       454	vsprintf.c	FUNCTION_13	IF_9
0x40002ce	        0x4180fe0a	                           cmp r14b, 0xa	       456	vsprintf.c	FUNCTION_13	ELSE_4	IF_10
0x40002d2	     0xf840a020000	                            je 0x40004e2	       456	vsprintf.c	FUNCTION_13	ELSE_4	IF_10
0x40002d8	        0x450fb6d6	                        movzx r10d, r14b	       457	vsprintf.c	FUNCTION_13	ELSE_4	IF_10
0x40002dc	            0x31c9	                            xor ecx, ecx	       458	vsprintf.c	FUNCTION_13	ELSE_4	IF_10
0x40002de	        0x4183ea01	                             sub r10d, 1	       457	vsprintf.c	FUNCTION_13	ELSE_4	IF_10
0x40002e2	        0x4180fe10	                          cmp r14b, 0x10	       458	vsprintf.c	FUNCTION_13	ELSE_4	IF_10
0x40002e6	           0xf94c1	                                 sete cl	       458	vsprintf.c	FUNCTION_13	ELSE_4	IF_10
0x40002e9	          0x83c103	                              add ecx, 3	       458	vsprintf.c	FUNCTION_13	ELSE_4	IF_10
0x40002ec	      0x4c8d442428	                    lea r8, [rsp + 0x28]	       458	vsprintf.c	FUNCTION_13	ELSE_4	IF_10
0x40002f1	          0x4531c9	                            xor r9d, r9d	       461	vsprintf.c	FUNCTION_13	ELSE_4	IF_10	IF_11
0x40002f4	      0x4889542418	             mov qword [rsp + 0x18], rdx	       461	vsprintf.c	FUNCTION_13	ELSE_4	IF_10	IF_11
0x40002f9	            0xeb03	                           jmp 0x40002fe	       461	vsprintf.c	FUNCTION_13	ELSE_4	IF_10	IF_11
0x40002fb	          0x4189f9	                            mov r9d, edi	       463	vsprintf.c	FUNCTION_13	ELSE_4	IF_10	DO_1
0x40002fe	            0x89f0	                            mov eax, esi	       463	vsprintf.c	FUNCTION_13	ELSE_4	IF_10	DO_1
0x4000300	          0x4489e2	                           mov edx, r12d	       463	vsprintf.c	FUNCTION_13	ELSE_4	IF_10	DO_1
0x4000303	          0x48d3ee	                             shr rsi, cl	       464	vsprintf.c	FUNCTION_13	ELSE_4	IF_10	DO_1
0x4000306	          0x4421d0	                           and eax, r10d	       463	vsprintf.c	FUNCTION_13	ELSE_4	IF_10	DO_1
0x4000309	        0x4983c001	                               add r8, 1	       463	vsprintf.c	FUNCTION_13	ELSE_4	IF_10	DO_1
0x400030d	        0x418d7901	                       lea edi, [r9 + 1]	       463	vsprintf.c	FUNCTION_13	ELSE_4	IF_10	DO_1
0x4000311	           0xfb6c0	                           movzx eax, al	       463	vsprintf.c	FUNCTION_13	ELSE_4	IF_10	DO_1
0x4000314	     0xa9000000000	                       or dl, byte [rax]	       463	vsprintf.c	FUNCTION_13	ELSE_4	IF_10	DO_1
0x400031a	        0x418850ff	                   mov byte [r8 - 1], dl	       463	vsprintf.c	FUNCTION_13	ELSE_4	IF_10	DO_1
0x400031e	          0x4885f6	                           test rsi, rsi	       465	vsprintf.c	FUNCTION_13	ELSE_4	IF_10	DO_1
0x4000321	            0x75d8	                           jne 0x40002fb	       465	vsprintf.c	FUNCTION_13	ELSE_4	IF_10	DO_1
0x4000323	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       465	vsprintf.c	FUNCTION_13	ELSE_4	IF_10	DO_1
0x4000328	            0xeb15	                           jmp 0x400033f	       465	vsprintf.c	FUNCTION_13	ELSE_4	IF_10	DO_1
0x400032a	          0x4489e0	                           mov eax, r12d	       455	vsprintf.c	FUNCTION_13	IF_9
0x400032d	     0xa8600000000	                       or al, byte [rsi]	       455	vsprintf.c	FUNCTION_13	IF_9
0x4000333	          0x4531c9	                            xor r9d, r9d	       455	vsprintf.c	FUNCTION_13	IF_9
0x4000336	      0xbf01000000	                              mov edi, 1	       455	vsprintf.c	FUNCTION_13	IF_9
0x400033b	        0x88442428	               mov byte [rsp + 0x28], al	       455	vsprintf.c	FUNCTION_13	IF_9
0x400033f	          0x8b0424	                    mov eax, dword [rsp]	       455	vsprintf.c	FUNCTION_13	IF_9
0x4000342	            0x39c7	                            cmp edi, eax	       455	vsprintf.c	FUNCTION_13	IF_9
0x4000344	            0x89c1	                            mov ecx, eax	       455	vsprintf.c	FUNCTION_13	IF_9
0x4000346	           0xf4dcf	                         cmovge ecx, edi	       455	vsprintf.c	FUNCTION_13	IF_9
0x4000349	            0x29cd	                            sub ebp, ecx	       474	vsprintf.c	FUNCTION_13
0x400034b	        0x41f6c512	                         test r13b, 0x12	       475	vsprintf.c	FUNCTION_13	IF_13
0x400034f	            0x7523	                           jne 0x4000374	       475	vsprintf.c	FUNCTION_13	IF_13
0x4000351	          0x83ed01	                              sub ebp, 1	       476	vsprintf.c	FUNCTION_13	IF_13	WHILE_1
0x4000354	            0x781e	                            js 0x4000374	       476	vsprintf.c	FUNCTION_13	IF_13	WHILE_1
0x4000356	            0x89ed	                            mov ebp, ebp	       476	vsprintf.c	FUNCTION_13	IF_13	WHILE_1
0x4000358	      0x498d442b01	                lea rax, [r11 + rbp + 1]	       476	vsprintf.c	FUNCTION_13	IF_13	WHILE_1
0x400035d	          0x4c39db	                            cmp rbx, r11	       477	vsprintf.c	FUNCTION_13	IF_13	WHILE_1	IF_14
0x4000360	            0x7604	                           jbe 0x4000366	       477	vsprintf.c	FUNCTION_13	IF_13	WHILE_1	IF_14
0x4000362	        0x41c60320	                    mov byte [r11], 0x20	       478	vsprintf.c	FUNCTION_13	IF_13	WHILE_1	IF_14
0x4000366	        0x4983c301	                              add r11, 1	       479	vsprintf.c	FUNCTION_13	IF_13	WHILE_1
0x400036a	          0x4939c3	                            cmp r11, rax	       476	vsprintf.c	FUNCTION_13	IF_13	WHILE_1
0x400036d	            0x75ee	                           jne 0x400035d	       476	vsprintf.c	FUNCTION_13	IF_13	WHILE_1
0x400036f	      0xbdffffffff	                     mov ebp, 0xffffffff	       476	vsprintf.c	FUNCTION_13	IF_13	WHILE_1
0x4000374	       0xfb6442417	           movzx eax, byte [rsp + 0x17] 	       483	vsprintf.c	FUNCTION_13	IF_15
0x4000379	            0x84c0	                             test al, al	       483	vsprintf.c	FUNCTION_13	IF_15
0x400037b	            0x740d	                            je 0x400038a	       483	vsprintf.c	FUNCTION_13	IF_15
0x400037d	          0x4939db	                            cmp r11, rbx	       484	vsprintf.c	FUNCTION_13	IF_15	IF_16
0x4000380	     0xf82db000000	                            jb 0x4000461	       484	vsprintf.c	FUNCTION_13	IF_15	IF_16
0x4000386	        0x4983c301	                              add r11, 1	       486	vsprintf.c	FUNCTION_13	IF_15
0x400038a	          0x4584ff	                         test r15b, r15b	       489	vsprintf.c	FUNCTION_13	IF_17
0x400038d	            0x7413	                            je 0x40003a2	       489	vsprintf.c	FUNCTION_13	IF_17
0x400038f	          0x4885d2	                           test rdx, rdx	       490	vsprintf.c	FUNCTION_13	IF_17	IF_18
0x4000392	     0xf85d1000000	                           jne 0x4000469	       490	vsprintf.c	FUNCTION_13	IF_17	IF_18
0x4000398	        0x4180fe10	                          cmp r14b, 0x10	       490	vsprintf.c	FUNCTION_13	IF_17	IF_18
0x400039c	     0xf84c7000000	                            je 0x4000469	       490	vsprintf.c	FUNCTION_13	IF_17	IF_18
0x40003a2	      0x807c241600	                cmp byte [rsp + 0x16], 0	       502	vsprintf.c	FUNCTION_13	IF_22
0x40003a7	            0x753e	                           jne 0x40003e7	       502	vsprintf.c	FUNCTION_13	IF_22
0x40003a9	        0x4183e510	                          and r13d, 0x10	       503	vsprintf.c	FUNCTION_13	IF_22
0x40003ad	        0x4183c520	                          add r13d, 0x20	       503	vsprintf.c	FUNCTION_13	IF_22
0x40003b1	          0x83ed01	                              sub ebp, 1	       505	vsprintf.c	FUNCTION_13	IF_22	WHILE_2
0x40003b4	            0x7831	                            js 0x40003e7	       505	vsprintf.c	FUNCTION_13	IF_22	WHILE_2
0x40003b6	            0x89ed	                            mov ebp, ebp	       505	vsprintf.c	FUNCTION_13	IF_22	WHILE_2
0x40003b8	      0x498d442b01	                lea rax, [r11 + rbp + 1]	       505	vsprintf.c	FUNCTION_13	IF_22	WHILE_2
0x40003bd	          0x4c39db	                            cmp rbx, r11	       506	vsprintf.c	FUNCTION_13	IF_22	WHILE_2	IF_23
0x40003c0	            0x7603	                           jbe 0x40003c5	       506	vsprintf.c	FUNCTION_13	IF_22	WHILE_2	IF_23
0x40003c2	          0x45882b	                    mov byte [r11], r13b	       507	vsprintf.c	FUNCTION_13	IF_22	WHILE_2	IF_23
0x40003c5	        0x4983c301	                              add r11, 1	       508	vsprintf.c	FUNCTION_13	IF_22	WHILE_2
0x40003c9	          0x4c39d8	                            cmp rax, r11	       505	vsprintf.c	FUNCTION_13	IF_22	WHILE_2
0x40003cc	            0x75ef	                           jne 0x40003bd	       505	vsprintf.c	FUNCTION_13	IF_22	WHILE_2
0x40003ce	          0x83e901	                              sub ecx, 1	       512	vsprintf.c	FUNCTION_13	WHILE_3
0x40003d1	      0xbdffffffff	                     mov ebp, 0xffffffff	       505	vsprintf.c	FUNCTION_13	IF_22	WHILE_2
0x40003d6	            0x39cf	                            cmp edi, ecx	       512	vsprintf.c	FUNCTION_13	WHILE_3
0x40003d8	            0x7f14	                            jg 0x40003ee	       512	vsprintf.c	FUNCTION_13	WHILE_3
0x40003da	          0x4c39db	                            cmp rbx, r11	       513	vsprintf.c	FUNCTION_13	WHILE_3	IF_24
0x40003dd	            0x7604	                           jbe 0x40003e3	       513	vsprintf.c	FUNCTION_13	WHILE_3	IF_24
0x40003df	        0x41c60330	                    mov byte [r11], 0x30	       514	vsprintf.c	FUNCTION_13	WHILE_3	IF_24
0x40003e3	        0x4983c301	                              add r11, 1	       515	vsprintf.c	FUNCTION_13	WHILE_3
0x40003e7	          0x83e901	                              sub ecx, 1	       512	vsprintf.c	FUNCTION_13	WHILE_3
0x40003ea	            0x39cf	                            cmp edi, ecx	       512	vsprintf.c	FUNCTION_13	WHILE_3
0x40003ec	            0x7eec	                           jle 0x40003da	       512	vsprintf.c	FUNCTION_13	WHILE_3
0x40003ee	          0x4585c9	                           test r9d, r9d	       518	vsprintf.c	FUNCTION_13	WHILE_4
0x40003f1	            0x7829	                            js 0x400041c	       518	vsprintf.c	FUNCTION_13	WHILE_4
0x40003f3	          0x4489ca	                            mov edx, r9d	       518	vsprintf.c	FUNCTION_13	WHILE_4
0x40003f6	          0x4c89d8	                            mov rax, r11	       518	vsprintf.c	FUNCTION_13	WHILE_4
0x40003f9	          0x4839c3	                            cmp rbx, rax	       519	vsprintf.c	FUNCTION_13	WHILE_4	IF_25
0x40003fc	            0x760a	                           jbe 0x4000408	       519	vsprintf.c	FUNCTION_13	WHILE_4	IF_25
0x40003fe	          0x4863ca	                         movsxd rcx, edx	       520	vsprintf.c	FUNCTION_13	WHILE_4	IF_25
0x4000401	       0xfb64c0c28	     movzx ecx, byte [rsp + rcx + 0x28] 	       520	vsprintf.c	FUNCTION_13	WHILE_4	IF_25
0x4000406	            0x8808	                      mov byte [rax], cl	       520	vsprintf.c	FUNCTION_13	WHILE_4	IF_25
0x4000408	          0x83ea01	                              sub edx, 1	       518	vsprintf.c	FUNCTION_13	WHILE_4
0x400040b	        0x4883c001	                              add rax, 1	       521	vsprintf.c	FUNCTION_13	WHILE_4
0x400040f	          0x83faff	             cmp edx, 0xffffffffffffffff	       518	vsprintf.c	FUNCTION_13	WHILE_4
0x4000412	            0x75e5	                           jne 0x40003f9	       518	vsprintf.c	FUNCTION_13	WHILE_4
0x4000414	          0x4d63c9	                          movsxd r9, r9d	       518	vsprintf.c	FUNCTION_13	WHILE_4
0x4000417	      0x4f8d5c0b01	                 lea r11, [r11 + r9 + 1]	       518	vsprintf.c	FUNCTION_13	WHILE_4
0x400041c	          0x83ed01	                              sub ebp, 1	       524	vsprintf.c	FUNCTION_13	WHILE_5
0x400041f	     0xf88b5000000	                            js 0x40004da	       524	vsprintf.c	FUNCTION_13	WHILE_5
0x4000425	            0x89ed	                            mov ebp, ebp	       524	vsprintf.c	FUNCTION_13	WHILE_5
0x4000427	      0x498d442b01	                lea rax, [r11 + rbp + 1]	       524	vsprintf.c	FUNCTION_13	WHILE_5
0x400042c	          0x4c39db	                            cmp rbx, r11	       525	vsprintf.c	FUNCTION_13	WHILE_5	IF_26
0x400042f	            0x7604	                           jbe 0x4000435	       525	vsprintf.c	FUNCTION_13	WHILE_5	IF_26
0x4000431	        0x41c60320	                    mov byte [r11], 0x20	       526	vsprintf.c	FUNCTION_13	WHILE_5	IF_26
0x4000435	        0x4983c301	                              add r11, 1	       527	vsprintf.c	FUNCTION_13	WHILE_5
0x4000439	          0x4c39d8	                            cmp rax, r11	       524	vsprintf.c	FUNCTION_13	WHILE_5
0x400043c	            0x75ee	                           jne 0x400042c	       524	vsprintf.c	FUNCTION_13	WHILE_5
0x400043e	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       531	vsprintf.c	FUNCTION_13
0x4000443	    0x654833342528	                xor rsi, qword gs:[0x28]	       531	vsprintf.c	FUNCTION_13
0x400044c	     0xf85bf000000	                           jne 0x4000511	       531	vsprintf.c	FUNCTION_13
0x4000452	        0x4883c448	                           add rsp, 0x48	       531	vsprintf.c	FUNCTION_13
0x4000456	              0x5b	                                 pop rbx	       531	vsprintf.c	FUNCTION_13
0x4000457	              0x5d	                                 pop rbp	       531	vsprintf.c	FUNCTION_13
0x4000458	            0x415c	                                 pop r12	       531	vsprintf.c	FUNCTION_13
0x400045a	            0x415d	                                 pop r13	       531	vsprintf.c	FUNCTION_13
0x400045c	            0x415e	                                 pop r14	       531	vsprintf.c	FUNCTION_13
0x400045e	            0x415f	                                 pop r15	       531	vsprintf.c	FUNCTION_13
0x4000460	              0xc3	                                     ret	       531	vsprintf.c	FUNCTION_13
0x4000461	          0x418803	                      mov byte [r11], al	       485	vsprintf.c	FUNCTION_13	IF_15	IF_16
0x4000464	      0xe91dffffff	                           jmp 0x4000386	       485	vsprintf.c	FUNCTION_13	IF_15	IF_16
0x4000469	          0x4939db	                            cmp r11, rbx	       491	vsprintf.c	FUNCTION_13	IF_17	IF_18	IF_19
0x400046c	            0x7304	                           jae 0x4000472	       491	vsprintf.c	FUNCTION_13	IF_17	IF_18	IF_19
0x400046e	        0x41c60330	                    mov byte [r11], 0x30	       492	vsprintf.c	FUNCTION_13	IF_17	IF_18	IF_19
0x4000472	        0x4180fe10	                          cmp r14b, 0x10	       495	vsprintf.c	FUNCTION_13	IF_17	IF_20
0x4000476	        0x498d4301	                      lea rax, [r11 + 1]	       493	vsprintf.c	FUNCTION_13	IF_17	IF_18
0x400047a	            0x7418	                            je 0x4000494	       495	vsprintf.c	FUNCTION_13	IF_17	IF_20
0x400047c	          0x4989c3	                            mov r11, rax	       493	vsprintf.c	FUNCTION_13	IF_17	IF_18
0x400047f	      0xe91effffff	                           jmp 0x40003a2	       493	vsprintf.c	FUNCTION_13	IF_17	IF_18
0x4000484	          0x83ed01	                              sub ebp, 1	       439	vsprintf.c	FUNCTION_13	IF_2	ELSE_1	IF_4
0x4000487	          0x4889d6	                            mov rsi, rdx	       439	vsprintf.c	FUNCTION_13	IF_2	ELSE_1	IF_4
0x400048a	      0xc64424172b	            mov byte [rsp + 0x17], 0x2b 	       438	vsprintf.c	FUNCTION_13	IF_2	ELSE_1	IF_4
0x400048f	      0xe91bfeffff	                           jmp 0x40002af	       438	vsprintf.c	FUNCTION_13	IF_2	ELSE_1	IF_4
0x4000494	          0x4839c3	                            cmp rbx, rax	       496	vsprintf.c	FUNCTION_13	IF_17	IF_20	IF_21
0x4000497	            0x7608	                           jbe 0x40004a1	       496	vsprintf.c	FUNCTION_13	IF_17	IF_20	IF_21
0x4000499	        0x4183cc58	                           or r12d, 0x58	       497	vsprintf.c	FUNCTION_13	IF_17	IF_20	IF_21
0x400049d	        0x45886301	                mov byte [r11 + 1], r12b	       497	vsprintf.c	FUNCTION_13	IF_17	IF_20	IF_21
0x40004a1	        0x4983c302	                              add r11, 2	       498	vsprintf.c	FUNCTION_13	IF_17	IF_20
0x40004a5	      0xe9f8feffff	                           jmp 0x40003a2	       498	vsprintf.c	FUNCTION_13	IF_17	IF_20
0x40004aa	          0x83ed02	                              sub ebp, 2	       447	vsprintf.c	FUNCTION_13	IF_6	IF_7
0x40004ad	        0x4883fe0f	                            cmp rsi, 0xf	       454	vsprintf.c	FUNCTION_13	IF_9
0x40004b1	     0xf8673feffff	                           jbe 0x400032a	       454	vsprintf.c	FUNCTION_13	IF_9
0x40004b7	    0x41ba0f000000	                           mov r10d, 0xf	       457	vsprintf.c	FUNCTION_13	ELSE_4	IF_10
0x40004bd	      0xb904000000	                              mov ecx, 4	       461	vsprintf.c	FUNCTION_13	ELSE_4	IF_10	IF_11
0x40004c2	      0xe925feffff	                           jmp 0x40002ec	       461	vsprintf.c	FUNCTION_13	ELSE_4	IF_10	IF_11
0x40004c7	          0x4889d6	                            mov rsi, rdx	       435	vsprintf.c	FUNCTION_13	IF_2	IF_3
0x40004ca	          0x83ed01	                              sub ebp, 1	       436	vsprintf.c	FUNCTION_13	IF_2	IF_3
0x40004cd	      0xc64424172d	            mov byte [rsp + 0x17], 0x2d 	       434	vsprintf.c	FUNCTION_13	IF_2	IF_3
0x40004d2	          0x48f7de	                                 neg rsi	       435	vsprintf.c	FUNCTION_13	IF_2	IF_3
0x40004d5	      0xe9d5fdffff	                           jmp 0x40002af	       435	vsprintf.c	FUNCTION_13	IF_2	IF_3
0x40004da	          0x4c89d8	                            mov rax, r11	       524	vsprintf.c	FUNCTION_13	WHILE_5
0x40004dd	      0xe95cffffff	                           jmp 0x400043e	       524	vsprintf.c	FUNCTION_13	WHILE_5
0x40004e2	      0x488d4c2428	                   lea rcx, [rsp + 0x28]	       467	vsprintf.c	FUNCTION_13	ELSE_5	CALL_3
0x40004e7	      0x4889542420	             mov qword [rsp + 0x20], rdx	       467	vsprintf.c	FUNCTION_13	ELSE_5	CALL_3
0x40004ec	          0x4889cf	                            mov rdi, rcx	       467	vsprintf.c	FUNCTION_13	ELSE_5	CALL_3
0x40004ef	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       467	vsprintf.c	FUNCTION_13	ELSE_5	CALL_3
0x40004f4	      0xe887fcffff	                        call sym.put_dec	       467	vsprintf.c	FUNCTION_13	ELSE_5	CALL_3
0x40004f9	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       467	vsprintf.c	FUNCTION_13	ELSE_5	CALL_3
0x40004fe	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       467	vsprintf.c	FUNCTION_13	ELSE_5	CALL_3
0x4000503	          0x4829c8	                            sub rax, rcx	       467	vsprintf.c	FUNCTION_13	ELSE_5	CALL_3
0x4000506	            0x89c7	                            mov edi, eax	       467	vsprintf.c	FUNCTION_13	ELSE_5	CALL_3
0x4000508	        0x448d48ff	                      lea r9d, [rax - 1]	       467	vsprintf.c	FUNCTION_13	ELSE_5	CALL_3
0x400050c	      0xe92efeffff	                           jmp 0x400033f	       467	vsprintf.c	FUNCTION_13	ELSE_5	CALL_3
0x4000511	      0xe800000000	                          call 0x4000516	       531	vsprintf.c	FUNCTION_13
bprintf	IF,0:WHILE,0:functions,0:CALL,3:SWITCH,0:DO,0:ELSE,0:FOR,0	25
0x40038a0	              0x55	                                push rbp	      2888	vsprintf.c	FUNCTION_61
0x40038a1	          0x4889e5	                            mov rbp, rsp	      2888	vsprintf.c	FUNCTION_61
0x40038a4	            0x4152	                                push r10	      2888	vsprintf.c	FUNCTION_61
0x40038a6	        0x4c8d5510	                   lea r10, [rbp + 0x10]	      2888	vsprintf.c	FUNCTION_61
0x40038aa	        0x4883ec50	                           sub rsp, 0x50	      2888	vsprintf.c	FUNCTION_61
0x40038ae	        0x48894de0	             mov qword [rbp - 0x20], rcx	      2888	vsprintf.c	FUNCTION_61
0x40038b2	        0x488d4da8	                   lea rcx, [rbp - 0x58]	      2893	vsprintf.c	FUNCTION_61	CALL_2
0x40038b6	    0x65488b042528	                mov rax, qword gs:[0x28]	      2888	vsprintf.c	FUNCTION_61
0x40038bf	        0x488945c0	             mov qword [rbp - 0x40], rax	      2888	vsprintf.c	FUNCTION_61
0x40038c3	            0x31c0	                            xor eax, eax	      2888	vsprintf.c	FUNCTION_61
0x40038c5	        0x488d45c8	                   lea rax, [rbp - 0x38]	      2892	vsprintf.c	FUNCTION_61	CALL_1
0x40038c9	        0x4c8945e8	              mov qword [rbp - 0x18], r8	      2888	vsprintf.c	FUNCTION_61
0x40038cd	        0x4c894df0	              mov qword [rbp - 0x10], r9	      2888	vsprintf.c	FUNCTION_61
0x40038d1	    0xc745a8180000	           mov dword [rbp - 0x58], 0x18 	      2892	vsprintf.c	FUNCTION_61	CALL_1
0x40038d8	        0x4c8955b0	             mov qword [rbp - 0x50], r10	      2892	vsprintf.c	FUNCTION_61	CALL_1
0x40038dc	        0x488945b8	             mov qword [rbp - 0x48], rax	      2892	vsprintf.c	FUNCTION_61	CALL_1
0x40038e0	      0xe800000000	                          call 0x40038e5	      2893	vsprintf.c	FUNCTION_61	CALL_2
0x40038e5	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2897	vsprintf.c	FUNCTION_61
0x40038e9	    0x654833142528	                xor rdx, qword gs:[0x28]	      2897	vsprintf.c	FUNCTION_61
0x40038f2	            0x7508	                           jne 0x40038fc	      2897	vsprintf.c	FUNCTION_61
0x40038f4	        0x4883c450	                           add rsp, 0x50	      2897	vsprintf.c	FUNCTION_61
0x40038f8	            0x415a	                                 pop r10	      2897	vsprintf.c	FUNCTION_61
0x40038fa	              0x5d	                                 pop rbp	      2897	vsprintf.c	FUNCTION_61
0x40038fb	              0xc3	                                     ret	      2897	vsprintf.c	FUNCTION_61
0x40038fc	      0xe800000000	                          call 0x4003901	      2897	vsprintf.c	FUNCTION_61
set_field_width	IF,1:WHILE,0:functions,0:CALL,2:SWITCH,0:DO,0:ELSE,0:FOR,0	37
0x40007e0	            0x89f0	                            mov eax, esi	      2183	vsprintf.c	FUNCTION_51
0x40007e2	          0xc1e008	                              shl eax, 8	      2183	vsprintf.c	FUNCTION_51
0x40007e5	          0xc1f808	                              sar eax, 8	      2183	vsprintf.c	FUNCTION_51
0x40007e8	           0xfb6d4	                           movzx edx, ah	      2183	vsprintf.c	FUNCTION_51
0x40007eb	          0x884701	                  mov byte [rdi + 1], al	      2183	vsprintf.c	FUNCTION_51
0x40007ee	          0x885702	                  mov byte [rdi + 2], dl	      2183	vsprintf.c	FUNCTION_51
0x40007f1	            0x89c2	                            mov edx, eax	      2183	vsprintf.c	FUNCTION_51
0x40007f3	          0xc1ea10	                           shr edx, 0x10	      2183	vsprintf.c	FUNCTION_51
0x40007f6	            0x39c6	                            cmp esi, eax	      2184	vsprintf.c	FUNCTION_51	IF_1	CALL_1
0x40007f8	          0x885703	                  mov byte [rdi + 3], dl	      2183	vsprintf.c	FUNCTION_51
0x40007fb	            0x7501	                           jne 0x40007fe	      2184	vsprintf.c	FUNCTION_51	IF_1	CALL_1
0x40007fd	              0xc3	                                     ret	      2187	vsprintf.c	FUNCTION_51
0x40007fe	    0x803d00000000	                cmp byte [0x04000805], 0	      2184	vsprintf.c	FUNCTION_51	IF_1	CALL_1
0x4000805	              0x55	                                push rbp	      2182	vsprintf.c	FUNCTION_51
0x4000806	            0x89f5	                            mov ebp, esi	      2182	vsprintf.c	FUNCTION_51
0x4000808	              0x53	                                push rbx	      2182	vsprintf.c	FUNCTION_51
0x4000809	          0x4889fb	                            mov rbx, rdi	      2182	vsprintf.c	FUNCTION_51
0x400080c	            0x742d	                            je 0x400083b	      2184	vsprintf.c	FUNCTION_51	IF_1	CALL_1
0x400080e	    0x81fd010080ff	                     cmp ebp, 0xff800001	      2185	vsprintf.c	FUNCTION_51	IF_1	CALL_2
0x4000814	      0xb8010080ff	                     mov eax, 0xff800001	      2185	vsprintf.c	FUNCTION_51	IF_1	CALL_2
0x4000819	      0xbaffff7f00	                       mov edx, 0x7fffff	      2185	vsprintf.c	FUNCTION_51	IF_1	CALL_2
0x400081e	           0xf4dc5	                         cmovge eax, ebp	      2185	vsprintf.c	FUNCTION_51	IF_1	CALL_2
0x4000821	      0x3dffff7f00	                       cmp eax, 0x7fffff	      2185	vsprintf.c	FUNCTION_51	IF_1	CALL_2
0x4000826	           0xf4fc2	                          cmovg eax, edx	      2185	vsprintf.c	FUNCTION_51	IF_1	CALL_2
0x4000829	          0x884301	                  mov byte [rbx + 1], al	      2185	vsprintf.c	FUNCTION_51	IF_1	CALL_2
0x400082c	           0xfb6d4	                           movzx edx, ah	      2185	vsprintf.c	FUNCTION_51	IF_1	CALL_2
0x400082f	          0xc1e810	                           shr eax, 0x10	      2185	vsprintf.c	FUNCTION_51	IF_1	CALL_2
0x4000832	          0x885302	                  mov byte [rbx + 2], dl	      2185	vsprintf.c	FUNCTION_51	IF_1	CALL_2
0x4000835	          0x884303	                  mov byte [rbx + 3], al	      2185	vsprintf.c	FUNCTION_51	IF_1	CALL_2
0x4000838	              0x5b	                                 pop rbx	      2187	vsprintf.c	FUNCTION_51
0x4000839	              0x5d	                                 pop rbp	      2187	vsprintf.c	FUNCTION_51
0x400083a	              0xc3	                                     ret	      2187	vsprintf.c	FUNCTION_51
0x400083b	    0x48c7c7000000	                              mov rdi, 0	      2184	vsprintf.c	FUNCTION_51	IF_1	CALL_1
0x4000842	    0xc60500000000	                mov byte [0x04000849], 1	      2184	vsprintf.c	FUNCTION_51	IF_1	CALL_1
0x4000849	      0xe800000000	                          call 0x400084e	      2184	vsprintf.c	FUNCTION_51	IF_1	CALL_1
0x400084e	             0xf0b	                                     ud2	      2184	vsprintf.c	FUNCTION_51	IF_1	CALL_1
0x4000850	            0xebbc	                           jmp 0x400080e	      2184	vsprintf.c	FUNCTION_51	IF_1	CALL_1
ip4_string	IF,4:WHILE,1:functions,0:CALL,2:SWITCH,1:DO,0:ELSE,0:FOR,1	72
0x4000520	            0x4154	                                push r12	       987	vsprintf.c	FUNCTION_26
0x4000522	              0x55	                                push rbp	       987	vsprintf.c	FUNCTION_26
0x4000523	          0x4989f8	                             mov r8, rdi	       987	vsprintf.c	FUNCTION_26
0x4000526	              0x53	                                push rbx	       987	vsprintf.c	FUNCTION_26
0x4000527	          0x4989f2	                            mov r10, rsi	       987	vsprintf.c	FUNCTION_26
0x400052a	        0x4883ec10	                           sub rsp, 0x10	       987	vsprintf.c	FUNCTION_26
0x400052e	           0xfb60a	                   movzx ecx, byte [rdx]	       989	vsprintf.c	FUNCTION_26
0x4000531	    0x65488b042528	                mov rax, qword gs:[0x28]	       987	vsprintf.c	FUNCTION_26
0x400053a	      0x4889442408	                mov qword [rsp + 8], rax	       987	vsprintf.c	FUNCTION_26
0x400053f	            0x31c0	                            xor eax, eax	       987	vsprintf.c	FUNCTION_26
0x4000541	         0xfb64202	               movzx eax, byte [rdx + 2]	       993	vsprintf.c	FUNCTION_26	SWITCH_1
0x4000545	            0x3c68	                            cmp al, 0x68	       993	vsprintf.c	FUNCTION_26	SWITCH_1
0x4000547	     0xf84ad000000	                            je 0x40005fa	       993	vsprintf.c	FUNCTION_26	SWITCH_1
0x400054d	          0x4531e4	                          xor r12d, r12d	      1010	vsprintf.c	FUNCTION_26	SWITCH_1
0x4000550	            0x3c6c	                            cmp al, 0x6c	       993	vsprintf.c	FUNCTION_26	SWITCH_1
0x4000552	      0xbb01000000	                              mov ebx, 1	      1011	vsprintf.c	FUNCTION_26	SWITCH_1
0x4000557	     0xf849d000000	                            je 0x40005fa	       993	vsprintf.c	FUNCTION_26	SWITCH_1
0x400055d	          0x80f969	                            cmp cl, 0x69	       993	vsprintf.c	FUNCTION_26	SWITCH_1
0x4000560	      0x4c8d4c2404	                       lea r9, [rsp + 4]	       993	vsprintf.c	FUNCTION_26	SWITCH_1
0x4000565	      0xbd04000000	                              mov ebp, 4	      1010	vsprintf.c	FUNCTION_26	SWITCH_1
0x400056a	        0x410f94c3	                               sete r11b	      1010	vsprintf.c	FUNCTION_26	SWITCH_1
0x400056e	          0x4963c4	                        movsxd rax, r12d	      1016	vsprintf.c	FUNCTION_26	FOR_1	CALL_2
0x4000571	          0x4c89cf	                             mov rdi, r9	      1016	vsprintf.c	FUNCTION_26	FOR_1	CALL_2
0x4000574	      0x410fb63402	             movzx esi, byte [r10 + rax]	      1016	vsprintf.c	FUNCTION_26	FOR_1	CALL_2
0x4000579	      0xe8f2faffff	                 call sym.put_dec_trunc8	      1016	vsprintf.c	FUNCTION_26	FOR_1	CALL_2
0x400057e	          0x4c29c8	                             sub rax, r9	      1016	vsprintf.c	FUNCTION_26	FOR_1	CALL_2
0x4000581	          0x83f802	                              cmp eax, 2	      1018	vsprintf.c	FUNCTION_26	FOR_1	IF_1	IF_2
0x4000584	            0x7f17	                            jg 0x400059d	      1018	vsprintf.c	FUNCTION_26	FOR_1	IF_1	IF_2
0x4000586	          0x4584db	                         test r11b, r11b	      1018	vsprintf.c	FUNCTION_26	FOR_1	IF_1	IF_2
0x4000589	            0x7412	                            je 0x400059d	      1018	vsprintf.c	FUNCTION_26	FOR_1	IF_1	IF_2
0x400058b	          0x83f802	                              cmp eax, 2	      1020	vsprintf.c	FUNCTION_26	FOR_1	IF_1	IF_3
0x400058e	        0x41c60030	                     mov byte [r8], 0x30	      1019	vsprintf.c	FUNCTION_26	FOR_1	IF_1	IF_2
0x4000592	            0x7476	                            je 0x400060a	      1020	vsprintf.c	FUNCTION_26	FOR_1	IF_1	IF_3
0x4000594	      0x41c6400130	                 mov byte [r8 + 1], 0x30	      1021	vsprintf.c	FUNCTION_26	FOR_1	IF_1	IF_3
0x4000599	        0x4983c002	                               add r8, 2	      1021	vsprintf.c	FUNCTION_26	FOR_1	IF_1	IF_3
0x400059d	            0x85c0	                           test eax, eax	      1024	vsprintf.c	FUNCTION_26	FOR_1	WHILE_1
0x400059f	          0x8d70ff	                      lea esi, [rax - 1]	      1024	vsprintf.c	FUNCTION_26	FOR_1	WHILE_1
0x40005a2	            0x7451	                            je 0x40005f5	      1024	vsprintf.c	FUNCTION_26	FOR_1	WHILE_1
0x40005a4	          0x4c89c2	                             mov rdx, r8	      1024	vsprintf.c	FUNCTION_26	FOR_1	WHILE_1
0x40005a7	            0x89f0	                            mov eax, esi	      1024	vsprintf.c	FUNCTION_26	FOR_1	WHILE_1
0x40005a9	          0x4863c8	                         movsxd rcx, eax	      1025	vsprintf.c	FUNCTION_26	FOR_1	WHILE_1
0x40005ac	          0x83e801	                              sub eax, 1	      1024	vsprintf.c	FUNCTION_26	FOR_1	WHILE_1
0x40005af	        0x4883c201	                              add rdx, 1	      1024	vsprintf.c	FUNCTION_26	FOR_1	WHILE_1
0x40005b3	       0xfb64c0c04	        movzx ecx, byte [rsp + rcx + 4] 	      1025	vsprintf.c	FUNCTION_26	FOR_1	WHILE_1
0x40005b8	          0x884aff	                  mov byte [rdx - 1], cl	      1025	vsprintf.c	FUNCTION_26	FOR_1	WHILE_1
0x40005bb	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1024	vsprintf.c	FUNCTION_26	FOR_1	WHILE_1
0x40005be	            0x75e9	                           jne 0x40005a9	      1024	vsprintf.c	FUNCTION_26	FOR_1	WHILE_1
0x40005c0	      0x498d443001	                 lea rax, [r8 + rsi + 1]	      1024	vsprintf.c	FUNCTION_26	FOR_1	WHILE_1
0x40005c5	          0x83fd01	                              cmp ebp, 1	      1026	vsprintf.c	FUNCTION_26	FOR_1	IF_4
0x40005c8	            0x740f	                            je 0x40005d9	      1026	vsprintf.c	FUNCTION_26	FOR_1	IF_4
0x40005ca	        0x4c8d4001	                       lea r8, [rax + 1]	      1027	vsprintf.c	FUNCTION_26	FOR_1	IF_4
0x40005ce	          0xc6002e	                    mov byte [rax], 0x2e	      1027	vsprintf.c	FUNCTION_26	FOR_1	IF_4
0x40005d1	          0x4101dc	                           add r12d, ebx	      1028	vsprintf.c	FUNCTION_26	FOR_1
0x40005d4	          0x83ed01	                              sub ebp, 1	      1028	vsprintf.c	FUNCTION_26	FOR_1
0x40005d7	            0xeb95	                           jmp 0x400056e	      1028	vsprintf.c	FUNCTION_26	FOR_1
0x40005d9	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      1033	vsprintf.c	FUNCTION_26
0x40005de	    0x6548331c2528	                xor rbx, qword gs:[0x28]	      1033	vsprintf.c	FUNCTION_26
0x40005e7	          0xc60000	                       mov byte [rax], 0	      1030	vsprintf.c	FUNCTION_26
0x40005ea	            0x7524	                           jne 0x4000610	      1033	vsprintf.c	FUNCTION_26
0x40005ec	        0x4883c410	                           add rsp, 0x10	      1033	vsprintf.c	FUNCTION_26
0x40005f0	              0x5b	                                 pop rbx	      1033	vsprintf.c	FUNCTION_26
0x40005f1	              0x5d	                                 pop rbp	      1033	vsprintf.c	FUNCTION_26
0x40005f2	            0x415c	                                 pop r12	      1033	vsprintf.c	FUNCTION_26
0x40005f4	              0xc3	                                     ret	      1033	vsprintf.c	FUNCTION_26
0x40005f5	          0x4c89c0	                             mov rax, r8	      1024	vsprintf.c	FUNCTION_26	FOR_1	WHILE_1
0x40005f8	            0xebcb	                           jmp 0x40005c5	      1024	vsprintf.c	FUNCTION_26	FOR_1	WHILE_1
0x40005fa	      0xbbffffffff	                     mov ebx, 0xffffffff	      1000	vsprintf.c	FUNCTION_26	SWITCH_1
0x40005ff	    0x41bc03000000	                             mov r12d, 3	       999	vsprintf.c	FUNCTION_26	SWITCH_1
0x4000605	      0xe953ffffff	                           jmp 0x400055d	       999	vsprintf.c	FUNCTION_26	SWITCH_1
0x400060a	        0x4983c001	                               add r8, 1	      1019	vsprintf.c	FUNCTION_26	FOR_1	IF_1	IF_2
0x400060e	            0xeb8d	                           jmp 0x400059d	      1019	vsprintf.c	FUNCTION_26	FOR_1	IF_1	IF_2
0x4000610	      0xe800000000	                          call 0x4000615	      1033	vsprintf.c	FUNCTION_26
bstr_printf	IF,15:WHILE,4:functions,0:CALL,27:SWITCH,3:DO,0:ELSE,1:FOR,0	267
0x4003910	            0x4157	                                push r15	      2688	vsprintf.c	FUNCTION_60
0x4003912	            0x4156	                                push r14	      2688	vsprintf.c	FUNCTION_60
0x4003914	            0x4155	                                push r13	      2688	vsprintf.c	FUNCTION_60
0x4003916	            0x4154	                                push r12	      2688	vsprintf.c	FUNCTION_60
0x4003918	              0x55	                                push rbp	      2688	vsprintf.c	FUNCTION_60
0x4003919	              0x53	                                push rbx	      2688	vsprintf.c	FUNCTION_60
0x400391a	        0x4883ec28	                           sub rsp, 0x28	      2688	vsprintf.c	FUNCTION_60
0x400391e	    0x65488b042528	                mov rax, qword gs:[0x28]	      2688	vsprintf.c	FUNCTION_60
0x4003927	      0x4889442420	             mov qword [rsp + 0x20], rax	      2688	vsprintf.c	FUNCTION_60
0x400392c	            0x31c0	                            xor eax, eax	      2688	vsprintf.c	FUNCTION_60
0x400392e	    0x4881feffffff	                     cmp rsi, 0x7fffffff	      2693	vsprintf.c	FUNCTION_60	IF_1	CALL_1
0x4003935	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2689	vsprintf.c	FUNCTION_60
0x400393e	     0xf87b1030000	                            ja 0x4003cf5	      2693	vsprintf.c	FUNCTION_60	IF_1	CALL_1
0x4003944	          0x4889fb	                            mov rbx, rdi	      2715	vsprintf.c	FUNCTION_60	IF_2
0x4003947	          0x4989fe	                            mov r14, rdi	      2715	vsprintf.c	FUNCTION_60	IF_2
0x400394a	          0x4989f4	                            mov r12, rsi	      2715	vsprintf.c	FUNCTION_60	IF_2
0x400394d	          0x4801f3	                            add rbx, rsi	      2715	vsprintf.c	FUNCTION_60	IF_2
0x4003950	          0x4989d7	                            mov r15, rdx	      2715	vsprintf.c	FUNCTION_60	IF_2
0x4003953	          0x4889cd	                            mov rbp, rcx	      2715	vsprintf.c	FUNCTION_60	IF_2
0x4003956	        0x48893c24	                    mov qword [rsp], rdi	      2717	vsprintf.c	FUNCTION_60	IF_2
0x400395a	     0xf8240020000	                            jb 0x4003ba0	      2715	vsprintf.c	FUNCTION_60	IF_2
0x4003960	        0x410fb607	                   movzx eax, byte [r15]	      2715	vsprintf.c	FUNCTION_60	IF_2
0x4003964	            0x84c0	                             test al, al	      2720	vsprintf.c	FUNCTION_60	WHILE_1
0x4003966	            0x742f	                            je 0x4003997	      2720	vsprintf.c	FUNCTION_60	WHILE_1
0x4003968	      0x488d742418	                   lea rsi, [rsp + 0x18]	      2722	vsprintf.c	FUNCTION_60	WHILE_1	CALL_2
0x400396d	          0x4c89ff	                            mov rdi, r15	      2722	vsprintf.c	FUNCTION_60	WHILE_1	CALL_2
0x4003970	      0xe84bcfffff	                  call sym.format_decode	      2722	vsprintf.c	FUNCTION_60	WHILE_1	CALL_2
0x4003975	       0xfb6542418	           movzx edx, byte [rsp + 0x18] 	      2726	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1
0x400397a	          0x4863c8	                         movsxd rcx, eax	      2724	vsprintf.c	FUNCTION_60	WHILE_1
0x400397d	        0x4d8d2c0f	                    lea r13, [r15 + rcx]	      2724	vsprintf.c	FUNCTION_60	WHILE_1
0x4003981	          0x80fa07	                               cmp dl, 7	      2726	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1
0x4003984	     0xf87ea010000	                            ja 0x4003b74	      2726	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1
0x400398a	    0x488b04d50000	                  mov rax, qword [rdx*8]	      2726	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1
0x4003992	      0xe900000000	                           jmp 0x4003997	      2726	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1
0x4003997	          0x4d85e4	                           test r12, r12	      2863	vsprintf.c	FUNCTION_60	IF_14
0x400399a	     0xf8512020000	                           jne 0x4003bb2	      2863	vsprintf.c	FUNCTION_60	IF_14
0x40039a0	          0x4489f0	                           mov eax, r14d	      2873	vsprintf.c	FUNCTION_60
0x40039a3	          0x2b0424	                    sub eax, dword [rsp]	      2873	vsprintf.c	FUNCTION_60
0x40039a6	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2874	vsprintf.c	FUNCTION_60
0x40039ab	    0x6548333c2528	                xor rdi, qword gs:[0x28]	      2874	vsprintf.c	FUNCTION_60
0x40039b4	     0xf854a030000	                           jne 0x4003d04	      2874	vsprintf.c	FUNCTION_60
0x40039ba	        0x4883c428	                           add rsp, 0x28	      2874	vsprintf.c	FUNCTION_60
0x40039be	              0x5b	                                 pop rbx	      2874	vsprintf.c	FUNCTION_60
0x40039bf	              0x5d	                                 pop rbp	      2874	vsprintf.c	FUNCTION_60
0x40039c0	            0x415c	                                 pop r12	      2874	vsprintf.c	FUNCTION_60
0x40039c2	            0x415d	                                 pop r13	      2874	vsprintf.c	FUNCTION_60
0x40039c4	            0x415e	                                 pop r14	      2874	vsprintf.c	FUNCTION_60
0x40039c6	            0x415f	                                 pop r15	      2874	vsprintf.c	FUNCTION_60
0x40039c8	              0xc3	                                     ret	      2874	vsprintf.c	FUNCTION_60
0x40039c9	          0x4939de	                            cmp r14, rbx	      2812	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_13
0x40039cc	            0x7304	                           jae 0x40039d2	      2812	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_13
0x40039ce	        0x41c60625	                    mov byte [r14], 0x25	      2813	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_13
0x40039d2	        0x4983c601	                              add r14, 1	      2814	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1
0x40039d6	      0x410fb64500	                   movzx eax, byte [r13]	      2814	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1
0x40039db	          0x4d89ef	                            mov r15, r13	      2724	vsprintf.c	FUNCTION_60	WHILE_1
0x40039de	            0xeb84	                           jmp 0x4003964	      2815	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1
0x40039e0	        0x488d4503	                      lea rax, [rbp + 3]	      2743	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_7
0x40039e4	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      2743	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_7
0x40039e9	          0x4d89ef	                            mov r15, r13	      2724	vsprintf.c	FUNCTION_60	WHILE_1
0x40039ec	        0x4883e0fc	             and rax, 0xfffffffffffffffc	      2743	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_7
0x40039f0	            0x8b30	                    mov esi, dword [rax]	      2743	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_7
0x40039f2	        0x488d6804	                      lea rbp, [rax + 4]	      2743	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_7
0x40039f6	      0xe865ceffff	                  call sym.set_precision	      2743	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_7
0x40039fb	      0x410fb64500	                   movzx eax, byte [r13]	      2743	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_7
0x4003a00	      0xe95fffffff	                           jmp 0x4003964	      2744	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1
0x4003a05	          0x4889ef	                            mov rdi, rbp	      2770	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_9
0x4003a08	      0xe800000000	                          call 0x4003a0d	      2770	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_9
0x4003a0d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2771	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_10
0x4003a12	      0x4c8d7c0501	                lea r15, [rbp + rax + 1]	      2770	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_9
0x4003a17	          0x4889ea	                            mov rdx, rbp	      2771	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_10
0x4003a1a	          0x4c89f7	                            mov rdi, r14	      2771	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_10
0x4003a1d	          0x4889de	                            mov rsi, rbx	      2771	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_10
0x4003a20	          0x4c89fd	                            mov rbp, r15	      2770	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_9
0x4003a23	          0x4d89ef	                            mov r15, r13	      2724	vsprintf.c	FUNCTION_60	WHILE_1
0x4003a26	      0xe8f5d2ffff	                         call sym.string	      2771	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_10
0x4003a2b	          0x4989c6	                            mov r14, rax	      2771	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_10
0x4003a2e	      0x410fb64500	                   movzx eax, byte [r13]	      2771	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_10
0x4003a33	      0xe92cffffff	                           jmp 0x4003964	      2772	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1
0x4003a38	      0xf644241c02	               test byte [rsp + 0x1c], 2	      2749	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_5
0x4003a3d	            0x744f	                            je 0x4003a8e	      2749	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_5
0x4003a3f	          0x4939de	                            cmp r14, rbx	      2757	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_7
0x4003a42	        0x488d7501	                      lea rsi, [rbp + 1]	      2756	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_8
0x4003a46	     0xf8278010000	                            jb 0x4003bc4	      2757	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_7
0x4003a4c	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      2760	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_3
0x4003a50	        0x4983c601	                              add r14, 1	      2763	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_3
0x4003a54	            0x89d0	                            mov eax, edx	      2760	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_3
0x4003a56	           0xfb6d2	                           movzx edx, dl	      2760	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_3
0x4003a59	            0x30c0	                              xor al, al	      2760	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_3
0x4003a5b	      0x2d00010000	                          sub eax, 0x100	      2760	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_3
0x4003a60	          0xc1f808	                              sar eax, 8	      2760	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_3
0x4003a63	            0x89c1	                            mov ecx, eax	      2760	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_3
0x4003a65	          0xc1e108	                              shl ecx, 8	      2760	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_3
0x4003a68	             0x9ca	                             or edx, ecx	      2760	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_3
0x4003a6a	            0x85c0	                           test eax, eax	      2760	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_3
0x4003a6c	        0x89542418	             mov dword [rsp + 0x18], edx	      2760	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_3
0x4003a70	     0xf8e1a010000	                           jle 0x4003b90	      2760	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_3
0x4003a76	          0x4c39f3	                            cmp rbx, r14	      2761	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_3	IF_8
0x4003a79	            0x76d1	                           jbe 0x4003a4c	      2761	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_3	IF_8
0x4003a7b	        0x41c60620	                    mov byte [r14], 0x20	      2762	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_3	IF_8
0x4003a7f	            0xebcb	                           jmp 0x4003a4c	      2762	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_3	IF_8
0x4003a81	          0x4939de	                            cmp r14, rbx	      2751	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_5	WHILE_2	IF_6
0x4003a84	            0x7304	                           jae 0x4003a8a	      2751	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_5	WHILE_2	IF_6
0x4003a86	        0x41c60620	                    mov byte [r14], 0x20	      2752	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_5	WHILE_2	IF_6
0x4003a8a	        0x4983c601	                              add r14, 1	      2753	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_5	WHILE_2
0x4003a8e	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      2750	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_5	WHILE_2
0x4003a92	            0x89d0	                            mov eax, edx	      2750	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_5	WHILE_2
0x4003a94	           0xfb6d2	                           movzx edx, dl	      2750	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_5	WHILE_2
0x4003a97	            0x30c0	                              xor al, al	      2750	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_5	WHILE_2
0x4003a99	      0x2d00010000	                          sub eax, 0x100	      2750	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_5	WHILE_2
0x4003a9e	          0xc1f808	                              sar eax, 8	      2750	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_5	WHILE_2
0x4003aa1	            0x89c1	                            mov ecx, eax	      2750	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_5	WHILE_2
0x4003aa3	          0xc1e108	                              shl ecx, 8	      2750	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_5	WHILE_2
0x4003aa6	             0x9ca	                             or edx, ecx	      2750	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_5	WHILE_2
0x4003aa8	            0x85c0	                           test eax, eax	      2750	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_5	WHILE_2
0x4003aaa	        0x89542418	             mov dword [rsp + 0x18], edx	      2750	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_5	WHILE_2
0x4003aae	            0x7fd1	                            jg 0x4003a81	      2750	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_5	WHILE_2
0x4003ab0	          0x4939de	                            cmp r14, rbx	      2757	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_7
0x4003ab3	        0x488d7501	                      lea rsi, [rbp + 1]	      2756	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_8
0x4003ab7	            0x7393	                           jae 0x4003a4c	      2757	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_7
0x4003ab9	      0xe906010000	                           jmp 0x4003bc4	      2757	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_7
0x4003abe	      0x410fb64500	                   movzx eax, byte [r13]	      2757	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_7
0x4003ac3	          0x8d48ba	                   lea ecx, [rax - 0x46]	      2757	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_7
0x4003ac6	          0x80f932	                            cmp cl, 0x32	      2757	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_7
0x4003ac9	     0xf8601010000	                           jbe 0x4003bd0	      2757	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_7
0x4003acf	    0xf68000000000	                      test byte [rax], 7	      2789	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_2	IF_9	CALL_11
0x4003ad6	     0xf840f010000	                            je 0x4003beb	      2789	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_2	IF_9	CALL_11
0x4003adc	          0x4939de	                            cmp r14, rbx	      2794	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_2	IF_10
0x4003adf	     0xf8350010000	                           jae 0x4003c35	      2794	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_2	IF_10
0x4003ae5	          0x4889ef	                            mov rdi, rbp	      2795	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_2	IF_10	CALL_12
0x4003ae8	      0xe800000000	                          call 0x4003aed	      2795	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_2	IF_10	CALL_12
0x4003aed	          0x4889da	                            mov rdx, rbx	      2796	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_2	IF_10	IF_11
0x4003af0	          0x4c63f8	                         movsxd r15, eax	      2796	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_2	IF_10	IF_11
0x4003af3	          0x4889ee	                            mov rsi, rbp	      2798	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_2	IF_10	CALL_13
0x4003af6	          0x4c29f2	                            sub rdx, r14	      2796	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_2	IF_10	IF_11
0x4003af9	          0x4c89f7	                            mov rdi, r14	      2798	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_2	IF_10	CALL_13
0x4003afc	          0x4939d7	                            cmp r15, rdx	      2797	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_2	IF_10	IF_11
0x4003aff	           0xf4fc2	                          cmovg eax, edx	      2797	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_2	IF_10	IF_11
0x4003b02	          0x4d01fe	                            add r14, r15	      2799	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_2	IF_10
0x4003b05	          0x4c01fd	                            add rbp, r15	      2800	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_2	IF_10
0x4003b08	          0x4863d0	                         movsxd rdx, eax	      2798	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_2	IF_10	CALL_13
0x4003b0b	      0xe800000000	                          call 0x4003b10	      2798	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_2	IF_10	CALL_13
0x4003b10	      0xe90b010000	                           jmp 0x4003c20	      2798	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_2	IF_10	CALL_13
0x4003b15	          0x4939de	                            cmp r14, rbx	      2729	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_3
0x4003b18	            0x7325	                           jae 0x4003b3f	      2729	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_3
0x4003b1a	          0x4889d8	                            mov rax, rbx	      2730	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_3	IF_4
0x4003b1d	          0x4c89fe	                            mov rsi, r15	      2732	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_3	CALL_3
0x4003b20	          0x4c89f7	                            mov rdi, r14	      2732	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_3	CALL_3
0x4003b23	          0x4c29f0	                            sub rax, r14	      2730	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_3	IF_4
0x4003b26	      0x48894c2408	                mov qword [rsp + 8], rcx	      2730	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_3	IF_4
0x4003b2b	          0x4839c1	                            cmp rcx, rax	      2730	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_3	IF_4
0x4003b2e	          0x4863d0	                         movsxd rdx, eax	      2730	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_3	IF_4
0x4003b31	        0x480f4ed1	                         cmovle rdx, rcx	      2730	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_3	IF_4
0x4003b35	      0xe800000000	                          call 0x4003b3a	      2732	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_3	CALL_3
0x4003b3a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2732	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_3	CALL_3
0x4003b3f	          0x4901ce	                            add r14, rcx	      2734	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1
0x4003b42	      0x410fb64500	                   movzx eax, byte [r13]	      2734	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1
0x4003b47	          0x4d89ef	                            mov r15, r13	      2724	vsprintf.c	FUNCTION_60	WHILE_1
0x4003b4a	      0xe915feffff	                           jmp 0x4003964	      2735	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1
0x4003b4f	        0x488d4503	                      lea rax, [rbp + 3]	      2739	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_5
0x4003b53	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      2739	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_5
0x4003b58	          0x4d89ef	                            mov r15, r13	      2724	vsprintf.c	FUNCTION_60	WHILE_1
0x4003b5b	        0x4883e0fc	             and rax, 0xfffffffffffffffc	      2739	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_5
0x4003b5f	            0x8b30	                    mov esi, dword [rax]	      2739	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_5
0x4003b61	        0x488d6804	                      lea rbp, [rax + 4]	      2739	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_5
0x4003b65	      0xe876ccffff	                call sym.set_field_width	      2739	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_5
0x4003b6a	      0x410fb64500	                   movzx eax, byte [r13]	      2739	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_5
0x4003b6f	      0xe9f0fdffff	                           jmp 0x4003964	      2740	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1
0x4003b74	          0x83ea08	                              sub edx, 8	      2823	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3
0x4003b77	          0x80fa0a	                             cmp dl, 0xa	      2823	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3
0x4003b7a	     0xf8761010000	                            ja 0x4003ce1	      2823	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3
0x4003b80	           0xfb6d2	                           movzx edx, dl	      2823	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3
0x4003b83	    0x488b04d50000	                  mov rax, qword [rdx*8]	      2823	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3
0x4003b8b	      0xe900000000	                           jmp 0x4003b90	      2823	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3
0x4003b90	      0x410fb64500	                   movzx eax, byte [r13]	      2823	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3
0x4003b95	          0x4889f5	                            mov rbp, rsi	      2756	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_8
0x4003b98	          0x4d89ef	                            mov r15, r13	      2724	vsprintf.c	FUNCTION_60	WHILE_1
0x4003b9b	      0xe9c4fdffff	                           jmp 0x4003964	      2724	vsprintf.c	FUNCTION_60	WHILE_1
0x4003ba0	          0x4989fc	                            mov r12, rdi	      2717	vsprintf.c	FUNCTION_60	IF_2
0x4003ba3	    0x48c7c3ffffff	             mov rbx, 0xffffffffffffffff	      2716	vsprintf.c	FUNCTION_60	IF_2
0x4003baa	          0x49f7d4	                                 not r12	      2717	vsprintf.c	FUNCTION_60	IF_2
0x4003bad	      0xe9aefdffff	                           jmp 0x4003960	      2717	vsprintf.c	FUNCTION_60	IF_2
0x4003bb2	          0x4939de	                            cmp r14, rbx	      2864	vsprintf.c	FUNCTION_60	IF_14	IF_15
0x4003bb5	     0xf83d5000000	                           jae 0x4003c90	      2864	vsprintf.c	FUNCTION_60	IF_14	IF_15
0x4003bbb	        0x41c60600	                       mov byte [r14], 0	      2865	vsprintf.c	FUNCTION_60	IF_14	IF_15
0x4003bbf	      0xe9dcfdffff	                           jmp 0x40039a0	      2865	vsprintf.c	FUNCTION_60	IF_14	IF_15
0x4003bc4	         0xfb64500	                   movzx eax, byte [rbp]	      2756	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_8
0x4003bc8	          0x418806	                      mov byte [r14], al	      2758	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_7
0x4003bcb	      0xe97cfeffff	                           jmp 0x4003a4c	      2758	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_7
0x4003bd0	      0xba01000000	                              mov edx, 1	      2758	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_7
0x4003bd5	    0x48bf21200000	             movabs rdi, 0x4200100002021	      2758	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_7
0x4003bdf	          0x48d3e2	                             shl rdx, cl	      2758	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_7
0x4003be2	          0x4885fa	                           test rdx, rdi	      2758	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_7
0x4003be5	     0xf84e4feffff	                            je 0x4003acf	      2758	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	IF_7
0x4003beb	        0x4883c503	                              add rbp, 3	      2804	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_15
0x4003bef	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      2804	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_15
0x4003bf4	          0x4c89f6	                            mov rsi, r14	      2804	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_15
0x4003bf7	        0x4883e5fc	             and rbp, 0xfffffffffffffffc	      2804	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_15
0x4003bfb	          0x4889da	                            mov rdx, rbx	      2804	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_15
0x4003bfe	          0x4c89ef	                            mov rdi, r13	      2804	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_15
0x4003c01	          0x8b4500	                    mov eax, dword [rbp]	      2804	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_15
0x4003c04	        0x4883c508	                              add rbp, 8	      2804	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_15
0x4003c08	        0x89442410	             mov dword [rsp + 0x10], eax	      2804	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_15
0x4003c0c	          0x8b45fc	                mov eax, dword [rbp - 4]	      2804	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_15
0x4003c0f	        0x89442414	             mov dword [rsp + 0x14], eax	      2804	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_15
0x4003c13	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      2804	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_15
0x4003c18	      0xe833eeffff	                        call sym.pointer	      2804	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_15
0x4003c1d	          0x4989c6	                            mov r14, rax	      2804	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_15
0x4003c20	      0x410fb65500	                   movzx edx, byte [r13]	      2806	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_4	CALL_16
0x4003c25	    0xf68200000000	                      test byte [rdx], 7	      2806	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_4	CALL_16
0x4003c2c	          0x4889d0	                            mov rax, rdx	      2806	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_4	CALL_16
0x4003c2f	     0xf84c7000000	                            je 0x4003cfc	      2806	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_4	CALL_16
0x4003c35	          0x4d89ef	                            mov r15, r13	      2795	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_2	IF_10	CALL_12
0x4003c38	        0x4983c701	                              add r15, 1	      2807	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_4
0x4003c3c	        0x410fb617	                   movzx edx, byte [r15]	      2806	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_4	CALL_16
0x4003c40	    0xf68200000000	                      test byte [rdx], 7	      2806	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_4	CALL_16
0x4003c47	          0x4889d0	                            mov rax, rdx	      2806	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_4	CALL_16
0x4003c4a	            0x75ec	                           jne 0x4003c38	      2806	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_4	CALL_16
0x4003c4c	      0xe913fdffff	                           jmp 0x4003964	      2806	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_4	CALL_16
0x4003c51	        0x4883c503	                              add rbp, 3	      2836	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x4003c55	        0x4883e5fc	             and rbp, 0xfffffffffffffffc	      2836	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x4003c59	          0x8b4500	                    mov eax, dword [rbp]	      2836	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x4003c5c	        0x4883c508	                              add rbp, 8	      2836	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x4003c60	        0x89442410	             mov dword [rsp + 0x10], eax	      2836	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x4003c64	          0x8b45fc	                mov eax, dword [rbp - 4]	      2836	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x4003c67	        0x89442414	             mov dword [rsp + 0x14], eax	      2836	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x4003c6b	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2836	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_20
0x4003c70	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2857	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_27
0x4003c75	          0x4c89f7	                            mov rdi, r14	      2857	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_27
0x4003c78	          0x4889de	                            mov rsi, rbx	      2857	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_27
0x4003c7b	          0x4d89ef	                            mov r15, r13	      2724	vsprintf.c	FUNCTION_60	WHILE_1
0x4003c7e	      0xe88dc5ffff	                         call sym.number	      2857	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_27
0x4003c83	          0x4989c6	                            mov r14, rax	      2857	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_27
0x4003c86	      0x410fb64500	                   movzx eax, byte [r13]	      2857	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_27
0x4003c8b	      0xe9d4fcffff	                           jmp 0x4003964	      2857	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	CALL_27
0x4003c90	        0xc643ff00	                   mov byte [rbx - 1], 0	      2867	vsprintf.c	FUNCTION_60	IF_14	ELSE_1
0x4003c94	      0xe907fdffff	                           jmp 0x40039a0	      2867	vsprintf.c	FUNCTION_60	IF_14	ELSE_1
0x4003c99	        0x488d4501	                      lea rax, [rbp + 1]	      2845	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_23
0x4003c9d	        0x4883e0fe	             and rax, 0xfffffffffffffffe	      2845	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_23
0x4003ca1	        0x488d6802	                      lea rbp, [rax + 2]	      2845	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_23
0x4003ca5	           0xfb710	                   movzx edx, word [rax]	      2845	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_23
0x4003ca8	            0xebc6	                           jmp 0x4003c70	      2846	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3
0x4003caa	        0x488d4501	                      lea rax, [rbp + 1]	      2848	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_24
0x4003cae	        0x4883e0fe	             and rax, 0xfffffffffffffffe	      2848	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_24
0x4003cb2	        0x488d6802	                      lea rbp, [rax + 2]	      2848	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_24
0x4003cb6	        0x480fbf10	                   movsx rdx, word [rax]	      2848	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_24
0x4003cba	            0xebb4	                           jmp 0x4003c70	      2849	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3
0x4003cbc	        0x488d4503	                      lea rax, [rbp + 3]	      2851	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_25
0x4003cc0	        0x4883e0fc	             and rax, 0xfffffffffffffffc	      2851	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_25
0x4003cc4	        0x488d6804	                      lea rbp, [rax + 4]	      2851	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_25
0x4003cc8	            0x8b10	                    mov edx, dword [rax]	      2851	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_25
0x4003cca	            0xeba4	                           jmp 0x4003c70	      2852	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3
0x4003ccc	         0xfb65500	                   movzx edx, byte [rbp]	      2839	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_21
0x4003cd0	        0x4883c501	                              add rbp, 1	      2839	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_21
0x4003cd4	            0xeb9a	                           jmp 0x4003c70	      2840	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3
0x4003cd6	      0x480fbe5500	                   movsx rdx, byte [rbp]	      2842	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_22
0x4003cdb	        0x4883c501	                              add rbp, 1	      2842	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_22
0x4003cdf	            0xeb8f	                           jmp 0x4003c70	      2843	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3
0x4003ce1	        0x488d4503	                      lea rax, [rbp + 3]	      2854	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_26
0x4003ce5	        0x4883e0fc	             and rax, 0xfffffffffffffffc	      2854	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_26
0x4003ce9	        0x488d6804	                      lea rbp, [rax + 4]	      2854	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_26
0x4003ced	          0x486310	                 movsxd rdx, dword [rax]	      2854	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_26
0x4003cf0	      0xe97bffffff	                           jmp 0x4003c70	      2854	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_26
0x4003cf5	             0xf0b	                                     ud2	      2854	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	SWITCH_3	CALL_26
0x4003cf7	      0xe9aafcffff	                           jmp 0x40039a6	      2693	vsprintf.c	FUNCTION_60	IF_1	CALL_1
0x4003cfc	          0x4d89ef	                            mov r15, r13	      2806	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_4	CALL_16
0x4003cff	      0xe960fcffff	                           jmp 0x4003964	      2806	vsprintf.c	FUNCTION_60	WHILE_1	SWITCH_1	WHILE_4	CALL_16
0x4003d04	      0xe800000000	                          call 0x4003d09	      2874	vsprintf.c	FUNCTION_60
address_val	IF,0:WHILE,0:functions,0:CALL,1:SWITCH,1:DO,0:ELSE,0:FOR,0	2
0x4002a30	          0x488b12	                    mov rdx, qword [rdx]	      1438	vsprintf.c	FUNCTION_37	SWITCH_1
0x4002a33	            0xebdb	 jmp sym.special_hex_number.constprop.10	      1448	vsprintf.c	FUNCTION_37	CALL_1
put_dec_full8	IF,0:WHILE,0:functions,0:CALL,0:SWITCH,0:DO,0:ELSE,0:FOR,0	23
0x4000110	            0x89f2	                            mov edx, esi	       229	vsprintf.c	FUNCTION_7
0x4000112	    0x4869d2295c8f	                imul rdx, rdx, 0x28f5c29	       229	vsprintf.c	FUNCTION_7
0x4000119	        0x48c1ea20	                           shr rdx, 0x20	       229	vsprintf.c	FUNCTION_7
0x400011d	          0x6bc264	                     imul eax, edx, 0x64	       230	vsprintf.c	FUNCTION_7
0x4000120	            0x29c6	                            sub esi, eax	       230	vsprintf.c	FUNCTION_7
0x4000122	     0xfb784360000	             movzx eax, word [rsi + rsi]	       230	vsprintf.c	FUNCTION_7
0x400012a	          0x668907	                      mov word [rdi], ax	       230	vsprintf.c	FUNCTION_7
0x400012d	    0x4869c2295c8f	                imul rax, rdx, 0x28f5c29	       234	vsprintf.c	FUNCTION_7
0x4000134	        0x48c1e820	                           shr rax, 0x20	       234	vsprintf.c	FUNCTION_7
0x4000138	          0x6bc864	                     imul ecx, eax, 0x64	       235	vsprintf.c	FUNCTION_7
0x400013b	            0x29ca	                            sub edx, ecx	       235	vsprintf.c	FUNCTION_7
0x400013d	     0xfb794120000	             movzx edx, word [rdx + rdx]	       235	vsprintf.c	FUNCTION_7
0x4000145	        0x66895702	                  mov word [rdi + 2], dx	       235	vsprintf.c	FUNCTION_7
0x4000149	    0x69d07b140000	                   imul edx, eax, 0x147b	       239	vsprintf.c	FUNCTION_7
0x400014f	          0xc1ea13	                           shr edx, 0x13	       239	vsprintf.c	FUNCTION_7
0x4000152	          0x6bca64	                     imul ecx, edx, 0x64	       240	vsprintf.c	FUNCTION_7
0x4000155	            0x29c8	                            sub eax, ecx	       240	vsprintf.c	FUNCTION_7
0x4000157	     0xfb784000000	             movzx eax, word [rax + rax]	       240	vsprintf.c	FUNCTION_7
0x400015f	        0x66894704	                  mov word [rdi + 4], ax	       240	vsprintf.c	FUNCTION_7
0x4000163	     0xfb784120000	             movzx eax, word [rdx + rdx]	       244	vsprintf.c	FUNCTION_7
0x400016b	        0x66894706	                  mov word [rdi + 6], ax	       244	vsprintf.c	FUNCTION_7
0x400016f	        0x488d4708	                      lea rax, [rdi + 8]	       245	vsprintf.c	FUNCTION_7
0x4000173	              0xc3	                                     ret	       247	vsprintf.c	FUNCTION_7
ip6_addr_string	IF,1:WHILE,0:functions,0:CALL,3:SWITCH,0:DO,0:ELSE,1:FOR,0	38
0x40015d0	            0x4155	                                push r13	      1137	vsprintf.c	FUNCTION_29
0x40015d2	            0x4154	                                push r12	      1137	vsprintf.c	FUNCTION_29
0x40015d4	          0x4989cd	                            mov r13, rcx	      1137	vsprintf.c	FUNCTION_29
0x40015d7	              0x55	                                push rbp	      1137	vsprintf.c	FUNCTION_29
0x40015d8	              0x53	                                push rbx	      1137	vsprintf.c	FUNCTION_29
0x40015d9	          0x4989f4	                            mov r12, rsi	      1137	vsprintf.c	FUNCTION_29
0x40015dc	          0x4889fd	                            mov rbp, rdi	      1137	vsprintf.c	FUNCTION_29
0x40015df	          0x4889d6	                            mov rsi, rdx	      1137	vsprintf.c	FUNCTION_29
0x40015e2	        0x4883ec38	                           sub rsp, 0x38	      1137	vsprintf.c	FUNCTION_29
0x40015e6	    0x65488b042528	                mov rax, qword gs:[0x28]	      1137	vsprintf.c	FUNCTION_29
0x40015ef	      0x4889442430	             mov qword [rsp + 0x30], rax	      1137	vsprintf.c	FUNCTION_29
0x40015f4	            0x31c0	                            xor eax, eax	      1137	vsprintf.c	FUNCTION_29
0x40015f6	        0x41803849	                     cmp byte [r8], 0x49	      1140	vsprintf.c	FUNCTION_29	IF_1
0x40015fa	      0x488d5c2402	                      lea rbx, [rsp + 2]	      1141	vsprintf.c	FUNCTION_29	CALL_1
0x40015ff	            0x7437	                            je 0x4001638	      1140	vsprintf.c	FUNCTION_29	IF_1
0x4001601	          0x4c89c2	                             mov rdx, r8	      1143	vsprintf.c	FUNCTION_29	CALL_2
0x4001604	          0x4889df	                            mov rdi, rbx	      1143	vsprintf.c	FUNCTION_29	CALL_2
0x4001607	      0xe814f0ffff	                     call sym.ip6_string	      1143	vsprintf.c	FUNCTION_29	CALL_2
0x400160c	          0x4c89e9	                            mov rcx, r13	      1145	vsprintf.c	FUNCTION_29	CALL_3
0x400160f	          0x4889da	                            mov rdx, rbx	      1145	vsprintf.c	FUNCTION_29	CALL_3
0x4001612	          0x4c89e6	                            mov rsi, r12	      1145	vsprintf.c	FUNCTION_29	CALL_3
0x4001615	          0x4889ef	                            mov rdi, rbp	      1145	vsprintf.c	FUNCTION_29	CALL_3
0x4001618	      0xe803f7ffff	                         call sym.string	      1145	vsprintf.c	FUNCTION_29	CALL_3
0x400161d	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      1146	vsprintf.c	FUNCTION_29
0x4001622	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      1146	vsprintf.c	FUNCTION_29
0x400162b	            0x751c	                           jne 0x4001649	      1146	vsprintf.c	FUNCTION_29
0x400162d	        0x4883c438	                           add rsp, 0x38	      1146	vsprintf.c	FUNCTION_29
0x4001631	              0x5b	                                 pop rbx	      1146	vsprintf.c	FUNCTION_29
0x4001632	              0x5d	                                 pop rbp	      1146	vsprintf.c	FUNCTION_29
0x4001633	            0x415c	                                 pop r12	      1146	vsprintf.c	FUNCTION_29
0x4001635	            0x415d	                                 pop r13	      1146	vsprintf.c	FUNCTION_29
0x4001637	              0xc3	                                     ret	      1146	vsprintf.c	FUNCTION_29
0x4001638	      0x4180780263	                 cmp byte [r8 + 2], 0x63	      1140	vsprintf.c	FUNCTION_29	IF_1
0x400163d	            0x75c2	                           jne 0x4001601	      1140	vsprintf.c	FUNCTION_29	IF_1
0x400163f	          0x4889df	                            mov rdi, rbx	      1141	vsprintf.c	FUNCTION_29	CALL_1
0x4001642	      0xe819fdffff	          call sym.ip6_compressed_string	      1141	vsprintf.c	FUNCTION_29	CALL_1
0x4001647	            0xebc3	                           jmp 0x400160c	      1141	vsprintf.c	FUNCTION_29	CALL_1
0x4001649	      0xe800000000	                          call 0x400164e	      1146	vsprintf.c	FUNCTION_29
simple_strtoull	IF,1:WHILE,0:functions,0:CALL,2:SWITCH,0:DO,0:ELSE,0:FOR,0	29
0x4000720	              0x55	                                push rbp	        59	vsprintf.c	FUNCTION_1
0x4000721	              0x53	                                push rbx	        59	vsprintf.c	FUNCTION_1
0x4000722	          0x4889f5	                            mov rbp, rsi	        59	vsprintf.c	FUNCTION_1
0x4000725	        0x4883ec18	                           sub rsp, 0x18	        59	vsprintf.c	FUNCTION_1
0x4000729	      0x488d742404	                      lea rsi, [rsp + 4]	        63	vsprintf.c	FUNCTION_1	CALL_1
0x400072e	        0x89542404	                mov dword [rsp + 4], edx	        59	vsprintf.c	FUNCTION_1
0x4000732	    0x65488b042528	                mov rax, qword gs:[0x28]	        59	vsprintf.c	FUNCTION_1
0x400073b	      0x4889442410	             mov qword [rsp + 0x10], rax	        59	vsprintf.c	FUNCTION_1
0x4000740	            0x31c0	                            xor eax, eax	        59	vsprintf.c	FUNCTION_1
0x4000742	      0xe800000000	                          call 0x4000747	        63	vsprintf.c	FUNCTION_1	CALL_1
0x4000747	        0x8b742404	                mov esi, dword [rsp + 4]	        64	vsprintf.c	FUNCTION_1	CALL_2
0x400074b	      0x488d542408	                      lea rdx, [rsp + 8]	        64	vsprintf.c	FUNCTION_1	CALL_2
0x4000750	          0x4889c7	                            mov rdi, rax	        64	vsprintf.c	FUNCTION_1	CALL_2
0x4000753	          0x4889c3	                            mov rbx, rax	        63	vsprintf.c	FUNCTION_1	CALL_1
0x4000756	      0xe800000000	                          call 0x400075b	        64	vsprintf.c	FUNCTION_1	CALL_2
0x400075b	      0x25ffffff7f	                     and eax, 0x7fffffff	        66	vsprintf.c	FUNCTION_1
0x4000760	          0x4801d8	                            add rax, rbx	        66	vsprintf.c	FUNCTION_1
0x4000763	          0x4885ed	                           test rbp, rbp	        68	vsprintf.c	FUNCTION_1	IF_1
0x4000766	            0x7404	                            je 0x400076c	        68	vsprintf.c	FUNCTION_1	IF_1
0x4000768	        0x48894500	                    mov qword [rbp], rax	        69	vsprintf.c	FUNCTION_1	IF_1
0x400076c	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	        72	vsprintf.c	FUNCTION_1
0x4000771	    0x6548330c2528	                xor rcx, qword gs:[0x28]	        72	vsprintf.c	FUNCTION_1
0x400077a	      0x488b442408	                mov rax, qword [rsp + 8]	        72	vsprintf.c	FUNCTION_1
0x400077f	            0x7507	                           jne 0x4000788	        72	vsprintf.c	FUNCTION_1
0x4000781	        0x4883c418	                           add rsp, 0x18	        72	vsprintf.c	FUNCTION_1
0x4000785	              0x5b	                                 pop rbx	        72	vsprintf.c	FUNCTION_1
0x4000786	              0x5d	                                 pop rbp	        72	vsprintf.c	FUNCTION_1
0x4000787	              0xc3	                                     ret	        72	vsprintf.c	FUNCTION_1
0x4000788	      0xe800000000	                          call 0x400078d	        72	vsprintf.c	FUNCTION_1
