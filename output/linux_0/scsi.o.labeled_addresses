starget_for_each_device	IF,0:ELSE,0:SWITCH,0:functions,1:DO,0:WHILE,0:CALL,1:FOR,0	53
0x4001150	            0x4155	                                push r13	       620	scsi.c	FUNCTION_17
0x4001152	            0x4154	                                push r12	       620	scsi.c	FUNCTION_17
0x4001154	          0x4989d5	                            mov r13, rdx	       620	scsi.c	FUNCTION_17
0x4001157	              0x55	                                push rbp	       620	scsi.c	FUNCTION_17
0x4001158	              0x53	                                push rbx	       620	scsi.c	FUNCTION_17
0x4001159	          0x4889fd	                            mov rbp, rdi	       620	scsi.c	FUNCTION_17
0x400115c	          0x4989f4	                            mov r12, rsi	       620	scsi.c	FUNCTION_17
0x400115f	        0x4883ec08	                              sub rsp, 8	       620	scsi.c	FUNCTION_17
0x4001163	        0x488b5f28	            mov rbx, qword [rdi + 0x28] 	       621	scsi.c	FUNCTION_17	CALL_1
0x4001167	            0xeb08	                           jmp 0x4001171	       621	scsi.c	FUNCTION_17	CALL_1
0x4001169	          0x488b1b	                    mov rbx, qword [rbx]	       730	scsi_host.h	FUNCTION_54	WHILE_1	IF_1
0x400116c	          0x4885db	                           test rbx, rbx	       730	scsi_host.h	FUNCTION_54	WHILE_1	IF_1
0x400116f	            0x747e	                            je 0x40011ef	       730	scsi_host.h	FUNCTION_54	WHILE_1	IF_1
0x4001171	          0x4889df	                            mov rdi, rbx	       729	scsi_host.h	FUNCTION_54	WHILE_1	CALL_1
0x4001174	      0xe800000000	                          call 0x4001179	       729	scsi_host.h	FUNCTION_54	WHILE_1	CALL_1
0x4001179	            0x85c0	                           test eax, eax	       729	scsi_host.h	FUNCTION_54	WHILE_1	CALL_1
0x400117b	            0x74ec	                            je 0x4001169	       729	scsi_host.h	FUNCTION_54	WHILE_1	CALL_1
0x400117d	    0x4881ebd80100	                          sub rbx, 0x1d8	       734	scsi_host.h	FUNCTION_54	CALL_2
0x4001184	            0x31f6	                            xor esi, esi	       624	scsi.c	FUNCTION_17	FUNCTION_1
0x4001186	          0x4889df	                            mov rdi, rbx	       624	scsi.c	FUNCTION_17	FUNCTION_1
0x4001189	      0xe800000000	                          call 0x400118e	       624	scsi.c	FUNCTION_17	FUNCTION_1
0x400118e	          0x4885c0	                           test rax, rax	       624	scsi.c	FUNCTION_17	FUNCTION_1
0x4001191	            0x7512	                           jne 0x40011a5	       624	scsi.c	FUNCTION_17	FUNCTION_1
0x4001193	            0xeb4f	                           jmp 0x40011e4	       624	scsi.c	FUNCTION_17	FUNCTION_1
0x4001195	          0x4889c6	                            mov rsi, rax	       624	scsi.c	FUNCTION_17	FUNCTION_1
0x4001198	          0x4889df	                            mov rdi, rbx	       624	scsi.c	FUNCTION_17	FUNCTION_1
0x400119b	      0xe800000000	                          call 0x40011a0	       624	scsi.c	FUNCTION_17	FUNCTION_1
0x40011a0	          0x4885c0	                           test rax, rax	       624	scsi.c	FUNCTION_17	FUNCTION_1
0x40011a3	            0x743f	                            je 0x40011e4	       624	scsi.c	FUNCTION_17	FUNCTION_1
0x40011a5	    0x8b8dfc020000	           mov ecx, dword [rbp + 0x2fc] 	       625	scsi.c	FUNCTION_17	FUNCTION_1	IF_1
0x40011ab	    0x398884000000	            cmp dword [rax + 0x84], ecx 	       625	scsi.c	FUNCTION_17	FUNCTION_1	IF_1
0x40011b1	            0x75e2	                           jne 0x4001195	       625	scsi.c	FUNCTION_17	FUNCTION_1	IF_1
0x40011b3	    0x8b9500030000	           mov edx, dword [rbp + 0x300] 	       625	scsi.c	FUNCTION_17	FUNCTION_1	IF_1
0x40011b9	    0x399080000000	            cmp dword [rax + 0x80], edx 	       625	scsi.c	FUNCTION_17	FUNCTION_1	IF_1
0x40011bf	            0x75d4	                           jne 0x4001195	       625	scsi.c	FUNCTION_17	FUNCTION_1	IF_1
0x40011c1	          0x4889c7	                            mov rdi, rax	       627	scsi.c	FUNCTION_17	FUNCTION_1	CALL_1
0x40011c4	          0x4c89e6	                            mov rsi, r12	       627	scsi.c	FUNCTION_17	FUNCTION_1	CALL_1
0x40011c7	        0x48890424	                    mov qword [rsp], rax	       627	scsi.c	FUNCTION_17	FUNCTION_1	CALL_1
0x40011cb	      0xe800000000	                          call 0x40011d0	       627	scsi.c	FUNCTION_17	FUNCTION_1	CALL_1
0x40011d0	        0x488b0424	                    mov rax, qword [rsp]	       627	scsi.c	FUNCTION_17	FUNCTION_1	CALL_1
0x40011d4	          0x4889df	                            mov rdi, rbx	       624	scsi.c	FUNCTION_17	FUNCTION_1
0x40011d7	          0x4889c6	                            mov rsi, rax	       624	scsi.c	FUNCTION_17	FUNCTION_1
0x40011da	      0xe800000000	                          call 0x40011df	       624	scsi.c	FUNCTION_17	FUNCTION_1
0x40011df	          0x4885c0	                           test rax, rax	       624	scsi.c	FUNCTION_17	FUNCTION_1
0x40011e2	            0x75c1	                           jne 0x40011a5	       624	scsi.c	FUNCTION_17	FUNCTION_1
0x40011e4	        0x4883c408	                              add rsp, 8	       629	scsi.c	FUNCTION_17
0x40011e8	              0x5b	                                 pop rbx	       629	scsi.c	FUNCTION_17
0x40011e9	              0x5d	                                 pop rbp	       629	scsi.c	FUNCTION_17
0x40011ea	            0x415c	                                 pop r12	       629	scsi.c	FUNCTION_17
0x40011ec	            0x415d	                                 pop r13	       629	scsi.c	FUNCTION_17
0x40011ee	              0xc3	                                     ret	       629	scsi.c	FUNCTION_17
0x40011ef	            0x31db	                            xor ebx, ebx	       731	scsi_host.h	FUNCTION_54	WHILE_1	IF_1
0x40011f1	            0xeb91	                           jmp 0x4001184	       731	scsi_host.h	FUNCTION_54	WHILE_1	IF_1
scsi_attach_vpd	IF,4:ELSE,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,5:FOR,1	63
0x4001830	            0x4157	                                push r15	       475	scsi.c	FUNCTION_12
0x4001832	            0x4156	                                push r14	       475	scsi.c	FUNCTION_12
0x4001834	            0x4155	                                push r13	       475	scsi.c	FUNCTION_12
0x4001836	            0x4154	                                push r12	       475	scsi.c	FUNCTION_12
0x4001838	              0x55	                                push rbp	       475	scsi.c	FUNCTION_12
0x4001839	              0x53	                                push rbx	       475	scsi.c	FUNCTION_12
0x400183a	     0xfb6871a0100	          movzx eax, byte [rdi + 0x11a] 	       559	scsi_device.h	FUNCTION_216	IF_1
0x4001841	            0x84c0	                             test al, al	       559	scsi_device.h	FUNCTION_216	IF_1
0x4001843	            0x7815	                            js 0x400185a	       559	scsi_device.h	FUNCTION_216	IF_1
0x4001845	    0x80bfa1000000	                cmp byte [rdi + 0xa1], 4	       566	scsi_device.h	FUNCTION_216	IF_2
0x400184c	     0xf8e97000000	                           jle 0x40018e9	       566	scsi_device.h	FUNCTION_216	IF_2
0x4001852	            0xa840	                           test al, 0x40	       566	scsi_device.h	FUNCTION_216	IF_2
0x4001854	     0xf858f000000	                           jne 0x40018e9	       566	scsi_device.h	FUNCTION_216	IF_2
0x400185a	            0x31f6	                            xor esi, esi	       483	scsi.c	FUNCTION_12	CALL_2
0x400185c	          0x4989fc	                            mov r12, rdi	       483	scsi.c	FUNCTION_12	CALL_2
0x400185f	      0xe81cf5ffff	               call sym.scsi_get_vpd_buf	       483	scsi.c	FUNCTION_12	CALL_2
0x4001864	          0x4885c0	                           test rax, rax	       484	scsi.c	FUNCTION_12	IF_2
0x4001867	          0x4889c5	                            mov rbp, rax	       483	scsi.c	FUNCTION_12	CALL_2
0x400186a	            0x747d	                            je 0x40018e9	       484	scsi.c	FUNCTION_12	IF_2
0x400186c	        0x83781004	               cmp dword [rax + 0x10], 4	       487	scsi.c	FUNCTION_12	FOR_1
0x4001870	      0xbb04000000	                              mov ebx, 4	       487	scsi.c	FUNCTION_12	FOR_1
0x4001875	    0x4d8db424f800	                   lea r14, [r12 + 0xf8]	       489	scsi.c	FUNCTION_12	FOR_1	CALL_3
0x400187d	    0x4d8dac24f000	                   lea r13, [r12 + 0xf0]	       491	scsi.c	FUNCTION_12	FOR_1	CALL_4
0x4001885	            0x7f0f	                            jg 0x4001896	       487	scsi.c	FUNCTION_12	FOR_1
0x4001887	            0xeb4e	                           jmp 0x40018d7	       487	scsi.c	FUNCTION_12	FOR_1
0x4001889	          0x80fa83	                            cmp dl, 0x83	       490	scsi.c	FUNCTION_12	FOR_1	IF_4
0x400188c	            0x7431	                            je 0x40018bf	       490	scsi.c	FUNCTION_12	FOR_1	IF_4
0x400188e	          0x83c301	                              add ebx, 1	       487	scsi.c	FUNCTION_12	FOR_1
0x4001891	          0x395d10	            cmp dword [rbp + 0x10], ebx 	       487	scsi.c	FUNCTION_12	FOR_1
0x4001894	            0x7e41	                           jle 0x40018d7	       487	scsi.c	FUNCTION_12	FOR_1
0x4001896	          0x4c63fb	                         movsxd r15, ebx	       488	scsi.c	FUNCTION_12	FOR_1	IF_3
0x4001899	    0x420fb6543d14	     movzx edx, byte [rbp + r15 + 0x14] 	       488	scsi.c	FUNCTION_12	FOR_1	IF_3
0x400189f	          0x80fa80	                            cmp dl, 0x80	       488	scsi.c	FUNCTION_12	FOR_1	IF_3
0x40018a2	            0x75e5	                           jne 0x4001889	       488	scsi.c	FUNCTION_12	FOR_1	IF_3
0x40018a4	          0x4c89f2	                            mov rdx, r14	       489	scsi.c	FUNCTION_12	FOR_1	CALL_3
0x40018a7	      0xbe80000000	                           mov esi, 0x80	       489	scsi.c	FUNCTION_12	FOR_1	CALL_3
0x40018ac	          0x4c89e7	                            mov rdi, r12	       489	scsi.c	FUNCTION_12	FOR_1	CALL_3
0x40018af	      0xe85cf5ffff	           call sym.scsi_update_vpd_page	       489	scsi.c	FUNCTION_12	FOR_1	CALL_3
0x40018b4	    0x420fb6543d14	     movzx edx, byte [rbp + r15 + 0x14] 	       489	scsi.c	FUNCTION_12	FOR_1	CALL_3
0x40018ba	          0x80fa83	                            cmp dl, 0x83	       490	scsi.c	FUNCTION_12	FOR_1	IF_4
0x40018bd	            0x75cf	                           jne 0x400188e	       490	scsi.c	FUNCTION_12	FOR_1	IF_4
0x40018bf	          0x4c89ea	                            mov rdx, r13	       491	scsi.c	FUNCTION_12	FOR_1	CALL_4
0x40018c2	      0xbe83000000	                           mov esi, 0x83	       491	scsi.c	FUNCTION_12	FOR_1	CALL_4
0x40018c7	          0x4c89e7	                            mov rdi, r12	       491	scsi.c	FUNCTION_12	FOR_1	CALL_4
0x40018ca	      0xe841f5ffff	           call sym.scsi_update_vpd_page	       491	scsi.c	FUNCTION_12	FOR_1	CALL_4
0x40018cf	          0x83c301	                              add ebx, 1	       487	scsi.c	FUNCTION_12	FOR_1
0x40018d2	          0x395d10	            cmp dword [rbp + 0x10], ebx 	       487	scsi.c	FUNCTION_12	FOR_1
0x40018d5	            0x7fbf	                            jg 0x4001896	       487	scsi.c	FUNCTION_12	FOR_1
0x40018d7	              0x5b	                                 pop rbx	       494	scsi.c	FUNCTION_12
0x40018d8	          0x4889ef	                            mov rdi, rbp	       493	scsi.c	FUNCTION_12	CALL_5
0x40018db	              0x5d	                                 pop rbp	       494	scsi.c	FUNCTION_12
0x40018dc	            0x415c	                                 pop r12	       494	scsi.c	FUNCTION_12
0x40018de	            0x415d	                                 pop r13	       494	scsi.c	FUNCTION_12
0x40018e0	            0x415e	                                 pop r14	       494	scsi.c	FUNCTION_12
0x40018e2	            0x415f	                                 pop r15	       494	scsi.c	FUNCTION_12
0x40018e4	      0xe900000000	                           jmp 0x40018e9	       493	scsi.c	FUNCTION_12	CALL_5
0x40018e9	              0x5b	                                 pop rbx	       494	scsi.c	FUNCTION_12
0x40018ea	              0x5d	                                 pop rbp	       494	scsi.c	FUNCTION_12
0x40018eb	            0x415c	                                 pop r12	       494	scsi.c	FUNCTION_12
0x40018ed	            0x415d	                                 pop r13	       494	scsi.c	FUNCTION_12
0x40018ef	            0x415e	                                 pop r14	       494	scsi.c	FUNCTION_12
0x40018f1	            0x415f	                                 pop r15	       494	scsi.c	FUNCTION_12
0x40018f3	              0xc3	                                     ret	       494	scsi.c	FUNCTION_12
scsi_cmd_get_serial	IF,1:ELSE,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,0:FOR,0	11
0x4000040	    0x488b87780100	           mov rax, qword [rdi + 0x178] 	       187	scsi.c	FUNCTION_4
0x4000047	        0x488d5001	                      lea rdx, [rax + 1]	       187	scsi.c	FUNCTION_4
0x400004b	          0x4885c0	                           test rax, rax	       188	scsi.c	FUNCTION_4	IF_1
0x400004e	    0x488997780100	            mov qword [rdi + 0x178], rdx	       187	scsi.c	FUNCTION_4
0x4000055	    0x488986d00000	             mov qword [rsi + 0xd0], rax	       187	scsi.c	FUNCTION_4
0x400005c	            0x7519	                           jne 0x4000077	       188	scsi.c	FUNCTION_4	IF_1
0x400005e	    0x488b87780100	           mov rax, qword [rdi + 0x178] 	       189	scsi.c	FUNCTION_4	IF_1
0x4000065	        0x488d5001	                      lea rdx, [rax + 1]	       189	scsi.c	FUNCTION_4	IF_1
0x4000069	    0x488997780100	            mov qword [rdi + 0x178], rdx	       189	scsi.c	FUNCTION_4	IF_1
0x4000070	    0x488986d00000	             mov qword [rsi + 0xd0], rax	       189	scsi.c	FUNCTION_4	IF_1
0x4000077	            0xf3c3	                                     ret	       189	scsi.c	FUNCTION_4	IF_1
__starget_for_each_device	IF,0:ELSE,0:SWITCH,0:functions,1:DO,0:WHILE,0:CALL,1:FOR,0	48
0x4001200	            0x4156	                                push r14	       648	scsi.c	FUNCTION_18
0x4001202	          0x4989d6	                            mov r14, rdx	       648	scsi.c	FUNCTION_18
0x4001205	            0x4155	                                push r13	       648	scsi.c	FUNCTION_18
0x4001207	          0x4989f5	                            mov r13, rsi	       648	scsi.c	FUNCTION_18
0x400120a	            0x4154	                                push r12	       648	scsi.c	FUNCTION_18
0x400120c	          0x4989fc	                            mov r12, rdi	       648	scsi.c	FUNCTION_18
0x400120f	              0x55	                                push rbp	       648	scsi.c	FUNCTION_18
0x4001210	              0x53	                                push rbx	       648	scsi.c	FUNCTION_18
0x4001211	        0x488b5f28	            mov rbx, qword [rdi + 0x28] 	       649	scsi.c	FUNCTION_18	CALL_1
0x4001215	            0xeb08	                           jmp 0x400121f	       649	scsi.c	FUNCTION_18	CALL_1
0x4001217	          0x488b1b	                    mov rbx, qword [rbx]	       730	scsi_host.h	FUNCTION_54	WHILE_1	IF_1
0x400121a	          0x4885db	                           test rbx, rbx	       730	scsi_host.h	FUNCTION_54	WHILE_1	IF_1
0x400121d	            0x746f	                            je 0x400128e	       730	scsi_host.h	FUNCTION_54	WHILE_1	IF_1
0x400121f	          0x4889df	                            mov rdi, rbx	       729	scsi_host.h	FUNCTION_54	WHILE_1	CALL_1
0x4001222	      0xe800000000	                          call 0x4001227	       729	scsi_host.h	FUNCTION_54	WHILE_1	CALL_1
0x4001227	            0x85c0	                           test eax, eax	       729	scsi_host.h	FUNCTION_54	WHILE_1	CALL_1
0x4001229	            0x74ec	                            je 0x4001217	       729	scsi_host.h	FUNCTION_54	WHILE_1	CALL_1
0x400122b	    0x4881ebd80100	                          sub rbx, 0x1d8	       734	scsi_host.h	FUNCTION_54	CALL_2
0x4001232	          0x488b03	                    mov rax, qword [rbx]	       652	scsi.c	FUNCTION_18	FUNCTION_1
0x4001235	          0x4839c3	                            cmp rbx, rax	       652	scsi.c	FUNCTION_18	FUNCTION_1
0x4001238	        0x488d68f0	                   lea rbp, [rax - 0x10]	       652	scsi.c	FUNCTION_18	FUNCTION_1
0x400123c	            0x750f	                           jne 0x400124d	       652	scsi.c	FUNCTION_18	FUNCTION_1
0x400123e	            0xeb45	                           jmp 0x4001285	       652	scsi.c	FUNCTION_18	FUNCTION_1
0x4001240	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       652	scsi.c	FUNCTION_18	FUNCTION_1
0x4001244	          0x4839c3	                            cmp rbx, rax	       652	scsi.c	FUNCTION_18	FUNCTION_1
0x4001247	        0x488d68f0	                   lea rbp, [rax - 0x10]	       652	scsi.c	FUNCTION_18	FUNCTION_1
0x400124b	            0x7438	                            je 0x4001285	       652	scsi.c	FUNCTION_18	FUNCTION_1
0x400124d	    0x418b8424fc02	           mov eax, dword [r12 + 0x2fc] 	       653	scsi.c	FUNCTION_18	FUNCTION_1	IF_1
0x4001255	    0x398584000000	            cmp dword [rbp + 0x84], eax 	       653	scsi.c	FUNCTION_18	FUNCTION_1	IF_1
0x400125b	            0x75e3	                           jne 0x4001240	       653	scsi.c	FUNCTION_18	FUNCTION_1	IF_1
0x400125d	    0x418b84240003	           mov eax, dword [r12 + 0x300] 	       653	scsi.c	FUNCTION_18	FUNCTION_1	IF_1
0x4001265	    0x398580000000	            cmp dword [rbp + 0x80], eax 	       653	scsi.c	FUNCTION_18	FUNCTION_1	IF_1
0x400126b	            0x75d3	                           jne 0x4001240	       653	scsi.c	FUNCTION_18	FUNCTION_1	IF_1
0x400126d	          0x4889ef	                            mov rdi, rbp	       655	scsi.c	FUNCTION_18	FUNCTION_1	CALL_1
0x4001270	          0x4c89ee	                            mov rsi, r13	       655	scsi.c	FUNCTION_18	FUNCTION_1	CALL_1
0x4001273	      0xe800000000	                          call 0x4001278	       655	scsi.c	FUNCTION_18	FUNCTION_1	CALL_1
0x4001278	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       652	scsi.c	FUNCTION_18	FUNCTION_1
0x400127c	          0x4839c3	                            cmp rbx, rax	       652	scsi.c	FUNCTION_18	FUNCTION_1
0x400127f	        0x488d68f0	                   lea rbp, [rax - 0x10]	       652	scsi.c	FUNCTION_18	FUNCTION_1
0x4001283	            0x75c8	                           jne 0x400124d	       652	scsi.c	FUNCTION_18	FUNCTION_1
0x4001285	              0x5b	                                 pop rbx	       657	scsi.c	FUNCTION_18
0x4001286	              0x5d	                                 pop rbp	       657	scsi.c	FUNCTION_18
0x4001287	            0x415c	                                 pop r12	       657	scsi.c	FUNCTION_18
0x4001289	            0x415d	                                 pop r13	       657	scsi.c	FUNCTION_18
0x400128b	            0x415e	                                 pop r14	       657	scsi.c	FUNCTION_18
0x400128d	              0xc3	                                     ret	       657	scsi.c	FUNCTION_18
0x400128e	            0x31db	                            xor ebx, ebx	       731	scsi_host.h	FUNCTION_54	WHILE_1	IF_1
0x4001290	            0xeba0	                           jmp 0x4001232	       731	scsi_host.h	FUNCTION_54	WHILE_1	IF_1
scsi_report_opcode	IF,3:ELSE,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,5:FOR,0	72
0x4000e70	            0x4154	                                push r12	       509	scsi.c	FUNCTION_13
0x4000e72	              0x55	                                push rbp	       509	scsi.c	FUNCTION_13
0x4000e73	              0x53	                                push rbx	       509	scsi.c	FUNCTION_13
0x4000e74	        0x4883ec20	                           sub rsp, 0x20	       509	scsi.c	FUNCTION_13
0x4000e78	    0x65488b042528	                mov rax, qword gs:[0x28]	       509	scsi.c	FUNCTION_13
0x4000e81	      0x4889442418	             mov qword [rsp + 0x18], rax	       509	scsi.c	FUNCTION_13
0x4000e86	            0x31c0	                            xor eax, eax	       509	scsi.c	FUNCTION_13
0x4000e88	    0xf6871a010000	              test byte [rdi + 0x11a], 2	       514	scsi.c	FUNCTION_13	IF_1
0x4000e8f	     0xf85d3000000	                           jne 0x4000f68	       514	scsi.c	FUNCTION_13	IF_1
0x4000e95	    0x80bfa1000000	                cmp byte [rdi + 0xa1], 5	       514	scsi.c	FUNCTION_13	IF_1
0x4000e9c	          0x4889fb	                            mov rbx, rdi	       514	scsi.c	FUNCTION_13	IF_1
0x4000e9f	     0xf8ec3000000	                           jle 0x4000f68	       514	scsi.c	FUNCTION_13	IF_1
0x4000ea5	          0x4989f4	                            mov r12, rsi	       514	scsi.c	FUNCTION_13	IF_1
0x4000ea8	            0x89d0	                            mov eax, edx	        60	access_ok.h	FUNCTION_227	CALL_1
0x4000eaa	            0x31f6	                            xor esi, esi	       523	scsi.c	FUNCTION_13	CALL_3
0x4000eac	            0x89d5	                            mov ebp, edx	       523	scsi.c	FUNCTION_13	CALL_3
0x4000eae	             0xfc8	                               bswap eax	        60	access_ok.h	FUNCTION_227	CALL_1
0x4000eb0	            0x89d2	                            mov edx, edx	       523	scsi.c	FUNCTION_13	CALL_3
0x4000eb2	          0x4c89e7	                            mov rdi, r12	       523	scsi.c	FUNCTION_13	CALL_3
0x4000eb5	    0x48c744240800	                  mov qword [rsp + 8], 0	       517	scsi.c	FUNCTION_13	CALL_1
0x4000ebe	    0x48c744241000	               mov qword [rsp + 0x10], 0	       517	scsi.c	FUNCTION_13	CALL_1
0x4000ec7	        0x884c240b	                mov byte [rsp + 0xb], cl	       521	scsi.c	FUNCTION_13
0x4000ecb	      0xc6442408a3	                mov byte [rsp + 8], 0xa3	       518	scsi.c	FUNCTION_13
0x4000ed0	      0xc64424090c	                 mov byte [rsp + 9], 0xc	       519	scsi.c	FUNCTION_13
0x4000ed5	      0xc644240a01	                 mov byte [rsp + 0xa], 1	       520	scsi.c	FUNCTION_13
0x4000eda	        0x8944240e	              mov dword [rsp + 0xe], eax	        60	access_ok.h	FUNCTION_227	CALL_1
0x4000ede	      0xe800000000	                          call 0x4000ee3	       523	scsi.c	FUNCTION_13	CALL_3
0x4000ee3	            0x6a00	                                  push 0	       439	scsi_device.h	FUNCTION_198	CALL_1
0x4000ee5	            0x6a00	                                  push 0	       439	scsi_device.h	FUNCTION_198	CALL_1
0x4000ee7	          0x4531c9	                            xor r9d, r9d	       439	scsi_device.h	FUNCTION_198	CALL_1
0x4000eea	            0x6a00	                                  push 0	       439	scsi_device.h	FUNCTION_198	CALL_1
0x4000eec	            0x6a03	                                  push 3	       439	scsi_device.h	FUNCTION_198	CALL_1
0x4000eee	          0x4189e8	                            mov r8d, ebp	       439	scsi_device.h	FUNCTION_198	CALL_1
0x4000ef1	      0x6830750000	                             push 0x7530	       439	scsi_device.h	FUNCTION_198	CALL_1
0x4000ef6	          0x4c89e1	                            mov rcx, r12	       439	scsi_device.h	FUNCTION_198	CALL_1
0x4000ef9	      0xba02000000	                              mov edx, 2	       439	scsi_device.h	FUNCTION_198	CALL_1
0x4000efe	          0x4889df	                            mov rdi, rbx	       439	scsi_device.h	FUNCTION_198	CALL_1
0x4000f01	      0x488d442428	                   lea rax, [rsp + 0x28]	       439	scsi_device.h	FUNCTION_198	CALL_1
0x4000f06	              0x50	                                push rax	       439	scsi_device.h	FUNCTION_198	CALL_1
0x4000f07	      0x488d742438	                   lea rsi, [rsp + 0x38]	       439	scsi_device.h	FUNCTION_198	CALL_1
0x4000f0c	      0xe800000000	                          call 0x4000f11	       439	scsi_device.h	FUNCTION_198	CALL_1
0x4000f11	        0x4883c430	                           add rsp, 0x30	       528	scsi.c	FUNCTION_13	IF_2	CALL_5
0x4000f15	            0x85c0	                           test eax, eax	       528	scsi.c	FUNCTION_13	IF_2	CALL_5
0x4000f17	            0x752a	                           jne 0x4000f43	       528	scsi.c	FUNCTION_13	IF_2	CALL_5
0x4000f19	    0x410fb6442401	               movzx eax, byte [r12 + 1]	       515	scsi.c	FUNCTION_13	IF_1
0x4000f1f	          0x83e003	                              and eax, 3	       515	scsi.c	FUNCTION_13	IF_1
0x4000f22	            0x3c03	                               cmp al, 3	       515	scsi.c	FUNCTION_13	IF_1
0x4000f24	           0xf94c0	                                 sete al	       515	scsi.c	FUNCTION_13	IF_1
0x4000f27	           0xfb6c0	                           movzx eax, al	       515	scsi.c	FUNCTION_13	IF_1
0x4000f2a	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       537	scsi.c	FUNCTION_13
0x4000f2f	    0x6548333c2528	                xor rdi, qword gs:[0x28]	       537	scsi.c	FUNCTION_13
0x4000f38	            0x7535	                           jne 0x4000f6f	       537	scsi.c	FUNCTION_13
0x4000f3a	        0x4883c420	                           add rsp, 0x20	       537	scsi.c	FUNCTION_13
0x4000f3e	              0x5b	                                 pop rbx	       537	scsi.c	FUNCTION_13
0x4000f3f	              0x5d	                                 pop rbp	       537	scsi.c	FUNCTION_13
0x4000f40	            0x415c	                                 pop r12	       537	scsi.c	FUNCTION_13
0x4000f42	              0xc3	                                     ret	       537	scsi.c	FUNCTION_13
0x4000f43	         0xfb60424	                   movzx eax, byte [rsp]	       528	scsi.c	FUNCTION_13	IF_2	CALL_5
0x4000f47	          0x83e070	                           and eax, 0x70	       528	scsi.c	FUNCTION_13	IF_2	CALL_5
0x4000f4a	            0x3c70	                            cmp al, 0x70	       528	scsi.c	FUNCTION_13	IF_2	CALL_5
0x4000f4c	            0x75cb	                           jne 0x4000f19	       528	scsi.c	FUNCTION_13	IF_2	CALL_5
0x4000f4e	      0x807c240105	                   cmp byte [rsp + 1], 5	       528	scsi.c	FUNCTION_13	IF_2	CALL_5
0x4000f53	            0x75c4	                           jne 0x4000f19	       528	scsi.c	FUNCTION_13	IF_2	CALL_5
0x4000f55	       0xfb6442402	               movzx eax, byte [rsp + 2]	       529	scsi.c	FUNCTION_13	IF_2
0x4000f5a	          0x83e0fb	                     and eax, 0xfffffffb	       529	scsi.c	FUNCTION_13	IF_2
0x4000f5d	            0x3c20	                            cmp al, 0x20	       529	scsi.c	FUNCTION_13	IF_2
0x4000f5f	            0x75b8	                           jne 0x4000f19	       529	scsi.c	FUNCTION_13	IF_2
0x4000f61	      0x807c240300	                   cmp byte [rsp + 3], 0	       530	scsi.c	FUNCTION_13	IF_2
0x4000f66	            0x75b1	                           jne 0x4000f19	       530	scsi.c	FUNCTION_13	IF_2
0x4000f68	      0xb8eaffffff	                     mov eax, 0xffffffea	       515	scsi.c	FUNCTION_13	IF_1
0x4000f6d	            0xebbb	                           jmp 0x4000f2a	       515	scsi.c	FUNCTION_13	IF_1
0x4000f6f	      0xe800000000	                          call 0x4000f74	       537	scsi.c	FUNCTION_13
scsi_get_vpd_page	IF,6:ELSE,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,3:FOR,1	59
0x4000cd0	    0xf6871a010000	          test byte [rdi + 0x11a], 0x40 	       380	scsi.c	FUNCTION_9	IF_1
0x4000cd7	     0xf858f000000	                           jne 0x4000d6c	       380	scsi.c	FUNCTION_9	IF_1
0x4000cdd	            0x4156	                                push r14	       377	scsi.c	FUNCTION_9
0x4000cdf	            0x4155	                                push r13	       377	scsi.c	FUNCTION_9
0x4000ce1	          0x4989d5	                            mov r13, rdx	       377	scsi.c	FUNCTION_9
0x4000ce4	            0x4154	                                push r12	       377	scsi.c	FUNCTION_9
0x4000ce6	              0x55	                                push rbp	       377	scsi.c	FUNCTION_9
0x4000ce7	            0x31d2	                            xor edx, edx	       384	scsi.c	FUNCTION_9	CALL_1
0x4000ce9	              0x53	                                push rbx	       377	scsi.c	FUNCTION_9
0x4000cea	            0x89f5	                            mov ebp, esi	       377	scsi.c	FUNCTION_9
0x4000cec	            0x89f3	                            mov ebx, esi	       377	scsi.c	FUNCTION_9
0x4000cee	          0x4c89ee	                            mov rsi, r13	       384	scsi.c	FUNCTION_9	CALL_1
0x4000cf1	          0x4189cc	                           mov r12d, ecx	       384	scsi.c	FUNCTION_9	CALL_1
0x4000cf4	          0x4989fe	                            mov r14, rdi	       384	scsi.c	FUNCTION_9	CALL_1
0x4000cf7	      0xe824ffffff	               call sym.scsi_vpd_inquiry	       384	scsi.c	FUNCTION_9	CALL_1
0x4000cfc	          0x83f803	                              cmp eax, 3	       385	scsi.c	FUNCTION_9	IF_2
0x4000cff	            0x7e64	                           jle 0x4000d65	       385	scsi.c	FUNCTION_9	IF_2
0x4000d01	          0x4084ed	                           test bpl, bpl	       389	scsi.c	FUNCTION_9	IF_3
0x4000d04	            0x7454	                            je 0x4000d5a	       389	scsi.c	FUNCTION_9	IF_3
0x4000d06	          0x4139c4	                           cmp r12d, eax	       392	scsi.c	FUNCTION_9	FOR_1	CALL_2
0x4000d09	          0x4189c2	                           mov r10d, eax	       392	scsi.c	FUNCTION_9	FOR_1	CALL_2
0x4000d0c	        0x450f4ed4	                       cmovle r10d, r12d	       392	scsi.c	FUNCTION_9	FOR_1	CALL_2
0x4000d10	        0x4183fa04	                             cmp r10d, 4	       392	scsi.c	FUNCTION_9	FOR_1	CALL_2
0x4000d14	            0x7e5c	                           jle 0x4000d72	       392	scsi.c	FUNCTION_9	FOR_1	CALL_2
0x4000d16	        0x413a6d04	                 cmp bpl, byte [r13 + 4]	       393	scsi.c	FUNCTION_9	FOR_1	IF_4
0x4000d1a	            0x7429	                            je 0x4000d45	       393	scsi.c	FUNCTION_9	FOR_1	IF_4
0x4000d1c	        0x4d8d4d05	                       lea r9, [r13 + 5]	       393	scsi.c	FUNCTION_9	FOR_1	IF_4
0x4000d20	    0x41b804000000	                              mov r8d, 4	       393	scsi.c	FUNCTION_9	FOR_1	IF_4
0x4000d26	            0xeb0a	                           jmp 0x4000d32	       393	scsi.c	FUNCTION_9	FOR_1	IF_4
0x4000d28	        0x4983c101	                               add r9, 1	       393	scsi.c	FUNCTION_9	FOR_1	IF_4
0x4000d2c	        0x413a69ff	                  cmp bpl, byte [r9 - 1]	       393	scsi.c	FUNCTION_9	FOR_1	IF_4
0x4000d30	            0x7413	                            je 0x4000d45	       393	scsi.c	FUNCTION_9	FOR_1	IF_4
0x4000d32	        0x4183c001	                              add r8d, 1	       392	scsi.c	FUNCTION_9	FOR_1	CALL_2
0x4000d36	          0x4539d0	                           cmp r8d, r10d	       392	scsi.c	FUNCTION_9	FOR_1	CALL_2
0x4000d39	            0x75ed	                           jne 0x4000d28	       392	scsi.c	FUNCTION_9	FOR_1	CALL_2
0x4000d3b	          0x4439d0	                           cmp eax, r10d	       396	scsi.c	FUNCTION_9	IF_5
0x4000d3e	            0x7e25	                           jle 0x4000d65	       396	scsi.c	FUNCTION_9	IF_5
0x4000d40	          0x4539d4	                          cmp r12d, r10d	       396	scsi.c	FUNCTION_9	IF_5
0x4000d43	            0x7f20	                            jg 0x4000d65	       396	scsi.c	FUNCTION_9	IF_5
0x4000d45	           0xfb6d3	                           movzx edx, bl	       403	scsi.c	FUNCTION_9	CALL_3
0x4000d48	          0x4489e1	                           mov ecx, r12d	       403	scsi.c	FUNCTION_9	CALL_3
0x4000d4b	          0x4c89ee	                            mov rsi, r13	       403	scsi.c	FUNCTION_9	CALL_3
0x4000d4e	          0x4c89f7	                            mov rdi, r14	       403	scsi.c	FUNCTION_9	CALL_3
0x4000d51	      0xe8cafeffff	               call sym.scsi_vpd_inquiry	       403	scsi.c	FUNCTION_9	CALL_3
0x4000d56	            0x85c0	                           test eax, eax	       404	scsi.c	FUNCTION_9	IF_6
0x4000d58	            0x780b	                            js 0x4000d65	       404	scsi.c	FUNCTION_9	IF_6
0x4000d5a	            0x31c0	                            xor eax, eax	       390	scsi.c	FUNCTION_9	IF_3
0x4000d5c	              0x5b	                                 pop rbx	       411	scsi.c	FUNCTION_9
0x4000d5d	              0x5d	                                 pop rbp	       411	scsi.c	FUNCTION_9
0x4000d5e	            0x415c	                                 pop r12	       411	scsi.c	FUNCTION_9
0x4000d60	            0x415d	                                 pop r13	       411	scsi.c	FUNCTION_9
0x4000d62	            0x415e	                                 pop r14	       411	scsi.c	FUNCTION_9
0x4000d64	              0xc3	                                     ret	       411	scsi.c	FUNCTION_9
0x4000d65	      0xb8eaffffff	                     mov eax, 0xffffffea	       410	scsi.c	FUNCTION_9
0x4000d6a	            0xebf0	                           jmp 0x4000d5c	       410	scsi.c	FUNCTION_9
0x4000d6c	      0xb8eaffffff	                     mov eax, 0xffffffea	       410	scsi.c	FUNCTION_9
0x4000d71	              0xc3	                                     ret	       411	scsi.c	FUNCTION_9
0x4000d72	    0x41ba04000000	                             mov r10d, 4	       392	scsi.c	FUNCTION_9	FOR_1	CALL_2
0x4000d78	            0xebc1	                           jmp 0x4000d3b	       392	scsi.c	FUNCTION_9	FOR_1	CALL_2
scsi_device_get	IF,3:ELSE,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,3:FOR,0	28
0x4000f80	    0x8b8790070000	           mov eax, dword [rdi + 0x790] 	       553	scsi.c	FUNCTION_14	IF_1
0x4000f86	          0x83e803	                              sub eax, 3	       553	scsi.c	FUNCTION_14	IF_1
0x4000f89	          0x83f801	                              cmp eax, 1	       553	scsi.c	FUNCTION_14	IF_1
0x4000f8c	            0x7634	                           jbe 0x4000fc2	       553	scsi.c	FUNCTION_14	IF_1
0x4000f8e	              0x55	                                push rbp	       552	scsi.c	FUNCTION_14
0x4000f8f	    0x488daf780100	                  lea rbp, [rdi + 0x178]	       555	scsi.c	FUNCTION_14	IF_2	CALL_1
0x4000f96	              0x53	                                push rbx	       552	scsi.c	FUNCTION_14
0x4000f97	          0x4889fb	                            mov rbx, rdi	       552	scsi.c	FUNCTION_14
0x4000f9a	          0x4889ef	                            mov rdi, rbp	       555	scsi.c	FUNCTION_14	IF_2	CALL_1
0x4000f9d	      0xe800000000	                          call 0x4000fa2	       555	scsi.c	FUNCTION_14	IF_2	CALL_1
0x4000fa2	          0x4885c0	                           test rax, rax	       555	scsi.c	FUNCTION_14	IF_2	CALL_1
0x4000fa5	            0x7429	                            je 0x4000fd0	       555	scsi.c	FUNCTION_14	IF_2	CALL_1
0x4000fa7	          0x488b03	                    mov rax, qword [rbx]	       557	scsi.c	FUNCTION_14	IF_3	CALL_2
0x4000faa	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       557	scsi.c	FUNCTION_14	IF_3	CALL_2
0x4000fb1	          0x488b38	                    mov rdi, qword [rax]	       557	scsi.c	FUNCTION_14	IF_3	CALL_2
0x4000fb4	      0xe800000000	                          call 0x4000fb9	       557	scsi.c	FUNCTION_14	IF_3	CALL_2
0x4000fb9	            0x84c0	                             test al, al	       557	scsi.c	FUNCTION_14	IF_3	CALL_2
0x4000fbb	            0x740b	                            je 0x4000fc8	       557	scsi.c	FUNCTION_14	IF_3	CALL_2
0x4000fbd	            0x31c0	                            xor eax, eax	       559	scsi.c	FUNCTION_14
0x4000fbf	              0x5b	                                 pop rbx	       565	scsi.c	FUNCTION_14
0x4000fc0	              0x5d	                                 pop rbp	       565	scsi.c	FUNCTION_14
0x4000fc1	              0xc3	                                     ret	       565	scsi.c	FUNCTION_14
0x4000fc2	      0xb8faffffff	                     mov eax, 0xfffffffa	       564	scsi.c	FUNCTION_14
0x4000fc7	              0xc3	                                     ret	       565	scsi.c	FUNCTION_14
0x4000fc8	          0x4889ef	                            mov rdi, rbp	       562	scsi.c	FUNCTION_14	CALL_3
0x4000fcb	      0xe800000000	                          call 0x4000fd0	       562	scsi.c	FUNCTION_14	CALL_3
0x4000fd0	      0xb8faffffff	                     mov eax, 0xfffffffa	       564	scsi.c	FUNCTION_14
0x4000fd5	            0xebe8	                           jmp 0x4000fbf	       564	scsi.c	FUNCTION_14
exit_scsi	IF,0:ELSE,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,8:FOR,0	9
0x4000040	    0x488b87780100	           mov rax, qword [rdi + 0x178] 	       187	scsi.c	FUNCTION_4
0x4000047	        0x488d5001	                      lea rdx, [rax + 1]	       187	scsi.c	FUNCTION_4
0x400004b	          0x4885c0	                           test rax, rax	       188	scsi.c	FUNCTION_4	IF_1
0x400004e	    0x488997780100	            mov qword [rdi + 0x178], rdx	       187	scsi.c	FUNCTION_4
0x4000055	    0x488986d00000	             mov qword [rsi + 0xd0], rax	       187	scsi.c	FUNCTION_4
0x400005c	            0x7519	                           jne 0x4000077	       188	scsi.c	FUNCTION_4	IF_1
0x400005e	    0x488b87780100	           mov rax, qword [rdi + 0x178] 	       189	scsi.c	FUNCTION_4	IF_1
0x4000065	        0x488d5001	                      lea rdx, [rax + 1]	       189	scsi.c	FUNCTION_4	IF_1
0x4000069	              0x48	                                 invalid	       189	scsi.c	FUNCTION_4	IF_1
scsi_device_put	IF,0:ELSE,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,2:FOR,0	9
0x4001070	              0x53	                                push rbx	       577	scsi.c	FUNCTION_15
0x4001071	          0x488b07	                    mov rax, qword [rdi]	       578	scsi.c	FUNCTION_15	CALL_1
0x4001074	          0x4889fb	                            mov rbx, rdi	       577	scsi.c	FUNCTION_15
0x4001077	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       578	scsi.c	FUNCTION_15	CALL_1
0x400107e	          0x488b38	                    mov rdi, qword [rax]	       578	scsi.c	FUNCTION_15	CALL_1
0x4001081	      0xe800000000	                          call 0x4001086	       578	scsi.c	FUNCTION_15	CALL_1
0x4001086	    0x488dbb780100	                  lea rdi, [rbx + 0x178]	       579	scsi.c	FUNCTION_15	CALL_2
0x400108d	              0x5b	                                 pop rbx	       580	scsi.c	FUNCTION_15
0x400108e	      0xe900000000	                           jmp 0x4001093	       579	scsi.c	FUNCTION_15	CALL_2
