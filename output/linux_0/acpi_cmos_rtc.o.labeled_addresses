acpi_cmos_rtc_init	DO,0:WHILE,0:SWITCH,0:IF,0:ELSE,0:FOR,0:functions,0:CALL,1	3
0x4000040	        0x488b7f08	                mov rdi, qword [rdi + 8]	        76	acpi_cmos_rtc.c	FUNCTION_3	IF_1	CALL_2
0x4000044	    0x48c7c2000000	                              mov rdx, 0	        76	acpi_cmos_rtc.c	FUNCTION_3	IF_1	CALL_2
0x400004b	              0xbe	                                 invalid	        76	acpi_cmos_rtc.c	FUNCTION_3	IF_1	CALL_2
acpi_remove_cmos_rtc_space_handler	DO,0:WHILE,0:SWITCH,0:IF,1:ELSE,0:FOR,0:functions,0:CALL,3	9
0x4000040	        0x488b7f08	                mov rdi, qword [rdi + 8]	        76	acpi_cmos_rtc.c	FUNCTION_3	IF_1	CALL_2
0x4000044	    0x48c7c2000000	                              mov rdx, 0	        76	acpi_cmos_rtc.c	FUNCTION_3	IF_1	CALL_2
0x400004b	      0xbe05000000	                              mov esi, 5	        76	acpi_cmos_rtc.c	FUNCTION_3	IF_1	CALL_2
0x4000050	      0xe800000000	                          call 0x4000055	        76	acpi_cmos_rtc.c	FUNCTION_3	IF_1	CALL_2
0x4000055	            0x85c0	                           test eax, eax	        76	acpi_cmos_rtc.c	FUNCTION_3	IF_1	CALL_2
0x4000057	            0x7502	                           jne 0x400005b	        76	acpi_cmos_rtc.c	FUNCTION_3	IF_1	CALL_2
0x4000059	            0xf3c3	                                     ret	        76	acpi_cmos_rtc.c	FUNCTION_3	IF_1	CALL_2
0x400005b	    0x48c7c7000000	                              mov rdi, 0	        78	acpi_cmos_rtc.c	FUNCTION_3	CALL_3
0x4000062	      0xe900000000	                           jmp 0x4000067	        78	acpi_cmos_rtc.c	FUNCTION_3	CALL_3
acpi_install_cmos_rtc_space_handler	DO,0:WHILE,0:SWITCH,0:IF,1:ELSE,0:FOR,0:functions,0:CALL,3	14
0x4000070	        0x488b7f08	                mov rdi, qword [rdi + 8]	        62	acpi_cmos_rtc.c	FUNCTION_2	CALL_1
0x4000074	          0x4531c0	                            xor r8d, r8d	        62	acpi_cmos_rtc.c	FUNCTION_2	CALL_1
0x4000077	            0x31c9	                            xor ecx, ecx	        62	acpi_cmos_rtc.c	FUNCTION_2	CALL_1
0x4000079	    0x48c7c2000000	                              mov rdx, 0	        62	acpi_cmos_rtc.c	FUNCTION_2	CALL_1
0x4000080	      0xbe05000000	                              mov esi, 5	        62	acpi_cmos_rtc.c	FUNCTION_2	CALL_1
0x4000085	      0xe800000000	                          call 0x400008a	        62	acpi_cmos_rtc.c	FUNCTION_2	CALL_1
0x400008a	            0x85c0	                           test eax, eax	        66	acpi_cmos_rtc.c	FUNCTION_2	IF_1	CALL_2
0x400008c	            0x7506	                           jne 0x4000094	        66	acpi_cmos_rtc.c	FUNCTION_2	IF_1	CALL_2
0x400008e	      0xb801000000	                              mov eax, 1	        71	acpi_cmos_rtc.c	FUNCTION_2
0x4000093	              0xc3	                                     ret	        72	acpi_cmos_rtc.c	FUNCTION_2
0x4000094	    0x48c7c7000000	                              mov rdi, 0	        67	acpi_cmos_rtc.c	FUNCTION_2	IF_1	CALL_3
0x400009b	      0xe800000000	                          call 0x40000a0	        67	acpi_cmos_rtc.c	FUNCTION_2	IF_1	CALL_3
0x40000a0	      0xb8edffffff	                     mov eax, 0xffffffed	        68	acpi_cmos_rtc.c	FUNCTION_2	IF_1
0x40000a5	              0xc3	                                     ret	        68	acpi_cmos_rtc.c	FUNCTION_2	IF_1
