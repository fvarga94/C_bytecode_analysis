calibrate_delay_is_known	CALL,0:FOR,0:IF,0:functions,0:DO,0:ELSE,0:SWITCH,0:WHILE,0	2
0x4000040	            0x31c0	                            xor eax, eax	        19	calibrate.c	FUNCTION_1	CALL_1
0x4000042	              0xc3	                                     ret	        19	calibrate.c	FUNCTION_1	CALL_1
lpj_setup	CALL,1:FOR,0:IF,0:functions,0:DO,0:ELSE,0:SWITCH,0:WHILE,0	6
0x4000040	            0x31c0	                            xor eax, eax	        19	calibrate.c	FUNCTION_1	CALL_1
0x4000042	              0xc3	                                     ret	        19	calibrate.c	FUNCTION_1	CALL_1
0x4000043	           0xf1f00	                         nop dword [rax]	        19	calibrate.c	FUNCTION_1	CALL_1
0x4000046	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        19	calibrate.c	FUNCTION_1	CALL_1
0x4000050	            0xf3c3	                                     ret	        21	calibrate.c	FUNCTION_1
0x4000052	         0xf1f4000	                         nop dword [rax]	        21	calibrate.c	FUNCTION_1
calibration_delay_done	CALL,0:FOR,0:IF,0:functions,0:DO,0:ELSE,0:SWITCH,0:WHILE,0	1
0x4000050	            0xf3c3	                                     ret	        21	calibrate.c	FUNCTION_1
calibrate_delay	CALL,14:FOR,0:IF,10:functions,0:DO,0:ELSE,5:SWITCH,0:WHILE,0	365
0x4000060	            0x4157	                                push r15	       276	calibrate.c	FUNCTION_7
0x4000062	            0x4156	                                push r14	       276	calibrate.c	FUNCTION_7
0x4000064	            0x4155	                                push r13	       276	calibrate.c	FUNCTION_7
0x4000066	            0x4154	                                push r12	       276	calibrate.c	FUNCTION_7
0x4000068	    0x49c7c4000000	                              mov r12, 0	       281	calibrate.c	FUNCTION_7	IF_1	CALL_2
0x400006f	              0x55	                                push rbp	       276	calibrate.c	FUNCTION_7
0x4000070	              0x53	                                push rbx	       276	calibrate.c	FUNCTION_7
0x4000071	    0x4881ec880000	                           sub rsp, 0x88	       276	calibrate.c	FUNCTION_7
0x4000078	    0x65448b2d0000	        mov r13d, dword gs:[0x04000080] 	       279	calibrate.c	FUNCTION_7	CALL_1
0x4000080	          0x4963dd	                        movsxd rbx, r13d	       281	calibrate.c	FUNCTION_7	IF_1	CALL_2
0x4000083	    0x488b14dd0000	                  mov rdx, qword [rbx*8]	       281	calibrate.c	FUNCTION_7	IF_1	CALL_2
0x400008b	        0x48891c24	                    mov qword [rsp], rbx	       281	calibrate.c	FUNCTION_7	IF_1	CALL_2
0x400008f	    0x65488b042528	                mov rax, qword gs:[0x28]	       276	calibrate.c	FUNCTION_7
0x4000098	    0x488984248000	             mov qword [rsp + 0x80], rax	       276	calibrate.c	FUNCTION_7
0x40000a0	            0x31c0	                            xor eax, eax	       276	calibrate.c	FUNCTION_7
0x40000a2	          0x4c89e0	                            mov rax, r12	       281	calibrate.c	FUNCTION_7	IF_1	CALL_2
0x40000a5	      0x48833c1000	                cmp qword [rax + rdx], 0	       281	calibrate.c	FUNCTION_7	IF_1	CALL_2
0x40000aa	            0x7451	                            je 0x40000fd	       281	calibrate.c	FUNCTION_7	IF_1	CALL_2
0x40000ac	    0x803d00000000	                cmp byte [0x040000b3], 0	       283	calibrate.c	FUNCTION_7	IF_1	IF_2
0x40000b3	        0x4c8b2c02	              mov r13, qword [rdx + rax]	       282	calibrate.c	FUNCTION_7	IF_1	CALL_3
0x40000b7	     0xf84be050000	                            je 0x400067b	       283	calibrate.c	FUNCTION_7	IF_1	IF_2
0x40000bd	        0x4e892c22	              mov qword [rdx + r12], r13	       306	calibrate.c	FUNCTION_7	CALL_12
0x40000c1	    0x4c892d000000	            mov qword [0x040000c8], r13 	       312	calibrate.c	FUNCTION_7
0x40000c8	    0xc60500000000	                mov byte [0x040000cf], 1	       313	calibrate.c	FUNCTION_7
0x40000cf	      0xe800000000	                          call 0x40000d4	       315	calibrate.c	FUNCTION_7	CALL_14
0x40000d4	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	       316	calibrate.c	FUNCTION_7
0x40000dc	    0x654833042528	                xor rax, qword gs:[0x28]	       316	calibrate.c	FUNCTION_7
0x40000e5	     0xf85b4050000	                           jne 0x400069f	       316	calibrate.c	FUNCTION_7
0x40000eb	    0x4881c4880000	                           add rsp, 0x88	       316	calibrate.c	FUNCTION_7
0x40000f2	              0x5b	                                 pop rbx	       316	calibrate.c	FUNCTION_7
0x40000f3	              0x5d	                                 pop rbp	       316	calibrate.c	FUNCTION_7
0x40000f4	            0x415c	                                 pop r12	       316	calibrate.c	FUNCTION_7
0x40000f6	            0x415d	                                 pop r13	       316	calibrate.c	FUNCTION_7
0x40000f8	            0x415e	                                 pop r14	       316	calibrate.c	FUNCTION_7
0x40000fa	            0x415f	                                 pop r15	       316	calibrate.c	FUNCTION_7
0x40000fc	              0xc3	                                     ret	       316	calibrate.c	FUNCTION_7
0x40000fd	    0x4c8b2d000000	            mov r13, qword [0x04000104] 	       286	calibrate.c	FUNCTION_7	ELSE_1	IF_3
0x4000104	          0x4d85ed	                           test r13, r13	       286	calibrate.c	FUNCTION_7	ELSE_1	IF_3
0x4000107	            0x742a	                            je 0x4000133	       286	calibrate.c	FUNCTION_7	ELSE_1	IF_3
0x4000109	    0x803d00000000	                cmp byte [0x04000110], 0	       288	calibrate.c	FUNCTION_7	ELSE_1	IF_3	IF_4
0x4000110	            0x75ab	                           jne 0x40000bd	       288	calibrate.c	FUNCTION_7	ELSE_1	IF_3	IF_4
0x4000112	    0x48c7c7000000	                              mov rdi, 0	       289	calibrate.c	FUNCTION_7	ELSE_1	IF_3	IF_4	CALL_5
0x4000119	      0xe800000000	                          call 0x400011e	       289	calibrate.c	FUNCTION_7	ELSE_1	IF_3	IF_4	CALL_5
0x400011e	        0x488b0424	                    mov rax, qword [rsp]	       289	calibrate.c	FUNCTION_7	ELSE_1	IF_3	IF_4	CALL_5
0x4000122	    0x488b14c50000	                  mov rdx, qword [rax*8]	       289	calibrate.c	FUNCTION_7	ELSE_1	IF_3	IF_4	CALL_5
0x400012a	     0xfb605000000	           movzx eax, byte [0x04000131] 	       289	calibrate.c	FUNCTION_7	ELSE_1	IF_3	IF_4	CALL_5
0x4000131	            0xeb3d	                           jmp 0x4000170	       289	calibrate.c	FUNCTION_7	ELSE_1	IF_3	IF_4	CALL_5
0x4000133	    0x803d00000000	                cmp byte [0x0400013a], 0	       291	calibrate.c	FUNCTION_7	ELSE_2	IF_5
0x400013a	            0x7510	                           jne 0x400014c	       291	calibrate.c	FUNCTION_7	ELSE_2	IF_5
0x400013c	    0x4c8b2d000000	            mov r13, qword [0x04000143] 	       291	calibrate.c	FUNCTION_7	ELSE_2	IF_5
0x4000143	          0x4d85ed	                           test r13, r13	       291	calibrate.c	FUNCTION_7	ELSE_2	IF_5
0x4000146	     0xf85e9040000	                           jne 0x4000635	       291	calibrate.c	FUNCTION_7	ELSE_2	IF_5
0x400014c	      0xe800000000	                          call 0x4000151	       295	calibrate.c	FUNCTION_7	ELSE_3	IF_6	CALL_7
0x4000151	          0x4885c0	                           test rax, rax	       295	calibrate.c	FUNCTION_7	ELSE_3	IF_6	CALL_7
0x4000154	          0x4989c5	                            mov r13, rax	       295	calibrate.c	FUNCTION_7	ELSE_3	IF_6	CALL_7
0x4000157	     0xf8495000000	                            je 0x40001f2	       295	calibrate.c	FUNCTION_7	ELSE_3	IF_6	CALL_7
0x400015d	        0x488b0424	                    mov rax, qword [rsp]	       295	calibrate.c	FUNCTION_7	ELSE_3	IF_6	CALL_7
0x4000161	    0x488b14c50000	                  mov rdx, qword [rax*8]	       295	calibrate.c	FUNCTION_7	ELSE_3	IF_6	CALL_7
0x4000169	     0xfb605000000	           movzx eax, byte [0x04000170] 	       295	calibrate.c	FUNCTION_7	ELSE_3	IF_6	CALL_7
0x4000170	            0x84c0	                             test al, al	       307	calibrate.c	FUNCTION_7	IF_10
0x4000172	        0x4d892c14	              mov qword [r12 + rdx], r13	       306	calibrate.c	FUNCTION_7	CALL_12
0x4000176	     0xf8545ffffff	                           jne 0x40000c1	       307	calibrate.c	FUNCTION_7	IF_10
0x400017c	          0x4c89e8	                            mov rax, r13	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x400017f	    0x48bacdcccccc	          movabs rdx, 0xcccccccccccccccd	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x4000189	          0x4c89ee	                            mov rsi, r13	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x400018c	          0x48f7e2	                                 mul rdx	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x400018f	        0x48c1ee02	                              shr rsi, 2	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x4000193	          0x4c89e9	                            mov rcx, r13	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x4000196	          0x4889d0	                            mov rax, rdx	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x4000199	          0x4889d7	                            mov rdi, rdx	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x400019c	    0x48bac3f5285c	          movabs rdx, 0x28f5c28f5c28f5c3	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x40001a6	        0x48c1e804	                              shr rax, 4	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x40001aa	        0x48c1ef02	                              shr rdi, 2	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x40001ae	          0x48f7e2	                                 mul rdx	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x40001b1	          0x4889d0	                            mov rax, rdx	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x40001b4	    0x48bacff753e3	          movabs rdx, 0x20c49ba5e353f7cf	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x40001be	        0x48c1e802	                              shr rax, 2	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x40001c2	        0x488d0480	                  lea rax, [rax + rax*4]	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x40001c6	        0x488d0480	                  lea rax, [rax + rax*4]	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x40001ca	        0x48c1e002	                              shl rax, 2	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x40001ce	          0x4829c7	                            sub rdi, rax	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x40001d1	          0x4889f0	                            mov rax, rsi	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x40001d4	          0x48f7e2	                                 mul rdx	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x40001d7	          0x4889d6	                            mov rsi, rdx	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x40001da	          0x4889fa	                            mov rdx, rdi	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x40001dd	    0x48c7c7000000	                              mov rdi, 0	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x40001e4	        0x48c1ee04	                              shr rsi, 4	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x40001e8	      0xe800000000	                          call 0x40001ed	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x40001ed	      0xe9cffeffff	                           jmp 0x40000c1	       308	calibrate.c	FUNCTION_7	IF_10	CALL_13
0x40001f2	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	        48	calibrate.c	FUNCTION_2	IF_1	CALL_1
0x40001f7	      0xe800000000	                          call 0x40001fc	        48	calibrate.c	FUNCTION_2	IF_1	CALL_1
0x40001fc	            0x85c0	                           test eax, eax	        48	calibrate.c	FUNCTION_2	IF_1	CALL_1
0x40001fe	     0xf8874020000	                            js 0x4000478	        48	calibrate.c	FUNCTION_2	IF_1	CALL_1
0x4000204	      0xbbffffffff	                     mov ebx, 0xffffffff	        48	calibrate.c	FUNCTION_2	IF_1	CALL_1
0x4000209	          0x4531ed	                          xor r13d, r13d	        48	calibrate.c	FUNCTION_2	IF_1	CALL_1
0x400020c	    0x48c744241800	               mov qword [rsp + 0x18], 0	        48	calibrate.c	FUNCTION_2	IF_1	CALL_1
0x4000215	            0x89dd	                            mov ebp, ebx	        48	calibrate.c	FUNCTION_2	IF_1	CALL_1
0x4000217	    0x48c744241000	               mov qword [rsp + 0x10], 0	        48	calibrate.c	FUNCTION_2	IF_1	CALL_1
0x4000220	        0x895c2408	                mov dword [rsp + 8], ebx	        89	calibrate.c	FUNCTION_2	FOR_1
0x4000224	      0x488d7c2438	                   lea rdi, [rsp + 0x38]	        72	calibrate.c	FUNCTION_2	FOR_1	CALL_2
0x4000229	    0x48c744243000	               mov qword [rsp + 0x30], 0	        71	calibrate.c	FUNCTION_2	FOR_1
0x4000232	          0x4589ee	                          mov r14d, r13d	        71	calibrate.c	FUNCTION_2	FOR_1
0x4000235	      0xe800000000	                          call 0x400023a	        72	calibrate.c	FUNCTION_2	FOR_1	CALL_2
0x400023a	    0x488b1d000000	            mov rbx, qword [0x04000241] 	        73	calibrate.c	FUNCTION_2	FOR_1
0x4000241	    0x488b05000000	            mov rax, qword [0x04000248] 	        74	calibrate.c	FUNCTION_2	FOR_1	WHILE_1	CALL_3
0x4000248	        0x4c8d7b01	                      lea r15, [rbx + 1]	        74	calibrate.c	FUNCTION_2	FOR_1	WHILE_1	CALL_3
0x400024c	          0x4939c7	                            cmp r15, rax	        74	calibrate.c	FUNCTION_2	FOR_1	WHILE_1	CALL_3
0x400024f	            0x7820	                            js 0x4000271	        74	calibrate.c	FUNCTION_2	FOR_1	WHILE_1	CALL_3
0x4000251	      0x488b442438	            mov rax, qword [rsp + 0x38] 	        75	calibrate.c	FUNCTION_2	FOR_1	WHILE_1
0x4000256	      0x488d7c2438	                   lea rdi, [rsp + 0x38]	        76	calibrate.c	FUNCTION_2	FOR_1	WHILE_1	CALL_4
0x400025b	      0x4889442430	             mov qword [rsp + 0x30], rax	        75	calibrate.c	FUNCTION_2	FOR_1	WHILE_1
0x4000260	      0xe800000000	                          call 0x4000265	        76	calibrate.c	FUNCTION_2	FOR_1	WHILE_1	CALL_4
0x4000265	    0x488b05000000	            mov rax, qword [0x0400026c] 	        74	calibrate.c	FUNCTION_2	FOR_1	WHILE_1	CALL_3
0x400026c	          0x4939c7	                            cmp r15, rax	        74	calibrate.c	FUNCTION_2	FOR_1	WHILE_1	CALL_3
0x400026f	            0x79e0	                           jns 0x4000251	        74	calibrate.c	FUNCTION_2	FOR_1	WHILE_1	CALL_3
0x4000271	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	        78	calibrate.c	FUNCTION_2	FOR_1	CALL_5
0x4000276	        0x4883c30b	                            add rbx, 0xb	        78	calibrate.c	FUNCTION_2	FOR_1	CALL_5
0x400027a	      0xe800000000	                          call 0x400027f	        78	calibrate.c	FUNCTION_2	FOR_1	CALL_5
0x400027f	    0x488b05000000	            mov rax, qword [0x04000286] 	        82	calibrate.c	FUNCTION_2	FOR_1	WHILE_2	CALL_6
0x4000286	      0x4c8b7c2440	            mov r15, qword [rsp + 0x40] 	        81	calibrate.c	FUNCTION_2	FOR_1
0x400028b	          0x4839c3	                            cmp rbx, rax	        82	calibrate.c	FUNCTION_2	FOR_1	WHILE_2	CALL_6
0x400028e	      0x4c897c2448	             mov qword [rsp + 0x48], r15	        81	calibrate.c	FUNCTION_2	FOR_1
0x4000293	            0x790a	                           jns 0x400029f	        82	calibrate.c	FUNCTION_2	FOR_1	WHILE_2	CALL_6
0x4000295	      0xe944030000	                           jmp 0x40005de	        82	calibrate.c	FUNCTION_2	FOR_1	WHILE_2	CALL_6
0x400029a	      0x4c8b7c2448	            mov r15, qword [rsp + 0x48] 	        82	calibrate.c	FUNCTION_2	FOR_1	WHILE_2	CALL_6
0x400029f	      0x488d7c2448	                   lea rdi, [rsp + 0x48]	        85	calibrate.c	FUNCTION_2	FOR_1	WHILE_2	CALL_7
0x40002a4	      0xe800000000	                          call 0x40002a9	        85	calibrate.c	FUNCTION_2	FOR_1	WHILE_2	CALL_7
0x40002a9	    0x488b05000000	            mov rax, qword [0x040002b0] 	        82	calibrate.c	FUNCTION_2	FOR_1	WHILE_2	CALL_6
0x40002b0	          0x4839c3	                            cmp rbx, rax	        82	calibrate.c	FUNCTION_2	FOR_1	WHILE_2	CALL_6
0x40002b3	            0x79e5	                           jns 0x400029a	        82	calibrate.c	FUNCTION_2	FOR_1	WHILE_2	CALL_6
0x40002b5	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	        87	calibrate.c	FUNCTION_2	FOR_1	CALL_8
0x40002ba	      0xe800000000	                          call 0x40002bf	        87	calibrate.c	FUNCTION_2	FOR_1	CALL_8
0x40002bf	      0x488b5c2450	            mov rbx, qword [rsp + 0x50] 	        89	calibrate.c	FUNCTION_2	FOR_1
0x40002c4	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	        98	calibrate.c	FUNCTION_2	FOR_1	IF_2
0x40002c9	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	        89	calibrate.c	FUNCTION_2	FOR_1
0x40002ce	      0x4c8b442440	              mov r8, qword [rsp + 0x40]	        91	calibrate.c	FUNCTION_2	FOR_1
0x40002d3	          0x4839f3	                            cmp rbx, rsi	        98	calibrate.c	FUNCTION_2	FOR_1	IF_2
0x40002d6	     0xf861c030000	                           jbe 0x40005f8	        98	calibrate.c	FUNCTION_2	FOR_1	IF_2
0x40002dc	          0x4889c8	                            mov rax, rcx	        98	calibrate.c	FUNCTION_2	FOR_1	IF_2
0x40002df	          0x4885c0	                           test rax, rax	       103	calibrate.c	FUNCTION_2	FOR_1	IF_3
0x40002e2	            0x7449	                            je 0x400032d	       103	calibrate.c	FUNCTION_2	FOR_1	IF_3
0x40002e4	          0x4d85ff	                           test r15, r15	       103	calibrate.c	FUNCTION_2	FOR_1	IF_3
0x40002e7	            0x7444	                            je 0x400032d	       103	calibrate.c	FUNCTION_2	FOR_1	IF_3
0x40002e9	          0x4829cb	                            sub rbx, rcx	        89	calibrate.c	FUNCTION_2	FOR_1
0x40002ec	    0x48b8cdcccccc	          movabs rax, 0xcccccccccccccccd	        89	calibrate.c	FUNCTION_2	FOR_1
0x40002f6	          0x48f7e3	                                 mul rbx	        89	calibrate.c	FUNCTION_2	FOR_1
0x40002f9	    0x48b8cdcccccc	          movabs rax, 0xcccccccccccccccd	       103	calibrate.c	FUNCTION_2	FOR_1	IF_3
0x4000303	          0x4889d1	                            mov rcx, rdx	        89	calibrate.c	FUNCTION_2	FOR_1
0x4000306	          0x4889d6	                            mov rsi, rdx	        89	calibrate.c	FUNCTION_2	FOR_1
0x4000309	          0x4c89fa	                            mov rdx, r15	       103	calibrate.c	FUNCTION_2	FOR_1	IF_3
0x400030c	          0x4c29c2	                             sub rdx, r8	       103	calibrate.c	FUNCTION_2	FOR_1	IF_3
0x400030f	        0x48c1ee03	                              shr rsi, 3	        89	calibrate.c	FUNCTION_2	FOR_1
0x4000313	        0x48c1e906	                              shr rcx, 6	       103	calibrate.c	FUNCTION_2	FOR_1	IF_3
0x4000317	          0x48f7e2	                                 mul rdx	       103	calibrate.c	FUNCTION_2	FOR_1	IF_3
0x400031a	          0x4889f0	                            mov rax, rsi	       103	calibrate.c	FUNCTION_2	FOR_1	IF_3
0x400031d	        0x48c1ea03	                              shr rdx, 3	       103	calibrate.c	FUNCTION_2	FOR_1	IF_3
0x4000321	          0x4829d0	                            sub rax, rdx	       103	calibrate.c	FUNCTION_2	FOR_1	IF_3
0x4000324	          0x4839c8	                            cmp rax, rcx	       103	calibrate.c	FUNCTION_2	FOR_1	IF_3
0x4000327	     0xf82b8010000	                            jb 0x40004e5	       103	calibrate.c	FUNCTION_2	FOR_1	IF_3
0x400032d	    0x4ac744ec5800	       mov qword [rsp + r13*8 + 0x58], 0	       113	calibrate.c	FUNCTION_2	FOR_1	ELSE_1
0x4000336	        0x4983c501	                              add r13, 1	       113	calibrate.c	FUNCTION_2	FOR_1	ELSE_1
0x400033a	        0x4983fd05	                              cmp r13, 5	        70	calibrate.c	FUNCTION_2	FOR_1
0x400033e	     0xf85e0feffff	                           jne 0x4000224	        70	calibrate.c	FUNCTION_2	FOR_1
0x4000344	    0x48837c241001	               cmp qword [rsp + 0x10], 1	       121	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3
0x400034a	        0x8b5c2408	                mov ebx, dword [rsp + 8]	       121	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3
0x400034e	     0xf8618010000	                           jbe 0x400046c	       121	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3
0x4000354	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       126	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3
0x4000359	            0x31d2	                            xor edx, edx	       126	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3
0x400035b	          0x4c63fd	                         movsxd r15, ebp	       130	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_6
0x400035e	          0x4c63f3	                         movsxd r14, ebx	       130	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_6
0x4000361	      0x48f7742410	                  div qword [rsp + 0x10]	       126	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3
0x4000366	      0x4a8b54fc58	    mov rdx, qword [rsp + r15*8 + 0x58] 	       130	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_6
0x400036b	          0x4889d1	                            mov rcx, rdx	       130	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_6
0x400036e	          0x4989c5	                            mov r13, rax	       126	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3
0x4000371	      0x4a8b44f458	    mov rax, qword [rsp + r14*8 + 0x58] 	       130	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_6
0x4000376	          0x4c89ee	                            mov rsi, r13	       130	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_6
0x4000379	        0x48c1ee03	                              shr rsi, 3	       130	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_6
0x400037d	          0x4829c1	                            sub rcx, rax	       130	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_6
0x4000380	          0x4839ce	                            cmp rsi, rcx	       130	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_6
0x4000383	     0xf87a1000000	                            ja 0x400042a	       130	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_6
0x4000389	          0x4889d1	                            mov rcx, rdx	       130	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_6
0x400038c	          0x4889c2	                            mov rdx, rax	       130	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_6
0x400038f	          0x4c89e8	                            mov rax, r13	       130	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_6
0x4000392	          0x4889ce	                            mov rsi, rcx	       136	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_7
0x4000395	          0x4829c6	                            sub rsi, rax	       136	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_7
0x4000398	          0x4829d0	                            sub rax, rdx	       136	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_7
0x400039b	          0x4839c6	                            cmp rsi, rax	       136	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_7
0x400039e	     0xf83a9000000	                           jae 0x400044d	       136	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_7
0x40003a4	            0x89de	                            mov esi, ebx	       138	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_7	CALL_10
0x40003a6	    0x48c7c7000000	                              mov rdi, 0	       138	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_7	CALL_10
0x40003ad	            0x89eb	                            mov ebx, ebp	       141	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_7
0x40003af	      0xe800000000	                          call 0x40003b4	       138	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_7	CALL_10
0x40003b4	    0x4ac744f45800	       mov qword [rsp + r14*8 + 0x58], 0	       141	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_7
0x40003bd	            0x89dd	                            mov ebp, ebx	       141	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_7
0x40003bf	            0x31c9	                            xor ecx, ecx	       141	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_7
0x40003c1	            0x31c0	                            xor eax, eax	       134	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3
0x40003c3	            0x31ff	                            xor edi, edi	       135	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3
0x40003c5	      0x488b74cc58	    mov rsi, qword [rsp + rcx*8 + 0x58] 	       152	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	FOR_2	IF_8
0x40003ca	          0x4885f6	                           test rsi, rsi	       152	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	FOR_2	IF_8
0x40003cd	            0x741d	                            je 0x40003ec	       152	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	FOR_2	IF_8
0x40003cf	          0x4c63c3	                          movsxd r8, ebx	       156	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	FOR_2	IF_9
0x40003d2	        0x4883c701	                              add rdi, 1	       154	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	FOR_2
0x40003d6	          0x4801f0	                            add rax, rsi	       155	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	FOR_2
0x40003d9	      0x4a3b74c458	     cmp rsi, qword [rsp + r8*8 + 0x58] 	       156	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	FOR_2	IF_9
0x40003de	          0x4c63c5	                          movsxd r8, ebp	       158	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	FOR_2	IF_10
0x40003e1	           0xf42d9	                          cmovb ebx, ecx	       156	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	FOR_2	IF_9
0x40003e4	      0x4a3b74c458	     cmp rsi, qword [rsp + r8*8 + 0x58] 	       158	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	FOR_2	IF_10
0x40003e9	           0xf47e9	                          cmova ebp, ecx	       158	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	FOR_2	IF_10
0x40003ec	        0x4883c101	                              add rcx, 1	       158	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	FOR_2	IF_10
0x40003f0	        0x4883f905	                              cmp rcx, 5	       151	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	FOR_2
0x40003f4	            0x75cf	                           jne 0x40003c5	       151	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	FOR_2
0x40003f6	        0x4883ff01	                              cmp rdi, 1	       121	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3
0x40003fa	            0x7670	                           jbe 0x400046c	       121	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3
0x40003fc	            0x31d2	                            xor edx, edx	       126	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3
0x40003fe	          0x4c63fd	                         movsxd r15, ebp	       130	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_6
0x4000401	          0x4c63f3	                         movsxd r14, ebx	       130	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_6
0x4000404	          0x48f7f7	                                 div rdi	       126	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3
0x4000407	      0x4a8b4cfc58	    mov rcx, qword [rsp + r15*8 + 0x58] 	       130	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_6
0x400040c	      0x4a8b54f458	    mov rdx, qword [rsp + r14*8 + 0x58] 	       130	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_6
0x4000411	          0x4889ce	                            mov rsi, rcx	       130	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_6
0x4000414	          0x4829d6	                            sub rsi, rdx	       130	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_6
0x4000417	          0x4889c7	                            mov rdi, rax	       130	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_6
0x400041a	        0x48c1ef03	                              shr rdi, 3	       130	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_6
0x400041e	          0x4839f7	                            cmp rdi, rsi	       130	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_6
0x4000421	     0xf866bffffff	                           jbe 0x4000392	       130	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_6
0x4000427	          0x4989c5	                            mov r13, rax	       130	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	IF_6
0x400042a	          0x4d85ed	                           test r13, r13	       297	calibrate.c	FUNCTION_7	ELSE_4	IF_7	CALL_8
0x400042d	            0x7449	                            je 0x4000478	       297	calibrate.c	FUNCTION_7	ELSE_4	IF_7	CALL_8
0x400042f	    0x803d00000000	                cmp byte [0x04000436], 0	       298	calibrate.c	FUNCTION_7	ELSE_4	IF_7	IF_8
0x4000436	     0xf841d020000	                            je 0x4000659	       298	calibrate.c	FUNCTION_7	ELSE_4	IF_7	IF_8
0x400043c	        0x488b0424	                    mov rax, qword [rsp]	       298	calibrate.c	FUNCTION_7	ELSE_4	IF_7	IF_8
0x4000440	    0x488b14c50000	                  mov rdx, qword [rax*8]	       298	calibrate.c	FUNCTION_7	ELSE_4	IF_7	IF_8
0x4000448	      0xe970fcffff	                           jmp 0x40000bd	       298	calibrate.c	FUNCTION_7	ELSE_4	IF_7	IF_8
0x400044d	          0x4889ca	                            mov rdx, rcx	       144	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	ELSE_2	CALL_11
0x4000450	            0x89ee	                            mov esi, ebp	       144	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	ELSE_2	CALL_11
0x4000452	    0x48c7c7000000	                              mov rdi, 0	       144	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	ELSE_2	CALL_11
0x4000459	      0xe800000000	                          call 0x400045e	       144	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	ELSE_2	CALL_11
0x400045e	    0x4ac744fc5800	       mov qword [rsp + r15*8 + 0x58], 0	       147	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	ELSE_2
0x4000467	      0xe951ffffff	                           jmp 0x40003bd	       147	calibrate.c	FUNCTION_2	ELSE_1	WHILE_3	ELSE_2
0x400046c	    0x48c7c7000000	                              mov rdi, 0	       164	calibrate.c	FUNCTION_2	CALL_12
0x4000473	      0xe800000000	                          call 0x4000478	       164	calibrate.c	FUNCTION_2	CALL_12
0x4000478	    0x803d00000000	                cmp byte [0x0400047f], 0	       302	calibrate.c	FUNCTION_7	ELSE_5	IF_9
0x400047f	     0xf84e5010000	                            je 0x400066a	       302	calibrate.c	FUNCTION_7	ELSE_5	IF_9
0x4000485	    0x488b15000000	            mov rdx, qword [0x0400048c] 	       196	calibrate.c	FUNCTION_4
0x400048c	    0x488b05000000	            mov rax, qword [0x04000493] 	       197	calibrate.c	FUNCTION_4	WHILE_1
0x4000493	          0x4839c2	                            cmp rdx, rax	       197	calibrate.c	FUNCTION_4	WHILE_1
0x4000496	            0x74f4	                            je 0x400048c	       197	calibrate.c	FUNCTION_4	WHILE_1
0x4000498	    0x4c8b3d000000	            mov r15, qword [0x0400049f] 	       200	calibrate.c	FUNCTION_4
0x400049f	          0x4531f6	                          xor r14d, r14d	       191	calibrate.c	FUNCTION_4
0x40004a2	            0x31db	                            xor ebx, ebx	       191	calibrate.c	FUNCTION_4
0x40004a4	          0x4531ed	                          xor r13d, r13d	       191	calibrate.c	FUNCTION_4
0x40004a7	            0xeb22	                           jmp 0x40004cb	       191	calibrate.c	FUNCTION_4
0x40004a9	          0x4863eb	                         movsxd rbp, ebx	       206	calibrate.c	FUNCTION_4	DO_1	CALL_1
0x40004ac	        0x48c1e50c	                            shl rbp, 0xc	       206	calibrate.c	FUNCTION_4	DO_1	CALL_1
0x40004b0	          0x4889ef	                            mov rdi, rbp	       206	calibrate.c	FUNCTION_4	DO_1	CALL_1
0x40004b3	      0xe800000000	                          call 0x40004b8	       206	calibrate.c	FUNCTION_4	DO_1	CALL_1
0x40004b8	    0x488b05000000	            mov rax, qword [0x040004bf] 	       208	calibrate.c	FUNCTION_4	DO_1
0x40004bf	        0x428d142b	                    lea edx, [rbx + r13]	       207	calibrate.c	FUNCTION_4	DO_1
0x40004c3	          0x4939c7	                            cmp r15, rax	       208	calibrate.c	FUNCTION_4	DO_1
0x40004c6	            0x7565	                           jne 0x400052d	       208	calibrate.c	FUNCTION_4	DO_1
0x40004c8	          0x4189d5	                           mov r13d, edx	       207	calibrate.c	FUNCTION_4	DO_1
0x40004cb	      0xb801000000	                              mov eax, 1	       202	calibrate.c	FUNCTION_4	DO_1	IF_1
0x40004d0	            0x89d9	                            mov ecx, ebx	       202	calibrate.c	FUNCTION_4	DO_1	IF_1
0x40004d2	        0x4183c601	                             add r14d, 1	       202	calibrate.c	FUNCTION_4	DO_1	IF_1
0x40004d6	            0xd3e0	                             shl eax, cl	       202	calibrate.c	FUNCTION_4	DO_1	IF_1
0x40004d8	          0x4139c6	                           cmp r14d, eax	       202	calibrate.c	FUNCTION_4	DO_1	IF_1
0x40004db	            0x75cc	                           jne 0x40004a9	       202	calibrate.c	FUNCTION_4	DO_1	IF_1
0x40004dd	          0x83c301	                              add ebx, 1	       203	calibrate.c	FUNCTION_4	DO_1	IF_1
0x40004e0	          0x4531f6	                          xor r14d, r14d	       204	calibrate.c	FUNCTION_4	DO_1	IF_1
0x40004e3	            0xebc4	                           jmp 0x40004a9	       204	calibrate.c	FUNCTION_4	DO_1	IF_1
0x40004e5	    0x488344241001	               add qword [rsp + 0x10], 1	       105	calibrate.c	FUNCTION_2	FOR_1	IF_3
0x40004eb	      0x4801742418	            add qword [rsp + 0x18], rsi 	       106	calibrate.c	FUNCTION_2	FOR_1	IF_3
0x40004f0	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       108	calibrate.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x40004f3	      0x4a8974ec58	     mov qword [rsp + r13*8 + 0x58], rsi	       107	calibrate.c	FUNCTION_2	FOR_1	IF_3
0x40004f8	     0xf84f2000000	                            je 0x40005f0	       108	calibrate.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x40004fe	          0x4863c5	                         movsxd rax, ebp	       108	calibrate.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x4000501	      0x483b74c458	    cmp rsi, qword [rsp + rax*8 + 0x58] 	       108	calibrate.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x4000506	        0x410f47ee	                         cmova ebp, r14d	       108	calibrate.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x400050a	        0x8b5c2408	                mov ebx, dword [rsp + 8]	       110	calibrate.c	FUNCTION_2	FOR_1	IF_3	IF_5
0x400050e	          0x4863c3	                         movsxd rax, ebx	       110	calibrate.c	FUNCTION_2	FOR_1	IF_3	IF_5
0x4000511	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       110	calibrate.c	FUNCTION_2	FOR_1	IF_3	IF_5
0x4000514	     0xf84cc000000	                            je 0x40005e6	       110	calibrate.c	FUNCTION_2	FOR_1	IF_3	IF_5
0x400051a	      0x483b74c458	    cmp rsi, qword [rsp + rax*8 + 0x58] 	       110	calibrate.c	FUNCTION_2	FOR_1	IF_3	IF_5
0x400051f	        0x440f43f3	                        cmovae r14d, ebx	       110	calibrate.c	FUNCTION_2	FOR_1	IF_3	IF_5
0x4000523	      0x4489742408	               mov dword [rsp + 8], r14d	       110	calibrate.c	FUNCTION_2	FOR_1	IF_3	IF_5
0x4000528	      0xe909feffff	                           jmp 0x4000336	       110	calibrate.c	FUNCTION_2	FOR_1	IF_3	IF_5
0x400052d	          0x4963d5	                        movsxd rdx, r13d	       215	calibrate.c	FUNCTION_4
0x4000530	      0x48896c2410	             mov qword [rsp + 0x10], rbp	       215	calibrate.c	FUNCTION_4
0x4000535	        0x48c1e20c	                            shl rdx, 0xc	       215	calibrate.c	FUNCTION_4
0x4000539	      0x4889542408	                mov qword [rsp + 8], rdx	       215	calibrate.c	FUNCTION_4
0x400053e	      0x4c8b742408	                mov r14, qword [rsp + 8]	       225	calibrate.c	FUNCTION_4
0x4000543	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       226	calibrate.c	FUNCTION_4	WHILE_2
0x4000548	          0x4c89f3	                            mov rbx, r14	       225	calibrate.c	FUNCTION_4
0x400054b	        0x48c1eb08	                              shr rbx, 8	       225	calibrate.c	FUNCTION_4
0x400054f	          0x4839c3	                            cmp rbx, rax	       226	calibrate.c	FUNCTION_4	WHILE_2
0x4000552	            0x7363	                           jae 0x40005b7	       226	calibrate.c	FUNCTION_4	WHILE_2
0x4000554	          0x4989c7	                            mov r15, rax	       226	calibrate.c	FUNCTION_4	WHILE_2
0x4000557	    0x488b15000000	            mov rdx, qword [0x0400055e] 	       228	calibrate.c	FUNCTION_4	WHILE_2
0x400055e	        0x4b8d2c3e	                    lea rbp, [r14 + r15]	       227	calibrate.c	FUNCTION_4	WHILE_2
0x4000562	    0x488b05000000	            mov rax, qword [0x04000569] 	       229	calibrate.c	FUNCTION_4	WHILE_2	WHILE_3
0x4000569	          0x4839c2	                            cmp rdx, rax	       229	calibrate.c	FUNCTION_4	WHILE_2	WHILE_3
0x400056c	            0x74f4	                            je 0x4000562	       229	calibrate.c	FUNCTION_4	WHILE_2	WHILE_3
0x400056e	          0x4889ef	                            mov rdi, rbp	       232	calibrate.c	FUNCTION_4	WHILE_2	CALL_2
0x4000571	    0x4c8b2d000000	            mov r13, qword [0x04000578] 	       231	calibrate.c	FUNCTION_4	WHILE_2
0x4000578	      0xe800000000	                          call 0x400057d	       232	calibrate.c	FUNCTION_4	WHILE_2	CALL_2
0x400057d	    0x488b05000000	            mov rax, qword [0x04000584] 	       233	calibrate.c	FUNCTION_4	WHILE_2	IF_2
0x4000584	          0x4939c5	                            cmp r13, rax	       227	calibrate.c	FUNCTION_4	WHILE_2
0x4000587	        0x4c0f44f5	                          cmove r14, rbp	       227	calibrate.c	FUNCTION_4	WHILE_2
0x400058b	          0x49d1ef	                              shr r15, 1	       235	calibrate.c	FUNCTION_4	WHILE_2
0x400058e	          0x4c39fb	                            cmp rbx, r15	       226	calibrate.c	FUNCTION_4	WHILE_2
0x4000591	            0x72c4	                            jb 0x4000557	       226	calibrate.c	FUNCTION_4	WHILE_2
0x4000593	      0x488b442408	                mov rax, qword [rsp + 8]	       242	calibrate.c	FUNCTION_4	IF_3
0x4000598	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       242	calibrate.c	FUNCTION_4	IF_3
0x400059d	        0x4b8d147e	                  lea rdx, [r14 + r15*2]	       242	calibrate.c	FUNCTION_4	IF_3
0x40005a1	        0x488d0458	                  lea rax, [rax + rbx*2]	       242	calibrate.c	FUNCTION_4	IF_3
0x40005a5	          0x4839c2	                            cmp rdx, rax	       242	calibrate.c	FUNCTION_4	IF_3
0x40005a8	            0x7519	                           jne 0x40005c3	       242	calibrate.c	FUNCTION_4	IF_3
0x40005aa	    0x48c164241002	               shl qword [rsp + 0x10], 2	       244	calibrate.c	FUNCTION_4	IF_3
0x40005b0	      0x4c89742408	                mov qword [rsp + 8], r14	       244	calibrate.c	FUNCTION_4	IF_3
0x40005b5	            0xeb87	                           jmp 0x400053e	       244	calibrate.c	FUNCTION_4	IF_3
0x40005b7	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	       226	calibrate.c	FUNCTION_4	WHILE_2
0x40005bc	      0x4c8b742408	                mov r14, qword [rsp + 8]	       218	calibrate.c	FUNCTION_4
0x40005c1	            0xebd0	                           jmp 0x4000593	       218	calibrate.c	FUNCTION_4
0x40005c3	        0x488b0424	                    mov rax, qword [rsp]	       218	calibrate.c	FUNCTION_4
0x40005c7	          0x4d89f5	                            mov r13, r14	       218	calibrate.c	FUNCTION_4
0x40005ca	    0x488b14c50000	                  mov rdx, qword [rax*8]	       218	calibrate.c	FUNCTION_4
0x40005d2	     0xfb605000000	           movzx eax, byte [0x040005d9] 	       218	calibrate.c	FUNCTION_4
0x40005d9	      0xe992fbffff	                           jmp 0x4000170	       218	calibrate.c	FUNCTION_4
0x40005de	          0x4531ff	                          xor r15d, r15d	        80	calibrate.c	FUNCTION_2	FOR_1
0x40005e1	      0xe9cffcffff	                           jmp 0x40002b5	        80	calibrate.c	FUNCTION_2	FOR_1
0x40005e6	      0x4489742408	               mov dword [rsp + 8], r14d	       110	calibrate.c	FUNCTION_2	FOR_1	IF_3	IF_5
0x40005eb	      0xe946fdffff	                           jmp 0x4000336	       110	calibrate.c	FUNCTION_2	FOR_1	IF_3	IF_5
0x40005f0	          0x4489f5	                           mov ebp, r14d	       108	calibrate.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x40005f3	      0xe912ffffff	                           jmp 0x400050a	       108	calibrate.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x40005f8	          0x4889da	                            mov rdx, rbx	        99	calibrate.c	FUNCTION_2	FOR_1	IF_2	CALL_9
0x40005fb	    0x48c7c7000000	                              mov rdi, 0	        99	calibrate.c	FUNCTION_2	FOR_1	IF_2	CALL_9
0x4000602	      0x4c89442428	              mov qword [rsp + 0x28], r8	        99	calibrate.c	FUNCTION_2	FOR_1	IF_2	CALL_9
0x4000607	      0x48894c2420	             mov qword [rsp + 0x20], rcx	        99	calibrate.c	FUNCTION_2	FOR_1	IF_2	CALL_9
0x400060c	      0xe800000000	                          call 0x4000611	        99	calibrate.c	FUNCTION_2	FOR_1	IF_2	CALL_9
0x4000611	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       103	calibrate.c	FUNCTION_2	FOR_1	IF_3
0x4000616	      0x4839442438	            cmp qword [rsp + 0x38], rax 	       103	calibrate.c	FUNCTION_2	FOR_1	IF_3
0x400061b	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       103	calibrate.c	FUNCTION_2	FOR_1	IF_3
0x4000620	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	       103	calibrate.c	FUNCTION_2	FOR_1	IF_3
0x4000625	     0xf8302fdffff	                           jae 0x400032d	       103	calibrate.c	FUNCTION_2	FOR_1	IF_3
0x400062b	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       103	calibrate.c	FUNCTION_2	FOR_1	IF_3
0x4000630	      0xe9aafcffff	                           jmp 0x40002df	       103	calibrate.c	FUNCTION_2	FOR_1	IF_3
0x4000635	    0x48c7c7000000	                              mov rdi, 0	       293	calibrate.c	FUNCTION_7	ELSE_2	IF_5	CALL_6
0x400063c	      0xe800000000	                          call 0x4000641	       293	calibrate.c	FUNCTION_7	ELSE_2	IF_5	CALL_6
0x4000641	        0x488b0424	                    mov rax, qword [rsp]	       293	calibrate.c	FUNCTION_7	ELSE_2	IF_5	CALL_6
0x4000645	    0x488b14c50000	                  mov rdx, qword [rax*8]	       293	calibrate.c	FUNCTION_7	ELSE_2	IF_5	CALL_6
0x400064d	     0xfb605000000	           movzx eax, byte [0x04000654] 	       293	calibrate.c	FUNCTION_7	ELSE_2	IF_5	CALL_6
0x4000654	      0xe917fbffff	                           jmp 0x4000170	       293	calibrate.c	FUNCTION_7	ELSE_2	IF_5	CALL_6
0x4000659	    0x48c7c7000000	                              mov rdi, 0	       299	calibrate.c	FUNCTION_7	ELSE_4	IF_7	IF_8	CALL_9
0x4000660	      0xe800000000	                          call 0x4000665	       299	calibrate.c	FUNCTION_7	ELSE_4	IF_7	IF_8	CALL_9
0x4000665	      0xe9f3faffff	                           jmp 0x400015d	       299	calibrate.c	FUNCTION_7	ELSE_4	IF_7	IF_8	CALL_9
0x400066a	    0x48c7c7000000	                              mov rdi, 0	       303	calibrate.c	FUNCTION_7	ELSE_5	CALL_10
0x4000671	      0xe800000000	                          call 0x4000676	       303	calibrate.c	FUNCTION_7	ELSE_5	CALL_10
0x4000676	      0xe90afeffff	                           jmp 0x4000485	       303	calibrate.c	FUNCTION_7	ELSE_5	CALL_10
0x400067b	    0x48c7c7000000	                              mov rdi, 0	       284	calibrate.c	FUNCTION_7	IF_1	IF_2	CALL_4
0x4000682	      0xe800000000	                          call 0x4000687	       284	calibrate.c	FUNCTION_7	IF_1	IF_2	CALL_4
0x4000687	        0x488b0424	                    mov rax, qword [rsp]	       284	calibrate.c	FUNCTION_7	IF_1	IF_2	CALL_4
0x400068b	    0x488b14c50000	                  mov rdx, qword [rax*8]	       284	calibrate.c	FUNCTION_7	IF_1	IF_2	CALL_4
0x4000693	     0xfb605000000	           movzx eax, byte [0x0400069a] 	       284	calibrate.c	FUNCTION_7	IF_1	IF_2	CALL_4
0x400069a	      0xe9d1faffff	                           jmp 0x4000170	       284	calibrate.c	FUNCTION_7	IF_1	IF_2	CALL_4
0x400069f	      0xe800000000	                  call section_end..text	       316	calibrate.c	FUNCTION_7
