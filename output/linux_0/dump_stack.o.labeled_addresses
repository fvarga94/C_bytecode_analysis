show_regs_print_info	IF,0:WHILE,0:DO,0:CALL,1:ELSE,0:FOR,0:SWITCH,0:functions,0	1
0x4000100	      0xe93bffffff	           jmp sym.dump_stack_print_info	        71	dump_stack.c	FUNCTION_3	CALL_1
dump_stack_set_arch_desc	IF,0:WHILE,0:DO,0:CALL,3:ELSE,0:FOR,0:SWITCH,0:functions,0	27
0x4000040	            0x4154	                                push r12	        29	dump_stack.c	FUNCTION_1
0x4000042	              0x55	                                push rbp	        29	dump_stack.c	FUNCTION_1
0x4000043	    0x48c7c6000000	                              mov rsi, 0	        29	dump_stack.c	FUNCTION_1
0x400004a	              0x53	                                push rbx	        29	dump_stack.c	FUNCTION_1
0x400004b	          0x4889fb	                            mov rbx, rdi	        29	dump_stack.c	FUNCTION_1
0x400004e	    0x48c7c7000000	                              mov rdi, 0	        29	dump_stack.c	FUNCTION_1
0x4000055	      0xe800000000	                          call 0x400005a	        33	dump_stack.c	FUNCTION_1	CALL_2
0x400005a	          0x4989c4	                            mov r12, rax	        29	dump_stack.c	FUNCTION_1
0x400005d	      0xe800000000	                          call 0x4000062	        29	dump_stack.c	FUNCTION_1
0x4000062	          0x4889c5	                            mov rbp, rax	        29	dump_stack.c	FUNCTION_1
0x4000065	      0xe800000000	                          call 0x400006a	        32	dump_stack.c	FUNCTION_1	CALL_1
0x400006a	    0x49c7c1000000	                               mov r9, 0	        29	dump_stack.c	FUNCTION_1
0x4000071	            0x85c0	                           test eax, eax	        33	dump_stack.c	FUNCTION_1	CALL_2
0x4000073	    0x48c7c0000000	                              mov rax, 0	        33	dump_stack.c	FUNCTION_1	CALL_2
0x400007a	        0x4c0f45c8	                          cmovne r9, rax	        33	dump_stack.c	FUNCTION_1	CALL_2
0x400007e	          0x4889de	                            mov rsi, rbx	        33	dump_stack.c	FUNCTION_1	CALL_2
0x4000081	    0x48c7c7000000	                              mov rdi, 0	        29	dump_stack.c	FUNCTION_1
0x4000088	    0x65488b042500	                   mov rax, qword gs:[0]	        32	dump_stack.c	FUNCTION_1	CALL_1
0x4000091	    0x8b8888040000	           mov ecx, dword [rax + 0x488] 	        32	dump_stack.c	FUNCTION_1	CALL_1
0x4000097	    0x4c8d80300600	                   lea r8, [rax + 0x630]	        33	dump_stack.c	FUNCTION_1	CALL_2
0x400009e	      0x6800000000	                                  push 0	        36	dump_stack.c	FUNCTION_1
0x40000a3	            0x4154	                                push r12	        36	dump_stack.c	FUNCTION_1
0x40000a5	      0x6800000000	                                  push 0	        36	dump_stack.c	FUNCTION_1
0x40000aa	              0x55	                                push rbp	        36	dump_stack.c	FUNCTION_1
0x40000ab	    0x658b15000000	         mov edx, dword gs:[0x040000b2] 	        36	dump_stack.c	FUNCTION_1
0x40000b2	      0xe800000000	                          call 0x40000b7	        36	dump_stack.c	FUNCTION_1
0x40000b7	              0x48	                                 invalid	        36	dump_stack.c	FUNCTION_1
dump_stack	IF,0:WHILE,0:DO,0:CALL,1:ELSE,0:FOR,0:SWITCH,0:functions,0	21
0x4000040	            0x4154	                                push r12	        29	dump_stack.c	FUNCTION_1
0x4000042	              0x55	                                push rbp	        29	dump_stack.c	FUNCTION_1
0x4000043	    0x48c7c6000000	                              mov rsi, 0	        29	dump_stack.c	FUNCTION_1
0x400004a	              0x53	                                push rbx	        29	dump_stack.c	FUNCTION_1
0x400004b	          0x4889fb	                            mov rbx, rdi	        29	dump_stack.c	FUNCTION_1
0x400004e	    0x48c7c7000000	                              mov rdi, 0	        29	dump_stack.c	FUNCTION_1
0x4000055	      0xe800000000	                          call 0x400005a	        33	dump_stack.c	FUNCTION_1	CALL_2
0x400005a	          0x4989c4	                            mov r12, rax	        29	dump_stack.c	FUNCTION_1
0x400005d	      0xe800000000	                          call 0x4000062	        29	dump_stack.c	FUNCTION_1
0x4000062	          0x4889c5	                            mov rbp, rax	        29	dump_stack.c	FUNCTION_1
0x4000065	      0xe800000000	                          call 0x400006a	        32	dump_stack.c	FUNCTION_1	CALL_1
0x400006a	    0x49c7c1000000	                               mov r9, 0	        29	dump_stack.c	FUNCTION_1
0x4000071	            0x85c0	                           test eax, eax	        33	dump_stack.c	FUNCTION_1	CALL_2
0x4000073	    0x48c7c0000000	                              mov rax, 0	        33	dump_stack.c	FUNCTION_1	CALL_2
0x400007a	        0x4c0f45c8	                          cmovne r9, rax	        33	dump_stack.c	FUNCTION_1	CALL_2
0x400007e	          0x4889de	                            mov rsi, rbx	        33	dump_stack.c	FUNCTION_1	CALL_2
0x4000081	    0x48c7c7000000	                              mov rdi, 0	        29	dump_stack.c	FUNCTION_1
0x4000088	    0x65488b042500	                   mov rax, qword gs:[0]	        32	dump_stack.c	FUNCTION_1	CALL_1
0x4000091	    0x8b8888040000	           mov ecx, dword [rax + 0x488] 	        32	dump_stack.c	FUNCTION_1	CALL_1
0x4000097	              0x4c	                                 invalid	        33	dump_stack.c	FUNCTION_1	CALL_2
0x4000098	              0x8d	                                 invalid	        33	dump_stack.c	FUNCTION_1	CALL_2
