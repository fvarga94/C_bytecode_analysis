smbus_alert	SWITCH,0:ELSE,0:functions,0:WHILE,0:DO,0:FOR,1:CALL,4:IF,2	41
0x4000070	              0x55	                                push rbp	        75	i2c-smbus.c	FUNCTION_2
0x4000071	              0x53	                                push rbx	        75	i2c-smbus.c	FUNCTION_2
0x4000072	            0x31ed	                            xor ebp, ebp	        78	i2c-smbus.c	FUNCTION_2
0x4000074	        0x4883ec18	                           sub rsp, 0x18	        75	i2c-smbus.c	FUNCTION_2
0x4000078	        0x488b5e20	            mov rbx, qword [rsi + 0x20] 	        80	i2c-smbus.c	FUNCTION_2
0x400007c	    0x65488b042528	                mov rax, qword gs:[0x28]	        75	i2c-smbus.c	FUNCTION_2
0x4000085	      0x4889442410	             mov qword [rsp + 0x10], rax	        75	i2c-smbus.c	FUNCTION_2
0x400008a	            0x31c0	                            xor eax, eax	        75	i2c-smbus.c	FUNCTION_2
0x400008c	            0xeb3b	                           jmp 0x40000c9	        75	i2c-smbus.c	FUNCTION_2
0x400008e	            0x89c2	                            mov edx, eax	        98	i2c-smbus.c	FUNCTION_2	FOR_1
0x4000090	            0xd1f8	                              sar eax, 1	        99	i2c-smbus.c	FUNCTION_2	FOR_1
0x4000092	    0xc74424080000	                  mov dword [rsp + 8], 0	       100	i2c-smbus.c	FUNCTION_2	FOR_1
0x400009a	          0x83e201	                              and edx, 1	        98	i2c-smbus.c	FUNCTION_2	FOR_1
0x400009d	          0x6639c5	                              cmp bp, ax	       102	i2c-smbus.c	FUNCTION_2	FOR_1	IF_2
0x40000a0	      0x6689442404	                  mov word [rsp + 4], ax	        99	i2c-smbus.c	FUNCTION_2	FOR_1
0x40000a5	        0x8954240c	              mov dword [rsp + 0xc], edx	        98	i2c-smbus.c	FUNCTION_2	FOR_1
0x40000a9	            0x7446	                            je 0x40000f1	       102	i2c-smbus.c	FUNCTION_2	FOR_1	IF_2
0x40000ab	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       111	i2c-smbus.c	FUNCTION_2	FOR_1	CALL_4
0x40000af	      0x488d742404	                      lea rsi, [rsp + 4]	       111	i2c-smbus.c	FUNCTION_2	FOR_1	CALL_4
0x40000b4	    0x48c7c2000000	                              mov rdx, 0	       111	i2c-smbus.c	FUNCTION_2	FOR_1	CALL_4
0x40000bb	        0x488d7870	                   lea rdi, [rax + 0x70]	       111	i2c-smbus.c	FUNCTION_2	FOR_1	CALL_4
0x40000bf	      0xe800000000	                          call 0x40000c4	       111	i2c-smbus.c	FUNCTION_2	FOR_1	CALL_4
0x40000c4	       0xfb76c2404	               movzx ebp, word [rsp + 4]	       113	i2c-smbus.c	FUNCTION_2	FOR_1
0x40000c9	          0x4889df	                            mov rdi, rbx	        94	i2c-smbus.c	FUNCTION_2	FOR_1	CALL_1
0x40000cc	      0xe800000000	                          call 0x40000d1	        94	i2c-smbus.c	FUNCTION_2	FOR_1	CALL_1
0x40000d1	            0x85c0	                           test eax, eax	        95	i2c-smbus.c	FUNCTION_2	FOR_1	IF_1
0x40000d3	            0x79b9	                           jns 0x400008e	        95	i2c-smbus.c	FUNCTION_2	FOR_1	IF_1
0x40000d5	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       117	i2c-smbus.c	FUNCTION_2
0x40000da	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       117	i2c-smbus.c	FUNCTION_2
0x40000e3	      0xb801000000	                              mov eax, 1	       117	i2c-smbus.c	FUNCTION_2
0x40000e8	            0x751c	                           jne 0x4000106	       117	i2c-smbus.c	FUNCTION_2
0x40000ea	        0x4883c418	                           add rsp, 0x18	       117	i2c-smbus.c	FUNCTION_2
0x40000ee	              0x5b	                                 pop rbx	       117	i2c-smbus.c	FUNCTION_2
0x40000ef	              0x5d	                                 pop rbp	       117	i2c-smbus.c	FUNCTION_2
0x40000f0	              0xc3	                                     ret	       117	i2c-smbus.c	FUNCTION_2
0x40000f1	        0x488d7b20	                   lea rdi, [rbx + 0x20]	       103	i2c-smbus.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x40000f5	           0xfb7d0	                           movzx edx, ax	       103	i2c-smbus.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x40000f8	    0x48c7c6000000	                              mov rsi, 0	       103	i2c-smbus.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x40000ff	      0xe800000000	                          call 0x4000104	       103	i2c-smbus.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x4000104	            0xebcf	                           jmp 0x40000d5	       105	i2c-smbus.c	FUNCTION_2	FOR_1	IF_2
0x4000106	      0xe800000000	                          call 0x400010b	       117	i2c-smbus.c	FUNCTION_2
smbalert_remove	SWITCH,0:ELSE,0:functions,0:WHILE,0:DO,0:FOR,0:CALL,2:IF,0	4
0x4000060	    0x488bbfb80000	            mov rdi, qword [rdi + 0xb8] 	       174	i2c-smbus.c	FUNCTION_5	CALL_2
0x4000067	      0xe800000000	                          call 0x400006c	       174	i2c-smbus.c	FUNCTION_5	CALL_2
0x400006c	            0x31c0	                            xor eax, eax	       176	i2c-smbus.c	FUNCTION_5
0x400006e	              0xc3	                                     ret	       176	i2c-smbus.c	FUNCTION_5
smbalert_work	SWITCH,0:ELSE,0:functions,0:WHILE,0:DO,0:FOR,0:CALL,2:IF,0	3
0x4000110	          0x4889fe	                            mov rsi, rdi	       120	i2c-smbus.c	FUNCTION_3
0x4000113	            0x31ff	                            xor edi, edi	       125	i2c-smbus.c	FUNCTION_3	CALL_2
0x4000115	      0xe956ffffff	                     jmp sym.smbus_alert	       125	i2c-smbus.c	FUNCTION_3	CALL_2
