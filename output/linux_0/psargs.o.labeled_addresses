acpi_ps_get_next_package_end	IF,0:WHILE,0:ELSE,0:SWITCH,0:DO,0:CALL,3:functions,0:FOR,0	6
0x4000080	        0x4c8b4f08	                 mov r9, qword [rdi + 8]	        96	psargs.c	FUNCTION_2
0x4000084	        0x4883c708	                              add rdi, 8	        96	psargs.c	FUNCTION_2
0x4000088	      0xe8b3ffffff	call sym.acpi_ps_get_next_package_length.isra.0	       103	psargs.c	FUNCTION_2	CALL_2
0x400008d	            0x89c0	                            mov eax, eax	       105	psargs.c	FUNCTION_2	CALL_3
0x400008f	          0x4c01c8	                             add rax, r9	       105	psargs.c	FUNCTION_2	CALL_3
0x4000092	              0xc3	                                     ret	       106	psargs.c	FUNCTION_2
acpi_ps_get_next_simple_arg	IF,0:WHILE,1:ELSE,0:SWITCH,1:DO,0:CALL,9:functions,0:FOR,0	61
0x40002d3	        0x448d46ff	                      lea r8d, [rsi - 1]	       371	psargs.c	FUNCTION_5	SWITCH_1
0x40002d7	            0x4154	                                push r12	       364	psargs.c	FUNCTION_5
0x40002d9	            0x89f1	                            mov ecx, esi	       364	psargs.c	FUNCTION_5
0x40002db	              0x55	                                push rbp	       364	psargs.c	FUNCTION_5
0x40002dc	              0x53	                                push rbx	       364	psargs.c	FUNCTION_5
0x40002dd	        0x4183f810	                           cmp r8d, 0x10	       371	psargs.c	FUNCTION_5	SWITCH_1
0x40002e1	        0x488b4708	                mov rax, qword [rdi + 8]	       367	psargs.c	FUNCTION_5
0x40002e5	     0xf8794000000	                            ja 0x400037f	       371	psargs.c	FUNCTION_5	SWITCH_1
0x40002eb	          0x4889d5	                            mov rbp, rdx	       371	psargs.c	FUNCTION_5	SWITCH_1
0x40002ee	    0x4a8b14c50000	                   mov rdx, qword [r8*8]	       371	psargs.c	FUNCTION_5	SWITCH_1
0x40002f6	          0x4989fc	                            mov r12, rdi	       371	psargs.c	FUNCTION_5	SWITCH_1
0x40002f9	      0xe900000000	                           jmp 0x40002fe	       371	psargs.c	FUNCTION_5	SWITCH_1
0x40002fe	           0xfb600	                   movzx eax, byte [rax]	       377	psargs.c	FUNCTION_5	SWITCH_1
0x4000301	      0xbe0a000000	                            mov esi, 0xa	       376	psargs.c	FUNCTION_5	SWITCH_1
0x4000306	      0xbb01000000	                              mov ebx, 1	       378	psargs.c	FUNCTION_5	SWITCH_1
0x400030b	        0x48894528	            mov qword [rbp + 0x28], rax 	       377	psargs.c	FUNCTION_5	SWITCH_1
0x400030f	      0xe987000000	                           jmp 0x400039b	       379	psargs.c	FUNCTION_5	SWITCH_1
0x4000314	           0xfb700	                   movzx eax, word [rax]	       386	psargs.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000317	      0xbe0b000000	                            mov esi, 0xb	       385	psargs.c	FUNCTION_5	SWITCH_1
0x400031c	      0xbb02000000	                              mov ebx, 2	       387	psargs.c	FUNCTION_5	SWITCH_1
0x4000321	        0x48894528	            mov qword [rbp + 0x28], rax 	       386	psargs.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000325	            0xeb74	                           jmp 0x400039b	       388	psargs.c	FUNCTION_5	SWITCH_1
0x4000327	            0x8b00	                    mov eax, dword [rax]	       395	psargs.c	FUNCTION_5	SWITCH_1	CALL_3
0x4000329	      0xbe0c000000	                            mov esi, 0xc	       394	psargs.c	FUNCTION_5	SWITCH_1
0x400032e	      0xbb04000000	                              mov ebx, 4	       396	psargs.c	FUNCTION_5	SWITCH_1
0x4000333	        0x48894528	            mov qword [rbp + 0x28], rax 	       395	psargs.c	FUNCTION_5	SWITCH_1	CALL_3
0x4000337	            0xeb62	                           jmp 0x400039b	       397	psargs.c	FUNCTION_5	SWITCH_1
0x4000339	          0x488b00	                    mov rax, qword [rax]	       404	psargs.c	FUNCTION_5	SWITCH_1	CALL_4
0x400033c	      0xbe0e000000	                            mov esi, 0xe	       403	psargs.c	FUNCTION_5	SWITCH_1
0x4000341	      0xbb08000000	                              mov ebx, 8	       405	psargs.c	FUNCTION_5	SWITCH_1
0x4000346	        0x48894528	            mov qword [rbp + 0x28], rax 	       404	psargs.c	FUNCTION_5	SWITCH_1	CALL_4
0x400034a	            0xeb4f	                           jmp 0x400039b	       406	psargs.c	FUNCTION_5	SWITCH_1
0x400034c	        0x48894528	            mov qword [rbp + 0x28], rax 	       413	psargs.c	FUNCTION_5	SWITCH_1	CALL_5
0x4000350	            0x31db	                            xor ebx, ebx	       417	psargs.c	FUNCTION_5	SWITCH_1
0x4000352	            0x89da	                            mov edx, ebx	       418	psargs.c	FUNCTION_5	SWITCH_1	WHILE_1
0x4000354	          0x8d5b01	                      lea ebx, [rbx + 1]	       418	psargs.c	FUNCTION_5	SWITCH_1	WHILE_1
0x4000357	        0x803c1000	                 cmp byte [rax + rdx], 0	       418	psargs.c	FUNCTION_5	SWITCH_1	WHILE_1
0x400035b	            0x75f5	                           jne 0x4000352	       418	psargs.c	FUNCTION_5	SWITCH_1	WHILE_1
0x400035d	      0xbe0d000000	                            mov esi, 0xd	       412	psargs.c	FUNCTION_5	SWITCH_1
0x4000362	            0xeb37	                           jmp 0x400039b	       422	psargs.c	FUNCTION_5	SWITCH_1
0x4000364	      0xbe2d000000	                           mov esi, 0x2d	       427	psargs.c	FUNCTION_5	SWITCH_1	CALL_6
0x4000369	          0x4889ef	                            mov rdi, rbp	       427	psargs.c	FUNCTION_5	SWITCH_1	CALL_6
0x400036c	      0xe800000000	                          call 0x4000371	       427	psargs.c	FUNCTION_5	SWITCH_1	CALL_6
0x4000371	          0x4c89e7	                            mov rdi, r12	       429	psargs.c	FUNCTION_5	SWITCH_1	CALL_7
0x4000374	      0xe800000000	                          call 0x4000379	       429	psargs.c	FUNCTION_5	SWITCH_1	CALL_7
0x4000379	        0x48894528	            mov qword [rbp + 0x28], rax 	       428	psargs.c	FUNCTION_5	SWITCH_1
0x400037d	            0xeb29	                           jmp 0x40003a8	       430	psargs.c	FUNCTION_5	SWITCH_1
0x400037f	              0x5b	                                 pop rbx	       441	psargs.c	FUNCTION_5
0x4000380	              0x5d	                                 pop rbp	       441	psargs.c	FUNCTION_5
0x4000381	            0x415c	                                 pop r12	       441	psargs.c	FUNCTION_5
0x4000383	    0x48c7c2000000	                              mov rdx, 0	       434	psargs.c	FUNCTION_5	SWITCH_1	CALL_8
0x400038a	      0xbeb2010000	                          mov esi, 0x1b2	       434	psargs.c	FUNCTION_5	SWITCH_1	CALL_8
0x400038f	    0x48c7c7000000	                              mov rdi, 0	       434	psargs.c	FUNCTION_5	SWITCH_1	CALL_8
0x4000396	      0xe900000000	                           jmp 0x400039b	       434	psargs.c	FUNCTION_5	SWITCH_1	CALL_8
0x400039b	          0x4889ef	                            mov rdi, rbp	       438	psargs.c	FUNCTION_5	CALL_9
0x400039e	      0xe800000000	                          call 0x40003a3	       438	psargs.c	FUNCTION_5	CALL_9
0x40003a3	      0x49015c2408	                add qword [r12 + 8], rbx	       439	psargs.c	FUNCTION_5
0x40003a8	              0x5b	                                 pop rbx	       441	psargs.c	FUNCTION_5
0x40003a9	              0x5d	                                 pop rbp	       441	psargs.c	FUNCTION_5
0x40003aa	            0x415c	                                 pop r12	       441	psargs.c	FUNCTION_5
0x40003ac	              0xc3	                                     ret	       441	psargs.c	FUNCTION_5
acpi_ps_get_next_namepath	IF,11:WHILE,0:ELSE,2:SWITCH,0:DO,0:CALL,23:functions,0:FOR,0	130
0x40000e6	            0x4156	                                push r14	       200	psargs.c	FUNCTION_4
0x40000e8	            0x4155	                                push r13	       200	psargs.c	FUNCTION_4
0x40000ea	          0x4189ce	                           mov r14d, ecx	       200	psargs.c	FUNCTION_4
0x40000ed	            0x4154	                                push r12	       200	psargs.c	FUNCTION_4
0x40000ef	              0x55	                                push rbp	       200	psargs.c	FUNCTION_4
0x40000f0	          0x4889d5	                            mov rbp, rdx	       200	psargs.c	FUNCTION_4
0x40000f3	              0x53	                                push rbx	       200	psargs.c	FUNCTION_4
0x40000f4	          0x4889fb	                            mov rbx, rdi	       200	psargs.c	FUNCTION_4
0x40000f7	          0x4889f7	                            mov rdi, rsi	       210	psargs.c	FUNCTION_4	CALL_2
0x40000fa	        0x4883ec18	                           sub rsp, 0x18	       200	psargs.c	FUNCTION_4
0x40000fe	        0x4c8b6e08	                mov r13, qword [rsi + 8]	       206	psargs.c	FUNCTION_4
0x4000102	    0x65488b042528	                mov rax, qword gs:[0x28]	       200	psargs.c	FUNCTION_4
0x400010b	      0x4889442410	             mov qword [rsp + 0x10], rax	       200	psargs.c	FUNCTION_4
0x4000110	            0x31c0	                            xor eax, eax	       200	psargs.c	FUNCTION_4
0x4000112	      0xe800000000	                          call 0x4000117	       210	psargs.c	FUNCTION_4	CALL_2
0x4000117	      0xbe2d000000	                           mov esi, 0x2d	       211	psargs.c	FUNCTION_4	CALL_3
0x400011c	          0x4989c4	                            mov r12, rax	       210	psargs.c	FUNCTION_4	CALL_2
0x400011f	          0x4889ef	                            mov rdi, rbp	       211	psargs.c	FUNCTION_4	CALL_3
0x4000122	      0xe800000000	                          call 0x4000127	       211	psargs.c	FUNCTION_4	CALL_3
0x4000127	          0x4d85e4	                           test r12, r12	       215	psargs.c	FUNCTION_4	IF_1
0x400012a	            0x750d	                           jne 0x4000139	       215	psargs.c	FUNCTION_4	IF_1
0x400012c	    0x48c745280000	               mov qword [rbp + 0x28], 0	       216	psargs.c	FUNCTION_4	IF_1
0x4000134	      0xe9f6000000	                           jmp 0x400022f	       216	psargs.c	FUNCTION_4	IF_1
0x4000139	      0x488d442408	                      lea rax, [rsp + 8]	       228	psargs.c	FUNCTION_4	CALL_5
0x400013e	    0x488bbba80300	           mov rdi, qword [rbx + 0x3a8] 	       228	psargs.c	FUNCTION_4	CALL_5
0x4000145	            0x31d2	                            xor edx, edx	       228	psargs.c	FUNCTION_4	CALL_5
0x4000147	          0x4531c9	                            xor r9d, r9d	       228	psargs.c	FUNCTION_4	CALL_5
0x400014a	    0x41b803000000	                              mov r8d, 3	       228	psargs.c	FUNCTION_4	CALL_5
0x4000150	      0xb903000000	                              mov ecx, 3	       228	psargs.c	FUNCTION_4	CALL_5
0x4000155	              0x50	                                push rax	       228	psargs.c	FUNCTION_4	CALL_5
0x4000156	          0x4c89e6	                            mov rsi, r12	       228	psargs.c	FUNCTION_4	CALL_5
0x4000159	      0xe800000000	                          call 0x400015e	       228	psargs.c	FUNCTION_4	CALL_5
0x400015e	            0x85c0	                           test eax, eax	       237	psargs.c	FUNCTION_4	IF_2	CALL_6
0x4000160	              0x5a	                                 pop rdx	       237	psargs.c	FUNCTION_4	IF_2	CALL_6
0x4000161	     0xf85cc000000	                           jne 0x4000233	       237	psargs.c	FUNCTION_4	IF_2	CALL_6
0x4000167	          0x4584f6	                         test r14b, r14b	       237	psargs.c	FUNCTION_4	IF_2	CALL_6
0x400016a	     0xf84c3000000	                            je 0x4000233	       237	psargs.c	FUNCTION_4	IF_2	CALL_6
0x4000170	      0x488b542408	                mov rdx, qword [rsp + 8]	       238	psargs.c	FUNCTION_4	IF_2
0x4000175	        0x807a0908	                   cmp byte [rdx + 9], 8	       238	psargs.c	FUNCTION_4	IF_2
0x4000179	     0xf852e010000	                           jne 0x40002ad	       238	psargs.c	FUNCTION_4	IF_2
0x400017f	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       239	psargs.c	FUNCTION_4	IF_2	IF_3	CALL_7
0x4000182	          0x83e01f	                           and eax, 0x1f	       239	psargs.c	FUNCTION_4	IF_2	IF_3	CALL_7
0x4000185	          0x83e80c	                            sub eax, 0xc	       239	psargs.c	FUNCTION_4	IF_2	IF_3	CALL_7
0x4000188	          0x83f801	                              cmp eax, 1	       239	psargs.c	FUNCTION_4	IF_2	IF_3	CALL_7
0x400018b	            0x771b	                            ja 0x40001a8	       239	psargs.c	FUNCTION_4	IF_2	IF_3	CALL_7
0x400018d	        0x4c896b38	             mov qword [rbx + 0x38], r13	       249	psargs.c	FUNCTION_4	IF_2	IF_3
0x4000191	    0xc78384000000	               mov dword [rbx + 0x84], 1	       250	psargs.c	FUNCTION_4	IF_2	IF_3
0x400019b	      0xbe35000000	                           mov esi, 0x35	       251	psargs.c	FUNCTION_4	IF_2	IF_3	CALL_9
0x40001a0	          0x4889ef	                            mov rdi, rbp	       251	psargs.c	FUNCTION_4	IF_2	IF_3	CALL_9
0x40001a3	      0xe800000000	                          call 0x40001a8	       251	psargs.c	FUNCTION_4	IF_2	IF_3	CALL_9
0x40001a8	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       256	psargs.c	FUNCTION_4	IF_2	CALL_10
0x40001ad	      0xe800000000	                          call 0x40001b2	       256	psargs.c	FUNCTION_4	IF_2	CALL_10
0x40001b2	          0x4c89ee	                            mov rsi, r13	       261	psargs.c	FUNCTION_4	IF_2	CALL_12
0x40001b5	      0xbf2d000000	                           mov edi, 0x2d	       261	psargs.c	FUNCTION_4	IF_2	CALL_12
0x40001ba	          0x4989c6	                            mov r14, rax	       256	psargs.c	FUNCTION_4	IF_2	CALL_10
0x40001bd	      0xe800000000	                          call 0x40001c2	       261	psargs.c	FUNCTION_4	IF_2	CALL_12
0x40001c2	          0x4989c5	                            mov r13, rax	       261	psargs.c	FUNCTION_4	IF_2	CALL_12
0x40001c5	      0xb804000000	                              mov eax, 4	       263	psargs.c	FUNCTION_4	IF_2	IF_4	CALL_13
0x40001ca	          0x4d85ed	                           test r13, r13	       262	psargs.c	FUNCTION_4	IF_2	IF_4
0x40001cd	     0xf84de000000	                            je 0x40002b1	       262	psargs.c	FUNCTION_4	IF_2	IF_4
0x40001d3	      0xbe35000000	                           mov esi, 0x35	       268	psargs.c	FUNCTION_4	IF_2	CALL_14
0x40001d8	          0x4889ef	                            mov rdi, rbp	       268	psargs.c	FUNCTION_4	IF_2	CALL_14
0x40001db	      0xe800000000	                          call 0x40001e0	       268	psargs.c	FUNCTION_4	IF_2	CALL_14
0x40001e0	      0x488b442408	                mov rax, qword [rsp + 8]	       273	psargs.c	FUNCTION_4	IF_2
0x40001e5	        0x4d896528	             mov qword [r13 + 0x28], r12	       269	psargs.c	FUNCTION_4	IF_2
0x40001e9	          0x4c89ee	                            mov rsi, r13	       274	psargs.c	FUNCTION_4	IF_2	CALL_15
0x40001ec	          0x4889ef	                            mov rdi, rbp	       274	psargs.c	FUNCTION_4	IF_2	CALL_15
0x40001ef	        0x49894520	             mov qword [r13 + 0x20], rax	       273	psargs.c	FUNCTION_4	IF_2
0x40001f3	      0xe800000000	                          call 0x40001f8	       274	psargs.c	FUNCTION_4	IF_2	CALL_15
0x40001f8	          0x4d85f6	                           test r14, r14	       276	psargs.c	FUNCTION_4	IF_2	IF_5
0x40001fb	            0x7527	                           jne 0x4000224	       276	psargs.c	FUNCTION_4	IF_2	IF_5
0x40001fd	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       277	psargs.c	FUNCTION_4	IF_2	IF_5	CALL_16
0x4000202	    0x48c7c2000000	                              mov rdx, 0	       277	psargs.c	FUNCTION_4	IF_2	IF_5	CALL_16
0x4000209	      0xbe17010000	                          mov esi, 0x117	       277	psargs.c	FUNCTION_4	IF_2	IF_5	CALL_16
0x400020e	    0x48c7c7000000	                              mov rdi, 0	       277	psargs.c	FUNCTION_4	IF_2	IF_5	CALL_16
0x4000215	      0xe800000000	                          call 0x400021a	       277	psargs.c	FUNCTION_4	IF_2	IF_5	CALL_16
0x400021a	      0xb80f300000	                         mov eax, 0x300f	       280	psargs.c	FUNCTION_4	IF_2	IF_5	CALL_17
0x400021f	      0xe98d000000	                           jmp 0x40002b1	       280	psargs.c	FUNCTION_4	IF_2	IF_5	CALL_17
0x4000224	      0x410fb6460e	            movzx eax, byte [r14 + 0xe] 	       289	psargs.c	FUNCTION_4	IF_2
0x4000229	    0x898384000000	             mov dword [rbx + 0x84], eax	       289	psargs.c	FUNCTION_4	IF_2
0x400022f	            0x31c0	                            xor eax, eax	       290	psargs.c	FUNCTION_4	IF_2	CALL_19
0x4000231	            0xeb7e	                           jmp 0x40002b1	       290	psargs.c	FUNCTION_4	IF_2	CALL_19
0x4000233	          0x83f805	                              cmp eax, 5	       297	psargs.c	FUNCTION_4	IF_6
0x4000236	            0x7532	                           jne 0x400026a	       297	psargs.c	FUNCTION_4	IF_6
0x4000238	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	       301	psargs.c	FUNCTION_4	IF_6	IF_7
0x400023b	          0x83e230	                           and edx, 0x30	       301	psargs.c	FUNCTION_4	IF_6	IF_7
0x400023e	          0x83fa30	                           cmp edx, 0x30	       301	psargs.c	FUNCTION_4	IF_6	IF_7
0x4000241	            0x7568	                           jne 0x40002ab	       301	psargs.c	FUNCTION_4	IF_6	IF_7
0x4000243	    0x488b93780300	           mov rdx, qword [rbx + 0x378] 	       308	psargs.c	FUNCTION_4	IF_6	ELSE_1	IF_8
0x400024a	    0x66817a0a125b	           cmp word [rdx + 0xa], 0x5b12 	       308	psargs.c	FUNCTION_4	IF_6	ELSE_1	IF_8
0x4000250	            0x7459	                            je 0x40002ab	       308	psargs.c	FUNCTION_4	IF_6	ELSE_1	IF_8
0x4000252	        0x488b5500	                    mov rdx, qword [rbp]	       318	psargs.c	FUNCTION_4	IF_6	ELSE_2	IF_9
0x4000256	          0x4885d2	                           test rdx, rdx	       318	psargs.c	FUNCTION_4	IF_6	ELSE_2	IF_9
0x4000259	            0x7413	                            je 0x400026e	       318	psargs.c	FUNCTION_4	IF_6	ELSE_2	IF_9
0x400025b	        0x668b520a	                mov dx, word [rdx + 0xa]	       318	psargs.c	FUNCTION_4	IF_6	ELSE_2	IF_9
0x400025f	          0x83ea12	                           sub edx, 0x12	       318	psargs.c	FUNCTION_4	IF_6	ELSE_2	IF_9
0x4000262	        0x6683fa01	                               cmp dx, 1	       318	psargs.c	FUNCTION_4	IF_6	ELSE_2	IF_9
0x4000266	            0x7706	                            ja 0x400026e	       318	psargs.c	FUNCTION_4	IF_6	ELSE_2	IF_9
0x4000268	            0xeb41	                           jmp 0x40002ab	       318	psargs.c	FUNCTION_4	IF_6	ELSE_2	IF_9
0x400026a	            0x85c0	                           test eax, eax	       329	psargs.c	FUNCTION_4	IF_10	CALL_20
0x400026c	            0x743f	                            je 0x40002ad	       329	psargs.c	FUNCTION_4	IF_10	CALL_20
0x400026e	    0x488b93a80300	           mov rdx, qword [rbx + 0x3a8] 	       330	psargs.c	FUNCTION_4	IF_10	CALL_21
0x4000275	          0x4189c0	                            mov r8d, eax	       330	psargs.c	FUNCTION_4	IF_10	CALL_21
0x4000278	          0x4c89e1	                            mov rcx, r12	       330	psargs.c	FUNCTION_4	IF_10	CALL_21
0x400027b	      0xbe4a010000	                          mov esi, 0x14a	       330	psargs.c	FUNCTION_4	IF_10	CALL_21
0x4000280	    0x48c7c7000000	                              mov rdi, 0	       330	psargs.c	FUNCTION_4	IF_10	CALL_21
0x4000287	        0x89442404	                mov dword [rsp + 4], eax	       330	psargs.c	FUNCTION_4	IF_10	CALL_21
0x400028b	      0xe800000000	                          call 0x4000290	       330	psargs.c	FUNCTION_4	IF_10	CALL_21
0x4000290	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	       332	psargs.c	FUNCTION_4	IF_10	IF_11
0x4000293	        0x8b442404	                mov eax, dword [rsp + 4]	       332	psargs.c	FUNCTION_4	IF_10	IF_11
0x4000297	          0x83e230	                           and edx, 0x30	       332	psargs.c	FUNCTION_4	IF_10	IF_11
0x400029a	          0x83fa30	                           cmp edx, 0x30	       332	psargs.c	FUNCTION_4	IF_10	IF_11
0x400029d	            0x750e	                           jne 0x40002ad	       332	psargs.c	FUNCTION_4	IF_10	IF_11
0x400029f	          0x4889de	                            mov rsi, rbx	       337	psargs.c	FUNCTION_4	IF_10	IF_11	CALL_22
0x40002a2	            0x89c7	                            mov edi, eax	       337	psargs.c	FUNCTION_4	IF_10	IF_11	CALL_22
0x40002a4	      0xe800000000	                          call 0x40002a9	       337	psargs.c	FUNCTION_4	IF_10	IF_11	CALL_22
0x40002a9	            0xeb02	                           jmp 0x40002ad	       337	psargs.c	FUNCTION_4	IF_10	IF_11	CALL_22
0x40002ab	            0x31c0	                            xor eax, eax	       337	psargs.c	FUNCTION_4	IF_10	IF_11	CALL_22
0x40002ad	        0x4c896528	            mov qword [rbp + 0x28], r12 	       343	psargs.c	FUNCTION_4
0x40002b1	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       345	psargs.c	FUNCTION_4
0x40002b6	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       345	psargs.c	FUNCTION_4
0x40002bf	            0x7405	                            je 0x40002c6	       345	psargs.c	FUNCTION_4
0x40002c1	      0xe800000000	                          call 0x40002c6	       345	psargs.c	FUNCTION_4
0x40002c6	        0x4883c418	                           add rsp, 0x18	       345	psargs.c	FUNCTION_4
0x40002ca	              0x5b	                                 pop rbx	       345	psargs.c	FUNCTION_4
0x40002cb	              0x5d	                                 pop rbp	       345	psargs.c	FUNCTION_4
0x40002cc	            0x415c	                                 pop r12	       345	psargs.c	FUNCTION_4
0x40002ce	            0x415d	                                 pop r13	       345	psargs.c	FUNCTION_4
0x40002d0	            0x415e	                                 pop r14	       345	psargs.c	FUNCTION_4
0x40002d2	              0xc3	                                     ret	       345	psargs.c	FUNCTION_4
acpi_ps_get_next_arg	IF,12:WHILE,1:ELSE,3:SWITCH,1:DO,0:CALL,36:functions,0:FOR,0	286
0x40003ad	          0x8d42ff	                      lea eax, [rdx - 1]	       719	psargs.c	FUNCTION_7	SWITCH_1
0x40003b0	            0x4157	                                push r15	       706	psargs.c	FUNCTION_7
0x40003b2	            0x4156	                                push r14	       706	psargs.c	FUNCTION_7
0x40003b4	          0x4989ce	                            mov r14, rcx	       706	psargs.c	FUNCTION_7
0x40003b7	            0x4155	                                push r13	       706	psargs.c	FUNCTION_7
0x40003b9	          0x4189d5	                           mov r13d, edx	       706	psargs.c	FUNCTION_7
0x40003bc	          0x83f812	                           cmp eax, 0x12	       719	psargs.c	FUNCTION_7	SWITCH_1
0x40003bf	            0x4154	                                push r12	       706	psargs.c	FUNCTION_7
0x40003c1	              0x55	                                push rbp	       706	psargs.c	FUNCTION_7
0x40003c2	              0x53	                                push rbx	       706	psargs.c	FUNCTION_7
0x40003c3	            0x4150	                                 push r8	       706	psargs.c	FUNCTION_7
0x40003c5	     0xf879a030000	                            ja 0x4000765	       719	psargs.c	FUNCTION_7	SWITCH_1
0x40003cb	    0x488b04c50000	                  mov rax, qword [rax*8]	       719	psargs.c	FUNCTION_7	SWITCH_1
0x40003d3	          0x4989fc	                            mov r12, rdi	       719	psargs.c	FUNCTION_7	SWITCH_1
0x40003d6	          0x4889f3	                            mov rbx, rsi	       719	psargs.c	FUNCTION_7	SWITCH_1
0x40003d9	      0xe900000000	                           jmp 0x40003de	       719	psargs.c	FUNCTION_7	SWITCH_1
0x40003de	        0x488b7608	                mov rsi, qword [rsi + 8]	       729	psargs.c	FUNCTION_7	SWITCH_1	CALL_4
0x40003e2	      0xbf0a000000	                            mov edi, 0xa	       729	psargs.c	FUNCTION_7	SWITCH_1	CALL_4
0x40003e7	      0xe800000000	                          call 0x40003ec	       729	psargs.c	FUNCTION_7	SWITCH_1	CALL_4
0x40003ec	          0x4885c0	                           test rax, rax	       730	psargs.c	FUNCTION_7	SWITCH_1	IF_1
0x40003ef	          0x4889c5	                            mov rbp, rax	       729	psargs.c	FUNCTION_7	SWITCH_1	CALL_4
0x40003f2	     0xf8498030000	                            je 0x4000790	       730	psargs.c	FUNCTION_7	SWITCH_1	IF_1
0x40003f8	          0x4889c2	                            mov rdx, rax	       734	psargs.c	FUNCTION_7	SWITCH_1	CALL_6
0x40003fb	          0x4489ee	                           mov esi, r13d	       734	psargs.c	FUNCTION_7	SWITCH_1	CALL_6
0x40003fe	          0x4889df	                            mov rdi, rbx	       734	psargs.c	FUNCTION_7	SWITCH_1	CALL_6
0x4000401	      0xe800000000	                          call 0x4000406	       734	psargs.c	FUNCTION_7	SWITCH_1	CALL_6
0x4000406	      0xe957020000	                           jmp 0x4000662	       734	psargs.c	FUNCTION_7	SWITCH_1	CALL_6
0x400040b	          0x4889f7	                            mov rdi, rsi	       742	psargs.c	FUNCTION_7	SWITCH_1	CALL_7
0x400040e	      0xe800000000	                          call 0x4000413	       742	psargs.c	FUNCTION_7	SWITCH_1	CALL_7
0x4000413	        0x48894320	             mov qword [rbx + 0x20], rax	       741	psargs.c	FUNCTION_7	SWITCH_1
0x4000417	      0xe96b030000	                           jmp 0x4000787	       741	psargs.c	FUNCTION_7	SWITCH_1
0x400041c	        0x488b4620	            mov rax, qword [rsi + 0x20] 	       747	psargs.c	FUNCTION_7	SWITCH_1	IF_2
0x4000420	        0x48394608	                cmp qword [rsi + 8], rax	       747	psargs.c	FUNCTION_7	SWITCH_1	IF_2
0x4000424	     0xf835d030000	                           jae 0x4000787	       747	psargs.c	FUNCTION_7	SWITCH_1	IF_2
0x400042a	        0x4c8d6e08	                      lea r13, [rsi + 8]	       747	psargs.c	FUNCTION_7	SWITCH_1	IF_2
0x400042e	          0x4531ff	                          xor r15d, r15d	       747	psargs.c	FUNCTION_7	SWITCH_1	IF_2
0x4000431	            0x31ed	                            xor ebp, ebp	       747	psargs.c	FUNCTION_7	SWITCH_1	IF_2
0x4000433	        0x488b7308	                mov rsi, qword [rbx + 8]	       751	psargs.c	FUNCTION_7	SWITCH_1	IF_2	WHILE_1
0x4000437	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       751	psargs.c	FUNCTION_7	SWITCH_1	IF_2	WHILE_1
0x400043b	          0x4839c6	                            cmp rsi, rax	       751	psargs.c	FUNCTION_7	SWITCH_1	IF_2	WHILE_1
0x400043e	     0xf831a020000	                           jae 0x400065e	       751	psargs.c	FUNCTION_7	SWITCH_1	IF_2	WHILE_1
0x4000444	            0x8a06	                      mov al, byte [rsi]	       477	psargs.c	FUNCTION_6	SWITCH_1	CALL_3
0x4000446	            0x3c01	                               cmp al, 1	       477	psargs.c	FUNCTION_6	SWITCH_1	CALL_3
0x4000448	            0x7428	                            je 0x4000472	       477	psargs.c	FUNCTION_6	SWITCH_1	CALL_3
0x400044a	            0x7217	                            jb 0x4000463	       477	psargs.c	FUNCTION_6	SWITCH_1	CALL_3
0x400044c	            0x3c02	                               cmp al, 2	       477	psargs.c	FUNCTION_6	SWITCH_1	CALL_3
0x400044e	            0x7431	                            je 0x4000481	       477	psargs.c	FUNCTION_6	SWITCH_1	CALL_3
0x4000450	            0x3c03	                               cmp al, 3	       477	psargs.c	FUNCTION_6	SWITCH_1	CALL_3
0x4000452	            0x753c	                           jne 0x4000490	       477	psargs.c	FUNCTION_6	SWITCH_1	CALL_3
0x4000454	        0x488d4601	                      lea rax, [rsi + 1]	       499	psargs.c	FUNCTION_6	SWITCH_1
0x4000458	      0xba39000000	                           mov edx, 0x39	       498	psargs.c	FUNCTION_6	SWITCH_1
0x400045d	        0x48894308	                mov qword [rbx + 8], rax	       499	psargs.c	FUNCTION_6	SWITCH_1
0x4000461	            0xeb32	                           jmp 0x4000495	       499	psargs.c	FUNCTION_6	SWITCH_1
0x4000463	        0x488d4601	                      lea rax, [rsi + 1]	       481	psargs.c	FUNCTION_6	SWITCH_1
0x4000467	      0xba31000000	                           mov edx, 0x31	       480	psargs.c	FUNCTION_6	SWITCH_1
0x400046c	        0x48894308	                mov qword [rbx + 8], rax	       481	psargs.c	FUNCTION_6	SWITCH_1
0x4000470	            0xeb23	                           jmp 0x4000495	       481	psargs.c	FUNCTION_6	SWITCH_1
0x4000472	        0x488d4601	                      lea rax, [rsi + 1]	       487	psargs.c	FUNCTION_6	SWITCH_1
0x4000476	      0xba32000000	                           mov edx, 0x32	       486	psargs.c	FUNCTION_6	SWITCH_1
0x400047b	        0x48894308	                mov qword [rbx + 8], rax	       487	psargs.c	FUNCTION_6	SWITCH_1
0x400047f	            0xeb14	                           jmp 0x4000495	       487	psargs.c	FUNCTION_6	SWITCH_1
0x4000481	        0x488d4601	                      lea rax, [rsi + 1]	       493	psargs.c	FUNCTION_6	SWITCH_1
0x4000485	      0xba38000000	                           mov edx, 0x38	       492	psargs.c	FUNCTION_6	SWITCH_1
0x400048a	        0x48894308	                mov qword [rbx + 8], rax	       493	psargs.c	FUNCTION_6	SWITCH_1
0x400048e	            0xeb05	                           jmp 0x4000495	       493	psargs.c	FUNCTION_6	SWITCH_1
0x4000490	      0xba30000000	                           mov edx, 0x30	       504	psargs.c	FUNCTION_6	SWITCH_1
0x4000495	           0xfb7fa	                           movzx edi, dx	       510	psargs.c	FUNCTION_6	CALL_4
0x4000498	          0x891424	                    mov dword [rsp], edx	       510	psargs.c	FUNCTION_6	CALL_4
0x400049b	      0xe800000000	                          call 0x40004a0	       510	psargs.c	FUNCTION_6	CALL_4
0x40004a0	          0x4885c0	                           test rax, rax	       511	psargs.c	FUNCTION_6	IF_1
0x40004a3	          0x4989c4	                            mov r12, rax	       510	psargs.c	FUNCTION_6	CALL_4
0x40004a6	     0xf84e4020000	                            je 0x4000790	       511	psargs.c	FUNCTION_6	IF_1
0x40004ac	          0x8b1424	                    mov edx, dword [rsp]	       518	psargs.c	FUNCTION_6	SWITCH_2
0x40004af	          0x8d42d0	                   lea eax, [rdx - 0x30]	       518	psargs.c	FUNCTION_6	SWITCH_2
0x40004b2	        0x6683f809	                               cmp ax, 9	       518	psargs.c	FUNCTION_6	SWITCH_2
0x40004b6	     0xf87db020000	                            ja 0x4000797	       518	psargs.c	FUNCTION_6	SWITCH_2
0x40004bc	           0xfb7c0	                           movzx eax, ax	       518	psargs.c	FUNCTION_6	SWITCH_2
0x40004bf	    0x488b04c50000	                  mov rax, qword [rax*8]	       518	psargs.c	FUNCTION_6	SWITCH_2
0x40004c7	      0xe900000000	                           jmp 0x40004cc	       518	psargs.c	FUNCTION_6	SWITCH_2
0x40004cc	        0x488b4308	                mov rax, qword [rbx + 8]	       523	psargs.c	FUNCTION_6	SWITCH_2	CALL_7
0x40004d0	          0x4c89e7	                            mov rdi, r12	       524	psargs.c	FUNCTION_6	SWITCH_2	CALL_8
0x40004d3	            0x8b30	                    mov esi, dword [rax]	       524	psargs.c	FUNCTION_6	SWITCH_2	CALL_8
0x40004d5	      0xe800000000	                          call 0x40004da	       524	psargs.c	FUNCTION_6	SWITCH_2	CALL_8
0x40004da	      0x4883430804	                  add qword [rbx + 8], 4	       525	psargs.c	FUNCTION_6	SWITCH_2
0x40004df	          0x4c89ef	                            mov rdi, r13	       554	psargs.c	FUNCTION_6	SWITCH_2	CALL_11
0x40004e2	      0xe859fbffff	call sym.acpi_ps_get_next_package_length.isra.0	       554	psargs.c	FUNCTION_6	SWITCH_2	CALL_11
0x40004e7	      0x4189442428	             mov dword [r12 + 0x28], eax	       553	psargs.c	FUNCTION_6	SWITCH_2
0x40004ec	      0xe9a6020000	                           jmp 0x4000797	       553	psargs.c	FUNCTION_6	SWITCH_2
0x40004f1	        0x488b4308	                mov rax, qword [rbx + 8]	       568	psargs.c	FUNCTION_6	SWITCH_2	CALL_12
0x40004f5	        0x488d7001	                      lea rsi, [rax + 1]	       569	psargs.c	FUNCTION_6	SWITCH_2
0x40004f9	            0x8a08	                      mov cl, byte [rax]	       568	psargs.c	FUNCTION_6	SWITCH_2	CALL_12
0x40004fb	        0x4883c002	                              add rax, 2	       571	psargs.c	FUNCTION_6	SWITCH_2
0x40004ff	        0x48897308	                mov qword [rbx + 8], rsi	       569	psargs.c	FUNCTION_6	SWITCH_2
0x4000503	        0x408a70ff	                 mov sil, byte [rax - 1]	       570	psargs.c	FUNCTION_6	SWITCH_2	CALL_13
0x4000507	        0x48894308	                mov qword [rbx + 8], rax	       571	psargs.c	FUNCTION_6	SWITCH_2
0x400050b	            0x89f0	                            mov eax, esi	       574	psargs.c	FUNCTION_6	SWITCH_2
0x400050d	          0xc1e008	                              shl eax, 8	       574	psargs.c	FUNCTION_6	SWITCH_2
0x4000510	           0xfb7f0	                           movzx esi, ax	       574	psargs.c	FUNCTION_6	SWITCH_2
0x4000513	           0xfb6c1	                           movzx eax, cl	       574	psargs.c	FUNCTION_6	SWITCH_2
0x4000516	          0x4809f0	                             or rax, rsi	       574	psargs.c	FUNCTION_6	SWITCH_2
0x4000519	        0x6683fa39	                            cmp dx, 0x39	       578	psargs.c	FUNCTION_6	SWITCH_2	IF_3
0x400051d	      0x4989442428	             mov qword [r12 + 0x28], rax	       574	psargs.c	FUNCTION_6	SWITCH_2
0x4000522	     0xf856f020000	                           jne 0x4000797	       578	psargs.c	FUNCTION_6	SWITCH_2	IF_3
0x4000528	        0x488b5308	                mov rdx, qword [rbx + 8]	       579	psargs.c	FUNCTION_6	SWITCH_2	IF_3	CALL_14
0x400052c	            0x8a02	                      mov al, byte [rdx]	       579	psargs.c	FUNCTION_6	SWITCH_2	IF_3	CALL_14
0x400052e	          0x48ffc2	                                 inc rdx	       580	psargs.c	FUNCTION_6	SWITCH_2	IF_3
0x4000531	        0x48895308	                mov qword [rbx + 8], rdx	       580	psargs.c	FUNCTION_6	SWITCH_2	IF_3
0x4000535	        0x48c1e010	                           shl rax, 0x10	       582	psargs.c	FUNCTION_6	SWITCH_2	IF_3
0x4000539	      0x250000ff00	                       and eax, 0xff0000	       582	psargs.c	FUNCTION_6	SWITCH_2	IF_3
0x400053e	      0x4909442428	              or qword [r12 + 0x28], rax	       582	psargs.c	FUNCTION_6	SWITCH_2	IF_3
0x4000543	      0xe94f020000	                           jmp 0x4000797	       582	psargs.c	FUNCTION_6	SWITCH_2	IF_3
0x4000548	        0x488b7308	                mov rsi, qword [rbx + 8]	       593	psargs.c	FUNCTION_6	SWITCH_2
0x400054c	          0x803e11	                    cmp byte [rsi], 0x11	       594	psargs.c	FUNCTION_6	SWITCH_2	IF_4	CALL_15
0x400054f	     0xf8593000000	                           jne 0x40005e8	       594	psargs.c	FUNCTION_6	SWITCH_2	IF_4	CALL_15
0x4000555	        0x4c8d4e01	                       lea r9, [rsi + 1]	       595	psargs.c	FUNCTION_6	SWITCH_2	IF_4
0x4000559	          0x4c89ef	                            mov rdi, r13	       599	psargs.c	FUNCTION_6	SWITCH_2	IF_4
0x400055c	        0x48893424	                    mov qword [rsp], rsi	       595	psargs.c	FUNCTION_6	SWITCH_2	IF_4
0x4000560	        0x4c894b08	                 mov qword [rbx + 8], r9	       595	psargs.c	FUNCTION_6	SWITCH_2	IF_4
0x4000564	      0xe8d7faffff	call sym.acpi_ps_get_next_package_length.isra.0	       599	psargs.c	FUNCTION_6	SWITCH_2	IF_4
0x4000569	            0x89c0	                            mov eax, eax	       601	psargs.c	FUNCTION_6	SWITCH_2	IF_4
0x400056b	          0x4531c0	                            xor r8d, r8d	       460	psargs.c	FUNCTION_6
0x400056e	        0x488b3424	                    mov rsi, qword [rsp]	       604	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5
0x4000572	        0x498d1401	                     lea rdx, [r9 + rax]	       601	psargs.c	FUNCTION_6	SWITCH_2	IF_4
0x4000576	        0x483b5308	                cmp rdx, qword [rbx + 8]	       604	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5
0x400057a	            0x7666	                           jbe 0x40005e2	       604	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5
0x400057c	      0xbf33000000	                           mov edi, 0x33	       608	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5
0x4000581	        0x48891424	                    mov qword [rsp], rdx	       608	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5
0x4000585	      0xe800000000	                          call 0x400058a	       608	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5
0x400058a	          0x4885c0	                           test rax, rax	       610	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5	IF_6
0x400058d	          0x4989c0	                             mov r8, rax	       608	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5
0x4000590	        0x488b1424	                    mov rdx, qword [rsp]	       610	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5	IF_6
0x4000594	            0x7464	                            je 0x40005fa	       610	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5	IF_6
0x4000596	        0x488b4308	                mov rax, qword [rbx + 8]	       617	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5	CALL_22
0x400059a	            0x8a08	                      mov cl, byte [rax]	       617	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5	CALL_22
0x400059c	        0x488d7001	                      lea rsi, [rax + 1]	       618	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5
0x40005a0	        0x48897308	                mov qword [rbx + 8], rsi	       618	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5
0x40005a4	          0x80f90b	                             cmp cl, 0xb	       621	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5	SWITCH_3
0x40005a7	            0x7414	                            je 0x40005bd	       621	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5	SWITCH_3
0x40005a9	          0x80f90c	                             cmp cl, 0xc	       621	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5	SWITCH_3
0x40005ac	            0x7419	                            je 0x40005c7	       621	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5	SWITCH_3
0x40005ae	          0x80f90a	                             cmp cl, 0xa	       621	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5	SWITCH_3
0x40005b1	            0x7521	                           jne 0x40005d4	       621	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5	SWITCH_3
0x40005b3	         0xfb64801	               movzx ecx, byte [rax + 1]	       624	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5	SWITCH_3
0x40005b7	        0x4883c002	                              add rax, 2	       626	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5	SWITCH_3
0x40005bb	            0xeb11	                           jmp 0x40005ce	       626	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5	SWITCH_3
0x40005bd	         0xfb74801	               movzx ecx, word [rax + 1]	       631	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5	SWITCH_3
0x40005c1	        0x4883c003	                              add rax, 3	       633	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5	SWITCH_3
0x40005c5	            0xeb07	                           jmp 0x40005ce	       633	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5	SWITCH_3
0x40005c7	          0x8b4801	                mov ecx, dword [rax + 1]	       638	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5	SWITCH_3
0x40005ca	        0x4883c005	                              add rax, 5	       640	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5	SWITCH_3
0x40005ce	        0x48894308	                mov qword [rbx + 8], rax	       640	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5	SWITCH_3
0x40005d2	            0xeb02	                           jmp 0x40005d6	       640	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5	SWITCH_3
0x40005d4	            0x31c9	                            xor ecx, ecx	       645	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5	SWITCH_3
0x40005d6	        0x41894828	              mov dword [r8 + 0x28], ecx	       652	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5
0x40005da	        0x488b4308	                mov rax, qword [rbx + 8]	       653	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5
0x40005de	        0x49894040	              mov qword [r8 + 0x40], rax	       653	psargs.c	FUNCTION_6	SWITCH_2	IF_4	IF_5
0x40005e2	        0x48895308	                mov qword [rbx + 8], rdx	       658	psargs.c	FUNCTION_6	SWITCH_2	IF_4
0x40005e6	            0xeb2b	                           jmp 0x4000613	       658	psargs.c	FUNCTION_6	SWITCH_2	IF_4
0x40005e8	      0xbf2d000000	                           mov edi, 0x2d	       660	psargs.c	FUNCTION_6	SWITCH_2	ELSE_1	CALL_28
0x40005ed	      0xe800000000	                          call 0x40005f2	       660	psargs.c	FUNCTION_6	SWITCH_2	ELSE_1	CALL_28
0x40005f2	          0x4885c0	                           test rax, rax	       661	psargs.c	FUNCTION_6	SWITCH_2	ELSE_1	IF_7
0x40005f5	          0x4989c0	                             mov r8, rax	       660	psargs.c	FUNCTION_6	SWITCH_2	ELSE_1	CALL_28
0x40005f8	            0x750d	                           jne 0x4000607	       661	psargs.c	FUNCTION_6	SWITCH_2	ELSE_1	IF_7
0x40005fa	          0x4c89e7	                            mov rdi, r12	       662	psargs.c	FUNCTION_6	SWITCH_2	ELSE_1	IF_7	CALL_29
0x40005fd	      0xe800000000	                          call 0x4000602	       662	psargs.c	FUNCTION_6	SWITCH_2	ELSE_1	IF_7	CALL_29
0x4000602	      0xe989010000	                           jmp 0x4000790	       662	psargs.c	FUNCTION_6	SWITCH_2	ELSE_1	IF_7	CALL_29
0x4000607	          0x4889df	                            mov rdi, rbx	       669	psargs.c	FUNCTION_6	SWITCH_2	ELSE_1	CALL_31
0x400060a	      0xe800000000	                          call 0x400060f	       669	psargs.c	FUNCTION_6	SWITCH_2	ELSE_1	CALL_31
0x400060f	        0x49894028	              mov qword [r8 + 0x28], rax	       668	psargs.c	FUNCTION_6	SWITCH_2	ELSE_1
0x4000613	          0x4c89c6	                             mov rsi, r8	       674	psargs.c	FUNCTION_6	SWITCH_2	CALL_32
0x4000616	          0x4c89e7	                            mov rdi, r12	       674	psargs.c	FUNCTION_6	SWITCH_2	CALL_32
0x4000619	      0xe800000000	                          call 0x400061e	       674	psargs.c	FUNCTION_6	SWITCH_2	CALL_32
0x400061e	      0xe974010000	                           jmp 0x4000797	       674	psargs.c	FUNCTION_6	SWITCH_2	CALL_32
0x4000623	        0x488b7608	                mov rsi, qword [rsi + 8]	       773	psargs.c	FUNCTION_7	SWITCH_1	IF_5
0x4000627	        0x483b7320	            cmp rsi, qword [rbx + 0x20] 	       773	psargs.c	FUNCTION_7	SWITCH_1	IF_5
0x400062b	     0xf8356010000	                           jae 0x4000787	       773	psargs.c	FUNCTION_7	SWITCH_1	IF_5
0x4000631	      0xbf33000000	                           mov edi, 0x33	       777	psargs.c	FUNCTION_7	SWITCH_1	IF_5	CALL_10
0x4000636	      0xe800000000	                          call 0x400063b	       777	psargs.c	FUNCTION_7	SWITCH_1	IF_5	CALL_10
0x400063b	          0x4885c0	                           test rax, rax	       779	psargs.c	FUNCTION_7	SWITCH_1	IF_5	IF_6
0x400063e	          0x4889c5	                            mov rbp, rax	       777	psargs.c	FUNCTION_7	SWITCH_1	IF_5	CALL_10
0x4000641	     0xf8449010000	                            je 0x4000790	       779	psargs.c	FUNCTION_7	SWITCH_1	IF_5	IF_6
0x4000647	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       785	psargs.c	FUNCTION_7	SWITCH_1	IF_5
0x400064b	        0x482b4308	                sub rax, qword [rbx + 8]	       785	psargs.c	FUNCTION_7	SWITCH_1	IF_5
0x400064f	          0x894528	            mov dword [rbp + 0x28], eax 	       785	psargs.c	FUNCTION_7	SWITCH_1	IF_5
0x4000652	        0x488b4308	                mov rax, qword [rbx + 8]	       788	psargs.c	FUNCTION_7	SWITCH_1	IF_5
0x4000656	        0x48894540	            mov qword [rbp + 0x40], rax 	       788	psargs.c	FUNCTION_7	SWITCH_1	IF_5
0x400065a	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       792	psargs.c	FUNCTION_7	SWITCH_1	IF_5
0x400065e	        0x48894308	                mov qword [rbx + 8], rax	       792	psargs.c	FUNCTION_7	SWITCH_1	IF_5
0x4000662	            0x31c0	                            xor eax, eax	       711	psargs.c	FUNCTION_7
0x4000664	      0xe922010000	                           jmp 0x400078b	       711	psargs.c	FUNCTION_7
0x4000669	          0x4889f7	                            mov rdi, rsi	       804	psargs.c	FUNCTION_7	SWITCH_1	CALL_15
0x400066c	      0xe800000000	                          call 0x4000671	       804	psargs.c	FUNCTION_7	SWITCH_1	CALL_15
0x4000671	           0xfb7f8	                           movzx edi, ax	       804	psargs.c	FUNCTION_7	SWITCH_1	CALL_15
0x4000674	            0x85ff	                           test edi, edi	       805	psargs.c	FUNCTION_7	SWITCH_1	IF_7
0x4000676	            0x89fd	                            mov ebp, edi	       804	psargs.c	FUNCTION_7	SWITCH_1	CALL_15
0x4000678	            0x752f	                           jne 0x40006a9	       805	psargs.c	FUNCTION_7	SWITCH_1	IF_7
0x400067a	        0x488b7308	                mov rsi, qword [rbx + 8]	       812	psargs.c	FUNCTION_7	SWITCH_1	IF_7
0x400067e	      0xbf2d000000	                           mov edi, 0x2d	       812	psargs.c	FUNCTION_7	SWITCH_1	IF_7
0x4000683	      0xe800000000	                          call 0x4000688	       812	psargs.c	FUNCTION_7	SWITCH_1	IF_7
0x4000688	          0x4885c0	                           test rax, rax	       815	psargs.c	FUNCTION_7	SWITCH_1	IF_7	IF_8
0x400068b	          0x4889c5	                            mov rbp, rax	       812	psargs.c	FUNCTION_7	SWITCH_1	IF_7
0x400068e	     0xf84fc000000	                            je 0x4000790	       815	psargs.c	FUNCTION_7	SWITCH_1	IF_7	IF_8
0x4000694	            0x31c9	                            xor ecx, ecx	       819	psargs.c	FUNCTION_7	SWITCH_1	IF_7
0x4000696	          0x4889c2	                            mov rdx, rax	       819	psargs.c	FUNCTION_7	SWITCH_1	IF_7
0x4000699	          0x4889de	                            mov rsi, rbx	       819	psargs.c	FUNCTION_7	SWITCH_1	IF_7
0x400069c	          0x4c89e7	                            mov rdi, r12	       819	psargs.c	FUNCTION_7	SWITCH_1	IF_7
0x400069f	      0xe800000000	                          call 0x40006a4	       819	psargs.c	FUNCTION_7	SWITCH_1	IF_7
0x40006a4	      0xe9e2000000	                           jmp 0x400078b	       819	psargs.c	FUNCTION_7	SWITCH_1	IF_7
0x40006a9	      0xe800000000	                          call 0x40006ae	       806	psargs.c	FUNCTION_7	SWITCH_1	IF_7	CALL_16
0x40006ae	            0x84c0	                             test al, al	       805	psargs.c	FUNCTION_7	SWITCH_1	IF_7
0x40006b0	            0x75c8	                           jne 0x400067a	       805	psargs.c	FUNCTION_7	SWITCH_1	IF_7
0x40006b2	          0x83e5fd	                     and ebp, 0xfffffffd	       807	psargs.c	FUNCTION_7	SWITCH_1	IF_7	CALL_17
0x40006b5	        0x6683fd5c	                            cmp bp, 0x5c	       807	psargs.c	FUNCTION_7	SWITCH_1	IF_7	CALL_17
0x40006b9	            0x74bf	                            je 0x400067a	       807	psargs.c	FUNCTION_7	SWITCH_1	IF_7	CALL_17
0x40006bb	      0xe981000000	                           jmp 0x4000741	       807	psargs.c	FUNCTION_7	SWITCH_1	IF_7	CALL_17
0x40006c0	          0x4889f7	                            mov rdi, rsi	       838	psargs.c	FUNCTION_7	SWITCH_1	CALL_24
0x40006c3	      0xe800000000	                          call 0x40006c8	       838	psargs.c	FUNCTION_7	SWITCH_1	CALL_24
0x40006c8	           0xfb7f8	                           movzx edi, ax	       838	psargs.c	FUNCTION_7	SWITCH_1	CALL_24
0x40006cb	            0x85ff	                           test edi, edi	       839	psargs.c	FUNCTION_7	SWITCH_1	IF_9
0x40006cd	            0x89fd	                            mov ebp, edi	       838	psargs.c	FUNCTION_7	SWITCH_1	CALL_24
0x40006cf	            0x751b	                           jne 0x40006ec	       839	psargs.c	FUNCTION_7	SWITCH_1	IF_9
0x40006d1	        0x488b7308	                mov rsi, qword [rbx + 8]	       846	psargs.c	FUNCTION_7	SWITCH_1	IF_9
0x40006d5	      0xbf2d000000	                           mov edi, 0x2d	       846	psargs.c	FUNCTION_7	SWITCH_1	IF_9
0x40006da	      0xe800000000	                          call 0x40006df	       846	psargs.c	FUNCTION_7	SWITCH_1	IF_9
0x40006df	          0x4885c0	                           test rax, rax	       849	psargs.c	FUNCTION_7	SWITCH_1	IF_9	IF_10
0x40006e2	          0x4889c5	                            mov rbp, rax	       846	psargs.c	FUNCTION_7	SWITCH_1	IF_9
0x40006e5	            0x7519	                           jne 0x4000700	       849	psargs.c	FUNCTION_7	SWITCH_1	IF_9	IF_10
0x40006e7	      0xe9a4000000	                           jmp 0x4000790	       849	psargs.c	FUNCTION_7	SWITCH_1	IF_9	IF_10
0x40006ec	      0xe800000000	                          call 0x40006f1	       840	psargs.c	FUNCTION_7	SWITCH_1	IF_9	CALL_25
0x40006f1	            0x84c0	                             test al, al	       839	psargs.c	FUNCTION_7	SWITCH_1	IF_9
0x40006f3	            0x75dc	                           jne 0x40006d1	       839	psargs.c	FUNCTION_7	SWITCH_1	IF_9
0x40006f5	          0x83e5fd	                     and ebp, 0xfffffffd	       841	psargs.c	FUNCTION_7	SWITCH_1	IF_9	CALL_26
0x40006f8	        0x6683fd5c	                            cmp bp, 0x5c	       841	psargs.c	FUNCTION_7	SWITCH_1	IF_9	CALL_26
0x40006fc	            0x74d3	                            je 0x40006d1	       841	psargs.c	FUNCTION_7	SWITCH_1	IF_9	CALL_26
0x40006fe	            0xeb41	                           jmp 0x4000741	       841	psargs.c	FUNCTION_7	SWITCH_1	IF_9	CALL_26
0x4000700	      0xb901000000	                              mov ecx, 1	       853	psargs.c	FUNCTION_7	SWITCH_1	IF_9
0x4000705	          0x4889c2	                            mov rdx, rax	       853	psargs.c	FUNCTION_7	SWITCH_1	IF_9
0x4000708	          0x4889de	                            mov rsi, rbx	       853	psargs.c	FUNCTION_7	SWITCH_1	IF_9
0x400070b	          0x4c89e7	                            mov rdi, r12	       853	psargs.c	FUNCTION_7	SWITCH_1	IF_9
0x400070e	      0xe800000000	                          call 0x4000713	       853	psargs.c	FUNCTION_7	SWITCH_1	IF_9
0x4000713	      0x66837d0a35	              cmp word [rbp + 0xa], 0x35	       858	psargs.c	FUNCTION_7	SWITCH_1	IF_9	IF_11
0x4000718	            0x7571	                           jne 0x400078b	       858	psargs.c	FUNCTION_7	SWITCH_1	IF_9	IF_11
0x400071a	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	       862	psargs.c	FUNCTION_7	SWITCH_1	IF_9	IF_11	CALL_31
0x400071e	          0x890424	                    mov dword [rsp], eax	       862	psargs.c	FUNCTION_7	SWITCH_1	IF_9	IF_11	CALL_31
0x4000721	      0xe800000000	                          call 0x4000726	       862	psargs.c	FUNCTION_7	SWITCH_1	IF_9	IF_11	CALL_31
0x4000726	          0x4889ef	                            mov rdi, rbp	       863	psargs.c	FUNCTION_7	SWITCH_1	IF_9	IF_11	CALL_32
0x4000729	            0x31ed	                            xor ebp, ebp	       864	psargs.c	FUNCTION_7	SWITCH_1	IF_9	IF_11
0x400072b	      0xe800000000	                          call 0x4000730	       863	psargs.c	FUNCTION_7	SWITCH_1	IF_9	IF_11	CALL_32
0x4000730	    0x41c784248400	               mov dword [r12 + 0x84], 1	       865	psargs.c	FUNCTION_7	SWITCH_1	IF_9	IF_11
0x400073c	          0x8b0424	                    mov eax, dword [rsp]	       865	psargs.c	FUNCTION_7	SWITCH_1	IF_9	IF_11
0x400073f	            0xeb4a	                           jmp 0x400078b	       865	psargs.c	FUNCTION_7	SWITCH_1	IF_9	IF_11
0x4000741	    0x41c784248400	               mov dword [r12 + 0x84], 1	       884	psargs.c	FUNCTION_7	SWITCH_1
0x400074d	            0xeb38	                           jmp 0x4000787	       884	psargs.c	FUNCTION_7	SWITCH_1
0x400074f	        0x488b4620	            mov rax, qword [rsi + 0x20] 	       891	psargs.c	FUNCTION_7	SWITCH_1	IF_12
0x4000753	        0x48394608	                cmp qword [rsi + 8], rax	       891	psargs.c	FUNCTION_7	SWITCH_1	IF_12
0x4000757	            0x732e	                           jae 0x4000787	       891	psargs.c	FUNCTION_7	SWITCH_1	IF_12
0x4000759	    0xc78784000000	     mov dword [rdi + 0x84], 0xffffffff 	       895	psargs.c	FUNCTION_7	SWITCH_1	IF_12
0x4000763	            0xeb22	                           jmp 0x4000787	       895	psargs.c	FUNCTION_7	SWITCH_1	IF_12
0x4000765	          0x4489e9	                           mov ecx, r13d	       901	psargs.c	FUNCTION_7	SWITCH_1	CALL_35
0x4000768	    0x48c7c2000000	                              mov rdx, 0	       901	psargs.c	FUNCTION_7	SWITCH_1	CALL_35
0x400076f	      0xbe85030000	                          mov esi, 0x385	       901	psargs.c	FUNCTION_7	SWITCH_1	CALL_35
0x4000774	    0x48c7c7000000	                              mov rdi, 0	       901	psargs.c	FUNCTION_7	SWITCH_1	CALL_35
0x400077b	      0xe800000000	                          call 0x4000780	       901	psargs.c	FUNCTION_7	SWITCH_1	CALL_35
0x4000780	      0xb803300000	                         mov eax, 0x3003	       902	psargs.c	FUNCTION_7	SWITCH_1
0x4000785	            0xeb02	                           jmp 0x4000789	       902	psargs.c	FUNCTION_7	SWITCH_1
0x4000787	            0x31c0	                            xor eax, eax	       711	psargs.c	FUNCTION_7
0x4000789	            0x31ed	                            xor ebp, ebp	       707	psargs.c	FUNCTION_7
0x400078b	          0x49892e	                    mov qword [r14], rbp	       906	psargs.c	FUNCTION_7
0x400078e	            0xeb1d	                           jmp 0x40007ad	       907	psargs.c	FUNCTION_7	CALL_36
0x4000790	      0xb804000000	                              mov eax, 4	       754	psargs.c	FUNCTION_7	SWITCH_1	IF_2	WHILE_1	IF_3	CALL_9
0x4000795	            0xeb16	                           jmp 0x40007ad	       754	psargs.c	FUNCTION_7	SWITCH_1	IF_2	WHILE_1	IF_3	CALL_9
0x4000797	          0x4d85ff	                           test r15, r15	       757	psargs.c	FUNCTION_7	SWITCH_1	IF_2	WHILE_1	IF_4
0x400079a	            0x740c	                            je 0x40007a8	       757	psargs.c	FUNCTION_7	SWITCH_1	IF_2	WHILE_1	IF_4
0x400079c	        0x4d896718	             mov qword [r15 + 0x18], r12	       758	psargs.c	FUNCTION_7	SWITCH_1	IF_2	WHILE_1	IF_4
0x40007a0	          0x4d89e7	                            mov r15, r12	       758	psargs.c	FUNCTION_7	SWITCH_1	IF_2	WHILE_1	IF_4
0x40007a3	      0xe98bfcffff	                           jmp 0x4000433	       758	psargs.c	FUNCTION_7	SWITCH_1	IF_2	WHILE_1	IF_4
0x40007a8	          0x4c89e5	                            mov rbp, r12	       758	psargs.c	FUNCTION_7	SWITCH_1	IF_2	WHILE_1	IF_4
0x40007ab	            0xebf3	                           jmp 0x40007a0	       758	psargs.c	FUNCTION_7	SWITCH_1	IF_2	WHILE_1	IF_4
0x40007ad	              0x5a	                                 pop rdx	       908	psargs.c	FUNCTION_7
0x40007ae	              0x5b	                                 pop rbx	       908	psargs.c	FUNCTION_7
0x40007af	              0x5d	                                 pop rbp	       908	psargs.c	FUNCTION_7
0x40007b0	            0x415c	                                 pop r12	       908	psargs.c	FUNCTION_7
0x40007b2	            0x415d	                                 pop r13	       908	psargs.c	FUNCTION_7
0x40007b4	            0x415e	                                 pop r14	       908	psargs.c	FUNCTION_7
0x40007b6	            0x415f	                                 pop r15	       908	psargs.c	FUNCTION_7
0x40007b8	              0xc3	                                     ret	       908	psargs.c	FUNCTION_7
acpi_ps_get_next_namestring	IF,1:WHILE,1:ELSE,0:SWITCH,1:DO,0:CALL,4:functions,0:FOR,0	26
0x4000093	        0x488b4708	                mov rax, qword [rdi + 8]	       125	psargs.c	FUNCTION_3
0x4000097	          0x4889c2	                            mov rdx, rax	       125	psargs.c	FUNCTION_3
0x400009a	          0x408a32	                     mov sil, byte [rdx]	       132	psargs.c	FUNCTION_3	WHILE_1	CALL_3
0x400009d	          0x4088f1	                             mov cl, sil	       132	psargs.c	FUNCTION_3	WHILE_1	CALL_3
0x40000a0	          0x83e1fd	                     and ecx, 0xfffffffd	       132	psargs.c	FUNCTION_3	WHILE_1	CALL_3
0x40000a3	          0x80f95c	                            cmp cl, 0x5c	       132	psargs.c	FUNCTION_3	WHILE_1	CALL_3
0x40000a6	            0x7505	                           jne 0x40000ad	       132	psargs.c	FUNCTION_3	WHILE_1	CALL_3
0x40000a8	          0x48ffc2	                                 inc rdx	       133	psargs.c	FUNCTION_3	WHILE_1
0x40000ab	            0xebed	                           jmp 0x400009a	       133	psargs.c	FUNCTION_3	WHILE_1
0x40000ad	        0x4080fe2e	                           cmp sil, 0x2e	       138	psargs.c	FUNCTION_3	SWITCH_1
0x40000b1	        0x488d4a09	                      lea rcx, [rdx + 9]	       153	psargs.c	FUNCTION_3	SWITCH_1
0x40000b5	            0x742a	                            je 0x40000e1	       138	psargs.c	FUNCTION_3	SWITCH_1
0x40000b7	        0x4080fe2f	                           cmp sil, 0x2f	       138	psargs.c	FUNCTION_3	SWITCH_1
0x40000bb	            0x741b	                            je 0x40000d8	       138	psargs.c	FUNCTION_3	SWITCH_1
0x40000bd	          0x4084f6	                           test sil, sil	       138	psargs.c	FUNCTION_3	SWITCH_1
0x40000c0	        0x488d4a04	                      lea rcx, [rdx + 4]	       167	psargs.c	FUNCTION_3	SWITCH_1
0x40000c4	            0x751b	                           jne 0x40000e1	       138	psargs.c	FUNCTION_3	SWITCH_1
0x40000c6	      0xb900000000	                              mov ecx, 0	       144	psargs.c	FUNCTION_3	SWITCH_1	IF_1
0x40000cb	          0x4839c2	                            cmp rdx, rax	       144	psargs.c	FUNCTION_3	SWITCH_1	IF_1
0x40000ce	        0x480f44c1	                          cmove rax, rcx	       144	psargs.c	FUNCTION_3	SWITCH_1	IF_1
0x40000d2	        0x488d4a01	                      lea rcx, [rdx + 1]	       146	psargs.c	FUNCTION_3	SWITCH_1
0x40000d6	            0xeb09	                           jmp 0x40000e1	       147	psargs.c	FUNCTION_3	SWITCH_1
0x40000d8	         0xfb64a01	               movzx ecx, byte [rdx + 1]	       160	psargs.c	FUNCTION_3	SWITCH_1
0x40000dc	      0x488d4c8a02	              lea rcx, [rdx + rcx*4 + 2]	       160	psargs.c	FUNCTION_3	SWITCH_1
0x40000e1	        0x48894f08	                mov qword [rdi + 8], rcx	       171	psargs.c	FUNCTION_3
0x40000e5	              0xc3	                                     ret	       173	psargs.c	FUNCTION_3
