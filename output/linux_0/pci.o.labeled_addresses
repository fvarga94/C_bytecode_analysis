pci_try_reset_bus	IF,2:FOR,0:SWITCH,0:ELSE,1:CALL,7:DO,0:functions,0:WHILE,0	31
0x4005580	              0x55	                                push rbp	      4879	pci.c	FUNCTION_203
0x4005581	              0x53	                                push rbx	      4879	pci.c	FUNCTION_203
0x4005582	      0xbe01000000	                              mov esi, 1	      4882	pci.c	FUNCTION_203	CALL_1
0x4005587	          0x4889fb	                            mov rbx, rdi	      4879	pci.c	FUNCTION_203
0x400558a	      0xe841ffffff	                  call sym.pci_bus_reset	      4882	pci.c	FUNCTION_203	CALL_1
0x400558f	            0x85c0	                           test eax, eax	      4883	pci.c	FUNCTION_203	IF_1
0x4005591	            0x89c5	                            mov ebp, eax	      4882	pci.c	FUNCTION_203	CALL_1
0x4005593	            0x7405	                            je 0x400559a	      4883	pci.c	FUNCTION_203	IF_1
0x4005595	            0x89e8	                            mov eax, ebp	      4898	pci.c	FUNCTION_203
0x4005597	              0x5b	                                 pop rbx	      4898	pci.c	FUNCTION_203
0x4005598	              0x5d	                                 pop rbp	      4898	pci.c	FUNCTION_203
0x4005599	              0xc3	                                     ret	      4898	pci.c	FUNCTION_203
0x400559a	          0x4889df	                            mov rdi, rbx	      4886	pci.c	FUNCTION_203	CALL_2
0x400559d	      0xe85ee0ffff	       call sym.pci_bus_save_and_disable	      4886	pci.c	FUNCTION_203	CALL_2
0x40055a2	          0x4889df	                            mov rdi, rbx	      4888	pci.c	FUNCTION_203	IF_2	CALL_3
0x40055a5	      0xe836cdffff	                call sym.pci_bus_trylock	      4888	pci.c	FUNCTION_203	IF_2	CALL_3
0x40055aa	            0x85c0	                           test eax, eax	      4888	pci.c	FUNCTION_203	IF_2	CALL_3
0x40055ac	            0x7512	                           jne 0x40055c0	      4888	pci.c	FUNCTION_203	IF_2	CALL_3
0x40055ae	      0xbdf5ffffff	                     mov ebp, 0xfffffff5	      4893	pci.c	FUNCTION_203	ELSE_1
0x40055b3	          0x4889df	                            mov rdi, rbx	      4895	pci.c	FUNCTION_203	CALL_7
0x40055b6	      0xe885d7ffff	                call sym.pci_bus_restore	      4895	pci.c	FUNCTION_203	CALL_7
0x40055bb	            0x89e8	                            mov eax, ebp	      4898	pci.c	FUNCTION_203
0x40055bd	              0x5b	                                 pop rbx	      4898	pci.c	FUNCTION_203
0x40055be	              0x5d	                                 pop rbp	      4898	pci.c	FUNCTION_203
0x40055bf	              0xc3	                                     ret	      4898	pci.c	FUNCTION_203
0x40055c0	      0xe800000000	                          call 0x40055c5	      4889	pci.c	FUNCTION_203	IF_2	CALL_4
0x40055c5	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	      4890	pci.c	FUNCTION_203	IF_2	CALL_5
0x40055c9	      0xe800000000	                          call 0x40055ce	      4890	pci.c	FUNCTION_203	IF_2	CALL_5
0x40055ce	          0x4889df	                            mov rdi, rbx	      4891	pci.c	FUNCTION_203	IF_2	CALL_6
0x40055d1	      0xe87ac0ffff	                 call sym.pci_bus_unlock	      4891	pci.c	FUNCTION_203	IF_2	CALL_6
0x40055d6	            0xebdb	                           jmp 0x40055b3	      4891	pci.c	FUNCTION_203	IF_2	CALL_6
pci_unmap_iospace	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,2:DO,0:functions,0:WHILE,0	1
0x40001e0	            0xf3c3	                                     ret	      3565	pci.c	FUNCTION_145
pci_rebar_find_pos	IF,2:FOR,1:SWITCH,0:ELSE,0:CALL,3:DO,0:functions,0:WHILE,0	59
0x4002890	            0x4156	                                push r14	      3002	pci.c	FUNCTION_122
0x4002892	            0x4155	                                push r13	      3002	pci.c	FUNCTION_122
0x4002894	            0x4154	                                push r12	      3002	pci.c	FUNCTION_122
0x4002896	              0x55	                                push rbp	      3002	pci.c	FUNCTION_122
0x4002897	              0x53	                                push rbx	      3002	pci.c	FUNCTION_122
0x4002898	        0x4883ec10	                           sub rsp, 0x10	      3002	pci.c	FUNCTION_122
0x400289c	    0x65488b042528	                mov rax, qword gs:[0x28]	      3002	pci.c	FUNCTION_122
0x40028a5	      0x4889442408	                mov qword [rsp + 8], rax	      3002	pci.c	FUNCTION_122
0x40028aa	            0x31c0	                            xor eax, eax	      3002	pci.c	FUNCTION_122
0x40028ac	    0x81bf70030000	         cmp dword [rdi + 0x370], 0x100 	       325	pci.c	FUNCTION_12	IF_1
0x40028b6	            0x7f26	                            jg 0x40028de	       325	pci.c	FUNCTION_12	IF_1
0x40028b8	      0xb8f4fdffff	                     mov eax, 0xfffffdf4	      3008	pci.c	FUNCTION_122	IF_1
0x40028bd	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3024	pci.c	FUNCTION_122
0x40028c2	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      3024	pci.c	FUNCTION_122
0x40028cb	     0xf8584000000	                           jne 0x4002955	      3024	pci.c	FUNCTION_122
0x40028d1	        0x4883c410	                           add rsp, 0x10	      3024	pci.c	FUNCTION_122
0x40028d5	              0x5b	                                 pop rbx	      3024	pci.c	FUNCTION_122
0x40028d6	              0x5d	                                 pop rbp	      3024	pci.c	FUNCTION_122
0x40028d7	            0x415c	                                 pop r12	      3024	pci.c	FUNCTION_122
0x40028d9	            0x415d	                                 pop r13	      3024	pci.c	FUNCTION_122
0x40028db	            0x415e	                                 pop r14	      3024	pci.c	FUNCTION_122
0x40028dd	              0xc3	                                     ret	      3024	pci.c	FUNCTION_122
0x40028de	          0x4189f5	                           mov r13d, esi	      3024	pci.c	FUNCTION_122
0x40028e1	      0xba15000000	                           mov edx, 0x15	      3024	pci.c	FUNCTION_122
0x40028e6	            0x31f6	                            xor esi, esi	      3024	pci.c	FUNCTION_122
0x40028e8	          0x4989fc	                            mov r12, rdi	      3024	pci.c	FUNCTION_122
0x40028eb	      0xe8a0f3ffff	call sym.pci_find_next_ext_capability.part.21	      3024	pci.c	FUNCTION_122
0x40028f0	            0x85c0	                           test eax, eax	      3007	pci.c	FUNCTION_122	IF_1
0x40028f2	            0x89c5	                            mov ebp, eax	      3007	pci.c	FUNCTION_122	IF_1
0x40028f4	            0x74c2	                            je 0x40028b8	      3007	pci.c	FUNCTION_122	IF_1
0x40028f6	          0x8d5808	                      lea ebx, [rax + 8]	      3010	pci.c	FUNCTION_122	CALL_2
0x40028f9	      0x488d542404	                      lea rdx, [rsp + 4]	      3010	pci.c	FUNCTION_122	CALL_2
0x40028fe	          0x4c89e7	                            mov rdi, r12	      3010	pci.c	FUNCTION_122	CALL_2
0x4002901	            0x89de	                            mov esi, ebx	      3010	pci.c	FUNCTION_122	CALL_2
0x4002903	      0xe800000000	                          call 0x4002908	      3010	pci.c	FUNCTION_122	CALL_2
0x4002908	        0x8b442404	                mov eax, dword [rsp + 4]	      3011	pci.c	FUNCTION_122
0x400290c	      0x25e0000000	                           and eax, 0xe0	      3011	pci.c	FUNCTION_122
0x4002911	          0xc1e805	                              shr eax, 5	      3011	pci.c	FUNCTION_122
0x4002914	            0x85c0	                           test eax, eax	      3014	pci.c	FUNCTION_122	FOR_1
0x4002916	      0x448d74c500	                 lea r14d, [rbp + rax*8]	      3014	pci.c	FUNCTION_122	FOR_1
0x400291b	            0x750c	                           jne 0x4002929	      3014	pci.c	FUNCTION_122	FOR_1
0x400291d	            0xeb2c	                           jmp 0x400294b	      3014	pci.c	FUNCTION_122	FOR_1
0x400291f	          0x4439f3	                           cmp ebx, r14d	      3014	pci.c	FUNCTION_122	FOR_1
0x4002922	            0x89dd	                            mov ebp, ebx	      3014	pci.c	FUNCTION_122	FOR_1
0x4002924	            0x7425	                            je 0x400294b	      3014	pci.c	FUNCTION_122	FOR_1
0x4002926	          0x83c308	                              add ebx, 8	      3014	pci.c	FUNCTION_122	FOR_1
0x4002929	      0x488d542404	                      lea rdx, [rsp + 4]	      3017	pci.c	FUNCTION_122	FOR_1	CALL_3
0x400292e	            0x89de	                            mov esi, ebx	      3017	pci.c	FUNCTION_122	FOR_1	CALL_3
0x4002930	          0x4c89e7	                            mov rdi, r12	      3017	pci.c	FUNCTION_122	FOR_1	CALL_3
0x4002933	      0xe800000000	                          call 0x4002938	      3017	pci.c	FUNCTION_122	FOR_1	CALL_3
0x4002938	        0x8b542404	                mov edx, dword [rsp + 4]	      3019	pci.c	FUNCTION_122	FOR_1	IF_2
0x400293c	          0x83e207	                              and edx, 7	      3019	pci.c	FUNCTION_122	FOR_1	IF_2
0x400293f	          0x4439ea	                           cmp edx, r13d	      3019	pci.c	FUNCTION_122	FOR_1	IF_2
0x4002942	            0x75db	                           jne 0x400291f	      3019	pci.c	FUNCTION_122	FOR_1	IF_2
0x4002944	            0x89e8	                            mov eax, ebp	      3020	pci.c	FUNCTION_122	FOR_1	IF_2
0x4002946	      0xe972ffffff	                           jmp 0x40028bd	      3020	pci.c	FUNCTION_122	FOR_1	IF_2
0x400294b	      0xb8feffffff	                     mov eax, 0xfffffffe	      3023	pci.c	FUNCTION_122
0x4002950	      0xe968ffffff	                           jmp 0x40028bd	      3023	pci.c	FUNCTION_122
0x4002955	      0xe800000000	                          call 0x400295a	      3024	pci.c	FUNCTION_122
pci_bus_max_busnr	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,0:DO,0:functions,1:WHILE,0	20
0x4000040	            0x4154	                                push r12	       141	pci.c	FUNCTION_3
0x4000042	              0x55	                                push rbp	       141	pci.c	FUNCTION_3
0x4000043	        0x4c8d6718	                   lea r12, [rdi + 0x18]	       146	pci.c	FUNCTION_3	FUNCTION_1
0x4000047	              0x53	                                push rbx	       141	pci.c	FUNCTION_3
0x4000048	        0x488b5f18	            mov rbx, qword [rdi + 0x18] 	       146	pci.c	FUNCTION_3	FUNCTION_1
0x400004c	     0xfb6af880000	           movzx ebp, byte [rdi + 0x88] 	       145	pci.c	FUNCTION_3
0x4000053	          0x4939dc	                            cmp r12, rbx	       146	pci.c	FUNCTION_3	FUNCTION_1
0x4000056	            0x7416	                            je 0x400006e	       146	pci.c	FUNCTION_3	FUNCTION_1
0x4000058	          0x4889df	                            mov rdi, rbx	       147	pci.c	FUNCTION_3	FUNCTION_1	CALL_1
0x400005b	      0xe800000000	                          call 0x4000060	       147	pci.c	FUNCTION_3	FUNCTION_1	CALL_1
0x4000060	          0x488b1b	                    mov rbx, qword [rbx]	       146	pci.c	FUNCTION_3	FUNCTION_1
0x4000063	          0x4038c5	                             cmp bpl, al	       146	pci.c	FUNCTION_3	FUNCTION_1
0x4000066	           0xf42e8	                          cmovb ebp, eax	       146	pci.c	FUNCTION_3	FUNCTION_1
0x4000069	          0x4c39e3	                            cmp rbx, r12	       146	pci.c	FUNCTION_3	FUNCTION_1
0x400006c	            0x75ea	                           jne 0x4000058	       146	pci.c	FUNCTION_3	FUNCTION_1
0x400006e	            0x89e8	                            mov eax, ebp	       152	pci.c	FUNCTION_3
0x4000070	              0x5b	                                 pop rbx	       152	pci.c	FUNCTION_3
0x4000071	              0x5d	                                 pop rbp	       152	pci.c	FUNCTION_3
0x4000072	            0x415c	                                 pop r12	       152	pci.c	FUNCTION_3
0x4000074	              0xc3	                                     ret	       152	pci.c	FUNCTION_3
pci_check_and_mask_intx	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	2
0x40002e0	      0xbe01000000	                              mov esi, 1	      3952	pci.c	FUNCTION_160	CALL_1
0x40002e5	      0xe906ffffff	     jmp sym.pci_check_and_set_intx_mask	      3952	pci.c	FUNCTION_160	CALL_1
pci_load_saved_state	IF,2:FOR,0:SWITCH,0:ELSE,0:CALL,3:DO,0:functions,0:WHILE,1	59
0x4000cd0	    0x80a73b060000	            and byte [rdi + 0x63b], 0xfb	      1253	pci.c	FUNCTION_54
0x4000cd7	            0x31c0	                            xor eax, eax	      1256	pci.c	FUNCTION_54	IF_1
0x4000cd9	          0x4885f6	                           test rsi, rsi	      1255	pci.c	FUNCTION_54	IF_1
0x4000cdc	     0xf8481000000	                            je 0x4000d63	      1255	pci.c	FUNCTION_54	IF_1
0x4000ce2	              0x55	                                push rbp	      1250	pci.c	FUNCTION_54
0x4000ce3	              0x53	                                push rbx	      1250	pci.c	FUNCTION_54
0x4000ce4	          0x4889fd	                            mov rbp, rdi	      1250	pci.c	FUNCTION_54
0x4000ce7	          0x488b16	                    mov rdx, qword [rsi]	      1258	pci.c	FUNCTION_54	CALL_1
0x4000cea	        0x488d5e40	                   lea rbx, [rsi + 0x40]	      1261	pci.c	FUNCTION_54
0x4000cee	    0x488997440600	            mov qword [rdi + 0x644], rdx	      1258	pci.c	FUNCTION_54	CALL_1
0x4000cf5	        0x488b5608	                mov rdx, qword [rsi + 8]	      1258	pci.c	FUNCTION_54	CALL_1
0x4000cf9	    0x4889974c0600	            mov qword [rdi + 0x64c], rdx	      1258	pci.c	FUNCTION_54	CALL_1
0x4000d00	        0x488b5610	            mov rdx, qword [rsi + 0x10] 	      1258	pci.c	FUNCTION_54	CALL_1
0x4000d04	    0x488997540600	            mov qword [rdi + 0x654], rdx	      1258	pci.c	FUNCTION_54	CALL_1
0x4000d0b	        0x488b5618	            mov rdx, qword [rsi + 0x18] 	      1258	pci.c	FUNCTION_54	CALL_1
0x4000d0f	    0x4889975c0600	            mov qword [rdi + 0x65c], rdx	      1258	pci.c	FUNCTION_54	CALL_1
0x4000d16	        0x488b5620	            mov rdx, qword [rsi + 0x20] 	      1258	pci.c	FUNCTION_54	CALL_1
0x4000d1a	    0x488997640600	            mov qword [rdi + 0x664], rdx	      1258	pci.c	FUNCTION_54	CALL_1
0x4000d21	        0x488b5628	            mov rdx, qword [rsi + 0x28] 	      1258	pci.c	FUNCTION_54	CALL_1
0x4000d25	    0x4889976c0600	            mov qword [rdi + 0x66c], rdx	      1258	pci.c	FUNCTION_54	CALL_1
0x4000d2c	        0x488b5630	            mov rdx, qword [rsi + 0x30] 	      1258	pci.c	FUNCTION_54	CALL_1
0x4000d30	    0x488997740600	            mov qword [rdi + 0x674], rdx	      1258	pci.c	FUNCTION_54	CALL_1
0x4000d37	        0x488b5638	            mov rdx, qword [rsi + 0x38] 	      1258	pci.c	FUNCTION_54	CALL_1
0x4000d3b	    0x4889977c0600	            mov qword [rdi + 0x67c], rdx	      1258	pci.c	FUNCTION_54	CALL_1
0x4000d42	          0x8b5644	            mov edx, dword [rsi + 0x44] 	      1262	pci.c	FUNCTION_54	WHILE_1
0x4000d45	            0x85d2	                           test edx, edx	      1262	pci.c	FUNCTION_54	WHILE_1
0x4000d47	            0x7452	                            je 0x4000d9b	      1262	pci.c	FUNCTION_54	WHILE_1
0x4000d49	    0x488bbd880600	           mov rdi, qword [rbp + 0x688] 	       993	pci.c	FUNCTION_41	FUNCTION_1
0x4000d50	         0xfb64302	               movzx eax, byte [rbx + 2]	      1265	pci.c	FUNCTION_54	WHILE_1	CALL_2
0x4000d54	           0xfb70b	                   movzx ecx, word [rbx]	      1265	pci.c	FUNCTION_54	WHILE_1	CALL_2
0x4000d57	          0x4885ff	                           test rdi, rdi	       993	pci.c	FUNCTION_41	FUNCTION_1
0x4000d5a	            0x7517	                           jne 0x4000d73	       993	pci.c	FUNCTION_41	FUNCTION_1
0x4000d5c	              0x5b	                                 pop rbx	      1276	pci.c	FUNCTION_54
0x4000d5d	              0x5d	                                 pop rbp	      1276	pci.c	FUNCTION_54
0x4000d5e	      0xb8eaffffff	                     mov eax, 0xffffffea	      1267	pci.c	FUNCTION_54	WHILE_1	IF_2
0x4000d63	            0xf3c3	                                     ret	      1276	pci.c	FUNCTION_54
0x4000d65	        0x663b4f10	               cmp cx, word [rdi + 0x10]	       994	pci.c	FUNCTION_41	FUNCTION_1	IF_1
0x4000d69	            0x740f	                            je 0x4000d7a	       994	pci.c	FUNCTION_41	FUNCTION_1	IF_1
0x4000d6b	          0x488b3f	                    mov rdi, qword [rdi]	       993	pci.c	FUNCTION_41	FUNCTION_1
0x4000d6e	          0x4885ff	                           test rdi, rdi	       993	pci.c	FUNCTION_41	FUNCTION_1
0x4000d71	            0x74e9	                            je 0x4000d5c	       993	pci.c	FUNCTION_41	FUNCTION_1
0x4000d73	          0x3a4712	               cmp al, byte [rdi + 0x12]	       994	pci.c	FUNCTION_41	FUNCTION_1	IF_1
0x4000d76	            0x75f3	                           jne 0x4000d6b	       994	pci.c	FUNCTION_41	FUNCTION_1	IF_1
0x4000d78	            0xebeb	                           jmp 0x4000d65	       994	pci.c	FUNCTION_41	FUNCTION_1	IF_1
0x4000d7a	          0x395714	            cmp dword [rdi + 0x14], edx 	      1266	pci.c	FUNCTION_54	WHILE_1	IF_2
0x4000d7d	            0x75dd	                           jne 0x4000d5c	      1266	pci.c	FUNCTION_54	WHILE_1	IF_2
0x4000d7f	        0x488d7308	                      lea rsi, [rbx + 8]	      1269	pci.c	FUNCTION_54	WHILE_1	CALL_3
0x4000d83	        0x4883c718	                           add rdi, 0x18	      1269	pci.c	FUNCTION_54	WHILE_1	CALL_3
0x4000d87	      0xe800000000	                          call 0x4000d8c	      1269	pci.c	FUNCTION_54	WHILE_1	CALL_3
0x4000d8c	          0x8b4304	                mov eax, dword [rbx + 4]	      1271	pci.c	FUNCTION_54	WHILE_1
0x4000d8f	      0x488d5c0308	                lea rbx, [rbx + rax + 8]	      1270	pci.c	FUNCTION_54	WHILE_1
0x4000d94	          0x8b5304	                mov edx, dword [rbx + 4]	      1262	pci.c	FUNCTION_54	WHILE_1
0x4000d97	            0x85d2	                           test edx, edx	      1262	pci.c	FUNCTION_54	WHILE_1
0x4000d99	            0x75ae	                           jne 0x4000d49	      1262	pci.c	FUNCTION_54	WHILE_1
0x4000d9b	    0x808d3b060000	                or byte [rbp + 0x63b], 4	      1274	pci.c	FUNCTION_54
0x4000da2	            0x31c0	                            xor eax, eax	      1275	pci.c	FUNCTION_54
0x4000da4	              0x5b	                                 pop rbx	      1276	pci.c	FUNCTION_54
0x4000da5	              0x5d	                                 pop rbp	      1276	pci.c	FUNCTION_54
0x4000da6	            0xebbb	                           jmp 0x4000d63	      1276	pci.c	FUNCTION_54
pci_reset_hotplug_slot	IF,2:FOR,0:SWITCH,0:ELSE,0:CALL,3:DO,0:functions,0:WHILE,0	31
0x4001560	          0x4885ff	                           test rdi, rdi	      4228	pci.c	FUNCTION_172	IF_1	CALL_1
0x4001563	            0x4154	                                push r12	      4225	pci.c	FUNCTION_172
0x4001565	              0x55	                                push rbp	      4225	pci.c	FUNCTION_172
0x4001566	              0x53	                                push rbx	      4225	pci.c	FUNCTION_172
0x4001567	            0x7445	                            je 0x40015ae	      4228	pci.c	FUNCTION_172	IF_1	CALL_1
0x4001569	          0x488b07	                    mov rax, qword [rdi]	      4228	pci.c	FUNCTION_172	IF_1	CALL_1
0x400156c	          0x4889fb	                            mov rbx, rdi	      4228	pci.c	FUNCTION_172	IF_1	CALL_1
0x400156f	          0x4189f4	                           mov r12d, esi	      4228	pci.c	FUNCTION_172	IF_1	CALL_1
0x4001572	          0x488b38	                    mov rdi, qword [rax]	      4228	pci.c	FUNCTION_172	IF_1	CALL_1
0x4001575	      0xe800000000	                          call 0x400157a	      4228	pci.c	FUNCTION_172	IF_1	CALL_1
0x400157a	            0x84c0	                             test al, al	      4228	pci.c	FUNCTION_172	IF_1	CALL_1
0x400157c	            0x7430	                            je 0x40015ae	      4228	pci.c	FUNCTION_172	IF_1	CALL_1
0x400157e	          0x488b13	                    mov rdx, qword [rbx]	      4231	pci.c	FUNCTION_172	IF_2
0x4001581	      0xbde7ffffff	                     mov ebp, 0xffffffe7	      4226	pci.c	FUNCTION_172
0x4001586	        0x488b4250	            mov rax, qword [rdx + 0x50] 	      4231	pci.c	FUNCTION_172	IF_2
0x400158a	          0x4885c0	                           test rax, rax	      4231	pci.c	FUNCTION_172	IF_2
0x400158d	            0x7410	                            je 0x400159f	      4231	pci.c	FUNCTION_172	IF_2
0x400158f	          0x4489e6	                           mov esi, r12d	      4232	pci.c	FUNCTION_172	CALL_2
0x4001592	          0x4889df	                            mov rdi, rbx	      4232	pci.c	FUNCTION_172	CALL_2
0x4001595	      0xe800000000	                          call 0x400159a	      4232	pci.c	FUNCTION_172	CALL_2
0x400159a	          0x488b13	                    mov rdx, qword [rbx]	      4232	pci.c	FUNCTION_172	CALL_2
0x400159d	            0x89c5	                            mov ebp, eax	      4232	pci.c	FUNCTION_172	CALL_2
0x400159f	          0x488b3a	                    mov rdi, qword [rdx]	      4234	pci.c	FUNCTION_172	CALL_3
0x40015a2	      0xe800000000	                          call 0x40015a7	      4234	pci.c	FUNCTION_172	CALL_3
0x40015a7	            0x89e8	                            mov eax, ebp	      4237	pci.c	FUNCTION_172
0x40015a9	              0x5b	                                 pop rbx	      4237	pci.c	FUNCTION_172
0x40015aa	              0x5d	                                 pop rbp	      4237	pci.c	FUNCTION_172
0x40015ab	            0x415c	                                 pop r12	      4237	pci.c	FUNCTION_172
0x40015ad	              0xc3	                                     ret	      4237	pci.c	FUNCTION_172
0x40015ae	      0xbde7ffffff	                     mov ebp, 0xffffffe7	      4229	pci.c	FUNCTION_172	IF_1
0x40015b3	            0xebf2	                           jmp 0x40015a7	      4229	pci.c	FUNCTION_172	IF_1
pci_acs_path_enabled	IF,2:FOR,0:SWITCH,0:ELSE,0:CALL,2:DO,1:functions,0:WHILE,0	29
0x4004ba0	            0x4154	                                push r12	      2974	pci.c	FUNCTION_121
0x4004ba2	          0x4989f4	                            mov r12, rsi	      2974	pci.c	FUNCTION_121
0x4004ba5	              0x55	                                push rbp	      2974	pci.c	FUNCTION_121
0x4004ba6	           0xfb7ea	                           movzx ebp, dx	      2974	pci.c	FUNCTION_121
0x4004ba9	              0x53	                                push rbx	      2974	pci.c	FUNCTION_121
0x4004baa	          0x4889fb	                            mov rbx, rdi	      2974	pci.c	FUNCTION_121
0x4004bad	            0xeb17	                           jmp 0x4004bc6	      2974	pci.c	FUNCTION_121
0x4004baf	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      2983	pci.c	FUNCTION_121	DO_1	IF_2	CALL_2
0x4004bb3	      0x4883791000	               cmp qword [rcx + 0x10], 0	      2983	pci.c	FUNCTION_121	DO_1	IF_2	CALL_2
0x4004bb8	            0x741f	                            je 0x4004bd9	      2983	pci.c	FUNCTION_121	DO_1	IF_2	CALL_2
0x4004bba	          0x4c39e3	                            cmp rbx, r12	      2987	pci.c	FUNCTION_121	DO_1
0x4004bbd	        0x488b4938	            mov rcx, qword [rcx + 0x38] 	      2986	pci.c	FUNCTION_121	DO_1
0x4004bc1	            0x7411	                            je 0x4004bd4	      2987	pci.c	FUNCTION_121	DO_1
0x4004bc3	          0x4889cb	                            mov rbx, rcx	      2986	pci.c	FUNCTION_121	DO_1
0x4004bc6	            0x89ee	                            mov esi, ebp	      2980	pci.c	FUNCTION_121	DO_1	IF_1	CALL_1
0x4004bc8	          0x4889df	                            mov rdi, rbx	      2980	pci.c	FUNCTION_121	DO_1	IF_1	CALL_1
0x4004bcb	      0xe800000000	                          call 0x4004bd0	      2980	pci.c	FUNCTION_121	DO_1	IF_1	CALL_1
0x4004bd0	            0x84c0	                             test al, al	      2980	pci.c	FUNCTION_121	DO_1	IF_1	CALL_1
0x4004bd2	            0x75db	                           jne 0x4004baf	      2980	pci.c	FUNCTION_121	DO_1	IF_1	CALL_1
0x4004bd4	              0x5b	                                 pop rbx	      2990	pci.c	FUNCTION_121
0x4004bd5	              0x5d	                                 pop rbp	      2990	pci.c	FUNCTION_121
0x4004bd6	            0x415c	                                 pop r12	      2990	pci.c	FUNCTION_121
0x4004bd8	              0xc3	                                     ret	      2990	pci.c	FUNCTION_121
0x4004bd9	          0x4d85e4	                           test r12, r12	      2984	pci.c	FUNCTION_121	DO_1	IF_2
0x4004bdc	              0x5b	                                 pop rbx	      2990	pci.c	FUNCTION_121
0x4004bdd	           0xf94c0	                                 sete al	      2984	pci.c	FUNCTION_121	DO_1	IF_2
0x4004be0	              0x5d	                                 pop rbp	      2990	pci.c	FUNCTION_121
0x4004be1	            0x415c	                                 pop r12	      2990	pci.c	FUNCTION_121
0x4004be3	              0xc3	                                     ret	      2990	pci.c	FUNCTION_121
pci_select_bars	IF,1:FOR,1:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	14
0x4000300	    0x4881c7900300	                          add rdi, 0x390	      5312	pci.c	FUNCTION_217
0x4000307	            0x31c0	                            xor eax, eax	      5313	pci.c	FUNCTION_217
0x4000309	            0x31c9	                            xor ecx, ecx	      5314	pci.c	FUNCTION_217	FOR_1
0x400030b	    0x41b801000000	                              mov r8d, 1	      5316	pci.c	FUNCTION_217	FOR_1	IF_1
0x4000311	          0x488537	                   test qword [rdi], rsi	      5315	pci.c	FUNCTION_217	FOR_1	IF_1	CALL_1
0x4000314	            0x7407	                            je 0x400031d	      5315	pci.c	FUNCTION_217	FOR_1	IF_1	CALL_1
0x4000316	          0x4489c2	                            mov edx, r8d	      5316	pci.c	FUNCTION_217	FOR_1	IF_1
0x4000319	            0xd3e2	                             shl edx, cl	      5316	pci.c	FUNCTION_217	FOR_1	IF_1
0x400031b	             0x9d0	                             or eax, edx	      5316	pci.c	FUNCTION_217	FOR_1	IF_1
0x400031d	          0x83c101	                              add ecx, 1	      5314	pci.c	FUNCTION_217	FOR_1
0x4000320	        0x4883c740	                           add rdi, 0x40	      5314	pci.c	FUNCTION_217	FOR_1
0x4000324	          0x83f90b	                            cmp ecx, 0xb	      5314	pci.c	FUNCTION_217	FOR_1
0x4000327	            0x75e8	                           jne 0x4000311	      5314	pci.c	FUNCTION_217	FOR_1
0x4000329	            0xf3c3	                                     ret	      5318	pci.c	FUNCTION_217
pci_check_pme_status	IF,3:FOR,0:SWITCH,0:ELSE,0:CALL,2:DO,0:functions,0:WHILE,0	40
0x4003cc0	            0x4154	                                push r12	      1708	pci.c	FUNCTION_79
0x4003cc2	              0x55	                                push rbp	      1708	pci.c	FUNCTION_79
0x4003cc3	              0x53	                                push rbx	      1708	pci.c	FUNCTION_79
0x4003cc4	        0x4883ec10	                           sub rsp, 0x10	      1708	pci.c	FUNCTION_79
0x4003cc8	     0xfb6b7840000	           movzx esi, byte [rdi + 0x84] 	      1713	pci.c	FUNCTION_79	IF_1
0x4003ccf	    0x65488b042528	                mov rax, qword gs:[0x28]	      1708	pci.c	FUNCTION_79
0x4003cd8	      0x4889442408	                mov qword [rsp + 8], rax	      1708	pci.c	FUNCTION_79
0x4003cdd	            0x31c0	                            xor eax, eax	      1708	pci.c	FUNCTION_79
0x4003cdf	          0x4084f6	                           test sil, sil	      1713	pci.c	FUNCTION_79	IF_1
0x4003ce2	            0x751b	                           jne 0x4003cff	      1713	pci.c	FUNCTION_79	IF_1
0x4003ce4	            0x31c0	                            xor eax, eax	      1714	pci.c	FUNCTION_79	IF_1
0x4003ce6	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1732	pci.c	FUNCTION_79
0x4003ceb	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      1732	pci.c	FUNCTION_79
0x4003cf4	            0x754d	                           jne 0x4003d43	      1732	pci.c	FUNCTION_79
0x4003cf6	        0x4883c410	                           add rsp, 0x10	      1732	pci.c	FUNCTION_79
0x4003cfa	              0x5b	                                 pop rbx	      1732	pci.c	FUNCTION_79
0x4003cfb	              0x5d	                                 pop rbp	      1732	pci.c	FUNCTION_79
0x4003cfc	            0x415c	                                 pop r12	      1732	pci.c	FUNCTION_79
0x4003cfe	              0xc3	                                     ret	      1732	pci.c	FUNCTION_79
0x4003cff	          0x8d5e04	                      lea ebx, [rsi + 4]	      1716	pci.c	FUNCTION_79
0x4003d02	      0x488d542406	                      lea rdx, [rsp + 6]	      1717	pci.c	FUNCTION_79	CALL_1
0x4003d07	          0x4889fd	                            mov rbp, rdi	      1717	pci.c	FUNCTION_79	CALL_1
0x4003d0a	            0x89de	                            mov esi, ebx	      1717	pci.c	FUNCTION_79	CALL_1
0x4003d0c	      0xe800000000	                          call 0x4003d11	      1717	pci.c	FUNCTION_79	CALL_1
0x4003d11	       0xfb7542406	               movzx edx, word [rsp + 6]	      1718	pci.c	FUNCTION_79	IF_2
0x4003d16	          0x6685d2	                             test dx, dx	      1718	pci.c	FUNCTION_79	IF_2
0x4003d19	            0x79c9	                           jns 0x4003ce4	      1718	pci.c	FUNCTION_79	IF_2
0x4003d1b	          0x4531e4	                          xor r12d, r12d	      1711	pci.c	FUNCTION_79
0x4003d1e	          0xf6c601	                              test dh, 1	      1723	pci.c	FUNCTION_79	IF_3
0x4003d21	            0x740e	                            je 0x4003d31	      1723	pci.c	FUNCTION_79	IF_3
0x4003d23	          0x80e6fe	                            and dh, 0xfe	      1723	pci.c	FUNCTION_79	IF_3
0x4003d26	    0x41bc01000000	                             mov r12d, 1	      1726	pci.c	FUNCTION_79	IF_3
0x4003d2c	      0x6689542406	                  mov word [rsp + 6], dx	      1725	pci.c	FUNCTION_79	IF_3
0x4003d31	           0xfb7d2	                           movzx edx, dx	      1729	pci.c	FUNCTION_79	CALL_2
0x4003d34	            0x89de	                            mov esi, ebx	      1729	pci.c	FUNCTION_79	CALL_2
0x4003d36	          0x4889ef	                            mov rdi, rbp	      1729	pci.c	FUNCTION_79	CALL_2
0x4003d39	      0xe800000000	                          call 0x4003d3e	      1729	pci.c	FUNCTION_79	CALL_2
0x4003d3e	          0x4489e0	                           mov eax, r12d	      1731	pci.c	FUNCTION_79
0x4003d41	            0xeba3	                           jmp 0x4003ce6	      1731	pci.c	FUNCTION_79
0x4003d43	      0xe800000000	                          call 0x4003d48	      1732	pci.c	FUNCTION_79
pci_probe_reset_slot	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	2
0x40024d0	      0xbe01000000	                              mov esi, 1	      4748	pci.c	FUNCTION_197	CALL_1
0x40024d5	      0xe9e6feffff	                  jmp sym.pci_slot_reset	      4748	pci.c	FUNCTION_197	CALL_1
pci_dev_save_and_disable	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,4:DO,0:functions,0:WHILE,0	22
0x40035b0	              0x53	                                push rbx	      4280	pci.c	FUNCTION_177
0x40035b1	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      4282	pci.c	FUNCTION_177
0x40035b5	          0x4889fb	                            mov rbx, rdi	      4280	pci.c	FUNCTION_177
0x40035b8	          0x4885c0	                           test rax, rax	      4282	pci.c	FUNCTION_177
0x40035bb	            0x7417	                            je 0x40035d4	      4282	pci.c	FUNCTION_177
0x40035bd	        0x488b4060	            mov rax, qword [rax + 0x60] 	      4282	pci.c	FUNCTION_177
0x40035c1	          0x4885c0	                           test rax, rax	      4289	pci.c	FUNCTION_177	IF_1
0x40035c4	            0x740e	                            je 0x40035d4	      4289	pci.c	FUNCTION_177	IF_1
0x40035c6	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4289	pci.c	FUNCTION_177	IF_1
0x40035ca	          0x4885c0	                           test rax, rax	      4289	pci.c	FUNCTION_177	IF_1
0x40035cd	            0x7405	                            je 0x40035d4	      4289	pci.c	FUNCTION_177	IF_1
0x40035cf	      0xe800000000	                          call 0x40035d4	      4290	pci.c	FUNCTION_177	CALL_1
0x40035d4	            0x31f6	                            xor esi, esi	      4297	pci.c	FUNCTION_177	CALL_2
0x40035d6	          0x4889df	                            mov rdi, rbx	      4297	pci.c	FUNCTION_177	CALL_2
0x40035d9	      0xe800000000	                          call 0x40035de	      4297	pci.c	FUNCTION_177	CALL_2
0x40035de	          0x4889df	                            mov rdi, rbx	      4299	pci.c	FUNCTION_177	CALL_3
0x40035e1	      0xe800000000	                          call 0x40035e6	      4299	pci.c	FUNCTION_177	CALL_3
0x40035e6	          0x4889df	                            mov rdi, rbx	      4307	pci.c	FUNCTION_177	CALL_4
0x40035e9	      0xba00040000	                          mov edx, 0x400	      4307	pci.c	FUNCTION_177	CALL_4
0x40035ee	      0xbe04000000	                              mov esi, 4	      4307	pci.c	FUNCTION_177	CALL_4
0x40035f3	              0x5b	                                 pop rbx	      4308	pci.c	FUNCTION_177
0x40035f4	      0xe900000000	                           jmp 0x40035f9	      4307	pci.c	FUNCTION_177	CALL_4
__pci_request_selected_regions	IF,3:FOR,1:SWITCH,0:ELSE,0:CALL,2:DO,0:functions,0:WHILE,1	41
0x4001360	            0x4156	                                push r14	      3371	pci.c	FUNCTION_135
0x4001362	          0x4989d6	                            mov r14, rdx	      3371	pci.c	FUNCTION_135
0x4001365	            0x4155	                                push r13	      3371	pci.c	FUNCTION_135
0x4001367	          0x4189cd	                           mov r13d, ecx	      3371	pci.c	FUNCTION_135
0x400136a	            0x4154	                                push r12	      3371	pci.c	FUNCTION_135
0x400136c	          0x4989fc	                            mov r12, rdi	      3371	pci.c	FUNCTION_135
0x400136f	              0x55	                                push rbp	      3371	pci.c	FUNCTION_135
0x4001370	            0x89f5	                            mov ebp, esi	      3371	pci.c	FUNCTION_135
0x4001372	              0x53	                                push rbx	      3371	pci.c	FUNCTION_135
0x4001373	            0x31db	                            xor ebx, ebx	      3374	pci.c	FUNCTION_135	FOR_1
0x4001375	            0xeb08	                           jmp 0x400137f	      3374	pci.c	FUNCTION_135	FOR_1
0x4001377	          0x83c301	                              add ebx, 1	      3374	pci.c	FUNCTION_135	FOR_1
0x400137a	          0x83fb06	                              cmp ebx, 6	      3374	pci.c	FUNCTION_135	FOR_1
0x400137d	            0x7432	                            je 0x40013b1	      3374	pci.c	FUNCTION_135	FOR_1
0x400137f	           0xfa3dd	                             bt ebp, ebx	      3375	pci.c	FUNCTION_135	FOR_1	IF_1
0x4001382	            0x73f3	                           jae 0x4001377	      3375	pci.c	FUNCTION_135	FOR_1	IF_1
0x4001384	          0x4489e9	                           mov ecx, r13d	      3376	pci.c	FUNCTION_135	FOR_1	IF_1	IF_2	CALL_1
0x4001387	          0x4c89f2	                            mov rdx, r14	      3376	pci.c	FUNCTION_135	FOR_1	IF_1	IF_2	CALL_1
0x400138a	            0x89de	                            mov esi, ebx	      3376	pci.c	FUNCTION_135	FOR_1	IF_1	IF_2	CALL_1
0x400138c	          0x4c89e7	                            mov rdi, r12	      3376	pci.c	FUNCTION_135	FOR_1	IF_1	IF_2	CALL_1
0x400138f	      0xe88cfeffff	           call sym.__pci_request_region	      3376	pci.c	FUNCTION_135	FOR_1	IF_1	IF_2	CALL_1
0x4001394	            0x85c0	                           test eax, eax	      3376	pci.c	FUNCTION_135	FOR_1	IF_1	IF_2	CALL_1
0x4001396	            0x74df	                            je 0x4001377	      3376	pci.c	FUNCTION_135	FOR_1	IF_1	IF_2	CALL_1
0x4001398	          0x83eb01	                              sub ebx, 1	      3381	pci.c	FUNCTION_135	WHILE_1
0x400139b	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      3381	pci.c	FUNCTION_135	WHILE_1
0x400139e	            0x741c	                            je 0x40013bc	      3381	pci.c	FUNCTION_135	WHILE_1
0x40013a0	           0xfa3dd	                             bt ebp, ebx	      3382	pci.c	FUNCTION_135	WHILE_1	IF_3
0x40013a3	            0x73f3	                           jae 0x4001398	      3382	pci.c	FUNCTION_135	WHILE_1	IF_3
0x40013a5	            0x89de	                            mov esi, ebx	      3383	pci.c	FUNCTION_135	WHILE_1	IF_3
0x40013a7	          0x4c89e7	                            mov rdi, r12	      3383	pci.c	FUNCTION_135	WHILE_1	IF_3
0x40013aa	      0xe800000000	                          call 0x40013af	      3383	pci.c	FUNCTION_135	WHILE_1	IF_3
0x40013af	            0xebe7	                           jmp 0x4001398	      3383	pci.c	FUNCTION_135	WHILE_1	IF_3
0x40013b1	            0x31c0	                            xor eax, eax	      3378	pci.c	FUNCTION_135
0x40013b3	              0x5b	                                 pop rbx	      3386	pci.c	FUNCTION_135
0x40013b4	              0x5d	                                 pop rbp	      3386	pci.c	FUNCTION_135
0x40013b5	            0x415c	                                 pop r12	      3386	pci.c	FUNCTION_135
0x40013b7	            0x415d	                                 pop r13	      3386	pci.c	FUNCTION_135
0x40013b9	            0x415e	                                 pop r14	      3386	pci.c	FUNCTION_135
0x40013bb	              0xc3	                                     ret	      3386	pci.c	FUNCTION_135
0x40013bc	      0xb8f0ffffff	                     mov eax, 0xfffffff0	      3385	pci.c	FUNCTION_135
0x40013c1	            0xebf0	                           jmp 0x40013b3	      3385	pci.c	FUNCTION_135
pci_rebar_get_current_size	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,2:DO,0:functions,0:WHILE,0	23
0x4004c50	              0x53	                                push rbx	      3056	pci.c	FUNCTION_124
0x4004c51	          0x4889fb	                            mov rbx, rdi	      3056	pci.c	FUNCTION_124
0x4004c54	        0x4883ec10	                           sub rsp, 0x10	      3056	pci.c	FUNCTION_124
0x4004c58	    0x65488b042528	                mov rax, qword gs:[0x28]	      3056	pci.c	FUNCTION_124
0x4004c61	      0x4889442408	                mov qword [rsp + 8], rax	      3056	pci.c	FUNCTION_124
0x4004c66	            0x31c0	                            xor eax, eax	      3056	pci.c	FUNCTION_124
0x4004c68	      0xe823dcffff	             call sym.pci_rebar_find_pos	      3060	pci.c	FUNCTION_124	CALL_1
0x4004c6d	            0x85c0	                           test eax, eax	      3061	pci.c	FUNCTION_124	IF_1
0x4004c6f	            0x781c	                            js 0x4004c8d	      3061	pci.c	FUNCTION_124	IF_1
0x4004c71	          0x8d7008	                      lea esi, [rax + 8]	      3064	pci.c	FUNCTION_124	CALL_2
0x4004c74	      0x488d542404	                      lea rdx, [rsp + 4]	      3064	pci.c	FUNCTION_124	CALL_2
0x4004c79	          0x4889df	                            mov rdi, rbx	      3064	pci.c	FUNCTION_124	CALL_2
0x4004c7c	      0xe800000000	                          call 0x4004c81	      3064	pci.c	FUNCTION_124	CALL_2
0x4004c81	        0x8b442404	                mov eax, dword [rsp + 4]	      3065	pci.c	FUNCTION_124
0x4004c85	      0x25001f0000	                         and eax, 0x1f00	      3065	pci.c	FUNCTION_124
0x4004c8a	          0xc1e808	                              shr eax, 8	      3065	pci.c	FUNCTION_124
0x4004c8d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3066	pci.c	FUNCTION_124
0x4004c92	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      3066	pci.c	FUNCTION_124
0x4004c9b	            0x7506	                           jne 0x4004ca3	      3066	pci.c	FUNCTION_124
0x4004c9d	        0x4883c410	                           add rsp, 0x10	      3066	pci.c	FUNCTION_124
0x4004ca1	              0x5b	                                 pop rbx	      3066	pci.c	FUNCTION_124
0x4004ca2	              0xc3	                                     ret	      3066	pci.c	FUNCTION_124
0x4004ca3	      0xe800000000	                          call 0x4004ca8	      3066	pci.c	FUNCTION_124
pcim_set_mwi	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,2:DO,0:functions,0:WHILE,0	20
0x4002240	    0xf6873b060000	              test byte [rdi + 0x63b], 1	      1511	pci.c	FUNCTION_66	IF_1	CALL_1
0x4002247	            0x7506	                           jne 0x400224f	      1511	pci.c	FUNCTION_66	IF_1	CALL_1
0x4002249	      0xb8f4ffffff	                     mov eax, 0xfffffff4	      3823	pci.c	FUNCTION_155
0x400224e	              0xc3	                                     ret	      3823	pci.c	FUNCTION_155
0x400224f	              0x53	                                push rbx	      3814	pci.c	FUNCTION_155
0x4002250	          0x4889fb	                            mov rbx, rdi	      3814	pci.c	FUNCTION_155
0x4002253	    0x488dbfa00000	                   lea rdi, [rdi + 0xa0]	      1512	pci.c	FUNCTION_66	CALL_2
0x400225a	            0x31c9	                            xor ecx, ecx	      1512	pci.c	FUNCTION_66	CALL_2
0x400225c	            0x31d2	                            xor edx, edx	      1512	pci.c	FUNCTION_66	CALL_2
0x400225e	    0x48c7c6000000	                              mov rsi, 0	      1512	pci.c	FUNCTION_66	CALL_2
0x4002265	      0xe800000000	                          call 0x400226a	      1512	pci.c	FUNCTION_66	CALL_2
0x400226a	          0x4885c0	                           test rax, rax	      3818	pci.c	FUNCTION_155	IF_1
0x400226d	            0x740c	                            je 0x400227b	      3818	pci.c	FUNCTION_155	IF_1
0x400226f	          0x800810	                     or byte [rax], 0x10	      3821	pci.c	FUNCTION_155
0x4002272	          0x4889df	                            mov rdi, rbx	      3822	pci.c	FUNCTION_155	CALL_2
0x4002275	              0x5b	                                 pop rbx	      3823	pci.c	FUNCTION_155
0x4002276	      0xe945ffffff	                     jmp sym.pci_set_mwi	      3822	pci.c	FUNCTION_155	CALL_2
0x400227b	      0xb8f4ffffff	                     mov eax, 0xfffffff4	      3823	pci.c	FUNCTION_155
0x4002280	              0x5b	                                 pop rbx	      3823	pci.c	FUNCTION_155
0x4002281	              0xc3	                                     ret	      3823	pci.c	FUNCTION_155
pci_finish_runtime_suspend	IF,2:FOR,0:SWITCH,0:ELSE,0:CALL,6:DO,0:functions,0:WHILE,0	42
0x4003f80	            0x4154	                                push r12	      2122	pci.c	FUNCTION_93
0x4003f82	              0x55	                                push rbp	      2122	pci.c	FUNCTION_93
0x4003f83	              0x53	                                push rbx	      2122	pci.c	FUNCTION_93
0x4003f84	     0xfb6b76c0100	          movzx esi, byte [rdi + 0x16c] 	        83	pm_wakeup.h	FUNCTION_241
0x4003f8b	          0x4889fb	                            mov rbx, rdi	      2122	pci.c	FUNCTION_93
0x4003f8e	          0x83e601	                              and esi, 1	      2126	pci.c	FUNCTION_93	CALL_2
0x4003f91	      0xe8dad7ffff	               call sym.pci_target_state	      2126	pci.c	FUNCTION_93	CALL_2
0x4003f96	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2127	pci.c	FUNCTION_93	IF_1
0x4003f99	            0x7461	                            je 0x4003ffc	      2127	pci.c	FUNCTION_93	IF_1
0x4003f9b	     0xfb693860000	           movzx edx, byte [rbx + 0x86] 	      2130	pci.c	FUNCTION_93
0x4003fa2	          0x83f804	                              cmp eax, 4	      2130	pci.c	FUNCTION_93
0x4003fa5	            0x89c5	                            mov ebp, eax	      2130	pci.c	FUNCTION_93
0x4003fa7	           0xf94c0	                                 sete al	      2130	pci.c	FUNCTION_93
0x4003faa	          0x4889df	                            mov rdi, rbx	      2132	pci.c	FUNCTION_93	CALL_4
0x4003fad	          0xc1e006	                              shl eax, 6	      2130	pci.c	FUNCTION_93
0x4003fb0	          0x83e2bf	                     and edx, 0xffffffbf	      2130	pci.c	FUNCTION_93
0x4003fb3	             0x9d0	                             or eax, edx	      2130	pci.c	FUNCTION_93
0x4003fb5	    0x888386000000	               mov byte [rbx + 0x86], al	      2130	pci.c	FUNCTION_93
0x4003fbb	      0xe800000000	                          call 0x4003fc0	      2132	pci.c	FUNCTION_93	CALL_4
0x4003fc0	            0x89ee	                            mov esi, ebp	      2132	pci.c	FUNCTION_93	CALL_4
0x4003fc2	           0xfb6d0	                           movzx edx, al	      2132	pci.c	FUNCTION_93	CALL_4
0x4003fc5	          0x4889df	                            mov rdi, rbx	      2132	pci.c	FUNCTION_93	CALL_4
0x4003fc8	      0xe8d3dfffff	              call sym.__pci_enable_wake	      2132	pci.c	FUNCTION_93	CALL_4
0x4003fcd	            0x89ee	                            mov esi, ebp	      2134	pci.c	FUNCTION_93	CALL_5
0x4003fcf	          0x4889df	                            mov rdi, rbx	      2134	pci.c	FUNCTION_93	CALL_5
0x4003fd2	      0xe800000000	                          call 0x4003fd7	      2134	pci.c	FUNCTION_93	CALL_5
0x4003fd7	          0x4189c4	                           mov r12d, eax	      2134	pci.c	FUNCTION_93	CALL_5
0x4003fda	            0x31c0	                            xor eax, eax	      2134	pci.c	FUNCTION_93	CALL_5
0x4003fdc	          0x4585e4	                         test r12d, r12d	      2136	pci.c	FUNCTION_93	IF_2
0x4003fdf	            0x7416	                            je 0x4003ff7	      2136	pci.c	FUNCTION_93	IF_2
0x4003fe1	            0x31d2	                            xor edx, edx	      2137	pci.c	FUNCTION_93	IF_2	CALL_6
0x4003fe3	            0x89ee	                            mov esi, ebp	      2137	pci.c	FUNCTION_93	IF_2	CALL_6
0x4003fe5	          0x4889df	                            mov rdi, rbx	      2137	pci.c	FUNCTION_93	IF_2	CALL_6
0x4003fe8	      0xe800000000	                          call 0x4003fed	      2137	pci.c	FUNCTION_93	IF_2	CALL_6
0x4003fed	    0x80a386000000	             and byte [rbx + 0x86], 0xbf	      2138	pci.c	FUNCTION_93	IF_2
0x4003ff4	          0x4489e0	                           mov eax, r12d	      2138	pci.c	FUNCTION_93	IF_2
0x4003ff7	              0x5b	                                 pop rbx	      2142	pci.c	FUNCTION_93
0x4003ff8	              0x5d	                                 pop rbp	      2142	pci.c	FUNCTION_93
0x4003ff9	            0x415c	                                 pop r12	      2142	pci.c	FUNCTION_93
0x4003ffb	              0xc3	                                     ret	      2142	pci.c	FUNCTION_93
0x4003ffc	      0xb8fbffffff	                     mov eax, 0xfffffffb	      2128	pci.c	FUNCTION_93	IF_1
0x4004001	            0xebf4	                           jmp 0x4003ff7	      2128	pci.c	FUNCTION_93	IF_1
pci_find_capability	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,2:DO,0:functions,0:WHILE,0	29
0x4001980	              0x55	                                push rbp	       266	pci.c	FUNCTION_10
0x4001981	              0x53	                                push rbx	       266	pci.c	FUNCTION_10
0x4001982	            0x89f5	                            mov ebp, esi	       266	pci.c	FUNCTION_10
0x4001984	          0x4889fb	                            mov rbx, rdi	       266	pci.c	FUNCTION_10
0x4001987	        0x4883ec10	                           sub rsp, 0x10	       266	pci.c	FUNCTION_10
0x400198b	         0xfb65749	           movzx edx, byte [rdi + 0x49] 	       269	pci.c	FUNCTION_10	CALL_1
0x400198f	          0x8b7738	            mov esi, dword [rdi + 0x38] 	       269	pci.c	FUNCTION_10	CALL_1
0x4001992	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	       269	pci.c	FUNCTION_10	CALL_1
0x4001996	    0x65488b042528	                mov rax, qword gs:[0x28]	       266	pci.c	FUNCTION_10
0x400199f	      0x4889442408	                mov qword [rsp + 8], rax	       266	pci.c	FUNCTION_10
0x40019a4	            0x31c0	                            xor eax, eax	       266	pci.c	FUNCTION_10
0x40019a6	      0xe865ffffff	       call sym.__pci_bus_find_cap_start	       269	pci.c	FUNCTION_10	CALL_1
0x40019ab	            0x85c0	                           test eax, eax	       270	pci.c	FUNCTION_10	IF_1
0x40019ad	            0x741e	                            je 0x40019cd	       270	pci.c	FUNCTION_10	IF_1
0x40019af	          0x8b7338	            mov esi, dword [rbx + 0x38] 	       271	pci.c	FUNCTION_10	CALL_2
0x40019b2	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       271	pci.c	FUNCTION_10	CALL_2
0x40019b6	      0x4c8d442404	                       lea r8, [rsp + 4]	       216	pci.c	FUNCTION_7	CALL_1
0x40019bb	           0xfb6d0	                           movzx edx, al	       216	pci.c	FUNCTION_7	CALL_1
0x40019be	            0x89e9	                            mov ecx, ebp	       216	pci.c	FUNCTION_7	CALL_1
0x40019c0	    0xc74424043000	               mov dword [rsp + 4], 0x30	       214	pci.c	FUNCTION_7
0x40019c8	      0xe8f3e9ffff	        call sym.__pci_find_next_cap_ttl	       216	pci.c	FUNCTION_7	CALL_1
0x40019cd	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       274	pci.c	FUNCTION_10
0x40019d2	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       274	pci.c	FUNCTION_10
0x40019db	            0x7507	                           jne 0x40019e4	       274	pci.c	FUNCTION_10
0x40019dd	        0x4883c410	                           add rsp, 0x10	       274	pci.c	FUNCTION_10
0x40019e1	              0x5b	                                 pop rbx	       274	pci.c	FUNCTION_10
0x40019e2	              0x5d	                                 pop rbp	       274	pci.c	FUNCTION_10
0x40019e3	              0xc3	                                     ret	       274	pci.c	FUNCTION_10
0x40019e4	      0xe800000000	                          call 0x40019e9	       274	pci.c	FUNCTION_10
pcibios_set_pcie_reset_state	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,0:DO,0:functions,0:WHILE,0	2
0x4003c80	      0xb8eaffffff	                     mov eax, 0xffffffea	      1674	pci.c	FUNCTION_76
0x4003c85	              0xc3	                                     ret	      1674	pci.c	FUNCTION_76
pci_wakeup	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,2:DO,0:functions,0:WHILE,0	12
0x4000920	              0x53	                                push rbx	       797	pci.c	FUNCTION_33
0x4000921	    0x488d9fa00000	                   lea rbx, [rdi + 0xa0]	        91	pci.h	FUNCTION_339	CALL_1
0x4000928	            0x31d2	                            xor edx, edx	       220	pm_wakeup.h	FUNCTION_269	CALL_1
0x400092a	      0xbe64000000	                           mov esi, 0x64	       220	pm_wakeup.h	FUNCTION_269	CALL_1
0x400092f	          0x4889df	                            mov rdi, rbx	       220	pm_wakeup.h	FUNCTION_269	CALL_1
0x4000932	      0xe800000000	                          call 0x4000937	       220	pm_wakeup.h	FUNCTION_269	CALL_1
0x4000937	          0x4889df	                            mov rdi, rbx	       208	pm_runtime.h	FUNCTION_323	CALL_1
0x400093a	      0xbe01000000	                              mov esi, 1	       208	pm_runtime.h	FUNCTION_323	CALL_1
0x400093f	      0xe800000000	                          call 0x4000944	       208	pm_runtime.h	FUNCTION_323	CALL_1
0x4000944	            0x31c0	                            xor eax, eax	       801	pci.c	FUNCTION_33
0x4000946	              0x5b	                                 pop rbx	       801	pci.c	FUNCTION_33
0x4000947	              0xc3	                                     ret	       801	pci.c	FUNCTION_33
pci_ext_cfg_avail	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,0:DO,0:functions,0:WHILE,0	2
0x4006210	      0xb801000000	                              mov eax, 1	      5795	pci.c	FUNCTION_238
0x4006215	              0xc3	                                     ret	      5795	pci.c	FUNCTION_238
pci_power_up	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,4:DO,0:functions,0:WHILE,0	23
0x4003810	    0x488b05000000	            mov rax, qword [0x04003817] 	       591	pci.c	FUNCTION_23	CALL_1
0x4003817	              0x53	                                push rbx	       761	pci.c	FUNCTION_31
0x4003818	          0x4889fb	                            mov rbx, rdi	       761	pci.c	FUNCTION_31
0x400381b	          0x4885c0	                           test rax, rax	       591	pci.c	FUNCTION_23	CALL_1
0x400381e	            0x7426	                            je 0x4003846	       591	pci.c	FUNCTION_23	CALL_1
0x4003820	          0x488b00	                    mov rax, qword [rax]	       591	pci.c	FUNCTION_23	CALL_1
0x4003823	      0xe800000000	                          call 0x4003828	       591	pci.c	FUNCTION_23	CALL_1
0x4003828	            0x84c0	                             test al, al	       591	pci.c	FUNCTION_23	CALL_1
0x400382a	            0x741a	                            je 0x4003846	       591	pci.c	FUNCTION_23	CALL_1
0x400382c	    0x488b05000000	            mov rax, qword [0x04003833] 	       597	pci.c	FUNCTION_24	CALL_1
0x4003833	          0x4885c0	                           test rax, rax	       597	pci.c	FUNCTION_24	CALL_1
0x4003836	            0x740e	                            je 0x4003846	       597	pci.c	FUNCTION_24	CALL_1
0x4003838	        0x488b4008	                mov rax, qword [rax + 8]	       597	pci.c	FUNCTION_24	CALL_1
0x400383c	            0x31f6	                            xor esi, esi	       597	pci.c	FUNCTION_24	CALL_1
0x400383e	          0x4889df	                            mov rdi, rbx	       597	pci.c	FUNCTION_24	CALL_1
0x4003841	      0xe800000000	                          call 0x4003846	       597	pci.c	FUNCTION_24	CALL_1
0x4003846	          0x4889df	                            mov rdi, rbx	       765	pci.c	FUNCTION_31	CALL_3
0x4003849	            0x31f6	                            xor esi, esi	       765	pci.c	FUNCTION_31	CALL_3
0x400384b	      0xe890ceffff	        call sym.pci_raw_set_power_state	       765	pci.c	FUNCTION_31	CALL_3
0x4003850	          0x4889df	                            mov rdi, rbx	       766	pci.c	FUNCTION_31	CALL_4
0x4003853	            0x31f6	                            xor esi, esi	       766	pci.c	FUNCTION_31	CALL_4
0x4003855	              0x5b	                                 pop rbx	       767	pci.c	FUNCTION_31
0x4003856	      0xe9e5f9ffff	        jmp sym.pci_update_current_state	       766	pci.c	FUNCTION_31	CALL_4
pci_resource_alignment_sysfs_init	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	6
0x4000040	            0x4154	                                push r12	       141	pci.c	FUNCTION_3
0x4000042	              0x55	                                push rbp	       141	pci.c	FUNCTION_3
0x4000043	        0x4c8d6718	                   lea r12, [rdi + 0x18]	       146	pci.c	FUNCTION_3	FUNCTION_1
0x4000047	              0x53	                                push rbx	       141	pci.c	FUNCTION_3
0x4000048	        0x488b5f18	            mov rbx, qword [rdi + 0x18] 	       146	pci.c	FUNCTION_3	FUNCTION_1
0x400004c	     0xfb6af880000	           movzx ebp, byte [rdi + 0x88] 	       145	pci.c	FUNCTION_3
pci_pme_wakeup_bus	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	6
0x4003ec0	          0x4885ff	                           test rdi, rdi	      1760	pci.c	FUNCTION_81	IF_1
0x4003ec3	            0x7411	                            je 0x4003ed6	      1760	pci.c	FUNCTION_81	IF_1
0x4003ec5	      0xba01000000	                              mov edx, 1	      1761	pci.c	FUNCTION_81	CALL_1
0x4003eca	    0x48c7c6000000	                              mov rsi, 0	      1761	pci.c	FUNCTION_81	CALL_1
0x4003ed1	      0xe900000000	                           jmp 0x4003ed6	      1761	pci.c	FUNCTION_81	CALL_1
0x4003ed6	            0xf3c3	                                     ret	      1761	pci.c	FUNCTION_81	CALL_1
pci_find_saved_ext_cap	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	14
0x40038e0	    0x488b87880600	           mov rax, qword [rdi + 0x688] 	       993	pci.c	FUNCTION_41	FUNCTION_1
0x40038e7	          0x4885c0	                           test rax, rax	       993	pci.c	FUNCTION_41	FUNCTION_1
0x40038ea	            0x750b	                           jne 0x40038f7	       993	pci.c	FUNCTION_41	FUNCTION_1
0x40038ec	            0x31c0	                            xor eax, eax	       997	pci.c	FUNCTION_41
0x40038ee	              0xc3	                                     ret	       997	pci.c	FUNCTION_41
0x40038ef	          0x488b00	                    mov rax, qword [rax]	       993	pci.c	FUNCTION_41	FUNCTION_1
0x40038f2	          0x4885c0	                           test rax, rax	       993	pci.c	FUNCTION_41	FUNCTION_1
0x40038f5	            0x740e	                            je 0x4003905	       993	pci.c	FUNCTION_41	FUNCTION_1
0x40038f7	        0x80781200	                cmp byte [rax + 0x12], 0	       994	pci.c	FUNCTION_41	FUNCTION_1	IF_1
0x40038fb	            0x74f2	                            je 0x40038ef	       994	pci.c	FUNCTION_41	FUNCTION_1	IF_1
0x40038fd	        0x663b7010	               cmp si, word [rax + 0x10]	       994	pci.c	FUNCTION_41	FUNCTION_1	IF_1
0x4003901	            0x75ec	                           jne 0x40038ef	       994	pci.c	FUNCTION_41	FUNCTION_1	IF_1
0x4003903	            0xf3c3	                                     ret	       994	pci.c	FUNCTION_41	FUNCTION_1	IF_1
0x4003905	            0xf3c3	                                     ret	      1008	pci.c	FUNCTION_43
pci_check_and_unmask_intx	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	2
0x40002f0	            0x31f6	                            xor esi, esi	      3966	pci.c	FUNCTION_161	CALL_1
0x40002f2	      0xe9f9feffff	     jmp sym.pci_check_and_set_intx_mask	      3966	pci.c	FUNCTION_161	CALL_1
pci_restore_config_dword	IF,3:FOR,1:SWITCH,0:ELSE,0:CALL,5:DO,0:functions,0:WHILE,0	42
0x4000c40	            0x4155	                                push r13	      1121	pci.c	FUNCTION_49
0x4000c42	            0x4154	                                push r12	      1121	pci.c	FUNCTION_49
0x4000c44	          0x4189d5	                           mov r13d, edx	      1121	pci.c	FUNCTION_49
0x4000c47	              0x55	                                push rbp	      1121	pci.c	FUNCTION_49
0x4000c48	              0x53	                                push rbx	      1121	pci.c	FUNCTION_49
0x4000c49	          0x4889fd	                            mov rbp, rdi	      1121	pci.c	FUNCTION_49
0x4000c4c	          0x4189f4	                           mov r12d, esi	      1121	pci.c	FUNCTION_49
0x4000c4f	            0x89cb	                            mov ebx, ecx	      1121	pci.c	FUNCTION_49
0x4000c51	        0x4883ec10	                           sub rsp, 0x10	      1121	pci.c	FUNCTION_49
0x4000c55	      0x488d542404	                      lea rdx, [rsp + 4]	      1124	pci.c	FUNCTION_49	CALL_1
0x4000c5a	    0x65488b042528	                mov rax, qword gs:[0x28]	      1121	pci.c	FUNCTION_49
0x4000c63	      0x4889442408	                mov qword [rsp + 8], rax	      1121	pci.c	FUNCTION_49
0x4000c68	            0x31c0	                            xor eax, eax	      1121	pci.c	FUNCTION_49
0x4000c6a	      0xe800000000	                          call 0x4000c6f	      1124	pci.c	FUNCTION_49	CALL_1
0x4000c6f	      0x44396c2404	               cmp dword [rsp + 4], r13d	      1125	pci.c	FUNCTION_49	IF_1
0x4000c74	            0x7526	                           jne 0x4000c9c	      1125	pci.c	FUNCTION_49	IF_1
0x4000c76	            0xeb36	                           jmp 0x4000cae	      1125	pci.c	FUNCTION_49	IF_1
0x4000c78	      0x488d542404	                      lea rdx, [rsp + 4]	      1135	pci.c	FUNCTION_49	FOR_1	CALL_4
0x4000c7d	          0x4489e6	                           mov esi, r12d	      1135	pci.c	FUNCTION_49	FOR_1	CALL_4
0x4000c80	          0x4889ef	                            mov rdi, rbp	      1135	pci.c	FUNCTION_49	FOR_1	CALL_4
0x4000c83	          0x83eb01	                              sub ebx, 1	      1135	pci.c	FUNCTION_49	FOR_1	CALL_4
0x4000c86	      0xe800000000	                          call 0x4000c8b	      1135	pci.c	FUNCTION_49	FOR_1	CALL_4
0x4000c8b	      0x443b6c2404	               cmp r13d, dword [rsp + 4]	      1136	pci.c	FUNCTION_49	FOR_1	IF_3
0x4000c90	            0x741c	                            je 0x4000cae	      1136	pci.c	FUNCTION_49	FOR_1	IF_3
0x4000c92	      0xbf58894100	                       mov edi, 0x418958	      1139	pci.c	FUNCTION_49	FOR_1	CALL_5
0x4000c97	      0xe800000000	                          call 0x4000c9c	      1139	pci.c	FUNCTION_49	FOR_1	CALL_5
0x4000c9c	          0x4489ea	                           mov edx, r13d	      1131	pci.c	FUNCTION_49	FOR_1	CALL_3
0x4000c9f	          0x4489e6	                           mov esi, r12d	      1131	pci.c	FUNCTION_49	FOR_1	CALL_3
0x4000ca2	          0x4889ef	                            mov rdi, rbp	      1131	pci.c	FUNCTION_49	FOR_1	CALL_3
0x4000ca5	      0xe800000000	                          call 0x4000caa	      1131	pci.c	FUNCTION_49	FOR_1	CALL_3
0x4000caa	            0x85db	                           test ebx, ebx	      1132	pci.c	FUNCTION_49	FOR_1	IF_2
0x4000cac	            0x7fca	                            jg 0x4000c78	      1132	pci.c	FUNCTION_49	FOR_1	IF_2
0x4000cae	      0x488b442408	                mov rax, qword [rsp + 8]	      1141	pci.c	FUNCTION_49
0x4000cb3	    0x654833042528	                xor rax, qword gs:[0x28]	      1141	pci.c	FUNCTION_49
0x4000cbc	            0x750b	                           jne 0x4000cc9	      1141	pci.c	FUNCTION_49
0x4000cbe	        0x4883c410	                           add rsp, 0x10	      1141	pci.c	FUNCTION_49
0x4000cc2	              0x5b	                                 pop rbx	      1141	pci.c	FUNCTION_49
0x4000cc3	              0x5d	                                 pop rbp	      1141	pci.c	FUNCTION_49
0x4000cc4	            0x415c	                                 pop r12	      1141	pci.c	FUNCTION_49
0x4000cc6	            0x415d	                                 pop r13	      1141	pci.c	FUNCTION_49
0x4000cc8	              0xc3	                                     ret	      1141	pci.c	FUNCTION_49
0x4000cc9	      0xe800000000	                          call 0x4000cce	      1141	pci.c	FUNCTION_49
pci_set_power_state	IF,6:FOR,0:SWITCH,0:ELSE,2:CALL,4:DO,0:functions,0:WHILE,0	79
0x4003410	          0x83fe04	                              cmp esi, 4	       910	pci.c	FUNCTION_39	IF_1
0x4003413	            0x4154	                                push r12	       906	pci.c	FUNCTION_39
0x4003415	              0x55	                                push rbp	       906	pci.c	FUNCTION_39
0x4003416	          0x4889fd	                            mov rbp, rdi	       906	pci.c	FUNCTION_39
0x4003419	              0x53	                                push rbx	       906	pci.c	FUNCTION_39
0x400341a	            0x7f68	                            jg 0x4003484	       910	pci.c	FUNCTION_39	IF_1
0x400341c	            0x85f6	                           test esi, esi	       912	pci.c	FUNCTION_39	ELSE_1	IF_2
0x400341e	            0x89f3	                            mov ebx, esi	       912	pci.c	FUNCTION_39	ELSE_1	IF_2
0x4003420	     0xf889f000000	                            js 0x40034c5	       912	pci.c	FUNCTION_39	ELSE_1	IF_2
0x4003426	          0x8d46ff	                      lea eax, [rsi - 1]	       914	pci.c	FUNCTION_39	ELSE_2	IF_3	CALL_1
0x4003429	          0x83f801	                              cmp eax, 1	       914	pci.c	FUNCTION_39	ELSE_2	IF_3	CALL_1
0x400342c	     0xf86b5000000	                           jbe 0x40034e7	       914	pci.c	FUNCTION_39	ELSE_2	IF_3	CALL_1
0x4003432	    0x3b9d80000000	            cmp ebx, dword [rbp + 0x80] 	       923	pci.c	FUNCTION_39	IF_4
0x4003438	     0xf8480000000	                            je 0x40034be	       923	pci.c	FUNCTION_39	IF_4
0x400343e	            0x85db	                           test ebx, ebx	       820	pci.c	FUNCTION_35	IF_1
0x4003440	     0xf858f000000	                           jne 0x40034d5	       820	pci.c	FUNCTION_35	IF_1
0x4003446	            0x31f6	                            xor esi, esi	       821	pci.c	FUNCTION_35	IF_1	CALL_1
0x4003448	          0x4889ef	                            mov rdi, rbp	       821	pci.c	FUNCTION_35	IF_1	CALL_1
0x400344b	      0xe8b0feffff	  call sym.pci_platform_power_transition	       821	pci.c	FUNCTION_35	IF_1	CALL_1
0x4003450	    0xf68586000000	           test byte [rbp + 0x86], 0x40 	       829	pci.c	FUNCTION_35	IF_1	IF_2
0x4003457	            0x7425	                            je 0x400347e	       829	pci.c	FUNCTION_35	IF_1	IF_2
0x4003459	    0x8bbd8c000000	            mov edi, dword [rbp + 0x8c] 	       830	pci.c	FUNCTION_35	IF_1	IF_2	IF_3
0x400345f	            0x85ff	                           test edi, edi	       830	pci.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4003461	     0xf85aa000000	                           jne 0x4003511	       830	pci.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4003467	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       838	pci.c	FUNCTION_35	IF_1	IF_2	CALL_3
0x400346b	          0x4885ff	                           test rdi, rdi	       809	pci.c	FUNCTION_34	IF_1
0x400346e	            0x740e	                            je 0x400347e	       809	pci.c	FUNCTION_34	IF_1
0x4003470	            0x31d2	                            xor edx, edx	       810	pci.c	FUNCTION_34	CALL_1
0x4003472	    0x48c7c6000000	                              mov rsi, 0	       810	pci.c	FUNCTION_34	CALL_1
0x4003479	      0xe800000000	                          call 0x400347e	       810	pci.c	FUNCTION_34	CALL_1
0x400347e	            0x31f6	                            xor esi, esi	       911	pci.c	FUNCTION_39	IF_1
0x4003480	            0x31db	                            xor ebx, ebx	       911	pci.c	FUNCTION_39	IF_1
0x4003482	            0xeb1c	                           jmp 0x40034a0	       911	pci.c	FUNCTION_39	IF_1
0x4003484	    0x83bf80000000	               cmp dword [rdi + 0x80], 4	       923	pci.c	FUNCTION_39	IF_4
0x400348b	      0xbb04000000	                              mov ebx, 4	       911	pci.c	FUNCTION_39	IF_1
0x4003490	            0x742c	                            je 0x40034be	       923	pci.c	FUNCTION_39	IF_4
0x4003492	    0xf6853e060000	              test byte [rbp + 0x63e], 2	       930	pci.c	FUNCTION_39	IF_5
0x4003499	            0x7523	                           jne 0x40034be	       930	pci.c	FUNCTION_39	IF_5
0x400349b	      0xbe03000000	                              mov esi, 3	       930	pci.c	FUNCTION_39	IF_5
0x40034a0	          0x4889ef	                            mov rdi, rbp	       937	pci.c	FUNCTION_39	CALL_3
0x40034a3	      0xe838d2ffff	        call sym.pci_raw_set_power_state	       937	pci.c	FUNCTION_39	CALL_3
0x40034a8	            0x89de	                            mov esi, ebx	       940	pci.c	FUNCTION_39	IF_6	CALL_4
0x40034aa	          0x4889ef	                            mov rdi, rbp	       940	pci.c	FUNCTION_39	IF_6	CALL_4
0x40034ad	          0x4189c4	                           mov r12d, eax	       937	pci.c	FUNCTION_39	CALL_3
0x40034b0	      0xe800000000	                          call 0x40034b5	       940	pci.c	FUNCTION_39	IF_6	CALL_4
0x40034b5	            0x89c2	                            mov edx, eax	       940	pci.c	FUNCTION_39	IF_6	CALL_4
0x40034b7	          0x4489e0	                           mov eax, r12d	       937	pci.c	FUNCTION_39	CALL_3
0x40034ba	            0x85d2	                           test edx, edx	       940	pci.c	FUNCTION_39	IF_6	CALL_4
0x40034bc	            0x7502	                           jne 0x40034c0	       940	pci.c	FUNCTION_39	IF_6	CALL_4
0x40034be	            0x31c0	                            xor eax, eax	       941	pci.c	FUNCTION_39	IF_6
0x40034c0	              0x5b	                                 pop rbx	       944	pci.c	FUNCTION_39
0x40034c1	              0x5d	                                 pop rbp	       944	pci.c	FUNCTION_39
0x40034c2	            0x415c	                                 pop r12	       944	pci.c	FUNCTION_39
0x40034c4	              0xc3	                                     ret	       944	pci.c	FUNCTION_39
0x40034c5	    0x8b8780000000	            mov eax, dword [rdi + 0x80] 	       923	pci.c	FUNCTION_39	IF_4
0x40034cb	            0x85c0	                           test eax, eax	       923	pci.c	FUNCTION_39	IF_4
0x40034cd	     0xf8573ffffff	                           jne 0x4003446	       923	pci.c	FUNCTION_39	IF_4
0x40034d3	            0xebe9	                           jmp 0x40034be	       923	pci.c	FUNCTION_39	IF_4
0x40034d5	          0x83fb02	                              cmp ebx, 2	       930	pci.c	FUNCTION_39	IF_5
0x40034d8	            0x7fb8	                            jg 0x4003492	       930	pci.c	FUNCTION_39	IF_5
0x40034da	          0x83fb03	                              cmp ebx, 3	       930	pci.c	FUNCTION_39	IF_5
0x40034dd	      0xbe03000000	                              mov esi, 3	       930	pci.c	FUNCTION_39	IF_5
0x40034e2	           0xf4ef3	                         cmovle esi, ebx	       930	pci.c	FUNCTION_39	IF_5
0x40034e5	            0xebb9	                           jmp 0x40034a0	       930	pci.c	FUNCTION_39	IF_5
0x40034e7	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       175	pci.h	FUNCTION_350	IF_1
0x40034eb	        0x488b4038	            mov rax, qword [rax + 0x38] 	       175	pci.h	FUNCTION_350	IF_1
0x40034ef	          0x4885c0	                           test rax, rax	       175	pci.h	FUNCTION_350	IF_1
0x40034f2	            0x7427	                            je 0x400351b	       175	pci.h	FUNCTION_350	IF_1
0x40034f4	     0xfb680860000	           movzx eax, byte [rax + 0x86] 	       176	pci.h	FUNCTION_350	IF_1
0x40034fb	          0x83e001	                              and eax, 1	       176	pci.h	FUNCTION_350	IF_1
0x40034fe	    0xf68586000000	               test byte [rbp + 0x86], 1	       177	pci.h	FUNCTION_350
0x4003505	            0x75b7	                           jne 0x40034be	       177	pci.h	FUNCTION_350
0x4003507	            0x84c0	                             test al, al	       177	pci.h	FUNCTION_350
0x4003509	     0xf8423ffffff	                            je 0x4003432	       177	pci.h	FUNCTION_350
0x400350f	            0xebad	                           jmp 0x40034be	       177	pci.h	FUNCTION_350
0x4003511	      0xe800000000	                          call 0x4003516	       831	pci.c	FUNCTION_35	IF_1	IF_2	CALL_2
0x4003516	      0xe94cffffff	                           jmp 0x4003467	       831	pci.c	FUNCTION_35	IF_1	IF_2	CALL_2
0x400351b	            0x31c0	                            xor eax, eax	       175	pci.h	FUNCTION_350	IF_1
0x400351d	            0xebdf	                           jmp 0x40034fe	       175	pci.h	FUNCTION_350	IF_1
pci_d3cold_enable	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	7
0x4004300	     0xfb687860000	           movzx eax, byte [rdi + 0x86] 	      2406	pci.c	FUNCTION_102	IF_1
0x4004307	            0xa802	                              test al, 2	      2406	pci.c	FUNCTION_102	IF_1
0x4004309	            0x7502	                           jne 0x400430d	      2406	pci.c	FUNCTION_102	IF_1
0x400430b	            0xf3c3	                                     ret	      2406	pci.c	FUNCTION_102	IF_1
0x400430d	          0x83e0fd	                     and eax, 0xfffffffd	      2407	pci.c	FUNCTION_102	IF_1
0x4004310	    0x888786000000	               mov byte [rdi + 0x86], al	      2407	pci.c	FUNCTION_102	IF_1
0x4004316	      0xe9d5feffff	            jmp sym.pci_bridge_d3_update	      2408	pci.c	FUNCTION_102	IF_1	CALL_1
pci_request_regions_exclusive	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	4
0x4001400	          0x4889f2	                            mov rdx, rsi	      3461	pci.c	FUNCTION_140
0x4001403	      0xb900000008	                   mov ecx, section_end.	      3405	pci.c	FUNCTION_137	CALL_1
0x4001408	      0xbe3f000000	                           mov esi, 0x3f	      3405	pci.c	FUNCTION_137	CALL_1
0x400140d	      0xe94effffff	  jmp sym.__pci_request_selected_regions	      3405	pci.c	FUNCTION_137	CALL_1
pci_register_set_vga_state	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,0:DO,0:functions,0:WHILE,0	3
0x4000430	          0x83f83f	                           cmp eax, 0x3f	       196	pci.c	FUNCTION_6	WHILE_1	IF_1
0x4000433	            0x7626	                           jbe 0x400045b	       196	pci.c	FUNCTION_6	WHILE_1	IF_1
0x4000435	          0x83e2fc	                     and edx, 0xfffffffc	       198	pci.c	FUNCTION_6	WHILE_1
pci_back_from_sleep	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,2:DO,0:functions,0:WHILE,0	9
0x4003590	              0x53	                                push rbx	      2108	pci.c	FUNCTION_92
0x4003591	            0x31f6	                            xor esi, esi	      2109	pci.c	FUNCTION_92	CALL_1
0x4003593	          0x4889fb	                            mov rbx, rdi	      2108	pci.c	FUNCTION_92
0x4003596	            0x31d2	                            xor edx, edx	      2109	pci.c	FUNCTION_92	CALL_1
0x4003598	      0xe800000000	                          call 0x400359d	      2109	pci.c	FUNCTION_92	CALL_1
0x400359d	          0x4889df	                            mov rdi, rbx	      2110	pci.c	FUNCTION_92	CALL_2
0x40035a0	            0x31f6	                            xor esi, esi	      2110	pci.c	FUNCTION_92	CALL_2
0x40035a2	              0x5b	                                 pop rbx	      2111	pci.c	FUNCTION_92
0x40035a3	      0xe968feffff	             jmp sym.pci_set_power_state	      2110	pci.c	FUNCTION_92	CALL_2
pci_slot_save_and_disable	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,0:DO,0:functions,1:WHILE,0	28
0x4003660	              0x55	                                push rbp	      4689	pci.c	FUNCTION_194
0x4003661	              0x53	                                push rbx	      4689	pci.c	FUNCTION_194
0x4003662	          0x488b17	                    mov rdx, qword [rdi]	      4692	pci.c	FUNCTION_194	FUNCTION_1
0x4003665	        0x488b5a28	            mov rbx, qword [rdx + 0x28] 	      4692	pci.c	FUNCTION_194	FUNCTION_1
0x4003669	        0x488d4228	                   lea rax, [rdx + 0x28]	      4692	pci.c	FUNCTION_194	FUNCTION_1
0x400366d	          0x4839c3	                            cmp rbx, rax	      4692	pci.c	FUNCTION_194	FUNCTION_1
0x4003670	            0x741d	                            je 0x400368f	      4692	pci.c	FUNCTION_194	FUNCTION_1
0x4003672	          0x4889fd	                            mov rbp, rdi	      4692	pci.c	FUNCTION_194	FUNCTION_1
0x4003675	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      4693	pci.c	FUNCTION_194	FUNCTION_1	IF_1
0x4003679	          0x4885c0	                           test rax, rax	      4693	pci.c	FUNCTION_194	FUNCTION_1	IF_1
0x400367c	            0x7405	                            je 0x4003683	      4693	pci.c	FUNCTION_194	FUNCTION_1	IF_1
0x400367e	          0x4839c5	                            cmp rbp, rax	      4693	pci.c	FUNCTION_194	FUNCTION_1	IF_1
0x4003681	            0x740f	                            je 0x4003692	      4693	pci.c	FUNCTION_194	FUNCTION_1	IF_1
0x4003683	          0x488b1b	                    mov rbx, qword [rbx]	      4692	pci.c	FUNCTION_194	FUNCTION_1
0x4003686	        0x488d4228	                   lea rax, [rdx + 0x28]	      4692	pci.c	FUNCTION_194	FUNCTION_1
0x400368a	          0x4839c3	                            cmp rbx, rax	      4692	pci.c	FUNCTION_194	FUNCTION_1
0x400368d	            0x75e6	                           jne 0x4003675	      4692	pci.c	FUNCTION_194	FUNCTION_1
0x400368f	              0x5b	                                 pop rbx	      4699	pci.c	FUNCTION_194
0x4003690	              0x5d	                                 pop rbp	      4699	pci.c	FUNCTION_194
0x4003691	              0xc3	                                     ret	      4699	pci.c	FUNCTION_194
0x4003692	          0x4889df	                            mov rdi, rbx	      4695	pci.c	FUNCTION_194	FUNCTION_1	CALL_1
0x4003695	      0xe816ffffff	       call sym.pci_dev_save_and_disable	      4695	pci.c	FUNCTION_194	FUNCTION_1	CALL_1
0x400369a	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      4696	pci.c	FUNCTION_194	FUNCTION_1	IF_2
0x400369e	          0x4885ff	                           test rdi, rdi	      4696	pci.c	FUNCTION_194	FUNCTION_1	IF_2
0x40036a1	            0x7405	                            je 0x40036a8	      4696	pci.c	FUNCTION_194	FUNCTION_1	IF_2
0x40036a3	      0xe858ffffff	       call sym.pci_bus_save_and_disable	      4697	pci.c	FUNCTION_194	FUNCTION_1	CALL_2
0x40036a8	        0x488b5500	                    mov rdx, qword [rbp]	      4697	pci.c	FUNCTION_194	FUNCTION_1	CALL_2
0x40036ac	            0xebd5	                           jmp 0x4003683	      4697	pci.c	FUNCTION_194	FUNCTION_1	CALL_2
pci_release_regions	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	22
0x40011e0	            0x4154	                                push r12	      3420	pci.c	FUNCTION_138
0x40011e2	          0x4989fc	                            mov r12, rdi	      3420	pci.c	FUNCTION_138
0x40011e5	              0x55	                                push rbp	      3420	pci.c	FUNCTION_138
0x40011e6	      0xbd3f000000	                           mov ebp, 0x3f	      3364	pci.c	FUNCTION_134	FOR_1	IF_1
0x40011eb	              0x53	                                push rbx	      3420	pci.c	FUNCTION_138
0x40011ec	            0x31db	                            xor ebx, ebx	      3363	pci.c	FUNCTION_134	FOR_1
0x40011ee	            0xeb08	                           jmp 0x40011f8	      3363	pci.c	FUNCTION_134	FOR_1
0x40011f0	          0x83c301	                              add ebx, 1	      3363	pci.c	FUNCTION_134	FOR_1
0x40011f3	          0x83fb06	                              cmp ebx, 6	      3363	pci.c	FUNCTION_134	FOR_1
0x40011f6	            0x7417	                            je 0x400120f	      3363	pci.c	FUNCTION_134	FOR_1
0x40011f8	           0xfa3dd	                             bt ebp, ebx	      3364	pci.c	FUNCTION_134	FOR_1	IF_1
0x40011fb	            0x73f3	                           jae 0x40011f0	      3364	pci.c	FUNCTION_134	FOR_1	IF_1
0x40011fd	            0x89de	                            mov esi, ebx	      3365	pci.c	FUNCTION_134	FOR_1	IF_1
0x40011ff	          0x4c89e7	                            mov rdi, r12	      3365	pci.c	FUNCTION_134	FOR_1	IF_1
0x4001202	          0x83c301	                              add ebx, 1	      3363	pci.c	FUNCTION_134	FOR_1
0x4001205	      0xe800000000	                          call 0x400120a	      3365	pci.c	FUNCTION_134	FOR_1	IF_1
0x400120a	          0x83fb06	                              cmp ebx, 6	      3363	pci.c	FUNCTION_134	FOR_1
0x400120d	            0x75e9	                           jne 0x40011f8	      3363	pci.c	FUNCTION_134	FOR_1
0x400120f	              0x5b	                                 pop rbx	      3422	pci.c	FUNCTION_138
0x4001210	              0x5d	                                 pop rbp	      3422	pci.c	FUNCTION_138
0x4001211	            0x415c	                                 pop r12	      3422	pci.c	FUNCTION_138
0x4001213	              0xc3	                                     ret	      3422	pci.c	FUNCTION_138
pci_prepare_to_sleep	IF,2:FOR,0:SWITCH,0:ELSE,0:CALL,5:DO,0:functions,0:WHILE,0	38
0x4003520	            0x4154	                                push r12	      2082	pci.c	FUNCTION_91
0x4003522	          0x4531e4	                          xor r12d, r12d	      2082	pci.c	FUNCTION_91
0x4003525	              0x55	                                push rbp	      2082	pci.c	FUNCTION_91
0x4003526	              0x53	                                push rbx	      2082	pci.c	FUNCTION_91
0x4003527	    0xf6876c010000	              test byte [rdi + 0x16c], 1	        88	pm_wakeup.h	FUNCTION_242
0x400352e	          0x4889fb	                            mov rbx, rdi	      2082	pci.c	FUNCTION_91
0x4003531	            0x740f	                            je 0x4003542	        88	pm_wakeup.h	FUNCTION_242
0x4003533	          0x4531e4	                          xor r12d, r12d	        88	pm_wakeup.h	FUNCTION_242
0x4003536	    0x4883bfa80100	              cmp qword [rdi + 0x1a8], 0	        88	pm_wakeup.h	FUNCTION_242
0x400353e	        0x410f95c4	                              setne r12b	        88	pm_wakeup.h	FUNCTION_242
0x4003542	          0x4489e6	                           mov esi, r12d	      2084	pci.c	FUNCTION_91	CALL_2
0x4003545	          0x4889df	                            mov rdi, rbx	      2084	pci.c	FUNCTION_91	CALL_2
0x4003548	      0xe823e2ffff	               call sym.pci_target_state	      2084	pci.c	FUNCTION_91	CALL_2
0x400354d	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2087	pci.c	FUNCTION_91	IF_1
0x4003550	            0x89c5	                            mov ebp, eax	      2084	pci.c	FUNCTION_91	CALL_2
0x4003552	            0x7435	                            je 0x4003589	      2087	pci.c	FUNCTION_91	IF_1
0x4003554	          0x4489e2	                           mov edx, r12d	      2090	pci.c	FUNCTION_91	CALL_3
0x4003557	            0x89c6	                            mov esi, eax	      2090	pci.c	FUNCTION_91	CALL_3
0x4003559	          0x4889df	                            mov rdi, rbx	      2090	pci.c	FUNCTION_91	CALL_3
0x400355c	      0xe800000000	                          call 0x4003561	      2090	pci.c	FUNCTION_91	CALL_3
0x4003561	            0x89ee	                            mov esi, ebp	      2092	pci.c	FUNCTION_91	CALL_4
0x4003563	          0x4889df	                            mov rdi, rbx	      2092	pci.c	FUNCTION_91	CALL_4
0x4003566	      0xe800000000	                          call 0x400356b	      2092	pci.c	FUNCTION_91	CALL_4
0x400356b	          0x4189c4	                           mov r12d, eax	      2092	pci.c	FUNCTION_91	CALL_4
0x400356e	            0x31c0	                            xor eax, eax	      2092	pci.c	FUNCTION_91	CALL_4
0x4003570	          0x4585e4	                         test r12d, r12d	      2094	pci.c	FUNCTION_91	IF_2
0x4003573	            0x740f	                            je 0x4003584	      2094	pci.c	FUNCTION_91	IF_2
0x4003575	            0x31d2	                            xor edx, edx	      2095	pci.c	FUNCTION_91	CALL_5
0x4003577	            0x89ee	                            mov esi, ebp	      2095	pci.c	FUNCTION_91	CALL_5
0x4003579	          0x4889df	                            mov rdi, rbx	      2095	pci.c	FUNCTION_91	CALL_5
0x400357c	      0xe800000000	                          call 0x4003581	      2095	pci.c	FUNCTION_91	CALL_5
0x4003581	          0x4489e0	                           mov eax, r12d	      2095	pci.c	FUNCTION_91	CALL_5
0x4003584	              0x5b	                                 pop rbx	      2098	pci.c	FUNCTION_91
0x4003585	              0x5d	                                 pop rbp	      2098	pci.c	FUNCTION_91
0x4003586	            0x415c	                                 pop r12	      2098	pci.c	FUNCTION_91
0x4003588	              0xc3	                                     ret	      2098	pci.c	FUNCTION_91
0x4003589	      0xb8fbffffff	                     mov eax, 0xfffffffb	      2088	pci.c	FUNCTION_91	IF_1
0x400358e	            0xebf4	                           jmp 0x4003584	      2088	pci.c	FUNCTION_91	IF_1
pci_dev_reset_slot_function	IF,2:FOR,0:SWITCH,0:ELSE,0:CALL,2:DO,0:functions,0:WHILE,0	23
0x40015c0	      0x48837f1800	               cmp qword [rdi + 0x18], 0	      4243	pci.c	FUNCTION_173	IF_1
0x40015c5	            0x753f	                           jne 0x4001606	      4243	pci.c	FUNCTION_173	IF_1
0x40015c7	        0x488b4f30	            mov rcx, qword [rdi + 0x30] 	      4243	pci.c	FUNCTION_173	IF_1
0x40015cb	          0x4885c9	                           test rcx, rcx	      4243	pci.c	FUNCTION_173	IF_1
0x40015ce	            0x7436	                            je 0x4001606	      4243	pci.c	FUNCTION_173	IF_1
0x40015d0	    0xf6873e060000	          test byte [rdi + 0x63e], 0x40 	      4243	pci.c	FUNCTION_173	IF_1
0x40015d7	            0x752d	                           jne 0x4001606	      4243	pci.c	FUNCTION_173	IF_1
0x40015d9	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      4247	pci.c	FUNCTION_173	CALL_1
0x40015dd	        0x488b4228	            mov rax, qword [rdx + 0x28] 	      4247	pci.c	FUNCTION_173	CALL_1
0x40015e1	        0x4883c228	                           add rdx, 0x28	      4247	pci.c	FUNCTION_173	CALL_1
0x40015e5	          0x4839d0	                            cmp rax, rdx	      4247	pci.c	FUNCTION_173	CALL_1
0x40015e8	            0x7413	                            je 0x40015fd	      4247	pci.c	FUNCTION_173	CALL_1
0x40015ea	          0x4839c7	                            cmp rdi, rax	      4248	pci.c	FUNCTION_173	IF_2
0x40015ed	            0x7406	                            je 0x40015f5	      4248	pci.c	FUNCTION_173	IF_2
0x40015ef	        0x483b4830	            cmp rcx, qword [rax + 0x30] 	      4248	pci.c	FUNCTION_173	IF_2
0x40015f3	            0x7411	                            je 0x4001606	      4248	pci.c	FUNCTION_173	IF_2
0x40015f5	          0x488b00	                    mov rax, qword [rax]	      4247	pci.c	FUNCTION_173	CALL_1
0x40015f8	          0x4839d0	                            cmp rax, rdx	      4247	pci.c	FUNCTION_173	CALL_1
0x40015fb	            0x75ed	                           jne 0x40015ea	      4247	pci.c	FUNCTION_173	CALL_1
0x40015fd	        0x488b7918	            mov rdi, qword [rcx + 0x18] 	      4251	pci.c	FUNCTION_173	CALL_2
0x4001601	      0xe95affffff	          jmp sym.pci_reset_hotplug_slot	      4251	pci.c	FUNCTION_173	CALL_2
0x4001606	      0xb8e7ffffff	                     mov eax, 0xffffffe7	      4252	pci.c	FUNCTION_173
0x400160b	              0xc3	                                     ret	      4252	pci.c	FUNCTION_173
pci_rebar_get_possible_sizes	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,2:DO,0:functions,0:WHILE,0	25
0x4004bf0	              0x53	                                push rbx	      3035	pci.c	FUNCTION_123
0x4004bf1	          0x4889fb	                            mov rbx, rdi	      3035	pci.c	FUNCTION_123
0x4004bf4	        0x4883ec10	                           sub rsp, 0x10	      3035	pci.c	FUNCTION_123
0x4004bf8	    0x65488b042528	                mov rax, qword gs:[0x28]	      3035	pci.c	FUNCTION_123
0x4004c01	      0x4889442408	                mov qword [rsp + 8], rax	      3035	pci.c	FUNCTION_123
0x4004c06	            0x31c0	                            xor eax, eax	      3035	pci.c	FUNCTION_123
0x4004c08	      0xe883dcffff	             call sym.pci_rebar_find_pos	      3039	pci.c	FUNCTION_123	CALL_1
0x4004c0d	            0x31d2	                            xor edx, edx	      3039	pci.c	FUNCTION_123	CALL_1
0x4004c0f	            0x85c0	                           test eax, eax	      3040	pci.c	FUNCTION_123	IF_1
0x4004c11	            0x781d	                            js 0x4004c30	      3040	pci.c	FUNCTION_123	IF_1
0x4004c13	      0x488d542404	                      lea rdx, [rsp + 4]	      3043	pci.c	FUNCTION_123	CALL_2
0x4004c18	          0x8d7004	                      lea esi, [rax + 4]	      3043	pci.c	FUNCTION_123	CALL_2
0x4004c1b	          0x4889df	                            mov rdi, rbx	      3043	pci.c	FUNCTION_123	CALL_2
0x4004c1e	      0xe800000000	                          call 0x4004c23	      3043	pci.c	FUNCTION_123	CALL_2
0x4004c23	        0x8b542404	                mov edx, dword [rsp + 4]	      3044	pci.c	FUNCTION_123
0x4004c27	    0x81e2f0ffff00	                       and edx, 0xfffff0	      3044	pci.c	FUNCTION_123
0x4004c2d	          0xc1ea04	                              shr edx, 4	      3044	pci.c	FUNCTION_123
0x4004c30	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3045	pci.c	FUNCTION_123
0x4004c35	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      3045	pci.c	FUNCTION_123
0x4004c3e	            0x89d0	                            mov eax, edx	      3045	pci.c	FUNCTION_123
0x4004c40	            0x7506	                           jne 0x4004c48	      3045	pci.c	FUNCTION_123
0x4004c42	        0x4883c410	                           add rsp, 0x10	      3045	pci.c	FUNCTION_123
0x4004c46	              0x5b	                                 pop rbx	      3045	pci.c	FUNCTION_123
0x4004c47	              0xc3	                                     ret	      3045	pci.c	FUNCTION_123
0x4004c48	      0xe800000000	                          call 0x4004c4d	      3045	pci.c	FUNCTION_123
__pci_find_next_ht_cap	IF,3:FOR,0:SWITCH,0:ELSE,1:CALL,3:DO,0:functions,0:WHILE,1	61
0x40004f0	            0x4155	                                push r13	       378	pci.c	FUNCTION_14
0x40004f2	            0x4154	                                push r12	       378	pci.c	FUNCTION_14
0x40004f4	          0x4989fd	                            mov r13, rdi	       378	pci.c	FUNCTION_14
0x40004f7	              0x55	                                push rbp	       378	pci.c	FUNCTION_14
0x40004f8	              0x53	                                push rbx	       378	pci.c	FUNCTION_14
0x40004f9	          0x4189d4	                           mov r12d, edx	       378	pci.c	FUNCTION_14
0x40004fc	      0xb908000000	                              mov ecx, 8	       387	pci.c	FUNCTION_14	CALL_1
0x4000501	        0x4883ec10	                           sub rsp, 0x10	       378	pci.c	FUNCTION_14
0x4000505	    0x65488b042528	                mov rax, qword gs:[0x28]	       378	pci.c	FUNCTION_14
0x400050e	      0x4889442408	                mov qword [rsp + 8], rax	       378	pci.c	FUNCTION_14
0x4000513	            0x31c0	                            xor eax, eax	       378	pci.c	FUNCTION_14
0x4000515	            0x89d0	                            mov eax, edx	       382	pci.c	FUNCTION_14	IF_1
0x4000517	        0x400fb6d6	                          movzx edx, sil	       387	pci.c	FUNCTION_14	CALL_1
0x400051b	          0x8b7738	            mov esi, dword [rdi + 0x38] 	       387	pci.c	FUNCTION_14	CALL_1
0x400051e	          0x83e0df	                     and eax, 0xffffffdf	       382	pci.c	FUNCTION_14	IF_1
0x4000521	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	       387	pci.c	FUNCTION_14	CALL_1
0x4000525	      0x4c8d442404	                       lea r8, [rsp + 4]	       387	pci.c	FUNCTION_14	CALL_1
0x400052a	          0x83f801	                              cmp eax, 1	       383	pci.c	FUNCTION_14	IF_1
0x400052d	    0xc74424043000	               mov dword [rsp + 4], 0x30	       379	pci.c	FUNCTION_14
0x4000535	            0x19ed	                            sbb ebp, ebp	       383	pci.c	FUNCTION_14	IF_1
0x4000537	          0x83e5e8	                     and ebp, 0xffffffe8	       383	pci.c	FUNCTION_14	IF_1
0x400053a	      0xe881feffff	        call sym.__pci_find_next_cap_ttl	       387	pci.c	FUNCTION_14	CALL_1
0x400053f	          0x83ed08	                              sub ebp, 8	       383	pci.c	FUNCTION_14	IF_1
0x4000542	            0x85c0	                           test eax, eax	       389	pci.c	FUNCTION_14	WHILE_1
0x4000544	            0x89c3	                            mov ebx, eax	       389	pci.c	FUNCTION_14	WHILE_1
0x4000546	            0x7533	                           jne 0x400057b	       389	pci.c	FUNCTION_14	WHILE_1
0x4000548	            0xeb45	                           jmp 0x400058f	       389	pci.c	FUNCTION_14	WHILE_1
0x400054a	            0x89e8	                            mov eax, ebp	       394	pci.c	FUNCTION_14	WHILE_1	IF_3
0x400054c	        0x22442403	                  and al, byte [rsp + 3]	       394	pci.c	FUNCTION_14	WHILE_1	IF_3
0x4000550	           0xfb6c0	                           movzx eax, al	       394	pci.c	FUNCTION_14	WHILE_1	IF_3
0x4000553	          0x4139c4	                           cmp r12d, eax	       394	pci.c	FUNCTION_14	WHILE_1	IF_3
0x4000556	            0x7454	                            je 0x40005ac	       394	pci.c	FUNCTION_14	WHILE_1	IF_3
0x4000558	          0x8d5301	                      lea edx, [rbx + 1]	       397	pci.c	FUNCTION_14	WHILE_1	CALL_3
0x400055b	        0x418b7538	            mov esi, dword [r13 + 0x38] 	       397	pci.c	FUNCTION_14	WHILE_1	CALL_3
0x400055f	        0x498b7d10	            mov rdi, qword [r13 + 0x10] 	       397	pci.c	FUNCTION_14	WHILE_1	CALL_3
0x4000563	      0x4c8d442404	                       lea r8, [rsp + 4]	       397	pci.c	FUNCTION_14	WHILE_1	CALL_3
0x4000568	      0xb908000000	                              mov ecx, 8	       397	pci.c	FUNCTION_14	WHILE_1	CALL_3
0x400056d	           0xfb6d2	                           movzx edx, dl	       397	pci.c	FUNCTION_14	WHILE_1	CALL_3
0x4000570	      0xe84bfeffff	        call sym.__pci_find_next_cap_ttl	       397	pci.c	FUNCTION_14	WHILE_1	CALL_3
0x4000575	            0x85c0	                           test eax, eax	       389	pci.c	FUNCTION_14	WHILE_1
0x4000577	            0x89c3	                            mov ebx, eax	       397	pci.c	FUNCTION_14	WHILE_1	CALL_3
0x4000579	            0x7414	                            je 0x400058f	       389	pci.c	FUNCTION_14	WHILE_1
0x400057b	          0x8d7303	                      lea esi, [rbx + 3]	       390	pci.c	FUNCTION_14	WHILE_1	CALL_2
0x400057e	      0x488d542403	                      lea rdx, [rsp + 3]	       390	pci.c	FUNCTION_14	WHILE_1	CALL_2
0x4000583	          0x4c89ef	                            mov rdi, r13	       390	pci.c	FUNCTION_14	WHILE_1	CALL_2
0x4000586	      0xe800000000	                          call 0x400058b	       390	pci.c	FUNCTION_14	WHILE_1	CALL_2
0x400058b	            0x85c0	                           test eax, eax	       391	pci.c	FUNCTION_14	WHILE_1	IF_2
0x400058d	            0x74bb	                            je 0x400054a	       391	pci.c	FUNCTION_14	WHILE_1	IF_2
0x400058f	            0x31c0	                            xor eax, eax	       402	pci.c	FUNCTION_14
0x4000591	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       403	pci.c	FUNCTION_14
0x4000596	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       403	pci.c	FUNCTION_14
0x400059f	            0x750f	                           jne 0x40005b0	       403	pci.c	FUNCTION_14
0x40005a1	        0x4883c410	                           add rsp, 0x10	       403	pci.c	FUNCTION_14
0x40005a5	              0x5b	                                 pop rbx	       403	pci.c	FUNCTION_14
0x40005a6	              0x5d	                                 pop rbp	       403	pci.c	FUNCTION_14
0x40005a7	            0x415c	                                 pop r12	       403	pci.c	FUNCTION_14
0x40005a9	            0x415d	                                 pop r13	       403	pci.c	FUNCTION_14
0x40005ab	              0xc3	                                     ret	       403	pci.c	FUNCTION_14
0x40005ac	            0x89d8	                            mov eax, ebx	       403	pci.c	FUNCTION_14
0x40005ae	            0xebe1	                           jmp 0x4000591	       403	pci.c	FUNCTION_14
0x40005b0	      0xe800000000	                          call 0x40005b5	       403	pci.c	FUNCTION_14
pci_try_set_mwi	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	1
0x4002290	      0xe92bffffff	                     jmp sym.pci_set_mwi	      3840	pci.c	FUNCTION_156	CALL_1
pci_ignore_hotplug	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,0:DO,0:functions,0:WHILE,0	7
0x4000330	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      5434	pci.c	FUNCTION_224
0x4000334	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5434	pci.c	FUNCTION_224
0x4000338	    0x808f86000000	              or byte [rdi + 0x86], 0x80	      5436	pci.c	FUNCTION_224
0x400033f	          0x4885c0	                           test rax, rax	      5438	pci.c	FUNCTION_224	IF_1
0x4000342	            0x7407	                            je 0x400034b	      5438	pci.c	FUNCTION_224	IF_1
0x4000344	    0x808886000000	              or byte [rax + 0x86], 0x80	      5439	pci.c	FUNCTION_224	IF_1
0x400034b	            0xf3c3	                                     ret	      5439	pci.c	FUNCTION_224	IF_1
pci_request_regions	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	4
0x40013e0	          0x4889f2	                            mov rdx, rsi	      3439	pci.c	FUNCTION_139
0x40013e3	            0x31c9	                            xor ecx, ecx	      3398	pci.c	FUNCTION_136	CALL_1
0x40013e5	      0xbe3f000000	                           mov esi, 0x3f	      3398	pci.c	FUNCTION_136	CALL_1
0x40013ea	      0xe971ffffff	  jmp sym.__pci_request_selected_regions	      3398	pci.c	FUNCTION_136	CALL_1
pci_ioremap_bar	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,3:DO,0:functions,0:WHILE,0	20
0x4000360	          0x4863c6	                         movsxd rax, esi	       158	pci.c	FUNCTION_4
0x4000363	        0x48c1e006	                              shl rax, 6	       158	pci.c	FUNCTION_4
0x4000367	    0x4c8d8c077003	            lea r9, [rdi + rax + 0x370] 	       158	pci.c	FUNCTION_4
0x400036f	          0x4801f8	                            add rax, rdi	       163	pci.c	FUNCTION_4	IF_1
0x4000372	    0x4c8b80900300	            mov r8, qword [rax + 0x390] 	       163	pci.c	FUNCTION_4	IF_1
0x4000379	        0x498d4908	                       lea rcx, [r9 + 8]	       158	pci.c	FUNCTION_4
0x400037d	    0x4181e0000200	                     and r8d, 0x20000200	       163	pci.c	FUNCTION_4	IF_1
0x4000384	    0x4981f8000200	                           cmp r8, 0x200	       163	pci.c	FUNCTION_4	IF_1
0x400038b	            0x7518	                           jne 0x40003a5	       163	pci.c	FUNCTION_4	IF_1
0x400038d	        0x488b7108	                mov rsi, qword [rcx + 8]	       167	pci.c	FUNCTION_4	CALL_3
0x4000391	    0x488bb8780300	           mov rdi, qword [rax + 0x378] 	       167	pci.c	FUNCTION_4	CALL_3
0x4000398	        0x4883c601	                              add rsi, 1	       167	pci.c	FUNCTION_4	CALL_3
0x400039c	        0x492b7108	                 sub rsi, qword [r9 + 8]	       167	pci.c	FUNCTION_4	CALL_3
0x40003a0	      0xe900000000	                           jmp 0x40003a5	       167	pci.c	FUNCTION_4	CALL_3
0x40003a5	            0x89f2	                            mov edx, esi	       167	pci.c	FUNCTION_4	CALL_3
0x40003a7	    0x4881c7a00000	                           add rdi, 0xa0	       164	pci.c	FUNCTION_4	IF_1	CALL_1
0x40003ae	    0x48c7c6000000	                              mov rsi, 0	       164	pci.c	FUNCTION_4	IF_1	CALL_1
0x40003b5	      0xe800000000	                          call 0x40003ba	       164	pci.c	FUNCTION_4	IF_1	CALL_1
0x40003ba	            0x31c0	                            xor eax, eax	       168	pci.c	FUNCTION_4
0x40003bc	              0xc3	                                     ret	       168	pci.c	FUNCTION_4
pcibios_enable_device	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	1
0x4003910	      0xe900000000	                           jmp 0x4003915	      1297	pci.c	FUNCTION_56	CALL_1
pci_pio_to_address	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	2
0x4004de0	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      3510	pci.c	FUNCTION_142
0x4004de7	              0xc3	                                     ret	      3510	pci.c	FUNCTION_142
pcie_get_minimum_link	IF,3:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,1	48
0x4000a80	            0x4154	                                push r12	      5098	pci.c	FUNCTION_211
0x4000a82	              0x55	                                push rbp	      5098	pci.c	FUNCTION_211
0x4000a83	          0x4989f4	                            mov r12, rsi	      5098	pci.c	FUNCTION_211
0x4000a86	              0x53	                                push rbx	      5098	pci.c	FUNCTION_211
0x4000a87	          0x4889d5	                            mov rbp, rdx	      5098	pci.c	FUNCTION_211
0x4000a8a	          0x4889fb	                            mov rbx, rdi	      5098	pci.c	FUNCTION_211
0x4000a8d	        0x4883ec10	                           sub rsp, 0x10	      5098	pci.c	FUNCTION_211
0x4000a91	    0xc706ff000000	                   mov dword [rsi], 0xff	      5101	pci.c	FUNCTION_211
0x4000a97	    0xc702ff000000	                   mov dword [rdx], 0xff	      5102	pci.c	FUNCTION_211
0x4000a9d	    0x65488b042528	                mov rax, qword gs:[0x28]	      5098	pci.c	FUNCTION_211
0x4000aa6	      0x4889442408	                mov qword [rsp + 8], rax	      5098	pci.c	FUNCTION_211
0x4000aab	            0x31c0	                            xor eax, eax	      5098	pci.c	FUNCTION_211
0x4000aad	          0x4885ff	                           test rdi, rdi	      5104	pci.c	FUNCTION_211	WHILE_1
0x4000ab0	            0x753b	                           jne 0x4000aed	      5104	pci.c	FUNCTION_211	WHILE_1
0x4000ab2	            0xeb68	                           jmp 0x4000b1c	      5104	pci.c	FUNCTION_211	WHILE_1
0x4000ab4	       0xfb7442406	               movzx eax, word [rsp + 6]	      5113	pci.c	FUNCTION_211	WHILE_1
0x4000ab9	          0x4889c2	                            mov rdx, rax	      5113	pci.c	FUNCTION_211	WHILE_1
0x4000abc	      0x25f0030000	                          and eax, 0x3f0	      5114	pci.c	FUNCTION_211	WHILE_1
0x4000ac1	          0x83e20f	                            and edx, 0xf	      5113	pci.c	FUNCTION_211	WHILE_1
0x4000ac4	          0xc1f804	                              sar eax, 4	      5114	pci.c	FUNCTION_211	WHILE_1
0x4000ac7	     0xfb692000000	                   movzx edx, byte [rdx]	      5113	pci.c	FUNCTION_211	WHILE_1
0x4000ace	        0x413b1424	                    cmp edx, dword [r12]	      5117	pci.c	FUNCTION_211	WHILE_1	IF_2
0x4000ad2	            0x7304	                           jae 0x4000ad8	      5117	pci.c	FUNCTION_211	WHILE_1	IF_2
0x4000ad4	        0x41891424	                    mov dword [r12], edx	      5118	pci.c	FUNCTION_211	WHILE_1	IF_2
0x4000ad8	          0x3b4500	                    cmp eax, dword [rbp]	      5120	pci.c	FUNCTION_211	WHILE_1	IF_3
0x4000adb	            0x7303	                           jae 0x4000ae0	      5120	pci.c	FUNCTION_211	WHILE_1	IF_3
0x4000add	          0x894500	                    mov dword [rbp], eax	      5121	pci.c	FUNCTION_211	WHILE_1	IF_3
0x4000ae0	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      5123	pci.c	FUNCTION_211	WHILE_1
0x4000ae4	        0x488b5838	            mov rbx, qword [rax + 0x38] 	      5123	pci.c	FUNCTION_211	WHILE_1
0x4000ae8	          0x4885db	                           test rbx, rbx	      5104	pci.c	FUNCTION_211	WHILE_1
0x4000aeb	            0x742f	                            je 0x4000b1c	      5104	pci.c	FUNCTION_211	WHILE_1
0x4000aed	      0x488d542406	                      lea rdx, [rsp + 6]	      5109	pci.c	FUNCTION_211	WHILE_1	CALL_1
0x4000af2	      0xbe12000000	                           mov esi, 0x12	      5109	pci.c	FUNCTION_211	WHILE_1	CALL_1
0x4000af7	          0x4889df	                            mov rdi, rbx	      5109	pci.c	FUNCTION_211	WHILE_1	CALL_1
0x4000afa	      0xe800000000	                          call 0x4000aff	      5109	pci.c	FUNCTION_211	WHILE_1	CALL_1
0x4000aff	            0x85c0	                           test eax, eax	      5110	pci.c	FUNCTION_211	WHILE_1	IF_1
0x4000b01	            0x74b1	                            je 0x4000ab4	      5110	pci.c	FUNCTION_211	WHILE_1	IF_1
0x4000b03	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5127	pci.c	FUNCTION_211
0x4000b08	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      5127	pci.c	FUNCTION_211
0x4000b11	            0x750d	                           jne 0x4000b20	      5127	pci.c	FUNCTION_211
0x4000b13	        0x4883c410	                           add rsp, 0x10	      5127	pci.c	FUNCTION_211
0x4000b17	              0x5b	                                 pop rbx	      5127	pci.c	FUNCTION_211
0x4000b18	              0x5d	                                 pop rbp	      5127	pci.c	FUNCTION_211
0x4000b19	            0x415c	                                 pop r12	      5127	pci.c	FUNCTION_211
0x4000b1b	              0xc3	                                     ret	      5127	pci.c	FUNCTION_211
0x4000b1c	            0x31c0	                            xor eax, eax	      5126	pci.c	FUNCTION_211
0x4000b1e	            0xebe3	                           jmp 0x4000b03	      5126	pci.c	FUNCTION_211
0x4000b20	      0xe800000000	                          call 0x4000b25	      5127	pci.c	FUNCTION_211
pcie_bandwidth_capable	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,3:DO,0:functions,0:WHILE,0	55
0x40057f0	            0x4154	                                push r12	      5262	pci.c	FUNCTION_215
0x40057f2	              0x55	                                push rbp	      5262	pci.c	FUNCTION_215
0x40057f3	          0x4989d4	                            mov r12, rdx	      5262	pci.c	FUNCTION_215
0x40057f6	              0x53	                                push rbx	      5262	pci.c	FUNCTION_215
0x40057f7	          0x4889f5	                            mov rbp, rsi	      5262	pci.c	FUNCTION_215
0x40057fa	          0x4889fb	                            mov rbx, rdi	      5262	pci.c	FUNCTION_215
0x40057fd	        0x4883ec10	                           sub rsp, 0x10	      5262	pci.c	FUNCTION_215
0x4005801	    0x65488b042528	                mov rax, qword gs:[0x28]	      5262	pci.c	FUNCTION_215
0x400580a	      0x4889442408	                mov qword [rsp + 8], rax	      5262	pci.c	FUNCTION_215
0x400580f	            0x31c0	                            xor eax, eax	      5262	pci.c	FUNCTION_215
0x4005811	      0xe800000000	                          call 0x4005816	      5263	pci.c	FUNCTION_215	CALL_1
0x4005816	      0x488d542404	                      lea rdx, [rsp + 4]	      5243	pci.c	FUNCTION_214	CALL_1
0x400581b	          0x894500	                    mov dword [rbp], eax	      5263	pci.c	FUNCTION_215	CALL_1
0x400581e	      0xbe0c000000	                            mov esi, 0xc	      5243	pci.c	FUNCTION_214	CALL_1
0x4005823	          0x4889df	                            mov rdi, rbx	      5243	pci.c	FUNCTION_214	CALL_1
0x4005826	      0xe800000000	                          call 0x400582b	      5243	pci.c	FUNCTION_214	CALL_1
0x400582b	        0x8b442404	                mov eax, dword [rsp + 4]	      5244	pci.c	FUNCTION_214	IF_1
0x400582f	            0x85c0	                           test eax, eax	      5244	pci.c	FUNCTION_214	IF_1
0x4005831	            0x7438	                            je 0x400586b	      5244	pci.c	FUNCTION_214	IF_1
0x4005833	      0x25f0030000	                          and eax, 0x3f0	      5245	pci.c	FUNCTION_214	IF_1
0x4005838	          0xc1e804	                              shr eax, 4	      5245	pci.c	FUNCTION_214	IF_1
0x400583b	        0x41890424	                    mov dword [r12], eax	      5264	pci.c	FUNCTION_215	CALL_2
0x400583f	          0x8b5500	                    mov edx, dword [rbp]	      5266	pci.c	FUNCTION_215	IF_1
0x4005842	            0x89c1	                            mov ecx, eax	      5245	pci.c	FUNCTION_214	IF_1
0x4005844	    0x81faff000000	                           cmp edx, 0xff	      5266	pci.c	FUNCTION_215	IF_1
0x400584a	            0x745d	                            je 0x40058a9	      5266	pci.c	FUNCTION_215	IF_1
0x400584c	          0x83fa17	                           cmp edx, 0x17	      5269	pci.c	FUNCTION_215	CALL_3
0x400584f	            0x743b	                            je 0x400588c	      5269	pci.c	FUNCTION_215	CALL_3
0x4005851	          0x83fa16	                           cmp edx, 0x16	      5269	pci.c	FUNCTION_215	CALL_3
0x4005854	            0x743e	                            je 0x4005894	      5269	pci.c	FUNCTION_215	CALL_3
0x4005856	          0x83fa15	                           cmp edx, 0x15	      5269	pci.c	FUNCTION_215	CALL_3
0x4005859	            0x7441	                            je 0x400589c	      5269	pci.c	FUNCTION_215	CALL_3
0x400585b	    0x69c9d0070000	                    imul ecx, ecx, 0x7d0	      5269	pci.c	FUNCTION_215	CALL_3
0x4005861	            0x31c0	                            xor eax, eax	      5269	pci.c	FUNCTION_215	CALL_3
0x4005863	          0x83fa14	                           cmp edx, 0x14	      5269	pci.c	FUNCTION_215	CALL_3
0x4005866	           0xf44c1	                          cmove eax, ecx	      5269	pci.c	FUNCTION_215	CALL_3
0x4005869	            0xeb08	                           jmp 0x4005873	      5269	pci.c	FUNCTION_215	CALL_3
0x400586b	    0x41c70424ff00	                   mov dword [r12], 0xff	      5264	pci.c	FUNCTION_215	CALL_2
0x4005873	      0x488b742408	                mov rsi, qword [rsp + 8]	      5270	pci.c	FUNCTION_215
0x4005878	    0x654833342528	                xor rsi, qword gs:[0x28]	      5270	pci.c	FUNCTION_215
0x4005881	            0x7521	                           jne 0x40058a4	      5270	pci.c	FUNCTION_215
0x4005883	        0x4883c410	                           add rsp, 0x10	      5270	pci.c	FUNCTION_215
0x4005887	              0x5b	                                 pop rbx	      5270	pci.c	FUNCTION_215
0x4005888	              0x5d	                                 pop rbp	      5270	pci.c	FUNCTION_215
0x4005889	            0x415c	                                 pop r12	      5270	pci.c	FUNCTION_215
0x400588b	              0xc3	                                     ret	      5270	pci.c	FUNCTION_215
0x400588c	    0x69c0893d0000	                   imul eax, eax, 0x3d89	      5270	pci.c	FUNCTION_215
0x4005892	            0xebdf	                           jmp 0x4005873	      5270	pci.c	FUNCTION_215
0x4005894	    0x69c0c41e0000	                   imul eax, eax, 0x1ec4	      5270	pci.c	FUNCTION_215
0x400589a	            0xebd7	                           jmp 0x4005873	      5270	pci.c	FUNCTION_215
0x400589c	    0x69c0a00f0000	                    imul eax, eax, 0xfa0	      5270	pci.c	FUNCTION_215
0x40058a2	            0xebcf	                           jmp 0x4005873	      5270	pci.c	FUNCTION_215
0x40058a4	      0xe800000000	                          call 0x40058a9	      5270	pci.c	FUNCTION_215
0x40058a9	            0x31c0	                            xor eax, eax	      5267	pci.c	FUNCTION_215	IF_1
0x40058ab	            0xebc6	                           jmp 0x4005873	      5267	pci.c	FUNCTION_215	IF_1
pci_find_next_ht_capability	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	2
0x40005c0	          0x83c601	                              add esi, 1	       419	pci.c	FUNCTION_15	CALL_1
0x40005c3	      0xe928ffffff	          jmp sym.__pci_find_next_ht_cap	       419	pci.c	FUNCTION_15	CALL_1
pci_d3cold_disable	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	7
0x4004320	     0xfb687860000	           movzx eax, byte [rdi + 0x86] 	      2423	pci.c	FUNCTION_103	IF_1
0x4004327	            0xa802	                              test al, 2	      2423	pci.c	FUNCTION_103	IF_1
0x4004329	            0x7402	                            je 0x400432d	      2423	pci.c	FUNCTION_103	IF_1
0x400432b	            0xf3c3	                                     ret	      2423	pci.c	FUNCTION_103	IF_1
0x400432d	          0x83c802	                               or eax, 2	      2424	pci.c	FUNCTION_103	IF_1
0x4004330	    0x888786000000	               mov byte [rdi + 0x86], al	      2424	pci.c	FUNCTION_103	IF_1
0x4004336	      0xe9b5feffff	            jmp sym.pci_bridge_d3_update	      2425	pci.c	FUNCTION_103	IF_1	CALL_1
pci_request_region_exclusive	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	2
0x4001350	      0xb900000008	                   mov ecx, section_end.	      3347	pci.c	FUNCTION_133	CALL_1
0x4001355	      0xe9c6feffff	            jmp sym.__pci_request_region	      3347	pci.c	FUNCTION_133	CALL_1
__pci_dev_set_current_state	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,0:DO,0:functions,0:WHILE,0	4
0x40000e0	            0x8b06	                    mov eax, dword [rsi]	       850	pci.c	FUNCTION_36
0x40000e2	    0x898780000000	             mov dword [rdi + 0x80], eax	       852	pci.c	FUNCTION_36
0x40000e8	            0x31c0	                            xor eax, eax	       854	pci.c	FUNCTION_36
0x40000ea	              0xc3	                                     ret	       854	pci.c	FUNCTION_36
pcibios_default_alignment	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,0:DO,0:functions,0:WHILE,0	2
0x4005cd0	            0x31c0	                            xor eax, eax	      5446	pci.c	FUNCTION_225
0x4005cd2	              0xc3	                                     ret	      5446	pci.c	FUNCTION_225
pci_find_resource	IF,1:FOR,1:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	28
0x4001700	    0x488d87780300	                  lea rax, [rdi + 0x378]	       499	pci.c	FUNCTION_18
0x4001707	    0x4881c7f80400	                          add rdi, 0x4f8	       499	pci.c	FUNCTION_18
0x400170e	            0xeb09	                           jmp 0x4001719	       499	pci.c	FUNCTION_18
0x4001710	        0x4883c040	                           add rax, 0x40	       499	pci.c	FUNCTION_18
0x4001714	          0x4839c7	                            cmp rdi, rax	       502	pci.c	FUNCTION_18	FOR_1
0x4001717	            0x7445	                            je 0x400175e	       502	pci.c	FUNCTION_18	FOR_1
0x4001719	          0x488b10	                    mov rdx, qword [rax]	       505	pci.c	FUNCTION_18	FOR_1	IF_1	CALL_1
0x400171c	          0x4885d2	                           test rdx, rdx	       505	pci.c	FUNCTION_18	FOR_1	IF_1	CALL_1
0x400171f	            0x74ef	                            je 0x4001710	       505	pci.c	FUNCTION_18	FOR_1	IF_1	CALL_1
0x4001721	        0x4c8b4018	              mov r8, qword [rax + 0x18]	       505	pci.c	FUNCTION_18	FOR_1	IF_1	CALL_1
0x4001725	        0x488b4e18	            mov rcx, qword [rsi + 0x18] 	       505	pci.c	FUNCTION_18	FOR_1	IF_1	CALL_1
0x4001729	          0x4d89c2	                             mov r10, r8	       211	ioport.h	FUNCTION_372	IF_1	CALL_2
0x400172c	          0x4989c9	                             mov r9, rcx	       211	ioport.h	FUNCTION_372	IF_1	CALL_2
0x400172f	    0x4181e2001f00	                        and r10d, 0x1f00	       211	ioport.h	FUNCTION_372	IF_1	CALL_2
0x4001736	    0x4181e1001f00	                         and r9d, 0x1f00	       211	ioport.h	FUNCTION_372	IF_1	CALL_2
0x400173d	          0x4d39ca	                             cmp r10, r9	       211	ioport.h	FUNCTION_372	IF_1	CALL_2
0x4001740	            0x75ce	                           jne 0x4001710	       211	ioport.h	FUNCTION_372	IF_1	CALL_2
0x4001742	          0x4c09c1	                              or rcx, r8	       213	ioport.h	FUNCTION_372	IF_2
0x4001745	    0xf7c100000020	                    test ecx, 0x20000000	       213	ioport.h	FUNCTION_372	IF_2
0x400174b	            0x75c3	                           jne 0x4001710	       213	ioport.h	FUNCTION_372	IF_2
0x400174d	          0x483b16	                    cmp rdx, qword [rsi]	       215	ioport.h	FUNCTION_372
0x4001750	            0x77be	                            ja 0x4001710	       215	ioport.h	FUNCTION_372
0x4001752	        0x488b4e08	                mov rcx, qword [rsi + 8]	       215	ioport.h	FUNCTION_372
0x4001756	        0x48394808	                cmp qword [rax + 8], rcx	       215	ioport.h	FUNCTION_372
0x400175a	            0x72b4	                            jb 0x4001710	       215	ioport.h	FUNCTION_372
0x400175c	            0xf3c3	                                     ret	       510	pci.c	FUNCTION_18
0x400175e	            0x31c0	                            xor eax, eax	       509	pci.c	FUNCTION_18
0x4001760	              0xc3	                                     ret	       510	pci.c	FUNCTION_18
pcibios_setup	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,0:DO,0:functions,0:WHILE,0	3
0x4000091	              0xc0	                                 invalid	       525	pci.c	FUNCTION_19	WHILE_1	CALL_2
0x4000092	            0x743c	                            je 0x40000d0	       525	pci.c	FUNCTION_19	WHILE_1	CALL_2
0x4000094	              0x80	                                 invalid	       525	pci.c	FUNCTION_19	WHILE_1	CALL_2
pci_config_pm_runtime_put	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,2:DO,0:functions,0:WHILE,0	13
0x4004170	              0x53	                                push rbx	      2271	pci.c	FUNCTION_98
0x4004171	    0x488b9fa00000	            mov rbx, qword [rdi + 0xa0] 	      2273	pci.c	FUNCTION_98
0x4004178	      0xbe05000000	                              mov esi, 5	       228	pm_runtime.h	FUNCTION_327	CALL_1
0x400417d	    0x4881c7a00000	                           add rdi, 0xa0	      2272	pci.c	FUNCTION_98
0x4004184	      0xe800000000	                          call 0x4004189	       228	pm_runtime.h	FUNCTION_327	CALL_1
0x4004189	          0x4885db	                           test rbx, rbx	      2276	pci.c	FUNCTION_98	IF_1
0x400418c	            0x740e	                            je 0x400419c	      2276	pci.c	FUNCTION_98	IF_1
0x400418e	          0x4889df	                            mov rdi, rbx	       239	pm_runtime.h	FUNCTION_329	CALL_1
0x4004191	      0xbe04000000	                              mov esi, 4	       239	pm_runtime.h	FUNCTION_329	CALL_1
0x4004196	              0x5b	                                 pop rbx	      2278	pci.c	FUNCTION_98
0x4004197	      0xe900000000	                           jmp 0x400419c	       239	pm_runtime.h	FUNCTION_329	CALL_1
0x400419c	              0x5b	                                 pop rbx	      2278	pci.c	FUNCTION_98
0x400419d	              0xc3	                                     ret	      2278	pci.c	FUNCTION_98
pci_bus_find_capability	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,3:DO,0:functions,0:WHILE,0	36
0x4001be0	            0x4154	                                push r12	       291	pci.c	FUNCTION_11
0x4001be2	              0x55	                                push rbp	       291	pci.c	FUNCTION_11
0x4001be3	          0x4189d4	                           mov r12d, edx	       291	pci.c	FUNCTION_11
0x4001be6	              0x53	                                push rbx	       291	pci.c	FUNCTION_11
0x4001be7	      0xba0e000000	                            mov edx, 0xe	       295	pci.c	FUNCTION_11	CALL_1
0x4001bec	          0x4889fb	                            mov rbx, rdi	       291	pci.c	FUNCTION_11
0x4001bef	            0x89f5	                            mov ebp, esi	       291	pci.c	FUNCTION_11
0x4001bf1	        0x4883ec10	                           sub rsp, 0x10	       291	pci.c	FUNCTION_11
0x4001bf5	      0x488d4c2403	                      lea rcx, [rsp + 3]	       295	pci.c	FUNCTION_11	CALL_1
0x4001bfa	    0x65488b042528	                mov rax, qword gs:[0x28]	       291	pci.c	FUNCTION_11
0x4001c03	      0x4889442408	                mov qword [rsp + 8], rax	       291	pci.c	FUNCTION_11
0x4001c08	            0x31c0	                            xor eax, eax	       291	pci.c	FUNCTION_11
0x4001c0a	      0xe800000000	                          call 0x4001c0f	       295	pci.c	FUNCTION_11	CALL_1
0x4001c0f	       0xfb6542403	               movzx edx, byte [rsp + 3]	       297	pci.c	FUNCTION_11	CALL_2
0x4001c14	            0x89ee	                            mov esi, ebp	       297	pci.c	FUNCTION_11	CALL_2
0x4001c16	          0x4889df	                            mov rdi, rbx	       297	pci.c	FUNCTION_11	CALL_2
0x4001c19	          0x83e27f	                           and edx, 0x7f	       297	pci.c	FUNCTION_11	CALL_2
0x4001c1c	      0xe8effcffff	       call sym.__pci_bus_find_cap_start	       297	pci.c	FUNCTION_11	CALL_2
0x4001c21	            0x85c0	                           test eax, eax	       298	pci.c	FUNCTION_11	IF_1
0x4001c23	            0x741d	                            je 0x4001c42	       298	pci.c	FUNCTION_11	IF_1
0x4001c25	      0x4c8d442404	                       lea r8, [rsp + 4]	       216	pci.c	FUNCTION_7	CALL_1
0x4001c2a	           0xfb6d0	                           movzx edx, al	       216	pci.c	FUNCTION_7	CALL_1
0x4001c2d	          0x4489e1	                           mov ecx, r12d	       216	pci.c	FUNCTION_7	CALL_1
0x4001c30	            0x89ee	                            mov esi, ebp	       216	pci.c	FUNCTION_7	CALL_1
0x4001c32	          0x4889df	                            mov rdi, rbx	       216	pci.c	FUNCTION_7	CALL_1
0x4001c35	    0xc74424043000	               mov dword [rsp + 4], 0x30	       214	pci.c	FUNCTION_7
0x4001c3d	      0xe87ee7ffff	        call sym.__pci_find_next_cap_ttl	       216	pci.c	FUNCTION_7	CALL_1
0x4001c42	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       302	pci.c	FUNCTION_11
0x4001c47	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       302	pci.c	FUNCTION_11
0x4001c50	            0x7509	                           jne 0x4001c5b	       302	pci.c	FUNCTION_11
0x4001c52	        0x4883c410	                           add rsp, 0x10	       302	pci.c	FUNCTION_11
0x4001c56	              0x5b	                                 pop rbx	       302	pci.c	FUNCTION_11
0x4001c57	              0x5d	                                 pop rbp	       302	pci.c	FUNCTION_11
0x4001c58	            0x415c	                                 pop r12	       302	pci.c	FUNCTION_11
0x4001c5a	              0xc3	                                     ret	       302	pci.c	FUNCTION_11
0x4001c5b	      0xe800000000	         call sym.pci_find_ht_capability	       302	pci.c	FUNCTION_11
pci_set_platform_pm	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,0:DO,0:functions,0:WHILE,0	17
0x4003200	        0x48833f00	                      cmp qword [rdi], 0	       582	pci.c	FUNCTION_22	IF_1
0x4003204	            0x742d	                            je 0x4003233	       582	pci.c	FUNCTION_22	IF_1
0x4003206	      0x48837f0800	                  cmp qword [rdi + 8], 0	       582	pci.c	FUNCTION_22	IF_1
0x400320b	            0x7426	                            je 0x4003233	       582	pci.c	FUNCTION_22	IF_1
0x400320d	      0x48837f1000	               cmp qword [rdi + 0x10], 0	       582	pci.c	FUNCTION_22	IF_1
0x4003212	            0x741f	                            je 0x4003233	       582	pci.c	FUNCTION_22	IF_1
0x4003214	      0x48837f1800	               cmp qword [rdi + 0x18], 0	       582	pci.c	FUNCTION_22	IF_1
0x4003219	            0x7418	                            je 0x4003233	       582	pci.c	FUNCTION_22	IF_1
0x400321b	      0x48837f2000	               cmp qword [rdi + 0x20], 0	       583	pci.c	FUNCTION_22	IF_1
0x4003220	            0x7411	                            je 0x4003233	       583	pci.c	FUNCTION_22	IF_1
0x4003222	      0x48837f2800	               cmp qword [rdi + 0x28], 0	       583	pci.c	FUNCTION_22	IF_1
0x4003227	            0x740a	                            je 0x4003233	       583	pci.c	FUNCTION_22	IF_1
0x4003229	    0x48893d000000	            mov qword [0x04003230], rdi 	       585	pci.c	FUNCTION_22
0x4003230	            0x31c0	                            xor eax, eax	       586	pci.c	FUNCTION_22
0x4003232	              0xc3	                                     ret	       586	pci.c	FUNCTION_22
0x4003233	      0xb8eaffffff	                     mov eax, 0xffffffea	       584	pci.c	FUNCTION_22	IF_1
0x4003238	              0xc3	                                     ret	       587	pci.c	FUNCTION_22
pci_clear_mwi	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,2:DO,0:functions,0:WHILE,0	25
0x4000670	              0x53	                                push rbx	      3852	pci.c	FUNCTION_157
0x4000671	      0xbe04000000	                              mov esi, 4	      3856	pci.c	FUNCTION_157	CALL_1
0x4000676	          0x4889fb	                            mov rbx, rdi	      3852	pci.c	FUNCTION_157
0x4000679	        0x4883ec10	                           sub rsp, 0x10	      3852	pci.c	FUNCTION_157
0x400067d	      0x488d542406	                      lea rdx, [rsp + 6]	      3856	pci.c	FUNCTION_157	CALL_1
0x4000682	    0x65488b042528	                mov rax, qword gs:[0x28]	      3852	pci.c	FUNCTION_157
0x400068b	      0x4889442408	                mov qword [rsp + 8], rax	      3852	pci.c	FUNCTION_157
0x4000690	            0x31c0	                            xor eax, eax	      3852	pci.c	FUNCTION_157
0x4000692	      0xe800000000	                          call 0x4000697	      3856	pci.c	FUNCTION_157	CALL_1
0x4000697	       0xfb7542406	               movzx edx, word [rsp + 6]	      3857	pci.c	FUNCTION_157	IF_1
0x400069c	          0xf6c210	                           test dl, 0x10	      3857	pci.c	FUNCTION_157	IF_1
0x400069f	            0x7418	                            je 0x40006b9	      3857	pci.c	FUNCTION_157	IF_1
0x40006a1	          0x83e2ef	                     and edx, 0xffffffef	      3858	pci.c	FUNCTION_157	IF_1
0x40006a4	      0xbe04000000	                              mov esi, 4	      3859	pci.c	FUNCTION_157	IF_1	CALL_2
0x40006a9	          0x4889df	                            mov rdi, rbx	      3859	pci.c	FUNCTION_157	IF_1	CALL_2
0x40006ac	      0x6689542406	                  mov word [rsp + 6], dx	      3858	pci.c	FUNCTION_157	IF_1
0x40006b1	           0xfb7d2	                           movzx edx, dx	      3859	pci.c	FUNCTION_157	IF_1	CALL_2
0x40006b4	      0xe800000000	                          call 0x40006b9	      3859	pci.c	FUNCTION_157	IF_1	CALL_2
0x40006b9	      0x488b442408	                mov rax, qword [rsp + 8]	      3862	pci.c	FUNCTION_157
0x40006be	    0x654833042528	                xor rax, qword gs:[0x28]	      3862	pci.c	FUNCTION_157
0x40006c7	            0x7506	                           jne 0x40006cf	      3862	pci.c	FUNCTION_157
0x40006c9	        0x4883c410	                           add rsp, 0x10	      3862	pci.c	FUNCTION_157
0x40006cd	              0x5b	                                 pop rbx	      3862	pci.c	FUNCTION_157
0x40006ce	              0xc3	                                     ret	      3862	pci.c	FUNCTION_157
0x40006cf	      0xe800000000	                          call 0x40006d4	      3862	pci.c	FUNCTION_157
pci_free_cap_save_buffers	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,2:DO,0:functions,0:WHILE,0	11
0x40049e0	    0x488bbf880600	           mov rdi, qword [rdi + 0x688] 	      2767	pci.c	FUNCTION_114	CALL_1
0x40049e7	          0x4885ff	                           test rdi, rdi	      2767	pci.c	FUNCTION_114	CALL_1
0x40049ea	            0x7412	                            je 0x40049fe	      2767	pci.c	FUNCTION_114	CALL_1
0x40049ec	              0x53	                                push rbx	      2763	pci.c	FUNCTION_114
0x40049ed	          0x488b1f	                    mov rbx, qword [rdi]	      2767	pci.c	FUNCTION_114	CALL_1
0x40049f0	      0xe800000000	                          call 0x40049f5	      2768	pci.c	FUNCTION_114	CALL_2
0x40049f5	          0x4885db	                           test rbx, rbx	      2767	pci.c	FUNCTION_114	CALL_1
0x40049f8	          0x4889df	                            mov rdi, rbx	      2767	pci.c	FUNCTION_114	CALL_1
0x40049fb	            0x75f0	                           jne 0x40049ed	      2767	pci.c	FUNCTION_114	CALL_1
0x40049fd	              0x5b	                                 pop rbx	      2769	pci.c	FUNCTION_114
0x40049fe	            0xf3c3	                                     ret	      2769	pci.c	FUNCTION_114
pcim_release	IF,6:FOR,1:SWITCH,0:ELSE,0:CALL,7:DO,0:functions,0:WHILE,0	70
0x4003b80	            0x4155	                                push r13	      1471	pci.c	FUNCTION_64
0x4003b82	            0x4154	                                push r12	      1471	pci.c	FUNCTION_64
0x4003b84	    0x4c8daf60ffff	                   lea r13, [rdi - 0xa0]	      1472	pci.c	FUNCTION_64	CALL_1
0x4003b8b	              0x55	                                push rbp	      1471	pci.c	FUNCTION_64
0x4003b8c	              0x53	                                push rbx	      1471	pci.c	FUNCTION_64
0x4003b8d	          0x4889f5	                            mov rbp, rsi	      1471	pci.c	FUNCTION_64
0x4003b90	     0xfb6879a0500	          movzx eax, byte [rdi + 0x59a] 	      1476	pci.c	FUNCTION_64	IF_1
0x4003b97	            0xa804	                              test al, 4	      1476	pci.c	FUNCTION_64	IF_1
0x4003b99	            0x7554	                           jne 0x4003bef	      1476	pci.c	FUNCTION_64	IF_1
0x4003b9b	            0xa808	                              test al, 8	      1478	pci.c	FUNCTION_64	IF_2
0x4003b9d	            0x7566	                           jne 0x4003c05	      1478	pci.c	FUNCTION_64	IF_2
0x4003b9f	            0x31db	                            xor ebx, ebx	      1471	pci.c	FUNCTION_64
0x4003ba1	    0x41bc01000000	                             mov r12d, 1	      1482	pci.c	FUNCTION_64	FOR_1	IF_3
0x4003ba7	            0xeb08	                           jmp 0x4003bb1	      1482	pci.c	FUNCTION_64	FOR_1	IF_3
0x4003ba9	          0x83c301	                              add ebx, 1	      1481	pci.c	FUNCTION_64	FOR_1
0x4003bac	          0x83fb0b	                            cmp ebx, 0xb	      1481	pci.c	FUNCTION_64	FOR_1
0x4003baf	            0x741e	                            je 0x4003bcf	      1481	pci.c	FUNCTION_64	FOR_1
0x4003bb1	          0x4489e0	                           mov eax, r12d	      1482	pci.c	FUNCTION_64	FOR_1	IF_3
0x4003bb4	            0x89d9	                            mov ecx, ebx	      1482	pci.c	FUNCTION_64	FOR_1	IF_3
0x4003bb6	            0xd3e0	                             shl eax, cl	      1482	pci.c	FUNCTION_64	FOR_1	IF_3
0x4003bb8	          0x854504	               test dword [rbp + 4], eax	      1482	pci.c	FUNCTION_64	FOR_1	IF_3
0x4003bbb	            0x74ec	                            je 0x4003ba9	      1482	pci.c	FUNCTION_64	FOR_1	IF_3
0x4003bbd	            0x89de	                            mov esi, ebx	      1483	pci.c	FUNCTION_64	FOR_1	IF_3
0x4003bbf	          0x4c89ef	                            mov rdi, r13	      1483	pci.c	FUNCTION_64	FOR_1	IF_3
0x4003bc2	          0x83c301	                              add ebx, 1	      1481	pci.c	FUNCTION_64	FOR_1
0x4003bc5	      0xe800000000	                          call 0x4003bca	      1483	pci.c	FUNCTION_64	FOR_1	IF_3
0x4003bca	          0x83fb0b	                            cmp ebx, 0xb	      1481	pci.c	FUNCTION_64	FOR_1
0x4003bcd	            0x75e2	                           jne 0x4003bb1	      1481	pci.c	FUNCTION_64	FOR_1
0x4003bcf	         0xfb67500	                   movzx esi, byte [rbp]	      1485	pci.c	FUNCTION_64	IF_4
0x4003bd3	        0x40f6c610	                          test sil, 0x10	      1485	pci.c	FUNCTION_64	IF_4
0x4003bd7	            0x89f0	                            mov eax, esi	      1485	pci.c	FUNCTION_64	IF_4
0x4003bd9	            0x755c	                           jne 0x4003c37	      1485	pci.c	FUNCTION_64	IF_4
0x4003bdb	        0x40f6c608	                             test sil, 8	      1488	pci.c	FUNCTION_64	IF_5
0x4003bdf	            0x752e	                           jne 0x4003c0f	      1488	pci.c	FUNCTION_64	IF_5
0x4003be1	          0x83e003	                              and eax, 3	      1491	pci.c	FUNCTION_64	IF_6
0x4003be4	            0x3c01	                               cmp al, 1	      1491	pci.c	FUNCTION_64	IF_6
0x4003be6	            0x7441	                            je 0x4003c29	      1491	pci.c	FUNCTION_64	IF_6
0x4003be8	              0x5b	                                 pop rbx	      1493	pci.c	FUNCTION_64
0x4003be9	              0x5d	                                 pop rbp	      1493	pci.c	FUNCTION_64
0x4003bea	            0x415c	                                 pop r12	      1493	pci.c	FUNCTION_64
0x4003bec	            0x415d	                                 pop r13	      1493	pci.c	FUNCTION_64
0x4003bee	              0xc3	                                     ret	      1493	pci.c	FUNCTION_64
0x4003bef	          0x4889fb	                            mov rbx, rdi	      1493	pci.c	FUNCTION_64
0x4003bf2	          0x4c89ef	                            mov rdi, r13	      1477	pci.c	FUNCTION_64	CALL_2
0x4003bf5	      0xe800000000	                          call 0x4003bfa	      1477	pci.c	FUNCTION_64	CALL_2
0x4003bfa	     0xfb6839a0500	          movzx eax, byte [rbx + 0x59a] 	      1477	pci.c	FUNCTION_64	CALL_2
0x4003c01	            0xa808	                              test al, 8	      1478	pci.c	FUNCTION_64	IF_2
0x4003c03	            0x749a	                            je 0x4003b9f	      1478	pci.c	FUNCTION_64	IF_2
0x4003c05	          0x4c89ef	                            mov rdi, r13	      1479	pci.c	FUNCTION_64	CALL_3
0x4003c08	      0xe800000000	                          call 0x4003c0d	      1479	pci.c	FUNCTION_64	CALL_3
0x4003c0d	            0xeb90	                           jmp 0x4003b9f	      1479	pci.c	FUNCTION_64	CALL_3
0x4003c0f	        0x40c0ee02	                              shr sil, 2	      1489	pci.c	FUNCTION_64	CALL_6
0x4003c13	          0x4c89ef	                            mov rdi, r13	      1489	pci.c	FUNCTION_64	CALL_6
0x4003c16	          0x83e601	                              and esi, 1	      1489	pci.c	FUNCTION_64	CALL_6
0x4003c19	      0xe800000000	                          call 0x4003c1e	      1489	pci.c	FUNCTION_64	CALL_6
0x4003c1e	         0xfb64500	                   movzx eax, byte [rbp]	      1489	pci.c	FUNCTION_64	CALL_6
0x4003c22	          0x83e003	                              and eax, 3	      1491	pci.c	FUNCTION_64	IF_6
0x4003c25	            0x3c01	                               cmp al, 1	      1491	pci.c	FUNCTION_64	IF_6
0x4003c27	            0x75bf	                           jne 0x4003be8	      1491	pci.c	FUNCTION_64	IF_6
0x4003c29	              0x5b	                                 pop rbx	      1493	pci.c	FUNCTION_64
0x4003c2a	          0x4c89ef	                            mov rdi, r13	      1492	pci.c	FUNCTION_64	CALL_7
0x4003c2d	              0x5d	                                 pop rbp	      1493	pci.c	FUNCTION_64
0x4003c2e	            0x415c	                                 pop r12	      1493	pci.c	FUNCTION_64
0x4003c30	            0x415d	                                 pop r13	      1493	pci.c	FUNCTION_64
0x4003c32	      0xe999feffff	              jmp sym.pci_disable_device	      1492	pci.c	FUNCTION_64	CALL_7
0x4003c37	          0x4c89ef	                            mov rdi, r13	      1486	pci.c	FUNCTION_64	CALL_5
0x4003c3a	      0xe800000000	                          call 0x4003c3f	      1486	pci.c	FUNCTION_64	CALL_5
0x4003c3f	         0xfb67500	                   movzx esi, byte [rbp]	      1486	pci.c	FUNCTION_64	CALL_5
0x4003c43	            0x89f0	                            mov eax, esi	      1486	pci.c	FUNCTION_64	CALL_5
0x4003c45	            0xeb94	                           jmp 0x4003bdb	      1486	pci.c	FUNCTION_64	CALL_5
pci_release_region	IF,4:FOR,0:SWITCH,0:ELSE,1:CALL,10:DO,0:functions,0:WHILE,0	57
0x40010e0	          0x4863c6	                         movsxd rax, esi	      3241	pci.c	FUNCTION_130	IF_1	CALL_1
0x40010e3	          0x4889c2	                            mov rdx, rax	      3241	pci.c	FUNCTION_130	IF_1	CALL_1
0x40010e6	        0x48c1e206	                              shl rdx, 6	      3241	pci.c	FUNCTION_130	IF_1	CALL_1
0x40010ea	          0x4801fa	                            add rdx, rdi	      3241	pci.c	FUNCTION_130	IF_1	CALL_1
0x40010ed	    0x488b8a780300	           mov rcx, qword [rdx + 0x378] 	      3241	pci.c	FUNCTION_130	IF_1	CALL_1
0x40010f4	    0x488b92800300	           mov rdx, qword [rdx + 0x380] 	      3241	pci.c	FUNCTION_130	IF_1	CALL_1
0x40010fb	          0x4885c9	                           test rcx, rcx	      3241	pci.c	FUNCTION_130	IF_1	CALL_1
0x40010fe	            0x7505	                           jne 0x4001105	      3241	pci.c	FUNCTION_130	IF_1	CALL_1
0x4001100	          0x4885d2	                           test rdx, rdx	      3241	pci.c	FUNCTION_130	IF_1	CALL_1
0x4001103	            0x744a	                            je 0x400114f	      3241	pci.c	FUNCTION_130	IF_1	CALL_1
0x4001105	          0x4989d0	                             mov r8, rdx	      3241	pci.c	FUNCTION_130	IF_1	CALL_1
0x4001108	          0x4929c8	                             sub r8, rcx	      3241	pci.c	FUNCTION_130	IF_1	CALL_1
0x400110b	        0x4983f8ff	              cmp r8, 0xffffffffffffffff	      3241	pci.c	FUNCTION_130	IF_1	CALL_1
0x400110f	            0x743e	                            je 0x400114f	      3241	pci.c	FUNCTION_130	IF_1	CALL_1
0x4001111	        0x4883c00e	                            add rax, 0xe	      3243	pci.c	FUNCTION_130	IF_2	CALL_2
0x4001115	              0x55	                                push rbp	      3238	pci.c	FUNCTION_130
0x4001116	              0x53	                                push rbx	      3238	pci.c	FUNCTION_130
0x4001117	        0x48c1e006	                              shl rax, 6	      3243	pci.c	FUNCTION_130	IF_2	CALL_2
0x400111b	            0x89f5	                            mov ebp, esi	      3243	pci.c	FUNCTION_130	IF_2	CALL_2
0x400111d	          0x4889fb	                            mov rbx, rdi	      3243	pci.c	FUNCTION_130	IF_2	CALL_2
0x4001120	      0x488b440710	      mov rax, qword [rdi + rax + 0x10] 	      3243	pci.c	FUNCTION_130	IF_2	CALL_2
0x4001125	          0xf6c401	                              test ah, 1	      3243	pci.c	FUNCTION_130	IF_2	CALL_2
0x4001128	            0x7427	                            je 0x4001151	      3243	pci.c	FUNCTION_130	IF_2	CALL_2
0x400112a	        0x4983c001	                               add r8, 1	      3244	pci.c	FUNCTION_130	IF_2	CALL_4
0x400112e	          0x4809ca	                             or rdx, rcx	      3244	pci.c	FUNCTION_130	IF_2	CALL_4
0x4001131	          0x4889ce	                            mov rsi, rcx	      3244	pci.c	FUNCTION_130	IF_2	CALL_4
0x4001134	        0x490f45d0	                          cmovne rdx, r8	      3244	pci.c	FUNCTION_130	IF_2	CALL_4
0x4001138	    0x48c7c7000000	                              mov rdi, 0	      3244	pci.c	FUNCTION_130	IF_2	CALL_4
0x400113f	      0xe800000000	                          call 0x4001144	      3244	pci.c	FUNCTION_130	IF_2	CALL_4
0x4001144	    0xf6833b060000	              test byte [rbx + 0x63b], 1	      1511	pci.c	FUNCTION_66	IF_1	CALL_1
0x400114b	            0x7525	                           jne 0x4001172	      1511	pci.c	FUNCTION_66	IF_1	CALL_1
0x400114d	              0x5b	                                 pop rbx	      3253	pci.c	FUNCTION_130
0x400114e	              0x5d	                                 pop rbp	      3253	pci.c	FUNCTION_130
0x400114f	            0xf3c3	                                     ret	      3253	pci.c	FUNCTION_130
0x4001151	          0xf6c402	                              test ah, 2	      3246	pci.c	FUNCTION_130	ELSE_1	IF_3	CALL_6
0x4001154	            0x74ee	                            je 0x4001144	      3246	pci.c	FUNCTION_130	ELSE_1	IF_3	CALL_6
0x4001156	        0x4983c001	                               add r8, 1	      3247	pci.c	FUNCTION_130	ELSE_1	IF_3	CALL_8
0x400115a	          0x4809ca	                             or rdx, rcx	      3247	pci.c	FUNCTION_130	ELSE_1	IF_3	CALL_8
0x400115d	          0x4889ce	                            mov rsi, rcx	      3247	pci.c	FUNCTION_130	ELSE_1	IF_3	CALL_8
0x4001160	        0x490f45d0	                          cmovne rdx, r8	      3247	pci.c	FUNCTION_130	ELSE_1	IF_3	CALL_8
0x4001164	    0x48c7c7000000	                              mov rdi, 0	      3247	pci.c	FUNCTION_130	ELSE_1	IF_3	CALL_8
0x400116b	      0xe800000000	                          call 0x4001170	      3247	pci.c	FUNCTION_130	ELSE_1	IF_3	CALL_8
0x4001170	            0xebd2	                           jmp 0x4001144	      3247	pci.c	FUNCTION_130	ELSE_1	IF_3	CALL_8
0x4001172	    0x488dbba00000	                   lea rdi, [rbx + 0xa0]	      1512	pci.c	FUNCTION_66	CALL_2
0x4001179	            0x31c9	                            xor ecx, ecx	      1512	pci.c	FUNCTION_66	CALL_2
0x400117b	            0x31d2	                            xor edx, edx	      1512	pci.c	FUNCTION_66	CALL_2
0x400117d	    0x48c7c6000000	                              mov rsi, 0	      1512	pci.c	FUNCTION_66	CALL_2
0x4001184	      0xe800000000	                          call 0x4001189	      1512	pci.c	FUNCTION_66	CALL_2
0x4001189	          0x4885c0	                           test rax, rax	      3251	pci.c	FUNCTION_130	IF_4
0x400118c	            0x74bf	                            je 0x400114d	      3251	pci.c	FUNCTION_130	IF_4
0x400118e	            0x89e9	                            mov ecx, ebp	      3252	pci.c	FUNCTION_130	IF_4
0x4001190	      0xbafeffffff	                     mov edx, 0xfffffffe	      3252	pci.c	FUNCTION_130	IF_4
0x4001195	            0xd3c2	                             rol edx, cl	      3252	pci.c	FUNCTION_130	IF_4
0x4001197	          0x215004	                and dword [rax + 4], edx	      3252	pci.c	FUNCTION_130	IF_4
0x400119a	              0x5b	                                 pop rbx	      3253	pci.c	FUNCTION_130
0x400119b	              0x5d	                                 pop rbp	      3253	pci.c	FUNCTION_130
0x400119c	            0xebb1	                           jmp 0x400114f	      3253	pci.c	FUNCTION_130
do_pci_disable_device	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,3:DO,0:functions,0:WHILE,0	27
0x4003a60	              0x53	                                push rbx	      1606	pci.c	FUNCTION_73
0x4003a61	      0xbe04000000	                              mov esi, 4	      1609	pci.c	FUNCTION_73	CALL_1
0x4003a66	          0x4889fb	                            mov rbx, rdi	      1606	pci.c	FUNCTION_73
0x4003a69	        0x4883ec10	                           sub rsp, 0x10	      1606	pci.c	FUNCTION_73
0x4003a6d	      0x488d542406	                      lea rdx, [rsp + 6]	      1609	pci.c	FUNCTION_73	CALL_1
0x4003a72	    0x65488b042528	                mov rax, qword gs:[0x28]	      1606	pci.c	FUNCTION_73
0x4003a7b	      0x4889442408	                mov qword [rsp + 8], rax	      1606	pci.c	FUNCTION_73
0x4003a80	            0x31c0	                            xor eax, eax	      1606	pci.c	FUNCTION_73
0x4003a82	      0xe800000000	                          call 0x4003a87	      1609	pci.c	FUNCTION_73	CALL_1
0x4003a87	       0xfb7542406	               movzx edx, word [rsp + 6]	      1610	pci.c	FUNCTION_73	IF_1
0x4003a8c	          0xf6c204	                              test dl, 4	      1610	pci.c	FUNCTION_73	IF_1
0x4003a8f	            0x7418	                            je 0x4003aa9	      1610	pci.c	FUNCTION_73	IF_1
0x4003a91	          0x83e2fb	                     and edx, 0xfffffffb	      1611	pci.c	FUNCTION_73	IF_1
0x4003a94	      0xbe04000000	                              mov esi, 4	      1612	pci.c	FUNCTION_73	IF_1	CALL_2
0x4003a99	          0x4889df	                            mov rdi, rbx	      1612	pci.c	FUNCTION_73	IF_1	CALL_2
0x4003a9c	      0x6689542406	                  mov word [rsp + 6], dx	      1611	pci.c	FUNCTION_73	IF_1
0x4003aa1	           0xfb7d2	                           movzx edx, dx	      1612	pci.c	FUNCTION_73	IF_1	CALL_2
0x4003aa4	      0xe800000000	                          call 0x4003aa9	      1612	pci.c	FUNCTION_73	IF_1	CALL_2
0x4003aa9	          0x4889df	                            mov rdi, rbx	      1615	pci.c	FUNCTION_73	CALL_3
0x4003aac	      0xe800000000	                          call 0x4003ab1	      1615	pci.c	FUNCTION_73	CALL_3
0x4003ab1	      0x488b442408	                mov rax, qword [rsp + 8]	      1616	pci.c	FUNCTION_73
0x4003ab6	    0x654833042528	                xor rax, qword gs:[0x28]	      1616	pci.c	FUNCTION_73
0x4003abf	            0x7506	                           jne 0x4003ac7	      1616	pci.c	FUNCTION_73
0x4003ac1	        0x4883c410	                           add rsp, 0x10	      1616	pci.c	FUNCTION_73
0x4003ac5	              0x5b	                                 pop rbx	      1616	pci.c	FUNCTION_73
0x4003ac6	              0xc3	                                     ret	      1616	pci.c	FUNCTION_73
0x4003ac7	      0xe800000000	                          call 0x4003acc	      1616	pci.c	FUNCTION_73
pci_request_acs	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,0:DO,0:functions,0:WHILE,0	2
0x4004ae0	    0xc70500000000	               mov dword [0x04004aea], 1	      2812	pci.c	FUNCTION_116
0x4004aea	              0xc3	                                     ret	      2812	pci.c	FUNCTION_116
pci_dev_run_wake	IF,5:FOR,0:SWITCH,0:ELSE,0:CALL,5:DO,0:functions,0:WHILE,1	39
0x4001840	    0xf68785000000	           test byte [rdi + 0x85], 0x1f 	      2156	pci.c	FUNCTION_94	IF_1
0x4001847	            0x7503	                           jne 0x400184c	      2156	pci.c	FUNCTION_94	IF_1
0x4001849	            0x31c0	                            xor eax, eax	      2157	pci.c	FUNCTION_94	IF_1
0x400184b	              0xc3	                                     ret	      2180	pci.c	FUNCTION_94
0x400184c	              0x55	                                push rbp	      2153	pci.c	FUNCTION_94
0x400184d	              0x53	                                push rbx	      2153	pci.c	FUNCTION_94
0x400184e	          0x4889fd	                            mov rbp, rdi	      2153	pci.c	FUNCTION_94
0x4001851	      0xbe01000000	                              mov esi, 1	      2160	pci.c	FUNCTION_94	IF_2	CALL_2
0x4001856	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	      2154	pci.c	FUNCTION_94
0x400185a	      0xe811ffffff	               call sym.pci_target_state	      2160	pci.c	FUNCTION_94	IF_2	CALL_2
0x400185f	    0x80bd84000000	                cmp byte [rbp + 0x84], 0	      1772	pci.c	FUNCTION_82	IF_1
0x4001866	            0x7451	                            je 0x40018b9	      1772	pci.c	FUNCTION_82	IF_1
0x4001868	     0xfb695850000	           movzx edx, byte [rbp + 0x85] 	      1775	pci.c	FUNCTION_82
0x400186f	            0x89c1	                            mov ecx, eax	      1775	pci.c	FUNCTION_82
0x4001871	          0x83e21f	                           and edx, 0x1f	      1775	pci.c	FUNCTION_82
0x4001874	            0xd3fa	                             sar edx, cl	      1775	pci.c	FUNCTION_82
0x4001876	            0x89d0	                            mov eax, edx	      1775	pci.c	FUNCTION_82
0x4001878	          0x83e001	                              and eax, 1	      2160	pci.c	FUNCTION_94	IF_2	CALL_2
0x400187b	            0x743c	                            je 0x40018b9	      2160	pci.c	FUNCTION_94	IF_2	CALL_2
0x400187d	    0xf6856c010000	              test byte [rbp + 0x16c], 1	      2163	pci.c	FUNCTION_94	IF_3	CALL_3
0x4001884	            0x7412	                            je 0x4001898	      2163	pci.c	FUNCTION_94	IF_3	CALL_3
0x4001886	            0xeb33	                           jmp 0x40018bb	      2163	pci.c	FUNCTION_94	IF_3	CALL_3
0x4001888	        0x488b4b38	            mov rcx, qword [rbx + 0x38] 	        83	pm_wakeup.h	FUNCTION_241
0x400188c	          0x4889d3	                            mov rbx, rdx	        83	pm_wakeup.h	FUNCTION_241
0x400188f	    0xf6816c010000	              test byte [rcx + 0x16c], 1	      2169	pci.c	FUNCTION_94	WHILE_1	IF_4	CALL_4
0x4001896	            0x7523	                           jne 0x40018bb	      2169	pci.c	FUNCTION_94	WHILE_1	IF_4	CALL_4
0x4001898	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      2166	pci.c	FUNCTION_94	WHILE_1
0x400189c	          0x4885d2	                           test rdx, rdx	      2166	pci.c	FUNCTION_94	WHILE_1
0x400189f	            0x75e7	                           jne 0x4001888	      2166	pci.c	FUNCTION_94	WHILE_1
0x40018a1	    0x488b83180100	           mov rax, qword [rbx + 0x118] 	      2176	pci.c	FUNCTION_94	IF_5
0x40018a8	          0x4885c0	                           test rax, rax	      2176	pci.c	FUNCTION_94	IF_5
0x40018ab	            0x740c	                            je 0x40018b9	      2176	pci.c	FUNCTION_94	IF_5
0x40018ad	     0xfb680cc0000	           movzx eax, byte [rax + 0xcc] 	        83	pm_wakeup.h	FUNCTION_241
0x40018b4	          0x83e001	                              and eax, 1	      2177	pci.c	FUNCTION_94	CALL_5
0x40018b7	            0xeb02	                           jmp 0x40018bb	      2177	pci.c	FUNCTION_94	CALL_5
0x40018b9	            0x31c0	                            xor eax, eax	      2157	pci.c	FUNCTION_94	IF_1
0x40018bb	              0x5b	                                 pop rbx	      2180	pci.c	FUNCTION_94
0x40018bc	              0x5d	                                 pop rbp	      2180	pci.c	FUNCTION_94
0x40018bd	              0xc3	                                     ret	      2180	pci.c	FUNCTION_94
pci_probe_reset_function	IF,5:FOR,0:SWITCH,0:ELSE,0:CALL,7:DO,0:functions,0:WHILE,0	54
0x40055e0	              0x53	                                push rbx	      4392	pci.c	FUNCTION_180
0x40055e1	          0x4889fb	                            mov rbx, rdi	      4392	pci.c	FUNCTION_180
0x40055e4	        0x4883ec10	                           sub rsp, 0x10	      4392	pci.c	FUNCTION_180
0x40055e8	    0x65488b042528	                mov rax, qword gs:[0x28]	      4392	pci.c	FUNCTION_180
0x40055f1	      0x4889442408	                mov qword [rsp + 8], rax	      4392	pci.c	FUNCTION_180
0x40055f6	            0x31c0	                            xor eax, eax	      4392	pci.c	FUNCTION_180
0x40055f8	      0xe800000000	                          call 0x40055fd	      4395	pci.c	FUNCTION_180	CALL_1
0x40055fd	      0xbe01000000	                              mov esi, 1	      4397	pci.c	FUNCTION_180	CALL_2
0x4005602	          0x4889df	                            mov rdi, rbx	      4397	pci.c	FUNCTION_180	CALL_2
0x4005605	      0xe800000000	                          call 0x400560a	      4397	pci.c	FUNCTION_180	CALL_2
0x400560a	          0x83f8e7	             cmp eax, 0xffffffffffffffe7	      4398	pci.c	FUNCTION_180	IF_1
0x400560d	            0x741a	                            je 0x4005629	      4398	pci.c	FUNCTION_180	IF_1
0x400560f	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4413	pci.c	FUNCTION_180
0x4005614	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      4413	pci.c	FUNCTION_180
0x400561d	     0xf8590000000	                           jne 0x40056b3	      4413	pci.c	FUNCTION_180
0x4005623	        0x4883c410	                           add rsp, 0x10	      4413	pci.c	FUNCTION_180
0x4005627	              0x5b	                                 pop rbx	      4413	pci.c	FUNCTION_180
0x4005628	              0xc3	                                     ret	      4413	pci.c	FUNCTION_180
0x4005629	    0xf6833f060000	              test byte [rbx + 0x63f], 4	      4038	pci.c	FUNCTION_164	IF_1
0x4005630	            0x7461	                            je 0x4005693	      4038	pci.c	FUNCTION_164	IF_1
0x4005632	      0xbe01000000	                              mov esi, 1	      4402	pci.c	FUNCTION_180	CALL_4
0x4005637	          0x4889df	                            mov rdi, rbx	      4402	pci.c	FUNCTION_180	CALL_4
0x400563a	      0xe8e1daffff	                     call sym.pci_af_flr	      4402	pci.c	FUNCTION_180	CALL_4
0x400563f	          0x83f8e7	             cmp eax, 0xffffffffffffffe7	      4403	pci.c	FUNCTION_180	IF_3
0x4005642	            0x75cb	                           jne 0x400560f	      4403	pci.c	FUNCTION_180	IF_3
0x4005644	     0xfb683840000	           movzx eax, byte [rbx + 0x84] 	      4131	pci.c	FUNCTION_167	IF_1
0x400564b	            0x84c0	                             test al, al	      4131	pci.c	FUNCTION_167	IF_1
0x400564d	            0x7420	                            je 0x400566f	      4131	pci.c	FUNCTION_167	IF_1
0x400564f	    0xf6833e060000	          test byte [rbx + 0x63e], 0x80 	      4131	pci.c	FUNCTION_167	IF_1
0x4005656	            0x7517	                           jne 0x400566f	      4131	pci.c	FUNCTION_167	IF_1
0x4005658	          0x8d7004	                      lea esi, [rax + 4]	      4134	pci.c	FUNCTION_167	CALL_1
0x400565b	      0x488d542404	                      lea rdx, [rsp + 4]	      4134	pci.c	FUNCTION_167	CALL_1
0x4005660	          0x4889df	                            mov rdi, rbx	      4134	pci.c	FUNCTION_167	CALL_1
0x4005663	      0xe800000000	                          call 0x4005668	      4134	pci.c	FUNCTION_167	CALL_1
0x4005668	      0xf644240408	                  test byte [rsp + 4], 8	      4135	pci.c	FUNCTION_167	IF_2
0x400566d	            0x743d	                            je 0x40056ac	      4135	pci.c	FUNCTION_167	IF_2
0x400566f	      0xbe01000000	                              mov esi, 1	      4408	pci.c	FUNCTION_180	CALL_6
0x4005674	          0x4889df	                            mov rdi, rbx	      4408	pci.c	FUNCTION_180	CALL_6
0x4005677	      0xe844bfffff	    call sym.pci_dev_reset_slot_function	      4408	pci.c	FUNCTION_180	CALL_6
0x400567c	          0x83f8e7	             cmp eax, 0xffffffffffffffe7	      4409	pci.c	FUNCTION_180	IF_5
0x400567f	            0x758e	                           jne 0x400560f	      4409	pci.c	FUNCTION_180	IF_5
0x4005681	      0xbe01000000	                              mov esi, 1	      4412	pci.c	FUNCTION_180	CALL_7
0x4005686	          0x4889df	                            mov rdi, rbx	      4412	pci.c	FUNCTION_180	CALL_7
0x4005689	      0xe842fbffff	           call sym.pci_parent_bus_reset	      4412	pci.c	FUNCTION_180	CALL_7
0x400568e	      0xe97cffffff	                           jmp 0x400560f	      4412	pci.c	FUNCTION_180	CALL_7
0x4005693	      0x488d542404	                      lea rdx, [rsp + 4]	      4041	pci.c	FUNCTION_164	CALL_1
0x4005698	      0xbe04000000	                              mov esi, 4	      4041	pci.c	FUNCTION_164	CALL_1
0x400569d	          0x4889df	                            mov rdi, rbx	      4041	pci.c	FUNCTION_164	CALL_1
0x40056a0	      0xe800000000	                          call 0x40056a5	      4041	pci.c	FUNCTION_164	CALL_1
0x40056a5	      0xf644240710	               test byte [rsp + 7], 0x10	      4400	pci.c	FUNCTION_180	IF_2	CALL_3
0x40056aa	            0x7486	                            je 0x4005632	      4400	pci.c	FUNCTION_180	IF_2	CALL_3
0x40056ac	            0x31c0	                            xor eax, eax	      4401	pci.c	FUNCTION_180	IF_2
0x40056ae	      0xe95cffffff	                           jmp 0x400560f	      4401	pci.c	FUNCTION_180	IF_2
0x40056b3	      0xe800000000	                          call 0x40056b8	      4413	pci.c	FUNCTION_180
pci_address_to_pio	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	4
0x4004df0	    0x4881ffffff00	                         cmp rdi, 0xffff	      3517	pci.c	FUNCTION_143	IF_1
0x4004df7	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      3517	pci.c	FUNCTION_143	IF_1
0x4004dfe	        0x480f46c7	                         cmovbe rax, rdi	      3517	pci.c	FUNCTION_143	IF_1
0x4004e02	              0xc3	                                     ret	      3522	pci.c	FUNCTION_143
pci_enable_wake	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,2:DO,0:functions,0:WHILE,0	10
0x4002070	            0x84d2	                             test dl, dl	      1984	pci.c	FUNCTION_88	IF_1	CALL_1
0x4002072	            0x7413	                            je 0x4002087	      1984	pci.c	FUNCTION_88	IF_1	CALL_1
0x4002074	    0xf6876c010000	              test byte [rdi + 0x16c], 1	        88	pm_wakeup.h	FUNCTION_242
0x400207b	            0x7412	                            je 0x400208f	        88	pm_wakeup.h	FUNCTION_242
0x400207d	    0x4883bfa80100	              cmp qword [rdi + 0x1a8], 0	        88	pm_wakeup.h	FUNCTION_242
0x4002085	            0x7408	                            je 0x400208f	        88	pm_wakeup.h	FUNCTION_242
0x4002087	           0xfb6d2	                           movzx edx, dl	      1987	pci.c	FUNCTION_88	CALL_2
0x400208a	      0xe911ffffff	               jmp sym.__pci_enable_wake	      1987	pci.c	FUNCTION_88	CALL_2
0x400208f	      0xb8eaffffff	                     mov eax, 0xffffffea	      1988	pci.c	FUNCTION_88
0x4002094	              0xc3	                                     ret	      1988	pci.c	FUNCTION_88
__pci_find_next_cap_ttl	IF,3:FOR,0:SWITCH,0:ELSE,0:CALL,2:DO,0:functions,0:WHILE,1	61
0x40003c0	            0x4155	                                push r13	       189	pci.c	FUNCTION_6
0x40003c2	            0x4154	                                push r12	       189	pci.c	FUNCTION_6
0x40003c4	          0x4189cc	                           mov r12d, ecx	       189	pci.c	FUNCTION_6
0x40003c7	              0x55	                                push rbp	       189	pci.c	FUNCTION_6
0x40003c8	              0x53	                                push rbx	       189	pci.c	FUNCTION_6
0x40003c9	          0x4d89c5	                             mov r13, r8	       189	pci.c	FUNCTION_6
0x40003cc	          0x4889fb	                            mov rbx, rdi	       189	pci.c	FUNCTION_6
0x40003cf	            0x89f5	                            mov ebp, esi	       189	pci.c	FUNCTION_6
0x40003d1	        0x4883ec18	                           sub rsp, 0x18	       189	pci.c	FUNCTION_6
0x40003d5	      0x488d4c2404	                      lea rcx, [rsp + 4]	       193	pci.c	FUNCTION_6	CALL_1
0x40003da	        0x88542404	                  mov byte [rsp + 4], dl	       189	pci.c	FUNCTION_6
0x40003de	           0xfb6d2	                           movzx edx, dl	       193	pci.c	FUNCTION_6	CALL_1
0x40003e1	    0x65488b042528	                mov rax, qword gs:[0x28]	       189	pci.c	FUNCTION_6
0x40003ea	      0x4889442410	             mov qword [rsp + 0x10], rax	       189	pci.c	FUNCTION_6
0x40003ef	            0x31c0	                            xor eax, eax	       189	pci.c	FUNCTION_6
0x40003f1	      0xe800000000	                          call 0x40003f6	       193	pci.c	FUNCTION_6	CALL_1
0x40003f6	        0x418b4500	                    mov eax, dword [r13]	       195	pci.c	FUNCTION_6	WHILE_1
0x40003fa	          0x8d50ff	                      lea edx, [rax - 1]	       195	pci.c	FUNCTION_6	WHILE_1
0x40003fd	            0x85c0	                           test eax, eax	       195	pci.c	FUNCTION_6	WHILE_1
0x40003ff	        0x41895500	                    mov dword [r13], edx	       195	pci.c	FUNCTION_6	WHILE_1
0x4000403	            0x7456	                            je 0x400045b	       195	pci.c	FUNCTION_6	WHILE_1
0x4000405	       0xfb6542404	               movzx edx, byte [rsp + 4]	       196	pci.c	FUNCTION_6	WHILE_1	IF_1
0x400040a	          0x80fa3f	                            cmp dl, 0x3f	       196	pci.c	FUNCTION_6	WHILE_1	IF_1
0x400040d	            0x7726	                            ja 0x4000435	       196	pci.c	FUNCTION_6	WHILE_1	IF_1
0x400040f	            0xeb4a	                           jmp 0x400045b	       196	pci.c	FUNCTION_6	WHILE_1	IF_1
0x4000411	          0x4439e2	                           cmp edx, r12d	       204	pci.c	FUNCTION_6	WHILE_1	IF_3
0x4000414	            0x7462	                            je 0x4000478	       204	pci.c	FUNCTION_6	WHILE_1	IF_3
0x4000416	        0x418b4d00	                    mov ecx, dword [r13]	       195	pci.c	FUNCTION_6	WHILE_1
0x400041a	        0x66c1e808	                               shr ax, 8	       206	pci.c	FUNCTION_6	WHILE_1
0x400041e	            0x89c2	                            mov edx, eax	       206	pci.c	FUNCTION_6	WHILE_1
0x4000420	        0x88442404	                  mov byte [rsp + 4], al	       206	pci.c	FUNCTION_6	WHILE_1
0x4000424	          0x8d71ff	                      lea esi, [rcx - 1]	       195	pci.c	FUNCTION_6	WHILE_1
0x4000427	            0x85c9	                           test ecx, ecx	       195	pci.c	FUNCTION_6	WHILE_1
0x4000429	        0x41897500	                    mov dword [r13], esi	       195	pci.c	FUNCTION_6	WHILE_1
0x400042d	            0x742c	                            je 0x400045b	       195	pci.c	FUNCTION_6	WHILE_1
0x400042f	        0x6683f83f	                            cmp ax, 0x3f	       196	pci.c	FUNCTION_6	WHILE_1	IF_1
0x4000433	            0x7626	                           jbe 0x400045b	       196	pci.c	FUNCTION_6	WHILE_1	IF_1
0x4000435	          0x83e2fc	                     and edx, 0xfffffffc	       198	pci.c	FUNCTION_6	WHILE_1
0x4000438	      0x488d4c240e	                    lea rcx, [rsp + 0xe]	       199	pci.c	FUNCTION_6	WHILE_1	CALL_2
0x400043d	            0x89ee	                            mov esi, ebp	       199	pci.c	FUNCTION_6	WHILE_1	CALL_2
0x400043f	        0x88542404	                  mov byte [rsp + 4], dl	       198	pci.c	FUNCTION_6	WHILE_1
0x4000443	          0x4889df	                            mov rdi, rbx	       199	pci.c	FUNCTION_6	WHILE_1	CALL_2
0x4000446	           0xfb6d2	                           movzx edx, dl	       199	pci.c	FUNCTION_6	WHILE_1	CALL_2
0x4000449	      0xe800000000	                          call 0x400044e	       199	pci.c	FUNCTION_6	WHILE_1	CALL_2
0x400044e	       0xfb744240e	            movzx eax, word [rsp + 0xe] 	       201	pci.c	FUNCTION_6	WHILE_1
0x4000453	           0xfb6d0	                           movzx edx, al	       201	pci.c	FUNCTION_6	WHILE_1
0x4000456	          0x80faff	                            cmp dl, 0xff	       202	pci.c	FUNCTION_6	WHILE_1	IF_2
0x4000459	            0x75b6	                           jne 0x4000411	       202	pci.c	FUNCTION_6	WHILE_1	IF_2
0x400045b	            0x31c0	                            xor eax, eax	       208	pci.c	FUNCTION_6
0x400045d	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       209	pci.c	FUNCTION_6
0x4000462	    0x6548333c2528	                xor rdi, qword gs:[0x28]	       209	pci.c	FUNCTION_6
0x400046b	            0x7512	                           jne 0x400047f	       209	pci.c	FUNCTION_6
0x400046d	        0x4883c418	                           add rsp, 0x18	       209	pci.c	FUNCTION_6
0x4000471	              0x5b	                                 pop rbx	       209	pci.c	FUNCTION_6
0x4000472	              0x5d	                                 pop rbp	       209	pci.c	FUNCTION_6
0x4000473	            0x415c	                                 pop r12	       209	pci.c	FUNCTION_6
0x4000475	            0x415d	                                 pop r13	       209	pci.c	FUNCTION_6
0x4000477	              0xc3	                                     ret	       209	pci.c	FUNCTION_6
0x4000478	       0xfb6442404	               movzx eax, byte [rsp + 4]	       205	pci.c	FUNCTION_6	WHILE_1	IF_3
0x400047d	            0xebde	                           jmp 0x400045d	       205	pci.c	FUNCTION_6	WHILE_1	IF_3
0x400047f	      0xe800000000	                          call 0x4000484	       209	pci.c	FUNCTION_6
pci_set_pcie_reset_state	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	1
0x4003c90	      0xe900000000	                           jmp 0x4003c95	      1686	pci.c	FUNCTION_77	CALL_1
pci_reset_bridge_secondary_bus	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,2:DO,0:functions,0:WHILE,0	7
0x40051b0	              0x53	                                push rbx	      4197	pci.c	FUNCTION_170
0x40051b1	          0x4889fb	                            mov rbx, rdi	      4197	pci.c	FUNCTION_170
0x40051b4	      0xe800000000	                          call 0x40051b9	      4198	pci.c	FUNCTION_170	CALL_1
0x40051b9	          0x4889df	                            mov rdi, rbx	      4200	pci.c	FUNCTION_170	CALL_2
0x40051bc	    0x48c7c6000000	                              mov rsi, 0	      4200	pci.c	FUNCTION_170	CALL_2
0x40051c3	              0x5b	                                 pop rbx	      4201	pci.c	FUNCTION_170
0x40051c4	      0xe9b7d4ffff	       jmp sym.pci_dev_wait.constprop.55	      4200	pci.c	FUNCTION_170	CALL_2
pcim_enable_device	IF,3:FOR,0:SWITCH,0:ELSE,0:CALL,3:DO,0:functions,0:WHILE,0	52
0x4005070	            0x4154	                                push r12	      1523	pci.c	FUNCTION_67
0x4005072	    0x4c8da7a00000	                   lea r12, [rdi + 0xa0]	      1499	pci.c	FUNCTION_65	CALL_1
0x4005079	              0x55	                                push rbp	      1523	pci.c	FUNCTION_67
0x400507a	              0x53	                                push rbx	      1523	pci.c	FUNCTION_67
0x400507b	            0x31c9	                            xor ecx, ecx	      1499	pci.c	FUNCTION_65	CALL_1
0x400507d	            0x31d2	                            xor edx, edx	      1499	pci.c	FUNCTION_65	CALL_1
0x400507f	          0x4889fd	                            mov rbp, rdi	      1523	pci.c	FUNCTION_67
0x4005082	    0x48c7c6000000	                              mov rsi, 0	      1499	pci.c	FUNCTION_65	CALL_1
0x4005089	          0x4c89e7	                            mov rdi, r12	      1499	pci.c	FUNCTION_65	CALL_1
0x400508c	      0xe800000000	                          call 0x4005091	      1499	pci.c	FUNCTION_65	CALL_1
0x4005091	          0x4885c0	                           test rax, rax	      1500	pci.c	FUNCTION_65	IF_1
0x4005094	          0x4889c3	                            mov rbx, rax	      1500	pci.c	FUNCTION_65	IF_1
0x4005097	            0x742c	                            je 0x40050c5	      1500	pci.c	FUNCTION_65	IF_1
0x4005099	            0x31c0	                            xor eax, eax	      1531	pci.c	FUNCTION_67	IF_2
0x400509b	          0xf60301	                      test byte [rbx], 1	      1530	pci.c	FUNCTION_67	IF_2
0x400509e	            0x7405	                            je 0x40050a5	      1530	pci.c	FUNCTION_67	IF_2
0x40050a0	              0x5b	                                 pop rbx	      1539	pci.c	FUNCTION_67
0x40050a1	              0x5d	                                 pop rbp	      1539	pci.c	FUNCTION_67
0x40050a2	            0x415c	                                 pop r12	      1539	pci.c	FUNCTION_67
0x40050a4	              0xc3	                                     ret	      1539	pci.c	FUNCTION_67
0x40050a5	      0xbe00030000	                          mov esi, 0x300	      1451	pci.c	FUNCTION_63	CALL_1
0x40050aa	          0x4889ef	                            mov rdi, rbp	      1451	pci.c	FUNCTION_63	CALL_1
0x40050ad	      0xe87efeffff	        call sym.pci_enable_device_flags	      1451	pci.c	FUNCTION_63	CALL_1
0x40050b2	            0x85c0	                           test eax, eax	      1534	pci.c	FUNCTION_67	IF_3
0x40050b4	            0x75ea	                           jne 0x40050a0	      1534	pci.c	FUNCTION_67	IF_3
0x40050b6	    0x808d3b060000	                or byte [rbp + 0x63b], 1	      1535	pci.c	FUNCTION_67	IF_3
0x40050bd	          0x800b01	                        or byte [rbx], 1	      1536	pci.c	FUNCTION_67	IF_3
0x40050c0	              0x5b	                                 pop rbx	      1539	pci.c	FUNCTION_67
0x40050c1	              0x5d	                                 pop rbp	      1539	pci.c	FUNCTION_67
0x40050c2	            0x415c	                                 pop r12	      1539	pci.c	FUNCTION_67
0x40050c4	              0xc3	                                     ret	      1539	pci.c	FUNCTION_67
0x40050c5	    0x49c7c0000000	                               mov r8, 0	      1503	pci.c	FUNCTION_65	CALL_2
0x40050cc	      0xb9ffffffff	                     mov ecx, 0xffffffff	      1503	pci.c	FUNCTION_65	CALL_2
0x40050d1	      0xbac0004001	                      mov edx, 0x14000c0	      1503	pci.c	FUNCTION_65	CALL_2
0x40050d6	      0xbe08000000	                              mov esi, 8	      1503	pci.c	FUNCTION_65	CALL_2
0x40050db	    0x48c7c7000000	                              mov rdi, 0	      1503	pci.c	FUNCTION_65	CALL_2
0x40050e2	      0xe800000000	                          call 0x40050e7	      1503	pci.c	FUNCTION_65	CALL_2
0x40050e7	          0x4885c0	                           test rax, rax	      1504	pci.c	FUNCTION_65	IF_2
0x40050ea	            0x7417	                            je 0x4005103	      1504	pci.c	FUNCTION_65	IF_2
0x40050ec	            0x31c9	                            xor ecx, ecx	      1506	pci.c	FUNCTION_65	CALL_3
0x40050ee	            0x31d2	                            xor edx, edx	      1506	pci.c	FUNCTION_65	CALL_3
0x40050f0	          0x4889c6	                            mov rsi, rax	      1506	pci.c	FUNCTION_65	CALL_3
0x40050f3	          0x4c89e7	                            mov rdi, r12	      1506	pci.c	FUNCTION_65	CALL_3
0x40050f6	      0xe800000000	                          call 0x40050fb	      1506	pci.c	FUNCTION_65	CALL_3
0x40050fb	          0x4885c0	                           test rax, rax	      1528	pci.c	FUNCTION_67	IF_1	CALL_2
0x40050fe	          0x4889c3	                            mov rbx, rax	      1506	pci.c	FUNCTION_65	CALL_3
0x4005101	            0x7596	                           jne 0x4005099	      1528	pci.c	FUNCTION_67	IF_1	CALL_2
0x4005103	              0x5b	                                 pop rbx	      1539	pci.c	FUNCTION_67
0x4005104	      0xb8f4ffffff	                     mov eax, 0xfffffff4	      1529	pci.c	FUNCTION_67	IF_1
0x4005109	              0x5d	                                 pop rbp	      1539	pci.c	FUNCTION_67
0x400510a	            0x415c	                                 pop r12	      1539	pci.c	FUNCTION_67
0x400510c	              0xc3	                                     ret	      1539	pci.c	FUNCTION_67
__pci_complete_power_transition	IF,2:FOR,0:SWITCH,0:ELSE,0:CALL,2:DO,0:functions,0:WHILE,0	36
0x4003390	              0x55	                                push rbp	       875	pci.c	FUNCTION_38
0x4003391	              0x53	                                push rbx	       875	pci.c	FUNCTION_38
0x4003392	        0x4883ec10	                           sub rsp, 0x10	       875	pci.c	FUNCTION_38
0x4003396	    0x65488b042528	                mov rax, qword gs:[0x28]	       875	pci.c	FUNCTION_38
0x400339f	      0x4889442408	                mov qword [rsp + 8], rax	       875	pci.c	FUNCTION_38
0x40033a4	            0x31c0	                            xor eax, eax	       875	pci.c	FUNCTION_38
0x40033a6	            0x85f6	                           test esi, esi	       878	pci.c	FUNCTION_38	IF_1
0x40033a8	            0x7e54	                           jle 0x40033fe	       878	pci.c	FUNCTION_38	IF_1
0x40033aa	          0x4889fd	                            mov rbp, rdi	       878	pci.c	FUNCTION_38	IF_1
0x40033ad	            0x89f3	                            mov ebx, esi	       878	pci.c	FUNCTION_38	IF_1
0x40033af	      0xe84cffffff	  call sym.pci_platform_power_transition	       880	pci.c	FUNCTION_38	CALL_1
0x40033b4	            0x85c0	                           test eax, eax	       882	pci.c	FUNCTION_38	IF_2
0x40033b6	            0x7542	                           jne 0x40033fa	       882	pci.c	FUNCTION_38	IF_2
0x40033b8	          0x83fb04	                              cmp ebx, 4	       882	pci.c	FUNCTION_38	IF_2
0x40033bb	            0x753d	                           jne 0x40033fa	       882	pci.c	FUNCTION_38	IF_2
0x40033bd	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       883	pci.c	FUNCTION_38	CALL_2
0x40033c1	            0x31db	                            xor ebx, ebx	       863	pci.c	FUNCTION_37	IF_1
0x40033c3	    0xc74424040400	                  mov dword [rsp + 4], 4	       863	pci.c	FUNCTION_37	IF_1
0x40033cb	          0x4885ff	                           test rdi, rdi	       863	pci.c	FUNCTION_37	IF_1
0x40033ce	            0x7411	                            je 0x40033e1	       863	pci.c	FUNCTION_37	IF_1
0x40033d0	      0x488d542404	                      lea rdx, [rsp + 4]	       864	pci.c	FUNCTION_37	CALL_1
0x40033d5	    0x48c7c6000000	                              mov rsi, 0	       864	pci.c	FUNCTION_37	CALL_1
0x40033dc	      0xe800000000	                          call 0x40033e1	       864	pci.c	FUNCTION_37	CALL_1
0x40033e1	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       885	pci.c	FUNCTION_38
0x40033e6	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       885	pci.c	FUNCTION_38
0x40033ef	            0x89d8	                            mov eax, ebx	       885	pci.c	FUNCTION_38
0x40033f1	            0x7512	                           jne 0x4003405	       885	pci.c	FUNCTION_38
0x40033f3	        0x4883c410	                           add rsp, 0x10	       885	pci.c	FUNCTION_38
0x40033f7	              0x5b	                                 pop rbx	       885	pci.c	FUNCTION_38
0x40033f8	              0x5d	                                 pop rbp	       885	pci.c	FUNCTION_38
0x40033f9	              0xc3	                                     ret	       885	pci.c	FUNCTION_38
0x40033fa	            0x89c3	                            mov ebx, eax	       880	pci.c	FUNCTION_38	CALL_1
0x40033fc	            0xebe3	                           jmp 0x40033e1	       880	pci.c	FUNCTION_38	CALL_1
0x40033fe	      0xbbeaffffff	                     mov ebx, 0xffffffea	       879	pci.c	FUNCTION_38	IF_1
0x4003403	            0xebdc	                           jmp 0x40033e1	       879	pci.c	FUNCTION_38	IF_1
0x4003405	      0xe800000000	                          call 0x400340a	       885	pci.c	FUNCTION_38
pci_choose_state	IF,2:FOR,0:SWITCH,1:ELSE,0:CALL,3:DO,0:functions,0:WHILE,0	36
0x4000950	    0x80bf84000000	                cmp byte [rdi + 0x84], 0	       961	pci.c	FUNCTION_40	IF_1
0x4000957	            0x744b	                            je 0x40009a4	       961	pci.c	FUNCTION_40	IF_1
0x4000959	    0x488b05000000	            mov rax, qword [0x04000960] 	       607	pci.c	FUNCTION_26
0x4000960	              0x55	                                push rbp	       958	pci.c	FUNCTION_40
0x4000961	            0x89f5	                            mov ebp, esi	       958	pci.c	FUNCTION_40
0x4000963	              0x53	                                push rbx	       958	pci.c	FUNCTION_40
0x4000964	          0x4889fb	                            mov rbx, rdi	       958	pci.c	FUNCTION_40
0x4000967	          0x4885c0	                           test rax, rax	       608	pci.c	FUNCTION_26	CALL_1
0x400096a	            0x7411	                            je 0x400097d	       608	pci.c	FUNCTION_26	CALL_1
0x400096c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       608	pci.c	FUNCTION_26	CALL_1
0x4000970	      0xe800000000	                          call 0x4000975	       608	pci.c	FUNCTION_26	CALL_1
0x4000975	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       965	pci.c	FUNCTION_40	IF_2
0x4000978	            0x7403	                            je 0x400097d	       965	pci.c	FUNCTION_40	IF_2
0x400097a	              0x5b	                                 pop rbx	       983	pci.c	FUNCTION_40
0x400097b	              0x5d	                                 pop rbp	       983	pci.c	FUNCTION_40
0x400097c	              0xc3	                                     ret	       983	pci.c	FUNCTION_40
0x400097d	          0x83fd08	                              cmp ebp, 8	       983	pci.c	FUNCTION_40
0x4000980	            0x7725	                            ja 0x40009a7	       983	pci.c	FUNCTION_40
0x4000982	      0xb801000000	                              mov eax, 1	       983	pci.c	FUNCTION_40
0x4000987	            0x89e9	                            mov ecx, ebp	       983	pci.c	FUNCTION_40
0x4000989	          0x48d3e0	                             shl rax, cl	       983	pci.c	FUNCTION_40
0x400098c	          0x4889c2	                            mov rdx, rax	       983	pci.c	FUNCTION_40
0x400098f	      0xb803000000	                              mov eax, 3	       976	pci.c	FUNCTION_40	SWITCH_1
0x4000994	    0xf7c216010000	                         test edx, 0x116	       976	pci.c	FUNCTION_40	SWITCH_1
0x400099a	            0x75de	                           jne 0x400097a	       976	pci.c	FUNCTION_40	SWITCH_1
0x400099c	            0x85ed	                           test ebp, ebp	       976	pci.c	FUNCTION_40	SWITCH_1
0x400099e	            0x7507	                           jne 0x40009a7	       976	pci.c	FUNCTION_40	SWITCH_1
0x40009a0	            0x31c0	                            xor eax, eax	       962	pci.c	FUNCTION_40	IF_1
0x40009a2	            0xebd6	                           jmp 0x400097a	       962	pci.c	FUNCTION_40	IF_1
0x40009a4	            0x31c0	                            xor eax, eax	       962	pci.c	FUNCTION_40	IF_1
0x40009a6	              0xc3	                                     ret	       983	pci.c	FUNCTION_40
0x40009a7	    0x488dbba00000	                   lea rdi, [rbx + 0xa0]	       978	pci.c	FUNCTION_40	SWITCH_1	CALL_2
0x40009ae	            0x89ea	                            mov edx, ebp	       978	pci.c	FUNCTION_40	SWITCH_1	CALL_2
0x40009b0	    0x48c7c6000000	                              mov rsi, 0	       978	pci.c	FUNCTION_40	SWITCH_1	CALL_2
0x40009b7	      0xe800000000	                          call 0x40009bc	       978	pci.c	FUNCTION_40	SWITCH_1	CALL_2
0x40009bc	             0xf0b	                                     ud2	       978	pci.c	FUNCTION_40	SWITCH_1	CALL_2
pci_find_parent_resource	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,0:DO,0:functions,1:WHILE,0	45
0x4002e70	            0x4154	                                push r12	       456	pci.c	FUNCTION_17
0x4002e72	          0x4989f4	                            mov r12, rsi	       456	pci.c	FUNCTION_17
0x4002e75	              0x55	                                push rbp	       456	pci.c	FUNCTION_17
0x4002e76	              0x53	                                push rbx	       456	pci.c	FUNCTION_17
0x4002e77	            0x31db	                            xor ebx, ebx	       461	pci.c	FUNCTION_17	FUNCTION_1
0x4002e79	        0x488b6f10	            mov rbp, qword [rdi + 0x10] 	       457	pci.c	FUNCTION_17
0x4002e7d	            0xeb03	                           jmp 0x4002e82	       461	pci.c	FUNCTION_17	FUNCTION_1
0x4002e7f	          0x83c301	                              add ebx, 1	       461	pci.c	FUNCTION_17	FUNCTION_1
0x4002e82	            0x89de	                            mov esi, ebx	       461	pci.c	FUNCTION_17	FUNCTION_1
0x4002e84	          0x4889ef	                            mov rdi, rbp	       461	pci.c	FUNCTION_17	FUNCTION_1
0x4002e87	      0xe800000000	                          call 0x4002e8c	       461	pci.c	FUNCTION_17	FUNCTION_1
0x4002e8c	          0x4885c0	                           test rax, rax	       461	pci.c	FUNCTION_17	FUNCTION_1
0x4002e8f	            0x7453	                            je 0x4002ee4	       461	pci.c	FUNCTION_17	FUNCTION_1
0x4002e91	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       461	pci.c	FUNCTION_17	FUNCTION_1
0x4002e95	      0x498b4c2418	            mov rcx, qword [r12 + 0x18] 	       461	pci.c	FUNCTION_17	FUNCTION_1
0x4002e9a	          0x4889d7	                            mov rdi, rdx	       211	ioport.h	FUNCTION_372	IF_1	CALL_2
0x4002e9d	          0x4889ce	                            mov rsi, rcx	       211	ioport.h	FUNCTION_372	IF_1	CALL_2
0x4002ea0	    0x81e7001f0000	                         and edi, 0x1f00	       211	ioport.h	FUNCTION_372	IF_1	CALL_2
0x4002ea6	    0x81e6001f0000	                         and esi, 0x1f00	       211	ioport.h	FUNCTION_372	IF_1	CALL_2
0x4002eac	          0x4839f7	                            cmp rdi, rsi	       211	ioport.h	FUNCTION_372	IF_1	CALL_2
0x4002eaf	            0x75ce	                           jne 0x4002e7f	       211	ioport.h	FUNCTION_372	IF_1	CALL_2
0x4002eb1	          0x4889d6	                            mov rsi, rdx	       213	ioport.h	FUNCTION_372	IF_2
0x4002eb4	          0x4809ce	                             or rsi, rcx	       213	ioport.h	FUNCTION_372	IF_2
0x4002eb7	    0x81e600000020	                     and esi, 0x20000000	       213	ioport.h	FUNCTION_372	IF_2
0x4002ebd	            0x75c0	                           jne 0x4002e7f	       213	ioport.h	FUNCTION_372	IF_2
0x4002ebf	        0x498b3c24	                    mov rdi, qword [r12]	       215	ioport.h	FUNCTION_372
0x4002ec3	          0x483938	                    cmp qword [rax], rdi	       215	ioport.h	FUNCTION_372
0x4002ec6	            0x77b7	                            ja 0x4002e7f	       215	ioport.h	FUNCTION_372
0x4002ec8	      0x498b7c2408	                mov rdi, qword [r12 + 8]	       215	ioport.h	FUNCTION_372
0x4002ecd	        0x48397808	                cmp qword [rax + 8], rdi	       215	ioport.h	FUNCTION_372
0x4002ed1	            0x72ac	                            jb 0x4002e7f	       215	ioport.h	FUNCTION_372
0x4002ed3	          0x80e620	                            and dh, 0x20	       470	pci.c	FUNCTION_17	FUNCTION_1	IF_2	IF_3
0x4002ed6	            0x7407	                            je 0x4002edf	       470	pci.c	FUNCTION_17	FUNCTION_1	IF_2	IF_3
0x4002ed8	          0x80e520	                            and ch, 0x20	       472	pci.c	FUNCTION_17	FUNCTION_1	IF_2	IF_3
0x4002edb	        0x480f44c6	                          cmove rax, rsi	       472	pci.c	FUNCTION_17	FUNCTION_1	IF_2	IF_3
0x4002edf	              0x5b	                                 pop rbx	       486	pci.c	FUNCTION_17
0x4002ee0	              0x5d	                                 pop rbp	       486	pci.c	FUNCTION_17
0x4002ee1	            0x415c	                                 pop r12	       486	pci.c	FUNCTION_17
0x4002ee3	              0xc3	                                     ret	       486	pci.c	FUNCTION_17
0x4002ee4	          0x83fb03	                              cmp ebx, 3	       461	pci.c	FUNCTION_17	FUNCTION_1
0x4002ee7	            0x7e96	                           jle 0x4002e7f	       461	pci.c	FUNCTION_17	FUNCTION_1
0x4002ee9	              0x5b	                                 pop rbx	       486	pci.c	FUNCTION_17
0x4002eea	              0x5d	                                 pop rbp	       486	pci.c	FUNCTION_17
0x4002eeb	            0x415c	                                 pop r12	       486	pci.c	FUNCTION_17
0x4002eed	              0xc3	                                     ret	       486	pci.c	FUNCTION_17
pcibios_add_device	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,0:DO,0:functions,0:WHILE,0	2
0x4003a30	            0x31c0	                            xor eax, eax	      1572	pci.c	FUNCTION_69
0x4003a32	              0xc3	                                     ret	      1572	pci.c	FUNCTION_69
pci_enable_device_io	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	2
0x4005040	      0xbe00010000	                          mov esi, 0x100	      1420	pci.c	FUNCTION_61	CALL_1
0x4005045	      0xe9e6feffff	         jmp sym.pci_enable_device_flags	      1420	pci.c	FUNCTION_61	CALL_1
pci_check_and_set_intx_mask	IF,3:FOR,0:SWITCH,0:ELSE,0:CALL,6:DO,0:functions,0:WHILE,0	64
0x40001f0	            0x4156	                                push r14	      3898	pci.c	FUNCTION_159
0x40001f2	            0x4155	                                push r13	      3898	pci.c	FUNCTION_159
0x40001f4	          0x4189f5	                           mov r13d, esi	      3898	pci.c	FUNCTION_159
0x40001f7	            0x4154	                                push r12	      3898	pci.c	FUNCTION_159
0x40001f9	              0x55	                                push rbp	      3898	pci.c	FUNCTION_159
0x40001fa	          0x4889fd	                            mov rbp, rdi	      3898	pci.c	FUNCTION_159
0x40001fd	              0x53	                                push rbx	      3898	pci.c	FUNCTION_159
0x40001fe	        0x4883ec10	                           sub rsp, 0x10	      3898	pci.c	FUNCTION_159
0x4000202	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	      3899	pci.c	FUNCTION_159
0x4000206	    0x48c7c7000000	                              mov rdi, 0	      3913	pci.c	FUNCTION_159	CALL_3
0x400020d	    0x65488b042528	                mov rax, qword gs:[0x28]	      3898	pci.c	FUNCTION_159
0x4000216	      0x4889442408	                mov qword [rsp + 8], rax	      3898	pci.c	FUNCTION_159
0x400021b	            0x31c0	                            xor eax, eax	      3898	pci.c	FUNCTION_159
0x400021d	      0xe800000000	                          call 0x4000222	      3913	pci.c	FUNCTION_159	CALL_3
0x4000222	          0x4989c4	                            mov r12, rax	      3913	pci.c	FUNCTION_159	CALL_3
0x4000225	    0x488b83c00000	            mov rax, qword [rbx + 0xc0] 	      3915	pci.c	FUNCTION_159	CALL_4
0x400022c	      0xb904000000	                              mov ecx, 4	      3915	pci.c	FUNCTION_159	CALL_4
0x4000231	      0xba04000000	                              mov edx, 4	      3915	pci.c	FUNCTION_159	CALL_4
0x4000236	          0x8b7538	            mov esi, dword [rbp + 0x38] 	      3915	pci.c	FUNCTION_159	CALL_4
0x4000239	      0x4c8d442404	                       lea r8, [rsp + 4]	      3915	pci.c	FUNCTION_159	CALL_4
0x400023e	          0x4889df	                            mov rdi, rbx	      3915	pci.c	FUNCTION_159	CALL_4
0x4000241	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3915	pci.c	FUNCTION_159	CALL_4
0x4000245	      0xe800000000	                          call 0x400024a	      3915	pci.c	FUNCTION_159	CALL_4
0x400024a	        0x8b542404	                mov edx, dword [rsp + 4]	      3917	pci.c	FUNCTION_159
0x400024e	            0x89d0	                            mov eax, edx	      3917	pci.c	FUNCTION_159
0x4000250	          0xc1e810	                           shr eax, 0x10	      3917	pci.c	FUNCTION_159
0x4000253	          0x83e008	                              and eax, 8	      3924	pci.c	FUNCTION_159	IF_1
0x4000256	           0xf95c1	                                setne cl	      3924	pci.c	FUNCTION_159	IF_1
0x4000259	          0x4531f6	                          xor r14d, r14d	      3925	pci.c	FUNCTION_159	IF_1
0x400025c	          0x4438e9	                            cmp cl, r13b	      3924	pci.c	FUNCTION_159	IF_1
0x400025f	            0x742f	                            je 0x4000290	      3924	pci.c	FUNCTION_159	IF_1
0x4000261	          0x4c89e6	                            mov rsi, r12	      3937	pci.c	FUNCTION_159	CALL_6
0x4000264	    0x48c7c7000000	                              mov rdi, 0	      3937	pci.c	FUNCTION_159	CALL_6
0x400026b	      0xe800000000	                          call 0x4000270	      3937	pci.c	FUNCTION_159	CALL_6
0x4000270	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      3940	pci.c	FUNCTION_159
0x4000275	    0x6548331c2528	                xor rbx, qword gs:[0x28]	      3940	pci.c	FUNCTION_159
0x400027e	          0x4489f0	                           mov eax, r14d	      3940	pci.c	FUNCTION_159
0x4000281	            0x7554	                           jne 0x40002d7	      3940	pci.c	FUNCTION_159
0x4000283	        0x4883c410	                           add rsp, 0x10	      3940	pci.c	FUNCTION_159
0x4000287	              0x5b	                                 pop rbx	      3940	pci.c	FUNCTION_159
0x4000288	              0x5d	                                 pop rbp	      3940	pci.c	FUNCTION_159
0x4000289	            0x415c	                                 pop r12	      3940	pci.c	FUNCTION_159
0x400028b	            0x415d	                                 pop r13	      3940	pci.c	FUNCTION_159
0x400028d	            0x415e	                                 pop r14	      3940	pci.c	FUNCTION_159
0x400028f	              0xc3	                                     ret	      3940	pci.c	FUNCTION_159
0x4000290	          0x4189d0	                            mov r8d, edx	      3930	pci.c	FUNCTION_159
0x4000293	    0x41be01000000	                             mov r14d, 1	      3900	pci.c	FUNCTION_159
0x4000299	    0x664181e0fffb	                         and r8w, 0xfbff	      3930	pci.c	FUNCTION_159
0x400029f	          0x4489c1	                            mov ecx, r8d	      3932	pci.c	FUNCTION_159	IF_2
0x40002a2	          0x80cd04	                                or ch, 4	      3932	pci.c	FUNCTION_159	IF_2
0x40002a5	            0x85c0	                           test eax, eax	      3932	pci.c	FUNCTION_159	IF_2
0x40002a7	        0x440f45c1	                         cmovne r8d, ecx	      3932	pci.c	FUNCTION_159	IF_2
0x40002ab	        0x664139d0	                             cmp r8w, dx	      3933	pci.c	FUNCTION_159	IF_3
0x40002af	            0x74b0	                            je 0x4000261	      3933	pci.c	FUNCTION_159	IF_3
0x40002b1	    0x488b83c00000	            mov rax, qword [rbx + 0xc0] 	      3934	pci.c	FUNCTION_159	CALL_5
0x40002b8	          0x8b7538	            mov esi, dword [rbp + 0x38] 	      3934	pci.c	FUNCTION_159	CALL_5
0x40002bb	        0x450fb7c0	                          movzx r8d, r8w	      3934	pci.c	FUNCTION_159	CALL_5
0x40002bf	      0xb902000000	                              mov ecx, 2	      3934	pci.c	FUNCTION_159	CALL_5
0x40002c4	      0xba04000000	                              mov edx, 4	      3934	pci.c	FUNCTION_159	CALL_5
0x40002c9	          0x4889df	                            mov rdi, rbx	      3934	pci.c	FUNCTION_159	CALL_5
0x40002cc	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3934	pci.c	FUNCTION_159	CALL_5
0x40002d0	      0xe800000000	                          call 0x40002d5	      3934	pci.c	FUNCTION_159	CALL_5
0x40002d5	            0xeb8a	                           jmp 0x4000261	      3934	pci.c	FUNCTION_159	CALL_5
0x40002d7	      0xe800000000	                          call 0x40002dc	      3940	pci.c	FUNCTION_159
pci_set_cacheline_size	IF,3:FOR,0:SWITCH,0:ELSE,0:CALL,4:DO,0:functions,0:WHILE,0	44
0x40014a0	              0x53	                                push rbx	      3747	pci.c	FUNCTION_153
0x40014a1	        0x4883ec10	                           sub rsp, 0x10	      3747	pci.c	FUNCTION_153
0x40014a5	    0x65488b042528	                mov rax, qword gs:[0x28]	      3747	pci.c	FUNCTION_153
0x40014ae	      0x4889442408	                mov qword [rsp + 8], rax	      3747	pci.c	FUNCTION_153
0x40014b3	            0x31c0	                            xor eax, eax	      3747	pci.c	FUNCTION_153
0x40014b5	    0x803d00000000	                cmp byte [0x040014bc], 0	      3750	pci.c	FUNCTION_153	IF_1
0x40014bc	      0xb8eaffffff	                     mov eax, 0xffffffea	      3751	pci.c	FUNCTION_153	IF_1
0x40014c1	            0x7458	                            je 0x400151b	      3750	pci.c	FUNCTION_153	IF_1
0x40014c3	      0x488d542407	                      lea rdx, [rsp + 7]	      3755	pci.c	FUNCTION_153	CALL_1
0x40014c8	      0xbe0c000000	                            mov esi, 0xc	      3755	pci.c	FUNCTION_153	CALL_1
0x40014cd	          0x4889fb	                            mov rbx, rdi	      3755	pci.c	FUNCTION_153	CALL_1
0x40014d0	      0xe800000000	                          call 0x40014d5	      3755	pci.c	FUNCTION_153	CALL_1
0x40014d5	     0xfb615000000	           movzx edx, byte [0x040014dc] 	      3756	pci.c	FUNCTION_153	IF_2
0x40014dc	       0xfb6442407	               movzx eax, byte [rsp + 7]	      3756	pci.c	FUNCTION_153	IF_2
0x40014e1	            0x38d0	                              cmp al, dl	      3756	pci.c	FUNCTION_153	IF_2
0x40014e3	            0x7208	                            jb 0x40014ed	      3756	pci.c	FUNCTION_153	IF_2
0x40014e5	            0xf6f2	                                  div dl	      3756	pci.c	FUNCTION_153	IF_2
0x40014e7	        0x66a900ff	                         test ax, 0xff00	      3756	pci.c	FUNCTION_153	IF_2
0x40014eb	            0x742c	                            je 0x4001519	      3756	pci.c	FUNCTION_153	IF_2
0x40014ed	      0xbe0c000000	                            mov esi, 0xc	      3761	pci.c	FUNCTION_153	CALL_2
0x40014f2	          0x4889df	                            mov rdi, rbx	      3761	pci.c	FUNCTION_153	CALL_2
0x40014f5	      0xe800000000	                          call 0x40014fa	      3761	pci.c	FUNCTION_153	CALL_2
0x40014fa	      0x488d542407	                      lea rdx, [rsp + 7]	      3763	pci.c	FUNCTION_153	CALL_3
0x40014ff	      0xbe0c000000	                            mov esi, 0xc	      3763	pci.c	FUNCTION_153	CALL_3
0x4001504	          0x4889df	                            mov rdi, rbx	      3763	pci.c	FUNCTION_153	CALL_3
0x4001507	      0xe800000000	                          call 0x400150c	      3763	pci.c	FUNCTION_153	CALL_3
0x400150c	     0xfb605000000	           movzx eax, byte [0x04001513] 	      3764	pci.c	FUNCTION_153	IF_3
0x4001513	        0x38442407	                  cmp byte [rsp + 7], al	      3764	pci.c	FUNCTION_153	IF_3
0x4001517	            0x7518	                           jne 0x4001531	      3764	pci.c	FUNCTION_153	IF_3
0x4001519	            0x31c0	                            xor eax, eax	      3758	pci.c	FUNCTION_153	IF_2
0x400151b	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3771	pci.c	FUNCTION_153
0x4001520	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      3771	pci.c	FUNCTION_153
0x4001529	            0x752e	                           jne 0x4001559	      3771	pci.c	FUNCTION_153
0x400152b	        0x4883c410	                           add rsp, 0x10	      3771	pci.c	FUNCTION_153
0x400152f	              0x5b	                                 pop rbx	      3771	pci.c	FUNCTION_153
0x4001530	              0xc3	                                     ret	      3771	pci.c	FUNCTION_153
0x4001531	    0x8d0c85000000	                        lea ecx, [rax*4]	      3767	pci.c	FUNCTION_153	CALL_4
0x4001538	    0x488db3a00000	                   lea rsi, [rbx + 0xa0]	      3767	pci.c	FUNCTION_153	CALL_4
0x400153f	    0x48c7c2000000	                              mov rdx, 0	      3767	pci.c	FUNCTION_153	CALL_4
0x4001546	    0x48c7c7000000	                              mov rdi, 0	      3767	pci.c	FUNCTION_153	CALL_4
0x400154d	      0xe800000000	                          call 0x4001552	      3767	pci.c	FUNCTION_153	CALL_4
0x4001552	      0xb8eaffffff	                     mov eax, 0xffffffea	      3770	pci.c	FUNCTION_153
0x4001557	            0xebc2	                           jmp 0x400151b	      3770	pci.c	FUNCTION_153
0x4001559	      0xe800000000	                          call 0x400155e	      3771	pci.c	FUNCTION_153
pcix_get_max_mmrbc	IF,2:FOR,0:SWITCH,0:ELSE,0:CALL,2:DO,0:functions,0:WHILE,0	30
0x40019f0	              0x53	                                push rbx	      4909	pci.c	FUNCTION_204
0x40019f1	      0xbe07000000	                              mov esi, 7	      4913	pci.c	FUNCTION_204	CALL_1
0x40019f6	          0x4889fb	                            mov rbx, rdi	      4909	pci.c	FUNCTION_204
0x40019f9	        0x4883ec10	                           sub rsp, 0x10	      4909	pci.c	FUNCTION_204
0x40019fd	    0x65488b042528	                mov rax, qword gs:[0x28]	      4909	pci.c	FUNCTION_204
0x4001a06	      0x4889442408	                mov qword [rsp + 8], rax	      4909	pci.c	FUNCTION_204
0x4001a0b	            0x31c0	                            xor eax, eax	      4909	pci.c	FUNCTION_204
0x4001a0d	      0xe800000000	                          call 0x4001a12	      4913	pci.c	FUNCTION_204	CALL_1
0x4001a12	            0x85c0	                           test eax, eax	      4914	pci.c	FUNCTION_204	IF_1
0x4001a14	            0x743e	                            je 0x4001a54	      4914	pci.c	FUNCTION_204	IF_1
0x4001a16	          0x8d7004	                      lea esi, [rax + 4]	      4917	pci.c	FUNCTION_204	IF_2	CALL_2
0x4001a19	      0x488d542404	                      lea rdx, [rsp + 4]	      4917	pci.c	FUNCTION_204	IF_2	CALL_2
0x4001a1e	          0x4889df	                            mov rdi, rbx	      4917	pci.c	FUNCTION_204	IF_2	CALL_2
0x4001a21	      0xe800000000	                          call 0x4001a26	      4917	pci.c	FUNCTION_204	IF_2	CALL_2
0x4001a26	            0x85c0	                           test eax, eax	      4917	pci.c	FUNCTION_204	IF_2	CALL_2
0x4001a28	            0x752a	                           jne 0x4001a54	      4917	pci.c	FUNCTION_204	IF_2	CALL_2
0x4001a2a	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      4920	pci.c	FUNCTION_204
0x4001a2e	      0xb800020000	                          mov eax, 0x200	      4920	pci.c	FUNCTION_204
0x4001a33	    0x81e100006000	                       and ecx, 0x600000	      4920	pci.c	FUNCTION_204
0x4001a39	          0xc1e915	                           shr ecx, 0x15	      4920	pci.c	FUNCTION_204
0x4001a3c	            0xd3e0	                             shl eax, cl	      4920	pci.c	FUNCTION_204
0x4001a3e	      0x488b542408	                mov rdx, qword [rsp + 8]	      4921	pci.c	FUNCTION_204
0x4001a43	    0x654833142528	                xor rdx, qword gs:[0x28]	      4921	pci.c	FUNCTION_204
0x4001a4c	            0x750d	                           jne 0x4001a5b	      4921	pci.c	FUNCTION_204
0x4001a4e	        0x4883c410	                           add rsp, 0x10	      4921	pci.c	FUNCTION_204
0x4001a52	              0x5b	                                 pop rbx	      4921	pci.c	FUNCTION_204
0x4001a53	              0xc3	                                     ret	      4921	pci.c	FUNCTION_204
0x4001a54	      0xb8eaffffff	                     mov eax, 0xffffffea	      4915	pci.c	FUNCTION_204	IF_1
0x4001a59	            0xebe3	                           jmp 0x4001a3e	      4915	pci.c	FUNCTION_204	IF_1
0x4001a5b	      0xe800000000	                 call sym.pcix_get_mmrbc	      4921	pci.c	FUNCTION_204
pci_load_and_free_saved_state	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,2:DO,0:functions,0:WHILE,0	13
0x4000db0	              0x55	                                push rbp	      1287	pci.c	FUNCTION_55
0x4000db1	              0x53	                                push rbx	      1287	pci.c	FUNCTION_55
0x4000db2	          0x4889f3	                            mov rbx, rsi	      1287	pci.c	FUNCTION_55
0x4000db5	          0x488b36	                    mov rsi, qword [rsi]	      1288	pci.c	FUNCTION_55	CALL_1
0x4000db8	      0xe800000000	                          call 0x4000dbd	      1288	pci.c	FUNCTION_55	CALL_1
0x4000dbd	          0x488b3b	                    mov rdi, qword [rbx]	      1289	pci.c	FUNCTION_55	CALL_2
0x4000dc0	            0x89c5	                            mov ebp, eax	      1288	pci.c	FUNCTION_55	CALL_1
0x4000dc2	      0xe800000000	                          call 0x4000dc7	      1289	pci.c	FUNCTION_55	CALL_2
0x4000dc7	            0x89e8	                            mov eax, ebp	      1292	pci.c	FUNCTION_55
0x4000dc9	    0x48c703000000	                      mov qword [rbx], 0	      1290	pci.c	FUNCTION_55
0x4000dd0	              0x5b	                                 pop rbx	      1292	pci.c	FUNCTION_55
0x4000dd1	              0x5d	                                 pop rbp	      1292	pci.c	FUNCTION_55
0x4000dd2	              0xc3	                                     ret	      1292	pci.c	FUNCTION_55
pci_register_io_range	IF,3:FOR,0:SWITCH,0:ELSE,0:CALL,3:DO,0:functions,0:WHILE,0	2
0x4004dd0	            0x31c0	                            xor eax, eax	      3496	pci.c	FUNCTION_141
0x4004dd2	              0xc3	                                     ret	      3496	pci.c	FUNCTION_141
__pci_request_region	IF,6:FOR,0:SWITCH,0:ELSE,1:CALL,11:DO,0:functions,0:WHILE,0	78
0x4001220	            0x4155	                                push r13	      3277	pci.c	FUNCTION_131
0x4001222	            0x4154	                                push r12	      3277	pci.c	FUNCTION_131
0x4001224	              0x55	                                push rbp	      3277	pci.c	FUNCTION_131
0x4001225	              0x53	                                push rbx	      3277	pci.c	FUNCTION_131
0x4001226	          0x4863de	                         movsxd rbx, esi	      3280	pci.c	FUNCTION_131	IF_1	CALL_1
0x4001229	          0x4889d8	                            mov rax, rbx	      3280	pci.c	FUNCTION_131	IF_1	CALL_1
0x400122c	        0x48c1e006	                              shl rax, 6	      3280	pci.c	FUNCTION_131	IF_1	CALL_1
0x4001230	          0x4801f8	                            add rax, rdi	      3280	pci.c	FUNCTION_131	IF_1	CALL_1
0x4001233	    0x4c8b88780300	            mov r9, qword [rax + 0x378] 	      3280	pci.c	FUNCTION_131	IF_1	CALL_1
0x400123a	    0x488b80800300	           mov rax, qword [rax + 0x380] 	      3280	pci.c	FUNCTION_131	IF_1	CALL_1
0x4001241	          0x4d85c9	                             test r9, r9	      3280	pci.c	FUNCTION_131	IF_1	CALL_1
0x4001244	            0x7509	                           jne 0x400124f	      3280	pci.c	FUNCTION_131	IF_1	CALL_1
0x4001246	          0x4885c0	                           test rax, rax	      3280	pci.c	FUNCTION_131	IF_1	CALL_1
0x4001249	     0xf8485000000	                            je 0x40012d4	      3280	pci.c	FUNCTION_131	IF_1	CALL_1
0x400124f	          0x4989c5	                            mov r13, rax	      3280	pci.c	FUNCTION_131	IF_1	CALL_1
0x4001252	          0x4d29cd	                             sub r13, r9	      3280	pci.c	FUNCTION_131	IF_1	CALL_1
0x4001255	        0x4983fdff	             cmp r13, 0xffffffffffffffff	      3280	pci.c	FUNCTION_131	IF_1	CALL_1
0x4001259	            0x7479	                            je 0x40012d4	      3280	pci.c	FUNCTION_131	IF_1	CALL_1
0x400125b	        0x4c8d530e	                    lea r10, [rbx + 0xe]	      3283	pci.c	FUNCTION_131	IF_2	CALL_2
0x400125f	          0x4989d3	                            mov r11, rdx	      3283	pci.c	FUNCTION_131	IF_2	CALL_2
0x4001262	          0x4189c8	                            mov r8d, ecx	      3283	pci.c	FUNCTION_131	IF_2	CALL_2
0x4001265	            0x89f5	                            mov ebp, esi	      3283	pci.c	FUNCTION_131	IF_2	CALL_2
0x4001267	          0x4989fc	                            mov r12, rdi	      3283	pci.c	FUNCTION_131	IF_2	CALL_2
0x400126a	        0x49c1e206	                              shl r10, 6	      3283	pci.c	FUNCTION_131	IF_2	CALL_2
0x400126e	      0x4a8b541710	      mov rdx, qword [rdi + r10 + 0x10] 	      3283	pci.c	FUNCTION_131	IF_2	CALL_2
0x4001273	          0xf6c601	                              test dh, 1	      3283	pci.c	FUNCTION_131	IF_2	CALL_2
0x4001276	            0x7465	                            je 0x40012dd	      3283	pci.c	FUNCTION_131	IF_2	CALL_2
0x4001278	        0x4983c501	                              add r13, 1	      3284	pci.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400127c	          0x4c09c8	                              or rax, r9	      3284	pci.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400127f	          0x4c89d9	                            mov rcx, r11	      3284	pci.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x4001282	          0x4889c2	                            mov rdx, rax	      3284	pci.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x4001285	          0x4c89ce	                             mov rsi, r9	      3284	pci.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x4001288	    0x48c7c7000000	                              mov rdi, 0	      3284	pci.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400128f	        0x490f45d5	                         cmovne rdx, r13	      3284	pci.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x4001293	          0x4531c0	                            xor r8d, r8d	      3284	pci.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x4001296	      0xe800000000	                          call 0x400129b	      3284	pci.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400129b	          0x4885c0	                           test rax, rax	      3284	pci.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400129e	            0x7467	                            je 0x4001307	      3284	pci.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x40012a0	    0x41f684243b06	              test byte [r12 + 0x63b], 1	      1511	pci.c	FUNCTION_66	IF_1	CALL_1
0x40012a9	            0x7429	                            je 0x40012d4	      1511	pci.c	FUNCTION_66	IF_1	CALL_1
0x40012ab	    0x498dbc24a000	                   lea rdi, [r12 + 0xa0]	      1512	pci.c	FUNCTION_66	CALL_2
0x40012b3	            0x31c9	                            xor ecx, ecx	      1512	pci.c	FUNCTION_66	CALL_2
0x40012b5	            0x31d2	                            xor edx, edx	      1512	pci.c	FUNCTION_66	CALL_2
0x40012b7	    0x48c7c6000000	                              mov rsi, 0	      1512	pci.c	FUNCTION_66	CALL_2
0x40012be	      0xe800000000	                          call 0x40012c3	      1512	pci.c	FUNCTION_66	CALL_2
0x40012c3	          0x4885c0	                           test rax, rax	      3295	pci.c	FUNCTION_131	IF_6
0x40012c6	            0x740c	                            je 0x40012d4	      3295	pci.c	FUNCTION_131	IF_6
0x40012c8	      0xba01000000	                              mov edx, 1	      3296	pci.c	FUNCTION_131	IF_6
0x40012cd	            0x89e9	                            mov ecx, ebp	      3296	pci.c	FUNCTION_131	IF_6
0x40012cf	            0xd3e2	                             shl edx, cl	      3296	pci.c	FUNCTION_131	IF_6
0x40012d1	           0x95004	                 or dword [rax + 4], edx	      3296	pci.c	FUNCTION_131	IF_6
0x40012d4	            0x31c0	                            xor eax, eax	      3298	pci.c	FUNCTION_131
0x40012d6	              0x5b	                                 pop rbx	      3304	pci.c	FUNCTION_131
0x40012d7	              0x5d	                                 pop rbp	      3304	pci.c	FUNCTION_131
0x40012d8	            0x415c	                                 pop r12	      3304	pci.c	FUNCTION_131
0x40012da	            0x415d	                                 pop r13	      3304	pci.c	FUNCTION_131
0x40012dc	              0xc3	                                     ret	      3304	pci.c	FUNCTION_131
0x40012dd	          0x80e602	                               and dh, 2	      3287	pci.c	FUNCTION_131	ELSE_1	IF_4	CALL_6
0x40012e0	            0x74be	                            je 0x40012a0	      3287	pci.c	FUNCTION_131	ELSE_1	IF_4	CALL_6
0x40012e2	        0x4983c501	                              add r13, 1	      3288	pci.c	FUNCTION_131	ELSE_1	IF_4	IF_5	CALL_8
0x40012e6	          0x4c09c8	                              or rax, r9	      3288	pci.c	FUNCTION_131	ELSE_1	IF_4	IF_5	CALL_8
0x40012e9	          0x4c89d9	                            mov rcx, r11	      3288	pci.c	FUNCTION_131	ELSE_1	IF_4	IF_5	CALL_8
0x40012ec	          0x4889c2	                            mov rdx, rax	      3288	pci.c	FUNCTION_131	ELSE_1	IF_4	IF_5	CALL_8
0x40012ef	          0x4c89ce	                             mov rsi, r9	      3288	pci.c	FUNCTION_131	ELSE_1	IF_4	IF_5	CALL_8
0x40012f2	    0x48c7c7000000	                              mov rdi, 0	      3288	pci.c	FUNCTION_131	ELSE_1	IF_4	IF_5	CALL_8
0x40012f9	        0x490f45d5	                         cmovne rdx, r13	      3288	pci.c	FUNCTION_131	ELSE_1	IF_4	IF_5	CALL_8
0x40012fd	      0xe800000000	                          call 0x4001302	      3288	pci.c	FUNCTION_131	ELSE_1	IF_4	IF_5	CALL_8
0x4001302	          0x4885c0	                           test rax, rax	      3288	pci.c	FUNCTION_131	ELSE_1	IF_4	IF_5	CALL_8
0x4001305	            0x7599	                           jne 0x40012a0	      3288	pci.c	FUNCTION_131	ELSE_1	IF_4	IF_5	CALL_8
0x4001307	          0x4889d8	                            mov rax, rbx	      3301	pci.c	FUNCTION_131	CALL_11
0x400130a	    0x498dbc24a000	                   lea rdi, [r12 + 0xa0]	      3301	pci.c	FUNCTION_131	CALL_11
0x4001312	            0x89ea	                            mov edx, ebp	      3301	pci.c	FUNCTION_131	CALL_11
0x4001314	        0x48c1e006	                              shl rax, 6	      3301	pci.c	FUNCTION_131	CALL_11
0x4001318	    0x48c7c6000000	                              mov rsi, 0	      3301	pci.c	FUNCTION_131	CALL_11
0x400131f	    0x498d8c047803	           lea rcx, [r12 + rax + 0x378] 	      3301	pci.c	FUNCTION_131	CALL_11
0x4001327	      0xe800000000	                          call 0x400132c	      3301	pci.c	FUNCTION_131	CALL_11
0x400132c	      0xb8f0ffffff	                     mov eax, 0xfffffff0	      3303	pci.c	FUNCTION_131
0x4001331	            0xeba3	                           jmp 0x40012d6	      3303	pci.c	FUNCTION_131
pci_reset_function_locked	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,3:DO,0:functions,0:WHILE,0	17
0x4005440	    0xf6873b060000	          test byte [rdi + 0x63b], 0x20 	      4471	pci.c	FUNCTION_182	IF_1
0x4005447	            0x7421	                            je 0x400546a	      4471	pci.c	FUNCTION_182	IF_1
0x4005449	              0x55	                                push rbp	      4468	pci.c	FUNCTION_182
0x400544a	              0x53	                                push rbx	      4468	pci.c	FUNCTION_182
0x400544b	          0x4889fb	                            mov rbx, rdi	      4468	pci.c	FUNCTION_182
0x400544e	      0xe85de1ffff	       call sym.pci_dev_save_and_disable	      4474	pci.c	FUNCTION_182	CALL_1
0x4005453	          0x4889df	                            mov rdi, rbx	      4476	pci.c	FUNCTION_182	CALL_2
0x4005456	      0xe800000000	                          call 0x400545b	      4476	pci.c	FUNCTION_182	CALL_2
0x400545b	          0x4889df	                            mov rdi, rbx	      4478	pci.c	FUNCTION_182	CALL_3
0x400545e	            0x89c5	                            mov ebp, eax	      4476	pci.c	FUNCTION_182	CALL_2
0x4005460	      0xe88bd8ffff	                call sym.pci_dev_restore	      4478	pci.c	FUNCTION_182	CALL_3
0x4005465	            0x89e8	                            mov eax, ebp	      4480	pci.c	FUNCTION_182
0x4005467	              0x5b	                                 pop rbx	      4481	pci.c	FUNCTION_182
0x4005468	              0x5d	                                 pop rbp	      4481	pci.c	FUNCTION_182
0x4005469	              0xc3	                                     ret	      4481	pci.c	FUNCTION_182
0x400546a	      0xb8e7ffffff	                     mov eax, 0xffffffe7	      4481	pci.c	FUNCTION_182
0x400546f	              0xc3	                                     ret	      4481	pci.c	FUNCTION_182
pci_dev_restore	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,2:DO,0:functions,0:WHILE,0	27
0x4002cf0	              0x55	                                push rbp	      4311	pci.c	FUNCTION_178
0x4002cf1	              0x53	                                push rbx	      4311	pci.c	FUNCTION_178
0x4002cf2	          0x4889fb	                            mov rbx, rdi	      4311	pci.c	FUNCTION_178
0x4002cf5	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      4313	pci.c	FUNCTION_178
0x4002cf9	          0x4885c0	                           test rax, rax	      4313	pci.c	FUNCTION_178
0x4002cfc	            0x7425	                            je 0x4002d23	      4313	pci.c	FUNCTION_178
0x4002cfe	    0xf6873b060000	              test byte [rdi + 0x63b], 4	      1172	pci.c	FUNCTION_52	IF_1
0x4002d05	        0x488b6860	            mov rbp, qword [rax + 0x60] 	      4313	pci.c	FUNCTION_178
0x4002d09	            0x7526	                           jne 0x4002d31	      1172	pci.c	FUNCTION_52	IF_1
0x4002d0b	          0x4885ed	                           test rbp, rbp	      4322	pci.c	FUNCTION_178	IF_1
0x4002d0e	            0x741e	                            je 0x4002d2e	      4322	pci.c	FUNCTION_178	IF_1
0x4002d10	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      4322	pci.c	FUNCTION_178	IF_1
0x4002d14	          0x4885c0	                           test rax, rax	      4322	pci.c	FUNCTION_178	IF_1
0x4002d17	            0x7415	                            je 0x4002d2e	      4322	pci.c	FUNCTION_178	IF_1
0x4002d19	          0x4889df	                            mov rdi, rbx	      4323	pci.c	FUNCTION_178	CALL_2
0x4002d1c	              0x5b	                                 pop rbx	      4324	pci.c	FUNCTION_178
0x4002d1d	              0x5d	                                 pop rbp	      4324	pci.c	FUNCTION_178
0x4002d1e	      0xe900000000	                           jmp 0x4002d23	      4323	pci.c	FUNCTION_178	CALL_2
0x4002d23	            0x31ed	                            xor ebp, ebp	      4313	pci.c	FUNCTION_178
0x4002d25	    0xf6873b060000	              test byte [rdi + 0x63b], 4	      1172	pci.c	FUNCTION_52	IF_1
0x4002d2c	            0x7503	                           jne 0x4002d31	      1172	pci.c	FUNCTION_52	IF_1
0x4002d2e	              0x5b	                                 pop rbx	      4324	pci.c	FUNCTION_178
0x4002d2f	              0x5d	                                 pop rbp	      4324	pci.c	FUNCTION_178
0x4002d30	              0xc3	                                     ret	      4324	pci.c	FUNCTION_178
0x4002d31	          0x4889df	                            mov rdi, rbx	      4324	pci.c	FUNCTION_178
0x4002d34	      0xe867fdffff	      call sym.pci_restore_state.part.44	      4324	pci.c	FUNCTION_178
0x4002d39	            0xebd0	                           jmp 0x4002d0b	      4324	pci.c	FUNCTION_178
pci_wait_for_pending	IF,2:FOR,1:SWITCH,0:ELSE,0:CALL,2:DO,0:functions,0:WHILE,0	51
0x4002fe0	            0x4156	                                push r14	       546	pci.c	FUNCTION_20
0x4002fe2	            0x4155	                                push r13	       546	pci.c	FUNCTION_20
0x4002fe4	    0x41be64000000	                          mov r14d, 0x64	       553	pci.c	FUNCTION_20	FOR_1	CALL_1
0x4002fea	            0x4154	                                push r12	       546	pci.c	FUNCTION_20
0x4002fec	              0x55	                                push rbp	       546	pci.c	FUNCTION_20
0x4002fed	          0x4989fd	                            mov r13, rdi	       546	pci.c	FUNCTION_20
0x4002ff0	              0x53	                                push rbx	       546	pci.c	FUNCTION_20
0x4002ff1	      0xbb01000000	                              mov ebx, 1	       546	pci.c	FUNCTION_20
0x4002ff6	          0x4189f4	                           mov r12d, esi	       546	pci.c	FUNCTION_20
0x4002ff9	            0x89d5	                            mov ebp, edx	       546	pci.c	FUNCTION_20
0x4002ffb	        0x4883ec10	                           sub rsp, 0x10	       546	pci.c	FUNCTION_20
0x4002fff	    0x65488b042528	                mov rax, qword gs:[0x28]	       546	pci.c	FUNCTION_20
0x4003008	      0x4889442408	                mov qword [rsp + 8], rax	       546	pci.c	FUNCTION_20
0x400300d	            0x31c0	                            xor eax, eax	       546	pci.c	FUNCTION_20
0x400300f	          0x83fb01	                              cmp ebx, 1	       552	pci.c	FUNCTION_20	FOR_1	IF_1
0x4003012	            0x7431	                            je 0x4003045	       552	pci.c	FUNCTION_20	FOR_1	IF_1
0x4003014	          0x8d4bfe	                      lea ecx, [rbx - 2]	       553	pci.c	FUNCTION_20	FOR_1	CALL_1
0x4003017	          0x4489f7	                           mov edi, r14d	       553	pci.c	FUNCTION_20	FOR_1	CALL_1
0x400301a	            0xd3e7	                             shl edi, cl	       553	pci.c	FUNCTION_20	FOR_1	CALL_1
0x400301c	      0xe800000000	                          call 0x4003021	       553	pci.c	FUNCTION_20	FOR_1	CALL_1
0x4003021	      0x488d542406	                      lea rdx, [rsp + 6]	       555	pci.c	FUNCTION_20	FOR_1	CALL_2
0x4003026	          0x4489e6	                           mov esi, r12d	       555	pci.c	FUNCTION_20	FOR_1	CALL_2
0x4003029	          0x4c89ef	                            mov rdi, r13	       555	pci.c	FUNCTION_20	FOR_1	CALL_2
0x400302c	      0xe800000000	                          call 0x4003031	       555	pci.c	FUNCTION_20	FOR_1	CALL_2
0x4003031	      0x66856c2406	                 test word [rsp + 6], bp	       556	pci.c	FUNCTION_20	FOR_1	IF_2
0x4003036	            0x7424	                            je 0x400305c	       556	pci.c	FUNCTION_20	FOR_1	IF_2
0x4003038	          0x83fb04	                              cmp ebx, 4	       550	pci.c	FUNCTION_20	FOR_1
0x400303b	            0x7426	                            je 0x4003063	       550	pci.c	FUNCTION_20	FOR_1
0x400303d	          0x83c301	                              add ebx, 1	       550	pci.c	FUNCTION_20	FOR_1
0x4003040	          0x83fb01	                              cmp ebx, 1	       552	pci.c	FUNCTION_20	FOR_1	IF_1
0x4003043	            0x75cf	                           jne 0x4003014	       552	pci.c	FUNCTION_20	FOR_1	IF_1
0x4003045	      0x488d542406	                      lea rdx, [rsp + 6]	       555	pci.c	FUNCTION_20	FOR_1	CALL_2
0x400304a	          0x4489e6	                           mov esi, r12d	       555	pci.c	FUNCTION_20	FOR_1	CALL_2
0x400304d	          0x4c89ef	                            mov rdi, r13	       555	pci.c	FUNCTION_20	FOR_1	CALL_2
0x4003050	      0xe800000000	                          call 0x4003055	       555	pci.c	FUNCTION_20	FOR_1	CALL_2
0x4003055	      0x66856c2406	                 test word [rsp + 6], bp	       556	pci.c	FUNCTION_20	FOR_1	IF_2
0x400305a	            0x75e1	                           jne 0x400303d	       556	pci.c	FUNCTION_20	FOR_1	IF_2
0x400305c	      0xb801000000	                              mov eax, 1	       557	pci.c	FUNCTION_20	FOR_1	IF_2
0x4003061	            0xeb02	                           jmp 0x4003065	       557	pci.c	FUNCTION_20	FOR_1	IF_2
0x4003063	            0x31c0	                            xor eax, eax	       560	pci.c	FUNCTION_20
0x4003065	      0x488b742408	                mov rsi, qword [rsp + 8]	       561	pci.c	FUNCTION_20
0x400306a	    0x654833342528	                xor rsi, qword gs:[0x28]	       561	pci.c	FUNCTION_20
0x4003073	            0x750d	                           jne 0x4003082	       561	pci.c	FUNCTION_20
0x4003075	        0x4883c410	                           add rsp, 0x10	       561	pci.c	FUNCTION_20
0x4003079	              0x5b	                                 pop rbx	       561	pci.c	FUNCTION_20
0x400307a	              0x5d	                                 pop rbp	       561	pci.c	FUNCTION_20
0x400307b	            0x415c	                                 pop r12	       561	pci.c	FUNCTION_20
0x400307d	            0x415d	                                 pop r13	       561	pci.c	FUNCTION_20
0x400307f	            0x415e	                                 pop r14	       561	pci.c	FUNCTION_20
0x4003081	              0xc3	                                     ret	       561	pci.c	FUNCTION_20
0x4003082	      0xe800000000	                          call 0x4003087	       561	pci.c	FUNCTION_20
pci_dev_check_d3cold	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,3:DO,0:functions,0:WHILE,0	24
0x4000110	     0xfb687860000	           movzx eax, byte [rdi + 0x86] 	      2329	pci.c	FUNCTION_100	IF_1
0x4000117	            0x89c2	                            mov edx, eax	      2328	pci.c	FUNCTION_100	IF_1
0x4000119	          0x83e20a	                            and edx, 0xa	      2328	pci.c	FUNCTION_100	IF_1
0x400011c	          0x80fa08	                               cmp dl, 8	      2328	pci.c	FUNCTION_100	IF_1
0x400011f	            0x7409	                            je 0x400012a	      2328	pci.c	FUNCTION_100	IF_1
0x4000121	          0xc60600	                       mov byte [rsi], 0	      2338	pci.c	FUNCTION_100	IF_1
0x4000124	      0xb801000000	                              mov eax, 1	      2338	pci.c	FUNCTION_100	IF_1
0x4000129	              0xc3	                                     ret	      2340	pci.c	FUNCTION_100
0x400012a	    0xf6876c010000	              test byte [rdi + 0x16c], 1	        88	pm_wakeup.h	FUNCTION_242
0x4000131	            0x741c	                            je 0x400014f	        88	pm_wakeup.h	FUNCTION_242
0x4000133	    0x4883bfa80100	              cmp qword [rdi + 0x1a8], 0	        88	pm_wakeup.h	FUNCTION_242
0x400013b	            0x7412	                            je 0x400014f	        88	pm_wakeup.h	FUNCTION_242
0x400013d	    0x80bf84000000	                cmp byte [rdi + 0x84], 0	      1772	pci.c	FUNCTION_82	IF_1
0x4000144	            0x74db	                            je 0x4000121	      1772	pci.c	FUNCTION_82	IF_1
0x4000146	    0xf68785000000	           test byte [rdi + 0x85], 0x10 	      2332	pci.c	FUNCTION_100	IF_1	CALL_1
0x400014d	            0x74d2	                            je 0x4000121	      2332	pci.c	FUNCTION_100	IF_1	CALL_1
0x400014f	      0x48837f1800	               cmp qword [rdi + 0x18], 0	       105	pci.h	FUNCTION_341	CALL_1
0x4000154	            0x7404	                            je 0x400015a	       105	pci.h	FUNCTION_341	CALL_1
0x4000156	            0xa804	                              test al, 4	       105	pci.h	FUNCTION_341	CALL_1
0x4000158	            0x74c7	                            je 0x4000121	       105	pci.h	FUNCTION_341	CALL_1
0x400015a	           0xfb606	                   movzx eax, byte [rsi]	       105	pci.h	FUNCTION_341	CALL_1
0x400015d	          0x83f001	                              xor eax, 1	       105	pci.h	FUNCTION_341	CALL_1
0x4000160	           0xfb6c0	                           movzx eax, al	       105	pci.h	FUNCTION_341	CALL_1
0x4000163	              0xc3	                                     ret	       105	pci.h	FUNCTION_341	CALL_1
pci_acs_flags_enabled	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,3:DO,0:functions,0:WHILE,0	43
0x40027f0	            0x4154	                                push r12	      2863	pci.c	FUNCTION_119
0x40027f2	              0x55	                                push rbp	      2863	pci.c	FUNCTION_119
0x40027f3	              0x53	                                push rbx	      2863	pci.c	FUNCTION_119
0x40027f4	        0x4883ec10	                           sub rsp, 0x10	      2863	pci.c	FUNCTION_119
0x40027f8	    0x65488b042528	                mov rax, qword gs:[0x28]	      2863	pci.c	FUNCTION_119
0x4002801	      0x4889442408	                mov qword [rsp + 8], rax	      2863	pci.c	FUNCTION_119
0x4002806	            0x31c0	                            xor eax, eax	      2863	pci.c	FUNCTION_119
0x4002808	    0x81bf70030000	         cmp dword [rdi + 0x370], 0x100 	       325	pci.c	FUNCTION_12	IF_1
0x4002812	            0x7f1b	                            jg 0x400282f	       325	pci.c	FUNCTION_12	IF_1
0x4002814	            0x31c0	                            xor eax, eax	      2869	pci.c	FUNCTION_119	IF_1
0x4002816	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2881	pci.c	FUNCTION_119
0x400281b	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      2881	pci.c	FUNCTION_119
0x4002824	            0x755c	                           jne 0x4002882	      2881	pci.c	FUNCTION_119
0x4002826	        0x4883c410	                           add rsp, 0x10	      2881	pci.c	FUNCTION_119
0x400282a	              0x5b	                                 pop rbx	      2881	pci.c	FUNCTION_119
0x400282b	              0x5d	                                 pop rbp	      2881	pci.c	FUNCTION_119
0x400282c	            0x415c	                                 pop r12	      2881	pci.c	FUNCTION_119
0x400282e	              0xc3	                                     ret	      2881	pci.c	FUNCTION_119
0x400282f	            0x89f5	                            mov ebp, esi	      2881	pci.c	FUNCTION_119
0x4002831	      0xba0d000000	                            mov edx, 0xd	      2881	pci.c	FUNCTION_119
0x4002836	            0x31f6	                            xor esi, esi	      2881	pci.c	FUNCTION_119
0x4002838	          0x4889fb	                            mov rbx, rdi	      2881	pci.c	FUNCTION_119
0x400283b	      0xe850f4ffff	call sym.pci_find_next_ext_capability.part.21	      2881	pci.c	FUNCTION_119
0x4002840	            0x85c0	                           test eax, eax	      2868	pci.c	FUNCTION_119	IF_1
0x4002842	          0x4189c4	                           mov r12d, eax	      2868	pci.c	FUNCTION_119	IF_1
0x4002845	            0x74cd	                            je 0x4002814	      2868	pci.c	FUNCTION_119	IF_1
0x4002847	          0x8d7004	                      lea esi, [rax + 4]	      2876	pci.c	FUNCTION_119	CALL_2
0x400284a	      0x488d542404	                      lea rdx, [rsp + 4]	      2876	pci.c	FUNCTION_119	CALL_2
0x400284f	          0x4889df	                            mov rdi, rbx	      2876	pci.c	FUNCTION_119	CALL_2
0x4002852	      0xe800000000	                          call 0x4002857	      2876	pci.c	FUNCTION_119	CALL_2
0x4002857	       0xfb7442404	               movzx eax, word [rsp + 4]	      2877	pci.c	FUNCTION_119
0x400285c	      0x418d742406	                      lea esi, [r12 + 6]	      2879	pci.c	FUNCTION_119	CALL_3
0x4002861	      0x488d542406	                      lea rdx, [rsp + 6]	      2879	pci.c	FUNCTION_119	CALL_3
0x4002866	          0x4889df	                            mov rdi, rbx	      2879	pci.c	FUNCTION_119	CALL_3
0x4002869	          0x83c820	                            or eax, 0x20	      2877	pci.c	FUNCTION_119
0x400286c	            0x21c5	                            and ebp, eax	      2877	pci.c	FUNCTION_119
0x400286e	      0xe800000000	                          call 0x4002873	      2879	pci.c	FUNCTION_119	CALL_3
0x4002873	            0x89e8	                            mov eax, ebp	      2880	pci.c	FUNCTION_119
0x4002875	      0x6623442406	                  and ax, word [rsp + 6]	      2880	pci.c	FUNCTION_119
0x400287a	          0x6639e8	                              cmp ax, bp	      2880	pci.c	FUNCTION_119
0x400287d	           0xf94c0	                                 sete al	      2880	pci.c	FUNCTION_119
0x4002880	            0xeb94	                           jmp 0x4002816	      2880	pci.c	FUNCTION_119
0x4002882	      0xe800000000	                          call 0x4002887	      2881	pci.c	FUNCTION_119
__pci_set_master	IF,2:FOR,0:SWITCH,0:ELSE,1:CALL,3:DO,0:functions,0:WHILE,0	38
0x40005d0	              0x55	                                push rbp	      3657	pci.c	FUNCTION_148
0x40005d1	              0x53	                                push rbx	      3657	pci.c	FUNCTION_148
0x40005d2	            0x89f3	                            mov ebx, esi	      3657	pci.c	FUNCTION_148
0x40005d4	      0xbe04000000	                              mov esi, 4	      3660	pci.c	FUNCTION_148	CALL_1
0x40005d9	          0x4889fd	                            mov rbp, rdi	      3657	pci.c	FUNCTION_148
0x40005dc	        0x4883ec10	                           sub rsp, 0x10	      3657	pci.c	FUNCTION_148
0x40005e0	      0x488d542406	                      lea rdx, [rsp + 6]	      3660	pci.c	FUNCTION_148	CALL_1
0x40005e5	    0x65488b042528	                mov rax, qword gs:[0x28]	      3657	pci.c	FUNCTION_148
0x40005ee	      0x4889442408	                mov qword [rsp + 8], rax	      3657	pci.c	FUNCTION_148
0x40005f3	            0x31c0	                            xor eax, eax	      3657	pci.c	FUNCTION_148
0x40005f5	      0xe800000000	                          call 0x40005fa	      3660	pci.c	FUNCTION_148	CALL_1
0x40005fa	       0xfb7442406	               movzx eax, word [rsp + 6]	      3662	pci.c	FUNCTION_148	IF_1
0x40005ff	            0x84db	                             test bl, bl	      3661	pci.c	FUNCTION_148	IF_1
0x4000601	            0x89c2	                            mov edx, eax	      3662	pci.c	FUNCTION_148	IF_1
0x4000603	            0x7447	                            je 0x400064c	      3661	pci.c	FUNCTION_148	IF_1
0x4000605	          0x83ca04	                               or edx, 4	      3662	pci.c	FUNCTION_148	IF_1
0x4000608	          0x6639c2	                              cmp dx, ax	      3665	pci.c	FUNCTION_148	ELSE_1	IF_2
0x400060b	            0x7410	                            je 0x400061d	      3665	pci.c	FUNCTION_148	ELSE_1	IF_2
0x400060d	           0xfb7d2	                           movzx edx, dx	      3668	pci.c	FUNCTION_148	ELSE_1	IF_2	CALL_3
0x4000610	      0xbe04000000	                              mov esi, 4	      3668	pci.c	FUNCTION_148	ELSE_1	IF_2	CALL_3
0x4000615	          0x4889ef	                            mov rdi, rbp	      3668	pci.c	FUNCTION_148	ELSE_1	IF_2	CALL_3
0x4000618	      0xe800000000	                          call 0x400061d	      3668	pci.c	FUNCTION_148	ELSE_1	IF_2	CALL_3
0x400061d	     0xfb685390600	          movzx eax, byte [rbp + 0x639] 	      3670	pci.c	FUNCTION_148
0x4000624	          0x83e301	                              and ebx, 1	      3670	pci.c	FUNCTION_148
0x4000627	          0xc1e303	                              shl ebx, 3	      3670	pci.c	FUNCTION_148
0x400062a	          0x83e0f7	                     and eax, 0xfffffff7	      3670	pci.c	FUNCTION_148
0x400062d	             0x9c3	                             or ebx, eax	      3670	pci.c	FUNCTION_148
0x400062f	      0x488b442408	                mov rax, qword [rsp + 8]	      3671	pci.c	FUNCTION_148
0x4000634	    0x654833042528	                xor rax, qword gs:[0x28]	      3671	pci.c	FUNCTION_148
0x400063d	    0x889d39060000	              mov byte [rbp + 0x639], bl	      3670	pci.c	FUNCTION_148
0x4000643	            0x750c	                           jne 0x4000651	      3671	pci.c	FUNCTION_148
0x4000645	        0x4883c410	                           add rsp, 0x10	      3671	pci.c	FUNCTION_148
0x4000649	              0x5b	                                 pop rbx	      3671	pci.c	FUNCTION_148
0x400064a	              0x5d	                                 pop rbp	      3671	pci.c	FUNCTION_148
0x400064b	              0xc3	                                     ret	      3671	pci.c	FUNCTION_148
0x400064c	          0x83e2fb	                     and edx, 0xfffffffb	      3664	pci.c	FUNCTION_148	ELSE_1
0x400064f	            0xebb7	                           jmp 0x4000608	      3664	pci.c	FUNCTION_148	ELSE_1
0x4000651	      0xe800000000	                          call 0x4000656	      3671	pci.c	FUNCTION_148
pci_allocate_cap_save_buffers	IF,2:FOR,0:SWITCH,0:ELSE,0:CALL,5:DO,0:functions,0:WHILE,0	25
0x4004970	              0x53	                                push rbx	      2747	pci.c	FUNCTION_113
0x4004971	            0x31d2	                            xor edx, edx	      2734	pci.c	FUNCTION_111	CALL_1
0x4004973	      0xb90e000000	                            mov ecx, 0xe	      2734	pci.c	FUNCTION_111	CALL_1
0x4004978	      0xbe10000000	                           mov esi, 0x10	      2734	pci.c	FUNCTION_111	CALL_1
0x400497d	          0x4889fb	                            mov rbx, rdi	      2747	pci.c	FUNCTION_113
0x4004980	      0xe8dbdfffff	       call sym._pci_add_cap_save_buffer	      2734	pci.c	FUNCTION_111	CALL_1
0x4004985	            0x85c0	                           test eax, eax	      2752	pci.c	FUNCTION_113	IF_1
0x4004987	            0x7534	                           jne 0x40049bd	      2752	pci.c	FUNCTION_113	IF_1
0x4004989	            0x31d2	                            xor edx, edx	      2734	pci.c	FUNCTION_111	CALL_1
0x400498b	      0xb902000000	                              mov ecx, 2	      2734	pci.c	FUNCTION_111	CALL_1
0x4004990	      0xbe07000000	                              mov esi, 7	      2734	pci.c	FUNCTION_111	CALL_1
0x4004995	          0x4889df	                            mov rdi, rbx	      2734	pci.c	FUNCTION_111	CALL_1
0x4004998	      0xe8c3dfffff	       call sym._pci_add_cap_save_buffer	      2734	pci.c	FUNCTION_111	CALL_1
0x400499d	            0x85c0	                           test eax, eax	      2756	pci.c	FUNCTION_113	IF_2
0x400499f	            0x7413	                            je 0x40049b4	      2756	pci.c	FUNCTION_113	IF_2
0x40049a1	    0x488dbba00000	                   lea rdi, [rbx + 0xa0]	      2757	pci.c	FUNCTION_113	CALL_4
0x40049a8	    0x48c7c6000000	                              mov rsi, 0	      2757	pci.c	FUNCTION_113	CALL_4
0x40049af	      0xe800000000	                          call 0x40049b4	      2757	pci.c	FUNCTION_113	CALL_4
0x40049b4	          0x4889df	                            mov rdi, rbx	      2759	pci.c	FUNCTION_113	CALL_5
0x40049b7	              0x5b	                                 pop rbx	      2760	pci.c	FUNCTION_113
0x40049b8	      0xe900000000	                           jmp 0x40049bd	      2759	pci.c	FUNCTION_113	CALL_5
0x40049bd	    0x488dbba00000	                   lea rdi, [rbx + 0xa0]	      2753	pci.c	FUNCTION_113	CALL_2
0x40049c4	    0x48c7c6000000	                              mov rsi, 0	      2753	pci.c	FUNCTION_113	CALL_2
0x40049cb	      0xe800000000	                          call 0x40049d0	      2753	pci.c	FUNCTION_113	CALL_2
0x40049d0	            0xebb7	                           jmp 0x4004989	      2753	pci.c	FUNCTION_113	CALL_2
pci_intx	IF,3:FOR,0:SWITCH,0:ELSE,1:CALL,3:DO,0:functions,0:WHILE,0	52
0x4000e20	              0x55	                                push rbp	      3873	pci.c	FUNCTION_158
0x4000e21	              0x53	                                push rbx	      3873	pci.c	FUNCTION_158
0x4000e22	            0x89f5	                            mov ebp, esi	      3873	pci.c	FUNCTION_158
0x4000e24	      0xbe04000000	                              mov esi, 4	      3876	pci.c	FUNCTION_158	CALL_1
0x4000e29	          0x4889fb	                            mov rbx, rdi	      3873	pci.c	FUNCTION_158
0x4000e2c	        0x4883ec10	                           sub rsp, 0x10	      3873	pci.c	FUNCTION_158
0x4000e30	      0x488d542406	                      lea rdx, [rsp + 6]	      3876	pci.c	FUNCTION_158	CALL_1
0x4000e35	    0x65488b042528	                mov rax, qword gs:[0x28]	      3873	pci.c	FUNCTION_158
0x4000e3e	      0x4889442408	                mov qword [rsp + 8], rax	      3873	pci.c	FUNCTION_158
0x4000e43	            0x31c0	                            xor eax, eax	      3873	pci.c	FUNCTION_158
0x4000e45	      0xe800000000	                          call 0x4000e4a	      3876	pci.c	FUNCTION_158	CALL_1
0x4000e4a	       0xfb7442406	               movzx eax, word [rsp + 6]	      3879	pci.c	FUNCTION_158	IF_1
0x4000e4f	            0x85ed	                           test ebp, ebp	      3878	pci.c	FUNCTION_158	IF_1
0x4000e51	            0x89c2	                            mov edx, eax	      3879	pci.c	FUNCTION_158	IF_1
0x4000e53	            0x7438	                            je 0x4000e8d	      3878	pci.c	FUNCTION_158	IF_1
0x4000e55	          0x80e6fb	                            and dh, 0xfb	      3879	pci.c	FUNCTION_158	IF_1
0x4000e58	          0x6639c2	                              cmp dx, ax	      3883	pci.c	FUNCTION_158	ELSE_1	IF_2
0x4000e5b	            0x7419	                            je 0x4000e76	      3883	pci.c	FUNCTION_158	ELSE_1	IF_2
0x4000e5d	           0xfb7d2	                           movzx edx, dx	      3886	pci.c	FUNCTION_158	ELSE_1	IF_2	CALL_2
0x4000e60	      0xbe04000000	                              mov esi, 4	      3886	pci.c	FUNCTION_158	ELSE_1	IF_2	CALL_2
0x4000e65	          0x4889df	                            mov rdi, rbx	      3886	pci.c	FUNCTION_158	ELSE_1	IF_2	CALL_2
0x4000e68	      0xe800000000	                          call 0x4000e6d	      3886	pci.c	FUNCTION_158	ELSE_1	IF_2	CALL_2
0x4000e6d	    0xf6833b060000	              test byte [rbx + 0x63b], 1	      1511	pci.c	FUNCTION_66	IF_1	CALL_1
0x4000e74	            0x751c	                           jne 0x4000e92	      1511	pci.c	FUNCTION_66	IF_1	CALL_1
0x4000e76	      0x488b442408	                mov rax, qword [rsp + 8]	      3894	pci.c	FUNCTION_158
0x4000e7b	    0x654833042528	                xor rax, qword gs:[0x28]	      3894	pci.c	FUNCTION_158
0x4000e84	            0x7544	                           jne 0x4000eca	      3894	pci.c	FUNCTION_158
0x4000e86	        0x4883c410	                           add rsp, 0x10	      3894	pci.c	FUNCTION_158
0x4000e8a	              0x5b	                                 pop rbx	      3894	pci.c	FUNCTION_158
0x4000e8b	              0x5d	                                 pop rbp	      3894	pci.c	FUNCTION_158
0x4000e8c	              0xc3	                                     ret	      3894	pci.c	FUNCTION_158
0x4000e8d	          0x80ce04	                                or dh, 4	      3881	pci.c	FUNCTION_158	ELSE_1
0x4000e90	            0xebc6	                           jmp 0x4000e58	      3881	pci.c	FUNCTION_158	ELSE_1
0x4000e92	    0x488dbba00000	                   lea rdi, [rbx + 0xa0]	      1512	pci.c	FUNCTION_66	CALL_2
0x4000e99	            0x31c9	                            xor ecx, ecx	      1512	pci.c	FUNCTION_66	CALL_2
0x4000e9b	            0x31d2	                            xor edx, edx	      1512	pci.c	FUNCTION_66	CALL_2
0x4000e9d	    0x48c7c6000000	                              mov rsi, 0	      1512	pci.c	FUNCTION_66	CALL_2
0x4000ea4	      0xe800000000	                          call 0x4000ea9	      1512	pci.c	FUNCTION_66	CALL_2
0x4000ea9	          0x4885c0	                           test rax, rax	      3889	pci.c	FUNCTION_158	ELSE_1	IF_2	IF_3
0x4000eac	            0x74c8	                            je 0x4000e76	      3889	pci.c	FUNCTION_158	ELSE_1	IF_2	IF_3
0x4000eae	           0xfb610	                   movzx edx, byte [rax]	      3889	pci.c	FUNCTION_158	ELSE_1	IF_2	IF_3
0x4000eb1	          0xf6c208	                              test dl, 8	      3889	pci.c	FUNCTION_158	ELSE_1	IF_2	IF_3
0x4000eb4	            0x75c0	                           jne 0x4000e76	      3889	pci.c	FUNCTION_158	ELSE_1	IF_2	IF_3
0x4000eb6	          0x83ca08	                               or edx, 8	      3890	pci.c	FUNCTION_158	ELSE_1	IF_2	IF_3
0x4000eb9	            0x85ed	                           test ebp, ebp	      3891	pci.c	FUNCTION_158	ELSE_1	IF_2	IF_3
0x4000ebb	           0xf94c1	                                 sete cl	      3891	pci.c	FUNCTION_158	ELSE_1	IF_2	IF_3
0x4000ebe	          0x83e2fb	                     and edx, 0xfffffffb	      3891	pci.c	FUNCTION_158	ELSE_1	IF_2	IF_3
0x4000ec1	          0xc1e102	                              shl ecx, 2	      3891	pci.c	FUNCTION_158	ELSE_1	IF_2	IF_3
0x4000ec4	             0x9ca	                             or edx, ecx	      3891	pci.c	FUNCTION_158	ELSE_1	IF_2	IF_3
0x4000ec6	            0x8810	                      mov byte [rax], dl	      3891	pci.c	FUNCTION_158	ELSE_1	IF_2	IF_3
0x4000ec8	            0xebac	                           jmp 0x4000e76	      3894	pci.c	FUNCTION_158
0x4000eca	      0xe800000000	                          call 0x4000ecf	      3894	pci.c	FUNCTION_158
pcie_get_readrq	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	18
0x40009c0	        0x4883ec10	                           sub rsp, 0x10	      5002	pci.c	FUNCTION_207
0x40009c4	      0xbe08000000	                              mov esi, 8	      5005	pci.c	FUNCTION_207	CALL_1
0x40009c9	      0x488d542406	                      lea rdx, [rsp + 6]	      5005	pci.c	FUNCTION_207	CALL_1
0x40009ce	    0x65488b042528	                mov rax, qword gs:[0x28]	      5002	pci.c	FUNCTION_207
0x40009d7	      0x4889442408	                mov qword [rsp + 8], rax	      5002	pci.c	FUNCTION_207
0x40009dc	            0x31c0	                            xor eax, eax	      5002	pci.c	FUNCTION_207
0x40009de	      0xe800000000	                          call 0x40009e3	      5005	pci.c	FUNCTION_207	CALL_1
0x40009e3	       0xfb74c2406	               movzx ecx, word [rsp + 6]	      5007	pci.c	FUNCTION_207
0x40009e8	      0xb880000000	                           mov eax, 0x80	      5007	pci.c	FUNCTION_207
0x40009ed	    0x81e100700000	                         and ecx, 0x7000	      5007	pci.c	FUNCTION_207
0x40009f3	          0xc1f90c	                            sar ecx, 0xc	      5007	pci.c	FUNCTION_207
0x40009f6	            0xd3e0	                             shl eax, cl	      5007	pci.c	FUNCTION_207
0x40009f8	      0x488b742408	                mov rsi, qword [rsp + 8]	      5008	pci.c	FUNCTION_207
0x40009fd	    0x654833342528	                xor rsi, qword gs:[0x28]	      5008	pci.c	FUNCTION_207
0x4000a06	            0x7505	                           jne 0x4000a0d	      5008	pci.c	FUNCTION_207
0x4000a08	        0x4883c410	                           add rsp, 0x10	      5008	pci.c	FUNCTION_207
0x4000a0c	              0xc3	                                     ret	      5008	pci.c	FUNCTION_207
0x4000a0d	      0xe800000000	                          call 0x4000a12	      5008	pci.c	FUNCTION_207
pci_enable_device_mem	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	2
0x4005050	      0xbe00020000	                          mov esi, 0x200	      1434	pci.c	FUNCTION_62	CALL_1
0x4005055	      0xe9d6feffff	         jmp sym.pci_enable_device_flags	      1434	pci.c	FUNCTION_62	CALL_1
pci_std_enable_acs	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,4:DO,0:functions,0:WHILE,0	41
0x4002a00	              0x55	                                push rbp	      2820	pci.c	FUNCTION_117
0x4002a01	              0x53	                                push rbx	      2820	pci.c	FUNCTION_117
0x4002a02	        0x4883ec10	                           sub rsp, 0x10	      2820	pci.c	FUNCTION_117
0x4002a06	    0x65488b042528	                mov rax, qword gs:[0x28]	      2820	pci.c	FUNCTION_117
0x4002a0f	      0x4889442408	                mov qword [rsp + 8], rax	      2820	pci.c	FUNCTION_117
0x4002a14	            0x31c0	                            xor eax, eax	      2820	pci.c	FUNCTION_117
0x4002a16	    0x81bf70030000	         cmp dword [rdi + 0x370], 0x100 	       325	pci.c	FUNCTION_12	IF_1
0x4002a20	            0x7f17	                            jg 0x4002a39	       325	pci.c	FUNCTION_12	IF_1
0x4002a22	      0x488b442408	                mov rax, qword [rsp + 8]	      2845	pci.c	FUNCTION_117
0x4002a27	    0x654833042528	                xor rax, qword gs:[0x28]	      2845	pci.c	FUNCTION_117
0x4002a30	            0x755f	                           jne 0x4002a91	      2845	pci.c	FUNCTION_117
0x4002a32	        0x4883c410	                           add rsp, 0x10	      2845	pci.c	FUNCTION_117
0x4002a36	              0x5b	                                 pop rbx	      2845	pci.c	FUNCTION_117
0x4002a37	              0x5d	                                 pop rbp	      2845	pci.c	FUNCTION_117
0x4002a38	              0xc3	                                     ret	      2845	pci.c	FUNCTION_117
0x4002a39	            0x31f6	                            xor esi, esi	      2845	pci.c	FUNCTION_117
0x4002a3b	      0xba0d000000	                            mov edx, 0xd	      2845	pci.c	FUNCTION_117
0x4002a40	          0x4889fb	                            mov rbx, rdi	      2845	pci.c	FUNCTION_117
0x4002a43	      0xe848f2ffff	call sym.pci_find_next_ext_capability.part.21	      2845	pci.c	FUNCTION_117
0x4002a48	            0x85c0	                           test eax, eax	      2826	pci.c	FUNCTION_117	IF_1
0x4002a4a	            0x89c5	                            mov ebp, eax	      2826	pci.c	FUNCTION_117	IF_1
0x4002a4c	            0x74d4	                            je 0x4002a22	      2826	pci.c	FUNCTION_117	IF_1
0x4002a4e	          0x8d7004	                      lea esi, [rax + 4]	      2829	pci.c	FUNCTION_117	CALL_2
0x4002a51	      0x488d542404	                      lea rdx, [rsp + 4]	      2829	pci.c	FUNCTION_117	CALL_2
0x4002a56	          0x4889df	                            mov rdi, rbx	      2829	pci.c	FUNCTION_117	CALL_2
0x4002a59	          0x83c506	                              add ebp, 6	      2830	pci.c	FUNCTION_117	CALL_3
0x4002a5c	      0xe800000000	                          call 0x4002a61	      2829	pci.c	FUNCTION_117	CALL_2
0x4002a61	      0x488d542406	                      lea rdx, [rsp + 6]	      2830	pci.c	FUNCTION_117	CALL_3
0x4002a66	            0x89ee	                            mov esi, ebp	      2830	pci.c	FUNCTION_117	CALL_3
0x4002a68	          0x4889df	                            mov rdi, rbx	      2830	pci.c	FUNCTION_117	CALL_3
0x4002a6b	      0xe800000000	                          call 0x4002a70	      2830	pci.c	FUNCTION_117	CALL_3
0x4002a70	       0xfb7542404	               movzx edx, word [rsp + 4]	      2842	pci.c	FUNCTION_117
0x4002a75	            0x89ee	                            mov esi, ebp	      2844	pci.c	FUNCTION_117	CALL_4
0x4002a77	          0x4889df	                            mov rdi, rbx	      2844	pci.c	FUNCTION_117	CALL_4
0x4002a7a	          0x83e21d	                           and edx, 0x1d	      2842	pci.c	FUNCTION_117
0x4002a7d	      0x660b542406	                   or dx, word [rsp + 6]	      2842	pci.c	FUNCTION_117
0x4002a82	      0x6689542406	                  mov word [rsp + 6], dx	      2842	pci.c	FUNCTION_117
0x4002a87	           0xfb7d2	                           movzx edx, dx	      2844	pci.c	FUNCTION_117	CALL_4
0x4002a8a	      0xe800000000	                          call 0x4002a8f	      2844	pci.c	FUNCTION_117	CALL_4
0x4002a8f	            0xeb91	                           jmp 0x4002a22	      2844	pci.c	FUNCTION_117	CALL_4
0x4002a91	      0xe800000000	                          call 0x4002a96	      2845	pci.c	FUNCTION_117
pci_find_next_capability	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	20
0x4000490	            0x89f0	                            mov eax, esi	       220	pci.c	FUNCTION_8
0x4000492	        0x4883ec10	                           sub rsp, 0x10	       220	pci.c	FUNCTION_8
0x4000496	          0x8b7738	            mov esi, dword [rdi + 0x38] 	       221	pci.c	FUNCTION_8	CALL_1
0x4000499	          0x83c001	                              add eax, 1	       216	pci.c	FUNCTION_7	CALL_1
0x400049c	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	       221	pci.c	FUNCTION_8	CALL_1
0x40004a0	      0x4c8d442404	                       lea r8, [rsp + 4]	       216	pci.c	FUNCTION_7	CALL_1
0x40004a5	           0xfb6c0	                           movzx eax, al	       216	pci.c	FUNCTION_7	CALL_1
0x40004a8	    0xc74424043000	               mov dword [rsp + 4], 0x30	       214	pci.c	FUNCTION_7
0x40004b0	    0x65488b0c2528	                mov rcx, qword gs:[0x28]	       220	pci.c	FUNCTION_8
0x40004b9	      0x48894c2408	                mov qword [rsp + 8], rcx	       220	pci.c	FUNCTION_8
0x40004be	            0x31c9	                            xor ecx, ecx	       220	pci.c	FUNCTION_8
0x40004c0	            0x89d1	                            mov ecx, edx	       216	pci.c	FUNCTION_7	CALL_1
0x40004c2	            0x89c2	                            mov edx, eax	       216	pci.c	FUNCTION_7	CALL_1
0x40004c4	      0xe8f7feffff	        call sym.__pci_find_next_cap_ttl	       216	pci.c	FUNCTION_7	CALL_1
0x40004c9	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       223	pci.c	FUNCTION_8
0x40004ce	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       223	pci.c	FUNCTION_8
0x40004d7	            0x7505	                           jne 0x40004de	       223	pci.c	FUNCTION_8
0x40004d9	        0x4883c410	                           add rsp, 0x10	       223	pci.c	FUNCTION_8
0x40004dd	              0xc3	                                     ret	       223	pci.c	FUNCTION_8
0x40004de	      0xe800000000	                          call 0x40004e3	       223	pci.c	FUNCTION_8
pcix_get_mmrbc	IF,2:FOR,0:SWITCH,0:ELSE,0:CALL,2:DO,0:functions,0:WHILE,0	30
0x4001a60	              0x53	                                push rbx	      4932	pci.c	FUNCTION_205
0x4001a61	      0xbe07000000	                              mov esi, 7	      4936	pci.c	FUNCTION_205	CALL_1
0x4001a66	          0x4889fb	                            mov rbx, rdi	      4932	pci.c	FUNCTION_205
0x4001a69	        0x4883ec10	                           sub rsp, 0x10	      4932	pci.c	FUNCTION_205
0x4001a6d	    0x65488b042528	                mov rax, qword gs:[0x28]	      4932	pci.c	FUNCTION_205
0x4001a76	      0x4889442408	                mov qword [rsp + 8], rax	      4932	pci.c	FUNCTION_205
0x4001a7b	            0x31c0	                            xor eax, eax	      4932	pci.c	FUNCTION_205
0x4001a7d	      0xe800000000	                          call 0x4001a82	      4936	pci.c	FUNCTION_205	CALL_1
0x4001a82	            0x85c0	                           test eax, eax	      4937	pci.c	FUNCTION_205	IF_1
0x4001a84	            0x743c	                            je 0x4001ac2	      4937	pci.c	FUNCTION_205	IF_1
0x4001a86	          0x8d7002	                      lea esi, [rax + 2]	      4940	pci.c	FUNCTION_205	IF_2	CALL_2
0x4001a89	      0x488d542406	                      lea rdx, [rsp + 6]	      4940	pci.c	FUNCTION_205	IF_2	CALL_2
0x4001a8e	          0x4889df	                            mov rdi, rbx	      4940	pci.c	FUNCTION_205	IF_2	CALL_2
0x4001a91	      0xe800000000	                          call 0x4001a96	      4940	pci.c	FUNCTION_205	IF_2	CALL_2
0x4001a96	            0x85c0	                           test eax, eax	      4940	pci.c	FUNCTION_205	IF_2	CALL_2
0x4001a98	            0x7528	                           jne 0x4001ac2	      4940	pci.c	FUNCTION_205	IF_2	CALL_2
0x4001a9a	       0xfb74c2406	               movzx ecx, word [rsp + 6]	      4943	pci.c	FUNCTION_205
0x4001a9f	      0xb800020000	                          mov eax, 0x200	      4943	pci.c	FUNCTION_205
0x4001aa4	          0x83e10c	                            and ecx, 0xc	      4943	pci.c	FUNCTION_205
0x4001aa7	          0xc1f902	                              sar ecx, 2	      4943	pci.c	FUNCTION_205
0x4001aaa	            0xd3e0	                             shl eax, cl	      4943	pci.c	FUNCTION_205
0x4001aac	      0x488b542408	                mov rdx, qword [rsp + 8]	      4944	pci.c	FUNCTION_205
0x4001ab1	    0x654833142528	                xor rdx, qword gs:[0x28]	      4944	pci.c	FUNCTION_205
0x4001aba	            0x750d	                           jne 0x4001ac9	      4944	pci.c	FUNCTION_205
0x4001abc	        0x4883c410	                           add rsp, 0x10	      4944	pci.c	FUNCTION_205
0x4001ac0	              0x5b	                                 pop rbx	      4944	pci.c	FUNCTION_205
0x4001ac1	              0xc3	                                     ret	      4944	pci.c	FUNCTION_205
0x4001ac2	      0xb8eaffffff	                     mov eax, 0xffffffea	      4938	pci.c	FUNCTION_205	IF_1
0x4001ac7	            0xebe3	                           jmp 0x4001aac	      4938	pci.c	FUNCTION_205	IF_1
0x4001ac9	      0xe800000000	                          call 0x4001ace	      4944	pci.c	FUNCTION_205
pci_add_ext_cap_save_buffer	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	4
0x4004960	            0x89d1	                            mov ecx, edx	      2739	pci.c	FUNCTION_112	CALL_1
0x4004962	           0xfb7f6	                           movzx esi, si	      2739	pci.c	FUNCTION_112	CALL_1
0x4004965	      0xba01000000	                              mov edx, 1	      2739	pci.c	FUNCTION_112	CALL_1
0x400496a	      0xe9f1dfffff	        jmp sym._pci_add_cap_save_buffer	      2739	pci.c	FUNCTION_112	CALL_1
pci_pme_restore	IF,2:FOR,0:SWITCH,0:ELSE,1:CALL,2:DO,0:functions,0:WHILE,0	35
0x4003ee0	              0x53	                                push rbx	      1829	pci.c	FUNCTION_85
0x4003ee1	        0x4883ec10	                           sub rsp, 0x10	      1829	pci.c	FUNCTION_85
0x4003ee5	    0x65488b042528	                mov rax, qword gs:[0x28]	      1829	pci.c	FUNCTION_85
0x4003eee	      0x4889442408	                mov qword [rsp + 8], rax	      1829	pci.c	FUNCTION_85
0x4003ef3	            0x31c0	                            xor eax, eax	      1829	pci.c	FUNCTION_85
0x4003ef5	    0xf68785000000	           test byte [rdi + 0x85], 0x1f 	      1832	pci.c	FUNCTION_85	IF_1
0x4003efc	            0x7516	                           jne 0x4003f14	      1832	pci.c	FUNCTION_85	IF_1
0x4003efe	      0x488b442408	                mov rax, qword [rsp + 8]	      1844	pci.c	FUNCTION_85
0x4003f03	    0x654833042528	                xor rax, qword gs:[0x28]	      1844	pci.c	FUNCTION_85
0x4003f0c	            0x755e	                           jne 0x4003f6c	      1844	pci.c	FUNCTION_85
0x4003f0e	        0x4883c410	                           add rsp, 0x10	      1844	pci.c	FUNCTION_85
0x4003f12	              0x5b	                                 pop rbx	      1844	pci.c	FUNCTION_85
0x4003f13	              0xc3	                                     ret	      1844	pci.c	FUNCTION_85
0x4003f14	     0xfb6b7840000	           movzx esi, byte [rdi + 0x84] 	      1835	pci.c	FUNCTION_85	CALL_1
0x4003f1b	      0x488d542406	                      lea rdx, [rsp + 6]	      1835	pci.c	FUNCTION_85	CALL_1
0x4003f20	          0x4889fb	                            mov rbx, rdi	      1835	pci.c	FUNCTION_85	CALL_1
0x4003f23	          0x83c604	                              add esi, 4	      1835	pci.c	FUNCTION_85	CALL_1
0x4003f26	      0xe800000000	                          call 0x4003f2b	      1835	pci.c	FUNCTION_85	CALL_1
0x4003f2b	    0xf68386000000	           test byte [rbx + 0x86], 0x20 	      1836	pci.c	FUNCTION_85	IF_2
0x4003f32	       0xfb7542406	               movzx edx, word [rsp + 6]	      1838	pci.c	FUNCTION_85	IF_2
0x4003f37	            0x7524	                           jne 0x4003f5d	      1836	pci.c	FUNCTION_85	IF_2
0x4003f39	          0x80e6fe	                            and dh, 0xfe	      1841	pci.c	FUNCTION_85	ELSE_1
0x4003f3c	      0x6681ca0080	                           or dx, 0x8000	      1841	pci.c	FUNCTION_85	ELSE_1
0x4003f41	      0x6689542406	                  mov word [rsp + 6], dx	      1841	pci.c	FUNCTION_85	ELSE_1
0x4003f46	     0xfb6b3840000	           movzx esi, byte [rbx + 0x84] 	      1843	pci.c	FUNCTION_85	CALL_2
0x4003f4d	           0xfb7d2	                           movzx edx, dx	      1843	pci.c	FUNCTION_85	CALL_2
0x4003f50	          0x4889df	                            mov rdi, rbx	      1843	pci.c	FUNCTION_85	CALL_2
0x4003f53	          0x83c604	                              add esi, 4	      1843	pci.c	FUNCTION_85	CALL_2
0x4003f56	      0xe800000000	                          call 0x4003f5b	      1843	pci.c	FUNCTION_85	CALL_2
0x4003f5b	            0xeba1	                           jmp 0x4003efe	      1843	pci.c	FUNCTION_85	CALL_2
0x4003f5d	      0x6681e2ff7f	                          and dx, 0x7fff	      1838	pci.c	FUNCTION_85	IF_2
0x4003f62	          0x80ce01	                                or dh, 1	      1838	pci.c	FUNCTION_85	IF_2
0x4003f65	      0x6689542406	                  mov word [rsp + 6], dx	      1838	pci.c	FUNCTION_85	IF_2
0x4003f6a	            0xebda	                           jmp 0x4003f46	      1838	pci.c	FUNCTION_85	IF_2
0x4003f6c	      0xe800000000	                          call 0x4003f71	      1844	pci.c	FUNCTION_85
pci_raw_set_power_state	IF,11:FOR,0:SWITCH,1:ELSE,1:CALL,10:DO,0:functions,0:WHILE,0	135
0x40006e0	            0x4154	                                push r12	       636	pci.c	FUNCTION_29
0x40006e2	              0x55	                                push rbp	       636	pci.c	FUNCTION_29
0x40006e3	              0x53	                                push rbx	       636	pci.c	FUNCTION_29
0x40006e4	        0x4883ec10	                           sub rsp, 0x10	       636	pci.c	FUNCTION_29
0x40006e8	    0x8b9780000000	            mov edx, dword [rdi + 0x80] 	       641	pci.c	FUNCTION_29	IF_1
0x40006ee	    0x65488b042528	                mov rax, qword gs:[0x28]	       636	pci.c	FUNCTION_29
0x40006f7	      0x4889442408	                mov qword [rsp + 8], rax	       636	pci.c	FUNCTION_29
0x40006fc	            0x31c0	                            xor eax, eax	       636	pci.c	FUNCTION_29
0x40006fe	            0x39f2	                            cmp edx, esi	       641	pci.c	FUNCTION_29	IF_1
0x4000700	     0xf8432010000	                            je 0x4000838	       641	pci.c	FUNCTION_29	IF_1
0x4000706	            0x89f5	                            mov ebp, esi	       641	pci.c	FUNCTION_29	IF_1
0x4000708	     0xfb6b7840000	           movzx esi, byte [rdi + 0x84] 	       644	pci.c	FUNCTION_29	IF_2
0x400070f	          0x4889fb	                            mov rbx, rdi	       644	pci.c	FUNCTION_29	IF_2
0x4000712	          0x4084f6	                           test sil, sil	       644	pci.c	FUNCTION_29	IF_2
0x4000715	     0xf8497010000	                            je 0x40008b2	       644	pci.c	FUNCTION_29	IF_2
0x400071b	          0x83fd03	                              cmp ebp, 3	       647	pci.c	FUNCTION_29	IF_3
0x400071e	     0xf87c2010000	                            ja 0x40008e6	       647	pci.c	FUNCTION_29	IF_3
0x4000724	            0x85ed	                           test ebp, ebp	       654	pci.c	FUNCTION_29	IF_4
0x4000726	            0x7423	                            je 0x400074b	       654	pci.c	FUNCTION_29	IF_4
0x4000728	          0x83fa04	                              cmp edx, 4	       655	pci.c	FUNCTION_29	IF_4
0x400072b	            0x7f08	                            jg 0x4000735	       655	pci.c	FUNCTION_29	IF_4
0x400072d	            0x39ea	                            cmp edx, ebp	       655	pci.c	FUNCTION_29	IF_4
0x400072f	     0xf8fbb010000	                            jg 0x40008f0	       655	pci.c	FUNCTION_29	IF_4
0x4000735	          0x83fd01	                              cmp ebp, 1	       662	pci.c	FUNCTION_29	IF_5
0x4000738	     0xf855e010000	                           jne 0x400089c	       662	pci.c	FUNCTION_29	IF_5
0x400073e	    0xf68385000000	           test byte [rbx + 0x85], 0x40 	       662	pci.c	FUNCTION_29	IF_5
0x4000745	     0xf8467010000	                            je 0x40008b2	       662	pci.c	FUNCTION_29	IF_5
0x400074b	      0x488d542406	                      lea rdx, [rsp + 6]	       666	pci.c	FUNCTION_29	CALL_2
0x4000750	          0x83c604	                              add esi, 4	       666	pci.c	FUNCTION_29	CALL_2
0x4000753	          0x4889df	                            mov rdi, rbx	       666	pci.c	FUNCTION_29	CALL_2
0x4000756	      0xe800000000	                          call 0x400075b	       666	pci.c	FUNCTION_29	CALL_2
0x400075b	    0x8b8380000000	            mov eax, dword [rbx + 0x80] 	       672	pci.c	FUNCTION_29	SWITCH_1
0x4000761	            0x85c0	                           test eax, eax	       672	pci.c	FUNCTION_29	SWITCH_1
0x4000763	     0xf882b010000	                            js 0x4000894	       672	pci.c	FUNCTION_29	SWITCH_1
0x4000769	          0x83f802	                              cmp eax, 2	       672	pci.c	FUNCTION_29	SWITCH_1
0x400076c	     0xf8ee5000000	                           jle 0x4000857	       672	pci.c	FUNCTION_29	SWITCH_1
0x4000772	          0x83f805	                              cmp eax, 5	       672	pci.c	FUNCTION_29	SWITCH_1
0x4000775	     0xf8f19010000	                            jg 0x4000894	       672	pci.c	FUNCTION_29	SWITCH_1
0x400077b	       0xfb7442406	               movzx eax, word [rsp + 6]	       682	pci.c	FUNCTION_29	SWITCH_1	IF_6
0x4000780	          0x83e00b	                            and eax, 0xb	       682	pci.c	FUNCTION_29	SWITCH_1	IF_6
0x4000783	        0x6683f803	                               cmp ax, 3	       682	pci.c	FUNCTION_29	SWITCH_1	IF_6
0x4000787	        0x410f94c4	                               sete r12b	       682	pci.c	FUNCTION_29	SWITCH_1	IF_6
0x400078b	            0x31c0	                            xor eax, eax	       687	pci.c	FUNCTION_29	SWITCH_1
0x400078d	            0x31d2	                            xor edx, edx	       688	pci.c	FUNCTION_29	SWITCH_1
0x400078f	      0x6689442406	                  mov word [rsp + 6], ax	       687	pci.c	FUNCTION_29	SWITCH_1
0x4000794	     0xfb6b3840000	           movzx esi, byte [rbx + 0x84] 	       692	pci.c	FUNCTION_29	CALL_3
0x400079b	          0x4889df	                            mov rdi, rbx	       692	pci.c	FUNCTION_29	CALL_3
0x400079e	          0x83c604	                              add esi, 4	       692	pci.c	FUNCTION_29	CALL_3
0x40007a1	      0xe800000000	                          call 0x40007a6	       692	pci.c	FUNCTION_29	CALL_3
0x40007a6	          0x83fd03	                              cmp ebp, 3	       696	pci.c	FUNCTION_29	IF_7
0x40007a9	     0xf84c2000000	                            je 0x4000871	       696	pci.c	FUNCTION_29	IF_7
0x40007af	    0x8b8380000000	            mov eax, dword [rbx + 0x80] 	       696	pci.c	FUNCTION_29	IF_7
0x40007b5	          0x83f803	                              cmp eax, 3	       696	pci.c	FUNCTION_29	IF_7
0x40007b8	     0xf84b3000000	                            je 0x4000871	       696	pci.c	FUNCTION_29	IF_7
0x40007be	          0x83fd02	                              cmp ebp, 2	       698	pci.c	FUNCTION_29	ELSE_1	IF_8
0x40007c1	     0xf84f2000000	                            je 0x40008b9	       698	pci.c	FUNCTION_29	ELSE_1	IF_8
0x40007c7	          0x83f802	                              cmp eax, 2	       698	pci.c	FUNCTION_29	ELSE_1	IF_8
0x40007ca	     0xf84e9000000	                            je 0x40008b9	       698	pci.c	FUNCTION_29	ELSE_1	IF_8
0x40007d0	     0xfb6b3840000	           movzx esi, byte [rbx + 0x84] 	       701	pci.c	FUNCTION_29	CALL_6
0x40007d7	      0x488d542406	                      lea rdx, [rsp + 6]	       701	pci.c	FUNCTION_29	CALL_6
0x40007dc	          0x4889df	                            mov rdi, rbx	       701	pci.c	FUNCTION_29	CALL_6
0x40007df	          0x83c604	                              add esi, 4	       701	pci.c	FUNCTION_29	CALL_6
0x40007e2	      0xe800000000	                          call 0x40007e7	       701	pci.c	FUNCTION_29	CALL_6
0x40007e7	       0xfb7442406	               movzx eax, word [rsp + 6]	       702	pci.c	FUNCTION_29
0x40007ec	          0x83e003	                              and eax, 3	       702	pci.c	FUNCTION_29
0x40007ef	            0x39c5	                            cmp ebp, eax	       703	pci.c	FUNCTION_29	IF_9	CALL_7
0x40007f1	    0x898380000000	             mov dword [rbx + 0x80], eax	       702	pci.c	FUNCTION_29
0x40007f7	            0x7414	                            je 0x400080d	       703	pci.c	FUNCTION_29	IF_9	CALL_7
0x40007f9	    0x48c7c7000000	                              mov rdi, 0	       703	pci.c	FUNCTION_29	IF_9	CALL_7
0x4000800	      0xe800000000	                          call 0x4000805	       703	pci.c	FUNCTION_29	IF_9	CALL_7
0x4000805	            0x85c0	                           test eax, eax	       703	pci.c	FUNCTION_29	IF_9	CALL_7
0x4000807	     0xf85bb000000	                           jne 0x40008c8	       703	pci.c	FUNCTION_29	IF_9	CALL_7
0x400080d	          0x4584e4	                         test r12b, r12b	       720	pci.c	FUNCTION_29	IF_10
0x4000810	            0x7414	                            je 0x4000826	       720	pci.c	FUNCTION_29	IF_10
0x4000812	            0x31ed	                            xor ebp, ebp	       720	pci.c	FUNCTION_29	IF_10
0x4000814	            0x89ee	                            mov esi, ebp	       575	pci.c	FUNCTION_21	CALL_1
0x4000816	          0x4889df	                            mov rdi, rbx	       575	pci.c	FUNCTION_21	CALL_1
0x4000819	          0x83c501	                              add ebp, 1	       574	pci.c	FUNCTION_21	FOR_1
0x400081c	      0xe800000000	                          call 0x4000821	       575	pci.c	FUNCTION_21	CALL_1
0x4000821	          0x83fd07	                              cmp ebp, 7	       574	pci.c	FUNCTION_21	FOR_1
0x4000824	            0x75ee	                           jne 0x4000814	       574	pci.c	FUNCTION_21	FOR_1
0x4000826	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       723	pci.c	FUNCTION_29	IF_11
0x400082a	        0x488b7838	            mov rdi, qword [rax + 0x38] 	       723	pci.c	FUNCTION_29	IF_11
0x400082e	          0x4885ff	                           test rdi, rdi	       723	pci.c	FUNCTION_29	IF_11
0x4000831	            0x7405	                            je 0x4000838	       723	pci.c	FUNCTION_29	IF_11
0x4000833	      0xe800000000	                          call 0x4000838	       724	pci.c	FUNCTION_29	CALL_10
0x4000838	            0x31c0	                            xor eax, eax	       726	pci.c	FUNCTION_29
0x400083a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       727	pci.c	FUNCTION_29
0x400083f	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       727	pci.c	FUNCTION_29
0x4000848	     0xf85c1000000	                           jne 0x400090f	       727	pci.c	FUNCTION_29
0x400084e	        0x4883c410	                           add rsp, 0x10	       727	pci.c	FUNCTION_29
0x4000852	              0x5b	                                 pop rbx	       727	pci.c	FUNCTION_29
0x4000853	              0x5d	                                 pop rbp	       727	pci.c	FUNCTION_29
0x4000854	            0x415c	                                 pop r12	       727	pci.c	FUNCTION_29
0x4000856	              0xc3	                                     ret	       727	pci.c	FUNCTION_29
0x4000857	       0xfb7542406	               movzx edx, word [rsp + 6]	       677	pci.c	FUNCTION_29	SWITCH_1
0x400085c	          0x4531e4	                          xor r12d, r12d	       638	pci.c	FUNCTION_29
0x400085f	          0x83e2fc	                     and edx, 0xfffffffc	       677	pci.c	FUNCTION_29	SWITCH_1
0x4000862	             0x9ea	                             or edx, ebp	       677	pci.c	FUNCTION_29	SWITCH_1
0x4000864	      0x6689542406	                  mov word [rsp + 6], dx	       677	pci.c	FUNCTION_29	SWITCH_1
0x4000869	           0xfb7d2	                           movzx edx, dx	       677	pci.c	FUNCTION_29	SWITCH_1
0x400086c	      0xe923ffffff	                           jmp 0x4000794	       678	pci.c	FUNCTION_29	SWITCH_1
0x4000871	    0x8b8388000000	            mov eax, dword [rbx + 0x88] 	       678	pci.c	FUNCTION_29	SWITCH_1
0x4000877	    0x8b3d00000000	            mov edi, dword [0x0400087d] 	        69	pci.c	FUNCTION_1	IF_1
0x400087d	            0x39f8	                            cmp eax, edi	        69	pci.c	FUNCTION_1	IF_1
0x400087f	           0xf43f8	                         cmovae edi, eax	        69	pci.c	FUNCTION_1	IF_1
0x4000882	            0x85ff	                           test edi, edi	        72	pci.c	FUNCTION_1	IF_2
0x4000884	     0xf8446ffffff	                            je 0x40007d0	        72	pci.c	FUNCTION_1	IF_2
0x400088a	      0xe800000000	                          call 0x400088f	        73	pci.c	FUNCTION_1	CALL_1
0x400088f	      0xe93cffffff	                           jmp 0x40007d0	        73	pci.c	FUNCTION_1	CALL_1
0x4000894	          0x4531e4	                          xor r12d, r12d	       638	pci.c	FUNCTION_29
0x4000897	      0xe9effeffff	                           jmp 0x400078b	       638	pci.c	FUNCTION_29
0x400089c	          0x83fd02	                              cmp ebp, 2	       663	pci.c	FUNCTION_29	IF_5
0x400089f	     0xf85a6feffff	                           jne 0x400074b	       663	pci.c	FUNCTION_29	IF_5
0x40008a5	    0x80bb85000000	                cmp byte [rbx + 0x85], 0	       663	pci.c	FUNCTION_29	IF_5
0x40008ac	     0xf8899feffff	                            js 0x400074b	       663	pci.c	FUNCTION_29	IF_5
0x40008b2	      0xb8fbffffff	                     mov eax, 0xfffffffb	       645	pci.c	FUNCTION_29	IF_2
0x40008b7	            0xeb81	                           jmp 0x400083a	       645	pci.c	FUNCTION_29	IF_2
0x40008b9	      0xbf781b0d00	                        mov edi, 0xd1b78	       699	pci.c	FUNCTION_29	ELSE_1	IF_8
0x40008be	      0xe800000000	                          call 0x40008c3	       699	pci.c	FUNCTION_29	ELSE_1	IF_8
0x40008c3	      0xe908ffffff	                           jmp 0x40007d0	       699	pci.c	FUNCTION_29	ELSE_1	IF_8
0x40008c8	    0x8b9380000000	            mov edx, dword [rbx + 0x80] 	       704	pci.c	FUNCTION_29	IF_9	CALL_8
0x40008ce	    0x488dbba00000	                   lea rdi, [rbx + 0xa0]	       704	pci.c	FUNCTION_29	IF_9	CALL_8
0x40008d5	    0x48c7c6000000	                              mov rsi, 0	       704	pci.c	FUNCTION_29	IF_9	CALL_8
0x40008dc	      0xe800000000	                          call 0x40008e1	       704	pci.c	FUNCTION_29	IF_9	CALL_8
0x40008e1	      0xe927ffffff	                           jmp 0x400080d	       704	pci.c	FUNCTION_29	IF_9	CALL_8
0x40008e6	      0xb8eaffffff	                     mov eax, 0xffffffea	       648	pci.c	FUNCTION_29	IF_3
0x40008eb	      0xe94affffff	                           jmp 0x400083a	       648	pci.c	FUNCTION_29	IF_3
0x40008f0	    0x488dbfa00000	                   lea rdi, [rdi + 0xa0]	       656	pci.c	FUNCTION_29	IF_4	CALL_1
0x40008f7	            0x89e9	                            mov ecx, ebp	       656	pci.c	FUNCTION_29	IF_4	CALL_1
0x40008f9	    0x48c7c6000000	                              mov rsi, 0	       656	pci.c	FUNCTION_29	IF_4	CALL_1
0x4000900	      0xe800000000	                          call 0x4000905	       656	pci.c	FUNCTION_29	IF_4	CALL_1
0x4000905	      0xb8eaffffff	                     mov eax, 0xffffffea	       658	pci.c	FUNCTION_29	IF_4
0x400090a	      0xe92bffffff	                           jmp 0x400083a	       658	pci.c	FUNCTION_29	IF_4
0x400090f	      0xe800000000	                          call 0x4000914	       727	pci.c	FUNCTION_29
pcibios_penalize_isa_irq	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,0:DO,0:functions,0:WHILE,0	1
0x4003c50	            0xf3c3	                                     ret	      1603	pci.c	FUNCTION_72
pcibios_set_master	IF,3:FOR,0:SWITCH,0:ELSE,2:CALL,3:DO,0:functions,0:WHILE,0	36
0x4004e10	              0x53	                                push rbx	      3694	pci.c	FUNCTION_150
0x4004e11	        0x4883ec10	                           sub rsp, 0x10	      3694	pci.c	FUNCTION_150
0x4004e15	    0x65488b042528	                mov rax, qword gs:[0x28]	      3694	pci.c	FUNCTION_150
0x4004e1e	      0x4889442408	                mov qword [rsp + 8], rax	      3694	pci.c	FUNCTION_150
0x4004e23	            0x31c0	                            xor eax, eax	      3694	pci.c	FUNCTION_150
0x4004e25	        0x807f4c00	                cmp byte [rdi + 0x4c], 0	      3698	pci.c	FUNCTION_150	IF_1	CALL_1
0x4004e29	            0x7416	                            je 0x4004e41	      3698	pci.c	FUNCTION_150	IF_1	CALL_1
0x4004e2b	      0x488b442408	                mov rax, qword [rsp + 8]	      3710	pci.c	FUNCTION_150
0x4004e30	    0x654833042528	                xor rax, qword gs:[0x28]	      3710	pci.c	FUNCTION_150
0x4004e39	            0x755d	                           jne 0x4004e98	      3710	pci.c	FUNCTION_150
0x4004e3b	        0x4883c410	                           add rsp, 0x10	      3710	pci.c	FUNCTION_150
0x4004e3f	              0x5b	                                 pop rbx	      3710	pci.c	FUNCTION_150
0x4004e40	              0xc3	                                     ret	      3710	pci.c	FUNCTION_150
0x4004e41	      0x488d542407	                      lea rdx, [rsp + 7]	      3701	pci.c	FUNCTION_150	CALL_2
0x4004e46	      0xbe0d000000	                            mov esi, 0xd	      3701	pci.c	FUNCTION_150	CALL_2
0x4004e4b	          0x4889fb	                            mov rbx, rdi	      3701	pci.c	FUNCTION_150	CALL_2
0x4004e4e	      0xe800000000	                          call 0x4004e53	      3701	pci.c	FUNCTION_150	CALL_2
0x4004e53	       0xfb6442407	               movzx eax, byte [rsp + 7]	      3702	pci.c	FUNCTION_150	IF_2
0x4004e58	            0x3c0f	                             cmp al, 0xf	      3702	pci.c	FUNCTION_150	IF_2
0x4004e5a	            0x7620	                           jbe 0x4004e7c	      3702	pci.c	FUNCTION_150	IF_2
0x4004e5c	    0x8b0d00000000	            mov ecx, dword [0x04004e62] 	      3704	pci.c	FUNCTION_150	ELSE_1	IF_3
0x4004e62	            0x39c8	                            cmp eax, ecx	      3704	pci.c	FUNCTION_150	ELSE_1	IF_3
0x4004e64	            0x76c5	                           jbe 0x4004e2b	      3704	pci.c	FUNCTION_150	ELSE_1	IF_3
0x4004e66	           0xfb6d1	                           movzx edx, cl	      3705	pci.c	FUNCTION_150	ELSE_1	IF_3
0x4004e69	        0x884c2407	                  mov byte [rsp + 7], cl	      3705	pci.c	FUNCTION_150	ELSE_1	IF_3
0x4004e6d	      0xbe0d000000	                            mov esi, 0xd	      3709	pci.c	FUNCTION_150	CALL_3
0x4004e72	          0x4889df	                            mov rdi, rbx	      3709	pci.c	FUNCTION_150	CALL_3
0x4004e75	      0xe800000000	                          call 0x4004e7a	      3709	pci.c	FUNCTION_150	CALL_3
0x4004e7a	            0xebaf	                           jmp 0x4004e2b	      3709	pci.c	FUNCTION_150	CALL_3
0x4004e7c	    0x833d00000000	           cmp dword [0x04004e83], 0x40 	      3703	pci.c	FUNCTION_150	IF_2
0x4004e83	      0xb840000000	                           mov eax, 0x40	      3703	pci.c	FUNCTION_150	IF_2
0x4004e88	     0xf4605000000	          cmovbe eax, dword [0x04004e8f]	      3703	pci.c	FUNCTION_150	IF_2
0x4004e8f	           0xfb6d0	                           movzx edx, al	      3703	pci.c	FUNCTION_150	IF_2
0x4004e92	        0x88442407	                  mov byte [rsp + 7], al	      3703	pci.c	FUNCTION_150	IF_2
0x4004e96	            0xebd5	                           jmp 0x4004e6d	      3703	pci.c	FUNCTION_150	IF_2
0x4004e98	      0xe800000000	                          call 0x4004e9d	      3710	pci.c	FUNCTION_150
pci_find_ht_capability	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,2:DO,0:functions,0:WHILE,0	20
0x4001c60	              0x55	                                push rbp	       435	pci.c	FUNCTION_16
0x4001c61	              0x53	                                push rbx	       435	pci.c	FUNCTION_16
0x4001c62	            0x89f5	                            mov ebp, esi	       435	pci.c	FUNCTION_16
0x4001c64	         0xfb65749	           movzx edx, byte [rdi + 0x49] 	       438	pci.c	FUNCTION_16	CALL_1
0x4001c68	          0x8b7738	            mov esi, dword [rdi + 0x38] 	       438	pci.c	FUNCTION_16	CALL_1
0x4001c6b	          0x4889fb	                            mov rbx, rdi	       435	pci.c	FUNCTION_16
0x4001c6e	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	       438	pci.c	FUNCTION_16	CALL_1
0x4001c72	      0xe899fcffff	       call sym.__pci_bus_find_cap_start	       438	pci.c	FUNCTION_16	CALL_1
0x4001c77	            0x85c0	                           test eax, eax	       439	pci.c	FUNCTION_16	IF_1
0x4001c79	            0x7505	                           jne 0x4001c80	       439	pci.c	FUNCTION_16	IF_1
0x4001c7b	            0x31c0	                            xor eax, eax	       443	pci.c	FUNCTION_16
0x4001c7d	              0x5b	                                 pop rbx	       443	pci.c	FUNCTION_16
0x4001c7e	              0x5d	                                 pop rbp	       443	pci.c	FUNCTION_16
0x4001c7f	              0xc3	                                     ret	       443	pci.c	FUNCTION_16
0x4001c80	            0x89ea	                            mov edx, ebp	       440	pci.c	FUNCTION_16	CALL_2
0x4001c82	          0x4889df	                            mov rdi, rbx	       440	pci.c	FUNCTION_16	CALL_2
0x4001c85	            0x89c6	                            mov esi, eax	       440	pci.c	FUNCTION_16	CALL_2
0x4001c87	              0x5b	                                 pop rbx	       443	pci.c	FUNCTION_16
0x4001c88	              0x5d	                                 pop rbp	       443	pci.c	FUNCTION_16
0x4001c89	      0xe962e8ffff	          jmp sym.__pci_find_next_ht_cap	       440	pci.c	FUNCTION_16	CALL_2
pci_probe_reset_bus	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	2
0x4005530	      0xbe01000000	                              mov esi, 1	      4841	pci.c	FUNCTION_201	CALL_1
0x4005535	            0xeb99	                   jmp sym.pci_bus_reset	      4841	pci.c	FUNCTION_201	CALL_1
pcibios_reset_secondary_bus	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	1
0x40051a0	      0xe96bffffff	         jmp sym.pci_reset_secondary_bus	      4186	pci.c	FUNCTION_169	CALL_1
pcim_pin_device	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,2:DO,0:functions,0:WHILE,0	20
0x4000de0	    0xf6873b060000	              test byte [rdi + 0x63b], 1	      1511	pci.c	FUNCTION_66	IF_1	CALL_1
0x4000de7	            0x750f	                           jne 0x4000df8	      1511	pci.c	FUNCTION_66	IF_1	CALL_1
0x4000de9	            0x31c0	                            xor eax, eax	      1513	pci.c	FUNCTION_66
0x4000deb	             0xf0b	                                     ud2	      1513	pci.c	FUNCTION_66
0x4000ded	          0x4885c0	                           test rax, rax	      1556	pci.c	FUNCTION_68	IF_1
0x4000df0	            0x7404	                            je 0x4000df6	      1556	pci.c	FUNCTION_68	IF_1
0x4000df2	          0x800802	                        or byte [rax], 2	      1557	pci.c	FUNCTION_68	IF_1
0x4000df5	              0xc3	                                     ret	      1558	pci.c	FUNCTION_68
0x4000df6	            0xf3c3	                                     ret	      1558	pci.c	FUNCTION_68
0x4000df8	    0x4881c7a00000	                           add rdi, 0xa0	      1512	pci.c	FUNCTION_66	CALL_2
0x4000dff	            0x31c9	                            xor ecx, ecx	      1512	pci.c	FUNCTION_66	CALL_2
0x4000e01	            0x31d2	                            xor edx, edx	      1512	pci.c	FUNCTION_66	CALL_2
0x4000e03	    0x48c7c6000000	                              mov rsi, 0	      1512	pci.c	FUNCTION_66	CALL_2
0x4000e0a	      0xe800000000	                          call 0x4000e0f	      1512	pci.c	FUNCTION_66	CALL_2
0x4000e0f	          0x4885c0	                           test rax, rax	      1555	pci.c	FUNCTION_68	CALL_2
0x4000e12	            0x74d5	                            je 0x4000de9	      1555	pci.c	FUNCTION_68	CALL_2
0x4000e14	          0xf60001	                      test byte [rax], 1	      1555	pci.c	FUNCTION_68	CALL_2
0x4000e17	            0x74d2	                            je 0x4000deb	      1555	pci.c	FUNCTION_68	CALL_2
0x4000e19	          0x800802	                        or byte [rax], 2	      1557	pci.c	FUNCTION_68	IF_1
0x4000e1c	              0xc3	                                     ret	      1558	pci.c	FUNCTION_68
pci_parent_bus_reset	IF,3:FOR,0:SWITCH,0:ELSE,0:CALL,3:DO,0:functions,0:WHILE,0	40
0x40051d0	              0x53	                                push rbx	      4205	pci.c	FUNCTION_171
0x40051d1	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      4208	pci.c	FUNCTION_171	IF_1	CALL_1
0x40051d5	      0xbbe7ffffff	                     mov ebx, 0xffffffe7	      4210	pci.c	FUNCTION_171	IF_1
0x40051da	      0x48837a1000	               cmp qword [rdx + 0x10], 0	      4208	pci.c	FUNCTION_171	IF_1	CALL_1
0x40051df	            0x7443	                            je 0x4005224	      4208	pci.c	FUNCTION_171	IF_1	CALL_1
0x40051e1	      0x48837f1800	               cmp qword [rdi + 0x18], 0	      4208	pci.c	FUNCTION_171	IF_1	CALL_1
0x40051e6	            0x753c	                           jne 0x4005224	      4208	pci.c	FUNCTION_171	IF_1	CALL_1
0x40051e8	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      4209	pci.c	FUNCTION_171	IF_1
0x40051ec	          0x4885c9	                           test rcx, rcx	      4208	pci.c	FUNCTION_171	IF_1	CALL_1
0x40051ef	            0x7433	                            je 0x4005224	      4208	pci.c	FUNCTION_171	IF_1	CALL_1
0x40051f1	    0xf6873e060000	          test byte [rdi + 0x63e], 0x40 	      4209	pci.c	FUNCTION_171	IF_1
0x40051f8	            0x752a	                           jne 0x4005224	      4209	pci.c	FUNCTION_171	IF_1
0x40051fa	        0x488b4228	            mov rax, qword [rdx + 0x28] 	      4212	pci.c	FUNCTION_171	CALL_2
0x40051fe	        0x4883c228	                           add rdx, 0x28	      4212	pci.c	FUNCTION_171	CALL_2
0x4005202	          0x4839d0	                            cmp rax, rdx	      4212	pci.c	FUNCTION_171	CALL_2
0x4005205	            0x7417	                            je 0x400521e	      4212	pci.c	FUNCTION_171	CALL_2
0x4005207	          0x4839c7	                            cmp rdi, rax	      4213	pci.c	FUNCTION_171	IF_2
0x400520a	            0x740a	                            je 0x4005216	      4213	pci.c	FUNCTION_171	IF_2
0x400520c	            0xeb16	                           jmp 0x4005224	      4213	pci.c	FUNCTION_171	IF_2
0x400520e	          0x4839c7	                            cmp rdi, rax	      4213	pci.c	FUNCTION_171	IF_2
0x4005211	            0x7515	                           jne 0x4005228	      4213	pci.c	FUNCTION_171	IF_2
0x4005213	          0x4889f8	                            mov rax, rdi	      4213	pci.c	FUNCTION_171	IF_2
0x4005216	          0x488b00	                    mov rax, qword [rax]	      4212	pci.c	FUNCTION_171	CALL_2
0x4005219	          0x4839d0	                            cmp rax, rdx	      4212	pci.c	FUNCTION_171	CALL_2
0x400521c	            0x75f0	                           jne 0x400520e	      4212	pci.c	FUNCTION_171	CALL_2
0x400521e	            0x31db	                            xor ebx, ebx	      4217	pci.c	FUNCTION_171	IF_3
0x4005220	            0x85f6	                           test esi, esi	      4216	pci.c	FUNCTION_171	IF_3
0x4005222	            0x740d	                            je 0x4005231	      4216	pci.c	FUNCTION_171	IF_3
0x4005224	            0x89d8	                            mov eax, ebx	      4222	pci.c	FUNCTION_171
0x4005226	              0x5b	                                 pop rbx	      4222	pci.c	FUNCTION_171
0x4005227	              0xc3	                                     ret	      4222	pci.c	FUNCTION_171
0x4005228	      0xbbe7ffffff	                     mov ebx, 0xffffffe7	      4210	pci.c	FUNCTION_171	IF_1
0x400522d	            0x89d8	                            mov eax, ebx	      4222	pci.c	FUNCTION_171
0x400522f	              0x5b	                                 pop rbx	      4222	pci.c	FUNCTION_171
0x4005230	              0xc3	                                     ret	      4222	pci.c	FUNCTION_171
0x4005231	          0x4889cf	                            mov rdi, rcx	      4219	pci.c	FUNCTION_171	CALL_3
0x4005234	      0xe800000000	                          call 0x4005239	      4219	pci.c	FUNCTION_171	CALL_3
0x4005239	            0x89d8	                            mov eax, ebx	      4222	pci.c	FUNCTION_171
0x400523b	              0x5b	                                 pop rbx	      4222	pci.c	FUNCTION_171
0x400523c	              0xc3	                                     ret	      4222	pci.c	FUNCTION_171
pci_af_flr	IF,5:FOR,0:SWITCH,0:ELSE,0:CALL,7:DO,0:functions,0:WHILE,0	59
0x4003120	            0x4154	                                push r12	      4072	pci.c	FUNCTION_166
0x4003122	              0x55	                                push rbp	      4072	pci.c	FUNCTION_166
0x4003123	          0x4189f4	                           mov r12d, esi	      4072	pci.c	FUNCTION_166
0x4003126	              0x53	                                push rbx	      4072	pci.c	FUNCTION_166
0x4003127	      0xbe13000000	                           mov esi, 0x13	      4076	pci.c	FUNCTION_166	CALL_1
0x400312c	          0x4889fb	                            mov rbx, rdi	      4072	pci.c	FUNCTION_166
0x400312f	        0x4883ec10	                           sub rsp, 0x10	      4072	pci.c	FUNCTION_166
0x4003133	    0x65488b042528	                mov rax, qword gs:[0x28]	      4072	pci.c	FUNCTION_166
0x400313c	      0x4889442408	                mov qword [rsp + 8], rax	      4072	pci.c	FUNCTION_166
0x4003141	            0x31c0	                            xor eax, eax	      4072	pci.c	FUNCTION_166
0x4003143	      0xe800000000	                          call 0x4003148	      4076	pci.c	FUNCTION_166	CALL_1
0x4003148	            0x85c0	                           test eax, eax	      4077	pci.c	FUNCTION_166	IF_1
0x400314a	     0xf8487000000	                            je 0x40031d7	      4077	pci.c	FUNCTION_166	IF_1
0x4003150	    0xf6833f060000	              test byte [rbx + 0x63f], 4	      4080	pci.c	FUNCTION_166	IF_2
0x4003157	            0x757e	                           jne 0x40031d7	      4080	pci.c	FUNCTION_166	IF_2
0x4003159	          0x8d7003	                      lea esi, [rax + 3]	      4083	pci.c	FUNCTION_166	CALL_2
0x400315c	      0x488d542407	                      lea rdx, [rsp + 7]	      4083	pci.c	FUNCTION_166	CALL_2
0x4003161	          0x4889df	                            mov rdi, rbx	      4083	pci.c	FUNCTION_166	CALL_2
0x4003164	            0x89c5	                            mov ebp, eax	      4083	pci.c	FUNCTION_166	CALL_2
0x4003166	      0xe800000000	                          call 0x400316b	      4083	pci.c	FUNCTION_166	CALL_2
0x400316b	       0xfb6442407	               movzx eax, byte [rsp + 7]	      4084	pci.c	FUNCTION_166	IF_3
0x4003170	          0x83e003	                              and eax, 3	      4084	pci.c	FUNCTION_166	IF_3
0x4003173	            0x3c03	                               cmp al, 3	      4084	pci.c	FUNCTION_166	IF_3
0x4003175	            0x7560	                           jne 0x40031d7	      4084	pci.c	FUNCTION_166	IF_3
0x4003177	            0x31c0	                            xor eax, eax	      4088	pci.c	FUNCTION_166	IF_4
0x4003179	          0x4585e4	                         test r12d, r12d	      4087	pci.c	FUNCTION_166	IF_4
0x400317c	            0x7419	                            je 0x4003197	      4087	pci.c	FUNCTION_166	IF_4
0x400317e	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4110	pci.c	FUNCTION_166
0x4003183	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      4110	pci.c	FUNCTION_166
0x400318c	            0x7565	                           jne 0x40031f3	      4110	pci.c	FUNCTION_166
0x400318e	        0x4883c410	                           add rsp, 0x10	      4110	pci.c	FUNCTION_166
0x4003192	              0x5b	                                 pop rbx	      4110	pci.c	FUNCTION_166
0x4003193	              0x5d	                                 pop rbp	      4110	pci.c	FUNCTION_166
0x4003194	            0x415c	                                 pop r12	      4110	pci.c	FUNCTION_166
0x4003196	              0xc3	                                     ret	      4110	pci.c	FUNCTION_166
0x4003197	          0x83c504	                              add ebp, 4	      4095	pci.c	FUNCTION_166	IF_5	CALL_3
0x400319a	      0xba00010000	                          mov edx, 0x100	      4095	pci.c	FUNCTION_166	IF_5	CALL_3
0x400319f	          0x4889df	                            mov rdi, rbx	      4095	pci.c	FUNCTION_166	IF_5	CALL_3
0x40031a2	            0x89ee	                            mov esi, ebp	      4095	pci.c	FUNCTION_166	IF_5	CALL_3
0x40031a4	      0xe800000000	                          call 0x40031a9	      4095	pci.c	FUNCTION_166	IF_5	CALL_3
0x40031a9	            0x85c0	                           test eax, eax	      4095	pci.c	FUNCTION_166	IF_5	CALL_3
0x40031ab	            0x7431	                            je 0x40031de	      4095	pci.c	FUNCTION_166	IF_5	CALL_3
0x40031ad	            0x89ee	                            mov esi, ebp	      4099	pci.c	FUNCTION_166	CALL_5
0x40031af	      0xba01000000	                              mov edx, 1	      4099	pci.c	FUNCTION_166	CALL_5
0x40031b4	          0x4889df	                            mov rdi, rbx	      4099	pci.c	FUNCTION_166	CALL_5
0x40031b7	      0xe800000000	                          call 0x40031bc	      4099	pci.c	FUNCTION_166	CALL_5
0x40031bc	      0xbf64000000	                           mov edi, 0x64	      4107	pci.c	FUNCTION_166	CALL_6
0x40031c1	      0xe800000000	                          call 0x40031c6	      4107	pci.c	FUNCTION_166	CALL_6
0x40031c6	    0x48c7c6000000	                              mov rsi, 0	      4109	pci.c	FUNCTION_166	CALL_7
0x40031cd	          0x4889df	                            mov rdi, rbx	      4109	pci.c	FUNCTION_166	CALL_7
0x40031d0	      0xe8abf4ffff	      call sym.pci_dev_wait.constprop.55	      4109	pci.c	FUNCTION_166	CALL_7
0x40031d5	            0xeba7	                           jmp 0x400317e	      4109	pci.c	FUNCTION_166	CALL_7
0x40031d7	      0xb8e7ffffff	                     mov eax, 0xffffffe7	      4078	pci.c	FUNCTION_166	IF_1
0x40031dc	            0xeba0	                           jmp 0x400317e	      4078	pci.c	FUNCTION_166	IF_1
0x40031de	    0x488dbba00000	                   lea rdi, [rbx + 0xa0]	      4097	pci.c	FUNCTION_166	CALL_4
0x40031e5	    0x48c7c6000000	                              mov rsi, 0	      4097	pci.c	FUNCTION_166	CALL_4
0x40031ec	      0xe800000000	                          call 0x40031f1	      4097	pci.c	FUNCTION_166	CALL_4
0x40031f1	            0xebba	                           jmp 0x40031ad	      4097	pci.c	FUNCTION_166	CALL_4
0x40031f3	      0xe800000000	                          call 0x40031f8	      4110	pci.c	FUNCTION_166
pci_rebar_set_size	IF,1:FOR,0:SWITCH,0:ELSE,0:CALL,3:DO,0:functions,0:WHILE,0	35
0x4004cb0	            0x4154	                                push r12	      3078	pci.c	FUNCTION_125
0x4004cb2	              0x55	                                push rbp	      3078	pci.c	FUNCTION_125
0x4004cb3	          0x4989fc	                            mov r12, rdi	      3078	pci.c	FUNCTION_125
0x4004cb6	              0x53	                                push rbx	      3078	pci.c	FUNCTION_125
0x4004cb7	            0x89d5	                            mov ebp, edx	      3078	pci.c	FUNCTION_125
0x4004cb9	        0x4883ec10	                           sub rsp, 0x10	      3078	pci.c	FUNCTION_125
0x4004cbd	    0x65488b042528	                mov rax, qword gs:[0x28]	      3078	pci.c	FUNCTION_125
0x4004cc6	      0x4889442408	                mov qword [rsp + 8], rax	      3078	pci.c	FUNCTION_125
0x4004ccb	            0x31c0	                            xor eax, eax	      3078	pci.c	FUNCTION_125
0x4004ccd	      0xe8bedbffff	             call sym.pci_rebar_find_pos	      3082	pci.c	FUNCTION_125	CALL_1
0x4004cd2	            0x85c0	                           test eax, eax	      3083	pci.c	FUNCTION_125	IF_1
0x4004cd4	            0x782e	                            js 0x4004d04	      3083	pci.c	FUNCTION_125	IF_1
0x4004cd6	          0x8d5808	                      lea ebx, [rax + 8]	      3086	pci.c	FUNCTION_125	CALL_2
0x4004cd9	      0x488d542404	                      lea rdx, [rsp + 4]	      3086	pci.c	FUNCTION_125	CALL_2
0x4004cde	          0x4c89e7	                            mov rdi, r12	      3086	pci.c	FUNCTION_125	CALL_2
0x4004ce1	          0xc1e508	                              shl ebp, 8	      3088	pci.c	FUNCTION_125
0x4004ce4	            0x89de	                            mov esi, ebx	      3086	pci.c	FUNCTION_125	CALL_2
0x4004ce6	      0xe800000000	                          call 0x4004ceb	      3086	pci.c	FUNCTION_125	CALL_2
0x4004ceb	        0x8b542404	                mov edx, dword [rsp + 4]	      3088	pci.c	FUNCTION_125
0x4004cef	            0x89de	                            mov esi, ebx	      3089	pci.c	FUNCTION_125	CALL_3
0x4004cf1	          0x4c89e7	                            mov rdi, r12	      3089	pci.c	FUNCTION_125	CALL_3
0x4004cf4	          0x80e6e0	                            and dh, 0xe0	      3088	pci.c	FUNCTION_125
0x4004cf7	             0x9ea	                             or edx, ebp	      3088	pci.c	FUNCTION_125
0x4004cf9	        0x89542404	                mov dword [rsp + 4], edx	      3088	pci.c	FUNCTION_125
0x4004cfd	      0xe800000000	                          call 0x4004d02	      3089	pci.c	FUNCTION_125	CALL_3
0x4004d02	            0x31c0	                            xor eax, eax	      3090	pci.c	FUNCTION_125
0x4004d04	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3091	pci.c	FUNCTION_125
0x4004d09	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      3091	pci.c	FUNCTION_125
0x4004d12	            0x7509	                           jne 0x4004d1d	      3091	pci.c	FUNCTION_125
0x4004d14	        0x4883c410	                           add rsp, 0x10	      3091	pci.c	FUNCTION_125
0x4004d18	              0x5b	                                 pop rbx	      3091	pci.c	FUNCTION_125
0x4004d19	              0x5d	                                 pop rbp	      3091	pci.c	FUNCTION_125
0x4004d1a	            0x415c	                                 pop r12	      3091	pci.c	FUNCTION_125
0x4004d1c	              0xc3	                                     ret	      3091	pci.c	FUNCTION_125
0x4004d1d	      0xe800000000	                          call 0x4004d22	      3091	pci.c	FUNCTION_125
pci_request_region	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	2
0x4001340	            0x31c9	                            xor ecx, ecx	      3322	pci.c	FUNCTION_132	CALL_1
0x4001342	      0xe9d9feffff	            jmp sym.__pci_request_region	      3322	pci.c	FUNCTION_132	CALL_1
pci_set_vga_state	IF,6:FOR,0:SWITCH,0:ELSE,2:CALL,6:DO,0:functions,0:WHILE,1	101
0x4005aa0	            0x4156	                                push r14	      5348	pci.c	FUNCTION_220
0x4005aa2	            0x4155	                                push r13	      5348	pci.c	FUNCTION_220
0x4005aa4	          0x4989fe	                            mov r14, rdi	      5348	pci.c	FUNCTION_220
0x4005aa7	            0x4154	                                push r12	      5348	pci.c	FUNCTION_220
0x4005aa9	              0x55	                                push rbp	      5348	pci.c	FUNCTION_220
0x4005aaa	            0x89cd	                            mov ebp, ecx	      5348	pci.c	FUNCTION_220
0x4005aac	              0x53	                                push rbx	      5348	pci.c	FUNCTION_220
0x4005aad	          0x4189f5	                           mov r13d, esi	      5348	pci.c	FUNCTION_220
0x4005ab0	            0x89d3	                            mov ebx, edx	      5348	pci.c	FUNCTION_220
0x4005ab2	          0x4189f4	                           mov r12d, esi	      5348	pci.c	FUNCTION_220
0x4005ab5	        0x4883ec10	                           sub rsp, 0x10	      5348	pci.c	FUNCTION_220
0x4005ab9	    0x65488b042528	                mov rax, qword gs:[0x28]	      5348	pci.c	FUNCTION_220
0x4005ac2	      0x4889442408	                mov qword [rsp + 8], rax	      5348	pci.c	FUNCTION_220
0x4005ac7	            0x31c0	                            xor eax, eax	      5348	pci.c	FUNCTION_220
0x4005ac9	          0x83e102	                              and ecx, 2	      5354	pci.c	FUNCTION_220	CALL_1
0x4005acc	            0x7455	                            je 0x4005b23	      5354	pci.c	FUNCTION_220	CALL_1
0x4005ace	    0xf7c2fcffffff	                    test edx, 0xfffffffc	      5354	pci.c	FUNCTION_220	CALL_1
0x4005ad4	     0xf85bc000000	                           jne 0x4005b96	      5354	pci.c	FUNCTION_220	CALL_1
0x4005ada	    0x488b05000000	            mov rax, qword [0x04005ae1] 	      5332	pci.c	FUNCTION_219	IF_1
0x4005ae1	          0x4885c0	                           test rax, rax	      5332	pci.c	FUNCTION_219	IF_1
0x4005ae4	     0xf84d1000000	                            je 0x4005bbb	      5332	pci.c	FUNCTION_219	IF_1
0x4005aea	        0x410fb6f5	                         movzx esi, r13b	      5333	pci.c	FUNCTION_219	IF_1	CALL_1
0x4005aee	            0x89e9	                            mov ecx, ebp	      5333	pci.c	FUNCTION_219	IF_1	CALL_1
0x4005af0	            0x89da	                            mov edx, ebx	      5333	pci.c	FUNCTION_219	IF_1	CALL_1
0x4005af2	          0x4c89f7	                            mov rdi, r14	      5333	pci.c	FUNCTION_219	IF_1	CALL_1
0x4005af5	      0xe800000000	                          call 0x4005afa	      5333	pci.c	FUNCTION_219	IF_1	CALL_1
0x4005afa	            0x85c0	                           test eax, eax	      5358	pci.c	FUNCTION_220	IF_1
0x4005afc	     0xf84b9000000	                            je 0x4005bbb	      5358	pci.c	FUNCTION_220	IF_1
0x4005b02	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5389	pci.c	FUNCTION_220
0x4005b07	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      5389	pci.c	FUNCTION_220
0x4005b10	     0xf85ef000000	                           jne 0x4005c05	      5389	pci.c	FUNCTION_220
0x4005b16	        0x4883c410	                           add rsp, 0x10	      5389	pci.c	FUNCTION_220
0x4005b1a	              0x5b	                                 pop rbx	      5389	pci.c	FUNCTION_220
0x4005b1b	              0x5d	                                 pop rbp	      5389	pci.c	FUNCTION_220
0x4005b1c	            0x415c	                                 pop r12	      5389	pci.c	FUNCTION_220
0x4005b1e	            0x415d	                                 pop r13	      5389	pci.c	FUNCTION_220
0x4005b20	            0x415e	                                 pop r14	      5389	pci.c	FUNCTION_220
0x4005b22	              0xc3	                                     ret	      5389	pci.c	FUNCTION_220
0x4005b23	    0x488b05000000	            mov rax, qword [0x04005b2a] 	      5332	pci.c	FUNCTION_219	IF_1
0x4005b2a	          0x4885c0	                           test rax, rax	      5332	pci.c	FUNCTION_219	IF_1
0x4005b2d	            0x756e	                           jne 0x4005b9d	      5332	pci.c	FUNCTION_219	IF_1
0x4005b2f	          0x83e501	                              and ebp, 1	      5370	pci.c	FUNCTION_220	IF_4
0x4005b32	            0x745b	                            je 0x4005b8f	      5370	pci.c	FUNCTION_220	IF_4
0x4005b34	        0x498b5e10	            mov rbx, qword [r14 + 0x10] 	      5373	pci.c	FUNCTION_220
0x4005b38	          0x4885db	                           test rbx, rbx	      5374	pci.c	FUNCTION_220	WHILE_1
0x4005b3b	            0x7523	                           jne 0x4005b60	      5374	pci.c	FUNCTION_220	WHILE_1
0x4005b3d	            0xeb50	                           jmp 0x4005b8f	      5374	pci.c	FUNCTION_220	WHILE_1
0x4005b3f	          0x83ca08	                               or edx, 8	      5380	pci.c	FUNCTION_220	WHILE_1	IF_5	IF_6
0x4005b42	      0x6689542406	                  mov word [rsp + 6], dx	      5380	pci.c	FUNCTION_220	WHILE_1	IF_5	IF_6
0x4005b47	           0xfb7d2	                           movzx edx, dx	      5383	pci.c	FUNCTION_220	WHILE_1	IF_5	CALL_6
0x4005b4a	      0xbe3e000000	                           mov esi, 0x3e	      5383	pci.c	FUNCTION_220	WHILE_1	IF_5	CALL_6
0x4005b4f	          0x4889ef	                            mov rdi, rbp	      5383	pci.c	FUNCTION_220	WHILE_1	IF_5	CALL_6
0x4005b52	      0xe800000000	                          call 0x4005b57	      5383	pci.c	FUNCTION_220	WHILE_1	IF_5	CALL_6
0x4005b57	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      5386	pci.c	FUNCTION_220	WHILE_1
0x4005b5b	          0x4885db	                           test rbx, rbx	      5374	pci.c	FUNCTION_220	WHILE_1
0x4005b5e	            0x742f	                            je 0x4005b8f	      5374	pci.c	FUNCTION_220	WHILE_1
0x4005b60	        0x488b6b38	            mov rbp, qword [rbx + 0x38] 	      5375	pci.c	FUNCTION_220	WHILE_1
0x4005b64	          0x4885ed	                           test rbp, rbp	      5376	pci.c	FUNCTION_220	WHILE_1	IF_5
0x4005b67	            0x74ee	                            je 0x4005b57	      5376	pci.c	FUNCTION_220	WHILE_1	IF_5
0x4005b69	      0x488d542406	                      lea rdx, [rsp + 6]	      5377	pci.c	FUNCTION_220	WHILE_1	IF_5	CALL_5
0x4005b6e	      0xbe3e000000	                           mov esi, 0x3e	      5377	pci.c	FUNCTION_220	WHILE_1	IF_5	CALL_5
0x4005b73	          0x4889ef	                            mov rdi, rbp	      5377	pci.c	FUNCTION_220	WHILE_1	IF_5	CALL_5
0x4005b76	      0xe800000000	                          call 0x4005b7b	      5377	pci.c	FUNCTION_220	WHILE_1	IF_5	CALL_5
0x4005b7b	          0x4584e4	                         test r12b, r12b	      5379	pci.c	FUNCTION_220	WHILE_1	IF_5	IF_6
0x4005b7e	       0xfb7542406	               movzx edx, word [rsp + 6]	      5380	pci.c	FUNCTION_220	WHILE_1	IF_5	IF_6
0x4005b83	            0x75ba	                           jne 0x4005b3f	      5379	pci.c	FUNCTION_220	WHILE_1	IF_5	IF_6
0x4005b85	          0x83e2f7	                     and edx, 0xfffffff7	      5382	pci.c	FUNCTION_220	WHILE_1	IF_5	ELSE_2
0x4005b88	      0x6689542406	                  mov word [rsp + 6], dx	      5382	pci.c	FUNCTION_220	WHILE_1	IF_5	ELSE_2
0x4005b8d	            0xebb8	                           jmp 0x4005b47	      5382	pci.c	FUNCTION_220	WHILE_1	IF_5	ELSE_2
0x4005b8f	            0x31c0	                            xor eax, eax	      5371	pci.c	FUNCTION_220	IF_4
0x4005b91	      0xe96cffffff	                           jmp 0x4005b02	      5371	pci.c	FUNCTION_220	IF_4
0x4005b96	             0xf0b	                                     ud2	      5371	pci.c	FUNCTION_220	IF_4
0x4005b98	      0xe93dffffff	                           jmp 0x4005ada	      5354	pci.c	FUNCTION_220	CALL_1
0x4005b9d	        0x400fb6f6	                          movzx esi, sil	      5333	pci.c	FUNCTION_219	IF_1	CALL_1
0x4005ba1	            0x89e9	                            mov ecx, ebp	      5333	pci.c	FUNCTION_219	IF_1	CALL_1
0x4005ba3	      0xe800000000	                          call 0x4005ba8	      5333	pci.c	FUNCTION_219	IF_1	CALL_1
0x4005ba8	            0x85c0	                           test eax, eax	      5358	pci.c	FUNCTION_220	IF_1
0x4005baa	     0xf8552ffffff	                           jne 0x4005b02	      5358	pci.c	FUNCTION_220	IF_1
0x4005bb0	          0x83e501	                              and ebp, 1	      5370	pci.c	FUNCTION_220	IF_4
0x4005bb3	     0xf857bffffff	                           jne 0x4005b34	      5370	pci.c	FUNCTION_220	IF_4
0x4005bb9	            0xebd4	                           jmp 0x4005b8f	      5370	pci.c	FUNCTION_220	IF_4
0x4005bbb	      0x488d542406	                      lea rdx, [rsp + 6]	      5362	pci.c	FUNCTION_220	IF_2	CALL_3
0x4005bc0	      0xbe04000000	                              mov esi, 4	      5362	pci.c	FUNCTION_220	IF_2	CALL_3
0x4005bc5	          0x4c89f7	                            mov rdi, r14	      5362	pci.c	FUNCTION_220	IF_2	CALL_3
0x4005bc8	      0xe800000000	                          call 0x4005bcd	      5362	pci.c	FUNCTION_220	IF_2	CALL_3
0x4005bcd	          0x4584ed	                         test r13b, r13b	      5363	pci.c	FUNCTION_220	IF_2	IF_3
0x4005bd0	            0x7425	                            je 0x4005bf7	      5363	pci.c	FUNCTION_220	IF_2	IF_3
0x4005bd2	      0x660b5c2406	                   or bx, word [rsp + 6]	      5364	pci.c	FUNCTION_220	IF_2	IF_3
0x4005bd7	      0x66895c2406	                  mov word [rsp + 6], bx	      5364	pci.c	FUNCTION_220	IF_2	IF_3
0x4005bdc	           0xfb7d3	                           movzx edx, bx	      5367	pci.c	FUNCTION_220	IF_2	CALL_4
0x4005bdf	      0xbe04000000	                              mov esi, 4	      5367	pci.c	FUNCTION_220	IF_2	CALL_4
0x4005be4	          0x4c89f7	                            mov rdi, r14	      5367	pci.c	FUNCTION_220	IF_2	CALL_4
0x4005be7	      0xe800000000	                          call 0x4005bec	      5367	pci.c	FUNCTION_220	IF_2	CALL_4
0x4005bec	          0x83e501	                              and ebp, 1	      5370	pci.c	FUNCTION_220	IF_4
0x4005bef	     0xf853fffffff	                           jne 0x4005b34	      5370	pci.c	FUNCTION_220	IF_4
0x4005bf5	            0xeb98	                           jmp 0x4005b8f	      5370	pci.c	FUNCTION_220	IF_4
0x4005bf7	            0xf7d3	                                 not ebx	      5366	pci.c	FUNCTION_220	IF_2	ELSE_1
0x4005bf9	      0x66235c2406	                  and bx, word [rsp + 6]	      5366	pci.c	FUNCTION_220	IF_2	ELSE_1
0x4005bfe	      0x66895c2406	                  mov word [rsp + 6], bx	      5366	pci.c	FUNCTION_220	IF_2	ELSE_1
0x4005c03	            0xebd7	                           jmp 0x4005bdc	      5366	pci.c	FUNCTION_220	IF_2	ELSE_1
0x4005c05	      0xe800000000	                          call 0x4005c0a	      5389	pci.c	FUNCTION_220
pci_clear_master	IF,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:DO,0:functions,0:WHILE,0	2
0x4000660	            0x31f6	                            xor esi, esi	      3732	pci.c	FUNCTION_152	CALL_1
0x4000662	      0xe969ffffff	                jmp sym.__pci_set_master	      3732	pci.c	FUNCTION_152	CALL_1
