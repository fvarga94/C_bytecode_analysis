acpi_ex_convert_to_integer	DO,0:SWITCH,2:ELSE,1:IF,4:functions,0:WHILE,0:CALL,14:FOR,1	56
0x4000158	          0x8a4709	                  mov al, byte [rdi + 9]	        50	exconvrt.c	FUNCTION_1	SWITCH_1
0x400015b	            0x3c01	                               cmp al, 1	        50	exconvrt.c	FUNCTION_1	SWITCH_1
0x400015d	            0x740c	                            je 0x400016b	        50	exconvrt.c	FUNCTION_1	SWITCH_1
0x400015f	     0xf8285000000	                            jb 0x40001ea	        50	exconvrt.c	FUNCTION_1	SWITCH_1
0x4000165	            0x3c03	                               cmp al, 3	        50	exconvrt.c	FUNCTION_1	SWITCH_1
0x4000167	            0x7608	                           jbe 0x4000171	        50	exconvrt.c	FUNCTION_1	SWITCH_1
0x4000169	            0xeb7f	                           jmp 0x40001ea	        50	exconvrt.c	FUNCTION_1	SWITCH_1
0x400016b	          0x48893e	                    mov qword [rsi], rdi	        55	exconvrt.c	FUNCTION_1	SWITCH_1
0x400016e	            0x31c0	                            xor eax, eax	        56	exconvrt.c	FUNCTION_1	SWITCH_1	CALL_2
0x4000170	              0xc3	                                     ret	       157	exconvrt.c	FUNCTION_1
0x4000171	              0x55	                                push rbp	        41	exconvrt.c	FUNCTION_1
0x4000172	          0x4889f8	                            mov rax, rdi	        41	exconvrt.c	FUNCTION_1
0x4000175	              0x53	                                push rbx	        41	exconvrt.c	FUNCTION_1
0x4000176	          0x4889f3	                            mov rbx, rsi	        41	exconvrt.c	FUNCTION_1
0x4000179	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	        63	exconvrt.c	FUNCTION_1	SWITCH_1
0x400017d	            0x7412	                            je 0x4000191	        85	exconvrt.c	FUNCTION_1	SWITCH_2
0x400017f	            0x85d2	                           test edx, edx	        96	exconvrt.c	FUNCTION_1	SWITCH_2	IF_1
0x4000181	            0x7407	                            je 0x400018a	        96	exconvrt.c	FUNCTION_1	SWITCH_2	IF_1
0x4000183	      0xe800000000	                          call 0x4000188	        97	exconvrt.c	FUNCTION_1	SWITCH_2	IF_1
0x4000188	            0xeb3c	                           jmp 0x40001c6	        97	exconvrt.c	FUNCTION_1	SWITCH_2	IF_1
0x400018a	      0xe800000000	                          call 0x400018f	       101	exconvrt.c	FUNCTION_1	SWITCH_2	ELSE_1
0x400018f	            0xeb35	                           jmp 0x40001c6	       101	exconvrt.c	FUNCTION_1	SWITCH_2	ELSE_1
0x4000191	          0x8b5018	            mov edx, dword [rax + 0x18] 	        64	exconvrt.c	FUNCTION_1	SWITCH_1
0x4000194	      0xb80a300000	                         mov eax, 0x300a	       112	exconvrt.c	FUNCTION_1	SWITCH_2	IF_2	CALL_8
0x4000199	            0x85d2	                           test edx, edx	       111	exconvrt.c	FUNCTION_1	SWITCH_2	IF_2
0x400019b	            0x7453	                            je 0x40001f0	       111	exconvrt.c	FUNCTION_1	SWITCH_2	IF_2
0x400019d	     0xfb605000000	           movzx eax, byte [0x040001a4] 	       117	exconvrt.c	FUNCTION_1	SWITCH_2	IF_3
0x40001a4	            0x39c2	                            cmp edx, eax	       117	exconvrt.c	FUNCTION_1	SWITCH_2	IF_3
0x40001a6	           0xf47d0	                          cmova edx, eax	       117	exconvrt.c	FUNCTION_1	SWITCH_2	IF_3
0x40001a9	            0x31c9	                            xor ecx, ecx	       125	exconvrt.c	FUNCTION_1	SWITCH_2	FOR_1
0x40001ab	            0x31f6	                            xor esi, esi	       125	exconvrt.c	FUNCTION_1	SWITCH_2	FOR_1
0x40001ad	            0x31c0	                            xor eax, eax	        81	exconvrt.c	FUNCTION_1
0x40001af	            0x39f2	                            cmp edx, esi	       125	exconvrt.c	FUNCTION_1	SWITCH_2	FOR_1
0x40001b1	            0x7613	                           jbe 0x40001c6	       125	exconvrt.c	FUNCTION_1	SWITCH_2	FOR_1
0x40001b3	      0x440fb60437	             movzx r8d, byte [rdi + rsi]	       131	exconvrt.c	FUNCTION_1	SWITCH_2	FOR_1
0x40001b8	          0x48ffc6	                                 inc rsi	       131	exconvrt.c	FUNCTION_1	SWITCH_2	FOR_1
0x40001bb	          0x49d3e0	                              shl r8, cl	       131	exconvrt.c	FUNCTION_1	SWITCH_2	FOR_1
0x40001be	          0x83c108	                              add ecx, 8	       131	exconvrt.c	FUNCTION_1	SWITCH_2	FOR_1
0x40001c1	          0x4c09c0	                              or rax, r8	       131	exconvrt.c	FUNCTION_1	SWITCH_2	FOR_1
0x40001c4	            0xebe9	                           jmp 0x40001af	       131	exconvrt.c	FUNCTION_1	SWITCH_2	FOR_1
0x40001c6	          0x4889c7	                            mov rdi, rax	       144	exconvrt.c	FUNCTION_1	CALL_9
0x40001c9	      0xe800000000	                          call 0x40001ce	       144	exconvrt.c	FUNCTION_1	CALL_9
0x40001ce	          0x4889c5	                            mov rbp, rax	       144	exconvrt.c	FUNCTION_1	CALL_9
0x40001d1	      0xb804000000	                              mov eax, 4	       146	exconvrt.c	FUNCTION_1	IF_4	CALL_10
0x40001d6	          0x4885ed	                           test rbp, rbp	       145	exconvrt.c	FUNCTION_1	IF_4
0x40001d9	            0x7415	                            je 0x40001f0	       145	exconvrt.c	FUNCTION_1	IF_4
0x40001db	          0x4889ef	                            mov rdi, rbp	       154	exconvrt.c	FUNCTION_1	CALL_13
0x40001de	      0xe800000000	                          call 0x40001e3	       154	exconvrt.c	FUNCTION_1	CALL_13
0x40001e3	          0x48892b	                    mov qword [rbx], rbp	       155	exconvrt.c	FUNCTION_1
0x40001e6	            0x31c0	                            xor eax, eax	       156	exconvrt.c	FUNCTION_1	CALL_14
0x40001e8	            0xeb06	                           jmp 0x40001f0	       156	exconvrt.c	FUNCTION_1	CALL_14
0x40001ea	      0xb808000000	                              mov eax, 8	        69	exconvrt.c	FUNCTION_1	SWITCH_1	CALL_3
0x40001ef	              0xc3	                                     ret	        69	exconvrt.c	FUNCTION_1	SWITCH_1	CALL_3
0x40001f0	              0x5b	                                 pop rbx	       157	exconvrt.c	FUNCTION_1
0x40001f1	              0x5d	                                 pop rbp	       157	exconvrt.c	FUNCTION_1
0x40001f2	              0xc3	                                     ret	       157	exconvrt.c	FUNCTION_1
acpi_ex_convert_to_target_type	DO,0:SWITCH,3:ELSE,0:IF,2:functions,0:WHILE,0:CALL,13:FOR,0	70
0x40003ea	              0x53	                                push rbx	       552	exconvrt.c	FUNCTION_5
0x40003eb	          0x488932	                    mov qword [rdx], rsi	       559	exconvrt.c	FUNCTION_5
0x40003ee	          0x4889cb	                            mov rbx, rcx	       552	exconvrt.c	FUNCTION_5
0x40003f1	    0x488b81800300	           mov rax, qword [rcx + 0x380] 	       565	exconvrt.c	FUNCTION_5	SWITCH_1	CALL_2
0x40003f8	          0x4189f8	                            mov r8d, edi	       552	exconvrt.c	FUNCTION_5
0x40003fb	          0x4889f7	                            mov rdi, rsi	       552	exconvrt.c	FUNCTION_5
0x40003fe	          0x8b4804	                mov ecx, dword [rax + 4]	       565	exconvrt.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000401	          0x83e11f	                           and ecx, 0x1f	       565	exconvrt.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000404	          0x83f912	                           cmp ecx, 0x12	       565	exconvrt.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000407	     0xf87a0000000	                            ja 0x40004ad	       565	exconvrt.c	FUNCTION_5	SWITCH_1	CALL_2
0x400040d	      0xb801000000	                              mov eax, 1	       565	exconvrt.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000412	          0x4889d6	                            mov rsi, rdx	       565	exconvrt.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000415	          0x4889c2	                            mov rdx, rax	       565	exconvrt.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000418	          0x48d3e2	                             shl rdx, cl	       565	exconvrt.c	FUNCTION_5	SWITCH_1	CALL_2
0x400041b	    0xf7c200800400	                       test edx, 0x48000	       565	exconvrt.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000421	            0x7533	                           jne 0x4000456	       565	exconvrt.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000423	            0x31c0	                            xor eax, eax	       553	exconvrt.c	FUNCTION_5
0x4000425	    0xf7c200080300	                       test edx, 0x30800	       553	exconvrt.c	FUNCTION_5
0x400042b	            0x750b	                           jne 0x4000438	       553	exconvrt.c	FUNCTION_5
0x400042d	          0x80e640	                            and dh, 0x40	       553	exconvrt.c	FUNCTION_5
0x4000430	     0xf85bc000000	                           jne 0x40004f2	       553	exconvrt.c	FUNCTION_5
0x4000436	            0xeb75	                           jmp 0x40004ad	       553	exconvrt.c	FUNCTION_5
0x4000438	        0x4183f811	                           cmp r8d, 0x11	       570	exconvrt.c	FUNCTION_5	SWITCH_1	SWITCH_2
0x400043c	     0xf84b0000000	                            je 0x40004f2	       570	exconvrt.c	FUNCTION_5	SWITCH_1	SWITCH_2
0x4000442	         0xfb65709	               movzx edx, byte [rdi + 9]	       581	exconvrt.c	FUNCTION_5	SWITCH_1	SWITCH_2	IF_1
0x4000446	          0x4139d0	                            cmp r8d, edx	       581	exconvrt.c	FUNCTION_5	SWITCH_1	SWITCH_2	IF_1
0x4000449	     0xf84a3000000	                            je 0x40004f2	       581	exconvrt.c	FUNCTION_5	SWITCH_1	SWITCH_2	IF_1
0x400044f	            0x31c0	                            xor eax, eax	       663	exconvrt.c	FUNCTION_5	IF_2
0x4000451	      0xe99c000000	                           jmp 0x40004f2	       663	exconvrt.c	FUNCTION_5	IF_2
0x4000456	        0x4183f813	                           cmp r8d, 0x13	       663	exconvrt.c	FUNCTION_5	IF_2
0x400045a	            0x7734	                            ja 0x4000490	       663	exconvrt.c	FUNCTION_5	IF_2
0x400045c	          0x4488c1	                             mov cl, r8b	       663	exconvrt.c	FUNCTION_5	IF_2
0x400045f	          0x48d3e0	                             shl rax, cl	       663	exconvrt.c	FUNCTION_5	IF_2
0x4000462	      0xa902400c00	                       test eax, 0xc4002	       663	exconvrt.c	FUNCTION_5	IF_2
0x4000467	            0x7514	                           jne 0x400047d	       663	exconvrt.c	FUNCTION_5	IF_2
0x4000469	            0xa808	                              test al, 8	       663	exconvrt.c	FUNCTION_5	IF_2
0x400046b	            0x751c	                           jne 0x4000489	       663	exconvrt.c	FUNCTION_5	IF_2
0x400046d	            0xa804	                              test al, 4	       663	exconvrt.c	FUNCTION_5	IF_2
0x400046f	            0x741f	                            je 0x4000490	       663	exconvrt.c	FUNCTION_5	IF_2
0x4000471	      0xba02000000	                              mov edx, 2	       615	exconvrt.c	FUNCTION_5	SWITCH_1	SWITCH_3
0x4000476	      0xe800000000	                          call 0x400047b	       615	exconvrt.c	FUNCTION_5	SWITCH_1	SWITCH_3
0x400047b	            0xeb6c	                           jmp 0x40004e9	       618	exconvrt.c	FUNCTION_5	SWITCH_1	SWITCH_3
0x400047d	      0xba01000000	                              mov edx, 1	       605	exconvrt.c	FUNCTION_5	SWITCH_1	SWITCH_3
0x4000482	      0xe800000000	                          call 0x4000487	       605	exconvrt.c	FUNCTION_5	SWITCH_1	SWITCH_3
0x4000487	            0xeb60	                           jmp 0x40004e9	       608	exconvrt.c	FUNCTION_5	SWITCH_1	SWITCH_3
0x4000489	      0xe800000000	                          call 0x400048e	       625	exconvrt.c	FUNCTION_5	SWITCH_1	SWITCH_3
0x400048e	            0xeb59	                           jmp 0x40004e9	       627	exconvrt.c	FUNCTION_5	SWITCH_1	SWITCH_3
0x4000490	          0x4489c1	                            mov ecx, r8d	       631	exconvrt.c	FUNCTION_5	SWITCH_1	SWITCH_3	CALL_9
0x4000493	    0x48c7c2000000	                              mov rdx, 0	       631	exconvrt.c	FUNCTION_5	SWITCH_1	SWITCH_3	CALL_9
0x400049a	      0xbe79020000	                          mov esi, 0x279	       631	exconvrt.c	FUNCTION_5	SWITCH_1	SWITCH_3	CALL_9
0x400049f	    0x48c7c7000000	                              mov rdi, 0	       631	exconvrt.c	FUNCTION_5	SWITCH_1	SWITCH_3	CALL_9
0x40004a6	      0xe800000000	                          call 0x40004ab	       631	exconvrt.c	FUNCTION_5	SWITCH_1	SWITCH_3	CALL_9
0x40004ab	            0xeb35	                           jmp 0x40004e2	       631	exconvrt.c	FUNCTION_5	SWITCH_1	SWITCH_3	CALL_9
0x40004ad	          0x4489c7	                            mov edi, r8d	       647	exconvrt.c	FUNCTION_5	SWITCH_1	CALL_10
0x40004b0	      0xe800000000	                          call 0x40004b5	       647	exconvrt.c	FUNCTION_5	SWITCH_1	CALL_10
0x40004b5	          0x4989c1	                             mov r9, rax	       647	exconvrt.c	FUNCTION_5	SWITCH_1	CALL_10
0x40004b8	    0x488b83800300	           mov rax, qword [rbx + 0x380] 	       647	exconvrt.c	FUNCTION_5	SWITCH_1	CALL_10
0x40004bf	      0x440fb7430a	            movzx r8d, word [rbx + 0xa] 	       647	exconvrt.c	FUNCTION_5	SWITCH_1	CALL_10
0x40004c4	    0x48c7c2000000	                              mov rdx, 0	       647	exconvrt.c	FUNCTION_5	SWITCH_1	CALL_10
0x40004cb	      0xbe8c020000	                          mov esi, 0x28c	       647	exconvrt.c	FUNCTION_5	SWITCH_1	CALL_10
0x40004d0	    0x48c7c7000000	                              mov rdi, 0	       647	exconvrt.c	FUNCTION_5	SWITCH_1	CALL_10
0x40004d7	          0x8b4804	                mov ecx, dword [rax + 4]	       647	exconvrt.c	FUNCTION_5	SWITCH_1	CALL_10
0x40004da	          0x83e11f	                           and ecx, 0x1f	       647	exconvrt.c	FUNCTION_5	SWITCH_1	CALL_10
0x40004dd	      0xe800000000	                          call 0x40004e2	       647	exconvrt.c	FUNCTION_5	SWITCH_1	CALL_10
0x40004e2	      0xb80f300000	                         mov eax, 0x300f	       653	exconvrt.c	FUNCTION_5	SWITCH_1
0x40004e7	            0xeb09	                           jmp 0x40004f2	       653	exconvrt.c	FUNCTION_5	SWITCH_1
0x40004e9	          0x83f808	                              cmp eax, 8	       662	exconvrt.c	FUNCTION_5	IF_2
0x40004ec	     0xf845dffffff	                            je 0x400044f	       662	exconvrt.c	FUNCTION_5	IF_2
0x40004f2	              0x5b	                                 pop rbx	       667	exconvrt.c	FUNCTION_5
0x40004f3	              0xc3	                                     ret	       667	exconvrt.c	FUNCTION_5
acpi_ex_convert_to_ascii	DO,0:SWITCH,2:ELSE,0:IF,3:functions,0:WHILE,0:CALL,5:FOR,3	86
0x4000040	            0x4157	                                push r15	       261	exconvrt.c	FUNCTION_3
0x4000042	            0x4156	                                push r14	       261	exconvrt.c	FUNCTION_3
0x4000044	            0x4155	                                push r13	       261	exconvrt.c	FUNCTION_3
0x4000046	            0x4154	                                push r12	       261	exconvrt.c	FUNCTION_3
0x4000048	          0x4989d5	                            mov r13, rdx	       261	exconvrt.c	FUNCTION_3
0x400004b	              0x55	                                push rbp	       261	exconvrt.c	FUNCTION_3
0x400004c	              0x53	                                push rbx	       261	exconvrt.c	FUNCTION_3
0x400004d	          0x4989fc	                            mov r12, rdi	       261	exconvrt.c	FUNCTION_3
0x4000050	        0x4883ec18	                           sub rsp, 0x18	       261	exconvrt.c	FUNCTION_3
0x4000054	    0x65488b042528	                mov rax, qword gs:[0x28]	       261	exconvrt.c	FUNCTION_3
0x400005d	      0x4889442410	             mov qword [rsp + 0x10], rax	       261	exconvrt.c	FUNCTION_3
0x4000062	            0x31c0	                            xor eax, eax	       261	exconvrt.c	FUNCTION_3
0x4000064	        0x6683fe0a	                             cmp si, 0xa	       273	exconvrt.c	FUNCTION_3	SWITCH_1
0x4000068	            0x7418	                            je 0x4000082	       273	exconvrt.c	FUNCTION_3	SWITCH_1
0x400006a	        0x6683fe10	                            cmp si, 0x10	       273	exconvrt.c	FUNCTION_3	SWITCH_1
0x400006e	     0xf85be000000	                           jne 0x4000132	       273	exconvrt.c	FUNCTION_3	SWITCH_1
0x4000074	           0xfb6c9	                           movzx ecx, cl	       326	exconvrt.c	FUNCTION_3	SWITCH_1	CALL_3
0x4000077	          0x4989d6	                            mov r14, rdx	       326	exconvrt.c	FUNCTION_3	SWITCH_1	CALL_3
0x400007a	          0x8d1c09	                    lea ebx, [rcx + rcx]	       326	exconvrt.c	FUNCTION_3	SWITCH_1	CALL_3
0x400007d	          0x8d6bff	                      lea ebp, [rbx - 1]	       327	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_3
0x4000080	            0xeb77	                           jmp 0x40000f9	       327	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_3
0x4000082	          0x80f901	                               cmp cl, 1	       278	exconvrt.c	FUNCTION_3	SWITCH_1	SWITCH_2
0x4000085	      0xbd03000000	                              mov ebp, 3	       281	exconvrt.c	FUNCTION_3	SWITCH_1	SWITCH_2
0x400008a	            0x7410	                            je 0x400009c	       278	exconvrt.c	FUNCTION_3	SWITCH_1	SWITCH_2
0x400008c	          0x80f904	                               cmp cl, 4	       292	exconvrt.c	FUNCTION_3	SWITCH_1	SWITCH_2
0x400008f	      0xbd14000000	                           mov ebp, 0x14	       292	exconvrt.c	FUNCTION_3	SWITCH_1	SWITCH_2
0x4000094	      0xb80a000000	                            mov eax, 0xa	       292	exconvrt.c	FUNCTION_3	SWITCH_1	SWITCH_2
0x4000099	           0xf44e8	                          cmove ebp, eax	       292	exconvrt.c	FUNCTION_3	SWITCH_1	SWITCH_2
0x400009c	    0xc74424040000	                  mov dword [rsp + 4], 0	       297	exconvrt.c	FUNCTION_3	SWITCH_1
0x40000a4	          0x41b601	                             mov r14b, 1	       296	exconvrt.c	FUNCTION_3	SWITCH_1
0x40000a7	            0x31db	                            xor ebx, ebx	       265	exconvrt.c	FUNCTION_3
0x40000a9	      0x4c89642408	                mov qword [rsp + 8], r12	       303	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_1
0x40000ae	          0x4531ff	                          xor r15d, r15d	       304	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_1	FOR_2
0x40000b1	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       305	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_1	FOR_2	CALL_2
0x40000b6	      0x488d4c2404	                      lea rcx, [rsp + 4]	       305	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_1	FOR_2	CALL_2
0x40000bb	      0x488d542408	                      lea rdx, [rsp + 8]	       305	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_1	FOR_2	CALL_2
0x40000c0	      0xbe0a000000	                            mov esi, 0xa	       305	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_1	FOR_2	CALL_2
0x40000c5	          0x41ffc7	                                inc r15d	       304	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_1	FOR_2
0x40000c8	      0xe800000000	                          call 0x40000cd	       305	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_1	FOR_2	CALL_2
0x40000cd	          0x4139ef	                           cmp r15d, ebp	       304	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_1	FOR_2
0x40000d0	            0x72df	                            jb 0x40000b1	       304	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_1	FOR_2
0x40000d2	        0x8b442404	                mov eax, dword [rsp + 4]	       311	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_1	IF_1
0x40000d6	            0x85c0	                           test eax, eax	       311	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_1	IF_1
0x40000d8	            0x7505	                           jne 0x40000df	       311	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_1	IF_1
0x40000da	          0x4584f6	                         test r14b, r14b	       315	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_1	IF_2
0x40000dd	            0x7511	                           jne 0x40000f0	       315	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_1	IF_2
0x40000df	            0x89da	                            mov edx, ebx	       316	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_1	IF_2
0x40000e1	          0x83c030	                           add eax, 0x30	       316	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_1	IF_2
0x40000e4	            0xffc3	                                 inc ebx	       317	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_1	IF_2
0x40000e6	      0x4188441500	                mov byte [r13 + rdx], al	       316	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_1	IF_2
0x40000eb	          0x4531f6	                          xor r14d, r14d	       317	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_1	IF_2
0x40000ee	            0xeb03	                           jmp 0x40000f3	       317	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_1	IF_2
0x40000f0	          0x41b601	                             mov r14b, 1	       317	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_1	IF_2
0x40000f3	            0xffcd	                                 dec ebp	       299	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_1
0x40000f5	            0x75b2	                           jne 0x40000a9	       299	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_1
0x40000f7	            0xeb1f	                           jmp 0x4000118	       299	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_1
0x40000f9	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       327	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_3
0x40000fc	            0x741a	                            je 0x4000118	       327	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_3
0x40000fe	    0x8d34ad000000	                        lea esi, [rbp*4]	       332	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_3	CALL_5
0x4000105	          0x4c89e7	                            mov rdi, r12	       332	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_3	CALL_5
0x4000108	            0xffcd	                                 dec ebp	       327	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_3
0x400010a	          0x49ffc6	                                 inc r14	       327	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_3
0x400010d	      0xe800000000	                          call 0x4000112	       332	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_3	CALL_5
0x4000112	        0x418846ff	                  mov byte [r14 - 1], al	       331	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_3
0x4000116	            0xebe1	                           jmp 0x40000f9	       331	exconvrt.c	FUNCTION_3	SWITCH_1	FOR_3
0x4000118	            0x85db	                           test ebx, ebx	       347	exconvrt.c	FUNCTION_3	IF_3
0x400011a	            0x750a	                           jne 0x4000126	       347	exconvrt.c	FUNCTION_3	IF_3
0x400011c	      0x41c6450030	                    mov byte [r13], 0x30	       348	exconvrt.c	FUNCTION_3	IF_3
0x4000121	      0xbb01000000	                              mov ebx, 1	       349	exconvrt.c	FUNCTION_3	IF_3
0x4000126	            0x89d8	                            mov eax, ebx	       352	exconvrt.c	FUNCTION_3
0x4000128	    0x41c644050000	                 mov byte [r13 + rax], 0	       352	exconvrt.c	FUNCTION_3
0x400012e	            0x89d8	                            mov eax, ebx	       353	exconvrt.c	FUNCTION_3
0x4000130	            0xeb02	                           jmp 0x4000134	       353	exconvrt.c	FUNCTION_3
0x4000132	            0x31c0	                            xor eax, eax	       338	exconvrt.c	FUNCTION_3	SWITCH_1
0x4000134	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       354	exconvrt.c	FUNCTION_3
0x4000139	    0x6548333c2528	                xor rdi, qword gs:[0x28]	       354	exconvrt.c	FUNCTION_3
0x4000142	            0x7405	                            je 0x4000149	       354	exconvrt.c	FUNCTION_3
0x4000144	      0xe800000000	                          call 0x4000149	       354	exconvrt.c	FUNCTION_3
0x4000149	        0x4883c418	                           add rsp, 0x18	       354	exconvrt.c	FUNCTION_3
0x400014d	              0x5b	                                 pop rbx	       354	exconvrt.c	FUNCTION_3
0x400014e	              0x5d	                                 pop rbp	       354	exconvrt.c	FUNCTION_3
0x400014f	            0x415c	                                 pop r12	       354	exconvrt.c	FUNCTION_3
0x4000151	            0x415d	                                 pop r13	       354	exconvrt.c	FUNCTION_3
0x4000153	            0x415e	                                 pop r14	       354	exconvrt.c	FUNCTION_3
0x4000155	            0x415f	                                 pop r15	       354	exconvrt.c	FUNCTION_3
0x4000157	              0xc3	                                     ret	       354	exconvrt.c	FUNCTION_3
acpi_ex_convert_to_buffer	DO,0:SWITCH,1:ELSE,0:IF,2:functions,0:WHILE,0:CALL,10:FOR,0	45
0x40001f3	            0x4154	                                push r12	       176	exconvrt.c	FUNCTION_2
0x40001f5	              0x55	                                push rbp	       176	exconvrt.c	FUNCTION_2
0x40001f6	          0x4989f4	                            mov r12, rsi	       176	exconvrt.c	FUNCTION_2
0x40001f9	              0x53	                                push rbx	       176	exconvrt.c	FUNCTION_2
0x40001fa	          0x8a4709	                  mov al, byte [rdi + 9]	       182	exconvrt.c	FUNCTION_2	SWITCH_1
0x40001fd	          0x4889fb	                            mov rbx, rdi	       176	exconvrt.c	FUNCTION_2
0x4000200	            0x3c02	                               cmp al, 2	       182	exconvrt.c	FUNCTION_2	SWITCH_1
0x4000202	            0x7443	                            je 0x4000247	       182	exconvrt.c	FUNCTION_2	SWITCH_1
0x4000204	            0x3c03	                               cmp al, 3	       182	exconvrt.c	FUNCTION_2	SWITCH_1
0x4000206	            0x740b	                            je 0x4000213	       182	exconvrt.c	FUNCTION_2	SWITCH_1
0x4000208	            0xfec8	                                  dec al	       182	exconvrt.c	FUNCTION_2	SWITCH_1
0x400020a	      0xb808000000	                              mov eax, 8	       234	exconvrt.c	FUNCTION_2	SWITCH_1	CALL_9
0x400020f	            0x7563	                           jne 0x4000274	       182	exconvrt.c	FUNCTION_2	SWITCH_1
0x4000211	            0xeb06	                           jmp 0x4000219	       182	exconvrt.c	FUNCTION_2	SWITCH_1
0x4000213	        0x49893c24	                    mov qword [r12], rdi	       187	exconvrt.c	FUNCTION_2	SWITCH_1
0x4000217	            0xeb59	                           jmp 0x4000272	       187	exconvrt.c	FUNCTION_2	SWITCH_1
0x4000219	     0xfb63d000000	           movzx edi, byte [0x04000220] 	       195	exconvrt.c	FUNCTION_2	SWITCH_1
0x4000220	      0xe800000000	                          call 0x4000225	       195	exconvrt.c	FUNCTION_2	SWITCH_1
0x4000225	          0x4885c0	                           test rax, rax	       197	exconvrt.c	FUNCTION_2	SWITCH_1	IF_1
0x4000228	          0x4889c5	                            mov rbp, rax	       195	exconvrt.c	FUNCTION_2	SWITCH_1
0x400022b	            0x7507	                           jne 0x4000234	       197	exconvrt.c	FUNCTION_2	SWITCH_1	IF_1
0x400022d	      0xb804000000	                              mov eax, 4	       198	exconvrt.c	FUNCTION_2	SWITCH_1	IF_1	CALL_4
0x4000232	            0xeb40	                           jmp 0x4000274	       198	exconvrt.c	FUNCTION_2	SWITCH_1	IF_1	CALL_4
0x4000234	     0xfb60d000000	           movzx ecx, byte [0x0400023b] 	       204	exconvrt.c	FUNCTION_2	SWITCH_1	CALL_5
0x400023b	        0x488d7310	                   lea rsi, [rbx + 0x10]	       204	exconvrt.c	FUNCTION_2	SWITCH_1	CALL_5
0x400023f	        0x488b7810	            mov rdi, qword [rax + 0x10] 	       204	exconvrt.c	FUNCTION_2	SWITCH_1	CALL_5
0x4000243	            0xf3a4	    rep movsb byte [rdi], byte ptr [rsi]	       204	exconvrt.c	FUNCTION_2	SWITCH_1	CALL_5
0x4000245	            0xeb23	                           jmp 0x400026a	       206	exconvrt.c	FUNCTION_2	SWITCH_1
0x4000247	          0x8b7f18	            mov edi, dword [rdi + 0x18] 	       218	exconvrt.c	FUNCTION_2	SWITCH_1	CALL_6
0x400024a	          0x48ffc7	                                 inc rdi	       218	exconvrt.c	FUNCTION_2	SWITCH_1	CALL_6
0x400024d	      0xe800000000	                          call 0x4000252	       218	exconvrt.c	FUNCTION_2	SWITCH_1	CALL_6
0x4000252	          0x4885c0	                           test rax, rax	       221	exconvrt.c	FUNCTION_2	SWITCH_1	IF_2
0x4000255	          0x4889c5	                            mov rbp, rax	       218	exconvrt.c	FUNCTION_2	SWITCH_1	CALL_6
0x4000258	            0x74d3	                            je 0x400022d	       221	exconvrt.c	FUNCTION_2	SWITCH_1	IF_2
0x400025a	          0x8b5318	            mov edx, dword [rbx + 0x18] 	       228	exconvrt.c	FUNCTION_2	SWITCH_1	CALL_8
0x400025d	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       228	exconvrt.c	FUNCTION_2	SWITCH_1	CALL_8
0x4000261	        0x488b7810	            mov rdi, qword [rax + 0x10] 	       228	exconvrt.c	FUNCTION_2	SWITCH_1	CALL_8
0x4000265	      0xe800000000	                          call 0x400026a	       228	exconvrt.c	FUNCTION_2	SWITCH_1	CALL_8
0x400026a	        0x804d0c04	                  or byte [rbp + 0xc], 4	       239	exconvrt.c	FUNCTION_2
0x400026e	        0x49892c24	                    mov qword [r12], rbp	       240	exconvrt.c	FUNCTION_2
0x4000272	            0x31c0	                            xor eax, eax	       241	exconvrt.c	FUNCTION_2	CALL_10
0x4000274	              0x5b	                                 pop rbx	       242	exconvrt.c	FUNCTION_2
0x4000275	              0x5d	                                 pop rbp	       242	exconvrt.c	FUNCTION_2
0x4000276	            0x415c	                                 pop r12	       242	exconvrt.c	FUNCTION_2
0x4000278	              0xc3	                                     ret	       242	exconvrt.c	FUNCTION_2
acpi_ex_convert_to_string	DO,0:SWITCH,3:ELSE,2:IF,6:functions,0:WHILE,0:CALL,12:FOR,2	117
0x4000279	          0x8a4709	                  mov al, byte [rdi + 9]	       384	exconvrt.c	FUNCTION_4	SWITCH_1
0x400027c	            0x3c02	                               cmp al, 2	       384	exconvrt.c	FUNCTION_4	SWITCH_1
0x400027e	            0x7425	                            je 0x40002a5	       384	exconvrt.c	FUNCTION_4	SWITCH_1
0x4000280	            0x4157	                                push r15	       374	exconvrt.c	FUNCTION_4
0x4000282	            0x4156	                                push r14	       374	exconvrt.c	FUNCTION_4
0x4000284	            0x3c03	                               cmp al, 3	       384	exconvrt.c	FUNCTION_4	SWITCH_1
0x4000286	            0x4155	                                push r13	       374	exconvrt.c	FUNCTION_4
0x4000288	            0x4154	                                push r12	       374	exconvrt.c	FUNCTION_4
0x400028a	              0x55	                                push rbp	       374	exconvrt.c	FUNCTION_4
0x400028b	              0x53	                                push rbx	       374	exconvrt.c	FUNCTION_4
0x400028c	          0x4889fb	                            mov rbx, rdi	       374	exconvrt.c	FUNCTION_4
0x400028f	              0x51	                                push rcx	       374	exconvrt.c	FUNCTION_4
0x4000290	        0x48893424	                    mov qword [rsp], rsi	       374	exconvrt.c	FUNCTION_4
0x4000294	            0x7477	                            je 0x400030d	       384	exconvrt.c	FUNCTION_4	SWITCH_1
0x4000296	            0xfec8	                                  dec al	       384	exconvrt.c	FUNCTION_4	SWITCH_1
0x4000298	      0xb808000000	                              mov eax, 8	       525	exconvrt.c	FUNCTION_4	SWITCH_1	CALL_11
0x400029d	     0xf853b010000	                           jne 0x40003de	       384	exconvrt.c	FUNCTION_4	SWITCH_1
0x40002a3	            0xeb06	                           jmp 0x40002ab	       384	exconvrt.c	FUNCTION_4	SWITCH_1
0x40002a5	          0x48893e	                    mov qword [rsi], rdi	       389	exconvrt.c	FUNCTION_4	SWITCH_1
0x40002a8	            0x31c0	                            xor eax, eax	       390	exconvrt.c	FUNCTION_4	SWITCH_1	CALL_2
0x40002aa	              0xc3	                                     ret	       530	exconvrt.c	FUNCTION_4
0x40002ab	          0x83fa03	                              cmp edx, 3	       394	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_2
0x40002ae	            0x7411	                            je 0x40002c1	       394	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_2
0x40002b0	     0xfb63d000000	           movzx edi, byte [0x040002b7] 	       407	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_2	CALL_3
0x40002b7	    0x41bd10000000	                          mov r13d, 0x10	       379	exconvrt.c	FUNCTION_4
0x40002bd	             0x1ff	                            add edi, edi	       407	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_2	CALL_3
0x40002bf	            0xeb0b	                           jmp 0x40002cc	       408	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_2
0x40002c1	    0x41bd0a000000	                           mov r13d, 0xa	       400	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_2
0x40002c7	      0xbf14000000	                           mov edi, 0x14	       399	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_2
0x40002cc	      0xe800000000	                          call 0x40002d1	       415	exconvrt.c	FUNCTION_4	SWITCH_1
0x40002d1	          0x4885c0	                           test rax, rax	       417	exconvrt.c	FUNCTION_4	SWITCH_1	IF_1
0x40002d4	          0x4889c5	                            mov rbp, rax	       415	exconvrt.c	FUNCTION_4	SWITCH_1
0x40002d7	            0x750a	                           jne 0x40002e3	       417	exconvrt.c	FUNCTION_4	SWITCH_1	IF_1
0x40002d9	      0xb804000000	                              mov eax, 4	       418	exconvrt.c	FUNCTION_4	SWITCH_1	IF_1	CALL_5
0x40002de	      0xe9fb000000	                           jmp 0x40003de	       418	exconvrt.c	FUNCTION_4	SWITCH_1	IF_1	CALL_5
0x40002e3	        0x4c8b7010	            mov r14, qword [rax + 0x10] 	       421	exconvrt.c	FUNCTION_4	SWITCH_1
0x40002e7	     0xfb60d000000	           movzx ecx, byte [0x040002ee] 	       425	exconvrt.c	FUNCTION_4	SWITCH_1
0x40002ee	        0x410fb7f5	                         movzx esi, r13w	       425	exconvrt.c	FUNCTION_4	SWITCH_1
0x40002f2	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       425	exconvrt.c	FUNCTION_4	SWITCH_1
0x40002f6	          0x4c89f2	                            mov rdx, r14	       425	exconvrt.c	FUNCTION_4	SWITCH_1
0x40002f9	      0xe842fdffff	       call sym.acpi_ex_convert_to_ascii	       425	exconvrt.c	FUNCTION_4	SWITCH_1
0x40002fe	          0x894518	            mov dword [rbp + 0x18], eax 	       432	exconvrt.c	FUNCTION_4	SWITCH_1
0x4000301	            0x89c0	                            mov eax, eax	       433	exconvrt.c	FUNCTION_4	SWITCH_1
0x4000303	      0x41c6040600	                 mov byte [r14 + rax], 0	       433	exconvrt.c	FUNCTION_4	SWITCH_1
0x4000308	      0xe9c8000000	                           jmp 0x40003d5	       434	exconvrt.c	FUNCTION_4	SWITCH_1
0x400030d	          0x83fa02	                              cmp edx, 2	       440	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3
0x4000310	            0x7453	                            je 0x4000365	       440	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3
0x4000312	          0x83fa03	                              cmp edx, 3	       440	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3
0x4000315	            0x7416	                            je 0x400032d	       440	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3
0x4000317	            0xffca	                                 dec edx	       440	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3
0x4000319	      0xb801100000	                         mov eax, 0x1001	       482	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3	CALL_7
0x400031e	     0xf85ba000000	                           jne 0x40003de	       440	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3
0x4000324	        0x6b471803	         imul eax, dword [rdi + 0x18], 3	       478	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3
0x4000328	          0x41b42c	                          mov r12b, 0x2c	       380	exconvrt.c	FUNCTION_4
0x400032b	            0xeb3f	                           jmp 0x400036c	       380	exconvrt.c	FUNCTION_4
0x400032d	          0x8b7718	            mov esi, dword [rdi + 0x18] 	       452	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3	FOR_1
0x4000330	            0x31d2	                            xor edx, edx	       452	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3	FOR_1
0x4000332	            0x31c0	                            xor eax, eax	       452	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3	FOR_1
0x4000334	            0x39d6	                            cmp esi, edx	       452	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3	FOR_1
0x4000336	            0x7622	                           jbe 0x400035a	       452	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3	FOR_1
0x4000338	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       453	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3	FOR_1	IF_2
0x400033c	          0x8a0c11	                mov cl, byte [rcx + rdx]	       453	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3	FOR_1	IF_2
0x400033f	          0x80f963	                            cmp cl, 0x63	       453	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3	FOR_1	IF_2
0x4000342	            0x7605	                           jbe 0x4000349	       453	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3	FOR_1	IF_2
0x4000344	          0x83c004	                              add eax, 4	       454	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3	FOR_1	IF_2
0x4000347	            0xeb0c	                           jmp 0x4000355	       454	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3	FOR_1	IF_2
0x4000349	          0x8d7803	                      lea edi, [rax + 3]	       456	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3	FOR_1	ELSE_1	IF_3
0x400034c	          0x83c002	                              add eax, 2	       456	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3	FOR_1	ELSE_1	IF_3
0x400034f	          0x80f90a	                             cmp cl, 0xa	       456	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3	FOR_1	ELSE_1	IF_3
0x4000352	           0xf43c7	                         cmovae eax, edi	       456	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3	FOR_1	ELSE_1	IF_3
0x4000355	          0x48ffc2	                                 inc rdx	       456	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3	FOR_1	ELSE_1	IF_3
0x4000358	            0xebda	                           jmp 0x4000334	       456	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3	FOR_1	ELSE_1	IF_3
0x400035a	          0x41b42c	                          mov r12b, 0x2c	       380	exconvrt.c	FUNCTION_4
0x400035d	    0x41be0a000000	                           mov r14d, 0xa	       446	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3
0x4000363	            0xeb0d	                           jmp 0x4000372	       446	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3
0x4000365	        0x6b471803	         imul eax, dword [rdi + 0x18], 3	       470	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3
0x4000369	          0x41b420	                          mov r12b, 0x20	       469	exconvrt.c	FUNCTION_4	SWITCH_1	SWITCH_3
0x400036c	    0x41be10000000	                          mov r14d, 0x10	       379	exconvrt.c	FUNCTION_4
0x4000372	          0x83f801	                              cmp eax, 1	       491	exconvrt.c	FUNCTION_4	SWITCH_1	IF_4
0x4000375	          0x83d0ff	             adc eax, 0xffffffffffffffff	       491	exconvrt.c	FUNCTION_4	SWITCH_1	IF_4
0x4000378	            0x89c7	                            mov edi, eax	       494	exconvrt.c	FUNCTION_4	SWITCH_1
0x400037a	      0xe800000000	                          call 0x400037f	       494	exconvrt.c	FUNCTION_4	SWITCH_1
0x400037f	          0x4885c0	                           test rax, rax	       496	exconvrt.c	FUNCTION_4	SWITCH_1	IF_5
0x4000382	          0x4889c5	                            mov rbp, rax	       494	exconvrt.c	FUNCTION_4	SWITCH_1
0x4000385	     0xf844effffff	                            je 0x40002d9	       496	exconvrt.c	FUNCTION_4	SWITCH_1	IF_5
0x400038b	        0x4c8b6810	            mov r13, qword [rax + 0x10] 	       500	exconvrt.c	FUNCTION_4	SWITCH_1
0x400038f	          0x4531ff	                          xor r15d, r15d	       506	exconvrt.c	FUNCTION_4	SWITCH_1	FOR_2
0x4000392	          0x8b4318	            mov eax, dword [rbx + 0x18] 	       506	exconvrt.c	FUNCTION_4	SWITCH_1	FOR_2
0x4000395	          0x4139c7	                           cmp r15d, eax	       506	exconvrt.c	FUNCTION_4	SWITCH_1	FOR_2
0x4000398	            0x732f	                           jae 0x40003c9	       506	exconvrt.c	FUNCTION_4	SWITCH_1	FOR_2
0x400039a	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       508	exconvrt.c	FUNCTION_4	SWITCH_1	FOR_2
0x400039e	          0x4489f8	                           mov eax, r15d	       508	exconvrt.c	FUNCTION_4	SWITCH_1	FOR_2
0x40003a1	      0xb901000000	                              mov ecx, 1	       507	exconvrt.c	FUNCTION_4	SWITCH_1	FOR_2	CALL_10
0x40003a6	          0x4489f6	                           mov esi, r14d	       507	exconvrt.c	FUNCTION_4	SWITCH_1	FOR_2	CALL_10
0x40003a9	          0x41ffc7	                                inc r15d	       506	exconvrt.c	FUNCTION_4	SWITCH_1	FOR_2
0x40003ac	         0xfb63c02	             movzx edi, byte [rdx + rax]	       507	exconvrt.c	FUNCTION_4	SWITCH_1	FOR_2	CALL_10
0x40003b0	          0x4c89ea	                            mov rdx, r13	       507	exconvrt.c	FUNCTION_4	SWITCH_1	FOR_2	CALL_10
0x40003b3	      0xe888fcffff	       call sym.acpi_ex_convert_to_ascii	       507	exconvrt.c	FUNCTION_4	SWITCH_1	FOR_2	CALL_10
0x40003b8	            0x89c0	                            mov eax, eax	       507	exconvrt.c	FUNCTION_4	SWITCH_1	FOR_2	CALL_10
0x40003ba	      0x498d540500	                    lea rdx, [r13 + rax]	       507	exconvrt.c	FUNCTION_4	SWITCH_1	FOR_2	CALL_10
0x40003bf	      0x4d8d6c0501	                lea r13, [r13 + rax + 1]	       510	exconvrt.c	FUNCTION_4	SWITCH_1	FOR_2
0x40003c4	          0x448822	                    mov byte [rdx], r12b	       510	exconvrt.c	FUNCTION_4	SWITCH_1	FOR_2
0x40003c7	            0xebc9	                           jmp 0x4000392	       510	exconvrt.c	FUNCTION_4	SWITCH_1	FOR_2
0x40003c9	          0x83f801	                              cmp eax, 1	       518	exconvrt.c	FUNCTION_4	SWITCH_1	IF_6
0x40003cc	        0x4983d5ff	             adc r13, 0xffffffffffffffff	       518	exconvrt.c	FUNCTION_4	SWITCH_1	IF_6
0x40003d0	      0x41c6450000	                       mov byte [r13], 0	       520	exconvrt.c	FUNCTION_4	SWITCH_1
0x40003d5	        0x488b0424	                    mov rax, qword [rsp]	       528	exconvrt.c	FUNCTION_4
0x40003d9	          0x488928	                    mov qword [rax], rbp	       528	exconvrt.c	FUNCTION_4
0x40003dc	            0x31c0	                            xor eax, eax	       529	exconvrt.c	FUNCTION_4	CALL_12
0x40003de	              0x5a	                                 pop rdx	       530	exconvrt.c	FUNCTION_4
0x40003df	              0x5b	                                 pop rbx	       530	exconvrt.c	FUNCTION_4
0x40003e0	              0x5d	                                 pop rbp	       530	exconvrt.c	FUNCTION_4
0x40003e1	            0x415c	                                 pop r12	       530	exconvrt.c	FUNCTION_4
0x40003e3	            0x415d	                                 pop r13	       530	exconvrt.c	FUNCTION_4
0x40003e5	            0x415e	                                 pop r14	       530	exconvrt.c	FUNCTION_4
0x40003e7	            0x415f	                                 pop r15	       530	exconvrt.c	FUNCTION_4
0x40003e9	              0xc3	                                     ret	       530	exconvrt.c	FUNCTION_4
