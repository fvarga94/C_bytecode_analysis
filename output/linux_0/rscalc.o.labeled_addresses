acpi_rs_get_aml_length	FOR,0:functions,0:DO,0:CALL,11:WHILE,1:ELSE,0:IF,5:SWITCH,1	99
0x4000040	          0x4801fe	                            add rsi, rdi	       165	rscalc.c	FUNCTION_4
0x4000043	          0x4531d2	                          xor r10d, r10d	       157	rscalc.c	FUNCTION_4
0x4000046	    0x41bb03000000	                             mov r11d, 3	       219	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_5
0x400004c	          0x4839f7	                            cmp rdi, rsi	       167	rscalc.c	FUNCTION_4	WHILE_1
0x400004f	     0xf8347010000	                           jae 0x400019c	       167	rscalc.c	FUNCTION_4	WHILE_1
0x4000055	          0x448b07	                    mov r8d, dword [rdi]	       171	rscalc.c	FUNCTION_4	WHILE_1	IF_1
0x4000058	        0x4183f818	                           cmp r8d, 0x18	       171	rscalc.c	FUNCTION_4	WHILE_1	IF_1
0x400005c	     0xf8740010000	                            ja 0x40001a2	       171	rscalc.c	FUNCTION_4	WHILE_1	IF_1
0x4000062	        0x448b4f04	                mov r9d, dword [rdi + 4]	       177	rscalc.c	FUNCTION_4	WHILE_1	IF_2
0x4000066	          0x4585c9	                           test r9d, r9d	       177	rscalc.c	FUNCTION_4	WHILE_1	IF_2
0x4000069	     0xf8439010000	                            je 0x40001a8	       177	rscalc.c	FUNCTION_4	WHILE_1	IF_2
0x400006f	    0x410fb6800000	                    movzx eax, byte [r8]	       183	rscalc.c	FUNCTION_4	WHILE_1
0x4000077	    0x4e8b04c50000	                    mov r8, qword [r8*8]	       189	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400007f	          0x4889c1	                            mov rcx, rax	       183	rscalc.c	FUNCTION_4	WHILE_1
0x4000082	      0xe900000000	                           jmp 0x4000087	       189	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000087	            0x31c9	                            xor ecx, ecx	       195	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x4000089	        0x807f0802	                   cmp byte [rdi + 8], 2	       195	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x400008d	           0xf94c1	                                 sete cl	       195	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x4000090	            0x29c8	                            sub eax, ecx	       195	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x4000092	      0xe9f7000000	                           jmp 0x400018e	       195	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_3
0x4000097	        0x807f0801	                   cmp byte [rdi + 8], 1	       204	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_4
0x400009b	        0x6683d800	                               sbb ax, 0	       204	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_4
0x400009f	      0xe9ea000000	                           jmp 0x400018e	       204	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_4
0x40000a4	        0x668b4f08	                  mov cx, word [rdi + 8]	       215	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_5
0x40000a8	        0x6683f908	                               cmp cx, 8	       219	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_5
0x40000ac	        0x410f43c3	                        cmovae eax, r11d	       219	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_5
0x40000b0	      0xe9b2000000	                           jmp 0x4000167	       219	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1	IF_5
0x40000b5	          0x4c01d1	                            add rcx, r10	       234	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x40000b8	            0x31c0	                            xor eax, eax	       238	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1	CALL_5
0x40000ba	          0x48890a	                    mov qword [rdx], rcx	       234	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x40000bd	              0xc3	                                     ret	       238	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1	CALL_5
0x40000be	            0x31c9	                            xor ecx, ecx	        82	rscalc.c	FUNCTION_2
0x40000c0	      0x48837f1e00	               cmp qword [rdi + 0x1e], 0	        78	rscalc.c	FUNCTION_2	IF_1
0x40000c5	     0xf849c000000	                            je 0x4000167	        78	rscalc.c	FUNCTION_2	IF_1
0x40000cb	        0x668b4f1c	               mov cx, word [rdi + 0x1c]	        79	rscalc.c	FUNCTION_2	IF_1
0x40000cf	            0xeb37	                           jmp 0x4000108	        79	rscalc.c	FUNCTION_2	IF_1
0x40000d1	            0x31c9	                            xor ecx, ecx	        82	rscalc.c	FUNCTION_2
0x40000d3	      0x48837f2800	               cmp qword [rdi + 0x28], 0	        78	rscalc.c	FUNCTION_2	IF_1
0x40000d8	     0xf8489000000	                            je 0x4000167	        78	rscalc.c	FUNCTION_2	IF_1
0x40000de	        0x668b4f26	               mov cx, word [rdi + 0x26]	        79	rscalc.c	FUNCTION_2	IF_1
0x40000e2	            0xeb24	                           jmp 0x4000108	        79	rscalc.c	FUNCTION_2	IF_1
0x40000e4	            0x31c9	                            xor ecx, ecx	        82	rscalc.c	FUNCTION_2
0x40000e6	      0x48837f3c00	               cmp qword [rdi + 0x3c], 0	        78	rscalc.c	FUNCTION_2	IF_1
0x40000eb	            0x747a	                            je 0x4000167	        78	rscalc.c	FUNCTION_2	IF_1
0x40000ed	        0x668b4f3a	               mov cx, word [rdi + 0x3a]	        79	rscalc.c	FUNCTION_2	IF_1
0x40000f1	            0xeb15	                           jmp 0x4000108	        79	rscalc.c	FUNCTION_2	IF_1
0x40000f3	         0xfb64f0d	            movzx ecx, byte [rdi + 0xd] 	       282	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x40000f7	        0x8d4488fc	              lea eax, [rax + rcx*4 - 4]	       282	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x40000fb	            0x31c9	                            xor ecx, ecx	        82	rscalc.c	FUNCTION_2
0x40000fd	      0x48837f1100	               cmp qword [rdi + 0x11], 0	        78	rscalc.c	FUNCTION_2	IF_1
0x4000102	            0x7463	                            je 0x4000167	        78	rscalc.c	FUNCTION_2	IF_1
0x4000104	        0x668b4f0f	                mov cx, word [rdi + 0xf]	        79	rscalc.c	FUNCTION_2	IF_1
0x4000108	            0xffc1	                                 inc ecx	        79	rscalc.c	FUNCTION_2	IF_1
0x400010a	            0xeb5b	                           jmp 0x4000167	        79	rscalc.c	FUNCTION_2	IF_1
0x400010c	        0x668b4f17	               mov cx, word [rdi + 0x17]	       296	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000110	        0x66034f1a	               add cx, word [rdi + 0x1a]	       296	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000114	          0x4189c8	                            mov r8d, ecx	       296	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000117	        0x668b4f15	               mov cx, word [rdi + 0x15]	       296	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400011b	            0xeb46	                           jmp 0x4000163	       296	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400011d	        0x668b4f0f	                mov cx, word [rdi + 0xf]	       309	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000121	        0x66034f12	               add cx, word [rdi + 0x12]	       309	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000125	          0x4189c8	                            mov r8d, ecx	       309	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000128	        0x668b4f0d	                mov cx, word [rdi + 0xd]	       309	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400012c	            0xeb35	                           jmp 0x4000163	       309	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400012e	         0xfb64709	               movzx eax, byte [rdi + 9]	       326	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000132	     0xfb688000000	                   movzx ecx, byte [rax]	       325	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000139	        0x668b4710	               mov ax, word [rdi + 0x10]	       331	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400013d	        0x66034713	               add ax, word [rdi + 0x13]	       331	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000141	            0xeb24	                           jmp 0x4000167	       331	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000143	        0x668b4f12	               mov cx, word [rdi + 0x12]	       344	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000147	        0x66034f15	               add cx, word [rdi + 0x15]	       344	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400014b	          0x4189c8	                            mov r8d, ecx	       344	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400014e	        0x668b4f10	               mov cx, word [rdi + 0x10]	       344	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000152	            0xeb0f	                           jmp 0x4000163	       344	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000154	        0x668b4f0c	                mov cx, word [rdi + 0xc]	       358	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000158	        0x66034f16	               add cx, word [rdi + 0x16]	       358	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400015c	          0x4189c8	                            mov r8d, ecx	       358	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400015f	        0x668b4f0a	                mov cx, word [rdi + 0xa]	       358	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000163	        0x418d0c48	                   lea ecx, [r8 + rcx*2]	       358	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000167	             0x1c8	                            add eax, ecx	       358	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000169	            0xeb23	                           jmp 0x400018e	       367	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400016b	      0x66448b471a	              mov r8w, word [rdi + 0x1a]	       371	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000170	      0x6644034710	              add r8w, word [rdi + 0x10]	       371	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000175	      0x664403470d	               add r8w, word [rdi + 0xd]	       371	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400017a	            0xeb0f	                           jmp 0x400018b	       371	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400017c	      0x66448b471d	              mov r8w, word [rdi + 0x1d]	       388	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000181	      0x6644034713	              add r8w, word [rdi + 0x13]	       388	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x4000186	      0x6644034710	              add r8w, word [rdi + 0x10]	       388	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400018b	          0x4401c0	                            add eax, r8d	       388	rscalc.c	FUNCTION_4	WHILE_1	SWITCH_1
0x400018e	           0xfb7c0	                           movzx eax, ax	       410	rscalc.c	FUNCTION_4	WHILE_1
0x4000191	          0x4c01cf	                             add rdi, r9	       414	rscalc.c	FUNCTION_4	WHILE_1
0x4000194	          0x4901c2	                            add r10, rax	       410	rscalc.c	FUNCTION_4	WHILE_1
0x4000197	      0xe9b0feffff	                           jmp 0x400004c	       410	rscalc.c	FUNCTION_4	WHILE_1
0x400019c	      0xb81c300000	                         mov eax, 0x301c	       421	rscalc.c	FUNCTION_4	CALL_11
0x40001a1	              0xc3	                                     ret	       421	rscalc.c	FUNCTION_4	CALL_11
0x40001a2	      0xb817300000	                         mov eax, 0x3017	       172	rscalc.c	FUNCTION_4	WHILE_1	IF_1	CALL_3
0x40001a7	              0xc3	                                     ret	       172	rscalc.c	FUNCTION_4	WHILE_1	IF_1	CALL_3
0x40001a8	      0xb81f300000	                         mov eax, 0x301f	       178	rscalc.c	FUNCTION_4	WHILE_1	IF_2	CALL_4
0x40001ad	              0xc3	                                     ret	       422	rscalc.c	FUNCTION_4
acpi_rs_get_list_length	FOR,0:functions,0:DO,0:CALL,20:WHILE,1:ELSE,4:IF,6:SWITCH,1	188
0x40001ae	            0x4157	                                push r15	       443	rscalc.c	FUNCTION_5
0x40001b0	            0x4156	                                push r14	       443	rscalc.c	FUNCTION_5
0x40001b2	            0x89f6	                            mov esi, esi	       458	rscalc.c	FUNCTION_5
0x40001b4	            0x4155	                                push r13	       443	rscalc.c	FUNCTION_5
0x40001b6	            0x4154	                                push r12	       443	rscalc.c	FUNCTION_5
0x40001b8	          0x4989fd	                            mov r13, rdi	       443	rscalc.c	FUNCTION_5
0x40001bb	              0x55	                                push rbp	       443	rscalc.c	FUNCTION_5
0x40001bc	              0x53	                                push rbx	       443	rscalc.c	FUNCTION_5
0x40001bd	        0x488d2c37	                    lea rbp, [rdi + rsi]	       458	rscalc.c	FUNCTION_5
0x40001c1	          0x4989d4	                            mov r12, rdx	       443	rscalc.c	FUNCTION_5
0x40001c4	        0x4883ec10	                           sub rsp, 0x10	       443	rscalc.c	FUNCTION_5
0x40001c8	    0x48c702100000	                   mov qword [rdx], 0x10	       457	rscalc.c	FUNCTION_5
0x40001cf	    0x65488b042528	                mov rax, qword gs:[0x28]	       443	rscalc.c	FUNCTION_5
0x40001d8	      0x4889442408	                mov qword [rsp + 8], rax	       443	rscalc.c	FUNCTION_5
0x40001dd	            0x31c0	                            xor eax, eax	       443	rscalc.c	FUNCTION_5
0x40001df	          0x4939ed	                            cmp r13, rbp	       462	rscalc.c	FUNCTION_5	WHILE_1
0x40001e2	     0xf8338020000	                           jae 0x4000420	       462	rscalc.c	FUNCTION_5	WHILE_1
0x40001e8	      0x488d542407	                      lea rdx, [rsp + 7]	       466	rscalc.c	FUNCTION_5	WHILE_1
0x40001ed	            0x31ff	                            xor edi, edi	       466	rscalc.c	FUNCTION_5	WHILE_1
0x40001ef	          0x4c89ee	                            mov rsi, r13	       466	rscalc.c	FUNCTION_5	WHILE_1
0x40001f2	      0xe800000000	                          call 0x40001f7	       466	rscalc.c	FUNCTION_5	WHILE_1
0x40001f7	            0x85c0	                           test eax, eax	       469	rscalc.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x40001f9	     0xf852a020000	                           jne 0x4000429	       469	rscalc.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x40001ff	          0x4c89ef	                            mov rdi, r13	       481	rscalc.c	FUNCTION_5	WHILE_1	CALL_5
0x4000202	      0xe800000000	                          call 0x4000207	       481	rscalc.c	FUNCTION_5	WHILE_1	CALL_5
0x4000207	           0xfb7d8	                           movzx ebx, ax	       481	rscalc.c	FUNCTION_5	WHILE_1	CALL_5
0x400020a	       0xfb6442407	               movzx eax, byte [rsp + 7]	       482	rscalc.c	FUNCTION_5	WHILE_1
0x400020f	          0x4c89ef	                            mov rdi, r13	       491	rscalc.c	FUNCTION_5	WHILE_1	CALL_6
0x4000212	    0x440fb6b00000	                  movzx r14d, byte [rax]	       482	rscalc.c	FUNCTION_5	WHILE_1
0x400021a	      0xe800000000	                          call 0x400021f	       491	rscalc.c	FUNCTION_5	WHILE_1	CALL_6
0x400021f	          0x4c89ef	                            mov rdi, r13	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x4000222	        0x440fb6f8	                          movzx r15d, al	       490	rscalc.c	FUNCTION_5	WHILE_1
0x4000226	          0x4d01ef	                            add r15, r13	       490	rscalc.c	FUNCTION_5	WHILE_1
0x4000229	      0xe800000000	                          call 0x400022e	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x400022e	            0x3c89	                            cmp al, 0x89	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x4000230	     0xf84ea000000	                            je 0x4000320	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x4000236	            0x7745	                            ja 0x400027d	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x4000238	            0x3c78	                            cmp al, 0x78	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x400023a	     0xf84e7010000	                            je 0x4000427	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x4000240	            0x7720	                            ja 0x4000262	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x4000242	            0x3c28	                            cmp al, 0x28	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x4000244	     0xf8496000000	                            je 0x40002e0	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x400024a	            0x3c70	                            cmp al, 0x70	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x400024c	     0xf84aa000000	                            je 0x40002fc	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x4000252	            0x3c20	                            cmp al, 0x20	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x4000254	     0xf8580010000	                           jne 0x40003da	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x400025a	        0x66418b07	                      mov ax, word [r15]	       499	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_8
0x400025e	            0x31db	                            xor ebx, ebx	        44	rscalc.c	FUNCTION_1	FOR_1
0x4000260	            0xeb70	                           jmp 0x40002d2	        44	rscalc.c	FUNCTION_1	FOR_1
0x4000262	            0x3c84	                            cmp al, 0x84	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x4000264	     0xf8492000000	                            je 0x40002fc	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x400026a	     0xf826a010000	                            jb 0x40003da	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x4000270	            0x3c87	                            cmp al, 0x87	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x4000272	     0xf838f000000	                           jae 0x4000307	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x4000278	      0xe95d010000	                           jmp 0x40003da	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x400027d	            0x3c8e	                            cmp al, 0x8e	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x400027f	     0xf84f6000000	                            je 0x400037b	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x4000285	            0x7717	                            ja 0x400029e	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x4000287	            0x3c8c	                            cmp al, 0x8c	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x4000289	     0xf84be000000	                            je 0x400034d	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x400028f	     0xf87ce000000	                            ja 0x4000363	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x4000295	            0x3c8a	                            cmp al, 0x8a	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x4000297	            0x746e	                            je 0x4000307	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x4000299	      0xe93c010000	                           jmp 0x40003da	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x400029e	            0x3c90	                            cmp al, 0x90	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x40002a0	     0xf840c010000	                            je 0x40003b2	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x40002a6	     0xf82e4000000	                            jb 0x4000390	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x40002ac	            0x3c91	                            cmp al, 0x91	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x40002ae	     0xf8411010000	                            je 0x40003c5	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x40002b4	            0x3c92	                            cmp al, 0x92	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x40002b6	     0xf851e010000	                           jne 0x40003da	       493	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_7
0x40002bc	      0x410fb7450c	            movzx eax, word [r13 + 0xc] 	       646	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x40002c1	      0x410fb75d10	           movzx ebx, word [r13 + 0x10] 	       646	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x40002c6	            0x29c3	                            sub ebx, eax	       646	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x40002c8	      0x410fb74512	           movzx eax, word [r13 + 0x12] 	       646	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x40002cd	      0xe904010000	                           jmp 0x40003d6	       646	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x40002d2	          0x6685c0	                             test ax, ax	        44	rscalc.c	FUNCTION_1	FOR_1
0x40002d5	            0x741d	                            je 0x40002f4	        44	rscalc.c	FUNCTION_1	FOR_1
0x40002d7	          0x8d50ff	                      lea edx, [rax - 1]	        48	rscalc.c	FUNCTION_1	FOR_1
0x40002da	            0xffc3	                                 inc ebx	        44	rscalc.c	FUNCTION_1	FOR_1
0x40002dc	            0x21d0	                            and eax, edx	        48	rscalc.c	FUNCTION_1	FOR_1
0x40002de	            0xebf2	                           jmp 0x40002d2	        48	rscalc.c	FUNCTION_1	FOR_1
0x40002e0	        0x410fb607	                   movzx eax, byte [r15]	        48	rscalc.c	FUNCTION_1	FOR_1
0x40002e4	            0x31db	                            xor ebx, ebx	        44	rscalc.c	FUNCTION_1	FOR_1
0x40002e6	          0x6685c0	                             test ax, ax	        44	rscalc.c	FUNCTION_1	FOR_1
0x40002e9	            0x7409	                            je 0x40002f4	        44	rscalc.c	FUNCTION_1	FOR_1
0x40002eb	          0x8d50ff	                      lea edx, [rax - 1]	        48	rscalc.c	FUNCTION_1	FOR_1
0x40002ee	            0xffc3	                                 inc ebx	        44	rscalc.c	FUNCTION_1	FOR_1
0x40002f0	            0x21d0	                            and eax, edx	        48	rscalc.c	FUNCTION_1	FOR_1
0x40002f2	            0xebf2	                           jmp 0x40002e6	        48	rscalc.c	FUNCTION_1	FOR_1
0x40002f4	           0xfb6db	                           movzx ebx, bl	       508	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_10
0x40002f7	      0xe9e0000000	                           jmp 0x40003dc	       509	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x40002fc	          0x83fb01	                              cmp ebx, 1	       525	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	IF_2
0x40002ff	          0x83d3ff	             adc ebx, 0xffffffffffffffff	       525	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	IF_2
0x4000302	      0xe9d5000000	                           jmp 0x40003dc	       525	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	IF_2
0x4000307	            0x31d2	                            xor edx, edx	       105	rscalc.c	FUNCTION_3
0x4000309	          0x4139de	                           cmp r14d, ebx	       122	rscalc.c	FUNCTION_3	IF_1
0x400030c	            0x7307	                           jae 0x4000315	       122	rscalc.c	FUNCTION_3	IF_1
0x400030e	          0x41f7d6	                                not r14d	       126	rscalc.c	FUNCTION_3	IF_1
0x4000311	        0x418d141e	                    lea edx, [r14 + rbx]	       126	rscalc.c	FUNCTION_3	IF_1
0x4000315	          0x8d5a07	                      lea ebx, [rdx + 7]	       134	rscalc.c	FUNCTION_3	CALL_2
0x4000318	          0x83e3f8	                     and ebx, 0xfffffff8	       134	rscalc.c	FUNCTION_3	CALL_2
0x400031b	      0xe9bc000000	                           jmp 0x40003dc	       545	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x4000320	      0x410fb64701	               movzx eax, byte [r15 + 1]	       554	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x4000325	    0x8d1485fcffff	                    lea edx, [rax*4 - 4]	       554	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x400032c	            0x31c0	                            xor eax, eax	       105	rscalc.c	FUNCTION_3
0x400032e	            0x29d3	                            sub ebx, edx	       559	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_13
0x4000330	          0x4139de	                           cmp r14d, ebx	       122	rscalc.c	FUNCTION_3	IF_1
0x4000333	            0x7307	                           jae 0x400033c	       122	rscalc.c	FUNCTION_3	IF_1
0x4000335	          0x41f7d6	                                not r14d	       126	rscalc.c	FUNCTION_3	IF_1
0x4000338	        0x418d041e	                    lea eax, [r14 + rbx]	       126	rscalc.c	FUNCTION_3	IF_1
0x400033c	        0x448d7007	                     lea r14d, [rax + 7]	       558	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x4000340	        0x4183e6f8	                    and r14d, 0xfffffff8	       558	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x4000344	        0x418d1c16	                    lea ebx, [r14 + rdx]	       558	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x4000348	      0xe98f000000	                           jmp 0x40003dc	       562	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x400034d	      0x410fb74515	           movzx eax, word [r13 + 0x15] 	       568	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	IF_3
0x4000352	      0x410fb7550e	            movzx edx, word [r13 + 0xe] 	       568	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	IF_3
0x4000357	          0x6685c0	                             test ax, ax	       568	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	IF_3
0x400035a	            0x744a	                            je 0x40003a6	       568	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	IF_3
0x400035c	      0x410fb75d13	           movzx ebx, word [r13 + 0x13] 	       569	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	IF_3
0x4000361	            0xeb14	                           jmp 0x4000377	       569	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	IF_3
0x4000363	      0x410fb74510	           movzx eax, word [r13 + 0x10] 	       585	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	IF_4
0x4000368	      0x410fb75509	               movzx edx, word [r13 + 9]	       585	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	IF_4
0x400036d	          0x6685c0	                             test ax, ax	       585	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	IF_4
0x4000370	            0x7434	                            je 0x40003a6	       585	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	IF_4
0x4000372	      0x410fb75d0e	            movzx ebx, word [r13 + 0xe] 	       586	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	IF_4
0x4000377	            0x29d3	                            sub ebx, edx	       586	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	IF_4
0x4000379	            0xeb5b	                           jmp 0x40003d6	       586	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	IF_4
0x400037b	      0x410fb64505	               movzx eax, byte [r13 + 5]	       601	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x4000380	      0x410fb75d01	               movzx ebx, word [r13 + 1]	       604	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x4000385	     0xfb680000000	                   movzx eax, byte [rax]	       604	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x400038c	            0x29c3	                            sub ebx, eax	       604	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x400038e	            0xeb4c	                           jmp 0x40003dc	       607	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x4000390	      0x410fb74512	           movzx eax, word [r13 + 0x12] 	       613	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	IF_5
0x4000395	      0x410fb7550b	            movzx edx, word [r13 + 0xb] 	       613	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	IF_5
0x400039a	          0x6685c0	                             test ax, ax	       613	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	IF_5
0x400039d	            0x7407	                            je 0x40003a6	       613	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	IF_5
0x400039f	      0x410fb75d10	           movzx ebx, word [r13 + 0x10] 	       614	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	IF_5
0x40003a4	            0xebd1	                           jmp 0x4000377	       614	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	IF_5
0x40003a6	      0x410fb75d01	               movzx ebx, word [r13 + 1]	       619	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	ELSE_3
0x40003ab	          0x83c303	                              add ebx, 3	       619	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	ELSE_3
0x40003ae	            0x29d3	                            sub ebx, edx	       619	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	ELSE_3
0x40003b0	            0xeb2a	                           jmp 0x40003dc	       619	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	ELSE_3
0x40003b2	      0x410fb74506	               movzx eax, word [r13 + 6]	       628	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x40003b7	      0x410fb75d0a	            movzx ebx, word [r13 + 0xa] 	       628	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x40003bc	            0x29c3	                            sub ebx, eax	       628	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x40003be	      0x410fb7450c	            movzx eax, word [r13 + 0xc] 	       628	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x40003c3	            0xeb11	                           jmp 0x40003d6	       628	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x40003c5	      0x410fb74509	               movzx eax, word [r13 + 9]	       637	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x40003ca	      0x410fb75d0d	            movzx ebx, word [r13 + 0xd] 	       637	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x40003cf	            0x29c3	                            sub ebx, eax	       637	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x40003d1	      0x410fb7450f	            movzx eax, word [r13 + 0xf] 	       637	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x40003d6	             0x1c3	                            add ebx, eax	       646	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x40003d8	            0xeb02	                           jmp 0x40003dc	       651	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1
0x40003da	            0x31db	                            xor ebx, ebx	       489	rscalc.c	FUNCTION_5	WHILE_1
0x40003dc	          0x4c89ef	                            mov rdi, r13	       664	rscalc.c	FUNCTION_5	WHILE_1	IF_6	CALL_14
0x40003df	      0xe800000000	                          call 0x40003e4	       664	rscalc.c	FUNCTION_5	WHILE_1	IF_6	CALL_14
0x40003e4	            0x3c8e	                            cmp al, 0x8e	       664	rscalc.c	FUNCTION_5	WHILE_1	IF_6	CALL_14
0x40003e6	            0x750e	                           jne 0x40003f6	       664	rscalc.c	FUNCTION_5	WHILE_1	IF_6	CALL_14
0x40003e8	      0x410fb64505	               movzx eax, byte [r13 + 5]	       668	rscalc.c	FUNCTION_5	WHILE_1	IF_6
0x40003ed	     0xfb680000000	                   movzx eax, byte [rax]	       666	rscalc.c	FUNCTION_5	WHILE_1	IF_6
0x40003f4	            0xeb0c	                           jmp 0x4000402	       666	rscalc.c	FUNCTION_5	WHILE_1	IF_6
0x40003f6	       0xfb6442407	               movzx eax, byte [rsp + 7]	       672	rscalc.c	FUNCTION_5	WHILE_1	ELSE_4
0x40003fb	     0xfb680000000	                   movzx eax, byte [rax]	       671	rscalc.c	FUNCTION_5	WHILE_1	ELSE_4
0x4000402	             0x1c3	                            add ebx, eax	       671	rscalc.c	FUNCTION_5	WHILE_1	ELSE_4
0x4000404	          0x4c89ef	                            mov rdi, r13	       689	rscalc.c	FUNCTION_5	WHILE_1	CALL_19
0x4000407	          0x83c307	                              add ebx, 7	       676	rscalc.c	FUNCTION_5	WHILE_1	CALL_15
0x400040a	          0x83e3f8	                     and ebx, 0xfffffff8	       677	rscalc.c	FUNCTION_5	WHILE_1
0x400040d	        0x49011c24	                    add qword [r12], rbx	       677	rscalc.c	FUNCTION_5	WHILE_1
0x4000411	      0xe800000000	                          call 0x4000416	       689	rscalc.c	FUNCTION_5	WHILE_1	CALL_19
0x4000416	            0x89c0	                            mov eax, eax	       689	rscalc.c	FUNCTION_5	WHILE_1	CALL_19
0x4000418	          0x4901c5	                            add r13, rax	       689	rscalc.c	FUNCTION_5	WHILE_1	CALL_19
0x400041b	      0xe9bffdffff	                           jmp 0x40001df	       689	rscalc.c	FUNCTION_5	WHILE_1	CALL_19
0x4000420	      0xb81c300000	                         mov eax, 0x301c	       694	rscalc.c	FUNCTION_5	CALL_20
0x4000425	            0xeb02	                           jmp 0x4000429	       694	rscalc.c	FUNCTION_5	CALL_20
0x4000427	            0x31c0	                            xor eax, eax	       533	rscalc.c	FUNCTION_5	WHILE_1	SWITCH_1	CALL_11
0x4000429	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       695	rscalc.c	FUNCTION_5
0x400042e	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       695	rscalc.c	FUNCTION_5
0x4000437	            0x7405	                            je 0x400043e	       695	rscalc.c	FUNCTION_5
0x4000439	      0xe800000000	                          call 0x400043e	       695	rscalc.c	FUNCTION_5
0x400043e	        0x4883c410	                           add rsp, 0x10	       695	rscalc.c	FUNCTION_5
0x4000442	              0x5b	                                 pop rbx	       695	rscalc.c	FUNCTION_5
0x4000443	              0x5d	                                 pop rbp	       695	rscalc.c	FUNCTION_5
0x4000444	            0x415c	                                 pop r12	       695	rscalc.c	FUNCTION_5
0x4000446	            0x415d	                                 pop r13	       695	rscalc.c	FUNCTION_5
0x4000448	            0x415e	                                 pop r14	       695	rscalc.c	FUNCTION_5
0x400044a	            0x415f	                                 pop r15	       695	rscalc.c	FUNCTION_5
0x400044c	              0xc3	                                     ret	       695	rscalc.c	FUNCTION_5
acpi_rs_get_pci_routing_table_length	FOR,2:functions,0:DO,0:CALL,5:WHILE,0:ELSE,3:IF,4:SWITCH,0	71
0x400044d	            0x4156	                                push r14	       717	rscalc.c	FUNCTION_6
0x400044f	            0x4155	                                push r13	       717	rscalc.c	FUNCTION_6
0x4000451	          0x4989f5	                            mov r13, rsi	       717	rscalc.c	FUNCTION_6
0x4000454	            0x4154	                                push r12	       717	rscalc.c	FUNCTION_6
0x4000456	              0x55	                                push rbp	       717	rscalc.c	FUNCTION_6
0x4000457	    0x48bd00ff0000	              movabs rbp, 0xff000000ff00	       771	rscalc.c	FUNCTION_6	FOR_1	FOR_2	IF_2
0x4000461	              0x53	                                push rbx	       717	rscalc.c	FUNCTION_6
0x4000462	          0x8b472c	            mov eax, dword [rdi + 0x2c] 	       717	rscalc.c	FUNCTION_6
0x4000465	        0x4c8b6718	            mov r12, qword [rdi + 0x18] 	       741	rscalc.c	FUNCTION_6
0x4000469	        0x498d1cc4	                  lea rbx, [r12 + rax*8]	       741	rscalc.c	FUNCTION_6
0x400046d	            0x31c0	                            xor eax, eax	       719	rscalc.c	FUNCTION_6
0x400046f	          0x4939dc	                            cmp r12, rbx	       743	rscalc.c	FUNCTION_6	FOR_1
0x4000472	     0xf849c000000	                            je 0x4000514	       743	rscalc.c	FUNCTION_6	FOR_1
0x4000478	        0x498b0c24	                    mov rcx, qword [r12]	       747	rscalc.c	FUNCTION_6	FOR_1
0x400047c	          0x4885c9	                           test rcx, rcx	       751	rscalc.c	FUNCTION_6	FOR_1	IF_1
0x400047f	     0xf849b000000	                            je 0x4000520	       751	rscalc.c	FUNCTION_6	FOR_1	IF_1
0x4000485	        0x80790904	                   cmp byte [rcx + 9], 4	       751	rscalc.c	FUNCTION_6	FOR_1	IF_1
0x4000489	     0xf8591000000	                           jne 0x4000520	       751	rscalc.c	FUNCTION_6	FOR_1	IF_1
0x400048f	        0x488b5118	            mov rdx, qword [rcx + 0x18] 	       760	rscalc.c	FUNCTION_6	FOR_1
0x4000493	        0x448b412c	            mov r8d, dword [rcx + 0x2c] 	       767	rscalc.c	FUNCTION_6	FOR_1	FOR_2
0x4000497	            0x31f6	                            xor esi, esi	       766	rscalc.c	FUNCTION_6	FOR_1	FOR_2
0x4000499	            0x31c9	                            xor ecx, ecx	       764	rscalc.c	FUNCTION_6	FOR_1
0x400049b	    0x49b900140000	                movabs r9, 0x50000001400	       771	rscalc.c	FUNCTION_6	FOR_1	FOR_2	IF_2
0x40004a5	          0x4439c6	                            cmp esi, r8d	       766	rscalc.c	FUNCTION_6	FOR_1	FOR_2
0x40004a8	            0x7506	                           jne 0x40004b0	       766	rscalc.c	FUNCTION_6	FOR_1	FOR_2
0x40004aa	            0x84c9	                             test cl, cl	       788	rscalc.c	FUNCTION_6	FOR_1	IF_3
0x40004ac	            0x7451	                            je 0x40004ff	       788	rscalc.c	FUNCTION_6	FOR_1	IF_3
0x40004ae	            0xeb2a	                           jmp 0x40004da	       788	rscalc.c	FUNCTION_6	FOR_1	IF_3
0x40004b0	            0x84c9	                             test cl, cl	       768	rscalc.c	FUNCTION_6	FOR_1	FOR_2
0x40004b2	            0x7526	                           jne 0x40004da	       768	rscalc.c	FUNCTION_6	FOR_1	FOR_2
0x40004b4	          0x488b3a	                    mov rdi, qword [rdx]	       769	rscalc.c	FUNCTION_6	FOR_1	FOR_2	IF_2
0x40004b7	          0x4885ff	                           test rdi, rdi	       769	rscalc.c	FUNCTION_6	FOR_1	FOR_2	IF_2
0x40004ba	            0x7412	                            je 0x40004ce	       769	rscalc.c	FUNCTION_6	FOR_1	FOR_2	IF_2
0x40004bc	        0x807f0902	                   cmp byte [rdi + 9], 2	       769	rscalc.c	FUNCTION_6	FOR_1	FOR_2	IF_2
0x40004c0	            0x7412	                            je 0x40004d4	       769	rscalc.c	FUNCTION_6	FOR_1	FOR_2	IF_2
0x40004c2	          0x4989ea	                            mov r10, rbp	       771	rscalc.c	FUNCTION_6	FOR_1	FOR_2	IF_2
0x40004c5	        0x4c235708	                and r10, qword [rdi + 8]	       771	rscalc.c	FUNCTION_6	FOR_1	FOR_2	IF_2
0x40004c9	          0x4d39ca	                             cmp r10, r9	       771	rscalc.c	FUNCTION_6	FOR_1	FOR_2	IF_2
0x40004cc	            0x7406	                            je 0x40004d4	       771	rscalc.c	FUNCTION_6	FOR_1	FOR_2	IF_2
0x40004ce	        0x4883c208	                              add rdx, 8	       780	rscalc.c	FUNCTION_6	FOR_1	FOR_2	ELSE_1
0x40004d2	            0xeb02	                           jmp 0x40004d6	       780	rscalc.c	FUNCTION_6	FOR_1	FOR_2	ELSE_1
0x40004d4	            0xb101	                               mov cl, 1	       776	rscalc.c	FUNCTION_6	FOR_1	FOR_2	IF_2
0x40004d6	            0xffc6	                                 inc esi	       768	rscalc.c	FUNCTION_6	FOR_1	FOR_2
0x40004d8	            0xebcb	                           jmp 0x40004a5	       768	rscalc.c	FUNCTION_6	FOR_1	FOR_2
0x40004da	        0x4c8d7014	                   lea r14, [rax + 0x14]	       784	rscalc.c	FUNCTION_6	FOR_1
0x40004de	          0x488b02	                    mov rax, qword [rdx]	       789	rscalc.c	FUNCTION_6	FOR_1	IF_3	IF_4
0x40004e1	        0x80780902	                   cmp byte [rax + 9], 2	       789	rscalc.c	FUNCTION_6	FOR_1	IF_3	IF_4
0x40004e5	            0x750a	                           jne 0x40004f1	       789	rscalc.c	FUNCTION_6	FOR_1	IF_3	IF_4
0x40004e7	          0x8b4018	            mov eax, dword [rax + 0x18] 	       794	rscalc.c	FUNCTION_6	FOR_1	IF_3	IF_4
0x40004ea	      0x498d440601	                lea rax, [r14 + rax + 1]	       794	rscalc.c	FUNCTION_6	FOR_1	IF_3	IF_4
0x40004ef	            0xeb12	                           jmp 0x4000503	       794	rscalc.c	FUNCTION_6	FOR_1	IF_3	IF_4
0x40004f1	        0x488b7818	            mov rdi, qword [rax + 0x18] 	       798	rscalc.c	FUNCTION_6	FOR_1	IF_3	ELSE_2	CALL_3
0x40004f5	      0xe800000000	                          call 0x40004fa	       798	rscalc.c	FUNCTION_6	FOR_1	IF_3	ELSE_2	CALL_3
0x40004fa	          0x4c01f0	                            add rax, r14	       798	rscalc.c	FUNCTION_6	FOR_1	IF_3	ELSE_2	CALL_3
0x40004fd	            0xeb04	                           jmp 0x4000503	       798	rscalc.c	FUNCTION_6	FOR_1	IF_3	ELSE_2	CALL_3
0x40004ff	        0x4883c018	                           add rax, 0x18	       805	rscalc.c	FUNCTION_6	FOR_1	ELSE_3
0x4000503	        0x4883c007	                              add rax, 7	       810	rscalc.c	FUNCTION_6	FOR_1	CALL_4
0x4000507	        0x4983c408	                              add r12, 8	       814	rscalc.c	FUNCTION_6	FOR_1
0x400050b	        0x4883e0f8	             and rax, 0xfffffffffffffff8	       810	rscalc.c	FUNCTION_6	FOR_1	CALL_4
0x400050f	      0xe95bffffff	                           jmp 0x400046f	       810	rscalc.c	FUNCTION_6	FOR_1	CALL_4
0x4000514	        0x4883c018	                           add rax, 0x18	       821	rscalc.c	FUNCTION_6
0x4000518	        0x49894500	                    mov qword [r13], rax	       821	rscalc.c	FUNCTION_6
0x400051c	            0x31c0	                            xor eax, eax	       823	rscalc.c	FUNCTION_6	CALL_5
0x400051e	            0xeb05	                           jmp 0x4000525	       823	rscalc.c	FUNCTION_6	CALL_5
0x4000520	      0xb803300000	                         mov eax, 0x3003	       753	rscalc.c	FUNCTION_6	FOR_1	IF_1	CALL_2
0x4000525	              0x5b	                                 pop rbx	       824	rscalc.c	FUNCTION_6
0x4000526	              0x5d	                                 pop rbp	       824	rscalc.c	FUNCTION_6
0x4000527	            0x415c	                                 pop r12	       824	rscalc.c	FUNCTION_6
0x4000529	            0x415d	                                 pop r13	       824	rscalc.c	FUNCTION_6
0x400052b	            0x415e	                                 pop r14	       824	rscalc.c	FUNCTION_6
0x400052d	              0xc3	                                     ret	       824	rscalc.c	FUNCTION_6
