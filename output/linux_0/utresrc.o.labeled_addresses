acpi_ut_walk_aml_resources	SWITCH,0:CALL,17:FOR,0:IF,9:ELSE,0:WHILE,1:functions,0:DO,0	88
0x4000185	            0x4157	                                push r15	       141	utresrc.c	FUNCTION_1
0x4000187	            0x4156	                                push r14	       141	utresrc.c	FUNCTION_1
0x4000189	            0x4155	                                push r13	       141	utresrc.c	FUNCTION_1
0x400018b	            0x4154	                                push r12	       141	utresrc.c	FUNCTION_1
0x400018d	              0x55	                                push rbp	       141	utresrc.c	FUNCTION_1
0x400018e	              0x53	                                push rbx	       141	utresrc.c	FUNCTION_1
0x400018f	        0x4883ec18	                           sub rsp, 0x18	       141	utresrc.c	FUNCTION_1
0x4000193	    0x65488b042528	                mov rax, qword gs:[0x28]	       141	utresrc.c	FUNCTION_1
0x400019c	      0x4889442410	             mov qword [rsp + 0x10], rax	       141	utresrc.c	FUNCTION_1
0x40001a1	            0x31c0	                            xor eax, eax	       141	utresrc.c	FUNCTION_1
0x40001a3	        0x4883fa01	                              cmp rdx, 1	       153	utresrc.c	FUNCTION_1	IF_1
0x40001a7	      0xc644240e79	              mov byte [rsp + 0xe], 0x79	       147	utresrc.c	FUNCTION_1
0x40001ac	      0xc644240f00	                 mov byte [rsp + 0xf], 0	       147	utresrc.c	FUNCTION_1
0x40001b1	            0x770a	                            ja 0x40001bd	       153	utresrc.c	FUNCTION_1	IF_1
0x40001b3	      0xb81c300000	                         mov eax, 0x301c	       154	utresrc.c	FUNCTION_1	IF_1	CALL_2
0x40001b8	      0xe9d1000000	                           jmp 0x400028e	       154	utresrc.c	FUNCTION_1	IF_1	CALL_2
0x40001bd	        0x488d0416	                    lea rax, [rsi + rdx]	       159	utresrc.c	FUNCTION_1
0x40001c1	          0x4989ff	                            mov r15, rdi	       159	utresrc.c	FUNCTION_1
0x40001c4	          0x4889f3	                            mov rbx, rsi	       159	utresrc.c	FUNCTION_1
0x40001c7	          0x4889cd	                            mov rbp, rcx	       159	utresrc.c	FUNCTION_1
0x40001ca	          0x4d89c5	                             mov r13, r8	       159	utresrc.c	FUNCTION_1
0x40001cd	          0x4531e4	                          xor r12d, r12d	       146	utresrc.c	FUNCTION_1
0x40001d0	        0x48890424	                    mov qword [rsp], rax	       159	utresrc.c	FUNCTION_1
0x40001d4	        0x483b1c24	                    cmp rbx, qword [rsp]	       163	utresrc.c	FUNCTION_1	WHILE_1
0x40001d8	            0x7377	                           jae 0x4000251	       163	utresrc.c	FUNCTION_1	WHILE_1
0x40001da	      0x488d54240d	                    lea rdx, [rsp + 0xd]	       167	utresrc.c	FUNCTION_1	WHILE_1
0x40001df	          0x4889de	                            mov rsi, rbx	       167	utresrc.c	FUNCTION_1	WHILE_1
0x40001e2	          0x4c89ff	                            mov rdi, r15	       167	utresrc.c	FUNCTION_1	WHILE_1
0x40001e5	      0xe800000000	                          call 0x40001ea	       167	utresrc.c	FUNCTION_1	WHILE_1
0x40001ea	            0x85c0	                           test eax, eax	       169	utresrc.c	FUNCTION_1	WHILE_1	IF_2	CALL_4
0x40001ec	     0xf859c000000	                           jne 0x400028e	       169	utresrc.c	FUNCTION_1	WHILE_1	IF_2	CALL_4
0x40001f2	          0x4889df	                            mov rdi, rbx	       179	utresrc.c	FUNCTION_1	WHILE_1	CALL_6
0x40001f5	      0xe800000000	                          call 0x40001fa	       179	utresrc.c	FUNCTION_1	WHILE_1	CALL_6
0x40001fa	          0x4885ed	                           test rbp, rbp	       183	utresrc.c	FUNCTION_1	WHILE_1	IF_3
0x40001fd	          0x4189c6	                           mov r14d, eax	       179	utresrc.c	FUNCTION_1	WHILE_1	CALL_6
0x4000200	            0x750e	                           jne 0x4000210	       183	utresrc.c	FUNCTION_1	WHILE_1	IF_3
0x4000202	          0x4889df	                            mov rdi, rbx	       194	utresrc.c	FUNCTION_1	WHILE_1	IF_5	CALL_10
0x4000205	      0xe800000000	                          call 0x400020a	       194	utresrc.c	FUNCTION_1	WHILE_1	IF_5	CALL_10
0x400020a	            0x3c78	                            cmp al, 0x78	       194	utresrc.c	FUNCTION_1	WHILE_1	IF_5	CALL_10
0x400020c	            0x7538	                           jne 0x4000246	       194	utresrc.c	FUNCTION_1	WHILE_1	IF_5	CALL_10
0x400020e	            0xeb1b	                           jmp 0x400022b	       194	utresrc.c	FUNCTION_1	WHILE_1	IF_5	CALL_10
0x4000210	       0xfb64c240d	            movzx ecx, byte [rsp + 0xd] 	       184	utresrc.c	FUNCTION_1	WHILE_1	IF_3
0x4000215	          0x4d89e8	                             mov r8, r13	       184	utresrc.c	FUNCTION_1	WHILE_1	IF_3
0x4000218	          0x4489e2	                           mov edx, r12d	       184	utresrc.c	FUNCTION_1	WHILE_1	IF_3
0x400021b	            0x89c6	                            mov esi, eax	       184	utresrc.c	FUNCTION_1	WHILE_1	IF_3
0x400021d	          0x4889df	                            mov rdi, rbx	       184	utresrc.c	FUNCTION_1	WHILE_1	IF_3
0x4000220	      0xe800000000	                          call 0x4000225	       184	utresrc.c	FUNCTION_1	WHILE_1	IF_3
0x4000225	            0x85c0	                           test eax, eax	       187	utresrc.c	FUNCTION_1	WHILE_1	IF_3	IF_4	CALL_8
0x4000227	            0x74d9	                            je 0x4000202	       187	utresrc.c	FUNCTION_1	WHILE_1	IF_3	IF_4	CALL_8
0x4000229	            0xeb63	                           jmp 0x400028e	       187	utresrc.c	FUNCTION_1	WHILE_1	IF_3	IF_4	CALL_8
0x400022b	        0x488d4301	                      lea rax, [rbx + 1]	       200	utresrc.c	FUNCTION_1	WHILE_1	IF_5	IF_6
0x400022f	        0x48390424	                    cmp qword [rsp], rax	       200	utresrc.c	FUNCTION_1	WHILE_1	IF_5	IF_6
0x4000233	     0xf867affffff	                           jbe 0x40001b3	       200	utresrc.c	FUNCTION_1	WHILE_1	IF_5	IF_6
0x4000239	            0x31c0	                            xor eax, eax	       219	utresrc.c	FUNCTION_1	WHILE_1	IF_5	CALL_12
0x400023b	          0x4885ed	                           test rbp, rbp	       213	utresrc.c	FUNCTION_1	WHILE_1	IF_5	IF_7
0x400023e	            0x754e	                           jne 0x400028e	       213	utresrc.c	FUNCTION_1	WHILE_1	IF_5	IF_7
0x4000240	        0x49895d00	                    mov qword [r13], rbx	       214	utresrc.c	FUNCTION_1	WHILE_1	IF_5	IF_7
0x4000244	            0xeb48	                           jmp 0x400028e	       214	utresrc.c	FUNCTION_1	WHILE_1	IF_5	IF_7
0x4000246	          0x4489f0	                           mov eax, r14d	       222	utresrc.c	FUNCTION_1	WHILE_1
0x4000249	          0x4501f4	                          add r12d, r14d	       223	utresrc.c	FUNCTION_1	WHILE_1
0x400024c	          0x4801c3	                            add rbx, rax	       222	utresrc.c	FUNCTION_1	WHILE_1
0x400024f	            0xeb83	                           jmp 0x40001d4	       222	utresrc.c	FUNCTION_1	WHILE_1
0x4000251	          0x4885ed	                           test rbp, rbp	       228	utresrc.c	FUNCTION_1	IF_8
0x4000254	     0xf8459ffffff	                            je 0x40001b3	       228	utresrc.c	FUNCTION_1	IF_8
0x400025a	      0x488d54240d	                    lea rdx, [rsp + 0xd]	       232	utresrc.c	FUNCTION_1	IF_8	CALL_13
0x400025f	      0x488d74240e	                    lea rsi, [rsp + 0xe]	       232	utresrc.c	FUNCTION_1	IF_8	CALL_13
0x4000264	          0x4c89ff	                            mov rdi, r15	       232	utresrc.c	FUNCTION_1	IF_8	CALL_13
0x4000267	      0xe800000000	                          call 0x400026c	       232	utresrc.c	FUNCTION_1	IF_8	CALL_13
0x400026c	       0xfb64c240d	            movzx ecx, byte [rsp + 0xd] 	       234	utresrc.c	FUNCTION_1	IF_8
0x4000271	          0x4d89e8	                             mov r8, r13	       234	utresrc.c	FUNCTION_1	IF_8
0x4000274	          0x4489e2	                           mov edx, r12d	       234	utresrc.c	FUNCTION_1	IF_8
0x4000277	      0xbe02000000	                              mov esi, 2	       234	utresrc.c	FUNCTION_1	IF_8
0x400027c	      0x488d7c240e	                    lea rdi, [rsp + 0xe]	       234	utresrc.c	FUNCTION_1	IF_8
0x4000281	      0xe800000000	                          call 0x4000286	       234	utresrc.c	FUNCTION_1	IF_8
0x4000286	            0x85c0	                           test eax, eax	       236	utresrc.c	FUNCTION_1	IF_8	IF_9	CALL_15
0x4000288	     0xf8425ffffff	                            je 0x40001b3	       236	utresrc.c	FUNCTION_1	IF_8	IF_9	CALL_15
0x400028e	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       242	utresrc.c	FUNCTION_1
0x4000293	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       242	utresrc.c	FUNCTION_1
0x400029c	            0x7405	                            je 0x40002a3	       242	utresrc.c	FUNCTION_1
0x400029e	      0xe800000000	                          call 0x40002a3	       242	utresrc.c	FUNCTION_1
0x40002a3	        0x4883c418	                           add rsp, 0x18	       242	utresrc.c	FUNCTION_1
0x40002a7	              0x5b	                                 pop rbx	       242	utresrc.c	FUNCTION_1
0x40002a8	              0x5d	                                 pop rbp	       242	utresrc.c	FUNCTION_1
0x40002a9	            0x415c	                                 pop r12	       242	utresrc.c	FUNCTION_1
0x40002ab	            0x415d	                                 pop r13	       242	utresrc.c	FUNCTION_1
0x40002ad	            0x415e	                                 pop r14	       242	utresrc.c	FUNCTION_1
0x40002af	            0x415f	                                 pop r15	       242	utresrc.c	FUNCTION_1
0x40002b1	              0xc3	                                     ret	       242	utresrc.c	FUNCTION_1
acpi_ut_get_resource_length	SWITCH,0:CALL,5:FOR,0:IF,1:ELSE,1:WHILE,0:functions,0:DO,0	7
0x400004d	            0x8a17	                      mov dl, byte [rdi]	       462	utresrc.c	FUNCTION_4	IF_1	CALL_2
0x400004f	            0x89d0	                            mov eax, edx	       471	utresrc.c	FUNCTION_4	ELSE_1	CALL_5
0x4000051	          0x83e007	                              and eax, 7	       471	utresrc.c	FUNCTION_4	ELSE_1	CALL_5
0x4000054	            0x84d2	                             test dl, dl	       462	utresrc.c	FUNCTION_4	IF_1	CALL_2
0x4000056	            0x7904	                           jns 0x400005c	       462	utresrc.c	FUNCTION_4	IF_1	CALL_2
0x4000058	        0x668b4701	                  mov ax, word [rdi + 1]	       466	utresrc.c	FUNCTION_4	IF_1	CALL_4
0x400005c	              0xc3	                                     ret	       476	utresrc.c	FUNCTION_4
acpi_ut_validate_resource	SWITCH,1:CALL,7:FOR,0:IF,12:ELSE,1:WHILE,0:functions,0:DO,0	78
0x400005d	              0x53	                                push rbx	       264	utresrc.c	FUNCTION_2
0x400005e	           0xfb60e	                   movzx ecx, byte [rsi]	       276	utresrc.c	FUNCTION_2	CALL_2
0x4000061	          0x4989fb	                            mov r11, rdi	       264	utresrc.c	FUNCTION_2
0x4000064	          0x4889d3	                            mov rbx, rdx	       264	utresrc.c	FUNCTION_2
0x4000067	            0x84c9	                             test cl, cl	       282	utresrc.c	FUNCTION_2	IF_1
0x4000069	            0x790e	                           jns 0x4000079	       282	utresrc.c	FUNCTION_2	IF_1
0x400006b	          0x80f992	                            cmp cl, 0x92	       286	utresrc.c	FUNCTION_2	IF_1	IF_2
0x400006e	        0x448d4190	                   lea r8d, [rcx - 0x70]	       294	utresrc.c	FUNCTION_2	IF_1
0x4000072	            0x7610	                           jbe 0x4000084	       286	utresrc.c	FUNCTION_2	IF_1	IF_2
0x4000074	      0xe994000000	                           jmp 0x400010d	       286	utresrc.c	FUNCTION_2	IF_1	IF_2
0x4000079	          0x4189c8	                            mov r8d, ecx	       300	utresrc.c	FUNCTION_2	ELSE_1
0x400007c	        0x4183e078	                           and r8d, 0x78	       300	utresrc.c	FUNCTION_2	ELSE_1
0x4000080	        0x41c1e803	                              shr r8d, 3	       300	utresrc.c	FUNCTION_2	ELSE_1
0x4000084	        0x450fb6c8	                          movzx r9d, r8b	       308	utresrc.c	FUNCTION_2	IF_3
0x4000088	    0x458a91000000	                     mov r10b, byte [r9]	       308	utresrc.c	FUNCTION_2	IF_3
0x400008f	          0x4584d2	                         test r10b, r10b	       308	utresrc.c	FUNCTION_2	IF_3
0x4000092	            0x7479	                            je 0x400010d	       308	utresrc.c	FUNCTION_2	IF_3
0x4000094	          0x4889f7	                            mov rdi, rsi	       316	utresrc.c	FUNCTION_2	CALL_3
0x4000097	      0xe800000000	                          call 0x400009c	       316	utresrc.c	FUNCTION_2	CALL_3
0x400009c	    0x410fb6910000	                    movzx edx, byte [r9]	       317	utresrc.c	FUNCTION_2
0x40000a4	        0x4180fa02	                             cmp r10b, 2	       321	utresrc.c	FUNCTION_2	SWITCH_1
0x40000a8	          0x4189d1	                            mov r9d, edx	       317	utresrc.c	FUNCTION_2
0x40000ab	            0x7412	                            je 0x40000bf	       321	utresrc.c	FUNCTION_2	SWITCH_1
0x40000ad	        0x4180fa03	                             cmp r10b, 3	       321	utresrc.c	FUNCTION_2	SWITCH_1
0x40000b1	            0x7413	                            je 0x40000c6	       321	utresrc.c	FUNCTION_2	SWITCH_1
0x40000b3	          0x41feca	                                dec r10b	       321	utresrc.c	FUNCTION_2	SWITCH_1
0x40000b6	            0x7555	                           jne 0x400010d	       321	utresrc.c	FUNCTION_2	SWITCH_1
0x40000b8	          0x6639d0	                              cmp ax, dx	       326	utresrc.c	FUNCTION_2	SWITCH_1	IF_4
0x40000bb	            0x7579	                           jne 0x4000136	       326	utresrc.c	FUNCTION_2	SWITCH_1	IF_4
0x40000bd	            0xeb1a	                           jmp 0x40000d9	       326	utresrc.c	FUNCTION_2	SWITCH_1	IF_4
0x40000bf	          0x6639d0	                              cmp ax, dx	       335	utresrc.c	FUNCTION_2	SWITCH_1	IF_5
0x40000c2	            0x7272	                            jb 0x4000136	       335	utresrc.c	FUNCTION_2	SWITCH_1	IF_5
0x40000c4	            0xeb13	                           jmp 0x40000d9	       335	utresrc.c	FUNCTION_2	SWITCH_1	IF_5
0x40000c6	          0x6639d0	                              cmp ax, dx	       344	utresrc.c	FUNCTION_2	SWITCH_1	IF_6
0x40000c9	            0x776b	                            ja 0x4000136	       344	utresrc.c	FUNCTION_2	SWITCH_1	IF_6
0x40000cb	           0xfb6fa	                           movzx edi, dl	       344	utresrc.c	FUNCTION_2	SWITCH_1	IF_6
0x40000ce	        0x440fb7d0	                          movzx r10d, ax	       344	utresrc.c	FUNCTION_2	SWITCH_1	IF_6
0x40000d2	            0xffcf	                                 dec edi	       344	utresrc.c	FUNCTION_2	SWITCH_1	IF_6
0x40000d4	          0x4139fa	                           cmp r10d, edi	       344	utresrc.c	FUNCTION_2	SWITCH_1	IF_6
0x40000d7	            0x7c5d	                            jl 0x4000136	       344	utresrc.c	FUNCTION_2	SWITCH_1	IF_6
0x40000d9	          0x80f98e	                            cmp cl, 0x8e	       358	utresrc.c	FUNCTION_2	IF_7
0x40000dc	            0x7523	                           jne 0x4000101	       358	utresrc.c	FUNCTION_2	IF_7
0x40000de	         0xfb64e05	               movzx ecx, byte [rsi + 5]	       362	utresrc.c	FUNCTION_2	IF_7	IF_8
0x40000e2	          0x8d41ff	                      lea eax, [rcx - 1]	       362	utresrc.c	FUNCTION_2	IF_7	IF_8
0x40000e5	            0x3c02	                               cmp al, 2	       362	utresrc.c	FUNCTION_2	IF_7	IF_8
0x40000e7	            0x7618	                           jbe 0x4000101	       362	utresrc.c	FUNCTION_2	IF_7	IF_8
0x40000e9	          0x4d85db	                           test r11, r11	       365	utresrc.c	FUNCTION_2	IF_7	IF_8	IF_9
0x40000ec	      0xbe17300000	                         mov esi, 0x3017	       371	utresrc.c	FUNCTION_2	IF_7	IF_8
0x40000f1	            0x746e	                            je 0x4000161	       365	utresrc.c	FUNCTION_2	IF_7	IF_8	IF_9
0x40000f3	    0x48c7c2000000	                              mov rdx, 0	       366	utresrc.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_5
0x40000fa	      0xbe71010000	                          mov esi, 0x171	       366	utresrc.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_5
0x40000ff	            0xeb22	                           jmp 0x4000123	       366	utresrc.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_5
0x4000101	            0x31f6	                            xor esi, esi	       381	utresrc.c	FUNCTION_2
0x4000103	          0x4885db	                           test rbx, rbx	       377	utresrc.c	FUNCTION_2	IF_10
0x4000106	            0x7459	                            je 0x4000161	       377	utresrc.c	FUNCTION_2	IF_10
0x4000108	          0x448803	                     mov byte [rbx], r8b	       378	utresrc.c	FUNCTION_2	IF_10
0x400010b	            0xeb54	                           jmp 0x4000161	       378	utresrc.c	FUNCTION_2	IF_10
0x400010d	          0x4d85db	                           test r11, r11	       385	utresrc.c	FUNCTION_2	IF_11
0x4000110	      0xbe17300000	                         mov esi, 0x3017	       371	utresrc.c	FUNCTION_2	IF_7	IF_8
0x4000115	            0x744a	                            je 0x4000161	       385	utresrc.c	FUNCTION_2	IF_11
0x4000117	    0x48c7c2000000	                              mov rdx, 0	       386	utresrc.c	FUNCTION_2	IF_11	CALL_6
0x400011e	      0xbe84010000	                          mov esi, 0x184	       386	utresrc.c	FUNCTION_2	IF_11	CALL_6
0x4000123	    0x48c7c7000000	                              mov rdi, 0	       386	utresrc.c	FUNCTION_2	IF_11	CALL_6
0x400012a	      0xe800000000	                          call 0x400012f	       386	utresrc.c	FUNCTION_2	IF_11	CALL_6
0x400012f	      0xbe17300000	                         mov esi, 0x3017	       390	utresrc.c	FUNCTION_2
0x4000134	            0xeb2b	                           jmp 0x4000161	       390	utresrc.c	FUNCTION_2
0x4000136	          0x4d85db	                           test r11, r11	       394	utresrc.c	FUNCTION_2	IF_12
0x4000139	      0xbe1f300000	                         mov esi, 0x301f	       401	utresrc.c	FUNCTION_2
0x400013e	            0x7421	                            je 0x4000161	       394	utresrc.c	FUNCTION_2	IF_12
0x4000140	      0xbe8f010000	                          mov esi, 0x18f	       395	utresrc.c	FUNCTION_2	IF_12	CALL_7
0x4000145	        0x440fb7c0	                           movzx r8d, ax	       395	utresrc.c	FUNCTION_2	IF_12	CALL_7
0x4000149	    0x48c7c2000000	                              mov rdx, 0	       395	utresrc.c	FUNCTION_2	IF_12	CALL_7
0x4000150	    0x48c7c7000000	                              mov rdi, 0	       395	utresrc.c	FUNCTION_2	IF_12	CALL_7
0x4000157	      0xe800000000	                          call 0x400015c	       395	utresrc.c	FUNCTION_2	IF_12	CALL_7
0x400015c	      0xbe1f300000	                         mov esi, 0x301f	       401	utresrc.c	FUNCTION_2
0x4000161	            0x89f0	                            mov eax, esi	       402	utresrc.c	FUNCTION_2
0x4000163	              0x5b	                                 pop rbx	       402	utresrc.c	FUNCTION_2
0x4000164	              0xc3	                                     ret	       402	utresrc.c	FUNCTION_2
acpi_ut_get_resource_type	SWITCH,0:CALL,4:FOR,0:IF,1:ELSE,1:WHILE,0:functions,0:DO,0	6
0x4000040	            0x8a07	                      mov al, byte [rdi]	       426	utresrc.c	FUNCTION_3	IF_1	CALL_2
0x4000042	            0x88c2	                              mov dl, al	       434	utresrc.c	FUNCTION_3	ELSE_1	CALL_4
0x4000044	          0x83e278	                           and edx, 0x78	       434	utresrc.c	FUNCTION_3	ELSE_1	CALL_4
0x4000047	            0x84c0	                             test al, al	       434	utresrc.c	FUNCTION_3	ELSE_1	CALL_4
0x4000049	           0xf49c2	                         cmovns eax, edx	       434	utresrc.c	FUNCTION_3	ELSE_1	CALL_4
0x400004c	              0xc3	                                     ret	       436	utresrc.c	FUNCTION_3
acpi_ut_get_resource_end_tag	SWITCH,0:CALL,4:FOR,0:IF,1:ELSE,0:WHILE,0:functions,0:DO,0	11
0x40002b2	          0x8b5718	            mov edx, dword [rdi + 0x18] 	       552	utresrc.c	FUNCTION_7	IF_1
0x40002b5	          0x4989f0	                             mov r8, rsi	       545	utresrc.c	FUNCTION_7
0x40002b8	        0x488b7710	            mov rsi, qword [rdi + 0x10] 	       545	utresrc.c	FUNCTION_7
0x40002bc	            0x85d2	                           test edx, edx	       552	utresrc.c	FUNCTION_7	IF_1
0x40002be	            0x7409	                            je 0x40002c9	       552	utresrc.c	FUNCTION_7	IF_1
0x40002c0	            0x31c9	                            xor ecx, ecx	       559	utresrc.c	FUNCTION_7	CALL_3
0x40002c2	            0x31ff	                            xor edi, edi	       559	utresrc.c	FUNCTION_7	CALL_3
0x40002c4	      0xe9bcfeffff	      jmp sym.acpi_ut_walk_aml_resources	       559	utresrc.c	FUNCTION_7	CALL_3
0x40002c9	          0x498930	                     mov qword [r8], rsi	       553	utresrc.c	FUNCTION_7	IF_1
0x40002cc	            0x31c0	                            xor eax, eax	       564	utresrc.c	FUNCTION_7
0x40002ce	              0xc3	                                     ret	       564	utresrc.c	FUNCTION_7
acpi_ut_get_descriptor_length	SWITCH,0:CALL,3:FOR,0:IF,0:ELSE,0:WHILE,0:functions,0:DO,0	7
0x4000170	      0xe800000000	                          call 0x4000175	       525	utresrc.c	FUNCTION_6	CALL_2
0x4000175	            0x8a17	                      mov dl, byte [rdi]	       499	utresrc.c	FUNCTION_5	ELSE_1
0x4000177	           0xfb7c0	                           movzx eax, ax	       525	utresrc.c	FUNCTION_6	CALL_2
0x400017a	          0xc0fa07	                               sar dl, 7	       499	utresrc.c	FUNCTION_5	ELSE_1
0x400017d	          0x83e202	                              and edx, 2	       525	utresrc.c	FUNCTION_6	CALL_2
0x4000180	        0x8d440201	                lea eax, [rdx + rax + 1]	       525	utresrc.c	FUNCTION_6	CALL_2
0x4000184	              0xc3	                                     ret	       527	utresrc.c	FUNCTION_6
