acpi_ds_init_package_element	functions,0:FOR,0:DO,0:CALL,4:SWITCH,0:WHILE,0:ELSE,2:IF,4	127
0x4000040	      0x4c8d542408	                      lea r10, [rsp + 8]	       301	dspkginit.c	FUNCTION_2
0x4000045	        0x4883e4f0	             and rsp, 0xfffffffffffffff0	       301	dspkginit.c	FUNCTION_2
0x4000049	        0x41ff72f8	                    push qword [r10 - 8]	       301	dspkginit.c	FUNCTION_2
0x400004d	              0x55	                                push rbp	       301	dspkginit.c	FUNCTION_2
0x400004e	          0x4889e5	                            mov rbp, rsp	       301	dspkginit.c	FUNCTION_2
0x4000051	            0x4157	                                push r15	       301	dspkginit.c	FUNCTION_2
0x4000053	            0x4156	                                push r14	       301	dspkginit.c	FUNCTION_2
0x4000055	            0x4155	                                push r13	       301	dspkginit.c	FUNCTION_2
0x4000057	            0x4154	                                push r12	       301	dspkginit.c	FUNCTION_2
0x4000059	            0x4152	                                push r10	       301	dspkginit.c	FUNCTION_2
0x400005b	              0x53	                                push rbx	       301	dspkginit.c	FUNCTION_2
0x400005c	        0x4883ec70	                           sub rsp, 0x70	       301	dspkginit.c	FUNCTION_2
0x4000060	    0x65488b042528	                mov rax, qword gs:[0x28]	       301	dspkginit.c	FUNCTION_2
0x4000069	        0x488945c8	             mov qword [rbp - 0x38], rax	       301	dspkginit.c	FUNCTION_2
0x400006d	            0x31c0	                            xor eax, eax	       301	dspkginit.c	FUNCTION_2
0x400006f	          0x4885f6	                           test rsi, rsi	       306	dspkginit.c	FUNCTION_2	IF_1
0x4000072	     0xf8485010000	                            je 0x40001fd	       306	dspkginit.c	FUNCTION_2	IF_1
0x4000078	          0x4885c9	                           test rcx, rcx	       316	dspkginit.c	FUNCTION_2	IF_2
0x400007b	          0x4889cb	                            mov rbx, rcx	       316	dspkginit.c	FUNCTION_2	IF_2
0x400007e	            0x7504	                           jne 0x4000084	       316	dspkginit.c	FUNCTION_2	IF_2
0x4000080	        0x488b5a30	            mov rbx, qword [rdx + 0x30] 	       324	dspkginit.c	FUNCTION_2	ELSE_1
0x4000084	          0x8a4609	                  mov al, byte [rsi + 9]	       329	dspkginit.c	FUNCTION_2	IF_3
0x4000087	            0x3c14	                            cmp al, 0x14	       329	dspkginit.c	FUNCTION_2	IF_3
0x4000089	     0xf8566010000	                           jne 0x40001f5	       329	dspkginit.c	FUNCTION_2	IF_3
0x400008f	          0x4c8b23	                    mov r12, qword [rbx]	       360	dspkginit.c	FUNCTION_3
0x4000092	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       363	dspkginit.c	FUNCTION_3
0x400009d	    0x41807c240f00	                 cmp byte [r12 + 0xf], 0	       370	dspkginit.c	FUNCTION_3	IF_1
0x40000a3	     0xf8554010000	                           jne 0x40001fd	       370	dspkginit.c	FUNCTION_3	IF_1
0x40000a9	    0x4c8dbd60ffff	                   lea r15, [rbp - 0xa0]	       382	dspkginit.c	FUNCTION_3	CALL_3
0x40000b0	      0x498b442418	            mov rax, qword [r12 + 0x18] 	       380	dspkginit.c	FUNCTION_3
0x40000b5	      0x498b742430	            mov rsi, qword [r12 + 0x30] 	       382	dspkginit.c	FUNCTION_3	CALL_3
0x40000ba	    0x488dbd70ffff	                   lea rdi, [rbp - 0x90]	       382	dspkginit.c	FUNCTION_3	CALL_3
0x40000c1	          0x4531c9	                            xor r9d, r9d	       382	dspkginit.c	FUNCTION_3	CALL_3
0x40000c4	            0x31d2	                            xor edx, edx	       382	dspkginit.c	FUNCTION_3	CALL_3
0x40000c6	            0x4157	                                push r15	       382	dspkginit.c	FUNCTION_3	CALL_3
0x40000c8	    0x41b803000000	                              mov r8d, 3	       382	dspkginit.c	FUNCTION_3	CALL_3
0x40000ce	      0xb903000000	                              mov ecx, 3	       382	dspkginit.c	FUNCTION_3	CALL_3
0x40000d3	        0x48894580	             mov qword [rbp - 0x80], rax	       380	dspkginit.c	FUNCTION_3
0x40000d7	      0xe800000000	                          call 0x40000dc	       382	dspkginit.c	FUNCTION_3	CALL_3
0x40000dc	          0x4189c5	                           mov r13d, eax	       382	dspkginit.c	FUNCTION_3	CALL_3
0x40000df	          0x4585ed	                         test r13d, r13d	       386	dspkginit.c	FUNCTION_3	IF_2	CALL_4
0x40000e2	              0x58	                                 pop rax	       386	dspkginit.c	FUNCTION_3	IF_2	CALL_4
0x40000e3	            0x7465	                            je 0x400014a	       386	dspkginit.c	FUNCTION_3	IF_2	CALL_4
0x40000e5	        0x4183fd05	                             cmp r13d, 5	       387	dspkginit.c	FUNCTION_3	IF_2	IF_3
0x40000e9	            0x7509	                           jne 0x40000f4	       387	dspkginit.c	FUNCTION_3	IF_2	IF_3
0x40000eb	    0x803d00000000	                cmp byte [0x040000f2], 0	       388	dspkginit.c	FUNCTION_3	IF_2	IF_3
0x40000f2	            0x754c	                           jne 0x4000140	       388	dspkginit.c	FUNCTION_3	IF_2	IF_3
0x40000f4	      0x498b742430	            mov rsi, qword [r12 + 0x30] 	       408	dspkginit.c	FUNCTION_3	IF_2	CALL_6
0x40000f9	    0x488d8d68ffff	                   lea rcx, [rbp - 0x98]	       408	dspkginit.c	FUNCTION_3	IF_2	CALL_6
0x4000100	            0x31d2	                            xor edx, edx	       408	dspkginit.c	FUNCTION_3	IF_2	CALL_6
0x4000102	          0x83cfff	                      or edi, 0xffffffff	       408	dspkginit.c	FUNCTION_3	IF_2	CALL_6
0x4000105	      0xe800000000	                          call 0x400010a	       408	dspkginit.c	FUNCTION_3	IF_2	CALL_6
0x400010a	    0x4c8b8568ffff	              mov r8, qword [rbp - 0x98]	       412	dspkginit.c	FUNCTION_3	IF_2	CALL_7
0x4000111	          0x4189c4	                           mov r12d, eax	       408	dspkginit.c	FUNCTION_3	IF_2	CALL_6
0x4000114	    0x48c7c1000000	                              mov rcx, 0	       412	dspkginit.c	FUNCTION_3	IF_2	CALL_7
0x400011b	          0x4489ea	                           mov edx, r13d	       412	dspkginit.c	FUNCTION_3	IF_2	CALL_7
0x400011e	      0xbe9e010000	                          mov esi, 0x19e	       412	dspkginit.c	FUNCTION_3	IF_2	CALL_7
0x4000123	    0x48c7c7000000	                              mov rdi, 0	       412	dspkginit.c	FUNCTION_3	IF_2	CALL_7
0x400012a	      0xe800000000	                          call 0x400012f	       412	dspkginit.c	FUNCTION_3	IF_2	CALL_7
0x400012f	          0x4585e4	                         test r12d, r12d	       415	dspkginit.c	FUNCTION_3	IF_2	IF_4	CALL_8
0x4000132	            0x750c	                           jne 0x4000140	       415	dspkginit.c	FUNCTION_3	IF_2	IF_4	CALL_8
0x4000134	    0x488bbd68ffff	             mov rdi, qword [rbp - 0x98]	        62	aclinuxex.h	FUNCTION_6	CALL_1
0x400013b	      0xe800000000	                          call 0x4000140	        62	aclinuxex.h	FUNCTION_6	CALL_1
0x4000140	          0x488b3b	                    mov rdi, qword [rbx]	       421	dspkginit.c	FUNCTION_3	IF_2	CALL_10
0x4000143	      0xe800000000	                          call 0x4000148	       421	dspkginit.c	FUNCTION_3	IF_2	CALL_10
0x4000148	            0xeb32	                           jmp 0x400017c	       421	dspkginit.c	FUNCTION_3	IF_2	CALL_10
0x400014a	    0x488b8d60ffff	             mov rcx, qword [rbp - 0xa0]	       424	dspkginit.c	FUNCTION_3	ELSE_1	IF_5
0x4000151	          0x8a4109	                  mov al, byte [rcx + 9]	       424	dspkginit.c	FUNCTION_3	ELSE_1	IF_5
0x4000154	            0x84c0	                             test al, al	       424	dspkginit.c	FUNCTION_3	ELSE_1	IF_5
0x4000156	            0x752d	                           jne 0x4000185	       424	dspkginit.c	FUNCTION_3	ELSE_1	IF_5
0x4000158	        0x488b4580	             mov rax, qword [rbp - 0x80]	       428	dspkginit.c	FUNCTION_3	ELSE_1	IF_5	CALL_11
0x400015c	        0x4883c10c	                            add rcx, 0xc	       428	dspkginit.c	FUNCTION_3	ELSE_1	IF_5	CALL_11
0x4000160	    0x48c7c2000000	                              mov rdx, 0	       428	dspkginit.c	FUNCTION_3	ELSE_1	IF_5	CALL_11
0x4000167	      0xbeaf010000	                          mov esi, 0x1af	       428	dspkginit.c	FUNCTION_3	ELSE_1	IF_5	CALL_11
0x400016c	    0x48c7c7000000	                              mov rdi, 0	       428	dspkginit.c	FUNCTION_3	ELSE_1	IF_5	CALL_11
0x4000173	        0x4c8d400c	                     lea r8, [rax + 0xc]	       428	dspkginit.c	FUNCTION_3	ELSE_1	IF_5	CALL_11
0x4000177	      0xe800000000	                          call 0x400017c	       428	dspkginit.c	FUNCTION_3	ELSE_1	IF_5	CALL_11
0x400017c	    0x48c703000000	                      mov qword [rbx], 0	       432	dspkginit.c	FUNCTION_3	ELSE_1	IF_5
0x4000183	            0xeb78	                           jmp 0x40001fd	       432	dspkginit.c	FUNCTION_3	ELSE_1	IF_5
0x4000185	            0x3c15	                            cmp al, 0x15	       440	dspkginit.c	FUNCTION_3	IF_6
0x4000187	            0x750a	                           jne 0x4000193	       440	dspkginit.c	FUNCTION_3	IF_6
0x4000189	          0x488b01	                    mov rax, qword [rcx]	       441	dspkginit.c	FUNCTION_3	IF_6	CALL_12
0x400018c	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       441	dspkginit.c	FUNCTION_3	IF_6	CALL_12
0x4000193	    0x4c8bad60ffff	             mov r13, qword [rbp - 0xa0]	       448	dspkginit.c	FUNCTION_3
0x400019a	    0x41c644240f01	                 mov byte [r12 + 0xf], 1	       447	dspkginit.c	FUNCTION_3
0x40001a0	            0x31f6	                            xor esi, esi	       466	dspkginit.c	FUNCTION_3	CALL_13
0x40001a2	          0x4c89ff	                            mov rdi, r15	       466	dspkginit.c	FUNCTION_3	CALL_13
0x40001a5	      0x4d896c2418	             mov qword [r12 + 0x18], r13	       448	dspkginit.c	FUNCTION_3
0x40001aa	        0x458a7509	                mov r14b, byte [r13 + 9]	       449	dspkginit.c	FUNCTION_3
0x40001ae	      0xe800000000	                          call 0x40001b3	       466	dspkginit.c	FUNCTION_3	CALL_13
0x40001b3	            0x85c0	                           test eax, eax	       467	dspkginit.c	FUNCTION_3	IF_7	CALL_14
0x40001b5	            0x7546	                           jne 0x40001fd	       467	dspkginit.c	FUNCTION_3	IF_7	CALL_14
0x40001b7	        0x4180fe0d	                           cmp r14b, 0xd	       467	dspkginit.c	FUNCTION_3	IF_7	CALL_14
0x40001bb	            0x7724	                            ja 0x40001e1	       467	dspkginit.c	FUNCTION_3	IF_7	CALL_14
0x40001bd	      0xb801000000	                              mov eax, 1	       467	dspkginit.c	FUNCTION_3	IF_7	CALL_14
0x40001c2	          0x4488f1	                            mov cl, r14b	       467	dspkginit.c	FUNCTION_3	IF_7	CALL_14
0x40001c5	          0x48d3e0	                             shl rax, cl	       467	dspkginit.c	FUNCTION_3	IF_7	CALL_14
0x40001c8	      0xa940210000	                        test eax, 0x2140	       467	dspkginit.c	FUNCTION_3	IF_7	CALL_14
0x40001cd	            0x752e	                           jne 0x40001fd	       467	dspkginit.c	FUNCTION_3	IF_7	CALL_14
0x40001cf	      0xa9801e0000	                        test eax, 0x1e80	       467	dspkginit.c	FUNCTION_3	IF_7	CALL_14
0x40001d4	            0x740b	                            je 0x40001e1	       467	dspkginit.c	FUNCTION_3	IF_7	CALL_14
0x40001d6	        0x498b7d00	                    mov rdi, qword [r13]	       490	dspkginit.c	FUNCTION_3	SWITCH_1	CALL_15
0x40001da	      0xe800000000	                          call 0x40001df	       490	dspkginit.c	FUNCTION_3	SWITCH_1	CALL_15
0x40001df	            0xeb1c	                           jmp 0x40001fd	       490	dspkginit.c	FUNCTION_3	SWITCH_1	CALL_15
0x40001e1	          0x4c89e7	                            mov rdi, r12	       499	dspkginit.c	FUNCTION_3	SWITCH_1	CALL_16
0x40001e4	      0xe800000000	                          call 0x40001e9	       499	dspkginit.c	FUNCTION_3	SWITCH_1	CALL_16
0x40001e9	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       500	dspkginit.c	FUNCTION_3	SWITCH_1
0x40001f0	          0x488903	                    mov qword [rbx], rax	       500	dspkginit.c	FUNCTION_3	SWITCH_1
0x40001f3	            0xeb08	                           jmp 0x40001fd	       500	dspkginit.c	FUNCTION_3	SWITCH_1
0x40001f5	            0x3c04	                               cmp al, 4	       334	dspkginit.c	FUNCTION_2	ELSE_2	IF_4
0x40001f7	            0x7504	                           jne 0x40001fd	       334	dspkginit.c	FUNCTION_2	ELSE_2	IF_4
0x40001f9	        0x804e0c04	                  or byte [rsi + 0xc], 4	       335	dspkginit.c	FUNCTION_2	ELSE_2	IF_4
0x40001fd	            0x31c0	                            xor eax, eax	       339	dspkginit.c	FUNCTION_2
0x40001ff	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       339	dspkginit.c	FUNCTION_2
0x4000203	    0x654833142528	                xor rdx, qword gs:[0x28]	       339	dspkginit.c	FUNCTION_2
0x400020c	            0x7405	                            je 0x4000213	       339	dspkginit.c	FUNCTION_2
0x400020e	      0xe800000000	                          call 0x4000213	       339	dspkginit.c	FUNCTION_2
0x4000213	        0x488d65d0	                   lea rsp, [rbp - 0x30]	       339	dspkginit.c	FUNCTION_2
0x4000217	              0x5b	                                 pop rbx	       339	dspkginit.c	FUNCTION_2
0x4000218	            0x415a	                                 pop r10	       339	dspkginit.c	FUNCTION_2
0x400021a	            0x415c	                                 pop r12	       339	dspkginit.c	FUNCTION_2
0x400021c	            0x415d	                                 pop r13	       339	dspkginit.c	FUNCTION_2
0x400021e	            0x415e	                                 pop r14	       339	dspkginit.c	FUNCTION_2
0x4000220	            0x415f	                                 pop r15	       339	dspkginit.c	FUNCTION_2
0x4000222	              0x5d	                                 pop rbp	       339	dspkginit.c	FUNCTION_2
0x4000223	        0x498d62f8	                      lea rsp, [r10 - 8]	       339	dspkginit.c	FUNCTION_2
0x4000227	              0xc3	                                     ret	       339	dspkginit.c	FUNCTION_2
