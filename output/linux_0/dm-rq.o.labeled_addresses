end_clone_bio	DO,0:WHILE,0:ELSE,1:IF,3:CALL,3:FOR,0:SWITCH,0:functions,0	33
0x4000300	            0x4155	                                push r13	       116	dm-rq.c	FUNCTION_13
0x4000302	            0x4154	                                push r12	       116	dm-rq.c	FUNCTION_13
0x4000304	              0x55	                                push rbp	       116	dm-rq.c	FUNCTION_13
0x4000305	              0x53	                                push rbx	       116	dm-rq.c	FUNCTION_13
0x4000306	        0x488b5ff8	                mov rbx, qword [rdi - 8]	       119	dm-rq.c	FUNCTION_13
0x400030a	        0x488b47f0	             mov rax, qword [rdi - 0x10]	       120	dm-rq.c	FUNCTION_13
0x400030e	      0x440fb6671a	          movzx r12d, byte [rdi + 0x1a] 	       121	dm-rq.c	FUNCTION_13
0x4000313	          0x4c8b2f	                    mov r13, qword [rdi]	       122	dm-rq.c	FUNCTION_13
0x4000316	          0x8b6830	            mov ebp, dword [rax + 0x30] 	       120	dm-rq.c	FUNCTION_13
0x4000319	      0xe800000000	                          call 0x400031e	       124	dm-rq.c	FUNCTION_13	CALL_2
0x400031e	        0x807b4800	                cmp byte [rbx + 0x48], 0	       126	dm-rq.c	FUNCTION_13	IF_1
0x4000322	            0x752a	                           jne 0x400034e	       126	dm-rq.c	FUNCTION_13	IF_1
0x4000324	          0x4584e4	                         test r12b, r12b	       133	dm-rq.c	FUNCTION_13	ELSE_1	IF_2
0x4000327	            0x7418	                            je 0x4000341	       133	dm-rq.c	FUNCTION_13	ELSE_1	IF_2
0x4000329	          0x8b5374	            mov edx, dword [rbx + 0x74] 	       133	dm-rq.c	FUNCTION_13	ELSE_1	IF_2
0x400032c	        0x44886348	             mov byte [rbx + 0x48], r12b	       139	dm-rq.c	FUNCTION_13	ELSE_1	IF_2
0x4000330	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       156	dm-rq.c	FUNCTION_13	CALL_3
0x4000334	            0x31f6	                            xor esi, esi	       156	dm-rq.c	FUNCTION_13	CALL_3
0x4000336	              0x5b	                                 pop rbx	       157	dm-rq.c	FUNCTION_13
0x4000337	              0x5d	                                 pop rbp	       157	dm-rq.c	FUNCTION_13
0x4000338	            0x415c	                                 pop r12	       157	dm-rq.c	FUNCTION_13
0x400033a	            0x415d	                                 pop r13	       157	dm-rq.c	FUNCTION_13
0x400033c	      0xe900000000	                           jmp 0x4000341	       156	dm-rq.c	FUNCTION_13	CALL_3
0x4000341	          0x8b5374	            mov edx, dword [rbx + 0x74] 	       147	dm-rq.c	FUNCTION_13
0x4000344	             0x1ea	                            add edx, ebp	       147	dm-rq.c	FUNCTION_13
0x4000346	          0x4d85ed	                           test r13, r13	       154	dm-rq.c	FUNCTION_13	IF_3
0x4000349	          0x895374	             mov dword [rbx + 0x74], edx	       147	dm-rq.c	FUNCTION_13
0x400034c	            0x74e2	                            je 0x4000330	       154	dm-rq.c	FUNCTION_13	IF_3
0x400034e	              0x5b	                                 pop rbx	       157	dm-rq.c	FUNCTION_13
0x400034f	              0x5d	                                 pop rbp	       157	dm-rq.c	FUNCTION_13
0x4000350	            0x415c	                                 pop r12	       157	dm-rq.c	FUNCTION_13
0x4000352	            0x415d	                                 pop r13	       157	dm-rq.c	FUNCTION_13
0x4000354	              0xc3	                                     ret	       157	dm-rq.c	FUNCTION_13
end_clone_request	DO,0:WHILE,0:ELSE,0:IF,0:CALL,1:FOR,0:SWITCH,0:functions,0	4
0x40002e0	    0x488b87180100	           mov rax, qword [rdi + 0x118] 	       399	dm-rq.c	FUNCTION_27	CALL_1
0x40002e7	        0x400fb6f6	                          movzx esi, sil	       399	dm-rq.c	FUNCTION_27	CALL_1
0x40002eb	        0x488b7810	            mov rdi, qword [rax + 0x10] 	       399	dm-rq.c	FUNCTION_27	CALL_1
0x40002ef	            0xebcf	             jmp sym.dm_complete_request	       399	dm-rq.c	FUNCTION_27	CALL_1
dm_request_based	DO,0:WHILE,0:ELSE,0:IF,0:CALL,1:FOR,0:SWITCH,0:functions,0	9
0x4000c60	        0x488b5760	            mov rdx, qword [rdi + 0x60] 	        59	dm-rq.c	FUNCTION_6	CALL_1
0x4000c64	      0xb801000000	                              mov eax, 1	       772	blkdev.h	FUNCTION_89
0x4000c69	    0x4883ba980000	               cmp qword [rdx + 0x98], 0	       772	blkdev.h	FUNCTION_89
0x4000c71	            0x7402	                            je 0x4000c75	       772	blkdev.h	FUNCTION_89
0x4000c73	            0xf3c3	                                     ret	        60	dm-rq.c	FUNCTION_6
0x4000c75	            0x31c0	                            xor eax, eax	       772	blkdev.h	FUNCTION_89
0x4000c77	    0x4883baf80000	               cmp qword [rdx + 0xf8], 0	       772	blkdev.h	FUNCTION_89
0x4000c7f	           0xf95c0	                                setne al	       772	blkdev.h	FUNCTION_89
0x4000c82	              0xc3	                                     ret	        60	dm-rq.c	FUNCTION_6
dm_mq_cleanup_mapped_device	DO,0:WHILE,0:ELSE,0:IF,1:CALL,2:FOR,0:SWITCH,0:functions,0	11
0x4001060	          0x4889f8	                            mov rax, rdi	       838	dm-rq.c	FUNCTION_45
0x4001063	    0x488bbfb80400	           mov rdi, qword [rdi + 0x4b8] 	       839	dm-rq.c	FUNCTION_45	IF_1
0x400106a	          0x4885ff	                           test rdi, rdi	       839	dm-rq.c	FUNCTION_45	IF_1
0x400106d	            0x7416	                            je 0x4001085	       839	dm-rq.c	FUNCTION_45	IF_1
0x400106f	              0x53	                                push rbx	       838	dm-rq.c	FUNCTION_45
0x4001070	          0x4889c3	                            mov rbx, rax	       838	dm-rq.c	FUNCTION_45
0x4001073	      0xe800000000	                          call 0x4001078	       840	dm-rq.c	FUNCTION_45	IF_1	CALL_1
0x4001078	    0x488bbbb80400	           mov rdi, qword [rbx + 0x4b8] 	       841	dm-rq.c	FUNCTION_45	IF_1	CALL_2
0x400107f	              0x5b	                                 pop rbx	       843	dm-rq.c	FUNCTION_45
0x4001080	      0xe900000000	                           jmp 0x4001085	       841	dm-rq.c	FUNCTION_45	IF_1	CALL_2
0x4001085	            0xf3c3	                                     ret	       841	dm-rq.c	FUNCTION_45	IF_1	CALL_2
dm_complete_request	DO,0:WHILE,0:ELSE,1:IF,1:CALL,3:FOR,0:SWITCH,0:functions,0	6
0x40002c0	          0x488b07	                    mov rax, qword [rdi]	       366	dm-rq.c	FUNCTION_25	IF_1
0x40002c3	    0x4088b7700100	             mov byte [rdi + 0x170], sil	       365	dm-rq.c	FUNCTION_25
0x40002ca	    0x4883b8f80000	               cmp qword [rax + 0xf8], 0	       366	dm-rq.c	FUNCTION_25	IF_1
0x40002d2	            0x7405	                            je 0x40002d9	       366	dm-rq.c	FUNCTION_25	IF_1
0x40002d4	      0xe900000000	                           jmp 0x40002d9	       369	dm-rq.c	FUNCTION_25	CALL_3
0x40002d9	      0xe900000000	                           jmp 0x40002de	       367	dm-rq.c	FUNCTION_25	CALL_2
dm_rq_init_rq	DO,0:WHILE,0:ELSE,0:IF,0:CALL,1:FOR,0:SWITCH,0:functions,0	8
0x4000070	    0x488b87a00800	           mov rax, qword [rdi + 0x8a0] 	       586	dm-rq.c	FUNCTION_35	CALL_1
0x4000077	    0x488986280100	            mov qword [rsi + 0x128], rax	       574	dm-rq.c	FUNCTION_34
0x400007e	    0xf680c0040000	              test byte [rax + 0x4c0], 2	       576	dm-rq.c	FUNCTION_34	IF_1
0x4000085	            0x740e	                            je 0x4000095	       576	dm-rq.c	FUNCTION_34	IF_1
0x4000087	    0x488d86a00100	                  lea rax, [rsi + 0x1a0]	       578	dm-rq.c	FUNCTION_34	IF_1
0x400008e	    0x488986780100	            mov qword [rsi + 0x178], rax	       578	dm-rq.c	FUNCTION_34	IF_1
0x4000095	            0x31c0	                            xor eax, eax	       587	dm-rq.c	FUNCTION_35
0x4000097	              0xc3	                                     ret	       587	dm-rq.c	FUNCTION_35
dm_get_reserved_rq_based_ios	DO,0:WHILE,0:ELSE,0:IF,0:CALL,1:FOR,0:SWITCH,0:functions,0	4
0x40000d0	      0xba00040000	                          mov edx, 0x400	        41	dm-rq.c	FUNCTION_3	CALL_1
0x40000d5	      0xbe00010000	                          mov esi, 0x100	        41	dm-rq.c	FUNCTION_3	CALL_1
0x40000da	    0x48c7c7000000	                              mov rdi, 0	        41	dm-rq.c	FUNCTION_3	CALL_1
0x40000e1	      0xe900000000	                           jmp 0x40000e6	        41	dm-rq.c	FUNCTION_3	CALL_1
dm_old_init_request_queue	DO,0:WHILE,0:ELSE,0:IF,3:CALL,8:FOR,0:SWITCH,0:functions,0	57
0x4000e00	              0x55	                                push rbp	       699	dm-rq.c	FUNCTION_41
0x4000e01	              0x53	                                push rbx	       699	dm-rq.c	FUNCTION_41
0x4000e02	          0x4889fb	                            mov rbx, rdi	       699	dm-rq.c	FUNCTION_41
0x4000e05	        0x488b4760	            mov rax, qword [rdi + 0x60] 	       703	dm-rq.c	FUNCTION_41
0x4000e09	    0x48c780980800	          mov qword [rax + 0x898], 0x78 	       703	dm-rq.c	FUNCTION_41
0x4000e14	        0x488b4760	            mov rax, qword [rdi + 0x60] 	       704	dm-rq.c	FUNCTION_41
0x4000e18	    0x4889b8a00800	            mov qword [rax + 0x8a0], rdi	       704	dm-rq.c	FUNCTION_41
0x4000e1f	        0x488b4760	            mov rax, qword [rdi + 0x60] 	       705	dm-rq.c	FUNCTION_41
0x4000e23	    0x48c780980000	               mov qword [rax + 0x98], 0	       705	dm-rq.c	FUNCTION_41
0x4000e2e	        0x488b4760	            mov rax, qword [rdi + 0x60] 	       706	dm-rq.c	FUNCTION_41
0x4000e32	          0x4889f7	                            mov rdi, rsi	       708	dm-rq.c	FUNCTION_41	CALL_1
0x4000e35	    0x48c780e00000	               mov qword [rax + 0xe0], 0	       706	dm-rq.c	FUNCTION_41
0x4000e40	      0xe800000000	                          call 0x4000e45	       708	dm-rq.c	FUNCTION_41	CALL_1
0x4000e45	          0x4885c0	                           test rax, rax	       709	dm-rq.c	FUNCTION_41	IF_1
0x4000e48	            0x740b	                            je 0x4000e55	       709	dm-rq.c	FUNCTION_41	IF_1
0x4000e4a	          0x8b4038	            mov eax, dword [rax + 0x38] 	       709	dm-rq.c	FUNCTION_41	IF_1
0x4000e4d	            0x85c0	                           test eax, eax	       709	dm-rq.c	FUNCTION_41	IF_1
0x4000e4f	     0xf858d000000	                           jne 0x4000ee2	       709	dm-rq.c	FUNCTION_41	IF_1
0x4000e55	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	       714	dm-rq.c	FUNCTION_41	IF_2	CALL_2
0x4000e59	      0xe800000000	                          call 0x4000e5e	       714	dm-rq.c	FUNCTION_41	IF_2	CALL_2
0x4000e5e	            0x85c0	                           test eax, eax	       714	dm-rq.c	FUNCTION_41	IF_2	CALL_2
0x4000e60	     0xf88a0000000	                            js 0x4000f06	       714	dm-rq.c	FUNCTION_41	IF_2	CALL_2
0x4000e66	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	       720	dm-rq.c	FUNCTION_41	CALL_3
0x4000e6a	    0x488dab600400	                  lea rbp, [rbx + 0x460]	       723	dm-rq.c	FUNCTION_41	CALL_4
0x4000e71	    0x48c7c6000000	                              mov rsi, 0	       720	dm-rq.c	FUNCTION_41	CALL_3
0x4000e78	    0xc783a0040000	              mov dword [rbx + 0x4a0], 0	       718	dm-rq.c	FUNCTION_41
0x4000e82	      0xe800000000	                          call 0x4000e87	       720	dm-rq.c	FUNCTION_41	CALL_3
0x4000e87	    0x48c7c2000000	                              mov rdx, 0	       723	dm-rq.c	FUNCTION_41	CALL_4
0x4000e8e	    0x48c7c6000000	                              mov rsi, 0	       723	dm-rq.c	FUNCTION_41	CALL_4
0x4000e95	          0x4889ef	                            mov rdi, rbp	       723	dm-rq.c	FUNCTION_41	CALL_4
0x4000e98	      0xe800000000	                          call 0x4000e9d	       723	dm-rq.c	FUNCTION_41	CALL_4
0x4000e9d	          0x4889df	                            mov rdi, rbx	       724	dm-rq.c	FUNCTION_41	CALL_5
0x4000ea0	      0xe800000000	                          call 0x4000ea5	       724	dm-rq.c	FUNCTION_41	CALL_5
0x4000ea5	          0x4889ee	                            mov rsi, rbp	       724	dm-rq.c	FUNCTION_41	CALL_5
0x4000ea8	          0x4989c0	                             mov r8, rax	       724	dm-rq.c	FUNCTION_41	CALL_5
0x4000eab	    0x48c7c1000000	                              mov rcx, 0	       724	dm-rq.c	FUNCTION_41	CALL_5
0x4000eb2	      0xbaffffffff	                     mov edx, 0xffffffff	       724	dm-rq.c	FUNCTION_41	CALL_5
0x4000eb7	    0x48c7c7000000	                              mov rdi, 0	       724	dm-rq.c	FUNCTION_41	CALL_5
0x4000ebe	      0xe800000000	                          call 0x4000ec3	       724	dm-rq.c	FUNCTION_41	CALL_5
0x4000ec3	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	       724	dm-rq.c	FUNCTION_41	CALL_5
0x4000ec9	          0x4889c5	                            mov rbp, rax	       724	dm-rq.c	FUNCTION_41	CALL_5
0x4000ecc	            0x772b	                            ja 0x4000ef9	       724	dm-rq.c	FUNCTION_41	CALL_5
0x4000ece	          0x4889c7	                            mov rdi, rax	       724	dm-rq.c	FUNCTION_41	CALL_5
0x4000ed1	      0xe800000000	                          call 0x4000ed6	       724	dm-rq.c	FUNCTION_41	CALL_5
0x4000ed6	    0x4889ab980400	            mov qword [rbx + 0x498], rbp	       724	dm-rq.c	FUNCTION_41	CALL_5
0x4000edd	            0x31c0	                            xor eax, eax	       732	dm-rq.c	FUNCTION_41
0x4000edf	              0x5b	                                 pop rbx	       733	dm-rq.c	FUNCTION_41
0x4000ee0	              0x5d	                                 pop rbp	       733	dm-rq.c	FUNCTION_41
0x4000ee1	              0xc3	                                     ret	       733	dm-rq.c	FUNCTION_41
0x4000ee2	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	       711	dm-rq.c	FUNCTION_41	IF_1
0x4000ee6	    0x480182980800	           add qword [rdx + 0x898], rax 	       711	dm-rq.c	FUNCTION_41	IF_1
0x4000eed	    0x808bc0040000	                or byte [rbx + 0x4c0], 2	       712	dm-rq.c	FUNCTION_41	IF_1
0x4000ef4	      0xe95cffffff	                           jmp 0x4000e55	       712	dm-rq.c	FUNCTION_41	IF_1
0x4000ef9	    0x48c783980400	              mov qword [rbx + 0x498], 0	       728	dm-rq.c	FUNCTION_41	IF_3
0x4000f04	            0xebd9	                           jmp 0x4000edf	       729	dm-rq.c	FUNCTION_41	IF_3
0x4000f06	      0xb8eaffffff	                     mov eax, 0xffffffea	       715	dm-rq.c	FUNCTION_41	IF_2
0x4000f0b	            0xebd2	                           jmp 0x4000edf	       715	dm-rq.c	FUNCTION_41	IF_2
dm_mq_kick_requeue_list	DO,0:WHILE,0:ELSE,0:IF,0:CALL,2:FOR,0:SWITCH,0:functions,0	4
0x40000f0	      0xe800000000	                          call 0x40000f5	       253	dm-rq.c	FUNCTION_20	CALL_2
0x40000f5	            0x31f6	                            xor esi, esi	       248	dm-rq.c	FUNCTION_19	CALL_1
0x40000f7	          0x4889c7	                            mov rdi, rax	       248	dm-rq.c	FUNCTION_19	CALL_1
0x40000fa	      0xe900000000	                           jmp 0x40000ff	       248	dm-rq.c	FUNCTION_19	CALL_1
dm_rq_bio_constructor	DO,0:WHILE,0:ELSE,0:IF,0:CALL,1:FOR,0:SWITCH,0:functions,0	5
0x4000050	        0x488977f0	             mov qword [rdi - 0x10], rsi	       424	dm-rq.c	FUNCTION_29
0x4000054	        0x488957f8	                mov qword [rdi - 8], rdx	       425	dm-rq.c	FUNCTION_29
0x4000058	            0x31c0	                            xor eax, eax	       429	dm-rq.c	FUNCTION_29
0x400005a	    0x48c747480000	               mov qword [rdi + 0x48], 0	       426	dm-rq.c	FUNCTION_29
0x4000062	              0xc3	                                     ret	       429	dm-rq.c	FUNCTION_29
dm_attr_rq_based_seq_io_merge_deadline_show	DO,0:WHILE,0:ELSE,0:IF,0:CALL,1:FOR,0:SWITCH,0:functions,0	7
0x4000d50	    0x8b97a0040000	           mov edx, dword [rdi + 0x4a0] 	       599	dm-rq.c	FUNCTION_37	CALL_1
0x4000d56	          0x4889f0	                            mov rax, rsi	       598	dm-rq.c	FUNCTION_37
0x4000d59	    0x48c7c6000000	                              mov rsi, 0	       599	dm-rq.c	FUNCTION_37	CALL_1
0x4000d60	          0x4889c7	                            mov rdi, rax	       599	dm-rq.c	FUNCTION_37	CALL_1
0x4000d63	      0xe800000000	                          call 0x4000d68	       599	dm-rq.c	FUNCTION_37	CALL_1
0x4000d68	            0x4898	                                    cdqe	       599	dm-rq.c	FUNCTION_37	CALL_1
0x4000d6a	              0xc3	                                     ret	       600	dm-rq.c	FUNCTION_37
dm_mq_init_request	DO,0:WHILE,0:ELSE,0:IF,0:CALL,1:FOR,0:SWITCH,0:functions,0	8
0x40000a0	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       738	dm-rq.c	FUNCTION_42	CALL_1
0x40000a4	    0x488986280100	            mov qword [rsi + 0x128], rax	       574	dm-rq.c	FUNCTION_34
0x40000ab	    0xf680c0040000	              test byte [rax + 0x4c0], 2	       576	dm-rq.c	FUNCTION_34	IF_1
0x40000b2	            0x740e	                            je 0x40000c2	       576	dm-rq.c	FUNCTION_34	IF_1
0x40000b4	    0x488d86a00100	                  lea rax, [rsi + 0x1a0]	       578	dm-rq.c	FUNCTION_34	IF_1
0x40000bb	    0x488986780100	            mov qword [rsi + 0x178], rax	       578	dm-rq.c	FUNCTION_34	IF_1
0x40000c2	            0x31c0	                            xor eax, eax	       739	dm-rq.c	FUNCTION_42
0x40000c4	              0xc3	                                     ret	       739	dm-rq.c	FUNCTION_42
dm_use_blk_mq	DO,0:WHILE,0:ELSE,0:IF,0:CALL,0:FOR,0:SWITCH,0:functions,0	3
0x4000040	     0xfb687c00400	          movzx eax, byte [rdi + 0x4c0] 	        35	dm-rq.c	FUNCTION_2
0x4000047	          0x83e001	                              and eax, 1	        35	dm-rq.c	FUNCTION_2
0x400004a	              0xc3	                                     ret	        36	dm-rq.c	FUNCTION_2
map_tio_request	DO,0:WHILE,0:ELSE,0:IF,1:CALL,3:FOR,0:SWITCH,0:functions,0	12
0x40006f0	              0x53	                                push rbx	       590	dm-rq.c	FUNCTION_36
0x40006f1	        0x488d5fe0	                   lea rbx, [rdi - 0x20]	       591	dm-rq.c	FUNCTION_36	CALL_1
0x40006f5	          0x4889df	                            mov rdi, rbx	       593	dm-rq.c	FUNCTION_36	IF_1	CALL_2
0x40006f8	      0xe8a3fdffff	                    call sym.map_request	       593	dm-rq.c	FUNCTION_36	IF_1	CALL_2
0x40006fd	          0x83f802	                              cmp eax, 2	       593	dm-rq.c	FUNCTION_36	IF_1	CALL_2
0x4000700	            0x7402	                            je 0x4000704	       593	dm-rq.c	FUNCTION_36	IF_1	CALL_2
0x4000702	              0x5b	                                 pop rbx	       595	dm-rq.c	FUNCTION_36
0x4000703	              0xc3	                                     ret	       595	dm-rq.c	FUNCTION_36
0x4000704	          0x4889df	                            mov rdi, rbx	       594	dm-rq.c	FUNCTION_36	CALL_3
0x4000707	            0x31f6	                            xor esi, esi	       594	dm-rq.c	FUNCTION_36	CALL_3
0x4000709	              0x5b	                                 pop rbx	       595	dm-rq.c	FUNCTION_36
0x400070a	      0xe9a1fcffff	     jmp sym.dm_requeue_original_request	       594	dm-rq.c	FUNCTION_36	CALL_3
dm_use_blk_mq_default	DO,0:WHILE,0:ELSE,0:IF,0:CALL,0:FOR,0:SWITCH,0:functions,0	2
0x4000c50	     0xfb605000000	           movzx eax, byte [0x04000c57] 	        31	dm-rq.c	FUNCTION_1
0x4000c57	              0xc3	                                     ret	        31	dm-rq.c	FUNCTION_1
dm_attr_rq_based_seq_io_merge_deadline_store	DO,0:WHILE,0:ELSE,0:IF,3:CALL,2:FOR,0:SWITCH,0:functions,0	37
0x4000d70	            0x4154	                                push r12	       606	dm-rq.c	FUNCTION_38
0x4000d72	              0x55	                                push rbp	       606	dm-rq.c	FUNCTION_38
0x4000d73	          0x4989f4	                            mov r12, rsi	       606	dm-rq.c	FUNCTION_38
0x4000d76	              0x53	                                push rbx	       606	dm-rq.c	FUNCTION_38
0x4000d77	          0x4889fd	                            mov rbp, rdi	       606	dm-rq.c	FUNCTION_38
0x4000d7a	          0x4889d3	                            mov rbx, rdx	       606	dm-rq.c	FUNCTION_38
0x4000d7d	        0x4883ec10	                           sub rsp, 0x10	       606	dm-rq.c	FUNCTION_38
0x4000d81	    0x65488b042528	                mov rax, qword gs:[0x28]	       606	dm-rq.c	FUNCTION_38
0x4000d8a	      0x4889442408	                mov qword [rsp + 8], rax	       606	dm-rq.c	FUNCTION_38
0x4000d8f	            0x31c0	                            xor eax, eax	       606	dm-rq.c	FUNCTION_38
0x4000d91	      0xe800000000	                          call 0x4000d96	       609	dm-rq.c	FUNCTION_38	IF_1	CALL_1
0x4000d96	          0x83f802	                              cmp eax, 2	       609	dm-rq.c	FUNCTION_38	IF_1	CALL_1
0x4000d99	            0x741c	                            je 0x4000db7	       609	dm-rq.c	FUNCTION_38	IF_1	CALL_1
0x4000d9b	          0x4889d8	                            mov rax, rbx	       620	dm-rq.c	FUNCTION_38
0x4000d9e	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       621	dm-rq.c	FUNCTION_38
0x4000da3	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       621	dm-rq.c	FUNCTION_38
0x4000dac	            0x7541	                           jne 0x4000def	       621	dm-rq.c	FUNCTION_38
0x4000dae	        0x4883c410	                           add rsp, 0x10	       621	dm-rq.c	FUNCTION_38
0x4000db2	              0x5b	                                 pop rbx	       621	dm-rq.c	FUNCTION_38
0x4000db3	              0x5d	                                 pop rbp	       621	dm-rq.c	FUNCTION_38
0x4000db4	            0x415c	                                 pop r12	       621	dm-rq.c	FUNCTION_38
0x4000db6	              0xc3	                                     ret	       621	dm-rq.c	FUNCTION_38
0x4000db7	      0x488d542404	                      lea rdx, [rsp + 4]	       612	dm-rq.c	FUNCTION_38	IF_2	CALL_2
0x4000dbc	      0xbe0a000000	                            mov esi, 0xa	       612	dm-rq.c	FUNCTION_38	IF_2	CALL_2
0x4000dc1	          0x4c89e7	                            mov rdi, r12	       612	dm-rq.c	FUNCTION_38	IF_2	CALL_2
0x4000dc4	      0xe800000000	                          call 0x4000dc9	       612	dm-rq.c	FUNCTION_38	IF_2	CALL_2
0x4000dc9	            0x85c0	                           test eax, eax	       612	dm-rq.c	FUNCTION_38	IF_2	CALL_2
0x4000dcb	            0x7519	                           jne 0x4000de6	       612	dm-rq.c	FUNCTION_38	IF_2	CALL_2
0x4000dcd	        0x8b442404	                mov eax, dword [rsp + 4]	       618	dm-rq.c	FUNCTION_38
0x4000dd1	      0xbaa0860100	                        mov edx, 0x186a0	       618	dm-rq.c	FUNCTION_38
0x4000dd6	      0x3da0860100	                        cmp eax, 0x186a0	       618	dm-rq.c	FUNCTION_38
0x4000ddb	           0xf43c2	                         cmovae eax, edx	       618	dm-rq.c	FUNCTION_38
0x4000dde	    0x8985a0040000	           mov dword [rbp + 0x4a0], eax 	       618	dm-rq.c	FUNCTION_38
0x4000de4	            0xebb5	                           jmp 0x4000d9b	       618	dm-rq.c	FUNCTION_38
0x4000de6	    0x48c7c0eaffff	             mov rax, 0xffffffffffffffea	       613	dm-rq.c	FUNCTION_38	IF_2
0x4000ded	            0xebaf	                           jmp 0x4000d9e	       613	dm-rq.c	FUNCTION_38	IF_2
0x4000def	      0xe800000000	                          call 0x4000df4	       621	dm-rq.c	FUNCTION_38
