acpi_ut_implicit_strtoul64	IF,2:WHILE,0:ELSE,0:FOR,0:SWITCH,0:CALL,8:DO,0:functions,0	28
0x40000dc	        0x4883ec18	                           sub rsp, 0x18	       207	utstrtoul64.c	FUNCTION_2
0x40000e0	        0x48893c24	                    mov qword [rsp], rdi	       207	utstrtoul64.c	FUNCTION_2
0x40000e4	          0x4889e7	                            mov rdi, rsp	       212	utstrtoul64.c	FUNCTION_2	IF_1	CALL_2
0x40000e7	    0x48c744240800	                  mov qword [rsp + 8], 0	       208	utstrtoul64.c	FUNCTION_2
0x40000f0	    0x65488b042528	                mov rax, qword gs:[0x28]	       207	utstrtoul64.c	FUNCTION_2
0x40000f9	      0x4889442410	             mov qword [rsp + 0x10], rax	       207	utstrtoul64.c	FUNCTION_2
0x40000fe	            0x31c0	                            xor eax, eax	       207	utstrtoul64.c	FUNCTION_2
0x4000100	      0xe800000000	                          call 0x4000105	       212	utstrtoul64.c	FUNCTION_2	IF_1	CALL_2
0x4000105	            0x84c0	                             test al, al	       212	utstrtoul64.c	FUNCTION_2	IF_1	CALL_2
0x4000107	            0x7504	                           jne 0x400010d	       212	utstrtoul64.c	FUNCTION_2	IF_1	CALL_2
0x4000109	            0x31c0	                            xor eax, eax	       213	utstrtoul64.c	FUNCTION_2	IF_1	CALL_3
0x400010b	            0xeb27	                           jmp 0x4000134	       213	utstrtoul64.c	FUNCTION_2	IF_1	CALL_3
0x400010d	          0x4889e7	                            mov rdi, rsp	       221	utstrtoul64.c	FUNCTION_2	CALL_4
0x4000110	      0xe800000000	                          call 0x4000115	       221	utstrtoul64.c	FUNCTION_2	CALL_4
0x4000115	          0x4889e7	                            mov rdi, rsp	       223	utstrtoul64.c	FUNCTION_2	IF_2	CALL_5
0x4000118	      0xe800000000	                          call 0x400011d	       223	utstrtoul64.c	FUNCTION_2	IF_2	CALL_5
0x400011d	            0x84c0	                             test al, al	       223	utstrtoul64.c	FUNCTION_2	IF_2	CALL_5
0x400011f	            0x74e8	                            je 0x4000109	       223	utstrtoul64.c	FUNCTION_2	IF_2	CALL_5
0x4000121	        0x488b3c24	                    mov rdi, qword [rsp]	       232	utstrtoul64.c	FUNCTION_2	CALL_7
0x4000125	      0x488d742408	                      lea rsi, [rsp + 8]	       232	utstrtoul64.c	FUNCTION_2	CALL_7
0x400012a	      0xe800000000	                          call 0x400012f	       232	utstrtoul64.c	FUNCTION_2	CALL_7
0x400012f	      0x488b442408	                mov rax, qword [rsp + 8]	       233	utstrtoul64.c	FUNCTION_2	CALL_8
0x4000134	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       234	utstrtoul64.c	FUNCTION_2
0x4000139	    0x654833142528	                xor rdx, qword gs:[0x28]	       234	utstrtoul64.c	FUNCTION_2
0x4000142	            0x7405	                            je 0x4000149	       234	utstrtoul64.c	FUNCTION_2
0x4000144	      0xe800000000	                          call 0x4000149	       234	utstrtoul64.c	FUNCTION_2
0x4000149	        0x4883c418	                           add rsp, 0x18	       234	utstrtoul64.c	FUNCTION_2
0x400014d	              0xc3	                                     ret	       234	utstrtoul64.c	FUNCTION_2
acpi_ut_explicit_strtoul64	IF,3:WHILE,0:ELSE,0:FOR,0:SWITCH,1:CALL,9:DO,0:functions,0	38
0x400014e	              0x53	                                push rbx	       288	utstrtoul64.c	FUNCTION_3
0x400014f	        0x4883ec18	                           sub rsp, 0x18	       288	utstrtoul64.c	FUNCTION_3
0x4000153	        0x48893c24	                    mov qword [rsp], rdi	       288	utstrtoul64.c	FUNCTION_3
0x4000157	          0x4889e7	                            mov rdi, rsp	       294	utstrtoul64.c	FUNCTION_3	IF_1	CALL_2
0x400015a	    0x48c744240800	                  mov qword [rsp + 8], 0	       289	utstrtoul64.c	FUNCTION_3
0x4000163	    0x65488b042528	                mov rax, qword gs:[0x28]	       288	utstrtoul64.c	FUNCTION_3
0x400016c	      0x4889442410	             mov qword [rsp + 0x10], rax	       288	utstrtoul64.c	FUNCTION_3
0x4000171	            0x31c0	                            xor eax, eax	       288	utstrtoul64.c	FUNCTION_3
0x4000173	      0xe800000000	                          call 0x4000178	       294	utstrtoul64.c	FUNCTION_3	IF_1	CALL_2
0x4000178	            0x84c0	                             test al, al	       294	utstrtoul64.c	FUNCTION_3	IF_1	CALL_2
0x400017a	            0x7504	                           jne 0x4000180	       294	utstrtoul64.c	FUNCTION_3	IF_1	CALL_2
0x400017c	            0x31c0	                            xor eax, eax	       295	utstrtoul64.c	FUNCTION_3	IF_1	CALL_3
0x400017e	            0xeb3d	                           jmp 0x40001bd	       295	utstrtoul64.c	FUNCTION_3	IF_1	CALL_3
0x4000180	          0x4889e7	                            mov rdi, rsp	       302	utstrtoul64.c	FUNCTION_3	IF_2	CALL_4
0x4000183	      0xe800000000	                          call 0x4000188	       302	utstrtoul64.c	FUNCTION_3	IF_2	CALL_4
0x4000188	            0x3c01	                               cmp al, 1	       303	utstrtoul64.c	FUNCTION_3	IF_2
0x400018a	          0x4889e7	                            mov rdi, rsp	       306	utstrtoul64.c	FUNCTION_3	IF_3	CALL_5
0x400018d	            0x19db	                            sbb ebx, ebx	       303	utstrtoul64.c	FUNCTION_3	IF_2
0x400018f	          0x83e3fa	                     and ebx, 0xfffffffa	       303	utstrtoul64.c	FUNCTION_3	IF_2
0x4000192	          0x83c310	                           add ebx, 0x10	       303	utstrtoul64.c	FUNCTION_3	IF_2
0x4000195	      0xe800000000	                          call 0x400019a	       306	utstrtoul64.c	FUNCTION_3	IF_3	CALL_5
0x400019a	            0x84c0	                             test al, al	       306	utstrtoul64.c	FUNCTION_3	IF_3	CALL_5
0x400019c	            0x74de	                            je 0x400017c	       306	utstrtoul64.c	FUNCTION_3	IF_3	CALL_5
0x400019e	          0x83fb10	                           cmp ebx, 0x10	       315	utstrtoul64.c	FUNCTION_3	SWITCH_1
0x40001a1	      0x488d742408	                      lea rsi, [rsp + 8]	       322	utstrtoul64.c	FUNCTION_3	SWITCH_1	CALL_8
0x40001a6	        0x488b3c24	                    mov rdi, qword [rsp]	       322	utstrtoul64.c	FUNCTION_3	SWITCH_1	CALL_8
0x40001aa	            0x7407	                            je 0x40001b3	       315	utstrtoul64.c	FUNCTION_3	SWITCH_1
0x40001ac	      0xe800000000	                          call 0x40001b1	       318	utstrtoul64.c	FUNCTION_3	SWITCH_1	CALL_7
0x40001b1	            0xeb05	                           jmp 0x40001b8	       319	utstrtoul64.c	FUNCTION_3	SWITCH_1
0x40001b3	      0xe800000000	                          call 0x40001b8	       322	utstrtoul64.c	FUNCTION_3	SWITCH_1	CALL_8
0x40001b8	      0x488b442408	                mov rax, qword [rsp + 8]	       326	utstrtoul64.c	FUNCTION_3	CALL_9
0x40001bd	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       327	utstrtoul64.c	FUNCTION_3
0x40001c2	    0x654833142528	                xor rdx, qword gs:[0x28]	       327	utstrtoul64.c	FUNCTION_3
0x40001cb	            0x7405	                            je 0x40001d2	       327	utstrtoul64.c	FUNCTION_3
0x40001cd	      0xe800000000	                          call 0x40001d2	       327	utstrtoul64.c	FUNCTION_3
0x40001d2	        0x4883c418	                           add rsp, 0x18	       327	utstrtoul64.c	FUNCTION_3
0x40001d6	              0x5b	                                 pop rbx	       327	utstrtoul64.c	FUNCTION_3
0x40001d7	              0xc3	                                     ret	       327	utstrtoul64.c	FUNCTION_3
acpi_ut_strtoul64	IF,5:WHILE,0:ELSE,1:FOR,0:SWITCH,1:CALL,12:DO,0:functions,0	51
0x4000040	            0x4154	                                push r12	        81	utstrtoul64.c	FUNCTION_1
0x4000042	              0x55	                                push rbp	        81	utstrtoul64.c	FUNCTION_1
0x4000043	              0x53	                                push rbx	        81	utstrtoul64.c	FUNCTION_1
0x4000044	              0x51	                                push rcx	        81	utstrtoul64.c	FUNCTION_1
0x4000045	    0x48c706000000	                      mov qword [rsi], 0	        88	utstrtoul64.c	FUNCTION_1
0x400004c	        0x48893c24	                    mov qword [rsp], rdi	        81	utstrtoul64.c	FUNCTION_1
0x4000050	          0x803f00	                       cmp byte [rdi], 0	        92	utstrtoul64.c	FUNCTION_1	IF_1
0x4000053	            0x7504	                           jne 0x4000059	        92	utstrtoul64.c	FUNCTION_1	IF_1
0x4000055	            0x31c0	                            xor eax, eax	        93	utstrtoul64.c	FUNCTION_1	IF_1	CALL_2
0x4000057	            0xeb7d	                           jmp 0x40000d6	        93	utstrtoul64.c	FUNCTION_1	IF_1	CALL_2
0x4000059	          0x4889e7	                            mov rdi, rsp	        96	utstrtoul64.c	FUNCTION_1	IF_2	CALL_3
0x400005c	          0x4889f5	                            mov rbp, rsi	        96	utstrtoul64.c	FUNCTION_1	IF_2	CALL_3
0x400005f	      0xe800000000	                          call 0x4000064	        96	utstrtoul64.c	FUNCTION_1	IF_2	CALL_3
0x4000064	            0x84c0	                             test al, al	        96	utstrtoul64.c	FUNCTION_1	IF_2	CALL_3
0x4000066	            0x74ed	                            je 0x4000055	        96	utstrtoul64.c	FUNCTION_1	IF_2	CALL_3
0x4000068	          0x4889e7	                            mov rdi, rsp	       103	utstrtoul64.c	FUNCTION_1	IF_3	CALL_5
0x400006b	      0xbb10000000	                           mov ebx, 0x10	       104	utstrtoul64.c	FUNCTION_1	IF_3
0x4000070	      0xe800000000	                          call 0x4000075	       103	utstrtoul64.c	FUNCTION_1	IF_3	CALL_5
0x4000075	            0x84c0	                             test al, al	       103	utstrtoul64.c	FUNCTION_1	IF_3	CALL_5
0x4000077	            0x7512	                           jne 0x400008b	       103	utstrtoul64.c	FUNCTION_1	IF_3	CALL_5
0x4000079	          0x4889e7	                            mov rdi, rsp	       111	utstrtoul64.c	FUNCTION_1	ELSE_1	IF_4	CALL_6
0x400007c	      0xe800000000	                          call 0x4000081	       111	utstrtoul64.c	FUNCTION_1	ELSE_1	IF_4	CALL_6
0x4000081	            0x3c01	                               cmp al, 1	       112	utstrtoul64.c	FUNCTION_1	ELSE_1	IF_4
0x4000083	            0x19db	                            sbb ebx, ebx	       112	utstrtoul64.c	FUNCTION_1	ELSE_1	IF_4
0x4000085	          0x83e302	                              and ebx, 2	       112	utstrtoul64.c	FUNCTION_1	ELSE_1	IF_4
0x4000088	          0x83c308	                              add ebx, 8	       112	utstrtoul64.c	FUNCTION_1	ELSE_1	IF_4
0x400008b	          0x4889e7	                            mov rdi, rsp	       115	utstrtoul64.c	FUNCTION_1	IF_5	CALL_7
0x400008e	      0xe800000000	                          call 0x4000093	       115	utstrtoul64.c	FUNCTION_1	IF_5	CALL_7
0x4000093	            0x84c0	                             test al, al	       115	utstrtoul64.c	FUNCTION_1	IF_5	CALL_7
0x4000095	            0x74be	                            je 0x4000055	       115	utstrtoul64.c	FUNCTION_1	IF_5	CALL_7
0x4000097	          0x83fb08	                              cmp ebx, 8	       131	utstrtoul64.c	FUNCTION_1	SWITCH_1
0x400009a	    0x448a25000000	            mov r12b, byte [0x040000a1] 	       124	utstrtoul64.c	FUNCTION_1
0x40000a1	        0x488b3c24	                    mov rdi, qword [rsp]	       124	utstrtoul64.c	FUNCTION_1
0x40000a5	    0xc60500000000	            mov byte [0x040000ac], 0x40 	       125	utstrtoul64.c	FUNCTION_1
0x40000ac	            0x740f	                            je 0x40000bd	       131	utstrtoul64.c	FUNCTION_1	SWITCH_1
0x40000ae	          0x83fb0a	                            cmp ebx, 0xa	       131	utstrtoul64.c	FUNCTION_1	SWITCH_1
0x40000b1	            0x7514	                           jne 0x40000c7	       131	utstrtoul64.c	FUNCTION_1	SWITCH_1
0x40000b3	          0x4889ee	                            mov rsi, rbp	       137	utstrtoul64.c	FUNCTION_1	SWITCH_1	CALL_10
0x40000b6	      0xe800000000	                          call 0x40000bb	       137	utstrtoul64.c	FUNCTION_1	SWITCH_1	CALL_10
0x40000bb	            0xeb12	                           jmp 0x40000cf	       138	utstrtoul64.c	FUNCTION_1	SWITCH_1
0x40000bd	          0x4889ee	                            mov rsi, rbp	       133	utstrtoul64.c	FUNCTION_1	SWITCH_1	CALL_9
0x40000c0	      0xe800000000	                          call 0x40000c5	       133	utstrtoul64.c	FUNCTION_1	SWITCH_1	CALL_9
0x40000c5	            0xeb08	                           jmp 0x40000cf	       134	utstrtoul64.c	FUNCTION_1	SWITCH_1
0x40000c7	          0x4889ee	                            mov rsi, rbp	       142	utstrtoul64.c	FUNCTION_1	SWITCH_1	CALL_11
0x40000ca	      0xe800000000	                          call 0x40000cf	       142	utstrtoul64.c	FUNCTION_1	SWITCH_1	CALL_11
0x40000cf	    0x448825000000	            mov byte [0x040000d6], r12b 	       148	utstrtoul64.c	FUNCTION_1
0x40000d6	              0x5a	                                 pop rdx	       150	utstrtoul64.c	FUNCTION_1
0x40000d7	              0x5b	                                 pop rbx	       150	utstrtoul64.c	FUNCTION_1
0x40000d8	              0x5d	                                 pop rbp	       150	utstrtoul64.c	FUNCTION_1
0x40000d9	            0x415c	                                 pop r12	       150	utstrtoul64.c	FUNCTION_1
0x40000db	              0xc3	                                     ret	       150	utstrtoul64.c	FUNCTION_1
