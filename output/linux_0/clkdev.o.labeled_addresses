clkdev_add	ELSE,0:CALL,2:IF,1:WHILE,0:FOR,0:SWITCH,0:functions,0:DO,0	13
0x4000200	              0x53	                                push rbx	       226	clkdev.c	FUNCTION_11
0x4000201	      0x48837f2800	               cmp qword [rdi + 0x28], 0	       227	clkdev.c	FUNCTION_11	IF_1
0x4000206	          0x4889fb	                            mov rbx, rdi	       226	clkdev.c	FUNCTION_11
0x4000209	            0x7409	                            je 0x4000214	       227	clkdev.c	FUNCTION_11	IF_1
0x400020b	          0x4889df	                            mov rdi, rbx	       229	clkdev.c	FUNCTION_11	CALL_2
0x400020e	              0x5b	                                 pop rbx	       230	clkdev.c	FUNCTION_11
0x400020f	      0xe92cfeffff	                    jmp sym.__clkdev_add	       229	clkdev.c	FUNCTION_11	CALL_2
0x4000214	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	       228	clkdev.c	FUNCTION_11	CALL_1
0x4000218	      0xe800000000	                          call 0x400021d	       228	clkdev.c	FUNCTION_11	CALL_1
0x400021d	          0x4889df	                            mov rdi, rbx	       229	clkdev.c	FUNCTION_11	CALL_2
0x4000220	        0x48894328	             mov qword [rbx + 0x28], rax	       228	clkdev.c	FUNCTION_11	CALL_1
0x4000224	              0x5b	                                 pop rbx	       230	clkdev.c	FUNCTION_11
0x4000225	      0xe916feffff	                    jmp sym.__clkdev_add	       229	clkdev.c	FUNCTION_11	CALL_2
clk_get_sys	ELSE,0:CALL,8:IF,3:WHILE,0:FOR,0:SWITCH,0:functions,0:DO,0	93
0x4000080	            0x4157	                                push r15	       170	clkdev.c	ELSE_1	FUNCTION_7
0x4000082	            0x4156	                                push r14	       170	clkdev.c	ELSE_1	FUNCTION_7
0x4000084	            0x4155	                                push r13	       170	clkdev.c	ELSE_1	FUNCTION_7
0x4000086	            0x4154	                                push r12	       170	clkdev.c	ELSE_1	FUNCTION_7
0x4000088	          0x4989f4	                            mov r12, rsi	       170	clkdev.c	ELSE_1	FUNCTION_7
0x400008b	              0x55	                                push rbp	       170	clkdev.c	ELSE_1	FUNCTION_7
0x400008c	              0x53	                                push rbx	       170	clkdev.c	ELSE_1	FUNCTION_7
0x400008d	          0x4889fd	                            mov rbp, rdi	       170	clkdev.c	ELSE_1	FUNCTION_7
0x4000090	    0x48c7c7000000	                              mov rdi, 0	       174	clkdev.c	ELSE_1	FUNCTION_7	CALL_1
0x4000097	        0x4883ec08	                              sub rsp, 8	       170	clkdev.c	ELSE_1	FUNCTION_7
0x400009b	      0xe800000000	                          call 0x40000a0	       174	clkdev.c	ELSE_1	FUNCTION_7	CALL_1
0x40000a0	        0x4883fd01	                              cmp rbp, 1	       141	clkdev.c	FUNCTION_6	IF_1
0x40000a4	    0x488b1d000000	            mov rbx, qword [0x040000ab] 	       145	clkdev.c	FUNCTION_6	FUNCTION_1
0x40000ab	          0x4519ed	                          sbb r13d, r13d	       141	clkdev.c	FUNCTION_6	IF_1
0x40000ae	          0x41f7d5	                                not r13d	       141	clkdev.c	FUNCTION_6	IF_1
0x40000b1	        0x4183e502	                             and r13d, 2	       141	clkdev.c	FUNCTION_6	IF_1
0x40000b5	        0x4983fc01	                              cmp r12, 1	       143	clkdev.c	FUNCTION_6	IF_2
0x40000b9	        0x4183ddff	            sbb r13d, 0xffffffffffffffff	       143	clkdev.c	FUNCTION_6	IF_2
0x40000bd	    0x4881fb000000	                              cmp rbx, 0	       145	clkdev.c	FUNCTION_6	FUNCTION_1
0x40000c4	     0xf84c6000000	                            je 0x4000190	       145	clkdev.c	FUNCTION_6	FUNCTION_1
0x40000ca	    0x48c704240000	                      mov qword [rsp], 0	       145	clkdev.c	FUNCTION_6	FUNCTION_1
0x40000d2	          0x4531f6	                          xor r14d, r14d	       145	clkdev.c	FUNCTION_6	FUNCTION_1
0x40000d5	            0xeb52	                           jmp 0x4000129	       145	clkdev.c	FUNCTION_6	FUNCTION_1
0x40000d7	          0x4885ed	                           test rbp, rbp	       148	clkdev.c	FUNCTION_6	FUNCTION_1	IF_1	IF_2	CALL_1
0x40000da	            0x7441	                            je 0x400011d	       148	clkdev.c	FUNCTION_6	FUNCTION_1	IF_1	IF_2	CALL_1
0x40000dc	          0x4889ee	                            mov rsi, rbp	       148	clkdev.c	FUNCTION_6	FUNCTION_1	IF_1	IF_2	CALL_1
0x40000df	    0x41bf02000000	                             mov r15d, 2	       150	clkdev.c	FUNCTION_6	FUNCTION_1	IF_1
0x40000e5	      0xe800000000	                          call 0x40000ea	       148	clkdev.c	FUNCTION_6	FUNCTION_1	IF_1	IF_2	CALL_1
0x40000ea	            0x85c0	                           test eax, eax	       148	clkdev.c	FUNCTION_6	FUNCTION_1	IF_1	IF_2	CALL_1
0x40000ec	            0x752f	                           jne 0x400011d	       148	clkdev.c	FUNCTION_6	FUNCTION_1	IF_1	IF_2	CALL_1
0x40000ee	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       152	clkdev.c	FUNCTION_6	FUNCTION_1	IF_3
0x40000f2	          0x4885ff	                           test rdi, rdi	       152	clkdev.c	FUNCTION_6	FUNCTION_1	IF_3
0x40000f5	            0x7415	                            je 0x400010c	       152	clkdev.c	FUNCTION_6	FUNCTION_1	IF_3
0x40000f7	          0x4d85e4	                           test r12, r12	       153	clkdev.c	FUNCTION_6	FUNCTION_1	IF_3	IF_4	CALL_2
0x40000fa	            0x7421	                            je 0x400011d	       153	clkdev.c	FUNCTION_6	FUNCTION_1	IF_3	IF_4	CALL_2
0x40000fc	          0x4c89e6	                            mov rsi, r12	       153	clkdev.c	FUNCTION_6	FUNCTION_1	IF_3	IF_4	CALL_2
0x40000ff	      0xe800000000	                          call 0x4000104	       153	clkdev.c	FUNCTION_6	FUNCTION_1	IF_3	IF_4	CALL_2
0x4000104	            0x85c0	                           test eax, eax	       153	clkdev.c	FUNCTION_6	FUNCTION_1	IF_3	IF_4	CALL_2
0x4000106	            0x7515	                           jne 0x400011d	       153	clkdev.c	FUNCTION_6	FUNCTION_1	IF_3	IF_4	CALL_2
0x4000108	        0x4183c701	                             add r15d, 1	       155	clkdev.c	FUNCTION_6	FUNCTION_1	IF_3
0x400010c	          0x4539fe	                          cmp r14d, r15d	       158	clkdev.c	FUNCTION_6	FUNCTION_1	IF_5
0x400010f	            0x7d0c	                           jge 0x400011d	       158	clkdev.c	FUNCTION_6	FUNCTION_1	IF_5
0x4000111	          0x4539ef	                          cmp r15d, r13d	       160	clkdev.c	FUNCTION_6	FUNCTION_1	IF_5	IF_6
0x4000114	            0x7421	                            je 0x4000137	       160	clkdev.c	FUNCTION_6	FUNCTION_1	IF_5	IF_6
0x4000116	          0x4589fe	                          mov r14d, r15d	       160	clkdev.c	FUNCTION_6	FUNCTION_1	IF_5	IF_6
0x4000119	        0x48891c24	                    mov qword [rsp], rbx	       160	clkdev.c	FUNCTION_6	FUNCTION_1	IF_5	IF_6
0x400011d	          0x488b1b	                    mov rbx, qword [rbx]	       145	clkdev.c	FUNCTION_6	FUNCTION_1
0x4000120	    0x4881fb000000	                              cmp rbx, 0	       145	clkdev.c	FUNCTION_6	FUNCTION_1
0x4000127	            0x7412	                            je 0x400013b	       145	clkdev.c	FUNCTION_6	FUNCTION_1
0x4000129	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       147	clkdev.c	FUNCTION_6	FUNCTION_1	IF_1
0x400012d	          0x4885ff	                           test rdi, rdi	       147	clkdev.c	FUNCTION_6	FUNCTION_1	IF_1
0x4000130	            0x75a5	                           jne 0x40000d7	       147	clkdev.c	FUNCTION_6	FUNCTION_1	IF_1
0x4000132	          0x4531ff	                          xor r15d, r15d	       146	clkdev.c	FUNCTION_6	FUNCTION_1
0x4000135	            0xebb7	                           jmp 0x40000ee	       146	clkdev.c	FUNCTION_6	FUNCTION_1
0x4000137	        0x48891c24	                    mov qword [rsp], rbx	       160	clkdev.c	FUNCTION_6	FUNCTION_1	IF_5	IF_6
0x400013b	        0x488b0424	                    mov rax, qword [rsp]	       177	clkdev.c	ELSE_1	FUNCTION_7	IF_1
0x400013f	          0x4885c0	                           test rax, rax	       177	clkdev.c	ELSE_1	FUNCTION_7	IF_1
0x4000142	            0x744c	                            je 0x4000190	       177	clkdev.c	ELSE_1	FUNCTION_7	IF_1
0x4000144	        0x488b7828	            mov rdi, qword [rax + 0x28] 	       180	clkdev.c	ELSE_1	FUNCTION_7	CALL_3
0x4000148	          0x4c89e2	                            mov rdx, r12	       180	clkdev.c	ELSE_1	FUNCTION_7	CALL_3
0x400014b	          0x4889ee	                            mov rsi, rbp	       180	clkdev.c	ELSE_1	FUNCTION_7	CALL_3
0x400014e	      0xe800000000	                          call 0x4000153	       180	clkdev.c	ELSE_1	FUNCTION_7	CALL_3
0x4000153	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	       181	clkdev.c	ELSE_1	FUNCTION_7	IF_2	CALL_4
0x4000159	          0x4889c3	                            mov rbx, rax	       180	clkdev.c	ELSE_1	FUNCTION_7	CALL_3
0x400015c	            0x770c	                            ja 0x400016a	       181	clkdev.c	ELSE_1	FUNCTION_7	IF_2	CALL_4
0x400015e	          0x4889c7	                            mov rdi, rax	       184	clkdev.c	ELSE_1	FUNCTION_7	IF_3	CALL_5
0x4000161	      0xe800000000	                          call 0x4000166	       184	clkdev.c	ELSE_1	FUNCTION_7	IF_3	CALL_5
0x4000166	            0x85c0	                           test eax, eax	       184	clkdev.c	ELSE_1	FUNCTION_7	IF_3	CALL_5
0x4000168	            0x741e	                            je 0x4000188	       184	clkdev.c	ELSE_1	FUNCTION_7	IF_3	CALL_5
0x400016a	    0x48c7c7000000	                              mov rdi, 0	       191	clkdev.c	ELSE_1	FUNCTION_7	CALL_7
0x4000171	      0xe800000000	                          call 0x4000176	       191	clkdev.c	ELSE_1	FUNCTION_7	CALL_7
0x4000176	        0x4883c408	                              add rsp, 8	       194	clkdev.c	ELSE_1	FUNCTION_7
0x400017a	          0x4889d8	                            mov rax, rbx	       191	clkdev.c	ELSE_1	FUNCTION_7	CALL_7
0x400017d	              0x5b	                                 pop rbx	       194	clkdev.c	ELSE_1	FUNCTION_7
0x400017e	              0x5d	                                 pop rbp	       194	clkdev.c	ELSE_1	FUNCTION_7
0x400017f	            0x415c	                                 pop r12	       194	clkdev.c	ELSE_1	FUNCTION_7
0x4000181	            0x415d	                                 pop r13	       194	clkdev.c	ELSE_1	FUNCTION_7
0x4000183	            0x415e	                                 pop r14	       194	clkdev.c	ELSE_1	FUNCTION_7
0x4000185	            0x415f	                                 pop r15	       194	clkdev.c	ELSE_1	FUNCTION_7
0x4000187	              0xc3	                                     ret	       194	clkdev.c	ELSE_1	FUNCTION_7
0x4000188	          0x4889df	                            mov rdi, rbx	       185	clkdev.c	ELSE_1	FUNCTION_7	IF_3	CALL_6
0x400018b	      0xe800000000	                          call 0x4000190	       185	clkdev.c	ELSE_1	FUNCTION_7	IF_3	CALL_6
0x4000190	    0x48c7c7000000	                              mov rdi, 0	       191	clkdev.c	ELSE_1	FUNCTION_7	CALL_7
0x4000197	      0xe800000000	                          call 0x400019c	       191	clkdev.c	ELSE_1	FUNCTION_7	CALL_7
0x400019c	        0x4883c408	                              add rsp, 8	       194	clkdev.c	ELSE_1	FUNCTION_7
0x40001a0	    0x48c7c0feffff	             mov rax, 0xfffffffffffffffe	       193	clkdev.c	ELSE_1	FUNCTION_7	CALL_8
0x40001a7	              0x5b	                                 pop rbx	       194	clkdev.c	ELSE_1	FUNCTION_7
0x40001a8	              0x5d	                                 pop rbp	       194	clkdev.c	ELSE_1	FUNCTION_7
0x40001a9	            0x415c	                                 pop r12	       194	clkdev.c	ELSE_1	FUNCTION_7
0x40001ab	            0x415d	                                 pop r13	       194	clkdev.c	ELSE_1	FUNCTION_7
0x40001ad	            0x415e	                                 pop r14	       194	clkdev.c	ELSE_1	FUNCTION_7
0x40001af	            0x415f	                                 pop r15	       194	clkdev.c	ELSE_1	FUNCTION_7
0x40001b1	              0xc3	                                     ret	       194	clkdev.c	ELSE_1	FUNCTION_7
clkdev_hw_alloc	ELSE,0:CALL,3:IF,0:WHILE,0:FOR,0:SWITCH,0:functions,0:DO,0	25
0x4000280	              0x55	                                push rbp	       306	clkdev.c	FUNCTION_16
0x4000281	          0x4889e5	                            mov rbp, rsp	       306	clkdev.c	FUNCTION_16
0x4000284	            0x4152	                                push r10	       306	clkdev.c	FUNCTION_16
0x4000286	        0x4c8d5510	                   lea r10, [rbp + 0x10]	       306	clkdev.c	FUNCTION_16
0x400028a	        0x4883ec50	                           sub rsp, 0x50	       306	clkdev.c	FUNCTION_16
0x400028e	        0x48894de0	             mov qword [rbp - 0x20], rcx	       306	clkdev.c	FUNCTION_16
0x4000292	        0x488d4da8	                   lea rcx, [rbp - 0x58]	       311	clkdev.c	FUNCTION_16	CALL_2
0x4000296	    0x65488b042528	                mov rax, qword gs:[0x28]	       306	clkdev.c	FUNCTION_16
0x400029f	        0x488945c0	             mov qword [rbp - 0x40], rax	       306	clkdev.c	FUNCTION_16
0x40002a3	            0x31c0	                            xor eax, eax	       306	clkdev.c	FUNCTION_16
0x40002a5	        0x488d45c8	                   lea rax, [rbp - 0x38]	       310	clkdev.c	FUNCTION_16	CALL_1
0x40002a9	        0x4c8945e8	              mov qword [rbp - 0x18], r8	       306	clkdev.c	FUNCTION_16
0x40002ad	        0x4c894df0	              mov qword [rbp - 0x10], r9	       306	clkdev.c	FUNCTION_16
0x40002b1	    0xc745a8180000	           mov dword [rbp - 0x58], 0x18 	       310	clkdev.c	FUNCTION_16	CALL_1
0x40002b8	        0x4c8955b0	             mov qword [rbp - 0x50], r10	       310	clkdev.c	FUNCTION_16	CALL_1
0x40002bc	        0x488945b8	             mov qword [rbp - 0x48], rax	       310	clkdev.c	FUNCTION_16	CALL_1
0x40002c0	      0xe800000000	                          call 0x40002c5	       311	clkdev.c	FUNCTION_16	CALL_2
0x40002c5	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       315	clkdev.c	FUNCTION_16
0x40002c9	    0x654833142528	                xor rdx, qword gs:[0x28]	       315	clkdev.c	FUNCTION_16
0x40002d2	            0x7508	                           jne 0x40002dc	       315	clkdev.c	FUNCTION_16
0x40002d4	        0x4883c450	                           add rsp, 0x50	       315	clkdev.c	FUNCTION_16
0x40002d8	            0x415a	                                 pop r10	       315	clkdev.c	FUNCTION_16
0x40002da	              0x5d	                                 pop rbp	       315	clkdev.c	FUNCTION_16
0x40002db	              0xc3	                                     ret	       315	clkdev.c	FUNCTION_16
0x40002dc	      0xe800000000	                          call 0x40002e1	       315	clkdev.c	FUNCTION_16
clk_register_clkdev	ELSE,1:CALL,6:IF,2:WHILE,0:FOR,0:SWITCH,0:functions,0:DO,0	33
0x4000470	    0x4881ff00f0ff	             cmp rdi, 0xfffffffffffff000	       426	clkdev.c	FUNCTION_22	IF_1	CALL_1
0x4000477	            0x7751	                            ja 0x40004ca	       426	clkdev.c	FUNCTION_22	IF_1	CALL_1
0x4000479	          0x4885d2	                           test rdx, rdx	       433	clkdev.c	FUNCTION_22	IF_2
0x400047c	              0x55	                                push rbp	       423	clkdev.c	FUNCTION_22
0x400047d	          0x4889f5	                            mov rbp, rsi	       423	clkdev.c	FUNCTION_22
0x4000480	              0x53	                                push rbx	       423	clkdev.c	FUNCTION_22
0x4000481	          0x4889d3	                            mov rbx, rdx	       423	clkdev.c	FUNCTION_22
0x4000484	            0x7426	                            je 0x40004ac	       433	clkdev.c	FUNCTION_22	IF_2
0x4000486	      0xe800000000	                          call 0x400048b	       434	clkdev.c	FUNCTION_22	IF_2	CALL_4
0x400048b	          0x4889d9	                            mov rcx, rbx	       434	clkdev.c	FUNCTION_22	IF_2	CALL_4
0x400048e	          0x4889ee	                            mov rsi, rbp	       434	clkdev.c	FUNCTION_22	IF_2	CALL_4
0x4000491	    0x48c7c2000000	                              mov rdx, 0	       434	clkdev.c	FUNCTION_22	IF_2	CALL_4
0x4000498	          0x4889c7	                            mov rdi, rax	       434	clkdev.c	FUNCTION_22	IF_2	CALL_4
0x400049b	      0xe850ffffff	          call sym.__clk_register_clkdev	       434	clkdev.c	FUNCTION_22	IF_2	CALL_4
0x40004a0	        0x4883f801	                              cmp rax, 1	       439	clkdev.c	FUNCTION_22
0x40004a4	            0x19c0	                            sbb eax, eax	       439	clkdev.c	FUNCTION_22
0x40004a6	          0x83e0f4	                     and eax, 0xfffffff4	       439	clkdev.c	FUNCTION_22
0x40004a9	              0x5b	                                 pop rbx	       440	clkdev.c	FUNCTION_22
0x40004aa	              0x5d	                                 pop rbp	       440	clkdev.c	FUNCTION_22
0x40004ab	              0xc3	                                     ret	       440	clkdev.c	FUNCTION_22
0x40004ac	      0xe800000000	                          call 0x40004b1	       437	clkdev.c	FUNCTION_22	CALL_6
0x40004b1	            0x31d2	                            xor edx, edx	       437	clkdev.c	FUNCTION_22	CALL_6
0x40004b3	          0x4889ee	                            mov rsi, rbp	       437	clkdev.c	FUNCTION_22	CALL_6
0x40004b6	          0x4889c7	                            mov rdi, rax	       437	clkdev.c	FUNCTION_22	CALL_6
0x40004b9	      0xe832ffffff	          call sym.__clk_register_clkdev	       437	clkdev.c	FUNCTION_22	CALL_6
0x40004be	        0x4883f801	                              cmp rax, 1	       439	clkdev.c	FUNCTION_22
0x40004c2	            0x19c0	                            sbb eax, eax	       439	clkdev.c	FUNCTION_22
0x40004c4	          0x83e0f4	                     and eax, 0xfffffff4	       439	clkdev.c	FUNCTION_22
0x40004c7	              0x5b	                                 pop rbx	       440	clkdev.c	FUNCTION_22
0x40004c8	              0x5d	                                 pop rbp	       440	clkdev.c	FUNCTION_22
0x40004c9	              0xc3	                                     ret	       440	clkdev.c	FUNCTION_22
0x40004ca	            0x89f8	                            mov eax, edi	       427	clkdev.c	FUNCTION_22	CALL_2
0x40004cc	              0xc3	                                     ret	       440	clkdev.c	FUNCTION_22
__clk_register_clkdev	ELSE,0:CALL,3:IF,0:WHILE,0:FOR,0:SWITCH,0:functions,0:DO,0	33
0x40003f0	              0x55	                                push rbp	       396	clkdev.c	FUNCTION_21
0x40003f1	          0x4889e5	                            mov rbp, rsp	       396	clkdev.c	FUNCTION_21
0x40003f4	            0x4152	                                push r10	       396	clkdev.c	FUNCTION_21
0x40003f6	              0x53	                                push rbx	       396	clkdev.c	FUNCTION_21
0x40003f7	        0x4c8d5510	                   lea r10, [rbp + 0x10]	       396	clkdev.c	FUNCTION_21
0x40003fb	        0x4883ec50	                           sub rsp, 0x50	       396	clkdev.c	FUNCTION_21
0x40003ff	        0x48894dd8	             mov qword [rbp - 0x28], rcx	       396	clkdev.c	FUNCTION_21
0x4000403	        0x488d4da0	                   lea rcx, [rbp - 0x60]	       283	clkdev.c	FUNCTION_14	CALL_1
0x4000407	    0x65488b042528	                mov rax, qword gs:[0x28]	       396	clkdev.c	FUNCTION_21
0x4000410	        0x488945b8	             mov qword [rbp - 0x48], rax	       396	clkdev.c	FUNCTION_21
0x4000414	            0x31c0	                            xor eax, eax	       396	clkdev.c	FUNCTION_21
0x4000416	        0x488d45c0	                   lea rax, [rbp - 0x40]	       400	clkdev.c	FUNCTION_21	CALL_1
0x400041a	        0x4c8945e0	              mov qword [rbp - 0x20], r8	       396	clkdev.c	FUNCTION_21
0x400041e	        0x4c894de8	              mov qword [rbp - 0x18], r9	       396	clkdev.c	FUNCTION_21
0x4000422	    0xc745a0180000	           mov dword [rbp - 0x60], 0x18 	       400	clkdev.c	FUNCTION_21	CALL_1
0x4000429	        0x4c8955a8	             mov qword [rbp - 0x58], r10	       400	clkdev.c	FUNCTION_21	CALL_1
0x400042d	        0x488945b0	             mov qword [rbp - 0x50], rax	       400	clkdev.c	FUNCTION_21	CALL_1
0x4000431	      0xe800000000	                          call 0x4000436	       283	clkdev.c	FUNCTION_14	CALL_1
0x4000436	          0x4885c0	                           test rax, rax	       284	clkdev.c	FUNCTION_14	IF_1
0x4000439	          0x4889c3	                            mov rbx, rax	       283	clkdev.c	FUNCTION_14	CALL_1
0x400043c	            0x7408	                            je 0x4000446	       284	clkdev.c	FUNCTION_14	IF_1
0x400043e	          0x4889c7	                            mov rdi, rax	       285	clkdev.c	FUNCTION_14	CALL_2
0x4000441	      0xe8fafbffff	                   call sym.__clkdev_add	       285	clkdev.c	FUNCTION_14	CALL_2
0x4000446	          0x4889d8	                            mov rax, rbx	       405	clkdev.c	FUNCTION_21
0x4000449	        0x488b5db8	             mov rbx, qword [rbp - 0x48]	       405	clkdev.c	FUNCTION_21
0x400044d	    0x6548331c2528	                xor rbx, qword gs:[0x28]	       405	clkdev.c	FUNCTION_21
0x4000456	            0x7509	                           jne 0x4000461	       405	clkdev.c	FUNCTION_21
0x4000458	        0x4883c450	                           add rsp, 0x50	       405	clkdev.c	FUNCTION_21
0x400045c	              0x5b	                                 pop rbx	       405	clkdev.c	FUNCTION_21
0x400045d	            0x415a	                                 pop r10	       405	clkdev.c	FUNCTION_21
0x400045f	              0x5d	                                 pop rbp	       405	clkdev.c	FUNCTION_21
0x4000460	              0xc3	                                     ret	       405	clkdev.c	FUNCTION_21
0x4000461	      0xe800000000	                          call 0x4000466	       405	clkdev.c	FUNCTION_21
clkdev_alloc	ELSE,0:CALL,4:IF,0:WHILE,0:FOR,0:SWITCH,0:functions,0:DO,0	40
0x40000d0	               0x0	                      add byte [rax], al	       145	clkdev.c	FUNCTION_6	FUNCTION_1
0x40000d2	          0x4531f6	                          xor r14d, r14d	       145	clkdev.c	FUNCTION_6	FUNCTION_1
0x40000d5	            0xeb52	                           jmp 0x4000129	       145	clkdev.c	FUNCTION_6	FUNCTION_1
0x40000d7	          0x4885ed	                           test rbp, rbp	       148	clkdev.c	FUNCTION_6	FUNCTION_1	IF_1	IF_2	CALL_1
0x40000da	            0x7441	                            je 0x400011d	       148	clkdev.c	FUNCTION_6	FUNCTION_1	IF_1	IF_2	CALL_1
0x40000dc	          0x4889ee	                            mov rsi, rbp	       148	clkdev.c	FUNCTION_6	FUNCTION_1	IF_1	IF_2	CALL_1
0x40000df	    0x41bf02000000	                             mov r15d, 2	       150	clkdev.c	FUNCTION_6	FUNCTION_1	IF_1
0x40000e5	      0xe800000000	                          call 0x40000ea	       148	clkdev.c	FUNCTION_6	FUNCTION_1	IF_1	IF_2	CALL_1
0x40000ea	            0x85c0	                           test eax, eax	       148	clkdev.c	FUNCTION_6	FUNCTION_1	IF_1	IF_2	CALL_1
0x40000ec	            0x752f	                           jne 0x400011d	       148	clkdev.c	FUNCTION_6	FUNCTION_1	IF_1	IF_2	CALL_1
0x40000ee	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       152	clkdev.c	FUNCTION_6	FUNCTION_1	IF_3
0x40000f2	          0x4885ff	                           test rdi, rdi	       152	clkdev.c	FUNCTION_6	FUNCTION_1	IF_3
0x40000f5	            0x7415	                            je 0x400010c	       152	clkdev.c	FUNCTION_6	FUNCTION_1	IF_3
0x40000f7	          0x4d85e4	                           test r12, r12	       153	clkdev.c	FUNCTION_6	FUNCTION_1	IF_3	IF_4	CALL_2
0x40000fa	            0x7421	                            je 0x400011d	       153	clkdev.c	FUNCTION_6	FUNCTION_1	IF_3	IF_4	CALL_2
0x40000fc	          0x4c89e6	                            mov rsi, r12	       153	clkdev.c	FUNCTION_6	FUNCTION_1	IF_3	IF_4	CALL_2
0x40000ff	      0xe800000000	                          call 0x4000104	       153	clkdev.c	FUNCTION_6	FUNCTION_1	IF_3	IF_4	CALL_2
0x4000104	            0x85c0	                           test eax, eax	       153	clkdev.c	FUNCTION_6	FUNCTION_1	IF_3	IF_4	CALL_2
0x4000106	            0x7515	                           jne 0x400011d	       153	clkdev.c	FUNCTION_6	FUNCTION_1	IF_3	IF_4	CALL_2
0x4000108	        0x4183c701	                             add r15d, 1	       155	clkdev.c	FUNCTION_6	FUNCTION_1	IF_3
0x400010c	          0x4539fe	                          cmp r14d, r15d	       158	clkdev.c	FUNCTION_6	FUNCTION_1	IF_5
0x400010f	            0x7d0c	                           jge 0x400011d	       158	clkdev.c	FUNCTION_6	FUNCTION_1	IF_5
0x4000111	          0x4539ef	                          cmp r15d, r13d	       160	clkdev.c	FUNCTION_6	FUNCTION_1	IF_5	IF_6
0x4000114	            0x7421	                            je 0x4000137	       160	clkdev.c	FUNCTION_6	FUNCTION_1	IF_5	IF_6
0x4000116	          0x4589fe	                          mov r14d, r15d	       160	clkdev.c	FUNCTION_6	FUNCTION_1	IF_5	IF_6
0x4000119	        0x48891c24	                    mov qword [rsp], rbx	       160	clkdev.c	FUNCTION_6	FUNCTION_1	IF_5	IF_6
0x400011d	          0x488b1b	                    mov rbx, qword [rbx]	       145	clkdev.c	FUNCTION_6	FUNCTION_1
0x4000120	    0x4881fb000000	                              cmp rbx, 0	       145	clkdev.c	FUNCTION_6	FUNCTION_1
0x4000127	            0x7412	                            je 0x400013b	       145	clkdev.c	FUNCTION_6	FUNCTION_1
0x4000129	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       147	clkdev.c	FUNCTION_6	FUNCTION_1	IF_1
0x400012d	          0x4885ff	                           test rdi, rdi	       147	clkdev.c	FUNCTION_6	FUNCTION_1	IF_1
0x4000130	            0x75a5	                           jne 0x40000d7	       147	clkdev.c	FUNCTION_6	FUNCTION_1	IF_1
0x4000132	          0x4531ff	                          xor r15d, r15d	       146	clkdev.c	FUNCTION_6	FUNCTION_1
0x4000135	            0xebb7	                           jmp 0x40000ee	       146	clkdev.c	FUNCTION_6	FUNCTION_1
0x4000137	        0x48891c24	                    mov qword [rsp], rbx	       160	clkdev.c	FUNCTION_6	FUNCTION_1	IF_5	IF_6
0x400013b	        0x488b0424	                    mov rax, qword [rsp]	       177	clkdev.c	ELSE_1	FUNCTION_7	IF_1
0x400013f	          0x4885c0	                           test rax, rax	       177	clkdev.c	ELSE_1	FUNCTION_7	IF_1
0x4000142	            0x744c	                            je 0x4000190	       177	clkdev.c	ELSE_1	FUNCTION_7	IF_1
0x4000144	        0x488b7828	            mov rdi, qword [rax + 0x28] 	       180	clkdev.c	ELSE_1	FUNCTION_7	CALL_3
0x4000148	          0x4c89e2	                            mov rdx, r12	       180	clkdev.c	ELSE_1	FUNCTION_7	CALL_3
clkdev_create	ELSE,0:CALL,4:IF,0:WHILE,0:FOR,0:SWITCH,0:functions,0:DO,0	41
0x40002f0	              0x55	                                push rbp	       329	clkdev.c	FUNCTION_17
0x40002f1	          0x4889e5	                            mov rbp, rsp	       329	clkdev.c	FUNCTION_17
0x40002f4	            0x4154	                                push r12	       329	clkdev.c	FUNCTION_17
0x40002f6	            0x4152	                                push r10	       329	clkdev.c	FUNCTION_17
0x40002f8	              0x53	                                push rbx	       329	clkdev.c	FUNCTION_17
0x40002f9	        0x4c8d5510	                   lea r10, [rbp + 0x10]	       329	clkdev.c	FUNCTION_17
0x40002fd	          0x4889f3	                            mov rbx, rsi	       329	clkdev.c	FUNCTION_17
0x4000300	          0x4989d4	                            mov r12, rdx	       329	clkdev.c	FUNCTION_17
0x4000303	        0x4883ec50	                           sub rsp, 0x50	       329	clkdev.c	FUNCTION_17
0x4000307	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       329	clkdev.c	FUNCTION_17
0x400030b	        0x4c8945d8	              mov qword [rbp - 0x28], r8	       329	clkdev.c	FUNCTION_17
0x400030f	    0x65488b042528	                mov rax, qword gs:[0x28]	       329	clkdev.c	FUNCTION_17
0x4000318	        0x488945b0	             mov qword [rbp - 0x50], rax	       329	clkdev.c	FUNCTION_17
0x400031c	            0x31c0	                            xor eax, eax	       329	clkdev.c	FUNCTION_17
0x400031e	        0x488d45b8	                   lea rax, [rbp - 0x48]	       333	clkdev.c	FUNCTION_17	CALL_1
0x4000322	        0x4c894de0	              mov qword [rbp - 0x20], r9	       329	clkdev.c	FUNCTION_17
0x4000326	        0x4c8955a0	             mov qword [rbp - 0x60], r10	       333	clkdev.c	FUNCTION_17	CALL_1
0x400032a	    0xc74598180000	           mov dword [rbp - 0x68], 0x18 	       333	clkdev.c	FUNCTION_17	CALL_1
0x4000331	        0x488945a8	             mov qword [rbp - 0x58], rax	       333	clkdev.c	FUNCTION_17	CALL_1
0x4000335	      0xe800000000	                          call 0x400033a	       334	clkdev.c	FUNCTION_17	CALL_3
0x400033a	        0x488d4d98	                   lea rcx, [rbp - 0x68]	       283	clkdev.c	FUNCTION_14	CALL_1
0x400033e	          0x4889de	                            mov rsi, rbx	       283	clkdev.c	FUNCTION_14	CALL_1
0x4000341	          0x4c89e2	                            mov rdx, r12	       283	clkdev.c	FUNCTION_14	CALL_1
0x4000344	          0x4889c7	                            mov rdi, rax	       283	clkdev.c	FUNCTION_14	CALL_1
0x4000347	      0xe800000000	                          call 0x400034c	       283	clkdev.c	FUNCTION_14	CALL_1
0x400034c	          0x4885c0	                           test rax, rax	       284	clkdev.c	FUNCTION_14	IF_1
0x400034f	          0x4889c3	                            mov rbx, rax	       283	clkdev.c	FUNCTION_14	CALL_1
0x4000352	            0x7408	                            je 0x400035c	       284	clkdev.c	FUNCTION_14	IF_1
0x4000354	          0x4889c7	                            mov rdi, rax	       285	clkdev.c	FUNCTION_14	CALL_2
0x4000357	      0xe8e4fcffff	                   call sym.__clkdev_add	       285	clkdev.c	FUNCTION_14	CALL_2
0x400035c	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       338	clkdev.c	FUNCTION_17
0x4000360	    0x654833142528	                xor rdx, qword gs:[0x28]	       338	clkdev.c	FUNCTION_17
0x4000369	          0x4889d8	                            mov rax, rbx	       338	clkdev.c	FUNCTION_17
0x400036c	            0x750b	                           jne 0x4000379	       338	clkdev.c	FUNCTION_17
0x400036e	        0x4883c450	                           add rsp, 0x50	       338	clkdev.c	FUNCTION_17
0x4000372	              0x5b	                                 pop rbx	       338	clkdev.c	FUNCTION_17
0x4000373	            0x415a	                                 pop r10	       338	clkdev.c	FUNCTION_17
0x4000375	            0x415c	                                 pop r12	       338	clkdev.c	FUNCTION_17
0x4000377	              0x5d	                                 pop rbp	       338	clkdev.c	FUNCTION_17
0x4000378	              0xc3	                                     ret	       338	clkdev.c	FUNCTION_17
0x4000379	      0xe800000000	                          call 0x400037e	       338	clkdev.c	FUNCTION_17
clk_hw_register_clkdev	ELSE,1:CALL,4:IF,2:WHILE,0:FOR,0:SWITCH,0:functions,0:DO,0	19
0x40004d0	    0x4881ff00f0ff	             cmp rdi, 0xfffffffffffff000	       462	clkdev.c	FUNCTION_23	IF_1	CALL_1
0x40004d7	            0x772f	                            ja 0x4000508	       462	clkdev.c	FUNCTION_23	IF_1	CALL_1
0x40004d9	          0x4885d2	                           test rdx, rdx	       469	clkdev.c	FUNCTION_23	IF_2
0x40004dc	          0x4889d1	                            mov rcx, rdx	       469	clkdev.c	FUNCTION_23	IF_2
0x40004df	            0x7416	                            je 0x40004f7	       469	clkdev.c	FUNCTION_23	IF_2
0x40004e1	    0x48c7c2000000	                              mov rdx, 0	       470	clkdev.c	FUNCTION_23	CALL_3
0x40004e8	      0xe803ffffff	          call sym.__clk_register_clkdev	       470	clkdev.c	FUNCTION_23	CALL_3
0x40004ed	        0x4883f801	                              cmp rax, 1	       474	clkdev.c	FUNCTION_23
0x40004f1	            0x19c0	                            sbb eax, eax	       474	clkdev.c	FUNCTION_23
0x40004f3	          0x83e0f4	                     and eax, 0xfffffff4	       474	clkdev.c	FUNCTION_23
0x40004f6	              0xc3	                                     ret	       475	clkdev.c	FUNCTION_23
0x40004f7	            0x31d2	                            xor edx, edx	       472	clkdev.c	FUNCTION_23	CALL_4
0x40004f9	      0xe8f2feffff	          call sym.__clk_register_clkdev	       472	clkdev.c	FUNCTION_23	CALL_4
0x40004fe	        0x4883f801	                              cmp rax, 1	       474	clkdev.c	FUNCTION_23
0x4000502	            0x19c0	                            sbb eax, eax	       474	clkdev.c	FUNCTION_23
0x4000504	          0x83e0f4	                     and eax, 0xfffffff4	       474	clkdev.c	FUNCTION_23
0x4000507	              0xc3	                                     ret	       475	clkdev.c	FUNCTION_23
0x4000508	            0x89f8	                            mov eax, edi	       463	clkdev.c	FUNCTION_23	CALL_2
0x400050a	              0xc3	                                     ret	       463	clkdev.c	FUNCTION_23	CALL_2
