acpi_ps_append_arg	IF,4:CALL,3:functions,0:FOR,0:DO,0:SWITCH,0:ELSE,1:WHILE,2	39
0x4000079	          0x4885ff	                           test rdi, rdi	       101	pstree.c	FUNCTION_2	IF_1
0x400007c	            0x7470	                            je 0x40000ee	       101	pstree.c	FUNCTION_2	IF_1
0x400007e	              0x55	                                push rbp	        95	pstree.c	FUNCTION_2
0x400007f	              0x53	                                push rbx	        95	pstree.c	FUNCTION_2
0x4000080	          0x4889fb	                            mov rbx, rdi	        95	pstree.c	FUNCTION_2
0x4000083	         0xfb77f0a	            movzx edi, word [rdi + 0xa] 	       107	pstree.c	FUNCTION_2	CALL_2
0x4000087	          0x4889f5	                            mov rbp, rsi	       107	pstree.c	FUNCTION_2	CALL_2
0x400008a	      0xe800000000	                          call 0x400008f	       107	pstree.c	FUNCTION_2	CALL_2
0x400008f	        0x80780b0a	               cmp byte [rax + 0xb], 0xa	       108	pstree.c	FUNCTION_2	IF_2
0x4000093	            0x751e	                           jne 0x40000b3	       108	pstree.c	FUNCTION_2	IF_2
0x4000095	         0xfb74b0a	            movzx ecx, word [rbx + 0xa] 	       112	pstree.c	FUNCTION_2	IF_2	CALL_3
0x4000099	    0x48c7c2000000	                              mov rdx, 0	       112	pstree.c	FUNCTION_2	IF_2	CALL_3
0x40000a0	      0xbe71000000	                           mov esi, 0x71	       112	pstree.c	FUNCTION_2	IF_2	CALL_3
0x40000a5	              0x5b	                                 pop rbx	       153	pstree.c	FUNCTION_2
0x40000a6	              0x5d	                                 pop rbp	       153	pstree.c	FUNCTION_2
0x40000a7	    0x48c7c7000000	                              mov rdi, 0	       112	pstree.c	FUNCTION_2	IF_2	CALL_3
0x40000ae	      0xe900000000	                           jmp 0x40000b3	       112	pstree.c	FUNCTION_2	IF_2	CALL_3
0x40000b3	        0xf6400910	               test byte [rax + 9], 0x10	       119	pstree.c	FUNCTION_2	IF_3
0x40000b7	            0x7433	                            je 0x40000ec	       119	pstree.c	FUNCTION_2	IF_3
0x40000b9	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       128	pstree.c	FUNCTION_2	IF_4
0x40000bd	          0x4885c0	                           test rax, rax	       128	pstree.c	FUNCTION_2	IF_4
0x40000c0	            0x7414	                            je 0x40000d6	       128	pstree.c	FUNCTION_2	IF_4
0x40000c2	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       133	pstree.c	FUNCTION_2	IF_4	WHILE_1
0x40000c6	          0x4885d2	                           test rdx, rdx	       133	pstree.c	FUNCTION_2	IF_4	WHILE_1
0x40000c9	            0x7405	                            je 0x40000d0	       133	pstree.c	FUNCTION_2	IF_4	WHILE_1
0x40000cb	          0x4889d0	                            mov rax, rdx	       133	pstree.c	FUNCTION_2	IF_4	WHILE_1
0x40000ce	            0xebf2	                           jmp 0x40000c2	       133	pstree.c	FUNCTION_2	IF_4	WHILE_1
0x40000d0	        0x48896818	             mov qword [rax + 0x18], rbp	       136	pstree.c	FUNCTION_2	IF_4
0x40000d4	            0xeb04	                           jmp 0x40000da	       136	pstree.c	FUNCTION_2	IF_4
0x40000d6	        0x48896b28	             mov qword [rbx + 0x28], rbp	       140	pstree.c	FUNCTION_2	ELSE_1
0x40000da	          0x4885ed	                           test rbp, rbp	       145	pstree.c	FUNCTION_2	WHILE_2
0x40000dd	            0x740d	                            je 0x40000ec	       145	pstree.c	FUNCTION_2	WHILE_2
0x40000df	        0x48895d00	                    mov qword [rbp], rbx	       146	pstree.c	FUNCTION_2	WHILE_2
0x40000e3	        0x488b6d18	            mov rbp, qword [rbp + 0x18] 	       147	pstree.c	FUNCTION_2	WHILE_2
0x40000e7	          0xfe4330	                   inc byte [rbx + 0x30]	       149	pstree.c	FUNCTION_2	WHILE_2
0x40000ea	            0xebee	                           jmp 0x40000da	       149	pstree.c	FUNCTION_2	WHILE_2
0x40000ec	              0x5b	                                 pop rbx	       153	pstree.c	FUNCTION_2
0x40000ed	              0x5d	                                 pop rbp	       153	pstree.c	FUNCTION_2
0x40000ee	              0xc3	                                     ret	       153	pstree.c	FUNCTION_2
acpi_ps_get_arg	IF,2:CALL,2:functions,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,1	23
0x4000040	              0x55	                                push rbp	        38	pstree.c	FUNCTION_1
0x4000041	          0x4889fd	                            mov rbp, rdi	        38	pstree.c	FUNCTION_1
0x4000044	              0x53	                                push rbx	        38	pstree.c	FUNCTION_1
0x4000045	         0xfb77f0a	            movzx edi, word [rdi + 0xa] 	        52	pstree.c	FUNCTION_1	CALL_2
0x4000049	            0x89f3	                            mov ebx, esi	        38	pstree.c	FUNCTION_1
0x400004b	      0xe800000000	                          call 0x4000050	        52	pstree.c	FUNCTION_1	CALL_2
0x4000050	          0x4889c2	                            mov rdx, rax	        52	pstree.c	FUNCTION_1	CALL_2
0x4000053	            0x31c0	                            xor eax, eax	        57	pstree.c	FUNCTION_1	IF_1
0x4000055	        0x807a0b0a	               cmp byte [rdx + 0xb], 0xa	        53	pstree.c	FUNCTION_1	IF_1
0x4000059	            0x741b	                            je 0x4000076	        53	pstree.c	FUNCTION_1	IF_1
0x400005b	        0xf6420910	               test byte [rdx + 9], 0x10	        62	pstree.c	FUNCTION_1	IF_2
0x400005f	            0x7415	                            je 0x4000076	        62	pstree.c	FUNCTION_1	IF_2
0x4000061	        0x488b4528	            mov rax, qword [rbp + 0x28] 	        71	pstree.c	FUNCTION_1
0x4000065	          0x4885c0	                           test rax, rax	        72	pstree.c	FUNCTION_1	WHILE_1
0x4000068	            0x740c	                            je 0x4000076	        72	pstree.c	FUNCTION_1	WHILE_1
0x400006a	            0x85db	                           test ebx, ebx	        72	pstree.c	FUNCTION_1	WHILE_1
0x400006c	            0x7408	                            je 0x4000076	        72	pstree.c	FUNCTION_1	WHILE_1
0x400006e	            0xffcb	                                 dec ebx	        73	pstree.c	FUNCTION_1	WHILE_1
0x4000070	        0x488b4018	            mov rax, qword [rax + 0x18] 	        74	pstree.c	FUNCTION_1	WHILE_1
0x4000074	            0xebef	                           jmp 0x4000065	        74	pstree.c	FUNCTION_1	WHILE_1
0x4000076	              0x5b	                                 pop rbx	        78	pstree.c	FUNCTION_1
0x4000077	              0x5d	                                 pop rbp	        78	pstree.c	FUNCTION_1
0x4000078	              0xc3	                                     ret	        78	pstree.c	FUNCTION_1
acpi_ps_get_depth_next	IF,5:CALL,8:functions,0:FOR,0:DO,0:SWITCH,0:ELSE,0:WHILE,2	45
0x40000ef	          0x4885f6	                           test rsi, rsi	       178	pstree.c	FUNCTION_3	IF_1
0x40000f2	            0x7469	                            je 0x400015d	       178	pstree.c	FUNCTION_3	IF_1
0x40000f4	            0x4154	                                push r12	       171	pstree.c	FUNCTION_3
0x40000f6	              0x55	                                push rbp	       171	pstree.c	FUNCTION_3
0x40000f7	          0x4889f5	                            mov rbp, rsi	       171	pstree.c	FUNCTION_3
0x40000fa	              0x53	                                push rbx	       171	pstree.c	FUNCTION_3
0x40000fb	            0x31f6	                            xor esi, esi	       184	pstree.c	FUNCTION_3	CALL_2
0x40000fd	          0x4989fc	                            mov r12, rdi	       184	pstree.c	FUNCTION_3	CALL_2
0x4000100	          0x4889ef	                            mov rdi, rbp	       184	pstree.c	FUNCTION_3	CALL_2
0x4000103	      0xe800000000	                          call 0x4000108	       184	pstree.c	FUNCTION_3	CALL_2
0x4000108	          0x4885c0	                           test rax, rax	       185	pstree.c	FUNCTION_3	IF_2
0x400010b	            0x754b	                           jne 0x4000158	       185	pstree.c	FUNCTION_3	IF_2
0x400010d	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       185	pstree.c	FUNCTION_3	IF_2
0x4000111	          0x4885c0	                           test rax, rax	       193	pstree.c	FUNCTION_3	IF_3
0x4000114	            0x7542	                           jne 0x4000158	       193	pstree.c	FUNCTION_3	IF_3
0x4000116	        0x488b5d00	                    mov rbx, qword [rbp]	       200	pstree.c	FUNCTION_3
0x400011a	          0x4885db	                           test rbx, rbx	       202	pstree.c	FUNCTION_3	WHILE_1
0x400011d	            0x7504	                           jne 0x4000123	       202	pstree.c	FUNCTION_3	WHILE_1
0x400011f	            0x31c0	                            xor eax, eax	       179	pstree.c	FUNCTION_3	IF_1
0x4000121	            0xeb35	                           jmp 0x4000158	       179	pstree.c	FUNCTION_3	IF_1
0x4000123	            0x31f6	                            xor esi, esi	       203	pstree.c	FUNCTION_3	WHILE_1	CALL_5
0x4000125	          0x4889df	                            mov rdi, rbx	       203	pstree.c	FUNCTION_3	WHILE_1	CALL_5
0x4000128	      0xe800000000	                          call 0x400012d	       203	pstree.c	FUNCTION_3	WHILE_1	CALL_5
0x400012d	          0x4885c0	                           test rax, rax	       204	pstree.c	FUNCTION_3	WHILE_1	WHILE_2
0x4000130	            0x7410	                            je 0x4000142	       204	pstree.c	FUNCTION_3	WHILE_1	WHILE_2
0x4000132	          0x4c39e0	                            cmp rax, r12	       204	pstree.c	FUNCTION_3	WHILE_1	WHILE_2
0x4000135	            0x740b	                            je 0x4000142	       204	pstree.c	FUNCTION_3	WHILE_1	WHILE_2
0x4000137	          0x4839c5	                            cmp rbp, rax	       204	pstree.c	FUNCTION_3	WHILE_1	WHILE_2
0x400013a	            0x740b	                            je 0x4000147	       204	pstree.c	FUNCTION_3	WHILE_1	WHILE_2
0x400013c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       207	pstree.c	FUNCTION_3	WHILE_1	WHILE_2
0x4000140	            0xebeb	                           jmp 0x400012d	       207	pstree.c	FUNCTION_3	WHILE_1	WHILE_2
0x4000142	          0x4c39e0	                            cmp rax, r12	       210	pstree.c	FUNCTION_3	WHILE_1	IF_4
0x4000145	            0x74d8	                            je 0x400011f	       210	pstree.c	FUNCTION_3	WHILE_1	IF_4
0x4000147	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       217	pstree.c	FUNCTION_3	WHILE_1	IF_5
0x400014b	          0x4885c0	                           test rax, rax	       217	pstree.c	FUNCTION_3	WHILE_1	IF_5
0x400014e	            0x7508	                           jne 0x4000158	       217	pstree.c	FUNCTION_3	WHILE_1	IF_5
0x4000150	          0x4889dd	                            mov rbp, rbx	       226	pstree.c	FUNCTION_3	WHILE_1
0x4000153	          0x488b1b	                    mov rbx, qword [rbx]	       226	pstree.c	FUNCTION_3	WHILE_1
0x4000156	            0xebc2	                           jmp 0x400011a	       226	pstree.c	FUNCTION_3	WHILE_1
0x4000158	              0x5b	                                 pop rbx	       231	pstree.c	FUNCTION_3
0x4000159	              0x5d	                                 pop rbp	       231	pstree.c	FUNCTION_3
0x400015a	            0x415c	                                 pop r12	       231	pstree.c	FUNCTION_3
0x400015c	              0xc3	                                     ret	       231	pstree.c	FUNCTION_3
0x400015d	            0x31c0	                            xor eax, eax	       179	pstree.c	FUNCTION_3	IF_1
0x400015f	              0xc3	                                     ret	       231	pstree.c	FUNCTION_3
