__serio_register_driver	functions,0:CALL,4:DO,0:ELSE,0:IF,3:FOR,0:SWITCH,0:WHILE,0	47
0x4000c40	            0x4155	                                push r13	       831	serio.c	FUNCTION_44
0x4000c42	            0x4154	                                push r12	       831	serio.c	FUNCTION_44
0x4000c44	        0x4c8d6750	                   lea r12, [rdi + 0x50]	       845	serio.c	FUNCTION_44	CALL_1
0x4000c48	              0x55	                                push rbp	       831	serio.c	FUNCTION_44
0x4000c49	              0x53	                                push rbx	       831	serio.c	FUNCTION_44
0x4000c4a	          0x4889fb	                            mov rbx, rdi	       831	serio.c	FUNCTION_44
0x4000c4d	      0x440fb66f10	          movzx r13d, byte [rdi + 0x10] 	       832	serio.c	FUNCTION_44
0x4000c52	    0x48c747580000	               mov qword [rdi + 0x58], 0	       835	serio.c	FUNCTION_44
0x4000c5a	        0x48897760	             mov qword [rdi + 0x60], rsi	       836	serio.c	FUNCTION_44
0x4000c5e	        0x48895768	             mov qword [rdi + 0x68], rdx	       837	serio.c	FUNCTION_44
0x4000c62	        0xc6471001	                mov byte [rdi + 0x10], 1	       843	serio.c	FUNCTION_44
0x4000c66	          0x4c89e7	                            mov rdi, r12	       845	serio.c	FUNCTION_44	CALL_1
0x4000c69	      0xe800000000	                          call 0x4000c6e	       845	serio.c	FUNCTION_44	CALL_1
0x4000c6e	            0x85c0	                           test eax, eax	       846	serio.c	FUNCTION_44	IF_1
0x4000c70	            0x753c	                           jne 0x4000cae	       846	serio.c	FUNCTION_44	IF_1
0x4000c72	            0x31ed	                            xor ebp, ebp	       865	serio.c	FUNCTION_44
0x4000c74	          0x4584ed	                         test r13b, r13b	       856	serio.c	FUNCTION_44	IF_2
0x4000c77	            0x7409	                            je 0x4000c82	       856	serio.c	FUNCTION_44	IF_2
0x4000c79	              0x5b	                                 pop rbx	       866	serio.c	FUNCTION_44
0x4000c7a	            0x89e8	                            mov eax, ebp	       866	serio.c	FUNCTION_44
0x4000c7c	              0x5d	                                 pop rbp	       866	serio.c	FUNCTION_44
0x4000c7d	            0x415c	                                 pop r12	       866	serio.c	FUNCTION_44
0x4000c7f	            0x415d	                                 pop r13	       866	serio.c	FUNCTION_44
0x4000c81	              0xc3	                                     ret	       866	serio.c	FUNCTION_44
0x4000c82	        0xc6431000	                mov byte [rbx + 0x10], 0	       857	serio.c	FUNCTION_44	IF_2
0x4000c86	            0x31f6	                            xor esi, esi	       858	serio.c	FUNCTION_44	IF_2	CALL_3
0x4000c88	          0x4889df	                            mov rdi, rbx	       858	serio.c	FUNCTION_44	IF_2	CALL_3
0x4000c8b	      0xba04000000	                              mov edx, 4	       858	serio.c	FUNCTION_44	IF_2	CALL_3
0x4000c90	      0xe84bfaffff	              call sym.serio_queue_event	       858	serio.c	FUNCTION_44	IF_2	CALL_3
0x4000c95	            0x85c0	                           test eax, eax	       859	serio.c	FUNCTION_44	IF_2	IF_3
0x4000c97	            0x89c3	                            mov ebx, eax	       858	serio.c	FUNCTION_44	IF_2	CALL_3
0x4000c99	            0x74de	                            je 0x4000c79	       859	serio.c	FUNCTION_44	IF_2	IF_3
0x4000c9b	            0x89dd	                            mov ebp, ebx	       861	serio.c	FUNCTION_44	IF_2	IF_3
0x4000c9d	          0x4c89e7	                            mov rdi, r12	       860	serio.c	FUNCTION_44	IF_2	IF_3	CALL_4
0x4000ca0	      0xe800000000	                          call 0x4000ca5	       860	serio.c	FUNCTION_44	IF_2	IF_3	CALL_4
0x4000ca5	            0x89e8	                            mov eax, ebp	       866	serio.c	FUNCTION_44
0x4000ca7	              0x5b	                                 pop rbx	       866	serio.c	FUNCTION_44
0x4000ca8	              0x5d	                                 pop rbp	       866	serio.c	FUNCTION_44
0x4000ca9	            0x415c	                                 pop r12	       866	serio.c	FUNCTION_44
0x4000cab	            0x415d	                                 pop r13	       866	serio.c	FUNCTION_44
0x4000cad	              0xc3	                                     ret	       866	serio.c	FUNCTION_44
0x4000cae	        0x488b7350	            mov rsi, qword [rbx + 0x50] 	       847	serio.c	FUNCTION_44	IF_1	CALL_2
0x4000cb2	            0x89c2	                            mov edx, eax	       847	serio.c	FUNCTION_44	IF_1	CALL_2
0x4000cb4	    0x48c7c7000000	                              mov rdi, 0	       847	serio.c	FUNCTION_44	IF_1	CALL_2
0x4000cbb	            0x89c5	                            mov ebp, eax	       847	serio.c	FUNCTION_44	IF_1	CALL_2
0x4000cbd	      0xe800000000	                          call 0x4000cc2	       847	serio.c	FUNCTION_44	IF_1	CALL_2
0x4000cc2	            0xebb5	                           jmp 0x4000c79	       849	serio.c	FUNCTION_44	IF_1
serio_release_port	functions,0:CALL,3:DO,0:ELSE,0:IF,0:FOR,0:SWITCH,0:WHILE,0	4
0x40006c0	    0x4881ef580100	                          sub rdi, 0x158	       506	serio.c	FUNCTION_24	CALL_2
0x40006c7	      0xe800000000	                          call 0x40006cc	       506	serio.c	FUNCTION_24	CALL_2
0x40006cc	            0x31ff	                            xor edi, edi	       507	serio.c	FUNCTION_24	CALL_3
0x40006ce	      0xe900000000	                           jmp 0x40006d3	       507	serio.c	FUNCTION_24	CALL_3
serio_show_bind_mode	functions,0:CALL,2:DO,0:ELSE,0:IF,0:FOR,0:SWITCH,0:WHILE,0	10
0x40009f0	    0x80bf70ffffff	                cmp byte [rdi - 0x90], 0	       432	serio.c	FUNCTION_21	CALL_2
0x40009f7	          0x4889d1	                            mov rcx, rdx	       430	serio.c	FUNCTION_21
0x40009fa	    0x48c7c0000000	                              mov rax, 0	       432	serio.c	FUNCTION_21	CALL_2
0x4000a01	    0x48c7c2000000	                              mov rdx, 0	       432	serio.c	FUNCTION_21	CALL_2
0x4000a08	    0x48c7c6000000	                              mov rsi, 0	       432	serio.c	FUNCTION_21	CALL_2
0x4000a0f	          0x4889cf	                            mov rdi, rcx	       432	serio.c	FUNCTION_21	CALL_2
0x4000a12	        0x480f45d0	                         cmovne rdx, rax	       432	serio.c	FUNCTION_21	CALL_2
0x4000a16	      0xe800000000	                          call 0x4000a1b	       432	serio.c	FUNCTION_21	CALL_2
0x4000a1b	            0x4898	                                    cdqe	       432	serio.c	FUNCTION_21	CALL_2
0x4000a1d	              0xc3	                                     ret	       433	serio.c	FUNCTION_21
serio_unregister_driver	functions,1:CALL,4:DO,0:ELSE,0:IF,0:FOR,0:SWITCH,0:WHILE,0	30
0x4000cd0	              0x55	                                push rbp	       870	serio.c	FUNCTION_45
0x4000cd1	              0x53	                                push rbx	       870	serio.c	FUNCTION_45
0x4000cd2	          0x4889fd	                            mov rbp, rdi	       870	serio.c	FUNCTION_45
0x4000cd5	    0x48c7c7000000	                              mov rdi, 0	       873	serio.c	FUNCTION_45	CALL_1
0x4000cdc	      0xe800000000	                          call 0x4000ce1	       873	serio.c	FUNCTION_45	CALL_1
0x4000ce1	        0xc6451001	                mov byte [rbp + 0x10], 1	       875	serio.c	FUNCTION_45
0x4000ce5	          0x4889ef	                            mov rdi, rbp	       876	serio.c	FUNCTION_45	CALL_2
0x4000ce8	      0xe8e3f5ffff	    call sym.serio_remove_pending_events	       876	serio.c	FUNCTION_45	CALL_2
0x4000ced	    0x488b05000000	            mov rax, qword [0x04000cf4] 	       879	serio.c	FUNCTION_45	FUNCTION_1
0x4000cf4	    0x483d00000000	                              cmp rax, 0	       879	serio.c	FUNCTION_45	FUNCTION_1
0x4000cfa	    0x488d98d8fbff	                  lea rbx, [rax - 0x428]	       879	serio.c	FUNCTION_45	FUNCTION_1
0x4000d01	            0x7518	                           jne 0x4000d1b	       879	serio.c	FUNCTION_45	FUNCTION_1
0x4000d03	            0xeb31	                           jmp 0x4000d36	       879	serio.c	FUNCTION_45	FUNCTION_1
0x4000d05	    0x488b83280400	           mov rax, qword [rbx + 0x428] 	       879	serio.c	FUNCTION_45	FUNCTION_1
0x4000d0c	    0x483d00000000	                              cmp rax, 0	       879	serio.c	FUNCTION_45	FUNCTION_1
0x4000d12	    0x488d98d8fbff	                  lea rbx, [rax - 0x428]	       879	serio.c	FUNCTION_45	FUNCTION_1
0x4000d19	            0x741b	                            je 0x4000d36	       879	serio.c	FUNCTION_45	FUNCTION_1
0x4000d1b	    0x483ba808fdff	            cmp rbp, qword [rax - 0x2f8]	       880	serio.c	FUNCTION_45	FUNCTION_1	IF_1
0x4000d22	            0x75e1	                           jne 0x4000d05	       880	serio.c	FUNCTION_45	FUNCTION_1	IF_1
0x4000d24	          0x4889df	                            mov rdi, rbx	       881	serio.c	FUNCTION_45	FUNCTION_1	IF_1	CALL_1
0x4000d27	      0xe894f7ffff	          call sym.serio_disconnect_port	       881	serio.c	FUNCTION_45	FUNCTION_1	IF_1	CALL_1
0x4000d2c	          0x4889df	                            mov rdi, rbx	       882	serio.c	FUNCTION_45	FUNCTION_1	IF_1	CALL_2
0x4000d2f	      0xe84cf5ffff	              call sym.serio_find_driver	       882	serio.c	FUNCTION_45	FUNCTION_1	IF_1	CALL_2
0x4000d34	            0xebb7	                           jmp 0x4000ced	       884	serio.c	FUNCTION_45	FUNCTION_1	IF_1
0x4000d36	        0x488d7d50	                   lea rdi, [rbp + 0x50]	       888	serio.c	FUNCTION_45	CALL_3
0x4000d3a	      0xe800000000	                          call 0x4000d3f	       888	serio.c	FUNCTION_45	CALL_3
0x4000d3f	              0x5b	                                 pop rbx	       890	serio.c	FUNCTION_45
0x4000d40	              0x5d	                                 pop rbp	       890	serio.c	FUNCTION_45
0x4000d41	    0x48c7c7000000	                              mov rdi, 0	       889	serio.c	FUNCTION_45	CALL_4
0x4000d48	      0xe900000000	                           jmp 0x4000d4d	       889	serio.c	FUNCTION_45	CALL_4
serio_match_port	functions,0:CALL,0:DO,0:ELSE,0:IF,1:FOR,0:SWITCH,0:WHILE,1	30
0x4000040	            0xeb12	                           jmp 0x4000054	        91	serio.c	FUNCTION_4	WHILE_1
0x4000042	        0x807f0300	                   cmp byte [rdi + 3], 0	        91	serio.c	FUNCTION_4	WHILE_1
0x4000046	            0x744d	                            je 0x4000095	        91	serio.c	FUNCTION_4	WHILE_1
0x4000048	    0x3a86c9000000	               cmp al, byte [rsi + 0xc9]	        92	serio.c	FUNCTION_4	WHILE_1	IF_1
0x400004e	            0x740f	                            je 0x400005f	        92	serio.c	FUNCTION_4	WHILE_1	IF_1
0x4000050	        0x4883c704	                              add rdi, 4	        97	serio.c	FUNCTION_4	WHILE_1
0x4000054	           0xfb607	                   movzx eax, byte [rdi]	        91	serio.c	FUNCTION_4	WHILE_1
0x4000057	            0x84c0	                             test al, al	        91	serio.c	FUNCTION_4	WHILE_1
0x4000059	            0x74e7	                            je 0x4000042	        91	serio.c	FUNCTION_4	WHILE_1
0x400005b	            0x3cff	                            cmp al, 0xff	        92	serio.c	FUNCTION_4	WHILE_1	IF_1
0x400005d	            0x75e9	                           jne 0x4000048	        92	serio.c	FUNCTION_4	WHILE_1	IF_1
0x400005f	         0xfb64703	               movzx eax, byte [rdi + 3]	        93	serio.c	FUNCTION_4	WHILE_1	IF_1
0x4000063	            0x3cff	                            cmp al, 0xff	        92	serio.c	FUNCTION_4	WHILE_1	IF_1
0x4000065	            0x7408	                            je 0x400006f	        92	serio.c	FUNCTION_4	WHILE_1	IF_1
0x4000067	    0x3a86cc000000	               cmp al, byte [rsi + 0xcc]	        93	serio.c	FUNCTION_4	WHILE_1	IF_1
0x400006d	            0x75e1	                           jne 0x4000050	        93	serio.c	FUNCTION_4	WHILE_1	IF_1
0x400006f	         0xfb64701	               movzx eax, byte [rdi + 1]	        94	serio.c	FUNCTION_4	WHILE_1	IF_1
0x4000073	            0x3cff	                            cmp al, 0xff	        93	serio.c	FUNCTION_4	WHILE_1	IF_1
0x4000075	            0x7408	                            je 0x400007f	        93	serio.c	FUNCTION_4	WHILE_1	IF_1
0x4000077	    0x3a86ca000000	               cmp al, byte [rsi + 0xca]	        94	serio.c	FUNCTION_4	WHILE_1	IF_1
0x400007d	            0x75d1	                           jne 0x4000050	        94	serio.c	FUNCTION_4	WHILE_1	IF_1
0x400007f	         0xfb64702	               movzx eax, byte [rdi + 2]	        95	serio.c	FUNCTION_4	WHILE_1	IF_1
0x4000083	            0x3cff	                            cmp al, 0xff	        94	serio.c	FUNCTION_4	WHILE_1	IF_1
0x4000085	            0x7408	                            je 0x400008f	        94	serio.c	FUNCTION_4	WHILE_1	IF_1
0x4000087	    0x3a86cb000000	               cmp al, byte [rsi + 0xcb]	        95	serio.c	FUNCTION_4	WHILE_1	IF_1
0x400008d	            0x75c1	                           jne 0x4000050	        95	serio.c	FUNCTION_4	WHILE_1	IF_1
0x400008f	      0xb801000000	                              mov eax, 1	        96	serio.c	FUNCTION_4	WHILE_1	IF_1
0x4000094	              0xc3	                                     ret	       100	serio.c	FUNCTION_4
0x4000095	            0x31c0	                            xor eax, eax	        99	serio.c	FUNCTION_4
0x4000097	              0xc3	                                     ret	        99	serio.c	FUNCTION_4
drvctl_store	functions,0:CALL,16:DO,0:ELSE,4:IF,5:FOR,0:SWITCH,0:WHILE,0	134
0x4001160	            0x4157	                                push r15	       399	serio.c	FUNCTION_20
0x4001162	            0x4156	                                push r14	       399	serio.c	FUNCTION_20
0x4001164	            0x4155	                                push r13	       399	serio.c	FUNCTION_20
0x4001166	            0x4154	                                push r12	       399	serio.c	FUNCTION_20
0x4001168	          0x4989fc	                            mov r12, rdi	       399	serio.c	FUNCTION_20
0x400116b	              0x55	                                push rbp	       399	serio.c	FUNCTION_20
0x400116c	              0x53	                                push rbx	       399	serio.c	FUNCTION_20
0x400116d	    0x48c7c7000000	                              mov rdi, 0	       404	serio.c	FUNCTION_20	CALL_2
0x4001174	          0x4989d5	                            mov r13, rdx	       399	serio.c	FUNCTION_20
0x4001177	          0x4889cb	                            mov rbx, rcx	       399	serio.c	FUNCTION_20
0x400117a	        0x4883ec08	                              sub rsp, 8	       399	serio.c	FUNCTION_20
0x400117e	      0xe800000000	                          call 0x4001183	       404	serio.c	FUNCTION_20	CALL_2
0x4001183	            0x85c0	                           test eax, eax	       405	serio.c	FUNCTION_20	IF_1
0x4001185	     0xf85a9000000	                           jne 0x4001234	       405	serio.c	FUNCTION_20	IF_1
0x400118b	        0x4883fb05	                              cmp rbx, 5	       408	serio.c	FUNCTION_20	IF_2	CALL_3
0x400118f	      0xb905000000	                              mov ecx, 5	       408	serio.c	FUNCTION_20	IF_2	CALL_3
0x4001194	    0x48c7c7000000	                              mov rdi, 0	       408	serio.c	FUNCTION_20	IF_2	CALL_3
0x400119b	        0x480f4ecb	                         cmovle rcx, rbx	       408	serio.c	FUNCTION_20	IF_2	CALL_3
0x400119f	          0x4c89ee	                            mov rsi, r13	       408	serio.c	FUNCTION_20	IF_2	CALL_3
0x40011a2	    0x498dac24a8fe	                  lea rbp, [r12 - 0x158]	       400	serio.c	FUNCTION_20	CALL_1
0x40011aa	          0x4839c9	                            cmp rcx, rcx	       408	serio.c	FUNCTION_20	IF_2	CALL_3
0x40011ad	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       408	serio.c	FUNCTION_20	IF_2	CALL_3
0x40011af	     0xf8490000000	                            je 0x4001245	       408	serio.c	FUNCTION_20	IF_2	CALL_3
0x40011b5	        0x4883fb0a	                            cmp rbx, 0xa	       410	serio.c	FUNCTION_20	ELSE_1	IF_3	CALL_5
0x40011b9	      0xb90a000000	                            mov ecx, 0xa	       410	serio.c	FUNCTION_20	ELSE_1	IF_3	CALL_5
0x40011be	    0x48c7c7000000	                              mov rdi, 0	       410	serio.c	FUNCTION_20	ELSE_1	IF_3	CALL_5
0x40011c5	        0x480f4ecb	                         cmovle rcx, rbx	       410	serio.c	FUNCTION_20	ELSE_1	IF_3	CALL_5
0x40011c9	          0x4c89ee	                            mov rsi, r13	       410	serio.c	FUNCTION_20	ELSE_1	IF_3	CALL_5
0x40011cc	          0x4839c9	                            cmp rcx, rcx	       410	serio.c	FUNCTION_20	ELSE_1	IF_3	CALL_5
0x40011cf	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       410	serio.c	FUNCTION_20	ELSE_1	IF_3	CALL_5
0x40011d1	     0xf84b0000000	                            je 0x4001287	       410	serio.c	FUNCTION_20	ELSE_1	IF_3	CALL_5
0x40011d7	        0x4883fb07	                              cmp rbx, 7	       412	serio.c	FUNCTION_20	ELSE_2	IF_4	CALL_7
0x40011db	      0xb907000000	                              mov ecx, 7	       412	serio.c	FUNCTION_20	ELSE_2	IF_4	CALL_7
0x40011e0	    0x48c7c7000000	                              mov rdi, 0	       412	serio.c	FUNCTION_20	ELSE_2	IF_4	CALL_7
0x40011e7	        0x480f4ecb	                         cmovle rcx, rbx	       412	serio.c	FUNCTION_20	ELSE_2	IF_4	CALL_7
0x40011eb	          0x4c89ee	                            mov rsi, r13	       412	serio.c	FUNCTION_20	ELSE_2	IF_4	CALL_7
0x40011ee	          0x4839c9	                            cmp rcx, rcx	       412	serio.c	FUNCTION_20	ELSE_2	IF_4	CALL_7
0x40011f1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       412	serio.c	FUNCTION_20	ELSE_2	IF_4	CALL_7
0x40011f3	            0x7476	                            je 0x400126b	       412	serio.c	FUNCTION_20	ELSE_2	IF_4	CALL_7
0x40011f5	          0x4c89ef	                            mov rdi, r13	       416	serio.c	FUNCTION_20	ELSE_3	IF_5	CALL_11
0x40011f8	    0x48c7c6000000	                              mov rsi, 0	       416	serio.c	FUNCTION_20	ELSE_3	IF_5	CALL_11
0x40011ff	      0xe800000000	                          call 0x4001204	       416	serio.c	FUNCTION_20	ELSE_3	IF_5	CALL_11
0x4001204	          0x4885c0	                           test rax, rax	       416	serio.c	FUNCTION_20	ELSE_3	IF_5	CALL_11
0x4001207	          0x4989c5	                            mov r13, rax	       416	serio.c	FUNCTION_20	ELSE_3	IF_5	CALL_11
0x400120a	     0xf8481000000	                            je 0x4001291	       416	serio.c	FUNCTION_20	ELSE_3	IF_5	CALL_11
0x4001210	          0x4889ef	                            mov rdi, rbp	       417	serio.c	FUNCTION_20	ELSE_3	IF_5	CALL_12
0x4001213	      0xe8a8f2ffff	          call sym.serio_disconnect_port	       417	serio.c	FUNCTION_20	ELSE_3	IF_5	CALL_12
0x4001218	        0x498b7db8	             mov rdi, qword [r13 - 0x48]	       110	serio.c	FUNCTION_5	IF_1	CALL_1
0x400121c	          0x4889ee	                            mov rsi, rbp	       110	serio.c	FUNCTION_5	IF_1	CALL_1
0x400121f	      0xe81ceeffff	               call sym.serio_match_port	       110	serio.c	FUNCTION_5	IF_1	CALL_1
0x4001224	            0x85c0	                           test eax, eax	       110	serio.c	FUNCTION_5	IF_1	CALL_1
0x4001226	            0x757e	                           jne 0x40012a6	       110	serio.c	FUNCTION_5	IF_1	CALL_1
0x4001228	            0x31f6	                            xor esi, esi	       419	serio.c	FUNCTION_20	ELSE_3	IF_5	CALL_15
0x400122a	          0x4889ef	                            mov rdi, rbp	       419	serio.c	FUNCTION_20	ELSE_3	IF_5	CALL_15
0x400122d	      0xe8def3ffff	  call sym.serio_remove_duplicate_events	       419	serio.c	FUNCTION_20	ELSE_3	IF_5	CALL_15
0x4001232	            0xeb19	                           jmp 0x400124d	       419	serio.c	FUNCTION_20	ELSE_3	IF_5	CALL_15
0x4001234	            0x4898	                                    cdqe	       406	serio.c	FUNCTION_20	IF_1
0x4001236	        0x4883c408	                              add rsp, 8	       427	serio.c	FUNCTION_20
0x400123a	              0x5b	                                 pop rbx	       427	serio.c	FUNCTION_20
0x400123b	              0x5d	                                 pop rbp	       427	serio.c	FUNCTION_20
0x400123c	            0x415c	                                 pop r12	       427	serio.c	FUNCTION_20
0x400123e	            0x415d	                                 pop r13	       427	serio.c	FUNCTION_20
0x4001240	            0x415e	                                 pop r14	       427	serio.c	FUNCTION_20
0x4001242	            0x415f	                                 pop r15	       427	serio.c	FUNCTION_20
0x4001244	              0xc3	                                     ret	       427	serio.c	FUNCTION_20
0x4001245	          0x4889ef	                            mov rdi, rbp	       409	serio.c	FUNCTION_20	IF_2	CALL_4
0x4001248	      0xe873f2ffff	          call sym.serio_disconnect_port	       409	serio.c	FUNCTION_20	IF_2	CALL_4
0x400124d	    0x48c7c7000000	                              mov rdi, 0	       424	serio.c	FUNCTION_20	CALL_16
0x4001254	      0xe800000000	                          call 0x4001259	       424	serio.c	FUNCTION_20	CALL_16
0x4001259	        0x4883c408	                              add rsp, 8	       427	serio.c	FUNCTION_20
0x400125d	          0x4889d8	                            mov rax, rbx	       426	serio.c	FUNCTION_20
0x4001260	              0x5b	                                 pop rbx	       427	serio.c	FUNCTION_20
0x4001261	              0x5d	                                 pop rbp	       427	serio.c	FUNCTION_20
0x4001262	            0x415c	                                 pop r12	       427	serio.c	FUNCTION_20
0x4001264	            0x415d	                                 pop r13	       427	serio.c	FUNCTION_20
0x4001266	            0x415e	                                 pop r14	       427	serio.c	FUNCTION_20
0x4001268	            0x415f	                                 pop r15	       427	serio.c	FUNCTION_20
0x400126a	              0xc3	                                     ret	       427	serio.c	FUNCTION_20
0x400126b	          0x4889ef	                            mov rdi, rbp	       413	serio.c	FUNCTION_20	ELSE_2	IF_4	CALL_8
0x400126e	      0xe84df2ffff	          call sym.serio_disconnect_port	       413	serio.c	FUNCTION_20	ELSE_2	IF_4	CALL_8
0x4001273	          0x4889ef	                            mov rdi, rbp	       414	serio.c	FUNCTION_20	ELSE_2	IF_4	CALL_9
0x4001276	      0xe805f0ffff	              call sym.serio_find_driver	       414	serio.c	FUNCTION_20	ELSE_2	IF_4	CALL_9
0x400127b	            0x31f6	                            xor esi, esi	       415	serio.c	FUNCTION_20	ELSE_2	IF_4	CALL_10
0x400127d	          0x4889ef	                            mov rdi, rbp	       415	serio.c	FUNCTION_20	ELSE_2	IF_4	CALL_10
0x4001280	      0xe88bf3ffff	  call sym.serio_remove_duplicate_events	       415	serio.c	FUNCTION_20	ELSE_2	IF_4	CALL_10
0x4001285	            0xebc6	                           jmp 0x400124d	       415	serio.c	FUNCTION_20	ELSE_2	IF_4	CALL_10
0x4001287	          0x4889ef	                            mov rdi, rbp	       411	serio.c	FUNCTION_20	ELSE_1	IF_3	CALL_6
0x400128a	      0xe821fcffff	        call sym.serio_reconnect_subtree	       411	serio.c	FUNCTION_20	ELSE_1	IF_3	CALL_6
0x400128f	            0xebbc	                           jmp 0x400124d	       411	serio.c	FUNCTION_20	ELSE_1	IF_3	CALL_6
0x4001291	    0x48c7c7000000	                              mov rdi, 0	       424	serio.c	FUNCTION_20	CALL_16
0x4001298	      0xe800000000	                          call 0x400129d	       424	serio.c	FUNCTION_20	CALL_16
0x400129d	    0x48c7c0eaffff	             mov rax, 0xffffffffffffffea	       424	serio.c	FUNCTION_20	CALL_16
0x40012a4	            0xeb90	                           jmp 0x4001236	       424	serio.c	FUNCTION_20	CALL_16
0x40012a6	    0x4c8db5380100	                  lea r14, [rbp + 0x138]	        62	serio.c	FUNCTION_1	CALL_1
0x40012ad	        0x4d8d7db0	                   lea r15, [r13 - 0x50]	       112	serio.c	FUNCTION_5	IF_1
0x40012b1	    0x4d89ac248800	             mov qword [r12 + 0x88], r13	       112	serio.c	FUNCTION_5	IF_1
0x40012b9	          0x4c89f7	                            mov rdi, r14	        62	serio.c	FUNCTION_1	CALL_1
0x40012bc	      0xe800000000	                          call 0x40012c1	        62	serio.c	FUNCTION_1	CALL_1
0x40012c1	          0x4c89fe	                            mov rsi, r15	        63	serio.c	FUNCTION_1	CALL_2
0x40012c4	          0x4889ef	                            mov rdi, rbp	        63	serio.c	FUNCTION_1	CALL_2
0x40012c7	        0x498b45d8	             mov rax, qword [r13 - 0x28]	        63	serio.c	FUNCTION_1	CALL_2
0x40012cb	      0xe800000000	                          call 0x40012d0	        63	serio.c	FUNCTION_1	CALL_2
0x40012d0	          0x4c89f7	                            mov rdi, r14	        64	serio.c	FUNCTION_1	CALL_3
0x40012d3	          0x4189c7	                           mov r15d, eax	        63	serio.c	FUNCTION_1	CALL_2
0x40012d6	      0xe800000000	                          call 0x40012db	        64	serio.c	FUNCTION_1	CALL_3
0x40012db	          0x4585ff	                         test r15d, r15d	       113	serio.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x40012de	            0x756c	                           jne 0x400134c	       113	serio.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x40012e0	          0x4c89e7	                            mov rdi, r12	       118	serio.c	FUNCTION_5	IF_1	CALL_3
0x40012e3	      0xe800000000	                          call 0x40012e8	       118	serio.c	FUNCTION_5	IF_1	CALL_3
0x40012e8	            0x85c0	                           test eax, eax	       119	serio.c	FUNCTION_5	IF_1	IF_3
0x40012ea	     0xf8438ffffff	                            je 0x4001228	       119	serio.c	FUNCTION_5	IF_1	IF_3
0x40012f0	        0x4d8b45b0	              mov r8, qword [r13 - 0x50]	       120	serio.c	FUNCTION_5	IF_1	IF_3	CALL_4
0x40012f4	        0x488d4d08	                      lea rcx, [rbp + 8]	       122	serio.c	FUNCTION_5	IF_1	IF_3
0x40012f8	        0x488d5528	                   lea rdx, [rbp + 0x28]	       122	serio.c	FUNCTION_5	IF_1	IF_3
0x40012fc	          0x4189c1	                            mov r9d, eax	       120	serio.c	FUNCTION_5	IF_1	IF_3	CALL_4
0x40012ff	    0x48c7c6000000	                              mov rsi, 0	       120	serio.c	FUNCTION_5	IF_1	IF_3	CALL_4
0x4001306	          0x4c89e7	                            mov rdi, r12	       120	serio.c	FUNCTION_5	IF_1	IF_3	CALL_4
0x4001309	          0x890424	                    mov dword [rsp], eax	       120	serio.c	FUNCTION_5	IF_1	IF_3	CALL_4
0x400130c	      0xe800000000	                          call 0x4001311	       120	serio.c	FUNCTION_5	IF_1	IF_3	CALL_4
0x4001311	          0x4889ef	                            mov rdi, rbp	       124	serio.c	FUNCTION_5	IF_1	IF_3	CALL_5
0x4001314	      0xe8b7eeffff	        call sym.serio_disconnect_driver	       124	serio.c	FUNCTION_5	IF_1	IF_3	CALL_5
0x4001319	        0x48630424	                 movsxd rax, dword [rsp]	       124	serio.c	FUNCTION_5	IF_1	IF_3	CALL_5
0x400131d	    0x49c784248800	               mov qword [r12 + 0x88], 0	       125	serio.c	FUNCTION_5	IF_1	IF_3
0x4001329	            0x31f6	                            xor esi, esi	       419	serio.c	FUNCTION_20	ELSE_3	IF_5	CALL_15
0x400132b	          0x4889ef	                            mov rdi, rbp	       419	serio.c	FUNCTION_20	ELSE_3	IF_5	CALL_15
0x400132e	        0x48890424	                    mov qword [rsp], rax	       419	serio.c	FUNCTION_20	ELSE_3	IF_5	CALL_15
0x4001332	      0xe8d9f2ffff	  call sym.serio_remove_duplicate_events	       419	serio.c	FUNCTION_20	ELSE_3	IF_5	CALL_15
0x4001337	    0x48c7c7000000	                              mov rdi, 0	       424	serio.c	FUNCTION_20	CALL_16
0x400133e	      0xe800000000	                          call 0x4001343	       424	serio.c	FUNCTION_20	CALL_16
0x4001343	        0x488b0424	                    mov rax, qword [rsp]	       424	serio.c	FUNCTION_20	CALL_16
0x4001347	      0xe9eafeffff	                           jmp 0x4001236	       424	serio.c	FUNCTION_20	CALL_16
0x400134c	    0x49c784248800	               mov qword [r12 + 0x88], 0	       114	serio.c	FUNCTION_5	IF_1	IF_2
0x4001358	    0x48c7c0edffff	             mov rax, 0xffffffffffffffed	       114	serio.c	FUNCTION_5	IF_1	IF_2
0x400135f	            0xebc8	                           jmp 0x4001329	       114	serio.c	FUNCTION_5	IF_1	IF_2
serio_reconnect	functions,0:CALL,1:DO,0:ELSE,0:IF,0:FOR,0:SWITCH,0:WHILE,0	3
0x4000820	      0xba02000000	                              mov edx, 2	       703	serio.c	FUNCTION_32	CALL_1
0x4000825	            0x31f6	                            xor esi, esi	       703	serio.c	FUNCTION_32	CALL_1
0x4000827	      0xe9b4feffff	               jmp sym.serio_queue_event	       703	serio.c	FUNCTION_32	CALL_1
serio_shutdown	functions,0:CALL,2:DO,0:ELSE,0:IF,0:FOR,0:SWITCH,0:WHILE,0	2
0x4000270	    0x4881ef580100	                          sub rdi, 0x158	       817	serio.c	FUNCTION_42	CALL_2
0x4000277	            0xeba7	                   jmp sym.serio_cleanup	       817	serio.c	FUNCTION_42	CALL_2
serio_cleanup	functions,0:CALL,3:DO,0:ELSE,0:IF,1:FOR,0:SWITCH,0:WHILE,0	18
0x4000220	              0x55	                                push rbp	       806	serio.c	FUNCTION_41
0x4000221	    0x488daf380100	                  lea rbp, [rdi + 0x138]	       807	serio.c	FUNCTION_41	CALL_1
0x4000228	              0x53	                                push rbx	       806	serio.c	FUNCTION_41
0x4000229	          0x4889fb	                            mov rbx, rdi	       806	serio.c	FUNCTION_41
0x400022c	          0x4889ef	                            mov rdi, rbp	       807	serio.c	FUNCTION_41	CALL_1
0x400022f	      0xe800000000	                          call 0x4000234	       807	serio.c	FUNCTION_41	CALL_1
0x4000234	    0x488b83300100	           mov rax, qword [rbx + 0x130] 	       808	serio.c	FUNCTION_41	IF_1
0x400023b	          0x4885c0	                           test rax, rax	       808	serio.c	FUNCTION_41	IF_1
0x400023e	            0x7411	                            je 0x4000251	       808	serio.c	FUNCTION_41	IF_1
0x4000240	        0x488b4048	            mov rax, qword [rax + 0x48] 	       808	serio.c	FUNCTION_41	IF_1
0x4000244	          0x4885c0	                           test rax, rax	       808	serio.c	FUNCTION_41	IF_1
0x4000247	            0x7408	                            je 0x4000251	       808	serio.c	FUNCTION_41	IF_1
0x4000249	          0x4889df	                            mov rdi, rbx	       809	serio.c	FUNCTION_41	CALL_2
0x400024c	      0xe800000000	                          call 0x4000251	       809	serio.c	FUNCTION_41	CALL_2
0x4000251	          0x4889ef	                            mov rdi, rbp	       810	serio.c	FUNCTION_41	CALL_3
0x4000254	              0x5b	                                 pop rbx	       811	serio.c	FUNCTION_41
0x4000255	              0x5d	                                 pop rbp	       811	serio.c	FUNCTION_41
0x4000256	      0xe900000000	                           jmp 0x400025b	       810	serio.c	FUNCTION_41	CALL_3
serio_suspend	functions,0:CALL,2:DO,0:ELSE,0:IF,0:FOR,0:SWITCH,0:WHILE,0	4
0x4000260	    0x4881ef580100	                          sub rdi, 0x158	       948	serio.c	FUNCTION_49	CALL_2
0x4000267	      0xe8b4ffffff	                  call sym.serio_cleanup	       948	serio.c	FUNCTION_49	CALL_2
0x400026c	            0x31c0	                            xor eax, eax	       951	serio.c	FUNCTION_49
0x400026e	              0xc3	                                     ret	       951	serio.c	FUNCTION_49
serio_set_bind_mode	functions,0:CALL,3:DO,0:ELSE,2:IF,2:FOR,0:SWITCH,0:WHILE,0	28
0x4000b60	        0x4883f907	                              cmp rcx, 7	       441	serio.c	FUNCTION_22	IF_1	CALL_2
0x4000b64	          0x4989c8	                             mov r8, rcx	       436	serio.c	FUNCTION_22
0x4000b67	      0xb907000000	                              mov ecx, 7	       441	serio.c	FUNCTION_22	IF_1	CALL_2
0x4000b6c	        0x490f4ec8	                          cmovle rcx, r8	       441	serio.c	FUNCTION_22	IF_1	CALL_2
0x4000b70	          0x4989f9	                             mov r9, rdi	       436	serio.c	FUNCTION_22
0x4000b73	          0x4889d6	                            mov rsi, rdx	       441	serio.c	FUNCTION_22	IF_1	CALL_2
0x4000b76	          0x4839c9	                            cmp rcx, rcx	       441	serio.c	FUNCTION_22	IF_1	CALL_2
0x4000b79	    0x48c7c7000000	                              mov rdi, 0	       441	serio.c	FUNCTION_22	IF_1	CALL_2
0x4000b80	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       441	serio.c	FUNCTION_22	IF_1	CALL_2
0x4000b82	            0x743a	                            je 0x4000bbe	       441	serio.c	FUNCTION_22	IF_1	CALL_2
0x4000b84	        0x4983f805	                               cmp r8, 5	       443	serio.c	FUNCTION_22	ELSE_1	IF_2	CALL_3
0x4000b88	      0xb905000000	                              mov ecx, 5	       443	serio.c	FUNCTION_22	ELSE_1	IF_2	CALL_3
0x4000b8d	          0x4889d6	                            mov rsi, rdx	       443	serio.c	FUNCTION_22	ELSE_1	IF_2	CALL_3
0x4000b90	        0x490f4ec8	                          cmovle rcx, r8	       443	serio.c	FUNCTION_22	ELSE_1	IF_2	CALL_3
0x4000b94	    0x48c7c7000000	                              mov rdi, 0	       443	serio.c	FUNCTION_22	ELSE_1	IF_2	CALL_3
0x4000b9b	    0x48c7c0eaffff	             mov rax, 0xffffffffffffffea	       443	serio.c	FUNCTION_22	ELSE_1	IF_2	CALL_3
0x4000ba2	          0x4839c9	                            cmp rcx, rcx	       443	serio.c	FUNCTION_22	ELSE_1	IF_2	CALL_3
0x4000ba5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       443	serio.c	FUNCTION_22	ELSE_1	IF_2	CALL_3
0x4000ba7	           0xf97c1	                                 seta cl	       443	serio.c	FUNCTION_22	ELSE_1	IF_2	CALL_3
0x4000baa	           0xf92c2	                                 setb dl	       443	serio.c	FUNCTION_22	ELSE_1	IF_2	CALL_3
0x4000bad	            0x38d1	                              cmp cl, dl	       443	serio.c	FUNCTION_22	ELSE_1	IF_2	CALL_3
0x4000baf	            0x750b	                           jne 0x4000bbc	       443	serio.c	FUNCTION_22	ELSE_1	IF_2	CALL_3
0x4000bb1	    0x41c68170ffff	                 mov byte [r9 - 0x90], 0	       444	serio.c	FUNCTION_22	ELSE_1	IF_2
0x4000bb9	          0x4963c0	                         movsxd rax, r8d	       444	serio.c	FUNCTION_22	ELSE_1	IF_2
0x4000bbc	            0xf3c3	                                     ret	       450	serio.c	FUNCTION_22
0x4000bbe	    0x41c68170ffff	                 mov byte [r9 - 0x90], 1	       442	serio.c	FUNCTION_22	IF_1
0x4000bc6	          0x4963c0	                         movsxd rax, r8d	       442	serio.c	FUNCTION_22	IF_1
0x4000bc9	              0xc3	                                     ret	       442	serio.c	FUNCTION_22	IF_1
serio_disconnect_driver	functions,0:CALL,3:DO,0:ELSE,0:IF,1:FOR,0:SWITCH,0:WHILE,0	16
0x40001d0	              0x55	                                push rbp	        82	serio.c	FUNCTION_3
0x40001d1	    0x488daf380100	                  lea rbp, [rdi + 0x138]	        83	serio.c	FUNCTION_3	CALL_1
0x40001d8	              0x53	                                push rbx	        82	serio.c	FUNCTION_3
0x40001d9	          0x4889fb	                            mov rbx, rdi	        82	serio.c	FUNCTION_3
0x40001dc	          0x4889ef	                            mov rdi, rbp	        83	serio.c	FUNCTION_3	CALL_1
0x40001df	      0xe800000000	                          call 0x40001e4	        83	serio.c	FUNCTION_3	CALL_1
0x40001e4	    0x488b83300100	           mov rax, qword [rbx + 0x130] 	        84	serio.c	FUNCTION_3	IF_1
0x40001eb	          0x4885c0	                           test rax, rax	        84	serio.c	FUNCTION_3	IF_1
0x40001ee	            0x740c	                            je 0x40001fc	        84	serio.c	FUNCTION_3	IF_1
0x40001f0	        0x488b4040	            mov rax, qword [rax + 0x40] 	        85	serio.c	FUNCTION_3	CALL_2
0x40001f4	          0x4889df	                            mov rdi, rbx	        85	serio.c	FUNCTION_3	CALL_2
0x40001f7	      0xe800000000	                          call 0x40001fc	        85	serio.c	FUNCTION_3	CALL_2
0x40001fc	          0x4889ef	                            mov rdi, rbp	        86	serio.c	FUNCTION_3	CALL_3
0x40001ff	              0x5b	                                 pop rbx	        87	serio.c	FUNCTION_3
0x4000200	              0x5d	                                 pop rbp	        87	serio.c	FUNCTION_3
0x4000201	      0xe900000000	                           jmp 0x4000206	        86	serio.c	FUNCTION_3	CALL_3
firmware_id_show	functions,0:CALL,2:DO,0:ELSE,0:IF,0:FOR,0:SWITCH,0:WHILE,0	7
0x40009d0	          0x4889d0	                            mov rax, rdx	       453	serio.c	FUNCTION_23
0x40009d3	    0x488d97f0feff	                  lea rdx, [rdi - 0x110]	       456	serio.c	FUNCTION_23	CALL_2
0x40009da	    0x48c7c6000000	                              mov rsi, 0	       456	serio.c	FUNCTION_23	CALL_2
0x40009e1	          0x4889c7	                            mov rdi, rax	       456	serio.c	FUNCTION_23	CALL_2
0x40009e4	      0xe800000000	                          call 0x40009e9	       456	serio.c	FUNCTION_23	CALL_2
0x40009e9	            0x4898	                                    cdqe	       456	serio.c	FUNCTION_23	CALL_2
0x40009eb	              0xc3	                                     ret	       457	serio.c	FUNCTION_23
serio_init	functions,0:CALL,2:DO,0:ELSE,0:IF,1:FOR,0:SWITCH,0:WHILE,0	13
0x4000040	            0xeb12	                           jmp 0x4000054	        91	serio.c	FUNCTION_4	WHILE_1
0x4000042	        0x807f0300	                   cmp byte [rdi + 3], 0	        91	serio.c	FUNCTION_4	WHILE_1
0x4000046	            0x744d	                            je 0x4000095	        91	serio.c	FUNCTION_4	WHILE_1
0x4000048	    0x3a86c9000000	               cmp al, byte [rsi + 0xc9]	        92	serio.c	FUNCTION_4	WHILE_1	IF_1
0x400004e	            0x740f	                            je 0x400005f	        92	serio.c	FUNCTION_4	WHILE_1	IF_1
0x4000050	        0x4883c704	                              add rdi, 4	        97	serio.c	FUNCTION_4	WHILE_1
0x4000054	           0xfb607	                   movzx eax, byte [rdi]	        91	serio.c	FUNCTION_4	WHILE_1
0x4000057	            0x84c0	                             test al, al	        91	serio.c	FUNCTION_4	WHILE_1
0x4000059	            0x74e7	                            je 0x4000042	        91	serio.c	FUNCTION_4	WHILE_1
0x400005b	            0x3cff	                            cmp al, 0xff	        92	serio.c	FUNCTION_4	WHILE_1	IF_1
0x400005d	            0x75e9	                           jne 0x4000048	        92	serio.c	FUNCTION_4	WHILE_1	IF_1
0x400005f	         0xfb64703	               movzx eax, byte [rdi + 3]	        93	serio.c	FUNCTION_4	WHILE_1	IF_1
0x4000063	            0x3cff	                            cmp al, 0xff	        92	serio.c	FUNCTION_4	WHILE_1	IF_1
modalias_show	functions,0:CALL,2:DO,0:ELSE,0:IF,0:FOR,0:SWITCH,0:WHILE,0	10
0x4000a40	          0x4889d0	                            mov rax, rdx	       367	serio.c	FUNCTION_15
0x4000a43	     0xfb68f74ffff	            movzx ecx, byte [rdi - 0x8c]	       370	serio.c	FUNCTION_15	CALL_2
0x4000a4a	     0xfb69771ffff	            movzx edx, byte [rdi - 0x8f]	       370	serio.c	FUNCTION_15	CALL_2
0x4000a51	    0x440fb68f72ff	            movzx r9d, byte [rdi - 0x8e]	       370	serio.c	FUNCTION_15	CALL_2
0x4000a59	    0x440fb68773ff	            movzx r8d, byte [rdi - 0x8d]	       370	serio.c	FUNCTION_15	CALL_2
0x4000a61	    0x48c7c6000000	                              mov rsi, 0	       370	serio.c	FUNCTION_15	CALL_2
0x4000a68	          0x4889c7	                            mov rdi, rax	       370	serio.c	FUNCTION_15	CALL_2
0x4000a6b	      0xe800000000	                          call 0x4000a70	       370	serio.c	FUNCTION_15	CALL_2
0x4000a70	            0x4898	                                    cdqe	       370	serio.c	FUNCTION_15	CALL_2
0x4000a72	              0xc3	                                     ret	       372	serio.c	FUNCTION_15
serio_driver_remove	functions,0:CALL,2:DO,0:ELSE,0:IF,0:FOR,0:SWITCH,0:WHILE,0	4
0x4000210	    0x4881ef580100	                          sub rdi, 0x158	       801	serio.c	FUNCTION_40	CALL_2
0x4000217	      0xe8b4ffffff	        call sym.serio_disconnect_driver	       801	serio.c	FUNCTION_40	CALL_2
0x400021c	            0x31c0	                            xor eax, eax	       803	serio.c	FUNCTION_40
0x400021e	              0xc3	                                     ret	       803	serio.c	FUNCTION_40
serio_unregister_child_port	functions,1:CALL,2:DO,0:ELSE,0:IF,0:FOR,0:SWITCH,0:WHILE,0	28
0x4000590	            0x4154	                                push r12	       734	serio.c	FUNCTION_35
0x4000592	              0x55	                                push rbp	       734	serio.c	FUNCTION_35
0x4000593	          0x4989fc	                            mov r12, rdi	       734	serio.c	FUNCTION_35
0x4000596	              0x53	                                push rbx	       734	serio.c	FUNCTION_35
0x4000597	    0x48c7c7000000	                              mov rdi, 0	       737	serio.c	FUNCTION_35	CALL_1
0x400059e	    0x4981c4180100	                          add r12, 0x118	       738	serio.c	FUNCTION_35	FUNCTION_1
0x40005a5	      0xe800000000	                          call 0x40005aa	       737	serio.c	FUNCTION_35	CALL_1
0x40005aa	        0x498b0424	                    mov rax, qword [r12]	       738	serio.c	FUNCTION_35	FUNCTION_1
0x40005ae	          0x488b08	                    mov rcx, qword [rax]	       738	serio.c	FUNCTION_35	FUNCTION_1
0x40005b1	          0x4939c4	                            cmp r12, rax	       738	serio.c	FUNCTION_35	FUNCTION_1
0x40005b4	    0x488da8f8feff	                  lea rbp, [rax - 0x108]	       738	serio.c	FUNCTION_35	FUNCTION_1
0x40005bb	    0x488d99f8feff	                  lea rbx, [rcx - 0x108]	       738	serio.c	FUNCTION_35	FUNCTION_1
0x40005c2	            0x742d	                            je 0x40005f1	       738	serio.c	FUNCTION_35	FUNCTION_1
0x40005c4	          0x4889ef	                            mov rdi, rbp	       739	serio.c	FUNCTION_35	FUNCTION_1	CALL_1
0x40005c7	      0xe8f4feffff	          call sym.serio_disconnect_port	       739	serio.c	FUNCTION_35	FUNCTION_1	CALL_1
0x40005cc	          0x4889ef	                            mov rdi, rbp	       740	serio.c	FUNCTION_35	FUNCTION_1	CALL_2
0x40005cf	          0x4889dd	                            mov rbp, rbx	       740	serio.c	FUNCTION_35	FUNCTION_1	CALL_2
0x40005d2	      0xe899fdffff	             call sym.serio_destroy_port	       740	serio.c	FUNCTION_35	FUNCTION_1	CALL_2
0x40005d7	    0x488d83080100	                  lea rax, [rbx + 0x108]	       738	serio.c	FUNCTION_35	FUNCTION_1
0x40005de	    0x488b93080100	           mov rdx, qword [rbx + 0x108] 	       738	serio.c	FUNCTION_35	FUNCTION_1
0x40005e5	          0x4c39e0	                            cmp rax, r12	       738	serio.c	FUNCTION_35	FUNCTION_1
0x40005e8	    0x488d9af8feff	                  lea rbx, [rdx - 0x108]	       738	serio.c	FUNCTION_35	FUNCTION_1
0x40005ef	            0x75d3	                           jne 0x40005c4	       738	serio.c	FUNCTION_35	FUNCTION_1
0x40005f1	              0x5b	                                 pop rbx	       743	serio.c	FUNCTION_35
0x40005f2	              0x5d	                                 pop rbp	       743	serio.c	FUNCTION_35
0x40005f3	            0x415c	                                 pop r12	       743	serio.c	FUNCTION_35
0x40005f5	    0x48c7c7000000	                              mov rdi, 0	       742	serio.c	FUNCTION_35	CALL_2
0x40005fc	      0xe900000000	                           jmp 0x4000601	       742	serio.c	FUNCTION_35	CALL_2
serio_driver_probe	functions,0:CALL,3:DO,0:ELSE,0:IF,0:FOR,0:SWITCH,0:WHILE,0	20
0x4001370	            0x4154	                                push r12	       790	serio.c	FUNCTION_39
0x4001372	              0x55	                                push rbp	       790	serio.c	FUNCTION_39
0x4001373	              0x53	                                push rbx	       790	serio.c	FUNCTION_39
0x4001374	    0x488d9fa8feff	                  lea rbx, [rdi - 0x158]	        62	serio.c	FUNCTION_1	CALL_1
0x400137b	    0x4c8ba7880000	            mov r12, qword [rdi + 0x88] 	       792	serio.c	FUNCTION_39	CALL_2
0x4001382	    0x488dab380100	                  lea rbp, [rbx + 0x138]	        62	serio.c	FUNCTION_1	CALL_1
0x4001389	          0x4889ef	                            mov rdi, rbp	        62	serio.c	FUNCTION_1	CALL_1
0x400138c	      0xe800000000	                          call 0x4001391	        62	serio.c	FUNCTION_1	CALL_1
0x4001391	      0x498d7424b0	                   lea rsi, [r12 - 0x50]	        63	serio.c	FUNCTION_1	CALL_2
0x4001396	          0x4889df	                            mov rdi, rbx	        63	serio.c	FUNCTION_1	CALL_2
0x4001399	      0x498b4424d8	             mov rax, qword [r12 - 0x28]	        63	serio.c	FUNCTION_1	CALL_2
0x400139e	      0xe800000000	                          call 0x40013a3	        63	serio.c	FUNCTION_1	CALL_2
0x40013a3	          0x4889ef	                            mov rdi, rbp	        64	serio.c	FUNCTION_1	CALL_3
0x40013a6	            0x89c3	                            mov ebx, eax	        63	serio.c	FUNCTION_1	CALL_2
0x40013a8	      0xe800000000	                          call 0x40013ad	        64	serio.c	FUNCTION_1	CALL_3
0x40013ad	            0x89d8	                            mov eax, ebx	       795	serio.c	FUNCTION_39
0x40013af	              0x5b	                                 pop rbx	       795	serio.c	FUNCTION_39
0x40013b0	              0x5d	                                 pop rbp	       795	serio.c	FUNCTION_39
0x40013b1	            0x415c	                                 pop r12	       795	serio.c	FUNCTION_39
0x40013b3	              0xc3	                                     ret	       795	serio.c	FUNCTION_39
serio_resume	functions,0:CALL,6:DO,0:ELSE,0:IF,3:FOR,0:SWITCH,0:WHILE,0	47
0x4000830	            0x4155	                                push r13	       954	serio.c	FUNCTION_50
0x4000832	            0x4154	                                push r12	       954	serio.c	FUNCTION_50
0x4000834	    0x4c8da7a8feff	                  lea r12, [rdi - 0x158]	       955	serio.c	FUNCTION_50	CALL_1
0x400083b	              0x55	                                push rbp	       954	serio.c	FUNCTION_50
0x400083c	              0x53	                                push rbx	       954	serio.c	FUNCTION_50
0x400083d	          0x4889fb	                            mov rbx, rdi	       954	serio.c	FUNCTION_50
0x4000840	    0x498dac243801	                  lea rbp, [r12 + 0x138]	       958	serio.c	FUNCTION_50	CALL_2
0x4000848	          0x4889ef	                            mov rdi, rbp	       958	serio.c	FUNCTION_50	CALL_2
0x400084b	      0xe800000000	                          call 0x4000850	       958	serio.c	FUNCTION_50	CALL_2
0x4000850	        0x488b43d8	             mov rax, qword [rbx - 0x28]	       959	serio.c	FUNCTION_50	IF_1
0x4000854	          0x4885c0	                           test rax, rax	       959	serio.c	FUNCTION_50	IF_1
0x4000857	            0x7444	                            je 0x400089d	       959	serio.c	FUNCTION_50	IF_1
0x4000859	        0x488b4038	            mov rax, qword [rax + 0x38] 	       959	serio.c	FUNCTION_50	IF_1
0x400085d	          0x4885c0	                           test rax, rax	       959	serio.c	FUNCTION_50	IF_1
0x4000860	            0x743b	                            je 0x400089d	       959	serio.c	FUNCTION_50	IF_1
0x4000862	          0x4c89e7	                            mov rdi, r12	       960	serio.c	FUNCTION_50	IF_1	CALL_3
0x4000865	      0xe800000000	                          call 0x400086a	       960	serio.c	FUNCTION_50	IF_1	CALL_3
0x400086a	          0x4189c5	                           mov r13d, eax	       960	serio.c	FUNCTION_50	IF_1	CALL_3
0x400086d	          0x8d4002	                      lea eax, [rax + 2]	       961	serio.c	FUNCTION_50	IF_1	IF_2
0x4000870	          0x83e0fd	                     and eax, 0xfffffffd	       961	serio.c	FUNCTION_50	IF_1	IF_2
0x4000873	            0x7516	                           jne 0x400088b	       961	serio.c	FUNCTION_50	IF_1	IF_2
0x4000875	          0x4889ef	                            mov rdi, rbp	       965	serio.c	FUNCTION_50	CALL_5
0x4000878	      0xe800000000	                          call 0x400087d	       965	serio.c	FUNCTION_50	CALL_5
0x400087d	          0x4585ed	                         test r13d, r13d	       967	serio.c	FUNCTION_50	IF_3
0x4000880	            0x7523	                           jne 0x40008a5	       967	serio.c	FUNCTION_50	IF_3
0x4000882	              0x5b	                                 pop rbx	       976	serio.c	FUNCTION_50
0x4000883	            0x31c0	                            xor eax, eax	       976	serio.c	FUNCTION_50
0x4000885	              0x5d	                                 pop rbp	       976	serio.c	FUNCTION_50
0x4000886	            0x415c	                                 pop r12	       976	serio.c	FUNCTION_50
0x4000888	            0x415d	                                 pop r13	       976	serio.c	FUNCTION_50
0x400088a	              0xc3	                                     ret	       976	serio.c	FUNCTION_50
0x400088b	          0x4489ea	                           mov edx, r13d	       962	serio.c	FUNCTION_50	IF_1	IF_2	CALL_4
0x400088e	    0x48c7c6000000	                              mov rsi, 0	       962	serio.c	FUNCTION_50	IF_1	IF_2	CALL_4
0x4000895	          0x4889df	                            mov rdi, rbx	       962	serio.c	FUNCTION_50	IF_1	IF_2	CALL_4
0x4000898	      0xe800000000	                          call 0x400089d	       962	serio.c	FUNCTION_50	IF_1	IF_2	CALL_4
0x400089d	          0x4889ef	                            mov rdi, rbp	       965	serio.c	FUNCTION_50	CALL_5
0x40008a0	      0xe800000000	                          call 0x40008a5	       965	serio.c	FUNCTION_50	CALL_5
0x40008a5	          0x4c89e7	                            mov rdi, r12	       972	serio.c	FUNCTION_50	IF_3	CALL_6
0x40008a8	      0xba01000000	                              mov edx, 1	       972	serio.c	FUNCTION_50	IF_3	CALL_6
0x40008ad	            0x31f6	                            xor esi, esi	       972	serio.c	FUNCTION_50	IF_3	CALL_6
0x40008af	      0xe82cfeffff	              call sym.serio_queue_event	       972	serio.c	FUNCTION_50	IF_3	CALL_6
0x40008b4	            0x31c0	                            xor eax, eax	       976	serio.c	FUNCTION_50
0x40008b6	              0x5b	                                 pop rbx	       976	serio.c	FUNCTION_50
0x40008b7	              0x5d	                                 pop rbp	       976	serio.c	FUNCTION_50
0x40008b8	            0x415c	                                 pop r12	       976	serio.c	FUNCTION_50
0x40008ba	            0x415d	                                 pop r13	       976	serio.c	FUNCTION_50
0x40008bc	              0xc3	                                     ret	       976	serio.c	FUNCTION_50
proto_show	functions,0:CALL,2:DO,0:ELSE,0:IF,0:FOR,0:SWITCH,0:WHILE,0	7
0x4000ac0	          0x4889d0	                            mov rax, rdx	       381	serio.c	FUNCTION_17
0x4000ac3	     0xfb69774ffff	            movzx edx, byte [rdi - 0x8c]	       383	serio.c	FUNCTION_17	CALL_2
0x4000aca	    0x48c7c6000000	                              mov rsi, 0	       383	serio.c	FUNCTION_17	CALL_2
0x4000ad1	          0x4889c7	                            mov rdi, rax	       383	serio.c	FUNCTION_17	CALL_2
0x4000ad4	      0xe800000000	                          call 0x4000ad9	       383	serio.c	FUNCTION_17	CALL_2
0x4000ad9	            0x4898	                                    cdqe	       383	serio.c	FUNCTION_17	CALL_2
0x4000adb	              0xc3	                                     ret	       384	serio.c	FUNCTION_17
id_show	functions,0:CALL,2:DO,0:ELSE,0:IF,0:FOR,0:SWITCH,0:WHILE,0	7
0x4000aa0	          0x4889d0	                            mov rax, rdx	       387	serio.c	FUNCTION_18
0x4000aa3	     0xfb69773ffff	            movzx edx, byte [rdi - 0x8d]	       389	serio.c	FUNCTION_18	CALL_2
0x4000aaa	    0x48c7c6000000	                              mov rsi, 0	       389	serio.c	FUNCTION_18	CALL_2
0x4000ab1	          0x4889c7	                            mov rdi, rax	       389	serio.c	FUNCTION_18	CALL_2
0x4000ab4	      0xe800000000	                          call 0x4000ab9	       389	serio.c	FUNCTION_18	CALL_2
0x4000ab9	            0x4898	                                    cdqe	       389	serio.c	FUNCTION_18	CALL_2
0x4000abb	              0xc3	                                     ret	       390	serio.c	FUNCTION_18
serio_find_driver	functions,0:CALL,2:DO,0:ELSE,0:IF,1:FOR,0:SWITCH,0:WHILE,0	23
0x4000280	              0x55	                                push rbp	       133	serio.c	FUNCTION_6
0x4000281	    0x488daf580100	                  lea rbp, [rdi + 0x158]	       136	serio.c	FUNCTION_6	CALL_1
0x4000288	              0x53	                                push rbx	       133	serio.c	FUNCTION_6
0x4000289	          0x4889fb	                            mov rbx, rdi	       133	serio.c	FUNCTION_6
0x400028c	          0x4889ef	                            mov rdi, rbp	       136	serio.c	FUNCTION_6	CALL_1
0x400028f	      0xe800000000	                          call 0x4000294	       136	serio.c	FUNCTION_6	CALL_1
0x4000294	            0x89c2	                            mov edx, eax	       137	serio.c	FUNCTION_6	IF_1
0x4000296	          0xc1ea1f	                           shr edx, 0x1f	       137	serio.c	FUNCTION_6	IF_1
0x4000299	            0x84d2	                             test dl, dl	       137	serio.c	FUNCTION_6	IF_1
0x400029b	            0x7423	                            je 0x40002c0	       137	serio.c	FUNCTION_6	IF_1
0x400029d	      0x3dfbfdffff	                     cmp eax, 0xfffffdfb	       137	serio.c	FUNCTION_6	IF_1
0x40002a2	            0x741c	                            je 0x40002c0	       137	serio.c	FUNCTION_6	IF_1
0x40002a4	        0x488d4b08	                      lea rcx, [rbx + 8]	       140	serio.c	FUNCTION_6	IF_1
0x40002a8	        0x488d5328	                   lea rdx, [rbx + 0x28]	       140	serio.c	FUNCTION_6	IF_1
0x40002ac	          0x4889ef	                            mov rdi, rbp	       138	serio.c	FUNCTION_6	IF_1	CALL_2
0x40002af	              0x5b	                                 pop rbx	       141	serio.c	FUNCTION_6
0x40002b0	              0x5d	                                 pop rbp	       141	serio.c	FUNCTION_6
0x40002b1	          0x4189c0	                            mov r8d, eax	       138	serio.c	FUNCTION_6	IF_1	CALL_2
0x40002b4	    0x48c7c6000000	                              mov rsi, 0	       138	serio.c	FUNCTION_6	IF_1	CALL_2
0x40002bb	      0xe900000000	                           jmp 0x40002c0	       138	serio.c	FUNCTION_6	IF_1	CALL_2
0x40002c0	              0x5b	                                 pop rbx	       141	serio.c	FUNCTION_6
0x40002c1	              0x5d	                                 pop rbp	       141	serio.c	FUNCTION_6
0x40002c2	              0xc3	                                     ret	       141	serio.c	FUNCTION_6
serio_bus_match	functions,0:CALL,3:DO,0:ELSE,0:IF,1:FOR,0:SWITCH,0:WHILE,0	10
0x40000a0	    0x80bf70ffffff	                cmp byte [rdi - 0x90], 0	       905	serio.c	FUNCTION_47	IF_1
0x40000a7	            0x7506	                           jne 0x40000af	       905	serio.c	FUNCTION_47	IF_1
0x40000a9	        0x807ec000	                cmp byte [rsi - 0x40], 0	       905	serio.c	FUNCTION_47	IF_1
0x40000ad	            0x7403	                            je 0x40000b2	       905	serio.c	FUNCTION_47	IF_1
0x40000af	            0x31c0	                            xor eax, eax	       909	serio.c	FUNCTION_47
0x40000b1	              0xc3	                                     ret	       909	serio.c	FUNCTION_47
0x40000b2	    0x488d87a8feff	                  lea rax, [rdi - 0x158]	       908	serio.c	FUNCTION_47	CALL_3
0x40000b9	        0x488b7eb8	             mov rdi, qword [rsi - 0x48]	       908	serio.c	FUNCTION_47	CALL_3
0x40000bd	          0x4889c6	                            mov rsi, rax	       908	serio.c	FUNCTION_47	CALL_3
0x40000c0	      0xe97bffffff	                jmp sym.serio_match_port	       908	serio.c	FUNCTION_47	CALL_3
extra_show	functions,0:CALL,2:DO,0:ELSE,0:IF,0:FOR,0:SWITCH,0:WHILE,0	7
0x4000a80	          0x4889d0	                            mov rax, rdx	       393	serio.c	FUNCTION_19
0x4000a83	     0xfb69772ffff	            movzx edx, byte [rdi - 0x8e]	       395	serio.c	FUNCTION_19	CALL_2
0x4000a8a	    0x48c7c6000000	                              mov rsi, 0	       395	serio.c	FUNCTION_19	CALL_2
0x4000a91	          0x4889c7	                            mov rdi, rax	       395	serio.c	FUNCTION_19	CALL_2
0x4000a94	      0xe800000000	                          call 0x4000a99	       395	serio.c	FUNCTION_19	CALL_2
0x4000a99	            0x4898	                                    cdqe	       395	serio.c	FUNCTION_19	CALL_2
0x4000a9b	              0xc3	                                     ret	       396	serio.c	FUNCTION_19
serio_exit	functions,0:CALL,2:DO,0:ELSE,0:IF,0:FOR,0:SWITCH,0:WHILE,0	8
0x4000040	            0xeb12	                           jmp 0x4000054	        91	serio.c	FUNCTION_4	WHILE_1
0x4000042	        0x807f0300	                   cmp byte [rdi + 3], 0	        91	serio.c	FUNCTION_4	WHILE_1
0x4000046	            0x744d	                            je 0x4000095	        91	serio.c	FUNCTION_4	WHILE_1
0x4000048	    0x3a86c9000000	               cmp al, byte [rsi + 0xc9]	        92	serio.c	FUNCTION_4	WHILE_1	IF_1
0x400004e	            0x740f	                            je 0x400005f	        92	serio.c	FUNCTION_4	WHILE_1	IF_1
0x4000050	        0x4883c704	                              add rdi, 4	        97	serio.c	FUNCTION_4	WHILE_1
0x4000054	           0xfb607	                   movzx eax, byte [rdi]	        91	serio.c	FUNCTION_4	WHILE_1
0x4000057	              0x84	                                 invalid	        91	serio.c	FUNCTION_4	WHILE_1
description_show	functions,0:CALL,2:DO,0:ELSE,0:IF,0:FOR,0:SWITCH,0:WHILE,0	10
0x4000b30	        0x488b57b0	             mov rdx, qword [rdi - 0x50]	       754	serio.c	FUNCTION_36	CALL_2
0x4000b34	          0x4889f0	                            mov rax, rsi	       752	serio.c	FUNCTION_36
0x4000b37	    0x48c7c1000000	                              mov rcx, 0	       754	serio.c	FUNCTION_36	CALL_2
0x4000b3e	    0x48c7c6000000	                              mov rsi, 0	       754	serio.c	FUNCTION_36	CALL_2
0x4000b45	          0x4889c7	                            mov rdi, rax	       754	serio.c	FUNCTION_36	CALL_2
0x4000b48	          0x4885d2	                           test rdx, rdx	       754	serio.c	FUNCTION_36	CALL_2
0x4000b4b	        0x480f44d1	                          cmove rdx, rcx	       754	serio.c	FUNCTION_36	CALL_2
0x4000b4f	      0xe800000000	                          call 0x4000b54	       754	serio.c	FUNCTION_36	CALL_2
0x4000b54	            0x4898	                                    cdqe	       754	serio.c	FUNCTION_36	CALL_2
0x4000b56	              0xc3	                                     ret	       755	serio.c	FUNCTION_36
serio_reconnect_driver	functions,0:CALL,3:DO,0:ELSE,0:IF,1:FOR,0:SWITCH,0:WHILE,0	23
0x4000180	              0x55	                                push rbp	        70	serio.c	FUNCTION_2
0x4000181	    0x488daf380100	                  lea rbp, [rdi + 0x138]	        73	serio.c	FUNCTION_2	CALL_1
0x4000188	              0x53	                                push rbx	        70	serio.c	FUNCTION_2
0x4000189	          0x4889fb	                            mov rbx, rdi	        70	serio.c	FUNCTION_2
0x400018c	          0x4889ef	                            mov rdi, rbp	        73	serio.c	FUNCTION_2	CALL_1
0x400018f	      0xe800000000	                          call 0x4000194	        73	serio.c	FUNCTION_2	CALL_1
0x4000194	    0x488b83300100	           mov rax, qword [rbx + 0x130] 	        74	serio.c	FUNCTION_2	IF_1
0x400019b	          0x4885c0	                           test rax, rax	        74	serio.c	FUNCTION_2	IF_1
0x400019e	            0x7420	                            je 0x40001c0	        74	serio.c	FUNCTION_2	IF_1
0x40001a0	        0x488b4030	            mov rax, qword [rax + 0x30] 	        74	serio.c	FUNCTION_2	IF_1
0x40001a4	          0x4885c0	                           test rax, rax	        74	serio.c	FUNCTION_2	IF_1
0x40001a7	            0x7417	                            je 0x40001c0	        74	serio.c	FUNCTION_2	IF_1
0x40001a9	          0x4889df	                            mov rdi, rbx	        75	serio.c	FUNCTION_2	CALL_2
0x40001ac	      0xe800000000	                          call 0x40001b1	        75	serio.c	FUNCTION_2	CALL_2
0x40001b1	            0x89c3	                            mov ebx, eax	        75	serio.c	FUNCTION_2	CALL_2
0x40001b3	          0x4889ef	                            mov rdi, rbp	        76	serio.c	FUNCTION_2	CALL_3
0x40001b6	      0xe800000000	                          call 0x40001bb	        76	serio.c	FUNCTION_2	CALL_3
0x40001bb	            0x89d8	                            mov eax, ebx	        79	serio.c	FUNCTION_2
0x40001bd	              0x5b	                                 pop rbx	        79	serio.c	FUNCTION_2
0x40001be	              0x5d	                                 pop rbp	        79	serio.c	FUNCTION_2
0x40001bf	              0xc3	                                     ret	        79	serio.c	FUNCTION_2
0x40001c0	      0xbbffffffff	                     mov ebx, 0xffffffff	        71	serio.c	FUNCTION_2
0x40001c5	            0xebec	                           jmp 0x40001b3	        71	serio.c	FUNCTION_2
bind_mode_store	functions,0:CALL,3:DO,0:ELSE,2:IF,2:FOR,0:SWITCH,0:WHILE,0	27
0x4000bd0	        0x4883fa07	                              cmp rdx, 7	       770	serio.c	FUNCTION_38	IF_1	CALL_2
0x4000bd4	      0xb907000000	                              mov ecx, 7	       770	serio.c	FUNCTION_38	IF_1	CALL_2
0x4000bd9	          0x4989f8	                             mov r8, rdi	       765	serio.c	FUNCTION_38
0x4000bdc	        0x480f4eca	                         cmovle rcx, rdx	       770	serio.c	FUNCTION_38	IF_1	CALL_2
0x4000be0	    0x48c7c7000000	                              mov rdi, 0	       770	serio.c	FUNCTION_38	IF_1	CALL_2
0x4000be7	          0x4889f0	                            mov rax, rsi	       765	serio.c	FUNCTION_38
0x4000bea	          0x4839c9	                            cmp rcx, rcx	       770	serio.c	FUNCTION_38	IF_1	CALL_2
0x4000bed	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       770	serio.c	FUNCTION_38	IF_1	CALL_2
0x4000bef	            0x7439	                            je 0x4000c2a	       770	serio.c	FUNCTION_38	IF_1	CALL_2
0x4000bf1	        0x4883fa05	                              cmp rdx, 5	       772	serio.c	FUNCTION_38	ELSE_1	IF_2	CALL_3
0x4000bf5	      0xb905000000	                              mov ecx, 5	       772	serio.c	FUNCTION_38	ELSE_1	IF_2	CALL_3
0x4000bfa	          0x4889c6	                            mov rsi, rax	       772	serio.c	FUNCTION_38	ELSE_1	IF_2	CALL_3
0x4000bfd	        0x480f4eca	                         cmovle rcx, rdx	       772	serio.c	FUNCTION_38	ELSE_1	IF_2	CALL_3
0x4000c01	    0x48c7c7000000	                              mov rdi, 0	       772	serio.c	FUNCTION_38	ELSE_1	IF_2	CALL_3
0x4000c08	    0x48c7c0eaffff	             mov rax, 0xffffffffffffffea	       772	serio.c	FUNCTION_38	ELSE_1	IF_2	CALL_3
0x4000c0f	          0x4839c9	                            cmp rcx, rcx	       772	serio.c	FUNCTION_38	ELSE_1	IF_2	CALL_3
0x4000c12	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       772	serio.c	FUNCTION_38	ELSE_1	IF_2	CALL_3
0x4000c14	        0x400f97c6	                                seta sil	       772	serio.c	FUNCTION_38	ELSE_1	IF_2	CALL_3
0x4000c18	           0xf92c1	                                 setb cl	       772	serio.c	FUNCTION_38	ELSE_1	IF_2	CALL_3
0x4000c1b	          0x4038ce	                             cmp sil, cl	       772	serio.c	FUNCTION_38	ELSE_1	IF_2	CALL_3
0x4000c1e	            0x7508	                           jne 0x4000c28	       772	serio.c	FUNCTION_38	ELSE_1	IF_2	CALL_3
0x4000c20	      0x41c640c000	                 mov byte [r8 - 0x40], 0	       773	serio.c	FUNCTION_38	ELSE_1	IF_2
0x4000c25	          0x4863c2	                         movsxd rax, edx	       773	serio.c	FUNCTION_38	ELSE_1	IF_2
0x4000c28	            0xf3c3	                                     ret	       779	serio.c	FUNCTION_38
0x4000c2a	      0x41c640c001	                 mov byte [r8 - 0x40], 1	       771	serio.c	FUNCTION_38	IF_1
0x4000c2f	          0x4863c2	                         movsxd rax, edx	       771	serio.c	FUNCTION_38	IF_1
0x4000c32	              0xc3	                                     ret	       771	serio.c	FUNCTION_38	IF_1
bind_mode_show	functions,0:CALL,2:DO,0:ELSE,0:IF,0:FOR,0:SWITCH,0:WHILE,0	10
0x4000b00	        0x807fc000	                cmp byte [rdi - 0x40], 0	       761	serio.c	FUNCTION_37	CALL_2
0x4000b04	          0x4889f1	                            mov rcx, rsi	       759	serio.c	FUNCTION_37
0x4000b07	    0x48c7c0000000	                              mov rax, 0	       761	serio.c	FUNCTION_37	CALL_2
0x4000b0e	    0x48c7c2000000	                              mov rdx, 0	       761	serio.c	FUNCTION_37	CALL_2
0x4000b15	    0x48c7c6000000	                              mov rsi, 0	       761	serio.c	FUNCTION_37	CALL_2
0x4000b1c	          0x4889cf	                            mov rdi, rcx	       761	serio.c	FUNCTION_37	CALL_2
0x4000b1f	        0x480f45d0	                         cmovne rdx, rax	       761	serio.c	FUNCTION_37	CALL_2
0x4000b23	      0xe800000000	                          call 0x4000b28	       761	serio.c	FUNCTION_37	CALL_2
0x4000b28	            0x4898	                                    cdqe	       761	serio.c	FUNCTION_37	CALL_2
0x4000b2a	              0xc3	                                     ret	       762	serio.c	FUNCTION_37
serio_show_description	functions,0:CALL,2:DO,0:ELSE,0:IF,0:FOR,0:SWITCH,0:WHILE,0	7
0x4000a20	          0x4889d0	                            mov rax, rdx	       361	serio.c	FUNCTION_14
0x4000a23	    0x488d97b0feff	                  lea rdx, [rdi - 0x150]	       363	serio.c	FUNCTION_14	CALL_2
0x4000a2a	    0x48c7c6000000	                              mov rsi, 0	       363	serio.c	FUNCTION_14	CALL_2
0x4000a31	          0x4889c7	                            mov rdi, rax	       363	serio.c	FUNCTION_14	CALL_2
0x4000a34	      0xe800000000	                          call 0x4000a39	       363	serio.c	FUNCTION_14	CALL_2
0x4000a39	            0x4898	                                    cdqe	       363	serio.c	FUNCTION_14	CALL_2
0x4000a3b	              0xc3	                                     ret	       364	serio.c	FUNCTION_14
serio_unregister_port	functions,0:CALL,4:DO,0:ELSE,0:IF,0:FOR,0:SWITCH,0:WHILE,0	11
0x4000560	              0x53	                                push rbx	       722	serio.c	FUNCTION_34
0x4000561	          0x4889fb	                            mov rbx, rdi	       722	serio.c	FUNCTION_34
0x4000564	    0x48c7c7000000	                              mov rdi, 0	       723	serio.c	FUNCTION_34	CALL_1
0x400056b	      0xe800000000	                          call 0x4000570	       723	serio.c	FUNCTION_34	CALL_1
0x4000570	          0x4889df	                            mov rdi, rbx	       724	serio.c	FUNCTION_34	CALL_2
0x4000573	      0xe848ffffff	          call sym.serio_disconnect_port	       724	serio.c	FUNCTION_34	CALL_2
0x4000578	          0x4889df	                            mov rdi, rbx	       725	serio.c	FUNCTION_34	CALL_3
0x400057b	      0xe8f0fdffff	             call sym.serio_destroy_port	       725	serio.c	FUNCTION_34	CALL_3
0x4000580	              0x5b	                                 pop rbx	       727	serio.c	FUNCTION_34
0x4000581	    0x48c7c7000000	                              mov rdi, 0	       726	serio.c	FUNCTION_34	CALL_4
0x4000588	      0xe900000000	                           jmp 0x400058d	       726	serio.c	FUNCTION_34	CALL_4
type_show	functions,0:CALL,2:DO,0:ELSE,0:IF,0:FOR,0:SWITCH,0:WHILE,0	7
0x4000ae0	          0x4889d0	                            mov rax, rdx	       375	serio.c	FUNCTION_16
0x4000ae3	     0xfb69771ffff	            movzx edx, byte [rdi - 0x8f]	       377	serio.c	FUNCTION_16	CALL_2
0x4000aea	    0x48c7c6000000	                              mov rsi, 0	       377	serio.c	FUNCTION_16	CALL_2
0x4000af1	          0x4889c7	                            mov rdi, rax	       377	serio.c	FUNCTION_16	CALL_2
0x4000af4	      0xe800000000	                          call 0x4000af9	       377	serio.c	FUNCTION_16	CALL_2
0x4000af9	            0x4898	                                    cdqe	       377	serio.c	FUNCTION_16	CALL_2
0x4000afb	              0xc3	                                     ret	       378	serio.c	FUNCTION_16
