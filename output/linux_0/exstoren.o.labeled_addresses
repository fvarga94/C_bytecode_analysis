acpi_ex_store_object_to_object	functions,0:WHILE,0:DO,0:SWITCH,1:FOR,0:CALL,15:ELSE,0:IF,5	85
0x400011f	            0x4154	                                push r12	       161	exstoren.c	FUNCTION_2
0x4000121	              0x55	                                push rbp	       161	exstoren.c	FUNCTION_2
0x4000122	          0x4989cc	                            mov r12, rcx	       161	exstoren.c	FUNCTION_2
0x4000125	              0x53	                                push rbx	       161	exstoren.c	FUNCTION_2
0x4000126	          0x4889d5	                            mov rbp, rdx	       161	exstoren.c	FUNCTION_2
0x4000129	          0x4889fb	                            mov rbx, rdi	       161	exstoren.c	FUNCTION_2
0x400012c	        0x4883ec20	                           sub rsp, 0x20	       161	exstoren.c	FUNCTION_2
0x4000130	    0x65488b0c2528	                mov rcx, qword gs:[0x28]	       161	exstoren.c	FUNCTION_2
0x4000139	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       161	exstoren.c	FUNCTION_2
0x400013e	            0x31c9	                            xor ecx, ecx	       161	exstoren.c	FUNCTION_2
0x4000140	          0x4885f6	                           test rsi, rsi	       168	exstoren.c	FUNCTION_2	IF_1
0x4000143	      0x4889742408	                mov qword [rsp + 8], rsi	       161	exstoren.c	FUNCTION_2
0x4000148	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       167	exstoren.c	FUNCTION_2
0x400014d	            0x7510	                           jne 0x400015f	       168	exstoren.c	FUNCTION_2	IF_1
0x400014f	          0x4c89e2	                            mov rdx, r12	       174	exstoren.c	FUNCTION_2	IF_1
0x4000152	          0x4889ee	                            mov rsi, rbp	       174	exstoren.c	FUNCTION_2	IF_1
0x4000155	      0xe800000000	                          call 0x400015a	       174	exstoren.c	FUNCTION_2	IF_1
0x400015a	      0xe9d9000000	                           jmp 0x4000238	       177	exstoren.c	FUNCTION_2	IF_1	CALL_3
0x400015f	         0xfb67e09	               movzx edi, byte [rsi + 9]	       180	exstoren.c	FUNCTION_2	IF_2
0x4000163	        0x40387b09	                 cmp byte [rbx + 9], dil	       180	exstoren.c	FUNCTION_2	IF_2
0x4000167	            0x7428	                            je 0x4000191	       180	exstoren.c	FUNCTION_2	IF_2
0x4000169	      0x488d542410	                   lea rdx, [rsp + 0x10]	       190	exstoren.c	FUNCTION_2	IF_2	CALL_4
0x400016e	          0x4c89e1	                            mov rcx, r12	       190	exstoren.c	FUNCTION_2	IF_2	CALL_4
0x4000171	          0x4889de	                            mov rsi, rbx	       190	exstoren.c	FUNCTION_2	IF_2	CALL_4
0x4000174	      0xe800000000	                          call 0x4000179	       190	exstoren.c	FUNCTION_2	IF_2	CALL_4
0x4000179	            0x85c0	                           test eax, eax	       194	exstoren.c	FUNCTION_2	IF_2	IF_3	CALL_5
0x400017b	     0xf85b7000000	                           jne 0x4000238	       194	exstoren.c	FUNCTION_2	IF_2	IF_3	CALL_5
0x4000181	      0x483b5c2410	            cmp rbx, qword [rsp + 0x10] 	       198	exstoren.c	FUNCTION_2	IF_2	IF_4
0x4000186	            0x7509	                           jne 0x4000191	       198	exstoren.c	FUNCTION_2	IF_2	IF_4
0x4000188	        0x48895d00	                    mov qword [rbp], rbx	       203	exstoren.c	FUNCTION_2	IF_2	IF_4
0x400018c	      0xe9a7000000	                           jmp 0x4000238	       204	exstoren.c	FUNCTION_2	IF_2	IF_4	CALL_7
0x4000191	      0x488b742408	                mov rsi, qword [rsp + 8]	       212	exstoren.c	FUNCTION_2	SWITCH_1
0x4000196	          0x8a4609	                  mov al, byte [rsi + 9]	       212	exstoren.c	FUNCTION_2	SWITCH_1
0x4000199	            0x3c02	                               cmp al, 2	       212	exstoren.c	FUNCTION_2	SWITCH_1
0x400019b	            0x743b	                            je 0x40001d8	       212	exstoren.c	FUNCTION_2	SWITCH_1
0x400019d	            0x771d	                            ja 0x40001bc	       212	exstoren.c	FUNCTION_2	SWITCH_1
0x400019f	            0xfec8	                                  dec al	       212	exstoren.c	FUNCTION_2	SWITCH_1
0x40001a1	            0x754d	                           jne 0x40001f0	       212	exstoren.c	FUNCTION_2	SWITCH_1
0x40001a3	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       215	exstoren.c	FUNCTION_2	SWITCH_1
0x40001a8	          0x4889f7	                            mov rdi, rsi	       219	exstoren.c	FUNCTION_2	SWITCH_1	CALL_8
0x40001ab	        0x488b4010	            mov rax, qword [rax + 0x10] 	       215	exstoren.c	FUNCTION_2	SWITCH_1
0x40001af	        0x48894610	             mov qword [rsi + 0x10], rax	       215	exstoren.c	FUNCTION_2	SWITCH_1
0x40001b3	      0xe800000000	                          call 0x40001b8	       219	exstoren.c	FUNCTION_2	SWITCH_1	CALL_8
0x40001b8	            0x31c0	                            xor eax, eax	       220	exstoren.c	FUNCTION_2	SWITCH_1
0x40001ba	            0xeb5c	                           jmp 0x4000218	       220	exstoren.c	FUNCTION_2	SWITCH_1
0x40001bc	            0x3c03	                               cmp al, 3	       212	exstoren.c	FUNCTION_2	SWITCH_1
0x40001be	            0x7424	                            je 0x40001e4	       212	exstoren.c	FUNCTION_2	SWITCH_1
0x40001c0	            0x3c04	                               cmp al, 4	       212	exstoren.c	FUNCTION_2	SWITCH_1
0x40001c2	            0x752c	                           jne 0x40001f0	       212	exstoren.c	FUNCTION_2	SWITCH_1
0x40001c4	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       236	exstoren.c	FUNCTION_2	SWITCH_1
0x40001c9	      0x488d742408	                      lea rsi, [rsp + 8]	       236	exstoren.c	FUNCTION_2	SWITCH_1
0x40001ce	          0x4c89e2	                            mov rdx, r12	       236	exstoren.c	FUNCTION_2	SWITCH_1
0x40001d1	      0xe800000000	                          call 0x40001d6	       236	exstoren.c	FUNCTION_2	SWITCH_1
0x40001d6	            0xeb40	                           jmp 0x4000218	       239	exstoren.c	FUNCTION_2	SWITCH_1
0x40001d8	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       224	exstoren.c	FUNCTION_2	SWITCH_1
0x40001dd	      0xe800000000	                          call 0x40001e2	       224	exstoren.c	FUNCTION_2	SWITCH_1
0x40001e2	            0xeb34	                           jmp 0x4000218	       226	exstoren.c	FUNCTION_2	SWITCH_1
0x40001e4	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       230	exstoren.c	FUNCTION_2	SWITCH_1
0x40001e9	      0xe800000000	                          call 0x40001ee	       230	exstoren.c	FUNCTION_2	SWITCH_1
0x40001ee	            0xeb28	                           jmp 0x4000218	       232	exstoren.c	FUNCTION_2	SWITCH_1
0x40001f0	          0x4889f7	                            mov rdi, rsi	       245	exstoren.c	FUNCTION_2	SWITCH_1	CALL_12
0x40001f3	      0xe800000000	                          call 0x40001f8	       245	exstoren.c	FUNCTION_2	SWITCH_1	CALL_12
0x40001f8	    0x48c7c2000000	                              mov rdx, 0	       245	exstoren.c	FUNCTION_2	SWITCH_1	CALL_12
0x40001ff	          0x4889c1	                            mov rcx, rax	       245	exstoren.c	FUNCTION_2	SWITCH_1	CALL_12
0x4000202	      0xbef6000000	                           mov esi, 0xf6	       245	exstoren.c	FUNCTION_2	SWITCH_1	CALL_12
0x4000207	    0x48c7c7000000	                              mov rdi, 0	       245	exstoren.c	FUNCTION_2	SWITCH_1	CALL_12
0x400020e	      0xe800000000	                          call 0x4000213	       245	exstoren.c	FUNCTION_2	SWITCH_1	CALL_12
0x4000213	      0xb80e000000	                            mov eax, 0xe	       248	exstoren.c	FUNCTION_2	SWITCH_1
0x4000218	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       252	exstoren.c	FUNCTION_2	IF_5
0x400021d	          0x4839fb	                            cmp rbx, rdi	       252	exstoren.c	FUNCTION_2	IF_5
0x4000220	            0x740d	                            je 0x400022f	       252	exstoren.c	FUNCTION_2	IF_5
0x4000222	        0x89442404	                mov dword [rsp + 4], eax	       252	exstoren.c	FUNCTION_2	IF_5
0x4000226	      0xe800000000	                          call 0x400022b	       256	exstoren.c	FUNCTION_2	IF_5	CALL_14
0x400022b	        0x8b442404	                mov eax, dword [rsp + 4]	       256	exstoren.c	FUNCTION_2	IF_5	CALL_14
0x400022f	      0x488b542408	                mov rdx, qword [rsp + 8]	       259	exstoren.c	FUNCTION_2
0x4000234	        0x48895500	                    mov qword [rbp], rdx	       259	exstoren.c	FUNCTION_2
0x4000238	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       261	exstoren.c	FUNCTION_2
0x400023d	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       261	exstoren.c	FUNCTION_2
0x4000246	            0x7405	                            je 0x400024d	       261	exstoren.c	FUNCTION_2
0x4000248	      0xe800000000	                          call 0x400024d	       261	exstoren.c	FUNCTION_2
0x400024d	        0x4883c420	                           add rsp, 0x20	       261	exstoren.c	FUNCTION_2
0x4000251	              0x5b	                                 pop rbx	       261	exstoren.c	FUNCTION_2
0x4000252	              0x5d	                                 pop rbp	       261	exstoren.c	FUNCTION_2
0x4000253	            0x415c	                                 pop r12	       261	exstoren.c	FUNCTION_2
0x4000255	              0xc3	                                     ret	       261	exstoren.c	FUNCTION_2
acpi_ex_resolve_object	functions,0:WHILE,0:DO,0:SWITCH,1:FOR,0:CALL,8:ELSE,0:IF,4	62
0x4000040	          0x83fe16	                           cmp esi, 0x16	        37	exstoren.c	FUNCTION_1
0x4000043	     0xf87d3000000	                            ja 0x400011c	        37	exstoren.c	FUNCTION_1
0x4000049	            0x4154	                                push r12	        37	exstoren.c	FUNCTION_1
0x400004b	              0x55	                                push rbp	        37	exstoren.c	FUNCTION_1
0x400004c	      0xb801000000	                              mov eax, 1	        37	exstoren.c	FUNCTION_1
0x4000051	              0x53	                                push rbx	        37	exstoren.c	FUNCTION_1
0x4000052	              0x51	                                push rcx	        37	exstoren.c	FUNCTION_1
0x4000053	          0x4088f1	                             mov cl, sil	        37	exstoren.c	FUNCTION_1
0x4000056	          0x48d3e0	                             shl rax, cl	        37	exstoren.c	FUNCTION_1
0x4000059	          0x4989d4	                            mov r12, rdx	        37	exstoren.c	FUNCTION_1
0x400005c	            0x89f3	                            mov ebx, esi	        37	exstoren.c	FUNCTION_1
0x400005e	      0xa90e400e00	                       test eax, 0xe400e	        37	exstoren.c	FUNCTION_1
0x4000063	            0x7512	                           jne 0x4000077	        37	exstoren.c	FUNCTION_1
0x4000065	      0xa900006000	                      test eax, 0x600000	        37	exstoren.c	FUNCTION_1
0x400006a	     0xf8589000000	                           jne 0x40000f9	        37	exstoren.c	FUNCTION_1
0x4000070	            0x31c0	                            xor eax, eax	        39	exstoren.c	FUNCTION_1
0x4000072	      0xe99f000000	                           jmp 0x4000116	        39	exstoren.c	FUNCTION_1
0x4000077	          0x488b2f	                    mov rbp, qword [rdi]	        38	exstoren.c	FUNCTION_1
0x400007a	        0x807d0914	                cmp byte [rbp + 9], 0x14	        62	exstoren.c	FUNCTION_1	SWITCH_1	IF_1
0x400007e	            0x740c	                            je 0x400008c	        62	exstoren.c	FUNCTION_1	SWITCH_1	IF_1
0x4000080	    0x6641817c240a	              cmp word [r12 + 0xa], 0x9d	        76	exstoren.c	FUNCTION_1	SWITCH_1	IF_3
0x4000088	            0x7510	                           jne 0x400009a	        76	exstoren.c	FUNCTION_1	SWITCH_1	IF_3
0x400008a	            0xebe4	                           jmp 0x4000070	        76	exstoren.c	FUNCTION_1	SWITCH_1	IF_3
0x400008c	          0x4889d6	                            mov rsi, rdx	        66	exstoren.c	FUNCTION_1	SWITCH_1	IF_1
0x400008f	      0xe800000000	                          call 0x4000094	        66	exstoren.c	FUNCTION_1	SWITCH_1	IF_1
0x4000094	            0x85c0	                           test eax, eax	        69	exstoren.c	FUNCTION_1	SWITCH_1	IF_1	IF_2	CALL_3
0x4000096	            0x74e8	                            je 0x4000080	        69	exstoren.c	FUNCTION_1	SWITCH_1	IF_1	IF_2	CALL_3
0x4000098	            0xeb7c	                           jmp 0x4000116	        69	exstoren.c	FUNCTION_1	SWITCH_1	IF_1	IF_2	CALL_3
0x400009a	          0x8a4509	                  mov al, byte [rbp + 9]	        83	exstoren.c	FUNCTION_1	SWITCH_1	IF_4
0x400009d	            0xffc8	                                 dec eax	        83	exstoren.c	FUNCTION_1	SWITCH_1	IF_4
0x400009f	            0x3c02	                               cmp al, 2	        83	exstoren.c	FUNCTION_1	SWITCH_1	IF_4
0x40000a1	            0x76cd	                           jbe 0x4000070	        83	exstoren.c	FUNCTION_1	SWITCH_1	IF_4
0x40000a3	    0x48b800ff0000	              movabs rax, 0xff000000ff00	        84	exstoren.c	FUNCTION_1	SWITCH_1	IF_4
0x40000ad	        0x48234508	                and rax, qword [rbp + 8]	        84	exstoren.c	FUNCTION_1	SWITCH_1	IF_4
0x40000b1	    0x48ba00140000	               movabs rdx, 0x40000001400	        84	exstoren.c	FUNCTION_1	SWITCH_1	IF_4
0x40000bb	          0x4839d0	                            cmp rax, rdx	        84	exstoren.c	FUNCTION_1	SWITCH_1	IF_4
0x40000be	            0x74b0	                            je 0x4000070	        84	exstoren.c	FUNCTION_1	SWITCH_1	IF_4
0x40000c0	            0x89df	                            mov edi, ebx	        90	exstoren.c	FUNCTION_1	SWITCH_1	IF_4	CALL_4
0x40000c2	      0xe800000000	                          call 0x40000c7	        90	exstoren.c	FUNCTION_1	SWITCH_1	IF_4	CALL_4
0x40000c7	          0x4889ef	                            mov rdi, rbp	        90	exstoren.c	FUNCTION_1	SWITCH_1	IF_4	CALL_4
0x40000ca	        0x48890424	                    mov qword [rsp], rax	        90	exstoren.c	FUNCTION_1	SWITCH_1	IF_4	CALL_4
0x40000ce	      0xe800000000	                          call 0x40000d3	        90	exstoren.c	FUNCTION_1	SWITCH_1	IF_4	CALL_4
0x40000d3	        0x4c8b0424	                     mov r8, qword [rsp]	        90	exstoren.c	FUNCTION_1	SWITCH_1	IF_4	CALL_4
0x40000d7	          0x4889c1	                            mov rcx, rax	        90	exstoren.c	FUNCTION_1	SWITCH_1	IF_4	CALL_4
0x40000da	    0x48c7c2000000	                              mov rdx, 0	        90	exstoren.c	FUNCTION_1	SWITCH_1	IF_4	CALL_4
0x40000e1	      0xbe5d000000	                           mov esi, 0x5d	        90	exstoren.c	FUNCTION_1	SWITCH_1	IF_4	CALL_4
0x40000e6	    0x48c7c7000000	                              mov rdi, 0	        90	exstoren.c	FUNCTION_1	SWITCH_1	IF_4	CALL_4
0x40000ed	      0xe800000000	                          call 0x40000f2	        90	exstoren.c	FUNCTION_1	SWITCH_1	IF_4	CALL_4
0x40000f2	      0xb803300000	                         mov eax, 0x3003	        95	exstoren.c	FUNCTION_1	SWITCH_1	IF_4
0x40000f7	            0xeb1d	                           jmp 0x4000116	        95	exstoren.c	FUNCTION_1	SWITCH_1	IF_4
0x40000f9	    0x48c7c2000000	                              mov rdx, 0	       105	exstoren.c	FUNCTION_1	SWITCH_1	CALL_7
0x4000100	      0xbe69000000	                           mov esi, 0x69	       105	exstoren.c	FUNCTION_1	SWITCH_1	CALL_7
0x4000105	    0x48c7c7000000	                              mov rdi, 0	       105	exstoren.c	FUNCTION_1	SWITCH_1	CALL_7
0x400010c	      0xe800000000	                          call 0x4000111	       105	exstoren.c	FUNCTION_1	SWITCH_1	CALL_7
0x4000111	      0xb80f300000	                         mov eax, 0x300f	       106	exstoren.c	FUNCTION_1	SWITCH_1
0x4000116	              0x5a	                                 pop rdx	       119	exstoren.c	FUNCTION_1
0x4000117	              0x5b	                                 pop rbx	       119	exstoren.c	FUNCTION_1
0x4000118	              0x5d	                                 pop rbp	       119	exstoren.c	FUNCTION_1
0x4000119	            0x415c	                                 pop r12	       119	exstoren.c	FUNCTION_1
0x400011b	              0xc3	                                     ret	       119	exstoren.c	FUNCTION_1
0x400011c	            0x31c0	                            xor eax, eax	        39	exstoren.c	FUNCTION_1
0x400011e	              0xc3	                                     ret	       119	exstoren.c	FUNCTION_1
