e1000_setup_link_82571	CALL,1:IF,1:WHILE,0:FOR,0:ELSE,0:SWITCH,1:functions,0:DO,0	9
0x40006e0	    0x8b87dc000000	            mov eax, dword [rdi + 0xdc] 	      1417	82571.c	FUNCTION_29	SWITCH_1
0x40006e6	          0x83e802	                              sub eax, 2	      1417	82571.c	FUNCTION_29	SWITCH_1
0x40006e9	          0x83f802	                              cmp eax, 2	      1417	82571.c	FUNCTION_29	SWITCH_1
0x40006ec	            0x770c	                            ja 0x40006fa	      1417	82571.c	FUNCTION_29	SWITCH_1
0x40006ee	    0x81bf2c030000	          cmp dword [rdi + 0x32c], 0xff 	      1421	82571.c	FUNCTION_29	SWITCH_1	IF_1
0x40006f8	            0x7405	                            je 0x40006ff	      1421	82571.c	FUNCTION_29	SWITCH_1	IF_1
0x40006fa	      0xe900000000	                           jmp 0x40006ff	      1428	82571.c	FUNCTION_29	CALL_1
0x40006ff	    0xc7872c030000	              mov dword [rdi + 0x32c], 3	      1422	82571.c	FUNCTION_29	SWITCH_1	IF_1
0x4000709	      0xe900000000	                           jmp 0x400070e	      1428	82571.c	FUNCTION_29	CALL_1
e1000_check_mng_mode_82574	CALL,1:IF,0:WHILE,0:FOR,0:ELSE,0:SWITCH,0:functions,0:DO,0	17
0x4000180	        0x4883ec10	                           sub rsp, 0x10	      1338	82571.c	FUNCTION_26
0x4000184	      0xba01000000	                              mov edx, 1	       575	e1000.h	FUNCTION_48	CALL_1
0x4000189	      0xbe0f000000	                            mov esi, 0xf	       575	e1000.h	FUNCTION_48	CALL_1
0x400018e	    0x65488b042528	                mov rax, qword gs:[0x28]	      1338	82571.c	FUNCTION_26
0x4000197	      0x4889442408	                mov qword [rsp + 8], rax	      1338	82571.c	FUNCTION_26
0x400019c	            0x31c0	                            xor eax, eax	      1338	82571.c	FUNCTION_26
0x400019e	      0x488d4c2406	                      lea rcx, [rsp + 6]	       575	e1000.h	FUNCTION_48	CALL_1
0x40001a3	    0x488b87280400	           mov rax, qword [rdi + 0x428] 	       575	e1000.h	FUNCTION_48	CALL_1
0x40001aa	      0xe800000000	                          call 0x40001af	       575	e1000.h	FUNCTION_48	CALL_1
0x40001af	    0x66f744240600	            test word [rsp + 6], 0x6000 	      1342	82571.c	FUNCTION_26
0x40001b6	           0xf95c0	                                setne al	      1342	82571.c	FUNCTION_26
0x40001b9	      0x488b542408	                mov rdx, qword [rsp + 8]	      1343	82571.c	FUNCTION_26
0x40001be	    0x654833142528	                xor rdx, qword gs:[0x28]	      1343	82571.c	FUNCTION_26
0x40001c7	            0x7505	                           jne 0x40001ce	      1343	82571.c	FUNCTION_26
0x40001c9	        0x4883c410	                           add rsp, 0x10	      1343	82571.c	FUNCTION_26
0x40001cd	              0xc3	                                     ret	      1343	82571.c	FUNCTION_26
0x40001ce	      0xe800000000	                          call 0x40001d3	      1343	82571.c	FUNCTION_26
e1000_write_nvm_82571	CALL,2:IF,0:WHILE,0:FOR,0:ELSE,0:SWITCH,1:functions,0:DO,0	58
0x40001e0	    0x448b87dc0000	            mov r8d, dword [rdi + 0xdc] 	       717	82571.c	FUNCTION_16	SWITCH_1
0x40001e7	        0x4183f801	                              cmp r8d, 1	       717	82571.c	FUNCTION_16	SWITCH_1
0x40001eb	     0xf86a3000000	                           jbe 0x4000294	       717	82571.c	FUNCTION_16	SWITCH_1
0x40001f1	        0x4183f804	                              cmp r8d, 4	       717	82571.c	FUNCTION_16	SWITCH_1
0x40001f5	      0xb8ffffffff	                     mov eax, 0xffffffff	       728	82571.c	FUNCTION_16	SWITCH_1
0x40001fa	     0xf8792000000	                            ja 0x4000292	       717	82571.c	FUNCTION_16	SWITCH_1
0x4000200	    0x440fb7877004	          movzx r8d, word [rdi + 0x470] 	       834	82571.c	FUNCTION_19	IF_1
0x4000208	        0x664439c6	                             cmp si, r8w	       834	82571.c	FUNCTION_19	IF_1
0x400020c	     0xf8380000000	                           jae 0x4000292	       834	82571.c	FUNCTION_19	IF_1
0x4000212	            0x4156	                                push r14	       714	82571.c	FUNCTION_16
0x4000214	            0x4155	                                push r13	       714	82571.c	FUNCTION_16
0x4000216	        0x440fb7ea	                          movzx r13d, dx	       834	82571.c	FUNCTION_19	IF_1
0x400021a	            0x4154	                                push r12	       714	82571.c	FUNCTION_16
0x400021c	              0x55	                                push rbp	       714	82571.c	FUNCTION_16
0x400021d	              0x53	                                push rbx	       714	82571.c	FUNCTION_16
0x400021e	           0xfb7de	                           movzx ebx, si	       834	82571.c	FUNCTION_19	IF_1
0x4000221	          0x4129d8	                            sub r8d, ebx	       834	82571.c	FUNCTION_19	IF_1
0x4000224	          0x4539c5	                           cmp r13d, r8d	       834	82571.c	FUNCTION_19	IF_1
0x4000227	            0x7f76	                            jg 0x400029f	       834	82571.c	FUNCTION_19	IF_1
0x4000229	          0x6685d2	                             test dx, dx	       834	82571.c	FUNCTION_19	IF_1
0x400022c	            0x7471	                            je 0x400029f	       834	82571.c	FUNCTION_19	IF_1
0x400022e	          0x4889fd	                            mov rbp, rdi	       834	82571.c	FUNCTION_19	IF_1
0x4000231	          0x4989cc	                            mov r12, rcx	       834	82571.c	FUNCTION_19	IF_1
0x4000234	          0x4101dd	                           add r13d, ebx	       834	82571.c	FUNCTION_19	IF_1
0x4000237	            0xeb2d	                           jmp 0x4000266	       834	82571.c	FUNCTION_19	IF_1
0x4000239	          0x4489f2	                           mov edx, r14d	       849	82571.c	FUNCTION_19	FOR_1	CALL_3
0x400023c	      0xbe2c100000	                         mov esi, 0x102c	       849	82571.c	FUNCTION_19	FOR_1	CALL_3
0x4000241	          0x4889ef	                            mov rdi, rbp	       849	82571.c	FUNCTION_19	FOR_1	CALL_3
0x4000244	      0xe800000000	                          call 0x4000249	       849	82571.c	FUNCTION_19	FOR_1	CALL_3
0x4000249	      0xbe01000000	                              mov esi, 1	       851	82571.c	FUNCTION_19	FOR_1	CALL_4
0x400024e	          0x4889ef	                            mov rdi, rbp	       851	82571.c	FUNCTION_19	FOR_1	CALL_4
0x4000251	      0xe800000000	                          call 0x4000256	       851	82571.c	FUNCTION_19	FOR_1	CALL_4
0x4000256	            0x85c0	                           test eax, eax	       852	82571.c	FUNCTION_19	FOR_1	IF_3
0x4000258	            0x7530	                           jne 0x400028a	       852	82571.c	FUNCTION_19	FOR_1	IF_3
0x400025a	          0x83c301	                              add ebx, 1	       852	82571.c	FUNCTION_19	FOR_1	IF_3
0x400025d	        0x4983c402	                              add r12, 2	       852	82571.c	FUNCTION_19	FOR_1	IF_3
0x4000261	          0x4139dd	                           cmp r13d, ebx	       840	82571.c	FUNCTION_19	FOR_1
0x4000264	            0x7424	                            je 0x400028a	       840	82571.c	FUNCTION_19	FOR_1
0x4000266	      0x410fb70424	                   movzx eax, word [r12]	       841	82571.c	FUNCTION_19	FOR_1
0x400026b	    0x448d349d0100	                   lea r14d, [rbx*4 + 1]	       841	82571.c	FUNCTION_19	FOR_1
0x4000273	      0xbe01000000	                              mov esi, 1	       845	82571.c	FUNCTION_19	FOR_1	CALL_2
0x4000278	          0x4889ef	                            mov rdi, rbp	       845	82571.c	FUNCTION_19	FOR_1	CALL_2
0x400027b	          0xc1e010	                           shl eax, 0x10	       841	82571.c	FUNCTION_19	FOR_1
0x400027e	          0x4109c6	                            or r14d, eax	       841	82571.c	FUNCTION_19	FOR_1
0x4000281	      0xe800000000	                          call 0x4000286	       845	82571.c	FUNCTION_19	FOR_1	CALL_2
0x4000286	            0x85c0	                           test eax, eax	       846	82571.c	FUNCTION_19	FOR_1	IF_2
0x4000288	            0x74af	                            je 0x4000239	       846	82571.c	FUNCTION_19	FOR_1	IF_2
0x400028a	              0x5b	                                 pop rbx	       733	82571.c	FUNCTION_16
0x400028b	              0x5d	                                 pop rbp	       733	82571.c	FUNCTION_16
0x400028c	            0x415c	                                 pop r12	       733	82571.c	FUNCTION_16
0x400028e	            0x415d	                                 pop r13	       733	82571.c	FUNCTION_16
0x4000290	            0x415e	                                 pop r14	       733	82571.c	FUNCTION_16
0x4000292	            0xf3c3	                                     ret	       733	82571.c	FUNCTION_16
0x4000294	           0xfb7d2	                           movzx edx, dx	       725	82571.c	FUNCTION_16	SWITCH_1	CALL_2
0x4000297	           0xfb7f6	                           movzx esi, si	       725	82571.c	FUNCTION_16	SWITCH_1	CALL_2
0x400029a	      0xe900000000	                           jmp 0x400029f	       725	82571.c	FUNCTION_16	SWITCH_1	CALL_2
0x400029f	      0xb8ffffffff	                     mov eax, 0xffffffff	       837	82571.c	FUNCTION_19	IF_1
0x40002a4	            0xebe4	                           jmp 0x400028a	       837	82571.c	FUNCTION_19	IF_1
e1000_set_d0_lplu_state_82571	CALL,9:IF,11:WHILE,0:FOR,0:ELSE,2:SWITCH,0:functions,0:DO,0	80
0x4000040	            0x4154	                                push r12	       895	82571.c	FUNCTION_21
0x4000042	              0x55	                                push rbp	       895	82571.c	FUNCTION_21
0x4000043	          0x4189f4	                           mov r12d, esi	       895	82571.c	FUNCTION_21
0x4000046	              0x53	                                push rbx	       895	82571.c	FUNCTION_21
0x4000047	      0xbe19000000	                           mov esi, 0x19	       534	e1000.h	FUNCTION_41	CALL_1
0x400004c	          0x4889fb	                            mov rbx, rdi	       895	82571.c	FUNCTION_21
0x400004f	        0x4883ec10	                           sub rsp, 0x10	       895	82571.c	FUNCTION_21
0x4000053	    0x65488b042528	                mov rax, qword gs:[0x28]	       895	82571.c	FUNCTION_21
0x400005c	      0x4889442408	                mov qword [rsp + 8], rax	       895	82571.c	FUNCTION_21
0x4000061	            0x31c0	                            xor eax, eax	       895	82571.c	FUNCTION_21
0x4000063	      0x488d542406	                      lea rdx, [rsp + 6]	       534	e1000.h	FUNCTION_41	CALL_1
0x4000068	    0x488b87800300	           mov rax, qword [rdi + 0x380] 	       534	e1000.h	FUNCTION_41	CALL_1
0x400006f	      0xe800000000	                          call 0x4000074	       534	e1000.h	FUNCTION_41	CALL_1
0x4000074	            0x85c0	                           test eax, eax	       901	82571.c	FUNCTION_21	IF_1
0x4000076	            0x89c5	                            mov ebp, eax	       534	e1000.h	FUNCTION_41	CALL_1
0x4000078	            0x753d	                           jne 0x40000b7	       901	82571.c	FUNCTION_21	IF_1
0x400007a	          0x4584e4	                         test r12b, r12b	       904	82571.c	FUNCTION_21	IF_2
0x400007d	       0xfb7542406	               movzx edx, word [rsp + 6]	       905	82571.c	FUNCTION_21	IF_2
0x4000082	            0x7552	                           jne 0x40000d6	       904	82571.c	FUNCTION_21	IF_2
0x4000084	          0x83e2fd	                     and edx, 0xfffffffd	       919	82571.c	FUNCTION_21	ELSE_1
0x4000087	    0x488b83b80300	           mov rax, qword [rbx + 0x3b8] 	       544	e1000.h	FUNCTION_43	CALL_1
0x400008e	      0xbe19000000	                           mov esi, 0x19	       544	e1000.h	FUNCTION_43	CALL_1
0x4000093	      0x6689542406	                  mov word [rsp + 6], dx	       919	82571.c	FUNCTION_21	ELSE_1
0x4000098	          0x4889df	                            mov rdi, rbx	       544	e1000.h	FUNCTION_43	CALL_1
0x400009b	           0xfb7d2	                           movzx edx, dx	       544	e1000.h	FUNCTION_43	CALL_1
0x400009e	      0xe800000000	                          call 0x40000a3	       544	e1000.h	FUNCTION_43	CALL_1
0x40000a3	    0x8b83f8030000	           mov eax, dword [rbx + 0x3f8] 	       926	82571.c	FUNCTION_21	ELSE_1	IF_6
0x40000a9	          0x83f801	                              cmp eax, 1	       926	82571.c	FUNCTION_21	ELSE_1	IF_6
0x40000ac	     0xf8493000000	                            je 0x4000145	       926	82571.c	FUNCTION_21	ELSE_1	IF_6
0x40000b2	          0x83f802	                              cmp eax, 2	       937	82571.c	FUNCTION_21	ELSE_1	ELSE_2	IF_9
0x40000b5	            0x7444	                            je 0x40000fb	       937	82571.c	FUNCTION_21	ELSE_1	ELSE_2	IF_9
0x40000b7	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       952	82571.c	FUNCTION_21
0x40000bc	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       952	82571.c	FUNCTION_21
0x40000c5	            0x89e8	                            mov eax, ebp	       952	82571.c	FUNCTION_21
0x40000c7	     0xf85a5000000	                           jne 0x4000172	       952	82571.c	FUNCTION_21
0x40000cd	        0x4883c410	                           add rsp, 0x10	       952	82571.c	FUNCTION_21
0x40000d1	              0x5b	                                 pop rbx	       952	82571.c	FUNCTION_21
0x40000d2	              0x5d	                                 pop rbp	       952	82571.c	FUNCTION_21
0x40000d3	            0x415c	                                 pop r12	       952	82571.c	FUNCTION_21
0x40000d5	              0xc3	                                     ret	       952	82571.c	FUNCTION_21
0x40000d6	          0x83ca02	                               or edx, 2	       905	82571.c	FUNCTION_21	IF_2
0x40000d9	    0x488b83b80300	           mov rax, qword [rbx + 0x3b8] 	       544	e1000.h	FUNCTION_43	CALL_1
0x40000e0	      0xbe19000000	                           mov esi, 0x19	       544	e1000.h	FUNCTION_43	CALL_1
0x40000e5	      0x6689542406	                  mov word [rsp + 6], dx	       905	82571.c	FUNCTION_21	IF_2
0x40000ea	          0x4889df	                            mov rdi, rbx	       544	e1000.h	FUNCTION_43	CALL_1
0x40000ed	           0xfb7d2	                           movzx edx, dx	       544	e1000.h	FUNCTION_43	CALL_1
0x40000f0	      0xe800000000	                          call 0x40000f5	       544	e1000.h	FUNCTION_43	CALL_1
0x40000f5	            0x85c0	                           test eax, eax	       907	82571.c	FUNCTION_21	IF_2	IF_3
0x40000f7	            0x89c5	                            mov ebp, eax	       544	e1000.h	FUNCTION_43	CALL_1
0x40000f9	            0x75bc	                           jne 0x40000b7	       907	82571.c	FUNCTION_21	IF_2	IF_3
0x40000fb	    0x488b83800300	           mov rax, qword [rbx + 0x380] 	       534	e1000.h	FUNCTION_41	CALL_1
0x4000102	      0x488d542406	                      lea rdx, [rsp + 6]	       534	e1000.h	FUNCTION_41	CALL_1
0x4000107	      0xbe10000000	                           mov esi, 0x10	       534	e1000.h	FUNCTION_41	CALL_1
0x400010c	          0x4889df	                            mov rdi, rbx	       534	e1000.h	FUNCTION_41	CALL_1
0x400010f	      0xe800000000	                          call 0x4000114	       534	e1000.h	FUNCTION_41	CALL_1
0x4000114	            0x85c0	                           test eax, eax	       940	82571.c	FUNCTION_21	ELSE_1	ELSE_2	IF_9	IF_10
0x4000116	            0x89c5	                            mov ebp, eax	       534	e1000.h	FUNCTION_41	CALL_1
0x4000118	            0x759d	                           jne 0x40000b7	       940	82571.c	FUNCTION_21	ELSE_1	ELSE_2	IF_9	IF_10
0x400011a	       0xfb7542406	               movzx edx, word [rsp + 6]	       943	82571.c	FUNCTION_21	ELSE_1	ELSE_2	IF_9
0x400011f	          0x80e27f	                            and dl, 0x7f	       943	82571.c	FUNCTION_21	ELSE_1	ELSE_2	IF_9
0x4000122	      0x6689542406	                  mov word [rsp + 6], dx	       943	82571.c	FUNCTION_21	ELSE_1	ELSE_2	IF_9
0x4000127	    0x488b83b80300	           mov rax, qword [rbx + 0x3b8] 	       544	e1000.h	FUNCTION_43	CALL_1
0x400012e	           0xfb7d2	                           movzx edx, dx	       544	e1000.h	FUNCTION_43	CALL_1
0x4000131	      0xbe10000000	                           mov esi, 0x10	       544	e1000.h	FUNCTION_43	CALL_1
0x4000136	          0x4889df	                            mov rdi, rbx	       544	e1000.h	FUNCTION_43	CALL_1
0x4000139	      0xe800000000	                          call 0x400013e	       544	e1000.h	FUNCTION_43	CALL_1
0x400013e	            0x89c5	                            mov ebp, eax	       544	e1000.h	FUNCTION_43	CALL_1
0x4000140	      0xe972ffffff	                           jmp 0x40000b7	       544	e1000.h	FUNCTION_43	CALL_1
0x4000145	    0x488b83800300	           mov rax, qword [rbx + 0x380] 	       534	e1000.h	FUNCTION_41	CALL_1
0x400014c	      0x488d542406	                      lea rdx, [rsp + 6]	       534	e1000.h	FUNCTION_41	CALL_1
0x4000151	      0xbe10000000	                           mov esi, 0x10	       534	e1000.h	FUNCTION_41	CALL_1
0x4000156	          0x4889df	                            mov rdi, rbx	       534	e1000.h	FUNCTION_41	CALL_1
0x4000159	      0xe800000000	                          call 0x400015e	       534	e1000.h	FUNCTION_41	CALL_1
0x400015e	            0x85c0	                           test eax, eax	       929	82571.c	FUNCTION_21	ELSE_1	IF_6	IF_7
0x4000160	            0x89c5	                            mov ebp, eax	       534	e1000.h	FUNCTION_41	CALL_1
0x4000162	     0xf854fffffff	                           jne 0x40000b7	       929	82571.c	FUNCTION_21	ELSE_1	IF_6	IF_7
0x4000168	       0xfb7542406	               movzx edx, word [rsp + 6]	       932	82571.c	FUNCTION_21	ELSE_1	IF_6
0x400016d	          0x80ca80	                             or dl, 0x80	       932	82571.c	FUNCTION_21	ELSE_1	IF_6
0x4000170	            0xebb0	                           jmp 0x4000122	       932	82571.c	FUNCTION_21	ELSE_1	IF_6
0x4000172	      0xe800000000	                          call 0x4000177	       952	82571.c	FUNCTION_21
e1000_validate_nvm_checksum_82571	CALL,2:IF,1:WHILE,0:FOR,0:ELSE,0:SWITCH,0:functions,0:DO,0	51
0x4000430	              0x53	                                push rbx	       803	82571.c	FUNCTION_18
0x4000431	          0x4889fb	                            mov rbx, rdi	       803	82571.c	FUNCTION_18
0x4000434	        0x4883ec10	                           sub rsp, 0x10	       803	82571.c	FUNCTION_18
0x4000438	    0x65488b042528	                mov rax, qword gs:[0x28]	       803	82571.c	FUNCTION_18
0x4000441	      0x4889442408	                mov qword [rsp + 8], rax	       803	82571.c	FUNCTION_18
0x4000446	            0x31c0	                            xor eax, eax	       803	82571.c	FUNCTION_18
0x4000448	    0x83bf60040000	              cmp dword [rdi + 0x460], 3	       804	82571.c	FUNCTION_18	IF_1
0x400044f	            0x7422	                            je 0x4000473	       804	82571.c	FUNCTION_18	IF_1
0x4000451	          0x4889df	                            mov rdi, rbx	       807	82571.c	FUNCTION_18	CALL_2
0x4000454	      0xe800000000	                          call 0x4000459	       807	82571.c	FUNCTION_18	CALL_2
0x4000459	      0x488b542408	                mov rdx, qword [rsp + 8]	       808	82571.c	FUNCTION_18
0x400045e	    0x654833142528	                xor rdx, qword gs:[0x28]	       808	82571.c	FUNCTION_18
0x4000467	     0xf859b000000	                           jne 0x4000508	       808	82571.c	FUNCTION_18
0x400046d	        0x4883c410	                           add rsp, 0x10	       808	82571.c	FUNCTION_18
0x4000471	              0x5b	                                 pop rbx	       808	82571.c	FUNCTION_18
0x4000472	              0xc3	                                     ret	       808	82571.c	FUNCTION_18
0x4000473	    0x488b87280400	           mov rax, qword [rdi + 0x428] 	       575	e1000.h	FUNCTION_48	CALL_1
0x400047a	      0x488d4c2406	                      lea rcx, [rsp + 6]	       575	e1000.h	FUNCTION_48	CALL_1
0x400047f	      0xba01000000	                              mov edx, 1	       575	e1000.h	FUNCTION_48	CALL_1
0x4000484	      0xbe10000000	                           mov esi, 0x10	       575	e1000.h	FUNCTION_48	CALL_1
0x4000489	      0xe800000000	                          call 0x400048e	       575	e1000.h	FUNCTION_48	CALL_1
0x400048e	            0x85c0	                           test eax, eax	      1758	82571.c	FUNCTION_36	IF_2
0x4000490	            0x75bf	                           jne 0x4000451	      1758	82571.c	FUNCTION_36	IF_2
0x4000492	      0xf644240610	               test byte [rsp + 6], 0x10	      1761	82571.c	FUNCTION_36	IF_3
0x4000497	            0x75b8	                           jne 0x4000451	      1761	82571.c	FUNCTION_36	IF_3
0x4000499	    0x488b83280400	           mov rax, qword [rbx + 0x428] 	       575	e1000.h	FUNCTION_48	CALL_1
0x40004a0	      0x488d4c2406	                      lea rcx, [rsp + 6]	       575	e1000.h	FUNCTION_48	CALL_1
0x40004a5	      0xba01000000	                              mov edx, 1	       575	e1000.h	FUNCTION_48	CALL_1
0x40004aa	      0xbe23000000	                           mov esi, 0x23	       575	e1000.h	FUNCTION_48	CALL_1
0x40004af	          0x4889df	                            mov rdi, rbx	       575	e1000.h	FUNCTION_48	CALL_1
0x40004b2	      0xe800000000	                          call 0x40004b7	       575	e1000.h	FUNCTION_48	CALL_1
0x40004b7	            0x85c0	                           test eax, eax	      1770	82571.c	FUNCTION_36	IF_3	IF_4
0x40004b9	            0x7596	                           jne 0x4000451	      1770	82571.c	FUNCTION_36	IF_3	IF_4
0x40004bb	       0xfb7442406	               movzx eax, word [rsp + 6]	      1773	82571.c	FUNCTION_36	IF_3	IF_5
0x40004c0	          0x6685c0	                             test ax, ax	      1773	82571.c	FUNCTION_36	IF_3	IF_5
0x40004c3	            0x788c	                            js 0x4000451	      1773	82571.c	FUNCTION_36	IF_3	IF_5
0x40004c5	        0x660d0080	                           or ax, 0x8000	      1774	82571.c	FUNCTION_36	IF_3	IF_5
0x40004c9	      0x488d4c2406	                      lea rcx, [rsp + 6]	       581	e1000.h	FUNCTION_49	CALL_1
0x40004ce	      0xba01000000	                              mov edx, 1	       581	e1000.h	FUNCTION_49	CALL_1
0x40004d3	      0x6689442406	                  mov word [rsp + 6], ax	      1774	82571.c	FUNCTION_36	IF_3	IF_5
0x40004d8	      0xbe23000000	                           mov esi, 0x23	       581	e1000.h	FUNCTION_49	CALL_1
0x40004dd	    0x488b83580400	           mov rax, qword [rbx + 0x458] 	       581	e1000.h	FUNCTION_49	CALL_1
0x40004e4	          0x4889df	                            mov rdi, rbx	       581	e1000.h	FUNCTION_49	CALL_1
0x40004e7	      0xe800000000	                          call 0x40004ec	       581	e1000.h	FUNCTION_49	CALL_1
0x40004ec	            0x85c0	                           test eax, eax	      1776	82571.c	FUNCTION_36	IF_3	IF_5	IF_6
0x40004ee	     0xf855dffffff	                           jne 0x4000451	      1776	82571.c	FUNCTION_36	IF_3	IF_5	IF_6
0x40004f4	    0x488b83400400	           mov rax, qword [rbx + 0x440] 	       569	e1000.h	FUNCTION_47	CALL_1
0x40004fb	          0x4889df	                            mov rdi, rbx	       569	e1000.h	FUNCTION_47	CALL_1
0x40004fe	      0xe800000000	                          call 0x4000503	       569	e1000.h	FUNCTION_47	CALL_1
0x4000503	      0xe949ffffff	                           jmp 0x4000451	       569	e1000.h	FUNCTION_47	CALL_1
0x4000508	      0xe800000000	                          call 0x400050d	       808	82571.c	FUNCTION_18
e1000_read_mac_addr_82571	CALL,2:IF,2:WHILE,0:FOR,0:ELSE,0:SWITCH,0:functions,0:DO,0	13
0x40006b0	              0x53	                                push rbx	      1792	82571.c	FUNCTION_37
0x40006b1	    0x8b87dc000000	            mov eax, dword [rdi + 0xdc] 	      1793	82571.c	FUNCTION_37	IF_1
0x40006b7	          0x4889fb	                            mov rbx, rdi	      1792	82571.c	FUNCTION_37
0x40006ba	            0x85c0	                           test eax, eax	      1793	82571.c	FUNCTION_37	IF_1
0x40006bc	            0x7509	                           jne 0x40006c7	      1793	82571.c	FUNCTION_37	IF_1
0x40006be	      0xe800000000	                          call 0x40006c3	      1800	82571.c	FUNCTION_37	IF_1	CALL_1
0x40006c3	            0x85c0	                           test eax, eax	      1801	82571.c	FUNCTION_37	IF_1	IF_2
0x40006c5	            0x7509	                           jne 0x40006d0	      1801	82571.c	FUNCTION_37	IF_1	IF_2
0x40006c7	          0x4889df	                            mov rdi, rbx	      1805	82571.c	FUNCTION_37	CALL_2
0x40006ca	              0x5b	                                 pop rbx	      1806	82571.c	FUNCTION_37
0x40006cb	      0xe900000000	                           jmp 0x40006d0	      1805	82571.c	FUNCTION_37	CALL_2
0x40006d0	              0x5b	                                 pop rbx	      1806	82571.c	FUNCTION_37
0x40006d1	              0xc3	                                     ret	      1806	82571.c	FUNCTION_37
e1000_setup_fiber_serdes_link_82571	CALL,2:IF,0:WHILE,0:FOR,0:ELSE,0:SWITCH,1:functions,0:DO,0	10
0x4000db0	              0x53	                                push rbx	      1475	82571.c	FUNCTION_31
0x4000db1	    0x83bfdc000000	               cmp dword [rdi + 0xdc], 1	      1476	82571.c	FUNCTION_31	SWITCH_1
0x4000db8	          0x4889fb	                            mov rbx, rdi	      1475	82571.c	FUNCTION_31
0x4000dbb	            0x770f	                            ja 0x4000dcc	      1476	82571.c	FUNCTION_31	SWITCH_1
0x4000dbd	      0xba00040000	                          mov edx, 0x400	      1485	82571.c	FUNCTION_31	SWITCH_1	CALL_1
0x4000dc2	      0xbe24000000	                           mov esi, 0x24	      1485	82571.c	FUNCTION_31	SWITCH_1	CALL_1
0x4000dc7	      0xe800000000	                          call 0x4000dcc	      1485	82571.c	FUNCTION_31	SWITCH_1	CALL_1
0x4000dcc	          0x4889df	                            mov rdi, rbx	      1491	82571.c	FUNCTION_31	CALL_2
0x4000dcf	              0x5b	                                 pop rbx	      1492	82571.c	FUNCTION_31
0x4000dd0	      0xe900000000	                           jmp 0x4000dd5	      1491	82571.c	FUNCTION_31	CALL_2
e1000_check_phy_82574	CALL,2:IF,4:WHILE,0:FOR,0:ELSE,0:SWITCH,0:functions,0:DO,0	37
0x4001910	              0x53	                                push rbx	      1378	82571.c	FUNCTION_28
0x4001911	            0x31d2	                            xor edx, edx	      1380	82571.c	FUNCTION_28
0x4001913	          0x4889fb	                            mov rbx, rdi	      1378	82571.c	FUNCTION_28
0x4001916	      0xbe15000000	                           mov esi, 0x15	       534	e1000.h	FUNCTION_41	CALL_1
0x400191b	        0x4883ec10	                           sub rsp, 0x10	      1378	82571.c	FUNCTION_28
0x400191f	    0x65488b042528	                mov rax, qword gs:[0x28]	      1378	82571.c	FUNCTION_28
0x4001928	      0x4889442408	                mov qword [rsp + 8], rax	      1378	82571.c	FUNCTION_28
0x400192d	            0x31c0	                            xor eax, eax	      1378	82571.c	FUNCTION_28
0x400192f	            0x31c0	                            xor eax, eax	      1379	82571.c	FUNCTION_28
0x4001931	      0x6689542406	                  mov word [rsp + 6], dx	      1380	82571.c	FUNCTION_28
0x4001936	      0x488d542406	                      lea rdx, [rsp + 6]	       534	e1000.h	FUNCTION_41	CALL_1
0x400193b	      0x6689442404	                  mov word [rsp + 4], ax	      1379	82571.c	FUNCTION_28
0x4001940	    0x488b87800300	           mov rax, qword [rdi + 0x380] 	       534	e1000.h	FUNCTION_41	CALL_1
0x4001947	      0xe800000000	                          call 0x400194c	       534	e1000.h	FUNCTION_41	CALL_1
0x400194c	            0x85c0	                           test eax, eax	      1387	82571.c	FUNCTION_28	IF_1
0x400194e	            0x7508	                           jne 0x4001958	      1387	82571.c	FUNCTION_28	IF_1
0x4001950	    0x66837c2406ff	  cmp word [rsp + 6], 0xffffffffffffffff	      1389	82571.c	FUNCTION_28	IF_2
0x4001956	            0x7418	                            je 0x4001970	      1389	82571.c	FUNCTION_28	IF_2
0x4001958	            0x31c0	                            xor eax, eax	      1388	82571.c	FUNCTION_28	IF_1
0x400195a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1399	82571.c	FUNCTION_28
0x400195f	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      1399	82571.c	FUNCTION_28
0x4001968	            0x7531	                           jne 0x400199b	      1399	82571.c	FUNCTION_28
0x400196a	        0x4883c410	                           add rsp, 0x10	      1399	82571.c	FUNCTION_28
0x400196e	              0x5b	                                 pop rbx	      1399	82571.c	FUNCTION_28
0x400196f	              0xc3	                                     ret	      1399	82571.c	FUNCTION_28
0x4001970	    0x488b83800300	           mov rax, qword [rbx + 0x380] 	       534	e1000.h	FUNCTION_41	CALL_1
0x4001977	      0x488d542404	                      lea rdx, [rsp + 4]	       534	e1000.h	FUNCTION_41	CALL_1
0x400197c	      0xbe0a000000	                            mov esi, 0xa	       534	e1000.h	FUNCTION_41	CALL_1
0x4001981	          0x4889df	                            mov rdi, rbx	       534	e1000.h	FUNCTION_41	CALL_1
0x4001984	      0xe800000000	                          call 0x4001989	       534	e1000.h	FUNCTION_41	CALL_1
0x4001989	            0x85c0	                           test eax, eax	      1391	82571.c	FUNCTION_28	IF_2	IF_3
0x400198b	            0x75cb	                           jne 0x4001958	      1391	82571.c	FUNCTION_28	IF_2	IF_3
0x400198d	       0xfb6442404	               movzx eax, byte [rsp + 4]	      1393	82571.c	FUNCTION_28	IF_2	IF_4
0x4001992	        0x663dff00	                            cmp ax, 0xff	      1393	82571.c	FUNCTION_28	IF_2	IF_4
0x4001996	           0xf94c0	                                 sete al	      1393	82571.c	FUNCTION_28	IF_2	IF_4
0x4001999	            0xebbf	                           jmp 0x400195a	      1393	82571.c	FUNCTION_28	IF_2	IF_4
0x400199b	      0xe800000000	     call sym.e1000e_get_laa_state_82571	      1399	82571.c	FUNCTION_28
e1000_get_hw_semaphore_82574	CALL,3:IF,1:WHILE,0:FOR,0:ELSE,0:SWITCH,0:functions,0:DO,0	16
0x4001690	              0x53	                                push rbx	       582	82571.c	FUNCTION_10
0x4001691	          0x4889fb	                            mov rbx, rdi	       582	82571.c	FUNCTION_10
0x4001694	    0x48c7c7000000	                              mov rdi, 0	       585	82571.c	FUNCTION_10	CALL_1
0x400169b	        0x4883ec08	                              sub rsp, 8	       582	82571.c	FUNCTION_10
0x400169f	      0xe800000000	                          call 0x40016a4	       585	82571.c	FUNCTION_10	CALL_1
0x40016a4	          0x4889df	                            mov rdi, rbx	       586	82571.c	FUNCTION_10	CALL_2
0x40016a7	      0xe864ffffff	   call sym.e1000_get_hw_semaphore_82573	       586	82571.c	FUNCTION_10	CALL_2
0x40016ac	            0x85c0	                           test eax, eax	       587	82571.c	FUNCTION_10	IF_1
0x40016ae	            0x7414	                            je 0x40016c4	       587	82571.c	FUNCTION_10	IF_1
0x40016b0	    0x48c7c7000000	                              mov rdi, 0	       588	82571.c	FUNCTION_10	CALL_3
0x40016b7	        0x89442404	                mov dword [rsp + 4], eax	       588	82571.c	FUNCTION_10	CALL_3
0x40016bb	      0xe800000000	                          call 0x40016c0	       588	82571.c	FUNCTION_10	CALL_3
0x40016c0	        0x8b442404	                mov eax, dword [rsp + 4]	       588	82571.c	FUNCTION_10	CALL_3
0x40016c4	        0x4883c408	                              add rsp, 8	       590	82571.c	FUNCTION_10
0x40016c8	              0x5b	                                 pop rbx	       590	82571.c	FUNCTION_10
0x40016c9	              0xc3	                                     ret	       590	82571.c	FUNCTION_10
