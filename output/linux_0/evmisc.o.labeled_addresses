acpi_ev_terminate	CALL,15:ELSE,0:SWITCH,0:DO,0:FOR,1:functions,0:IF,6:WHILE,0	50
0x4000176	    0x803d00000000	                cmp byte [0x0400017d], 0	       213	evmisc.c	FUNCTION_4	IF_1
0x400017d	              0x53	                                push rbx	       207	evmisc.c	FUNCTION_4
0x400017e	            0x7466	                            je 0x40001e6	       213	evmisc.c	FUNCTION_4	IF_1
0x4000180	            0x31db	                            xor ebx, ebx	       213	evmisc.c	FUNCTION_4	IF_1
0x4000182	            0x31f6	                            xor esi, esi	       222	evmisc.c	FUNCTION_4	IF_1	FOR_1	CALL_2
0x4000184	            0x89df	                            mov edi, ebx	       222	evmisc.c	FUNCTION_4	IF_1	FOR_1	CALL_2
0x4000186	      0xe800000000	                          call 0x400018b	       222	evmisc.c	FUNCTION_4	IF_1	FOR_1	CALL_2
0x400018b	            0x85c0	                           test eax, eax	       223	evmisc.c	FUNCTION_4	IF_1	FOR_1	IF_2	CALL_3
0x400018d	            0x741a	                            je 0x40001a9	       223	evmisc.c	FUNCTION_4	IF_1	FOR_1	IF_2	CALL_3
0x400018f	            0x89d9	                            mov ecx, ebx	       224	evmisc.c	FUNCTION_4	IF_1	FOR_1	IF_2	CALL_4
0x4000191	    0x48c7c2000000	                              mov rdx, 0	       224	evmisc.c	FUNCTION_4	IF_1	FOR_1	IF_2	CALL_4
0x4000198	      0xbee2000000	                           mov esi, 0xe2	       224	evmisc.c	FUNCTION_4	IF_1	FOR_1	IF_2	CALL_4
0x400019d	    0x48c7c7000000	                              mov rdi, 0	       224	evmisc.c	FUNCTION_4	IF_1	FOR_1	IF_2	CALL_4
0x40001a4	      0xe800000000	                          call 0x40001a9	       224	evmisc.c	FUNCTION_4	IF_1	FOR_1	IF_2	CALL_4
0x40001a9	            0xffc3	                                 inc ebx	       221	evmisc.c	FUNCTION_4	IF_1	FOR_1
0x40001ab	          0x83fb05	                              cmp ebx, 5	       221	evmisc.c	FUNCTION_4	IF_1	FOR_1
0x40001ae	            0x75d2	                           jne 0x4000182	       221	evmisc.c	FUNCTION_4	IF_1	FOR_1
0x40001b0	            0x31f6	                            xor esi, esi	       232	evmisc.c	FUNCTION_4	IF_1	CALL_5
0x40001b2	    0x48c7c7000000	                              mov rdi, 0	       232	evmisc.c	FUNCTION_4	IF_1	CALL_5
0x40001b9	      0xe800000000	                          call 0x40001be	       232	evmisc.c	FUNCTION_4	IF_1	CALL_5
0x40001be	      0xe800000000	                          call 0x40001c3	       234	evmisc.c	FUNCTION_4	IF_1	CALL_6
0x40001c3	            0x85c0	                           test eax, eax	       235	evmisc.c	FUNCTION_4	IF_1	IF_3	CALL_7
0x40001c5	            0x7418	                            je 0x40001df	       235	evmisc.c	FUNCTION_4	IF_1	IF_3	CALL_7
0x40001c7	    0x48c7c2000000	                              mov rdx, 0	       236	evmisc.c	FUNCTION_4	IF_1	IF_3	CALL_8
0x40001ce	      0xbeed000000	                           mov esi, 0xed	       236	evmisc.c	FUNCTION_4	IF_1	IF_3	CALL_8
0x40001d3	    0x48c7c7000000	                              mov rdi, 0	       236	evmisc.c	FUNCTION_4	IF_1	IF_3	CALL_8
0x40001da	      0xe800000000	                          call 0x40001df	       236	evmisc.c	FUNCTION_4	IF_1	IF_3	CALL_8
0x40001df	    0xc60500000000	                mov byte [0x040001e6], 0	       240	evmisc.c	FUNCTION_4	IF_1
0x40001e6	      0xe800000000	                          call 0x40001eb	       245	evmisc.c	FUNCTION_4	CALL_9
0x40001eb	            0x85c0	                           test eax, eax	       246	evmisc.c	FUNCTION_4	IF_4	CALL_10
0x40001ed	            0x7418	                            je 0x4000207	       246	evmisc.c	FUNCTION_4	IF_4	CALL_10
0x40001ef	    0x48c7c2000000	                              mov rdx, 0	       247	evmisc.c	FUNCTION_4	IF_4	CALL_11
0x40001f6	      0xbef7000000	                           mov esi, 0xf7	       247	evmisc.c	FUNCTION_4	IF_4	CALL_11
0x40001fb	    0x48c7c7000000	                              mov rdi, 0	       247	evmisc.c	FUNCTION_4	IF_4	CALL_11
0x4000202	      0xe800000000	                          call 0x4000207	       247	evmisc.c	FUNCTION_4	IF_4	CALL_11
0x4000207	            0x31f6	                            xor esi, esi	       252	evmisc.c	FUNCTION_4	CALL_12
0x4000209	    0x48c7c7000000	                              mov rdi, 0	       252	evmisc.c	FUNCTION_4	CALL_12
0x4000210	      0xe800000000	                          call 0x4000215	       252	evmisc.c	FUNCTION_4	CALL_12
0x4000215	    0x833d00000000	               cmp dword [0x0400021c], 2	       256	evmisc.c	FUNCTION_4	IF_5
0x400021c	            0x7522	                           jne 0x4000240	       256	evmisc.c	FUNCTION_4	IF_5
0x400021e	      0xe800000000	                          call 0x4000223	       257	evmisc.c	FUNCTION_4	IF_5	CALL_13
0x4000223	            0x85c0	                           test eax, eax	       258	evmisc.c	FUNCTION_4	IF_5	IF_6	CALL_14
0x4000225	            0x7419	                            je 0x4000240	       258	evmisc.c	FUNCTION_4	IF_5	IF_6	CALL_14
0x4000227	              0x5b	                                 pop rbx	       263	evmisc.c	FUNCTION_4
0x4000228	    0x48c7c2000000	                              mov rdx, 0	       259	evmisc.c	FUNCTION_4	IF_5	IF_6	CALL_15
0x400022f	      0xbe03010000	                          mov esi, 0x103	       259	evmisc.c	FUNCTION_4	IF_5	IF_6	CALL_15
0x4000234	    0x48c7c7000000	                              mov rdi, 0	       259	evmisc.c	FUNCTION_4	IF_5	IF_6	CALL_15
0x400023b	      0xe900000000	                           jmp 0x4000240	       259	evmisc.c	FUNCTION_4	IF_5	IF_6	CALL_15
0x4000240	              0x5b	                                 pop rbx	       263	evmisc.c	FUNCTION_4
0x4000241	              0xc3	                                     ret	       263	evmisc.c	FUNCTION_4
acpi_ev_is_notify_object	CALL,0:ELSE,0:SWITCH,1:DO,0:FOR,0:functions,0:IF,0:WHILE,0	9
0x4000095	          0x8a4f09	                  mov cl, byte [rdi + 9]	        38	evmisc.c	FUNCTION_1	SWITCH_1
0x4000098	            0x31c0	                            xor eax, eax	        49	evmisc.c	FUNCTION_1	SWITCH_1
0x400009a	          0x80f90d	                             cmp cl, 0xd	        49	evmisc.c	FUNCTION_1	SWITCH_1
0x400009d	            0x7710	                            ja 0x40000af	        49	evmisc.c	FUNCTION_1	SWITCH_1
0x400009f	      0xb801000000	                              mov eax, 1	        45	evmisc.c	FUNCTION_1	SWITCH_1
0x40000a4	          0x48d3e0	                             shl rax, cl	        45	evmisc.c	FUNCTION_1	SWITCH_1
0x40000a7	      0xa940300000	                        test eax, 0x3040	        45	evmisc.c	FUNCTION_1	SWITCH_1
0x40000ac	           0xf95c0	                                setne al	        45	evmisc.c	FUNCTION_1	SWITCH_1
0x40000af	              0xc3	                                     ret	        51	evmisc.c	FUNCTION_1
acpi_ev_notify_dispatch	CALL,4:ELSE,0:SWITCH,0:DO,0:FOR,0:functions,0:IF,1:WHILE,1	26
0x4000040	              0x55	                                push rbp	       162	evmisc.c	FUNCTION_3
0x4000041	              0x53	                                push rbx	       162	evmisc.c	FUNCTION_3
0x4000042	          0x4889fb	                            mov rbx, rdi	       162	evmisc.c	FUNCTION_3
0x4000045	        0x488b5720	            mov rdx, qword [rdi + 0x20] 	       170	evmisc.c	FUNCTION_3	IF_1
0x4000049	          0x488b02	                    mov rax, qword [rdx]	       170	evmisc.c	FUNCTION_3	IF_1
0x400004c	          0x4885c0	                           test rax, rax	       170	evmisc.c	FUNCTION_3	IF_1
0x400004f	            0x7411	                            je 0x4000062	       170	evmisc.c	FUNCTION_3	IF_1
0x4000051	         0xfb7770a	            movzx esi, word [rdi + 0xa] 	       171	evmisc.c	FUNCTION_3	IF_1	CALL_2
0x4000055	        0x488b5208	                mov rdx, qword [rdx + 8]	       171	evmisc.c	FUNCTION_3	IF_1	CALL_2
0x4000059	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	       171	evmisc.c	FUNCTION_3	IF_1	CALL_2
0x400005d	      0xe800000000	                          call 0x4000062	       171	evmisc.c	FUNCTION_3	IF_1	CALL_2
0x4000062	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	       178	evmisc.c	FUNCTION_3
0x4000066	          0x4885ed	                           test rbp, rbp	       179	evmisc.c	FUNCTION_3	WHILE_1
0x4000069	            0x7420	                            je 0x400008b	       179	evmisc.c	FUNCTION_3	WHILE_1
0x400006b	         0xfb7730a	            movzx esi, word [rbx + 0xa] 	       180	evmisc.c	FUNCTION_3	WHILE_1	CALL_3
0x400006f	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       180	evmisc.c	FUNCTION_3	WHILE_1	CALL_3
0x4000073	        0x488b5528	            mov rdx, qword [rbp + 0x28] 	       180	evmisc.c	FUNCTION_3	WHILE_1	CALL_3
0x4000077	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       180	evmisc.c	FUNCTION_3	WHILE_1	CALL_3
0x400007b	      0xe800000000	                          call 0x4000080	       180	evmisc.c	FUNCTION_3	WHILE_1	CALL_3
0x4000080	         0xfb6430e	            movzx eax, byte [rbx + 0xe] 	       184	evmisc.c	FUNCTION_3	WHILE_1
0x4000084	      0x488b6cc530	    mov rbp, qword [rbp + rax*8 + 0x30] 	       184	evmisc.c	FUNCTION_3	WHILE_1
0x4000089	            0xebdb	                           jmp 0x4000066	       184	evmisc.c	FUNCTION_3	WHILE_1
0x400008b	          0x4889df	                            mov rdi, rbx	       190	evmisc.c	FUNCTION_3	CALL_4
0x400008e	              0x5b	                                 pop rbx	       191	evmisc.c	FUNCTION_3
0x400008f	              0x5d	                                 pop rbp	       191	evmisc.c	FUNCTION_3
0x4000090	      0xe900000000	        jmp sym.acpi_ev_is_notify_object	       190	evmisc.c	FUNCTION_3	CALL_4
acpi_ev_queue_notify_request	CALL,13:ELSE,1:SWITCH,0:DO,0:FOR,0:functions,0:IF,6:WHILE,0	61
0x40000b0	            0x4157	                                push r15	        69	evmisc.c	FUNCTION_2
0x40000b2	            0x4156	                                push r14	        69	evmisc.c	FUNCTION_2
0x40000b4	            0x4155	                                push r13	        69	evmisc.c	FUNCTION_2
0x40000b6	            0x4154	                                push r12	        69	evmisc.c	FUNCTION_2
0x40000b8	          0x4989fc	                            mov r12, rdi	        69	evmisc.c	FUNCTION_2
0x40000bb	              0x55	                                push rbp	        69	evmisc.c	FUNCTION_2
0x40000bc	              0x53	                                push rbx	        69	evmisc.c	FUNCTION_2
0x40000bd	      0xe800000000	                          call 0x40000c2	        80	evmisc.c	FUNCTION_2	IF_1	CALL_2
0x40000c2	            0x84c0	                             test al, al	        80	evmisc.c	FUNCTION_2	IF_1	CALL_2
0x40000c4	      0xba08000000	                              mov edx, 8	        81	evmisc.c	FUNCTION_2	IF_1
0x40000c9	     0xf849a000000	                            je 0x4000169	        80	evmisc.c	FUNCTION_2	IF_1	CALL_2
0x40000cf	          0x83fe7f	                           cmp esi, 0x7f	        86	evmisc.c	FUNCTION_2	IF_2
0x40000d2	          0x4189f6	                           mov r14d, esi	        86	evmisc.c	FUNCTION_2	IF_2
0x40000d5	        0x410f97c5	                               seta r13b	        86	evmisc.c	FUNCTION_2	IF_2
0x40000d9	          0x4531ff	                          xor r15d, r15d	        71	evmisc.c	FUNCTION_2
0x40000dc	      0xe800000000	                          call 0x40000e1	        94	evmisc.c	FUNCTION_2	CALL_3
0x40000e1	          0x4885c0	                           test rax, rax	        95	evmisc.c	FUNCTION_2	IF_3
0x40000e4	        0x410fb6ed	                         movzx ebp, r13b	        95	evmisc.c	FUNCTION_2	IF_3
0x40000e8	            0x740b	                            je 0x40000f5	        95	evmisc.c	FUNCTION_2	IF_3
0x40000ea	          0x4863d5	                         movsxd rdx, ebp	        99	evmisc.c	FUNCTION_2	IF_3
0x40000ed	        0x4883c202	                              add rdx, 2	        99	evmisc.c	FUNCTION_2	IF_3
0x40000f1	        0x4c8b3cd0	            mov r15, qword [rax + rdx*8]	        99	evmisc.c	FUNCTION_2	IF_3
0x40000f5	          0x4889e8	                            mov rax, rbp	       107	evmisc.c	FUNCTION_2	IF_4
0x40000f8	        0x48c1e004	                              shl rax, 4	       107	evmisc.c	FUNCTION_2	IF_4
0x40000fc	    0x4883b8000000	                      cmp qword [rax], 0	       108	evmisc.c	FUNCTION_2	IF_4
0x4000104	            0x7507	                           jne 0x400010d	       108	evmisc.c	FUNCTION_2	IF_4
0x4000106	            0x31d2	                            xor edx, edx	       114	evmisc.c	FUNCTION_2	IF_4
0x4000108	          0x4d85ff	                           test r15, r15	       108	evmisc.c	FUNCTION_2	IF_4
0x400010b	            0x745c	                            je 0x4000169	       108	evmisc.c	FUNCTION_2	IF_4
0x400010d	      0xe800000000	                          call 0x4000112	       119	evmisc.c	FUNCTION_2	CALL_6
0x4000112	          0x4885c0	                           test rax, rax	       120	evmisc.c	FUNCTION_2	IF_5
0x4000115	          0x4889c3	                            mov rbx, rax	       119	evmisc.c	FUNCTION_2	CALL_6
0x4000118	      0xba04000000	                              mov edx, 4	       121	evmisc.c	FUNCTION_2	IF_5
0x400011d	            0x744a	                            je 0x4000169	       120	evmisc.c	FUNCTION_2	IF_5
0x400011f	        0x48c1e504	                              shl rbp, 4	       130	evmisc.c	FUNCTION_2
0x4000123	          0x4889c2	                            mov rdx, rax	       139	evmisc.c	FUNCTION_2	CALL_11
0x4000126	        0xc640080a	                 mov byte [rax + 8], 0xa	       124	evmisc.c	FUNCTION_2
0x400012a	    0x4881c5000000	                              add rbp, 0	       130	evmisc.c	FUNCTION_2
0x4000131	        0x4c896010	             mov qword [rax + 0x10], r12	       126	evmisc.c	FUNCTION_2
0x4000135	      0x664489700a	              mov word [rax + 0xa], r14w	       127	evmisc.c	FUNCTION_2
0x400013a	        0x48896820	             mov qword [rax + 0x20], rbp	       130	evmisc.c	FUNCTION_2
0x400013e	        0x4488680e	              mov byte [rax + 0xe], r13b	       128	evmisc.c	FUNCTION_2
0x4000142	    0x48c7c6000000	                              mov rsi, 0	       139	evmisc.c	FUNCTION_2	CALL_11
0x4000149	        0x4c897818	             mov qword [rax + 0x18], r15	       129	evmisc.c	FUNCTION_2
0x400014d	      0xbf01000000	                              mov edi, 1	       139	evmisc.c	FUNCTION_2	CALL_11
0x4000152	      0xe800000000	                          call 0x4000157	       139	evmisc.c	FUNCTION_2	CALL_11
0x4000157	            0x31d2	                            xor edx, edx	       139	evmisc.c	FUNCTION_2	CALL_11
0x4000159	            0x85c0	                           test eax, eax	       141	evmisc.c	FUNCTION_2	IF_6	CALL_12
0x400015b	            0x89c5	                            mov ebp, eax	       139	evmisc.c	FUNCTION_2	CALL_11
0x400015d	            0x740a	                            je 0x4000169	       141	evmisc.c	FUNCTION_2	IF_6	CALL_12
0x400015f	          0x4889df	                            mov rdi, rbx	       142	evmisc.c	FUNCTION_2	IF_6	CALL_13
0x4000162	      0xe800000000	                          call 0x4000167	       142	evmisc.c	FUNCTION_2	IF_6	CALL_13
0x4000167	            0x89ea	                            mov edx, ebp	       142	evmisc.c	FUNCTION_2	IF_6	CALL_13
0x4000169	              0x5b	                                 pop rbx	       146	evmisc.c	FUNCTION_2
0x400016a	            0x89d0	                            mov eax, edx	       146	evmisc.c	FUNCTION_2
0x400016c	              0x5d	                                 pop rbp	       146	evmisc.c	FUNCTION_2
0x400016d	            0x415c	                                 pop r12	       146	evmisc.c	FUNCTION_2
0x400016f	            0x415d	                                 pop r13	       146	evmisc.c	FUNCTION_2
0x4000171	            0x415e	                                 pop r14	       146	evmisc.c	FUNCTION_2
0x4000173	            0x415f	                                 pop r15	       146	evmisc.c	FUNCTION_2
0x4000175	              0xc3	                                     ret	       146	evmisc.c	FUNCTION_2
