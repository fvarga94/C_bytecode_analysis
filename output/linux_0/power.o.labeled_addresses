acpi_power_add_remove_device	ELSE,0:FOR,1:IF,2:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,2	41
0x4000460	            0x4156	                                push r14	       438	power.c	FUNCTION_19
0x4000462	            0x4155	                                push r13	       438	power.c	FUNCTION_19
0x4000464	          0x4189f5	                           mov r13d, esi	       438	power.c	FUNCTION_19
0x4000467	            0x4154	                                push r12	       438	power.c	FUNCTION_19
0x4000469	              0x55	                                push rbp	       438	power.c	FUNCTION_19
0x400046a	          0x4989fc	                            mov r12, rdi	       438	power.c	FUNCTION_19
0x400046d	              0x53	                                push rbx	       438	power.c	FUNCTION_19
0x400046e	    0xf687b8010000	              test byte [rdi + 0x1b8], 1	       441	power.c	FUNCTION_19	IF_1
0x4000475	            0x7552	                           jne 0x40004c9	       441	power.c	FUNCTION_19	IF_1
0x4000477	    0x41f68424ec00	               test byte [r12 + 0xec], 2	       445	power.c	FUNCTION_19	IF_2
0x4000480	            0x7437	                            je 0x40004b9	       445	power.c	FUNCTION_19	IF_2
0x4000482	    0x498d9c240001	                  lea rbx, [r12 + 0x100]	       445	power.c	FUNCTION_19	IF_2
0x400048a	    0x4d8db4248001	                  lea r14, [r12 + 0x180]	       445	power.c	FUNCTION_19	IF_2
0x4000492	    0x48c7c5000000	                              mov rbp, 0	       445	power.c	FUNCTION_19	IF_2
0x4000499	          0x4584ed	                         test r13b, r13b	       431	power.c	FUNCTION_18	IF_1
0x400049c	          0x4889ea	                            mov rdx, rbp	       432	power.c	FUNCTION_18	CALL_1
0x400049f	          0x4889de	                            mov rsi, rbx	       432	power.c	FUNCTION_18	CALL_1
0x40004a2	          0x4c89e7	                            mov rdi, r12	       432	power.c	FUNCTION_18	CALL_1
0x40004a5	            0x751b	                           jne 0x40004c2	       431	power.c	FUNCTION_18	IF_1
0x40004a7	      0xe894fbffff	           call sym.acpi_power_hide_list	       434	power.c	FUNCTION_18	CALL_2
0x40004ac	        0x4883c320	                           add rbx, 0x20	       434	power.c	FUNCTION_18	CALL_2
0x40004b0	        0x4883c528	                           add rbp, 0x28	       434	power.c	FUNCTION_18	CALL_2
0x40004b4	          0x4c39f3	                            cmp rbx, r14	       448	power.c	FUNCTION_19	FOR_1
0x40004b7	            0x75e0	                           jne 0x4000499	       448	power.c	FUNCTION_19	FOR_1
0x40004b9	              0x5b	                                 pop rbx	       452	power.c	FUNCTION_19
0x40004ba	              0x5d	                                 pop rbp	       452	power.c	FUNCTION_19
0x40004bb	            0x415c	                                 pop r12	       452	power.c	FUNCTION_19
0x40004bd	            0x415d	                                 pop r13	       452	power.c	FUNCTION_19
0x40004bf	            0x415e	                                 pop r14	       452	power.c	FUNCTION_19
0x40004c1	              0xc3	                                     ret	       452	power.c	FUNCTION_19
0x40004c2	      0xe8e9fbffff	         call sym.acpi_power_expose_list	       432	power.c	FUNCTION_18	CALL_1
0x40004c7	            0xebe3	                           jmp 0x40004ac	       432	power.c	FUNCTION_18	CALL_1
0x40004c9	    0x488d87a80100	                  lea rax, [rdi + 0x1a8]	       442	power.c	FUNCTION_19	IF_1	CALL_1
0x40004d0	          0x4084f6	                           test sil, sil	       431	power.c	FUNCTION_18	IF_1
0x40004d3	    0x48c7c2000000	                              mov rdx, 0	       432	power.c	FUNCTION_18	CALL_1
0x40004da	          0x4889c6	                            mov rsi, rax	       432	power.c	FUNCTION_18	CALL_1
0x40004dd	            0x7507	                           jne 0x40004e6	       431	power.c	FUNCTION_18	IF_1
0x40004df	      0xe85cfbffff	           call sym.acpi_power_hide_list	       434	power.c	FUNCTION_18	CALL_2
0x40004e4	            0xeb91	                           jmp 0x4000477	       434	power.c	FUNCTION_18	CALL_2
0x40004e6	      0xe8c5fbffff	         call sym.acpi_power_expose_list	       432	power.c	FUNCTION_18	CALL_1
0x40004eb	            0xeb8a	                           jmp 0x4000477	       432	power.c	FUNCTION_18	CALL_1
acpi_disable_wakeup_device_power	ELSE,0:FOR,0:IF,4:SWITCH,0:functions,1:DO,0:WHILE,0:CALL,3	78
0x4000800	          0x4885ff	                           test rdi, rdi	       613	power.c	FUNCTION_23	IF_1
0x4000803	      0xb8eaffffff	                     mov eax, 0xffffffea	       614	power.c	FUNCTION_23	IF_1
0x4000808	     0xf8415010000	                            je 0x4000923	       613	power.c	FUNCTION_23	IF_1
0x400080e	    0xf687b8010000	              test byte [rdi + 0x1b8], 1	       613	power.c	FUNCTION_23	IF_1
0x4000815	            0x7449	                            je 0x4000860	       613	power.c	FUNCTION_23	IF_1
0x4000817	            0x4157	                                push r15	       609	power.c	FUNCTION_23
0x4000819	            0x4156	                                push r14	       609	power.c	FUNCTION_23
0x400081b	            0x4155	                                push r13	       609	power.c	FUNCTION_23
0x400081d	            0x4154	                                push r12	       609	power.c	FUNCTION_23
0x400081f	              0x55	                                push rbp	       609	power.c	FUNCTION_23
0x4000820	              0x53	                                push rbx	       609	power.c	FUNCTION_23
0x4000821	          0x4889fb	                            mov rbx, rdi	       609	power.c	FUNCTION_23
0x4000824	    0x48c7c7000000	                              mov rdi, 0	       616	power.c	FUNCTION_23	CALL_1
0x400082b	      0xe800000000	                          call 0x4000830	       616	power.c	FUNCTION_23	CALL_1
0x4000830	    0x8b83d8010000	           mov eax, dword [rbx + 0x1d8] 	       618	power.c	FUNCTION_23	IF_2
0x4000836	          0x83e801	                              sub eax, 1	       618	power.c	FUNCTION_23	IF_2
0x4000839	          0x83f800	                              cmp eax, 0	       618	power.c	FUNCTION_23	IF_2
0x400083c	    0x8983d8010000	            mov dword [rbx + 0x1d8], eax	       618	power.c	FUNCTION_23	IF_2
0x4000842	            0x7e1e	                           jle 0x4000862	       618	power.c	FUNCTION_23	IF_2
0x4000844	          0x4531ed	                          xor r13d, r13d	       611	power.c	FUNCTION_23
0x4000847	    0x48c7c7000000	                              mov rdi, 0	       654	power.c	FUNCTION_23	CALL_3
0x400084e	      0xe800000000	                          call 0x4000853	       654	power.c	FUNCTION_23	CALL_3
0x4000853	          0x4489e8	                           mov eax, r13d	       655	power.c	FUNCTION_23
0x4000856	              0x5b	                                 pop rbx	       656	power.c	FUNCTION_23
0x4000857	              0x5d	                                 pop rbp	       656	power.c	FUNCTION_23
0x4000858	            0x415c	                                 pop r12	       656	power.c	FUNCTION_23
0x400085a	            0x415d	                                 pop r13	       656	power.c	FUNCTION_23
0x400085c	            0x415e	                                 pop r14	       656	power.c	FUNCTION_23
0x400085e	            0x415f	                                 pop r15	       656	power.c	FUNCTION_23
0x4000860	            0xf3c3	                                     ret	       656	power.c	FUNCTION_23
0x4000862	     0xf85ac000000	                           jne 0x4000914	       625	power.c	FUNCTION_23	IF_3
0x4000868	            0x31c9	                            xor ecx, ecx	       628	power.c	FUNCTION_23	CALL_2
0x400086a	            0x31d2	                            xor edx, edx	       628	power.c	FUNCTION_23	CALL_2
0x400086c	            0x31f6	                            xor esi, esi	       628	power.c	FUNCTION_23	CALL_2
0x400086e	          0x4889df	                            mov rdi, rbx	       628	power.c	FUNCTION_23	CALL_2
0x4000871	      0xe800000000	                          call 0x4000876	       628	power.c	FUNCTION_23	CALL_2
0x4000876	            0x85c0	                           test eax, eax	       629	power.c	FUNCTION_23	IF_4
0x4000878	          0x4189c5	                           mov r13d, eax	       628	power.c	FUNCTION_23	CALL_2
0x400087b	            0x75ca	                           jne 0x4000847	       629	power.c	FUNCTION_23	IF_4
0x400087d	    0x4c8ba3a80100	           mov r12, qword [rbx + 0x1a8] 	       632	power.c	FUNCTION_23	FUNCTION_1
0x4000884	    0x4c8dbba80100	                  lea r15, [rbx + 0x1a8]	       632	power.c	FUNCTION_23	FUNCTION_1
0x400088b	          0x4d39fc	                            cmp r12, r15	       632	power.c	FUNCTION_23	FUNCTION_1
0x400088e	            0x751a	                           jne 0x40008aa	       632	power.c	FUNCTION_23	FUNCTION_1
0x4000890	            0xebb2	                           jmp 0x4000844	       632	power.c	FUNCTION_23	FUNCTION_1
0x4000892	    0xc68584050000	               mov byte [rbp + 0x584], 0	       640	power.c	FUNCTION_23	FUNCTION_1	IF_1	IF_2
0x4000899	          0x4c89f7	                            mov rdi, r14	       643	power.c	FUNCTION_23	FUNCTION_1	CALL_3
0x400089c	      0xe800000000	                          call 0x40008a1	       643	power.c	FUNCTION_23	FUNCTION_1	CALL_3
0x40008a1	        0x4d8b2424	                    mov r12, qword [r12]	       632	power.c	FUNCTION_23	FUNCTION_1
0x40008a5	          0x4d39fc	                            cmp r12, r15	       632	power.c	FUNCTION_23	FUNCTION_1
0x40008a8	            0x749a	                            je 0x4000844	       632	power.c	FUNCTION_23	FUNCTION_1
0x40008aa	      0x498b6c2410	            mov rbp, qword [r12 + 0x10] 	       633	power.c	FUNCTION_23	FUNCTION_1
0x40008af	    0x4c8db5880500	                  lea r14, [rbp + 0x588]	       635	power.c	FUNCTION_23	FUNCTION_1	CALL_1
0x40008b6	          0x4c89f7	                            mov rdi, r14	       635	power.c	FUNCTION_23	FUNCTION_1	CALL_1
0x40008b9	      0xe800000000	                          call 0x40008be	       635	power.c	FUNCTION_23	FUNCTION_1	CALL_1
0x40008be	    0x80bd84050000	               cmp byte [rbp + 0x584], 0	       637	power.c	FUNCTION_23	FUNCTION_1	IF_1
0x40008c5	            0x74d2	                            je 0x4000899	       637	power.c	FUNCTION_23	FUNCTION_1	IF_1
0x40008c7	    0x8b8580050000	           mov eax, dword [rbp + 0x580] 	       284	power.c	FUNCTION_12	IF_1
0x40008cd	            0x85c0	                           test eax, eax	       284	power.c	FUNCTION_12	IF_1
0x40008cf	            0x74c1	                            je 0x4000892	       284	power.c	FUNCTION_12	IF_1
0x40008d1	          0x83e801	                              sub eax, 1	       291	power.c	FUNCTION_12	IF_2
0x40008d4	            0x85c0	                           test eax, eax	       291	power.c	FUNCTION_12	IF_2
0x40008d6	    0x898580050000	           mov dword [rbp + 0x580], eax 	       291	power.c	FUNCTION_12	IF_2
0x40008dc	            0x75b4	                           jne 0x4000892	       291	power.c	FUNCTION_12	IF_2
0x40008de	          0x4889ef	                            mov rdi, rbp	       291	power.c	FUNCTION_12	IF_2
0x40008e1	      0xe84afaffff	 call sym.acpi_power_off_unlocked.part.6	       291	power.c	FUNCTION_12	IF_2
0x40008e6	            0x85c0	                           test eax, eax	       639	power.c	FUNCTION_23	FUNCTION_1	IF_1	IF_2
0x40008e8	          0x4189c5	                           mov r13d, eax	       639	power.c	FUNCTION_23	FUNCTION_1	IF_1	IF_2
0x40008eb	            0x74a5	                            je 0x4000892	       639	power.c	FUNCTION_23	FUNCTION_1	IF_1	IF_2
0x40008ed	          0x4c89f7	                            mov rdi, r14	       643	power.c	FUNCTION_23	FUNCTION_1	CALL_3
0x40008f0	      0xe800000000	                          call 0x40008f5	       643	power.c	FUNCTION_23	FUNCTION_1	CALL_3
0x40008f5	    0x488dbb500200	                  lea rdi, [rbx + 0x250]	       646	power.c	FUNCTION_23	FUNCTION_1	IF_3	CALL_4
0x40008fc	    0x48c7c6000000	                              mov rsi, 0	       646	power.c	FUNCTION_23	FUNCTION_1	IF_3	CALL_4
0x4000903	      0xe800000000	                          call 0x4000908	       646	power.c	FUNCTION_23	FUNCTION_1	IF_3	CALL_4
0x4000908	    0x80a3b8010000	            and byte [rbx + 0x1b8], 0xfe	       648	power.c	FUNCTION_23	FUNCTION_1	IF_3
0x400090f	      0xe933ffffff	                           jmp 0x4000847	       649	power.c	FUNCTION_23	FUNCTION_1	IF_3
0x4000914	    0xc783d8010000	              mov dword [rbx + 0x1d8], 0	       626	power.c	FUNCTION_23	IF_3
0x400091e	      0xe945ffffff	                           jmp 0x4000868	       626	power.c	FUNCTION_23	IF_3
0x4000923	            0xf3c3	                                     ret	       656	power.c	FUNCTION_23
acpi_device_sleep_wake	ELSE,1:FOR,0:IF,3:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,6	55
0x40005d0	              0x55	                                push rbp	       508	power.c	FUNCTION_21
0x40005d1	              0x53	                                push rbx	       508	power.c	FUNCTION_21
0x40005d2	          0x4889fd	                            mov rbp, rdi	       508	power.c	FUNCTION_21
0x40005d5	          0x4863d2	                         movsxd rdx, edx	       527	power.c	FUNCTION_21
0x40005d8	          0x4863c9	                         movsxd rcx, ecx	       529	power.c	FUNCTION_21
0x40005db	          0x4863de	                         movsxd rbx, esi	       525	power.c	FUNCTION_21
0x40005de	        0x4883ec60	                           sub rsp, 0x60	       508	power.c	FUNCTION_21
0x40005e2	        0x488b7f08	                mov rdi, qword [rdi + 8]	       530	power.c	FUNCTION_21	CALL_1
0x40005e6	    0x48c7c6000000	                              mov rsi, 0	       530	power.c	FUNCTION_21	CALL_1
0x40005ed	    0x65488b042528	                mov rax, qword gs:[0x28]	       508	power.c	FUNCTION_21
0x40005f6	      0x4889442458	             mov qword [rsp + 0x58], rax	       508	power.c	FUNCTION_21
0x40005fb	            0x31c0	                            xor eax, eax	       508	power.c	FUNCTION_21
0x40005fd	      0x488d442410	                   lea rax, [rsp + 0x10]	       510	power.c	FUNCTION_21
0x4000602	      0x4889542430	             mov qword [rsp + 0x30], rdx	       527	power.c	FUNCTION_21
0x4000607	      0x48894c2448	             mov qword [rsp + 0x48], rcx	       529	power.c	FUNCTION_21
0x400060c	          0x4889e2	                            mov rdx, rsp	       530	power.c	FUNCTION_21	CALL_1
0x400060f	            0x31c9	                            xor ecx, ecx	       530	power.c	FUNCTION_21	CALL_1
0x4000611	    0xc70424030000	                      mov dword [rsp], 3	       510	power.c	FUNCTION_21
0x4000618	      0x4889442408	                mov qword [rsp + 8], rax	       510	power.c	FUNCTION_21
0x400061d	    0xc74424100100	               mov dword [rsp + 0x10], 1	       524	power.c	FUNCTION_21
0x4000625	      0x48895c2418	             mov qword [rsp + 0x18], rbx	       525	power.c	FUNCTION_21
0x400062a	    0xc74424280100	               mov dword [rsp + 0x28], 1	       526	power.c	FUNCTION_21
0x4000632	    0xc74424400100	               mov dword [rsp + 0x40], 1	       528	power.c	FUNCTION_21
0x400063a	      0xe800000000	                          call 0x400063f	       530	power.c	FUNCTION_21	CALL_1
0x400063f	            0x85c0	                           test eax, eax	       531	power.c	FUNCTION_21	IF_1	CALL_2
0x4000641	            0x7421	                            je 0x4000664	       531	power.c	FUNCTION_21	IF_1	CALL_2
0x4000643	          0x83f805	                              cmp eax, 5	       533	power.c	FUNCTION_21	ELSE_1	IF_2
0x4000646	            0x7554	                           jne 0x400069c	       533	power.c	FUNCTION_21	ELSE_1	IF_2
0x4000648	        0x488b7d08	                mov rdi, qword [rbp + 8]	       540	power.c	FUNCTION_21	CALL_4
0x400064c	          0x4889da	                            mov rdx, rbx	       540	power.c	FUNCTION_21	CALL_4
0x400064f	    0x48c7c6000000	                              mov rsi, 0	       540	power.c	FUNCTION_21	CALL_4
0x4000656	      0xe800000000	                          call 0x400065b	       540	power.c	FUNCTION_21	CALL_4
0x400065b	            0x85c0	                           test eax, eax	       541	power.c	FUNCTION_21	IF_3	CALL_5
0x400065d	            0x7405	                            je 0x4000664	       541	power.c	FUNCTION_21	IF_3	CALL_5
0x400065f	          0x83f805	                              cmp eax, 5	       541	power.c	FUNCTION_21	IF_3	CALL_5
0x4000662	            0x7519	                           jne 0x400067d	       541	power.c	FUNCTION_21	IF_3	CALL_5
0x4000664	            0x31c0	                            xor eax, eax	       532	power.c	FUNCTION_21	IF_1
0x4000666	      0x488b5c2458	            mov rbx, qword [rsp + 0x58] 	       548	power.c	FUNCTION_21
0x400066b	    0x6548331c2528	                xor rbx, qword gs:[0x28]	       548	power.c	FUNCTION_21
0x4000674	            0x7521	                           jne 0x4000697	       548	power.c	FUNCTION_21
0x4000676	        0x4883c460	                           add rsp, 0x60	       548	power.c	FUNCTION_21
0x400067a	              0x5b	                                 pop rbx	       548	power.c	FUNCTION_21
0x400067b	              0x5d	                                 pop rbp	       548	power.c	FUNCTION_21
0x400067c	              0xc3	                                     ret	       548	power.c	FUNCTION_21
0x400067d	    0x48c7c7000000	                              mov rdi, 0	       542	power.c	FUNCTION_21	IF_3	CALL_6
0x4000684	      0xe800000000	                          call 0x4000689	       542	power.c	FUNCTION_21	IF_3	CALL_6
0x4000689	    0x80a5b8010000	            and byte [rbp + 0x1b8], 0xfe	       543	power.c	FUNCTION_21	IF_3
0x4000690	      0xb8edffffff	                     mov eax, 0xffffffed	       544	power.c	FUNCTION_21	IF_3
0x4000695	            0xebcf	                           jmp 0x4000666	       544	power.c	FUNCTION_21	IF_3
0x4000697	      0xe800000000	                          call 0x400069c	       548	power.c	FUNCTION_21
0x400069c	    0x48c7c7000000	                              mov rdi, 0	       534	power.c	FUNCTION_21	ELSE_1	IF_2	CALL_3
0x40006a3	      0xe800000000	                          call 0x40006a8	       534	power.c	FUNCTION_21	ELSE_1	IF_2	CALL_3
0x40006a8	    0x80a5b8010000	            and byte [rbp + 0x1b8], 0xfe	       535	power.c	FUNCTION_21	ELSE_1	IF_2
0x40006af	      0xb8edffffff	                     mov eax, 0xffffffed	       536	power.c	FUNCTION_21	ELSE_1	IF_2
0x40006b4	            0xebb0	                           jmp 0x4000666	       536	power.c	FUNCTION_21	ELSE_1	IF_2
acpi_power_off	ELSE,0:FOR,0:IF,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,3	29
0x4000360	              0x55	                                push rbp	       304	power.c	FUNCTION_13
0x4000361	    0x488daf880500	                  lea rbp, [rdi + 0x588]	       307	power.c	FUNCTION_13	CALL_1
0x4000368	              0x53	                                push rbx	       304	power.c	FUNCTION_13
0x4000369	          0x4889fb	                            mov rbx, rdi	       304	power.c	FUNCTION_13
0x400036c	          0x4889ef	                            mov rdi, rbp	       307	power.c	FUNCTION_13	CALL_1
0x400036f	      0xe800000000	                          call 0x4000374	       307	power.c	FUNCTION_13	CALL_1
0x4000374	    0x8b8380050000	           mov eax, dword [rbx + 0x580] 	       284	power.c	FUNCTION_12	IF_1
0x400037a	            0x85c0	                           test eax, eax	       284	power.c	FUNCTION_12	IF_1
0x400037c	            0x740d	                            je 0x400038b	       284	power.c	FUNCTION_12	IF_1
0x400037e	          0x83e801	                              sub eax, 1	       291	power.c	FUNCTION_12	IF_2
0x4000381	            0x85c0	                           test eax, eax	       291	power.c	FUNCTION_12	IF_2
0x4000383	    0x898380050000	            mov dword [rbx + 0x580], eax	       291	power.c	FUNCTION_12	IF_2
0x4000389	            0x740f	                            je 0x400039a	       291	power.c	FUNCTION_12	IF_2
0x400038b	            0x31db	                            xor ebx, ebx	       288	power.c	FUNCTION_12	IF_1
0x400038d	          0x4889ef	                            mov rdi, rbp	       309	power.c	FUNCTION_13	CALL_3
0x4000390	      0xe800000000	                          call 0x4000395	       309	power.c	FUNCTION_13	CALL_3
0x4000395	            0x89d8	                            mov eax, ebx	       311	power.c	FUNCTION_13
0x4000397	              0x5b	                                 pop rbx	       311	power.c	FUNCTION_13
0x4000398	              0x5d	                                 pop rbp	       311	power.c	FUNCTION_13
0x4000399	              0xc3	                                     ret	       311	power.c	FUNCTION_13
0x400039a	          0x4889df	                            mov rdi, rbx	       311	power.c	FUNCTION_13
0x400039d	      0xe88effffff	 call sym.acpi_power_off_unlocked.part.6	       311	power.c	FUNCTION_13
0x40003a2	          0x4889ef	                            mov rdi, rbp	       309	power.c	FUNCTION_13	CALL_3
0x40003a5	            0x89c3	                            mov ebx, eax	       309	power.c	FUNCTION_13	CALL_3
0x40003a7	      0xe800000000	                          call 0x40003ac	       309	power.c	FUNCTION_13	CALL_3
0x40003ac	            0x89d8	                            mov eax, ebx	       311	power.c	FUNCTION_13
0x40003ae	              0x5b	                                 pop rbx	       311	power.c	FUNCTION_13
0x40003af	              0x5d	                                 pop rbp	       311	power.c	FUNCTION_13
0x40003b0	              0xc3	                                     ret	       311	power.c	FUNCTION_13
acpi_power_sysfs_remove	ELSE,0:FOR,0:IF,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,1	3
0x40001f0	    0x4881c7500200	                          add rdi, 0x250	       760	power.c	FUNCTION_29	CALL_1
0x40001f7	    0x48c7c6000000	                              mov rsi, 0	       760	power.c	FUNCTION_29	CALL_1
0x40001fe	      0xe900000000	                           jmp 0x4000203	       760	power.c	FUNCTION_29	CALL_1
acpi_power_in_use_show	ELSE,0:FOR,0:IF,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,3	10
0x4000210	    0x8b8f30030000	           mov ecx, dword [rdi + 0x330] 	       754	power.c	FUNCTION_28	CALL_3
0x4000216	          0x4889d0	                            mov rax, rdx	       750	power.c	FUNCTION_28
0x4000219	            0x31d2	                            xor edx, edx	       754	power.c	FUNCTION_28	CALL_3
0x400021b	    0x48c7c6000000	                              mov rsi, 0	       754	power.c	FUNCTION_28	CALL_3
0x4000222	          0x4889c7	                            mov rdi, rax	       754	power.c	FUNCTION_28	CALL_3
0x4000225	            0x85c9	                           test ecx, ecx	       754	power.c	FUNCTION_28	CALL_3
0x4000227	           0xf95c2	                                setne dl	       754	power.c	FUNCTION_28	CALL_3
0x400022a	      0xe800000000	                          call 0x400022f	       754	power.c	FUNCTION_28	CALL_3
0x400022f	            0x4898	                                    cdqe	       754	power.c	FUNCTION_28	CALL_3
0x4000231	              0xc3	                                     ret	       755	power.c	FUNCTION_28
acpi_power_wakeup_list_init	ELSE,0:FOR,0:IF,0:SWITCH,0:functions,1:DO,0:WHILE,0:CALL,0	61
0x40004f0	            0x4157	                                push r15	       455	power.c	FUNCTION_20
0x40004f2	            0x4156	                                push r14	       455	power.c	FUNCTION_20
0x40004f4	            0x4155	                                push r13	       455	power.c	FUNCTION_20
0x40004f6	            0x4154	                                push r12	       455	power.c	FUNCTION_20
0x40004f8	              0x55	                                push rbp	       455	power.c	FUNCTION_20
0x40004f9	              0x53	                                push rbx	       455	power.c	FUNCTION_20
0x40004fa	        0x4883ec18	                           sub rsp, 0x18	       455	power.c	FUNCTION_20
0x40004fe	          0x488b2f	                    mov rbp, qword [rdi]	       459	power.c	FUNCTION_20	FUNCTION_1
0x4000501	    0x65488b042528	                mov rax, qword gs:[0x28]	       455	power.c	FUNCTION_20
0x400050a	      0x4889442410	             mov qword [rsp + 0x10], rax	       455	power.c	FUNCTION_20
0x400050f	            0x31c0	                            xor eax, eax	       455	power.c	FUNCTION_20
0x4000511	        0x48893424	                    mov qword [rsp], rsi	       455	power.c	FUNCTION_20
0x4000515	          0x4839ef	                            cmp rdi, rbp	       459	power.c	FUNCTION_20	FUNCTION_1
0x4000518	            0x7468	                            je 0x4000582	       459	power.c	FUNCTION_20	FUNCTION_1
0x400051a	          0x4989fe	                            mov r14, rdi	       459	power.c	FUNCTION_20	FUNCTION_1
0x400051d	    0x41bc05000000	                             mov r12d, 5	       459	power.c	FUNCTION_20	FUNCTION_1
0x4000523	            0xeb1e	                           jmp 0x4000543	       459	power.c	FUNCTION_20	FUNCTION_1
0x4000525	    0x8b8378050000	           mov eax, dword [rbx + 0x578] 	       476	power.c	FUNCTION_20	FUNCTION_1	IF_3
0x400052b	          0x4c89ff	                            mov rdi, r15	       479	power.c	FUNCTION_20	FUNCTION_1	CALL_4
0x400052e	          0x4439e0	                           cmp eax, r12d	       477	power.c	FUNCTION_20	FUNCTION_1	IF_3
0x4000531	        0x440f42e0	                         cmovb r12d, eax	       477	power.c	FUNCTION_20	FUNCTION_1	IF_3
0x4000535	      0xe800000000	                          call 0x400053a	       479	power.c	FUNCTION_20	FUNCTION_1	CALL_4
0x400053a	        0x488b6d00	                    mov rbp, qword [rbp]	       459	power.c	FUNCTION_20	FUNCTION_1
0x400053e	          0x4939ee	                            cmp r14, rbp	       459	power.c	FUNCTION_20	FUNCTION_1
0x4000541	            0x7445	                            je 0x4000588	       459	power.c	FUNCTION_20	FUNCTION_1
0x4000543	        0x488b5d10	            mov rbx, qword [rbp + 0x10] 	       460	power.c	FUNCTION_20	FUNCTION_1
0x4000547	    0x4c8dbb880500	                  lea r15, [rbx + 0x588]	       465	power.c	FUNCTION_20	FUNCTION_1	CALL_1
0x400054e	        0x4c8b6b08	                mov r13, qword [rbx + 8]	       461	power.c	FUNCTION_20	FUNCTION_1
0x4000552	          0x4c89ff	                            mov rdi, r15	       465	power.c	FUNCTION_20	FUNCTION_1	CALL_1
0x4000555	      0xe800000000	                          call 0x400055a	       465	power.c	FUNCTION_20	FUNCTION_1	CALL_1
0x400055a	      0x488d74240c	                    lea rsi, [rsp + 0xc]	       467	power.c	FUNCTION_20	FUNCTION_1	CALL_2
0x400055f	          0x4c89ef	                            mov rdi, r13	       467	power.c	FUNCTION_20	FUNCTION_1	CALL_2
0x4000562	      0xe8e9fbffff	           call sym.acpi_power_get_state	       467	power.c	FUNCTION_20	FUNCTION_1	CALL_2
0x4000567	            0x85c0	                           test eax, eax	       468	power.c	FUNCTION_20	FUNCTION_1	IF_1
0x4000569	            0x7545	                           jne 0x40005b0	       468	power.c	FUNCTION_20	FUNCTION_1	IF_1
0x400056b	      0x837c240c01	                cmp dword [rsp + 0xc], 1	       472	power.c	FUNCTION_20	FUNCTION_1	IF_2
0x4000570	            0x75b3	                           jne 0x4000525	       472	power.c	FUNCTION_20	FUNCTION_1	IF_2
0x4000572	    0x838380050000	              add dword [rbx + 0x580], 1	       473	power.c	FUNCTION_20	FUNCTION_1	IF_2
0x4000579	    0xc68384050000	               mov byte [rbx + 0x584], 1	       474	power.c	FUNCTION_20	FUNCTION_1	IF_2
0x4000580	            0xeba3	                           jmp 0x4000525	       474	power.c	FUNCTION_20	FUNCTION_1	IF_2
0x4000582	    0x41bc05000000	                             mov r12d, 5	       457	power.c	FUNCTION_20
0x4000588	        0x488b0424	                    mov rax, qword [rsp]	       481	power.c	FUNCTION_20
0x400058c	          0x448920	                   mov dword [rax], r12d	       481	power.c	FUNCTION_20
0x400058f	            0x31c0	                            xor eax, eax	       482	power.c	FUNCTION_20
0x4000591	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       483	power.c	FUNCTION_20
0x4000596	    0x654833142528	                xor rdx, qword gs:[0x28]	       483	power.c	FUNCTION_20
0x400059f	            0x751f	                           jne 0x40005c0	       483	power.c	FUNCTION_20
0x40005a1	        0x4883c418	                           add rsp, 0x18	       483	power.c	FUNCTION_20
0x40005a5	              0x5b	                                 pop rbx	       483	power.c	FUNCTION_20
0x40005a6	              0x5d	                                 pop rbp	       483	power.c	FUNCTION_20
0x40005a7	            0x415c	                                 pop r12	       483	power.c	FUNCTION_20
0x40005a9	            0x415d	                                 pop r13	       483	power.c	FUNCTION_20
0x40005ab	            0x415e	                                 pop r14	       483	power.c	FUNCTION_20
0x40005ad	            0x415f	                                 pop r15	       483	power.c	FUNCTION_20
0x40005af	              0xc3	                                     ret	       483	power.c	FUNCTION_20
0x40005b0	          0x4c89ff	                            mov rdi, r15	       469	power.c	FUNCTION_20	FUNCTION_1	IF_1	CALL_3
0x40005b3	          0x890424	                    mov dword [rsp], eax	       469	power.c	FUNCTION_20	FUNCTION_1	IF_1	CALL_3
0x40005b6	      0xe800000000	                          call 0x40005bb	       469	power.c	FUNCTION_20	FUNCTION_1	IF_1	CALL_3
0x40005bb	          0x8b0424	                    mov eax, dword [rsp]	       467	power.c	FUNCTION_20	FUNCTION_1	CALL_2
0x40005be	            0xebd1	                           jmp 0x4000591	       467	power.c	FUNCTION_20	FUNCTION_1	CALL_2
0x40005c0	      0xe800000000	                          call 0x40005c5	       483	power.c	FUNCTION_20
acpi_power_transition	ELSE,0:FOR,0:IF,5:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,2	67
0x4000a70	          0x4885ff	                           test rdi, rdi	       704	power.c	FUNCTION_26	IF_1
0x4000a73	     0xf84c2000000	                            je 0x4000b3b	       704	power.c	FUNCTION_26	IF_1
0x4000a79	          0x83fe04	                              cmp esi, 4	       704	power.c	FUNCTION_26	IF_1
0x4000a7c	     0xf87b9000000	                            ja 0x4000b3b	       704	power.c	FUNCTION_26	IF_1
0x4000a82	    0x486397e80000	         movsxd rdx, dword [rdi + 0xe8] 	       707	power.c	FUNCTION_26	IF_2
0x4000a89	            0x31c0	                            xor eax, eax	       708	power.c	FUNCTION_26	IF_2
0x4000a8b	            0x39d6	                            cmp esi, edx	       707	power.c	FUNCTION_26	IF_2
0x4000a8d	     0xf8487000000	                            je 0x4000b1a	       707	power.c	FUNCTION_26	IF_2
0x4000a93	        0xf6476c08	               test byte [rdi + 0x6c], 8	       707	power.c	FUNCTION_26	IF_2
0x4000a97	            0x742e	                            je 0x4000ac7	       707	power.c	FUNCTION_26	IF_2
0x4000a99	          0x83fa04	                              cmp edx, 4	       710	power.c	FUNCTION_26	IF_3
0x4000a9c	     0xf879f000000	                            ja 0x4000b41	       710	power.c	FUNCTION_26	IF_3
0x4000aa2	          0x83fe03	                              cmp esi, 3	       719	power.c	FUNCTION_26	IF_4
0x4000aa5	            0x4155	                                push r13	       701	power.c	FUNCTION_26
0x4000aa7	            0x4154	                                push r12	       701	power.c	FUNCTION_26
0x4000aa9	              0x55	                                push rbp	       701	power.c	FUNCTION_26
0x4000aaa	            0x89f5	                            mov ebp, esi	       701	power.c	FUNCTION_26
0x4000aac	              0x53	                                push rbx	       701	power.c	FUNCTION_26
0x4000aad	          0x4889fb	                            mov rbx, rdi	       701	power.c	FUNCTION_26
0x4000ab0	            0x7e6a	                           jle 0x4000b1c	       719	power.c	FUNCTION_26	IF_4
0x4000ab2	          0x83fa03	                              cmp edx, 3	       723	power.c	FUNCTION_26	IF_5
0x4000ab5	            0x7e12	                           jle 0x4000ac9	       723	power.c	FUNCTION_26	IF_5
0x4000ab7	            0x89ee	                            mov esi, ebp	       701	power.c	FUNCTION_26
0x4000ab9	            0x31c0	                            xor eax, eax	       701	power.c	FUNCTION_26
0x4000abb	    0x89b3e8000000	             mov dword [rbx + 0xe8], esi	       728	power.c	FUNCTION_26
0x4000ac1	              0x5b	                                 pop rbx	       731	power.c	FUNCTION_26
0x4000ac2	              0x5d	                                 pop rbp	       731	power.c	FUNCTION_26
0x4000ac3	            0x415c	                                 pop r12	       731	power.c	FUNCTION_26
0x4000ac5	            0x415d	                                 pop r13	       731	power.c	FUNCTION_26
0x4000ac7	            0xf3c3	                                     ret	       731	power.c	FUNCTION_26
0x4000ac9	        0x48c1e205	                              shl rdx, 5	       724	power.c	FUNCTION_26	IF_5	CALL_2
0x4000acd	    0x4c8ba4130801	     mov r12, qword [rbx + rdx + 0x108] 	       318	power.c	FUNCTION_14	FUNCTION_1
0x4000ad5	    0x4c8dac130001	           lea r13, [rbx + rdx + 0x100] 	       724	power.c	FUNCTION_26	IF_5	CALL_2
0x4000add	          0x4d39e5	                            cmp r13, r12	       318	power.c	FUNCTION_14	FUNCTION_1
0x4000ae0	            0x750c	                           jne 0x4000aee	       318	power.c	FUNCTION_14	FUNCTION_1
0x4000ae2	            0xebd3	                           jmp 0x4000ab7	       318	power.c	FUNCTION_14	FUNCTION_1
0x4000ae4	      0x4d8b642408	                mov r12, qword [r12 + 8]	       318	power.c	FUNCTION_14	FUNCTION_1
0x4000ae9	          0x4d39e5	                            cmp r13, r12	       318	power.c	FUNCTION_14	FUNCTION_1
0x4000aec	            0x74c9	                            je 0x4000ab7	       318	power.c	FUNCTION_14	FUNCTION_1
0x4000aee	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	       319	power.c	FUNCTION_14	FUNCTION_1	CALL_1
0x4000af3	      0xe868f8ffff	                 call sym.acpi_power_off	       319	power.c	FUNCTION_14	FUNCTION_1	CALL_1
0x4000af8	            0x85c0	                           test eax, eax	       320	power.c	FUNCTION_14	FUNCTION_1	IF_1
0x4000afa	            0x74e8	                            je 0x4000ae4	       320	power.c	FUNCTION_14	FUNCTION_1	IF_1
0x4000afc	        0x4d8b2424	                    mov r12, qword [r12]	       326	power.c	FUNCTION_14	CALL_1
0x4000b00	          0x4d39e5	                            cmp r13, r12	       326	power.c	FUNCTION_14	CALL_1
0x4000b03	            0x74b2	                            je 0x4000ab7	       326	power.c	FUNCTION_14	CALL_1
0x4000b05	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	       327	power.c	FUNCTION_14	CALL_2
0x4000b0a	      0xe8d1f7ffff	                  call sym.acpi_power_on	       327	power.c	FUNCTION_14	CALL_2
0x4000b0f	        0x4d8b2424	                    mov r12, qword [r12]	       326	power.c	FUNCTION_14	CALL_1
0x4000b13	          0x4d39e5	                            cmp r13, r12	       326	power.c	FUNCTION_14	CALL_1
0x4000b16	            0x75ed	                           jne 0x4000b05	       326	power.c	FUNCTION_14	CALL_1
0x4000b18	            0xeb9d	                           jmp 0x4000ab7	       326	power.c	FUNCTION_14	CALL_1
0x4000b1a	            0xf3c3	                                     ret	       731	power.c	FUNCTION_26
0x4000b1c	          0x4863c6	                         movsxd rax, esi	       720	power.c	FUNCTION_26	IF_4	CALL_1
0x4000b1f	        0x48c1e005	                              shl rax, 5	       720	power.c	FUNCTION_26	IF_4	CALL_1
0x4000b23	    0x488dbc070001	           lea rdi, [rdi + rax + 0x100] 	       720	power.c	FUNCTION_26	IF_4	CALL_1
0x4000b2b	      0xe890f8ffff	             call sym.acpi_power_on_list	       720	power.c	FUNCTION_26	IF_4	CALL_1
0x4000b30	            0x85c0	                           test eax, eax	       723	power.c	FUNCTION_26	IF_5
0x4000b32	            0x7413	                            je 0x4000b47	       723	power.c	FUNCTION_26	IF_5
0x4000b34	      0xbeff000000	                           mov esi, 0xff	       728	power.c	FUNCTION_26
0x4000b39	            0xeb80	                           jmp 0x4000abb	       728	power.c	FUNCTION_26
0x4000b3b	      0xb8eaffffff	                     mov eax, 0xffffffea	       705	power.c	FUNCTION_26	IF_1
0x4000b40	              0xc3	                                     ret	       705	power.c	FUNCTION_26	IF_1
0x4000b41	      0xb8edffffff	                     mov eax, 0xffffffed	       712	power.c	FUNCTION_26	IF_3
0x4000b46	              0xc3	                                     ret	       712	power.c	FUNCTION_26	IF_3
0x4000b47	    0x486393e80000	         movsxd rdx, dword [rbx + 0xe8] 	       712	power.c	FUNCTION_26	IF_3
0x4000b4e	      0xe95fffffff	                           jmp 0x4000ab2	       712	power.c	FUNCTION_26	IF_3
acpi_enable_wakeup_device_power	ELSE,0:FOR,0:IF,3:SWITCH,0:functions,1:DO,0:WHILE,0:CALL,3	77
0x40006c0	          0x4885ff	                           test rdi, rdi	       561	power.c	FUNCTION_22	IF_1
0x40006c3	      0xb8eaffffff	                     mov eax, 0xffffffea	       562	power.c	FUNCTION_22	IF_1
0x40006c8	     0xf842f010000	                            je 0x40007fd	       561	power.c	FUNCTION_22	IF_1
0x40006ce	    0xf687b8010000	              test byte [rdi + 0x1b8], 1	       561	power.c	FUNCTION_22	IF_1
0x40006d5	     0xf84f5000000	                            je 0x40007d0	       561	power.c	FUNCTION_22	IF_1
0x40006db	            0x4157	                                push r15	       557	power.c	FUNCTION_22
0x40006dd	            0x4156	                                push r14	       557	power.c	FUNCTION_22
0x40006df	            0x4155	                                push r13	       557	power.c	FUNCTION_22
0x40006e1	            0x4154	                                push r12	       557	power.c	FUNCTION_22
0x40006e3	          0x4989fc	                            mov r12, rdi	       557	power.c	FUNCTION_22
0x40006e6	              0x55	                                push rbp	       557	power.c	FUNCTION_22
0x40006e7	              0x53	                                push rbx	       557	power.c	FUNCTION_22
0x40006e8	    0x48c7c7000000	                              mov rdi, 0	       564	power.c	FUNCTION_22	CALL_1
0x40006ef	          0x4531ed	                          xor r13d, r13d	       559	power.c	FUNCTION_22
0x40006f2	        0x4883ec08	                              sub rsp, 8	       557	power.c	FUNCTION_22
0x40006f6	        0x89742404	                mov dword [rsp + 4], esi	       557	power.c	FUNCTION_22
0x40006fa	      0xe800000000	                          call 0x40006ff	       564	power.c	FUNCTION_22	CALL_1
0x40006ff	    0x418b8424d801	           mov eax, dword [r12 + 0x1d8] 	       566	power.c	FUNCTION_22	IF_2
0x4000707	          0x8d5001	                      lea edx, [rax + 1]	       566	power.c	FUNCTION_22	IF_2
0x400070a	            0x85c0	                           test eax, eax	       566	power.c	FUNCTION_22	IF_2
0x400070c	    0x41899424d801	            mov dword [r12 + 0x1d8], edx	       566	power.c	FUNCTION_22	IF_2
0x4000714	     0xf8599000000	                           jne 0x40007b3	       566	power.c	FUNCTION_22	IF_2
0x400071a	    0x498bac24a801	           mov rbp, qword [r12 + 0x1a8] 	       569	power.c	FUNCTION_22	FUNCTION_1
0x4000722	    0x4d8db424a801	                  lea r14, [r12 + 0x1a8]	       569	power.c	FUNCTION_22	FUNCTION_1
0x400072a	          0x4939ee	                            cmp r14, rbp	       569	power.c	FUNCTION_22	FUNCTION_1
0x400072d	            0x7521	                           jne 0x4000750	       569	power.c	FUNCTION_22	FUNCTION_1
0x400072f	      0xe99e000000	                           jmp 0x40007d2	       569	power.c	FUNCTION_22	FUNCTION_1
0x4000734	    0xc68384050000	               mov byte [rbx + 0x584], 1	       577	power.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x400073b	          0x4c89ff	                            mov rdi, r15	       580	power.c	FUNCTION_22	FUNCTION_1	CALL_3
0x400073e	      0xe800000000	                          call 0x4000743	       580	power.c	FUNCTION_22	FUNCTION_1	CALL_3
0x4000743	        0x488b6d00	                    mov rbp, qword [rbp]	       569	power.c	FUNCTION_22	FUNCTION_1
0x4000747	          0x4c39f5	                            cmp rbp, r14	       569	power.c	FUNCTION_22	FUNCTION_1
0x400074a	     0xf8482000000	                            je 0x40007d2	       569	power.c	FUNCTION_22	FUNCTION_1
0x4000750	        0x488b5d10	            mov rbx, qword [rbp + 0x10] 	       570	power.c	FUNCTION_22	FUNCTION_1
0x4000754	    0x4c8dbb880500	                  lea r15, [rbx + 0x588]	       572	power.c	FUNCTION_22	FUNCTION_1	CALL_1
0x400075b	          0x4c89ff	                            mov rdi, r15	       572	power.c	FUNCTION_22	FUNCTION_1	CALL_1
0x400075e	      0xe800000000	                          call 0x4000763	       572	power.c	FUNCTION_22	FUNCTION_1	CALL_1
0x4000763	    0x80bb84050000	               cmp byte [rbx + 0x584], 0	       574	power.c	FUNCTION_22	FUNCTION_1	IF_1
0x400076a	            0x75cf	                           jne 0x400073b	       574	power.c	FUNCTION_22	FUNCTION_1	IF_1
0x400076c	    0x8b8380050000	           mov eax, dword [rbx + 0x580] 	       244	power.c	FUNCTION_9	IF_1
0x4000772	          0x8d4801	                      lea ecx, [rax + 1]	       244	power.c	FUNCTION_9	IF_1
0x4000775	            0x85c0	                           test eax, eax	       244	power.c	FUNCTION_9	IF_1
0x4000777	    0x898b80050000	            mov dword [rbx + 0x580], ecx	       244	power.c	FUNCTION_9	IF_1
0x400077d	            0x75b5	                           jne 0x4000734	       244	power.c	FUNCTION_9	IF_1
0x400077f	          0x4889df	                            mov rdi, rbx	       244	power.c	FUNCTION_9	IF_1
0x4000782	      0xe829fbffff	  call sym.acpi_power_on_unlocked.part.4	       244	power.c	FUNCTION_9	IF_1
0x4000787	            0x85c0	                           test eax, eax	       576	power.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x4000789	          0x4189c5	                           mov r13d, eax	       576	power.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x400078c	            0x74a6	                            je 0x4000734	       576	power.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x400078e	          0x4c89ff	                            mov rdi, r15	       580	power.c	FUNCTION_22	FUNCTION_1	CALL_3
0x4000791	      0xe800000000	                          call 0x4000796	       580	power.c	FUNCTION_22	FUNCTION_1	CALL_3
0x4000796	    0x498dbc245002	                  lea rdi, [r12 + 0x250]	       583	power.c	FUNCTION_22	FUNCTION_1	IF_3	CALL_4
0x400079e	    0x48c7c6000000	                              mov rsi, 0	       583	power.c	FUNCTION_22	FUNCTION_1	IF_3	CALL_4
0x40007a5	      0xe800000000	                          call 0x40007aa	       583	power.c	FUNCTION_22	FUNCTION_1	IF_3	CALL_4
0x40007aa	    0x4180a424b801	            and byte [r12 + 0x1b8], 0xfe	       585	power.c	FUNCTION_22	FUNCTION_1	IF_3
0x40007b3	    0x48c7c7000000	                              mov rdi, 0	       598	power.c	FUNCTION_22	CALL_3
0x40007ba	      0xe800000000	                          call 0x40007bf	       598	power.c	FUNCTION_22	CALL_3
0x40007bf	        0x4883c408	                              add rsp, 8	       600	power.c	FUNCTION_22
0x40007c3	          0x4489e8	                           mov eax, r13d	       599	power.c	FUNCTION_22
0x40007c6	              0x5b	                                 pop rbx	       600	power.c	FUNCTION_22
0x40007c7	              0x5d	                                 pop rbp	       600	power.c	FUNCTION_22
0x40007c8	            0x415c	                                 pop r12	       600	power.c	FUNCTION_22
0x40007ca	            0x415d	                                 pop r13	       600	power.c	FUNCTION_22
0x40007cc	            0x415e	                                 pop r14	       600	power.c	FUNCTION_22
0x40007ce	            0x415f	                                 pop r15	       600	power.c	FUNCTION_22
0x40007d0	            0xf3c3	                                     ret	       600	power.c	FUNCTION_22
0x40007d2	        0x8b542404	                mov edx, dword [rsp + 4]	       593	power.c	FUNCTION_22	CALL_2
0x40007d6	      0xb903000000	                              mov ecx, 3	       593	power.c	FUNCTION_22	CALL_2
0x40007db	      0xbe01000000	                              mov esi, 1	       593	power.c	FUNCTION_22	CALL_2
0x40007e0	          0x4c89e7	                            mov rdi, r12	       593	power.c	FUNCTION_22	CALL_2
0x40007e3	      0xe800000000	                          call 0x40007e8	       593	power.c	FUNCTION_22	CALL_2
0x40007e8	            0x85c0	                           test eax, eax	       594	power.c	FUNCTION_22	IF_3
0x40007ea	          0x4189c5	                           mov r13d, eax	       593	power.c	FUNCTION_22	CALL_2
0x40007ed	            0x74c4	                            je 0x40007b3	       594	power.c	FUNCTION_22	IF_3
0x40007ef	    0x41c78424d801	              mov dword [r12 + 0x1d8], 0	       595	power.c	FUNCTION_22	IF_3
0x40007fb	            0xebb6	                           jmp 0x40007b3	       595	power.c	FUNCTION_22	IF_3
0x40007fd	            0xf3c3	                                     ret	       600	power.c	FUNCTION_22
acpi_turn_off_unused_power_resources	ELSE,0:FOR,0:IF,0:SWITCH,0:functions,1:DO,0:WHILE,0:CALL,2	51
0x40010a0	              0x55	                                push rbp	       872	power.c	FUNCTION_33
0x40010a1	              0x53	                                push rbx	       872	power.c	FUNCTION_33
0x40010a2	    0x48c7c7000000	                              mov rdi, 0	       875	power.c	FUNCTION_33	CALL_1
0x40010a9	        0x4883ec10	                           sub rsp, 0x10	       872	power.c	FUNCTION_33
0x40010ad	    0x65488b042528	                mov rax, qword gs:[0x28]	       872	power.c	FUNCTION_33
0x40010b6	      0x4889442408	                mov qword [rsp + 8], rax	       872	power.c	FUNCTION_33
0x40010bb	            0x31c0	                            xor eax, eax	       872	power.c	FUNCTION_33
0x40010bd	      0xe800000000	                          call 0x40010c2	       875	power.c	FUNCTION_33	CALL_1
0x40010c2	    0x488b05000000	            mov rax, qword [0x040010c9] 	       877	power.c	FUNCTION_33	FUNCTION_1
0x40010c9	    0x483d00000000	                              cmp rax, 0	       877	power.c	FUNCTION_33	FUNCTION_1
0x40010cf	    0x488d98a0faff	                  lea rbx, [rax - 0x560]	       877	power.c	FUNCTION_33	FUNCTION_1
0x40010d6	            0x7520	                           jne 0x40010f8	       877	power.c	FUNCTION_33	FUNCTION_1
0x40010d8	            0xeb79	                           jmp 0x4001153	       877	power.c	FUNCTION_33	FUNCTION_1
0x40010da	          0x4889ef	                            mov rdi, rbp	       894	power.c	FUNCTION_33	FUNCTION_1	CALL_6
0x40010dd	      0xe800000000	                          call 0x40010e2	       894	power.c	FUNCTION_33	FUNCTION_1	CALL_6
0x40010e2	    0x488b83680500	           mov rax, qword [rbx + 0x568] 	       877	power.c	FUNCTION_33	FUNCTION_1
0x40010e9	    0x483d00000000	                              cmp rax, 0	       877	power.c	FUNCTION_33	FUNCTION_1
0x40010ef	    0x488d98a0faff	                  lea rbx, [rax - 0x560]	       877	power.c	FUNCTION_33	FUNCTION_1
0x40010f6	            0x745b	                            je 0x4001153	       877	power.c	FUNCTION_33	FUNCTION_1
0x40010f8	    0x488dab880500	                  lea rbp, [rbx + 0x588]	       880	power.c	FUNCTION_33	FUNCTION_1	CALL_1
0x40010ff	          0x4889ef	                            mov rdi, rbp	       880	power.c	FUNCTION_33	FUNCTION_1	CALL_1
0x4001102	      0xe800000000	                          call 0x4001107	       880	power.c	FUNCTION_33	FUNCTION_1	CALL_1
0x4001107	        0x488b7b08	                mov rdi, qword [rbx + 8]	       882	power.c	FUNCTION_33	FUNCTION_1	CALL_2
0x400110b	      0x488d742404	                      lea rsi, [rsp + 4]	       882	power.c	FUNCTION_33	FUNCTION_1	CALL_2
0x4001110	      0xe83bf0ffff	           call sym.acpi_power_get_state	       882	power.c	FUNCTION_33	FUNCTION_1	CALL_2
0x4001115	            0x85c0	                           test eax, eax	       883	power.c	FUNCTION_33	FUNCTION_1	IF_1
0x4001117	            0x75c1	                           jne 0x40010da	       883	power.c	FUNCTION_33	FUNCTION_1	IF_1
0x4001119	      0x837c240401	                  cmp dword [rsp + 4], 1	       888	power.c	FUNCTION_33	FUNCTION_1	IF_2
0x400111e	            0x75ba	                           jne 0x40010da	       888	power.c	FUNCTION_33	FUNCTION_1	IF_2
0x4001120	    0x8b8380050000	           mov eax, dword [rbx + 0x580] 	       889	power.c	FUNCTION_33	FUNCTION_1	IF_2
0x4001126	            0x85c0	                           test eax, eax	       889	power.c	FUNCTION_33	FUNCTION_1	IF_2
0x4001128	            0x75b0	                           jne 0x40010da	       889	power.c	FUNCTION_33	FUNCTION_1	IF_2
0x400112a	    0x488dbb500200	                  lea rdi, [rbx + 0x250]	       890	power.c	FUNCTION_33	FUNCTION_1	IF_2	CALL_4
0x4001131	    0x48c7c6000000	                              mov rsi, 0	       890	power.c	FUNCTION_33	FUNCTION_1	IF_2	CALL_4
0x4001138	      0xe800000000	                          call 0x400113d	       890	power.c	FUNCTION_33	FUNCTION_1	IF_2	CALL_4
0x400113d	        0x488b7b08	                mov rdi, qword [rbx + 8]	       270	power.c	FUNCTION_11	CALL_1
0x4001141	            0x31c9	                            xor ecx, ecx	       270	power.c	FUNCTION_11	CALL_1
0x4001143	            0x31d2	                            xor edx, edx	       270	power.c	FUNCTION_11	CALL_1
0x4001145	    0x48c7c6000000	                              mov rsi, 0	       270	power.c	FUNCTION_11	CALL_1
0x400114c	      0xe800000000	                          call 0x4001151	       270	power.c	FUNCTION_11	CALL_1
0x4001151	            0xeb87	                           jmp 0x40010da	       270	power.c	FUNCTION_11	CALL_1
0x4001153	    0x48c7c7000000	                              mov rdi, 0	       897	power.c	FUNCTION_33	CALL_2
0x400115a	      0xe800000000	                          call 0x400115f	       897	power.c	FUNCTION_33	CALL_2
0x400115f	      0x488b442408	                mov rax, qword [rsp + 8]	       898	power.c	FUNCTION_33
0x4001164	    0x654833042528	                xor rax, qword gs:[0x28]	       898	power.c	FUNCTION_33
0x400116d	            0x7507	                           jne 0x4001176	       898	power.c	FUNCTION_33
0x400116f	        0x4883c410	                           add rsp, 0x10	       898	power.c	FUNCTION_33
0x4001173	              0x5b	                                 pop rbx	       898	power.c	FUNCTION_33
0x4001174	              0x5d	                                 pop rbp	       898	power.c	FUNCTION_33
0x4001175	              0xc3	                                     ret	       898	power.c	FUNCTION_33
0x4001176	      0xe800000000	                  call section_end..text	       898	power.c	FUNCTION_33
acpi_resume_power_resources	ELSE,0:FOR,0:IF,0:SWITCH,0:functions,1:DO,0:WHILE,0:CALL,2	52
0x4000fc0	              0x55	                                push rbp	       843	power.c	FUNCTION_32
0x4000fc1	              0x53	                                push rbx	       843	power.c	FUNCTION_32
0x4000fc2	    0x48c7c7000000	                              mov rdi, 0	       846	power.c	FUNCTION_32	CALL_1
0x4000fc9	        0x4883ec10	                           sub rsp, 0x10	       843	power.c	FUNCTION_32
0x4000fcd	    0x65488b042528	                mov rax, qword gs:[0x28]	       843	power.c	FUNCTION_32
0x4000fd6	      0x4889442408	                mov qword [rsp + 8], rax	       843	power.c	FUNCTION_32
0x4000fdb	            0x31c0	                            xor eax, eax	       843	power.c	FUNCTION_32
0x4000fdd	      0xe800000000	                          call 0x4000fe2	       846	power.c	FUNCTION_32	CALL_1
0x4000fe2	    0x488b05000000	            mov rax, qword [0x04000fe9] 	       848	power.c	FUNCTION_32	FUNCTION_1
0x4000fe9	    0x483d00000000	                              cmp rax, 0	       848	power.c	FUNCTION_32	FUNCTION_1
0x4000fef	    0x488d98a0faff	                  lea rbx, [rax - 0x560]	       848	power.c	FUNCTION_32	FUNCTION_1
0x4000ff6	            0x7520	                           jne 0x4001018	       848	power.c	FUNCTION_32	FUNCTION_1
0x4000ff8	            0xeb7a	                           jmp 0x4001074	       848	power.c	FUNCTION_32	FUNCTION_1
0x4000ffa	          0x4889ef	                            mov rdi, rbp	       865	power.c	FUNCTION_32	FUNCTION_1	CALL_6
0x4000ffd	      0xe800000000	                          call 0x4001002	       865	power.c	FUNCTION_32	FUNCTION_1	CALL_6
0x4001002	    0x488b83600500	           mov rax, qword [rbx + 0x560] 	       848	power.c	FUNCTION_32	FUNCTION_1
0x4001009	    0x483d00000000	                              cmp rax, 0	       848	power.c	FUNCTION_32	FUNCTION_1
0x400100f	    0x488d98a0faff	                  lea rbx, [rax - 0x560]	       848	power.c	FUNCTION_32	FUNCTION_1
0x4001016	            0x745c	                            je 0x4001074	       848	power.c	FUNCTION_32	FUNCTION_1
0x4001018	    0x488dab880500	                  lea rbp, [rbx + 0x588]	       851	power.c	FUNCTION_32	FUNCTION_1	CALL_1
0x400101f	          0x4889ef	                            mov rdi, rbp	       851	power.c	FUNCTION_32	FUNCTION_1	CALL_1
0x4001022	      0xe800000000	                          call 0x4001027	       851	power.c	FUNCTION_32	FUNCTION_1	CALL_1
0x4001027	        0x488b7b08	                mov rdi, qword [rbx + 8]	       853	power.c	FUNCTION_32	FUNCTION_1	CALL_2
0x400102b	      0x488d742404	                      lea rsi, [rsp + 4]	       853	power.c	FUNCTION_32	FUNCTION_1	CALL_2
0x4001030	      0xe81bf1ffff	           call sym.acpi_power_get_state	       853	power.c	FUNCTION_32	FUNCTION_1	CALL_2
0x4001035	            0x85c0	                           test eax, eax	       854	power.c	FUNCTION_32	FUNCTION_1	IF_1
0x4001037	            0x75c1	                           jne 0x4000ffa	       854	power.c	FUNCTION_32	FUNCTION_1	IF_1
0x4001039	        0x8b542404	                mov edx, dword [rsp + 4]	       859	power.c	FUNCTION_32	FUNCTION_1	IF_2
0x400103d	            0x85d2	                           test edx, edx	       859	power.c	FUNCTION_32	FUNCTION_1	IF_2
0x400103f	            0x75b9	                           jne 0x4000ffa	       859	power.c	FUNCTION_32	FUNCTION_1	IF_2
0x4001041	    0x8b8380050000	           mov eax, dword [rbx + 0x580] 	       860	power.c	FUNCTION_32	FUNCTION_1	IF_2
0x4001047	            0x85c0	                           test eax, eax	       860	power.c	FUNCTION_32	FUNCTION_1	IF_2
0x4001049	            0x74af	                            je 0x4000ffa	       860	power.c	FUNCTION_32	FUNCTION_1	IF_2
0x400104b	    0x488dbb500200	                  lea rdi, [rbx + 0x250]	       861	power.c	FUNCTION_32	FUNCTION_1	IF_2	CALL_4
0x4001052	    0x48c7c6000000	                              mov rsi, 0	       861	power.c	FUNCTION_32	FUNCTION_1	IF_2	CALL_4
0x4001059	      0xe800000000	                          call 0x400105e	       861	power.c	FUNCTION_32	FUNCTION_1	IF_2	CALL_4
0x400105e	        0x488b7b08	                mov rdi, qword [rbx + 8]	       230	power.c	FUNCTION_8	CALL_1
0x4001062	            0x31c9	                            xor ecx, ecx	       230	power.c	FUNCTION_8	CALL_1
0x4001064	            0x31d2	                            xor edx, edx	       230	power.c	FUNCTION_8	CALL_1
0x4001066	    0x48c7c6000000	                              mov rsi, 0	       230	power.c	FUNCTION_8	CALL_1
0x400106d	      0xe800000000	                          call 0x4001072	       230	power.c	FUNCTION_8	CALL_1
0x4001072	            0xeb86	                           jmp 0x4000ffa	       230	power.c	FUNCTION_8	CALL_1
0x4001074	    0x48c7c7000000	                              mov rdi, 0	       868	power.c	FUNCTION_32	CALL_2
0x400107b	      0xe800000000	                          call 0x4001080	       868	power.c	FUNCTION_32	CALL_2
0x4001080	      0x488b442408	                mov rax, qword [rsp + 8]	       869	power.c	FUNCTION_32
0x4001085	    0x654833042528	                xor rax, qword gs:[0x28]	       869	power.c	FUNCTION_32
0x400108e	            0x7507	                           jne 0x4001097	       869	power.c	FUNCTION_32
0x4001090	        0x4883c410	                           add rsp, 0x10	       869	power.c	FUNCTION_32
0x4001094	              0x5b	                                 pop rbx	       869	power.c	FUNCTION_32
0x4001095	              0x5d	                                 pop rbp	       869	power.c	FUNCTION_32
0x4001096	              0xc3	                                     ret	       869	power.c	FUNCTION_32
0x4001097	      0xe800000000	                          call 0x400109c	       869	power.c	FUNCTION_32
acpi_power_get_state	ELSE,0:FOR,0:IF,2:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,4	42
0x4000150	              0x55	                                push rbp	       168	power.c	FUNCTION_6
0x4000151	              0x53	                                push rbx	       168	power.c	FUNCTION_6
0x4000152	        0x4883ec28	                           sub rsp, 0x28	       168	power.c	FUNCTION_6
0x4000156	    0x65488b042528	                mov rax, qword gs:[0x28]	       168	power.c	FUNCTION_6
0x400015f	      0x4889442420	             mov qword [rsp + 0x20], rax	       168	power.c	FUNCTION_6
0x4000164	            0x31c0	                            xor eax, eax	       168	power.c	FUNCTION_6
0x4000166	      0x488d44241b	                   lea rax, [rsp + 0x1b]	       172	power.c	FUNCTION_6
0x400016b	          0x4885ff	                           test rdi, rdi	       175	power.c	FUNCTION_6	IF_1
0x400016e	    0x48c704240000	                      mov qword [rsp], 0	       170	power.c	FUNCTION_6
0x4000176	    0x48c744240805	                  mov qword [rsp + 8], 5	       172	power.c	FUNCTION_6
0x400017f	      0x4889442410	             mov qword [rsp + 0x10], rax	       172	power.c	FUNCTION_6
0x4000184	            0x745b	                            je 0x40001e1	       175	power.c	FUNCTION_6	IF_1
0x4000186	          0x4885f6	                           test rsi, rsi	       175	power.c	FUNCTION_6	IF_1
0x4000189	          0x4889f5	                            mov rbp, rsi	       175	power.c	FUNCTION_6	IF_1
0x400018c	            0x7453	                            je 0x40001e1	       175	power.c	FUNCTION_6	IF_1
0x400018e	            0x31d2	                            xor edx, edx	       178	power.c	FUNCTION_6	CALL_1
0x4000190	          0x4889e1	                            mov rcx, rsp	       178	power.c	FUNCTION_6	CALL_1
0x4000193	    0x48c7c6000000	                              mov rsi, 0	       178	power.c	FUNCTION_6	CALL_1
0x400019a	          0x4889fb	                            mov rbx, rdi	       178	power.c	FUNCTION_6	CALL_1
0x400019d	      0xe800000000	                          call 0x40001a2	       178	power.c	FUNCTION_6	CALL_1
0x40001a2	            0x85c0	                           test eax, eax	       179	power.c	FUNCTION_6	IF_2	CALL_2
0x40001a4	      0xbaedffffff	                     mov edx, 0xffffffed	       180	power.c	FUNCTION_6	IF_2
0x40001a9	            0x751d	                           jne 0x40001c8	       179	power.c	FUNCTION_6	IF_2	CALL_2
0x40001ab	          0x8b0424	                    mov eax, dword [rsp]	       182	power.c	FUNCTION_6
0x40001ae	      0x488d542408	                      lea rdx, [rsp + 8]	       185	power.c	FUNCTION_6	CALL_3
0x40001b3	      0xbe01000000	                              mov esi, 1	       185	power.c	FUNCTION_6	CALL_3
0x40001b8	          0x4889df	                            mov rdi, rbx	       185	power.c	FUNCTION_6	CALL_3
0x40001bb	          0x83e001	                              and eax, 1	       182	power.c	FUNCTION_6
0x40001be	          0x894500	                    mov dword [rbp], eax	       182	power.c	FUNCTION_6
0x40001c1	      0xe800000000	                          call 0x40001c6	       185	power.c	FUNCTION_6	CALL_3
0x40001c6	            0x31d2	                            xor edx, edx	       191	power.c	FUNCTION_6
0x40001c8	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       192	power.c	FUNCTION_6
0x40001cd	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       192	power.c	FUNCTION_6
0x40001d6	            0x89d0	                            mov eax, edx	       192	power.c	FUNCTION_6
0x40001d8	            0x750e	                           jne 0x40001e8	       192	power.c	FUNCTION_6
0x40001da	        0x4883c428	                           add rsp, 0x28	       192	power.c	FUNCTION_6
0x40001de	              0x5b	                                 pop rbx	       192	power.c	FUNCTION_6
0x40001df	              0x5d	                                 pop rbp	       192	power.c	FUNCTION_6
0x40001e0	              0xc3	                                     ret	       192	power.c	FUNCTION_6
0x40001e1	      0xbaeaffffff	                     mov edx, 0xffffffea	       176	power.c	FUNCTION_6	IF_1
0x40001e6	            0xebe0	                           jmp 0x40001c8	       176	power.c	FUNCTION_6	IF_1
0x40001e8	      0xe800000000	                          call 0x40001ed	       192	power.c	FUNCTION_6
acpi_power_on_resources	ELSE,0:FOR,0:IF,1:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,1	10
0x4000a40	          0x4885ff	                           test rdi, rdi	       694	power.c	FUNCTION_25	IF_1
0x4000a43	            0x7419	                            je 0x4000a5e	       694	power.c	FUNCTION_25	IF_1
0x4000a45	          0x83fe03	                              cmp esi, 3	       694	power.c	FUNCTION_25	IF_1
0x4000a48	            0x7714	                            ja 0x4000a5e	       694	power.c	FUNCTION_25	IF_1
0x4000a4a	          0x4863f6	                         movsxd rsi, esi	       697	power.c	FUNCTION_25	CALL_1
0x4000a4d	        0x48c1e605	                              shl rsi, 5	       697	power.c	FUNCTION_25	CALL_1
0x4000a51	    0x488dbc370001	           lea rdi, [rdi + rsi + 0x100] 	       697	power.c	FUNCTION_25	CALL_1
0x4000a59	      0xe962f9ffff	              jmp sym.acpi_power_on_list	       697	power.c	FUNCTION_25	CALL_1
0x4000a5e	      0xb8eaffffff	                     mov eax, 0xffffffea	       698	power.c	FUNCTION_25
0x4000a63	              0xc3	                                     ret	       698	power.c	FUNCTION_25
acpi_power_on	ELSE,0:FOR,0:IF,0:SWITCH,0:functions,0:DO,0:WHILE,0:CALL,3	23
0x40002e0	            0x4154	                                push r12	       257	power.c	FUNCTION_10
0x40002e2	              0x55	                                push rbp	       257	power.c	FUNCTION_10
0x40002e3	    0x488daf880500	                  lea rbp, [rdi + 0x588]	       260	power.c	FUNCTION_10	CALL_1
0x40002ea	              0x53	                                push rbx	       257	power.c	FUNCTION_10
0x40002eb	          0x4889fb	                            mov rbx, rdi	       257	power.c	FUNCTION_10
0x40002ee	          0x4531e4	                          xor r12d, r12d	       257	power.c	FUNCTION_10
0x40002f1	          0x4889ef	                            mov rdi, rbp	       260	power.c	FUNCTION_10	CALL_1
0x40002f4	      0xe800000000	                          call 0x40002f9	       260	power.c	FUNCTION_10	CALL_1
0x40002f9	    0x8b9380050000	           mov edx, dword [rbx + 0x580] 	       244	power.c	FUNCTION_9	IF_1
0x40002ff	          0x8d4201	                      lea eax, [rdx + 1]	       244	power.c	FUNCTION_9	IF_1
0x4000302	            0x85d2	                           test edx, edx	       244	power.c	FUNCTION_9	IF_1
0x4000304	    0x898380050000	            mov dword [rbx + 0x580], eax	       244	power.c	FUNCTION_9	IF_1
0x400030a	            0x750b	                           jne 0x4000317	       244	power.c	FUNCTION_9	IF_1
0x400030c	          0x4889df	                            mov rdi, rbx	       244	power.c	FUNCTION_9	IF_1
0x400030f	      0xe89cffffff	  call sym.acpi_power_on_unlocked.part.4	       244	power.c	FUNCTION_9	IF_1
0x4000314	          0x4189c4	                           mov r12d, eax	       244	power.c	FUNCTION_9	IF_1
0x4000317	          0x4889ef	                            mov rdi, rbp	       262	power.c	FUNCTION_10	CALL_3
0x400031a	      0xe800000000	                          call 0x400031f	       262	power.c	FUNCTION_10	CALL_3
0x400031f	          0x4489e0	                           mov eax, r12d	       264	power.c	FUNCTION_10
0x4000322	              0x5b	                                 pop rbx	       264	power.c	FUNCTION_10
0x4000323	              0x5d	                                 pop rbp	       264	power.c	FUNCTION_10
0x4000324	            0x415c	                                 pop r12	       264	power.c	FUNCTION_10
0x4000326	              0xc3	                                     ret	       264	power.c	FUNCTION_10
acpi_power_on_list	ELSE,0:FOR,0:IF,0:SWITCH,0:functions,1:DO,0:WHILE,0:CALL,2	32
0x40003c0	            0x4154	                                push r12	       333	power.c	FUNCTION_15
0x40003c2	              0x55	                                push rbp	       333	power.c	FUNCTION_15
0x40003c3	          0x4989fc	                            mov r12, rdi	       333	power.c	FUNCTION_15
0x40003c6	              0x53	                                push rbx	       333	power.c	FUNCTION_15
0x40003c7	          0x488b1f	                    mov rbx, qword [rdi]	       337	power.c	FUNCTION_15	FUNCTION_1
0x40003ca	          0x4839df	                            cmp rdi, rbx	       337	power.c	FUNCTION_15	FUNCTION_1
0x40003cd	            0x750a	                           jne 0x40003d9	       337	power.c	FUNCTION_15	FUNCTION_1
0x40003cf	            0xeb32	                           jmp 0x4000403	       337	power.c	FUNCTION_15	FUNCTION_1
0x40003d1	          0x488b1b	                    mov rbx, qword [rbx]	       337	power.c	FUNCTION_15	FUNCTION_1
0x40003d4	          0x4939dc	                            cmp r12, rbx	       337	power.c	FUNCTION_15	FUNCTION_1
0x40003d7	            0x742a	                            je 0x4000403	       337	power.c	FUNCTION_15	FUNCTION_1
0x40003d9	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       338	power.c	FUNCTION_15	FUNCTION_1	CALL_1
0x40003dd	      0xe8fefeffff	                  call sym.acpi_power_on	       338	power.c	FUNCTION_15	FUNCTION_1	CALL_1
0x40003e2	            0x85c0	                           test eax, eax	       339	power.c	FUNCTION_15	FUNCTION_1	IF_1
0x40003e4	            0x89c5	                            mov ebp, eax	       338	power.c	FUNCTION_15	FUNCTION_1	CALL_1
0x40003e6	            0x74e9	                            je 0x40003d1	       339	power.c	FUNCTION_15	FUNCTION_1	IF_1
0x40003e8	            0xeb09	                           jmp 0x40003f3	       339	power.c	FUNCTION_15	FUNCTION_1	IF_1
0x40003ea	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       346	power.c	FUNCTION_15	CALL_2
0x40003ee	      0xe86dffffff	                 call sym.acpi_power_off	       346	power.c	FUNCTION_15	CALL_2
0x40003f3	        0x488b5b08	                mov rbx, qword [rbx + 8]	       345	power.c	FUNCTION_15	CALL_1
0x40003f7	          0x4939dc	                            cmp r12, rbx	       345	power.c	FUNCTION_15	CALL_1
0x40003fa	            0x75ee	                           jne 0x40003ea	       345	power.c	FUNCTION_15	CALL_1
0x40003fc	            0x89e8	                            mov eax, ebp	       338	power.c	FUNCTION_15	FUNCTION_1	CALL_1
0x40003fe	              0x5b	                                 pop rbx	       349	power.c	FUNCTION_15
0x40003ff	              0x5d	                                 pop rbp	       349	power.c	FUNCTION_15
0x4000400	            0x415c	                                 pop r12	       349	power.c	FUNCTION_15
0x4000402	              0xc3	                                     ret	       349	power.c	FUNCTION_15
0x4000403	              0x5b	                                 pop rbx	       349	power.c	FUNCTION_15
0x4000404	            0x31c0	                            xor eax, eax	       342	power.c	FUNCTION_15
0x4000406	              0x5d	                                 pop rbp	       349	power.c	FUNCTION_15
0x4000407	            0x415c	                                 pop r12	       349	power.c	FUNCTION_15
0x4000409	              0xc3	                                     ret	       349	power.c	FUNCTION_15
