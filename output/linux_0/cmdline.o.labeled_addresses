memparse	CALL,1:SWITCH,1:IF,1:ELSE,0:WHILE,0:DO,0:functions,0:FOR,0	36
0x4000170	              0x53	                                push rbx	       129	cmdline.c	FUNCTION_4
0x4000171	            0x31d2	                            xor edx, edx	       132	cmdline.c	FUNCTION_4	CALL_1
0x4000173	          0x4889f3	                            mov rbx, rsi	       129	cmdline.c	FUNCTION_4
0x4000176	        0x4883ec10	                           sub rsp, 0x10	       129	cmdline.c	FUNCTION_4
0x400017a	          0x4889e6	                            mov rsi, rsp	       132	cmdline.c	FUNCTION_4	CALL_1
0x400017d	    0x65488b042528	                mov rax, qword gs:[0x28]	       129	cmdline.c	FUNCTION_4
0x4000186	      0x4889442408	                mov qword [rsp + 8], rax	       129	cmdline.c	FUNCTION_4
0x400018b	            0x31c0	                            xor eax, eax	       129	cmdline.c	FUNCTION_4
0x400018d	      0xe800000000	                          call 0x4000192	       132	cmdline.c	FUNCTION_4	CALL_1
0x4000192	        0x488b0c24	                    mov rcx, qword [rsp]	       134	cmdline.c	FUNCTION_4	SWITCH_1
0x4000196	           0xfb631	                   movzx esi, byte [rcx]	       134	cmdline.c	FUNCTION_4	SWITCH_1
0x4000199	          0x8d56bb	                   lea edx, [rsi - 0x45]	       134	cmdline.c	FUNCTION_4	SWITCH_1
0x400019c	          0x80fa2f	                            cmp dl, 0x2f	       134	cmdline.c	FUNCTION_4	SWITCH_1
0x400019f	            0x7730	                            ja 0x40001d1	       134	cmdline.c	FUNCTION_4	SWITCH_1
0x40001a1	           0xfb6d2	                           movzx edx, dl	       134	cmdline.c	FUNCTION_4	SWITCH_1
0x40001a4	    0x488b14d50000	                  mov rdx, qword [rdx*8]	       134	cmdline.c	FUNCTION_4	SWITCH_1
0x40001ac	      0xe900000000	                           jmp 0x40001b1	       134	cmdline.c	FUNCTION_4	SWITCH_1
0x40001b1	        0x48c1e00a	                            shl rax, 0xa	       137	cmdline.c	FUNCTION_4	SWITCH_1
0x40001b5	        0x48c1e00a	                            shl rax, 0xa	       140	cmdline.c	FUNCTION_4	SWITCH_1
0x40001b9	        0x48c1e00a	                            shl rax, 0xa	       143	cmdline.c	FUNCTION_4	SWITCH_1
0x40001bd	        0x48c1e00a	                            shl rax, 0xa	       146	cmdline.c	FUNCTION_4	SWITCH_1
0x40001c1	        0x48c1e00a	                            shl rax, 0xa	       149	cmdline.c	FUNCTION_4	SWITCH_1
0x40001c5	        0x4883c101	                              add rcx, 1	       153	cmdline.c	FUNCTION_4	SWITCH_1
0x40001c9	        0x48c1e00a	                            shl rax, 0xa	       152	cmdline.c	FUNCTION_4	SWITCH_1
0x40001cd	        0x48890c24	                    mov qword [rsp], rcx	       153	cmdline.c	FUNCTION_4	SWITCH_1
0x40001d1	          0x4885db	                           test rbx, rbx	       158	cmdline.c	FUNCTION_4	IF_1
0x40001d4	            0x7407	                            je 0x40001dd	       158	cmdline.c	FUNCTION_4	IF_1
0x40001d6	        0x488b1424	                    mov rdx, qword [rsp]	       159	cmdline.c	FUNCTION_4	IF_1
0x40001da	          0x488913	                    mov qword [rbx], rdx	       159	cmdline.c	FUNCTION_4	IF_1
0x40001dd	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       162	cmdline.c	FUNCTION_4
0x40001e2	    0x6548331c2528	                xor rbx, qword gs:[0x28]	       162	cmdline.c	FUNCTION_4
0x40001eb	            0x7506	                           jne 0x40001f3	       162	cmdline.c	FUNCTION_4
0x40001ed	        0x4883c410	                           add rsp, 0x10	       162	cmdline.c	FUNCTION_4
0x40001f1	              0x5b	                                 pop rbx	       162	cmdline.c	FUNCTION_4
0x40001f2	              0xc3	                                     ret	       162	cmdline.c	FUNCTION_4
0x40001f3	      0xe800000000	                          call 0x40001f8	       162	cmdline.c	FUNCTION_4
get_option	CALL,1:SWITCH,0:IF,4:ELSE,0:WHILE,0:DO,0:functions,0:FOR,0	41
0x4000040	            0x4154	                                push r12	        54	cmdline.c	FUNCTION_2
0x4000042	              0x55	                                push rbp	        54	cmdline.c	FUNCTION_2
0x4000043	              0x53	                                push rbx	        54	cmdline.c	FUNCTION_2
0x4000044	          0x488b1f	                    mov rbx, qword [rdi]	        55	cmdline.c	FUNCTION_2
0x4000047	          0x4885db	                           test rbx, rbx	        57	cmdline.c	FUNCTION_2	IF_1
0x400004a	            0x7405	                            je 0x4000051	        57	cmdline.c	FUNCTION_2	IF_1
0x400004c	          0x803b00	                       cmp byte [rbx], 0	        57	cmdline.c	FUNCTION_2	IF_1
0x400004f	            0x7507	                           jne 0x4000058	        57	cmdline.c	FUNCTION_2	IF_1
0x4000051	              0x5b	                                 pop rbx	        70	cmdline.c	FUNCTION_2
0x4000052	            0x31c0	                            xor eax, eax	        58	cmdline.c	FUNCTION_2	IF_1
0x4000054	              0x5d	                                 pop rbp	        70	cmdline.c	FUNCTION_2
0x4000055	            0x415c	                                 pop r12	        70	cmdline.c	FUNCTION_2
0x4000057	              0xc3	                                     ret	        70	cmdline.c	FUNCTION_2
0x4000058	          0x4989f4	                            mov r12, rsi	        70	cmdline.c	FUNCTION_2
0x400005b	          0x4889fd	                            mov rbp, rdi	        70	cmdline.c	FUNCTION_2
0x400005e	            0x31d2	                            xor edx, edx	        59	cmdline.c	FUNCTION_2	CALL_1
0x4000060	          0x4889fe	                            mov rsi, rdi	        59	cmdline.c	FUNCTION_2	CALL_1
0x4000063	          0x4889df	                            mov rdi, rbx	        59	cmdline.c	FUNCTION_2	CALL_1
0x4000066	      0xe800000000	                          call 0x400006b	        59	cmdline.c	FUNCTION_2	CALL_1
0x400006b	        0x41890424	                    mov dword [r12], eax	        59	cmdline.c	FUNCTION_2	CALL_1
0x400006f	        0x488b4500	                    mov rax, qword [rbp]	        60	cmdline.c	FUNCTION_2	IF_2
0x4000073	          0x4839c3	                            cmp rbx, rax	        60	cmdline.c	FUNCTION_2	IF_2
0x4000076	            0x74d9	                            je 0x4000051	        60	cmdline.c	FUNCTION_2	IF_2
0x4000078	           0xfb610	                   movzx edx, byte [rax]	        62	cmdline.c	FUNCTION_2	IF_3
0x400007b	          0x80fa2c	                            cmp dl, 0x2c	        62	cmdline.c	FUNCTION_2	IF_3
0x400007e	            0x7411	                            je 0x4000091	        62	cmdline.c	FUNCTION_2	IF_3
0x4000080	            0x31c0	                            xor eax, eax	        69	cmdline.c	FUNCTION_2
0x4000082	          0x80fa2d	                            cmp dl, 0x2d	        69	cmdline.c	FUNCTION_2
0x4000085	           0xf94c0	                                 sete al	        69	cmdline.c	FUNCTION_2
0x4000088	              0x5b	                                 pop rbx	        70	cmdline.c	FUNCTION_2
0x4000089	        0x8d440001	                lea eax, [rax + rax + 1]	        69	cmdline.c	FUNCTION_2
0x400008d	              0x5d	                                 pop rbp	        70	cmdline.c	FUNCTION_2
0x400008e	            0x415c	                                 pop r12	        70	cmdline.c	FUNCTION_2
0x4000090	              0xc3	                                     ret	        70	cmdline.c	FUNCTION_2
0x4000091	        0x4883c001	                              add rax, 1	        63	cmdline.c	FUNCTION_2	IF_3
0x4000095	        0x48894500	                    mov qword [rbp], rax	        63	cmdline.c	FUNCTION_2	IF_3
0x4000099	      0xb802000000	                              mov eax, 2	        64	cmdline.c	FUNCTION_2	IF_3
0x400009e	              0x5b	                                 pop rbx	        70	cmdline.c	FUNCTION_2
0x400009f	              0x5d	                                 pop rbp	        70	cmdline.c	FUNCTION_2
0x40000a0	            0x415c	                                 pop r12	        70	cmdline.c	FUNCTION_2
0x40000a2	              0xc3	                                     ret	        70	cmdline.c	FUNCTION_2
get_options	CALL,2:SWITCH,0:IF,4:ELSE,0:WHILE,1:DO,0:functions,0:FOR,0	67
0x40000b0	            0x4156	                                push r14	        91	cmdline.c	FUNCTION_3
0x40000b2	            0x4155	                                push r13	        91	cmdline.c	FUNCTION_3
0x40000b4	          0x4989d5	                            mov r13, rdx	        91	cmdline.c	FUNCTION_3
0x40000b7	            0x4154	                                push r12	        91	cmdline.c	FUNCTION_3
0x40000b9	              0x55	                                push rbp	        91	cmdline.c	FUNCTION_3
0x40000ba	              0x53	                                push rbx	        91	cmdline.c	FUNCTION_3
0x40000bb	        0x4883ec08	                              sub rsp, 8	        91	cmdline.c	FUNCTION_3
0x40000bf	          0x83fe01	                              cmp esi, 1	        94	cmdline.c	FUNCTION_3	WHILE_1
0x40000c2	        0x48893c24	                    mov qword [rsp], rdi	        91	cmdline.c	FUNCTION_3
0x40000c6	     0xf8e95000000	                           jle 0x4000161	        94	cmdline.c	FUNCTION_3	WHILE_1
0x40000cc	          0x4189f6	                           mov r14d, esi	        94	cmdline.c	FUNCTION_3	WHILE_1
0x40000cf	      0xbd01000000	                              mov ebp, 1	        94	cmdline.c	FUNCTION_3	WHILE_1
0x40000d4	            0xeb0f	                           jmp 0x40000e5	        94	cmdline.c	FUNCTION_3	WHILE_1
0x40000d6	          0x83f801	                              cmp eax, 1	       111	cmdline.c	FUNCTION_3	WHILE_1	IF_4
0x40000d9	          0x8d5501	                      lea edx, [rbp + 1]	       110	cmdline.c	FUNCTION_3	WHILE_1
0x40000dc	            0x746e	                            je 0x400014c	       111	cmdline.c	FUNCTION_3	WHILE_1	IF_4
0x40000de	            0x89d5	                            mov ebp, edx	       110	cmdline.c	FUNCTION_3	WHILE_1
0x40000e0	          0x4139ee	                           cmp r14d, ebp	        94	cmdline.c	FUNCTION_3	WHILE_1
0x40000e3	            0x7e64	                           jle 0x4000149	        94	cmdline.c	FUNCTION_3	WHILE_1
0x40000e5	          0x4863c5	                         movsxd rax, ebp	        95	cmdline.c	FUNCTION_3	WHILE_1	CALL_1
0x40000e8	          0x4889e7	                            mov rdi, rsp	        95	cmdline.c	FUNCTION_3	WHILE_1	CALL_1
0x40000eb	      0x498d5c8500	                  lea rbx, [r13 + rax*4]	        95	cmdline.c	FUNCTION_3	WHILE_1	CALL_1
0x40000f0	          0x4889de	                            mov rsi, rbx	        95	cmdline.c	FUNCTION_3	WHILE_1	CALL_1
0x40000f3	      0xe800000000	                          call 0x40000f8	        95	cmdline.c	FUNCTION_3	WHILE_1	CALL_1
0x40000f8	            0x85c0	                           test eax, eax	        96	cmdline.c	FUNCTION_3	WHILE_1	IF_1
0x40000fa	            0x744d	                            je 0x4000149	        96	cmdline.c	FUNCTION_3	WHILE_1	IF_1
0x40000fc	          0x83f803	                              cmp eax, 3	        98	cmdline.c	FUNCTION_3	WHILE_1	IF_2
0x40000ff	            0x75d5	                           jne 0x40000d6	        98	cmdline.c	FUNCTION_3	WHILE_1	IF_2
0x4000101	        0x488b0424	                    mov rax, qword [rsp]	        30	cmdline.c	FUNCTION_1
0x4000105	            0x31d2	                            xor edx, edx	        31	cmdline.c	FUNCTION_1	CALL_1
0x4000107	            0x31f6	                            xor esi, esi	        31	cmdline.c	FUNCTION_1	CALL_1
0x4000109	          0x4589f4	                          mov r12d, r14d	       100	cmdline.c	FUNCTION_3	WHILE_1	IF_2	CALL_2
0x400010c	          0x4129ec	                           sub r12d, ebp	       100	cmdline.c	FUNCTION_3	WHILE_1	IF_2	CALL_2
0x400010f	        0x488d7801	                      lea rdi, [rax + 1]	        30	cmdline.c	FUNCTION_1
0x4000113	        0x48893c24	                    mov qword [rsp], rdi	        30	cmdline.c	FUNCTION_1
0x4000117	      0xe800000000	                          call 0x400011c	        31	cmdline.c	FUNCTION_1	CALL_1
0x400011c	            0x8b13	                    mov edx, dword [rbx]	        32	cmdline.c	FUNCTION_1
0x400011e	            0x89c6	                            mov esi, eax	        32	cmdline.c	FUNCTION_1
0x4000120	            0x89c1	                            mov ecx, eax	        31	cmdline.c	FUNCTION_1	CALL_1
0x4000122	            0x29d6	                            sub esi, edx	        32	cmdline.c	FUNCTION_1
0x4000124	            0x39d0	                            cmp eax, edx	        33	cmdline.c	FUNCTION_1	FOR_1
0x4000126	            0x7f06	                            jg 0x400012e	        33	cmdline.c	FUNCTION_1	FOR_1
0x4000128	            0xeb14	                           jmp 0x400013e	        33	cmdline.c	FUNCTION_1	FOR_1
0x400012a	            0x39d1	                            cmp ecx, edx	        33	cmdline.c	FUNCTION_1	FOR_1
0x400012c	            0x7e10	                           jle 0x400013e	        33	cmdline.c	FUNCTION_1	FOR_1
0x400012e	        0x4883c304	                              add rbx, 4	        34	cmdline.c	FUNCTION_1	FOR_1
0x4000132	          0x8953fc	                mov dword [rbx - 4], edx	        34	cmdline.c	FUNCTION_1	FOR_1
0x4000135	          0x83c201	                              add edx, 1	        33	cmdline.c	FUNCTION_1	FOR_1
0x4000138	        0x4183ec01	                             sub r12d, 1	        33	cmdline.c	FUNCTION_1	FOR_1
0x400013c	            0x75ec	                           jne 0x400012a	        33	cmdline.c	FUNCTION_1	FOR_1
0x400013e	            0x85f6	                           test esi, esi	       101	cmdline.c	FUNCTION_3	WHILE_1	IF_2	IF_3
0x4000140	            0x7807	                            js 0x4000149	       101	cmdline.c	FUNCTION_3	WHILE_1	IF_2	IF_3
0x4000142	             0x1f5	                            add ebp, esi	       110	cmdline.c	FUNCTION_3	WHILE_1
0x4000144	          0x4139ee	                           cmp r14d, ebp	        94	cmdline.c	FUNCTION_3	WHILE_1
0x4000147	            0x7f9c	                            jg 0x40000e5	        94	cmdline.c	FUNCTION_3	WHILE_1
0x4000149	          0x83ed01	                              sub ebp, 1	        94	cmdline.c	FUNCTION_3	WHILE_1
0x400014c	        0x41896d00	                    mov dword [r13], ebp	       114	cmdline.c	FUNCTION_3
0x4000150	        0x488b0424	                    mov rax, qword [rsp]	       116	cmdline.c	FUNCTION_3
0x4000154	        0x4883c408	                              add rsp, 8	       116	cmdline.c	FUNCTION_3
0x4000158	              0x5b	                                 pop rbx	       116	cmdline.c	FUNCTION_3
0x4000159	              0x5d	                                 pop rbp	       116	cmdline.c	FUNCTION_3
0x400015a	            0x415c	                                 pop r12	       116	cmdline.c	FUNCTION_3
0x400015c	            0x415d	                                 pop r13	       116	cmdline.c	FUNCTION_3
0x400015e	            0x415e	                                 pop r14	       116	cmdline.c	FUNCTION_3
0x4000160	              0xc3	                                     ret	       116	cmdline.c	FUNCTION_3
0x4000161	            0x31ed	                            xor ebp, ebp	        94	cmdline.c	FUNCTION_3	WHILE_1
0x4000163	            0xebe7	                           jmp 0x400014c	        94	cmdline.c	FUNCTION_3	WHILE_1
parse_option_str	CALL,3:SWITCH,0:IF,3:ELSE,0:WHILE,2:DO,0:functions,0:FOR,0	50
0x4000200	            0x4155	                                push r13	       176	cmdline.c	FUNCTION_5
0x4000202	          0x4989f5	                            mov r13, rsi	       176	cmdline.c	FUNCTION_5
0x4000205	            0x4154	                                push r12	       176	cmdline.c	FUNCTION_5
0x4000207	              0x55	                                push rbp	       176	cmdline.c	FUNCTION_5
0x4000208	              0x53	                                push rbx	       176	cmdline.c	FUNCTION_5
0x4000209	          0x4889fb	                            mov rbx, rdi	       176	cmdline.c	FUNCTION_5
0x400020c	           0xfb62b	                   movzx ebp, byte [rbx]	       177	cmdline.c	FUNCTION_5	WHILE_1
0x400020f	          0x4084ed	                           test bpl, bpl	       177	cmdline.c	FUNCTION_5	WHILE_1
0x4000212	            0x7449	                            je 0x400025d	       177	cmdline.c	FUNCTION_5	WHILE_1
0x4000214	          0x4c89ef	                            mov rdi, r13	       178	cmdline.c	FUNCTION_5	WHILE_1	IF_1	CALL_2
0x4000217	      0xe800000000	                          call 0x400021c	       178	cmdline.c	FUNCTION_5	WHILE_1	IF_1	CALL_2
0x400021c	          0x4c89ee	                            mov rsi, r13	       178	cmdline.c	FUNCTION_5	WHILE_1	IF_1	CALL_2
0x400021f	          0x4889c2	                            mov rdx, rax	       178	cmdline.c	FUNCTION_5	WHILE_1	IF_1	CALL_2
0x4000222	          0x4889df	                            mov rdi, rbx	       178	cmdline.c	FUNCTION_5	WHILE_1	IF_1	CALL_2
0x4000225	          0x4989c4	                            mov r12, rax	       178	cmdline.c	FUNCTION_5	WHILE_1	IF_1	CALL_2
0x4000228	      0xe800000000	                          call 0x400022d	       178	cmdline.c	FUNCTION_5	WHILE_1	IF_1	CALL_2
0x400022d	            0x85c0	                           test eax, eax	       178	cmdline.c	FUNCTION_5	WHILE_1	IF_1	CALL_2
0x400022f	            0x7435	                            je 0x4000266	       178	cmdline.c	FUNCTION_5	WHILE_1	IF_1	CALL_2
0x4000231	        0x4080fd2c	                           cmp bpl, 0x2c	       184	cmdline.c	FUNCTION_5	WHILE_1	WHILE_2
0x4000235	            0x7508	                           jne 0x400023f	       184	cmdline.c	FUNCTION_5	WHILE_1	WHILE_2
0x4000237	            0xeb18	                           jmp 0x4000251	       184	cmdline.c	FUNCTION_5	WHILE_1	WHILE_2
0x4000239	        0x4080fd2c	                           cmp bpl, 0x2c	       184	cmdline.c	FUNCTION_5	WHILE_1	WHILE_2
0x400023d	            0x740c	                            je 0x400024b	       184	cmdline.c	FUNCTION_5	WHILE_1	WHILE_2
0x400023f	        0x4883c301	                              add rbx, 1	       185	cmdline.c	FUNCTION_5	WHILE_1	WHILE_2
0x4000243	           0xfb62b	                   movzx ebp, byte [rbx]	       184	cmdline.c	FUNCTION_5	WHILE_1	WHILE_2
0x4000246	          0x4084ed	                           test bpl, bpl	       184	cmdline.c	FUNCTION_5	WHILE_1	WHILE_2
0x4000249	            0x75ee	                           jne 0x4000239	       184	cmdline.c	FUNCTION_5	WHILE_1	WHILE_2
0x400024b	        0x4080fd2c	                           cmp bpl, 0x2c	       187	cmdline.c	FUNCTION_5	WHILE_1	IF_3
0x400024f	            0x75bb	                           jne 0x400020c	       187	cmdline.c	FUNCTION_5	WHILE_1	IF_3
0x4000251	        0x4883c301	                              add rbx, 1	       188	cmdline.c	FUNCTION_5	WHILE_1	IF_3
0x4000255	           0xfb62b	                   movzx ebp, byte [rbx]	       177	cmdline.c	FUNCTION_5	WHILE_1
0x4000258	          0x4084ed	                           test bpl, bpl	       177	cmdline.c	FUNCTION_5	WHILE_1
0x400025b	            0x75b7	                           jne 0x4000214	       177	cmdline.c	FUNCTION_5	WHILE_1
0x400025d	            0x31c0	                            xor eax, eax	       191	cmdline.c	FUNCTION_5
0x400025f	              0x5b	                                 pop rbx	       192	cmdline.c	FUNCTION_5
0x4000260	              0x5d	                                 pop rbp	       192	cmdline.c	FUNCTION_5
0x4000261	            0x415c	                                 pop r12	       192	cmdline.c	FUNCTION_5
0x4000263	            0x415d	                                 pop r13	       192	cmdline.c	FUNCTION_5
0x4000265	              0xc3	                                     ret	       192	cmdline.c	FUNCTION_5
0x4000266	          0x4c01e3	                            add rbx, r12	       179	cmdline.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x4000269	           0xfb613	                   movzx edx, byte [rbx]	       180	cmdline.c	FUNCTION_5	WHILE_1	IF_1	IF_2
0x400026c	            0x84d2	                             test dl, dl	       180	cmdline.c	FUNCTION_5	WHILE_1	IF_1	IF_2
0x400026e	           0xf94c1	                                 sete cl	       180	cmdline.c	FUNCTION_5	WHILE_1	IF_1	IF_2
0x4000271	          0x80fa2c	                            cmp dl, 0x2c	       180	cmdline.c	FUNCTION_5	WHILE_1	IF_1	IF_2
0x4000274	           0xf94c0	                                 sete al	       180	cmdline.c	FUNCTION_5	WHILE_1	IF_1	IF_2
0x4000277	             0x8c8	                               or al, cl	       180	cmdline.c	FUNCTION_5	WHILE_1	IF_1	IF_2
0x4000279	            0x75e4	                           jne 0x400025f	       180	cmdline.c	FUNCTION_5	WHILE_1	IF_1	IF_2
0x400027b	          0x80fa2c	                            cmp dl, 0x2c	       184	cmdline.c	FUNCTION_5	WHILE_1	WHILE_2
0x400027e	            0x75bf	                           jne 0x400023f	       184	cmdline.c	FUNCTION_5	WHILE_1	WHILE_2
0x4000280	            0xeb8a	                           jmp 0x400020c	       184	cmdline.c	FUNCTION_5	WHILE_1	WHILE_2
next_arg	CALL,2:SWITCH,0:IF,10:ELSE,2:WHILE,0:DO,0:functions,0:FOR,1	83
0x4000290	            0x4154	                                push r12	       200	cmdline.c	FUNCTION_6
0x4000292	              0x55	                                push rbp	       200	cmdline.c	FUNCTION_6
0x4000293	          0x4531e4	                          xor r12d, r12d	       200	cmdline.c	FUNCTION_6
0x4000296	              0x53	                                push rbx	       200	cmdline.c	FUNCTION_6
0x4000297	           0xfb607	                   movzx eax, byte [rdi]	       205	cmdline.c	FUNCTION_6	IF_1
0x400029a	            0x3c22	                            cmp al, 0x22	       205	cmdline.c	FUNCTION_6	IF_1
0x400029c	     0xf84c9000000	                            je 0x400036b	       205	cmdline.c	FUNCTION_6	IF_1
0x40002a2	            0x84c0	                             test al, al	       211	cmdline.c	FUNCTION_6	FOR_1
0x40002a4	     0xf8498000000	                            je 0x4000342	       211	cmdline.c	FUNCTION_6	FOR_1
0x40002aa	           0xfb6c8	                           movzx ecx, al	       212	cmdline.c	FUNCTION_6	FOR_1	IF_2	CALL_1
0x40002ad	    0xf68100000000	                   test byte [rcx], 0x20	       212	cmdline.c	FUNCTION_6	FOR_1	IF_2	CALL_1
0x40002b4	            0x7409	                            je 0x40002bf	       212	cmdline.c	FUNCTION_6	FOR_1	IF_2	CALL_1
0x40002b6	          0x4585e4	                         test r12d, r12d	       212	cmdline.c	FUNCTION_6	FOR_1	IF_2	CALL_1
0x40002b9	     0xf8483000000	                            je 0x4000342	       212	cmdline.c	FUNCTION_6	FOR_1	IF_2	CALL_1
0x40002bf	          0x4489e1	                           mov ecx, r12d	       212	cmdline.c	FUNCTION_6	FOR_1	IF_2	CALL_1
0x40002c2	            0x31ed	                            xor ebp, ebp	       212	cmdline.c	FUNCTION_6	FOR_1	IF_2	CALL_1
0x40002c4	          0x4531d2	                          xor r10d, r10d	       212	cmdline.c	FUNCTION_6	FOR_1	IF_2	CALL_1
0x40002c7	            0xeb34	                           jmp 0x40002fd	       212	cmdline.c	FUNCTION_6	FOR_1	IF_2	CALL_1
0x40002c9	          0x4189c8	                            mov r8d, ecx	       212	cmdline.c	FUNCTION_6	FOR_1	IF_2	CALL_1
0x40002cc	        0x4183f001	                              xor r8d, 1	       212	cmdline.c	FUNCTION_6	FOR_1	IF_2	CALL_1
0x40002d0	            0x3c22	                            cmp al, 0x22	       212	cmdline.c	FUNCTION_6	FOR_1	IF_2	CALL_1
0x40002d2	        0x410f44c8	                          cmove ecx, r8d	       212	cmdline.c	FUNCTION_6	FOR_1	IF_2	CALL_1
0x40002d6	        0x458d5a01	                     lea r11d, [r10 + 1]	       211	cmdline.c	FUNCTION_6	FOR_1
0x40002da	        0x4e8d0c1f	                     lea r9, [rdi + r11]	       211	cmdline.c	FUNCTION_6	FOR_1
0x40002de	          0x4d89d8	                             mov r8, r11	       211	cmdline.c	FUNCTION_6	FOR_1
0x40002e1	        0x410fb601	                    movzx eax, byte [r9]	       211	cmdline.c	FUNCTION_6	FOR_1
0x40002e5	            0x84c0	                             test al, al	       211	cmdline.c	FUNCTION_6	FOR_1
0x40002e7	            0x7421	                            je 0x400030a	       211	cmdline.c	FUNCTION_6	FOR_1
0x40002e9	           0xfb6d8	                           movzx ebx, al	       212	cmdline.c	FUNCTION_6	FOR_1	IF_2	CALL_1
0x40002ec	    0xf68300000000	                   test byte [rbx], 0x20	       212	cmdline.c	FUNCTION_6	FOR_1	IF_2	CALL_1
0x40002f3	            0x7405	                            je 0x40002fa	       212	cmdline.c	FUNCTION_6	FOR_1	IF_2	CALL_1
0x40002f5	          0xf6c101	                              test cl, 1	       212	cmdline.c	FUNCTION_6	FOR_1	IF_2	CALL_1
0x40002f8	            0x7410	                            je 0x400030a	       212	cmdline.c	FUNCTION_6	FOR_1	IF_2	CALL_1
0x40002fa	          0x4589c2	                           mov r10d, r8d	       211	cmdline.c	FUNCTION_6	FOR_1
0x40002fd	            0x85ed	                           test ebp, ebp	       214	cmdline.c	FUNCTION_6	FOR_1	IF_3
0x40002ff	            0x75c8	                           jne 0x40002c9	       214	cmdline.c	FUNCTION_6	FOR_1	IF_3
0x4000301	            0x3c3d	                            cmp al, 0x3d	       215	cmdline.c	FUNCTION_6	FOR_1	IF_3	IF_4
0x4000303	            0x75c4	                           jne 0x40002c9	       215	cmdline.c	FUNCTION_6	FOR_1	IF_3	IF_4
0x4000305	          0x4489d5	                           mov ebp, r10d	       215	cmdline.c	FUNCTION_6	FOR_1	IF_3	IF_4
0x4000308	            0xebcc	                           jmp 0x40002d6	       215	cmdline.c	FUNCTION_6	FOR_1	IF_3	IF_4
0x400030a	            0x85ed	                           test ebp, ebp	       223	cmdline.c	FUNCTION_6	IF_6
0x400030c	          0x48893e	                    mov qword [rsi], rdi	       222	cmdline.c	FUNCTION_6
0x400030f	            0x743d	                            je 0x400034e	       223	cmdline.c	FUNCTION_6	IF_6
0x4000311	      0x488d442f01	                lea rax, [rdi + rbp + 1]	       227	cmdline.c	FUNCTION_6	ELSE_1
0x4000316	        0xc6042f00	                 mov byte [rdi + rbp], 0	       226	cmdline.c	FUNCTION_6	ELSE_1
0x400031a	          0x488902	                    mov qword [rdx], rax	       227	cmdline.c	FUNCTION_6	ELSE_1
0x400031d	          0x803822	                    cmp byte [rax], 0x22	       230	cmdline.c	FUNCTION_6	ELSE_1	IF_7
0x4000320	            0x745c	                            je 0x400037e	       230	cmdline.c	FUNCTION_6	ELSE_1	IF_7
0x4000322	          0x4585e4	                         test r12d, r12d	       236	cmdline.c	FUNCTION_6	IF_9
0x4000325	            0x7533	                           jne 0x400035a	       236	cmdline.c	FUNCTION_6	IF_9
0x4000327	        0x41803900	                        cmp byte [r9], 0	       239	cmdline.c	FUNCTION_6	IF_10
0x400032b	            0x7409	                            je 0x4000336	       239	cmdline.c	FUNCTION_6	IF_10
0x400032d	        0x41c60100	                        mov byte [r9], 0	       240	cmdline.c	FUNCTION_6	IF_10
0x4000331	      0x4e8d4c1f01	                 lea r9, [rdi + r11 + 1]	       241	cmdline.c	FUNCTION_6	IF_10
0x4000336	              0x5b	                                 pop rbx	       247	cmdline.c	FUNCTION_6
0x4000337	              0x5d	                                 pop rbp	       247	cmdline.c	FUNCTION_6
0x4000338	            0x415c	                                 pop r12	       247	cmdline.c	FUNCTION_6
0x400033a	          0x4c89cf	                             mov rdi, r9	       246	cmdline.c	FUNCTION_6	CALL_2
0x400033d	      0xe900000000	                           jmp 0x4000342	       246	cmdline.c	FUNCTION_6	CALL_2
0x4000342	          0x48893e	                    mov qword [rsi], rdi	       222	cmdline.c	FUNCTION_6
0x4000345	          0x4989f9	                             mov r9, rdi	       222	cmdline.c	FUNCTION_6
0x4000348	          0x4531db	                          xor r11d, r11d	       222	cmdline.c	FUNCTION_6
0x400034b	          0x4531c0	                            xor r8d, r8d	       222	cmdline.c	FUNCTION_6
0x400034e	          0x4585e4	                         test r12d, r12d	       236	cmdline.c	FUNCTION_6	IF_9
0x4000351	    0x48c702000000	                      mov qword [rdx], 0	       224	cmdline.c	FUNCTION_6	IF_6
0x4000358	            0x74cd	                            je 0x4000327	       236	cmdline.c	FUNCTION_6	IF_9
0x400035a	        0x418d40ff	                       lea eax, [r8 - 1]	       236	cmdline.c	FUNCTION_6	IF_9
0x400035e	          0x4801f8	                            add rax, rdi	       236	cmdline.c	FUNCTION_6	IF_9
0x4000361	          0x803822	                    cmp byte [rax], 0x22	       236	cmdline.c	FUNCTION_6	IF_9
0x4000364	            0x75c1	                           jne 0x4000327	       236	cmdline.c	FUNCTION_6	IF_9
0x4000366	          0xc60000	                       mov byte [rax], 0	       237	cmdline.c	FUNCTION_6	IF_9
0x4000369	            0xebbc	                           jmp 0x4000327	       237	cmdline.c	FUNCTION_6	IF_9
0x400036b	         0xfb64701	               movzx eax, byte [rdi + 1]	       237	cmdline.c	FUNCTION_6	IF_9
0x400036f	    0x41bc01000000	                             mov r12d, 1	       207	cmdline.c	FUNCTION_6	IF_1
0x4000375	        0x4883c701	                              add rdi, 1	       206	cmdline.c	FUNCTION_6	IF_1
0x4000379	      0xe924ffffff	                           jmp 0x40002a2	       206	cmdline.c	FUNCTION_6	IF_1
0x400037e	        0x4883c001	                              add rax, 1	       231	cmdline.c	FUNCTION_6	ELSE_1	IF_7
0x4000382	          0x488902	                    mov qword [rdx], rax	       231	cmdline.c	FUNCTION_6	ELSE_1	IF_7
0x4000385	          0x4489d0	                           mov eax, r10d	       232	cmdline.c	FUNCTION_6	ELSE_1	IF_7	IF_8
0x4000388	          0x4801f8	                            add rax, rdi	       232	cmdline.c	FUNCTION_6	ELSE_1	IF_7	IF_8
0x400038b	          0x803822	                    cmp byte [rax], 0x22	       232	cmdline.c	FUNCTION_6	ELSE_1	IF_7	IF_8
0x400038e	            0x7597	                           jne 0x4000327	       232	cmdline.c	FUNCTION_6	ELSE_1	IF_7	IF_8
0x4000390	            0xebd4	                           jmp 0x4000366	       232	cmdline.c	FUNCTION_6	ELSE_1	IF_7	IF_8
