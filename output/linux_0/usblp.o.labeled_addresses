usblp_ctrl_msg	WHILE,0:ELSE,0:FOR,0:IF,1:DO,0:SWITCH,0:functions,0:CALL,4	36
0x4000450	            0x85f6	                           test esi, esi	       258	usblp.c	FUNCTION_2	IF_1
0x4000452	          0x4489c0	                            mov eax, r8d	       251	usblp.c	FUNCTION_2
0x4000455	    0x448b97cc0000	           mov r10d, dword [rdi + 0xcc] 	       253	usblp.c	FUNCTION_2
0x400045c	            0x751c	                           jne 0x400047a	       258	usblp.c	FUNCTION_2	IF_1
0x400045e	          0x83fa20	                           cmp edx, 0x20	       258	usblp.c	FUNCTION_2	IF_1
0x4000461	            0x7517	                           jne 0x400047a	       258	usblp.c	FUNCTION_2	IF_1
0x4000463	    0x4c6387380100	         movsxd r8, dword [rdi + 0x138] 	       259	usblp.c	FUNCTION_2	IF_1
0x400046a	        0x41c1e208	                             shl r10d, 8	       259	usblp.c	FUNCTION_2	IF_1
0x400046e	        0x4f8d0440	                     lea r8, [r8 + r8*2]	       259	usblp.c	FUNCTION_2	IF_1
0x4000472	    0x460b94c7d800	      or r10d, dword [rdi + r8*8 + 0xd8]	       259	usblp.c	FUNCTION_2	IF_1
0x400047a	          0x488b3f	                    mov rdi, qword [rdi]	       262	usblp.c	FUNCTION_2	CALL_3
0x400047d	             0x9c8	                             or eax, ecx	       261	usblp.c	FUNCTION_2	CALL_1
0x400047f	    0x440fb75c2410	          movzx r11d, word [rsp + 0x10] 	       261	usblp.c	FUNCTION_2	CALL_1
0x4000485	             0x9c2	                             or edx, eax	       261	usblp.c	FUNCTION_2	CALL_1
0x4000487	        0x450fb7d2	                        movzx r10d, r10w	       261	usblp.c	FUNCTION_2	CALL_1
0x400048b	        0x450fb7c1	                          movzx r8d, r9w	       261	usblp.c	FUNCTION_2	CALL_1
0x400048f	           0xfb6c2	                           movzx eax, dl	       261	usblp.c	FUNCTION_2	CALL_1
0x4000492	        0x400fb6d6	                          movzx edx, sil	       261	usblp.c	FUNCTION_2	CALL_1
0x4000496	            0x8b37	                    mov esi, dword [rdi]	       261	usblp.c	FUNCTION_2	CALL_1
0x4000498	          0xc1e608	                              shl esi, 8	       261	usblp.c	FUNCTION_2	CALL_1
0x400049b	            0x85c9	                           test ecx, ecx	       261	usblp.c	FUNCTION_2	CALL_1
0x400049d	            0x752a	                           jne 0x40004c9	       261	usblp.c	FUNCTION_2	CALL_1
0x400049f	    0x81ce00000080	                      or esi, 0x80000000	       261	usblp.c	FUNCTION_2	CALL_1
0x40004a5	      0x6888130000	                             push 0x1388	       261	usblp.c	FUNCTION_2	CALL_1
0x40004aa	            0x4153	                                push r11	       261	usblp.c	FUNCTION_2	CALL_1
0x40004ac	          0x4589d1	                           mov r9d, r10d	       261	usblp.c	FUNCTION_2	CALL_1
0x40004af	        0xff742418	                 push qword [rsp + 0x18]	       261	usblp.c	FUNCTION_2	CALL_1
0x40004b3	            0x89c1	                            mov ecx, eax	       261	usblp.c	FUNCTION_2	CALL_1
0x40004b5	      0xe800000000	                          call 0x40004ba	       261	usblp.c	FUNCTION_2	CALL_1
0x40004ba	      0xba00000000	                              mov edx, 0	       267	usblp.c	FUNCTION_2
0x40004bf	        0x4883c418	                           add rsp, 0x18	       267	usblp.c	FUNCTION_2
0x40004c3	            0x85c0	                           test eax, eax	       267	usblp.c	FUNCTION_2
0x40004c5	           0xf4fc2	                          cmovg eax, edx	       267	usblp.c	FUNCTION_2
0x40004c8	              0xc3	                                     ret	       268	usblp.c	FUNCTION_2
0x40004c9	    0x81ce80000080	                      or esi, 0x80000080	       261	usblp.c	FUNCTION_2	CALL_1
0x40004cf	            0xebd4	                           jmp 0x40004a5	       261	usblp.c	FUNCTION_2	CALL_1
usblp_cache_device_id_string	WHILE,0:ELSE,1:FOR,0:IF,3:DO,0:SWITCH,0:functions,0:CALL,4	36
0x40004e0	              0x53	                                push rbx	      1322	usblp.c	FUNCTION_27
0x40004e1	      0x68ff030000	                              push 0x3ff	      1325	usblp.c	FUNCTION_27	CALL_1
0x40004e6	          0x4531c9	                            xor r9d, r9d	      1325	usblp.c	FUNCTION_27	CALL_1
0x40004e9	    0xffb760010000	                push qword [rdi + 0x160]	      1325	usblp.c	FUNCTION_27	CALL_1
0x40004ef	      0xb980000000	                           mov ecx, 0x80	      1325	usblp.c	FUNCTION_27	CALL_1
0x40004f4	      0xba20000000	                           mov edx, 0x20	      1325	usblp.c	FUNCTION_27	CALL_1
0x40004f9	            0x31f6	                            xor esi, esi	      1325	usblp.c	FUNCTION_27	CALL_1
0x40004fb	    0x41b801000000	                              mov r8d, 1	      1325	usblp.c	FUNCTION_27	CALL_1
0x4000501	          0x4889fb	                            mov rbx, rdi	      1322	usblp.c	FUNCTION_27
0x4000504	      0xe847ffffff	                 call sym.usblp_ctrl_msg	      1325	usblp.c	FUNCTION_27	CALL_1
0x4000509	            0x85c0	                           test eax, eax	      1326	usblp.c	FUNCTION_27	IF_1
0x400050b	              0x5a	                                 pop rdx	      1326	usblp.c	FUNCTION_27	IF_1
0x400050c	              0x59	                                 pop rcx	      1326	usblp.c	FUNCTION_27	IF_1
0x400050d	            0x7838	                            js 0x4000547	      1326	usblp.c	FUNCTION_27	IF_1
0x400050f	    0x488b93600100	           mov rdx, qword [rbx + 0x160] 	      1337	usblp.c	FUNCTION_27	CALL_3
0x4000516	           0xfb702	                   movzx eax, word [rdx]	      1337	usblp.c	FUNCTION_27	CALL_3
0x4000519	        0x66c1c008	                               rol ax, 8	      1337	usblp.c	FUNCTION_27	CALL_3
0x400051d	           0xfb7c0	                           movzx eax, ax	      1337	usblp.c	FUNCTION_27	CALL_3
0x4000520	          0x83f801	                              cmp eax, 1	      1338	usblp.c	FUNCTION_27	IF_2
0x4000523	            0x7e16	                           jle 0x400053b	      1338	usblp.c	FUNCTION_27	IF_2
0x4000525	      0xb9ff030000	                          mov ecx, 0x3ff	      1338	usblp.c	FUNCTION_27	IF_2
0x400052a	      0x3dff030000	                          cmp eax, 0x3ff	      1338	usblp.c	FUNCTION_27	IF_2
0x400052f	           0xf4fc1	                          cmovg eax, ecx	      1338	usblp.c	FUNCTION_27	IF_2
0x4000532	          0x4863c8	                         movsxd rcx, eax	      1338	usblp.c	FUNCTION_27	IF_2
0x4000535	        0xc6040a00	                 mov byte [rdx + rcx], 0	      1342	usblp.c	FUNCTION_27
0x4000539	              0x5b	                                 pop rbx	      1348	usblp.c	FUNCTION_27
0x400053a	              0xc3	                                     ret	      1348	usblp.c	FUNCTION_27
0x400053b	      0xb902000000	                              mov ecx, 2	      1348	usblp.c	FUNCTION_27
0x4000540	      0xb802000000	                              mov eax, 2	      1339	usblp.c	FUNCTION_27	IF_2
0x4000545	            0xebee	                           jmp 0x4000535	      1339	usblp.c	FUNCTION_27	IF_2
0x4000547	    0x488b83600100	           mov rax, qword [rbx + 0x160] 	      1330	usblp.c	FUNCTION_27	IF_1
0x400054e	        0xc6400100	                   mov byte [rax + 1], 0	      1330	usblp.c	FUNCTION_27	IF_1
0x4000552	          0xc60000	                       mov byte [rax], 0	      1330	usblp.c	FUNCTION_27	IF_1
0x4000555	      0xb8fbffffff	                     mov eax, 0xfffffffb	      1331	usblp.c	FUNCTION_27	IF_1
0x400055a	              0x5b	                                 pop rbx	      1348	usblp.c	FUNCTION_27
0x400055b	              0xc3	                                     ret	      1348	usblp.c	FUNCTION_27
usblp_cleanup	WHILE,0:ELSE,0:FOR,0:IF,0:DO,0:SWITCH,0:functions,0:CALL,5	14
0x40009b0	              0x53	                                push rbx	       440	usblp.c	FUNCTION_8
0x40009b1	    0x8bb73c010000	           mov esi, dword [rdi + 0x13c] 	       441	usblp.c	FUNCTION_8	CALL_1
0x40009b7	          0x4889fb	                            mov rbx, rdi	       440	usblp.c	FUNCTION_8
0x40009ba	    0x48c7c7000000	                              mov rdi, 0	       441	usblp.c	FUNCTION_8	CALL_1
0x40009c1	      0xe800000000	                          call 0x40009c6	       441	usblp.c	FUNCTION_8	CALL_1
0x40009c6	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	       443	usblp.c	FUNCTION_8	CALL_2
0x40009ca	      0xe800000000	                          call 0x40009cf	       443	usblp.c	FUNCTION_8	CALL_2
0x40009cf	    0x488bbb600100	           mov rdi, qword [rbx + 0x160] 	       444	usblp.c	FUNCTION_8	CALL_3
0x40009d6	      0xe800000000	                          call 0x40009db	       444	usblp.c	FUNCTION_8	CALL_3
0x40009db	        0x488b7b58	            mov rdi, qword [rbx + 0x58] 	       445	usblp.c	FUNCTION_8	CALL_4
0x40009df	      0xe800000000	                          call 0x40009e4	       445	usblp.c	FUNCTION_8	CALL_4
0x40009e4	          0x4889df	                            mov rdi, rbx	       446	usblp.c	FUNCTION_8	CALL_5
0x40009e7	              0x5b	                                 pop rbx	       447	usblp.c	FUNCTION_8
0x40009e8	      0xe900000000	                           jmp 0x40009ed	       446	usblp.c	FUNCTION_8	CALL_5
ieee1284_id_show	WHILE,0:ELSE,0:FOR,0:IF,1:DO,0:SWITCH,0:functions,0:CALL,3	13
0x4000380	    0x488b87980000	            mov rax, qword [rdi + 0x98] 	      1074	usblp.c	FUNCTION_23	IF_1
0x4000387	    0x488b88600100	           mov rcx, qword [rax + 0x160] 	      1074	usblp.c	FUNCTION_23	IF_1
0x400038e	          0x803900	                       cmp byte [rcx], 0	      1074	usblp.c	FUNCTION_23	IF_1
0x4000391	            0x7508	                           jne 0x400039b	      1074	usblp.c	FUNCTION_23	IF_1
0x4000393	            0x31c0	                            xor eax, eax	      1076	usblp.c	FUNCTION_23	IF_1
0x4000395	        0x80790100	                   cmp byte [rcx + 1], 0	      1074	usblp.c	FUNCTION_23	IF_1
0x4000399	            0x7415	                            je 0x40003b0	      1074	usblp.c	FUNCTION_23	IF_1
0x400039b	          0x4889d7	                            mov rdi, rdx	      1074	usblp.c	FUNCTION_23	IF_1
0x400039e	        0x488d5102	                      lea rdx, [rcx + 2]	      1078	usblp.c	FUNCTION_23	CALL_3
0x40003a2	    0x48c7c6000000	                              mov rsi, 0	      1078	usblp.c	FUNCTION_23	CALL_3
0x40003a9	      0xe800000000	                          call 0x40003ae	      1078	usblp.c	FUNCTION_23	CALL_3
0x40003ae	            0x4898	                                    cdqe	      1078	usblp.c	FUNCTION_23	CALL_3
0x40003b0	            0xf3c3	                                     ret	      1079	usblp.c	FUNCTION_23
usblp_open	WHILE,0:ELSE,0:FOR,0:IF,6:DO,0:SWITCH,0:functions,0:CALL,8	58
0x40010d0	            0x4155	                                push r13	       389	usblp.c	FUNCTION_7
0x40010d2	            0x4154	                                push r12	       389	usblp.c	FUNCTION_7
0x40010d4	          0x4989f5	                            mov r13, rsi	       389	usblp.c	FUNCTION_7
0x40010d7	              0x55	                                push rbp	       389	usblp.c	FUNCTION_7
0x40010d8	              0x53	                                push rbx	       389	usblp.c	FUNCTION_7
0x40010d9	    0x41bcedffffff	                    mov r12d, 0xffffffed	       400	usblp.c	FUNCTION_7
0x40010df	          0x8b5f4c	            mov ebx, dword [rdi + 0x4c] 	       390	usblp.c	FUNCTION_7	CALL_1
0x40010e2	    0x48c7c7000000	                              mov rdi, 0	       398	usblp.c	FUNCTION_7	CALL_2
0x40010e9	      0xe800000000	                          call 0x40010ee	       398	usblp.c	FUNCTION_7	CALL_2
0x40010ee	    0x48c7c7000000	                              mov rdi, 0	       401	usblp.c	FUNCTION_7	CALL_3
0x40010f5	    0x81e3ffff0f00	                        and ebx, 0xfffff	       390	usblp.c	FUNCTION_7	CALL_1
0x40010fb	            0x89de	                            mov esi, ebx	       401	usblp.c	FUNCTION_7	CALL_3
0x40010fd	      0xe800000000	                          call 0x4001102	       401	usblp.c	FUNCTION_7	CALL_3
0x4001102	          0x4885c0	                           test rax, rax	       402	usblp.c	FUNCTION_7	IF_2
0x4001105	            0x741e	                            je 0x4001125	       402	usblp.c	FUNCTION_7	IF_2
0x4001107	    0x488b98c80000	            mov rbx, qword [rax + 0xc8] 	       402	usblp.c	FUNCTION_7	IF_2
0x400110e	          0x4889c5	                            mov rbp, rax	       402	usblp.c	FUNCTION_7	IF_2
0x4001111	          0x4885db	                           test rbx, rbx	       405	usblp.c	FUNCTION_7	IF_3
0x4001114	            0x740f	                            je 0x4001125	       405	usblp.c	FUNCTION_7	IF_3
0x4001116	        0x48833b00	                      cmp qword [rbx], 0	       405	usblp.c	FUNCTION_7	IF_3
0x400111a	            0x7409	                            je 0x4001125	       405	usblp.c	FUNCTION_7	IF_3
0x400111c	    0x80bb59010000	               cmp byte [rbx + 0x159], 0	       405	usblp.c	FUNCTION_7	IF_3
0x4001123	            0x7516	                           jne 0x400113b	       405	usblp.c	FUNCTION_7	IF_3
0x4001125	    0x48c7c7000000	                              mov rdi, 0	       435	usblp.c	FUNCTION_7	CALL_8
0x400112c	      0xe800000000	                          call 0x4001131	       435	usblp.c	FUNCTION_7	CALL_8
0x4001131	          0x4489e0	                           mov eax, r12d	       437	usblp.c	FUNCTION_7
0x4001134	              0x5b	                                 pop rbx	       437	usblp.c	FUNCTION_7
0x4001135	              0x5d	                                 pop rbp	       437	usblp.c	FUNCTION_7
0x4001136	            0x415c	                                 pop r12	       437	usblp.c	FUNCTION_7
0x4001138	            0x415d	                                 pop r13	       437	usblp.c	FUNCTION_7
0x400113a	              0xc3	                                     ret	       437	usblp.c	FUNCTION_7
0x400113b	    0x80bb58010000	               cmp byte [rbx + 0x158], 0	       409	usblp.c	FUNCTION_7	IF_4
0x4001142	    0x41bcf0ffffff	                    mov r12d, 0xfffffff0	       408	usblp.c	FUNCTION_7
0x4001148	            0x75db	                           jne 0x4001125	       409	usblp.c	FUNCTION_7	IF_4
0x400114a	          0x4889c7	                            mov rdi, rax	       418	usblp.c	FUNCTION_7	CALL_5
0x400114d	      0xe800000000	                          call 0x4001152	       418	usblp.c	FUNCTION_7	CALL_5
0x4001152	            0x85c0	                           test eax, eax	       419	usblp.c	FUNCTION_7	IF_5
0x4001154	          0x4189c4	                           mov r12d, eax	       418	usblp.c	FUNCTION_7	CALL_5
0x4001157	            0x78cc	                            js 0x4001125	       419	usblp.c	FUNCTION_7	IF_5
0x4001159	    0xc68358010000	               mov byte [rbx + 0x158], 1	       421	usblp.c	FUNCTION_7
0x4001160	    0x49899dc80000	             mov qword [r13 + 0xc8], rbx	       422	usblp.c	FUNCTION_7
0x4001167	    0x80bb5a010000	               cmp byte [rbx + 0x15a], 0	       377	usblp.c	FUNCTION_6	IF_1
0x400116e	    0xc78340010000	              mov dword [rbx + 0x140], 1	       424	usblp.c	FUNCTION_7
0x4001178	    0xc78348010000	              mov dword [rbx + 0x148], 0	       425	usblp.c	FUNCTION_7
0x4001182	    0xc78344010000	              mov dword [rbx + 0x144], 0	       426	usblp.c	FUNCTION_7
0x400118c	            0x7497	                            je 0x4001125	       377	usblp.c	FUNCTION_6	IF_1
0x400118e	    0x80bb58010000	               cmp byte [rbx + 0x158], 0	       377	usblp.c	FUNCTION_6	IF_1
0x4001195	            0x748e	                            je 0x4001125	       377	usblp.c	FUNCTION_6	IF_1
0x4001197	          0x4889df	                            mov rdi, rbx	       378	usblp.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x400119a	      0xe861efffff	              call sym.usblp_submit_read	       378	usblp.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x400119f	            0x85c0	                           test eax, eax	       378	usblp.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x40011a1	            0x7982	                           jns 0x4001125	       378	usblp.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x40011a3	          0x4889ef	                            mov rdi, rbp	       429	usblp.c	FUNCTION_7	IF_6	CALL_7
0x40011a6	    0x41bcfbffffff	                    mov r12d, 0xfffffffb	       432	usblp.c	FUNCTION_7	IF_6
0x40011ac	      0xe800000000	                          call 0x40011b1	       429	usblp.c	FUNCTION_7	IF_6	CALL_7
0x40011b1	    0xc68358010000	               mov byte [rbx + 0x158], 0	       430	usblp.c	FUNCTION_7	IF_6
0x40011b8	    0x49c785c80000	               mov qword [r13 + 0xc8], 0	       431	usblp.c	FUNCTION_7	IF_6
0x40011c3	      0xe95dffffff	                           jmp 0x4001125	       431	usblp.c	FUNCTION_7	IF_6
usblp_set_protocol	WHILE,0:ELSE,0:FOR,0:IF,3:DO,0:SWITCH,0:functions,0:CALL,3	43
0x40003c0	          0x8d46ff	                      lea eax, [rsi - 1]	      1298	usblp.c	FUNCTION_26	IF_1
0x40003c3	          0x83f802	                              cmp eax, 2	      1298	usblp.c	FUNCTION_26	IF_1
0x40003c6	            0x775c	                            ja 0x4000424	      1298	usblp.c	FUNCTION_26	IF_1
0x40003c8	          0x4863c6	                         movsxd rax, esi	      1301	usblp.c	FUNCTION_26
0x40003cb	            0x4156	                                push r14	      1295	usblp.c	FUNCTION_26
0x40003cd	            0x4155	                                push r13	      1295	usblp.c	FUNCTION_26
0x40003cf	        0x488d0440	                  lea rax, [rax + rax*2]	      1301	usblp.c	FUNCTION_26
0x40003d3	            0x4154	                                push r12	      1295	usblp.c	FUNCTION_26
0x40003d5	              0x55	                                push rbp	      1295	usblp.c	FUNCTION_26
0x40003d6	              0x53	                                push rbx	      1295	usblp.c	FUNCTION_26
0x40003d7	        0x4c8d34c7	                  lea r14, [rdi + rax*8]	      1301	usblp.c	FUNCTION_26
0x40003db	    0x458baed80000	           mov r13d, dword [r14 + 0xd8] 	      1301	usblp.c	FUNCTION_26
0x40003e2	          0x4585ed	                         test r13d, r13d	      1302	usblp.c	FUNCTION_26	IF_2
0x40003e5	            0x7843	                            js 0x400042a	      1302	usblp.c	FUNCTION_26	IF_2
0x40003e7	            0x89f5	                            mov ebp, esi	      1302	usblp.c	FUNCTION_26	IF_2
0x40003e9	          0x4889fb	                            mov rbx, rdi	      1302	usblp.c	FUNCTION_26	IF_2
0x40003ec	    0x8bb7cc000000	            mov esi, dword [rdi + 0xcc] 	      1304	usblp.c	FUNCTION_26	CALL_1
0x40003f2	          0x488b3f	                    mov rdi, qword [rdi]	      1304	usblp.c	FUNCTION_26	CALL_1
0x40003f5	          0x4489ea	                           mov edx, r13d	      1304	usblp.c	FUNCTION_26	CALL_1
0x40003f8	      0xe800000000	                          call 0x40003fd	      1304	usblp.c	FUNCTION_26	CALL_1
0x40003fd	            0x85c0	                           test eax, eax	      1305	usblp.c	FUNCTION_26	IF_3
0x40003ff	          0x4189c4	                           mov r12d, eax	      1304	usblp.c	FUNCTION_26	CALL_1
0x4000402	            0x782d	                            js 0x4000431	      1305	usblp.c	FUNCTION_26	IF_3
0x4000404	    0x4983bee80000	               cmp qword [r14 + 0xe8], 0	      1311	usblp.c	FUNCTION_26
0x400040c	    0x89ab38010000	            mov dword [rbx + 0x138], ebp	      1312	usblp.c	FUNCTION_26
0x4000412	     0xf95835a0100	                setne byte [rbx + 0x15a]	      1311	usblp.c	FUNCTION_26
0x4000419	            0x31c0	                            xor eax, eax	      1315	usblp.c	FUNCTION_26
0x400041b	              0x5b	                                 pop rbx	      1316	usblp.c	FUNCTION_26
0x400041c	              0x5d	                                 pop rbp	      1316	usblp.c	FUNCTION_26
0x400041d	            0x415c	                                 pop r12	      1316	usblp.c	FUNCTION_26
0x400041f	            0x415d	                                 pop r13	      1316	usblp.c	FUNCTION_26
0x4000421	            0x415e	                                 pop r14	      1316	usblp.c	FUNCTION_26
0x4000423	              0xc3	                                     ret	      1316	usblp.c	FUNCTION_26
0x4000424	      0xb8eaffffff	                     mov eax, 0xffffffea	      1299	usblp.c	FUNCTION_26	IF_1
0x4000429	              0xc3	                                     ret	      1316	usblp.c	FUNCTION_26
0x400042a	      0xb8eaffffff	                     mov eax, 0xffffffea	      1299	usblp.c	FUNCTION_26	IF_1
0x400042f	            0xebea	                           jmp 0x400041b	      1299	usblp.c	FUNCTION_26	IF_1
0x4000431	    0x8b93cc000000	            mov edx, dword [rbx + 0xcc] 	      1306	usblp.c	FUNCTION_26	IF_3	CALL_2
0x4000437	          0x4489ee	                           mov esi, r13d	      1306	usblp.c	FUNCTION_26	IF_3	CALL_2
0x400043a	    0x48c7c7000000	                              mov rdi, 0	      1306	usblp.c	FUNCTION_26	IF_3	CALL_2
0x4000441	      0xe800000000	                          call 0x4000446	      1306	usblp.c	FUNCTION_26	IF_3	CALL_2
0x4000446	          0x4489e0	                           mov eax, r12d	      1308	usblp.c	FUNCTION_26	IF_3
0x4000449	            0xebd0	                           jmp 0x400041b	      1308	usblp.c	FUNCTION_26	IF_3
usblp_resume	WHILE,0:ELSE,0:FOR,0:IF,0:DO,0:SWITCH,0:functions,0:CALL,2	12
0x40016d0	    0x488bbfc80000	            mov rdi, qword [rdi + 0xc8] 	      1393	usblp.c	FUNCTION_30
0x40016d7	    0x80bf5a010000	               cmp byte [rdi + 0x15a], 0	       377	usblp.c	FUNCTION_6	IF_1
0x40016de	            0x7409	                            je 0x40016e9	       377	usblp.c	FUNCTION_6	IF_1
0x40016e0	    0x80bf58010000	               cmp byte [rdi + 0x158], 0	       377	usblp.c	FUNCTION_6	IF_1
0x40016e7	            0x7503	                           jne 0x40016ec	       377	usblp.c	FUNCTION_6	IF_1
0x40016e9	            0x31c0	                            xor eax, eax	       381	usblp.c	FUNCTION_6
0x40016eb	              0xc3	                                     ret	       381	usblp.c	FUNCTION_6
0x40016ec	      0xe80feaffff	              call sym.usblp_submit_read	       378	usblp.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x40016f1	            0x85c0	                           test eax, eax	       378	usblp.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x40016f3	            0x79f4	                           jns 0x40016e9	       378	usblp.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x40016f5	      0xb8fbffffff	                     mov eax, 0xfffffffb	       379	usblp.c	FUNCTION_6	IF_1	IF_2
0x40016fa	              0xc3	                                     ret	      1400	usblp.c	FUNCTION_30
usblp_release	WHILE,0:ELSE,1:FOR,0:IF,1:DO,0:SWITCH,0:functions,0:CALL,5	24
0x4000ad0	              0x53	                                push rbx	       455	usblp.c	FUNCTION_10
0x4000ad1	    0x488b9ec80000	            mov rbx, qword [rsi + 0xc8] 	       456	usblp.c	FUNCTION_10
0x4000ad8	    0x48c7c7000000	                              mov rdi, 0	       460	usblp.c	FUNCTION_10	CALL_1
0x4000adf	    0x83a354010000	     and dword [rbx + 0x154], 0xffffffbf	       458	usblp.c	FUNCTION_10
0x4000ae6	      0xe800000000	                          call 0x4000aeb	       460	usblp.c	FUNCTION_10	CALL_1
0x4000aeb	    0x80bb59010000	               cmp byte [rbx + 0x159], 0	       462	usblp.c	FUNCTION_10	IF_1
0x4000af2	    0xc68358010000	               mov byte [rbx + 0x158], 0	       461	usblp.c	FUNCTION_10
0x4000af9	            0x7518	                           jne 0x4000b13	       462	usblp.c	FUNCTION_10	IF_1
0x4000afb	          0x4889df	                            mov rdi, rbx	       466	usblp.c	FUNCTION_10	CALL_4
0x4000afe	      0xe8adfeffff	                  call sym.usblp_cleanup	       466	usblp.c	FUNCTION_10	CALL_4
0x4000b03	    0x48c7c7000000	                              mov rdi, 0	       467	usblp.c	FUNCTION_10	CALL_5
0x4000b0a	      0xe800000000	                          call 0x4000b0f	       467	usblp.c	FUNCTION_10	CALL_5
0x4000b0f	            0x31c0	                            xor eax, eax	       469	usblp.c	FUNCTION_10
0x4000b11	              0x5b	                                 pop rbx	       469	usblp.c	FUNCTION_10
0x4000b12	              0xc3	                                     ret	       469	usblp.c	FUNCTION_10
0x4000b13	        0x488d7b60	                   lea rdi, [rbx + 0x60]	       451	usblp.c	FUNCTION_9	CALL_1
0x4000b17	      0xe800000000	                          call 0x4000b1c	       451	usblp.c	FUNCTION_9	CALL_1
0x4000b1c	    0x488bbbd00000	            mov rdi, qword [rbx + 0xd0] 	       464	usblp.c	FUNCTION_10	IF_1	CALL_3
0x4000b23	      0xe800000000	                          call 0x4000b28	       464	usblp.c	FUNCTION_10	IF_1	CALL_3
0x4000b28	    0x48c7c7000000	                              mov rdi, 0	       467	usblp.c	FUNCTION_10	CALL_5
0x4000b2f	      0xe800000000	                          call 0x4000b34	       467	usblp.c	FUNCTION_10	CALL_5
0x4000b34	            0x31c0	                            xor eax, eax	       469	usblp.c	FUNCTION_10
0x4000b36	              0x5b	                                 pop rbx	       469	usblp.c	FUNCTION_10
0x4000b37	              0xc3	                                     ret	       469	usblp.c	FUNCTION_10
usblp_suspend	WHILE,0:ELSE,0:FOR,0:IF,0:DO,0:SWITCH,0:functions,0:CALL,4	5
0x4000360	    0x488bbfc80000	            mov rdi, qword [rdi + 0xc8] 	       451	usblp.c	FUNCTION_9	CALL_1
0x4000367	        0x4883c760	                           add rdi, 0x60	       451	usblp.c	FUNCTION_9	CALL_1
0x400036b	      0xe800000000	                          call 0x4000370	       451	usblp.c	FUNCTION_9	CALL_1
0x4000370	            0x31c0	                            xor eax, eax	      1390	usblp.c	FUNCTION_29
0x4000372	              0xc3	                                     ret	      1390	usblp.c	FUNCTION_29
