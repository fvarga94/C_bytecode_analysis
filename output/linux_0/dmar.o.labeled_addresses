qi_global_iec	IF,0:WHILE,0:CALL,1:SWITCH,0:FOR,0:functions,0:DO,0:ELSE,0	15
0x4001cd0	        0x4883ec18	                           sub rsp, 0x18	      1298	dmar.c	FUNCTION_41
0x4001cd4	          0x4889fe	                            mov rsi, rdi	      1298	dmar.c	FUNCTION_41
0x4001cd7	          0x4889e7	                            mov rdi, rsp	      1305	dmar.c	FUNCTION_41	CALL_1
0x4001cda	    0x48c704240400	                      mov qword [rsp], 4	      1301	dmar.c	FUNCTION_41
0x4001ce2	    0x48c744240800	                  mov qword [rsp + 8], 0	      1302	dmar.c	FUNCTION_41
0x4001ceb	    0x65488b042528	                mov rax, qword gs:[0x28]	      1298	dmar.c	FUNCTION_41
0x4001cf4	      0x4889442410	             mov qword [rsp + 0x10], rax	      1298	dmar.c	FUNCTION_41
0x4001cf9	            0x31c0	                            xor eax, eax	      1298	dmar.c	FUNCTION_41
0x4001cfb	      0xe800000000	                          call 0x4001d00	      1305	dmar.c	FUNCTION_41	CALL_1
0x4001d00	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1306	dmar.c	FUNCTION_41
0x4001d05	    0x654833042528	                xor rax, qword gs:[0x28]	      1306	dmar.c	FUNCTION_41
0x4001d0e	            0x7505	                           jne 0x4001d15	      1306	dmar.c	FUNCTION_41
0x4001d10	        0x4883c418	                           add rsp, 0x18	      1306	dmar.c	FUNCTION_41
0x4001d14	              0xc3	                                     ret	      1306	dmar.c	FUNCTION_41
0x4001d15	      0xe800000000	                          call 0x4001d1a	      1306	dmar.c	FUNCTION_41
dmar_register_bus_notifier	IF,0:WHILE,0:CALL,1:SWITCH,0:FOR,0:functions,0:DO,0:ELSE,0	7
0x40004e4	               0x0	                      add byte [rax], al	      1521	dmar.c	FUNCTION_48	ELSE_1	IF_2
0x40004e6	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      1607	dmar.c	FUNCTION_54	ELSE_1	CALL_5
0x40004ea	        0x410fb6cc	                         movzx ecx, r12b	      1607	dmar.c	FUNCTION_54	ELSE_1	CALL_5
0x40004ee	              0x50	                                push rax	      1607	dmar.c	FUNCTION_54	ELSE_1	CALL_5
0x40004ef	            0x4151	                                 push r9	      1607	dmar.c	FUNCTION_54	ELSE_1	CALL_5
0x40004f1	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      1607	dmar.c	FUNCTION_54	ELSE_1	CALL_5
0x40004f6	              0xc1	                                 invalid	      1607	dmar.c	FUNCTION_54	ELSE_1	CALL_5
dmar_reenable_qi	IF,2:WHILE,0:CALL,3:SWITCH,0:FOR,0:functions,0:DO,0:ELSE,0	14
0x40022d0	        0xf6472002	               test byte [rdi + 0x20], 2	      1748	dmar.c	FUNCTION_58	IF_1	CALL_1
0x40022d4	            0x741f	                            je 0x40022f5	      1748	dmar.c	FUNCTION_58	IF_1	CALL_1
0x40022d6	    0x4883bf880000	               cmp qword [rdi + 0x88], 0	      1751	dmar.c	FUNCTION_58	IF_2
0x40022de	            0x7415	                            je 0x40022f5	      1751	dmar.c	FUNCTION_58	IF_2
0x40022e0	              0x53	                                push rbx	      1747	dmar.c	FUNCTION_58
0x40022e1	          0x4889fb	                            mov rbx, rdi	      1747	dmar.c	FUNCTION_58
0x40022e4	      0xe800000000	                          call 0x40022e9	      1757	dmar.c	FUNCTION_58	CALL_2
0x40022e9	          0x4889df	                            mov rdi, rbx	      1763	dmar.c	FUNCTION_58	CALL_3
0x40022ec	      0xe84fdfffff	               call sym.__dmar_enable_qi	      1763	dmar.c	FUNCTION_58	CALL_3
0x40022f1	            0x31c0	                            xor eax, eax	      1765	dmar.c	FUNCTION_58
0x40022f3	              0x5b	                                 pop rbx	      1766	dmar.c	FUNCTION_58
0x40022f4	              0xc3	                                     ret	      1766	dmar.c	FUNCTION_58
0x40022f5	      0xb8feffffff	                     mov eax, 0xfffffffe	      1749	dmar.c	FUNCTION_58	IF_1
0x40022fa	              0xc3	                                     ret	      1749	dmar.c	FUNCTION_58	IF_1
dmar_validate_one_drhd	IF,5:WHILE,0:CALL,9:SWITCH,0:FOR,0:functions,0:DO,0:ELSE,2	58
0x4000040	            0x4155	                                push r13	       559	dmar.c	FUNCTION_19
0x4000042	            0x4154	                                push r12	       559	dmar.c	FUNCTION_19
0x4000044	        0x4c8d2437	                    lea r12, [rdi + rsi]	       561	dmar.c	FUNCTION_19
0x4000048	              0x55	                                push rbp	       559	dmar.c	FUNCTION_19
0x4000049	              0x53	                                push rbx	       559	dmar.c	FUNCTION_19
0x400004a	          0x4c39e7	                            cmp rdi, r12	       563	dmar.c	FUNCTION_19	FOR_1
0x400004d	     0xf8321010000	                           jae 0x4000174	       563	dmar.c	FUNCTION_19	FOR_1
0x4000053	         0xfb75f02	               movzx ebx, word [rdi + 2]	       564	dmar.c	FUNCTION_19	FOR_1
0x4000057	          0x4889fd	                            mov rbp, rdi	       564	dmar.c	FUNCTION_19	FOR_1
0x400005a	          0x4889d8	                            mov rax, rbx	       564	dmar.c	FUNCTION_19	FOR_1
0x400005d	          0x4801fb	                            add rbx, rdi	       564	dmar.c	FUNCTION_19	FOR_1
0x4000060	          0x6685c0	                             test ax, ax	       565	dmar.c	FUNCTION_19	FOR_1	IF_1
0x4000063	     0xf840b010000	                            je 0x4000174	       565	dmar.c	FUNCTION_19	FOR_1	IF_1
0x4000069	          0x4939dc	                            cmp r12, rbx	       569	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2
0x400006c	          0x4989d5	                            mov r13, rdx	       569	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2
0x400006f	            0x7356	                           jae 0x40000c7	       569	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2
0x4000071	      0xe907010000	                           jmp 0x400017d	       569	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2
0x4000076	        0x6683f804	                               cmp ax, 4	       578	dmar.c	FUNCTION_19	FOR_1	IF_4
0x400007a	            0x7720	                            ja 0x400009c	       578	dmar.c	FUNCTION_19	FOR_1	IF_4
0x400007c	      0x498d54c500	                  lea rdx, [r13 + rax*8]	       578	dmar.c	FUNCTION_19	FOR_1	IF_4
0x4000081	           0xfb7f0	                           movzx esi, ax	       582	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0x4000084	          0x488b02	                    mov rax, qword [rdx]	       582	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0x4000087	          0x4885c0	                           test rax, rax	       582	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0x400008a	            0x7476	                            je 0x4000102	       582	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0x400008c	        0x488b7228	            mov rsi, qword [rdx + 0x28] 	       585	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0x4000090	          0x4889ef	                            mov rdi, rbp	       585	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0x4000093	      0xe800000000	                          call 0x4000098	       585	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0x4000098	            0x85c0	                           test eax, eax	       586	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5	IF_6
0x400009a	            0x757e	                           jne 0x400011a	       586	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5	IF_6
0x400009c	          0x4939dc	                            cmp r12, rbx	       563	dmar.c	FUNCTION_19	FOR_1
0x400009f	     0xf86cf000000	                           jbe 0x4000174	       563	dmar.c	FUNCTION_19	FOR_1
0x40000a5	         0xfb74302	               movzx eax, word [rbx + 2]	       564	dmar.c	FUNCTION_19	FOR_1
0x40000a9	          0x4889c2	                            mov rdx, rax	       564	dmar.c	FUNCTION_19	FOR_1
0x40000ac	          0x4801d8	                            add rax, rbx	       564	dmar.c	FUNCTION_19	FOR_1
0x40000af	          0x6685d2	                             test dx, dx	       565	dmar.c	FUNCTION_19	FOR_1	IF_1
0x40000b2	     0xf84bc000000	                            je 0x4000174	       565	dmar.c	FUNCTION_19	FOR_1	IF_1
0x40000b8	          0x4939c4	                            cmp r12, rax	       569	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2
0x40000bb	          0x4889dd	                            mov rbp, rbx	       569	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2
0x40000be	     0xf82b9000000	                            jb 0x400017d	       569	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2
0x40000c4	          0x4889c3	                            mov rbx, rax	       569	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2
0x40000c7	      0x41807d5100	                cmp byte [r13 + 0x51], 0	       575	dmar.c	FUNCTION_19	FOR_1	IF_3
0x40000cc	         0xfb74500	                   movzx eax, word [rbp]	       508	dmar.c	FUNCTION_17	SWITCH_1
0x40000d0	            0x74a4	                            je 0x4000076	       575	dmar.c	FUNCTION_19	FOR_1	IF_3
0x40000d2	        0x6683f801	                               cmp ax, 1	       508	dmar.c	FUNCTION_17	SWITCH_1
0x40000d6	            0x747f	                            je 0x4000157	       508	dmar.c	FUNCTION_17	SWITCH_1
0x40000d8	            0x7260	                            jb 0x400013a	       508	dmar.c	FUNCTION_17	SWITCH_1
0x40000da	        0x6683f802	                               cmp ax, 2	       508	dmar.c	FUNCTION_17	SWITCH_1
0x40000de	            0x7441	                            je 0x4000121	       508	dmar.c	FUNCTION_17	SWITCH_1
0x40000e0	        0x6683f803	                               cmp ax, 3	       508	dmar.c	FUNCTION_17	SWITCH_1
0x40000e4	            0x7590	                           jne 0x4000076	       508	dmar.c	FUNCTION_17	SWITCH_1
0x40000e6	          0x8b5510	            mov edx, dword [rbp + 0x10] 	       528	dmar.c	FUNCTION_17	SWITCH_1	CALL_8
0x40000e9	        0x488b7508	                mov rsi, qword [rbp + 8]	       528	dmar.c	FUNCTION_17	SWITCH_1	CALL_8
0x40000ed	    0x48c7c7000000	                              mov rdi, 0	       528	dmar.c	FUNCTION_17	SWITCH_1	CALL_8
0x40000f4	      0xe800000000	                          call 0x40000f9	       528	dmar.c	FUNCTION_17	SWITCH_1	CALL_8
0x40000f9	         0xfb74500	                   movzx eax, word [rbp]	       528	dmar.c	FUNCTION_17	SWITCH_1	CALL_8
0x40000fd	      0xe974ffffff	                           jmp 0x4000076	       528	dmar.c	FUNCTION_17	SWITCH_1	CALL_8
0x4000102	      0x41807d5000	                cmp byte [r13 + 0x50], 0	       588	dmar.c	FUNCTION_19	FOR_1	ELSE_3	IF_7
0x4000107	              0x75	                                 invalid	       588	dmar.c	FUNCTION_19	FOR_1	ELSE_3	IF_7
dmar_device_add	IF,0:WHILE,0:CALL,1:SWITCH,0:FOR,0:functions,0:DO,0:ELSE,0	2
0x4002300	      0xbe01000000	                              mov esi, 1	      2040	dmar.c	FUNCTION_71	CALL_1
0x4002305	      0xe9b6e5ffff	             jmp sym.dmar_device_hotplug	      2040	dmar.c	FUNCTION_71	CALL_1
qi_flush_context	IF,0:WHILE,0:CALL,5:SWITCH,0:FOR,0:functions,0:DO,0:ELSE,0	26
0x4001d20	        0x49c1e839	                            shr r8, 0x39	      1313	dmar.c	FUNCTION_42	CALL_3
0x4001d24	           0xfb7f6	                           movzx esi, si	      1313	dmar.c	FUNCTION_42	CALL_3
0x4001d27	           0xfb7d2	                           movzx edx, dx	      1313	dmar.c	FUNCTION_42	CALL_3
0x4001d2a	        0x4983c801	                                or r8, 1	      1313	dmar.c	FUNCTION_42	CALL_3
0x4001d2e	        0x48c1e610	                           shl rsi, 0x10	      1313	dmar.c	FUNCTION_42	CALL_3
0x4001d32	        0x48c1e220	                           shl rdx, 0x20	      1313	dmar.c	FUNCTION_42	CALL_3
0x4001d36	          0x4c09c6	                              or rsi, r8	      1313	dmar.c	FUNCTION_42	CALL_3
0x4001d39	           0xfb6c9	                           movzx ecx, cl	      1313	dmar.c	FUNCTION_42	CALL_3
0x4001d3c	        0x4883ec18	                           sub rsp, 0x18	      1310	dmar.c	FUNCTION_42
0x4001d40	          0x4809f2	                             or rdx, rsi	      1313	dmar.c	FUNCTION_42	CALL_3
0x4001d43	        0x48c1e130	                           shl rcx, 0x30	      1313	dmar.c	FUNCTION_42	CALL_3
0x4001d47	          0x4889fe	                            mov rsi, rdi	      1317	dmar.c	FUNCTION_42	CALL_5
0x4001d4a	          0x4809d1	                             or rcx, rdx	      1313	dmar.c	FUNCTION_42	CALL_3
0x4001d4d	          0x4889e7	                            mov rdi, rsp	      1317	dmar.c	FUNCTION_42	CALL_5
0x4001d50	    0x48c744240800	                  mov qword [rsp + 8], 0	      1315	dmar.c	FUNCTION_42
0x4001d59	    0x65488b042528	                mov rax, qword gs:[0x28]	      1310	dmar.c	FUNCTION_42
0x4001d62	      0x4889442410	             mov qword [rsp + 0x10], rax	      1310	dmar.c	FUNCTION_42
0x4001d67	            0x31c0	                            xor eax, eax	      1310	dmar.c	FUNCTION_42
0x4001d69	        0x48890c24	                    mov qword [rsp], rcx	      1313	dmar.c	FUNCTION_42	CALL_3
0x4001d6d	      0xe800000000	                          call 0x4001d72	      1317	dmar.c	FUNCTION_42	CALL_5
0x4001d72	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1318	dmar.c	FUNCTION_42
0x4001d77	    0x654833042528	                xor rax, qword gs:[0x28]	      1318	dmar.c	FUNCTION_42
0x4001d80	            0x7505	                           jne 0x4001d87	      1318	dmar.c	FUNCTION_42
0x4001d82	        0x4883c418	                           add rsp, 0x18	      1318	dmar.c	FUNCTION_42
0x4001d86	              0xc3	                                     ret	      1318	dmar.c	FUNCTION_42
0x4001d87	      0xe800000000	                          call 0x4001d8c	      1318	dmar.c	FUNCTION_42
dmar_table_detect	IF,1:WHILE,0:CALL,4:SWITCH,0:FOR,0:functions,0:DO,0:ELSE,0	15
0x40000c4	          0x4889c3	                            mov rbx, rax	       569	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2
0x40000c7	      0x41807d5100	                cmp byte [r13 + 0x51], 0	       575	dmar.c	FUNCTION_19	FOR_1	IF_3
0x40000cc	         0xfb74500	                   movzx eax, word [rbp]	       508	dmar.c	FUNCTION_17	SWITCH_1
0x40000d0	            0x74a4	                            je 0x4000076	       575	dmar.c	FUNCTION_19	FOR_1	IF_3
0x40000d2	        0x6683f801	                               cmp ax, 1	       508	dmar.c	FUNCTION_17	SWITCH_1
0x40000d6	            0x747f	                            je 0x4000157	       508	dmar.c	FUNCTION_17	SWITCH_1
0x40000d8	            0x7260	                            jb 0x400013a	       508	dmar.c	FUNCTION_17	SWITCH_1
0x40000da	        0x6683f802	                               cmp ax, 2	       508	dmar.c	FUNCTION_17	SWITCH_1
0x40000de	            0x7441	                            je 0x4000121	       508	dmar.c	FUNCTION_17	SWITCH_1
0x40000e0	        0x6683f803	                               cmp ax, 3	       508	dmar.c	FUNCTION_17	SWITCH_1
0x40000e4	            0x7590	                           jne 0x4000076	       508	dmar.c	FUNCTION_17	SWITCH_1
0x40000e6	          0x8b5510	            mov edx, dword [rbp + 0x10] 	       528	dmar.c	FUNCTION_17	SWITCH_1	CALL_8
0x40000e9	        0x488b7508	                mov rsi, qword [rbp + 8]	       528	dmar.c	FUNCTION_17	SWITCH_1	CALL_8
0x40000ed	    0x48c7c7000000	                              mov rdi, 0	       528	dmar.c	FUNCTION_17	SWITCH_1	CALL_8
0x40000f4	      0xe800000000	                          call 0x40000f9	       528	dmar.c	FUNCTION_17	SWITCH_1	CALL_8
dmar_get_dsm_handle	IF,1:WHILE,0:CALL,1:SWITCH,0:FOR,0:functions,0:DO,0:ELSE,0	17
0x4000570	              0x55	                                push rbp	      1993	dmar.c	FUNCTION_69
0x4000571	              0x53	                                push rbx	      1993	dmar.c	FUNCTION_69
0x4000572	            0x31d2	                            xor edx, edx	      1830	dmar.c	FUNCTION_62	CALL_1
0x4000574	          0x4889cd	                            mov rbp, rcx	      1993	dmar.c	FUNCTION_69
0x4000577	    0x48c7c6000000	                              mov rsi, 0	      1830	dmar.c	FUNCTION_62	CALL_1
0x400057e	      0xb902000000	                              mov ecx, 2	      1830	dmar.c	FUNCTION_62	CALL_1
0x4000583	          0x4889fb	                            mov rbx, rdi	      1993	dmar.c	FUNCTION_69
0x4000586	      0xe800000000	                          call 0x400058b	      1830	dmar.c	FUNCTION_62	CALL_1
0x400058b	            0x31d2	                            xor edx, edx	      1830	dmar.c	FUNCTION_62	CALL_1
0x400058d	            0x84c0	                             test al, al	      1996	dmar.c	FUNCTION_69	IF_1	CALL_1
0x400058f	            0x7409	                            je 0x400059a	      1996	dmar.c	FUNCTION_69	IF_1	CALL_1
0x4000591	        0x48895d00	                    mov qword [rbp], rbx	      1997	dmar.c	FUNCTION_69	IF_1
0x4000595	      0xba03400000	                         mov edx, 0x4003	      1998	dmar.c	FUNCTION_69	IF_1
0x400059a	            0x89d0	                            mov eax, edx	      2002	dmar.c	FUNCTION_69
0x400059c	              0x5b	                                 pop rbx	      2002	dmar.c	FUNCTION_69
0x400059d	              0x5d	                                 pop rbp	      2002	dmar.c	FUNCTION_69
0x400059e	              0xc3	                                     ret	      2002	dmar.c	FUNCTION_69
dmar_device_hotplug	IF,5:WHILE,0:CALL,9:SWITCH,0:FOR,0:functions,0:DO,0:ELSE,2	159
0x40008c0	              0x55	                                push rbp	      2005	dmar.c	FUNCTION_70
0x40008c1	              0x53	                                push rbx	      2005	dmar.c	FUNCTION_70
0x40008c2	        0x4883ec18	                           sub rsp, 0x18	      2005	dmar.c	FUNCTION_70
0x40008c6	    0x8b0d00000000	            mov ecx, dword [0x040008cc] 	      2010	dmar.c	FUNCTION_70	IF_1	CALL_1
0x40008cc	    0x65488b042528	                mov rax, qword gs:[0x28]	      2005	dmar.c	FUNCTION_70
0x40008d5	      0x4889442410	             mov qword [rsp + 0x10], rax	      2005	dmar.c	FUNCTION_70
0x40008da	            0x31c0	                            xor eax, eax	      2005	dmar.c	FUNCTION_70
0x40008dc	    0x48c744240800	                  mov qword [rsp + 8], 0	      2007	dmar.c	FUNCTION_70
0x40008e5	            0x85c9	                           test ecx, ecx	      2010	dmar.c	FUNCTION_70	IF_1	CALL_1
0x40008e7	            0x751d	                           jne 0x4000906	      2010	dmar.c	FUNCTION_70	IF_1	CALL_1
0x40008e9	            0x31c0	                            xor eax, eax	      2011	dmar.c	FUNCTION_70	IF_1
0x40008eb	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2036	dmar.c	FUNCTION_70
0x40008f0	    0x654833142528	                xor rdx, qword gs:[0x28]	      2036	dmar.c	FUNCTION_70
0x40008f9	     0xf851c020000	                           jne 0x4000b1b	      2036	dmar.c	FUNCTION_70
0x40008ff	        0x4883c418	                           add rsp, 0x18	      2036	dmar.c	FUNCTION_70
0x4000903	              0x5b	                                 pop rbx	      2036	dmar.c	FUNCTION_70
0x4000904	              0x5d	                                 pop rbp	      2036	dmar.c	FUNCTION_70
0x4000905	              0xc3	                                     ret	      2036	dmar.c	FUNCTION_70
0x4000906	            0x31d2	                            xor edx, edx	      1830	dmar.c	FUNCTION_62	CALL_1
0x4000908	            0x89f5	                            mov ebp, esi	      1830	dmar.c	FUNCTION_62	CALL_1
0x400090a	      0xb902000000	                              mov ecx, 2	      1830	dmar.c	FUNCTION_62	CALL_1
0x400090f	    0x48c7c6000000	                              mov rsi, 0	      1830	dmar.c	FUNCTION_62	CALL_1
0x4000916	          0x4889fb	                            mov rbx, rdi	      1830	dmar.c	FUNCTION_62	CALL_1
0x4000919	      0xe800000000	                          call 0x400091e	      1830	dmar.c	FUNCTION_62	CALL_1
0x400091e	            0x84c0	                             test al, al	      2013	dmar.c	FUNCTION_70	IF_2	CALL_2
0x4000920	     0xf8445010000	                            je 0x4000a6b	      2013	dmar.c	FUNCTION_70	IF_2	CALL_2
0x4000926	      0x48895c2408	                mov qword [rsp + 8], rbx	      2014	dmar.c	FUNCTION_70	IF_2
0x400092b	          0x4885db	                           test rbx, rbx	      2025	dmar.c	FUNCTION_70	IF_4
0x400092e	            0x74b9	                            je 0x40008e9	      2025	dmar.c	FUNCTION_70	IF_4
0x4000930	    0x48c7c7000000	                              mov rdi, 0	      2028	dmar.c	FUNCTION_70	CALL_6
0x4000937	      0xe800000000	                          call 0x400093c	      2028	dmar.c	FUNCTION_70	CALL_6
0x400093c	          0x4084ed	                           test bpl, bpl	      2029	dmar.c	FUNCTION_70	IF_5
0x400093f	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      2030	dmar.c	FUNCTION_70	CALL_7
0x4000944	     0xf84f2000000	                            je 0x4000a3c	      2029	dmar.c	FUNCTION_70	IF_5
0x400094a	      0xb901000000	                              mov ecx, 1	      1926	dmar.c	FUNCTION_67	CALL_1
0x400094f	    0x48c7c2000000	                              mov rdx, 0	      1926	dmar.c	FUNCTION_67	CALL_1
0x4000956	      0xbe01000000	                              mov esi, 1	      1926	dmar.c	FUNCTION_67	CALL_1
0x400095b	          0x4889ef	                            mov rdi, rbp	      1926	dmar.c	FUNCTION_67	CALL_1
0x400095e	    0xc74424040000	                  mov dword [rsp + 4], 0	      1924	dmar.c	FUNCTION_67
0x4000966	      0xe875feffff	         call sym.dmar_walk_dsm_resource	      1926	dmar.c	FUNCTION_67	CALL_1
0x400096b	            0x85c0	                           test eax, eax	      1928	dmar.c	FUNCTION_67	IF_1
0x400096d	            0x89c3	                            mov ebx, eax	      1926	dmar.c	FUNCTION_67	CALL_1
0x400096f	     0xf85e3000000	                           jne 0x4000a58	      1928	dmar.c	FUNCTION_67	IF_1
0x4000975	      0x488d4c2404	                      lea rcx, [rsp + 4]	      1931	dmar.c	FUNCTION_67	CALL_2
0x400097a	    0x48c7c2000000	                              mov rdx, 0	      1931	dmar.c	FUNCTION_67	CALL_2
0x4000981	      0xbe01000000	                              mov esi, 1	      1931	dmar.c	FUNCTION_67	CALL_2
0x4000986	          0x4889ef	                            mov rdi, rbp	      1931	dmar.c	FUNCTION_67	CALL_2
0x4000989	      0xe852feffff	         call sym.dmar_walk_dsm_resource	      1931	dmar.c	FUNCTION_67	CALL_2
0x400098e	            0x85c0	                           test eax, eax	      1933	dmar.c	FUNCTION_67	IF_2
0x4000990	            0x89c3	                            mov ebx, eax	      1931	dmar.c	FUNCTION_67	CALL_2
0x4000992	     0xf858c000000	                           jne 0x4000a24	      1933	dmar.c	FUNCTION_67	IF_2
0x4000998	        0x8b442404	                mov eax, dword [rsp + 4]	      1933	dmar.c	FUNCTION_67	IF_2
0x400099c	            0x85c0	                           test eax, eax	      1933	dmar.c	FUNCTION_67	IF_2
0x400099e	     0xf847c010000	                            je 0x4000b20	      1933	dmar.c	FUNCTION_67	IF_2
0x40009a4	            0x31c9	                            xor ecx, ecx	      1940	dmar.c	FUNCTION_67	CALL_4
0x40009a6	    0x48c7c2000000	                              mov rdx, 0	      1940	dmar.c	FUNCTION_67	CALL_4
0x40009ad	      0xbe03000000	                              mov esi, 3	      1940	dmar.c	FUNCTION_67	CALL_4
0x40009b2	          0x4889ef	                            mov rdi, rbp	      1940	dmar.c	FUNCTION_67	CALL_4
0x40009b5	      0xe826feffff	         call sym.dmar_walk_dsm_resource	      1940	dmar.c	FUNCTION_67	CALL_4
0x40009ba	            0x85c0	                           test eax, eax	      1942	dmar.c	FUNCTION_67	IF_4
0x40009bc	            0x89c3	                            mov ebx, eax	      1940	dmar.c	FUNCTION_67	CALL_4
0x40009be	            0x7564	                           jne 0x4000a24	      1942	dmar.c	FUNCTION_67	IF_4
0x40009c0	            0x31c9	                            xor ecx, ecx	      1945	dmar.c	FUNCTION_67	CALL_5
0x40009c2	    0x48c7c2000000	                              mov rdx, 0	      1945	dmar.c	FUNCTION_67	CALL_5
0x40009c9	      0xbe02000000	                              mov esi, 2	      1945	dmar.c	FUNCTION_67	CALL_5
0x40009ce	          0x4889ef	                            mov rdi, rbp	      1945	dmar.c	FUNCTION_67	CALL_5
0x40009d1	      0xe80afeffff	         call sym.dmar_walk_dsm_resource	      1945	dmar.c	FUNCTION_67	CALL_5
0x40009d6	            0x85c0	                           test eax, eax	      1947	dmar.c	FUNCTION_67	IF_5
0x40009d8	            0x89c3	                            mov ebx, eax	      1945	dmar.c	FUNCTION_67	CALL_5
0x40009da	            0x7532	                           jne 0x4000a0e	      1947	dmar.c	FUNCTION_67	IF_5
0x40009dc	            0x31c9	                            xor ecx, ecx	      1950	dmar.c	FUNCTION_67	CALL_6
0x40009de	    0x48c7c2000000	                              mov rdx, 0	      1950	dmar.c	FUNCTION_67	CALL_6
0x40009e5	      0xbe01000000	                              mov esi, 1	      1950	dmar.c	FUNCTION_67	CALL_6
0x40009ea	          0x4889ef	                            mov rdi, rbp	      1950	dmar.c	FUNCTION_67	CALL_6
0x40009ed	      0xe8eefdffff	         call sym.dmar_walk_dsm_resource	      1950	dmar.c	FUNCTION_67	CALL_6
0x40009f2	            0x85c0	                           test eax, eax	      1952	dmar.c	FUNCTION_67	IF_6
0x40009f4	            0x89c3	                            mov ebx, eax	      1950	dmar.c	FUNCTION_67	CALL_6
0x40009f6	            0x7460	                            je 0x4000a58	      1952	dmar.c	FUNCTION_67	IF_6
0x40009f8	            0x31c9	                            xor ecx, ecx	      1955	dmar.c	FUNCTION_67	CALL_7
0x40009fa	    0x48c7c2000000	                              mov rdx, 0	      1955	dmar.c	FUNCTION_67	CALL_7
0x4000a01	      0xbe01000000	                              mov esi, 1	      1955	dmar.c	FUNCTION_67	CALL_7
0x4000a06	          0x4889ef	                            mov rdi, rbp	      1955	dmar.c	FUNCTION_67	CALL_7
0x4000a09	      0xe8d2fdffff	         call sym.dmar_walk_dsm_resource	      1955	dmar.c	FUNCTION_67	CALL_7
0x4000a0e	            0x31c9	                            xor ecx, ecx	      1958	dmar.c	FUNCTION_67	CALL_8
0x4000a10	    0x48c7c2000000	                              mov rdx, 0	      1958	dmar.c	FUNCTION_67	CALL_8
0x4000a17	      0xbe02000000	                              mov esi, 2	      1958	dmar.c	FUNCTION_67	CALL_8
0x4000a1c	          0x4889ef	                            mov rdi, rbp	      1958	dmar.c	FUNCTION_67	CALL_8
0x4000a1f	      0xe8bcfdffff	         call sym.dmar_walk_dsm_resource	      1958	dmar.c	FUNCTION_67	CALL_8
0x4000a24	            0x31c9	                            xor ecx, ecx	      1961	dmar.c	FUNCTION_67	CALL_9
0x4000a26	    0x48c7c2000000	                              mov rdx, 0	      1961	dmar.c	FUNCTION_67	CALL_9
0x4000a2d	      0xbe01000000	                              mov esi, 1	      1961	dmar.c	FUNCTION_67	CALL_9
0x4000a32	          0x4889ef	                            mov rdi, rbp	      1961	dmar.c	FUNCTION_67	CALL_9
0x4000a35	      0xe8a6fdffff	         call sym.dmar_walk_dsm_resource	      1961	dmar.c	FUNCTION_67	CALL_9
0x4000a3a	            0xeb1c	                           jmp 0x4000a58	      1961	dmar.c	FUNCTION_67	CALL_9
0x4000a3c	            0x31c9	                            xor ecx, ecx	      1971	dmar.c	FUNCTION_68	CALL_1
0x4000a3e	    0x48c7c2000000	                              mov rdx, 0	      1971	dmar.c	FUNCTION_68	CALL_1
0x4000a45	      0xbe02000000	                              mov esi, 2	      1971	dmar.c	FUNCTION_68	CALL_1
0x4000a4a	          0x4889ef	                            mov rdi, rbp	      1971	dmar.c	FUNCTION_68	CALL_1
0x4000a4d	      0xe88efdffff	         call sym.dmar_walk_dsm_resource	      1971	dmar.c	FUNCTION_68	CALL_1
0x4000a52	            0x85c0	                           test eax, eax	      1973	dmar.c	FUNCTION_68	IF_1
0x4000a54	            0x89c3	                            mov ebx, eax	      1971	dmar.c	FUNCTION_68	CALL_1
0x4000a56	            0x744b	                            je 0x4000aa3	      1973	dmar.c	FUNCTION_68	IF_1
0x4000a58	    0x48c7c7000000	                              mov rdi, 0	      2033	dmar.c	FUNCTION_70	CALL_9
0x4000a5f	      0xe800000000	                          call 0x4000a64	      2033	dmar.c	FUNCTION_70	CALL_9
0x4000a64	            0x89d8	                            mov eax, ebx	      2035	dmar.c	FUNCTION_70
0x4000a66	      0xe980feffff	                           jmp 0x40008eb	      2035	dmar.c	FUNCTION_70
0x4000a6b	      0x488d442408	                      lea rax, [rsp + 8]	      2016	dmar.c	FUNCTION_70	ELSE_1	CALL_3
0x4000a70	          0x4531c9	                            xor r9d, r9d	      2016	dmar.c	FUNCTION_70	ELSE_1	CALL_3
0x4000a73	          0x4531c0	                            xor r8d, r8d	      2016	dmar.c	FUNCTION_70	ELSE_1	CALL_3
0x4000a76	      0xbaffffffff	                     mov edx, 0xffffffff	      2016	dmar.c	FUNCTION_70	ELSE_1	CALL_3
0x4000a7b	    0x48c7c1000000	                              mov rcx, 0	      2016	dmar.c	FUNCTION_70	ELSE_1	CALL_3
0x4000a82	          0x4889de	                            mov rsi, rbx	      2016	dmar.c	FUNCTION_70	ELSE_1	CALL_3
0x4000a85	              0x50	                                push rax	      2016	dmar.c	FUNCTION_70	ELSE_1	CALL_3
0x4000a86	      0xbf06000000	                              mov edi, 6	      2016	dmar.c	FUNCTION_70	ELSE_1	CALL_3
0x4000a8b	      0xe800000000	                          call 0x4000a90	      2016	dmar.c	FUNCTION_70	ELSE_1	CALL_3
0x4000a90	            0x85c0	                           test eax, eax	      2020	dmar.c	FUNCTION_70	ELSE_1	IF_3	CALL_4
0x4000a92	              0x5a	                                 pop rdx	      2020	dmar.c	FUNCTION_70	ELSE_1	IF_3	CALL_4
0x4000a93	     0xf8598000000	                           jne 0x4000b31	      2020	dmar.c	FUNCTION_70	ELSE_1	IF_3	CALL_4
0x4000a99	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      2020	dmar.c	FUNCTION_70	ELSE_1	IF_3	CALL_4
0x4000a9e	      0xe988feffff	                           jmp 0x400092b	      2020	dmar.c	FUNCTION_70	ELSE_1	IF_3	CALL_4
0x4000aa3	            0x31c9	                            xor ecx, ecx	      1976	dmar.c	FUNCTION_68	CALL_2
0x4000aa5	    0x48c7c2000000	                              mov rdx, 0	      1976	dmar.c	FUNCTION_68	CALL_2
0x4000aac	      0xbe01000000	                              mov esi, 1	      1976	dmar.c	FUNCTION_68	CALL_2
0x4000ab1	          0x4889ef	                            mov rdi, rbp	      1976	dmar.c	FUNCTION_68	CALL_2
0x4000ab4	      0xe827fdffff	         call sym.dmar_walk_dsm_resource	      1976	dmar.c	FUNCTION_68	CALL_2
0x4000ab9	            0x31c9	                            xor ecx, ecx	      1979	dmar.c	FUNCTION_68	IF_2	CALL_4
0x4000abb	            0x85c0	                           test eax, eax	      1978	dmar.c	FUNCTION_68	IF_2
0x4000abd	            0x89c3	                            mov ebx, eax	      1976	dmar.c	FUNCTION_68	CALL_2
0x4000abf	            0x753d	                           jne 0x4000afe	      1978	dmar.c	FUNCTION_68	IF_2
0x4000ac1	    0x48c7c2000000	                              mov rdx, 0	      1979	dmar.c	FUNCTION_68	IF_2	CALL_4
0x4000ac8	      0xbe02000000	                              mov esi, 2	      1979	dmar.c	FUNCTION_68	IF_2	CALL_4
0x4000acd	          0x4889ef	                            mov rdi, rbp	      1979	dmar.c	FUNCTION_68	IF_2	CALL_4
0x4000ad0	      0xe80bfdffff	         call sym.dmar_walk_dsm_resource	      1979	dmar.c	FUNCTION_68	IF_2	CALL_4
0x4000ad5	            0x85c0	                           test eax, eax	      1979	dmar.c	FUNCTION_68	IF_2	CALL_4
0x4000ad7	            0x753e	                           jne 0x4000b17	      1979	dmar.c	FUNCTION_68	IF_2	CALL_4
0x4000ad9	            0x31c9	                            xor ecx, ecx	      1981	dmar.c	FUNCTION_68	IF_2	CALL_6
0x4000adb	    0x48c7c2000000	                              mov rdx, 0	      1981	dmar.c	FUNCTION_68	IF_2	CALL_6
0x4000ae2	      0xbe01000000	                              mov esi, 1	      1981	dmar.c	FUNCTION_68	IF_2	CALL_6
0x4000ae7	          0x4889ef	                            mov rdi, rbp	      1981	dmar.c	FUNCTION_68	IF_2	CALL_6
0x4000aea	      0xe8f1fcffff	         call sym.dmar_walk_dsm_resource	      1981	dmar.c	FUNCTION_68	IF_2	CALL_6
0x4000aef	            0x85c0	                           test eax, eax	      1981	dmar.c	FUNCTION_68	IF_2	CALL_6
0x4000af1	     0xf8461ffffff	                            je 0x4000a58	      1981	dmar.c	FUNCTION_68	IF_2	CALL_6
0x4000af7	             0xf0b	                                     ud2	      1981	dmar.c	FUNCTION_68	IF_2	CALL_6
0x4000af9	      0xe95affffff	                           jmp 0x4000a58	      1981	dmar.c	FUNCTION_68	IF_2	CALL_6
0x4000afe	    0x48c7c2000000	                              mov rdx, 0	      1984	dmar.c	FUNCTION_68	ELSE_1	CALL_7
0x4000b05	      0xbe01000000	                              mov esi, 1	      1984	dmar.c	FUNCTION_68	ELSE_1	CALL_7
0x4000b0a	          0x4889ef	                            mov rdi, rbp	      1984	dmar.c	FUNCTION_68	ELSE_1	CALL_7
0x4000b0d	      0xe8cefcffff	         call sym.dmar_walk_dsm_resource	      1984	dmar.c	FUNCTION_68	ELSE_1	CALL_7
0x4000b12	      0xe941ffffff	                           jmp 0x4000a58	      1984	dmar.c	FUNCTION_68	ELSE_1	CALL_7
0x4000b17	             0xf0b	                                     ud2	      1984	dmar.c	FUNCTION_68	ELSE_1	CALL_7
0x4000b19	            0xebbe	                           jmp 0x4000ad9	      1979	dmar.c	FUNCTION_68	IF_2	CALL_4
0x4000b1b	      0xe800000000	                          call 0x4000b20	      2036	dmar.c	FUNCTION_70
0x4000b20	    0x48c7c7000000	                              mov rdi, 0	      1934	dmar.c	FUNCTION_67	IF_2	CALL_3
0x4000b27	      0xe800000000	                          call 0x4000b2c	      1934	dmar.c	FUNCTION_67	IF_2	CALL_3
0x4000b2c	      0xe927ffffff	                           jmp 0x4000a58	      1934	dmar.c	FUNCTION_67	IF_2	CALL_3
0x4000b31	    0x48c7c7000000	                              mov rdi, 0	      2021	dmar.c	FUNCTION_70	ELSE_1	IF_3	CALL_5
0x4000b38	      0xe800000000	                          call 0x4000b3d	      2021	dmar.c	FUNCTION_70	ELSE_1	IF_3	CALL_5
0x4000b3d	      0xb8faffffff	                     mov eax, 0xfffffffa	      2022	dmar.c	FUNCTION_70	ELSE_1	IF_3
0x4000b42	      0xe9a4fdffff	                           jmp 0x40008eb	      2022	dmar.c	FUNCTION_70	ELSE_1	IF_3
dmar_walk_remapping_entries	IF,7:WHILE,0:CALL,5:SWITCH,0:FOR,1:functions,0:DO,0:ELSE,3	93
0x4000040	            0x4155	                                push r13	       559	dmar.c	FUNCTION_19
0x4000042	            0x4154	                                push r12	       559	dmar.c	FUNCTION_19
0x4000044	        0x4c8d2437	                    lea r12, [rdi + rsi]	       561	dmar.c	FUNCTION_19
0x4000048	              0x55	                                push rbp	       559	dmar.c	FUNCTION_19
0x4000049	              0x53	                                push rbx	       559	dmar.c	FUNCTION_19
0x400004a	          0x4c39e7	                            cmp rdi, r12	       563	dmar.c	FUNCTION_19	FOR_1
0x400004d	     0xf8321010000	                           jae 0x4000174	       563	dmar.c	FUNCTION_19	FOR_1
0x4000053	         0xfb75f02	               movzx ebx, word [rdi + 2]	       564	dmar.c	FUNCTION_19	FOR_1
0x4000057	          0x4889fd	                            mov rbp, rdi	       564	dmar.c	FUNCTION_19	FOR_1
0x400005a	          0x4889d8	                            mov rax, rbx	       564	dmar.c	FUNCTION_19	FOR_1
0x400005d	          0x4801fb	                            add rbx, rdi	       564	dmar.c	FUNCTION_19	FOR_1
0x4000060	          0x6685c0	                             test ax, ax	       565	dmar.c	FUNCTION_19	FOR_1	IF_1
0x4000063	     0xf840b010000	                            je 0x4000174	       565	dmar.c	FUNCTION_19	FOR_1	IF_1
0x4000069	          0x4939dc	                            cmp r12, rbx	       569	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2
0x400006c	          0x4989d5	                            mov r13, rdx	       569	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2
0x400006f	            0x7356	                           jae 0x40000c7	       569	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2
0x4000071	      0xe907010000	                           jmp 0x400017d	       569	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2
0x4000076	        0x6683f804	                               cmp ax, 4	       578	dmar.c	FUNCTION_19	FOR_1	IF_4
0x400007a	            0x7720	                            ja 0x400009c	       578	dmar.c	FUNCTION_19	FOR_1	IF_4
0x400007c	      0x498d54c500	                  lea rdx, [r13 + rax*8]	       578	dmar.c	FUNCTION_19	FOR_1	IF_4
0x4000081	           0xfb7f0	                           movzx esi, ax	       582	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0x4000084	          0x488b02	                    mov rax, qword [rdx]	       582	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0x4000087	          0x4885c0	                           test rax, rax	       582	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0x400008a	            0x7476	                            je 0x4000102	       582	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0x400008c	        0x488b7228	            mov rsi, qword [rdx + 0x28] 	       585	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0x4000090	          0x4889ef	                            mov rdi, rbp	       585	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0x4000093	      0xe800000000	                          call 0x4000098	       585	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0x4000098	            0x85c0	                           test eax, eax	       586	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5	IF_6
0x400009a	            0x757e	                           jne 0x400011a	       586	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5	IF_6
0x400009c	          0x4939dc	                            cmp r12, rbx	       563	dmar.c	FUNCTION_19	FOR_1
0x400009f	     0xf86cf000000	                           jbe 0x4000174	       563	dmar.c	FUNCTION_19	FOR_1
0x40000a5	         0xfb74302	               movzx eax, word [rbx + 2]	       564	dmar.c	FUNCTION_19	FOR_1
0x40000a9	          0x4889c2	                            mov rdx, rax	       564	dmar.c	FUNCTION_19	FOR_1
0x40000ac	          0x4801d8	                            add rax, rbx	       564	dmar.c	FUNCTION_19	FOR_1
0x40000af	          0x6685d2	                             test dx, dx	       565	dmar.c	FUNCTION_19	FOR_1	IF_1
0x40000b2	     0xf84bc000000	                            je 0x4000174	       565	dmar.c	FUNCTION_19	FOR_1	IF_1
0x40000b8	          0x4939c4	                            cmp r12, rax	       569	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2
0x40000bb	          0x4889dd	                            mov rbp, rbx	       569	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2
0x40000be	     0xf82b9000000	                            jb 0x400017d	       569	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2
0x40000c4	          0x4889c3	                            mov rbx, rax	       569	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2
0x40000c7	      0x41807d5100	                cmp byte [r13 + 0x51], 0	       575	dmar.c	FUNCTION_19	FOR_1	IF_3
0x40000cc	         0xfb74500	                   movzx eax, word [rbp]	       508	dmar.c	FUNCTION_17	SWITCH_1
0x40000d0	            0x74a4	                            je 0x4000076	       575	dmar.c	FUNCTION_19	FOR_1	IF_3
0x40000d2	        0x6683f801	                               cmp ax, 1	       508	dmar.c	FUNCTION_17	SWITCH_1
0x40000d6	            0x747f	                            je 0x4000157	       508	dmar.c	FUNCTION_17	SWITCH_1
0x40000d8	            0x7260	                            jb 0x400013a	       508	dmar.c	FUNCTION_17	SWITCH_1
0x40000da	        0x6683f802	                               cmp ax, 2	       508	dmar.c	FUNCTION_17	SWITCH_1
0x40000de	            0x7441	                            je 0x4000121	       508	dmar.c	FUNCTION_17	SWITCH_1
0x40000e0	        0x6683f803	                               cmp ax, 3	       508	dmar.c	FUNCTION_17	SWITCH_1
0x40000e4	            0x7590	                           jne 0x4000076	       508	dmar.c	FUNCTION_17	SWITCH_1
0x40000e6	          0x8b5510	            mov edx, dword [rbp + 0x10] 	       528	dmar.c	FUNCTION_17	SWITCH_1	CALL_8
0x40000e9	        0x488b7508	                mov rsi, qword [rbp + 8]	       528	dmar.c	FUNCTION_17	SWITCH_1	CALL_8
0x40000ed	    0x48c7c7000000	                              mov rdi, 0	       528	dmar.c	FUNCTION_17	SWITCH_1	CALL_8
0x40000f4	      0xe800000000	                          call 0x40000f9	       528	dmar.c	FUNCTION_17	SWITCH_1	CALL_8
0x40000f9	         0xfb74500	                   movzx eax, word [rbp]	       528	dmar.c	FUNCTION_17	SWITCH_1	CALL_8
0x40000fd	      0xe974ffffff	                           jmp 0x4000076	       528	dmar.c	FUNCTION_17	SWITCH_1	CALL_8
0x4000102	      0x41807d5000	                cmp byte [r13 + 0x50], 0	       588	dmar.c	FUNCTION_19	FOR_1	ELSE_3	IF_7
0x4000107	            0x7593	                           jne 0x400009c	       588	dmar.c	FUNCTION_19	FOR_1	ELSE_3	IF_7
0x4000109	    0x48c7c7000000	                              mov rdi, 0	       589	dmar.c	FUNCTION_19	FOR_1	ELSE_3	IF_7	CALL_5
0x4000110	      0xe800000000	                          call 0x4000115	       589	dmar.c	FUNCTION_19	FOR_1	ELSE_3	IF_7	CALL_5
0x4000115	      0xb8eaffffff	                     mov eax, 0xffffffea	       591	dmar.c	FUNCTION_19	FOR_1	ELSE_3	IF_7
0x400011a	              0x5b	                                 pop rbx	       596	dmar.c	FUNCTION_19
0x400011b	              0x5d	                                 pop rbp	       596	dmar.c	FUNCTION_19
0x400011c	            0x415c	                                 pop r12	       596	dmar.c	FUNCTION_19
0x400011e	            0x415d	                                 pop r13	       596	dmar.c	FUNCTION_19
0x4000120	              0xc3	                                     ret	       596	dmar.c	FUNCTION_19
0x4000121	         0xfb67504	               movzx esi, byte [rbp + 4]	       524	dmar.c	FUNCTION_17	SWITCH_1	CALL_6
0x4000125	    0x48c7c7000000	                              mov rdi, 0	       524	dmar.c	FUNCTION_17	SWITCH_1	CALL_6
0x400012c	      0xe800000000	                          call 0x4000131	       524	dmar.c	FUNCTION_17	SWITCH_1	CALL_6
0x4000131	         0xfb74500	                   movzx eax, word [rbp]	       524	dmar.c	FUNCTION_17	SWITCH_1	CALL_6
0x4000135	      0xe93cffffff	                           jmp 0x4000076	       524	dmar.c	FUNCTION_17	SWITCH_1	CALL_6
0x400013a	         0xfb65504	               movzx edx, byte [rbp + 4]	       512	dmar.c	FUNCTION_17	SWITCH_1	CALL_2
0x400013e	        0x488b7508	                mov rsi, qword [rbp + 8]	       512	dmar.c	FUNCTION_17	SWITCH_1	CALL_2
0x4000142	    0x48c7c7000000	                              mov rdi, 0	       512	dmar.c	FUNCTION_17	SWITCH_1	CALL_2
0x4000149	      0xe800000000	                          call 0x400014e	       512	dmar.c	FUNCTION_17	SWITCH_1	CALL_2
0x400014e	         0xfb74500	                   movzx eax, word [rbp]	       512	dmar.c	FUNCTION_17	SWITCH_1	CALL_2
0x4000152	      0xe91fffffff	                           jmp 0x4000076	       512	dmar.c	FUNCTION_17	SWITCH_1	CALL_2
0x4000157	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       518	dmar.c	FUNCTION_17	SWITCH_1	CALL_4
0x400015b	        0x488b7508	                mov rsi, qword [rbp + 8]	       518	dmar.c	FUNCTION_17	SWITCH_1	CALL_4
0x400015f	    0x48c7c7000000	                              mov rdi, 0	       518	dmar.c	FUNCTION_17	SWITCH_1	CALL_4
0x4000166	      0xe800000000	                          call 0x400016b	       518	dmar.c	FUNCTION_17	SWITCH_1	CALL_4
0x400016b	         0xfb74500	                   movzx eax, word [rbp]	       518	dmar.c	FUNCTION_17	SWITCH_1	CALL_4
0x400016f	      0xe902ffffff	                           jmp 0x4000076	       518	dmar.c	FUNCTION_17	SWITCH_1	CALL_4
0x4000174	              0x5b	                                 pop rbx	       596	dmar.c	FUNCTION_19
0x4000175	            0x31c0	                            xor eax, eax	       595	dmar.c	FUNCTION_19
0x4000177	              0x5d	                                 pop rbp	       596	dmar.c	FUNCTION_19
0x4000178	            0x415c	                                 pop r12	       596	dmar.c	FUNCTION_19
0x400017a	            0x415d	                                 pop r13	       596	dmar.c	FUNCTION_19
0x400017c	              0xc3	                                     ret	       596	dmar.c	FUNCTION_19
0x400017d	    0x48c7c7000000	                              mov rdi, 0	       571	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2	CALL_2
0x4000184	      0xe800000000	                          call 0x4000189	       571	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2	CALL_2
0x4000189	      0xb8eaffffff	                     mov eax, 0xffffffea	       572	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2
0x400018e	            0xeb8a	                           jmp 0x400011a	       572	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2
dmar_ir_support	IF,1:WHILE,0:CALL,0:SWITCH,0:FOR,0:functions,0:DO,0:ELSE,0	8
0x40006b4	               0x0	                      add byte [rax], al	       841	dmar.c	ELSE_2	FUNCTION_29	CALL_1
0x40006b6	               0x1	                      add byte [rcx], al	       841	dmar.c	ELSE_2	FUNCTION_29	CALL_1
0x40006b8	      0xe800000000	                          call 0x40006bd	       841	dmar.c	ELSE_2	FUNCTION_29	CALL_1
0x40006bd	      0xbf02000000	                              mov edi, 2	       841	dmar.c	ELSE_2	FUNCTION_29	CALL_1
0x40006c2	          0x4989c5	                            mov r13, rax	       841	dmar.c	ELSE_2	FUNCTION_29	CALL_1
0x40006c5	              0xe8	                                 invalid	       841	dmar.c	ELSE_2	FUNCTION_29	CALL_1
0x40006c6	               0x0	                      add byte [rax], al	       841	dmar.c	ELSE_2	FUNCTION_29	CALL_1
0x40006c8	               0x0	                                 invalid	       841	dmar.c	ELSE_2	FUNCTION_29	CALL_1
qi_flush_iotlb	IF,2:WHILE,0:CALL,10:SWITCH,0:FOR,0:functions,0:DO,0:ELSE,0	31
0x4001d90	        0x4883ec18	                           sub rsp, 0x18	      1322	dmar.c	FUNCTION_43
0x4001d94	        0x49c1e838	                            shr r8, 0x38	      1334	dmar.c	FUNCTION_43	CALL_5
0x4001d98	           0xfb7f6	                           movzx esi, si	      1334	dmar.c	FUNCTION_43	CALL_5
0x4001d9b	    0x65488b042528	                mov rax, qword gs:[0x28]	      1322	dmar.c	FUNCTION_43
0x4001da4	      0x4889442410	             mov qword [rsp + 0x10], rax	      1322	dmar.c	FUNCTION_43
0x4001da9	            0x31c0	                            xor eax, eax	      1322	dmar.c	FUNCTION_43
0x4001dab	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      1328	dmar.c	FUNCTION_43	IF_1	CALL_1
0x4001daf	        0x48c1e610	                           shl rsi, 0x10	      1334	dmar.c	FUNCTION_43	CALL_5
0x4001db3	    0x4881e200f0ff	             and rdx, 0xfffffffffffff000	      1336	dmar.c	FUNCTION_43	CALL_8
0x4001dba	           0xfb6c9	                           movzx ecx, cl	      1336	dmar.c	FUNCTION_43	CALL_8
0x4001dbd	          0x4809d1	                             or rcx, rdx	      1336	dmar.c	FUNCTION_43	CALL_8
0x4001dc0	          0x4989c1	                             mov r9, rax	      1334	dmar.c	FUNCTION_43	CALL_5
0x4001dc3	        0x48c1e830	                           shr rax, 0x30	      1334	dmar.c	FUNCTION_43	CALL_5
0x4001dc7	      0x48894c2408	                mov qword [rsp + 8], rcx	      1336	dmar.c	FUNCTION_43	CALL_8
0x4001dcc	        0x49c1e930	                            shr r9, 0x30	      1334	dmar.c	FUNCTION_43	CALL_5
0x4001dd0	          0x83e040	                           and eax, 0x40	      1334	dmar.c	FUNCTION_43	CALL_5
0x4001dd3	    0x4181e1800000	                           and r9d, 0x80	      1334	dmar.c	FUNCTION_43	CALL_5
0x4001dda	          0x4c09c8	                              or rax, r9	      1334	dmar.c	FUNCTION_43	CALL_5
0x4001ddd	        0x4883c802	                               or rax, 2	      1334	dmar.c	FUNCTION_43	CALL_5
0x4001de1	          0x4c09c0	                              or rax, r8	      1334	dmar.c	FUNCTION_43	CALL_5
0x4001de4	          0x4809f0	                             or rax, rsi	      1334	dmar.c	FUNCTION_43	CALL_5
0x4001de7	          0x4889fe	                            mov rsi, rdi	      1339	dmar.c	FUNCTION_43	CALL_10
0x4001dea	          0x4889e7	                            mov rdi, rsp	      1339	dmar.c	FUNCTION_43	CALL_10
0x4001ded	        0x48890424	                    mov qword [rsp], rax	      1334	dmar.c	FUNCTION_43	CALL_5
0x4001df1	      0xe800000000	                          call 0x4001df6	      1339	dmar.c	FUNCTION_43	CALL_10
0x4001df6	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1340	dmar.c	FUNCTION_43
0x4001dfb	    0x654833042528	                xor rax, qword gs:[0x28]	      1340	dmar.c	FUNCTION_43
0x4001e04	            0x7505	                           jne 0x4001e0b	      1340	dmar.c	FUNCTION_43
0x4001e06	        0x4883c418	                           add rsp, 0x18	      1340	dmar.c	FUNCTION_43
0x4001e0a	              0xc3	                                     ret	      1340	dmar.c	FUNCTION_43
0x4001e0b	      0xe800000000	             call sym.qi_flush_dev_iotlb	      1340	dmar.c	FUNCTION_43
dmar_free_drhd	IF,2:WHILE,0:CALL,3:SWITCH,0:FOR,0:functions,0:DO,0:ELSE,0	73
0x4001370	            0x4154	                                push r12	       439	dmar.c	FUNCTION_14
0x4001372	              0x55	                                push rbp	       439	dmar.c	FUNCTION_14
0x4001373	          0x4889fd	                            mov rbp, rdi	       439	dmar.c	FUNCTION_14
0x4001376	              0x53	                                push rbx	       439	dmar.c	FUNCTION_14
0x4001377	      0x48837f2000	               cmp qword [rdi + 0x20], 0	       440	dmar.c	FUNCTION_14	IF_1
0x400137c	            0x740b	                            je 0x4001389	       440	dmar.c	FUNCTION_14	IF_1
0x400137e	          0x8b5728	            mov edx, dword [rdi + 0x28] 	       440	dmar.c	FUNCTION_14	IF_1
0x4001381	            0x85d2	                           test edx, edx	       440	dmar.c	FUNCTION_14	IF_1
0x4001383	     0xf85b2000000	                           jne 0x400143b	       440	dmar.c	FUNCTION_14	IF_1
0x4001389	        0x488b5d30	            mov rbx, qword [rbp + 0x30] 	       442	dmar.c	FUNCTION_14	IF_2
0x400138d	          0x4885db	                           test rbx, rbx	       442	dmar.c	FUNCTION_14	IF_2
0x4001390	            0x747a	                            je 0x400140c	       442	dmar.c	FUNCTION_14	IF_2
0x4001392	    0x8b0500000000	            mov eax, dword [0x04001398] 	      1115	dmar.c	FUNCTION_37	IF_1
0x4001398	            0x85c0	                           test eax, eax	      1115	dmar.c	FUNCTION_37	IF_1
0x400139a	     0xf85ad000000	                           jne 0x400144d	      1115	dmar.c	FUNCTION_37	IF_1
0x40013a0	          0x8b7b3c	            mov edi, dword [rbx + 0x3c] 	      1120	dmar.c	FUNCTION_37	IF_2
0x40013a3	            0x85ff	                           test edi, edi	      1120	dmar.c	FUNCTION_37	IF_2
0x40013a5	            0x7571	                           jne 0x4001418	      1120	dmar.c	FUNCTION_37	IF_2
0x40013a7	    0x488b83880000	            mov rax, qword [rbx + 0x88] 	      1131	dmar.c	FUNCTION_37	IF_4
0x40013ae	          0x4885c0	                           test rax, rax	      1131	dmar.c	FUNCTION_37	IF_4
0x40013b1	            0x7427	                            je 0x40013da	      1131	dmar.c	FUNCTION_37	IF_4
0x40013b3	        0x488b7808	                mov rdi, qword [rax + 8]	      1132	dmar.c	FUNCTION_37	IF_4	CALL_7
0x40013b7	            0x31f6	                            xor esi, esi	      1132	dmar.c	FUNCTION_37	IF_4	CALL_7
0x40013b9	      0xe800000000	                          call 0x40013be	      1132	dmar.c	FUNCTION_37	IF_4	CALL_7
0x40013be	    0x488b83880000	            mov rax, qword [rbx + 0x88] 	      1133	dmar.c	FUNCTION_37	IF_4	CALL_8
0x40013c5	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      1133	dmar.c	FUNCTION_37	IF_4	CALL_8
0x40013c9	      0xe800000000	                          call 0x40013ce	      1133	dmar.c	FUNCTION_37	IF_4	CALL_8
0x40013ce	    0x488bbb880000	            mov rdi, qword [rbx + 0x88] 	      1134	dmar.c	FUNCTION_37	IF_4	CALL_9
0x40013d5	      0xe800000000	                          call 0x40013da	      1134	dmar.c	FUNCTION_37	IF_4	CALL_9
0x40013da	          0x488b3b	                    mov rdi, qword [rbx]	      1137	dmar.c	FUNCTION_37	IF_5
0x40013dd	          0x4885ff	                           test rdi, rdi	      1137	dmar.c	FUNCTION_37	IF_5
0x40013e0	            0x7419	                            je 0x40013fb	      1137	dmar.c	FUNCTION_37	IF_5
0x40013e2	      0xe800000000	                          call 0x40013e7	       924	dmar.c	FUNCTION_32	CALL_1
0x40013e7	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       925	dmar.c	FUNCTION_32	CALL_2
0x40013eb	        0x488b7308	                mov rsi, qword [rbx + 8]	       925	dmar.c	FUNCTION_32	CALL_2
0x40013ef	    0x48c7c7000000	                              mov rdi, 0	       925	dmar.c	FUNCTION_32	CALL_2
0x40013f6	      0xe800000000	                          call 0x40013fb	       925	dmar.c	FUNCTION_32	CALL_2
0x40013fb	        0x488d7b30	                   lea rdi, [rbx + 0x30]	       925	dmar.c	FUNCTION_32	CALL_2
0x40013ff	      0xe87cf2ffff	        call sym.dmar_free_seq_id.isra.7	      1140	dmar.c	FUNCTION_37	CALL_11
0x4001404	          0x4889df	                            mov rdi, rbx	      1141	dmar.c	FUNCTION_37	CALL_12
0x4001407	      0xe800000000	                          call 0x400140c	      1141	dmar.c	FUNCTION_37	CALL_12
0x400140c	              0x5b	                                 pop rbx	       445	dmar.c	FUNCTION_14
0x400140d	          0x4889ef	                            mov rdi, rbp	       444	dmar.c	FUNCTION_14	CALL_3
0x4001410	              0x5d	                                 pop rbp	       445	dmar.c	FUNCTION_14
0x4001411	            0x415c	                                 pop r12	       445	dmar.c	FUNCTION_14
0x4001413	      0xe900000000	                           jmp 0x4001418	       444	dmar.c	FUNCTION_14	CALL_3
0x4001418	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      1121	dmar.c	FUNCTION_37	IF_2	IF_3
0x400141b	            0x85c0	                           test eax, eax	      1121	dmar.c	FUNCTION_37	IF_2	IF_3
0x400141d	            0x754a	                           jne 0x4001469	      1121	dmar.c	FUNCTION_37	IF_2	IF_3
0x400141f	          0x4889de	                            mov rsi, rbx	      1126	dmar.c	FUNCTION_37	IF_2	CALL_5
0x4001422	      0xe800000000	                          call 0x4001427	      1126	dmar.c	FUNCTION_37	IF_2	CALL_5
0x4001427	          0x8b7b3c	            mov edi, dword [rbx + 0x3c] 	      1127	dmar.c	FUNCTION_37	IF_2	CALL_6
0x400142a	      0xe800000000	                          call 0x400142f	      1127	dmar.c	FUNCTION_37	IF_2	CALL_6
0x400142f	    0xc7433c000000	               mov dword [rbx + 0x3c], 0	      1128	dmar.c	FUNCTION_37	IF_2
0x4001436	      0xe96cffffff	                           jmp 0x40013a7	      1128	dmar.c	FUNCTION_37	IF_2
0x400143b	        0x488d7728	                   lea rsi, [rdi + 0x28]	       441	dmar.c	FUNCTION_14	CALL_1
0x400143f	        0x488d7f20	                   lea rdi, [rdi + 0x20]	       441	dmar.c	FUNCTION_14	CALL_1
0x4001443	      0xe800000000	                          call 0x4001448	       441	dmar.c	FUNCTION_14	CALL_1
0x4001448	      0xe93cffffff	                           jmp 0x4001389	       441	dmar.c	FUNCTION_14	CALL_1
0x400144d	    0x4c8da3980000	                   lea r12, [rbx + 0x98]	      1116	dmar.c	FUNCTION_37	IF_1	CALL_1
0x4001454	          0x4c89e7	                            mov rdi, r12	      1116	dmar.c	FUNCTION_37	IF_1	CALL_1
0x4001457	      0xe800000000	                          call 0x400145c	      1116	dmar.c	FUNCTION_37	IF_1	CALL_1
0x400145c	          0x4c89e7	                            mov rdi, r12	      1117	dmar.c	FUNCTION_37	IF_1	CALL_2
0x400145f	      0xe800000000	                          call 0x4001464	      1117	dmar.c	FUNCTION_37	IF_1	CALL_2
0x4001464	      0xe937ffffff	                           jmp 0x40013a0	      1117	dmar.c	FUNCTION_37	IF_1	CALL_2
0x4001469	          0x4889de	                            mov rsi, rbx	      1122	dmar.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x400146c	            0x89c7	                            mov edi, eax	      1122	dmar.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x400146e	      0xe800000000	                          call 0x4001473	      1122	dmar.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x4001473	          0x8b7b40	            mov edi, dword [rbx + 0x40] 	      1123	dmar.c	FUNCTION_37	IF_2	IF_3	CALL_4
0x4001476	      0xe800000000	                          call 0x400147b	      1123	dmar.c	FUNCTION_37	IF_2	IF_3	CALL_4
0x400147b	    0xc74340000000	               mov dword [rbx + 0x40], 0	      1124	dmar.c	FUNCTION_37	IF_2	IF_3
0x4001482	          0x8b7b3c	            mov edi, dword [rbx + 0x3c] 	      1124	dmar.c	FUNCTION_37	IF_2	IF_3
0x4001485	            0xeb98	                           jmp 0x400141f	      1124	dmar.c	FUNCTION_37	IF_2	IF_3
qi_flush_dev_iotlb	IF,2:WHILE,0:CALL,6:SWITCH,0:FOR,0:functions,0:DO,0:ELSE,1	45
0x4001e10	        0x4883ec18	                           sub rsp, 0x18	      1344	dmar.c	FUNCTION_44
0x4001e14	          0x4989c9	                             mov r9, rcx	      1344	dmar.c	FUNCTION_44
0x4001e17	    0x65488b042528	                mov rax, qword gs:[0x28]	      1344	dmar.c	FUNCTION_44
0x4001e20	      0x4889442410	             mov qword [rsp + 0x10], rax	      1344	dmar.c	FUNCTION_44
0x4001e25	            0x31c0	                            xor eax, eax	      1344	dmar.c	FUNCTION_44
0x4001e27	          0x4585c0	                           test r8d, r8d	      1347	dmar.c	FUNCTION_44	IF_1
0x4001e2a	            0x7478	                            je 0x4001ea4	      1347	dmar.c	FUNCTION_44	IF_1
0x4001e2c	        0x418d480c	                     lea ecx, [r8 + 0xc]	      1348	dmar.c	FUNCTION_44	IF_1	CALL_1
0x4001e30	      0xb801000000	                              mov eax, 1	      1348	dmar.c	FUNCTION_44	IF_1	CALL_1
0x4001e35	          0x48d3e0	                             shl rax, cl	      1348	dmar.c	FUNCTION_44	IF_1	CALL_1
0x4001e38	        0x4883e801	                              sub rax, 1	      1348	dmar.c	FUNCTION_44	IF_1	CALL_1
0x4001e3c	          0x4c85c8	                            test rax, r9	      1348	dmar.c	FUNCTION_44	IF_1	CALL_1
0x4001e3f	            0x7571	                           jne 0x4001eb2	      1348	dmar.c	FUNCTION_44	IF_1	CALL_1
0x4001e41	        0x418d480b	                     lea ecx, [r8 + 0xb]	      1350	dmar.c	FUNCTION_44	IF_1	CALL_2
0x4001e45	      0xb801000000	                              mov eax, 1	      1350	dmar.c	FUNCTION_44	IF_1	CALL_2
0x4001e4a	          0x48d3e0	                             shl rax, cl	      1350	dmar.c	FUNCTION_44	IF_1	CALL_2
0x4001e4d	        0x488d48ff	                      lea rcx, [rax - 1]	      1350	dmar.c	FUNCTION_44	IF_1	CALL_2
0x4001e51	          0x4c09c9	                              or rcx, r9	      1350	dmar.c	FUNCTION_44	IF_1	CALL_2
0x4001e54	    0x4881e100f0ff	             and rcx, 0xfffffffffffff000	      1350	dmar.c	FUNCTION_44	IF_1	CALL_2
0x4001e5b	        0x4883c901	                               or rcx, 1	      1350	dmar.c	FUNCTION_44	IF_1	CALL_2
0x4001e5f	      0x48894c2408	                mov qword [rsp + 8], rcx	      1350	dmar.c	FUNCTION_44	IF_1	CALL_2
0x4001e64	            0x31c0	                            xor eax, eax	      1350	dmar.c	FUNCTION_44	IF_1	CALL_2
0x4001e66	        0x6683fa1f	                            cmp dx, 0x1f	      1354	dmar.c	FUNCTION_44	IF_2
0x4001e6a	            0x7706	                            ja 0x4001e72	      1354	dmar.c	FUNCTION_44	IF_2
0x4001e6c	          0xc1e210	                           shl edx, 0x10	      1354	dmar.c	FUNCTION_44	IF_2
0x4001e6f	          0x4863c2	                         movsxd rax, edx	      1354	dmar.c	FUNCTION_44	IF_2
0x4001e72	           0xfb7f6	                           movzx esi, si	      1357	dmar.c	FUNCTION_44	CALL_5
0x4001e75	        0x48c1e620	                           shl rsi, 0x20	      1357	dmar.c	FUNCTION_44	CALL_5
0x4001e79	        0x4883ce03	                               or rsi, 3	      1357	dmar.c	FUNCTION_44	CALL_5
0x4001e7d	          0x4809c6	                             or rsi, rax	      1357	dmar.c	FUNCTION_44	CALL_5
0x4001e80	        0x48893424	                    mov qword [rsp], rsi	      1357	dmar.c	FUNCTION_44	CALL_5
0x4001e84	          0x4889fe	                            mov rsi, rdi	      1360	dmar.c	FUNCTION_44	CALL_6
0x4001e87	          0x4889e7	                            mov rdi, rsp	      1360	dmar.c	FUNCTION_44	CALL_6
0x4001e8a	      0xe800000000	                          call 0x4001e8f	      1360	dmar.c	FUNCTION_44	CALL_6
0x4001e8f	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1361	dmar.c	FUNCTION_44
0x4001e94	    0x654833042528	                xor rax, qword gs:[0x28]	      1361	dmar.c	FUNCTION_44
0x4001e9d	            0x7517	                           jne 0x4001eb6	      1361	dmar.c	FUNCTION_44
0x4001e9f	        0x4883c418	                           add rsp, 0x18	      1361	dmar.c	FUNCTION_44
0x4001ea3	              0xc3	                                     ret	      1361	dmar.c	FUNCTION_44
0x4001ea4	    0x4881e100f0ff	             and rcx, 0xfffffffffffff000	      1352	dmar.c	FUNCTION_44	CALL_3
0x4001eab	      0x48894c2408	                mov qword [rsp + 8], rcx	      1352	dmar.c	FUNCTION_44	CALL_3
0x4001eb0	            0xebb2	                           jmp 0x4001e64	      1352	dmar.c	FUNCTION_44	CALL_3
0x4001eb2	             0xf0b	                                     ud2	      1352	dmar.c	FUNCTION_44	CALL_3
0x4001eb4	            0xeb8b	                           jmp 0x4001e41	      1348	dmar.c	FUNCTION_44	IF_1	CALL_1
0x4001eb6	      0xe800000000	                          call 0x4001ebb	      1361	dmar.c	FUNCTION_44
dmar_device_remove	IF,0:WHILE,0:CALL,1:SWITCH,0:FOR,0:functions,0:DO,0:ELSE,0	2
0x4002310	            0x31f6	                            xor esi, esi	      2045	dmar.c	FUNCTION_72	CALL_1
0x4002312	      0xe9a9e5ffff	             jmp sym.dmar_device_hotplug	      2045	dmar.c	FUNCTION_72	CALL_1
dmar_parse_one_andd	IF,1:WHILE,0:CALL,6:SWITCH,0:FOR,0:functions,0:DO,0:ELSE,0	39
0x4000040	            0x4155	                                push r13	       559	dmar.c	FUNCTION_19
0x4000042	            0x4154	                                push r12	       559	dmar.c	FUNCTION_19
0x4000044	        0x4c8d2437	                    lea r12, [rdi + rsi]	       561	dmar.c	FUNCTION_19
0x4000048	              0x55	                                push rbp	       559	dmar.c	FUNCTION_19
0x4000049	              0x53	                                push rbx	       559	dmar.c	FUNCTION_19
0x400004a	          0x4c39e7	                            cmp rdi, r12	       563	dmar.c	FUNCTION_19	FOR_1
0x400004d	     0xf8321010000	                           jae 0x4000174	       563	dmar.c	FUNCTION_19	FOR_1
0x4000053	         0xfb75f02	               movzx ebx, word [rdi + 2]	       564	dmar.c	FUNCTION_19	FOR_1
0x4000057	          0x4889fd	                            mov rbp, rdi	       564	dmar.c	FUNCTION_19	FOR_1
0x400005a	          0x4889d8	                            mov rax, rbx	       564	dmar.c	FUNCTION_19	FOR_1
0x400005d	          0x4801fb	                            add rbx, rdi	       564	dmar.c	FUNCTION_19	FOR_1
0x4000060	          0x6685c0	                             test ax, ax	       565	dmar.c	FUNCTION_19	FOR_1	IF_1
0x4000063	     0xf840b010000	                            je 0x4000174	       565	dmar.c	FUNCTION_19	FOR_1	IF_1
0x4000069	          0x4939dc	                            cmp r12, rbx	       569	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2
0x400006c	          0x4989d5	                            mov r13, rdx	       569	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2
0x400006f	            0x7356	                           jae 0x40000c7	       569	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2
0x4000071	      0xe907010000	                           jmp 0x400017d	       569	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2
0x4000076	        0x6683f804	                               cmp ax, 4	       578	dmar.c	FUNCTION_19	FOR_1	IF_4
0x400007a	            0x7720	                            ja 0x400009c	       578	dmar.c	FUNCTION_19	FOR_1	IF_4
0x400007c	      0x498d54c500	                  lea rdx, [r13 + rax*8]	       578	dmar.c	FUNCTION_19	FOR_1	IF_4
0x4000081	           0xfb7f0	                           movzx esi, ax	       582	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0x4000084	          0x488b02	                    mov rax, qword [rdx]	       582	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0x4000087	          0x4885c0	                           test rax, rax	       582	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0x400008a	            0x7476	                            je 0x4000102	       582	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0x400008c	        0x488b7228	            mov rsi, qword [rdx + 0x28] 	       585	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0x4000090	          0x4889ef	                            mov rdi, rbp	       585	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0x4000093	      0xe800000000	                          call 0x4000098	       585	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0x4000098	            0x85c0	                           test eax, eax	       586	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5	IF_6
0x400009a	            0x757e	                           jne 0x400011a	       586	dmar.c	FUNCTION_19	FOR_1	ELSE_2	IF_5	IF_6
0x400009c	          0x4939dc	                            cmp r12, rbx	       563	dmar.c	FUNCTION_19	FOR_1
0x400009f	     0xf86cf000000	                           jbe 0x4000174	       563	dmar.c	FUNCTION_19	FOR_1
0x40000a5	         0xfb74302	               movzx eax, word [rbx + 2]	       564	dmar.c	FUNCTION_19	FOR_1
0x40000a9	          0x4889c2	                            mov rdx, rax	       564	dmar.c	FUNCTION_19	FOR_1
0x40000ac	          0x4801d8	                            add rax, rbx	       564	dmar.c	FUNCTION_19	FOR_1
0x40000af	          0x6685d2	                             test dx, dx	       565	dmar.c	FUNCTION_19	FOR_1	IF_1
0x40000b2	     0xf84bc000000	                            je 0x4000174	       565	dmar.c	FUNCTION_19	FOR_1	IF_1
0x40000b8	          0x4939c4	                            cmp r12, rax	       569	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2
0x40000bb	          0x4889dd	                            mov rbp, rbx	       569	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2
0x40000be	     0xf82b9000000	                            jb 0x400017d	       569	dmar.c	FUNCTION_19	FOR_1	ELSE_1	IF_2
