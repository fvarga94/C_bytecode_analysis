mii_nway_restart	ELSE,0:functions,0:CALL,2:IF,1:DO,0:WHILE,0:FOR,0:SWITCH,0	20
0x4000320	              0x53	                                push rbx	       460	mii.c	FUNCTION_8
0x4000321	          0x4889fb	                            mov rbx, rdi	       460	mii.c	FUNCTION_8
0x4000324	            0x31d2	                            xor edx, edx	       465	mii.c	FUNCTION_8	CALL_1
0x4000326	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       465	mii.c	FUNCTION_8	CALL_1
0x400032a	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       465	mii.c	FUNCTION_8	CALL_1
0x400032e	            0x8b33	                    mov esi, dword [rbx]	       465	mii.c	FUNCTION_8	CALL_1
0x4000330	      0xe800000000	                          call 0x4000335	       465	mii.c	FUNCTION_8	CALL_1
0x4000335	            0x89c1	                            mov ecx, eax	       465	mii.c	FUNCTION_8	CALL_1
0x4000337	      0xb8eaffffff	                     mov eax, 0xffffffea	       465	mii.c	FUNCTION_8	CALL_1
0x400033c	          0xf6c510	                           test ch, 0x10	       467	mii.c	FUNCTION_8	IF_1
0x400033f	            0x7416	                            je 0x4000357	       467	mii.c	FUNCTION_8	IF_1
0x4000341	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       469	mii.c	FUNCTION_8	IF_1	CALL_2
0x4000345	          0x80cd02	                                or ch, 2	       469	mii.c	FUNCTION_8	IF_1	CALL_2
0x4000348	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       469	mii.c	FUNCTION_8	IF_1	CALL_2
0x400034c	            0x31d2	                            xor edx, edx	       469	mii.c	FUNCTION_8	IF_1	CALL_2
0x400034e	            0x8b33	                    mov esi, dword [rbx]	       469	mii.c	FUNCTION_8	IF_1	CALL_2
0x4000350	      0xe800000000	                          call 0x4000355	       469	mii.c	FUNCTION_8	IF_1	CALL_2
0x4000355	            0x31c0	                            xor eax, eax	       470	mii.c	FUNCTION_8	IF_1
0x4000357	              0x5b	                                 pop rbx	       474	mii.c	FUNCTION_8
0x4000358	              0xc3	                                     ret	       474	mii.c	FUNCTION_8
mii_link_ok	ELSE,0:functions,0:CALL,2:IF,1:DO,0:WHILE,0:FOR,0:SWITCH,0	16
0x40002e0	              0x53	                                push rbx	       445	mii.c	FUNCTION_7
0x40002e1	          0x4889fb	                            mov rbx, rdi	       445	mii.c	FUNCTION_7
0x40002e4	      0xba01000000	                              mov edx, 1	       447	mii.c	FUNCTION_7	CALL_1
0x40002e9	            0x8b33	                    mov esi, dword [rbx]	       447	mii.c	FUNCTION_7	CALL_1
0x40002eb	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       447	mii.c	FUNCTION_7	CALL_1
0x40002ef	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       447	mii.c	FUNCTION_7	CALL_1
0x40002f3	      0xe800000000	                          call 0x40002f8	       447	mii.c	FUNCTION_7	CALL_1
0x40002f8	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       448	mii.c	FUNCTION_7	IF_1	CALL_2
0x40002fc	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       448	mii.c	FUNCTION_7	IF_1	CALL_2
0x4000300	      0xba01000000	                              mov edx, 1	       448	mii.c	FUNCTION_7	IF_1	CALL_2
0x4000305	            0x8b33	                    mov esi, dword [rbx]	       448	mii.c	FUNCTION_7	IF_1	CALL_2
0x4000307	      0xe800000000	                          call 0x400030c	       448	mii.c	FUNCTION_7	IF_1	CALL_2
0x400030c	          0xc1e802	                              shr eax, 2	       448	mii.c	FUNCTION_7	IF_1	CALL_2
0x400030f	          0x83e001	                              and eax, 1	       448	mii.c	FUNCTION_7	IF_1	CALL_2
0x4000312	              0x5b	                                 pop rbx	       451	mii.c	FUNCTION_7
0x4000313	              0xc3	                                     ret	       451	mii.c	FUNCTION_7
generic_mii_ioctl	ELSE,1:functions,0:CALL,2:IF,6:DO,0:WHILE,0:FOR,0:SWITCH,2	100
0x4000360	          0x4885c9	                           test rcx, rcx	       591	mii.c	FUNCTION_11	IF_1
0x4000363	              0x55	                                push rbp	       587	mii.c	FUNCTION_11
0x4000364	          0x4989f8	                             mov r8, rdi	       587	mii.c	FUNCTION_11
0x4000367	              0x53	                                push rbx	       587	mii.c	FUNCTION_11
0x4000368	          0x4889cd	                            mov rbp, rcx	       587	mii.c	FUNCTION_11
0x400036b	          0x4889f3	                            mov rbx, rsi	       587	mii.c	FUNCTION_11
0x400036e	            0x7406	                            je 0x4000376	       591	mii.c	FUNCTION_11	IF_1
0x4000370	    0xc70100000000	                      mov dword [rcx], 0	       592	mii.c	FUNCTION_11	IF_1
0x4000376	        0x418b7008	                 mov esi, dword [r8 + 8]	       594	mii.c	FUNCTION_11
0x400037a	          0x662333	                      and si, word [rbx]	       594	mii.c	FUNCTION_11
0x400037d	          0x668933	                      mov word [rbx], si	       594	mii.c	FUNCTION_11
0x4000380	        0x418b400c	               mov eax, dword [r8 + 0xc]	       595	mii.c	FUNCTION_11
0x4000384	        0x66234302	                  and ax, word [rbx + 2]	       595	mii.c	FUNCTION_11
0x4000388	    0x81fa48890000	                         cmp edx, 0x8948	       597	mii.c	FUNCTION_11	SWITCH_1
0x400038e	            0x89c7	                            mov edi, eax	       595	mii.c	FUNCTION_11
0x4000390	        0x66894302	                  mov word [rbx + 2], ax	       595	mii.c	FUNCTION_11
0x4000394	            0x7420	                            je 0x40003b6	       597	mii.c	FUNCTION_11	SWITCH_1
0x4000396	    0x81fa49890000	                         cmp edx, 0x8949	       597	mii.c	FUNCTION_11	SWITCH_1
0x400039c	            0x7434	                            je 0x40003d2	       597	mii.c	FUNCTION_11	SWITCH_1
0x400039e	    0x81fa47890000	                         cmp edx, 0x8947	       597	mii.c	FUNCTION_11	SWITCH_1
0x40003a4	            0x7408	                            je 0x40003ae	       597	mii.c	FUNCTION_11	SWITCH_1
0x40003a6	      0xb8a1ffffff	                     mov eax, 0xffffffa1	       643	mii.c	FUNCTION_11	SWITCH_1
0x40003ab	              0x5b	                                 pop rbx	       651	mii.c	FUNCTION_11
0x40003ac	              0x5d	                                 pop rbp	       651	mii.c	FUNCTION_11
0x40003ad	              0xc3	                                     ret	       651	mii.c	FUNCTION_11
0x40003ae	          0x418b10	                     mov edx, dword [r8]	       599	mii.c	FUNCTION_11	SWITCH_1
0x40003b1	            0x89d6	                            mov esi, edx	       599	mii.c	FUNCTION_11	SWITCH_1
0x40003b3	          0x668913	                      mov word [rbx], dx	       599	mii.c	FUNCTION_11	SWITCH_1
0x40003b6	           0xfb7d0	                           movzx edx, ax	       604	mii.c	FUNCTION_11	SWITCH_1	CALL_1
0x40003b9	           0xfb7f6	                           movzx esi, si	       604	mii.c	FUNCTION_11	SWITCH_1	CALL_1
0x40003bc	        0x498b7818	              mov rdi, qword [r8 + 0x18]	       604	mii.c	FUNCTION_11	SWITCH_1	CALL_1
0x40003c0	        0x498b4020	              mov rax, qword [r8 + 0x20]	       604	mii.c	FUNCTION_11	SWITCH_1	CALL_1
0x40003c4	      0xe800000000	                          call 0x40003c9	       604	mii.c	FUNCTION_11	SWITCH_1	CALL_1
0x40003c9	        0x66894306	                  mov word [rbx + 6], ax	       603	mii.c	FUNCTION_11	SWITCH_1
0x40003cd	            0x31c0	                            xor eax, eax	       588	mii.c	FUNCTION_11
0x40003cf	              0x5b	                                 pop rbx	       651	mii.c	FUNCTION_11
0x40003d0	              0x5d	                                 pop rbp	       651	mii.c	FUNCTION_11
0x40003d1	              0xc3	                                     ret	       651	mii.c	FUNCTION_11
0x40003d2	         0xfb74b04	               movzx ecx, word [rbx + 4]	       609	mii.c	FUNCTION_11	SWITCH_1
0x40003d6	           0xfb7f6	                           movzx esi, si	       611	mii.c	FUNCTION_11	SWITCH_1	IF_2
0x40003d9	          0x413b30	                     cmp esi, dword [r8]	       611	mii.c	FUNCTION_11	SWITCH_1	IF_2
0x40003dc	            0x89ca	                            mov edx, ecx	       609	mii.c	FUNCTION_11	SWITCH_1
0x40003de	            0x7415	                            je 0x40003f5	       611	mii.c	FUNCTION_11	SWITCH_1	IF_2
0x40003e0	           0xfb7d7	                           movzx edx, di	       637	mii.c	FUNCTION_11	SWITCH_1	CALL_2
0x40003e3	        0x498b4028	              mov rax, qword [r8 + 0x28]	       637	mii.c	FUNCTION_11	SWITCH_1	CALL_2
0x40003e7	        0x498b7818	              mov rdi, qword [r8 + 0x18]	       637	mii.c	FUNCTION_11	SWITCH_1	CALL_2
0x40003eb	      0xe800000000	                          call 0x40003f0	       637	mii.c	FUNCTION_11	SWITCH_1	CALL_2
0x40003f0	            0x31c0	                            xor eax, eax	       588	mii.c	FUNCTION_11
0x40003f2	              0x5b	                                 pop rbx	       651	mii.c	FUNCTION_11
0x40003f3	              0x5d	                                 pop rbp	       651	mii.c	FUNCTION_11
0x40003f4	              0xc3	                                     ret	       651	mii.c	FUNCTION_11
0x40003f5	          0x6685c0	                             test ax, ax	       612	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2
0x40003f8	            0x7413	                            je 0x400040d	       612	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2
0x40003fa	        0x6683f804	                               cmp ax, 4	       612	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2
0x40003fe	            0x7564	                           jne 0x4000464	       612	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2
0x4000400	        0x41894804	                 mov dword [r8 + 4], ecx	       629	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2
0x4000404	         0xfb77b02	               movzx edi, word [rbx + 2]	       629	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2
0x4000408	           0xfb733	                   movzx esi, word [rbx]	       629	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2
0x400040b	            0xebd3	                           jmp 0x40003e0	       630	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2
0x400040d	      0x66f7c10090	                         test cx, 0x9000	       615	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2	IF_3
0x4000412	            0x7467	                            je 0x400047b	       615	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2	IF_3
0x4000414	      0x41806010fd	              and byte [r8 + 0x10], 0xfd	       616	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2	IF_3
0x4000419	      0x410fb64010	            movzx eax, byte [r8 + 0x10] 	       619	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2	IF_4
0x400041e	            0x31c9	                            xor ecx, ecx	       614	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2
0x4000420	            0xa802	                              test al, 2	       619	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2	IF_4
0x4000422	            0x7406	                            je 0x400042a	       619	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2	IF_4
0x4000424	           0xfb6ce	                           movzx ecx, dh	       614	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2
0x4000427	          0x83e101	                              and ecx, 1	       614	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2
0x400042a	            0x89c6	                            mov esi, eax	       622	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2	IF_5
0x400042c	          0x83e601	                              and esi, 1	       622	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2	IF_5
0x400042f	            0x39f1	                            cmp ecx, esi	       622	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2	IF_5
0x4000431	            0x744f	                            je 0x4000482	       622	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2	IF_5
0x4000433	          0x83e0fe	                     and eax, 0xfffffffe	       624	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2	IF_5
0x4000436	        0x498b7818	              mov rdi, qword [r8 + 0x18]	       637	mii.c	FUNCTION_11	SWITCH_1	CALL_2
0x400043a	             0x9c8	                             or eax, ecx	       624	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2	IF_5
0x400043c	           0xfb7ca	                           movzx ecx, dx	       637	mii.c	FUNCTION_11	SWITCH_1	CALL_2
0x400043f	        0x41884010	                mov byte [r8 + 0x10], al	       624	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2	IF_5
0x4000443	         0xfb75302	               movzx edx, word [rbx + 2]	       637	mii.c	FUNCTION_11	SWITCH_1	CALL_2
0x4000447	           0xfb733	                   movzx esi, word [rbx]	       637	mii.c	FUNCTION_11	SWITCH_1	CALL_2
0x400044a	        0x498b4028	              mov rax, qword [r8 + 0x28]	       637	mii.c	FUNCTION_11	SWITCH_1	CALL_2
0x400044e	      0xe800000000	                          call 0x4000453	       637	mii.c	FUNCTION_11	SWITCH_1	CALL_2
0x4000453	          0x4885ed	                           test rbp, rbp	       647	mii.c	FUNCTION_11	IF_6
0x4000456	            0x7498	                            je 0x40003f0	       647	mii.c	FUNCTION_11	IF_6
0x4000458	    0xc74500010000	                      mov dword [rbp], 1	       648	mii.c	FUNCTION_11	IF_6
0x400045f	            0x31c0	                            xor eax, eax	       588	mii.c	FUNCTION_11
0x4000461	              0x5b	                                 pop rbx	       651	mii.c	FUNCTION_11
0x4000462	              0x5d	                                 pop rbp	       651	mii.c	FUNCTION_11
0x4000463	              0xc3	                                     ret	       651	mii.c	FUNCTION_11
0x4000464	           0xfb7d0	                           movzx edx, ax	       637	mii.c	FUNCTION_11	SWITCH_1	CALL_2
0x4000467	        0x498b7818	              mov rdi, qword [r8 + 0x18]	       637	mii.c	FUNCTION_11	SWITCH_1	CALL_2
0x400046b	        0x498b4028	              mov rax, qword [r8 + 0x28]	       637	mii.c	FUNCTION_11	SWITCH_1	CALL_2
0x400046f	      0xe800000000	                          call 0x4000474	       637	mii.c	FUNCTION_11	SWITCH_1	CALL_2
0x4000474	            0x31c0	                            xor eax, eax	       588	mii.c	FUNCTION_11
0x4000476	      0xe954ffffff	                           jmp 0x40003cf	       588	mii.c	FUNCTION_11
0x400047b	      0x4180481002	                  or byte [r8 + 0x10], 2	       618	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2	ELSE_1
0x4000480	            0xeb97	                           jmp 0x4000419	       618	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2	ELSE_1
0x4000482	           0xfb7ca	                           movzx ecx, dx	       618	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2	ELSE_1
0x4000485	         0xfb77b02	               movzx edi, word [rbx + 2]	       618	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2	ELSE_1
0x4000489	           0xfb733	                   movzx esi, word [rbx]	       618	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2	ELSE_1
0x400048c	      0xe94fffffff	                           jmp 0x40003e0	       618	mii.c	FUNCTION_11	SWITCH_1	IF_2	SWITCH_2	ELSE_1
