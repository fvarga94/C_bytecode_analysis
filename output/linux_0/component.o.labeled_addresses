devm_component_match_release	FOR,0:CALL,1:DO,0:functions,0:IF,0:SWITCH,0:WHILE,0:ELSE,0	29
0x4000220	      0x48837e0800	                  cmp qword [rsi + 8], 0	       276	component.c	FUNCTION_15	FOR_1
0x4000225	            0x7447	                            je 0x400026e	       276	component.c	FUNCTION_15	FOR_1
0x4000227	            0x4154	                                push r12	       287	component.c	FUNCTION_16
0x4000229	          0x4989fc	                            mov r12, rdi	       287	component.c	FUNCTION_16
0x400022c	              0x55	                                push rbp	       287	component.c	FUNCTION_16
0x400022d	              0x53	                                push rbx	       287	component.c	FUNCTION_16
0x400022e	        0x488b7e10	            mov rdi, qword [rsi + 0x10] 	       287	component.c	FUNCTION_16
0x4000232	          0x4889f5	                            mov rbp, rsi	       287	component.c	FUNCTION_16
0x4000235	            0x31db	                            xor ebx, ebx	       276	component.c	FUNCTION_15	FOR_1
0x4000237	            0x31c0	                            xor eax, eax	       276	component.c	FUNCTION_15	FOR_1
0x4000239	        0x488d0480	                  lea rax, [rax + rax*4]	       277	component.c	FUNCTION_15	FOR_1
0x400023d	        0x488d14c7	                  lea rdx, [rdi + rax*8]	       277	component.c	FUNCTION_15	FOR_1
0x4000241	        0x488b4210	            mov rax, qword [rdx + 0x10] 	       279	component.c	FUNCTION_15	FOR_1	IF_1
0x4000245	          0x4885c0	                           test rax, rax	       279	component.c	FUNCTION_15	FOR_1	IF_1
0x4000248	            0x740f	                            je 0x4000259	       279	component.c	FUNCTION_15	FOR_1	IF_1
0x400024a	          0x4c89e7	                            mov rdi, r12	       280	component.c	FUNCTION_15	FOR_1	CALL_1
0x400024d	          0x488b32	                    mov rsi, qword [rdx]	       280	component.c	FUNCTION_15	FOR_1	CALL_1
0x4000250	      0xe800000000	                          call 0x4000255	       280	component.c	FUNCTION_15	FOR_1	CALL_1
0x4000255	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       280	component.c	FUNCTION_15	FOR_1	CALL_1
0x4000259	          0x8d4301	                      lea eax, [rbx + 1]	       276	component.c	FUNCTION_15	FOR_1
0x400025c	        0x483b4508	                cmp rax, qword [rbp + 8]	       276	component.c	FUNCTION_15	FOR_1
0x4000260	          0x4889c3	                            mov rbx, rax	       276	component.c	FUNCTION_15	FOR_1
0x4000263	            0x72d4	                            jb 0x4000239	       276	component.c	FUNCTION_15	FOR_1
0x4000265	              0x5b	                                 pop rbx	       289	component.c	FUNCTION_16
0x4000266	              0x5d	                                 pop rbp	       289	component.c	FUNCTION_16
0x4000267	            0x415c	                                 pop r12	       289	component.c	FUNCTION_16
0x4000269	      0xe900000000	                           jmp 0x400026e	       283	component.c	FUNCTION_15	CALL_2
0x400026e	        0x488b7e10	            mov rdi, qword [rsi + 0x10] 	       283	component.c	FUNCTION_15	CALL_2
0x4000272	      0xe900000000	                           jmp 0x4000277	       283	component.c	FUNCTION_15	CALL_2
component_master_del	FOR,0:CALL,5:DO,0:functions,0:IF,1:SWITCH,0:WHILE,0:ELSE,0	34
0x40002b0	            0x4154	                                push r12	       418	component.c	FUNCTION_21
0x40002b2	              0x55	                                push rbp	       418	component.c	FUNCTION_21
0x40002b3	          0x4889fd	                            mov rbp, rdi	       418	component.c	FUNCTION_21
0x40002b6	              0x53	                                push rbx	       418	component.c	FUNCTION_21
0x40002b7	    0x48c7c7000000	                              mov rdi, 0	       421	component.c	FUNCTION_21	CALL_1
0x40002be	          0x4989f4	                            mov r12, rsi	       418	component.c	FUNCTION_21
0x40002c1	      0xe800000000	                          call 0x40002c6	       421	component.c	FUNCTION_21	CALL_1
0x40002c6	    0x488b1d000000	            mov rbx, qword [0x040002cd] 	       137	component.c	FUNCTION_8	CALL_1
0x40002cd	    0x4881fb000000	                              cmp rbx, 0	       137	component.c	FUNCTION_8	CALL_1
0x40002d4	            0x750e	                           jne 0x40002e4	       137	component.c	FUNCTION_8	CALL_1
0x40002d6	            0xeb30	                           jmp 0x4000308	       137	component.c	FUNCTION_8	CALL_1
0x40002d8	          0x488b1b	                    mov rbx, qword [rbx]	       137	component.c	FUNCTION_8	CALL_1
0x40002db	    0x4881fb000000	                              cmp rbx, 0	       137	component.c	FUNCTION_8	CALL_1
0x40002e2	            0x7424	                            je 0x4000308	       137	component.c	FUNCTION_8	CALL_1
0x40002e4	        0x483b6b20	            cmp rbp, qword [rbx + 0x20] 	       138	component.c	FUNCTION_8	IF_1
0x40002e8	            0x75ee	                           jne 0x40002d8	       138	component.c	FUNCTION_8	IF_1
0x40002ea	          0x4d85e4	                           test r12, r12	       138	component.c	FUNCTION_8	IF_1
0x40002ed	            0x7406	                            je 0x40002f5	       138	component.c	FUNCTION_8	IF_1
0x40002ef	        0x4c3b6318	            cmp r12, qword [rbx + 0x18] 	       138	component.c	FUNCTION_8	IF_1
0x40002f3	            0x75e3	                           jne 0x40002d8	       138	component.c	FUNCTION_8	IF_1
0x40002f5	          0x4885db	                           test rbx, rbx	       423	component.c	FUNCTION_21	IF_1
0x40002f8	            0x740e	                            je 0x4000308	       423	component.c	FUNCTION_21	IF_1
0x40002fa	        0x807b1000	                cmp byte [rbx + 0x10], 0	       264	component.c	FUNCTION_14	IF_1
0x40002fe	            0x7518	                           jne 0x4000318	       264	component.c	FUNCTION_14	IF_1
0x4000300	          0x4889df	                            mov rdi, rbx	       425	component.c	FUNCTION_21	IF_1	CALL_4
0x4000303	      0xe888feffff	                    call sym.free_master	       425	component.c	FUNCTION_21	IF_1	CALL_4
0x4000308	              0x5b	                                 pop rbx	       428	component.c	FUNCTION_21
0x4000309	              0x5d	                                 pop rbp	       428	component.c	FUNCTION_21
0x400030a	            0x415c	                                 pop r12	       428	component.c	FUNCTION_21
0x400030c	    0x48c7c7000000	                              mov rdi, 0	       427	component.c	FUNCTION_21	CALL_5
0x4000313	      0xe900000000	                           jmp 0x4000318	       427	component.c	FUNCTION_21	CALL_5
0x4000318	          0x4889df	                            mov rdi, rbx	       427	component.c	FUNCTION_21	CALL_5
0x400031b	      0xe860ffffff	        call sym.take_down_master.part.8	       427	component.c	FUNCTION_21	CALL_5
0x4000320	            0xebde	                           jmp 0x4000300	       427	component.c	FUNCTION_21	CALL_5
component_devices_open	FOR,0:CALL,1:DO,0:functions,0:IF,0:SWITCH,0:WHILE,0:ELSE,0	5
0x4000040	    0x488b97380200	           mov rdx, qword [rdi + 0x238] 	       102	component.c	FUNCTION_3	CALL_1
0x4000047	          0x4889f0	                            mov rax, rsi	       102	component.c	FUNCTION_3	CALL_1
0x400004a	    0x48c7c6000000	                              mov rsi, 0	       102	component.c	FUNCTION_3	CALL_1
0x4000051	          0x4889c7	                            mov rdi, rax	       102	component.c	FUNCTION_3	CALL_1
0x4000054	      0xe900000000	                           jmp 0x4000059	       102	component.c	FUNCTION_3	CALL_1
component_match_add_release	FOR,0:CALL,6:DO,0:functions,0:IF,5:SWITCH,0:WHILE,0:ELSE,0	72
0x4000a90	            0x4157	                                push r15	       323	component.c	FUNCTION_18
0x4000a92	            0x4156	                                push r14	       323	component.c	FUNCTION_18
0x4000a94	            0x4155	                                push r13	       323	component.c	FUNCTION_18
0x4000a96	            0x4154	                                push r12	       323	component.c	FUNCTION_18
0x4000a98	              0x55	                                push rbp	       323	component.c	FUNCTION_18
0x4000a99	              0x53	                                push rbx	       323	component.c	FUNCTION_18
0x4000a9a	          0x488b1e	                    mov rbx, qword [rsi]	       324	component.c	FUNCTION_18
0x4000a9d	    0x4881fb00f0ff	             cmp rbx, 0xfffffffffffff000	       326	component.c	FUNCTION_18	IF_1	CALL_1
0x4000aa4	            0x7775	                            ja 0x4000b1b	       326	component.c	FUNCTION_18	IF_1	CALL_1
0x4000aa6	          0x4885db	                           test rbx, rbx	       329	component.c	FUNCTION_18	IF_2
0x4000aa9	          0x4c89c5	                             mov rbp, r8	       329	component.c	FUNCTION_18	IF_2
0x4000aac	          0x4989cd	                            mov r13, rcx	       329	component.c	FUNCTION_18	IF_2
0x4000aaf	          0x4989d4	                            mov r12, rdx	       329	component.c	FUNCTION_18	IF_2
0x4000ab2	          0x4989f6	                            mov r14, rsi	       329	component.c	FUNCTION_18	IF_2
0x4000ab5	          0x4989ff	                            mov r15, rdi	       329	component.c	FUNCTION_18	IF_2
0x4000ab8	     0xf8485000000	                            je 0x4000b43	       329	component.c	FUNCTION_18	IF_2
0x4000abe	        0x488b4308	                mov rax, qword [rbx + 8]	       342	component.c	FUNCTION_18	IF_4
0x4000ac2	          0x483b03	                    cmp rax, qword [rbx]	       342	component.c	FUNCTION_18	IF_4
0x4000ac5	            0x745f	                            je 0x4000b26	       342	component.c	FUNCTION_18	IF_4
0x4000ac7	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       353	component.c	FUNCTION_18
0x4000acb	        0x488d0480	                  lea rax, [rax + rax*4]	       353	component.c	FUNCTION_18
0x4000acf	        0x488d04c2	                  lea rax, [rdx + rax*8]	       353	component.c	FUNCTION_18
0x4000ad3	        0x4c896808	                mov qword [rax + 8], r13	       353	component.c	FUNCTION_18
0x4000ad7	        0x488b4308	                mov rax, qword [rbx + 8]	       354	component.c	FUNCTION_18
0x4000adb	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       354	component.c	FUNCTION_18
0x4000adf	        0x488d0480	                  lea rax, [rax + rax*4]	       354	component.c	FUNCTION_18
0x4000ae3	        0x488d04c1	                  lea rax, [rcx + rax*8]	       354	component.c	FUNCTION_18
0x4000ae7	        0x4c896010	             mov qword [rax + 0x10], r12	       354	component.c	FUNCTION_18
0x4000aeb	        0x488b4308	                mov rax, qword [rbx + 8]	       355	component.c	FUNCTION_18
0x4000aef	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       355	component.c	FUNCTION_18
0x4000af3	        0x488d0480	                  lea rax, [rax + rax*4]	       355	component.c	FUNCTION_18
0x4000af7	        0x488d04c6	                  lea rax, [rsi + rax*8]	       355	component.c	FUNCTION_18
0x4000afb	          0x488928	                    mov qword [rax], rbp	       355	component.c	FUNCTION_18
0x4000afe	        0x488b4308	                mov rax, qword [rbx + 8]	       356	component.c	FUNCTION_18
0x4000b02	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       356	component.c	FUNCTION_18
0x4000b06	        0x488d0480	                  lea rax, [rax + rax*4]	       356	component.c	FUNCTION_18
0x4000b0a	        0x488d04c7	                  lea rax, [rdi + rax*8]	       356	component.c	FUNCTION_18
0x4000b0e	    0x48c740180000	               mov qword [rax + 0x18], 0	       356	component.c	FUNCTION_18
0x4000b16	      0x4883430801	                  add qword [rbx + 8], 1	       357	component.c	FUNCTION_18
0x4000b1b	              0x5b	                                 pop rbx	       358	component.c	FUNCTION_18
0x4000b1c	              0x5d	                                 pop rbp	       358	component.c	FUNCTION_18
0x4000b1d	            0x415c	                                 pop r12	       358	component.c	FUNCTION_18
0x4000b1f	            0x415d	                                 pop r13	       358	component.c	FUNCTION_18
0x4000b21	            0x415e	                                 pop r14	       358	component.c	FUNCTION_18
0x4000b23	            0x415f	                                 pop r15	       358	component.c	FUNCTION_18
0x4000b25	              0xc3	                                     ret	       358	component.c	FUNCTION_18
0x4000b26	        0x488d7010	                   lea rsi, [rax + 0x10]	       358	component.c	FUNCTION_18
0x4000b2a	          0x4889df	                            mov rdi, rbx	       358	component.c	FUNCTION_18
0x4000b2d	      0xe8cefeffff	call sym.component_match_realloc.isra.6.part.7	       358	component.c	FUNCTION_18
0x4000b32	            0x85c0	                           test eax, eax	       347	component.c	FUNCTION_18	IF_4	IF_5
0x4000b34	            0x7506	                           jne 0x4000b3c	       347	component.c	FUNCTION_18	IF_4	IF_5
0x4000b36	        0x488b4308	                mov rax, qword [rbx + 8]	       347	component.c	FUNCTION_18	IF_4	IF_5
0x4000b3a	            0xeb8b	                           jmp 0x4000ac7	       347	component.c	FUNCTION_18	IF_4	IF_5
0x4000b3c	            0x4898	                                    cdqe	       348	component.c	FUNCTION_18	IF_4	IF_5	CALL_6
0x4000b3e	          0x498906	                    mov qword [r14], rax	       348	component.c	FUNCTION_18	IF_4	IF_5	CALL_6
0x4000b41	            0xebd8	                           jmp 0x4000b1b	       349	component.c	FUNCTION_18	IF_4	IF_5
0x4000b43	    0x49c7c0000000	                               mov r8, 0	       330	component.c	FUNCTION_18	IF_2	CALL_2
0x4000b4a	      0xb9ffffffff	                     mov ecx, 0xffffffff	       330	component.c	FUNCTION_18	IF_2	CALL_2
0x4000b4f	      0xbac0004001	                      mov edx, 0x14000c0	       330	component.c	FUNCTION_18	IF_2	CALL_2
0x4000b54	      0xbe18000000	                           mov esi, 0x18	       330	component.c	FUNCTION_18	IF_2	CALL_2
0x4000b59	    0x48c7c7000000	                              mov rdi, 0	       330	component.c	FUNCTION_18	IF_2	CALL_2
0x4000b60	      0xe800000000	                          call 0x4000b65	       330	component.c	FUNCTION_18	IF_2	CALL_2
0x4000b65	          0x4885c0	                           test rax, rax	       332	component.c	FUNCTION_18	IF_2	IF_3
0x4000b68	          0x4889c3	                            mov rbx, rax	       330	component.c	FUNCTION_18	IF_2	CALL_2
0x4000b6b	            0x7413	                            je 0x4000b80	       332	component.c	FUNCTION_18	IF_2	IF_3
0x4000b6d	          0x4889c6	                            mov rsi, rax	       337	component.c	FUNCTION_18	IF_2	CALL_4
0x4000b70	          0x4c89ff	                            mov rdi, r15	       337	component.c	FUNCTION_18	IF_2	CALL_4
0x4000b73	      0xe800000000	                          call 0x4000b78	       337	component.c	FUNCTION_18	IF_2	CALL_4
0x4000b78	          0x49891e	                    mov qword [r14], rbx	       339	component.c	FUNCTION_18	IF_2
0x4000b7b	      0xe93effffff	                           jmp 0x4000abe	       339	component.c	FUNCTION_18	IF_2
0x4000b80	    0x49c706f4ffff	     mov qword [r14], 0xfffffffffffffff4	       333	component.c	FUNCTION_18	IF_2	IF_3	CALL_3
0x4000b87	            0xeb92	                           jmp 0x4000b1b	       334	component.c	FUNCTION_18	IF_2	IF_3
component_debug_init	FOR,0:CALL,1:DO,0:functions,0:IF,0:SWITCH,0:WHILE,0:ELSE,0	7
0x4000040	    0x488b97380200	           mov rdx, qword [rdi + 0x238] 	       102	component.c	FUNCTION_3	CALL_1
0x4000047	          0x4889f0	                            mov rax, rsi	       102	component.c	FUNCTION_3	CALL_1
0x400004a	    0x48c7c6000000	                              mov rsi, 0	       102	component.c	FUNCTION_3	CALL_1
0x4000051	          0x4889c7	                            mov rdi, rax	       102	component.c	FUNCTION_3	CALL_1
0x4000054	              0xe9	                                 invalid	       102	component.c	FUNCTION_3	CALL_1
0x4000055	               0x0	                      add byte [rax], al	       105	component.c	FUNCTION_3
0x4000057	               0x0	                                 invalid	       105	component.c	FUNCTION_3
