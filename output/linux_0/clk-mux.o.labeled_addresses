clk_unregister_mux	IF,1:FOR,0:CALL,4:SWITCH,0:ELSE,0:DO,0:functions,0:WHILE,0	16
0x40001f0	              0x55	                                push rbp	       235	clk-mux.c	FUNCTION_10
0x40001f1	              0x53	                                push rbx	       235	clk-mux.c	FUNCTION_10
0x40001f2	          0x4889fd	                            mov rbp, rdi	       235	clk-mux.c	FUNCTION_10
0x40001f5	      0xe800000000	                          call 0x40001fa	       239	clk-mux.c	FUNCTION_10	CALL_1
0x40001fa	          0x4885c0	                           test rax, rax	       240	clk-mux.c	FUNCTION_10	IF_1
0x40001fd	            0x7415	                            je 0x4000214	       240	clk-mux.c	FUNCTION_10	IF_1
0x40001ff	          0x4889c3	                            mov rbx, rax	       240	clk-mux.c	FUNCTION_10	IF_1
0x4000202	          0x4889ef	                            mov rdi, rbp	       245	clk-mux.c	FUNCTION_10	CALL_3
0x4000205	      0xe800000000	                          call 0x400020a	       245	clk-mux.c	FUNCTION_10	CALL_3
0x400020a	          0x4889df	                            mov rdi, rbx	       246	clk-mux.c	FUNCTION_10	CALL_4
0x400020d	              0x5b	                                 pop rbx	       247	clk-mux.c	FUNCTION_10
0x400020e	              0x5d	                                 pop rbp	       247	clk-mux.c	FUNCTION_10
0x400020f	      0xe900000000	                           jmp 0x4000214	       246	clk-mux.c	FUNCTION_10	CALL_4
0x4000214	              0x5b	                                 pop rbx	       247	clk-mux.c	FUNCTION_10
0x4000215	              0x5d	                                 pop rbp	       247	clk-mux.c	FUNCTION_10
0x4000216	              0xc3	                                     ret	       247	clk-mux.c	FUNCTION_10
clk_hw_register_mux	IF,0:FOR,0:CALL,2:SWITCH,0:ELSE,0:DO,0:functions,0:WHILE,0	16
0x40003d0	        0xff742420	                 push qword [rsp + 0x20]	       228	clk-mux.c	FUNCTION_9	CALL_2
0x40003d4	            0x6a00	                                  push 0	       228	clk-mux.c	FUNCTION_9	CALL_2
0x40003d6	        0x440fb6d1	                          movzx r10d, cl	       228	clk-mux.c	FUNCTION_9	CALL_2
0x40003da	       0xfb6442428	           movzx eax, byte [rsp + 0x28] 	       228	clk-mux.c	FUNCTION_9	CALL_2
0x40003df	              0x50	                                push rax	       228	clk-mux.c	FUNCTION_9	CALL_2
0x40003e0	       0xfb64c2428	           movzx ecx, byte [rsp + 0x28] 	       228	clk-mux.c	FUNCTION_9	CALL_2
0x40003e5	      0xb801000000	                              mov eax, 1	       228	clk-mux.c	FUNCTION_9	CALL_2
0x40003ea	          0x48d3e0	                             shl rax, cl	       228	clk-mux.c	FUNCTION_9	CALL_2
0x40003ed	          0x4489d1	                           mov ecx, r10d	       228	clk-mux.c	FUNCTION_9	CALL_2
0x40003f0	          0x83e801	                              sub eax, 1	       228	clk-mux.c	FUNCTION_9	CALL_2
0x40003f3	              0x50	                                push rax	       228	clk-mux.c	FUNCTION_9	CALL_2
0x40003f4	       0xfb6442428	           movzx eax, byte [rsp + 0x28] 	       228	clk-mux.c	FUNCTION_9	CALL_2
0x40003f9	              0x50	                                push rax	       228	clk-mux.c	FUNCTION_9	CALL_2
0x40003fa	      0xe800000000	                          call 0x40003ff	       228	clk-mux.c	FUNCTION_9	CALL_2
0x40003ff	        0x4883c428	                           add rsp, 0x28	       228	clk-mux.c	FUNCTION_9	CALL_2
0x4000403	              0xc3	                                     ret	       231	clk-mux.c	FUNCTION_9
clk_mux_determine_rate	IF,0:FOR,0:CALL,2:SWITCH,0:ELSE,0:DO,0:functions,0:WHILE,0	2
0x40001e0	         0xfb6572d	           movzx edx, byte [rdi + 0x2d] 	       120	clk-mux.c	FUNCTION_5	CALL_2
0x40001e4	      0xe900000000	                           jmp 0x40001e9	       120	clk-mux.c	FUNCTION_5	CALL_2
clk_hw_unregister_mux	IF,0:FOR,0:CALL,3:SWITCH,0:ELSE,0:DO,0:functions,0:WHILE,0	6
0x4000220	              0x53	                                push rbx	       251	clk-mux.c	FUNCTION_11
0x4000221	          0x4889fb	                            mov rbx, rdi	       251	clk-mux.c	FUNCTION_11
0x4000224	      0xe800000000	                          call 0x4000229	       256	clk-mux.c	FUNCTION_11	CALL_2
0x4000229	          0x4889df	                            mov rdi, rbx	       257	clk-mux.c	FUNCTION_11	CALL_3
0x400022c	              0x5b	                                 pop rbx	       258	clk-mux.c	FUNCTION_11
0x400022d	      0xe900000000	                           jmp 0x4000232	       257	clk-mux.c	FUNCTION_11	CALL_3
clk_register_mux	IF,0:FOR,0:CALL,2:SWITCH,0:ELSE,0:DO,0:functions,0:WHILE,0	19
0x4000450	        0xff742420	                 push qword [rsp + 0x20]	       197	clk-mux.c	FUNCTION_7	CALL_1
0x4000454	            0x6a00	                                  push 0	       197	clk-mux.c	FUNCTION_7	CALL_1
0x4000456	        0x440fb6d1	                          movzx r10d, cl	       197	clk-mux.c	FUNCTION_7	CALL_1
0x400045a	       0xfb6442428	           movzx eax, byte [rsp + 0x28] 	       197	clk-mux.c	FUNCTION_7	CALL_1
0x400045f	              0x50	                                push rax	       197	clk-mux.c	FUNCTION_7	CALL_1
0x4000460	       0xfb64c2428	           movzx ecx, byte [rsp + 0x28] 	       197	clk-mux.c	FUNCTION_7	CALL_1
0x4000465	      0xb801000000	                              mov eax, 1	       197	clk-mux.c	FUNCTION_7	CALL_1
0x400046a	          0x48d3e0	                             shl rax, cl	       197	clk-mux.c	FUNCTION_7	CALL_1
0x400046d	          0x4489d1	                           mov ecx, r10d	       197	clk-mux.c	FUNCTION_7	CALL_1
0x4000470	          0x83e801	                              sub eax, 1	       197	clk-mux.c	FUNCTION_7	CALL_1
0x4000473	              0x50	                                push rax	       197	clk-mux.c	FUNCTION_7	CALL_1
0x4000474	       0xfb6442428	           movzx eax, byte [rsp + 0x28] 	       197	clk-mux.c	FUNCTION_7	CALL_1
0x4000479	              0x50	                                push rax	       197	clk-mux.c	FUNCTION_7	CALL_1
0x400047a	      0xe800000000	                          call 0x400047f	       197	clk-mux.c	FUNCTION_7	CALL_1
0x400047f	        0x4883c428	                           add rsp, 0x28	       200	clk-mux.c	FUNCTION_7	IF_1	CALL_2
0x4000483	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	       200	clk-mux.c	FUNCTION_7	IF_1	CALL_2
0x4000489	            0x7704	                            ja 0x400048f	       200	clk-mux.c	FUNCTION_7	IF_1	CALL_2
0x400048b	        0x488b4008	                mov rax, qword [rax + 8]	       202	clk-mux.c	FUNCTION_7
0x400048f	            0xf3c3	                                     ret	       217	clk-mux.c	FUNCTION_8
