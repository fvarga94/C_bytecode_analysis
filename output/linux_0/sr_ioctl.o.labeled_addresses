sr_fake_playtrkind	WHILE,0:FOR,0:CALL,5:ELSE,1:DO,0:IF,5:functions,0:SWITCH,0	74
0x4000490	              0x55	                                push rbp	       116	sr_ioctl.c	FUNCTION_3
0x4000491	              0x53	                                push rbx	       116	sr_ioctl.c	FUNCTION_3
0x4000492	          0x4889fb	                            mov rbx, rdi	       116	sr_ioctl.c	FUNCTION_3
0x4000495	          0x4889f5	                            mov rbp, rsi	       116	sr_ioctl.c	FUNCTION_3
0x4000498	        0x4883ec68	                           sub rsp, 0x68	       116	sr_ioctl.c	FUNCTION_3
0x400049c	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	       122	sr_ioctl.c	FUNCTION_3	CALL_1
0x40004a0	      0x488d742406	                      lea rsi, [rsp + 6]	       122	sr_ioctl.c	FUNCTION_3	CALL_1
0x40004a5	    0x65488b042528	                mov rax, qword gs:[0x28]	       116	sr_ioctl.c	FUNCTION_3
0x40004ae	      0x4889442460	             mov qword [rsp + 0x60], rax	       116	sr_ioctl.c	FUNCTION_3
0x40004b3	            0x31c0	                            xor eax, eax	       116	sr_ioctl.c	FUNCTION_3
0x40004b5	      0xe896fdffff	          call sym.sr_read_tochdr.isra.0	       122	sr_ioctl.c	FUNCTION_3	CALL_1
0x40004ba	            0x85c0	                           test eax, eax	       123	sr_ioctl.c	FUNCTION_3	IF_1
0x40004bc	            0x755f	                           jne 0x400051d	       123	sr_ioctl.c	FUNCTION_3	IF_1
0x40004be	       0xfb64c2406	               movzx ecx, byte [rsp + 6]	       128	sr_ioctl.c	FUNCTION_3	IF_2
0x40004c3	       0xfb6442407	               movzx eax, byte [rsp + 7]	       128	sr_ioctl.c	FUNCTION_3	IF_2
0x40004c8	         0xfb65502	               movzx edx, byte [rbp + 2]	       128	sr_ioctl.c	FUNCTION_3	IF_2
0x40004cc	            0x29c8	                            sub eax, ecx	       128	sr_ioctl.c	FUNCTION_3	IF_2
0x40004ce	          0x83c001	                              add eax, 1	       128	sr_ioctl.c	FUNCTION_3	IF_2
0x40004d1	           0xfb6ca	                           movzx ecx, dl	       128	sr_ioctl.c	FUNCTION_3	IF_2
0x40004d4	            0x39c8	                            cmp eax, ecx	       128	sr_ioctl.c	FUNCTION_3	IF_2
0x40004d6	            0x745c	                            je 0x4000534	       128	sr_ioctl.c	FUNCTION_3	IF_2
0x40004d8	          0x80faaa	                            cmp dl, 0xaa	       130	sr_ioctl.c	FUNCTION_3	ELSE_1	IF_3
0x40004db	            0x7406	                            je 0x40004e3	       130	sr_ioctl.c	FUNCTION_3	ELSE_1	IF_3
0x40004dd	          0x83c201	                              add edx, 1	       131	sr_ioctl.c	FUNCTION_3	ELSE_1	IF_3
0x40004e0	          0x885502	                  mov byte [rbp + 2], dl	       131	sr_ioctl.c	FUNCTION_3	ELSE_1	IF_3
0x40004e3	         0xfb64500	                   movzx eax, byte [rbp]	       133	sr_ioctl.c	FUNCTION_3
0x40004e7	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       138	sr_ioctl.c	FUNCTION_3	CALL_2
0x40004eb	      0x488d742408	                      lea rsi, [rsp + 8]	       138	sr_ioctl.c	FUNCTION_3	CALL_2
0x40004f0	      0xc644240a02	                 mov byte [rsp + 0xa], 2	       134	sr_ioctl.c	FUNCTION_3
0x40004f5	        0x88542414	               mov byte [rsp + 0x14], dl	       135	sr_ioctl.c	FUNCTION_3
0x40004f9	      0xc644241602	                mov byte [rsp + 0x16], 2	       136	sr_ioctl.c	FUNCTION_3
0x40004fe	        0x88442408	                  mov byte [rsp + 8], al	       133	sr_ioctl.c	FUNCTION_3
0x4000502	      0xe839feffff	        call sym.sr_read_tocentry.isra.1	       138	sr_ioctl.c	FUNCTION_3	CALL_2
0x4000507	            0x85c0	                           test eax, eax	       139	sr_ioctl.c	FUNCTION_3	IF_4
0x4000509	            0x7512	                           jne 0x400051d	       139	sr_ioctl.c	FUNCTION_3	IF_4
0x400050b	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       141	sr_ioctl.c	FUNCTION_3	CALL_3
0x400050f	      0x488d742414	                   lea rsi, [rsp + 0x14]	       141	sr_ioctl.c	FUNCTION_3	CALL_3
0x4000514	      0xe827feffff	        call sym.sr_read_tocentry.isra.1	       141	sr_ioctl.c	FUNCTION_3	CALL_3
0x4000519	            0x85c0	                           test eax, eax	       142	sr_ioctl.c	FUNCTION_3	IF_5
0x400051b	            0x7422	                            je 0x400053f	       142	sr_ioctl.c	FUNCTION_3	IF_5
0x400051d	      0x488b4c2460	            mov rcx, qword [rsp + 0x60] 	       156	sr_ioctl.c	FUNCTION_3
0x4000522	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       156	sr_ioctl.c	FUNCTION_3
0x400052b	            0x757a	                           jne 0x40005a7	       156	sr_ioctl.c	FUNCTION_3
0x400052d	        0x4883c468	                           add rsp, 0x68	       156	sr_ioctl.c	FUNCTION_3
0x4000531	              0x5b	                                 pop rbx	       156	sr_ioctl.c	FUNCTION_3
0x4000532	              0x5d	                                 pop rbp	       156	sr_ioctl.c	FUNCTION_3
0x4000533	              0xc3	                                     ret	       156	sr_ioctl.c	FUNCTION_3
0x4000534	        0xc64502aa	                mov byte [rbp + 2], 0xaa	       129	sr_ioctl.c	FUNCTION_3	IF_2
0x4000538	      0xbaaaffffff	                     mov edx, 0xffffffaa	       129	sr_ioctl.c	FUNCTION_3	IF_2
0x400053d	            0xeba4	                           jmp 0x40004e3	       129	sr_ioctl.c	FUNCTION_3	IF_2
0x400053f	      0x488d742420	                   lea rsi, [rsp + 0x20]	       145	sr_ioctl.c	FUNCTION_3	CALL_4
0x4000544	            0x31c0	                            xor eax, eax	       145	sr_ioctl.c	FUNCTION_3	CALL_4
0x4000546	      0xb908000000	                              mov ecx, 8	       145	sr_ioctl.c	FUNCTION_3	CALL_4
0x400054b	          0x4889f7	                            mov rdi, rsi	       145	sr_ioctl.c	FUNCTION_3	CALL_4
0x400054e	          0xf348ab	              rep stosq qword [rdi], rax	       145	sr_ioctl.c	FUNCTION_3	CALL_4
0x4000551	       0xfb644240c	            movzx eax, byte [rsp + 0xc] 	       147	sr_ioctl.c	FUNCTION_3
0x4000556	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       155	sr_ioctl.c	FUNCTION_3	CALL_5
0x400055a	      0xc644242047	            mov byte [rsp + 0x20], 0x47 	       146	sr_ioctl.c	FUNCTION_3
0x400055f	      0xc644244803	                mov byte [rsp + 0x48], 3	       153	sr_ioctl.c	FUNCTION_3
0x4000564	    0xc74424503075	         mov dword [rsp + 0x50], 0x7530 	       154	sr_ioctl.c	FUNCTION_3
0x400056c	        0x88442423	               mov byte [rsp + 0x23], al	       147	sr_ioctl.c	FUNCTION_3
0x4000570	       0xfb644240d	            movzx eax, byte [rsp + 0xd] 	       148	sr_ioctl.c	FUNCTION_3
0x4000575	        0x88442424	               mov byte [rsp + 0x24], al	       148	sr_ioctl.c	FUNCTION_3
0x4000579	       0xfb644240e	            movzx eax, byte [rsp + 0xe] 	       149	sr_ioctl.c	FUNCTION_3
0x400057e	        0x88442425	               mov byte [rsp + 0x25], al	       149	sr_ioctl.c	FUNCTION_3
0x4000582	       0xfb6442418	           movzx eax, byte [rsp + 0x18] 	       150	sr_ioctl.c	FUNCTION_3
0x4000587	        0x88442426	               mov byte [rsp + 0x26], al	       150	sr_ioctl.c	FUNCTION_3
0x400058b	       0xfb6442419	           movzx eax, byte [rsp + 0x19] 	       151	sr_ioctl.c	FUNCTION_3
0x4000590	        0x88442427	               mov byte [rsp + 0x27], al	       151	sr_ioctl.c	FUNCTION_3
0x4000594	       0xfb644241a	           movzx eax, byte [rsp + 0x1a] 	       152	sr_ioctl.c	FUNCTION_3
0x4000599	        0x88442428	               mov byte [rsp + 0x28], al	       152	sr_ioctl.c	FUNCTION_3
0x400059d	      0xe800000000	                          call 0x40005a2	       155	sr_ioctl.c	FUNCTION_3	CALL_5
0x40005a2	      0xe976ffffff	                           jmp 0x400051d	       155	sr_ioctl.c	FUNCTION_3	CALL_5
0x40005a7	      0xe800000000	                          call 0x40005ac	       156	sr_ioctl.c	FUNCTION_3
sr_drive_status	WHILE,0:FOR,0:CALL,5:ELSE,3:DO,0:IF,9:functions,0:SWITCH,0	73
0x40006d0	              0x53	                                push rbx	       289	sr_ioctl.c	FUNCTION_8
0x40006d1	        0x4883ec18	                           sub rsp, 0x18	       289	sr_ioctl.c	FUNCTION_8
0x40006d5	    0x65488b042528	                mov rax, qword gs:[0x28]	       289	sr_ioctl.c	FUNCTION_8
0x40006de	      0x4889442410	             mov qword [rsp + 0x10], rax	       289	sr_ioctl.c	FUNCTION_8
0x40006e3	            0x31c0	                            xor eax, eax	       289	sr_ioctl.c	FUNCTION_8
0x40006e5	    0x81feffffff7f	                     cmp esi, 0x7fffffff	       294	sr_ioctl.c	FUNCTION_8	IF_1
0x40006eb	      0xb8eaffffff	                     mov eax, 0xffffffea	       296	sr_ioctl.c	FUNCTION_8	IF_1
0x40006f0	            0x7528	                           jne 0x400071a	       294	sr_ioctl.c	FUNCTION_8	IF_1
0x40006f2	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       298	sr_ioctl.c	FUNCTION_8	IF_2	CALL_1
0x40006f6	          0x4889fb	                            mov rbx, rdi	       298	sr_ioctl.c	FUNCTION_8	IF_2	CALL_1
0x40006f9	      0x488d4c2408	                      lea rcx, [rsp + 8]	       298	sr_ioctl.c	FUNCTION_8	IF_2	CALL_1
0x40006fe	      0xba03000000	                              mov edx, 3	       298	sr_ioctl.c	FUNCTION_8	IF_2	CALL_1
0x4000703	      0xbe30750000	                         mov esi, 0x7530	       298	sr_ioctl.c	FUNCTION_8	IF_2	CALL_1
0x4000708	        0x488b7810	            mov rdi, qword [rax + 0x10] 	       298	sr_ioctl.c	FUNCTION_8	IF_2	CALL_1
0x400070c	      0xe800000000	                          call 0x4000711	       298	sr_ioctl.c	FUNCTION_8	IF_2	CALL_1
0x4000711	            0x85c0	                           test eax, eax	       298	sr_ioctl.c	FUNCTION_8	IF_2	CALL_1
0x4000713	            0x751f	                           jne 0x4000734	       298	sr_ioctl.c	FUNCTION_8	IF_2	CALL_1
0x4000715	      0xb804000000	                              mov eax, 4	       299	sr_ioctl.c	FUNCTION_8	IF_2
0x400071a	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       343	sr_ioctl.c	FUNCTION_8	ELSE_3
0x400071f	    0x654833142528	                xor rdx, qword gs:[0x28]	       343	sr_ioctl.c	FUNCTION_8	ELSE_3
0x4000728	     0xf85ad000000	                           jne 0x40007db	       343	sr_ioctl.c	FUNCTION_8	ELSE_3
0x400072e	        0x4883c418	                           add rsp, 0x18	       343	sr_ioctl.c	FUNCTION_8	ELSE_3
0x4000732	              0x5b	                                 pop rbx	       343	sr_ioctl.c	FUNCTION_8	ELSE_3
0x4000733	              0xc3	                                     ret	       343	sr_ioctl.c	FUNCTION_8	ELSE_3
0x4000734	       0xfb6442408	               movzx eax, byte [rsp + 8]	       302	sr_ioctl.c	FUNCTION_8	IF_3	CALL_2
0x4000739	          0x83e070	                           and eax, 0x70	       302	sr_ioctl.c	FUNCTION_8	IF_3	CALL_2
0x400073c	            0x3c70	                            cmp al, 0x70	       302	sr_ioctl.c	FUNCTION_8	IF_3	CALL_2
0x400073e	            0x7447	                            je 0x4000787	       302	sr_ioctl.c	FUNCTION_8	IF_3	CALL_2
0x4000740	      0x488d742404	                      lea rsi, [rsp + 4]	       306	sr_ioctl.c	FUNCTION_8	IF_4	CALL_3
0x4000745	          0x4889df	                            mov rdi, rbx	       306	sr_ioctl.c	FUNCTION_8	IF_4	CALL_3
0x4000748	      0xe800000000	                          call 0x400074d	       306	sr_ioctl.c	FUNCTION_8	IF_4	CALL_3
0x400074d	            0x85c0	                           test eax, eax	       306	sr_ioctl.c	FUNCTION_8	IF_4	CALL_3
0x400074f	            0x7421	                            je 0x4000772	       306	sr_ioctl.c	FUNCTION_8	IF_4	CALL_3
0x4000751	       0xfb6442408	               movzx eax, byte [rsp + 8]	       320	sr_ioctl.c	FUNCTION_8	IF_7	CALL_4
0x4000756	          0x83e070	                           and eax, 0x70	       320	sr_ioctl.c	FUNCTION_8	IF_7	CALL_4
0x4000759	            0x3c70	                            cmp al, 0x70	       320	sr_ioctl.c	FUNCTION_8	IF_7	CALL_4
0x400075b	            0x7449	                            je 0x40007a6	       320	sr_ioctl.c	FUNCTION_8	IF_7	CALL_4
0x400075d	      0x807c240902	                   cmp byte [rsp + 9], 2	       327	sr_ioctl.c	FUNCTION_8	IF_8
0x4000762	      0xb802000000	                              mov eax, 2	       340	sr_ioctl.c	FUNCTION_8	ELSE_3
0x4000767	            0x75b1	                           jne 0x400071a	       327	sr_ioctl.c	FUNCTION_8	IF_8
0x4000769	      0x807c240a04	                 cmp byte [rsp + 0xa], 4	       327	sr_ioctl.c	FUNCTION_8	IF_8
0x400076e	            0x74a5	                            je 0x4000715	       327	sr_ioctl.c	FUNCTION_8	IF_8
0x4000770	            0xeba8	                           jmp 0x400071a	       327	sr_ioctl.c	FUNCTION_8	IF_8
0x4000772	       0xfb6442405	               movzx eax, byte [rsp + 5]	       307	sr_ioctl.c	FUNCTION_8	IF_4	IF_5
0x4000777	            0xa802	                              test al, 2	       307	sr_ioctl.c	FUNCTION_8	IF_4	IF_5
0x4000779	            0x759a	                           jne 0x4000715	       307	sr_ioctl.c	FUNCTION_8	IF_4	IF_5
0x400077b	          0x83e001	                              and eax, 1	       309	sr_ioctl.c	FUNCTION_8	IF_4	ELSE_1	IF_6
0x400077e	            0x3c01	                               cmp al, 1	       340	sr_ioctl.c	FUNCTION_8	ELSE_3
0x4000780	            0x19c0	                            sbb eax, eax	       340	sr_ioctl.c	FUNCTION_8	ELSE_3
0x4000782	          0x83c002	                              add eax, 2	       340	sr_ioctl.c	FUNCTION_8	ELSE_3
0x4000785	            0xeb93	                           jmp 0x400071a	       340	sr_ioctl.c	FUNCTION_8	ELSE_3
0x4000787	      0x807c240902	                   cmp byte [rsp + 9], 2	       302	sr_ioctl.c	FUNCTION_8	IF_3	CALL_2
0x400078c	            0x75b2	                           jne 0x4000740	       302	sr_ioctl.c	FUNCTION_8	IF_3	CALL_2
0x400078e	      0x807c240a04	                 cmp byte [rsp + 0xa], 4	       303	sr_ioctl.c	FUNCTION_8	IF_3
0x4000793	            0x75ab	                           jne 0x4000740	       303	sr_ioctl.c	FUNCTION_8	IF_3
0x4000795	      0x807c240b01	                 cmp byte [rsp + 0xb], 1	       303	sr_ioctl.c	FUNCTION_8	IF_3
0x400079a	      0xb803000000	                              mov eax, 3	       304	sr_ioctl.c	FUNCTION_8	IF_3
0x400079f	            0x759f	                           jne 0x4000740	       303	sr_ioctl.c	FUNCTION_8	IF_3
0x40007a1	      0xe974ffffff	                           jmp 0x400071a	       303	sr_ioctl.c	FUNCTION_8	IF_3
0x40007a6	      0x807c240902	                   cmp byte [rsp + 9], 2	       320	sr_ioctl.c	FUNCTION_8	IF_7	CALL_4
0x40007ab	            0x7412	                            je 0x40007bf	       320	sr_ioctl.c	FUNCTION_8	IF_7	CALL_4
0x40007ad	            0x31c0	                            xor eax, eax	       312	sr_ioctl.c	FUNCTION_8	IF_4	ELSE_2
0x40007af	      0x807c240a3a	              cmp byte [rsp + 0xa], 0x3a	       312	sr_ioctl.c	FUNCTION_8	IF_4	ELSE_2
0x40007b4	           0xf95c0	                                setne al	       312	sr_ioctl.c	FUNCTION_8	IF_4	ELSE_2
0x40007b7	          0x83c001	                              add eax, 1	       312	sr_ioctl.c	FUNCTION_8	IF_4	ELSE_2
0x40007ba	      0xe95bffffff	                           jmp 0x400071a	       312	sr_ioctl.c	FUNCTION_8	IF_4	ELSE_2
0x40007bf	      0x807c240a04	                 cmp byte [rsp + 0xa], 4	       321	sr_ioctl.c	FUNCTION_8	IF_7
0x40007c4	            0x75e7	                           jne 0x40007ad	       321	sr_ioctl.c	FUNCTION_8	IF_7
0x40007c6	      0x807c240b02	                 cmp byte [rsp + 0xb], 2	       321	sr_ioctl.c	FUNCTION_8	IF_7
0x40007cb	      0xb802000000	                              mov eax, 2	       340	sr_ioctl.c	FUNCTION_8	ELSE_3
0x40007d0	     0xf853fffffff	                           jne 0x4000715	       321	sr_ioctl.c	FUNCTION_8	IF_7
0x40007d6	      0xe93fffffff	                           jmp 0x400071a	       321	sr_ioctl.c	FUNCTION_8	IF_7
0x40007db	      0xe800000000	                 call sym.sr_disk_status	       343	sr_ioctl.c	FUNCTION_8	ELSE_3
sr_lock_door	WHILE,0:FOR,0:CALL,1:ELSE,0:DO,0:IF,0:functions,0:SWITCH,0	6
0x40006b0	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       284	sr_ioctl.c	FUNCTION_7	CALL_1
0x40006b4	            0x85f6	                           test esi, esi	       284	sr_ioctl.c	FUNCTION_7	CALL_1
0x40006b6	        0x400f95c6	                               setne sil	       284	sr_ioctl.c	FUNCTION_7	CALL_1
0x40006ba	        0x400fb6f6	                          movzx esi, sil	       284	sr_ioctl.c	FUNCTION_7	CALL_1
0x40006be	        0x488b7810	            mov rdi, qword [rax + 0x10] 	       284	sr_ioctl.c	FUNCTION_7	CALL_1
0x40006c2	      0xe900000000	                           jmp 0x40006c7	       284	sr_ioctl.c	FUNCTION_7	CALL_1
sr_get_last_session	WHILE,0:FOR,0:CALL,0:ELSE,0:DO,0:IF,0:functions,0:SWITCH,0	11
0x40008a0	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       379	sr_ioctl.c	ELSE_1	FUNCTION_10
0x40008a4	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       381	sr_ioctl.c	ELSE_1	FUNCTION_10
0x40008a8	            0x8916	                    mov dword [rsi], edx	       381	sr_ioctl.c	ELSE_1	FUNCTION_10
0x40008aa	        0xf6402804	               test byte [rax + 0x28], 4	       382	sr_ioctl.c	ELSE_1	FUNCTION_10
0x40008ae	      0xba01000000	                              mov edx, 1	       382	sr_ioctl.c	ELSE_1	FUNCTION_10
0x40008b3	            0x7508	                           jne 0x40008bd	       382	sr_ioctl.c	ELSE_1	FUNCTION_10
0x40008b5	      0x4883782000	               cmp qword [rax + 0x20], 0	       382	sr_ioctl.c	ELSE_1	FUNCTION_10
0x40008ba	           0xf95c2	                                setne dl	       382	sr_ioctl.c	ELSE_1	FUNCTION_10
0x40008bd	          0x885604	                  mov byte [rsi + 4], dl	       382	sr_ioctl.c	ELSE_1	FUNCTION_10
0x40008c0	            0x31c0	                            xor eax, eax	       385	sr_ioctl.c	ELSE_1	FUNCTION_10
0x40008c2	              0xc3	                                     ret	       385	sr_ioctl.c	ELSE_1	FUNCTION_10
sr_reset	WHILE,0:FOR,0:CALL,0:ELSE,0:DO,0:IF,0:functions,0:SWITCH,0	2
0x40009d0	            0x31c0	                            xor eax, eax	       418	sr_ioctl.c	FUNCTION_12
0x40009d2	              0xc3	                                     ret	       418	sr_ioctl.c	FUNCTION_12
sr_audio_ioctl	WHILE,0:FOR,0:CALL,3:ELSE,0:DO,0:IF,0:functions,0:SWITCH,1	54
0x4000a70	              0x53	                                push rbx	       449	sr_ioctl.c	FUNCTION_14
0x4000a71	          0x4889fb	                            mov rbx, rdi	       449	sr_ioctl.c	FUNCTION_14
0x4000a74	        0x4883ec50	                           sub rsp, 0x50	       449	sr_ioctl.c	FUNCTION_14
0x4000a78	    0x65488b042528	                mov rax, qword gs:[0x28]	       449	sr_ioctl.c	FUNCTION_14
0x4000a81	      0x4889442448	             mov qword [rsp + 0x48], rax	       449	sr_ioctl.c	FUNCTION_14
0x4000a86	            0x31c0	                            xor eax, eax	       449	sr_ioctl.c	FUNCTION_14
0x4000a88	    0x81fe05530000	                         cmp esi, 0x5305	       450	sr_ioctl.c	FUNCTION_14	SWITCH_1
0x4000a8e	     0xf84aa000000	                            je 0x4000b3e	       450	sr_ioctl.c	FUNCTION_14	SWITCH_1
0x4000a94	    0x81fe06530000	                         cmp esi, 0x5306	       450	sr_ioctl.c	FUNCTION_14	SWITCH_1
0x4000a9a	     0xf848d000000	                            je 0x4000b2d	       450	sr_ioctl.c	FUNCTION_14	SWITCH_1
0x4000aa0	    0x81fe04530000	                         cmp esi, 0x5304	       450	sr_ioctl.c	FUNCTION_14	SWITCH_1
0x4000aa6	      0xb8eaffffff	                     mov eax, 0xffffffea	       458	sr_ioctl.c	FUNCTION_14	SWITCH_1
0x4000aab	            0x741a	                            je 0x4000ac7	       450	sr_ioctl.c	FUNCTION_14	SWITCH_1
0x4000aad	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	       460	sr_ioctl.c	FUNCTION_14
0x4000ab2	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       460	sr_ioctl.c	FUNCTION_14
0x4000abb	     0xf858e000000	                           jne 0x4000b4f	       460	sr_ioctl.c	FUNCTION_14
0x4000ac1	        0x4883c450	                           add rsp, 0x50	       460	sr_ioctl.c	FUNCTION_14
0x4000ac5	              0x5b	                                 pop rbx	       460	sr_ioctl.c	FUNCTION_14
0x4000ac6	              0xc3	                                     ret	       460	sr_ioctl.c	FUNCTION_14
0x4000ac7	      0x488d742408	                      lea rsi, [rsp + 8]	       166	sr_ioctl.c	FUNCTION_4	CALL_1
0x4000acc	            0x31c0	                            xor eax, eax	       166	sr_ioctl.c	FUNCTION_4	CALL_1
0x4000ace	      0xb908000000	                              mov ecx, 8	       166	sr_ioctl.c	FUNCTION_4	CALL_1
0x4000ad3	        0x48891424	                    mov qword [rsp], rdx	       172	sr_ioctl.c	FUNCTION_4
0x4000ad7	          0x4889f7	                            mov rdi, rsi	       166	sr_ioctl.c	FUNCTION_4	CALL_1
0x4000ada	          0xf348ab	              rep stosq qword [rdi], rax	       166	sr_ioctl.c	FUNCTION_4	CALL_1
0x4000add	           0xfb602	                   movzx eax, byte [rdx]	       169	sr_ioctl.c	FUNCTION_4
0x4000ae0	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       175	sr_ioctl.c	FUNCTION_4	CALL_2
0x4000ae4	    0xc74424383075	         mov dword [rsp + 0x38], 0x7530 	       167	sr_ioctl.c	FUNCTION_4
0x4000aec	      0xc644240848	                mov byte [rsp + 8], 0x48	       168	sr_ioctl.c	FUNCTION_4
0x4000af1	      0xc644243003	                mov byte [rsp + 0x30], 3	       173	sr_ioctl.c	FUNCTION_4
0x4000af6	        0x8844240c	                mov byte [rsp + 0xc], al	       169	sr_ioctl.c	FUNCTION_4
0x4000afa	         0xfb64201	               movzx eax, byte [rdx + 1]	       170	sr_ioctl.c	FUNCTION_4
0x4000afe	        0x8844240d	                mov byte [rsp + 0xd], al	       170	sr_ioctl.c	FUNCTION_4
0x4000b02	         0xfb64202	               movzx eax, byte [rdx + 2]	       171	sr_ioctl.c	FUNCTION_4
0x4000b06	        0x8844240f	                mov byte [rsp + 0xf], al	       171	sr_ioctl.c	FUNCTION_4
0x4000b0a	         0xfb64203	               movzx eax, byte [rdx + 3]	       172	sr_ioctl.c	FUNCTION_4
0x4000b0e	        0x88442410	               mov byte [rsp + 0x10], al	       172	sr_ioctl.c	FUNCTION_4
0x4000b12	      0xe800000000	                          call 0x4000b17	       175	sr_ioctl.c	FUNCTION_4	CALL_2
0x4000b17	          0x83f8a1	             cmp eax, 0xffffffffffffffa1	       176	sr_ioctl.c	FUNCTION_4	IF_1
0x4000b1a	        0x488b1424	                    mov rdx, qword [rsp]	       176	sr_ioctl.c	FUNCTION_4	IF_1
0x4000b1e	            0x758d	                           jne 0x4000aad	       176	sr_ioctl.c	FUNCTION_4	IF_1
0x4000b20	          0x4889d6	                            mov rsi, rdx	       177	sr_ioctl.c	FUNCTION_4	CALL_3
0x4000b23	          0x4889df	                            mov rdi, rbx	       177	sr_ioctl.c	FUNCTION_4	CALL_3
0x4000b26	      0xe865f9ffff	             call sym.sr_fake_playtrkind	       177	sr_ioctl.c	FUNCTION_4	CALL_3
0x4000b2b	            0xeb80	                           jmp 0x4000aad	       456	sr_ioctl.c	FUNCTION_14	SWITCH_1	CALL_3
0x4000b2d	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	       454	sr_ioctl.c	FUNCTION_14	SWITCH_1	CALL_2
0x4000b31	          0x4889d6	                            mov rsi, rdx	       454	sr_ioctl.c	FUNCTION_14	SWITCH_1	CALL_2
0x4000b34	      0xe807f8ffff	        call sym.sr_read_tocentry.isra.1	       454	sr_ioctl.c	FUNCTION_14	SWITCH_1	CALL_2
0x4000b39	      0xe96fffffff	                           jmp 0x4000aad	       454	sr_ioctl.c	FUNCTION_14	SWITCH_1	CALL_2
0x4000b3e	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	       452	sr_ioctl.c	FUNCTION_14	SWITCH_1	CALL_1
0x4000b42	          0x4889d6	                            mov rsi, rdx	       452	sr_ioctl.c	FUNCTION_14	SWITCH_1	CALL_1
0x4000b45	      0xe806f7ffff	          call sym.sr_read_tochdr.isra.0	       452	sr_ioctl.c	FUNCTION_14	SWITCH_1	CALL_1
0x4000b4a	      0xe95effffff	                           jmp 0x4000aad	       452	sr_ioctl.c	FUNCTION_14	SWITCH_1	CALL_1
0x4000b4f	      0xe800000000	                          call 0x4000b54	       460	sr_ioctl.c	FUNCTION_14
sr_tray_move	WHILE,0:FOR,0:CALL,2:ELSE,0:DO,0:IF,0:functions,0:SWITCH,0	25
0x4000640	        0x4883ec48	                           sub rsp, 0x48	       268	sr_ioctl.c	FUNCTION_6
0x4000644	      0xb908000000	                              mov ecx, 8	       272	sr_ioctl.c	FUNCTION_6	CALL_1
0x4000649	        0x4c8b4720	              mov r8, qword [rdi + 0x20]	       269	sr_ioctl.c	FUNCTION_6
0x400064d	    0x65488b042528	                mov rax, qword gs:[0x28]	       268	sr_ioctl.c	FUNCTION_6
0x4000656	      0x4889442440	             mov qword [rsp + 0x40], rax	       268	sr_ioctl.c	FUNCTION_6
0x400065b	            0x31c0	                            xor eax, eax	       268	sr_ioctl.c	FUNCTION_6
0x400065d	          0x4889e7	                            mov rdi, rsp	       272	sr_ioctl.c	FUNCTION_6	CALL_1
0x4000660	          0x83fe01	                              cmp esi, 1	       274	sr_ioctl.c	FUNCTION_6
0x4000663	          0x4889e6	                            mov rsi, rsp	       277	sr_ioctl.c	FUNCTION_6	CALL_2
0x4000666	          0xf348ab	              rep stosq qword [rdi], rax	       272	sr_ioctl.c	FUNCTION_6	CALL_1
0x4000669	            0x19c0	                            sbb eax, eax	       274	sr_ioctl.c	FUNCTION_6
0x400066b	          0x4c89c7	                             mov rdi, r8	       277	sr_ioctl.c	FUNCTION_6	CALL_2
0x400066e	        0xc604241b	                    mov byte [rsp], 0x1b	       273	sr_ioctl.c	FUNCTION_6
0x4000672	            0xf7d0	                                 not eax	       274	sr_ioctl.c	FUNCTION_6
0x4000674	      0xc644242803	                mov byte [rsp + 0x28], 3	       275	sr_ioctl.c	FUNCTION_6
0x4000679	    0xc74424303075	         mov dword [rsp + 0x30], 0x7530 	       276	sr_ioctl.c	FUNCTION_6
0x4000681	          0x83c003	                              add eax, 3	       274	sr_ioctl.c	FUNCTION_6
0x4000684	        0x88442404	                  mov byte [rsp + 4], al	       274	sr_ioctl.c	FUNCTION_6
0x4000688	      0xe800000000	                          call 0x400068d	       277	sr_ioctl.c	FUNCTION_6	CALL_2
0x400068d	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	       278	sr_ioctl.c	FUNCTION_6
0x4000692	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       278	sr_ioctl.c	FUNCTION_6
0x400069b	            0x7505	                           jne 0x40006a2	       278	sr_ioctl.c	FUNCTION_6
0x400069d	        0x4883c448	                           add rsp, 0x48	       278	sr_ioctl.c	FUNCTION_6
0x40006a1	              0xc3	                                     ret	       278	sr_ioctl.c	FUNCTION_6
0x40006a2	      0xe800000000	                          call 0x40006a7	       278	sr_ioctl.c	FUNCTION_6
sr_select_speed	WHILE,0:FOR,0:CALL,2:ELSE,1:DO,0:IF,2:functions,0:SWITCH,0	34
0x40009e0	        0x4883ec48	                           sub rsp, 0x48	       421	sr_ioctl.c	FUNCTION_13
0x40009e4	      0xbaffffffff	                     mov edx, 0xffffffff	       421	sr_ioctl.c	FUNCTION_13
0x40009e9	        0x4c8b4f20	              mov r9, qword [rdi + 0x20]	       422	sr_ioctl.c	FUNCTION_13
0x40009ed	    0x65488b042528	                mov rax, qword gs:[0x28]	       421	sr_ioctl.c	FUNCTION_13
0x40009f6	      0x4889442440	             mov qword [rsp + 0x40], rax	       421	sr_ioctl.c	FUNCTION_13
0x40009fb	            0x31c0	                            xor eax, eax	       421	sr_ioctl.c	FUNCTION_13
0x40009fd	            0x85f6	                           test esi, esi	       425	sr_ioctl.c	FUNCTION_13	IF_1
0x40009ff	          0x4189d0	                            mov r8d, edx	       425	sr_ioctl.c	FUNCTION_13	IF_1
0x4000a02	            0x740e	                            je 0x4000a12	       425	sr_ioctl.c	FUNCTION_13	IF_1
0x4000a04	    0x69d6b1000000	                     imul edx, esi, 0xb1	       428	sr_ioctl.c	FUNCTION_13	ELSE_1
0x4000a0a	            0x89d0	                            mov eax, edx	       428	sr_ioctl.c	FUNCTION_13	ELSE_1
0x4000a0c	          0xc1e808	                              shr eax, 8	       428	sr_ioctl.c	FUNCTION_13	ELSE_1
0x4000a0f	          0x4189c0	                            mov r8d, eax	       428	sr_ioctl.c	FUNCTION_13	ELSE_1
0x4000a12	            0x31c0	                            xor eax, eax	       430	sr_ioctl.c	FUNCTION_13	CALL_1
0x4000a14	          0x4889e7	                            mov rdi, rsp	       430	sr_ioctl.c	FUNCTION_13	CALL_1
0x4000a17	      0xb908000000	                              mov ecx, 8	       430	sr_ioctl.c	FUNCTION_13	CALL_1
0x4000a1c	          0xf348ab	              rep stosq qword [rdi], rax	       430	sr_ioctl.c	FUNCTION_13	CALL_1
0x4000a1f	          0x4889e6	                            mov rsi, rsp	       430	sr_ioctl.c	FUNCTION_13	CALL_1
0x4000a22	          0x4c89cf	                             mov rdi, r9	       437	sr_ioctl.c	FUNCTION_13	IF_2	CALL_2
0x4000a25	        0x88542403	                  mov byte [rsp + 3], dl	       433	sr_ioctl.c	FUNCTION_13
0x4000a29	        0xc60424bb	                    mov byte [rsp], 0xbb	       431	sr_ioctl.c	FUNCTION_13
0x4000a2d	      0x4488442402	                 mov byte [rsp + 2], r8b	       432	sr_ioctl.c	FUNCTION_13
0x4000a32	      0xc644242803	                mov byte [rsp + 0x28], 3	       434	sr_ioctl.c	FUNCTION_13
0x4000a37	    0xc74424303075	         mov dword [rsp + 0x30], 0x7530 	       435	sr_ioctl.c	FUNCTION_13
0x4000a3f	      0xe800000000	                          call 0x4000a44	       437	sr_ioctl.c	FUNCTION_13	IF_2	CALL_2
0x4000a44	      0xbafbffffff	                     mov edx, 0xfffffffb	       438	sr_ioctl.c	FUNCTION_13	IF_2
0x4000a49	            0x85c0	                           test eax, eax	       438	sr_ioctl.c	FUNCTION_13	IF_2
0x4000a4b	           0xf45c2	                         cmovne eax, edx	       438	sr_ioctl.c	FUNCTION_13	IF_2
0x4000a4e	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	       440	sr_ioctl.c	FUNCTION_13
0x4000a53	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       440	sr_ioctl.c	FUNCTION_13
0x4000a5c	            0x7505	                           jne 0x4000a63	       440	sr_ioctl.c	FUNCTION_13
0x4000a5e	        0x4883c448	                           add rsp, 0x48	       440	sr_ioctl.c	FUNCTION_13
0x4000a62	              0xc3	                                     ret	       440	sr_ioctl.c	FUNCTION_13
0x4000a63	      0xe800000000	                          call 0x4000a68	       440	sr_ioctl.c	FUNCTION_13
sr_disk_status	WHILE,0:FOR,1:CALL,2:ELSE,1:DO,0:IF,5:functions,0:SWITCH,0	55
0x40007e0	            0x4154	                                push r12	       346	sr_ioctl.c	ELSE_3	FUNCTION_9
0x40007e2	              0x55	                                push rbp	       346	sr_ioctl.c	ELSE_3	FUNCTION_9
0x40007e3	          0x4889fd	                            mov rbp, rdi	       346	sr_ioctl.c	ELSE_3	FUNCTION_9
0x40007e6	              0x53	                                push rbx	       346	sr_ioctl.c	ELSE_3	FUNCTION_9
0x40007e7	        0x4883ec18	                           sub rsp, 0x18	       346	sr_ioctl.c	ELSE_3	FUNCTION_9
0x40007eb	        0x4c8b6720	            mov r12, qword [rdi + 0x20] 	       347	sr_ioctl.c	ELSE_3	FUNCTION_9
0x40007ef	      0x488d742402	                      lea rsi, [rsp + 2]	       353	sr_ioctl.c	ELSE_3	FUNCTION_9	CALL_1
0x40007f4	    0x65488b042528	                mov rax, qword gs:[0x28]	       346	sr_ioctl.c	ELSE_3	FUNCTION_9
0x40007fd	      0x4889442410	             mov qword [rsp + 0x10], rax	       346	sr_ioctl.c	ELSE_3	FUNCTION_9
0x4000802	            0x31c0	                            xor eax, eax	       346	sr_ioctl.c	ELSE_3	FUNCTION_9
0x4000804	          0x4c89e7	                            mov rdi, r12	       353	sr_ioctl.c	ELSE_3	FUNCTION_9	CALL_1
0x4000807	      0xe844faffff	          call sym.sr_read_tochdr.isra.0	       353	sr_ioctl.c	ELSE_3	FUNCTION_9	CALL_1
0x400080c	            0x85c0	                           test eax, eax	       354	sr_ioctl.c	ELSE_3	FUNCTION_9	IF_1
0x400080e	            0x755b	                           jne 0x400086b	       354	sr_ioctl.c	ELSE_3	FUNCTION_9	IF_1
0x4000810	       0xfb6442402	               movzx eax, byte [rsp + 2]	       357	sr_ioctl.c	ELSE_3	FUNCTION_9	FOR_1
0x4000815	       0xfb65c2402	               movzx ebx, byte [rsp + 2]	       357	sr_ioctl.c	ELSE_3	FUNCTION_9	FOR_1
0x400081a	        0x38442403	                  cmp byte [rsp + 3], al	       357	sr_ioctl.c	ELSE_3	FUNCTION_9	FOR_1
0x400081e	            0x7315	                           jae 0x4000835	       357	sr_ioctl.c	ELSE_3	FUNCTION_9	FOR_1
0x4000820	            0xeb54	                           jmp 0x4000876	       357	sr_ioctl.c	ELSE_3	FUNCTION_9	FOR_1
0x4000822	      0xf644240540	               test byte [rsp + 5], 0x40	       362	sr_ioctl.c	ELSE_3	FUNCTION_9	FOR_1	IF_3
0x4000827	            0x7554	                           jne 0x400087d	       362	sr_ioctl.c	ELSE_3	FUNCTION_9	FOR_1	IF_3
0x4000829	       0xfb6442403	               movzx eax, byte [rsp + 3]	       357	sr_ioctl.c	ELSE_3	FUNCTION_9	FOR_1
0x400082e	          0x83c301	                              add ebx, 1	       357	sr_ioctl.c	ELSE_3	FUNCTION_9	FOR_1
0x4000831	            0x39d8	                            cmp eax, ebx	       357	sr_ioctl.c	ELSE_3	FUNCTION_9	FOR_1
0x4000833	            0x7c41	                            jl 0x4000876	       357	sr_ioctl.c	ELSE_3	FUNCTION_9	FOR_1
0x4000835	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	       360	sr_ioctl.c	ELSE_3	FUNCTION_9	FOR_1	IF_2	CALL_2
0x4000839	      0x488d742404	                      lea rsi, [rsp + 4]	       360	sr_ioctl.c	ELSE_3	FUNCTION_9	FOR_1	IF_2	CALL_2
0x400083e	        0x885c2404	                  mov byte [rsp + 4], bl	       358	sr_ioctl.c	ELSE_3	FUNCTION_9	FOR_1
0x4000842	      0xc644240601	                   mov byte [rsp + 6], 1	       359	sr_ioctl.c	ELSE_3	FUNCTION_9	FOR_1
0x4000847	      0xe8f4faffff	        call sym.sr_read_tocentry.isra.1	       360	sr_ioctl.c	ELSE_3	FUNCTION_9	FOR_1	IF_2	CALL_2
0x400084c	            0x85c0	                           test eax, eax	       360	sr_ioctl.c	ELSE_3	FUNCTION_9	FOR_1	IF_2	CALL_2
0x400084e	            0x74d2	                            je 0x4000822	       360	sr_ioctl.c	ELSE_3	FUNCTION_9	FOR_1	IF_2	CALL_2
0x4000850	            0x31c0	                            xor eax, eax	       361	sr_ioctl.c	ELSE_3	FUNCTION_9	FOR_1	IF_2
0x4000852	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       374	sr_ioctl.c	ELSE_3	FUNCTION_9	ELSE_1
0x4000857	    0x654833142528	                xor rdx, qword gs:[0x28]	       374	sr_ioctl.c	ELSE_3	FUNCTION_9	ELSE_1
0x4000860	            0x7530	                           jne 0x4000892	       374	sr_ioctl.c	ELSE_3	FUNCTION_9	ELSE_1
0x4000862	        0x4883c418	                           add rsp, 0x18	       374	sr_ioctl.c	ELSE_3	FUNCTION_9	ELSE_1
0x4000866	              0x5b	                                 pop rbx	       374	sr_ioctl.c	ELSE_3	FUNCTION_9	ELSE_1
0x4000867	              0x5d	                                 pop rbp	       374	sr_ioctl.c	ELSE_3	FUNCTION_9	ELSE_1
0x4000868	            0x415c	                                 pop r12	       374	sr_ioctl.c	ELSE_3	FUNCTION_9	ELSE_1
0x400086a	              0xc3	                                     ret	       374	sr_ioctl.c	ELSE_3	FUNCTION_9	ELSE_1
0x400086b	          0x83f885	             cmp eax, 0xffffffffffffff85	       355	sr_ioctl.c	ELSE_3	FUNCTION_9	IF_1
0x400086e	           0xf94c0	                                 sete al	       355	sr_ioctl.c	ELSE_3	FUNCTION_9	IF_1
0x4000871	           0xfb6c0	                           movzx eax, al	       355	sr_ioctl.c	ELSE_3	FUNCTION_9	IF_1
0x4000874	            0xebdc	                           jmp 0x4000852	       355	sr_ioctl.c	ELSE_3	FUNCTION_9	IF_1
0x4000876	      0xb864000000	                           mov eax, 0x64	       368	sr_ioctl.c	ELSE_3	FUNCTION_9	IF_4
0x400087b	            0xebd5	                           jmp 0x4000852	       368	sr_ioctl.c	ELSE_3	FUNCTION_9	IF_4
0x400087d	    0x410fb6442428	           movzx eax, byte [r12 + 0x28] 	       370	sr_ioctl.c	ELSE_3	FUNCTION_9	IF_5
0x4000883	          0x83e004	                              and eax, 4	       370	sr_ioctl.c	ELSE_3	FUNCTION_9	IF_5
0x4000886	            0x3c01	                               cmp al, 1	       373	sr_ioctl.c	ELSE_3	FUNCTION_9	ELSE_1
0x4000888	            0x19c0	                            sbb eax, eax	       373	sr_ioctl.c	ELSE_3	FUNCTION_9	ELSE_1
0x400088a	          0x83e0fe	                     and eax, 0xfffffffe	       373	sr_ioctl.c	ELSE_3	FUNCTION_9	ELSE_1
0x400088d	          0x83c067	                           add eax, 0x67	       373	sr_ioctl.c	ELSE_3	FUNCTION_9	ELSE_1
0x4000890	            0xebc0	                           jmp 0x4000852	       373	sr_ioctl.c	ELSE_3	FUNCTION_9	ELSE_1
0x4000892	      0xe800000000	                          call 0x4000897	       374	sr_ioctl.c	ELSE_3	FUNCTION_9	ELSE_1
