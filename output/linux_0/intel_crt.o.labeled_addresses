pch_crt_compute_config	CALL,0:functions,0:WHILE,0:SWITCH,0:ELSE,0:IF,0:FOR,0:DO,0	3
0x40001f0	    0xc68638020000	               mov byte [rsi + 0x238], 1	       347	intel_crt.c	FUNCTION_19
0x40001f7	      0xb801000000	                              mov eax, 1	       350	intel_crt.c	FUNCTION_19
0x40001fc	              0xc3	                                     ret	       350	intel_crt.c	FUNCTION_19
hsw_disable_crt	CALL,3:functions,0:WHILE,0:SWITCH,0:ELSE,0:IF,0:FOR,0:DO,0	18
0x4000450	              0x53	                                push rbx	       221	intel_crt.c	FUNCTION_11
0x4000451	    0x80be38020000	               cmp byte [rsi + 0x238], 0	       224	intel_crt.c	FUNCTION_11	CALL_2
0x4000458	          0x488b1f	                    mov rbx, qword [rdi]	       222	intel_crt.c	FUNCTION_11	CALL_1
0x400045b	            0x740d	                            je 0x400046a	       224	intel_crt.c	FUNCTION_11	CALL_2
0x400045d	          0x4889df	                            mov rdi, rbx	       226	intel_crt.c	FUNCTION_11	CALL_3
0x4000460	            0x31d2	                            xor edx, edx	       226	intel_crt.c	FUNCTION_11	CALL_3
0x4000462	            0x31f6	                            xor esi, esi	       226	intel_crt.c	FUNCTION_11	CALL_3
0x4000464	              0x5b	                                 pop rbx	       227	intel_crt.c	FUNCTION_11
0x4000465	      0xe900000000	                           jmp 0x400046a	       226	intel_crt.c	FUNCTION_11	CALL_3
0x400046a	    0x48c7c6000000	                              mov rsi, 0	       224	intel_crt.c	FUNCTION_11	CALL_2
0x4000471	    0x48c7c7000000	                              mov rdi, 0	       224	intel_crt.c	FUNCTION_11	CALL_2
0x4000478	      0xe800000000	                          call 0x400047d	       224	intel_crt.c	FUNCTION_11	CALL_2
0x400047d	             0xf0b	                                     ud2	       224	intel_crt.c	FUNCTION_11	CALL_2
0x400047f	          0x4889df	                            mov rdi, rbx	       226	intel_crt.c	FUNCTION_11	CALL_3
0x4000482	            0x31d2	                            xor edx, edx	       226	intel_crt.c	FUNCTION_11	CALL_3
0x4000484	            0x31f6	                            xor esi, esi	       226	intel_crt.c	FUNCTION_11	CALL_3
0x4000486	              0x5b	                                 pop rbx	       227	intel_crt.c	FUNCTION_11
0x4000487	      0xe900000000	                           jmp 0x400048c	       226	intel_crt.c	FUNCTION_11	CALL_3
hsw_pre_pll_enable_crt	CALL,3:functions,0:WHILE,0:SWITCH,0:ELSE,0:IF,0:FOR,0:DO,0	18
0x4000490	              0x53	                                push rbx	       250	intel_crt.c	FUNCTION_13
0x4000491	    0x80be38020000	               cmp byte [rsi + 0x238], 0	       253	intel_crt.c	FUNCTION_13	CALL_2
0x4000498	          0x488b1f	                    mov rbx, qword [rdi]	       251	intel_crt.c	FUNCTION_13	CALL_1
0x400049b	            0x740d	                            je 0x40004aa	       253	intel_crt.c	FUNCTION_13	CALL_2
0x400049d	          0x4889df	                            mov rdi, rbx	       255	intel_crt.c	FUNCTION_13	CALL_3
0x40004a0	            0x31d2	                            xor edx, edx	       255	intel_crt.c	FUNCTION_13	CALL_3
0x40004a2	            0x31f6	                            xor esi, esi	       255	intel_crt.c	FUNCTION_13	CALL_3
0x40004a4	              0x5b	                                 pop rbx	       256	intel_crt.c	FUNCTION_13
0x40004a5	      0xe900000000	                           jmp 0x40004aa	       255	intel_crt.c	FUNCTION_13	CALL_3
0x40004aa	    0x48c7c6000000	                              mov rsi, 0	       253	intel_crt.c	FUNCTION_13	CALL_2
0x40004b1	    0x48c7c7000000	                              mov rdi, 0	       253	intel_crt.c	FUNCTION_13	CALL_2
0x40004b8	      0xe800000000	                          call 0x40004bd	       253	intel_crt.c	FUNCTION_13	CALL_2
0x40004bd	             0xf0b	                                     ud2	       253	intel_crt.c	FUNCTION_13	CALL_2
0x40004bf	          0x4889df	                            mov rdi, rbx	       255	intel_crt.c	FUNCTION_13	CALL_3
0x40004c2	            0x31d2	                            xor edx, edx	       255	intel_crt.c	FUNCTION_13	CALL_3
0x40004c4	            0x31f6	                            xor esi, esi	       255	intel_crt.c	FUNCTION_13	CALL_3
0x40004c6	              0x5b	                                 pop rbx	       256	intel_crt.c	FUNCTION_13
0x40004c7	      0xe900000000	                           jmp 0x40004cc	       255	intel_crt.c	FUNCTION_13	CALL_3
intel_crt_destroy	CALL,2:functions,0:WHILE,0:SWITCH,0:ELSE,0:IF,0:FOR,0:DO,0	6
0x4000620	              0x53	                                push rbx	       814	intel_crt.c	FUNCTION_30
0x4000621	          0x4889fb	                            mov rbx, rdi	       814	intel_crt.c	FUNCTION_30
0x4000624	      0xe800000000	                          call 0x4000629	       815	intel_crt.c	FUNCTION_30	CALL_1
0x4000629	          0x4889df	                            mov rdi, rbx	       816	intel_crt.c	FUNCTION_30	CALL_2
0x400062c	              0x5b	                                 pop rbx	       817	intel_crt.c	FUNCTION_30
0x400062d	      0xe900000000	                           jmp 0x4000632	       816	intel_crt.c	FUNCTION_30	CALL_2
intel_enable_crt	CALL,1:functions,0:WHILE,0:SWITCH,0:ELSE,0:IF,0:FOR,0:DO,0	2
0x40001d0	            0x31d2	                            xor edx, edx	       295	intel_crt.c	FUNCTION_16	CALL_1
0x40001d2	      0xe9c9feffff	              jmp sym.intel_crt_set_dpms	       295	intel_crt.c	FUNCTION_16	CALL_1
intel_crt_mode_valid	CALL,7:functions,0:WHILE,0:SWITCH,0:ELSE,3:IF,7:FOR,0:DO,0	39
0x40002b0	          0x8b4e58	            mov ecx, dword [rsi + 0x58] 	       307	intel_crt.c	FUNCTION_17	IF_1
0x40002b3	      0xb810000000	                           mov eax, 0x10	       308	intel_crt.c	FUNCTION_17	IF_1
0x40002b8	    0x81f9a7610000	                         cmp ecx, 0x61a7	       307	intel_crt.c	FUNCTION_17	IF_1
0x40002be	            0x7f02	                            jg 0x40002c2	       307	intel_crt.c	FUNCTION_17	IF_1
0x40002c0	            0xf3c3	                                     ret	       334	intel_crt.c	FUNCTION_17
0x40002c2	          0x488b07	                    mov rax, qword [rdi]	       302	intel_crt.c	FUNCTION_17
0x40002c5	    0x83b8f8550000	            cmp dword [rax + 0x55f8], 3 	       310	intel_crt.c	FUNCTION_17	IF_2	CALL_2
0x40002cc	    0x8bb0d8540000	          mov esi, dword [rax + 0x54d8] 	       304	intel_crt.c	FUNCTION_17
0x40002d2	            0x743e	                            je 0x4000312	       310	intel_crt.c	FUNCTION_17	IF_2	CALL_2
0x40002d4	    0xf68066060000	              test byte [rax + 0x666], 4	       312	intel_crt.c	FUNCTION_17	ELSE_1	IF_3	CALL_3
0x40002db	      0xbab01e0400	                        mov edx, 0x41eb0	       317	intel_crt.c	FUNCTION_17	ELSE_1	IF_3
0x40002e0	            0x740e	                            je 0x40002f0	       312	intel_crt.c	FUNCTION_17	ELSE_1	IF_3	CALL_3
0x40002e2	            0x39ce	                            cmp esi, ecx	       325	intel_crt.c	FUNCTION_17	IF_6
0x40002e4	            0x7c04	                            jl 0x40002ea	       325	intel_crt.c	FUNCTION_17	IF_6
0x40002e6	            0x39d1	                            cmp ecx, edx	       325	intel_crt.c	FUNCTION_17	IF_6
0x40002e8	            0x7e4a	                           jle 0x4000334	       325	intel_crt.c	FUNCTION_17	IF_6
0x40002ea	      0xb80f000000	                            mov eax, 0xf	       326	intel_crt.c	FUNCTION_17	IF_6
0x40002ef	              0xc3	                                     ret	       326	intel_crt.c	FUNCTION_17	IF_6
0x40002f0	     0xfb7805a0600	          movzx eax, word [rax + 0x65a] 	       318	intel_crt.c	FUNCTION_17	ELSE_2	IF_4	CALL_5
0x40002f7	          0x83e00c	                            and eax, 0xc	       318	intel_crt.c	FUNCTION_17	ELSE_2	IF_4	CALL_5
0x40002fa	        0x6683f801	                               cmp ax, 1	       321	intel_crt.c	FUNCTION_17	ELSE_3
0x40002fe	            0x19d2	                            sbb edx, edx	       321	intel_crt.c	FUNCTION_17	ELSE_3
0x4000300	    0x81e2b03cffff	                     and edx, 0xffff3cb0	       321	intel_crt.c	FUNCTION_17	ELSE_3
0x4000306	    0x81c2801a0600	                        add edx, 0x61a80	       321	intel_crt.c	FUNCTION_17	ELSE_3
0x400030c	            0x39ce	                            cmp esi, ecx	       325	intel_crt.c	FUNCTION_17	IF_6
0x400030e	            0x7dd6	                           jge 0x40002e6	       325	intel_crt.c	FUNCTION_17	IF_6
0x4000310	            0xebd8	                           jmp 0x40002ea	       325	intel_crt.c	FUNCTION_17	IF_6
0x4000312	            0x39ce	                            cmp esi, ecx	       325	intel_crt.c	FUNCTION_17	IF_6
0x4000314	            0x7cd4	                            jl 0x40002ea	       325	intel_crt.c	FUNCTION_17	IF_6
0x4000316	    0x81f920bf0200	                        cmp ecx, 0x2bf20	       325	intel_crt.c	FUNCTION_17	IF_6
0x400031c	            0x7fcc	                            jg 0x40002ea	       325	intel_crt.c	FUNCTION_17	IF_6
0x400031e	      0xba18000000	                           mov edx, 0x18	       330	intel_crt.c	FUNCTION_17	IF_7	CALL_7
0x4000323	      0xbeb01e0400	                        mov esi, 0x41eb0	       330	intel_crt.c	FUNCTION_17	IF_7	CALL_7
0x4000328	            0x89cf	                            mov edi, ecx	       330	intel_crt.c	FUNCTION_17	IF_7	CALL_7
0x400032a	      0xe800000000	                          call 0x400032f	       330	intel_crt.c	FUNCTION_17	IF_7	CALL_7
0x400032f	          0x83f802	                              cmp eax, 2	       329	intel_crt.c	FUNCTION_17	IF_7	CALL_6
0x4000332	            0x7fb6	                            jg 0x40002ea	       329	intel_crt.c	FUNCTION_17	IF_7	CALL_6
0x4000334	            0x31c0	                            xor eax, eax	       333	intel_crt.c	FUNCTION_17
0x4000336	              0xc3	                                     ret	       333	intel_crt.c	FUNCTION_17
intel_crt_reset	CALL,8:functions,0:WHILE,0:SWITCH,0:ELSE,0:IF,1:FOR,0:DO,0	35
0x4000220	            0x4154	                                push r12	       846	intel_crt.c	FUNCTION_32
0x4000222	              0x55	                                push rbp	       846	intel_crt.c	FUNCTION_32
0x4000223	              0x53	                                push rbx	       846	intel_crt.c	FUNCTION_32
0x4000224	          0x488b2f	                    mov rbp, qword [rdi]	       847	intel_crt.c	FUNCTION_32	CALL_1
0x4000227	    0x80bd5c060000	               cmp byte [rbp + 0x65c], 4	       850	intel_crt.c	FUNCTION_32	IF_1	CALL_4
0x400022e	            0x767b	                           jbe 0x40002ab	       850	intel_crt.c	FUNCTION_32	IF_1	CALL_4
0x4000230	          0x4889fb	                            mov rbx, rdi	       850	intel_crt.c	FUNCTION_32	IF_1	CALL_4
0x4000233	    0x8bb70c010000	           mov esi, dword [rdi + 0x10c] 	       853	intel_crt.c	FUNCTION_32	IF_1	CALL_5
0x4000239	      0xba01000000	                              mov edx, 1	       853	intel_crt.c	FUNCTION_32	IF_1	CALL_5
0x400023e	          0x4889ef	                            mov rdi, rbp	       853	intel_crt.c	FUNCTION_32	IF_1	CALL_5
0x4000241	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	       853	intel_crt.c	FUNCTION_32	IF_1	CALL_5
0x4000248	      0xe800000000	                          call 0x400024d	       853	intel_crt.c	FUNCTION_32	IF_1	CALL_5
0x400024d	      0x25ffff00fc	                     and eax, 0xfc00ffff	       854	intel_crt.c	FUNCTION_32	IF_1
0x4000252	      0xb901000000	                              mov ecx, 1	       856	intel_crt.c	FUNCTION_32	IF_1	CALL_6
0x4000257	    0x8bb30c010000	           mov esi, dword [rbx + 0x10c] 	       856	intel_crt.c	FUNCTION_32	IF_1	CALL_6
0x400025d	          0x4189c4	                           mov r12d, eax	       854	intel_crt.c	FUNCTION_32	IF_1
0x4000260	          0x4889ef	                            mov rdi, rbp	       856	intel_crt.c	FUNCTION_32	IF_1	CALL_6
0x4000263	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	       856	intel_crt.c	FUNCTION_32	IF_1	CALL_6
0x400026a	    0x4181cc0000f4	                       or r12d, 0xf40000	       855	intel_crt.c	FUNCTION_32	IF_1
0x4000271	          0x4489e2	                           mov edx, r12d	       856	intel_crt.c	FUNCTION_32	IF_1	CALL_6
0x4000274	      0xe800000000	                          call 0x4000279	       856	intel_crt.c	FUNCTION_32	IF_1	CALL_6
0x4000279	    0x8bb30c010000	           mov esi, dword [rbx + 0x10c] 	       857	intel_crt.c	FUNCTION_32	IF_1	CALL_7
0x400027f	            0x31d2	                            xor edx, edx	       857	intel_crt.c	FUNCTION_32	IF_1	CALL_7
0x4000281	          0x4889ef	                            mov rdi, rbp	       857	intel_crt.c	FUNCTION_32	IF_1	CALL_7
0x4000284	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	       857	intel_crt.c	FUNCTION_32	IF_1	CALL_7
0x400028b	      0xe800000000	                          call 0x4000290	       857	intel_crt.c	FUNCTION_32	IF_1	CALL_7
0x4000290	          0x4489e2	                           mov edx, r12d	       859	intel_crt.c	FUNCTION_32	IF_1	CALL_8
0x4000293	    0x48c7c6000000	                              mov rsi, 0	       859	intel_crt.c	FUNCTION_32	IF_1	CALL_8
0x400029a	      0xbf04000000	                              mov edi, 4	       859	intel_crt.c	FUNCTION_32	IF_1	CALL_8
0x400029f	      0xe800000000	                          call 0x40002a4	       859	intel_crt.c	FUNCTION_32	IF_1	CALL_8
0x40002a4	    0xc68308010000	               mov byte [rbx + 0x108], 1	       860	intel_crt.c	FUNCTION_32	IF_1
0x40002ab	              0x5b	                                 pop rbx	       863	intel_crt.c	FUNCTION_32
0x40002ac	              0x5d	                                 pop rbp	       863	intel_crt.c	FUNCTION_32
0x40002ad	            0x415c	                                 pop r12	       863	intel_crt.c	FUNCTION_32
0x40002af	              0xc3	                                     ret	       863	intel_crt.c	FUNCTION_32
intel_crt_set_dpms	CALL,11:functions,0:WHILE,0:SWITCH,1:ELSE,4:IF,7:FOR,0:DO,0	75
0x40000a0	            0x4155	                                push r13	       150	intel_crt.c	FUNCTION_7
0x40000a2	            0x4154	                                push r12	       150	intel_crt.c	FUNCTION_7
0x40000a4	          0x4189d4	                           mov r12d, edx	       150	intel_crt.c	FUNCTION_7
0x40000a7	              0x55	                                push rbp	       150	intel_crt.c	FUNCTION_7
0x40000a8	              0x53	                                push rbx	       150	intel_crt.c	FUNCTION_7
0x40000a9	          0x4989fd	                            mov r13, rdi	       150	intel_crt.c	FUNCTION_7
0x40000ac	          0x488b2f	                    mov rbp, qword [rdi]	       151	intel_crt.c	FUNCTION_7	CALL_1
0x40000af	    0x8b869c000000	            mov eax, dword [rsi + 0x9c] 	       162	intel_crt.c	FUNCTION_7	IF_2
0x40000b5	    0x80bd5c060000	               cmp byte [rbp + 0x65c], 5	       158	intel_crt.c	FUNCTION_7	IF_1
0x40000bc	            0x19db	                            sbb ebx, ebx	       158	intel_crt.c	FUNCTION_7	IF_1
0x40000be	            0xf7d3	                                 not ebx	       158	intel_crt.c	FUNCTION_7	IF_1
0x40000c0	    0x81e30000f400	                       and ebx, 0xf40000	       158	intel_crt.c	FUNCTION_7	IF_1
0x40000c6	            0x89da	                            mov edx, ebx	       163	intel_crt.c	FUNCTION_7	IF_2
0x40000c8	          0x83ca08	                               or edx, 8	       163	intel_crt.c	FUNCTION_7	IF_2
0x40000cb	            0xa801	                              test al, 1	       163	intel_crt.c	FUNCTION_7	IF_2
0x40000cd	           0xf45da	                         cmovne ebx, edx	       163	intel_crt.c	FUNCTION_7	IF_2
0x40000d0	            0x89da	                            mov edx, ebx	       165	intel_crt.c	FUNCTION_7	IF_3
0x40000d2	          0x83ca10	                            or edx, 0x10	       165	intel_crt.c	FUNCTION_7	IF_3
0x40000d5	            0xa804	                              test al, 4	       165	intel_crt.c	FUNCTION_7	IF_3
0x40000d7	    0x8b85f8550000	          mov eax, dword [rbp + 0x55f8] 	       168	intel_crt.c	FUNCTION_7	IF_4	CALL_5
0x40000dd	           0xf45da	                         cmovne ebx, edx	       165	intel_crt.c	FUNCTION_7	IF_3
0x40000e0	          0x83f803	                              cmp eax, 3	       168	intel_crt.c	FUNCTION_7	IF_4	CALL_5
0x40000e3	            0x7454	                            je 0x4000139	       168	intel_crt.c	FUNCTION_7	IF_4	CALL_5
0x40000e5	          0x83f802	                              cmp eax, 2	       170	intel_crt.c	FUNCTION_7	ELSE_2	IF_5	CALL_6
0x40000e8	          0x488b16	                    mov rdx, qword [rsi]	       153	intel_crt.c	FUNCTION_7	CALL_3
0x40000eb	     0xf849c000000	                            je 0x400018d	       170	intel_crt.c	FUNCTION_7	ELSE_2	IF_5	CALL_6
0x40000f1	    0x486392b00400	        movsxd rdx, dword [rdx + 0x4b0] 	       172	intel_crt.c	FUNCTION_7	ELSE_3	IF_6
0x40000f8	            0x89d9	                            mov ecx, ebx	       175	intel_crt.c	FUNCTION_7	ELSE_4
0x40000fa	    0x81c900000040	                      or ecx, 0x40000000	       175	intel_crt.c	FUNCTION_7	ELSE_4
0x4000100	            0x85d2	                           test edx, edx	       175	intel_crt.c	FUNCTION_7	ELSE_4
0x4000102	           0xf45d9	                         cmovne ebx, ecx	       175	intel_crt.c	FUNCTION_7	ELSE_4
0x4000105	            0x85c0	                           test eax, eax	       177	intel_crt.c	FUNCTION_7	IF_7	CALL_8
0x4000107	            0x7530	                           jne 0x4000139	       177	intel_crt.c	FUNCTION_7	IF_7	CALL_8
0x4000109	    0x8b8495980600	   mov eax, dword [rbp + rdx*4 + 0x698] 	       178	intel_crt.c	FUNCTION_7	CALL_10
0x4000110	    0x2b8598060000	            sub eax, dword [rbp + 0x698]	       178	intel_crt.c	FUNCTION_7	CALL_10
0x4000116	      0xb901000000	                              mov ecx, 1	       178	intel_crt.c	FUNCTION_7	CALL_10
0x400011b	    0x8b956c060000	           mov edx, dword [rbp + 0x66c] 	       178	intel_crt.c	FUNCTION_7	CALL_10
0x4000121	    0x4c8b85180800	            mov r8, qword [rbp + 0x818] 	       178	intel_crt.c	FUNCTION_7	CALL_10
0x4000128	          0x4889ef	                            mov rdi, rbp	       178	intel_crt.c	FUNCTION_7	CALL_10
0x400012b	    0x8db410200006	          lea esi, [rax + rdx + 0x60020]	       178	intel_crt.c	FUNCTION_7	CALL_10
0x4000132	            0x31d2	                            xor edx, edx	       178	intel_crt.c	FUNCTION_7	CALL_10
0x4000134	      0xe800000000	                          call 0x4000139	       178	intel_crt.c	FUNCTION_7	CALL_10
0x4000139	        0x4183fc01	                             cmp r12d, 1	       180	intel_crt.c	FUNCTION_7	SWITCH_1
0x400013d	            0x745f	                            je 0x400019e	       180	intel_crt.c	FUNCTION_7	SWITCH_1
0x400013f	            0x7e3d	                           jle 0x400017e	       180	intel_crt.c	FUNCTION_7	SWITCH_1
0x4000141	        0x4183fc02	                             cmp r12d, 2	       180	intel_crt.c	FUNCTION_7	SWITCH_1
0x4000145	            0x742f	                            je 0x4000176	       180	intel_crt.c	FUNCTION_7	SWITCH_1
0x4000147	            0x89d8	                            mov eax, ebx	       191	intel_crt.c	FUNCTION_7	SWITCH_1
0x4000149	          0x80cc0c	                              or ah, 0xc	       191	intel_crt.c	FUNCTION_7	SWITCH_1
0x400014c	        0x4183fc03	                             cmp r12d, 3	       191	intel_crt.c	FUNCTION_7	SWITCH_1
0x4000150	           0xf44d8	                          cmove ebx, eax	       191	intel_crt.c	FUNCTION_7	SWITCH_1
0x4000153	    0x418bb50c0100	           mov esi, dword [r13 + 0x10c] 	       195	intel_crt.c	FUNCTION_7	CALL_11
0x400015a	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	       195	intel_crt.c	FUNCTION_7	CALL_11
0x4000161	            0x89da	                            mov edx, ebx	       195	intel_crt.c	FUNCTION_7	CALL_11
0x4000163	          0x4889ef	                            mov rdi, rbp	       195	intel_crt.c	FUNCTION_7	CALL_11
0x4000166	      0xb901000000	                              mov ecx, 1	       195	intel_crt.c	FUNCTION_7	CALL_11
0x400016b	              0x5b	                                 pop rbx	       196	intel_crt.c	FUNCTION_7
0x400016c	              0x5d	                                 pop rbp	       196	intel_crt.c	FUNCTION_7
0x400016d	            0x415c	                                 pop r12	       196	intel_crt.c	FUNCTION_7
0x400016f	            0x415d	                                 pop r13	       196	intel_crt.c	FUNCTION_7
0x4000171	      0xe900000000	                           jmp 0x4000176	       195	intel_crt.c	FUNCTION_7	CALL_11
0x4000176	    0x81cb00040080	                      or ebx, 0x80000400	       188	intel_crt.c	FUNCTION_7	SWITCH_1
0x400017c	            0xebd5	                           jmp 0x4000153	       189	intel_crt.c	FUNCTION_7	SWITCH_1
0x400017e	            0x89d8	                            mov eax, ebx	       182	intel_crt.c	FUNCTION_7	SWITCH_1
0x4000180	       0xd00000080	                      or eax, 0x80000000	       182	intel_crt.c	FUNCTION_7	SWITCH_1
0x4000185	          0x4585e4	                         test r12d, r12d	       182	intel_crt.c	FUNCTION_7	SWITCH_1
0x4000188	           0xf44d8	                          cmove ebx, eax	       182	intel_crt.c	FUNCTION_7	SWITCH_1
0x400018b	            0xebc6	                           jmp 0x4000153	       182	intel_crt.c	FUNCTION_7	SWITCH_1
0x400018d	    0x8b82b0040000	           mov eax, dword [rdx + 0x4b0] 	       171	intel_crt.c	FUNCTION_7	ELSE_2	IF_5
0x4000193	          0xc1e01d	                           shl eax, 0x1d	       171	intel_crt.c	FUNCTION_7	ELSE_2	IF_5
0x4000196	             0x9c3	                             or ebx, eax	       171	intel_crt.c	FUNCTION_7	ELSE_2	IF_5
0x4000198	        0x4183fc01	                             cmp r12d, 1	       180	intel_crt.c	FUNCTION_7	SWITCH_1
0x400019c	            0x75a1	                           jne 0x400013f	       180	intel_crt.c	FUNCTION_7	SWITCH_1
0x400019e	    0x81cb00080080	                      or ebx, 0x80000800	       185	intel_crt.c	FUNCTION_7	SWITCH_1
0x40001a4	            0xebad	                           jmp 0x4000153	       186	intel_crt.c	FUNCTION_7	SWITCH_1
intel_crt_detect	CALL,18:functions,0:WHILE,0:SWITCH,0:ELSE,6:IF,11:FOR,0:DO,0	523
0x4000880	            0x4157	                                push r15	       740	intel_crt.c	FUNCTION_29
0x4000882	            0x4156	                                push r14	       740	intel_crt.c	FUNCTION_29
0x4000884	          0x4989fe	                            mov r14, rdi	       740	intel_crt.c	FUNCTION_29
0x4000887	            0x4155	                                push r13	       740	intel_crt.c	FUNCTION_29
0x4000889	            0x4154	                                push r12	       740	intel_crt.c	FUNCTION_29
0x400088b	              0x55	                                push rbp	       740	intel_crt.c	FUNCTION_29
0x400088c	              0x53	                                push rbx	       740	intel_crt.c	FUNCTION_29
0x400088d	            0x89d5	                            mov ebp, edx	       740	intel_crt.c	FUNCTION_29
0x400088f	        0x440fb6c5	                          movzx r8d, bpl	       747	intel_crt.c	FUNCTION_29	CALL_3
0x4000893	        0x4883ec48	                           sub rsp, 0x48	       740	intel_crt.c	FUNCTION_29
0x4000897	          0x8b5728	            mov edx, dword [rdi + 0x28] 	       747	intel_crt.c	FUNCTION_29	CALL_3
0x400089a	        0x488b4f48	            mov rcx, qword [rdi + 0x48] 	       747	intel_crt.c	FUNCTION_29	CALL_3
0x400089e	        0x48893424	                    mov qword [rsp], rsi	       740	intel_crt.c	FUNCTION_29
0x40008a2	          0x4c8b3f	                    mov r15, qword [rdi]	       741	intel_crt.c	FUNCTION_29	CALL_1
0x40008a5	    0x48c7c6000000	                              mov rsi, 0	       747	intel_crt.c	FUNCTION_29	CALL_3
0x40008ac	    0x4c8ba7200400	           mov r12, qword [rdi + 0x420] 	      1236	intel_drv.h	FUNCTION_39	CALL_1
0x40008b3	      0xbf04000000	                              mov edi, 4	       747	intel_crt.c	FUNCTION_29	CALL_3
0x40008b8	    0x65488b042528	                mov rax, qword gs:[0x28]	       740	intel_crt.c	FUNCTION_29
0x40008c1	      0x4889442440	             mov qword [rsp + 0x40], rax	       740	intel_crt.c	FUNCTION_29
0x40008c6	            0x31c0	                            xor eax, eax	       740	intel_crt.c	FUNCTION_29
0x40008c8	      0xe800000000	                          call 0x40008cd	       747	intel_crt.c	FUNCTION_29	CALL_3
0x40008cd	    0x48c7c7000000	                              mov rdi, 0	       752	intel_crt.c	FUNCTION_29	IF_1	CALL_4
0x40008d4	      0xe800000000	                          call 0x40008d9	       752	intel_crt.c	FUNCTION_29	IF_1	CALL_4
0x40008d9	            0x85c0	                           test eax, eax	       752	intel_crt.c	FUNCTION_29	IF_1	CALL_4
0x40008db	      0xba02000000	                              mov edx, 2	       752	intel_crt.c	FUNCTION_29	IF_1	CALL_4
0x40008e0	            0x7425	                            je 0x4000907	       752	intel_crt.c	FUNCTION_29	IF_1	CALL_4
0x40008e2	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	       811	intel_crt.c	FUNCTION_29
0x40008e7	    0x6548331c2528	                xor rbx, qword gs:[0x28]	       811	intel_crt.c	FUNCTION_29
0x40008f0	            0x89d0	                            mov eax, edx	       811	intel_crt.c	FUNCTION_29
0x40008f2	     0xf8545070000	                           jne 0x400103d	       811	intel_crt.c	FUNCTION_29
0x40008f8	        0x4883c448	                           add rsp, 0x48	       811	intel_crt.c	FUNCTION_29
0x40008fc	              0x5b	                                 pop rbx	       811	intel_crt.c	FUNCTION_29
0x40008fd	              0x5d	                                 pop rbp	       811	intel_crt.c	FUNCTION_29
0x40008fe	            0x415c	                                 pop r12	       811	intel_crt.c	FUNCTION_29
0x4000900	            0x415d	                                 pop r13	       811	intel_crt.c	FUNCTION_29
0x4000902	            0x415e	                                 pop r14	       811	intel_crt.c	FUNCTION_29
0x4000904	            0x415f	                                 pop r15	       811	intel_crt.c	FUNCTION_29
0x4000906	              0xc3	                                     ret	       811	intel_crt.c	FUNCTION_29
0x4000907	    0x418bb424f000	            mov esi, dword [r12 + 0xf0] 	       755	intel_crt.c	FUNCTION_29	CALL_5
0x400090f	          0x4c89ff	                            mov rdi, r15	       755	intel_crt.c	FUNCTION_29	CALL_5
0x4000912	      0xe800000000	                          call 0x4000917	       755	intel_crt.c	FUNCTION_29	CALL_5
0x4000917	    0x41f687790600	              test byte [r15 + 0x679], 1	       757	intel_crt.c	FUNCTION_29	IF_2	CALL_6
0x400091f	     0xf840f010000	                            je 0x4000a34	       757	intel_crt.c	FUNCTION_29	IF_2	CALL_6
0x4000925	          0x498b1e	                    mov rbx, qword [r14]	       479	intel_crt.c	FUNCTION_23
0x4000928	    0x8bbbf8550000	          mov edi, dword [rbx + 0x55f8] 	       485	intel_crt.c	FUNCTION_23	IF_1	CALL_2
0x400092e	            0x85ff	                           test edi, edi	       485	intel_crt.c	FUNCTION_23	IF_1	CALL_2
0x4000930	     0xf8578010000	                           jne 0x4000aae	       485	intel_crt.c	FUNCTION_23	IF_1	CALL_2
0x4000936	    0x8b8364060000	           mov eax, dword [rbx + 0x664] 	       488	intel_crt.c	FUNCTION_23	IF_2	CALL_4
0x400093c	      0xa900000400	                       test eax, 0x40000	       488	intel_crt.c	FUNCTION_23	IF_2	CALL_4
0x4000941	     0xf85bc010000	                           jne 0x4000b03	       488	intel_crt.c	FUNCTION_23	IF_2	CALL_4
0x4000947	          0xf6c460	                           test ah, 0x60	       496	intel_crt.c	FUNCTION_23	IF_3	CALL_7
0x400094a	      0xb901000000	                              mov ecx, 1	       499	intel_crt.c	FUNCTION_23	ELSE_1
0x400094f	     0xf8549010000	                           jne 0x4000a9e	       496	intel_crt.c	FUNCTION_23	IF_3	CALL_7
0x4000955	      0x4c897c2408	                mov qword [rsp + 8], r15	       501	intel_crt.c	FUNCTION_23	ELSE_1	FOR_1
0x400095a	          0x4531ed	                          xor r13d, r13d	       501	intel_crt.c	FUNCTION_23	ELSE_1	FOR_1
0x400095d	          0x4189cf	                           mov r15d, ecx	       501	intel_crt.c	FUNCTION_23	ELSE_1	FOR_1
0x4000960	            0xeb09	                           jmp 0x400096b	       501	intel_crt.c	FUNCTION_23	ELSE_1	FOR_1
0x4000962	        0x4183c501	                             add r13d, 1	       501	intel_crt.c	FUNCTION_23	ELSE_1	FOR_1
0x4000966	          0x4539fd	                          cmp r13d, r15d	       501	intel_crt.c	FUNCTION_23	ELSE_1	FOR_1
0x4000969	            0x7453	                            je 0x40009be	       501	intel_crt.c	FUNCTION_23	ELSE_1	FOR_1
0x400096b	      0xba08000000	                              mov edx, 8	       503	intel_crt.c	FUNCTION_23	ELSE_1	FOR_1	CALL_8
0x4000970	      0xbe08000000	                              mov esi, 8	       503	intel_crt.c	FUNCTION_23	ELSE_1	FOR_1	CALL_8
0x4000975	          0x4889df	                            mov rdi, rbx	       503	intel_crt.c	FUNCTION_23	ELSE_1	FOR_1	CALL_8
0x4000978	      0xe800000000	                          call 0x400097d	       503	intel_crt.c	FUNCTION_23	ELSE_1	FOR_1	CALL_8
0x400097d	    0x8b836c060000	           mov eax, dword [rbx + 0x66c] 	       503	intel_crt.c	FUNCTION_23	ELSE_1	FOR_1	CALL_8
0x4000983	            0x6a00	                                  push 0	       191	intel_uncore.h	FUNCTION_73	CALL_1
0x4000985	            0x31c9	                            xor ecx, ecx	       191	intel_uncore.h	FUNCTION_73	CALL_1
0x4000987	      0xba08000000	                              mov edx, 8	       191	intel_uncore.h	FUNCTION_73	CALL_1
0x400098c	    0x41b9e8030000	                          mov r9d, 0x3e8	       191	intel_uncore.h	FUNCTION_73	CALL_1
0x4000992	    0x41b802000000	                              mov r8d, 2	       191	intel_uncore.h	FUNCTION_73	CALL_1
0x4000998	          0x4889df	                            mov rdi, rbx	       191	intel_uncore.h	FUNCTION_73	CALL_1
0x400099b	    0x8db010110600	                lea esi, [rax + 0x61110]	       191	intel_uncore.h	FUNCTION_73	CALL_1
0x40009a1	      0xe800000000	                          call 0x40009a6	       191	intel_uncore.h	FUNCTION_73	CALL_1
0x40009a6	            0x85c0	                           test eax, eax	       507	intel_crt.c	FUNCTION_23	ELSE_1	FOR_1	IF_4	CALL_9
0x40009a8	              0x5a	                                 pop rdx	       507	intel_crt.c	FUNCTION_23	ELSE_1	FOR_1	IF_4	CALL_9
0x40009a9	            0x74b7	                            je 0x4000962	       507	intel_crt.c	FUNCTION_23	ELSE_1	FOR_1	IF_4	CALL_9
0x40009ab	    0x48c7c6000000	                              mov rsi, 0	       510	intel_crt.c	FUNCTION_23	ELSE_1	FOR_1	CALL_10
0x40009b2	      0xbf04000000	                              mov edi, 4	       510	intel_crt.c	FUNCTION_23	ELSE_1	FOR_1	CALL_10
0x40009b7	      0xe800000000	                          call 0x40009bc	       510	intel_crt.c	FUNCTION_23	ELSE_1	FOR_1	CALL_10
0x40009bc	            0xeba4	                           jmp 0x4000962	       510	intel_crt.c	FUNCTION_23	ELSE_1	FOR_1	CALL_10
0x40009be	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	       513	intel_crt.c	FUNCTION_23	CALL_11
0x40009c4	      0xba01000000	                              mov edx, 1	       513	intel_crt.c	FUNCTION_23	CALL_11
0x40009c9	          0x4889df	                            mov rdi, rbx	       513	intel_crt.c	FUNCTION_23	CALL_11
0x40009cc	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	       513	intel_crt.c	FUNCTION_23	CALL_11
0x40009d1	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       513	intel_crt.c	FUNCTION_23	CALL_11
0x40009d8	    0x8db114110600	                lea esi, [rcx + 0x61114]	       513	intel_crt.c	FUNCTION_23	CALL_11
0x40009de	      0xe800000000	                          call 0x40009e3	       513	intel_crt.c	FUNCTION_23	CALL_11
0x40009e3	    0x8b8b6c060000	           mov ecx, dword [rbx + 0x66c] 	       518	intel_crt.c	FUNCTION_23	CALL_12
0x40009e9	          0xf6c403	                              test ah, 3	       514	intel_crt.c	FUNCTION_23	IF_5
0x40009ec	      0xba00080000	                          mov edx, 0x800	       518	intel_crt.c	FUNCTION_23	CALL_12
0x40009f1	        0x410f95c5	                              setne r13b	       514	intel_crt.c	FUNCTION_23	IF_5
0x40009f5	          0x4889df	                            mov rdi, rbx	       518	intel_crt.c	FUNCTION_23	CALL_12
0x40009f8	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       518	intel_crt.c	FUNCTION_23	CALL_12
0x40009ff	    0x8db114110600	                lea esi, [rcx + 0x61114]	       518	intel_crt.c	FUNCTION_23	CALL_12
0x4000a05	      0xb901000000	                              mov ecx, 1	       518	intel_crt.c	FUNCTION_23	CALL_12
0x4000a0a	      0xe800000000	                          call 0x4000a0f	       518	intel_crt.c	FUNCTION_23	CALL_12
0x4000a0f	            0x31d2	                            xor edx, edx	       520	intel_crt.c	FUNCTION_23	CALL_13
0x4000a11	      0xbe08000000	                              mov esi, 8	       520	intel_crt.c	FUNCTION_23	CALL_13
0x4000a16	          0x4889df	                            mov rdi, rbx	       520	intel_crt.c	FUNCTION_23	CALL_13
0x4000a19	      0xe800000000	                          call 0x4000a1e	       520	intel_crt.c	FUNCTION_23	CALL_13
0x4000a1e	          0x4584ed	                         test r13b, r13b	       762	intel_crt.c	FUNCTION_29	IF_2	IF_3	CALL_7
0x4000a21	            0x7553	                           jne 0x4000a76	       762	intel_crt.c	FUNCTION_29	IF_2	IF_3	CALL_7
0x4000a23	    0x48c7c6000000	                              mov rsi, 0	       767	intel_crt.c	FUNCTION_29	IF_2	CALL_9
0x4000a2a	      0xbf04000000	                              mov edi, 4	       767	intel_crt.c	FUNCTION_29	IF_2	CALL_9
0x4000a2f	      0xe800000000	                          call 0x4000a34	       767	intel_crt.c	FUNCTION_29	IF_2	CALL_9
0x4000a34	          0x4c89f7	                            mov rdi, r14	       770	intel_crt.c	FUNCTION_29	IF_4	CALL_10
0x4000a37	      0xbb01000000	                              mov ebx, 1	       771	intel_crt.c	FUNCTION_29	IF_4
0x4000a3c	      0xe89ffdffff	           call sym.intel_crt_detect_ddc	       770	intel_crt.c	FUNCTION_29	IF_4	CALL_10
0x4000a41	            0x84c0	                             test al, al	       770	intel_crt.c	FUNCTION_29	IF_4	CALL_10
0x4000a43	            0x751a	                           jne 0x4000a5f	       770	intel_crt.c	FUNCTION_29	IF_4	CALL_10
0x4000a45	    0x41f687790600	              test byte [r15 + 0x679], 1	       779	intel_crt.c	FUNCTION_29	IF_5	CALL_11
0x4000a4d	            0x753f	                           jne 0x4000a8e	       779	intel_crt.c	FUNCTION_29	IF_5	CALL_11
0x4000a4f	          0x4084ed	                           test bpl, bpl	       784	intel_crt.c	FUNCTION_29	IF_6
0x4000a52	     0xf85b7010000	                           jne 0x4000c0f	       784	intel_crt.c	FUNCTION_29	IF_6
0x4000a58	    0x418b9e980000	            mov ebx, dword [r14 + 0x98] 	       785	intel_crt.c	FUNCTION_29	IF_6
0x4000a5f	    0x418bb424f000	            mov esi, dword [r12 + 0xf0] 	       809	intel_crt.c	FUNCTION_29	CALL_18
0x4000a67	          0x4c89ff	                            mov rdi, r15	       809	intel_crt.c	FUNCTION_29	CALL_18
0x4000a6a	      0xe800000000	                          call 0x4000a6f	       809	intel_crt.c	FUNCTION_29	CALL_18
0x4000a6f	            0x89da	                            mov edx, ebx	       810	intel_crt.c	FUNCTION_29
0x4000a71	      0xe96cfeffff	                           jmp 0x40008e2	       810	intel_crt.c	FUNCTION_29
0x4000a76	    0x48c7c6000000	                              mov rsi, 0	       763	intel_crt.c	FUNCTION_29	IF_2	IF_3	CALL_8
0x4000a7d	      0xbf04000000	                              mov edi, 4	       763	intel_crt.c	FUNCTION_29	IF_2	IF_3	CALL_8
0x4000a82	      0xbb01000000	                              mov ebx, 1	       764	intel_crt.c	FUNCTION_29	IF_2	IF_3
0x4000a87	      0xe800000000	                          call 0x4000a8c	       763	intel_crt.c	FUNCTION_29	IF_2	IF_3	CALL_8
0x4000a8c	            0xebd1	                           jmp 0x4000a5f	       765	intel_crt.c	FUNCTION_29	IF_2	IF_3
0x4000a8e	    0x803d00000000	                cmp byte [0x04000a95], 0	       779	intel_crt.c	FUNCTION_29	IF_5	CALL_11
0x4000a95	      0xbb02000000	                              mov ebx, 2	       780	intel_crt.c	FUNCTION_29	IF_5
0x4000a9a	            0x74c3	                            je 0x4000a5f	       779	intel_crt.c	FUNCTION_29	IF_5	CALL_11
0x4000a9c	            0xebb1	                           jmp 0x4000a4f	       779	intel_crt.c	FUNCTION_29	IF_5	CALL_11
0x4000a9e	          0xc1e011	                           shl eax, 0x11	       497	intel_crt.c	FUNCTION_23	IF_3
0x4000aa1	          0xc1f81f	                           sar eax, 0x1f	       497	intel_crt.c	FUNCTION_23	IF_3
0x4000aa4	          0x83c002	                              add eax, 2	       497	intel_crt.c	FUNCTION_23	IF_3
0x4000aa7	            0x89c1	                            mov ecx, eax	       497	intel_crt.c	FUNCTION_23	IF_3
0x4000aa9	      0xe9a7feffff	                           jmp 0x4000955	       497	intel_crt.c	FUNCTION_23	IF_3
0x4000aae	    0x4d8bae200400	           mov r13, qword [r14 + 0x420] 	      1236	intel_drv.h	FUNCTION_39	CALL_1
0x4000ab5	    0x4180bd080100	               cmp byte [r13 + 0x108], 0	       385	intel_crt.c	FUNCTION_21	IF_1
0x4000abd	     0xf85dd010000	                           jne 0x4000ca0	       385	intel_crt.c	FUNCTION_21	IF_1
0x4000ac3	    0x418bb50c0100	           mov esi, dword [r13 + 0x10c] 	       413	intel_crt.c	FUNCTION_21	CALL_11
0x4000aca	          0x4889df	                            mov rdi, rbx	       413	intel_crt.c	FUNCTION_21	CALL_11
0x4000acd	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       413	intel_crt.c	FUNCTION_21	CALL_11
0x4000ad4	      0xba01000000	                              mov edx, 1	       413	intel_crt.c	FUNCTION_21	CALL_11
0x4000ad9	      0xe800000000	                          call 0x4000ade	       413	intel_crt.c	FUNCTION_21	CALL_11
0x4000ade	      0xa900000003	                     test eax, 0x3000000	       414	intel_crt.c	FUNCTION_21	IF_5
0x4000ae3	            0x89c2	                            mov edx, eax	       418	intel_crt.c	FUNCTION_21	CALL_12
0x4000ae5	    0x48c7c6000000	                              mov rsi, 0	       418	intel_crt.c	FUNCTION_21	CALL_12
0x4000aec	        0x410f95c5	                              setne r13b	       414	intel_crt.c	FUNCTION_21	IF_5
0x4000af0	      0xbf04000000	                              mov edi, 4	       418	intel_crt.c	FUNCTION_21	CALL_12
0x4000af5	        0x410fb6cd	                         movzx ecx, r13b	       418	intel_crt.c	FUNCTION_21	CALL_12
0x4000af9	      0xe800000000	                          call 0x4000afe	       418	intel_crt.c	FUNCTION_21	CALL_12
0x4000afe	      0xe91bffffff	                           jmp 0x4000a1e	       418	intel_crt.c	FUNCTION_21	CALL_12
0x4000b03	    0x4d8bae200400	           mov r13, qword [r14 + 0x420] 	      1236	intel_drv.h	FUNCTION_39	CALL_1
0x4000b0a	          0x4889df	                            mov rdi, rbx	       445	intel_crt.c	FUNCTION_22	CALL_3
0x4000b0d	    0x418bb5ec0000	            mov esi, dword [r13 + 0xec] 	       445	intel_crt.c	FUNCTION_22	CALL_3
0x4000b14	      0xe800000000	                          call 0x4000b19	       445	intel_crt.c	FUNCTION_22	CALL_3
0x4000b19	    0x418bb50c0100	           mov esi, dword [r13 + 0x10c] 	       447	intel_crt.c	FUNCTION_22	CALL_4
0x4000b20	        0x88442410	               mov byte [rsp + 0x10], al	       445	intel_crt.c	FUNCTION_22	CALL_3
0x4000b24	      0xba01000000	                              mov edx, 1	       447	intel_crt.c	FUNCTION_22	CALL_4
0x4000b29	          0x4889df	                            mov rdi, rbx	       447	intel_crt.c	FUNCTION_22	CALL_4
0x4000b2c	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       447	intel_crt.c	FUNCTION_22	CALL_4
0x4000b33	      0xe800000000	                          call 0x4000b38	       447	intel_crt.c	FUNCTION_22	CALL_4
0x4000b38	    0x48c7c6000000	                              mov rsi, 0	       448	intel_crt.c	FUNCTION_22	CALL_5
0x4000b3f	            0x89c2	                            mov edx, eax	       448	intel_crt.c	FUNCTION_22	CALL_5
0x4000b41	      0xbf04000000	                              mov edi, 4	       448	intel_crt.c	FUNCTION_22	CALL_5
0x4000b46	        0x89442408	                mov dword [rsp + 8], eax	       448	intel_crt.c	FUNCTION_22	CALL_5
0x4000b4a	      0xe800000000	                          call 0x4000b4f	       448	intel_crt.c	FUNCTION_22	CALL_5
0x4000b4f	        0x8b542408	                mov edx, dword [rsp + 8]	       452	intel_crt.c	FUNCTION_22	CALL_6
0x4000b53	    0x418bb50c0100	           mov esi, dword [r13 + 0x10c] 	       452	intel_crt.c	FUNCTION_22	CALL_6
0x4000b5a	      0xb901000000	                              mov ecx, 1	       452	intel_crt.c	FUNCTION_22	CALL_6
0x4000b5f	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       452	intel_crt.c	FUNCTION_22	CALL_6
0x4000b66	          0x4889df	                            mov rdi, rbx	       452	intel_crt.c	FUNCTION_22	CALL_6
0x4000b69	    0x81ca00000100	                         or edx, 0x10000	       452	intel_crt.c	FUNCTION_22	CALL_6
0x4000b6f	      0xe800000000	                          call 0x4000b74	       452	intel_crt.c	FUNCTION_22	CALL_6
0x4000b74	    0x418bb50c0100	           mov esi, dword [r13 + 0x10c] 	       452	intel_crt.c	FUNCTION_22	CALL_6
0x4000b7b	            0x6a00	                                  push 0	       191	intel_uncore.h	FUNCTION_73	CALL_1
0x4000b7d	            0x31c9	                            xor ecx, ecx	       191	intel_uncore.h	FUNCTION_73	CALL_1
0x4000b7f	    0x41b9e8030000	                          mov r9d, 0x3e8	       191	intel_uncore.h	FUNCTION_73	CALL_1
0x4000b85	    0x41b802000000	                              mov r8d, 2	       191	intel_uncore.h	FUNCTION_73	CALL_1
0x4000b8b	      0xba00000100	                        mov edx, 0x10000	       191	intel_uncore.h	FUNCTION_73	CALL_1
0x4000b90	          0x4889df	                            mov rdi, rbx	       191	intel_uncore.h	FUNCTION_73	CALL_1
0x4000b93	      0xe800000000	                          call 0x4000b98	       191	intel_uncore.h	FUNCTION_73	CALL_1
0x4000b98	            0x85c0	                           test eax, eax	       454	intel_crt.c	FUNCTION_22	IF_1	CALL_7
0x4000b9a	              0x59	                                 pop rcx	       454	intel_crt.c	FUNCTION_22	IF_1	CALL_7
0x4000b9b	     0xf85da010000	                           jne 0x4000d7b	       454	intel_crt.c	FUNCTION_22	IF_1	CALL_7
0x4000ba1	    0x418bb50c0100	           mov esi, dword [r13 + 0x10c] 	       463	intel_crt.c	FUNCTION_22	CALL_10
0x4000ba8	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       463	intel_crt.c	FUNCTION_22	CALL_10
0x4000baf	      0xba01000000	                              mov edx, 1	       463	intel_crt.c	FUNCTION_22	CALL_10
0x4000bb4	          0x4889df	                            mov rdi, rbx	       463	intel_crt.c	FUNCTION_22	CALL_10
0x4000bb7	      0xe800000000	                          call 0x4000bbc	       463	intel_crt.c	FUNCTION_22	CALL_10
0x4000bbc	      0xa900000003	                     test eax, 0x3000000	       464	intel_crt.c	FUNCTION_22	IF_2
0x4000bc1	     0xf84a5000000	                            je 0x4000c6c	       464	intel_crt.c	FUNCTION_22	IF_2
0x4000bc7	            0x89c2	                            mov edx, eax	       469	intel_crt.c	FUNCTION_22	CALL_11
0x4000bc9	      0xb901000000	                              mov ecx, 1	       469	intel_crt.c	FUNCTION_22	CALL_11
0x4000bce	    0x48c7c6000000	                              mov rsi, 0	       469	intel_crt.c	FUNCTION_22	CALL_11
0x4000bd5	      0xbf04000000	                              mov edi, 4	       469	intel_crt.c	FUNCTION_22	CALL_11
0x4000bda	      0xe800000000	                          call 0x4000bdf	       469	intel_crt.c	FUNCTION_22	CALL_11
0x4000bdf	      0x807c241000	                cmp byte [rsp + 0x10], 0	       471	intel_crt.c	FUNCTION_22	IF_3
0x4000be4	      0xb801000000	                              mov eax, 1	       465	intel_crt.c	FUNCTION_22	IF_2
0x4000be9	     0xf8487feffff	                            je 0x4000a76	       471	intel_crt.c	FUNCTION_22	IF_3
0x4000bef	    0x418bb5ec0000	            mov esi, dword [r13 + 0xec] 	       472	intel_crt.c	FUNCTION_22	CALL_12
0x4000bf6	          0x4889df	                            mov rdi, rbx	       472	intel_crt.c	FUNCTION_22	CALL_12
0x4000bf9	        0x88442408	                  mov byte [rsp + 8], al	       472	intel_crt.c	FUNCTION_22	CALL_12
0x4000bfd	      0xe800000000	                          call 0x4000c02	       472	intel_crt.c	FUNCTION_22	CALL_12
0x4000c02	       0xfb6442408	               movzx eax, byte [rsp + 8]	       472	intel_crt.c	FUNCTION_22	CALL_12
0x4000c07	          0x4189c5	                           mov r13d, eax	       472	intel_crt.c	FUNCTION_22	CALL_12
0x4000c0a	      0xe90ffeffff	                           jmp 0x4000a1e	       472	intel_crt.c	FUNCTION_22	CALL_12
0x4000c0f	        0x488b0c24	                    mov rcx, qword [rsp]	       790	intel_crt.c	FUNCTION_29	CALL_12
0x4000c13	      0x488d542438	                   lea rdx, [rsp + 0x38]	       790	intel_crt.c	FUNCTION_29	CALL_12
0x4000c18	            0x31f6	                            xor esi, esi	       790	intel_crt.c	FUNCTION_29	CALL_12
0x4000c1a	          0x4c89f7	                            mov rdi, r14	       790	intel_crt.c	FUNCTION_29	CALL_12
0x4000c1d	      0xe800000000	                          call 0x4000c22	       790	intel_crt.c	FUNCTION_29	CALL_12
0x4000c22	          0x83f800	                              cmp eax, 0	       791	intel_crt.c	FUNCTION_29	IF_7
0x4000c25	            0x89c3	                            mov ebx, eax	       790	intel_crt.c	FUNCTION_29	CALL_12
0x4000c27	            0x7e6a	                           jle 0x4000c93	       791	intel_crt.c	FUNCTION_29	IF_7
0x4000c29	          0x4c89f7	                            mov rdi, r14	       792	intel_crt.c	FUNCTION_29	IF_7	IF_8	CALL_13
0x4000c2c	      0xbb01000000	                              mov ebx, 1	       793	intel_crt.c	FUNCTION_29	IF_7	IF_8
0x4000c31	      0xe8aafbffff	           call sym.intel_crt_detect_ddc	       792	intel_crt.c	FUNCTION_29	IF_7	IF_8	CALL_13
0x4000c36	            0x84c0	                             test al, al	       792	intel_crt.c	FUNCTION_29	IF_7	IF_8	CALL_13
0x4000c38	            0x751c	                           jne 0x4000c56	       792	intel_crt.c	FUNCTION_29	IF_7	IF_8	CALL_13
0x4000c3a	    0x4180bf5c0600	               cmp byte [r15 + 0x65c], 3	       794	intel_crt.c	FUNCTION_29	IF_7	ELSE_2	IF_9	CALL_14
0x4000c42	     0xf8668010000	                           jbe 0x4000db0	       794	intel_crt.c	FUNCTION_29	IF_7	ELSE_2	IF_9	CALL_14
0x4000c48	    0x803d00000000	                cmp byte [0x04000c4f], 1	       800	intel_crt.c	FUNCTION_29	IF_7	ELSE_4
0x4000c4f	            0x19db	                            sbb ebx, ebx	       800	intel_crt.c	FUNCTION_29	IF_7	ELSE_4
0x4000c51	            0xf7d3	                                 not ebx	       800	intel_crt.c	FUNCTION_29	IF_7	ELSE_4
0x4000c53	          0x83c303	                              add ebx, 3	       800	intel_crt.c	FUNCTION_29	IF_7	ELSE_4
0x4000c56	        0x488b1424	                    mov rdx, qword [rsp]	       801	intel_crt.c	FUNCTION_29	IF_7	CALL_17
0x4000c5a	      0x488d742438	                   lea rsi, [rsp + 0x38]	       801	intel_crt.c	FUNCTION_29	IF_7	CALL_17
0x4000c5f	          0x4c89f7	                            mov rdi, r14	       801	intel_crt.c	FUNCTION_29	IF_7	CALL_17
0x4000c62	      0xe800000000	                          call 0x4000c67	       801	intel_crt.c	FUNCTION_29	IF_7	CALL_17
0x4000c67	      0xe9f3fdffff	                           jmp 0x4000a5f	       801	intel_crt.c	FUNCTION_29	IF_7	CALL_17
0x4000c6c	            0x31c9	                            xor ecx, ecx	       469	intel_crt.c	FUNCTION_22	CALL_11
0x4000c6e	            0x89c2	                            mov edx, eax	       469	intel_crt.c	FUNCTION_22	CALL_11
0x4000c70	    0x48c7c6000000	                              mov rsi, 0	       469	intel_crt.c	FUNCTION_22	CALL_11
0x4000c77	      0xbf04000000	                              mov edi, 4	       469	intel_crt.c	FUNCTION_22	CALL_11
0x4000c7c	      0xe800000000	                          call 0x4000c81	       469	intel_crt.c	FUNCTION_22	CALL_11
0x4000c81	      0x807c241000	                cmp byte [rsp + 0x10], 0	       471	intel_crt.c	FUNCTION_22	IF_3
0x4000c86	     0xf8497fdffff	                            je 0x4000a23	       471	intel_crt.c	FUNCTION_22	IF_3
0x4000c8c	            0x31c0	                            xor eax, eax	       467	intel_crt.c	FUNCTION_22	ELSE_1
0x4000c8e	      0xe95cffffff	                           jmp 0x4000bef	       467	intel_crt.c	FUNCTION_22	ELSE_1
0x4000c93	      0xb803000000	                              mov eax, 3	       803	intel_crt.c	FUNCTION_29	ELSE_5	IF_11
0x4000c98	           0xf44d8	                          cmove ebx, eax	       803	intel_crt.c	FUNCTION_29	ELSE_5	IF_11
0x4000c9b	      0xe9bffdffff	                           jmp 0x4000a5f	       803	intel_crt.c	FUNCTION_29	ELSE_5	IF_11
0x4000ca0	    0x41c685080100	               mov byte [r13 + 0x108], 0	       389	intel_crt.c	FUNCTION_21	IF_1
0x4000ca8	    0x418bb50c0100	           mov esi, dword [r13 + 0x10c] 	       391	intel_crt.c	FUNCTION_21	IF_1	CALL_4
0x4000caf	      0xba01000000	                              mov edx, 1	       391	intel_crt.c	FUNCTION_21	IF_1	CALL_4
0x4000cb4	          0x4889df	                            mov rdi, rbx	       391	intel_crt.c	FUNCTION_21	IF_1	CALL_4
0x4000cb7	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       391	intel_crt.c	FUNCTION_21	IF_1	CALL_4
0x4000cbe	      0xe800000000	                          call 0x4000cc3	       391	intel_crt.c	FUNCTION_21	IF_1	CALL_4
0x4000cc3	    0x48c7c6000000	                              mov rsi, 0	       392	intel_crt.c	FUNCTION_21	IF_1	CALL_5
0x4000cca	            0x89c2	                            mov edx, eax	       392	intel_crt.c	FUNCTION_21	IF_1	CALL_5
0x4000ccc	      0xbf04000000	                              mov edi, 4	       392	intel_crt.c	FUNCTION_21	IF_1	CALL_5
0x4000cd1	        0x89442408	                mov dword [rsp + 8], eax	       392	intel_crt.c	FUNCTION_21	IF_1	CALL_5
0x4000cd5	      0xe800000000	                          call 0x4000cda	       392	intel_crt.c	FUNCTION_21	IF_1	CALL_5
0x4000cda	        0x8b542408	                mov edx, dword [rsp + 8]	       398	intel_crt.c	FUNCTION_21	IF_1	CALL_6
0x4000cde	    0x418bb50c0100	           mov esi, dword [r13 + 0x10c] 	       398	intel_crt.c	FUNCTION_21	IF_1	CALL_6
0x4000ce5	      0xb901000000	                              mov ecx, 1	       398	intel_crt.c	FUNCTION_21	IF_1	CALL_6
0x4000cea	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       398	intel_crt.c	FUNCTION_21	IF_1	CALL_6
0x4000cf1	          0x4889df	                            mov rdi, rbx	       398	intel_crt.c	FUNCTION_21	IF_1	CALL_6
0x4000cf4	    0x81e2ffffff7f	                     and edx, 0x7fffffff	       398	intel_crt.c	FUNCTION_21	IF_1	CALL_6
0x4000cfa	    0x81ca00000100	                         or edx, 0x10000	       398	intel_crt.c	FUNCTION_21	IF_1	CALL_6
0x4000d00	      0xe800000000	                          call 0x4000d05	       398	intel_crt.c	FUNCTION_21	IF_1	CALL_6
0x4000d05	    0x418bb50c0100	           mov esi, dword [r13 + 0x10c] 	       398	intel_crt.c	FUNCTION_21	IF_1	CALL_6
0x4000d0c	            0x6a00	                                  push 0	       191	intel_uncore.h	FUNCTION_73	CALL_1
0x4000d0e	            0x31c9	                            xor ecx, ecx	       191	intel_uncore.h	FUNCTION_73	CALL_1
0x4000d10	    0x41b9e8030000	                          mov r9d, 0x3e8	       191	intel_uncore.h	FUNCTION_73	CALL_1
0x4000d16	    0x41b802000000	                              mov r8d, 2	       191	intel_uncore.h	FUNCTION_73	CALL_1
0x4000d1c	      0xba00000100	                        mov edx, 0x10000	       191	intel_uncore.h	FUNCTION_73	CALL_1
0x4000d21	          0x4889df	                            mov rdi, rbx	       191	intel_uncore.h	FUNCTION_73	CALL_1
0x4000d24	      0xe800000000	                          call 0x4000d29	       191	intel_uncore.h	FUNCTION_73	CALL_1
0x4000d29	            0x85c0	                           test eax, eax	       400	intel_crt.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x4000d2b	              0x5e	                                 pop rsi	       400	intel_crt.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x4000d2c	            0x7411	                            je 0x4000d3f	       400	intel_crt.c	FUNCTION_21	IF_1	IF_3	CALL_7
0x4000d2e	    0x48c7c6000000	                              mov rsi, 0	       404	intel_crt.c	FUNCTION_21	IF_1	CALL_8
0x4000d35	      0xbf04000000	                              mov edi, 4	       404	intel_crt.c	FUNCTION_21	IF_1	CALL_8
0x4000d3a	      0xe800000000	                          call 0x4000d3f	       404	intel_crt.c	FUNCTION_21	IF_1	CALL_8
0x4000d3f	    0x418bb50c0100	           mov esi, dword [r13 + 0x10c] 	       407	intel_crt.c	FUNCTION_21	IF_1	IF_4	CALL_9
0x4000d46	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       407	intel_crt.c	FUNCTION_21	IF_1	IF_4	CALL_9
0x4000d4d	          0x4889df	                            mov rdi, rbx	       407	intel_crt.c	FUNCTION_21	IF_1	IF_4	CALL_9
0x4000d50	      0xb901000000	                              mov ecx, 1	       407	intel_crt.c	FUNCTION_21	IF_1	IF_4	CALL_9
0x4000d55	        0x8b542408	                mov edx, dword [rsp + 8]	       407	intel_crt.c	FUNCTION_21	IF_1	IF_4	CALL_9
0x4000d59	      0xe800000000	                          call 0x4000d5e	       407	intel_crt.c	FUNCTION_21	IF_1	IF_4	CALL_9
0x4000d5e	    0x418bb50c0100	           mov esi, dword [r13 + 0x10c] 	       408	intel_crt.c	FUNCTION_21	IF_1	IF_4	CALL_10
0x4000d65	    0x488b83f80700	           mov rax, qword [rbx + 0x7f8] 	       408	intel_crt.c	FUNCTION_21	IF_1	IF_4	CALL_10
0x4000d6c	            0x31d2	                            xor edx, edx	       408	intel_crt.c	FUNCTION_21	IF_1	IF_4	CALL_10
0x4000d6e	          0x4889df	                            mov rdi, rbx	       408	intel_crt.c	FUNCTION_21	IF_1	IF_4	CALL_10
0x4000d71	      0xe800000000	                          call 0x4000d76	       408	intel_crt.c	FUNCTION_21	IF_1	IF_4	CALL_10
0x4000d76	      0xe948fdffff	                           jmp 0x4000ac3	       408	intel_crt.c	FUNCTION_21	IF_1	IF_4	CALL_10
0x4000d7b	    0x48c7c6000000	                              mov rsi, 0	       458	intel_crt.c	FUNCTION_22	IF_1	CALL_8
0x4000d82	      0xbf04000000	                              mov edi, 4	       458	intel_crt.c	FUNCTION_22	IF_1	CALL_8
0x4000d87	      0xe800000000	                          call 0x4000d8c	       458	intel_crt.c	FUNCTION_22	IF_1	CALL_8
0x4000d8c	    0x418bb50c0100	           mov esi, dword [r13 + 0x10c] 	       459	intel_crt.c	FUNCTION_22	IF_1	CALL_9
0x4000d93	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       459	intel_crt.c	FUNCTION_22	IF_1	CALL_9
0x4000d9a	      0xb901000000	                              mov ecx, 1	       459	intel_crt.c	FUNCTION_22	IF_1	CALL_9
0x4000d9f	        0x8b542408	                mov edx, dword [rsp + 8]	       459	intel_crt.c	FUNCTION_22	IF_1	CALL_9
0x4000da3	          0x4889df	                            mov rdi, rbx	       459	intel_crt.c	FUNCTION_22	IF_1	CALL_9
0x4000da6	      0xe800000000	                          call 0x4000dab	       459	intel_crt.c	FUNCTION_22	IF_1	CALL_9
0x4000dab	      0xe9f1fdffff	                           jmp 0x4000ba1	       459	intel_crt.c	FUNCTION_22	IF_1	CALL_9
0x4000db0	    0x498b86f00300	           mov rax, qword [r14 + 0x3f0] 	       796	intel_crt.c	FUNCTION_29	IF_7	ELSE_2	IF_9
0x4000db7	        0x498b2c24	                    mov rbp, qword [r12]	       796	intel_crt.c	FUNCTION_29	IF_7	ELSE_2	IF_9
0x4000dbb	    0x48c7c6000000	                              mov rsi, 0	       611	intel_crt.c	FUNCTION_27	CALL_2
0x4000dc2	      0xbf04000000	                              mov edi, 4	       611	intel_crt.c	FUNCTION_27	CALL_2
0x4000dc7	        0x488b4008	                mov rax, qword [rax + 8]	       796	intel_crt.c	FUNCTION_29	IF_7	ELSE_2	IF_9
0x4000dcb	    0x8b80b0040000	           mov eax, dword [rax + 0x4b0] 	       795	intel_crt.c	FUNCTION_29	IF_7	ELSE_2	IF_9	CALL_15
0x4000dd1	            0x89c3	                            mov ebx, eax	       795	intel_crt.c	FUNCTION_29	IF_7	ELSE_2	IF_9	CALL_15
0x4000dd3	        0x8944241c	             mov dword [rsp + 0x1c], eax	       795	intel_crt.c	FUNCTION_29	IF_7	ELSE_2	IF_9	CALL_15
0x4000dd7	      0xe800000000	                          call 0x4000ddc	       611	intel_crt.c	FUNCTION_27	CALL_2
0x4000ddc	            0x89d8	                            mov eax, ebx	       611	intel_crt.c	FUNCTION_27	CALL_2
0x4000dde	      0x488d4c8500	                  lea rcx, [rbp + rax*4]	       611	intel_crt.c	FUNCTION_27	CALL_2
0x4000de3	    0x8b856c060000	           mov eax, dword [rbp + 0x66c] 	       613	intel_crt.c	FUNCTION_27	CALL_3
0x4000de9	            0x89c2	                            mov edx, eax	       613	intel_crt.c	FUNCTION_27	CALL_3
0x4000deb	    0x2b9598060000	            sub edx, dword [rbp + 0x698]	       613	intel_crt.c	FUNCTION_27	CALL_3
0x4000df1	    0x2b8580060000	            sub eax, dword [rbp + 0x680]	       617	intel_crt.c	FUNCTION_27	CALL_7
0x4000df7	     0x39198060000	            add edx, dword [rcx + 0x698]	       613	intel_crt.c	FUNCTION_27	CALL_3
0x4000dfd	    0x8d9a20000600	                lea ebx, [rdx + 0x60020]	       613	intel_crt.c	FUNCTION_27	CALL_3
0x4000e03	    0x448daa0c0006	               lea r13d, [rdx + 0x6000c]	       614	intel_crt.c	FUNCTION_27	CALL_4
0x4000e0a	            0x89df	                            mov edi, ebx	       613	intel_crt.c	FUNCTION_27	CALL_3
0x4000e0c	    0x8d9a10000600	                lea ebx, [rdx + 0x60010]	       615	intel_crt.c	FUNCTION_27	CALL_5
0x4000e12	    0x81c214000600	                        add edx, 0x60014	       616	intel_crt.c	FUNCTION_27	CALL_6
0x4000e18	            0x89fe	                            mov esi, edi	       620	intel_crt.c	FUNCTION_27	CALL_9
0x4000e1a	        0x89542420	             mov dword [rsp + 0x20], edx	       616	intel_crt.c	FUNCTION_27	CALL_6
0x4000e1e	        0x897c2428	             mov dword [rsp + 0x28], edi	       620	intel_crt.c	FUNCTION_27	CALL_9
0x4000e22	        0x895c2408	                mov dword [rsp + 8], ebx	       615	intel_crt.c	FUNCTION_27	CALL_5
0x4000e26	    0x8b9980060000	           mov ebx, dword [rcx + 0x680] 	       617	intel_crt.c	FUNCTION_27	CALL_7
0x4000e2c	      0xba01000000	                              mov edx, 1	       620	intel_crt.c	FUNCTION_27	CALL_9
0x4000e31	          0x4889ef	                            mov rdi, rbp	       620	intel_crt.c	FUNCTION_27	CALL_9
0x4000e34	             0x1c3	                            add ebx, eax	       617	intel_crt.c	FUNCTION_27	CALL_7
0x4000e36	    0x8d8308000700	                lea eax, [rbx + 0x70008]	       617	intel_crt.c	FUNCTION_27	CALL_7
0x4000e3c	    0x81c300000700	                        add ebx, 0x70000	       618	intel_crt.c	FUNCTION_27	CALL_8
0x4000e42	        0x89442410	             mov dword [rsp + 0x10], eax	       617	intel_crt.c	FUNCTION_27	CALL_7
0x4000e46	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	       620	intel_crt.c	FUNCTION_27	CALL_9
0x4000e4d	      0xe800000000	                          call 0x4000e52	       620	intel_crt.c	FUNCTION_27	CALL_9
0x4000e52	          0x4489ee	                           mov esi, r13d	       621	intel_crt.c	FUNCTION_27	CALL_10
0x4000e55	        0x8944242c	             mov dword [rsp + 0x2c], eax	       620	intel_crt.c	FUNCTION_27	CALL_9
0x4000e59	      0xba01000000	                              mov edx, 1	       621	intel_crt.c	FUNCTION_27	CALL_10
0x4000e5e	          0x4889ef	                            mov rdi, rbp	       621	intel_crt.c	FUNCTION_27	CALL_10
0x4000e61	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	       621	intel_crt.c	FUNCTION_27	CALL_10
0x4000e68	      0xe800000000	                          call 0x4000e6d	       621	intel_crt.c	FUNCTION_27	CALL_10
0x4000e6d	      0xba01000000	                              mov edx, 1	       622	intel_crt.c	FUNCTION_27	CALL_11
0x4000e72	        0x8b742408	                mov esi, dword [rsp + 8]	       622	intel_crt.c	FUNCTION_27	CALL_11
0x4000e76	          0x4889ef	                            mov rdi, rbp	       622	intel_crt.c	FUNCTION_27	CALL_11
0x4000e79	          0x4189c5	                           mov r13d, eax	       621	intel_crt.c	FUNCTION_27	CALL_10
0x4000e7c	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	       622	intel_crt.c	FUNCTION_27	CALL_11
0x4000e83	      0xe800000000	                          call 0x4000e88	       622	intel_crt.c	FUNCTION_27	CALL_11
0x4000e88	      0xb901000000	                              mov ecx, 1	       631	intel_crt.c	FUNCTION_27	CALL_12
0x4000e8d	        0x89442418	             mov dword [rsp + 0x18], eax	       622	intel_crt.c	FUNCTION_27	CALL_11
0x4000e91	      0xba50005000	                       mov edx, 0x500050	       631	intel_crt.c	FUNCTION_27	CALL_12
0x4000e96	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	       631	intel_crt.c	FUNCTION_27	CALL_12
0x4000e9d	        0x8b742428	            mov esi, dword [rsp + 0x28] 	       631	intel_crt.c	FUNCTION_27	CALL_12
0x4000ea1	          0x4889ef	                            mov rdi, rbp	       631	intel_crt.c	FUNCTION_27	CALL_12
0x4000ea4	      0xe800000000	                          call 0x4000ea9	       631	intel_crt.c	FUNCTION_27	CALL_12
0x4000ea9	    0xf6855a060000	              test byte [rbp + 0x65a], 2	       633	intel_crt.c	FUNCTION_27	IF_1	CALL_13
0x4000eb0	     0xf848c010000	                            je 0x4001042	       633	intel_crt.c	FUNCTION_27	IF_1	CALL_13
0x4000eb6	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	       627	intel_crt.c	FUNCTION_27
0x4000eba	          0x4589eb	                          mov r11d, r13d	       624	intel_crt.c	FUNCTION_27
0x4000ebd	          0x4489e8	                           mov eax, r13d	       625	intel_crt.c	FUNCTION_27
0x4000ec0	        0x41c1eb10	                          shr r11d, 0x10	       624	intel_crt.c	FUNCTION_27
0x4000ec4	      0x25ff070000	                          and eax, 0x7ff	       625	intel_crt.c	FUNCTION_27
0x4000ec9	    0x4181e3ff0f00	                         and r11d, 0xfff	       624	intel_crt.c	FUNCTION_27
0x4000ed0	          0x83c001	                              add eax, 1	       625	intel_crt.c	FUNCTION_27
0x4000ed3	          0x4189cd	                           mov r13d, ecx	       627	intel_crt.c	FUNCTION_27
0x4000ed6	          0xc1e910	                           shr ecx, 0x10	       628	intel_crt.c	FUNCTION_27
0x4000ed9	        0x4183c301	                             add r11d, 1	       624	intel_crt.c	FUNCTION_27
0x4000edd	    0x4181e5ff0f00	                         and r13d, 0xfff	       627	intel_crt.c	FUNCTION_27
0x4000ee4	    0x81e1ff0f0000	                          and ecx, 0xfff	       628	intel_crt.c	FUNCTION_27
0x4000eea	        0x89442410	             mov dword [rsp + 0x10], eax	       625	intel_crt.c	FUNCTION_27
0x4000eee	        0x4183c501	                             add r13d, 1	       627	intel_crt.c	FUNCTION_27
0x4000ef2	        0x448d4901	                      lea r9d, [rcx + 1]	       628	intel_crt.c	FUNCTION_27
0x4000ef6	        0x894c241c	             mov dword [rsp + 0x1c], ecx	       628	intel_crt.c	FUNCTION_27
0x4000efa	          0x4439e8	                           cmp eax, r13d	       654	intel_crt.c	FUNCTION_27	ELSE_1	IF_2
0x4000efd	            0x7209	                            jb 0x4000f08	       654	intel_crt.c	FUNCTION_27	ELSE_1	IF_2
0x4000eff	          0x4539cb	                           cmp r11d, r9d	       654	intel_crt.c	FUNCTION_27	ELSE_1	IF_2
0x4000f02	     0xf86dc010000	                           jbe 0x40010e4	       654	intel_crt.c	FUNCTION_27	ELSE_1	IF_2
0x4000f08	      0xc644241c00	                mov byte [rsp + 0x1c], 0	       647	intel_crt.c	FUNCTION_27	ELSE_1
0x4000f0d	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	       665	intel_crt.c	FUNCTION_27	ELSE_1	IF_3
0x4000f11	          0x4489ea	                           mov edx, r13d	       665	intel_crt.c	FUNCTION_27	ELSE_1	IF_3
0x4000f14	          0x4489d8	                           mov eax, r11d	       665	intel_crt.c	FUNCTION_27	ELSE_1	IF_3
0x4000f17	          0x4429c8	                            sub eax, r9d	       665	intel_crt.c	FUNCTION_27	ELSE_1	IF_3
0x4000f1a	            0x29ca	                            sub edx, ecx	       665	intel_crt.c	FUNCTION_27	ELSE_1	IF_3
0x4000f1c	            0x39c2	                            cmp edx, eax	       665	intel_crt.c	FUNCTION_27	ELSE_1	IF_3
0x4000f1e	     0xf82fd000000	                            jb 0x4001021	       665	intel_crt.c	FUNCTION_27	ELSE_1	IF_3
0x4000f24	          0x4101cd	                           add r13d, ecx	       666	intel_crt.c	FUNCTION_27	ELSE_1	IF_3
0x4000f27	      0x4c89642420	             mov qword [rsp + 0x20], r12	       666	intel_crt.c	FUNCTION_27	ELSE_1	IF_3
0x4000f2c	          0x4989ec	                            mov r12, rbp	       666	intel_crt.c	FUNCTION_27	ELSE_1	IF_3
0x4000f2f	          0x41d1ed	                             shr r13d, 1	       666	intel_crt.c	FUNCTION_27	ELSE_1	IF_3
0x4000f32	            0x89dd	                            mov ebp, ebx	       666	intel_crt.c	FUNCTION_27	ELSE_1	IF_3
0x4000f34	            0x89cb	                            mov ebx, ecx	       666	intel_crt.c	FUNCTION_27	ELSE_1	IF_3
0x4000f36	    0x498b8424f807	           mov rax, qword [r12 + 0x7f8] 	       673	intel_crt.c	FUNCTION_27	ELSE_1	WHILE_1	CALL_22
0x4000f3e	      0xba01000000	                              mov edx, 1	       673	intel_crt.c	FUNCTION_27	ELSE_1	WHILE_1	CALL_22
0x4000f43	            0x89ee	                            mov esi, ebp	       673	intel_crt.c	FUNCTION_27	ELSE_1	WHILE_1	CALL_22
0x4000f45	          0x4c89e7	                            mov rdi, r12	       673	intel_crt.c	FUNCTION_27	ELSE_1	WHILE_1	CALL_22
0x4000f48	      0xe800000000	                          call 0x4000f4d	       673	intel_crt.c	FUNCTION_27	ELSE_1	WHILE_1	CALL_22
0x4000f4d	            0x39c3	                            cmp ebx, eax	       673	intel_crt.c	FUNCTION_27	ELSE_1	WHILE_1	CALL_22
0x4000f4f	            0x76e5	                           jbe 0x4000f36	       673	intel_crt.c	FUNCTION_27	ELSE_1	WHILE_1	CALL_22
0x4000f51	            0x89eb	                            mov ebx, ebp	       673	intel_crt.c	FUNCTION_27	ELSE_1	WHILE_1	CALL_22
0x4000f53	          0x4c89e5	                            mov rbp, r12	       673	intel_crt.c	FUNCTION_27	ELSE_1	WHILE_1	CALL_22
0x4000f56	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	       673	intel_crt.c	FUNCTION_27	ELSE_1	WHILE_1	CALL_22
0x4000f5b	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	       675	intel_crt.c	FUNCTION_27	ELSE_1	WHILE_2	CALL_23
0x4000f62	      0xba01000000	                              mov edx, 1	       675	intel_crt.c	FUNCTION_27	ELSE_1	WHILE_2	CALL_23
0x4000f67	            0x89de	                            mov esi, ebx	       675	intel_crt.c	FUNCTION_27	ELSE_1	WHILE_2	CALL_23
0x4000f69	          0x4889ef	                            mov rdi, rbp	       675	intel_crt.c	FUNCTION_27	ELSE_1	WHILE_2	CALL_23
0x4000f6c	      0xe800000000	                          call 0x4000f71	       675	intel_crt.c	FUNCTION_27	ELSE_1	WHILE_2	CALL_23
0x4000f71	          0x4439e8	                           cmp eax, r13d	       675	intel_crt.c	FUNCTION_27	ELSE_1	WHILE_2	CALL_23
0x4000f74	            0x76e5	                           jbe 0x4000f5b	       675	intel_crt.c	FUNCTION_27	ELSE_1	WHILE_2	CALL_23
0x4000f76	            0x89c1	                            mov ecx, eax	       675	intel_crt.c	FUNCTION_27	ELSE_1	WHILE_2	CALL_23
0x4000f78	            0x31c0	                            xor eax, eax	       675	intel_crt.c	FUNCTION_27	ELSE_1	WHILE_2	CALL_23
0x4000f7a	      0x4c897c2410	             mov qword [rsp + 0x10], r15	       675	intel_crt.c	FUNCTION_27	ELSE_1	WHILE_2	CALL_23
0x4000f7f	      0x4c89642420	             mov qword [rsp + 0x20], r12	       675	intel_crt.c	FUNCTION_27	ELSE_1	WHILE_2	CALL_23
0x4000f84	          0x4531ed	                          xor r13d, r13d	       675	intel_crt.c	FUNCTION_27	ELSE_1	WHILE_2	CALL_23
0x4000f87	          0x4989ec	                            mov r12, rbp	       675	intel_crt.c	FUNCTION_27	ELSE_1	WHILE_2	CALL_23
0x4000f8a	          0x4189c7	                           mov r15d, eax	       675	intel_crt.c	FUNCTION_27	ELSE_1	WHILE_2	CALL_23
0x4000f8d	            0x89dd	                            mov ebp, ebx	       675	intel_crt.c	FUNCTION_27	ELSE_1	WHILE_2	CALL_23
0x4000f8f	            0x89cb	                            mov ebx, ecx	       675	intel_crt.c	FUNCTION_27	ELSE_1	WHILE_2	CALL_23
0x4000f91	      0xba01000000	                              mov edx, 1	       685	intel_crt.c	FUNCTION_27	ELSE_1	DO_1	CALL_24
0x4000f96	      0xbec2030000	                          mov esi, 0x3c2	       685	intel_crt.c	FUNCTION_27	ELSE_1	DO_1	CALL_24
0x4000f9b	          0x4c89e7	                            mov rdi, r12	       685	intel_crt.c	FUNCTION_27	ELSE_1	DO_1	CALL_24
0x4000f9e	    0x498b8424e807	           mov rax, qword [r12 + 0x7e8] 	       685	intel_crt.c	FUNCTION_27	ELSE_1	DO_1	CALL_24
0x4000fa6	        0x4183c701	                             add r15d, 1	       683	intel_crt.c	FUNCTION_27	ELSE_1	DO_1
0x4000faa	      0xe800000000	                          call 0x4000faf	       685	intel_crt.c	FUNCTION_27	ELSE_1	DO_1	CALL_24
0x4000faf	          0x83e010	                           and eax, 0x10	       686	intel_crt.c	FUNCTION_27	ELSE_1	DO_1	IF_4
0x4000fb2	      0xba01000000	                              mov edx, 1	       688	intel_crt.c	FUNCTION_27	ELSE_1	CALL_25
0x4000fb7	            0x89ee	                            mov esi, ebp	       688	intel_crt.c	FUNCTION_27	ELSE_1	CALL_25
0x4000fb9	            0x3c01	                               cmp al, 1	       687	intel_crt.c	FUNCTION_27	ELSE_1	DO_1	IF_4
0x4000fbb	          0x4c89e7	                            mov rdi, r12	       688	intel_crt.c	FUNCTION_27	ELSE_1	CALL_25
0x4000fbe	    0x498b8424f807	           mov rax, qword [r12 + 0x7f8] 	       688	intel_crt.c	FUNCTION_27	ELSE_1	CALL_25
0x4000fc6	        0x4183ddff	            sbb r13d, 0xffffffffffffffff	       687	intel_crt.c	FUNCTION_27	ELSE_1	DO_1	IF_4
0x4000fca	      0xe800000000	                          call 0x4000fcf	       688	intel_crt.c	FUNCTION_27	ELSE_1	CALL_25
0x4000fcf	            0x39c3	                            cmp ebx, eax	       688	intel_crt.c	FUNCTION_27	ELSE_1	CALL_25
0x4000fd1	            0x74be	                            je 0x4000f91	       688	intel_crt.c	FUNCTION_27	ELSE_1	CALL_25
0x4000fd3	      0x807c241c00	                cmp byte [rsp + 0x1c], 0	       691	intel_crt.c	FUNCTION_27	ELSE_1	IF_5
0x4000fd8	          0x4c89e5	                            mov rbp, r12	       691	intel_crt.c	FUNCTION_27	ELSE_1	IF_5
0x4000fdb	          0x4489fb	                           mov ebx, r15d	       691	intel_crt.c	FUNCTION_27	ELSE_1	IF_5
0x4000fde	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	       691	intel_crt.c	FUNCTION_27	ELSE_1	IF_5
0x4000fe3	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	       691	intel_crt.c	FUNCTION_27	ELSE_1	IF_5
0x4000fe8	     0xf8556010000	                           jne 0x4001144	       691	intel_crt.c	FUNCTION_27	ELSE_1	IF_5
0x4000fee	          0x8d045b	                  lea eax, [rbx + rbx*2]	       699	intel_crt.c	FUNCTION_27	ELSE_1
0x4000ff1	        0x41c1e502	                             shl r13d, 2	       699	intel_crt.c	FUNCTION_27	ELSE_1
0x4000ff5	            0x31db	                            xor ebx, ebx	       699	intel_crt.c	FUNCTION_27	ELSE_1
0x4000ff7	          0x4139c5	                           cmp r13d, eax	       699	intel_crt.c	FUNCTION_27	ELSE_1
0x4000ffa	           0xf9ec3	                                setle bl	       699	intel_crt.c	FUNCTION_27	ELSE_1
0x4000ffd	          0x83c301	                              add ebx, 1	       699	intel_crt.c	FUNCTION_27	ELSE_1
0x4001000	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	       705	intel_crt.c	FUNCTION_27	CALL_27
0x4001007	      0xb901000000	                              mov ecx, 1	       705	intel_crt.c	FUNCTION_27	CALL_27
0x400100c	        0x8b54242c	            mov edx, dword [rsp + 0x2c] 	       705	intel_crt.c	FUNCTION_27	CALL_27
0x4001010	        0x8b742428	            mov esi, dword [rsp + 0x28] 	       705	intel_crt.c	FUNCTION_27	CALL_27
0x4001014	          0x4889ef	                            mov rdi, rbp	       705	intel_crt.c	FUNCTION_27	CALL_27
0x4001017	      0xe800000000	                          call 0x400101c	       705	intel_crt.c	FUNCTION_27	CALL_27
0x400101c	      0xe935fcffff	                           jmp 0x4000c56	       705	intel_crt.c	FUNCTION_27	CALL_27
0x4001021	          0x4501d9	                           add r9d, r11d	       668	intel_crt.c	FUNCTION_27	ELSE_1	ELSE_2
0x4001024	      0x4c89642420	             mov qword [rsp + 0x20], r12	       668	intel_crt.c	FUNCTION_27	ELSE_1	ELSE_2
0x4001029	          0x4989ec	                            mov r12, rbp	       668	intel_crt.c	FUNCTION_27	ELSE_1	ELSE_2
0x400102c	          0x41d1e9	                              shr r9d, 1	       668	intel_crt.c	FUNCTION_27	ELSE_1	ELSE_2
0x400102f	            0x89dd	                            mov ebp, ebx	       668	intel_crt.c	FUNCTION_27	ELSE_1	ELSE_2
0x4001031	        0x8b5c2410	            mov ebx, dword [rsp + 0x10] 	       668	intel_crt.c	FUNCTION_27	ELSE_1	ELSE_2
0x4001035	          0x4589cd	                           mov r13d, r9d	       668	intel_crt.c	FUNCTION_27	ELSE_1	ELSE_2
0x4001038	      0xe9f9feffff	                           jmp 0x4000f36	       668	intel_crt.c	FUNCTION_27	ELSE_1	ELSE_2
0x400103d	      0xe800000000	                          call 0x4001042	       811	intel_crt.c	FUNCTION_29
0x4001042	        0x8b5c2410	            mov ebx, dword [rsp + 0x10] 	       634	intel_crt.c	FUNCTION_27	IF_1	CALL_14
0x4001046	          0x4889ef	                            mov rdi, rbp	       634	intel_crt.c	FUNCTION_27	IF_1	CALL_14
0x4001049	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	       634	intel_crt.c	FUNCTION_27	IF_1	CALL_14
0x4001050	      0xba01000000	                              mov edx, 1	       634	intel_crt.c	FUNCTION_27	IF_1	CALL_14
0x4001055	            0x89de	                            mov esi, ebx	       634	intel_crt.c	FUNCTION_27	IF_1	CALL_14
0x4001057	      0xe800000000	                          call 0x400105c	       634	intel_crt.c	FUNCTION_27	IF_1	CALL_14
0x400105c	            0x89c2	                            mov edx, eax	       635	intel_crt.c	FUNCTION_27	IF_1	CALL_15
0x400105e	      0xb901000000	                              mov ecx, 1	       635	intel_crt.c	FUNCTION_27	IF_1	CALL_15
0x4001063	          0x4189c5	                           mov r13d, eax	       634	intel_crt.c	FUNCTION_27	IF_1	CALL_14
0x4001066	    0x81ca00000002	                       or edx, 0x2000000	       635	intel_crt.c	FUNCTION_27	IF_1	CALL_15
0x400106c	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	       635	intel_crt.c	FUNCTION_27	IF_1	CALL_15
0x4001073	            0x89de	                            mov esi, ebx	       635	intel_crt.c	FUNCTION_27	IF_1	CALL_15
0x4001075	          0x4889ef	                            mov rdi, rbp	       635	intel_crt.c	FUNCTION_27	IF_1	CALL_15
0x4001078	      0xe800000000	                          call 0x400107d	       635	intel_crt.c	FUNCTION_27	IF_1	CALL_15
0x400107d	            0x31d2	                            xor edx, edx	       636	intel_crt.c	FUNCTION_27	IF_1	CALL_16
0x400107f	            0x89de	                            mov esi, ebx	       636	intel_crt.c	FUNCTION_27	IF_1	CALL_16
0x4001081	          0x4889ef	                            mov rdi, rbp	       636	intel_crt.c	FUNCTION_27	IF_1	CALL_16
0x4001084	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	       636	intel_crt.c	FUNCTION_27	IF_1	CALL_16
0x400108b	        0x895c2410	             mov dword [rsp + 0x10], ebx	       636	intel_crt.c	FUNCTION_27	IF_1	CALL_16
0x400108f	      0xe800000000	                          call 0x4001094	       636	intel_crt.c	FUNCTION_27	IF_1	CALL_16
0x4001094	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      1488	intel_drv.h	FUNCTION_53	CALL_1
0x4001098	          0x4889ef	                            mov rdi, rbp	      1488	intel_drv.h	FUNCTION_53	CALL_1
0x400109b	      0xe800000000	                          call 0x40010a0	      1488	intel_drv.h	FUNCTION_53	CALL_1
0x40010a0	          0x4889ef	                            mov rdi, rbp	       640	intel_crt.c	FUNCTION_27	IF_1	CALL_18
0x40010a3	    0x488b85e80700	           mov rax, qword [rbp + 0x7e8] 	       640	intel_crt.c	FUNCTION_27	IF_1	CALL_18
0x40010aa	      0xba01000000	                              mov edx, 1	       640	intel_crt.c	FUNCTION_27	IF_1	CALL_18
0x40010af	      0xbec2030000	                          mov esi, 0x3c2	       640	intel_crt.c	FUNCTION_27	IF_1	CALL_18
0x40010b4	      0xe800000000	                          call 0x40010b9	       640	intel_crt.c	FUNCTION_27	IF_1	CALL_18
0x40010b9	          0xc1e01b	                           shl eax, 0x1b	       641	intel_crt.c	FUNCTION_27	IF_1
0x40010bc	      0xb901000000	                              mov ecx, 1	       645	intel_crt.c	FUNCTION_27	IF_1	CALL_19
0x40010c1	          0x4489ea	                           mov edx, r13d	       645	intel_crt.c	FUNCTION_27	IF_1	CALL_19
0x40010c4	            0x89c3	                            mov ebx, eax	       641	intel_crt.c	FUNCTION_27	IF_1
0x40010c6	        0x8b742410	            mov esi, dword [rsp + 0x10] 	       645	intel_crt.c	FUNCTION_27	IF_1	CALL_19
0x40010ca	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	       645	intel_crt.c	FUNCTION_27	IF_1	CALL_19
0x40010d1	          0xc1fb1f	                           sar ebx, 0x1f	       641	intel_crt.c	FUNCTION_27	IF_1
0x40010d4	          0x4889ef	                            mov rdi, rbp	       645	intel_crt.c	FUNCTION_27	IF_1	CALL_19
0x40010d7	          0x83c302	                              add ebx, 2	       641	intel_crt.c	FUNCTION_27	IF_1
0x40010da	      0xe800000000	                          call 0x40010df	       645	intel_crt.c	FUNCTION_27	IF_1	CALL_19
0x40010df	      0xe91cffffff	                           jmp 0x4001000	       645	intel_crt.c	FUNCTION_27	IF_1	CALL_19
0x40010e4	      0x44894c2434	             mov dword [rsp + 0x34], r9d	       645	intel_crt.c	FUNCTION_27	IF_1	CALL_19
0x40010e9	      0x44895c2430	            mov dword [rsp + 0x30], r11d	       645	intel_crt.c	FUNCTION_27	IF_1	CALL_19
0x40010ee	      0xba01000000	                              mov edx, 1	       655	intel_crt.c	FUNCTION_27	ELSE_1	IF_2	CALL_20
0x40010f3	        0x8b742420	            mov esi, dword [rsp + 0x20] 	       655	intel_crt.c	FUNCTION_27	ELSE_1	IF_2	CALL_20
0x40010f7	          0x4889ef	                            mov rdi, rbp	       655	intel_crt.c	FUNCTION_27	ELSE_1	IF_2	CALL_20
0x40010fa	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	       655	intel_crt.c	FUNCTION_27	ELSE_1	IF_2	CALL_20
0x4001101	      0xe800000000	                          call 0x4001106	       655	intel_crt.c	FUNCTION_27	ELSE_1	IF_2	CALL_20
0x4001106	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	       659	intel_crt.c	FUNCTION_27	ELSE_1	IF_2	CALL_21
0x400110a	           0xfb7c0	                           movzx eax, ax	       656	intel_crt.c	FUNCTION_27	ELSE_1	IF_2
0x400110d	        0x8b742408	                mov esi, dword [rsp + 8]	       659	intel_crt.c	FUNCTION_27	ELSE_1	IF_2	CALL_21
0x4001111	        0x448d6801	                     lea r13d, [rax + 1]	       656	intel_crt.c	FUNCTION_27	ELSE_1	IF_2
0x4001115	          0x4889ef	                            mov rdi, rbp	       659	intel_crt.c	FUNCTION_27	ELSE_1	IF_2	CALL_21
0x4001118	          0xc1e110	                           shl ecx, 0x10	       659	intel_crt.c	FUNCTION_27	ELSE_1	IF_2	CALL_21
0x400111b	            0x89ca	                            mov edx, ecx	       659	intel_crt.c	FUNCTION_27	ELSE_1	IF_2	CALL_21
0x400111d	      0xb901000000	                              mov ecx, 1	       659	intel_crt.c	FUNCTION_27	ELSE_1	IF_2	CALL_21
0x4001122	             0x9c2	                             or edx, eax	       659	intel_crt.c	FUNCTION_27	ELSE_1	IF_2	CALL_21
0x4001124	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	       659	intel_crt.c	FUNCTION_27	ELSE_1	IF_2	CALL_21
0x400112b	      0xe800000000	                          call 0x4001130	       659	intel_crt.c	FUNCTION_27	ELSE_1	IF_2	CALL_21
0x4001130	      0xc644241c01	                mov byte [rsp + 0x1c], 1	       662	intel_crt.c	FUNCTION_27	ELSE_1	IF_2
0x4001135	      0x448b5c2430	           mov r11d, dword [rsp + 0x30] 	       662	intel_crt.c	FUNCTION_27	ELSE_1	IF_2
0x400113a	      0x448b4c2434	            mov r9d, dword [rsp + 0x34] 	       662	intel_crt.c	FUNCTION_27	ELSE_1	IF_2
0x400113f	      0xe9c9fdffff	                           jmp 0x4000f0d	       662	intel_crt.c	FUNCTION_27	ELSE_1	IF_2
0x4001144	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	       692	intel_crt.c	FUNCTION_27	ELSE_1	CALL_26
0x400114b	      0xb901000000	                              mov ecx, 1	       692	intel_crt.c	FUNCTION_27	ELSE_1	CALL_26
0x4001150	        0x8b542418	            mov edx, dword [rsp + 0x18] 	       692	intel_crt.c	FUNCTION_27	ELSE_1	CALL_26
0x4001154	        0x8b742408	                mov esi, dword [rsp + 8]	       692	intel_crt.c	FUNCTION_27	ELSE_1	CALL_26
0x4001158	          0x4889ef	                            mov rdi, rbp	       692	intel_crt.c	FUNCTION_27	ELSE_1	CALL_26
0x400115b	      0xe800000000	                          call 0x4001160	       692	intel_crt.c	FUNCTION_27	ELSE_1	CALL_26
0x4001160	      0xe989feffff	                           jmp 0x4000fee	       692	intel_crt.c	FUNCTION_27	ELSE_1	CALL_26
intel_crt_get_config	CALL,2:functions,0:WHILE,0:SWITCH,0:ELSE,0:IF,0:FOR,0:DO,0	23
0x4000040	              0x53	                                push rbx	       121	intel_crt.c	ELSE_2	FUNCTION_5
0x4000041	    0x838e44020000	               or dword [rsi + 0x244], 2	       122	intel_crt.c	ELSE_2	FUNCTION_5	CALL_1
0x4000048	          0x4889f3	                            mov rbx, rsi	       121	intel_crt.c	ELSE_2	FUNCTION_5
0x400004b	          0x488b07	                    mov rax, qword [rdi]	       100	intel_crt.c	FUNCTION_4	CALL_1
0x400004e	    0x8bb70c010000	           mov esi, dword [rdi + 0x10c] 	       104	intel_crt.c	FUNCTION_4	CALL_3
0x4000054	      0xba01000000	                              mov edx, 1	       104	intel_crt.c	FUNCTION_4	CALL_3
0x4000059	    0x488b88f80700	           mov rcx, qword [rax + 0x7f8] 	       104	intel_crt.c	FUNCTION_4	CALL_3
0x4000060	          0x4889c7	                            mov rdi, rax	       104	intel_crt.c	FUNCTION_4	CALL_3
0x4000063	      0xe800000000	                          call 0x4000068	       104	intel_crt.c	FUNCTION_4	CALL_3
0x4000068	            0x89c2	                            mov edx, eax	       109	intel_crt.c	FUNCTION_4	ELSE_1
0x400006a	          0xc1e21c	                           shl edx, 0x1c	       109	intel_crt.c	FUNCTION_4	ELSE_1
0x400006d	          0xc1fa1f	                           sar edx, 0x1f	       109	intel_crt.c	FUNCTION_4	ELSE_1
0x4000070	          0x83c202	                              add edx, 2	       109	intel_crt.c	FUNCTION_4	ELSE_1
0x4000073	            0x89d1	                            mov ecx, edx	       112	intel_crt.c	FUNCTION_4	IF_2
0x4000075	          0x83ca08	                               or edx, 8	       112	intel_crt.c	FUNCTION_4	IF_2
0x4000078	          0x83c904	                               or ecx, 4	       112	intel_crt.c	FUNCTION_4	IF_2
0x400007b	            0xa810	                           test al, 0x10	       112	intel_crt.c	FUNCTION_4	IF_2
0x400007d	    0x8b830c030000	           mov eax, dword [rbx + 0x30c] 	       126	intel_crt.c	ELSE_2	FUNCTION_5
0x4000083	           0xf45d1	                         cmovne edx, ecx	       112	intel_crt.c	FUNCTION_4	IF_2
0x4000086	     0x9939c000000	              or dword [rbx + 0x9c], edx	       124	intel_crt.c	ELSE_2	FUNCTION_5	CALL_2
0x400008c	    0x8983a8000000	             mov dword [rbx + 0xa8], eax	       126	intel_crt.c	ELSE_2	FUNCTION_5
0x4000092	              0x5b	                                 pop rbx	       127	intel_crt.c	ELSE_2	FUNCTION_5
0x4000093	              0xc3	                                     ret	       127	intel_crt.c	ELSE_2	FUNCTION_5
intel_crt_compute_config	CALL,0:functions,0:WHILE,0:SWITCH,0:ELSE,0:IF,0:FOR,0:DO,0	2
0x40001e0	      0xb801000000	                              mov eax, 1	       341	intel_crt.c	FUNCTION_18
0x40001e5	              0xc3	                                     ret	       341	intel_crt.c	FUNCTION_18
hsw_crt_get_config	CALL,4:functions,0:WHILE,0:SWITCH,0:ELSE,0:IF,0:FOR,0:DO,0	30
0x40005b0	            0x4154	                                push r12	       131	intel_crt.c	FUNCTION_6
0x40005b2	              0x55	                                push rbp	       131	intel_crt.c	FUNCTION_6
0x40005b3	          0x4889fd	                            mov rbp, rdi	       131	intel_crt.c	FUNCTION_6
0x40005b6	              0x53	                                push rbx	       131	intel_crt.c	FUNCTION_6
0x40005b7	          0x4889f3	                            mov rbx, rsi	       131	intel_crt.c	FUNCTION_6
0x40005ba	          0x4c8b27	                    mov r12, qword [rdi]	       132	intel_crt.c	FUNCTION_6	CALL_1
0x40005bd	      0xe800000000	                          call 0x40005c2	       134	intel_crt.c	FUNCTION_6	CALL_2
0x40005c2	    0x83a39c000000	      and dword [rbx + 0x9c], 0xfffffff0	       136	intel_crt.c	FUNCTION_6
0x40005c9	      0xba01000000	                              mov edx, 1	       104	intel_crt.c	FUNCTION_4	CALL_3
0x40005ce	        0x488b7d00	                    mov rdi, qword [rbp]	       100	intel_crt.c	FUNCTION_4	CALL_1
0x40005d2	    0x8bb50c010000	           mov esi, dword [rbp + 0x10c] 	       104	intel_crt.c	FUNCTION_4	CALL_3
0x40005d8	    0x488b87f80700	           mov rax, qword [rdi + 0x7f8] 	       104	intel_crt.c	FUNCTION_4	CALL_3
0x40005df	      0xe800000000	                          call 0x40005e4	       104	intel_crt.c	FUNCTION_4	CALL_3
0x40005e4	            0x89c2	                            mov edx, eax	       109	intel_crt.c	FUNCTION_4	ELSE_1
0x40005e6	          0x4c89e7	                            mov rdi, r12	       142	intel_crt.c	FUNCTION_6	CALL_4
0x40005e9	          0xc1e21c	                           shl edx, 0x1c	       109	intel_crt.c	FUNCTION_4	ELSE_1
0x40005ec	          0xc1fa1f	                           sar edx, 0x1f	       109	intel_crt.c	FUNCTION_4	ELSE_1
0x40005ef	          0x83c202	                              add edx, 2	       109	intel_crt.c	FUNCTION_4	ELSE_1
0x40005f2	            0x89d1	                            mov ecx, edx	       112	intel_crt.c	FUNCTION_4	IF_2
0x40005f4	          0x83ca08	                               or edx, 8	       112	intel_crt.c	FUNCTION_4	IF_2
0x40005f7	          0x83c904	                               or ecx, 4	       112	intel_crt.c	FUNCTION_4	IF_2
0x40005fa	            0xa810	                           test al, 0x10	       112	intel_crt.c	FUNCTION_4	IF_2
0x40005fc	           0xf45d1	                         cmovne edx, ecx	       112	intel_crt.c	FUNCTION_4	IF_2
0x40005ff	     0x9939c000000	              or dword [rbx + 0x9c], edx	       140	intel_crt.c	FUNCTION_6	CALL_3
0x4000605	      0xe800000000	                          call 0x400060a	       142	intel_crt.c	FUNCTION_6	CALL_4
0x400060a	    0x8983a8000000	             mov dword [rbx + 0xa8], eax	       142	intel_crt.c	FUNCTION_6	CALL_4
0x4000610	              0x5b	                                 pop rbx	       143	intel_crt.c	FUNCTION_6
0x4000611	              0x5d	                                 pop rbp	       143	intel_crt.c	FUNCTION_6
0x4000612	            0x415c	                                 pop r12	       143	intel_crt.c	FUNCTION_6
0x4000614	              0xc3	                                     ret	       143	intel_crt.c	FUNCTION_6
intel_spurious_crt_detect_dmi_callback	CALL,1:functions,0:WHILE,0:SWITCH,0:ELSE,0:IF,0:FOR,0:DO,0	6
0x4000200	        0x488b5708	                mov rdx, qword [rdi + 8]	       712	intel_crt.c	FUNCTION_28	CALL_1
0x4000204	    0x48c7c6000000	                              mov rsi, 0	       712	intel_crt.c	FUNCTION_28	CALL_1
0x400020b	      0xbf02000000	                              mov edi, 2	       712	intel_crt.c	FUNCTION_28	CALL_1
0x4000210	      0xe800000000	                          call 0x4000215	       712	intel_crt.c	FUNCTION_28	CALL_1
0x4000215	      0xb801000000	                              mov eax, 1	       714	intel_crt.c	FUNCTION_28
0x400021a	              0xc3	                                     ret	       714	intel_crt.c	FUNCTION_28
hsw_enable_crt	CALL,8:functions,0:WHILE,0:SWITCH,0:ELSE,0:IF,0:FOR,0:DO,0	38
0x40004d0	            0x4155	                                push r13	       276	intel_crt.c	FUNCTION_15
0x40004d2	            0x4154	                                push r12	       276	intel_crt.c	FUNCTION_15
0x40004d4	          0x4989fd	                            mov r13, rdi	       276	intel_crt.c	FUNCTION_15
0x40004d7	              0x55	                                push rbp	       276	intel_crt.c	FUNCTION_15
0x40004d8	              0x53	                                push rbx	       276	intel_crt.c	FUNCTION_15
0x40004d9	          0x4989f4	                            mov r12, rsi	       276	intel_crt.c	FUNCTION_15
0x40004dc	    0x80be38020000	               cmp byte [rsi + 0x238], 0	       281	intel_crt.c	FUNCTION_15	CALL_3
0x40004e3	          0x488b06	                    mov rax, qword [rsi]	       279	intel_crt.c	FUNCTION_15
0x40004e6	          0x488b1f	                    mov rbx, qword [rdi]	       277	intel_crt.c	FUNCTION_15	CALL_1
0x40004e9	    0x8ba8b0040000	           mov ebp, dword [rax + 0x4b0] 	       279	intel_crt.c	FUNCTION_15
0x40004ef	            0x7445	                            je 0x4000536	       281	intel_crt.c	FUNCTION_15	CALL_3
0x40004f1	            0x31d2	                            xor edx, edx	       283	intel_crt.c	FUNCTION_15	CALL_4
0x40004f3	          0x4c89e6	                            mov rsi, r12	       283	intel_crt.c	FUNCTION_15	CALL_4
0x40004f6	          0x4c89ef	                            mov rdi, r13	       283	intel_crt.c	FUNCTION_15	CALL_4
0x40004f9	      0xe8a2fbffff	             call sym.intel_crt_set_dpms	       283	intel_crt.c	FUNCTION_15	CALL_4
0x40004fe	            0x89ee	                            mov esi, ebp	      1488	intel_drv.h	FUNCTION_53	CALL_1
0x4000500	          0x4889df	                            mov rdi, rbx	      1488	intel_drv.h	FUNCTION_53	CALL_1
0x4000503	      0xe800000000	                          call 0x4000508	      1488	intel_drv.h	FUNCTION_53	CALL_1
0x4000508	            0x89ee	                            mov esi, ebp	      1488	intel_drv.h	FUNCTION_53	CALL_1
0x400050a	          0x4889df	                            mov rdi, rbx	      1488	intel_drv.h	FUNCTION_53	CALL_1
0x400050d	      0xe800000000	                          call 0x4000512	      1488	intel_drv.h	FUNCTION_53	CALL_1
0x4000512	            0x89ee	                            mov esi, ebp	       287	intel_crt.c	FUNCTION_15	CALL_7
0x4000514	          0x4889df	                            mov rdi, rbx	       287	intel_crt.c	FUNCTION_15	CALL_7
0x4000517	      0xba01000000	                              mov edx, 1	       287	intel_crt.c	FUNCTION_15	CALL_7
0x400051c	      0xe800000000	                          call 0x4000521	       287	intel_crt.c	FUNCTION_15	CALL_7
0x4000521	          0x4889df	                            mov rdi, rbx	       288	intel_crt.c	FUNCTION_15	CALL_8
0x4000524	      0xba01000000	                              mov edx, 1	       288	intel_crt.c	FUNCTION_15	CALL_8
0x4000529	            0x31f6	                            xor esi, esi	       288	intel_crt.c	FUNCTION_15	CALL_8
0x400052b	              0x5b	                                 pop rbx	       289	intel_crt.c	FUNCTION_15
0x400052c	              0x5d	                                 pop rbp	       289	intel_crt.c	FUNCTION_15
0x400052d	            0x415c	                                 pop r12	       289	intel_crt.c	FUNCTION_15
0x400052f	            0x415d	                                 pop r13	       289	intel_crt.c	FUNCTION_15
0x4000531	      0xe900000000	                           jmp 0x4000536	       288	intel_crt.c	FUNCTION_15	CALL_8
0x4000536	    0x48c7c6000000	                              mov rsi, 0	       281	intel_crt.c	FUNCTION_15	CALL_3
0x400053d	    0x48c7c7000000	                              mov rdi, 0	       281	intel_crt.c	FUNCTION_15	CALL_3
0x4000544	      0xe800000000	                          call 0x4000549	       281	intel_crt.c	FUNCTION_15	CALL_3
0x4000549	             0xf0b	                                     ud2	       281	intel_crt.c	FUNCTION_15	CALL_3
0x400054b	            0xeba4	                           jmp 0x40004f1	       281	intel_crt.c	FUNCTION_15	CALL_3
intel_crt_ddc_get_modes	CALL,3:functions,0:WHILE,0:SWITCH,0:ELSE,0:IF,1:FOR,0:DO,0	18
0x4000720	              0x55	                                push rbp	       545	intel_crt.c	FUNCTION_25
0x4000721	              0x53	                                push rbx	       545	intel_crt.c	FUNCTION_25
0x4000722	          0x4889fb	                            mov rbx, rdi	       545	intel_crt.c	FUNCTION_25
0x4000725	      0xe886ffffff	             call sym.intel_crt_get_edid	       549	intel_crt.c	FUNCTION_25	CALL_1
0x400072a	          0x4889c5	                            mov rbp, rax	       549	intel_crt.c	FUNCTION_25	CALL_1
0x400072d	            0x31c0	                            xor eax, eax	       549	intel_crt.c	FUNCTION_25	CALL_1
0x400072f	          0x4885ed	                           test rbp, rbp	       550	intel_crt.c	FUNCTION_25	IF_1
0x4000732	            0x7417	                            je 0x400074b	       550	intel_crt.c	FUNCTION_25	IF_1
0x4000734	          0x4889df	                            mov rdi, rbx	       553	intel_crt.c	FUNCTION_25	CALL_2
0x4000737	          0x4889ee	                            mov rsi, rbp	       553	intel_crt.c	FUNCTION_25	CALL_2
0x400073a	      0xe800000000	                          call 0x400073f	       553	intel_crt.c	FUNCTION_25	CALL_2
0x400073f	          0x4889ef	                            mov rdi, rbp	       554	intel_crt.c	FUNCTION_25	CALL_3
0x4000742	            0x89c3	                            mov ebx, eax	       553	intel_crt.c	FUNCTION_25	CALL_2
0x4000744	      0xe800000000	                          call 0x4000749	       554	intel_crt.c	FUNCTION_25	CALL_3
0x4000749	            0x89d8	                            mov eax, ebx	       556	intel_crt.c	FUNCTION_25
0x400074b	              0x5b	                                 pop rbx	       557	intel_crt.c	FUNCTION_25
0x400074c	              0x5d	                                 pop rbp	       557	intel_crt.c	FUNCTION_25
0x400074d	              0xc3	                                     ret	       557	intel_crt.c	FUNCTION_25
intel_crt_get_hw_state	CALL,8:functions,0:WHILE,0:SWITCH,0:ELSE,1:IF,3:FOR,0:DO,0	46
0x4000340	            0x4155	                                push r13	        68	intel_crt.c	FUNCTION_3
0x4000342	            0x4154	                                push r12	        68	intel_crt.c	FUNCTION_3
0x4000344	          0x4989f5	                            mov r13, rsi	        68	intel_crt.c	FUNCTION_3
0x4000347	              0x55	                                push rbp	        68	intel_crt.c	FUNCTION_3
0x4000348	              0x53	                                push rbx	        68	intel_crt.c	FUNCTION_3
0x4000349	          0x4889fd	                            mov rbp, rdi	        68	intel_crt.c	FUNCTION_3
0x400034c	          0x4c8b27	                    mov r12, qword [rdi]	        69	intel_crt.c	FUNCTION_3
0x400034f	    0x8bb7f0000000	            mov esi, dword [rdi + 0xf0] 	        75	intel_crt.c	FUNCTION_3	IF_1	CALL_3
0x4000355	          0x4c89e7	                            mov rdi, r12	        75	intel_crt.c	FUNCTION_3	IF_1	CALL_3
0x4000358	      0xe800000000	                          call 0x400035d	        75	intel_crt.c	FUNCTION_3	IF_1	CALL_3
0x400035d	            0x84c0	                             test al, al	        75	intel_crt.c	FUNCTION_3	IF_1	CALL_3
0x400035f	            0x7507	                           jne 0x4000368	        75	intel_crt.c	FUNCTION_3	IF_1	CALL_3
0x4000361	              0x5b	                                 pop rbx	        96	intel_crt.c	FUNCTION_3
0x4000362	              0x5d	                                 pop rbp	        96	intel_crt.c	FUNCTION_3
0x4000363	            0x415c	                                 pop r12	        96	intel_crt.c	FUNCTION_3
0x4000365	            0x415d	                                 pop r13	        96	intel_crt.c	FUNCTION_3
0x4000367	              0xc3	                                     ret	        96	intel_crt.c	FUNCTION_3
0x4000368	    0x8bb50c010000	           mov esi, dword [rbp + 0x10c] 	        81	intel_crt.c	FUNCTION_3	CALL_4
0x400036e	    0x498b8424f807	           mov rax, qword [r12 + 0x7f8] 	        81	intel_crt.c	FUNCTION_3	CALL_4
0x4000376	      0xba01000000	                              mov edx, 1	        81	intel_crt.c	FUNCTION_3	CALL_4
0x400037b	          0x4c89e7	                            mov rdi, r12	        81	intel_crt.c	FUNCTION_3	CALL_4
0x400037e	            0x31db	                            xor ebx, ebx	        79	intel_crt.c	FUNCTION_3
0x4000380	      0xe800000000	                          call 0x4000385	        81	intel_crt.c	FUNCTION_3	CALL_4
0x4000385	            0x85c0	                           test eax, eax	        83	intel_crt.c	FUNCTION_3	IF_2
0x4000387	            0x7817	                            js 0x40003a0	        83	intel_crt.c	FUNCTION_3	IF_2
0x4000389	    0x8bb5f0000000	            mov esi, dword [rbp + 0xf0] 	        93	intel_crt.c	FUNCTION_3	CALL_8
0x400038f	          0x4c89e7	                            mov rdi, r12	        93	intel_crt.c	FUNCTION_3	CALL_8
0x4000392	      0xe800000000	                          call 0x4000397	        93	intel_crt.c	FUNCTION_3	CALL_8
0x4000397	            0x89d8	                            mov eax, ebx	        95	intel_crt.c	FUNCTION_3
0x4000399	              0x5b	                                 pop rbx	        96	intel_crt.c	FUNCTION_3
0x400039a	              0x5d	                                 pop rbp	        96	intel_crt.c	FUNCTION_3
0x400039b	            0x415c	                                 pop r12	        96	intel_crt.c	FUNCTION_3
0x400039d	            0x415d	                                 pop r13	        96	intel_crt.c	FUNCTION_3
0x400039f	              0xc3	                                     ret	        96	intel_crt.c	FUNCTION_3
0x40003a0	    0x4183bc24f855	            cmp dword [r12 + 0x55f8], 2 	        86	intel_crt.c	FUNCTION_3	IF_3	CALL_5
0x40003a9	            0x7413	                            je 0x40003be	        86	intel_crt.c	FUNCTION_3	IF_3	CALL_5
0x40003ab	      0x2500000040	                     and eax, 0x40000000	        89	intel_crt.c	FUNCTION_3	CALL_7
0x40003b0	      0xbb01000000	                              mov ebx, 1	        91	intel_crt.c	FUNCTION_3
0x40003b5	          0xc1e81e	                           shr eax, 0x1e	        89	intel_crt.c	FUNCTION_3	CALL_7
0x40003b8	        0x41894500	                    mov dword [r13], eax	        89	intel_crt.c	FUNCTION_3	CALL_7
0x40003bc	            0xebcb	                           jmp 0x4000389	        89	intel_crt.c	FUNCTION_3	CALL_7
0x40003be	      0x2500000060	                     and eax, 0x60000000	        87	intel_crt.c	FUNCTION_3	CALL_6
0x40003c3	      0xbb01000000	                              mov ebx, 1	        91	intel_crt.c	FUNCTION_3
0x40003c8	          0xc1e81d	                           shr eax, 0x1d	        87	intel_crt.c	FUNCTION_3	CALL_6
0x40003cb	        0x41894500	                    mov dword [r13], eax	        87	intel_crt.c	FUNCTION_3	CALL_6
0x40003cf	            0xebb8	                           jmp 0x4000389	        87	intel_crt.c	FUNCTION_3	CALL_6
hsw_post_disable_crt	CALL,7:functions,0:WHILE,0:SWITCH,0:ELSE,0:IF,0:FOR,0:DO,0	33
0x40003e0	            0x4155	                                push r13	       232	intel_crt.c	FUNCTION_12
0x40003e2	            0x4154	                                push r12	       232	intel_crt.c	FUNCTION_12
0x40003e4	          0x4989d5	                            mov r13, rdx	       232	intel_crt.c	FUNCTION_12
0x40003e7	              0x55	                                push rbp	       232	intel_crt.c	FUNCTION_12
0x40003e8	              0x53	                                push rbx	       232	intel_crt.c	FUNCTION_12
0x40003e9	      0xba03000000	                              mov edx, 3	       202	intel_crt.c	FUNCTION_8	CALL_1
0x40003ee	          0x488b1f	                    mov rbx, qword [rdi]	       233	intel_crt.c	FUNCTION_12	CALL_1
0x40003f1	          0x4889f5	                            mov rbp, rsi	       232	intel_crt.c	FUNCTION_12
0x40003f4	          0x4989fc	                            mov r12, rdi	       232	intel_crt.c	FUNCTION_12
0x40003f7	      0xe8a4fcffff	             call sym.intel_crt_set_dpms	       202	intel_crt.c	FUNCTION_8	CALL_1
0x40003fc	          0x4889df	                            mov rdi, rbx	       237	intel_crt.c	FUNCTION_12	CALL_3
0x40003ff	      0xe800000000	                          call 0x4000404	       237	intel_crt.c	FUNCTION_12	CALL_3
0x4000404	          0x4889df	                            mov rdi, rbx	       238	intel_crt.c	FUNCTION_12	CALL_4
0x4000407	      0xe800000000	                          call 0x400040c	       238	intel_crt.c	FUNCTION_12	CALL_4
0x400040c	          0x4c89ea	                            mov rdx, r13	       240	intel_crt.c	FUNCTION_12	CALL_5
0x400040f	          0x4889ee	                            mov rsi, rbp	       240	intel_crt.c	FUNCTION_12	CALL_5
0x4000412	          0x4c89e7	                            mov rdi, r12	       240	intel_crt.c	FUNCTION_12	CALL_5
0x4000415	      0xe800000000	                          call 0x400041a	       240	intel_crt.c	FUNCTION_12	CALL_5
0x400041a	    0x80bd38020000	               cmp byte [rbp + 0x238], 0	       242	intel_crt.c	FUNCTION_12	CALL_6
0x4000421	            0x7415	                            je 0x4000438	       242	intel_crt.c	FUNCTION_12	CALL_6
0x4000423	          0x4889df	                            mov rdi, rbx	       244	intel_crt.c	FUNCTION_12	CALL_7
0x4000426	      0xba01000000	                              mov edx, 1	       244	intel_crt.c	FUNCTION_12	CALL_7
0x400042b	            0x31f6	                            xor esi, esi	       244	intel_crt.c	FUNCTION_12	CALL_7
0x400042d	              0x5b	                                 pop rbx	       245	intel_crt.c	FUNCTION_12
0x400042e	              0x5d	                                 pop rbp	       245	intel_crt.c	FUNCTION_12
0x400042f	            0x415c	                                 pop r12	       245	intel_crt.c	FUNCTION_12
0x4000431	            0x415d	                                 pop r13	       245	intel_crt.c	FUNCTION_12
0x4000433	      0xe900000000	                           jmp 0x4000438	       244	intel_crt.c	FUNCTION_12	CALL_7
0x4000438	    0x48c7c6000000	                              mov rsi, 0	       242	intel_crt.c	FUNCTION_12	CALL_6
0x400043f	    0x48c7c7000000	                              mov rdi, 0	       242	intel_crt.c	FUNCTION_12	CALL_6
0x4000446	      0xe800000000	                          call 0x400044b	       242	intel_crt.c	FUNCTION_12	CALL_6
0x400044b	             0xf0b	                                     ud2	       242	intel_crt.c	FUNCTION_12	CALL_6
0x400044d	            0xebd4	                           jmp 0x4000423	       242	intel_crt.c	FUNCTION_12	CALL_6
pch_disable_crt	CALL,0:functions,0:WHILE,0:SWITCH,0:ELSE,0:IF,0:FOR,0:DO,0	1
0x40001b0	            0xf3c3	                                     ret	       208	intel_crt.c	FUNCTION_9
intel_crt_get_modes	CALL,9:functions,0:WHILE,0:SWITCH,0:ELSE,0:IF,1:FOR,0:DO,0	38
0x4000750	            0x4155	                                push r13	       820	intel_crt.c	FUNCTION_31
0x4000752	            0x4154	                                push r12	       820	intel_crt.c	FUNCTION_31
0x4000754	              0x55	                                push rbp	       820	intel_crt.c	FUNCTION_31
0x4000755	              0x53	                                push rbx	       820	intel_crt.c	FUNCTION_31
0x4000756	          0x4889fd	                            mov rbp, rdi	       820	intel_crt.c	FUNCTION_31
0x4000759	    0x4c8baf200400	           mov r13, qword [rdi + 0x420] 	      1236	intel_drv.h	FUNCTION_39	CALL_1
0x4000760	          0x488b1f	                    mov rbx, qword [rdi]	       821	intel_crt.c	FUNCTION_31
0x4000763	    0x418bb5f00000	            mov esi, dword [r13 + 0xf0] 	       828	intel_crt.c	FUNCTION_31	CALL_3
0x400076a	          0x4889df	                            mov rdi, rbx	       828	intel_crt.c	FUNCTION_31	CALL_3
0x400076d	      0xe800000000	                          call 0x4000772	       828	intel_crt.c	FUNCTION_31	CALL_3
0x4000772	    0x8bb3e84d0000	          mov esi, dword [rbx + 0x4de8] 	       830	intel_crt.c	FUNCTION_31	CALL_4
0x4000778	          0x4889df	                            mov rdi, rbx	       830	intel_crt.c	FUNCTION_31	CALL_4
0x400077b	      0xe800000000	                          call 0x4000780	       830	intel_crt.c	FUNCTION_31	CALL_4
0x4000780	          0x4889ef	                            mov rdi, rbp	       831	intel_crt.c	FUNCTION_31	CALL_5
0x4000783	          0x4889c6	                            mov rsi, rax	       831	intel_crt.c	FUNCTION_31	CALL_5
0x4000786	      0xe895ffffff	        call sym.intel_crt_ddc_get_modes	       831	intel_crt.c	FUNCTION_31	CALL_5
0x400078b	            0x85c0	                           test eax, eax	       832	intel_crt.c	FUNCTION_31	IF_1	CALL_6
0x400078d	          0x4189c4	                           mov r12d, eax	       831	intel_crt.c	FUNCTION_31	CALL_5
0x4000790	            0x750c	                           jne 0x400079e	       832	intel_crt.c	FUNCTION_31	IF_1	CALL_6
0x4000792	    0xf78364060000	       test dword [rbx + 0x664], 0x6000 	       832	intel_crt.c	FUNCTION_31	IF_1	CALL_6
0x400079c	            0x7519	                           jne 0x40007b7	       832	intel_crt.c	FUNCTION_31	IF_1	CALL_6
0x400079e	    0x418bb5f00000	            mov esi, dword [r13 + 0xf0] 	       840	intel_crt.c	FUNCTION_31	CALL_9
0x40007a5	          0x4889df	                            mov rdi, rbx	       840	intel_crt.c	FUNCTION_31	CALL_9
0x40007a8	      0xe800000000	                          call 0x40007ad	       840	intel_crt.c	FUNCTION_31	CALL_9
0x40007ad	          0x4489e0	                           mov eax, r12d	       843	intel_crt.c	FUNCTION_31
0x40007b0	              0x5b	                                 pop rbx	       843	intel_crt.c	FUNCTION_31
0x40007b1	              0x5d	                                 pop rbp	       843	intel_crt.c	FUNCTION_31
0x40007b2	            0x415c	                                 pop r12	       843	intel_crt.c	FUNCTION_31
0x40007b4	            0x415d	                                 pop r13	       843	intel_crt.c	FUNCTION_31
0x40007b6	              0xc3	                                     ret	       843	intel_crt.c	FUNCTION_31
0x40007b7	      0xbe05000000	                              mov esi, 5	       836	intel_crt.c	FUNCTION_31	CALL_7
0x40007bc	          0x4889df	                            mov rdi, rbx	       836	intel_crt.c	FUNCTION_31	CALL_7
0x40007bf	      0xe800000000	                          call 0x40007c4	       836	intel_crt.c	FUNCTION_31	CALL_7
0x40007c4	          0x4889ef	                            mov rdi, rbp	       837	intel_crt.c	FUNCTION_31	CALL_8
0x40007c7	          0x4889c6	                            mov rsi, rax	       837	intel_crt.c	FUNCTION_31	CALL_8
0x40007ca	      0xe851ffffff	        call sym.intel_crt_ddc_get_modes	       837	intel_crt.c	FUNCTION_31	CALL_8
0x40007cf	          0x4189c4	                           mov r12d, eax	       837	intel_crt.c	FUNCTION_31	CALL_8
0x40007d2	            0xebca	                           jmp 0x400079e	       837	intel_crt.c	FUNCTION_31	CALL_8
hsw_pre_enable_crt	CALL,5:functions,0:WHILE,0:SWITCH,0:ELSE,0:IF,0:FOR,0:DO,0	27
0x4000550	            0x4155	                                push r13	       261	intel_crt.c	FUNCTION_14
0x4000552	            0x4154	                                push r12	       261	intel_crt.c	FUNCTION_14
0x4000554	              0x55	                                push rbp	       261	intel_crt.c	FUNCTION_14
0x4000555	              0x53	                                push rbx	       261	intel_crt.c	FUNCTION_14
0x4000556	          0x4889f3	                            mov rbx, rsi	       261	intel_crt.c	FUNCTION_14
0x4000559	    0x80be38020000	               cmp byte [rsi + 0x238], 0	       266	intel_crt.c	FUNCTION_14	CALL_3
0x4000560	          0x488b2e	                    mov rbp, qword [rsi]	       263	intel_crt.c	FUNCTION_14	CALL_2
0x4000563	          0x4c8b27	                    mov r12, qword [rdi]	       262	intel_crt.c	FUNCTION_14	CALL_1
0x4000566	    0x448badb00400	          mov r13d, dword [rbp + 0x4b0] 	       264	intel_crt.c	FUNCTION_14
0x400056d	            0x7426	                            je 0x4000595	       266	intel_crt.c	FUNCTION_14	CALL_3
0x400056f	          0x4489ee	                           mov esi, r13d	       268	intel_crt.c	FUNCTION_14	CALL_4
0x4000572	          0x4c89e7	                            mov rdi, r12	       268	intel_crt.c	FUNCTION_14	CALL_4
0x4000575	            0x31d2	                            xor edx, edx	       268	intel_crt.c	FUNCTION_14	CALL_4
0x4000577	      0xe800000000	                          call 0x400057c	       268	intel_crt.c	FUNCTION_14	CALL_4
0x400057c	    0x498b8424d055	          mov rax, qword [r12 + 0x55d0] 	       270	intel_crt.c	FUNCTION_14	CALL_5
0x4000584	          0x4889de	                            mov rsi, rbx	       270	intel_crt.c	FUNCTION_14	CALL_5
0x4000587	          0x4889ef	                            mov rdi, rbp	       270	intel_crt.c	FUNCTION_14	CALL_5
0x400058a	              0x5b	                                 pop rbx	       271	intel_crt.c	FUNCTION_14
0x400058b	              0x5d	                                 pop rbp	       271	intel_crt.c	FUNCTION_14
0x400058c	            0x415c	                                 pop r12	       271	intel_crt.c	FUNCTION_14
0x400058e	            0x415d	                                 pop r13	       271	intel_crt.c	FUNCTION_14
0x4000590	      0xe900000000	                           jmp 0x4000595	       270	intel_crt.c	FUNCTION_14	CALL_5
0x4000595	    0x48c7c6000000	                              mov rsi, 0	       266	intel_crt.c	FUNCTION_14	CALL_3
0x400059c	    0x48c7c7000000	                              mov rdi, 0	       266	intel_crt.c	FUNCTION_14	CALL_3
0x40005a3	      0xe800000000	                          call 0x40005a8	       266	intel_crt.c	FUNCTION_14	CALL_3
0x40005a8	             0xf0b	                                     ud2	       266	intel_crt.c	FUNCTION_14	CALL_3
0x40005aa	            0xebc3	                           jmp 0x400056f	       266	intel_crt.c	FUNCTION_14	CALL_3
