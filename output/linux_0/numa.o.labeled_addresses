acpi_parse_slit	SWITCH,0:functions,0:DO,0:IF,1:FOR,0:WHILE,0:CALL,3:ELSE,0	29
0x4000123	          0x440000	                     add byte [rax], r8b	       203	numa.c	FUNCTION_7
0x4000126	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       203	numa.c	FUNCTION_7
0x4000130	            0x4156	                                push r14	       204	numa.c	FUNCTION_7	FOR_1
0x4000132	            0x4155	                                push r13	       204	numa.c	FUNCTION_7	FOR_1
0x4000134	            0x4154	                                push r12	       204	numa.c	FUNCTION_7	FOR_1
0x4000136	              0x55	                                push rbp	       204	numa.c	FUNCTION_7	FOR_1
0x4000137	              0x53	                                push rbx	       206	numa.c	FUNCTION_7	FOR_1	FOR_2
0x4000138	      0xe800000000	                          call 0x400013d	       206	numa.c	FUNCTION_7	FOR_1	FOR_2
0x400013d	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       206	numa.c	FUNCTION_7	FOR_1	FOR_2
0x4000140	     0xf8495000000	                            je 0x40001db	       206	numa.c	FUNCTION_7	FOR_1	FOR_2
0x4000146	            0x89c5	                            mov ebp, eax	       207	numa.c	FUNCTION_7	FOR_1	FOR_2	IF_1
0x4000148	            0x4898	                                    cdqe	       208	numa.c	FUNCTION_7	FOR_1	FOR_2	IF_1	IF_2
0x400014a	    0x480fa3050000	              bt qword [0x04000152], rax	       208	numa.c	FUNCTION_7	FOR_1	FOR_2	IF_1	IF_2
0x4000152	           0xf92c0	                                 setb al	       210	numa.c	FUNCTION_7	FOR_1	FOR_2	ELSE_1	IF_3
0x4000155	            0x84c0	                             test al, al	       205	numa.c	FUNCTION_7	FOR_1	FOR_2
0x4000157	            0x740b	                            je 0x4000164	       205	numa.c	FUNCTION_7	FOR_1	FOR_2
0x4000159	              0x5b	                                 pop rbx	       205	numa.c	FUNCTION_7	FOR_1	FOR_2
0x400015a	            0x89e8	                            mov eax, ebp	       205	numa.c	FUNCTION_7	FOR_1	FOR_2
0x400015c	              0x5d	                                 pop rbp	       204	numa.c	FUNCTION_7	FOR_1
0x400015d	            0x415c	                                 pop r12	       204	numa.c	FUNCTION_7	FOR_1
0x400015f	            0x415d	                                 pop r13	       204	numa.c	FUNCTION_7	FOR_1
0x4000161	            0x415e	                                 pop r14	       204	numa.c	FUNCTION_7	FOR_1
0x4000163	              0xc3	                                     ret	       327	numa.c	FUNCTION_12	IF_1	CALL_2
0x4000164	      0xbe40000000	                           mov esi, 0x40	       327	numa.c	FUNCTION_12	IF_1	CALL_2
0x4000169	    0x48c7c7000000	                              mov rdi, 0	       327	numa.c	FUNCTION_12	IF_1	CALL_2
0x4000170	      0xbb40000000	                           mov ebx, 0x40	       328	numa.c	FUNCTION_12	IF_1
0x4000175	      0xe800000000	                          call 0x400017a	       330	numa.c	FUNCTION_12	CALL_3
0x400017a	              0x83	                                 invalid	       332	numa.c	FUNCTION_12
0x400017b	              0xf8	                                     clc	       333	numa.c	FUNCTION_12
acpi_parse_srat	SWITCH,0:functions,0:DO,0:IF,0:FOR,0:WHILE,0:CALL,0:ELSE,0	6
0x4000040	            0x85ff	                           test edi, edi	       419	numa.c	FUNCTION_18
0x4000042	            0x780b	                            js 0x400004f	       419	numa.c	FUNCTION_18
0x4000044	          0x4863ff	                         movsxd rdi, edi	       419	numa.c	FUNCTION_18
0x4000047	              0x8b	                                 invalid	       419	numa.c	FUNCTION_18
0x4000048	             0x4bd	                            add al, 0xbd	       419	numa.c	FUNCTION_18
0x400004a	               0x0	                      add byte [rax], al	       424	numa.c	FUNCTION_18
node_to_pxm	SWITCH,0:functions,0:DO,0:IF,1:FOR,0:WHILE,0:CALL,0:ELSE,0	7
0x4000060	            0x85ff	                           test edi, edi	       188	numa.c	FUNCTION_6	SWITCH_1	CALL_5
0x4000062	            0x780b	                            js 0x400006f	       188	numa.c	FUNCTION_6	SWITCH_1	CALL_5
0x4000064	          0x4863ff	                         movsxd rdi, edi	       384	numa.c	FUNCTION_16	IF_1
0x4000067	    0x8b04bd000000	                  mov eax, dword [rdi*4]	       385	numa.c	FUNCTION_16	IF_1
0x400006e	              0xc3	                                     ret	       387	numa.c	FUNCTION_16	CALL_1
0x400006f	      0xb8ffffffff	                     mov eax, 0xffffffff	       387	numa.c	FUNCTION_16	CALL_1
0x4000074	              0xc3	                                     ret	       387	numa.c	FUNCTION_16	CALL_1
acpi_map_pxm_to_online_node	SWITCH,0:functions,1:DO,0:IF,2:FOR,0:WHILE,0:CALL,2:ELSE,0	60
0x4000130	            0x4156	                                push r14	       204	numa.c	FUNCTION_7	FOR_1
0x4000132	            0x4155	                                push r13	       204	numa.c	FUNCTION_7	FOR_1
0x4000134	            0x4154	                                push r12	       204	numa.c	FUNCTION_7	FOR_1
0x4000136	              0x55	                                push rbp	       204	numa.c	FUNCTION_7	FOR_1
0x4000137	              0x53	                                push rbx	       206	numa.c	FUNCTION_7	FOR_1	FOR_2
0x4000138	      0xe800000000	                          call 0x400013d	       206	numa.c	FUNCTION_7	FOR_1	FOR_2
0x400013d	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       206	numa.c	FUNCTION_7	FOR_1	FOR_2
0x4000140	     0xf8495000000	                            je 0x40001db	       206	numa.c	FUNCTION_7	FOR_1	FOR_2
0x4000146	            0x89c5	                            mov ebp, eax	       207	numa.c	FUNCTION_7	FOR_1	FOR_2	IF_1
0x4000148	            0x4898	                                    cdqe	       208	numa.c	FUNCTION_7	FOR_1	FOR_2	IF_1	IF_2
0x400014a	    0x480fa3050000	              bt qword [0x04000152], rax	       208	numa.c	FUNCTION_7	FOR_1	FOR_2	IF_1	IF_2
0x4000152	           0xf92c0	                                 setb al	       210	numa.c	FUNCTION_7	FOR_1	FOR_2	ELSE_1	IF_3
0x4000155	            0x84c0	                             test al, al	       205	numa.c	FUNCTION_7	FOR_1	FOR_2
0x4000157	            0x740b	                            je 0x4000164	       205	numa.c	FUNCTION_7	FOR_1	FOR_2
0x4000159	              0x5b	                                 pop rbx	       205	numa.c	FUNCTION_7	FOR_1	FOR_2
0x400015a	            0x89e8	                            mov eax, ebp	       205	numa.c	FUNCTION_7	FOR_1	FOR_2
0x400015c	              0x5d	                                 pop rbp	       204	numa.c	FUNCTION_7	FOR_1
0x400015d	            0x415c	                                 pop r12	       204	numa.c	FUNCTION_7	FOR_1
0x400015f	            0x415d	                                 pop r13	       204	numa.c	FUNCTION_7	FOR_1
0x4000161	            0x415e	                                 pop r14	       204	numa.c	FUNCTION_7	FOR_1
0x4000163	              0xc3	                                     ret	       327	numa.c	FUNCTION_12	IF_1	CALL_2
0x4000164	      0xbe40000000	                           mov esi, 0x40	       327	numa.c	FUNCTION_12	IF_1	CALL_2
0x4000169	    0x48c7c7000000	                              mov rdi, 0	       327	numa.c	FUNCTION_12	IF_1	CALL_2
0x4000170	      0xbb40000000	                           mov ebx, 0x40	       328	numa.c	FUNCTION_12	IF_1
0x4000175	      0xe800000000	                          call 0x400017a	       330	numa.c	FUNCTION_12	CALL_3
0x400017a	          0x83f840	                           cmp eax, 0x40	       332	numa.c	FUNCTION_12
0x400017d	           0xf4ed8	                         cmovle ebx, eax	       267	numa.c	FUNCTION_11	IF_1	CALL_1
0x4000180	          0x83fb40	                           cmp ebx, 0x40	       267	numa.c	FUNCTION_11	IF_1	CALL_1
0x4000183	            0x74d4	                            je 0x4000159	       318	numa.c	FUNCTION_11
0x4000185	          0x4189ee	                           mov r14d, ebp	       318	numa.c	FUNCTION_11
0x4000188	    0x41bcffffff7f	                    mov r12d, 0x7fffffff	       267	numa.c	FUNCTION_11	IF_1	CALL_1
0x400018e	    0x41bd40000000	                          mov r13d, 0x40	       262	numa.c	FUNCTION_11
0x4000194	            0x89de	                            mov esi, ebx	       262	numa.c	FUNCTION_11
0x4000196	            0x89ef	                            mov edi, ebp	       262	numa.c	FUNCTION_11
0x4000198	      0xe800000000	                          call 0x400019d	       262	numa.c	FUNCTION_11
0x400019d	          0x4439e0	                           cmp eax, r12d	       269	numa.c	FUNCTION_11	IF_2
0x40001a0	            0x7d06	                           jge 0x40001a8	       269	numa.c	FUNCTION_11	IF_2
0x40001a2	          0x4189c4	                           mov r12d, eax	       269	numa.c	FUNCTION_11	IF_2
0x40001a5	          0x4189de	                           mov r14d, ebx	       270	numa.c	FUNCTION_11	IF_2	CALL_2
0x40001a8	          0x8d5301	                      lea edx, [rbx + 1]	       270	numa.c	FUNCTION_11	IF_2	CALL_2
0x40001ab	      0xbe40000000	                           mov esi, 0x40	       270	numa.c	FUNCTION_11	IF_2	CALL_2
0x40001b0	    0x48c7c7000000	                              mov rdi, 0	       272	numa.c	FUNCTION_11	IF_2
0x40001b7	          0x4863d2	                         movsxd rdx, edx	       318	numa.c	FUNCTION_11
0x40001ba	      0xe800000000	                          call 0x40001bf	       318	numa.c	FUNCTION_11
0x40001bf	          0x83f840	                           cmp eax, 0x40	       274	numa.c	FUNCTION_11	IF_3
0x40001c2	            0x89c3	                            mov ebx, eax	       274	numa.c	FUNCTION_11	IF_3
0x40001c4	        0x410f4fdd	                         cmovg ebx, r13d	       274	numa.c	FUNCTION_11	IF_3
0x40001c8	          0x83fb40	                           cmp ebx, 0x40	       277	numa.c	FUNCTION_11	IF_4	CALL_3
0x40001cb	            0x75c7	                           jne 0x4000194	       277	numa.c	FUNCTION_11	IF_4	CALL_3
0x40001cd	          0x4489f5	                           mov ebp, r14d	       277	numa.c	FUNCTION_11	IF_4	CALL_3
0x40001d0	              0x5b	                                 pop rbx	       280	numa.c	FUNCTION_11
0x40001d1	            0x89e8	                            mov eax, ebp	       280	numa.c	FUNCTION_11
0x40001d3	              0x5d	                                 pop rbp	       282	numa.c	FUNCTION_11
0x40001d4	            0x415c	                                 pop r12	       282	numa.c	FUNCTION_11
0x40001d6	            0x415d	                                 pop r13	       281	numa.c	FUNCTION_11
0x40001d8	            0x415e	                                 pop r14	       281	numa.c	FUNCTION_11
0x40001da	              0xc3	                                     ret	       281	numa.c	FUNCTION_11
0x40001db	            0x31c0	                            xor eax, eax	       281	numa.c	FUNCTION_11
0x40001dd	            0x31ed	                            xor ebp, ebp	       284	numa.c	FUNCTION_11	IF_5
0x40001df	      0xe966ffffff	                           jmp 0x400014a	       284	numa.c	FUNCTION_11	IF_5
acpi_parse_gicc_affinity	SWITCH,0:functions,0:DO,0:IF,1:FOR,0:WHILE,0:CALL,2:ELSE,0	9
0x4000063	           0xb4863	              or ecx, dword [rax + 0x63]	       384	numa.c	FUNCTION_16	IF_1
0x4000066	    0xff8b04bd0000	                dec dword [rbx + 0xbd04]	       385	numa.c	FUNCTION_16	IF_1
0x400006c	               0x0	                      add byte [rax], al	       384	numa.c	FUNCTION_16	IF_1
0x400006e	              0xc3	                                     ret	       387	numa.c	FUNCTION_16	CALL_1
0x400006f	      0xb8ffffffff	                     mov eax, 0xffffffff	       387	numa.c	FUNCTION_16	CALL_1
0x4000074	              0xc3	                                     ret	       387	numa.c	FUNCTION_16	CALL_1
0x4000075	              0x90	                                     nop	       392	numa.c	FUNCTION_16
0x4000076	              0x66	                                 invalid	       392	numa.c	FUNCTION_16
0x4000077	              0x2e	                                 invalid	       393	numa.c	FUNCTION_16
acpi_numa_slit_init	SWITCH,0:functions,0:DO,0:IF,2:FOR,2:WHILE,0:CALL,3:ELSE,0	30
0x40000bc	          0x400000	                      add byte [rax], al	       235	numa.c	FUNCTION_10
0x40000bf	            0x48c7	               add byte [rax - 0x39], cl	       235	numa.c	FUNCTION_10
0x40000c2	    0xc70000000089	            mov dword [rax], 0x89000000 	       235	numa.c	FUNCTION_10
0x40000c8	              0xcb	                                    retf	       238	numa.c	FUNCTION_10	FOR_1
0x40000c9	      0xe800000000	                          call 0x40000ce	       238	numa.c	FUNCTION_10	FOR_1
0x40000ce	      0xba40000000	                           mov edx, 0x40	       238	numa.c	FUNCTION_10	FOR_1
0x40000d3	          0x83f840	                           cmp eax, 0x40	        51	numa.c	FUNCTION_1
0x40000d6	           0xf4ed0	                         cmovle edx, eax	        51	numa.c	FUNCTION_1
0x40000d9	    0x8b04ad000000	                  mov eax, dword [rbp*4]	        51	numa.c	FUNCTION_1
0x40000e0	            0x39c2	                            cmp edx, eax	       241	numa.c	FUNCTION_10	FOR_1	IF_1
0x40000e2	            0x7c34	                            jl 0x4000118	       241	numa.c	FUNCTION_10	FOR_1	IF_1
0x40000e4	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       241	numa.c	FUNCTION_10	FOR_1	IF_1
0x40000e7	            0x742f	                            je 0x4000118	       241	numa.c	FUNCTION_10	FOR_1	IF_1
0x40000e9	          0x4863c2	                         movsxd rax, edx	        51	numa.c	FUNCTION_1
0x40000ec	    0x8b0c85000000	                  mov ecx, dword [rax*4]	        51	numa.c	FUNCTION_1
0x40000f3	            0x39cb	                            cmp ebx, ecx	       247	numa.c	FUNCTION_10	FOR_1	FOR_2	IF_2
0x40000f5	            0x7c18	                            jl 0x400010f	       251	numa.c	FUNCTION_10	FOR_1	FOR_2
0x40000f7	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	       251	numa.c	FUNCTION_10	FOR_1	FOR_2
0x40000fa	            0x7413	                            je 0x400010f	       251	numa.c	FUNCTION_10	FOR_1	FOR_2
0x40000fc	    0xf0480fab0500	        lock bts qword [0x04000105], rax	       250	numa.c	FUNCTION_10	FOR_1	FOR_2	CALL_3
0x4000105	            0xeb9e	                           jmp 0x40000a5	       250	numa.c	FUNCTION_10	FOR_1	FOR_2	CALL_3
0x4000107	      0xbaffffffff	                     mov edx, 0xffffffff	       250	numa.c	FUNCTION_10	FOR_1	FOR_2	CALL_3
0x400010c	            0x89d0	                            mov eax, edx	       244	numa.c	FUNCTION_10	FOR_1	FOR_2
0x400010e	              0xc3	                                     ret	       244	numa.c	FUNCTION_10	FOR_1	FOR_2
0x400010f	    0x891c85000000	                  mov dword [rax*4], ebx	       244	numa.c	FUNCTION_10	FOR_1	FOR_2
0x4000116	            0xebe4	                           jmp 0x40000fc	       244	numa.c	FUNCTION_10	FOR_1	FOR_2
0x4000118	    0x8914ad000000	                  mov dword [rbp*4], edx	       244	numa.c	FUNCTION_10	FOR_1	FOR_2
0x400011f	            0xebc8	                           jmp 0x40000e9	       254	numa.c	FUNCTION_10
0x4000121	               0xf	                                 invalid	       254	numa.c	FUNCTION_10
0x4000122	              0x1f	                                 invalid	       254	numa.c	FUNCTION_10
bad_srat	SWITCH,0:functions,0:DO,0:IF,0:FOR,0:WHILE,0:CALL,1:ELSE,0	9
0x400009b	               0x0	                      add byte [rax], al	       219	numa.c	FUNCTION_8	CALL_1
0x400009d	      0x89f983faff	            add byte [rcx - 0x57c07], cl	       219	numa.c	FUNCTION_8	CALL_1
0x40000a3	            0x7405	                            je 0x40000aa	       219	numa.c	FUNCTION_8	CALL_1
0x40000a5	            0x89d0	                            mov eax, edx	       219	numa.c	FUNCTION_8	CALL_1
0x40000a7	              0x5b	                                 pop rbx	       220	numa.c	FUNCTION_8
0x40000a8	              0x5d	                                 pop rbp	       220	numa.c	FUNCTION_8
0x40000a9	              0xc3	                                     ret	       220	numa.c	FUNCTION_8
0x40000aa	    0x488b3d000000	            mov rdi, qword [0x040000b1] 	       220	numa.c	FUNCTION_8
0x40000b1	              0xe8	                                 invalid	       220	numa.c	FUNCTION_8
