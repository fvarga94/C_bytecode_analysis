bit_bmove	SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,0:FOR,0:CALL,1	30
0x4000040	        0x4883ec20	                           sub rsp, 0x20	        48	bitblit.c	FUNCTION_2
0x4000044	          0x4989f2	                            mov r10, rsi	        48	bitblit.c	FUNCTION_2
0x4000047	    0x65488b042528	                mov rax, qword gs:[0x28]	        48	bitblit.c	FUNCTION_2
0x4000050	      0x4889442418	             mov qword [rsp + 0x18], rax	        48	bitblit.c	FUNCTION_2
0x4000055	            0x31c0	                            xor eax, eax	        48	bitblit.c	FUNCTION_2
0x4000057	    0x8b87e0010000	           mov eax, dword [rdi + 0x1e0] 	        51	bitblit.c	FUNCTION_2
0x400005d	           0xfafc8	                           imul ecx, eax	        51	bitblit.c	FUNCTION_2
0x4000060	        0x440fafc8	                           imul r9d, eax	        53	bitblit.c	FUNCTION_2
0x4000064	       0xfaf442430	            imul eax, dword [rsp + 0x30]	        56	bitblit.c	FUNCTION_2
0x4000069	        0x894c2410	             mov dword [rsp + 0x10], ecx	        51	bitblit.c	FUNCTION_2
0x400006d	    0x8b8fe4010000	           mov ecx, dword [rdi + 0x1e4] 	        52	bitblit.c	FUNCTION_2
0x4000073	          0x4c89d7	                            mov rdi, r10	        58	bitblit.c	FUNCTION_2	CALL_1
0x4000076	        0x44890c24	                    mov dword [rsp], r9d	        53	bitblit.c	FUNCTION_2
0x400007a	           0xfafd1	                           imul edx, ecx	        52	bitblit.c	FUNCTION_2
0x400007d	        0x440fafc1	                           imul r8d, ecx	        54	bitblit.c	FUNCTION_2
0x4000081	       0xfaf4c2428	            imul ecx, dword [rsp + 0x28]	        55	bitblit.c	FUNCTION_2
0x4000086	        0x89442408	                mov dword [rsp + 8], eax	        56	bitblit.c	FUNCTION_2
0x400008a	    0x488b86000300	           mov rax, qword [rsi + 0x300] 	        58	bitblit.c	FUNCTION_2	CALL_1
0x4000091	          0x4889e6	                            mov rsi, rsp	        58	bitblit.c	FUNCTION_2	CALL_1
0x4000094	        0x89542414	             mov dword [rsp + 0x14], edx	        52	bitblit.c	FUNCTION_2
0x4000098	      0x4489442404	                mov dword [rsp + 4], r8d	        54	bitblit.c	FUNCTION_2
0x400009d	        0x488b4060	            mov rax, qword [rax + 0x60] 	        58	bitblit.c	FUNCTION_2	CALL_1
0x40000a1	        0x894c240c	              mov dword [rsp + 0xc], ecx	        55	bitblit.c	FUNCTION_2
0x40000a5	      0xe800000000	                          call 0x40000aa	        58	bitblit.c	FUNCTION_2	CALL_1
0x40000aa	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        59	bitblit.c	FUNCTION_2
0x40000af	    0x654833042528	                xor rax, qword gs:[0x28]	        59	bitblit.c	FUNCTION_2
0x40000b8	            0x7505	                           jne 0x40000bf	        59	bitblit.c	FUNCTION_2
0x40000ba	        0x4883c420	                           add rsp, 0x20	        59	bitblit.c	FUNCTION_2
0x40000be	              0xc3	                                     ret	        59	bitblit.c	FUNCTION_2
0x40000bf	      0xe800000000	                          call 0x40000c4	        59	bitblit.c	FUNCTION_2
fbcon_set_bitops	SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,1:FOR,0:CALL,1	8
0x40001b0	    0x48c707000000	                      mov qword [rdi], 0	       405	bitblit.c	FUNCTION_10
0x40001b7	    0x48c747080000	                  mov qword [rdi + 8], 0	       406	bitblit.c	FUNCTION_10
0x40001bf	    0x48c747100000	               mov qword [rdi + 0x10], 0	       407	bitblit.c	FUNCTION_10
0x40001c7	    0x48c747180000	               mov qword [rdi + 0x18], 0	       408	bitblit.c	FUNCTION_10
0x40001cf	    0x48c747200000	               mov qword [rdi + 0x20], 0	       409	bitblit.c	FUNCTION_10
0x40001d7	    0x48c747280000	               mov qword [rdi + 0x28], 0	       410	bitblit.c	FUNCTION_10
0x40001df	    0x48c747300000	               mov qword [rdi + 0x30], 0	       411	bitblit.c	FUNCTION_10
0x40001e7	              0xc3	                                     ret	       411	bitblit.c	FUNCTION_10
bit_clear	SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,0:FOR,0:CALL,2	63
0x40008a0	        0x4883ec20	                           sub rsp, 0x20	        63	bitblit.c	FUNCTION_3
0x40008a4	          0x4889f0	                            mov rax, rsi	        63	bitblit.c	FUNCTION_3
0x40008a7	          0x4189cb	                           mov r11d, ecx	        63	bitblit.c	FUNCTION_3
0x40008aa	    0x65488b342528	                mov rsi, qword gs:[0x28]	        63	bitblit.c	FUNCTION_3
0x40008b3	      0x4889742418	             mov qword [rsp + 0x18], rsi	        63	bitblit.c	FUNCTION_3
0x40008b8	            0x31f6	                            xor esi, esi	        63	bitblit.c	FUNCTION_3
0x40008ba	    0x6683bfd80100	               cmp word [rdi + 0x1d8], 1	        64	bitblit.c	FUNCTION_3
0x40008c2	            0x19c9	                            sbb ecx, ecx	        64	bitblit.c	FUNCTION_3
0x40008c4	          0x83c10d	                            add ecx, 0xd	        64	bitblit.c	FUNCTION_3
0x40008c7	          0x4885ff	                           test rdi, rdi	       127	fbcon.h	FUNCTION_12	IF_1
0x40008ca	     0xf84d2000000	                            je 0x40009a2	       127	fbcon.h	FUNCTION_12	IF_1
0x40008d0	    0x80bf7a020000	               cmp byte [rdi + 0x27a], 0	       130	fbcon.h	FUNCTION_12	IF_2
0x40008d7	     0xf88a8000000	                            js 0x4000985	       130	fbcon.h	FUNCTION_12	IF_2
0x40008dd	          0x4885c0	                           test rax, rax	       134	fbcon.h	FUNCTION_12	IF_3
0x40008e0	     0xf84bc000000	                            je 0x40009a2	       134	fbcon.h	FUNCTION_12	IF_3
0x40008e6	    0x8b8880000000	            mov ecx, dword [rax + 0x80] 	       116	fbcon.h	FUNCTION_11
0x40008ec	          0x394874	            cmp dword [rax + 0x74], ecx 	       116	fbcon.h	FUNCTION_11
0x40008ef	    0x41baff0f0000	                         mov r10d, 0xfff	       116	fbcon.h	FUNCTION_11
0x40008f5	         0xf434874	          cmovae ecx, dword [rax + 0x74]	       116	fbcon.h	FUNCTION_11
0x40008f9	    0x8bb08c000000	            mov esi, dword [rax + 0x8c] 	       116	fbcon.h	FUNCTION_11
0x40008ff	            0x39f1	                            cmp ecx, esi	       116	fbcon.h	FUNCTION_11
0x4000901	           0xf42ce	                          cmovb ecx, esi	       116	fbcon.h	FUNCTION_11
0x4000904	          0x41d3e2	                            shl r10d, cl	       116	fbcon.h	FUNCTION_11
0x4000907	    0xf687f9010000	              test byte [rdi + 0x1f9], 8	       140	fbcon.h	FUNCTION_12	IF_4	CALL_4
0x400090e	    0x8b8814010000	           mov ecx, dword [rax + 0x114] 	       138	fbcon.h	FUNCTION_12
0x4000914	          0x41f7d2	                                not r10d	       116	fbcon.h	FUNCTION_11
0x4000917	        0x450fb6d2	                        movzx r10d, r10b	       116	fbcon.h	FUNCTION_11
0x400091b	            0x7478	                            je 0x4000995	       140	fbcon.h	FUNCTION_12	IF_4	CALL_4
0x400091d	            0x85c9	                           test ecx, ecx	       140	fbcon.h	FUNCTION_12	IF_4	CALL_4
0x400091f	        0x410f45ca	                        cmovne ecx, r10d	       140	fbcon.h	FUNCTION_12	IF_4	CALL_4
0x4000923	        0x894c2410	             mov dword [rsp + 0x10], ecx	        67	bitblit.c	FUNCTION_3	CALL_1
0x4000927	    0x8b8fe4010000	           mov ecx, dword [rdi + 0x1e4] 	        69	bitblit.c	FUNCTION_3
0x400092d	    0x8bb7e0010000	           mov esi, dword [rdi + 0x1e0] 	        68	bitblit.c	FUNCTION_3
0x4000933	    0xc74424140000	               mov dword [rsp + 0x14], 0	        72	bitblit.c	FUNCTION_3
0x400093b	          0x4889c7	                            mov rdi, rax	        74	bitblit.c	FUNCTION_3	CALL_2
0x400093e	           0xfafd1	                           imul edx, ecx	        69	bitblit.c	FUNCTION_3
0x4000941	        0x440fafde	                          imul r11d, esi	        68	bitblit.c	FUNCTION_3
0x4000945	        0x89542404	                mov dword [rsp + 4], edx	        69	bitblit.c	FUNCTION_3
0x4000949	    0x488b90000300	           mov rdx, qword [rax + 0x300] 	        74	bitblit.c	FUNCTION_3	CALL_2
0x4000950	        0x410faff1	                           imul esi, r9d	        70	bitblit.c	FUNCTION_3
0x4000954	        0x44891c24	                   mov dword [rsp], r11d	        68	bitblit.c	FUNCTION_3
0x4000958	        0x410fafc8	                           imul ecx, r8d	        71	bitblit.c	FUNCTION_3
0x400095c	        0x488b5258	            mov rdx, qword [rdx + 0x58] 	        74	bitblit.c	FUNCTION_3	CALL_2
0x4000960	        0x89742408	                mov dword [rsp + 8], esi	        70	bitblit.c	FUNCTION_3
0x4000964	          0x4889e6	                            mov rsi, rsp	        74	bitblit.c	FUNCTION_3	CALL_2
0x4000967	        0x894c240c	              mov dword [rsp + 0xc], ecx	        71	bitblit.c	FUNCTION_3
0x400096b	      0xe800000000	                          call 0x4000970	        74	bitblit.c	FUNCTION_3	CALL_2
0x4000970	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        75	bitblit.c	FUNCTION_3
0x4000975	    0x654833042528	                xor rax, qword gs:[0x28]	        75	bitblit.c	FUNCTION_3
0x400097e	            0x7529	                           jne 0x40009a9	        75	bitblit.c	FUNCTION_3
0x4000980	        0x4883c420	                           add rsp, 0x20	        75	bitblit.c	FUNCTION_3
0x4000984	              0xc3	                                     ret	        75	bitblit.c	FUNCTION_3
0x4000985	    0x440fb797f801	         movzx r10d, word [rdi + 0x1f8] 	        75	bitblit.c	FUNCTION_3
0x400098d	          0x41d3fa	                            sar r10d, cl	        75	bitblit.c	FUNCTION_3
0x4000990	          0x4489d1	                           mov ecx, r10d	        75	bitblit.c	FUNCTION_3
0x4000993	            0xeb8e	                           jmp 0x4000923	        75	bitblit.c	FUNCTION_3
0x4000995	            0x85c9	                           test ecx, ecx	       145	fbcon.h	FUNCTION_12	ELSE_1
0x4000997	      0xb900000000	                              mov ecx, 0	       145	fbcon.h	FUNCTION_12	ELSE_1
0x400099c	        0x410f44ca	                         cmove ecx, r10d	       145	fbcon.h	FUNCTION_12	ELSE_1
0x40009a0	            0xeb81	                           jmp 0x4000923	       145	fbcon.h	FUNCTION_12	ELSE_1
0x40009a2	            0x31c9	                            xor ecx, ecx	       134	fbcon.h	FUNCTION_12	IF_3
0x40009a4	      0xe97affffff	                           jmp 0x4000923	       134	fbcon.h	FUNCTION_12	IF_3
0x40009a9	      0xe800000000	                          call 0x40009ae	        75	bitblit.c	FUNCTION_3
bit_clear_margins	SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,2:FOR,0:CALL,2	58
0x40000d0	            0x4155	                                push r13	       207	bitblit.c	FUNCTION_7
0x40000d2	            0x4154	                                push r12	       207	bitblit.c	FUNCTION_7
0x40000d4	              0x55	                                push rbp	       207	bitblit.c	FUNCTION_7
0x40000d5	              0x53	                                push rbx	       207	bitblit.c	FUNCTION_7
0x40000d6	          0x4889f3	                            mov rbx, rsi	       207	bitblit.c	FUNCTION_7
0x40000d9	        0x4883ec20	                           sub rsp, 0x20	       207	bitblit.c	FUNCTION_7
0x40000dd	    0x8bafe0010000	           mov ebp, dword [rdi + 0x1e0] 	       210	bitblit.c	FUNCTION_7
0x40000e3	    0x448ba7e40100	          mov r12d, dword [rdi + 0x1e4] 	       211	bitblit.c	FUNCTION_7
0x40000ea	     0xfafaf640100	           imul ebp, dword [rdi + 0x164]	       210	bitblit.c	FUNCTION_7
0x40000f1	    0x440fafa76801	          imul r12d, dword [rdi + 0x168]	       211	bitblit.c	FUNCTION_7
0x40000f9	    0x65488b042528	                mov rax, qword gs:[0x28]	       207	bitblit.c	FUNCTION_7
0x4000102	      0x4889442418	             mov qword [rsp + 0x18], rax	       207	bitblit.c	FUNCTION_7
0x4000107	            0x31c0	                            xor eax, eax	       207	bitblit.c	FUNCTION_7
0x4000109	        0x448b6e54	           mov r13d, dword [rsi + 0x54] 	       211	bitblit.c	FUNCTION_7
0x400010d	          0x8b4650	            mov eax, dword [rsi + 0x50] 	       219	bitblit.c	FUNCTION_7	IF_1
0x4000110	        0x89542410	             mov dword [rsp + 0x10], edx	       216	bitblit.c	FUNCTION_7
0x4000114	    0xc74424140000	               mov dword [rsp + 0x14], 0	       217	bitblit.c	FUNCTION_7
0x400011c	          0x4529e5	                          sub r13d, r12d	       211	bitblit.c	FUNCTION_7
0x400011f	            0x29e8	                            sub eax, ebp	       219	bitblit.c	FUNCTION_7	IF_1
0x4000121	            0x7404	                            je 0x4000127	       219	bitblit.c	FUNCTION_7	IF_1
0x4000123	            0x85c9	                           test ecx, ecx	       219	bitblit.c	FUNCTION_7	IF_1
0x4000125	            0x744e	                            je 0x4000175	       219	bitblit.c	FUNCTION_7	IF_1
0x4000127	          0x4585ed	                         test r13d, r13d	       227	bitblit.c	FUNCTION_7	IF_2
0x400012a	            0x742e	                            je 0x400015a	       227	bitblit.c	FUNCTION_7	IF_2
0x400012c	          0x8b4360	            mov eax, dword [rbx + 0x60] 	       228	bitblit.c	FUNCTION_7	IF_2
0x400012f	        0x44036364	            add r12d, dword [rbx + 0x64]	       229	bitblit.c	FUNCTION_7	IF_2
0x4000133	          0x4889e6	                            mov rsi, rsp	       232	bitblit.c	FUNCTION_7	IF_2	CALL_2
0x4000136	        0x896c2408	                mov dword [rsp + 8], ebp	       230	bitblit.c	FUNCTION_7	IF_2
0x400013a	      0x44896c240c	             mov dword [rsp + 0xc], r13d	       231	bitblit.c	FUNCTION_7	IF_2
0x400013f	          0x4889df	                            mov rdi, rbx	       232	bitblit.c	FUNCTION_7	IF_2	CALL_2
0x4000142	          0x890424	                    mov dword [rsp], eax	       228	bitblit.c	FUNCTION_7	IF_2
0x4000145	    0x488b83000300	           mov rax, qword [rbx + 0x300] 	       232	bitblit.c	FUNCTION_7	IF_2	CALL_2
0x400014c	      0x4489642404	               mov dword [rsp + 4], r12d	       229	bitblit.c	FUNCTION_7	IF_2
0x4000151	        0x488b4058	            mov rax, qword [rax + 0x58] 	       232	bitblit.c	FUNCTION_7	IF_2	CALL_2
0x4000155	      0xe800000000	                          call 0x400015a	       232	bitblit.c	FUNCTION_7	IF_2	CALL_2
0x400015a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       234	bitblit.c	FUNCTION_7
0x400015f	    0x654833042528	                xor rax, qword gs:[0x28]	       234	bitblit.c	FUNCTION_7
0x4000168	            0x7541	                           jne 0x40001ab	       234	bitblit.c	FUNCTION_7
0x400016a	        0x4883c420	                           add rsp, 0x20	       234	bitblit.c	FUNCTION_7
0x400016e	              0x5b	                                 pop rbx	       234	bitblit.c	FUNCTION_7
0x400016f	              0x5d	                                 pop rbp	       234	bitblit.c	FUNCTION_7
0x4000170	            0x415c	                                 pop r12	       234	bitblit.c	FUNCTION_7
0x4000172	            0x415d	                                 pop r13	       234	bitblit.c	FUNCTION_7
0x4000174	              0xc3	                                     ret	       234	bitblit.c	FUNCTION_7
0x4000175	        0x89442408	                mov dword [rsp + 8], eax	       222	bitblit.c	FUNCTION_7	IF_1
0x4000179	          0x8b465c	            mov eax, dword [rsi + 0x5c] 	       223	bitblit.c	FUNCTION_7	IF_1
0x400017c	          0x4889df	                            mov rdi, rbx	       224	bitblit.c	FUNCTION_7	IF_1	CALL_1
0x400017f	          0x8b5660	            mov edx, dword [rsi + 0x60] 	       220	bitblit.c	FUNCTION_7	IF_1
0x4000182	    0xc74424040000	                  mov dword [rsp + 4], 0	       221	bitblit.c	FUNCTION_7	IF_1
0x400018a	        0x8944240c	              mov dword [rsp + 0xc], eax	       223	bitblit.c	FUNCTION_7	IF_1
0x400018e	    0x488b86000300	           mov rax, qword [rsi + 0x300] 	       224	bitblit.c	FUNCTION_7	IF_1	CALL_1
0x4000195	          0x4889e6	                            mov rsi, rsp	       224	bitblit.c	FUNCTION_7	IF_1	CALL_1
0x4000198	             0x1ea	                            add edx, ebp	       220	bitblit.c	FUNCTION_7	IF_1
0x400019a	          0x891424	                    mov dword [rsp], edx	       220	bitblit.c	FUNCTION_7	IF_1
0x400019d	        0x488b4058	            mov rax, qword [rax + 0x58] 	       224	bitblit.c	FUNCTION_7	IF_1	CALL_1
0x40001a1	      0xe800000000	                          call 0x40001a6	       224	bitblit.c	FUNCTION_7	IF_1	CALL_1
0x40001a6	      0xe97cffffff	                           jmp 0x4000127	       224	bitblit.c	FUNCTION_7	IF_1	CALL_1
0x40001ab	      0xe800000000	               call sym.fbcon_set_bitops	       234	bitblit.c	FUNCTION_7
bit_update_start	SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,0:FOR,0:CALL,1	15
0x40001f0	              0x55	                                push rbp	       392	bitblit.c	FUNCTION_9
0x40001f1	    0x488baf480300	           mov rbp, qword [rdi + 0x348] 	       393	bitblit.c	FUNCTION_9
0x40001f8	              0x53	                                push rbx	       392	bitblit.c	FUNCTION_9
0x40001f9	          0x4889fb	                            mov rbx, rdi	       392	bitblit.c	FUNCTION_9
0x40001fc	        0x488d7538	                   lea rsi, [rbp + 0x38]	       396	bitblit.c	FUNCTION_9	CALL_1
0x4000200	      0xe800000000	                          call 0x4000205	       396	bitblit.c	FUNCTION_9	CALL_1
0x4000205	          0x8b5360	            mov edx, dword [rbx + 0x60] 	       397	bitblit.c	FUNCTION_9
0x4000208	          0x895548	            mov dword [rbp + 0x48], edx 	       397	bitblit.c	FUNCTION_9
0x400020b	          0x8b5364	            mov edx, dword [rbx + 0x64] 	       398	bitblit.c	FUNCTION_9
0x400020e	          0x89554c	            mov dword [rbp + 0x4c], edx 	       398	bitblit.c	FUNCTION_9
0x4000211	    0x8b93d4000000	            mov edx, dword [rbx + 0xd4] 	       399	bitblit.c	FUNCTION_9
0x4000217	    0x8995bc000000	            mov dword [rbp + 0xbc], edx 	       399	bitblit.c	FUNCTION_9
0x400021d	              0x5b	                                 pop rbx	       401	bitblit.c	FUNCTION_9
0x400021e	              0x5d	                                 pop rbp	       401	bitblit.c	FUNCTION_9
0x400021f	              0xc3	                                     ret	       401	bitblit.c	FUNCTION_9
