unmap_kernel_range	IF,0:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,0:WHILE,0:DO,0	11
0x4000a50	              0x55	                                push rbp	      1341	vmalloc.c	FUNCTION_49
0x4000a51	              0x53	                                push rbx	      1341	vmalloc.c	FUNCTION_49
0x4000a52	        0x488d1c37	                    lea rbx, [rdi + rsi]	      1342	vmalloc.c	FUNCTION_49
0x4000a56	          0x4889fd	                            mov rbp, rdi	      1341	vmalloc.c	FUNCTION_49
0x4000a59	          0x4889de	                            mov rsi, rbx	      1345	vmalloc.c	FUNCTION_49	CALL_2
0x4000a5c	      0xe8effcffff	              call sym.vunmap_page_range	      1345	vmalloc.c	FUNCTION_49	CALL_2
0x4000a61	          0x4889de	                            mov rsi, rbx	      1346	vmalloc.c	FUNCTION_49	CALL_3
0x4000a64	          0x4889ef	                            mov rdi, rbp	      1346	vmalloc.c	FUNCTION_49	CALL_3
0x4000a67	              0x5b	                                 pop rbx	      1347	vmalloc.c	FUNCTION_49
0x4000a68	              0x5d	                                 pop rbp	      1347	vmalloc.c	FUNCTION_49
0x4000a69	      0xe900000000	                           jmp 0x4000a6e	      1346	vmalloc.c	FUNCTION_49	CALL_3
map_kernel_range_noflush	IF,0:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,0:WHILE,0:DO,0	2
0x4002430	          0x4801fe	                            add rsi, rdi	      1309	vmalloc.c	FUNCTION_47	CALL_1
0x4002433	      0xe988e8ffff	         jmp sym.vmap_page_range_noflush	      1309	vmalloc.c	FUNCTION_47	CALL_1
vmalloc	IF,0:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,1:WHILE,0:DO,0	13
0x4002b00	    0x488b15000000	            mov rdx, qword [0x04002b07] 	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002b07	    0x49b963010000	           movabs r9, 0x8000000000000163	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002b11	    0x4c230d000000	              and r9, qword [0x04002b18]	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002b18	          0xff3424	                        push qword [rsp]	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002b1b	    0x48b9ffffffff	              movabs rcx, 0x1fffffffffff	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002b25	            0x6aff	                 push 0xffffffffffffffff	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002b27	            0x6a00	                                  push 0	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002b29	    0x41b8c0004001	                      mov r8d, 0x14000c0	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002b2f	      0xbe01000000	                              mov esi, 1	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002b34	          0x4801d1	                            add rcx, rdx	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002b37	      0xe800000000	                          call 0x4002b3c	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002b3c	        0x4883c418	                           add rsp, 0x18	      1840	vmalloc.c	FUNCTION_72	CALL_1
0x4002b40	              0xc3	                                     ret	      1842	vmalloc.c	FUNCTION_72
unmap_kernel_range_noflush	IF,0:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,0:WHILE,0:DO,0	2
0x4000a40	          0x4801fe	                            add rsi, rdi	      1328	vmalloc.c	FUNCTION_48	CALL_1
0x4000a43	      0xe908fdffff	               jmp sym.vunmap_page_range	      1328	vmalloc.c	FUNCTION_48	CALL_1
s_next	IF,0:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,1:WHILE,0:DO,0	3
0x4000660	          0x4889f7	                            mov rdi, rsi	      2659	vmalloc.c	FUNCTION_96
0x4000663	    0x48c7c6000000	                              mov rsi, 0	      2660	vmalloc.c	FUNCTION_96	CALL_1
0x400066a	      0xe900000000	                           jmp 0x400066f	      2660	vmalloc.c	FUNCTION_96	CALL_1
unregister_vmap_purge_notifier	IF,0:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,1:WHILE,0:DO,0	3
0x4000350	          0x4889fe	                            mov rsi, rdi	       548	vmalloc.c	FUNCTION_20
0x4000353	    0x48c7c7000000	                              mov rdi, 0	       549	vmalloc.c	FUNCTION_20	CALL_1
0x400035a	      0xe900000000	                           jmp 0x400035f	       549	vmalloc.c	FUNCTION_20	CALL_1
pvm_find_next_prev	IF,4:FOR,0:SWITCH,0:functions,0:ELSE,3:CALL,5:WHILE,1:DO,0	57
0x40005b0	    0x488b05000000	            mov rax, qword [0x040005b7] 	      2397	vmalloc.c	FUNCTION_91
0x40005b7	          0x4885c0	                           test rax, rax	      2400	vmalloc.c	FUNCTION_91	WHILE_1
0x40005ba	     0xf8496000000	                            je 0x4000656	      2400	vmalloc.c	FUNCTION_91	WHILE_1
0x40005c0	            0x4154	                                push r12	      2396	vmalloc.c	FUNCTION_91
0x40005c2	          0x4989d4	                            mov r12, rdx	      2396	vmalloc.c	FUNCTION_91
0x40005c5	              0x55	                                push rbp	      2396	vmalloc.c	FUNCTION_91
0x40005c6	          0x4889f5	                            mov rbp, rsi	      2396	vmalloc.c	FUNCTION_91
0x40005c9	              0x53	                                push rbx	      2396	vmalloc.c	FUNCTION_91
0x40005ca	            0xeb0c	                           jmp 0x40005d8	      2396	vmalloc.c	FUNCTION_91
0x40005cc	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      2403	vmalloc.c	FUNCTION_91	WHILE_1	IF_1
0x40005d0	          0x4885db	                           test rbx, rbx	      2400	vmalloc.c	FUNCTION_91	WHILE_1
0x40005d3	            0x7417	                            je 0x40005ec	      2400	vmalloc.c	FUNCTION_91	WHILE_1
0x40005d5	          0x4889d8	                            mov rax, rbx	      2400	vmalloc.c	FUNCTION_91	WHILE_1
0x40005d8	        0x488b48f0	             mov rcx, qword [rax - 0x10]	      2402	vmalloc.c	FUNCTION_91	WHILE_1	IF_1
0x40005dc	          0x4839f9	                            cmp rcx, rdi	      2402	vmalloc.c	FUNCTION_91	WHILE_1	IF_1
0x40005df	            0x77eb	                            ja 0x40005cc	      2402	vmalloc.c	FUNCTION_91	WHILE_1	IF_1
0x40005e1	            0x733c	                           jae 0x400061f	      2404	vmalloc.c	FUNCTION_91	WHILE_1	ELSE_1	IF_2
0x40005e3	        0x488b5808	                mov rbx, qword [rax + 8]	      2405	vmalloc.c	FUNCTION_91	WHILE_1	ELSE_1	IF_2
0x40005e7	          0x4885db	                           test rbx, rbx	      2400	vmalloc.c	FUNCTION_91	WHILE_1
0x40005ea	            0x75e9	                           jne 0x40005d5	      2400	vmalloc.c	FUNCTION_91	WHILE_1
0x40005ec	          0x4889c2	                            mov rdx, rax	      2410	vmalloc.c	FUNCTION_91	IF_3
0x40005ef	        0x4883ea18	                           sub rdx, 0x18	      2410	vmalloc.c	FUNCTION_91	IF_3
0x40005f3	            0x745d	                            je 0x4000652	      2410	vmalloc.c	FUNCTION_91	IF_3
0x40005f5	          0x4839f9	                            cmp rcx, rdi	      2413	vmalloc.c	FUNCTION_91	IF_4
0x40005f8	            0x762e	                           jbe 0x4000628	      2413	vmalloc.c	FUNCTION_91	IF_4
0x40005fa	        0x48895500	                    mov qword [rbp], rdx	      2414	vmalloc.c	FUNCTION_91	IF_4
0x40005fe	          0x4889c7	                            mov rdi, rax	      2415	vmalloc.c	FUNCTION_91	IF_4	CALL_3
0x4000601	      0xe800000000	                          call 0x4000606	      2415	vmalloc.c	FUNCTION_91	IF_4	CALL_3
0x4000606	        0x488d50e8	                   lea rdx, [rax - 0x18]	      2378	vmalloc.c	FUNCTION_90	CALL_1
0x400060a	          0x4885c0	                           test rax, rax	      2378	vmalloc.c	FUNCTION_90	CALL_1
0x400060d	      0xb801000000	                              mov eax, 1	      2420	vmalloc.c	FUNCTION_91
0x4000612	        0x480f45da	                         cmovne rbx, rdx	      2378	vmalloc.c	FUNCTION_90	CALL_1
0x4000616	        0x49891c24	                    mov qword [r12], rbx	      2415	vmalloc.c	FUNCTION_91	IF_4	CALL_3
0x400061a	              0x5b	                                 pop rbx	      2421	vmalloc.c	FUNCTION_91
0x400061b	              0x5d	                                 pop rbp	      2421	vmalloc.c	FUNCTION_91
0x400061c	            0x415c	                                 pop r12	      2421	vmalloc.c	FUNCTION_91
0x400061e	              0xc3	                                     ret	      2421	vmalloc.c	FUNCTION_91
0x400061f	          0x4889c2	                            mov rdx, rax	      2410	vmalloc.c	FUNCTION_91	IF_3
0x4000622	        0x4883ea18	                           sub rdx, 0x18	      2410	vmalloc.c	FUNCTION_91	IF_3
0x4000626	            0x742a	                            je 0x4000652	      2410	vmalloc.c	FUNCTION_91	IF_3
0x4000628	        0x49891424	                    mov qword [r12], rdx	      2417	vmalloc.c	FUNCTION_91	ELSE_3
0x400062c	          0x4889c7	                            mov rdi, rax	      2418	vmalloc.c	FUNCTION_91	ELSE_3	CALL_5
0x400062f	      0xe800000000	                          call 0x4000634	      2418	vmalloc.c	FUNCTION_91	ELSE_3	CALL_5
0x4000634	        0x488d50e8	                   lea rdx, [rax - 0x18]	      2378	vmalloc.c	FUNCTION_90	CALL_1
0x4000638	          0x4885c0	                           test rax, rax	      2378	vmalloc.c	FUNCTION_90	CALL_1
0x400063b	      0xb800000000	                              mov eax, 0	      2378	vmalloc.c	FUNCTION_90	CALL_1
0x4000640	        0x480f45c2	                         cmovne rax, rdx	      2378	vmalloc.c	FUNCTION_90	CALL_1
0x4000644	        0x48894500	                    mov qword [rbp], rax	      2418	vmalloc.c	FUNCTION_91	ELSE_3	CALL_5
0x4000648	      0xb801000000	                              mov eax, 1	      2420	vmalloc.c	FUNCTION_91
0x400064d	              0x5b	                                 pop rbx	      2421	vmalloc.c	FUNCTION_91
0x400064e	              0x5d	                                 pop rbp	      2421	vmalloc.c	FUNCTION_91
0x400064f	            0x415c	                                 pop r12	      2421	vmalloc.c	FUNCTION_91
0x4000651	              0xc3	                                     ret	      2421	vmalloc.c	FUNCTION_91
0x4000652	            0x31c0	                            xor eax, eax	      2411	vmalloc.c	FUNCTION_91	IF_3
0x4000654	            0xebc4	                           jmp 0x400061a	      2411	vmalloc.c	FUNCTION_91	IF_3
0x4000656	            0x31c0	                            xor eax, eax	      2411	vmalloc.c	FUNCTION_91	IF_3
0x4000658	              0xc3	                                     ret	      2421	vmalloc.c	FUNCTION_91
get_vm_area	IF,0:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,2:WHILE,0:DO,0	12
0x4002470	    0x488b0d000000	            mov rcx, qword [0x04002477] 	      1447	vmalloc.c	FUNCTION_56	CALL_1
0x4002477	    0x48b8ffffffff	              movabs rax, 0x1fffffffffff	      1447	vmalloc.c	FUNCTION_56	CALL_1
0x4002481	          0xff3424	                        push qword [rsp]	      1447	vmalloc.c	FUNCTION_56	CALL_1
0x4002484	      0x68c0004001	                          push 0x14000c0	      1447	vmalloc.c	FUNCTION_56	CALL_1
0x4002489	          0x4889f2	                            mov rdx, rsi	      1446	vmalloc.c	FUNCTION_56
0x400248c	    0x41b9ffffffff	                     mov r9d, 0xffffffff	      1447	vmalloc.c	FUNCTION_56	CALL_1
0x4002492	      0xbe01000000	                              mov esi, 1	      1447	vmalloc.c	FUNCTION_56	CALL_1
0x4002497	        0x4c8d0401	                     lea r8, [rcx + rax]	      1447	vmalloc.c	FUNCTION_56	CALL_1
0x400249b	      0xe830f3ffff	             call sym.__get_vm_area_node	      1447	vmalloc.c	FUNCTION_56	CALL_1
0x40024a0	              0x5a	                                 pop rdx	      1447	vmalloc.c	FUNCTION_56	CALL_1
0x40024a1	              0x59	                                 pop rcx	      1447	vmalloc.c	FUNCTION_56	CALL_1
0x40024a2	              0xc3	                                     ret	      1450	vmalloc.c	FUNCTION_56
free_work	IF,0:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,4:WHILE,0:DO,0	14
0x4002630	            0x31c0	                            xor eax, eax	       234	llist.h	FUNCTION_154	CALL_1
0x4002632	        0x488747f8	               xchg qword [rdi - 8], rax	       234	llist.h	FUNCTION_154	CALL_1
0x4002636	          0x4885c0	                           test rax, rax	        54	vmalloc.c	FUNCTION_1	CALL_3
0x4002639	            0x741a	                            je 0x4002655	        54	vmalloc.c	FUNCTION_1	CALL_3
0x400263b	              0x53	                                push rbx	        50	vmalloc.c	FUNCTION_1
0x400263c	          0x4889c7	                            mov rdi, rax	        50	vmalloc.c	FUNCTION_1
0x400263f	          0x488b1f	                    mov rbx, qword [rdi]	        54	vmalloc.c	FUNCTION_1	CALL_3
0x4002642	      0xbe01000000	                              mov esi, 1	        55	vmalloc.c	FUNCTION_1	CALL_4
0x4002647	      0xe834ffffff	                       call sym.__vunmap	        55	vmalloc.c	FUNCTION_1	CALL_4
0x400264c	          0x4885db	                           test rbx, rbx	        54	vmalloc.c	FUNCTION_1	CALL_3
0x400264f	          0x4889df	                            mov rdi, rbx	        54	vmalloc.c	FUNCTION_1	CALL_3
0x4002652	            0x75eb	                           jne 0x400263f	        54	vmalloc.c	FUNCTION_1	CALL_3
0x4002654	              0x5b	                                 pop rbx	        56	vmalloc.c	FUNCTION_1
0x4002655	            0xf3c3	                                     ret	        56	vmalloc.c	FUNCTION_1
map_vm_area	IF,0:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,2:WHILE,0:DO,0	15
0x4001010	          0x4989f8	                             mov r8, rdi	      1351	vmalloc.c	FUNCTION_50
0x4001013	        0x488b7f08	                mov rdi, qword [rdi + 8]	      1352	vmalloc.c	FUNCTION_50
0x4001017	          0x4989f1	                             mov r9, rsi	      1351	vmalloc.c	FUNCTION_50
0x400101a	        0x498b4010	              mov rax, qword [r8 + 0x10]	      1351	vmalloc.c	FUNCTION_50
0x400101e	      0x41f6401840	            test byte [r8 + 0x18], 0x40 	       119	vmalloc.h	FUNCTION_157	IF_1
0x4001023	    0x488d8800f0ff	                 lea rcx, [rax - 0x1000]	       119	vmalloc.h	FUNCTION_157	IF_1
0x400102a	        0x480f44c1	                          cmove rax, rcx	       119	vmalloc.h	FUNCTION_157	IF_1
0x400102e	          0x4889d1	                            mov rcx, rdx	       243	vmalloc.c	FUNCTION_12	CALL_1
0x4001031	          0x4c89ca	                             mov rdx, r9	       243	vmalloc.c	FUNCTION_12	CALL_1
0x4001034	        0x488d3407	                    lea rsi, [rdi + rax]	       243	vmalloc.c	FUNCTION_12	CALL_1
0x4001038	      0xe883fcffff	        call sym.vmap_page_range_noflush	       243	vmalloc.c	FUNCTION_12	CALL_1
0x400103d	      0xba00000000	                              mov edx, 0	      1358	vmalloc.c	FUNCTION_50
0x4001042	            0x85c0	                           test eax, eax	      1358	vmalloc.c	FUNCTION_50
0x4001044	           0xf4fc2	                          cmovg eax, edx	      1358	vmalloc.c	FUNCTION_50
0x4001047	              0xc3	                                     ret	      1359	vmalloc.c	FUNCTION_50
remap_vmalloc_range	IF,0:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,1:WHILE,0:DO,0	7
0x4000590	          0x488b07	                    mov rax, qword [rdi]	      2305	vmalloc.c	FUNCTION_85
0x4000593	        0x488b4f08	                mov rcx, qword [rdi + 8]	      2303	vmalloc.c	FUNCTION_85	CALL_1
0x4000597	        0x48c1e20c	                            shl rdx, 0xc	      2303	vmalloc.c	FUNCTION_85	CALL_1
0x400059b	          0x4801f2	                            add rdx, rsi	      2303	vmalloc.c	FUNCTION_85	CALL_1
0x400059e	          0x4829c1	                            sub rcx, rax	      2303	vmalloc.c	FUNCTION_85	CALL_1
0x40005a1	          0x4889c6	                            mov rsi, rax	      2303	vmalloc.c	FUNCTION_85	CALL_1
0x40005a4	      0xe937ffffff	     jmp sym.remap_vmalloc_range_partial	      2303	vmalloc.c	FUNCTION_85	CALL_1
__vmalloc_node_flags_caller	IF,0:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,1:WHILE,0:DO,0	13
0x4002d50	          0x4189d0	                            mov r8d, edx	      1825	vmalloc.c	FUNCTION_71
0x4002d53	    0x488b15000000	            mov rdx, qword [0x04002d5a] 	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002d5a	    0x49b963010000	           movabs r9, 0x8000000000000163	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002d64	    0x4c230d000000	              and r9, qword [0x04002d6b]	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002d6b	    0x48b8ffffffff	              movabs rax, 0x1fffffffffff	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002d75	              0x51	                                push rcx	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002d76	              0x56	                                push rsi	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002d77	            0x6a00	                                  push 0	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002d79	      0xbe01000000	                              mov esi, 1	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002d7e	        0x488d0c10	                    lea rcx, [rax + rdx]	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002d82	      0xe800000000	                          call 0x4002d87	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002d87	        0x4883c418	                           add rsp, 0x18	      1826	vmalloc.c	FUNCTION_71	CALL_1
0x4002d8b	              0xc3	                                     ret	      1827	vmalloc.c	FUNCTION_71
pcpu_free_vm_areas	IF,0:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,0:WHILE,0:DO,0	19
0x4003390	            0x85f6	                           test esi, esi	      2644	vmalloc.c	FUNCTION_94	FOR_1
0x4003392	            0x4154	                                push r12	      2641	vmalloc.c	FUNCTION_94
0x4003394	          0x4989fc	                            mov r12, rdi	      2641	vmalloc.c	FUNCTION_94
0x4003397	              0x55	                                push rbp	      2641	vmalloc.c	FUNCTION_94
0x4003398	              0x53	                                push rbx	      2641	vmalloc.c	FUNCTION_94
0x4003399	            0x7e1c	                           jle 0x40033b7	      2644	vmalloc.c	FUNCTION_94	FOR_1
0x400339b	          0x8d46ff	                      lea eax, [rsi - 1]	      2644	vmalloc.c	FUNCTION_94	FOR_1
0x400339e	          0x4889fb	                            mov rbx, rdi	      2644	vmalloc.c	FUNCTION_94	FOR_1
0x40033a1	      0x488d6cc708	              lea rbp, [rdi + rax*8 + 8]	      2644	vmalloc.c	FUNCTION_94	FOR_1
0x40033a6	          0x488b3b	                    mov rdi, qword [rbx]	      2645	vmalloc.c	FUNCTION_94	CALL_1
0x40033a9	        0x4883c308	                              add rbx, 8	      2645	vmalloc.c	FUNCTION_94	CALL_1
0x40033ad	      0xe800000000	                          call 0x40033b2	      2645	vmalloc.c	FUNCTION_94	CALL_1
0x40033b2	          0x4839eb	                            cmp rbx, rbp	      2644	vmalloc.c	FUNCTION_94	FOR_1
0x40033b5	            0x75ef	                           jne 0x40033a6	      2644	vmalloc.c	FUNCTION_94	FOR_1
0x40033b7	              0x5b	                                 pop rbx	      2647	vmalloc.c	FUNCTION_94
0x40033b8	          0x4c89e7	                            mov rdi, r12	      2646	vmalloc.c	FUNCTION_94	CALL_2
0x40033bb	              0x5d	                                 pop rbp	      2647	vmalloc.c	FUNCTION_94
0x40033bc	            0x415c	                                 pop r12	      2647	vmalloc.c	FUNCTION_94
0x40033be	      0xe900000000	                   jmp section_end..text	      2646	vmalloc.c	FUNCTION_94	CALL_2
pvm_determine_end	IF,1:FOR,0:SWITCH,0:functions,0:ELSE,1:CALL,3:WHILE,1:DO,0	38
0x40002c0	            0x4154	                                push r12	      2442	vmalloc.c	FUNCTION_92
0x40002c2	              0x55	                                push rbp	      2442	vmalloc.c	FUNCTION_92
0x40002c3	          0x48f7da	                                 neg rdx	      2443	vmalloc.c	FUNCTION_92
0x40002c6	              0x53	                                push rbx	      2442	vmalloc.c	FUNCTION_92
0x40002c7	    0x48bbffffffff	              movabs rbx, 0x1fffffffffff	      2443	vmalloc.c	FUNCTION_92
0x40002d1	    0x48031d000000	             add rbx, qword [0x040002d8]	      2443	vmalloc.c	FUNCTION_92
0x40002d8	          0x488b07	                    mov rax, qword [rdi]	      2446	vmalloc.c	FUNCTION_92	IF_1
0x40002db	          0x4821d3	                            and rbx, rdx	      2443	vmalloc.c	FUNCTION_92
0x40002de	          0x4885c0	                           test rax, rax	      2446	vmalloc.c	FUNCTION_92	IF_1
0x40002e1	            0x740a	                            je 0x40002ed	      2446	vmalloc.c	FUNCTION_92	IF_1
0x40002e3	          0x482310	                    and rdx, qword [rax]	      2447	vmalloc.c	FUNCTION_92	CALL_1
0x40002e6	          0x4839d3	                            cmp rbx, rdx	      2447	vmalloc.c	FUNCTION_92	CALL_1
0x40002e9	        0x480f47da	                          cmova rbx, rdx	      2447	vmalloc.c	FUNCTION_92	CALL_1
0x40002ed	          0x488b16	                    mov rdx, qword [rsi]	      2451	vmalloc.c	FUNCTION_92	ELSE_1	WHILE_1
0x40002f0	          0x4885d2	                           test rdx, rdx	      2451	vmalloc.c	FUNCTION_92	ELSE_1	WHILE_1
0x40002f3	            0x743b	                            je 0x4000330	      2451	vmalloc.c	FUNCTION_92	ELSE_1	WHILE_1
0x40002f5	        0x483b5a08	                cmp rbx, qword [rdx + 8]	      2451	vmalloc.c	FUNCTION_92	ELSE_1	WHILE_1
0x40002f9	          0x4989f4	                            mov r12, rsi	      2451	vmalloc.c	FUNCTION_92	ELSE_1	WHILE_1
0x40002fc	          0x4889fd	                            mov rbp, rdi	      2451	vmalloc.c	FUNCTION_92	ELSE_1	WHILE_1
0x40002ff	            0x7215	                            jb 0x4000316	      2451	vmalloc.c	FUNCTION_92	ELSE_1	WHILE_1
0x4000301	            0xeb2d	                           jmp 0x4000330	      2451	vmalloc.c	FUNCTION_92	ELSE_1	WHILE_1
0x4000303	        0x488d50e8	                   lea rdx, [rax - 0x18]	      2378	vmalloc.c	FUNCTION_90	CALL_1
0x4000307	          0x4885d2	                           test rdx, rdx	      2451	vmalloc.c	FUNCTION_92	ELSE_1	WHILE_1
0x400030a	        0x49891424	                    mov qword [r12], rdx	      2453	vmalloc.c	FUNCTION_92	ELSE_1	WHILE_1	CALL_3
0x400030e	            0x7420	                            je 0x4000330	      2451	vmalloc.c	FUNCTION_92	ELSE_1	WHILE_1
0x4000310	        0x483b58f0	             cmp rbx, qword [rax - 0x10]	      2451	vmalloc.c	FUNCTION_92	ELSE_1	WHILE_1
0x4000314	            0x731a	                           jae 0x4000330	      2451	vmalloc.c	FUNCTION_92	ELSE_1	WHILE_1
0x4000316	        0x488d7a18	                   lea rdi, [rdx + 0x18]	      2453	vmalloc.c	FUNCTION_92	ELSE_1	WHILE_1	CALL_3
0x400031a	        0x48895500	                    mov qword [rbp], rdx	      2452	vmalloc.c	FUNCTION_92	ELSE_1	WHILE_1
0x400031e	      0xe800000000	                          call 0x4000323	      2453	vmalloc.c	FUNCTION_92	ELSE_1	WHILE_1	CALL_3
0x4000323	          0x4885c0	                           test rax, rax	      2378	vmalloc.c	FUNCTION_90	CALL_1
0x4000326	            0x75db	                           jne 0x4000303	      2378	vmalloc.c	FUNCTION_90	CALL_1
0x4000328	    0x49c704240000	                      mov qword [r12], 0	      2453	vmalloc.c	FUNCTION_92	ELSE_1	WHILE_1	CALL_3
0x4000330	          0x4889d8	                            mov rax, rbx	      2457	vmalloc.c	FUNCTION_92
0x4000333	              0x5b	                                 pop rbx	      2457	vmalloc.c	FUNCTION_92
0x4000334	              0x5d	                                 pop rbp	      2457	vmalloc.c	FUNCTION_92
0x4000335	            0x415c	                                 pop r12	      2457	vmalloc.c	FUNCTION_92
0x4000337	              0xc3	                                     ret	      2457	vmalloc.c	FUNCTION_92
__get_vm_area_caller	IF,0:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,1:WHILE,0:DO,0	11
0x4002440	            0x4150	                                 push r8	      1432	vmalloc.c	FUNCTION_55	CALL_1
0x4002442	      0x68c0004001	                          push 0x14000c0	      1432	vmalloc.c	FUNCTION_55	CALL_1
0x4002447	          0x4989c8	                             mov r8, rcx	      1432	vmalloc.c	FUNCTION_55	CALL_1
0x400244a	    0x41b9ffffffff	                     mov r9d, 0xffffffff	      1432	vmalloc.c	FUNCTION_55	CALL_1
0x4002450	          0x4889d1	                            mov rcx, rdx	      1432	vmalloc.c	FUNCTION_55	CALL_1
0x4002453	          0x4889f2	                            mov rdx, rsi	      1432	vmalloc.c	FUNCTION_55	CALL_1
0x4002456	      0xbe01000000	                              mov esi, 1	      1432	vmalloc.c	FUNCTION_55	CALL_1
0x400245b	      0xe870f3ffff	             call sym.__get_vm_area_node	      1432	vmalloc.c	FUNCTION_55	CALL_1
0x4002460	              0x5a	                                 pop rdx	      1432	vmalloc.c	FUNCTION_55	CALL_1
0x4002461	              0x59	                                 pop rcx	      1432	vmalloc.c	FUNCTION_55	CALL_1
0x4002462	              0xc3	                                     ret	      1434	vmalloc.c	FUNCTION_55
vzalloc_node	IF,0:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,1:WHILE,0:DO,0	13
0x4002d10	    0x488b15000000	            mov rdx, qword [0x04002d17] 	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002d17	    0x49b963010000	           movabs r9, 0x8000000000000163	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002d21	    0x4c230d000000	              and r9, qword [0x04002d28]	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002d28	          0xff3424	                        push qword [rsp]	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002d2b	    0x48b9ffffffff	              movabs rcx, 0x1fffffffffff	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002d35	              0x56	                                push rsi	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002d36	            0x6a00	                                  push 0	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002d38	    0x41b8c0804001	                      mov r8d, 0x14080c0	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002d3e	      0xbe01000000	                              mov esi, 1	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002d43	          0x4801d1	                            add rcx, rdx	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002d46	      0xe800000000	                          call 0x4002d4b	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002d4b	        0x4883c418	                           add rsp, 0x18	      1918	vmalloc.c	FUNCTION_76	CALL_1
0x4002d4f	              0xc3	                                     ret	      1920	vmalloc.c	FUNCTION_76
register_vmap_purge_notifier	IF,0:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,1:WHILE,0:DO,0	3
0x4000340	          0x4889fe	                            mov rsi, rdi	       542	vmalloc.c	FUNCTION_19
0x4000343	    0x48c7c7000000	                              mov rdi, 0	       543	vmalloc.c	FUNCTION_19	CALL_1
0x400034a	      0xe900000000	                           jmp 0x400034f	       543	vmalloc.c	FUNCTION_19	CALL_1
vm_area_register_early	IF,0:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,3:WHILE,0:DO,0	15
0x400019d	          0x8b1402	              mov edx, dword [rdx + rax]	       399	pgtable_types.h	FUNCTION_138	IF_1	CALL_1
0x40001a0	    0x48b8ff0f0000	          movabs rax, 0xfff0000000000fff	       399	pgtable_types.h	FUNCTION_138	IF_1	CALL_1
0x40001aa	          0x4989d0	                             mov r8, rdx	       399	pgtable_types.h	FUNCTION_138	IF_1	CALL_1
0x40001ad	    0x4181e0800000	                           and r8d, 0x80	       399	pgtable_types.h	FUNCTION_138	IF_1	CALL_1
0x40001b4	        0x480f45c6	                         cmovne rax, rsi	       399	pgtable_types.h	FUNCTION_138	IF_1	CALL_1
0x40001b8	          0x4889d6	                            mov rsi, rdx	       301	vmalloc.c	FUNCTION_14	CALL_14
0x40001bb	        0x4883e6fb	             and rsi, 0xfffffffffffffffb	       301	vmalloc.c	FUNCTION_14	CALL_14
0x40001bf	          0x4821f0	                            and rax, rsi	       301	vmalloc.c	FUNCTION_14	CALL_14
0x40001c2	        0x4883f863	                           cmp rax, 0x63	       301	vmalloc.c	FUNCTION_14	CALL_14
0x40001c6	     0xf85cc000000	                           jne 0x4000298	       301	vmalloc.c	FUNCTION_14	CALL_14
0x40001cc	    0x48f7c29fffff	            test rdx, 0xffffffffffffff9f	       302	vmalloc.c	FUNCTION_14	IF_4	CALL_16
0x40001d3	     0xf8486000000	                            je 0x400025f	       302	vmalloc.c	FUNCTION_14	IF_4	CALL_16
0x40001d9	          0x4d85c0	                             test r8, r8	       399	pgtable_types.h	FUNCTION_138	IF_1	CALL_1
0x40001dc	               0xf	                                 invalid	       399	pgtable_types.h	FUNCTION_138	IF_1	CALL_1
0x40001dd	              0x84	                                 invalid	       399	pgtable_types.h	FUNCTION_138	IF_1	CALL_1
vmalloc_32_user	IF,1:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,3:WHILE,0:DO,0	29
0x4002c50	    0x488b15000000	            mov rdx, qword [0x04002c57] 	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002c57	    0x49b963010000	           movabs r9, 0x8000000000000163	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002c61	    0x4c230d000000	              and r9, qword [0x04002c68]	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002c68	              0x53	                                push rbx	      1979	vmalloc.c	FUNCTION_79
0x4002c69	    0x48b9ffffffff	              movabs rcx, 0x1fffffffffff	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002c73	        0xff742408	                    push qword [rsp + 8]	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002c77	            0x6aff	                 push 0xffffffffffffffff	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002c79	            0x6a00	                                  push 0	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002c7b	    0x41b8c4804001	                      mov r8d, 0x14080c4	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002c81	          0x4801d1	                            add rcx, rdx	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002c84	      0xbe01000000	                              mov esi, 1	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002c89	      0xe800000000	                          call 0x4002c8e	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002c8e	        0x4883c418	                           add rsp, 0x18	      1985	vmalloc.c	FUNCTION_79	IF_1
0x4002c92	          0x4885c0	                           test rax, rax	      1985	vmalloc.c	FUNCTION_79	IF_1
0x4002c95	          0x4889c3	                            mov rbx, rax	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002c98	            0x741a	                            je 0x4002cb4	      1985	vmalloc.c	FUNCTION_79	IF_1
0x4002c9a	          0x4889c7	                            mov rdi, rax	      1471	vmalloc.c	FUNCTION_58	CALL_1
0x4002c9d	      0xe89ed3ffff	                 call sym.find_vmap_area	      1471	vmalloc.c	FUNCTION_58	CALL_1
0x4002ca2	            0x31d2	                            xor edx, edx	      1475	vmalloc.c	FUNCTION_58
0x4002ca4	          0x4885c0	                           test rax, rax	      1472	vmalloc.c	FUNCTION_58	IF_1
0x4002ca7	            0x7406	                            je 0x4002caf	      1472	vmalloc.c	FUNCTION_58	IF_1
0x4002ca9	        0xf6401004	               test byte [rax + 0x10], 4	      1472	vmalloc.c	FUNCTION_58	IF_1
0x4002cad	            0x750a	                           jne 0x4002cb9	      1472	vmalloc.c	FUNCTION_58	IF_1
0x4002caf	      0x48834a1808	                or qword [rdx + 0x18], 8	      1987	vmalloc.c	FUNCTION_79	IF_1
0x4002cb4	          0x4889d8	                            mov rax, rbx	      1990	vmalloc.c	FUNCTION_79
0x4002cb7	              0x5b	                                 pop rbx	      1990	vmalloc.c	FUNCTION_79
0x4002cb8	              0xc3	                                     ret	      1990	vmalloc.c	FUNCTION_79
0x4002cb9	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      1473	vmalloc.c	FUNCTION_58	IF_1
0x4002cbd	            0xebf0	                           jmp 0x4002caf	      1473	vmalloc.c	FUNCTION_58	IF_1
vmalloc_sync_all	IF,0:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,0:WHILE,0:DO,0	1
0x4003380	            0xf3c3	                                     ret	      2314	vmalloc.c	FUNCTION_86
alloc_vm_area	IF,2:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,4:WHILE,0:DO,0	38
0x40027a0	              0x55	                                push rbp	      2344	vmalloc.c	FUNCTION_88
0x40027a1	              0x53	                                push rbx	      2344	vmalloc.c	FUNCTION_88
0x40027a2	    0x48b8ffffffff	              movabs rax, 0x1fffffffffff	      1455	vmalloc.c	FUNCTION_57	CALL_1
0x40027ac	      0xba01000000	                              mov edx, 1	      1455	vmalloc.c	FUNCTION_57	CALL_1
0x40027b1	    0x41b9ffffffff	                     mov r9d, 0xffffffff	      1455	vmalloc.c	FUNCTION_57	CALL_1
0x40027b7	          0x4889fd	                            mov rbp, rdi	      2344	vmalloc.c	FUNCTION_88
0x40027ba	        0x4883ec08	                              sub rsp, 8	      2344	vmalloc.c	FUNCTION_88
0x40027be	    0x488b0d000000	            mov rcx, qword [0x040027c5] 	      1455	vmalloc.c	FUNCTION_57	CALL_1
0x40027c5	        0x48893424	                    mov qword [rsp], rsi	      2344	vmalloc.c	FUNCTION_88
0x40027c9	        0xff742418	                 push qword [rsp + 0x18]	      1455	vmalloc.c	FUNCTION_57	CALL_1
0x40027cd	      0xbe01000000	                              mov esi, 1	      1455	vmalloc.c	FUNCTION_57	CALL_1
0x40027d2	      0x68c0004001	                          push 0x14000c0	      1455	vmalloc.c	FUNCTION_57	CALL_1
0x40027d7	        0x4c8d0401	                     lea r8, [rcx + rax]	      1455	vmalloc.c	FUNCTION_57	CALL_1
0x40027db	      0xe8f0efffff	             call sym.__get_vm_area_node	      1455	vmalloc.c	FUNCTION_57	CALL_1
0x40027e0	          0x4885c0	                           test rax, rax	      2349	vmalloc.c	FUNCTION_88	IF_1
0x40027e3	          0x4889c3	                            mov rbx, rax	      1455	vmalloc.c	FUNCTION_57	CALL_1
0x40027e6	              0x5a	                                 pop rdx	      2349	vmalloc.c	FUNCTION_88	IF_1
0x40027e7	              0x59	                                 pop rcx	      2349	vmalloc.c	FUNCTION_88	IF_1
0x40027e8	            0x742d	                            je 0x4002817	      2349	vmalloc.c	FUNCTION_88	IF_1
0x40027ea	      0x48833c2400	                      cmp qword [rsp], 0	      2356	vmalloc.c	FUNCTION_88	IF_2	CALL_3
0x40027ef	        0x488b7308	                mov rsi, qword [rbx + 8]	      2356	vmalloc.c	FUNCTION_88	IF_2	CALL_3
0x40027f3	    0x41b800000000	                              mov r8d, 0	      2356	vmalloc.c	FUNCTION_88	IF_2	CALL_3
0x40027f9	    0x48c7c1000000	                              mov rcx, 0	      2356	vmalloc.c	FUNCTION_88	IF_2	CALL_3
0x4002800	          0x4889ea	                            mov rdx, rbp	      2356	vmalloc.c	FUNCTION_88	IF_2	CALL_3
0x4002803	    0x48c7c7000000	                              mov rdi, 0	      2356	vmalloc.c	FUNCTION_88	IF_2	CALL_3
0x400280a	        0x4c0f45c4	                          cmovne r8, rsp	      2356	vmalloc.c	FUNCTION_88	IF_2	CALL_3
0x400280e	      0xe800000000	                          call 0x4002813	      2356	vmalloc.c	FUNCTION_88	IF_2	CALL_3
0x4002813	            0x85c0	                           test eax, eax	      2356	vmalloc.c	FUNCTION_88	IF_2	CALL_3
0x4002815	            0x750a	                           jne 0x4002821	      2356	vmalloc.c	FUNCTION_88	IF_2	CALL_3
0x4002817	        0x4883c408	                              add rsp, 8	      2363	vmalloc.c	FUNCTION_88
0x400281b	          0x4889d8	                            mov rax, rbx	      2363	vmalloc.c	FUNCTION_88
0x400281e	              0x5b	                                 pop rbx	      2363	vmalloc.c	FUNCTION_88
0x400281f	              0x5d	                                 pop rbp	      2363	vmalloc.c	FUNCTION_88
0x4002820	              0xc3	                                     ret	      2363	vmalloc.c	FUNCTION_88
0x4002821	          0x4889df	                            mov rdi, rbx	      2358	vmalloc.c	FUNCTION_88	IF_2	CALL_4
0x4002824	            0x31db	                            xor ebx, ebx	      2359	vmalloc.c	FUNCTION_88	IF_2
0x4002826	      0xe800000000	                          call 0x400282b	      2358	vmalloc.c	FUNCTION_88	IF_2	CALL_4
0x400282b	            0xebea	                           jmp 0x4002817	      2359	vmalloc.c	FUNCTION_88	IF_2
f	IF,1:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,0:WHILE,0:DO,0	7
0x40000a0	          0x4885c9	                           test rcx, rcx	      2322	vmalloc.c	FUNCTION_87	IF_1
0x40000a3	            0x740a	                            je 0x40000af	      2322	vmalloc.c	FUNCTION_87	IF_1
0x40000a5	          0x488b01	                    mov rax, qword [rcx]	      2323	vmalloc.c	FUNCTION_87	IF_1
0x40000a8	          0x488938	                    mov qword [rax], rdi	      2323	vmalloc.c	FUNCTION_87	IF_1
0x40000ab	        0x48830108	                      add qword [rcx], 8	      2324	vmalloc.c	FUNCTION_87	IF_1
0x40000af	            0x31c0	                            xor eax, eax	      2327	vmalloc.c	FUNCTION_87
0x40000b1	              0xc3	                                     ret	      2327	vmalloc.c	FUNCTION_87
vzalloc	IF,0:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,1:WHILE,0:DO,0	13
0x4002cc0	    0x488b15000000	            mov rdx, qword [0x04002cc7] 	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002cc7	    0x49b963010000	           movabs r9, 0x8000000000000163	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002cd1	    0x4c230d000000	              and r9, qword [0x04002cd8]	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002cd8	          0xff3424	                        push qword [rsp]	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002cdb	    0x48b9ffffffff	              movabs rcx, 0x1fffffffffff	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002ce5	            0x6aff	                 push 0xffffffffffffffff	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002ce7	            0x6a00	                                  push 0	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002ce9	    0x41b8c0804001	                      mov r8d, 0x14080c0	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002cef	      0xbe01000000	                              mov esi, 1	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002cf4	          0x4801d1	                            add rcx, rdx	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002cf7	      0xe800000000	                          call 0x4002cfc	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002cfc	        0x4883c418	                           add rsp, 0x18	      1857	vmalloc.c	FUNCTION_73	CALL_1
0x4002d00	              0xc3	                                     ret	      1859	vmalloc.c	FUNCTION_73
vmap	IF,3:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,5:WHILE,0:DO,0	47
0x40026f0	            0x4155	                                push r13	      1640	vmalloc.c	FUNCTION_65
0x40026f2	            0x4154	                                push r12	      1640	vmalloc.c	FUNCTION_65
0x40026f4	          0x4989d5	                            mov r13, rdx	      1640	vmalloc.c	FUNCTION_65
0x40026f7	              0x55	                                push rbp	      1640	vmalloc.c	FUNCTION_65
0x40026f8	              0x53	                                push rbx	      1640	vmalloc.c	FUNCTION_65
0x40026f9	            0x89f3	                            mov ebx, esi	      1640	vmalloc.c	FUNCTION_65
0x40026fb	          0x4989fc	                            mov r12, rdi	      1640	vmalloc.c	FUNCTION_65
0x40026fe	          0x4889cd	                            mov rbp, rcx	      1640	vmalloc.c	FUNCTION_65
0x4002701	      0xe800000000	                          call 0x4002706	      1644	vmalloc.c	FUNCTION_65	CALL_1
0x4002706	            0x89df	                            mov edi, ebx	      1646	vmalloc.c	FUNCTION_65	IF_1
0x4002708	    0x483b3d000000	            cmp rdi, qword [0x0400270f] 	      1646	vmalloc.c	FUNCTION_65	IF_1
0x400270f	            0x7765	                            ja 0x4002776	      1646	vmalloc.c	FUNCTION_65	IF_1
0x4002711	    0x488b0d000000	            mov rcx, qword [0x04002718] 	      1455	vmalloc.c	FUNCTION_57	CALL_1
0x4002718	    0x48b8ffffffff	              movabs rax, 0x1fffffffffff	      1455	vmalloc.c	FUNCTION_57	CALL_1
0x4002722	        0xff742420	                 push qword [rsp + 0x20]	      1455	vmalloc.c	FUNCTION_57	CALL_1
0x4002726	      0x68c0004001	                          push 0x14000c0	      1455	vmalloc.c	FUNCTION_57	CALL_1
0x400272b	        0x48c1e70c	                            shl rdi, 0xc	      1455	vmalloc.c	FUNCTION_57	CALL_1
0x400272f	          0x4c89ea	                            mov rdx, r13	      1455	vmalloc.c	FUNCTION_57	CALL_1
0x4002732	    0x41b9ffffffff	                     mov r9d, 0xffffffff	      1455	vmalloc.c	FUNCTION_57	CALL_1
0x4002738	      0xbe01000000	                              mov esi, 1	      1455	vmalloc.c	FUNCTION_57	CALL_1
0x400273d	        0x4c8d0401	                     lea r8, [rcx + rax]	      1455	vmalloc.c	FUNCTION_57	CALL_1
0x4002741	      0xe88af0ffff	             call sym.__get_vm_area_node	      1455	vmalloc.c	FUNCTION_57	CALL_1
0x4002746	          0x4889c3	                            mov rbx, rax	      1455	vmalloc.c	FUNCTION_57	CALL_1
0x4002749	          0x4885db	                           test rbx, rbx	      1651	vmalloc.c	FUNCTION_65	IF_2
0x400274c	              0x58	                                 pop rax	      1651	vmalloc.c	FUNCTION_65	IF_2
0x400274d	              0x5a	                                 pop rdx	      1651	vmalloc.c	FUNCTION_65	IF_2
0x400274e	            0x7426	                            je 0x4002776	      1651	vmalloc.c	FUNCTION_65	IF_2
0x4002750	          0x4c89e2	                            mov rdx, r12	      1654	vmalloc.c	FUNCTION_65	IF_3	CALL_4
0x4002753	          0x4889ee	                            mov rsi, rbp	      1654	vmalloc.c	FUNCTION_65	IF_3	CALL_4
0x4002756	          0x4889df	                            mov rdi, rbx	      1654	vmalloc.c	FUNCTION_65	IF_3	CALL_4
0x4002759	      0xe800000000	                          call 0x400275e	      1654	vmalloc.c	FUNCTION_65	IF_3	CALL_4
0x400275e	            0x85c0	                           test eax, eax	      1654	vmalloc.c	FUNCTION_65	IF_3	CALL_4
0x4002760	            0x750b	                           jne 0x400276d	      1654	vmalloc.c	FUNCTION_65	IF_3	CALL_4
0x4002762	        0x488b4308	                mov rax, qword [rbx + 8]	      1659	vmalloc.c	FUNCTION_65
0x4002766	              0x5b	                                 pop rbx	      1660	vmalloc.c	FUNCTION_65
0x4002767	              0x5d	                                 pop rbp	      1660	vmalloc.c	FUNCTION_65
0x4002768	            0x415c	                                 pop r12	      1660	vmalloc.c	FUNCTION_65
0x400276a	            0x415d	                                 pop r13	      1660	vmalloc.c	FUNCTION_65
0x400276c	              0xc3	                                     ret	      1660	vmalloc.c	FUNCTION_65
0x400276d	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1655	vmalloc.c	FUNCTION_65	IF_3	CALL_5
0x4002771	      0xe800000000	                          call 0x4002776	      1655	vmalloc.c	FUNCTION_65	IF_3	CALL_5
0x4002776	              0x5b	                                 pop rbx	      1660	vmalloc.c	FUNCTION_65
0x4002777	            0x31c0	                            xor eax, eax	      1656	vmalloc.c	FUNCTION_65	IF_3
0x4002779	              0x5d	                                 pop rbp	      1660	vmalloc.c	FUNCTION_65
0x400277a	            0x415c	                                 pop r12	      1660	vmalloc.c	FUNCTION_65
0x400277c	            0x415d	                                 pop r13	      1660	vmalloc.c	FUNCTION_65
0x400277e	              0xc3	                                     ret	      1660	vmalloc.c	FUNCTION_65
vmalloc_user	IF,1:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,3:WHILE,0:DO,0	29
0x4002b50	    0x488b15000000	            mov rdx, qword [0x04002b57] 	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002b57	    0x49b963010000	           movabs r9, 0x8000000000000163	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002b61	    0x4c230d000000	              and r9, qword [0x04002b68]	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002b68	              0x53	                                push rbx	      1870	vmalloc.c	FUNCTION_74
0x4002b69	    0x48b9ffffffff	              movabs rcx, 0x1fffffffffff	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002b73	        0xff742408	                    push qword [rsp + 8]	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002b77	            0x6aff	                 push 0xffffffffffffffff	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002b79	            0x6a00	                                  push 0	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002b7b	    0x41b8c0804001	                      mov r8d, 0x14080c0	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002b81	          0x4801d1	                            add rcx, rdx	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002b84	      0xbe00100000	                         mov esi, 0x1000	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002b89	      0xe800000000	                          call 0x4002b8e	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002b8e	        0x4883c418	                           add rsp, 0x18	      1878	vmalloc.c	FUNCTION_74	IF_1
0x4002b92	          0x4885c0	                           test rax, rax	      1878	vmalloc.c	FUNCTION_74	IF_1
0x4002b95	          0x4889c3	                            mov rbx, rax	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002b98	            0x741a	                            je 0x4002bb4	      1878	vmalloc.c	FUNCTION_74	IF_1
0x4002b9a	          0x4889c7	                            mov rdi, rax	      1471	vmalloc.c	FUNCTION_58	CALL_1
0x4002b9d	      0xe89ed4ffff	                 call sym.find_vmap_area	      1471	vmalloc.c	FUNCTION_58	CALL_1
0x4002ba2	            0x31d2	                            xor edx, edx	      1475	vmalloc.c	FUNCTION_58
0x4002ba4	          0x4885c0	                           test rax, rax	      1472	vmalloc.c	FUNCTION_58	IF_1
0x4002ba7	            0x7406	                            je 0x4002baf	      1472	vmalloc.c	FUNCTION_58	IF_1
0x4002ba9	        0xf6401004	               test byte [rax + 0x10], 4	      1472	vmalloc.c	FUNCTION_58	IF_1
0x4002bad	            0x750a	                           jne 0x4002bb9	      1472	vmalloc.c	FUNCTION_58	IF_1
0x4002baf	      0x48834a1808	                or qword [rdx + 0x18], 8	      1880	vmalloc.c	FUNCTION_74	IF_1
0x4002bb4	          0x4889d8	                            mov rax, rbx	      1883	vmalloc.c	FUNCTION_74
0x4002bb7	              0x5b	                                 pop rbx	      1883	vmalloc.c	FUNCTION_74
0x4002bb8	              0xc3	                                     ret	      1883	vmalloc.c	FUNCTION_74
0x4002bb9	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      1473	vmalloc.c	FUNCTION_58	IF_1
0x4002bbd	            0xebf0	                           jmp 0x4002baf	      1473	vmalloc.c	FUNCTION_58	IF_1
vmalloc_node	IF,0:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,2:WHILE,0:DO,0	13
0x4002bc0	    0x488b15000000	            mov rdx, qword [0x04002bc7] 	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002bc7	    0x49b963010000	           movabs r9, 0x8000000000000163	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002bd1	    0x4c230d000000	              and r9, qword [0x04002bd8]	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002bd8	          0xff3424	                        push qword [rsp]	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002bdb	    0x48b9ffffffff	              movabs rcx, 0x1fffffffffff	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002be5	              0x56	                                push rsi	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002be6	            0x6a00	                                  push 0	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002be8	    0x41b8c0004001	                      mov r8d, 0x14000c0	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002bee	      0xbe01000000	                              mov esi, 1	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002bf3	          0x4801d1	                            add rcx, rdx	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002bf6	      0xe800000000	                          call 0x4002bfb	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002bfb	        0x4883c418	                           add rsp, 0x18	      1899	vmalloc.c	FUNCTION_75	CALL_1
0x4002bff	              0xc3	                                     ret	      1901	vmalloc.c	FUNCTION_75
vmalloc_to_pfn	IF,0:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,2:WHILE,0:DO,0	4
0x40002a0	      0xe800000000	                          call 0x40002a5	       319	vmalloc.c	FUNCTION_15	CALL_2
0x40002a5	    0x482b05000000	             sub rax, qword [0x040002ac]	       319	vmalloc.c	FUNCTION_15	CALL_2
0x40002ac	        0x48c1f806	                              sar rax, 6	       319	vmalloc.c	FUNCTION_15	CALL_2
0x40002b0	              0xc3	                                     ret	       320	vmalloc.c	FUNCTION_15
vmalloc_exec	IF,0:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,2:WHILE,0:DO,0	13
0x4002d90	    0x488b15000000	            mov rdx, qword [0x04002d97] 	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002d97	    0x4c8b0d000000	              mov r9, qword [0x04002d9e]	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002d9e	    0x48b9ffffffff	              movabs rcx, 0x1fffffffffff	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002da8	          0xff3424	                        push qword [rsp]	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002dab	            0x6aff	                 push 0xffffffffffffffff	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002dad	    0x41b8c0004001	                      mov r8d, 0x14000c0	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002db3	            0x6a00	                                  push 0	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002db5	      0xbe01000000	                              mov esi, 1	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002dba	          0x4801d1	                            add rcx, rdx	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002dbd	    0x4181e1630100	                          and r9d, 0x163	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002dc4	      0xe800000000	                          call 0x4002dc9	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002dc9	        0x4883c418	                           add rsp, 0x18	      1941	vmalloc.c	FUNCTION_77	CALL_1
0x4002dcd	              0xc3	                                     ret	      1943	vmalloc.c	FUNCTION_77
vmalloc_32	IF,0:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,2:WHILE,0:DO,0	13
0x4002c00	    0x488b15000000	            mov rdx, qword [0x04002c07] 	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002c07	    0x49b963010000	           movabs r9, 0x8000000000000163	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002c11	    0x4c230d000000	              and r9, qword [0x04002c18]	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002c18	          0xff3424	                        push qword [rsp]	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002c1b	    0x48b9ffffffff	              movabs rcx, 0x1fffffffffff	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002c25	            0x6aff	                 push 0xffffffffffffffff	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002c27	            0x6a00	                                  push 0	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002c29	    0x41b8c4004001	                      mov r8d, 0x14000c4	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002c2f	      0xbe01000000	                              mov esi, 1	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002c34	          0x4801d1	                            add rcx, rdx	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002c37	      0xe800000000	                          call 0x4002c3c	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002c3c	        0x4883c418	                           add rsp, 0x18	      1966	vmalloc.c	FUNCTION_78	CALL_1
0x4002c40	              0xc3	                                     ret	      1968	vmalloc.c	FUNCTION_78
__vmalloc	IF,0:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,2:WHILE,0:DO,0	12
0x4002ad0	          0x4989d1	                             mov r9, rdx	      1809	vmalloc.c	FUNCTION_69
0x4002ad3	    0x488b15000000	            mov rdx, qword [0x04002ada] 	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002ada	          0xff3424	                        push qword [rsp]	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002add	    0x48b9ffffffff	              movabs rcx, 0x1fffffffffff	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002ae7	            0x6aff	                 push 0xffffffffffffffff	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002ae9	            0x6a00	                                  push 0	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002aeb	          0x4189f0	                            mov r8d, esi	      1809	vmalloc.c	FUNCTION_69
0x4002aee	      0xbe01000000	                              mov esi, 1	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002af3	          0x4801d1	                            add rcx, rdx	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002af6	      0xe800000000	                          call 0x4002afb	      1804	vmalloc.c	FUNCTION_68	CALL_1
0x4002afb	        0x4883c418	                           add rsp, 0x18	      1810	vmalloc.c	FUNCTION_69	CALL_1
0x4002aff	              0xc3	                                     ret	      1812	vmalloc.c	FUNCTION_69
remap_vmalloc_range_partial	IF,5:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,6:WHILE,0:DO,1	53
0x40004e0	            0x4155	                                push r13	      2249	vmalloc.c	FUNCTION_84
0x40004e2	          0x4889f0	                            mov rax, rsi	      2254	vmalloc.c	FUNCTION_84	IF_1	CALL_3
0x40004e5	            0x4154	                                push r12	      2249	vmalloc.c	FUNCTION_84
0x40004e7	              0x55	                                push rbp	      2249	vmalloc.c	FUNCTION_84
0x40004e8	    0x488da9ff0f00	                  lea rbp, [rcx + 0xfff]	      2252	vmalloc.c	FUNCTION_84	CALL_1
0x40004ef	          0x4809d0	                             or rax, rdx	      2254	vmalloc.c	FUNCTION_84	IF_1	CALL_3
0x40004f2	              0x53	                                push rbx	      2249	vmalloc.c	FUNCTION_84
0x40004f3	    0x4881e500f0ff	             and rbp, 0xfffffffffffff000	      2252	vmalloc.c	FUNCTION_84	CALL_1
0x40004fa	      0xa9ff0f0000	                         test eax, 0xfff	      2254	vmalloc.c	FUNCTION_84	IF_1	CALL_3
0x40004ff	            0x7579	                           jne 0x400057a	      2254	vmalloc.c	FUNCTION_84	IF_1	CALL_3
0x4000501	          0x4989fd	                            mov r13, rdi	      2254	vmalloc.c	FUNCTION_84	IF_1	CALL_3
0x4000504	          0x4889d7	                            mov rdi, rdx	      1471	vmalloc.c	FUNCTION_58	CALL_1
0x4000507	          0x4989f4	                            mov r12, rsi	      1471	vmalloc.c	FUNCTION_58	CALL_1
0x400050a	          0x4889d3	                            mov rbx, rdx	      1471	vmalloc.c	FUNCTION_58	CALL_1
0x400050d	      0xe82efbffff	                 call sym.find_vmap_area	      1471	vmalloc.c	FUNCTION_58	CALL_1
0x4000512	          0x4885c0	                           test rax, rax	      1472	vmalloc.c	FUNCTION_58	IF_1
0x4000515	            0x7463	                            je 0x400057a	      1472	vmalloc.c	FUNCTION_58	IF_1
0x4000517	        0xf6401004	               test byte [rax + 0x10], 4	      1472	vmalloc.c	FUNCTION_58	IF_1
0x400051b	            0x745d	                            je 0x400057a	      1472	vmalloc.c	FUNCTION_58	IF_1
0x400051d	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      1473	vmalloc.c	FUNCTION_58	IF_1
0x4000521	          0x4885d2	                           test rdx, rdx	      2258	vmalloc.c	FUNCTION_84	IF_2
0x4000524	            0x7454	                            je 0x400057a	      2258	vmalloc.c	FUNCTION_84	IF_2
0x4000526	        0xf6421808	               test byte [rdx + 0x18], 8	      2261	vmalloc.c	FUNCTION_84	IF_3
0x400052a	            0x744e	                            je 0x400057a	      2261	vmalloc.c	FUNCTION_84	IF_3
0x400052c	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      2264	vmalloc.c	FUNCTION_84	IF_4
0x4000530	        0x48034208	                add rax, qword [rdx + 8]	      2264	vmalloc.c	FUNCTION_84	IF_4
0x4000534	        0x488d0c2b	                    lea rcx, [rbx + rbp]	      2264	vmalloc.c	FUNCTION_84	IF_4
0x4000538	          0x4839c1	                            cmp rcx, rax	      2264	vmalloc.c	FUNCTION_84	IF_4
0x400053b	            0x773d	                            ja 0x400057a	      2264	vmalloc.c	FUNCTION_84	IF_4
0x400053d	          0x4929dc	                            sub r12, rbx	      2271	vmalloc.c	FUNCTION_84	DO_1	CALL_6
0x4000540	          0x4889df	                            mov rdi, rbx	      2268	vmalloc.c	FUNCTION_84	DO_1	CALL_5
0x4000543	      0xe800000000	                          call 0x4000548	      2268	vmalloc.c	FUNCTION_84	DO_1	CALL_5
0x4000548	        0x4a8d3423	                    lea rsi, [rbx + r12]	      2271	vmalloc.c	FUNCTION_84	DO_1	CALL_6
0x400054c	          0x4889c2	                            mov rdx, rax	      2271	vmalloc.c	FUNCTION_84	DO_1	CALL_6
0x400054f	          0x4c89ef	                            mov rdi, r13	      2271	vmalloc.c	FUNCTION_84	DO_1	CALL_6
0x4000552	      0xe800000000	                          call 0x4000557	      2271	vmalloc.c	FUNCTION_84	DO_1	CALL_6
0x4000557	            0x85c0	                           test eax, eax	      2272	vmalloc.c	FUNCTION_84	DO_1	IF_5
0x4000559	            0x7524	                           jne 0x400057f	      2272	vmalloc.c	FUNCTION_84	DO_1	IF_5
0x400055b	    0x4881c3001000	                         add rbx, 0x1000	      2276	vmalloc.c	FUNCTION_84	DO_1
0x4000562	    0x4881ed001000	                         sub rbp, 0x1000	      2278	vmalloc.c	FUNCTION_84	DO_1
0x4000569	            0x75d5	                           jne 0x4000540	      2278	vmalloc.c	FUNCTION_84	DO_1
0x400056b	    0x49814d500000	        or qword [r13 + 0x50], 0x4040000	      2280	vmalloc.c	FUNCTION_84
0x4000573	              0x5b	                                 pop rbx	      2283	vmalloc.c	FUNCTION_84
0x4000574	              0x5d	                                 pop rbp	      2283	vmalloc.c	FUNCTION_84
0x4000575	            0x415c	                                 pop r12	      2283	vmalloc.c	FUNCTION_84
0x4000577	            0x415d	                                 pop r13	      2283	vmalloc.c	FUNCTION_84
0x4000579	              0xc3	                                     ret	      2283	vmalloc.c	FUNCTION_84
0x400057a	      0xb8eaffffff	                     mov eax, 0xffffffea	      2255	vmalloc.c	FUNCTION_84	IF_1
0x400057f	              0x5b	                                 pop rbx	      2283	vmalloc.c	FUNCTION_84
0x4000580	              0x5d	                                 pop rbp	      2283	vmalloc.c	FUNCTION_84
0x4000581	            0x415c	                                 pop r12	      2283	vmalloc.c	FUNCTION_84
0x4000583	            0x415d	                                 pop r13	      2283	vmalloc.c	FUNCTION_84
0x4000585	              0xc3	                                     ret	      2283	vmalloc.c	FUNCTION_84
__vunmap	IF,4:FOR,1:SWITCH,0:functions,0:ELSE,0:CALL,13:WHILE,0:DO,0	54
0x4002580	          0x4885ff	                           test rdi, rdi	      1515	vmalloc.c	FUNCTION_60	IF_1
0x4002583	     0xf8484000000	                            je 0x400260d	      1515	vmalloc.c	FUNCTION_60	IF_1
0x4002589	    0xf7c7ff0f0000	                         test edi, 0xfff	      1518	vmalloc.c	FUNCTION_60	IF_2	CALL_2
0x400258f	            0x4154	                                push r12	      1512	vmalloc.c	FUNCTION_60
0x4002591	          0x4189f4	                           mov r12d, esi	      1512	vmalloc.c	FUNCTION_60
0x4002594	              0x55	                                push rbp	      1512	vmalloc.c	FUNCTION_60
0x4002595	              0x53	                                push rbx	      1512	vmalloc.c	FUNCTION_60
0x4002596	          0x4889fb	                            mov rbx, rdi	      1512	vmalloc.c	FUNCTION_60
0x4002599	            0x755d	                           jne 0x40025f8	      1518	vmalloc.c	FUNCTION_60	IF_2	CALL_2
0x400259b	      0xe800000000	                          call 0x40025a0	      1522	vmalloc.c	FUNCTION_60	CALL_3
0x40025a0	          0x4885c0	                           test rax, rax	      1523	vmalloc.c	FUNCTION_60	IF_3	CALL_4
0x40025a3	          0x4889c5	                            mov rbp, rax	      1522	vmalloc.c	FUNCTION_60	CALL_3
0x40025a6	            0x7467	                            je 0x400260f	      1523	vmalloc.c	FUNCTION_60	IF_3	CALL_4
0x40025a8	          0x4585e4	                         test r12d, r12d	      1532	vmalloc.c	FUNCTION_60	IF_4
0x40025ab	            0x743f	                            je 0x40025ec	      1532	vmalloc.c	FUNCTION_60	IF_4
0x40025ad	          0x8b4528	            mov eax, dword [rbp + 0x28] 	      1535	vmalloc.c	FUNCTION_60	IF_4	FOR_1
0x40025b0	            0x85c0	                           test eax, eax	      1535	vmalloc.c	FUNCTION_60	IF_4	FOR_1
0x40025b2	            0x742f	                            je 0x40025e3	      1535	vmalloc.c	FUNCTION_60	IF_4	FOR_1
0x40025b4	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1536	vmalloc.c	FUNCTION_60	IF_4	FOR_1
0x40025b8	          0x488b38	                    mov rdi, qword [rax]	      1536	vmalloc.c	FUNCTION_60	IF_4	FOR_1
0x40025bb	          0x4885ff	                           test rdi, rdi	      1538	vmalloc.c	FUNCTION_60	IF_4	FOR_1	CALL_10
0x40025be	            0x7421	                            je 0x40025e1	      1538	vmalloc.c	FUNCTION_60	IF_4	FOR_1	CALL_10
0x40025c0	            0x31db	                            xor ebx, ebx	      1538	vmalloc.c	FUNCTION_60	IF_4	FOR_1	CALL_10
0x40025c2	            0x31f6	                            xor esi, esi	      1539	vmalloc.c	FUNCTION_60	IF_4	FOR_1	CALL_11
0x40025c4	          0x83c301	                              add ebx, 1	      1535	vmalloc.c	FUNCTION_60	IF_4	FOR_1
0x40025c7	      0xe800000000	                          call 0x40025cc	      1539	vmalloc.c	FUNCTION_60	IF_4	FOR_1	CALL_11
0x40025cc	          0x395d28	            cmp dword [rbp + 0x28], ebx 	      1535	vmalloc.c	FUNCTION_60	IF_4	FOR_1
0x40025cf	            0x7612	                           jbe 0x40025e3	      1535	vmalloc.c	FUNCTION_60	IF_4	FOR_1
0x40025d1	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1536	vmalloc.c	FUNCTION_60	IF_4	FOR_1
0x40025d5	          0x4863d3	                         movsxd rdx, ebx	      1536	vmalloc.c	FUNCTION_60	IF_4	FOR_1
0x40025d8	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	      1536	vmalloc.c	FUNCTION_60	IF_4	FOR_1
0x40025dc	          0x4885ff	                           test rdi, rdi	      1538	vmalloc.c	FUNCTION_60	IF_4	FOR_1	CALL_10
0x40025df	            0x75e1	                           jne 0x40025c2	      1538	vmalloc.c	FUNCTION_60	IF_4	FOR_1	CALL_10
0x40025e1	             0xf0b	                                     ud2	      1538	vmalloc.c	FUNCTION_60	IF_4	FOR_1	CALL_10
0x40025e3	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      1542	vmalloc.c	FUNCTION_60	IF_4	CALL_12
0x40025e7	      0xe800000000	                          call 0x40025ec	      1542	vmalloc.c	FUNCTION_60	IF_4	CALL_12
0x40025ec	              0x5b	                                 pop rbx	      1547	vmalloc.c	FUNCTION_60
0x40025ed	          0x4889ef	                            mov rdi, rbp	      1545	vmalloc.c	FUNCTION_60	CALL_13
0x40025f0	              0x5d	                                 pop rbp	      1547	vmalloc.c	FUNCTION_60
0x40025f1	            0x415c	                                 pop r12	      1547	vmalloc.c	FUNCTION_60
0x40025f3	      0xe900000000	                           jmp 0x40025f8	      1545	vmalloc.c	FUNCTION_60	CALL_13
0x40025f8	          0x4889fe	                            mov rsi, rdi	      1518	vmalloc.c	FUNCTION_60	IF_2	CALL_2
0x40025fb	    0x48c7c7000000	                              mov rdi, 0	      1518	vmalloc.c	FUNCTION_60	IF_2	CALL_2
0x4002602	      0xe800000000	                          call 0x4002607	      1518	vmalloc.c	FUNCTION_60	IF_2	CALL_2
0x4002607	             0xf0b	                                     ud2	      1518	vmalloc.c	FUNCTION_60	IF_2	CALL_2
0x4002609	              0x5b	                                 pop rbx	      1547	vmalloc.c	FUNCTION_60
0x400260a	              0x5d	                                 pop rbp	      1547	vmalloc.c	FUNCTION_60
0x400260b	            0x415c	                                 pop r12	      1547	vmalloc.c	FUNCTION_60
0x400260d	            0xf3c3	                                     ret	      1547	vmalloc.c	FUNCTION_60
0x400260f	          0x4889de	                            mov rsi, rbx	      1524	vmalloc.c	FUNCTION_60	IF_3	CALL_5
0x4002612	    0x48c7c7000000	                              mov rdi, 0	      1524	vmalloc.c	FUNCTION_60	IF_3	CALL_5
0x4002619	      0xe800000000	                          call 0x400261e	      1524	vmalloc.c	FUNCTION_60	IF_3	CALL_5
0x400261e	             0xf0b	                                     ud2	      1524	vmalloc.c	FUNCTION_60	IF_3	CALL_5
0x4002620	            0xebe7	                           jmp 0x4002609	      1526	vmalloc.c	FUNCTION_60	IF_3
purge_vmap_area_lazy	IF,0:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,4:WHILE,0:DO,0	8
0x4001430	    0x48c7c7000000	                              mov rdi, 0	       727	vmalloc.c	FUNCTION_29	CALL_1
0x4001437	      0xe800000000	                          call 0x400143c	       727	vmalloc.c	FUNCTION_29	CALL_1
0x400143c	      0xe8fffcffff	call sym.purge_fragmented_blocks_allcpus	       728	vmalloc.c	FUNCTION_29	CALL_2
0x4001441	    0x48c7c7ffffff	             mov rdi, 0xffffffffffffffff	       729	vmalloc.c	FUNCTION_29	CALL_3
0x4001448	            0x31f6	                            xor esi, esi	       729	vmalloc.c	FUNCTION_29	CALL_3
0x400144a	      0xe8f1efffff	         call sym.__purge_vmap_area_lazy	       729	vmalloc.c	FUNCTION_29	CALL_3
0x400144f	    0x48c7c7000000	                              mov rdi, 0	       730	vmalloc.c	FUNCTION_29	CALL_4
0x4001456	      0xe900000000	                           jmp 0x400145b	       730	vmalloc.c	FUNCTION_29	CALL_4
__get_vm_area	IF,0:FOR,0:SWITCH,0:functions,0:ELSE,0:CALL,2:WHILE,0:DO,0	11
0x4001930	          0xff3424	                        push qword [rsp]	      1423	vmalloc.c	FUNCTION_54	CALL_1
0x4001933	      0x68c0004001	                          push 0x14000c0	      1423	vmalloc.c	FUNCTION_54	CALL_1
0x4001938	          0x4989c8	                             mov r8, rcx	      1422	vmalloc.c	FUNCTION_54
0x400193b	    0x41b9ffffffff	                     mov r9d, 0xffffffff	      1423	vmalloc.c	FUNCTION_54	CALL_1
0x4001941	          0x4889d1	                            mov rcx, rdx	      1423	vmalloc.c	FUNCTION_54	CALL_1
0x4001944	          0x4889f2	                            mov rdx, rsi	      1423	vmalloc.c	FUNCTION_54	CALL_1
0x4001947	      0xbe01000000	                              mov esi, 1	      1423	vmalloc.c	FUNCTION_54	CALL_1
0x400194c	      0xe87ffeffff	             call sym.__get_vm_area_node	      1423	vmalloc.c	FUNCTION_54	CALL_1
0x4001951	              0x5a	                                 pop rdx	      1423	vmalloc.c	FUNCTION_54	CALL_1
0x4001952	              0x59	                                 pop rcx	      1423	vmalloc.c	FUNCTION_54	CALL_1
0x4001953	              0xc3	                                     ret	      1425	vmalloc.c	FUNCTION_54
