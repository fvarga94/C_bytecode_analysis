acpi_ut_remove_leading_zeros	functions,0:IF,0:FOR,0:CALL,0:ELSE,0:SWITCH,0:DO,0:WHILE,1	8
0x400026a	          0x488b17	                    mov rdx, qword [rdi]	       188	utstrsuppt.c	FUNCTION_4	WHILE_1
0x400026d	            0x8a02	                      mov al, byte [rdx]	       188	utstrsuppt.c	FUNCTION_4	WHILE_1
0x400026f	            0x3c30	                            cmp al, 0x30	       188	utstrsuppt.c	FUNCTION_4	WHILE_1
0x4000271	            0x7508	                           jne 0x400027b	       188	utstrsuppt.c	FUNCTION_4	WHILE_1
0x4000273	          0x48ffc2	                                 inc rdx	       189	utstrsuppt.c	FUNCTION_4	WHILE_1
0x4000276	          0x488917	                    mov qword [rdi], rdx	       189	utstrsuppt.c	FUNCTION_4	WHILE_1
0x4000279	            0xebef	    jmp sym.acpi_ut_remove_leading_zeros	       189	utstrsuppt.c	FUNCTION_4	WHILE_1
0x400027b	              0xc3	                                     ret	       193	utstrsuppt.c	FUNCTION_4
acpi_ut_convert_octal_string	functions,0:IF,2:FOR,0:CALL,3:ELSE,0:SWITCH,0:DO,0:WHILE,1	33
0x400010c	              0x55	                                push rbp	        41	utstrsuppt.c	FUNCTION_1
0x400010d	              0x53	                                push rbx	        41	utstrsuppt.c	FUNCTION_1
0x400010e	          0x4889f5	                            mov rbp, rsi	        41	utstrsuppt.c	FUNCTION_1
0x4000111	          0x4889fb	                            mov rbx, rdi	        41	utstrsuppt.c	FUNCTION_1
0x4000114	        0x4883ec10	                           sub rsp, 0x10	        41	utstrsuppt.c	FUNCTION_1
0x4000118	    0x65488b042528	                mov rax, qword gs:[0x28]	        41	utstrsuppt.c	FUNCTION_1
0x4000121	      0x4889442408	                mov qword [rsp + 8], rax	        41	utstrsuppt.c	FUNCTION_1
0x4000126	            0x31c0	                            xor eax, eax	        41	utstrsuppt.c	FUNCTION_1
0x4000128	    0x48c704240000	                      mov qword [rsp], 0	        42	utstrsuppt.c	FUNCTION_1
0x4000130	           0xfbe13	                   movsx edx, byte [rbx]	        47	utstrsuppt.c	FUNCTION_1	WHILE_1
0x4000133	          0x8d42d0	                   lea eax, [rdx - 0x30]	        47	utstrsuppt.c	FUNCTION_1	WHILE_1
0x4000136	            0x3c07	                               cmp al, 7	        47	utstrsuppt.c	FUNCTION_1	WHILE_1
0x4000138	            0x7716	                            ja 0x4000150	        47	utstrsuppt.c	FUNCTION_1	WHILE_1
0x400013a	      0xbe08000000	                              mov esi, 8	        57	utstrsuppt.c	FUNCTION_1	WHILE_1	CALL_2
0x400013f	          0x4889e7	                            mov rdi, rsp	        57	utstrsuppt.c	FUNCTION_1	WHILE_1	CALL_2
0x4000142	      0xe8f9feffff	           call sym.acpi_ut_insert_digit	        57	utstrsuppt.c	FUNCTION_1	WHILE_1	CALL_2
0x4000147	            0x85c0	                           test eax, eax	        58	utstrsuppt.c	FUNCTION_1	WHILE_1	IF_2	CALL_3
0x4000149	            0x7509	                           jne 0x4000154	        58	utstrsuppt.c	FUNCTION_1	WHILE_1	IF_2	CALL_3
0x400014b	          0x48ffc3	                                 inc rbx	        63	utstrsuppt.c	FUNCTION_1	WHILE_1
0x400014e	            0xebe0	                           jmp 0x4000130	        63	utstrsuppt.c	FUNCTION_1	WHILE_1
0x4000150	            0x31c0	                            xor eax, eax	        63	utstrsuppt.c	FUNCTION_1	WHILE_1
0x4000152	            0xeb05	                           jmp 0x4000159	        63	utstrsuppt.c	FUNCTION_1	WHILE_1
0x4000154	      0xb822000000	                           mov eax, 0x22	        59	utstrsuppt.c	FUNCTION_1	WHILE_1	IF_2
0x4000159	        0x488b1424	                    mov rdx, qword [rsp]	        68	utstrsuppt.c	FUNCTION_1
0x400015d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        70	utstrsuppt.c	FUNCTION_1
0x4000162	    0x6548330c2528	                xor rcx, qword gs:[0x28]	        70	utstrsuppt.c	FUNCTION_1
0x400016b	        0x48895500	                    mov qword [rbp], rdx	        68	utstrsuppt.c	FUNCTION_1
0x400016f	            0x7405	                            je 0x4000176	        70	utstrsuppt.c	FUNCTION_1
0x4000171	      0xe800000000	                          call 0x4000176	        70	utstrsuppt.c	FUNCTION_1
0x4000176	        0x4883c410	                           add rsp, 0x10	        70	utstrsuppt.c	FUNCTION_1
0x400017a	              0x5b	                                 pop rbx	        70	utstrsuppt.c	FUNCTION_1
0x400017b	              0x5d	                                 pop rbp	        70	utstrsuppt.c	FUNCTION_1
0x400017c	              0xc3	                                     ret	        70	utstrsuppt.c	FUNCTION_1
acpi_ut_remove_whitespace	functions,0:IF,0:FOR,0:CALL,1:ELSE,0:SWITCH,0:DO,0:WHILE,1	9
0x400027c	          0x488b17	                    mov rdx, qword [rdi]	       213	utstrsuppt.c	FUNCTION_5	WHILE_1	CALL_1
0x400027f	           0xfb60a	                   movzx ecx, byte [rdx]	       213	utstrsuppt.c	FUNCTION_5	WHILE_1	CALL_1
0x4000282	    0xf68100000000	                   test byte [rcx], 0x20	       213	utstrsuppt.c	FUNCTION_5	WHILE_1	CALL_1
0x4000289	          0x4889c8	                            mov rax, rcx	       213	utstrsuppt.c	FUNCTION_5	WHILE_1	CALL_1
0x400028c	            0x7408	                            je 0x4000296	       213	utstrsuppt.c	FUNCTION_5	WHILE_1	CALL_1
0x400028e	          0x48ffc2	                                 inc rdx	       214	utstrsuppt.c	FUNCTION_5	WHILE_1
0x4000291	          0x488917	                    mov qword [rdi], rdx	       214	utstrsuppt.c	FUNCTION_5	WHILE_1
0x4000294	            0xebe6	       jmp sym.acpi_ut_remove_whitespace	       214	utstrsuppt.c	FUNCTION_5	WHILE_1
0x4000296	              0xc3	                                     ret	       218	utstrsuppt.c	FUNCTION_5
acpi_ut_convert_hex_string	functions,0:IF,2:FOR,0:CALL,3:ELSE,0:SWITCH,0:DO,0:WHILE,1	36
0x40001ee	              0x55	                                push rbp	       139	utstrsuppt.c	FUNCTION_3
0x40001ef	              0x53	                                push rbx	       139	utstrsuppt.c	FUNCTION_3
0x40001f0	          0x4889f5	                            mov rbp, rsi	       139	utstrsuppt.c	FUNCTION_3
0x40001f3	          0x4889fb	                            mov rbx, rdi	       139	utstrsuppt.c	FUNCTION_3
0x40001f6	        0x4883ec10	                           sub rsp, 0x10	       139	utstrsuppt.c	FUNCTION_3
0x40001fa	    0x65488b042528	                mov rax, qword gs:[0x28]	       139	utstrsuppt.c	FUNCTION_3
0x4000203	      0x4889442408	                mov qword [rsp + 8], rax	       139	utstrsuppt.c	FUNCTION_3
0x4000208	            0x31c0	                            xor eax, eax	       139	utstrsuppt.c	FUNCTION_3
0x400020a	    0x48c704240000	                      mov qword [rsp], 0	       140	utstrsuppt.c	FUNCTION_3
0x4000212	            0x8a13	                      mov dl, byte [rbx]	       145	utstrsuppt.c	FUNCTION_3	WHILE_1
0x4000214	            0x84d2	                             test dl, dl	       145	utstrsuppt.c	FUNCTION_3	WHILE_1
0x4000216	            0x7425	                            je 0x400023d	       145	utstrsuppt.c	FUNCTION_3	WHILE_1
0x4000218	           0xfb6c2	                           movzx eax, dl	       149	utstrsuppt.c	FUNCTION_3	WHILE_1	IF_1	CALL_1
0x400021b	    0xf68000000000	                   test byte [rax], 0x44	       149	utstrsuppt.c	FUNCTION_3	WHILE_1	IF_1	CALL_1
0x4000222	            0x7419	                            je 0x400023d	       149	utstrsuppt.c	FUNCTION_3	WHILE_1	IF_1	CALL_1
0x4000224	           0xfbed2	                           movsx edx, dl	       155	utstrsuppt.c	FUNCTION_3	WHILE_1	CALL_2
0x4000227	      0xbe10000000	                           mov esi, 0x10	       155	utstrsuppt.c	FUNCTION_3	WHILE_1	CALL_2
0x400022c	          0x4889e7	                            mov rdi, rsp	       155	utstrsuppt.c	FUNCTION_3	WHILE_1	CALL_2
0x400022f	      0xe80cfeffff	           call sym.acpi_ut_insert_digit	       155	utstrsuppt.c	FUNCTION_3	WHILE_1	CALL_2
0x4000234	            0x85c0	                           test eax, eax	       156	utstrsuppt.c	FUNCTION_3	WHILE_1	IF_2	CALL_3
0x4000236	            0x7509	                           jne 0x4000241	       156	utstrsuppt.c	FUNCTION_3	WHILE_1	IF_2	CALL_3
0x4000238	          0x48ffc3	                                 inc rbx	       161	utstrsuppt.c	FUNCTION_3	WHILE_1
0x400023b	            0xebd5	                           jmp 0x4000212	       161	utstrsuppt.c	FUNCTION_3	WHILE_1
0x400023d	            0x31c0	                            xor eax, eax	       161	utstrsuppt.c	FUNCTION_3	WHILE_1
0x400023f	            0xeb05	                           jmp 0x4000246	       161	utstrsuppt.c	FUNCTION_3	WHILE_1
0x4000241	      0xb820000000	                           mov eax, 0x20	       157	utstrsuppt.c	FUNCTION_3	WHILE_1	IF_2
0x4000246	        0x488b1424	                    mov rdx, qword [rsp]	       166	utstrsuppt.c	FUNCTION_3
0x400024a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       168	utstrsuppt.c	FUNCTION_3
0x400024f	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       168	utstrsuppt.c	FUNCTION_3
0x4000258	        0x48895500	                    mov qword [rbp], rdx	       166	utstrsuppt.c	FUNCTION_3
0x400025c	            0x7405	                            je 0x4000263	       168	utstrsuppt.c	FUNCTION_3
0x400025e	      0xe800000000	                          call 0x4000263	       168	utstrsuppt.c	FUNCTION_3
0x4000263	        0x4883c410	                           add rsp, 0x10	       168	utstrsuppt.c	FUNCTION_3
0x4000267	              0x5b	                                 pop rbx	       168	utstrsuppt.c	FUNCTION_3
0x4000268	              0x5d	                                 pop rbp	       168	utstrsuppt.c	FUNCTION_3
0x4000269	              0xc3	                                     ret	       168	utstrsuppt.c	FUNCTION_3
acpi_ut_convert_decimal_string	functions,0:IF,2:FOR,0:CALL,3:ELSE,0:SWITCH,0:DO,0:WHILE,1	33
0x400017d	              0x55	                                push rbp	        90	utstrsuppt.c	FUNCTION_2
0x400017e	              0x53	                                push rbx	        90	utstrsuppt.c	FUNCTION_2
0x400017f	          0x4889f5	                            mov rbp, rsi	        90	utstrsuppt.c	FUNCTION_2
0x4000182	          0x4889fb	                            mov rbx, rdi	        90	utstrsuppt.c	FUNCTION_2
0x4000185	        0x4883ec10	                           sub rsp, 0x10	        90	utstrsuppt.c	FUNCTION_2
0x4000189	    0x65488b042528	                mov rax, qword gs:[0x28]	        90	utstrsuppt.c	FUNCTION_2
0x4000192	      0x4889442408	                mov qword [rsp + 8], rax	        90	utstrsuppt.c	FUNCTION_2
0x4000197	            0x31c0	                            xor eax, eax	        90	utstrsuppt.c	FUNCTION_2
0x4000199	    0x48c704240000	                      mov qword [rsp], 0	        91	utstrsuppt.c	FUNCTION_2
0x40001a1	           0xfbe13	                   movsx edx, byte [rbx]	        96	utstrsuppt.c	FUNCTION_2	WHILE_1
0x40001a4	          0x8d42d0	                   lea eax, [rdx - 0x30]	        96	utstrsuppt.c	FUNCTION_2	WHILE_1
0x40001a7	            0x3c09	                               cmp al, 9	        96	utstrsuppt.c	FUNCTION_2	WHILE_1
0x40001a9	            0x7716	                            ja 0x40001c1	        96	utstrsuppt.c	FUNCTION_2	WHILE_1
0x40001ab	      0xbe0a000000	                            mov esi, 0xa	       106	utstrsuppt.c	FUNCTION_2	WHILE_1	CALL_2
0x40001b0	          0x4889e7	                            mov rdi, rsp	       106	utstrsuppt.c	FUNCTION_2	WHILE_1	CALL_2
0x40001b3	      0xe888feffff	           call sym.acpi_ut_insert_digit	       106	utstrsuppt.c	FUNCTION_2	WHILE_1	CALL_2
0x40001b8	            0x85c0	                           test eax, eax	       107	utstrsuppt.c	FUNCTION_2	WHILE_1	IF_2	CALL_3
0x40001ba	            0x7509	                           jne 0x40001c5	       107	utstrsuppt.c	FUNCTION_2	WHILE_1	IF_2	CALL_3
0x40001bc	          0x48ffc3	                                 inc rbx	       112	utstrsuppt.c	FUNCTION_2	WHILE_1
0x40001bf	            0xebe0	                           jmp 0x40001a1	       112	utstrsuppt.c	FUNCTION_2	WHILE_1
0x40001c1	            0x31c0	                            xor eax, eax	       112	utstrsuppt.c	FUNCTION_2	WHILE_1
0x40001c3	            0xeb05	                           jmp 0x40001ca	       112	utstrsuppt.c	FUNCTION_2	WHILE_1
0x40001c5	      0xb821000000	                           mov eax, 0x21	       108	utstrsuppt.c	FUNCTION_2	WHILE_1	IF_2
0x40001ca	        0x488b1424	                    mov rdx, qword [rsp]	       117	utstrsuppt.c	FUNCTION_2
0x40001ce	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       119	utstrsuppt.c	FUNCTION_2
0x40001d3	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       119	utstrsuppt.c	FUNCTION_2
0x40001dc	        0x48895500	                    mov qword [rbp], rdx	       117	utstrsuppt.c	FUNCTION_2
0x40001e0	            0x7405	                            je 0x40001e7	       119	utstrsuppt.c	FUNCTION_2
0x40001e2	      0xe800000000	                          call 0x40001e7	       119	utstrsuppt.c	FUNCTION_2
0x40001e7	        0x4883c410	                           add rsp, 0x10	       119	utstrsuppt.c	FUNCTION_2
0x40001eb	              0x5b	                                 pop rbx	       119	utstrsuppt.c	FUNCTION_2
0x40001ec	              0x5d	                                 pop rbp	       119	utstrsuppt.c	FUNCTION_2
0x40001ed	              0xc3	                                     ret	       119	utstrsuppt.c	FUNCTION_2
acpi_ut_insert_digit	functions,0:IF,1:FOR,0:CALL,4:ELSE,0:SWITCH,0:DO,0:WHILE,0	64
0x4000040	            0x4156	                                push r14	       297	utstrsuppt.c	FUNCTION_8
0x4000042	            0x4155	                                push r13	       297	utstrsuppt.c	FUNCTION_8
0x4000044	          0x4189d6	                           mov r14d, edx	       297	utstrsuppt.c	FUNCTION_8
0x4000047	            0x4154	                                push r12	       297	utstrsuppt.c	FUNCTION_8
0x4000049	              0x55	                                push rbp	       297	utstrsuppt.c	FUNCTION_8
0x400004a	          0x4989fd	                            mov r13, rdi	       297	utstrsuppt.c	FUNCTION_8
0x400004d	              0x53	                                push rbx	       297	utstrsuppt.c	FUNCTION_8
0x400004e	        0x4883ec10	                           sub rsp, 0x10	       297	utstrsuppt.c	FUNCTION_8
0x4000052	          0x488b2f	                    mov rbp, qword [rdi]	       303	utstrsuppt.c	FUNCTION_8	CALL_1
0x4000055	    0x65488b042528	                mov rax, qword gs:[0x28]	       297	utstrsuppt.c	FUNCTION_8
0x400005e	      0x4889442408	                mov qword [rsp + 8], rax	       297	utstrsuppt.c	FUNCTION_8
0x4000063	            0x31c0	                            xor eax, eax	       297	utstrsuppt.c	FUNCTION_8
0x4000065	          0x4885ed	                           test rbp, rbp	       343	utstrsuppt.c	FUNCTION_9	IF_1
0x4000068	            0x743b	                            je 0x40000a5	       343	utstrsuppt.c	FUNCTION_9	IF_1
0x400006a	            0x89f3	                            mov ebx, esi	       343	utstrsuppt.c	FUNCTION_9	IF_1
0x400006c	            0x85db	                           test ebx, ebx	       343	utstrsuppt.c	FUNCTION_9	IF_1
0x400006e	            0x7435	                            je 0x40000a5	       343	utstrsuppt.c	FUNCTION_9	IF_1
0x4000070	            0x31c9	                            xor ecx, ecx	       355	utstrsuppt.c	FUNCTION_9	CALL_1
0x4000072	        0x4883cfff	              or rdi, 0xffffffffffffffff	       355	utstrsuppt.c	FUNCTION_9	CALL_1
0x4000076	          0x4889e2	                            mov rdx, rsp	       355	utstrsuppt.c	FUNCTION_9	CALL_1
0x4000079	            0x89de	                            mov esi, ebx	       355	utstrsuppt.c	FUNCTION_9	CALL_1
0x400007b	    0x41bc1f000000	                          mov r12d, 0x1f	       357	utstrsuppt.c	FUNCTION_9	IF_2
0x4000081	      0xe800000000	                          call 0x4000086	       355	utstrsuppt.c	FUNCTION_9	CALL_1
0x4000086	        0x483b2c24	                    cmp rbp, qword [rsp]	       356	utstrsuppt.c	FUNCTION_9	IF_2
0x400008a	            0x775b	                            ja 0x40000e7	       356	utstrsuppt.c	FUNCTION_9	IF_2
0x400008c	        0x480fafdd	                           imul rbx, rbp	       360	utstrsuppt.c	FUNCTION_9
0x4000090	    0x803d00000000	            cmp byte [0x04000097], 0x20 	       364	utstrsuppt.c	FUNCTION_9	IF_3
0x4000097	            0x750e	                           jne 0x40000a7	       364	utstrsuppt.c	FUNCTION_9	IF_3
0x4000099	      0xb8ffffffff	                     mov eax, 0xffffffff	       364	utstrsuppt.c	FUNCTION_9	IF_3
0x400009e	          0x4839c3	                            cmp rbx, rax	       364	utstrsuppt.c	FUNCTION_9	IF_3
0x40000a1	            0x7744	                            ja 0x40000e7	       364	utstrsuppt.c	FUNCTION_9	IF_3
0x40000a3	            0xeb02	                           jmp 0x40000a7	       364	utstrsuppt.c	FUNCTION_9	IF_3
0x40000a5	            0x31db	                            xor ebx, ebx	       342	utstrsuppt.c	FUNCTION_9
0x40000a7	          0x4489f7	                           mov edi, r14d	       312	utstrsuppt.c	FUNCTION_8	CALL_4
0x40000aa	          0x4531e4	                          xor r12d, r12d	       344	utstrsuppt.c	FUNCTION_9	IF_1
0x40000ad	      0xe800000000	                          call 0x40000b2	       312	utstrsuppt.c	FUNCTION_8	CALL_4
0x40000b2	          0x4885db	                           test rbx, rbx	       394	utstrsuppt.c	FUNCTION_10	IF_1
0x40000b5	           0xfb6c0	                           movzx eax, al	       394	utstrsuppt.c	FUNCTION_10	IF_1
0x40000b8	            0x740b	                            je 0x40000c5	       394	utstrsuppt.c	FUNCTION_10	IF_1
0x40000ba	          0x4889da	                            mov rdx, rbx	       394	utstrsuppt.c	FUNCTION_10	IF_1
0x40000bd	          0x48f7d2	                                 not rdx	       394	utstrsuppt.c	FUNCTION_10	IF_1
0x40000c0	          0x4839d0	                            cmp rax, rdx	       394	utstrsuppt.c	FUNCTION_10	IF_1
0x40000c3	            0x771c	                            ja 0x40000e1	       394	utstrsuppt.c	FUNCTION_10	IF_1
0x40000c5	          0x4801c3	                            add rbx, rax	       398	utstrsuppt.c	FUNCTION_10
0x40000c8	    0x803d00000000	            cmp byte [0x040000cf], 0x20 	       402	utstrsuppt.c	FUNCTION_10	IF_2
0x40000cf	            0x750a	                           jne 0x40000db	       402	utstrsuppt.c	FUNCTION_10	IF_2
0x40000d1	      0xb8ffffffff	                     mov eax, 0xffffffff	       402	utstrsuppt.c	FUNCTION_10	IF_2
0x40000d6	          0x4839c3	                            cmp rbx, rax	       402	utstrsuppt.c	FUNCTION_10	IF_2
0x40000d9	            0x7706	                            ja 0x40000e1	       402	utstrsuppt.c	FUNCTION_10	IF_2
0x40000db	        0x49895d00	                    mov qword [r13], rbx	       406	utstrsuppt.c	FUNCTION_10
0x40000df	            0xeb06	                           jmp 0x40000e7	       406	utstrsuppt.c	FUNCTION_10
0x40000e1	    0x41bc1f000000	                          mov r12d, 0x1f	       395	utstrsuppt.c	FUNCTION_10	IF_1
0x40000e7	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       316	utstrsuppt.c	FUNCTION_8
0x40000ec	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       316	utstrsuppt.c	FUNCTION_8
0x40000f5	          0x4489e0	                           mov eax, r12d	       316	utstrsuppt.c	FUNCTION_8
0x40000f8	            0x7405	                            je 0x40000ff	       316	utstrsuppt.c	FUNCTION_8
0x40000fa	      0xe800000000	                          call 0x40000ff	       316	utstrsuppt.c	FUNCTION_8
0x40000ff	        0x4883c410	                           add rsp, 0x10	       316	utstrsuppt.c	FUNCTION_8
0x4000103	              0x5b	                                 pop rbx	       316	utstrsuppt.c	FUNCTION_8
0x4000104	              0x5d	                                 pop rbp	       316	utstrsuppt.c	FUNCTION_8
0x4000105	            0x415c	                                 pop r12	       316	utstrsuppt.c	FUNCTION_8
0x4000107	            0x415d	                                 pop r13	       316	utstrsuppt.c	FUNCTION_8
0x4000109	            0x415e	                                 pop r14	       316	utstrsuppt.c	FUNCTION_8
0x400010b	              0xc3	                                     ret	       316	utstrsuppt.c	FUNCTION_8
acpi_ut_detect_octal_prefix	functions,0:IF,1:FOR,0:CALL,0:ELSE,0:SWITCH,0:DO,0:WHILE,0	8
0x40002c7	          0x488b17	                    mov rdx, qword [rdi]	       260	utstrsuppt.c	FUNCTION_7	IF_1
0x40002ca	            0x31c0	                            xor eax, eax	       265	utstrsuppt.c	FUNCTION_7
0x40002cc	          0x803a30	                    cmp byte [rdx], 0x30	       260	utstrsuppt.c	FUNCTION_7	IF_1
0x40002cf	            0x7508	                           jne 0x40002d9	       260	utstrsuppt.c	FUNCTION_7	IF_1
0x40002d1	          0x48ffc2	                                 inc rdx	       261	utstrsuppt.c	FUNCTION_7	IF_1
0x40002d4	            0xb001	                               mov al, 1	       262	utstrsuppt.c	FUNCTION_7	IF_1
0x40002d6	          0x488917	                    mov qword [rdi], rdx	       261	utstrsuppt.c	FUNCTION_7	IF_1
0x40002d9	              0xc3	                                     ret	       266	utstrsuppt.c	FUNCTION_7
