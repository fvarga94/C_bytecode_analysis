scsi_mq_uninit_cmd	FOR,0:CALL,3:functions,0:WHILE,0:IF,0:DO,0:ELSE,0:SWITCH,0	8
0x4002ec0	              0x53	                                push rbx	       623	scsi_lib.c	FUNCTION_25
0x4002ec1	          0x4889fb	                            mov rbx, rdi	       623	scsi_lib.c	FUNCTION_25
0x4002ec4	      0xe8b7deffff	          call sym.scsi_mq_free_sgtables	       624	scsi_lib.c	FUNCTION_25	CALL_1
0x4002ec9	          0x4889df	                            mov rdi, rbx	       625	scsi_lib.c	FUNCTION_25	CALL_2
0x4002ecc	      0xe86fd1ffff	                call sym.scsi_uninit_cmd	       625	scsi_lib.c	FUNCTION_25	CALL_2
0x4002ed1	          0x4889df	                            mov rdi, rbx	       626	scsi_lib.c	FUNCTION_25	CALL_3
0x4002ed4	              0x5b	                                 pop rbx	       627	scsi_lib.c	FUNCTION_25
0x4002ed5	            0xeb89	          jmp sym.scsi_del_cmd_from_list	       626	scsi_lib.c	FUNCTION_25	CALL_3
scsi_target_resume	FOR,0:CALL,1:functions,0:WHILE,0:IF,0:DO,0:ELSE,0:SWITCH,0	3
0x40016e0	    0x48c7c2000000	                              mov rdx, 0	      3066	scsi_lib.c	FUNCTION_92	CALL_1
0x40016e7	            0x31f6	                            xor esi, esi	      3066	scsi_lib.c	FUNCTION_92	CALL_1
0x40016e9	      0xe900000000	                           jmp 0x40016ee	      3066	scsi_lib.c	FUNCTION_92	CALL_1
scsi_mq_free_sgtables	FOR,0:CALL,4:functions,0:WHILE,0:IF,4:DO,0:ELSE,0:SWITCH,0	29
0x4000d80	              0x53	                                push rbx	       608	scsi_lib.c	FUNCTION_24
0x4000d81	    0x8b9708010000	           mov edx, dword [rdi + 0x108] 	       611	scsi_lib.c	FUNCTION_24	IF_1
0x4000d87	          0x4889fb	                            mov rbx, rdi	       608	scsi_lib.c	FUNCTION_24
0x4000d8a	            0x85d2	                           test edx, edx	       611	scsi_lib.c	FUNCTION_24	IF_1
0x4000d8c	            0x7549	                           jne 0x4000dd7	       611	scsi_lib.c	FUNCTION_24	IF_1
0x4000d8e	    0x488b83280100	           mov rax, qword [rbx + 0x128] 	       613	scsi_lib.c	FUNCTION_24	IF_2
0x4000d95	    0x488b80200100	           mov rax, qword [rax + 0x120] 	       613	scsi_lib.c	FUNCTION_24	IF_2
0x4000d9c	          0x4885c0	                           test rax, rax	       613	scsi_lib.c	FUNCTION_24	IF_2
0x4000d9f	            0x7416	                            je 0x4000db7	       613	scsi_lib.c	FUNCTION_24	IF_2
0x4000da1	    0x488bb8c00000	            mov rdi, qword [rax + 0xc0] 	       614	scsi_lib.c	FUNCTION_24	IF_2
0x4000da8	          0x4885ff	                           test rdi, rdi	       615	scsi_lib.c	FUNCTION_24	IF_2	IF_3
0x4000dab	            0x740a	                            je 0x4000db7	       615	scsi_lib.c	FUNCTION_24	IF_2	IF_3
0x4000dad	      0xbe01000000	                              mov esi, 1	       616	scsi_lib.c	FUNCTION_24	IF_2	CALL_2
0x4000db2	      0xe800000000	                          call 0x4000db7	       616	scsi_lib.c	FUNCTION_24	IF_2	CALL_2
0x4000db7	    0x488bbb180100	           mov rdi, qword [rbx + 0x118] 	       324	scsi_cmnd.h	FUNCTION_261
0x4000dbe	          0x4885ff	                           test rdi, rdi	       324	scsi_cmnd.h	FUNCTION_261
0x4000dc1	            0x7407	                            je 0x4000dca	       324	scsi_cmnd.h	FUNCTION_261
0x4000dc3	          0x8b4708	                mov eax, dword [rdi + 8]	       618	scsi_lib.c	FUNCTION_24	IF_4	CALL_3
0x4000dc6	            0x85c0	                           test eax, eax	       618	scsi_lib.c	FUNCTION_24	IF_4	CALL_3
0x4000dc8	            0x7502	                           jne 0x4000dcc	       618	scsi_lib.c	FUNCTION_24	IF_4	CALL_3
0x4000dca	              0x5b	                                 pop rbx	       620	scsi_lib.c	FUNCTION_24
0x4000dcb	              0xc3	                                     ret	       620	scsi_lib.c	FUNCTION_24
0x4000dcc	              0x5b	                                 pop rbx	       620	scsi_lib.c	FUNCTION_24
0x4000dcd	      0xbe01000000	                              mov esi, 1	       619	scsi_lib.c	FUNCTION_24	CALL_4
0x4000dd2	      0xe900000000	                           jmp 0x4000dd7	       619	scsi_lib.c	FUNCTION_24	CALL_4
0x4000dd7	    0x488dbf000100	                  lea rdi, [rdi + 0x100]	       612	scsi_lib.c	FUNCTION_24	CALL_1
0x4000dde	      0xbe01000000	                              mov esi, 1	       612	scsi_lib.c	FUNCTION_24	CALL_1
0x4000de3	      0xe800000000	                          call 0x4000de8	       612	scsi_lib.c	FUNCTION_24	CALL_1
0x4000de8	            0xeba4	                           jmp 0x4000d8e	       612	scsi_lib.c	FUNCTION_24	CALL_1
scsi_old_alloc_queue	FOR,0:CALL,10:functions,0:WHILE,0:IF,2:DO,0:ELSE,0:SWITCH,0	54
0x4003e60	              0x55	                                push rbp	      2234	scsi_lib.c	FUNCTION_67
0x4003e61	              0x53	                                push rbx	      2234	scsi_lib.c	FUNCTION_67
0x4003e62	            0x31d2	                            xor edx, edx	      2238	scsi_lib.c	FUNCTION_67	CALL_1
0x4003e64	          0x488b2f	                    mov rbp, qword [rdi]	      2235	scsi_lib.c	FUNCTION_67
0x4003e67	      0xbeffffffff	                     mov esi, 0xffffffff	      2238	scsi_lib.c	FUNCTION_67	CALL_1
0x4003e6c	      0xbfc0004001	                      mov edi, 0x14000c0	      2238	scsi_lib.c	FUNCTION_67	CALL_1
0x4003e71	      0xe800000000	                          call 0x4003e76	      2238	scsi_lib.c	FUNCTION_67	CALL_1
0x4003e76	          0x4885c0	                           test rax, rax	      2239	scsi_lib.c	FUNCTION_67	IF_1
0x4003e79	     0xf84c5000000	                            je 0x4003f44	      2239	scsi_lib.c	FUNCTION_67	IF_1
0x4003e7f	          0x4889c3	                            mov rbx, rax	      2239	scsi_lib.c	FUNCTION_67	IF_1
0x4003e82	    0x488b85980000	            mov rax, qword [rbp + 0x98] 	      2241	scsi_lib.c	FUNCTION_67
0x4003e89	          0x4889df	                            mov rdi, rbx	      2248	scsi_lib.c	FUNCTION_67	IF_2	CALL_2
0x4003e8c	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	      2241	scsi_lib.c	FUNCTION_67
0x4003e92	    0x4889aba00800	            mov qword [rbx + 0x8a0], rbp	      2242	scsi_lib.c	FUNCTION_67
0x4003e99	    0x48c783980000	               mov qword [rbx + 0x98], 0	      2243	scsi_lib.c	FUNCTION_67
0x4003ea4	    0x48c783e00000	               mov qword [rbx + 0xe0], 0	      2244	scsi_lib.c	FUNCTION_67
0x4003eaf	    0x48c783e80000	               mov qword [rbx + 0xe8], 0	      2245	scsi_lib.c	FUNCTION_67
0x4003eba	    0x48c783f00000	               mov qword [rbx + 0xf0], 0	      2246	scsi_lib.c	FUNCTION_67
0x4003ec5	    0x480598010000	                          add rax, 0x198	      2241	scsi_lib.c	FUNCTION_67
0x4003ecb	    0x488983980800	            mov qword [rbx + 0x898], rax	      2241	scsi_lib.c	FUNCTION_67
0x4003ed2	      0xe800000000	                          call 0x4003ed7	      2248	scsi_lib.c	FUNCTION_67	IF_2	CALL_2
0x4003ed7	            0x85c0	                           test eax, eax	      2248	scsi_lib.c	FUNCTION_67	IF_2	CALL_2
0x4003ed9	            0x786d	                            js 0x4003f48	      2248	scsi_lib.c	FUNCTION_67	IF_2	CALL_2
0x4003edb	          0x4889de	                            mov rsi, rbx	      2253	scsi_lib.c	FUNCTION_67	CALL_4
0x4003ede	          0x4889ef	                            mov rdi, rbp	      2253	scsi_lib.c	FUNCTION_67	CALL_4
0x4003ee1	      0xe800000000	                          call 0x4003ee6	      2253	scsi_lib.c	FUNCTION_67	CALL_4
0x4003ee6	          0x4889de	                            mov rsi, rbx	      2254	scsi_lib.c	FUNCTION_67	CALL_5
0x4003ee9	      0xbf1b000000	                           mov edi, 0x1b	      2254	scsi_lib.c	FUNCTION_67	CALL_5
0x4003eee	      0xe800000000	                          call 0x4003ef3	      2254	scsi_lib.c	FUNCTION_67	CALL_5
0x4003ef3	    0x48c7c6000000	                              mov rsi, 0	      2255	scsi_lib.c	FUNCTION_67	CALL_6
0x4003efa	          0x4889df	                            mov rdi, rbx	      2255	scsi_lib.c	FUNCTION_67	CALL_6
0x4003efd	      0xe800000000	                          call 0x4003f02	      2255	scsi_lib.c	FUNCTION_67	CALL_6
0x4003f02	    0x48c7c6000000	                              mov rsi, 0	      2256	scsi_lib.c	FUNCTION_67	CALL_7
0x4003f09	          0x4889df	                            mov rdi, rbx	      2256	scsi_lib.c	FUNCTION_67	CALL_7
0x4003f0c	      0xe800000000	                          call 0x4003f11	      2256	scsi_lib.c	FUNCTION_67	CALL_7
0x4003f11	    0x48c7c6000000	                              mov rsi, 0	      2257	scsi_lib.c	FUNCTION_67	CALL_8
0x4003f18	          0x4889df	                            mov rdi, rbx	      2257	scsi_lib.c	FUNCTION_67	CALL_8
0x4003f1b	      0xe800000000	                          call 0x4003f20	      2257	scsi_lib.c	FUNCTION_67	CALL_8
0x4003f20	    0x48c7c6000000	                              mov rsi, 0	      2258	scsi_lib.c	FUNCTION_67	CALL_9
0x4003f27	          0x4889df	                            mov rdi, rbx	      2258	scsi_lib.c	FUNCTION_67	CALL_9
0x4003f2a	      0xe800000000	                          call 0x4003f2f	      2258	scsi_lib.c	FUNCTION_67	CALL_9
0x4003f2f	    0x48c7c6000000	                              mov rsi, 0	      2259	scsi_lib.c	FUNCTION_67	CALL_10
0x4003f36	          0x4889df	                            mov rdi, rbx	      2259	scsi_lib.c	FUNCTION_67	CALL_10
0x4003f39	      0xe800000000	                          call 0x4003f3e	      2259	scsi_lib.c	FUNCTION_67	CALL_10
0x4003f3e	          0x4889d8	                            mov rax, rbx	      2260	scsi_lib.c	FUNCTION_67
0x4003f41	              0x5b	                                 pop rbx	      2261	scsi_lib.c	FUNCTION_67
0x4003f42	              0x5d	                                 pop rbp	      2261	scsi_lib.c	FUNCTION_67
0x4003f43	              0xc3	                                     ret	      2261	scsi_lib.c	FUNCTION_67
0x4003f44	            0x31c0	                            xor eax, eax	      2240	scsi_lib.c	FUNCTION_67	IF_1
0x4003f46	            0xebf9	                           jmp 0x4003f41	      2240	scsi_lib.c	FUNCTION_67	IF_1
0x4003f48	          0x4889df	                            mov rdi, rbx	      2249	scsi_lib.c	FUNCTION_67	IF_2	CALL_3
0x4003f4b	      0xe800000000	                          call 0x4003f50	      2249	scsi_lib.c	FUNCTION_67	IF_2	CALL_3
0x4003f50	            0x31c0	                            xor eax, eax	      2250	scsi_lib.c	FUNCTION_67	IF_2
0x4003f52	            0xebed	                           jmp 0x4003f41	      2250	scsi_lib.c	FUNCTION_67	IF_2
scsi_init_queue	FOR,0:CALL,2:functions,0:WHILE,0:IF,1:DO,0:ELSE,0:SWITCH,0	15
0x4000040	    0x488b97280100	           mov rdx, qword [rdi + 0x128] 	       599	scsi_lib.c	FUNCTION_23	IF_1	CALL_1
0x4000047	         0xfb64214	           movzx eax, byte [rdx + 0x14] 	       295	blkdev.h	FUNCTION_114	CALL_2
0x400004b	          0x83e820	                           sub eax, 0x20	       295	blkdev.h	FUNCTION_114	CALL_2
0x400004e	          0x83f803	                              cmp eax, 3	       295	blkdev.h	FUNCTION_114	CALL_2
0x4000051	            0x7624	                           jbe 0x4000077	       295	blkdev.h	FUNCTION_114	CALL_2
0x4000053	    0x488b82980000	            mov rax, qword [rdx + 0x98] 	       165	scsi_cmnd.h	FUNCTION_241
0x400005a	    0x488b80c80300	           mov rax, qword [rax + 0x3c8] 	       165	scsi_cmnd.h	FUNCTION_241
0x4000061	          0x488b00	                    mov rax, qword [rax]	       602	scsi_lib.c	FUNCTION_23	IF_1	IF_2
0x4000064	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       602	scsi_lib.c	FUNCTION_23	IF_1	IF_2
0x400006b	          0x4885c0	                           test rax, rax	       602	scsi_lib.c	FUNCTION_23	IF_1	IF_2
0x400006e	            0x7405	                            je 0x4000075	       602	scsi_lib.c	FUNCTION_23	IF_1	IF_2
0x4000070	      0xe900000000	                           jmp 0x4000075	       603	scsi_lib.c	FUNCTION_23	IF_1	CALL_3
0x4000075	            0xf3c3	                                     ret	       603	scsi_lib.c	FUNCTION_23	IF_1	CALL_3
0x4000077	            0xf3c3	                                     ret	       603	scsi_lib.c	FUNCTION_23	IF_1	CALL_3
0x4000079	               0xf	                                 invalid	       603	scsi_lib.c	FUNCTION_23	IF_1	CALL_3
device_resume_fn	FOR,0:CALL,1:functions,0:WHILE,0:IF,0:DO,0:ELSE,0:SWITCH,0	1
0x40015f0	            0xeb9e	              jmp sym.scsi_device_resume	      3060	scsi_lib.c	FUNCTION_91	CALL_1
scsi_init_sense_cache	FOR,0:CALL,5:functions,0:WHILE,0:IF,4:DO,0:ELSE,1:SWITCH,0	42
0x4002590	    0xf68780010000	              test byte [rdi + 0x180], 4	        52	scsi_lib.c	FUNCTION_1
0x4002597	    0x488b15000000	            mov rdx, qword [0x0400259e] 	        52	scsi_lib.c	FUNCTION_1
0x400259e	    0x480f44150000	           cmove rdx, qword [0x040025a6]	        52	scsi_lib.c	FUNCTION_1
0x40025a6	          0x4885d2	                           test rdx, rdx	        75	scsi_lib.c	FUNCTION_4	IF_1
0x40025a9	            0x7403	                            je 0x40025ae	        75	scsi_lib.c	FUNCTION_4	IF_1
0x40025ab	            0x31c0	                            xor eax, eax	        75	scsi_lib.c	FUNCTION_4	IF_1
0x40025ad	              0xc3	                                     ret	        75	scsi_lib.c	FUNCTION_4	IF_1
0x40025ae	              0x53	                                push rbx	        70	scsi_lib.c	FUNCTION_4
0x40025af	          0x4889fb	                            mov rbx, rdi	        70	scsi_lib.c	FUNCTION_4
0x40025b2	    0x48c7c7000000	                              mov rdi, 0	        78	scsi_lib.c	FUNCTION_4	CALL_2
0x40025b9	      0xe800000000	                          call 0x40025be	        78	scsi_lib.c	FUNCTION_4	CALL_2
0x40025be	    0xf68380010000	              test byte [rbx + 0x180], 4	        79	scsi_lib.c	FUNCTION_4	IF_2
0x40025c5	            0x7439	                            je 0x4002600	        79	scsi_lib.c	FUNCTION_4	IF_2
0x40025c7	          0x4531c0	                            xor r8d, r8d	        81	scsi_lib.c	FUNCTION_4	IF_2	CALL_3
0x40025ca	            0x31d2	                            xor edx, edx	        81	scsi_lib.c	FUNCTION_4	IF_2	CALL_3
0x40025cc	      0xb900600000	                         mov ecx, 0x6000	        81	scsi_lib.c	FUNCTION_4	IF_2	CALL_3
0x40025d1	      0xbe60000000	                           mov esi, 0x60	        81	scsi_lib.c	FUNCTION_4	IF_2	CALL_3
0x40025d6	    0x48c7c7000000	                              mov rdi, 0	        81	scsi_lib.c	FUNCTION_4	IF_2	CALL_3
0x40025dd	      0xe800000000	                          call 0x40025e2	        81	scsi_lib.c	FUNCTION_4	IF_2	CALL_3
0x40025e2	          0x4885c0	                           test rax, rax	        84	scsi_lib.c	FUNCTION_4	IF_2	IF_3
0x40025e5	    0x488905000000	            mov qword [0x040025ec], rax 	        80	scsi_lib.c	FUNCTION_4	IF_2
0x40025ec	            0x7442	                            je 0x4002630	        84	scsi_lib.c	FUNCTION_4	IF_2	IF_3
0x40025ee	            0x31db	                            xor ebx, ebx	        72	scsi_lib.c	FUNCTION_4
0x40025f0	    0x48c7c7000000	                              mov rdi, 0	        95	scsi_lib.c	FUNCTION_4	CALL_5
0x40025f7	      0xe800000000	                          call 0x40025fc	        95	scsi_lib.c	FUNCTION_4	CALL_5
0x40025fc	            0x89d8	                            mov eax, ebx	        96	scsi_lib.c	FUNCTION_4
0x40025fe	              0x5b	                                 pop rbx	        97	scsi_lib.c	FUNCTION_4
0x40025ff	              0xc3	                                     ret	        97	scsi_lib.c	FUNCTION_4
0x4002600	            0x6a00	                                  push 0	        88	scsi_lib.c	FUNCTION_4	ELSE_1	CALL_4
0x4002602	            0x31d2	                            xor edx, edx	        88	scsi_lib.c	FUNCTION_4	ELSE_1	CALL_4
0x4002604	          0x4531c0	                            xor r8d, r8d	        88	scsi_lib.c	FUNCTION_4	ELSE_1	CALL_4
0x4002607	    0x41b960000000	                           mov r9d, 0x60	        88	scsi_lib.c	FUNCTION_4	ELSE_1	CALL_4
0x400260d	      0xb900200000	                         mov ecx, 0x2000	        88	scsi_lib.c	FUNCTION_4	ELSE_1	CALL_4
0x4002612	      0xbe60000000	                           mov esi, 0x60	        88	scsi_lib.c	FUNCTION_4	ELSE_1	CALL_4
0x4002617	    0x48c7c7000000	                              mov rdi, 0	        88	scsi_lib.c	FUNCTION_4	ELSE_1	CALL_4
0x400261e	      0xe800000000	                          call 0x4002623	        88	scsi_lib.c	FUNCTION_4	ELSE_1	CALL_4
0x4002623	          0x4885c0	                           test rax, rax	        91	scsi_lib.c	FUNCTION_4	ELSE_1	IF_4
0x4002626	    0x488905000000	            mov qword [0x0400262d], rax 	        87	scsi_lib.c	FUNCTION_4	ELSE_1
0x400262d	              0x5a	                                 pop rdx	        91	scsi_lib.c	FUNCTION_4	ELSE_1	IF_4
0x400262e	            0x75be	                           jne 0x40025ee	        91	scsi_lib.c	FUNCTION_4	ELSE_1	IF_4
0x4002630	      0xbbf4ffffff	                     mov ebx, 0xfffffff4	        85	scsi_lib.c	FUNCTION_4	IF_2	IF_3
0x4002635	            0xebb9	                           jmp 0x40025f0	        85	scsi_lib.c	FUNCTION_4	IF_2	IF_3
scsi_unprep_fn	FOR,0:CALL,2:functions,0:WHILE,0:IF,0:DO,0:ELSE,0:SWITCH,0	2
0x4000080	    0x488dbe280100	                  lea rdi, [rsi + 0x128]	      1438	scsi_lib.c	FUNCTION_43	CALL_2
0x4000087	            0xebb7	                 jmp sym.scsi_uninit_cmd	      1438	scsi_lib.c	FUNCTION_43	CALL_2
scsi_kick_queue	FOR,0:CALL,2:functions,0:WHILE,0:IF,1:DO,0:ELSE,1:SWITCH,0	4
0x4000a90	    0x4883bff80000	               cmp qword [rdi + 0xf8], 0	       373	scsi_lib.c	FUNCTION_13	IF_1
0x4000a98	            0x7405	                            je 0x4000a9f	       373	scsi_lib.c	FUNCTION_13	IF_1
0x4000a9a	      0xe900000000	                           jmp 0x4000a9f	       374	scsi_lib.c	FUNCTION_13	CALL_1
0x4000a9f	      0xe900000000	                           jmp 0x4000aa4	       376	scsi_lib.c	FUNCTION_13	CALL_2
scsi_unblock_requests	FOR,0:CALL,1:functions,0:WHILE,0:IF,0:DO,0:ELSE,0:SWITCH,0	2
0x4002df0	    0x80a780010000	            and byte [rdi + 0x180], 0xef	      2385	scsi_lib.c	FUNCTION_73
0x4002df7	            0xebb7	            jmp sym.scsi_run_host_queues	      2386	scsi_lib.c	FUNCTION_73	CALL_1
scsi_release_buffers	FOR,0:CALL,4:functions,0:WHILE,0:IF,2:DO,0:ELSE,0:SWITCH,0	27
0x4000df0	              0x55	                                push rbp	       646	scsi_lib.c	FUNCTION_26
0x4000df1	              0x53	                                push rbx	       646	scsi_lib.c	FUNCTION_26
0x4000df2	          0x4889fd	                            mov rbp, rdi	       646	scsi_lib.c	FUNCTION_26
0x4000df5	    0x8b9708010000	           mov edx, dword [rdi + 0x108] 	       647	scsi_lib.c	FUNCTION_26	IF_1
0x4000dfb	    0x488d9f000100	                  lea rbx, [rdi + 0x100]	       648	scsi_lib.c	FUNCTION_26	CALL_1
0x4000e02	            0x85d2	                           test edx, edx	       647	scsi_lib.c	FUNCTION_26	IF_1
0x4000e04	            0x7536	                           jne 0x4000e3c	       647	scsi_lib.c	FUNCTION_26	IF_1
0x4000e06	    0x48c703000000	                      mov qword [rbx], 0	       650	scsi_lib.c	FUNCTION_26	CALL_2
0x4000e0d	    0x48c743080000	                  mov qword [rbx + 8], 0	       650	scsi_lib.c	FUNCTION_26	CALL_2
0x4000e15	    0x48c743100000	               mov qword [rbx + 0x10], 0	       650	scsi_lib.c	FUNCTION_26	CALL_2
0x4000e1d	    0x488bbd180100	           mov rdi, qword [rbp + 0x118] 	       324	scsi_cmnd.h	FUNCTION_261
0x4000e24	          0x4885ff	                           test rdi, rdi	       324	scsi_cmnd.h	FUNCTION_261
0x4000e27	            0x7407	                            je 0x4000e30	       324	scsi_cmnd.h	FUNCTION_261
0x4000e29	          0x8b4708	                mov eax, dword [rdi + 8]	       652	scsi_lib.c	FUNCTION_26	IF_2	CALL_3
0x4000e2c	            0x85c0	                           test eax, eax	       652	scsi_lib.c	FUNCTION_26	IF_2	CALL_3
0x4000e2e	            0x7503	                           jne 0x4000e33	       652	scsi_lib.c	FUNCTION_26	IF_2	CALL_3
0x4000e30	              0x5b	                                 pop rbx	       654	scsi_lib.c	FUNCTION_26
0x4000e31	              0x5d	                                 pop rbp	       654	scsi_lib.c	FUNCTION_26
0x4000e32	              0xc3	                                     ret	       654	scsi_lib.c	FUNCTION_26
0x4000e33	              0x5b	                                 pop rbx	       654	scsi_lib.c	FUNCTION_26
0x4000e34	              0x5d	                                 pop rbp	       654	scsi_lib.c	FUNCTION_26
0x4000e35	            0x31f6	                            xor esi, esi	       653	scsi_lib.c	FUNCTION_26	CALL_4
0x4000e37	      0xe900000000	                           jmp 0x4000e3c	       653	scsi_lib.c	FUNCTION_26	CALL_4
0x4000e3c	            0x31f6	                            xor esi, esi	       648	scsi_lib.c	FUNCTION_26	CALL_1
0x4000e3e	          0x4889df	                            mov rdi, rbx	       648	scsi_lib.c	FUNCTION_26	CALL_1
0x4000e41	      0xe800000000	                          call 0x4000e46	       648	scsi_lib.c	FUNCTION_26	CALL_1
0x4000e46	            0xebbe	                           jmp 0x4000e06	       648	scsi_lib.c	FUNCTION_26	CALL_1
scsi_target_unblock	FOR,0:CALL,4:functions,0:WHILE,0:IF,1:DO,0:ELSE,1:SWITCH,0	21
0x4001780	              0x53	                                push rbx	      3281	scsi_lib.c	FUNCTION_103
0x4001781	          0x4889fb	                            mov rbx, rdi	      3281	scsi_lib.c	FUNCTION_103
0x4001784	        0x4883ec08	                              sub rsp, 8	      3281	scsi_lib.c	FUNCTION_103
0x4001788	        0x89742404	                mov dword [rsp + 4], esi	      3281	scsi_lib.c	FUNCTION_103
0x400178c	      0xe800000000	                          call 0x4001791	      3282	scsi_lib.c	FUNCTION_103	IF_1	CALL_1
0x4001791	            0x85c0	                           test eax, eax	      3282	scsi_lib.c	FUNCTION_103	IF_1	CALL_1
0x4001793	            0x751a	                           jne 0x40017af	      3282	scsi_lib.c	FUNCTION_103	IF_1	CALL_1
0x4001795	      0x488d742404	                      lea rsi, [rsp + 4]	      3286	scsi_lib.c	FUNCTION_103	CALL_4
0x400179a	          0x4889df	                            mov rdi, rbx	      3286	scsi_lib.c	FUNCTION_103	CALL_4
0x400179d	    0x48c7c2000000	                              mov rdx, 0	      3286	scsi_lib.c	FUNCTION_103	CALL_4
0x40017a4	      0xe800000000	                          call 0x40017a9	      3286	scsi_lib.c	FUNCTION_103	CALL_4
0x40017a9	        0x4883c408	                              add rsp, 8	      3287	scsi_lib.c	FUNCTION_103
0x40017ad	              0x5b	                                 pop rbx	      3287	scsi_lib.c	FUNCTION_103
0x40017ae	              0xc3	                                     ret	      3287	scsi_lib.c	FUNCTION_103
0x40017af	        0x488d7bd8	                   lea rdi, [rbx - 0x28]	      3283	scsi_lib.c	FUNCTION_103	IF_1	CALL_3
0x40017b3	      0x488d742404	                      lea rsi, [rsp + 4]	      3283	scsi_lib.c	FUNCTION_103	IF_1	CALL_3
0x40017b8	    0x48c7c2000000	                              mov rdx, 0	      3283	scsi_lib.c	FUNCTION_103	IF_1	CALL_3
0x40017bf	      0xe800000000	                          call 0x40017c4	      3283	scsi_lib.c	FUNCTION_103	IF_1	CALL_3
0x40017c4	        0x4883c408	                              add rsp, 8	      3287	scsi_lib.c	FUNCTION_103
0x40017c8	              0x5b	                                 pop rbx	      3287	scsi_lib.c	FUNCTION_103
0x40017c9	              0xc3	                                     ret	      3287	scsi_lib.c	FUNCTION_103
scsi_device_resume	FOR,0:CALL,5:functions,0:WHILE,0:IF,1:DO,0:ELSE,0:SWITCH,0	24
0x4001590	              0x55	                                push rbp	      3029	scsi_lib.c	FUNCTION_88
0x4001591	    0x488daf700700	                  lea rbp, [rdi + 0x770]	      3034	scsi_lib.c	FUNCTION_88	CALL_1
0x4001598	              0x53	                                push rbx	      3029	scsi_lib.c	FUNCTION_88
0x4001599	          0x4889fb	                            mov rbx, rdi	      3029	scsi_lib.c	FUNCTION_88
0x400159c	          0x4889ef	                            mov rdi, rbp	      3034	scsi_lib.c	FUNCTION_88	CALL_1
0x400159f	      0xe800000000	                          call 0x40015a4	      3034	scsi_lib.c	FUNCTION_88	CALL_1
0x40015a4	    0x4883bb980700	              cmp qword [rbx + 0x798], 0	      3035	scsi_lib.c	FUNCTION_88	CALL_2
0x40015ac	            0x743b	                            je 0x40015e9	      3035	scsi_lib.c	FUNCTION_88	CALL_2
0x40015ae	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3037	scsi_lib.c	FUNCTION_88	CALL_3
0x40015b2	    0x48c783980700	              mov qword [rbx + 0x798], 0	      3036	scsi_lib.c	FUNCTION_88
0x40015bd	      0xe800000000	                          call 0x40015c2	      3037	scsi_lib.c	FUNCTION_88	CALL_3
0x40015c2	    0x83bb90070000	              cmp dword [rbx + 0x790], 5	      3038	scsi_lib.c	FUNCTION_88	IF_1
0x40015c9	            0x740a	                            je 0x40015d5	      3038	scsi_lib.c	FUNCTION_88	IF_1
0x40015cb	          0x4889ef	                            mov rdi, rbp	      3040	scsi_lib.c	FUNCTION_88	CALL_5
0x40015ce	              0x5b	                                 pop rbx	      3041	scsi_lib.c	FUNCTION_88
0x40015cf	              0x5d	                                 pop rbp	      3041	scsi_lib.c	FUNCTION_88
0x40015d0	      0xe900000000	                           jmp 0x40015d5	      3040	scsi_lib.c	FUNCTION_88	CALL_5
0x40015d5	    0xc78390070000	              mov dword [rbx + 0x790], 2	      2746	scsi_lib.c	FUNCTION_79
0x40015df	          0x4889ef	                            mov rdi, rbp	      3040	scsi_lib.c	FUNCTION_88	CALL_5
0x40015e2	              0x5b	                                 pop rbx	      3041	scsi_lib.c	FUNCTION_88
0x40015e3	              0x5d	                                 pop rbp	      3041	scsi_lib.c	FUNCTION_88
0x40015e4	      0xe900000000	                           jmp 0x40015e9	      3040	scsi_lib.c	FUNCTION_88	CALL_5
0x40015e9	             0xf0b	                                     ud2	      3040	scsi_lib.c	FUNCTION_88	CALL_5
0x40015eb	            0xebc1	                           jmp 0x40015ae	      3035	scsi_lib.c	FUNCTION_88	CALL_2
scsi_device_from_queue	FOR,0:CALL,1:functions,0:WHILE,0:IF,4:DO,0:ELSE,1:SWITCH,0	22
0x4001000	              0x53	                                push rbx	      2326	scsi_lib.c	FUNCTION_71
0x4001001	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      2329	scsi_lib.c	FUNCTION_71	IF_1
0x4001008	          0x4885c0	                           test rax, rax	      2329	scsi_lib.c	FUNCTION_71	IF_1
0x400100b	            0x740f	                            je 0x400101c	      2329	scsi_lib.c	FUNCTION_71	IF_1
0x400100d	    0x483d00000000	                              cmp rax, 0	      2330	scsi_lib.c	FUNCTION_71	IF_1	IF_2
0x4001013	            0x7414	                            je 0x4001029	      2330	scsi_lib.c	FUNCTION_71	IF_1	IF_2
0x4001015	            0x31db	                            xor ebx, ebx	      2335	scsi_lib.c	FUNCTION_71	IF_4
0x4001017	          0x4889d8	                            mov rax, rbx	      2338	scsi_lib.c	FUNCTION_71
0x400101a	              0x5b	                                 pop rbx	      2338	scsi_lib.c	FUNCTION_71
0x400101b	              0xc3	                                     ret	      2338	scsi_lib.c	FUNCTION_71
0x400101c	    0x4881bf980000	               cmp qword [rdi + 0x98], 0	      2332	scsi_lib.c	FUNCTION_71	ELSE_1	IF_3
0x4001027	            0x75ec	                           jne 0x4001015	      2332	scsi_lib.c	FUNCTION_71	ELSE_1	IF_3
0x4001029	    0x488b9f980100	           mov rbx, qword [rdi + 0x198] 	      2331	scsi_lib.c	FUNCTION_71	IF_1	IF_2
0x4001030	          0x4885db	                           test rbx, rbx	      2334	scsi_lib.c	FUNCTION_71	IF_4	CALL_1
0x4001033	            0x74e0	                            je 0x4001015	      2334	scsi_lib.c	FUNCTION_71	IF_4	CALL_1
0x4001035	    0x488dbb780100	                  lea rdi, [rbx + 0x178]	      2334	scsi_lib.c	FUNCTION_71	IF_4	CALL_1
0x400103c	      0xe800000000	                          call 0x4001041	      2334	scsi_lib.c	FUNCTION_71	IF_4	CALL_1
0x4001041	          0x4885c0	                           test rax, rax	      2334	scsi_lib.c	FUNCTION_71	IF_4	CALL_1
0x4001044	            0x74cf	                            je 0x4001015	      2334	scsi_lib.c	FUNCTION_71	IF_4	CALL_1
0x4001046	          0x4889d8	                            mov rax, rbx	      2338	scsi_lib.c	FUNCTION_71
0x4001049	              0x5b	                                 pop rbx	      2338	scsi_lib.c	FUNCTION_71
0x400104a	              0xc3	                                     ret	      2338	scsi_lib.c	FUNCTION_71
scsi_mq_alloc_queue	FOR,0:CALL,4:functions,0:WHILE,0:IF,1:DO,0:ELSE,0:SWITCH,0	21
0x4003f60	              0x53	                                push rbx	      2279	scsi_lib.c	FUNCTION_68
0x4003f61	          0x488b07	                    mov rax, qword [rdi]	      2280	scsi_lib.c	FUNCTION_68	CALL_1
0x4003f64	          0x4889fb	                            mov rbx, rdi	      2279	scsi_lib.c	FUNCTION_68
0x4003f67	    0x488db8a80000	                   lea rdi, [rax + 0xa8]	      2280	scsi_lib.c	FUNCTION_68	CALL_1
0x4003f6e	      0xe800000000	                          call 0x4003f73	      2280	scsi_lib.c	FUNCTION_68	CALL_1
0x4003f73	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	      2281	scsi_lib.c	FUNCTION_68	IF_1	CALL_2
0x4003f79	        0x48894308	                mov qword [rbx + 8], rax	      2280	scsi_lib.c	FUNCTION_68	CALL_1
0x4003f7d	            0x7727	                            ja 0x4003fa6	      2281	scsi_lib.c	FUNCTION_68	IF_1	CALL_2
0x4003f7f	    0x488998980100	            mov qword [rax + 0x198], rbx	      2284	scsi_lib.c	FUNCTION_68
0x4003f86	        0x488b7308	                mov rsi, qword [rbx + 8]	      2285	scsi_lib.c	FUNCTION_68	CALL_3
0x4003f8a	          0x488b3b	                    mov rdi, qword [rbx]	      2285	scsi_lib.c	FUNCTION_68	CALL_3
0x4003f8d	      0xe800000000	                          call 0x4003f92	      2285	scsi_lib.c	FUNCTION_68	CALL_3
0x4003f92	        0x488b7308	                mov rsi, qword [rbx + 8]	      2286	scsi_lib.c	FUNCTION_68	CALL_4
0x4003f96	      0xbf1b000000	                           mov edi, 0x1b	      2286	scsi_lib.c	FUNCTION_68	CALL_4
0x4003f9b	      0xe800000000	                          call 0x4003fa0	      2286	scsi_lib.c	FUNCTION_68	CALL_4
0x4003fa0	        0x488b4308	                mov rax, qword [rbx + 8]	      2287	scsi_lib.c	FUNCTION_68
0x4003fa4	              0x5b	                                 pop rbx	      2288	scsi_lib.c	FUNCTION_68
0x4003fa5	              0xc3	                                     ret	      2288	scsi_lib.c	FUNCTION_68
0x4003fa6	            0x31c0	                            xor eax, eax	      2282	scsi_lib.c	FUNCTION_68	IF_1
0x4003fa8	              0x5b	                                 pop rbx	      2288	scsi_lib.c	FUNCTION_68
0x4003fa9	              0xc3	                                     ret	      2288	scsi_lib.c	FUNCTION_68
scsi_requeue_run_queue	FOR,0:CALL,2:functions,0:WHILE,0:IF,0:DO,0:ELSE,0:SWITCH,0	2
0x4002da0	    0x488bbfd0f8ff	            mov rdi, qword [rdi - 0x730]	       550	scsi_lib.c	FUNCTION_20	CALL_2
0x4002da7	      0xe904ddffff	                  jmp sym.scsi_run_queue	       550	scsi_lib.c	FUNCTION_20	CALL_2
scsi_target_quiesce	FOR,0:CALL,1:functions,0:WHILE,0:IF,0:DO,0:ELSE,0:SWITCH,0	3
0x40016d0	    0x48c7c2000000	                              mov rdx, 0	      3053	scsi_lib.c	FUNCTION_90	CALL_1
0x40016d7	            0x31f6	                            xor esi, esi	      3053	scsi_lib.c	FUNCTION_90	CALL_1
0x40016d9	      0xe900000000	                           jmp 0x40016de	      3053	scsi_lib.c	FUNCTION_90	CALL_1
scsi_mq_setup_tags	FOR,0:CALL,5:functions,0:WHILE,0:IF,1:DO,0:ELSE,0:SWITCH,0	43
0x4003fb0	     0xfb7875a0100	          movzx eax, word [rdi + 0x15a] 	      1945	scsi_lib.c	FUNCTION_54	CALL_1
0x4003fb7	    0x4c8b8f980000	              mov r9, qword [rdi + 0x98]	      2295	scsi_lib.c	FUNCTION_69
0x4003fbe	      0xb980000000	                           mov ecx, 0x80	      1945	scsi_lib.c	FUNCTION_54	CALL_1
0x4003fc3	          0x4889fa	                            mov rdx, rdi	      2291	scsi_lib.c	FUNCTION_69
0x4003fc6	    0x4c8d87a80000	                    lea r8, [rdi + 0xa8]	      2299	scsi_lib.c	FUNCTION_69	CALL_3
0x4003fcd	    0x488dbfb00000	                   lea rdi, [rdi + 0xb0]	      2299	scsi_lib.c	FUNCTION_69	CALL_3
0x4003fd4	      0x3d80000000	                           cmp eax, 0x80	      1945	scsi_lib.c	FUNCTION_54	CALL_1
0x4003fd9	           0xf47c1	                          cmova eax, ecx	      1945	scsi_lib.c	FUNCTION_54	CALL_1
0x4003fdc	    0x418b89280100	            mov ecx, dword [r9 + 0x128] 	      2295	scsi_lib.c	FUNCTION_69
0x4003fe3	    0x48c747f80000	                  mov qword [rdi - 8], 0	      2299	scsi_lib.c	FUNCTION_69	CALL_3
0x4003feb	          0xc1e005	                              shl eax, 5	      1945	scsi_lib.c	FUNCTION_54	CALL_1
0x4003fee	    0x48c747600000	               mov qword [rdi + 0x60], 0	      2299	scsi_lib.c	FUNCTION_69	CALL_3
0x4003ff6	    0x8db408980100	           lea esi, [rax + rcx + 0x198] 	      2295	scsi_lib.c	FUNCTION_69
0x4003ffd	    0x8b8f00010000	           mov ecx, dword [rdi + 0x100] 	      2296	scsi_lib.c	FUNCTION_69	IF_1	CALL_2
0x4004003	        0x8d440618	            lea eax, [rsi + rax + 0x18] 	      2297	scsi_lib.c	FUNCTION_69	IF_1
0x4004007	            0x85c9	                           test ecx, ecx	      2296	scsi_lib.c	FUNCTION_69	IF_1	CALL_2
0x4004009	          0x4c89c1	                             mov rcx, r8	      2299	scsi_lib.c	FUNCTION_69	CALL_3
0x400400c	           0xf45f0	                         cmovne esi, eax	      2297	scsi_lib.c	FUNCTION_69	IF_1
0x400400f	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	      2299	scsi_lib.c	FUNCTION_69	CALL_3
0x4004013	            0x31c0	                            xor eax, eax	      2299	scsi_lib.c	FUNCTION_69	CALL_3
0x4004015	          0x4829f9	                            sub rcx, rdi	      2299	scsi_lib.c	FUNCTION_69	CALL_3
0x4004018	          0x83c170	                           add ecx, 0x70	      2299	scsi_lib.c	FUNCTION_69	CALL_3
0x400401b	          0xc1e903	                              shr ecx, 3	      2299	scsi_lib.c	FUNCTION_69	CALL_3
0x400401e	          0xf348ab	              rep stosq qword [rdi], rax	      2299	scsi_lib.c	FUNCTION_69	CALL_3
0x4004021	      0xb901000000	                              mov ecx, 1	      2301	scsi_lib.c	FUNCTION_69
0x4004026	    0xc782d0000000	               mov dword [rdx + 0xd0], 5	      2305	scsi_lib.c	FUNCTION_69
0x4004030	    0x48c782b00000	               mov qword [rdx + 0xb0], 0	      2300	scsi_lib.c	FUNCTION_69
0x400403b	    0x89b2c4000000	             mov dword [rdx + 0xc4], esi	      2303	scsi_lib.c	FUNCTION_69
0x4004041	    0xc782c8000000	     mov dword [rdx + 0xc8], 0xffffffff 	      2304	scsi_lib.c	FUNCTION_69
0x400404b	          0x4c89c7	                             mov rdi, r8	      2310	scsi_lib.c	FUNCTION_69	CALL_5
0x400404e	    0x8b8270010000	           mov eax, dword [rdx + 0x170] 	      2301	scsi_lib.c	FUNCTION_69
0x4004054	            0x85c0	                           test eax, eax	      2301	scsi_lib.c	FUNCTION_69
0x4004056	           0xf44c1	                          cmove eax, ecx	      2301	scsi_lib.c	FUNCTION_69
0x4004059	    0x8982b8000000	             mov dword [rdx + 0xb8], eax	      2301	scsi_lib.c	FUNCTION_69
0x400405f	    0x8b8254010000	           mov eax, dword [rdx + 0x154] 	      2302	scsi_lib.c	FUNCTION_69
0x4004065	    0x8982bc000000	             mov dword [rdx + 0xbc], eax	      2302	scsi_lib.c	FUNCTION_69
0x400406b	    0x418b81fc0000	              mov eax, dword [r9 + 0xfc]	      2306	scsi_lib.c	FUNCTION_69
0x4004072	    0x488992d80000	             mov qword [rdx + 0xd8], rdx	      2308	scsi_lib.c	FUNCTION_69
0x4004079	          0x83e001	                              and eax, 1	      2306	scsi_lib.c	FUNCTION_69
0x400407c	          0xc1e008	                              shl eax, 8	      2306	scsi_lib.c	FUNCTION_69
0x400407f	          0x83c805	                               or eax, 5	      2306	scsi_lib.c	FUNCTION_69
0x4004082	    0x8982d0000000	             mov dword [rdx + 0xd0], eax	      2306	scsi_lib.c	FUNCTION_69
0x4004088	      0xe900000000	                           jmp 0x400408d	      2310	scsi_lib.c	FUNCTION_69	CALL_5
scsi_old_exit_rq	FOR,0:CALL,3:functions,0:WHILE,0:IF,1:DO,0:ELSE,0:SWITCH,0	13
0x4000e50	              0x53	                                push rbx	      2224	scsi_lib.c	FUNCTION_66
0x4000e51	          0x4889f3	                            mov rbx, rsi	      2224	scsi_lib.c	FUNCTION_66
0x4000e54	    0x488bb6400200	           mov rsi, qword [rsi + 0x240] 	      2227	scsi_lib.c	FUNCTION_66	IF_1
0x4000e5b	          0x4885f6	                           test rsi, rsi	      2227	scsi_lib.c	FUNCTION_66	IF_1
0x4000e5e	            0x740c	                            je 0x4000e6c	      2227	scsi_lib.c	FUNCTION_66	IF_1
0x4000e60	    0x488b3d000000	            mov rdi, qword [0x04000e67] 	      2228	scsi_lib.c	FUNCTION_66	CALL_2
0x4000e67	      0xe800000000	                          call 0x4000e6c	      2228	scsi_lib.c	FUNCTION_66	CALL_2
0x4000e6c	    0xf683b4020000	              test byte [rbx + 0x2b4], 2	        52	scsi_lib.c	FUNCTION_1
0x4000e73	    0x488bb3580200	           mov rsi, qword [rbx + 0x258] 	      2229	scsi_lib.c	FUNCTION_66	CALL_3
0x4000e7a	    0x488b3d000000	            mov rdi, qword [0x04000e81] 	        52	scsi_lib.c	FUNCTION_1
0x4000e81	    0x480f443d0000	           cmove rdi, qword [0x04000e89]	        52	scsi_lib.c	FUNCTION_1
0x4000e89	              0x5b	                                 pop rbx	      2231	scsi_lib.c	FUNCTION_66
0x4000e8a	      0xe900000000	                           jmp 0x4000e8f	        58	scsi_lib.c	FUNCTION_2	CALL_2
scsi_uninit_cmd	FOR,0:CALL,3:functions,0:WHILE,0:IF,2:DO,0:ELSE,0:SWITCH,0	14
0x4000040	    0x488b97280100	           mov rdx, qword [rdi + 0x128] 	       599	scsi_lib.c	FUNCTION_23	IF_1	CALL_1
0x4000047	         0xfb64214	           movzx eax, byte [rdx + 0x14] 	       295	blkdev.h	FUNCTION_114	CALL_2
0x400004b	          0x83e820	                           sub eax, 0x20	       295	blkdev.h	FUNCTION_114	CALL_2
0x400004e	          0x83f803	                              cmp eax, 3	       295	blkdev.h	FUNCTION_114	CALL_2
0x4000051	            0x7624	                           jbe 0x4000077	       295	blkdev.h	FUNCTION_114	CALL_2
0x4000053	    0x488b82980000	            mov rax, qword [rdx + 0x98] 	       165	scsi_cmnd.h	FUNCTION_241
0x400005a	    0x488b80c80300	           mov rax, qword [rax + 0x3c8] 	       165	scsi_cmnd.h	FUNCTION_241
0x4000061	          0x488b00	                    mov rax, qword [rax]	       602	scsi_lib.c	FUNCTION_23	IF_1	IF_2
0x4000064	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       602	scsi_lib.c	FUNCTION_23	IF_1	IF_2
0x400006b	          0x4885c0	                           test rax, rax	       602	scsi_lib.c	FUNCTION_23	IF_1	IF_2
0x400006e	            0x7405	                            je 0x4000075	       602	scsi_lib.c	FUNCTION_23	IF_1	IF_2
0x4000070	      0xe900000000	                           jmp 0x4000075	       603	scsi_lib.c	FUNCTION_23	IF_1	CALL_3
0x4000075	            0xf3c3	                                     ret	       603	scsi_lib.c	FUNCTION_23	IF_1	CALL_3
0x4000077	            0xf3c3	                                     ret	       603	scsi_lib.c	FUNCTION_23	IF_1	CALL_3
device_unblock	FOR,0:CALL,1:functions,0:WHILE,0:IF,0:DO,0:ELSE,0:SWITCH,0	16
0x4004390	            0x4154	                                push r12	      3266	scsi_lib.c	FUNCTION_101
0x4004392	              0x55	                                push rbp	      3266	scsi_lib.c	FUNCTION_101
0x4004393	          0x4889fd	                            mov rbp, rdi	      3266	scsi_lib.c	FUNCTION_101
0x4004396	              0x53	                                push rbx	      3266	scsi_lib.c	FUNCTION_101
0x4004397	    0x488d9f700700	                  lea rbx, [rdi + 0x770]	      3231	scsi_lib.c	FUNCTION_97	CALL_1
0x400439e	          0x448b26	                   mov r12d, dword [rsi]	      3267	scsi_lib.c	FUNCTION_101	CALL_1
0x40043a1	          0x4889df	                            mov rdi, rbx	      3231	scsi_lib.c	FUNCTION_97	CALL_1
0x40043a4	      0xe800000000	                          call 0x40043a9	      3231	scsi_lib.c	FUNCTION_97	CALL_1
0x40043a9	          0x4889ef	                            mov rdi, rbp	      3232	scsi_lib.c	FUNCTION_97	CALL_2
0x40043ac	          0x4489e6	                           mov esi, r12d	      3232	scsi_lib.c	FUNCTION_97	CALL_2
0x40043af	      0xe800000000	                          call 0x40043b4	      3232	scsi_lib.c	FUNCTION_97	CALL_2
0x40043b4	          0x4889df	                            mov rdi, rbx	      3233	scsi_lib.c	FUNCTION_97	CALL_3
0x40043b7	              0x5b	                                 pop rbx	      3268	scsi_lib.c	FUNCTION_101
0x40043b8	              0x5d	                                 pop rbp	      3268	scsi_lib.c	FUNCTION_101
0x40043b9	            0x415c	                                 pop r12	      3268	scsi_lib.c	FUNCTION_101
0x40043bb	      0xe900000000	                   jmp section_end..text	      3233	scsi_lib.c	FUNCTION_97	CALL_3
scsi_mq_init_request	FOR,0:CALL,4:functions,0:WHILE,0:IF,3:DO,0:ELSE,0:SWITCH,0	35
0x4001140	              0x55	                                push rbp	      2111	scsi_lib.c	FUNCTION_61
0x4001141	              0x53	                                push rbx	      2111	scsi_lib.c	FUNCTION_61
0x4001142	            0x89ca	                            mov edx, ecx	      2111	scsi_lib.c	FUNCTION_61
0x4001144	        0x488b6f30	            mov rbp, qword [rdi + 0x30] 	      2112	scsi_lib.c	FUNCTION_61
0x4001148	          0x4889f3	                            mov rbx, rsi	      2111	scsi_lib.c	FUNCTION_61
0x400114b	    0x488b3d000000	            mov rdi, qword [0x04001152] 	        52	scsi_lib.c	FUNCTION_1
0x4001152	    0xf68580010000	              test byte [rbp + 0x180], 4	      2117	scsi_lib.c	FUNCTION_61	IF_1
0x4001159	            0x740e	                            je 0x4001169	      2117	scsi_lib.c	FUNCTION_61	IF_1
0x400115b	    0x838eb4020000	               or dword [rsi + 0x2b4], 2	      2118	scsi_lib.c	FUNCTION_61	IF_1
0x4001162	    0x488b3d000000	            mov rdi, qword [0x04001169] 	        52	scsi_lib.c	FUNCTION_1
0x4001169	      0xbec0004001	                      mov esi, 0x14000c0	        65	scsi_lib.c	FUNCTION_3	CALL_2
0x400116e	      0xe800000000	                          call 0x4001173	        65	scsi_lib.c	FUNCTION_3	CALL_2
0x4001173	          0x4885c0	                           test rax, rax	      2121	scsi_lib.c	FUNCTION_61	IF_2
0x4001176	    0x488983580200	            mov qword [rbx + 0x258], rax	      2119	scsi_lib.c	FUNCTION_61	CALL_2
0x400117d	            0x744d	                            je 0x40011cc	      2121	scsi_lib.c	FUNCTION_61	IF_2
0x400117f	    0x488983580100	            mov qword [rbx + 0x158], rax	      2123	scsi_lib.c	FUNCTION_61
0x4001186	    0x8b95b0010000	           mov edx, dword [rbp + 0x1b0] 	      2125	scsi_lib.c	FUNCTION_61	IF_3	CALL_3
0x400118c	            0x31c0	                            xor eax, eax	      2131	scsi_lib.c	FUNCTION_61
0x400118e	            0x85d2	                           test edx, edx	      2125	scsi_lib.c	FUNCTION_61	IF_3	CALL_3
0x4001190	            0x7437	                            je 0x40011c9	      2125	scsi_lib.c	FUNCTION_61	IF_3	CALL_3
0x4001192	     0xfb7955a0100	          movzx edx, word [rbp + 0x15a] 	      2128	scsi_lib.c	FUNCTION_61	IF_3	CALL_4
0x4001199	      0xb980000000	                           mov ecx, 0x80	      2128	scsi_lib.c	FUNCTION_61	IF_3	CALL_4
0x400119e	    0x81fa80000000	                           cmp edx, 0x80	      2128	scsi_lib.c	FUNCTION_61	IF_3	CALL_4
0x40011a4	           0xf47d1	                          cmova edx, ecx	      2128	scsi_lib.c	FUNCTION_61	IF_3	CALL_4
0x40011a7	    0x488b8d980000	            mov rcx, qword [rbp + 0x98] 	      2127	scsi_lib.c	FUNCTION_61	IF_3
0x40011ae	          0xc1e205	                              shl edx, 5	      2128	scsi_lib.c	FUNCTION_61	IF_3	CALL_4
0x40011b1	    0x8b8928010000	           mov ecx, dword [rcx + 0x128] 	      2128	scsi_lib.c	FUNCTION_61	IF_3	CALL_4
0x40011b7	    0x488d940ac002	           lea rdx, [rdx + rcx + 0x2c0] 	      2128	scsi_lib.c	FUNCTION_61	IF_3	CALL_4
0x40011bf	          0x4801da	                            add rdx, rbx	      2128	scsi_lib.c	FUNCTION_61	IF_3	CALL_4
0x40011c2	    0x488993400200	            mov qword [rbx + 0x240], rdx	      2128	scsi_lib.c	FUNCTION_61	IF_3	CALL_4
0x40011c9	              0x5b	                                 pop rbx	      2132	scsi_lib.c	FUNCTION_61
0x40011ca	              0x5d	                                 pop rbp	      2132	scsi_lib.c	FUNCTION_61
0x40011cb	              0xc3	                                     ret	      2132	scsi_lib.c	FUNCTION_61
0x40011cc	      0xb8f4ffffff	                     mov eax, 0xfffffff4	      2122	scsi_lib.c	FUNCTION_61	IF_2
0x40011d1	            0xebf6	                           jmp 0x40011c9	      2122	scsi_lib.c	FUNCTION_61	IF_2
scsi_timeout	FOR,0:CALL,1:functions,0:WHILE,0:IF,1:DO,0:ELSE,0:SWITCH,0	5
0x4000ff0	          0x4084f6	                           test sil, sil	      2104	scsi_lib.c	FUNCTION_60	IF_1
0x4000ff3	            0x7406	                            je 0x4000ffb	      2104	scsi_lib.c	FUNCTION_60	IF_1
0x4000ff5	      0xb801000000	                              mov eax, 1	      2107	scsi_lib.c	FUNCTION_60
0x4000ffa	              0xc3	                                     ret	      2107	scsi_lib.c	FUNCTION_60
0x4000ffb	      0xe900000000	          jmp sym.scsi_device_from_queue	      2106	scsi_lib.c	FUNCTION_60	CALL_1
scsi_block_requests	FOR,0:CALL,0:functions,0:WHILE,0:IF,0:DO,0:ELSE,0:SWITCH,0	2
0x4000090	    0x808f80010000	             or byte [rdi + 0x180], 0x10	      2359	scsi_lib.c	FUNCTION_72
0x4000097	              0xc3	                                     ret	      2359	scsi_lib.c	FUNCTION_72
device_quiesce_fn	FOR,0:CALL,1:functions,0:WHILE,0:IF,0:DO,0:ELSE,0:SWITCH,0	1
0x40016c0	      0xe93bffffff	             jmp sym.scsi_device_quiesce	      3047	scsi_lib.c	FUNCTION_89	CALL_1
scsi_map_queues	FOR,0:CALL,3:functions,0:WHILE,0:IF,1:DO,0:ELSE,0:SWITCH,0	9
0x40011e0	          0x4889f8	                            mov rax, rdi	      2144	scsi_lib.c	FUNCTION_63
0x40011e3	    0x488dbf58ffff	                   lea rdi, [rdi - 0xa8]	      2145	scsi_lib.c	FUNCTION_63	CALL_1
0x40011ea	        0x488b50f0	             mov rdx, qword [rax - 0x10]	      2147	scsi_lib.c	FUNCTION_63	IF_1
0x40011ee	    0x488b92980000	            mov rdx, qword [rdx + 0x98] 	      2147	scsi_lib.c	FUNCTION_63	IF_1
0x40011f5	          0x4885d2	                           test rdx, rdx	      2147	scsi_lib.c	FUNCTION_63	IF_1
0x40011f8	            0x7405	                            je 0x40011ff	      2147	scsi_lib.c	FUNCTION_63	IF_1
0x40011fa	      0xe900000000	                           jmp 0x40011ff	      2148	scsi_lib.c	FUNCTION_63	CALL_2
0x40011ff	          0x4889c7	                            mov rdi, rax	      2149	scsi_lib.c	FUNCTION_63	CALL_3
0x4001202	      0xe900000000	                           jmp 0x4001207	      2149	scsi_lib.c	FUNCTION_63	CALL_3
scsi_mq_exit_request	FOR,0:CALL,2:functions,0:WHILE,0:IF,0:DO,0:ELSE,0:SWITCH,0	6
0x4000e90	          0x4889f0	                            mov rax, rsi	      2136	scsi_lib.c	FUNCTION_62
0x4000e93	    0x488b3d000000	            mov rdi, qword [0x04000e9a] 	        52	scsi_lib.c	FUNCTION_1
0x4000e9a	    0x488bb6580200	           mov rsi, qword [rsi + 0x258] 	      2139	scsi_lib.c	FUNCTION_62	CALL_2
0x4000ea1	    0xf680b4020000	              test byte [rax + 0x2b4], 2	        52	scsi_lib.c	FUNCTION_1
0x4000ea8	    0x480f443d0000	           cmove rdi, qword [0x04000eb0]	        52	scsi_lib.c	FUNCTION_1
0x4000eb0	      0xe900000000	                           jmp 0x4000eb5	        58	scsi_lib.c	FUNCTION_2	CALL_2
scsi_run_host_queues	FOR,0:CALL,2:functions,0:WHILE,0:IF,0:DO,0:ELSE,0:SWITCH,0	19
0x4002db0	              0x55	                                push rbp	       590	scsi_lib.c	FUNCTION_22
0x4002db1	              0x53	                                push rbx	       590	scsi_lib.c	FUNCTION_22
0x4002db2	            0x31f6	                            xor esi, esi	       593	scsi_lib.c	FUNCTION_22	CALL_1
0x4002db4	          0x4889fd	                            mov rbp, rdi	       590	scsi_lib.c	FUNCTION_22
0x4002db7	      0xe800000000	                          call 0x4002dbc	       593	scsi_lib.c	FUNCTION_22	CALL_1
0x4002dbc	          0x4885c0	                           test rax, rax	       593	scsi_lib.c	FUNCTION_22	CALL_1
0x4002dbf	            0x741f	                            je 0x4002de0	       593	scsi_lib.c	FUNCTION_22	CALL_1
0x4002dc1	          0x4889c3	                            mov rbx, rax	       593	scsi_lib.c	FUNCTION_22	CALL_1
0x4002dc4	        0x488b7b08	                mov rdi, qword [rbx + 8]	       594	scsi_lib.c	FUNCTION_22	CALL_2
0x4002dc8	      0xe8e3dcffff	                 call sym.scsi_run_queue	       594	scsi_lib.c	FUNCTION_22	CALL_2
0x4002dcd	          0x4889de	                            mov rsi, rbx	       593	scsi_lib.c	FUNCTION_22	CALL_1
0x4002dd0	          0x4889ef	                            mov rdi, rbp	       593	scsi_lib.c	FUNCTION_22	CALL_1
0x4002dd3	      0xe800000000	                          call 0x4002dd8	       593	scsi_lib.c	FUNCTION_22	CALL_1
0x4002dd8	          0x4885c0	                           test rax, rax	       593	scsi_lib.c	FUNCTION_22	CALL_1
0x4002ddb	          0x4889c3	                            mov rbx, rax	       593	scsi_lib.c	FUNCTION_22	CALL_1
0x4002dde	            0x75e4	                           jne 0x4002dc4	       593	scsi_lib.c	FUNCTION_22	CALL_1
0x4002de0	              0x5b	                                 pop rbx	       595	scsi_lib.c	FUNCTION_22
0x4002de1	              0x5d	                                 pop rbp	       595	scsi_lib.c	FUNCTION_22
0x4002de2	              0xc3	                                     ret	       595	scsi_lib.c	FUNCTION_22
scsi_exit_queue	FOR,0:CALL,3:functions,0:WHILE,0:IF,0:DO,0:ELSE,0:SWITCH,0	6
0x40040a0	    0x488b3d000000	            mov rdi, qword [0x040040a7] 	      2405	scsi_lib.c	FUNCTION_75	CALL_1
0x40040a7	      0xe800000000	                          call 0x40040ac	      2405	scsi_lib.c	FUNCTION_75	CALL_1
0x40040ac	    0x488b3d000000	            mov rdi, qword [0x040040b3] 	      2406	scsi_lib.c	FUNCTION_75	CALL_2
0x40040b3	      0xe800000000	                          call 0x40040b8	      2406	scsi_lib.c	FUNCTION_75	CALL_2
0x40040b8	    0x488b3d000000	            mov rdi, qword [0x040040bf] 	      2407	scsi_lib.c	FUNCTION_75	CALL_3
0x40040bf	      0xe900000000	                           jmp 0x40040c4	      2407	scsi_lib.c	FUNCTION_75	CALL_3
scsi_execute	FOR,0:CALL,12:functions,0:WHILE,0:IF,6:DO,0:ELSE,0:SWITCH,0	161
0x4000360	            0x4157	                                push r15	       263	scsi_lib.c	FUNCTION_9
0x4000362	            0x4156	                                push r14	       263	scsi_lib.c	FUNCTION_9
0x4000364	          0x4d89cf	                             mov r15, r9	       263	scsi_lib.c	FUNCTION_9
0x4000367	            0x4155	                                push r13	       263	scsi_lib.c	FUNCTION_9
0x4000369	          0x4989fd	                            mov r13, rdi	       263	scsi_lib.c	FUNCTION_9
0x400036c	            0x4154	                                push r12	       263	scsi_lib.c	FUNCTION_9
0x400036e	          0x4989f4	                            mov r12, rsi	       263	scsi_lib.c	FUNCTION_9
0x4000371	              0x55	                                push rbp	       263	scsi_lib.c	FUNCTION_9
0x4000372	            0x31f6	                            xor esi, esi	       268	scsi_lib.c	FUNCTION_9	CALL_1
0x4000374	              0x53	                                push rbx	       263	scsi_lib.c	FUNCTION_9
0x4000375	          0x83fa01	                              cmp edx, 1	       268	scsi_lib.c	FUNCTION_9	CALL_1
0x4000378	        0x488b7f08	                mov rdi, qword [rdi + 8]	       268	scsi_lib.c	FUNCTION_9	CALL_1
0x400037c	        0x400f94c6	                                sete sil	       268	scsi_lib.c	FUNCTION_9	CALL_1
0x4000380	      0xba08000000	                              mov edx, 8	       268	scsi_lib.c	FUNCTION_9	CALL_1
0x4000385	          0x4989ce	                            mov r14, rcx	       263	scsi_lib.c	FUNCTION_9
0x4000388	          0x83c620	                           add esi, 0x20	       268	scsi_lib.c	FUNCTION_9	CALL_1
0x400038b	          0x4489c5	                            mov ebp, r8d	       263	scsi_lib.c	FUNCTION_9
0x400038e	      0xe800000000	                          call 0x4000393	       268	scsi_lib.c	FUNCTION_9	CALL_1
0x4000393	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	       271	scsi_lib.c	FUNCTION_9	IF_1	CALL_2
0x4000399	     0xf87cd010000	                            ja 0x400056c	       271	scsi_lib.c	FUNCTION_9	IF_1	CALL_2
0x400039f	            0x85ed	                           test ebp, ebp	       275	scsi_lib.c	FUNCTION_9	IF_2	CALL_4
0x40003a1	          0x4889c3	                            mov rbx, rax	       275	scsi_lib.c	FUNCTION_9	IF_2	CALL_4
0x40003a4	            0x7437	                            je 0x40003dd	       275	scsi_lib.c	FUNCTION_9	IF_2	CALL_4
0x40003a6	        0x498b7d08	                mov rdi, qword [r13 + 8]	       275	scsi_lib.c	FUNCTION_9	IF_2	CALL_4
0x40003aa	    0x41b800004001	                      mov r8d, 0x1400000	       275	scsi_lib.c	FUNCTION_9	IF_2	CALL_4
0x40003b0	            0x89e9	                            mov ecx, ebp	       275	scsi_lib.c	FUNCTION_9	IF_2	CALL_4
0x40003b2	          0x4c89f2	                            mov rdx, r14	       275	scsi_lib.c	FUNCTION_9	IF_2	CALL_4
0x40003b5	          0x4889c6	                            mov rsi, rax	       275	scsi_lib.c	FUNCTION_9	IF_2	CALL_4
0x40003b8	    0x41bd00000004	         mov r13d, loc.imp.scsi_show_rq 	       266	scsi_lib.c	FUNCTION_9
0x40003be	      0xe800000000	                          call 0x40003c3	       275	scsi_lib.c	FUNCTION_9	IF_2	CALL_4
0x40003c3	            0x85c0	                           test eax, eax	       275	scsi_lib.c	FUNCTION_9	IF_2	CALL_4
0x40003c5	            0x7416	                            je 0x40003dd	       275	scsi_lib.c	FUNCTION_9	IF_2	CALL_4
0x40003c7	          0x4889df	                            mov rdi, rbx	       308	scsi_lib.c	FUNCTION_9	CALL_12
0x40003ca	      0xe800000000	                          call 0x40003cf	       308	scsi_lib.c	FUNCTION_9	CALL_12
0x40003cf	          0x4489e8	                           mov eax, r13d	       311	scsi_lib.c	FUNCTION_9
0x40003d2	              0x5b	                                 pop rbx	       311	scsi_lib.c	FUNCTION_9
0x40003d3	              0x5d	                                 pop rbp	       311	scsi_lib.c	FUNCTION_9
0x40003d4	            0x415c	                                 pop r12	       311	scsi_lib.c	FUNCTION_9
0x40003d6	            0x415d	                                 pop r13	       311	scsi_lib.c	FUNCTION_9
0x40003d8	            0x415e	                                 pop r14	       311	scsi_lib.c	FUNCTION_9
0x40003da	            0x415f	                                 pop r15	       311	scsi_lib.c	FUNCTION_9
0x40003dc	              0xc3	                                     ret	       311	scsi_lib.c	FUNCTION_9
0x40003dd	      0x410fb60424	                   movzx eax, byte [r12]	       279	scsi_lib.c	FUNCTION_9	CALL_5
0x40003e2	    0x488b8b380100	           mov rcx, qword [rbx + 0x138] 	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x40003e9	          0xc0e805	                               shr al, 5	       279	scsi_lib.c	FUNCTION_9	CALL_5
0x40003ec	          0x83e007	                              and eax, 7	       279	scsi_lib.c	FUNCTION_9	CALL_5
0x40003ef	     0xfb690000000	                   movzx edx, byte [rax]	       279	scsi_lib.c	FUNCTION_9	CALL_5
0x40003f6	          0x83fa08	                              cmp edx, 8	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x40003f9	          0x4889d0	                            mov rax, rdx	       279	scsi_lib.c	FUNCTION_9	CALL_5
0x40003fc	    0x668993400100	              mov word [rbx + 0x140], dx	       279	scsi_lib.c	FUNCTION_9	CALL_5
0x4000403	     0xf82c8000000	                            jb 0x40004d1	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x4000409	        0x498b1424	                    mov rdx, qword [r12]	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x400040d	        0x488d7908	                      lea rdi, [rcx + 8]	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x4000411	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x4000415	          0x488911	                    mov qword [rcx], rdx	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x4000418	            0x89c2	                            mov edx, eax	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x400041a	      0x498b7414f8	          mov rsi, qword [r12 + rdx - 8]	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x400041f	      0x48897411f8	          mov qword [rcx + rdx - 8], rsi	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x4000424	          0x4829f9	                            sub rcx, rdi	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x4000427	          0x4c89e6	                            mov rsi, r12	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x400042a	          0x4829ce	                            sub rsi, rcx	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x400042d	             0x1c1	                            add ecx, eax	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x400042f	          0xc1e903	                              shr ecx, 3	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x4000432	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x4000435	        0x8b442448	            mov eax, dword [rsp + 0x48] 	       281	scsi_lib.c	FUNCTION_9
0x4000439	          0x488b3b	                    mov rdi, qword [rbx]	       289	scsi_lib.c	FUNCTION_9	CALL_7
0x400043c	            0x31f6	                            xor esi, esi	       289	scsi_lib.c	FUNCTION_9	CALL_7
0x400043e	      0xb901000000	                              mov ecx, 1	       289	scsi_lib.c	FUNCTION_9	CALL_7
0x4000443	          0x4889da	                            mov rdx, rbx	       289	scsi_lib.c	FUNCTION_9	CALL_7
0x4000446	    0x898350010000	            mov dword [rbx + 0x150], eax	       281	scsi_lib.c	FUNCTION_9
0x400044c	        0x8b442440	            mov eax, dword [rsp + 0x40] 	       282	scsi_lib.c	FUNCTION_9
0x4000450	    0x8983d4000000	             mov dword [rbx + 0xd4], eax	       282	scsi_lib.c	FUNCTION_9
0x4000456	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       283	scsi_lib.c	FUNCTION_9
0x400045b	           0x94314	              or dword [rbx + 0x14], eax	       283	scsi_lib.c	FUNCTION_9
0x400045e	        0x8b442458	            mov eax, dword [rsp + 0x58] 	       284	scsi_lib.c	FUNCTION_9
0x4000462	           0xb4318	              or eax, dword [rbx + 0x18]	       284	scsi_lib.c	FUNCTION_9
0x4000465	          0x80cc08	                                or ah, 8	       284	scsi_lib.c	FUNCTION_9
0x4000468	          0x894318	             mov dword [rbx + 0x18], eax	       284	scsi_lib.c	FUNCTION_9
0x400046b	      0xe800000000	                          call 0x4000470	       289	scsi_lib.c	FUNCTION_9	CALL_7
0x4000470	    0x8b834c010000	           mov eax, dword [rbx + 0x14c] 	       297	scsi_lib.c	FUNCTION_9	IF_3	CALL_8
0x4000476	            0x39c5	                            cmp ebp, eax	       297	scsi_lib.c	FUNCTION_9	IF_3	CALL_8
0x4000478	            0x7208	                            jb 0x4000482	       297	scsi_lib.c	FUNCTION_9	IF_3	CALL_8
0x400047a	            0x85c0	                           test eax, eax	       297	scsi_lib.c	FUNCTION_9	IF_3	CALL_8
0x400047c	     0xf8514010000	                           jne 0x4000596	       297	scsi_lib.c	FUNCTION_9	IF_3	CALL_8
0x4000482	    0x48837c246000	               cmp qword [rsp + 0x60], 0	       300	scsi_lib.c	FUNCTION_9	IF_4
0x4000488	            0x740d	                            je 0x4000497	       300	scsi_lib.c	FUNCTION_9	IF_4
0x400048a	    0x8b834c010000	           mov eax, dword [rbx + 0x14c] 	       301	scsi_lib.c	FUNCTION_9	IF_4
0x4000490	      0x488b4c2460	            mov rcx, qword [rsp + 0x60] 	       301	scsi_lib.c	FUNCTION_9	IF_4
0x4000495	            0x8901	                    mov dword [rcx], eax	       301	scsi_lib.c	FUNCTION_9	IF_4
0x4000497	          0x4d85ff	                           test r15, r15	       302	scsi_lib.c	FUNCTION_9	IF_5
0x400049a	            0x740a	                            je 0x40004a6	       302	scsi_lib.c	FUNCTION_9	IF_5
0x400049c	    0x8b8348010000	           mov eax, dword [rbx + 0x148] 	       302	scsi_lib.c	FUNCTION_9	IF_5
0x40004a2	            0x85c0	                           test eax, eax	       302	scsi_lib.c	FUNCTION_9	IF_5
0x40004a4	            0x755c	                           jne 0x4000502	       302	scsi_lib.c	FUNCTION_9	IF_5
0x40004a6	    0x48837c243800	               cmp qword [rsp + 0x38], 0	       304	scsi_lib.c	FUNCTION_9	IF_6
0x40004ac	            0x7417	                            je 0x40004c5	       304	scsi_lib.c	FUNCTION_9	IF_6
0x40004ae	    0x8bb348010000	           mov esi, dword [rbx + 0x148] 	       305	scsi_lib.c	FUNCTION_9	CALL_11
0x40004b4	    0x488bbb580100	           mov rdi, qword [rbx + 0x158] 	       305	scsi_lib.c	FUNCTION_9	CALL_11
0x40004bb	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       305	scsi_lib.c	FUNCTION_9	CALL_11
0x40004c0	      0xe800000000	                          call 0x40004c5	       305	scsi_lib.c	FUNCTION_9	CALL_11
0x40004c5	    0x448bab440100	          mov r13d, dword [rbx + 0x144] 	       306	scsi_lib.c	FUNCTION_9
0x40004cc	      0xe9f6feffff	                           jmp 0x40003c7	       306	scsi_lib.c	FUNCTION_9
0x40004d1	            0xa804	                              test al, 4	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x40004d3	     0xf85a7000000	                           jne 0x4000580	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x40004d9	            0x85d2	                           test edx, edx	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x40004db	     0xf8454ffffff	                            je 0x4000435	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x40004e1	      0x410fb61424	                   movzx edx, byte [r12]	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x40004e6	            0xa802	                              test al, 2	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x40004e8	            0x8811	                      mov byte [rcx], dl	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x40004ea	     0xf8445ffffff	                            je 0x4000435	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x40004f0	            0x89c0	                            mov eax, eax	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x40004f2	    0x410fb75404fe	         movzx edx, word [r12 + rax - 2]	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x40004f8	      0x66895401fe	            mov word [rcx + rax - 2], dx	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x40004fd	      0xe933ffffff	                           jmp 0x4000435	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x4000502	    0x488b83580100	           mov rax, qword [rbx + 0x158] 	       303	scsi_lib.c	FUNCTION_9	CALL_10
0x4000509	          0x488b10	                    mov rdx, qword [rax]	       303	scsi_lib.c	FUNCTION_9	CALL_10
0x400050c	          0x498917	                    mov qword [r15], rdx	       303	scsi_lib.c	FUNCTION_9	CALL_10
0x400050f	        0x488b5008	                mov rdx, qword [rax + 8]	       303	scsi_lib.c	FUNCTION_9	CALL_10
0x4000513	        0x49895708	                mov qword [r15 + 8], rdx	       303	scsi_lib.c	FUNCTION_9	CALL_10
0x4000517	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       303	scsi_lib.c	FUNCTION_9	CALL_10
0x400051b	        0x49895710	             mov qword [r15 + 0x10], rdx	       303	scsi_lib.c	FUNCTION_9	CALL_10
0x400051f	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       303	scsi_lib.c	FUNCTION_9	CALL_10
0x4000523	        0x49895718	             mov qword [r15 + 0x18], rdx	       303	scsi_lib.c	FUNCTION_9	CALL_10
0x4000527	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       303	scsi_lib.c	FUNCTION_9	CALL_10
0x400052b	        0x49895720	             mov qword [r15 + 0x20], rdx	       303	scsi_lib.c	FUNCTION_9	CALL_10
0x400052f	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       303	scsi_lib.c	FUNCTION_9	CALL_10
0x4000533	        0x49895728	             mov qword [r15 + 0x28], rdx	       303	scsi_lib.c	FUNCTION_9	CALL_10
0x4000537	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       303	scsi_lib.c	FUNCTION_9	CALL_10
0x400053b	        0x49895730	             mov qword [r15 + 0x30], rdx	       303	scsi_lib.c	FUNCTION_9	CALL_10
0x400053f	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       303	scsi_lib.c	FUNCTION_9	CALL_10
0x4000543	        0x49895738	             mov qword [r15 + 0x38], rdx	       303	scsi_lib.c	FUNCTION_9	CALL_10
0x4000547	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       303	scsi_lib.c	FUNCTION_9	CALL_10
0x400054b	        0x49895740	             mov qword [r15 + 0x40], rdx	       303	scsi_lib.c	FUNCTION_9	CALL_10
0x400054f	        0x488b5048	            mov rdx, qword [rax + 0x48] 	       303	scsi_lib.c	FUNCTION_9	CALL_10
0x4000553	        0x49895748	             mov qword [r15 + 0x48], rdx	       303	scsi_lib.c	FUNCTION_9	CALL_10
0x4000557	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       303	scsi_lib.c	FUNCTION_9	CALL_10
0x400055b	        0x49895750	             mov qword [r15 + 0x50], rdx	       303	scsi_lib.c	FUNCTION_9	CALL_10
0x400055f	        0x488b4058	            mov rax, qword [rax + 0x58] 	       303	scsi_lib.c	FUNCTION_9	CALL_10
0x4000563	        0x49894758	             mov qword [r15 + 0x58], rax	       303	scsi_lib.c	FUNCTION_9	CALL_10
0x4000567	      0xe93affffff	                           jmp 0x40004a6	       303	scsi_lib.c	FUNCTION_9	CALL_10
0x400056c	    0x41bd00000004	         mov r13d, loc.imp.scsi_show_rq 	       272	scsi_lib.c	FUNCTION_9	IF_1
0x4000572	              0x5b	                                 pop rbx	       311	scsi_lib.c	FUNCTION_9
0x4000573	          0x4489e8	                           mov eax, r13d	       311	scsi_lib.c	FUNCTION_9
0x4000576	              0x5d	                                 pop rbp	       311	scsi_lib.c	FUNCTION_9
0x4000577	            0x415c	                                 pop r12	       311	scsi_lib.c	FUNCTION_9
0x4000579	            0x415d	                                 pop r13	       311	scsi_lib.c	FUNCTION_9
0x400057b	            0x415e	                                 pop r14	       311	scsi_lib.c	FUNCTION_9
0x400057d	            0x415f	                                 pop r15	       311	scsi_lib.c	FUNCTION_9
0x400057f	              0xc3	                                     ret	       311	scsi_lib.c	FUNCTION_9
0x4000580	        0x418b1424	                    mov edx, dword [r12]	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x4000584	            0x89c0	                            mov eax, eax	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x4000586	            0x8911	                    mov dword [rcx], edx	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x4000588	      0x418b5404fc	          mov edx, dword [r12 + rax - 4]	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x400058d	        0x895401fc	          mov dword [rcx + rax - 4], edx	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x4000591	      0xe99ffeffff	                           jmp 0x4000435	       280	scsi_lib.c	FUNCTION_9	CALL_6
0x4000596	            0x29c5	                            sub ebp, eax	       298	scsi_lib.c	FUNCTION_9	CALL_9
0x4000598	            0x89c2	                            mov edx, eax	       298	scsi_lib.c	FUNCTION_9	CALL_9
0x400059a	            0x31f6	                            xor esi, esi	       298	scsi_lib.c	FUNCTION_9	CALL_9
0x400059c	        0x498d3c2e	                    lea rdi, [r14 + rbp]	       298	scsi_lib.c	FUNCTION_9	CALL_9
0x40005a0	      0xe800000000	                          call 0x40005a5	       298	scsi_lib.c	FUNCTION_9	CALL_9
0x40005a5	      0xe9d8feffff	                           jmp 0x4000482	       298	scsi_lib.c	FUNCTION_9	CALL_9
scsi_mq_destroy_tags	FOR,0:CALL,1:functions,0:WHILE,0:IF,0:DO,0:ELSE,0:SWITCH,0	2
0x4004090	    0x4881c7a80000	                           add rdi, 0xa8	      2315	scsi_lib.c	FUNCTION_70	CALL_1
0x4004097	      0xe900000000	                           jmp 0x400409c	      2315	scsi_lib.c	FUNCTION_70	CALL_1
scsi_test_unit_ready	FOR,0:CALL,3:functions,0:WHILE,0:IF,1:DO,1:ELSE,0:SWITCH,0	71
0x40009a0	            0x4156	                                push r14	      2615	scsi_lib.c	FUNCTION_78
0x40009a2	            0x4155	                                push r13	      2615	scsi_lib.c	FUNCTION_78
0x40009a4	          0x4189f5	                           mov r13d, esi	      2615	scsi_lib.c	FUNCTION_78
0x40009a7	            0x4154	                                push r12	      2615	scsi_lib.c	FUNCTION_78
0x40009a9	              0x55	                                push rbp	      2615	scsi_lib.c	FUNCTION_78
0x40009aa	          0x4989fc	                            mov r12, rdi	      2615	scsi_lib.c	FUNCTION_78
0x40009ad	              0x53	                                push rbx	      2615	scsi_lib.c	FUNCTION_78
0x40009ae	            0x89d5	                            mov ebp, edx	      2615	scsi_lib.c	FUNCTION_78
0x40009b0	          0x4889cb	                            mov rbx, rcx	      2615	scsi_lib.c	FUNCTION_78
0x40009b3	        0x4883ec10	                           sub rsp, 0x10	      2615	scsi_lib.c	FUNCTION_78
0x40009b7	    0x65488b042528	                mov rax, qword gs:[0x28]	      2615	scsi_lib.c	FUNCTION_78
0x40009c0	      0x4889442408	                mov qword [rsp + 8], rax	      2615	scsi_lib.c	FUNCTION_78
0x40009c5	            0x31c0	                            xor eax, eax	      2615	scsi_lib.c	FUNCTION_78
0x40009c7	          0x4885c9	                           test rcx, rcx	      2615	scsi_lib.c	FUNCTION_78
0x40009ca	      0xc644240200	                   mov byte [rsp + 2], 0	      2616	scsi_lib.c	FUNCTION_78
0x40009cf	      0xc644240300	                   mov byte [rsp + 3], 0	      2616	scsi_lib.c	FUNCTION_78
0x40009d4	      0xc644240400	                   mov byte [rsp + 4], 0	      2616	scsi_lib.c	FUNCTION_78
0x40009d9	      0xc644240500	                   mov byte [rsp + 5], 0	      2616	scsi_lib.c	FUNCTION_78
0x40009de	        0x410f94c6	                               sete r14b	      2616	scsi_lib.c	FUNCTION_78
0x40009e2	      0xc644240600	                   mov byte [rsp + 6], 0	      2616	scsi_lib.c	FUNCTION_78
0x40009e7	      0xc644240700	                   mov byte [rsp + 7], 0	      2616	scsi_lib.c	FUNCTION_78
0x40009ec	            0x6a00	                                  push 0	       439	scsi_device.h	FUNCTION_283	CALL_1
0x40009ee	            0x6a00	                                  push 0	       439	scsi_device.h	FUNCTION_283	CALL_1
0x40009f0	          0x4531c9	                            xor r9d, r9d	       439	scsi_device.h	FUNCTION_283	CALL_1
0x40009f3	            0x6a00	                                  push 0	       439	scsi_device.h	FUNCTION_283	CALL_1
0x40009f5	            0x6a01	                                  push 1	       439	scsi_device.h	FUNCTION_283	CALL_1
0x40009f7	          0x4531c0	                            xor r8d, r8d	       439	scsi_device.h	FUNCTION_283	CALL_1
0x40009fa	            0x4155	                                push r13	       439	scsi_device.h	FUNCTION_283	CALL_1
0x40009fc	              0x53	                                push rbx	       439	scsi_device.h	FUNCTION_283	CALL_1
0x40009fd	            0x31c9	                            xor ecx, ecx	       439	scsi_device.h	FUNCTION_283	CALL_1
0x40009ff	      0xba03000000	                              mov edx, 3	       439	scsi_device.h	FUNCTION_283	CALL_1
0x4000a04	          0x4c89e7	                            mov rdi, r12	       439	scsi_device.h	FUNCTION_283	CALL_1
0x4000a07	      0x488d742432	                   lea rsi, [rsp + 0x32]	       439	scsi_device.h	FUNCTION_283	CALL_1
0x4000a0c	      0xe800000000	                          call 0x4000a11	       439	scsi_device.h	FUNCTION_283	CALL_1
0x4000a11	    0x410fb6942418	          movzx edx, byte [r12 + 0x118] 	        56	scsi_common.h	FUNCTION_304	IF_1
0x4000a1a	        0x4883c430	                           add rsp, 0x30	        56	scsi_common.h	FUNCTION_304	IF_1
0x4000a1e	          0xf6c201	                              test dl, 1	        56	scsi_common.h	FUNCTION_304	IF_1
0x4000a21	            0x7433	                            je 0x4000a56	        56	scsi_common.h	FUNCTION_304	IF_1
0x4000a23	          0x4584f6	                         test r14b, r14b	        56	scsi_common.h	FUNCTION_304	IF_1
0x4000a26	            0x752e	                           jne 0x4000a56	        56	scsi_common.h	FUNCTION_304	IF_1
0x4000a28	           0xfb60b	                   movzx ecx, byte [rbx]	      2625	scsi_lib.c	FUNCTION_78	DO_1	IF_1	CALL_2
0x4000a2b	          0x83e170	                           and ecx, 0x70	      2625	scsi_lib.c	FUNCTION_78	DO_1	IF_1	CALL_2
0x4000a2e	          0x80f970	                            cmp cl, 0x70	      2625	scsi_lib.c	FUNCTION_78	DO_1	IF_1	CALL_2
0x4000a31	            0x7506	                           jne 0x4000a39	      2625	scsi_lib.c	FUNCTION_78	DO_1	IF_1	CALL_2
0x4000a33	        0x807b0106	                   cmp byte [rbx + 1], 6	      2625	scsi_lib.c	FUNCTION_78	DO_1	IF_1	CALL_2
0x4000a37	            0x743e	                            je 0x4000a77	      2625	scsi_lib.c	FUNCTION_78	DO_1	IF_1	CALL_2
0x4000a39	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2632	scsi_lib.c	FUNCTION_78
0x4000a3e	    0x6548333c2528	                xor rdi, qword gs:[0x28]	      2632	scsi_lib.c	FUNCTION_78
0x4000a47	            0x753b	                           jne 0x4000a84	      2632	scsi_lib.c	FUNCTION_78
0x4000a49	        0x4883c410	                           add rsp, 0x10	      2632	scsi_lib.c	FUNCTION_78
0x4000a4d	              0x5b	                                 pop rbx	      2632	scsi_lib.c	FUNCTION_78
0x4000a4e	              0x5d	                                 pop rbp	      2632	scsi_lib.c	FUNCTION_78
0x4000a4f	            0x415c	                                 pop r12	      2632	scsi_lib.c	FUNCTION_78
0x4000a51	            0x415d	                                 pop r13	      2632	scsi_lib.c	FUNCTION_78
0x4000a53	            0x415e	                                 pop r14	      2632	scsi_lib.c	FUNCTION_78
0x4000a55	              0xc3	                                     ret	      2632	scsi_lib.c	FUNCTION_78
0x4000a56	          0x4885db	                           test rbx, rbx	        56	scsi_common.h	FUNCTION_304	IF_1
0x4000a59	            0x74de	                            je 0x4000a39	        56	scsi_common.h	FUNCTION_304	IF_1
0x4000a5b	           0xfb613	                   movzx edx, byte [rbx]	      2629	scsi_lib.c	FUNCTION_78
0x4000a5e	          0x83e270	                           and edx, 0x70	      2629	scsi_lib.c	FUNCTION_78
0x4000a61	          0x80fa70	                            cmp dl, 0x70	      2629	scsi_lib.c	FUNCTION_78
0x4000a64	            0x75d3	                           jne 0x4000a39	      2629	scsi_lib.c	FUNCTION_78
0x4000a66	        0x807b0106	                   cmp byte [rbx + 1], 6	      2628	scsi_lib.c	FUNCTION_78	CALL_3
0x4000a6a	            0x75cd	                           jne 0x4000a39	      2628	scsi_lib.c	FUNCTION_78	CALL_3
0x4000a6c	          0x83ed01	                              sub ebp, 1	      2629	scsi_lib.c	FUNCTION_78
0x4000a6f	     0xf8577ffffff	                           jne 0x40009ec	      2629	scsi_lib.c	FUNCTION_78
0x4000a75	            0xebc2	                           jmp 0x4000a39	      2629	scsi_lib.c	FUNCTION_78
0x4000a77	          0x83ca02	                               or edx, 2	      2627	scsi_lib.c	FUNCTION_78	DO_1	IF_1
0x4000a7a	    0x418894241801	              mov byte [r12 + 0x118], dl	      2627	scsi_lib.c	FUNCTION_78	DO_1	IF_1
0x4000a82	            0xebd7	                           jmp 0x4000a5b	      2627	scsi_lib.c	FUNCTION_78	DO_1	IF_1
0x4000a84	      0xe800000000	                          call 0x4000a89	      2632	scsi_lib.c	FUNCTION_78
scsi_internal_device_unblock_nowait	FOR,0:CALL,1:functions,0:WHILE,0:IF,1:DO,0:ELSE,1:SWITCH,1	16
0x4004350	    0x8b8790070000	           mov eax, dword [rdi + 0x790] 	      3188	scsi_lib.c	FUNCTION_96	SWITCH_1
0x4004356	          0x83e803	                              sub eax, 3	      3188	scsi_lib.c	FUNCTION_96	SWITCH_1
0x4004359	          0x83f806	                              cmp eax, 6	      3188	scsi_lib.c	FUNCTION_96	SWITCH_1
0x400435c	            0x7729	                            ja 0x4004387	      3188	scsi_lib.c	FUNCTION_96	SWITCH_1
0x400435e	    0x488b04c50000	                  mov rax, qword [rax*8]	      3188	scsi_lib.c	FUNCTION_96	SWITCH_1
0x4004366	      0xe900000000	                           jmp 0x400436b	      3188	scsi_lib.c	FUNCTION_96	SWITCH_1
0x400436b	          0x8d46fa	                      lea eax, [rsi - 6]	      3194	scsi_lib.c	FUNCTION_96	SWITCH_1	IF_1
0x400436e	          0x83f801	                              cmp eax, 1	      3196	scsi_lib.c	FUNCTION_96	SWITCH_1	IF_1
0x4004371	      0xb801000000	                              mov eax, 1	      3196	scsi_lib.c	FUNCTION_96	SWITCH_1	IF_1
0x4004376	           0xf47f0	                          cmova esi, eax	      3196	scsi_lib.c	FUNCTION_96	SWITCH_1	IF_1
0x4004379	    0x89b790070000	            mov dword [rdi + 0x790], esi	      3196	scsi_lib.c	FUNCTION_96	SWITCH_1	IF_1
0x400437f	      0xe800000000	                          call 0x4004384	      3206	scsi_lib.c	FUNCTION_96	CALL_1
0x4004384	            0x31c0	                            xor eax, eax	      3208	scsi_lib.c	FUNCTION_96
0x4004386	              0xc3	                                     ret	      3208	scsi_lib.c	FUNCTION_96
0x4004387	      0xb8eaffffff	                     mov eax, 0xffffffea	      3204	scsi_lib.c	FUNCTION_96	SWITCH_1
0x400438c	              0xc3	                                     ret	      3209	scsi_lib.c	FUNCTION_96
