size_show	SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,2:ELSE,0:FOR,0	9
0x4000230	          0x4889d0	                            mov rax, rdx	       377	cacheinfo.c	FUNCTION_21
0x4000233	    0x488b97980000	            mov rdx, qword [rdi + 0x98] 	       380	cacheinfo.c	FUNCTION_21	CALL_2
0x400023a	    0x48c7c6000000	                              mov rsi, 0	       380	cacheinfo.c	FUNCTION_21	CALL_2
0x4000241	          0x4889c7	                            mov rdi, rax	       380	cacheinfo.c	FUNCTION_21	CALL_2
0x4000244	          0x8b521c	            mov edx, dword [rdx + 0x1c] 	       380	cacheinfo.c	FUNCTION_21	CALL_2
0x4000247	          0xc1ea0a	                            shr edx, 0xa	       380	cacheinfo.c	FUNCTION_21	CALL_2
0x400024a	      0xe800000000	                          call 0x400024f	       380	cacheinfo.c	FUNCTION_21	CALL_2
0x400024f	            0x4898	                                    cdqe	       380	cacheinfo.c	FUNCTION_21	CALL_2
0x4000251	              0xc3	                                     ret	       381	cacheinfo.c	FUNCTION_21
allocation_policy_show	SWITCH,0:DO,0:IF,3:functions,0:WHILE,0:CALL,4:ELSE,2:FOR,0	36
0x4000360	    0x488b87980000	            mov rax, qword [rdi + 0x98] 	       424	cacheinfo.c	FUNCTION_26
0x4000367	          0x8b4828	            mov ecx, dword [rax + 0x28] 	       424	cacheinfo.c	FUNCTION_26
0x400036a	            0x89c8	                            mov eax, ecx	       427	cacheinfo.c	FUNCTION_26	IF_1
0x400036c	          0x83e00c	                            and eax, 0xc	       427	cacheinfo.c	FUNCTION_26	IF_1
0x400036f	          0x83f80c	                            cmp eax, 0xc	       427	cacheinfo.c	FUNCTION_26	IF_1
0x4000372	            0x7458	                            je 0x40003cc	       427	cacheinfo.c	FUNCTION_26	IF_1
0x4000374	          0xf6c104	                              test cl, 4	       429	cacheinfo.c	FUNCTION_26	ELSE_1	IF_2
0x4000377	            0x7530	                           jne 0x40003a9	       429	cacheinfo.c	FUNCTION_26	ELSE_1	IF_2
0x4000379	            0x31c0	                            xor eax, eax	       429	cacheinfo.c	FUNCTION_26	ELSE_1	IF_2
0x400037b	          0x83e108	                              and ecx, 8	       431	cacheinfo.c	FUNCTION_26	ELSE_2	IF_3
0x400037e	            0x7502	                           jne 0x4000382	       431	cacheinfo.c	FUNCTION_26	ELSE_2	IF_3
0x4000380	            0xf3c3	                                     ret	       434	cacheinfo.c	FUNCTION_26
0x4000382	    0x48b857726974	          movabs rax, 0x6c6c416574697257	       432	cacheinfo.c	FUNCTION_26	ELSE_2	IF_3
0x400038c	    0xc742086f6361	        mov dword [rdx + 8], 0x7461636f 	       432	cacheinfo.c	FUNCTION_26	ELSE_2	IF_3
0x4000393	        0xc6420e00	                 mov byte [rdx + 0xe], 0	       432	cacheinfo.c	FUNCTION_26	ELSE_2	IF_3
0x4000397	          0x488902	                    mov qword [rdx], rax	       432	cacheinfo.c	FUNCTION_26	ELSE_2	IF_3
0x400039a	      0xb8650a0000	                          mov eax, 0xa65	       432	cacheinfo.c	FUNCTION_26	ELSE_2	IF_3
0x400039f	        0x6689420c	                mov word [rdx + 0xc], ax	       432	cacheinfo.c	FUNCTION_26	ELSE_2	IF_3
0x40003a3	      0xb80e000000	                            mov eax, 0xe	       432	cacheinfo.c	FUNCTION_26	ELSE_2	IF_3
0x40003a8	              0xc3	                                     ret	       434	cacheinfo.c	FUNCTION_26
0x40003a9	    0x48b852656164	          movabs rax, 0x6f6c6c4164616552	       430	cacheinfo.c	FUNCTION_26	ELSE_1	IF_2
0x40003b3	      0xb90a000000	                            mov ecx, 0xa	       430	cacheinfo.c	FUNCTION_26	ELSE_1	IF_2
0x40003b8	    0xc74208636174	        mov dword [rdx + 8], 0x65746163 	       430	cacheinfo.c	FUNCTION_26	ELSE_1	IF_2
0x40003bf	          0x488902	                    mov qword [rdx], rax	       430	cacheinfo.c	FUNCTION_26	ELSE_1	IF_2
0x40003c2	        0x66894a0c	                mov word [rdx + 0xc], cx	       430	cacheinfo.c	FUNCTION_26	ELSE_1	IF_2
0x40003c6	      0xb80d000000	                            mov eax, 0xd	       430	cacheinfo.c	FUNCTION_26	ELSE_1	IF_2
0x40003cb	              0xc3	                                     ret	       430	cacheinfo.c	FUNCTION_26	ELSE_1	IF_2
0x40003cc	    0x48b852656164	          movabs rax, 0x7469725764616552	       428	cacheinfo.c	FUNCTION_26	CALL_2
0x40003d6	      0xbe650a0000	                          mov esi, 0xa65	       428	cacheinfo.c	FUNCTION_26	CALL_2
0x40003db	        0xc6421200	                mov byte [rdx + 0x12], 0	       428	cacheinfo.c	FUNCTION_26	CALL_2
0x40003df	          0x488902	                    mov qword [rdx], rax	       428	cacheinfo.c	FUNCTION_26	CALL_2
0x40003e2	    0x48b865416c6c	          movabs rax, 0x7461636f6c6c4165	       428	cacheinfo.c	FUNCTION_26	CALL_2
0x40003ec	        0x66897210	               mov word [rdx + 0x10], si	       428	cacheinfo.c	FUNCTION_26	CALL_2
0x40003f0	        0x48894208	                mov qword [rdx + 8], rax	       428	cacheinfo.c	FUNCTION_26	CALL_2
0x40003f4	      0xb812000000	                           mov eax, 0x12	       428	cacheinfo.c	FUNCTION_26	CALL_2
0x40003f9	              0xc3	                                     ret	       428	cacheinfo.c	FUNCTION_26	CALL_2
cache_default_attrs_is_visible	SWITCH,0:DO,0:IF,12:functions,0:WHILE,0:CALL,4:ELSE,0:FOR,0	72
0x4000040	    0x4881fe000000	                              cmp rsi, 0	       488	cacheinfo.c	FUNCTION_28	IF_1
0x4000047	    0x488b8f880000	            mov rcx, qword [rdi + 0x88] 	       488	cacheinfo.c	FUNCTION_28	IF_1
0x400004e	         0xfb75608	               movzx edx, word [rsi + 8]	       486	cacheinfo.c	FUNCTION_28
0x4000052	     0xf849b000000	                            je 0x40000f3	       488	cacheinfo.c	FUNCTION_28	IF_1
0x4000058	    0x4881fe000000	                              cmp rsi, 0	       490	cacheinfo.c	FUNCTION_28	IF_2
0x400005f	     0xf849b000000	                            je 0x4000100	       490	cacheinfo.c	FUNCTION_28	IF_2
0x4000065	    0x4881fe000000	                              cmp rsi, 0	       492	cacheinfo.c	FUNCTION_28	IF_3
0x400006c	     0xf849e000000	                            je 0x4000110	       492	cacheinfo.c	FUNCTION_28	IF_3
0x4000072	    0x4881fe000000	                              cmp rsi, 0	       494	cacheinfo.c	FUNCTION_28	IF_4	CALL_3
0x4000079	            0x745c	                            je 0x40000d7	       494	cacheinfo.c	FUNCTION_28	IF_4	CALL_3
0x400007b	    0x4881fe000000	                              cmp rsi, 0	       496	cacheinfo.c	FUNCTION_28	IF_5	CALL_4
0x4000082	            0x7453	                            je 0x40000d7	       496	cacheinfo.c	FUNCTION_28	IF_5	CALL_4
0x4000084	    0x4881fe000000	                              cmp rsi, 0	       498	cacheinfo.c	FUNCTION_28	IF_6
0x400008b	     0xf848f000000	                            je 0x4000120	       498	cacheinfo.c	FUNCTION_28	IF_6
0x4000091	    0x4881fe000000	                              cmp rsi, 0	       501	cacheinfo.c	FUNCTION_28	IF_7
0x4000098	            0x744b	                            je 0x40000e5	       501	cacheinfo.c	FUNCTION_28	IF_7
0x400009a	    0x4881fe000000	                              cmp rsi, 0	       504	cacheinfo.c	FUNCTION_28	IF_8
0x40000a1	     0xf8489000000	                            je 0x4000130	       504	cacheinfo.c	FUNCTION_28	IF_8
0x40000a7	    0x4881fe000000	                              cmp rsi, 0	       507	cacheinfo.c	FUNCTION_28	IF_9
0x40000ae	            0x7435	                            je 0x40000e5	       507	cacheinfo.c	FUNCTION_28	IF_9
0x40000b0	    0x4881fe000000	                              cmp rsi, 0	       509	cacheinfo.c	FUNCTION_28	IF_10
0x40000b7	     0xf8481000000	                            je 0x400013e	       509	cacheinfo.c	FUNCTION_28	IF_10
0x40000bd	    0x4881fe000000	                              cmp rsi, 0	       512	cacheinfo.c	FUNCTION_28	IF_11
0x40000c4	     0xf8581000000	                           jne 0x400014b	       512	cacheinfo.c	FUNCTION_28	IF_11
0x40000ca	        0xf641280c	            test byte [rcx + 0x28], 0xc 	       514	cacheinfo.c	FUNCTION_28	IF_11
0x40000ce	      0xb800000000	                              mov eax, 0	       514	cacheinfo.c	FUNCTION_28	IF_11
0x40000d3	           0xf45c2	                         cmovne eax, edx	       514	cacheinfo.c	FUNCTION_28	IF_11
0x40000d6	              0xc3	                                     ret	       514	cacheinfo.c	FUNCTION_28	IF_11
0x40000d7	      0x4883792000	               cmp qword [rcx + 0x20], 0	       497	cacheinfo.c	FUNCTION_28	IF_5
0x40000dc	      0xb800000000	                              mov eax, 0	       497	cacheinfo.c	FUNCTION_28	IF_5
0x40000e1	           0xf45c2	                         cmovne eax, edx	       497	cacheinfo.c	FUNCTION_28	IF_5
0x40000e4	              0xc3	                                     ret	       497	cacheinfo.c	FUNCTION_28	IF_5
0x40000e5	          0x8b711c	            mov esi, dword [rcx + 0x1c] 	       508	cacheinfo.c	FUNCTION_28	IF_9
0x40000e8	      0xb800000000	                              mov eax, 0	       508	cacheinfo.c	FUNCTION_28	IF_9
0x40000ed	            0x85f6	                           test esi, esi	       508	cacheinfo.c	FUNCTION_28	IF_9
0x40000ef	           0xf45c2	                         cmovne eax, edx	       508	cacheinfo.c	FUNCTION_28	IF_9
0x40000f2	              0xc3	                                     ret	       508	cacheinfo.c	FUNCTION_28	IF_9
0x40000f3	        0xf6412810	           test byte [rcx + 0x28], 0x10 	       489	cacheinfo.c	FUNCTION_28	IF_1
0x40000f7	      0xb800000000	                              mov eax, 0	       489	cacheinfo.c	FUNCTION_28	IF_1
0x40000fc	           0xf45c2	                         cmovne eax, edx	       489	cacheinfo.c	FUNCTION_28	IF_1
0x40000ff	              0xc3	                                     ret	       489	cacheinfo.c	FUNCTION_28	IF_1
0x4000100	        0x448b5104	               mov r10d, dword [rcx + 4]	       491	cacheinfo.c	FUNCTION_28	IF_2
0x4000104	      0xb800000000	                              mov eax, 0	       491	cacheinfo.c	FUNCTION_28	IF_2
0x4000109	          0x4585d2	                         test r10d, r10d	       491	cacheinfo.c	FUNCTION_28	IF_2
0x400010c	           0xf45c2	                         cmovne eax, edx	       491	cacheinfo.c	FUNCTION_28	IF_2
0x400010f	              0xc3	                                     ret	       491	cacheinfo.c	FUNCTION_28	IF_2
0x4000110	        0x448b4908	                mov r9d, dword [rcx + 8]	       493	cacheinfo.c	FUNCTION_28	IF_3
0x4000114	      0xb800000000	                              mov eax, 0	       493	cacheinfo.c	FUNCTION_28	IF_3
0x4000119	          0x4585c9	                           test r9d, r9d	       493	cacheinfo.c	FUNCTION_28	IF_3
0x400011c	           0xf45c2	                         cmovne eax, edx	       493	cacheinfo.c	FUNCTION_28	IF_3
0x400011f	              0xc3	                                     ret	       493	cacheinfo.c	FUNCTION_28	IF_3
0x4000120	        0x448b410c	              mov r8d, dword [rcx + 0xc]	       500	cacheinfo.c	FUNCTION_28	IF_6
0x4000124	      0xb800000000	                              mov eax, 0	       500	cacheinfo.c	FUNCTION_28	IF_6
0x4000129	          0x4585c0	                           test r8d, r8d	       500	cacheinfo.c	FUNCTION_28	IF_6
0x400012c	           0xf45c2	                         cmovne eax, edx	       500	cacheinfo.c	FUNCTION_28	IF_6
0x400012f	              0xc3	                                     ret	       500	cacheinfo.c	FUNCTION_28	IF_6
0x4000130	          0x8b7910	            mov edi, dword [rcx + 0x10] 	       506	cacheinfo.c	FUNCTION_28	IF_8
0x4000133	      0xb800000000	                              mov eax, 0	       506	cacheinfo.c	FUNCTION_28	IF_8
0x4000138	            0x85ff	                           test edi, edi	       506	cacheinfo.c	FUNCTION_28	IF_8
0x400013a	           0xf45c2	                         cmovne eax, edx	       506	cacheinfo.c	FUNCTION_28	IF_8
0x400013d	              0xc3	                                     ret	       506	cacheinfo.c	FUNCTION_28	IF_8
0x400013e	        0xf6412803	               test byte [rcx + 0x28], 3	       511	cacheinfo.c	FUNCTION_28	IF_10
0x4000142	      0xb800000000	                              mov eax, 0	       511	cacheinfo.c	FUNCTION_28	IF_10
0x4000147	           0xf45c2	                         cmovne eax, edx	       511	cacheinfo.c	FUNCTION_28	IF_10
0x400014a	              0xc3	                                     ret	       511	cacheinfo.c	FUNCTION_28	IF_10
0x400014b	            0x31c0	                            xor eax, eax	       519	cacheinfo.c	FUNCTION_28
0x400014d	    0x4881fe000000	                              cmp rsi, 0	       515	cacheinfo.c	FUNCTION_28	IF_12
0x4000154	            0x7508	                           jne 0x400015e	       515	cacheinfo.c	FUNCTION_28	IF_12
0x4000156	          0x8b4918	            mov ecx, dword [rcx + 0x18] 	       517	cacheinfo.c	FUNCTION_28	IF_12
0x4000159	            0x85c9	                           test ecx, ecx	       517	cacheinfo.c	FUNCTION_28	IF_12
0x400015b	           0xf45c2	                         cmovne eax, edx	       517	cacheinfo.c	FUNCTION_28	IF_12
0x400015e	              0xc3	                                     ret	       520	cacheinfo.c	FUNCTION_28
cpu_cache_sysfs_exit	SWITCH,0:DO,0:IF,2:functions,0:WHILE,0:CALL,10:ELSE,0:FOR,1	42
0x4000160	            0x4156	                                push r14	       561	cacheinfo.c	FUNCTION_31
0x4000162	            0x4155	                                push r13	       561	cacheinfo.c	FUNCTION_31
0x4000164	    0x49c7c6000000	                              mov r14, 0	       565	cacheinfo.c	FUNCTION_31	IF_1	CALL_1
0x400016b	            0x4154	                                push r12	       561	cacheinfo.c	FUNCTION_31
0x400016d	              0x55	                                push rbp	       561	cacheinfo.c	FUNCTION_31
0x400016e	            0x89fd	                            mov ebp, edi	       565	cacheinfo.c	FUNCTION_31	IF_1	CALL_1
0x4000170	    0x488b14ed0000	                  mov rdx, qword [rbp*8]	       565	cacheinfo.c	FUNCTION_31	IF_1	CALL_1
0x4000178	              0x53	                                push rbx	       561	cacheinfo.c	FUNCTION_31
0x4000179	          0x4d89f4	                            mov r12, r14	       565	cacheinfo.c	FUNCTION_31	IF_1	CALL_1
0x400017c	      0x49833c1400	                cmp qword [r12 + rdx], 0	       565	cacheinfo.c	FUNCTION_31	IF_1	CALL_1
0x4000181	            0x745a	                            je 0x40001dd	       565	cacheinfo.c	FUNCTION_31	IF_1	CALL_1
0x4000183	    0x49c7c5000000	                              mov r13, 0	       566	cacheinfo.c	FUNCTION_31	IF_1	FOR_1	CALL_2
0x400018a	      0x428b442a0c	       mov eax, dword [rdx + r13 + 0xc] 	       566	cacheinfo.c	FUNCTION_31	IF_1	FOR_1	CALL_2
0x400018f	            0x85c0	                           test eax, eax	       566	cacheinfo.c	FUNCTION_31	IF_1	FOR_1	CALL_2
0x4000191	            0x7429	                            je 0x40001bc	       566	cacheinfo.c	FUNCTION_31	IF_1	FOR_1	CALL_2
0x4000193	            0x31db	                            xor ebx, ebx	       566	cacheinfo.c	FUNCTION_31	IF_1	FOR_1	CALL_2
0x4000195	        0x498b1414	              mov rdx, qword [r12 + rdx]	       567	cacheinfo.c	FUNCTION_31	IF_1	FOR_1	CALL_3
0x4000199	          0x4863c3	                         movsxd rax, ebx	       567	cacheinfo.c	FUNCTION_31	IF_1	FOR_1	CALL_3
0x400019c	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	       567	cacheinfo.c	FUNCTION_31	IF_1	FOR_1	CALL_3
0x40001a0	          0x4885ff	                           test rdi, rdi	       568	cacheinfo.c	FUNCTION_31	IF_1	FOR_1	IF_2
0x40001a3	            0x7405	                            je 0x40001aa	       568	cacheinfo.c	FUNCTION_31	IF_1	FOR_1	IF_2
0x40001a5	      0xe800000000	                          call 0x40001aa	       570	cacheinfo.c	FUNCTION_31	IF_1	FOR_1	CALL_4
0x40001aa	    0x488b14ed0000	                  mov rdx, qword [rbp*8]	       566	cacheinfo.c	FUNCTION_31	IF_1	FOR_1	CALL_2
0x40001b2	          0x83c301	                              add ebx, 1	       566	cacheinfo.c	FUNCTION_31	IF_1	FOR_1	CALL_2
0x40001b5	      0x41395c150c	       cmp dword [r13 + rdx + 0xc], ebx 	       566	cacheinfo.c	FUNCTION_31	IF_1	FOR_1	CALL_2
0x40001ba	            0x77d9	                            ja 0x4000195	       566	cacheinfo.c	FUNCTION_31	IF_1	FOR_1	CALL_2
0x40001bc	        0x498b3c16	              mov rdi, qword [r14 + rdx]	       572	cacheinfo.c	FUNCTION_31	IF_1	CALL_6
0x40001c0	      0xe800000000	                          call 0x40001c5	       572	cacheinfo.c	FUNCTION_31	IF_1	CALL_6
0x40001c5	    0x488b04ed0000	                  mov rax, qword [rbp*8]	       573	cacheinfo.c	FUNCTION_31	IF_1	CALL_7
0x40001cd	    0x4ac704300000	                mov qword [rax + r14], 0	       573	cacheinfo.c	FUNCTION_31	IF_1	CALL_7
0x40001d5	    0x488b14ed0000	                  mov rdx, qword [rbp*8]	       573	cacheinfo.c	FUNCTION_31	IF_1	CALL_7
0x40001dd	    0x48c7c3000000	                              mov rbx, 0	       575	cacheinfo.c	FUNCTION_31	CALL_9
0x40001e4	        0x488b3c1a	              mov rdi, qword [rdx + rbx]	       575	cacheinfo.c	FUNCTION_31	CALL_9
0x40001e8	      0xe800000000	                          call 0x40001ed	       575	cacheinfo.c	FUNCTION_31	CALL_9
0x40001ed	    0x488b04ed0000	                  mov rax, qword [rbp*8]	       576	cacheinfo.c	FUNCTION_31	CALL_10
0x40001f5	    0x48c704180000	                mov qword [rax + rbx], 0	       576	cacheinfo.c	FUNCTION_31	CALL_10
0x40001fd	              0x5b	                                 pop rbx	       577	cacheinfo.c	FUNCTION_31
0x40001fe	              0x5d	                                 pop rbp	       577	cacheinfo.c	FUNCTION_31
0x40001ff	            0x415c	                                 pop r12	       577	cacheinfo.c	FUNCTION_31
0x4000201	            0x415d	                                 pop r13	       577	cacheinfo.c	FUNCTION_31
0x4000203	            0x415e	                                 pop r14	       577	cacheinfo.c	FUNCTION_31
0x4000205	              0xc3	                                     ret	       577	cacheinfo.c	FUNCTION_31
write_policy_show	SWITCH,0:DO,0:IF,2:functions,0:WHILE,0:CALL,3:ELSE,1:FOR,0	22
0x4000300	    0x488b87980000	            mov rax, qword [rdi + 0x98] 	       440	cacheinfo.c	FUNCTION_27
0x4000307	          0x8b4828	            mov ecx, dword [rax + 0x28] 	       440	cacheinfo.c	FUNCTION_27
0x400030a	          0xf6c101	                              test cl, 1	       443	cacheinfo.c	FUNCTION_27	IF_1
0x400030d	            0x7529	                           jne 0x4000338	       443	cacheinfo.c	FUNCTION_27	IF_1
0x400030f	            0x31c0	                            xor eax, eax	       443	cacheinfo.c	FUNCTION_27	IF_1
0x4000311	          0x83e102	                              and ecx, 2	       445	cacheinfo.c	FUNCTION_27	ELSE_1	IF_2
0x4000314	            0x7502	                           jne 0x4000318	       445	cacheinfo.c	FUNCTION_27	ELSE_1	IF_2
0x4000316	            0xf3c3	                                     ret	       448	cacheinfo.c	FUNCTION_27
0x4000318	    0x48b857726974	          movabs rax, 0x6361426574697257	       446	cacheinfo.c	FUNCTION_27	ELSE_1	IF_2
0x4000322	        0xc6420a00	                 mov byte [rdx + 0xa], 0	       446	cacheinfo.c	FUNCTION_27	ELSE_1	IF_2
0x4000326	          0x488902	                    mov qword [rdx], rax	       446	cacheinfo.c	FUNCTION_27	ELSE_1	IF_2
0x4000329	      0xb86b0a0000	                          mov eax, 0xa6b	       446	cacheinfo.c	FUNCTION_27	ELSE_1	IF_2
0x400032e	        0x66894208	                  mov word [rdx + 8], ax	       446	cacheinfo.c	FUNCTION_27	ELSE_1	IF_2
0x4000332	      0xb80a000000	                            mov eax, 0xa	       446	cacheinfo.c	FUNCTION_27	ELSE_1	IF_2
0x4000337	              0xc3	                                     ret	       448	cacheinfo.c	FUNCTION_27
0x4000338	    0x48b857726974	          movabs rax, 0x7268546574697257	       444	cacheinfo.c	FUNCTION_27	CALL_2
0x4000342	      0xb90a000000	                            mov ecx, 0xa	       444	cacheinfo.c	FUNCTION_27	CALL_2
0x4000347	    0xc742086f7567	        mov dword [rdx + 8], 0x6867756f 	       444	cacheinfo.c	FUNCTION_27	CALL_2
0x400034e	          0x488902	                    mov qword [rdx], rax	       444	cacheinfo.c	FUNCTION_27	CALL_2
0x4000351	        0x66894a0c	                mov word [rdx + 0xc], cx	       444	cacheinfo.c	FUNCTION_27	CALL_2
0x4000355	      0xb80d000000	                            mov eax, 0xd	       444	cacheinfo.c	FUNCTION_27	CALL_2
0x400035a	              0xc3	                                     ret	       444	cacheinfo.c	FUNCTION_27	CALL_2
cacheinfo_sysfs_init	SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,1:ELSE,0:FOR,0	8
0x4000040	    0x4881fe000000	                              cmp rsi, 0	       488	cacheinfo.c	FUNCTION_28	IF_1
0x4000047	    0x488b8f880000	            mov rcx, qword [rdi + 0x88] 	       488	cacheinfo.c	FUNCTION_28	IF_1
0x400004e	         0xfb75608	               movzx edx, word [rsi + 8]	       486	cacheinfo.c	FUNCTION_28
0x4000052	     0xf849b000000	                            je 0x40000f3	       488	cacheinfo.c	FUNCTION_28	IF_1
0x4000058	    0x4881fe000000	                              cmp rsi, 0	       490	cacheinfo.c	FUNCTION_28	IF_2
0x400005f	     0xf849b000000	                            je 0x4000100	       490	cacheinfo.c	FUNCTION_28	IF_2
0x4000065	              0x48	                                 invalid	       492	cacheinfo.c	FUNCTION_28	IF_3
0x4000066	              0x81	                                 invalid	       492	cacheinfo.c	FUNCTION_28	IF_3
cache_get_priv_group	SWITCH,0:DO,0:IF,0:functions,0:WHILE,0:CALL,0:ELSE,0:FOR,0	2
0x4000620	            0x31c0	                            xor eax, eax	       542	cacheinfo.c	FUNCTION_29
0x4000622	              0xc3	                                     ret	       542	cacheinfo.c	FUNCTION_29
