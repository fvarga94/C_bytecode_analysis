compat_drm_setunique	DO,0:SWITCH,0:functions,0:WHILE,0:FOR,0:CALL,0:IF,0:ELSE,0	2
0x4000040	      0xb8eaffffff	                     mov eax, 0xffffffea	       157	drm_ioc32.c	FUNCTION_3
0x4000045	              0xc3	                                     ret	       157	drm_ioc32.c	FUNCTION_3
drm_legacy_infobufs32	DO,0:SWITCH,0:functions,0:WHILE,0:FOR,0:CALL,1:IF,0:ELSE,0	3
0x4001240	    0x48c7c1000000	                              mov rcx, 0	       382	drm_ioc32.c	FUNCTION_12	CALL_1
0x4001247	          0x4889f2	                            mov rdx, rsi	       382	drm_ioc32.c	FUNCTION_12	CALL_1
0x400124a	      0xe900000000	                           jmp 0x400124f	       382	drm_ioc32.c	FUNCTION_12	CALL_1
compat_drm_agp_free	DO,0:SWITCH,0:functions,0:WHILE,0:FOR,0:CALL,2:IF,1:ELSE,0	22
0x4000290	        0x4883ec28	                           sub rsp, 0x28	       705	drm_ioc32.c	FUNCTION_25
0x4000294	    0x65488b042528	                mov rax, qword gs:[0x28]	       705	drm_ioc32.c	FUNCTION_25
0x400029d	      0x4889442420	             mov qword [rsp + 0x20], rax	       705	drm_ioc32.c	FUNCTION_25
0x40002a2	            0x31c0	                            xor eax, eax	       705	drm_ioc32.c	FUNCTION_25
0x40002a4	        0x488d4204	                      lea rax, [rdx + 4]	       709	drm_ioc32.c	FUNCTION_25	IF_1	CALL_1
0x40002a8	      0xe800000000	                          call 0x40002ad	       709	drm_ioc32.c	FUNCTION_25	IF_1	CALL_1
0x40002ad	            0x89c1	                            mov ecx, eax	       709	drm_ioc32.c	FUNCTION_25	IF_1	CALL_1
0x40002af	          0x83e2ff	                     and edx, 0xffffffff	       709	drm_ioc32.c	FUNCTION_25	IF_1	CALL_1
0x40002b2	      0xb8f2ffffff	                     mov eax, 0xfffffff2	       709	drm_ioc32.c	FUNCTION_25	IF_1	CALL_1
0x40002b7	            0x85c9	                           test ecx, ecx	       709	drm_ioc32.c	FUNCTION_25	IF_1	CALL_1
0x40002b9	      0x4889542408	                mov qword [rsp + 8], rdx	       709	drm_ioc32.c	FUNCTION_25	IF_1	CALL_1
0x40002be	            0x7514	                           jne 0x40002d4	       709	drm_ioc32.c	FUNCTION_25	IF_1	CALL_1
0x40002c0	      0xb907000000	                              mov ecx, 7	       712	drm_ioc32.c	FUNCTION_25	CALL_2
0x40002c5	          0x4889e2	                            mov rdx, rsp	       712	drm_ioc32.c	FUNCTION_25	CALL_2
0x40002c8	    0x48c7c6000000	                              mov rsi, 0	       712	drm_ioc32.c	FUNCTION_25	CALL_2
0x40002cf	      0xe800000000	                          call 0x40002d4	       712	drm_ioc32.c	FUNCTION_25	CALL_2
0x40002d4	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       714	drm_ioc32.c	FUNCTION_25
0x40002d9	    0x654833342528	                xor rsi, qword gs:[0x28]	       714	drm_ioc32.c	FUNCTION_25
0x40002e2	            0x7505	                           jne 0x40002e9	       714	drm_ioc32.c	FUNCTION_25
0x40002e4	        0x4883c428	                           add rsp, 0x28	       714	drm_ioc32.c	FUNCTION_25
0x40002e8	              0xc3	                                     ret	       714	drm_ioc32.c	FUNCTION_25
0x40002e9	      0xe800000000	                          call 0x40002ee	       714	drm_ioc32.c	FUNCTION_25
compat_drm_sg_free	DO,0:SWITCH,0:functions,0:WHILE,0:FOR,0:CALL,2:IF,1:ELSE,0	23
0x4000140	        0x4883ec18	                           sub rsp, 0x18	       780	drm_ioc32.c	FUNCTION_29
0x4000144	    0x65488b042528	                mov rax, qword gs:[0x28]	       780	drm_ioc32.c	FUNCTION_29
0x400014d	      0x4889442410	             mov qword [rsp + 0x10], rax	       780	drm_ioc32.c	FUNCTION_29
0x4000152	            0x31c0	                            xor eax, eax	       780	drm_ioc32.c	FUNCTION_29
0x4000154	        0x488d4204	                      lea rax, [rdx + 4]	       785	drm_ioc32.c	FUNCTION_29	IF_1	CALL_1
0x4000158	      0xe800000000	                          call 0x400015d	       785	drm_ioc32.c	FUNCTION_29	IF_1	CALL_1
0x400015d	            0x89c1	                            mov ecx, eax	       785	drm_ioc32.c	FUNCTION_29	IF_1	CALL_1
0x400015f	      0xb8f2ffffff	                     mov eax, 0xfffffff2	       785	drm_ioc32.c	FUNCTION_29	IF_1	CALL_1
0x4000164	            0x85c9	                           test ecx, ecx	       785	drm_ioc32.c	FUNCTION_29	IF_1	CALL_1
0x4000166	            0x751f	                           jne 0x4000187	       785	drm_ioc32.c	FUNCTION_29	IF_1	CALL_1
0x4000168	            0x89d2	                            mov edx, edx	       785	drm_ioc32.c	FUNCTION_29	IF_1	CALL_1
0x400016a	      0xb907000000	                              mov ecx, 7	       788	drm_ioc32.c	FUNCTION_29	CALL_2
0x400016f	    0x48c7c6000000	                              mov rsi, 0	       788	drm_ioc32.c	FUNCTION_29	CALL_2
0x4000176	        0x48c1e20c	                            shl rdx, 0xc	       787	drm_ioc32.c	FUNCTION_29
0x400017a	      0x4889542408	                mov qword [rsp + 8], rdx	       787	drm_ioc32.c	FUNCTION_29
0x400017f	          0x4889e2	                            mov rdx, rsp	       788	drm_ioc32.c	FUNCTION_29	CALL_2
0x4000182	      0xe800000000	                          call 0x4000187	       788	drm_ioc32.c	FUNCTION_29	CALL_2
0x4000187	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       790	drm_ioc32.c	FUNCTION_29
0x400018c	    0x654833342528	                xor rsi, qword gs:[0x28]	       790	drm_ioc32.c	FUNCTION_29
0x4000195	            0x7505	                           jne 0x400019c	       790	drm_ioc32.c	FUNCTION_29
0x4000197	        0x4883c418	                           add rsp, 0x18	       790	drm_ioc32.c	FUNCTION_29
0x400019b	              0xc3	                                     ret	       790	drm_ioc32.c	FUNCTION_29
0x400019c	      0xe800000000	                          call 0x40001a1	       790	drm_ioc32.c	FUNCTION_29
compat_drm_agp_enable	DO,0:SWITCH,0:functions,0:WHILE,0:FOR,0:CALL,2:IF,1:ELSE,0	22
0x40002f0	        0x4883ec10	                           sub rsp, 0x10	       615	drm_ioc32.c	FUNCTION_22
0x40002f4	    0x65488b042528	                mov rax, qword gs:[0x28]	       615	drm_ioc32.c	FUNCTION_22
0x40002fd	      0x4889442408	                mov qword [rsp + 8], rax	       615	drm_ioc32.c	FUNCTION_22
0x4000302	            0x31c0	                            xor eax, eax	       615	drm_ioc32.c	FUNCTION_22
0x4000304	          0x4889d0	                            mov rax, rdx	       619	drm_ioc32.c	FUNCTION_22	IF_1	CALL_1
0x4000307	      0xe800000000	                          call 0x400030c	       619	drm_ioc32.c	FUNCTION_22	IF_1	CALL_1
0x400030c	            0x89c1	                            mov ecx, eax	       619	drm_ioc32.c	FUNCTION_22	IF_1	CALL_1
0x400030e	          0x83e2ff	                     and edx, 0xffffffff	       619	drm_ioc32.c	FUNCTION_22	IF_1	CALL_1
0x4000311	      0xb8f2ffffff	                     mov eax, 0xfffffff2	       619	drm_ioc32.c	FUNCTION_22	IF_1	CALL_1
0x4000316	            0x85c9	                           test ecx, ecx	       619	drm_ioc32.c	FUNCTION_22	IF_1	CALL_1
0x4000318	        0x48891424	                    mov qword [rsp], rdx	       619	drm_ioc32.c	FUNCTION_22	IF_1	CALL_1
0x400031c	            0x7514	                           jne 0x4000332	       619	drm_ioc32.c	FUNCTION_22	IF_1	CALL_1
0x400031e	      0xb907000000	                              mov ecx, 7	       622	drm_ioc32.c	FUNCTION_22	CALL_2
0x4000323	          0x4889e2	                            mov rdx, rsp	       622	drm_ioc32.c	FUNCTION_22	CALL_2
0x4000326	    0x48c7c6000000	                              mov rsi, 0	       622	drm_ioc32.c	FUNCTION_22	CALL_2
0x400032d	      0xe800000000	                          call 0x4000332	       622	drm_ioc32.c	FUNCTION_22	CALL_2
0x4000332	      0x488b742408	                mov rsi, qword [rsp + 8]	       624	drm_ioc32.c	FUNCTION_22
0x4000337	    0x654833342528	                xor rsi, qword gs:[0x28]	       624	drm_ioc32.c	FUNCTION_22
0x4000340	            0x7505	                           jne 0x4000347	       624	drm_ioc32.c	FUNCTION_22
0x4000342	        0x4883c410	                           add rsp, 0x10	       624	drm_ioc32.c	FUNCTION_22
0x4000346	              0xc3	                                     ret	       624	drm_ioc32.c	FUNCTION_22
0x4000347	      0xe800000000	                          call 0x400034c	       624	drm_ioc32.c	FUNCTION_22
compat_drm_rmmap	DO,0:SWITCH,0:functions,0:WHILE,0:FOR,0:CALL,3:IF,1:ELSE,0	22
0x4000350	        0x4883ec30	                           sub rsp, 0x30	       232	drm_ioc32.c	FUNCTION_6
0x4000354	    0x65488b042528	                mov rax, qword gs:[0x28]	       232	drm_ioc32.c	FUNCTION_6
0x400035d	      0x4889442428	             mov qword [rsp + 0x28], rax	       232	drm_ioc32.c	FUNCTION_6
0x4000362	            0x31c0	                            xor eax, eax	       232	drm_ioc32.c	FUNCTION_6
0x4000364	        0x488d4210	                   lea rax, [rdx + 0x10]	       237	drm_ioc32.c	FUNCTION_6	IF_1	CALL_1
0x4000368	      0xe800000000	                          call 0x400036d	       237	drm_ioc32.c	FUNCTION_6	IF_1	CALL_1
0x400036d	            0x89c1	                            mov ecx, eax	       237	drm_ioc32.c	FUNCTION_6	IF_1	CALL_1
0x400036f	      0xb8f2ffffff	                     mov eax, 0xfffffff2	       237	drm_ioc32.c	FUNCTION_6	IF_1	CALL_1
0x4000374	            0x85c9	                           test ecx, ecx	       237	drm_ioc32.c	FUNCTION_6	IF_1	CALL_1
0x4000376	            0x751c	                           jne 0x4000394	       237	drm_ioc32.c	FUNCTION_6	IF_1	CALL_1
0x4000378	          0x83e2ff	                     and edx, 0xffffffff	       239	drm_ioc32.c	FUNCTION_6	CALL_2
0x400037b	      0xb901000000	                              mov ecx, 1	       240	drm_ioc32.c	FUNCTION_6	CALL_3
0x4000380	    0x48c7c6000000	                              mov rsi, 0	       240	drm_ioc32.c	FUNCTION_6	CALL_3
0x4000387	      0x4889542418	             mov qword [rsp + 0x18], rdx	       239	drm_ioc32.c	FUNCTION_6	CALL_2
0x400038c	          0x4889e2	                            mov rdx, rsp	       240	drm_ioc32.c	FUNCTION_6	CALL_3
0x400038f	      0xe800000000	                          call 0x4000394	       240	drm_ioc32.c	FUNCTION_6	CALL_3
0x4000394	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       241	drm_ioc32.c	FUNCTION_6
0x4000399	    0x654833342528	                xor rsi, qword gs:[0x28]	       241	drm_ioc32.c	FUNCTION_6
0x40003a2	            0x7505	                           jne 0x40003a9	       241	drm_ioc32.c	FUNCTION_6
0x40003a4	        0x4883c430	                           add rsp, 0x30	       241	drm_ioc32.c	FUNCTION_6
0x40003a8	              0xc3	                                     ret	       241	drm_ioc32.c	FUNCTION_6
0x40003a9	      0xe800000000	                          call 0x40003ae	       241	drm_ioc32.c	FUNCTION_6
compat_drm_agp_unbind	DO,0:SWITCH,0:functions,0:WHILE,0:FOR,0:CALL,2:IF,1:ELSE,0	22
0x4000230	        0x4883ec18	                           sub rsp, 0x18	       739	drm_ioc32.c	FUNCTION_27
0x4000234	    0x65488b042528	                mov rax, qword gs:[0x28]	       739	drm_ioc32.c	FUNCTION_27
0x400023d	      0x4889442410	             mov qword [rsp + 0x10], rax	       739	drm_ioc32.c	FUNCTION_27
0x4000242	            0x31c0	                            xor eax, eax	       739	drm_ioc32.c	FUNCTION_27
0x4000244	          0x4889d0	                            mov rax, rdx	       743	drm_ioc32.c	FUNCTION_27	IF_1	CALL_1
0x4000247	      0xe800000000	                          call 0x400024c	       743	drm_ioc32.c	FUNCTION_27	IF_1	CALL_1
0x400024c	            0x89c1	                            mov ecx, eax	       743	drm_ioc32.c	FUNCTION_27	IF_1	CALL_1
0x400024e	          0x83e2ff	                     and edx, 0xffffffff	       743	drm_ioc32.c	FUNCTION_27	IF_1	CALL_1
0x4000251	      0xb8f2ffffff	                     mov eax, 0xfffffff2	       743	drm_ioc32.c	FUNCTION_27	IF_1	CALL_1
0x4000256	            0x85c9	                           test ecx, ecx	       743	drm_ioc32.c	FUNCTION_27	IF_1	CALL_1
0x4000258	        0x48891424	                    mov qword [rsp], rdx	       743	drm_ioc32.c	FUNCTION_27	IF_1	CALL_1
0x400025c	            0x7514	                           jne 0x4000272	       743	drm_ioc32.c	FUNCTION_27	IF_1	CALL_1
0x400025e	      0xb907000000	                              mov ecx, 7	       746	drm_ioc32.c	FUNCTION_27	CALL_2
0x4000263	          0x4889e2	                            mov rdx, rsp	       746	drm_ioc32.c	FUNCTION_27	CALL_2
0x4000266	    0x48c7c6000000	                              mov rsi, 0	       746	drm_ioc32.c	FUNCTION_27	CALL_2
0x400026d	      0xe800000000	                          call 0x4000272	       746	drm_ioc32.c	FUNCTION_27	CALL_2
0x4000272	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       748	drm_ioc32.c	FUNCTION_27
0x4000277	    0x654833342528	                xor rsi, qword gs:[0x28]	       748	drm_ioc32.c	FUNCTION_27
0x4000280	            0x7505	                           jne 0x4000287	       748	drm_ioc32.c	FUNCTION_27
0x4000282	        0x4883c418	                           add rsp, 0x18	       748	drm_ioc32.c	FUNCTION_27
0x4000286	              0xc3	                                     ret	       748	drm_ioc32.c	FUNCTION_27
0x4000287	      0xe800000000	                          call 0x400028c	       748	drm_ioc32.c	FUNCTION_27
compat_drm_getstats	DO,0:SWITCH,0:functions,0:WHILE,0:FOR,0:CALL,2:IF,2:ELSE,0	19
0x4001350	              0x53	                                push rbx	       291	drm_ioc32.c	FUNCTION_8
0x4001351	      0xb910000000	                           mov ecx, 0x10	       295	drm_ioc32.c	FUNCTION_8	CALL_1
0x4001356	          0x4889d3	                            mov rbx, rdx	       291	drm_ioc32.c	FUNCTION_8
0x4001359	    0x48c7c6000000	                              mov rsi, 0	       295	drm_ioc32.c	FUNCTION_8	CALL_1
0x4001360	            0x31d2	                            xor edx, edx	       295	drm_ioc32.c	FUNCTION_8	CALL_1
0x4001362	      0xe800000000	                          call 0x4001367	       295	drm_ioc32.c	FUNCTION_8	CALL_1
0x4001367	            0x85c0	                           test eax, eax	       296	drm_ioc32.c	FUNCTION_8	IF_1
0x4001369	            0x89c2	                            mov edx, eax	       296	drm_ioc32.c	FUNCTION_8	IF_1
0x400136b	            0x7518	                           jne 0x4001385	       296	drm_ioc32.c	FUNCTION_8	IF_1
0x400136d	      0xbe7c000000	                           mov esi, 0x7c	       299	drm_ioc32.c	FUNCTION_8	IF_2	CALL_2
0x4001372	          0x4889df	                            mov rdi, rbx	       299	drm_ioc32.c	FUNCTION_8	IF_2	CALL_2
0x4001375	      0xe800000000	                          call 0x400137a	       299	drm_ioc32.c	FUNCTION_8	IF_2	CALL_2
0x400137a	        0x4883f801	                              cmp rax, 1	       301	drm_ioc32.c	FUNCTION_8
0x400137e	            0x19d2	                            sbb edx, edx	       301	drm_ioc32.c	FUNCTION_8
0x4001380	            0xf7d2	                                 not edx	       301	drm_ioc32.c	FUNCTION_8
0x4001382	          0x83e2f2	                     and edx, 0xfffffff2	       301	drm_ioc32.c	FUNCTION_8
0x4001385	            0x89d0	                            mov eax, edx	       302	drm_ioc32.c	FUNCTION_8
0x4001387	              0x5b	                                 pop rbx	       302	drm_ioc32.c	FUNCTION_8
0x4001388	              0xc3	                                     ret	       302	drm_ioc32.c	FUNCTION_8
compat_drm_sg_alloc	DO,0:SWITCH,0:functions,0:WHILE,0:FOR,0:CALL,3:IF,3:ELSE,0	35
0x40001b0	              0x53	                                push rbx	       758	drm_ioc32.c	FUNCTION_28
0x40001b1	          0x4889d3	                            mov rbx, rdx	       758	drm_ioc32.c	FUNCTION_28
0x40001b4	        0x4883ec18	                           sub rsp, 0x18	       758	drm_ioc32.c	FUNCTION_28
0x40001b8	    0x65488b042528	                mov rax, qword gs:[0x28]	       758	drm_ioc32.c	FUNCTION_28
0x40001c1	      0x4889442410	             mov qword [rsp + 0x10], rax	       758	drm_ioc32.c	FUNCTION_28
0x40001c6	            0x31c0	                            xor eax, eax	       758	drm_ioc32.c	FUNCTION_28
0x40001c8	          0x4889d0	                            mov rax, rdx	       763	drm_ioc32.c	FUNCTION_28	IF_1	CALL_1
0x40001cb	      0xe800000000	                          call 0x40001d0	       763	drm_ioc32.c	FUNCTION_28	IF_1	CALL_1
0x40001d0	          0x83e2ff	                     and edx, 0xffffffff	       763	drm_ioc32.c	FUNCTION_28	IF_1	CALL_1
0x40001d3	            0x85c0	                           test eax, eax	       763	drm_ioc32.c	FUNCTION_28	IF_1	CALL_1
0x40001d5	        0x48891424	                    mov qword [rsp], rdx	       763	drm_ioc32.c	FUNCTION_28	IF_1	CALL_1
0x40001d9	            0x7548	                           jne 0x4000223	       763	drm_ioc32.c	FUNCTION_28	IF_1	CALL_1
0x40001db	          0x4889e2	                            mov rdx, rsp	       766	drm_ioc32.c	FUNCTION_28	CALL_2
0x40001de	      0xb907000000	                              mov ecx, 7	       766	drm_ioc32.c	FUNCTION_28	CALL_2
0x40001e3	    0x48c7c6000000	                              mov rsi, 0	       766	drm_ioc32.c	FUNCTION_28	CALL_2
0x40001ea	      0xe800000000	                          call 0x40001ef	       766	drm_ioc32.c	FUNCTION_28	CALL_2
0x40001ef	            0x85c0	                           test eax, eax	       768	drm_ioc32.c	FUNCTION_28	IF_2
0x40001f1	            0x89c2	                            mov edx, eax	       768	drm_ioc32.c	FUNCTION_28	IF_2
0x40001f3	            0x7516	                           jne 0x400020b	       768	drm_ioc32.c	FUNCTION_28	IF_2
0x40001f5	      0x488b442408	                mov rax, qword [rsp + 8]	       772	drm_ioc32.c	FUNCTION_28	IF_3	CALL_3
0x40001fa	        0x488d4b04	                      lea rcx, [rbx + 4]	       772	drm_ioc32.c	FUNCTION_28	IF_3	CALL_3
0x40001fe	        0x48c1e80c	                            shr rax, 0xc	       772	drm_ioc32.c	FUNCTION_28	IF_3	CALL_3
0x4000202	      0xe800000000	                          call 0x4000207	       772	drm_ioc32.c	FUNCTION_28	IF_3	CALL_3
0x4000207	            0x85c0	                           test eax, eax	       772	drm_ioc32.c	FUNCTION_28	IF_3	CALL_3
0x4000209	            0x7518	                           jne 0x4000223	       772	drm_ioc32.c	FUNCTION_28	IF_3	CALL_3
0x400020b	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       776	drm_ioc32.c	FUNCTION_28
0x4000210	    0x654833342528	                xor rsi, qword gs:[0x28]	       776	drm_ioc32.c	FUNCTION_28
0x4000219	            0x89d0	                            mov eax, edx	       776	drm_ioc32.c	FUNCTION_28
0x400021b	            0x750d	                           jne 0x400022a	       776	drm_ioc32.c	FUNCTION_28
0x400021d	        0x4883c418	                           add rsp, 0x18	       776	drm_ioc32.c	FUNCTION_28
0x4000221	              0x5b	                                 pop rbx	       776	drm_ioc32.c	FUNCTION_28
0x4000222	              0xc3	                                     ret	       776	drm_ioc32.c	FUNCTION_28
0x4000223	      0xbaf2ffffff	                     mov edx, 0xfffffff2	       764	drm_ioc32.c	FUNCTION_28	IF_1
0x4000228	            0xebe1	                           jmp 0x400020b	       764	drm_ioc32.c	FUNCTION_28	IF_1
0x400022a	      0xe800000000	                          call 0x400022f	       776	drm_ioc32.c	FUNCTION_28
drm_legacy_mapbufs32	DO,0:SWITCH,0:functions,0:WHILE,0:FOR,0:CALL,2:IF,0:ELSE,0	20
0x40011f0	              0x53	                                push rbx	       439	drm_ioc32.c	FUNCTION_15
0x40011f1	          0x4989d1	                             mov r9, rdx	       439	drm_ioc32.c	FUNCTION_15
0x40011f4	    0x49c7c0000000	                               mov r8, 0	       442	drm_ioc32.c	FUNCTION_15	CALL_1
0x40011fb	          0x4889f2	                            mov rdx, rsi	       442	drm_ioc32.c	FUNCTION_15	CALL_1
0x40011fe	          0x4889f3	                            mov rbx, rsi	       439	drm_ioc32.c	FUNCTION_15
0x4001201	        0x4883ec10	                           sub rsp, 0x10	       439	drm_ioc32.c	FUNCTION_15
0x4001205	          0x4889e1	                            mov rcx, rsp	       442	drm_ioc32.c	FUNCTION_15	CALL_1
0x4001208	    0x65488b042528	                mov rax, qword gs:[0x28]	       439	drm_ioc32.c	FUNCTION_15
0x4001211	      0x4889442408	                mov qword [rsp + 8], rax	       439	drm_ioc32.c	FUNCTION_15
0x4001216	            0x31c0	                            xor eax, eax	       439	drm_ioc32.c	FUNCTION_15
0x4001218	      0xe800000000	                          call 0x400121d	       442	drm_ioc32.c	FUNCTION_15	CALL_1
0x400121d	        0x488b1424	                    mov rdx, qword [rsp]	       445	drm_ioc32.c	FUNCTION_15	CALL_2
0x4001221	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       447	drm_ioc32.c	FUNCTION_15
0x4001226	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       447	drm_ioc32.c	FUNCTION_15
0x400122f	          0x895304	                mov dword [rbx + 4], edx	       445	drm_ioc32.c	FUNCTION_15	CALL_2
0x4001232	            0x7506	                           jne 0x400123a	       447	drm_ioc32.c	FUNCTION_15
0x4001234	        0x4883c410	                           add rsp, 0x10	       447	drm_ioc32.c	FUNCTION_15
0x4001238	              0x5b	                                 pop rbx	       447	drm_ioc32.c	FUNCTION_15
0x4001239	              0xc3	                                     ret	       447	drm_ioc32.c	FUNCTION_15
0x400123a	      0xe800000000	                          call 0x400123f	       447	drm_ioc32.c	FUNCTION_15
