intel_fbc_global_disable	WHILE,0:IF,2:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:CALL,6	27
0x4001a60	    0xf68778060000	              test byte [rdi + 0x678], 2	      1242	intel_fbc.c	FUNCTION_47	IF_1	CALL_1
0x4001a67	            0x7502	                           jne 0x4001a6b	      1242	intel_fbc.c	FUNCTION_47	IF_1	CALL_1
0x4001a69	            0xf3c3	                                     ret	      1242	intel_fbc.c	FUNCTION_47	IF_1	CALL_1
0x4001a6b	              0x55	                                push rbp	      1239	intel_fbc.c	FUNCTION_47
0x4001a6c	    0x488daf284a00	                 lea rbp, [rdi + 0x4a28]	      1245	intel_fbc.c	FUNCTION_47	CALL_2
0x4001a73	              0x53	                                push rbx	      1239	intel_fbc.c	FUNCTION_47
0x4001a74	          0x4889fb	                            mov rbx, rdi	      1239	intel_fbc.c	FUNCTION_47
0x4001a77	          0x4889ef	                            mov rdi, rbp	      1245	intel_fbc.c	FUNCTION_47	CALL_2
0x4001a7a	      0xe800000000	                          call 0x4001a7f	      1245	intel_fbc.c	FUNCTION_47	CALL_2
0x4001a7f	    0x80bb094b0000	              cmp byte [rbx + 0x4b09], 0	      1246	intel_fbc.c	FUNCTION_47	IF_2
0x4001a86	            0x7418	                            je 0x4001aa0	      1246	intel_fbc.c	FUNCTION_47	IF_2
0x4001a88	    0x488b83584a00	          mov rax, qword [rbx + 0x4a58] 	      1247	intel_fbc.c	FUNCTION_47	IF_2	CALL_3
0x4001a8f	    0x80b8b4040000	               cmp byte [rax + 0x4b4], 0	      1247	intel_fbc.c	FUNCTION_47	IF_2	CALL_3
0x4001a96	            0x751e	                           jne 0x4001ab6	      1247	intel_fbc.c	FUNCTION_47	IF_2	CALL_3
0x4001a98	          0x4889df	                            mov rdi, rbx	      1248	intel_fbc.c	FUNCTION_47	IF_2	CALL_4
0x4001a9b	      0xe8f0e5ffff	            call sym.__intel_fbc_disable	      1248	intel_fbc.c	FUNCTION_47	IF_2	CALL_4
0x4001aa0	          0x4889ef	                            mov rdi, rbp	      1250	intel_fbc.c	FUNCTION_47	CALL_5
0x4001aa3	      0xe800000000	                          call 0x4001aa8	      1250	intel_fbc.c	FUNCTION_47	CALL_5
0x4001aa8	    0x488dbbc04b00	                 lea rdi, [rbx + 0x4bc0]	      1252	intel_fbc.c	FUNCTION_47	CALL_6
0x4001aaf	              0x5b	                                 pop rbx	      1253	intel_fbc.c	FUNCTION_47
0x4001ab0	              0x5d	                                 pop rbp	      1253	intel_fbc.c	FUNCTION_47
0x4001ab1	      0xe900000000	                           jmp 0x4001ab6	      1252	intel_fbc.c	FUNCTION_47	CALL_6
0x4001ab6	    0x48c7c6000000	                              mov rsi, 0	      1247	intel_fbc.c	FUNCTION_47	IF_2	CALL_3
0x4001abd	    0x48c7c7000000	                              mov rdi, 0	      1247	intel_fbc.c	FUNCTION_47	IF_2	CALL_3
0x4001ac4	      0xe800000000	                          call 0x4001ac9	      1247	intel_fbc.c	FUNCTION_47	IF_2	CALL_3
0x4001ac9	             0xf0b	                                     ud2	      1247	intel_fbc.c	FUNCTION_47	IF_2	CALL_3
0x4001acb	            0xebcb	                           jmp 0x4001a98	      1247	intel_fbc.c	FUNCTION_47	IF_2	CALL_3
intel_fbc_disable	WHILE,0:IF,2:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:CALL,7	33
0x40019e0	            0x4154	                                push r12	      1215	intel_fbc.c	FUNCTION_46
0x40019e2	              0x55	                                push rbp	      1215	intel_fbc.c	FUNCTION_46
0x40019e3	              0x53	                                push rbx	      1215	intel_fbc.c	FUNCTION_46
0x40019e4	          0x488b1f	                    mov rbx, qword [rdi]	      1216	intel_fbc.c	FUNCTION_46	CALL_1
0x40019e7	    0xf68378060000	              test byte [rbx + 0x678], 2	      1219	intel_fbc.c	FUNCTION_46	IF_1	CALL_2
0x40019ee	            0x743c	                            je 0x4001a2c	      1219	intel_fbc.c	FUNCTION_46	IF_1	CALL_2
0x40019f0	    0x80bfb4040000	               cmp byte [rdi + 0x4b4], 0	      1222	intel_fbc.c	FUNCTION_46	CALL_3
0x40019f7	          0x4889fd	                            mov rbp, rdi	      1222	intel_fbc.c	FUNCTION_46	CALL_3
0x40019fa	            0x7535	                           jne 0x4001a31	      1222	intel_fbc.c	FUNCTION_46	CALL_3
0x40019fc	    0x4c8da3284a00	                 lea r12, [rbx + 0x4a28]	      1224	intel_fbc.c	FUNCTION_46	CALL_4
0x4001a03	          0x4c89e7	                            mov rdi, r12	      1224	intel_fbc.c	FUNCTION_46	CALL_4
0x4001a06	      0xe800000000	                          call 0x4001a0b	      1224	intel_fbc.c	FUNCTION_46	CALL_4
0x4001a0b	    0x483bab584a00	          cmp rbp, qword [rbx + 0x4a58] 	      1225	intel_fbc.c	FUNCTION_46	IF_2
0x4001a12	            0x7434	                            je 0x4001a48	      1225	intel_fbc.c	FUNCTION_46	IF_2
0x4001a14	          0x4c89e7	                            mov rdi, r12	      1227	intel_fbc.c	FUNCTION_46	CALL_6
0x4001a17	      0xe800000000	                          call 0x4001a1c	      1227	intel_fbc.c	FUNCTION_46	CALL_6
0x4001a1c	    0x488dbbc04b00	                 lea rdi, [rbx + 0x4bc0]	      1229	intel_fbc.c	FUNCTION_46	CALL_7
0x4001a23	              0x5b	                                 pop rbx	      1230	intel_fbc.c	FUNCTION_46
0x4001a24	              0x5d	                                 pop rbp	      1230	intel_fbc.c	FUNCTION_46
0x4001a25	            0x415c	                                 pop r12	      1230	intel_fbc.c	FUNCTION_46
0x4001a27	      0xe900000000	                           jmp 0x4001a2c	      1229	intel_fbc.c	FUNCTION_46	CALL_7
0x4001a2c	              0x5b	                                 pop rbx	      1230	intel_fbc.c	FUNCTION_46
0x4001a2d	              0x5d	                                 pop rbp	      1230	intel_fbc.c	FUNCTION_46
0x4001a2e	            0x415c	                                 pop r12	      1230	intel_fbc.c	FUNCTION_46
0x4001a30	              0xc3	                                     ret	      1230	intel_fbc.c	FUNCTION_46
0x4001a31	    0x48c7c6000000	                              mov rsi, 0	      1222	intel_fbc.c	FUNCTION_46	CALL_3
0x4001a38	    0x48c7c7000000	                              mov rdi, 0	      1222	intel_fbc.c	FUNCTION_46	CALL_3
0x4001a3f	      0xe800000000	                          call 0x4001a44	      1222	intel_fbc.c	FUNCTION_46	CALL_3
0x4001a44	             0xf0b	                                     ud2	      1222	intel_fbc.c	FUNCTION_46	CALL_3
0x4001a46	            0xebb4	                           jmp 0x40019fc	      1222	intel_fbc.c	FUNCTION_46	CALL_3
0x4001a48	          0x4889df	                            mov rdi, rbx	      1226	intel_fbc.c	FUNCTION_46	CALL_5
0x4001a4b	      0xe840e6ffff	            call sym.__intel_fbc_disable	      1226	intel_fbc.c	FUNCTION_46	CALL_5
0x4001a50	            0xebc2	                           jmp 0x4001a14	      1226	intel_fbc.c	FUNCTION_46	CALL_5
intel_fbc_work_fn	WHILE,0:IF,3:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:CALL,13	425
0x4000300	            0x4157	                                push r15	       403	intel_fbc.c	FUNCTION_21
0x4000302	            0x4156	                                push r14	       403	intel_fbc.c	FUNCTION_21
0x4000304	            0x4155	                                push r13	       403	intel_fbc.c	FUNCTION_21
0x4000306	            0x4154	                                push r12	       403	intel_fbc.c	FUNCTION_21
0x4000308	              0x55	                                push rbp	       403	intel_fbc.c	FUNCTION_21
0x4000309	              0x53	                                push rbx	       403	intel_fbc.c	FUNCTION_21
0x400030a	          0x4889fb	                            mov rbx, rdi	       403	intel_fbc.c	FUNCTION_21
0x400030d	    0x4c8db368feff	                  lea r14, [rbx - 0x198]	       403	intel_fbc.c	FUNCTION_21
0x4000314	        0x4883ec30	                           sub rsp, 0x30	       403	intel_fbc.c	FUNCTION_21
0x4000318	    0x4c8ba798feff	            mov r12, qword [rdi - 0x168]	       408	intel_fbc.c	FUNCTION_21
0x400031f	    0x65488b042528	                mov rax, qword gs:[0x28]	       403	intel_fbc.c	FUNCTION_21
0x4000328	      0x4889442428	             mov qword [rsp + 0x28], rax	       403	intel_fbc.c	FUNCTION_21
0x400032d	            0x31c0	                            xor eax, eax	       403	intel_fbc.c	FUNCTION_21
0x400032f	    0x49638424b004	        movsxd rax, dword [r12 + 0x4b0] 	       409	intel_fbc.c	FUNCTION_21
0x4000337	        0x488d1480	                  lea rdx, [rax + rax*4]	       409	intel_fbc.c	FUNCTION_21
0x400033b	        0x4c8d2c50	                  lea r13, [rax + rdx*2]	       409	intel_fbc.c	FUNCTION_21
0x400033f	        0x49c1e505	                              shl r13, 5	       409	intel_fbc.c	FUNCTION_21
0x4000343	    0x4c03afc8b5ff	           add r13, qword [rdi - 0x4a38]	       409	intel_fbc.c	FUNCTION_21
0x400034a	          0x4c89e7	                            mov rdi, r12	       411	intel_fbc.c	FUNCTION_21	IF_1	CALL_2
0x400034d	      0xe800000000	                          call 0x4000352	       411	intel_fbc.c	FUNCTION_21	IF_1	CALL_2
0x4000352	        0x4983c508	                              add r13, 8	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x4000356	            0x85c0	                           test eax, eax	       411	intel_fbc.c	FUNCTION_21	IF_1	CALL_2
0x4000358	            0x7431	                            je 0x400038b	       411	intel_fbc.c	FUNCTION_21	IF_1	CALL_2
0x400035a	      0xe90c020000	                           jmp 0x400056b	       411	intel_fbc.c	FUNCTION_21	IF_1	CALL_2
0x400035f	          0x4c89f7	                            mov rdi, r14	       437	intel_fbc.c	FUNCTION_21	CALL_8
0x4000362	      0xe800000000	                          call 0x4000367	       437	intel_fbc.c	FUNCTION_21	CALL_8
0x4000367	        0x807bf000	                cmp byte [rbx - 0x10], 0	       440	intel_fbc.c	FUNCTION_21	IF_2
0x400036b	     0xf84ba000000	                            je 0x400042b	       440	intel_fbc.c	FUNCTION_21	IF_2
0x4000371	          0x4c89e7	                            mov rdi, r12	       444	intel_fbc.c	FUNCTION_21	IF_3	CALL_9
0x4000374	      0xe800000000	                          call 0x4000379	       444	intel_fbc.c	FUNCTION_21	IF_3	CALL_9
0x4000379	        0x483b43f8	                cmp rax, qword [rbx - 8]	       444	intel_fbc.c	FUNCTION_21	IF_3	CALL_9
0x400037d	     0xf85db000000	                           jne 0x400045e	       444	intel_fbc.c	FUNCTION_21	IF_3	CALL_9
0x4000383	          0x4c89f7	                            mov rdi, r14	       445	intel_fbc.c	FUNCTION_21	IF_3	CALL_10
0x4000386	      0xe800000000	                          call 0x400038b	       445	intel_fbc.c	FUNCTION_21	IF_3	CALL_10
0x400038b	      0xe800000000	                          call 0x4000390	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x4000390	          0x4c89e7	                            mov rdi, r12	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x4000393	      0xe800000000	                          call 0x4000398	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x4000398	        0x483b43f8	                cmp rax, qword [rbx - 8]	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x400039c	            0x75c1	                           jne 0x400035f	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x400039e	            0x31f6	                            xor esi, esi	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003a0	          0x4889e7	                            mov rdi, rsp	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003a3	      0xbd32000000	                           mov ebp, 0x32	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003a8	      0xe800000000	                          call 0x40003ad	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003ad	      0xba02000000	                              mov edx, 2	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003b2	          0x4889e6	                            mov rsi, rsp	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003b5	          0x4c89ef	                            mov rdi, r13	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003b8	      0xe800000000	                          call 0x40003bd	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003bd	          0x4c89e7	                            mov rdi, r12	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003c0	      0xe800000000	                          call 0x40003c5	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003c5	        0x483943f8	                cmp qword [rbx - 8], rax	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003c9	           0xf95c0	                                setne al	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003cc	            0x31d2	                            xor edx, edx	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003ce	            0x84c0	                             test al, al	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003d0	            0x753c	                           jne 0x400040e	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003d2	            0x84d2	                             test dl, dl	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003d4	            0x7538	                           jne 0x400040e	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003d6	          0x4889ef	                            mov rdi, rbp	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003d9	      0xe800000000	                          call 0x40003de	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003de	      0xba02000000	                              mov edx, 2	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003e3	          0x4889e6	                            mov rsi, rsp	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003e6	          0x4c89ef	                            mov rdi, r13	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003e9	          0x4889c5	                            mov rbp, rax	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003ec	      0xe800000000	                          call 0x40003f1	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003f1	          0x4c89e7	                            mov rdi, r12	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003f4	      0xe800000000	                          call 0x40003f9	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003f9	        0x483943f8	                cmp qword [rbx - 8], rax	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x40003fd	           0xf95c0	                                setne al	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x4000400	          0x4885ed	                           test rbp, rbp	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x4000403	           0xf94c2	                                 sete dl	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x4000406	            0x84c0	                             test al, al	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x4000408	            0x74c8	                            je 0x40003d2	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x400040a	            0x84d2	                             test dl, dl	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x400040c	            0x74c0	                            je 0x40003ce	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x400040e	          0x4889e6	                            mov rsi, rsp	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x4000411	          0x4c89ef	                            mov rdi, r13	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x4000414	      0xe800000000	                          call 0x4000419	       433	intel_fbc.c	FUNCTION_21	CALL_5
0x4000419	          0x4c89f7	                            mov rdi, r14	       437	intel_fbc.c	FUNCTION_21	CALL_8
0x400041c	      0xe800000000	                          call 0x4000421	       437	intel_fbc.c	FUNCTION_21	CALL_8
0x4000421	        0x807bf000	                cmp byte [rbx - 0x10], 0	       440	intel_fbc.c	FUNCTION_21	IF_2
0x4000425	     0xf8546ffffff	                           jne 0x4000371	       440	intel_fbc.c	FUNCTION_21	IF_2
0x400042b	          0x4c89f7	                            mov rdi, r14	       454	intel_fbc.c	FUNCTION_21	CALL_12
0x400042e	      0xe800000000	                          call 0x4000433	       454	intel_fbc.c	FUNCTION_21	CALL_12
0x4000433	          0x4c89e7	                            mov rdi, r12	       455	intel_fbc.c	FUNCTION_21	CALL_13
0x4000436	      0xe800000000	                          call 0x400043b	       455	intel_fbc.c	FUNCTION_21	CALL_13
0x400043b	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       456	intel_fbc.c	FUNCTION_21
0x4000440	    0x654833042528	                xor rax, qword gs:[0x28]	       456	intel_fbc.c	FUNCTION_21
0x4000449	     0xf85c8050000	                           jne 0x4000a17	       456	intel_fbc.c	FUNCTION_21
0x400044f	        0x4883c430	                           add rsp, 0x30	       456	intel_fbc.c	FUNCTION_21
0x4000453	              0x5b	                                 pop rbx	       456	intel_fbc.c	FUNCTION_21
0x4000454	              0x5d	                                 pop rbp	       456	intel_fbc.c	FUNCTION_21
0x4000455	            0x415c	                                 pop r12	       456	intel_fbc.c	FUNCTION_21
0x4000457	            0x415d	                                 pop r13	       456	intel_fbc.c	FUNCTION_21
0x4000459	            0x415e	                                 pop r14	       456	intel_fbc.c	FUNCTION_21
0x400045b	            0x415f	                                 pop r15	       456	intel_fbc.c	FUNCTION_21
0x400045d	              0xc3	                                     ret	       456	intel_fbc.c	FUNCTION_21
0x400045e	     0xfb6839cbaff	          movzx eax, byte [rbx - 0x4564]	       364	intel_fbc.c	FUNCTION_18	IF_1	CALL_1
0x4000465	    0x4c8dab40b4ff	                 lea r13, [rbx - 0x4bc0]	       405	intel_fbc.c	FUNCTION_21	CALL_1
0x400046c	    0xc6834affffff	                mov byte [rbx - 0xb6], 1	       362	intel_fbc.c	FUNCTION_18
0x4000473	            0x3c06	                               cmp al, 6	       364	intel_fbc.c	FUNCTION_18	IF_1	CALL_1
0x4000475	     0xf8772010000	                            ja 0x40005ed	       364	intel_fbc.c	FUNCTION_18	IF_1	CALL_1
0x400047b	            0x3c04	                               cmp al, 4	       366	intel_fbc.c	FUNCTION_18	ELSE_1	IF_2	CALL_3
0x400047d	     0xf87e1020000	                            ja 0x4000764	       366	intel_fbc.c	FUNCTION_18	ELSE_1	IF_2	CALL_3
0x4000483	    0xf683a5baffff	         test byte [rbx - 0x455b], 0x40 	       368	intel_fbc.c	FUNCTION_18	ELSE_2	IF_3	CALL_5
0x400048a	     0xf85f4000000	                           jne 0x4000584	       368	intel_fbc.c	FUNCTION_18	ELSE_2	IF_3	CALL_5
0x4000490	          0x8b4be8	             mov ecx, dword [rbx - 0x18]	       125	intel_fbc.c	FUNCTION_7
0x4000493	      0xbaabaaaa2a	                     mov edx, 0x2aaaaaab	       125	intel_fbc.c	FUNCTION_7
0x4000498	            0x89c8	                            mov eax, ecx	       125	intel_fbc.c	FUNCTION_7
0x400049a	          0xc1f91f	                           sar ecx, 0x1f	       125	intel_fbc.c	FUNCTION_7
0x400049d	            0xf7ea	                                imul edx	       125	intel_fbc.c	FUNCTION_7
0x400049f	          0x8b43e0	             mov eax, dword [rbx - 0x20]	       126	intel_fbc.c	FUNCTION_7	IF_1
0x40004a2	          0xc1fa08	                              sar edx, 8	       125	intel_fbc.c	FUNCTION_7
0x40004a5	            0x29ca	                            sub edx, ecx	       125	intel_fbc.c	FUNCTION_7
0x40004a7	            0x39d0	                            cmp eax, edx	       127	intel_fbc.c	FUNCTION_7	IF_1
0x40004a9	           0xf42d0	                          cmovb edx, eax	       127	intel_fbc.c	FUNCTION_7	IF_1
0x40004ac	    0xf6839abaffff	            test byte [rbx - 0x4566], 2 	       130	intel_fbc.c	FUNCTION_7	IF_2	CALL_1
0x40004b3	     0xf8497020000	                            je 0x4000750	       130	intel_fbc.c	FUNCTION_7	IF_2	CALL_1
0x40004b9	          0x8d421f	                   lea eax, [rdx + 0x1f]	       131	intel_fbc.c	FUNCTION_7	IF_2
0x40004bc	            0x85d2	                           test edx, edx	       131	intel_fbc.c	FUNCTION_7	IF_2
0x40004be	           0xf48d0	                          cmovs edx, eax	       131	intel_fbc.c	FUNCTION_7	IF_2
0x40004c1	          0xc1fa05	                              sar edx, 5	       131	intel_fbc.c	FUNCTION_7	IF_2
0x40004c4	        0x448d7aff	                     lea r15d, [rdx - 1]	       131	intel_fbc.c	FUNCTION_7	IF_2
0x40004c8	      0xbd00330000	                         mov ebp, 0x3300	       297	intel_fbc.c	FUNCTION_16
0x40004cd	            0x89ee	                            mov esi, ebp	       137	intel_fbc.c	FUNCTION_7	CALL_3
0x40004cf	          0x83c504	                              add ebp, 4	       137	intel_fbc.c	FUNCTION_7	CALL_3
0x40004d2	            0x31d2	                            xor edx, edx	       137	intel_fbc.c	FUNCTION_7	CALL_3
0x40004d4	    0x488b8358bcff	           mov rax, qword [rbx - 0x43a8]	       137	intel_fbc.c	FUNCTION_7	CALL_3
0x40004db	      0xb901000000	                              mov ecx, 1	       137	intel_fbc.c	FUNCTION_7	CALL_3
0x40004e0	          0x4c89ef	                            mov rdi, r13	       137	intel_fbc.c	FUNCTION_7	CALL_3
0x40004e3	      0xe800000000	                          call 0x40004e8	       137	intel_fbc.c	FUNCTION_7	CALL_3
0x40004e8	    0x81fdc4330000	                         cmp ebp, 0x33c4	       136	intel_fbc.c	FUNCTION_7	FOR_1
0x40004ee	            0x75dd	                           jne 0x40004cd	       136	intel_fbc.c	FUNCTION_7	FOR_1
0x40004f0	    0xf6839abaffff	            test byte [rbx - 0x4566], 8 	       139	intel_fbc.c	FUNCTION_7	IF_3	CALL_4
0x40004f7	     0xf85c9030000	                           jne 0x40008c6	       139	intel_fbc.c	FUNCTION_7	IF_3	CALL_4
0x40004fd	      0xba01000000	                              mov edx, 1	       150	intel_fbc.c	FUNCTION_7	CALL_8
0x4000502	      0xbe08320000	                         mov esi, 0x3208	       150	intel_fbc.c	FUNCTION_7	CALL_8
0x4000507	          0x4c89ef	                            mov rdi, r13	       150	intel_fbc.c	FUNCTION_7	CALL_8
0x400050a	    0x488b8338bcff	           mov rax, qword [rbx - 0x43c8]	       150	intel_fbc.c	FUNCTION_7	CALL_8
0x4000511	      0xe800000000	                          call 0x4000516	       150	intel_fbc.c	FUNCTION_7	CALL_8
0x4000516	      0x250000ff3f	                     and eax, 0x3fff0000	       151	intel_fbc.c	FUNCTION_7
0x400051b	      0xbe08320000	                         mov esi, 0x3208	       157	intel_fbc.c	FUNCTION_7	CALL_10
0x4000520	          0x4c89ef	                            mov rdi, r13	       157	intel_fbc.c	FUNCTION_7	CALL_10
0x4000523	            0x89c2	                            mov edx, eax	       152	intel_fbc.c	FUNCTION_7
0x4000525	       0xd002000c0	                      or eax, 0xc0002000	       152	intel_fbc.c	FUNCTION_7
0x400052a	    0x81ca000000c0	                      or edx, 0xc0000000	       152	intel_fbc.c	FUNCTION_7
0x4000530	    0xf683a5baffff	            test byte [rbx - 0x455b], 1 	       152	intel_fbc.c	FUNCTION_7
0x4000537	           0xf44c2	                          cmove eax, edx	       152	intel_fbc.c	FUNCTION_7
0x400053a	        0x488b53b8	             mov rdx, qword [rbx - 0x48]	       156	intel_fbc.c	FUNCTION_7
0x400053e	    0x488b8ab00000	            mov rcx, qword [rdx + 0xb0] 	       156	intel_fbc.c	FUNCTION_7
0x4000545	        0x410fb6d7	                         movzx edx, r15b	       156	intel_fbc.c	FUNCTION_7
0x4000549	          0xc1e205	                              shl edx, 5	       156	intel_fbc.c	FUNCTION_7
0x400054c	           0xb5124	              or edx, dword [rcx + 0x24]	       156	intel_fbc.c	FUNCTION_7
0x400054f	      0xb901000000	                              mov ecx, 1	       157	intel_fbc.c	FUNCTION_7	CALL_10
0x4000554	             0x9c2	                             or edx, eax	       156	intel_fbc.c	FUNCTION_7
0x4000556	    0x488b8358bcff	           mov rax, qword [rbx - 0x43a8]	       157	intel_fbc.c	FUNCTION_7	CALL_10
0x400055d	      0xe800000000	                          call 0x4000562	       157	intel_fbc.c	FUNCTION_7	CALL_10
0x4000562	        0xc643f000	                mov byte [rbx - 0x10], 0	       451	intel_fbc.c	FUNCTION_21
0x4000566	      0xe9c0feffff	                           jmp 0x400042b	       451	intel_fbc.c	FUNCTION_21
0x400056b	          0x4c89f7	                            mov rdi, r14	       413	intel_fbc.c	FUNCTION_21	IF_1	CALL_3
0x400056e	      0xe800000000	                          call 0x4000573	       413	intel_fbc.c	FUNCTION_21	IF_1	CALL_3
0x4000573	        0xc643f000	                mov byte [rbx - 0x10], 0	       414	intel_fbc.c	FUNCTION_21	IF_1
0x4000577	          0x4c89f7	                            mov rdi, r14	       415	intel_fbc.c	FUNCTION_21	IF_1	CALL_4
0x400057a	      0xe800000000	                          call 0x400057f	       415	intel_fbc.c	FUNCTION_21	IF_1	CALL_4
0x400057f	      0xe9b7feffff	                           jmp 0x400043b	       416	intel_fbc.c	FUNCTION_21	IF_1
0x4000584	          0x8b43cc	             mov eax, dword [rbx - 0x34]	       170	intel_fbc.c	FUNCTION_9	CALL_1
0x4000587	        0x488b53d8	             mov rdx, qword [rbx - 0x28]	       171	intel_fbc.c	FUNCTION_9	IF_1
0x400058b	          0xc1e01e	                           shl eax, 0x1e	       170	intel_fbc.c	FUNCTION_9	CALL_1
0x400058e	            0x89c5	                            mov ebp, eax	       170	intel_fbc.c	FUNCTION_9	CALL_1
0x4000590	       0xd40040000	                           or eax, 0x440	       170	intel_fbc.c	FUNCTION_9	CALL_1
0x4000595	    0x81cd00040000	                           or ebp, 0x400	       170	intel_fbc.c	FUNCTION_9	CALL_1
0x400059b	        0x807a0602	                   cmp byte [rdx + 6], 2	       170	intel_fbc.c	FUNCTION_9	CALL_1
0x400059f	           0xf44e8	                          cmove ebp, eax	       170	intel_fbc.c	FUNCTION_9	CALL_1
0x40005a2	        0xf643c001	               test byte [rbx - 0x40], 1	       176	intel_fbc.c	FUNCTION_9	ELSE_1	IF_2
0x40005a6	     0xf855a030000	                           jne 0x4000906	       176	intel_fbc.c	FUNCTION_9	ELSE_1	IF_2
0x40005ac	    0x488b8358bcff	           mov rax, qword [rbx - 0x43a8]	       180	intel_fbc.c	FUNCTION_9	ELSE_2	CALL_3
0x40005b3	      0xb901000000	                              mov ecx, 1	       180	intel_fbc.c	FUNCTION_9	ELSE_2	CALL_3
0x40005b8	            0x31d2	                            xor edx, edx	       180	intel_fbc.c	FUNCTION_9	ELSE_2	CALL_3
0x40005ba	      0xbe18320000	                         mov esi, 0x3218	       180	intel_fbc.c	FUNCTION_9	ELSE_2	CALL_3
0x40005bf	          0x4c89ef	                            mov rdi, r13	       180	intel_fbc.c	FUNCTION_9	ELSE_2	CALL_3
0x40005c2	      0xe800000000	                          call 0x40005c7	       180	intel_fbc.c	FUNCTION_9	ELSE_2	CALL_3
0x40005c7	            0x89ea	                            mov edx, ebp	       184	intel_fbc.c	FUNCTION_9	CALL_4
0x40005c9	    0x488b8358bcff	           mov rax, qword [rbx - 0x43a8]	       184	intel_fbc.c	FUNCTION_9	CALL_4
0x40005d0	      0xb901000000	                              mov ecx, 1	       184	intel_fbc.c	FUNCTION_9	CALL_4
0x40005d5	    0x81ca00000080	                      or edx, 0x80000000	       184	intel_fbc.c	FUNCTION_9	CALL_4
0x40005db	      0xbe08320000	                         mov esi, 0x3208	       184	intel_fbc.c	FUNCTION_9	CALL_4
0x40005e0	          0x4c89ef	                            mov rdi, r13	       184	intel_fbc.c	FUNCTION_9	CALL_4
0x40005e3	      0xe800000000	                          call 0x40005e8	       184	intel_fbc.c	FUNCTION_9	CALL_4
0x40005e8	      0xe975ffffff	                           jmp 0x4000562	       184	intel_fbc.c	FUNCTION_9	CALL_4
0x40005ed	    0xf6839bbaffff	            test byte [rbx - 0x4565], 1 	       285	intel_fbc.c	FUNCTION_16	IF_1	CALL_2
0x40005f4	    0x448bbb88feff	           mov r15d, dword [rbx - 0x178]	       282	intel_fbc.c	FUNCTION_16
0x40005fb	    0x8b83a4baffff	           mov eax, dword [rbx - 0x455c]	       285	intel_fbc.c	FUNCTION_16	IF_1	CALL_2
0x4000601	            0x7465	                            je 0x4000668	       285	intel_fbc.c	FUNCTION_16	IF_1	CALL_2
0x4000603	      0xa900000002	                     test eax, 0x2000000	       285	intel_fbc.c	FUNCTION_16	IF_1	CALL_2
0x4000608	            0x755e	                           jne 0x4000668	       285	intel_fbc.c	FUNCTION_16	IF_1	CALL_2
0x400060a	      0xba01000000	                              mov edx, 1	       286	intel_fbc.c	FUNCTION_16	IF_1	CALL_3
0x400060f	    0x488b8338bcff	           mov rax, qword [rbx - 0x43c8]	       286	intel_fbc.c	FUNCTION_16	IF_1	CALL_3
0x4000616	      0xbe8c200400	                        mov esi, 0x4208c	       286	intel_fbc.c	FUNCTION_16	IF_1	CALL_3
0x400061b	          0x4c89ef	                            mov rdi, r13	       286	intel_fbc.c	FUNCTION_16	IF_1	CALL_3
0x400061e	      0xe800000000	                          call 0x4000623	       286	intel_fbc.c	FUNCTION_16	IF_1	CALL_3
0x4000623	      0x2500c0ffff	                     and eax, 0xffffc000	       288	intel_fbc.c	FUNCTION_16	IF_1
0x4000628	            0x89c2	                            mov edx, eax	       288	intel_fbc.c	FUNCTION_16	IF_1
0x400062a	        0x488b43b8	             mov rax, qword [rbx - 0x48]	       290	intel_fbc.c	FUNCTION_16	IF_1	IF_2	CALL_4
0x400062e	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	       290	intel_fbc.c	FUNCTION_16	IF_1	IF_2	CALL_4
0x4000635	    0x8b8090010000	           mov eax, dword [rax + 0x190] 	       290	intel_fbc.c	FUNCTION_16	IF_1	IF_2	CALL_4
0x400063b	          0x83e07f	                           and eax, 0x7f	       290	intel_fbc.c	FUNCTION_16	IF_1	IF_2	CALL_4
0x400063e	          0x83f801	                              cmp eax, 1	       290	intel_fbc.c	FUNCTION_16	IF_1	IF_2	CALL_4
0x4000641	            0x7406	                            je 0x4000649	       290	intel_fbc.c	FUNCTION_16	IF_1	IF_2	CALL_4
0x4000643	           0xb53ec	              or edx, dword [rbx - 0x14]	       292	intel_fbc.c	FUNCTION_16	IF_1	IF_2
0x4000646	          0x80ce20	                             or dh, 0x20	       292	intel_fbc.c	FUNCTION_16	IF_1	IF_2
0x4000649	    0x488b8358bcff	           mov rax, qword [rbx - 0x43a8]	       294	intel_fbc.c	FUNCTION_16	IF_1	CALL_5
0x4000650	      0xb901000000	                              mov ecx, 1	       294	intel_fbc.c	FUNCTION_16	IF_1	CALL_5
0x4000655	      0xbe8c200400	                        mov esi, 0x4208c	       294	intel_fbc.c	FUNCTION_16	IF_1	CALL_5
0x400065a	          0x4c89ef	                            mov rdi, r13	       294	intel_fbc.c	FUNCTION_16	IF_1	CALL_5
0x400065d	      0xe800000000	                          call 0x4000662	       294	intel_fbc.c	FUNCTION_16	IF_1	CALL_5
0x4000662	    0x8b83a4baffff	           mov eax, dword [rbx - 0x455c]	       294	intel_fbc.c	FUNCTION_16	IF_1	CALL_5
0x4000668	            0x31ed	                            xor ebp, ebp	       297	intel_fbc.c	FUNCTION_16
0x400066a	      0xa900000200	                       test eax, 0x20000	       298	intel_fbc.c	FUNCTION_16	IF_3	CALL_6
0x400066f	     0xf853e020000	                           jne 0x40008b3	       298	intel_fbc.c	FUNCTION_16	IF_3	CALL_6
0x4000675	        0x488b43d8	             mov rax, qword [rbx - 0x28]	       301	intel_fbc.c	FUNCTION_16	IF_4
0x4000679	        0x80780602	                   cmp byte [rax + 6], 2	       302	intel_fbc.c	FUNCTION_16	IF_4
0x400067d	           0xf94c0	                                 sete al	       302	intel_fbc.c	FUNCTION_16	IF_4
0x4000680	           0xfb6c0	                           movzx eax, al	       302	intel_fbc.c	FUNCTION_16	IF_4
0x4000683	          0x4101c7	                           add r15d, eax	       302	intel_fbc.c	FUNCTION_16	IF_4
0x4000686	        0x4183ff02	                             cmp r15d, 2	       304	intel_fbc.c	FUNCTION_16	SWITCH_1
0x400068a	     0xf84f3020000	                            je 0x4000983	       304	intel_fbc.c	FUNCTION_16	SWITCH_1
0x4000690	            0x7c0b	                            jl 0x400069d	       304	intel_fbc.c	FUNCTION_16	SWITCH_1
0x4000692	            0x89e8	                            mov eax, ebp	       307	intel_fbc.c	FUNCTION_16	SWITCH_1
0x4000694	             0xc80	                             or al, 0x80	       307	intel_fbc.c	FUNCTION_16	SWITCH_1
0x4000696	        0x4183ff04	                             cmp r15d, 4	       307	intel_fbc.c	FUNCTION_16	SWITCH_1
0x400069a	           0xf4ee8	                         cmovle ebp, eax	       307	intel_fbc.c	FUNCTION_16	SWITCH_1
0x400069d	        0xf643c001	               test byte [rbx - 0x40], 1	       317	intel_fbc.c	FUNCTION_16	IF_5
0x40006a1	     0xf85b8010000	                           jne 0x400085f	       317	intel_fbc.c	FUNCTION_16	IF_5
0x40006a7	    0x488b8358bcff	           mov rax, qword [rbx - 0x43a8]	       324	intel_fbc.c	FUNCTION_16	ELSE_1	CALL_10
0x40006ae	      0xb901000000	                              mov ecx, 1	       324	intel_fbc.c	FUNCTION_16	ELSE_1	CALL_10
0x40006b3	            0x31d2	                            xor edx, edx	       324	intel_fbc.c	FUNCTION_16	ELSE_1	CALL_10
0x40006b5	      0xbe00011000	                       mov esi, 0x100100	       324	intel_fbc.c	FUNCTION_16	ELSE_1	CALL_10
0x40006ba	          0x4c89ef	                            mov rdi, r13	       324	intel_fbc.c	FUNCTION_16	ELSE_1	CALL_10
0x40006bd	      0xe800000000	                          call 0x40006c2	       324	intel_fbc.c	FUNCTION_16	ELSE_1	CALL_10
0x40006c2	    0x488b8358bcff	           mov rax, qword [rbx - 0x43a8]	       325	intel_fbc.c	FUNCTION_16	ELSE_1	CALL_11
0x40006c9	      0xb901000000	                              mov ecx, 1	       325	intel_fbc.c	FUNCTION_16	ELSE_1	CALL_11
0x40006ce	            0x31d2	                            xor edx, edx	       325	intel_fbc.c	FUNCTION_16	ELSE_1	CALL_11
0x40006d0	      0xbe04011000	                       mov esi, 0x100104	       325	intel_fbc.c	FUNCTION_16	ELSE_1	CALL_11
0x40006d5	          0x4c89ef	                            mov rdi, r13	       325	intel_fbc.c	FUNCTION_16	ELSE_1	CALL_11
0x40006d8	      0xe800000000	                          call 0x40006dd	       325	intel_fbc.c	FUNCTION_16	ELSE_1	CALL_11
0x40006dd	            0x89e8	                            mov eax, ebp	       329	intel_fbc.c	FUNCTION_16	IF_6
0x40006df	          0x80cc04	                                or ah, 4	       329	intel_fbc.c	FUNCTION_16	IF_6
0x40006e2	    0x80bb48ffffff	                cmp byte [rbx - 0xb8], 0	       329	intel_fbc.c	FUNCTION_16	IF_6
0x40006e9	           0xf45e8	                         cmovne ebp, eax	       329	intel_fbc.c	FUNCTION_16	IF_6
0x40006ec	    0x8b83a4baffff	           mov eax, dword [rbx - 0x455c]	       331	intel_fbc.c	FUNCTION_16	IF_7	CALL_12
0x40006f2	      0xa900000200	                       test eax, 0x20000	       331	intel_fbc.c	FUNCTION_16	IF_7	CALL_12
0x40006f7	     0xf858e020000	                           jne 0x400098b	       331	intel_fbc.c	FUNCTION_16	IF_7	CALL_12
0x40006fd	      0xa900001800	                      test eax, 0x180000	       336	intel_fbc.c	FUNCTION_16	ELSE_2	IF_8	CALL_16
0x4000702	     0xf84fd000000	                            je 0x4000805	       336	intel_fbc.c	FUNCTION_16	ELSE_2	IF_8	CALL_16
0x4000708	          0x8b53c8	             mov edx, dword [rbx - 0x38]	       338	intel_fbc.c	FUNCTION_16	ELSE_2	IF_8	CALL_18
0x400070b	          0x4c89ef	                            mov rdi, r13	       338	intel_fbc.c	FUNCTION_16	ELSE_2	IF_8	CALL_18
0x400070e	    0x4c8bbb58bcff	           mov r15, qword [rbx - 0x43a8]	       338	intel_fbc.c	FUNCTION_16	ELSE_2	IF_8	CALL_18
0x4000715	    0x488b8338bcff	           mov rax, qword [rbx - 0x43c8]	       338	intel_fbc.c	FUNCTION_16	ELSE_2	IF_8	CALL_18
0x400071c	    0x8d3495b02004	              lea esi, [rdx*4 + 0x420b0]	       338	intel_fbc.c	FUNCTION_16	ELSE_2	IF_8	CALL_18
0x4000723	      0xba01000000	                              mov edx, 1	       338	intel_fbc.c	FUNCTION_16	ELSE_2	IF_8	CALL_18
0x4000728	      0xe800000000	                          call 0x400072d	       338	intel_fbc.c	FUNCTION_16	ELSE_2	IF_8	CALL_18
0x400072d	          0x8b53c8	             mov edx, dword [rbx - 0x38]	       338	intel_fbc.c	FUNCTION_16	ELSE_2	IF_8	CALL_18
0x4000730	       0xd00004000	                        or eax, 0x400000	       338	intel_fbc.c	FUNCTION_16	ELSE_2	IF_8	CALL_18
0x4000735	      0xb901000000	                              mov ecx, 1	       338	intel_fbc.c	FUNCTION_16	ELSE_2	IF_8	CALL_18
0x400073a	          0x4c89ef	                            mov rdi, r13	       338	intel_fbc.c	FUNCTION_16	ELSE_2	IF_8	CALL_18
0x400073d	    0x8d3495b02004	              lea esi, [rdx*4 + 0x420b0]	       338	intel_fbc.c	FUNCTION_16	ELSE_2	IF_8	CALL_18
0x4000744	            0x89c2	                            mov edx, eax	       338	intel_fbc.c	FUNCTION_16	ELSE_2	IF_8	CALL_18
0x4000746	      0xe800000000	                          call 0x400074b	       338	intel_fbc.c	FUNCTION_16	ELSE_2	IF_8	CALL_18
0x400074b	      0xe9b5000000	                           jmp 0x4000805	       338	intel_fbc.c	FUNCTION_16	ELSE_2	IF_8	CALL_18
0x4000750	          0x8d423f	                   lea eax, [rdx + 0x3f]	       133	intel_fbc.c	FUNCTION_7	ELSE_1
0x4000753	            0x85d2	                           test edx, edx	       133	intel_fbc.c	FUNCTION_7	ELSE_1
0x4000755	           0xf48d0	                          cmovs edx, eax	       133	intel_fbc.c	FUNCTION_7	ELSE_1
0x4000758	          0xc1fa06	                              sar edx, 6	       133	intel_fbc.c	FUNCTION_7	ELSE_1
0x400075b	        0x448d7aff	                     lea r15d, [rdx - 1]	       133	intel_fbc.c	FUNCTION_7	ELSE_1
0x400075f	      0xe964fdffff	                           jmp 0x40004c8	       133	intel_fbc.c	FUNCTION_7	ELSE_1
0x4000764	        0x488b43d8	             mov rax, qword [rbx - 0x28]	       218	intel_fbc.c	FUNCTION_13	IF_1
0x4000768	          0x8b6bcc	             mov ebp, dword [rbx - 0x34]	       217	intel_fbc.c	FUNCTION_13	CALL_1
0x400076b	          0xc1e51e	                           shl ebp, 0x1e	       217	intel_fbc.c	FUNCTION_13	CALL_1
0x400076e	        0x80780602	                   cmp byte [rax + 6], 2	       219	intel_fbc.c	FUNCTION_13	IF_1
0x4000772	           0xf94c0	                                 sete al	       219	intel_fbc.c	FUNCTION_13	IF_1
0x4000775	           0xfb6c0	                           movzx eax, al	       219	intel_fbc.c	FUNCTION_13	IF_1
0x4000778	     0x38388feffff	            add eax, dword [rbx - 0x178]	       219	intel_fbc.c	FUNCTION_13	IF_1
0x400077e	          0x83f802	                              cmp eax, 2	       221	intel_fbc.c	FUNCTION_13	SWITCH_1
0x4000781	     0xf8437010000	                            je 0x40008be	       221	intel_fbc.c	FUNCTION_13	SWITCH_1
0x4000787	            0x7c0b	                            jl 0x4000794	       221	intel_fbc.c	FUNCTION_13	SWITCH_1
0x4000789	            0x89ea	                            mov edx, ebp	       224	intel_fbc.c	FUNCTION_13	SWITCH_1
0x400078b	          0x80ca80	                             or dl, 0x80	       224	intel_fbc.c	FUNCTION_13	SWITCH_1
0x400078e	          0x83f804	                              cmp eax, 4	       224	intel_fbc.c	FUNCTION_13	SWITCH_1
0x4000791	           0xf4eea	                         cmovle ebp, edx	       224	intel_fbc.c	FUNCTION_13	SWITCH_1
0x4000794	        0xf643c001	               test byte [rbx - 0x40], 1	       234	intel_fbc.c	FUNCTION_13	IF_2
0x4000798	     0xf849d010000	                            je 0x400093b	       234	intel_fbc.c	FUNCTION_13	IF_2
0x400079e	     0xfb7839abaff	          movzx eax, word [rbx - 0x4566]	       236	intel_fbc.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x40007a5	    0x81cd00000020	                      or ebp, 0x20000000	       235	intel_fbc.c	FUNCTION_13	IF_2
0x40007ab	            0xa810	                           test al, 0x10	       236	intel_fbc.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x40007ad	            0x740e	                            je 0x40007bd	       236	intel_fbc.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x40007af	        0x488b53b8	             mov rdx, qword [rbx - 0x48]	       237	intel_fbc.c	FUNCTION_13	IF_2	IF_3
0x40007b3	    0x488b92b00000	            mov rdx, qword [rdx + 0xb0] 	       237	intel_fbc.c	FUNCTION_13	IF_2	IF_3
0x40007ba	           0xb6a24	              or ebp, dword [rdx + 0x24]	       237	intel_fbc.c	FUNCTION_13	IF_2	IF_3
0x40007bd	            0xa820	                           test al, 0x20	       238	intel_fbc.c	FUNCTION_13	IF_2	IF_4	CALL_3
0x40007bf	     0xf8504020000	                           jne 0x40009c9	       238	intel_fbc.c	FUNCTION_13	IF_2	IF_4	CALL_3
0x40007c5	    0x488b8358bcff	           mov rax, qword [rbx - 0x43a8]	       252	intel_fbc.c	FUNCTION_13	CALL_9
0x40007cc	          0x8b53d0	             mov edx, dword [rbx - 0x30]	       252	intel_fbc.c	FUNCTION_13	CALL_9
0x40007cf	      0xb901000000	                              mov ecx, 1	       252	intel_fbc.c	FUNCTION_13	CALL_9
0x40007d4	      0xbe18320400	                        mov esi, 0x43218	       252	intel_fbc.c	FUNCTION_13	CALL_9
0x40007d9	          0x4c89ef	                            mov rdi, r13	       252	intel_fbc.c	FUNCTION_13	CALL_9
0x40007dc	      0xe800000000	                          call 0x40007e1	       252	intel_fbc.c	FUNCTION_13	CALL_9
0x40007e1	        0x488b53b8	             mov rdx, qword [rbx - 0x48]	       252	intel_fbc.c	FUNCTION_13	CALL_9
0x40007e5	    0x488b8358bcff	           mov rax, qword [rbx - 0x43a8]	       253	intel_fbc.c	FUNCTION_13	CALL_10
0x40007ec	      0xb901000000	                              mov ecx, 1	       253	intel_fbc.c	FUNCTION_13	CALL_10
0x40007f1	      0xbe28210000	                         mov esi, 0x2128	       253	intel_fbc.c	FUNCTION_13	CALL_10
0x40007f6	          0x4c89ef	                            mov rdi, r13	       253	intel_fbc.c	FUNCTION_13	CALL_10
0x40007f9	        0x488b5208	                mov rdx, qword [rdx + 8]	       253	intel_fbc.c	FUNCTION_13	CALL_10
0x40007fd	          0x83ca01	                               or edx, 1	       253	intel_fbc.c	FUNCTION_13	CALL_10
0x4000800	      0xe800000000	                          call 0x4000805	       253	intel_fbc.c	FUNCTION_13	CALL_10
0x4000805	            0x89ea	                            mov edx, ebp	       256	intel_fbc.c	FUNCTION_13	CALL_12
0x4000807	    0x488b8358bcff	           mov rax, qword [rbx - 0x43a8]	       256	intel_fbc.c	FUNCTION_13	CALL_12
0x400080e	          0x4c89ef	                            mov rdi, r13	       256	intel_fbc.c	FUNCTION_13	CALL_12
0x4000811	    0x81ca00000080	                      or edx, 0x80000000	       256	intel_fbc.c	FUNCTION_13	CALL_12
0x4000817	      0xb901000000	                              mov ecx, 1	       256	intel_fbc.c	FUNCTION_13	CALL_12
0x400081c	      0xbe08320400	                        mov esi, 0x43208	       256	intel_fbc.c	FUNCTION_13	CALL_12
0x4000821	      0xe800000000	                          call 0x4000826	       256	intel_fbc.c	FUNCTION_13	CALL_12
0x4000826	    0x488b8358bcff	           mov rax, qword [rbx - 0x43a8]	       207	intel_fbc.c	FUNCTION_12	CALL_1
0x400082d	          0x4c89ef	                            mov rdi, r13	       207	intel_fbc.c	FUNCTION_12	CALL_1
0x4000830	      0xb901000000	                              mov ecx, 1	       207	intel_fbc.c	FUNCTION_12	CALL_1
0x4000835	      0xba04000000	                              mov edx, 4	       207	intel_fbc.c	FUNCTION_12	CALL_1
0x400083a	      0xbe80030500	                        mov esi, 0x50380	       207	intel_fbc.c	FUNCTION_12	CALL_1
0x400083f	      0xe800000000	                          call 0x4000844	       207	intel_fbc.c	FUNCTION_12	CALL_1
0x4000844	    0x488b8338bcff	           mov rax, qword [rbx - 0x43c8]	       208	intel_fbc.c	FUNCTION_12	CALL_2
0x400084b	            0x31d2	                            xor edx, edx	       208	intel_fbc.c	FUNCTION_12	CALL_2
0x400084d	      0xbe80030500	                        mov esi, 0x50380	       208	intel_fbc.c	FUNCTION_12	CALL_2
0x4000852	          0x4c89ef	                            mov rdi, r13	       208	intel_fbc.c	FUNCTION_12	CALL_2
0x4000855	      0xe800000000	                          call 0x400085a	       208	intel_fbc.c	FUNCTION_12	CALL_2
0x400085a	      0xe903fdffff	                           jmp 0x4000562	       208	intel_fbc.c	FUNCTION_12	CALL_2
0x400085f	        0x488b53b8	             mov rdx, qword [rbx - 0x48]	       319	intel_fbc.c	FUNCTION_16	IF_5	CALL_8
0x4000863	    0x488b8358bcff	           mov rax, qword [rbx - 0x43a8]	       319	intel_fbc.c	FUNCTION_16	IF_5	CALL_8
0x400086a	          0x4c89ef	                            mov rdi, r13	       319	intel_fbc.c	FUNCTION_16	IF_5	CALL_8
0x400086d	      0xb901000000	                              mov ecx, 1	       319	intel_fbc.c	FUNCTION_16	IF_5	CALL_8
0x4000872	      0xbe00011000	                       mov esi, 0x100100	       319	intel_fbc.c	FUNCTION_16	IF_5	CALL_8
0x4000877	    0x81cd00000010	                      or ebp, 0x10000000	       318	intel_fbc.c	FUNCTION_16	IF_5
0x400087d	    0x488b92b00000	            mov rdx, qword [rdx + 0xb0] 	       319	intel_fbc.c	FUNCTION_16	IF_5	CALL_8
0x4000884	          0x8b5224	            mov edx, dword [rdx + 0x24] 	       319	intel_fbc.c	FUNCTION_16	IF_5	CALL_8
0x4000887	    0x81ca00000020	                      or edx, 0x20000000	       319	intel_fbc.c	FUNCTION_16	IF_5	CALL_8
0x400088d	      0xe800000000	                          call 0x4000892	       319	intel_fbc.c	FUNCTION_16	IF_5	CALL_8
0x4000892	    0x488b8358bcff	           mov rax, qword [rbx - 0x43a8]	       322	intel_fbc.c	FUNCTION_16	IF_5	CALL_9
0x4000899	          0x8b53d0	             mov edx, dword [rbx - 0x30]	       322	intel_fbc.c	FUNCTION_16	IF_5	CALL_9
0x400089c	      0xb901000000	                              mov ecx, 1	       322	intel_fbc.c	FUNCTION_16	IF_5	CALL_9
0x40008a1	      0xbe04011000	                       mov esi, 0x100104	       322	intel_fbc.c	FUNCTION_16	IF_5	CALL_9
0x40008a6	          0x4c89ef	                            mov rdi, r13	       322	intel_fbc.c	FUNCTION_16	IF_5	CALL_9
0x40008a9	      0xe800000000	                          call 0x40008ae	       322	intel_fbc.c	FUNCTION_16	IF_5	CALL_9
0x40008ae	      0xe92afeffff	                           jmp 0x40006dd	       322	intel_fbc.c	FUNCTION_16	IF_5	CALL_9
0x40008b3	          0x8b6bcc	             mov ebp, dword [rbx - 0x34]	       299	intel_fbc.c	FUNCTION_16	CALL_7
0x40008b6	          0xc1e51d	                           shl ebp, 0x1d	       299	intel_fbc.c	FUNCTION_16	CALL_7
0x40008b9	      0xe9b7fdffff	                           jmp 0x4000675	       299	intel_fbc.c	FUNCTION_16	CALL_7
0x40008be	          0x83cd40	                            or ebp, 0x40	       227	intel_fbc.c	FUNCTION_13	SWITCH_1
0x40008c1	      0xe9cefeffff	                           jmp 0x4000794	       227	intel_fbc.c	FUNCTION_13	SWITCH_1
0x40008c6	          0x8b53cc	             mov edx, dword [rbx - 0x34]	       144	intel_fbc.c	FUNCTION_7	IF_3	CALL_5
0x40008c9	    0x488b8358bcff	           mov rax, qword [rbx - 0x43a8]	       145	intel_fbc.c	FUNCTION_7	IF_3	CALL_6
0x40008d0	          0x4c89ef	                            mov rdi, r13	       145	intel_fbc.c	FUNCTION_7	IF_3	CALL_6
0x40008d3	      0xb901000000	                              mov ecx, 1	       145	intel_fbc.c	FUNCTION_7	IF_3	CALL_6
0x40008d8	      0xbe14320000	                         mov esi, 0x3214	       145	intel_fbc.c	FUNCTION_7	IF_3	CALL_6
0x40008dd	          0x83ca02	                               or edx, 2	       144	intel_fbc.c	FUNCTION_7	IF_3	CALL_5
0x40008e0	      0xe800000000	                          call 0x40008e5	       145	intel_fbc.c	FUNCTION_7	IF_3	CALL_6
0x40008e5	    0x488b8358bcff	           mov rax, qword [rbx - 0x43a8]	       146	intel_fbc.c	FUNCTION_7	IF_3	CALL_7
0x40008ec	          0x8b53d0	             mov edx, dword [rbx - 0x30]	       146	intel_fbc.c	FUNCTION_7	IF_3	CALL_7
0x40008ef	      0xb901000000	                              mov ecx, 1	       146	intel_fbc.c	FUNCTION_7	IF_3	CALL_7
0x40008f4	      0xbe18320000	                         mov esi, 0x3218	       146	intel_fbc.c	FUNCTION_7	IF_3	CALL_7
0x40008f9	          0x4c89ef	                            mov rdi, r13	       146	intel_fbc.c	FUNCTION_7	IF_3	CALL_7
0x40008fc	      0xe800000000	                          call 0x4000901	       146	intel_fbc.c	FUNCTION_7	IF_3	CALL_7
0x4000901	      0xe9f7fbffff	                           jmp 0x40004fd	       146	intel_fbc.c	FUNCTION_7	IF_3	CALL_7
0x4000906	        0x488b43b8	             mov rax, qword [rbx - 0x48]	       177	intel_fbc.c	FUNCTION_9	ELSE_1	IF_2
0x400090a	          0x8b53d0	             mov edx, dword [rbx - 0x30]	       178	intel_fbc.c	FUNCTION_9	ELSE_1	IF_2	CALL_2
0x400090d	      0xb901000000	                              mov ecx, 1	       178	intel_fbc.c	FUNCTION_9	ELSE_1	IF_2	CALL_2
0x4000912	      0xbe18320000	                         mov esi, 0x3218	       178	intel_fbc.c	FUNCTION_9	ELSE_1	IF_2	CALL_2
0x4000917	          0x4c89ef	                            mov rdi, r13	       178	intel_fbc.c	FUNCTION_9	ELSE_1	IF_2	CALL_2
0x400091a	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       177	intel_fbc.c	FUNCTION_9	ELSE_1	IF_2
0x4000921	           0xb6824	              or ebp, dword [rax + 0x24]	       177	intel_fbc.c	FUNCTION_9	ELSE_1	IF_2
0x4000924	    0x488b8358bcff	           mov rax, qword [rbx - 0x43a8]	       178	intel_fbc.c	FUNCTION_9	ELSE_1	IF_2	CALL_2
0x400092b	    0x81cd00000020	                      or ebp, 0x20000000	       177	intel_fbc.c	FUNCTION_9	ELSE_1	IF_2
0x4000931	      0xe800000000	                          call 0x4000936	       178	intel_fbc.c	FUNCTION_9	ELSE_1	IF_2	CALL_2
0x4000936	      0xe98cfcffff	                           jmp 0x40005c7	       178	intel_fbc.c	FUNCTION_9	ELSE_1	IF_2	CALL_2
0x400093b	    0xf6839abaffff	         test byte [rbx - 0x4566], 0x20 	       246	intel_fbc.c	FUNCTION_13	ELSE_1	IF_5	CALL_6
0x4000942	     0xf847dfeffff	                            je 0x40007c5	       246	intel_fbc.c	FUNCTION_13	ELSE_1	IF_5	CALL_6
0x4000948	    0x488b8358bcff	           mov rax, qword [rbx - 0x43a8]	       247	intel_fbc.c	FUNCTION_13	ELSE_1	IF_5	CALL_7
0x400094f	            0x31d2	                            xor edx, edx	       247	intel_fbc.c	FUNCTION_13	ELSE_1	IF_5	CALL_7
0x4000951	          0x4c89ef	                            mov rdi, r13	       247	intel_fbc.c	FUNCTION_13	ELSE_1	IF_5	CALL_7
0x4000954	      0xb901000000	                              mov ecx, 1	       247	intel_fbc.c	FUNCTION_13	ELSE_1	IF_5	CALL_7
0x4000959	      0xbe00011000	                       mov esi, 0x100100	       247	intel_fbc.c	FUNCTION_13	ELSE_1	IF_5	CALL_7
0x400095e	      0xe800000000	                          call 0x4000963	       247	intel_fbc.c	FUNCTION_13	ELSE_1	IF_5	CALL_7
0x4000963	    0x488b8358bcff	           mov rax, qword [rbx - 0x43a8]	       248	intel_fbc.c	FUNCTION_13	ELSE_1	IF_5	CALL_8
0x400096a	      0xb901000000	                              mov ecx, 1	       248	intel_fbc.c	FUNCTION_13	ELSE_1	IF_5	CALL_8
0x400096f	            0x31d2	                            xor edx, edx	       248	intel_fbc.c	FUNCTION_13	ELSE_1	IF_5	CALL_8
0x4000971	      0xbe04011000	                       mov esi, 0x100104	       248	intel_fbc.c	FUNCTION_13	ELSE_1	IF_5	CALL_8
0x4000976	          0x4c89ef	                            mov rdi, r13	       248	intel_fbc.c	FUNCTION_13	ELSE_1	IF_5	CALL_8
0x4000979	      0xe800000000	                          call 0x400097e	       248	intel_fbc.c	FUNCTION_13	ELSE_1	IF_5	CALL_8
0x400097e	      0xe942feffff	                           jmp 0x40007c5	       248	intel_fbc.c	FUNCTION_13	ELSE_1	IF_5	CALL_8
0x4000983	          0x83cd40	                            or ebp, 0x40	       310	intel_fbc.c	FUNCTION_16	SWITCH_1
0x4000986	      0xe912fdffff	                           jmp 0x400069d	       310	intel_fbc.c	FUNCTION_16	SWITCH_1
0x400098b	          0x4c89ef	                            mov rdi, r13	       333	intel_fbc.c	FUNCTION_16	IF_7	CALL_13
0x400098e	    0x4c8bbb58bcff	           mov r15, qword [rbx - 0x43a8]	       333	intel_fbc.c	FUNCTION_16	IF_7	CALL_13
0x4000995	    0x488b8338bcff	           mov rax, qword [rbx - 0x43c8]	       333	intel_fbc.c	FUNCTION_16	IF_7	CALL_13
0x400099c	      0xba01000000	                              mov edx, 1	       333	intel_fbc.c	FUNCTION_16	IF_7	CALL_13
0x40009a1	      0xbe00200400	                        mov esi, 0x42000	       333	intel_fbc.c	FUNCTION_16	IF_7	CALL_13
0x40009a6	      0xe800000000	                          call 0x40009ab	       333	intel_fbc.c	FUNCTION_16	IF_7	CALL_13
0x40009ab	       0xd00004000	                        or eax, 0x400000	       333	intel_fbc.c	FUNCTION_16	IF_7	CALL_13
0x40009b0	      0xb901000000	                              mov ecx, 1	       333	intel_fbc.c	FUNCTION_16	IF_7	CALL_13
0x40009b5	      0xbe00200400	                        mov esi, 0x42000	       333	intel_fbc.c	FUNCTION_16	IF_7	CALL_13
0x40009ba	            0x89c2	                            mov edx, eax	       333	intel_fbc.c	FUNCTION_16	IF_7	CALL_13
0x40009bc	          0x4c89ef	                            mov rdi, r13	       333	intel_fbc.c	FUNCTION_16	IF_7	CALL_13
0x40009bf	      0xe800000000	                          call 0x40009c4	       333	intel_fbc.c	FUNCTION_16	IF_7	CALL_13
0x40009c4	      0xe93cfeffff	                           jmp 0x4000805	       333	intel_fbc.c	FUNCTION_16	IF_7	CALL_13
0x40009c9	        0x488b53b8	             mov rdx, qword [rbx - 0x48]	       239	intel_fbc.c	FUNCTION_13	IF_2	IF_4	CALL_4
0x40009cd	    0x488b8358bcff	           mov rax, qword [rbx - 0x43a8]	       239	intel_fbc.c	FUNCTION_13	IF_2	IF_4	CALL_4
0x40009d4	          0x4c89ef	                            mov rdi, r13	       239	intel_fbc.c	FUNCTION_13	IF_2	IF_4	CALL_4
0x40009d7	      0xb901000000	                              mov ecx, 1	       239	intel_fbc.c	FUNCTION_13	IF_2	IF_4	CALL_4
0x40009dc	      0xbe00011000	                       mov esi, 0x100100	       239	intel_fbc.c	FUNCTION_13	IF_2	IF_4	CALL_4
0x40009e1	    0x488b92b00000	            mov rdx, qword [rdx + 0xb0] 	       239	intel_fbc.c	FUNCTION_13	IF_2	IF_4	CALL_4
0x40009e8	          0x8b5224	            mov edx, dword [rdx + 0x24] 	       239	intel_fbc.c	FUNCTION_13	IF_2	IF_4	CALL_4
0x40009eb	    0x81ca00000020	                      or edx, 0x20000000	       239	intel_fbc.c	FUNCTION_13	IF_2	IF_4	CALL_4
0x40009f1	      0xe800000000	                          call 0x40009f6	       239	intel_fbc.c	FUNCTION_13	IF_2	IF_4	CALL_4
0x40009f6	    0x488b8358bcff	           mov rax, qword [rbx - 0x43a8]	       242	intel_fbc.c	FUNCTION_13	IF_2	IF_4	CALL_5
0x40009fd	          0x8b53d0	             mov edx, dword [rbx - 0x30]	       242	intel_fbc.c	FUNCTION_13	IF_2	IF_4	CALL_5
0x4000a00	      0xb901000000	                              mov ecx, 1	       242	intel_fbc.c	FUNCTION_13	IF_2	IF_4	CALL_5
0x4000a05	      0xbe04011000	                       mov esi, 0x100104	       242	intel_fbc.c	FUNCTION_13	IF_2	IF_4	CALL_5
0x4000a0a	          0x4c89ef	                            mov rdi, r13	       242	intel_fbc.c	FUNCTION_13	IF_2	IF_4	CALL_5
0x4000a0d	      0xe800000000	                          call 0x4000a12	       242	intel_fbc.c	FUNCTION_13	IF_2	IF_4	CALL_5
0x4000a12	      0xe9aefdffff	                           jmp 0x40007c5	       242	intel_fbc.c	FUNCTION_13	IF_2	IF_4	CALL_5
0x4000a17	      0xe800000000	                          call 0x4000a1c	       456	intel_fbc.c	FUNCTION_21
__intel_fbc_cleanup_cfb	WHILE,0:IF,2:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:CALL,4	19
0x4000040	              0x53	                                push rbx	       637	intel_fbc.c	FUNCTION_27
0x4000041	    0xf687f84a0000	            test byte [rdi + 0x4af8], 1 	       640	intel_fbc.c	FUNCTION_27	IF_1	CALL_1
0x4000048	          0x4889fb	                            mov rbx, rdi	       637	intel_fbc.c	FUNCTION_27
0x400004b	            0x7521	                           jne 0x400006e	       640	intel_fbc.c	FUNCTION_27	IF_1	CALL_1
0x400004d	    0x488bb3004b00	          mov rsi, qword [rbx + 0x4b00] 	       643	intel_fbc.c	FUNCTION_27	IF_2
0x4000054	          0x4885f6	                           test rsi, rsi	       643	intel_fbc.c	FUNCTION_27	IF_2
0x4000057	            0x742d	                            je 0x4000086	       643	intel_fbc.c	FUNCTION_27	IF_2
0x4000059	          0x4889df	                            mov rdi, rbx	       644	intel_fbc.c	FUNCTION_27	IF_2	CALL_3
0x400005c	      0xe800000000	                          call 0x4000061	       644	intel_fbc.c	FUNCTION_27	IF_2	CALL_3
0x4000061	    0x488bbb004b00	          mov rdi, qword [rbx + 0x4b00] 	       645	intel_fbc.c	FUNCTION_27	IF_2	CALL_4
0x4000068	              0x5b	                                 pop rbx	       647	intel_fbc.c	FUNCTION_27
0x4000069	      0xe900000000	                           jmp 0x400006e	       645	intel_fbc.c	FUNCTION_27	IF_2	CALL_4
0x400006e	    0x488db7604a00	                 lea rsi, [rdi + 0x4a60]	       641	intel_fbc.c	FUNCTION_27	CALL_2
0x4000075	      0xe800000000	                          call 0x400007a	       641	intel_fbc.c	FUNCTION_27	CALL_2
0x400007a	    0x488bb3004b00	          mov rsi, qword [rbx + 0x4b00] 	       643	intel_fbc.c	FUNCTION_27	IF_2
0x4000081	          0x4885f6	                           test rsi, rsi	       643	intel_fbc.c	FUNCTION_27	IF_2
0x4000084	            0x75d3	                           jne 0x4000059	       643	intel_fbc.c	FUNCTION_27	IF_2
0x4000086	              0x5b	                                 pop rbx	       647	intel_fbc.c	FUNCTION_27
0x4000087	              0xc3	                                     ret	       647	intel_fbc.c	FUNCTION_27
intel_fbc_cleanup_cfb	WHILE,0:IF,1:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:CALL,4	15
0x4001170	    0xf68778060000	              test byte [rdi + 0x678], 2	       653	intel_fbc.c	FUNCTION_28	IF_1	CALL_1
0x4001177	            0x7502	                           jne 0x400117b	       653	intel_fbc.c	FUNCTION_28	IF_1	CALL_1
0x4001179	            0xf3c3	                                     ret	       653	intel_fbc.c	FUNCTION_28	IF_1	CALL_1
0x400117b	              0x55	                                push rbp	       650	intel_fbc.c	FUNCTION_28
0x400117c	    0x488daf284a00	                 lea rbp, [rdi + 0x4a28]	       656	intel_fbc.c	FUNCTION_28	CALL_2
0x4001183	              0x53	                                push rbx	       650	intel_fbc.c	FUNCTION_28
0x4001184	          0x4889fb	                            mov rbx, rdi	       650	intel_fbc.c	FUNCTION_28
0x4001187	          0x4889ef	                            mov rdi, rbp	       656	intel_fbc.c	FUNCTION_28	CALL_2
0x400118a	      0xe800000000	                          call 0x400118f	       656	intel_fbc.c	FUNCTION_28	CALL_2
0x400118f	          0x4889df	                            mov rdi, rbx	       657	intel_fbc.c	FUNCTION_28	CALL_3
0x4001192	      0xe8a9eeffff	        call sym.__intel_fbc_cleanup_cfb	       657	intel_fbc.c	FUNCTION_28	CALL_3
0x4001197	          0x4889ef	                            mov rdi, rbp	       658	intel_fbc.c	FUNCTION_28	CALL_4
0x400119a	              0x5b	                                 pop rbx	       659	intel_fbc.c	FUNCTION_28
0x400119b	              0x5d	                                 pop rbp	       659	intel_fbc.c	FUNCTION_28
0x400119c	      0xe900000000	                           jmp 0x40011a1	       658	intel_fbc.c	FUNCTION_28	CALL_4
intel_fbc_choose_crtc	WHILE,0:IF,3:functions,1:ELSE,0:SWITCH,0:FOR,0:DO,0:CALL,4	76
0x4001420	            0x4154	                                push r12	      1110	intel_fbc.c	FUNCTION_44
0x4001422	              0x55	                                push rbp	      1110	intel_fbc.c	FUNCTION_44
0x4001423	    0x488daf284a00	                 lea rbp, [rdi + 0x4a28]	      1117	intel_fbc.c	FUNCTION_44	CALL_1
0x400142a	              0x53	                                push rbx	      1110	intel_fbc.c	FUNCTION_44
0x400142b	          0x4889fb	                            mov rbx, rdi	      1110	intel_fbc.c	FUNCTION_44
0x400142e	          0x4989f4	                            mov r12, rsi	      1110	intel_fbc.c	FUNCTION_44
0x4001431	          0x4889ef	                            mov rdi, rbp	      1117	intel_fbc.c	FUNCTION_44	CALL_1
0x4001434	      0xe800000000	                          call 0x4001439	      1117	intel_fbc.c	FUNCTION_44	CALL_1
0x4001439	    0x488b83584a00	          mov rax, qword [rbx + 0x4a58] 	      1120	intel_fbc.c	FUNCTION_44	IF_1
0x4001440	          0x4885c0	                           test rax, rax	      1120	intel_fbc.c	FUNCTION_44	IF_1
0x4001443	            0x741a	                            je 0x400145f	      1120	intel_fbc.c	FUNCTION_44	IF_1
0x4001445	    0x8b8090000000	            mov eax, dword [rax + 0x90] 	       431	drm_atomic.h	FUNCTION_60	CALL_1
0x400144b	        0x488d0440	                  lea rax, [rax + rax*2]	       431	drm_atomic.h	FUNCTION_60	CALL_1
0x400144f	        0x48c1e004	                              shl rax, 4	       431	drm_atomic.h	FUNCTION_60	CALL_1
0x4001453	      0x4903442420	             add rax, qword [r12 + 0x20]	       431	drm_atomic.h	FUNCTION_60	CALL_1
0x4001458	      0x4883781800	               cmp qword [rax + 0x18], 0	      1120	intel_fbc.c	FUNCTION_44	IF_1
0x400145d	            0x741e	                            je 0x400147d	      1120	intel_fbc.c	FUNCTION_44	IF_1
0x400145f	    0x80bb600b0000	               cmp byte [rbx + 0xb60], 0	       880	intel_fbc.c	FUNCTION_34	IF_1	CALL_1
0x4001466	            0x7521	                           jne 0x4001489	       880	intel_fbc.c	FUNCTION_34	IF_1	CALL_1
0x4001468	    0x8b0500000000	            mov eax, dword [0x0400146e] 	       885	intel_fbc.c	FUNCTION_34	IF_2
0x400146e	            0x85c0	                           test eax, eax	       885	intel_fbc.c	FUNCTION_34	IF_2
0x4001470	            0x752e	                           jne 0x40014a0	       885	intel_fbc.c	FUNCTION_34	IF_2
0x4001472	    0x48c783e04b00	            mov qword [rbx + 0x4be0], 0 	       886	intel_fbc.c	FUNCTION_34	IF_2
0x400147d	              0x5b	                                 pop rbx	      1153	intel_fbc.c	FUNCTION_44
0x400147e	          0x4889ef	                            mov rdi, rbp	      1152	intel_fbc.c	FUNCTION_44	CALL_4
0x4001481	              0x5d	                                 pop rbp	      1153	intel_fbc.c	FUNCTION_44
0x4001482	            0x415c	                                 pop r12	      1153	intel_fbc.c	FUNCTION_44
0x4001484	      0xe900000000	                           jmp 0x4001489	      1152	intel_fbc.c	FUNCTION_44	CALL_4
0x4001489	    0x48c783e04b00	            mov qword [rbx + 0x4be0], 0 	       881	intel_fbc.c	FUNCTION_34	IF_1
0x4001494	          0x4889ef	                            mov rdi, rbp	      1152	intel_fbc.c	FUNCTION_44	CALL_4
0x4001497	              0x5b	                                 pop rbx	      1153	intel_fbc.c	FUNCTION_44
0x4001498	              0x5d	                                 pop rbp	      1153	intel_fbc.c	FUNCTION_44
0x4001499	            0x415c	                                 pop r12	      1153	intel_fbc.c	FUNCTION_44
0x400149b	      0xe900000000	                           jmp 0x40014a0	      1152	intel_fbc.c	FUNCTION_44	CALL_4
0x40014a0	    0x80bb0b4b0000	              cmp byte [rbx + 0x4b0b], 0	       890	intel_fbc.c	FUNCTION_34	IF_3
0x40014a7	            0x756b	                           jne 0x4001514	       890	intel_fbc.c	FUNCTION_34	IF_3
0x40014a9	      0x498b442408	                mov rax, qword [r12 + 8]	      1131	intel_fbc.c	FUNCTION_44	FUNCTION_1
0x40014ae	    0x8b9048030000	           mov edx, dword [rax + 0x348] 	      1131	intel_fbc.c	FUNCTION_44	FUNCTION_1
0x40014b4	            0x85d2	                           test edx, edx	      1131	intel_fbc.c	FUNCTION_44	FUNCTION_1
0x40014b6	            0x7e7c	                           jle 0x4001534	      1131	intel_fbc.c	FUNCTION_44	FUNCTION_1
0x40014b8	          0x8d7aff	                      lea edi, [rdx - 1]	      1131	intel_fbc.c	FUNCTION_44	FUNCTION_1
0x40014bb	      0x498b442418	            mov rax, qword [r12 + 0x18] 	      1131	intel_fbc.c	FUNCTION_44	FUNCTION_1
0x40014c0	        0x4883c701	                              add rdi, 1	      1131	intel_fbc.c	FUNCTION_44	FUNCTION_1
0x40014c4	        0x48c1e705	                              shl rdi, 5	      1131	intel_fbc.c	FUNCTION_44	FUNCTION_1
0x40014c8	          0x4801c7	                            add rdi, rax	      1131	intel_fbc.c	FUNCTION_44	FUNCTION_1
0x40014cb	          0x488b10	                    mov rdx, qword [rax]	      1131	intel_fbc.c	FUNCTION_44	FUNCTION_1
0x40014ce	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      1131	intel_fbc.c	FUNCTION_44	FUNCTION_1
0x40014d2	          0x4885d2	                           test rdx, rdx	      1131	intel_fbc.c	FUNCTION_44	FUNCTION_1
0x40014d5	            0x7454	                            je 0x400152b	      1131	intel_fbc.c	FUNCTION_44	FUNCTION_1
0x40014d7	    0x80ba8d020000	               cmp byte [rdx + 0x28d], 0	      1135	intel_fbc.c	FUNCTION_44	FUNCTION_1	IF_1
0x40014de	            0x744b	                            je 0x400152b	      1135	intel_fbc.c	FUNCTION_44	FUNCTION_1	IF_1
0x40014e0	        0x80797400	                cmp byte [rcx + 0x74], 0	      1138	intel_fbc.c	FUNCTION_44	FUNCTION_1	IF_2
0x40014e4	            0x7445	                            je 0x400152b	      1138	intel_fbc.c	FUNCTION_44	FUNCTION_1	IF_2
0x40014e6	        0x488b4108	                mov rax, qword [rcx + 8]	      1138	intel_fbc.c	FUNCTION_44	FUNCTION_1	IF_2
0x40014ea	          0x4889ef	                            mov rdi, rbp	      1152	intel_fbc.c	FUNCTION_44	CALL_4
0x40014ed	    0x8b8090000000	            mov eax, dword [rax + 0x90] 	       431	drm_atomic.h	FUNCTION_60	CALL_1
0x40014f3	        0x488d0440	                  lea rax, [rax + rax*2]	       431	drm_atomic.h	FUNCTION_60	CALL_1
0x40014f7	        0x48c1e004	                              shl rax, 4	       431	drm_atomic.h	FUNCTION_60	CALL_1
0x40014fb	      0x4903442420	             add rax, qword [r12 + 0x20]	       431	drm_atomic.h	FUNCTION_60	CALL_1
0x4001500	        0x488b4018	            mov rax, qword [rax + 0x18] 	       431	drm_atomic.h	FUNCTION_60	CALL_1
0x4001504	    0xc6804a030000	               mov byte [rax + 0x34a], 1	      1143	intel_fbc.c	FUNCTION_44	FUNCTION_1
0x400150b	              0x5b	                                 pop rbx	      1153	intel_fbc.c	FUNCTION_44
0x400150c	              0x5d	                                 pop rbp	      1153	intel_fbc.c	FUNCTION_44
0x400150d	            0x415c	                                 pop r12	      1153	intel_fbc.c	FUNCTION_44
0x400150f	      0xe900000000	                           jmp 0x4001514	      1152	intel_fbc.c	FUNCTION_44	CALL_4
0x4001514	    0x48c783e04b00	            mov qword [rbx + 0x4be0], 0 	       891	intel_fbc.c	FUNCTION_34	IF_3
0x400151f	          0x4889ef	                            mov rdi, rbp	      1152	intel_fbc.c	FUNCTION_44	CALL_4
0x4001522	              0x5b	                                 pop rbx	      1153	intel_fbc.c	FUNCTION_44
0x4001523	              0x5d	                                 pop rbp	      1153	intel_fbc.c	FUNCTION_44
0x4001524	            0x415c	                                 pop r12	      1153	intel_fbc.c	FUNCTION_44
0x4001526	      0xe900000000	                           jmp 0x400152b	      1152	intel_fbc.c	FUNCTION_44	CALL_4
0x400152b	        0x4883c020	                           add rax, 0x20	      1152	intel_fbc.c	FUNCTION_44	CALL_4
0x400152f	          0x4839c7	                            cmp rdi, rax	      1131	intel_fbc.c	FUNCTION_44	FUNCTION_1
0x4001532	            0x7597	                           jne 0x40014cb	      1131	intel_fbc.c	FUNCTION_44	FUNCTION_1
0x4001534	    0x48c783e04b00	            mov qword [rbx + 0x4be0], 0 	      1149	intel_fbc.c	FUNCTION_44	IF_3
0x400153f	      0xe939ffffff	                           jmp 0x400147d	      1149	intel_fbc.c	FUNCTION_44	IF_3
intel_fbc_invalidate	WHILE,0:IF,3:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:CALL,5	35
0x40012d0	    0xf68778060000	              test byte [rdi + 0x678], 2	      1053	intel_fbc.c	ELSE_1	FUNCTION_42	IF_1	CALL_1
0x40012d7	            0x7444	                            je 0x400131d	      1053	intel_fbc.c	ELSE_1	FUNCTION_42	IF_1	CALL_1
0x40012d9	            0x85d2	                           test edx, edx	      1056	intel_fbc.c	ELSE_1	FUNCTION_42	IF_2
0x40012db	            0x7440	                            je 0x400131d	      1056	intel_fbc.c	ELSE_1	FUNCTION_42	IF_2
0x40012dd	          0x83fa03	                              cmp edx, 3	      1056	intel_fbc.c	ELSE_1	FUNCTION_42	IF_2
0x40012e0	            0x743b	                            je 0x400131d	      1056	intel_fbc.c	ELSE_1	FUNCTION_42	IF_2
0x40012e2	            0x4154	                                push r12	      1050	intel_fbc.c	ELSE_1	FUNCTION_42
0x40012e4	    0x4c8da7284a00	                 lea r12, [rdi + 0x4a28]	      1059	intel_fbc.c	ELSE_1	FUNCTION_42	CALL_2
0x40012eb	              0x55	                                push rbp	      1050	intel_fbc.c	ELSE_1	FUNCTION_42
0x40012ec	              0x53	                                push rbx	      1050	intel_fbc.c	ELSE_1	FUNCTION_42
0x40012ed	          0x4889fb	                            mov rbx, rdi	      1050	intel_fbc.c	ELSE_1	FUNCTION_42
0x40012f0	            0x89f5	                            mov ebp, esi	      1050	intel_fbc.c	ELSE_1	FUNCTION_42
0x40012f2	          0x4c89e7	                            mov rdi, r12	      1059	intel_fbc.c	ELSE_1	FUNCTION_42	CALL_2
0x40012f5	      0xe800000000	                          call 0x40012fa	      1059	intel_fbc.c	ELSE_1	FUNCTION_42	CALL_2
0x40012fa	    0x80bb094b0000	              cmp byte [rbx + 0x4b09], 0	      1041	intel_fbc.c	FUNCTION_41	IF_1
0x4001301	            0x751c	                           jne 0x400131f	      1041	intel_fbc.c	FUNCTION_41	IF_1
0x4001303	    0x8bb34c4a0000	          mov esi, dword [rbx + 0x4a4c] 	      1061	intel_fbc.c	ELSE_1	FUNCTION_42	CALL_3
0x4001309	            0x21ee	                            and esi, ebp	      1061	intel_fbc.c	ELSE_1	FUNCTION_42	CALL_3
0x400130b	     0x9b3504a0000	            or dword [rbx + 0x4a50], esi	      1061	intel_fbc.c	ELSE_1	FUNCTION_42	CALL_3
0x4001311	              0x5b	                                 pop rbx	      1067	intel_fbc.c	ELSE_1	FUNCTION_42
0x4001312	          0x4c89e7	                            mov rdi, r12	      1066	intel_fbc.c	ELSE_1	FUNCTION_42	CALL_5
0x4001315	              0x5d	                                 pop rbp	      1067	intel_fbc.c	ELSE_1	FUNCTION_42
0x4001316	            0x415c	                                 pop r12	      1067	intel_fbc.c	ELSE_1	FUNCTION_42
0x4001318	      0xe900000000	                           jmp 0x400131d	      1066	intel_fbc.c	ELSE_1	FUNCTION_42	CALL_5
0x400131d	            0xf3c3	                                     ret	      1066	intel_fbc.c	ELSE_1	FUNCTION_42	CALL_5
0x400131f	    0x488b83584a00	          mov rax, qword [rbx + 0x4a58] 	      1042	intel_fbc.c	FUNCTION_41	CALL_1
0x4001326	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1042	intel_fbc.c	FUNCTION_41	CALL_1
0x400132d	    0x8bb094020000	           mov esi, dword [rax + 0x294] 	      1061	intel_fbc.c	ELSE_1	FUNCTION_42	CALL_3
0x4001333	            0x21ee	                            and esi, ebp	      1061	intel_fbc.c	ELSE_1	FUNCTION_42	CALL_3
0x4001335	     0x9b3504a0000	            or dword [rbx + 0x4a50], esi	      1063	intel_fbc.c	ELSE_1	FUNCTION_42	IF_3
0x400133b	            0x74d4	                            je 0x4001311	      1063	intel_fbc.c	ELSE_1	FUNCTION_42	IF_3
0x400133d	    0x48c7c6000000	                              mov rsi, 0	      1064	intel_fbc.c	ELSE_1	FUNCTION_42	CALL_4
0x4001344	          0x4889df	                            mov rdi, rbx	      1064	intel_fbc.c	ELSE_1	FUNCTION_42	CALL_4
0x4001347	      0xe804efffff	           call sym.intel_fbc_deactivate	      1064	intel_fbc.c	ELSE_1	FUNCTION_42	CALL_4
0x400134c	            0xebc3	                           jmp 0x4001311	      1064	intel_fbc.c	ELSE_1	FUNCTION_42	CALL_4
intel_fbc_init_pipe_state	WHILE,0:IF,2:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:CALL,3	34
0x4001b00	    0x80bf5c060000	               cmp byte [rdi + 0x65c], 3	      1321	intel_fbc.c	FUNCTION_50	IF_1	CALL_1
0x4001b07	            0x776a	                            ja 0x4001b73	      1321	intel_fbc.c	FUNCTION_50	IF_1	CALL_1
0x4001b09	            0x4155	                                push r13	      1317	intel_fbc.c	FUNCTION_50
0x4001b0b	            0x4154	                                push r12	      1317	intel_fbc.c	FUNCTION_50
0x4001b0d	    0x4c8da7680300	                  lea r12, [rdi + 0x368]	      1324	intel_fbc.c	FUNCTION_50	CALL_2
0x4001b14	              0x55	                                push rbp	      1317	intel_fbc.c	FUNCTION_50
0x4001b15	              0x53	                                push rbx	      1317	intel_fbc.c	FUNCTION_50
0x4001b16	    0x488b87680300	           mov rax, qword [rdi + 0x368] 	      1324	intel_fbc.c	FUNCTION_50	CALL_2
0x4001b1d	          0x4939c4	                            cmp r12, rax	      1324	intel_fbc.c	FUNCTION_50	CALL_2
0x4001b20	        0x488d58f0	                   lea rbx, [rax - 0x10]	      1324	intel_fbc.c	FUNCTION_50	CALL_2
0x4001b24	            0x7447	                            je 0x4001b6d	      1324	intel_fbc.c	FUNCTION_50	CALL_2
0x4001b26	          0x4889fd	                            mov rbp, rdi	      1324	intel_fbc.c	FUNCTION_50	CALL_2
0x4001b29	    0x41bd01000000	                             mov r13d, 1	      1327	intel_fbc.c	FUNCTION_50	IF_2
0x4001b2f	          0x4889df	                            mov rdi, rbx	      1325	intel_fbc.c	FUNCTION_50	IF_2	CALL_3
0x4001b32	      0xe800000000	                          call 0x4001b37	      1325	intel_fbc.c	FUNCTION_50	IF_2	CALL_3
0x4001b37	            0x84c0	                             test al, al	      1325	intel_fbc.c	FUNCTION_50	IF_2	CALL_3
0x4001b39	            0x7425	                            je 0x4001b60	      1325	intel_fbc.c	FUNCTION_50	IF_2	CALL_3
0x4001b3b	    0x488b83800000	            mov rax, qword [rbx + 0x80] 	      1326	intel_fbc.c	FUNCTION_50	IF_2
0x4001b42	    0x488b80580200	           mov rax, qword [rax + 0x258] 	      1326	intel_fbc.c	FUNCTION_50	IF_2
0x4001b49	        0x80787400	                cmp byte [rax + 0x74], 0	      1325	intel_fbc.c	FUNCTION_50	IF_2	CALL_3
0x4001b4d	            0x7411	                            je 0x4001b60	      1325	intel_fbc.c	FUNCTION_50	IF_2	CALL_3
0x4001b4f	    0x8b8bb0040000	           mov ecx, dword [rbx + 0x4b0] 	      1327	intel_fbc.c	FUNCTION_50	IF_2
0x4001b55	          0x4489e8	                           mov eax, r13d	      1327	intel_fbc.c	FUNCTION_50	IF_2
0x4001b58	            0xd3e0	                             shl eax, cl	      1327	intel_fbc.c	FUNCTION_50	IF_2
0x4001b5a	     0x985544a0000	            or dword [rbp + 0x4a54], eax	      1327	intel_fbc.c	FUNCTION_50	IF_2
0x4001b60	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1324	intel_fbc.c	FUNCTION_50	CALL_2
0x4001b64	          0x4939c4	                            cmp r12, rax	      1324	intel_fbc.c	FUNCTION_50	CALL_2
0x4001b67	        0x488d58f0	                   lea rbx, [rax - 0x10]	      1324	intel_fbc.c	FUNCTION_50	CALL_2
0x4001b6b	            0x75c2	                           jne 0x4001b2f	      1324	intel_fbc.c	FUNCTION_50	CALL_2
0x4001b6d	              0x5b	                                 pop rbx	      1328	intel_fbc.c	FUNCTION_50
0x4001b6e	              0x5d	                                 pop rbp	      1328	intel_fbc.c	FUNCTION_50
0x4001b6f	            0x415c	                                 pop r12	      1328	intel_fbc.c	FUNCTION_50
0x4001b71	            0x415d	                                 pop r13	      1328	intel_fbc.c	FUNCTION_50
0x4001b73	            0xf3c3	                                     ret	      1328	intel_fbc.c	FUNCTION_50
intel_fbc_is_active	WHILE,0:IF,0:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:CALL,0	2
0x4001160	     0xfb6870a4b00	         movzx eax, byte [rdi + 0x4b0a] 	       399	intel_fbc.c	FUNCTION_20
0x4001167	              0xc3	                                     ret	       400	intel_fbc.c	FUNCTION_20
intel_fbc_flush	WHILE,0:IF,4:functions,0:ELSE,1:SWITCH,0:FOR,0:DO,0:CALL,6	53
0x4001350	    0xf68778060000	              test byte [rdi + 0x678], 2	      1074	intel_fbc.c	FUNCTION_43	IF_1	CALL_1
0x4001357	            0x7502	                           jne 0x400135b	      1074	intel_fbc.c	FUNCTION_43	IF_1	CALL_1
0x4001359	            0xf3c3	                                     ret	      1074	intel_fbc.c	FUNCTION_43	IF_1	CALL_1
0x400135b	            0x4155	                                push r13	      1071	intel_fbc.c	FUNCTION_43
0x400135d	    0x4c8daf284a00	                 lea r13, [rdi + 0x4a28]	      1077	intel_fbc.c	FUNCTION_43	CALL_2
0x4001364	            0x4154	                                push r12	      1071	intel_fbc.c	FUNCTION_43
0x4001366	              0x55	                                push rbp	      1071	intel_fbc.c	FUNCTION_43
0x4001367	              0x53	                                push rbx	      1071	intel_fbc.c	FUNCTION_43
0x4001368	          0x4889fd	                            mov rbp, rdi	      1071	intel_fbc.c	FUNCTION_43
0x400136b	          0x4189f4	                           mov r12d, esi	      1071	intel_fbc.c	FUNCTION_43
0x400136e	          0x4c89ef	                            mov rdi, r13	      1077	intel_fbc.c	FUNCTION_43	CALL_2
0x4001371	            0x89d3	                            mov ebx, edx	      1077	intel_fbc.c	FUNCTION_43	CALL_2
0x4001373	      0xe800000000	                          call 0x4001378	      1077	intel_fbc.c	FUNCTION_43	CALL_2
0x4001378	          0x4489e0	                           mov eax, r12d	      1079	intel_fbc.c	FUNCTION_43
0x400137b	            0xf7d0	                                 not eax	      1079	intel_fbc.c	FUNCTION_43
0x400137d	    0x2385504a0000	           and eax, dword [rbp + 0x4a50]	      1079	intel_fbc.c	FUNCTION_43
0x4001383	            0x85db	                           test ebx, ebx	      1084	intel_fbc.c	FUNCTION_43	IF_3
0x4001385	           0xf94c1	                                 sete cl	      1084	intel_fbc.c	FUNCTION_43	IF_3
0x4001388	          0x83fb03	                              cmp ebx, 3	      1084	intel_fbc.c	FUNCTION_43	IF_3
0x400138b	           0xf94c2	                                 sete dl	      1084	intel_fbc.c	FUNCTION_43	IF_3
0x400138e	             0x9ca	                             or edx, ecx	      1084	intel_fbc.c	FUNCTION_43	IF_3
0x4001390	            0x85c0	                           test eax, eax	      1084	intel_fbc.c	FUNCTION_43	IF_3
0x4001392	    0x8985504a0000	          mov dword [rbp + 0x4a50], eax 	      1079	intel_fbc.c	FUNCTION_43
0x4001398	           0xf94c0	                                 sete al	      1084	intel_fbc.c	FUNCTION_43	IF_3
0x400139b	            0x38c2	                              cmp dl, al	      1084	intel_fbc.c	FUNCTION_43	IF_3
0x400139d	            0x735d	                           jae 0x40013fc	      1084	intel_fbc.c	FUNCTION_43	IF_3
0x400139f	    0x80bd094b0000	              cmp byte [rbp + 0x4b09], 0	      1084	intel_fbc.c	FUNCTION_43	IF_3
0x40013a6	            0x7454	                            je 0x40013fc	      1084	intel_fbc.c	FUNCTION_43	IF_3
0x40013a8	    0x488bbd584a00	          mov rdi, qword [rbp + 0x4a58] 	      1084	intel_fbc.c	FUNCTION_43	IF_3
0x40013af	    0x488b87800000	            mov rax, qword [rdi + 0x80] 	      1042	intel_fbc.c	FUNCTION_41	CALL_1
0x40013b6	    0x4485a0940200	         test dword [rax + 0x294], r12d 	      1084	intel_fbc.c	FUNCTION_43	IF_3
0x40013bd	            0x743d	                            je 0x40013fc	      1084	intel_fbc.c	FUNCTION_43	IF_3
0x40013bf	    0x80bd0a4b0000	              cmp byte [rbp + 0x4b0a], 0	      1086	intel_fbc.c	FUNCTION_43	IF_3	IF_4
0x40013c6	            0x7442	                            je 0x400140a	      1086	intel_fbc.c	FUNCTION_43	IF_3	IF_4
0x40013c8	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	       207	intel_fbc.c	FUNCTION_12	CALL_1
0x40013cf	      0xba04000000	                              mov edx, 4	       207	intel_fbc.c	FUNCTION_12	CALL_1
0x40013d4	      0xbe80030500	                        mov esi, 0x50380	       207	intel_fbc.c	FUNCTION_12	CALL_1
0x40013d9	          0x4889ef	                            mov rdi, rbp	       207	intel_fbc.c	FUNCTION_12	CALL_1
0x40013dc	      0xb901000000	                              mov ecx, 1	       207	intel_fbc.c	FUNCTION_12	CALL_1
0x40013e1	      0xe800000000	                          call 0x40013e6	       207	intel_fbc.c	FUNCTION_12	CALL_1
0x40013e6	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	       208	intel_fbc.c	FUNCTION_12	CALL_2
0x40013ed	            0x31d2	                            xor edx, edx	       208	intel_fbc.c	FUNCTION_12	CALL_2
0x40013ef	      0xbe80030500	                        mov esi, 0x50380	       208	intel_fbc.c	FUNCTION_12	CALL_2
0x40013f4	          0x4889ef	                            mov rdi, rbp	       208	intel_fbc.c	FUNCTION_12	CALL_2
0x40013f7	      0xe800000000	                          call 0x40013fc	       208	intel_fbc.c	FUNCTION_12	CALL_2
0x40013fc	              0x5b	                                 pop rbx	      1094	intel_fbc.c	FUNCTION_43
0x40013fd	          0x4c89ef	                            mov rdi, r13	      1093	intel_fbc.c	FUNCTION_43	CALL_6
0x4001400	              0x5d	                                 pop rbp	      1094	intel_fbc.c	FUNCTION_43
0x4001401	            0x415c	                                 pop r12	      1094	intel_fbc.c	FUNCTION_43
0x4001403	            0x415d	                                 pop r13	      1094	intel_fbc.c	FUNCTION_43
0x4001405	      0xe900000000	                           jmp 0x400140a	      1093	intel_fbc.c	FUNCTION_43	CALL_6
0x400140a	      0xe801f7ffff	        call sym.__intel_fbc_post_update	      1089	intel_fbc.c	FUNCTION_43	IF_3	CALL_5
0x400140f	            0xebeb	                           jmp 0x40013fc	      1089	intel_fbc.c	FUNCTION_43	IF_3	CALL_5
intel_fbc_underrun_work_fn	WHILE,0:IF,1:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:CALL,5	25
0x40002a0	              0x55	                                push rbp	      1256	intel_fbc.c	FUNCTION_48
0x40002a1	    0x488daf18ffff	                   lea rbp, [rdi - 0xe8]	      1261	intel_fbc.c	FUNCTION_48	CALL_2
0x40002a8	              0x53	                                push rbx	      1256	intel_fbc.c	FUNCTION_48
0x40002a9	          0x4889fb	                            mov rbx, rdi	      1256	intel_fbc.c	FUNCTION_48
0x40002ac	          0x4889ef	                            mov rdi, rbp	      1261	intel_fbc.c	FUNCTION_48	CALL_2
0x40002af	      0xe800000000	                          call 0x40002b4	      1261	intel_fbc.c	FUNCTION_48	CALL_2
0x40002b4	        0x807bfb00	                   cmp byte [rbx - 5], 0	      1264	intel_fbc.c	FUNCTION_48	IF_1
0x40002b8	            0x7506	                           jne 0x40002c0	      1264	intel_fbc.c	FUNCTION_48	IF_1
0x40002ba	        0x807bf900	                   cmp byte [rbx - 7], 0	      1264	intel_fbc.c	FUNCTION_48	IF_1
0x40002be	            0x750a	                           jne 0x40002ca	      1264	intel_fbc.c	FUNCTION_48	IF_1
0x40002c0	          0x4889ef	                            mov rdi, rbp	      1272	intel_fbc.c	FUNCTION_48	CALL_5
0x40002c3	              0x5b	                                 pop rbx	      1273	intel_fbc.c	FUNCTION_48
0x40002c4	              0x5d	                                 pop rbp	      1273	intel_fbc.c	FUNCTION_48
0x40002c5	      0xe900000000	                           jmp 0x40002ca	      1272	intel_fbc.c	FUNCTION_48	CALL_5
0x40002ca	    0x48c7c6000000	                              mov rsi, 0	      1267	intel_fbc.c	FUNCTION_48	CALL_3
0x40002d1	      0xbf04000000	                              mov edi, 4	      1267	intel_fbc.c	FUNCTION_48	CALL_3
0x40002d6	      0xe800000000	                          call 0x40002db	      1267	intel_fbc.c	FUNCTION_48	CALL_3
0x40002db	    0x488dbbf0b4ff	                 lea rdi, [rbx - 0x4b10]	      1270	intel_fbc.c	FUNCTION_48	CALL_4
0x40002e2	        0xc643fb01	                   mov byte [rbx - 5], 1	      1268	intel_fbc.c	FUNCTION_48
0x40002e6	    0x48c7c6000000	                              mov rsi, 0	      1270	intel_fbc.c	FUNCTION_48	CALL_4
0x40002ed	      0xe85effffff	           call sym.intel_fbc_deactivate	      1270	intel_fbc.c	FUNCTION_48	CALL_4
0x40002f2	          0x4889ef	                            mov rdi, rbp	      1272	intel_fbc.c	FUNCTION_48	CALL_5
0x40002f5	              0x5b	                                 pop rbx	      1273	intel_fbc.c	FUNCTION_48
0x40002f6	              0x5d	                                 pop rbp	      1273	intel_fbc.c	FUNCTION_48
0x40002f7	      0xe900000000	                           jmp 0x40002fc	      1272	intel_fbc.c	FUNCTION_48	CALL_5
intel_fbc_post_update	WHILE,0:IF,1:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:CALL,5	16
0x4001290	          0x488b07	                    mov rax, qword [rdi]	      1028	intel_fbc.c	FUNCTION_40	CALL_1
0x4001293	    0xf68078060000	              test byte [rax + 0x678], 2	      1031	intel_fbc.c	FUNCTION_40	IF_1	CALL_2
0x400129a	            0x7502	                           jne 0x400129e	      1031	intel_fbc.c	FUNCTION_40	IF_1	CALL_2
0x400129c	            0xf3c3	                                     ret	      1031	intel_fbc.c	FUNCTION_40	IF_1	CALL_2
0x400129e	              0x55	                                push rbp	      1027	intel_fbc.c	FUNCTION_40
0x400129f	              0x53	                                push rbx	      1027	intel_fbc.c	FUNCTION_40
0x40012a0	    0x488d98284a00	                 lea rbx, [rax + 0x4a28]	      1034	intel_fbc.c	FUNCTION_40	CALL_3
0x40012a7	          0x4889fd	                            mov rbp, rdi	      1034	intel_fbc.c	FUNCTION_40	CALL_3
0x40012aa	          0x4889df	                            mov rdi, rbx	      1034	intel_fbc.c	FUNCTION_40	CALL_3
0x40012ad	      0xe800000000	                          call 0x40012b2	      1034	intel_fbc.c	FUNCTION_40	CALL_3
0x40012b2	          0x4889ef	                            mov rdi, rbp	      1035	intel_fbc.c	FUNCTION_40	CALL_4
0x40012b5	      0xe856f8ffff	        call sym.__intel_fbc_post_update	      1035	intel_fbc.c	FUNCTION_40	CALL_4
0x40012ba	          0x4889df	                            mov rdi, rbx	      1036	intel_fbc.c	FUNCTION_40	CALL_5
0x40012bd	              0x5b	                                 pop rbx	      1037	intel_fbc.c	FUNCTION_40
0x40012be	              0x5d	                                 pop rbp	      1037	intel_fbc.c	FUNCTION_40
0x40012bf	      0xe900000000	                           jmp 0x40012c4	      1036	intel_fbc.c	FUNCTION_40	CALL_5
intel_fbc_pre_update	WHILE,0:IF,3:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:CALL,7	61
0x40011b0	            0x4156	                                push r14	       937	intel_fbc.c	FUNCTION_37
0x40011b2	            0x4155	                                push r13	       937	intel_fbc.c	FUNCTION_37
0x40011b4	            0x4154	                                push r12	       937	intel_fbc.c	FUNCTION_37
0x40011b6	              0x55	                                push rbp	       937	intel_fbc.c	FUNCTION_37
0x40011b7	              0x53	                                push rbx	       937	intel_fbc.c	FUNCTION_37
0x40011b8	          0x488b2f	                    mov rbp, qword [rdi]	       938	intel_fbc.c	FUNCTION_37	CALL_1
0x40011bb	    0xf68578060000	              test byte [rbp + 0x678], 2	       942	intel_fbc.c	FUNCTION_37	IF_1	CALL_2
0x40011c2	            0x7509	                           jne 0x40011cd	       942	intel_fbc.c	FUNCTION_37	IF_1	CALL_2
0x40011c4	              0x5b	                                 pop rbx	       961	intel_fbc.c	FUNCTION_37
0x40011c5	              0x5d	                                 pop rbp	       961	intel_fbc.c	FUNCTION_37
0x40011c6	            0x415c	                                 pop r12	       961	intel_fbc.c	FUNCTION_37
0x40011c8	            0x415d	                                 pop r13	       961	intel_fbc.c	FUNCTION_37
0x40011ca	            0x415e	                                 pop r14	       961	intel_fbc.c	FUNCTION_37
0x40011cc	              0xc3	                                     ret	       961	intel_fbc.c	FUNCTION_37
0x40011cd	    0x4c8db5284a00	                 lea r14, [rbp + 0x4a28]	       945	intel_fbc.c	FUNCTION_37	CALL_3
0x40011d4	          0x4889fb	                            mov rbx, rdi	       945	intel_fbc.c	FUNCTION_37	CALL_3
0x40011d7	          0x4989d5	                            mov r13, rdx	       945	intel_fbc.c	FUNCTION_37	CALL_3
0x40011da	          0x4989f4	                            mov r12, rsi	       945	intel_fbc.c	FUNCTION_37	CALL_3
0x40011dd	          0x4c89f7	                            mov rdi, r14	       945	intel_fbc.c	FUNCTION_37	CALL_3
0x40011e0	      0xe800000000	                          call 0x40011e5	       945	intel_fbc.c	FUNCTION_37	CALL_3
0x40011e5	          0x488b03	                    mov rax, qword [rbx]	       945	intel_fbc.c	FUNCTION_37	CALL_3
0x40011e8	    0x80b85c060000	               cmp byte [rax + 0x65c], 3	       511	intel_fbc.c	FUNCTION_24	IF_1	CALL_2
0x40011ef	            0x7747	                            ja 0x4001238	       511	intel_fbc.c	FUNCTION_24	IF_1	CALL_2
0x40011f1	      0x41807d7400	                cmp byte [r13 + 0x74], 0	       514	intel_fbc.c	FUNCTION_24	IF_2
0x40011f6	    0x8b8bb0040000	           mov ecx, dword [rbx + 0x4b0] 	       514	intel_fbc.c	FUNCTION_24	IF_2
0x40011fc	            0x7470	                            je 0x400126e	       514	intel_fbc.c	FUNCTION_24	IF_2
0x40011fe	      0xba01000000	                              mov edx, 1	       515	intel_fbc.c	FUNCTION_24	IF_2
0x4001203	            0xd3e2	                             shl edx, cl	       515	intel_fbc.c	FUNCTION_24	IF_2
0x4001205	    0x8b88544a0000	          mov ecx, dword [rax + 0x4a54] 	       515	intel_fbc.c	FUNCTION_24	IF_2
0x400120b	             0x9d1	                             or ecx, edx	       515	intel_fbc.c	FUNCTION_24	IF_2
0x400120d	            0xf7d2	                                 not edx	       515	intel_fbc.c	FUNCTION_24	IF_2
0x400120f	    0x8988544a0000	          mov dword [rax + 0x4a54], ecx 	       515	intel_fbc.c	FUNCTION_24	IF_2
0x4001215	            0x85ca	                           test edx, ecx	       947	intel_fbc.c	FUNCTION_37	IF_2	CALL_4
0x4001217	    0x48c7c6000000	                              mov rsi, 0	       948	intel_fbc.c	FUNCTION_37	IF_2
0x400121e	            0x7518	                           jne 0x4001238	       947	intel_fbc.c	FUNCTION_37	IF_2	CALL_4
0x4001220	          0x4889ef	                            mov rdi, rbp	       958	intel_fbc.c	FUNCTION_37	CALL_6
0x4001223	      0xe828f0ffff	           call sym.intel_fbc_deactivate	       958	intel_fbc.c	FUNCTION_37	CALL_6
0x4001228	              0x5b	                                 pop rbx	       961	intel_fbc.c	FUNCTION_37
0x4001229	          0x4c89f7	                            mov rdi, r14	       960	intel_fbc.c	FUNCTION_37	CALL_7
0x400122c	              0x5d	                                 pop rbp	       961	intel_fbc.c	FUNCTION_37
0x400122d	            0x415c	                                 pop r12	       961	intel_fbc.c	FUNCTION_37
0x400122f	            0x415d	                                 pop r13	       961	intel_fbc.c	FUNCTION_37
0x4001231	            0x415e	                                 pop r14	       961	intel_fbc.c	FUNCTION_37
0x4001233	      0xe900000000	                           jmp 0x4001238	       960	intel_fbc.c	FUNCTION_37	CALL_7
0x4001238	    0x80bd094b0000	              cmp byte [rbp + 0x4b09], 0	       952	intel_fbc.c	FUNCTION_37	IF_3
0x400123f	            0x74e7	                            je 0x4001228	       952	intel_fbc.c	FUNCTION_37	IF_3
0x4001241	    0x483b9d584a00	          cmp rbx, qword [rbp + 0x4a58] 	       952	intel_fbc.c	FUNCTION_37	IF_3
0x4001248	            0x75de	                           jne 0x4001228	       952	intel_fbc.c	FUNCTION_37	IF_3
0x400124a	          0x488b3b	                    mov rdi, qword [rbx]	       955	intel_fbc.c	FUNCTION_37	CALL_5
0x400124d	    0x498db4249c00	                   lea rsi, [r12 + 0x9c]	       955	intel_fbc.c	FUNCTION_37	CALL_5
0x4001255	    0x498d94243402	                  lea rdx, [r12 + 0x234]	       955	intel_fbc.c	FUNCTION_37	CALL_5
0x400125d	          0x4c89e9	                            mov rcx, r13	       955	intel_fbc.c	FUNCTION_37	CALL_5
0x4001260	      0xe8bbf7ffff	call sym.intel_fbc_update_state_cache.isra.14	       955	intel_fbc.c	FUNCTION_37	CALL_5
0x4001265	    0x48c7c6000000	                              mov rsi, 0	       940	intel_fbc.c	FUNCTION_37
0x400126c	            0xebb2	                           jmp 0x4001220	       940	intel_fbc.c	FUNCTION_37
0x400126e	      0xbafeffffff	                     mov edx, 0xfffffffe	       517	intel_fbc.c	FUNCTION_24	ELSE_1
0x4001273	            0xd3c2	                             rol edx, cl	       517	intel_fbc.c	FUNCTION_24	ELSE_1
0x4001275	    0x8b88544a0000	          mov ecx, dword [rax + 0x4a54] 	       517	intel_fbc.c	FUNCTION_24	ELSE_1
0x400127b	            0x21d1	                            and ecx, edx	       517	intel_fbc.c	FUNCTION_24	ELSE_1
0x400127d	    0x8988544a0000	          mov dword [rax + 0x4a54], ecx 	       517	intel_fbc.c	FUNCTION_24	ELSE_1
0x4001283	            0xeb90	                           jmp 0x4001215	       517	intel_fbc.c	FUNCTION_24	ELSE_1
intel_fbc_hw_deactivate	WHILE,0:IF,2:functions,0:ELSE,2:SWITCH,0:FOR,0:DO,0:CALL,5	64
0x4000150	              0x53	                                push rbx	       375	intel_fbc.c	FUNCTION_19
0x4000151	    0x80bf5c060000	               cmp byte [rdi + 0x65c], 4	       380	intel_fbc.c	FUNCTION_19	IF_1	CALL_1
0x4000158	          0x4889fb	                            mov rbx, rdi	       375	intel_fbc.c	FUNCTION_19
0x400015b	    0xc6870a4b0000	              mov byte [rdi + 0x4b0a], 0	       378	intel_fbc.c	FUNCTION_19
0x4000162	            0x7750	                            ja 0x40001b4	       380	intel_fbc.c	FUNCTION_19	IF_1	CALL_1
0x4000164	    0xf68765060000	          test byte [rdi + 0x665], 0x40 	       382	intel_fbc.c	FUNCTION_19	ELSE_1	IF_2	CALL_3
0x400016b	    0x488b87f80700	           mov rax, qword [rdi + 0x7f8] 	       192	intel_fbc.c	FUNCTION_10	CALL_1
0x4000172	      0xba01000000	                              mov edx, 1	       192	intel_fbc.c	FUNCTION_10	CALL_1
0x4000177	      0xbe08320000	                         mov esi, 0x3208	       192	intel_fbc.c	FUNCTION_10	CALL_1
0x400017c	            0x750b	                           jne 0x4000189	       382	intel_fbc.c	FUNCTION_19	ELSE_1	IF_2	CALL_3
0x400017e	      0xe800000000	                          call 0x4000183	       101	intel_fbc.c	FUNCTION_6	CALL_1
0x4000183	            0x85c0	                           test eax, eax	       102	intel_fbc.c	FUNCTION_6	IF_1
0x4000185	            0x7869	                            js 0x40001f0	       102	intel_fbc.c	FUNCTION_6	IF_1
0x4000187	              0x5b	                                 pop rbx	       386	intel_fbc.c	FUNCTION_19
0x4000188	              0xc3	                                     ret	       386	intel_fbc.c	FUNCTION_19
0x4000189	      0xe800000000	                          call 0x400018e	       192	intel_fbc.c	FUNCTION_10	CALL_1
0x400018e	            0x85c0	                           test eax, eax	       193	intel_fbc.c	FUNCTION_10	IF_1
0x4000190	            0x79f5	                           jns 0x4000187	       193	intel_fbc.c	FUNCTION_10	IF_1
0x4000192	      0x25ffffff7f	                     and eax, 0x7fffffff	       195	intel_fbc.c	FUNCTION_10	IF_1	CALL_2
0x4000197	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	       195	intel_fbc.c	FUNCTION_10	IF_1	CALL_2
0x400019e	          0x4889df	                            mov rdi, rbx	       195	intel_fbc.c	FUNCTION_10	IF_1	CALL_2
0x40001a1	            0x89c2	                            mov edx, eax	       195	intel_fbc.c	FUNCTION_10	IF_1	CALL_2
0x40001a3	      0xb901000000	                              mov ecx, 1	       195	intel_fbc.c	FUNCTION_10	IF_1	CALL_2
0x40001a8	      0xbe08320000	                         mov esi, 0x3208	       195	intel_fbc.c	FUNCTION_10	IF_1	CALL_2
0x40001ad	      0xe800000000	                          call 0x40001b2	       195	intel_fbc.c	FUNCTION_10	IF_1	CALL_2
0x40001b2	              0x5b	                                 pop rbx	       386	intel_fbc.c	FUNCTION_19
0x40001b3	              0xc3	                                     ret	       386	intel_fbc.c	FUNCTION_19
0x40001b4	    0x488b87f80700	           mov rax, qword [rdi + 0x7f8] 	       266	intel_fbc.c	FUNCTION_14	CALL_1
0x40001bb	      0xba01000000	                              mov edx, 1	       266	intel_fbc.c	FUNCTION_14	CALL_1
0x40001c0	      0xbe08320400	                        mov esi, 0x43208	       266	intel_fbc.c	FUNCTION_14	CALL_1
0x40001c5	      0xe800000000	                          call 0x40001ca	       266	intel_fbc.c	FUNCTION_14	CALL_1
0x40001ca	            0x85c0	                           test eax, eax	       267	intel_fbc.c	FUNCTION_14	IF_1
0x40001cc	            0x79b9	                           jns 0x4000187	       267	intel_fbc.c	FUNCTION_14	IF_1
0x40001ce	      0x25ffffff7f	                     and eax, 0x7fffffff	       269	intel_fbc.c	FUNCTION_14	IF_1	CALL_2
0x40001d3	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	       269	intel_fbc.c	FUNCTION_14	IF_1	CALL_2
0x40001da	          0x4889df	                            mov rdi, rbx	       269	intel_fbc.c	FUNCTION_14	IF_1	CALL_2
0x40001dd	            0x89c2	                            mov edx, eax	       269	intel_fbc.c	FUNCTION_14	IF_1	CALL_2
0x40001df	      0xb901000000	                              mov ecx, 1	       269	intel_fbc.c	FUNCTION_14	IF_1	CALL_2
0x40001e4	      0xbe08320400	                        mov esi, 0x43208	       269	intel_fbc.c	FUNCTION_14	IF_1	CALL_2
0x40001e9	      0xe800000000	                          call 0x40001ee	       269	intel_fbc.c	FUNCTION_14	IF_1	CALL_2
0x40001ee	              0x5b	                                 pop rbx	       386	intel_fbc.c	FUNCTION_19
0x40001ef	              0xc3	                                     ret	       386	intel_fbc.c	FUNCTION_19
0x40001f0	      0x25ffffff7f	                     and eax, 0x7fffffff	       106	intel_fbc.c	FUNCTION_6	CALL_2
0x40001f5	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	       106	intel_fbc.c	FUNCTION_6	CALL_2
0x40001fc	      0xb901000000	                              mov ecx, 1	       106	intel_fbc.c	FUNCTION_6	CALL_2
0x4000201	            0x89c2	                            mov edx, eax	       106	intel_fbc.c	FUNCTION_6	CALL_2
0x4000203	      0xbe08320000	                         mov esi, 0x3208	       106	intel_fbc.c	FUNCTION_6	CALL_2
0x4000208	          0x4889df	                            mov rdi, rbx	       106	intel_fbc.c	FUNCTION_6	CALL_2
0x400020b	      0xe800000000	                          call 0x4000210	       106	intel_fbc.c	FUNCTION_6	CALL_2
0x4000210	            0x6a00	                                  push 0	       191	intel_uncore.h	FUNCTION_152	CALL_1
0x4000212	            0x31c9	                            xor ecx, ecx	       191	intel_uncore.h	FUNCTION_152	CALL_1
0x4000214	      0xba00000080	                     mov edx, 0x80000000	       191	intel_uncore.h	FUNCTION_152	CALL_1
0x4000219	    0x41b90a000000	                            mov r9d, 0xa	       191	intel_uncore.h	FUNCTION_152	CALL_1
0x400021f	    0x41b802000000	                              mov r8d, 2	       191	intel_uncore.h	FUNCTION_152	CALL_1
0x4000225	      0xbe10320000	                         mov esi, 0x3210	       191	intel_uncore.h	FUNCTION_152	CALL_1
0x400022a	          0x4889df	                            mov rdi, rbx	       191	intel_uncore.h	FUNCTION_152	CALL_1
0x400022d	      0xe800000000	                          call 0x4000232	       191	intel_uncore.h	FUNCTION_152	CALL_1
0x4000232	            0x85c0	                           test eax, eax	       109	intel_fbc.c	FUNCTION_6	IF_2	CALL_3
0x4000234	              0x5a	                                 pop rdx	       109	intel_fbc.c	FUNCTION_6	IF_2	CALL_3
0x4000235	     0xf844cffffff	                            je 0x4000187	       109	intel_fbc.c	FUNCTION_6	IF_2	CALL_3
0x400023b	              0x5b	                                 pop rbx	       386	intel_fbc.c	FUNCTION_19
0x400023c	    0x48c7c6000000	                              mov rsi, 0	       112	intel_fbc.c	FUNCTION_6	IF_2	CALL_4
0x4000243	      0xbf04000000	                              mov edi, 4	       112	intel_fbc.c	FUNCTION_6	IF_2	CALL_4
0x4000248	      0xe900000000	                           jmp 0x400024d	       112	intel_fbc.c	FUNCTION_6	IF_2	CALL_4
