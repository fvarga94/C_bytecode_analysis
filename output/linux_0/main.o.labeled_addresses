async_resume_noirq	WHILE,0:SWITCH,0:functions,0:FOR,0:ELSE,0:DO,0:IF,1:CALL,3	15
0x4001390	    0x8b3500000000	            mov esi, dword [0x04001396] 	       704	main.c	FUNCTION_35	CALL_1
0x4001396	              0x53	                                push rbx	       700	main.c	FUNCTION_35
0x4001397	      0xba01000000	                              mov edx, 1	       704	main.c	FUNCTION_35	CALL_1
0x400139c	          0x4889fb	                            mov rbx, rdi	       700	main.c	FUNCTION_35
0x400139f	      0xe8bcfdffff	            call sym.device_resume_noirq	       704	main.c	FUNCTION_35	CALL_1
0x40013a4	            0x85c0	                           test eax, eax	       705	main.c	FUNCTION_35	IF_1
0x40013a6	            0x7417	                            je 0x40013bf	       705	main.c	FUNCTION_35	IF_1
0x40013a8	    0x8b3500000000	            mov esi, dword [0x040013ae] 	       706	main.c	FUNCTION_35	CALL_2
0x40013ae	            0x89c1	                            mov ecx, eax	       706	main.c	FUNCTION_35	CALL_2
0x40013b0	    0x48c7c2000000	                              mov rdx, 0	       706	main.c	FUNCTION_35	CALL_2
0x40013b7	          0x4889df	                            mov rdi, rbx	       706	main.c	FUNCTION_35	CALL_2
0x40013ba	      0xe8b1f1ffff	                     call sym.pm_dev_err	       706	main.c	FUNCTION_35	CALL_2
0x40013bf	          0x4889df	                            mov rdi, rbx	       708	main.c	FUNCTION_35	CALL_3
0x40013c2	              0x5b	                                 pop rbx	       709	main.c	FUNCTION_35
0x40013c3	      0xe900000000	                           jmp 0x40013c8	       708	main.c	FUNCTION_35	CALL_3
device_resume_noirq	WHILE,0:SWITCH,0:functions,0:FOR,0:ELSE,1:DO,0:IF,9:CALL,16	144
0x4001160	            0x4155	                                push r13	       616	main.c	FUNCTION_33
0x4001162	            0x4154	                                push r12	       616	main.c	FUNCTION_33
0x4001164	          0x4189f5	                           mov r13d, esi	       616	main.c	FUNCTION_33
0x4001167	              0x55	                                push rbp	       616	main.c	FUNCTION_33
0x4001168	              0x53	                                push rbx	       616	main.c	FUNCTION_33
0x4001169	          0x4189d4	                           mov r12d, edx	       616	main.c	FUNCTION_33
0x400116c	          0x4889fb	                            mov rbx, rdi	       616	main.c	FUNCTION_33
0x400116f	        0x4883ec10	                           sub rsp, 0x10	       616	main.c	FUNCTION_33
0x4001173	    0x8b0d00000000	            mov ecx, dword [0x04001179] 	       622	main.c	FUNCTION_33	CALL_1
0x4001179	    0x65488b042528	                mov rax, qword gs:[0x28]	       616	main.c	FUNCTION_33
0x4001182	      0x4889442408	                mov qword [rsp + 8], rax	       616	main.c	FUNCTION_33
0x4001187	            0x31c0	                            xor eax, eax	       616	main.c	FUNCTION_33
0x4001189	            0x85c9	                           test ecx, ecx	       622	main.c	FUNCTION_33	CALL_1
0x400118b	     0xf85d9000000	                           jne 0x400126a	       622	main.c	FUNCTION_33	CALL_1
0x4001191	            0x31ed	                            xor ebp, ebp	       620	main.c	FUNCTION_33
0x4001193	    0xf68310010000	              test byte [rbx + 0x110], 2	       625	main.c	FUNCTION_33	IF_1
0x400119a	            0x7509	                           jne 0x40011a5	       625	main.c	FUNCTION_33	IF_1
0x400119c	    0xf683cd000000	               test byte [rbx + 0xcd], 1	       625	main.c	FUNCTION_33	IF_1
0x40011a3	            0x7445	                            je 0x40011ea	       625	main.c	FUNCTION_33	IF_1
0x40011a5	    0x488dbbe80000	                   lea rdi, [rbx + 0xe8]	       688	main.c	FUNCTION_33	CALL_15
0x40011ac	      0xe800000000	                          call 0x40011b1	       688	main.c	FUNCTION_33	CALL_15
0x40011b1	    0x8b0500000000	            mov eax, dword [0x040011b7] 	       689	main.c	FUNCTION_33	CALL_16
0x40011b7	            0x85c0	                           test eax, eax	       689	main.c	FUNCTION_33	CALL_16
0x40011b9	            0x740e	                            je 0x40011c9	       689	main.c	FUNCTION_33	CALL_16
0x40011bb	    0x48c7c7000000	                              mov rdi, 0	       689	main.c	FUNCTION_33	CALL_16
0x40011c2	            0x89ee	                            mov esi, ebp	       689	main.c	FUNCTION_33	CALL_16
0x40011c4	      0xe800000000	                          call 0x40011c9	       689	main.c	FUNCTION_33	CALL_16
0x40011c9	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       691	main.c	FUNCTION_33
0x40011ce	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       691	main.c	FUNCTION_33
0x40011d7	            0x89e8	                            mov eax, ebp	       691	main.c	FUNCTION_33
0x40011d9	     0xf85a8010000	                           jne 0x4001387	       691	main.c	FUNCTION_33
0x40011df	        0x4883c410	                           add rsp, 0x10	       691	main.c	FUNCTION_33
0x40011e3	              0x5b	                                 pop rbx	       691	main.c	FUNCTION_33
0x40011e4	              0x5d	                                 pop rbp	       691	main.c	FUNCTION_33
0x40011e5	            0x415c	                                 pop r12	       691	main.c	FUNCTION_33
0x40011e7	            0x415d	                                 pop r13	       691	main.c	FUNCTION_33
0x40011e9	              0xc3	                                     ret	       691	main.c	FUNCTION_33
0x40011ea	    0xf683cc000000	           test byte [rbx + 0xcc], 0x20 	       628	main.c	FUNCTION_33	IF_2
0x40011f1	            0x74b2	                            je 0x40011a5	       628	main.c	FUNCTION_33	IF_2
0x40011f3	          0x488b3b	                    mov rdi, qword [rbx]	       270	main.c	FUNCTION_16	CALL_1
0x40011f6	        0x450fb6e4	                        movzx r12d, r12b	       270	main.c	FUNCTION_16	CALL_1
0x40011fa	          0x4489e6	                           mov esi, r12d	       270	main.c	FUNCTION_16	CALL_1
0x40011fd	      0xe89ef2ffff	                       call sym.dpm_wait	       270	main.c	FUNCTION_16	CALL_1
0x4001202	          0x4489e6	                           mov esi, r12d	       271	main.c	FUNCTION_16	CALL_2
0x4001205	          0x4889df	                            mov rdi, rbx	       271	main.c	FUNCTION_16	CALL_2
0x4001208	      0xe8f3f2ffff	         call sym.dpm_wait_for_suppliers	       271	main.c	FUNCTION_16	CALL_2
0x400120d	    0xf68310010000	              test byte [rbx + 0x110], 8	       566	main.c	FUNCTION_31
0x4001214	            0x757a	                           jne 0x4001290	       566	main.c	FUNCTION_31
0x4001216	    0x833d00000000	           cmp dword [0x0400121d], 0x40 	       566	main.c	FUNCTION_31
0x400121d	            0x7471	                            je 0x4001290	       566	main.c	FUNCTION_31
0x400121f	          0x4889e2	                            mov rdx, rsp	       635	main.c	FUNCTION_33	CALL_5
0x4001222	          0x4489ee	                           mov esi, r13d	       635	main.c	FUNCTION_33	CALL_5
0x4001225	          0x4889df	                            mov rdi, rbx	       635	main.c	FUNCTION_33	CALL_5
0x4001228	      0xe833f0ffff	    call sym.dpm_subsys_suspend_noirq_cb	       635	main.c	FUNCTION_33	CALL_5
0x400122d	          0x4885c0	                           test rax, rax	       636	main.c	FUNCTION_33	IF_3
0x4001230	     0xf8490000000	                            je 0x40012c6	       636	main.c	FUNCTION_33	IF_3
0x4001236	        0x488b0c24	                    mov rcx, qword [rsp]	       670	main.c	FUNCTION_33	CALL_12
0x400123a	          0x4489ea	                           mov edx, r13d	       670	main.c	FUNCTION_33	CALL_12
0x400123d	          0x4889de	                            mov rsi, rbx	       670	main.c	FUNCTION_33	CALL_12
0x4001240	          0x4889c7	                            mov rdi, rax	       670	main.c	FUNCTION_33	CALL_12
0x4001243	      0xe838f5ffff	               call sym.dpm_run_callback	       670	main.c	FUNCTION_33	CALL_12
0x4001248	    0x80a3cc000000	             and byte [rbx + 0xcc], 0xdf	       673	main.c	FUNCTION_33
0x400124f	            0x89c5	                            mov ebp, eax	       670	main.c	FUNCTION_33	CALL_12
0x4001251	      0xbe02000000	                              mov esi, 2	       259	pm_runtime.h	FUNCTION_169	CALL_1
0x4001256	          0x4889df	                            mov rdi, rbx	       259	pm_runtime.h	FUNCTION_169	CALL_1
0x4001259	      0xe800000000	                          call 0x400125e	       259	pm_runtime.h	FUNCTION_169	CALL_1
0x400125e	    0x80a3cc000000	             and byte [rbx + 0xcc], 0xaf	       536	main.c	FUNCTION_29
0x4001265	      0xe93bffffff	                           jmp 0x40011a5	       536	main.c	FUNCTION_29
0x400126a	      0xe800000000	                          call 0x400126f	       622	main.c	FUNCTION_33	CALL_1
0x400126f	    0x8b1500000000	            mov edx, dword [0x04001275] 	       623	main.c	FUNCTION_33	CALL_2
0x4001275	            0x85d2	                           test edx, edx	       623	main.c	FUNCTION_33	CALL_2
0x4001277	     0xf8414ffffff	                            je 0x4001191	       623	main.c	FUNCTION_33	CALL_2
0x400127d	    0x48c7c7000000	                              mov rdi, 0	       623	main.c	FUNCTION_33	CALL_2
0x4001284	            0x31f6	                            xor esi, esi	       623	main.c	FUNCTION_33	CALL_2
0x4001286	      0xe800000000	                          call 0x400128b	       623	main.c	FUNCTION_33	CALL_2
0x400128b	      0xe901ffffff	                           jmp 0x4001191	       623	main.c	FUNCTION_33	CALL_2
0x4001290	          0x4889e2	                            mov rdx, rsp	       635	main.c	FUNCTION_33	CALL_5
0x4001293	          0x4489ee	                           mov esi, r13d	       635	main.c	FUNCTION_33	CALL_5
0x4001296	          0x4889df	                            mov rdi, rbx	       635	main.c	FUNCTION_33	CALL_5
0x4001299	      0xe8c2efffff	    call sym.dpm_subsys_suspend_noirq_cb	       635	main.c	FUNCTION_33	CALL_5
0x400129e	          0x4885c0	                           test rax, rax	       636	main.c	FUNCTION_33	IF_3
0x40012a1	          0x4889c5	                            mov rbp, rax	       635	main.c	FUNCTION_33	CALL_5
0x40012a4	            0x742b	                            je 0x40012d1	       636	main.c	FUNCTION_33	IF_3
0x40012a6	        0x488b0c24	                    mov rcx, qword [rsp]	       636	main.c	FUNCTION_33	IF_3
0x40012aa	          0x4889ef	                            mov rdi, rbp	       670	main.c	FUNCTION_33	CALL_12
0x40012ad	          0x4489ea	                           mov edx, r13d	       670	main.c	FUNCTION_33	CALL_12
0x40012b0	          0x4889de	                            mov rsi, rbx	       670	main.c	FUNCTION_33	CALL_12
0x40012b3	      0xe8c8f4ffff	               call sym.dpm_run_callback	       670	main.c	FUNCTION_33	CALL_12
0x40012b8	    0x80a3cc000000	             and byte [rbx + 0xcc], 0xdf	       673	main.c	FUNCTION_33
0x40012bf	            0x89c5	                            mov ebp, eax	       670	main.c	FUNCTION_33	CALL_12
0x40012c1	      0xe9dffeffff	                           jmp 0x40011a5	       670	main.c	FUNCTION_33	CALL_12
0x40012c6	    0x80a3cc000000	             and byte [rbx + 0xcc], 0xdf	       673	main.c	FUNCTION_33
0x40012cd	            0x31ed	                            xor ebp, ebp	       673	main.c	FUNCTION_33
0x40012cf	            0xeb80	                           jmp 0x4001251	       673	main.c	FUNCTION_33
0x40012d1	    0xf683d0000000	               test byte [rbx + 0xd0], 4	      2119	main.c	FUNCTION_81	CALL_1
0x40012d8	            0x7409	                            je 0x40012e3	      2119	main.c	FUNCTION_81	CALL_1
0x40012da	    0x83bb9c010000	              cmp dword [rbx + 0x19c], 2	      2119	main.c	FUNCTION_81	CALL_1
0x40012e1	            0x7431	                            je 0x4001314	      2119	main.c	FUNCTION_81	CALL_1
0x40012e3	    0x488b83880000	            mov rax, qword [rbx + 0x88] 	       664	main.c	FUNCTION_33	IF_8
0x40012ea	          0x4885c0	                           test rax, rax	       664	main.c	FUNCTION_33	IF_8
0x40012ed	            0x74b7	                            je 0x40012a6	       664	main.c	FUNCTION_33	IF_8
0x40012ef	        0x488b7868	            mov rdi, qword [rax + 0x68] 	       664	main.c	FUNCTION_33	IF_8
0x40012f3	          0x4885ff	                           test rdi, rdi	       664	main.c	FUNCTION_33	IF_8
0x40012f6	            0x74ae	                            je 0x40012a6	       664	main.c	FUNCTION_33	IF_8
0x40012f8	          0x4489ee	                           mov esi, r13d	       666	main.c	FUNCTION_33	IF_8	CALL_11
0x40012fb	    0x48c704240000	                      mov qword [rsp], 0	       665	main.c	FUNCTION_33	IF_8
0x4001303	      0xe858eeffff	                    call sym.pm_noirq_op	       666	main.c	FUNCTION_33	IF_8	CALL_11
0x4001308	    0x48c7c1000000	                              mov rcx, 0	       666	main.c	FUNCTION_33	IF_8	CALL_11
0x400130f	          0x4889c5	                            mov rbp, rax	       666	main.c	FUNCTION_33	IF_8	CALL_11
0x4001312	            0xeb96	                           jmp 0x40012aa	       666	main.c	FUNCTION_33	IF_8	CALL_11
0x4001314	        0x4183fd20	                          cmp r13d, 0x20	       545	main.c	FUNCTION_30	SWITCH_1
0x4001318	            0x7465	                            je 0x400137f	       545	main.c	FUNCTION_30	SWITCH_1
0x400131a	            0x7e52	                           jle 0x400136e	       545	main.c	FUNCTION_30	SWITCH_1
0x400131c	        0x4183fd40	                          cmp r13d, 0x40	       545	main.c	FUNCTION_30	SWITCH_1
0x4001320	            0x745d	                            je 0x400137f	       545	main.c	FUNCTION_30	SWITCH_1
0x4001322	    0x4181fd800000	                          cmp r13d, 0x80	       545	main.c	FUNCTION_30	SWITCH_1
0x4001329	    0x41b804000000	                              mov r8d, 4	       552	main.c	FUNCTION_30	SWITCH_1
0x400132f	            0x7549	                           jne 0x400137a	       545	main.c	FUNCTION_30	SWITCH_1
0x4001331	            0x31d2	                            xor edx, edx	       653	main.c	FUNCTION_33	IF_5	IF_6	CALL_8
0x4001333	          0x4489c6	                            mov esi, r8d	       653	main.c	FUNCTION_33	IF_5	IF_6	CALL_8
0x4001336	          0x4889df	                            mov rdi, rbx	       653	main.c	FUNCTION_33	IF_5	IF_6	CALL_8
0x4001339	      0xe802f0ffff	     call sym.dpm_subsys_suspend_late_cb	       653	main.c	FUNCTION_33	IF_5	IF_6	CALL_8
0x400133e	          0x4885c0	                           test rax, rax	       653	main.c	FUNCTION_33	IF_5	IF_6	CALL_8
0x4001341	            0x75a0	                           jne 0x40012e3	       653	main.c	FUNCTION_33	IF_5	IF_6	CALL_8
0x4001343	            0x31d2	                            xor edx, edx	       654	main.c	FUNCTION_33	IF_5	IF_6	CALL_9
0x4001345	          0x4489c6	                            mov esi, r8d	       654	main.c	FUNCTION_33	IF_5	IF_6	CALL_9
0x4001348	          0x4889df	                            mov rdi, rbx	       654	main.c	FUNCTION_33	IF_5	IF_6	CALL_9
0x400134b	      0xe810efffff	    call sym.dpm_subsys_suspend_noirq_cb	       654	main.c	FUNCTION_33	IF_5	IF_6	CALL_9
0x4001350	          0x4885c0	                           test rax, rax	       653	main.c	FUNCTION_33	IF_5	IF_6	CALL_8
0x4001353	            0x758e	                           jne 0x40012e3	       653	main.c	FUNCTION_33	IF_5	IF_6	CALL_8
0x4001355	        0x4183fd20	                          cmp r13d, 0x20	       655	main.c	FUNCTION_33	IF_5	IF_6	IF_7
0x4001359	     0xf8467ffffff	                            je 0x40012c6	       655	main.c	FUNCTION_33	IF_5	IF_6	IF_7
0x400135f	            0x31f6	                            xor esi, esi	       254	pm_runtime.h	FUNCTION_168	CALL_1
0x4001361	          0x4889df	                            mov rdi, rbx	       254	pm_runtime.h	FUNCTION_168	CALL_1
0x4001364	      0xe800000000	                          call 0x4001369	       254	pm_runtime.h	FUNCTION_168	CALL_1
0x4001369	      0xe975ffffff	                           jmp 0x40012e3	       254	pm_runtime.h	FUNCTION_168	CALL_1
0x400136e	        0x4183fd10	                          cmp r13d, 0x10	       545	main.c	FUNCTION_30	SWITCH_1
0x4001372	    0x41b802000000	                              mov r8d, 2	       547	main.c	FUNCTION_30	SWITCH_1
0x4001378	            0x74b7	                            je 0x4001331	       545	main.c	FUNCTION_30	SWITCH_1
0x400137a	          0x4531c0	                            xor r8d, r8d	       554	main.c	FUNCTION_30
0x400137d	            0xebb2	                           jmp 0x4001331	       554	main.c	FUNCTION_30
0x400137f	    0x41b801000000	                              mov r8d, 1	       550	main.c	FUNCTION_30	SWITCH_1
0x4001385	            0xebaa	                           jmp 0x4001331	       550	main.c	FUNCTION_30	SWITCH_1
0x4001387	      0xe800000000	                          call 0x400138c	       691	main.c	FUNCTION_33
dpm_suspend_noirq	WHILE,0:SWITCH,0:functions,0:FOR,0:ELSE,0:DO,0:IF,1:CALL,4	22
0x4002a40	              0x53	                                push rbx	      1436	main.c	FUNCTION_59
0x4002a41	            0x89fb	                            mov ebx, edi	      1436	main.c	FUNCTION_59
0x4002a43	        0x4883ec08	                              sub rsp, 8	      1436	main.c	FUNCTION_59
0x4002a47	      0xe800000000	                          call 0x4002a4c	      1377	main.c	FUNCTION_57	CALL_1
0x4002a4c	      0xe800000000	                          call 0x4002a51	      1378	main.c	FUNCTION_57	CALL_2
0x4002a51	      0xe800000000	                          call 0x4002a56	      1379	main.c	FUNCTION_57	CALL_3
0x4002a56	            0x89df	                            mov edi, ebx	      1440	main.c	FUNCTION_59	CALL_2
0x4002a58	      0xe800000000	                          call 0x4002a5d	      1440	main.c	FUNCTION_59	CALL_2
0x4002a5d	            0x85c0	                           test eax, eax	      1441	main.c	FUNCTION_59	IF_1
0x4002a5f	            0x7417	                            je 0x4002a78	      1441	main.c	FUNCTION_59	IF_1
0x4002a61	          0x83eb01	                              sub ebx, 1	      1441	main.c	FUNCTION_59	IF_1
0x4002a64	            0x31ff	                            xor edi, edi	      1193	main.c	FUNCTION_50	SWITCH_1
0x4002a66	          0x83fb07	                              cmp ebx, 7	      1193	main.c	FUNCTION_50	SWITCH_1
0x4002a69	            0x7613	                           jbe 0x4002a7e	      1193	main.c	FUNCTION_50	SWITCH_1
0x4002a6b	        0x89442404	                mov dword [rsp + 4], eax	      1193	main.c	FUNCTION_50	SWITCH_1
0x4002a6f	      0xe800000000	                          call 0x4002a74	      1442	main.c	FUNCTION_59	CALL_4
0x4002a74	        0x8b442404	                mov eax, dword [rsp + 4]	      1442	main.c	FUNCTION_59	CALL_4
0x4002a78	        0x4883c408	                              add rsp, 8	      1445	main.c	FUNCTION_59
0x4002a7c	              0x5b	                                 pop rbx	      1445	main.c	FUNCTION_59
0x4002a7d	              0xc3	                                     ret	      1445	main.c	FUNCTION_59
0x4002a7e	    0x8b3c9d000000	                  mov edi, dword [rbx*4]	      1445	main.c	FUNCTION_59
0x4002a85	            0xebe4	                           jmp 0x4002a6b	      1445	main.c	FUNCTION_59
pm_verb	WHILE,0:SWITCH,1:functions,0:FOR,0:ELSE,0:DO,0:IF,0:CALL,0	31
0x4000040	          0x83ff08	                              cmp edi, 8	        66	main.c	FUNCTION_1	SWITCH_1
0x4000043	    0x48c7c0000000	                              mov rax, 0	        74	main.c	FUNCTION_1	SWITCH_1
0x400004a	            0x7428	                            je 0x4000074	        66	main.c	FUNCTION_1	SWITCH_1
0x400004c	            0x7e28	                           jle 0x4000076	        66	main.c	FUNCTION_1	SWITCH_1
0x400004e	          0x83ff20	                           cmp edi, 0x20	        66	main.c	FUNCTION_1	SWITCH_1
0x4000051	    0x48c7c0000000	                              mov rax, 0	        78	main.c	FUNCTION_1	SWITCH_1
0x4000058	            0x741a	                            je 0x4000074	        66	main.c	FUNCTION_1	SWITCH_1
0x400005a	            0x7e46	                           jle 0x40000a2	        66	main.c	FUNCTION_1	SWITCH_1
0x400005c	          0x83ff40	                           cmp edi, 0x40	        66	main.c	FUNCTION_1	SWITCH_1
0x400005f	    0x48c7c0000000	                              mov rax, 0	        80	main.c	FUNCTION_1	SWITCH_1
0x4000066	            0x740c	                            je 0x4000074	        66	main.c	FUNCTION_1	SWITCH_1
0x4000068	          0x83c780	             add edi, 0xffffffffffffff80	        66	main.c	FUNCTION_1	SWITCH_1
0x400006b	    0x48c7c0000000	                              mov rax, 0	        82	main.c	FUNCTION_1	SWITCH_1
0x4000072	            0x7526	                           jne 0x400009a	        66	main.c	FUNCTION_1	SWITCH_1
0x4000074	            0xf3c3	                                     ret	        86	main.c	FUNCTION_1
0x4000076	          0x83ff02	                              cmp edi, 2	        66	main.c	FUNCTION_1	SWITCH_1
0x4000079	    0x48c7c0000000	                              mov rax, 0	        68	main.c	FUNCTION_1	SWITCH_1
0x4000080	            0x74f2	                            je 0x4000074	        66	main.c	FUNCTION_1	SWITCH_1
0x4000082	          0x83ff04	                              cmp edi, 4	        66	main.c	FUNCTION_1	SWITCH_1
0x4000085	    0x48c7c0000000	                              mov rax, 0	        76	main.c	FUNCTION_1	SWITCH_1
0x400008c	            0x74e6	                            je 0x4000074	        66	main.c	FUNCTION_1	SWITCH_1
0x400008e	          0x83ff01	                              cmp edi, 1	        66	main.c	FUNCTION_1	SWITCH_1
0x4000091	    0x48c7c0000000	                              mov rax, 0	        72	main.c	FUNCTION_1	SWITCH_1
0x4000098	            0x7416	                            je 0x40000b0	        66	main.c	FUNCTION_1	SWITCH_1
0x400009a	    0x48c7c0000000	                              mov rax, 0	        84	main.c	FUNCTION_1	SWITCH_1
0x40000a1	              0xc3	                                     ret	        86	main.c	FUNCTION_1
0x40000a2	          0x83ff10	                           cmp edi, 0x10	        66	main.c	FUNCTION_1	SWITCH_1
0x40000a5	    0x48c7c0000000	                              mov rax, 0	        70	main.c	FUNCTION_1	SWITCH_1
0x40000ac	            0x75ec	                           jne 0x400009a	        66	main.c	FUNCTION_1	SWITCH_1
0x40000ae	            0xf3c3	                                     ret	        86	main.c	FUNCTION_1
0x40000b0	            0xf3c3	                                     ret	        86	main.c	FUNCTION_1
dpm_suspend_end	WHILE,0:SWITCH,0:functions,0:FOR,0:ELSE,0:DO,0:IF,2:CALL,4	32
0x4002d90	            0x4154	                                push r12	      1635	main.c	FUNCTION_66
0x4002d92	              0x55	                                push rbp	      1635	main.c	FUNCTION_66
0x4002d93	              0x53	                                push rbx	      1635	main.c	FUNCTION_66
0x4002d94	            0x89fb	                            mov ebx, edi	      1635	main.c	FUNCTION_66
0x4002d96	      0xe800000000	                          call 0x4002d9b	      1636	main.c	FUNCTION_66	CALL_1
0x4002d9b	            0x85c0	                           test eax, eax	      1637	main.c	FUNCTION_66	IF_1
0x4002d9d	            0x89c5	                            mov ebp, eax	      1636	main.c	FUNCTION_66	CALL_1
0x4002d9f	            0x7405	                            je 0x4002da6	      1637	main.c	FUNCTION_66	IF_1
0x4002da1	              0x5b	                                 pop rbx	      1647	main.c	FUNCTION_66
0x4002da2	              0x5d	                                 pop rbp	      1647	main.c	FUNCTION_66
0x4002da3	            0x415c	                                 pop r12	      1647	main.c	FUNCTION_66
0x4002da5	              0xc3	                                     ret	      1647	main.c	FUNCTION_66
0x4002da6	            0x89df	                            mov edi, ebx	      1640	main.c	FUNCTION_66	CALL_2
0x4002da8	      0xe800000000	                          call 0x4002dad	      1640	main.c	FUNCTION_66	CALL_2
0x4002dad	          0x4189c4	                           mov r12d, eax	      1640	main.c	FUNCTION_66	CALL_2
0x4002db0	            0x89e8	                            mov eax, ebp	      1646	main.c	FUNCTION_66
0x4002db2	          0x4585e4	                         test r12d, r12d	      1641	main.c	FUNCTION_66	IF_2
0x4002db5	            0x74ea	                            je 0x4002da1	      1641	main.c	FUNCTION_66	IF_2
0x4002db7	          0x83eb01	                              sub ebx, 1	      1641	main.c	FUNCTION_66	IF_2
0x4002dba	            0x31ff	                            xor edi, edi	      1193	main.c	FUNCTION_50	SWITCH_1
0x4002dbc	          0x83fb07	                              cmp ebx, 7	      1193	main.c	FUNCTION_50	SWITCH_1
0x4002dbf	            0x760d	                           jbe 0x4002dce	      1193	main.c	FUNCTION_50	SWITCH_1
0x4002dc1	      0xe800000000	                          call 0x4002dc6	      1642	main.c	FUNCTION_66	IF_2	CALL_4
0x4002dc6	          0x4489e0	                           mov eax, r12d	      1643	main.c	FUNCTION_66	IF_2
0x4002dc9	              0x5b	                                 pop rbx	      1647	main.c	FUNCTION_66
0x4002dca	              0x5d	                                 pop rbp	      1647	main.c	FUNCTION_66
0x4002dcb	            0x415c	                                 pop r12	      1647	main.c	FUNCTION_66
0x4002dcd	              0xc3	                                     ret	      1647	main.c	FUNCTION_66
0x4002dce	    0x8b3c9d000000	                  mov edi, dword [rbx*4]	      1647	main.c	FUNCTION_66
0x4002dd5	      0xe800000000	                          call 0x4002dda	      1642	main.c	FUNCTION_66	IF_2	CALL_4
0x4002dda	          0x4489e0	                           mov eax, r12d	      1643	main.c	FUNCTION_66	IF_2
0x4002ddd	            0xebea	                           jmp 0x4002dc9	      1643	main.c	FUNCTION_66	IF_2
pm_late_early_op	WHILE,0:SWITCH,1:functions,0:FOR,0:ELSE,0:DO,0:IF,0:CALL,0	32
0x4000110	          0x83fe08	                              cmp esi, 8	       345	main.c	FUNCTION_20	SWITCH_1
0x4000113	            0x743e	                            je 0x4000153	       345	main.c	FUNCTION_20	SWITCH_1
0x4000115	            0x7e11	                           jle 0x4000128	       345	main.c	FUNCTION_20	SWITCH_1
0x4000117	          0x83fe20	                           cmp esi, 0x20	       345	main.c	FUNCTION_20	SWITCH_1
0x400011a	            0x7428	                            je 0x4000144	       345	main.c	FUNCTION_20	SWITCH_1
0x400011c	            0x7e2b	                           jle 0x4000149	       345	main.c	FUNCTION_20	SWITCH_1
0x400011e	          0x83fe40	                           cmp esi, 0x40	       345	main.c	FUNCTION_20	SWITCH_1
0x4000121	            0x751c	                           jne 0x400013f	       345	main.c	FUNCTION_20	SWITCH_1
0x4000123	        0x488b4768	            mov rax, qword [rdi + 0x68] 	       362	main.c	FUNCTION_20	SWITCH_1
0x4000127	              0xc3	                                     ret	       362	main.c	FUNCTION_20	SWITCH_1
0x4000128	          0x83fe02	                              cmp esi, 2	       345	main.c	FUNCTION_20	SWITCH_1
0x400012b	            0x742b	                            je 0x4000158	       345	main.c	FUNCTION_20	SWITCH_1
0x400012d	          0x83fe04	                              cmp esi, 4	       345	main.c	FUNCTION_20	SWITCH_1
0x4000130	            0x7505	                           jne 0x4000137	       345	main.c	FUNCTION_20	SWITCH_1
0x4000132	        0x488b4760	            mov rax, qword [rdi + 0x60] 	       357	main.c	FUNCTION_20	SWITCH_1
0x4000136	              0xc3	                                     ret	       357	main.c	FUNCTION_20	SWITCH_1
0x4000137	          0x83fe01	                              cmp esi, 1	       345	main.c	FUNCTION_20	SWITCH_1
0x400013a	            0x7417	                            je 0x4000153	       345	main.c	FUNCTION_20	SWITCH_1
0x400013c	            0x31c0	                            xor eax, eax	       366	main.c	FUNCTION_20
0x400013e	              0xc3	                                     ret	       367	main.c	FUNCTION_20
0x400013f	          0x83c680	             add esi, 0xffffffffffffff80	       345	main.c	FUNCTION_20	SWITCH_1
0x4000142	            0x75f8	                           jne 0x400013c	       345	main.c	FUNCTION_20	SWITCH_1
0x4000144	        0x488b4758	            mov rax, qword [rdi + 0x58] 	       360	main.c	FUNCTION_20	SWITCH_1
0x4000148	              0xc3	                                     ret	       360	main.c	FUNCTION_20	SWITCH_1
0x4000149	          0x83fe10	                           cmp esi, 0x10	       345	main.c	FUNCTION_20	SWITCH_1
0x400014c	            0x75ee	                           jne 0x400013c	       345	main.c	FUNCTION_20	SWITCH_1
0x400014e	        0x488b4748	            mov rax, qword [rdi + 0x48] 	       350	main.c	FUNCTION_20	SWITCH_1
0x4000152	              0xc3	                                     ret	       350	main.c	FUNCTION_20	SWITCH_1
0x4000153	        0x488b4750	            mov rax, qword [rdi + 0x50] 	       355	main.c	FUNCTION_20	SWITCH_1
0x4000157	              0xc3	                                     ret	       355	main.c	FUNCTION_20	SWITCH_1
0x4000158	        0x488b4740	            mov rax, qword [rdi + 0x40] 	       348	main.c	FUNCTION_20	SWITCH_1
0x400015c	              0xc3	                                     ret	       348	main.c	FUNCTION_20	SWITCH_1
dpm_resume_start	WHILE,0:SWITCH,0:functions,0:FOR,0:ELSE,0:DO,0:IF,0:CALL,2	6
0x40020f0	              0x53	                                push rbx	       921	main.c	FUNCTION_43
0x40020f1	            0x89fb	                            mov ebx, edi	       921	main.c	FUNCTION_43
0x40020f3	      0xe800000000	                          call 0x40020f8	       922	main.c	FUNCTION_43	CALL_1
0x40020f8	            0x89df	                            mov edi, ebx	       923	main.c	FUNCTION_43	CALL_2
0x40020fa	              0x5b	                                 pop rbx	       924	main.c	FUNCTION_43
0x40020fb	      0xe920fdffff	                jmp sym.dpm_resume_early	       923	main.c	FUNCTION_43	CALL_2
async_resume	WHILE,0:SWITCH,0:functions,0:FOR,0:ELSE,0:DO,0:IF,1:CALL,3	15
0x4000c50	    0x8b3500000000	            mov esi, dword [0x04000c56] 	      1021	main.c	FUNCTION_45	CALL_1
0x4000c56	              0x53	                                push rbx	      1017	main.c	FUNCTION_45
0x4000c57	      0xba01000000	                              mov edx, 1	      1021	main.c	FUNCTION_45	CALL_1
0x4000c5c	          0x4889fb	                            mov rbx, rdi	      1017	main.c	FUNCTION_45
0x4000c5f	      0xe81cfeffff	                  call sym.device_resume	      1021	main.c	FUNCTION_45	CALL_1
0x4000c64	            0x85c0	                           test eax, eax	      1022	main.c	FUNCTION_45	IF_1
0x4000c66	            0x7417	                            je 0x4000c7f	      1022	main.c	FUNCTION_45	IF_1
0x4000c68	    0x8b3500000000	            mov esi, dword [0x04000c6e] 	      1023	main.c	FUNCTION_45	CALL_2
0x4000c6e	            0x89c1	                            mov ecx, eax	      1023	main.c	FUNCTION_45	CALL_2
0x4000c70	    0x48c7c2000000	                              mov rdx, 0	      1023	main.c	FUNCTION_45	CALL_2
0x4000c77	          0x4889df	                            mov rdi, rbx	      1023	main.c	FUNCTION_45	CALL_2
0x4000c7a	      0xe8f1f8ffff	                     call sym.pm_dev_err	      1023	main.c	FUNCTION_45	CALL_2
0x4000c7f	          0x4889df	                            mov rdi, rbx	      1024	main.c	FUNCTION_45	CALL_3
0x4000c82	              0x5b	                                 pop rbx	      1025	main.c	FUNCTION_45
0x4000c83	      0xe900000000	                           jmp 0x4000c88	      1024	main.c	FUNCTION_45	CALL_3
device_pm_wait_for_dev	WHILE,0:SWITCH,0:functions,0:FOR,0:ELSE,0:DO,0:IF,0:CALL,1	8
0x40004e0	          0x4889f0	                            mov rax, rsi	      2060	main.c	FUNCTION_77
0x40004e3	     0xfb6b7cc0000	           movzx esi, byte [rdi + 0xcc] 	      2061	main.c	FUNCTION_77	CALL_1
0x40004ea	          0x4889c7	                            mov rdi, rax	      2061	main.c	FUNCTION_77	CALL_1
0x40004ed	          0x40d0ee	                              shr sil, 1	      2061	main.c	FUNCTION_77	CALL_1
0x40004f0	          0x83e601	                              and esi, 1	      2061	main.c	FUNCTION_77	CALL_1
0x40004f3	      0xe8a8ffffff	                       call sym.dpm_wait	      2061	main.c	FUNCTION_77	CALL_1
0x40004f8	    0x8b0500000000	            mov eax, dword [0x040004fe] 	      2063	main.c	FUNCTION_77
0x40004fe	              0xc3	                                     ret	      2063	main.c	FUNCTION_77
dpm_subsys_suspend_late_cb	WHILE,0:SWITCH,0:functions,0:FOR,0:ELSE,4:DO,0:IF,5:CALL,4	41
0x4000340	    0x488b87e00100	           mov rax, qword [rdi + 0x1e0] 	      1469	main.c	FUNCTION_61	IF_1
0x4000347	          0x4885c0	                           test rax, rax	      1469	main.c	FUNCTION_61	IF_1
0x400034a	            0x741c	                            je 0x4000368	      1469	main.c	FUNCTION_61	IF_1
0x400034c	          0x4889c7	                            mov rdi, rax	      1471	main.c	FUNCTION_61	IF_1	CALL_1
0x400034f	      0xe8bcfdffff	               call sym.pm_late_early_op	      1471	main.c	FUNCTION_61	IF_1	CALL_1
0x4000354	    0x48c7c1000000	                              mov rcx, 0	      1470	main.c	FUNCTION_61	IF_1
0x400035b	          0x4885d2	                           test rdx, rdx	      1485	main.c	FUNCTION_61	IF_5
0x400035e	            0x7406	                            je 0x4000366	      1485	main.c	FUNCTION_61	IF_5
0x4000360	          0x48890a	                    mov qword [rdx], rcx	      1486	main.c	FUNCTION_61	IF_5
0x4000363	              0xc3	                                     ret	      1486	main.c	FUNCTION_61	IF_5
0x4000364	            0x31c0	                            xor eax, eax	      1482	main.c	FUNCTION_61	ELSE_4
0x4000366	            0xf3c3	                                     ret	      1489	main.c	FUNCTION_61
0x4000368	        0x488b4758	            mov rax, qword [rdi + 0x58] 	      1472	main.c	FUNCTION_61	ELSE_1	IF_2
0x400036c	          0x4885c0	                           test rax, rax	      1472	main.c	FUNCTION_61	ELSE_1	IF_2
0x400036f	            0x741a	                            je 0x400038b	      1472	main.c	FUNCTION_61	ELSE_1	IF_2
0x4000371	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1472	main.c	FUNCTION_61	ELSE_1	IF_2
0x4000375	          0x4885c0	                           test rax, rax	      1472	main.c	FUNCTION_61	ELSE_1	IF_2
0x4000378	            0x7411	                            je 0x400038b	      1472	main.c	FUNCTION_61	ELSE_1	IF_2
0x400037a	          0x4889c7	                            mov rdi, rax	      1474	main.c	FUNCTION_61	ELSE_1	IF_2	CALL_2
0x400037d	      0xe88efdffff	               call sym.pm_late_early_op	      1474	main.c	FUNCTION_61	ELSE_1	IF_2	CALL_2
0x4000382	    0x48c7c1000000	                              mov rcx, 0	      1473	main.c	FUNCTION_61	ELSE_1	IF_2
0x4000389	            0xebd0	                           jmp 0x400035b	      1474	main.c	FUNCTION_61	ELSE_1	IF_2	CALL_2
0x400038b	    0x488b87a00200	           mov rax, qword [rdi + 0x2a0] 	      1475	main.c	FUNCTION_61	ELSE_2	IF_3
0x4000392	          0x4885c0	                           test rax, rax	      1475	main.c	FUNCTION_61	ELSE_2	IF_3
0x4000395	            0x741a	                            je 0x40003b1	      1475	main.c	FUNCTION_61	ELSE_2	IF_3
0x4000397	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1475	main.c	FUNCTION_61	ELSE_2	IF_3
0x400039b	          0x4885c0	                           test rax, rax	      1475	main.c	FUNCTION_61	ELSE_2	IF_3
0x400039e	            0x7411	                            je 0x40003b1	      1475	main.c	FUNCTION_61	ELSE_2	IF_3
0x40003a0	          0x4889c7	                            mov rdi, rax	      1477	main.c	FUNCTION_61	ELSE_2	IF_3	CALL_3
0x40003a3	      0xe868fdffff	               call sym.pm_late_early_op	      1477	main.c	FUNCTION_61	ELSE_2	IF_3	CALL_3
0x40003a8	    0x48c7c1000000	                              mov rcx, 0	      1476	main.c	FUNCTION_61	ELSE_2	IF_3
0x40003af	            0xebaa	                           jmp 0x400035b	      1477	main.c	FUNCTION_61	ELSE_2	IF_3	CALL_3
0x40003b1	    0x488b87800000	            mov rax, qword [rdi + 0x80] 	      1478	main.c	FUNCTION_61	ELSE_3	IF_4
0x40003b8	          0x4885c0	                           test rax, rax	      1478	main.c	FUNCTION_61	ELSE_3	IF_4
0x40003bb	            0x74a7	                            je 0x4000364	      1478	main.c	FUNCTION_61	ELSE_3	IF_4
0x40003bd	    0x488bb8880000	            mov rdi, qword [rax + 0x88] 	      1478	main.c	FUNCTION_61	ELSE_3	IF_4
0x40003c4	          0x4885ff	                           test rdi, rdi	      1478	main.c	FUNCTION_61	ELSE_3	IF_4
0x40003c7	            0x749b	                            je 0x4000364	      1478	main.c	FUNCTION_61	ELSE_3	IF_4
0x40003c9	      0xe842fdffff	               call sym.pm_late_early_op	      1480	main.c	FUNCTION_61	ELSE_3	IF_4	CALL_4
0x40003ce	    0x48c7c1000000	                              mov rcx, 0	      1479	main.c	FUNCTION_61	ELSE_3	IF_4
0x40003d5	            0xeb84	                           jmp 0x400035b	      1480	main.c	FUNCTION_61	ELSE_3	IF_4	CALL_4
dpm_wait_fn	WHILE,0:SWITCH,0:functions,0:FOR,0:ELSE,0:DO,0:IF,0:CALL,1	4
0x40004d0	           0xfb636	                   movzx esi, byte [rsi]	       238	main.c	FUNCTION_13	CALL_1
0x40004d3	      0xe8c8ffffff	                       call sym.dpm_wait	       238	main.c	FUNCTION_13	CALL_1
0x40004d8	            0x31c0	                            xor eax, eax	       240	main.c	FUNCTION_13
0x40004da	              0xc3	                                     ret	       240	main.c	FUNCTION_13
async_resume_early	WHILE,0:SWITCH,0:functions,0:FOR,0:ELSE,0:DO,0:IF,1:CALL,3	15
0x4000a40	    0x8b3500000000	            mov esi, dword [0x04000a46] 	       857	main.c	FUNCTION_41	CALL_1
0x4000a46	              0x53	                                push rbx	       853	main.c	FUNCTION_41
0x4000a47	      0xba01000000	                              mov edx, 1	       857	main.c	FUNCTION_41	CALL_1
0x4000a4c	          0x4889fb	                            mov rbx, rdi	       853	main.c	FUNCTION_41
0x4000a4f	      0xe88cfeffff	            call sym.device_resume_early	       857	main.c	FUNCTION_41	CALL_1
0x4000a54	            0x85c0	                           test eax, eax	       858	main.c	FUNCTION_41	IF_1
0x4000a56	            0x7417	                            je 0x4000a6f	       858	main.c	FUNCTION_41	IF_1
0x4000a58	    0x8b3500000000	            mov esi, dword [0x04000a5e] 	       859	main.c	FUNCTION_41	CALL_2
0x4000a5e	            0x89c1	                            mov ecx, eax	       859	main.c	FUNCTION_41	CALL_2
0x4000a60	    0x48c7c2000000	                              mov rdx, 0	       859	main.c	FUNCTION_41	CALL_2
0x4000a67	          0x4889df	                            mov rdi, rbx	       859	main.c	FUNCTION_41	CALL_2
0x4000a6a	      0xe801fbffff	                     call sym.pm_dev_err	       859	main.c	FUNCTION_41	CALL_2
0x4000a6f	          0x4889df	                            mov rdi, rbx	       861	main.c	FUNCTION_41	CALL_3
0x4000a72	              0x5b	                                 pop rbx	       862	main.c	FUNCTION_41
0x4000a73	      0xe900000000	                           jmp 0x4000a78	       861	main.c	FUNCTION_41	CALL_3
__device_suspend_late	WHILE,0:SWITCH,0:functions,0:FOR,0:ELSE,0:DO,0:IF,7:CALL,13	103
0x4001760	            0x4154	                                push r12	      1500	main.c	FUNCTION_62
0x4001762	              0x55	                                push rbp	      1500	main.c	FUNCTION_62
0x4001763	          0x4189f4	                           mov r12d, esi	      1500	main.c	FUNCTION_62
0x4001766	              0x53	                                push rbx	      1500	main.c	FUNCTION_62
0x4001767	            0x89d5	                            mov ebp, edx	      1500	main.c	FUNCTION_62
0x4001769	          0x4889fb	                            mov rbx, rdi	      1500	main.c	FUNCTION_62
0x400176c	        0x4883ec10	                           sub rsp, 0x10	      1500	main.c	FUNCTION_62
0x4001770	    0x8b3500000000	            mov esi, dword [0x04001776] 	      1505	main.c	FUNCTION_62	CALL_1
0x4001776	    0x65488b042528	                mov rax, qword gs:[0x28]	      1500	main.c	FUNCTION_62
0x400177f	      0x4889442408	                mov qword [rsp + 8], rax	      1500	main.c	FUNCTION_62
0x4001784	            0x31c0	                            xor eax, eax	      1500	main.c	FUNCTION_62
0x4001786	            0x85f6	                           test esi, esi	      1505	main.c	FUNCTION_62	CALL_1
0x4001788	     0xf85bd000000	                           jne 0x400184b	      1505	main.c	FUNCTION_62	CALL_1
0x400178e	            0x31f6	                            xor esi, esi	      1508	main.c	FUNCTION_62	CALL_3
0x4001790	          0x4889df	                            mov rdi, rbx	      1508	main.c	FUNCTION_62	CALL_3
0x4001793	      0xe800000000	                          call 0x4001798	      1508	main.c	FUNCTION_62	CALL_3
0x4001798	        0x400fb6f5	                          movzx esi, bpl	      1510	main.c	FUNCTION_62	CALL_4
0x400179c	          0x4889df	                            mov rdi, rbx	      1510	main.c	FUNCTION_62	CALL_4
0x400179f	      0xe8dceeffff	       call sym.dpm_wait_for_subordinate	      1510	main.c	FUNCTION_62	CALL_4
0x40017a4	    0x8b1500000000	            mov edx, dword [0x040017aa] 	      1512	main.c	FUNCTION_62	IF_1
0x40017aa	            0x85d2	                           test edx, edx	      1512	main.c	FUNCTION_62	IF_1
0x40017ac	            0x7445	                            je 0x40017f3	      1512	main.c	FUNCTION_62	IF_1
0x40017ae	            0x31ed	                            xor ebp, ebp	      1545	main.c	FUNCTION_62
0x40017b0	    0x8b0500000000	            mov eax, dword [0x040017b6] 	      1548	main.c	FUNCTION_62	CALL_12
0x40017b6	            0x85c0	                           test eax, eax	      1548	main.c	FUNCTION_62	CALL_12
0x40017b8	            0x740e	                            je 0x40017c8	      1548	main.c	FUNCTION_62	CALL_12
0x40017ba	    0x48c7c7000000	                              mov rdi, 0	      1548	main.c	FUNCTION_62	CALL_12
0x40017c1	            0x89ee	                            mov esi, ebp	      1548	main.c	FUNCTION_62	CALL_12
0x40017c3	      0xe800000000	                          call 0x40017c8	      1548	main.c	FUNCTION_62	CALL_12
0x40017c8	    0x488dbbe80000	                   lea rdi, [rbx + 0xe8]	      1549	main.c	FUNCTION_62	CALL_13
0x40017cf	      0xe800000000	                          call 0x40017d4	      1549	main.c	FUNCTION_62	CALL_13
0x40017d4	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1551	main.c	FUNCTION_62
0x40017d9	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      1551	main.c	FUNCTION_62
0x40017e2	            0x89e8	                            mov eax, ebp	      1551	main.c	FUNCTION_62
0x40017e4	     0xf850a010000	                           jne 0x40018f4	      1551	main.c	FUNCTION_62
0x40017ea	        0x4883c410	                           add rsp, 0x10	      1551	main.c	FUNCTION_62
0x40017ee	              0x5b	                                 pop rbx	      1551	main.c	FUNCTION_62
0x40017ef	              0x5d	                                 pop rbp	      1551	main.c	FUNCTION_62
0x40017f0	            0x415c	                                 pop r12	      1551	main.c	FUNCTION_62
0x40017f2	              0xc3	                                     ret	      1551	main.c	FUNCTION_62
0x40017f3	      0xe800000000	                          call 0x40017f8	      1515	main.c	FUNCTION_62	IF_2	CALL_5
0x40017f8	            0x84c0	                             test al, al	      1515	main.c	FUNCTION_62	IF_2	CALL_5
0x40017fa	            0x7575	                           jne 0x4001871	      1515	main.c	FUNCTION_62	IF_2	CALL_5
0x40017fc	    0xf68310010000	              test byte [rbx + 0x110], 2	      1520	main.c	FUNCTION_62	IF_3
0x4001803	            0x75a9	                           jne 0x40017ae	      1520	main.c	FUNCTION_62	IF_3
0x4001805	    0xf683cd000000	               test byte [rbx + 0xcd], 1	      1520	main.c	FUNCTION_62	IF_3
0x400180c	            0x75a0	                           jne 0x40017ae	      1520	main.c	FUNCTION_62	IF_3
0x400180e	          0x4889e2	                            mov rdx, rsp	      1523	main.c	FUNCTION_62	CALL_6
0x4001811	          0x4489e6	                           mov esi, r12d	      1523	main.c	FUNCTION_62	CALL_6
0x4001814	          0x4889df	                            mov rdi, rbx	      1523	main.c	FUNCTION_62	CALL_6
0x4001817	      0xe824ebffff	     call sym.dpm_subsys_suspend_late_cb	      1523	main.c	FUNCTION_62	CALL_6
0x400181c	          0x4885c0	                           test rax, rax	      1524	main.c	FUNCTION_62	IF_4
0x400181f	          0x4989c0	                             mov r8, rax	      1523	main.c	FUNCTION_62	CALL_6
0x4001822	            0x745e	                            je 0x4001882	      1524	main.c	FUNCTION_62	IF_4
0x4001824	        0x488b0c24	                    mov rcx, qword [rsp]	      1524	main.c	FUNCTION_62	IF_4
0x4001828	          0x4489e2	                           mov edx, r12d	      1537	main.c	FUNCTION_62	CALL_10
0x400182b	          0x4889de	                            mov rsi, rbx	      1537	main.c	FUNCTION_62	CALL_10
0x400182e	          0x4c89c7	                             mov rdi, r8	      1537	main.c	FUNCTION_62	CALL_10
0x4001831	      0xe84aefffff	               call sym.dpm_run_callback	      1537	main.c	FUNCTION_62	CALL_10
0x4001836	            0x85c0	                           test eax, eax	      1538	main.c	FUNCTION_62	IF_7
0x4001838	            0x89c5	                            mov ebp, eax	      1537	main.c	FUNCTION_62	CALL_10
0x400183a	     0xf848c000000	                            je 0x40018cc	      1538	main.c	FUNCTION_62	IF_7
0x4001840	    0x890500000000	            mov dword [0x04001846], eax 	      1539	main.c	FUNCTION_62	IF_7
0x4001846	      0xe965ffffff	                           jmp 0x40017b0	      1540	main.c	FUNCTION_62	IF_7
0x400184b	      0xe800000000	                          call 0x4001850	      1505	main.c	FUNCTION_62	CALL_1
0x4001850	    0x8b0d00000000	            mov ecx, dword [0x04001856] 	      1506	main.c	FUNCTION_62	CALL_2
0x4001856	            0x85c9	                           test ecx, ecx	      1506	main.c	FUNCTION_62	CALL_2
0x4001858	     0xf8430ffffff	                            je 0x400178e	      1506	main.c	FUNCTION_62	CALL_2
0x400185e	    0x48c7c7000000	                              mov rdi, 0	      1506	main.c	FUNCTION_62	CALL_2
0x4001865	            0x31f6	                            xor esi, esi	      1506	main.c	FUNCTION_62	CALL_2
0x4001867	      0xe800000000	                          call 0x400186c	      1506	main.c	FUNCTION_62	CALL_2
0x400186c	      0xe91dffffff	                           jmp 0x400178e	      1506	main.c	FUNCTION_62	CALL_2
0x4001871	    0xc70500000000	     mov dword [0x0400187b], 0xfffffff0 	      1516	main.c	FUNCTION_62	IF_2
0x400187b	            0x31ed	                            xor ebp, ebp	      1503	main.c	FUNCTION_62
0x400187d	      0xe92effffff	                           jmp 0x40017b0	      1517	main.c	FUNCTION_62	IF_2
0x4001882	    0xf683d0000000	               test byte [rbx + 0xd0], 4	      2119	main.c	FUNCTION_81	CALL_1
0x4001889	            0x7409	                            je 0x4001894	      2119	main.c	FUNCTION_81	CALL_1
0x400188b	    0x83bb9c010000	              cmp dword [rbx + 0x19c], 2	      2119	main.c	FUNCTION_81	CALL_1
0x4001892	            0x744c	                            je 0x40018e0	      2119	main.c	FUNCTION_81	CALL_1
0x4001894	    0x488b83880000	            mov rax, qword [rbx + 0x88] 	      1531	main.c	FUNCTION_62	IF_6
0x400189b	          0x4885c0	                           test rax, rax	      1531	main.c	FUNCTION_62	IF_6
0x400189e	            0x7484	                            je 0x4001824	      1531	main.c	FUNCTION_62	IF_6
0x40018a0	        0x488b7868	            mov rdi, qword [rax + 0x68] 	      1531	main.c	FUNCTION_62	IF_6
0x40018a4	          0x4885ff	                           test rdi, rdi	      1531	main.c	FUNCTION_62	IF_6
0x40018a7	     0xf8477ffffff	                            je 0x4001824	      1531	main.c	FUNCTION_62	IF_6
0x40018ad	          0x4489e6	                           mov esi, r12d	      1533	main.c	FUNCTION_62	IF_6	CALL_9
0x40018b0	    0x48c704240000	                      mov qword [rsp], 0	      1532	main.c	FUNCTION_62	IF_6
0x40018b8	      0xe853e8ffff	               call sym.pm_late_early_op	      1533	main.c	FUNCTION_62	IF_6	CALL_9
0x40018bd	    0x48c7c1000000	                              mov rcx, 0	      1533	main.c	FUNCTION_62	IF_6	CALL_9
0x40018c4	          0x4989c0	                             mov r8, rax	      1533	main.c	FUNCTION_62	IF_6	CALL_9
0x40018c7	      0xe95cffffff	                           jmp 0x4001828	      1533	main.c	FUNCTION_62	IF_6	CALL_9
0x40018cc	          0x4889df	                            mov rdi, rbx	      1542	main.c	FUNCTION_62	CALL_11
0x40018cf	      0xe82ceaffff	 call sym.dpm_propagate_wakeup_to_parent	      1542	main.c	FUNCTION_62	CALL_11
0x40018d4	    0x808bcc000000	              or byte [rbx + 0xcc], 0x40	      1545	main.c	FUNCTION_62
0x40018db	      0xe9cefeffff	                           jmp 0x40017ae	      1545	main.c	FUNCTION_62
0x40018e0	            0x31d2	                            xor edx, edx	      1528	main.c	FUNCTION_62	IF_5	CALL_8
0x40018e2	          0x4489e6	                           mov esi, r12d	      1528	main.c	FUNCTION_62	IF_5	CALL_8
0x40018e5	          0x4889df	                            mov rdi, rbx	      1528	main.c	FUNCTION_62	IF_5	CALL_8
0x40018e8	      0xe873e9ffff	    call sym.dpm_subsys_suspend_noirq_cb	      1528	main.c	FUNCTION_62	IF_5	CALL_8
0x40018ed	          0x4885c0	                           test rax, rax	      1527	main.c	FUNCTION_62	IF_5	CALL_7
0x40018f0	            0x75a2	                           jne 0x4001894	      1527	main.c	FUNCTION_62	IF_5	CALL_7
0x40018f2	            0xebe0	                           jmp 0x40018d4	      1527	main.c	FUNCTION_62	IF_5	CALL_7
0x40018f4	      0xe800000000	                          call 0x40018f9	      1551	main.c	FUNCTION_62
pm_ops_is_empty	WHILE,0:SWITCH,0:functions,0:FOR,0:ELSE,0:DO,0:IF,1:CALL,0	23
0x40003e0	          0x4885ff	                           test rdi, rdi	      2090	main.c	FUNCTION_79	IF_1
0x40003e3	            0x743d	                            je 0x4000422	      2090	main.c	FUNCTION_79	IF_1
0x40003e5	            0x31c0	                            xor eax, eax	      2090	main.c	FUNCTION_79	IF_1
0x40003e7	        0x48833f00	                      cmp qword [rdi], 0	      2099	main.c	FUNCTION_79
0x40003eb	            0x7402	                            je 0x40003ef	      2099	main.c	FUNCTION_79
0x40003ed	            0xf3c3	                                     ret	      2101	main.c	FUNCTION_79
0x40003ef	      0x48837f1000	               cmp qword [rdi + 0x10], 0	      2093	main.c	FUNCTION_79
0x40003f4	            0x75f7	                           jne 0x40003ed	      2093	main.c	FUNCTION_79
0x40003f6	      0x48837f4000	               cmp qword [rdi + 0x40], 0	      2094	main.c	FUNCTION_79
0x40003fb	            0x75f0	                           jne 0x40003ed	      2094	main.c	FUNCTION_79
0x40003fd	      0x48837f7000	               cmp qword [rdi + 0x70], 0	      2095	main.c	FUNCTION_79
0x4000402	            0x75e9	                           jne 0x40003ed	      2095	main.c	FUNCTION_79
0x4000404	      0x48837f7800	               cmp qword [rdi + 0x78], 0	      2096	main.c	FUNCTION_79
0x4000409	            0x75e2	                           jne 0x40003ed	      2096	main.c	FUNCTION_79
0x400040b	      0x48837f4800	               cmp qword [rdi + 0x48], 0	      2097	main.c	FUNCTION_79
0x4000410	            0x75db	                           jne 0x40003ed	      2097	main.c	FUNCTION_79
0x4000412	      0x48837f1800	               cmp qword [rdi + 0x18], 0	      2098	main.c	FUNCTION_79
0x4000417	            0x75d4	                           jne 0x40003ed	      2098	main.c	FUNCTION_79
0x4000419	      0x48837f0800	                  cmp qword [rdi + 8], 0	      2099	main.c	FUNCTION_79
0x400041e	           0xf94c0	                                 sete al	      2099	main.c	FUNCTION_79
0x4000421	              0xc3	                                     ret	      2099	main.c	FUNCTION_79
0x4000422	      0xb801000000	                              mov eax, 1	      2091	main.c	FUNCTION_79	IF_1
0x4000427	              0xc3	                                     ret	      2101	main.c	FUNCTION_79
pm_op	WHILE,0:SWITCH,1:functions,0:FOR,0:ELSE,0:DO,0:IF,0:CALL,0	32
0x40000c0	          0x83fe08	                              cmp esi, 8	       310	main.c	FUNCTION_19	SWITCH_1
0x40000c3	            0x743e	                            je 0x4000103	       310	main.c	FUNCTION_19	SWITCH_1
0x40000c5	            0x7e11	                           jle 0x40000d8	       310	main.c	FUNCTION_19	SWITCH_1
0x40000c7	          0x83fe20	                           cmp esi, 0x20	       310	main.c	FUNCTION_19	SWITCH_1
0x40000ca	            0x7428	                            je 0x40000f4	       310	main.c	FUNCTION_19	SWITCH_1
0x40000cc	            0x7e2b	                           jle 0x40000f9	       310	main.c	FUNCTION_19	SWITCH_1
0x40000ce	          0x83fe40	                           cmp esi, 0x40	       310	main.c	FUNCTION_19	SWITCH_1
0x40000d1	            0x751c	                           jne 0x40000ef	       310	main.c	FUNCTION_19	SWITCH_1
0x40000d3	        0x488b4738	            mov rax, qword [rdi + 0x38] 	       328	main.c	FUNCTION_19	SWITCH_1
0x40000d7	              0xc3	                                     ret	       328	main.c	FUNCTION_19	SWITCH_1
0x40000d8	          0x83fe02	                              cmp esi, 2	       310	main.c	FUNCTION_19	SWITCH_1
0x40000db	            0x742b	                            je 0x4000108	       310	main.c	FUNCTION_19	SWITCH_1
0x40000dd	          0x83fe04	                              cmp esi, 4	       310	main.c	FUNCTION_19	SWITCH_1
0x40000e0	            0x7505	                           jne 0x40000e7	       310	main.c	FUNCTION_19	SWITCH_1
0x40000e2	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       322	main.c	FUNCTION_19	SWITCH_1
0x40000e6	              0xc3	                                     ret	       322	main.c	FUNCTION_19	SWITCH_1
0x40000e7	          0x83fe01	                              cmp esi, 1	       310	main.c	FUNCTION_19	SWITCH_1
0x40000ea	            0x7417	                            je 0x4000103	       310	main.c	FUNCTION_19	SWITCH_1
0x40000ec	            0x31c0	                            xor eax, eax	       332	main.c	FUNCTION_19
0x40000ee	              0xc3	                                     ret	       333	main.c	FUNCTION_19
0x40000ef	          0x83c680	             add esi, 0xffffffffffffff80	       310	main.c	FUNCTION_19	SWITCH_1
0x40000f2	            0x75f8	                           jne 0x40000ec	       310	main.c	FUNCTION_19	SWITCH_1
0x40000f4	        0x488b4728	            mov rax, qword [rdi + 0x28] 	       325	main.c	FUNCTION_19	SWITCH_1
0x40000f8	              0xc3	                                     ret	       325	main.c	FUNCTION_19	SWITCH_1
0x40000f9	          0x83fe10	                           cmp esi, 0x10	       310	main.c	FUNCTION_19	SWITCH_1
0x40000fc	            0x75ee	                           jne 0x40000ec	       310	main.c	FUNCTION_19	SWITCH_1
0x40000fe	        0x488b4718	            mov rax, qword [rdi + 0x18] 	       315	main.c	FUNCTION_19	SWITCH_1
0x4000102	              0xc3	                                     ret	       315	main.c	FUNCTION_19	SWITCH_1
0x4000103	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       320	main.c	FUNCTION_19	SWITCH_1
0x4000107	              0xc3	                                     ret	       320	main.c	FUNCTION_19	SWITCH_1
0x4000108	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       313	main.c	FUNCTION_19	SWITCH_1
0x400010c	              0xc3	                                     ret	       313	main.c	FUNCTION_19	SWITCH_1
dpm_show_time	WHILE,0:SWITCH,0:functions,0:FOR,0:ELSE,0:DO,0:IF,1:CALL,6	59
0x40005c0	            0x4155	                                push r13	       419	main.c	FUNCTION_24
0x40005c2	            0x4154	                                push r12	       419	main.c	FUNCTION_24
0x40005c4	          0x4989fd	                            mov r13, rdi	       419	main.c	FUNCTION_24
0x40005c7	              0x55	                                push rbp	       419	main.c	FUNCTION_24
0x40005c8	              0x53	                                push rbx	       419	main.c	FUNCTION_24
0x40005c9	          0x4189d4	                           mov r12d, edx	       419	main.c	FUNCTION_24
0x40005cc	          0x4889cb	                            mov rbx, rcx	       419	main.c	FUNCTION_24
0x40005cf	            0x89f5	                            mov ebp, esi	       419	main.c	FUNCTION_24
0x40005d1	      0xe800000000	                          call 0x40005d6	       424	main.c	FUNCTION_24	CALL_1
0x40005d6	          0x4c29e8	                            sub rax, r13	       425	main.c	FUNCTION_24	CALL_3
0x40005d9	    0x49b8cff753e3	           movabs r8, 0x20c49ba5e353f7cf	       427	main.c	FUNCTION_24
0x40005e3	          0x4889c2	                            mov rdx, rax	       425	main.c	FUNCTION_24	CALL_3
0x40005e6	        0x48c1ea03	                              shr rdx, 3	       427	main.c	FUNCTION_24
0x40005ea	          0x4889d0	                            mov rax, rdx	       427	main.c	FUNCTION_24
0x40005ed	          0x49f7e0	                                  mul r8	       427	main.c	FUNCTION_24
0x40005f0	          0x4889d1	                            mov rcx, rdx	       427	main.c	FUNCTION_24
0x40005f3	        0x48c1e904	                              shr rcx, 4	       427	main.c	FUNCTION_24
0x40005f7	            0x85c9	                           test ecx, ecx	       428	main.c	FUNCTION_24	IF_1
0x40005f9	            0x746a	                            je 0x4000665	       428	main.c	FUNCTION_24	IF_1
0x40005fb	            0x89c8	                            mov eax, ecx	       428	main.c	FUNCTION_24	IF_1
0x40005fd	      0xbad34d6210	                     mov edx, 0x10624dd3	       428	main.c	FUNCTION_24	IF_1
0x4000602	            0xf7ea	                                imul edx	       428	main.c	FUNCTION_24	IF_1
0x4000604	            0x89c8	                            mov eax, ecx	       428	main.c	FUNCTION_24	IF_1
0x4000606	          0xc1f81f	                           sar eax, 0x1f	       428	main.c	FUNCTION_24	IF_1
0x4000609	          0xc1fa06	                              sar edx, 6	       428	main.c	FUNCTION_24	IF_1
0x400060c	            0x29c2	                            sub edx, eax	       428	main.c	FUNCTION_24	IF_1
0x400060e	    0x69c2e8030000	                    imul eax, edx, 0x3e8	       428	main.c	FUNCTION_24	IF_1
0x4000614	          0x4c63da	                         movsxd r11, edx	       428	main.c	FUNCTION_24	IF_1
0x4000617	            0x29c1	                            sub ecx, eax	       428	main.c	FUNCTION_24	IF_1
0x4000619	          0x4c63d1	                         movsxd r10, ecx	       428	main.c	FUNCTION_24	IF_1
0x400061c	          0x4585e4	                         test r12d, r12d	       431	main.c	FUNCTION_24	CALL_5
0x400061f	    0x48c7c0000000	                              mov rax, 0	       431	main.c	FUNCTION_24	CALL_5
0x4000626	    0x49c7c1000000	                               mov r9, 0	       431	main.c	FUNCTION_24	CALL_5
0x400062d	            0x89ef	                            mov edi, ebp	       431	main.c	FUNCTION_24	CALL_5
0x400062f	        0x4c0f44c8	                           cmove r9, rax	       431	main.c	FUNCTION_24	CALL_5
0x4000633	      0xe808faffff	                        call sym.pm_verb	       431	main.c	FUNCTION_24	CALL_5
0x4000638	          0x4885db	                           test rbx, rbx	       431	main.c	FUNCTION_24	CALL_5
0x400063b	          0x4989c0	                             mov r8, rax	       431	main.c	FUNCTION_24	CALL_5
0x400063e	          0x4889da	                            mov rdx, rbx	       431	main.c	FUNCTION_24	CALL_5
0x4000641	    0x48c7c1000000	                              mov rcx, 0	       431	main.c	FUNCTION_24	CALL_5
0x4000648	            0x7426	                            je 0x4000670	       431	main.c	FUNCTION_24	CALL_5
0x400064a	            0x4152	                                push r10	       431	main.c	FUNCTION_24	CALL_5
0x400064c	            0x4153	                                push r11	       431	main.c	FUNCTION_24	CALL_5
0x400064e	    0x48c7c6000000	                              mov rsi, 0	       431	main.c	FUNCTION_24	CALL_5
0x4000655	            0x31ff	                            xor edi, edi	       431	main.c	FUNCTION_24	CALL_5
0x4000657	      0xe800000000	                          call 0x400065c	       431	main.c	FUNCTION_24	CALL_5
0x400065c	              0x58	                                 pop rax	       435	main.c	FUNCTION_24
0x400065d	              0x5a	                                 pop rdx	       435	main.c	FUNCTION_24
0x400065e	              0x5b	                                 pop rbx	       435	main.c	FUNCTION_24
0x400065f	              0x5d	                                 pop rbp	       435	main.c	FUNCTION_24
0x4000660	            0x415c	                                 pop r12	       435	main.c	FUNCTION_24
0x4000662	            0x415d	                                 pop r13	       435	main.c	FUNCTION_24
0x4000664	              0xc3	                                     ret	       435	main.c	FUNCTION_24
0x4000665	          0x4531db	                          xor r11d, r11d	       435	main.c	FUNCTION_24
0x4000668	    0x41ba01000000	                             mov r10d, 1	       435	main.c	FUNCTION_24
0x400066e	            0xebac	                           jmp 0x400061c	       435	main.c	FUNCTION_24
0x4000670	    0x48c7c1000000	                              mov rcx, 0	       431	main.c	FUNCTION_24	CALL_5
0x4000677	          0x4889ca	                            mov rdx, rcx	       431	main.c	FUNCTION_24	CALL_5
0x400067a	            0xebce	                           jmp 0x400064a	       431	main.c	FUNCTION_24	CALL_5
dpm_wait	WHILE,0:SWITCH,0:functions,0:FOR,0:ELSE,0:DO,0:IF,2:CALL,1	12
0x40004a0	          0x4885ff	                           test rdi, rdi	       229	main.c	FUNCTION_12	IF_1
0x40004a3	            0x7424	                            je 0x40004c9	       229	main.c	FUNCTION_12	IF_1
0x40004a5	          0x4084f6	                           test sil, sil	       232	main.c	FUNCTION_12	IF_2
0x40004a8	            0x7513	                           jne 0x40004bd	       232	main.c	FUNCTION_12	IF_2
0x40004aa	    0x8b0500000000	            mov eax, dword [0x040004b0] 	       232	main.c	FUNCTION_12	IF_2
0x40004b0	            0x85c0	                           test eax, eax	       232	main.c	FUNCTION_12	IF_2
0x40004b2	            0x7415	                            je 0x40004c9	       232	main.c	FUNCTION_12	IF_2
0x40004b4	    0xf687cc000000	               test byte [rdi + 0xcc], 2	       232	main.c	FUNCTION_12	IF_2
0x40004bb	            0x740c	                            je 0x40004c9	       232	main.c	FUNCTION_12	IF_2
0x40004bd	    0x4881c7e80000	                           add rdi, 0xe8	       233	main.c	FUNCTION_12	CALL_1
0x40004c4	      0xe900000000	                           jmp 0x40004c9	       233	main.c	FUNCTION_12	CALL_1
0x40004c9	            0xf3c3	                                     ret	       233	main.c	FUNCTION_12	CALL_1
pm_noirq_op	WHILE,0:SWITCH,1:functions,0:FOR,0:ELSE,0:DO,0:IF,0:CALL,0	32
0x4000160	          0x83fe08	                              cmp esi, 8	       379	main.c	FUNCTION_21	SWITCH_1
0x4000163	            0x7447	                            je 0x40001ac	       379	main.c	FUNCTION_21	SWITCH_1
0x4000165	            0x7e14	                           jle 0x400017b	       379	main.c	FUNCTION_21	SWITCH_1
0x4000167	          0x83fe20	                           cmp esi, 0x20	       379	main.c	FUNCTION_21	SWITCH_1
0x400016a	            0x742e	                            je 0x400019a	       379	main.c	FUNCTION_21	SWITCH_1
0x400016c	            0x7e34	                           jle 0x40001a2	       379	main.c	FUNCTION_21	SWITCH_1
0x400016e	          0x83fe40	                           cmp esi, 0x40	       379	main.c	FUNCTION_21	SWITCH_1
0x4000171	            0x7522	                           jne 0x4000195	       379	main.c	FUNCTION_21	SWITCH_1
0x4000173	    0x488b87980000	            mov rax, qword [rdi + 0x98] 	       396	main.c	FUNCTION_21	SWITCH_1
0x400017a	              0xc3	                                     ret	       396	main.c	FUNCTION_21	SWITCH_1
0x400017b	          0x83fe02	                              cmp esi, 2	       379	main.c	FUNCTION_21	SWITCH_1
0x400017e	            0x7434	                            je 0x40001b4	       379	main.c	FUNCTION_21	SWITCH_1
0x4000180	          0x83fe04	                              cmp esi, 4	       379	main.c	FUNCTION_21	SWITCH_1
0x4000183	            0x7508	                           jne 0x400018d	       379	main.c	FUNCTION_21	SWITCH_1
0x4000185	    0x488b87900000	            mov rax, qword [rdi + 0x90] 	       391	main.c	FUNCTION_21	SWITCH_1
0x400018c	              0xc3	                                     ret	       391	main.c	FUNCTION_21	SWITCH_1
0x400018d	          0x83fe01	                              cmp esi, 1	       379	main.c	FUNCTION_21	SWITCH_1
0x4000190	            0x741a	                            je 0x40001ac	       379	main.c	FUNCTION_21	SWITCH_1
0x4000192	            0x31c0	                            xor eax, eax	       400	main.c	FUNCTION_21
0x4000194	              0xc3	                                     ret	       401	main.c	FUNCTION_21
0x4000195	          0x83c680	             add esi, 0xffffffffffffff80	       379	main.c	FUNCTION_21	SWITCH_1
0x4000198	            0x75f8	                           jne 0x4000192	       379	main.c	FUNCTION_21	SWITCH_1
0x400019a	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	       394	main.c	FUNCTION_21	SWITCH_1
0x40001a1	              0xc3	                                     ret	       394	main.c	FUNCTION_21	SWITCH_1
0x40001a2	          0x83fe10	                           cmp esi, 0x10	       379	main.c	FUNCTION_21	SWITCH_1
0x40001a5	            0x75eb	                           jne 0x4000192	       379	main.c	FUNCTION_21	SWITCH_1
0x40001a7	        0x488b4778	            mov rax, qword [rdi + 0x78] 	       384	main.c	FUNCTION_21	SWITCH_1
0x40001ab	              0xc3	                                     ret	       384	main.c	FUNCTION_21	SWITCH_1
0x40001ac	    0x488b87800000	            mov rax, qword [rdi + 0x80] 	       389	main.c	FUNCTION_21	SWITCH_1
0x40001b3	              0xc3	                                     ret	       389	main.c	FUNCTION_21	SWITCH_1
0x40001b4	        0x488b4770	            mov rax, qword [rdi + 0x70] 	       382	main.c	FUNCTION_21	SWITCH_1
0x40001b8	              0xc3	                                     ret	       382	main.c	FUNCTION_21	SWITCH_1
dpm_resume_end	WHILE,0:SWITCH,0:functions,0:FOR,0:ELSE,0:DO,0:IF,0:CALL,2	6
0x4002740	              0x53	                                push rbx	      1175	main.c	FUNCTION_49
0x4002741	            0x89fb	                            mov ebx, edi	      1175	main.c	FUNCTION_49
0x4002743	      0xe800000000	                          call 0x4002748	      1176	main.c	FUNCTION_49	CALL_1
0x4002748	            0x89df	                            mov edi, ebx	      1177	main.c	FUNCTION_49	CALL_2
0x400274a	              0x5b	                                 pop rbx	      1178	main.c	FUNCTION_49
0x400274b	      0xe9a0fcffff	                    jmp sym.dpm_complete	      1177	main.c	FUNCTION_49	CALL_2
dpm_subsys_suspend_noirq_cb	WHILE,0:SWITCH,0:functions,0:FOR,0:ELSE,4:DO,0:IF,5:CALL,4	41
0x4000260	    0x488b87e00100	           mov rax, qword [rdi + 0x1e0] 	      1228	main.c	FUNCTION_52	IF_1
0x4000267	          0x4885c0	                           test rax, rax	      1228	main.c	FUNCTION_52	IF_1
0x400026a	            0x741c	                            je 0x4000288	      1228	main.c	FUNCTION_52	IF_1
0x400026c	          0x4889c7	                            mov rdi, rax	      1230	main.c	FUNCTION_52	IF_1	CALL_1
0x400026f	      0xe8ecfeffff	                    call sym.pm_noirq_op	      1230	main.c	FUNCTION_52	IF_1	CALL_1
0x4000274	    0x48c7c1000000	                              mov rcx, 0	      1229	main.c	FUNCTION_52	IF_1
0x400027b	          0x4885d2	                           test rdx, rdx	      1244	main.c	FUNCTION_52	IF_5
0x400027e	            0x7406	                            je 0x4000286	      1244	main.c	FUNCTION_52	IF_5
0x4000280	          0x48890a	                    mov qword [rdx], rcx	      1245	main.c	FUNCTION_52	IF_5
0x4000283	              0xc3	                                     ret	      1245	main.c	FUNCTION_52	IF_5
0x4000284	            0x31c0	                            xor eax, eax	      1241	main.c	FUNCTION_52	ELSE_4
0x4000286	            0xf3c3	                                     ret	      1248	main.c	FUNCTION_52
0x4000288	        0x488b4758	            mov rax, qword [rdi + 0x58] 	      1231	main.c	FUNCTION_52	ELSE_1	IF_2
0x400028c	          0x4885c0	                           test rax, rax	      1231	main.c	FUNCTION_52	ELSE_1	IF_2
0x400028f	            0x741a	                            je 0x40002ab	      1231	main.c	FUNCTION_52	ELSE_1	IF_2
0x4000291	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1231	main.c	FUNCTION_52	ELSE_1	IF_2
0x4000295	          0x4885c0	                           test rax, rax	      1231	main.c	FUNCTION_52	ELSE_1	IF_2
0x4000298	            0x7411	                            je 0x40002ab	      1231	main.c	FUNCTION_52	ELSE_1	IF_2
0x400029a	          0x4889c7	                            mov rdi, rax	      1233	main.c	FUNCTION_52	ELSE_1	IF_2	CALL_2
0x400029d	      0xe8befeffff	                    call sym.pm_noirq_op	      1233	main.c	FUNCTION_52	ELSE_1	IF_2	CALL_2
0x40002a2	    0x48c7c1000000	                              mov rcx, 0	      1232	main.c	FUNCTION_52	ELSE_1	IF_2
0x40002a9	            0xebd0	                           jmp 0x400027b	      1233	main.c	FUNCTION_52	ELSE_1	IF_2	CALL_2
0x40002ab	    0x488b87a00200	           mov rax, qword [rdi + 0x2a0] 	      1234	main.c	FUNCTION_52	ELSE_2	IF_3
0x40002b2	          0x4885c0	                           test rax, rax	      1234	main.c	FUNCTION_52	ELSE_2	IF_3
0x40002b5	            0x741a	                            je 0x40002d1	      1234	main.c	FUNCTION_52	ELSE_2	IF_3
0x40002b7	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1234	main.c	FUNCTION_52	ELSE_2	IF_3
0x40002bb	          0x4885c0	                           test rax, rax	      1234	main.c	FUNCTION_52	ELSE_2	IF_3
0x40002be	            0x7411	                            je 0x40002d1	      1234	main.c	FUNCTION_52	ELSE_2	IF_3
0x40002c0	          0x4889c7	                            mov rdi, rax	      1236	main.c	FUNCTION_52	ELSE_2	IF_3	CALL_3
0x40002c3	      0xe898feffff	                    call sym.pm_noirq_op	      1236	main.c	FUNCTION_52	ELSE_2	IF_3	CALL_3
0x40002c8	    0x48c7c1000000	                              mov rcx, 0	      1235	main.c	FUNCTION_52	ELSE_2	IF_3
0x40002cf	            0xebaa	                           jmp 0x400027b	      1236	main.c	FUNCTION_52	ELSE_2	IF_3	CALL_3
0x40002d1	    0x488b87800000	            mov rax, qword [rdi + 0x80] 	      1237	main.c	FUNCTION_52	ELSE_3	IF_4
0x40002d8	          0x4885c0	                           test rax, rax	      1237	main.c	FUNCTION_52	ELSE_3	IF_4
0x40002db	            0x74a7	                            je 0x4000284	      1237	main.c	FUNCTION_52	ELSE_3	IF_4
0x40002dd	    0x488bb8880000	            mov rdi, qword [rax + 0x88] 	      1237	main.c	FUNCTION_52	ELSE_3	IF_4
0x40002e4	          0x4885ff	                           test rdi, rdi	      1237	main.c	FUNCTION_52	ELSE_3	IF_4
0x40002e7	            0x749b	                            je 0x4000284	      1237	main.c	FUNCTION_52	ELSE_3	IF_4
0x40002e9	      0xe872feffff	                    call sym.pm_noirq_op	      1239	main.c	FUNCTION_52	ELSE_3	IF_4	CALL_4
0x40002ee	    0x48c7c1000000	                              mov rcx, 0	      1238	main.c	FUNCTION_52	ELSE_3	IF_4
0x40002f5	            0xeb84	                           jmp 0x400027b	      1239	main.c	FUNCTION_52	ELSE_3	IF_4	CALL_4
dpm_subsys_resume_early_cb	WHILE,0:SWITCH,0:functions,0:FOR,0:ELSE,4:DO,0:IF,5:CALL,4	41
0x40001c0	    0x488b87e00100	           mov rax, qword [rdi + 0x1e0] 	       787	main.c	FUNCTION_39	IF_1
0x40001c7	          0x4885c0	                           test rax, rax	       787	main.c	FUNCTION_39	IF_1
0x40001ca	            0x741c	                            je 0x40001e8	       787	main.c	FUNCTION_39	IF_1
0x40001cc	          0x4889c7	                            mov rdi, rax	       789	main.c	FUNCTION_39	IF_1	CALL_1
0x40001cf	      0xe83cffffff	               call sym.pm_late_early_op	       789	main.c	FUNCTION_39	IF_1	CALL_1
0x40001d4	    0x48c7c1000000	                              mov rcx, 0	       788	main.c	FUNCTION_39	IF_1
0x40001db	          0x4885d2	                           test rdx, rdx	       803	main.c	FUNCTION_39	IF_5
0x40001de	            0x7406	                            je 0x40001e6	       803	main.c	FUNCTION_39	IF_5
0x40001e0	          0x48890a	                    mov qword [rdx], rcx	       804	main.c	FUNCTION_39	IF_5
0x40001e3	              0xc3	                                     ret	       804	main.c	FUNCTION_39	IF_5
0x40001e4	            0x31c0	                            xor eax, eax	       800	main.c	FUNCTION_39	ELSE_4
0x40001e6	            0xf3c3	                                     ret	       807	main.c	FUNCTION_39
0x40001e8	        0x488b4758	            mov rax, qword [rdi + 0x58] 	       790	main.c	FUNCTION_39	ELSE_1	IF_2
0x40001ec	          0x4885c0	                           test rax, rax	       790	main.c	FUNCTION_39	ELSE_1	IF_2
0x40001ef	            0x741a	                            je 0x400020b	       790	main.c	FUNCTION_39	ELSE_1	IF_2
0x40001f1	        0x488b4028	            mov rax, qword [rax + 0x28] 	       790	main.c	FUNCTION_39	ELSE_1	IF_2
0x40001f5	          0x4885c0	                           test rax, rax	       790	main.c	FUNCTION_39	ELSE_1	IF_2
0x40001f8	            0x7411	                            je 0x400020b	       790	main.c	FUNCTION_39	ELSE_1	IF_2
0x40001fa	          0x4889c7	                            mov rdi, rax	       792	main.c	FUNCTION_39	ELSE_1	IF_2	CALL_2
0x40001fd	      0xe80effffff	               call sym.pm_late_early_op	       792	main.c	FUNCTION_39	ELSE_1	IF_2	CALL_2
0x4000202	    0x48c7c1000000	                              mov rcx, 0	       791	main.c	FUNCTION_39	ELSE_1	IF_2
0x4000209	            0xebd0	                           jmp 0x40001db	       792	main.c	FUNCTION_39	ELSE_1	IF_2	CALL_2
0x400020b	    0x488b87a00200	           mov rax, qword [rdi + 0x2a0] 	       793	main.c	FUNCTION_39	ELSE_2	IF_3
0x4000212	          0x4885c0	                           test rax, rax	       793	main.c	FUNCTION_39	ELSE_2	IF_3
0x4000215	            0x741a	                            je 0x4000231	       793	main.c	FUNCTION_39	ELSE_2	IF_3
0x4000217	        0x488b4060	            mov rax, qword [rax + 0x60] 	       793	main.c	FUNCTION_39	ELSE_2	IF_3
0x400021b	          0x4885c0	                           test rax, rax	       793	main.c	FUNCTION_39	ELSE_2	IF_3
0x400021e	            0x7411	                            je 0x4000231	       793	main.c	FUNCTION_39	ELSE_2	IF_3
0x4000220	          0x4889c7	                            mov rdi, rax	       795	main.c	FUNCTION_39	ELSE_2	IF_3	CALL_3
0x4000223	      0xe8e8feffff	               call sym.pm_late_early_op	       795	main.c	FUNCTION_39	ELSE_2	IF_3	CALL_3
0x4000228	    0x48c7c1000000	                              mov rcx, 0	       794	main.c	FUNCTION_39	ELSE_2	IF_3
0x400022f	            0xebaa	                           jmp 0x40001db	       795	main.c	FUNCTION_39	ELSE_2	IF_3	CALL_3
0x4000231	    0x488b87800000	            mov rax, qword [rdi + 0x80] 	       796	main.c	FUNCTION_39	ELSE_3	IF_4
0x4000238	          0x4885c0	                           test rax, rax	       796	main.c	FUNCTION_39	ELSE_3	IF_4
0x400023b	            0x74a7	                            je 0x40001e4	       796	main.c	FUNCTION_39	ELSE_3	IF_4
0x400023d	    0x488bb8880000	            mov rdi, qword [rax + 0x88] 	       796	main.c	FUNCTION_39	ELSE_3	IF_4
0x4000244	          0x4885ff	                           test rdi, rdi	       796	main.c	FUNCTION_39	ELSE_3	IF_4
0x4000247	            0x749b	                            je 0x40001e4	       796	main.c	FUNCTION_39	ELSE_3	IF_4
0x4000249	      0xe8c2feffff	               call sym.pm_late_early_op	       798	main.c	FUNCTION_39	ELSE_3	IF_4	CALL_4
0x400024e	    0x48c7c1000000	                              mov rcx, 0	       797	main.c	FUNCTION_39	ELSE_3	IF_4
0x4000255	            0xeb84	                           jmp 0x40001db	       798	main.c	FUNCTION_39	ELSE_3	IF_4	CALL_4
dpm_for_each_dev	WHILE,0:SWITCH,0:functions,0:FOR,0:ELSE,0:DO,0:IF,1:CALL,4	26
0x4000430	          0x4885f6	                           test rsi, rsi	      2078	main.c	FUNCTION_78	IF_1
0x4000433	            0x745d	                            je 0x4000492	      2078	main.c	FUNCTION_78	IF_1
0x4000435	            0x4154	                                push r12	      2075	main.c	FUNCTION_78
0x4000437	              0x55	                                push rbp	      2075	main.c	FUNCTION_78
0x4000438	          0x4989fc	                            mov r12, rdi	      2075	main.c	FUNCTION_78
0x400043b	              0x53	                                push rbx	      2075	main.c	FUNCTION_78
0x400043c	    0x48c7c7000000	                              mov rdi, 0	       109	main.c	FUNCTION_3	CALL_1
0x4000443	          0x4889f5	                            mov rbp, rsi	       109	main.c	FUNCTION_3	CALL_1
0x4000446	      0xe800000000	                          call 0x400044b	       109	main.c	FUNCTION_3	CALL_1
0x400044b	    0x488b05000000	            mov rax, qword [0x04000452] 	      2082	main.c	FUNCTION_78	CALL_2
0x4000452	    0x483d00000000	                              cmp rax, 0	      2082	main.c	FUNCTION_78	CALL_2
0x4000458	    0x488d9828ffff	                   lea rbx, [rax - 0xd8]	      2082	main.c	FUNCTION_78	CALL_2
0x400045f	            0x7421	                            je 0x4000482	      2082	main.c	FUNCTION_78	CALL_2
0x4000461	          0x4889df	                            mov rdi, rbx	      2083	main.c	FUNCTION_78	CALL_3
0x4000464	          0x4c89e6	                            mov rsi, r12	      2083	main.c	FUNCTION_78	CALL_3
0x4000467	      0xe800000000	                          call 0x400046c	      2083	main.c	FUNCTION_78	CALL_3
0x400046c	    0x488b83d80000	            mov rax, qword [rbx + 0xd8] 	      2082	main.c	FUNCTION_78	CALL_2
0x4000473	    0x483d00000000	                              cmp rax, 0	      2082	main.c	FUNCTION_78	CALL_2
0x4000479	    0x488d9828ffff	                   lea rbx, [rax - 0xd8]	      2082	main.c	FUNCTION_78	CALL_2
0x4000480	            0x75df	                           jne 0x4000461	      2082	main.c	FUNCTION_78	CALL_2
0x4000482	              0x5b	                                 pop rbx	      2085	main.c	FUNCTION_78
0x4000483	              0x5d	                                 pop rbp	      2085	main.c	FUNCTION_78
0x4000484	            0x415c	                                 pop r12	      2085	main.c	FUNCTION_78
0x4000486	    0x48c7c7000000	                              mov rdi, 0	       117	main.c	FUNCTION_4	CALL_1
0x400048d	      0xe900000000	                           jmp 0x4000492	       117	main.c	FUNCTION_4	CALL_1
0x4000492	            0xf3c3	                                     ret	       117	main.c	FUNCTION_4	CALL_1
device_resume_early	WHILE,0:SWITCH,0:functions,0:FOR,0:ELSE,0:DO,0:IF,3:CALL,9	86
0x40008e0	            0x4155	                                push r13	       818	main.c	FUNCTION_40
0x40008e2	            0x4154	                                push r12	       818	main.c	FUNCTION_40
0x40008e4	          0x4189f5	                           mov r13d, esi	       818	main.c	FUNCTION_40
0x40008e7	              0x55	                                push rbp	       818	main.c	FUNCTION_40
0x40008e8	              0x53	                                push rbx	       818	main.c	FUNCTION_40
0x40008e9	          0x4189d4	                           mov r12d, edx	       818	main.c	FUNCTION_40
0x40008ec	          0x4889fb	                            mov rbx, rdi	       818	main.c	FUNCTION_40
0x40008ef	        0x4883ec10	                           sub rsp, 0x10	       818	main.c	FUNCTION_40
0x40008f3	    0x8b0d00000000	            mov ecx, dword [0x040008f9] 	       823	main.c	FUNCTION_40	CALL_1
0x40008f9	    0x65488b042528	                mov rax, qword gs:[0x28]	       818	main.c	FUNCTION_40
0x4000902	      0x4889442408	                mov qword [rsp + 8], rax	       818	main.c	FUNCTION_40
0x4000907	            0x31c0	                            xor eax, eax	       818	main.c	FUNCTION_40
0x4000909	            0x85c9	                           test ecx, ecx	       823	main.c	FUNCTION_40	CALL_1
0x400090b	     0xf85b7000000	                           jne 0x40009c8	       823	main.c	FUNCTION_40	CALL_1
0x4000911	    0xf68310010000	              test byte [rbx + 0x110], 2	       826	main.c	FUNCTION_40	IF_1
0x4000918	            0x7509	                           jne 0x4000923	       826	main.c	FUNCTION_40	IF_1
0x400091a	    0xf683cd000000	               test byte [rbx + 0xcd], 1	       826	main.c	FUNCTION_40	IF_1
0x4000921	            0x744f	                            je 0x4000972	       826	main.c	FUNCTION_40	IF_1
0x4000923	            0x31ed	                            xor ebp, ebp	       821	main.c	FUNCTION_40
0x4000925	    0x8b0500000000	            mov eax, dword [0x0400092b] 	       845	main.c	FUNCTION_40	CALL_7
0x400092b	            0x85c0	                           test eax, eax	       845	main.c	FUNCTION_40	CALL_7
0x400092d	            0x740e	                            je 0x400093d	       845	main.c	FUNCTION_40	CALL_7
0x400092f	    0x48c7c7000000	                              mov rdi, 0	       845	main.c	FUNCTION_40	CALL_7
0x4000936	            0x89ee	                            mov esi, ebp	       845	main.c	FUNCTION_40	CALL_7
0x4000938	      0xe800000000	                          call 0x400093d	       845	main.c	FUNCTION_40	CALL_7
0x400093d	          0x4889df	                            mov rdi, rbx	       847	main.c	FUNCTION_40	CALL_8
0x4000940	      0xe800000000	                          call 0x4000945	       847	main.c	FUNCTION_40	CALL_8
0x4000945	    0x488dbbe80000	                   lea rdi, [rbx + 0xe8]	       848	main.c	FUNCTION_40	CALL_9
0x400094c	      0xe800000000	                          call 0x4000951	       848	main.c	FUNCTION_40	CALL_9
0x4000951	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       850	main.c	FUNCTION_40
0x4000956	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       850	main.c	FUNCTION_40
0x400095f	            0x89e8	                            mov eax, ebp	       850	main.c	FUNCTION_40
0x4000961	     0xf85b1000000	                           jne 0x4000a18	       850	main.c	FUNCTION_40
0x4000967	        0x4883c410	                           add rsp, 0x10	       850	main.c	FUNCTION_40
0x400096b	              0x5b	                                 pop rbx	       850	main.c	FUNCTION_40
0x400096c	              0x5d	                                 pop rbp	       850	main.c	FUNCTION_40
0x400096d	            0x415c	                                 pop r12	       850	main.c	FUNCTION_40
0x400096f	            0x415d	                                 pop r13	       850	main.c	FUNCTION_40
0x4000971	              0xc3	                                     ret	       850	main.c	FUNCTION_40
0x4000972	    0xf683cc000000	           test byte [rbx + 0xcc], 0x40 	       829	main.c	FUNCTION_40	IF_2
0x4000979	            0x74a8	                            je 0x4000923	       829	main.c	FUNCTION_40	IF_2
0x400097b	          0x488b3b	                    mov rdi, qword [rbx]	       270	main.c	FUNCTION_16	CALL_1
0x400097e	        0x450fb6e4	                        movzx r12d, r12b	       270	main.c	FUNCTION_16	CALL_1
0x4000982	          0x4489e6	                           mov esi, r12d	       270	main.c	FUNCTION_16	CALL_1
0x4000985	      0xe816fbffff	                       call sym.dpm_wait	       270	main.c	FUNCTION_16	CALL_1
0x400098a	          0x4489e6	                           mov esi, r12d	       271	main.c	FUNCTION_16	CALL_2
0x400098d	          0x4889df	                            mov rdi, rbx	       271	main.c	FUNCTION_16	CALL_2
0x4000990	      0xe86bfbffff	         call sym.dpm_wait_for_suppliers	       271	main.c	FUNCTION_16	CALL_2
0x4000995	          0x4489ee	                           mov esi, r13d	       834	main.c	FUNCTION_40	CALL_4
0x4000998	          0x4889e2	                            mov rdx, rsp	       834	main.c	FUNCTION_40	CALL_4
0x400099b	          0x4889df	                            mov rdi, rbx	       834	main.c	FUNCTION_40	CALL_4
0x400099e	      0xe81df8ffff	     call sym.dpm_subsys_resume_early_cb	       834	main.c	FUNCTION_40	CALL_4
0x40009a3	          0x4885c0	                           test rax, rax	       836	main.c	FUNCTION_40	IF_3
0x40009a6	            0x7442	                            je 0x40009ea	       836	main.c	FUNCTION_40	IF_3
0x40009a8	        0x488b0c24	                    mov rcx, qword [rsp]	       836	main.c	FUNCTION_40	IF_3
0x40009ac	          0x4489ea	                           mov edx, r13d	       841	main.c	FUNCTION_40	CALL_6
0x40009af	          0x4889de	                            mov rsi, rbx	       841	main.c	FUNCTION_40	CALL_6
0x40009b2	          0x4889c7	                            mov rdi, rax	       841	main.c	FUNCTION_40	CALL_6
0x40009b5	      0xe8c6fdffff	               call sym.dpm_run_callback	       841	main.c	FUNCTION_40	CALL_6
0x40009ba	    0x80a3cc000000	             and byte [rbx + 0xcc], 0xbf	       842	main.c	FUNCTION_40
0x40009c1	            0x89c5	                            mov ebp, eax	       841	main.c	FUNCTION_40	CALL_6
0x40009c3	      0xe95dffffff	                           jmp 0x4000925	       841	main.c	FUNCTION_40	CALL_6
0x40009c8	      0xe800000000	                          call 0x40009cd	       823	main.c	FUNCTION_40	CALL_1
0x40009cd	    0x8b1500000000	            mov edx, dword [0x040009d3] 	       824	main.c	FUNCTION_40	CALL_2
0x40009d3	            0x85d2	                           test edx, edx	       824	main.c	FUNCTION_40	CALL_2
0x40009d5	            0x7446	                            je 0x4000a1d	       824	main.c	FUNCTION_40	CALL_2
0x40009d7	    0x48c7c7000000	                              mov rdi, 0	       824	main.c	FUNCTION_40	CALL_2
0x40009de	            0x31f6	                            xor esi, esi	       824	main.c	FUNCTION_40	CALL_2
0x40009e0	      0xe800000000	                          call 0x40009e5	       824	main.c	FUNCTION_40	CALL_2
0x40009e5	      0xe927ffffff	                           jmp 0x4000911	       824	main.c	FUNCTION_40	CALL_2
0x40009ea	    0x488b93880000	            mov rdx, qword [rbx + 0x88] 	       836	main.c	FUNCTION_40	IF_3
0x40009f1	          0x4885d2	                           test rdx, rdx	       836	main.c	FUNCTION_40	IF_3
0x40009f4	            0x74b2	                            je 0x40009a8	       836	main.c	FUNCTION_40	IF_3
0x40009f6	        0x488b7a68	            mov rdi, qword [rdx + 0x68] 	       836	main.c	FUNCTION_40	IF_3
0x40009fa	          0x4885ff	                           test rdi, rdi	       836	main.c	FUNCTION_40	IF_3
0x40009fd	            0x74a9	                            je 0x40009a8	       836	main.c	FUNCTION_40	IF_3
0x40009ff	          0x4489ee	                           mov esi, r13d	       838	main.c	FUNCTION_40	IF_3	CALL_5
0x4000a02	    0x48c704240000	                      mov qword [rsp], 0	       837	main.c	FUNCTION_40	IF_3
0x4000a0a	      0xe801f7ffff	               call sym.pm_late_early_op	       838	main.c	FUNCTION_40	IF_3	CALL_5
0x4000a0f	    0x48c7c1000000	                              mov rcx, 0	       838	main.c	FUNCTION_40	IF_3	CALL_5
0x4000a16	            0xeb94	                           jmp 0x40009ac	       838	main.c	FUNCTION_40	IF_3	CALL_5
0x4000a18	      0xe800000000	                          call 0x4000a1d	       850	main.c	FUNCTION_40
0x4000a1d	            0x31ed	                            xor ebp, ebp	       821	main.c	FUNCTION_40
0x4000a1f	    0xf68310010000	              test byte [rbx + 0x110], 2	       826	main.c	FUNCTION_40	IF_1
0x4000a26	     0xf8511ffffff	                           jne 0x400093d	       826	main.c	FUNCTION_40	IF_1
0x4000a2c	      0xe9e9feffff	                           jmp 0x400091a	       826	main.c	FUNCTION_40	IF_1
dpm_resume_noirq	WHILE,0:SWITCH,0:functions,0:FOR,0:ELSE,0:DO,0:IF,0:CALL,2	4
0x4001e00	      0xe800000000	                          call 0x4001e05	       776	main.c	FUNCTION_38	CALL_1
0x4001e05	      0xe800000000	                          call 0x4001e0a	       762	main.c	FUNCTION_37	CALL_1
0x4001e0a	      0xe800000000	                          call 0x4001e0f	       763	main.c	FUNCTION_37	CALL_2
0x4001e0f	      0xe900000000	                           jmp 0x4001e14	       764	main.c	FUNCTION_37	CALL_3
