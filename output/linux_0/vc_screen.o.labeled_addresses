vcs_size	IF,2:ELSE,0:functions,0:CALL,3:DO,0:FOR,0:WHILE,0:SWITCH,0	29
0x4000110	              0x55	                                push rbp	       165	vc_screen.c	FUNCTION_5
0x4000111	              0x53	                                push rbx	       165	vc_screen.c	FUNCTION_5
0x4000112	          0x4889fd	                            mov rbp, rdi	       165	vc_screen.c	FUNCTION_5
0x4000115	          0x8b5f4c	            mov ebx, dword [rdi + 0x4c] 	       167	vc_screen.c	FUNCTION_5	CALL_1
0x4000118	      0xe800000000	                          call 0x400011d	       170	vc_screen.c	FUNCTION_5	CALL_2
0x400011d	    0x81e3ffff0f00	                        and ebx, 0xfffff	       167	vc_screen.c	FUNCTION_5	CALL_1
0x4000123	            0x85c0	                           test eax, eax	       170	vc_screen.c	FUNCTION_5	CALL_2
0x4000125	            0x750a	                           jne 0x4000131	       170	vc_screen.c	FUNCTION_5	CALL_2
0x4000127	    0x8b0500000000	            mov eax, dword [0x0400012d] 	       170	vc_screen.c	FUNCTION_5	CALL_2
0x400012d	            0x85c0	                           test eax, eax	       170	vc_screen.c	FUNCTION_5	CALL_2
0x400012f	            0x742d	                            je 0x400015e	       170	vc_screen.c	FUNCTION_5	CALL_2
0x4000131	            0x31f6	                            xor esi, esi	       172	vc_screen.c	FUNCTION_5	CALL_3
0x4000133	          0x4889ef	                            mov rdi, rbp	       172	vc_screen.c	FUNCTION_5	CALL_3
0x4000136	      0xe865ffffff	                         call sym.vcs_vc	       172	vc_screen.c	FUNCTION_5	CALL_3
0x400013b	          0x4885c0	                           test rax, rax	       173	vc_screen.c	FUNCTION_5	IF_1
0x400013e	            0x7422	                            je 0x4000162	       173	vc_screen.c	FUNCTION_5	IF_1
0x4000140	    0x8b9068010000	           mov edx, dword [rax + 0x168] 	       176	vc_screen.c	FUNCTION_5
0x4000146	     0xfaf90640100	           imul edx, dword [rax + 0x164]	       176	vc_screen.c	FUNCTION_5
0x400014d	    0x81e380000000	                           and ebx, 0x80	       178	vc_screen.c	FUNCTION_5	IF_2
0x4000153	            0x89d0	                            mov eax, edx	       176	vc_screen.c	FUNCTION_5
0x4000155	            0x7404	                            je 0x400015b	       178	vc_screen.c	FUNCTION_5	IF_2
0x4000157	        0x8d441204	                lea eax, [rdx + rdx + 4]	       179	vc_screen.c	FUNCTION_5	IF_2
0x400015b	              0x5b	                                 pop rbx	       181	vc_screen.c	FUNCTION_5
0x400015c	              0x5d	                                 pop rbp	       181	vc_screen.c	FUNCTION_5
0x400015d	              0xc3	                                     ret	       181	vc_screen.c	FUNCTION_5
0x400015e	             0xf0b	                                     ud2	       181	vc_screen.c	FUNCTION_5
0x4000160	            0xebcf	                           jmp 0x4000131	       170	vc_screen.c	FUNCTION_5	CALL_2
0x4000162	      0xb8faffffff	                     mov eax, 0xfffffffa	       174	vc_screen.c	FUNCTION_5	IF_1
0x4000167	            0xebf2	                           jmp 0x400015b	       174	vc_screen.c	FUNCTION_5	IF_1
vcs_open	IF,1:ELSE,0:functions,0:CALL,4:DO,0:FOR,0:WHILE,0:SWITCH,0	17
0x4000070	              0x53	                                push rbx	       595	vc_screen.c	FUNCTION_11
0x4000071	          0x8b5f4c	            mov ebx, dword [rdi + 0x4c] 	       596	vc_screen.c	FUNCTION_11	CALL_1
0x4000074	      0xe800000000	                          call 0x4000079	       599	vc_screen.c	FUNCTION_11	CALL_2
0x4000079	          0x83e37f	                           and ebx, 0x7f	       596	vc_screen.c	FUNCTION_11	CALL_1
0x400007c	            0x85db	                           test ebx, ebx	       600	vc_screen.c	FUNCTION_11	IF_1	CALL_3
0x400007e	            0x750b	                           jne 0x400008b	       600	vc_screen.c	FUNCTION_11	IF_1	CALL_3
0x4000080	            0x31db	                            xor ebx, ebx	       597	vc_screen.c	FUNCTION_11
0x4000082	      0xe800000000	                          call 0x4000087	       602	vc_screen.c	FUNCTION_11	CALL_4
0x4000087	            0x89d8	                            mov eax, ebx	       604	vc_screen.c	FUNCTION_11
0x4000089	              0x5b	                                 pop rbx	       604	vc_screen.c	FUNCTION_11
0x400008a	              0xc3	                                     ret	       604	vc_screen.c	FUNCTION_11
0x400008b	          0x8d7bff	                      lea edi, [rbx - 1]	       600	vc_screen.c	FUNCTION_11	IF_1	CALL_3
0x400008e	      0xe800000000	                          call 0x4000093	       600	vc_screen.c	FUNCTION_11	IF_1	CALL_3
0x4000093	            0x85c0	                           test eax, eax	       600	vc_screen.c	FUNCTION_11	IF_1	CALL_3
0x4000095	            0x75e9	                           jne 0x4000080	       600	vc_screen.c	FUNCTION_11	IF_1	CALL_3
0x4000097	      0xbbfaffffff	                     mov ebx, 0xfffffffa	       601	vc_screen.c	FUNCTION_11	IF_1
0x400009c	            0xebe4	                           jmp 0x4000082	       601	vc_screen.c	FUNCTION_11	IF_1
vcs_vc	IF,3:ELSE,1:functions,0:CALL,2:DO,0:FOR,0:WHILE,0:SWITCH,0	33
0x40000a0	              0x55	                                push rbp	       142	vc_screen.c	FUNCTION_4
0x40000a1	              0x53	                                push rbx	       142	vc_screen.c	FUNCTION_4
0x40000a2	          0x4889f5	                            mov rbp, rsi	       142	vc_screen.c	FUNCTION_4
0x40000a5	          0x8b5f4c	            mov ebx, dword [rdi + 0x4c] 	       143	vc_screen.c	FUNCTION_4	CALL_1
0x40000a8	      0xe800000000	                          call 0x40000ad	       145	vc_screen.c	FUNCTION_4	CALL_2
0x40000ad	          0x83e37f	                           and ebx, 0x7f	       143	vc_screen.c	FUNCTION_4	CALL_1
0x40000b0	            0x85c0	                           test eax, eax	       145	vc_screen.c	FUNCTION_4	CALL_2
0x40000b2	            0x750a	                           jne 0x40000be	       145	vc_screen.c	FUNCTION_4	CALL_2
0x40000b4	    0x8b0500000000	            mov eax, dword [0x040000ba] 	       145	vc_screen.c	FUNCTION_4	CALL_2
0x40000ba	            0x85c0	                           test eax, eax	       145	vc_screen.c	FUNCTION_4	CALL_2
0x40000bc	            0x7443	                            je 0x4000101	       145	vc_screen.c	FUNCTION_4	CALL_2
0x40000be	            0x85db	                           test ebx, ebx	       147	vc_screen.c	FUNCTION_4	IF_1
0x40000c0	            0x7521	                           jne 0x40000e3	       147	vc_screen.c	FUNCTION_4	IF_1
0x40000c2	          0x4885ed	                           test rbp, rbp	       149	vc_screen.c	FUNCTION_4	IF_1	IF_2
0x40000c5	    0x8b0500000000	            mov eax, dword [0x040000cb] 	       148	vc_screen.c	FUNCTION_4	IF_1
0x40000cb	            0x7407	                            je 0x40000d4	       149	vc_screen.c	FUNCTION_4	IF_1	IF_2
0x40000cd	    0xc74500010000	                      mov dword [rbp], 1	       150	vc_screen.c	FUNCTION_4	IF_1	IF_2
0x40000d4	        0x488d0480	                  lea rax, [rax + rax*4]	       156	vc_screen.c	FUNCTION_4
0x40000d8	              0x5b	                                 pop rbx	       157	vc_screen.c	FUNCTION_4
0x40000d9	    0x488b04c50000	                  mov rax, qword [rax*8]	       156	vc_screen.c	FUNCTION_4
0x40000e1	              0x5d	                                 pop rbp	       157	vc_screen.c	FUNCTION_4
0x40000e2	              0xc3	                                     ret	       157	vc_screen.c	FUNCTION_4
0x40000e3	          0x4885ed	                           test rbp, rbp	       153	vc_screen.c	FUNCTION_4	ELSE_1	IF_3
0x40000e6	          0x8d43ff	                      lea eax, [rbx - 1]	       152	vc_screen.c	FUNCTION_4	ELSE_1
0x40000e9	            0x74e9	                            je 0x40000d4	       153	vc_screen.c	FUNCTION_4	ELSE_1	IF_3
0x40000eb	        0x488d0480	                  lea rax, [rax + rax*4]	       156	vc_screen.c	FUNCTION_4
0x40000ef	    0xc74500000000	                      mov dword [rbp], 0	       154	vc_screen.c	FUNCTION_4	ELSE_1	IF_3
0x40000f6	              0x5b	                                 pop rbx	       157	vc_screen.c	FUNCTION_4
0x40000f7	    0x488b04c50000	                  mov rax, qword [rax*8]	       156	vc_screen.c	FUNCTION_4
0x40000ff	              0x5d	                                 pop rbp	       157	vc_screen.c	FUNCTION_4
0x4000100	              0xc3	                                     ret	       157	vc_screen.c	FUNCTION_4
0x4000101	             0xf0b	                                     ud2	       157	vc_screen.c	FUNCTION_4
0x4000103	            0xebb9	                           jmp 0x40000be	       145	vc_screen.c	FUNCTION_4	CALL_2
vcs_fasync	IF,3:ELSE,0:functions,0:CALL,2:DO,0:FOR,0:WHILE,0:SWITCH,0	27
0x4000870	              0x53	                                push rbx	       578	vc_screen.c	FUNCTION_10
0x4000871	            0x89fb	                            mov ebx, edi	       578	vc_screen.c	FUNCTION_10
0x4000873	        0x4883ec10	                           sub rsp, 0x10	       578	vc_screen.c	FUNCTION_10
0x4000877	    0x488b86c80000	            mov rax, qword [rsi + 0xc8] 	       579	vc_screen.c	FUNCTION_10
0x400087e	          0x4885c0	                           test rax, rax	       581	vc_screen.c	FUNCTION_10	IF_1
0x4000881	            0x7410	                            je 0x4000893	       581	vc_screen.c	FUNCTION_10	IF_1
0x4000883	        0x4883c410	                           add rsp, 0x10	       591	vc_screen.c	FUNCTION_10
0x4000887	            0x89df	                            mov edi, ebx	       590	vc_screen.c	FUNCTION_10	CALL_2
0x4000889	        0x488d4838	                   lea rcx, [rax + 0x38]	       590	vc_screen.c	FUNCTION_10	CALL_2
0x400088d	              0x5b	                                 pop rbx	       591	vc_screen.c	FUNCTION_10
0x400088e	      0xe900000000	                           jmp 0x4000893	       590	vc_screen.c	FUNCTION_10	CALL_2
0x4000893	            0x85d2	                           test edx, edx	       583	vc_screen.c	FUNCTION_10	IF_1	IF_2
0x4000895	        0x89542404	                mov dword [rsp + 4], edx	       583	vc_screen.c	FUNCTION_10	IF_1	IF_2
0x4000899	            0x7422	                            je 0x40008bd	       583	vc_screen.c	FUNCTION_10	IF_1	IF_2
0x400089b	          0x4889f7	                            mov rdi, rsi	       583	vc_screen.c	FUNCTION_10	IF_1	IF_2
0x400089e	      0x4889742408	                mov qword [rsp + 8], rsi	       583	vc_screen.c	FUNCTION_10	IF_1	IF_2
0x40008a3	      0xe808ffffff	       call sym.vcs_poll_data_get.part.3	       583	vc_screen.c	FUNCTION_10	IF_1	IF_2
0x40008a8	          0x4885c0	                           test rax, rax	       586	vc_screen.c	FUNCTION_10	IF_1	IF_3
0x40008ab	      0x488b742408	                mov rsi, qword [rsp + 8]	       586	vc_screen.c	FUNCTION_10	IF_1	IF_3
0x40008b0	        0x8b542404	                mov edx, dword [rsp + 4]	       586	vc_screen.c	FUNCTION_10	IF_1	IF_3
0x40008b4	            0x75cd	                           jne 0x4000883	       586	vc_screen.c	FUNCTION_10	IF_1	IF_3
0x40008b6	      0xb8f4ffffff	                     mov eax, 0xfffffff4	       587	vc_screen.c	FUNCTION_10	IF_1	IF_3
0x40008bb	            0xeb02	                           jmp 0x40008bf	       587	vc_screen.c	FUNCTION_10	IF_1	IF_3
0x40008bd	            0x31c0	                            xor eax, eax	       584	vc_screen.c	FUNCTION_10	IF_1	IF_2
0x40008bf	        0x4883c410	                           add rsp, 0x10	       591	vc_screen.c	FUNCTION_10
0x40008c3	              0x5b	                                 pop rbx	       591	vc_screen.c	FUNCTION_10
0x40008c4	              0xc3	                                     ret	       591	vc_screen.c	FUNCTION_10
vcs_remove_sysfs	IF,0:ELSE,0:functions,0:CALL,4:DO,0:FOR,0:WHILE,0:SWITCH,0	11
0x4000ea0	              0x53	                                push rbx	       636	vc_screen.c	FUNCTION_14
0x4000ea1	          0x8d7701	                      lea esi, [rdi + 1]	       637	vc_screen.c	FUNCTION_14	CALL_2
0x4000ea4	            0x89fb	                            mov ebx, edi	       636	vc_screen.c	FUNCTION_14
0x4000ea6	    0x488b3d000000	            mov rdi, qword [0x04000ead] 	       637	vc_screen.c	FUNCTION_14	CALL_2
0x4000ead	    0x81ce00007000	                        or esi, 0x700000	       637	vc_screen.c	FUNCTION_14	CALL_2
0x4000eb3	      0xe800000000	                          call 0x4000eb8	       637	vc_screen.c	FUNCTION_14	CALL_2
0x4000eb8	    0x8db381000000	                   lea esi, [rbx + 0x81]	       638	vc_screen.c	FUNCTION_14	CALL_4
0x4000ebe	    0x488b3d000000	            mov rdi, qword [0x04000ec5] 	       638	vc_screen.c	FUNCTION_14	CALL_4
0x4000ec5	              0x5b	                                 pop rbx	       639	vc_screen.c	FUNCTION_14
0x4000ec6	    0x81ce00007000	                        or esi, 0x700000	       638	vc_screen.c	FUNCTION_14	CALL_4
0x4000ecc	      0xe900000000	                   jmp section_end..text	       638	vc_screen.c	FUNCTION_14	CALL_4
vcs_lseek	IF,1:ELSE,0:functions,0:CALL,5:DO,0:FOR,0:WHILE,0:SWITCH,0	29
0x4000700	            0x4155	                                push r13	       184	vc_screen.c	FUNCTION_6
0x4000702	            0x4154	                                push r12	       184	vc_screen.c	FUNCTION_6
0x4000704	          0x4189d5	                           mov r13d, edx	       184	vc_screen.c	FUNCTION_6
0x4000707	              0x55	                                push rbp	       184	vc_screen.c	FUNCTION_6
0x4000708	              0x53	                                push rbx	       184	vc_screen.c	FUNCTION_6
0x4000709	          0x4889fd	                            mov rbp, rdi	       184	vc_screen.c	FUNCTION_6
0x400070c	          0x4989f4	                            mov r12, rsi	       184	vc_screen.c	FUNCTION_6
0x400070f	      0xe800000000	                          call 0x4000714	       187	vc_screen.c	FUNCTION_6	CALL_1
0x4000714	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	       188	vc_screen.c	FUNCTION_6	CALL_3
0x4000718	      0xe8f3f9ffff	                       call sym.vcs_size	       188	vc_screen.c	FUNCTION_6	CALL_3
0x400071d	            0x89c3	                            mov ebx, eax	       188	vc_screen.c	FUNCTION_6	CALL_3
0x400071f	      0xe800000000	                          call 0x4000724	       189	vc_screen.c	FUNCTION_6	CALL_4
0x4000724	            0x85db	                           test ebx, ebx	       190	vc_screen.c	FUNCTION_6	IF_1
0x4000726	            0x7817	                            js 0x400073f	       190	vc_screen.c	FUNCTION_6	IF_1
0x4000728	          0x4863cb	                         movsxd rcx, ebx	       192	vc_screen.c	FUNCTION_6	CALL_5
0x400072b	          0x4489ea	                           mov edx, r13d	       192	vc_screen.c	FUNCTION_6	CALL_5
0x400072e	          0x4c89e6	                            mov rsi, r12	       192	vc_screen.c	FUNCTION_6	CALL_5
0x4000731	              0x5b	                                 pop rbx	       193	vc_screen.c	FUNCTION_6
0x4000732	          0x4889ef	                            mov rdi, rbp	       192	vc_screen.c	FUNCTION_6	CALL_5
0x4000735	              0x5d	                                 pop rbp	       193	vc_screen.c	FUNCTION_6
0x4000736	            0x415c	                                 pop r12	       193	vc_screen.c	FUNCTION_6
0x4000738	            0x415d	                                 pop r13	       193	vc_screen.c	FUNCTION_6
0x400073a	      0xe900000000	                           jmp 0x400073f	       192	vc_screen.c	FUNCTION_6	CALL_5
0x400073f	          0x4863c3	                         movsxd rax, ebx	       191	vc_screen.c	FUNCTION_6	IF_1
0x4000742	              0x5b	                                 pop rbx	       193	vc_screen.c	FUNCTION_6
0x4000743	              0x5d	                                 pop rbp	       193	vc_screen.c	FUNCTION_6
0x4000744	            0x415c	                                 pop r12	       193	vc_screen.c	FUNCTION_6
0x4000746	            0x415d	                                 pop r13	       193	vc_screen.c	FUNCTION_6
0x4000748	              0xc3	                                     ret	       193	vc_screen.c	FUNCTION_6
vcs_make_sysfs	IF,0:ELSE,0:functions,0:CALL,4:DO,0:FOR,0:WHILE,0:SWITCH,0	22
0x4000e40	              0x55	                                push rbp	       628	vc_screen.c	FUNCTION_13
0x4000e41	          0x8d6f01	                      lea ebp, [rdi + 1]	       629	vc_screen.c	FUNCTION_13	CALL_2
0x4000e44	              0x53	                                push rbx	       628	vc_screen.c	FUNCTION_13
0x4000e45	            0x89fb	                            mov ebx, edi	       628	vc_screen.c	FUNCTION_13
0x4000e47	    0x488b3d000000	            mov rdi, qword [0x04000e4e] 	       629	vc_screen.c	FUNCTION_13	CALL_2
0x4000e4e	    0x49c7c0000000	                               mov r8, 0	       629	vc_screen.c	FUNCTION_13	CALL_2
0x4000e55	            0x89ea	                            mov edx, ebp	       629	vc_screen.c	FUNCTION_13	CALL_2
0x4000e57	          0x4189e9	                            mov r9d, ebp	       629	vc_screen.c	FUNCTION_13	CALL_2
0x4000e5a	            0x31c9	                            xor ecx, ecx	       629	vc_screen.c	FUNCTION_13	CALL_2
0x4000e5c	    0x81ca00007000	                        or edx, 0x700000	       629	vc_screen.c	FUNCTION_13	CALL_2
0x4000e62	            0x31f6	                            xor esi, esi	       629	vc_screen.c	FUNCTION_13	CALL_2
0x4000e64	      0xe800000000	                          call 0x4000e69	       629	vc_screen.c	FUNCTION_13	CALL_2
0x4000e69	    0x8d9381000000	                   lea edx, [rbx + 0x81]	       631	vc_screen.c	FUNCTION_13	CALL_4
0x4000e6f	          0x4189e9	                            mov r9d, ebp	       631	vc_screen.c	FUNCTION_13	CALL_4
0x4000e72	    0x488b3d000000	            mov rdi, qword [0x04000e79] 	       631	vc_screen.c	FUNCTION_13	CALL_4
0x4000e79	              0x5b	                                 pop rbx	       633	vc_screen.c	FUNCTION_13
0x4000e7a	              0x5d	                                 pop rbp	       633	vc_screen.c	FUNCTION_13
0x4000e7b	    0x81ca00007000	                        or edx, 0x700000	       631	vc_screen.c	FUNCTION_13	CALL_4
0x4000e81	    0x49c7c0000000	                               mov r8, 0	       631	vc_screen.c	FUNCTION_13	CALL_4
0x4000e88	            0x31c9	                            xor ecx, ecx	       631	vc_screen.c	FUNCTION_13	CALL_4
0x4000e8a	            0x31f6	                            xor esi, esi	       631	vc_screen.c	FUNCTION_13	CALL_4
0x4000e8c	      0xe900000000	                           jmp 0x4000e91	       631	vc_screen.c	FUNCTION_13	CALL_4
vcs_init	IF,1:ELSE,0:functions,0:CALL,8:DO,0:FOR,1:WHILE,0:SWITCH,0	48
0x4000040	              0x53	                                push rbx	       607	vc_screen.c	FUNCTION_12
0x4000041	    0x488b9ec80000	            mov rbx, qword [rsi + 0xc8] 	       608	vc_screen.c	FUNCTION_12
0x4000048	          0x4885db	                           test rbx, rbx	       610	vc_screen.c	FUNCTION_12	IF_1
0x400004b	            0x7410	                            je 0x400005d	       610	vc_screen.c	FUNCTION_12	IF_1
0x400004d	          0x4889df	                            mov rdi, rbx	        90	vc_screen.c	FUNCTION_2	CALL_1
0x4000050	      0xe800000000	                          call 0x4000055	        90	vc_screen.c	FUNCTION_2	CALL_1
0x4000055	          0x4889df	                            mov rdi, rbx	        91	vc_screen.c	FUNCTION_2	CALL_2
0x4000058	      0xe800000000	                          call 0x400005d	        91	vc_screen.c	FUNCTION_2	CALL_2
0x400005d	            0x31c0	                            xor eax, eax	       613	vc_screen.c	FUNCTION_12
0x400005f	              0x5b	                                 pop rbx	       613	vc_screen.c	FUNCTION_12
0x4000060	              0xc3	                                     ret	       613	vc_screen.c	FUNCTION_12
0x4000061	       0xf1f440000	                   nop dword [rax + rax]	       613	vc_screen.c	FUNCTION_12
0x4000066	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       613	vc_screen.c	FUNCTION_12
0x4000070	              0x53	                                push rbx	       595	vc_screen.c	FUNCTION_11
0x4000071	          0x8b5f4c	            mov ebx, dword [rdi + 0x4c] 	       596	vc_screen.c	FUNCTION_11	CALL_1
0x4000074	      0xe800000000	                          call 0x4000079	       599	vc_screen.c	FUNCTION_11	CALL_2
0x4000079	          0x83e37f	                           and ebx, 0x7f	       596	vc_screen.c	FUNCTION_11	CALL_1
0x400007c	            0x85db	                           test ebx, ebx	       600	vc_screen.c	FUNCTION_11	IF_1	CALL_3
0x400007e	            0x750b	                           jne 0x400008b	       600	vc_screen.c	FUNCTION_11	IF_1	CALL_3
0x4000080	            0x31db	                            xor ebx, ebx	       597	vc_screen.c	FUNCTION_11
0x4000082	      0xe800000000	                          call 0x4000087	       602	vc_screen.c	FUNCTION_11	CALL_4
0x4000087	            0x89d8	                            mov eax, ebx	       604	vc_screen.c	FUNCTION_11
0x4000089	              0x5b	                                 pop rbx	       604	vc_screen.c	FUNCTION_11
0x400008a	              0xc3	                                     ret	       604	vc_screen.c	FUNCTION_11
0x400008b	          0x8d7bff	                      lea edi, [rbx - 1]	       600	vc_screen.c	FUNCTION_11	IF_1	CALL_3
0x400008e	      0xe800000000	                          call 0x4000093	       600	vc_screen.c	FUNCTION_11	IF_1	CALL_3
0x4000093	            0x85c0	                           test eax, eax	       600	vc_screen.c	FUNCTION_11	IF_1	CALL_3
0x4000095	            0x75e9	                           jne 0x4000080	       600	vc_screen.c	FUNCTION_11	IF_1	CALL_3
0x4000097	      0xbbfaffffff	                     mov ebx, 0xfffffffa	       601	vc_screen.c	FUNCTION_11	IF_1
0x400009c	            0xebe4	                           jmp 0x4000082	       601	vc_screen.c	FUNCTION_11	IF_1
0x400009e	            0x6690	                                     nop	       601	vc_screen.c	FUNCTION_11	IF_1
0x40000a0	              0x55	                                push rbp	       142	vc_screen.c	FUNCTION_4
0x40000a1	              0x53	                                push rbx	       142	vc_screen.c	FUNCTION_4
0x40000a2	          0x4889f5	                            mov rbp, rsi	       142	vc_screen.c	FUNCTION_4
0x40000a5	          0x8b5f4c	            mov ebx, dword [rdi + 0x4c] 	       143	vc_screen.c	FUNCTION_4	CALL_1
0x40000a8	      0xe800000000	                          call 0x40000ad	       145	vc_screen.c	FUNCTION_4	CALL_2
0x40000ad	          0x83e37f	                           and ebx, 0x7f	       143	vc_screen.c	FUNCTION_4	CALL_1
0x40000b0	            0x85c0	                           test eax, eax	       145	vc_screen.c	FUNCTION_4	CALL_2
0x40000b2	            0x750a	                           jne 0x40000be	       145	vc_screen.c	FUNCTION_4	CALL_2
0x40000b4	    0x8b0500000000	            mov eax, dword [0x040000ba] 	       145	vc_screen.c	FUNCTION_4	CALL_2
0x40000ba	            0x85c0	                           test eax, eax	       145	vc_screen.c	FUNCTION_4	CALL_2
0x40000bc	            0x7443	                            je 0x4000101	       145	vc_screen.c	FUNCTION_4	CALL_2
0x40000be	            0x85db	                           test ebx, ebx	       147	vc_screen.c	FUNCTION_4	IF_1
0x40000c0	            0x7521	                           jne 0x40000e3	       147	vc_screen.c	FUNCTION_4	IF_1
0x40000c2	          0x4885ed	                           test rbp, rbp	       149	vc_screen.c	FUNCTION_4	IF_1	IF_2
0x40000c5	    0x8b0500000000	            mov eax, dword [0x040000cb] 	       148	vc_screen.c	FUNCTION_4	IF_1
0x40000cb	            0x7407	                            je 0x40000d4	       149	vc_screen.c	FUNCTION_4	IF_1	IF_2
0x40000cd	              0xc7	                                 invalid	       150	vc_screen.c	FUNCTION_4	IF_1	IF_2
vcs_release	IF,1:ELSE,0:functions,0:CALL,1:DO,0:FOR,0:WHILE,0:SWITCH,0	11
0x4000040	              0x53	                                push rbx	       607	vc_screen.c	FUNCTION_12
0x4000041	    0x488b9ec80000	            mov rbx, qword [rsi + 0xc8] 	       608	vc_screen.c	FUNCTION_12
0x4000048	          0x4885db	                           test rbx, rbx	       610	vc_screen.c	FUNCTION_12	IF_1
0x400004b	            0x7410	                            je 0x400005d	       610	vc_screen.c	FUNCTION_12	IF_1
0x400004d	          0x4889df	                            mov rdi, rbx	        90	vc_screen.c	FUNCTION_2	CALL_1
0x4000050	      0xe800000000	                          call 0x4000055	        90	vc_screen.c	FUNCTION_2	CALL_1
0x4000055	          0x4889df	                            mov rdi, rbx	        91	vc_screen.c	FUNCTION_2	CALL_2
0x4000058	      0xe800000000	                          call 0x400005d	        91	vc_screen.c	FUNCTION_2	CALL_2
0x400005d	            0x31c0	                            xor eax, eax	       613	vc_screen.c	FUNCTION_12
0x400005f	              0x5b	                                 pop rbx	       613	vc_screen.c	FUNCTION_12
0x4000060	              0xc3	                                     ret	       613	vc_screen.c	FUNCTION_12
