acpi_ns_convert_to_resource	WHILE,0:IF,4:SWITCH,1:DO,0:FOR,0:CALL,2:functions,0:ELSE,0	33
0x4000310	          0x4885f6	                           test rsi, rsi	       369	nsconvert.c	FUNCTION_5	IF_1
0x4000313	              0x53	                                push rbx	       356	nsconvert.c	FUNCTION_5
0x4000314	            0x742a	                            je 0x4000340	       369	nsconvert.c	FUNCTION_5	IF_1
0x4000316	          0x8a4609	                  mov al, byte [rsi + 9]	       370	nsconvert.c	FUNCTION_5	IF_1	SWITCH_1
0x4000319	            0x3c01	                               cmp al, 1	       370	nsconvert.c	FUNCTION_5	IF_1	SWITCH_1
0x400031b	            0x7406	                            je 0x4000323	       370	nsconvert.c	FUNCTION_5	IF_1	SWITCH_1
0x400031d	            0x3c03	                               cmp al, 3	       370	nsconvert.c	FUNCTION_5	IF_1	SWITCH_1
0x400031f	            0x7410	                            je 0x4000331	       370	nsconvert.c	FUNCTION_5	IF_1	SWITCH_1
0x4000321	            0xeb46	                           jmp 0x4000369	       370	nsconvert.c	FUNCTION_5	IF_1	SWITCH_1
0x4000323	      0x48837e1000	               cmp qword [rsi + 0x10], 0	       375	nsconvert.c	FUNCTION_5	IF_1	SWITCH_1	IF_2
0x4000328	      0xb903300000	                         mov ecx, 0x3003	       376	nsconvert.c	FUNCTION_5	IF_1	SWITCH_1	IF_2
0x400032d	            0x753f	                           jne 0x400036e	       375	nsconvert.c	FUNCTION_5	IF_1	SWITCH_1	IF_2
0x400032f	            0xeb0f	                           jmp 0x4000340	       375	nsconvert.c	FUNCTION_5	IF_1	SWITCH_1	IF_2
0x4000331	        0x837e1800	               cmp dword [rsi + 0x18], 0	       382	nsconvert.c	FUNCTION_5	IF_1	SWITCH_1	IF_3
0x4000335	            0x7409	                            je 0x4000340	       382	nsconvert.c	FUNCTION_5	IF_1	SWITCH_1	IF_3
0x4000337	    0x48c702000000	                      mov qword [rdx], 0	       386	nsconvert.c	FUNCTION_5	IF_1	SWITCH_1	IF_3
0x400033e	            0xeb25	                           jmp 0x4000365	       386	nsconvert.c	FUNCTION_5	IF_1	SWITCH_1	IF_3
0x4000340	      0xbf02000000	                              mov edi, 2	       400	nsconvert.c	FUNCTION_5	CALL_1
0x4000345	          0x4889d3	                            mov rbx, rdx	       400	nsconvert.c	FUNCTION_5	CALL_1
0x4000348	      0xe800000000	                          call 0x400034d	       400	nsconvert.c	FUNCTION_5	CALL_1
0x400034d	          0x4885c0	                           test rax, rax	       401	nsconvert.c	FUNCTION_5	IF_4
0x4000350	      0xb904000000	                              mov ecx, 4	       402	nsconvert.c	FUNCTION_5	IF_4
0x4000355	            0x7417	                            je 0x400036e	       401	nsconvert.c	FUNCTION_5	IF_4
0x4000357	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       405	nsconvert.c	FUNCTION_5	CALL_2
0x400035b	          0xc60279	                    mov byte [rdx], 0x79	       409	nsconvert.c	FUNCTION_5
0x400035e	        0xc6420100	                   mov byte [rdx + 1], 0	       410	nsconvert.c	FUNCTION_5
0x4000362	          0x488903	                    mov qword [rbx], rax	       412	nsconvert.c	FUNCTION_5
0x4000365	            0x31c9	                            xor ecx, ecx	       413	nsconvert.c	FUNCTION_5
0x4000367	            0xeb05	                           jmp 0x400036e	       413	nsconvert.c	FUNCTION_5
0x4000369	      0xb903300000	                         mov ecx, 0x3003	       394	nsconvert.c	FUNCTION_5	IF_1	SWITCH_1
0x400036e	            0x89c8	                            mov eax, ecx	       414	nsconvert.c	FUNCTION_5
0x4000370	              0x5b	                                 pop rbx	       414	nsconvert.c	FUNCTION_5
0x4000371	              0xc3	                                     ret	       414	nsconvert.c	FUNCTION_5
acpi_ns_convert_to_unicode	WHILE,0:IF,4:SWITCH,0:DO,0:FOR,1:CALL,2:functions,0:ELSE,0	40
0x40002a0	            0x31c9	                            xor ecx, ecx	       297	nsconvert.c	FUNCTION_4	IF_1
0x40002a2	          0x4885f6	                           test rsi, rsi	       296	nsconvert.c	FUNCTION_4	IF_1
0x40002a5	            0x741a	                            je 0x40002c1	       296	nsconvert.c	FUNCTION_4	IF_1
0x40002a7	        0x807e0903	                   cmp byte [rsi + 9], 3	       302	nsconvert.c	FUNCTION_4	IF_2
0x40002ab	            0x7517	                           jne 0x40002c4	       302	nsconvert.c	FUNCTION_4	IF_2
0x40002ad	        0x837e1801	               cmp dword [rsi + 0x18], 1	       303	nsconvert.c	FUNCTION_4	IF_2	IF_3
0x40002b1	      0xb904300000	                         mov ecx, 0x3004	       304	nsconvert.c	FUNCTION_4	IF_2	IF_3
0x40002b6	            0x7609	                           jbe 0x40002c1	       303	nsconvert.c	FUNCTION_4	IF_2	IF_3
0x40002b8	    0x48c702000000	                      mov qword [rdx], 0	       307	nsconvert.c	FUNCTION_4	IF_2
0x40002bf	            0x31c9	                            xor ecx, ecx	       308	nsconvert.c	FUNCTION_4	IF_2
0x40002c1	            0x89c8	                            mov eax, ecx	       335	nsconvert.c	FUNCTION_4
0x40002c3	              0xc3	                                     ret	       335	nsconvert.c	FUNCTION_4
0x40002c4	            0x4154	                                push r12	       289	nsconvert.c	FUNCTION_4
0x40002c6	              0x55	                                push rbp	       289	nsconvert.c	FUNCTION_4
0x40002c7	          0x4889d5	                            mov rbp, rdx	       289	nsconvert.c	FUNCTION_4
0x40002ca	              0x53	                                push rbx	       289	nsconvert.c	FUNCTION_4
0x40002cb	          0x8b4618	            mov eax, dword [rsi + 0x18] 	       320	nsconvert.c	FUNCTION_4	CALL_1
0x40002ce	          0x4889f3	                            mov rbx, rsi	       320	nsconvert.c	FUNCTION_4	CALL_1
0x40002d1	        0x4c8b6610	            mov r12, qword [rsi + 0x10] 	       315	nsconvert.c	FUNCTION_4
0x40002d5	        0x8d7c0002	                lea edi, [rax + rax + 2]	       320	nsconvert.c	FUNCTION_4	CALL_1
0x40002d9	      0xe800000000	                          call 0x40002de	       320	nsconvert.c	FUNCTION_4	CALL_1
0x40002de	          0x4885c0	                           test rax, rax	       321	nsconvert.c	FUNCTION_4	IF_4
0x40002e1	      0xb904000000	                              mov ecx, 4	       322	nsconvert.c	FUNCTION_4	IF_4
0x40002e6	            0x7421	                            je 0x4000309	       321	nsconvert.c	FUNCTION_4	IF_4
0x40002e8	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       325	nsconvert.c	FUNCTION_4	CALL_2
0x40002ec	            0x31d2	                            xor edx, edx	       329	nsconvert.c	FUNCTION_4	FOR_1
0x40002ee	          0x3b5318	            cmp edx, dword [rbx + 0x18] 	       329	nsconvert.c	FUNCTION_4	FOR_1
0x40002f1	            0x7310	                           jae 0x4000303	       329	nsconvert.c	FUNCTION_4	FOR_1
0x40002f3	            0x89d1	                            mov ecx, edx	       330	nsconvert.c	FUNCTION_4	FOR_1
0x40002f5	            0xffc2	                                 inc edx	       329	nsconvert.c	FUNCTION_4	FOR_1
0x40002f7	    0x66410fbe3c0c	              movsx di, byte [r12 + rcx]	       330	nsconvert.c	FUNCTION_4	FOR_1
0x40002fd	        0x66893c4e	              mov word [rsi + rcx*2], di	       330	nsconvert.c	FUNCTION_4	FOR_1
0x4000301	            0xebeb	                           jmp 0x40002ee	       330	nsconvert.c	FUNCTION_4	FOR_1
0x4000303	        0x48894500	                    mov qword [rbp], rax	       333	nsconvert.c	FUNCTION_4
0x4000307	            0x31c9	                            xor ecx, ecx	       334	nsconvert.c	FUNCTION_4
0x4000309	              0x5b	                                 pop rbx	       335	nsconvert.c	FUNCTION_4
0x400030a	            0x89c8	                            mov eax, ecx	       335	nsconvert.c	FUNCTION_4
0x400030c	              0x5d	                                 pop rbp	       335	nsconvert.c	FUNCTION_4
0x400030d	            0x415c	                                 pop r12	       335	nsconvert.c	FUNCTION_4
0x400030f	              0xc3	                                     ret	       335	nsconvert.c	FUNCTION_4
acpi_ns_convert_to_reference	WHILE,0:IF,3:SWITCH,0:DO,0:FOR,0:CALL,11:functions,0:ELSE,0	73
0x4000372	      0x4c8d542408	                      lea r10, [rsp + 8]	       435	nsconvert.c	FUNCTION_6
0x4000377	        0x4883e4f0	             and rsp, 0xfffffffffffffff0	       435	nsconvert.c	FUNCTION_6
0x400037b	        0x41ff72f8	                    push qword [r10 - 8]	       435	nsconvert.c	FUNCTION_6
0x400037f	              0x55	                                push rbp	       435	nsconvert.c	FUNCTION_6
0x4000380	          0x4889e5	                            mov rbp, rsp	       435	nsconvert.c	FUNCTION_6
0x4000383	            0x4155	                                push r13	       435	nsconvert.c	FUNCTION_6
0x4000385	            0x4154	                                push r12	       435	nsconvert.c	FUNCTION_6
0x4000387	            0x4152	                                push r10	       435	nsconvert.c	FUNCTION_6
0x4000389	              0x53	                                push rbx	       435	nsconvert.c	FUNCTION_6
0x400038a	          0x4989fd	                            mov r13, rdi	       435	nsconvert.c	FUNCTION_6
0x400038d	          0x4889f3	                            mov rbx, rsi	       435	nsconvert.c	FUNCTION_6
0x4000390	          0x4989d4	                            mov r12, rdx	       435	nsconvert.c	FUNCTION_6
0x4000393	        0x4883ec70	                           sub rsp, 0x70	       435	nsconvert.c	FUNCTION_6
0x4000397	        0x488b7e10	            mov rdi, qword [rsi + 0x10] 	       446	nsconvert.c	FUNCTION_6
0x400039b	    0x488db578ffff	                   lea rsi, [rbp - 0x88]	       446	nsconvert.c	FUNCTION_6
0x40003a2	    0x65488b042528	                mov rax, qword gs:[0x28]	       435	nsconvert.c	FUNCTION_6
0x40003ab	        0x488945d8	             mov qword [rbp - 0x28], rax	       435	nsconvert.c	FUNCTION_6
0x40003af	            0x31c0	                            xor eax, eax	       435	nsconvert.c	FUNCTION_6
0x40003b1	      0xe800000000	                          call 0x40003b6	       446	nsconvert.c	FUNCTION_6
0x40003b6	            0x85c0	                           test eax, eax	       448	nsconvert.c	FUNCTION_6	IF_1	CALL_3
0x40003b8	     0xf85a5000000	                           jne 0x4000463	       448	nsconvert.c	FUNCTION_6	IF_1	CALL_3
0x40003be	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       456	nsconvert.c	FUNCTION_6
0x40003c5	    0x488bb578ffff	             mov rsi, qword [rbp - 0x88]	       456	nsconvert.c	FUNCTION_6
0x40003cc	        0x488d7d80	                   lea rdi, [rbp - 0x80]	       456	nsconvert.c	FUNCTION_6
0x40003d0	          0x4531c9	                            xor r9d, r9d	       456	nsconvert.c	FUNCTION_6
0x40003d3	    0x41b803000000	                              mov r8d, 3	       456	nsconvert.c	FUNCTION_6
0x40003d9	            0x31d2	                            xor edx, edx	       456	nsconvert.c	FUNCTION_6
0x40003db	              0x50	                                push rax	       456	nsconvert.c	FUNCTION_6
0x40003dc	      0xb903000000	                              mov ecx, 3	       456	nsconvert.c	FUNCTION_6
0x40003e1	        0x4c896d90	             mov qword [rbp - 0x70], r13	       454	nsconvert.c	FUNCTION_6
0x40003e5	      0xe800000000	                          call 0x40003ea	       456	nsconvert.c	FUNCTION_6
0x40003ea	          0x4189c0	                            mov r8d, eax	       456	nsconvert.c	FUNCTION_6
0x40003ed	          0x4585c0	                           test r8d, r8d	       460	nsconvert.c	FUNCTION_6	IF_2	CALL_7
0x40003f0	              0x58	                                 pop rax	       460	nsconvert.c	FUNCTION_6	IF_2	CALL_7
0x40003f1	            0x741d	                            je 0x4000410	       460	nsconvert.c	FUNCTION_6	IF_2	CALL_7
0x40003f3	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       464	nsconvert.c	FUNCTION_6	IF_2	CALL_8
0x40003f7	        0x488d5580	                   lea rdx, [rbp - 0x80]	       464	nsconvert.c	FUNCTION_6	IF_2	CALL_8
0x40003fb	      0xbed1010000	                          mov esi, 0x1d1	       464	nsconvert.c	FUNCTION_6	IF_2	CALL_8
0x4000400	    0x48c7c7000000	                              mov rdi, 0	       464	nsconvert.c	FUNCTION_6	IF_2	CALL_8
0x4000407	            0x31db	                            xor ebx, ebx	       436	nsconvert.c	FUNCTION_6
0x4000409	      0xe800000000	                          call 0x400040e	       464	nsconvert.c	FUNCTION_6	IF_2	CALL_8
0x400040e	            0xeb41	                           jmp 0x4000451	       466	nsconvert.c	FUNCTION_6	IF_2
0x4000410	      0xb914000000	                           mov ecx, 0x14	       471	nsconvert.c	FUNCTION_6	CALL_9
0x4000415	      0xba10000000	                           mov edx, 0x10	       471	nsconvert.c	FUNCTION_6	CALL_9
0x400041a	      0xbed7010000	                          mov esi, 0x1d7	       471	nsconvert.c	FUNCTION_6	CALL_9
0x400041f	    0x48c7c7000000	                              mov rdi, 0	       471	nsconvert.c	FUNCTION_6	CALL_9
0x4000426	      0xe800000000	                          call 0x400042b	       471	nsconvert.c	FUNCTION_6	CALL_9
0x400042b	          0x4885c0	                           test rax, rax	       472	nsconvert.c	FUNCTION_6	IF_3
0x400042e	          0x4889c3	                            mov rbx, rax	       471	nsconvert.c	FUNCTION_6	CALL_9
0x4000431	            0x741e	                            je 0x4000451	       472	nsconvert.c	FUNCTION_6	IF_3
0x4000433	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       476	nsconvert.c	FUNCTION_6
0x400043a	        0x48894318	             mov qword [rbx + 0x18], rax	       476	nsconvert.c	FUNCTION_6
0x400043e	          0x488b10	                    mov rdx, qword [rax]	       477	nsconvert.c	FUNCTION_6
0x4000441	        0xc6430d05	                 mov byte [rbx + 0xd], 5	       478	nsconvert.c	FUNCTION_6
0x4000445	        0x48895310	             mov qword [rbx + 0x10], rdx	       477	nsconvert.c	FUNCTION_6
0x4000449	          0x488b38	                    mov rdi, qword [rax]	       484	nsconvert.c	FUNCTION_6	CALL_10
0x400044c	      0xe800000000	                          call 0x4000451	       484	nsconvert.c	FUNCTION_6	CALL_10
0x4000451	    0x488bbd78ffff	             mov rdi, qword [rbp - 0x88]	        62	aclinuxex.h	FUNCTION_9	CALL_1
0x4000458	      0xe800000000	                          call 0x400045d	        62	aclinuxex.h	FUNCTION_9	CALL_1
0x400045d	        0x49891c24	                    mov qword [r12], rbx	       488	nsconvert.c	FUNCTION_6
0x4000461	            0x31c0	                            xor eax, eax	       489	nsconvert.c	FUNCTION_6
0x4000463	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       490	nsconvert.c	FUNCTION_6
0x4000467	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       490	nsconvert.c	FUNCTION_6
0x4000470	            0x7405	                            je 0x4000477	       490	nsconvert.c	FUNCTION_6
0x4000472	      0xe800000000	                          call 0x4000477	       490	nsconvert.c	FUNCTION_6
0x4000477	        0x488d65e0	                   lea rsp, [rbp - 0x20]	       490	nsconvert.c	FUNCTION_6
0x400047b	              0x5b	                                 pop rbx	       490	nsconvert.c	FUNCTION_6
0x400047c	            0x415a	                                 pop r10	       490	nsconvert.c	FUNCTION_6
0x400047e	            0x415c	                                 pop r12	       490	nsconvert.c	FUNCTION_6
0x4000480	            0x415d	                                 pop r13	       490	nsconvert.c	FUNCTION_6
0x4000482	              0x5d	                                 pop rbp	       490	nsconvert.c	FUNCTION_6
0x4000483	        0x498d62f8	                      lea rsp, [r10 - 8]	       490	nsconvert.c	FUNCTION_6
0x4000487	              0xc3	                                     ret	       490	nsconvert.c	FUNCTION_6
acpi_ns_convert_to_integer	WHILE,0:IF,3:SWITCH,1:DO,0:FOR,1:CALL,3:functions,0:ELSE,0	50
0x4000040	              0x53	                                push rbx	        36	nsconvert.c	FUNCTION_1
0x4000041	          0x4889f3	                            mov rbx, rsi	        36	nsconvert.c	FUNCTION_1
0x4000044	        0x4883ec10	                           sub rsp, 0x10	        36	nsconvert.c	FUNCTION_1
0x4000048	    0x65488b042528	                mov rax, qword gs:[0x28]	        36	nsconvert.c	FUNCTION_1
0x4000051	      0x4889442408	                mov qword [rsp + 8], rax	        36	nsconvert.c	FUNCTION_1
0x4000056	            0x31c0	                            xor eax, eax	        36	nsconvert.c	FUNCTION_1
0x4000058	          0x8a4709	                  mov al, byte [rdi + 9]	        42	nsconvert.c	FUNCTION_1	SWITCH_1
0x400005b	    0x48c704240000	                      mov qword [rsp], 0	        39	nsconvert.c	FUNCTION_1
0x4000063	            0x3c02	                               cmp al, 2	        42	nsconvert.c	FUNCTION_1	SWITCH_1
0x4000065	            0x7406	                            je 0x400006d	        42	nsconvert.c	FUNCTION_1	SWITCH_1
0x4000067	            0x3c03	                               cmp al, 3	        42	nsconvert.c	FUNCTION_1	SWITCH_1
0x4000069	            0x742f	                            je 0x400009a	        42	nsconvert.c	FUNCTION_1	SWITCH_1
0x400006b	            0xeb59	                           jmp 0x40000c6	        42	nsconvert.c	FUNCTION_1	SWITCH_1
0x400006d	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	        47	nsconvert.c	FUNCTION_1	SWITCH_1
0x4000071	          0x4889e6	                            mov rsi, rsp	        47	nsconvert.c	FUNCTION_1	SWITCH_1
0x4000074	      0xe800000000	                          call 0x4000079	        47	nsconvert.c	FUNCTION_1	SWITCH_1
0x4000079	            0x85c0	                           test eax, eax	        49	nsconvert.c	FUNCTION_1	SWITCH_1	IF_1	CALL_2
0x400007b	            0x754e	                           jne 0x40000cb	        49	nsconvert.c	FUNCTION_1	SWITCH_1	IF_1	CALL_2
0x400007d	        0x488b3c24	                    mov rdi, qword [rsp]	        76	nsconvert.c	FUNCTION_1	CALL_3
0x4000081	      0xe800000000	                          call 0x4000086	        76	nsconvert.c	FUNCTION_1	CALL_3
0x4000086	          0x4889c2	                            mov rdx, rax	        76	nsconvert.c	FUNCTION_1	CALL_3
0x4000089	      0xb804000000	                              mov eax, 4	        78	nsconvert.c	FUNCTION_1	IF_3
0x400008e	          0x4885d2	                           test rdx, rdx	        77	nsconvert.c	FUNCTION_1	IF_3
0x4000091	            0x7438	                            je 0x40000cb	        77	nsconvert.c	FUNCTION_1	IF_3
0x4000093	          0x488913	                    mov qword [rbx], rdx	        81	nsconvert.c	FUNCTION_1
0x4000096	            0x31c0	                            xor eax, eax	        82	nsconvert.c	FUNCTION_1
0x4000098	            0xeb31	                           jmp 0x40000cb	        82	nsconvert.c	FUNCTION_1
0x400009a	          0x8b7718	            mov esi, dword [rdi + 0x18] 	        58	nsconvert.c	FUNCTION_1	SWITCH_1	IF_2
0x400009d	      0xb803300000	                         mov eax, 0x3003	        59	nsconvert.c	FUNCTION_1	SWITCH_1	IF_2
0x40000a2	          0x83fe08	                              cmp esi, 8	        58	nsconvert.c	FUNCTION_1	SWITCH_1	IF_2
0x40000a5	            0x7724	                            ja 0x40000cb	        58	nsconvert.c	FUNCTION_1	SWITCH_1	IF_2
0x40000a7	            0x31c9	                            xor ecx, ecx	        58	nsconvert.c	FUNCTION_1	SWITCH_1	IF_2
0x40000a9	            0x31c0	                            xor eax, eax	        58	nsconvert.c	FUNCTION_1	SWITCH_1	IF_2
0x40000ab	            0x39c6	                            cmp esi, eax	        64	nsconvert.c	FUNCTION_1	SWITCH_1	FOR_1
0x40000ad	            0x76ce	                           jbe 0x400007d	        64	nsconvert.c	FUNCTION_1	SWITCH_1	FOR_1
0x40000af	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	        66	nsconvert.c	FUNCTION_1	SWITCH_1	FOR_1
0x40000b3	         0xfb61402	             movzx edx, byte [rdx + rax]	        65	nsconvert.c	FUNCTION_1	SWITCH_1	FOR_1
0x40000b7	          0x48ffc0	                                 inc rax	        65	nsconvert.c	FUNCTION_1	SWITCH_1	FOR_1
0x40000ba	          0x48d3e2	                             shl rdx, cl	        65	nsconvert.c	FUNCTION_1	SWITCH_1	FOR_1
0x40000bd	          0x83c108	                              add ecx, 8	        65	nsconvert.c	FUNCTION_1	SWITCH_1	FOR_1
0x40000c0	        0x48091424	                     or qword [rsp], rdx	        65	nsconvert.c	FUNCTION_1	SWITCH_1	FOR_1
0x40000c4	            0xebe5	                           jmp 0x40000ab	        65	nsconvert.c	FUNCTION_1	SWITCH_1	FOR_1
0x40000c6	      0xb803300000	                         mov eax, 0x3003	        73	nsconvert.c	FUNCTION_1	SWITCH_1
0x40000cb	      0x488b5c2408	                mov rbx, qword [rsp + 8]	        83	nsconvert.c	FUNCTION_1
0x40000d0	    0x6548331c2528	                xor rbx, qword gs:[0x28]	        83	nsconvert.c	FUNCTION_1
0x40000d9	            0x7405	                            je 0x40000e0	        83	nsconvert.c	FUNCTION_1
0x40000db	      0xe800000000	                          call 0x40000e0	        83	nsconvert.c	FUNCTION_1
0x40000e0	        0x4883c410	                           add rsp, 0x10	        83	nsconvert.c	FUNCTION_1
0x40000e4	              0x5b	                                 pop rbx	        83	nsconvert.c	FUNCTION_1
0x40000e5	              0xc3	                                     ret	        83	nsconvert.c	FUNCTION_1
acpi_ns_convert_to_buffer	WHILE,0:IF,4:SWITCH,1:DO,0:FOR,2:CALL,7:functions,0:ELSE,0	75
0x40001a9	            0x4154	                                push r12	       184	nsconvert.c	FUNCTION_3
0x40001ab	              0x55	                                push rbp	       184	nsconvert.c	FUNCTION_3
0x40001ac	          0x4889f5	                            mov rbp, rsi	       184	nsconvert.c	FUNCTION_3
0x40001af	              0x53	                                push rbx	       184	nsconvert.c	FUNCTION_3
0x40001b0	          0x4889fb	                            mov rbx, rdi	       184	nsconvert.c	FUNCTION_3
0x40001b3	        0x4883ec10	                           sub rsp, 0x10	       184	nsconvert.c	FUNCTION_3
0x40001b7	    0x65488b042528	                mov rax, qword gs:[0x28]	       184	nsconvert.c	FUNCTION_3
0x40001c0	      0x4889442408	                mov qword [rsp + 8], rax	       184	nsconvert.c	FUNCTION_3
0x40001c5	            0x31c0	                            xor eax, eax	       184	nsconvert.c	FUNCTION_3
0x40001c7	          0x8a4709	                  mov al, byte [rdi + 9]	       192	nsconvert.c	FUNCTION_3	SWITCH_1
0x40001ca	            0x3c02	                               cmp al, 2	       192	nsconvert.c	FUNCTION_3	SWITCH_1
0x40001cc	            0x7421	                            je 0x40001ef	       192	nsconvert.c	FUNCTION_3	SWITCH_1
0x40001ce	            0x3c04	                               cmp al, 4	       192	nsconvert.c	FUNCTION_3	SWITCH_1
0x40001d0	            0x7447	                            je 0x4000219	       192	nsconvert.c	FUNCTION_3	SWITCH_1
0x40001d2	            0xfec8	                                  dec al	       192	nsconvert.c	FUNCTION_3	SWITCH_1
0x40001d4	     0xf85a3000000	                           jne 0x400027d	       192	nsconvert.c	FUNCTION_3	SWITCH_1
0x40001da	          0x4889e6	                            mov rsi, rsp	       201	nsconvert.c	FUNCTION_3	SWITCH_1
0x40001dd	      0xe800000000	                          call 0x40001e2	       201	nsconvert.c	FUNCTION_3	SWITCH_1
0x40001e2	            0x85c0	                           test eax, eax	       203	nsconvert.c	FUNCTION_3	SWITCH_1	IF_1	CALL_2
0x40001e4	     0xf8487000000	                            je 0x4000271	       203	nsconvert.c	FUNCTION_3	SWITCH_1	IF_1	CALL_2
0x40001ea	      0xe993000000	                           jmp 0x4000282	       203	nsconvert.c	FUNCTION_3	SWITCH_1	IF_1	CALL_2
0x40001ef	          0x8b7f18	            mov edi, dword [rdi + 0x18] 	       212	nsconvert.c	FUNCTION_3	SWITCH_1	CALL_3
0x40001f2	      0xe800000000	                          call 0x40001f7	       212	nsconvert.c	FUNCTION_3	SWITCH_1	CALL_3
0x40001f7	          0x4885c0	                           test rax, rax	       214	nsconvert.c	FUNCTION_3	SWITCH_1	IF_2
0x40001fa	        0x48890424	                    mov qword [rsp], rax	       212	nsconvert.c	FUNCTION_3	SWITCH_1	CALL_3
0x40001fe	            0x7507	                           jne 0x4000207	       214	nsconvert.c	FUNCTION_3	SWITCH_1	IF_2
0x4000200	      0xb804000000	                              mov eax, 4	       215	nsconvert.c	FUNCTION_3	SWITCH_1	IF_2
0x4000205	            0xeb7b	                           jmp 0x4000282	       215	nsconvert.c	FUNCTION_3	SWITCH_1	IF_2
0x4000207	        0x488b4010	            mov rax, qword [rax + 0x10] 	       218	nsconvert.c	FUNCTION_3	SWITCH_1	CALL_4
0x400020b	          0x8b4b18	            mov ecx, dword [rbx + 0x18] 	       218	nsconvert.c	FUNCTION_3	SWITCH_1	CALL_4
0x400020e	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       218	nsconvert.c	FUNCTION_3	SWITCH_1	CALL_4
0x4000212	          0x4889c7	                            mov rdi, rax	       218	nsconvert.c	FUNCTION_3	SWITCH_1	CALL_4
0x4000215	            0xf3a4	    rep movsb byte [rdi], byte ptr [rsi]	       218	nsconvert.c	FUNCTION_3	SWITCH_1	CALL_4
0x4000217	            0xeb58	                           jmp 0x4000271	       221	nsconvert.c	FUNCTION_3	SWITCH_1
0x4000219	        0x488b4f18	            mov rcx, qword [rdi + 0x18] 	       232	nsconvert.c	FUNCTION_3	SWITCH_1
0x400021d	        0x448b672c	           mov r12d, dword [rdi + 0x2c] 	       233	nsconvert.c	FUNCTION_3	SWITCH_1
0x4000221	            0x31c0	                            xor eax, eax	       235	nsconvert.c	FUNCTION_3	SWITCH_1	FOR_1
0x4000223	          0x4139c4	                           cmp r12d, eax	       235	nsconvert.c	FUNCTION_3	SWITCH_1	FOR_1
0x4000226	            0x7614	                           jbe 0x400023c	       235	nsconvert.c	FUNCTION_3	SWITCH_1	FOR_1
0x4000228	        0x488b14c1	            mov rdx, qword [rcx + rax*8]	       236	nsconvert.c	FUNCTION_3	SWITCH_1	FOR_1	IF_3
0x400022c	          0x4885d2	                           test rdx, rdx	       236	nsconvert.c	FUNCTION_3	SWITCH_1	FOR_1	IF_3
0x400022f	            0x744c	                            je 0x400027d	       236	nsconvert.c	FUNCTION_3	SWITCH_1	FOR_1	IF_3
0x4000231	          0x48ffc0	                                 inc rax	       236	nsconvert.c	FUNCTION_3	SWITCH_1	FOR_1	IF_3
0x4000234	        0x807a0901	                   cmp byte [rdx + 9], 1	       236	nsconvert.c	FUNCTION_3	SWITCH_1	FOR_1	IF_3
0x4000238	            0x74e9	                            je 0x4000223	       236	nsconvert.c	FUNCTION_3	SWITCH_1	FOR_1	IF_3
0x400023a	            0xeb41	                           jmp 0x400027d	       236	nsconvert.c	FUNCTION_3	SWITCH_1	FOR_1	IF_3
0x400023c	    0x428d3ca50000	                        lea edi, [r12*4]	       245	nsconvert.c	FUNCTION_3	SWITCH_1	CALL_6
0x4000244	      0xe800000000	                          call 0x4000249	       245	nsconvert.c	FUNCTION_3	SWITCH_1	CALL_6
0x4000249	          0x4885c0	                           test rax, rax	       246	nsconvert.c	FUNCTION_3	SWITCH_1	IF_4
0x400024c	        0x48890424	                    mov qword [rsp], rax	       245	nsconvert.c	FUNCTION_3	SWITCH_1	CALL_6
0x4000250	            0x74ae	                            je 0x4000200	       246	nsconvert.c	FUNCTION_3	SWITCH_1	IF_4
0x4000252	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       252	nsconvert.c	FUNCTION_3	SWITCH_1
0x4000256	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       253	nsconvert.c	FUNCTION_3	SWITCH_1	CALL_7
0x400025a	            0x31c0	                            xor eax, eax	       255	nsconvert.c	FUNCTION_3	SWITCH_1	FOR_2
0x400025c	          0x4139c4	                           cmp r12d, eax	       255	nsconvert.c	FUNCTION_3	SWITCH_1	FOR_2
0x400025f	            0x7610	                           jbe 0x4000271	       255	nsconvert.c	FUNCTION_3	SWITCH_1	FOR_2
0x4000261	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       256	nsconvert.c	FUNCTION_3	SWITCH_1	FOR_2
0x4000265	        0x488b7610	            mov rsi, qword [rsi + 0x10] 	       256	nsconvert.c	FUNCTION_3	SWITCH_1	FOR_2
0x4000269	          0x893481	            mov dword [rcx + rax*4], esi	       256	nsconvert.c	FUNCTION_3	SWITCH_1	FOR_2
0x400026c	          0x48ffc0	                                 inc rax	       256	nsconvert.c	FUNCTION_3	SWITCH_1	FOR_2
0x400026f	            0xebeb	                           jmp 0x400025c	       256	nsconvert.c	FUNCTION_3	SWITCH_1	FOR_2
0x4000271	        0x488b0424	                    mov rax, qword [rsp]	       267	nsconvert.c	FUNCTION_3
0x4000275	        0x48894500	                    mov qword [rbp], rax	       267	nsconvert.c	FUNCTION_3
0x4000279	            0x31c0	                            xor eax, eax	       268	nsconvert.c	FUNCTION_3
0x400027b	            0xeb05	                           jmp 0x4000282	       268	nsconvert.c	FUNCTION_3
0x400027d	      0xb803300000	                         mov eax, 0x3003	       238	nsconvert.c	FUNCTION_3	SWITCH_1	FOR_1	IF_3
0x4000282	      0x488b542408	                mov rdx, qword [rsp + 8]	       269	nsconvert.c	FUNCTION_3
0x4000287	    0x654833142528	                xor rdx, qword gs:[0x28]	       269	nsconvert.c	FUNCTION_3
0x4000290	            0x7405	                            je 0x4000297	       269	nsconvert.c	FUNCTION_3
0x4000292	      0xe800000000	                          call 0x4000297	       269	nsconvert.c	FUNCTION_3
0x4000297	        0x4883c410	                           add rsp, 0x10	       269	nsconvert.c	FUNCTION_3
0x400029b	              0x5b	                                 pop rbx	       269	nsconvert.c	FUNCTION_3
0x400029c	              0x5d	                                 pop rbp	       269	nsconvert.c	FUNCTION_3
0x400029d	            0x415c	                                 pop r12	       269	nsconvert.c	FUNCTION_3
0x400029f	              0xc3	                                     ret	       269	nsconvert.c	FUNCTION_3
acpi_ns_convert_to_string	WHILE,1:IF,4:SWITCH,1:DO,0:FOR,0:CALL,5:functions,0:ELSE,1	62
0x40000e6	            0x4154	                                push r12	       101	nsconvert.c	FUNCTION_2
0x40000e8	              0x55	                                push rbp	       101	nsconvert.c	FUNCTION_2
0x40000e9	          0x4989f4	                            mov r12, rsi	       101	nsconvert.c	FUNCTION_2
0x40000ec	              0x53	                                push rbx	       101	nsconvert.c	FUNCTION_2
0x40000ed	          0x4889fd	                            mov rbp, rdi	       101	nsconvert.c	FUNCTION_2
0x40000f0	        0x4883ec10	                           sub rsp, 0x10	       101	nsconvert.c	FUNCTION_2
0x40000f4	    0x65488b042528	                mov rax, qword gs:[0x28]	       101	nsconvert.c	FUNCTION_2
0x40000fd	      0x4889442408	                mov qword [rsp + 8], rax	       101	nsconvert.c	FUNCTION_2
0x4000102	            0x31c0	                            xor eax, eax	       101	nsconvert.c	FUNCTION_2
0x4000104	          0x8a4709	                  mov al, byte [rdi + 9]	       106	nsconvert.c	FUNCTION_2	SWITCH_1
0x4000107	            0x3c01	                               cmp al, 1	       106	nsconvert.c	FUNCTION_2	SWITCH_1
0x4000109	            0x740b	                            je 0x4000116	       106	nsconvert.c	FUNCTION_2	SWITCH_1
0x400010b	            0x3c03	                               cmp al, 3	       106	nsconvert.c	FUNCTION_2	SWITCH_1
0x400010d	            0x7577	                           jne 0x4000186	       106	nsconvert.c	FUNCTION_2	SWITCH_1
0x400010f	          0x8b5718	            mov edx, dword [rdi + 0x18] 	       139	nsconvert.c	FUNCTION_2	SWITCH_1	WHILE_1
0x4000112	            0x31db	                            xor ebx, ebx	       139	nsconvert.c	FUNCTION_2	SWITCH_1	WHILE_1
0x4000114	            0xeb3e	                           jmp 0x4000154	       139	nsconvert.c	FUNCTION_2	SWITCH_1	WHILE_1
0x4000116	      0x48837f1000	               cmp qword [rdi + 0x10], 0	       113	nsconvert.c	FUNCTION_2	SWITCH_1	IF_1
0x400011b	            0x7517	                           jne 0x4000134	       113	nsconvert.c	FUNCTION_2	SWITCH_1	IF_1
0x400011d	            0x31ff	                            xor edi, edi	       117	nsconvert.c	FUNCTION_2	SWITCH_1	IF_1	CALL_1
0x400011f	      0xe800000000	                          call 0x4000124	       117	nsconvert.c	FUNCTION_2	SWITCH_1	IF_1	CALL_1
0x4000124	          0x4885c0	                           test rax, rax	       118	nsconvert.c	FUNCTION_2	SWITCH_1	IF_1	IF_2
0x4000127	        0x48890424	                    mov qword [rsp], rax	       117	nsconvert.c	FUNCTION_2	SWITCH_1	IF_1	CALL_1
0x400012b	            0x754d	                           jne 0x400017a	       118	nsconvert.c	FUNCTION_2	SWITCH_1	IF_1	IF_2
0x400012d	      0xb804000000	                              mov eax, 4	       119	nsconvert.c	FUNCTION_2	SWITCH_1	IF_1	IF_2
0x4000132	            0xeb57	                           jmp 0x400018b	       119	nsconvert.c	FUNCTION_2	SWITCH_1	IF_1	IF_2
0x4000134	      0xba02000000	                              mov edx, 2	       122	nsconvert.c	FUNCTION_2	SWITCH_1	ELSE_1	CALL_2
0x4000139	          0x4889e6	                            mov rsi, rsp	       122	nsconvert.c	FUNCTION_2	SWITCH_1	ELSE_1	CALL_2
0x400013c	      0xe800000000	                          call 0x4000141	       122	nsconvert.c	FUNCTION_2	SWITCH_1	ELSE_1	CALL_2
0x4000141	            0x85c0	                           test eax, eax	       125	nsconvert.c	FUNCTION_2	SWITCH_1	ELSE_1	IF_3	CALL_3
0x4000143	            0x7435	                            je 0x400017a	       125	nsconvert.c	FUNCTION_2	SWITCH_1	ELSE_1	IF_3	CALL_3
0x4000145	            0xeb44	                           jmp 0x400018b	       125	nsconvert.c	FUNCTION_2	SWITCH_1	ELSE_1	IF_3	CALL_3
0x4000147	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       140	nsconvert.c	FUNCTION_2	SWITCH_1	WHILE_1
0x400014b	        0x803c1800	                 cmp byte [rax + rbx], 0	       139	nsconvert.c	FUNCTION_2	SWITCH_1	WHILE_1
0x400014f	            0x7408	                            je 0x4000159	       139	nsconvert.c	FUNCTION_2	SWITCH_1	WHILE_1
0x4000151	          0x48ffc3	                                 inc rbx	       141	nsconvert.c	FUNCTION_2	SWITCH_1	WHILE_1
0x4000154	          0x4839d3	                            cmp rbx, rdx	       139	nsconvert.c	FUNCTION_2	SWITCH_1	WHILE_1
0x4000157	            0x72ee	                            jb 0x4000147	       139	nsconvert.c	FUNCTION_2	SWITCH_1	WHILE_1
0x4000159	          0x4889df	                            mov rdi, rbx	       146	nsconvert.c	FUNCTION_2	SWITCH_1	CALL_4
0x400015c	      0xe800000000	                          call 0x4000161	       146	nsconvert.c	FUNCTION_2	SWITCH_1	CALL_4
0x4000161	          0x4885c0	                           test rax, rax	       147	nsconvert.c	FUNCTION_2	SWITCH_1	IF_4
0x4000164	        0x48890424	                    mov qword [rsp], rax	       146	nsconvert.c	FUNCTION_2	SWITCH_1	CALL_4
0x4000168	            0x74c3	                            je 0x400012d	       147	nsconvert.c	FUNCTION_2	SWITCH_1	IF_4
0x400016a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       155	nsconvert.c	FUNCTION_2	SWITCH_1	CALL_5
0x400016e	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	       155	nsconvert.c	FUNCTION_2	SWITCH_1	CALL_5
0x4000172	          0x4889d9	                            mov rcx, rbx	       155	nsconvert.c	FUNCTION_2	SWITCH_1	CALL_5
0x4000175	          0x4889c7	                            mov rdi, rax	       155	nsconvert.c	FUNCTION_2	SWITCH_1	CALL_5
0x4000178	            0xf3a4	    rep movsb byte [rdi], byte ptr [rsi]	       155	nsconvert.c	FUNCTION_2	SWITCH_1	CALL_5
0x400017a	        0x488b0424	                    mov rax, qword [rsp]	       164	nsconvert.c	FUNCTION_2
0x400017e	        0x49890424	                    mov qword [r12], rax	       164	nsconvert.c	FUNCTION_2
0x4000182	            0x31c0	                            xor eax, eax	       165	nsconvert.c	FUNCTION_2
0x4000184	            0xeb05	                           jmp 0x400018b	       165	nsconvert.c	FUNCTION_2
0x4000186	      0xb803300000	                         mov eax, 0x3003	       161	nsconvert.c	FUNCTION_2	SWITCH_1
0x400018b	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       166	nsconvert.c	FUNCTION_2
0x4000190	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       166	nsconvert.c	FUNCTION_2
0x4000199	            0x7405	                            je 0x40001a0	       166	nsconvert.c	FUNCTION_2
0x400019b	      0xe800000000	                          call 0x40001a0	       166	nsconvert.c	FUNCTION_2
0x40001a0	        0x4883c410	                           add rsp, 0x10	       166	nsconvert.c	FUNCTION_2
0x40001a4	              0x5b	                                 pop rbx	       166	nsconvert.c	FUNCTION_2
0x40001a5	              0x5d	                                 pop rbp	       166	nsconvert.c	FUNCTION_2
0x40001a6	            0x415c	                                 pop r12	       166	nsconvert.c	FUNCTION_2
0x40001a8	              0xc3	                                     ret	       166	nsconvert.c	FUNCTION_2
