__input_mt_drop_unused	WHILE,0:FOR,1:IF,1:functions,0:DO,0:CALL,3:ELSE,0:SWITCH,0	31
0x40007b0	          0x8b4604	                mov eax, dword [rsi + 4]	       261	input-mt.c	FUNCTION_7	FOR_1
0x40007b3	            0x85c0	                           test eax, eax	       261	input-mt.c	FUNCTION_7	FOR_1
0x40007b5	            0x7e53	                           jle 0x400080a	       261	input-mt.c	FUNCTION_7	FOR_1
0x40007b7	            0x4154	                                push r12	       258	input-mt.c	FUNCTION_7
0x40007b9	          0x4989fc	                            mov r12, rdi	       258	input-mt.c	FUNCTION_7
0x40007bc	              0x55	                                push rbp	       258	input-mt.c	FUNCTION_7
0x40007bd	          0x4889f5	                            mov rbp, rsi	       258	input-mt.c	FUNCTION_7
0x40007c0	              0x53	                                push rbx	       258	input-mt.c	FUNCTION_7
0x40007c1	            0x31db	                            xor ebx, ebx	       258	input-mt.c	FUNCTION_7
0x40007c3	          0x4863c3	                         movsxd rax, ebx	       262	input-mt.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x40007c6	          0x8b5510	            mov edx, dword [rbp + 0x10] 	       262	input-mt.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x40007c9	        0x48c1e006	                              shl rax, 6	       262	input-mt.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x40007cd	        0x39540558	      cmp dword [rbp + rax + 0x58], edx 	       262	input-mt.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x40007d1	            0x742b	                            je 0x40007fe	       262	input-mt.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x40007d3	            0x89d9	                            mov ecx, ebx	        90	mt.h	FUNCTION_21	CALL_1
0x40007d5	      0xba2f000000	                           mov edx, 0x2f	        90	mt.h	FUNCTION_21	CALL_1
0x40007da	      0xbe03000000	                              mov esi, 3	        90	mt.h	FUNCTION_21	CALL_1
0x40007df	          0x4c89e7	                            mov rdi, r12	        90	mt.h	FUNCTION_21	CALL_1
0x40007e2	      0xe800000000	                          call 0x40007e7	        90	mt.h	FUNCTION_21	CALL_1
0x40007e7	      0xb9ffffffff	                     mov ecx, 0xffffffff	       264	input-mt.c	FUNCTION_7	FOR_1	IF_1	CALL_3
0x40007ec	      0xba39000000	                           mov edx, 0x39	       264	input-mt.c	FUNCTION_7	FOR_1	IF_1	CALL_3
0x40007f1	      0xbe03000000	                              mov esi, 3	       264	input-mt.c	FUNCTION_7	FOR_1	IF_1	CALL_3
0x40007f6	          0x4c89e7	                            mov rdi, r12	       264	input-mt.c	FUNCTION_7	FOR_1	IF_1	CALL_3
0x40007f9	      0xe800000000	                          call 0x40007fe	       264	input-mt.c	FUNCTION_7	FOR_1	IF_1	CALL_3
0x40007fe	          0x83c301	                              add ebx, 1	       261	input-mt.c	FUNCTION_7	FOR_1
0x4000801	          0x395d04	                cmp dword [rbp + 4], ebx	       261	input-mt.c	FUNCTION_7	FOR_1
0x4000804	            0x7fbd	                            jg 0x40007c3	       261	input-mt.c	FUNCTION_7	FOR_1
0x4000806	              0x5b	                                 pop rbx	       267	input-mt.c	FUNCTION_7
0x4000807	              0x5d	                                 pop rbp	       267	input-mt.c	FUNCTION_7
0x4000808	            0x415c	                                 pop r12	       267	input-mt.c	FUNCTION_7
0x400080a	            0xf3c3	                                     ret	       267	input-mt.c	FUNCTION_7
input_mt_assign_slots	WHILE,0:FOR,0:IF,3:functions,0:DO,0:CALL,3:ELSE,0:SWITCH,0	231
0x4000130	            0x4157	                                push r15	       439	input-mt.c	FUNCTION_14
0x4000132	            0x4156	                                push r14	       439	input-mt.c	FUNCTION_14
0x4000134	            0x4155	                                push r13	       439	input-mt.c	FUNCTION_14
0x4000136	            0x4154	                                push r12	       439	input-mt.c	FUNCTION_14
0x4000138	              0x55	                                push rbp	       439	input-mt.c	FUNCTION_14
0x4000139	              0x53	                                push rbx	       439	input-mt.c	FUNCTION_14
0x400013a	        0x4883ec50	                           sub rsp, 0x50	       439	input-mt.c	FUNCTION_14
0x400013e	    0x488b87380100	           mov rax, qword [rdi + 0x138] 	       440	input-mt.c	FUNCTION_14
0x4000145	          0x4885c0	                           test rax, rax	       444	input-mt.c	FUNCTION_14	IF_1
0x4000148	      0x4889442430	             mov qword [rsp + 0x30], rax	       440	input-mt.c	FUNCTION_14
0x400014d	     0xf8403030000	                            je 0x4000456	       444	input-mt.c	FUNCTION_14	IF_1
0x4000153	        0x4c8b4818	              mov r9, qword [rax + 0x18]	       444	input-mt.c	FUNCTION_14	IF_1
0x4000157	          0x4d85c9	                             test r9, r9	       444	input-mt.c	FUNCTION_14	IF_1
0x400015a	     0xf84f6020000	                            je 0x4000456	       444	input-mt.c	FUNCTION_14	IF_1
0x4000160	          0x8b7804	                mov edi, dword [rax + 4]	       446	input-mt.c	FUNCTION_14	IF_2
0x4000163	            0x39cf	                            cmp edi, ecx	       446	input-mt.c	FUNCTION_14	IF_2
0x4000165	     0xf8ce4020000	                            jl 0x400044f	       446	input-mt.c	FUNCTION_14	IF_2
0x400016b	            0x85c9	                           test ecx, ecx	       448	input-mt.c	FUNCTION_14	IF_3
0x400016d	     0xf8ea6020000	                           jle 0x4000419	       448	input-mt.c	FUNCTION_14	IF_3
0x4000173	      0x4889742438	             mov qword [rsp + 0x38], rsi	       448	input-mt.c	FUNCTION_14	IF_3
0x4000178	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       368	input-mt.c	FUNCTION_12	FOR_1
0x400017d	        0x438d1c00	                      lea ebx, [r8 + r8]	       441	input-mt.c	FUNCTION_14
0x4000181	            0x89cd	                            mov ebp, ecx	       441	input-mt.c	FUNCTION_14
0x4000183	        0x410fafd8	                           imul ebx, r8d	       441	input-mt.c	FUNCTION_14
0x4000187	          0x4889f0	                            mov rax, rsi	       368	input-mt.c	FUNCTION_12	FOR_1
0x400018a	        0x4883c020	                           add rax, 0x20	       368	input-mt.c	FUNCTION_12	FOR_1
0x400018e	          0x4989c6	                            mov r14, rax	       368	input-mt.c	FUNCTION_12	FOR_1
0x4000191	      0x4889442440	             mov qword [rsp + 0x40], rax	       368	input-mt.c	FUNCTION_12	FOR_1
0x4000196	          0x4863c7	                         movsxd rax, edi	       368	input-mt.c	FUNCTION_12	FOR_1
0x4000199	        0x48c1e006	                              shl rax, 6	       368	input-mt.c	FUNCTION_12	FOR_1
0x400019d	          0x4885c0	                           test rax, rax	       368	input-mt.c	FUNCTION_12	FOR_1
0x40001a0	     0xf849d020000	                            je 0x4000443	       368	input-mt.c	FUNCTION_12	FOR_1
0x40001a6	          0x4c63f9	                         movsxd r15, ecx	       373	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x40001a9	          0x4d89f4	                            mov r12, r14	       373	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x40001ac	        0x894c2408	                mov dword [rsp + 8], ecx	       373	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x40001b0	        0x4e8d04ba	                   lea r8, [rdx + r15*4]	       373	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x40001b4	    0x4e8d2cbd0000	                        lea r13, [r15*4]	       373	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x40001bc	          0x4889f5	                            mov rbp, rsi	       373	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x40001bf	      0x418b442424	            mov eax, dword [r12 + 0x24] 	       369	input-mt.c	FUNCTION_12	FOR_1	IF_1	CALL_1
0x40001c4	            0x85c0	                           test eax, eax	       369	input-mt.c	FUNCTION_12	FOR_1	IF_1	CALL_1
0x40001c6	            0x7850	                            js 0x4000218	       369	input-mt.c	FUNCTION_12	FOR_1	IF_1	CALL_1
0x40001c8	          0x4c39c2	                             cmp rdx, r8	       373	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x40001cb	      0x458b542414	           mov r10d, dword [r12 + 0x14] 	        65	mt.h	FUNCTION_17
0x40001d0	      0x458b5c2418	           mov r11d, dword [r12 + 0x18] 	        65	mt.h	FUNCTION_17
0x40001d5	            0x7441	                            je 0x4000218	       373	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x40001d7	          0x4c89cf	                             mov rdi, r9	       373	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x40001da	          0x4889d6	                            mov rsi, rdx	       373	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x40001dd	        0x48891424	                    mov qword [rsp], rdx	       373	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x40001e1	           0xfbf06	                   movsx eax, word [rsi]	       374	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x40001e4	          0x4489d1	                           mov ecx, r10d	       374	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x40001e7	          0x4489da	                           mov edx, r11d	       374	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x40001ea	        0x4883c604	                              add rsi, 4	       373	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x40001ee	        0x4883c704	                              add rdi, 4	       375	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x40001f2	            0x29c1	                            sub ecx, eax	       374	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x40001f4	         0xfbf46fe	               movsx eax, word [rsi - 2]	       374	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x40001f8	           0xfafc9	                           imul ecx, ecx	       375	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x40001fb	            0x29c2	                            sub edx, eax	       374	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x40001fd	            0x89d0	                            mov eax, edx	       374	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x40001ff	           0xfafc2	                           imul eax, edx	       375	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x4000202	             0x1c8	                            add eax, ecx	       375	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x4000204	            0x29d8	                            sub eax, ebx	       375	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x4000206	          0x4c39c6	                             cmp rsi, r8	       373	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x4000209	          0x8947fc	                mov dword [rdi - 4], eax	       375	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x400020c	            0x75d3	                           jne 0x40001e1	       373	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x400020e	        0x488b1424	                    mov rdx, qword [rsp]	       373	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x4000212	          0x8b7d04	                mov edi, dword [rbp + 4]	       373	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x4000215	          0x4d01e9	                             add r9, r13	       373	input-mt.c	FUNCTION_12	FOR_1	FOR_2
0x4000218	          0x4863c7	                         movsxd rax, edi	       368	input-mt.c	FUNCTION_12	FOR_1
0x400021b	        0x4983c440	                           add r12, 0x40	       368	input-mt.c	FUNCTION_12	FOR_1
0x400021f	        0x48c1e006	                              shl rax, 6	       368	input-mt.c	FUNCTION_12	FOR_1
0x4000223	          0x4c01f0	                            add rax, r14	       368	input-mt.c	FUNCTION_12	FOR_1
0x4000226	          0x4939c4	                            cmp r12, rax	       368	input-mt.c	FUNCTION_12	FOR_1
0x4000229	            0x7594	                           jne 0x40001bf	       368	input-mt.c	FUNCTION_12	FOR_1
0x400022b	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       368	input-mt.c	FUNCTION_12	FOR_1
0x4000230	        0x8b6c2408	                mov ebp, dword [rsp + 8]	       368	input-mt.c	FUNCTION_12	FOR_1
0x4000234	        0x4c8b6818	            mov r13, qword [rax + 0x18] 	       368	input-mt.c	FUNCTION_12	FOR_1
0x4000238	          0x4d29e9	                             sub r9, r13	       368	input-mt.c	FUNCTION_12	FOR_1
0x400023b	        0x49c1f902	                               sar r9, 2	       368	input-mt.c	FUNCTION_12	FOR_1
0x400023f	          0x4489c8	                            mov eax, r9d	       368	input-mt.c	FUNCTION_12	FOR_1
0x4000242	        0x44890c24	                    mov dword [rsp], r9d	       368	input-mt.c	FUNCTION_12	FOR_1
0x4000246	              0x99	                                     cdq	       452	input-mt.c	FUNCTION_14	CALL_2
0x4000247	            0xf7fd	                                idiv ebp	       452	input-mt.c	FUNCTION_14	CALL_2
0x4000249	          0x4585c9	                           test r9d, r9d	       348	input-mt.c	FUNCTION_11	FOR_1
0x400024c	     0xf8eee010000	                           jle 0x4000440	       348	input-mt.c	FUNCTION_11	FOR_1
0x4000252	            0x31f6	                            xor esi, esi	       348	input-mt.c	FUNCTION_11	FOR_1
0x4000254	            0x39c5	                            cmp ebp, eax	       348	input-mt.c	FUNCTION_11	FOR_1
0x4000256	          0x4d63c9	                          movsxd r9, r9d	       348	input-mt.c	FUNCTION_11	FOR_1
0x4000259	           0xf9dc0	                                setge al	       348	input-mt.c	FUNCTION_11	FOR_1
0x400025c	        0x400f9ec6	                               setle sil	       348	input-mt.c	FUNCTION_11	FOR_1
0x4000260	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       348	input-mt.c	FUNCTION_11	FOR_1
0x4000268	           0xfb6c0	                           movzx eax, al	       348	input-mt.c	FUNCTION_11	FOR_1
0x400026b	        0x89742448	             mov dword [rsp + 0x48], esi	       348	input-mt.c	FUNCTION_11	FOR_1
0x400026f	      0x4c896c2410	             mov qword [rsp + 0x10], r13	       348	input-mt.c	FUNCTION_11	FOR_1
0x4000274	        0x89442408	                mov dword [rsp + 8], eax	       348	input-mt.c	FUNCTION_11	FOR_1
0x4000278	          0x8d45ff	                      lea eax, [rbp - 1]	       348	input-mt.c	FUNCTION_11	FOR_1
0x400027b	      0x4c897c2428	             mov qword [rsp + 0x28], r15	       348	input-mt.c	FUNCTION_11	FOR_1
0x4000280	        0x8944244c	             mov dword [rsp + 0x4c], eax	       348	input-mt.c	FUNCTION_11	FOR_1
0x4000284	      0x498d448504	              lea rax, [r13 + rax*4 + 4]	       348	input-mt.c	FUNCTION_11	FOR_1
0x4000289	      0x4889442420	             mov qword [rsp + 0x20], rax	       348	input-mt.c	FUNCTION_11	FOR_1
0x400028e	    0x4a8d048d0000	                         lea rax, [r9*4]	       348	input-mt.c	FUNCTION_11	FOR_1
0x4000296	      0x4889442418	             mov qword [rsp + 0x18], rax	       348	input-mt.c	FUNCTION_11	FOR_1
0x400029b	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	       348	input-mt.c	FUNCTION_11	FOR_1
0x40002a0	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	       348	input-mt.c	FUNCTION_11	FOR_1
0x40002a5	      0x4c8b7c2420	            mov r15, qword [rsp + 0x20] 	       348	input-mt.c	FUNCTION_11	FOR_1
0x40002aa	          0x4d89e5	                            mov r13, r12	       348	input-mt.c	FUNCTION_11	FOR_1
0x40002ad	      0x448b642448	           mov r12d, dword [rsp + 0x48] 	       348	input-mt.c	FUNCTION_11	FOR_1
0x40002b2	        0x4b8d142e	                    lea rdx, [r14 + r13]	       350	input-mt.c	FUNCTION_11	FOR_1	CALL_1
0x40002b6	          0x4c89ef	                            mov rdi, r13	       350	input-mt.c	FUNCTION_11	FOR_1	CALL_1
0x40002b9	          0x4189d8	                            mov r8d, ebx	       350	input-mt.c	FUNCTION_11	FOR_1	CALL_1
0x40002bc	          0x4489e1	                           mov ecx, r12d	       350	input-mt.c	FUNCTION_11	FOR_1	CALL_1
0x40002bf	            0x89ee	                            mov esi, ebp	       350	input-mt.c	FUNCTION_11	FOR_1	CALL_1
0x40002c1	        0x4983c504	                              add r13, 4	       350	input-mt.c	FUNCTION_11	FOR_1	CALL_1
0x40002c5	      0xe876fdffff	                    call sym.adjust_dual	       350	input-mt.c	FUNCTION_11	FOR_1	CALL_1
0x40002ca	          0x4d39fd	                            cmp r13, r15	       349	input-mt.c	FUNCTION_11	FOR_1	FOR_2
0x40002cd	            0x75e3	                           jne 0x40002b2	       349	input-mt.c	FUNCTION_11	FOR_1	FOR_2
0x40002cf	          0x4531f6	                          xor r14d, r14d	       349	input-mt.c	FUNCTION_11	FOR_1	FOR_2
0x40002d2	          0x4189ed	                           mov r13d, ebp	       349	input-mt.c	FUNCTION_11	FOR_1	FOR_2
0x40002d5	      0x4c8b7c2428	            mov r15, qword [rsp + 0x28] 	       349	input-mt.c	FUNCTION_11	FOR_1	FOR_2
0x40002da	          0x4489f5	                           mov ebp, r14d	       349	input-mt.c	FUNCTION_11	FOR_1	FOR_2
0x40002dd	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	       349	input-mt.c	FUNCTION_11	FOR_1	FOR_2
0x40002e2	          0x4531e4	                          xor r12d, r12d	       349	input-mt.c	FUNCTION_11	FOR_1	FOR_2
0x40002e5	          0x4863c5	                         movsxd rax, ebp	       353	input-mt.c	FUNCTION_11	FOR_1	CALL_2
0x40002e8	        0x8b4c2408	                mov ecx, dword [rsp + 8]	       353	input-mt.c	FUNCTION_11	FOR_1	CALL_2
0x40002ec	          0x4189d8	                            mov r8d, ebx	       353	input-mt.c	FUNCTION_11	FOR_1	CALL_2
0x40002ef	        0x4a8d1438	                    lea rdx, [rax + r15]	       353	input-mt.c	FUNCTION_11	FOR_1	CALL_2
0x40002f3	        0x498d3c86	                  lea rdi, [r14 + rax*4]	       353	input-mt.c	FUNCTION_11	FOR_1	CALL_2
0x40002f7	      0xbe01000000	                              mov esi, 1	       353	input-mt.c	FUNCTION_11	FOR_1	CALL_2
0x40002fc	          0x4401ed	                           add ebp, r13d	       352	input-mt.c	FUNCTION_11	FOR_1	FOR_3
0x40002ff	        0x498d1496	                  lea rdx, [r14 + rdx*4]	       353	input-mt.c	FUNCTION_11	FOR_1	CALL_2
0x4000303	      0xe838fdffff	                    call sym.adjust_dual	       353	input-mt.c	FUNCTION_11	FOR_1	CALL_2
0x4000308	          0x4101c4	                           add r12d, eax	       353	input-mt.c	FUNCTION_11	FOR_1	CALL_2
0x400030b	          0x3b2c24	                    cmp ebp, dword [rsp]	       352	input-mt.c	FUNCTION_11	FOR_1	FOR_3
0x400030e	            0x7cd5	                            jl 0x40002e5	       352	input-mt.c	FUNCTION_11	FOR_1	FOR_3
0x4000310	          0x4585e4	                         test r12d, r12d	       354	input-mt.c	FUNCTION_11	FOR_1	IF_1
0x4000313	          0x4489ed	                           mov ebp, r13d	       354	input-mt.c	FUNCTION_11	FOR_1	IF_1
0x4000316	            0x7412	                            je 0x400032a	       354	input-mt.c	FUNCTION_11	FOR_1	IF_1
0x4000318	      0x8344240c01	                add dword [rsp + 0xc], 1	       348	input-mt.c	FUNCTION_11	FOR_1
0x400031d	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       348	input-mt.c	FUNCTION_11	FOR_1
0x4000321	          0x3b0424	                    cmp eax, dword [rsp]	       348	input-mt.c	FUNCTION_11	FOR_1
0x4000324	     0xf8571ffffff	                           jne 0x400029b	       348	input-mt.c	FUNCTION_11	FOR_1
0x400032a	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       348	input-mt.c	FUNCTION_11	FOR_1
0x400032f	        0x4c8b4818	              mov r9, qword [rax + 0x18]	       348	input-mt.c	FUNCTION_11	FOR_1
0x4000333	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	       348	input-mt.c	FUNCTION_11	FOR_1
0x4000337	    0x488d0c850400	                    lea rcx, [rax*4 + 4]	       348	input-mt.c	FUNCTION_11	FOR_1
0x400033f	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       348	input-mt.c	FUNCTION_11	FOR_1
0x4000344	        0x488d3408	                    lea rsi, [rax + rcx]	       348	input-mt.c	FUNCTION_11	FOR_1
0x4000348	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	       389	input-mt.c	FUNCTION_13	FOR_1
0x400034e	        0x4883c004	                              add rax, 4	       389	input-mt.c	FUNCTION_13	FOR_1
0x4000352	          0x4839c6	                            cmp rsi, rax	       388	input-mt.c	FUNCTION_13	FOR_1
0x4000355	            0x75f1	                           jne 0x4000348	       388	input-mt.c	FUNCTION_13	FOR_1
0x4000357	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	       391	input-mt.c	FUNCTION_13	FOR_2
0x400035c	        0x48634304	            movsxd rax, dword [rbx + 4] 	       391	input-mt.c	FUNCTION_13	FOR_2
0x4000360	          0x4889c7	                            mov rdi, rax	       391	input-mt.c	FUNCTION_13	FOR_2
0x4000363	        0x48c1e006	                              shl rax, 6	       391	input-mt.c	FUNCTION_13	FOR_2
0x4000367	          0x4885c0	                           test rax, rax	       391	input-mt.c	FUNCTION_13	FOR_2
0x400036a	     0xf84a9000000	                            je 0x4000419	       391	input-mt.c	FUNCTION_13	FOR_2
0x4000370	      0x4c8b5c2440	            mov r11, qword [rsp + 0x40] 	       402	input-mt.c	FUNCTION_13	FOR_2
0x4000375	          0x4863d5	                         movsxd rdx, ebp	       402	input-mt.c	FUNCTION_13	FOR_2
0x4000378	      0x488b6c2438	            mov rbp, qword [rsp + 0x38] 	       402	input-mt.c	FUNCTION_13	FOR_2
0x400037d	        0x48c1e202	                              shl rdx, 2	       402	input-mt.c	FUNCTION_13	FOR_2
0x4000381	          0x4d89d8	                             mov r8, r11	       402	input-mt.c	FUNCTION_13	FOR_2
0x4000384	        0x458b6824	            mov r13d, dword [r8 + 0x24] 	       392	input-mt.c	FUNCTION_13	FOR_2	IF_1	CALL_1
0x4000388	          0x4585ed	                         test r13d, r13d	       392	input-mt.c	FUNCTION_13	FOR_2	IF_1	CALL_1
0x400038b	            0x781b	                            js 0x40003a8	       392	input-mt.c	FUNCTION_13	FOR_2	IF_1	CALL_1
0x400038d	            0x31c0	                            xor eax, eax	       392	input-mt.c	FUNCTION_13	FOR_2	IF_1	CALL_1
0x400038f	        0x458b2401	              mov r12d, dword [r9 + rax]	       396	input-mt.c	FUNCTION_13	FOR_2	FOR_3	IF_2
0x4000393	          0x4585e4	                         test r12d, r12d	       396	input-mt.c	FUNCTION_13	FOR_2	FOR_3	IF_2
0x4000396	     0xf888e000000	                            js 0x400042a	       396	input-mt.c	FUNCTION_13	FOR_2	FOR_3	IF_2
0x400039c	        0x4883c004	                              add rax, 4	       396	input-mt.c	FUNCTION_13	FOR_2	FOR_3	IF_2
0x40003a0	          0x4839c1	                            cmp rcx, rax	       395	input-mt.c	FUNCTION_13	FOR_2	FOR_3
0x40003a3	            0x75ea	                           jne 0x400038f	       395	input-mt.c	FUNCTION_13	FOR_2	FOR_3
0x40003a5	          0x4901d1	                             add r9, rdx	       402	input-mt.c	FUNCTION_13	FOR_2
0x40003a8	          0x4863c7	                         movsxd rax, edi	       391	input-mt.c	FUNCTION_13	FOR_2
0x40003ab	        0x4983c040	                            add r8, 0x40	       391	input-mt.c	FUNCTION_13	FOR_2
0x40003af	        0x48c1e006	                              shl rax, 6	       391	input-mt.c	FUNCTION_13	FOR_2
0x40003b3	        0x4d8d1403	                    lea r10, [r11 + rax]	       391	input-mt.c	FUNCTION_13	FOR_2
0x40003b7	          0x4d39d0	                             cmp r8, r10	       391	input-mt.c	FUNCTION_13	FOR_2
0x40003ba	            0x75c8	                           jne 0x4000384	       391	input-mt.c	FUNCTION_13	FOR_2
0x40003bc	          0x4885c0	                           test rax, rax	       405	input-mt.c	FUNCTION_13	FOR_4
0x40003bf	            0x7458	                            je 0x4000419	       405	input-mt.c	FUNCTION_13	FOR_4
0x40003c1	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	       405	input-mt.c	FUNCTION_13	FOR_4
0x40003c6	      0x4c8b4c2430	              mov r9, qword [rsp + 0x30]	       405	input-mt.c	FUNCTION_13	FOR_4
0x40003cb	      0x4c8b442438	              mov r8, qword [rsp + 0x38]	       405	input-mt.c	FUNCTION_13	FOR_4
0x40003d0	          0x4889ca	                            mov rdx, rcx	       405	input-mt.c	FUNCTION_13	FOR_4
0x40003d3	            0xeb13	                           jmp 0x40003e8	       405	input-mt.c	FUNCTION_13	FOR_4
0x40003d5	          0x4863c7	                         movsxd rax, edi	       405	input-mt.c	FUNCTION_13	FOR_4
0x40003d8	        0x4883c240	                           add rdx, 0x40	       405	input-mt.c	FUNCTION_13	FOR_4
0x40003dc	        0x48c1e006	                              shl rax, 6	       405	input-mt.c	FUNCTION_13	FOR_4
0x40003e0	          0x4801c8	                            add rax, rcx	       405	input-mt.c	FUNCTION_13	FOR_4
0x40003e3	          0x4839c2	                            cmp rdx, rax	       405	input-mt.c	FUNCTION_13	FOR_4
0x40003e6	            0x7431	                            je 0x4000419	       405	input-mt.c	FUNCTION_13	FOR_4
0x40003e8	        0x448b5a24	           mov r11d, dword [rdx + 0x24] 	       406	input-mt.c	FUNCTION_13	FOR_4	IF_3	CALL_2
0x40003ec	          0x4585db	                         test r11d, r11d	       406	input-mt.c	FUNCTION_13	FOR_4	IF_3	CALL_2
0x40003ef	            0x79e4	                           jns 0x40003d5	       406	input-mt.c	FUNCTION_13	FOR_4	IF_3	CALL_2
0x40003f1	          0x4c89c0	                             mov rax, r8	       406	input-mt.c	FUNCTION_13	FOR_4	IF_3	CALL_2
0x40003f4	            0xeb09	                           jmp 0x40003ff	       406	input-mt.c	FUNCTION_13	FOR_4	IF_3	CALL_2
0x40003f6	        0x4883c004	                              add rax, 4	       406	input-mt.c	FUNCTION_13	FOR_4	IF_3	CALL_2
0x40003fa	          0x4839c6	                            cmp rsi, rax	       409	input-mt.c	FUNCTION_13	FOR_4	FOR_5
0x40003fd	            0x74d6	                            je 0x40003d5	       409	input-mt.c	FUNCTION_13	FOR_4	FOR_5
0x40003ff	          0x448b10	                   mov r10d, dword [rax]	       410	input-mt.c	FUNCTION_13	FOR_4	FOR_5	IF_4
0x4000402	          0x4585d2	                         test r10d, r10d	       410	input-mt.c	FUNCTION_13	FOR_4	FOR_5	IF_4
0x4000405	            0x79ef	                           jns 0x40003f6	       410	input-mt.c	FUNCTION_13	FOR_4	FOR_5	IF_4
0x4000407	          0x4889d7	                            mov rdi, rdx	       411	input-mt.c	FUNCTION_13	FOR_4	FOR_5	IF_4
0x400040a	          0x4829cf	                            sub rdi, rcx	       411	input-mt.c	FUNCTION_13	FOR_4	FOR_5	IF_4
0x400040d	        0x48c1ff06	                              sar rdi, 6	       411	input-mt.c	FUNCTION_13	FOR_4	FOR_5	IF_4
0x4000411	            0x8938	                    mov dword [rax], edi	       411	input-mt.c	FUNCTION_13	FOR_4	FOR_5	IF_4
0x4000413	        0x418b7904	                 mov edi, dword [r9 + 4]	       411	input-mt.c	FUNCTION_13	FOR_4	FOR_5	IF_4
0x4000417	            0xebbc	                           jmp 0x40003d5	       411	input-mt.c	FUNCTION_13	FOR_4	FOR_5	IF_4
0x4000419	            0x31c0	                            xor eax, eax	       449	input-mt.c	FUNCTION_14	IF_3
0x400041b	        0x4883c450	                           add rsp, 0x50	       456	input-mt.c	FUNCTION_14
0x400041f	              0x5b	                                 pop rbx	       456	input-mt.c	FUNCTION_14
0x4000420	              0x5d	                                 pop rbp	       456	input-mt.c	FUNCTION_14
0x4000421	            0x415c	                                 pop r12	       456	input-mt.c	FUNCTION_14
0x4000423	            0x415d	                                 pop r13	       456	input-mt.c	FUNCTION_14
0x4000425	            0x415e	                                 pop r14	       456	input-mt.c	FUNCTION_14
0x4000427	            0x415f	                                 pop r15	       456	input-mt.c	FUNCTION_14
0x4000429	              0xc3	                                     ret	       456	input-mt.c	FUNCTION_14
0x400042a	          0x4c89c7	                             mov rdi, r8	       397	input-mt.c	FUNCTION_13	FOR_2	FOR_3	IF_2
0x400042d	          0x4c29df	                            sub rdi, r11	       397	input-mt.c	FUNCTION_13	FOR_2	FOR_3	IF_2
0x4000430	        0x48c1ff06	                              sar rdi, 6	       397	input-mt.c	FUNCTION_13	FOR_2	FOR_3	IF_2
0x4000434	        0x897c0500	              mov dword [rbp + rax], edi	       397	input-mt.c	FUNCTION_13	FOR_2	FOR_3	IF_2
0x4000438	          0x8b7b04	                mov edi, dword [rbx + 4]	       397	input-mt.c	FUNCTION_13	FOR_2	FOR_3	IF_2
0x400043b	      0xe965ffffff	                           jmp 0x40003a5	       397	input-mt.c	FUNCTION_13	FOR_2	FOR_3	IF_2
0x4000440	          0x4d89e9	                             mov r9, r13	       348	input-mt.c	FUNCTION_11	FOR_1
0x4000443	          0x8d45ff	                      lea eax, [rbp - 1]	       348	input-mt.c	FUNCTION_11	FOR_1
0x4000446	        0x8944244c	             mov dword [rsp + 0x4c], eax	       348	input-mt.c	FUNCTION_11	FOR_1
0x400044a	      0xe9e4feffff	                           jmp 0x4000333	       348	input-mt.c	FUNCTION_11	FOR_1
0x400044f	      0xb8eaffffff	                     mov eax, 0xffffffea	       447	input-mt.c	FUNCTION_14	IF_2
0x4000454	            0xebc5	                           jmp 0x400041b	       447	input-mt.c	FUNCTION_14	IF_2
0x4000456	      0xb8faffffff	                     mov eax, 0xfffffffa	       445	input-mt.c	FUNCTION_14	IF_1
0x400045b	            0xebbe	                           jmp 0x400041b	       445	input-mt.c	FUNCTION_14	IF_1
adjust_dual	WHILE,0:FOR,2:IF,5:functions,0:DO,0:CALL,0:ELSE,1:SWITCH,0	90
0x4000040	          0x4839d7	                            cmp rdi, rdx	       318	input-mt.c	FUNCTION_10	IF_1
0x4000043	     0xf84dc000000	                            je 0x4000125	       318	input-mt.c	FUNCTION_10	IF_1
0x4000049	          0x4863f6	                         movsxd rsi, esi	       322	input-mt.c	FUNCTION_10
0x400004c	            0x4154	                                push r12	       315	input-mt.c	FUNCTION_10
0x400004e	              0x55	                                push rbp	       315	input-mt.c	FUNCTION_10
0x400004f	    0x488d2cb50000	                        lea rbp, [rsi*4]	       322	input-mt.c	FUNCTION_10
0x4000057	              0x53	                                push rbx	       315	input-mt.c	FUNCTION_10
0x4000058	            0x8b1f	                    mov ebx, dword [rdi]	       321	input-mt.c	FUNCTION_10
0x400005a	        0x4c8d142f	                    lea r10, [rdi + rbp]	       322	input-mt.c	FUNCTION_10
0x400005e	        0x448d5b01	                     lea r11d, [rbx + 1]	       323	input-mt.c	FUNCTION_10
0x4000062	            0x89de	                            mov esi, ebx	       323	input-mt.c	FUNCTION_10
0x4000064	          0x4c39d2	                            cmp rdx, r10	       323	input-mt.c	FUNCTION_10
0x4000067	          0x4c89d0	                            mov rax, r10	       322	input-mt.c	FUNCTION_10
0x400006a	            0x742f	                            je 0x400009b	       323	input-mt.c	FUNCTION_10
0x400006c	          0x458b0a	                    mov r9d, dword [r10]	       323	input-mt.c	FUNCTION_10
0x400006f	            0x89de	                            mov esi, ebx	       323	input-mt.c	FUNCTION_10
0x4000071	          0x4589cb	                           mov r11d, r9d	       323	input-mt.c	FUNCTION_10
0x4000074	            0xeb12	                           jmp 0x4000088	       323	input-mt.c	FUNCTION_10
0x4000076	          0x4539cb	                           cmp r11d, r9d	       323	input-mt.c	FUNCTION_10
0x4000079	        0x450f4fd9	                         cmovg r11d, r9d	       323	input-mt.c	FUNCTION_10
0x400007d	          0x4801e8	                            add rax, rbp	       325	input-mt.c	FUNCTION_10	FOR_1
0x4000080	          0x4839c2	                            cmp rdx, rax	       325	input-mt.c	FUNCTION_10	FOR_1
0x4000083	            0x7416	                            je 0x400009b	       325	input-mt.c	FUNCTION_10	FOR_1
0x4000085	          0x448b08	                    mov r9d, dword [rax]	       325	input-mt.c	FUNCTION_10	FOR_1
0x4000088	          0x4439ce	                            cmp esi, r9d	       326	input-mt.c	FUNCTION_10	FOR_1	IF_2
0x400008b	            0x7ee9	                           jle 0x4000076	       326	input-mt.c	FUNCTION_10	FOR_1	IF_2
0x400008d	          0x4801e8	                            add rax, rbp	       325	input-mt.c	FUNCTION_10	FOR_1
0x4000090	          0x4189f3	                           mov r11d, esi	       325	input-mt.c	FUNCTION_10	FOR_1
0x4000093	          0x4489ce	                            mov esi, r9d	       325	input-mt.c	FUNCTION_10	FOR_1
0x4000096	          0x4839c2	                            cmp rdx, rax	       325	input-mt.c	FUNCTION_10	FOR_1
0x4000099	            0x75ea	                           jne 0x4000085	       325	input-mt.c	FUNCTION_10	FOR_1
0x400009b	      0x428d441e01	                lea eax, [rsi + r11 + 1]	       331	input-mt.c	FUNCTION_10
0x40000a0	          0x4189c1	                            mov r9d, eax	       331	input-mt.c	FUNCTION_10
0x40000a3	        0x41c1e91f	                           shr r9d, 0x1f	       331	input-mt.c	FUNCTION_10
0x40000a7	          0x4101c1	                            add r9d, eax	       331	input-mt.c	FUNCTION_10
0x40000aa	            0x31c0	                            xor eax, eax	       319	input-mt.c	FUNCTION_10	IF_1
0x40000ac	          0x41d1f9	                              sar r9d, 1	       331	input-mt.c	FUNCTION_10
0x40000af	          0x4585c9	                           test r9d, r9d	       332	input-mt.c	FUNCTION_10	IF_4
0x40000b2	          0x4589cc	                           mov r12d, r9d	       331	input-mt.c	FUNCTION_10
0x40000b5	            0x744e	                            je 0x4000105	       332	input-mt.c	FUNCTION_10	IF_4
0x40000b7	          0x4539c1	                            cmp r9d, r8d	       332	input-mt.c	FUNCTION_10	IF_4
0x40000ba	            0x7e09	                           jle 0x40000c5	       332	input-mt.c	FUNCTION_10	IF_4
0x40000bc	            0x85c9	                           test ecx, ecx	       332	input-mt.c	FUNCTION_10	IF_4
0x40000be	            0x745e	                            je 0x400011e	       332	input-mt.c	FUNCTION_10	IF_4
0x40000c0	          0x4585c0	                           test r8d, r8d	       332	input-mt.c	FUNCTION_10	IF_4
0x40000c3	            0x7f59	                            jg 0x400011e	       332	input-mt.c	FUNCTION_10	IF_4
0x40000c5	          0x4489d8	                           mov eax, r11d	       335	input-mt.c	FUNCTION_10	IF_5
0x40000c8	          0xc1e81f	                           shr eax, 0x1f	       335	input-mt.c	FUNCTION_10	IF_5
0x40000cb	            0x84c0	                             test al, al	       335	input-mt.c	FUNCTION_10	IF_5
0x40000cd	            0x7410	                            je 0x40000df	       335	input-mt.c	FUNCTION_10	IF_5
0x40000cf	          0x4585c0	                           test r8d, r8d	       335	input-mt.c	FUNCTION_10	IF_5
0x40000d2	        0x478d2409	                     lea r12d, [r9 + r9]	       336	input-mt.c	FUNCTION_10	IF_5
0x40000d6	           0xf9ec0	                                setle al	       335	input-mt.c	FUNCTION_10	IF_5
0x40000d9	            0x84c0	                             test al, al	       336	input-mt.c	FUNCTION_10	IF_5
0x40000db	        0x450f44e1	                         cmove r12d, r9d	       336	input-mt.c	FUNCTION_10	IF_5
0x40000df	            0x89d8	                            mov eax, ebx	       323	input-mt.c	FUNCTION_10
0x40000e1	            0xeb06	                           jmp 0x40000e9	       323	input-mt.c	FUNCTION_10
0x40000e3	          0x418b02	                    mov eax, dword [r10]	       323	input-mt.c	FUNCTION_10
0x40000e6	          0x4901ea	                            add r10, rbp	       323	input-mt.c	FUNCTION_10
0x40000e9	          0x4429e0	                           sub eax, r12d	       339	input-mt.c	FUNCTION_10	FOR_2
0x40000ec	          0x4c39d2	                            cmp rdx, r10	       338	input-mt.c	FUNCTION_10	FOR_2
0x40000ef	            0x8907	                    mov dword [rdi], eax	       339	input-mt.c	FUNCTION_10	FOR_2
0x40000f1	          0x4c89d7	                            mov rdi, r10	       338	input-mt.c	FUNCTION_10	FOR_2
0x40000f4	            0x75ed	                           jne 0x40000e3	       338	input-mt.c	FUNCTION_10	FOR_2
0x40000f6	          0x4539dc	                          cmp r12d, r11d	       341	input-mt.c	FUNCTION_10
0x40000f9	            0x7d0f	                           jge 0x400010a	       341	input-mt.c	FUNCTION_10
0x40000fb	          0x4585db	                         test r11d, r11d	       341	input-mt.c	FUNCTION_10
0x40000fe	      0xb801000000	                              mov eax, 1	       341	input-mt.c	FUNCTION_10
0x4000103	            0x7f05	                            jg 0x400010a	       341	input-mt.c	FUNCTION_10
0x4000105	              0x5b	                                 pop rbx	       342	input-mt.c	FUNCTION_10
0x4000106	              0x5d	                                 pop rbp	       342	input-mt.c	FUNCTION_10
0x4000107	            0x415c	                                 pop r12	       342	input-mt.c	FUNCTION_10
0x4000109	              0xc3	                                     ret	       342	input-mt.c	FUNCTION_10
0x400010a	            0x89f0	                            mov eax, esi	       319	input-mt.c	FUNCTION_10	IF_1
0x400010c	            0xf7d0	                                 not eax	       319	input-mt.c	FUNCTION_10	IF_1
0x400010e	          0xc1e81f	                           shr eax, 0x1f	       319	input-mt.c	FUNCTION_10	IF_1
0x4000111	          0x4139f4	                           cmp r12d, esi	       319	input-mt.c	FUNCTION_10	IF_1
0x4000114	           0xf9fc2	                                 setg dl	       319	input-mt.c	FUNCTION_10	IF_1
0x4000117	              0x5b	                                 pop rbx	       342	input-mt.c	FUNCTION_10
0x4000118	            0x21d0	                            and eax, edx	       319	input-mt.c	FUNCTION_10	IF_1
0x400011a	              0x5d	                                 pop rbp	       342	input-mt.c	FUNCTION_10
0x400011b	            0x415c	                                 pop r12	       342	input-mt.c	FUNCTION_10
0x400011d	              0xc3	                                     ret	       342	input-mt.c	FUNCTION_10
0x400011e	              0x5b	                                 pop rbx	       342	input-mt.c	FUNCTION_10
0x400011f	            0x31c0	                            xor eax, eax	       319	input-mt.c	FUNCTION_10	IF_1
0x4000121	              0x5d	                                 pop rbp	       342	input-mt.c	FUNCTION_10
0x4000122	            0x415c	                                 pop r12	       342	input-mt.c	FUNCTION_10
0x4000124	              0xc3	                                     ret	       342	input-mt.c	FUNCTION_10
0x4000125	            0x31c0	                            xor eax, eax	       319	input-mt.c	FUNCTION_10	IF_1
0x4000127	              0xc3	                                     ret	       342	input-mt.c	FUNCTION_10
input_mt_destroy_slots	WHILE,0:FOR,0:IF,1:functions,0:DO,0:CALL,2:ELSE,0:SWITCH,0	12
0x40004e0	              0x53	                                push rbx	       114	input-mt.c	FUNCTION_3
0x40004e1	    0x488b87380100	           mov rax, qword [rdi + 0x138] 	       115	input-mt.c	FUNCTION_3	IF_1
0x40004e8	          0x4889fb	                            mov rbx, rdi	       114	input-mt.c	FUNCTION_3
0x40004eb	          0x4885c0	                           test rax, rax	       115	input-mt.c	FUNCTION_3	IF_1
0x40004ee	            0x7415	                            je 0x4000505	       115	input-mt.c	FUNCTION_3	IF_1
0x40004f0	        0x488b7818	            mov rdi, qword [rax + 0x18] 	       116	input-mt.c	FUNCTION_3	IF_1	CALL_1
0x40004f4	      0xe800000000	                          call 0x40004f9	       116	input-mt.c	FUNCTION_3	IF_1	CALL_1
0x40004f9	    0x488bbb380100	           mov rdi, qword [rbx + 0x138] 	       117	input-mt.c	FUNCTION_3	IF_1	CALL_2
0x4000500	      0xe800000000	                          call 0x4000505	       117	input-mt.c	FUNCTION_3	IF_1	CALL_2
0x4000505	    0x48c783380100	              mov qword [rbx + 0x138], 0	       119	input-mt.c	FUNCTION_3
0x4000510	              0x5b	                                 pop rbx	       120	input-mt.c	FUNCTION_3
0x4000511	              0xc3	                                     ret	       120	input-mt.c	FUNCTION_3
input_mt_get_slot_by_key	WHILE,0:FOR,2:IF,3:functions,0:DO,0:CALL,3:ELSE,0:SWITCH,0	36
0x4000460	    0x488b8f380100	           mov rcx, qword [rdi + 0x138] 	       473	input-mt.c	FUNCTION_15
0x4000467	          0x4885c9	                           test rcx, rcx	       476	input-mt.c	FUNCTION_15	IF_1
0x400046a	            0x745f	                            je 0x40004cb	       476	input-mt.c	FUNCTION_15	IF_1
0x400046c	        0x48635104	            movsxd rdx, dword [rcx + 4] 	       479	input-mt.c	FUNCTION_15	FOR_1
0x4000470	        0x488d7920	                   lea rdi, [rcx + 0x20]	       479	input-mt.c	FUNCTION_15	FOR_1
0x4000474	      0xb8ffffffff	                     mov eax, 0xffffffff	       477	input-mt.c	FUNCTION_15	IF_1
0x4000479	        0x48c1e206	                              shl rdx, 6	       479	input-mt.c	FUNCTION_15	FOR_1
0x400047d	          0x4801fa	                            add rdx, rdi	       479	input-mt.c	FUNCTION_15	FOR_1
0x4000480	          0x4839d7	                            cmp rdi, rdx	       479	input-mt.c	FUNCTION_15	FOR_1
0x4000483	            0x744b	                            je 0x40004d0	       479	input-mt.c	FUNCTION_15	FOR_1
0x4000485	          0x4889f8	                            mov rax, rdi	       479	input-mt.c	FUNCTION_15	FOR_1
0x4000488	        0x448b4824	            mov r9d, dword [rax + 0x24] 	       480	input-mt.c	FUNCTION_15	FOR_1	IF_2	CALL_1
0x400048c	          0x4585c9	                           test r9d, r9d	       480	input-mt.c	FUNCTION_15	FOR_1	IF_2	CALL_1
0x400048f	            0x7805	                            js 0x4000496	       480	input-mt.c	FUNCTION_15	FOR_1	IF_2	CALL_1
0x4000491	          0x39703c	            cmp dword [rax + 0x3c], esi 	       480	input-mt.c	FUNCTION_15	FOR_1	IF_2	CALL_1
0x4000494	            0x742d	                            je 0x40004c3	       480	input-mt.c	FUNCTION_15	FOR_1	IF_2	CALL_1
0x4000496	        0x4883c040	                           add rax, 0x40	       479	input-mt.c	FUNCTION_15	FOR_1
0x400049a	          0x4839d0	                            cmp rax, rdx	       479	input-mt.c	FUNCTION_15	FOR_1
0x400049d	            0x75e9	                           jne 0x4000488	       479	input-mt.c	FUNCTION_15	FOR_1
0x400049f	          0x4889f8	                            mov rax, rdi	       479	input-mt.c	FUNCTION_15	FOR_1
0x40004a2	            0xeb09	                           jmp 0x40004ad	       479	input-mt.c	FUNCTION_15	FOR_1
0x40004a4	        0x4883c040	                           add rax, 0x40	       483	input-mt.c	FUNCTION_15	FOR_2
0x40004a8	          0x4839d0	                            cmp rax, rdx	       483	input-mt.c	FUNCTION_15	FOR_2
0x40004ab	            0x741e	                            je 0x40004cb	       483	input-mt.c	FUNCTION_15	FOR_2
0x40004ad	        0x448b4024	            mov r8d, dword [rax + 0x24] 	       484	input-mt.c	FUNCTION_15	FOR_2	IF_3	CALL_3
0x40004b1	          0x4585c0	                           test r8d, r8d	       484	input-mt.c	FUNCTION_15	FOR_2	IF_3	CALL_3
0x40004b4	            0x79ee	                           jns 0x40004a4	       484	input-mt.c	FUNCTION_15	FOR_2	IF_3	CALL_3
0x40004b6	        0x448b4110	            mov r8d, dword [rcx + 0x10] 	       484	input-mt.c	FUNCTION_15	FOR_2	IF_3	CALL_3
0x40004ba	        0x44394038	            cmp dword [rax + 0x38], r8d 	       484	input-mt.c	FUNCTION_15	FOR_2	IF_3	CALL_3
0x40004be	            0x74e4	                            je 0x40004a4	       484	input-mt.c	FUNCTION_15	FOR_2	IF_3	CALL_3
0x40004c0	          0x89703c	             mov dword [rax + 0x3c], esi	       485	input-mt.c	FUNCTION_15	FOR_2	IF_3
0x40004c3	          0x4829f8	                            sub rax, rdi	       486	input-mt.c	FUNCTION_15	FOR_2	IF_3
0x40004c6	        0x48c1e806	                              shr rax, 6	       486	input-mt.c	FUNCTION_15	FOR_2	IF_3
0x40004ca	              0xc3	                                     ret	       486	input-mt.c	FUNCTION_15	FOR_2	IF_3
0x40004cb	      0xb8ffffffff	                     mov eax, 0xffffffff	       477	input-mt.c	FUNCTION_15	IF_1
0x40004d0	            0xf3c3	                                     ret	       490	input-mt.c	FUNCTION_15
input_mt_sync_frame	WHILE,0:FOR,0:IF,3:functions,0:DO,0:CALL,2:ELSE,0:SWITCH,0	22
0x4000830	              0x55	                                push rbp	       295	input-mt.c	FUNCTION_9
0x4000831	              0x53	                                push rbx	       295	input-mt.c	FUNCTION_9
0x4000832	    0x488b9f380100	           mov rbx, qword [rdi + 0x138] 	       296	input-mt.c	FUNCTION_9
0x4000839	          0x4885db	                           test rbx, rbx	       299	input-mt.c	FUNCTION_9	IF_1
0x400083c	            0x7424	                            je 0x4000862	       299	input-mt.c	FUNCTION_9	IF_1
0x400083e	        0xf6430c04	                test byte [rbx + 0xc], 4	       302	input-mt.c	FUNCTION_9	IF_2
0x4000842	          0x4889fd	                            mov rbp, rdi	       302	input-mt.c	FUNCTION_9	IF_2
0x4000845	            0x751e	                           jne 0x4000865	       302	input-mt.c	FUNCTION_9	IF_2
0x4000847	          0x8b430c	              mov eax, dword [rbx + 0xc]	       308	input-mt.c	FUNCTION_9	CALL_2
0x400084a	            0x31f6	                            xor esi, esi	       308	input-mt.c	FUNCTION_9	CALL_2
0x400084c	          0x4889ef	                            mov rdi, rbp	       308	input-mt.c	FUNCTION_9	CALL_2
0x400084f	          0x83e011	                           and eax, 0x11	       308	input-mt.c	FUNCTION_9	CALL_2
0x4000852	          0x83f801	                              cmp eax, 1	       308	input-mt.c	FUNCTION_9	CALL_2
0x4000855	        0x400f94c6	                                sete sil	       308	input-mt.c	FUNCTION_9	CALL_2
0x4000859	      0xe800000000	                          call 0x400085e	       308	input-mt.c	FUNCTION_9	CALL_2
0x400085e	        0x83431001	               add dword [rbx + 0x10], 1	       310	input-mt.c	FUNCTION_9
0x4000862	              0x5b	                                 pop rbx	       311	input-mt.c	FUNCTION_9
0x4000863	              0x5d	                                 pop rbp	       311	input-mt.c	FUNCTION_9
0x4000864	              0xc3	                                     ret	       311	input-mt.c	FUNCTION_9
0x4000865	          0x4889de	                            mov rsi, rbx	       303	input-mt.c	FUNCTION_9	CALL_1
0x4000868	      0xe843ffffff	         call sym.__input_mt_drop_unused	       303	input-mt.c	FUNCTION_9	CALL_1
0x400086d	            0xebd8	                           jmp 0x4000847	       303	input-mt.c	FUNCTION_9	CALL_1
input_mt_report_finger_count	WHILE,0:FOR,0:IF,0:functions,0:DO,0:CALL,5:ELSE,0:SWITCH,0	40
0x40005a0	              0x55	                                push rbp	       174	input-mt.c	FUNCTION_5
0x40005a1	            0x31c9	                            xor ecx, ecx	       175	input-mt.c	FUNCTION_5	CALL_1
0x40005a3	              0x53	                                push rbx	       174	input-mt.c	FUNCTION_5
0x40005a4	          0x83fe01	                              cmp esi, 1	       175	input-mt.c	FUNCTION_5	CALL_1
0x40005a7	            0x89f5	                            mov ebp, esi	       174	input-mt.c	FUNCTION_5
0x40005a9	      0xba45010000	                          mov edx, 0x145	       175	input-mt.c	FUNCTION_5	CALL_1
0x40005ae	           0xf94c1	                                 sete cl	       175	input-mt.c	FUNCTION_5	CALL_1
0x40005b1	      0xbe01000000	                              mov esi, 1	       175	input-mt.c	FUNCTION_5	CALL_1
0x40005b6	          0x4889fb	                            mov rbx, rdi	       174	input-mt.c	FUNCTION_5
0x40005b9	      0xe800000000	                          call 0x40005be	       175	input-mt.c	FUNCTION_5	CALL_1
0x40005be	            0x31c9	                            xor ecx, ecx	       176	input-mt.c	FUNCTION_5	CALL_2
0x40005c0	          0x83fd02	                              cmp ebp, 2	       176	input-mt.c	FUNCTION_5	CALL_2
0x40005c3	          0x4889df	                            mov rdi, rbx	       176	input-mt.c	FUNCTION_5	CALL_2
0x40005c6	           0xf94c1	                                 sete cl	       176	input-mt.c	FUNCTION_5	CALL_2
0x40005c9	      0xba4d010000	                          mov edx, 0x14d	       176	input-mt.c	FUNCTION_5	CALL_2
0x40005ce	      0xbe01000000	                              mov esi, 1	       176	input-mt.c	FUNCTION_5	CALL_2
0x40005d3	      0xe800000000	                          call 0x40005d8	       176	input-mt.c	FUNCTION_5	CALL_2
0x40005d8	            0x31c9	                            xor ecx, ecx	       177	input-mt.c	FUNCTION_5	CALL_3
0x40005da	          0x83fd03	                              cmp ebp, 3	       177	input-mt.c	FUNCTION_5	CALL_3
0x40005dd	          0x4889df	                            mov rdi, rbx	       177	input-mt.c	FUNCTION_5	CALL_3
0x40005e0	           0xf94c1	                                 sete cl	       177	input-mt.c	FUNCTION_5	CALL_3
0x40005e3	      0xba4e010000	                          mov edx, 0x14e	       177	input-mt.c	FUNCTION_5	CALL_3
0x40005e8	      0xbe01000000	                              mov esi, 1	       177	input-mt.c	FUNCTION_5	CALL_3
0x40005ed	      0xe800000000	                          call 0x40005f2	       177	input-mt.c	FUNCTION_5	CALL_3
0x40005f2	            0x31c9	                            xor ecx, ecx	       178	input-mt.c	FUNCTION_5	CALL_4
0x40005f4	          0x83fd04	                              cmp ebp, 4	       178	input-mt.c	FUNCTION_5	CALL_4
0x40005f7	          0x4889df	                            mov rdi, rbx	       178	input-mt.c	FUNCTION_5	CALL_4
0x40005fa	           0xf94c1	                                 sete cl	       178	input-mt.c	FUNCTION_5	CALL_4
0x40005fd	      0xba4f010000	                          mov edx, 0x14f	       178	input-mt.c	FUNCTION_5	CALL_4
0x4000602	      0xbe01000000	                              mov esi, 1	       178	input-mt.c	FUNCTION_5	CALL_4
0x4000607	      0xe800000000	                          call 0x400060c	       178	input-mt.c	FUNCTION_5	CALL_4
0x400060c	            0x31c9	                            xor ecx, ecx	       179	input-mt.c	FUNCTION_5	CALL_5
0x400060e	          0x4889df	                            mov rdi, rbx	       179	input-mt.c	FUNCTION_5	CALL_5
0x4000611	          0x83fd05	                              cmp ebp, 5	       179	input-mt.c	FUNCTION_5	CALL_5
0x4000614	              0x5b	                                 pop rbx	       180	input-mt.c	FUNCTION_5
0x4000615	              0x5d	                                 pop rbp	       180	input-mt.c	FUNCTION_5
0x4000616	           0xf94c1	                                 sete cl	       179	input-mt.c	FUNCTION_5	CALL_5
0x4000619	      0xba48010000	                          mov edx, 0x148	       179	input-mt.c	FUNCTION_5	CALL_5
0x400061e	      0xbe01000000	                              mov esi, 1	       179	input-mt.c	FUNCTION_5	CALL_5
0x4000623	      0xe900000000	                           jmp 0x4000628	       179	input-mt.c	FUNCTION_5	CALL_5
input_mt_drop_unused	WHILE,0:FOR,0:IF,1:functions,0:DO,0:CALL,1:ELSE,0:SWITCH,0	9
0x4000810	              0x53	                                push rbx	       276	input-mt.c	FUNCTION_8
0x4000811	    0x488b9f380100	           mov rbx, qword [rdi + 0x138] 	       277	input-mt.c	FUNCTION_8
0x4000818	          0x4885db	                           test rbx, rbx	       279	input-mt.c	FUNCTION_8	IF_1
0x400081b	            0x740c	                            je 0x4000829	       279	input-mt.c	FUNCTION_8	IF_1
0x400081d	          0x4889de	                            mov rsi, rbx	       280	input-mt.c	FUNCTION_8	IF_1	CALL_1
0x4000820	      0xe88bffffff	         call sym.__input_mt_drop_unused	       280	input-mt.c	FUNCTION_8	IF_1	CALL_1
0x4000825	        0x83431001	               add dword [rbx + 0x10], 1	       281	input-mt.c	FUNCTION_8	IF_1
0x4000829	              0x5b	                                 pop rbx	       283	input-mt.c	FUNCTION_8
0x400082a	              0xc3	                                     ret	       283	input-mt.c	FUNCTION_8
