acpi_ut_get_descriptor_name	SWITCH,0:functions,0:IF,2:FOR,0:WHILE,0:CALL,2:DO,0:ELSE,0	9
0x4000126	          0x4885ff	                           test rdi, rdi	       307	utdecode.c	FUNCTION_6	IF_1
0x4000129	    0x48c7c0000000	                              mov rax, 0	       308	utdecode.c	FUNCTION_6	IF_1
0x4000130	            0x7418	                            je 0x400014a	       307	utdecode.c	FUNCTION_6	IF_1
0x4000132	         0xfb65708	               movzx edx, byte [rdi + 8]	       311	utdecode.c	FUNCTION_6	IF_2	CALL_1
0x4000136	    0x48c7c0000000	                              mov rax, 0	       312	utdecode.c	FUNCTION_6	IF_2
0x400013d	          0x80fa0f	                             cmp dl, 0xf	       311	utdecode.c	FUNCTION_6	IF_2	CALL_1
0x4000140	            0x7708	                            ja 0x400014a	       311	utdecode.c	FUNCTION_6	IF_2	CALL_1
0x4000142	    0x488b04d50000	                  mov rax, qword [rdx*8]	       315	utdecode.c	FUNCTION_6	CALL_2
0x400014a	              0xc3	                                     ret	       316	utdecode.c	FUNCTION_6
acpi_ut_get_event_name	SWITCH,0:functions,0:IF,1:FOR,0:WHILE,0:CALL,0:DO,0:ELSE,0	6
0x4000080	          0x83ff04	                              cmp edi, 4	       125	utdecode.c	FUNCTION_2	IF_1
0x4000083	    0x48c7c0000000	                              mov rax, 0	       126	utdecode.c	FUNCTION_2	IF_1
0x400008a	            0x770a	                            ja 0x4000096	       125	utdecode.c	FUNCTION_2	IF_1
0x400008c	            0x89ff	                            mov edi, edi	       129	utdecode.c	FUNCTION_2
0x400008e	    0x488b04fd0000	                  mov rax, qword [rdi*8]	       129	utdecode.c	FUNCTION_2
0x4000096	              0xc3	                                     ret	       130	utdecode.c	FUNCTION_2
acpi_ut_get_region_name	SWITCH,0:functions,0:IF,4:FOR,0:WHILE,0:CALL,0:DO,0:ELSE,3	15
0x4000040	          0x4084ff	                           test dil, dil	        87	utdecode.c	FUNCTION_1	IF_1
0x4000043	    0x48c7c0000000	                              mov rax, 0	        88	utdecode.c	FUNCTION_1	IF_1
0x400004a	            0x7833	                            js 0x400007f	        87	utdecode.c	FUNCTION_1	IF_1
0x400004c	        0x4080ff7e	                           cmp dil, 0x7e	        89	utdecode.c	FUNCTION_1	ELSE_1	IF_2
0x4000050	    0x48c7c0000000	                              mov rax, 0	        90	utdecode.c	FUNCTION_1	ELSE_1	IF_2
0x4000057	            0x7426	                            je 0x400007f	        89	utdecode.c	FUNCTION_1	ELSE_1	IF_2
0x4000059	        0x4080ff7f	                           cmp dil, 0x7f	        91	utdecode.c	FUNCTION_1	ELSE_2	IF_3
0x400005d	    0x48c7c0000000	                              mov rax, 0	        92	utdecode.c	FUNCTION_1	ELSE_2	IF_3
0x4000064	            0x7419	                            je 0x400007f	        91	utdecode.c	FUNCTION_1	ELSE_2	IF_3
0x4000066	        0x4080ff0a	                            cmp dil, 0xa	        93	utdecode.c	FUNCTION_1	ELSE_3	IF_4
0x400006a	    0x48c7c0000000	                              mov rax, 0	        94	utdecode.c	FUNCTION_1	ELSE_3	IF_4
0x4000071	            0x770c	                            ja 0x400007f	        93	utdecode.c	FUNCTION_1	ELSE_3	IF_4
0x4000073	        0x400fb6ff	                          movzx edi, dil	        97	utdecode.c	FUNCTION_1
0x4000077	    0x488b04fd0000	                  mov rax, qword [rdi*8]	        97	utdecode.c	FUNCTION_1
0x400007f	              0xc3	                                     ret	        98	utdecode.c	FUNCTION_1
acpi_ut_get_node_name	SWITCH,0:functions,0:IF,3:FOR,0:WHILE,0:CALL,2:DO,0:ELSE,0	18
0x40000e5	          0x4885ff	                           test rdi, rdi	       244	utdecode.c	FUNCTION_5	IF_1
0x40000e8	    0x48c7c0000000	                              mov rax, 0	       245	utdecode.c	FUNCTION_5	IF_1
0x40000ef	            0x7434	                            je 0x4000125	       244	utdecode.c	FUNCTION_5	IF_1
0x40000f1	        0x4883ffff	             cmp rdi, 0xffffffffffffffff	       250	utdecode.c	FUNCTION_5	IF_2
0x40000f5	    0x48c7c0000000	                              mov rax, 0	       251	utdecode.c	FUNCTION_5	IF_2
0x40000fc	            0x7427	                            je 0x4000125	       250	utdecode.c	FUNCTION_5	IF_2
0x40000fe	    0x483b3d000000	            cmp rdi, qword [0x04000105] 	       250	utdecode.c	FUNCTION_5	IF_2
0x4000105	            0x741e	                            je 0x4000125	       250	utdecode.c	FUNCTION_5	IF_2
0x4000107	        0x807f080f	                 cmp byte [rdi + 8], 0xf	       256	utdecode.c	FUNCTION_5	IF_3	CALL_1
0x400010b	    0x48c7c0000000	                              mov rax, 0	       257	utdecode.c	FUNCTION_5	IF_3
0x4000112	            0x7511	                           jne 0x4000125	       256	utdecode.c	FUNCTION_5	IF_3	CALL_1
0x4000114	              0x53	                                push rbx	       239	utdecode.c	FUNCTION_5
0x4000115	        0x488d5f0c	                    lea rbx, [rdi + 0xc]	       264	utdecode.c	FUNCTION_5	CALL_2
0x4000119	          0x4889df	                            mov rdi, rbx	       264	utdecode.c	FUNCTION_5	CALL_2
0x400011c	      0xe800000000	                          call 0x4000121	       264	utdecode.c	FUNCTION_5	CALL_2
0x4000121	          0x4889d8	                            mov rax, rbx	       268	utdecode.c	FUNCTION_5
0x4000124	              0x5b	                                 pop rbx	       269	utdecode.c	FUNCTION_5
0x4000125	              0xc3	                                     ret	       269	utdecode.c	FUNCTION_5
acpi_ut_get_reference_name	SWITCH,0:functions,0:IF,4:FOR,0:WHILE,0:CALL,1:DO,0:ELSE,0	15
0x400014b	          0x4885ff	                           test rdi, rdi	       345	utdecode.c	FUNCTION_7	IF_1
0x400014e	    0x48c7c0000000	                              mov rax, 0	       346	utdecode.c	FUNCTION_7	IF_1
0x4000155	            0x7432	                            je 0x4000189	       345	utdecode.c	FUNCTION_7	IF_1
0x4000157	        0x807f080e	                 cmp byte [rdi + 8], 0xe	       349	utdecode.c	FUNCTION_7	IF_2	CALL_1
0x400015b	    0x48c7c0000000	                              mov rax, 0	       350	utdecode.c	FUNCTION_7	IF_2
0x4000162	            0x7525	                           jne 0x4000189	       349	utdecode.c	FUNCTION_7	IF_2	CALL_1
0x4000164	        0x807f0914	                cmp byte [rdi + 9], 0x14	       353	utdecode.c	FUNCTION_7	IF_3
0x4000168	    0x48c7c0000000	                              mov rax, 0	       354	utdecode.c	FUNCTION_7	IF_3
0x400016f	            0x7518	                           jne 0x4000189	       353	utdecode.c	FUNCTION_7	IF_3
0x4000171	         0xfb6570d	            movzx edx, byte [rdi + 0xd] 	       357	utdecode.c	FUNCTION_7	IF_4
0x4000175	    0x48c7c0000000	                              mov rax, 0	       358	utdecode.c	FUNCTION_7	IF_4
0x400017c	          0x80fa06	                               cmp dl, 6	       357	utdecode.c	FUNCTION_7	IF_4
0x400017f	            0x7708	                            ja 0x4000189	       357	utdecode.c	FUNCTION_7	IF_4
0x4000181	    0x488b04d50000	                  mov rax, qword [rdx*8]	       361	utdecode.c	FUNCTION_7
0x4000189	              0xc3	                                     ret	       362	utdecode.c	FUNCTION_7
acpi_ut_valid_object_type	SWITCH,0:functions,0:IF,1:FOR,0:WHILE,0:CALL,0:DO,0:ELSE,0	3
0x40001a1	          0x83ff1d	                           cmp edi, 0x1d	       568	utdecode.c	FUNCTION_11
0x40001a4	           0xf96c0	                                setbe al	       568	utdecode.c	FUNCTION_11
0x40001a7	              0xc3	                                     ret	       578	utdecode.c	FUNCTION_11
acpi_ut_get_mutex_name	SWITCH,0:functions,0:IF,1:FOR,0:WHILE,0:CALL,0:DO,0:ELSE,0	6
0x400018a	          0x83ff05	                              cmp edi, 5	       390	utdecode.c	FUNCTION_8	IF_1
0x400018d	    0x48c7c0000000	                              mov rax, 0	       391	utdecode.c	FUNCTION_8	IF_1
0x4000194	            0x770a	                            ja 0x40001a0	       390	utdecode.c	FUNCTION_8	IF_1
0x4000196	            0x89ff	                            mov edi, edi	       394	utdecode.c	FUNCTION_8
0x4000198	    0x488b04fd0000	                  mov rax, qword [rdi*8]	       394	utdecode.c	FUNCTION_8
0x40001a0	              0xc3	                                     ret	       395	utdecode.c	FUNCTION_8
acpi_ut_get_object_type_name	SWITCH,0:functions,0:IF,2:FOR,0:WHILE,0:CALL,11:DO,0:ELSE,0	14
0x40000ae	          0x4885ff	                           test rdi, rdi	       205	utdecode.c	FUNCTION_4	IF_1
0x40000b1	    0x48c7c0000000	                              mov rax, 0	       207	utdecode.c	FUNCTION_4	IF_1	CALL_3
0x40000b8	            0x742a	                            je 0x40000e4	       205	utdecode.c	FUNCTION_4	IF_1
0x40000ba	          0x8a4708	                  mov al, byte [rdi + 8]	       212	utdecode.c	FUNCTION_4	IF_2	CALL_4
0x40000bd	          0x8d50f2	                    lea edx, [rax - 0xe]	       212	utdecode.c	FUNCTION_4	IF_2	CALL_4
0x40000c0	    0x48c7c0000000	                              mov rax, 0	       220	utdecode.c	FUNCTION_4	IF_2	CALL_9
0x40000c7	          0x80fa01	                               cmp dl, 1	       212	utdecode.c	FUNCTION_4	IF_2	CALL_4
0x40000ca	            0x7718	                            ja 0x40000e4	       212	utdecode.c	FUNCTION_4	IF_2	CALL_4
0x40000cc	         0xfb65709	               movzx edx, byte [rdi + 9]	       223	utdecode.c	FUNCTION_4	CALL_11
0x40000d0	    0x48c7c0000000	                              mov rax, 0	       195	utdecode.c	FUNCTION_3	IF_1
0x40000d7	          0x83fa1e	                           cmp edx, 0x1e	       194	utdecode.c	FUNCTION_3	IF_1
0x40000da	            0x7708	                            ja 0x40000e4	       194	utdecode.c	FUNCTION_3	IF_1
0x40000dc	    0x488b04d50000	                  mov rax, qword [rdx*8]	       198	utdecode.c	FUNCTION_3
0x40000e4	              0xc3	                                     ret	       224	utdecode.c	FUNCTION_4
