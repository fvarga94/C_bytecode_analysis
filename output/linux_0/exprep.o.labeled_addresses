acpi_ex_prep_common_field_object	ELSE,0:FOR,0:WHILE,0:CALL,8:functions,0:DO,0:IF,1:SWITCH,0	42
0x4000040	        0x4088770d	               mov byte [rdi + 0xd], sil	       309	exprep.c	FUNCTION_3
0x4000044	          0x83e60f	                            and esi, 0xf	       309	exprep.c	FUNCTION_3
0x4000047	          0x88570e	                mov byte [rdi + 0xe], dl	       310	exprep.c	FUNCTION_3
0x400004a	        0x4080fe05	                              cmp sil, 5	       206	exprep.c	FUNCTION_2	SWITCH_1
0x400004e	        0x44894718	             mov dword [rdi + 0x18], r8d	       311	exprep.c	FUNCTION_3
0x4000052	            0x7729	                            ja 0x400007d	       206	exprep.c	FUNCTION_2	SWITCH_1
0x4000054	        0x400fb6f6	                          movzx esi, sil	       206	exprep.c	FUNCTION_2	SWITCH_1
0x4000058	    0x488b04f50000	                  mov rax, qword [rsi*8]	       206	exprep.c	FUNCTION_2	SWITCH_1
0x4000060	      0xe900000000	                           jmp 0x4000065	       206	exprep.c	FUNCTION_2	SWITCH_1
0x4000065	      0xba10000000	                           mov edx, 0x10	       234	exprep.c	FUNCTION_2	SWITCH_1
0x400006a	      0xb802000000	                              mov eax, 2	       233	exprep.c	FUNCTION_2	SWITCH_1
0x400006f	            0xeb44	                           jmp 0x40000b5	       233	exprep.c	FUNCTION_2	SWITCH_1
0x4000071	      0xba40000000	                           mov edx, 0x40	       246	exprep.c	FUNCTION_2	SWITCH_1
0x4000076	      0xb808000000	                              mov eax, 8	       245	exprep.c	FUNCTION_2	SWITCH_1
0x400007b	            0xeb38	                           jmp 0x40000b5	       245	exprep.c	FUNCTION_2	SWITCH_1
0x400007d	        0x400fb6ce	                          movzx ecx, sil	       253	exprep.c	FUNCTION_2	SWITCH_1	CALL_3
0x4000081	    0x48c7c2000000	                              mov rdx, 0	       253	exprep.c	FUNCTION_2	SWITCH_1	CALL_3
0x4000088	      0xbefd000000	                           mov esi, 0xfd	       253	exprep.c	FUNCTION_2	SWITCH_1	CALL_3
0x400008d	    0x48c7c7000000	                              mov rdi, 0	       253	exprep.c	FUNCTION_2	SWITCH_1	CALL_3
0x4000094	      0xe800000000	                          call 0x4000099	       253	exprep.c	FUNCTION_2	SWITCH_1	CALL_3
0x4000099	      0xb804300000	                         mov eax, 0x3004	       331	exprep.c	FUNCTION_3	IF_1	CALL_3
0x400009e	              0xc3	                                     ret	       331	exprep.c	FUNCTION_3	IF_1	CALL_3
0x400009f	      0xba08000000	                              mov edx, 8	       221	exprep.c	FUNCTION_2	SWITCH_1
0x40000a4	      0xb801000000	                              mov eax, 1	       220	exprep.c	FUNCTION_2	SWITCH_1
0x40000a9	            0xeb0a	                           jmp 0x40000b5	       220	exprep.c	FUNCTION_2	SWITCH_1
0x40000ab	      0xba20000000	                           mov edx, 0x20	       240	exprep.c	FUNCTION_2	SWITCH_1
0x40000b0	      0xb804000000	                              mov eax, 4	       239	exprep.c	FUNCTION_2	SWITCH_1
0x40000b5	        0x807f090e	                 cmp byte [rdi + 9], 0xe	       264	exprep.c	FUNCTION_2	IF_1
0x40000b9	      0xbe01000000	                              mov esi, 1	       264	exprep.c	FUNCTION_2	IF_1
0x40000be	           0xf44c6	                          cmove eax, esi	       264	exprep.c	FUNCTION_2	IF_1
0x40000c1	          0xc1ea03	                              shr edx, 3	       336	exprep.c	FUNCTION_3
0x40000c4	          0x88570f	                mov byte [rdi + 0xf], dl	       336	exprep.c	FUNCTION_3
0x40000c7	            0x89ca	                            mov edx, ecx	       351	exprep.c	FUNCTION_3
0x40000c9	            0xf7d8	                                 neg eax	       351	exprep.c	FUNCTION_3
0x40000cb	          0xc1ea03	                              shr edx, 3	       351	exprep.c	FUNCTION_3
0x40000ce	            0x21d0	                            and eax, edx	       351	exprep.c	FUNCTION_3
0x40000d0	          0x89471c	             mov dword [rdi + 0x1c], eax	       351	exprep.c	FUNCTION_3
0x40000d3	          0xc1e003	                              shl eax, 3	       358	exprep.c	FUNCTION_3
0x40000d6	            0x29c1	                            sub ecx, eax	       358	exprep.c	FUNCTION_3
0x40000d8	            0x31c0	                            xor eax, eax	       362	exprep.c	FUNCTION_3	CALL_8
0x40000da	          0x884f24	               mov byte [rdi + 0x24], cl	       358	exprep.c	FUNCTION_3
0x40000dd	              0xc3	                                     ret	       363	exprep.c	FUNCTION_3
acpi_ex_prep_field_value	ELSE,1:FOR,0:WHILE,0:CALL,44:functions,0:DO,0:IF,12:SWITCH,1	169
0x40000de	            0x4155	                                push r13	       379	exprep.c	FUNCTION_4
0x40000e0	            0x4154	                                push r12	       379	exprep.c	FUNCTION_4
0x40000e2	              0x55	                                push rbp	       379	exprep.c	FUNCTION_4
0x40000e3	              0x53	                                push rbx	       379	exprep.c	FUNCTION_4
0x40000e4	          0x4889fd	                            mov rbp, rdi	       379	exprep.c	FUNCTION_4
0x40000e7	        0x807f4213	            cmp byte [rdi + 0x42], 0x13 	       390	exprep.c	FUNCTION_4	IF_1
0x40000eb	            0x7464	                            je 0x4000151	       390	exprep.c	FUNCTION_4	IF_1
0x40000ed	          0x488b3f	                    mov rdi, qword [rdi]	       391	exprep.c	FUNCTION_4	IF_1	IF_2
0x40000f0	          0x4885ff	                           test rdi, rdi	       391	exprep.c	FUNCTION_4	IF_1	IF_2
0x40000f3	            0x7522	                           jne 0x4000117	       391	exprep.c	FUNCTION_4	IF_1	IF_2
0x40000f5	    0x48c7c2000000	                              mov rdx, 0	       392	exprep.c	FUNCTION_4	IF_1	IF_2	CALL_2
0x40000fc	      0xbe88010000	                          mov esi, 0x188	       392	exprep.c	FUNCTION_4	IF_1	IF_2	CALL_2
0x4000101	    0x48c7c7000000	                              mov rdi, 0	       392	exprep.c	FUNCTION_4	IF_1	IF_2	CALL_2
0x4000108	      0xe800000000	                          call 0x400010d	       392	exprep.c	FUNCTION_4	IF_1	IF_2	CALL_2
0x400010d	      0xb802300000	                         mov eax, 0x3002	       393	exprep.c	FUNCTION_4	IF_1	IF_2	CALL_3
0x4000112	      0xe933020000	                           jmp 0x400034a	       393	exprep.c	FUNCTION_4	IF_1	IF_2	CALL_3
0x4000117	      0xe800000000	                          call 0x400011c	       396	exprep.c	FUNCTION_4	IF_1	CALL_4
0x400011c	          0x83f80a	                            cmp eax, 0xa	       397	exprep.c	FUNCTION_4	IF_1	IF_3
0x400011f	            0x89c3	                            mov ebx, eax	       396	exprep.c	FUNCTION_4	IF_1	CALL_4
0x4000121	            0x742e	                            je 0x4000151	       397	exprep.c	FUNCTION_4	IF_1	IF_3
0x4000123	            0x89c7	                            mov edi, eax	       398	exprep.c	FUNCTION_4	IF_1	IF_3	CALL_5
0x4000125	      0xe800000000	                          call 0x400012a	       398	exprep.c	FUNCTION_4	IF_1	IF_3	CALL_5
0x400012a	            0x89d9	                            mov ecx, ebx	       398	exprep.c	FUNCTION_4	IF_1	IF_3	CALL_5
0x400012c	          0x4989c0	                             mov r8, rax	       398	exprep.c	FUNCTION_4	IF_1	IF_3	CALL_5
0x400012f	    0x48c7c2000000	                              mov rdx, 0	       398	exprep.c	FUNCTION_4	IF_1	IF_3	CALL_5
0x4000136	      0xbe90010000	                          mov esi, 0x190	       398	exprep.c	FUNCTION_4	IF_1	IF_3	CALL_5
0x400013b	    0x48c7c7000000	                              mov rdi, 0	       398	exprep.c	FUNCTION_4	IF_1	IF_3	CALL_5
0x4000142	      0xe800000000	                          call 0x4000147	       398	exprep.c	FUNCTION_4	IF_1	IF_3	CALL_5
0x4000147	      0xb803300000	                         mov eax, 0x3003	       402	exprep.c	FUNCTION_4	IF_1	IF_3	CALL_7
0x400014c	      0xe9f9010000	                           jmp 0x400034a	       402	exprep.c	FUNCTION_4	IF_1	IF_3	CALL_7
0x4000151	         0xfb64d42	           movzx ecx, byte [rbp + 0x42] 	       408	exprep.c	FUNCTION_4	CALL_8
0x4000155	      0xba80000000	                           mov edx, 0x80	       408	exprep.c	FUNCTION_4	CALL_8
0x400015a	      0xbe98010000	                          mov esi, 0x198	       408	exprep.c	FUNCTION_4	CALL_8
0x400015f	    0x48c7c7000000	                              mov rdi, 0	       408	exprep.c	FUNCTION_4	CALL_8
0x4000166	      0xe800000000	                          call 0x400016b	       408	exprep.c	FUNCTION_4	CALL_8
0x400016b	          0x4889c3	                            mov rbx, rax	       408	exprep.c	FUNCTION_4	CALL_8
0x400016e	      0xb804000000	                              mov eax, 4	       410	exprep.c	FUNCTION_4	IF_4	CALL_9
0x4000173	          0x4885db	                           test rbx, rbx	       409	exprep.c	FUNCTION_4	IF_4
0x4000176	     0xf84ce010000	                            je 0x400034a	       409	exprep.c	FUNCTION_4	IF_4
0x400017c	        0x488b4508	                mov rax, qword [rbp + 8]	       415	exprep.c	FUNCTION_4
0x4000180	          0x4889df	                            mov rdi, rbx	       416	exprep.c	FUNCTION_4	CALL_10
0x4000183	        0x48894310	             mov qword [rbx + 0x10], rax	       415	exprep.c	FUNCTION_4
0x4000187	         0xfb65541	           movzx edx, byte [rbp + 0x41] 	       416	exprep.c	FUNCTION_4	CALL_10
0x400018b	         0xfb67540	           movzx esi, byte [rbp + 0x40] 	       416	exprep.c	FUNCTION_4	CALL_10
0x400018f	          0x8b4d34	            mov ecx, dword [rbp + 0x34] 	       416	exprep.c	FUNCTION_4	CALL_10
0x4000192	        0x448b4538	            mov r8d, dword [rbp + 0x38] 	       416	exprep.c	FUNCTION_4	CALL_10
0x4000196	      0xe800000000	                          call 0x400019b	       416	exprep.c	FUNCTION_4	CALL_10
0x400019b	            0x85c0	                           test eax, eax	       421	exprep.c	FUNCTION_4	IF_5	CALL_11
0x400019d	          0x4189c4	                           mov r12d, eax	       416	exprep.c	FUNCTION_4	CALL_10
0x40001a0	            0x7410	                            je 0x40001b2	       421	exprep.c	FUNCTION_4	IF_5	CALL_11
0x40001a2	          0x4889df	                            mov rdi, rbx	       422	exprep.c	FUNCTION_4	IF_5	CALL_12
0x40001a5	      0xe800000000	                          call 0x40001aa	       422	exprep.c	FUNCTION_4	IF_5	CALL_12
0x40001aa	          0x4489e0	                           mov eax, r12d	       423	exprep.c	FUNCTION_4	IF_5	CALL_13
0x40001ad	      0xe998010000	                           jmp 0x400034a	       423	exprep.c	FUNCTION_4	IF_5	CALL_13
0x40001b2	          0x8a4542	               mov al, byte [rbp + 0x42]	       428	exprep.c	FUNCTION_4	SWITCH_1
0x40001b5	            0x3c12	                            cmp al, 0x12	       428	exprep.c	FUNCTION_4	SWITCH_1
0x40001b7	     0xf84ae000000	                            je 0x400026b	       428	exprep.c	FUNCTION_4	SWITCH_1
0x40001bd	            0x3c13	                            cmp al, 0x13	       428	exprep.c	FUNCTION_4	SWITCH_1
0x40001bf	     0xf84f3000000	                            je 0x40002b8	       428	exprep.c	FUNCTION_4	SWITCH_1
0x40001c5	            0x3c11	                            cmp al, 0x11	       428	exprep.c	FUNCTION_4	SWITCH_1
0x40001c7	     0xf855a010000	                           jne 0x4000327	       428	exprep.c	FUNCTION_4	SWITCH_1
0x40001cd	        0x488b7d00	                    mov rdi, qword [rbp]	       432	exprep.c	FUNCTION_4	SWITCH_1	CALL_14
0x40001d1	      0xe800000000	                          call 0x40001d6	       432	exprep.c	FUNCTION_4	SWITCH_1	CALL_14
0x40001d6	        0x48894328	             mov qword [rbx + 0x28], rax	       431	exprep.c	FUNCTION_4	SWITCH_1
0x40001da	          0x8a4543	               mov al, byte [rbp + 0x43]	       436	exprep.c	FUNCTION_4	SWITCH_1
0x40001dd	          0x884325	               mov byte [rbx + 0x25], al	       436	exprep.c	FUNCTION_4	SWITCH_1
0x40001e0	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       438	exprep.c	FUNCTION_4	SWITCH_1	IF_6
0x40001e4	          0x4885c0	                           test rax, rax	       438	exprep.c	FUNCTION_4	SWITCH_1	IF_6
0x40001e7	            0x743a	                            je 0x4000223	       438	exprep.c	FUNCTION_4	SWITCH_1	IF_6
0x40001e9	          0x4c8b20	                    mov r12, qword [rax]	       439	exprep.c	FUNCTION_4	SWITCH_1	IF_6
0x40001ec	    0x41f644240c04	                test byte [r12 + 0xc], 4	       440	exprep.c	FUNCTION_4	SWITCH_1	IF_6	IF_7
0x40001f2	            0x751f	                           jne 0x4000213	       440	exprep.c	FUNCTION_4	SWITCH_1	IF_6	IF_7
0x40001f4	          0x4c89e7	                            mov rdi, r12	       441	exprep.c	FUNCTION_4	SWITCH_1	IF_6	IF_7
0x40001f7	      0xe800000000	                          call 0x40001fc	       441	exprep.c	FUNCTION_4	SWITCH_1	IF_6	IF_7
0x40001fc	            0x85c0	                           test eax, eax	       443	exprep.c	FUNCTION_4	SWITCH_1	IF_6	IF_7	IF_8	CALL_16
0x40001fe	          0x4189c5	                           mov r13d, eax	       441	exprep.c	FUNCTION_4	SWITCH_1	IF_6	IF_7
0x4000201	            0x7410	                            je 0x4000213	       443	exprep.c	FUNCTION_4	SWITCH_1	IF_6	IF_7	IF_8	CALL_16
0x4000203	          0x4889df	                            mov rdi, rbx	       444	exprep.c	FUNCTION_4	SWITCH_1	IF_6	IF_7	IF_8	CALL_17
0x4000206	      0xe800000000	                          call 0x400020b	       444	exprep.c	FUNCTION_4	SWITCH_1	IF_6	IF_7	IF_8	CALL_17
0x400020b	          0x4489e8	                           mov eax, r13d	       445	exprep.c	FUNCTION_4	SWITCH_1	IF_6	IF_7	IF_8	CALL_18
0x400020e	      0xe937010000	                           jmp 0x400034a	       445	exprep.c	FUNCTION_4	SWITCH_1	IF_6	IF_7	IF_8	CALL_18
0x4000213	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       450	exprep.c	FUNCTION_4	SWITCH_1	IF_6
0x4000218	        0x48894330	             mov qword [rbx + 0x30], rax	       449	exprep.c	FUNCTION_4	SWITCH_1	IF_6
0x400021c	      0x418b442418	            mov eax, dword [r12 + 0x18] 	       451	exprep.c	FUNCTION_4	SWITCH_1	IF_6
0x4000221	            0xeb10	                           jmp 0x4000233	       451	exprep.c	FUNCTION_4	SWITCH_1	IF_6
0x4000223	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       453	exprep.c	FUNCTION_4	SWITCH_1	ELSE_1	IF_9
0x4000227	          0x4885c0	                           test rax, rax	       453	exprep.c	FUNCTION_4	SWITCH_1	ELSE_1	IF_9
0x400022a	            0x740b	                            je 0x4000237	       453	exprep.c	FUNCTION_4	SWITCH_1	ELSE_1	IF_9
0x400022c	        0x48894330	             mov qword [rbx + 0x30], rax	       454	exprep.c	FUNCTION_4	SWITCH_1	ELSE_1	IF_9
0x4000230	          0x8b453c	            mov eax, dword [rbp + 0x3c] 	       455	exprep.c	FUNCTION_4	SWITCH_1	ELSE_1	IF_9
0x4000233	        0x66894326	               mov word [rbx + 0x26], ax	       455	exprep.c	FUNCTION_4	SWITCH_1	ELSE_1	IF_9
0x4000237	        0x668b453e	               mov ax, word [rbp + 0x3e]	       458	exprep.c	FUNCTION_4	SWITCH_1
0x400023b	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       462	exprep.c	FUNCTION_4	SWITCH_1	IF_10
0x400023f	        0x66894338	               mov word [rbx + 0x38], ax	       458	exprep.c	FUNCTION_4	SWITCH_1
0x4000243	        0x807f0d03	                 cmp byte [rdi + 0xd], 3	       462	exprep.c	FUNCTION_4	SWITCH_1	IF_10
0x4000247	            0x7518	                           jne 0x4000261	       462	exprep.c	FUNCTION_4	SWITCH_1	IF_10
0x4000249	          0x8b4318	            mov eax, dword [rbx + 0x18] 	       464	exprep.c	FUNCTION_4	SWITCH_1	IF_10
0x400024c	          0x83f808	                              cmp eax, 8	       464	exprep.c	FUNCTION_4	SWITCH_1	IF_10
0x400024f	            0x7610	                           jbe 0x4000261	       464	exprep.c	FUNCTION_4	SWITCH_1	IF_10
0x4000251	          0x83c007	                              add eax, 7	       465	exprep.c	FUNCTION_4	SWITCH_1	IF_10
0x4000254	          0xc1e803	                              shr eax, 3	       465	exprep.c	FUNCTION_4	SWITCH_1	IF_10
0x4000257	      0x3dff000000	                           cmp eax, 0xff	       471	exprep.c	FUNCTION_4	SWITCH_1	IF_10	IF_11
0x400025c	            0x7703	                            ja 0x4000261	       471	exprep.c	FUNCTION_4	SWITCH_1	IF_10	IF_11
0x400025e	          0x88430f	                mov byte [rbx + 0xf], al	       472	exprep.c	FUNCTION_4	SWITCH_1	IF_10	IF_11
0x4000261	      0xe800000000	                          call 0x4000266	       478	exprep.c	FUNCTION_4	SWITCH_1	CALL_20
0x4000266	      0xe9bc000000	                           jmp 0x4000327	       486	exprep.c	FUNCTION_4	SWITCH_1
0x400026b	          0x8b4530	            mov eax, dword [rbp + 0x30] 	       490	exprep.c	FUNCTION_4	SWITCH_1
0x400026e	          0x894320	             mov dword [rbx + 0x20], eax	       490	exprep.c	FUNCTION_4	SWITCH_1
0x4000271	        0x488b7d00	                    mov rdi, qword [rbp]	       492	exprep.c	FUNCTION_4	SWITCH_1	CALL_22
0x4000275	      0xe800000000	                          call 0x400027a	       492	exprep.c	FUNCTION_4	SWITCH_1	CALL_22
0x400027a	        0x48894328	             mov qword [rbx + 0x28], rax	       491	exprep.c	FUNCTION_4	SWITCH_1
0x400027e	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       494	exprep.c	FUNCTION_4	SWITCH_1	CALL_23
0x4000282	      0xe800000000	                          call 0x4000287	       494	exprep.c	FUNCTION_4	SWITCH_1	CALL_23
0x4000287	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       498	exprep.c	FUNCTION_4	SWITCH_1	CALL_24
0x400028b	        0x48894330	             mov qword [rbx + 0x30], rax	       493	exprep.c	FUNCTION_4	SWITCH_1
0x400028f	      0xe800000000	                          call 0x4000294	       498	exprep.c	FUNCTION_4	SWITCH_1	CALL_24
0x4000294	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	       499	exprep.c	FUNCTION_4	SWITCH_1	CALL_25
0x4000298	      0xe800000000	                          call 0x400029d	       499	exprep.c	FUNCTION_4	SWITCH_1	CALL_25
0x400029d	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	       517	exprep.c	FUNCTION_4	SWITCH_1
0x40002a1	          0x488b03	                    mov rax, qword [rbx]	       514	exprep.c	FUNCTION_4	SWITCH_1
0x40002a4	        0x488b5240	            mov rdx, qword [rdx + 0x40] 	       517	exprep.c	FUNCTION_4	SWITCH_1
0x40002a8	        0x48895028	             mov qword [rax + 0x28], rdx	       515	exprep.c	FUNCTION_4	SWITCH_1
0x40002ac	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	       520	exprep.c	FUNCTION_4	SWITCH_1
0x40002b0	          0x8b5248	            mov edx, dword [rdx + 0x48] 	       520	exprep.c	FUNCTION_4	SWITCH_1
0x40002b3	          0x895030	             mov dword [rax + 0x30], edx	       518	exprep.c	FUNCTION_4	SWITCH_1
0x40002b6	            0xeb6f	                           jmp 0x4000327	       522	exprep.c	FUNCTION_4	SWITCH_1
0x40002b8	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       529	exprep.c	FUNCTION_4	SWITCH_1	CALL_29
0x40002bc	      0xe800000000	                          call 0x40002c1	       529	exprep.c	FUNCTION_4	SWITCH_1	CALL_29
0x40002c1	        0x48894328	             mov qword [rbx + 0x28], rax	       528	exprep.c	FUNCTION_4	SWITCH_1
0x40002c5	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       531	exprep.c	FUNCTION_4	SWITCH_1	CALL_30
0x40002c9	      0xe800000000	                          call 0x40002ce	       531	exprep.c	FUNCTION_4	SWITCH_1	CALL_30
0x40002ce	          0x4885c0	                           test rax, rax	       533	exprep.c	FUNCTION_4	SWITCH_1	IF_12
0x40002d1	        0x48894330	             mov qword [rbx + 0x30], rax	       530	exprep.c	FUNCTION_4	SWITCH_1
0x40002d5	            0x7407	                            je 0x40002de	       533	exprep.c	FUNCTION_4	SWITCH_1	IF_12
0x40002d7	      0x48837b2800	               cmp qword [rbx + 0x28], 0	       534	exprep.c	FUNCTION_4	SWITCH_1	IF_12
0x40002dc	            0x7527	                           jne 0x4000305	       534	exprep.c	FUNCTION_4	SWITCH_1	IF_12
0x40002de	    0x48c7c2000000	                              mov rdx, 0	       535	exprep.c	FUNCTION_4	SWITCH_1	IF_12	CALL_31
0x40002e5	      0xbe18020000	                          mov esi, 0x218	       535	exprep.c	FUNCTION_4	SWITCH_1	IF_12	CALL_31
0x40002ea	    0x48c7c7000000	                              mov rdi, 0	       535	exprep.c	FUNCTION_4	SWITCH_1	IF_12	CALL_31
0x40002f1	      0xe800000000	                          call 0x40002f6	       535	exprep.c	FUNCTION_4	SWITCH_1	IF_12	CALL_31
0x40002f6	          0x4889df	                            mov rdi, rbx	       537	exprep.c	FUNCTION_4	SWITCH_1	IF_12	CALL_32
0x40002f9	      0xe800000000	                          call 0x40002fe	       537	exprep.c	FUNCTION_4	SWITCH_1	IF_12	CALL_32
0x40002fe	      0xb80f300000	                         mov eax, 0x300f	       538	exprep.c	FUNCTION_4	SWITCH_1	IF_12	CALL_33
0x4000303	            0xeb45	                           jmp 0x400034a	       538	exprep.c	FUNCTION_4	SWITCH_1	IF_12	CALL_33
0x4000305	          0x4889c7	                            mov rdi, rax	       543	exprep.c	FUNCTION_4	SWITCH_1	CALL_34
0x4000308	      0xe800000000	                          call 0x400030d	       543	exprep.c	FUNCTION_4	SWITCH_1	CALL_34
0x400030d	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       544	exprep.c	FUNCTION_4	SWITCH_1	CALL_35
0x4000311	      0xe800000000	                          call 0x4000316	       544	exprep.c	FUNCTION_4	SWITCH_1	CALL_35
0x4000316	         0xfb6430f	            movzx eax, byte [rbx + 0xf] 	       563	exprep.c	FUNCTION_4	SWITCH_1
0x400031a	          0x8b5534	            mov edx, dword [rbp + 0x34] 	       563	exprep.c	FUNCTION_4	SWITCH_1
0x400031d	          0xc1ea03	                              shr edx, 3	       563	exprep.c	FUNCTION_4	SWITCH_1
0x4000320	            0xf7d8	                                 neg eax	       563	exprep.c	FUNCTION_4	SWITCH_1
0x4000322	            0x21d0	                            and eax, edx	       563	exprep.c	FUNCTION_4	SWITCH_1
0x4000324	          0x894320	             mov dword [rbx + 0x20], eax	       563	exprep.c	FUNCTION_4	SWITCH_1
0x4000327	        0x488b7d08	                mov rdi, qword [rbp + 8]	       591	exprep.c	FUNCTION_4	CALL_39
0x400032b	      0xe800000000	                          call 0x4000330	       591	exprep.c	FUNCTION_4	CALL_39
0x4000330	        0x488b7d08	                mov rdi, qword [rbp + 8]	       590	exprep.c	FUNCTION_4
0x4000334	            0x89c2	                            mov edx, eax	       590	exprep.c	FUNCTION_4
0x4000336	          0x4889de	                            mov rsi, rbx	       590	exprep.c	FUNCTION_4
0x4000339	      0xe800000000	                          call 0x400033e	       590	exprep.c	FUNCTION_4
0x400033e	          0x4889df	                            mov rdi, rbx	       601	exprep.c	FUNCTION_4	CALL_43
0x4000341	            0x89c5	                            mov ebp, eax	       590	exprep.c	FUNCTION_4
0x4000343	      0xe800000000	                          call 0x4000348	       601	exprep.c	FUNCTION_4	CALL_43
0x4000348	            0x89e8	                            mov eax, ebp	       602	exprep.c	FUNCTION_4	CALL_44
0x400034a	              0x5b	                                 pop rbx	       603	exprep.c	FUNCTION_4
0x400034b	              0x5d	                                 pop rbp	       603	exprep.c	FUNCTION_4
0x400034c	            0x415c	                                 pop r12	       603	exprep.c	FUNCTION_4
0x400034e	            0x415d	                                 pop r13	       603	exprep.c	FUNCTION_4
0x4000350	              0xc3	                                     ret	       603	exprep.c	FUNCTION_4
