acpi_rs_convert_aml_to_resources	FOR,0:functions,0:DO,0:IF,5:ELSE,2:CALL,16:WHILE,0:SWITCH,0	58
0x4000040	            0x4155	                                push r13	        33	rslist.c	FUNCTION_1
0x4000042	            0x4154	                                push r12	        33	rslist.c	FUNCTION_1
0x4000044	          0x4d89c5	                             mov r13, r8	        33	rslist.c	FUNCTION_1
0x4000047	              0x55	                                push rbp	        33	rslist.c	FUNCTION_1
0x4000048	              0x53	                                push rbx	        33	rslist.c	FUNCTION_1
0x4000049	          0x4989fc	                            mov r12, rdi	        33	rslist.c	FUNCTION_1
0x400004c	          0x498b28	                     mov rbp, qword [r8]	        47	rslist.c	FUNCTION_1
0x400004f	            0x89cb	                            mov ebx, ecx	        33	rslist.c	FUNCTION_1
0x4000051	        0x40f6c507	                             test bpl, 7	        48	rslist.c	FUNCTION_1	IF_1	CALL_3
0x4000055	            0x741b	                            je 0x4000072	        48	rslist.c	FUNCTION_1	IF_1	CALL_3
0x4000057	          0x4889e9	                            mov rcx, rbp	        49	rslist.c	FUNCTION_1	IF_1	CALL_4
0x400005a	    0x48c7c2000000	                              mov rdx, 0	        49	rslist.c	FUNCTION_1	IF_1	CALL_4
0x4000061	      0xbe32000000	                           mov esi, 0x32	        49	rslist.c	FUNCTION_1	IF_1	CALL_4
0x4000066	    0x48c7c7000000	                              mov rdi, 0	        49	rslist.c	FUNCTION_1	IF_1	CALL_4
0x400006d	      0xe800000000	                          call 0x4000072	        49	rslist.c	FUNCTION_1	IF_1	CALL_4
0x4000072	          0x4c89e7	                            mov rdi, r12	        57	rslist.c	FUNCTION_1	IF_2	CALL_6
0x4000075	      0xe800000000	                          call 0x400007a	        57	rslist.c	FUNCTION_1	IF_2	CALL_6
0x400007a	            0x3c8e	                            cmp al, 0x8e	        57	rslist.c	FUNCTION_1	IF_2	CALL_6
0x400007c	            0x7514	                           jne 0x4000092	        57	rslist.c	FUNCTION_1	IF_2	CALL_6
0x400007e	    0x410fb6442405	               movzx eax, byte [r12 + 5]	        58	rslist.c	FUNCTION_1	IF_2	IF_3
0x4000084	            0x3c03	                               cmp al, 3	        58	rslist.c	FUNCTION_1	IF_2	IF_3
0x4000086	            0x771a	                            ja 0x40000a2	        58	rslist.c	FUNCTION_1	IF_2	IF_3
0x4000088	    0x488b14c50000	                  mov rdx, qword [rax*8]	        64	rslist.c	FUNCTION_1	IF_2	ELSE_1
0x4000090	            0xeb0b	                           jmp 0x400009d	        64	rslist.c	FUNCTION_1	IF_2	ELSE_1
0x4000092	           0xfb6c3	                           movzx eax, bl	        69	rslist.c	FUNCTION_1	ELSE_2
0x4000095	    0x488b14c50000	                  mov rdx, qword [rax*8]	        69	rslist.c	FUNCTION_1	ELSE_2
0x400009d	          0x4885d2	                           test rdx, rdx	        73	rslist.c	FUNCTION_1	IF_4
0x40000a0	            0x7522	                           jne 0x40000c4	        73	rslist.c	FUNCTION_1	IF_4
0x40000a2	           0xfb6cb	                           movzx ecx, bl	        74	rslist.c	FUNCTION_1	IF_4	CALL_7
0x40000a5	    0x48c7c2000000	                              mov rdx, 0	        74	rslist.c	FUNCTION_1	IF_4	CALL_7
0x40000ac	      0xbe4c000000	                           mov esi, 0x4c	        74	rslist.c	FUNCTION_1	IF_4	CALL_7
0x40000b1	    0x48c7c7000000	                              mov rdi, 0	        74	rslist.c	FUNCTION_1	IF_4	CALL_7
0x40000b8	      0xe800000000	                          call 0x40000bd	        74	rslist.c	FUNCTION_1	IF_4	CALL_7
0x40000bd	      0xb817300000	                         mov eax, 0x3017	        77	rslist.c	FUNCTION_1	IF_4	CALL_8
0x40000c2	            0xeb40	                           jmp 0x4000104	        77	rslist.c	FUNCTION_1	IF_4	CALL_8
0x40000c4	          0x4c89e6	                            mov rsi, r12	        82	rslist.c	FUNCTION_1
0x40000c7	          0x4889ef	                            mov rdi, rbp	        82	rslist.c	FUNCTION_1
0x40000ca	      0xe800000000	                          call 0x40000cf	        82	rslist.c	FUNCTION_1
0x40000cf	            0x85c0	                           test eax, eax	        85	rslist.c	FUNCTION_1	IF_5	CALL_10
0x40000d1	            0x89c3	                            mov ebx, eax	        82	rslist.c	FUNCTION_1
0x40000d3	            0x7423	                            je 0x40000f8	        85	rslist.c	FUNCTION_1	IF_5	CALL_10
0x40000d5	      0x450fb60424	                   movzx r8d, byte [r12]	        86	rslist.c	FUNCTION_1	IF_5	CALL_11
0x40000da	            0x89c2	                            mov edx, eax	        86	rslist.c	FUNCTION_1	IF_5	CALL_11
0x40000dc	    0x48c7c1000000	                              mov rcx, 0	        86	rslist.c	FUNCTION_1	IF_5	CALL_11
0x40000e3	      0xbe58000000	                           mov esi, 0x58	        86	rslist.c	FUNCTION_1	IF_5	CALL_11
0x40000e8	    0x48c7c7000000	                              mov rdi, 0	        86	rslist.c	FUNCTION_1	IF_5	CALL_11
0x40000ef	      0xe800000000	                          call 0x40000f4	        86	rslist.c	FUNCTION_1	IF_5	CALL_11
0x40000f4	            0x89d8	                            mov eax, ebx	        89	rslist.c	FUNCTION_1	IF_5	CALL_12
0x40000f6	            0xeb0c	                           jmp 0x4000104	        89	rslist.c	FUNCTION_1	IF_5	CALL_12
0x40000f8	          0x8b4504	                mov eax, dword [rbp + 4]	        99	rslist.c	FUNCTION_1	CALL_15
0x40000fb	          0x4801c5	                            add rbp, rax	        99	rslist.c	FUNCTION_1	CALL_15
0x40000fe	            0x31c0	                            xor eax, eax	       100	rslist.c	FUNCTION_1	CALL_16
0x4000100	        0x49896d00	                    mov qword [r13], rbp	        99	rslist.c	FUNCTION_1	CALL_15
0x4000104	              0x5b	                                 pop rbx	       101	rslist.c	FUNCTION_1
0x4000105	              0x5d	                                 pop rbp	       101	rslist.c	FUNCTION_1
0x4000106	            0x415c	                                 pop r12	       101	rslist.c	FUNCTION_1
0x4000108	            0x415d	                                 pop r13	       101	rslist.c	FUNCTION_1
0x400010a	              0xc3	                                     ret	       101	rslist.c	FUNCTION_1
acpi_rs_convert_resources_to_aml	FOR,0:functions,0:DO,0:IF,8:ELSE,2:CALL,20:WHILE,1:SWITCH,0	80
0x400010b	            0x4155	                                push r13	       125	rslist.c	FUNCTION_2
0x400010d	            0x4154	                                push r12	       125	rslist.c	FUNCTION_2
0x400010f	        0x4c8d2432	                    lea r12, [rdx + rsi]	       127	rslist.c	FUNCTION_2
0x4000113	              0x55	                                push rbp	       125	rslist.c	FUNCTION_2
0x4000114	          0x4889d5	                            mov rbp, rdx	       125	rslist.c	FUNCTION_2
0x4000117	              0x53	                                push rbx	       125	rslist.c	FUNCTION_2
0x4000118	          0x4889fb	                            mov rbx, rdi	       125	rslist.c	FUNCTION_2
0x400011b	          0x4c39e5	                            cmp rbp, r12	       135	rslist.c	FUNCTION_2	WHILE_1
0x400011e	     0xf83fa000000	                           jae 0x400021e	       135	rslist.c	FUNCTION_2	WHILE_1
0x4000124	            0x8b0b	                    mov ecx, dword [rbx]	       139	rslist.c	FUNCTION_2	WHILE_1	IF_1
0x4000126	          0x83f918	                           cmp ecx, 0x18	       139	rslist.c	FUNCTION_2	WHILE_1	IF_1
0x4000129	            0x7622	                           jbe 0x400014d	       139	rslist.c	FUNCTION_2	WHILE_1	IF_1
0x400012b	    0x48c7c2000000	                              mov rdx, 0	       140	rslist.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x4000132	      0xbe8e000000	                           mov esi, 0x8e	       140	rslist.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x4000137	    0x48c7c7000000	                              mov rdi, 0	       140	rslist.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x400013e	      0xe800000000	                          call 0x4000143	       140	rslist.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x4000143	      0xb804100000	                         mov eax, 0x1004	       143	rslist.c	FUNCTION_2	WHILE_1	IF_1	CALL_3
0x4000148	      0xe9da000000	                           jmp 0x4000227	       143	rslist.c	FUNCTION_2	WHILE_1	IF_1	CALL_3
0x400014d	        0x837b0400	                  cmp dword [rbx + 4], 0	       148	rslist.c	FUNCTION_2	WHILE_1	IF_2
0x4000151	            0x7522	                           jne 0x4000175	       148	rslist.c	FUNCTION_2	WHILE_1	IF_2
0x4000153	    0x48c7c2000000	                              mov rdx, 0	       149	rslist.c	FUNCTION_2	WHILE_1	IF_2	CALL_4
0x400015a	      0xbe96000000	                           mov esi, 0x96	       149	rslist.c	FUNCTION_2	WHILE_1	IF_2	CALL_4
0x400015f	    0x48c7c7000000	                              mov rdi, 0	       149	rslist.c	FUNCTION_2	WHILE_1	IF_2	CALL_4
0x4000166	      0xe800000000	                          call 0x400016b	       149	rslist.c	FUNCTION_2	WHILE_1	IF_2	CALL_4
0x400016b	      0xb81f300000	                         mov eax, 0x301f	       151	rslist.c	FUNCTION_2	WHILE_1	IF_2	CALL_5
0x4000170	      0xe9b2000000	                           jmp 0x4000227	       151	rslist.c	FUNCTION_2	WHILE_1	IF_2	CALL_5
0x4000175	          0x83f913	                           cmp ecx, 0x13	       156	rslist.c	FUNCTION_2	WHILE_1	IF_3
0x4000178	            0x7534	                           jne 0x40001ae	       156	rslist.c	FUNCTION_2	WHILE_1	IF_3
0x400017a	         0xfb64309	               movzx eax, byte [rbx + 9]	       157	rslist.c	FUNCTION_2	WHILE_1	IF_3	IF_4
0x400017e	            0x3c03	                               cmp al, 3	       157	rslist.c	FUNCTION_2	WHILE_1	IF_3	IF_4
0x4000180	            0x7622	                           jbe 0x40001a4	       157	rslist.c	FUNCTION_2	WHILE_1	IF_3	IF_4
0x4000182	    0x48c7c2000000	                              mov rdx, 0	       173	rslist.c	FUNCTION_2	WHILE_1	IF_5	CALL_6
0x4000189	      0xbeaf000000	                           mov esi, 0xaf	       173	rslist.c	FUNCTION_2	WHILE_1	IF_5	CALL_6
0x400018e	    0x48c7c7000000	                              mov rdi, 0	       173	rslist.c	FUNCTION_2	WHILE_1	IF_5	CALL_6
0x4000195	      0xe800000000	                          call 0x400019a	       173	rslist.c	FUNCTION_2	WHILE_1	IF_5	CALL_6
0x400019a	      0xb817300000	                         mov eax, 0x3017	       176	rslist.c	FUNCTION_2	WHILE_1	IF_5	CALL_7
0x400019f	      0xe983000000	                           jmp 0x4000227	       176	rslist.c	FUNCTION_2	WHILE_1	IF_5	CALL_7
0x40001a4	    0x488b14c50000	                  mov rdx, qword [rax*8]	       163	rslist.c	FUNCTION_2	WHILE_1	IF_3	ELSE_1
0x40001ac	            0xeb0a	                           jmp 0x40001b8	       163	rslist.c	FUNCTION_2	WHILE_1	IF_3	ELSE_1
0x40001ae	            0x89c8	                            mov eax, ecx	       168	rslist.c	FUNCTION_2	WHILE_1	ELSE_2
0x40001b0	    0x488b14c50000	                  mov rdx, qword [rax*8]	       168	rslist.c	FUNCTION_2	WHILE_1	ELSE_2
0x40001b8	          0x4885d2	                           test rdx, rdx	       172	rslist.c	FUNCTION_2	WHILE_1	IF_5
0x40001bb	            0x74c5	                            je 0x4000182	       172	rslist.c	FUNCTION_2	WHILE_1	IF_5
0x40001bd	          0x4889ee	                            mov rsi, rbp	       179	rslist.c	FUNCTION_2	WHILE_1	CALL_8
0x40001c0	          0x4889df	                            mov rdi, rbx	       179	rslist.c	FUNCTION_2	WHILE_1	CALL_8
0x40001c3	      0xe800000000	                          call 0x40001c8	       179	rslist.c	FUNCTION_2	WHILE_1	CALL_8
0x40001c8	            0x85c0	                           test eax, eax	       184	rslist.c	FUNCTION_2	WHILE_1	IF_6	CALL_10
0x40001ca	          0x4189c5	                           mov r13d, eax	       179	rslist.c	FUNCTION_2	WHILE_1	CALL_8
0x40001cd	            0x7422	                            je 0x40001f1	       184	rslist.c	FUNCTION_2	WHILE_1	IF_6	CALL_10
0x40001cf	          0x448b03	                    mov r8d, dword [rbx]	       185	rslist.c	FUNCTION_2	WHILE_1	IF_6	CALL_11
0x40001d2	            0x89c2	                            mov edx, eax	       185	rslist.c	FUNCTION_2	WHILE_1	IF_6	CALL_11
0x40001d4	    0x48c7c1000000	                              mov rcx, 0	       185	rslist.c	FUNCTION_2	WHILE_1	IF_6	CALL_11
0x40001db	      0xbebb000000	                           mov esi, 0xbb	       185	rslist.c	FUNCTION_2	WHILE_1	IF_6	CALL_11
0x40001e0	    0x48c7c7000000	                              mov rdi, 0	       185	rslist.c	FUNCTION_2	WHILE_1	IF_6	CALL_11
0x40001e7	      0xe800000000	                          call 0x40001ec	       185	rslist.c	FUNCTION_2	WHILE_1	IF_6	CALL_11
0x40001ec	          0x4489e8	                           mov eax, r13d	       179	rslist.c	FUNCTION_2	WHILE_1	CALL_8
0x40001ef	            0xeb36	                           jmp 0x4000227	       188	rslist.c	FUNCTION_2	WHILE_1	IF_6	CALL_12
0x40001f1	            0x31d2	                            xor edx, edx	       193	rslist.c	FUNCTION_2	WHILE_1
0x40001f3	            0x31ff	                            xor edi, edi	       193	rslist.c	FUNCTION_2	WHILE_1
0x40001f5	          0x4889ee	                            mov rsi, rbp	       193	rslist.c	FUNCTION_2	WHILE_1
0x40001f8	      0xe800000000	                          call 0x40001fd	       193	rslist.c	FUNCTION_2	WHILE_1
0x40001fd	            0x85c0	                           test eax, eax	       197	rslist.c	FUNCTION_2	WHILE_1	IF_7	CALL_15
0x40001ff	            0x7526	                           jne 0x4000227	       197	rslist.c	FUNCTION_2	WHILE_1	IF_7	CALL_15
0x4000201	          0x833b07	                      cmp dword [rbx], 7	       203	rslist.c	FUNCTION_2	WHILE_1	IF_8
0x4000204	            0x741f	                            je 0x4000225	       203	rslist.c	FUNCTION_2	WHILE_1	IF_8
0x4000206	          0x4889ef	                            mov rdi, rbp	       214	rslist.c	FUNCTION_2	WHILE_1	CALL_18
0x4000209	      0xe800000000	                          call 0x400020e	       214	rslist.c	FUNCTION_2	WHILE_1	CALL_18
0x400020e	            0x89c0	                            mov eax, eax	       214	rslist.c	FUNCTION_2	WHILE_1	CALL_18
0x4000210	          0x4801c5	                            add rbp, rax	       214	rslist.c	FUNCTION_2	WHILE_1	CALL_18
0x4000213	          0x8b4304	                mov eax, dword [rbx + 4]	       218	rslist.c	FUNCTION_2	WHILE_1	CALL_19
0x4000216	          0x4801c3	                            add rbx, rax	       218	rslist.c	FUNCTION_2	WHILE_1	CALL_19
0x4000219	      0xe9fdfeffff	                           jmp 0x400011b	       218	rslist.c	FUNCTION_2	WHILE_1	CALL_19
0x400021e	      0xb81c300000	                         mov eax, 0x301c	       223	rslist.c	FUNCTION_2	CALL_20
0x4000223	            0xeb02	                           jmp 0x4000227	       223	rslist.c	FUNCTION_2	CALL_20
0x4000225	            0x31c0	                            xor eax, eax	       207	rslist.c	FUNCTION_2	WHILE_1	IF_8	CALL_17
0x4000227	              0x5b	                                 pop rbx	       224	rslist.c	FUNCTION_2
0x4000228	              0x5d	                                 pop rbp	       224	rslist.c	FUNCTION_2
0x4000229	            0x415c	                                 pop r12	       224	rslist.c	FUNCTION_2
0x400022b	            0x415d	                                 pop r13	       224	rslist.c	FUNCTION_2
0x400022d	              0xc3	                                     ret	       224	rslist.c	FUNCTION_2
