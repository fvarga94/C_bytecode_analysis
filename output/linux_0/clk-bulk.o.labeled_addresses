clk_bulk_enable	DO,0:SWITCH,0:CALL,3:functions,0:WHILE,0:FOR,1:ELSE,0:IF,1	44
0x4000230	            0x85ff	                           test edi, edi	       142	clk-bulk.c	FUNCTION_6	FOR_1
0x4000232	            0x7e3a	                           jle 0x400026e	       142	clk-bulk.c	FUNCTION_6	FOR_1
0x4000234	            0x4156	                                push r14	       138	clk-bulk.c	FUNCTION_6
0x4000236	          0x4989f6	                            mov r14, rsi	       138	clk-bulk.c	FUNCTION_6
0x4000239	            0x4155	                                push r13	       138	clk-bulk.c	FUNCTION_6
0x400023b	          0x4189fd	                           mov r13d, edi	       138	clk-bulk.c	FUNCTION_6
0x400023e	            0x4154	                                push r12	       138	clk-bulk.c	FUNCTION_6
0x4000240	              0x55	                                push rbp	       138	clk-bulk.c	FUNCTION_6
0x4000241	          0x4889f5	                            mov rbp, rsi	       138	clk-bulk.c	FUNCTION_6
0x4000244	              0x53	                                push rbx	       138	clk-bulk.c	FUNCTION_6
0x4000245	            0x31db	                            xor ebx, ebx	       138	clk-bulk.c	FUNCTION_6
0x4000247	        0x488b7d08	                mov rdi, qword [rbp + 8]	       143	clk-bulk.c	FUNCTION_6	FOR_1	CALL_1
0x400024b	      0xe800000000	                          call 0x4000250	       143	clk-bulk.c	FUNCTION_6	FOR_1	CALL_1
0x4000250	            0x85c0	                           test eax, eax	       144	clk-bulk.c	FUNCTION_6	FOR_1	IF_1
0x4000252	          0x4189c4	                           mov r12d, eax	       143	clk-bulk.c	FUNCTION_6	FOR_1	CALL_1
0x4000255	            0x751a	                           jne 0x4000271	       144	clk-bulk.c	FUNCTION_6	FOR_1	IF_1
0x4000257	          0x83c301	                              add ebx, 1	       142	clk-bulk.c	FUNCTION_6	FOR_1
0x400025a	        0x4883c510	                           add rbp, 0x10	       142	clk-bulk.c	FUNCTION_6	FOR_1
0x400025e	          0x4139dd	                           cmp r13d, ebx	       142	clk-bulk.c	FUNCTION_6	FOR_1
0x4000261	            0x75e4	                           jne 0x4000247	       142	clk-bulk.c	FUNCTION_6	FOR_1
0x4000263	            0x31c0	                            xor eax, eax	       151	clk-bulk.c	FUNCTION_6
0x4000265	              0x5b	                                 pop rbx	       157	clk-bulk.c	FUNCTION_6
0x4000266	              0x5d	                                 pop rbp	       157	clk-bulk.c	FUNCTION_6
0x4000267	            0x415c	                                 pop r12	       157	clk-bulk.c	FUNCTION_6
0x4000269	            0x415d	                                 pop r13	       157	clk-bulk.c	FUNCTION_6
0x400026b	            0x415e	                                 pop r14	       157	clk-bulk.c	FUNCTION_6
0x400026d	              0xc3	                                     ret	       157	clk-bulk.c	FUNCTION_6
0x400026e	            0x31c0	                            xor eax, eax	       151	clk-bulk.c	FUNCTION_6
0x4000270	              0xc3	                                     ret	       157	clk-bulk.c	FUNCTION_6
0x4000271	        0x488b7500	                    mov rsi, qword [rbp]	       145	clk-bulk.c	FUNCTION_6	FOR_1	IF_1	CALL_2
0x4000275	            0x89c2	                            mov edx, eax	       145	clk-bulk.c	FUNCTION_6	FOR_1	IF_1	CALL_2
0x4000277	    0x48c7c7000000	                              mov rdi, 0	       145	clk-bulk.c	FUNCTION_6	FOR_1	IF_1	CALL_2
0x400027e	      0xe800000000	                          call 0x4000283	       145	clk-bulk.c	FUNCTION_6	FOR_1	IF_1	CALL_2
0x4000283	          0x83eb01	                              sub ebx, 1	       124	clk-bulk.c	FUNCTION_5	WHILE_1
0x4000286	            0x7819	                            js 0x40002a1	       124	clk-bulk.c	FUNCTION_5	WHILE_1
0x4000288	          0x4863c3	                         movsxd rax, ebx	       125	clk-bulk.c	FUNCTION_5	CALL_1
0x400028b	          0x83eb01	                              sub ebx, 1	       124	clk-bulk.c	FUNCTION_5	WHILE_1
0x400028e	        0x48c1e004	                              shl rax, 4	       125	clk-bulk.c	FUNCTION_5	CALL_1
0x4000292	      0x498b7c0608	         mov rdi, qword [r14 + rax + 8] 	       125	clk-bulk.c	FUNCTION_5	CALL_1
0x4000297	      0xe800000000	                          call 0x400029c	       125	clk-bulk.c	FUNCTION_5	CALL_1
0x400029c	          0x83fbff	             cmp ebx, 0xffffffffffffffff	       124	clk-bulk.c	FUNCTION_5	WHILE_1
0x400029f	            0x75e7	                           jne 0x4000288	       124	clk-bulk.c	FUNCTION_5	WHILE_1
0x40002a1	          0x4489e0	                           mov eax, r12d	       143	clk-bulk.c	FUNCTION_6	FOR_1	CALL_1
0x40002a4	            0xebbf	                           jmp 0x4000265	       143	clk-bulk.c	FUNCTION_6	FOR_1	CALL_1
clk_bulk_get	DO,0:SWITCH,0:CALL,5:functions,0:WHILE,0:FOR,2:ELSE,0:IF,1	68
0x4000080	            0x85f6	                           test esi, esi	        38	clk-bulk.c	FUNCTION_2	FOR_1
0x4000082	     0xf8ec1000000	                           jle 0x4000149	        38	clk-bulk.c	FUNCTION_2	FOR_1
0x4000088	          0x8d4eff	                      lea ecx, [rsi - 1]	        38	clk-bulk.c	FUNCTION_2	FOR_1
0x400008b	        0x488d4208	                      lea rax, [rdx + 8]	        38	clk-bulk.c	FUNCTION_2	FOR_1
0x400008f	        0x48c1e104	                              shl rcx, 4	        38	clk-bulk.c	FUNCTION_2	FOR_1
0x4000093	      0x488d4c0a18	            lea rcx, [rdx + rcx + 0x18] 	        38	clk-bulk.c	FUNCTION_2	FOR_1
0x4000098	    0x48c700000000	                      mov qword [rax], 0	        39	clk-bulk.c	FUNCTION_2	FOR_1
0x400009f	        0x4883c010	                           add rax, 0x10	        39	clk-bulk.c	FUNCTION_2	FOR_1
0x40000a3	          0x4839c8	                            cmp rax, rcx	        38	clk-bulk.c	FUNCTION_2	FOR_1
0x40000a6	            0x75f0	                           jne 0x4000098	        38	clk-bulk.c	FUNCTION_2	FOR_1
0x40000a8	            0x4157	                                push r15	        34	clk-bulk.c	FUNCTION_2
0x40000aa	          0x4989ff	                            mov r15, rdi	        34	clk-bulk.c	FUNCTION_2
0x40000ad	            0x4156	                                push r14	        34	clk-bulk.c	FUNCTION_2
0x40000af	          0x4189f6	                           mov r14d, esi	        34	clk-bulk.c	FUNCTION_2
0x40000b2	            0x4155	                                push r13	        34	clk-bulk.c	FUNCTION_2
0x40000b4	            0x4154	                                push r12	        34	clk-bulk.c	FUNCTION_2
0x40000b6	          0x4989d4	                            mov r12, rdx	        34	clk-bulk.c	FUNCTION_2
0x40000b9	              0x55	                                push rbp	        34	clk-bulk.c	FUNCTION_2
0x40000ba	          0x4889d5	                            mov rbp, rdx	        34	clk-bulk.c	FUNCTION_2
0x40000bd	              0x53	                                push rbx	        34	clk-bulk.c	FUNCTION_2
0x40000be	            0x31db	                            xor ebx, ebx	        38	clk-bulk.c	FUNCTION_2	FOR_1
0x40000c0	            0xeb0c	                           jmp 0x40000ce	        38	clk-bulk.c	FUNCTION_2	FOR_1
0x40000c2	          0x83c301	                              add ebx, 1	        41	clk-bulk.c	FUNCTION_2	FOR_2
0x40000c5	        0x4883c510	                           add rbp, 0x10	        41	clk-bulk.c	FUNCTION_2	FOR_2
0x40000c9	          0x4139de	                           cmp r14d, ebx	        41	clk-bulk.c	FUNCTION_2	FOR_2
0x40000cc	            0x746e	                            je 0x400013c	        41	clk-bulk.c	FUNCTION_2	FOR_2
0x40000ce	        0x488b7500	                    mov rsi, qword [rbp]	        42	clk-bulk.c	FUNCTION_2	FOR_2	CALL_1
0x40000d2	          0x4c89ff	                            mov rdi, r15	        42	clk-bulk.c	FUNCTION_2	FOR_2	CALL_1
0x40000d5	      0xe800000000	                          call 0x40000da	        42	clk-bulk.c	FUNCTION_2	FOR_2	CALL_1
0x40000da	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	        43	clk-bulk.c	FUNCTION_2	FOR_2	IF_1	CALL_2
0x40000e0	          0x4989c5	                            mov r13, rax	        42	clk-bulk.c	FUNCTION_2	FOR_2	CALL_1
0x40000e3	        0x48894508	                mov qword [rbp + 8], rax	        42	clk-bulk.c	FUNCTION_2	FOR_2	CALL_1
0x40000e7	            0x76d9	                           jbe 0x40000c2	        43	clk-bulk.c	FUNCTION_2	FOR_2	IF_1	CALL_2
0x40000e9	        0x488b5500	                    mov rdx, qword [rbp]	        45	clk-bulk.c	FUNCTION_2	FOR_2	IF_1	CALL_4
0x40000ed	            0x89c1	                            mov ecx, eax	        45	clk-bulk.c	FUNCTION_2	FOR_2	IF_1	CALL_4
0x40000ef	    0x48c7c6000000	                              mov rsi, 0	        45	clk-bulk.c	FUNCTION_2	FOR_2	IF_1	CALL_4
0x40000f6	          0x4c89ff	                            mov rdi, r15	        45	clk-bulk.c	FUNCTION_2	FOR_2	IF_1	CALL_4
0x40000f9	      0xe800000000	                          call 0x40000fe	        45	clk-bulk.c	FUNCTION_2	FOR_2	IF_1	CALL_4
0x40000fe	          0x83eb01	                              sub ebx, 1	        25	clk-bulk.c	FUNCTION_1	WHILE_1
0x4000101	    0x48c745080000	                  mov qword [rbp + 8], 0	        47	clk-bulk.c	FUNCTION_2	FOR_2	IF_1
0x4000109	            0x7823	                            js 0x400012e	        25	clk-bulk.c	FUNCTION_1	WHILE_1
0x400010b	          0x4863eb	                         movsxd rbp, ebx	        26	clk-bulk.c	FUNCTION_1	WHILE_1	CALL_1
0x400010e	          0x83eb01	                              sub ebx, 1	        25	clk-bulk.c	FUNCTION_1	WHILE_1
0x4000111	        0x48c1e504	                              shl rbp, 4	        26	clk-bulk.c	FUNCTION_1	WHILE_1	CALL_1
0x4000115	          0x4c01e5	                            add rbp, r12	        26	clk-bulk.c	FUNCTION_1	WHILE_1	CALL_1
0x4000118	        0x488b7d08	                mov rdi, qword [rbp + 8]	        26	clk-bulk.c	FUNCTION_1	WHILE_1	CALL_1
0x400011c	      0xe800000000	                          call 0x4000121	        26	clk-bulk.c	FUNCTION_1	WHILE_1	CALL_1
0x4000121	          0x83fbff	             cmp ebx, 0xffffffffffffffff	        25	clk-bulk.c	FUNCTION_1	WHILE_1
0x4000124	    0x48c745080000	                  mov qword [rbp + 8], 0	        27	clk-bulk.c	FUNCTION_1	WHILE_1
0x400012c	            0x75dd	                           jne 0x400010b	        25	clk-bulk.c	FUNCTION_1	WHILE_1
0x400012e	              0x5b	                                 pop rbx	        58	clk-bulk.c	FUNCTION_2
0x400012f	          0x4489e8	                           mov eax, r13d	        57	clk-bulk.c	FUNCTION_2
0x4000132	              0x5d	                                 pop rbp	        58	clk-bulk.c	FUNCTION_2
0x4000133	            0x415c	                                 pop r12	        58	clk-bulk.c	FUNCTION_2
0x4000135	            0x415d	                                 pop r13	        58	clk-bulk.c	FUNCTION_2
0x4000137	            0x415e	                                 pop r14	        58	clk-bulk.c	FUNCTION_2
0x4000139	            0x415f	                                 pop r15	        58	clk-bulk.c	FUNCTION_2
0x400013b	              0xc3	                                     ret	        58	clk-bulk.c	FUNCTION_2
0x400013c	              0x5b	                                 pop rbx	        58	clk-bulk.c	FUNCTION_2
0x400013d	            0x31c0	                            xor eax, eax	        52	clk-bulk.c	FUNCTION_2
0x400013f	              0x5d	                                 pop rbp	        58	clk-bulk.c	FUNCTION_2
0x4000140	            0x415c	                                 pop r12	        58	clk-bulk.c	FUNCTION_2
0x4000142	            0x415d	                                 pop r13	        58	clk-bulk.c	FUNCTION_2
0x4000144	            0x415e	                                 pop r14	        58	clk-bulk.c	FUNCTION_2
0x4000146	            0x415f	                                 pop r15	        58	clk-bulk.c	FUNCTION_2
0x4000148	              0xc3	                                     ret	        58	clk-bulk.c	FUNCTION_2
0x4000149	            0x31c0	                            xor eax, eax	        52	clk-bulk.c	FUNCTION_2
0x400014b	              0xc3	                                     ret	        58	clk-bulk.c	FUNCTION_2
clk_bulk_prepare	DO,0:SWITCH,0:CALL,3:functions,0:WHILE,0:FOR,1:ELSE,0:IF,1	44
0x4000180	            0x85ff	                           test edi, edi	        92	clk-bulk.c	FUNCTION_4	FOR_1
0x4000182	            0x7e3a	                           jle 0x40001be	        92	clk-bulk.c	FUNCTION_4	FOR_1
0x4000184	            0x4156	                                push r14	        88	clk-bulk.c	FUNCTION_4
0x4000186	          0x4989f6	                            mov r14, rsi	        88	clk-bulk.c	FUNCTION_4
0x4000189	            0x4155	                                push r13	        88	clk-bulk.c	FUNCTION_4
0x400018b	          0x4189fd	                           mov r13d, edi	        88	clk-bulk.c	FUNCTION_4
0x400018e	            0x4154	                                push r12	        88	clk-bulk.c	FUNCTION_4
0x4000190	              0x55	                                push rbp	        88	clk-bulk.c	FUNCTION_4
0x4000191	          0x4889f5	                            mov rbp, rsi	        88	clk-bulk.c	FUNCTION_4
0x4000194	              0x53	                                push rbx	        88	clk-bulk.c	FUNCTION_4
0x4000195	            0x31db	                            xor ebx, ebx	        88	clk-bulk.c	FUNCTION_4
0x4000197	        0x488b7d08	                mov rdi, qword [rbp + 8]	        93	clk-bulk.c	FUNCTION_4	FOR_1	CALL_1
0x400019b	      0xe800000000	                          call 0x40001a0	        93	clk-bulk.c	FUNCTION_4	FOR_1	CALL_1
0x40001a0	            0x85c0	                           test eax, eax	        94	clk-bulk.c	FUNCTION_4	FOR_1	IF_1
0x40001a2	          0x4189c4	                           mov r12d, eax	        93	clk-bulk.c	FUNCTION_4	FOR_1	CALL_1
0x40001a5	            0x751a	                           jne 0x40001c1	        94	clk-bulk.c	FUNCTION_4	FOR_1	IF_1
0x40001a7	          0x83c301	                              add ebx, 1	        92	clk-bulk.c	FUNCTION_4	FOR_1
0x40001aa	        0x4883c510	                           add rbp, 0x10	        92	clk-bulk.c	FUNCTION_4	FOR_1
0x40001ae	          0x4139dd	                           cmp r13d, ebx	        92	clk-bulk.c	FUNCTION_4	FOR_1
0x40001b1	            0x75e4	                           jne 0x4000197	        92	clk-bulk.c	FUNCTION_4	FOR_1
0x40001b3	            0x31c0	                            xor eax, eax	       101	clk-bulk.c	FUNCTION_4
0x40001b5	              0x5b	                                 pop rbx	       107	clk-bulk.c	FUNCTION_4
0x40001b6	              0x5d	                                 pop rbp	       107	clk-bulk.c	FUNCTION_4
0x40001b7	            0x415c	                                 pop r12	       107	clk-bulk.c	FUNCTION_4
0x40001b9	            0x415d	                                 pop r13	       107	clk-bulk.c	FUNCTION_4
0x40001bb	            0x415e	                                 pop r14	       107	clk-bulk.c	FUNCTION_4
0x40001bd	              0xc3	                                     ret	       107	clk-bulk.c	FUNCTION_4
0x40001be	            0x31c0	                            xor eax, eax	       101	clk-bulk.c	FUNCTION_4
0x40001c0	              0xc3	                                     ret	       107	clk-bulk.c	FUNCTION_4
0x40001c1	        0x488b7500	                    mov rsi, qword [rbp]	        95	clk-bulk.c	FUNCTION_4	FOR_1	IF_1	CALL_2
0x40001c5	            0x89c2	                            mov edx, eax	        95	clk-bulk.c	FUNCTION_4	FOR_1	IF_1	CALL_2
0x40001c7	    0x48c7c7000000	                              mov rdi, 0	        95	clk-bulk.c	FUNCTION_4	FOR_1	IF_1	CALL_2
0x40001ce	      0xe800000000	                          call 0x40001d3	        95	clk-bulk.c	FUNCTION_4	FOR_1	IF_1	CALL_2
0x40001d3	          0x83eb01	                              sub ebx, 1	        73	clk-bulk.c	FUNCTION_3	WHILE_1
0x40001d6	            0x7819	                            js 0x40001f1	        73	clk-bulk.c	FUNCTION_3	WHILE_1
0x40001d8	          0x4863c3	                         movsxd rax, ebx	        74	clk-bulk.c	FUNCTION_3	CALL_1
0x40001db	          0x83eb01	                              sub ebx, 1	        73	clk-bulk.c	FUNCTION_3	WHILE_1
0x40001de	        0x48c1e004	                              shl rax, 4	        74	clk-bulk.c	FUNCTION_3	CALL_1
0x40001e2	      0x498b7c0608	         mov rdi, qword [r14 + rax + 8] 	        74	clk-bulk.c	FUNCTION_3	CALL_1
0x40001e7	      0xe800000000	                          call 0x40001ec	        74	clk-bulk.c	FUNCTION_3	CALL_1
0x40001ec	          0x83fbff	             cmp ebx, 0xffffffffffffffff	        73	clk-bulk.c	FUNCTION_3	WHILE_1
0x40001ef	            0x75e7	                           jne 0x40001d8	        73	clk-bulk.c	FUNCTION_3	WHILE_1
0x40001f1	          0x4489e0	                           mov eax, r12d	        93	clk-bulk.c	FUNCTION_4	FOR_1	CALL_1
0x40001f4	            0xebbf	                           jmp 0x40001b5	        93	clk-bulk.c	FUNCTION_4	FOR_1	CALL_1
