acpi_ex_resolve_node_to_value	DO,0:ELSE,0:CALL,42:IF,9:WHILE,0:SWITCH,2:functions,0:FOR,0	140
0x4000040	            0x4155	                                push r13	        47	exresnte.c	FUNCTION_1
0x4000042	            0x4154	                                push r12	        47	exresnte.c	FUNCTION_1
0x4000044	          0x4989fc	                            mov r12, rdi	        47	exresnte.c	FUNCTION_1
0x4000047	              0x55	                                push rbp	        47	exresnte.c	FUNCTION_1
0x4000048	              0x53	                                push rbx	        47	exresnte.c	FUNCTION_1
0x4000049	          0x4989f5	                            mov r13, rsi	        47	exresnte.c	FUNCTION_1
0x400004c	        0x4883ec18	                           sub rsp, 0x18	        47	exresnte.c	FUNCTION_1
0x4000050	          0x488b2f	                    mov rbp, qword [rdi]	        60	exresnte.c	FUNCTION_1
0x4000053	    0x65488b042528	                mov rax, qword gs:[0x28]	        47	exresnte.c	FUNCTION_1
0x400005c	      0x4889442410	             mov qword [rsp + 0x10], rax	        47	exresnte.c	FUNCTION_1
0x4000061	            0x31c0	                            xor eax, eax	        47	exresnte.c	FUNCTION_1
0x4000063	    0x48c744240800	                  mov qword [rsp + 8], 0	        50	exresnte.c	FUNCTION_1
0x400006c	          0x4889ef	                            mov rdi, rbp	        61	exresnte.c	FUNCTION_1	CALL_2
0x400006f	      0xe800000000	                          call 0x4000074	        61	exresnte.c	FUNCTION_1	CALL_2
0x4000074	          0x4889ef	                            mov rdi, rbp	        62	exresnte.c	FUNCTION_1	CALL_3
0x4000077	          0x4889c3	                            mov rbx, rax	        61	exresnte.c	FUNCTION_1	CALL_2
0x400007a	      0xe800000000	                          call 0x400007f	        62	exresnte.c	FUNCTION_1	CALL_3
0x400007f	          0x8d50eb	                   lea edx, [rax - 0x15]	        68	exresnte.c	FUNCTION_1	IF_1
0x4000082	          0x83fa01	                              cmp edx, 1	        68	exresnte.c	FUNCTION_1	IF_1
0x4000085	            0x771b	                            ja 0x40000a2	        68	exresnte.c	FUNCTION_1	IF_1
0x4000087	        0x488b6d00	                    mov rbp, qword [rbp]	        73	exresnte.c	FUNCTION_1	IF_1	CALL_6
0x400008b	          0x4889ef	                            mov rdi, rbp	        74	exresnte.c	FUNCTION_1	IF_1	CALL_7
0x400008e	      0xe800000000	                          call 0x4000093	        74	exresnte.c	FUNCTION_1	IF_1	CALL_7
0x4000093	          0x4889ef	                            mov rdi, rbp	        75	exresnte.c	FUNCTION_1	IF_1	CALL_8
0x4000096	          0x4889c3	                            mov rbx, rax	        74	exresnte.c	FUNCTION_1	IF_1	CALL_7
0x4000099	      0xe800000000	                          call 0x400009e	        75	exresnte.c	FUNCTION_1	IF_1	CALL_8
0x400009e	        0x49892c24	                    mov qword [r12], rbp	        76	exresnte.c	FUNCTION_1	IF_1
0x40000a2	          0x8d50fa	                      lea edx, [rax - 6]	        86	exresnte.c	FUNCTION_1	IF_2
0x40000a5	          0x83e2fd	                     and edx, 0xfffffffd	        86	exresnte.c	FUNCTION_1	IF_2
0x40000a8	      0xba00000000	                              mov edx, 0	        89	exresnte.c	FUNCTION_1	IF_2	CALL_9
0x40000ad	     0xf84a4010000	                            je 0x4000257	        86	exresnte.c	FUNCTION_1	IF_2
0x40000b3	          0x83f80d	                            cmp eax, 0xd	        86	exresnte.c	FUNCTION_1	IF_2
0x40000b6	     0xf849b010000	                            je 0x4000257	        86	exresnte.c	FUNCTION_1	IF_2
0x40000bc	        0xf6450a0c	              test byte [rbp + 0xa], 0xc	        87	exresnte.c	FUNCTION_1	IF_2
0x40000c0	     0xf8591010000	                           jne 0x4000257	        87	exresnte.c	FUNCTION_1	IF_2
0x40000c6	          0x4885db	                           test rbx, rbx	        92	exresnte.c	FUNCTION_1	IF_3
0x40000c9	            0x7529	                           jne 0x40000f4	        92	exresnte.c	FUNCTION_1	IF_3
0x40000cb	        0x488d4d0c	                    lea rcx, [rbp + 0xc]	        93	exresnte.c	FUNCTION_1	IF_3	CALL_10
0x40000cf	    0x48c7c2000000	                              mov rdx, 0	        93	exresnte.c	FUNCTION_1	IF_3	CALL_10
0x40000d6	          0x4989e8	                             mov r8, rbp	        93	exresnte.c	FUNCTION_1	IF_3	CALL_10
0x40000d9	      0xbe5e000000	                           mov esi, 0x5e	        93	exresnte.c	FUNCTION_1	IF_3	CALL_10
0x40000de	    0x48c7c7000000	                              mov rdi, 0	        93	exresnte.c	FUNCTION_1	IF_3	CALL_10
0x40000e5	      0xe800000000	                          call 0x40000ea	        93	exresnte.c	FUNCTION_1	IF_3	CALL_10
0x40000ea	      0xba22300000	                         mov edx, 0x3022	        95	exresnte.c	FUNCTION_1	IF_3	CALL_11
0x40000ef	      0xe963010000	                           jmp 0x4000257	        95	exresnte.c	FUNCTION_1	IF_3	CALL_11
0x40000f4	          0x83f814	                           cmp eax, 0x14	       102	exresnte.c	FUNCTION_1	SWITCH_1
0x40000f7	     0xf872c010000	                            ja 0x4000229	       102	exresnte.c	FUNCTION_1	SWITCH_1
0x40000fd	            0x89c2	                            mov edx, eax	       102	exresnte.c	FUNCTION_1	SWITCH_1
0x40000ff	    0x488b14d50000	                  mov rdx, qword [rdx*8]	       102	exresnte.c	FUNCTION_1	SWITCH_1
0x4000107	      0xe900000000	                           jmp 0x400010c	       102	exresnte.c	FUNCTION_1	SWITCH_1
0x400010c	        0x807b0904	                   cmp byte [rbx + 9], 4	       105	exresnte.c	FUNCTION_1	SWITCH_1	IF_4
0x4000110	          0x4889df	                            mov rdi, rbx	       106	exresnte.c	FUNCTION_1	SWITCH_1	IF_4	CALL_12
0x4000113	            0x7416	                            je 0x400012b	       105	exresnte.c	FUNCTION_1	SWITCH_1	IF_4
0x4000115	      0xe800000000	                          call 0x400011a	       106	exresnte.c	FUNCTION_1	SWITCH_1	IF_4	CALL_12
0x400011a	    0x48c7c2000000	                              mov rdx, 0	       106	exresnte.c	FUNCTION_1	SWITCH_1	IF_4	CALL_12
0x4000121	          0x4889c1	                            mov rcx, rax	       106	exresnte.c	FUNCTION_1	SWITCH_1	IF_4	CALL_12
0x4000124	      0xbe6b000000	                           mov esi, 0x6b	       106	exresnte.c	FUNCTION_1	SWITCH_1	IF_4	CALL_12
0x4000129	            0xeb24	                           jmp 0x400014f	       106	exresnte.c	FUNCTION_1	SWITCH_1	IF_4	CALL_12
0x400012b	      0xe800000000	                          call 0x4000130	       111	exresnte.c	FUNCTION_1	SWITCH_1	CALL_15
0x4000130	            0xeb38	                           jmp 0x400016a	       111	exresnte.c	FUNCTION_1	SWITCH_1	CALL_15
0x4000132	        0x807b0903	                   cmp byte [rbx + 9], 3	       123	exresnte.c	FUNCTION_1	SWITCH_1	IF_6
0x4000136	          0x4889df	                            mov rdi, rbx	       124	exresnte.c	FUNCTION_1	SWITCH_1	IF_6	CALL_18
0x4000139	            0x742a	                            je 0x4000165	       123	exresnte.c	FUNCTION_1	SWITCH_1	IF_6
0x400013b	      0xe800000000	                          call 0x4000140	       124	exresnte.c	FUNCTION_1	SWITCH_1	IF_6	CALL_18
0x4000140	    0x48c7c2000000	                              mov rdx, 0	       124	exresnte.c	FUNCTION_1	SWITCH_1	IF_6	CALL_18
0x4000147	          0x4889c1	                            mov rcx, rax	       124	exresnte.c	FUNCTION_1	SWITCH_1	IF_6	CALL_18
0x400014a	      0xbe7d000000	                           mov esi, 0x7d	       124	exresnte.c	FUNCTION_1	SWITCH_1	IF_6	CALL_18
0x400014f	    0x48c7c7000000	                              mov rdi, 0	       124	exresnte.c	FUNCTION_1	SWITCH_1	IF_6	CALL_18
0x4000156	      0xe800000000	                          call 0x400015b	       124	exresnte.c	FUNCTION_1	SWITCH_1	IF_6	CALL_18
0x400015b	      0xba03300000	                         mov edx, 0x3003	       126	exresnte.c	FUNCTION_1	SWITCH_1	IF_6	CALL_20
0x4000160	      0xe9f2000000	                           jmp 0x4000257	       126	exresnte.c	FUNCTION_1	SWITCH_1	IF_6	CALL_20
0x4000165	      0xe800000000	                          call 0x400016a	       129	exresnte.c	FUNCTION_1	SWITCH_1	CALL_21
0x400016a	            0x85c0	                           test eax, eax	       130	exresnte.c	FUNCTION_1	SWITCH_1	IF_7	CALL_22
0x400016c	     0xf85da000000	                           jne 0x400024c	       130	exresnte.c	FUNCTION_1	SWITCH_1	IF_7	CALL_22
0x4000172	          0x4889df	                            mov rdi, rbx	       135	exresnte.c	FUNCTION_1	SWITCH_1	IF_7	CALL_23
0x4000175	        0x89442404	                mov dword [rsp + 4], eax	       135	exresnte.c	FUNCTION_1	SWITCH_1	IF_7	CALL_23
0x4000179	      0x48895c2408	                mov qword [rsp + 8], rbx	       134	exresnte.c	FUNCTION_1	SWITCH_1	IF_7
0x400017e	      0xe800000000	                          call 0x4000183	       135	exresnte.c	FUNCTION_1	SWITCH_1	IF_7	CALL_23
0x4000183	        0x8b442404	                mov eax, dword [rsp + 4]	       135	exresnte.c	FUNCTION_1	SWITCH_1	IF_7	CALL_23
0x4000187	      0xe9c0000000	                           jmp 0x400024c	       135	exresnte.c	FUNCTION_1	SWITCH_1	IF_7	CALL_23
0x400018c	        0x807b0902	                   cmp byte [rbx + 9], 2	       141	exresnte.c	FUNCTION_1	SWITCH_1	IF_8
0x4000190	            0x7469	                            je 0x40001fb	       141	exresnte.c	FUNCTION_1	SWITCH_1	IF_8
0x4000192	          0x4889df	                            mov rdi, rbx	       142	exresnte.c	FUNCTION_1	SWITCH_1	IF_8	CALL_24
0x4000195	      0xe800000000	                          call 0x400019a	       142	exresnte.c	FUNCTION_1	SWITCH_1	IF_8	CALL_24
0x400019a	    0x48c7c2000000	                              mov rdx, 0	       142	exresnte.c	FUNCTION_1	SWITCH_1	IF_8	CALL_24
0x40001a1	          0x4889c1	                            mov rcx, rax	       142	exresnte.c	FUNCTION_1	SWITCH_1	IF_8	CALL_24
0x40001a4	      0xbe8f000000	                           mov esi, 0x8f	       142	exresnte.c	FUNCTION_1	SWITCH_1	IF_8	CALL_24
0x40001a9	            0xeba4	                           jmp 0x400014f	       142	exresnte.c	FUNCTION_1	SWITCH_1	IF_8	CALL_24
0x40001ab	        0x807b0901	                   cmp byte [rbx + 9], 1	       155	exresnte.c	FUNCTION_1	SWITCH_1	IF_9
0x40001af	            0x744a	                            je 0x40001fb	       155	exresnte.c	FUNCTION_1	SWITCH_1	IF_9
0x40001b1	          0x4889df	                            mov rdi, rbx	       156	exresnte.c	FUNCTION_1	SWITCH_1	IF_9	CALL_28
0x40001b4	      0xe800000000	                          call 0x40001b9	       156	exresnte.c	FUNCTION_1	SWITCH_1	IF_9	CALL_28
0x40001b9	    0x48c7c2000000	                              mov rdx, 0	       156	exresnte.c	FUNCTION_1	SWITCH_1	IF_9	CALL_28
0x40001c0	          0x4889c1	                            mov rcx, rax	       156	exresnte.c	FUNCTION_1	SWITCH_1	IF_9	CALL_28
0x40001c3	      0xbe9d000000	                           mov esi, 0x9d	       156	exresnte.c	FUNCTION_1	SWITCH_1	IF_9	CALL_28
0x40001c8	            0xeb85	                           jmp 0x400014f	       156	exresnte.c	FUNCTION_1	SWITCH_1	IF_9	CALL_28
0x40001ca	      0x488d542408	                      lea rdx, [rsp + 8]	       176	exresnte.c	FUNCTION_1	SWITCH_1
0x40001cf	          0x4889de	                            mov rsi, rbx	       176	exresnte.c	FUNCTION_1	SWITCH_1
0x40001d2	          0x4c89ef	                            mov rdi, r13	       176	exresnte.c	FUNCTION_1	SWITCH_1
0x40001d5	      0xe800000000	                          call 0x40001da	       176	exresnte.c	FUNCTION_1	SWITCH_1
0x40001da	            0xeb70	                           jmp 0x400024c	       179	exresnte.c	FUNCTION_1	SWITCH_1
0x40001dc	          0x4889e9	                            mov rcx, rbp	       199	exresnte.c	FUNCTION_1	SWITCH_1	CALL_35
0x40001df	    0x48c7c2000000	                              mov rdx, 0	       199	exresnte.c	FUNCTION_1	SWITCH_1	CALL_35
0x40001e6	      0xbec8000000	                           mov esi, 0xc8	       199	exresnte.c	FUNCTION_1	SWITCH_1	CALL_35
0x40001eb	      0xe95fffffff	                           jmp 0x400014f	       199	exresnte.c	FUNCTION_1	SWITCH_1	CALL_35
0x40001f0	         0xfb64b0d	            movzx ecx, byte [rbx + 0xd] 	       206	exresnte.c	FUNCTION_1	SWITCH_1	SWITCH_2
0x40001f4	          0x8d41fe	                      lea eax, [rcx - 2]	       206	exresnte.c	FUNCTION_1	SWITCH_1	SWITCH_2
0x40001f7	            0x3c02	                               cmp al, 2	       206	exresnte.c	FUNCTION_1	SWITCH_1	SWITCH_2
0x40001f9	            0x7711	                            ja 0x400020c	       206	exresnte.c	FUNCTION_1	SWITCH_1	SWITCH_2
0x40001fb	          0x4889df	                            mov rdi, rbx	       214	exresnte.c	FUNCTION_1	SWITCH_1	SWITCH_2	CALL_37
0x40001fe	      0x48895c2408	                mov qword [rsp + 8], rbx	       213	exresnte.c	FUNCTION_1	SWITCH_1	SWITCH_2
0x4000203	      0xe800000000	                          call 0x4000208	       214	exresnte.c	FUNCTION_1	SWITCH_1	SWITCH_2	CALL_37
0x4000208	            0x31c0	                            xor eax, eax	        48	exresnte.c	FUNCTION_1
0x400020a	            0xeb40	                           jmp 0x400024c	       227	exresnte.c	FUNCTION_1	SWITCH_1
0x400020c	    0x48c7c2000000	                              mov rdx, 0	       221	exresnte.c	FUNCTION_1	SWITCH_1	SWITCH_2	CALL_38
0x4000213	      0xbedf000000	                           mov esi, 0xdf	       221	exresnte.c	FUNCTION_1	SWITCH_1	SWITCH_2	CALL_38
0x4000218	    0x48c7c7000000	                              mov rdi, 0	       221	exresnte.c	FUNCTION_1	SWITCH_1	SWITCH_2	CALL_38
0x400021f	      0xe800000000	                          call 0x4000224	       221	exresnte.c	FUNCTION_1	SWITCH_1	SWITCH_2	CALL_38
0x4000224	      0xe932ffffff	                           jmp 0x400015b	       221	exresnte.c	FUNCTION_1	SWITCH_1	SWITCH_2	CALL_38
0x4000229	          0x4189c0	                            mov r8d, eax	       233	exresnte.c	FUNCTION_1	SWITCH_1	CALL_40
0x400022c	          0x4889e9	                            mov rcx, rbp	       233	exresnte.c	FUNCTION_1	SWITCH_1	CALL_40
0x400022f	    0x48c7c2000000	                              mov rdx, 0	       233	exresnte.c	FUNCTION_1	SWITCH_1	CALL_40
0x4000236	      0xbeeb000000	                           mov esi, 0xeb	       233	exresnte.c	FUNCTION_1	SWITCH_1	CALL_40
0x400023b	    0x48c7c7000000	                              mov rdi, 0	       233	exresnte.c	FUNCTION_1	SWITCH_1	CALL_40
0x4000242	      0xe800000000	                          call 0x4000247	       233	exresnte.c	FUNCTION_1	SWITCH_1	CALL_40
0x4000247	      0xe90fffffff	                           jmp 0x400015b	       233	exresnte.c	FUNCTION_1	SWITCH_1	CALL_40
0x400024c	      0x488b542408	                mov rdx, qword [rsp + 8]	       243	exresnte.c	FUNCTION_1
0x4000251	        0x49891424	                    mov qword [r12], rdx	       243	exresnte.c	FUNCTION_1
0x4000255	            0x89c2	                            mov edx, eax	       244	exresnte.c	FUNCTION_1	CALL_42
0x4000257	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       245	exresnte.c	FUNCTION_1
0x400025c	    0x654833342528	                xor rsi, qword gs:[0x28]	       245	exresnte.c	FUNCTION_1
0x4000265	            0x89d0	                            mov eax, edx	       245	exresnte.c	FUNCTION_1
0x4000267	            0x7405	                            je 0x400026e	       245	exresnte.c	FUNCTION_1
0x4000269	      0xe800000000	                          call 0x400026e	       245	exresnte.c	FUNCTION_1
0x400026e	        0x4883c418	                           add rsp, 0x18	       245	exresnte.c	FUNCTION_1
0x4000272	              0x5b	                                 pop rbx	       245	exresnte.c	FUNCTION_1
0x4000273	              0x5d	                                 pop rbp	       245	exresnte.c	FUNCTION_1
0x4000274	            0x415c	                                 pop r12	       245	exresnte.c	FUNCTION_1
0x4000276	            0x415d	                                 pop r13	       245	exresnte.c	FUNCTION_1
0x4000278	              0xc3	                                     ret	       245	exresnte.c	FUNCTION_1
