shm_exit_ns	IF,0:ELSE,0:CALL,0:WHILE,0:DO,0:FOR,0:functions,0:SWITCH,0	10
0x40013a0	    0x488db7c80100	                  lea rsi, [rdi + 0x1c8]	       130	shm.c	FUNCTION_3	CALL_2
0x40013a7	              0x53	                                push rbx	       129	shm.c	FUNCTION_3
0x40013a8	    0x48c7c2000000	                              mov rdx, 0	       130	shm.c	FUNCTION_3	CALL_2
0x40013af	          0x4889fb	                            mov rbx, rdi	       129	shm.c	FUNCTION_3
0x40013b2	      0xe800000000	                          call 0x40013b7	       130	shm.c	FUNCTION_3	CALL_2
0x40013b7	    0x488dbbf80100	                  lea rdi, [rbx + 0x1f8]	       131	shm.c	FUNCTION_3	CALL_3
0x40013be	      0xe800000000	                          call 0x40013c3	       131	shm.c	FUNCTION_3	CALL_3
0x40013c3	    0x488dbb180200	                  lea rdi, [rbx + 0x218]	       132	shm.c	FUNCTION_3	CALL_4
0x40013ca	              0x5b	                                 pop rbx	       133	shm.c	FUNCTION_3
0x40013cb	      0xe900000000	            jmp sym.shm_destroy_orphaned	       132	shm.c	FUNCTION_3	CALL_4
shm_set_policy	IF,1:ELSE,0:CALL,2:WHILE,0:DO,0:FOR,0:functions,0:SWITCH,0	9
0x4000090	    0x488b87a00000	            mov rax, qword [rdi + 0xa0] 	       434	shm.c	FUNCTION_22	CALL_1
0x4000097	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	       437	shm.c	FUNCTION_22	IF_1
0x400009e	        0x488b4018	            mov rax, qword [rax + 0x18] 	       437	shm.c	FUNCTION_22	IF_1
0x40000a2	        0x488b4060	            mov rax, qword [rax + 0x60] 	       437	shm.c	FUNCTION_22	IF_1
0x40000a6	          0x4885c0	                           test rax, rax	       437	shm.c	FUNCTION_22	IF_1
0x40000a9	            0x7405	                            je 0x40000b0	       437	shm.c	FUNCTION_22	IF_1
0x40000ab	      0xe900000000	                           jmp 0x40000b0	       438	shm.c	FUNCTION_22	CALL_2
0x40000b0	            0x31c0	                            xor eax, eax	       440	shm.c	FUNCTION_22
0x40000b2	              0xc3	                                     ret	       440	shm.c	FUNCTION_22
shm_init	IF,0:ELSE,0:CALL,1:WHILE,0:DO,0:FOR,0:functions,0:SWITCH,0	14
0x400009c	               0x0	                      add byte [rax], al	       437	shm.c	FUNCTION_22	IF_1
0x400009e	        0x488b4018	            mov rax, qword [rax + 0x18] 	       437	shm.c	FUNCTION_22	IF_1
0x40000a2	        0x488b4060	            mov rax, qword [rax + 0x60] 	       437	shm.c	FUNCTION_22	IF_1
0x40000a6	          0x4885c0	                           test rax, rax	       437	shm.c	FUNCTION_22	IF_1
0x40000a9	            0x7405	                            je 0x40000b0	       437	shm.c	FUNCTION_22	IF_1
0x40000ab	      0xe900000000	                           jmp 0x40000b0	       438	shm.c	FUNCTION_22	CALL_2
0x40000b0	            0x31c0	                            xor eax, eax	       440	shm.c	FUNCTION_22
0x40000b2	              0xc3	                                     ret	       440	shm.c	FUNCTION_22
0x40000b3	           0xf1f00	                         nop dword [rax]	       440	shm.c	FUNCTION_22
0x40000b6	              0x66	                                 invalid	       440	shm.c	FUNCTION_22
0x40000b7	              0x2e	                                 invalid	       440	shm.c	FUNCTION_22
0x40000b8	               0xf	                                 invalid	       440	shm.c	FUNCTION_22
0x40000b9	              0x1f	                                 invalid	       440	shm.c	FUNCTION_22
0x40000ba	              0x84	                                 invalid	       440	shm.c	FUNCTION_22
shm_destroy_orphaned	IF,0:ELSE,0:CALL,0:WHILE,0:DO,0:FOR,0:functions,0:SWITCH,0	17
0x40013d0	              0x55	                                push rbp	       357	shm.c	FUNCTION_18
0x40013d1	    0x488dafd00100	                  lea rbp, [rdi + 0x1d0]	       358	shm.c	FUNCTION_18	CALL_2
0x40013d8	              0x53	                                push rbx	       357	shm.c	FUNCTION_18
0x40013d9	          0x4889fb	                            mov rbx, rdi	       357	shm.c	FUNCTION_18
0x40013dc	          0x4889ef	                            mov rdi, rbp	       358	shm.c	FUNCTION_18	CALL_2
0x40013df	      0xe800000000	                          call 0x40013e4	       358	shm.c	FUNCTION_18	CALL_2
0x40013e4	    0x8b83c8010000	           mov eax, dword [rbx + 0x1c8] 	       359	shm.c	FUNCTION_18	IF_1	CALL_3
0x40013ea	            0x85c0	                           test eax, eax	       359	shm.c	FUNCTION_18	IF_1	CALL_3
0x40013ec	            0x7416	                            je 0x4001404	       359	shm.c	FUNCTION_18	IF_1	CALL_3
0x40013ee	    0x488dbbf80100	                  lea rdi, [rbx + 0x1f8]	       360	shm.c	FUNCTION_18	CALL_5
0x40013f5	          0x4889da	                            mov rdx, rbx	       360	shm.c	FUNCTION_18	CALL_5
0x40013f8	    0x48c7c6000000	                              mov rsi, 0	       360	shm.c	FUNCTION_18	CALL_5
0x40013ff	      0xe800000000	                          call 0x4001404	       360	shm.c	FUNCTION_18	CALL_5
0x4001404	          0x4889ef	                            mov rdi, rbp	       361	shm.c	FUNCTION_18	CALL_7
0x4001407	              0x5b	                                 pop rbx	       362	shm.c	FUNCTION_18
0x4001408	              0x5d	                                 pop rbp	       362	shm.c	FUNCTION_18
0x4001409	      0xe900000000	                           jmp 0x400140e	       361	shm.c	FUNCTION_18	CALL_7
shm_split	IF,1:ELSE,0:CALL,2:WHILE,0:DO,0:FOR,0:functions,0:SWITCH,0	9
0x4000060	    0x488b87a00000	            mov rax, qword [rdi + 0xa0] 	       422	shm.c	FUNCTION_21	CALL_1
0x4000067	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	       424	shm.c	FUNCTION_21	IF_1
0x400006e	        0x488b4018	            mov rax, qword [rax + 0x18] 	       424	shm.c	FUNCTION_21	IF_1
0x4000072	        0x488b4010	            mov rax, qword [rax + 0x10] 	       424	shm.c	FUNCTION_21	IF_1
0x4000076	          0x4885c0	                           test rax, rax	       424	shm.c	FUNCTION_21	IF_1
0x4000079	            0x7405	                            je 0x4000080	       424	shm.c	FUNCTION_21	IF_1
0x400007b	      0xe900000000	                           jmp 0x4000080	       425	shm.c	FUNCTION_21	CALL_2
0x4000080	            0x31c0	                            xor eax, eax	       428	shm.c	FUNCTION_21
0x4000082	              0xc3	                                     ret	       428	shm.c	FUNCTION_21
shm_release	IF,0:ELSE,0:CALL,5:WHILE,0:DO,0:FOR,0:functions,0:SWITCH,0	15
0x40002c0	              0x55	                                push rbp	       486	shm.c	FUNCTION_25
0x40002c1	              0x53	                                push rbx	       486	shm.c	FUNCTION_25
0x40002c2	          0x4889f5	                            mov rbp, rsi	       486	shm.c	FUNCTION_25
0x40002c5	    0x488b9ec80000	            mov rbx, qword [rsi + 0xc8] 	       487	shm.c	FUNCTION_25	CALL_1
0x40002cc	        0x488b7b08	                mov rdi, qword [rbx + 8]	       489	shm.c	FUNCTION_25	CALL_2
0x40002d0	      0xe800000000	                          call 0x40002d5	       489	shm.c	FUNCTION_25	CALL_2
0x40002d5	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       490	shm.c	FUNCTION_25	CALL_3
0x40002d9	      0xe800000000	                          call 0x40002de	       490	shm.c	FUNCTION_25	CALL_3
0x40002de	    0x48c785c80000	               mov qword [rbp + 0xc8], 0	       491	shm.c	FUNCTION_25	CALL_4
0x40002e9	          0x4889df	                            mov rdi, rbx	       492	shm.c	FUNCTION_25	CALL_5
0x40002ec	      0xe800000000	                          call 0x40002f1	       492	shm.c	FUNCTION_25	CALL_5
0x40002f1	            0x31c0	                            xor eax, eax	       494	shm.c	FUNCTION_25
0x40002f3	              0x5b	                                 pop rbx	       494	shm.c	FUNCTION_25
0x40002f4	              0x5d	                                 pop rbp	       494	shm.c	FUNCTION_25
0x40002f5	              0xc3	                                     ret	       494	shm.c	FUNCTION_25
shm_rcu_free	IF,0:ELSE,0:CALL,4:WHILE,0:DO,0:FOR,0:functions,0:SWITCH,0	7
0x4000190	              0x53	                                push rbx	       201	shm.c	FUNCTION_10
0x4000191	        0x488d5fc0	                   lea rbx, [rdi - 0x40]	       206	shm.c	FUNCTION_10	CALL_3
0x4000195	          0x4889df	                            mov rdi, rbx	       206	shm.c	FUNCTION_10	CALL_3
0x4000198	      0xe800000000	                          call 0x400019d	       206	shm.c	FUNCTION_10	CALL_3
0x400019d	          0x4889df	                            mov rdi, rbx	       207	shm.c	FUNCTION_10	CALL_4
0x40001a0	              0x5b	                                 pop rbx	       208	shm.c	FUNCTION_10
0x40001a1	      0xe900000000	                           jmp 0x40001a6	       207	shm.c	FUNCTION_10	CALL_4
shm_get_policy	IF,2:ELSE,1:CALL,2:WHILE,0:DO,0:FOR,0:functions,0:SWITCH,0	9
0x40000c0	    0x488b87a00000	            mov rax, qword [rdi + 0xa0] 	       446	shm.c	FUNCTION_23	CALL_1
0x40000c7	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	       449	shm.c	FUNCTION_23	IF_1
0x40000ce	        0x488b4018	            mov rax, qword [rax + 0x18] 	       449	shm.c	FUNCTION_23	IF_1
0x40000d2	        0x488b4068	            mov rax, qword [rax + 0x68] 	       449	shm.c	FUNCTION_23	IF_1
0x40000d6	          0x4885c0	                           test rax, rax	       449	shm.c	FUNCTION_23	IF_1
0x40000d9	            0x7405	                            je 0x40000e0	       449	shm.c	FUNCTION_23	IF_1
0x40000db	      0xe900000000	                           jmp 0x40000e0	       450	shm.c	FUNCTION_23	CALL_2
0x40000e0	    0x488b87b80000	            mov rax, qword [rdi + 0xb8] 	       451	shm.c	FUNCTION_23	ELSE_1	IF_2
0x40000e7	              0xc3	                                     ret	       455	shm.c	FUNCTION_23
sysvipc_shm_proc_show	IF,0:ELSE,0:CALL,11:WHILE,0:DO,0:FOR,0:functions,0:SWITCH,0	90
0x4000da0	            0x4157	                                push r15	      1676	shm.c	FUNCTION_57
0x4000da2	            0x4156	                                push r14	      1676	shm.c	FUNCTION_57
0x4000da4	            0x4155	                                push r13	      1676	shm.c	FUNCTION_57
0x4000da6	            0x4154	                                push r12	      1676	shm.c	FUNCTION_57
0x4000da8	              0x55	                                push rbp	      1676	shm.c	FUNCTION_57
0x4000da9	              0x53	                                push rbx	      1676	shm.c	FUNCTION_57
0x4000daa	          0x4889f3	                            mov rbx, rsi	      1676	shm.c	FUNCTION_57
0x4000dad	        0x4883ec58	                           sub rsp, 0x58	      1676	shm.c	FUNCTION_57
0x4000db1	    0x65488b042528	                mov rax, qword gs:[0x28]	      1676	shm.c	FUNCTION_57
0x4000dba	      0x4889442450	             mov qword [rsp + 0x50], rax	      1676	shm.c	FUNCTION_57
0x4000dbf	            0x31c0	                            xor eax, eax	      1676	shm.c	FUNCTION_57
0x4000dc1	      0x48897c2438	             mov qword [rsp + 0x38], rdi	      1677	shm.c	FUNCTION_57	CALL_1
0x4000dc6	      0xe800000000	                          call 0x4000dcb	      1677	shm.c	FUNCTION_57	CALL_1
0x4000dcb	    0x488bbb800000	            mov rdi, qword [rbx + 0x80] 	      1684	shm.c	FUNCTION_57	CALL_4
0x4000dd2	      0x488d542448	                   lea rdx, [rsp + 0x48]	      1684	shm.c	FUNCTION_57	CALL_4
0x4000dd7	      0x488d742440	                   lea rsi, [rsp + 0x40]	      1684	shm.c	FUNCTION_57	CALL_4
0x4000ddc	          0x4989c7	                            mov r15, rax	      1677	shm.c	FUNCTION_57	CALL_1
0x4000ddf	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1681	shm.c	FUNCTION_57
0x4000de8	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1681	shm.c	FUNCTION_57
0x4000df1	      0xe82affffff	       call sym.shm_add_rss_swap.isra.24	      1684	shm.c	FUNCTION_57	CALL_4
0x4000df6	    0x488bb3a80000	            mov rsi, qword [rbx + 0xa8] 	      1692	shm.c	FUNCTION_57	CALL_5
0x4000dfd	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      1692	shm.c	FUNCTION_57	CALL_5
0x4000e02	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	      1692	shm.c	FUNCTION_57	CALL_5
0x4000e07	    0x488b93a00000	            mov rdx, qword [rbx + 0xa0] 	      1692	shm.c	FUNCTION_57	CALL_5
0x4000e0e	    0x4c8b9b980000	            mov r11, qword [rbx + 0x98] 	      1692	shm.c	FUNCTION_57	CALL_5
0x4000e15	    0x4c8b8b880000	              mov r9, qword [rbx + 0x88]	      1692	shm.c	FUNCTION_57	CALL_5
0x4000e1c	        0x448b731c	           mov r14d, dword [rbx + 0x1c] 	      1692	shm.c	FUNCTION_57	CALL_5
0x4000e20	        0x448b6b18	           mov r13d, dword [rbx + 0x18] 	      1692	shm.c	FUNCTION_57	CALL_5
0x4000e24	        0x48c1e00c	                            shl rax, 0xc	      1692	shm.c	FUNCTION_57	CALL_5
0x4000e28	        0x448b6314	           mov r12d, dword [rbx + 0x14] 	      1692	shm.c	FUNCTION_57	CALL_5
0x4000e2c	          0x8b6b10	            mov ebp, dword [rbx + 0x10] 	      1692	shm.c	FUNCTION_57	CALL_5
0x4000e2f	        0x48c1e10c	                            shl rcx, 0xc	      1692	shm.c	FUNCTION_57	CALL_5
0x4000e33	    0x488bbbb80000	            mov rdi, qword [rbx + 0xb8] 	      1692	shm.c	FUNCTION_57	CALL_5
0x4000e3a	      0x4889742410	             mov qword [rsp + 0x10], rsi	      1692	shm.c	FUNCTION_57	CALL_5
0x4000e3f	          0x4c89fe	                            mov rsi, r15	      1692	shm.c	FUNCTION_57	CALL_5
0x4000e42	      0x48894c2408	                mov qword [rsp + 8], rcx	      1692	shm.c	FUNCTION_57	CALL_5
0x4000e47	      0x4889542418	             mov qword [rsp + 0x18], rdx	      1692	shm.c	FUNCTION_57	CALL_5
0x4000e4c	        0x4183feff	            cmp r14d, 0xffffffffffffffff	       175	uidgid.h	FUNCTION_140	IF_1
0x4000e50	      0x4c895c2430	             mov qword [rsp + 0x30], r11	      1692	shm.c	FUNCTION_57	CALL_5
0x4000e55	    0x440f44350000	          cmove r14d, dword [0x04000e5d]	       175	uidgid.h	FUNCTION_140	IF_1
0x4000e5d	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	       167	uidgid.h	FUNCTION_139	IF_1
0x4000e61	      0x4c894c2428	              mov qword [rsp + 0x28], r9	      1692	shm.c	FUNCTION_57	CALL_5
0x4000e66	    0x440f442d0000	          cmove r13d, dword [0x04000e6e]	       167	uidgid.h	FUNCTION_139	IF_1
0x4000e6e	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	       175	uidgid.h	FUNCTION_140	IF_1
0x4000e72	        0x48890424	                    mov qword [rsp], rax	      1692	shm.c	FUNCTION_57	CALL_5
0x4000e76	    0x440f44250000	          cmove r12d, dword [0x04000e7e]	       175	uidgid.h	FUNCTION_140	IF_1
0x4000e7e	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       167	uidgid.h	FUNCTION_139	IF_1
0x4000e81	     0xf442d000000	           cmove ebp, dword [0x04000e88]	       167	uidgid.h	FUNCTION_139	IF_1
0x4000e88	      0xe800000000	                          call 0x4000e8d	      1692	shm.c	FUNCTION_57	CALL_5
0x4000e8d	    0x488bbbb00000	            mov rdi, qword [rbx + 0xb0] 	      1692	shm.c	FUNCTION_57	CALL_5
0x4000e94	          0x4c89fe	                            mov rsi, r15	      1692	shm.c	FUNCTION_57	CALL_5
0x4000e97	        0x89442424	             mov dword [rsp + 0x24], eax	      1692	shm.c	FUNCTION_57	CALL_5
0x4000e9b	      0xe800000000	                          call 0x4000ea0	      1692	shm.c	FUNCTION_57	CALL_5
0x4000ea0	          0xff3424	                        push qword [rsp]	      1692	shm.c	FUNCTION_57	CALL_5
0x4000ea3	        0xff742410	                 push qword [rsp + 0x10]	      1692	shm.c	FUNCTION_57	CALL_5
0x4000ea7	    0x48c7c6000000	                              mov rsi, 0	      1692	shm.c	FUNCTION_57	CALL_5
0x4000eae	        0xff742420	                 push qword [rsp + 0x20]	      1692	shm.c	FUNCTION_57	CALL_5
0x4000eb2	        0xff742430	                 push qword [rsp + 0x30]	      1692	shm.c	FUNCTION_57	CALL_5
0x4000eb6	      0x4c8b5c2450	            mov r11, qword [rsp + 0x50] 	      1692	shm.c	FUNCTION_57	CALL_5
0x4000ebb	          0x8b4b08	                mov ecx, dword [rbx + 8]	      1692	shm.c	FUNCTION_57	CALL_5
0x4000ebe	          0x8b530c	              mov edx, dword [rbx + 0xc]	      1692	shm.c	FUNCTION_57	CALL_5
0x4000ec1	            0x4153	                                push r11	      1692	shm.c	FUNCTION_57	CALL_5
0x4000ec3	            0x4156	                                push r14	      1692	shm.c	FUNCTION_57	CALL_5
0x4000ec5	            0x4155	                                push r13	      1692	shm.c	FUNCTION_57	CALL_5
0x4000ec7	            0x4154	                                push r12	      1692	shm.c	FUNCTION_57	CALL_5
0x4000ec9	              0x55	                                push rbp	      1692	shm.c	FUNCTION_57	CALL_5
0x4000eca	      0x4c8b4c2470	              mov r9, qword [rsp + 0x70]	      1692	shm.c	FUNCTION_57	CALL_5
0x4000ecf	            0x4151	                                 push r9	      1692	shm.c	FUNCTION_57	CALL_5
0x4000ed1	      0x448b442474	            mov r8d, dword [rsp + 0x74] 	      1692	shm.c	FUNCTION_57	CALL_5
0x4000ed6	    0x4c8b8b900000	              mov r9, qword [rbx + 0x90]	      1692	shm.c	FUNCTION_57	CALL_5
0x4000edd	            0x4150	                                 push r8	      1692	shm.c	FUNCTION_57	CALL_5
0x4000edf	      0x440fb74320	           movzx r8d, word [rbx + 0x20] 	      1692	shm.c	FUNCTION_57	CALL_5
0x4000ee4	              0x50	                                push rax	      1692	shm.c	FUNCTION_57	CALL_5
0x4000ee5	    0x4c8b94249800	            mov r10, qword [rsp + 0x98] 	      1692	shm.c	FUNCTION_57	CALL_5
0x4000eed	          0x4c89d7	                            mov rdi, r10	      1692	shm.c	FUNCTION_57	CALL_5
0x4000ef0	      0xe800000000	                          call 0x4000ef5	      1692	shm.c	FUNCTION_57	CALL_5
0x4000ef5	        0x4883c460	                           add rsp, 0x60	      1713	shm.c	FUNCTION_57
0x4000ef9	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	      1714	shm.c	FUNCTION_57
0x4000efe	    0x6548330c2528	                xor rcx, qword gs:[0x28]	      1714	shm.c	FUNCTION_57
0x4000f07	            0x7511	                           jne 0x4000f1a	      1714	shm.c	FUNCTION_57
0x4000f09	        0x4883c458	                           add rsp, 0x58	      1714	shm.c	FUNCTION_57
0x4000f0d	            0x31c0	                            xor eax, eax	      1714	shm.c	FUNCTION_57
0x4000f0f	              0x5b	                                 pop rbx	      1714	shm.c	FUNCTION_57
0x4000f10	              0x5d	                                 pop rbp	      1714	shm.c	FUNCTION_57
0x4000f11	            0x415c	                                 pop r12	      1714	shm.c	FUNCTION_57
0x4000f13	            0x415d	                                 pop r13	      1714	shm.c	FUNCTION_57
0x4000f15	            0x415e	                                 pop r14	      1714	shm.c	FUNCTION_57
0x4000f17	            0x415f	                                 pop r15	      1714	shm.c	FUNCTION_57
0x4000f19	              0xc3	                                     ret	      1714	shm.c	FUNCTION_57
0x4000f1a	      0xe800000000	                          call 0x4000f1f	      1714	shm.c	FUNCTION_57
shm_fallocate	IF,1:ELSE,0:CALL,2:WHILE,0:DO,0:FOR,0:functions,0:SWITCH,0	9
0x4000120	    0x488b87c80000	            mov rax, qword [rdi + 0xc8] 	       510	shm.c	FUNCTION_27	IF_1
0x4000127	        0x488b4010	            mov rax, qword [rax + 0x10] 	       510	shm.c	FUNCTION_27	IF_1
0x400012b	        0x488b4028	            mov rax, qword [rax + 0x28] 	       510	shm.c	FUNCTION_27	IF_1
0x400012f	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       510	shm.c	FUNCTION_27	IF_1
0x4000136	          0x4885c0	                           test rax, rax	       510	shm.c	FUNCTION_27	IF_1
0x4000139	            0x7405	                            je 0x4000140	       510	shm.c	FUNCTION_27	IF_1
0x400013b	      0xe900000000	                           jmp 0x4000140	       512	shm.c	FUNCTION_27	CALL_2
0x4000140	    0x48c7c0a1ffff	             mov rax, 0xffffffffffffffa1	       513	shm.c	FUNCTION_27
0x4000147	              0xc3	                                     ret	       513	shm.c	FUNCTION_27
shm_fault	IF,0:ELSE,0:CALL,2:WHILE,0:DO,0:FOR,0:functions,0:SWITCH,0	6
0x4000040	          0x488b07	                    mov rax, qword [rdi]	       413	shm.c	FUNCTION_20
0x4000043	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	       414	shm.c	FUNCTION_20	CALL_1
0x400004a	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	       416	shm.c	FUNCTION_20	CALL_2
0x4000051	        0x488b4018	            mov rax, qword [rax + 0x18] 	       416	shm.c	FUNCTION_20	CALL_2
0x4000055	        0x488b4020	            mov rax, qword [rax + 0x20] 	       416	shm.c	FUNCTION_20	CALL_2
0x4000059	      0xe900000000	                           jmp 0x400005e	       416	shm.c	FUNCTION_20	CALL_2
shm_get_unmapped_area	IF,0:ELSE,0:CALL,2:WHILE,0:DO,0:FOR,0:functions,0:SWITCH,0	5
0x4000150	    0x488b87c80000	            mov rax, qword [rdi + 0xc8] 	       521	shm.c	FUNCTION_28	CALL_2
0x4000157	        0x488b7810	            mov rdi, qword [rax + 0x10] 	       521	shm.c	FUNCTION_28	CALL_2
0x400015b	        0x488b4728	            mov rax, qword [rdi + 0x28] 	       521	shm.c	FUNCTION_28	CALL_2
0x400015f	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       521	shm.c	FUNCTION_28	CALL_2
0x4000166	      0xe900000000	                           jmp 0x400016b	       521	shm.c	FUNCTION_28	CALL_2
shm_fsync	IF,1:ELSE,0:CALL,2:WHILE,0:DO,0:FOR,0:functions,0:SWITCH,0	9
0x40000f0	    0x488b87c80000	            mov rax, qword [rdi + 0xc8] 	       500	shm.c	FUNCTION_26	IF_1
0x40000f7	        0x488b7810	            mov rdi, qword [rax + 0x10] 	       500	shm.c	FUNCTION_26	IF_1
0x40000fb	        0x488b4728	            mov rax, qword [rdi + 0x28] 	       500	shm.c	FUNCTION_26	IF_1
0x40000ff	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       500	shm.c	FUNCTION_26	IF_1
0x4000106	          0x4885c0	                           test rax, rax	       500	shm.c	FUNCTION_26	IF_1
0x4000109	            0x7405	                            je 0x4000110	       500	shm.c	FUNCTION_26	IF_1
0x400010b	      0xe900000000	                           jmp 0x4000110	       502	shm.c	FUNCTION_26	CALL_2
0x4000110	      0xb8eaffffff	                     mov eax, 0xffffffea	       503	shm.c	FUNCTION_26
0x4000115	              0xc3	                                     ret	       503	shm.c	FUNCTION_26
shm_more_checks	IF,1:ELSE,0:CALL,1:WHILE,0:DO,0:FOR,0:functions,0:SWITCH,0	5
0x4000170	        0x488b4608	                mov rax, qword [rsi + 8]	       691	shm.c	FUNCTION_31
0x4000174	    0x483987900000	            cmp qword [rdi + 0x90], rax 	       691	shm.c	FUNCTION_31
0x400017b	            0x19c0	                            sbb eax, eax	       691	shm.c	FUNCTION_31
0x400017d	          0x83e0ea	                     and eax, 0xffffffea	       691	shm.c	FUNCTION_31
0x4000180	              0xc3	                                     ret	       692	shm.c	FUNCTION_31
ipc_ns_init	IF,0:ELSE,0:CALL,2:WHILE,0:DO,0:FOR,0:functions,0:SWITCH,0	22
0x4000040	          0x488b07	                    mov rax, qword [rdi]	       413	shm.c	FUNCTION_20
0x4000043	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	       414	shm.c	FUNCTION_20	CALL_1
0x400004a	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	       416	shm.c	FUNCTION_20	CALL_2
0x4000051	        0x488b4018	            mov rax, qword [rax + 0x18] 	       416	shm.c	FUNCTION_20	CALL_2
0x4000055	        0x488b4020	            mov rax, qword [rax + 0x20] 	       416	shm.c	FUNCTION_20	CALL_2
0x4000059	      0xe900000000	                           jmp 0x400005e	       416	shm.c	FUNCTION_20	CALL_2
0x400005e	            0x6690	                                     nop	       416	shm.c	FUNCTION_20	CALL_2
0x4000060	    0x488b87a00000	            mov rax, qword [rdi + 0xa0] 	       422	shm.c	FUNCTION_21	CALL_1
0x4000067	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	       424	shm.c	FUNCTION_21	IF_1
0x400006e	        0x488b4018	            mov rax, qword [rax + 0x18] 	       424	shm.c	FUNCTION_21	IF_1
0x4000072	        0x488b4010	            mov rax, qword [rax + 0x10] 	       424	shm.c	FUNCTION_21	IF_1
0x4000076	          0x4885c0	                           test rax, rax	       424	shm.c	FUNCTION_21	IF_1
0x4000079	            0x7405	                            je 0x4000080	       424	shm.c	FUNCTION_21	IF_1
0x400007b	      0xe900000000	                           jmp 0x4000080	       425	shm.c	FUNCTION_21	CALL_2
0x4000080	            0x31c0	                            xor eax, eax	       428	shm.c	FUNCTION_21
0x4000082	              0xc3	                                     ret	       428	shm.c	FUNCTION_21
0x4000083	           0xf1f00	                         nop dword [rax]	       428	shm.c	FUNCTION_21
0x4000086	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       428	shm.c	FUNCTION_21
0x4000090	    0x488b87a00000	            mov rax, qword [rdi + 0xa0] 	       434	shm.c	FUNCTION_22	CALL_1
0x4000097	              0x48	                                 invalid	       437	shm.c	FUNCTION_22	IF_1
0x4000098	              0x8b	                                 invalid	       437	shm.c	FUNCTION_22	IF_1
0x4000099	          0x80c800	                                or al, 0	       437	shm.c	FUNCTION_22	IF_1
