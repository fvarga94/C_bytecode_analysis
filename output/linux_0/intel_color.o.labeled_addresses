i9xx_load_luts_internal	CALL,19:functions,0:WHILE,0:IF,5:DO,0:FOR,2:ELSE,4:SWITCH,0	99
0x4000280	            0x4157	                                push r15	       316	intel_color.c	FUNCTION_7
0x4000282	            0x4156	                                push r14	       316	intel_color.c	FUNCTION_7
0x4000284	            0x4155	                                push r13	       316	intel_color.c	FUNCTION_7
0x4000286	            0x4154	                                push r12	       316	intel_color.c	FUNCTION_7
0x4000288	              0x55	                                push rbp	       316	intel_color.c	FUNCTION_7
0x4000289	              0x53	                                push rbx	       316	intel_color.c	FUNCTION_7
0x400028a	          0x4889f3	                            mov rbx, rsi	       316	intel_color.c	FUNCTION_7
0x400028d	          0x4c8b27	                    mov r12, qword [rdi]	       317	intel_color.c	FUNCTION_7
0x4000290	    0x4c63b7b00400	        movsxd r14, dword [rdi + 0x4b0] 	       320	intel_color.c	FUNCTION_7
0x4000297	    0x41f684247806	          test byte [r12 + 0x678], 0x20 	       323	intel_color.c	FUNCTION_7	IF_1	CALL_3
0x40002a0	            0x741a	                            je 0x40002bc	       323	intel_color.c	FUNCTION_7	IF_1	CALL_3
0x40002a2	    0xf68245020000	              test byte [rdx + 0x245], 2	       324	intel_color.c	FUNCTION_7	IF_1	IF_2	CALL_4
0x40002a9	     0xf84c5000000	                            je 0x4000374	       324	intel_color.c	FUNCTION_7	IF_1	IF_2	CALL_4
0x40002af	      0xbe01000000	                              mov esi, 1	       325	intel_color.c	FUNCTION_7	IF_1	CALL_5
0x40002b4	          0x4c89e7	                            mov rdi, r12	       325	intel_color.c	FUNCTION_7	IF_1	CALL_5
0x40002b7	      0xe800000000	                          call 0x40002bc	       325	intel_color.c	FUNCTION_7	IF_1	CALL_5
0x40002bc	          0x4885db	                           test rbx, rbx	       330	intel_color.c	FUNCTION_7	IF_3
0x40002bf	     0xf84c8000000	                            je 0x400038d	       330	intel_color.c	FUNCTION_7	IF_3
0x40002c5	    0x458dbe940000	                  lea r15d, [r14 + 0x94]	       330	intel_color.c	FUNCTION_7	IF_3
0x40002cc	        0x488b6b50	            mov rbp, qword [rbx + 0x50] 	       330	intel_color.c	FUNCTION_7	IF_3
0x40002d0	          0x4531ed	                          xor r13d, r13d	       341	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_14
0x40002d3	        0x41c1e70b	                           shl r15d, 0xb	       341	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_14
0x40002d7	            0xeb31	                           jmp 0x400030a	       341	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_14
0x40002d9	    0x418bb4246c06	           mov esi, dword [r12 + 0x66c] 	       339	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_12
0x40002e1	    0x4303b4b4b006	    add esi, dword [r12 + r14*4 + 0x6b0]	       339	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_12
0x40002e9	      0xb901000000	                              mov ecx, 1	       339	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_12
0x40002ee	          0x4c89e7	                            mov rdi, r12	       339	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_12
0x40002f1	          0x4401ee	                           add esi, r13d	       339	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_12
0x40002f4	      0xe800000000	                          call 0x40002f9	       339	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_12
0x40002f9	        0x4183c504	                             add r13d, 4	       339	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_12
0x40002fd	        0x4883c508	                              add rbp, 8	       339	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_12
0x4000301	    0x4181fd000400	                         cmp r13d, 0x400	       332	intel_color.c	FUNCTION_7	IF_3	FOR_1
0x4000308	            0x745f	                            je 0x4000369	       332	intel_color.c	FUNCTION_7	IF_3	FOR_1
0x400030a	         0xfb77d00	                   movzx edi, word [rbp]	       334	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_7
0x400030e	      0xbe08000000	                              mov esi, 8	       334	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_7
0x4000313	      0xe800000000	                          call 0x4000318	       334	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_7
0x4000318	         0xfb77d02	               movzx edi, word [rbp + 2]	       335	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_8
0x400031c	      0xbe08000000	                              mov esi, 8	       335	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_8
0x4000321	            0x89c3	                            mov ebx, eax	       334	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_7
0x4000323	          0xc1e310	                           shl ebx, 0x10	       334	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_7
0x4000326	      0xe800000000	                          call 0x400032b	       335	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_8
0x400032b	         0xfb77d04	               movzx edi, word [rbp + 4]	       336	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_9
0x400032f	          0xc1e008	                              shl eax, 8	       334	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_7
0x4000332	      0xbe08000000	                              mov esi, 8	       336	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_9
0x4000337	             0x9c3	                             or ebx, eax	       334	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_7
0x4000339	      0xe800000000	                          call 0x400033e	       336	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_9
0x400033e	            0x89da	                            mov edx, ebx	       333	intel_color.c	FUNCTION_7	IF_3	FOR_1
0x4000340	             0x9c2	                             or edx, eax	       333	intel_color.c	FUNCTION_7	IF_3	FOR_1
0x4000342	    0x41f684247806	          test byte [r12 + 0x678], 0x20 	       338	intel_color.c	FUNCTION_7	IF_3	FOR_1	IF_4	CALL_10
0x400034b	    0x498b84241808	           mov rax, qword [r12 + 0x818] 	       339	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_12
0x4000353	            0x7584	                           jne 0x40002d9	       338	intel_color.c	FUNCTION_7	IF_3	FOR_1	IF_4	CALL_10
0x4000355	      0x438d743d00	                    lea esi, [r13 + r15]	       341	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_14
0x400035a	      0xb901000000	                              mov ecx, 1	       341	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_14
0x400035f	          0x4c89e7	                            mov rdi, r12	       341	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_14
0x4000362	      0xe800000000	                          call 0x4000367	       341	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_14
0x4000367	            0xeb90	                           jmp 0x40002f9	       341	intel_color.c	FUNCTION_7	IF_3	FOR_1	CALL_14
0x4000369	              0x5b	                                 pop rbx	       353	intel_color.c	FUNCTION_7
0x400036a	              0x5d	                                 pop rbp	       353	intel_color.c	FUNCTION_7
0x400036b	            0x415c	                                 pop r12	       353	intel_color.c	FUNCTION_7
0x400036d	            0x415d	                                 pop r13	       353	intel_color.c	FUNCTION_7
0x400036f	            0x415e	                                 pop r14	       353	intel_color.c	FUNCTION_7
0x4000371	            0x415f	                                 pop r15	       353	intel_color.c	FUNCTION_7
0x4000373	              0xc3	                                     ret	       353	intel_color.c	FUNCTION_7
0x4000374	      0xba01000000	                              mov edx, 1	       327	intel_color.c	FUNCTION_7	IF_1	CALL_6
0x4000379	          0x4489f6	                           mov esi, r14d	       327	intel_color.c	FUNCTION_7	IF_1	CALL_6
0x400037c	          0x4c89e7	                            mov rdi, r12	       327	intel_color.c	FUNCTION_7	IF_1	CALL_6
0x400037f	      0xe800000000	                          call 0x4000384	       327	intel_color.c	FUNCTION_7	IF_1	CALL_6
0x4000384	          0x4885db	                           test rbx, rbx	       330	intel_color.c	FUNCTION_7	IF_3
0x4000387	     0xf8538ffffff	                           jne 0x40002c5	       330	intel_color.c	FUNCTION_7	IF_3
0x400038d	    0x458dae940000	                  lea r13d, [r14 + 0x94]	       330	intel_color.c	FUNCTION_7	IF_3
0x4000394	            0x31db	                            xor ebx, ebx	       350	intel_color.c	FUNCTION_7	ELSE_3	FOR_2	CALL_19
0x4000396	          0x4963ee	                        movsxd rbp, r14d	       348	intel_color.c	FUNCTION_7	ELSE_3	FOR_2	CALL_17
0x4000399	        0x41c1e50b	                           shl r13d, 0xb	       348	intel_color.c	FUNCTION_7	ELSE_3	FOR_2	CALL_17
0x400039d	            0xeb37	                           jmp 0x40003d6	       348	intel_color.c	FUNCTION_7	ELSE_3	FOR_2	CALL_17
0x400039f	    0x418b84246c06	           mov eax, dword [r12 + 0x66c] 	       348	intel_color.c	FUNCTION_7	ELSE_3	FOR_2	CALL_17
0x40003a7	    0x410384acb006	    add eax, dword [r12 + rbp*4 + 0x6b0]	       348	intel_color.c	FUNCTION_7	ELSE_3	FOR_2	CALL_17
0x40003af	      0xb901000000	                              mov ecx, 1	       348	intel_color.c	FUNCTION_7	ELSE_3	FOR_2	CALL_17
0x40003b4	    0x4d8b84241808	            mov r8, qword [r12 + 0x818] 	       348	intel_color.c	FUNCTION_7	ELSE_3	FOR_2	CALL_17
0x40003bc	          0x4c89e7	                            mov rdi, r12	       348	intel_color.c	FUNCTION_7	ELSE_3	FOR_2	CALL_17
0x40003bf	          0x8d3498	                  lea esi, [rax + rbx*4]	       348	intel_color.c	FUNCTION_7	ELSE_3	FOR_2	CALL_17
0x40003c2	      0xe800000000	                          call 0x40003c7	       348	intel_color.c	FUNCTION_7	ELSE_3	FOR_2	CALL_17
0x40003c7	          0x83c301	                              add ebx, 1	       344	intel_color.c	FUNCTION_7	ELSE_3	FOR_2
0x40003ca	        0x4183c504	                             add r13d, 4	       344	intel_color.c	FUNCTION_7	ELSE_3	FOR_2
0x40003ce	    0x81fb00010000	                          cmp ebx, 0x100	       344	intel_color.c	FUNCTION_7	ELSE_3	FOR_2
0x40003d4	            0x7493	                            je 0x4000369	       344	intel_color.c	FUNCTION_7	ELSE_3	FOR_2
0x40003d6	            0x89da	                            mov edx, ebx	       345	intel_color.c	FUNCTION_7	ELSE_3	FOR_2
0x40003d8	            0x89d8	                            mov eax, ebx	       345	intel_color.c	FUNCTION_7	ELSE_3	FOR_2
0x40003da	          0xc1e210	                           shl edx, 0x10	       345	intel_color.c	FUNCTION_7	ELSE_3	FOR_2
0x40003dd	          0xc1e008	                              shl eax, 8	       345	intel_color.c	FUNCTION_7	ELSE_3	FOR_2
0x40003e0	             0x9c2	                             or edx, eax	       345	intel_color.c	FUNCTION_7	ELSE_3	FOR_2
0x40003e2	             0x9da	                             or edx, ebx	       345	intel_color.c	FUNCTION_7	ELSE_3	FOR_2
0x40003e4	    0x41f684247806	          test byte [r12 + 0x678], 0x20 	       347	intel_color.c	FUNCTION_7	ELSE_3	FOR_2	IF_5	CALL_15
0x40003ed	            0x75b0	                           jne 0x400039f	       347	intel_color.c	FUNCTION_7	ELSE_3	FOR_2	IF_5	CALL_15
0x40003ef	    0x498b84241808	           mov rax, qword [r12 + 0x818] 	       350	intel_color.c	FUNCTION_7	ELSE_3	FOR_2	CALL_19
0x40003f7	      0xb901000000	                              mov ecx, 1	       350	intel_color.c	FUNCTION_7	ELSE_3	FOR_2	CALL_19
0x40003fc	          0x4489ee	                           mov esi, r13d	       350	intel_color.c	FUNCTION_7	ELSE_3	FOR_2	CALL_19
0x40003ff	          0x4c89e7	                            mov rdi, r12	       350	intel_color.c	FUNCTION_7	ELSE_3	FOR_2	CALL_19
0x4000402	      0xe800000000	                          call 0x4000407	       350	intel_color.c	FUNCTION_7	ELSE_3	FOR_2	CALL_19
0x4000407	            0xebbe	                           jmp 0x40003c7	       350	intel_color.c	FUNCTION_7	ELSE_3	FOR_2	CALL_19
glk_load_luts	CALL,11:functions,0:WHILE,0:IF,1:DO,0:FOR,0:ELSE,0:SWITCH,0	88
0x4001130	            0x4156	                                push r14	       526	intel_color.c	FUNCTION_14
0x4001132	            0x4155	                                push r13	       526	intel_color.c	FUNCTION_14
0x4001134	      0xb901000000	                              mov ecx, 1	       507	intel_color.c	FUNCTION_13	CALL_4
0x4001139	            0x4154	                                push r12	       526	intel_color.c	FUNCTION_14
0x400113b	              0x55	                                push rbp	       526	intel_color.c	FUNCTION_14
0x400113c	            0x31d2	                            xor edx, edx	       507	intel_color.c	FUNCTION_13	CALL_4
0x400113e	              0x53	                                push rbx	       526	intel_color.c	FUNCTION_14
0x400113f	          0x488b07	                    mov rax, qword [rdi]	       527	intel_color.c	FUNCTION_14
0x4001142	          0x4989fe	                            mov r14, rdi	       526	intel_color.c	FUNCTION_14
0x4001145	    0x448ba8b00400	          mov r13d, dword [rax + 0x4b0] 	       507	intel_color.c	FUNCTION_13	CALL_4
0x400114c	          0x488b28	                    mov rbp, qword [rax]	       528	intel_color.c	FUNCTION_14
0x400114f	        0x41c1e50b	                           shl r13d, 0xb	       507	intel_color.c	FUNCTION_13	CALL_4
0x4001153	    0x4c8b85180800	            mov r8, qword [rbp + 0x818] 	       507	intel_color.c	FUNCTION_13	CALL_4
0x400115a	          0x4889ef	                            mov rdi, rbp	       507	intel_color.c	FUNCTION_13	CALL_4
0x400115d	    0x418d9d84a404	                lea ebx, [r13 + 0x4a484]	       507	intel_color.c	FUNCTION_13	CALL_4
0x4001164	    0x458da588a404	               lea r12d, [r13 + 0x4a488]	       507	intel_color.c	FUNCTION_13	CALL_4
0x400116b	            0x89de	                            mov esi, ebx	       507	intel_color.c	FUNCTION_13	CALL_4
0x400116d	      0xe800000000	                          call 0x4001172	       507	intel_color.c	FUNCTION_13	CALL_4
0x4001172	            0x89de	                            mov esi, ebx	       508	intel_color.c	FUNCTION_13	CALL_6
0x4001174	            0x31db	                            xor ebx, ebx	       508	intel_color.c	FUNCTION_13	CALL_6
0x4001176	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	       508	intel_color.c	FUNCTION_13	CALL_6
0x400117d	      0xb901000000	                              mov ecx, 1	       508	intel_color.c	FUNCTION_13	CALL_6
0x4001182	      0xba00040000	                          mov edx, 0x400	       508	intel_color.c	FUNCTION_13	CALL_6
0x4001187	          0x4889ef	                            mov rdi, rbp	       508	intel_color.c	FUNCTION_13	CALL_6
0x400118a	      0xe800000000	                          call 0x400118f	       508	intel_color.c	FUNCTION_13	CALL_6
0x400118f	            0x89da	                            mov edx, ebx	       517	intel_color.c	FUNCTION_13	FOR_1	CALL_8
0x4001191	    0x81c300000100	                        add ebx, 0x10000	       517	intel_color.c	FUNCTION_13	FOR_1	CALL_8
0x4001197	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	       517	intel_color.c	FUNCTION_13	FOR_1	CALL_8
0x400119e	          0xc1ea05	                              shr edx, 5	       517	intel_color.c	FUNCTION_13	FOR_1	CALL_8
0x40011a1	      0xb901000000	                              mov ecx, 1	       517	intel_color.c	FUNCTION_13	FOR_1	CALL_8
0x40011a6	          0x4489e6	                           mov esi, r12d	       517	intel_color.c	FUNCTION_13	FOR_1	CALL_8
0x40011a9	          0x4889ef	                            mov rdi, rbp	       517	intel_color.c	FUNCTION_13	FOR_1	CALL_8
0x40011ac	      0xe800000000	                          call 0x40011b1	       517	intel_color.c	FUNCTION_13	FOR_1	CALL_8
0x40011b1	    0x81fb00002100	                       cmp ebx, 0x210000	       514	intel_color.c	FUNCTION_13	FOR_1
0x40011b7	            0x75d6	                           jne 0x400118f	       514	intel_color.c	FUNCTION_13	FOR_1
0x40011b9	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	       522	intel_color.c	FUNCTION_13	CALL_10
0x40011c0	      0xb901000000	                              mov ecx, 1	       522	intel_color.c	FUNCTION_13	CALL_10
0x40011c5	      0xba00000100	                        mov edx, 0x10000	       522	intel_color.c	FUNCTION_13	CALL_10
0x40011ca	          0x4489e6	                           mov esi, r12d	       522	intel_color.c	FUNCTION_13	CALL_10
0x40011cd	          0x4889ef	                            mov rdi, rbp	       522	intel_color.c	FUNCTION_13	CALL_10
0x40011d0	      0xe800000000	                          call 0x40011d5	       522	intel_color.c	FUNCTION_13	CALL_10
0x40011d5	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	       522	intel_color.c	FUNCTION_13	CALL_10
0x40011dc	      0xb901000000	                              mov ecx, 1	       522	intel_color.c	FUNCTION_13	CALL_10
0x40011e1	      0xba00000100	                        mov edx, 0x10000	       522	intel_color.c	FUNCTION_13	CALL_10
0x40011e6	          0x4489e6	                           mov esi, r12d	       522	intel_color.c	FUNCTION_13	CALL_10
0x40011e9	          0x4889ef	                            mov rdi, rbp	       522	intel_color.c	FUNCTION_13	CALL_10
0x40011ec	      0xe800000000	                          call 0x40011f1	       522	intel_color.c	FUNCTION_13	CALL_10
0x40011f1	    0x4983bee00100	              cmp qword [r14 + 0x1e0], 0	        81	intel_color.c	FUNCTION_1
0x40011f9	            0x745c	                            je 0x4001257	        81	intel_color.c	FUNCTION_1
0x40011fb	          0x498b3e	                    mov rdi, qword [r14]	       540	intel_color.c	FUNCTION_14	CALL_7
0x40011fe	    0x498db6f00100	                  lea rsi, [r14 + 0x1f0]	       540	intel_color.c	FUNCTION_14	CALL_7
0x4001205	    0x4181c580a404	                       add r13d, 0x4a480	       543	intel_color.c	FUNCTION_14	CALL_9
0x400120c	            0x31d2	                            xor edx, edx	       540	intel_color.c	FUNCTION_14	CALL_7
0x400120e	      0xe88dfcffff	      call sym.bdw_load_gamma_lut.isra.4	       540	intel_color.c	FUNCTION_14	CALL_7
0x4001213	    0x41c7868c0400	              mov dword [r14 + 0x48c], 1	       542	intel_color.c	FUNCTION_14
0x400121e	          0x4489ee	                           mov esi, r13d	       543	intel_color.c	FUNCTION_14	CALL_9
0x4001221	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	       543	intel_color.c	FUNCTION_14	CALL_9
0x4001228	          0x4889ef	                            mov rdi, rbp	       543	intel_color.c	FUNCTION_14	CALL_9
0x400122b	      0xb901000000	                              mov ecx, 1	       543	intel_color.c	FUNCTION_14	CALL_9
0x4001230	      0xba01000000	                              mov edx, 1	       543	intel_color.c	FUNCTION_14	CALL_9
0x4001235	      0xe800000000	                          call 0x400123a	       543	intel_color.c	FUNCTION_14	CALL_9
0x400123a	    0x488b85f80700	           mov rax, qword [rbp + 0x7f8] 	       544	intel_color.c	FUNCTION_14	CALL_11
0x4001241	          0x4489ee	                           mov esi, r13d	       544	intel_color.c	FUNCTION_14	CALL_11
0x4001244	          0x4889ef	                            mov rdi, rbp	       544	intel_color.c	FUNCTION_14	CALL_11
0x4001247	            0x31d2	                            xor edx, edx	       544	intel_color.c	FUNCTION_14	CALL_11
0x4001249	      0xe800000000	                          call 0x400124e	       544	intel_color.c	FUNCTION_14	CALL_11
0x400124e	              0x5b	                                 pop rbx	       545	intel_color.c	FUNCTION_14
0x400124f	              0x5d	                                 pop rbp	       545	intel_color.c	FUNCTION_14
0x4001250	            0x415c	                                 pop r12	       545	intel_color.c	FUNCTION_14
0x4001252	            0x415d	                                 pop r13	       545	intel_color.c	FUNCTION_14
0x4001254	            0x415e	                                 pop r14	       545	intel_color.c	FUNCTION_14
0x4001256	              0xc3	                                     ret	       545	intel_color.c	FUNCTION_14
0x4001257	    0x4983bee80100	              cmp qword [r14 + 0x1e8], 0	        79	intel_color.c	FUNCTION_1
0x400125f	            0x759a	                           jne 0x40011fb	        79	intel_color.c	FUNCTION_1
0x4001261	    0x498b86f00100	           mov rax, qword [r14 + 0x1f0] 	        81	intel_color.c	FUNCTION_1
0x4001268	          0x4885c0	                           test rax, rax	        80	intel_color.c	FUNCTION_1
0x400126b	            0x748e	                            je 0x40011fb	        80	intel_color.c	FUNCTION_1
0x400126d	        0x488b4048	            mov rax, qword [rax + 0x48] 	        81	intel_color.c	FUNCTION_1
0x4001271	        0x48c1e803	                              shr rax, 3	        81	intel_color.c	FUNCTION_1
0x4001275	      0x3d00010000	                          cmp eax, 0x100	        81	intel_color.c	FUNCTION_1
0x400127a	     0xf857bffffff	                           jne 0x40011fb	        81	intel_color.c	FUNCTION_1
0x4001280	              0x5b	                                 pop rbx	       545	intel_color.c	FUNCTION_14
0x4001281	          0x4c89f7	                            mov rdi, r14	       536	intel_color.c	FUNCTION_14	IF_1	CALL_6
0x4001284	              0x5d	                                 pop rbp	       545	intel_color.c	FUNCTION_14
0x4001285	            0x415c	                                 pop r12	       545	intel_color.c	FUNCTION_14
0x4001287	            0x415d	                                 pop r13	       545	intel_color.c	FUNCTION_14
0x4001289	            0x415e	                                 pop r14	       545	intel_color.c	FUNCTION_14
0x400128b	      0xe9d0f4ffff	               jmp sym.haswell_load_luts	       536	intel_color.c	FUNCTION_14	IF_1	CALL_6
intel_color_load_luts	CALL,2:functions,0:WHILE,0:IF,0:DO,0:FOR,0:ELSE,0:SWITCH,0	4
0x40014d0	          0x488b07	                    mov rax, qword [rdi]	       610	intel_color.c	FUNCTION_16
0x40014d3	          0x488b00	                    mov rax, qword [rax]	       613	intel_color.c	FUNCTION_16	CALL_2
0x40014d6	    0x488b80f05500	          mov rax, qword [rax + 0x55f0] 	       613	intel_color.c	FUNCTION_16	CALL_2
0x40014dd	      0xe900000000	                           jmp 0x40014e2	       613	intel_color.c	FUNCTION_16	CALL_2
broadwell_load_luts	CALL,14:functions,0:WHILE,0:IF,1:DO,0:FOR,0:ELSE,0:SWITCH,0	134
0x4001290	            0x4157	                                push r15	       470	intel_color.c	FUNCTION_12
0x4001292	            0x4156	                                push r14	       470	intel_color.c	FUNCTION_12
0x4001294	            0x4155	                                push r13	       470	intel_color.c	FUNCTION_12
0x4001296	            0x4154	                                push r12	       470	intel_color.c	FUNCTION_12
0x4001298	              0x55	                                push rbp	       470	intel_color.c	FUNCTION_12
0x4001299	              0x53	                                push rbx	       470	intel_color.c	FUNCTION_12
0x400129a	        0x4883ec08	                              sub rsp, 8	       470	intel_color.c	FUNCTION_12
0x400129e	    0x4883bfe00100	              cmp qword [rdi + 0x1e0], 0	        81	intel_color.c	FUNCTION_1
0x40012a6	          0x488b07	                    mov rax, qword [rdi]	       471	intel_color.c	FUNCTION_12	CALL_1
0x40012a9	          0x4c8b20	                    mov r12, qword [rax]	       471	intel_color.c	FUNCTION_12	CALL_1
0x40012ac	    0x8b80b0040000	           mov eax, dword [rax + 0x4b0] 	       473	intel_color.c	FUNCTION_12	CALL_3
0x40012b2	     0xf8442010000	                            je 0x40013fa	        81	intel_color.c	FUNCTION_1
0x40012b8	          0xc1e00b	                            shl eax, 0xb	       397	intel_color.c	FUNCTION_10	CALL_5
0x40012bb	          0x4989fd	                            mov r13, rdi	       397	intel_color.c	FUNCTION_10	CALL_5
0x40012be	    0x450fb7b4240c	         movzx r14d, word [r12 + 0x70c] 	       395	intel_color.c	FUNCTION_10	CALL_3
0x40012c7	          0x890424	                    mov dword [rsp], eax	       397	intel_color.c	FUNCTION_10	CALL_5
0x40012ca	       0x500a40400	                        add eax, 0x4a400	       397	intel_color.c	FUNCTION_10	CALL_5
0x40012cf	    0x4d8b84241808	            mov r8, qword [r12 + 0x818] 	       397	intel_color.c	FUNCTION_10	CALL_5
0x40012d7	        0x89442404	                mov dword [rsp + 4], eax	       397	intel_color.c	FUNCTION_10	CALL_5
0x40012db	            0x89c6	                            mov esi, eax	       397	intel_color.c	FUNCTION_10	CALL_5
0x40012dd	      0xb901000000	                              mov ecx, 1	       397	intel_color.c	FUNCTION_10	CALL_5
0x40012e2	      0xba00800080	                     mov edx, 0x80008000	       397	intel_color.c	FUNCTION_10	CALL_5
0x40012e7	          0x4c89e7	                            mov rdi, r12	       397	intel_color.c	FUNCTION_10	CALL_5
0x40012ea	      0xe800000000	                          call 0x40012ef	       397	intel_color.c	FUNCTION_10	CALL_5
0x40012ef	    0x498b85e00100	           mov rax, qword [r13 + 0x1e0] 	       400	intel_color.c	FUNCTION_10	IF_1
0x40012f6	          0x4885c0	                           test rax, rax	       400	intel_color.c	FUNCTION_10	IF_1
0x40012f9	     0xf8440010000	                            je 0x400143f	       400	intel_color.c	FUNCTION_10	IF_1
0x40012ff	          0x4585f6	                         test r14d, r14d	       403	intel_color.c	FUNCTION_10	IF_1	FOR_1
0x4001302	        0x488b5850	            mov rbx, qword [rax + 0x50] 	       401	intel_color.c	FUNCTION_10	IF_1
0x4001306	            0x746b	                            je 0x4001373	       403	intel_color.c	FUNCTION_10	IF_1	FOR_1
0x4001308	          0x8b0424	                    mov eax, dword [rsp]	       403	intel_color.c	FUNCTION_10	IF_1	FOR_1
0x400130b	    0x448db804a404	               lea r15d, [rax + 0x4a404]	       403	intel_color.c	FUNCTION_10	IF_1	FOR_1
0x4001312	        0x418d46ff	                      lea eax, [r14 - 1]	       403	intel_color.c	FUNCTION_10	IF_1	FOR_1
0x4001316	      0x4c8d74c308	              lea r14, [rbx + rax*8 + 8]	       403	intel_color.c	FUNCTION_10	IF_1	FOR_1
0x400131b	           0xfb73b	                   movzx edi, word [rbx]	       405	intel_color.c	FUNCTION_10	IF_1	FOR_1	CALL_6
0x400131e	      0xbe0a000000	                            mov esi, 0xa	       405	intel_color.c	FUNCTION_10	IF_1	FOR_1	CALL_6
0x4001323	        0x4883c308	                              add rbx, 8	       405	intel_color.c	FUNCTION_10	IF_1	FOR_1	CALL_6
0x4001327	      0xe800000000	                          call 0x400132c	       405	intel_color.c	FUNCTION_10	IF_1	FOR_1	CALL_6
0x400132c	         0xfb77bfa	               movzx edi, word [rbx - 6]	       406	intel_color.c	FUNCTION_10	IF_1	FOR_1	CALL_7
0x4001330	      0xbe0a000000	                            mov esi, 0xa	       406	intel_color.c	FUNCTION_10	IF_1	FOR_1	CALL_7
0x4001335	            0x89c5	                            mov ebp, eax	       405	intel_color.c	FUNCTION_10	IF_1	FOR_1	CALL_6
0x4001337	          0xc1e514	                           shl ebp, 0x14	       405	intel_color.c	FUNCTION_10	IF_1	FOR_1	CALL_6
0x400133a	      0xe800000000	                          call 0x400133f	       406	intel_color.c	FUNCTION_10	IF_1	FOR_1	CALL_7
0x400133f	         0xfb77bfc	               movzx edi, word [rbx - 4]	       407	intel_color.c	FUNCTION_10	IF_1	FOR_1	CALL_8
0x4001343	          0xc1e00a	                            shl eax, 0xa	       405	intel_color.c	FUNCTION_10	IF_1	FOR_1	CALL_6
0x4001346	      0xbe0a000000	                            mov esi, 0xa	       407	intel_color.c	FUNCTION_10	IF_1	FOR_1	CALL_8
0x400134b	             0x9c5	                             or ebp, eax	       405	intel_color.c	FUNCTION_10	IF_1	FOR_1	CALL_6
0x400134d	      0xe800000000	                          call 0x4001352	       407	intel_color.c	FUNCTION_10	IF_1	FOR_1	CALL_8
0x4001352	            0x89ea	                            mov edx, ebp	       409	intel_color.c	FUNCTION_10	IF_1	FOR_1	CALL_10
0x4001354	    0x4d8b84241808	            mov r8, qword [r12 + 0x818] 	       409	intel_color.c	FUNCTION_10	IF_1	FOR_1	CALL_10
0x400135c	      0xb901000000	                              mov ecx, 1	       409	intel_color.c	FUNCTION_10	IF_1	FOR_1	CALL_10
0x4001361	             0x9c2	                             or edx, eax	       409	intel_color.c	FUNCTION_10	IF_1	FOR_1	CALL_10
0x4001363	          0x4489fe	                           mov esi, r15d	       409	intel_color.c	FUNCTION_10	IF_1	FOR_1	CALL_10
0x4001366	          0x4c89e7	                            mov rdi, r12	       409	intel_color.c	FUNCTION_10	IF_1	FOR_1	CALL_10
0x4001369	      0xe800000000	                          call 0x400136e	       409	intel_color.c	FUNCTION_10	IF_1	FOR_1	CALL_10
0x400136e	          0x4939de	                            cmp r14, rbx	       403	intel_color.c	FUNCTION_10	IF_1	FOR_1
0x4001371	            0x75a8	                           jne 0x400131b	       403	intel_color.c	FUNCTION_10	IF_1	FOR_1
0x4001373	    0x410fb794240c	          movzx edx, word [r12 + 0x70c] 	       481	intel_color.c	FUNCTION_12	CALL_7
0x400137c	        0x498b7d00	                    mov rdi, qword [r13]	       481	intel_color.c	FUNCTION_12	CALL_7
0x4001380	    0x498db5f00100	                  lea rsi, [r13 + 0x1f0]	       481	intel_color.c	FUNCTION_12	CALL_7
0x4001387	      0xe814fbffff	      call sym.bdw_load_gamma_lut.isra.4	       481	intel_color.c	FUNCTION_12	CALL_7
0x400138c	          0x8b1c24	                    mov ebx, dword [rsp]	       485	intel_color.c	FUNCTION_12	CALL_10
0x400138f	    0x41c7858c0400	              mov dword [r13 + 0x48c], 3	       484	intel_color.c	FUNCTION_12
0x400139a	      0xb901000000	                              mov ecx, 1	       485	intel_color.c	FUNCTION_12	CALL_10
0x400139f	    0x498b84241808	           mov rax, qword [r12 + 0x818] 	       485	intel_color.c	FUNCTION_12	CALL_10
0x40013a7	          0x4c89e7	                            mov rdi, r12	       485	intel_color.c	FUNCTION_12	CALL_10
0x40013aa	      0xba03000000	                              mov edx, 3	       485	intel_color.c	FUNCTION_12	CALL_10
0x40013af	    0x81c380a40400	                        add ebx, 0x4a480	       485	intel_color.c	FUNCTION_12	CALL_10
0x40013b5	            0x89de	                            mov esi, ebx	       485	intel_color.c	FUNCTION_12	CALL_10
0x40013b7	      0xe800000000	                          call 0x40013bc	       485	intel_color.c	FUNCTION_12	CALL_10
0x40013bc	            0x89de	                            mov esi, ebx	       486	intel_color.c	FUNCTION_12	CALL_12
0x40013be	          0x4c89e7	                            mov rdi, r12	       486	intel_color.c	FUNCTION_12	CALL_12
0x40013c1	    0x498b8424f807	           mov rax, qword [r12 + 0x7f8] 	       486	intel_color.c	FUNCTION_12	CALL_12
0x40013c9	            0x31d2	                            xor edx, edx	       486	intel_color.c	FUNCTION_12	CALL_12
0x40013cb	      0xe800000000	                          call 0x40013d0	       486	intel_color.c	FUNCTION_12	CALL_12
0x40013d0	    0x498b84241808	           mov rax, qword [r12 + 0x818] 	       492	intel_color.c	FUNCTION_12	CALL_14
0x40013d8	          0x4c89e7	                            mov rdi, r12	       492	intel_color.c	FUNCTION_12	CALL_14
0x40013db	      0xb901000000	                              mov ecx, 1	       492	intel_color.c	FUNCTION_12	CALL_14
0x40013e0	            0x31d2	                            xor edx, edx	       492	intel_color.c	FUNCTION_12	CALL_14
0x40013e2	        0x8b742404	                mov esi, dword [rsp + 4]	       492	intel_color.c	FUNCTION_12	CALL_14
0x40013e6	      0xe800000000	                          call 0x40013eb	       492	intel_color.c	FUNCTION_12	CALL_14
0x40013eb	        0x4883c408	                              add rsp, 8	       493	intel_color.c	FUNCTION_12
0x40013ef	              0x5b	                                 pop rbx	       493	intel_color.c	FUNCTION_12
0x40013f0	              0x5d	                                 pop rbp	       493	intel_color.c	FUNCTION_12
0x40013f1	            0x415c	                                 pop r12	       493	intel_color.c	FUNCTION_12
0x40013f3	            0x415d	                                 pop r13	       493	intel_color.c	FUNCTION_12
0x40013f5	            0x415e	                                 pop r14	       493	intel_color.c	FUNCTION_12
0x40013f7	            0x415f	                                 pop r15	       493	intel_color.c	FUNCTION_12
0x40013f9	              0xc3	                                     ret	       493	intel_color.c	FUNCTION_12
0x40013fa	    0x4883bfe80100	              cmp qword [rdi + 0x1e8], 0	        79	intel_color.c	FUNCTION_1
0x4001402	     0xf85b0feffff	                           jne 0x40012b8	        79	intel_color.c	FUNCTION_1
0x4001408	    0x488b97f00100	           mov rdx, qword [rdi + 0x1f0] 	        81	intel_color.c	FUNCTION_1
0x400140f	          0x4885d2	                           test rdx, rdx	        80	intel_color.c	FUNCTION_1
0x4001412	     0xf84a0feffff	                            je 0x40012b8	        80	intel_color.c	FUNCTION_1
0x4001418	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	        81	intel_color.c	FUNCTION_1
0x400141c	        0x48c1ea03	                              shr rdx, 3	        81	intel_color.c	FUNCTION_1
0x4001420	    0x81fa00010000	                          cmp edx, 0x100	        81	intel_color.c	FUNCTION_1
0x4001426	     0xf858cfeffff	                           jne 0x40012b8	        81	intel_color.c	FUNCTION_1
0x400142c	        0x4883c408	                              add rsp, 8	       493	intel_color.c	FUNCTION_12
0x4001430	              0x5b	                                 pop rbx	       493	intel_color.c	FUNCTION_12
0x4001431	              0x5d	                                 pop rbp	       493	intel_color.c	FUNCTION_12
0x4001432	            0x415c	                                 pop r12	       493	intel_color.c	FUNCTION_12
0x4001434	            0x415d	                                 pop r13	       493	intel_color.c	FUNCTION_12
0x4001436	            0x415e	                                 pop r14	       493	intel_color.c	FUNCTION_12
0x4001438	            0x415f	                                 pop r15	       493	intel_color.c	FUNCTION_12
0x400143a	      0xe921f3ffff	               jmp sym.haswell_load_luts	       476	intel_color.c	FUNCTION_12	IF_1	CALL_5
0x400143f	          0x4585f6	                         test r14d, r14d	       412	intel_color.c	FUNCTION_10	ELSE_1	FOR_2
0x4001442	     0xf842bffffff	                            je 0x4001373	       412	intel_color.c	FUNCTION_10	ELSE_1	FOR_2
0x4001448	          0x8b0424	                    mov eax, dword [rsp]	       412	intel_color.c	FUNCTION_10	ELSE_1	FOR_2
0x400144b	        0x418d5eff	                      lea ebx, [r14 - 1]	       412	intel_color.c	FUNCTION_10	ELSE_1	FOR_2
0x400144f	          0x4531ff	                          xor r15d, r15d	       412	intel_color.c	FUNCTION_10	ELSE_1	FOR_2
0x4001452	    0x8da804a40400	                lea ebp, [rax + 0x4a404]	       412	intel_color.c	FUNCTION_10	ELSE_1	FOR_2
0x4001458	          0x4489f0	                           mov eax, r14d	       412	intel_color.c	FUNCTION_10	ELSE_1	FOR_2
0x400145b	          0xc1e00a	                            shl eax, 0xa	       412	intel_color.c	FUNCTION_10	ELSE_1	FOR_2
0x400145e	          0x4429f0	                           sub eax, r14d	       412	intel_color.c	FUNCTION_10	ELSE_1	FOR_2
0x4001461	          0x4189c6	                           mov r14d, eax	       412	intel_color.c	FUNCTION_10	ELSE_1	FOR_2
0x4001464	          0x4489f8	                           mov eax, r15d	       413	intel_color.c	FUNCTION_10	ELSE_1	FOR_2
0x4001467	            0x31d2	                            xor edx, edx	       413	intel_color.c	FUNCTION_10	ELSE_1	FOR_2
0x4001469	    0x4181c7ff0300	                         add r15d, 0x3ff	       413	intel_color.c	FUNCTION_10	ELSE_1	FOR_2
0x4001470	            0xf7f3	                                 div ebx	       413	intel_color.c	FUNCTION_10	ELSE_1	FOR_2
0x4001472	    0x4d8b84241808	            mov r8, qword [r12 + 0x818] 	       415	intel_color.c	FUNCTION_10	ELSE_1	FOR_2	CALL_12
0x400147a	            0x89ee	                            mov esi, ebp	       415	intel_color.c	FUNCTION_10	ELSE_1	FOR_2	CALL_12
0x400147c	          0x4c89e7	                            mov rdi, r12	       415	intel_color.c	FUNCTION_10	ELSE_1	FOR_2	CALL_12
0x400147f	            0x89c1	                            mov ecx, eax	       415	intel_color.c	FUNCTION_10	ELSE_1	FOR_2	CALL_12
0x4001481	            0x89c2	                            mov edx, eax	       415	intel_color.c	FUNCTION_10	ELSE_1	FOR_2	CALL_12
0x4001483	          0xc1e114	                           shl ecx, 0x14	       415	intel_color.c	FUNCTION_10	ELSE_1	FOR_2	CALL_12
0x4001486	          0xc1e20a	                            shl edx, 0xa	       415	intel_color.c	FUNCTION_10	ELSE_1	FOR_2	CALL_12
0x4001489	             0x9ca	                             or edx, ecx	       415	intel_color.c	FUNCTION_10	ELSE_1	FOR_2	CALL_12
0x400148b	      0xb901000000	                              mov ecx, 1	       415	intel_color.c	FUNCTION_10	ELSE_1	FOR_2	CALL_12
0x4001490	             0x9c2	                             or edx, eax	       415	intel_color.c	FUNCTION_10	ELSE_1	FOR_2	CALL_12
0x4001492	      0xe800000000	                          call 0x4001497	       415	intel_color.c	FUNCTION_10	ELSE_1	FOR_2	CALL_12
0x4001497	          0x4539f7	                          cmp r15d, r14d	       412	intel_color.c	FUNCTION_10	ELSE_1	FOR_2
0x400149a	            0x75c8	                           jne 0x4001464	       412	intel_color.c	FUNCTION_10	ELSE_1	FOR_2
0x400149c	      0xe9d2feffff	                           jmp 0x4001373	       412	intel_color.c	FUNCTION_10	ELSE_1	FOR_2
intel_color_init	CALL,14:functions,0:WHILE,0:IF,5:DO,0:FOR,0:ELSE,4:SWITCH,0	48
0x4001570	              0x55	                                push rbp	       646	intel_color.c	FUNCTION_18
0x4001571	              0x53	                                push rbx	       646	intel_color.c	FUNCTION_18
0x4001572	      0xbe00010000	                          mov esi, 0x100	       649	intel_color.c	FUNCTION_18	CALL_2
0x4001577	          0x488b1f	                    mov rbx, qword [rdi]	       647	intel_color.c	FUNCTION_18	CALL_1
0x400157a	          0x4889fd	                            mov rbp, rdi	       646	intel_color.c	FUNCTION_18
0x400157d	      0xe800000000	                          call 0x4001582	       649	intel_color.c	FUNCTION_18	CALL_2
0x4001582	    0x8b8364060000	           mov eax, dword [rbx + 0x664] 	       651	intel_color.c	FUNCTION_18	IF_1	CALL_3
0x4001588	      0xa900002000	                      test eax, 0x200000	       651	intel_color.c	FUNCTION_18	IF_1	CALL_3
0x400158d	            0x7431	                            je 0x40015c0	       651	intel_color.c	FUNCTION_18	IF_1	CALL_3
0x400158f	    0x48c783e85500	            mov qword [rbx + 0x55e8], 0 	       652	intel_color.c	FUNCTION_18	IF_1
0x400159a	    0x48c783f05500	            mov qword [rbx + 0x55f0], 0 	       653	intel_color.c	FUNCTION_18	IF_1
0x40015a5	     0xfb7b30c0700	          movzx esi, word [rbx + 0x70c] 	       669	intel_color.c	FUNCTION_18	IF_5	CALL_10
0x40015ac	          0x6685f6	                             test si, si	       669	intel_color.c	FUNCTION_18	IF_5	CALL_10
0x40015af	            0x740c	                            je 0x40015bd	       669	intel_color.c	FUNCTION_18	IF_5	CALL_10
0x40015b1	     0xfb78b0e0700	          movzx ecx, word [rbx + 0x70e] 	       670	intel_color.c	FUNCTION_18	IF_5	CALL_11
0x40015b8	          0x6685c9	                             test cx, cx	       669	intel_color.c	FUNCTION_18	IF_5	CALL_10
0x40015bb	            0x7553	                           jne 0x4001610	       669	intel_color.c	FUNCTION_18	IF_5	CALL_10
0x40015bd	              0x5b	                                 pop rbx	       675	intel_color.c	FUNCTION_18
0x40015be	              0x5d	                                 pop rbp	       675	intel_color.c	FUNCTION_18
0x40015bf	              0xc3	                                     ret	       675	intel_color.c	FUNCTION_18
0x40015c0	      0xa900000800	                       test eax, 0x80000	       654	intel_color.c	FUNCTION_18	ELSE_1	IF_2	CALL_4
0x40015c5	            0x7418	                            je 0x40015df	       654	intel_color.c	FUNCTION_18	ELSE_1	IF_2	CALL_4
0x40015c7	    0x48c783e85500	            mov qword [rbx + 0x55e8], 0 	       655	intel_color.c	FUNCTION_18	ELSE_1	IF_2
0x40015d2	    0x48c783f05500	            mov qword [rbx + 0x55f0], 0 	       656	intel_color.c	FUNCTION_18	ELSE_1	IF_2
0x40015dd	            0xebc6	                           jmp 0x40015a5	       656	intel_color.c	FUNCTION_18	ELSE_1	IF_2
0x40015df	      0xa900001000	                      test eax, 0x100000	       657	intel_color.c	FUNCTION_18	ELSE_2	IF_3	CALL_6
0x40015e4	            0x7512	                           jne 0x40015f8	       657	intel_color.c	FUNCTION_18	ELSE_2	IF_3	CALL_6
0x40015e6	    0xf6835b060000	              test byte [rbx + 0x65b], 1	       657	intel_color.c	FUNCTION_18	ELSE_2	IF_3	CALL_6
0x40015ed	            0x7430	                            je 0x400161f	       657	intel_color.c	FUNCTION_18	ELSE_2	IF_3	CALL_6
0x40015ef	    0xf68377060000	              test byte [rbx + 0x677], 2	       657	intel_color.c	FUNCTION_18	ELSE_2	IF_3	CALL_6
0x40015f6	            0x7527	                           jne 0x400161f	       657	intel_color.c	FUNCTION_18	ELSE_2	IF_3	CALL_6
0x40015f8	    0x48c783e85500	            mov qword [rbx + 0x55e8], 0 	       659	intel_color.c	FUNCTION_18	ELSE_2	IF_3
0x4001603	    0x48c783f05500	            mov qword [rbx + 0x55f0], 0 	       660	intel_color.c	FUNCTION_18	ELSE_2	IF_3
0x400160e	            0xeb95	                           jmp 0x40015a5	       660	intel_color.c	FUNCTION_18	ELSE_2	IF_3
0x4001610	          0x4889ef	                            mov rdi, rbp	       671	intel_color.c	FUNCTION_18	IF_5	CALL_12
0x4001613	      0xba01000000	                              mov edx, 1	       671	intel_color.c	FUNCTION_18	IF_5	CALL_12
0x4001618	              0x5b	                                 pop rbx	       675	intel_color.c	FUNCTION_18
0x4001619	              0x5d	                                 pop rbp	       675	intel_color.c	FUNCTION_18
0x400161a	      0xe900000000	                           jmp 0x400161f	       671	intel_color.c	FUNCTION_18	IF_5	CALL_12
0x400161f	      0xa900008000	                      test eax, 0x800000	       657	intel_color.c	FUNCTION_18	ELSE_2	IF_3	CALL_6
0x4001624	            0x75d2	                           jne 0x40015f8	       657	intel_color.c	FUNCTION_18	ELSE_2	IF_3	CALL_6
0x4001626	      0xa90000000a	                     test eax, 0xa000000	       661	intel_color.c	FUNCTION_18	ELSE_3	IF_4	CALL_9
0x400162b	            0x741b	                            je 0x4001648	       661	intel_color.c	FUNCTION_18	ELSE_3	IF_4	CALL_9
0x400162d	    0x48c783e85500	            mov qword [rbx + 0x55e8], 0 	       662	intel_color.c	FUNCTION_18	ELSE_3	IF_4
0x4001638	    0x48c783f05500	            mov qword [rbx + 0x55f0], 0 	       663	intel_color.c	FUNCTION_18	ELSE_3	IF_4
0x4001643	      0xe95dffffff	                           jmp 0x40015a5	       663	intel_color.c	FUNCTION_18	ELSE_3	IF_4
0x4001648	    0x48c783f05500	            mov qword [rbx + 0x55f0], 0 	       665	intel_color.c	FUNCTION_18	ELSE_4
0x4001653	      0xe94dffffff	                           jmp 0x40015a5	       665	intel_color.c	FUNCTION_18	ELSE_4
intel_color_set_csc	CALL,2:functions,0:WHILE,0:IF,1:DO,0:FOR,0:ELSE,0:SWITCH,0	7
0x40014b0	          0x488b07	                    mov rax, qword [rdi]	       305	intel_color.c	FUNCTION_6
0x40014b3	          0x488b00	                    mov rax, qword [rax]	       308	intel_color.c	FUNCTION_6	IF_1
0x40014b6	    0x488b80e85500	          mov rax, qword [rax + 0x55e8] 	       308	intel_color.c	FUNCTION_6	IF_1
0x40014bd	          0x4885c0	                           test rax, rax	       308	intel_color.c	FUNCTION_6	IF_1
0x40014c0	            0x7405	                            je 0x40014c7	       308	intel_color.c	FUNCTION_6	IF_1
0x40014c2	      0xe900000000	                           jmp 0x40014c7	       309	intel_color.c	FUNCTION_6	CALL_2
0x40014c7	            0xf3c3	                                     ret	       309	intel_color.c	FUNCTION_6	CALL_2
intel_color_check	CALL,6:functions,0:WHILE,0:IF,2:DO,0:FOR,0:ELSE,0:SWITCH,0	32
0x40014f0	    0x488b8ee00100	           mov rcx, qword [rsi + 0x1e0] 	       629	intel_color.c	FUNCTION_17	IF_1
0x40014f7	          0x488b3f	                    mov rdi, qword [rdi]	       619	intel_color.c	FUNCTION_17	CALL_1
0x40014fa	          0x4885c9	                           test rcx, rcx	       629	intel_color.c	FUNCTION_17	IF_1
0x40014fd	    0x440fb7870c07	          movzx r8d, word [rdi + 0x70c] 	       622	intel_color.c	FUNCTION_17	CALL_2
0x4001505	            0x7417	                            je 0x400151e	       629	intel_color.c	FUNCTION_17	IF_1
0x4001507	        0x488b5148	            mov rdx, qword [rcx + 0x48] 	       629	intel_color.c	FUNCTION_17	IF_1
0x400150b	      0xb8eaffffff	                     mov eax, 0xffffffea	       642	intel_color.c	FUNCTION_17
0x4001510	        0x48c1ea03	                              shr rdx, 3	       629	intel_color.c	FUNCTION_17	IF_1
0x4001514	          0x4863d2	                         movsxd rdx, edx	       629	intel_color.c	FUNCTION_17	IF_1
0x4001517	          0x4939d0	                             cmp r8, rdx	       629	intel_color.c	FUNCTION_17	IF_1
0x400151a	            0x7402	                            je 0x400151e	       629	intel_color.c	FUNCTION_17	IF_1
0x400151c	            0xf3c3	                                     ret	       643	intel_color.c	FUNCTION_17
0x400151e	    0x488b86f00100	           mov rax, qword [rsi + 0x1f0] 	       631	intel_color.c	FUNCTION_17	IF_1
0x4001525	          0x4885c0	                           test rax, rax	       630	intel_color.c	FUNCTION_17	IF_1	CALL_4
0x4001528	            0x743a	                            je 0x4001564	       630	intel_color.c	FUNCTION_17	IF_1	CALL_4
0x400152a	        0x488b5048	            mov rdx, qword [rax + 0x48] 	        50	drm_color_mgmt.h	FUNCTION_19
0x400152e	     0xfb7bf0e0700	          movzx edi, word [rdi + 0x70e] 	       631	intel_color.c	FUNCTION_17	IF_1
0x4001535	        0x48c1ea03	                              shr rdx, 3	        50	drm_color_mgmt.h	FUNCTION_19
0x4001539	          0x4863c2	                         movsxd rax, edx	       631	intel_color.c	FUNCTION_17	IF_1
0x400153c	          0x4839c7	                            cmp rdi, rax	       631	intel_color.c	FUNCTION_17	IF_1
0x400153f	            0x7423	                            je 0x4001564	       631	intel_color.c	FUNCTION_17	IF_1
0x4001541	          0x4885c9	                           test rcx, rcx	        81	intel_color.c	FUNCTION_1
0x4001544	      0xb8eaffffff	                     mov eax, 0xffffffea	       642	intel_color.c	FUNCTION_17
0x4001549	            0x75d1	                           jne 0x400151c	        81	intel_color.c	FUNCTION_1
0x400154b	    0x4883bee80100	              cmp qword [rsi + 0x1e8], 0	        79	intel_color.c	FUNCTION_1
0x4001553	            0x75c7	                           jne 0x400151c	        79	intel_color.c	FUNCTION_1
0x4001555	    0x81fa00010000	                          cmp edx, 0x100	       633	intel_color.c	FUNCTION_17	IF_1
0x400155b	      0xba00000000	                              mov edx, 0	       633	intel_color.c	FUNCTION_17	IF_1
0x4001560	           0xf44c2	                          cmove eax, edx	       633	intel_color.c	FUNCTION_17	IF_1
0x4001563	              0xc3	                                     ret	       633	intel_color.c	FUNCTION_17	IF_1
0x4001564	            0x31c0	                            xor eax, eax	       633	intel_color.c	FUNCTION_17	IF_1
0x4001566	              0xc3	                                     ret	       643	intel_color.c	FUNCTION_17
cherryview_load_csc_matrix	CALL,17:functions,0:WHILE,0:IF,3:DO,0:FOR,1:ELSE,0:SWITCH,0	136
0x4000040	            0x4155	                                push r13	       256	intel_color.c	FUNCTION_5
0x4000042	            0x4154	                                push r12	       256	intel_color.c	FUNCTION_5
0x4000044	          0x4989fc	                            mov r12, rdi	       256	intel_color.c	FUNCTION_5
0x4000047	              0x55	                                push rbp	       256	intel_color.c	FUNCTION_5
0x4000048	              0x53	                                push rbx	       256	intel_color.c	FUNCTION_5
0x4000049	        0x4883ec20	                           sub rsp, 0x20	       256	intel_color.c	FUNCTION_5
0x400004d	    0x65488b042528	                mov rax, qword gs:[0x28]	       256	intel_color.c	FUNCTION_5
0x4000056	      0x4889442418	             mov qword [rsp + 0x18], rax	       256	intel_color.c	FUNCTION_5
0x400005b	            0x31c0	                            xor eax, eax	       256	intel_color.c	FUNCTION_5
0x400005d	          0x488b07	                    mov rax, qword [rdi]	       257	intel_color.c	FUNCTION_5
0x4000060	          0x488b28	                    mov rbp, qword [rax]	       258	intel_color.c	FUNCTION_5
0x4000063	    0x8b98b0040000	           mov ebx, dword [rax + 0x4b0] 	       260	intel_color.c	FUNCTION_5	CALL_2
0x4000069	    0x488b87e80100	           mov rax, qword [rdi + 0x1e8] 	       263	intel_color.c	FUNCTION_5	IF_1
0x4000070	          0x4885c0	                           test rax, rax	       263	intel_color.c	FUNCTION_5	IF_1
0x4000073	     0xf8492010000	                            je 0x400020b	       263	intel_color.c	FUNCTION_5	IF_1
0x4000079	        0x4c8b4850	              mov r9, qword [rax + 0x50]	       264	intel_color.c	FUNCTION_5	IF_1
0x400007d	            0x31c0	                            xor eax, eax	       265	intel_color.c	FUNCTION_5	IF_1
0x400007f	    0x48c744240600	                  mov qword [rsp + 6], 0	       265	intel_color.c	FUNCTION_5	IF_1
0x4000088	    0x48c744240e00	                mov qword [rsp + 0xe], 0	       265	intel_color.c	FUNCTION_5	IF_1
0x4000091	      0x6689442416	               mov word [rsp + 0x16], ax	       265	intel_color.c	FUNCTION_5	IF_1
0x4000096	            0x31c9	                            xor ecx, ecx	       265	intel_color.c	FUNCTION_5	IF_1
0x4000098	    0x49b8ffffffff	          movabs r8, 0x7fffffffffffffff 	       275	intel_color.c	FUNCTION_5	IF_1	FOR_1	CALL_4
0x40000a2	    0x48bfffffffff	                 movabs rdi, 0x7ffffffff	       275	intel_color.c	FUNCTION_5	IF_1	FOR_1	CALL_4
0x40000ac	        0x498b1489	             mov rdx, qword [r9 + rcx*4]	       270	intel_color.c	FUNCTION_5	IF_1	FOR_1
0x40000b0	      0xbe0080ffff	                     mov esi, 0xffff8000	       270	intel_color.c	FUNCTION_5	IF_1	FOR_1
0x40000b5	          0x4889d0	                            mov rax, rdx	       275	intel_color.c	FUNCTION_5	IF_1	FOR_1	CALL_4
0x40000b8	          0x4c21c0	                             and rax, r8	       275	intel_color.c	FUNCTION_5	IF_1	FOR_1	CALL_4
0x40000bb	    0x480500000800	                        add rax, 0x80000	       275	intel_color.c	FUNCTION_5	IF_1	FOR_1	CALL_4
0x40000c1	          0x4839f8	                            cmp rax, rdi	       275	intel_color.c	FUNCTION_5	IF_1	FOR_1	CALL_4
0x40000c4	        0x480f47c7	                          cmova rax, rdi	       275	intel_color.c	FUNCTION_5	IF_1	FOR_1	CALL_4
0x40000c8	          0x4885d2	                           test rdx, rdx	       278	intel_color.c	FUNCTION_5	IF_1	FOR_1	IF_2
0x40000cb	            0x7805	                            js 0x40000d2	       278	intel_color.c	FUNCTION_5	IF_1	FOR_1	IF_2
0x40000cd	       0xfb7740c06	        movzx esi, word [rsp + rcx + 6] 	       278	intel_color.c	FUNCTION_5	IF_1	FOR_1	IF_2
0x40000d2	          0x4989c2	                            mov r10, rax	       281	intel_color.c	FUNCTION_5	IF_1	FOR_1
0x40000d5	        0x48c1e814	                           shr rax, 0x14	       281	intel_color.c	FUNCTION_5	IF_1	FOR_1
0x40000d9	        0x49c1ea20	                           shr r10, 0x20	       281	intel_color.c	FUNCTION_5	IF_1	FOR_1
0x40000dd	            0x89c2	                            mov edx, eax	       281	intel_color.c	FUNCTION_5	IF_1	FOR_1
0x40000df	        0x41c1e20c	                           shl r10d, 0xc	       281	intel_color.c	FUNCTION_5	IF_1	FOR_1
0x40000e3	      0x6681e2ff0f	                           and dx, 0xfff	       281	intel_color.c	FUNCTION_5	IF_1	FOR_1
0x40000e8	          0x4489d0	                           mov eax, r10d	       281	intel_color.c	FUNCTION_5	IF_1	FOR_1
0x40000eb	             0x9d0	                             or eax, edx	       281	intel_color.c	FUNCTION_5	IF_1	FOR_1
0x40000ed	             0x9f0	                             or eax, esi	       281	intel_color.c	FUNCTION_5	IF_1	FOR_1
0x40000ef	      0x6689440c06	            mov word [rsp + rcx + 6], ax	       281	intel_color.c	FUNCTION_5	IF_1	FOR_1
0x40000f4	        0x4883c102	                              add rcx, 2	       281	intel_color.c	FUNCTION_5	IF_1	FOR_1
0x40000f8	        0x4883f912	                           cmp rcx, 0x12	       268	intel_color.c	FUNCTION_5	IF_1	FOR_1	CALL_3
0x40000fc	            0x75ae	                           jne 0x40000ac	       268	intel_color.c	FUNCTION_5	IF_1	FOR_1	CALL_3
0x40000fe	          0x4189dd	                           mov r13d, ebx	       284	intel_color.c	FUNCTION_5	IF_1	CALL_6
0x4000101	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	       284	intel_color.c	FUNCTION_5	IF_1	CALL_6
0x4000108	      0xb901000000	                              mov ecx, 1	       284	intel_color.c	FUNCTION_5	IF_1	CALL_6
0x400010d	        0x41c1e50d	                           shl r13d, 0xd	       284	intel_color.c	FUNCTION_5	IF_1	CALL_6
0x4000111	        0x8b542406	                mov edx, dword [rsp + 6]	       284	intel_color.c	FUNCTION_5	IF_1	CALL_6
0x4000115	          0x4889ef	                            mov rdi, rbp	       284	intel_color.c	FUNCTION_5	IF_1	CALL_6
0x4000118	    0x418db500791e	               lea esi, [r13 + 0x1e7900]	       284	intel_color.c	FUNCTION_5	IF_1	CALL_6
0x400011f	      0xe800000000	                          call 0x4000124	       284	intel_color.c	FUNCTION_5	IF_1	CALL_6
0x4000124	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	       286	intel_color.c	FUNCTION_5	IF_1	CALL_8
0x400012b	    0x418db504791e	               lea esi, [r13 + 0x1e7904]	       286	intel_color.c	FUNCTION_5	IF_1	CALL_8
0x4000132	      0xb901000000	                              mov ecx, 1	       286	intel_color.c	FUNCTION_5	IF_1	CALL_8
0x4000137	        0x8b54240a	              mov edx, dword [rsp + 0xa]	       286	intel_color.c	FUNCTION_5	IF_1	CALL_8
0x400013b	          0x4889ef	                            mov rdi, rbp	       286	intel_color.c	FUNCTION_5	IF_1	CALL_8
0x400013e	      0xe800000000	                          call 0x4000143	       286	intel_color.c	FUNCTION_5	IF_1	CALL_8
0x4000143	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	       288	intel_color.c	FUNCTION_5	IF_1	CALL_10
0x400014a	    0x418db508791e	               lea esi, [r13 + 0x1e7908]	       288	intel_color.c	FUNCTION_5	IF_1	CALL_10
0x4000151	      0xb901000000	                              mov ecx, 1	       288	intel_color.c	FUNCTION_5	IF_1	CALL_10
0x4000156	        0x8b54240e	              mov edx, dword [rsp + 0xe]	       288	intel_color.c	FUNCTION_5	IF_1	CALL_10
0x400015a	          0x4889ef	                            mov rdi, rbp	       288	intel_color.c	FUNCTION_5	IF_1	CALL_10
0x400015d	      0xe800000000	                          call 0x4000162	       288	intel_color.c	FUNCTION_5	IF_1	CALL_10
0x4000162	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	       290	intel_color.c	FUNCTION_5	IF_1	CALL_12
0x4000169	    0x418db50c791e	               lea esi, [r13 + 0x1e790c]	       290	intel_color.c	FUNCTION_5	IF_1	CALL_12
0x4000170	      0xb901000000	                              mov ecx, 1	       290	intel_color.c	FUNCTION_5	IF_1	CALL_12
0x4000175	        0x8b542412	            mov edx, dword [rsp + 0x12] 	       290	intel_color.c	FUNCTION_5	IF_1	CALL_12
0x4000179	          0x4889ef	                            mov rdi, rbp	       290	intel_color.c	FUNCTION_5	IF_1	CALL_12
0x400017c	      0xe800000000	                          call 0x4000181	       290	intel_color.c	FUNCTION_5	IF_1	CALL_12
0x4000181	       0xfb7542416	           movzx edx, word [rsp + 0x16] 	       292	intel_color.c	FUNCTION_5	IF_1	CALL_14
0x4000186	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	       292	intel_color.c	FUNCTION_5	IF_1	CALL_14
0x400018d	    0x418db510791e	               lea esi, [r13 + 0x1e7910]	       292	intel_color.c	FUNCTION_5	IF_1	CALL_14
0x4000194	      0xb901000000	                              mov ecx, 1	       292	intel_color.c	FUNCTION_5	IF_1	CALL_14
0x4000199	          0x4889ef	                            mov rdi, rbp	       292	intel_color.c	FUNCTION_5	IF_1	CALL_14
0x400019c	      0xe800000000	                          call 0x40001a1	       292	intel_color.c	FUNCTION_5	IF_1	CALL_14
0x40001a1	    0x4983bc24e801	              cmp qword [r12 + 0x1e8], 0	       295	intel_color.c	FUNCTION_5
0x40001aa	            0x745f	                            je 0x400020b	       295	intel_color.c	FUNCTION_5
0x40001ac	    0x498b8424e001	           mov rax, qword [r12 + 0x1e0] 	        79	intel_color.c	FUNCTION_1
0x40001b4	      0xb902000000	                              mov ecx, 2	       295	intel_color.c	FUNCTION_5
0x40001b9	            0x31d2	                            xor edx, edx	       297	intel_color.c	FUNCTION_5	IF_3
0x40001bb	          0x4885c0	                           test rax, rax	       297	intel_color.c	FUNCTION_5	IF_3
0x40001be	           0xf95c2	                                setne dl	       297	intel_color.c	FUNCTION_5	IF_3
0x40001c1	    0x4983bc24f001	              cmp qword [r12 + 0x1f0], 1	       298	intel_color.c	FUNCTION_5	IF_3
0x40001ca	            0x19c0	                            sbb eax, eax	       298	intel_color.c	FUNCTION_5	IF_3
0x40001cc	            0xf7d0	                                 not eax	       298	intel_color.c	FUNCTION_5	IF_3
0x40001ce	          0x83e004	                              and eax, 4	       298	intel_color.c	FUNCTION_5	IF_3
0x40001d1	             0x9c2	                             or edx, eax	       297	intel_color.c	FUNCTION_5	IF_3
0x40001d3	             0x9ca	                             or edx, ecx	       297	intel_color.c	FUNCTION_5	IF_3
0x40001d5	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	       300	intel_color.c	FUNCTION_5	CALL_17
0x40001dc	    0x418db5007a1e	               lea esi, [r13 + 0x1e7a00]	       300	intel_color.c	FUNCTION_5	CALL_17
0x40001e3	      0xb901000000	                              mov ecx, 1	       300	intel_color.c	FUNCTION_5	CALL_17
0x40001e8	          0x4889ef	                            mov rdi, rbp	       300	intel_color.c	FUNCTION_5	CALL_17
0x40001eb	      0xe800000000	                          call 0x40001f0	       300	intel_color.c	FUNCTION_5	CALL_17
0x40001f0	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       301	intel_color.c	FUNCTION_5
0x40001f5	    0x654833042528	                xor rax, qword gs:[0x28]	       301	intel_color.c	FUNCTION_5
0x40001fe	            0x7570	                           jne 0x4000270	       301	intel_color.c	FUNCTION_5
0x4000200	        0x4883c420	                           add rsp, 0x20	       301	intel_color.c	FUNCTION_5
0x4000204	              0x5b	                                 pop rbx	       301	intel_color.c	FUNCTION_5
0x4000205	              0x5d	                                 pop rbp	       301	intel_color.c	FUNCTION_5
0x4000206	            0x415c	                                 pop r12	       301	intel_color.c	FUNCTION_5
0x4000208	            0x415d	                                 pop r13	       301	intel_color.c	FUNCTION_5
0x400020a	              0xc3	                                     ret	       301	intel_color.c	FUNCTION_5
0x400020b	    0x498b8424e001	           mov rax, qword [r12 + 0x1e0] 	        79	intel_color.c	FUNCTION_1
0x4000213	          0x4885c0	                           test rax, rax	        79	intel_color.c	FUNCTION_1
0x4000216	            0x754b	                           jne 0x4000263	        79	intel_color.c	FUNCTION_1
0x4000218	    0x498b8424f001	           mov rax, qword [r12 + 0x1f0] 	        81	intel_color.c	FUNCTION_1
0x4000220	          0x4885c0	                           test rax, rax	        80	intel_color.c	FUNCTION_1
0x4000223	            0x7420	                            je 0x4000245	        80	intel_color.c	FUNCTION_1
0x4000225	        0x488b4048	            mov rax, qword [rax + 0x48] 	        81	intel_color.c	FUNCTION_1
0x4000229	        0x48c1e803	                              shr rax, 3	        81	intel_color.c	FUNCTION_1
0x400022d	      0x3d00010000	                          cmp eax, 0x100	        81	intel_color.c	FUNCTION_1
0x4000232	            0x7422	                            je 0x4000256	        81	intel_color.c	FUNCTION_1
0x4000234	          0xc1e30d	                            shl ebx, 0xd	        81	intel_color.c	FUNCTION_1
0x4000237	            0x31d2	                            xor edx, edx	       297	intel_color.c	FUNCTION_5	IF_3
0x4000239	            0x31c9	                            xor ecx, ecx	       297	intel_color.c	FUNCTION_5	IF_3
0x400023b	          0x4189dd	                           mov r13d, ebx	       297	intel_color.c	FUNCTION_5	IF_3
0x400023e	      0xb804000000	                              mov eax, 4	       298	intel_color.c	FUNCTION_5	IF_3
0x4000243	            0xeb8c	                           jmp 0x40001d1	       298	intel_color.c	FUNCTION_5	IF_3
0x4000245	          0xc1e30d	                            shl ebx, 0xd	       298	intel_color.c	FUNCTION_5	IF_3
0x4000248	            0x31d2	                            xor edx, edx	       297	intel_color.c	FUNCTION_5	IF_3
0x400024a	            0x31c9	                            xor ecx, ecx	       297	intel_color.c	FUNCTION_5	IF_3
0x400024c	          0x4189dd	                           mov r13d, ebx	       297	intel_color.c	FUNCTION_5	IF_3
0x400024f	            0x31c0	                            xor eax, eax	       298	intel_color.c	FUNCTION_5	IF_3
0x4000251	      0xe97bffffff	                           jmp 0x40001d1	       298	intel_color.c	FUNCTION_5	IF_3
0x4000256	          0xc1e30d	                            shl ebx, 0xd	       298	intel_color.c	FUNCTION_5	IF_3
0x4000259	            0x31d2	                            xor edx, edx	        81	intel_color.c	FUNCTION_1
0x400025b	          0x4189dd	                           mov r13d, ebx	        81	intel_color.c	FUNCTION_1
0x400025e	      0xe972ffffff	                           jmp 0x40001d5	        81	intel_color.c	FUNCTION_1
0x4000263	          0xc1e30d	                            shl ebx, 0xd	        81	intel_color.c	FUNCTION_1
0x4000266	            0x31c9	                            xor ecx, ecx	        79	intel_color.c	FUNCTION_1
0x4000268	          0x4189dd	                           mov r13d, ebx	        79	intel_color.c	FUNCTION_1
0x400026b	      0xe949ffffff	                           jmp 0x40001b9	        79	intel_color.c	FUNCTION_1
0x4000270	      0xe800000000	                          call 0x4000275	       301	intel_color.c	FUNCTION_5
cherryview_load_luts	CALL,27:functions,0:WHILE,0:IF,3:DO,0:FOR,2:ELSE,0:SWITCH,0	194
0x4000430	            0x4157	                                push r15	       549	intel_color.c	FUNCTION_15
0x4000432	            0x4156	                                push r14	       549	intel_color.c	FUNCTION_15
0x4000434	          0x4989fe	                            mov r14, rdi	       549	intel_color.c	FUNCTION_15
0x4000437	            0x4155	                                push r13	       549	intel_color.c	FUNCTION_15
0x4000439	            0x4154	                                push r12	       549	intel_color.c	FUNCTION_15
0x400043b	              0x55	                                push rbp	       549	intel_color.c	FUNCTION_15
0x400043c	              0x53	                                push rbx	       549	intel_color.c	FUNCTION_15
0x400043d	        0x4883ec18	                           sub rsp, 0x18	       549	intel_color.c	FUNCTION_15
0x4000441	          0x488b07	                    mov rax, qword [rdi]	       550	intel_color.c	FUNCTION_15
0x4000444	      0x4889442410	             mov qword [rsp + 0x10], rax	       550	intel_color.c	FUNCTION_15
0x4000449	          0x488b18	                    mov rbx, qword [rax]	       551	intel_color.c	FUNCTION_15	CALL_1
0x400044c	    0x8b80b0040000	           mov eax, dword [rax + 0x4b0] 	       552	intel_color.c	FUNCTION_15	CALL_2
0x4000452	        0x8944240c	              mov dword [rsp + 0xc], eax	       552	intel_color.c	FUNCTION_15	CALL_2
0x4000456	    0x488b87e00100	           mov rax, qword [rdi + 0x1e0] 	        79	intel_color.c	FUNCTION_1
0x400045d	          0x4885c0	                           test rax, rax	        81	intel_color.c	FUNCTION_1
0x4000460	     0xf8418020000	                            je 0x400067e	        81	intel_color.c	FUNCTION_1
0x4000466	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       567	intel_color.c	FUNCTION_15	IF_2
0x400046a	     0xfb7830c0700	          movzx eax, word [rbx + 0x70c] 	       568	intel_color.c	FUNCTION_15	IF_2	CALL_8
0x4000471	            0x85c0	                           test eax, eax	       569	intel_color.c	FUNCTION_15	IF_2	FOR_1
0x4000473	     0xf849d000000	                            je 0x4000516	       569	intel_color.c	FUNCTION_15	IF_2	FOR_1
0x4000479	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	       569	intel_color.c	FUNCTION_15	IF_2	FOR_1
0x400047d	          0x83e801	                              sub eax, 1	       569	intel_color.c	FUNCTION_15	IF_2	FOR_1
0x4000480	        0x488d6a02	                      lea rbp, [rdx + 2]	       569	intel_color.c	FUNCTION_15	IF_2	FOR_1
0x4000484	      0x488d44c20a	           lea rax, [rdx + rax*8 + 0xa] 	       569	intel_color.c	FUNCTION_15	IF_2	FOR_1
0x4000489	    0x448da1f30000	                  lea r12d, [rcx + 0xf3]	       569	intel_color.c	FUNCTION_15	IF_2	FOR_1
0x4000490	        0x48890424	                    mov qword [rsp], rax	       569	intel_color.c	FUNCTION_15	IF_2	FOR_1
0x4000494	        0x41c1e40d	                           shl r12d, 0xd	       569	intel_color.c	FUNCTION_15	IF_2	FOR_1
0x4000498	         0xfb77d00	                   movzx edi, word [rbp]	       572	intel_color.c	FUNCTION_15	IF_2	FOR_1	CALL_9
0x400049c	      0xbe0e000000	                            mov esi, 0xe	       572	intel_color.c	FUNCTION_15	IF_2	FOR_1	CALL_9
0x40004a1	        0x4883c508	                              add rbp, 8	       572	intel_color.c	FUNCTION_15	IF_2	FOR_1	CALL_9
0x40004a5	      0xe800000000	                          call 0x40004aa	       572	intel_color.c	FUNCTION_15	IF_2	FOR_1	CALL_9
0x40004aa	         0xfb77dfa	               movzx edi, word [rbp - 6]	       573	intel_color.c	FUNCTION_15	IF_2	FOR_1	CALL_10
0x40004ae	      0xbe0e000000	                            mov esi, 0xe	       573	intel_color.c	FUNCTION_15	IF_2	FOR_1	CALL_10
0x40004b3	          0x4189c5	                           mov r13d, eax	       572	intel_color.c	FUNCTION_15	IF_2	FOR_1	CALL_9
0x40004b6	        0x41c1e510	                          shl r13d, 0x10	       571	intel_color.c	FUNCTION_15	IF_2	FOR_1
0x40004ba	          0x4589ef	                          mov r15d, r13d	       571	intel_color.c	FUNCTION_15	IF_2	FOR_1
0x40004bd	      0xe800000000	                          call 0x40004c2	       573	intel_color.c	FUNCTION_15	IF_2	FOR_1	CALL_10
0x40004c2	         0xfb77df6	             movzx edi, word [rbp - 0xa]	       574	intel_color.c	FUNCTION_15	IF_2	FOR_1	CALL_11
0x40004c6	      0xbe0e000000	                            mov esi, 0xe	       574	intel_color.c	FUNCTION_15	IF_2	FOR_1	CALL_11
0x40004cb	          0x4109c7	                            or r15d, eax	       571	intel_color.c	FUNCTION_15	IF_2	FOR_1
0x40004ce	      0xe800000000	                          call 0x40004d3	       574	intel_color.c	FUNCTION_15	IF_2	FOR_1	CALL_11
0x40004d3	          0x4189c5	                           mov r13d, eax	       574	intel_color.c	FUNCTION_15	IF_2	FOR_1	CALL_11
0x40004d6	          0x4489e6	                           mov esi, r12d	       576	intel_color.c	FUNCTION_15	IF_2	FOR_1	CALL_13
0x40004d9	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       576	intel_color.c	FUNCTION_15	IF_2	FOR_1	CALL_13
0x40004e0	      0xb901000000	                              mov ecx, 1	       576	intel_color.c	FUNCTION_15	IF_2	FOR_1	CALL_13
0x40004e5	          0x4489fa	                           mov edx, r15d	       576	intel_color.c	FUNCTION_15	IF_2	FOR_1	CALL_13
0x40004e8	          0x4889df	                            mov rdi, rbx	       576	intel_color.c	FUNCTION_15	IF_2	FOR_1	CALL_13
0x40004eb	      0xe800000000	                          call 0x40004f0	       576	intel_color.c	FUNCTION_15	IF_2	FOR_1	CALL_13
0x40004f0	      0x418d742404	                      lea esi, [r12 + 4]	       577	intel_color.c	FUNCTION_15	IF_2	FOR_1	CALL_15
0x40004f5	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       577	intel_color.c	FUNCTION_15	IF_2	FOR_1	CALL_15
0x40004fc	      0xb901000000	                              mov ecx, 1	       577	intel_color.c	FUNCTION_15	IF_2	FOR_1	CALL_15
0x4000501	          0x4489ea	                           mov edx, r13d	       577	intel_color.c	FUNCTION_15	IF_2	FOR_1	CALL_15
0x4000504	          0x4889df	                            mov rdi, rbx	       577	intel_color.c	FUNCTION_15	IF_2	FOR_1	CALL_15
0x4000507	        0x4183c408	                             add r12d, 8	       577	intel_color.c	FUNCTION_15	IF_2	FOR_1	CALL_15
0x400050b	      0xe800000000	                          call 0x4000510	       577	intel_color.c	FUNCTION_15	IF_2	FOR_1	CALL_15
0x4000510	        0x48392c24	                    cmp qword [rsp], rbp	       569	intel_color.c	FUNCTION_15	IF_2	FOR_1
0x4000514	            0x7582	                           jne 0x4000498	       569	intel_color.c	FUNCTION_15	IF_2	FOR_1
0x4000516	    0x498b86f00100	           mov rax, qword [r14 + 0x1f0] 	       569	intel_color.c	FUNCTION_15	IF_2	FOR_1
0x400051d	          0x4885c0	                           test rax, rax	       581	intel_color.c	FUNCTION_15	IF_3
0x4000520	     0xf8424010000	                            je 0x400064a	       581	intel_color.c	FUNCTION_15	IF_3
0x4000526	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       582	intel_color.c	FUNCTION_15	IF_3
0x400052a	     0xfb7830e0700	          movzx eax, word [rbx + 0x70e] 	       583	intel_color.c	FUNCTION_15	IF_3	CALL_16
0x4000531	            0x85c0	                           test eax, eax	       584	intel_color.c	FUNCTION_15	IF_3	FOR_2
0x4000533	     0xf84ac010000	                            je 0x40006e5	       584	intel_color.c	FUNCTION_15	IF_3	FOR_2
0x4000539	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	       584	intel_color.c	FUNCTION_15	IF_3	FOR_2
0x400053d	          0x83e801	                              sub eax, 1	       584	intel_color.c	FUNCTION_15	IF_3	FOR_2
0x4000540	        0x488d6a02	                      lea rbp, [rdx + 2]	       584	intel_color.c	FUNCTION_15	IF_3	FOR_2
0x4000544	      0x488d44c20a	           lea rax, [rdx + rax*8 + 0xa] 	       584	intel_color.c	FUNCTION_15	IF_3	FOR_2
0x4000549	          0xc1e10d	                            shl ecx, 0xd	       584	intel_color.c	FUNCTION_15	IF_3	FOR_2
0x400054c	        0x48890424	                    mov qword [rsp], rax	       584	intel_color.c	FUNCTION_15	IF_3	FOR_2
0x4000550	    0x448da100701e	              lea r12d, [rcx + 0x1e7000]	       584	intel_color.c	FUNCTION_15	IF_3	FOR_2
0x4000557	        0x894c240c	              mov dword [rsp + 0xc], ecx	       584	intel_color.c	FUNCTION_15	IF_3	FOR_2
0x400055b	         0xfb77d00	                   movzx edi, word [rbp]	       587	intel_color.c	FUNCTION_15	IF_3	FOR_2	CALL_17
0x400055f	      0xbe0a000000	                            mov esi, 0xa	       587	intel_color.c	FUNCTION_15	IF_3	FOR_2	CALL_17
0x4000564	        0x4883c508	                              add rbp, 8	       587	intel_color.c	FUNCTION_15	IF_3	FOR_2	CALL_17
0x4000568	      0xe800000000	                          call 0x400056d	       587	intel_color.c	FUNCTION_15	IF_3	FOR_2	CALL_17
0x400056d	         0xfb77dfa	               movzx edi, word [rbp - 6]	       588	intel_color.c	FUNCTION_15	IF_3	FOR_2	CALL_18
0x4000571	      0xbe0a000000	                            mov esi, 0xa	       588	intel_color.c	FUNCTION_15	IF_3	FOR_2	CALL_18
0x4000576	          0x4189c5	                           mov r13d, eax	       587	intel_color.c	FUNCTION_15	IF_3	FOR_2	CALL_17
0x4000579	        0x41c1e510	                          shl r13d, 0x10	       586	intel_color.c	FUNCTION_15	IF_3	FOR_2
0x400057d	          0x4589ef	                          mov r15d, r13d	       586	intel_color.c	FUNCTION_15	IF_3	FOR_2
0x4000580	      0xe800000000	                          call 0x4000585	       588	intel_color.c	FUNCTION_15	IF_3	FOR_2	CALL_18
0x4000585	         0xfb77df6	             movzx edi, word [rbp - 0xa]	       589	intel_color.c	FUNCTION_15	IF_3	FOR_2	CALL_19
0x4000589	      0xbe0a000000	                            mov esi, 0xa	       589	intel_color.c	FUNCTION_15	IF_3	FOR_2	CALL_19
0x400058e	          0x4109c7	                            or r15d, eax	       586	intel_color.c	FUNCTION_15	IF_3	FOR_2
0x4000591	      0xe800000000	                          call 0x4000596	       589	intel_color.c	FUNCTION_15	IF_3	FOR_2	CALL_19
0x4000596	          0x4189c5	                           mov r13d, eax	       589	intel_color.c	FUNCTION_15	IF_3	FOR_2	CALL_19
0x4000599	          0x4489e6	                           mov esi, r12d	       591	intel_color.c	FUNCTION_15	IF_3	FOR_2	CALL_21
0x400059c	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       591	intel_color.c	FUNCTION_15	IF_3	FOR_2	CALL_21
0x40005a3	      0xb901000000	                              mov ecx, 1	       591	intel_color.c	FUNCTION_15	IF_3	FOR_2	CALL_21
0x40005a8	          0x4489fa	                           mov edx, r15d	       591	intel_color.c	FUNCTION_15	IF_3	FOR_2	CALL_21
0x40005ab	          0x4889df	                            mov rdi, rbx	       591	intel_color.c	FUNCTION_15	IF_3	FOR_2	CALL_21
0x40005ae	      0xe800000000	                          call 0x40005b3	       591	intel_color.c	FUNCTION_15	IF_3	FOR_2	CALL_21
0x40005b3	      0x418d742404	                      lea esi, [r12 + 4]	       592	intel_color.c	FUNCTION_15	IF_3	FOR_2	CALL_23
0x40005b8	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       592	intel_color.c	FUNCTION_15	IF_3	FOR_2	CALL_23
0x40005bf	      0xb901000000	                              mov ecx, 1	       592	intel_color.c	FUNCTION_15	IF_3	FOR_2	CALL_23
0x40005c4	          0x4489ea	                           mov edx, r13d	       592	intel_color.c	FUNCTION_15	IF_3	FOR_2	CALL_23
0x40005c7	          0x4889df	                            mov rdi, rbx	       592	intel_color.c	FUNCTION_15	IF_3	FOR_2	CALL_23
0x40005ca	        0x4183c408	                             add r12d, 8	       592	intel_color.c	FUNCTION_15	IF_3	FOR_2	CALL_23
0x40005ce	      0xe800000000	                          call 0x40005d3	       592	intel_color.c	FUNCTION_15	IF_3	FOR_2	CALL_23
0x40005d3	        0x48392c24	                    cmp qword [rsp], rbp	       584	intel_color.c	FUNCTION_15	IF_3	FOR_2
0x40005d7	            0x7582	                           jne 0x400055b	       584	intel_color.c	FUNCTION_15	IF_3	FOR_2
0x40005d9	    0x4983bee80100	              cmp qword [r14 + 0x1e8], 0	       596	intel_color.c	FUNCTION_15	CALL_25
0x40005e1	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	       596	intel_color.c	FUNCTION_15	CALL_25
0x40005e8	    0x498b8ef00100	           mov rcx, qword [r14 + 0x1f0] 	       596	intel_color.c	FUNCTION_15	CALL_25
0x40005ef	     0xf84e9000000	                            je 0x40006de	       596	intel_color.c	FUNCTION_15	CALL_25
0x40005f5	      0xb802000000	                              mov eax, 2	       596	intel_color.c	FUNCTION_15	CALL_25
0x40005fa	            0x31d2	                            xor edx, edx	       596	intel_color.c	FUNCTION_15	CALL_25
0x40005fc	    0x4983bee00100	              cmp qword [r14 + 0x1e0], 0	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000604	           0xf95c2	                                setne dl	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000607	             0x9c2	                             or edx, eax	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000609	        0x4883f901	                              cmp rcx, 1	       596	intel_color.c	FUNCTION_15	CALL_25
0x400060d	            0x19c0	                            sbb eax, eax	       596	intel_color.c	FUNCTION_15	CALL_25
0x400060f	            0xf7d0	                                 not eax	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000611	          0x83e004	                              and eax, 4	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000614	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000618	             0x9c2	                             or edx, eax	       596	intel_color.c	FUNCTION_15	CALL_25
0x400061a	      0xb901000000	                              mov ecx, 1	       596	intel_color.c	FUNCTION_15	CALL_25
0x400061f	          0x4889df	                            mov rdi, rbx	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000622	    0x81c6007a1e00	                       add esi, 0x1e7a00	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000628	      0xe800000000	                          call 0x400062d	       596	intel_color.c	FUNCTION_15	CALL_25
0x400062d	          0x4c89f2	                            mov rdx, r14	       605	intel_color.c	FUNCTION_15	CALL_27
0x4000630	            0x31f6	                            xor esi, esi	       605	intel_color.c	FUNCTION_15	CALL_27
0x4000632	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       561	intel_color.c	FUNCTION_15	IF_1	CALL_6
0x4000637	        0x4883c418	                           add rsp, 0x18	       606	intel_color.c	FUNCTION_15
0x400063b	              0x5b	                                 pop rbx	       606	intel_color.c	FUNCTION_15
0x400063c	              0x5d	                                 pop rbp	       606	intel_color.c	FUNCTION_15
0x400063d	            0x415c	                                 pop r12	       606	intel_color.c	FUNCTION_15
0x400063f	            0x415d	                                 pop r13	       606	intel_color.c	FUNCTION_15
0x4000641	            0x415e	                                 pop r14	       606	intel_color.c	FUNCTION_15
0x4000643	            0x415f	                                 pop r15	       606	intel_color.c	FUNCTION_15
0x4000645	      0xe936fcffff	         jmp sym.i9xx_load_luts_internal	       561	intel_color.c	FUNCTION_15	IF_1	CALL_6
0x400064a	    0x4983bee80100	              cmp qword [r14 + 0x1e8], 0	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000652	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000659	     0xf84bc000000	                            je 0x400071b	       596	intel_color.c	FUNCTION_15	CALL_25
0x400065f	            0x31d2	                            xor edx, edx	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000661	    0x4983bee00100	              cmp qword [r14 + 0x1e0], 0	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000669	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       596	intel_color.c	FUNCTION_15	CALL_25
0x400066d	           0xf95c2	                                setne dl	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000670	          0xc1e00d	                            shl eax, 0xd	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000673	        0x8944240c	              mov dword [rsp + 0xc], eax	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000677	          0x83ca02	                               or edx, 2	       596	intel_color.c	FUNCTION_15	CALL_25
0x400067a	            0x31c0	                            xor eax, eax	       596	intel_color.c	FUNCTION_15	CALL_25
0x400067c	            0xeb96	                           jmp 0x4000614	       596	intel_color.c	FUNCTION_15	CALL_25
0x400067e	    0x4883bfe80100	              cmp qword [rdi + 0x1e8], 0	        79	intel_color.c	FUNCTION_1
0x4000686	     0xf858afeffff	                           jne 0x4000516	        79	intel_color.c	FUNCTION_1
0x400068c	    0x488b87f00100	           mov rax, qword [rdi + 0x1f0] 	        81	intel_color.c	FUNCTION_1
0x4000693	          0x4885c0	                           test rax, rax	        80	intel_color.c	FUNCTION_1
0x4000696	            0x74b2	                            je 0x400064a	        80	intel_color.c	FUNCTION_1
0x4000698	        0x488b5048	            mov rdx, qword [rax + 0x48] 	        81	intel_color.c	FUNCTION_1
0x400069c	        0x48c1ea03	                              shr rdx, 3	        81	intel_color.c	FUNCTION_1
0x40006a0	    0x81fa00010000	                          cmp edx, 0x100	        81	intel_color.c	FUNCTION_1
0x40006a6	     0xf857afeffff	                           jne 0x4000526	        81	intel_color.c	FUNCTION_1
0x40006ac	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       559	intel_color.c	FUNCTION_15	IF_1	CALL_5
0x40006b0	            0x31d2	                            xor edx, edx	       559	intel_color.c	FUNCTION_15	IF_1	CALL_5
0x40006b2	    0x488b83180800	           mov rax, qword [rbx + 0x818] 	       559	intel_color.c	FUNCTION_15	IF_1	CALL_5
0x40006b9	      0xb901000000	                              mov ecx, 1	       559	intel_color.c	FUNCTION_15	IF_1	CALL_5
0x40006be	          0x4889df	                            mov rdi, rbx	       559	intel_color.c	FUNCTION_15	IF_1	CALL_5
0x40006c1	          0xc1e60d	                            shl esi, 0xd	       559	intel_color.c	FUNCTION_15	IF_1	CALL_5
0x40006c4	    0x81c6007a1e00	                       add esi, 0x1e7a00	       559	intel_color.c	FUNCTION_15	IF_1	CALL_5
0x40006ca	      0xe800000000	                          call 0x40006cf	       559	intel_color.c	FUNCTION_15	IF_1	CALL_5
0x40006cf	    0x498bb6f00100	           mov rsi, qword [r14 + 0x1f0] 	       561	intel_color.c	FUNCTION_15	IF_1	CALL_6
0x40006d6	          0x4c89f2	                            mov rdx, r14	       561	intel_color.c	FUNCTION_15	IF_1	CALL_6
0x40006d9	      0xe954ffffff	                           jmp 0x4000632	       561	intel_color.c	FUNCTION_15	IF_1	CALL_6
0x40006de	            0x31c0	                            xor eax, eax	       596	intel_color.c	FUNCTION_15	CALL_25
0x40006e0	      0xe915ffffff	                           jmp 0x40005fa	       596	intel_color.c	FUNCTION_15	CALL_25
0x40006e5	    0x4983bee80100	              cmp qword [r14 + 0x1e8], 0	       596	intel_color.c	FUNCTION_15	CALL_25
0x40006ed	    0x4c8b83180800	            mov r8, qword [rbx + 0x818] 	       596	intel_color.c	FUNCTION_15	CALL_25
0x40006f4	            0x7444	                            je 0x400073a	       596	intel_color.c	FUNCTION_15	CALL_25
0x40006f6	            0x31d2	                            xor edx, edx	       596	intel_color.c	FUNCTION_15	CALL_25
0x40006f8	    0x4983bee00100	              cmp qword [r14 + 0x1e0], 0	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000700	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000704	           0xf95c2	                                setne dl	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000707	          0xc1e00d	                            shl eax, 0xd	       596	intel_color.c	FUNCTION_15	CALL_25
0x400070a	        0x8944240c	              mov dword [rsp + 0xc], eax	       596	intel_color.c	FUNCTION_15	CALL_25
0x400070e	          0x83ca02	                               or edx, 2	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000711	      0xb804000000	                              mov eax, 4	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000716	      0xe9f9feffff	                           jmp 0x4000614	       596	intel_color.c	FUNCTION_15	CALL_25
0x400071b	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       596	intel_color.c	FUNCTION_15	CALL_25
0x400071f	            0x31d2	                            xor edx, edx	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000721	          0xc1e00d	                            shl eax, 0xd	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000724	    0x4983bee00100	              cmp qword [r14 + 0x1e0], 0	       596	intel_color.c	FUNCTION_15	CALL_25
0x400072c	        0x8944240c	              mov dword [rsp + 0xc], eax	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000730	           0xf95c2	                                setne dl	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000733	            0x31c0	                            xor eax, eax	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000735	      0xe9dafeffff	                           jmp 0x4000614	       596	intel_color.c	FUNCTION_15	CALL_25
0x400073a	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       596	intel_color.c	FUNCTION_15	CALL_25
0x400073e	            0x31d2	                            xor edx, edx	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000740	          0xc1e00d	                            shl eax, 0xd	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000743	    0x4983bee00100	              cmp qword [r14 + 0x1e0], 0	       596	intel_color.c	FUNCTION_15	CALL_25
0x400074b	        0x8944240c	              mov dword [rsp + 0xc], eax	       596	intel_color.c	FUNCTION_15	CALL_25
0x400074f	      0xb804000000	                              mov eax, 4	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000754	           0xf95c2	                                setne dl	       596	intel_color.c	FUNCTION_15	CALL_25
0x4000757	      0xe9b8feffff	                           jmp 0x4000614	       596	intel_color.c	FUNCTION_15	CALL_25
ilk_load_csc_matrix	CALL,45:functions,0:WHILE,0:IF,14:DO,0:FOR,2:ELSE,10:SWITCH,0	357
0x4000830	            0x4157	                                push r15	       136	intel_color.c	FUNCTION_4
0x4000832	            0x4156	                                push r14	       136	intel_color.c	FUNCTION_4
0x4000834	            0x4155	                                push r13	       136	intel_color.c	FUNCTION_4
0x4000836	            0x4154	                                push r12	       136	intel_color.c	FUNCTION_4
0x4000838	              0x55	                                push rbp	       136	intel_color.c	FUNCTION_4
0x4000839	              0x53	                                push rbx	       136	intel_color.c	FUNCTION_4
0x400083a	        0x4883ec70	                           sub rsp, 0x70	       136	intel_color.c	FUNCTION_4
0x400083e	    0x65488b042528	                mov rax, qword gs:[0x28]	       136	intel_color.c	FUNCTION_4
0x4000847	      0x4889442468	             mov qword [rsp + 0x68], rax	       136	intel_color.c	FUNCTION_4
0x400084c	            0x31c0	                            xor eax, eax	       136	intel_color.c	FUNCTION_4
0x400084e	          0x488b07	                    mov rax, qword [rdi]	       137	intel_color.c	FUNCTION_4
0x4000851	    0x48c744240e00	                mov qword [rsp + 0xe], 0	       141	intel_color.c	FUNCTION_4
0x400085a	    0x48c744241600	               mov qword [rsp + 0x16], 0	       141	intel_color.c	FUNCTION_4
0x4000863	          0x4c8b38	                    mov r15, qword [rax]	       138	intel_color.c	FUNCTION_4	CALL_1
0x4000866	    0x8b98b0040000	           mov ebx, dword [rax + 0x4b0] 	       140	intel_color.c	FUNCTION_4
0x400086c	            0x31c0	                            xor eax, eax	       141	intel_color.c	FUNCTION_4
0x400086e	      0x668944241e	               mov word [rsp + 0x1e], ax	       141	intel_color.c	FUNCTION_4
0x4000873	    0x4180bf5c0600	               cmp byte [r15 + 0x65c], 7	       149	intel_color.c	FUNCTION_4	IF_1	CALL_5
0x400087b	     0xf87b7020000	                            ja 0x4000b38	       149	intel_color.c	FUNCTION_4	IF_1	CALL_5
0x4000881	          0x4531c9	                            xor r9d, r9d	       143	intel_color.c	FUNCTION_4
0x4000884	    0x41f687660600	              test byte [r15 + 0x666], 8	       149	intel_color.c	FUNCTION_4	IF_1	CALL_5
0x400088c	     0xf85a6020000	                           jne 0x4000b38	       149	intel_color.c	FUNCTION_4	IF_1	CALL_5
0x4000892	    0x80bf93040000	               cmp byte [rdi + 0x493], 0	       152	intel_color.c	FUNCTION_4	IF_2
0x4000899	     0xf85ae020000	                           jne 0x4000b4d	       152	intel_color.c	FUNCTION_4	IF_2
0x400089f	    0x488b87e80100	           mov rax, qword [rdi + 0x1e8] 	       155	intel_color.c	FUNCTION_4	ELSE_1	IF_3
0x40008a6	          0x4885c0	                           test rax, rax	       155	intel_color.c	FUNCTION_4	ELSE_1	IF_3
0x40008a9	     0xf84a8050000	                            je 0x4000e57	       155	intel_color.c	FUNCTION_4	ELSE_1	IF_3
0x40008af	        0x4c8b5050	            mov r10, qword [rax + 0x50] 	       156	intel_color.c	FUNCTION_4	ELSE_1	IF_3
0x40008b3	          0x4584c9	                           test r9b, r9b	       160	intel_color.c	FUNCTION_4	ELSE_1	IF_3	IF_4
0x40008b6	          0x4c89d7	                            mov rdi, r10	       163	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2
0x40008b9	     0xf8511050000	                           jne 0x4000dd0	       160	intel_color.c	FUNCTION_4	ELSE_1	IF_3	IF_4
0x40008bf	      0x488d4c240e	                    lea rcx, [rsp + 0xe]	       160	intel_color.c	FUNCTION_4	ELSE_1	IF_3	IF_4
0x40008c4	          0x4531f6	                          xor r14d, r14d	       161	intel_color.c	FUNCTION_4	ELSE_1	IF_3	CALL_7
0x40008c7	    0x48beffffffff	         movabs rsi, 0x7fffffffffffffff 	       176	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_9
0x40008d1	    0x49baffffffff	                 movabs r10, 0x3ffffffff	       176	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_9
0x40008db	    0x41bcffffffff	                    mov r12d, 0xffffffff	       191	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_5	IF_9
0x40008e1	    0x49bdffffffff	                 movabs r13, 0x1ffffffff	       193	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_6	IF_10
0x40008eb	        0x4c8d5912	                   lea r11, [rcx + 0x12]	       193	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_6	IF_10
0x40008ef	      0xbdff0f0000	                          mov ebp, 0xfff	       197	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_7
0x40008f4	            0xeb31	                           jmp 0x4000927	       197	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_7
0x40008f6	        0x48c1e811	                           shr rax, 0x11	       183	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	IF_6
0x40008fa	        0x4883c004	                              add rax, 4	       183	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	IF_6
0x40008fe	    0x483dff0f0000	                          cmp rax, 0xfff	       183	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	IF_6
0x4000904	        0x480f47c5	                          cmova rax, rbp	       183	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	IF_6
0x4000908	      0x25f80f0000	                          and eax, 0xff8	       183	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	IF_6
0x400090d	          0x80cc30	                             or ah, 0x30	       183	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	IF_6
0x4000910	          0x4409f0	                            or eax, r14d	       183	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	IF_6
0x4000913	          0x668901	                      mov word [rcx], ax	       183	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	IF_6
0x4000916	        0x4883c102	                              add rcx, 2	       183	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	IF_6
0x400091a	        0x4883c708	                              add rdi, 8	       183	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	IF_6
0x400091e	          0x4939cb	                            cmp r11, rcx	       169	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_8
0x4000921	            0x7463	                            je 0x4000986	       169	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_8
0x4000923	        0x440fb731	                  movzx r14d, word [rcx]	       169	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_8
0x4000927	          0x488b17	                    mov rdx, qword [rdi]	       170	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1
0x400092a	          0x4889d0	                            mov rax, rdx	       176	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_9
0x400092d	          0x4821f0	                            and rax, rsi	       176	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_9
0x4000930	          0x4c39d0	                            cmp rax, r10	       176	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_9
0x4000933	        0x490f47c2	                          cmova rax, r10	       176	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_9
0x4000937	          0x4885d2	                           test rdx, rdx	       179	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	IF_5	CALL_10
0x400093a	     0xf8878030000	                            js 0x4000cb8	       179	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	IF_5	CALL_10
0x4000940	    0x483dffffff1f	                     cmp rax, 0x1fffffff	       182	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	IF_6
0x4000946	            0x76ae	                           jbe 0x40008f6	       182	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	IF_6
0x4000948	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       185	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_3	IF_7
0x400094e	     0xf8773030000	                            ja 0x4000cc7	       185	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_3	IF_7
0x4000954	        0x48c1e812	                           shr rax, 0x12	       186	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_3	IF_7
0x4000958	        0x488d5004	                      lea rdx, [rax + 4]	       186	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_3	IF_7
0x400095c	    0x4881faff0f00	                          cmp rdx, 0xfff	       186	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_3	IF_7
0x4000963	        0x480f47d5	                          cmova rdx, rbp	       186	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_3	IF_7
0x4000967	        0x4883c102	                              add rcx, 2	       186	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_3	IF_7
0x400096b	        0x4883c708	                              add rdi, 8	       186	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_3	IF_7
0x400096f	          0x4889d0	                            mov rax, rdx	       186	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_3	IF_7
0x4000972	      0x25f80f0000	                          and eax, 0xff8	       186	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_3	IF_7
0x4000977	          0x80cc20	                             or ah, 0x20	       186	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_3	IF_7
0x400097a	          0x4409f0	                            or eax, r14d	       186	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_3	IF_7
0x400097d	        0x668941fe	                  mov word [rcx - 2], ax	       186	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_3	IF_7
0x4000981	          0x4939cb	                            cmp r11, rcx	       169	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_8
0x4000984	            0x759d	                           jne 0x4000923	       169	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_8
0x4000986	       0xfb754240e	            movzx edx, word [rsp + 0xe] 	       169	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_8
0x400098b	       0xfb7442410	           movzx eax, word [rsp + 0x10] 	       169	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_8
0x4000990	       0xfb76c2414	           movzx ebp, word [rsp + 0x14] 	       169	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_8
0x4000995	    0x440fb76c241a	          movzx r13d, word [rsp + 0x1a] 	       169	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_8
0x400099b	    0x440fb7742418	          movzx r14d, word [rsp + 0x18] 	       169	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_8
0x40009a1	    0x440fb764241e	          movzx r12d, word [rsp + 0x1e] 	       169	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_8
0x40009a7	          0xc1e210	                           shl edx, 0x10	       169	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_8
0x40009aa	             0x9c2	                             or edx, eax	       169	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_8
0x40009ac	       0xfb7442412	           movzx eax, word [rsp + 0x12] 	       169	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_8
0x40009b1	          0xc1e510	                           shl ebp, 0x10	       169	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_8
0x40009b4	        0x41c1e510	                          shl r13d, 0x10	       169	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_8
0x40009b8	        0x41c1e610	                          shl r14d, 0x10	       169	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_8
0x40009bc	        0x41c1e410	                          shl r12d, 0x10	       169	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_8
0x40009c0	          0xc1e010	                           shl eax, 0x10	       169	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_8
0x40009c3	          0x890424	                    mov dword [rsp], eax	       169	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_8
0x40009c6	       0xfb7442416	           movzx eax, word [rsp + 0x16] 	       169	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_8
0x40009cb	             0x9c5	                             or ebp, eax	       169	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_8
0x40009cd	       0xfb744241c	           movzx eax, word [rsp + 0x1c] 	       169	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_8
0x40009d2	          0x4109c5	                            or r13d, eax	       169	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	CALL_8
0x40009d5	          0xc1e308	                              shl ebx, 8	       218	intel_color.c	FUNCTION_4	CALL_18
0x40009d8	      0x44884c2407	                 mov byte [rsp + 7], r9b	       218	intel_color.c	FUNCTION_4	CALL_18
0x40009dd	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	       218	intel_color.c	FUNCTION_4	CALL_18
0x40009e4	    0x8db310900400	                lea esi, [rbx + 0x49010]	       218	intel_color.c	FUNCTION_4	CALL_18
0x40009ea	      0xb901000000	                              mov ecx, 1	       218	intel_color.c	FUNCTION_4	CALL_18
0x40009ef	          0x4c89ff	                            mov rdi, r15	       218	intel_color.c	FUNCTION_4	CALL_18
0x40009f2	      0xe800000000	                          call 0x40009f7	       218	intel_color.c	FUNCTION_4	CALL_18
0x40009f7	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	       219	intel_color.c	FUNCTION_4	CALL_20
0x40009fe	    0x8db314900400	                lea esi, [rbx + 0x49014]	       219	intel_color.c	FUNCTION_4	CALL_20
0x4000a04	      0xb901000000	                              mov ecx, 1	       219	intel_color.c	FUNCTION_4	CALL_20
0x4000a09	          0x8b1424	                    mov edx, dword [rsp]	       219	intel_color.c	FUNCTION_4	CALL_20
0x4000a0c	          0x4c89ff	                            mov rdi, r15	       219	intel_color.c	FUNCTION_4	CALL_20
0x4000a0f	      0xe800000000	                          call 0x4000a14	       219	intel_color.c	FUNCTION_4	CALL_20
0x4000a14	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	       221	intel_color.c	FUNCTION_4	CALL_22
0x4000a1b	    0x8db318900400	                lea esi, [rbx + 0x49018]	       221	intel_color.c	FUNCTION_4	CALL_22
0x4000a21	      0xb901000000	                              mov ecx, 1	       221	intel_color.c	FUNCTION_4	CALL_22
0x4000a26	            0x89ea	                            mov edx, ebp	       221	intel_color.c	FUNCTION_4	CALL_22
0x4000a28	          0x4c89ff	                            mov rdi, r15	       221	intel_color.c	FUNCTION_4	CALL_22
0x4000a2b	      0xe800000000	                          call 0x4000a30	       221	intel_color.c	FUNCTION_4	CALL_22
0x4000a30	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	       222	intel_color.c	FUNCTION_4	CALL_24
0x4000a37	    0x8db31c900400	                lea esi, [rbx + 0x4901c]	       222	intel_color.c	FUNCTION_4	CALL_24
0x4000a3d	      0xb901000000	                              mov ecx, 1	       222	intel_color.c	FUNCTION_4	CALL_24
0x4000a42	          0x4489f2	                           mov edx, r14d	       222	intel_color.c	FUNCTION_4	CALL_24
0x4000a45	          0x4c89ff	                            mov rdi, r15	       222	intel_color.c	FUNCTION_4	CALL_24
0x4000a48	      0xe800000000	                          call 0x4000a4d	       222	intel_color.c	FUNCTION_4	CALL_24
0x4000a4d	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	       224	intel_color.c	FUNCTION_4	CALL_26
0x4000a54	    0x8db320900400	                lea esi, [rbx + 0x49020]	       224	intel_color.c	FUNCTION_4	CALL_26
0x4000a5a	      0xb901000000	                              mov ecx, 1	       224	intel_color.c	FUNCTION_4	CALL_26
0x4000a5f	          0x4489ea	                           mov edx, r13d	       224	intel_color.c	FUNCTION_4	CALL_26
0x4000a62	          0x4c89ff	                            mov rdi, r15	       224	intel_color.c	FUNCTION_4	CALL_26
0x4000a65	      0xe800000000	                          call 0x4000a6a	       224	intel_color.c	FUNCTION_4	CALL_26
0x4000a6a	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	       225	intel_color.c	FUNCTION_4	CALL_28
0x4000a71	    0x8db324900400	                lea esi, [rbx + 0x49024]	       225	intel_color.c	FUNCTION_4	CALL_28
0x4000a77	      0xb901000000	                              mov ecx, 1	       225	intel_color.c	FUNCTION_4	CALL_28
0x4000a7c	          0x4489e2	                           mov edx, r12d	       225	intel_color.c	FUNCTION_4	CALL_28
0x4000a7f	          0x4c89ff	                            mov rdi, r15	       225	intel_color.c	FUNCTION_4	CALL_28
0x4000a82	      0xe800000000	                          call 0x4000a87	       225	intel_color.c	FUNCTION_4	CALL_28
0x4000a87	            0x31d2	                            xor edx, edx	       227	intel_color.c	FUNCTION_4	CALL_30
0x4000a89	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	       227	intel_color.c	FUNCTION_4	CALL_30
0x4000a90	    0x8db330900400	                lea esi, [rbx + 0x49030]	       227	intel_color.c	FUNCTION_4	CALL_30
0x4000a96	      0xb901000000	                              mov ecx, 1	       227	intel_color.c	FUNCTION_4	CALL_30
0x4000a9b	          0x4c89ff	                            mov rdi, r15	       227	intel_color.c	FUNCTION_4	CALL_30
0x4000a9e	      0xe800000000	                          call 0x4000aa3	       227	intel_color.c	FUNCTION_4	CALL_30
0x4000aa3	            0x31d2	                            xor edx, edx	       228	intel_color.c	FUNCTION_4	CALL_32
0x4000aa5	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	       228	intel_color.c	FUNCTION_4	CALL_32
0x4000aac	    0x8db334900400	                lea esi, [rbx + 0x49034]	       228	intel_color.c	FUNCTION_4	CALL_32
0x4000ab2	      0xb901000000	                              mov ecx, 1	       228	intel_color.c	FUNCTION_4	CALL_32
0x4000ab7	          0x4c89ff	                            mov rdi, r15	       228	intel_color.c	FUNCTION_4	CALL_32
0x4000aba	      0xe800000000	                          call 0x4000abf	       228	intel_color.c	FUNCTION_4	CALL_32
0x4000abf	            0x31d2	                            xor edx, edx	       229	intel_color.c	FUNCTION_4	CALL_34
0x4000ac1	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	       229	intel_color.c	FUNCTION_4	CALL_34
0x4000ac8	    0x8db338900400	                lea esi, [rbx + 0x49038]	       229	intel_color.c	FUNCTION_4	CALL_34
0x4000ace	      0xb901000000	                              mov ecx, 1	       229	intel_color.c	FUNCTION_4	CALL_34
0x4000ad3	          0x4c89ff	                            mov rdi, r15	       229	intel_color.c	FUNCTION_4	CALL_34
0x4000ad6	      0xe800000000	                          call 0x4000adb	       229	intel_color.c	FUNCTION_4	CALL_34
0x4000adb	    0x4180bf5c0600	               cmp byte [r15 + 0x65c], 6	       231	intel_color.c	FUNCTION_4	IF_12	CALL_35
0x4000ae3	    0x440fb64c2407	               movzx r9d, byte [rsp + 7]	       231	intel_color.c	FUNCTION_4	IF_12	CALL_35
0x4000ae9	     0xf8730020000	                            ja 0x4000d1f	       231	intel_color.c	FUNCTION_4	IF_12	CALL_35
0x4000aef	        0x4180f901	                              cmp r9b, 1	       243	intel_color.c	FUNCTION_4	ELSE_10
0x4000af3	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	       248	intel_color.c	FUNCTION_4	ELSE_10	CALL_45
0x4000afa	    0x8db328900400	                lea esi, [rbx + 0x49028]	       248	intel_color.c	FUNCTION_4	ELSE_10	CALL_45
0x4000b00	            0x19d2	                            sbb edx, edx	       243	intel_color.c	FUNCTION_4	ELSE_10
0x4000b02	      0xb901000000	                              mov ecx, 1	       248	intel_color.c	FUNCTION_4	ELSE_10	CALL_45
0x4000b07	          0x4c89ff	                            mov rdi, r15	       248	intel_color.c	FUNCTION_4	ELSE_10	CALL_45
0x4000b0a	          0x83e2fc	                     and edx, 0xfffffffc	       243	intel_color.c	FUNCTION_4	ELSE_10
0x4000b0d	          0x83c205	                              add edx, 5	       243	intel_color.c	FUNCTION_4	ELSE_10
0x4000b10	      0xe800000000	                          call 0x4000b15	       248	intel_color.c	FUNCTION_4	ELSE_10	CALL_45
0x4000b15	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       250	intel_color.c	FUNCTION_4
0x4000b1a	    0x654833042528	                xor rax, qword gs:[0x28]	       250	intel_color.c	FUNCTION_4
0x4000b23	     0xf8567030000	                           jne 0x4000e90	       250	intel_color.c	FUNCTION_4
0x4000b29	        0x4883c470	                           add rsp, 0x70	       250	intel_color.c	FUNCTION_4
0x4000b2d	              0x5b	                                 pop rbx	       250	intel_color.c	FUNCTION_4
0x4000b2e	              0x5d	                                 pop rbp	       250	intel_color.c	FUNCTION_4
0x4000b2f	            0x415c	                                 pop r12	       250	intel_color.c	FUNCTION_4
0x4000b31	            0x415d	                                 pop r13	       250	intel_color.c	FUNCTION_4
0x4000b33	            0x415e	                                 pop r14	       250	intel_color.c	FUNCTION_4
0x4000b35	            0x415f	                                 pop r15	       250	intel_color.c	FUNCTION_4
0x4000b37	              0xc3	                                     ret	       250	intel_color.c	FUNCTION_4
0x4000b38	    0x80bf93040000	               cmp byte [rdi + 0x493], 0	       152	intel_color.c	FUNCTION_4	IF_2
0x4000b3f	    0x440fb68f4002	          movzx r9d, byte [rdi + 0x240] 	       150	intel_color.c	FUNCTION_4	IF_1
0x4000b47	     0xf8452fdffff	                            je 0x400089f	       152	intel_color.c	FUNCTION_4	IF_2
0x4000b4d	          0xc1e308	                              shl ebx, 8	       116	intel_color.c	FUNCTION_3	CALL_3
0x4000b50	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	       116	intel_color.c	FUNCTION_3	CALL_3
0x4000b57	      0xb901000000	                              mov ecx, 1	       116	intel_color.c	FUNCTION_3	CALL_3
0x4000b5c	    0x8db330900400	                lea esi, [rbx + 0x49030]	       116	intel_color.c	FUNCTION_3	CALL_3
0x4000b62	            0x31d2	                            xor edx, edx	       116	intel_color.c	FUNCTION_3	CALL_3
0x4000b64	          0x4c89ff	                            mov rdi, r15	       116	intel_color.c	FUNCTION_3	CALL_3
0x4000b67	      0xe800000000	                          call 0x4000b6c	       116	intel_color.c	FUNCTION_3	CALL_3
0x4000b6c	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	       117	intel_color.c	FUNCTION_3	CALL_5
0x4000b73	    0x8db334900400	                lea esi, [rbx + 0x49034]	       117	intel_color.c	FUNCTION_3	CALL_5
0x4000b79	      0xb901000000	                              mov ecx, 1	       117	intel_color.c	FUNCTION_3	CALL_5
0x4000b7e	            0x31d2	                            xor edx, edx	       117	intel_color.c	FUNCTION_3	CALL_5
0x4000b80	          0x4c89ff	                            mov rdi, r15	       117	intel_color.c	FUNCTION_3	CALL_5
0x4000b83	      0xe800000000	                          call 0x4000b88	       117	intel_color.c	FUNCTION_3	CALL_5
0x4000b88	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	       118	intel_color.c	FUNCTION_3	CALL_7
0x4000b8f	    0x8db338900400	                lea esi, [rbx + 0x49038]	       118	intel_color.c	FUNCTION_3	CALL_7
0x4000b95	      0xb901000000	                              mov ecx, 1	       118	intel_color.c	FUNCTION_3	CALL_7
0x4000b9a	            0x31d2	                            xor edx, edx	       118	intel_color.c	FUNCTION_3	CALL_7
0x4000b9c	          0x4c89ff	                            mov rdi, r15	       118	intel_color.c	FUNCTION_3	CALL_7
0x4000b9f	      0xe800000000	                          call 0x4000ba4	       118	intel_color.c	FUNCTION_3	CALL_7
0x4000ba4	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	       120	intel_color.c	FUNCTION_3	CALL_9
0x4000bab	    0x8db318900400	                lea esi, [rbx + 0x49018]	       120	intel_color.c	FUNCTION_3	CALL_9
0x4000bb1	      0xb901000000	                              mov ecx, 1	       120	intel_color.c	FUNCTION_3	CALL_9
0x4000bb6	      0xbad809a82b	                     mov edx, 0x2ba809d8	       120	intel_color.c	FUNCTION_3	CALL_9
0x4000bbb	          0x4c89ff	                            mov rdi, r15	       120	intel_color.c	FUNCTION_3	CALL_9
0x4000bbe	      0xe800000000	                          call 0x4000bc3	       120	intel_color.c	FUNCTION_3	CALL_9
0x4000bc3	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	       121	intel_color.c	FUNCTION_3	CALL_11
0x4000bca	    0x8db31c900400	                lea esi, [rbx + 0x4901c]	       121	intel_color.c	FUNCTION_3	CALL_11
0x4000bd0	      0xb901000000	                              mov ecx, 1	       121	intel_color.c	FUNCTION_3	CALL_11
0x4000bd5	      0xba0000e837	                     mov edx, 0x37e80000	       121	intel_color.c	FUNCTION_3	CALL_11
0x4000bda	          0x4c89ff	                            mov rdi, r15	       121	intel_color.c	FUNCTION_3	CALL_11
0x4000bdd	      0xe800000000	                          call 0x4000be2	       121	intel_color.c	FUNCTION_3	CALL_11
0x4000be2	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	       123	intel_color.c	FUNCTION_3	CALL_13
0x4000be9	    0x8db310900400	                lea esi, [rbx + 0x49010]	       123	intel_color.c	FUNCTION_3	CALL_13
0x4000bef	      0xb901000000	                              mov ecx, 1	       123	intel_color.c	FUNCTION_3	CALL_13
0x4000bf4	      0xbac09c081e	                     mov edx, 0x1e089cc0	       123	intel_color.c	FUNCTION_3	CALL_13
0x4000bf9	          0x4c89ff	                            mov rdi, r15	       123	intel_color.c	FUNCTION_3	CALL_13
0x4000bfc	      0xe800000000	                          call 0x4000c01	       123	intel_color.c	FUNCTION_3	CALL_13
0x4000c01	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	       124	intel_color.c	FUNCTION_3	CALL_15
0x4000c08	    0x8db314900400	                lea esi, [rbx + 0x49014]	       124	intel_color.c	FUNCTION_3	CALL_15
0x4000c0e	      0xb901000000	                              mov ecx, 1	       124	intel_color.c	FUNCTION_3	CALL_15
0x4000c13	      0xba000028b5	                     mov edx, 0xb5280000	       124	intel_color.c	FUNCTION_3	CALL_15
0x4000c18	          0x4c89ff	                            mov rdi, r15	       124	intel_color.c	FUNCTION_3	CALL_15
0x4000c1b	      0xe800000000	                          call 0x4000c20	       124	intel_color.c	FUNCTION_3	CALL_15
0x4000c20	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	       126	intel_color.c	FUNCTION_3	CALL_17
0x4000c27	    0x8db320900400	                lea esi, [rbx + 0x49020]	       126	intel_color.c	FUNCTION_3	CALL_17
0x4000c2d	      0xb901000000	                              mov ecx, 1	       126	intel_color.c	FUNCTION_3	CALL_17
0x4000c32	      0xbad89ae8bc	                     mov edx, 0xbce89ad8	       126	intel_color.c	FUNCTION_3	CALL_17
0x4000c37	          0x4c89ff	                            mov rdi, r15	       126	intel_color.c	FUNCTION_3	CALL_17
0x4000c3a	      0xe800000000	                          call 0x4000c3f	       126	intel_color.c	FUNCTION_3	CALL_17
0x4000c3f	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	       127	intel_color.c	FUNCTION_3	CALL_19
0x4000c46	    0x8db324900400	                lea esi, [rbx + 0x49024]	       127	intel_color.c	FUNCTION_3	CALL_19
0x4000c4c	      0xb901000000	                              mov ecx, 1	       127	intel_color.c	FUNCTION_3	CALL_19
0x4000c51	      0xba0000081e	                     mov edx, 0x1e080000	       127	intel_color.c	FUNCTION_3	CALL_19
0x4000c56	          0x4c89ff	                            mov rdi, r15	       127	intel_color.c	FUNCTION_3	CALL_19
0x4000c59	      0xe800000000	                          call 0x4000c5e	       127	intel_color.c	FUNCTION_3	CALL_19
0x4000c5e	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	       129	intel_color.c	FUNCTION_3	CALL_21
0x4000c65	    0x8db340900400	                lea esi, [rbx + 0x49040]	       129	intel_color.c	FUNCTION_3	CALL_21
0x4000c6b	      0xb901000000	                              mov ecx, 1	       129	intel_color.c	FUNCTION_3	CALL_21
0x4000c70	      0xba00080000	                          mov edx, 0x800	       129	intel_color.c	FUNCTION_3	CALL_21
0x4000c75	          0x4c89ff	                            mov rdi, r15	       129	intel_color.c	FUNCTION_3	CALL_21
0x4000c78	      0xe800000000	                          call 0x4000c7d	       129	intel_color.c	FUNCTION_3	CALL_21
0x4000c7d	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	       130	intel_color.c	FUNCTION_3	CALL_23
0x4000c84	    0x8db344900400	                lea esi, [rbx + 0x49044]	       130	intel_color.c	FUNCTION_3	CALL_23
0x4000c8a	      0xb901000000	                              mov ecx, 1	       130	intel_color.c	FUNCTION_3	CALL_23
0x4000c8f	      0xba00010000	                          mov edx, 0x100	       130	intel_color.c	FUNCTION_3	CALL_23
0x4000c94	          0x4c89ff	                            mov rdi, r15	       130	intel_color.c	FUNCTION_3	CALL_23
0x4000c97	      0xe800000000	                          call 0x4000c9c	       130	intel_color.c	FUNCTION_3	CALL_23
0x4000c9c	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	       131	intel_color.c	FUNCTION_3	CALL_25
0x4000ca3	    0x8db348900400	                lea esi, [rbx + 0x49048]	       131	intel_color.c	FUNCTION_3	CALL_25
0x4000ca9	      0xb901000000	                              mov ecx, 1	       131	intel_color.c	FUNCTION_3	CALL_25
0x4000cae	      0xba00080000	                          mov edx, 0x800	       131	intel_color.c	FUNCTION_3	CALL_25
0x4000cb3	      0xe9c1000000	                           jmp 0x4000d79	       131	intel_color.c	FUNCTION_3	CALL_25
0x4000cb8	    0x664181ce0080	                         or r14w, 0x8000	       180	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	IF_5
0x4000cbe	        0x66448931	                    mov word [rcx], r14w	       180	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	IF_5
0x4000cc2	      0xe979fcffff	                           jmp 0x4000940	       180	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	IF_5
0x4000cc7	    0x483dffffff7f	                     cmp rax, 0x7fffffff	       188	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_4	IF_8
0x4000ccd	            0x7725	                            ja 0x4000cf4	       188	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_4	IF_8
0x4000ccf	        0x48c1e813	                           shr rax, 0x13	       189	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_4	IF_8
0x4000cd3	        0x4883c004	                              add rax, 4	       189	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_4	IF_8
0x4000cd7	    0x483dff0f0000	                          cmp rax, 0xfff	       189	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_4	IF_8
0x4000cdd	        0x480f47c5	                          cmova rax, rbp	       189	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_4	IF_8
0x4000ce1	      0x25f80f0000	                          and eax, 0xff8	       189	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_4	IF_8
0x4000ce6	          0x80cc10	                             or ah, 0x10	       189	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_4	IF_8
0x4000ce9	          0x4409f0	                            or eax, r14d	       189	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_4	IF_8
0x4000cec	          0x668901	                      mov word [rcx], ax	       189	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_4	IF_8
0x4000cef	      0xe922fcffff	                           jmp 0x4000916	       189	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_4	IF_8
0x4000cf4	          0x4c39e0	                            cmp rax, r12	       191	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_5	IF_9
0x4000cf7	     0xf87a5000000	                            ja 0x4000da2	       191	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_5	IF_9
0x4000cfd	        0x48c1e814	                           shr rax, 0x14	       192	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_5	IF_9
0x4000d01	        0x4883c004	                              add rax, 4	       192	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_5	IF_9
0x4000d05	    0x483dff0f0000	                          cmp rax, 0xfff	       192	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_5	IF_9
0x4000d0b	        0x480f47c5	                          cmova rax, rbp	       192	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_5	IF_9
0x4000d0f	      0x25f80f0000	                          and eax, 0xff8	       192	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_5	IF_9
0x4000d14	          0x4409f0	                            or eax, r14d	       192	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_5	IF_9
0x4000d17	          0x668901	                      mov word [rcx], ax	       192	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_5	IF_9
0x4000d1a	      0xe9f7fbffff	                           jmp 0x4000916	       192	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_5	IF_9
0x4000d1f	        0x4180f901	                              cmp r9b, 1	       234	intel_color.c	FUNCTION_4	IF_12	IF_13
0x4000d23	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	       237	intel_color.c	FUNCTION_4	IF_12	CALL_37
0x4000d2a	    0x8db340900400	                lea esi, [rbx + 0x49040]	       237	intel_color.c	FUNCTION_4	IF_12	CALL_37
0x4000d30	            0x19ed	                            sbb ebp, ebp	       234	intel_color.c	FUNCTION_4	IF_12	IF_13
0x4000d32	      0xb901000000	                              mov ecx, 1	       237	intel_color.c	FUNCTION_4	IF_12	CALL_37
0x4000d37	          0x4c89ff	                            mov rdi, r15	       237	intel_color.c	FUNCTION_4	IF_12	CALL_37
0x4000d3a	            0xf7d5	                                 not ebp	       234	intel_color.c	FUNCTION_4	IF_12	IF_13
0x4000d3c	    0x81e501010000	                          and ebp, 0x101	       234	intel_color.c	FUNCTION_4	IF_12	IF_13
0x4000d42	            0x89ea	                            mov edx, ebp	       237	intel_color.c	FUNCTION_4	IF_12	CALL_37
0x4000d44	      0xe800000000	                          call 0x4000d49	       237	intel_color.c	FUNCTION_4	IF_12	CALL_37
0x4000d49	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	       238	intel_color.c	FUNCTION_4	IF_12	CALL_39
0x4000d50	    0x8db344900400	                lea esi, [rbx + 0x49044]	       238	intel_color.c	FUNCTION_4	IF_12	CALL_39
0x4000d56	      0xb901000000	                              mov ecx, 1	       238	intel_color.c	FUNCTION_4	IF_12	CALL_39
0x4000d5b	            0x89ea	                            mov edx, ebp	       238	intel_color.c	FUNCTION_4	IF_12	CALL_39
0x4000d5d	          0x4c89ff	                            mov rdi, r15	       238	intel_color.c	FUNCTION_4	IF_12	CALL_39
0x4000d60	      0xe800000000	                          call 0x4000d65	       238	intel_color.c	FUNCTION_4	IF_12	CALL_39
0x4000d65	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	       239	intel_color.c	FUNCTION_4	IF_12	CALL_41
0x4000d6c	    0x8db348900400	                lea esi, [rbx + 0x49048]	       239	intel_color.c	FUNCTION_4	IF_12	CALL_41
0x4000d72	      0xb901000000	                              mov ecx, 1	       239	intel_color.c	FUNCTION_4	IF_12	CALL_41
0x4000d77	            0x89ea	                            mov edx, ebp	       239	intel_color.c	FUNCTION_4	IF_12	CALL_41
0x4000d79	          0x4c89ff	                            mov rdi, r15	       239	intel_color.c	FUNCTION_4	IF_12	CALL_41
0x4000d7c	      0xe800000000	                          call 0x4000d81	       239	intel_color.c	FUNCTION_4	IF_12	CALL_41
0x4000d81	    0x498b87180800	           mov rax, qword [r15 + 0x818] 	       241	intel_color.c	FUNCTION_4	IF_12	CALL_43
0x4000d88	    0x8db328900400	                lea esi, [rbx + 0x49028]	       241	intel_color.c	FUNCTION_4	IF_12	CALL_43
0x4000d8e	      0xb901000000	                              mov ecx, 1	       241	intel_color.c	FUNCTION_4	IF_12	CALL_43
0x4000d93	            0x31d2	                            xor edx, edx	       241	intel_color.c	FUNCTION_4	IF_12	CALL_43
0x4000d95	          0x4c89ff	                            mov rdi, r15	       241	intel_color.c	FUNCTION_4	IF_12	CALL_43
0x4000d98	      0xe800000000	                          call 0x4000d9d	       241	intel_color.c	FUNCTION_4	IF_12	CALL_43
0x4000d9d	      0xe973fdffff	                           jmp 0x4000b15	       241	intel_color.c	FUNCTION_4	IF_12	CALL_43
0x4000da2	          0x4c39e8	                            cmp rax, r13	       193	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_6	IF_10
0x4000da5	     0xf8787000000	                            ja 0x4000e32	       193	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_6	IF_10
0x4000dab	        0x48c1e815	                           shr rax, 0x15	       194	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_6	IF_10
0x4000daf	        0x4883c004	                              add rax, 4	       194	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_6	IF_10
0x4000db3	    0x483dff0f0000	                          cmp rax, 0xfff	       194	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_6	IF_10
0x4000db9	        0x480f47c5	                          cmova rax, rbp	       194	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_6	IF_10
0x4000dbd	      0x25f80f0000	                          and eax, 0xff8	       194	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_6	IF_10
0x4000dc2	          0x80cc70	                             or ah, 0x70	       194	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_6	IF_10
0x4000dc5	          0x4409f0	                            or eax, r14d	       194	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_6	IF_10
0x4000dc8	          0x668901	                      mov word [rcx], ax	       194	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_6	IF_10
0x4000dcb	      0xe946fbffff	                           jmp 0x4000916	       194	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_6	IF_10
0x4000dd0	            0x31c9	                            xor ecx, ecx	       161	intel_color.c	FUNCTION_4	ELSE_1	IF_3	CALL_7
0x4000dd2	    0x48bdffffffff	         movabs rbp, 0x7fffffffffffffff 	       105	intel_color.c	FUNCTION_2	FOR_1
0x4000ddc	    0x48beffffffff	                 movabs rsi, 0x3ffffffff	       105	intel_color.c	FUNCTION_2	FOR_1
0x4000de6	    0x41bbdbdbdbdb	                    mov r11d, 0xdbdbdbdb	       105	intel_color.c	FUNCTION_2	FOR_1
0x4000dec	    0x48bf00000000	          movabs rdi, 0x8000000000000000	       105	intel_color.c	FUNCTION_2	FOR_1
0x4000df6	        0x498b140a	              mov rdx, qword [r10 + rcx]	        94	intel_color.c	FUNCTION_2	FOR_1
0x4000dfa	          0x4889d0	                            mov rax, rdx	       105	intel_color.c	FUNCTION_2	FOR_1
0x4000dfd	          0x4821e8	                            and rax, rbp	       105	intel_color.c	FUNCTION_2	FOR_1
0x4000e00	          0x4839f0	                            cmp rax, rsi	       105	intel_color.c	FUNCTION_2	FOR_1
0x4000e03	        0x480f47c6	                          cmova rax, rsi	       105	intel_color.c	FUNCTION_2	FOR_1
0x4000e07	          0x4821fa	                            and rdx, rdi	       105	intel_color.c	FUNCTION_2	FOR_1
0x4000e0a	        0x48c1e802	                              shr rax, 2	       105	intel_color.c	FUNCTION_2	FOR_1
0x4000e0e	        0x490fafc3	                           imul rax, r11	       105	intel_color.c	FUNCTION_2	FOR_1
0x4000e12	        0x48c1e81e	                           shr rax, 0x1e	       105	intel_color.c	FUNCTION_2	FOR_1
0x4000e16	          0x4809d0	                             or rax, rdx	       105	intel_color.c	FUNCTION_2	FOR_1
0x4000e19	      0x4889440c20	       mov qword [rsp + rcx + 0x20], rax	       105	intel_color.c	FUNCTION_2	FOR_1
0x4000e1e	        0x4883c108	                              add rcx, 8	       105	intel_color.c	FUNCTION_2	FOR_1
0x4000e22	        0x4883f948	                           cmp rcx, 0x48	        93	intel_color.c	FUNCTION_2	FOR_1
0x4000e26	            0x75ce	                           jne 0x4000df6	        93	intel_color.c	FUNCTION_2	FOR_1
0x4000e28	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       161	intel_color.c	FUNCTION_4	ELSE_1	IF_3	CALL_7
0x4000e2d	      0xe98dfaffff	                           jmp 0x40008bf	       161	intel_color.c	FUNCTION_4	ELSE_1	IF_3	CALL_7
0x4000e32	        0x48c1e816	                           shr rax, 0x16	       197	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_7
0x4000e36	        0x4883c004	                              add rax, 4	       197	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_7
0x4000e3a	    0x483dff0f0000	                          cmp rax, 0xfff	       197	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_7
0x4000e40	        0x480f47c5	                          cmova rax, rbp	       197	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_7
0x4000e44	      0x25f80f0000	                          and eax, 0xff8	       197	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_7
0x4000e49	          0x80cc60	                             or ah, 0x60	       197	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_7
0x4000e4c	          0x4409f0	                            or eax, r14d	       197	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_7
0x4000e4f	          0x668901	                      mov word [rcx], ax	       197	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_7
0x4000e52	      0xe9bffaffff	                           jmp 0x4000916	       197	intel_color.c	FUNCTION_4	ELSE_1	IF_3	ELSE_2	FOR_1	ELSE_7
0x4000e57	        0x4180f901	                              cmp r9b, 1	       210	intel_color.c	FUNCTION_4	ELSE_8	FOR_2	IF_11
0x4000e5b	    0xc70424000000	                      mov dword [rsp], 0	       210	intel_color.c	FUNCTION_4	ELSE_8	FOR_2	IF_11
0x4000e62	            0x19ed	                            sbb ebp, ebp	       210	intel_color.c	FUNCTION_4	ELSE_8	FOR_2	IF_11
0x4000e64	    0x81e5406a0000	                         and ebp, 0x6a40	       210	intel_color.c	FUNCTION_4	ELSE_8	FOR_2	IF_11
0x4000e6a	    0x81c5c00d0000	                          add ebp, 0xdc0	       210	intel_color.c	FUNCTION_4	ELSE_8	FOR_2	IF_11
0x4000e70	        0x4180f901	                              cmp r9b, 1	       210	intel_color.c	FUNCTION_4	ELSE_8	FOR_2	IF_11
0x4000e74	            0x19d2	                            sbb edx, edx	       210	intel_color.c	FUNCTION_4	ELSE_8	FOR_2	IF_11
0x4000e76	          0x4531ed	                          xor r13d, r13d	       210	intel_color.c	FUNCTION_4	ELSE_8	FOR_2	IF_11
0x4000e79	          0x4531f6	                          xor r14d, r14d	       210	intel_color.c	FUNCTION_4	ELSE_8	FOR_2	IF_11
0x4000e7c	    0x81e20000406a	                     and edx, 0x6a400000	       210	intel_color.c	FUNCTION_4	ELSE_8	FOR_2	IF_11
0x4000e82	    0x81c20000c00d	                      add edx, 0xdc00000	       210	intel_color.c	FUNCTION_4	ELSE_8	FOR_2	IF_11
0x4000e88	          0x4189d4	                           mov r12d, edx	       210	intel_color.c	FUNCTION_4	ELSE_8	FOR_2	IF_11
0x4000e8b	      0xe945fbffff	                           jmp 0x40009d5	       210	intel_color.c	FUNCTION_4	ELSE_8	FOR_2	IF_11
0x4000e90	      0xe800000000	                          call 0x4000e95	       250	intel_color.c	FUNCTION_4
haswell_load_luts	CALL,9:functions,0:WHILE,0:IF,2:DO,0:FOR,0:ELSE,0:SWITCH,0	47
0x4000760	            0x4154	                                push r12	       363	intel_color.c	FUNCTION_9
0x4000762	              0x55	                                push rbp	       363	intel_color.c	FUNCTION_9
0x4000763	              0x53	                                push rbx	       363	intel_color.c	FUNCTION_9
0x4000764	          0x4c8b27	                    mov r12, qword [rdi]	       364	intel_color.c	FUNCTION_9
0x4000767	          0x4889fb	                            mov rbx, rdi	       363	intel_color.c	FUNCTION_9
0x400076a	        0x498b2c24	                    mov rbp, qword [r12]	       365	intel_color.c	FUNCTION_9
0x400076e	    0xf68566060000	              test byte [rbp + 0x666], 8	       376	intel_color.c	FUNCTION_9	IF_1	CALL_4
0x4000775	            0x7412	                            je 0x4000789	       376	intel_color.c	FUNCTION_9	IF_1	CALL_4
0x4000777	    0x80bf48030000	               cmp byte [rdi + 0x348], 0	       376	intel_color.c	FUNCTION_9	IF_1	CALL_4
0x400077e	            0x7409	                            je 0x4000789	       376	intel_color.c	FUNCTION_9	IF_1	CALL_4
0x4000780	    0x83bf8c040000	              cmp dword [rdi + 0x48c], 3	       376	intel_color.c	FUNCTION_9	IF_1	CALL_4
0x4000787	            0x7447	                            je 0x40007d0	       376	intel_color.c	FUNCTION_9	IF_1	CALL_4
0x4000789	    0xc7838c040000	              mov dword [rbx + 0x48c], 0	       382	intel_color.c	FUNCTION_9
0x4000793	    0x418bb424b004	           mov esi, dword [r12 + 0x4b0] 	       383	intel_color.c	FUNCTION_9	CALL_7
0x400079b	          0x4889ef	                            mov rdi, rbp	       383	intel_color.c	FUNCTION_9	CALL_7
0x400079e	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	       383	intel_color.c	FUNCTION_9	CALL_7
0x40007a5	            0x31d2	                            xor edx, edx	       383	intel_color.c	FUNCTION_9	CALL_7
0x40007a7	      0xb901000000	                              mov ecx, 1	       383	intel_color.c	FUNCTION_9	CALL_7
0x40007ac	          0xc1e60b	                            shl esi, 0xb	       383	intel_color.c	FUNCTION_9	CALL_7
0x40007af	    0x81c680a40400	                        add esi, 0x4a480	       383	intel_color.c	FUNCTION_9	CALL_7
0x40007b5	      0xe800000000	                          call 0x40007ba	       383	intel_color.c	FUNCTION_9	CALL_7
0x40007ba	    0x488bb3f00100	           mov rsi, qword [rbx + 0x1f0] 	       357	intel_color.c	FUNCTION_8	CALL_1
0x40007c1	          0x4889da	                            mov rdx, rbx	       357	intel_color.c	FUNCTION_8	CALL_1
0x40007c4	          0x488b3b	                    mov rdi, qword [rbx]	       357	intel_color.c	FUNCTION_8	CALL_1
0x40007c7	              0x5b	                                 pop rbx	       389	intel_color.c	FUNCTION_9
0x40007c8	              0x5d	                                 pop rbp	       389	intel_color.c	FUNCTION_9
0x40007c9	            0x415c	                                 pop r12	       389	intel_color.c	FUNCTION_9
0x40007cb	      0xe9b0faffff	         jmp sym.i9xx_load_luts_internal	       357	intel_color.c	FUNCTION_8	CALL_1
0x40007d0	      0xe800000000	                          call 0x40007d5	       378	intel_color.c	FUNCTION_9	IF_1	CALL_5
0x40007d5	    0xc7838c040000	              mov dword [rbx + 0x48c], 0	       382	intel_color.c	FUNCTION_9
0x40007df	    0x418bb424b004	           mov esi, dword [r12 + 0x4b0] 	       383	intel_color.c	FUNCTION_9	CALL_7
0x40007e7	          0x4889ef	                            mov rdi, rbp	       383	intel_color.c	FUNCTION_9	CALL_7
0x40007ea	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	       383	intel_color.c	FUNCTION_9	CALL_7
0x40007f1	      0xb901000000	                              mov ecx, 1	       383	intel_color.c	FUNCTION_9	CALL_7
0x40007f6	            0x31d2	                            xor edx, edx	       383	intel_color.c	FUNCTION_9	CALL_7
0x40007f8	          0xc1e60b	                            shl esi, 0xb	       383	intel_color.c	FUNCTION_9	CALL_7
0x40007fb	    0x81c680a40400	                        add esi, 0x4a480	       383	intel_color.c	FUNCTION_9	CALL_7
0x4000801	      0xe800000000	                          call 0x4000806	       383	intel_color.c	FUNCTION_9	CALL_7
0x4000806	          0x488b3b	                    mov rdi, qword [rbx]	       357	intel_color.c	FUNCTION_8	CALL_1
0x4000809	    0x488bb3f00100	           mov rsi, qword [rbx + 0x1f0] 	       357	intel_color.c	FUNCTION_8	CALL_1
0x4000810	          0x4889da	                            mov rdx, rbx	       357	intel_color.c	FUNCTION_8	CALL_1
0x4000813	      0xe868faffff	        call sym.i9xx_load_luts_internal	       357	intel_color.c	FUNCTION_8	CALL_1
0x4000818	          0x4889df	                            mov rdi, rbx	       388	intel_color.c	FUNCTION_9	CALL_9
0x400081b	              0x5b	                                 pop rbx	       389	intel_color.c	FUNCTION_9
0x400081c	              0x5d	                                 pop rbp	       389	intel_color.c	FUNCTION_9
0x400081d	            0x415c	                                 pop r12	       389	intel_color.c	FUNCTION_9
0x400081f	      0xe900000000	                           jmp 0x4000824	       388	intel_color.c	FUNCTION_9	CALL_9
