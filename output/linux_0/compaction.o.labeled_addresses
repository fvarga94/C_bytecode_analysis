update_pageblock_skip	SWITCH,0:DO,0:IF,0:CALL,0:FOR,0:functions,0:WHILE,0:ELSE,0	45
0x4000e50	          0x4885d2	                           test rdx, rdx	       304	compaction.c	FUNCTION_17	IF_3
0x4000e53	           0xf95c0	                                setne al	       304	compaction.c	FUNCTION_17	IF_3
0x4000e56	           0xa4779	                or al, byte [rdi + 0x79]	       304	compaction.c	FUNCTION_17	IF_3
0x4000e59	     0xf8594000000	                           jne 0x4000ef3	       304	compaction.c	FUNCTION_17	IF_3
0x4000e5f	          0x4885f6	                           test rsi, rsi	       304	compaction.c	FUNCTION_17	IF_3
0x4000e62	     0xf848b000000	                            je 0x4000ef3	       304	compaction.c	FUNCTION_17	IF_3
0x4000e68	          0x4889f2	                            mov rdx, rsi	       307	compaction.c	FUNCTION_17	CALL_1
0x4000e6b	    0x482b15000000	             sub rdx, qword [0x04000e72]	       307	compaction.c	FUNCTION_17	CALL_1
0x4000e72	            0x4155	                                push r13	       294	compaction.c	FUNCTION_17
0x4000e74	            0x4154	                                push r12	       294	compaction.c	FUNCTION_17
0x4000e76	              0x55	                                push rbp	       294	compaction.c	FUNCTION_17
0x4000e77	          0x4189cc	                           mov r12d, ecx	       294	compaction.c	FUNCTION_17
0x4000e7a	              0x53	                                push rbx	       294	compaction.c	FUNCTION_17
0x4000e7b	          0x4889f3	                            mov rbx, rsi	       294	compaction.c	FUNCTION_17
0x4000e7e	        0x4c8b6f20	            mov r13, qword [rdi + 0x20] 	       295	compaction.c	FUNCTION_17
0x4000e82	      0xbe01000000	                              mov esi, 1	       307	compaction.c	FUNCTION_17	CALL_1
0x4000e87	          0x4889fd	                            mov rbp, rdi	       307	compaction.c	FUNCTION_17	CALL_1
0x4000e8a	    0x41b801000000	                              mov r8d, 1	       307	compaction.c	FUNCTION_17	CALL_1
0x4000e90	        0x48c1fa06	                              sar rdx, 6	       307	compaction.c	FUNCTION_17	CALL_1
0x4000e94	          0x4889df	                            mov rdi, rbx	       307	compaction.c	FUNCTION_17	CALL_1
0x4000e97	      0xb903000000	                              mov ecx, 3	       307	compaction.c	FUNCTION_17	CALL_1
0x4000e9c	      0xe800000000	                          call 0x4000ea1	       307	compaction.c	FUNCTION_17	CALL_1
0x4000ea1	    0x482b1d000000	             sub rbx, qword [0x04000ea8]	       309	compaction.c	FUNCTION_17	CALL_2
0x4000ea8	          0x4889de	                            mov rsi, rbx	       309	compaction.c	FUNCTION_17	CALL_2
0x4000eab	        0x48c1fe06	                              sar rsi, 6	       309	compaction.c	FUNCTION_17	CALL_2
0x4000eaf	          0x4584e4	                         test r12b, r12b	       312	compaction.c	FUNCTION_17	IF_4
0x4000eb2	            0x7429	                            je 0x4000edd	       312	compaction.c	FUNCTION_17	IF_4
0x4000eb4	    0x493bb5100400	           cmp rsi, qword [r13 + 0x410] 	       313	compaction.c	FUNCTION_17	IF_4	IF_5
0x4000ebb	            0x7607	                           jbe 0x4000ec4	       313	compaction.c	FUNCTION_17	IF_4	IF_5
0x4000ebd	    0x4989b5100400	            mov qword [r13 + 0x410], rsi	       314	compaction.c	FUNCTION_17	IF_4	IF_5
0x4000ec4	          0x8b4574	            mov eax, dword [rbp + 0x74] 	       315	compaction.c	FUNCTION_17	IF_4	IF_6
0x4000ec7	            0x85c0	                           test eax, eax	       315	compaction.c	FUNCTION_17	IF_4	IF_6
0x4000ec9	            0x7422	                            je 0x4000eed	       315	compaction.c	FUNCTION_17	IF_4	IF_6
0x4000ecb	    0x493bb5180400	           cmp rsi, qword [r13 + 0x418] 	       315	compaction.c	FUNCTION_17	IF_4	IF_6
0x4000ed2	            0x7619	                           jbe 0x4000eed	       315	compaction.c	FUNCTION_17	IF_4	IF_6
0x4000ed4	    0x4989b5180400	            mov qword [r13 + 0x418], rsi	       317	compaction.c	FUNCTION_17	IF_4	IF_6
0x4000edb	            0xeb10	                           jmp 0x4000eed	       317	compaction.c	FUNCTION_17	IF_4	IF_6
0x4000edd	    0x493bb5080400	           cmp rsi, qword [r13 + 0x408] 	       319	compaction.c	FUNCTION_17	ELSE_1	IF_7
0x4000ee4	            0x7307	                           jae 0x4000eed	       319	compaction.c	FUNCTION_17	ELSE_1	IF_7
0x4000ee6	    0x4989b5080400	            mov qword [r13 + 0x408], rsi	       320	compaction.c	FUNCTION_17	ELSE_1	IF_7
0x4000eed	              0x5b	                                 pop rbx	       322	compaction.c	FUNCTION_17
0x4000eee	              0x5d	                                 pop rbp	       322	compaction.c	FUNCTION_17
0x4000eef	            0x415c	                                 pop r12	       322	compaction.c	FUNCTION_17
0x4000ef1	            0x415d	                                 pop r13	       322	compaction.c	FUNCTION_17
0x4000ef3	            0xf3c3	                                     ret	       322	compaction.c	FUNCTION_17
__ClearPageMovable	SWITCH,0:DO,0:IF,0:CALL,4:FOR,0:functions,0:WHILE,0:ELSE,0	2
0x4000050	      0x4883670802	                  and qword [rdi + 8], 2	       128	compaction.c	FUNCTION_7
0x4000055	              0xc3	                                     ret	       128	compaction.c	FUNCTION_7
__SetPageMovable	SWITCH,0:DO,0:IF,0:CALL,3:FOR,0:functions,0:WHILE,0:ELSE,0	3
0x4000040	        0x4883ce02	                               or rsi, 2	       115	compaction.c	FUNCTION_6
0x4000044	        0x48897708	                mov qword [rdi + 8], rsi	       115	compaction.c	FUNCTION_6
0x4000048	              0xc3	                                     ret	       115	compaction.c	FUNCTION_6
compaction_unregister_node	SWITCH,0:DO,0:IF,0:CALL,1:FOR,0:functions,0:WHILE,0:ELSE,0	2
0x4004260	    0x48c7c6000000	                              mov rsi, 0	      1911	compaction.c	FUNCTION_51	CALL_1
0x4004267	      0xe900000000	                           jmp 0x400426c	      1911	compaction.c	FUNCTION_51	CALL_1
sysctl_extfrag_handler	SWITCH,0:DO,0:IF,0:CALL,1:FOR,0:functions,0:WHILE,0:ELSE,0	3
0x4004240	      0xe800000000	                          call 0x4004245	      1881	compaction.c	FUNCTION_48	CALL_1
0x4004245	            0x31c0	                            xor eax, eax	      1884	compaction.c	FUNCTION_48
0x4004247	              0xc3	                                     ret	      1884	compaction.c	FUNCTION_48
isolate_freepages_range	SWITCH,0:DO,0:IF,5:CALL,11:FOR,1:functions,0:WHILE,0:ELSE,0	86
0x4002b20	            0x4156	                                push r14	       594	compaction.c	FUNCTION_25
0x4002b22	            0x4155	                                push r13	       594	compaction.c	FUNCTION_25
0x4002b24	          0x4989d6	                            mov r14, rdx	       594	compaction.c	FUNCTION_25
0x4002b27	            0x4154	                                push r12	       594	compaction.c	FUNCTION_25
0x4002b29	              0x55	                                push rbp	       594	compaction.c	FUNCTION_25
0x4002b2a	          0x4989fd	                            mov r13, rdi	       594	compaction.c	FUNCTION_25
0x4002b2d	              0x53	                                push rbx	       594	compaction.c	FUNCTION_25
0x4002b2e	          0x4889f5	                            mov rbp, rsi	       594	compaction.c	FUNCTION_25
0x4002b31	        0x4883ec20	                           sub rsp, 0x20	       594	compaction.c	FUNCTION_25
0x4002b35	        0x488b5720	            mov rdx, qword [rdi + 0x20] 	       600	compaction.c	FUNCTION_25	IF_1
0x4002b39	    0x65488b042528	                mov rax, qword gs:[0x28]	       594	compaction.c	FUNCTION_25
0x4002b42	      0x4889442418	             mov qword [rsp + 0x18], rax	       594	compaction.c	FUNCTION_25
0x4002b47	            0x31c0	                            xor eax, eax	       594	compaction.c	FUNCTION_25
0x4002b49	          0x4889f0	                            mov rax, rsi	       599	compaction.c	FUNCTION_25	CALL_2
0x4002b4c	      0x4c8d642408	                      lea r12, [rsp + 8]	       596	compaction.c	FUNCTION_25	CALL_1
0x4002b51	        0x488b7a58	            mov rdi, qword [rdx + 0x58] 	       600	compaction.c	FUNCTION_25	IF_1
0x4002b55	    0x482500feffff	             and rax, 0xfffffffffffffe00	       599	compaction.c	FUNCTION_25	CALL_2
0x4002b5b	      0x4c89642408	                mov qword [rsp + 8], r12	       596	compaction.c	FUNCTION_25	CALL_1
0x4002b60	      0x4c89642410	             mov qword [rsp + 0x10], r12	       596	compaction.c	FUNCTION_25	CALL_1
0x4002b65	          0x4839f8	                            cmp rax, rdi	       596	compaction.c	FUNCTION_25	CALL_1
0x4002b68	        0x480f43f8	                         cmovae rdi, rax	       596	compaction.c	FUNCTION_25	CALL_1
0x4002b6c	    0x488d86000200	                  lea rax, [rsi + 0x200]	       602	compaction.c	FUNCTION_25	CALL_3
0x4002b73	    0x482500feffff	             and rax, 0xfffffffffffffe00	       602	compaction.c	FUNCTION_25	CALL_3
0x4002b79	          0x4c39f6	                            cmp rsi, r14	       604	compaction.c	FUNCTION_25	FOR_1
0x4002b7c	            0x7252	                            jb 0x4002bd0	       604	compaction.c	FUNCTION_25	FOR_1
0x4002b7e	      0xe9d4000000	                           jmp 0x4002c57	       604	compaction.c	FUNCTION_25	FOR_1
0x4002b83	        0x48c1e706	                              shl rdi, 6	       158	internal.h	FUNCTION_108	CALL_1
0x4002b87	          0x4889f8	                            mov rax, rdi	       158	internal.h	FUNCTION_108	CALL_1
0x4002b8a	    0x480305000000	             add rax, qword [0x04002b91]	       158	internal.h	FUNCTION_108	CALL_1
0x4002b91	          0x4885c0	                           test rax, rax	       623	compaction.c	FUNCTION_25	FOR_1	IF_3	CALL_8
0x4002b94	     0xf8486000000	                            je 0x4002c20	       623	compaction.c	FUNCTION_25	FOR_1	IF_3	CALL_8
0x4002b9a	    0x41b801000000	                              mov r8d, 1	       627	compaction.c	FUNCTION_25	FOR_1	CALL_9
0x4002ba0	          0x4c89e1	                            mov rcx, r12	       627	compaction.c	FUNCTION_25	FOR_1	CALL_9
0x4002ba3	          0x4889da	                            mov rdx, rbx	       627	compaction.c	FUNCTION_25	FOR_1	CALL_9
0x4002ba6	          0x4889e6	                            mov rsi, rsp	       627	compaction.c	FUNCTION_25	FOR_1	CALL_9
0x4002ba9	          0x4c89ef	                            mov rdi, r13	       627	compaction.c	FUNCTION_25	FOR_1	CALL_9
0x4002bac	      0xe88fe8ffff	        call sym.isolate_freepages_block	       627	compaction.c	FUNCTION_25	FOR_1	CALL_9
0x4002bb1	          0x4885c0	                           test rax, rax	       635	compaction.c	FUNCTION_25	FOR_1	IF_4
0x4002bb4	            0x746a	                            je 0x4002c20	       635	compaction.c	FUNCTION_25	FOR_1	IF_4
0x4002bb6	          0x4801c5	                            add rbp, rax	       604	compaction.c	FUNCTION_25	FOR_1
0x4002bb9	    0x488d83000200	                  lea rax, [rbx + 0x200]	       606	compaction.c	FUNCTION_25	FOR_1
0x4002bc0	          0x4939ee	                            cmp r14, rbp	       604	compaction.c	FUNCTION_25	FOR_1
0x4002bc3	     0xf868e000000	                           jbe 0x4002c57	       604	compaction.c	FUNCTION_25	FOR_1
0x4002bc9	        0x498b5520	            mov rdx, qword [r13 + 0x20] 	       604	compaction.c	FUNCTION_25	FOR_1
0x4002bcd	          0x4889df	                            mov rdi, rbx	       605	compaction.c	FUNCTION_25	FOR_1
0x4002bd0	          0x4939c6	                            cmp r14, rax	       610	compaction.c	FUNCTION_25	FOR_1	CALL_4
0x4002bd3	        0x48892c24	                    mov qword [rsp], rbp	       608	compaction.c	FUNCTION_25	FOR_1
0x4002bd7	        0x490f46c6	                         cmovbe rax, r14	       610	compaction.c	FUNCTION_25	FOR_1	CALL_4
0x4002bdb	          0x4839c5	                            cmp rbp, rax	       617	compaction.c	FUNCTION_25	FOR_1	IF_2
0x4002bde	          0x4889c3	                            mov rbx, rax	       610	compaction.c	FUNCTION_25	FOR_1	CALL_4
0x4002be1	            0x721f	                            jb 0x4002c02	       617	compaction.c	FUNCTION_25	FOR_1	IF_2
0x4002be3	    0x488d9d000200	                  lea rbx, [rbp + 0x200]	       620	compaction.c	FUNCTION_25	FOR_1	IF_2	CALL_7
0x4002bea	          0x4889ef	                            mov rdi, rbp	       618	compaction.c	FUNCTION_25	FOR_1	IF_2	CALL_5
0x4002bed	    0x4881e700feff	             and rdi, 0xfffffffffffffe00	       618	compaction.c	FUNCTION_25	FOR_1	IF_2	CALL_5
0x4002bf4	    0x4881e300feff	             and rbx, 0xfffffffffffffe00	       620	compaction.c	FUNCTION_25	FOR_1	IF_2	CALL_7
0x4002bfb	          0x4c39f3	                            cmp rbx, r14	       620	compaction.c	FUNCTION_25	FOR_1	IF_2	CALL_7
0x4002bfe	        0x490f47de	                          cmova rbx, r14	       620	compaction.c	FUNCTION_25	FOR_1	IF_2	CALL_7
0x4002c02	    0x80ba2d040000	               cmp byte [rdx + 0x42d], 0	       157	internal.h	FUNCTION_108	IF_1
0x4002c09	     0xf8574ffffff	                           jne 0x4002b83	       157	internal.h	FUNCTION_108	IF_1
0x4002c0f	          0x4889de	                            mov rsi, rbx	       160	internal.h	FUNCTION_108	CALL_2
0x4002c12	      0xe800000000	                          call 0x4002c17	       160	internal.h	FUNCTION_108	CALL_2
0x4002c17	          0x4885c0	                           test rax, rax	       623	compaction.c	FUNCTION_25	FOR_1	IF_3	CALL_8
0x4002c1a	     0xf857affffff	                           jne 0x4002b9a	       623	compaction.c	FUNCTION_25	FOR_1	IF_3	CALL_8
0x4002c20	          0x4c89e7	                            mov rdi, r12	       646	compaction.c	FUNCTION_25	CALL_10
0x4002c23	      0xe818e4ffff	                      call sym.map_pages	       646	compaction.c	FUNCTION_25	CALL_10
0x4002c28	          0x4c39f5	                            cmp rbp, r14	       648	compaction.c	FUNCTION_25	IF_5
0x4002c2b	          0x4889e8	                            mov rax, rbp	       648	compaction.c	FUNCTION_25	IF_5
0x4002c2e	            0x730a	                           jae 0x4002c3a	       648	compaction.c	FUNCTION_25	IF_5
0x4002c30	          0x4c89e7	                            mov rdi, r12	       650	compaction.c	FUNCTION_25	IF_5	CALL_11
0x4002c33	      0xe848e5ffff	              call sym.release_freepages	       650	compaction.c	FUNCTION_25	IF_5	CALL_11
0x4002c38	            0x31c0	                            xor eax, eax	       651	compaction.c	FUNCTION_25	IF_5
0x4002c3a	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       656	compaction.c	FUNCTION_25
0x4002c3f	    0x6548330c2528	                xor rcx, qword gs:[0x28]	       656	compaction.c	FUNCTION_25
0x4002c48	            0x751a	                           jne 0x4002c64	       656	compaction.c	FUNCTION_25
0x4002c4a	        0x4883c420	                           add rsp, 0x20	       656	compaction.c	FUNCTION_25
0x4002c4e	              0x5b	                                 pop rbx	       656	compaction.c	FUNCTION_25
0x4002c4f	              0x5d	                                 pop rbp	       656	compaction.c	FUNCTION_25
0x4002c50	            0x415c	                                 pop r12	       656	compaction.c	FUNCTION_25
0x4002c52	            0x415d	                                 pop r13	       656	compaction.c	FUNCTION_25
0x4002c54	            0x415e	                                 pop r14	       656	compaction.c	FUNCTION_25
0x4002c56	              0xc3	                                     ret	       656	compaction.c	FUNCTION_25
0x4002c57	          0x4c89e7	                            mov rdi, r12	       646	compaction.c	FUNCTION_25	CALL_10
0x4002c5a	      0xe8e1e3ffff	                      call sym.map_pages	       646	compaction.c	FUNCTION_25	CALL_10
0x4002c5f	          0x4889e8	                            mov rax, rbp	       646	compaction.c	FUNCTION_25	CALL_10
0x4002c62	            0xebd6	                           jmp 0x4002c3a	       646	compaction.c	FUNCTION_25	CALL_10
0x4002c64	      0xe800000000	                          call 0x4002c69	       656	compaction.c	FUNCTION_25
kcompactd_stop	SWITCH,0:DO,0:IF,1:CALL,3:FOR,0:functions,0:WHILE,0:ELSE,0	11
0x4004410	              0x53	                                push rbx	      2107	compaction.c	FUNCTION_58
0x4004411	          0x4863df	                         movsxd rbx, edi	      2108	compaction.c	FUNCTION_58	CALL_1
0x4004414	    0x488b04dd0000	                  mov rax, qword [rbx*8]	      2108	compaction.c	FUNCTION_58	CALL_1
0x400441c	    0x488bb8b03400	          mov rdi, qword [rax + 0x34b0] 	      2108	compaction.c	FUNCTION_58	CALL_1
0x4004423	          0x4885ff	                           test rdi, rdi	      2110	compaction.c	FUNCTION_58	IF_1
0x4004426	            0x7418	                            je 0x4004440	      2110	compaction.c	FUNCTION_58	IF_1
0x4004428	      0xe800000000	                          call 0x400442d	      2111	compaction.c	FUNCTION_58	IF_1	CALL_2
0x400442d	    0x488b04dd0000	                  mov rax, qword [rbx*8]	      2112	compaction.c	FUNCTION_58	IF_1	CALL_3
0x4004435	    0x48c780b03400	            mov qword [rax + 0x34b0], 0 	      2112	compaction.c	FUNCTION_58	IF_1	CALL_3
0x4004440	              0x5b	                                 pop rbx	      2114	compaction.c	FUNCTION_58
0x4004441	              0xc3	                                     ret	      2114	compaction.c	FUNCTION_58
reset_isolation_suitable	SWITCH,0:DO,0:IF,2:CALL,2:FOR,1:functions,0:WHILE,0:ELSE,0	17
0x4002ae0	              0x55	                                push rbp	       273	compaction.c	FUNCTION_16
0x4002ae1	    0x488daf001400	                 lea rbp, [rdi + 0x1400]	       273	compaction.c	FUNCTION_16
0x4002ae8	              0x53	                                push rbx	       273	compaction.c	FUNCTION_16
0x4002ae9	          0x4889fb	                            mov rbx, rdi	       273	compaction.c	FUNCTION_16
0x4002aec	      0x48837b7000	               cmp qword [rbx + 0x70], 0	       278	compaction.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0x4002af1	            0x7409	                            je 0x4002afc	       278	compaction.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0x4002af3	    0x80bb2c040000	               cmp byte [rbx + 0x42c], 0	       282	compaction.c	FUNCTION_16	FOR_1	IF_2
0x4002afa	            0x750f	                           jne 0x4002b0b	       282	compaction.c	FUNCTION_16	FOR_1	IF_2
0x4002afc	    0x4881c3000500	                          add rbx, 0x500	       282	compaction.c	FUNCTION_16	FOR_1	IF_2
0x4002b03	          0x4839eb	                            cmp rbx, rbp	       276	compaction.c	FUNCTION_16	FOR_1
0x4002b06	            0x75e4	                           jne 0x4002aec	       276	compaction.c	FUNCTION_16	FOR_1
0x4002b08	              0x5b	                                 pop rbx	       285	compaction.c	FUNCTION_16
0x4002b09	              0x5d	                                 pop rbp	       285	compaction.c	FUNCTION_16
0x4002b0a	              0xc3	                                     ret	       285	compaction.c	FUNCTION_16
0x4002b0b	          0x4889df	                            mov rdi, rbx	       283	compaction.c	FUNCTION_16	FOR_1	CALL_2
0x4002b0e	      0xe8ede3ffff	     call sym.__reset_isolation_suitable	       283	compaction.c	FUNCTION_16	FOR_1	CALL_2
0x4002b13	            0xebe7	                           jmp 0x4002afc	       283	compaction.c	FUNCTION_16	FOR_1	CALL_2
sysctl_compaction_handler	SWITCH,0:DO,0:IF,1:CALL,1:FOR,0:functions,0:WHILE,0:ELSE,0	32
0x40041d0	            0x85f6	                           test esi, esi	      1872	compaction.c	FUNCTION_47	IF_1
0x40041d2	            0x7503	                           jne 0x40041d7	      1872	compaction.c	FUNCTION_47	IF_1
0x40041d4	            0x31c0	                            xor eax, eax	      1876	compaction.c	FUNCTION_47
0x40041d6	              0xc3	                                     ret	      1876	compaction.c	FUNCTION_47
0x40041d7	              0x55	                                push rbp	      1871	compaction.c	FUNCTION_47
0x40041d8	              0x53	                                push rbx	      1871	compaction.c	FUNCTION_47
0x40041d9	      0xbb40000000	                           mov ebx, 0x40	       265	nodemask.h	FUNCTION_81	CALL_2
0x40041de	      0xe800000000	                          call 0x40041e3	      1856	compaction.c	FUNCTION_46	CALL_1
0x40041e3	      0xbe40000000	                           mov esi, 0x40	       265	nodemask.h	FUNCTION_81	CALL_2
0x40041e8	    0x48c7c7000000	                              mov rdi, 0	       265	nodemask.h	FUNCTION_81	CALL_2
0x40041ef	      0xe800000000	                          call 0x40041f4	       265	nodemask.h	FUNCTION_81	CALL_2
0x40041f4	          0x83f840	                           cmp eax, 0x40	       265	nodemask.h	FUNCTION_81	CALL_2
0x40041f7	           0xf4ed8	                         cmovle ebx, eax	       265	nodemask.h	FUNCTION_81	CALL_2
0x40041fa	          0x83fb40	                           cmp ebx, 0x40	      1858	compaction.c	FUNCTION_46	CALL_2
0x40041fd	            0x7430	                            je 0x400422f	      1858	compaction.c	FUNCTION_46	CALL_2
0x40041ff	      0xbd40000000	                           mov ebp, 0x40	       271	nodemask.h	FUNCTION_82	CALL_2
0x4004204	            0x89df	                            mov edi, ebx	      1859	compaction.c	FUNCTION_46	CALL_3
0x4004206	      0xe8f5f5ffff	                   call sym.compact_node	      1859	compaction.c	FUNCTION_46	CALL_3
0x400420b	          0x8d5301	                      lea edx, [rbx + 1]	       271	nodemask.h	FUNCTION_82	CALL_2
0x400420e	      0xbe40000000	                           mov esi, 0x40	       271	nodemask.h	FUNCTION_82	CALL_2
0x4004213	    0x48c7c7000000	                              mov rdi, 0	       271	nodemask.h	FUNCTION_82	CALL_2
0x400421a	          0x4863d2	                         movsxd rdx, edx	       271	nodemask.h	FUNCTION_82	CALL_2
0x400421d	      0xe800000000	                          call 0x4004222	       271	nodemask.h	FUNCTION_82	CALL_2
0x4004222	          0x83f840	                           cmp eax, 0x40	       271	nodemask.h	FUNCTION_82	CALL_2
0x4004225	            0x89c3	                            mov ebx, eax	       271	nodemask.h	FUNCTION_82	CALL_2
0x4004227	           0xf4fdd	                          cmovg ebx, ebp	       271	nodemask.h	FUNCTION_82	CALL_2
0x400422a	          0x83fb40	                           cmp ebx, 0x40	      1858	compaction.c	FUNCTION_46	CALL_2
0x400422d	            0x75d5	                           jne 0x4004204	      1858	compaction.c	FUNCTION_46	CALL_2
0x400422f	            0x31c0	                            xor eax, eax	      1876	compaction.c	FUNCTION_47
0x4004231	              0x5b	                                 pop rbx	      1876	compaction.c	FUNCTION_47
0x4004232	              0x5d	                                 pop rbp	      1876	compaction.c	FUNCTION_47
0x4004233	              0xc3	                                     ret	      1876	compaction.c	FUNCTION_47
isolate_migratepages_range	SWITCH,0:DO,0:IF,4:CALL,5:FOR,1:functions,0:WHILE,0:ELSE,0	54
0x4002c70	            0x4155	                                push r13	       974	compaction.c	FUNCTION_28
0x4002c72	            0x4154	                                push r12	       974	compaction.c	FUNCTION_28
0x4002c74	          0x4989d4	                            mov r12, rdx	       974	compaction.c	FUNCTION_28
0x4002c77	              0x55	                                push rbp	       974	compaction.c	FUNCTION_28
0x4002c78	              0x53	                                push rbx	       974	compaction.c	FUNCTION_28
0x4002c79	          0x4989fd	                            mov r13, rdi	       974	compaction.c	FUNCTION_28
0x4002c7c	        0x488b5720	            mov rdx, qword [rdi + 0x20] 	       980	compaction.c	FUNCTION_28	IF_1
0x4002c80	          0x4889f0	                            mov rax, rsi	       979	compaction.c	FUNCTION_28	CALL_1
0x4002c83	          0x4889f5	                            mov rbp, rsi	       974	compaction.c	FUNCTION_28
0x4002c86	    0x482500feffff	             and rax, 0xfffffffffffffe00	       979	compaction.c	FUNCTION_28	CALL_1
0x4002c8c	        0x488b7a58	            mov rdi, qword [rdx + 0x58] 	       980	compaction.c	FUNCTION_28	IF_1
0x4002c90	          0x4839f8	                            cmp rax, rdi	       980	compaction.c	FUNCTION_28	IF_1
0x4002c93	        0x480f43f8	                         cmovae rdi, rax	       980	compaction.c	FUNCTION_28	IF_1
0x4002c97	    0x488d86000200	                  lea rax, [rsi + 0x200]	       982	compaction.c	FUNCTION_28	CALL_2
0x4002c9e	    0x482500feffff	             and rax, 0xfffffffffffffe00	       982	compaction.c	FUNCTION_28	CALL_2
0x4002ca4	          0x4c39e6	                            cmp rsi, r12	       984	compaction.c	FUNCTION_28	FOR_1
0x4002ca7	            0x724d	                            jb 0x4002cf6	       984	compaction.c	FUNCTION_28	FOR_1
0x4002ca9	            0xeb6b	                           jmp 0x4002d16	       984	compaction.c	FUNCTION_28	FOR_1
0x4002cab	        0x48c1e706	                              shl rdi, 6	       158	internal.h	FUNCTION_108	CALL_1
0x4002caf	          0x4889f8	                            mov rax, rdi	       158	internal.h	FUNCTION_108	CALL_1
0x4002cb2	    0x480305000000	             add rax, qword [0x04002cb9]	       158	internal.h	FUNCTION_108	CALL_1
0x4002cb9	          0x4885c0	                           test rax, rax	       990	compaction.c	FUNCTION_28	FOR_1	IF_2	CALL_4
0x4002cbc	            0x7422	                            je 0x4002ce0	       990	compaction.c	FUNCTION_28	FOR_1	IF_2	CALL_4
0x4002cbe	          0x4889ee	                            mov rsi, rbp	       994	compaction.c	FUNCTION_28	FOR_1	CALL_5
0x4002cc1	      0xb908000000	                              mov ecx, 8	       994	compaction.c	FUNCTION_28	FOR_1	CALL_5
0x4002cc6	          0x4889da	                            mov rdx, rbx	       994	compaction.c	FUNCTION_28	FOR_1	CALL_5
0x4002cc9	          0x4c89ef	                            mov rdi, r13	       994	compaction.c	FUNCTION_28	FOR_1	CALL_5
0x4002ccc	      0xe85fedffff	     call sym.isolate_migratepages_block	       994	compaction.c	FUNCTION_28	FOR_1	CALL_5
0x4002cd1	          0x4885c0	                           test rax, rax	       997	compaction.c	FUNCTION_28	FOR_1	IF_3
0x4002cd4	          0x4889c5	                            mov rbp, rax	       994	compaction.c	FUNCTION_28	FOR_1	CALL_5
0x4002cd7	            0x743d	                            je 0x4002d16	       997	compaction.c	FUNCTION_28	FOR_1	IF_3
0x4002cd9	      0x49837d3020	           cmp qword [r13 + 0x30], 0x20 	      1000	compaction.c	FUNCTION_28	FOR_1	IF_4
0x4002cde	            0x7436	                            je 0x4002d16	      1000	compaction.c	FUNCTION_28	FOR_1	IF_4
0x4002ce0	          0x4939dc	                            cmp r12, rbx	       984	compaction.c	FUNCTION_28	FOR_1
0x4002ce3	    0x488d83000200	                  lea rax, [rbx + 0x200]	       986	compaction.c	FUNCTION_28	FOR_1
0x4002cea	            0x7627	                           jbe 0x4002d13	       984	compaction.c	FUNCTION_28	FOR_1
0x4002cec	        0x498b5520	            mov rdx, qword [r13 + 0x20] 	       984	compaction.c	FUNCTION_28	FOR_1
0x4002cf0	          0x4889df	                            mov rdi, rbx	       984	compaction.c	FUNCTION_28	FOR_1
0x4002cf3	          0x4889dd	                            mov rbp, rbx	       984	compaction.c	FUNCTION_28	FOR_1
0x4002cf6	          0x4939c4	                            cmp r12, rax	       988	compaction.c	FUNCTION_28	FOR_1	CALL_3
0x4002cf9	        0x490f46c4	                         cmovbe rax, r12	       988	compaction.c	FUNCTION_28	FOR_1	CALL_3
0x4002cfd	    0x80ba2d040000	               cmp byte [rdx + 0x42d], 0	       157	internal.h	FUNCTION_108	IF_1
0x4002d04	          0x4889c3	                            mov rbx, rax	       988	compaction.c	FUNCTION_28	FOR_1	CALL_3
0x4002d07	            0x75a2	                           jne 0x4002cab	       157	internal.h	FUNCTION_108	IF_1
0x4002d09	          0x4889c6	                            mov rsi, rax	       160	internal.h	FUNCTION_108	CALL_2
0x4002d0c	      0xe800000000	                          call 0x4002d11	       160	internal.h	FUNCTION_108	CALL_2
0x4002d11	            0xeba6	                           jmp 0x4002cb9	       160	internal.h	FUNCTION_108	CALL_2
0x4002d13	          0x4889dd	                            mov rbp, rbx	       988	compaction.c	FUNCTION_28	FOR_1	CALL_3
0x4002d16	              0x5b	                                 pop rbx	      1005	compaction.c	FUNCTION_28
0x4002d17	          0x4889e8	                            mov rax, rbp	      1005	compaction.c	FUNCTION_28
0x4002d1a	              0x5d	                                 pop rbp	      1005	compaction.c	FUNCTION_28
0x4002d1b	            0x415c	                                 pop r12	      1005	compaction.c	FUNCTION_28
0x4002d1d	            0x415d	                                 pop r13	      1005	compaction.c	FUNCTION_28
0x4002d1f	              0xc3	                                     ret	      1005	compaction.c	FUNCTION_28
kcompactd_run	SWITCH,0:DO,0:IF,2:CALL,5:FOR,0:functions,0:WHILE,0:ELSE,0	36
0x4004380	          0x4863c7	                         movsxd rax, edi	      2087	compaction.c	FUNCTION_57	CALL_1
0x4004383	            0x4155	                                push r13	      2086	compaction.c	FUNCTION_57
0x4004385	            0x4154	                                push r12	      2086	compaction.c	FUNCTION_57
0x4004387	              0x55	                                push rbp	      2086	compaction.c	FUNCTION_57
0x4004388	    0x488b2cc50000	                  mov rbp, qword [rax*8]	      2087	compaction.c	FUNCTION_57	CALL_1
0x4004390	          0x4531e4	                          xor r12d, r12d	      2091	compaction.c	FUNCTION_57	IF_1
0x4004393	              0x53	                                push rbx	      2086	compaction.c	FUNCTION_57
0x4004394	    0x4883bdb03400	             cmp qword [rbp + 0x34b0], 0	      2090	compaction.c	FUNCTION_57	IF_1
0x400439c	            0x740a	                            je 0x40043a8	      2090	compaction.c	FUNCTION_57	IF_1
0x400439e	              0x5b	                                 pop rbx	      2100	compaction.c	FUNCTION_57
0x400439f	          0x4489e0	                           mov eax, r12d	      2100	compaction.c	FUNCTION_57
0x40043a2	              0x5d	                                 pop rbp	      2100	compaction.c	FUNCTION_57
0x40043a3	            0x415c	                                 pop r12	      2100	compaction.c	FUNCTION_57
0x40043a5	            0x415d	                                 pop r13	      2100	compaction.c	FUNCTION_57
0x40043a7	              0xc3	                                     ret	      2100	compaction.c	FUNCTION_57
0x40043a8	          0x4189f8	                            mov r8d, edi	      2093	compaction.c	FUNCTION_57	CALL_2
0x40043ab	            0x89fb	                            mov ebx, edi	      2093	compaction.c	FUNCTION_57	CALL_2
0x40043ad	    0x48c7c1000000	                              mov rcx, 0	      2093	compaction.c	FUNCTION_57	CALL_2
0x40043b4	      0xbaffffffff	                     mov edx, 0xffffffff	      2093	compaction.c	FUNCTION_57	CALL_2
0x40043b9	          0x4889ee	                            mov rsi, rbp	      2093	compaction.c	FUNCTION_57	CALL_2
0x40043bc	    0x48c7c7000000	                              mov rdi, 0	      2093	compaction.c	FUNCTION_57	CALL_2
0x40043c3	      0xe800000000	                          call 0x40043c8	      2093	compaction.c	FUNCTION_57	CALL_2
0x40043c8	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	      2093	compaction.c	FUNCTION_57	CALL_2
0x40043ce	          0x4989c5	                            mov r13, rax	      2093	compaction.c	FUNCTION_57	CALL_2
0x40043d1	            0x7711	                            ja 0x40043e4	      2093	compaction.c	FUNCTION_57	CALL_2
0x40043d3	          0x4889c7	                            mov rdi, rax	      2093	compaction.c	FUNCTION_57	CALL_2
0x40043d6	      0xe800000000	                          call 0x40043db	      2093	compaction.c	FUNCTION_57	CALL_2
0x40043db	    0x4c89adb03400	          mov qword [rbp + 0x34b0], r13 	      2093	compaction.c	FUNCTION_57	CALL_2
0x40043e2	            0xebba	                           jmp 0x400439e	      2093	compaction.c	FUNCTION_57	CALL_2
0x40043e4	    0x488985b03400	          mov qword [rbp + 0x34b0], rax 	      2093	compaction.c	FUNCTION_57	CALL_2
0x40043eb	            0x89de	                            mov esi, ebx	      2095	compaction.c	FUNCTION_57	IF_2	CALL_4
0x40043ed	    0x48c7c7000000	                              mov rdi, 0	      2095	compaction.c	FUNCTION_57	IF_2	CALL_4
0x40043f4	      0xe800000000	                          call 0x40043f9	      2095	compaction.c	FUNCTION_57	IF_2	CALL_4
0x40043f9	    0x4c8ba5b03400	          mov r12, qword [rbp + 0x34b0] 	      2096	compaction.c	FUNCTION_57	IF_2	CALL_5
0x4004400	    0x48c785b03400	            mov qword [rbp + 0x34b0], 0 	      2097	compaction.c	FUNCTION_57	IF_2
0x400440b	            0xeb91	                           jmp 0x400439e	      2097	compaction.c	FUNCTION_57	IF_2
compaction_register_node	SWITCH,0:DO,0:IF,0:CALL,1:FOR,0:functions,0:WHILE,0:ELSE,0	2
0x4004250	    0x48c7c6000000	                              mov rsi, 0	      1906	compaction.c	FUNCTION_50	CALL_1
0x4004257	      0xe900000000	                           jmp 0x400425c	      1906	compaction.c	FUNCTION_50	CALL_1
