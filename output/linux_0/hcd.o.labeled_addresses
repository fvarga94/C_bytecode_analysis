hcd_resume_work	WHILE,0:SWITCH,0:CALL,2:IF,0:ELSE,0:functions,0:FOR,0:DO,0	2
0x4000720	    0x488bbf70ffff	             mov rdi, qword [rdi - 0x90]	      2364	hcd.c	FUNCTION_47	CALL_2
0x4000727	      0xe900000000	                           jmp 0x400072c	      2364	hcd.c	FUNCTION_47	CALL_2
usb_deregister_bus	WHILE,0:SWITCH,0:CALL,5:IF,0:ELSE,0:functions,0:FOR,0:DO,0	16
0x4000880	              0x53	                                push rbx	      1041	hcd.c	FUNCTION_16
0x4000881	          0x4889fb	                            mov rbx, rdi	      1041	hcd.c	FUNCTION_16
0x4000884	          0x8b5710	            mov edx, dword [rdi + 0x10] 	      1042	hcd.c	FUNCTION_16	CALL_1
0x4000887	          0x488b3f	                    mov rdi, qword [rdi]	      1042	hcd.c	FUNCTION_16	CALL_1
0x400088a	    0x48c7c6000000	                              mov rsi, 0	      1042	hcd.c	FUNCTION_16	CALL_1
0x4000891	      0xe800000000	                          call 0x4000896	      1042	hcd.c	FUNCTION_16	CALL_1
0x4000896	    0x48c7c7000000	                              mov rdi, 0	      1049	hcd.c	FUNCTION_16	CALL_2
0x400089d	      0xe800000000	                          call 0x40008a2	      1049	hcd.c	FUNCTION_16	CALL_2
0x40008a2	        0x48637310	         movsxd rsi, dword [rbx + 0x10] 	      1050	hcd.c	FUNCTION_16	CALL_3
0x40008a6	    0x48c7c7000000	                              mov rdi, 0	      1050	hcd.c	FUNCTION_16	CALL_3
0x40008ad	      0xe800000000	                          call 0x40008b2	      1050	hcd.c	FUNCTION_16	CALL_3
0x40008b2	    0x48c7c7000000	                              mov rdi, 0	      1051	hcd.c	FUNCTION_16	CALL_4
0x40008b9	      0xe800000000	                          call 0x40008be	      1051	hcd.c	FUNCTION_16	CALL_4
0x40008be	          0x4889df	                            mov rdi, rbx	      1053	hcd.c	FUNCTION_16	CALL_5
0x40008c1	              0x5b	                                 pop rbx	      1054	hcd.c	FUNCTION_16
0x40008c2	      0xe900000000	                           jmp 0x40008c7	      1053	hcd.c	FUNCTION_16	CALL_5
usb_free_streams	WHILE,0:SWITCH,0:CALL,3:IF,3:ELSE,0:functions,0:FOR,2:DO,0	58
0x40003b0	        0x4c8b4f30	              mov r9, qword [rdi + 0x30]	      2186	hcd.c	FUNCTION_42
0x40003b4	      0x4183798404	                cmp dword [r9 - 0x7c], 4	      2193	hcd.c	FUNCTION_42	IF_1
0x40003b9	     0xf8683000000	                           jbe 0x4000442	      2193	hcd.c	FUNCTION_42	IF_1
0x40003bf	            0x85d2	                           test edx, edx	      2197	hcd.c	FUNCTION_42	FOR_1
0x40003c1	     0xf8481000000	                            je 0x4000448	      2197	hcd.c	FUNCTION_42	FOR_1
0x40003c7	          0x488b06	                    mov rax, qword [rsi]	      2198	hcd.c	FUNCTION_42	FOR_1	IF_2
0x40003ca	          0x4885c0	                           test rax, rax	      2198	hcd.c	FUNCTION_42	FOR_1	IF_2
0x40003cd	            0x7473	                            je 0x4000442	      2198	hcd.c	FUNCTION_42	FOR_1	IF_2
0x40003cf	        0x448b4048	            mov r8d, dword [rax + 0x48] 	      2198	hcd.c	FUNCTION_42	FOR_1	IF_2
0x40003d3	          0x4585c0	                           test r8d, r8d	      2198	hcd.c	FUNCTION_42	FOR_1	IF_2
0x40003d6	            0x746a	                            je 0x4000442	      2198	hcd.c	FUNCTION_42	FOR_1	IF_2
0x40003d8	            0x31c0	                            xor eax, eax	      2198	hcd.c	FUNCTION_42	FOR_1	IF_2
0x40003da	            0xeb13	                           jmp 0x40003ef	      2198	hcd.c	FUNCTION_42	FOR_1	IF_2
0x40003dc	          0x4863f8	                         movsxd rdi, eax	      2198	hcd.c	FUNCTION_42	FOR_1	IF_2
0x40003df	        0x488b3cfe	            mov rdi, qword [rsi + rdi*8]	      2198	hcd.c	FUNCTION_42	FOR_1	IF_2
0x40003e3	          0x4885ff	                           test rdi, rdi	      2198	hcd.c	FUNCTION_42	FOR_1	IF_2
0x40003e6	            0x745a	                            je 0x4000442	      2198	hcd.c	FUNCTION_42	FOR_1	IF_2
0x40003e8	          0x8b7f48	            mov edi, dword [rdi + 0x48] 	      2198	hcd.c	FUNCTION_42	FOR_1	IF_2
0x40003eb	            0x85ff	                           test edi, edi	      2198	hcd.c	FUNCTION_42	FOR_1	IF_2
0x40003ed	            0x7453	                            je 0x4000442	      2198	hcd.c	FUNCTION_42	FOR_1	IF_2
0x40003ef	          0x83c001	                              add eax, 1	      2197	hcd.c	FUNCTION_42	FOR_1
0x40003f2	            0x39d0	                            cmp eax, edx	      2197	hcd.c	FUNCTION_42	FOR_1
0x40003f4	            0x75e6	                           jne 0x40003dc	      2197	hcd.c	FUNCTION_42	FOR_1
0x40003f6	              0x55	                                push rbp	      2186	hcd.c	FUNCTION_42
0x40003f7	              0x53	                                push rbx	      2186	hcd.c	FUNCTION_42
0x40003f8	          0x4889f5	                            mov rbp, rsi	      2186	hcd.c	FUNCTION_42
0x40003fb	        0x498b79a8	              mov rdi, qword [r9 - 0x58]	      2192	hcd.c	FUNCTION_42	CALL_2
0x40003ff	          0x4189c8	                            mov r8d, ecx	      2192	hcd.c	FUNCTION_42	CALL_2
0x4000402	            0x89d3	                            mov ebx, edx	      2192	hcd.c	FUNCTION_42	CALL_2
0x4000404	            0x89d1	                            mov ecx, edx	      2201	hcd.c	FUNCTION_42	CALL_3
0x4000406	    0x498db168ffff	                    lea rsi, [r9 - 0x98]	      2201	hcd.c	FUNCTION_42	CALL_3
0x400040d	          0x4889ea	                            mov rdx, rbp	      2201	hcd.c	FUNCTION_42	CALL_3
0x4000410	    0x488b87100100	           mov rax, qword [rdi + 0x110] 	      2201	hcd.c	FUNCTION_42	CALL_3
0x4000417	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      2201	hcd.c	FUNCTION_42	CALL_3
0x400041e	      0xe800000000	                          call 0x4000423	      2201	hcd.c	FUNCTION_42	CALL_3
0x4000423	            0x85c0	                           test eax, eax	      2202	hcd.c	FUNCTION_42	IF_3
0x4000425	            0x7818	                            js 0x400043f	      2202	hcd.c	FUNCTION_42	IF_3
0x4000427	            0x31d2	                            xor edx, edx	      2202	hcd.c	FUNCTION_42	IF_3
0x4000429	          0x4863ca	                         movsxd rcx, edx	      2206	hcd.c	FUNCTION_42	FOR_2
0x400042c	          0x83c201	                              add edx, 1	      2205	hcd.c	FUNCTION_42	FOR_2
0x400042f	      0x488b4ccd00	            mov rcx, qword [rbp + rcx*8]	      2206	hcd.c	FUNCTION_42	FOR_2
0x4000434	            0x39da	                            cmp edx, ebx	      2205	hcd.c	FUNCTION_42	FOR_2
0x4000436	    0xc74148000000	               mov dword [rcx + 0x48], 0	      2206	hcd.c	FUNCTION_42	FOR_2
0x400043d	            0x75ea	                           jne 0x4000429	      2205	hcd.c	FUNCTION_42	FOR_2
0x400043f	              0x5b	                                 pop rbx	      2209	hcd.c	FUNCTION_42
0x4000440	              0x5d	                                 pop rbp	      2209	hcd.c	FUNCTION_42
0x4000441	              0xc3	                                     ret	      2209	hcd.c	FUNCTION_42
0x4000442	      0xb8eaffffff	                     mov eax, 0xffffffea	      2194	hcd.c	FUNCTION_42	IF_1
0x4000447	              0xc3	                                     ret	      2209	hcd.c	FUNCTION_42
0x4000448	        0x498b79a8	              mov rdi, qword [r9 - 0x58]	      2192	hcd.c	FUNCTION_42	CALL_2
0x400044c	    0x4981e9980000	                            sub r9, 0x98	      2201	hcd.c	FUNCTION_42	CALL_3
0x4000453	          0x4189c8	                            mov r8d, ecx	      2201	hcd.c	FUNCTION_42	CALL_3
0x4000456	          0x4889f2	                            mov rdx, rsi	      2201	hcd.c	FUNCTION_42	CALL_3
0x4000459	            0x31c9	                            xor ecx, ecx	      2201	hcd.c	FUNCTION_42	CALL_3
0x400045b	          0x4c89ce	                             mov rsi, r9	      2201	hcd.c	FUNCTION_42	CALL_3
0x400045e	    0x488b87100100	           mov rax, qword [rdi + 0x110] 	      2201	hcd.c	FUNCTION_42	CALL_3
0x4000465	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      2201	hcd.c	FUNCTION_42	CALL_3
0x400046c	      0xe900000000	                           jmp 0x4000471	      2201	hcd.c	FUNCTION_42	CALL_3
usb_alloc_streams	WHILE,0:SWITCH,0:CALL,4:IF,6:ELSE,0:functions,0:FOR,2:DO,0	82
0x40002a0	            0x4155	                                push r13	      2136	hcd.c	FUNCTION_41
0x40002a2	            0x4154	                                push r12	      2136	hcd.c	FUNCTION_41
0x40002a4	              0x55	                                push rbp	      2136	hcd.c	FUNCTION_41
0x40002a5	              0x53	                                push rbx	      2136	hcd.c	FUNCTION_41
0x40002a6	        0x4c8b6f30	            mov r13, qword [rdi + 0x30] 	      2136	hcd.c	FUNCTION_41
0x40002aa	        0x498b7da8	             mov rdi, qword [r13 - 0x58]	      2142	hcd.c	FUNCTION_41	CALL_2
0x40002ae	    0x488b87100100	           mov rax, qword [rdi + 0x110] 	      2143	hcd.c	FUNCTION_41	IF_1
0x40002b5	    0x4c8ba0e00000	            mov r12, qword [rax + 0xe0] 	      2143	hcd.c	FUNCTION_41	IF_1
0x40002bc	          0x4d85e4	                           test r12, r12	      2143	hcd.c	FUNCTION_41	IF_1
0x40002bf	     0xf84a9000000	                            je 0x400036e	      2143	hcd.c	FUNCTION_41	IF_1
0x40002c5	    0x4883b8e80000	               cmp qword [rax + 0xe8], 0	      2143	hcd.c	FUNCTION_41	IF_1
0x40002cd	     0xf849b000000	                            je 0x400036e	      2143	hcd.c	FUNCTION_41	IF_1
0x40002d3	      0x41837d8404	               cmp dword [r13 - 0x7c], 4	      2145	hcd.c	FUNCTION_41	IF_2
0x40002d8	     0xf8690000000	                           jbe 0x400036e	      2145	hcd.c	FUNCTION_41	IF_2
0x40002de	      0x41837d8006	               cmp dword [r13 - 0x80], 6	      2147	hcd.c	FUNCTION_41	IF_3
0x40002e3	     0xf8691000000	                           jbe 0x400037a	      2147	hcd.c	FUNCTION_41	IF_3
0x40002e9	            0x85d2	                           test edx, edx	      2150	hcd.c	FUNCTION_41	FOR_1
0x40002eb	     0xf8490000000	                            je 0x4000381	      2150	hcd.c	FUNCTION_41	FOR_1
0x40002f1	          0x4c8b16	                    mov r10, qword [rsi]	      2152	hcd.c	FUNCTION_41	FOR_1	IF_4	CALL_3
0x40002f4	      0x410fb64203	               movzx eax, byte [r10 + 3]	      2152	hcd.c	FUNCTION_41	FOR_1	IF_4	CALL_3
0x40002f9	          0x83e003	                              and eax, 3	      2152	hcd.c	FUNCTION_41	FOR_1	IF_4	CALL_3
0x40002fc	            0x3c02	                               cmp al, 2	      2152	hcd.c	FUNCTION_41	FOR_1	IF_4	CALL_3
0x40002fe	            0x756e	                           jne 0x400036e	      2152	hcd.c	FUNCTION_41	FOR_1	IF_4	CALL_3
0x4000300	        0x458b5248	           mov r10d, dword [r10 + 0x48] 	      2155	hcd.c	FUNCTION_41	FOR_1	IF_5
0x4000304	          0x4585d2	                         test r10d, r10d	      2155	hcd.c	FUNCTION_41	FOR_1	IF_5
0x4000307	            0x7565	                           jne 0x400036e	      2155	hcd.c	FUNCTION_41	FOR_1	IF_5
0x4000309	            0x31c0	                            xor eax, eax	      2155	hcd.c	FUNCTION_41	FOR_1	IF_5
0x400030b	            0xeb1f	                           jmp 0x400032c	      2155	hcd.c	FUNCTION_41	FOR_1	IF_5
0x400030d	          0x4c63d0	                         movsxd r10, eax	      2152	hcd.c	FUNCTION_41	FOR_1	IF_4	CALL_3
0x4000310	        0x4e8b1cd6	            mov r11, qword [rsi + r10*8]	      2152	hcd.c	FUNCTION_41	FOR_1	IF_4	CALL_3
0x4000314	      0x450fb65303	              movzx r10d, byte [r11 + 3]	      2152	hcd.c	FUNCTION_41	FOR_1	IF_4	CALL_3
0x4000319	        0x4183e203	                             and r10d, 3	      2152	hcd.c	FUNCTION_41	FOR_1	IF_4	CALL_3
0x400031d	        0x4180fa02	                             cmp r10b, 2	      2152	hcd.c	FUNCTION_41	FOR_1	IF_4	CALL_3
0x4000321	            0x754b	                           jne 0x400036e	      2152	hcd.c	FUNCTION_41	FOR_1	IF_4	CALL_3
0x4000323	        0x458b4b48	            mov r9d, dword [r11 + 0x48] 	      2155	hcd.c	FUNCTION_41	FOR_1	IF_5
0x4000327	          0x4585c9	                           test r9d, r9d	      2155	hcd.c	FUNCTION_41	FOR_1	IF_5
0x400032a	            0x7542	                           jne 0x400036e	      2155	hcd.c	FUNCTION_41	FOR_1	IF_5
0x400032c	          0x83c001	                              add eax, 1	      2150	hcd.c	FUNCTION_41	FOR_1
0x400032f	            0x39d0	                            cmp eax, edx	      2150	hcd.c	FUNCTION_41	FOR_1
0x4000331	            0x75da	                           jne 0x400030d	      2150	hcd.c	FUNCTION_41	FOR_1
0x4000333	          0x4889f5	                            mov rbp, rsi	      2150	hcd.c	FUNCTION_41	FOR_1
0x4000336	          0x4589c1	                            mov r9d, r8d	      2150	hcd.c	FUNCTION_41	FOR_1
0x4000339	            0x89d3	                            mov ebx, edx	      2150	hcd.c	FUNCTION_41	FOR_1
0x400033b	          0x4189c8	                            mov r8d, ecx	      2150	hcd.c	FUNCTION_41	FOR_1
0x400033e	    0x498db568ffff	                   lea rsi, [r13 - 0x98]	      2159	hcd.c	FUNCTION_41	CALL_4
0x4000345	            0x89d1	                            mov ecx, edx	      2159	hcd.c	FUNCTION_41	CALL_4
0x4000347	          0x4889ea	                            mov rdx, rbp	      2159	hcd.c	FUNCTION_41	CALL_4
0x400034a	      0xe800000000	                          call 0x400034f	      2159	hcd.c	FUNCTION_41	CALL_4
0x400034f	            0x31d2	                            xor edx, edx	      2161	hcd.c	FUNCTION_41	IF_6
0x4000351	            0x85c0	                           test eax, eax	      2161	hcd.c	FUNCTION_41	IF_6
0x4000353	            0x781e	                            js 0x4000373	      2161	hcd.c	FUNCTION_41	IF_6
0x4000355	          0x4863ca	                         movsxd rcx, edx	      2165	hcd.c	FUNCTION_41	FOR_2
0x4000358	          0x83c201	                              add edx, 1	      2164	hcd.c	FUNCTION_41	FOR_2
0x400035b	      0x488b4ccd00	            mov rcx, qword [rbp + rcx*8]	      2165	hcd.c	FUNCTION_41	FOR_2
0x4000360	            0x39da	                            cmp edx, ebx	      2164	hcd.c	FUNCTION_41	FOR_2
0x4000362	          0x894148	             mov dword [rcx + 0x48], eax	      2165	hcd.c	FUNCTION_41	FOR_2
0x4000365	            0x75ee	                           jne 0x4000355	      2164	hcd.c	FUNCTION_41	FOR_2
0x4000367	              0x5b	                                 pop rbx	      2168	hcd.c	FUNCTION_41
0x4000368	              0x5d	                                 pop rbp	      2168	hcd.c	FUNCTION_41
0x4000369	            0x415c	                                 pop r12	      2168	hcd.c	FUNCTION_41
0x400036b	            0x415d	                                 pop r13	      2168	hcd.c	FUNCTION_41
0x400036d	              0xc3	                                     ret	      2168	hcd.c	FUNCTION_41
0x400036e	      0xb8eaffffff	                     mov eax, 0xffffffea	      2144	hcd.c	FUNCTION_41	IF_1
0x4000373	              0x5b	                                 pop rbx	      2168	hcd.c	FUNCTION_41
0x4000374	              0x5d	                                 pop rbp	      2168	hcd.c	FUNCTION_41
0x4000375	            0x415c	                                 pop r12	      2168	hcd.c	FUNCTION_41
0x4000377	            0x415d	                                 pop r13	      2168	hcd.c	FUNCTION_41
0x4000379	              0xc3	                                     ret	      2168	hcd.c	FUNCTION_41
0x400037a	      0xb8edffffff	                     mov eax, 0xffffffed	      2148	hcd.c	FUNCTION_41	IF_3
0x400037f	            0xebf2	                           jmp 0x4000373	      2148	hcd.c	FUNCTION_41	IF_3
0x4000381	    0x4981ed980000	                           sub r13, 0x98	      2159	hcd.c	FUNCTION_41	CALL_4
0x4000388	          0x4889f2	                            mov rdx, rsi	      2159	hcd.c	FUNCTION_41	CALL_4
0x400038b	          0x4c89e0	                            mov rax, r12	      2159	hcd.c	FUNCTION_41	CALL_4
0x400038e	              0x5b	                                 pop rbx	      2168	hcd.c	FUNCTION_41
0x400038f	          0x4c89ee	                            mov rsi, r13	      2159	hcd.c	FUNCTION_41	CALL_4
0x4000392	          0x4589c1	                            mov r9d, r8d	      2159	hcd.c	FUNCTION_41	CALL_4
0x4000395	          0x4189c8	                            mov r8d, ecx	      2159	hcd.c	FUNCTION_41	CALL_4
0x4000398	              0x5d	                                 pop rbp	      2168	hcd.c	FUNCTION_41
0x4000399	            0x415c	                                 pop r12	      2168	hcd.c	FUNCTION_41
0x400039b	            0x415d	                                 pop r13	      2168	hcd.c	FUNCTION_41
0x400039d	            0x31c9	                            xor ecx, ecx	      2159	hcd.c	FUNCTION_41	CALL_4
0x400039f	      0xe900000000	                           jmp 0x40003a4	      2159	hcd.c	FUNCTION_41	CALL_4
usb_hcd_get_frame_number	WHILE,0:SWITCH,0:CALL,3:IF,1:ELSE,0:functions,0:FOR,0:DO,0	8
0x4003270	        0x488b7f40	            mov rdi, qword [rdi + 0x40] 	      2228	hcd.c	FUNCTION_44	CALL_1
0x4003274	    0xf68728010000	          test byte [rdi + 0x128], 0x20 	      2230	hcd.c	FUNCTION_44	IF_1	CALL_2
0x400327b	            0x7410	                            je 0x400328d	      2230	hcd.c	FUNCTION_44	IF_1	CALL_2
0x400327d	    0x488b87100100	           mov rax, qword [rdi + 0x110] 	      2232	hcd.c	FUNCTION_44	CALL_3
0x4003284	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2232	hcd.c	FUNCTION_44	CALL_3
0x4003288	      0xe900000000	                           jmp 0x400328d	      2232	hcd.c	FUNCTION_44	CALL_3
0x400328d	      0xb894ffffff	                     mov eax, 0xffffff94	      2233	hcd.c	FUNCTION_44
0x4003292	              0xc3	                                     ret	      2233	hcd.c	FUNCTION_44
usb_create_hcd	WHILE,0:SWITCH,0:CALL,1:IF,0:ELSE,0:functions,0:FOR,0:DO,0	4
0x4002370	          0x4889d1	                            mov rcx, rdx	      2619	hcd.c	FUNCTION_55	CALL_1
0x4002373	          0x4531c0	                            xor r8d, r8d	      2619	hcd.c	FUNCTION_55	CALL_1
0x4002376	          0x4889f2	                            mov rdx, rsi	      2619	hcd.c	FUNCTION_55	CALL_1
0x4002379	      0xe9b2fdffff	                jmp sym.__usb_create_hcd	      2619	hcd.c	FUNCTION_55	CALL_1
usb_hcd_platform_shutdown	WHILE,0:SWITCH,0:CALL,2:IF,1:ELSE,0:functions,0:FOR,0:DO,0	7
0x40004c0	    0x488bbfa80000	            mov rdi, qword [rdi + 0xa8] 	      3040	hcd.c	FUNCTION_65
0x40004c7	    0x488b87100100	           mov rax, qword [rdi + 0x110] 	      3043	hcd.c	FUNCTION_65	IF_1
0x40004ce	        0x488b4050	            mov rax, qword [rax + 0x50] 	      3043	hcd.c	FUNCTION_65	IF_1
0x40004d2	          0x4885c0	                           test rax, rax	      3043	hcd.c	FUNCTION_65	IF_1
0x40004d5	            0x7405	                            je 0x40004dc	      3043	hcd.c	FUNCTION_65	IF_1
0x40004d7	      0xe900000000	                           jmp 0x40004dc	      3044	hcd.c	FUNCTION_65	CALL_2
0x40004dc	            0xf3c3	                                     ret	      3044	hcd.c	FUNCTION_65	CALL_2
authorized_default_show	WHILE,0:SWITCH,0:CALL,4:IF,0:ELSE,0:functions,0:FOR,0:DO,0	11
0x40005b0	          0x4889d0	                            mov rax, rdx	       880	hcd.c	FUNCTION_10
0x40005b3	        0x488b57a8	             mov rdx, qword [rdi - 0x58]	       886	hcd.c	FUNCTION_10	CALL_4
0x40005b7	      0xbe00100000	                         mov esi, 0x1000	       886	hcd.c	FUNCTION_10	CALL_4
0x40005bc	          0x4889c7	                            mov rdi, rax	       886	hcd.c	FUNCTION_10	CALL_4
0x40005bf	    0x488b8a280100	           mov rcx, qword [rdx + 0x128] 	       886	hcd.c	FUNCTION_10	CALL_4
0x40005c6	    0x48c7c2000000	                              mov rdx, 0	       886	hcd.c	FUNCTION_10	CALL_4
0x40005cd	        0x48c1e908	                              shr rcx, 8	       886	hcd.c	FUNCTION_10	CALL_4
0x40005d1	          0x83e101	                              and ecx, 1	       886	hcd.c	FUNCTION_10	CALL_4
0x40005d4	      0xe800000000	                          call 0x40005d9	       886	hcd.c	FUNCTION_10	CALL_4
0x40005d9	            0x4898	                                    cdqe	       886	hcd.c	FUNCTION_10	CALL_4
0x40005db	              0xc3	                                     ret	       887	hcd.c	FUNCTION_10
usb_hcd_disable_endpoint	WHILE,0:SWITCH,0:CALL,3:IF,1:ELSE,0:functions,0:FOR,0:DO,0	17
0x40031b0	              0x55	                                push rbp	      2083	hcd.c	FUNCTION_39
0x40031b1	              0x53	                                push rbx	      2083	hcd.c	FUNCTION_39
0x40031b2	          0x4889fb	                            mov rbx, rdi	      2083	hcd.c	FUNCTION_39
0x40031b5	          0x4889f5	                            mov rbp, rsi	      2083	hcd.c	FUNCTION_39
0x40031b8	      0xe800000000	                          call 0x40031bd	      2086	hcd.c	FUNCTION_39	CALL_1
0x40031bd	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	      2087	hcd.c	FUNCTION_39	CALL_2
0x40031c1	    0x488b87100100	           mov rax, qword [rdi + 0x110] 	      2088	hcd.c	FUNCTION_39	IF_1
0x40031c8	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      2088	hcd.c	FUNCTION_39	IF_1
0x40031cf	          0x4885c0	                           test rax, rax	      2088	hcd.c	FUNCTION_39	IF_1
0x40031d2	            0x740a	                            je 0x40031de	      2088	hcd.c	FUNCTION_39	IF_1
0x40031d4	          0x4889ee	                            mov rsi, rbp	      2089	hcd.c	FUNCTION_39	CALL_3
0x40031d7	              0x5b	                                 pop rbx	      2090	hcd.c	FUNCTION_39
0x40031d8	              0x5d	                                 pop rbp	      2090	hcd.c	FUNCTION_39
0x40031d9	      0xe900000000	                           jmp 0x40031de	      2089	hcd.c	FUNCTION_39	CALL_3
0x40031de	              0x5b	                                 pop rbx	      2090	hcd.c	FUNCTION_39
0x40031df	              0x5d	                                 pop rbp	      2090	hcd.c	FUNCTION_39
0x40031e0	              0xc3	                                     ret	      2090	hcd.c	FUNCTION_39
usb_calc_bus_time	WHILE,0:SWITCH,1:CALL,7:IF,3:ELSE,3:functions,0:FOR,0:DO,0	100
0x4000070	          0x83ff02	                              cmp edi, 2	      1185	hcd.c	FUNCTION_20	SWITCH_1
0x4000073	     0xf84a9000000	                            je 0x4000122	      1185	hcd.c	FUNCTION_20	SWITCH_1
0x4000079	          0x83ff03	                              cmp edi, 3	      1185	hcd.c	FUNCTION_20	SWITCH_1
0x400007c	            0x745a	                            je 0x40000d8	      1185	hcd.c	FUNCTION_20	SWITCH_1
0x400007e	          0x83ff01	                              cmp edi, 1	      1185	hcd.c	FUNCTION_20	SWITCH_1
0x4000081	            0x7408	                            je 0x400008b	      1185	hcd.c	FUNCTION_20	SWITCH_1
0x4000083	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      1211	hcd.c	FUNCTION_20	SWITCH_1
0x400008a	              0xc3	                                     ret	      1213	hcd.c	FUNCTION_20
0x400008b	          0x6bc938	                     imul ecx, ecx, 0x38	      1189	hcd.c	FUNCTION_20	SWITCH_1	IF_1
0x400008e	      0xbaabaaaa2a	                     mov edx, 0x2aaaaaab	      1189	hcd.c	FUNCTION_20	SWITCH_1	IF_1
0x4000093	            0x89c8	                            mov eax, ecx	      1189	hcd.c	FUNCTION_20	SWITCH_1	IF_1
0x4000095	          0xc1f91f	                           sar ecx, 0x1f	      1189	hcd.c	FUNCTION_20	SWITCH_1	IF_1
0x4000098	            0xf7ea	                                imul edx	      1189	hcd.c	FUNCTION_20	SWITCH_1	IF_1
0x400009a	            0x29ca	                            sub edx, ecx	      1189	hcd.c	FUNCTION_20	SWITCH_1	IF_1
0x400009c	            0x85f6	                           test esi, esi	      1187	hcd.c	FUNCTION_20	SWITCH_1	IF_1
0x400009e	          0x4863ca	                         movsxd rcx, edx	      1189	hcd.c	FUNCTION_20	SWITCH_1	IF_1
0x40000a1	     0xf84f5000000	                            je 0x400019c	      1187	hcd.c	FUNCTION_20	SWITCH_1	IF_1
0x40000a7	    0x4869c93e530a	                  imul rcx, rcx, 0xa533e	      1189	hcd.c	FUNCTION_20	SWITCH_1	IF_1
0x40000ae	    0x48bacff753e3	          movabs rdx, 0x20c49ba5e353f7cf	      1189	hcd.c	FUNCTION_20	SWITCH_1	IF_1
0x40000b8	    0x4881c10d0220	                       add rcx, 0x20020d	      1189	hcd.c	FUNCTION_20	SWITCH_1	IF_1
0x40000bf	          0x4889c8	                            mov rax, rcx	      1189	hcd.c	FUNCTION_20	SWITCH_1	IF_1
0x40000c2	        0x48c1f93f	                           sar rcx, 0x3f	      1189	hcd.c	FUNCTION_20	SWITCH_1	IF_1
0x40000c6	          0x48f7ea	                                imul rdx	      1189	hcd.c	FUNCTION_20	SWITCH_1	IF_1
0x40000c9	        0x48c1fa07	                              sar rdx, 7	      1189	hcd.c	FUNCTION_20	SWITCH_1	IF_1
0x40000cd	          0x4829ca	                            sub rdx, rcx	      1189	hcd.c	FUNCTION_20	SWITCH_1	IF_1
0x40000d0	    0x488d82be0001	                lea rax, [rdx + 0x100be]	      1189	hcd.c	FUNCTION_20	SWITCH_1	IF_1
0x40000d7	              0xc3	                                     ret	      1189	hcd.c	FUNCTION_20	SWITCH_1	IF_1
0x40000d8	          0x6bc938	                     imul ecx, ecx, 0x38	      1205	hcd.c	FUNCTION_20	SWITCH_1	CALL_5
0x40000db	            0x85d2	                           test edx, edx	      1204	hcd.c	FUNCTION_20	SWITCH_1	IF_3
0x40000dd	      0xbaabaaaa2a	                     mov edx, 0x2aaaaaab	      1205	hcd.c	FUNCTION_20	SWITCH_1	CALL_5
0x40000e2	            0x89c8	                            mov eax, ecx	      1205	hcd.c	FUNCTION_20	SWITCH_1	CALL_5
0x40000e4	     0xf8592000000	                           jne 0x400017c	      1204	hcd.c	FUNCTION_20	SWITCH_1	IF_3
0x40000ea	            0xf7ea	                                imul edx	      1207	hcd.c	FUNCTION_20	SWITCH_1	CALL_6
0x40000ec	          0xc1f91f	                           sar ecx, 0x1f	      1207	hcd.c	FUNCTION_20	SWITCH_1	CALL_6
0x40000ef	            0x29ca	                            sub edx, ecx	      1207	hcd.c	FUNCTION_20	SWITCH_1	CALL_6
0x40000f1	          0x83c203	                              add edx, 3	      1207	hcd.c	FUNCTION_20	SWITCH_1	CALL_6
0x40000f4	          0x4863d2	                         movsxd rdx, edx	      1207	hcd.c	FUNCTION_20	SWITCH_1	CALL_6
0x40000f7	    0x4869d2230800	                    imul rdx, rdx, 0x823	      1207	hcd.c	FUNCTION_20	SWITCH_1	CALL_6
0x40000fe	    0x4881c228fc0d	                        add rdx, 0xdfc28	      1207	hcd.c	FUNCTION_20	SWITCH_1	CALL_6
0x4000105	        0x48c1ea03	                              shr rdx, 3	      1207	hcd.c	FUNCTION_20	SWITCH_1	CALL_6
0x4000109	    0x48b9cff753e3	          movabs rcx, 0x20c49ba5e353f7cf	      1207	hcd.c	FUNCTION_20	SWITCH_1	CALL_6
0x4000113	          0x4889d0	                            mov rax, rdx	      1207	hcd.c	FUNCTION_20	SWITCH_1	CALL_6
0x4000116	          0x48f7e1	                                 mul rcx	      1207	hcd.c	FUNCTION_20	SWITCH_1	CALL_6
0x4000119	        0x48c1ea04	                              shr rdx, 4	      1207	hcd.c	FUNCTION_20	SWITCH_1	CALL_6
0x400011d	        0x488d4205	                      lea rax, [rdx + 5]	      1207	hcd.c	FUNCTION_20	SWITCH_1	CALL_6
0x4000121	              0xc3	                                     ret	      1208	hcd.c	FUNCTION_20	SWITCH_1
0x4000122	          0x6bc938	                     imul ecx, ecx, 0x38	      1196	hcd.c	FUNCTION_20	SWITCH_1	IF_2	CALL_3
0x4000125	            0x85d2	                           test edx, edx	      1195	hcd.c	FUNCTION_20	SWITCH_1	IF_2
0x4000127	      0xbaabaaaa2a	                     mov edx, 0x2aaaaaab	      1196	hcd.c	FUNCTION_20	SWITCH_1	IF_2	CALL_3
0x400012c	            0x89c8	                            mov eax, ecx	      1196	hcd.c	FUNCTION_20	SWITCH_1	IF_2	CALL_3
0x400012e	     0xf8499000000	                            je 0x40001cd	      1195	hcd.c	FUNCTION_20	SWITCH_1	IF_2
0x4000134	            0xf7ea	                                imul edx	      1196	hcd.c	FUNCTION_20	SWITCH_1	IF_2	CALL_3
0x4000136	          0xc1f91f	                           sar ecx, 0x1f	      1196	hcd.c	FUNCTION_20	SWITCH_1	IF_2	CALL_3
0x4000139	            0x29ca	                            sub edx, ecx	      1196	hcd.c	FUNCTION_20	SWITCH_1	IF_2	CALL_3
0x400013b	          0x4863ca	                         movsxd rcx, edx	      1196	hcd.c	FUNCTION_20	SWITCH_1	IF_2	CALL_3
0x400013e	    0x48bacff753e3	          movabs rdx, 0x20c49ba5e353f7cf	      1196	hcd.c	FUNCTION_20	SWITCH_1	IF_2	CALL_3
0x4000148	    0x4869c9544601	                  imul rcx, rcx, 0x14654	      1196	hcd.c	FUNCTION_20	SWITCH_1	IF_2	CALL_3
0x400014f	    0x4881c19ef303	                        add rcx, 0x3f39e	      1196	hcd.c	FUNCTION_20	SWITCH_1	IF_2	CALL_3
0x4000156	          0x4889c8	                            mov rax, rcx	      1196	hcd.c	FUNCTION_20	SWITCH_1	IF_2	CALL_3
0x4000159	        0x48c1f93f	                           sar rcx, 0x3f	      1196	hcd.c	FUNCTION_20	SWITCH_1	IF_2	CALL_3
0x400015d	          0x48f7ea	                                imul rdx	      1196	hcd.c	FUNCTION_20	SWITCH_1	IF_2	CALL_3
0x4000160	        0x48c1fa07	                              sar rdx, 7	      1196	hcd.c	FUNCTION_20	SWITCH_1	IF_2	CALL_3
0x4000164	          0x4829ca	                            sub rdx, rcx	      1196	hcd.c	FUNCTION_20	SWITCH_1	IF_2	CALL_3
0x4000167	          0x83fe01	                              cmp esi, 1	      1197	hcd.c	FUNCTION_20	SWITCH_1	IF_2
0x400016a	          0x4819c0	                            sbb rax, rax	      1197	hcd.c	FUNCTION_20	SWITCH_1	IF_2
0x400016d	    0x482515fcffff	             and rax, 0xfffffffffffffc15	      1197	hcd.c	FUNCTION_20	SWITCH_1	IF_2
0x4000173	    0x488d84104c20	           lea rax, [rax + rdx + 0x204c]	      1197	hcd.c	FUNCTION_20	SWITCH_1	IF_2
0x400017b	              0xc3	                                     ret	      1197	hcd.c	FUNCTION_20	SWITCH_1	IF_2
0x400017c	            0xf7ea	                                imul edx	      1205	hcd.c	FUNCTION_20	SWITCH_1	CALL_5
0x400017e	          0xc1f91f	                           sar ecx, 0x1f	      1205	hcd.c	FUNCTION_20	SWITCH_1	CALL_5
0x4000181	            0x29ca	                            sub edx, ecx	      1205	hcd.c	FUNCTION_20	SWITCH_1	CALL_5
0x4000183	          0x83c203	                              add edx, 3	      1205	hcd.c	FUNCTION_20	SWITCH_1	CALL_5
0x4000186	          0x4863d2	                         movsxd rdx, edx	      1205	hcd.c	FUNCTION_20	SWITCH_1	CALL_5
0x4000189	    0x4869d2230800	                    imul rdx, rdx, 0x823	      1205	hcd.c	FUNCTION_20	SWITCH_1	CALL_5
0x4000190	    0x4881c290a909	                        add rdx, 0x9a990	      1205	hcd.c	FUNCTION_20	SWITCH_1	CALL_5
0x4000197	      0xe969ffffff	                           jmp 0x4000105	      1205	hcd.c	FUNCTION_20	SWITCH_1	CALL_5
0x400019c	    0x4869c9782d0a	                  imul rcx, rcx, 0xa2d78	      1192	hcd.c	FUNCTION_20	SWITCH_1	ELSE_1
0x40001a3	    0x48bacff753e3	          movabs rdx, 0x20c49ba5e353f7cf	      1192	hcd.c	FUNCTION_20	SWITCH_1	ELSE_1
0x40001ad	    0x4881c1f48c1f	                       add rcx, 0x1f8cf4	      1192	hcd.c	FUNCTION_20	SWITCH_1	ELSE_1
0x40001b4	          0x4889c8	                            mov rax, rcx	      1192	hcd.c	FUNCTION_20	SWITCH_1	ELSE_1
0x40001b7	        0x48c1f93f	                           sar rcx, 0x3f	      1192	hcd.c	FUNCTION_20	SWITCH_1	ELSE_1
0x40001bb	          0x48f7ea	                                imul rdx	      1192	hcd.c	FUNCTION_20	SWITCH_1	ELSE_1
0x40001be	        0x48c1fa07	                              sar rdx, 7	      1192	hcd.c	FUNCTION_20	SWITCH_1	ELSE_1
0x40001c2	          0x4829ca	                            sub rdx, rcx	      1192	hcd.c	FUNCTION_20	SWITCH_1	ELSE_1
0x40001c5	    0x488d82ed0001	                lea rax, [rdx + 0x100ed]	      1192	hcd.c	FUNCTION_20	SWITCH_1	ELSE_1
0x40001cc	              0xc3	                                     ret	      1192	hcd.c	FUNCTION_20	SWITCH_1	ELSE_1
0x40001cd	            0xf7ea	                                imul edx	      1200	hcd.c	FUNCTION_20	SWITCH_1	ELSE_2
0x40001cf	          0xc1f91f	                           sar ecx, 0x1f	      1200	hcd.c	FUNCTION_20	SWITCH_1	ELSE_2
0x40001d2	            0x29ca	                            sub edx, ecx	      1200	hcd.c	FUNCTION_20	SWITCH_1	ELSE_2
0x40001d4	          0x4863ca	                         movsxd rcx, edx	      1200	hcd.c	FUNCTION_20	SWITCH_1	ELSE_2
0x40001d7	    0x48bacff753e3	          movabs rdx, 0x20c49ba5e353f7cf	      1200	hcd.c	FUNCTION_20	SWITCH_1	ELSE_2
0x40001e1	    0x4869c9544601	                  imul rcx, rcx, 0x14654	      1200	hcd.c	FUNCTION_20	SWITCH_1	ELSE_2
0x40001e8	    0x4881c19ef303	                        add rcx, 0x3f39e	      1200	hcd.c	FUNCTION_20	SWITCH_1	ELSE_2
0x40001ef	          0x4889c8	                            mov rax, rcx	      1200	hcd.c	FUNCTION_20	SWITCH_1	ELSE_2
0x40001f2	        0x48c1f93f	                           sar rcx, 0x3f	      1200	hcd.c	FUNCTION_20	SWITCH_1	ELSE_2
0x40001f6	          0x48f7ea	                                imul rdx	      1200	hcd.c	FUNCTION_20	SWITCH_1	ELSE_2
0x40001f9	        0x48c1fa07	                              sar rdx, 7	      1200	hcd.c	FUNCTION_20	SWITCH_1	ELSE_2
0x40001fd	          0x4829ca	                            sub rdx, rcx	      1200	hcd.c	FUNCTION_20	SWITCH_1	ELSE_2
0x4000200	    0x488d827b2700	                 lea rax, [rdx + 0x277b]	      1200	hcd.c	FUNCTION_20	SWITCH_1	ELSE_2
0x4000207	              0xc3	                                     ret	      1200	hcd.c	FUNCTION_20	SWITCH_1	ELSE_2
usb_mon_deregister	WHILE,0:SWITCH,0:CALL,2:IF,1:ELSE,0:functions,0:FOR,0:DO,0	7
0x4000730	    0x48833d000000	               cmp qword [0x04000738], 0	      3077	hcd.c	FUNCTION_67	IF_1
0x4000738	            0x740f	                            je 0x4000749	      3077	hcd.c	FUNCTION_67	IF_1
0x400073a	    0x48c705000000	               mov qword [0x04000745], 0	      3081	hcd.c	FUNCTION_67
0x4000745	           0xfaef0	                                  mfence	      3082	hcd.c	FUNCTION_67	CALL_2
0x4000748	              0xc3	                                     ret	      3082	hcd.c	FUNCTION_67	CALL_2
0x4000749	    0x48c7c7000000	                              mov rdi, 0	      3078	hcd.c	FUNCTION_67	IF_1	CALL_1
0x4000750	      0xe900000000	                           jmp 0x4000755	      3078	hcd.c	FUNCTION_67	IF_1	CALL_1
usb_hcd_irq	WHILE,0:SWITCH,0:CALL,4:IF,2:ELSE,2:functions,0:FOR,0:DO,0	14
0x4000580	    0x488b86280100	           mov rax, qword [rsi + 0x128] 	      2450	hcd.c	FUNCTION_50	IF_1	CALL_3
0x4000587	          0x83e041	                           and eax, 0x41	      2450	hcd.c	FUNCTION_50	IF_1	CALL_3
0x400058a	        0x4883f801	                              cmp rax, 1	      2450	hcd.c	FUNCTION_50	IF_1	CALL_3
0x400058e	            0x751c	                           jne 0x40005ac	      2450	hcd.c	FUNCTION_50	IF_1	CALL_3
0x4000590	    0x488b86100100	           mov rax, qword [rsi + 0x110] 	      2452	hcd.c	FUNCTION_50	ELSE_1	IF_2	CALL_4
0x4000597	          0x4889f7	                            mov rdi, rsi	      2452	hcd.c	FUNCTION_50	ELSE_1	IF_2	CALL_4
0x400059a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2452	hcd.c	FUNCTION_50	ELSE_1	IF_2	CALL_4
0x400059e	      0xe800000000	                          call 0x40005a3	      2452	hcd.c	FUNCTION_50	ELSE_1	IF_2	CALL_4
0x40005a3	            0x85c0	                           test eax, eax	      2451	hcd.c	FUNCTION_50	IF_1
0x40005a5	           0xf95c0	                                setne al	      2451	hcd.c	FUNCTION_50	IF_1
0x40005a8	           0xfb6c0	                           movzx eax, al	      2451	hcd.c	FUNCTION_50	IF_1
0x40005ab	              0xc3	                                     ret	      2451	hcd.c	FUNCTION_50	IF_1
0x40005ac	            0x31c0	                            xor eax, eax	      2451	hcd.c	FUNCTION_50	IF_1
0x40005ae	              0xc3	                                     ret	      2458	hcd.c	FUNCTION_50
unmap_urb_for_dma	WHILE,0:SWITCH,0:CALL,2:IF,1:ELSE,1:functions,0:FOR,0:DO,0	6
0x4000e30	    0x488b87100100	           mov rax, qword [rdi + 0x110] 	      1446	hcd.c	FUNCTION_27	IF_1
0x4000e37	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1446	hcd.c	FUNCTION_27	IF_1
0x4000e3b	          0x4885c0	                           test rax, rax	      1446	hcd.c	FUNCTION_27	IF_1
0x4000e3e	            0x7405	                            je 0x4000e45	      1446	hcd.c	FUNCTION_27	IF_1
0x4000e40	      0xe900000000	                           jmp 0x4000e45	      1447	hcd.c	FUNCTION_27	CALL_1
0x4000e45	      0xe986feffff	       jmp sym.usb_hcd_unmap_urb_for_dma	      1449	hcd.c	FUNCTION_27	CALL_2
usb_hcd_find_raw_port_number	WHILE,0:SWITCH,0:CALL,1:IF,1:ELSE,0:functions,0:FOR,0:DO,0	7
0x4003570	    0x488b97100100	           mov rdx, qword [rdi + 0x110] 	      2675	hcd.c	FUNCTION_60	IF_1
0x4003577	    0x488b92500100	           mov rdx, qword [rdx + 0x150] 	      2675	hcd.c	FUNCTION_60	IF_1
0x400357e	          0x4885d2	                           test rdx, rdx	      2675	hcd.c	FUNCTION_60	IF_1
0x4003581	            0x7405	                            je 0x4003588	      2675	hcd.c	FUNCTION_60	IF_1
0x4003583	      0xe900000000	                           jmp 0x4003588	      2678	hcd.c	FUNCTION_60	CALL_1
0x4003588	            0x89f0	                            mov eax, esi	      2679	hcd.c	FUNCTION_60
0x400358a	              0xc3	                                     ret	      2679	hcd.c	FUNCTION_60
rh_timer_func	WHILE,0:SWITCH,0:CALL,2:IF,0:ELSE,0:functions,0:FOR,0:DO,0	2
0x4001180	    0x4881efc00000	                           sub rdi, 0xc0	       796	hcd.c	FUNCTION_6	CALL_2
0x4001187	      0xe974feffff	          jmp sym.usb_hcd_poll_rh_status	       796	hcd.c	FUNCTION_6	CALL_2
usb_hcd_alloc_bandwidth	WHILE,0:SWITCH,0:CALL,14:IF,18:ELSE,0:functions,0:FOR,6:DO,0	213
0x4002e70	            0x4157	                                push r15	      1963	hcd.c	FUNCTION_38
0x4002e72	            0x4156	                                push r14	      1963	hcd.c	FUNCTION_38
0x4002e74	            0x4155	                                push r13	      1963	hcd.c	FUNCTION_38
0x4002e76	            0x4154	                                push r12	      1963	hcd.c	FUNCTION_38
0x4002e78	              0x55	                                push rbp	      1963	hcd.c	FUNCTION_38
0x4002e79	              0x53	                                push rbx	      1963	hcd.c	FUNCTION_38
0x4002e7a	        0x4883ec18	                           sub rsp, 0x18	      1963	hcd.c	FUNCTION_38
0x4002e7e	        0x4c8b7740	            mov r14, qword [rdi + 0x40] 	      1970	hcd.c	FUNCTION_38	CALL_1
0x4002e82	      0x48894c2408	                mov qword [rsp + 8], rcx	      1963	hcd.c	FUNCTION_38
0x4002e87	    0x498b86100100	           mov rax, qword [r14 + 0x110] 	      1971	hcd.c	FUNCTION_38	IF_1
0x4002e8e	    0x4883b8000100	              cmp qword [rax + 0x100], 0	      1971	hcd.c	FUNCTION_38	IF_1
0x4002e96	     0xf847a020000	                            je 0x4003116	      1971	hcd.c	FUNCTION_38	IF_1
0x4002e9c	          0x4885f6	                           test rsi, rsi	      1975	hcd.c	FUNCTION_38	IF_2
0x4002e9f	          0x4889fb	                            mov rbx, rdi	      1975	hcd.c	FUNCTION_38	IF_2
0x4002ea2	          0x4989f4	                            mov r12, rsi	      1975	hcd.c	FUNCTION_38	IF_2
0x4002ea5	          0x4989d5	                            mov r13, rdx	      1975	hcd.c	FUNCTION_38	IF_2
0x4002ea8	     0xf8583000000	                           jne 0x4002f31	      1975	hcd.c	FUNCTION_38	IF_2
0x4002eae	          0x4885d2	                           test rdx, rdx	      1975	hcd.c	FUNCTION_38	IF_2
0x4002eb1	            0x757e	                           jne 0x4002f31	      1975	hcd.c	FUNCTION_38	IF_2
0x4002eb3	    0x488daf200400	                  lea rbp, [rdi + 0x420]	      1975	hcd.c	FUNCTION_38	IF_2
0x4002eba	    0x4c8da7980400	                  lea r12, [rdi + 0x498]	      1975	hcd.c	FUNCTION_38	IF_2
0x4002ec1	        0x488b5500	                    mov rdx, qword [rbp]	      1977	hcd.c	FUNCTION_38	IF_2	FOR_1
0x4002ec5	          0x4885d2	                           test rdx, rdx	      1978	hcd.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x4002ec8	            0x7419	                            je 0x4002ee3	      1978	hcd.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x4002eca	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1979	hcd.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x4002ed1	          0x4889de	                            mov rsi, rbx	      1979	hcd.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x4002ed4	          0x4c89f7	                            mov rdi, r14	      1979	hcd.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x4002ed7	      0xe800000000	                          call 0x4002edc	      1979	hcd.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x4002edc	    0x498b86100100	           mov rax, qword [r14 + 0x110] 	      1979	hcd.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x4002ee3	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      1980	hcd.c	FUNCTION_38	IF_2	FOR_1
0x4002ee7	          0x4885d2	                           test rdx, rdx	      1981	hcd.c	FUNCTION_38	IF_2	FOR_1	IF_4
0x4002eea	            0x7419	                            je 0x4002f05	      1981	hcd.c	FUNCTION_38	IF_2	FOR_1	IF_4
0x4002eec	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1982	hcd.c	FUNCTION_38	IF_2	FOR_1	CALL_3
0x4002ef3	          0x4889de	                            mov rsi, rbx	      1982	hcd.c	FUNCTION_38	IF_2	FOR_1	CALL_3
0x4002ef6	          0x4c89f7	                            mov rdi, r14	      1982	hcd.c	FUNCTION_38	IF_2	FOR_1	CALL_3
0x4002ef9	      0xe800000000	                          call 0x4002efe	      1982	hcd.c	FUNCTION_38	IF_2	FOR_1	CALL_3
0x4002efe	    0x498b86100100	           mov rax, qword [r14 + 0x110] 	      1982	hcd.c	FUNCTION_38	IF_2	FOR_1	CALL_3
0x4002f05	        0x4883c508	                              add rbp, 8	      1982	hcd.c	FUNCTION_38	IF_2	FOR_1	CALL_3
0x4002f09	          0x4c39e5	                            cmp rbp, r12	      1976	hcd.c	FUNCTION_38	IF_2	FOR_1
0x4002f0c	            0x75b3	                           jne 0x4002ec1	      1976	hcd.c	FUNCTION_38	IF_2	FOR_1
0x4002f0e	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      1984	hcd.c	FUNCTION_38	IF_2	CALL_4
0x4002f15	          0x4889de	                            mov rsi, rbx	      1984	hcd.c	FUNCTION_38	IF_2	CALL_4
0x4002f18	          0x4c89f7	                            mov rdi, r14	      1984	hcd.c	FUNCTION_38	IF_2	CALL_4
0x4002f1b	      0xe800000000	                          call 0x4002f20	      1984	hcd.c	FUNCTION_38	IF_2	CALL_4
0x4002f20	            0x31c0	                            xor eax, eax	      1985	hcd.c	FUNCTION_38	IF_2
0x4002f22	        0x4883c418	                           add rsp, 0x18	      2071	hcd.c	FUNCTION_38
0x4002f26	              0x5b	                                 pop rbx	      2071	hcd.c	FUNCTION_38
0x4002f27	              0x5d	                                 pop rbp	      2071	hcd.c	FUNCTION_38
0x4002f28	            0x415c	                                 pop r12	      2071	hcd.c	FUNCTION_38
0x4002f2a	            0x415d	                                 pop r13	      2071	hcd.c	FUNCTION_38
0x4002f2c	            0x415e	                                 pop r14	      2071	hcd.c	FUNCTION_38
0x4002f2e	            0x415f	                                 pop r15	      2071	hcd.c	FUNCTION_38
0x4002f30	              0xc3	                                     ret	      2071	hcd.c	FUNCTION_38
0x4002f31	          0x4d85e4	                           test r12, r12	      1992	hcd.c	FUNCTION_38	IF_5
0x4002f34	     0xf843e010000	                            je 0x4003078	      1992	hcd.c	FUNCTION_38	IF_5
0x4002f3a	    0x410fb6442404	               movzx eax, byte [r12 + 4]	      1993	hcd.c	FUNCTION_38	IF_5
0x4002f40	    0x4c8dbb200400	                  lea r15, [rbx + 0x420]	      1993	hcd.c	FUNCTION_38	IF_5
0x4002f47	    0x488dab980400	                  lea rbp, [rbx + 0x498]	      1993	hcd.c	FUNCTION_38	IF_5
0x4002f4e	          0x880424	                      mov byte [rsp], al	      1993	hcd.c	FUNCTION_38	IF_5
0x4002f51	          0x498b17	                    mov rdx, qword [r15]	      1998	hcd.c	FUNCTION_38	IF_5	FOR_2
0x4002f54	          0x4885d2	                           test rdx, rdx	      1999	hcd.c	FUNCTION_38	IF_5	FOR_2	IF_6
0x4002f57	            0x7421	                            je 0x4002f7a	      1999	hcd.c	FUNCTION_38	IF_5	FOR_2	IF_6
0x4002f59	    0x498b86100100	           mov rax, qword [r14 + 0x110] 	      2000	hcd.c	FUNCTION_38	IF_5	FOR_2	IF_6	CALL_5
0x4002f60	          0x4889de	                            mov rsi, rbx	      2000	hcd.c	FUNCTION_38	IF_5	FOR_2	IF_6	CALL_5
0x4002f63	          0x4c89f7	                            mov rdi, r14	      2000	hcd.c	FUNCTION_38	IF_5	FOR_2	IF_6	CALL_5
0x4002f66	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2000	hcd.c	FUNCTION_38	IF_5	FOR_2	IF_6	CALL_5
0x4002f6d	      0xe800000000	                          call 0x4002f72	      2000	hcd.c	FUNCTION_38	IF_5	FOR_2	IF_6	CALL_5
0x4002f72	            0x85c0	                           test eax, eax	      2001	hcd.c	FUNCTION_38	IF_5	FOR_2	IF_6	IF_7
0x4002f74	     0xf88c6000000	                            js 0x4003040	      2001	hcd.c	FUNCTION_38	IF_5	FOR_2	IF_6	IF_7
0x4002f7a	        0x498b5780	             mov rdx, qword [r15 - 0x80]	      2004	hcd.c	FUNCTION_38	IF_5	FOR_2
0x4002f7e	          0x4885d2	                           test rdx, rdx	      2005	hcd.c	FUNCTION_38	IF_5	FOR_2	IF_8
0x4002f81	            0x7421	                            je 0x4002fa4	      2005	hcd.c	FUNCTION_38	IF_5	FOR_2	IF_8
0x4002f83	    0x498b86100100	           mov rax, qword [r14 + 0x110] 	      2006	hcd.c	FUNCTION_38	IF_5	FOR_2	IF_8	CALL_6
0x4002f8a	          0x4889de	                            mov rsi, rbx	      2006	hcd.c	FUNCTION_38	IF_5	FOR_2	IF_8	CALL_6
0x4002f8d	          0x4c89f7	                            mov rdi, r14	      2006	hcd.c	FUNCTION_38	IF_5	FOR_2	IF_8	CALL_6
0x4002f90	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2006	hcd.c	FUNCTION_38	IF_5	FOR_2	IF_8	CALL_6
0x4002f97	      0xe800000000	                          call 0x4002f9c	      2006	hcd.c	FUNCTION_38	IF_5	FOR_2	IF_8	CALL_6
0x4002f9c	            0x85c0	                           test eax, eax	      2007	hcd.c	FUNCTION_38	IF_5	FOR_2	IF_8	IF_9
0x4002f9e	     0xf889c000000	                            js 0x4003040	      2007	hcd.c	FUNCTION_38	IF_5	FOR_2	IF_8	IF_9
0x4002fa4	        0x4983c708	                              add r15, 8	      2007	hcd.c	FUNCTION_38	IF_5	FOR_2	IF_8	IF_9
0x4002fa8	          0x4c39fd	                            cmp rbp, r15	      1997	hcd.c	FUNCTION_38	IF_5	FOR_2
0x4002fab	            0x75a4	                           jne 0x4002f51	      1997	hcd.c	FUNCTION_38	IF_5	FOR_2
0x4002fad	         0xfb60424	                   movzx eax, byte [rsp]	      2011	hcd.c	FUNCTION_38	IF_5	FOR_3
0x4002fb1	            0x84c0	                             test al, al	      2011	hcd.c	FUNCTION_38	IF_5	FOR_3
0x4002fb3	     0xf84bf000000	                            je 0x4003078	      2011	hcd.c	FUNCTION_38	IF_5	FOR_3
0x4002fb9	        0x440fb6f8	                          movzx r15d, al	      2011	hcd.c	FUNCTION_38	IF_5	FOR_3
0x4002fbd	    0x498d8c249801	                  lea rcx, [r12 + 0x198]	      2011	hcd.c	FUNCTION_38	IF_5	FOR_3
0x4002fc5	        0x418d47ff	                      lea eax, [r15 - 1]	      2011	hcd.c	FUNCTION_38	IF_5	FOR_3
0x4002fc9	        0x48890c24	                    mov qword [rsp], rcx	      2011	hcd.c	FUNCTION_38	IF_5	FOR_3
0x4002fcd	    0x498d84c4a001	         lea rax, [r12 + rax*8 + 0x1a0] 	      2011	hcd.c	FUNCTION_38	IF_5	FOR_3
0x4002fd5	      0x4889442410	             mov qword [rsp + 0x10], rax	      2011	hcd.c	FUNCTION_38	IF_5	FOR_3
0x4002fda	        0x488b0424	                    mov rax, qword [rsp]	      2015	hcd.c	FUNCTION_38	IF_5	FOR_3
0x4002fde	            0x31d2	                            xor edx, edx	      2018	hcd.c	FUNCTION_38	IF_5	FOR_3	CALL_7
0x4002fe0	          0x4c89e7	                            mov rdi, r12	      2018	hcd.c	FUNCTION_38	IF_5	FOR_3	CALL_7
0x4002fe3	          0x488b28	                    mov rbp, qword [rax]	      2015	hcd.c	FUNCTION_38	IF_5	FOR_3
0x4002fe6	         0xfb6750a	            movzx esi, byte [rbp + 0xa] 	      2018	hcd.c	FUNCTION_38	IF_5	FOR_3	CALL_7
0x4002fea	      0xe800000000	                          call 0x4002fef	      2018	hcd.c	FUNCTION_38	IF_5	FOR_3	CALL_7
0x4002fef	        0x4c8d4508	                       lea r8, [rbp + 8]	      2015	hcd.c	FUNCTION_38	IF_5	FOR_3
0x4002ff3	          0x4885c0	                           test rax, rax	      2015	hcd.c	FUNCTION_38	IF_5	FOR_3
0x4002ff6	          0x4989c7	                            mov r15, rax	      2018	hcd.c	FUNCTION_38	IF_5	FOR_3	CALL_7
0x4002ff9	        0x4d0f44f8	                           cmove r15, r8	      2015	hcd.c	FUNCTION_38	IF_5	FOR_3
0x4002ffd	            0x31ed	                            xor ebp, ebp	      2023	hcd.c	FUNCTION_38	IF_5	FOR_3	FOR_4
0x4002fff	      0x41807f0400	                   cmp byte [r15 + 4], 0	      2023	hcd.c	FUNCTION_38	IF_5	FOR_3	FOR_4
0x4003004	            0x750e	                           jne 0x4003014	      2023	hcd.c	FUNCTION_38	IF_5	FOR_3	FOR_4
0x4003006	            0xeb5c	                           jmp 0x4003064	      2023	hcd.c	FUNCTION_38	IF_5	FOR_3	FOR_4
0x4003008	      0x410fb64704	               movzx eax, byte [r15 + 4]	      2023	hcd.c	FUNCTION_38	IF_5	FOR_3	FOR_4
0x400300d	          0x83c501	                              add ebp, 1	      2023	hcd.c	FUNCTION_38	IF_5	FOR_3	FOR_4
0x4003010	            0x39e8	                            cmp eax, ebp	      2023	hcd.c	FUNCTION_38	IF_5	FOR_3	FOR_4
0x4003012	            0x7e50	                           jle 0x4003064	      2023	hcd.c	FUNCTION_38	IF_5	FOR_3	FOR_4
0x4003014	          0x4863c5	                         movsxd rax, ebp	      2024	hcd.c	FUNCTION_38	IF_5	FOR_3	FOR_4	CALL_8
0x4003017	          0x4889de	                            mov rsi, rbx	      2024	hcd.c	FUNCTION_38	IF_5	FOR_3	FOR_4	CALL_8
0x400301a	          0x4c89f7	                            mov rdi, r14	      2024	hcd.c	FUNCTION_38	IF_5	FOR_3	FOR_4	CALL_8
0x400301d	        0x488d1480	                  lea rdx, [rax + rax*4]	      2024	hcd.c	FUNCTION_38	IF_5	FOR_3	FOR_4	CALL_8
0x4003021	    0x498b86100100	           mov rax, qword [r14 + 0x110] 	      2024	hcd.c	FUNCTION_38	IF_5	FOR_3	FOR_4	CALL_8
0x4003028	        0x48c1e204	                              shl rdx, 4	      2024	hcd.c	FUNCTION_38	IF_5	FOR_3	FOR_4	CALL_8
0x400302c	        0x49035718	             add rdx, qword [r15 + 0x18]	      2024	hcd.c	FUNCTION_38	IF_5	FOR_3	FOR_4	CALL_8
0x4003030	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      2024	hcd.c	FUNCTION_38	IF_5	FOR_3	FOR_4	CALL_8
0x4003037	      0xe800000000	                          call 0x400303c	      2024	hcd.c	FUNCTION_38	IF_5	FOR_3	FOR_4	CALL_8
0x400303c	            0x85c0	                           test eax, eax	      2025	hcd.c	FUNCTION_38	IF_5	FOR_3	FOR_4	IF_11
0x400303e	            0x79c8	                           jns 0x4003008	      2025	hcd.c	FUNCTION_38	IF_5	FOR_3	FOR_4	IF_11
0x4003040	    0x498b96100100	           mov rdx, qword [r14 + 0x110] 	      2069	hcd.c	FUNCTION_38	CALL_14
0x4003047	          0x890424	                    mov dword [rsp], eax	      2069	hcd.c	FUNCTION_38	CALL_14
0x400304a	          0x4889de	                            mov rsi, rbx	      2069	hcd.c	FUNCTION_38	CALL_14
0x400304d	          0x4c89f7	                            mov rdi, r14	      2069	hcd.c	FUNCTION_38	CALL_14
0x4003050	    0x488b92080100	           mov rdx, qword [rdx + 0x108] 	      2069	hcd.c	FUNCTION_38	CALL_14
0x4003057	      0xe800000000	                          call 0x400305c	      2069	hcd.c	FUNCTION_38	CALL_14
0x400305c	          0x8b0424	                    mov eax, dword [rsp]	      2069	hcd.c	FUNCTION_38	CALL_14
0x400305f	      0xe9befeffff	                           jmp 0x4002f22	      2069	hcd.c	FUNCTION_38	CALL_14
0x4003064	      0x4883042408	                      add qword [rsp], 8	      2069	hcd.c	FUNCTION_38	CALL_14
0x4003069	        0x488b0424	                    mov rax, qword [rsp]	      2069	hcd.c	FUNCTION_38	CALL_14
0x400306d	      0x4839442410	            cmp qword [rsp + 0x10], rax 	      2011	hcd.c	FUNCTION_38	IF_5	FOR_3
0x4003072	     0xf8562ffffff	                           jne 0x4002fda	      2011	hcd.c	FUNCTION_38	IF_5	FOR_3
0x4003078	          0x4d85ed	                           test r13, r13	      2030	hcd.c	FUNCTION_38	IF_12
0x400307b	            0x7473	                            je 0x40030f0	      2030	hcd.c	FUNCTION_38	IF_12
0x400307d	    0x48837c240800	                  cmp qword [rsp + 8], 0	      2030	hcd.c	FUNCTION_38	IF_12
0x4003083	            0x746b	                            je 0x40030f0	      2030	hcd.c	FUNCTION_38	IF_12
0x4003085	      0x410fb67502	               movzx esi, byte [r13 + 2]	      2031	hcd.c	FUNCTION_38	IF_12	CALL_9
0x400308a	          0x4889df	                            mov rdi, rbx	      2031	hcd.c	FUNCTION_38	IF_12	CALL_9
0x400308d	      0xe800000000	                          call 0x4003092	      2031	hcd.c	FUNCTION_38	IF_12	CALL_9
0x4003092	          0x4885c0	                           test rax, rax	      2034	hcd.c	FUNCTION_38	IF_12	IF_13
0x4003095	          0x4889c5	                            mov rbp, rax	      2031	hcd.c	FUNCTION_38	IF_12	CALL_9
0x4003098	     0xf84f9000000	                            je 0x4003197	      2034	hcd.c	FUNCTION_38	IF_12	IF_13
0x400309e	        0xf6402840	           test byte [rax + 0x28], 0x40 	      2036	hcd.c	FUNCTION_38	IF_12	IF_14
0x40030a2	     0xf85d0000000	                           jne 0x4003178	      2036	hcd.c	FUNCTION_38	IF_12	IF_14
0x40030a8	            0x31ed	                            xor ebp, ebp	      2052	hcd.c	FUNCTION_38	IF_12	FOR_5
0x40030aa	      0x41807d0400	                   cmp byte [r13 + 4], 0	      2052	hcd.c	FUNCTION_38	IF_12	FOR_5
0x40030af	            0x750e	                           jne 0x40030bf	      2052	hcd.c	FUNCTION_38	IF_12	FOR_5
0x40030b1	            0xeb74	                           jmp 0x4003127	      2052	hcd.c	FUNCTION_38	IF_12	FOR_5
0x40030b3	      0x410fb64504	               movzx eax, byte [r13 + 4]	      2052	hcd.c	FUNCTION_38	IF_12	FOR_5
0x40030b8	          0x83c501	                              add ebp, 1	      2052	hcd.c	FUNCTION_38	IF_12	FOR_5
0x40030bb	            0x39e8	                            cmp eax, ebp	      2052	hcd.c	FUNCTION_38	IF_12	FOR_5
0x40030bd	            0x7e68	                           jle 0x4003127	      2052	hcd.c	FUNCTION_38	IF_12	FOR_5
0x40030bf	          0x4863c5	                         movsxd rax, ebp	      2053	hcd.c	FUNCTION_38	IF_12	FOR_5	CALL_11
0x40030c2	          0x4889de	                            mov rsi, rbx	      2053	hcd.c	FUNCTION_38	IF_12	FOR_5	CALL_11
0x40030c5	          0x4c89f7	                            mov rdi, r14	      2053	hcd.c	FUNCTION_38	IF_12	FOR_5	CALL_11
0x40030c8	        0x488d1480	                  lea rdx, [rax + rax*4]	      2053	hcd.c	FUNCTION_38	IF_12	FOR_5	CALL_11
0x40030cc	    0x498b86100100	           mov rax, qword [r14 + 0x110] 	      2053	hcd.c	FUNCTION_38	IF_12	FOR_5	CALL_11
0x40030d3	        0x48c1e204	                              shl rdx, 4	      2053	hcd.c	FUNCTION_38	IF_12	FOR_5	CALL_11
0x40030d7	        0x49035518	             add rdx, qword [r13 + 0x18]	      2053	hcd.c	FUNCTION_38	IF_12	FOR_5	CALL_11
0x40030db	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      2053	hcd.c	FUNCTION_38	IF_12	FOR_5	CALL_11
0x40030e2	      0xe800000000	                          call 0x40030e7	      2053	hcd.c	FUNCTION_38	IF_12	FOR_5	CALL_11
0x40030e7	            0x85c0	                           test eax, eax	      2055	hcd.c	FUNCTION_38	IF_12	FOR_5	IF_16
0x40030e9	            0x79c8	                           jns 0x40030b3	      2055	hcd.c	FUNCTION_38	IF_12	FOR_5	IF_16
0x40030eb	      0xe950ffffff	                           jmp 0x4003040	      2055	hcd.c	FUNCTION_38	IF_12	FOR_5	IF_16
0x40030f0	    0x498b86100100	           mov rax, qword [r14 + 0x110] 	      2066	hcd.c	FUNCTION_38	CALL_13
0x40030f7	          0x4889de	                            mov rsi, rbx	      2066	hcd.c	FUNCTION_38	CALL_13
0x40030fa	          0x4c89f7	                            mov rdi, r14	      2066	hcd.c	FUNCTION_38	CALL_13
0x40030fd	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      2066	hcd.c	FUNCTION_38	CALL_13
0x4003104	      0xe800000000	                          call 0x4003109	      2066	hcd.c	FUNCTION_38	CALL_13
0x4003109	            0x85c0	                           test eax, eax	      2068	hcd.c	FUNCTION_38	IF_18
0x400310b	     0xf8911feffff	                           jns 0x4002f22	      2068	hcd.c	FUNCTION_38	IF_18
0x4003111	      0xe92affffff	                           jmp 0x4003040	      2068	hcd.c	FUNCTION_38	IF_18
0x4003116	        0x4883c418	                           add rsp, 0x18	      2071	hcd.c	FUNCTION_38
0x400311a	            0x31c0	                            xor eax, eax	      1972	hcd.c	FUNCTION_38	IF_1
0x400311c	              0x5b	                                 pop rbx	      2071	hcd.c	FUNCTION_38
0x400311d	              0x5d	                                 pop rbp	      2071	hcd.c	FUNCTION_38
0x400311e	            0x415c	                                 pop r12	      2071	hcd.c	FUNCTION_38
0x4003120	            0x415d	                                 pop r13	      2071	hcd.c	FUNCTION_38
0x4003122	            0x415e	                                 pop r14	      2071	hcd.c	FUNCTION_38
0x4003124	            0x415f	                                 pop r15	      2071	hcd.c	FUNCTION_38
0x4003126	              0xc3	                                     ret	      2071	hcd.c	FUNCTION_38
0x4003127	      0x488b442408	                mov rax, qword [rsp + 8]	      2059	hcd.c	FUNCTION_38	IF_12	FOR_6
0x400312c	            0x31ed	                            xor ebp, ebp	      2059	hcd.c	FUNCTION_38	IF_12	FOR_6
0x400312e	        0x80780400	                   cmp byte [rax + 4], 0	      2059	hcd.c	FUNCTION_38	IF_12	FOR_6
0x4003132	            0x750e	                           jne 0x4003142	      2059	hcd.c	FUNCTION_38	IF_12	FOR_6
0x4003134	            0xebba	                           jmp 0x40030f0	      2059	hcd.c	FUNCTION_38	IF_12	FOR_6
0x4003136	      0x410fb64704	               movzx eax, byte [r15 + 4]	      2059	hcd.c	FUNCTION_38	IF_12	FOR_6
0x400313b	          0x83c501	                              add ebp, 1	      2059	hcd.c	FUNCTION_38	IF_12	FOR_6
0x400313e	            0x39e8	                            cmp eax, ebp	      2059	hcd.c	FUNCTION_38	IF_12	FOR_6
0x4003140	            0x7eae	                           jle 0x40030f0	      2059	hcd.c	FUNCTION_38	IF_12	FOR_6
0x4003142	          0x4863c5	                         movsxd rax, ebp	      2060	hcd.c	FUNCTION_38	IF_12	FOR_6	CALL_12
0x4003145	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      2060	hcd.c	FUNCTION_38	IF_12	FOR_6	CALL_12
0x400314a	          0x4889de	                            mov rsi, rbx	      2060	hcd.c	FUNCTION_38	IF_12	FOR_6	CALL_12
0x400314d	        0x488d1480	                  lea rdx, [rax + rax*4]	      2060	hcd.c	FUNCTION_38	IF_12	FOR_6	CALL_12
0x4003151	    0x498b86100100	           mov rax, qword [r14 + 0x110] 	      2060	hcd.c	FUNCTION_38	IF_12	FOR_6	CALL_12
0x4003158	          0x4c89f7	                            mov rdi, r14	      2060	hcd.c	FUNCTION_38	IF_12	FOR_6	CALL_12
0x400315b	        0x48c1e204	                              shl rdx, 4	      2060	hcd.c	FUNCTION_38	IF_12	FOR_6	CALL_12
0x400315f	        0x49035718	             add rdx, qword [r15 + 0x18]	      2060	hcd.c	FUNCTION_38	IF_12	FOR_6	CALL_12
0x4003163	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      2060	hcd.c	FUNCTION_38	IF_12	FOR_6	CALL_12
0x400316a	      0xe800000000	                          call 0x400316f	      2060	hcd.c	FUNCTION_38	IF_12	FOR_6	CALL_12
0x400316f	            0x85c0	                           test eax, eax	      2062	hcd.c	FUNCTION_38	IF_12	FOR_6	IF_17
0x4003171	            0x79c3	                           jns 0x4003136	      2062	hcd.c	FUNCTION_38	IF_12	FOR_6	IF_17
0x4003173	      0xe9c8feffff	                           jmp 0x4003040	      2062	hcd.c	FUNCTION_38	IF_12	FOR_6	IF_17
0x4003178	            0x31f6	                            xor esi, esi	      2046	hcd.c	FUNCTION_38	IF_12	IF_14	CALL_10
0x400317a	          0x4889c7	                            mov rdi, rax	      2046	hcd.c	FUNCTION_38	IF_12	IF_14	CALL_10
0x400317d	      0xe800000000	                          call 0x4003182	      2046	hcd.c	FUNCTION_38	IF_12	IF_14	CALL_10
0x4003182	          0x4885c0	                           test rax, rax	      2047	hcd.c	FUNCTION_38	IF_12	IF_14	IF_15
0x4003185	          0x4989c5	                            mov r13, rax	      2046	hcd.c	FUNCTION_38	IF_12	IF_14	CALL_10
0x4003188	     0xf851affffff	                           jne 0x40030a8	      2047	hcd.c	FUNCTION_38	IF_12	IF_14	IF_15
0x400318e	        0x4c8b6d00	                    mov r13, qword [rbp]	      2048	hcd.c	FUNCTION_38	IF_12	IF_14	IF_15
0x4003192	      0xe911ffffff	                           jmp 0x40030a8	      2048	hcd.c	FUNCTION_38	IF_12	IF_14	IF_15
0x4003197	      0xb8eaffffff	                     mov eax, 0xffffffea	      2035	hcd.c	FUNCTION_38	IF_12	IF_13
0x400319c	      0xe981fdffff	                           jmp 0x4002f22	      2035	hcd.c	FUNCTION_38	IF_12	IF_13
interface_authorized_default_show	WHILE,0:SWITCH,0:CALL,4:IF,0:ELSE,0:functions,0:FOR,0:DO,0	10
0x40007d0	          0x4889d0	                            mov rax, rdx	       924	hcd.c	FUNCTION_12
0x40007d3	        0x488b57a8	             mov rdx, qword [rdi - 0x58]	       928	hcd.c	FUNCTION_12	CALL_4
0x40007d7	    0x48c7c6000000	                              mov rsi, 0	       928	hcd.c	FUNCTION_12	CALL_4
0x40007de	          0x4889c7	                            mov rdi, rax	       928	hcd.c	FUNCTION_12	CALL_4
0x40007e1	    0x488b92280100	           mov rdx, qword [rdx + 0x128] 	       928	hcd.c	FUNCTION_12	CALL_4
0x40007e8	        0x48c1ea07	                              shr rdx, 7	       928	hcd.c	FUNCTION_12	CALL_4
0x40007ec	          0x83e201	                              and edx, 1	       928	hcd.c	FUNCTION_12	CALL_4
0x40007ef	      0xe800000000	                          call 0x40007f4	       928	hcd.c	FUNCTION_12	CALL_4
0x40007f4	            0x4898	                                    cdqe	       928	hcd.c	FUNCTION_12	CALL_4
0x40007f6	              0xc3	                                     ret	       929	hcd.c	FUNCTION_12
usb_mon_register	WHILE,0:SWITCH,0:CALL,1:IF,1:ELSE,0:functions,0:FOR,0:DO,0	7
0x40004e0	    0x48833d000000	               cmp qword [0x040004e8], 0	      3065	hcd.c	FUNCTION_66	IF_1
0x40004e8	      0xb8f0ffffff	                     mov eax, 0xfffffff0	      3066	hcd.c	FUNCTION_66	IF_1
0x40004ed	            0x750c	                           jne 0x40004fb	      3065	hcd.c	FUNCTION_66	IF_1
0x40004ef	    0x48893d000000	            mov qword [0x040004f6], rdi 	      3068	hcd.c	FUNCTION_66
0x40004f6	           0xfaef0	                                  mfence	      3069	hcd.c	FUNCTION_66	CALL_1
0x40004f9	            0x31c0	                            xor eax, eax	      3070	hcd.c	FUNCTION_66
0x40004fb	            0xf3c3	                                     ret	      3071	hcd.c	FUNCTION_66
usb_hcd_reset_endpoint	WHILE,0:SWITCH,0:CALL,7:IF,2:ELSE,1:functions,0:FOR,0:DO,0	22
0x40031f0	        0x488b5740	            mov rdx, qword [rdi + 0x40] 	      2103	hcd.c	FUNCTION_40	CALL_1
0x40031f4	    0x488b82100100	           mov rax, qword [rdx + 0x110] 	      2105	hcd.c	FUNCTION_40	IF_1
0x40031fb	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2105	hcd.c	FUNCTION_40	IF_1
0x4003202	          0x4885c0	                           test rax, rax	      2105	hcd.c	FUNCTION_40	IF_1
0x4003205	            0x7408	                            je 0x400320f	      2105	hcd.c	FUNCTION_40	IF_1
0x4003207	          0x4889d7	                            mov rdi, rdx	      2106	hcd.c	FUNCTION_40	CALL_2
0x400320a	      0xe900000000	                           jmp 0x400320f	      2106	hcd.c	FUNCTION_40	CALL_2
0x400320f	         0xfb64e02	               movzx ecx, byte [rsi + 2]	      2106	hcd.c	FUNCTION_40	CALL_2
0x4003213	      0x440fb64603	               movzx r8d, byte [rsi + 3]	      2106	hcd.c	FUNCTION_40	CALL_2
0x4003218	      0xbafeffffff	                     mov edx, 0xfffffffe	      2112	hcd.c	FUNCTION_40	ELSE_1	CALL_6
0x400321d	        0x480fbef1	                           movsx rsi, cl	      2112	hcd.c	FUNCTION_40	ELSE_1	CALL_6
0x4003221	          0x83e10f	                            and ecx, 0xf	      2112	hcd.c	FUNCTION_40	ELSE_1	CALL_6
0x4003224	          0x4889f0	                            mov rax, rsi	      2112	hcd.c	FUNCTION_40	ELSE_1	CALL_6
0x4003227	            0xd3c2	                             rol edx, cl	      2112	hcd.c	FUNCTION_40	ELSE_1	CALL_6
0x4003229	          0x48f7d0	                                 not rax	      2112	hcd.c	FUNCTION_40	ELSE_1	CALL_6
0x400322c	        0x48c1e83f	                           shr rax, 0x3f	      2112	hcd.c	FUNCTION_40	ELSE_1	CALL_6
0x4003230	        0x2154872c	     and dword [rdi + rax*4 + 0x2c], edx	      2112	hcd.c	FUNCTION_40	ELSE_1	CALL_6
0x4003234	        0x4183e003	                              and r8d, 3	      2113	hcd.c	FUNCTION_40	ELSE_1	IF_2
0x4003238	            0x7508	                           jne 0x4003242	      2113	hcd.c	FUNCTION_40	ELSE_1	IF_2
0x400323a	        0x48c1ee3f	                           shr rsi, 0x3f	      2113	hcd.c	FUNCTION_40	ELSE_1	IF_2
0x400323e	        0x2154b72c	     and dword [rdi + rsi*4 + 0x2c], edx	      2114	hcd.c	FUNCTION_40	ELSE_1	CALL_7
0x4003242	            0xf3c3	                                     ret	      2114	hcd.c	FUNCTION_40	ELSE_1	CALL_7
usb_create_shared_hcd	WHILE,0:SWITCH,0:CALL,1:IF,0:ELSE,0:functions,0:FOR,0:DO,0	4
0x4002360	          0x4989c8	                             mov r8, rcx	      2597	hcd.c	FUNCTION_54
0x4002363	          0x4889d1	                            mov rcx, rdx	      2598	hcd.c	FUNCTION_54	CALL_1
0x4002366	          0x4889f2	                            mov rdx, rsi	      2598	hcd.c	FUNCTION_54	CALL_1
0x4002369	      0xe9c2fdffff	                jmp sym.__usb_create_hcd	      2598	hcd.c	FUNCTION_54	CALL_1
