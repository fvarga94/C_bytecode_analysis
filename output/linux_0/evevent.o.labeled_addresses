acpi_ev_install_xrupt_handlers	WHILE,0:functions,0:IF,3:DO,0:ELSE,0:CALL,11:SWITCH,0:FOR,0	29
0x40000e6	              0x55	                                push rbp	        81	evevent.c	FUNCTION_2
0x40000e7	              0x53	                                push rbx	        81	evevent.c	FUNCTION_2
0x40000e8	            0x31db	                            xor ebx, ebx	        89	evevent.c	FUNCTION_2	IF_1	CALL_2
0x40000ea	    0x803d00000000	                cmp byte [0x040000f1], 0	        88	evevent.c	FUNCTION_2	IF_1
0x40000f1	            0x754b	                           jne 0x400013e	        88	evevent.c	FUNCTION_2	IF_1
0x40000f3	      0xe800000000	                          call 0x40000f8	        94	evevent.c	FUNCTION_2	CALL_3
0x40000f8	            0x85c0	                           test eax, eax	        95	evevent.c	FUNCTION_2	IF_2	CALL_4
0x40000fa	            0x89c5	                            mov ebp, eax	        94	evevent.c	FUNCTION_2	CALL_3
0x40000fc	            0x7410	                            je 0x400010e	        95	evevent.c	FUNCTION_2	IF_2	CALL_4
0x40000fe	    0x48c7c1000000	                              mov rcx, 0	        96	evevent.c	FUNCTION_2	IF_2	CALL_5
0x4000105	            0x89c2	                            mov edx, eax	        96	evevent.c	FUNCTION_2	IF_2	CALL_5
0x4000107	      0xbe61000000	                           mov esi, 0x61	        96	evevent.c	FUNCTION_2	IF_2	CALL_5
0x400010c	            0xeb19	                           jmp 0x4000127	        96	evevent.c	FUNCTION_2	IF_2	CALL_5
0x400010e	      0xe800000000	                          call 0x4000113	       103	evevent.c	FUNCTION_2	CALL_7
0x4000113	            0x85c0	                           test eax, eax	       104	evevent.c	FUNCTION_2	IF_3	CALL_8
0x4000115	            0x89c5	                            mov ebp, eax	       103	evevent.c	FUNCTION_2	CALL_7
0x4000117	            0x741e	                            je 0x4000137	       104	evevent.c	FUNCTION_2	IF_3	CALL_8
0x4000119	    0x48c7c1000000	                              mov rcx, 0	       105	evevent.c	FUNCTION_2	IF_3	CALL_9
0x4000120	            0x89c2	                            mov edx, eax	       105	evevent.c	FUNCTION_2	IF_3	CALL_9
0x4000122	      0xbe6a000000	                           mov esi, 0x6a	       105	evevent.c	FUNCTION_2	IF_3	CALL_9
0x4000127	    0x48c7c7000000	                              mov rdi, 0	       105	evevent.c	FUNCTION_2	IF_3	CALL_9
0x400012e	            0x89eb	                            mov ebx, ebp	       107	evevent.c	FUNCTION_2	IF_3	CALL_10
0x4000130	      0xe800000000	                          call 0x4000135	       105	evevent.c	FUNCTION_2	IF_3	CALL_9
0x4000135	            0xeb07	                           jmp 0x400013e	       107	evevent.c	FUNCTION_2	IF_3	CALL_10
0x4000137	    0xc60500000000	                mov byte [0x0400013e], 1	       110	evevent.c	FUNCTION_2
0x400013e	            0x89d8	                            mov eax, ebx	       112	evevent.c	FUNCTION_2
0x4000140	              0x5b	                                 pop rbx	       112	evevent.c	FUNCTION_2
0x4000141	              0x5d	                                 pop rbp	       112	evevent.c	FUNCTION_2
0x4000142	              0xc3	                                     ret	       112	evevent.c	FUNCTION_2
acpi_ev_fixed_event_detect	WHILE,0:functions,0:IF,3:DO,0:ELSE,0:CALL,7:SWITCH,0:FOR,1	77
0x4000143	            0x4156	                                push r14	       168	evevent.c	FUNCTION_4
0x4000145	            0x4155	                                push r13	       168	evevent.c	FUNCTION_4
0x4000147	      0xbf01000000	                              mov edi, 1	       181	evevent.c	FUNCTION_4	CALL_2
0x400014c	            0x4154	                                push r12	       168	evevent.c	FUNCTION_4
0x400014e	              0x55	                                push rbp	       168	evevent.c	FUNCTION_4
0x400014f	          0x4531ed	                          xor r13d, r13d	       185	evevent.c	FUNCTION_4	IF_1
0x4000152	              0x53	                                push rbx	       168	evevent.c	FUNCTION_4
0x4000153	        0x4883ec10	                           sub rsp, 0x10	       168	evevent.c	FUNCTION_4
0x4000157	          0x4889e6	                            mov rsi, rsp	       181	evevent.c	FUNCTION_4	CALL_2
0x400015a	    0x65488b042528	                mov rax, qword gs:[0x28]	       168	evevent.c	FUNCTION_4
0x4000163	      0x4889442408	                mov qword [rsp + 8], rax	       168	evevent.c	FUNCTION_4
0x4000168	            0x31c0	                            xor eax, eax	       168	evevent.c	FUNCTION_4
0x400016a	      0xe800000000	                          call 0x400016f	       181	evevent.c	FUNCTION_4	CALL_2
0x400016f	      0x488d742404	                      lea rsi, [rsp + 4]	       183	evevent.c	FUNCTION_4	CALL_3
0x4000174	            0x89c3	                            mov ebx, eax	       181	evevent.c	FUNCTION_4	CALL_2
0x4000176	      0xbf02000000	                              mov edi, 2	       183	evevent.c	FUNCTION_4	CALL_3
0x400017b	      0xe800000000	                          call 0x4000180	       183	evevent.c	FUNCTION_4	CALL_3
0x4000180	             0x9c3	                             or ebx, eax	       184	evevent.c	FUNCTION_4	IF_1	CALL_4
0x4000182	     0xf85c4000000	                           jne 0x400024c	       184	evevent.c	FUNCTION_4	IF_1	CALL_4
0x4000188	    0x48c7c5000000	                              mov rbp, 0	       184	evevent.c	FUNCTION_4	IF_1	CALL_4
0x400018f	    0x49c7c4000000	                              mov r12, 0	       184	evevent.c	FUNCTION_4	IF_1	CALL_4
0x4000196	            0x31db	                            xor ebx, ebx	       184	evevent.c	FUNCTION_4	IF_1	CALL_4
0x4000198	         0xfb74502	               movzx eax, word [rbp + 2]	       199	evevent.c	FUNCTION_4	FOR_1	IF_2
0x400019c	          0x4189de	                           mov r14d, ebx	       199	evevent.c	FUNCTION_4	FOR_1	IF_2
0x400019f	          0x850424	                   test dword [rsp], eax	       199	evevent.c	FUNCTION_4	FOR_1	IF_2
0x40001a2	     0xf848f000000	                            je 0x4000237	       199	evevent.c	FUNCTION_4	FOR_1	IF_2
0x40001a8	         0xfb74504	               movzx eax, word [rbp + 4]	       201	evevent.c	FUNCTION_4	FOR_1	IF_2
0x40001ac	        0x85442404	               test dword [rsp + 4], eax	       201	evevent.c	FUNCTION_4	FOR_1	IF_2
0x40001b0	     0xf8481000000	                            je 0x4000237	       201	evevent.c	FUNCTION_4	FOR_1	IF_2
0x40001b6	    0x488b05000000	            mov rax, qword [0x040001bd] 	       208	evevent.c	FUNCTION_4	FOR_1	IF_2	IF_3
0x40001bd	    0xff049d000000	                       inc dword [rbx*4]	       207	evevent.c	FUNCTION_4	FOR_1	IF_2
0x40001c4	          0x4885c0	                           test rax, rax	       208	evevent.c	FUNCTION_4	FOR_1	IF_2	IF_3
0x40001c7	            0x7415	                            je 0x40001de	       208	evevent.c	FUNCTION_4	FOR_1	IF_2	IF_3
0x40001c9	    0x488b0d000000	            mov rcx, qword [0x040001d0] 	       209	evevent.c	FUNCTION_4	FOR_1	IF_2	IF_3	CALL_6
0x40001d0	            0x89da	                            mov edx, ebx	       209	evevent.c	FUNCTION_4	FOR_1	IF_2	IF_3	CALL_6
0x40001d2	            0x31f6	                            xor esi, esi	       209	evevent.c	FUNCTION_4	FOR_1	IF_2	IF_3	CALL_6
0x40001d4	      0xbf01000000	                              mov edi, 1	       209	evevent.c	FUNCTION_4	FOR_1	IF_2	IF_3	CALL_6
0x40001d9	      0xe800000000	                          call 0x40001de	       209	evevent.c	FUNCTION_4	FOR_1	IF_2	IF_3	CALL_6
0x40001de	         0xfb67d00	                   movzx edi, byte [rbp]	       243	evevent.c	FUNCTION_5	CALL_2
0x40001e2	      0xbe01000000	                              mov esi, 1	       243	evevent.c	FUNCTION_5	CALL_2
0x40001e7	      0xe800000000	                          call 0x40001ec	       243	evevent.c	FUNCTION_5	CALL_2
0x40001ec	        0x498b0424	                    mov rax, qword [r12]	       250	evevent.c	FUNCTION_5	IF_1
0x40001f0	          0x4885c0	                           test rax, rax	       250	evevent.c	FUNCTION_5	IF_1
0x40001f3	            0x7535	                           jne 0x400022a	       250	evevent.c	FUNCTION_5	IF_1
0x40001f5	         0xfb67d01	               movzx edi, byte [rbp + 1]	       251	evevent.c	FUNCTION_5	IF_1	CALL_3
0x40001f9	            0x31f6	                            xor esi, esi	       251	evevent.c	FUNCTION_5	IF_1	CALL_3
0x40001fb	      0xe800000000	                          call 0x4000200	       251	evevent.c	FUNCTION_5	IF_1	CALL_3
0x4000200	          0x4489f7	                           mov edi, r14d	       255	evevent.c	FUNCTION_5	IF_1	CALL_4
0x4000203	      0xe800000000	                          call 0x4000208	       255	evevent.c	FUNCTION_5	IF_1	CALL_4
0x4000208	          0x4589f0	                           mov r8d, r14d	       255	evevent.c	FUNCTION_5	IF_1	CALL_4
0x400020b	          0x4889c1	                            mov rcx, rax	       255	evevent.c	FUNCTION_5	IF_1	CALL_4
0x400020e	    0x48c7c2000000	                              mov rdx, 0	       255	evevent.c	FUNCTION_5	IF_1	CALL_4
0x4000215	      0xbe01010000	                          mov esi, 0x101	       255	evevent.c	FUNCTION_5	IF_1	CALL_4
0x400021a	    0x48c7c7000000	                              mov rdi, 0	       255	evevent.c	FUNCTION_5	IF_1	CALL_4
0x4000221	      0xe800000000	                          call 0x4000226	       255	evevent.c	FUNCTION_5	IF_1	CALL_4
0x4000226	            0x31c0	                            xor eax, eax	       259	evevent.c	FUNCTION_5	IF_1
0x4000228	            0xeb0a	                           jmp 0x4000234	       259	evevent.c	FUNCTION_5	IF_1
0x400022a	      0x498b7c2408	                mov rdi, qword [r12 + 8]	       264	evevent.c	FUNCTION_5
0x400022f	      0xe800000000	                          call 0x4000234	       264	evevent.c	FUNCTION_5
0x4000234	          0x4109c5	                            or r13d, eax	       214	evevent.c	FUNCTION_4	FOR_1	IF_2	CALL_7
0x4000237	          0x48ffc3	                                 inc rbx	       214	evevent.c	FUNCTION_4	FOR_1	IF_2	CALL_7
0x400023a	        0x4883c506	                              add rbp, 6	       214	evevent.c	FUNCTION_4	FOR_1	IF_2	CALL_7
0x400023e	        0x4983c410	                           add r12, 0x10	       214	evevent.c	FUNCTION_4	FOR_1	IF_2	CALL_7
0x4000242	        0x4883fb05	                              cmp rbx, 5	       195	evevent.c	FUNCTION_4	FOR_1
0x4000246	     0xf854cffffff	                           jne 0x4000198	       195	evevent.c	FUNCTION_4	FOR_1
0x400024c	      0x488b542408	                mov rdx, qword [rsp + 8]	       219	evevent.c	FUNCTION_4
0x4000251	    0x654833142528	                xor rdx, qword gs:[0x28]	       219	evevent.c	FUNCTION_4
0x400025a	          0x4489e8	                           mov eax, r13d	       219	evevent.c	FUNCTION_4
0x400025d	            0x7405	                            je 0x4000264	       219	evevent.c	FUNCTION_4
0x400025f	      0xe800000000	                          call 0x4000264	       219	evevent.c	FUNCTION_4
0x4000264	        0x4883c410	                           add rsp, 0x10	       219	evevent.c	FUNCTION_4
0x4000268	              0x5b	                                 pop rbx	       219	evevent.c	FUNCTION_4
0x4000269	              0x5d	                                 pop rbp	       219	evevent.c	FUNCTION_4
0x400026a	            0x415c	                                 pop r12	       219	evevent.c	FUNCTION_4
0x400026c	            0x415d	                                 pop r13	       219	evevent.c	FUNCTION_4
0x400026e	            0x415e	                                 pop r14	       219	evevent.c	FUNCTION_4
0x4000270	              0xc3	                                     ret	       219	evevent.c	FUNCTION_4
acpi_ev_initialize_events	WHILE,0:functions,0:IF,3:DO,0:ELSE,0:CALL,11:SWITCH,0:FOR,0	46
0x4000040	            0x31c0	                            xor eax, eax	        43	evevent.c	FUNCTION_1	IF_1	CALL_2
0x4000042	    0x803d00000000	                cmp byte [0x04000049], 0	        42	evevent.c	FUNCTION_1	IF_1
0x4000049	     0xf8596000000	                           jne 0x40000e5	        42	evevent.c	FUNCTION_1	IF_1
0x400004f	            0x4154	                                push r12	        35	evevent.c	FUNCTION_1
0x4000051	              0x55	                                push rbp	        35	evevent.c	FUNCTION_1
0x4000052	    0x48c7c5000000	                              mov rbp, 0	        35	evevent.c	FUNCTION_1
0x4000059	              0x53	                                push rbx	        35	evevent.c	FUNCTION_1
0x400005a	            0x31db	                            xor ebx, ebx	        42	evevent.c	FUNCTION_1	IF_1
0x400005c	     0xfb6bb000000	                   movzx edi, byte [rbx]	       141	evevent.c	FUNCTION_3	FOR_1	IF_1
0x4000063	    0x48c745000000	                      mov qword [rbp], 0	       136	evevent.c	FUNCTION_3	FOR_1
0x400006b	    0x48c745080000	                  mov qword [rbp + 8], 0	       137	evevent.c	FUNCTION_3	FOR_1
0x4000073	        0x4080ffff	                           cmp dil, 0xff	       141	evevent.c	FUNCTION_3	FOR_1	IF_1
0x4000077	            0x7510	                           jne 0x4000089	       141	evevent.c	FUNCTION_3	FOR_1	IF_1
0x4000079	        0x4883c306	                              add rbx, 6	       141	evevent.c	FUNCTION_3	FOR_1	IF_1
0x400007d	        0x4883c510	                           add rbp, 0x10	       141	evevent.c	FUNCTION_3	FOR_1	IF_1
0x4000081	        0x4883fb1e	                           cmp rbx, 0x1e	       135	evevent.c	FUNCTION_3	FOR_1
0x4000085	            0x75d5	                           jne 0x400005c	       135	evevent.c	FUNCTION_3	FOR_1
0x4000087	            0xeb2d	                           jmp 0x40000b6	       135	evevent.c	FUNCTION_3	FOR_1
0x4000089	            0x31f6	                            xor esi, esi	       142	evevent.c	FUNCTION_3	FOR_1	IF_1
0x400008b	      0xe800000000	                          call 0x4000090	       142	evevent.c	FUNCTION_3	FOR_1	IF_1
0x4000090	            0x85c0	                           test eax, eax	       146	evevent.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x4000092	          0x4189c4	                           mov r12d, eax	       142	evevent.c	FUNCTION_3	FOR_1	IF_1
0x4000095	            0x74e2	                            je 0x4000079	       146	evevent.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_2
0x4000097	            0x89c2	                            mov edx, eax	        53	evevent.c	FUNCTION_1	IF_2	CALL_5
0x4000099	    0x48c7c1000000	                              mov rcx, 0	        53	evevent.c	FUNCTION_1	IF_2	CALL_5
0x40000a0	      0xbe36000000	                           mov esi, 0x36	        53	evevent.c	FUNCTION_1	IF_2	CALL_5
0x40000a5	    0x48c7c7000000	                              mov rdi, 0	        53	evevent.c	FUNCTION_1	IF_2	CALL_5
0x40000ac	      0xe800000000	                          call 0x40000b1	        53	evevent.c	FUNCTION_1	IF_2	CALL_5
0x40000b1	          0x4489e0	                           mov eax, r12d	       142	evevent.c	FUNCTION_3	FOR_1	IF_1
0x40000b4	            0xeb2b	                           jmp 0x40000e1	        55	evevent.c	FUNCTION_1	IF_2	CALL_6
0x40000b6	      0xe800000000	                          call 0x40000bb	        58	evevent.c	FUNCTION_1	CALL_7
0x40000bb	            0x85c0	                           test eax, eax	        59	evevent.c	FUNCTION_1	IF_3	CALL_8
0x40000bd	            0x89c3	                            mov ebx, eax	        58	evevent.c	FUNCTION_1	CALL_7
0x40000bf	            0x741e	                            je 0x40000df	        59	evevent.c	FUNCTION_1	IF_3	CALL_8
0x40000c1	    0x48c7c1000000	                              mov rcx, 0	        60	evevent.c	FUNCTION_1	IF_3	CALL_9
0x40000c8	            0x89da	                            mov edx, ebx	        60	evevent.c	FUNCTION_1	IF_3	CALL_9
0x40000ca	      0xbe3d000000	                           mov esi, 0x3d	        60	evevent.c	FUNCTION_1	IF_3	CALL_9
0x40000cf	    0x48c7c7000000	                              mov rdi, 0	        60	evevent.c	FUNCTION_1	IF_3	CALL_9
0x40000d6	      0xe800000000	                          call 0x40000db	        60	evevent.c	FUNCTION_1	IF_3	CALL_9
0x40000db	            0x89d8	                            mov eax, ebx	        62	evevent.c	FUNCTION_1	IF_3	CALL_10
0x40000dd	            0xeb02	                           jmp 0x40000e1	        62	evevent.c	FUNCTION_1	IF_3	CALL_10
0x40000df	            0x31c0	                            xor eax, eax	        62	evevent.c	FUNCTION_1	IF_3	CALL_10
0x40000e1	              0x5b	                                 pop rbx	        66	evevent.c	FUNCTION_1
0x40000e2	              0x5d	                                 pop rbp	        66	evevent.c	FUNCTION_1
0x40000e3	            0x415c	                                 pop r12	        66	evevent.c	FUNCTION_1
0x40000e5	              0xc3	                                     ret	        66	evevent.c	FUNCTION_1
