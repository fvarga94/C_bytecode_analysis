gen8_init_indirectctx_bb	DO,0:IF,1:FOR,0:ELSE,0:SWITCH,0:functions,0:CALL,4:WHILE,1	45
0x4000c10	    0xc70600000004	mov dword [rsi], loc.imp.intel_ring_reset 	      1351	intel_lrc.c	FUNCTION_35
0x4000c16	          0x488b07	                    mov rax, qword [rdi]	      1354	intel_lrc.c	FUNCTION_35	IF_1	CALL_1
0x4000c19	        0x488d5604	                      lea rdx, [rsi + 4]	      1351	intel_lrc.c	FUNCTION_35
0x4000c1d	    0xf68066060000	          test byte [rax + 0x666], 0x10 	      1354	intel_lrc.c	FUNCTION_35	IF_1	CALL_1
0x4000c24	            0x754e	                           jne 0x4000c74	      1354	intel_lrc.c	FUNCTION_35	IF_1	CALL_1
0x4000c26	    0x488b87980100	           mov rax, qword [rdi + 0x198] 	      1354	intel_lrc.c	FUNCTION_35	IF_1	CALL_1
0x4000c2d	        0x488b4008	                mov rax, qword [rax + 8]	      1359	intel_lrc.c	FUNCTION_35	CALL_3
0x4000c31	    0x48c742080000	                  mov qword [rdx + 8], 0	       965	intel_ringbuffer.h	FUNCTION_100	CALL_1
0x4000c39	    0x48c742100000	               mov qword [rdx + 0x10], 0	       965	intel_ringbuffer.h	FUNCTION_100	CALL_1
0x4000c41	    0xc7020400007a	            mov dword [rdx], 0x7a000004 	       967	intel_ringbuffer.h	FUNCTION_100	CALL_2
0x4000c47	    0xc74204004010	         mov dword [rdx + 4], 0x9104000 	       968	intel_ringbuffer.h	FUNCTION_100
0x4000c4e	    0xc74218010000	      mov dword [rdx + 0x18], 0x4000001 	      1367	intel_lrc.c	FUNCTION_35
0x4000c55	          0x83e880	             sub eax, 0xffffffffffffff80	      1359	intel_lrc.c	FUNCTION_35	CALL_3
0x4000c58	          0x894208	                mov dword [rdx + 8], eax	       969	intel_ringbuffer.h	FUNCTION_100
0x4000c5b	        0x488d421c	                   lea rax, [rdx + 0x1c]	      1367	intel_lrc.c	FUNCTION_35
0x4000c5f	            0xa83f	                           test al, 0x3f	      1370	intel_lrc.c	FUNCTION_35	WHILE_1
0x4000c61	            0x740f	                            je 0x4000c72	      1370	intel_lrc.c	FUNCTION_35	WHILE_1
0x4000c63	        0x4883c004	                              add rax, 4	      1371	intel_lrc.c	FUNCTION_35	WHILE_1
0x4000c67	    0xc740fc000000	                  mov dword [rax - 4], 0	      1371	intel_lrc.c	FUNCTION_35	WHILE_1
0x4000c6e	            0xa83f	                           test al, 0x3f	      1370	intel_lrc.c	FUNCTION_35	WHILE_1
0x4000c70	            0x75f1	                           jne 0x4000c63	      1370	intel_lrc.c	FUNCTION_35	WHILE_1
0x4000c72	            0xf3c3	                                     ret	      1380	intel_lrc.c	FUNCTION_35
0x4000c74	    0xc74604020040	        mov dword [rsi + 4], 0x12400002 	      1311	intel_lrc.c	FUNCTION_34
0x4000c7b	    0xc7460818b100	            mov dword [rsi + 8], 0xb118 	      1312	intel_lrc.c	FUNCTION_34	CALL_1
0x4000c82	        0x488d5648	                   lea rdx, [rsi + 0x48]	      1328	intel_lrc.c	FUNCTION_34
0x4000c86	    0x488b87980100	           mov rax, qword [rdi + 0x198] 	      1328	intel_lrc.c	FUNCTION_34
0x4000c8d	        0x488b4008	                mov rax, qword [rax + 8]	      1313	intel_lrc.c	FUNCTION_34	CALL_2
0x4000c91	    0xc74610000000	               mov dword [rsi + 0x10], 0	      1314	intel_lrc.c	FUNCTION_34
0x4000c98	    0xc74614010000	     mov dword [rsi + 0x14], 0x11000001 	      1316	intel_lrc.c	FUNCTION_34	CALL_3
0x4000c9f	    0xc7461818b100	         mov dword [rsi + 0x18], 0xb118 	      1317	intel_lrc.c	FUNCTION_34	CALL_4
0x4000ca6	    0xc7461c000060	     mov dword [rsi + 0x1c], 0x40600000 	      1318	intel_lrc.c	FUNCTION_34
0x4000cad	    0x48c746280000	               mov qword [rsi + 0x28], 0	       965	intel_ringbuffer.h	FUNCTION_100	CALL_1
0x4000cb5	       0x500010000	                          add eax, 0x100	      1313	intel_lrc.c	FUNCTION_34	CALL_2
0x4000cba	    0x48c746300000	               mov qword [rsi + 0x30], 0	       965	intel_ringbuffer.h	FUNCTION_100	CALL_1
0x4000cc2	    0xc74620040000	     mov dword [rsi + 0x20], 0x7a000004 	       967	intel_ringbuffer.h	FUNCTION_100	CALL_2
0x4000cc9	          0x89460c	              mov dword [rsi + 0xc], eax	      1313	intel_lrc.c	FUNCTION_34	CALL_2
0x4000ccc	    0xc74624200010	       mov dword [rsi + 0x24], 0x100020 	       968	intel_ringbuffer.h	FUNCTION_100
0x4000cd3	    0xc746380200c0	     mov dword [rsi + 0x38], 0x14c00002 	      1325	intel_lrc.c	FUNCTION_34
0x4000cda	    0xc7463c18b100	         mov dword [rsi + 0x3c], 0xb118 	      1326	intel_lrc.c	FUNCTION_34	CALL_6
0x4000ce1	    0x488b87980100	           mov rax, qword [rdi + 0x198] 	      1326	intel_lrc.c	FUNCTION_34	CALL_6
0x4000ce8	        0x488b4008	                mov rax, qword [rax + 8]	      1327	intel_lrc.c	FUNCTION_34	CALL_7
0x4000cec	    0xc74644000000	               mov dword [rsi + 0x44], 0	      1328	intel_lrc.c	FUNCTION_34
0x4000cf3	       0x500010000	                          add eax, 0x100	      1327	intel_lrc.c	FUNCTION_34	CALL_7
0x4000cf8	          0x894640	             mov dword [rsi + 0x40], eax	      1327	intel_lrc.c	FUNCTION_34	CALL_7
0x4000cfb	      0xe926ffffff	                           jmp 0x4000c26	      1327	intel_lrc.c	FUNCTION_34	CALL_7
logical_ring_setup	DO,0:IF,0:FOR,0:ELSE,0:SWITCH,0:functions,0:CALL,10:WHILE,0	56
0x4000600	            0x4154	                                push r12	      2129	intel_lrc.c	FUNCTION_61
0x4000602	              0x55	                                push rbp	      2129	intel_lrc.c	FUNCTION_61
0x4000603	              0x53	                                push rbx	      2129	intel_lrc.c	FUNCTION_61
0x4000604	          0x4889fb	                            mov rbx, rdi	      2129	intel_lrc.c	FUNCTION_61
0x4000607	          0x4c8b27	                    mov r12, qword [rdi]	      2130	intel_lrc.c	FUNCTION_61
0x400060a	      0xe800000000	                          call 0x400060f	      2133	intel_lrc.c	FUNCTION_61	CALL_1
0x400060f	          0x8b4324	            mov eax, dword [rbx + 0x24] 	      2139	intel_lrc.c	FUNCTION_61	CALL_3
0x4000612	      0xba02000000	                              mov edx, 2	      2138	intel_lrc.c	FUNCTION_61	CALL_2
0x4000617	          0x4c89e7	                            mov rdi, r12	      2138	intel_lrc.c	FUNCTION_61	CALL_2
0x400061a	    0x48c743300000	               mov qword [rbx + 0x30], 0	      2136	intel_lrc.c	FUNCTION_61
0x4000622	    0x8db030020000	                  lea esi, [rax + 0x230]	      2139	intel_lrc.c	FUNCTION_61	CALL_3
0x4000628	      0xe800000000	                          call 0x400062d	      2138	intel_lrc.c	FUNCTION_61	CALL_2
0x400062d	            0x89c5	                            mov ebp, eax	      2138	intel_lrc.c	FUNCTION_61	CALL_2
0x400062f	          0x8b4324	            mov eax, dword [rbx + 0x24] 	      2143	intel_lrc.c	FUNCTION_61	CALL_5
0x4000632	      0xba03000000	                              mov edx, 3	      2142	intel_lrc.c	FUNCTION_61	CALL_4
0x4000637	          0x4c89e7	                            mov rdi, r12	      2142	intel_lrc.c	FUNCTION_61	CALL_4
0x400063a	    0x8db0a0030000	                  lea esi, [rax + 0x3a0]	      2143	intel_lrc.c	FUNCTION_61	CALL_5
0x4000640	      0xe800000000	                          call 0x4000645	      2142	intel_lrc.c	FUNCTION_61	CALL_4
0x4000645	             0x9c5	                             or ebp, eax	      2142	intel_lrc.c	FUNCTION_61	CALL_4
0x4000647	          0x8b4324	            mov eax, dword [rbx + 0x24] 	      2147	intel_lrc.c	FUNCTION_61	CALL_7
0x400064a	      0xba01000000	                              mov edx, 1	      2146	intel_lrc.c	FUNCTION_61	CALL_6
0x400064f	          0x4c89e7	                            mov rdi, r12	      2146	intel_lrc.c	FUNCTION_61	CALL_6
0x4000652	    0x8db070030000	                  lea esi, [rax + 0x370]	      2147	intel_lrc.c	FUNCTION_61	CALL_7
0x4000658	      0xe800000000	                          call 0x400065d	      2146	intel_lrc.c	FUNCTION_61	CALL_6
0x400065d	    0x488dbb780200	                  lea rdi, [rbx + 0x278]	      2152	intel_lrc.c	FUNCTION_61	CALL_8
0x4000664	             0x9e8	                             or eax, ebp	      2150	intel_lrc.c	FUNCTION_61
0x4000666	          0x4889da	                            mov rdx, rbx	      2152	intel_lrc.c	FUNCTION_61	CALL_8
0x4000669	    0x898318030000	            mov dword [rbx + 0x318], eax	      2150	intel_lrc.c	FUNCTION_61
0x400066f	    0x48c7c6000000	                              mov rsi, 0	      2152	intel_lrc.c	FUNCTION_61	CALL_8
0x4000676	      0xe800000000	                          call 0x400067b	      2152	intel_lrc.c	FUNCTION_61	CALL_8
0x400067b	          0x488b03	                    mov rax, qword [rbx]	      2105	intel_lrc.c	FUNCTION_59	IF_1	CALL_1
0x400067e	    0x48c783b80100	              mov qword [rbx + 0x1b8], 0	      2091	intel_lrc.c	FUNCTION_59
0x4000689	    0x48c783c00100	              mov qword [rbx + 0x1c0], 0	      2092	intel_lrc.c	FUNCTION_59
0x4000694	    0x48c783e00100	              mov qword [rbx + 0x1e0], 0	      2094	intel_lrc.c	FUNCTION_59
0x400069f	    0x48c783e80100	              mov qword [rbx + 0x1e8], 0	      2095	intel_lrc.c	FUNCTION_59
0x40006aa	    0x48c783f00100	              mov qword [rbx + 0x1f0], 0	      2097	intel_lrc.c	FUNCTION_59
0x40006b5	    0x48c783000200	              mov qword [rbx + 0x200], 0	      2099	intel_lrc.c	FUNCTION_59
0x40006c0	    0x48c783100200	              mov qword [rbx + 0x210], 0	      2100	intel_lrc.c	FUNCTION_59
0x40006cb	    0xc78318020000	              mov dword [rbx + 0x218], 8	      2101	intel_lrc.c	FUNCTION_59
0x40006d5	    0x48c783d80100	              mov qword [rbx + 0x1d8], 0	      2103	intel_lrc.c	FUNCTION_59
0x40006e0	    0x80b85c060000	            cmp byte [rax + 0x65c], 0xa 	      2105	intel_lrc.c	FUNCTION_59	IF_1	CALL_1
0x40006e7	            0x7716	                            ja 0x40006ff	      2105	intel_lrc.c	FUNCTION_59	IF_1	CALL_1
0x40006e9	    0x48c783a80100	              mov qword [rbx + 0x1a8], 0	      2106	intel_lrc.c	FUNCTION_59	IF_1
0x40006f4	    0x48c783b00100	              mov qword [rbx + 0x1b0], 0	      2107	intel_lrc.c	FUNCTION_59	IF_1
0x40006ff	          0x8b4b28	            mov ecx, dword [rbx + 0x28] 	      2122	intel_lrc.c	FUNCTION_60
0x4000702	      0xb801000000	                              mov eax, 1	      2123	intel_lrc.c	FUNCTION_60
0x4000707	    0x48c783080200	              mov qword [rbx + 0x208], 0	      2116	intel_lrc.c	FUNCTION_59
0x4000712	            0xd3e0	                             shl eax, cl	      2123	intel_lrc.c	FUNCTION_60
0x4000714	    0x8983a4010000	            mov dword [rbx + 0x1a4], eax	      2123	intel_lrc.c	FUNCTION_60
0x400071a	      0xb800010000	                          mov eax, 0x100	      2124	intel_lrc.c	FUNCTION_60
0x400071f	            0xd3e0	                             shl eax, cl	      2124	intel_lrc.c	FUNCTION_60
0x4000721	    0x8983a0010000	            mov dword [rbx + 0x1a0], eax	      2124	intel_lrc.c	FUNCTION_60
0x4000727	              0x5b	                                 pop rbx	      2157	intel_lrc.c	FUNCTION_61
0x4000728	              0x5d	                                 pop rbp	      2157	intel_lrc.c	FUNCTION_61
0x4000729	            0x415c	                                 pop r12	      2157	intel_lrc.c	FUNCTION_61
0x400072b	              0xc3	                                     ret	      2157	intel_lrc.c	FUNCTION_61
gen8_logical_ring_disable_irq	DO,0:IF,0:FOR,0:ELSE,0:SWITCH,0:functions,0:CALL,1:WHILE,0	10
0x4000090	          0x4889f8	                            mov rax, rdi	      1863	intel_lrc.c	FUNCTION_50
0x4000093	          0x488b3f	                    mov rdi, qword [rdi]	      1864	intel_lrc.c	FUNCTION_50
0x4000096	      0xb901000000	                              mov ecx, 1	      1865	intel_lrc.c	FUNCTION_50	CALL_1
0x400009b	    0x8b90a0010000	           mov edx, dword [rax + 0x1a0] 	      1865	intel_lrc.c	FUNCTION_50	CALL_1
0x40000a1	          0x8b7024	            mov esi, dword [rax + 0x24] 	      1865	intel_lrc.c	FUNCTION_50	CALL_1
0x40000a4	    0x4c8b87180800	            mov r8, qword [rdi + 0x818] 	      1865	intel_lrc.c	FUNCTION_50	CALL_1
0x40000ab	            0xf7d2	                                 not edx	      1865	intel_lrc.c	FUNCTION_50	CALL_1
0x40000ad	    0x81c6a8000000	                           add esi, 0xa8	      1865	intel_lrc.c	FUNCTION_50	CALL_1
0x40000b3	      0xe800000000	                          call 0x40000b8	      1865	intel_lrc.c	FUNCTION_50	CALL_1
0x40000b8	            0xf3c3	                                     ret	      1865	intel_lrc.c	FUNCTION_50	CALL_1
gen8_emit_bb_start	DO,0:IF,3:FOR,0:ELSE,0:SWITCH,0:functions,0:CALL,12:WHILE,0	91
0x4000440	            0x4156	                                push r14	      1799	intel_lrc.c	FUNCTION_48
0x4000442	            0x4155	                                push r13	      1799	intel_lrc.c	FUNCTION_48
0x4000444	            0x4154	                                push r12	      1799	intel_lrc.c	FUNCTION_48
0x4000446	              0x55	                                push rbp	      1799	intel_lrc.c	FUNCTION_48
0x4000447	          0x4989fc	                            mov r12, rdi	      1799	intel_lrc.c	FUNCTION_48
0x400044a	              0x53	                                push rbx	      1799	intel_lrc.c	FUNCTION_48
0x400044b	        0x488b4770	            mov rax, qword [rdi + 0x70] 	      1809	intel_lrc.c	FUNCTION_48	IF_1
0x400044f	          0x4889f5	                            mov rbp, rsi	      1799	intel_lrc.c	FUNCTION_48
0x4000452	            0x89cb	                            mov ebx, ecx	      1799	intel_lrc.c	FUNCTION_48
0x4000454	        0x4c8b6810	            mov r13, qword [rax + 0x10] 	      1809	intel_lrc.c	FUNCTION_48	IF_1
0x4000458	          0x4d85ed	                           test r13, r13	      1809	intel_lrc.c	FUNCTION_48	IF_1
0x400045b	            0x7419	                            je 0x4000476	      1809	intel_lrc.c	FUNCTION_48	IF_1
0x400045d	        0x4c8b7778	            mov r14, qword [rdi + 0x78] 	      1810	intel_lrc.c	FUNCTION_48	IF_1	CALL_1
0x4000461	      0xb801000000	                              mov eax, 1	      1809	intel_lrc.c	FUNCTION_48	IF_1
0x4000466	        0x418b4e10	            mov ecx, dword [r14 + 0x10] 	      1809	intel_lrc.c	FUNCTION_48	IF_1
0x400046a	          0x48d3e0	                             shl rax, cl	      1809	intel_lrc.c	FUNCTION_48	IF_1
0x400046d	    0x418585e00600	          test dword [r13 + 0x6e0], eax 	      1809	intel_lrc.c	FUNCTION_48	IF_1
0x4000474	            0x7556	                           jne 0x40004cc	      1809	intel_lrc.c	FUNCTION_48	IF_1
0x4000476	      0xbe04000000	                              mov esi, 4	      1820	intel_lrc.c	FUNCTION_48	CALL_6
0x400047b	          0x4c89e7	                            mov rdi, r12	      1820	intel_lrc.c	FUNCTION_48	CALL_6
0x400047e	      0xe800000000	                          call 0x4000483	      1820	intel_lrc.c	FUNCTION_48	CALL_6
0x4000483	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	      1821	intel_lrc.c	FUNCTION_48	IF_3	CALL_7
0x4000489	            0x7738	                            ja 0x40004c3	      1821	intel_lrc.c	FUNCTION_48	IF_3	CALL_7
0x400048b	            0x89da	                            mov edx, ebx	      1844	intel_lrc.c	FUNCTION_48
0x400048d	      0xb900040000	                          mov ecx, 0x400	      1844	intel_lrc.c	FUNCTION_48
0x4000492	          0x896808	                mov dword [rax + 8], ebp	      1847	intel_lrc.c	FUNCTION_48	CALL_10
0x4000495	          0x83e201	                              and edx, 1	      1844	intel_lrc.c	FUNCTION_48
0x4000498	    0xc70001000004	              mov dword [rax], 0x4000001	      1841	intel_lrc.c	FUNCTION_48
0x400049e	          0x83fa01	                              cmp edx, 1	      1844	intel_lrc.c	FUNCTION_48
0x40004a1	            0x19d2	                            sbb edx, edx	      1844	intel_lrc.c	FUNCTION_48
0x40004a3	    0x81e200010000	                          and edx, 0x100	      1844	intel_lrc.c	FUNCTION_48
0x40004a9	    0x81c201008018	                     add edx, 0x18800001	      1844	intel_lrc.c	FUNCTION_48
0x40004af	          0x83e304	                              and ebx, 4	      1844	intel_lrc.c	FUNCTION_48
0x40004b2	           0xf45d9	                         cmovne ebx, ecx	      1844	intel_lrc.c	FUNCTION_48
0x40004b5	        0x48c1ed20	                           shr rbp, 0x20	      1848	intel_lrc.c	FUNCTION_48	CALL_11
0x40004b9	             0x9d3	                             or ebx, edx	      1844	intel_lrc.c	FUNCTION_48
0x40004bb	          0x89680c	              mov dword [rax + 0xc], ebp	      1848	intel_lrc.c	FUNCTION_48	CALL_11
0x40004be	          0x895804	                mov dword [rax + 4], ebx	      1844	intel_lrc.c	FUNCTION_48
0x40004c1	            0x31c0	                            xor eax, eax	      1851	intel_lrc.c	FUNCTION_48
0x40004c3	              0x5b	                                 pop rbx	      1852	intel_lrc.c	FUNCTION_48
0x40004c4	              0x5d	                                 pop rbp	      1852	intel_lrc.c	FUNCTION_48
0x40004c5	            0x415c	                                 pop r12	      1852	intel_lrc.c	FUNCTION_48
0x40004c7	            0x415d	                                 pop r13	      1852	intel_lrc.c	FUNCTION_48
0x40004c9	            0x415e	                                 pop r14	      1852	intel_lrc.c	FUNCTION_48
0x40004cb	              0xc3	                                     ret	      1852	intel_lrc.c	FUNCTION_48
0x40004cc	    0x498b85e80400	           mov rax, qword [r13 + 0x4e8] 	      1810	intel_lrc.c	FUNCTION_48	IF_1	CALL_1
0x40004d3	        0x4883e801	                              sub rax, 1	      1810	intel_lrc.c	FUNCTION_48	IF_1	CALL_1
0x40004d7	        0x48c1e820	                           shr rax, 0x20	      1810	intel_lrc.c	FUNCTION_48	IF_1	CALL_1
0x40004db	          0x4885c0	                           test rax, rax	      1810	intel_lrc.c	FUNCTION_48	IF_1	CALL_1
0x40004de	            0x7596	                           jne 0x4000476	      1810	intel_lrc.c	FUNCTION_48	IF_1	CALL_1
0x40004e0	        0x488b4768	            mov rax, qword [rdi + 0x68] 	      3034	i915_drv.h	FUNCTION_172
0x40004e4	    0x80b8600b0000	               cmp byte [rax + 0xb60], 0	      1811	intel_lrc.c	FUNCTION_48	IF_1	CALL_2
0x40004eb	            0x7589	                           jne 0x4000476	      1811	intel_lrc.c	FUNCTION_48	IF_1	CALL_2
0x40004ed	      0xbe12000000	                           mov esi, 0x12	      1776	intel_lrc.c	FUNCTION_47	CALL_1
0x40004f2	      0xe800000000	                          call 0x40004f7	      1776	intel_lrc.c	FUNCTION_47	CALL_1
0x40004f7	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	      1777	intel_lrc.c	FUNCTION_47	IF_1	CALL_2
0x40004fd	          0x4989c0	                             mov r8, rax	      1776	intel_lrc.c	FUNCTION_47	CALL_1
0x4000500	     0xf8786000000	                            ja 0x400058c	      1777	intel_lrc.c	FUNCTION_47	IF_1	CALL_2
0x4000506	        0x488d4804	                      lea rcx, [rax + 4]	      1780	intel_lrc.c	FUNCTION_47	CALL_4
0x400050a	    0xc7000f000011	            mov dword [rax], 0x1100000f 	      1780	intel_lrc.c	FUNCTION_47	CALL_4
0x4000510	      0xba18000000	                           mov edx, 0x18	      1780	intel_lrc.c	FUNCTION_47	CALL_4
0x4000515	    0x498b85000700	           mov rax, qword [r13 + 0x700] 	       540	i915_gem_gtt.h	FUNCTION_285	CALL_1
0x400051c	        0x418b7e24	            mov edi, dword [r14 + 0x24] 	      1784	intel_lrc.c	FUNCTION_47	FOR_1	CALL_7
0x4000520	        0x4883c110	                           add rcx, 0x10	      1784	intel_lrc.c	FUNCTION_47	FOR_1	CALL_7
0x4000524	        0x488b0410	              mov rax, qword [rax + rdx]	       540	i915_gem_gtt.h	FUNCTION_285	CALL_1
0x4000528	    0x8dbc17740200	           lea edi, [rdi + rdx + 0x274] 	      1784	intel_lrc.c	FUNCTION_47	FOR_1	CALL_7
0x400052f	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       540	i915_gem_gtt.h	FUNCTION_285	CALL_1
0x4000533	          0x8979f0	             mov dword [rcx - 0x10], edi	      1784	intel_lrc.c	FUNCTION_47	FOR_1	CALL_7
0x4000536	          0x4889f7	                            mov rdi, rsi	      1785	intel_lrc.c	FUNCTION_47	FOR_1	CALL_8
0x4000539	        0x48c1ef20	                           shr rdi, 0x20	      1785	intel_lrc.c	FUNCTION_47	FOR_1	CALL_8
0x400053d	          0x8979f4	              mov dword [rcx - 0xc], edi	      1785	intel_lrc.c	FUNCTION_47	FOR_1	CALL_8
0x4000540	        0x418b7e24	            mov edi, dword [r14 + 0x24] 	      1786	intel_lrc.c	FUNCTION_47	FOR_1	CALL_10
0x4000544	    0x8dbc17700200	           lea edi, [rdi + rdx + 0x270] 	      1786	intel_lrc.c	FUNCTION_47	FOR_1	CALL_10
0x400054b	        0x4883ea08	                              sub rdx, 8	      1786	intel_lrc.c	FUNCTION_47	FOR_1	CALL_10
0x400054f	          0x8979f8	                mov dword [rcx - 8], edi	      1786	intel_lrc.c	FUNCTION_47	FOR_1	CALL_10
0x4000552	        0x4883faf8	             cmp rdx, 0xfffffffffffffff8	      1781	intel_lrc.c	FUNCTION_47	FOR_1
0x4000556	          0x8971fc	                mov dword [rcx - 4], esi	      1787	intel_lrc.c	FUNCTION_47	FOR_1	CALL_11
0x4000559	            0x75ba	                           jne 0x4000515	      1781	intel_lrc.c	FUNCTION_47	FOR_1
0x400055b	    0x41c740440000	                mov dword [r8 + 0x44], 0	      1790	intel_lrc.c	FUNCTION_47
0x4000563	      0x498b442470	            mov rax, qword [r12 + 0x70] 	      1817	intel_lrc.c	FUNCTION_48	IF_1	CALL_5
0x4000568	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1817	intel_lrc.c	FUNCTION_48	IF_1	CALL_5
0x400056c	      0x498b442478	            mov rax, qword [r12 + 0x78] 	      1817	intel_lrc.c	FUNCTION_48	IF_1	CALL_5
0x4000571	          0x8b4810	            mov ecx, dword [rax + 0x10] 	      1817	intel_lrc.c	FUNCTION_48	IF_1	CALL_5
0x4000574	    0x48c7c0feffff	             mov rax, 0xfffffffffffffffe	      1817	intel_lrc.c	FUNCTION_48	IF_1	CALL_5
0x400057b	          0x48d3c0	                             rol rax, cl	      1817	intel_lrc.c	FUNCTION_48	IF_1	CALL_5
0x400057e	            0x89c0	                            mov eax, eax	      1817	intel_lrc.c	FUNCTION_48	IF_1	CALL_5
0x4000580	    0x482182e00600	            and qword [rdx + 0x6e0], rax	      1817	intel_lrc.c	FUNCTION_48	IF_1	CALL_5
0x4000587	      0xe9eafeffff	                           jmp 0x4000476	      1817	intel_lrc.c	FUNCTION_48	IF_1	CALL_5
0x400058c	            0x85c0	                           test eax, eax	      1814	intel_lrc.c	FUNCTION_48	IF_1	IF_2
0x400058e	     0xf852fffffff	                           jne 0x40004c3	      1814	intel_lrc.c	FUNCTION_48	IF_1	IF_2
0x4000594	            0xebcd	                           jmp 0x4000563	      1814	intel_lrc.c	FUNCTION_48	IF_1	IF_2
gen8_emit_flush	DO,0:IF,3:FOR,0:ELSE,0:SWITCH,0:functions,0:CALL,4:WHILE,0	25
0x40005a0	              0x55	                                push rbp	      1869	intel_lrc.c	FUNCTION_51
0x40005a1	              0x53	                                push rbx	      1869	intel_lrc.c	FUNCTION_51
0x40005a2	            0x89f5	                            mov ebp, esi	      1869	intel_lrc.c	FUNCTION_51
0x40005a4	      0xbe04000000	                              mov esi, 4	      1872	intel_lrc.c	FUNCTION_51	CALL_1
0x40005a9	          0x4889fb	                            mov rbx, rdi	      1869	intel_lrc.c	FUNCTION_51
0x40005ac	      0xe800000000	                          call 0x40005b1	      1872	intel_lrc.c	FUNCTION_51	CALL_1
0x40005b1	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	      1873	intel_lrc.c	FUNCTION_51	IF_1	CALL_2
0x40005b7	            0x7723	                            ja 0x40005dc	      1873	intel_lrc.c	FUNCTION_51	IF_1	CALL_2
0x40005b9	          0x83e501	                              and ebp, 1	      1885	intel_lrc.c	FUNCTION_51	IF_2
0x40005bc	      0xba02402013	                     mov edx, 0x13204002	      1883	intel_lrc.c	FUNCTION_51
0x40005c1	            0x751c	                           jne 0x40005df	      1885	intel_lrc.c	FUNCTION_51	IF_2
0x40005c3	            0x8910	                    mov dword [rax], edx	      1891	intel_lrc.c	FUNCTION_51
0x40005c5	    0xc74004040100	              mov dword [rax + 4], 0x104	      1892	intel_lrc.c	FUNCTION_51
0x40005cc	    0xc74008000000	                  mov dword [rax + 8], 0	      1893	intel_lrc.c	FUNCTION_51
0x40005d3	    0xc7400c000000	                mov dword [rax + 0xc], 0	      1894	intel_lrc.c	FUNCTION_51
0x40005da	            0x31c0	                            xor eax, eax	      1897	intel_lrc.c	FUNCTION_51
0x40005dc	              0x5b	                                 pop rbx	      1898	intel_lrc.c	FUNCTION_51
0x40005dd	              0x5d	                                 pop rbp	      1898	intel_lrc.c	FUNCTION_51
0x40005de	              0xc3	                                     ret	      1898	intel_lrc.c	FUNCTION_51
0x40005df	        0x488b5378	            mov rdx, qword [rbx + 0x78] 	      1887	intel_lrc.c	FUNCTION_51	IF_2	IF_3
0x40005e3	      0xb982402413	                     mov ecx, 0x13244082	      1888	intel_lrc.c	FUNCTION_51	IF_2	IF_3
0x40005e8	        0x837a1002	               cmp dword [rdx + 0x10], 2	      1888	intel_lrc.c	FUNCTION_51	IF_2	IF_3
0x40005ec	      0xba02402413	                     mov edx, 0x13244002	      1888	intel_lrc.c	FUNCTION_51	IF_2	IF_3
0x40005f1	           0xf44d1	                          cmove edx, ecx	      1888	intel_lrc.c	FUNCTION_51	IF_2	IF_3
0x40005f4	            0xebcd	                           jmp 0x40005c3	      1888	intel_lrc.c	FUNCTION_51	IF_2	IF_3
logical_xcs_ring_init	DO,0:IF,0:FOR,0:ELSE,0:SWITCH,0:functions,0:CALL,2:WHILE,0	6
0x4002cb0	              0x53	                                push rbx	      2228	intel_lrc.c	FUNCTION_64
0x4002cb1	          0x4889fb	                            mov rbx, rdi	      2228	intel_lrc.c	FUNCTION_64
0x4002cb4	      0xe847d9ffff	             call sym.logical_ring_setup	      2229	intel_lrc.c	FUNCTION_64	CALL_1
0x4002cb9	          0x4889df	                            mov rdi, rbx	      2231	intel_lrc.c	FUNCTION_64	CALL_2
0x4002cbc	              0x5b	                                 pop rbx	      2232	intel_lrc.c	FUNCTION_64
0x4002cbd	      0xe93efcffff	               jmp sym.logical_ring_init	      2231	intel_lrc.c	FUNCTION_64	CALL_2
execlists_set_default_submission	DO,0:IF,1:FOR,0:ELSE,0:SWITCH,0:functions,0:CALL,0:WHILE,0	14
0x40001e0	          0x488b07	                    mov rax, qword [rdi]	      2080	intel_lrc.c	FUNCTION_58
0x40001e3	    0x48c787200200	              mov qword [rdi + 0x220], 0	      2070	intel_lrc.c	FUNCTION_58
0x40001ee	    0x48c787300200	              mov qword [rdi + 0x230], 0	      2071	intel_lrc.c	FUNCTION_58
0x40001f9	    0x48c787280200	              mov qword [rdi + 0x228], 0	      2072	intel_lrc.c	FUNCTION_58
0x4000204	    0x48c787900200	              mov qword [rdi + 0x290], 0	      2073	intel_lrc.c	FUNCTION_58
0x400020f	    0x48c787c80100	              mov qword [rdi + 0x1c8], 0	      2075	intel_lrc.c	FUNCTION_58
0x400021a	    0x48c787d00100	              mov qword [rdi + 0x1d0], 0	      2076	intel_lrc.c	FUNCTION_58
0x4000225	    0x838fd0030000	               or dword [rdi + 0x3d0], 2	      2078	intel_lrc.c	FUNCTION_58
0x400022c	    0xc78010070000	              mov dword [rax + 0x710], 3	      2080	intel_lrc.c	FUNCTION_58
0x4000236	          0x488b07	                    mov rax, qword [rdi]	      2083	intel_lrc.c	FUNCTION_58	IF_1
0x4000239	    0x4883b8c04600	             cmp qword [rax + 0x46c0], 0	      2083	intel_lrc.c	FUNCTION_58	IF_1
0x4000241	            0x7407	                            je 0x400024a	      2083	intel_lrc.c	FUNCTION_58	IF_1
0x4000243	    0x838810070000	               or dword [rax + 0x710], 4	      2084	intel_lrc.c	FUNCTION_58	IF_1
0x400024a	            0xf3c3	                                     ret	      2084	intel_lrc.c	FUNCTION_58	IF_1
gen9_init_render_ring	DO,0:IF,1:FOR,0:ELSE,0:SWITCH,0:functions,0:CALL,2:WHILE,0	10
0x4000eb0	              0x53	                                push rbx	      1659	intel_lrc.c	FUNCTION_44
0x4000eb1	          0x4889fb	                            mov rbx, rdi	      1659	intel_lrc.c	FUNCTION_44
0x4000eb4	      0xe887feffff	          call sym.gen8_init_common_ring	      1662	intel_lrc.c	FUNCTION_44	CALL_1
0x4000eb9	            0x85c0	                           test eax, eax	      1663	intel_lrc.c	FUNCTION_44	IF_1
0x4000ebb	            0x7402	                            je 0x4000ebf	      1663	intel_lrc.c	FUNCTION_44	IF_1
0x4000ebd	              0x5b	                                 pop rbx	      1667	intel_lrc.c	FUNCTION_44
0x4000ebe	              0xc3	                                     ret	      1667	intel_lrc.c	FUNCTION_44
0x4000ebf	          0x4889df	                            mov rdi, rbx	      1666	intel_lrc.c	FUNCTION_44	CALL_2
0x4000ec2	              0x5b	                                 pop rbx	      1667	intel_lrc.c	FUNCTION_44
0x4000ec3	      0xe900000000	                           jmp 0x4000ec8	      1666	intel_lrc.c	FUNCTION_44	CALL_2
logical_ring_init	DO,0:IF,3:FOR,0:ELSE,1:SWITCH,0:functions,0:CALL,10:WHILE,0	44
0x4002900	              0x53	                                push rbx	      2160	intel_lrc.c	FUNCTION_62
0x4002901	          0x4889fb	                            mov rbx, rdi	      2160	intel_lrc.c	FUNCTION_62
0x4002904	        0x4883ec08	                              sub rsp, 8	      2160	intel_lrc.c	FUNCTION_62
0x4002908	      0xe800000000	                          call 0x400290d	      2163	intel_lrc.c	FUNCTION_62	CALL_1
0x400290d	            0x85c0	                           test eax, eax	      2164	intel_lrc.c	FUNCTION_62	IF_1
0x400290f	     0xf8582000000	                           jne 0x4002997	      2164	intel_lrc.c	FUNCTION_62	IF_1
0x4002915	          0x488b03	                    mov rax, qword [rbx]	      2167	intel_lrc.c	FUNCTION_62	IF_2	CALL_2
0x4002918	    0xf68079060000	          test byte [rax + 0x679], 0x10 	      2167	intel_lrc.c	FUNCTION_62	IF_2	CALL_2
0x400291f	            0x7549	                           jne 0x400296a	      2167	intel_lrc.c	FUNCTION_62	IF_2	CALL_2
0x4002921	          0x8b5324	            mov edx, dword [rbx + 0x24] 	      2173	intel_lrc.c	FUNCTION_62	ELSE_1
0x4002924	    0x81c230020000	                          add edx, 0x230	      2173	intel_lrc.c	FUNCTION_62	ELSE_1
0x400292a	    0x480390a00700	            add rdx, qword [rax + 0x7a0]	      2173	intel_lrc.c	FUNCTION_62	ELSE_1
0x4002931	    0x488993d80200	            mov qword [rbx + 0x2d8], rdx	      2173	intel_lrc.c	FUNCTION_62	ELSE_1
0x4002938	    0xc78324030000	    mov dword [rbx + 0x324], 0xffffffff 	      2177	intel_lrc.c	FUNCTION_62
0x4002942	    0x488b80c04600	          mov rax, qword [rax + 0x46c0] 	      2178	intel_lrc.c	FUNCTION_62	IF_3
0x4002949	          0x4885c0	                           test rax, rax	      2178	intel_lrc.c	FUNCTION_62	IF_3
0x400294c	            0x745f	                            je 0x40029ad	      2178	intel_lrc.c	FUNCTION_62	IF_3
0x400294e	          0x8b5310	            mov edx, dword [rbx + 0x10] 	      2180	intel_lrc.c	FUNCTION_62	CALL_9
0x4002951	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      2180	intel_lrc.c	FUNCTION_62	CALL_9
0x4002955	    0x8b84d08c0000	    mov eax, dword [rax + rdx*8 + 0x8c] 	      2179	intel_lrc.c	FUNCTION_62	IF_3
0x400295c	    0x898324030000	            mov dword [rbx + 0x324], eax	      2179	intel_lrc.c	FUNCTION_62	IF_3
0x4002962	        0x4883c408	                              add rsp, 8	      2187	intel_lrc.c	FUNCTION_62
0x4002966	            0x31c0	                            xor eax, eax	      2182	intel_lrc.c	FUNCTION_62
0x4002968	              0x5b	                                 pop rbx	      2187	intel_lrc.c	FUNCTION_62
0x4002969	              0xc3	                                     ret	      2187	intel_lrc.c	FUNCTION_62
0x400296a	          0x8b4b24	            mov ecx, dword [rbx + 0x24] 	      2169	intel_lrc.c	FUNCTION_62	IF_2	CALL_4
0x400296d	    0x8d9110050000	                  lea edx, [rcx + 0x510]	      2168	intel_lrc.c	FUNCTION_62	IF_2
0x4002973	    0x480390a00700	            add rdx, qword [rax + 0x7a0]	      2168	intel_lrc.c	FUNCTION_62	IF_2
0x400297a	    0x488993d80200	            mov qword [rbx + 0x2d8], rdx	      2168	intel_lrc.c	FUNCTION_62	IF_2
0x4002981	    0x8d9150050000	                  lea edx, [rcx + 0x550]	      2170	intel_lrc.c	FUNCTION_62	IF_2
0x4002987	    0x480390a00700	            add rdx, qword [rax + 0x7a0]	      2170	intel_lrc.c	FUNCTION_62	IF_2
0x400298e	    0x488993e00200	            mov qword [rbx + 0x2e0], rdx	      2170	intel_lrc.c	FUNCTION_62	IF_2
0x4002995	            0xeba1	                           jmp 0x4002938	      2170	intel_lrc.c	FUNCTION_62	IF_2
0x4002997	          0x4889df	                            mov rdi, rbx	      2185	intel_lrc.c	FUNCTION_62	CALL_10
0x400299a	        0x89442404	                mov dword [rsp + 4], eax	      2185	intel_lrc.c	FUNCTION_62	CALL_10
0x400299e	      0xe800000000	                          call 0x40029a3	      2185	intel_lrc.c	FUNCTION_62	CALL_10
0x40029a3	        0x8b442404	                mov eax, dword [rsp + 4]	      2186	intel_lrc.c	FUNCTION_62
0x40029a7	        0x4883c408	                              add rsp, 8	      2187	intel_lrc.c	FUNCTION_62
0x40029ab	              0x5b	                                 pop rbx	      2187	intel_lrc.c	FUNCTION_62
0x40029ac	              0xc3	                                     ret	      2187	intel_lrc.c	FUNCTION_62
0x40029ad	        0x4883c408	                              add rsp, 8	      2187	intel_lrc.c	FUNCTION_62
0x40029b1	            0x31c0	                            xor eax, eax	      2182	intel_lrc.c	FUNCTION_62
0x40029b3	              0x5b	                                 pop rbx	      2187	intel_lrc.c	FUNCTION_62
0x40029b4	              0xc3	                                     ret	      2187	intel_lrc.c	FUNCTION_62
execlists_request_alloc	DO,0:IF,1:FOR,0:ELSE,0:SWITCH,0:functions,0:CALL,2:WHILE,0	12
0x4000730	              0x53	                                push rbx	      1264	intel_lrc.c	FUNCTION_33
0x4000731	    0x8b87c4010000	           mov eax, dword [rdi + 0x1c4] 	      1275	intel_lrc.c	FUNCTION_33
0x4000737	          0x4889fb	                            mov rbx, rdi	      1264	intel_lrc.c	FUNCTION_33
0x400073a	          0x8d7040	                   lea esi, [rax + 0x40]	      1275	intel_lrc.c	FUNCTION_33
0x400073d	    0x89b7c4010000	            mov dword [rdi + 0x1c4], esi	      1275	intel_lrc.c	FUNCTION_33
0x4000743	    0x488bbf800000	            mov rdi, qword [rdi + 0x80] 	      1277	intel_lrc.c	FUNCTION_33	CALL_2
0x400074a	      0xe800000000	                          call 0x400074f	      1277	intel_lrc.c	FUNCTION_33	CALL_2
0x400074f	            0x85c0	                           test eax, eax	      1278	intel_lrc.c	FUNCTION_33	IF_1
0x4000751	            0x7507	                           jne 0x400075a	      1278	intel_lrc.c	FUNCTION_33	IF_1
0x4000753	    0x83abc4010000	          sub dword [rbx + 0x1c4], 0x40 	      1288	intel_lrc.c	FUNCTION_33
0x400075a	              0x5b	                                 pop rbx	      1290	intel_lrc.c	FUNCTION_33
0x400075b	              0xc3	                                     ret	      1290	intel_lrc.c	FUNCTION_33
gen10_init_indirectctx_bb	DO,0:IF,0:FOR,1:ELSE,0:SWITCH,0:functions,0:CALL,1:WHILE,1	17
0x4000250	        0x488d5618	                   lea rdx, [rsi + 0x18]	       971	intel_ringbuffer.h	FUNCTION_100
0x4000254	        0x488d4640	                   lea rax, [rsi + 0x40]	       971	intel_ringbuffer.h	FUNCTION_100
0x4000258	    0x48c746080000	                  mov qword [rsi + 8], 0	       965	intel_ringbuffer.h	FUNCTION_100	CALL_1
0x4000260	    0x48c746100000	               mov qword [rsi + 0x10], 0	       965	intel_ringbuffer.h	FUNCTION_100	CALL_1
0x4000268	    0xc7060400007a	            mov dword [rsi], 0x7a000004 	       967	intel_ringbuffer.h	FUNCTION_100	CALL_2
0x400026e	    0xc74604000010	          mov dword [rsi + 4], 0x100000 	       968	intel_ringbuffer.h	FUNCTION_100
0x4000275	        0x4883c204	                              add rdx, 4	      1465	intel_lrc.c	FUNCTION_37	FOR_1
0x4000279	    0xc742fc000000	                  mov dword [rdx - 4], 0	      1465	intel_lrc.c	FUNCTION_37	FOR_1
0x4000280	          0x4839d0	                            cmp rax, rdx	      1464	intel_lrc.c	FUNCTION_37	FOR_1
0x4000283	            0x75f0	                           jne 0x4000275	      1464	intel_lrc.c	FUNCTION_37	FOR_1
0x4000285	            0xa83f	                           test al, 0x3f	      1468	intel_lrc.c	FUNCTION_37	WHILE_1
0x4000287	            0x740f	                            je 0x4000298	      1468	intel_lrc.c	FUNCTION_37	WHILE_1
0x4000289	        0x4883c004	                              add rax, 4	      1469	intel_lrc.c	FUNCTION_37	WHILE_1
0x400028d	    0xc740fc000000	                  mov dword [rax - 4], 0	      1469	intel_lrc.c	FUNCTION_37	WHILE_1
0x4000294	            0xa83f	                           test al, 0x3f	      1468	intel_lrc.c	FUNCTION_37	WHILE_1
0x4000296	            0x75f1	                           jne 0x4000289	      1468	intel_lrc.c	FUNCTION_37	WHILE_1
0x4000298	            0xf3c3	                                     ret	      1472	intel_lrc.c	FUNCTION_37
gen9_init_indirectctx_bb	DO,0:IF,2:FOR,0:ELSE,0:SWITCH,0:functions,0:CALL,8:WHILE,1	62
0x4000ed0	    0xc70600000004	mov dword [rsi], loc.imp.intel_ring_reset 	      1384	intel_lrc.c	FUNCTION_36
0x4000ed6	    0xc74604020040	        mov dword [rsi + 4], 0x12400002 	      1311	intel_lrc.c	FUNCTION_34
0x4000edd	        0x488d5658	                   lea rdx, [rsi + 0x58]	      1394	intel_lrc.c	FUNCTION_36
0x4000ee1	    0xc7460818b100	            mov dword [rsi + 8], 0xb118 	      1312	intel_lrc.c	FUNCTION_34	CALL_1
0x4000ee8	    0x488b87980100	           mov rax, qword [rdi + 0x198] 	      1312	intel_lrc.c	FUNCTION_34	CALL_1
0x4000eef	        0x488b4008	                mov rax, qword [rax + 8]	      1313	intel_lrc.c	FUNCTION_34	CALL_2
0x4000ef3	    0xc74610000000	               mov dword [rsi + 0x10], 0	      1314	intel_lrc.c	FUNCTION_34
0x4000efa	    0xc74614010000	     mov dword [rsi + 0x14], 0x11000001 	      1316	intel_lrc.c	FUNCTION_34	CALL_3
0x4000f01	    0xc7461818b100	         mov dword [rsi + 0x18], 0xb118 	      1317	intel_lrc.c	FUNCTION_34	CALL_4
0x4000f08	    0xc7461c000060	     mov dword [rsi + 0x1c], 0x40600000 	      1318	intel_lrc.c	FUNCTION_34
0x4000f0f	    0x48c746280000	               mov qword [rsi + 0x28], 0	       965	intel_ringbuffer.h	FUNCTION_100	CALL_1
0x4000f17	       0x500010000	                          add eax, 0x100	      1313	intel_lrc.c	FUNCTION_34	CALL_2
0x4000f1c	    0x48c746300000	               mov qword [rsi + 0x30], 0	       965	intel_ringbuffer.h	FUNCTION_100	CALL_1
0x4000f24	    0xc74620040000	     mov dword [rsi + 0x20], 0x7a000004 	       967	intel_ringbuffer.h	FUNCTION_100	CALL_2
0x4000f2b	          0x89460c	              mov dword [rsi + 0xc], eax	      1313	intel_lrc.c	FUNCTION_34	CALL_2
0x4000f2e	    0xc74624200010	       mov dword [rsi + 0x24], 0x100020 	       968	intel_ringbuffer.h	FUNCTION_100
0x4000f35	    0xc746380200c0	     mov dword [rsi + 0x38], 0x14c00002 	      1325	intel_lrc.c	FUNCTION_34
0x4000f3c	    0xc7463c18b100	         mov dword [rsi + 0x3c], 0xb118 	      1326	intel_lrc.c	FUNCTION_34	CALL_6
0x4000f43	    0x488b87980100	           mov rax, qword [rdi + 0x198] 	      1326	intel_lrc.c	FUNCTION_34	CALL_6
0x4000f4a	        0x488b4008	                mov rax, qword [rax + 8]	      1327	intel_lrc.c	FUNCTION_34	CALL_7
0x4000f4e	    0xc74644000000	               mov dword [rsi + 0x44], 0	      1328	intel_lrc.c	FUNCTION_34
0x4000f55	    0xc74648010000	     mov dword [rsi + 0x48], 0x11000001 	      1390	intel_lrc.c	FUNCTION_36	CALL_2
0x4000f5c	    0xc7464c147000	         mov dword [rsi + 0x4c], 0x7014 	      1391	intel_lrc.c	FUNCTION_36	CALL_3
0x4000f63	    0xc74650000000	     mov dword [rsi + 0x50], 0x10000000 	      1392	intel_lrc.c	FUNCTION_36	CALL_4
0x4000f6a	    0xc74654000000	               mov dword [rsi + 0x54], 0	      1394	intel_lrc.c	FUNCTION_36
0x4000f71	       0x500010000	                          add eax, 0x100	      1327	intel_lrc.c	FUNCTION_34	CALL_7
0x4000f76	          0x894640	             mov dword [rsi + 0x40], eax	      1327	intel_lrc.c	FUNCTION_34	CALL_7
0x4000f79	          0x488b07	                    mov rax, qword [rdi]	      1398	intel_lrc.c	FUNCTION_36	IF_1	CALL_5
0x4000f7c	    0xf68067060000	              test byte [rax + 0x667], 1	      1398	intel_lrc.c	FUNCTION_36	IF_1	CALL_5
0x4000f83	            0x740d	                            je 0x4000f92	      1398	intel_lrc.c	FUNCTION_36	IF_1	CALL_5
0x4000f85	    0x488b88c00100	           mov rcx, qword [rax + 0x1c0] 	      1398	intel_lrc.c	FUNCTION_36	IF_1	CALL_5
0x4000f8c	        0x80794800	                cmp byte [rcx + 0x48], 0	      1398	intel_lrc.c	FUNCTION_36	IF_1	CALL_5
0x4000f90	            0x7455	                            je 0x4000fe7	      1398	intel_lrc.c	FUNCTION_36	IF_1	CALL_5
0x4000f92	    0x80b879060000	               cmp byte [rax + 0x679], 0	      1409	intel_lrc.c	FUNCTION_36	IF_2	CALL_8
0x4000f99	            0x792d	                           jns 0x4000fc8	      1409	intel_lrc.c	FUNCTION_36	IF_2	CALL_8
0x4000f9b	    0xc70204000570	            mov dword [rdx], 0x70050004 	      1423	intel_lrc.c	FUNCTION_36	IF_2
0x4000fa1	    0xc74204000000	        mov dword [rdx + 4], 0x80000000 	      1424	intel_lrc.c	FUNCTION_36	IF_2
0x4000fa8	        0x4883c218	                           add rdx, 0x18	      1428	intel_lrc.c	FUNCTION_36	IF_2
0x4000fac	    0xc742f0007077	       mov dword [rdx - 0x10], 0x777000 	      1425	intel_lrc.c	FUNCTION_36	IF_2
0x4000fb3	    0xc742f4000000	                mov dword [rdx - 0xc], 0	      1426	intel_lrc.c	FUNCTION_36	IF_2
0x4000fba	    0xc742f8000000	                  mov dword [rdx - 8], 0	      1427	intel_lrc.c	FUNCTION_36	IF_2
0x4000fc1	    0xc742fc000000	                  mov dword [rdx - 4], 0	      1428	intel_lrc.c	FUNCTION_36	IF_2
0x4000fc8	        0x488d4204	                      lea rax, [rdx + 4]	      1431	intel_lrc.c	FUNCTION_36
0x4000fcc	    0xc70201000004	              mov dword [rdx], 0x4000001	      1431	intel_lrc.c	FUNCTION_36
0x4000fd2	            0xa83f	                           test al, 0x3f	      1434	intel_lrc.c	FUNCTION_36	WHILE_1
0x4000fd4	            0x740f	                            je 0x4000fe5	      1434	intel_lrc.c	FUNCTION_36	WHILE_1
0x4000fd6	        0x4883c004	                              add rax, 4	      1435	intel_lrc.c	FUNCTION_36	WHILE_1
0x4000fda	    0xc740fc000000	                  mov dword [rax - 4], 0	      1435	intel_lrc.c	FUNCTION_36	WHILE_1
0x4000fe1	            0xa83f	                           test al, 0x3f	      1434	intel_lrc.c	FUNCTION_36	WHILE_1
0x4000fe3	            0x75f1	                           jne 0x4000fd6	      1434	intel_lrc.c	FUNCTION_36	WHILE_1
0x4000fe5	            0xf3c3	                                     ret	      1438	intel_lrc.c	FUNCTION_36
0x4000fe7	    0x488b87980100	           mov rax, qword [rdi + 0x198] 	      1438	intel_lrc.c	FUNCTION_36
0x4000fee	        0x488b4008	                mov rax, qword [rax + 8]	      1399	intel_lrc.c	FUNCTION_36	IF_1	CALL_6
0x4000ff2	    0x48c742080000	                  mov qword [rdx + 8], 0	       965	intel_ringbuffer.h	FUNCTION_100	CALL_1
0x4000ffa	    0x48c742100000	               mov qword [rdx + 0x10], 0	       965	intel_ringbuffer.h	FUNCTION_100	CALL_1
0x4001002	    0xc74658040000	     mov dword [rsi + 0x58], 0x7a000004 	       967	intel_ringbuffer.h	FUNCTION_100	CALL_2
0x4001009	        0x488d5670	                   lea rdx, [rsi + 0x70]	       971	intel_ringbuffer.h	FUNCTION_100
0x400100d	    0xc7465c004010	      mov dword [rsi + 0x5c], 0x9104000 	       968	intel_ringbuffer.h	FUNCTION_100
0x4001014	          0x83e880	             sub eax, 0xffffffffffffff80	      1399	intel_lrc.c	FUNCTION_36	IF_1	CALL_6
0x4001017	          0x894660	             mov dword [rsi + 0x60], eax	       969	intel_ringbuffer.h	FUNCTION_100
0x400101a	          0x488b07	                    mov rax, qword [rdi]	       969	intel_ringbuffer.h	FUNCTION_100
0x400101d	      0xe970ffffff	                           jmp 0x4000f92	       969	intel_ringbuffer.h	FUNCTION_100
gen8_init_render_ring	DO,0:IF,1:FOR,0:ELSE,0:SWITCH,0:functions,0:CALL,6:WHILE,0	26
0x4000e50	              0x55	                                push rbp	      1637	intel_lrc.c	FUNCTION_43
0x4000e51	              0x53	                                push rbx	      1637	intel_lrc.c	FUNCTION_43
0x4000e52	          0x4889fb	                            mov rbx, rdi	      1637	intel_lrc.c	FUNCTION_43
0x4000e55	          0x488b2f	                    mov rbp, qword [rdi]	      1638	intel_lrc.c	FUNCTION_43
0x4000e58	      0xe8e3feffff	          call sym.gen8_init_common_ring	      1641	intel_lrc.c	FUNCTION_43	CALL_1
0x4000e5d	            0x85c0	                           test eax, eax	      1642	intel_lrc.c	FUNCTION_43	IF_1
0x4000e5f	            0x7403	                            je 0x4000e64	      1642	intel_lrc.c	FUNCTION_43	IF_1
0x4000e61	              0x5b	                                 pop rbx	      1656	intel_lrc.c	FUNCTION_43
0x4000e62	              0x5d	                                 pop rbp	      1656	intel_lrc.c	FUNCTION_43
0x4000e63	              0xc3	                                     ret	      1656	intel_lrc.c	FUNCTION_43
0x4000e64	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	      1651	intel_lrc.c	FUNCTION_43	CALL_3
0x4000e6b	          0x4889ef	                            mov rdi, rbp	      1651	intel_lrc.c	FUNCTION_43	CALL_3
0x4000e6e	      0xb901000000	                              mov ecx, 1	      1651	intel_lrc.c	FUNCTION_43	CALL_3
0x4000e73	      0xba00400040	                     mov edx, 0x40004000	      1651	intel_lrc.c	FUNCTION_43	CALL_3
0x4000e78	      0xbe9c200000	                         mov esi, 0x209c	      1651	intel_lrc.c	FUNCTION_43	CALL_3
0x4000e7d	      0xe800000000	                          call 0x4000e82	      1651	intel_lrc.c	FUNCTION_43	CALL_3
0x4000e82	          0x4889ef	                            mov rdi, rbp	      1653	intel_lrc.c	FUNCTION_43	CALL_5
0x4000e85	    0x488b85180800	           mov rax, qword [rbp + 0x818] 	      1653	intel_lrc.c	FUNCTION_43	CALL_5
0x4000e8c	      0xb901000000	                              mov ecx, 1	      1653	intel_lrc.c	FUNCTION_43	CALL_5
0x4000e91	      0xba80008000	                       mov edx, 0x800080	      1653	intel_lrc.c	FUNCTION_43	CALL_5
0x4000e96	      0xbec0200000	                         mov esi, 0x20c0	      1653	intel_lrc.c	FUNCTION_43	CALL_5
0x4000e9b	      0xe800000000	                          call 0x4000ea0	      1653	intel_lrc.c	FUNCTION_43	CALL_5
0x4000ea0	          0x4889df	                            mov rdi, rbx	      1655	intel_lrc.c	FUNCTION_43	CALL_6
0x4000ea3	              0x5b	                                 pop rbx	      1656	intel_lrc.c	FUNCTION_43
0x4000ea4	              0x5d	                                 pop rbp	      1656	intel_lrc.c	FUNCTION_43
0x4000ea5	      0xe900000000	                           jmp 0x4000eaa	      1655	intel_lrc.c	FUNCTION_43	CALL_6
gen8_emit_breadcrumb_rcs	DO,0:IF,0:FOR,0:ELSE,0:SWITCH,0:functions,0:CALL,6:WHILE,0	30
0x4000150	        0x488b4778	            mov rax, qword [rdi + 0x78] 	      2000	intel_lrc.c	FUNCTION_55
0x4000154	    0x8b97b0010000	           mov edx, dword [rdi + 0x1b0] 	      2004	intel_lrc.c	FUNCTION_55	CALL_2
0x400015a	    0x8b8078010000	           mov eax, dword [rax + 0x178] 	       877	intel_ringbuffer.h	FUNCTION_89
0x4000160	          0x895610	             mov dword [rsi + 0x10], edx	       989	intel_ringbuffer.h	FUNCTION_101
0x4000163	    0xc7060400007a	            mov dword [rsi], 0x7a000004 	       984	intel_ringbuffer.h	FUNCTION_101	CALL_3
0x4000169	    0xc74604004010	         mov dword [rsi + 4], 0x1104000 	       985	intel_ringbuffer.h	FUNCTION_101
0x4000170	    0xc7460c000000	                mov dword [rsi + 0xc], 0	       988	intel_ringbuffer.h	FUNCTION_101
0x4000177	    0xc74614000000	               mov dword [rsi + 0x14], 0	       991	intel_ringbuffer.h	FUNCTION_101
0x400017e	       0x5c0000000	                           add eax, 0xc0	       877	intel_ringbuffer.h	FUNCTION_89
0x4000183	    0xc74618000000	      mov dword [rsi + 0x18], 0x1000000 	      2006	intel_lrc.c	FUNCTION_55
0x400018a	    0xc7461c000000	               mov dword [rsi + 0x1c], 0	      2007	intel_lrc.c	FUNCTION_55
0x4000191	          0x894608	                mov dword [rsi + 8], eax	       987	intel_ringbuffer.h	FUNCTION_101
0x4000194	    0x488b8f800000	            mov rcx, qword [rdi + 0x80] 	       987	intel_ringbuffer.h	FUNCTION_101
0x400019b	        0x488d4620	                   lea rax, [rsi + 0x20]	      2007	intel_lrc.c	FUNCTION_55
0x400019f	        0x4883c628	                           add rsi, 0x28	      1979	intel_lrc.c	FUNCTION_53
0x40001a3	        0x482b4108	                sub rax, qword [rcx + 8]	      2008	intel_lrc.c	FUNCTION_55	CALL_4
0x40001a7	          0x4889c2	                            mov rdx, rax	      2008	intel_lrc.c	FUNCTION_55	CALL_4
0x40001aa	          0x8b4130	            mov eax, dword [rcx + 0x30] 	      2008	intel_lrc.c	FUNCTION_55	CALL_4
0x40001ad	          0x83e801	                              sub eax, 1	      2008	intel_lrc.c	FUNCTION_55	CALL_4
0x40001b0	            0x21d0	                            and eax, edx	      2008	intel_lrc.c	FUNCTION_55	CALL_4
0x40001b2	    0x8987bc010000	            mov dword [rdi + 0x1bc], eax	      2008	intel_lrc.c	FUNCTION_55	CALL_4
0x40001b8	    0xc746f8000080	         mov dword [rsi - 8], 0x2800000 	      1978	intel_lrc.c	FUNCTION_53
0x40001bf	    0xc746fc000000	                  mov dword [rsi - 4], 0	      1979	intel_lrc.c	FUNCTION_53
0x40001c6	    0x488b87800000	            mov rax, qword [rdi + 0x80] 	      1979	intel_lrc.c	FUNCTION_53
0x40001cd	        0x482b7008	                sub rsi, qword [rax + 8]	      1980	intel_lrc.c	FUNCTION_53	CALL_1
0x40001d1	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1980	intel_lrc.c	FUNCTION_53	CALL_1
0x40001d4	          0x83e801	                              sub eax, 1	      1980	intel_lrc.c	FUNCTION_53	CALL_1
0x40001d7	            0x21c6	                            and esi, eax	      1980	intel_lrc.c	FUNCTION_53	CALL_1
0x40001d9	    0x89b7c0010000	            mov dword [rdi + 0x1c0], esi	      1980	intel_lrc.c	FUNCTION_53	CALL_1
0x40001df	              0xc3	                                     ret	      1980	intel_lrc.c	FUNCTION_53	CALL_1
gen8_emit_breadcrumb	DO,0:IF,0:FOR,0:ELSE,0:SWITCH,0:functions,0:CALL,6:WHILE,0	29
0x40000c0	        0x488b4778	            mov rax, qword [rdi + 0x78] 	      1984	intel_lrc.c	FUNCTION_54
0x40000c4	    0x8b97b0010000	           mov edx, dword [rdi + 0x1b0] 	      1988	intel_lrc.c	FUNCTION_54	CALL_2
0x40000ca	    0x8b8078010000	           mov eax, dword [rax + 0x178] 	       877	intel_ringbuffer.h	FUNCTION_89
0x40000d0	          0x89560c	              mov dword [rsi + 0xc], edx	      1007	intel_ringbuffer.h	FUNCTION_102
0x40000d3	    0xc70602400013	            mov dword [rsi], 0x13004002 	      1004	intel_ringbuffer.h	FUNCTION_102
0x40000d9	    0xc74608000000	                  mov dword [rsi + 8], 0	      1006	intel_ringbuffer.h	FUNCTION_102
0x40000e0	    0xc74610000000	      mov dword [rsi + 0x10], 0x1000000 	      1990	intel_lrc.c	FUNCTION_54
0x40000e7	    0xc74614000000	               mov dword [rsi + 0x14], 0	      1991	intel_lrc.c	FUNCTION_54
0x40000ee	       0x5c0000000	                           add eax, 0xc0	       877	intel_ringbuffer.h	FUNCTION_89
0x40000f3	          0x83c804	                               or eax, 4	      1005	intel_ringbuffer.h	FUNCTION_102
0x40000f6	          0x894604	                mov dword [rsi + 4], eax	      1005	intel_ringbuffer.h	FUNCTION_102
0x40000f9	    0x488b8f800000	            mov rcx, qword [rdi + 0x80] 	      1005	intel_ringbuffer.h	FUNCTION_102
0x4000100	        0x488d4618	                   lea rax, [rsi + 0x18]	      1991	intel_lrc.c	FUNCTION_54
0x4000104	        0x4883c620	                           add rsi, 0x20	      1979	intel_lrc.c	FUNCTION_53
0x4000108	        0x482b4108	                sub rax, qword [rcx + 8]	      1992	intel_lrc.c	FUNCTION_54	CALL_4
0x400010c	          0x4889c2	                            mov rdx, rax	      1992	intel_lrc.c	FUNCTION_54	CALL_4
0x400010f	          0x8b4130	            mov eax, dword [rcx + 0x30] 	      1992	intel_lrc.c	FUNCTION_54	CALL_4
0x4000112	          0x83e801	                              sub eax, 1	      1992	intel_lrc.c	FUNCTION_54	CALL_4
0x4000115	            0x21d0	                            and eax, edx	      1992	intel_lrc.c	FUNCTION_54	CALL_4
0x4000117	    0x8987bc010000	            mov dword [rdi + 0x1bc], eax	      1992	intel_lrc.c	FUNCTION_54	CALL_4
0x400011d	    0xc746f8000080	         mov dword [rsi - 8], 0x2800000 	      1978	intel_lrc.c	FUNCTION_53
0x4000124	    0xc746fc000000	                  mov dword [rsi - 4], 0	      1979	intel_lrc.c	FUNCTION_53
0x400012b	    0x488b87800000	            mov rax, qword [rdi + 0x80] 	      1979	intel_lrc.c	FUNCTION_53
0x4000132	        0x482b7008	                sub rsi, qword [rax + 8]	      1980	intel_lrc.c	FUNCTION_53	CALL_1
0x4000136	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1980	intel_lrc.c	FUNCTION_53	CALL_1
0x4000139	          0x83e801	                              sub eax, 1	      1980	intel_lrc.c	FUNCTION_53	CALL_1
0x400013c	            0x21c6	                            and esi, eax	      1980	intel_lrc.c	FUNCTION_53	CALL_1
0x400013e	    0x89b7c0010000	            mov dword [rdi + 0x1c0], esi	      1980	intel_lrc.c	FUNCTION_53	CALL_1
0x4000144	              0xc3	                                     ret	      1980	intel_lrc.c	FUNCTION_53	CALL_1
gen8_emit_flush_render	DO,0:IF,10:FOR,0:ELSE,0:SWITCH,0:functions,0:CALL,11:WHILE,0	90
0x40002a0	        0x488b4778	            mov rax, qword [rdi + 0x78] 	      1905	intel_lrc.c	FUNCTION_52	CALL_1
0x40002a4	            0x4155	                                push r13	      1902	intel_lrc.c	FUNCTION_52
0x40002a6	            0x4154	                                push r12	      1902	intel_lrc.c	FUNCTION_52
0x40002a8	              0x55	                                push rbp	      1902	intel_lrc.c	FUNCTION_52
0x40002a9	              0x53	                                push rbx	      1902	intel_lrc.c	FUNCTION_52
0x40002aa	    0x488b80980100	           mov rax, qword [rax + 0x198] 	      1902	intel_lrc.c	FUNCTION_52
0x40002b1	        0x488b4008	                mov rax, qword [rax + 8]	      1904	intel_lrc.c	FUNCTION_52
0x40002b5	    0x8da880000000	                   lea ebp, [rax + 0x80]	      1904	intel_lrc.c	FUNCTION_52
0x40002bb	            0x89f0	                            mov eax, esi	      1912	intel_lrc.c	FUNCTION_52	IF_1
0x40002bd	          0x83e002	                              and eax, 2	      1912	intel_lrc.c	FUNCTION_52	IF_1
0x40002c0	          0x83f801	                              cmp eax, 1	      1910	intel_lrc.c	FUNCTION_52
0x40002c3	            0x19db	                            sbb ebx, ebx	      1910	intel_lrc.c	FUNCTION_52
0x40002c5	    0x81e35fefffff	                     and ebx, 0xffffef5f	      1910	intel_lrc.c	FUNCTION_52
0x40002cb	    0x81c3a1101000	                       add ebx, 0x1010a1	      1910	intel_lrc.c	FUNCTION_52
0x40002d1	          0x83e601	                              and esi, 1	      1919	intel_lrc.c	FUNCTION_52	IF_2
0x40002d4	     0xf84c5000000	                            je 0x400039f	      1919	intel_lrc.c	FUNCTION_52	IF_2
0x40002da	        0x488b4768	            mov rax, qword [rdi + 0x68] 	      1933	intel_lrc.c	FUNCTION_52	IF_2	IF_3	CALL_2
0x40002de	    0x81cb1c4c0401	                       or ebx, 0x1044c1c	      1927	intel_lrc.c	FUNCTION_52	IF_2
0x40002e4	    0xf6805b060000	              test byte [rax + 0x65b], 1	      1933	intel_lrc.c	FUNCTION_52	IF_2	IF_3	CALL_2
0x40002eb	     0xf84e5000000	                            je 0x40003d6	      1933	intel_lrc.c	FUNCTION_52	IF_2	IF_3	CALL_2
0x40002f1	    0xf68067060000	              test byte [rax + 0x667], 1	      1937	intel_lrc.c	FUNCTION_52	IF_2	IF_4	CALL_3
0x40002f8	     0xf851b010000	                           jne 0x4000419	      1937	intel_lrc.c	FUNCTION_52	IF_2	IF_4	CALL_3
0x40002fe	      0xbe0c000000	                            mov esi, 0xc	      1949	intel_lrc.c	FUNCTION_52	CALL_4
0x4000303	      0xe800000000	                          call 0x4000308	      1949	intel_lrc.c	FUNCTION_52	CALL_4
0x4000308	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	      1950	intel_lrc.c	FUNCTION_52	IF_7	CALL_5
0x400030e	     0xf87bb000000	                            ja 0x40003cf	      1950	intel_lrc.c	FUNCTION_52	IF_7	CALL_5
0x4000314	          0x4531ed	                          xor r13d, r13d	      1906	intel_lrc.c	FUNCTION_52
0x4000317	    0x48c740080000	                  mov qword [rax + 8], 0	       965	intel_ringbuffer.h	FUNCTION_100	CALL_1
0x400031f	    0x48c740100000	               mov qword [rax + 0x10], 0	       965	intel_ringbuffer.h	FUNCTION_100	CALL_1
0x4000327	        0x4883c018	                           add rax, 0x18	       971	intel_ringbuffer.h	FUNCTION_100
0x400032b	    0xc740e8040000	     mov dword [rax - 0x18], 0x7a000004 	       967	intel_ringbuffer.h	FUNCTION_100	CALL_2
0x4000332	    0xc740ec000000	               mov dword [rax - 0x14], 0	       968	intel_ringbuffer.h	FUNCTION_100
0x4000339	          0x4584ed	                         test r13b, r13b	      1956	intel_lrc.c	FUNCTION_52	IF_9
0x400033c	            0x7473	                            je 0x40003b1	      1956	intel_lrc.c	FUNCTION_52	IF_9
0x400033e	    0x48c740200000	               mov qword [rax + 0x20], 0	       965	intel_ringbuffer.h	FUNCTION_100	CALL_1
0x4000346	    0x48c740080000	                  mov qword [rax + 8], 0	       965	intel_ringbuffer.h	FUNCTION_100	CALL_1
0x400034e	    0x48c740100000	               mov qword [rax + 0x10], 0	       965	intel_ringbuffer.h	FUNCTION_100	CALL_1
0x4000356	    0xc7000400007a	            mov dword [rax], 0x7a000004 	       967	intel_ringbuffer.h	FUNCTION_100	CALL_2
0x400035c	    0xc74004200000	               mov dword [rax + 4], 0x20	       968	intel_ringbuffer.h	FUNCTION_100
0x4000363	    0x48c740280000	               mov qword [rax + 0x28], 0	       965	intel_ringbuffer.h	FUNCTION_100	CALL_1
0x400036b	    0xc74018040000	     mov dword [rax + 0x18], 0x7a000004 	       967	intel_ringbuffer.h	FUNCTION_100	CALL_2
0x4000372	          0x89581c	             mov dword [rax + 0x1c], ebx	       968	intel_ringbuffer.h	FUNCTION_100
0x4000375	          0x896820	             mov dword [rax + 0x20], ebp	       969	intel_ringbuffer.h	FUNCTION_100
0x4000378	    0x48c740380000	               mov qword [rax + 0x38], 0	       965	intel_ringbuffer.h	FUNCTION_100	CALL_1
0x4000380	    0x48c740400000	               mov qword [rax + 0x40], 0	       965	intel_ringbuffer.h	FUNCTION_100	CALL_1
0x4000388	    0xc74030040000	     mov dword [rax + 0x30], 0x7a000004 	       967	intel_ringbuffer.h	FUNCTION_100	CALL_2
0x400038f	    0xc74034000010	       mov dword [rax + 0x34], 0x100000 	       968	intel_ringbuffer.h	FUNCTION_100
0x4000396	            0x31c0	                            xor eax, eax	      1967	intel_lrc.c	FUNCTION_52
0x4000398	              0x5b	                                 pop rbx	      1968	intel_lrc.c	FUNCTION_52
0x4000399	              0x5d	                                 pop rbp	      1968	intel_lrc.c	FUNCTION_52
0x400039a	            0x415c	                                 pop r12	      1968	intel_lrc.c	FUNCTION_52
0x400039c	            0x415d	                                 pop r13	      1968	intel_lrc.c	FUNCTION_52
0x400039e	              0xc3	                                     ret	      1968	intel_lrc.c	FUNCTION_52
0x400039f	      0xbe06000000	                              mov esi, 6	      1949	intel_lrc.c	FUNCTION_52	CALL_4
0x40003a4	      0xe800000000	                          call 0x40003a9	      1949	intel_lrc.c	FUNCTION_52	CALL_4
0x40003a9	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	      1950	intel_lrc.c	FUNCTION_52	IF_7	CALL_5
0x40003af	            0x771e	                            ja 0x40003cf	      1950	intel_lrc.c	FUNCTION_52	IF_7	CALL_5
0x40003b1	    0x48c740080000	                  mov qword [rax + 8], 0	       965	intel_ringbuffer.h	FUNCTION_100	CALL_1
0x40003b9	    0x48c740100000	               mov qword [rax + 0x10], 0	       965	intel_ringbuffer.h	FUNCTION_100	CALL_1
0x40003c1	    0xc7000400007a	            mov dword [rax], 0x7a000004 	       967	intel_ringbuffer.h	FUNCTION_100	CALL_2
0x40003c7	          0x895804	                mov dword [rax + 4], ebx	       968	intel_ringbuffer.h	FUNCTION_100
0x40003ca	          0x896808	                mov dword [rax + 8], ebp	       969	intel_ringbuffer.h	FUNCTION_100
0x40003cd	            0x31c0	                            xor eax, eax	      1967	intel_lrc.c	FUNCTION_52
0x40003cf	              0x5b	                                 pop rbx	      1968	intel_lrc.c	FUNCTION_52
0x40003d0	              0x5d	                                 pop rbp	      1968	intel_lrc.c	FUNCTION_52
0x40003d1	            0x415c	                                 pop r12	      1968	intel_lrc.c	FUNCTION_52
0x40003d3	            0x415d	                                 pop r13	      1968	intel_lrc.c	FUNCTION_52
0x40003d5	              0xc3	                                     ret	      1968	intel_lrc.c	FUNCTION_52
0x40003d6	    0xf68067060000	              test byte [rax + 0x667], 1	      1937	intel_lrc.c	FUNCTION_52	IF_2	IF_4	CALL_3
0x40003dd	            0x74c0	                            je 0x400039f	      1937	intel_lrc.c	FUNCTION_52	IF_2	IF_4	CALL_3
0x40003df	    0x488b80c00100	           mov rax, qword [rax + 0x1c0] 	      1937	intel_lrc.c	FUNCTION_52	IF_2	IF_4	CALL_3
0x40003e6	      0xbe06000000	                              mov esi, 6	      1941	intel_lrc.c	FUNCTION_52
0x40003eb	        0x80784801	                cmp byte [rax + 0x48], 1	      1937	intel_lrc.c	FUNCTION_52	IF_2	IF_4	CALL_3
0x40003ef	        0x410f96c5	                              setbe r13b	      1937	intel_lrc.c	FUNCTION_52	IF_2	IF_4	CALL_3
0x40003f3	          0x4531e4	                          xor r12d, r12d	      1937	intel_lrc.c	FUNCTION_52	IF_2	IF_4	CALL_3
0x40003f6	          0x4584ed	                         test r13b, r13b	      1946	intel_lrc.c	FUNCTION_52	IF_6
0x40003f9	            0x7403	                            je 0x40003fe	      1946	intel_lrc.c	FUNCTION_52	IF_6
0x40003fb	          0x83c60c	                            add esi, 0xc	      1946	intel_lrc.c	FUNCTION_52	IF_6
0x40003fe	      0xe800000000	                          call 0x4000403	      1949	intel_lrc.c	FUNCTION_52	CALL_4
0x4000403	    0x483d00f0ffff	             cmp rax, 0xfffffffffffff000	      1950	intel_lrc.c	FUNCTION_52	IF_7	CALL_5
0x4000409	            0x77c4	                            ja 0x40003cf	      1950	intel_lrc.c	FUNCTION_52	IF_7	CALL_5
0x400040b	          0x4584e4	                         test r12b, r12b	      1953	intel_lrc.c	FUNCTION_52	IF_8
0x400040e	     0xf8425ffffff	                            je 0x4000339	      1953	intel_lrc.c	FUNCTION_52	IF_8
0x4000414	      0xe9fefeffff	                           jmp 0x4000317	      1953	intel_lrc.c	FUNCTION_52	IF_8
0x4000419	    0x488b80c00100	           mov rax, qword [rax + 0x1c0] 	      1937	intel_lrc.c	FUNCTION_52	IF_2	IF_4	CALL_3
0x4000420	    0x41bc01000000	                             mov r12d, 1	      1937	intel_lrc.c	FUNCTION_52	IF_2	IF_4	CALL_3
0x4000426	      0xbe0c000000	                            mov esi, 0xc	      1944	intel_lrc.c	FUNCTION_52	IF_5
0x400042b	        0x80784801	                cmp byte [rax + 0x48], 1	      1937	intel_lrc.c	FUNCTION_52	IF_2	IF_4	CALL_3
0x400042f	        0x410f96c5	                              setbe r13b	      1937	intel_lrc.c	FUNCTION_52	IF_2	IF_4	CALL_3
0x4000433	            0xebc1	                           jmp 0x40003f6	      1937	intel_lrc.c	FUNCTION_52	IF_2	IF_4	CALL_3
