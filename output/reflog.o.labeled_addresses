tree_is_complete	IF,7:ELSE,0:FOR,0:SWITCH,0:DO,0:WHILE,1:CALL,8:functions,0	140
0x1dc	              0x55	                                push rbp	        61	reflog.c	FUNCTION_1
0x1dd	          0x4889e5	                            mov rbp, rsp	        61	reflog.c	FUNCTION_1
0x1e0	        0x4883c480	             add rsp, 0xffffffffffffff80	        61	reflog.c	FUNCTION_1
0x1e4	        0x48897d88	             mov qword [rbp - 0x78], rdi	        61	reflog.c	FUNCTION_1
0x1e8	    0x64488b042528	                mov rax, qword fs:[0x28]	        61	reflog.c	FUNCTION_1
0x1f1	        0x488945f8	                mov qword [rbp - 8], rax	        61	reflog.c	FUNCTION_1
0x1f5	            0x31c0	                            xor eax, eax	        61	reflog.c	FUNCTION_1
0x1f7	        0x488b4588	             mov rax, qword [rbp - 0x78]	        67	reflog.c	FUNCTION_1	CALL_1
0x1fb	          0x4889c7	                            mov rdi, rax	        67	reflog.c	FUNCTION_1	CALL_1
0x1fe	      0xe800000000	                          call 0x4000243	        67	reflog.c	FUNCTION_1	CALL_1
0x203	        0x488945a0	             mov qword [rbp - 0x60], rax	        67	reflog.c	FUNCTION_1	CALL_1
0x207	      0x48837da000	               cmp qword [rbp - 0x60], 0	        68	reflog.c	FUNCTION_1	IF_1
0x20c	            0x750a	                           jne 0x4000258	        68	reflog.c	FUNCTION_1	IF_1
0x20e	      0xb800000000	                              mov eax, 0	        69	reflog.c	FUNCTION_1	IF_1
0x213	      0xe9a5010000	                           jmp 0x40003fd	        69	reflog.c	FUNCTION_1	IF_1
0x218	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        70	reflog.c	FUNCTION_1	IF_2
0x21c	            0x8b00	                    mov eax, dword [rax]	        70	reflog.c	FUNCTION_1	IF_2
0x21e	          0xc1e804	                              shr eax, 4	        70	reflog.c	FUNCTION_1	IF_2
0x221	      0x25ffffff07	                      and eax, 0x7ffffff	        70	reflog.c	FUNCTION_1	IF_2
0x226	          0x83e001	                              and eax, 1	        70	reflog.c	FUNCTION_1	IF_2
0x229	            0x85c0	                           test eax, eax	        70	reflog.c	FUNCTION_1	IF_2
0x22b	            0x740a	                            je 0x4000277	        70	reflog.c	FUNCTION_1	IF_2
0x22d	      0xb801000000	                              mov eax, 1	        71	reflog.c	FUNCTION_1	IF_2
0x232	      0xe986010000	                           jmp 0x40003fd	        71	reflog.c	FUNCTION_1	IF_2
0x237	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        72	reflog.c	FUNCTION_1	IF_3
0x23b	            0x8b00	                    mov eax, dword [rax]	        72	reflog.c	FUNCTION_1	IF_3
0x23d	          0xc1e804	                              shr eax, 4	        72	reflog.c	FUNCTION_1	IF_3
0x240	      0x25ffffff07	                      and eax, 0x7ffffff	        72	reflog.c	FUNCTION_1	IF_3
0x245	      0x2500040000	                          and eax, 0x400	        72	reflog.c	FUNCTION_1	IF_3
0x24a	            0x85c0	                           test eax, eax	        72	reflog.c	FUNCTION_1	IF_3
0x24c	            0x740a	                            je 0x4000298	        72	reflog.c	FUNCTION_1	IF_3
0x24e	      0xb800000000	                              mov eax, 0	        73	reflog.c	FUNCTION_1	IF_3
0x253	      0xe965010000	                           jmp 0x40003fd	        73	reflog.c	FUNCTION_1	IF_3
0x258	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        75	reflog.c	FUNCTION_1	IF_4
0x25c	        0x488b4018	            mov rax, qword [rax + 0x18] 	        75	reflog.c	FUNCTION_1	IF_4
0x260	          0x4885c0	                           test rax, rax	        75	reflog.c	FUNCTION_1	IF_4
0x263	            0x7572	                           jne 0x4000317	        75	reflog.c	FUNCTION_1	IF_4
0x265	        0x488d55d0	                   lea rdx, [rbp - 0x30]	        78	reflog.c	FUNCTION_1	IF_4	CALL_2
0x269	        0x488d4db0	                   lea rcx, [rbp - 0x50]	        78	reflog.c	FUNCTION_1	IF_4	CALL_2
0x26d	        0x488b4588	             mov rax, qword [rbp - 0x78]	        78	reflog.c	FUNCTION_1	IF_4	CALL_2
0x271	          0x4889ce	                            mov rsi, rcx	        78	reflog.c	FUNCTION_1	IF_4	CALL_2
0x274	          0x4889c7	                            mov rdi, rax	        78	reflog.c	FUNCTION_1	IF_4	CALL_2
0x277	      0xe8f3feffff	               call sym.read_object_file	        78	reflog.c	FUNCTION_1	IF_4	CALL_2
0x27c	        0x488945a8	             mov qword [rbp - 0x58], rax	        78	reflog.c	FUNCTION_1	IF_4	CALL_2
0x280	      0x48837da800	               cmp qword [rbp - 0x58], 0	        79	reflog.c	FUNCTION_1	IF_4	IF_5
0x285	            0x7538	                           jne 0x40002ff	        79	reflog.c	FUNCTION_1	IF_4	IF_5
0x287	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        80	reflog.c	FUNCTION_1	IF_4	IF_5
0x28b	            0x8b00	                    mov eax, dword [rax]	        80	reflog.c	FUNCTION_1	IF_4	IF_5
0x28d	          0xc1e804	                              shr eax, 4	        80	reflog.c	FUNCTION_1	IF_4	IF_5
0x290	      0x25ffffff07	                      and eax, 0x7ffffff	        80	reflog.c	FUNCTION_1	IF_4	IF_5
0x295	          0x80cc04	                                or ah, 4	        80	reflog.c	FUNCTION_1	IF_4	IF_5
0x298	            0x89c2	                            mov edx, eax	        80	reflog.c	FUNCTION_1	IF_4	IF_5
0x29a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        80	reflog.c	FUNCTION_1	IF_4	IF_5
0x29e	    0x81e2ffffff07	                      and edx, 0x7ffffff	        80	reflog.c	FUNCTION_1	IF_4	IF_5
0x2a4	            0x89d1	                            mov ecx, edx	        80	reflog.c	FUNCTION_1	IF_4	IF_5
0x2a6	          0xc1e104	                              shl ecx, 4	        80	reflog.c	FUNCTION_1	IF_4	IF_5
0x2a9	            0x8b10	                    mov edx, dword [rax]	        80	reflog.c	FUNCTION_1	IF_4	IF_5
0x2ab	    0x81e20f000080	                     and edx, 0x8000000f	        80	reflog.c	FUNCTION_1	IF_4	IF_5
0x2b1	             0x9ca	                             or edx, ecx	        80	reflog.c	FUNCTION_1	IF_4	IF_5
0x2b3	            0x8910	                    mov dword [rax], edx	        80	reflog.c	FUNCTION_1	IF_4	IF_5
0x2b5	      0xb800000000	                              mov eax, 0	        81	reflog.c	FUNCTION_1	IF_4	IF_5
0x2ba	      0xe9fe000000	                           jmp 0x40003fd	        81	reflog.c	FUNCTION_1	IF_4	IF_5
0x2bf	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        83	reflog.c	FUNCTION_1	IF_4
0x2c3	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	        83	reflog.c	FUNCTION_1	IF_4
0x2c7	        0x48895018	             mov qword [rax + 0x18], rdx	        83	reflog.c	FUNCTION_1	IF_4
0x2cb	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	        84	reflog.c	FUNCTION_1	IF_4
0x2cf	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        84	reflog.c	FUNCTION_1	IF_4
0x2d3	        0x48895020	             mov qword [rax + 0x20], rdx	        84	reflog.c	FUNCTION_1	IF_4
0x2d7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        86	reflog.c	FUNCTION_1	CALL_3
0x2db	        0x488b5020	            mov rdx, qword [rax + 0x20] 	        86	reflog.c	FUNCTION_1	CALL_3
0x2df	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        86	reflog.c	FUNCTION_1	CALL_3
0x2e3	        0x488b4818	            mov rcx, qword [rax + 0x18] 	        86	reflog.c	FUNCTION_1	CALL_3
0x2e7	        0x488d45d0	                   lea rax, [rbp - 0x30]	        86	reflog.c	FUNCTION_1	CALL_3
0x2eb	          0x4889ce	                            mov rsi, rcx	        86	reflog.c	FUNCTION_1	CALL_3
0x2ee	          0x4889c7	                            mov rdi, rax	        86	reflog.c	FUNCTION_1	CALL_3
0x2f1	      0xe800000000	                          call 0x4000336	        86	reflog.c	FUNCTION_1	CALL_3
0x2f6	    0xc7459c010000	               mov dword [rbp - 0x64], 1	        87	reflog.c	FUNCTION_1
0x2fd	            0xeb64	                           jmp 0x40003a3	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x2ff	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        89	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_5
0x303	          0x4889c7	                            mov rdi, rax	        89	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_5
0x306	      0xe893feffff	                  call sym.has_sha1_file	        89	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_5
0x30b	            0x85c0	                           test eax, eax	        89	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_5
0x30d	            0x741f	                            je 0x400036e	        89	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_5
0x30f	          0x8b45c0	             mov eax, dword [rbp - 0x40]	        90	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_7
0x312	      0x2500f00000	                         and eax, 0xf000	        90	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_7
0x317	      0x3d00400000	                         cmp eax, 0x4000	        89	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_5
0x31c	            0x7545	                           jne 0x40003a3	        89	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_5
0x31e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        90	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_7
0x322	          0x4889c7	                            mov rdi, rax	        90	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_7
0x325	      0xe8b2feffff	               call sym.tree_is_complete	        90	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_7
0x32a	            0x85c0	                           test eax, eax	        90	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_7
0x32c	            0x7535	                           jne 0x40003a3	        90	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_7
0x32e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        91	reflog.c	FUNCTION_1	WHILE_1	IF_6
0x332	            0x8b00	                    mov eax, dword [rax]	        91	reflog.c	FUNCTION_1	WHILE_1	IF_6
0x334	          0xc1e804	                              shr eax, 4	        91	reflog.c	FUNCTION_1	WHILE_1	IF_6
0x337	      0x25ffffff07	                      and eax, 0x7ffffff	        91	reflog.c	FUNCTION_1	WHILE_1	IF_6
0x33c	          0x80cc04	                                or ah, 4	        91	reflog.c	FUNCTION_1	WHILE_1	IF_6
0x33f	            0x89c2	                            mov edx, eax	        91	reflog.c	FUNCTION_1	WHILE_1	IF_6
0x341	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        91	reflog.c	FUNCTION_1	WHILE_1	IF_6
0x345	    0x81e2ffffff07	                      and edx, 0x7ffffff	        91	reflog.c	FUNCTION_1	WHILE_1	IF_6
0x34b	            0x89d1	                            mov ecx, edx	        91	reflog.c	FUNCTION_1	WHILE_1	IF_6
0x34d	          0xc1e104	                              shl ecx, 4	        91	reflog.c	FUNCTION_1	WHILE_1	IF_6
0x350	            0x8b10	                    mov edx, dword [rax]	        91	reflog.c	FUNCTION_1	WHILE_1	IF_6
0x352	    0x81e20f000080	                     and edx, 0x8000000f	        91	reflog.c	FUNCTION_1	WHILE_1	IF_6
0x358	             0x9ca	                             or edx, ecx	        91	reflog.c	FUNCTION_1	WHILE_1	IF_6
0x35a	            0x8910	                    mov dword [rax], edx	        91	reflog.c	FUNCTION_1	WHILE_1	IF_6
0x35c	    0xc7459c000000	               mov dword [rbp - 0x64], 0	        92	reflog.c	FUNCTION_1	WHILE_1	IF_6
0x363	        0x488d55b0	                   lea rdx, [rbp - 0x50]	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x367	        0x488d45d0	                   lea rax, [rbp - 0x30]	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x36b	          0x4889d6	                            mov rsi, rdx	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x36e	          0x4889c7	                            mov rdi, rax	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x371	      0xe800000000	                          call 0x40003b6	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x376	            0x85c0	                           test eax, eax	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x378	            0x7585	                           jne 0x400033f	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x37a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        95	reflog.c	FUNCTION_1	CALL_8
0x37e	          0x4889c7	                            mov rdi, rax	        95	reflog.c	FUNCTION_1	CALL_8
0x381	      0xe800000000	                          call 0x40003c6	        95	reflog.c	FUNCTION_1	CALL_8
0x386	        0x837d9c00	               cmp dword [rbp - 0x64], 0	        97	reflog.c	FUNCTION_1	IF_7
0x38a	            0x742e	                            je 0x40003fa	        97	reflog.c	FUNCTION_1	IF_7
0x38c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        98	reflog.c	FUNCTION_1	IF_7
0x390	            0x8b00	                    mov eax, dword [rax]	        98	reflog.c	FUNCTION_1	IF_7
0x392	          0xc1e804	                              shr eax, 4	        98	reflog.c	FUNCTION_1	IF_7
0x395	      0x25ffffff07	                      and eax, 0x7ffffff	        98	reflog.c	FUNCTION_1	IF_7
0x39a	          0x83c801	                               or eax, 1	        98	reflog.c	FUNCTION_1	IF_7
0x39d	            0x89c2	                            mov edx, eax	        98	reflog.c	FUNCTION_1	IF_7
0x39f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        98	reflog.c	FUNCTION_1	IF_7
0x3a3	    0x81e2ffffff07	                      and edx, 0x7ffffff	        98	reflog.c	FUNCTION_1	IF_7
0x3a9	            0x89d1	                            mov ecx, edx	        98	reflog.c	FUNCTION_1	IF_7
0x3ab	          0xc1e104	                              shl ecx, 4	        98	reflog.c	FUNCTION_1	IF_7
0x3ae	            0x8b10	                    mov edx, dword [rax]	        98	reflog.c	FUNCTION_1	IF_7
0x3b0	    0x81e20f000080	                     and edx, 0x8000000f	        98	reflog.c	FUNCTION_1	IF_7
0x3b6	             0x9ca	                             or edx, ecx	        98	reflog.c	FUNCTION_1	IF_7
0x3b8	            0x8910	                    mov dword [rax], edx	        98	reflog.c	FUNCTION_1	IF_7
0x3ba	          0x8b459c	             mov eax, dword [rbp - 0x64]	        99	reflog.c	FUNCTION_1
0x3bd	        0x488b75f8	                mov rsi, qword [rbp - 8]	       100	reflog.c	FUNCTION_1
0x3c1	    0x644833342528	                xor rsi, qword fs:[0x28]	       100	reflog.c	FUNCTION_1
0x3ca	            0x7405	                            je 0x4000411	       100	reflog.c	FUNCTION_1
0x3cc	      0xe800000000	                          call 0x4000411	       100	reflog.c	FUNCTION_1
0x3d1	              0xc9	                                   leave	       100	reflog.c	FUNCTION_1
0x3d2	              0xc3	                                     ret	       100	reflog.c	FUNCTION_1
push_tip_to_list	IF,2:ELSE,0:FOR,0:SWITCH,0:DO,0:WHILE,0:CALL,2:functions,0	32
0xca8	              0x55	                                push rbp	       318	reflog.c	FUNCTION_7
0xca9	          0x4889e5	                            mov rbp, rsp	       318	reflog.c	FUNCTION_7
0xcac	        0x4883ec30	                           sub rsp, 0x30	       318	reflog.c	FUNCTION_7
0xcb0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       318	reflog.c	FUNCTION_7
0xcb4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       318	reflog.c	FUNCTION_7
0xcb8	          0x8955dc	             mov dword [rbp - 0x24], edx	       318	reflog.c	FUNCTION_7
0xcbb	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       318	reflog.c	FUNCTION_7
0xcbf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       319	reflog.c	FUNCTION_7
0xcc3	        0x488945f0	             mov qword [rbp - 0x10], rax	       319	reflog.c	FUNCTION_7
0xcc7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       321	reflog.c	FUNCTION_7	IF_1
0xcca	          0x83e001	                              and eax, 1	       321	reflog.c	FUNCTION_7	IF_1
0xccd	            0x85c0	                           test eax, eax	       321	reflog.c	FUNCTION_7	IF_1
0xccf	            0x7407	                            je 0x4000d18	       321	reflog.c	FUNCTION_7	IF_1
0xcd1	      0xb800000000	                              mov eax, 0	       322	reflog.c	FUNCTION_7	IF_1
0xcd6	            0xeb3b	                           jmp 0x4000d53	       322	reflog.c	FUNCTION_7	IF_1
0xcd8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       323	reflog.c	FUNCTION_7	CALL_1
0xcdc	      0xbe01000000	                              mov esi, 1	       323	reflog.c	FUNCTION_7	CALL_1
0xce1	          0x4889c7	                            mov rdi, rax	       323	reflog.c	FUNCTION_7	CALL_1
0xce4	      0xe800000000	                          call 0x4000d29	       323	reflog.c	FUNCTION_7	CALL_1
0xce9	        0x488945f8	                mov qword [rbp - 8], rax	       323	reflog.c	FUNCTION_7	CALL_1
0xced	      0x48837df800	                  cmp qword [rbp - 8], 0	       324	reflog.c	FUNCTION_7	IF_2
0xcf2	            0x7507	                           jne 0x4000d3b	       324	reflog.c	FUNCTION_7	IF_2
0xcf4	      0xb800000000	                              mov eax, 0	       325	reflog.c	FUNCTION_7	IF_2
0xcf9	            0xeb18	                           jmp 0x4000d53	       325	reflog.c	FUNCTION_7	IF_2
0xcfb	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       326	reflog.c	FUNCTION_7	CALL_2
0xcff	        0x488b45f8	                mov rax, qword [rbp - 8]	       326	reflog.c	FUNCTION_7	CALL_2
0xd03	          0x4889d6	                            mov rsi, rdx	       326	reflog.c	FUNCTION_7	CALL_2
0xd06	          0x4889c7	                            mov rdi, rax	       326	reflog.c	FUNCTION_7	CALL_2
0xd09	      0xe800000000	                          call 0x4000d4e	       326	reflog.c	FUNCTION_7	CALL_2
0xd0e	      0xb800000000	                              mov eax, 0	       327	reflog.c	FUNCTION_7
0xd13	              0xc9	                                   leave	       328	reflog.c	FUNCTION_7
0xd14	              0xc3	                                     ret	       328	reflog.c	FUNCTION_7
cmd_reflog_expire	IF,17:ELSE,10:FOR,3:SWITCH,0:DO,0:WHILE,0:CALL,35:functions,0	316
0x1466	              0x55	                                push rbp	       508	reflog.c	FUNCTION_14
0x1467	          0x4889e5	                            mov rbp, rsp	       508	reflog.c	FUNCTION_14
0x146a	    0x4881ec800900	                          sub rsp, 0x980	       508	reflog.c	FUNCTION_14
0x1471	    0x89bd9cf6ffff	            mov dword [rbp - 0x964], edi	       508	reflog.c	FUNCTION_14
0x1477	    0x4889b590f6ff	            mov qword [rbp - 0x970], rsi	       508	reflog.c	FUNCTION_14
0x147e	    0x48899588f6ff	            mov qword [rbp - 0x978], rdx	       508	reflog.c	FUNCTION_14
0x1485	    0x64488b042528	                mov rax, qword fs:[0x28]	       508	reflog.c	FUNCTION_14
0x148e	        0x488945f8	                mov qword [rbp - 8], rax	       508	reflog.c	FUNCTION_14
0x1492	            0x31c0	                            xor eax, eax	       508	reflog.c	FUNCTION_14
0x1494	      0xbf00000000	                              mov edi, 0	       510	reflog.c	FUNCTION_14	CALL_1
0x1499	      0xe800000000	                          call 0x40014de	       510	reflog.c	FUNCTION_14	CALL_1
0x149e	    0x488985b8f6ff	            mov qword [rbp - 0x948], rax	       510	reflog.c	FUNCTION_14	CALL_1
0x14a5	    0xc785acf6ffff	              mov dword [rbp - 0x954], 0	       512	reflog.c	FUNCTION_14
0x14af	    0xc785b0f6ffff	              mov dword [rbp - 0x950], 0	       513	reflog.c	FUNCTION_14
0x14b9	    0x488b85b8f6ff	            mov rax, qword [rbp - 0x948]	       515	reflog.c	FUNCTION_14
0x14c0	    0x482d008d2700	                       sub rax, 0x278d00	       515	reflog.c	FUNCTION_14
0x14c6	    0x488905000000	            mov qword [0x0400150d], rax 	       515	reflog.c	FUNCTION_14
0x14cd	    0x488b85b8f6ff	            mov rax, qword [rbp - 0x948]	       516	reflog.c	FUNCTION_14
0x14d4	    0x482d00a77600	                       sub rax, 0x76a700	       516	reflog.c	FUNCTION_14
0x14da	    0x488905000000	            mov qword [0x04001521], rax 	       516	reflog.c	FUNCTION_14
0x14e1	      0xbe00000000	                              mov esi, 0	       517	reflog.c	FUNCTION_14	CALL_2
0x14e6	      0xbf00000000	                              mov edi, 0	       517	reflog.c	FUNCTION_14	CALL_2
0x14eb	      0xe800000000	                          call 0x4001530	       517	reflog.c	FUNCTION_14	CALL_2
0x14f0	    0xc70500000000	               mov dword [0x0400153a], 0	       519	reflog.c	FUNCTION_14
0x14fa	    0xc785a4f6ffff	              mov dword [rbp - 0x95c], 0	       520	reflog.c	FUNCTION_14
0x1504	    0x8b85a4f6ffff	            mov eax, dword [rbp - 0x95c]	       520	reflog.c	FUNCTION_14
0x150a	    0x8985a8f6ffff	            mov dword [rbp - 0x958], eax	       520	reflog.c	FUNCTION_14
0x1510	    0x488d8500f7ff	                  lea rax, [rbp - 0x900]	       521	reflog.c	FUNCTION_14	CALL_3
0x1517	      0xbaf8080000	                          mov edx, 0x8f8	       521	reflog.c	FUNCTION_14	CALL_3
0x151c	      0xbe00000000	                              mov esi, 0	       521	reflog.c	FUNCTION_14	CALL_3
0x1521	          0x4889c7	                            mov rdi, rax	       521	reflog.c	FUNCTION_14	CALL_3
0x1524	      0xe800000000	                          call 0x4001569	       521	reflog.c	FUNCTION_14	CALL_3
0x1529	    0x488b05000000	            mov rax, qword [0x04001570] 	       523	reflog.c	FUNCTION_14
0x1530	        0x488945d0	             mov qword [rbp - 0x30], rax	       523	reflog.c	FUNCTION_14
0x1534	    0x488b05000000	            mov rax, qword [0x0400157b] 	       524	reflog.c	FUNCTION_14
0x153b	        0x488945d8	             mov qword [rbp - 0x28], rax	       524	reflog.c	FUNCTION_14
0x153f	    0xc785a0f6ffff	              mov dword [rbp - 0x960], 1	       526	reflog.c	FUNCTION_14	FOR_1
0x1549	      0xe92e020000	                           jmp 0x40017bc	       526	reflog.c	FUNCTION_14	FOR_1
0x154e	    0x8b85a0f6ffff	            mov eax, dword [rbp - 0x960]	       527	reflog.c	FUNCTION_14	FOR_1
0x1554	            0x4898	                                    cdqe	       527	reflog.c	FUNCTION_14	FOR_1
0x1556	    0x488d14c50000	                        lea rdx, [rax*8]	       527	reflog.c	FUNCTION_14	FOR_1
0x155e	    0x488b8590f6ff	            mov rax, qword [rbp - 0x970]	       527	reflog.c	FUNCTION_14	FOR_1
0x1565	          0x4801d0	                            add rax, rdx	       527	reflog.c	FUNCTION_14	FOR_1
0x1568	          0x488b00	                    mov rax, qword [rax]	       527	reflog.c	FUNCTION_14	FOR_1
0x156b	    0x488985c0f6ff	            mov qword [rbp - 0x940], rax	       527	reflog.c	FUNCTION_14	FOR_1
0x1572	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       528	reflog.c	FUNCTION_14	FOR_1	IF_1	CALL_5
0x1579	      0xbe00000000	                              mov esi, 0	       528	reflog.c	FUNCTION_14	FOR_1	IF_1	CALL_5
0x157e	          0x4889c7	                            mov rdi, rax	       528	reflog.c	FUNCTION_14	FOR_1	IF_1	CALL_5
0x1581	      0xe800000000	                          call 0x40015c6	       528	reflog.c	FUNCTION_14	FOR_1	IF_1	CALL_5
0x1586	            0x85c0	                           test eax, eax	       528	reflog.c	FUNCTION_14	FOR_1	IF_1	CALL_5
0x1588	            0x7418	                            je 0x40015e2	       528	reflog.c	FUNCTION_14	FOR_1	IF_1	CALL_5
0x158a	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       528	reflog.c	FUNCTION_14	FOR_1	IF_1	CALL_5
0x1591	      0xbe00000000	                              mov esi, 0	       528	reflog.c	FUNCTION_14	FOR_1	IF_1	CALL_5
0x1596	          0x4889c7	                            mov rdi, rax	       528	reflog.c	FUNCTION_14	FOR_1	IF_1	CALL_5
0x1599	      0xe800000000	                          call 0x40015de	       528	reflog.c	FUNCTION_14	FOR_1	IF_1	CALL_5
0x159e	            0x85c0	                           test eax, eax	       528	reflog.c	FUNCTION_14	FOR_1	IF_1	CALL_5
0x15a0	            0x750c	                           jne 0x40015ee	       528	reflog.c	FUNCTION_14	FOR_1	IF_1	CALL_5
0x15a2	    0x838db0f6ffff	               or dword [rbp - 0x950], 1	       529	reflog.c	FUNCTION_14	FOR_1	IF_1
0x15a9	      0xe9c7010000	                           jmp 0x40017b5	       529	reflog.c	FUNCTION_14	FOR_1	IF_1
0x15ae	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       530	reflog.c	FUNCTION_14	FOR_1	ELSE_1	IF_2	CALL_6
0x15b5	      0xbe00000000	                              mov esi, 0	       530	reflog.c	FUNCTION_14	FOR_1	ELSE_1	IF_2	CALL_6
0x15ba	          0x4889c7	                            mov rdi, rax	       530	reflog.c	FUNCTION_14	FOR_1	ELSE_1	IF_2	CALL_6
0x15bd	      0xe800000000	                          call 0x4001602	       530	reflog.c	FUNCTION_14	FOR_1	ELSE_1	IF_2	CALL_6
0x15c2	            0x85c0	                           test eax, eax	       530	reflog.c	FUNCTION_14	FOR_1	ELSE_1	IF_2	CALL_6
0x15c4	            0x7458	                            je 0x400165e	       530	reflog.c	FUNCTION_14	FOR_1	ELSE_1	IF_2	CALL_6
0x15c6	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       531	reflog.c	FUNCTION_14	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x15cd	        0x4883c009	                              add rax, 9	       531	reflog.c	FUNCTION_14	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x15d1	    0x488d9500f7ff	                  lea rdx, [rbp - 0x900]	       531	reflog.c	FUNCTION_14	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x15d8	    0x4881c2d00800	                          add rdx, 0x8d0	       531	reflog.c	FUNCTION_14	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x15df	          0x4889d6	                            mov rsi, rdx	       531	reflog.c	FUNCTION_14	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x15e2	          0x4889c7	                            mov rdi, rax	       531	reflog.c	FUNCTION_14	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x15e5	      0xe800000000	                          call 0x400162a	       531	reflog.c	FUNCTION_14	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x15ea	            0x85c0	                           test eax, eax	       531	reflog.c	FUNCTION_14	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x15ec	            0x7424	                            je 0x4001652	       531	reflog.c	FUNCTION_14	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x15ee	      0xbf00000000	                              mov edi, 0	       532	reflog.c	FUNCTION_14	FOR_1	ELSE_1	IF_2	CALL_9
0x15f3	      0xe8a9eaffff	                               call sym.	       532	reflog.c	FUNCTION_14	FOR_1	ELSE_1	IF_2	CALL_9
0x15f8	          0x4889c2	                            mov rdx, rax	       532	reflog.c	FUNCTION_14	FOR_1	ELSE_1	IF_2	CALL_9
0x15fb	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       532	reflog.c	FUNCTION_14	FOR_1	ELSE_1	IF_2	CALL_9
0x1602	          0x4889c6	                            mov rsi, rax	       532	reflog.c	FUNCTION_14	FOR_1	ELSE_1	IF_2	CALL_9
0x1605	          0x4889d7	                            mov rdi, rdx	       532	reflog.c	FUNCTION_14	FOR_1	ELSE_1	IF_2	CALL_9
0x1608	      0xb800000000	                              mov eax, 0	       532	reflog.c	FUNCTION_14	FOR_1	ELSE_1	IF_2	CALL_9
0x160d	      0xe800000000	                          call 0x4001652	       532	reflog.c	FUNCTION_14	FOR_1	ELSE_1	IF_2	CALL_9
0x1612	    0x838dacf6ffff	               or dword [rbp - 0x954], 1	       533	reflog.c	FUNCTION_14	FOR_1	ELSE_1	IF_2
0x1619	      0xe957010000	                           jmp 0x40017b5	       533	reflog.c	FUNCTION_14	FOR_1	ELSE_1	IF_2
0x161e	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       535	reflog.c	FUNCTION_14	FOR_1	ELSE_2	IF_4	CALL_10
0x1625	      0xbe00000000	                              mov esi, 0	       535	reflog.c	FUNCTION_14	FOR_1	ELSE_2	IF_4	CALL_10
0x162a	          0x4889c7	                            mov rdi, rax	       535	reflog.c	FUNCTION_14	FOR_1	ELSE_2	IF_4	CALL_10
0x162d	      0xe800000000	                          call 0x4001672	       535	reflog.c	FUNCTION_14	FOR_1	ELSE_2	IF_4	CALL_10
0x1632	            0x85c0	                           test eax, eax	       535	reflog.c	FUNCTION_14	FOR_1	ELSE_2	IF_4	CALL_10
0x1634	            0x7458	                            je 0x40016ce	       535	reflog.c	FUNCTION_14	FOR_1	ELSE_2	IF_4	CALL_10
0x1636	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       536	reflog.c	FUNCTION_14	FOR_1	ELSE_2	IF_4	IF_5	CALL_11
0x163d	        0x4883c015	                           add rax, 0x15	       536	reflog.c	FUNCTION_14	FOR_1	ELSE_2	IF_4	IF_5	CALL_11
0x1641	    0x488d9500f7ff	                  lea rdx, [rbp - 0x900]	       536	reflog.c	FUNCTION_14	FOR_1	ELSE_2	IF_4	IF_5	CALL_11
0x1648	    0x4881c2d80800	                          add rdx, 0x8d8	       536	reflog.c	FUNCTION_14	FOR_1	ELSE_2	IF_4	IF_5	CALL_11
0x164f	          0x4889d6	                            mov rsi, rdx	       536	reflog.c	FUNCTION_14	FOR_1	ELSE_2	IF_4	IF_5	CALL_11
0x1652	          0x4889c7	                            mov rdi, rax	       536	reflog.c	FUNCTION_14	FOR_1	ELSE_2	IF_4	IF_5	CALL_11
0x1655	      0xe800000000	                          call 0x400169a	       536	reflog.c	FUNCTION_14	FOR_1	ELSE_2	IF_4	IF_5	CALL_11
0x165a	            0x85c0	                           test eax, eax	       536	reflog.c	FUNCTION_14	FOR_1	ELSE_2	IF_4	IF_5	CALL_11
0x165c	            0x7424	                            je 0x40016c2	       536	reflog.c	FUNCTION_14	FOR_1	ELSE_2	IF_4	IF_5	CALL_11
0x165e	      0xbf00000000	                              mov edi, 0	       537	reflog.c	FUNCTION_14	FOR_1	ELSE_2	IF_4	CALL_13
0x1663	      0xe839eaffff	                               call sym.	       537	reflog.c	FUNCTION_14	FOR_1	ELSE_2	IF_4	CALL_13
0x1668	          0x4889c2	                            mov rdx, rax	       537	reflog.c	FUNCTION_14	FOR_1	ELSE_2	IF_4	CALL_13
0x166b	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       537	reflog.c	FUNCTION_14	FOR_1	ELSE_2	IF_4	CALL_13
0x1672	          0x4889c6	                            mov rsi, rax	       537	reflog.c	FUNCTION_14	FOR_1	ELSE_2	IF_4	CALL_13
0x1675	          0x4889d7	                            mov rdi, rdx	       537	reflog.c	FUNCTION_14	FOR_1	ELSE_2	IF_4	CALL_13
0x1678	      0xb800000000	                              mov eax, 0	       537	reflog.c	FUNCTION_14	FOR_1	ELSE_2	IF_4	CALL_13
0x167d	      0xe800000000	                          call 0x40016c2	       537	reflog.c	FUNCTION_14	FOR_1	ELSE_2	IF_4	CALL_13
0x1682	    0x838dacf6ffff	               or dword [rbp - 0x954], 2	       538	reflog.c	FUNCTION_14	FOR_1	ELSE_2	IF_4
0x1689	      0xe9e7000000	                           jmp 0x40017b5	       538	reflog.c	FUNCTION_14	FOR_1	ELSE_2	IF_4
0x168e	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       540	reflog.c	FUNCTION_14	FOR_1	ELSE_3	IF_6	CALL_14
0x1695	      0xbe00000000	                              mov esi, 0	       540	reflog.c	FUNCTION_14	FOR_1	ELSE_3	IF_6	CALL_14
0x169a	          0x4889c7	                            mov rdi, rax	       540	reflog.c	FUNCTION_14	FOR_1	ELSE_3	IF_6	CALL_14
0x169d	      0xe800000000	                          call 0x40016e2	       540	reflog.c	FUNCTION_14	FOR_1	ELSE_3	IF_6	CALL_14
0x16a2	            0x85c0	                           test eax, eax	       540	reflog.c	FUNCTION_14	FOR_1	ELSE_3	IF_6	CALL_14
0x16a4	            0x750c	                           jne 0x40016f2	       540	reflog.c	FUNCTION_14	FOR_1	ELSE_3	IF_6	CALL_14
0x16a6	    0xc745c8010000	               mov dword [rbp - 0x38], 1	       541	reflog.c	FUNCTION_14	FOR_1	ELSE_3	IF_6
0x16ad	      0xe9c3000000	                           jmp 0x40017b5	       541	reflog.c	FUNCTION_14	FOR_1	ELSE_3	IF_6
0x16b2	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       542	reflog.c	FUNCTION_14	FOR_1	ELSE_4	IF_7	CALL_15
0x16b9	      0xbe00000000	                              mov esi, 0	       542	reflog.c	FUNCTION_14	FOR_1	ELSE_4	IF_7	CALL_15
0x16be	          0x4889c7	                            mov rdi, rax	       542	reflog.c	FUNCTION_14	FOR_1	ELSE_4	IF_7	CALL_15
0x16c1	      0xe800000000	                          call 0x4001706	       542	reflog.c	FUNCTION_14	FOR_1	ELSE_4	IF_7	CALL_15
0x16c6	            0x85c0	                           test eax, eax	       542	reflog.c	FUNCTION_14	FOR_1	ELSE_4	IF_7	CALL_15
0x16c8	            0x750c	                           jne 0x4001716	       542	reflog.c	FUNCTION_14	FOR_1	ELSE_4	IF_7	CALL_15
0x16ca	    0x838db0f6ffff	               or dword [rbp - 0x950], 8	       543	reflog.c	FUNCTION_14	FOR_1	ELSE_4	IF_7
0x16d1	      0xe99f000000	                           jmp 0x40017b5	       543	reflog.c	FUNCTION_14	FOR_1	ELSE_4	IF_7
0x16d6	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       544	reflog.c	FUNCTION_14	FOR_1	ELSE_5	IF_8	CALL_16
0x16dd	      0xbe00000000	                              mov esi, 0	       544	reflog.c	FUNCTION_14	FOR_1	ELSE_5	IF_8	CALL_16
0x16e2	          0x4889c7	                            mov rdi, rax	       544	reflog.c	FUNCTION_14	FOR_1	ELSE_5	IF_8	CALL_16
0x16e5	      0xe800000000	                          call 0x400172a	       544	reflog.c	FUNCTION_14	FOR_1	ELSE_5	IF_8	CALL_16
0x16ea	            0x85c0	                           test eax, eax	       544	reflog.c	FUNCTION_14	FOR_1	ELSE_5	IF_8	CALL_16
0x16ec	            0x7509	                           jne 0x4001737	       544	reflog.c	FUNCTION_14	FOR_1	ELSE_5	IF_8	CALL_16
0x16ee	    0x838db0f6ffff	               or dword [rbp - 0x950], 2	       545	reflog.c	FUNCTION_14	FOR_1	ELSE_5	IF_8
0x16f5	            0xeb7e	                           jmp 0x40017b5	       545	reflog.c	FUNCTION_14	FOR_1	ELSE_5	IF_8
0x16f7	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       546	reflog.c	FUNCTION_14	FOR_1	ELSE_6	IF_9	CALL_17
0x16fe	      0xbe00000000	                              mov esi, 0	       546	reflog.c	FUNCTION_14	FOR_1	ELSE_6	IF_9	CALL_17
0x1703	          0x4889c7	                            mov rdi, rax	       546	reflog.c	FUNCTION_14	FOR_1	ELSE_6	IF_9	CALL_17
0x1706	      0xe800000000	                          call 0x400174b	       546	reflog.c	FUNCTION_14	FOR_1	ELSE_6	IF_9	CALL_17
0x170b	            0x85c0	                           test eax, eax	       546	reflog.c	FUNCTION_14	FOR_1	ELSE_6	IF_9	CALL_17
0x170d	            0x750c	                           jne 0x400175b	       546	reflog.c	FUNCTION_14	FOR_1	ELSE_6	IF_9	CALL_17
0x170f	    0xc785a8f6ffff	              mov dword [rbp - 0x958], 1	       547	reflog.c	FUNCTION_14	FOR_1	ELSE_6	IF_9
0x1719	            0xeb5a	                           jmp 0x40017b5	       547	reflog.c	FUNCTION_14	FOR_1	ELSE_6	IF_9
0x171b	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       548	reflog.c	FUNCTION_14	FOR_1	ELSE_7	IF_10	CALL_18
0x1722	      0xbe00000000	                              mov esi, 0	       548	reflog.c	FUNCTION_14	FOR_1	ELSE_7	IF_10	CALL_18
0x1727	          0x4889c7	                            mov rdi, rax	       548	reflog.c	FUNCTION_14	FOR_1	ELSE_7	IF_10	CALL_18
0x172a	      0xe800000000	                          call 0x400176f	       548	reflog.c	FUNCTION_14	FOR_1	ELSE_7	IF_10	CALL_18
0x172f	            0x85c0	                           test eax, eax	       548	reflog.c	FUNCTION_14	FOR_1	ELSE_7	IF_10	CALL_18
0x1731	            0x7509	                           jne 0x400177c	       548	reflog.c	FUNCTION_14	FOR_1	ELSE_7	IF_10	CALL_18
0x1733	    0x838db0f6ffff	               or dword [rbp - 0x950], 4	       549	reflog.c	FUNCTION_14	FOR_1	ELSE_7	IF_10
0x173a	            0xeb39	                           jmp 0x40017b5	       549	reflog.c	FUNCTION_14	FOR_1	ELSE_7	IF_10
0x173c	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       550	reflog.c	FUNCTION_14	FOR_1	ELSE_8	IF_11	CALL_19
0x1743	      0xbe00000000	                              mov esi, 0	       550	reflog.c	FUNCTION_14	FOR_1	ELSE_8	IF_11	CALL_19
0x1748	          0x4889c7	                            mov rdi, rax	       550	reflog.c	FUNCTION_14	FOR_1	ELSE_8	IF_11	CALL_19
0x174b	      0xe800000000	                          call 0x4001790	       550	reflog.c	FUNCTION_14	FOR_1	ELSE_8	IF_11	CALL_19
0x1750	            0x85c0	                           test eax, eax	       550	reflog.c	FUNCTION_14	FOR_1	ELSE_8	IF_11	CALL_19
0x1752	            0x7509	                           jne 0x400179d	       550	reflog.c	FUNCTION_14	FOR_1	ELSE_8	IF_11	CALL_19
0x1754	    0x8385a0f6ffff	              add dword [rbp - 0x960], 1	       551	reflog.c	FUNCTION_14	FOR_1	ELSE_8	IF_11
0x175b	            0xeb34	                           jmp 0x40017d1	       552	reflog.c	FUNCTION_14	FOR_1	ELSE_8	IF_11
0x175d	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       554	reflog.c	FUNCTION_14	FOR_1	ELSE_9	IF_12
0x1764	           0xfb600	                   movzx eax, byte [rax]	       554	reflog.c	FUNCTION_14	FOR_1	ELSE_9	IF_12
0x1767	            0x3c2d	                            cmp al, 0x2d	       554	reflog.c	FUNCTION_14	FOR_1	ELSE_9	IF_12
0x1769	            0x7525	                           jne 0x40017d0	       554	reflog.c	FUNCTION_14	FOR_1	ELSE_9	IF_12
0x176b	      0xbf00000000	                              mov edi, 0	       555	reflog.c	FUNCTION_14	FOR_1	ELSE_9	IF_12
0x1770	      0xe800000000	                          call 0x40017b5	       555	reflog.c	FUNCTION_14	FOR_1	ELSE_9	IF_12
0x1775	    0x8385a0f6ffff	              add dword [rbp - 0x960], 1	       526	reflog.c	FUNCTION_14	FOR_1
0x177c	    0x8b85a0f6ffff	            mov eax, dword [rbp - 0x960]	       526	reflog.c	FUNCTION_14	FOR_1
0x1782	    0x3b859cf6ffff	            cmp eax, dword [rbp - 0x964]	       526	reflog.c	FUNCTION_14	FOR_1
0x1788	     0xf8cc0fdffff	                            jl 0x400158e	       526	reflog.c	FUNCTION_14	FOR_1
0x178e	            0xeb01	                           jmp 0x40017d1	       526	reflog.c	FUNCTION_14	FOR_1
0x1790	              0x90	                                     nop	       557	reflog.c	FUNCTION_14	FOR_1	ELSE_10
0x1791	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       565	reflog.c	FUNCTION_14	ELSE_10	IF_13
0x1794	            0x85c0	                           test eax, eax	       565	reflog.c	FUNCTION_14	ELSE_10	IF_13
0x1796	            0x7472	                            je 0x400184a	       565	reflog.c	FUNCTION_14	ELSE_10	IF_13
0x1798	    0x488b8588f6ff	            mov rax, qword [rbp - 0x978]	       566	reflog.c	FUNCTION_14	ELSE_10	IF_13	CALL_21
0x179f	    0x488d9500f7ff	                  lea rdx, [rbp - 0x900]	       566	reflog.c	FUNCTION_14	ELSE_10	IF_13	CALL_21
0x17a6	        0x4883c218	                           add rdx, 0x18	       566	reflog.c	FUNCTION_14	ELSE_10	IF_13	CALL_21
0x17aa	          0x4889c6	                            mov rsi, rax	       566	reflog.c	FUNCTION_14	ELSE_10	IF_13	CALL_21
0x17ad	          0x4889d7	                            mov rdi, rdx	       566	reflog.c	FUNCTION_14	ELSE_10	IF_13	CALL_21
0x17b0	      0xe800000000	                          call 0x40017f5	       566	reflog.c	FUNCTION_14	ELSE_10	IF_13	CALL_21
0x17b5	    0x8b85b0f6ffff	            mov eax, dword [rbp - 0x950]	       567	reflog.c	FUNCTION_14	ELSE_10	IF_13	IF_14
0x17bb	          0x83e004	                              and eax, 4	       567	reflog.c	FUNCTION_14	ELSE_10	IF_13	IF_14
0x17be	            0x85c0	                           test eax, eax	       567	reflog.c	FUNCTION_14	ELSE_10	IF_13	IF_14
0x17c0	            0x740f	                            je 0x4001811	       567	reflog.c	FUNCTION_14	ELSE_10	IF_13	IF_14
0x17c2	      0xbf00000000	                              mov edi, 0	       568	reflog.c	FUNCTION_14	ELSE_10	IF_13	CALL_22
0x17c7	      0xb800000000	                              mov eax, 0	       568	reflog.c	FUNCTION_14	ELSE_10	IF_13	CALL_22
0x17cc	      0xe800000000	                          call 0x4001811	       568	reflog.c	FUNCTION_14	ELSE_10	IF_13	CALL_22
0x17d1	    0x488d8500f7ff	                  lea rax, [rbp - 0x900]	       569	reflog.c	FUNCTION_14	ELSE_10	IF_13	CALL_23
0x17d8	        0x4883c018	                           add rax, 0x18	       569	reflog.c	FUNCTION_14	ELSE_10	IF_13	CALL_23
0x17dc	      0xb900000000	                              mov ecx, 0	       569	reflog.c	FUNCTION_14	ELSE_10	IF_13	CALL_23
0x17e1	      0xba00000000	                              mov edx, 0	       569	reflog.c	FUNCTION_14	ELSE_10	IF_13	CALL_23
0x17e6	      0xbe00000000	                              mov esi, 0	       569	reflog.c	FUNCTION_14	ELSE_10	IF_13	CALL_23
0x17eb	          0x4889c7	                            mov rdi, rax	       569	reflog.c	FUNCTION_14	ELSE_10	IF_13	CALL_23
0x17ee	      0xe800000000	                          call 0x4001833	       569	reflog.c	FUNCTION_14	ELSE_10	IF_13	CALL_23
0x17f3	    0x8b85b0f6ffff	            mov eax, dword [rbp - 0x950]	       570	reflog.c	FUNCTION_14	ELSE_10	IF_13	IF_15
0x17f9	          0x83e004	                              and eax, 4	       570	reflog.c	FUNCTION_14	ELSE_10	IF_13	IF_15
0x17fc	            0x85c0	                           test eax, eax	       570	reflog.c	FUNCTION_14	ELSE_10	IF_13	IF_15
0x17fe	            0x740a	                            je 0x400184a	       570	reflog.c	FUNCTION_14	ELSE_10	IF_13	IF_15
0x1800	      0xbf0a000000	                            mov edi, 0xa	       571	reflog.c	FUNCTION_14	ELSE_10	IF_13	CALL_24
0x1805	      0xe800000000	                          call 0x400184a	       571	reflog.c	FUNCTION_14	ELSE_10	IF_13	CALL_24
0x180a	    0x83bda8f6ffff	              cmp dword [rbp - 0x958], 0	       574	reflog.c	FUNCTION_14	IF_16
0x1811	     0xf840c020000	                            je 0x4001a63	       574	reflog.c	FUNCTION_14	IF_16
0x1817	    0x488d85d0f6ff	                  lea rax, [rbp - 0x930]	       578	reflog.c	FUNCTION_14	IF_16	CALL_25
0x181e	      0xba10000000	                           mov edx, 0x10	       578	reflog.c	FUNCTION_14	IF_16	CALL_25
0x1823	      0xbe00000000	                              mov esi, 0	       578	reflog.c	FUNCTION_14	IF_16	CALL_25
0x1828	          0x4889c7	                            mov rdi, rax	       578	reflog.c	FUNCTION_14	IF_16	CALL_25
0x182b	      0xe800000000	                          call 0x4001870	       578	reflog.c	FUNCTION_14	IF_16	CALL_25
0x1830	    0x488d85d0f6ff	                  lea rax, [rbp - 0x930]	       579	reflog.c	FUNCTION_14	IF_16	CALL_26
0x1837	          0x4889c6	                            mov rsi, rax	       579	reflog.c	FUNCTION_14	IF_16	CALL_26
0x183a	      0xbf00000000	                              mov edi, 0	       579	reflog.c	FUNCTION_14	IF_16	CALL_26
0x183f	      0xe800000000	                          call 0x4001884	       579	reflog.c	FUNCTION_14	IF_16	CALL_26
0x1844	    0xc785b4f6ffff	              mov dword [rbp - 0x94c], 0	       580	reflog.c	FUNCTION_14	IF_16	FOR_2
0x184e	      0xe9a4000000	                           jmp 0x4001937	       580	reflog.c	FUNCTION_14	IF_16	FOR_2
0x1853	    0x488b85d0f6ff	            mov rax, qword [rbp - 0x930]	       581	reflog.c	FUNCTION_14	IF_16	FOR_2
0x185a	    0x8b95b4f6ffff	            mov edx, dword [rbp - 0x94c]	       581	reflog.c	FUNCTION_14	IF_16	FOR_2
0x1860	          0x4863d2	                         movsxd rdx, edx	       581	reflog.c	FUNCTION_14	IF_16	FOR_2
0x1863	        0x48c1e203	                              shl rdx, 3	       581	reflog.c	FUNCTION_14	IF_16	FOR_2
0x1867	          0x4801d0	                            add rax, rdx	       581	reflog.c	FUNCTION_14	IF_16	FOR_2
0x186a	          0x488b00	                    mov rax, qword [rax]	       581	reflog.c	FUNCTION_14	IF_16	FOR_2
0x186d	    0x488985c8f6ff	            mov qword [rbp - 0x938], rax	       581	reflog.c	FUNCTION_14	IF_16	FOR_2
0x1874	    0x488b85c8f6ff	            mov rax, qword [rbp - 0x938]	       582	reflog.c	FUNCTION_14	IF_16	FOR_2	CALL_27
0x187b	        0x488d5014	                   lea rdx, [rax + 0x14]	       582	reflog.c	FUNCTION_14	IF_16	FOR_2	CALL_27
0x187f	    0x8b85acf6ffff	            mov eax, dword [rbp - 0x954]	       582	reflog.c	FUNCTION_14	IF_16	FOR_2	CALL_27
0x1885	    0x488d8d00f7ff	                  lea rcx, [rbp - 0x900]	       582	reflog.c	FUNCTION_14	IF_16	FOR_2	CALL_27
0x188c	        0x4883c118	                           add rcx, 0x18	       582	reflog.c	FUNCTION_14	IF_16	FOR_2	CALL_27
0x1890	            0x89c6	                            mov esi, eax	       582	reflog.c	FUNCTION_14	IF_16	FOR_2	CALL_27
0x1892	          0x4889cf	                            mov rdi, rcx	       582	reflog.c	FUNCTION_14	IF_16	FOR_2	CALL_27
0x1895	      0xe8a1faffff	        call sym.set_reflog_expiry_param	       582	reflog.c	FUNCTION_14	IF_16	FOR_2	CALL_27
0x189a	    0x488b85c8f6ff	            mov rax, qword [rbp - 0x938]	       583	reflog.c	FUNCTION_14	IF_16	FOR_2	CALL_28
0x18a1	    0x488b95c8f6ff	            mov rdx, qword [rbp - 0x938]	       583	reflog.c	FUNCTION_14	IF_16	FOR_2	CALL_28
0x18a8	        0x488d7a14	                   lea rdi, [rdx + 0x14]	       583	reflog.c	FUNCTION_14	IF_16	FOR_2	CALL_28
0x18ac	    0x8b95b0f6ffff	            mov edx, dword [rbp - 0x950]	       583	reflog.c	FUNCTION_14	IF_16	FOR_2	CALL_28
0x18b2	        0x4883ec08	                              sub rsp, 8	       583	reflog.c	FUNCTION_14	IF_16	FOR_2	CALL_28
0x18b6	    0x488d8d00f7ff	                  lea rcx, [rbp - 0x900]	       583	reflog.c	FUNCTION_14	IF_16	FOR_2	CALL_28
0x18bd	              0x51	                                push rcx	       583	reflog.c	FUNCTION_14	IF_16	FOR_2	CALL_28
0x18be	    0x41b900000000	                              mov r9d, 0	       583	reflog.c	FUNCTION_14	IF_16	FOR_2	CALL_28
0x18c4	    0x41b800000000	                              mov r8d, 0	       583	reflog.c	FUNCTION_14	IF_16	FOR_2	CALL_28
0x18ca	      0xb900000000	                              mov ecx, 0	       583	reflog.c	FUNCTION_14	IF_16	FOR_2	CALL_28
0x18cf	          0x4889c6	                            mov rsi, rax	       583	reflog.c	FUNCTION_14	IF_16	FOR_2	CALL_28
0x18d2	      0xe800000000	                          call 0x4001917	       583	reflog.c	FUNCTION_14	IF_16	FOR_2	CALL_28
0x18d7	        0x4883c410	                           add rsp, 0x10	       583	reflog.c	FUNCTION_14	IF_16	FOR_2	CALL_28
0x18db	     0x985a4f6ffff	             or dword [rbp - 0x95c], eax	       583	reflog.c	FUNCTION_14	IF_16	FOR_2	CALL_28
0x18e1	    0x488b85c8f6ff	            mov rax, qword [rbp - 0x938]	       588	reflog.c	FUNCTION_14	IF_16	FOR_2	CALL_29
0x18e8	          0x4889c7	                            mov rdi, rax	       588	reflog.c	FUNCTION_14	IF_16	FOR_2	CALL_29
0x18eb	      0xe800000000	                          call 0x4001930	       588	reflog.c	FUNCTION_14	IF_16	FOR_2	CALL_29
0x18f0	    0x8385b4f6ffff	              add dword [rbp - 0x94c], 1	       580	reflog.c	FUNCTION_14	IF_16	FOR_2
0x18f7	    0x8b85dcf6ffff	            mov eax, dword [rbp - 0x924]	       580	reflog.c	FUNCTION_14	IF_16	FOR_2
0x18fd	    0x3b85b4f6ffff	            cmp eax, dword [rbp - 0x94c]	       580	reflog.c	FUNCTION_14	IF_16	FOR_2
0x1903	     0xf8f4affffff	                            jg 0x4001893	       580	reflog.c	FUNCTION_14	IF_16	FOR_2
0x1909	    0x488b85d0f6ff	            mov rax, qword [rbp - 0x930]	       590	reflog.c	FUNCTION_14	IF_16	CALL_30
0x1910	          0x4889c7	                            mov rdi, rax	       590	reflog.c	FUNCTION_14	IF_16	CALL_30
0x1913	      0xe800000000	                          call 0x4001958	       590	reflog.c	FUNCTION_14	IF_16	CALL_30
0x1918	      0xe906010000	                           jmp 0x4001a63	       593	reflog.c	FUNCTION_14	FOR_3
0x191d	    0x8b85a0f6ffff	            mov eax, dword [rbp - 0x960]	       596	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_32
0x1923	            0x4898	                                    cdqe	       596	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_32
0x1925	    0x488d14c50000	                        lea rdx, [rax*8]	       596	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_32
0x192d	    0x488b8590f6ff	            mov rax, qword [rbp - 0x970]	       596	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_32
0x1934	          0x4801d0	                            add rax, rdx	       596	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_32
0x1937	          0x488b00	                    mov rax, qword [rax]	       596	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_32
0x193a	          0x4889c7	                            mov rdi, rax	       596	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_32
0x193d	      0xe800000000	                          call 0x4001982	       596	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_32
0x1942	            0x89c6	                            mov esi, eax	       596	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_32
0x1944	    0x8b85a0f6ffff	            mov eax, dword [rbp - 0x960]	       596	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_32
0x194a	            0x4898	                                    cdqe	       596	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_32
0x194c	    0x488d14c50000	                        lea rdx, [rax*8]	       596	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_32
0x1954	    0x488b8590f6ff	            mov rax, qword [rbp - 0x970]	       596	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_32
0x195b	          0x4801d0	                            add rax, rdx	       596	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_32
0x195e	          0x488b00	                    mov rax, qword [rax]	       596	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_32
0x1961	    0x488d8dd0f6ff	                  lea rcx, [rbp - 0x930]	       596	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_32
0x1968	    0x488d95e0f6ff	                  lea rdx, [rbp - 0x920]	       596	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_32
0x196f	          0x4889c7	                            mov rdi, rax	       596	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_32
0x1972	      0xe800000000	                          call 0x40019b7	       596	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_32
0x1977	            0x85c0	                           test eax, eax	       596	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_32
0x1979	            0x753c	                           jne 0x40019f7	       596	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_32
0x197b	    0x8b85a0f6ffff	            mov eax, dword [rbp - 0x960]	       597	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_33
0x1981	            0x4898	                                    cdqe	       597	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_33
0x1983	    0x488d14c50000	                        lea rdx, [rax*8]	       597	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_33
0x198b	    0x488b8590f6ff	            mov rax, qword [rbp - 0x970]	       597	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_33
0x1992	          0x4801d0	                            add rax, rdx	       597	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_33
0x1995	          0x488b00	                    mov rax, qword [rax]	       597	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_33
0x1998	          0x4889c6	                            mov rsi, rax	       597	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_33
0x199b	      0xbf00000000	                              mov edi, 0	       597	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_33
0x19a0	      0xb800000000	                              mov eax, 0	       597	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_33
0x19a5	      0xe800000000	                          call 0x40019ea	       597	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_33
0x19aa	      0xe851e6ffff	                    call sym.const_error	       597	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_33
0x19af	     0x985a4f6ffff	             or dword [rbp - 0x95c], eax	       597	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_33
0x19b5	            0xeb65	                           jmp 0x4001a5c	       597	reflog.c	FUNCTION_14	FOR_3	IF_17	CALL_33
0x19b7	    0x488b95d0f6ff	            mov rdx, qword [rbp - 0x930]	       600	reflog.c	FUNCTION_14	FOR_3	CALL_34
0x19be	    0x8b85acf6ffff	            mov eax, dword [rbp - 0x954]	       600	reflog.c	FUNCTION_14	FOR_3	CALL_34
0x19c4	    0x488d8d00f7ff	                  lea rcx, [rbp - 0x900]	       600	reflog.c	FUNCTION_14	FOR_3	CALL_34
0x19cb	        0x4883c118	                           add rcx, 0x18	       600	reflog.c	FUNCTION_14	FOR_3	CALL_34
0x19cf	            0x89c6	                            mov esi, eax	       600	reflog.c	FUNCTION_14	FOR_3	CALL_34
0x19d1	          0x4889cf	                            mov rdi, rcx	       600	reflog.c	FUNCTION_14	FOR_3	CALL_34
0x19d4	      0xe862f9ffff	        call sym.set_reflog_expiry_param	       600	reflog.c	FUNCTION_14	FOR_3	CALL_34
0x19d9	    0x488b85d0f6ff	            mov rax, qword [rbp - 0x930]	       601	reflog.c	FUNCTION_14	FOR_3	CALL_35
0x19e0	    0x8b95b0f6ffff	            mov edx, dword [rbp - 0x950]	       601	reflog.c	FUNCTION_14	FOR_3	CALL_35
0x19e6	    0x488db5e0f6ff	                  lea rsi, [rbp - 0x920]	       601	reflog.c	FUNCTION_14	FOR_3	CALL_35
0x19ed	        0x4883ec08	                              sub rsp, 8	       601	reflog.c	FUNCTION_14	FOR_3	CALL_35
0x19f1	    0x488d8d00f7ff	                  lea rcx, [rbp - 0x900]	       601	reflog.c	FUNCTION_14	FOR_3	CALL_35
0x19f8	              0x51	                                push rcx	       601	reflog.c	FUNCTION_14	FOR_3	CALL_35
0x19f9	    0x41b900000000	                              mov r9d, 0	       601	reflog.c	FUNCTION_14	FOR_3	CALL_35
0x19ff	    0x41b800000000	                              mov r8d, 0	       601	reflog.c	FUNCTION_14	FOR_3	CALL_35
0x1a05	      0xb900000000	                              mov ecx, 0	       601	reflog.c	FUNCTION_14	FOR_3	CALL_35
0x1a0a	          0x4889c7	                            mov rdi, rax	       601	reflog.c	FUNCTION_14	FOR_3	CALL_35
0x1a0d	      0xe800000000	                          call 0x4001a52	       601	reflog.c	FUNCTION_14	FOR_3	CALL_35
0x1a12	        0x4883c410	                           add rsp, 0x10	       601	reflog.c	FUNCTION_14	FOR_3	CALL_35
0x1a16	     0x985a4f6ffff	             or dword [rbp - 0x95c], eax	       601	reflog.c	FUNCTION_14	FOR_3	CALL_35
0x1a1c	    0x8385a0f6ffff	              add dword [rbp - 0x960], 1	       593	reflog.c	FUNCTION_14	FOR_3
0x1a23	    0x8b85a0f6ffff	            mov eax, dword [rbp - 0x960]	       593	reflog.c	FUNCTION_14	FOR_3
0x1a29	    0x3b859cf6ffff	            cmp eax, dword [rbp - 0x964]	       593	reflog.c	FUNCTION_14	FOR_3
0x1a2f	     0xf8ce8feffff	                            jl 0x400195d	       593	reflog.c	FUNCTION_14	FOR_3
0x1a35	    0x8b85a4f6ffff	            mov eax, dword [rbp - 0x95c]	       607	reflog.c	FUNCTION_14
0x1a3b	        0x488b4df8	                mov rcx, qword [rbp - 8]	       608	reflog.c	FUNCTION_14
0x1a3f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       608	reflog.c	FUNCTION_14
0x1a48	            0x7405	                            je 0x4001a8f	       608	reflog.c	FUNCTION_14
0x1a4a	      0xe800000000	                          call 0x4001a8f	       608	reflog.c	FUNCTION_14
0x1a4f	              0xc9	                                   leave	       608	reflog.c	FUNCTION_14
0x1a50	              0xc3	                                     ret	       608	reflog.c	FUNCTION_14
st_mult	IF,1:ELSE,0:FOR,0:SWITCH,0:DO,0:WHILE,0:CALL,2:functions,0	22
0x4f	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_33
0x50	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_33
0x53	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_33
0x57	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_33
0x5b	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_33
0x5f	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_33	IF_1	CALL_1
0x64	            0x7430	                            je 0x40000d6	       795	git-compat-util.h	FUNCTION_33	IF_1	CALL_1
0x66	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_33	IF_1	CALL_1
0x6d	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_33	IF_1	CALL_1
0x72	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_33	IF_1	CALL_1
0x76	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_33	IF_1	CALL_1
0x7a	            0x731a	                           jae 0x40000d6	       795	git-compat-util.h	FUNCTION_33	IF_1	CALL_1
0x7c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_33	IF_1	CALL_2
0x80	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_33	IF_1	CALL_2
0x84	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_33	IF_1	CALL_2
0x87	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_33	IF_1	CALL_2
0x8c	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_33	IF_1	CALL_2
0x91	      0xe800000000	                          call 0x40000d6	       796	git-compat-util.h	FUNCTION_33	IF_1	CALL_2
0x96	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_33
0x9a	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_33
0x9f	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_33
0xa0	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_33
reflog_expiry_prepare	IF,5:ELSE,3:FOR,1:SWITCH,0:DO,0:WHILE,0:CALL,6:functions,0	98
0xd15	              0x55	                                push rbp	       333	reflog.c	FUNCTION_8
0xd16	          0x4889e5	                            mov rbp, rsp	       333	reflog.c	FUNCTION_8
0xd19	        0x4883ec30	                           sub rsp, 0x30	       333	reflog.c	FUNCTION_8
0xd1d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       333	reflog.c	FUNCTION_8
0xd21	        0x488975e0	             mov qword [rbp - 0x20], rsi	       333	reflog.c	FUNCTION_8
0xd25	        0x488955d8	             mov qword [rbp - 0x28], rdx	       333	reflog.c	FUNCTION_8
0xd29	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       334	reflog.c	FUNCTION_8
0xd2d	        0x488945f8	                mov qword [rbp - 8], rax	       334	reflog.c	FUNCTION_8
0xd31	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0xd35	    0x488b80d80800	           mov rax, qword [rax + 0x8d8] 	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0xd3c	          0x4885c0	                           test rax, rax	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0xd3f	            0x7415	                            je 0x4000d96	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0xd41	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0xd45	      0xbe00000000	                              mov esi, 0	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0xd4a	          0x4889c7	                            mov rdi, rax	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0xd4d	      0xe800000000	                          call 0x4000d92	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0xd52	            0x85c0	                           test eax, eax	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0xd54	            0x751b	                           jne 0x4000db1	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0xd56	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	reflog.c	FUNCTION_8	IF_1
0xd5a	    0x48c780e80800	              mov qword [rax + 0x8e8], 0	       337	reflog.c	FUNCTION_8	IF_1
0xd65	        0x488b45f8	                mov rax, qword [rbp - 8]	       338	reflog.c	FUNCTION_8	IF_1
0xd69	    0xc70002000000	                      mov dword [rax], 2	       338	reflog.c	FUNCTION_8	IF_1
0xd6f	            0xeb45	                           jmp 0x4000df6	       338	reflog.c	FUNCTION_8	IF_1
0xd71	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       340	reflog.c	FUNCTION_8	ELSE_1	CALL_2
0xd75	      0xbe01000000	                              mov esi, 1	       340	reflog.c	FUNCTION_8	ELSE_1	CALL_2
0xd7a	          0x4889c7	                            mov rdi, rax	       340	reflog.c	FUNCTION_8	ELSE_1	CALL_2
0xd7d	      0xe800000000	                          call 0x4000dc2	       340	reflog.c	FUNCTION_8	ELSE_1	CALL_2
0xd82	          0x4889c2	                            mov rdx, rax	       340	reflog.c	FUNCTION_8	ELSE_1	CALL_2
0xd85	        0x488b45f8	                mov rax, qword [rbp - 8]	       340	reflog.c	FUNCTION_8	ELSE_1	CALL_2
0xd89	    0x488990e80800	            mov qword [rax + 0x8e8], rdx	       340	reflog.c	FUNCTION_8	ELSE_1	CALL_2
0xd90	        0x488b45f8	                mov rax, qword [rbp - 8]	       341	reflog.c	FUNCTION_8	ELSE_1	IF_2
0xd94	    0x488b80e80800	           mov rax, qword [rax + 0x8e8] 	       341	reflog.c	FUNCTION_8	ELSE_1	IF_2
0xd9b	          0x4885c0	                           test rax, rax	       341	reflog.c	FUNCTION_8	ELSE_1	IF_2
0xd9e	            0x750c	                           jne 0x4000dec	       341	reflog.c	FUNCTION_8	ELSE_1	IF_2
0xda0	        0x488b45f8	                mov rax, qword [rbp - 8]	       342	reflog.c	FUNCTION_8	ELSE_1	IF_2
0xda4	    0xc70001000000	                      mov dword [rax], 1	       342	reflog.c	FUNCTION_8	ELSE_1	IF_2
0xdaa	            0xeb0a	                           jmp 0x4000df6	       342	reflog.c	FUNCTION_8	ELSE_1	IF_2
0xdac	        0x488b45f8	                mov rax, qword [rbp - 8]	       344	reflog.c	FUNCTION_8	ELSE_1	ELSE_2
0xdb0	    0xc70000000000	                      mov dword [rax], 0	       344	reflog.c	FUNCTION_8	ELSE_1	ELSE_2
0xdb6	        0x488b45f8	                mov rax, qword [rbp - 8]	       347	reflog.c	FUNCTION_8	IF_3
0xdba	    0x488b90d80800	           mov rdx, qword [rax + 0x8d8] 	       347	reflog.c	FUNCTION_8	IF_3
0xdc1	        0x488b45f8	                mov rax, qword [rbp - 8]	       347	reflog.c	FUNCTION_8	IF_3
0xdc5	    0x488b80d00800	           mov rax, qword [rax + 0x8d0] 	       347	reflog.c	FUNCTION_8	IF_3
0xdcc	          0x4839c2	                            cmp rdx, rax	       347	reflog.c	FUNCTION_8	IF_3
0xdcf	            0x770a	                            ja 0x4000e1b	       347	reflog.c	FUNCTION_8	IF_3
0xdd1	        0x488b45f8	                mov rax, qword [rbp - 8]	       348	reflog.c	FUNCTION_8	IF_3
0xdd5	    0xc70001000000	                      mov dword [rax], 1	       348	reflog.c	FUNCTION_8	IF_3
0xddb	        0x488b45f8	                mov rax, qword [rbp - 8]	       350	reflog.c	FUNCTION_8
0xddf	    0x48c740080000	                  mov qword [rax + 8], 0	       350	reflog.c	FUNCTION_8
0xde7	        0x488b45f8	                mov rax, qword [rbp - 8]	       351	reflog.c	FUNCTION_8
0xdeb	    0x48c780f00800	              mov qword [rax + 0x8f0], 0	       351	reflog.c	FUNCTION_8
0xdf6	        0x488b45f8	                mov rax, qword [rbp - 8]	       352	reflog.c	FUNCTION_8	IF_4
0xdfa	            0x8b00	                    mov eax, dword [rax]	       352	reflog.c	FUNCTION_8	IF_4
0xdfc	          0x83f801	                              cmp eax, 1	       352	reflog.c	FUNCTION_8	IF_4
0xdff	     0xf849f000000	                            je 0x4000ee4	       352	reflog.c	FUNCTION_8	IF_4
0xe05	        0x488b45f8	                mov rax, qword [rbp - 8]	       353	reflog.c	FUNCTION_8	IF_4	IF_5
0xe09	            0x8b00	                    mov eax, dword [rax]	       353	reflog.c	FUNCTION_8	IF_4	IF_5
0xe0b	          0x83f802	                              cmp eax, 2	       353	reflog.c	FUNCTION_8	IF_4	IF_5
0xe0e	            0x7557	                           jne 0x4000ea7	       353	reflog.c	FUNCTION_8	IF_4	IF_5
0xe10	        0x488b45f8	                mov rax, qword [rbp - 8]	       356	reflog.c	FUNCTION_8	IF_4	IF_5	CALL_3
0xe14	    0x4805f0080000	                          add rax, 0x8f0	       356	reflog.c	FUNCTION_8	IF_4	IF_5	CALL_3
0xe1a	          0x4889c6	                            mov rsi, rax	       356	reflog.c	FUNCTION_8	IF_4	IF_5	CALL_3
0xe1d	      0xbf00000000	                              mov edi, 0	       356	reflog.c	FUNCTION_8	IF_4	IF_5	CALL_3
0xe22	      0xe800000000	                          call 0x4000e67	       356	reflog.c	FUNCTION_8	IF_4	IF_5	CALL_3
0xe27	        0x488b45f8	                mov rax, qword [rbp - 8]	       357	reflog.c	FUNCTION_8	IF_4	IF_5	FOR_1
0xe2b	    0x488b80f00800	           mov rax, qword [rax + 0x8f0] 	       357	reflog.c	FUNCTION_8	IF_4	IF_5	FOR_1
0xe32	        0x488945f0	             mov qword [rbp - 0x10], rax	       357	reflog.c	FUNCTION_8	IF_4	IF_5	FOR_1
0xe36	            0xeb26	                           jmp 0x4000e9e	       357	reflog.c	FUNCTION_8	IF_4	IF_5	FOR_1
0xe38	        0x488b45f8	                mov rax, qword [rbp - 8]	       358	reflog.c	FUNCTION_8	IF_4	IF_5	CALL_4
0xe3c	        0x488d5008	                      lea rdx, [rax + 8]	       358	reflog.c	FUNCTION_8	IF_4	IF_5	CALL_4
0xe40	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       358	reflog.c	FUNCTION_8	IF_4	IF_5	CALL_4
0xe44	          0x488b00	                    mov rax, qword [rax]	       358	reflog.c	FUNCTION_8	IF_4	IF_5	CALL_4
0xe47	          0x4889d6	                            mov rsi, rdx	       358	reflog.c	FUNCTION_8	IF_4	IF_5	CALL_4
0xe4a	          0x4889c7	                            mov rdi, rax	       358	reflog.c	FUNCTION_8	IF_4	IF_5	CALL_4
0xe4d	      0xe800000000	                          call 0x4000e92	       358	reflog.c	FUNCTION_8	IF_4	IF_5	CALL_4
0xe52	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       357	reflog.c	FUNCTION_8	IF_4	IF_5	FOR_1
0xe56	        0x488b4008	                mov rax, qword [rax + 8]	       357	reflog.c	FUNCTION_8	IF_4	IF_5	FOR_1
0xe5a	        0x488945f0	             mov qword [rbp - 0x10], rax	       357	reflog.c	FUNCTION_8	IF_4	IF_5	FOR_1
0xe5e	      0x48837df000	               cmp qword [rbp - 0x10], 0	       357	reflog.c	FUNCTION_8	IF_4	IF_5	FOR_1
0xe63	            0x75d3	                           jne 0x4000e78	       357	reflog.c	FUNCTION_8	IF_4	IF_5	FOR_1
0xe65	            0xeb1e	                           jmp 0x4000ec5	       357	reflog.c	FUNCTION_8	IF_4	IF_5	FOR_1
0xe67	        0x488b45f8	                mov rax, qword [rbp - 8]	       360	reflog.c	FUNCTION_8	IF_4	ELSE_3	CALL_5
0xe6b	        0x488d5008	                      lea rdx, [rax + 8]	       360	reflog.c	FUNCTION_8	IF_4	ELSE_3	CALL_5
0xe6f	        0x488b45f8	                mov rax, qword [rbp - 8]	       360	reflog.c	FUNCTION_8	IF_4	ELSE_3	CALL_5
0xe73	    0x488b80e80800	           mov rax, qword [rax + 0x8e8] 	       360	reflog.c	FUNCTION_8	IF_4	ELSE_3	CALL_5
0xe7a	          0x4889d6	                            mov rsi, rdx	       360	reflog.c	FUNCTION_8	IF_4	ELSE_3	CALL_5
0xe7d	          0x4889c7	                            mov rdi, rax	       360	reflog.c	FUNCTION_8	IF_4	ELSE_3	CALL_5
0xe80	      0xe800000000	                          call 0x4000ec5	       360	reflog.c	FUNCTION_8	IF_4	ELSE_3	CALL_5
0xe85	        0x488b45f8	                mov rax, qword [rbp - 8]	       362	reflog.c	FUNCTION_8	IF_4
0xe89	    0x488b90d00800	           mov rdx, qword [rax + 0x8d0] 	       362	reflog.c	FUNCTION_8	IF_4
0xe90	        0x488b45f8	                mov rax, qword [rbp - 8]	       362	reflog.c	FUNCTION_8	IF_4
0xe94	        0x48895010	             mov qword [rax + 0x10], rdx	       362	reflog.c	FUNCTION_8	IF_4
0xe98	        0x488b45f8	                mov rax, qword [rbp - 8]	       363	reflog.c	FUNCTION_8	IF_4	CALL_6
0xe9c	          0x4889c7	                            mov rdi, rax	       363	reflog.c	FUNCTION_8	IF_4	CALL_6
0xe9f	      0xe8faf9ffff	                 call sym.mark_reachable	       363	reflog.c	FUNCTION_8	IF_4	CALL_6
0xea4	              0x90	                                     nop	       365	reflog.c	FUNCTION_8
0xea5	              0xc9	                                   leave	       365	reflog.c	FUNCTION_8
0xea6	              0xc3	                                     ret	       365	reflog.c	FUNCTION_8
keep_entry	IF,3:ELSE,0:FOR,0:SWITCH,0:DO,0:WHILE,0:CALL,3:functions,0	34
0x82b	              0x55	                                push rbp	       192	reflog.c	FUNCTION_3
0x82c	          0x4889e5	                            mov rbp, rsp	       192	reflog.c	FUNCTION_3
0x82f	        0x4883ec20	                           sub rsp, 0x20	       192	reflog.c	FUNCTION_3
0x833	        0x48897de8	             mov qword [rbp - 0x18], rdi	       192	reflog.c	FUNCTION_3
0x837	        0x488975e0	             mov qword [rbp - 0x20], rsi	       192	reflog.c	FUNCTION_3
0x83b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       195	reflog.c	FUNCTION_3	IF_1	CALL_1
0x83f	          0x4889c7	                            mov rdi, rax	       195	reflog.c	FUNCTION_3	IF_1	CALL_1
0x842	      0xe8b0f8ffff	                    call sym.is_null_oid	       195	reflog.c	FUNCTION_3	IF_1	CALL_1
0x847	            0x85c0	                           test eax, eax	       195	reflog.c	FUNCTION_3	IF_1	CALL_1
0x849	            0x7407	                            je 0x4000892	       195	reflog.c	FUNCTION_3	IF_1	CALL_1
0x84b	      0xb801000000	                              mov eax, 1	       196	reflog.c	FUNCTION_3	IF_1
0x850	            0xeb4a	                           jmp 0x40008dc	       196	reflog.c	FUNCTION_3	IF_1
0x852	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       197	reflog.c	FUNCTION_3	CALL_2
0x856	      0xbe01000000	                              mov esi, 1	       197	reflog.c	FUNCTION_3	CALL_2
0x85b	          0x4889c7	                            mov rdi, rax	       197	reflog.c	FUNCTION_3	CALL_2
0x85e	      0xe800000000	                          call 0x40008a3	       197	reflog.c	FUNCTION_3	CALL_2
0x863	        0x488945f8	                mov qword [rbp - 8], rax	       197	reflog.c	FUNCTION_3	CALL_2
0x867	      0x48837df800	                  cmp qword [rbp - 8], 0	       198	reflog.c	FUNCTION_3	IF_2
0x86c	            0x7507	                           jne 0x40008b5	       198	reflog.c	FUNCTION_3	IF_2
0x86e	      0xb800000000	                              mov eax, 0	       199	reflog.c	FUNCTION_3	IF_2
0x873	            0xeb27	                           jmp 0x40008dc	       199	reflog.c	FUNCTION_3	IF_2
0x875	        0x488b45f8	                mov rax, qword [rbp - 8]	       209	reflog.c	FUNCTION_3	IF_3	CALL_3
0x879	          0x4889c7	                            mov rdi, rax	       209	reflog.c	FUNCTION_3	IF_3	CALL_3
0x87c	      0xe852fbffff	             call sym.commit_is_complete	       209	reflog.c	FUNCTION_3	IF_3	CALL_3
0x881	            0x85c0	                           test eax, eax	       209	reflog.c	FUNCTION_3	IF_3	CALL_3
0x883	            0x7507	                           jne 0x40008cc	       209	reflog.c	FUNCTION_3	IF_3	CALL_3
0x885	      0xb800000000	                              mov eax, 0	       210	reflog.c	FUNCTION_3	IF_3
0x88a	            0xeb10	                           jmp 0x40008dc	       210	reflog.c	FUNCTION_3	IF_3
0x88c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       211	reflog.c	FUNCTION_3
0x890	        0x488b55f8	                mov rdx, qword [rbp - 8]	       211	reflog.c	FUNCTION_3
0x894	          0x488910	                    mov qword [rax], rdx	       211	reflog.c	FUNCTION_3
0x897	      0xb801000000	                              mov eax, 1	       212	reflog.c	FUNCTION_3
0x89c	              0xc9	                                   leave	       213	reflog.c	FUNCTION_3
0x89d	              0xc3	                                     ret	       213	reflog.c	FUNCTION_3
parse_commit	IF,0:ELSE,0:FOR,0:SWITCH,0:DO,0:WHILE,0:CALL,1:functions,0	10
0x1bd	              0x55	                                push rbp	        74	commit.h	FUNCTION_46
0x1be	          0x4889e5	                            mov rbp, rsp	        74	commit.h	FUNCTION_46
0x1c1	        0x4883ec10	                           sub rsp, 0x10	        74	commit.h	FUNCTION_46
0x1c5	        0x48897df8	                mov qword [rbp - 8], rdi	        74	commit.h	FUNCTION_46
0x1c9	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	commit.h	FUNCTION_46	CALL_1
0x1cd	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_46	CALL_1
0x1d2	          0x4889c7	                            mov rdi, rax	        75	commit.h	FUNCTION_46	CALL_1
0x1d5	      0xe800000000	                          call 0x400021a	        75	commit.h	FUNCTION_46	CALL_1
0x1da	              0xc9	                                   leave	        76	commit.h	FUNCTION_46
0x1db	              0xc3	                                     ret	        76	commit.h	FUNCTION_46
commit_is_complete	IF,10:ELSE,2:FOR,5:SWITCH,0:DO,0:WHILE,1:CALL,12:functions,0	317
0x3d3	              0x55	                                push rbp	       103	reflog.c	FUNCTION_2
0x3d4	          0x4889e5	                            mov rbp, rsp	       103	reflog.c	FUNCTION_2
0x3d7	        0x4883ec70	                           sub rsp, 0x70	       103	reflog.c	FUNCTION_2
0x3db	        0x48897d98	             mov qword [rbp - 0x68], rdi	       103	reflog.c	FUNCTION_2
0x3df	    0x64488b042528	                mov rax, qword fs:[0x28]	       103	reflog.c	FUNCTION_2
0x3e8	        0x488945f8	                mov qword [rbp - 8], rax	       103	reflog.c	FUNCTION_2
0x3ec	            0x31c0	                            xor eax, eax	       103	reflog.c	FUNCTION_2
0x3ee	    0xc745a8000000	               mov dword [rbp - 0x58], 0	       106	reflog.c	FUNCTION_2
0x3f5	        0x488b4598	             mov rax, qword [rbp - 0x68]	       110	reflog.c	FUNCTION_2	IF_1
0x3f9	            0x8b00	                    mov eax, dword [rax]	       110	reflog.c	FUNCTION_2	IF_1
0x3fb	          0xc1e804	                              shr eax, 4	       110	reflog.c	FUNCTION_2	IF_1
0x3fe	      0x25ffffff07	                      and eax, 0x7ffffff	       110	reflog.c	FUNCTION_2	IF_1
0x403	          0x83e001	                              and eax, 1	       110	reflog.c	FUNCTION_2	IF_1
0x406	            0x85c0	                           test eax, eax	       110	reflog.c	FUNCTION_2	IF_1
0x408	            0x740a	                            je 0x4000454	       110	reflog.c	FUNCTION_2	IF_1
0x40a	      0xb801000000	                              mov eax, 1	       111	reflog.c	FUNCTION_2	IF_1
0x40f	      0xe901040000	                           jmp 0x4000855	       111	reflog.c	FUNCTION_2	IF_1
0x414	        0x488b4598	             mov rax, qword [rbp - 0x68]	       112	reflog.c	FUNCTION_2	IF_2
0x418	            0x8b00	                    mov eax, dword [rax]	       112	reflog.c	FUNCTION_2	IF_2
0x41a	          0xc1e804	                              shr eax, 4	       112	reflog.c	FUNCTION_2	IF_2
0x41d	      0x25ffffff07	                      and eax, 0x7ffffff	       112	reflog.c	FUNCTION_2	IF_2
0x422	      0x2500040000	                          and eax, 0x400	       112	reflog.c	FUNCTION_2	IF_2
0x427	            0x85c0	                           test eax, eax	       112	reflog.c	FUNCTION_2	IF_2
0x429	            0x740a	                            je 0x4000475	       112	reflog.c	FUNCTION_2	IF_2
0x42b	      0xb800000000	                              mov eax, 0	       113	reflog.c	FUNCTION_2	IF_2
0x430	      0xe9e0030000	                           jmp 0x4000855	       113	reflog.c	FUNCTION_2	IF_2
0x435	        0x488d45d0	                   lea rax, [rbp - 0x30]	       121	reflog.c	FUNCTION_2	CALL_1
0x439	      0xba10000000	                           mov edx, 0x10	       121	reflog.c	FUNCTION_2	CALL_1
0x43e	      0xbe00000000	                              mov esi, 0	       121	reflog.c	FUNCTION_2	CALL_1
0x443	          0x4889c7	                            mov rdi, rax	       121	reflog.c	FUNCTION_2	CALL_1
0x446	      0xe800000000	                          call 0x400048b	       121	reflog.c	FUNCTION_2	CALL_1
0x44b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       122	reflog.c	FUNCTION_2	CALL_2
0x44f	      0xba10000000	                           mov edx, 0x10	       122	reflog.c	FUNCTION_2	CALL_2
0x454	      0xbe00000000	                              mov esi, 0	       122	reflog.c	FUNCTION_2	CALL_2
0x459	          0x4889c7	                            mov rdi, rax	       122	reflog.c	FUNCTION_2	CALL_2
0x45c	      0xe800000000	                          call 0x40004a1	       122	reflog.c	FUNCTION_2	CALL_2
0x461	        0x488b4598	             mov rax, qword [rbp - 0x68]	       123	reflog.c	FUNCTION_2	CALL_3
0x465	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       123	reflog.c	FUNCTION_2	CALL_3
0x469	      0xbe00000000	                              mov esi, 0	       123	reflog.c	FUNCTION_2	CALL_3
0x46e	          0x4889c7	                            mov rdi, rax	       123	reflog.c	FUNCTION_2	CALL_3
0x471	      0xe800000000	                          call 0x40004b6	       123	reflog.c	FUNCTION_2	CALL_3
0x476	        0x488b4598	             mov rax, qword [rbp - 0x68]	       124	reflog.c	FUNCTION_2	CALL_4
0x47a	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       124	reflog.c	FUNCTION_2	CALL_4
0x47e	      0xbe00000000	                              mov esi, 0	       124	reflog.c	FUNCTION_2	CALL_4
0x483	          0x4889c7	                            mov rdi, rax	       124	reflog.c	FUNCTION_2	CALL_4
0x486	      0xe800000000	                          call 0x40004cb	       124	reflog.c	FUNCTION_2	CALL_4
0x48b	        0x488b4598	             mov rax, qword [rbp - 0x68]	       125	reflog.c	FUNCTION_2
0x48f	            0x8b00	                    mov eax, dword [rax]	       125	reflog.c	FUNCTION_2
0x491	          0xc1e804	                              shr eax, 4	       125	reflog.c	FUNCTION_2
0x494	      0x25ffffff07	                      and eax, 0x7ffffff	       125	reflog.c	FUNCTION_2
0x499	          0x80cc08	                                or ah, 8	       125	reflog.c	FUNCTION_2
0x49c	            0x89c2	                            mov edx, eax	       125	reflog.c	FUNCTION_2
0x49e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       125	reflog.c	FUNCTION_2
0x4a2	    0x81e2ffffff07	                      and edx, 0x7ffffff	       125	reflog.c	FUNCTION_2
0x4a8	            0x89d1	                            mov ecx, edx	       125	reflog.c	FUNCTION_2
0x4aa	          0xc1e104	                              shl ecx, 4	       125	reflog.c	FUNCTION_2
0x4ad	            0x8b10	                    mov edx, dword [rax]	       125	reflog.c	FUNCTION_2
0x4af	    0x81e20f000080	                     and edx, 0x8000000f	       125	reflog.c	FUNCTION_2
0x4b5	             0x9ca	                             or edx, ecx	       125	reflog.c	FUNCTION_2
0x4b7	            0x8910	                    mov dword [rax], edx	       125	reflog.c	FUNCTION_2
0x4b9	      0xe943010000	                           jmp 0x4000641	       126	reflog.c	FUNCTION_2	WHILE_1
0x4be	        0x488d45d0	                   lea rax, [rbp - 0x30]	       130	reflog.c	FUNCTION_2	WHILE_1	CALL_5
0x4c2	          0x4889c7	                            mov rdi, rax	       130	reflog.c	FUNCTION_2	WHILE_1	CALL_5
0x4c5	      0xe800000000	                          call 0x400050a	       130	reflog.c	FUNCTION_2	WHILE_1	CALL_5
0x4ca	        0x488945b8	             mov qword [rbp - 0x48], rax	       130	reflog.c	FUNCTION_2	WHILE_1	CALL_5
0x4ce	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       131	reflog.c	FUNCTION_2	WHILE_1	IF_3	CALL_6
0x4d2	           0xfb600	                   movzx eax, byte [rax]	       131	reflog.c	FUNCTION_2	WHILE_1	IF_3	CALL_6
0x4d5	          0x83e001	                              and eax, 1	       131	reflog.c	FUNCTION_2	WHILE_1	IF_3	CALL_6
0x4d8	            0x84c0	                             test al, al	       131	reflog.c	FUNCTION_2	WHILE_1	IF_3	CALL_6
0x4da	            0x7543	                           jne 0x400055f	       131	reflog.c	FUNCTION_2	WHILE_1	IF_3	CALL_6
0x4dc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       131	reflog.c	FUNCTION_2	WHILE_1	IF_3	CALL_6
0x4e0	        0x4883c004	                              add rax, 4	       131	reflog.c	FUNCTION_2	WHILE_1	IF_3	CALL_6
0x4e4	          0x4889c7	                            mov rdi, rax	       131	reflog.c	FUNCTION_2	WHILE_1	IF_3	CALL_6
0x4e7	      0xe800000000	                          call 0x400052c	       131	reflog.c	FUNCTION_2	WHILE_1	IF_3	CALL_6
0x4ec	          0x4885c0	                           test rax, rax	       131	reflog.c	FUNCTION_2	WHILE_1	IF_3	CALL_6
0x4ef	            0x752e	                           jne 0x400055f	       131	reflog.c	FUNCTION_2	WHILE_1	IF_3	CALL_6
0x4f1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       132	reflog.c	FUNCTION_2	WHILE_1	IF_3
0x4f5	            0x8b00	                    mov eax, dword [rax]	       132	reflog.c	FUNCTION_2	WHILE_1	IF_3
0x4f7	          0xc1e804	                              shr eax, 4	       132	reflog.c	FUNCTION_2	WHILE_1	IF_3
0x4fa	      0x25ffffff07	                      and eax, 0x7ffffff	       132	reflog.c	FUNCTION_2	WHILE_1	IF_3
0x4ff	          0x80cc04	                                or ah, 4	       132	reflog.c	FUNCTION_2	WHILE_1	IF_3
0x502	            0x89c2	                            mov edx, eax	       132	reflog.c	FUNCTION_2	WHILE_1	IF_3
0x504	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       132	reflog.c	FUNCTION_2	WHILE_1	IF_3
0x508	    0x81e2ffffff07	                      and edx, 0x7ffffff	       132	reflog.c	FUNCTION_2	WHILE_1	IF_3
0x50e	            0x89d1	                            mov ecx, edx	       132	reflog.c	FUNCTION_2	WHILE_1	IF_3
0x510	          0xc1e104	                              shl ecx, 4	       132	reflog.c	FUNCTION_2	WHILE_1	IF_3
0x513	            0x8b10	                    mov edx, dword [rax]	       132	reflog.c	FUNCTION_2	WHILE_1	IF_3
0x515	    0x81e20f000080	                     and edx, 0x8000000f	       132	reflog.c	FUNCTION_2	WHILE_1	IF_3
0x51b	             0x9ca	                             or edx, ecx	       132	reflog.c	FUNCTION_2	WHILE_1	IF_3
0x51d	            0x8910	                    mov dword [rax], edx	       132	reflog.c	FUNCTION_2	WHILE_1	IF_3
0x51f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       134	reflog.c	FUNCTION_2	WHILE_1	IF_4
0x523	            0x8b00	                    mov eax, dword [rax]	       134	reflog.c	FUNCTION_2	WHILE_1	IF_4
0x525	          0xc1e804	                              shr eax, 4	       134	reflog.c	FUNCTION_2	WHILE_1	IF_4
0x528	      0x25ffffff07	                      and eax, 0x7ffffff	       134	reflog.c	FUNCTION_2	WHILE_1	IF_4
0x52d	      0x2500040000	                          and eax, 0x400	       134	reflog.c	FUNCTION_2	WHILE_1	IF_4
0x532	            0x85c0	                           test eax, eax	       134	reflog.c	FUNCTION_2	WHILE_1	IF_4
0x534	            0x740c	                            je 0x4000582	       134	reflog.c	FUNCTION_2	WHILE_1	IF_4
0x536	    0xc745a8010000	               mov dword [rbp - 0x58], 1	       135	reflog.c	FUNCTION_2	WHILE_1	IF_4
0x53d	      0xe9ca000000	                           jmp 0x400064c	       136	reflog.c	FUNCTION_2	WHILE_1	IF_4
0x542	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       138	reflog.c	FUNCTION_2	WHILE_1	ELSE_1	IF_5
0x546	            0x8b00	                    mov eax, dword [rax]	       138	reflog.c	FUNCTION_2	WHILE_1	ELSE_1	IF_5
0x548	          0xc1e804	                              shr eax, 4	       138	reflog.c	FUNCTION_2	WHILE_1	ELSE_1	IF_5
0x54b	      0x25ffffff07	                      and eax, 0x7ffffff	       138	reflog.c	FUNCTION_2	WHILE_1	ELSE_1	IF_5
0x550	          0x83e001	                              and eax, 1	       138	reflog.c	FUNCTION_2	WHILE_1	ELSE_1	IF_5
0x553	            0x85c0	                           test eax, eax	       138	reflog.c	FUNCTION_2	WHILE_1	ELSE_1	IF_5
0x555	            0x7405	                            je 0x400059c	       138	reflog.c	FUNCTION_2	WHILE_1	ELSE_1	IF_5
0x557	      0xe9a5000000	                           jmp 0x4000641	       139	reflog.c	FUNCTION_2	WHILE_1	ELSE_1	IF_5
0x55c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       140	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x560	        0x488b4030	            mov rax, qword [rax + 0x30] 	       140	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x564	        0x488945b0	             mov qword [rbp - 0x50], rax	       140	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x568	      0xe989000000	                           jmp 0x4000636	       140	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x56d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       141	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x571	          0x488b00	                    mov rax, qword [rax]	       141	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x574	        0x488945c0	             mov qword [rbp - 0x40], rax	       141	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x578	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       142	reflog.c	FUNCTION_2	WHILE_1	FOR_1	IF_6
0x57c	            0x8b00	                    mov eax, dword [rax]	       142	reflog.c	FUNCTION_2	WHILE_1	FOR_1	IF_6
0x57e	          0xc1e804	                              shr eax, 4	       142	reflog.c	FUNCTION_2	WHILE_1	FOR_1	IF_6
0x581	      0x25ffffff07	                      and eax, 0x7ffffff	       142	reflog.c	FUNCTION_2	WHILE_1	FOR_1	IF_6
0x586	      0x2500080000	                          and eax, 0x800	       142	reflog.c	FUNCTION_2	WHILE_1	FOR_1	IF_6
0x58b	            0x85c0	                           test eax, eax	       142	reflog.c	FUNCTION_2	WHILE_1	FOR_1	IF_6
0x58d	            0x755a	                           jne 0x4000629	       142	reflog.c	FUNCTION_2	WHILE_1	FOR_1	IF_6
0x58f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       144	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x593	            0x8b00	                    mov eax, dword [rax]	       144	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x595	          0xc1e804	                              shr eax, 4	       144	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x598	      0x25ffffff07	                      and eax, 0x7ffffff	       144	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x59d	          0x80cc08	                                or ah, 8	       144	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x5a0	            0x89c2	                            mov edx, eax	       144	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x5a2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       144	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x5a6	    0x81e2ffffff07	                      and edx, 0x7ffffff	       144	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x5ac	            0x89d1	                            mov ecx, edx	       144	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x5ae	          0xc1e104	                              shl ecx, 4	       144	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x5b1	            0x8b10	                    mov edx, dword [rax]	       144	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x5b3	    0x81e20f000080	                     and edx, 0x8000000f	       144	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x5b9	             0x9ca	                             or edx, ecx	       144	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x5bb	            0x8910	                    mov dword [rax], edx	       144	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x5bd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       145	reflog.c	FUNCTION_2	WHILE_1	FOR_1	CALL_7
0x5c1	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       145	reflog.c	FUNCTION_2	WHILE_1	FOR_1	CALL_7
0x5c5	      0xbe00000000	                              mov esi, 0	       145	reflog.c	FUNCTION_2	WHILE_1	FOR_1	CALL_7
0x5ca	          0x4889c7	                            mov rdi, rax	       145	reflog.c	FUNCTION_2	WHILE_1	FOR_1	CALL_7
0x5cd	      0xe800000000	                          call 0x4000612	       145	reflog.c	FUNCTION_2	WHILE_1	FOR_1	CALL_7
0x5d2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       146	reflog.c	FUNCTION_2	WHILE_1	FOR_1	CALL_8
0x5d6	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       146	reflog.c	FUNCTION_2	WHILE_1	FOR_1	CALL_8
0x5da	      0xbe00000000	                              mov esi, 0	       146	reflog.c	FUNCTION_2	WHILE_1	FOR_1	CALL_8
0x5df	          0x4889c7	                            mov rdi, rax	       146	reflog.c	FUNCTION_2	WHILE_1	FOR_1	CALL_8
0x5e2	      0xe800000000	                          call 0x4000627	       146	reflog.c	FUNCTION_2	WHILE_1	FOR_1	CALL_8
0x5e7	            0xeb01	                           jmp 0x400062a	       146	reflog.c	FUNCTION_2	WHILE_1	FOR_1	CALL_8
0x5e9	              0x90	                                     nop	       143	reflog.c	FUNCTION_2	WHILE_1	FOR_1	IF_6
0x5ea	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       140	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x5ee	        0x488b4008	                mov rax, qword [rax + 8]	       140	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x5f2	        0x488945b0	             mov qword [rbp - 0x50], rax	       140	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x5f6	      0x48837db000	               cmp qword [rbp - 0x50], 0	       140	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x5fb	     0xf856cffffff	                           jne 0x40005ad	       140	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x601	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       126	reflog.c	FUNCTION_2	WHILE_1
0x604	            0x85c0	                           test eax, eax	       126	reflog.c	FUNCTION_2	WHILE_1
0x606	     0xf85b2feffff	                           jne 0x40004fe	       126	reflog.c	FUNCTION_2	WHILE_1
0x60c	        0x837da800	               cmp dword [rbp - 0x58], 0	       149	reflog.c	FUNCTION_2	IF_7
0x610	     0xf85e3000000	                           jne 0x4000739	       149	reflog.c	FUNCTION_2	IF_7
0x616	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       154	reflog.c	FUNCTION_2	IF_7	FOR_2
0x61d	            0xeb69	                           jmp 0x40006c8	       154	reflog.c	FUNCTION_2	IF_7	FOR_2
0x61f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       156	reflog.c	FUNCTION_2	IF_7	FOR_2
0x623	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       156	reflog.c	FUNCTION_2	IF_7	FOR_2
0x626	          0x4863d2	                         movsxd rdx, edx	       156	reflog.c	FUNCTION_2	IF_7	FOR_2
0x629	        0x48c1e205	                              shl rdx, 5	       156	reflog.c	FUNCTION_2	IF_7	FOR_2
0x62d	          0x4801d0	                            add rax, rdx	       156	reflog.c	FUNCTION_2	IF_7	FOR_2
0x630	          0x488b00	                    mov rax, qword [rax]	       155	reflog.c	FUNCTION_2	IF_7	FOR_2
0x633	        0x488945c8	             mov qword [rbp - 0x38], rax	       155	reflog.c	FUNCTION_2	IF_7	FOR_2
0x637	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       157	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_10
0x63b	          0x4889c7	                            mov rdi, rax	       157	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_10
0x63e	      0xe800000000	                          call 0x4000683	       157	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_10
0x643	          0x4889c7	                            mov rdi, rax	       157	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_10
0x646	      0xe891fbffff	               call sym.tree_is_complete	       157	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_10
0x64b	            0x85c0	                           test eax, eax	       157	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_10
0x64d	            0x7535	                           jne 0x40006c4	       157	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_10
0x64f	    0xc745a8010000	               mov dword [rbp - 0x58], 1	       158	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x656	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       159	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x65a	            0x8b00	                    mov eax, dword [rax]	       159	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x65c	          0xc1e804	                              shr eax, 4	       159	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x65f	      0x25ffffff07	                      and eax, 0x7ffffff	       159	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x664	          0x80cc04	                                or ah, 4	       159	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x667	            0x89c2	                            mov edx, eax	       159	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x669	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       159	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x66d	    0x81e2ffffff07	                      and edx, 0x7ffffff	       159	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x673	            0x89d1	                            mov ecx, edx	       159	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x675	          0xc1e104	                              shl ecx, 4	       159	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x678	            0x8b10	                    mov edx, dword [rax]	       159	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x67a	    0x81e20f000080	                     and edx, 0x8000000f	       159	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x680	             0x9ca	                             or edx, ecx	       159	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x682	            0x8910	                    mov dword [rax], edx	       159	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x684	        0x8345ac01	               add dword [rbp - 0x54], 1	       154	reflog.c	FUNCTION_2	IF_7	FOR_2
0x688	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       154	reflog.c	FUNCTION_2	IF_7	FOR_2
0x68b	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       154	reflog.c	FUNCTION_2	IF_7	FOR_2
0x68e	            0x39c2	                            cmp edx, eax	       154	reflog.c	FUNCTION_2	IF_7	FOR_2
0x690	            0x778d	                            ja 0x400065f	       154	reflog.c	FUNCTION_2	IF_7	FOR_2
0x692	        0x837da800	               cmp dword [rbp - 0x58], 0	       162	reflog.c	FUNCTION_2	IF_7	IF_9
0x696	            0x7561	                           jne 0x4000739	       162	reflog.c	FUNCTION_2	IF_7	IF_9
0x698	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       164	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x69f	            0xeb4e	                           jmp 0x400072f	       164	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       165	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6a5	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       165	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6a8	          0x4863d2	                         movsxd rdx, edx	       165	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6ab	        0x48c1e205	                              shl rdx, 5	       165	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6af	          0x4801d0	                            add rax, rdx	       165	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6b2	          0x488b10	                    mov rdx, qword [rax]	       165	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       165	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6b9	          0x8b4dac	             mov ecx, dword [rbp - 0x54]	       165	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6bc	          0x4863c9	                         movsxd rcx, ecx	       165	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6bf	        0x48c1e105	                              shl rcx, 5	       165	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6c3	          0x4801c8	                            add rax, rcx	       165	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6c6	          0x488b00	                    mov rax, qword [rax]	       165	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6c9	            0x8b00	                    mov eax, dword [rax]	       165	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6cb	          0xc1e804	                              shr eax, 4	       165	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6ce	      0x25ffffff07	                      and eax, 0x7ffffff	       165	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6d3	          0x83c801	                               or eax, 1	       165	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6d6	      0x25ffffff07	                      and eax, 0x7ffffff	       165	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6db	          0xc1e004	                              shl eax, 4	       165	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6de	            0x89c1	                            mov ecx, eax	       165	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6e0	            0x8b02	                    mov eax, dword [rdx]	       165	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6e2	      0x250f000080	                     and eax, 0x8000000f	       165	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6e7	             0x9c8	                             or eax, ecx	       165	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6e9	            0x8902	                    mov dword [rdx], eax	       165	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6eb	        0x8345ac01	               add dword [rbp - 0x54], 1	       164	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6ef	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       164	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6f2	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       164	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6f5	            0x39c2	                            cmp edx, eax	       164	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6f7	            0x77a8	                            ja 0x40006e1	       164	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x6f9	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       169	reflog.c	FUNCTION_2	FOR_4
0x700	            0xeb50	                           jmp 0x4000792	       169	reflog.c	FUNCTION_2	FOR_4
0x702	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       170	reflog.c	FUNCTION_2	FOR_4
0x706	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       170	reflog.c	FUNCTION_2	FOR_4
0x709	          0x4863d2	                         movsxd rdx, edx	       170	reflog.c	FUNCTION_2	FOR_4
0x70c	        0x48c1e205	                              shl rdx, 5	       170	reflog.c	FUNCTION_2	FOR_4
0x710	          0x4801d0	                            add rax, rdx	       170	reflog.c	FUNCTION_2	FOR_4
0x713	          0x488b10	                    mov rdx, qword [rax]	       170	reflog.c	FUNCTION_2	FOR_4
0x716	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       170	reflog.c	FUNCTION_2	FOR_4
0x71a	          0x8b4dac	             mov ecx, dword [rbp - 0x54]	       170	reflog.c	FUNCTION_2	FOR_4
0x71d	          0x4863c9	                         movsxd rcx, ecx	       170	reflog.c	FUNCTION_2	FOR_4
0x720	        0x48c1e105	                              shl rcx, 5	       170	reflog.c	FUNCTION_2	FOR_4
0x724	          0x4801c8	                            add rax, rcx	       170	reflog.c	FUNCTION_2	FOR_4
0x727	          0x488b00	                    mov rax, qword [rax]	       170	reflog.c	FUNCTION_2	FOR_4
0x72a	            0x8b00	                    mov eax, dword [rax]	       170	reflog.c	FUNCTION_2	FOR_4
0x72c	          0xc1e804	                              shr eax, 4	       170	reflog.c	FUNCTION_2	FOR_4
0x72f	      0x25ffffff07	                      and eax, 0x7ffffff	       170	reflog.c	FUNCTION_2	FOR_4
0x734	      0x25fff7ff07	                      and eax, 0x7fff7ff	       170	reflog.c	FUNCTION_2	FOR_4
0x739	      0x25ffffff07	                      and eax, 0x7ffffff	       170	reflog.c	FUNCTION_2	FOR_4
0x73e	          0xc1e004	                              shl eax, 4	       170	reflog.c	FUNCTION_2	FOR_4
0x741	            0x89c1	                            mov ecx, eax	       170	reflog.c	FUNCTION_2	FOR_4
0x743	            0x8b02	                    mov eax, dword [rdx]	       170	reflog.c	FUNCTION_2	FOR_4
0x745	      0x250f000080	                     and eax, 0x8000000f	       170	reflog.c	FUNCTION_2	FOR_4
0x74a	             0x9c8	                             or eax, ecx	       170	reflog.c	FUNCTION_2	FOR_4
0x74c	            0x8902	                    mov dword [rdx], eax	       170	reflog.c	FUNCTION_2	FOR_4
0x74e	        0x8345ac01	               add dword [rbp - 0x54], 1	       169	reflog.c	FUNCTION_2	FOR_4
0x752	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       169	reflog.c	FUNCTION_2	FOR_4
0x755	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       169	reflog.c	FUNCTION_2	FOR_4
0x758	            0x39c2	                            cmp edx, eax	       169	reflog.c	FUNCTION_2	FOR_4
0x75a	            0x77a6	                            ja 0x4000742	       169	reflog.c	FUNCTION_2	FOR_4
0x75c	        0x837da800	               cmp dword [rbp - 0x58], 0	       171	reflog.c	FUNCTION_2	IF_10
0x760	            0x7430	                            je 0x40007d2	       171	reflog.c	FUNCTION_2	IF_10
0x762	        0x488b4598	             mov rax, qword [rbp - 0x68]	       172	reflog.c	FUNCTION_2	IF_10
0x766	            0x8b00	                    mov eax, dword [rax]	       172	reflog.c	FUNCTION_2	IF_10
0x768	          0xc1e804	                              shr eax, 4	       172	reflog.c	FUNCTION_2	IF_10
0x76b	      0x25ffffff07	                      and eax, 0x7ffffff	       172	reflog.c	FUNCTION_2	IF_10
0x770	          0x80cc04	                                or ah, 4	       172	reflog.c	FUNCTION_2	IF_10
0x773	            0x89c2	                            mov edx, eax	       172	reflog.c	FUNCTION_2	IF_10
0x775	        0x488b4598	             mov rax, qword [rbp - 0x68]	       172	reflog.c	FUNCTION_2	IF_10
0x779	    0x81e2ffffff07	                      and edx, 0x7ffffff	       172	reflog.c	FUNCTION_2	IF_10
0x77f	            0x89d1	                            mov ecx, edx	       172	reflog.c	FUNCTION_2	IF_10
0x781	          0xc1e104	                              shl ecx, 4	       172	reflog.c	FUNCTION_2	IF_10
0x784	            0x8b10	                    mov edx, dword [rax]	       172	reflog.c	FUNCTION_2	IF_10
0x786	    0x81e20f000080	                     and edx, 0x8000000f	       172	reflog.c	FUNCTION_2	IF_10
0x78c	             0x9ca	                             or edx, ecx	       172	reflog.c	FUNCTION_2	IF_10
0x78e	            0x8910	                    mov dword [rax], edx	       172	reflog.c	FUNCTION_2	IF_10
0x790	            0xeb61	                           jmp 0x4000833	       172	reflog.c	FUNCTION_2	IF_10
0x792	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       182	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x799	            0xeb4e	                           jmp 0x4000829	       182	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x79b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x79f	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7a2	          0x4863d2	                         movsxd rdx, edx	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7a5	        0x48c1e205	                              shl rdx, 5	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7a9	          0x4801d0	                            add rax, rdx	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7ac	          0x488b10	                    mov rdx, qword [rax]	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7b3	          0x8b4dac	             mov ecx, dword [rbp - 0x54]	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7b6	          0x4863c9	                         movsxd rcx, ecx	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7b9	        0x48c1e105	                              shl rcx, 5	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7bd	          0x4801c8	                            add rax, rcx	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7c0	          0x488b00	                    mov rax, qword [rax]	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7c3	            0x8b00	                    mov eax, dword [rax]	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7c5	          0xc1e804	                              shr eax, 4	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7c8	      0x25ffffff07	                      and eax, 0x7ffffff	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7cd	          0x83c801	                               or eax, 1	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7d0	      0x25ffffff07	                      and eax, 0x7ffffff	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7d5	          0xc1e004	                              shl eax, 4	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7d8	            0x89c1	                            mov ecx, eax	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7da	            0x8b02	                    mov eax, dword [rdx]	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7dc	      0x250f000080	                     and eax, 0x8000000f	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7e1	             0x9c8	                             or eax, ecx	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7e3	            0x8902	                    mov dword [rdx], eax	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7e5	        0x8345ac01	               add dword [rbp - 0x54], 1	       182	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7e9	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       182	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7ec	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       182	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7ef	            0x39c2	                            cmp edx, eax	       182	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7f1	            0x77a8	                            ja 0x40007db	       182	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x7f3	        0x488d45d0	                   lea rax, [rbp - 0x30]	       186	reflog.c	FUNCTION_2	CALL_11
0x7f7	          0x4889c7	                            mov rdi, rax	       186	reflog.c	FUNCTION_2	CALL_11
0x7fa	      0xe800000000	                          call 0x400083f	       186	reflog.c	FUNCTION_2	CALL_11
0x7ff	        0x488d45e0	                   lea rax, [rbp - 0x20]	       187	reflog.c	FUNCTION_2	CALL_12
0x803	          0x4889c7	                            mov rdi, rax	       187	reflog.c	FUNCTION_2	CALL_12
0x806	      0xe800000000	                          call 0x400084b	       187	reflog.c	FUNCTION_2	CALL_12
0x80b	        0x837da800	               cmp dword [rbp - 0x58], 0	       188	reflog.c	FUNCTION_2
0x80f	           0xf94c0	                                 sete al	       188	reflog.c	FUNCTION_2
0x812	           0xfb6c0	                           movzx eax, al	       188	reflog.c	FUNCTION_2
0x815	        0x488b75f8	                mov rsi, qword [rbp - 8]	       189	reflog.c	FUNCTION_2
0x819	    0x644833342528	                xor rsi, qword fs:[0x28]	       189	reflog.c	FUNCTION_2
0x822	            0x7405	                            je 0x4000869	       189	reflog.c	FUNCTION_2
0x824	      0xe800000000	                          call 0x4000869	       189	reflog.c	FUNCTION_2
0x829	              0xc9	                                   leave	       189	reflog.c	FUNCTION_2
0x82a	              0xc3	                                     ret	       189	reflog.c	FUNCTION_2
collect_reflog	IF,0:ELSE,0:FOR,0:SWITCH,0:DO,0:WHILE,0:CALL,3:functions,0	108
0xf39	              0x55	                                push rbp	       384	reflog.c	FUNCTION_10
0xf3a	          0x4889e5	                            mov rbp, rsp	       384	reflog.c	FUNCTION_10
0xf3d	        0x4883ec40	                           sub rsp, 0x40	       384	reflog.c	FUNCTION_10
0xf41	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       384	reflog.c	FUNCTION_10
0xf45	        0x488975d0	             mov qword [rbp - 0x30], rsi	       384	reflog.c	FUNCTION_10
0xf49	          0x8955cc	             mov dword [rbp - 0x34], edx	       384	reflog.c	FUNCTION_10
0xf4c	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       384	reflog.c	FUNCTION_10
0xf50	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       386	reflog.c	FUNCTION_10
0xf54	        0x488945e8	             mov qword [rbp - 0x18], rax	       386	reflog.c	FUNCTION_10
0xf58	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       388	reflog.c	FUNCTION_10	CALL_1
0xf5c	          0x4889c7	                            mov rdi, rax	       388	reflog.c	FUNCTION_10	CALL_1
0xf5f	      0xe800000000	                          call 0x4000fa4	       388	reflog.c	FUNCTION_10	CALL_1
0xf64	        0x488945f0	             mov qword [rbp - 0x10], rax	       388	reflog.c	FUNCTION_10	CALL_1
0xf68	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       388	reflog.c	FUNCTION_10	CALL_1
0xf6c	          0x4889c6	                            mov rsi, rax	       388	reflog.c	FUNCTION_10	CALL_1
0xf6f	      0xbf14000000	                           mov edi, 0x14	       388	reflog.c	FUNCTION_10	CALL_1
0xf74	      0xe892f0ffff	                         call sym.st_add	       388	reflog.c	FUNCTION_10	CALL_1
0xf79	      0xbe01000000	                              mov esi, 1	       388	reflog.c	FUNCTION_10	CALL_1
0xf7e	          0x4889c7	                            mov rdi, rax	       388	reflog.c	FUNCTION_10	CALL_1
0xf81	      0xe885f0ffff	                         call sym.st_add	       388	reflog.c	FUNCTION_10	CALL_1
0xf86	          0x4889c6	                            mov rsi, rax	       388	reflog.c	FUNCTION_10	CALL_1
0xf89	      0xbf01000000	                              mov edi, 1	       388	reflog.c	FUNCTION_10	CALL_1
0xf8e	      0xe800000000	                          call 0x4000fd3	       388	reflog.c	FUNCTION_10	CALL_1
0xf93	        0x488945f8	                mov qword [rbp - 8], rax	       388	reflog.c	FUNCTION_10	CALL_1
0xf97	        0x488b45f8	                mov rax, qword [rbp - 8]	       388	reflog.c	FUNCTION_10	CALL_1
0xf9b	        0x488d4814	                   lea rcx, [rax + 0x14]	       388	reflog.c	FUNCTION_10	CALL_1
0xf9f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       388	reflog.c	FUNCTION_10	CALL_1
0xfa3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       388	reflog.c	FUNCTION_10	CALL_1
0xfa7	          0x4889c6	                            mov rsi, rax	       388	reflog.c	FUNCTION_10	CALL_1
0xfaa	          0x4889cf	                            mov rdi, rcx	       388	reflog.c	FUNCTION_10	CALL_1
0xfad	      0xe800000000	                          call 0x4000ff2	       388	reflog.c	FUNCTION_10	CALL_1
0xfb2	        0x488b45f8	                mov rax, qword [rbp - 8]	       389	reflog.c	FUNCTION_10	CALL_2
0xfb6	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       389	reflog.c	FUNCTION_10	CALL_2
0xfba	          0x4889d6	                            mov rsi, rdx	       389	reflog.c	FUNCTION_10	CALL_2
0xfbd	          0x4889c7	                            mov rdi, rax	       389	reflog.c	FUNCTION_10	CALL_2
0xfc0	      0xe884f1ffff	                         call sym.oidcpy	       389	reflog.c	FUNCTION_10	CALL_2
0xfc5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	reflog.c	FUNCTION_10	CALL_3
0xfc9	          0x8b400c	              mov eax, dword [rax + 0xc]	       390	reflog.c	FUNCTION_10	CALL_3
0xfcc	          0x8d5001	                      lea edx, [rax + 1]	       390	reflog.c	FUNCTION_10	CALL_3
0xfcf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	reflog.c	FUNCTION_10	CALL_3
0xfd3	          0x8b4008	                mov eax, dword [rax + 8]	       390	reflog.c	FUNCTION_10	CALL_3
0xfd6	            0x39c2	                            cmp edx, eax	       390	reflog.c	FUNCTION_10	CALL_3
0xfd8	     0xf8e93000000	                           jle 0x40010b1	       390	reflog.c	FUNCTION_10	CALL_3
0xfde	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	reflog.c	FUNCTION_10	CALL_3
0xfe2	          0x8b4008	                mov eax, dword [rax + 8]	       390	reflog.c	FUNCTION_10	CALL_3
0xfe5	          0x8d5010	                   lea edx, [rax + 0x10]	       390	reflog.c	FUNCTION_10	CALL_3
0xfe8	            0x89d0	                            mov eax, edx	       390	reflog.c	FUNCTION_10	CALL_3
0xfea	             0x1c0	                            add eax, eax	       390	reflog.c	FUNCTION_10	CALL_3
0xfec	             0x1d0	                            add eax, edx	       390	reflog.c	FUNCTION_10	CALL_3
0xfee	            0x89c2	                            mov edx, eax	       390	reflog.c	FUNCTION_10	CALL_3
0xff0	          0xc1ea1f	                           shr edx, 0x1f	       390	reflog.c	FUNCTION_10	CALL_3
0xff3	             0x1d0	                            add eax, edx	       390	reflog.c	FUNCTION_10	CALL_3
0xff5	            0xd1f8	                              sar eax, 1	       390	reflog.c	FUNCTION_10	CALL_3
0xff7	            0x89c2	                            mov edx, eax	       390	reflog.c	FUNCTION_10	CALL_3
0xff9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	reflog.c	FUNCTION_10	CALL_3
0xffd	          0x8b400c	              mov eax, dword [rax + 0xc]	       390	reflog.c	FUNCTION_10	CALL_3
0x1000	          0x83c001	                              add eax, 1	       390	reflog.c	FUNCTION_10	CALL_3
0x1003	            0x39c2	                            cmp edx, eax	       390	reflog.c	FUNCTION_10	CALL_3
0x1005	            0x7d13	                           jge 0x400105a	       390	reflog.c	FUNCTION_10	CALL_3
0x1007	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	reflog.c	FUNCTION_10	CALL_3
0x100b	          0x8b400c	              mov eax, dword [rax + 0xc]	       390	reflog.c	FUNCTION_10	CALL_3
0x100e	          0x8d5001	                      lea edx, [rax + 1]	       390	reflog.c	FUNCTION_10	CALL_3
0x1011	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	reflog.c	FUNCTION_10	CALL_3
0x1015	          0x895008	                mov dword [rax + 8], edx	       390	reflog.c	FUNCTION_10	CALL_3
0x1018	            0xeb22	                           jmp 0x400107c	       390	reflog.c	FUNCTION_10	CALL_3
0x101a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	reflog.c	FUNCTION_10	CALL_3
0x101e	          0x8b4008	                mov eax, dword [rax + 8]	       390	reflog.c	FUNCTION_10	CALL_3
0x1021	          0x8d5010	                   lea edx, [rax + 0x10]	       390	reflog.c	FUNCTION_10	CALL_3
0x1024	            0x89d0	                            mov eax, edx	       390	reflog.c	FUNCTION_10	CALL_3
0x1026	             0x1c0	                            add eax, eax	       390	reflog.c	FUNCTION_10	CALL_3
0x1028	             0x1d0	                            add eax, edx	       390	reflog.c	FUNCTION_10	CALL_3
0x102a	            0x89c2	                            mov edx, eax	       390	reflog.c	FUNCTION_10	CALL_3
0x102c	          0xc1ea1f	                           shr edx, 0x1f	       390	reflog.c	FUNCTION_10	CALL_3
0x102f	             0x1d0	                            add eax, edx	       390	reflog.c	FUNCTION_10	CALL_3
0x1031	            0xd1f8	                              sar eax, 1	       390	reflog.c	FUNCTION_10	CALL_3
0x1033	            0x89c2	                            mov edx, eax	       390	reflog.c	FUNCTION_10	CALL_3
0x1035	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	reflog.c	FUNCTION_10	CALL_3
0x1039	          0x895008	                mov dword [rax + 8], edx	       390	reflog.c	FUNCTION_10	CALL_3
0x103c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	reflog.c	FUNCTION_10	CALL_3
0x1040	          0x8b4008	                mov eax, dword [rax + 8]	       390	reflog.c	FUNCTION_10	CALL_3
0x1043	            0x4898	                                    cdqe	       390	reflog.c	FUNCTION_10	CALL_3
0x1045	          0x4889c6	                            mov rsi, rax	       390	reflog.c	FUNCTION_10	CALL_3
0x1048	      0xbf08000000	                              mov edi, 8	       390	reflog.c	FUNCTION_10	CALL_3
0x104d	      0xe8fdefffff	                        call sym.st_mult	       390	reflog.c	FUNCTION_10	CALL_3
0x1052	          0x4889c2	                            mov rdx, rax	       390	reflog.c	FUNCTION_10	CALL_3
0x1055	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	reflog.c	FUNCTION_10	CALL_3
0x1059	          0x488b00	                    mov rax, qword [rax]	       390	reflog.c	FUNCTION_10	CALL_3
0x105c	          0x4889d6	                            mov rsi, rdx	       390	reflog.c	FUNCTION_10	CALL_3
0x105f	          0x4889c7	                            mov rdi, rax	       390	reflog.c	FUNCTION_10	CALL_3
0x1062	      0xe800000000	                          call 0x40010a7	       390	reflog.c	FUNCTION_10	CALL_3
0x1067	          0x4889c2	                            mov rdx, rax	       390	reflog.c	FUNCTION_10	CALL_3
0x106a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	reflog.c	FUNCTION_10	CALL_3
0x106e	          0x488910	                    mov qword [rax], rdx	       390	reflog.c	FUNCTION_10	CALL_3
0x1071	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       391	reflog.c	FUNCTION_10
0x1075	          0x488b30	                    mov rsi, qword [rax]	       391	reflog.c	FUNCTION_10
0x1078	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       391	reflog.c	FUNCTION_10
0x107c	          0x8b400c	              mov eax, dword [rax + 0xc]	       391	reflog.c	FUNCTION_10
0x107f	          0x8d4801	                      lea ecx, [rax + 1]	       391	reflog.c	FUNCTION_10
0x1082	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       391	reflog.c	FUNCTION_10
0x1086	          0x894a0c	              mov dword [rdx + 0xc], ecx	       391	reflog.c	FUNCTION_10
0x1089	            0x4898	                                    cdqe	       391	reflog.c	FUNCTION_10
0x108b	        0x48c1e003	                              shl rax, 3	       391	reflog.c	FUNCTION_10
0x108f	        0x488d1406	                    lea rdx, [rsi + rax]	       391	reflog.c	FUNCTION_10
0x1093	        0x488b45f8	                mov rax, qword [rbp - 8]	       391	reflog.c	FUNCTION_10
0x1097	          0x488902	                    mov qword [rdx], rax	       391	reflog.c	FUNCTION_10
0x109a	      0xb800000000	                              mov eax, 0	       392	reflog.c	FUNCTION_10
0x109f	              0xc9	                                   leave	       393	reflog.c	FUNCTION_10
0x10a0	              0xc3	                                     ret	       393	reflog.c	FUNCTION_10
reflog_expiry_cleanup	IF,2:ELSE,1:FOR,1:SWITCH,0:DO,0:WHILE,0:CALL,3:functions,0	41
0xea7	              0x55	                                push rbp	       368	reflog.c	FUNCTION_9
0xea8	          0x4889e5	                            mov rbp, rsp	       368	reflog.c	FUNCTION_9
0xeab	        0x4883ec20	                           sub rsp, 0x20	       368	reflog.c	FUNCTION_9
0xeaf	        0x48897de8	             mov qword [rbp - 0x18], rdi	       368	reflog.c	FUNCTION_9
0xeb3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       369	reflog.c	FUNCTION_9
0xeb7	        0x488945f8	                mov qword [rbp - 8], rax	       369	reflog.c	FUNCTION_9
0xebb	        0x488b45f8	                mov rax, qword [rbp - 8]	       371	reflog.c	FUNCTION_9	IF_1
0xebf	            0x8b00	                    mov eax, dword [rax]	       371	reflog.c	FUNCTION_9	IF_1
0xec1	          0x83f801	                              cmp eax, 1	       371	reflog.c	FUNCTION_9	IF_1
0xec4	            0x7470	                            je 0x4000f76	       371	reflog.c	FUNCTION_9	IF_1
0xec6	        0x488b45f8	                mov rax, qword [rbp - 8]	       372	reflog.c	FUNCTION_9	IF_1	IF_2
0xeca	            0x8b00	                    mov eax, dword [rax]	       372	reflog.c	FUNCTION_9	IF_1	IF_2
0xecc	          0x83f802	                              cmp eax, 2	       372	reflog.c	FUNCTION_9	IF_1	IF_2
0xecf	            0x754d	                           jne 0x4000f5e	       372	reflog.c	FUNCTION_9	IF_1	IF_2
0xed1	        0x488b45f8	                mov rax, qword [rbp - 8]	       374	reflog.c	FUNCTION_9	IF_1	IF_2	FOR_1
0xed5	    0x488b80f00800	           mov rax, qword [rax + 0x8f0] 	       374	reflog.c	FUNCTION_9	IF_1	IF_2	FOR_1
0xedc	        0x488945f0	             mov qword [rbp - 0x10], rax	       374	reflog.c	FUNCTION_9	IF_1	IF_2	FOR_1
0xee0	            0xeb20	                           jmp 0x4000f42	       374	reflog.c	FUNCTION_9	IF_1	IF_2	FOR_1
0xee2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       375	reflog.c	FUNCTION_9	IF_1	IF_2	CALL_1
0xee6	          0x488b00	                    mov rax, qword [rax]	       375	reflog.c	FUNCTION_9	IF_1	IF_2	CALL_1
0xee9	      0xbe00100000	                         mov esi, 0x1000	       375	reflog.c	FUNCTION_9	IF_1	IF_2	CALL_1
0xeee	          0x4889c7	                            mov rdi, rax	       375	reflog.c	FUNCTION_9	IF_1	IF_2	CALL_1
0xef1	      0xe800000000	                          call 0x4000f36	       375	reflog.c	FUNCTION_9	IF_1	IF_2	CALL_1
0xef6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       374	reflog.c	FUNCTION_9	IF_1	IF_2	FOR_1
0xefa	        0x488b4008	                mov rax, qword [rax + 8]	       374	reflog.c	FUNCTION_9	IF_1	IF_2	FOR_1
0xefe	        0x488945f0	             mov qword [rbp - 0x10], rax	       374	reflog.c	FUNCTION_9	IF_1	IF_2	FOR_1
0xf02	      0x48837df000	               cmp qword [rbp - 0x10], 0	       374	reflog.c	FUNCTION_9	IF_1	IF_2	FOR_1
0xf07	            0x75d9	                           jne 0x4000f22	       374	reflog.c	FUNCTION_9	IF_1	IF_2	FOR_1
0xf09	        0x488b45f8	                mov rax, qword [rbp - 8]	       376	reflog.c	FUNCTION_9	IF_1	IF_2	CALL_2
0xf0d	    0x488b80f00800	           mov rax, qword [rax + 0x8f0] 	       376	reflog.c	FUNCTION_9	IF_1	IF_2	CALL_2
0xf14	          0x4889c7	                            mov rdi, rax	       376	reflog.c	FUNCTION_9	IF_1	IF_2	CALL_2
0xf17	      0xe800000000	                          call 0x4000f5c	       376	reflog.c	FUNCTION_9	IF_1	IF_2	CALL_2
0xf1c	            0xeb18	                           jmp 0x4000f76	       381	reflog.c	FUNCTION_9
0xf1e	        0x488b45f8	                mov rax, qword [rbp - 8]	       378	reflog.c	FUNCTION_9	IF_1	ELSE_1	CALL_3
0xf22	    0x488b80e80800	           mov rax, qword [rax + 0x8e8] 	       378	reflog.c	FUNCTION_9	IF_1	ELSE_1	CALL_3
0xf29	      0xbe00100000	                         mov esi, 0x1000	       378	reflog.c	FUNCTION_9	IF_1	ELSE_1	CALL_3
0xf2e	          0x4889c7	                            mov rdi, rax	       378	reflog.c	FUNCTION_9	IF_1	ELSE_1	CALL_3
0xf31	      0xe800000000	                          call 0x4000f76	       378	reflog.c	FUNCTION_9	IF_1	ELSE_1	CALL_3
0xf36	              0x90	                                     nop	       381	reflog.c	FUNCTION_9
0xf37	              0xc9	                                   leave	       381	reflog.c	FUNCTION_9
0xf38	              0xc3	                                     ret	       381	reflog.c	FUNCTION_9
set_reflog_expiry_param	IF,9:ELSE,0:FOR,1:SWITCH,0:DO,0:WHILE,0:CALL,2:functions,0	83
0x133b	              0x55	                                push rbp	       473	reflog.c	FUNCTION_13
0x133c	          0x4889e5	                            mov rbp, rsp	       473	reflog.c	FUNCTION_13
0x133f	        0x4883ec30	                           sub rsp, 0x30	       473	reflog.c	FUNCTION_13
0x1343	        0x48897de8	             mov qword [rbp - 0x18], rdi	       473	reflog.c	FUNCTION_13
0x1347	          0x8975e4	             mov dword [rbp - 0x1c], esi	       473	reflog.c	FUNCTION_13
0x134a	        0x488955d8	             mov qword [rbp - 0x28], rdx	       473	reflog.c	FUNCTION_13
0x134e	        0x837de403	               cmp dword [rbp - 0x1c], 3	       476	reflog.c	FUNCTION_13	IF_1
0x1352	     0xf8405010000	                            je 0x400149d	       476	reflog.c	FUNCTION_13	IF_1
0x1358	    0x488b05000000	            mov rax, qword [0x0400139f] 	       479	reflog.c	FUNCTION_13	FOR_1
0x135f	        0x488945f8	                mov qword [rbp - 8], rax	       479	reflog.c	FUNCTION_13	FOR_1
0x1363	            0xeb6e	                           jmp 0x4001413	       479	reflog.c	FUNCTION_13	FOR_1
0x1365	        0x488b45f8	                mov rax, qword [rbp - 8]	       480	reflog.c	FUNCTION_13	FOR_1	IF_2	CALL_1
0x1369	        0x488d4818	                   lea rcx, [rax + 0x18]	       480	reflog.c	FUNCTION_13	FOR_1	IF_2	CALL_1
0x136d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       480	reflog.c	FUNCTION_13	FOR_1	IF_2	CALL_1
0x1371	      0xba00000000	                              mov edx, 0	       480	reflog.c	FUNCTION_13	FOR_1	IF_2	CALL_1
0x1376	          0x4889c6	                            mov rsi, rax	       480	reflog.c	FUNCTION_13	FOR_1	IF_2	CALL_1
0x1379	          0x4889cf	                            mov rdi, rcx	       480	reflog.c	FUNCTION_13	FOR_1	IF_2	CALL_1
0x137c	      0xe800000000	                          call 0x40013c1	       480	reflog.c	FUNCTION_13	FOR_1	IF_2	CALL_1
0x1381	            0x85c0	                           test eax, eax	       480	reflog.c	FUNCTION_13	FOR_1	IF_2	CALL_1
0x1383	            0x7543	                           jne 0x4001408	       480	reflog.c	FUNCTION_13	FOR_1	IF_2	CALL_1
0x1385	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       481	reflog.c	FUNCTION_13	FOR_1	IF_2	IF_3
0x1388	          0x83e001	                              and eax, 1	       481	reflog.c	FUNCTION_13	FOR_1	IF_2	IF_3
0x138b	            0x85c0	                           test eax, eax	       481	reflog.c	FUNCTION_13	FOR_1	IF_2	IF_3
0x138d	            0x7513	                           jne 0x40013e2	       481	reflog.c	FUNCTION_13	FOR_1	IF_2	IF_3
0x138f	        0x488b45f8	                mov rax, qword [rbp - 8]	       482	reflog.c	FUNCTION_13	FOR_1	IF_2	IF_3
0x1393	        0x488b5008	                mov rdx, qword [rax + 8]	       482	reflog.c	FUNCTION_13	FOR_1	IF_2	IF_3
0x1397	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       482	reflog.c	FUNCTION_13	FOR_1	IF_2	IF_3
0x139b	    0x488990b80800	            mov qword [rax + 0x8b8], rdx	       482	reflog.c	FUNCTION_13	FOR_1	IF_2	IF_3
0x13a2	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       483	reflog.c	FUNCTION_13	FOR_1	IF_2	IF_4
0x13a5	          0x83e002	                              and eax, 2	       483	reflog.c	FUNCTION_13	FOR_1	IF_2	IF_4
0x13a8	            0x85c0	                           test eax, eax	       483	reflog.c	FUNCTION_13	FOR_1	IF_2	IF_4
0x13aa	     0xf85b0000000	                           jne 0x40014a0	       483	reflog.c	FUNCTION_13	FOR_1	IF_2	IF_4
0x13b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       484	reflog.c	FUNCTION_13	FOR_1	IF_2	IF_4
0x13b4	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       484	reflog.c	FUNCTION_13	FOR_1	IF_2	IF_4
0x13b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       484	reflog.c	FUNCTION_13	FOR_1	IF_2	IF_4
0x13bc	    0x488990c00800	            mov qword [rax + 0x8c0], rdx	       484	reflog.c	FUNCTION_13	FOR_1	IF_2	IF_4
0x13c3	      0xe998000000	                           jmp 0x40014a0	       485	reflog.c	FUNCTION_13	FOR_1	IF_2
0x13c8	        0x488b45f8	                mov rax, qword [rbp - 8]	       479	reflog.c	FUNCTION_13	FOR_1
0x13cc	          0x488b00	                    mov rax, qword [rax]	       479	reflog.c	FUNCTION_13	FOR_1
0x13cf	        0x488945f8	                mov qword [rbp - 8], rax	       479	reflog.c	FUNCTION_13	FOR_1
0x13d3	      0x48837df800	                  cmp qword [rbp - 8], 0	       479	reflog.c	FUNCTION_13	FOR_1
0x13d8	            0x758b	                           jne 0x40013a5	       479	reflog.c	FUNCTION_13	FOR_1
0x13da	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       492	reflog.c	FUNCTION_13	IF_5	CALL_2
0x13de	      0xbe00000000	                              mov esi, 0	       492	reflog.c	FUNCTION_13	IF_5	CALL_2
0x13e3	          0x4889c7	                            mov rdi, rax	       492	reflog.c	FUNCTION_13	IF_5	CALL_2
0x13e6	      0xe800000000	                          call 0x400142b	       492	reflog.c	FUNCTION_13	IF_5	CALL_2
0x13eb	            0x85c0	                           test eax, eax	       492	reflog.c	FUNCTION_13	IF_5	CALL_2
0x13ed	            0x7534	                           jne 0x4001463	       492	reflog.c	FUNCTION_13	IF_5	CALL_2
0x13ef	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       493	reflog.c	FUNCTION_13	IF_5	IF_6
0x13f2	          0x83e001	                              and eax, 1	       493	reflog.c	FUNCTION_13	IF_5	IF_6
0x13f5	            0x85c0	                           test eax, eax	       493	reflog.c	FUNCTION_13	IF_5	IF_6
0x13f7	            0x750f	                           jne 0x4001448	       493	reflog.c	FUNCTION_13	IF_5	IF_6
0x13f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       494	reflog.c	FUNCTION_13	IF_5	IF_6
0x13fd	    0x48c780b80800	              mov qword [rax + 0x8b8], 0	       494	reflog.c	FUNCTION_13	IF_5	IF_6
0x1408	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       495	reflog.c	FUNCTION_13	IF_5	IF_7
0x140b	          0x83e002	                              and eax, 2	       495	reflog.c	FUNCTION_13	IF_5	IF_7
0x140e	            0x85c0	                           test eax, eax	       495	reflog.c	FUNCTION_13	IF_5	IF_7
0x1410	            0x7551	                           jne 0x40014a3	       495	reflog.c	FUNCTION_13	IF_5	IF_7
0x1412	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       496	reflog.c	FUNCTION_13	IF_5	IF_7
0x1416	    0x48c780c00800	              mov qword [rax + 0x8c0], 0	       496	reflog.c	FUNCTION_13	IF_5	IF_7
0x1421	            0xeb40	                           jmp 0x40014a3	       497	reflog.c	FUNCTION_13	IF_5
0x1423	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       501	reflog.c	FUNCTION_13	IF_8
0x1426	          0x83e001	                              and eax, 1	       501	reflog.c	FUNCTION_13	IF_8
0x1429	            0x85c0	                           test eax, eax	       501	reflog.c	FUNCTION_13	IF_8
0x142b	            0x7512	                           jne 0x400147f	       501	reflog.c	FUNCTION_13	IF_8
0x142d	    0x488b15000000	            mov rdx, qword [0x04001474] 	       502	reflog.c	FUNCTION_13	IF_8
0x1434	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       502	reflog.c	FUNCTION_13	IF_8
0x1438	    0x488990b80800	            mov qword [rax + 0x8b8], rdx	       502	reflog.c	FUNCTION_13	IF_8
0x143f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       503	reflog.c	FUNCTION_13	IF_9
0x1442	          0x83e002	                              and eax, 2	       503	reflog.c	FUNCTION_13	IF_9
0x1445	            0x85c0	                           test eax, eax	       503	reflog.c	FUNCTION_13	IF_9
0x1447	            0x751b	                           jne 0x40014a4	       503	reflog.c	FUNCTION_13	IF_9
0x1449	    0x488b15000000	            mov rdx, qword [0x04001490] 	       504	reflog.c	FUNCTION_13	IF_9
0x1450	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       504	reflog.c	FUNCTION_13	IF_9
0x1454	    0x488990c00800	            mov qword [rax + 0x8c0], rdx	       504	reflog.c	FUNCTION_13	IF_9
0x145b	            0xeb07	                           jmp 0x40014a4	       504	reflog.c	FUNCTION_13	IF_9
0x145d	              0x90	                                     nop	       477	reflog.c	FUNCTION_13	IF_1
0x145e	            0xeb04	                           jmp 0x40014a4	       477	reflog.c	FUNCTION_13	IF_1
0x1460	              0x90	                                     nop	       485	reflog.c	FUNCTION_13	FOR_1	IF_2
0x1461	            0xeb01	                           jmp 0x40014a4	       485	reflog.c	FUNCTION_13	FOR_1	IF_2
0x1463	              0x90	                                     nop	       497	reflog.c	FUNCTION_13	IF_5
0x1464	              0xc9	                                   leave	       505	reflog.c	FUNCTION_13
0x1465	              0xc3	                                     ret	       505	reflog.c	FUNCTION_13
cmd_reflog_exists	IF,4:ELSE,2:FOR,1:SWITCH,0:DO,0:WHILE,0:CALL,6:functions,0	75
0x1ea1	              0x55	                                push rbp	       688	reflog.c	FUNCTION_17
0x1ea2	          0x4889e5	                            mov rbp, rsp	       688	reflog.c	FUNCTION_17
0x1ea5	        0x4883ec30	                           sub rsp, 0x30	       688	reflog.c	FUNCTION_17
0x1ea9	          0x897dec	             mov dword [rbp - 0x14], edi	       688	reflog.c	FUNCTION_17
0x1eac	        0x488975e0	             mov qword [rbp - 0x20], rsi	       688	reflog.c	FUNCTION_17
0x1eb0	        0x488955d8	             mov qword [rbp - 0x28], rdx	       688	reflog.c	FUNCTION_17
0x1eb4	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       689	reflog.c	FUNCTION_17
0x1ebb	    0xc745f0010000	               mov dword [rbp - 0x10], 1	       691	reflog.c	FUNCTION_17	FOR_1
0x1ec2	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       691	reflog.c	FUNCTION_17	FOR_1
0x1ec5	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       691	reflog.c	FUNCTION_17	FOR_1
0x1ec8	            0x7d4c	                           jge 0x4001f56	       691	reflog.c	FUNCTION_17	FOR_1
0x1eca	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       692	reflog.c	FUNCTION_17	FOR_1
0x1ecd	            0x4898	                                    cdqe	       692	reflog.c	FUNCTION_17	FOR_1
0x1ecf	    0x488d14c50000	                        lea rdx, [rax*8]	       692	reflog.c	FUNCTION_17	FOR_1
0x1ed7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       692	reflog.c	FUNCTION_17	FOR_1
0x1edb	          0x4801d0	                            add rax, rdx	       692	reflog.c	FUNCTION_17	FOR_1
0x1ede	          0x488b00	                    mov rax, qword [rax]	       692	reflog.c	FUNCTION_17	FOR_1
0x1ee1	        0x488945f8	                mov qword [rbp - 8], rax	       692	reflog.c	FUNCTION_17	FOR_1
0x1ee5	        0x488b45f8	                mov rax, qword [rbp - 8]	       693	reflog.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x1ee9	      0xbe00000000	                              mov esi, 0	       693	reflog.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x1eee	          0x4889c7	                            mov rdi, rax	       693	reflog.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x1ef1	      0xe800000000	                          call 0x4001f36	       693	reflog.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x1ef6	            0x85c0	                           test eax, eax	       693	reflog.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x1ef8	            0x7506	                           jne 0x4001f40	       693	reflog.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x1efa	        0x8345f001	               add dword [rbp - 0x10], 1	       694	reflog.c	FUNCTION_17	FOR_1	IF_1
0x1efe	            0xeb16	                           jmp 0x4001f56	       695	reflog.c	FUNCTION_17	FOR_1	IF_1
0x1f00	        0x488b45f8	                mov rax, qword [rbp - 8]	       697	reflog.c	FUNCTION_17	FOR_1	ELSE_1	IF_2
0x1f04	           0xfb600	                   movzx eax, byte [rax]	       697	reflog.c	FUNCTION_17	FOR_1	ELSE_1	IF_2
0x1f07	            0x3c2d	                            cmp al, 0x2d	       697	reflog.c	FUNCTION_17	FOR_1	ELSE_1	IF_2
0x1f09	            0x750a	                           jne 0x4001f55	       697	reflog.c	FUNCTION_17	FOR_1	ELSE_1	IF_2
0x1f0b	      0xbf00000000	                              mov edi, 0	       698	reflog.c	FUNCTION_17	FOR_1	ELSE_1	IF_2
0x1f10	      0xe800000000	                          call 0x4001f55	       698	reflog.c	FUNCTION_17	FOR_1	ELSE_1	IF_2
0x1f15	              0x90	                                     nop	       700	reflog.c	FUNCTION_17	FOR_1	ELSE_2
0x1f16	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       703	reflog.c	FUNCTION_17
0x1f19	          0x8945f4	              mov dword [rbp - 0xc], eax	       703	reflog.c	FUNCTION_17
0x1f1c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       705	reflog.c	FUNCTION_17	IF_3
0x1f1f	          0x2b45f4	              sub eax, dword [rbp - 0xc]	       705	reflog.c	FUNCTION_17	IF_3
0x1f22	          0x83f801	                              cmp eax, 1	       705	reflog.c	FUNCTION_17	IF_3
0x1f25	            0x740a	                            je 0x4001f71	       705	reflog.c	FUNCTION_17	IF_3
0x1f27	      0xbf00000000	                              mov edi, 0	       706	reflog.c	FUNCTION_17	CALL_3
0x1f2c	      0xe800000000	                          call 0x4001f71	       706	reflog.c	FUNCTION_17	CALL_3
0x1f31	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       708	reflog.c	FUNCTION_17	IF_4	CALL_4
0x1f34	            0x4898	                                    cdqe	       708	reflog.c	FUNCTION_17	IF_4	CALL_4
0x1f36	    0x488d14c50000	                        lea rdx, [rax*8]	       708	reflog.c	FUNCTION_17	IF_4	CALL_4
0x1f3e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       708	reflog.c	FUNCTION_17	IF_4	CALL_4
0x1f42	          0x4801d0	                            add rax, rdx	       708	reflog.c	FUNCTION_17	IF_4	CALL_4
0x1f45	          0x488b00	                    mov rax, qword [rax]	       708	reflog.c	FUNCTION_17	IF_4	CALL_4
0x1f48	      0xbe01000000	                              mov esi, 1	       708	reflog.c	FUNCTION_17	IF_4	CALL_4
0x1f4d	          0x4889c7	                            mov rdi, rax	       708	reflog.c	FUNCTION_17	IF_4	CALL_4
0x1f50	      0xe800000000	                          call 0x4001f95	       708	reflog.c	FUNCTION_17	IF_4	CALL_4
0x1f55	            0x85c0	                           test eax, eax	       708	reflog.c	FUNCTION_17	IF_4	CALL_4
0x1f57	            0x7429	                            je 0x4001fc2	       708	reflog.c	FUNCTION_17	IF_4	CALL_4
0x1f59	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       709	reflog.c	FUNCTION_17	CALL_5
0x1f5c	            0x4898	                                    cdqe	       709	reflog.c	FUNCTION_17	CALL_5
0x1f5e	    0x488d14c50000	                        lea rdx, [rax*8]	       709	reflog.c	FUNCTION_17	CALL_5
0x1f66	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       709	reflog.c	FUNCTION_17	CALL_5
0x1f6a	          0x4801d0	                            add rax, rdx	       709	reflog.c	FUNCTION_17	CALL_5
0x1f6d	          0x488b00	                    mov rax, qword [rax]	       709	reflog.c	FUNCTION_17	CALL_5
0x1f70	          0x4889c6	                            mov rsi, rax	       709	reflog.c	FUNCTION_17	CALL_5
0x1f73	      0xbf00000000	                              mov edi, 0	       709	reflog.c	FUNCTION_17	CALL_5
0x1f78	      0xb800000000	                              mov eax, 0	       709	reflog.c	FUNCTION_17	CALL_5
0x1f7d	      0xe800000000	                          call 0x4001fc2	       709	reflog.c	FUNCTION_17	CALL_5
0x1f82	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       710	reflog.c	FUNCTION_17	CALL_6
0x1f85	            0x4898	                                    cdqe	       710	reflog.c	FUNCTION_17	CALL_6
0x1f87	    0x488d14c50000	                        lea rdx, [rax*8]	       710	reflog.c	FUNCTION_17	CALL_6
0x1f8f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       710	reflog.c	FUNCTION_17	CALL_6
0x1f93	          0x4801d0	                            add rax, rdx	       710	reflog.c	FUNCTION_17	CALL_6
0x1f96	          0x488b00	                    mov rax, qword [rax]	       710	reflog.c	FUNCTION_17	CALL_6
0x1f99	          0x4889c7	                            mov rdi, rax	       710	reflog.c	FUNCTION_17	CALL_6
0x1f9c	      0xe800000000	                          call 0x4001fe1	       710	reflog.c	FUNCTION_17	CALL_6
0x1fa1	            0x85c0	                           test eax, eax	       710	reflog.c	FUNCTION_17	CALL_6
0x1fa3	           0xf94c0	                                 sete al	       710	reflog.c	FUNCTION_17	CALL_6
0x1fa6	           0xfb6c0	                           movzx eax, al	       710	reflog.c	FUNCTION_17	CALL_6
0x1fa9	              0xc9	                                   leave	       711	reflog.c	FUNCTION_17
0x1faa	              0xc3	                                     ret	       711	reflog.c	FUNCTION_17
unreachable	IF,5:ELSE,0:FOR,0:SWITCH,0:DO,0:WHILE,0:CALL,3:functions,0	56
0xa7e	              0x55	                                push rbp	       257	reflog.c	FUNCTION_5
0xa7f	          0x4889e5	                            mov rbp, rsp	       257	reflog.c	FUNCTION_5
0xa82	        0x4883ec20	                           sub rsp, 0x20	       257	reflog.c	FUNCTION_5
0xa86	        0x48897df8	                mov qword [rbp - 8], rdi	       257	reflog.c	FUNCTION_5
0xa8a	        0x488975f0	             mov qword [rbp - 0x10], rsi	       257	reflog.c	FUNCTION_5
0xa8e	        0x488955e8	             mov qword [rbp - 0x18], rdx	       257	reflog.c	FUNCTION_5
0xa92	      0x48837df000	               cmp qword [rbp - 0x10], 0	       262	reflog.c	FUNCTION_5	IF_1
0xa97	            0x753d	                           jne 0x4000b16	       262	reflog.c	FUNCTION_5	IF_1
0xa99	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       263	reflog.c	FUNCTION_5	IF_1	IF_2	CALL_1
0xa9d	          0x4889c7	                            mov rdi, rax	       263	reflog.c	FUNCTION_5	IF_1	IF_2	CALL_1
0xaa0	      0xe852f6ffff	                    call sym.is_null_oid	       263	reflog.c	FUNCTION_5	IF_1	IF_2	CALL_1
0xaa5	            0x85c0	                           test eax, eax	       263	reflog.c	FUNCTION_5	IF_1	IF_2	CALL_1
0xaa7	            0x740a	                            je 0x4000af3	       263	reflog.c	FUNCTION_5	IF_1	IF_2	CALL_1
0xaa9	      0xb800000000	                              mov eax, 0	       264	reflog.c	FUNCTION_5	IF_1	IF_2
0xaae	      0xe98e000000	                           jmp 0x4000b81	       264	reflog.c	FUNCTION_5	IF_1	IF_2
0xab3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       266	reflog.c	FUNCTION_5	IF_1	CALL_2
0xab7	      0xbe01000000	                              mov esi, 1	       266	reflog.c	FUNCTION_5	IF_1	CALL_2
0xabc	          0x4889c7	                            mov rdi, rax	       266	reflog.c	FUNCTION_5	IF_1	CALL_2
0xabf	      0xe800000000	                          call 0x4000b04	       266	reflog.c	FUNCTION_5	IF_1	CALL_2
0xac4	        0x488945f0	             mov qword [rbp - 0x10], rax	       266	reflog.c	FUNCTION_5	IF_1	CALL_2
0xac8	      0x48837df000	               cmp qword [rbp - 0x10], 0	       269	reflog.c	FUNCTION_5	IF_1	IF_3
0xacd	            0x7507	                           jne 0x4000b16	       269	reflog.c	FUNCTION_5	IF_1	IF_3
0xacf	      0xb800000000	                              mov eax, 0	       270	reflog.c	FUNCTION_5	IF_1	IF_3
0xad4	            0xeb6b	                           jmp 0x4000b81	       270	reflog.c	FUNCTION_5	IF_1	IF_3
0xad6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       274	reflog.c	FUNCTION_5	IF_4
0xada	            0x8b00	                    mov eax, dword [rax]	       274	reflog.c	FUNCTION_5	IF_4
0xadc	          0xc1e804	                              shr eax, 4	       274	reflog.c	FUNCTION_5	IF_4
0xadf	      0x25ffffff07	                      and eax, 0x7ffffff	       274	reflog.c	FUNCTION_5	IF_4
0xae4	      0x2500100000	                         and eax, 0x1000	       274	reflog.c	FUNCTION_5	IF_4
0xae9	            0x85c0	                           test eax, eax	       274	reflog.c	FUNCTION_5	IF_4
0xaeb	            0x7407	                            je 0x4000b34	       274	reflog.c	FUNCTION_5	IF_4
0xaed	      0xb800000000	                              mov eax, 0	       275	reflog.c	FUNCTION_5	IF_4
0xaf2	            0xeb4d	                           jmp 0x4000b81	       275	reflog.c	FUNCTION_5	IF_4
0xaf4	        0x488b45f8	                mov rax, qword [rbp - 8]	       277	reflog.c	FUNCTION_5	IF_5
0xaf8	        0x488b4008	                mov rax, qword [rax + 8]	       277	reflog.c	FUNCTION_5	IF_5
0xafc	          0x4885c0	                           test rax, rax	       277	reflog.c	FUNCTION_5	IF_5
0xaff	            0x7425	                            je 0x4000b66	       277	reflog.c	FUNCTION_5	IF_5
0xb01	        0x488b45f8	                mov rax, qword [rbp - 8]	       277	reflog.c	FUNCTION_5	IF_5
0xb05	        0x488b4010	            mov rax, qword [rax + 0x10] 	       277	reflog.c	FUNCTION_5	IF_5
0xb09	          0x4885c0	                           test rax, rax	       277	reflog.c	FUNCTION_5	IF_5
0xb0c	            0x7418	                            je 0x4000b66	       277	reflog.c	FUNCTION_5	IF_5
0xb0e	        0x488b45f8	                mov rax, qword [rbp - 8]	       278	reflog.c	FUNCTION_5	IF_5
0xb12	    0x48c740100000	               mov qword [rax + 0x10], 0	       278	reflog.c	FUNCTION_5	IF_5
0xb1a	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	reflog.c	FUNCTION_5	IF_5	CALL_3
0xb1e	          0x4889c7	                            mov rdi, rax	       279	reflog.c	FUNCTION_5	IF_5	CALL_3
0xb21	      0xe878fdffff	                 call sym.mark_reachable	       279	reflog.c	FUNCTION_5	IF_5	CALL_3
0xb26	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       282	reflog.c	FUNCTION_5
0xb2a	            0x8b00	                    mov eax, dword [rax]	       282	reflog.c	FUNCTION_5
0xb2c	          0xc1e804	                              shr eax, 4	       282	reflog.c	FUNCTION_5
0xb2f	      0x25ffffff07	                      and eax, 0x7ffffff	       282	reflog.c	FUNCTION_5
0xb34	      0x2500100000	                         and eax, 0x1000	       282	reflog.c	FUNCTION_5
0xb39	            0x85c0	                           test eax, eax	       282	reflog.c	FUNCTION_5
0xb3b	           0xf94c0	                                 sete al	       282	reflog.c	FUNCTION_5
0xb3e	           0xfb6c0	                           movzx eax, al	       282	reflog.c	FUNCTION_5
0xb41	              0xc9	                                   leave	       283	reflog.c	FUNCTION_5
0xb42	              0xc3	                                     ret	       283	reflog.c	FUNCTION_5
count_reflog_ent	IF,1:ELSE,0:FOR,0:SWITCH,0:DO,0:WHILE,0:CALL,0:functions,0	26
0x1a51	              0x55	                                push rbp	       613	reflog.c	FUNCTION_15
0x1a52	          0x4889e5	                            mov rbp, rsp	       613	reflog.c	FUNCTION_15
0x1a55	        0x48897de8	             mov qword [rbp - 0x18], rdi	       613	reflog.c	FUNCTION_15
0x1a59	        0x488975e0	             mov qword [rbp - 0x20], rsi	       613	reflog.c	FUNCTION_15
0x1a5d	        0x488955d8	             mov qword [rbp - 0x28], rdx	       613	reflog.c	FUNCTION_15
0x1a61	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       613	reflog.c	FUNCTION_15
0x1a65	        0x448945cc	             mov dword [rbp - 0x34], r8d	       613	reflog.c	FUNCTION_15
0x1a69	        0x4c894dc0	              mov qword [rbp - 0x40], r9	       613	reflog.c	FUNCTION_15
0x1a6d	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       614	reflog.c	FUNCTION_15
0x1a71	        0x488945f8	                mov qword [rbp - 8], rax	       614	reflog.c	FUNCTION_15
0x1a75	        0x488b45f8	                mov rax, qword [rbp - 8]	       615	reflog.c	FUNCTION_15	IF_1
0x1a79	    0x488b80d00800	           mov rax, qword [rax + 0x8d0] 	       615	reflog.c	FUNCTION_15	IF_1
0x1a80	          0x4885c0	                           test rax, rax	       615	reflog.c	FUNCTION_15	IF_1
0x1a83	            0x7411	                            je 0x4001ad6	       615	reflog.c	FUNCTION_15	IF_1
0x1a85	        0x488b45f8	                mov rax, qword [rbp - 8]	       615	reflog.c	FUNCTION_15	IF_1
0x1a89	    0x488b80d00800	           mov rax, qword [rax + 0x8d0] 	       615	reflog.c	FUNCTION_15	IF_1
0x1a90	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       615	reflog.c	FUNCTION_15	IF_1
0x1a94	            0x7617	                           jbe 0x4001aed	       615	reflog.c	FUNCTION_15	IF_1
0x1a96	        0x488b45f8	                mov rax, qword [rbp - 8]	       616	reflog.c	FUNCTION_15	IF_1
0x1a9a	    0x8b80e0080000	           mov eax, dword [rax + 0x8e0] 	       616	reflog.c	FUNCTION_15	IF_1
0x1aa0	          0x8d5001	                      lea edx, [rax + 1]	       616	reflog.c	FUNCTION_15	IF_1
0x1aa3	        0x488b45f8	                mov rax, qword [rbp - 8]	       616	reflog.c	FUNCTION_15	IF_1
0x1aa7	    0x8990e0080000	            mov dword [rax + 0x8e0], edx	       616	reflog.c	FUNCTION_15	IF_1
0x1aad	      0xb800000000	                              mov eax, 0	       617	reflog.c	FUNCTION_15
0x1ab2	              0x5d	                                 pop rbp	       618	reflog.c	FUNCTION_15
0x1ab3	              0xc3	                                     ret	       618	reflog.c	FUNCTION_15
cmd_reflog_delete	IF,10:ELSE,7:FOR,2:SWITCH,0:DO,0:WHILE,0:CALL,19:functions,0	211
0x1ab4	              0x55	                                push rbp	       621	reflog.c	FUNCTION_16
0x1ab5	          0x4889e5	                            mov rbp, rsp	       621	reflog.c	FUNCTION_16
0x1ab8	    0x4881ec700900	                          sub rsp, 0x970	       621	reflog.c	FUNCTION_16
0x1abf	    0x89bdacf6ffff	            mov dword [rbp - 0x954], edi	       621	reflog.c	FUNCTION_16
0x1ac5	    0x4889b5a0f6ff	            mov qword [rbp - 0x960], rsi	       621	reflog.c	FUNCTION_16
0x1acc	    0x48899598f6ff	            mov qword [rbp - 0x968], rdx	       621	reflog.c	FUNCTION_16
0x1ad3	    0x64488b042528	                mov rax, qword fs:[0x28]	       621	reflog.c	FUNCTION_16
0x1adc	        0x488945f8	                mov qword [rbp - 8], rax	       621	reflog.c	FUNCTION_16
0x1ae0	            0x31c0	                            xor eax, eax	       621	reflog.c	FUNCTION_16
0x1ae2	    0xc785b4f6ffff	              mov dword [rbp - 0x94c], 0	       623	reflog.c	FUNCTION_16
0x1aec	    0xc785b8f6ffff	              mov dword [rbp - 0x948], 0	       624	reflog.c	FUNCTION_16
0x1af6	    0x488d8500f7ff	                  lea rax, [rbp - 0x900]	       626	reflog.c	FUNCTION_16	CALL_1
0x1afd	      0xbaf8080000	                          mov edx, 0x8f8	       626	reflog.c	FUNCTION_16	CALL_1
0x1b02	      0xbe00000000	                              mov esi, 0	       626	reflog.c	FUNCTION_16	CALL_1
0x1b07	          0x4889c7	                            mov rdi, rax	       626	reflog.c	FUNCTION_16	CALL_1
0x1b0a	      0xe800000000	                          call 0x4001b4f	       626	reflog.c	FUNCTION_16	CALL_1
0x1b0f	    0xc785b0f6ffff	              mov dword [rbp - 0x950], 1	       628	reflog.c	FUNCTION_16	FOR_1
0x1b19	      0xe903010000	                           jmp 0x4001c61	       628	reflog.c	FUNCTION_16	FOR_1
0x1b1e	    0x8b85b0f6ffff	            mov eax, dword [rbp - 0x950]	       629	reflog.c	FUNCTION_16	FOR_1
0x1b24	            0x4898	                                    cdqe	       629	reflog.c	FUNCTION_16	FOR_1
0x1b26	    0x488d14c50000	                        lea rdx, [rax*8]	       629	reflog.c	FUNCTION_16	FOR_1
0x1b2e	    0x488b85a0f6ff	            mov rax, qword [rbp - 0x960]	       629	reflog.c	FUNCTION_16	FOR_1
0x1b35	          0x4801d0	                            add rax, rdx	       629	reflog.c	FUNCTION_16	FOR_1
0x1b38	          0x488b00	                    mov rax, qword [rax]	       629	reflog.c	FUNCTION_16	FOR_1
0x1b3b	    0x488985d0f6ff	            mov qword [rbp - 0x930], rax	       629	reflog.c	FUNCTION_16	FOR_1
0x1b42	    0x488b85d0f6ff	            mov rax, qword [rbp - 0x930]	       630	reflog.c	FUNCTION_16	FOR_1	IF_1	CALL_3
0x1b49	      0xbe00000000	                              mov esi, 0	       630	reflog.c	FUNCTION_16	FOR_1	IF_1	CALL_3
0x1b4e	          0x4889c7	                            mov rdi, rax	       630	reflog.c	FUNCTION_16	FOR_1	IF_1	CALL_3
0x1b51	      0xe800000000	                          call 0x4001b96	       630	reflog.c	FUNCTION_16	FOR_1	IF_1	CALL_3
0x1b56	            0x85c0	                           test eax, eax	       630	reflog.c	FUNCTION_16	FOR_1	IF_1	CALL_3
0x1b58	            0x7418	                            je 0x4001bb2	       630	reflog.c	FUNCTION_16	FOR_1	IF_1	CALL_3
0x1b5a	    0x488b85d0f6ff	            mov rax, qword [rbp - 0x930]	       630	reflog.c	FUNCTION_16	FOR_1	IF_1	CALL_3
0x1b61	      0xbe00000000	                              mov esi, 0	       630	reflog.c	FUNCTION_16	FOR_1	IF_1	CALL_3
0x1b66	          0x4889c7	                            mov rdi, rax	       630	reflog.c	FUNCTION_16	FOR_1	IF_1	CALL_3
0x1b69	      0xe800000000	                          call 0x4001bae	       630	reflog.c	FUNCTION_16	FOR_1	IF_1	CALL_3
0x1b6e	            0x85c0	                           test eax, eax	       630	reflog.c	FUNCTION_16	FOR_1	IF_1	CALL_3
0x1b70	            0x750c	                           jne 0x4001bbe	       630	reflog.c	FUNCTION_16	FOR_1	IF_1	CALL_3
0x1b72	    0x838db8f6ffff	               or dword [rbp - 0x948], 1	       631	reflog.c	FUNCTION_16	FOR_1	IF_1
0x1b79	      0xe99c000000	                           jmp 0x4001c5a	       631	reflog.c	FUNCTION_16	FOR_1	IF_1
0x1b7e	    0x488b85d0f6ff	            mov rax, qword [rbp - 0x930]	       632	reflog.c	FUNCTION_16	FOR_1	ELSE_1	IF_2	CALL_4
0x1b85	      0xbe00000000	                              mov esi, 0	       632	reflog.c	FUNCTION_16	FOR_1	ELSE_1	IF_2	CALL_4
0x1b8a	          0x4889c7	                            mov rdi, rax	       632	reflog.c	FUNCTION_16	FOR_1	ELSE_1	IF_2	CALL_4
0x1b8d	      0xe800000000	                          call 0x4001bd2	       632	reflog.c	FUNCTION_16	FOR_1	ELSE_1	IF_2	CALL_4
0x1b92	            0x85c0	                           test eax, eax	       632	reflog.c	FUNCTION_16	FOR_1	ELSE_1	IF_2	CALL_4
0x1b94	            0x7509	                           jne 0x4001bdf	       632	reflog.c	FUNCTION_16	FOR_1	ELSE_1	IF_2	CALL_4
0x1b96	    0x838db8f6ffff	               or dword [rbp - 0x948], 8	       633	reflog.c	FUNCTION_16	FOR_1	ELSE_1	IF_2
0x1b9d	            0xeb7b	                           jmp 0x4001c5a	       633	reflog.c	FUNCTION_16	FOR_1	ELSE_1	IF_2
0x1b9f	    0x488b85d0f6ff	            mov rax, qword [rbp - 0x930]	       634	reflog.c	FUNCTION_16	FOR_1	ELSE_2	IF_3	CALL_5
0x1ba6	      0xbe00000000	                              mov esi, 0	       634	reflog.c	FUNCTION_16	FOR_1	ELSE_2	IF_3	CALL_5
0x1bab	          0x4889c7	                            mov rdi, rax	       634	reflog.c	FUNCTION_16	FOR_1	ELSE_2	IF_3	CALL_5
0x1bae	      0xe800000000	                          call 0x4001bf3	       634	reflog.c	FUNCTION_16	FOR_1	ELSE_2	IF_3	CALL_5
0x1bb3	            0x85c0	                           test eax, eax	       634	reflog.c	FUNCTION_16	FOR_1	ELSE_2	IF_3	CALL_5
0x1bb5	            0x7509	                           jne 0x4001c00	       634	reflog.c	FUNCTION_16	FOR_1	ELSE_2	IF_3	CALL_5
0x1bb7	    0x838db8f6ffff	               or dword [rbp - 0x948], 2	       635	reflog.c	FUNCTION_16	FOR_1	ELSE_2	IF_3
0x1bbe	            0xeb5a	                           jmp 0x4001c5a	       635	reflog.c	FUNCTION_16	FOR_1	ELSE_2	IF_3
0x1bc0	    0x488b85d0f6ff	            mov rax, qword [rbp - 0x930]	       636	reflog.c	FUNCTION_16	FOR_1	ELSE_3	IF_4	CALL_6
0x1bc7	      0xbe00000000	                              mov esi, 0	       636	reflog.c	FUNCTION_16	FOR_1	ELSE_3	IF_4	CALL_6
0x1bcc	          0x4889c7	                            mov rdi, rax	       636	reflog.c	FUNCTION_16	FOR_1	ELSE_3	IF_4	CALL_6
0x1bcf	      0xe800000000	                          call 0x4001c14	       636	reflog.c	FUNCTION_16	FOR_1	ELSE_3	IF_4	CALL_6
0x1bd4	            0x85c0	                           test eax, eax	       636	reflog.c	FUNCTION_16	FOR_1	ELSE_3	IF_4	CALL_6
0x1bd6	            0x7509	                           jne 0x4001c21	       636	reflog.c	FUNCTION_16	FOR_1	ELSE_3	IF_4	CALL_6
0x1bd8	    0x838db8f6ffff	               or dword [rbp - 0x948], 4	       637	reflog.c	FUNCTION_16	FOR_1	ELSE_3	IF_4
0x1bdf	            0xeb39	                           jmp 0x4001c5a	       637	reflog.c	FUNCTION_16	FOR_1	ELSE_3	IF_4
0x1be1	    0x488b85d0f6ff	            mov rax, qword [rbp - 0x930]	       638	reflog.c	FUNCTION_16	FOR_1	ELSE_4	IF_5	CALL_7
0x1be8	      0xbe00000000	                              mov esi, 0	       638	reflog.c	FUNCTION_16	FOR_1	ELSE_4	IF_5	CALL_7
0x1bed	          0x4889c7	                            mov rdi, rax	       638	reflog.c	FUNCTION_16	FOR_1	ELSE_4	IF_5	CALL_7
0x1bf0	      0xe800000000	                          call 0x4001c35	       638	reflog.c	FUNCTION_16	FOR_1	ELSE_4	IF_5	CALL_7
0x1bf5	            0x85c0	                           test eax, eax	       638	reflog.c	FUNCTION_16	FOR_1	ELSE_4	IF_5	CALL_7
0x1bf7	            0x7509	                           jne 0x4001c42	       638	reflog.c	FUNCTION_16	FOR_1	ELSE_4	IF_5	CALL_7
0x1bf9	    0x8385b0f6ffff	              add dword [rbp - 0x950], 1	       639	reflog.c	FUNCTION_16	FOR_1	ELSE_4	IF_5
0x1c00	            0xeb34	                           jmp 0x4001c76	       640	reflog.c	FUNCTION_16	FOR_1	ELSE_4	IF_5
0x1c02	    0x488b85d0f6ff	            mov rax, qword [rbp - 0x930]	       642	reflog.c	FUNCTION_16	FOR_1	ELSE_5	IF_6
0x1c09	           0xfb600	                   movzx eax, byte [rax]	       642	reflog.c	FUNCTION_16	FOR_1	ELSE_5	IF_6
0x1c0c	            0x3c2d	                            cmp al, 0x2d	       642	reflog.c	FUNCTION_16	FOR_1	ELSE_5	IF_6
0x1c0e	            0x7525	                           jne 0x4001c75	       642	reflog.c	FUNCTION_16	FOR_1	ELSE_5	IF_6
0x1c10	      0xbf00000000	                              mov edi, 0	       643	reflog.c	FUNCTION_16	FOR_1	ELSE_5	IF_6
0x1c15	      0xe800000000	                          call 0x4001c5a	       643	reflog.c	FUNCTION_16	FOR_1	ELSE_5	IF_6
0x1c1a	    0x8385b0f6ffff	              add dword [rbp - 0x950], 1	       628	reflog.c	FUNCTION_16	FOR_1
0x1c21	    0x8b85b0f6ffff	            mov eax, dword [rbp - 0x950]	       628	reflog.c	FUNCTION_16	FOR_1
0x1c27	    0x3b85acf6ffff	            cmp eax, dword [rbp - 0x954]	       628	reflog.c	FUNCTION_16	FOR_1
0x1c2d	     0xf8cebfeffff	                            jl 0x4001b5e	       628	reflog.c	FUNCTION_16	FOR_1
0x1c33	            0xeb01	                           jmp 0x4001c76	       628	reflog.c	FUNCTION_16	FOR_1
0x1c35	              0x90	                                     nop	       645	reflog.c	FUNCTION_16	FOR_1	ELSE_6
0x1c36	    0x8b85acf6ffff	            mov eax, dword [rbp - 0x954]	       648	reflog.c	FUNCTION_16	IF_7
0x1c3c	    0x2b85b0f6ffff	            sub eax, dword [rbp - 0x950]	       648	reflog.c	FUNCTION_16	IF_7
0x1c42	            0x85c0	                           test eax, eax	       648	reflog.c	FUNCTION_16	IF_7
0x1c44	     0xf8f29020000	                            jg 0x4001eb3	       648	reflog.c	FUNCTION_16	IF_7
0x1c4a	      0xbf00000000	                              mov edi, 0	       649	reflog.c	FUNCTION_16	CALL_9
0x1c4f	      0xb800000000	                              mov eax, 0	       649	reflog.c	FUNCTION_16	CALL_9
0x1c54	      0xe800000000	                          call 0x4001c99	       649	reflog.c	FUNCTION_16	CALL_9
0x1c59	      0xe8a2e3ffff	                    call sym.const_error	       649	reflog.c	FUNCTION_16	CALL_9
0x1c5e	      0xe928020000	                           jmp 0x4001ecb	       649	reflog.c	FUNCTION_16	CALL_9
0x1c63	    0x8b85b0f6ffff	            mov eax, dword [rbp - 0x950]	       652	reflog.c	FUNCTION_16	FOR_2	CALL_10
0x1c69	            0x4898	                                    cdqe	       652	reflog.c	FUNCTION_16	FOR_2	CALL_10
0x1c6b	    0x488d14c50000	                        lea rdx, [rax*8]	       652	reflog.c	FUNCTION_16	FOR_2	CALL_10
0x1c73	    0x488b85a0f6ff	            mov rax, qword [rbp - 0x960]	       652	reflog.c	FUNCTION_16	FOR_2	CALL_10
0x1c7a	          0x4801d0	                            add rax, rdx	       652	reflog.c	FUNCTION_16	FOR_2	CALL_10
0x1c7d	          0x488b00	                    mov rax, qword [rax]	       652	reflog.c	FUNCTION_16	FOR_2	CALL_10
0x1c80	      0xbe00000000	                              mov esi, 0	       652	reflog.c	FUNCTION_16	FOR_2	CALL_10
0x1c85	          0x4889c7	                            mov rdi, rax	       652	reflog.c	FUNCTION_16	FOR_2	CALL_10
0x1c88	      0xe800000000	                          call 0x4001ccd	       652	reflog.c	FUNCTION_16	FOR_2	CALL_10
0x1c8d	    0x488985d8f6ff	            mov qword [rbp - 0x928], rax	       652	reflog.c	FUNCTION_16	FOR_2	CALL_10
0x1c94	    0x4883bdd8f6ff	              cmp qword [rbp - 0x928], 0	       657	reflog.c	FUNCTION_16	FOR_2	IF_8
0x1c9c	            0x753f	                           jne 0x4001d1d	       657	reflog.c	FUNCTION_16	FOR_2	IF_8
0x1c9e	    0x8b85b0f6ffff	            mov eax, dword [rbp - 0x950]	       658	reflog.c	FUNCTION_16	FOR_2	IF_8	CALL_11
0x1ca4	            0x4898	                                    cdqe	       658	reflog.c	FUNCTION_16	FOR_2	IF_8	CALL_11
0x1ca6	    0x488d14c50000	                        lea rdx, [rax*8]	       658	reflog.c	FUNCTION_16	FOR_2	IF_8	CALL_11
0x1cae	    0x488b85a0f6ff	            mov rax, qword [rbp - 0x960]	       658	reflog.c	FUNCTION_16	FOR_2	IF_8	CALL_11
0x1cb5	          0x4801d0	                            add rax, rdx	       658	reflog.c	FUNCTION_16	FOR_2	IF_8	CALL_11
0x1cb8	          0x488b00	                    mov rax, qword [rax]	       658	reflog.c	FUNCTION_16	FOR_2	IF_8	CALL_11
0x1cbb	          0x4889c6	                            mov rsi, rax	       658	reflog.c	FUNCTION_16	FOR_2	IF_8	CALL_11
0x1cbe	      0xbf00000000	                              mov edi, 0	       658	reflog.c	FUNCTION_16	FOR_2	IF_8	CALL_11
0x1cc3	      0xb800000000	                              mov eax, 0	       658	reflog.c	FUNCTION_16	FOR_2	IF_8	CALL_11
0x1cc8	      0xe800000000	                          call 0x4001d0d	       658	reflog.c	FUNCTION_16	FOR_2	IF_8	CALL_11
0x1ccd	      0xe82ee3ffff	                    call sym.const_error	       658	reflog.c	FUNCTION_16	FOR_2	IF_8	CALL_11
0x1cd2	     0x985b4f6ffff	             or dword [rbp - 0x94c], eax	       658	reflog.c	FUNCTION_16	FOR_2	IF_8	CALL_11
0x1cd8	      0xe98f010000	                           jmp 0x4001eac	       659	reflog.c	FUNCTION_16	FOR_2	IF_8
0x1cdd	    0x488b85d8f6ff	            mov rax, qword [rbp - 0x928]	       662	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_12
0x1ce4	    0x8b95b0f6ffff	            mov edx, dword [rbp - 0x950]	       662	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_12
0x1cea	          0x4863d2	                         movsxd rdx, edx	       662	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_12
0x1ced	    0x488d0cd50000	                        lea rcx, [rdx*8]	       662	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_12
0x1cf5	    0x488b95a0f6ff	            mov rdx, qword [rbp - 0x960]	       662	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_12
0x1cfc	          0x4801ca	                            add rdx, rcx	       662	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_12
0x1cff	          0x488b12	                    mov rdx, qword [rdx]	       662	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_12
0x1d02	          0x4829d0	                            sub rax, rdx	       662	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_12
0x1d05	            0x89c6	                            mov esi, eax	       662	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_12
0x1d07	    0x8b85b0f6ffff	            mov eax, dword [rbp - 0x950]	       662	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_12
0x1d0d	            0x4898	                                    cdqe	       662	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_12
0x1d0f	    0x488d14c50000	                        lea rdx, [rax*8]	       662	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_12
0x1d17	    0x488b85a0f6ff	            mov rax, qword [rbp - 0x960]	       662	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_12
0x1d1e	          0x4801d0	                            add rax, rdx	       662	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_12
0x1d21	          0x488b00	                    mov rax, qword [rax]	       662	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_12
0x1d24	    0x488d8dc8f6ff	                  lea rcx, [rbp - 0x938]	       662	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_12
0x1d2b	    0x488d95e0f6ff	                  lea rdx, [rbp - 0x920]	       662	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_12
0x1d32	          0x4889c7	                            mov rdi, rax	       662	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_12
0x1d35	      0xe800000000	                          call 0x4001d7a	       662	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_12
0x1d3a	            0x85c0	                           test eax, eax	       662	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_12
0x1d3c	            0x753f	                           jne 0x4001dbd	       662	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_12
0x1d3e	    0x8b85b0f6ffff	            mov eax, dword [rbp - 0x950]	       663	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_13
0x1d44	            0x4898	                                    cdqe	       663	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_13
0x1d46	    0x488d14c50000	                        lea rdx, [rax*8]	       663	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_13
0x1d4e	    0x488b85a0f6ff	            mov rax, qword [rbp - 0x960]	       663	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_13
0x1d55	          0x4801d0	                            add rax, rdx	       663	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_13
0x1d58	          0x488b00	                    mov rax, qword [rax]	       663	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_13
0x1d5b	          0x4889c6	                            mov rsi, rax	       663	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_13
0x1d5e	      0xbf00000000	                              mov edi, 0	       663	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_13
0x1d63	      0xb800000000	                              mov eax, 0	       663	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_13
0x1d68	      0xe800000000	                          call 0x4001dad	       663	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_13
0x1d6d	      0xe88ee2ffff	                    call sym.const_error	       663	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_13
0x1d72	     0x985b4f6ffff	             or dword [rbp - 0x94c], eax	       663	reflog.c	FUNCTION_16	FOR_2	IF_9	CALL_13
0x1d78	      0xe9ef000000	                           jmp 0x4001eac	       664	reflog.c	FUNCTION_16	FOR_2	IF_9
0x1d7d	    0x488b85d8f6ff	            mov rax, qword [rbp - 0x928]	       667	reflog.c	FUNCTION_16	FOR_2	CALL_14
0x1d84	        0x488d4802	                      lea rcx, [rax + 2]	       667	reflog.c	FUNCTION_16	FOR_2	CALL_14
0x1d88	    0x488d85c0f6ff	                  lea rax, [rbp - 0x940]	       667	reflog.c	FUNCTION_16	FOR_2	CALL_14
0x1d8f	      0xba0a000000	                            mov edx, 0xa	       667	reflog.c	FUNCTION_16	FOR_2	CALL_14
0x1d94	          0x4889c6	                            mov rsi, rax	       667	reflog.c	FUNCTION_16	FOR_2	CALL_14
0x1d97	          0x4889cf	                            mov rdi, rcx	       667	reflog.c	FUNCTION_16	FOR_2	CALL_14
0x1d9a	      0xe800000000	                          call 0x4001ddf	       667	reflog.c	FUNCTION_16	FOR_2	CALL_14
0x1d9f	    0x8985bcf6ffff	            mov dword [rbp - 0x944], eax	       667	reflog.c	FUNCTION_16	FOR_2	CALL_14
0x1da5	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       668	reflog.c	FUNCTION_16	FOR_2	IF_10
0x1dac	           0xfb600	                   movzx eax, byte [rax]	       668	reflog.c	FUNCTION_16	FOR_2	IF_10
0x1daf	            0x3c7d	                            cmp al, 0x7d	       668	reflog.c	FUNCTION_16	FOR_2	IF_10
0x1db1	            0x7528	                           jne 0x4001e1b	       668	reflog.c	FUNCTION_16	FOR_2	IF_10
0x1db3	    0x8b85bcf6ffff	            mov eax, dword [rbp - 0x944]	       669	reflog.c	FUNCTION_16	FOR_2	IF_10
0x1db9	            0xf7d8	                                 neg eax	       669	reflog.c	FUNCTION_16	FOR_2	IF_10
0x1dbb	          0x8945e0	             mov dword [rbp - 0x20], eax	       669	reflog.c	FUNCTION_16	FOR_2	IF_10
0x1dbe	    0x488b85c8f6ff	            mov rax, qword [rbp - 0x938]	       670	reflog.c	FUNCTION_16	FOR_2	IF_10	CALL_15
0x1dc5	    0x488d9500f7ff	                  lea rdx, [rbp - 0x900]	       670	reflog.c	FUNCTION_16	FOR_2	IF_10	CALL_15
0x1dcc	      0xbe00000000	                              mov esi, 0	       670	reflog.c	FUNCTION_16	FOR_2	IF_10	CALL_15
0x1dd1	          0x4889c7	                            mov rdi, rax	       670	reflog.c	FUNCTION_16	FOR_2	IF_10	CALL_15
0x1dd4	      0xe800000000	                          call 0x4001e19	       670	reflog.c	FUNCTION_16	FOR_2	IF_10	CALL_15
0x1dd9	            0xeb3f	                           jmp 0x4001e5a	       670	reflog.c	FUNCTION_16	FOR_2	IF_10	CALL_15
0x1ddb	    0x488b85d8f6ff	            mov rax, qword [rbp - 0x928]	       672	reflog.c	FUNCTION_16	FOR_2	ELSE_7	CALL_16
0x1de2	        0x4883c002	                              add rax, 2	       672	reflog.c	FUNCTION_16	FOR_2	ELSE_7	CALL_16
0x1de6	      0xbe00000000	                              mov esi, 0	       672	reflog.c	FUNCTION_16	FOR_2	ELSE_7	CALL_16
0x1deb	          0x4889c7	                            mov rdi, rax	       672	reflog.c	FUNCTION_16	FOR_2	ELSE_7	CALL_16
0x1dee	      0xe800000000	                          call 0x4001e33	       672	reflog.c	FUNCTION_16	FOR_2	ELSE_7	CALL_16
0x1df3	        0x488945d0	             mov qword [rbp - 0x30], rax	       672	reflog.c	FUNCTION_16	FOR_2	ELSE_7	CALL_16
0x1df7	    0x488b85c8f6ff	            mov rax, qword [rbp - 0x938]	       673	reflog.c	FUNCTION_16	FOR_2	ELSE_7	CALL_17
0x1dfe	    0x488d9500f7ff	                  lea rdx, [rbp - 0x900]	       673	reflog.c	FUNCTION_16	FOR_2	ELSE_7	CALL_17
0x1e05	      0xbe00000000	                              mov esi, 0	       673	reflog.c	FUNCTION_16	FOR_2	ELSE_7	CALL_17
0x1e0a	          0x4889c7	                            mov rdi, rax	       673	reflog.c	FUNCTION_16	FOR_2	ELSE_7	CALL_17
0x1e0d	      0xe800000000	                          call 0x4001e52	       673	reflog.c	FUNCTION_16	FOR_2	ELSE_7	CALL_17
0x1e12	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       674	reflog.c	FUNCTION_16	FOR_2	ELSE_7
0x1e1a	    0x488b85c8f6ff	            mov rax, qword [rbp - 0x938]	       677	reflog.c	FUNCTION_16	FOR_2	CALL_18
0x1e21	    0x8b95b8f6ffff	            mov edx, dword [rbp - 0x948]	       677	reflog.c	FUNCTION_16	FOR_2	CALL_18
0x1e27	    0x488db5e0f6ff	                  lea rsi, [rbp - 0x920]	       677	reflog.c	FUNCTION_16	FOR_2	CALL_18
0x1e2e	        0x4883ec08	                              sub rsp, 8	       677	reflog.c	FUNCTION_16	FOR_2	CALL_18
0x1e32	    0x488d8d00f7ff	                  lea rcx, [rbp - 0x900]	       677	reflog.c	FUNCTION_16	FOR_2	CALL_18
0x1e39	              0x51	                                push rcx	       677	reflog.c	FUNCTION_16	FOR_2	CALL_18
0x1e3a	    0x41b900000000	                              mov r9d, 0	       677	reflog.c	FUNCTION_16	FOR_2	CALL_18
0x1e40	    0x41b800000000	                              mov r8d, 0	       677	reflog.c	FUNCTION_16	FOR_2	CALL_18
0x1e46	      0xb900000000	                              mov ecx, 0	       677	reflog.c	FUNCTION_16	FOR_2	CALL_18
0x1e4b	          0x4889c7	                            mov rdi, rax	       677	reflog.c	FUNCTION_16	FOR_2	CALL_18
0x1e4e	      0xe800000000	                          call 0x4001e93	       677	reflog.c	FUNCTION_16	FOR_2	CALL_18
0x1e53	        0x4883c410	                           add rsp, 0x10	       677	reflog.c	FUNCTION_16	FOR_2	CALL_18
0x1e57	     0x985b4f6ffff	             or dword [rbp - 0x94c], eax	       677	reflog.c	FUNCTION_16	FOR_2	CALL_18
0x1e5d	    0x488b85c8f6ff	            mov rax, qword [rbp - 0x938]	       682	reflog.c	FUNCTION_16	FOR_2	CALL_19
0x1e64	          0x4889c7	                            mov rdi, rax	       682	reflog.c	FUNCTION_16	FOR_2	CALL_19
0x1e67	      0xe800000000	                          call 0x4001eac	       682	reflog.c	FUNCTION_16	FOR_2	CALL_19
0x1e6c	    0x8385b0f6ffff	              add dword [rbp - 0x950], 1	       651	reflog.c	FUNCTION_16	FOR_2
0x1e73	    0x8b85b0f6ffff	            mov eax, dword [rbp - 0x950]	       651	reflog.c	FUNCTION_16	FOR_2
0x1e79	    0x3b85acf6ffff	            cmp eax, dword [rbp - 0x954]	       651	reflog.c	FUNCTION_16	FOR_2
0x1e7f	     0xf8cdefdffff	                            jl 0x4001ca3	       651	reflog.c	FUNCTION_16	FOR_2
0x1e85	    0x8b85b4f6ffff	            mov eax, dword [rbp - 0x94c]	       684	reflog.c	FUNCTION_16
0x1e8b	        0x488b4df8	                mov rcx, qword [rbp - 8]	       685	reflog.c	FUNCTION_16
0x1e8f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       685	reflog.c	FUNCTION_16
0x1e98	            0x7405	                            je 0x4001edf	       685	reflog.c	FUNCTION_16
0x1e9a	      0xe800000000	                          call 0x4001edf	       685	reflog.c	FUNCTION_16
0x1e9f	              0xc9	                                   leave	       685	reflog.c	FUNCTION_16
0x1ea0	              0xc3	                                     ret	       685	reflog.c	FUNCTION_16
mark_reachable	IF,4:ELSE,0:FOR,1:SWITCH,0:DO,0:WHILE,2:CALL,4:functions,0	134
0x89e	              0x55	                                push rbp	       222	reflog.c	FUNCTION_4
0x89f	          0x4889e5	                            mov rbp, rsp	       222	reflog.c	FUNCTION_4
0x8a2	        0x4883ec40	                           sub rsp, 0x40	       222	reflog.c	FUNCTION_4
0x8a6	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       222	reflog.c	FUNCTION_4
0x8aa	    0x64488b042528	                mov rax, qword fs:[0x28]	       222	reflog.c	FUNCTION_4
0x8b3	        0x488945f8	                mov qword [rbp - 8], rax	       222	reflog.c	FUNCTION_4
0x8b7	            0x31c0	                            xor eax, eax	       222	reflog.c	FUNCTION_4
0x8b9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       224	reflog.c	FUNCTION_4
0x8bd	        0x488b4010	            mov rax, qword [rax + 0x10] 	       224	reflog.c	FUNCTION_4
0x8c1	        0x488945e8	             mov qword [rbp - 0x18], rax	       224	reflog.c	FUNCTION_4
0x8c5	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       225	reflog.c	FUNCTION_4
0x8cd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       227	reflog.c	FUNCTION_4	FOR_1
0x8d1	        0x488b4008	                mov rax, qword [rax + 8]	       227	reflog.c	FUNCTION_4	FOR_1
0x8d5	        0x488945d0	             mov qword [rbp - 0x30], rax	       227	reflog.c	FUNCTION_4	FOR_1
0x8d9	            0xeb3e	                           jmp 0x4000959	       227	reflog.c	FUNCTION_4	FOR_1
0x8db	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       228	reflog.c	FUNCTION_4	FOR_1
0x8df	          0x488b10	                    mov rdx, qword [rax]	       228	reflog.c	FUNCTION_4	FOR_1
0x8e2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       228	reflog.c	FUNCTION_4	FOR_1
0x8e6	          0x488b00	                    mov rax, qword [rax]	       228	reflog.c	FUNCTION_4	FOR_1
0x8e9	            0x8b00	                    mov eax, dword [rax]	       228	reflog.c	FUNCTION_4	FOR_1
0x8eb	          0xc1e804	                              shr eax, 4	       228	reflog.c	FUNCTION_4	FOR_1
0x8ee	      0x25ffffff07	                      and eax, 0x7ffffff	       228	reflog.c	FUNCTION_4	FOR_1
0x8f3	      0x25ffefff07	                      and eax, 0x7ffefff	       228	reflog.c	FUNCTION_4	FOR_1
0x8f8	      0x25ffffff07	                      and eax, 0x7ffffff	       228	reflog.c	FUNCTION_4	FOR_1
0x8fd	          0xc1e004	                              shl eax, 4	       228	reflog.c	FUNCTION_4	FOR_1
0x900	            0x89c1	                            mov ecx, eax	       228	reflog.c	FUNCTION_4	FOR_1
0x902	            0x8b02	                    mov eax, dword [rdx]	       228	reflog.c	FUNCTION_4	FOR_1
0x904	      0x250f000080	                     and eax, 0x8000000f	       228	reflog.c	FUNCTION_4	FOR_1
0x909	             0x9c8	                             or eax, ecx	       228	reflog.c	FUNCTION_4	FOR_1
0x90b	            0x8902	                    mov dword [rdx], eax	       228	reflog.c	FUNCTION_4	FOR_1
0x90d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       227	reflog.c	FUNCTION_4	FOR_1
0x911	        0x488b4008	                mov rax, qword [rax + 8]	       227	reflog.c	FUNCTION_4	FOR_1
0x915	        0x488945d0	             mov qword [rbp - 0x30], rax	       227	reflog.c	FUNCTION_4	FOR_1
0x919	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       227	reflog.c	FUNCTION_4	FOR_1
0x91d	          0x4885c0	                           test rax, rax	       227	reflog.c	FUNCTION_4	FOR_1
0x920	            0x75b9	                           jne 0x400091b	       227	reflog.c	FUNCTION_4	FOR_1
0x922	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       230	reflog.c	FUNCTION_4
0x926	        0x488b4008	                mov rax, qword [rax + 8]	       230	reflog.c	FUNCTION_4
0x92a	        0x488945d0	             mov qword [rbp - 0x30], rax	       230	reflog.c	FUNCTION_4
0x92e	      0xe91b010000	                           jmp 0x4000a8e	       231	reflog.c	FUNCTION_4	WHILE_1
0x933	        0x488d45d0	                   lea rax, [rbp - 0x30]	       233	reflog.c	FUNCTION_4	WHILE_1	CALL_1
0x937	          0x4889c7	                            mov rdi, rax	       233	reflog.c	FUNCTION_4	WHILE_1	CALL_1
0x93a	      0xe800000000	                          call 0x400097f	       233	reflog.c	FUNCTION_4	WHILE_1	CALL_1
0x93f	        0x488945f0	             mov qword [rbp - 0x10], rax	       233	reflog.c	FUNCTION_4	WHILE_1	CALL_1
0x943	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       234	reflog.c	FUNCTION_4	WHILE_1	IF_1
0x947	            0x8b00	                    mov eax, dword [rax]	       234	reflog.c	FUNCTION_4	WHILE_1	IF_1
0x949	          0xc1e804	                              shr eax, 4	       234	reflog.c	FUNCTION_4	WHILE_1	IF_1
0x94c	      0x25ffffff07	                      and eax, 0x7ffffff	       234	reflog.c	FUNCTION_4	WHILE_1	IF_1
0x951	      0x2500100000	                         and eax, 0x1000	       234	reflog.c	FUNCTION_4	WHILE_1	IF_1
0x956	            0x85c0	                           test eax, eax	       234	reflog.c	FUNCTION_4	WHILE_1	IF_1
0x958	            0x7405	                            je 0x400099f	       234	reflog.c	FUNCTION_4	WHILE_1	IF_1
0x95a	      0xe9ef000000	                           jmp 0x4000a8e	       235	reflog.c	FUNCTION_4	WHILE_1	IF_1
0x95f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       236	reflog.c	FUNCTION_4	WHILE_1	IF_2	CALL_2
0x963	          0x4889c7	                            mov rdi, rax	       236	reflog.c	FUNCTION_4	WHILE_1	IF_2	CALL_2
0x966	      0xe852f8ffff	                   call sym.parse_commit	       236	reflog.c	FUNCTION_4	WHILE_1	IF_2	CALL_2
0x96b	            0x85c0	                           test eax, eax	       236	reflog.c	FUNCTION_4	WHILE_1	IF_2	CALL_2
0x96d	            0x7405	                            je 0x40009b4	       236	reflog.c	FUNCTION_4	WHILE_1	IF_2	CALL_2
0x96f	      0xe9da000000	                           jmp 0x4000a8e	       237	reflog.c	FUNCTION_4	WHILE_1	IF_2
0x974	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       238	reflog.c	FUNCTION_4	WHILE_1
0x978	            0x8b00	                    mov eax, dword [rax]	       238	reflog.c	FUNCTION_4	WHILE_1
0x97a	          0xc1e804	                              shr eax, 4	       238	reflog.c	FUNCTION_4	WHILE_1
0x97d	      0x25ffffff07	                      and eax, 0x7ffffff	       238	reflog.c	FUNCTION_4	WHILE_1
0x982	          0x80cc10	                             or ah, 0x10	       238	reflog.c	FUNCTION_4	WHILE_1
0x985	            0x89c2	                            mov edx, eax	       238	reflog.c	FUNCTION_4	WHILE_1
0x987	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       238	reflog.c	FUNCTION_4	WHILE_1
0x98b	    0x81e2ffffff07	                      and edx, 0x7ffffff	       238	reflog.c	FUNCTION_4	WHILE_1
0x991	            0x89d1	                            mov ecx, edx	       238	reflog.c	FUNCTION_4	WHILE_1
0x993	          0xc1e104	                              shl ecx, 4	       238	reflog.c	FUNCTION_4	WHILE_1
0x996	            0x8b10	                    mov edx, dword [rax]	       238	reflog.c	FUNCTION_4	WHILE_1
0x998	    0x81e20f000080	                     and edx, 0x8000000f	       238	reflog.c	FUNCTION_4	WHILE_1
0x99e	             0x9ca	                             or edx, ecx	       238	reflog.c	FUNCTION_4	WHILE_1
0x9a0	            0x8910	                    mov dword [rax], edx	       238	reflog.c	FUNCTION_4	WHILE_1
0x9a2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       239	reflog.c	FUNCTION_4	WHILE_1	IF_3
0x9a6	        0x488b4028	            mov rax, qword [rax + 0x28] 	       239	reflog.c	FUNCTION_4	WHILE_1	IF_3
0x9aa	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       239	reflog.c	FUNCTION_4	WHILE_1	IF_3
0x9ae	            0x7318	                           jae 0x4000a08	       239	reflog.c	FUNCTION_4	WHILE_1	IF_3
0x9b0	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       240	reflog.c	FUNCTION_4	WHILE_1	IF_3	CALL_3
0x9b4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       240	reflog.c	FUNCTION_4	WHILE_1	IF_3	CALL_3
0x9b8	          0x4889d6	                            mov rsi, rdx	       240	reflog.c	FUNCTION_4	WHILE_1	IF_3	CALL_3
0x9bb	          0x4889c7	                            mov rdi, rax	       240	reflog.c	FUNCTION_4	WHILE_1	IF_3	CALL_3
0x9be	      0xe800000000	                          call 0x4000a03	       240	reflog.c	FUNCTION_4	WHILE_1	IF_3	CALL_3
0x9c3	      0xe986000000	                           jmp 0x4000a8e	       241	reflog.c	FUNCTION_4	WHILE_1	IF_3
0x9c8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       243	reflog.c	FUNCTION_4	WHILE_1
0x9cc	            0x8b00	                    mov eax, dword [rax]	       243	reflog.c	FUNCTION_4	WHILE_1
0x9ce	          0xc1e804	                              shr eax, 4	       243	reflog.c	FUNCTION_4	WHILE_1
0x9d1	      0x25ffffff07	                      and eax, 0x7ffffff	       243	reflog.c	FUNCTION_4	WHILE_1
0x9d6	          0x80cc10	                             or ah, 0x10	       243	reflog.c	FUNCTION_4	WHILE_1
0x9d9	            0x89c2	                            mov edx, eax	       243	reflog.c	FUNCTION_4	WHILE_1
0x9db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       243	reflog.c	FUNCTION_4	WHILE_1
0x9df	    0x81e2ffffff07	                      and edx, 0x7ffffff	       243	reflog.c	FUNCTION_4	WHILE_1
0x9e5	            0x89d1	                            mov ecx, edx	       243	reflog.c	FUNCTION_4	WHILE_1
0x9e7	          0xc1e104	                              shl ecx, 4	       243	reflog.c	FUNCTION_4	WHILE_1
0x9ea	            0x8b10	                    mov edx, dword [rax]	       243	reflog.c	FUNCTION_4	WHILE_1
0x9ec	    0x81e20f000080	                     and edx, 0x8000000f	       243	reflog.c	FUNCTION_4	WHILE_1
0x9f2	             0x9ca	                             or edx, ecx	       243	reflog.c	FUNCTION_4	WHILE_1
0x9f4	            0x8910	                    mov dword [rax], edx	       243	reflog.c	FUNCTION_4	WHILE_1
0x9f6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       244	reflog.c	FUNCTION_4	WHILE_1
0x9fa	        0x488b4030	            mov rax, qword [rax + 0x30] 	       244	reflog.c	FUNCTION_4	WHILE_1
0x9fe	        0x488945e0	             mov qword [rbp - 0x20], rax	       244	reflog.c	FUNCTION_4	WHILE_1
0xa02	            0xeb43	                           jmp 0x4000a87	       245	reflog.c	FUNCTION_4	WHILE_1	WHILE_2
0xa04	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       246	reflog.c	FUNCTION_4	WHILE_1	WHILE_2
0xa08	          0x488b00	                    mov rax, qword [rax]	       246	reflog.c	FUNCTION_4	WHILE_1	WHILE_2
0xa0b	        0x488945f0	             mov qword [rbp - 0x10], rax	       246	reflog.c	FUNCTION_4	WHILE_1	WHILE_2
0xa0f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       247	reflog.c	FUNCTION_4	WHILE_1	WHILE_2
0xa13	        0x488b4008	                mov rax, qword [rax + 8]	       247	reflog.c	FUNCTION_4	WHILE_1	WHILE_2
0xa17	        0x488945e0	             mov qword [rbp - 0x20], rax	       247	reflog.c	FUNCTION_4	WHILE_1	WHILE_2
0xa1b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       248	reflog.c	FUNCTION_4	WHILE_1	WHILE_2	IF_4
0xa1f	            0x8b00	                    mov eax, dword [rax]	       248	reflog.c	FUNCTION_4	WHILE_1	WHILE_2	IF_4
0xa21	          0xc1e804	                              shr eax, 4	       248	reflog.c	FUNCTION_4	WHILE_1	WHILE_2	IF_4
0xa24	      0x25ffffff07	                      and eax, 0x7ffffff	       248	reflog.c	FUNCTION_4	WHILE_1	WHILE_2	IF_4
0xa29	      0x2500100000	                         and eax, 0x1000	       248	reflog.c	FUNCTION_4	WHILE_1	WHILE_2	IF_4
0xa2e	            0x85c0	                           test eax, eax	       248	reflog.c	FUNCTION_4	WHILE_1	WHILE_2	IF_4
0xa30	            0x7402	                            je 0x4000a74	       248	reflog.c	FUNCTION_4	WHILE_1	WHILE_2	IF_4
0xa32	            0xeb13	                           jmp 0x4000a87	       249	reflog.c	FUNCTION_4	WHILE_1	WHILE_2	IF_4
0xa34	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       250	reflog.c	FUNCTION_4	WHILE_1	WHILE_2	CALL_4
0xa38	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       250	reflog.c	FUNCTION_4	WHILE_1	WHILE_2	CALL_4
0xa3c	          0x4889d6	                            mov rsi, rdx	       250	reflog.c	FUNCTION_4	WHILE_1	WHILE_2	CALL_4
0xa3f	          0x4889c7	                            mov rdi, rax	       250	reflog.c	FUNCTION_4	WHILE_1	WHILE_2	CALL_4
0xa42	      0xe800000000	                          call 0x4000a87	       250	reflog.c	FUNCTION_4	WHILE_1	WHILE_2	CALL_4
0xa47	      0x48837de000	               cmp qword [rbp - 0x20], 0	       245	reflog.c	FUNCTION_4	WHILE_1	WHILE_2
0xa4c	            0x75b6	                           jne 0x4000a44	       245	reflog.c	FUNCTION_4	WHILE_1	WHILE_2
0xa4e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       231	reflog.c	FUNCTION_4	WHILE_1
0xa52	          0x4885c0	                           test rax, rax	       231	reflog.c	FUNCTION_4	WHILE_1
0xa55	     0xf85d8feffff	                           jne 0x4000973	       231	reflog.c	FUNCTION_4	WHILE_1
0xa5b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       253	reflog.c	FUNCTION_4
0xa5f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       253	reflog.c	FUNCTION_4
0xa63	        0x48895008	                mov qword [rax + 8], rdx	       253	reflog.c	FUNCTION_4
0xa67	              0x90	                                     nop	       254	reflog.c	FUNCTION_4
0xa68	        0x488b45f8	                mov rax, qword [rbp - 8]	       254	reflog.c	FUNCTION_4
0xa6c	    0x644833042528	                xor rax, qword fs:[0x28]	       254	reflog.c	FUNCTION_4
0xa75	            0x7405	                            je 0x4000abc	       254	reflog.c	FUNCTION_4
0xa77	      0xe800000000	                          call 0x4000abc	       254	reflog.c	FUNCTION_4
0xa7c	              0xc9	                                   leave	       254	reflog.c	FUNCTION_4
0xa7d	              0xc3	                                     ret	       254	reflog.c	FUNCTION_4
_	IF,1:ELSE,0:FOR,0:SWITCH,0:DO,0:WHILE,0:CALL,2:functions,0	15
0xa1	              0x55	                                push rbp	        51	gettext.h	FUNCTION_49
0xa2	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_49
0xa5	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_49
0xa9	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_49
0xad	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_49	IF_1
0xb1	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_49	IF_1
0xb4	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_49	IF_1
0xb6	            0x7507	                           jne 0x40000ff	        52	gettext.h	FUNCTION_49	IF_1
0xb8	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_49	IF_1
0xbd	            0xeb0c	                           jmp 0x400010b	        53	gettext.h	FUNCTION_49	IF_1
0xbf	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_49	CALL_2
0xc3	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_49	CALL_2
0xc6	      0xe800000000	                          call 0x400010b	        54	gettext.h	FUNCTION_49	CALL_2
0xcb	              0xc9	                                   leave	        55	gettext.h	FUNCTION_49
0xcc	              0xc3	                                     ret	        55	gettext.h	FUNCTION_49
should_expire_reflog_ent	IF,6:ELSE,0:FOR,0:SWITCH,0:DO,0:WHILE,0:CALL,4:functions,0	95
0xb43	              0x55	                                push rbp	       291	reflog.c	FUNCTION_6
0xb44	          0x4889e5	                            mov rbp, rsp	       291	reflog.c	FUNCTION_6
0xb47	        0x4883ec60	                           sub rsp, 0x60	       291	reflog.c	FUNCTION_6
0xb4b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       291	reflog.c	FUNCTION_6
0xb4f	        0x488975d0	             mov qword [rbp - 0x30], rsi	       291	reflog.c	FUNCTION_6
0xb53	        0x488955c8	             mov qword [rbp - 0x38], rdx	       291	reflog.c	FUNCTION_6
0xb57	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       291	reflog.c	FUNCTION_6
0xb5b	        0x448945bc	             mov dword [rbp - 0x44], r8d	       291	reflog.c	FUNCTION_6
0xb5f	        0x4c894db0	              mov qword [rbp - 0x50], r9	       291	reflog.c	FUNCTION_6
0xb63	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       291	reflog.c	FUNCTION_6
0xb67	        0x488945a8	             mov qword [rbp - 0x58], rax	       291	reflog.c	FUNCTION_6
0xb6b	    0x64488b042528	                mov rax, qword fs:[0x28]	       291	reflog.c	FUNCTION_6
0xb74	        0x488945f8	                mov qword [rbp - 8], rax	       291	reflog.c	FUNCTION_6
0xb78	            0x31c0	                            xor eax, eax	       291	reflog.c	FUNCTION_6
0xb7a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       292	reflog.c	FUNCTION_6
0xb7e	        0x488945f0	             mov qword [rbp - 0x10], rax	       292	reflog.c	FUNCTION_6
0xb82	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       295	reflog.c	FUNCTION_6	IF_1
0xb86	    0x488b80d00800	           mov rax, qword [rax + 0x8d0] 	       295	reflog.c	FUNCTION_6	IF_1
0xb8d	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       295	reflog.c	FUNCTION_6	IF_1
0xb91	            0x760a	                           jbe 0x4000bdd	       295	reflog.c	FUNCTION_6	IF_1
0xb93	      0xb801000000	                              mov eax, 1	       296	reflog.c	FUNCTION_6	IF_1
0xb98	      0xe9f5000000	                           jmp 0x4000cd2	       296	reflog.c	FUNCTION_6	IF_1
0xb9d	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       298	reflog.c	FUNCTION_6
0xba5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       298	reflog.c	FUNCTION_6
0xba9	        0x488945e0	             mov qword [rbp - 0x20], rax	       298	reflog.c	FUNCTION_6
0xbad	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       299	reflog.c	FUNCTION_6	IF_2
0xbb1	    0x8b80c8080000	           mov eax, dword [rax + 0x8c8] 	       299	reflog.c	FUNCTION_6	IF_2
0xbb7	            0x85c0	                           test eax, eax	       299	reflog.c	FUNCTION_6	IF_2
0xbb9	            0x7438	                            je 0x4000c33	       299	reflog.c	FUNCTION_6	IF_2
0xbbb	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       300	reflog.c	FUNCTION_6	IF_2	CALL_2
0xbbf	        0x488d45e0	                   lea rax, [rbp - 0x20]	       300	reflog.c	FUNCTION_6	IF_2	CALL_2
0xbc3	          0x4889d6	                            mov rsi, rdx	       300	reflog.c	FUNCTION_6	IF_2	CALL_2
0xbc6	          0x4889c7	                            mov rdi, rax	       300	reflog.c	FUNCTION_6	IF_2	CALL_2
0xbc9	      0xe85dfcffff	                     call sym.keep_entry	       300	reflog.c	FUNCTION_6	IF_2	CALL_2
0xbce	            0x85c0	                           test eax, eax	       299	reflog.c	FUNCTION_6	IF_2
0xbd0	            0x7417	                            je 0x4000c29	       299	reflog.c	FUNCTION_6	IF_2
0xbd2	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       300	reflog.c	FUNCTION_6	IF_2	CALL_2
0xbd6	        0x488d45e8	                   lea rax, [rbp - 0x18]	       300	reflog.c	FUNCTION_6	IF_2	CALL_2
0xbda	          0x4889d6	                            mov rsi, rdx	       300	reflog.c	FUNCTION_6	IF_2	CALL_2
0xbdd	          0x4889c7	                            mov rdi, rax	       300	reflog.c	FUNCTION_6	IF_2	CALL_2
0xbe0	      0xe846fcffff	                     call sym.keep_entry	       300	reflog.c	FUNCTION_6	IF_2	CALL_2
0xbe5	            0x85c0	                           test eax, eax	       300	reflog.c	FUNCTION_6	IF_2	CALL_2
0xbe7	            0x750a	                           jne 0x4000c33	       300	reflog.c	FUNCTION_6	IF_2	CALL_2
0xbe9	      0xb801000000	                              mov eax, 1	       301	reflog.c	FUNCTION_6	IF_2
0xbee	      0xe99f000000	                           jmp 0x4000cd2	       301	reflog.c	FUNCTION_6	IF_2
0xbf3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       303	reflog.c	FUNCTION_6	IF_3
0xbf7	    0x488b80d80800	           mov rax, qword [rax + 0x8d8] 	       303	reflog.c	FUNCTION_6	IF_3
0xbfe	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       303	reflog.c	FUNCTION_6	IF_3
0xc02	            0x764f	                           jbe 0x4000c93	       303	reflog.c	FUNCTION_6	IF_3
0xc04	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       304	reflog.c	FUNCTION_6	IF_3	IF_4
0xc08	            0x8b00	                    mov eax, dword [rax]	       304	reflog.c	FUNCTION_6	IF_3	IF_4
0xc0a	          0x83f801	                              cmp eax, 1	       304	reflog.c	FUNCTION_6	IF_3	IF_4
0xc0d	            0x7507	                           jne 0x4000c56	       304	reflog.c	FUNCTION_6	IF_3	IF_4
0xc0f	      0xb801000000	                              mov eax, 1	       305	reflog.c	FUNCTION_6	IF_3	IF_4
0xc14	            0xeb7c	                           jmp 0x4000cd2	       305	reflog.c	FUNCTION_6	IF_3	IF_4
0xc16	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       306	reflog.c	FUNCTION_6	IF_3	IF_5	CALL_4
0xc1a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       306	reflog.c	FUNCTION_6	IF_3	IF_5	CALL_4
0xc1e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       306	reflog.c	FUNCTION_6	IF_3	IF_5	CALL_4
0xc22	          0x4889ce	                            mov rsi, rcx	       306	reflog.c	FUNCTION_6	IF_3	IF_5	CALL_4
0xc25	          0x4889c7	                            mov rdi, rax	       306	reflog.c	FUNCTION_6	IF_3	IF_5	CALL_4
0xc28	      0xe851feffff	                    call sym.unreachable	       306	reflog.c	FUNCTION_6	IF_3	IF_5	CALL_4
0xc2d	            0x85c0	                           test eax, eax	       306	reflog.c	FUNCTION_6	IF_3	IF_5	CALL_4
0xc2f	            0x751b	                           jne 0x4000c8c	       306	reflog.c	FUNCTION_6	IF_3	IF_5	CALL_4
0xc31	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       306	reflog.c	FUNCTION_6	IF_3	IF_5	CALL_4
0xc35	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       306	reflog.c	FUNCTION_6	IF_3	IF_5	CALL_4
0xc39	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       306	reflog.c	FUNCTION_6	IF_3	IF_5	CALL_4
0xc3d	          0x4889ce	                            mov rsi, rcx	       306	reflog.c	FUNCTION_6	IF_3	IF_5	CALL_4
0xc40	          0x4889c7	                            mov rdi, rax	       306	reflog.c	FUNCTION_6	IF_3	IF_5	CALL_4
0xc43	      0xe836feffff	                    call sym.unreachable	       306	reflog.c	FUNCTION_6	IF_3	IF_5	CALL_4
0xc48	            0x85c0	                           test eax, eax	       306	reflog.c	FUNCTION_6	IF_3	IF_5	CALL_4
0xc4a	            0x7407	                            je 0x4000c93	       306	reflog.c	FUNCTION_6	IF_3	IF_5	CALL_4
0xc4c	      0xb801000000	                              mov eax, 1	       307	reflog.c	FUNCTION_6	IF_3	IF_5
0xc51	            0xeb3f	                           jmp 0x4000cd2	       307	reflog.c	FUNCTION_6	IF_3	IF_5
0xc53	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       310	reflog.c	FUNCTION_6	IF_6
0xc57	    0x8b80e0080000	           mov eax, dword [rax + 0x8e0] 	       310	reflog.c	FUNCTION_6	IF_6
0xc5d	            0x85c0	                           test eax, eax	       310	reflog.c	FUNCTION_6	IF_6
0xc5f	            0x742c	                            je 0x4000ccd	       310	reflog.c	FUNCTION_6	IF_6
0xc61	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       310	reflog.c	FUNCTION_6	IF_6
0xc65	    0x8b80e0080000	           mov eax, dword [rax + 0x8e0] 	       310	reflog.c	FUNCTION_6	IF_6
0xc6b	          0x8d50ff	                      lea edx, [rax - 1]	       310	reflog.c	FUNCTION_6	IF_6
0xc6e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       310	reflog.c	FUNCTION_6	IF_6
0xc72	    0x8990e0080000	            mov dword [rax + 0x8e0], edx	       310	reflog.c	FUNCTION_6	IF_6
0xc78	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       310	reflog.c	FUNCTION_6	IF_6
0xc7c	    0x8b80e0080000	           mov eax, dword [rax + 0x8e0] 	       310	reflog.c	FUNCTION_6	IF_6
0xc82	            0x85c0	                           test eax, eax	       310	reflog.c	FUNCTION_6	IF_6
0xc84	            0x7507	                           jne 0x4000ccd	       310	reflog.c	FUNCTION_6	IF_6
0xc86	      0xb801000000	                              mov eax, 1	       311	reflog.c	FUNCTION_6	IF_6
0xc8b	            0xeb05	                           jmp 0x4000cd2	       311	reflog.c	FUNCTION_6	IF_6
0xc8d	      0xb800000000	                              mov eax, 0	       313	reflog.c	FUNCTION_6
0xc92	        0x488b4df8	                mov rcx, qword [rbp - 8]	       314	reflog.c	FUNCTION_6
0xc96	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       314	reflog.c	FUNCTION_6
0xc9f	            0x7405	                            je 0x4000ce6	       314	reflog.c	FUNCTION_6
0xca1	      0xe800000000	                          call 0x4000ce6	       314	reflog.c	FUNCTION_6
0xca6	              0xc9	                                   leave	       314	reflog.c	FUNCTION_6
0xca7	              0xc3	                                     ret	       314	reflog.c	FUNCTION_6
find_cfg_ent	IF,2:ELSE,0:FOR,1:SWITCH,0:DO,0:WHILE,0:CALL,2:functions,0	63
0x10a1	              0x55	                                push rbp	       403	reflog.c	FUNCTION_11
0x10a2	          0x4889e5	                            mov rbp, rsp	       403	reflog.c	FUNCTION_11
0x10a5	        0x4883ec20	                           sub rsp, 0x20	       403	reflog.c	FUNCTION_11
0x10a9	        0x48897de8	             mov qword [rbp - 0x18], rdi	       403	reflog.c	FUNCTION_11
0x10ad	        0x488975e0	             mov qword [rbp - 0x20], rsi	       403	reflog.c	FUNCTION_11
0x10b1	    0x488b05000000	            mov rax, qword [0x040010f8] 	       406	reflog.c	FUNCTION_11	IF_1
0x10b8	          0x4885c0	                           test rax, rax	       406	reflog.c	FUNCTION_11	IF_1
0x10bb	            0x750b	                           jne 0x4001108	       406	reflog.c	FUNCTION_11	IF_1
0x10bd	    0x48c705000000	               mov qword [0x04001108], 0	       407	reflog.c	FUNCTION_11	IF_1
0x10c8	    0x488b05000000	            mov rax, qword [0x0400110f] 	       409	reflog.c	FUNCTION_11	FOR_1
0x10cf	        0x488945f0	             mov qword [rbp - 0x10], rax	       409	reflog.c	FUNCTION_11	FOR_1
0x10d3	            0xeb49	                           jmp 0x400115e	       409	reflog.c	FUNCTION_11	FOR_1
0x10d5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x10d9	        0x488d4818	                   lea rcx, [rax + 0x18]	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x10dd	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x10e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x10e5	          0x4889c6	                            mov rsi, rax	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x10e8	          0x4889cf	                            mov rdi, rcx	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x10eb	      0xe800000000	                          call 0x4001130	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x10f0	            0x85c0	                           test eax, eax	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x10f2	            0x751f	                           jne 0x4001153	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x10f4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       411	reflog.c	FUNCTION_11	FOR_1	IF_2
0x10f8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       411	reflog.c	FUNCTION_11	FOR_1	IF_2
0x10fc	          0x4801d0	                            add rax, rdx	       411	reflog.c	FUNCTION_11	FOR_1	IF_2
0x10ff	        0x4883c018	                           add rax, 0x18	       411	reflog.c	FUNCTION_11	FOR_1	IF_2
0x1103	           0xfb600	                   movzx eax, byte [rax]	       411	reflog.c	FUNCTION_11	FOR_1	IF_2
0x1106	            0x84c0	                             test al, al	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x1108	            0x7509	                           jne 0x4001153	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x110a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       412	reflog.c	FUNCTION_11	FOR_1	IF_2
0x110e	      0xe981000000	                           jmp 0x40011d4	       412	reflog.c	FUNCTION_11	FOR_1	IF_2
0x1113	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       409	reflog.c	FUNCTION_11	FOR_1
0x1117	          0x488b00	                    mov rax, qword [rax]	       409	reflog.c	FUNCTION_11	FOR_1
0x111a	        0x488945f0	             mov qword [rbp - 0x10], rax	       409	reflog.c	FUNCTION_11	FOR_1
0x111e	      0x48837df000	               cmp qword [rbp - 0x10], 0	       409	reflog.c	FUNCTION_11	FOR_1
0x1123	            0x75b0	                           jne 0x4001115	       409	reflog.c	FUNCTION_11	FOR_1
0x1125	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       414	reflog.c	FUNCTION_11	CALL_2
0x1129	        0x488945f8	                mov qword [rbp - 8], rax	       414	reflog.c	FUNCTION_11	CALL_2
0x112d	        0x488b45f8	                mov rax, qword [rbp - 8]	       414	reflog.c	FUNCTION_11	CALL_2
0x1131	          0x4889c6	                            mov rsi, rax	       414	reflog.c	FUNCTION_11	CALL_2
0x1134	      0xbf18000000	                           mov edi, 0x18	       414	reflog.c	FUNCTION_11	CALL_2
0x1139	      0xe8cdeeffff	                         call sym.st_add	       414	reflog.c	FUNCTION_11	CALL_2
0x113e	      0xbe01000000	                              mov esi, 1	       414	reflog.c	FUNCTION_11	CALL_2
0x1143	          0x4889c7	                            mov rdi, rax	       414	reflog.c	FUNCTION_11	CALL_2
0x1146	      0xe8c0eeffff	                         call sym.st_add	       414	reflog.c	FUNCTION_11	CALL_2
0x114b	          0x4889c6	                            mov rsi, rax	       414	reflog.c	FUNCTION_11	CALL_2
0x114e	      0xbf01000000	                              mov edi, 1	       414	reflog.c	FUNCTION_11	CALL_2
0x1153	      0xe800000000	                          call 0x4001198	       414	reflog.c	FUNCTION_11	CALL_2
0x1158	        0x488945f0	             mov qword [rbp - 0x10], rax	       414	reflog.c	FUNCTION_11	CALL_2
0x115c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       414	reflog.c	FUNCTION_11	CALL_2
0x1160	        0x488d4818	                   lea rcx, [rax + 0x18]	       414	reflog.c	FUNCTION_11	CALL_2
0x1164	        0x488b55f8	                mov rdx, qword [rbp - 8]	       414	reflog.c	FUNCTION_11	CALL_2
0x1168	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       414	reflog.c	FUNCTION_11	CALL_2
0x116c	          0x4889c6	                            mov rsi, rax	       414	reflog.c	FUNCTION_11	CALL_2
0x116f	          0x4889cf	                            mov rdi, rcx	       414	reflog.c	FUNCTION_11	CALL_2
0x1172	      0xe800000000	                          call 0x40011b7	       414	reflog.c	FUNCTION_11	CALL_2
0x1177	    0x488b05000000	            mov rax, qword [0x040011be] 	       415	reflog.c	FUNCTION_11
0x117e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       415	reflog.c	FUNCTION_11
0x1182	          0x488910	                    mov qword [rax], rdx	       415	reflog.c	FUNCTION_11
0x1185	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       416	reflog.c	FUNCTION_11
0x1189	    0x488905000000	            mov qword [0x040011d0], rax 	       416	reflog.c	FUNCTION_11
0x1190	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       417	reflog.c	FUNCTION_11
0x1194	              0xc9	                                   leave	       418	reflog.c	FUNCTION_11
0x1195	              0xc3	                                     ret	       418	reflog.c	FUNCTION_11
cmd_reflog	IF,6:ELSE,0:FOR,0:SWITCH,0:DO,0:WHILE,0:CALL,12:functions,0	109
0x1fab	              0x55	                                push rbp	       721	reflog.c	FUNCTION_18
0x1fac	          0x4889e5	                            mov rbp, rsp	       721	reflog.c	FUNCTION_18
0x1faf	        0x4883ec20	                           sub rsp, 0x20	       721	reflog.c	FUNCTION_18
0x1fb3	          0x897dfc	                mov dword [rbp - 4], edi	       721	reflog.c	FUNCTION_18
0x1fb6	        0x488975f0	             mov qword [rbp - 0x10], rsi	       721	reflog.c	FUNCTION_18
0x1fba	        0x488955e8	             mov qword [rbp - 0x18], rdx	       721	reflog.c	FUNCTION_18
0x1fbe	        0x837dfc01	                  cmp dword [rbp - 4], 1	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x1fc2	            0x7e26	                           jle 0x400202a	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x1fc4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x1fc8	        0x4883c008	                              add rax, 8	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x1fcc	          0x488b00	                    mov rax, qword [rax]	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x1fcf	      0xbe00000000	                              mov esi, 0	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x1fd4	          0x4889c7	                            mov rdi, rax	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x1fd7	      0xe800000000	                          call 0x400201c	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x1fdc	            0x85c0	                           test eax, eax	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x1fde	            0x750a	                           jne 0x400202a	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x1fe0	      0xbf00000000	                              mov edi, 0	       723	reflog.c	FUNCTION_18	CALL_2
0x1fe5	      0xe800000000	                          call 0x400202a	       723	reflog.c	FUNCTION_18	CALL_2
0x1fea	        0x837dfc01	                  cmp dword [rbp - 4], 1	       726	reflog.c	FUNCTION_18	IF_2
0x1fee	            0x7e12	                           jle 0x4002042	       726	reflog.c	FUNCTION_18	IF_2
0x1ff0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       726	reflog.c	FUNCTION_18	IF_2
0x1ff4	        0x4883c008	                              add rax, 8	       726	reflog.c	FUNCTION_18	IF_2
0x1ff8	          0x488b00	                    mov rax, qword [rax]	       726	reflog.c	FUNCTION_18	IF_2
0x1ffb	           0xfb600	                   movzx eax, byte [rax]	       726	reflog.c	FUNCTION_18	IF_2
0x1ffe	            0x3c2d	                            cmp al, 0x2d	       726	reflog.c	FUNCTION_18	IF_2
0x2000	            0x751a	                           jne 0x400205c	       726	reflog.c	FUNCTION_18	IF_2
0x2002	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       727	reflog.c	FUNCTION_18	CALL_3
0x2006	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       727	reflog.c	FUNCTION_18	CALL_3
0x200a	          0x8b45fc	                mov eax, dword [rbp - 4]	       727	reflog.c	FUNCTION_18	CALL_3
0x200d	          0x4889ce	                            mov rsi, rcx	       727	reflog.c	FUNCTION_18	CALL_3
0x2010	            0x89c7	                            mov edi, eax	       727	reflog.c	FUNCTION_18	CALL_3
0x2012	      0xe800000000	                          call 0x4002057	       727	reflog.c	FUNCTION_18	CALL_3
0x2017	      0xe903010000	                           jmp 0x400215f	       727	reflog.c	FUNCTION_18	CALL_3
0x201c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       729	reflog.c	FUNCTION_18	IF_3	CALL_4
0x2020	        0x4883c008	                              add rax, 8	       729	reflog.c	FUNCTION_18	IF_3	CALL_4
0x2024	          0x488b00	                    mov rax, qword [rax]	       729	reflog.c	FUNCTION_18	IF_3	CALL_4
0x2027	      0xbe00000000	                              mov esi, 0	       729	reflog.c	FUNCTION_18	IF_3	CALL_4
0x202c	          0x4889c7	                            mov rdi, rax	       729	reflog.c	FUNCTION_18	IF_3	CALL_4
0x202f	      0xe800000000	                          call 0x4002074	       729	reflog.c	FUNCTION_18	IF_3	CALL_4
0x2034	            0x85c0	                           test eax, eax	       729	reflog.c	FUNCTION_18	IF_3	CALL_4
0x2036	            0x7521	                           jne 0x4002099	       729	reflog.c	FUNCTION_18	IF_3	CALL_4
0x2038	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       730	reflog.c	FUNCTION_18	CALL_5
0x203c	        0x488d7008	                      lea rsi, [rax + 8]	       730	reflog.c	FUNCTION_18	CALL_5
0x2040	          0x8b45fc	                mov eax, dword [rbp - 4]	       730	reflog.c	FUNCTION_18	CALL_5
0x2043	          0x8d48ff	                      lea ecx, [rax - 1]	       730	reflog.c	FUNCTION_18	CALL_5
0x2046	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       730	reflog.c	FUNCTION_18	CALL_5
0x204a	          0x4889c2	                            mov rdx, rax	       730	reflog.c	FUNCTION_18	CALL_5
0x204d	            0x89cf	                            mov edi, ecx	       730	reflog.c	FUNCTION_18	CALL_5
0x204f	      0xe800000000	                          call 0x4002094	       730	reflog.c	FUNCTION_18	CALL_5
0x2054	      0xe9c6000000	                           jmp 0x400215f	       730	reflog.c	FUNCTION_18	CALL_5
0x2059	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       732	reflog.c	FUNCTION_18	IF_4	CALL_6
0x205d	        0x4883c008	                              add rax, 8	       732	reflog.c	FUNCTION_18	IF_4	CALL_6
0x2061	          0x488b00	                    mov rax, qword [rax]	       732	reflog.c	FUNCTION_18	IF_4	CALL_6
0x2064	      0xbe00000000	                              mov esi, 0	       732	reflog.c	FUNCTION_18	IF_4	CALL_6
0x2069	          0x4889c7	                            mov rdi, rax	       732	reflog.c	FUNCTION_18	IF_4	CALL_6
0x206c	      0xe800000000	                          call 0x40020b1	       732	reflog.c	FUNCTION_18	IF_4	CALL_6
0x2071	            0x85c0	                           test eax, eax	       732	reflog.c	FUNCTION_18	IF_4	CALL_6
0x2073	            0x7521	                           jne 0x40020d6	       732	reflog.c	FUNCTION_18	IF_4	CALL_6
0x2075	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       733	reflog.c	FUNCTION_18	CALL_7
0x2079	        0x488d7008	                      lea rsi, [rax + 8]	       733	reflog.c	FUNCTION_18	CALL_7
0x207d	          0x8b45fc	                mov eax, dword [rbp - 4]	       733	reflog.c	FUNCTION_18	CALL_7
0x2080	          0x8d48ff	                      lea ecx, [rax - 1]	       733	reflog.c	FUNCTION_18	CALL_7
0x2083	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       733	reflog.c	FUNCTION_18	CALL_7
0x2087	          0x4889c2	                            mov rdx, rax	       733	reflog.c	FUNCTION_18	CALL_7
0x208a	            0x89cf	                            mov edi, ecx	       733	reflog.c	FUNCTION_18	CALL_7
0x208c	      0xe8d5f3ffff	              call sym.cmd_reflog_expire	       733	reflog.c	FUNCTION_18	CALL_7
0x2091	      0xe989000000	                           jmp 0x400215f	       733	reflog.c	FUNCTION_18	CALL_7
0x2096	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       735	reflog.c	FUNCTION_18	IF_5	CALL_8
0x209a	        0x4883c008	                              add rax, 8	       735	reflog.c	FUNCTION_18	IF_5	CALL_8
0x209e	          0x488b00	                    mov rax, qword [rax]	       735	reflog.c	FUNCTION_18	IF_5	CALL_8
0x20a1	      0xbe00000000	                              mov esi, 0	       735	reflog.c	FUNCTION_18	IF_5	CALL_8
0x20a6	          0x4889c7	                            mov rdi, rax	       735	reflog.c	FUNCTION_18	IF_5	CALL_8
0x20a9	      0xe800000000	                          call 0x40020ee	       735	reflog.c	FUNCTION_18	IF_5	CALL_8
0x20ae	            0x85c0	                           test eax, eax	       735	reflog.c	FUNCTION_18	IF_5	CALL_8
0x20b0	            0x751e	                           jne 0x4002110	       735	reflog.c	FUNCTION_18	IF_5	CALL_8
0x20b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       736	reflog.c	FUNCTION_18	CALL_9
0x20b6	        0x488d7008	                      lea rsi, [rax + 8]	       736	reflog.c	FUNCTION_18	CALL_9
0x20ba	          0x8b45fc	                mov eax, dword [rbp - 4]	       736	reflog.c	FUNCTION_18	CALL_9
0x20bd	          0x8d48ff	                      lea ecx, [rax - 1]	       736	reflog.c	FUNCTION_18	CALL_9
0x20c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       736	reflog.c	FUNCTION_18	CALL_9
0x20c4	          0x4889c2	                            mov rdx, rax	       736	reflog.c	FUNCTION_18	CALL_9
0x20c7	            0x89cf	                            mov edi, ecx	       736	reflog.c	FUNCTION_18	CALL_9
0x20c9	      0xe8e6f9ffff	              call sym.cmd_reflog_delete	       736	reflog.c	FUNCTION_18	CALL_9
0x20ce	            0xeb4f	                           jmp 0x400215f	       736	reflog.c	FUNCTION_18	CALL_9
0x20d0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       738	reflog.c	FUNCTION_18	IF_6	CALL_10
0x20d4	        0x4883c008	                              add rax, 8	       738	reflog.c	FUNCTION_18	IF_6	CALL_10
0x20d8	          0x488b00	                    mov rax, qword [rax]	       738	reflog.c	FUNCTION_18	IF_6	CALL_10
0x20db	      0xbe00000000	                              mov esi, 0	       738	reflog.c	FUNCTION_18	IF_6	CALL_10
0x20e0	          0x4889c7	                            mov rdi, rax	       738	reflog.c	FUNCTION_18	IF_6	CALL_10
0x20e3	      0xe800000000	                          call 0x4002128	       738	reflog.c	FUNCTION_18	IF_6	CALL_10
0x20e8	            0x85c0	                           test eax, eax	       738	reflog.c	FUNCTION_18	IF_6	CALL_10
0x20ea	            0x751e	                           jne 0x400214a	       738	reflog.c	FUNCTION_18	IF_6	CALL_10
0x20ec	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       739	reflog.c	FUNCTION_18	CALL_11
0x20f0	        0x488d7008	                      lea rsi, [rax + 8]	       739	reflog.c	FUNCTION_18	CALL_11
0x20f4	          0x8b45fc	                mov eax, dword [rbp - 4]	       739	reflog.c	FUNCTION_18	CALL_11
0x20f7	          0x8d48ff	                      lea ecx, [rax - 1]	       739	reflog.c	FUNCTION_18	CALL_11
0x20fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       739	reflog.c	FUNCTION_18	CALL_11
0x20fe	          0x4889c2	                            mov rdx, rax	       739	reflog.c	FUNCTION_18	CALL_11
0x2101	            0x89cf	                            mov edi, ecx	       739	reflog.c	FUNCTION_18	CALL_11
0x2103	      0xe899fdffff	              call sym.cmd_reflog_exists	       739	reflog.c	FUNCTION_18	CALL_11
0x2108	            0xeb15	                           jmp 0x400215f	       739	reflog.c	FUNCTION_18	CALL_11
0x210a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       741	reflog.c	FUNCTION_18	CALL_12
0x210e	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       741	reflog.c	FUNCTION_18	CALL_12
0x2112	          0x8b45fc	                mov eax, dword [rbp - 4]	       741	reflog.c	FUNCTION_18	CALL_12
0x2115	          0x4889ce	                            mov rsi, rcx	       741	reflog.c	FUNCTION_18	CALL_12
0x2118	            0x89c7	                            mov edi, eax	       741	reflog.c	FUNCTION_18	CALL_12
0x211a	      0xe800000000	                          call 0x400215f	       741	reflog.c	FUNCTION_18	CALL_12
0x211f	              0xc9	                                   leave	       742	reflog.c	FUNCTION_18
0x2120	              0xc3	                                     ret	       742	reflog.c	FUNCTION_18
reflog_expire_config	IF,7:ELSE,2:FOR,0:SWITCH,2:DO,0:WHILE,0:CALL,8:functions,0	116
0x1196	              0x55	                                push rbp	       425	reflog.c	FUNCTION_12
0x1197	          0x4889e5	                            mov rbp, rsp	       425	reflog.c	FUNCTION_12
0x119a	        0x4883ec50	                           sub rsp, 0x50	       425	reflog.c	FUNCTION_12
0x119e	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       425	reflog.c	FUNCTION_12
0x11a2	        0x488975c0	             mov qword [rbp - 0x40], rsi	       425	reflog.c	FUNCTION_12
0x11a6	        0x488955b8	             mov qword [rbp - 0x48], rdx	       425	reflog.c	FUNCTION_12
0x11aa	    0x64488b042528	                mov rax, qword fs:[0x28]	       425	reflog.c	FUNCTION_12
0x11b3	        0x488945f8	                mov qword [rbp - 8], rax	       425	reflog.c	FUNCTION_12
0x11b7	            0x31c0	                            xor eax, eax	       425	reflog.c	FUNCTION_12
0x11b9	        0x488d75e0	                   lea rsi, [rbp - 0x20]	       432	reflog.c	FUNCTION_12	IF_1	CALL_1
0x11bd	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       432	reflog.c	FUNCTION_12	IF_1	CALL_1
0x11c1	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       432	reflog.c	FUNCTION_12	IF_1	CALL_1
0x11c5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       432	reflog.c	FUNCTION_12	IF_1	CALL_1
0x11c9	          0x4989f0	                             mov r8, rsi	       432	reflog.c	FUNCTION_12	IF_1	CALL_1
0x11cc	      0xbe00000000	                              mov esi, 0	       432	reflog.c	FUNCTION_12	IF_1	CALL_1
0x11d1	          0x4889c7	                            mov rdi, rax	       432	reflog.c	FUNCTION_12	IF_1	CALL_1
0x11d4	      0xe800000000	                          call 0x4001219	       432	reflog.c	FUNCTION_12	IF_1	CALL_1
0x11d9	            0x85c0	                           test eax, eax	       432	reflog.c	FUNCTION_12	IF_1	CALL_1
0x11db	            0x791c	                           jns 0x4001239	       432	reflog.c	FUNCTION_12	IF_1	CALL_1
0x11dd	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       433	reflog.c	FUNCTION_12	CALL_2
0x11e1	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       433	reflog.c	FUNCTION_12	CALL_2
0x11e5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       433	reflog.c	FUNCTION_12	CALL_2
0x11e9	          0x4889ce	                            mov rsi, rcx	       433	reflog.c	FUNCTION_12	CALL_2
0x11ec	          0x4889c7	                            mov rdi, rax	       433	reflog.c	FUNCTION_12	CALL_2
0x11ef	      0xe800000000	                          call 0x4001234	       433	reflog.c	FUNCTION_12	CALL_2
0x11f4	      0xe92c010000	                           jmp 0x4001365	       433	reflog.c	FUNCTION_12	CALL_2
0x11f9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       435	reflog.c	FUNCTION_12	IF_2	CALL_3
0x11fd	      0xbe00000000	                              mov esi, 0	       435	reflog.c	FUNCTION_12	IF_2	CALL_3
0x1202	          0x4889c7	                            mov rdi, rax	       435	reflog.c	FUNCTION_12	IF_2	CALL_3
0x1205	      0xe800000000	                          call 0x400124a	       435	reflog.c	FUNCTION_12	IF_2	CALL_3
0x120a	            0x85c0	                           test eax, eax	       435	reflog.c	FUNCTION_12	IF_2	CALL_3
0x120c	            0x752c	                           jne 0x400127a	       435	reflog.c	FUNCTION_12	IF_2	CALL_3
0x120e	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	       436	reflog.c	FUNCTION_12	IF_2
0x1215	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       437	reflog.c	FUNCTION_12	IF_2	IF_3	CALL_4
0x1219	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       437	reflog.c	FUNCTION_12	IF_2	IF_3	CALL_4
0x121d	        0x488d45e8	                   lea rax, [rbp - 0x18]	       437	reflog.c	FUNCTION_12	IF_2	IF_3	CALL_4
0x1221	          0x4889ce	                            mov rsi, rcx	       437	reflog.c	FUNCTION_12	IF_2	IF_3	CALL_4
0x1224	          0x4889c7	                            mov rdi, rax	       437	reflog.c	FUNCTION_12	IF_2	IF_3	CALL_4
0x1227	      0xe800000000	                          call 0x400126c	       437	reflog.c	FUNCTION_12	IF_2	IF_3	CALL_4
0x122c	            0x85c0	                           test eax, eax	       437	reflog.c	FUNCTION_12	IF_2	IF_3	CALL_4
0x122e	            0x7467	                            je 0x40012d7	       437	reflog.c	FUNCTION_12	IF_2	IF_3	CALL_4
0x1230	      0xb8ffffffff	                     mov eax, 0xffffffff	       438	reflog.c	FUNCTION_12	IF_2	IF_3
0x1235	      0xe9eb000000	                           jmp 0x4001365	       438	reflog.c	FUNCTION_12	IF_2	IF_3
0x123a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       439	reflog.c	FUNCTION_12	ELSE_1	IF_4	CALL_5
0x123e	      0xbe00000000	                              mov esi, 0	       439	reflog.c	FUNCTION_12	ELSE_1	IF_4	CALL_5
0x1243	          0x4889c7	                            mov rdi, rax	       439	reflog.c	FUNCTION_12	ELSE_1	IF_4	CALL_5
0x1246	      0xe800000000	                          call 0x400128b	       439	reflog.c	FUNCTION_12	ELSE_1	IF_4	CALL_5
0x124b	            0x85c0	                           test eax, eax	       439	reflog.c	FUNCTION_12	ELSE_1	IF_4	CALL_5
0x124d	            0x752c	                           jne 0x40012bb	       439	reflog.c	FUNCTION_12	ELSE_1	IF_4	CALL_5
0x124f	    0xc745d4020000	               mov dword [rbp - 0x2c], 2	       440	reflog.c	FUNCTION_12	ELSE_1	IF_4
0x1256	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       441	reflog.c	FUNCTION_12	ELSE_1	IF_4	IF_5	CALL_6
0x125a	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       441	reflog.c	FUNCTION_12	ELSE_1	IF_4	IF_5	CALL_6
0x125e	        0x488d45e8	                   lea rax, [rbp - 0x18]	       441	reflog.c	FUNCTION_12	ELSE_1	IF_4	IF_5	CALL_6
0x1262	          0x4889ce	                            mov rsi, rcx	       441	reflog.c	FUNCTION_12	ELSE_1	IF_4	IF_5	CALL_6
0x1265	          0x4889c7	                            mov rdi, rax	       441	reflog.c	FUNCTION_12	ELSE_1	IF_4	IF_5	CALL_6
0x1268	      0xe800000000	                          call 0x40012ad	       441	reflog.c	FUNCTION_12	ELSE_1	IF_4	IF_5	CALL_6
0x126d	            0x85c0	                           test eax, eax	       441	reflog.c	FUNCTION_12	ELSE_1	IF_4	IF_5	CALL_6
0x126f	            0x7426	                            je 0x40012d7	       441	reflog.c	FUNCTION_12	ELSE_1	IF_4	IF_5	CALL_6
0x1271	      0xb8ffffffff	                     mov eax, 0xffffffff	       442	reflog.c	FUNCTION_12	ELSE_1	IF_4	IF_5
0x1276	      0xe9aa000000	                           jmp 0x4001365	       442	reflog.c	FUNCTION_12	ELSE_1	IF_4	IF_5
0x127b	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       444	reflog.c	FUNCTION_12	CALL_7
0x127f	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       444	reflog.c	FUNCTION_12	CALL_7
0x1283	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       444	reflog.c	FUNCTION_12	CALL_7
0x1287	          0x4889ce	                            mov rsi, rcx	       444	reflog.c	FUNCTION_12	CALL_7
0x128a	          0x4889c7	                            mov rdi, rax	       444	reflog.c	FUNCTION_12	CALL_7
0x128d	      0xe800000000	                          call 0x40012d2	       444	reflog.c	FUNCTION_12	CALL_7
0x1292	      0xe98e000000	                           jmp 0x4001365	       444	reflog.c	FUNCTION_12	CALL_7
0x1297	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       446	reflog.c	FUNCTION_12	IF_6
0x129b	          0x4885c0	                           test rax, rax	       446	reflog.c	FUNCTION_12	IF_6
0x129e	            0x752f	                           jne 0x400130f	       446	reflog.c	FUNCTION_12	IF_6
0x12a0	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       447	reflog.c	FUNCTION_12	IF_6	SWITCH_1
0x12a3	          0x83f801	                              cmp eax, 1	       447	reflog.c	FUNCTION_12	IF_6	SWITCH_1
0x12a6	            0x7407	                            je 0x40012ef	       447	reflog.c	FUNCTION_12	IF_6	SWITCH_1
0x12a8	          0x83f802	                              cmp eax, 2	       447	reflog.c	FUNCTION_12	IF_6	SWITCH_1
0x12ab	            0x740f	                            je 0x40012fc	       447	reflog.c	FUNCTION_12	IF_6	SWITCH_1
0x12ad	            0xeb19	                           jmp 0x4001308	       447	reflog.c	FUNCTION_12	IF_6	SWITCH_1
0x12af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       449	reflog.c	FUNCTION_12	IF_6	SWITCH_1
0x12b3	    0x488905000000	            mov qword [0x040012fa], rax 	       449	reflog.c	FUNCTION_12	IF_6	SWITCH_1
0x12ba	            0xeb0c	                           jmp 0x4001308	       450	reflog.c	FUNCTION_12	IF_6	SWITCH_1
0x12bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       452	reflog.c	FUNCTION_12	IF_6	SWITCH_1
0x12c0	    0x488905000000	            mov qword [0x04001307], rax 	       452	reflog.c	FUNCTION_12	IF_6	SWITCH_1
0x12c7	              0x90	                                     nop	       453	reflog.c	FUNCTION_12	IF_6	SWITCH_1
0x12c8	      0xb800000000	                              mov eax, 0	       455	reflog.c	FUNCTION_12	IF_6
0x12cd	            0xeb56	                           jmp 0x4001365	       455	reflog.c	FUNCTION_12	IF_6
0x12cf	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       458	reflog.c	FUNCTION_12	CALL_8
0x12d2	          0x4863d0	                         movsxd rdx, eax	       458	reflog.c	FUNCTION_12	CALL_8
0x12d5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       458	reflog.c	FUNCTION_12	CALL_8
0x12d9	          0x4889d6	                            mov rsi, rdx	       458	reflog.c	FUNCTION_12	CALL_8
0x12dc	          0x4889c7	                            mov rdi, rax	       458	reflog.c	FUNCTION_12	CALL_8
0x12df	      0xe8bdfdffff	                   call sym.find_cfg_ent	       458	reflog.c	FUNCTION_12	CALL_8
0x12e4	        0x488945f0	             mov qword [rbp - 0x10], rax	       458	reflog.c	FUNCTION_12	CALL_8
0x12e8	      0x48837df000	               cmp qword [rbp - 0x10], 0	       459	reflog.c	FUNCTION_12	IF_7
0x12ed	            0x7507	                           jne 0x4001336	       459	reflog.c	FUNCTION_12	IF_7
0x12ef	      0xb8ffffffff	                     mov eax, 0xffffffff	       460	reflog.c	FUNCTION_12	IF_7
0x12f4	            0xeb2f	                           jmp 0x4001365	       460	reflog.c	FUNCTION_12	IF_7
0x12f6	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       461	reflog.c	FUNCTION_12	SWITCH_2
0x12f9	          0x83f801	                              cmp eax, 1	       461	reflog.c	FUNCTION_12	SWITCH_2
0x12fc	            0x7407	                            je 0x4001345	       461	reflog.c	FUNCTION_12	SWITCH_2
0x12fe	          0x83f802	                              cmp eax, 2	       461	reflog.c	FUNCTION_12	SWITCH_2
0x1301	            0x7410	                            je 0x4001353	       461	reflog.c	FUNCTION_12	SWITCH_2
0x1303	            0xeb1b	                           jmp 0x4001360	       461	reflog.c	FUNCTION_12	SWITCH_2
0x1305	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       463	reflog.c	FUNCTION_12	SWITCH_2
0x1309	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       463	reflog.c	FUNCTION_12	SWITCH_2
0x130d	        0x48895008	                mov qword [rax + 8], rdx	       463	reflog.c	FUNCTION_12	SWITCH_2
0x1311	            0xeb0d	                           jmp 0x4001360	       464	reflog.c	FUNCTION_12	SWITCH_2
0x1313	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       466	reflog.c	FUNCTION_12	SWITCH_2
0x1317	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       466	reflog.c	FUNCTION_12	SWITCH_2
0x131b	        0x48895010	             mov qword [rax + 0x10], rdx	       466	reflog.c	FUNCTION_12	SWITCH_2
0x131f	              0x90	                                     nop	       467	reflog.c	FUNCTION_12	SWITCH_2
0x1320	      0xb800000000	                              mov eax, 0	       469	reflog.c	FUNCTION_12
0x1325	        0x488b7df8	                mov rdi, qword [rbp - 8]	       470	reflog.c	FUNCTION_12
0x1329	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       470	reflog.c	FUNCTION_12
0x1332	            0x7405	                            je 0x4001379	       470	reflog.c	FUNCTION_12
0x1334	      0xe800000000	                          call 0x4001379	       470	reflog.c	FUNCTION_12
0x1339	              0xc9	                                   leave	       470	reflog.c	FUNCTION_12
0x133a	              0xc3	                                     ret	       470	reflog.c	FUNCTION_12
st_add	IF,1:ELSE,0:FOR,0:SWITCH,0:DO,0:WHILE,0:CALL,2:functions,0	20
0xb	              0x55	                                push rbp	       784	git-compat-util.h	FUNCTION_32
0xc	          0x4889e5	                            mov rbp, rsp	       784	git-compat-util.h	FUNCTION_32
0xf	        0x4883ec10	                           sub rsp, 0x10	       784	git-compat-util.h	FUNCTION_32
0x13	        0x48897df8	                mov qword [rbp - 8], rdi	       784	git-compat-util.h	FUNCTION_32
0x17	        0x488975f0	             mov qword [rbp - 0x10], rsi	       784	git-compat-util.h	FUNCTION_32
0x1b	        0x488b45f8	                mov rax, qword [rbp - 8]	       785	git-compat-util.h	FUNCTION_32	IF_1	CALL_1
0x1f	          0x48f7d0	                                 not rax	       785	git-compat-util.h	FUNCTION_32	IF_1	CALL_1
0x22	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       785	git-compat-util.h	FUNCTION_32	IF_1	CALL_1
0x26	            0x731a	                           jae 0x4000082	       785	git-compat-util.h	FUNCTION_32	IF_1	CALL_1
0x28	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       786	git-compat-util.h	FUNCTION_32	IF_1	CALL_2
0x2c	        0x488b45f8	                mov rax, qword [rbp - 8]	       786	git-compat-util.h	FUNCTION_32	IF_1	CALL_2
0x30	          0x4889c6	                            mov rsi, rax	       786	git-compat-util.h	FUNCTION_32	IF_1	CALL_2
0x33	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_32	IF_1	CALL_2
0x38	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_32	IF_1	CALL_2
0x3d	      0xe800000000	                          call 0x4000082	       786	git-compat-util.h	FUNCTION_32	IF_1	CALL_2
0x42	        0x488b55f8	                mov rdx, qword [rbp - 8]	       788	git-compat-util.h	FUNCTION_32
0x46	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       788	git-compat-util.h	FUNCTION_32
0x4a	          0x4801d0	                            add rax, rdx	       788	git-compat-util.h	FUNCTION_32
0x4d	              0xc9	                                   leave	       789	git-compat-util.h	FUNCTION_32
0x4e	              0xc3	                                     ret	       789	git-compat-util.h	FUNCTION_32
const_error	IF,0:ELSE,0:FOR,0:SWITCH,0:DO,0:WHILE,0:CALL,0:functions,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_24
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_24
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_24
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_24
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_24
