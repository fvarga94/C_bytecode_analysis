ls_refs	WHILE,1:functions,0:FOR,0:ELSE,2:IF,3:SWITCH,0:CALL,10:DO,0	73
0x31b	              0x55	                                push rbp	        74	ls-refs.c	FUNCTION_3
0x31c	          0x4889e5	                            mov rbp, rsp	        74	ls-refs.c	FUNCTION_3
0x31f	        0x4883ec50	                           sub rsp, 0x50	        74	ls-refs.c	FUNCTION_3
0x323	        0x48897dc8	             mov qword [rbp - 0x38], rdi	        74	ls-refs.c	FUNCTION_3
0x327	        0x488975c0	             mov qword [rbp - 0x40], rsi	        74	ls-refs.c	FUNCTION_3
0x32b	        0x488955b8	             mov qword [rbp - 0x48], rdx	        74	ls-refs.c	FUNCTION_3
0x32f	    0x64488b042528	                mov rax, qword fs:[0x28]	        74	ls-refs.c	FUNCTION_3
0x338	        0x488945f8	                mov qword [rbp - 8], rax	        74	ls-refs.c	FUNCTION_3
0x33c	            0x31c0	                            xor eax, eax	        74	ls-refs.c	FUNCTION_3
0x33e	        0x488d45e0	                   lea rax, [rbp - 0x20]	        77	ls-refs.c	FUNCTION_3	CALL_1
0x342	      0xba18000000	                           mov edx, 0x18	        77	ls-refs.c	FUNCTION_3	CALL_1
0x347	      0xbe00000000	                              mov esi, 0	        77	ls-refs.c	FUNCTION_3	CALL_1
0x34c	          0x4889c7	                            mov rdi, rax	        77	ls-refs.c	FUNCTION_3	CALL_1
0x34f	      0xe800000000	                          call 0x4000394	        77	ls-refs.c	FUNCTION_3	CALL_1
0x354	            0xeb78	                           jmp 0x400040e	        79	ls-refs.c	FUNCTION_3	WHILE_1	CALL_2
0x356	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        80	ls-refs.c	FUNCTION_3	WHILE_1
0x35a	        0x488b4030	            mov rax, qword [rax + 0x30] 	        80	ls-refs.c	FUNCTION_3	WHILE_1
0x35e	        0x488945d8	             mov qword [rbp - 0x28], rax	        80	ls-refs.c	FUNCTION_3	WHILE_1
0x362	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        83	ls-refs.c	FUNCTION_3	WHILE_1	IF_1	CALL_3
0x366	          0x4889c6	                            mov rsi, rax	        83	ls-refs.c	FUNCTION_3	WHILE_1	IF_1	CALL_3
0x369	      0xbf00000000	                              mov edi, 0	        83	ls-refs.c	FUNCTION_3	WHILE_1	IF_1	CALL_3
0x36e	      0xe800000000	                          call 0x40003b3	        83	ls-refs.c	FUNCTION_3	WHILE_1	IF_1	CALL_3
0x373	            0x85c0	                           test eax, eax	        83	ls-refs.c	FUNCTION_3	WHILE_1	IF_1	CALL_3
0x375	            0x7509	                           jne 0x40003c0	        83	ls-refs.c	FUNCTION_3	WHILE_1	IF_1	CALL_3
0x377	    0xc745e0010000	               mov dword [rbp - 0x20], 1	        84	ls-refs.c	FUNCTION_3	WHILE_1	IF_1
0x37e	            0xeb4e	                           jmp 0x400040e	        84	ls-refs.c	FUNCTION_3	WHILE_1	IF_1
0x380	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        85	ls-refs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x384	          0x4889c6	                            mov rsi, rax	        85	ls-refs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x387	      0xbf00000000	                              mov edi, 0	        85	ls-refs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x38c	      0xe800000000	                          call 0x40003d1	        85	ls-refs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x391	            0x85c0	                           test eax, eax	        85	ls-refs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x393	            0x7509	                           jne 0x40003de	        85	ls-refs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	CALL_4
0x395	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	        86	ls-refs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2
0x39c	            0xeb30	                           jmp 0x400040e	        86	ls-refs.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2
0x39e	        0x488d55d0	                   lea rdx, [rbp - 0x30]	        87	ls-refs.c	FUNCTION_3	WHILE_1	ELSE_2	IF_3	CALL_5
0x3a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        87	ls-refs.c	FUNCTION_3	WHILE_1	ELSE_2	IF_3	CALL_5
0x3a6	      0xbe00000000	                              mov esi, 0	        87	ls-refs.c	FUNCTION_3	WHILE_1	ELSE_2	IF_3	CALL_5
0x3ab	          0x4889c7	                            mov rdi, rax	        87	ls-refs.c	FUNCTION_3	WHILE_1	ELSE_2	IF_3	CALL_5
0x3ae	      0xe84dfcffff	                    call sym.skip_prefix	        87	ls-refs.c	FUNCTION_3	WHILE_1	ELSE_2	IF_3	CALL_5
0x3b3	            0x85c0	                           test eax, eax	        87	ls-refs.c	FUNCTION_3	WHILE_1	ELSE_2	IF_3	CALL_5
0x3b5	            0x7417	                            je 0x400040e	        87	ls-refs.c	FUNCTION_3	WHILE_1	ELSE_2	IF_3	CALL_5
0x3b7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        88	ls-refs.c	FUNCTION_3	WHILE_1	ELSE_2	IF_3
0x3bb	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        88	ls-refs.c	FUNCTION_3	WHILE_1	ELSE_2	IF_3
0x3bf	        0x4883c208	                              add rdx, 8	        88	ls-refs.c	FUNCTION_3	WHILE_1	ELSE_2	IF_3
0x3c3	          0x4889c6	                            mov rsi, rax	        88	ls-refs.c	FUNCTION_3	WHILE_1	ELSE_2	IF_3
0x3c6	          0x4889d7	                            mov rdi, rdx	        88	ls-refs.c	FUNCTION_3	WHILE_1	ELSE_2	IF_3
0x3c9	      0xe800000000	                          call 0x400040e	        88	ls-refs.c	FUNCTION_3	WHILE_1	ELSE_2	IF_3
0x3ce	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        79	ls-refs.c	FUNCTION_3	WHILE_1	CALL_2
0x3d2	          0x4889c7	                            mov rdi, rax	        79	ls-refs.c	FUNCTION_3	WHILE_1	CALL_2
0x3d5	      0xe800000000	                          call 0x400041a	        79	ls-refs.c	FUNCTION_3	WHILE_1	CALL_2
0x3da	          0x83f802	                              cmp eax, 2	        79	ls-refs.c	FUNCTION_3	WHILE_1	CALL_2
0x3dd	     0xf8573ffffff	                           jne 0x4000396	        79	ls-refs.c	FUNCTION_3	WHILE_1	CALL_2
0x3e3	        0x488d45e0	                   lea rax, [rbp - 0x20]	        91	ls-refs.c	FUNCTION_3	CALL_7
0x3e7	          0x4889c6	                            mov rsi, rax	        91	ls-refs.c	FUNCTION_3	CALL_7
0x3ea	      0xbf00000000	                              mov edi, 0	        91	ls-refs.c	FUNCTION_3	CALL_7
0x3ef	      0xe800000000	                          call 0x4000434	        91	ls-refs.c	FUNCTION_3	CALL_7
0x3f4	        0x488d45e0	                   lea rax, [rbp - 0x20]	        92	ls-refs.c	FUNCTION_3	CALL_8
0x3f8	          0x4889c6	                            mov rsi, rax	        92	ls-refs.c	FUNCTION_3	CALL_8
0x3fb	      0xbf00000000	                              mov edi, 0	        92	ls-refs.c	FUNCTION_3	CALL_8
0x400	      0xe800000000	                          call 0x4000445	        92	ls-refs.c	FUNCTION_3	CALL_8
0x405	      0xbf01000000	                              mov edi, 1	        93	ls-refs.c	FUNCTION_3	CALL_9
0x40a	      0xe800000000	                          call 0x400044f	        93	ls-refs.c	FUNCTION_3	CALL_9
0x40f	        0x488d45e0	                   lea rax, [rbp - 0x20]	        94	ls-refs.c	FUNCTION_3	CALL_10
0x413	        0x4883c008	                              add rax, 8	        94	ls-refs.c	FUNCTION_3	CALL_10
0x417	          0x4889c7	                            mov rdi, rax	        94	ls-refs.c	FUNCTION_3	CALL_10
0x41a	      0xe800000000	                          call 0x400045f	        94	ls-refs.c	FUNCTION_3	CALL_10
0x41f	      0xb800000000	                              mov eax, 0	        95	ls-refs.c	FUNCTION_3
0x424	        0x488b4df8	                mov rcx, qword [rbp - 8]	        96	ls-refs.c	FUNCTION_3
0x428	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        96	ls-refs.c	FUNCTION_3
0x431	            0x7405	                            je 0x4000478	        96	ls-refs.c	FUNCTION_3
0x433	      0xe800000000	                          call 0x4000478	        96	ls-refs.c	FUNCTION_3
0x438	              0xc9	                                   leave	        96	ls-refs.c	FUNCTION_3
0x439	              0xc3	                                     ret	        96	ls-refs.c	FUNCTION_3
strbuf_avail	WHILE,0:functions,0:FOR,0:ELSE,0:IF,0:SWITCH,0:CALL,0:DO,0	18
0x56	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_5
0x57	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_5
0x5a	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_5
0x5e	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_5
0x62	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_5
0x65	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_5
0x68	            0x741b	                            je 0x40000c5	       141	strbuf.h	FUNCTION_5
0x6a	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_5
0x6e	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_5
0x71	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_5
0x75	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_5
0x79	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_5
0x7c	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_5
0x7f	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_5
0x83	            0xeb05	                           jmp 0x40000ca	       141	strbuf.h	FUNCTION_5
0x85	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_5
0x8a	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_5
0x8b	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_5
strbuf_addch	WHILE,0:functions,0:FOR,0:ELSE,0:IF,1:SWITCH,0:CALL,2:DO,0	33
0x8c	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_7
0x8d	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_7
0x90	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_7
0x94	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_7
0x98	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_7
0x9b	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_7	IF_1	CALL_1
0x9f	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_7	IF_1	CALL_1
0xa2	      0xe8afffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_7	IF_1	CALL_1
0xa7	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_7	IF_1	CALL_1
0xaa	            0x7511	                           jne 0x40000fd	       227	strbuf.h	FUNCTION_7	IF_1	CALL_1
0xac	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_7	CALL_2
0xb0	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_7	CALL_2
0xb5	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_7	CALL_2
0xb8	      0xe800000000	                          call 0x40000fd	       228	strbuf.h	FUNCTION_7	CALL_2
0xbd	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_7
0xc1	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_7
0xc5	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_7
0xc9	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_7
0xcd	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_7
0xd1	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_7
0xd5	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_7
0xd9	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_7
0xdc	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_7
0xdf	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_7
0xe1	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_7
0xe5	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_7
0xe9	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_7
0xed	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_7
0xf1	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_7
0xf4	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_7
0xf7	              0x90	                                     nop	       231	strbuf.h	FUNCTION_7
0xf8	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_7
0xf9	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_7
ref_match	WHILE,0:functions,0:FOR,1:ELSE,0:IF,2:SWITCH,0:CALL,1:DO,0	38
0xfa	              0x55	                                push rbp	        14	ls-refs.c	FUNCTION_1
0xfb	          0x4889e5	                            mov rbp, rsp	        14	ls-refs.c	FUNCTION_1
0xfe	        0x4883ec20	                           sub rsp, 0x20	        14	ls-refs.c	FUNCTION_1
0x102	        0x48897de8	             mov qword [rbp - 0x18], rdi	        14	ls-refs.c	FUNCTION_1
0x106	        0x488975e0	             mov qword [rbp - 0x20], rsi	        14	ls-refs.c	FUNCTION_1
0x10a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        17	ls-refs.c	FUNCTION_1	IF_1
0x10e	          0x8b4008	                mov eax, dword [rax + 8]	        17	ls-refs.c	FUNCTION_1	IF_1
0x111	            0x85c0	                           test eax, eax	        17	ls-refs.c	FUNCTION_1	IF_1
0x113	            0x7507	                           jne 0x400015c	        17	ls-refs.c	FUNCTION_1	IF_1
0x115	      0xb801000000	                              mov eax, 1	        18	ls-refs.c	FUNCTION_1	IF_1
0x11a	            0xeb57	                           jmp 0x40001b3	        18	ls-refs.c	FUNCTION_1	IF_1
0x11c	    0xc745f4000000	                mov dword [rbp - 0xc], 0	        20	ls-refs.c	FUNCTION_1	FOR_1
0x123	            0xeb3d	                           jmp 0x40001a2	        20	ls-refs.c	FUNCTION_1	FOR_1
0x125	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        21	ls-refs.c	FUNCTION_1	FOR_1
0x129	          0x488b00	                    mov rax, qword [rax]	        21	ls-refs.c	FUNCTION_1	FOR_1
0x12c	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        21	ls-refs.c	FUNCTION_1	FOR_1
0x12f	          0x4863d2	                         movsxd rdx, edx	        21	ls-refs.c	FUNCTION_1	FOR_1
0x132	        0x48c1e203	                              shl rdx, 3	        21	ls-refs.c	FUNCTION_1	FOR_1
0x136	          0x4801d0	                            add rax, rdx	        21	ls-refs.c	FUNCTION_1	FOR_1
0x139	          0x488b00	                    mov rax, qword [rax]	        21	ls-refs.c	FUNCTION_1	FOR_1
0x13c	        0x488945f8	                mov qword [rbp - 8], rax	        21	ls-refs.c	FUNCTION_1	FOR_1
0x140	        0x488b55f8	                mov rdx, qword [rbp - 8]	        23	ls-refs.c	FUNCTION_1	FOR_1	IF_2	CALL_1
0x144	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        23	ls-refs.c	FUNCTION_1	FOR_1	IF_2	CALL_1
0x148	          0x4889d6	                            mov rsi, rdx	        23	ls-refs.c	FUNCTION_1	FOR_1	IF_2	CALL_1
0x14b	          0x4889c7	                            mov rdi, rax	        23	ls-refs.c	FUNCTION_1	FOR_1	IF_2	CALL_1
0x14e	      0xe800000000	                          call 0x4000193	        23	ls-refs.c	FUNCTION_1	FOR_1	IF_2	CALL_1
0x153	            0x85c0	                           test eax, eax	        23	ls-refs.c	FUNCTION_1	FOR_1	IF_2	CALL_1
0x155	            0x7407	                            je 0x400019e	        23	ls-refs.c	FUNCTION_1	FOR_1	IF_2	CALL_1
0x157	      0xb801000000	                              mov eax, 1	        24	ls-refs.c	FUNCTION_1	FOR_1	IF_2
0x15c	            0xeb15	                           jmp 0x40001b3	        24	ls-refs.c	FUNCTION_1	FOR_1	IF_2
0x15e	        0x8345f401	                add dword [rbp - 0xc], 1	        20	ls-refs.c	FUNCTION_1	FOR_1
0x162	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        20	ls-refs.c	FUNCTION_1	FOR_1
0x166	          0x8b4008	                mov eax, dword [rax + 8]	        20	ls-refs.c	FUNCTION_1	FOR_1
0x169	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	        20	ls-refs.c	FUNCTION_1	FOR_1
0x16c	            0x7fb7	                            jg 0x4000165	        20	ls-refs.c	FUNCTION_1	FOR_1
0x16e	      0xb800000000	                              mov eax, 0	        27	ls-refs.c	FUNCTION_1
0x173	              0xc9	                                   leave	        28	ls-refs.c	FUNCTION_1
0x174	              0xc3	                                     ret	        28	ls-refs.c	FUNCTION_1
skip_prefix	WHILE,0:functions,0:FOR,0:ELSE,0:IF,1:SWITCH,0:CALL,0:DO,1	27
0x0	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_21
0x1	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_21
0x4	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_21
0x8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_21
0xc	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_21
0x10	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_21	DO_1	IF_1
0x14	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_21	DO_1	IF_1
0x17	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_21	DO_1	IF_1
0x19	            0x7512	                           jne 0x400006d	       484	git-compat-util.h	FUNCTION_21	DO_1	IF_1
0x1b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_21	DO_1	IF_1
0x1f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_21	DO_1	IF_1
0x23	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_21	DO_1	IF_1
0x26	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_21	DO_1	IF_1
0x2b	            0xeb27	                           jmp 0x4000094	       486	git-compat-util.h	FUNCTION_21	DO_1	IF_1
0x2d	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_21	DO_1
0x31	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_21	DO_1
0x35	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_21	DO_1
0x39	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_21	DO_1
0x3c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_21	DO_1
0x40	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_21	DO_1
0x44	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_21	DO_1
0x48	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_21	DO_1
0x4b	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_21	DO_1
0x4d	            0x74c1	                            je 0x4000050	       488	git-compat-util.h	FUNCTION_21	DO_1
0x4f	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_21
0x54	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_21
0x55	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_21
send_ref	WHILE,0:functions,0:FOR,0:ELSE,0:IF,5:SWITCH,0:CALL,13:DO,0	108
0x175	              0x55	                                push rbp	        38	ls-refs.c	FUNCTION_2
0x176	          0x4889e5	                            mov rbp, rsp	        38	ls-refs.c	FUNCTION_2
0x179	        0x4883c480	             add rsp, 0xffffffffffffff80	        38	ls-refs.c	FUNCTION_2
0x17d	        0x48897d98	             mov qword [rbp - 0x68], rdi	        38	ls-refs.c	FUNCTION_2
0x181	        0x48897590	             mov qword [rbp - 0x70], rsi	        38	ls-refs.c	FUNCTION_2
0x185	          0x89558c	             mov dword [rbp - 0x74], edx	        38	ls-refs.c	FUNCTION_2
0x188	        0x48894d80	             mov qword [rbp - 0x80], rcx	        38	ls-refs.c	FUNCTION_2
0x18c	    0x64488b042528	                mov rax, qword fs:[0x28]	        38	ls-refs.c	FUNCTION_2
0x195	        0x488945f8	                mov qword [rbp - 8], rax	        38	ls-refs.c	FUNCTION_2
0x199	            0x31c0	                            xor eax, eax	        38	ls-refs.c	FUNCTION_2
0x19b	        0x488b4580	             mov rax, qword [rbp - 0x80]	        39	ls-refs.c	FUNCTION_2
0x19f	        0x488945a8	             mov qword [rbp - 0x58], rax	        39	ls-refs.c	FUNCTION_2
0x1a3	        0x488b4598	             mov rax, qword [rbp - 0x68]	        40	ls-refs.c	FUNCTION_2	CALL_1
0x1a7	          0x4889c7	                            mov rdi, rax	        40	ls-refs.c	FUNCTION_2	CALL_1
0x1aa	      0xe800000000	                          call 0x40001ef	        40	ls-refs.c	FUNCTION_2	CALL_1
0x1af	        0x488945b0	             mov qword [rbp - 0x50], rax	        40	ls-refs.c	FUNCTION_2	CALL_1
0x1b3	    0x48c745c00000	               mov qword [rbp - 0x40], 0	        41	ls-refs.c	FUNCTION_2
0x1bb	    0x48c745c80000	               mov qword [rbp - 0x38], 0	        41	ls-refs.c	FUNCTION_2
0x1c3	    0x48c745d00000	               mov qword [rbp - 0x30], 0	        41	ls-refs.c	FUNCTION_2
0x1cb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        43	ls-refs.c	FUNCTION_2	IF_1	CALL_2
0x1cf	        0x488d5008	                      lea rdx, [rax + 8]	        43	ls-refs.c	FUNCTION_2	IF_1	CALL_2
0x1d3	        0x488b4598	             mov rax, qword [rbp - 0x68]	        43	ls-refs.c	FUNCTION_2	IF_1	CALL_2
0x1d7	          0x4889c6	                            mov rsi, rax	        43	ls-refs.c	FUNCTION_2	IF_1	CALL_2
0x1da	          0x4889d7	                            mov rdi, rdx	        43	ls-refs.c	FUNCTION_2	IF_1	CALL_2
0x1dd	      0xe818ffffff	                      call sym.ref_match	        43	ls-refs.c	FUNCTION_2	IF_1	CALL_2
0x1e2	            0x85c0	                           test eax, eax	        43	ls-refs.c	FUNCTION_2	IF_1	CALL_2
0x1e4	            0x750a	                           jne 0x4000230	        43	ls-refs.c	FUNCTION_2	IF_1	CALL_2
0x1e6	      0xb800000000	                              mov eax, 0	        44	ls-refs.c	FUNCTION_2	IF_1
0x1eb	      0xe915010000	                           jmp 0x4000345	        44	ls-refs.c	FUNCTION_2	IF_1
0x1f0	        0x488b4590	             mov rax, qword [rbp - 0x70]	        46	ls-refs.c	FUNCTION_2	CALL_4
0x1f4	          0x4889c7	                            mov rdi, rax	        46	ls-refs.c	FUNCTION_2	CALL_4
0x1f7	      0xe800000000	                          call 0x400023c	        46	ls-refs.c	FUNCTION_2	CALL_4
0x1fc	          0x4889c6	                            mov rsi, rax	        46	ls-refs.c	FUNCTION_2	CALL_4
0x1ff	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	        46	ls-refs.c	FUNCTION_2	CALL_4
0x203	        0x488d45c0	                   lea rax, [rbp - 0x40]	        46	ls-refs.c	FUNCTION_2	CALL_4
0x207	          0x4889d1	                            mov rcx, rdx	        46	ls-refs.c	FUNCTION_2	CALL_4
0x20a	          0x4889f2	                            mov rdx, rsi	        46	ls-refs.c	FUNCTION_2	CALL_4
0x20d	      0xbe00000000	                              mov esi, 0	        46	ls-refs.c	FUNCTION_2	CALL_4
0x212	          0x4889c7	                            mov rdi, rax	        46	ls-refs.c	FUNCTION_2	CALL_4
0x215	      0xb800000000	                              mov eax, 0	        46	ls-refs.c	FUNCTION_2	CALL_4
0x21a	      0xe800000000	                          call 0x400025f	        46	ls-refs.c	FUNCTION_2	CALL_4
0x21f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        47	ls-refs.c	FUNCTION_2	IF_2
0x223	          0x8b4004	                mov eax, dword [rax + 4]	        47	ls-refs.c	FUNCTION_2	IF_2
0x226	            0x85c0	                           test eax, eax	        47	ls-refs.c	FUNCTION_2	IF_2
0x228	            0x745e	                            je 0x40002c8	        47	ls-refs.c	FUNCTION_2	IF_2
0x22a	          0x8b458c	             mov eax, dword [rbp - 0x74]	        47	ls-refs.c	FUNCTION_2	IF_2
0x22d	          0x83e001	                              and eax, 1	        47	ls-refs.c	FUNCTION_2	IF_2
0x230	            0x85c0	                           test eax, eax	        47	ls-refs.c	FUNCTION_2	IF_2
0x232	            0x7454	                            je 0x40002c8	        47	ls-refs.c	FUNCTION_2	IF_2
0x234	        0x488d4d8c	                   lea rcx, [rbp - 0x74]	        49	ls-refs.c	FUNCTION_2	IF_2	CALL_5
0x238	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        49	ls-refs.c	FUNCTION_2	IF_2	CALL_5
0x23c	        0x488b4598	             mov rax, qword [rbp - 0x68]	        49	ls-refs.c	FUNCTION_2	IF_2	CALL_5
0x240	      0xbe00000000	                              mov esi, 0	        49	ls-refs.c	FUNCTION_2	IF_2	CALL_5
0x245	          0x4889c7	                            mov rdi, rax	        49	ls-refs.c	FUNCTION_2	IF_2	CALL_5
0x248	      0xe800000000	                          call 0x400028d	        49	ls-refs.c	FUNCTION_2	IF_2	CALL_5
0x24d	        0x488945b8	             mov qword [rbp - 0x48], rax	        49	ls-refs.c	FUNCTION_2	IF_2	CALL_5
0x251	      0x48837db800	               cmp qword [rbp - 0x48], 0	        53	ls-refs.c	FUNCTION_2	IF_2	IF_3
0x256	            0x7516	                           jne 0x40002ae	        53	ls-refs.c	FUNCTION_2	IF_2	IF_3
0x258	        0x488b4598	             mov rax, qword [rbp - 0x68]	        54	ls-refs.c	FUNCTION_2	IF_2	CALL_6
0x25c	          0x4889c6	                            mov rsi, rax	        54	ls-refs.c	FUNCTION_2	IF_2	CALL_6
0x25f	      0xbf00000000	                              mov edi, 0	        54	ls-refs.c	FUNCTION_2	IF_2	CALL_6
0x264	      0xb800000000	                              mov eax, 0	        54	ls-refs.c	FUNCTION_2	IF_2	CALL_6
0x269	      0xe800000000	                          call 0x40002ae	        54	ls-refs.c	FUNCTION_2	IF_2	CALL_6
0x26e	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	        56	ls-refs.c	FUNCTION_2	IF_2	CALL_7
0x272	        0x488d45c0	                   lea rax, [rbp - 0x40]	        56	ls-refs.c	FUNCTION_2	IF_2	CALL_7
0x276	      0xbe00000000	                              mov esi, 0	        56	ls-refs.c	FUNCTION_2	IF_2	CALL_7
0x27b	          0x4889c7	                            mov rdi, rax	        56	ls-refs.c	FUNCTION_2	IF_2	CALL_7
0x27e	      0xb800000000	                              mov eax, 0	        56	ls-refs.c	FUNCTION_2	IF_2	CALL_7
0x283	      0xe800000000	                          call 0x40002c8	        56	ls-refs.c	FUNCTION_2	IF_2	CALL_7
0x288	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        59	ls-refs.c	FUNCTION_2	IF_4
0x28c	            0x8b00	                    mov eax, dword [rax]	        59	ls-refs.c	FUNCTION_2	IF_4
0x28e	            0x85c0	                           test eax, eax	        59	ls-refs.c	FUNCTION_2	IF_4
0x290	            0x743c	                            je 0x400030e	        59	ls-refs.c	FUNCTION_2	IF_4
0x292	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        61	ls-refs.c	FUNCTION_2	IF_4	IF_5	CALL_8
0x296	        0x488b4598	             mov rax, qword [rbp - 0x68]	        61	ls-refs.c	FUNCTION_2	IF_4	IF_5	CALL_8
0x29a	          0x4889d6	                            mov rsi, rdx	        61	ls-refs.c	FUNCTION_2	IF_4	IF_5	CALL_8
0x29d	          0x4889c7	                            mov rdi, rax	        61	ls-refs.c	FUNCTION_2	IF_4	IF_5	CALL_8
0x2a0	      0xe800000000	                          call 0x40002e5	        61	ls-refs.c	FUNCTION_2	IF_4	IF_5	CALL_8
0x2a5	            0x85c0	                           test eax, eax	        61	ls-refs.c	FUNCTION_2	IF_4	IF_5	CALL_8
0x2a7	            0x7525	                           jne 0x400030e	        61	ls-refs.c	FUNCTION_2	IF_4	IF_5	CALL_8
0x2a9	        0x488d45e0	                   lea rax, [rbp - 0x20]	        62	ls-refs.c	FUNCTION_2	IF_4	CALL_10
0x2ad	          0x4889c7	                            mov rdi, rax	        62	ls-refs.c	FUNCTION_2	IF_4	CALL_10
0x2b0	      0xe800000000	                          call 0x40002f5	        62	ls-refs.c	FUNCTION_2	IF_4	CALL_10
0x2b5	          0x4889c2	                            mov rdx, rax	        62	ls-refs.c	FUNCTION_2	IF_4	CALL_10
0x2b8	        0x488d45c0	                   lea rax, [rbp - 0x40]	        62	ls-refs.c	FUNCTION_2	IF_4	CALL_10
0x2bc	      0xbe00000000	                              mov esi, 0	        62	ls-refs.c	FUNCTION_2	IF_4	CALL_10
0x2c1	          0x4889c7	                            mov rdi, rax	        62	ls-refs.c	FUNCTION_2	IF_4	CALL_10
0x2c4	      0xb800000000	                              mov eax, 0	        62	ls-refs.c	FUNCTION_2	IF_4	CALL_10
0x2c9	      0xe800000000	                          call 0x400030e	        62	ls-refs.c	FUNCTION_2	IF_4	CALL_10
0x2ce	        0x488d45c0	                   lea rax, [rbp - 0x40]	        65	ls-refs.c	FUNCTION_2	CALL_11
0x2d2	      0xbe0a000000	                            mov esi, 0xa	        65	ls-refs.c	FUNCTION_2	CALL_11
0x2d7	          0x4889c7	                            mov rdi, rax	        65	ls-refs.c	FUNCTION_2	CALL_11
0x2da	      0xe8adfdffff	                   call sym.strbuf_addch	        65	ls-refs.c	FUNCTION_2	CALL_11
0x2df	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	        66	ls-refs.c	FUNCTION_2	CALL_12
0x2e3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        66	ls-refs.c	FUNCTION_2	CALL_12
0x2e7	          0x4889c6	                            mov rsi, rax	        66	ls-refs.c	FUNCTION_2	CALL_12
0x2ea	      0xbf01000000	                              mov edi, 1	        66	ls-refs.c	FUNCTION_2	CALL_12
0x2ef	      0xe800000000	                          call 0x4000334	        66	ls-refs.c	FUNCTION_2	CALL_12
0x2f4	        0x488d45c0	                   lea rax, [rbp - 0x40]	        68	ls-refs.c	FUNCTION_2	CALL_13
0x2f8	          0x4889c7	                            mov rdi, rax	        68	ls-refs.c	FUNCTION_2	CALL_13
0x2fb	      0xe800000000	                          call 0x4000340	        68	ls-refs.c	FUNCTION_2	CALL_13
0x300	      0xb800000000	                              mov eax, 0	        69	ls-refs.c	FUNCTION_2
0x305	        0x488b4df8	                mov rcx, qword [rbp - 8]	        70	ls-refs.c	FUNCTION_2
0x309	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        70	ls-refs.c	FUNCTION_2
0x312	            0x7405	                            je 0x4000359	        70	ls-refs.c	FUNCTION_2
0x314	      0xe800000000	                          call 0x4000359	        70	ls-refs.c	FUNCTION_2
0x319	              0xc9	                                   leave	        70	ls-refs.c	FUNCTION_2
0x31a	              0xc3	                                     ret	        70	ls-refs.c	FUNCTION_2
