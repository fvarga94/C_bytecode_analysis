find_remote_branch	WHILE,0:functions,0:ELSE,0:SWITCH,0:IF,1:DO,0:FOR,0:CALL,8	63
0x40000a3	            0x4154	                                push r12	       529	clone.c	FUNCTION_13
0x40000a5	              0x55	                                push rbp	       529	clone.c	FUNCTION_13
0x40000a6	              0x53	                                push rbx	       529	clone.c	FUNCTION_13
0x40000a7	        0x4883ec20	                           sub rsp, 0x20	       529	clone.c	FUNCTION_13
0x40000ab	          0x4889fd	                            mov rbp, rdi	       529	clone.c	FUNCTION_13
0x40000ae	          0x4889f3	                            mov rbx, rsi	       529	clone.c	FUNCTION_13
0x40000b1	    0x64488b042528	                mov rax, qword fs:[0x28]	       529	clone.c	FUNCTION_13
0x40000ba	      0x4889442418	             mov qword [rsp + 0x18], rax	       529	clone.c	FUNCTION_13
0x40000bf	            0x31c0	                            xor eax, eax	       529	clone.c	FUNCTION_13
0x40000c1	    0x48c704240000	                      mov qword [rsp], 0	       531	clone.c	FUNCTION_13
0x40000c9	    0x48c744240800	                  mov qword [rsp + 8], 0	       531	clone.c	FUNCTION_13
0x40000d2	    0x48c744241000	               mov qword [rsp + 0x10], 0	       531	clone.c	FUNCTION_13
0x40000db	      0xba0b000000	                            mov edx, 0xb	       279	strbuf.h	FUNCTION_31	CALL_2
0x40000e0	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_31	CALL_2
0x40000e5	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_31	CALL_2
0x40000e8	      0xe800000000	                          call 0x40000ed	       279	strbuf.h	FUNCTION_31	CALL_2
0x40000ed	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_31	CALL_2
0x40000f2	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_31	CALL_2
0x40000f9	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_31	CALL_2
0x40000fc	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_31	CALL_2
0x40000fe	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000101	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000105	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000108	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_31	CALL_2
0x400010b	      0xe800000000	                          call 0x4000110	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000110	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       534	clone.c	FUNCTION_13	CALL_3
0x4000115	          0x4889ef	                            mov rdi, rbp	       534	clone.c	FUNCTION_13	CALL_3
0x4000118	      0xe800000000	                          call 0x400011d	       534	clone.c	FUNCTION_13	CALL_3
0x400011d	          0x4989c4	                            mov r12, rax	       534	clone.c	FUNCTION_13	CALL_3
0x4000120	          0x4889e7	                            mov rdi, rsp	       535	clone.c	FUNCTION_13	CALL_4
0x4000123	      0xe800000000	                          call 0x4000128	       535	clone.c	FUNCTION_13	CALL_4
0x4000128	          0x4c89e0	                            mov rax, r12	       538	clone.c	FUNCTION_13	IF_1
0x400012b	          0x4d85e4	                           test r12, r12	       537	clone.c	FUNCTION_13	IF_1
0x400012e	            0x7550	                           jne 0x4000180	       537	clone.c	FUNCTION_13	IF_1
0x4000130	      0xba0a000000	                            mov edx, 0xa	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000135	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_31	CALL_2
0x400013a	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_31	CALL_2
0x400013d	      0xe800000000	                          call 0x4000142	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000142	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000147	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_31	CALL_2
0x400014e	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000151	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000153	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000156	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_31	CALL_2
0x400015a	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_31	CALL_2
0x400015d	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000160	      0xe800000000	                          call 0x4000165	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000165	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       542	clone.c	FUNCTION_13	CALL_7
0x400016a	          0x4889ef	                            mov rdi, rbp	       542	clone.c	FUNCTION_13	CALL_7
0x400016d	      0xe800000000	                          call 0x4000172	       542	clone.c	FUNCTION_13	CALL_7
0x4000172	          0x4889c3	                            mov rbx, rax	       542	clone.c	FUNCTION_13	CALL_7
0x4000175	          0x4889e7	                            mov rdi, rsp	       543	clone.c	FUNCTION_13	CALL_8
0x4000178	      0xe800000000	                          call 0x400017d	       543	clone.c	FUNCTION_13	CALL_8
0x400017d	          0x4889d8	                            mov rax, rbx	       545	clone.c	FUNCTION_13
0x4000180	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       546	clone.c	FUNCTION_13
0x4000185	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       546	clone.c	FUNCTION_13
0x400018e	            0x7405	                            je 0x4000195	       546	clone.c	FUNCTION_13
0x4000190	      0xe800000000	                          call 0x4000195	       546	clone.c	FUNCTION_13
0x4000195	        0x4883c420	                           add rsp, 0x20	       546	clone.c	FUNCTION_13
0x4000199	              0x5b	                                 pop rbx	       546	clone.c	FUNCTION_13
0x400019a	              0x5d	                                 pop rbp	       546	clone.c	FUNCTION_13
0x400019b	            0x415c	                                 pop r12	       546	clone.c	FUNCTION_13
0x400019d	              0xc3	                                     ret	       546	clone.c	FUNCTION_13
write_one_config	WHILE,0:functions,0:ELSE,0:SWITCH,0:IF,0:DO,0:FOR,0:CALL,1	9
0x400007f	        0x4883ec08	                              sub rsp, 8	       789	clone.c	FUNCTION_21
0x4000083	          0x4885f6	                           test rsi, rsi	       790	clone.c	FUNCTION_21	CALL_1
0x4000086	      0xb800000000	                              mov eax, 0	       790	clone.c	FUNCTION_21	CALL_1
0x400008b	        0x480f44f0	                          cmove rsi, rax	       790	clone.c	FUNCTION_21	CALL_1
0x400008f	      0xb900000000	                              mov ecx, 0	       790	clone.c	FUNCTION_21	CALL_1
0x4000094	      0xba01000000	                              mov edx, 1	       790	clone.c	FUNCTION_21	CALL_1
0x4000099	      0xe800000000	                          call 0x400009e	       790	clone.c	FUNCTION_21	CALL_1
0x400009e	        0x4883c408	                              add rsp, 8	       793	clone.c	FUNCTION_21
0x40000a2	              0xc3	                                     ret	       793	clone.c	FUNCTION_21
recurse_submodules_cb	WHILE,0:functions,0:ELSE,2:SWITCH,0:IF,2:DO,0:FOR,0:CALL,3	18
0x4000040	        0x4883ec08	                              sub rsp, 8	        69	clone.c	IF_9	FUNCTION_1
0x4000044	            0x85d2	                           test edx, edx	        70	clone.c	IF_9	FUNCTION_1	IF_1
0x4000046	            0x7410	                            je 0x4000058	        70	clone.c	IF_9	FUNCTION_1	IF_1
0x4000048	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	        71	clone.c	IF_9	FUNCTION_1	CALL_1
0x400004c	      0xbe00000000	                              mov esi, 0	        71	clone.c	IF_9	FUNCTION_1	CALL_1
0x4000051	      0xe800000000	                          call 0x4000056	        71	clone.c	IF_9	FUNCTION_1	CALL_1
0x4000056	            0xeb1d	                           jmp 0x4000075	        71	clone.c	IF_9	FUNCTION_1	CALL_1
0x4000058	          0x4885f6	                           test rsi, rsi	        72	clone.c	IF_9	FUNCTION_1	ELSE_1	IF_2
0x400005b	            0x740b	                            je 0x4000068	        72	clone.c	IF_9	FUNCTION_1	ELSE_1	IF_2
0x400005d	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	        73	clone.c	IF_9	FUNCTION_1	ELSE_1	IF_2
0x4000061	      0xe800000000	                          call 0x4000066	        73	clone.c	IF_9	FUNCTION_1	ELSE_1	IF_2
0x4000066	            0xeb0d	                           jmp 0x4000075	        73	clone.c	IF_9	FUNCTION_1	ELSE_1	IF_2
0x4000068	        0x488b7738	            mov rsi, qword [rdi + 0x38] 	        75	clone.c	IF_9	FUNCTION_1	ELSE_2	CALL_3
0x400006c	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	        75	clone.c	IF_9	FUNCTION_1	ELSE_2	CALL_3
0x4000070	      0xe800000000	                          call 0x4000075	        75	clone.c	IF_9	FUNCTION_1	ELSE_2	CALL_3
0x4000075	      0xb800000000	                              mov eax, 0	        79	clone.c	IF_9	FUNCTION_1
0x400007a	        0x4883c408	                              add rsp, 8	        79	clone.c	IF_9	FUNCTION_1
0x400007e	              0xc3	                                     ret	        79	clone.c	IF_9	FUNCTION_1
remove_junk	WHILE,0:functions,0:ELSE,0:SWITCH,1:IF,2:DO,0:FOR,0:CALL,7	71
0x4000b7f	        0x4883ec28	                           sub rsp, 0x28	       495	clone.c	FUNCTION_11
0x4000b83	    0x64488b042528	                mov rax, qword fs:[0x28]	       495	clone.c	FUNCTION_11
0x4000b8c	      0x4889442418	             mov qword [rsp + 0x18], rax	       495	clone.c	FUNCTION_11
0x4000b91	            0x31c0	                            xor eax, eax	       495	clone.c	FUNCTION_11
0x4000b93	    0x48c704240000	                      mov qword [rsp], 0	       496	clone.c	FUNCTION_11
0x4000b9b	    0x48c744240800	                  mov qword [rsp + 8], 0	       496	clone.c	FUNCTION_11
0x4000ba4	    0x48c744241000	               mov qword [rsp + 0x10], 0	       496	clone.c	FUNCTION_11
0x4000bad	    0x8b0500000000	            mov eax, dword [0x04000bb3] 	       498	clone.c	FUNCTION_11	SWITCH_1
0x4000bb3	          0x83f801	                              cmp eax, 1	       498	clone.c	FUNCTION_11	SWITCH_1
0x4000bb6	            0x740b	                            je 0x4000bc3	       498	clone.c	FUNCTION_11	SWITCH_1
0x4000bb8	          0x83f802	                              cmp eax, 2	       498	clone.c	FUNCTION_11	SWITCH_1
0x4000bbb	     0xf84e6000000	                            je 0x4000ca7	       498	clone.c	FUNCTION_11	SWITCH_1
0x4000bc1	            0xeb2b	                           jmp 0x4000bee	       498	clone.c	FUNCTION_11	SWITCH_1
0x4000bc3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_40
0x4000bc8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_40
0x4000bcd	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_40
0x4000bd2	      0xe800000000	                          call 0x4000bd7	        54	gettext.h	FUNCTION_40
0x4000bd7	          0x4889c6	                            mov rsi, rax	       500	clone.c	FUNCTION_11	SWITCH_1	CALL_2
0x4000bda	      0xbf00000000	                              mov edi, 0	       500	clone.c	FUNCTION_11	SWITCH_1	CALL_2
0x4000bdf	      0xb800000000	                              mov eax, 0	       500	clone.c	FUNCTION_11	SWITCH_1	CALL_2
0x4000be4	      0xe800000000	                          call 0x4000be9	       500	clone.c	FUNCTION_11	SWITCH_1	CALL_2
0x4000be9	      0xe9b9000000	                           jmp 0x4000ca7	       500	clone.c	FUNCTION_11	SWITCH_1	CALL_2
0x4000bee	    0x488b35000000	            mov rsi, qword [0x04000bf5] 	       509	clone.c	FUNCTION_11	IF_1
0x4000bf5	          0x4885f6	                           test rsi, rsi	       509	clone.c	FUNCTION_11	IF_1
0x4000bf8	            0x746b	                            je 0x4000c65	       509	clone.c	FUNCTION_11	IF_1
0x4000bfa	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000bff	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000c06	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000c09	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000c0b	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000c0e	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000c12	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000c15	      0xe800000000	                          call 0x4000c1a	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000c1a	    0x8b3500000000	            mov esi, dword [0x04000c20] 	       511	clone.c	FUNCTION_11	IF_1	CALL_4
0x4000c20	          0x4889e7	                            mov rdi, rsp	       511	clone.c	FUNCTION_11	IF_1	CALL_4
0x4000c23	      0xe800000000	                          call 0x4000c28	       511	clone.c	FUNCTION_11	IF_1	CALL_4
0x4000c28	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_29
0x4000c31	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_29	IF_2
0x4000c36	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_29	IF_2
0x4000c3c	            0x7405	                            je 0x4000c43	       165	strbuf.h	FUNCTION_29	IF_2
0x4000c3e	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_29	IF_2
0x4000c41	            0xeb22	                           jmp 0x4000c65	       166	strbuf.h	FUNCTION_29	IF_2
0x4000c43	    0x803d00000000	                cmp byte [0x04000c4a], 0	       168	strbuf.h	FUNCTION_29	CALL_2
0x4000c4a	            0x7419	                            je 0x4000c65	       168	strbuf.h	FUNCTION_29	CALL_2
0x4000c4c	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_29	CALL_2
0x4000c51	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_29	CALL_2
0x4000c56	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_29	CALL_2
0x4000c5b	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_29	CALL_2
0x4000c60	      0xe800000000	                          call 0x4000c65	       168	strbuf.h	FUNCTION_29	CALL_2
0x4000c65	    0x488b35000000	            mov rsi, qword [0x04000c6c] 	       514	clone.c	FUNCTION_11	IF_2
0x4000c6c	          0x4885f6	                           test rsi, rsi	       514	clone.c	FUNCTION_11	IF_2
0x4000c6f	            0x742e	                            je 0x4000c9f	       514	clone.c	FUNCTION_11	IF_2
0x4000c71	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000c76	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000c7d	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000c80	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000c82	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000c85	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000c89	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000c8c	      0xe800000000	                          call 0x4000c91	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000c91	    0x8b3500000000	            mov esi, dword [0x04000c97] 	       516	clone.c	FUNCTION_11	IF_2	CALL_6
0x4000c97	          0x4889e7	                            mov rdi, rsp	       516	clone.c	FUNCTION_11	IF_2	CALL_6
0x4000c9a	      0xe800000000	                          call 0x4000c9f	       516	clone.c	FUNCTION_11	IF_2	CALL_6
0x4000c9f	          0x4889e7	                            mov rdi, rsp	       518	clone.c	FUNCTION_11	CALL_7
0x4000ca2	      0xe800000000	                          call 0x4000ca7	       518	clone.c	FUNCTION_11	CALL_7
0x4000ca7	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       519	clone.c	FUNCTION_11
0x4000cac	    0x644833042528	                xor rax, qword fs:[0x28]	       519	clone.c	FUNCTION_11
0x4000cb5	            0x7405	                            je 0x4000cbc	       519	clone.c	FUNCTION_11
0x4000cb7	      0xe800000000	                          call 0x4000cbc	       519	clone.c	FUNCTION_11
0x4000cbc	        0x4883c428	                           add rsp, 0x28	       519	clone.c	FUNCTION_11
0x4000cc0	              0xc3	                                     ret	       519	clone.c	FUNCTION_11
add_one_reference	WHILE,0:functions,0:ELSE,2:SWITCH,0:IF,2:DO,0:FOR,0:CALL,8	64
0x400019e	            0x4154	                                push r12	       320	clone.c	FUNCTION_6
0x40001a0	              0x55	                                push rbp	       320	clone.c	FUNCTION_6
0x40001a1	              0x53	                                push rbx	       320	clone.c	FUNCTION_6
0x40001a2	        0x4883ec40	                           sub rsp, 0x40	       320	clone.c	FUNCTION_6
0x40001a6	          0x4889fd	                            mov rbp, rdi	       320	clone.c	FUNCTION_6
0x40001a9	          0x4989f4	                            mov r12, rsi	       320	clone.c	FUNCTION_6
0x40001ac	    0x64488b042528	                mov rax, qword fs:[0x28]	       320	clone.c	FUNCTION_6
0x40001b5	      0x4889442438	             mov qword [rsp + 0x38], rax	       320	clone.c	FUNCTION_6
0x40001ba	            0x31c0	                            xor eax, eax	       320	clone.c	FUNCTION_6
0x40001bc	    0x48c704240000	                      mov qword [rsp], 0	       321	clone.c	FUNCTION_6
0x40001c4	    0x48c744240800	                  mov qword [rsp + 8], 0	       321	clone.c	FUNCTION_6
0x40001cd	    0x48c744241000	               mov qword [rsp + 0x10], 0	       321	clone.c	FUNCTION_6
0x40001d6	          0x4889e6	                            mov rsi, rsp	       323	clone.c	FUNCTION_6	CALL_1
0x40001d9	          0x488b3f	                    mov rdi, qword [rdi]	       323	clone.c	FUNCTION_6	CALL_1
0x40001dc	      0xe800000000	                          call 0x40001e1	       323	clone.c	FUNCTION_6	CALL_1
0x40001e1	          0x4889c3	                            mov rbx, rax	       323	clone.c	FUNCTION_6	CALL_1
0x40001e4	          0x4885c0	                           test rax, rax	       325	clone.c	FUNCTION_6	IF_1
0x40001e7	            0x7559	                           jne 0x4000242	       325	clone.c	FUNCTION_6	IF_1
0x40001e9	      0x41833c2400	                      cmp dword [r12], 0	       326	clone.c	FUNCTION_6	IF_1	IF_2
0x40001ee	            0x7414	                            je 0x4000204	       326	clone.c	FUNCTION_6	IF_1	IF_2
0x40001f0	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       327	clone.c	FUNCTION_6	IF_1	CALL_2
0x40001f5	      0xbf00000000	                              mov edi, 0	       327	clone.c	FUNCTION_6	IF_1	CALL_2
0x40001fa	      0xb800000000	                              mov eax, 0	       327	clone.c	FUNCTION_6	IF_1	CALL_2
0x40001ff	      0xe800000000	                          call 0x4000204	       327	clone.c	FUNCTION_6	IF_1	CALL_2
0x4000204	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	       329	clone.c	FUNCTION_6	IF_1	ELSE_1
0x4000209	        0x488b6d00	                    mov rbp, qword [rbp]	       329	clone.c	FUNCTION_6	IF_1	ELSE_1
0x400020d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_40
0x4000212	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_40
0x4000217	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_40
0x400021c	      0xe800000000	                          call 0x4000221	        54	gettext.h	FUNCTION_40
0x4000221	          0x4d89e0	                             mov r8, r12	        97	stdio2.h	CALL_200
0x4000224	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_200
0x4000227	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_200
0x400022a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_200
0x400022f	    0x488b3d000000	            mov rdi, qword [0x04000236] 	        97	stdio2.h	CALL_200
0x4000236	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_200
0x400023b	      0xe800000000	                          call 0x4000240	        97	stdio2.h	CALL_200
0x4000240	            0xeb46	                           jmp 0x4000288	        97	stdio2.h	CALL_200
0x4000242	    0x48c744242000	               mov qword [rsp + 0x20], 0	       333	clone.c	FUNCTION_6	ELSE_2
0x400024b	    0x48c744242800	               mov qword [rsp + 0x28], 0	       333	clone.c	FUNCTION_6	ELSE_2
0x4000254	    0x48c744243000	               mov qword [rsp + 0x30], 0	       333	clone.c	FUNCTION_6	ELSE_2
0x400025d	          0x4889c2	                            mov rdx, rax	       334	clone.c	FUNCTION_6	ELSE_2	CALL_4
0x4000260	      0xbe00000000	                              mov esi, 0	       334	clone.c	FUNCTION_6	ELSE_2	CALL_4
0x4000265	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       334	clone.c	FUNCTION_6	ELSE_2	CALL_4
0x400026a	      0xb800000000	                              mov eax, 0	       334	clone.c	FUNCTION_6	ELSE_2	CALL_4
0x400026f	      0xe800000000	                          call 0x4000274	       334	clone.c	FUNCTION_6	ELSE_2	CALL_4
0x4000274	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       335	clone.c	FUNCTION_6	ELSE_2	CALL_5
0x4000279	      0xe800000000	                          call 0x400027e	       335	clone.c	FUNCTION_6	ELSE_2	CALL_5
0x400027e	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       336	clone.c	FUNCTION_6	ELSE_2	CALL_6
0x4000283	      0xe800000000	                          call 0x4000288	       336	clone.c	FUNCTION_6	ELSE_2	CALL_6
0x4000288	          0x4889e7	                            mov rdi, rsp	       339	clone.c	FUNCTION_6	CALL_7
0x400028b	      0xe800000000	                          call 0x4000290	       339	clone.c	FUNCTION_6	CALL_7
0x4000290	          0x4889df	                            mov rdi, rbx	       340	clone.c	FUNCTION_6	CALL_8
0x4000293	      0xe800000000	                          call 0x4000298	       340	clone.c	FUNCTION_6	CALL_8
0x4000298	      0xb800000000	                              mov eax, 0	       342	clone.c	FUNCTION_6
0x400029d	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       342	clone.c	FUNCTION_6
0x40002a2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       342	clone.c	FUNCTION_6
0x40002ab	            0x7405	                            je 0x40002b2	       342	clone.c	FUNCTION_6
0x40002ad	      0xe800000000	                          call 0x40002b2	       342	clone.c	FUNCTION_6
0x40002b2	        0x4883c440	                           add rsp, 0x40	       342	clone.c	FUNCTION_6
0x40002b6	              0x5b	                                 pop rbx	       342	clone.c	FUNCTION_6
0x40002b7	              0x5d	                                 pop rbp	       342	clone.c	FUNCTION_6
0x40002b8	            0x415c	                                 pop r12	       342	clone.c	FUNCTION_6
0x40002ba	              0xc3	                                     ret	       342	clone.c	FUNCTION_6
iterate_ref_map	WHILE,1:functions,0:ELSE,0:SWITCH,0:IF,1:DO,0:FOR,0:CALL,1	24
0x40002bb	          0x488b17	                    mov rdx, qword [rdi]	       628	clone.c	FUNCTION_17
0x40002be	      0xb8ffffffff	                     mov eax, 0xffffffff	       638	clone.c	FUNCTION_17	IF_1
0x40002c3	          0x4885d2	                           test rdx, rdx	       634	clone.c	FUNCTION_17	WHILE_1
0x40002c6	            0x743e	                            je 0x4000306	       634	clone.c	FUNCTION_17	WHILE_1
0x40002c8	      0x48837a6800	               cmp qword [rdx + 0x68], 0	       634	clone.c	FUNCTION_17	WHILE_1
0x40002cd	            0x7517	                           jne 0x40002e6	       634	clone.c	FUNCTION_17	WHILE_1
0x40002cf	          0x488b12	                    mov rdx, qword [rdx]	       635	clone.c	FUNCTION_17	WHILE_1
0x40002d2	          0x4885d2	                           test rdx, rdx	       634	clone.c	FUNCTION_17	WHILE_1
0x40002d5	            0x7409	                            je 0x40002e0	       634	clone.c	FUNCTION_17	WHILE_1
0x40002d7	      0x48837a6800	               cmp qword [rdx + 0x68], 0	       634	clone.c	FUNCTION_17	WHILE_1
0x40002dc	            0x74f1	                            je 0x40002cf	       634	clone.c	FUNCTION_17	WHILE_1
0x40002de	            0xeb06	                           jmp 0x40002e6	       634	clone.c	FUNCTION_17	WHILE_1
0x40002e0	      0xb8ffffffff	                     mov eax, 0xffffffff	       638	clone.c	FUNCTION_17	IF_1
0x40002e5	              0xc3	                                     ret	       638	clone.c	FUNCTION_17	IF_1
0x40002e6	        0x488b4a08	                mov rcx, qword [rdx + 8]	        53	string3.h	FUNCTION_113	CALL_3
0x40002ea	          0x48890e	                    mov qword [rsi], rcx	        53	string3.h	FUNCTION_113	CALL_3
0x40002ed	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	        53	string3.h	FUNCTION_113	CALL_3
0x40002f1	        0x48894e08	                mov qword [rsi + 8], rcx	        53	string3.h	FUNCTION_113	CALL_3
0x40002f5	          0x8b4218	            mov eax, dword [rdx + 0x18] 	        53	string3.h	FUNCTION_113	CALL_3
0x40002f8	          0x894610	             mov dword [rsi + 0x10], eax	        53	string3.h	FUNCTION_113	CALL_3
0x40002fb	          0x488b02	                    mov rax, qword [rdx]	       641	clone.c	FUNCTION_17
0x40002fe	          0x488907	                    mov qword [rdi], rax	       641	clone.c	FUNCTION_17
0x4000301	      0xb800000000	                              mov eax, 0	       642	clone.c	FUNCTION_17
0x4000306	            0xf3c3	                                     ret	       643	clone.c	FUNCTION_17
remove_junk_on_signal	WHILE,0:functions,0:ELSE,0:SWITCH,0:IF,0:DO,0:FOR,0:CALL,3	9
0x4000cc1	              0x53	                                push rbx	       522	clone.c	FUNCTION_12
0x4000cc2	            0x89fb	                            mov ebx, edi	       522	clone.c	FUNCTION_12
0x4000cc4	      0xe8b6feffff	                    call sym.remove_junk	       523	clone.c	FUNCTION_12	CALL_1
0x4000cc9	            0x89df	                            mov edi, ebx	       524	clone.c	FUNCTION_12	CALL_2
0x4000ccb	      0xe800000000	                          call 0x4000cd0	       524	clone.c	FUNCTION_12	CALL_2
0x4000cd0	            0x89df	                            mov edi, ebx	       525	clone.c	FUNCTION_12	CALL_3
0x4000cd2	      0xe800000000	                          call 0x4000cd7	       525	clone.c	FUNCTION_12	CALL_3
0x4000cd7	              0x5b	                                 pop rbx	       526	clone.c	FUNCTION_12
0x4000cd8	              0xc3	                                     ret	       526	clone.c	FUNCTION_12
