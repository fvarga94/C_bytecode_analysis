progress_interval	IF,0:WHILE,0:functions,0:CALL,0:SWITCH,0:FOR,0:ELSE,0:DO,0	2
0x4000040	    0xc70500000000	               mov dword [0x0400004a], 1	        45	progress.c	FUNCTION_1
0x400004a	              0xc3	                                     ret	        45	progress.c	FUNCTION_1
display_progress	IF,0:WHILE,0:functions,0:CALL,1:SWITCH,0:FOR,0:ELSE,0:DO,0	7
0x4000520	          0x4885ff	                           test rdi, rdi	       193	progress.c	FUNCTION_8	CALL_1
0x4000523	            0x740b	                            je 0x4000530	       193	progress.c	FUNCTION_8	CALL_1
0x4000525	            0x31d2	                            xor edx, edx	       193	progress.c	FUNCTION_8	CALL_1
0x4000527	      0xe954fbffff	                         jmp sym.display	       193	progress.c	FUNCTION_8	CALL_1
0x400052c	         0xf1f4000	                         nop dword [rax]	       193	progress.c	FUNCTION_8	CALL_1
0x4000530	            0x31c0	                            xor eax, eax	       194	progress.c	FUNCTION_8
0x4000532	              0xc3	                                     ret	       194	progress.c	FUNCTION_8
start_progress	IF,0:WHILE,0:functions,0:CALL,1:SWITCH,0:FOR,0:ELSE,0:DO,0	2
0x4000550	            0x31d2	                            xor edx, edx	       224	progress.c	FUNCTION_11	CALL_1
0x4000552	      0xe9c9fcffff	            jmp sym.start_progress_delay	       224	progress.c	FUNCTION_11	CALL_1
start_delayed_progress	IF,0:WHILE,0:functions,0:CALL,1:SWITCH,0:FOR,0:ELSE,0:DO,0	2
0x4000540	      0xba02000000	                              mov edx, 2	       219	progress.c	FUNCTION_10	CALL_1
0x4000545	      0xe9d6fcffff	            jmp sym.start_progress_delay	       219	progress.c	FUNCTION_10	CALL_1
throughput_string	IF,0:WHILE,0:functions,0:CALL,6:SWITCH,0:FOR,0:ELSE,0:DO,0	41
0x4000360	            0x4154	                                push r12	       120	progress.c	FUNCTION_6
0x4000362	              0x55	                                push rbp	       120	progress.c	FUNCTION_6
0x4000363	          0x4989f4	                            mov r12, rsi	       120	progress.c	FUNCTION_6
0x4000366	              0x53	                                push rbx	       120	progress.c	FUNCTION_6
0x4000367	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       165	strbuf.h	FUNCTION_16	IF_2
0x400036b	          0x4889fb	                            mov rbx, rdi	       120	progress.c	FUNCTION_6
0x400036e	            0x89d5	                            mov ebp, edx	       120	progress.c	FUNCTION_6
0x4000370	    0x48c747080000	                  mov qword [rdi + 8], 0	       164	strbuf.h	FUNCTION_16
0x4000378	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_16	IF_2
0x400037e	            0x7458	                            je 0x40003d8	       165	strbuf.h	FUNCTION_16	IF_2
0x4000380	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_16	IF_2
0x4000383	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_18	CALL_2
0x4000388	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_18	CALL_2
0x400038b	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_18	CALL_2
0x4000390	      0xe800000000	                          call 0x4000395	       279	strbuf.h	FUNCTION_18	CALL_2
0x4000395	          0x4c89e6	                            mov rsi, r12	       123	progress.c	FUNCTION_6	CALL_3
0x4000398	          0x4889df	                            mov rdi, rbx	       123	progress.c	FUNCTION_6	CALL_3
0x400039b	          0xc1e50a	                            shl ebp, 0xa	       125	progress.c	FUNCTION_6	CALL_5
0x400039e	      0xe800000000	                          call 0x40003a3	       123	progress.c	FUNCTION_6	CALL_3
0x40003a3	      0xba03000000	                              mov edx, 3	       279	strbuf.h	FUNCTION_18	CALL_2
0x40003a8	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_18	CALL_2
0x40003ab	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_18	CALL_2
0x40003b0	      0xe800000000	                          call 0x40003b5	       279	strbuf.h	FUNCTION_18	CALL_2
0x40003b5	            0x89ee	                            mov esi, ebp	       125	progress.c	FUNCTION_6	CALL_5
0x40003b7	          0x4889df	                            mov rdi, rbx	       125	progress.c	FUNCTION_6	CALL_5
0x40003ba	      0xe800000000	                          call 0x40003bf	       125	progress.c	FUNCTION_6	CALL_5
0x40003bf	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_18	CALL_2
0x40003c2	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_18	CALL_2
0x40003c7	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_18	CALL_2
0x40003cc	              0x5b	                                 pop rbx	       127	progress.c	FUNCTION_6
0x40003cd	              0x5d	                                 pop rbp	       127	progress.c	FUNCTION_6
0x40003ce	            0x415c	                                 pop r12	       127	progress.c	FUNCTION_6
0x40003d0	      0xe900000000	                           jmp 0x40003d5	       279	strbuf.h	FUNCTION_18	CALL_2
0x40003d5	           0xf1f00	                         nop dword [rax]	       279	strbuf.h	FUNCTION_18	CALL_2
0x40003d8	    0x803d00000000	                cmp byte [0x040003df], 0	       168	strbuf.h	FUNCTION_16	CALL_2
0x40003df	            0x74a2	                            je 0x4000383	       168	strbuf.h	FUNCTION_16	CALL_2
0x40003e1	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_16	CALL_2
0x40003e6	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_16	CALL_2
0x40003eb	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_16	CALL_2
0x40003f0	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_16	CALL_2
0x40003f5	      0xe800000000	                          call 0x40003fa	       168	strbuf.h	FUNCTION_16	CALL_2
stop_progress	IF,0:WHILE,0:functions,0:CALL,2:SWITCH,0:FOR,0:ELSE,0:DO,0	10
0x40006a0	              0x53	                                push rbx	       228	progress.c	FUNCTION_12
0x40006a1	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_27	CALL_2
0x40006a6	          0x4889fb	                            mov rbx, rdi	       228	progress.c	FUNCTION_12
0x40006a9	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_27	CALL_2
0x40006ae	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_27	CALL_2
0x40006b0	      0xe800000000	                          call 0x40006b5	        54	gettext.h	FUNCTION_27	CALL_2
0x40006b5	          0x4889df	                            mov rdi, rbx	       229	progress.c	FUNCTION_12	CALL_2
0x40006b8	          0x4889c6	                            mov rsi, rax	       229	progress.c	FUNCTION_12	CALL_2
0x40006bb	              0x5b	                                 pop rbx	       230	progress.c	FUNCTION_12
0x40006bc	      0xe99ffeffff	               jmp sym.stop_progress_msg	       229	progress.c	FUNCTION_12	CALL_2
is_foreground_fd	IF,0:WHILE,0:functions,0:CALL,2:SWITCH,0:FOR,0:ELSE,0:DO,0	13
0x4000050	              0x53	                                push rbx	        76	progress.c	FUNCTION_4
0x4000051	      0xe800000000	                          call 0x4000056	        77	progress.c	FUNCTION_4	CALL_1
0x4000056	            0x89c3	                            mov ebx, eax	        77	progress.c	FUNCTION_4	CALL_1
0x4000058	      0xb801000000	                              mov eax, 1	        77	progress.c	FUNCTION_4	CALL_1
0x400005d	            0x85db	                           test ebx, ebx	        78	progress.c	FUNCTION_4	CALL_2
0x400005f	            0x780f	                            js 0x4000070	        78	progress.c	FUNCTION_4	CALL_2
0x4000061	            0x31ff	                            xor edi, edi	        78	progress.c	FUNCTION_4	CALL_2
0x4000063	      0xe800000000	                          call 0x4000068	        78	progress.c	FUNCTION_4	CALL_2
0x4000068	            0x39c3	                            cmp ebx, eax	        78	progress.c	FUNCTION_4	CALL_2
0x400006a	           0xf94c0	                                 sete al	        78	progress.c	FUNCTION_4	CALL_2
0x400006d	           0xfb6c0	                           movzx eax, al	        78	progress.c	FUNCTION_4	CALL_2
0x4000070	              0x5b	                                 pop rbx	        79	progress.c	FUNCTION_4
0x4000071	              0xc3	                                     ret	        79	progress.c	FUNCTION_4
stop_progress_msg	IF,4:WHILE,0:functions,0:CALL,9:SWITCH,0:FOR,0:ELSE,0:DO,0	73
0x4000560	            0x4154	                                push r12	       233	progress.c	FUNCTION_13
0x4000562	              0x55	                                push rbp	       233	progress.c	FUNCTION_13
0x4000563	              0x53	                                push rbx	       233	progress.c	FUNCTION_13
0x4000564	        0x4883ec30	                           sub rsp, 0x30	       233	progress.c	FUNCTION_13
0x4000568	          0x488b1f	                    mov rbx, qword [rdi]	       234	progress.c	FUNCTION_13
0x400056b	    0x64488b042528	                mov rax, qword fs:[0x28]	       233	progress.c	FUNCTION_13
0x4000574	      0x4889442428	             mov qword [rsp + 0x28], rax	       233	progress.c	FUNCTION_13
0x4000579	            0x31c0	                            xor eax, eax	       233	progress.c	FUNCTION_13
0x400057b	          0x4885db	                           test rbx, rbx	       235	progress.c	FUNCTION_13	IF_1
0x400057e	     0xf84ef000000	                            je 0x4000673	       235	progress.c	FUNCTION_13	IF_1
0x4000584	      0x48837b08ff	 cmp qword [rbx + 8], 0xffffffffffffffff	       238	progress.c	FUNCTION_13	IF_2
0x4000589	    0x48c707000000	                      mov qword [rdi], 0	       237	progress.c	FUNCTION_13
0x4000590	            0x7476	                            je 0x4000608	       238	progress.c	FUNCTION_13	IF_2
0x4000592	        0x488b6b20	            mov rbp, qword [rbx + 0x20] 	       241	progress.c	FUNCTION_13	IF_2
0x4000596	          0x4989f4	                            mov r12, rsi	       241	progress.c	FUNCTION_13	IF_2
0x4000599	          0x4885ed	                           test rbp, rbp	       243	progress.c	FUNCTION_13	IF_2	IF_3
0x400059c	            0x7437	                            je 0x40005d5	       243	progress.c	FUNCTION_13	IF_2	IF_3
0x400059e	      0xe800000000	                          call 0x40005a3	       244	progress.c	FUNCTION_13	IF_2	IF_3	CALL_1
0x40005a3	        0x482b4328	             sub rax, qword [rbx + 0x28]	       246	progress.c	FUNCTION_13	IF_2	IF_3
0x40005a7	        0x488b7500	                    mov rsi, qword [rbp]	       247	progress.c	FUNCTION_13	IF_2	IF_3
0x40005ab	        0x488d7d68	                   lea rdi, [rbp + 0x68]	       248	progress.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x40005af	    0x4869c82e1100	                   imul rcx, rax, 0x112e	       246	progress.c	FUNCTION_13	IF_2	IF_3
0x40005b6	      0xb801000000	                              mov eax, 1	       247	progress.c	FUNCTION_13	IF_2	IF_3
0x40005bb	        0x48c1e920	                           shr rcx, 0x20	       246	progress.c	FUNCTION_13	IF_2	IF_3
0x40005bf	          0x4885c9	                           test rcx, rcx	       247	progress.c	FUNCTION_13	IF_2	IF_3
0x40005c2	        0x480f44c8	                          cmove rcx, rax	       247	progress.c	FUNCTION_13	IF_2	IF_3
0x40005c6	          0x4889f0	                            mov rax, rsi	       248	progress.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x40005c9	            0x4899	                                     cqo	       248	progress.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x40005cb	          0x48f7f9	                                idiv rcx	       248	progress.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x40005ce	            0x89c2	                            mov edx, eax	       248	progress.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x40005d0	      0xe88bfdffff	              call sym.throughput_string	       248	progress.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x40005d5	          0x4c89e6	                            mov rsi, r12	       251	progress.c	FUNCTION_13	IF_2	CALL_3
0x40005d8	      0xbf00000000	                              mov edi, 0	       251	progress.c	FUNCTION_13	IF_2	CALL_3
0x40005dd	            0x31c0	                            xor eax, eax	       251	progress.c	FUNCTION_13	IF_2	CALL_3
0x40005df	    0xc70500000000	               mov dword [0x040005e9], 1	       250	progress.c	FUNCTION_13	IF_2
0x40005e9	      0xe800000000	                          call 0x40005ee	       251	progress.c	FUNCTION_13	IF_2	CALL_3
0x40005ee	        0x488b7308	                mov rsi, qword [rbx + 8]	       252	progress.c	FUNCTION_13	IF_2	CALL_4
0x40005f2	          0x4889c5	                            mov rbp, rax	       251	progress.c	FUNCTION_13	IF_2	CALL_3
0x40005f5	          0x4889df	                            mov rdi, rbx	       252	progress.c	FUNCTION_13	IF_2	CALL_4
0x40005f8	          0x4889c2	                            mov rdx, rax	       252	progress.c	FUNCTION_13	IF_2	CALL_4
0x40005fb	      0xe880faffff	                        call sym.display	       252	progress.c	FUNCTION_13	IF_2	CALL_4
0x4000600	          0x4889ef	                            mov rdi, rbp	       253	progress.c	FUNCTION_13	IF_2	CALL_5
0x4000603	      0xe800000000	                          call 0x4000608	       253	progress.c	FUNCTION_13	IF_2	CALL_5
0x4000608	            0x31d2	                            xor edx, edx	        70	progress.c	FUNCTION_3	CALL_1
0x400060a	            0x31ff	                            xor edi, edi	        70	progress.c	FUNCTION_3	CALL_1
0x400060c	          0x4889e6	                            mov rsi, rsp	        70	progress.c	FUNCTION_3	CALL_1
0x400060f	    0x48c704240000	                      mov qword [rsp], 0	        69	progress.c	FUNCTION_3
0x4000617	    0x48c744240800	                  mov qword [rsp + 8], 0	        69	progress.c	FUNCTION_3
0x4000620	    0x48c744241000	               mov qword [rsp + 0x10], 0	        69	progress.c	FUNCTION_3
0x4000629	    0x48c744241800	               mov qword [rsp + 0x18], 0	        69	progress.c	FUNCTION_3
0x4000632	      0xe800000000	                          call 0x4000637	        70	progress.c	FUNCTION_3	CALL_1
0x4000637	      0xbf0e000000	                            mov edi, 0xe	        71	progress.c	FUNCTION_3	CALL_2
0x400063c	      0xbe01000000	                              mov esi, 1	        71	progress.c	FUNCTION_3	CALL_2
0x4000641	      0xe800000000	                          call 0x4000646	        71	progress.c	FUNCTION_3	CALL_2
0x4000646	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       256	progress.c	FUNCTION_13	IF_4
0x400064a	    0xc70500000000	               mov dword [0x04000654], 0	        72	progress.c	FUNCTION_3
0x4000654	          0x4885ff	                           test rdi, rdi	       256	progress.c	FUNCTION_13	IF_4
0x4000657	            0x740d	                            je 0x4000666	       256	progress.c	FUNCTION_13	IF_4
0x4000659	        0x4883c768	                           add rdi, 0x68	       257	progress.c	FUNCTION_13	CALL_7
0x400065d	      0xe800000000	                          call 0x4000662	       257	progress.c	FUNCTION_13	CALL_7
0x4000662	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       257	progress.c	FUNCTION_13	CALL_7
0x4000666	      0xe800000000	                          call 0x400066b	       258	progress.c	FUNCTION_13	CALL_8
0x400066b	          0x4889df	                            mov rdi, rbx	       259	progress.c	FUNCTION_13	CALL_9
0x400066e	      0xe800000000	                          call 0x4000673	       259	progress.c	FUNCTION_13	CALL_9
0x4000673	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       260	progress.c	FUNCTION_13
0x4000678	    0x644833042528	                xor rax, qword fs:[0x28]	       260	progress.c	FUNCTION_13
0x4000681	            0x7509	                           jne 0x400068c	       260	progress.c	FUNCTION_13
0x4000683	        0x4883c430	                           add rsp, 0x30	       260	progress.c	FUNCTION_13
0x4000687	              0x5b	                                 pop rbx	       260	progress.c	FUNCTION_13
0x4000688	              0x5d	                                 pop rbp	       260	progress.c	FUNCTION_13
0x4000689	            0x415c	                                 pop r12	       260	progress.c	FUNCTION_13
0x400068b	              0xc3	                                     ret	       260	progress.c	FUNCTION_13
0x400068c	      0xe800000000	                          call 0x4000691	       260	progress.c	FUNCTION_13
display_throughput	IF,5:WHILE,0:functions,0:CALL,5:SWITCH,0:FOR,0:ELSE,0:DO,0	87
0x4000400	          0x4885ff	                           test rdi, rdi	       135	progress.c	FUNCTION_7	IF_1
0x4000403	            0x743e	                            je 0x4000443	       135	progress.c	FUNCTION_7	IF_1
0x4000405	            0x4155	                                push r13	       130	progress.c	FUNCTION_7
0x4000407	            0x4154	                                push r12	       130	progress.c	FUNCTION_7
0x4000409	          0x4989f4	                            mov r12, rsi	       130	progress.c	FUNCTION_7
0x400040c	              0x55	                                push rbp	       130	progress.c	FUNCTION_7
0x400040d	              0x53	                                push rbx	       130	progress.c	FUNCTION_7
0x400040e	          0x4889fd	                            mov rbp, rdi	       130	progress.c	FUNCTION_7
0x4000411	        0x4883ec08	                              sub rsp, 8	       130	progress.c	FUNCTION_7
0x4000415	        0x488b5f20	            mov rbx, qword [rdi + 0x20] 	       137	progress.c	FUNCTION_7
0x4000419	      0xe800000000	                          call 0x400041e	       139	progress.c	FUNCTION_7	CALL_1
0x400041e	          0x4989c5	                            mov r13, rax	       139	progress.c	FUNCTION_7	CALL_1
0x4000421	          0x4885db	                           test rbx, rbx	       141	progress.c	FUNCTION_7	IF_2
0x4000424	     0xf84b6000000	                            je 0x40004e0	       141	progress.c	FUNCTION_7	IF_2
0x400042a	        0x482b4310	             sub rax, qword [rbx + 0x10]	       153	progress.c	FUNCTION_7	IF_4
0x400042e	          0x4c8923	                    mov qword [rbx], r12	       150	progress.c	FUNCTION_7
0x4000431	    0x483d0065cd1d	                     cmp rax, 0x1dcd6500	       153	progress.c	FUNCTION_7	IF_4
0x4000437	            0x770f	                            ja 0x4000448	       153	progress.c	FUNCTION_7	IF_4
0x4000439	        0x4883c408	                              add rsp, 8	       189	progress.c	FUNCTION_7
0x400043d	              0x5b	                                 pop rbx	       189	progress.c	FUNCTION_7
0x400043e	              0x5d	                                 pop rbp	       189	progress.c	FUNCTION_7
0x400043f	            0x415c	                                 pop r12	       189	progress.c	FUNCTION_7
0x4000441	            0x415d	                                 pop r13	       189	progress.c	FUNCTION_7
0x4000443	            0xf3c3	                                     ret	       189	progress.c	FUNCTION_7
0x4000445	           0xf1f00	                         nop dword [rax]	       189	progress.c	FUNCTION_7
0x4000448	          0x8b5360	            mov edx, dword [rbx + 0x60] 	       180	progress.c	FUNCTION_7
0x400044b	          0x4589e0	                           mov r8d, r12d	       174	progress.c	FUNCTION_7
0x400044e	        0x442b4308	                sub r8d, dword [rbx + 8]	       174	progress.c	FUNCTION_7
0x4000452	    0x4869c82e1100	                   imul rcx, rax, 0x112e	       172	progress.c	FUNCTION_7
0x4000459	          0x8b4318	            mov eax, dword [rbx + 0x18] 	       177	progress.c	FUNCTION_7
0x400045c	        0x4c896308	                mov qword [rbx + 8], r12	       175	progress.c	FUNCTION_7
0x4000460	        0x4c896b10	             mov qword [rbx + 0x10], r13	       176	progress.c	FUNCTION_7
0x4000464	          0x8b7b1c	            mov edi, dword [rbx + 0x1c] 	       178	progress.c	FUNCTION_7
0x4000467	          0x4889d6	                            mov rsi, rdx	       180	progress.c	FUNCTION_7
0x400046a	        0x488d1493	                  lea rdx, [rbx + rdx*4]	       180	progress.c	FUNCTION_7
0x400046e	          0x4401c0	                            add eax, r8d	       177	progress.c	FUNCTION_7
0x4000471	          0x4189c1	                            mov r9d, eax	       180	progress.c	FUNCTION_7
0x4000474	        0x48c1e920	                           shr rcx, 0x20	       172	progress.c	FUNCTION_7
0x4000478	          0x83c601	                              add esi, 1	       184	progress.c	FUNCTION_7
0x400047b	        0x442b4a20	             sub r9d, dword [rdx + 0x20]	       180	progress.c	FUNCTION_7
0x400047f	             0x1cf	                            add edi, ecx	       178	progress.c	FUNCTION_7
0x4000481	          0x83e607	                              and esi, 7	       184	progress.c	FUNCTION_7
0x4000484	        0x44894b18	             mov dword [rbx + 0x18], r9d	       180	progress.c	FUNCTION_7
0x4000488	          0x4189f9	                            mov r9d, edi	       181	progress.c	FUNCTION_7
0x400048b	        0x442b4a40	             sub r9d, dword [rdx + 0x40]	       181	progress.c	FUNCTION_7
0x400048f	        0x44894b1c	             mov dword [rbx + 0x1c], r9d	       181	progress.c	FUNCTION_7
0x4000493	        0x44894220	             mov dword [rdx + 0x20], r8d	       182	progress.c	FUNCTION_7
0x4000497	          0x894a40	             mov dword [rdx + 0x40], ecx	       183	progress.c	FUNCTION_7
0x400049a	            0x31d2	                            xor edx, edx	       186	progress.c	FUNCTION_7	CALL_4
0x400049c	          0x897360	             mov dword [rbx + 0x60], esi	       184	progress.c	FUNCTION_7
0x400049f	            0xf7f7	                                 div edi	       186	progress.c	FUNCTION_7	CALL_4
0x40004a1	        0x488d7b68	                   lea rdi, [rbx + 0x68]	       186	progress.c	FUNCTION_7	CALL_4
0x40004a5	          0x4c89e6	                            mov rsi, r12	       186	progress.c	FUNCTION_7	CALL_4
0x40004a8	            0x89c2	                            mov edx, eax	       186	progress.c	FUNCTION_7	CALL_4
0x40004aa	      0xe8b1feffff	              call sym.throughput_string	       186	progress.c	FUNCTION_7	CALL_4
0x40004af	        0x488b7508	                mov rsi, qword [rbp + 8]	       187	progress.c	FUNCTION_7	IF_5
0x40004b3	        0x4883feff	             cmp rsi, 0xffffffffffffffff	       187	progress.c	FUNCTION_7	IF_5
0x40004b7	            0x7480	                            je 0x4000439	       187	progress.c	FUNCTION_7	IF_5
0x40004b9	    0x8b0500000000	            mov eax, dword [0x040004bf] 	       187	progress.c	FUNCTION_7	IF_5
0x40004bf	            0x85c0	                           test eax, eax	       187	progress.c	FUNCTION_7	IF_5
0x40004c1	     0xf8472ffffff	                            je 0x4000439	       187	progress.c	FUNCTION_7	IF_5
0x40004c7	        0x4883c408	                              add rsp, 8	       189	progress.c	FUNCTION_7
0x40004cb	          0x4889ef	                            mov rdi, rbp	       188	progress.c	FUNCTION_7	CALL_5
0x40004ce	            0x31d2	                            xor edx, edx	       188	progress.c	FUNCTION_7	CALL_5
0x40004d0	              0x5b	                                 pop rbx	       189	progress.c	FUNCTION_7
0x40004d1	              0x5d	                                 pop rbp	       189	progress.c	FUNCTION_7
0x40004d2	            0x415c	                                 pop r12	       189	progress.c	FUNCTION_7
0x40004d4	            0x415d	                                 pop r13	       189	progress.c	FUNCTION_7
0x40004d6	      0xe9a5fbffff	                         jmp sym.display	       188	progress.c	FUNCTION_7	CALL_5
0x40004db	       0xf1f440000	                   nop dword [rax + rax]	       188	progress.c	FUNCTION_7	CALL_5
0x40004e0	      0xbe80000000	                           mov esi, 0x80	       142	progress.c	FUNCTION_7	IF_2	CALL_2
0x40004e5	      0xbf01000000	                              mov edi, 1	       142	progress.c	FUNCTION_7	IF_2	CALL_2
0x40004ea	      0xe800000000	                          call 0x40004ef	       142	progress.c	FUNCTION_7	IF_2	CALL_2
0x40004ef	          0x4885c0	                           test rax, rax	       143	progress.c	FUNCTION_7	IF_2	IF_3
0x40004f2	        0x48894520	            mov qword [rbp + 0x20], rax 	       142	progress.c	FUNCTION_7	IF_2	CALL_2
0x40004f6	     0xf843dffffff	                            je 0x4000439	       143	progress.c	FUNCTION_7	IF_2	IF_3
0x40004fc	          0x4c8920	                    mov qword [rax], r12	       144	progress.c	FUNCTION_7	IF_2	IF_3
0x40004ff	        0x4c896008	                mov qword [rax + 8], r12	       144	progress.c	FUNCTION_7	IF_2	IF_3
0x4000503	        0x488d7868	                   lea rdi, [rax + 0x68]	       146	progress.c	FUNCTION_7	IF_2	IF_3	CALL_3
0x4000507	        0x4c896810	             mov qword [rax + 0x10], r13	       145	progress.c	FUNCTION_7	IF_2	IF_3
0x400050b	        0x4883c408	                              add rsp, 8	       189	progress.c	FUNCTION_7
0x400050f	            0x31f6	                            xor esi, esi	       146	progress.c	FUNCTION_7	IF_2	IF_3	CALL_3
0x4000511	              0x5b	                                 pop rbx	       189	progress.c	FUNCTION_7
0x4000512	              0x5d	                                 pop rbp	       189	progress.c	FUNCTION_7
0x4000513	            0x415c	                                 pop r12	       189	progress.c	FUNCTION_7
0x4000515	            0x415d	                                 pop r13	       189	progress.c	FUNCTION_7
0x4000517	      0xe900000000	                           jmp 0x400051c	       146	progress.c	FUNCTION_7	IF_2	IF_3	CALL_3
