do_generic_cmd	DO,0:WHILE,0:FOR,0:functions,0:ELSE,0:IF,2:CALL,6:SWITCH,0	42
0x4000040	              0x55	                                push rbp	        12	shell.c	FUNCTION_1
0x4000041	              0x53	                                push rbx	        12	shell.c	FUNCTION_1
0x4000042	          0x4889f5	                            mov rbp, rsi	        12	shell.c	FUNCTION_1
0x4000045	          0x4889fb	                            mov rbx, rdi	        12	shell.c	FUNCTION_1
0x4000048	        0x4883ec38	                           sub rsp, 0x38	        12	shell.c	FUNCTION_1
0x400004c	    0x64488b042528	                mov rax, qword fs:[0x28]	        12	shell.c	FUNCTION_1
0x4000055	      0x4889442428	             mov qword [rsp + 0x28], rax	        12	shell.c	FUNCTION_1
0x400005a	            0x31c0	                            xor eax, eax	        12	shell.c	FUNCTION_1
0x400005c	      0xe800000000	                          call 0x4000061	        15	shell.c	FUNCTION_1	CALL_1
0x4000061	          0x4885ed	                           test rbp, rbp	        16	shell.c	FUNCTION_1	IF_1	CALL_2
0x4000064	            0x745b	                            je 0x40000c1	        16	shell.c	FUNCTION_1	IF_1	CALL_2
0x4000066	          0x4889ef	                            mov rdi, rbp	        16	shell.c	FUNCTION_1	IF_1	CALL_2
0x4000069	      0xe800000000	                          call 0x400006e	        16	shell.c	FUNCTION_1	IF_1	CALL_2
0x400006e	          0x4885c0	                           test rax, rax	        16	shell.c	FUNCTION_1	IF_1	CALL_2
0x4000071	          0x4889c5	                            mov rbp, rax	        16	shell.c	FUNCTION_1	IF_1	CALL_2
0x4000074	            0x744b	                            je 0x40000c1	        16	shell.c	FUNCTION_1	IF_1	CALL_2
0x4000076	          0x80382d	                    cmp byte [rax], 0x2d	        16	shell.c	FUNCTION_1	IF_1	CALL_2
0x4000079	            0x7446	                            je 0x40000c1	        16	shell.c	FUNCTION_1	IF_1	CALL_2
0x400007b	      0xbe00000000	                              mov esi, 0	        18	shell.c	FUNCTION_1	IF_2	CALL_4
0x4000080	          0x4889df	                            mov rdi, rbx	        18	shell.c	FUNCTION_1	IF_2	CALL_4
0x4000083	      0xe800000000	                          call 0x4000088	        18	shell.c	FUNCTION_1	IF_2	CALL_4
0x4000088	            0x85c0	                           test eax, eax	        18	shell.c	FUNCTION_1	IF_2	CALL_4
0x400008a	            0x7446	                            je 0x40000d2	        18	shell.c	FUNCTION_1	IF_2	CALL_4
0x400008c	        0x4883c304	                              add rbx, 4	        21	shell.c	FUNCTION_1
0x4000090	          0x4889e7	                            mov rdi, rsp	        25	shell.c	FUNCTION_1	CALL_6
0x4000093	      0x48896c2408	                mov qword [rsp + 8], rbp	        22	shell.c	FUNCTION_1
0x4000098	        0x48891c24	                    mov qword [rsp], rbx	        21	shell.c	FUNCTION_1
0x400009c	    0x48c744241000	               mov qword [rsp + 0x10], 0	        23	shell.c	FUNCTION_1
0x40000a5	      0xe800000000	                          call 0x40000aa	        25	shell.c	FUNCTION_1	CALL_6
0x40000aa	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	        26	shell.c	FUNCTION_1
0x40000af	    0x644833142528	                xor rdx, qword fs:[0x28]	        26	shell.c	FUNCTION_1
0x40000b8	            0x7513	                           jne 0x40000cd	        26	shell.c	FUNCTION_1
0x40000ba	        0x4883c438	                           add rsp, 0x38	        26	shell.c	FUNCTION_1
0x40000be	              0x5b	                                 pop rbx	        26	shell.c	FUNCTION_1
0x40000bf	              0x5d	                                 pop rbp	        26	shell.c	FUNCTION_1
0x40000c0	              0xc3	                                     ret	        26	shell.c	FUNCTION_1
0x40000c1	      0xbf00000000	                              mov edi, 0	        17	shell.c	FUNCTION_1	CALL_3
0x40000c6	            0x31c0	                            xor eax, eax	        17	shell.c	FUNCTION_1	CALL_3
0x40000c8	      0xe800000000	                          call 0x40000cd	        17	shell.c	FUNCTION_1	CALL_3
0x40000cd	      0xe800000000	                          call 0x40000d2	        26	shell.c	FUNCTION_1
0x40000d2	      0xbf00000000	                              mov edi, 0	        19	shell.c	FUNCTION_1	CALL_5
0x40000d7	      0xe800000000	                          call 0x40000dc	        19	shell.c	FUNCTION_1	CALL_5
cd_to_homedir	DO,0:WHILE,0:FOR,0:functions,0:ELSE,0:IF,2:CALL,4:SWITCH,0	16
0x40000e0	        0x4883ec08	                              sub rsp, 8	        40	shell.c	FUNCTION_4
0x40000e4	      0xbf00000000	                              mov edi, 0	        41	shell.c	FUNCTION_4	CALL_1
0x40000e9	      0xe800000000	                          call 0x40000ee	        41	shell.c	FUNCTION_4	CALL_1
0x40000ee	          0x4885c0	                           test rax, rax	        42	shell.c	FUNCTION_4	IF_1
0x40000f1	            0x7412	                            je 0x4000105	        42	shell.c	FUNCTION_4	IF_1
0x40000f3	          0x4889c7	                            mov rdi, rax	        44	shell.c	FUNCTION_4	IF_2	CALL_3
0x40000f6	      0xe800000000	                          call 0x40000fb	        44	shell.c	FUNCTION_4	IF_2	CALL_3
0x40000fb	          0x83f8ff	             cmp eax, 0xffffffffffffffff	        44	shell.c	FUNCTION_4	IF_2	CALL_3
0x40000fe	            0x740f	                            je 0x400010f	        44	shell.c	FUNCTION_4	IF_2	CALL_3
0x4000100	        0x4883c408	                              add rsp, 8	        46	shell.c	FUNCTION_4
0x4000104	              0xc3	                                     ret	        46	shell.c	FUNCTION_4
0x4000105	      0xbf00000000	                              mov edi, 0	        43	shell.c	FUNCTION_4	CALL_2
0x400010a	      0xe800000000	                          call 0x400010f	        43	shell.c	FUNCTION_4	CALL_2
0x400010f	      0xbf00000000	                              mov edi, 0	        45	shell.c	FUNCTION_4	CALL_4
0x4000114	            0x31c0	                            xor eax, eax	        45	shell.c	FUNCTION_4	CALL_4
0x4000116	      0xe800000000	                          call 0x400011b	        45	shell.c	FUNCTION_4	CALL_4
cmd_main	DO,0:WHILE,0:FOR,1:functions,0:ELSE,3:IF,8:CALL,26:SWITCH,1	277
0x4000120	            0x4156	                                push r14	       128	shell.c	FUNCTION_6
0x4000122	            0x4155	                                push r13	       128	shell.c	FUNCTION_6
0x4000124	          0x4989f5	                            mov r13, rsi	       128	shell.c	FUNCTION_6
0x4000127	            0x4154	                                push r12	       128	shell.c	FUNCTION_6
0x4000129	              0x55	                                push rbp	       128	shell.c	FUNCTION_6
0x400012a	              0x53	                                push rbx	       128	shell.c	FUNCTION_6
0x400012b	        0x4883ec60	                           sub rsp, 0x60	       128	shell.c	FUNCTION_6
0x400012f	    0x64488b042528	                mov rax, qword fs:[0x28]	       128	shell.c	FUNCTION_6
0x4000138	      0x4889442458	             mov qword [rsp + 0x58], rax	       128	shell.c	FUNCTION_6
0x400013d	            0x31c0	                            xor eax, eax	       128	shell.c	FUNCTION_6
0x400013f	          0x83ff02	                              cmp edi, 2	       137	shell.c	FUNCTION_6	IF_1	CALL_1
0x4000142	     0xf84bd000000	                            je 0x4000205	       137	shell.c	FUNCTION_6	IF_1	CALL_1
0x4000148	          0x83ff01	                              cmp edi, 1	       139	shell.c	FUNCTION_6	ELSE_1	IF_2
0x400014b	     0xf8476010000	                            je 0x40002c7	       139	shell.c	FUNCTION_6	ELSE_1	IF_2
0x4000151	          0x83ff03	                              cmp edi, 3	       149	shell.c	FUNCTION_6	ELSE_2	IF_4	CALL_7
0x4000154	     0xf85bd000000	                           jne 0x4000217	       149	shell.c	FUNCTION_6	ELSE_2	IF_4	CALL_7
0x400015a	        0x488b4608	                mov rax, qword [rsi + 8]	       149	shell.c	FUNCTION_6	ELSE_2	IF_4	CALL_7
0x400015e	          0x80382d	                    cmp byte [rax], 0x2d	       149	shell.c	FUNCTION_6	ELSE_2	IF_4	CALL_7
0x4000161	     0xf85b0000000	                           jne 0x4000217	       149	shell.c	FUNCTION_6	ELSE_2	IF_4	CALL_7
0x4000167	        0x80780163	                cmp byte [rax + 1], 0x63	       149	shell.c	FUNCTION_6	ELSE_2	IF_4	CALL_7
0x400016b	     0xf85a6000000	                           jne 0x4000217	       149	shell.c	FUNCTION_6	ELSE_2	IF_4	CALL_7
0x4000171	        0x80780200	                   cmp byte [rax + 2], 0	       149	shell.c	FUNCTION_6	ELSE_2	IF_4	CALL_7
0x4000175	     0xf859c000000	                           jne 0x4000217	       149	shell.c	FUNCTION_6	ELSE_2	IF_4	CALL_7
0x400017b	        0x498b7d10	            mov rdi, qword [r13 + 0x10] 	       158	shell.c	FUNCTION_6	CALL_9
0x400017f	      0xe800000000	                          call 0x4000184	       158	shell.c	FUNCTION_6	CALL_9
0x4000184	      0xba03000000	                              mov edx, 3	       159	shell.c	FUNCTION_6	IF_5	CALL_11
0x4000189	      0xbe00000000	                              mov esi, 0	       159	shell.c	FUNCTION_6	IF_5	CALL_11
0x400018e	          0x4889c7	                            mov rdi, rax	       159	shell.c	FUNCTION_6	IF_5	CALL_11
0x4000191	          0x4989c4	                            mov r12, rax	       158	shell.c	FUNCTION_6	CALL_9
0x4000194	      0xe800000000	                          call 0x4000199	       159	shell.c	FUNCTION_6	IF_5	CALL_11
0x4000199	            0x85c0	                           test eax, eax	       159	shell.c	FUNCTION_6	IF_5	CALL_11
0x400019b	            0x7515	                           jne 0x40001b2	       159	shell.c	FUNCTION_6	IF_5	CALL_11
0x400019d	    0x410fb6442403	               movzx eax, byte [r12 + 3]	       159	shell.c	FUNCTION_6	IF_5	CALL_11
0x40001a3	    0xf68000000000	                      test byte [rax], 1	       159	shell.c	FUNCTION_6	IF_5	CALL_11
0x40001aa	            0x7406	                            je 0x40001b2	       159	shell.c	FUNCTION_6	IF_5	CALL_11
0x40001ac	    0x41c64424032d	                mov byte [r12 + 3], 0x2d	       161	shell.c	FUNCTION_6	IF_5
0x40001b2	    0x488b2d000000	            mov rbp, qword [0x040001b9] 	       163	shell.c	FUNCTION_6	FOR_1
0x40001b9	          0x4885ed	                           test rbp, rbp	       163	shell.c	FUNCTION_6	FOR_1
0x40001bc	            0x747a	                            je 0x4000238	       163	shell.c	FUNCTION_6	FOR_1
0x40001be	    0x41be00000000	                             mov r14d, 0	       163	shell.c	FUNCTION_6	FOR_1
0x40001c4	          0x4889ef	                            mov rdi, rbp	       164	shell.c	FUNCTION_6	FOR_1	CALL_12
0x40001c7	      0xe800000000	                          call 0x40001cc	       164	shell.c	FUNCTION_6	FOR_1	CALL_12
0x40001cc	          0x4863d8	                         movsxd rbx, eax	       166	shell.c	FUNCTION_6	FOR_1	IF_6	CALL_13
0x40001cf	          0x4c89e6	                            mov rsi, r12	       166	shell.c	FUNCTION_6	FOR_1	IF_6	CALL_13
0x40001d2	          0x4889ef	                            mov rdi, rbp	       166	shell.c	FUNCTION_6	FOR_1	IF_6	CALL_13
0x40001d5	          0x4889da	                            mov rdx, rbx	       166	shell.c	FUNCTION_6	FOR_1	IF_6	CALL_13
0x40001d8	      0xe800000000	                          call 0x40001dd	       166	shell.c	FUNCTION_6	FOR_1	IF_6	CALL_13
0x40001dd	            0x85c0	                           test eax, eax	       166	shell.c	FUNCTION_6	FOR_1	IF_6	CALL_13
0x40001df	            0x754b	                           jne 0x400022c	       166	shell.c	FUNCTION_6	FOR_1	IF_6	CALL_13
0x40001e1	      0x410fb6041c	             movzx eax, byte [r12 + rbx]	       169	shell.c	FUNCTION_6	FOR_1	SWITCH_1
0x40001e6	            0x84c0	                             test al, al	       169	shell.c	FUNCTION_6	FOR_1	SWITCH_1
0x40001e8	     0xf84d2000000	                            je 0x40002c0	       169	shell.c	FUNCTION_6	FOR_1	SWITCH_1
0x40001ee	            0x3c20	                            cmp al, 0x20	       169	shell.c	FUNCTION_6	FOR_1	SWITCH_1
0x40001f0	            0x753a	                           jne 0x400022c	       169	shell.c	FUNCTION_6	FOR_1	SWITCH_1
0x40001f2	      0x498d741c01	                lea rsi, [r12 + rbx + 1]	       174	shell.c	FUNCTION_6	FOR_1	SWITCH_1
0x40001f7	          0x4889ef	                            mov rdi, rbp	       179	shell.c	FUNCTION_6	FOR_1	CALL_15
0x40001fa	        0x41ff5608	                    call qword [r14 + 8]	       179	shell.c	FUNCTION_6	FOR_1	CALL_15
0x40001fe	            0x89c7	                            mov edi, eax	       179	shell.c	FUNCTION_6	FOR_1	CALL_15
0x4000200	      0xe800000000	                          call 0x4000205	       179	shell.c	FUNCTION_6	FOR_1	CALL_15
0x4000205	        0x488b7e08	                mov rdi, qword [rsi + 8]	       137	shell.c	FUNCTION_6	IF_1	CALL_1
0x4000209	      0xbe00000000	                              mov esi, 0	       137	shell.c	FUNCTION_6	IF_1	CALL_1
0x400020e	      0xe800000000	                          call 0x4000213	       137	shell.c	FUNCTION_6	IF_1	CALL_1
0x4000213	            0x85c0	                           test eax, eax	       137	shell.c	FUNCTION_6	IF_1	CALL_1
0x4000215	            0x740c	                            je 0x4000223	       137	shell.c	FUNCTION_6	IF_1	CALL_1
0x4000217	      0xbf00000000	                              mov edi, 0	       155	shell.c	FUNCTION_6	ELSE_2	IF_4	CALL_8
0x400021c	            0x31c0	                            xor eax, eax	       155	shell.c	FUNCTION_6	ELSE_2	IF_4	CALL_8
0x400021e	      0xe800000000	                          call 0x4000223	       155	shell.c	FUNCTION_6	ELSE_2	IF_4	CALL_8
0x4000223	        0x4983ed08	                              sub r13, 8	       138	shell.c	FUNCTION_6	IF_1
0x4000227	      0xe94fffffff	                           jmp 0x400017b	       138	shell.c	FUNCTION_6	IF_1
0x400022c	        0x4983c610	                           add r14, 0x10	       163	shell.c	FUNCTION_6	FOR_1
0x4000230	          0x498b2e	                    mov rbp, qword [r14]	       163	shell.c	FUNCTION_6	FOR_1
0x4000233	          0x4885ed	                           test rbp, rbp	       163	shell.c	FUNCTION_6	FOR_1
0x4000236	            0x758c	                           jne 0x40001c4	       163	shell.c	FUNCTION_6	FOR_1
0x4000238	      0xe8a3feffff	                  call sym.cd_to_homedir	       182	shell.c	FUNCTION_6	CALL_16
0x400023d	      0x488d742420	                   lea rsi, [rsp + 0x20]	       183	shell.c	FUNCTION_6	CALL_17
0x4000242	          0x4c89e7	                            mov rdi, r12	       183	shell.c	FUNCTION_6	CALL_17
0x4000245	      0xe800000000	                          call 0x400024a	       183	shell.c	FUNCTION_6	CALL_17
0x400024a	            0x85c0	                           test eax, eax	       184	shell.c	FUNCTION_6	IF_7
0x400024c	     0xf88e7020000	                            js 0x4000539	       184	shell.c	FUNCTION_6	IF_7
0x4000252	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       185	shell.c	FUNCTION_6	IF_7	IF_8	CALL_18
0x4000257	          0x488b10	                    mov rdx, qword [rax]	       185	shell.c	FUNCTION_6	IF_7	IF_8	CALL_18
0x400025a	          0x4889d1	                            mov rcx, rdx	       185	shell.c	FUNCTION_6	IF_7	IF_8	CALL_18
0x400025d	            0xeb0c	                           jmp 0x400026b	       185	shell.c	FUNCTION_6	IF_7	IF_8	CALL_18
0x400025f	          0x83e82e	                           sub eax, 0x2e	       962	string2.h	FUNCTION_14	WHILE_1
0x4000262	        0x4883c101	                              add rcx, 1	       962	string2.h	FUNCTION_14	WHILE_1
0x4000266	          0x83f801	                              cmp eax, 1	       962	string2.h	FUNCTION_14	WHILE_1
0x4000269	            0x7633	                           jbe 0x400029e	       962	string2.h	FUNCTION_14	WHILE_1
0x400026b	           0xfbe01	                   movsx eax, byte [rcx]	       961	string2.h	FUNCTION_14	WHILE_1
0x400026e	            0x84c0	                             test al, al	       961	string2.h	FUNCTION_14	WHILE_1
0x4000270	            0x75ed	                           jne 0x400025f	       961	string2.h	FUNCTION_14	WHILE_1
0x4000272	      0xbe00000000	                              mov esi, 0	        36	shell.c	FUNCTION_3	CALL_1
0x4000277	      0xbf00000000	                              mov edi, 0	        36	shell.c	FUNCTION_3	CALL_1
0x400027c	            0x31c0	                            xor eax, eax	        36	shell.c	FUNCTION_3	CALL_1
0x400027e	      0xe800000000	                          call 0x4000283	        36	shell.c	FUNCTION_3	CALL_1
0x4000283	          0x4989c4	                            mov r12, rax	        36	shell.c	FUNCTION_3	CALL_1
0x4000286	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       187	shell.c	FUNCTION_6	IF_7	IF_8
0x400028b	          0x4c8920	                    mov qword [rax], r12	       187	shell.c	FUNCTION_6	IF_7	IF_8
0x400028e	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       188	shell.c	FUNCTION_6	IF_7	IF_8	CALL_20
0x4000293	          0x488b38	                    mov rdi, qword [rax]	       188	shell.c	FUNCTION_6	IF_7	IF_8	CALL_20
0x4000296	          0x4889c6	                            mov rsi, rax	       188	shell.c	FUNCTION_6	IF_7	IF_8	CALL_20
0x4000299	      0xe800000000	                          call 0x400029e	       188	shell.c	FUNCTION_6	IF_7	IF_8	CALL_20
0x400029e	          0x4c89e7	                            mov rdi, r12	       190	shell.c	FUNCTION_6	IF_7	CALL_21
0x40002a1	      0xe800000000	                          call 0x40002a6	       190	shell.c	FUNCTION_6	IF_7	CALL_21
0x40002a6	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       191	shell.c	FUNCTION_6	IF_7	CALL_22
0x40002ab	      0xe800000000	                          call 0x40002b0	       191	shell.c	FUNCTION_6	IF_7	CALL_22
0x40002b0	        0x498b7510	            mov rsi, qword [r13 + 0x10] 	       192	shell.c	FUNCTION_6	IF_7	CALL_23
0x40002b4	      0xbf00000000	                              mov edi, 0	       192	shell.c	FUNCTION_6	IF_7	CALL_23
0x40002b9	            0x31c0	                            xor eax, eax	       192	shell.c	FUNCTION_6	IF_7	CALL_23
0x40002bb	      0xe800000000	                          call 0x40002c0	       192	shell.c	FUNCTION_6	IF_7	CALL_23
0x40002c0	            0x31f6	                            xor esi, esi	       171	shell.c	FUNCTION_6	FOR_1	SWITCH_1
0x40002c2	      0xe930ffffff	                           jmp 0x40001f7	       171	shell.c	FUNCTION_6	FOR_1	SWITCH_1
0x40002c7	      0xe814feffff	                  call sym.cd_to_homedir	       141	shell.c	FUNCTION_6	ELSE_1	IF_2	CALL_2
0x40002cc	      0xbe05000000	                              mov esi, 5	       142	shell.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_3
0x40002d1	      0xbf00000000	                              mov edi, 0	       142	shell.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_3
0x40002d6	      0xe800000000	                          call 0x40002db	       142	shell.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_3
0x40002db	          0x83c001	                              add eax, 1	       142	shell.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_3
0x40002de	     0xf8404020000	                            je 0x40004e8	       142	shell.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_3
0x40002e4	            0x31f6	                            xor esi, esi	        53	shell.c	FUNCTION_5	IF_1	CALL_1
0x40002e6	      0xbf00000000	                              mov edi, 0	        53	shell.c	FUNCTION_5	IF_1	CALL_1
0x40002eb	      0xe800000000	                          call 0x40002f0	        53	shell.c	FUNCTION_5	IF_1	CALL_1
0x40002f0	            0x85c0	                           test eax, eax	        53	shell.c	FUNCTION_5	IF_1	CALL_1
0x40002f2	     0xf8411010000	                            je 0x4000409	        53	shell.c	FUNCTION_5	IF_1	CALL_1
0x40002f8	      0xbe08000000	                              mov esi, 8	        65	shell.c	FUNCTION_5	CALL_5
0x40002fd	      0xbf00000000	                              mov edi, 0	        65	shell.c	FUNCTION_5	CALL_5
0x4000302	      0xe800000000	                          call 0x4000307	        65	shell.c	FUNCTION_5	CALL_5
0x4000307	    0x488b0d000000	            mov rcx, qword [0x0400030e] 	        97	stdio2.h	FUNCTION_29	CALL_1
0x400030e	      0xba05000000	                              mov edx, 5	        97	stdio2.h	FUNCTION_29	CALL_1
0x4000313	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_29	CALL_1
0x4000318	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	FUNCTION_29	CALL_1
0x400031d	    0x48c744242000	               mov qword [rsp + 0x20], 0	        68	shell.c	FUNCTION_5	DO_1
0x4000326	    0x48c744242800	               mov qword [rsp + 0x28], 0	        68	shell.c	FUNCTION_5	DO_1
0x400032f	    0x48c744243000	               mov qword [rsp + 0x30], 0	        68	shell.c	FUNCTION_5	DO_1
0x4000338	      0xe800000000	                          call 0x400033d	        97	stdio2.h	FUNCTION_29	CALL_1
0x400033d	    0x488b35000000	            mov rsi, qword [0x04000344] 	        78	shell.c	FUNCTION_5	DO_1	IF_3	CALL_7
0x4000344	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        78	shell.c	FUNCTION_5	DO_1	IF_3	CALL_7
0x4000349	      0xe800000000	                          call 0x400034e	        78	shell.c	FUNCTION_5	DO_1	IF_3	CALL_7
0x400034e	          0x83c001	                              add eax, 1	        78	shell.c	FUNCTION_5	DO_1	IF_3	CALL_7
0x4000351	     0xf849d010000	                            je 0x40004f4	        78	shell.c	FUNCTION_5	DO_1	IF_3	CALL_7
0x4000357	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        83	shell.c	FUNCTION_5	DO_1	CALL_10
0x400035c	      0xe800000000	                          call 0x4000361	        83	shell.c	FUNCTION_5	DO_1	CALL_10
0x4000361	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        84	shell.c	FUNCTION_5	DO_1	CALL_11
0x4000366	            0x31f6	                            xor esi, esi	        84	shell.c	FUNCTION_5	DO_1	CALL_11
0x4000368	      0xe800000000	                          call 0x400036d	        84	shell.c	FUNCTION_5	DO_1	CALL_11
0x400036d	          0x4889c7	                            mov rdi, rax	        85	shell.c	FUNCTION_5	DO_1	CALL_12
0x4000370	          0x4889c3	                            mov rbx, rax	        84	shell.c	FUNCTION_5	DO_1	CALL_11
0x4000373	      0xe800000000	                          call 0x4000378	        85	shell.c	FUNCTION_5	DO_1	CALL_12
0x4000378	      0x488d742418	                   lea rsi, [rsp + 0x18]	        86	shell.c	FUNCTION_5	DO_1	CALL_13
0x400037d	          0x4889c7	                            mov rdi, rax	        86	shell.c	FUNCTION_5	DO_1	CALL_13
0x4000380	          0x4889c5	                            mov rbp, rax	        85	shell.c	FUNCTION_5	DO_1	CALL_12
0x4000383	      0xe800000000	                          call 0x4000388	        86	shell.c	FUNCTION_5	DO_1	CALL_13
0x4000388	            0x85c0	                           test eax, eax	        87	shell.c	FUNCTION_5	DO_1	IF_4
0x400038a	     0xf881e010000	                            js 0x40004ae	        87	shell.c	FUNCTION_5	DO_1	IF_4
0x4000390	      0x4c8b642418	            mov r12, qword [rsp + 0x18] 	        95	shell.c	FUNCTION_5	DO_1
0x4000395	        0x498b2c24	                    mov rbp, qword [r12]	        95	shell.c	FUNCTION_5	DO_1
0x4000399	      0x440fb66d00	                  movzx r13d, byte [rbp]	        96	shell.c	FUNCTION_5	DO_1	IF_5	CALL_18
0x400039e	          0x4585ed	                         test r13d, r13d	        96	shell.c	FUNCTION_5	DO_1	IF_5	CALL_18
0x40003a1	     0xf84f2000000	                            je 0x4000499	        96	shell.c	FUNCTION_5	DO_1	IF_5	CALL_18
0x40003a7	      0xbe00000000	                              mov esi, 0	        97	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_20
0x40003ac	          0x4889ef	                            mov rdi, rbp	        97	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_20
0x40003af	      0xe800000000	                          call 0x40003b4	        97	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_20
0x40003b4	            0x85c0	                           test eax, eax	        97	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_20
0x40003b6	            0x743a	                            je 0x40003f2	        97	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_20
0x40003b8	      0xbe00000000	                              mov esi, 0	        97	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_20
0x40003bd	          0x4889ef	                            mov rdi, rbp	        97	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_20
0x40003c0	      0xe800000000	                          call 0x40003c5	        97	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_20
0x40003c5	            0x85c0	                           test eax, eax	        97	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_20
0x40003c7	            0x7429	                            je 0x40003f2	        97	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_20
0x40003c9	      0xbe00000000	                              mov esi, 0	        98	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_22
0x40003ce	          0x4889ef	                            mov rdi, rbp	        98	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_22
0x40003d1	      0xe800000000	                          call 0x40003d6	        98	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_22
0x40003d6	            0x85c0	                           test eax, eax	        97	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_20
0x40003d8	            0x7418	                            je 0x40003f2	        97	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_20
0x40003da	        0x4183fd62	                          cmp r13d, 0x62	        98	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_22
0x40003de	            0x7559	                           jne 0x4000439	        98	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_22
0x40003e0	        0x807d0179	                cmp byte [rbp + 1], 0x79	        98	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_22
0x40003e4	            0x7553	                           jne 0x4000439	        98	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_22
0x40003e6	        0x807d0265	                cmp byte [rbp + 2], 0x65	        98	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_22
0x40003ea	            0x754d	                           jne 0x4000439	        98	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_22
0x40003ec	        0x807d0300	                   cmp byte [rbp + 3], 0	        98	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_22
0x40003f0	            0x7547	                           jne 0x4000439	        98	shell.c	FUNCTION_5	DO_1	ELSE_1	IF_6	CALL_22
0x40003f2	          0x4c89e7	                            mov rdi, r12	       112	shell.c	FUNCTION_5	DO_1	CALL_29
0x40003f5	      0xe800000000	                          call 0x40003fa	       112	shell.c	FUNCTION_5	DO_1	CALL_29
0x40003fa	          0x4889df	                            mov rdi, rbx	       113	shell.c	FUNCTION_5	DO_1	CALL_30
0x40003fd	      0xe800000000	                          call 0x4000402	       113	shell.c	FUNCTION_5	DO_1	CALL_30
0x4000402	            0x31ff	                            xor edi, edi	       148	shell.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x4000404	      0xe800000000	                          call 0x4000409	       148	shell.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x4000409	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	        58	shell.c	FUNCTION_5	IF_1	CALL_2
0x400040e	            0x31f6	                            xor esi, esi	        58	shell.c	FUNCTION_5	IF_1	CALL_2
0x4000410	    0x48c744244000	               mov qword [rsp + 0x40], 0	        55	shell.c	FUNCTION_5	IF_1
0x4000419	    0x48c744244800	               mov qword [rsp + 0x48], 0	        55	shell.c	FUNCTION_5	IF_1
0x4000422	      0xe800000000	                          call 0x4000427	        58	shell.c	FUNCTION_5	IF_1	CALL_2
0x4000427	            0x85c0	                           test eax, eax	        59	shell.c	FUNCTION_5	IF_1	IF_2
0x4000429	     0xf89cffdffff	                           jns 0x40001fe	        59	shell.c	FUNCTION_5	IF_1	IF_2
0x400042f	      0xbf7f000000	                           mov edi, 0x7f	        60	shell.c	FUNCTION_5	IF_1	CALL_3
0x4000434	      0xe800000000	                          call 0x4000439	        60	shell.c	FUNCTION_5	IF_1	CALL_3
0x4000439	          0x4889ea	                            mov rdx, rbp	        60	shell.c	FUNCTION_5	IF_1	CALL_3
0x400043c	            0xeb10	                           jmp 0x400044e	        60	shell.c	FUNCTION_5	IF_1	CALL_3
0x400043e	          0x83e82e	                           sub eax, 0x2e	       962	string2.h	FUNCTION_14	WHILE_1
0x4000441	        0x4883c201	                              add rdx, 1	       962	string2.h	FUNCTION_14	WHILE_1
0x4000445	          0x83f801	                              cmp eax, 1	       962	string2.h	FUNCTION_14	WHILE_1
0x4000448	     0xf86c6000000	                           jbe 0x4000514	       962	string2.h	FUNCTION_14	WHILE_1
0x400044e	           0xfbe02	                   movsx eax, byte [rdx]	       961	string2.h	FUNCTION_14	WHILE_1
0x4000451	            0x84c0	                             test al, al	       961	string2.h	FUNCTION_14	WHILE_1
0x4000453	            0x75e9	                           jne 0x400043e	       961	string2.h	FUNCTION_14	WHILE_1
0x4000455	          0x4889ea	                            mov rdx, rbp	        36	shell.c	FUNCTION_3	CALL_1
0x4000458	      0xbe00000000	                              mov esi, 0	        36	shell.c	FUNCTION_3	CALL_1
0x400045d	      0xbf00000000	                              mov edi, 0	        36	shell.c	FUNCTION_3	CALL_1
0x4000462	            0x31c0	                            xor eax, eax	        36	shell.c	FUNCTION_3	CALL_1
0x4000464	      0xe800000000	                          call 0x4000469	        36	shell.c	FUNCTION_3	CALL_1
0x4000469	          0x4989c4	                            mov r12, rax	        36	shell.c	FUNCTION_3	CALL_1
0x400046c	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       102	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7
0x4000471	      0xbe08000000	                              mov esi, 8	       103	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	CALL_25
0x4000476	          0x4c8920	                    mov qword [rax], r12	       102	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7
0x4000479	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       103	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	CALL_25
0x400047e	      0xe800000000	                          call 0x4000483	       103	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	CALL_25
0x4000483	          0x83c001	                              add eax, 1	       104	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	IF_8
0x4000486	     0xf84d7000000	                            je 0x4000563	       104	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	IF_8
0x400048c	          0x4c89e7	                            mov rdi, r12	       107	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	CALL_27
0x400048f	      0xe800000000	                          call 0x4000494	       107	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	CALL_27
0x4000494	      0x4c8b642418	            mov r12, qword [rsp + 0x18] 	       107	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	CALL_27
0x4000499	          0x4c89e7	                            mov rdi, r12	       112	shell.c	FUNCTION_5	DO_1	CALL_29
0x400049c	      0xe800000000	                          call 0x40004a1	       112	shell.c	FUNCTION_5	DO_1	CALL_29
0x40004a1	          0x4889df	                            mov rdi, rbx	       113	shell.c	FUNCTION_5	DO_1	CALL_30
0x40004a4	      0xe800000000	                          call 0x40004a9	       113	shell.c	FUNCTION_5	DO_1	CALL_30
0x40004a9	      0xe959feffff	                           jmp 0x4000307	       113	shell.c	FUNCTION_5	DO_1	CALL_30
0x40004ae	            0x89c7	                            mov edi, eax	        88	shell.c	FUNCTION_5	DO_1	IF_4	CALL_14
0x40004b0	      0xe800000000	                          call 0x40004b5	        88	shell.c	FUNCTION_5	DO_1	IF_4	CALL_14
0x40004b5	    0x488b3d000000	            mov rdi, qword [0x040004bc] 	        97	stdio2.h	FUNCTION_29	CALL_1
0x40004bc	          0x4989c0	                             mov r8, rax	        88	shell.c	FUNCTION_5	DO_1	IF_4	CALL_14
0x40004bf	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	FUNCTION_29	CALL_1
0x40004c2	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_29	CALL_1
0x40004c7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_29	CALL_1
0x40004cc	            0x31c0	                            xor eax, eax	        97	stdio2.h	FUNCTION_29	CALL_1
0x40004ce	      0xe800000000	                          call 0x40004d3	        97	stdio2.h	FUNCTION_29	CALL_1
0x40004d3	          0x4889ef	                            mov rdi, rbp	        90	shell.c	FUNCTION_5	DO_1	IF_4	CALL_16
0x40004d6	      0xe800000000	                          call 0x40004db	        90	shell.c	FUNCTION_5	DO_1	IF_4	CALL_16
0x40004db	          0x4889df	                            mov rdi, rbx	        91	shell.c	FUNCTION_5	DO_1	IF_4	CALL_17
0x40004de	      0xe800000000	                          call 0x40004e3	        91	shell.c	FUNCTION_5	DO_1	IF_4	CALL_17
0x40004e3	      0xe91ffeffff	                           jmp 0x4000307	        91	shell.c	FUNCTION_5	DO_1	IF_4	CALL_17
0x40004e8	      0xbf00000000	                              mov edi, 0	       143	shell.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_4
0x40004ed	            0x31c0	                            xor eax, eax	       143	shell.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_4
0x40004ef	      0xe800000000	                          call 0x40004f4	       143	shell.c	FUNCTION_6	ELSE_1	IF_2	IF_3	CALL_4
0x40004f4	    0x488b35000000	            mov rsi, qword [0x040004fb] 	        97	stdio2.h	FUNCTION_29	CALL_1
0x40004fb	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	FUNCTION_29	CALL_1
0x4000500	      0xe800000000	                          call 0x4000505	        97	stdio2.h	FUNCTION_29	CALL_1
0x4000505	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        80	shell.c	FUNCTION_5	DO_1	IF_3	CALL_9
0x400050a	      0xe800000000	                          call 0x400050f	        80	shell.c	FUNCTION_5	DO_1	IF_3	CALL_9
0x400050f	      0xe9eefeffff	                           jmp 0x4000402	        80	shell.c	FUNCTION_5	DO_1	IF_3	CALL_9
0x4000514	    0x488b3d000000	            mov rdi, qword [0x0400051b] 	        97	stdio2.h	FUNCTION_29	CALL_1
0x400051b	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	FUNCTION_29	CALL_1
0x400051e	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_29	CALL_1
0x4000523	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_29	CALL_1
0x4000528	            0x31c0	                            xor eax, eax	        97	stdio2.h	FUNCTION_29	CALL_1
0x400052a	      0xe800000000	                          call 0x400052f	        97	stdio2.h	FUNCTION_29	CALL_1
0x400052f	      0x4c8b642418	            mov r12, qword [rsp + 0x18] 	        97	stdio2.h	FUNCTION_29	CALL_1
0x4000534	      0xe960ffffff	                           jmp 0x4000499	        97	stdio2.h	FUNCTION_29	CALL_1
0x4000539	          0x4c89e7	                            mov rdi, r12	       194	shell.c	FUNCTION_6	ELSE_3	CALL_24
0x400053c	        0x8944240c	              mov dword [rsp + 0xc], eax	       194	shell.c	FUNCTION_6	ELSE_3	CALL_24
0x4000540	      0xe800000000	                          call 0x4000545	       194	shell.c	FUNCTION_6	ELSE_3	CALL_24
0x4000545	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       195	shell.c	FUNCTION_6	ELSE_3	CALL_25
0x4000549	            0x89c7	                            mov edi, eax	       195	shell.c	FUNCTION_6	ELSE_3	CALL_25
0x400054b	      0xe800000000	                          call 0x4000550	       195	shell.c	FUNCTION_6	ELSE_3	CALL_25
0x4000550	        0x498b7510	            mov rsi, qword [r13 + 0x10] 	       195	shell.c	FUNCTION_6	ELSE_3	CALL_25
0x4000554	          0x4889c2	                            mov rdx, rax	       195	shell.c	FUNCTION_6	ELSE_3	CALL_25
0x4000557	      0xbf00000000	                              mov edi, 0	       195	shell.c	FUNCTION_6	ELSE_3	CALL_25
0x400055c	            0x31c0	                            xor eax, eax	       195	shell.c	FUNCTION_6	ELSE_3	CALL_25
0x400055e	      0xe800000000	                          call 0x4000563	       195	shell.c	FUNCTION_6	ELSE_3	CALL_25
0x4000563	      0xe800000000	                          call 0x4000568	       104	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	IF_8
0x4000568	          0x833802	                      cmp dword [rax], 2	       104	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	IF_8
0x400056b	     0xf851bffffff	                           jne 0x400048c	       104	shell.c	FUNCTION_5	DO_1	ELSE_2	IF_7	IF_8
0x4000571	    0x488b3d000000	            mov rdi, qword [0x04000578] 	        97	stdio2.h	FUNCTION_29	CALL_1
0x4000578	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	FUNCTION_29	CALL_1
0x400057b	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_29	CALL_1
0x4000580	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_29	CALL_1
0x4000585	            0x31c0	                            xor eax, eax	        97	stdio2.h	FUNCTION_29	CALL_1
0x4000587	      0xe800000000	                          call 0x400058c	        97	stdio2.h	FUNCTION_29	CALL_1
0x400058c	      0xe9fbfeffff	                           jmp 0x400048c	        97	stdio2.h	FUNCTION_29	CALL_1
