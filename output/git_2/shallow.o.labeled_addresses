add_ref	IF,1:WHILE,0:FOR,0:SWITCH,0:ELSE,0:CALL,2:functions,0:DO,0	49
0x40002b1	            0x4154	                                push r12	       643	shallow.c	FUNCTION_23
0x40002b3	              0x55	                                push rbp	       643	shallow.c	FUNCTION_23
0x40002b4	              0x53	                                push rbx	       643	shallow.c	FUNCTION_23
0x40002b5	          0x4889f5	                            mov rbp, rsi	       643	shallow.c	FUNCTION_23
0x40002b8	          0x4889cb	                            mov rbx, rcx	       643	shallow.c	FUNCTION_23
0x40002bb	          0x8b4108	                mov eax, dword [rcx + 8]	       645	shallow.c	FUNCTION_23	CALL_1
0x40002be	          0x8d5001	                      lea edx, [rax + 1]	       645	shallow.c	FUNCTION_23	CALL_1
0x40002c1	          0x8b410c	              mov eax, dword [rcx + 0xc]	       645	shallow.c	FUNCTION_23	CALL_1
0x40002c4	            0x39c2	                            cmp edx, eax	       645	shallow.c	FUNCTION_23	CALL_1
0x40002c6	            0x7e4e	                           jle 0x4000316	       645	shallow.c	FUNCTION_23	CALL_1
0x40002c8	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	       645	shallow.c	FUNCTION_23	CALL_1
0x40002cc	            0x89c6	                            mov esi, eax	       645	shallow.c	FUNCTION_23	CALL_1
0x40002ce	          0xc1ee1f	                           shr esi, 0x1f	       645	shallow.c	FUNCTION_23	CALL_1
0x40002d1	             0x1c6	                            add esi, eax	       645	shallow.c	FUNCTION_23	CALL_1
0x40002d3	            0xd1fe	                              sar esi, 1	       645	shallow.c	FUNCTION_23	CALL_1
0x40002d5	            0x39f2	                            cmp edx, esi	       645	shallow.c	FUNCTION_23	CALL_1
0x40002d7	           0xf4ff2	                          cmovg esi, edx	       645	shallow.c	FUNCTION_23	CALL_1
0x40002da	          0x89710c	              mov dword [rcx + 0xc], esi	       645	shallow.c	FUNCTION_23	CALL_1
0x40002dd	          0x4863d6	                         movsxd rdx, esi	       645	shallow.c	FUNCTION_23	CALL_1
0x40002e0	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_41	IF_1
0x40002ea	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_41	IF_1
0x40002ed	            0x7614	                           jbe 0x4000303	       795	git-compat-util.h	FUNCTION_41	IF_1
0x40002ef	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x40002f4	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x40002f9	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x40002fe	      0xe800000000	                          call 0x4000303	       796	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x4000303	    0x488d34d50000	                        lea rsi, [rdx*8]	       645	shallow.c	FUNCTION_23	CALL_1
0x400030b	          0x488b39	                    mov rdi, qword [rcx]	       645	shallow.c	FUNCTION_23	CALL_1
0x400030e	      0xe800000000	                          call 0x4000313	       645	shallow.c	FUNCTION_23	CALL_1
0x4000313	          0x488903	                    mov qword [rbx], rax	       645	shallow.c	FUNCTION_23	CALL_1
0x4000316	        0x48635308	            movsxd rdx, dword [rbx + 8] 	       646	shallow.c	FUNCTION_23	CALL_2
0x400031a	          0x488b03	                    mov rax, qword [rbx]	       646	shallow.c	FUNCTION_23	CALL_2
0x400031d	        0x4c8d24d0	                  lea r12, [rax + rdx*8]	       646	shallow.c	FUNCTION_23	CALL_2
0x4000321	      0xbe01000000	                              mov esi, 1	       646	shallow.c	FUNCTION_23	CALL_2
0x4000326	          0x4889ef	                            mov rdi, rbp	       646	shallow.c	FUNCTION_23	CALL_2
0x4000329	      0xe800000000	                          call 0x400032e	       646	shallow.c	FUNCTION_23	CALL_2
0x400032e	        0x49890424	                    mov qword [r12], rax	       646	shallow.c	FUNCTION_23	CALL_2
0x4000332	          0x8b4308	                mov eax, dword [rbx + 8]	       647	shallow.c	FUNCTION_23	IF_1
0x4000335	          0x4863c8	                         movsxd rcx, eax	       647	shallow.c	FUNCTION_23	IF_1
0x4000338	          0x488b13	                    mov rdx, qword [rbx]	       647	shallow.c	FUNCTION_23	IF_1
0x400033b	      0x48833cca00	              cmp qword [rdx + rcx*8], 0	       647	shallow.c	FUNCTION_23	IF_1
0x4000340	            0x7406	                            je 0x4000348	       647	shallow.c	FUNCTION_23	IF_1
0x4000342	          0x83c001	                              add eax, 1	       648	shallow.c	FUNCTION_23	IF_1
0x4000345	          0x894308	                mov dword [rbx + 8], eax	       648	shallow.c	FUNCTION_23	IF_1
0x4000348	      0xb800000000	                              mov eax, 0	       650	shallow.c	FUNCTION_23
0x400034d	              0x5b	                                 pop rbx	       650	shallow.c	FUNCTION_23
0x400034e	              0x5d	                                 pop rbp	       650	shallow.c	FUNCTION_23
0x400034f	            0x415c	                                 pop r12	       650	shallow.c	FUNCTION_23
0x4000351	              0xc3	                                     ret	       650	shallow.c	FUNCTION_23
get_shallow_commits_by_rev_list	IF,4:WHILE,0:FOR,4:SWITCH,0:ELSE,0:CALL,12:functions,0:DO,0	142
0x4000817	            0x4156	                                push r14	       156	shallow.c	FUNCTION_6
0x4000819	            0x4155	                                push r13	       156	shallow.c	FUNCTION_6
0x400081b	            0x4154	                                push r12	       156	shallow.c	FUNCTION_6
0x400081d	              0x55	                                push rbp	       156	shallow.c	FUNCTION_6
0x400081e	              0x53	                                push rbx	       156	shallow.c	FUNCTION_6
0x400081f	    0x4881ecd00800	                          sub rsp, 0x8d0	       156	shallow.c	FUNCTION_6
0x4000826	            0x89fd	                            mov ebp, edi	       156	shallow.c	FUNCTION_6
0x4000828	          0x4989f4	                            mov r12, rsi	       156	shallow.c	FUNCTION_6
0x400082b	          0x4189d6	                           mov r14d, edx	       156	shallow.c	FUNCTION_6
0x400082e	            0x89cb	                            mov ebx, ecx	       156	shallow.c	FUNCTION_6
0x4000830	    0x64488b042528	                mov rax, qword fs:[0x28]	       156	shallow.c	FUNCTION_6
0x4000839	    0x48898424c808	            mov qword [rsp + 0x8c8], rax	       156	shallow.c	FUNCTION_6
0x4000841	            0x31c0	                            xor eax, eax	       156	shallow.c	FUNCTION_6
0x4000843	    0x48c704240000	                      mov qword [rsp], 0	       157	shallow.c	FUNCTION_6
0x400084b	    0x48c744240800	                  mov qword [rsp + 8], 0	       158	shallow.c	FUNCTION_6
0x4000854	          0x4189d5	                           mov r13d, edx	       160	shallow.c	FUNCTION_6
0x4000857	          0x4109cd	                            or r13d, ecx	       160	shallow.c	FUNCTION_6
0x400085a	          0x4489ef	                           mov edi, r13d	       166	shallow.c	FUNCTION_6	CALL_1
0x400085d	      0xe800000000	                          call 0x4000862	       166	shallow.c	FUNCTION_6	CALL_1
0x4000862	      0xe800000000	                          call 0x4000867	       168	shallow.c	FUNCTION_6	CALL_2
0x4000867	      0xbe00000000	                              mov esi, 0	       170	shallow.c	FUNCTION_6	CALL_3
0x400086c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       170	shallow.c	FUNCTION_6	CALL_3
0x4000871	      0xe800000000	                          call 0x4000876	       170	shallow.c	FUNCTION_6	CALL_3
0x4000876	    0xc70500000000	               mov dword [0x04000880], 0	       171	shallow.c	FUNCTION_6
0x4000880	      0xb900000000	                              mov ecx, 0	       172	shallow.c	FUNCTION_6	CALL_4
0x4000885	      0x488d542410	                   lea rdx, [rsp + 0x10]	       172	shallow.c	FUNCTION_6	CALL_4
0x400088a	          0x4c89e6	                            mov rsi, r12	       172	shallow.c	FUNCTION_6	CALL_4
0x400088d	            0x89ef	                            mov edi, ebp	       172	shallow.c	FUNCTION_6	CALL_4
0x400088f	      0xe800000000	                          call 0x4000894	       172	shallow.c	FUNCTION_6	CALL_4
0x4000894	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       174	shallow.c	FUNCTION_6	IF_1	CALL_5
0x4000899	      0xe800000000	                          call 0x400089e	       174	shallow.c	FUNCTION_6	IF_1	CALL_5
0x400089e	            0x85c0	                           test eax, eax	       174	shallow.c	FUNCTION_6	IF_1	CALL_5
0x40008a0	            0x740f	                            je 0x40008b1	       174	shallow.c	FUNCTION_6	IF_1	CALL_5
0x40008a2	      0xbf00000000	                              mov edi, 0	       175	shallow.c	FUNCTION_6	CALL_6
0x40008a7	      0xb800000000	                              mov eax, 0	       175	shallow.c	FUNCTION_6	CALL_6
0x40008ac	      0xe800000000	                          call 0x40008b1	       175	shallow.c	FUNCTION_6	CALL_6
0x40008b1	      0x488d4c2408	                      lea rcx, [rsp + 8]	       176	shallow.c	FUNCTION_6	CALL_7
0x40008b6	      0xba00000000	                              mov edx, 0	       176	shallow.c	FUNCTION_6	CALL_7
0x40008bb	      0xbe00000000	                              mov esi, 0	       176	shallow.c	FUNCTION_6	CALL_7
0x40008c0	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       176	shallow.c	FUNCTION_6	CALL_7
0x40008c5	      0xe800000000	                          call 0x40008ca	       176	shallow.c	FUNCTION_6	CALL_7
0x40008ca	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       179	shallow.c	FUNCTION_6	FOR_1
0x40008cf	          0x4885c9	                           test rcx, rcx	       179	shallow.c	FUNCTION_6	FOR_1
0x40008d2	     0xf84d4000000	                            je 0x40009ac	       179	shallow.c	FUNCTION_6	FOR_1
0x40008d8	          0x488b31	                    mov rsi, qword [rcx]	       180	shallow.c	FUNCTION_6	FOR_1
0x40008db	            0x8b06	                    mov eax, dword [rsi]	       180	shallow.c	FUNCTION_6	FOR_1
0x40008dd	            0x89c2	                            mov edx, eax	       180	shallow.c	FUNCTION_6	FOR_1
0x40008df	          0xc1ea04	                              shr edx, 4	       180	shallow.c	FUNCTION_6	FOR_1
0x40008e2	             0x9da	                             or edx, ebx	       180	shallow.c	FUNCTION_6	FOR_1
0x40008e4	    0x81e2ffffff07	                      and edx, 0x7ffffff	       180	shallow.c	FUNCTION_6	FOR_1
0x40008ea	          0xc1e204	                              shl edx, 4	       180	shallow.c	FUNCTION_6	FOR_1
0x40008ed	      0x250f000080	                     and eax, 0x8000000f	       180	shallow.c	FUNCTION_6	FOR_1
0x40008f2	             0x9d0	                             or eax, edx	       180	shallow.c	FUNCTION_6	FOR_1
0x40008f4	            0x8906	                    mov dword [rsi], eax	       180	shallow.c	FUNCTION_6	FOR_1
0x40008f6	        0x488b4908	                mov rcx, qword [rcx + 8]	       179	shallow.c	FUNCTION_6	FOR_1
0x40008fa	          0x4885c9	                           test rcx, rcx	       179	shallow.c	FUNCTION_6	FOR_1
0x40008fd	            0x75d9	                           jne 0x40008d8	       179	shallow.c	FUNCTION_6	FOR_1
0x40008ff	      0x4c8b642408	                mov r12, qword [rsp + 8]	       189	shallow.c	FUNCTION_6	FOR_2
0x4000904	          0x4d85e4	                           test r12, r12	       189	shallow.c	FUNCTION_6	FOR_2
0x4000907	     0xf849f000000	                            je 0x40009ac	       189	shallow.c	FUNCTION_6	FOR_2
0x400090d	        0x498b2c24	                    mov rbp, qword [r12]	       190	shallow.c	FUNCTION_6	FOR_2
0x4000911	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_54	CALL_1
0x4000916	          0x4889ef	                            mov rdi, rbp	        75	commit.h	FUNCTION_54	CALL_1
0x4000919	      0xe800000000	                          call 0x400091e	        75	commit.h	FUNCTION_54	CALL_1
0x400091e	            0x85c0	                           test eax, eax	       193	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_8
0x4000920	            0x741b	                            je 0x400093d	       193	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_8
0x4000922	        0x488d7d04	                      lea rdi, [rbp + 4]	       195	shallow.c	FUNCTION_6	FOR_2	CALL_10
0x4000926	      0xe800000000	                          call 0x400092b	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x400092b	          0x4889c6	                            mov rsi, rax	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x400092e	      0xbf00000000	                              mov edi, 0	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x4000933	      0xb800000000	                              mov eax, 0	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x4000938	      0xe800000000	                          call 0x400093d	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x400093d	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x4000941	          0x4885d2	                           test rdx, rdx	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x4000944	            0x7458	                            je 0x400099e	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x4000946	          0x488b02	                    mov rax, qword [rdx]	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000949	            0x8b00	                    mov eax, dword [rax]	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x400094b	          0xc1e804	                              shr eax, 4	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x400094e	      0x25ffffff07	                      and eax, 0x7ffffff	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000953	            0x85d8	                           test eax, ebx	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000955	            0x753e	                           jne 0x4000995	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000957	            0xeb11	                           jmp 0x400096a	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000959	          0x488b02	                    mov rax, qword [rdx]	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x400095c	            0x8b00	                    mov eax, dword [rax]	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x400095e	          0xc1e804	                              shr eax, 4	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000961	      0x25ffffff07	                      and eax, 0x7ffffff	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000966	            0x85d8	                           test eax, ebx	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000968	            0x752b	                           jne 0x4000995	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x400096a	          0x8b4500	                    mov eax, dword [rbp]	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x400096d	            0x89c2	                            mov edx, eax	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x400096f	          0xc1ea04	                              shr edx, 4	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000972	          0x4409f2	                            or edx, r14d	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000975	    0x81e2ffffff07	                      and edx, 0x7ffffff	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x400097b	          0xc1e204	                              shl edx, 4	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x400097e	      0x250f000080	                     and eax, 0x8000000f	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000983	             0x9d0	                             or eax, edx	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000985	          0x894500	                    mov dword [rbp], eax	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000988	          0x4889e6	                            mov rsi, rsp	       200	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3	CALL_11
0x400098b	          0x4889ef	                            mov rdi, rbp	       200	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3	CALL_11
0x400098e	      0xe800000000	                          call 0x4000993	       200	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3	CALL_11
0x4000993	            0xeb09	                           jmp 0x400099e	       201	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000995	        0x488b5208	                mov rdx, qword [rdx + 8]	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x4000999	          0x4885d2	                           test rdx, rdx	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x400099c	            0x75bb	                           jne 0x4000959	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x400099e	      0x4d8b642408	                mov r12, qword [r12 + 8]	       189	shallow.c	FUNCTION_6	FOR_2
0x40009a3	          0x4d85e4	                           test r12, r12	       189	shallow.c	FUNCTION_6	FOR_2
0x40009a6	     0xf8561ffffff	                           jne 0x400090d	       189	shallow.c	FUNCTION_6	FOR_2
0x40009ac	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       204	shallow.c	FUNCTION_6	CALL_12
0x40009b1	      0xe800000000	                          call 0x40009b6	       204	shallow.c	FUNCTION_6	CALL_12
0x40009b6	        0x488b1424	                    mov rdx, qword [rsp]	       210	shallow.c	FUNCTION_6	FOR_4
0x40009ba	          0x4885d2	                           test rdx, rdx	       210	shallow.c	FUNCTION_6	FOR_4
0x40009bd	            0x7433	                            je 0x40009f2	       210	shallow.c	FUNCTION_6	FOR_4
0x40009bf	            0xf7d3	                                 not ebx	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009c1	          0x488b0a	                    mov rcx, qword [rdx]	       211	shallow.c	FUNCTION_6	FOR_4
0x40009c4	            0x8b01	                    mov eax, dword [rcx]	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009c6	          0xc1e804	                              shr eax, 4	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009c9	      0x25ffffff07	                      and eax, 0x7ffffff	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009ce	          0x4489ee	                           mov esi, r13d	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009d1	            0x21c6	                            and esi, eax	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009d3	          0x4139f5	                           cmp r13d, esi	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009d6	            0x7511	                           jne 0x40009e9	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009d8	            0x21d8	                            and eax, ebx	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009da	          0xc1e004	                              shl eax, 4	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009dd	            0x8b31	                    mov esi, dword [rcx]	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009df	    0x81e60f000080	                     and esi, 0x8000000f	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009e5	             0x9f0	                             or eax, esi	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009e7	            0x8901	                    mov dword [rcx], eax	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009e9	        0x488b5208	                mov rdx, qword [rdx + 8]	       210	shallow.c	FUNCTION_6	FOR_4
0x40009ed	          0x4885d2	                           test rdx, rdx	       210	shallow.c	FUNCTION_6	FOR_4
0x40009f0	            0x75cf	                           jne 0x40009c1	       210	shallow.c	FUNCTION_6	FOR_4
0x40009f2	        0x488b0424	                    mov rax, qword [rsp]	       216	shallow.c	FUNCTION_6
0x40009f6	    0x488bbc24c808	           mov rdi, qword [rsp + 0x8c8] 	       216	shallow.c	FUNCTION_6
0x40009fe	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       216	shallow.c	FUNCTION_6
0x4000a07	            0x7405	                            je 0x4000a0e	       216	shallow.c	FUNCTION_6
0x4000a09	      0xe800000000	                          call 0x4000a0e	       216	shallow.c	FUNCTION_6
0x4000a0e	    0x4881c4d00800	                          add rsp, 0x8d0	       216	shallow.c	FUNCTION_6
0x4000a15	              0x5b	                                 pop rbx	       216	shallow.c	FUNCTION_6
0x4000a16	              0x5d	                                 pop rbp	       216	shallow.c	FUNCTION_6
0x4000a17	            0x415c	                                 pop r12	       216	shallow.c	FUNCTION_6
0x4000a19	            0x415d	                                 pop r13	       216	shallow.c	FUNCTION_6
0x4000a1b	            0x415e	                                 pop r14	       216	shallow.c	FUNCTION_6
0x4000a1d	              0xc3	                                     ret	       216	shallow.c	FUNCTION_6
setup_alternate_shallow	IF,2:WHILE,0:FOR,0:SWITCH,0:ELSE,1:CALL,9:functions,0:DO,0	57
0x4000c0b	            0x4155	                                push r13	       314	shallow.c	FUNCTION_12
0x4000c0d	            0x4154	                                push r12	       314	shallow.c	FUNCTION_12
0x4000c0f	              0x55	                                push rbp	       314	shallow.c	FUNCTION_12
0x4000c10	              0x53	                                push rbx	       314	shallow.c	FUNCTION_12
0x4000c11	        0x4883ec28	                           sub rsp, 0x28	       314	shallow.c	FUNCTION_12
0x4000c15	          0x4889fb	                            mov rbx, rdi	       314	shallow.c	FUNCTION_12
0x4000c18	          0x4989f4	                            mov r12, rsi	       314	shallow.c	FUNCTION_12
0x4000c1b	          0x4889d5	                            mov rbp, rdx	       314	shallow.c	FUNCTION_12
0x4000c1e	    0x64488b042528	                mov rax, qword fs:[0x28]	       314	shallow.c	FUNCTION_12
0x4000c27	      0x4889442418	             mov qword [rsp + 0x18], rax	       314	shallow.c	FUNCTION_12
0x4000c2c	            0x31c0	                            xor eax, eax	       314	shallow.c	FUNCTION_12
0x4000c2e	    0x48c704240000	                      mov qword [rsp], 0	       315	shallow.c	FUNCTION_12
0x4000c36	    0x48c744240800	                  mov qword [rsp + 8], 0	       315	shallow.c	FUNCTION_12
0x4000c3f	    0x48c744241000	               mov qword [rsp + 0x10], 0	       315	shallow.c	FUNCTION_12
0x4000c48	      0xe800000000	                          call 0x4000c4d	       318	shallow.c	FUNCTION_12	CALL_2
0x4000c4d	      0xb900000000	                              mov ecx, 0	       175	lockfile.h	FUNCTION_55	CALL_1
0x4000c52	      0xba01000000	                              mov edx, 1	       175	lockfile.h	FUNCTION_55	CALL_1
0x4000c57	          0x4889c6	                            mov rsi, rax	       175	lockfile.h	FUNCTION_55	CALL_1
0x4000c5a	          0x4889df	                            mov rdi, rbx	       175	lockfile.h	FUNCTION_55	CALL_1
0x4000c5d	      0xe800000000	                          call 0x4000c62	       175	lockfile.h	FUNCTION_55	CALL_1
0x4000c62	          0x4189c5	                           mov r13d, eax	       175	lockfile.h	FUNCTION_55	CALL_1
0x4000c65	      0xe811f5ffff	  call sym.check_shallow_file_for_update	       320	shallow.c	FUNCTION_12	CALL_3
0x4000c6a	          0x4889ea	                            mov rdx, rbp	       321	shallow.c	FUNCTION_12	IF_1	CALL_4
0x4000c6d	      0xbe00000000	                              mov esi, 0	       321	shallow.c	FUNCTION_12	IF_1	CALL_4
0x4000c72	          0x4889e7	                            mov rdi, rsp	       321	shallow.c	FUNCTION_12	IF_1	CALL_4
0x4000c75	      0xe800000000	                          call 0x4000c7a	       321	shallow.c	FUNCTION_12	IF_1	CALL_4
0x4000c7a	            0x85c0	                           test eax, eax	       321	shallow.c	FUNCTION_12	IF_1	CALL_4
0x4000c7c	            0x743f	                            je 0x4000cbd	       321	shallow.c	FUNCTION_12	IF_1	CALL_4
0x4000c7e	      0x488b542408	                mov rdx, qword [rsp + 8]	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4000c83	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4000c88	          0x4489ef	                           mov edi, r13d	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4000c8b	      0xe800000000	                          call 0x4000c90	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4000c90	          0x4885c0	                           test rax, rax	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4000c93	            0x791a	                           jns 0x4000caf	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4000c95	          0x488b3b	                    mov rdi, qword [rbx]	       220	lockfile.h	FUNCTION_58	CALL_1
0x4000c98	      0xe800000000	                          call 0x4000c9d	       220	lockfile.h	FUNCTION_58	CALL_1
0x4000c9d	          0x4889c6	                            mov rsi, rax	       323	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x4000ca0	      0xbf00000000	                              mov edi, 0	       323	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x4000ca5	      0xb800000000	                              mov eax, 0	       323	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x4000caa	      0xe800000000	                          call 0x4000caf	       323	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x4000caf	          0x488b3b	                    mov rdi, qword [rbx]	       220	lockfile.h	FUNCTION_58	CALL_1
0x4000cb2	      0xe800000000	                          call 0x4000cb7	       220	lockfile.h	FUNCTION_58	CALL_1
0x4000cb7	        0x49890424	                    mov qword [r12], rax	       325	shallow.c	FUNCTION_12	IF_1	CALL_8
0x4000cbb	            0xeb08	                           jmp 0x4000cc5	       325	shallow.c	FUNCTION_12	IF_1	CALL_8
0x4000cbd	    0x49c704240000	                      mov qword [r12], 0	       331	shallow.c	FUNCTION_12	ELSE_1
0x4000cc5	          0x4889e7	                            mov rdi, rsp	       332	shallow.c	FUNCTION_12	CALL_9
0x4000cc8	      0xe800000000	                          call 0x4000ccd	       332	shallow.c	FUNCTION_12	CALL_9
0x4000ccd	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       333	shallow.c	FUNCTION_12
0x4000cd2	    0x644833042528	                xor rax, qword fs:[0x28]	       333	shallow.c	FUNCTION_12
0x4000cdb	            0x7405	                            je 0x4000ce2	       333	shallow.c	FUNCTION_12
0x4000cdd	      0xe800000000	                          call 0x4000ce2	       333	shallow.c	FUNCTION_12
0x4000ce2	        0x4883c428	                           add rsp, 0x28	       333	shallow.c	FUNCTION_12
0x4000ce6	              0x5b	                                 pop rbx	       333	shallow.c	FUNCTION_12
0x4000ce7	              0x5d	                                 pop rbp	       333	shallow.c	FUNCTION_12
0x4000ce8	            0x415c	                                 pop r12	       333	shallow.c	FUNCTION_12
0x4000cea	            0x415d	                                 pop r13	       333	shallow.c	FUNCTION_12
0x4000cec	              0xc3	                                     ret	       333	shallow.c	FUNCTION_12
update_refstatus	IF,2:WHILE,0:FOR,1:SWITCH,0:ELSE,0:CALL,0:functions,0:DO,0	19
0x4000040	          0x4885ff	                           test rdi, rdi	       655	shallow.c	FUNCTION_24	IF_1
0x4000043	            0x7430	                            je 0x4000075	       655	shallow.c	FUNCTION_24	IF_1
0x4000045	          0x4189f0	                            mov r8d, esi	       657	shallow.c	FUNCTION_24	FOR_1
0x4000048	            0x85f6	                           test esi, esi	       657	shallow.c	FUNCTION_24	FOR_1
0x400004a	            0x7429	                            je 0x4000075	       657	shallow.c	FUNCTION_24	FOR_1
0x400004c	      0xb900000000	                              mov ecx, 0	       657	shallow.c	FUNCTION_24	FOR_1
0x4000051	    0x41b901000000	                              mov r9d, 1	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4000057	            0x89c8	                            mov eax, ecx	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4000059	          0xc1e805	                              shr eax, 5	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x400005c	            0x89c0	                            mov eax, eax	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x400005e	          0x4489ce	                            mov esi, r9d	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4000061	            0xd3e6	                             shl esi, cl	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4000063	          0x853482	          test dword [rdx + rax*4], esi 	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4000066	            0x7404	                            je 0x400006c	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4000068	        0x83048f01	              add dword [rdi + rcx*4], 1	       659	shallow.c	FUNCTION_24	FOR_1	IF_2
0x400006c	        0x4883c101	                              add rcx, 1	       659	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4000070	          0x4139c8	                            cmp r8d, ecx	       657	shallow.c	FUNCTION_24	FOR_1
0x4000073	            0x77e2	                            ja 0x4000057	       657	shallow.c	FUNCTION_24	FOR_1
0x4000075	            0xf3c3	                                     ret	       657	shallow.c	FUNCTION_24	FOR_1
paint_alloc	IF,2:WHILE,0:FOR,0:SWITCH,0:ELSE,0:CALL,2:functions,0:DO,0	47
0x4000216	              0x55	                                push rbp	       443	shallow.c	FUNCTION_19
0x4000217	              0x53	                                push rbx	       443	shallow.c	FUNCTION_19
0x4000218	        0x4883ec08	                              sub rsp, 8	       443	shallow.c	FUNCTION_19
0x400021c	          0x4889fd	                            mov rbp, rdi	       443	shallow.c	FUNCTION_19
0x400021f	          0x8b4718	            mov eax, dword [rdi + 0x18] 	       445	shallow.c	FUNCTION_19
0x4000222	          0x8d581f	                   lea ebx, [rax + 0x1f]	       445	shallow.c	FUNCTION_19
0x4000225	          0xc1eb05	                              shr ebx, 5	       445	shallow.c	FUNCTION_19
0x4000228	          0xc1e302	                              shl ebx, 2	       445	shallow.c	FUNCTION_19
0x400022b	          0x8b7738	            mov esi, dword [rdi + 0x38] 	       447	shallow.c	FUNCTION_19	IF_1
0x400022e	            0x85f6	                           test esi, esi	       447	shallow.c	FUNCTION_19	IF_1
0x4000230	            0x740f	                            je 0x4000241	       447	shallow.c	FUNCTION_19	IF_1
0x4000232	            0x89da	                            mov edx, ebx	       447	shallow.c	FUNCTION_19	IF_1
0x4000234	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       447	shallow.c	FUNCTION_19	IF_1
0x4000238	        0x482b4728	             sub rax, qword [rdi + 0x28]	       447	shallow.c	FUNCTION_19	IF_1
0x400023c	          0x4839c2	                            cmp rdx, rax	       447	shallow.c	FUNCTION_19	IF_1
0x400023f	            0x7e5c	                           jle 0x400029d	       447	shallow.c	FUNCTION_19	IF_1
0x4000241	    0x81fb00000800	                        cmp ebx, 0x80000	       448	shallow.c	FUNCTION_19	IF_1	IF_2
0x4000247	            0x7611	                           jbe 0x400025a	       448	shallow.c	FUNCTION_19	IF_1	IF_2
0x4000249	            0x89de	                            mov esi, ebx	       449	shallow.c	FUNCTION_19	IF_1	IF_2	CALL_1
0x400024b	      0xbf00000000	                              mov edi, 0	       449	shallow.c	FUNCTION_19	IF_1	IF_2	CALL_1
0x4000250	      0xb800000000	                              mov eax, 0	       449	shallow.c	FUNCTION_19	IF_1	IF_2	CALL_1
0x4000255	      0xe800000000	                          call 0x400025a	       449	shallow.c	FUNCTION_19	IF_1	IF_2	CALL_1
0x400025a	          0x83c601	                              add esi, 1	       451	shallow.c	FUNCTION_19	IF_1
0x400025d	          0x897538	            mov dword [rbp + 0x38], esi 	       451	shallow.c	FUNCTION_19	IF_1
0x4000260	            0x89f6	                            mov esi, esi	       452	shallow.c	FUNCTION_19	IF_1
0x4000262	        0x48c1e603	                              shl rsi, 3	       452	shallow.c	FUNCTION_19	IF_1
0x4000266	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	       452	shallow.c	FUNCTION_19	IF_1
0x400026a	      0xe800000000	                          call 0x400026f	       452	shallow.c	FUNCTION_19	IF_1
0x400026f	        0x48894520	            mov qword [rbp + 0x20], rax 	       452	shallow.c	FUNCTION_19	IF_1
0x4000273	      0xbf00000800	                        mov edi, 0x80000	       453	shallow.c	FUNCTION_19	IF_1	CALL_2
0x4000278	      0xe800000000	                          call 0x400027d	       453	shallow.c	FUNCTION_19	IF_1	CALL_2
0x400027d	        0x48894528	            mov qword [rbp + 0x28], rax 	       453	shallow.c	FUNCTION_19	IF_1	CALL_2
0x4000281	          0x8b5538	            mov edx, dword [rbp + 0x38] 	       454	shallow.c	FUNCTION_19	IF_1
0x4000284	          0x8d4aff	                      lea ecx, [rdx - 1]	       454	shallow.c	FUNCTION_19	IF_1
0x4000287	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	       454	shallow.c	FUNCTION_19	IF_1
0x400028b	        0x488904ca	            mov qword [rdx + rcx*8], rax	       454	shallow.c	FUNCTION_19	IF_1
0x400028f	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       455	shallow.c	FUNCTION_19	IF_1
0x4000293	    0x480500000800	                        add rax, 0x80000	       455	shallow.c	FUNCTION_19	IF_1
0x4000299	        0x48894530	            mov qword [rbp + 0x30], rax 	       455	shallow.c	FUNCTION_19	IF_1
0x400029d	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       457	shallow.c	FUNCTION_19
0x40002a1	            0x89db	                            mov ebx, ebx	       458	shallow.c	FUNCTION_19
0x40002a3	          0x4801c3	                            add rbx, rax	       458	shallow.c	FUNCTION_19
0x40002a6	        0x48895d28	            mov qword [rbp + 0x28], rbx 	       458	shallow.c	FUNCTION_19
0x40002aa	        0x4883c408	                              add rsp, 8	       460	shallow.c	FUNCTION_19
0x40002ae	              0x5b	                                 pop rbx	       460	shallow.c	FUNCTION_19
0x40002af	              0x5d	                                 pop rbp	       460	shallow.c	FUNCTION_19
0x40002b0	              0xc3	                                     ret	       460	shallow.c	FUNCTION_19
prune_shallow	IF,3:WHILE,0:FOR,0:SWITCH,0:ELSE,1:CALL,14:functions,0:DO,0	66
0x4000d12	              0x53	                                push rbx	       355	shallow.c	FUNCTION_15
0x4000d13	        0x4883ec40	                           sub rsp, 0x40	       355	shallow.c	FUNCTION_15
0x4000d17	    0x64488b042528	                mov rax, qword fs:[0x28]	       355	shallow.c	FUNCTION_15
0x4000d20	      0x4889442438	             mov qword [rsp + 0x38], rax	       355	shallow.c	FUNCTION_15
0x4000d25	            0x31c0	                            xor eax, eax	       355	shallow.c	FUNCTION_15
0x4000d27	    0x48c704240000	                      mov qword [rsp], 0	       357	shallow.c	FUNCTION_15
0x4000d2f	    0x48c744240800	                  mov qword [rsp + 8], 0	       357	shallow.c	FUNCTION_15
0x4000d38	    0x48c744241000	               mov qword [rsp + 0x10], 0	       357	shallow.c	FUNCTION_15
0x4000d41	            0x85ff	                           test edi, edi	       360	shallow.c	FUNCTION_15	IF_1
0x4000d43	            0x7439	                            je 0x4000d7e	       360	shallow.c	FUNCTION_15	IF_1
0x4000d45	      0x4889642420	             mov qword [rsp + 0x20], rsp	       268	shallow.c	FUNCTION_9
0x4000d4a	    0xc74424280000	               mov dword [rsp + 0x28], 0	       269	shallow.c	FUNCTION_9
0x4000d52	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	       270	shallow.c	FUNCTION_9
0x4000d5a	    0xc74424300300	               mov dword [rsp + 0x30], 3	       271	shallow.c	FUNCTION_9
0x4000d62	      0x488d742420	                   lea rsi, [rsp + 0x20]	       272	shallow.c	FUNCTION_9	CALL_1
0x4000d67	      0xbf00000000	                              mov edi, 0	       272	shallow.c	FUNCTION_9	CALL_1
0x4000d6c	      0xe800000000	                          call 0x4000d71	       272	shallow.c	FUNCTION_9	CALL_1
0x4000d71	          0x4889e7	                            mov rdi, rsp	       362	shallow.c	FUNCTION_15	IF_1	CALL_2
0x4000d74	      0xe800000000	                          call 0x4000d79	       362	shallow.c	FUNCTION_15	IF_1	CALL_2
0x4000d79	      0xe9b5000000	                           jmp 0x4000e33	       362	shallow.c	FUNCTION_15	IF_1	CALL_2
0x4000d7e	      0xe800000000	                          call 0x4000d83	       365	shallow.c	FUNCTION_15	CALL_4
0x4000d83	      0xb900000000	                              mov ecx, 0	       175	lockfile.h	FUNCTION_55	CALL_1
0x4000d88	      0xba01000000	                              mov edx, 1	       175	lockfile.h	FUNCTION_55	CALL_1
0x4000d8d	          0x4889c6	                            mov rsi, rax	       175	lockfile.h	FUNCTION_55	CALL_1
0x4000d90	      0xbf00000000	                              mov edi, 0	       175	lockfile.h	FUNCTION_55	CALL_1
0x4000d95	      0xe800000000	                          call 0x4000d9a	       175	lockfile.h	FUNCTION_55	CALL_1
0x4000d9a	            0x89c3	                            mov ebx, eax	       175	lockfile.h	FUNCTION_55	CALL_1
0x4000d9c	      0xe8daf3ffff	  call sym.check_shallow_file_for_update	       367	shallow.c	FUNCTION_15	CALL_5
0x4000da1	      0x4889642420	             mov qword [rsp + 0x20], rsp	       268	shallow.c	FUNCTION_9
0x4000da6	    0xc74424280000	               mov dword [rsp + 0x28], 0	       269	shallow.c	FUNCTION_9
0x4000dae	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	       270	shallow.c	FUNCTION_9
0x4000db6	    0xc74424300100	               mov dword [rsp + 0x30], 1	       271	shallow.c	FUNCTION_9
0x4000dbe	      0x488d742420	                   lea rsi, [rsp + 0x20]	       272	shallow.c	FUNCTION_9	CALL_1
0x4000dc3	      0xbf00000000	                              mov edi, 0	       272	shallow.c	FUNCTION_9	CALL_1
0x4000dc8	      0xe800000000	                          call 0x4000dcd	       272	shallow.c	FUNCTION_9	CALL_1
0x4000dcd	      0x837c242c00	               cmp dword [rsp + 0x2c], 0	       368	shallow.c	FUNCTION_15	IF_2	CALL_6
0x4000dd2	            0x7440	                            je 0x4000e14	       368	shallow.c	FUNCTION_15	IF_2	CALL_6
0x4000dd4	      0x488b542408	                mov rdx, qword [rsp + 8]	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x4000dd9	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x4000dde	            0x89df	                            mov edi, ebx	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x4000de0	      0xe800000000	                          call 0x4000de5	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x4000de5	          0x4885c0	                           test rax, rax	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x4000de8	            0x791e	                           jns 0x4000e08	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x4000dea	    0x488b3d000000	            mov rdi, qword [0x04000df1] 	       220	lockfile.h	FUNCTION_58	CALL_1
0x4000df1	      0xe800000000	                          call 0x4000df6	       220	lockfile.h	FUNCTION_58	CALL_1
0x4000df6	          0x4889c6	                            mov rsi, rax	       370	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4000df9	      0xbf00000000	                              mov edi, 0	       370	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4000dfe	      0xb800000000	                              mov eax, 0	       370	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4000e03	      0xe800000000	                          call 0x4000e08	       370	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4000e08	      0xbf00000000	                              mov edi, 0	       372	shallow.c	FUNCTION_15	IF_2	CALL_10
0x4000e0d	      0xe800000000	                          call 0x4000e12	       372	shallow.c	FUNCTION_15	IF_2	CALL_10
0x4000e12	            0xeb17	                           jmp 0x4000e2b	       372	shallow.c	FUNCTION_15	IF_2	CALL_10
0x4000e14	      0xe800000000	                          call 0x4000e19	       374	shallow.c	FUNCTION_15	ELSE_1	CALL_12
0x4000e19	          0x4889c7	                            mov rdi, rax	       374	shallow.c	FUNCTION_15	ELSE_1	CALL_12
0x4000e1c	      0xe800000000	                          call 0x4000e21	       374	shallow.c	FUNCTION_15	ELSE_1	CALL_12
0x4000e21	      0xbf00000000	                              mov edi, 0	       304	lockfile.h	FUNCTION_64	CALL_1
0x4000e26	      0xe800000000	                          call 0x4000e2b	       304	lockfile.h	FUNCTION_64	CALL_1
0x4000e2b	          0x4889e7	                            mov rdi, rsp	       377	shallow.c	FUNCTION_15	CALL_14
0x4000e2e	      0xe800000000	                          call 0x4000e33	       377	shallow.c	FUNCTION_15	CALL_14
0x4000e33	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       378	shallow.c	FUNCTION_15
0x4000e38	    0x644833042528	                xor rax, qword fs:[0x28]	       378	shallow.c	FUNCTION_15
0x4000e41	            0x7405	                            je 0x4000e48	       378	shallow.c	FUNCTION_15
0x4000e43	      0xe800000000	                          call 0x4000e48	       378	shallow.c	FUNCTION_15
0x4000e48	        0x4883c440	                           add rsp, 0x40	       378	shallow.c	FUNCTION_15
0x4000e4c	              0x5b	                                 pop rbx	       378	shallow.c	FUNCTION_15
0x4000e4d	              0xc3	                                     ret	       378	shallow.c	FUNCTION_15
set_alternate_shallow_file	IF,2:WHILE,0:FOR,0:SWITCH,0:ELSE,0:CALL,3:functions,0:DO,0	21
0x4000427	              0x53	                                push rbx	        21	shallow.c	FUNCTION_1
0x4000428	    0x833d00000000	cmp dword [0x0400042f], 0xffffffffffffffff	        22	shallow.c	FUNCTION_1	IF_1
0x400042f	            0x740f	                            je 0x4000440	        22	shallow.c	FUNCTION_1	IF_1
0x4000431	      0xbf00000000	                              mov edi, 0	        23	shallow.c	FUNCTION_1	CALL_1
0x4000436	      0xb800000000	                              mov eax, 0	        23	shallow.c	FUNCTION_1	CALL_1
0x400043b	      0xe800000000	                          call 0x4000440	        23	shallow.c	FUNCTION_1	CALL_1
0x4000440	          0x4889fb	                            mov rbx, rdi	        23	shallow.c	FUNCTION_1	CALL_1
0x4000443	    0x488b3d000000	            mov rdi, qword [0x0400044a] 	        24	shallow.c	FUNCTION_1	IF_2
0x400044a	            0x85f6	                           test esi, esi	        24	shallow.c	FUNCTION_1	IF_2
0x400044c	            0x7505	                           jne 0x4000453	        24	shallow.c	FUNCTION_1	IF_2
0x400044e	          0x4885ff	                           test rdi, rdi	        24	shallow.c	FUNCTION_1	IF_2
0x4000451	            0x751e	                           jne 0x4000471	        24	shallow.c	FUNCTION_1	IF_2
0x4000453	      0xe800000000	                          call 0x4000458	        26	shallow.c	FUNCTION_1	CALL_2
0x4000458	      0xb800000000	                              mov eax, 0	       924	git-compat-util.h	FUNCTION_45	CALL_1
0x400045d	          0x4885db	                           test rbx, rbx	       924	git-compat-util.h	FUNCTION_45	CALL_1
0x4000460	            0x7408	                            je 0x400046a	       924	git-compat-util.h	FUNCTION_45	CALL_1
0x4000462	          0x4889df	                            mov rdi, rbx	       924	git-compat-util.h	FUNCTION_45	CALL_1
0x4000465	      0xe800000000	                          call 0x400046a	       924	git-compat-util.h	FUNCTION_45	CALL_1
0x400046a	    0x488905000000	            mov qword [0x04000471], rax 	        27	shallow.c	FUNCTION_1	CALL_3
0x4000471	              0x5b	                                 pop rbx	        28	shallow.c	FUNCTION_1
0x4000472	              0xc3	                                     ret	        28	shallow.c	FUNCTION_1
write_one_shallow	IF,5:WHILE,0:FOR,0:SWITCH,0:ELSE,1:CALL,6:functions,0:DO,0	68
0x4000085	            0x4154	                                push r12	       238	shallow.c	FUNCTION_8
0x4000087	              0x55	                                push rbp	       238	shallow.c	FUNCTION_8
0x4000088	              0x53	                                push rbx	       238	shallow.c	FUNCTION_8
0x4000089	          0x4889fb	                            mov rbx, rdi	       238	shallow.c	FUNCTION_8
0x400008c	          0x4889f5	                            mov rbp, rsi	       238	shallow.c	FUNCTION_8
0x400008f	      0xe800000000	                          call 0x4000094	       240	shallow.c	FUNCTION_8	CALL_1
0x4000094	        0x837b14ff	cmp dword [rbx + 0x14], 0xffffffffffffffff	       241	shallow.c	FUNCTION_8	IF_1
0x4000098	     0xf85d3000000	                           jne 0x4000171	       241	shallow.c	FUNCTION_8	IF_1
0x400009e	          0x4989c4	                            mov r12, rax	       241	shallow.c	FUNCTION_8	IF_1
0x40000a1	        0xf6451001	               test byte [rbp + 0x10], 1	       243	shallow.c	FUNCTION_8	IF_2
0x40000a5	            0x7441	                            je 0x40000e8	       243	shallow.c	FUNCTION_8	IF_2
0x40000a7	          0x4889df	                            mov rdi, rbx	       244	shallow.c	FUNCTION_8	IF_2	CALL_2
0x40000aa	      0xe800000000	                          call 0x40000af	       244	shallow.c	FUNCTION_8	IF_2	CALL_2
0x40000af	          0x4885c0	                           test rax, rax	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0x40000b2	            0x7405	                            je 0x40000b9	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0x40000b4	          0xf60010	                   test byte [rax], 0x10	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0x40000b7	            0x752f	                           jne 0x40000e8	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0x40000b9	        0xf6451002	               test byte [rbp + 0x10], 2	       246	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4
0x40000bd	     0xf84ae000000	                            je 0x4000171	       246	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4
0x40000c3	        0x488d7804	                      lea rdi, [rax + 4]	       248	shallow.c	FUNCTION_8	IF_2	IF_3	CALL_3
0x40000c7	      0xe800000000	                          call 0x40000cc	       247	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4
0x40000cc	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_191
0x40000cf	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_191
0x40000d4	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_191
0x40000d9	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_191
0x40000de	      0xe800000000	                          call 0x40000e3	       104	stdio2.h	CALL_191
0x40000e3	      0xe989000000	                           jmp 0x4000171	       104	stdio2.h	CALL_191
0x40000e8	        0x83450c01	                add dword [rbp + 0xc], 1	       252	shallow.c	FUNCTION_8
0x40000ec	        0x837d0800	                  cmp dword [rbp + 8], 0	       253	shallow.c	FUNCTION_8	IF_5
0x40000f0	            0x7418	                            je 0x400010a	       253	shallow.c	FUNCTION_8	IF_5
0x40000f2	          0x4c89e2	                            mov rdx, r12	       254	shallow.c	FUNCTION_8	CALL_4
0x40000f5	      0xbe00000000	                              mov esi, 0	       254	shallow.c	FUNCTION_8	CALL_4
0x40000fa	        0x488b7d00	                    mov rdi, qword [rbp]	       254	shallow.c	FUNCTION_8	CALL_4
0x40000fe	      0xb800000000	                              mov eax, 0	       254	shallow.c	FUNCTION_8	CALL_4
0x4000103	      0xe800000000	                          call 0x4000108	       254	shallow.c	FUNCTION_8	CALL_4
0x4000108	            0xeb67	                           jmp 0x4000171	       254	shallow.c	FUNCTION_8	CALL_4
0x400010a	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_86	CALL_2
0x400010f	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_86	CALL_2
0x4000116	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_86	CALL_2
0x4000119	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_86	CALL_2
0x400011b	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_86	CALL_2
0x400011e	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_86	CALL_2
0x4000122	          0x4c89e6	                            mov rsi, r12	       279	strbuf.h	FUNCTION_86	CALL_2
0x4000125	        0x488b7d00	                    mov rdi, qword [rbp]	       279	strbuf.h	FUNCTION_86	CALL_2
0x4000129	      0xe800000000	                          call 0x400012e	       279	strbuf.h	FUNCTION_86	CALL_2
0x400012e	        0x488b5d00	                    mov rbx, qword [rbp]	       257	shallow.c	FUNCTION_8	ELSE_1	CALL_6
0x4000132	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_83
0x4000135	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_83
0x4000138	            0x740a	                            je 0x4000144	       141	strbuf.h	FUNCTION_83
0x400013a	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_85	IF_1	CALL_1
0x400013e	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_85	IF_1	CALL_1
0x4000142	            0x750d	                           jne 0x4000151	       227	strbuf.h	FUNCTION_85	IF_1	CALL_1
0x4000144	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_85	CALL_2
0x4000149	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_85	CALL_2
0x400014c	      0xe800000000	                          call 0x4000151	       228	strbuf.h	FUNCTION_85	CALL_2
0x4000151	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_85
0x4000155	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_85
0x4000159	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_85
0x400015d	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_85
0x4000161	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_85
0x4000165	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_85
0x4000169	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_85
0x400016d	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_85
0x4000171	      0xb800000000	                              mov eax, 0	       260	shallow.c	FUNCTION_8
0x4000176	              0x5b	                                 pop rbx	       260	shallow.c	FUNCTION_8
0x4000177	              0x5d	                                 pop rbp	       260	shallow.c	FUNCTION_8
0x4000178	            0x415c	                                 pop r12	       260	shallow.c	FUNCTION_8
0x400017a	              0xc3	                                     ret	       260	shallow.c	FUNCTION_8
assign_shallow_commits_to_refs	IF,3:WHILE,0:FOR,7:SWITCH,0:ELSE,1:CALL,18:functions,0:DO,0	513
0x4001093	            0x4157	                                push r15	       563	shallow.c	FUNCTION_22
0x4001095	            0x4156	                                push r14	       563	shallow.c	FUNCTION_22
0x4001097	            0x4155	                                push r13	       563	shallow.c	FUNCTION_22
0x4001099	            0x4154	                                push r12	       563	shallow.c	FUNCTION_22
0x400109b	              0x55	                                push rbp	       563	shallow.c	FUNCTION_22
0x400109c	              0x53	                                push rbx	       563	shallow.c	FUNCTION_22
0x400109d	    0x4881eca80000	                           sub rsp, 0xa8	       563	shallow.c	FUNCTION_22
0x40010a4	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       563	shallow.c	FUNCTION_22
0x40010a9	      0x4889742438	             mov qword [rsp + 0x38], rsi	       563	shallow.c	FUNCTION_22
0x40010ae	      0x4889542428	             mov qword [rsp + 0x28], rdx	       563	shallow.c	FUNCTION_22
0x40010b3	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	       563	shallow.c	FUNCTION_22
0x40010bc	    0x48898c249800	             mov qword [rsp + 0x98], rcx	       563	shallow.c	FUNCTION_22
0x40010c4	            0x31c9	                            xor ecx, ecx	       563	shallow.c	FUNCTION_22
0x40010c6	          0x488b07	                    mov rax, qword [rdi]	       564	shallow.c	FUNCTION_22
0x40010c9	          0x488b00	                    mov rax, qword [rax]	       564	shallow.c	FUNCTION_22
0x40010cc	      0x4889442420	             mov qword [rsp + 0x20], rax	       564	shallow.c	FUNCTION_22
0x40010d1	        0x488b4728	            mov rax, qword [rdi + 0x28] 	       565	shallow.c	FUNCTION_22
0x40010d5	      0x4889442408	                mov qword [rsp + 8], rax	       565	shallow.c	FUNCTION_22
0x40010da	    0x48b8ffffffff	                 movabs rax, 0x1ffffffff	       570	shallow.c	FUNCTION_22	CALL_1
0x40010e4	    0x482305000000	             and rax, qword [0x040010eb]	       570	shallow.c	FUNCTION_22	CALL_1
0x40010eb	    0x48ba00000000	                 movabs rdx, 0x100000000	       570	shallow.c	FUNCTION_22	CALL_1
0x40010f5	          0x4839d0	                            cmp rax, rdx	       570	shallow.c	FUNCTION_22	CALL_1
0x40010f8	            0x741e	                            je 0x4001118	       570	shallow.c	FUNCTION_22	CALL_1
0x40010fa	      0xb900000000	                              mov ecx, 0	       570	shallow.c	FUNCTION_22	CALL_1
0x40010ff	      0xba00000000	                              mov edx, 0	       570	shallow.c	FUNCTION_22	CALL_1
0x4001104	      0xbe3a020000	                          mov esi, 0x23a	       570	shallow.c	FUNCTION_22	CALL_1
0x4001109	      0xbf00000000	                              mov edi, 0	       570	shallow.c	FUNCTION_22	CALL_1
0x400110e	      0xb800000000	                              mov eax, 0	       570	shallow.c	FUNCTION_22	CALL_1
0x4001113	      0xe800000000	                          call 0x4001118	       570	shallow.c	FUNCTION_22	CALL_1
0x4001118	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       571	shallow.c	FUNCTION_22
0x400111d	          0x8b5020	            mov edx, dword [rax + 0x20] 	       571	shallow.c	FUNCTION_22
0x4001120	           0x35010	             add edx, dword [rax + 0x10]	       571	shallow.c	FUNCTION_22
0x4001123	          0x4863d2	                         movsxd rdx, edx	       571	shallow.c	FUNCTION_22
0x4001126	    0x48b8ffffffff	         movabs rax, 0x3fffffffffffffff 	       795	git-compat-util.h	FUNCTION_41	IF_1
0x4001130	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_41	IF_1
0x4001133	            0x7614	                           jbe 0x4001149	       795	git-compat-util.h	FUNCTION_41	IF_1
0x4001135	      0xbe04000000	                              mov esi, 4	       796	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x400113a	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x400113f	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x4001144	      0xe800000000	                          call 0x4001149	       796	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x4001149	    0x488d3c950000	                        lea rdi, [rdx*4]	       571	shallow.c	FUNCTION_22
0x4001151	      0xe800000000	                          call 0x4001156	       571	shallow.c	FUNCTION_22
0x4001156	      0x4889442418	             mov qword [rsp + 0x18], rax	       571	shallow.c	FUNCTION_22
0x400115b	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       572	shallow.c	FUNCTION_22	FOR_1
0x4001160	        0x83791000	               cmp dword [rcx + 0x10], 0	       572	shallow.c	FUNCTION_22	FOR_1
0x4001164	            0x7424	                            je 0x400118a	       572	shallow.c	FUNCTION_22	FOR_1
0x4001166	      0xba00000000	                              mov edx, 0	       572	shallow.c	FUNCTION_22	FOR_1
0x400116b	          0x4989c0	                             mov r8, rax	       572	shallow.c	FUNCTION_22	FOR_1
0x400116e	          0x8d4201	                      lea eax, [rdx + 1]	       573	shallow.c	FUNCTION_22	FOR_1
0x4001171	            0x89d7	                            mov edi, edx	       573	shallow.c	FUNCTION_22	FOR_1
0x4001173	        0x488b7108	                mov rsi, qword [rcx + 8]	       573	shallow.c	FUNCTION_22	FOR_1
0x4001177	          0x8b34be	            mov esi, dword [rsi + rdi*4]	       573	shallow.c	FUNCTION_22	FOR_1
0x400117a	          0x4863d2	                         movsxd rdx, edx	       573	shallow.c	FUNCTION_22	FOR_1
0x400117d	        0x41893490	             mov dword [r8 + rdx*4], esi	       573	shallow.c	FUNCTION_22	FOR_1
0x4001181	            0x89c2	                            mov edx, eax	       573	shallow.c	FUNCTION_22	FOR_1
0x4001183	          0x394110	            cmp dword [rcx + 0x10], eax 	       572	shallow.c	FUNCTION_22	FOR_1
0x4001186	            0x77e6	                            ja 0x400116e	       572	shallow.c	FUNCTION_22	FOR_1
0x4001188	            0xeb05	                           jmp 0x400118f	       572	shallow.c	FUNCTION_22	FOR_1
0x400118a	      0xb800000000	                              mov eax, 0	       567	shallow.c	FUNCTION_22
0x400118f	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       574	shallow.c	FUNCTION_22	FOR_2
0x4001194	        0x83792000	               cmp dword [rcx + 0x20], 0	       574	shallow.c	FUNCTION_22	FOR_2
0x4001198	            0x7428	                            je 0x40011c2	       574	shallow.c	FUNCTION_22	FOR_2
0x400119a	      0xba00000000	                              mov edx, 0	       574	shallow.c	FUNCTION_22	FOR_2
0x400119f	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	       574	shallow.c	FUNCTION_22	FOR_2
0x40011a4	          0x8d6801	                      lea ebp, [rax + 1]	       575	shallow.c	FUNCTION_22	FOR_2
0x40011a7	            0x89d7	                            mov edi, edx	       575	shallow.c	FUNCTION_22	FOR_2
0x40011a9	        0x488b7118	            mov rsi, qword [rcx + 0x18] 	       575	shallow.c	FUNCTION_22	FOR_2
0x40011ad	          0x8b34be	            mov esi, dword [rsi + rdi*4]	       575	shallow.c	FUNCTION_22	FOR_2
0x40011b0	            0x4898	                                    cdqe	       575	shallow.c	FUNCTION_22	FOR_2
0x40011b2	        0x41893480	             mov dword [r8 + rax*4], esi	       575	shallow.c	FUNCTION_22	FOR_2
0x40011b6	          0x83c201	                              add edx, 1	       574	shallow.c	FUNCTION_22	FOR_2
0x40011b9	            0x89e8	                            mov eax, ebp	       575	shallow.c	FUNCTION_22	FOR_2
0x40011bb	          0x395120	            cmp dword [rcx + 0x20], edx 	       574	shallow.c	FUNCTION_22	FOR_2
0x40011be	            0x77e4	                            ja 0x40011a4	       574	shallow.c	FUNCTION_22	FOR_2
0x40011c0	            0xeb02	                           jmp 0x40011c4	       574	shallow.c	FUNCTION_22	FOR_2
0x40011c2	            0x89c5	                            mov ebp, eax	       574	shallow.c	FUNCTION_22	FOR_2
0x40011c4	      0xe800000000	                          call 0x40011c9	       581	shallow.c	FUNCTION_22	CALL_2
0x40011c9	          0x4189c4	                           mov r12d, eax	       581	shallow.c	FUNCTION_22	CALL_2
0x40011cc	            0x85c0	                           test eax, eax	       582	shallow.c	FUNCTION_22	FOR_3
0x40011ce	            0x742a	                            je 0x40011fa	       582	shallow.c	FUNCTION_22	FOR_3
0x40011d0	      0xbb00000000	                              mov ebx, 0	       582	shallow.c	FUNCTION_22	FOR_3
0x40011d5	            0x89df	                            mov edi, ebx	       583	shallow.c	FUNCTION_22	FOR_3	CALL_3
0x40011d7	      0xe800000000	                          call 0x40011dc	       583	shallow.c	FUNCTION_22	FOR_3	CALL_3
0x40011dc	          0x4885c0	                           test rax, rax	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x40011df	            0x7411	                            je 0x40011f2	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x40011e1	           0xfb610	                   movzx edx, byte [rax]	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x40011e4	          0x83e20e	                            and edx, 0xe	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x40011e7	          0x80fa02	                               cmp dl, 2	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x40011ea	            0x7506	                           jne 0x40011f2	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x40011ec	    0x8120cfbfffff	             and dword [rax], 0xffffbfcf	       587	shallow.c	FUNCTION_22	FOR_3
0x40011f2	          0x83c301	                              add ebx, 1	       582	shallow.c	FUNCTION_22	FOR_3
0x40011f5	          0x4139dc	                           cmp r12d, ebx	       582	shallow.c	FUNCTION_22	FOR_3
0x40011f8	            0x75db	                           jne 0x40011d5	       582	shallow.c	FUNCTION_22	FOR_3
0x40011fa	      0x488d542450	                   lea rdx, [rsp + 0x50]	        90	string3.h	FUNCTION_96	CALL_6
0x40011ff	      0xb908000000	                              mov ecx, 8	        90	string3.h	FUNCTION_96	CALL_6
0x4001204	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_96	CALL_6
0x4001209	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_96	CALL_6
0x400120c	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_96	CALL_6
0x400120f	    0xc74424540100	               mov dword [rsp + 0x54], 1	       430	shallow.c	CALL_2
0x4001217	    0xc7442450fcff	         mov dword [rsp + 0x50], 0xfffc 	       430	shallow.c	CALL_2
0x400121f	      0x488b442408	                mov rax, qword [rsp + 8]	       592	shallow.c	FUNCTION_22
0x4001224	          0x8b4008	                mov eax, dword [rax + 8]	       592	shallow.c	FUNCTION_22
0x4001227	        0x89442468	             mov dword [rsp + 0x68], eax	       592	shallow.c	FUNCTION_22
0x400122b	      0xbe00000000	                              mov esi, 0	       599	shallow.c	FUNCTION_22	CALL_6
0x4001230	      0xbf00000000	                              mov edi, 0	       599	shallow.c	FUNCTION_22	CALL_6
0x4001235	      0xe800000000	                          call 0x400123a	       599	shallow.c	FUNCTION_22	CALL_6
0x400123a	      0xbe00000000	                              mov esi, 0	       600	shallow.c	FUNCTION_22	CALL_7
0x400123f	      0xbf00000000	                              mov edi, 0	       600	shallow.c	FUNCTION_22	CALL_7
0x4001244	      0xe800000000	                          call 0x4001249	       600	shallow.c	FUNCTION_22	CALL_7
0x4001249	          0x4189ed	                           mov r13d, ebp	       603	shallow.c	FUNCTION_22	FOR_4
0x400124c	        0x896c2430	             mov dword [rsp + 0x30], ebp	       603	shallow.c	FUNCTION_22	FOR_4
0x4001250	            0x85ed	                           test ebp, ebp	       603	shallow.c	FUNCTION_22	FOR_4
0x4001252	            0x7430	                            je 0x4001284	       603	shallow.c	FUNCTION_22	FOR_4
0x4001254	      0xbb00000000	                              mov ebx, 0	       603	shallow.c	FUNCTION_22	FOR_4
0x4001259	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	       603	shallow.c	FUNCTION_22	FOR_4
0x400125e	      0x4c8b642418	            mov r12, qword [rsp + 0x18] 	       603	shallow.c	FUNCTION_22	FOR_4
0x4001263	        0x4963049c	         movsxd rax, dword [r12 + rbx*4]	       604	shallow.c	FUNCTION_22	FOR_4	CALL_8
0x4001267	        0x488d0480	                  lea rax, [rax + rax*4]	       604	shallow.c	FUNCTION_22	FOR_4	CALL_8
0x400126b	      0x488d7c8500	                  lea rdi, [rbp + rax*4]	       604	shallow.c	FUNCTION_22	FOR_4	CALL_8
0x4001270	      0xe800000000	                          call 0x4001275	       604	shallow.c	FUNCTION_22	FOR_4	CALL_8
0x4001275	    0x810800400000	                  or dword [rax], 0x4000	       605	shallow.c	FUNCTION_22	FOR_4
0x400127b	        0x4883c301	                              add rbx, 1	       605	shallow.c	FUNCTION_22	FOR_4
0x400127f	          0x4139dd	                           cmp r13d, ebx	       603	shallow.c	FUNCTION_22	FOR_4
0x4001282	            0x77df	                            ja 0x4001263	       603	shallow.c	FUNCTION_22	FOR_4
0x4001284	      0x488b442408	                mov rax, qword [rsp + 8]	       608	shallow.c	FUNCTION_22	FOR_5
0x4001289	        0x83780800	                  cmp dword [rax + 8], 0	       608	shallow.c	FUNCTION_22	FOR_5
0x400128d	     0xf8418020000	                            je 0x40014ab	       608	shallow.c	FUNCTION_22	FOR_5
0x4001293	          0x488b38	                    mov rdi, qword [rax]	       609	shallow.c	FUNCTION_22	CALL_9
0x4001296	    0x48c744244000	               mov qword [rsp + 0x40], 0	       471	shallow.c	FUNCTION_20
0x400129f	        0x8b442468	            mov eax, dword [rsp + 0x68] 	       472	shallow.c	FUNCTION_20
0x40012a3	        0x448d601f	                  lea r12d, [rax + 0x1f]	       472	shallow.c	FUNCTION_20
0x40012a7	        0x41c1ec05	                             shr r12d, 5	       472	shallow.c	FUNCTION_20
0x40012ab	          0x4d63fc	                        movsxd r15, r12d	       473	shallow.c	FUNCTION_20	CALL_1
0x40012ae	    0xc70424000000	                      mov dword [rsp], 0	       795	git-compat-util.h	FUNCTION_41	IF_1
0x40012b5	            0xeb2b	                           jmp 0x40012e2	       795	git-compat-util.h	FUNCTION_41	IF_1
0x40012b7	          0x8b0424	                    mov eax, dword [rsp]	       609	shallow.c	FUNCTION_22	CALL_9
0x40012ba	        0x488d1480	                  lea rdx, [rax + rax*4]	       609	shallow.c	FUNCTION_22	CALL_9
0x40012be	      0x488b442408	                mov rax, qword [rsp + 8]	       609	shallow.c	FUNCTION_22	CALL_9
0x40012c3	          0x488b00	                    mov rax, qword [rax]	       609	shallow.c	FUNCTION_22	CALL_9
0x40012c6	        0x488d3c90	                  lea rdi, [rax + rdx*4]	       609	shallow.c	FUNCTION_22	CALL_9
0x40012ca	    0x48c744244000	               mov qword [rsp + 0x40], 0	       471	shallow.c	FUNCTION_20
0x40012d3	        0x8b442468	            mov eax, dword [rsp + 0x68] 	       472	shallow.c	FUNCTION_20
0x40012d7	        0x448d601f	                  lea r12d, [rax + 0x1f]	       472	shallow.c	FUNCTION_20
0x40012db	        0x41c1ec05	                             shr r12d, 5	       472	shallow.c	FUNCTION_20
0x40012df	          0x4d63fc	                        movsxd r15, r12d	       473	shallow.c	FUNCTION_20	CALL_1
0x40012e2	      0xbe01000000	                              mov esi, 1	       474	shallow.c	FUNCTION_20	CALL_2
0x40012e7	      0xe800000000	                          call 0x40012ec	       474	shallow.c	FUNCTION_20	CALL_2
0x40012ec	          0x4889c5	                            mov rbp, rax	       474	shallow.c	FUNCTION_20	CALL_2
0x40012ef	          0x4885c0	                           test rax, rax	       478	shallow.c	FUNCTION_20	IF_1
0x40012f2	     0xf849e010000	                            je 0x4001496	       478	shallow.c	FUNCTION_20	IF_1
0x40012f8	        0x49c1e702	                              shl r15, 2	       798	git-compat-util.h	FUNCTION_41
0x40012fc	          0x4c89ff	                            mov rdi, r15	       481	shallow.c	FUNCTION_20	CALL_3
0x40012ff	      0xe800000000	                          call 0x4001304	       481	shallow.c	FUNCTION_20	CALL_3
0x4001304	          0x4889c3	                            mov rbx, rax	       481	shallow.c	FUNCTION_20	CALL_3
0x4001307	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       482	shallow.c	FUNCTION_20	CALL_4
0x400130c	      0xe805efffff	                    call sym.paint_alloc	       482	shallow.c	FUNCTION_20	CALL_4
0x4001311	          0x4989c5	                            mov r13, rax	       482	shallow.c	FUNCTION_20	CALL_4
0x4001314	          0x4c89fa	                            mov rdx, r15	        90	string3.h	FUNCTION_96	CALL_6
0x4001317	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_96	CALL_6
0x400131c	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_96	CALL_6
0x400131f	      0xe800000000	                          call 0x4001324	        90	string3.h	FUNCTION_96	CALL_6
0x4001324	          0x8b0c24	                    mov ecx, dword [rsp]	       484	shallow.c	FUNCTION_20
0x4001327	            0x89c8	                            mov eax, ecx	       484	shallow.c	FUNCTION_20
0x4001329	          0xc1e805	                              shr eax, 5	       484	shallow.c	FUNCTION_20
0x400132c	            0x89c0	                            mov eax, eax	       484	shallow.c	FUNCTION_20
0x400132e	      0xba01000000	                              mov edx, 1	       484	shallow.c	FUNCTION_20
0x4001333	            0xd3e2	                             shl edx, cl	       484	shallow.c	FUNCTION_20
0x4001335	      0x4109548500	             or dword [r13 + rax*4], edx	       484	shallow.c	FUNCTION_20
0x400133a	      0x488d742440	                   lea rsi, [rsp + 0x40]	       485	shallow.c	FUNCTION_20	CALL_6
0x400133f	          0x4889ef	                            mov rdi, rbp	       485	shallow.c	FUNCTION_20	CALL_6
0x4001342	      0xe800000000	                          call 0x4001347	       485	shallow.c	FUNCTION_20	CALL_6
0x4001347	      0xe903010000	                           jmp 0x400144f	       485	shallow.c	FUNCTION_20	CALL_6
0x400134c	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       488	shallow.c	FUNCTION_20	WHILE_1	CALL_7
0x4001351	      0xe800000000	                          call 0x4001356	       488	shallow.c	FUNCTION_20	WHILE_1	CALL_7
0x4001356	          0x4889c5	                            mov rbp, rax	       488	shallow.c	FUNCTION_20	WHILE_1	CALL_7
0x4001359	      0xba01000000	                              mov edx, 1	       430	shallow.c	CALL_2
0x400135e	          0x4889c6	                            mov rsi, rax	       430	shallow.c	CALL_2
0x4001361	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       430	shallow.c	CALL_2
0x4001366	      0xe8e7efffff	             call sym.ref_bitmap_at_peek	       430	shallow.c	CALL_2
0x400136b	          0x4989c6	                            mov r14, rax	       430	shallow.c	CALL_2
0x400136e	          0x8b4500	                    mov eax, dword [rbp]	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x4001371	          0xc1e804	                              shr eax, 4	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x4001374	      0x25ffffff07	                      and eax, 0x7ffffff	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x4001379	            0xa803	                              test al, 3	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x400137b	     0xf85ce000000	                           jne 0x400144f	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x4001381	          0x83c801	                               or eax, 1	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x4001384	          0xc1e004	                              shl eax, 4	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x4001387	          0x8b5500	                    mov edx, dword [rbp]	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x400138a	    0x81e20f000080	                     and edx, 0x8000000f	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x4001390	             0x9d0	                             or eax, edx	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x4001392	          0x894500	                    mov dword [rbp], eax	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x4001395	          0x498b36	                    mov rsi, qword [r14]	       497	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x4001398	          0x4885f6	                           test rsi, rsi	       497	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x400139b	            0x7505	                           jne 0x40013a2	       497	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x400139d	          0x4d892e	                    mov qword [r14], r13	       498	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x40013a0	            0xeb53	                           jmp 0x40013f5	       498	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x40013a2	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_93	CALL_3
0x40013a5	          0x4889df	                            mov rdi, rbx	        53	string3.h	FUNCTION_93	CALL_3
0x40013a8	      0xe800000000	                          call 0x40013ad	        53	string3.h	FUNCTION_93	CALL_3
0x40013ad	          0x4585e4	                         test r12d, r12d	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40013b0	            0x7416	                            je 0x40013c8	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40013b2	      0xb800000000	                              mov eax, 0	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40013b7	      0x418b548500	            mov edx, dword [r13 + rax*4]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40013bc	           0x91483	             or dword [rbx + rax*4], edx	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40013bf	        0x4883c001	                              add rax, 1	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40013c3	          0x4139c4	                           cmp r12d, eax	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40013c6	            0x77ef	                            ja 0x40013b7	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40013c8	          0x4c89fa	                            mov rdx, r15	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x40013cb	          0x498b36	                    mov rsi, qword [r14]	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x40013ce	          0x4889df	                            mov rdi, rbx	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x40013d1	      0xe800000000	                          call 0x40013d6	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x40013d6	            0x85c0	                           test eax, eax	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x40013d8	            0x741b	                            je 0x40013f5	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x40013da	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       504	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_11
0x40013df	      0xe832eeffff	                    call sym.paint_alloc	       504	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_11
0x40013e4	          0x498906	                    mov qword [r14], rax	       504	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_11
0x40013e7	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_93	CALL_3
0x40013ea	          0x4889de	                            mov rsi, rbx	        53	string3.h	FUNCTION_93	CALL_3
0x40013ed	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_93	CALL_3
0x40013f0	      0xe800000000	                          call 0x40013f5	        53	string3.h	FUNCTION_93	CALL_3
0x40013f5	    0xf74500004000	                test dword [rbp], 0x4000	       509	shallow.c	FUNCTION_20	WHILE_1	IF_5
0x40013fc	            0x7551	                           jne 0x400144f	       509	shallow.c	FUNCTION_20	WHILE_1	IF_5
0x40013fe	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_54	CALL_1
0x4001403	          0x4889ef	                            mov rdi, rbp	        75	commit.h	FUNCTION_54	CALL_1
0x4001406	      0xe800000000	                          call 0x400140b	        75	commit.h	FUNCTION_54	CALL_1
0x400140b	            0x85c0	                           test eax, eax	       512	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_13
0x400140d	            0x741b	                            je 0x400142a	       512	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_13
0x400140f	        0x488d7d04	                      lea rdi, [rbp + 4]	       514	shallow.c	FUNCTION_20	WHILE_1	CALL_15
0x4001413	      0xe800000000	                          call 0x4001418	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_14
0x4001418	          0x4889c6	                            mov rsi, rax	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_14
0x400141b	      0xbf00000000	                              mov edi, 0	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_14
0x4001420	      0xb800000000	                              mov eax, 0	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_14
0x4001425	      0xe800000000	                          call 0x400142a	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_14
0x400142a	        0x488b6d30	            mov rbp, qword [rbp + 0x30] 	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x400142e	          0x4885ed	                           test rbp, rbp	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x4001431	            0x741c	                            je 0x400144f	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x4001433	        0x488b7d00	                    mov rdi, qword [rbp]	       517	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x4001437	          0xf60710	                   test byte [rdi], 0x10	       517	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x400143a	            0x750a	                           jne 0x4001446	       517	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x400143c	      0x488d742440	                   lea rsi, [rsp + 0x40]	       519	shallow.c	FUNCTION_20	WHILE_1	FOR_2	CALL_16
0x4001441	      0xe800000000	                          call 0x4001446	       519	shallow.c	FUNCTION_20	WHILE_1	FOR_2	CALL_16
0x4001446	        0x488b6d08	                mov rbp, qword [rbp + 8]	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x400144a	          0x4885ed	                           test rbp, rbp	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x400144d	            0x75e4	                           jne 0x4001433	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x400144f	    0x48837c244000	               cmp qword [rsp + 0x40], 0	       486	shallow.c	FUNCTION_20	WHILE_1
0x4001455	     0xf85f1feffff	                           jne 0x400134c	       486	shallow.c	FUNCTION_20	WHILE_1
0x400145b	      0xe800000000	                          call 0x4001460	       523	shallow.c	FUNCTION_20	CALL_17
0x4001460	          0x4189c4	                           mov r12d, eax	       523	shallow.c	FUNCTION_20	CALL_17
0x4001463	            0x85c0	                           test eax, eax	       524	shallow.c	FUNCTION_20	FOR_3
0x4001465	            0x7427	                            je 0x400148e	       524	shallow.c	FUNCTION_20	FOR_3
0x4001467	      0xbd00000000	                              mov ebp, 0	       524	shallow.c	FUNCTION_20	FOR_3
0x400146c	            0x89ef	                            mov edi, ebp	       525	shallow.c	FUNCTION_20	FOR_3	CALL_18
0x400146e	      0xe800000000	                          call 0x4001473	       525	shallow.c	FUNCTION_20	FOR_3	CALL_18
0x4001473	          0x4885c0	                           test rax, rax	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x4001476	            0x740e	                            je 0x4001486	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x4001478	           0xfb610	                   movzx edx, byte [rax]	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x400147b	          0x83e20e	                            and edx, 0xe	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x400147e	          0x80fa02	                               cmp dl, 2	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x4001481	            0x7503	                           jne 0x4001486	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x4001483	          0x8320ef	             and dword [rax], 0xffffffef	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x4001486	          0x83c501	                              add ebp, 1	       524	shallow.c	FUNCTION_20	FOR_3
0x4001489	          0x4139ec	                           cmp r12d, ebp	       524	shallow.c	FUNCTION_20	FOR_3
0x400148c	            0x75de	                           jne 0x400146c	       524	shallow.c	FUNCTION_20	FOR_3
0x400148e	          0x4889df	                            mov rdi, rbx	       530	shallow.c	FUNCTION_20	CALL_19
0x4001491	      0xe800000000	                          call 0x4001496	       530	shallow.c	FUNCTION_20	CALL_19
0x4001496	        0x83042401	                      add dword [rsp], 1	       608	shallow.c	FUNCTION_22	FOR_5
0x400149a	          0x8b0424	                    mov eax, dword [rsp]	       608	shallow.c	FUNCTION_22	FOR_5
0x400149d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       608	shallow.c	FUNCTION_22	FOR_5
0x40014a2	          0x394108	                cmp dword [rcx + 8], eax	       608	shallow.c	FUNCTION_22	FOR_5
0x40014a5	     0xf870cfeffff	                            ja 0x40012b7	       608	shallow.c	FUNCTION_22	FOR_5
0x40014ab	      0x4c8b742438	            mov r14, qword [rsp + 0x38] 	       611	shallow.c	FUNCTION_22	IF_2
0x40014b0	          0x4d85f6	                           test r14, r14	       611	shallow.c	FUNCTION_22	IF_2
0x40014b3	     0xf8499000000	                            je 0x4001552	       611	shallow.c	FUNCTION_22	IF_2
0x40014b9	        0x8b442468	            mov eax, dword [rsp + 0x68] 	       612	shallow.c	FUNCTION_22	IF_2
0x40014bd	          0x8d681f	                   lea ebp, [rax + 0x1f]	       612	shallow.c	FUNCTION_22	IF_2
0x40014c0	          0xc1ed05	                              shr ebp, 5	       612	shallow.c	FUNCTION_22	IF_2
0x40014c3	          0xc1e502	                              shl ebp, 2	       612	shallow.c	FUNCTION_22	IF_2
0x40014c6	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       613	shallow.c	FUNCTION_22	IF_2	CALL_10
0x40014cb	          0x488b00	                    mov rax, qword [rax]	       613	shallow.c	FUNCTION_22	IF_2	CALL_10
0x40014ce	        0x48635008	            movsxd rdx, dword [rax + 8] 	        90	string3.h	FUNCTION_96	CALL_6
0x40014d2	        0x48c1e203	                              shl rdx, 3	        90	string3.h	FUNCTION_96	CALL_6
0x40014d6	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_96	CALL_6
0x40014db	          0x4c89f7	                            mov rdi, r14	        90	string3.h	FUNCTION_96	CALL_6
0x40014de	      0xe800000000	                          call 0x40014e3	        90	string3.h	FUNCTION_96	CALL_6
0x40014e3	        0x8b442430	            mov eax, dword [rsp + 0x30] 	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x40014e7	            0x85c0	                           test eax, eax	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x40014e9	     0xf84fe020000	                            je 0x40017ed	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x40014ef	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x40014f4	          0x4889cb	                            mov rbx, rcx	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x40014f7	          0x8d40ff	                      lea eax, [rax - 1]	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x40014fa	      0x4c8d648104	              lea r12, [rcx + rax*4 + 4]	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x40014ff	          0x4c63ed	                         movsxd r13, ebp	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x4001502	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x4001507	          0x486303	                 movsxd rax, dword [rbx]	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_11
0x400150a	        0x488d0480	                  lea rax, [rax + rax*4]	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_11
0x400150e	      0x488d7c8500	                  lea rdi, [rbp + rax*4]	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_11
0x4001513	      0xe800000000	                          call 0x4001518	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_11
0x4001518	      0xba01000000	                              mov edx, 1	       430	shallow.c	CALL_2
0x400151d	          0x4889c6	                            mov rsi, rax	       430	shallow.c	CALL_2
0x4001520	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       430	shallow.c	CALL_2
0x4001525	      0xe828eeffff	             call sym.ref_bitmap_at_peek	       430	shallow.c	CALL_2
0x400152a	          0x488b38	                    mov rdi, qword [rax]	       617	shallow.c	FUNCTION_22	IF_2	FOR_6	IF_3
0x400152d	          0x4885ff	                           test rdi, rdi	       617	shallow.c	FUNCTION_22	IF_2	FOR_6	IF_3
0x4001530	            0x7412	                            je 0x4001544	       617	shallow.c	FUNCTION_22	IF_2	FOR_6	IF_3
0x4001532	          0x486303	                 movsxd rax, dword [rbx]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x4001535	        0x4d8d3cc6	                  lea r15, [r14 + rax*8]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x4001539	          0x4c89ee	                            mov rsi, r13	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x400153c	      0xe800000000	                          call 0x4001541	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x4001541	          0x498907	                    mov qword [r15], rax	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x4001544	        0x4883c304	                              add rbx, 4	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x4001548	          0x4939dc	                            cmp r12, rbx	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x400154b	            0x75ba	                           jne 0x4001507	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x400154d	      0xe99b020000	                           jmp 0x40017ed	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x4001552	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       669	shallow.c	FUNCTION_25
0x4001557	          0x488b01	                    mov rax, qword [rcx]	       669	shallow.c	FUNCTION_25
0x400155a	          0x488b00	                    mov rax, qword [rax]	       669	shallow.c	FUNCTION_25
0x400155d	        0x48890424	                    mov qword [rsp], rax	       669	shallow.c	FUNCTION_25
0x4001561	        0x488b4128	            mov rax, qword [rcx + 0x28] 	       673	shallow.c	FUNCTION_25
0x4001565	          0x8b4008	                mov eax, dword [rax + 8]	       673	shallow.c	FUNCTION_25
0x4001568	          0x8d683e	                   lea ebp, [rax + 0x3e]	       673	shallow.c	FUNCTION_25
0x400156b	          0x83c01f	                           add eax, 0x1f	       673	shallow.c	FUNCTION_25
0x400156e	           0xf48c5	                          cmovs eax, ebp	       673	shallow.c	FUNCTION_25
0x4001571	          0xc1f805	                              sar eax, 5	       673	shallow.c	FUNCTION_25
0x4001574	            0x89c5	                            mov ebp, eax	       673	shallow.c	FUNCTION_25
0x4001576	        0x89442408	                mov dword [rsp + 8], eax	       673	shallow.c	FUNCTION_25
0x400157a	    0x48b8ffffffff	                 movabs rax, 0x1ffffffff	       676	shallow.c	FUNCTION_25	CALL_1
0x4001584	    0x482305000000	             and rax, qword [0x0400158b]	       676	shallow.c	FUNCTION_25	CALL_1
0x400158b	    0x48ba00000000	                 movabs rdx, 0x100000000	       676	shallow.c	FUNCTION_25	CALL_1
0x4001595	          0x4839d0	                            cmp rax, rdx	       676	shallow.c	FUNCTION_25	CALL_1
0x4001598	            0x741e	                            je 0x40015b8	       676	shallow.c	FUNCTION_25	CALL_1
0x400159a	      0xb900000000	                              mov ecx, 0	       676	shallow.c	FUNCTION_25	CALL_1
0x400159f	      0xba00000000	                              mov edx, 0	       676	shallow.c	FUNCTION_25	CALL_1
0x40015a4	      0xbea4020000	                          mov esi, 0x2a4	       676	shallow.c	FUNCTION_25	CALL_1
0x40015a9	      0xbf00000000	                              mov edi, 0	       676	shallow.c	FUNCTION_25	CALL_1
0x40015ae	      0xb800000000	                              mov eax, 0	       676	shallow.c	FUNCTION_25	CALL_1
0x40015b3	      0xe800000000	                          call 0x40015b8	       676	shallow.c	FUNCTION_25	CALL_1
0x40015b8	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       677	shallow.c	FUNCTION_25	IF_1
0x40015bd	          0x4885ff	                           test rdi, rdi	       677	shallow.c	FUNCTION_25	IF_1
0x40015c0	            0x741b	                            je 0x40015dd	       677	shallow.c	FUNCTION_25	IF_1
0x40015c2	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       678	shallow.c	FUNCTION_25	CALL_2
0x40015c7	        0x488b4028	            mov rax, qword [rax + 0x28] 	       678	shallow.c	FUNCTION_25	CALL_2
0x40015cb	        0x48635008	            movsxd rdx, dword [rax + 8] 	        90	string3.h	FUNCTION_96	CALL_6
0x40015cf	        0x48c1e202	                              shl rdx, 2	        90	string3.h	FUNCTION_96	CALL_6
0x40015d3	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_96	CALL_6
0x40015d8	      0xe800000000	                          call 0x40015dd	        90	string3.h	FUNCTION_96	CALL_6
0x40015dd	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	       681	shallow.c	FUNCTION_25	FOR_1
0x40015e2	      0x41837d2000	               cmp dword [r13 + 0x20], 0	       681	shallow.c	FUNCTION_25	FOR_1
0x40015e7	     0xf8eb5000000	                           jle 0x40016a2	       681	shallow.c	FUNCTION_25	FOR_1
0x40015ed	          0x8d45ff	                      lea eax, [rbp - 1]	       681	shallow.c	FUNCTION_25	FOR_1
0x40015f0	    0x4c8d34850400	                    lea r14, [rax*4 + 4]	       681	shallow.c	FUNCTION_25	FOR_1
0x40015f8	      0xbb00000000	                              mov ebx, 0	       681	shallow.c	FUNCTION_25	FOR_1
0x40015fd	    0x41bc00000000	                             mov r12d, 0	       681	shallow.c	FUNCTION_25	FOR_1
0x4001603	            0xeb14	                           jmp 0x4001619	       681	shallow.c	FUNCTION_25	FOR_1
0x4001605	          0x4439e3	                           cmp ebx, r12d	       682	shallow.c	FUNCTION_25	FOR_1	IF_2
0x4001608	            0x740f	                            je 0x4001619	       682	shallow.c	FUNCTION_25	FOR_1	IF_2
0x400160a	        0x498b4518	            mov rax, qword [r13 + 0x18] 	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x400160e	      0x428b4c3804	         mov ecx, dword [rax + r15 + 4] 	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x4001613	          0x4963d4	                        movsxd rdx, r12d	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x4001616	          0x890c90	            mov dword [rax + rdx*4], ecx	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x4001619	          0x4863c3	                         movsxd rax, ebx	       684	shallow.c	FUNCTION_25	FOR_1	CALL_3
0x400161c	    0x4c8d3c850000	                        lea r15, [rax*4]	       684	shallow.c	FUNCTION_25	FOR_1	CALL_3
0x4001624	        0x498b5518	            mov rdx, qword [r13 + 0x18] 	       684	shallow.c	FUNCTION_25	FOR_1	CALL_3
0x4001628	        0x48630482	         movsxd rax, dword [rdx + rax*4]	       684	shallow.c	FUNCTION_25	FOR_1	CALL_3
0x400162c	        0x488d0480	                  lea rax, [rax + rax*4]	       684	shallow.c	FUNCTION_25	FOR_1	CALL_3
0x4001630	        0x488b0c24	                    mov rcx, qword [rsp]	       684	shallow.c	FUNCTION_25	FOR_1	CALL_3
0x4001634	        0x488d3c81	                  lea rdi, [rcx + rax*4]	       684	shallow.c	FUNCTION_25	FOR_1	CALL_3
0x4001638	      0xe800000000	                          call 0x400163d	       684	shallow.c	FUNCTION_25	FOR_1	CALL_3
0x400163d	      0xba01000000	                              mov edx, 1	       430	shallow.c	CALL_2
0x4001642	          0x4889c6	                            mov rsi, rax	       430	shallow.c	CALL_2
0x4001645	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       430	shallow.c	CALL_2
0x400164a	      0xe803edffff	             call sym.ref_bitmap_at_peek	       430	shallow.c	CALL_2
0x400164f	          0x488b10	                    mov rdx, qword [rax]	       686	shallow.c	FUNCTION_25	FOR_1	IF_3
0x4001652	          0x4885d2	                           test rdx, rdx	       686	shallow.c	FUNCTION_25	FOR_1	IF_3
0x4001655	            0x743c	                            je 0x4001693	       686	shallow.c	FUNCTION_25	FOR_1	IF_3
0x4001657	      0x837c240800	                  cmp dword [rsp + 8], 0	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x400165c	            0x7e35	                           jle 0x4001693	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x400165e	        0x488d4204	                      lea rax, [rdx + 4]	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x4001662	        0x4a8d0c32	                    lea rcx, [rdx + r14]	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x4001666	          0x833a00	                      cmp dword [rdx], 0	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x4001669	            0x7423	                            je 0x400168e	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x400166b	            0xeb0a	                           jmp 0x4001677	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x400166d	        0x4883c004	                              add rax, 4	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x4001671	        0x8378fc00	                  cmp dword [rax - 4], 0	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x4001675	            0x7417	                            je 0x400168e	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x4001677	        0x498b4528	            mov rax, qword [r13 + 0x28] 	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_5
0x400167b	          0x8b7008	                mov esi, dword [rax + 8]	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_5
0x400167e	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_5
0x4001683	      0xe8b8e9ffff	               call sym.update_refstatus	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_5
0x4001688	        0x4183c401	                             add r12d, 1	       691	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x400168c	            0xeb05	                           jmp 0x4001693	       691	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x400168e	          0x4839c1	                            cmp rcx, rax	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x4001691	            0x75da	                           jne 0x400166d	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x4001693	          0x83c301	                              add ebx, 1	       681	shallow.c	FUNCTION_25	FOR_1
0x4001696	        0x413b5d20	            cmp ebx, dword [r13 + 0x20] 	       681	shallow.c	FUNCTION_25	FOR_1
0x400169a	     0xf8c65ffffff	                            jl 0x4001605	       681	shallow.c	FUNCTION_25	FOR_1
0x40016a0	            0xeb06	                           jmp 0x40016a8	       681	shallow.c	FUNCTION_25	FOR_1
0x40016a2	    0x41bc00000000	                             mov r12d, 0	       681	shallow.c	FUNCTION_25	FOR_1
0x40016a8	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       695	shallow.c	FUNCTION_25
0x40016ad	        0x44896320	            mov dword [rbx + 0x20], r12d	       695	shallow.c	FUNCTION_25
0x40016b1	    0x48c744244000	               mov qword [rsp + 0x40], 0	        90	string3.h	FUNCTION_96	CALL_6
0x40016ba	    0x48c744244800	               mov qword [rsp + 0x48], 0	        90	string3.h	FUNCTION_96	CALL_6
0x40016c3	      0x488d742440	                   lea rsi, [rsp + 0x40]	       698	shallow.c	FUNCTION_25	CALL_7
0x40016c8	      0xbf00000000	                              mov edi, 0	       698	shallow.c	FUNCTION_25	CALL_7
0x40016cd	      0xe800000000	                          call 0x40016d2	       698	shallow.c	FUNCTION_25	CALL_7
0x40016d2	      0x488d742440	                   lea rsi, [rsp + 0x40]	       699	shallow.c	FUNCTION_25	CALL_8
0x40016d7	      0xbf00000000	                              mov edi, 0	       699	shallow.c	FUNCTION_25	CALL_8
0x40016dc	      0xe800000000	                          call 0x40016e1	       699	shallow.c	FUNCTION_25	CALL_8
0x40016e1	        0x837b1000	               cmp dword [rbx + 0x10], 0	       702	shallow.c	FUNCTION_25	FOR_3
0x40016e5	     0xf8ee9000000	                           jle 0x40017d4	       702	shallow.c	FUNCTION_25	FOR_3
0x40016eb	          0x8d45ff	                      lea eax, [rbp - 1]	       702	shallow.c	FUNCTION_25	FOR_3
0x40016ee	    0x4c8d24850400	                    lea r12, [rax*4 + 4]	       702	shallow.c	FUNCTION_25	FOR_3
0x40016f6	    0x41be00000000	                             mov r14d, 0	       702	shallow.c	FUNCTION_25	FOR_3
0x40016fc	    0x41bf00000000	                             mov r15d, 0	       702	shallow.c	FUNCTION_25	FOR_3
0x4001702	      0x44897c2420	            mov dword [rsp + 0x20], r15d	       702	shallow.c	FUNCTION_25	FOR_3
0x4001707	          0x4989df	                            mov r15, rbx	       702	shallow.c	FUNCTION_25	FOR_3
0x400170a	            0xeb1c	                           jmp 0x4001728	       702	shallow.c	FUNCTION_25	FOR_3
0x400170c	        0x8b742420	            mov esi, dword [rsp + 0x20] 	       703	shallow.c	FUNCTION_25	FOR_3	IF_5
0x4001710	          0x4139f6	                           cmp r14d, esi	       703	shallow.c	FUNCTION_25	FOR_3	IF_5
0x4001713	            0x7413	                            je 0x4001728	       703	shallow.c	FUNCTION_25	FOR_3	IF_5
0x4001715	        0x498b4708	                mov rax, qword [r15 + 8]	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x4001719	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x400171e	        0x8b4c0804	         mov ecx, dword [rax + rcx + 4] 	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x4001722	          0x4863d6	                         movsxd rdx, esi	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x4001725	          0x890c90	            mov dword [rax + rdx*4], ecx	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x4001728	          0x4963c6	                        movsxd rax, r14d	       705	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x400172b	    0x488d0c850000	                        lea rcx, [rax*4]	       705	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x4001733	      0x48894c2430	             mov qword [rsp + 0x30], rcx	       705	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x4001738	        0x498b5708	                mov rdx, qword [r15 + 8]	       705	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x400173c	        0x48630482	         movsxd rax, dword [rdx + rax*4]	       705	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x4001740	        0x488d0480	                  lea rax, [rax + rax*4]	       705	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x4001744	        0x488b0c24	                    mov rcx, qword [rsp]	       705	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x4001748	        0x488d3c81	                  lea rdi, [rcx + rax*4]	       705	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x400174c	      0xe800000000	                          call 0x4001751	       705	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x4001751	          0x4989c5	                            mov r13, rax	       705	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x4001754	      0xba01000000	                              mov edx, 1	       430	shallow.c	CALL_2
0x4001759	          0x4889c6	                            mov rsi, rax	       430	shallow.c	CALL_2
0x400175c	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       430	shallow.c	CALL_2
0x4001761	      0xe8ecebffff	             call sym.ref_bitmap_at_peek	       430	shallow.c	CALL_2
0x4001766	          0x4889c5	                            mov rbp, rax	       430	shallow.c	CALL_2
0x4001769	        0x48833800	                      cmp qword [rax], 0	       707	shallow.c	FUNCTION_25	FOR_3	IF_6
0x400176d	            0x7450	                            je 0x40017bf	       707	shallow.c	FUNCTION_25	FOR_3	IF_6
0x400176f	      0x837c240800	                  cmp dword [rsp + 8], 0	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x4001774	            0x7e49	                           jle 0x40017bf	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x4001776	      0xbb00000000	                              mov ebx, 0	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x400177b	        0x488b4500	                    mov rax, qword [rbp]	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x400177f	        0x833c1800	                cmp dword [rax + rbx], 0	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x4001783	            0x7431	                            je 0x40017b6	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x4001785	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       712	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_11
0x400178a	        0x8b742448	            mov esi, dword [rsp + 0x48] 	       712	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_11
0x400178e	          0x4c89ef	                            mov rdi, r13	       712	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_11
0x4001791	      0xe800000000	                          call 0x4001796	       712	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_11
0x4001796	            0x85c0	                           test eax, eax	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x4001798	            0x751c	                           jne 0x40017b6	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x400179a	        0x498b4728	            mov rax, qword [r15 + 0x28] 	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_12
0x400179e	          0x8b7008	                mov esi, dword [rax + 8]	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_12
0x40017a1	        0x488b5500	                    mov rdx, qword [rbp]	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_12
0x40017a5	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_12
0x40017aa	      0xe891e8ffff	               call sym.update_refstatus	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_12
0x40017af	      0x8344242001	               add dword [rsp + 0x20], 1	       714	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x40017b4	            0xeb09	                           jmp 0x40017bf	       714	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x40017b6	        0x4883c304	                              add rbx, 4	       714	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x40017ba	          0x4c39e3	                            cmp rbx, r12	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x40017bd	            0x75bc	                           jne 0x400177b	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x40017bf	        0x4183c601	                             add r14d, 1	       702	shallow.c	FUNCTION_25	FOR_3
0x40017c3	        0x453b7710	           cmp r14d, dword [r15 + 0x10] 	       702	shallow.c	FUNCTION_25	FOR_3
0x40017c7	     0xf8c3fffffff	                            jl 0x400170c	       702	shallow.c	FUNCTION_25	FOR_3
0x40017cd	      0x448b7c2420	           mov r15d, dword [rsp + 0x20] 	       702	shallow.c	FUNCTION_25	FOR_3
0x40017d2	            0xeb06	                           jmp 0x40017da	       702	shallow.c	FUNCTION_25	FOR_3
0x40017d4	    0x41bf00000000	                             mov r15d, 0	       702	shallow.c	FUNCTION_25	FOR_3
0x40017da	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       718	shallow.c	FUNCTION_25
0x40017df	        0x44897810	            mov dword [rax + 0x10], r15d	       718	shallow.c	FUNCTION_25
0x40017e3	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	       720	shallow.c	FUNCTION_25	CALL_13
0x40017e8	      0xe800000000	                          call 0x40017ed	       720	shallow.c	FUNCTION_25	CALL_13
0x40017ed	      0x837c245800	               cmp dword [rsp + 0x58], 0	       430	shallow.c	CALL_2
0x40017f2	            0x741e	                            je 0x4001812	       430	shallow.c	CALL_2
0x40017f4	      0xbb00000000	                              mov ebx, 0	       430	shallow.c	CALL_2
0x40017f9	            0x89da	                            mov edx, ebx	       430	shallow.c	CALL_2
0x40017fb	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       430	shallow.c	CALL_2
0x4001800	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	       430	shallow.c	CALL_2
0x4001804	      0xe800000000	                          call 0x4001809	       430	shallow.c	CALL_2
0x4001809	          0x83c301	                              add ebx, 1	       430	shallow.c	CALL_2
0x400180c	        0x3b5c2458	            cmp ebx, dword [rsp + 0x58] 	       430	shallow.c	CALL_2
0x4001810	            0x72e7	                            jb 0x40017f9	       430	shallow.c	CALL_2
0x4001812	    0xc74424580000	               mov dword [rsp + 0x58], 0	       430	shallow.c	CALL_2
0x400181a	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	       430	shallow.c	CALL_2
0x400181f	      0xe800000000	                          call 0x4001824	       430	shallow.c	CALL_2
0x4001824	    0x48c744246000	               mov qword [rsp + 0x60], 0	       430	shallow.c	CALL_2
0x400182d	    0x83bc24880000	               cmp dword [rsp + 0x88], 0	       630	shallow.c	FUNCTION_22	FOR_7
0x4001835	            0x7421	                            je 0x4001858	       630	shallow.c	FUNCTION_22	FOR_7
0x4001837	      0xbb00000000	                              mov ebx, 0	       630	shallow.c	FUNCTION_22	FOR_7
0x400183c	            0x89da	                            mov edx, ebx	       631	shallow.c	FUNCTION_22	CALL_16
0x400183e	      0x488b442470	            mov rax, qword [rsp + 0x70] 	       631	shallow.c	FUNCTION_22	CALL_16
0x4001843	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	       631	shallow.c	FUNCTION_22	CALL_16
0x4001847	      0xe800000000	                          call 0x400184c	       631	shallow.c	FUNCTION_22	CALL_16
0x400184c	          0x83c301	                              add ebx, 1	       630	shallow.c	FUNCTION_22	FOR_7
0x400184f	    0x399c24880000	            cmp dword [rsp + 0x88], ebx 	       630	shallow.c	FUNCTION_22	FOR_7
0x4001856	            0x77e4	                            ja 0x400183c	       630	shallow.c	FUNCTION_22	FOR_7
0x4001858	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	       632	shallow.c	FUNCTION_22	CALL_17
0x400185d	      0xe800000000	                          call 0x4001862	       632	shallow.c	FUNCTION_22	CALL_17
0x4001862	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       633	shallow.c	FUNCTION_22	CALL_18
0x4001867	      0xe800000000	                          call 0x400186c	       633	shallow.c	FUNCTION_22	CALL_18
0x400186c	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	       634	shallow.c	FUNCTION_22
0x4001874	    0x644833042528	                xor rax, qword fs:[0x28]	       634	shallow.c	FUNCTION_22
0x400187d	            0x7405	                            je 0x4001884	       634	shallow.c	FUNCTION_22
0x400187f	      0xe800000000	                          call 0x4001884	       634	shallow.c	FUNCTION_22
0x4001884	    0x4881c4a80000	                           add rsp, 0xa8	       634	shallow.c	FUNCTION_22
0x400188b	              0x5b	                                 pop rbx	       634	shallow.c	FUNCTION_22
0x400188c	              0x5d	                                 pop rbp	       634	shallow.c	FUNCTION_22
0x400188d	            0x415c	                                 pop r12	       634	shallow.c	FUNCTION_22
0x400188f	            0x415d	                                 pop r13	       634	shallow.c	FUNCTION_22
0x4001891	            0x415e	                                 pop r14	       634	shallow.c	FUNCTION_22
0x4001893	            0x415f	                                 pop r15	       634	shallow.c	FUNCTION_22
0x4001895	              0xc3	                                     ret	       634	shallow.c	FUNCTION_22
advertise_shallow_grafts_cb	IF,1:WHILE,0:FOR,0:SWITCH,0:ELSE,0:CALL,2:functions,0:DO,0	15
0x40001bc	        0x837f14ff	cmp dword [rdi + 0x14], 0xffffffffffffffff	       338	shallow.c	FUNCTION_13	IF_1
0x40001c0	            0x7523	                           jne 0x40001e5	       338	shallow.c	FUNCTION_13	IF_1
0x40001c2	              0x53	                                push rbx	       336	shallow.c	FUNCTION_13
0x40001c3	            0x8b1e	                    mov ebx, dword [rsi]	       337	shallow.c	FUNCTION_13
0x40001c5	      0xe800000000	                          call 0x40001ca	       339	shallow.c	FUNCTION_13	CALL_2
0x40001ca	          0x4889c2	                            mov rdx, rax	       339	shallow.c	FUNCTION_13	CALL_2
0x40001cd	      0xbe00000000	                              mov esi, 0	       339	shallow.c	FUNCTION_13	CALL_2
0x40001d2	            0x89df	                            mov edi, ebx	       339	shallow.c	FUNCTION_13	CALL_2
0x40001d4	      0xb800000000	                              mov eax, 0	       339	shallow.c	FUNCTION_13	CALL_2
0x40001d9	      0xe800000000	                          call 0x40001de	       339	shallow.c	FUNCTION_13	CALL_2
0x40001de	      0xb800000000	                              mov eax, 0	       341	shallow.c	FUNCTION_13
0x40001e3	              0x5b	                                 pop rbx	       341	shallow.c	FUNCTION_13
0x40001e4	              0xc3	                                     ret	       341	shallow.c	FUNCTION_13
0x40001e5	      0xb800000000	                              mov eax, 0	       341	shallow.c	FUNCTION_13
0x40001ea	              0xc3	                                     ret	       341	shallow.c	FUNCTION_13
delayed_reachability_test	IF,2:WHILE,0:FOR,0:SWITCH,0:ELSE,0:CALL,5:functions,0:DO,0	54
0x4001896	            0x4155	                                push r13	       725	shallow.c	FUNCTION_26
0x4001898	            0x4154	                                push r12	       725	shallow.c	FUNCTION_26
0x400189a	              0x55	                                push rbp	       725	shallow.c	FUNCTION_26
0x400189b	              0x53	                                push rbx	       725	shallow.c	FUNCTION_26
0x400189c	        0x4883ec28	                           sub rsp, 0x28	       725	shallow.c	FUNCTION_26
0x40018a0	          0x4989fc	                            mov r12, rdi	       725	shallow.c	FUNCTION_26
0x40018a3	    0x64488b042528	                mov rax, qword fs:[0x28]	       725	shallow.c	FUNCTION_26
0x40018ac	      0x4889442418	             mov qword [rsp + 0x18], rax	       725	shallow.c	FUNCTION_26
0x40018b1	            0x31c0	                            xor eax, eax	       725	shallow.c	FUNCTION_26
0x40018b3	          0x4863de	                         movsxd rbx, esi	       726	shallow.c	FUNCTION_26	IF_1
0x40018b6	        0x488b4738	            mov rax, qword [rdi + 0x38] 	       726	shallow.c	FUNCTION_26	IF_1
0x40018ba	        0x833c9800	              cmp dword [rax + rbx*4], 0	       726	shallow.c	FUNCTION_26	IF_1
0x40018be	     0xf8489000000	                            je 0x400194d	       726	shallow.c	FUNCTION_26	IF_1
0x40018c4	    0x488d2c9d0000	                        lea rbp, [rbx*4]	       726	shallow.c	FUNCTION_26	IF_1
0x40018cc	          0x488b17	                    mov rdx, qword [rdi]	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x40018cf	        0x488d049b	                  lea rax, [rbx + rbx*4]	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x40018d3	          0x488b12	                    mov rdx, qword [rdx]	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x40018d6	        0x488d3c82	                  lea rdi, [rdx + rax*4]	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x40018da	      0xe800000000	                          call 0x40018df	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x40018df	          0x4989c5	                            mov r13, rax	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x40018e2	    0x49837c245000	               cmp qword [r12 + 0x50], 0	       729	shallow.c	FUNCTION_26	IF_1	IF_2
0x40018e8	            0x753d	                           jne 0x4001927	       729	shallow.c	FUNCTION_26	IF_1	IF_2
0x40018ea	    0x48c704240000	                      mov qword [rsp], 0	        90	string3.h	FUNCTION_96	CALL_6
0x40018f2	    0x48c744240800	                  mov qword [rsp + 8], 0	        90	string3.h	FUNCTION_96	CALL_6
0x40018fb	          0x4889e6	                            mov rsi, rsp	       733	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x40018fe	      0xbf00000000	                              mov edi, 0	       733	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x4001903	      0xe800000000	                          call 0x4001908	       733	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x4001908	          0x4889e6	                            mov rsi, rsp	       734	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_4
0x400190b	      0xbf00000000	                              mov edi, 0	       734	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_4
0x4001910	      0xe800000000	                          call 0x4001915	       734	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_4
0x4001915	        0x488b0424	                    mov rax, qword [rsp]	       735	shallow.c	FUNCTION_26	IF_1	IF_2
0x4001919	      0x4989442450	             mov qword [r12 + 0x50], rax	       735	shallow.c	FUNCTION_26	IF_1	IF_2
0x400191e	        0x8b442408	                mov eax, dword [rsp + 8]	       736	shallow.c	FUNCTION_26	IF_1	IF_2
0x4001922	      0x4189442458	             mov dword [r12 + 0x58], eax	       736	shallow.c	FUNCTION_26	IF_1	IF_2
0x4001927	      0x49036c2440	             add rbp, qword [r12 + 0x40]	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x400192c	      0x498b542450	            mov rdx, qword [r12 + 0x50] 	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x4001931	      0x418b742458	            mov esi, dword [r12 + 0x58] 	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x4001936	          0x4c89ef	                            mov rdi, r13	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x4001939	      0xe800000000	                          call 0x400193e	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x400193e	          0x894500	                    mov dword [rbp], eax	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x4001941	      0x498b442438	            mov rax, qword [r12 + 0x38] 	       742	shallow.c	FUNCTION_26	IF_1
0x4001946	    0xc70498000000	              mov dword [rax + rbx*4], 0	       742	shallow.c	FUNCTION_26	IF_1
0x400194d	      0x498b442440	            mov rax, qword [r12 + 0x40] 	       744	shallow.c	FUNCTION_26
0x4001952	          0x8b0498	            mov eax, dword [rax + rbx*4]	       744	shallow.c	FUNCTION_26
0x4001955	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       745	shallow.c	FUNCTION_26
0x400195a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       745	shallow.c	FUNCTION_26
0x4001963	            0x7405	                            je 0x400196a	       745	shallow.c	FUNCTION_26
0x4001965	      0xe800000000	                          call 0x400196a	       745	shallow.c	FUNCTION_26
0x400196a	        0x4883c428	                           add rsp, 0x28	       745	shallow.c	FUNCTION_26
0x400196e	              0x5b	                                 pop rbx	       745	shallow.c	FUNCTION_26
0x400196f	              0x5d	                                 pop rbp	       745	shallow.c	FUNCTION_26
0x4001970	            0x415c	                                 pop r12	       745	shallow.c	FUNCTION_26
0x4001972	            0x415d	                                 pop r13	       745	shallow.c	FUNCTION_26
0x4001974	              0xc3	                                     ret	       745	shallow.c	FUNCTION_26
mark_uninteresting	IF,1:WHILE,0:FOR,0:SWITCH,0:ELSE,0:CALL,2:functions,0:DO,0	12
0x40001eb	        0x4883ec08	                              sub rsp, 8	       535	shallow.c	FUNCTION_21
0x40001ef	          0x4889f7	                            mov rdi, rsi	       535	shallow.c	FUNCTION_21
0x40001f2	      0xbe01000000	                              mov esi, 1	       536	shallow.c	FUNCTION_21	CALL_1
0x40001f7	      0xe800000000	                          call 0x40001fc	       536	shallow.c	FUNCTION_21	CALL_1
0x40001fc	          0x4885c0	                           test rax, rax	       537	shallow.c	FUNCTION_21	IF_1
0x40001ff	            0x740b	                            je 0x400020c	       537	shallow.c	FUNCTION_21	IF_1
0x4000201	          0x830820	                    or dword [rax], 0x20	       539	shallow.c	FUNCTION_21
0x4000204	          0x4889c7	                            mov rdi, rax	       540	shallow.c	FUNCTION_21	CALL_2
0x4000207	      0xe800000000	                          call 0x400020c	       540	shallow.c	FUNCTION_21	CALL_2
0x400020c	      0xb800000000	                              mov eax, 0	       542	shallow.c	FUNCTION_21
0x4000211	        0x4883c408	                              add rsp, 8	       542	shallow.c	FUNCTION_21
0x4000215	              0xc3	                                     ret	       542	shallow.c	FUNCTION_21
remove_nonexistent_theirs_shallow	IF,2:WHILE,0:FOR,1:SWITCH,0:ELSE,0:CALL,2:functions,0:DO,0	49
0x4000fdd	            0x4156	                                push r14	       417	shallow.c	FUNCTION_18
0x4000fdf	            0x4155	                                push r13	       417	shallow.c	FUNCTION_18
0x4000fe1	            0x4154	                                push r12	       417	shallow.c	FUNCTION_18
0x4000fe3	              0x55	                                push rbp	       417	shallow.c	FUNCTION_18
0x4000fe4	              0x53	                                push rbx	       417	shallow.c	FUNCTION_18
0x4000fe5	          0x4989fc	                            mov r12, rdi	       417	shallow.c	FUNCTION_18
0x4000fe8	          0x488b07	                    mov rax, qword [rdi]	       418	shallow.c	FUNCTION_18
0x4000feb	          0x4c8b30	                    mov r14, qword [rax]	       418	shallow.c	FUNCTION_18
0x4000fee	    0x48b8ffffffff	                 movabs rax, 0x1ffffffff	       420	shallow.c	FUNCTION_18	CALL_1
0x4000ff8	    0x482305000000	             and rax, qword [0x04000fff]	       420	shallow.c	FUNCTION_18	CALL_1
0x4000fff	    0x48ba00000000	                 movabs rdx, 0x100000000	       420	shallow.c	FUNCTION_18	CALL_1
0x4001009	          0x4839d0	                            cmp rax, rdx	       420	shallow.c	FUNCTION_18	CALL_1
0x400100c	            0x741e	                            je 0x400102c	       420	shallow.c	FUNCTION_18	CALL_1
0x400100e	      0xb900000000	                              mov ecx, 0	       420	shallow.c	FUNCTION_18	CALL_1
0x4001013	      0xba00000000	                              mov edx, 0	       420	shallow.c	FUNCTION_18	CALL_1
0x4001018	      0xbea4010000	                          mov esi, 0x1a4	       420	shallow.c	FUNCTION_18	CALL_1
0x400101d	      0xbf00000000	                              mov edi, 0	       420	shallow.c	FUNCTION_18	CALL_1
0x4001022	      0xb800000000	                              mov eax, 0	       420	shallow.c	FUNCTION_18	CALL_1
0x4001027	      0xe800000000	                          call 0x400102c	       420	shallow.c	FUNCTION_18	CALL_1
0x400102c	      0xbd00000000	                              mov ebp, 0	       421	shallow.c	FUNCTION_18	FOR_1
0x4001031	      0xbb00000000	                              mov ebx, 0	       421	shallow.c	FUNCTION_18	FOR_1
0x4001036	    0x41837c242000	               cmp dword [r12 + 0x20], 0	       421	shallow.c	FUNCTION_18	FOR_1
0x400103c	            0x7f16	                            jg 0x4001054	       421	shallow.c	FUNCTION_18	FOR_1
0x400103e	            0xeb45	                           jmp 0x4001085	       421	shallow.c	FUNCTION_18	FOR_1
0x4001040	            0x39dd	                            cmp ebp, ebx	       422	shallow.c	FUNCTION_18	FOR_1	IF_1
0x4001042	            0x7410	                            je 0x4001054	       422	shallow.c	FUNCTION_18	FOR_1	IF_1
0x4001044	      0x498b442418	            mov rax, qword [r12 + 0x18] 	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x4001049	      0x428b4c2804	         mov ecx, dword [rax + r13 + 4] 	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x400104e	          0x4863d5	                         movsxd rdx, ebp	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x4001051	          0x890c90	            mov dword [rax + rdx*4], ecx	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x4001054	          0x4863c3	                         movsxd rax, ebx	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x4001057	    0x4c8d2c850000	                        lea r13, [rax*4]	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x400105f	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x4001064	        0x48630482	         movsxd rax, dword [rdx + rax*4]	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x4001068	        0x488d0480	                  lea rax, [rax + rax*4]	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x400106c	        0x498d3c86	                  lea rdi, [r14 + rax*4]	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x4001070	      0xe800000000	                          call 0x4001075	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x4001075	          0x83f801	                              cmp eax, 1	       425	shallow.c	FUNCTION_18	FOR_1	IF_2
0x4001078	          0x83ddff	             sbb ebp, 0xffffffffffffffff	       425	shallow.c	FUNCTION_18	FOR_1	IF_2
0x400107b	          0x83c301	                              add ebx, 1	       421	shallow.c	FUNCTION_18	FOR_1
0x400107e	      0x41395c2420	            cmp dword [r12 + 0x20], ebx 	       421	shallow.c	FUNCTION_18	FOR_1
0x4001083	            0x7fbb	                            jg 0x4001040	       421	shallow.c	FUNCTION_18	FOR_1
0x4001085	      0x41896c2420	             mov dword [r12 + 0x20], ebp	       427	shallow.c	FUNCTION_18
0x400108a	              0x5b	                                 pop rbx	       428	shallow.c	FUNCTION_18
0x400108b	              0x5d	                                 pop rbp	       428	shallow.c	FUNCTION_18
0x400108c	            0x415c	                                 pop r12	       428	shallow.c	FUNCTION_18
0x400108e	            0x415d	                                 pop r13	       428	shallow.c	FUNCTION_18
0x4001090	            0x415e	                                 pop r14	       428	shallow.c	FUNCTION_18
0x4001092	              0xc3	                                     ret	       428	shallow.c	FUNCTION_18
get_shallow_commits	IF,8:WHILE,1:FOR,1:SWITCH,0:ELSE,3:CALL,9:functions,0:DO,0	155
0x40005d5	            0x4157	                                push r15	        79	shallow.c	FUNCTION_4
0x40005d7	            0x4156	                                push r14	        79	shallow.c	FUNCTION_4
0x40005d9	            0x4155	                                push r13	        79	shallow.c	FUNCTION_4
0x40005db	            0x4154	                                push r12	        79	shallow.c	FUNCTION_4
0x40005dd	              0x55	                                push rbp	        79	shallow.c	FUNCTION_4
0x40005de	              0x53	                                push rbx	        79	shallow.c	FUNCTION_4
0x40005df	        0x4883ec48	                           sub rsp, 0x48	        79	shallow.c	FUNCTION_4
0x40005e3	      0x48897c2408	                mov qword [rsp + 8], rdi	        79	shallow.c	FUNCTION_4
0x40005e8	          0x4189f4	                           mov r12d, esi	        79	shallow.c	FUNCTION_4
0x40005eb	          0x4189d7	                           mov r15d, edx	        79	shallow.c	FUNCTION_4
0x40005ee	          0x890c24	                    mov dword [rsp], ecx	        79	shallow.c	FUNCTION_4
0x40005f1	    0x64488b042528	                mov rax, qword fs:[0x28]	        79	shallow.c	FUNCTION_4
0x40005fa	      0x4889442438	             mov qword [rsp + 0x38], rax	        79	shallow.c	FUNCTION_4
0x40005ff	            0x31c0	                            xor eax, eax	        79	shallow.c	FUNCTION_4
0x4000601	    0x48c744241800	               mov qword [rsp + 0x18], 0	        81	shallow.c	FUNCTION_4
0x400060a	    0xc74424200000	               mov dword [rsp + 0x20], 0	        82	shallow.c	FUNCTION_4
0x4000612	    0xc74424240000	               mov dword [rsp + 0x24], 0	        82	shallow.c	FUNCTION_4
0x400061a	    0x48c744242800	               mov qword [rsp + 0x28], 0	        82	shallow.c	FUNCTION_4
0x4000623	      0xbd00000000	                              mov ebp, 0	        83	shallow.c	FUNCTION_4
0x4000628	      0xbb00000000	                              mov ebx, 0	        80	shallow.c	FUNCTION_4
0x400062d	    0x41bd00000000	                             mov r13d, 0	        80	shallow.c	FUNCTION_4
0x4000633	      0xe944010000	                           jmp 0x400077c	        86	shallow.c	FUNCTION_4	WHILE_1
0x4000638	        0x410fb606	                   movzx eax, byte [r14]	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x400063c	          0x83e00e	                            and eax, 0xe	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x400063f	      0x448b6c2404	               mov r13d, dword [rsp + 4]	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x4000644	            0x3c02	                               cmp al, 2	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x4000646	     0xf8530010000	                           jne 0x400077c	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x400064c	      0x49837e1800	               cmp qword [r14 + 0x18], 0	        96	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_4
0x4000651	            0x750e	                           jne 0x4000661	        96	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_4
0x4000653	      0xbf04000000	                              mov edi, 4	        97	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_2
0x4000658	      0xe800000000	                          call 0x400065d	        97	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_2
0x400065d	        0x49894618	             mov qword [r14 + 0x18], rax	        97	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_2
0x4000661	        0x498b4618	            mov rax, qword [r14 + 0x18] 	        98	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x4000665	    0xc70000000000	                      mov dword [rax], 0	        98	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x400066b	          0x4c89f5	                            mov rbp, r14	        90	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x400066e	      0x448b6c2404	               mov r13d, dword [rsp + 4]	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x4000673	      0xbb00000000	                              mov ebx, 0	        99	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x4000678	          0x4889ef	                            mov rdi, rbp	       106	shallow.c	FUNCTION_4	WHILE_1	CALL_4
0x400067b	      0xe800000000	                          call 0x4000680	       106	shallow.c	FUNCTION_4	WHILE_1	CALL_4
0x4000680	          0x83c301	                              add ebx, 1	       107	shallow.c	FUNCTION_4	WHILE_1
0x4000683	    0x4181fcffffff	                    cmp r12d, 0x7fffffff	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x400068a	            0x7405	                            je 0x4000691	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x400068c	          0x4439e3	                           cmp ebx, r12d	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x400068f	            0x7d24	                           jge 0x40006b5	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x4000691	      0xe800000000	                          call 0x4000696	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x4000696	            0x85c0	                           test eax, eax	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x4000698	            0x7450	                            je 0x40006ea	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x400069a	      0x48837d3000	               cmp qword [rbp + 0x30], 0	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x400069f	            0x7549	                           jne 0x40006ea	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x40006a1	        0x488d7d04	                      lea rdi, [rbp + 4]	       110	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x40006a5	      0xe800000000	                          call 0x40006aa	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x40006aa	          0x4885c0	                           test rax, rax	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x40006ad	            0x743b	                            je 0x40006ea	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x40006af	        0x83781400	               cmp dword [rax + 0x14], 0	       110	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x40006b3	            0x7935	                           jns 0x40006ea	       110	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x40006b5	      0x488d742418	                   lea rsi, [rsp + 0x18]	       112	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_7
0x40006ba	          0x4889ef	                            mov rdi, rbp	       112	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_7
0x40006bd	      0xe800000000	                          call 0x40006c2	       112	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_7
0x40006c2	          0x8b4500	                    mov eax, dword [rbp]	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006c5	            0x89c2	                            mov edx, eax	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006c7	          0xc1ea04	                              shr edx, 4	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006ca	          0x4409fa	                            or edx, r15d	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006cd	    0x81e2ffffff07	                      and edx, 0x7ffffff	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006d3	          0xc1e204	                              shl edx, 4	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006d6	      0x250f000080	                     and eax, 0x8000000f	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006db	             0x9d0	                             or eax, edx	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006dd	          0x894500	                    mov dword [rbp], eax	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006e0	      0xbd00000000	                              mov ebp, 0	       114	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006e5	      0xe992000000	                           jmp 0x400077c	       115	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006ea	          0x8b4500	                    mov eax, dword [rbp]	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006ed	            0x89c2	                            mov edx, eax	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006ef	          0xc1ea04	                              shr edx, 4	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006f2	           0xb1424	                     or edx, dword [rsp]	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006f5	    0x81e2ffffff07	                      and edx, 0x7ffffff	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006fb	          0xc1e204	                              shl edx, 4	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006fe	      0x250f000080	                     and eax, 0x8000000f	       117	shallow.c	FUNCTION_4	WHILE_1
0x4000703	             0x9d0	                             or eax, edx	       117	shallow.c	FUNCTION_4	WHILE_1
0x4000705	          0x894500	                    mov dword [rbp], eax	       117	shallow.c	FUNCTION_4	WHILE_1
0x4000708	        0x488b6d30	            mov rbp, qword [rbp + 0x30] 	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x400070c	          0x4885ed	                           test rbp, rbp	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x400070f	            0x745c	                            je 0x400076d	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x4000711	        0x488b4500	                    mov rax, qword [rbp]	       119	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x4000715	        0x488b4018	            mov rax, qword [rax + 0x18] 	       119	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x4000719	          0x4885c0	                           test rax, rax	       119	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x400071c	            0x7516	                           jne 0x4000734	       119	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x400071e	      0xbf04000000	                              mov edi, 4	       120	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6	CALL_8
0x4000723	      0xe800000000	                          call 0x4000728	       120	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6	CALL_8
0x4000728	        0x488b5500	                    mov rdx, qword [rbp]	       121	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x400072c	        0x48894218	             mov qword [rdx + 0x18], rax	       121	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x4000730	            0x8918	                    mov dword [rax], ebx	       122	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x4000732	            0xeb06	                           jmp 0x400073a	       122	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x4000734	            0x3b18	                    cmp ebx, dword [rax]	       125	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2	IF_7
0x4000736	            0x7d2a	                           jge 0x4000762	       125	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2	IF_7
0x4000738	            0x8918	                    mov dword [rax], ebx	       127	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2
0x400073a	      0x48837d0800	                  cmp qword [rbp + 8], 0	       129	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8
0x400073f	            0x7415	                            je 0x4000756	       129	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8
0x4000741	      0x488d542420	                   lea rdx, [rsp + 0x20]	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x4000746	      0xbe00000000	                              mov esi, 0	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x400074b	        0x488b7d00	                    mov rdi, qword [rbp]	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x400074f	      0xe800000000	                          call 0x4000754	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x4000754	            0xeb0c	                           jmp 0x4000762	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x4000756	        0x488b6d00	                    mov rbp, qword [rbp]	       133	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x400075a	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       134	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x400075e	            0x8b18	                    mov ebx, dword [rax]	       134	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x4000760	            0xeb1a	                           jmp 0x400077c	       134	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x4000762	        0x488b6d08	                mov rbp, qword [rbp + 8]	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x4000766	          0x4885ed	                           test rbp, rbp	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x4000769	            0x75a6	                           jne 0x4000711	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x400076b	            0xeb0f	                           jmp 0x400077c	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x400076d	      0xbd00000000	                              mov ebp, 0	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x4000772	            0xeb08	                           jmp 0x400077c	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x4000774	          0x4c89f5	                            mov rbp, r14	        93	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x4000777	      0x448b6c2404	               mov r13d, dword [rsp + 4]	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x400077c	          0x4885ed	                           test rbp, rbp	        86	shallow.c	FUNCTION_4	WHILE_1
0x400077f	     0xf85f3feffff	                           jne 0x4000678	        86	shallow.c	FUNCTION_4	WHILE_1
0x4000785	      0x488b442408	                mov rax, qword [rsp + 8]	        86	shallow.c	FUNCTION_4	WHILE_1
0x400078a	          0x443928	                   cmp dword [rax], r13d	        86	shallow.c	FUNCTION_4	WHILE_1
0x400078d	            0x7736	                            ja 0x40007c5	        86	shallow.c	FUNCTION_4	WHILE_1
0x400078f	      0x837c242000	               cmp dword [rsp + 0x20], 0	        86	shallow.c	FUNCTION_4	WHILE_1
0x4000794	            0x7517	                           jne 0x40007ad	        86	shallow.c	FUNCTION_4	WHILE_1
0x4000796	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       140	shallow.c	FUNCTION_4
0x400079b	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       140	shallow.c	FUNCTION_4
0x40007a0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       140	shallow.c	FUNCTION_4
0x40007a9	            0x745d	                            je 0x4000808	       140	shallow.c	FUNCTION_4
0x40007ab	            0xeb56	                           jmp 0x4000803	       140	shallow.c	FUNCTION_4
0x40007ad	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       101	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x40007b2	      0xe800000000	                          call 0x40007b7	       101	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x40007b7	          0x4889c5	                            mov rbp, rax	       101	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x40007ba	        0x488b4018	            mov rax, qword [rax + 0x18] 	       103	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x40007be	            0x8b18	                    mov ebx, dword [rax]	       103	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x40007c0	      0xe9b3feffff	                           jmp 0x4000678	       103	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x40007c5	        0x418d4501	                      lea eax, [r13 + 1]	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x40007c9	        0x89442404	                mov dword [rsp + 4], eax	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x40007cd	          0x4d63ed	                        movsxd r13, r13d	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x40007d0	        0x49c1e505	                              shl r13, 5	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x40007d4	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x40007d9	          0x4c89e8	                            mov rax, r13	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x40007dc	        0x48034108	                add rax, qword [rcx + 8]	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x40007e0	      0xba00000000	                              mov edx, 0	        90	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x40007e5	      0xbe00000000	                              mov esi, 0	        90	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x40007ea	          0x488b38	                    mov rdi, qword [rax]	        90	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x40007ed	      0xe800000000	                          call 0x40007f2	        90	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x40007f2	          0x4989c6	                            mov r14, rax	        90	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x40007f5	          0x4885c0	                           test rax, rax	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x40007f8	     0xf853afeffff	                           jne 0x4000638	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x40007fe	      0xe971ffffff	                           jmp 0x4000774	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x4000803	      0xe800000000	                          call 0x4000808	       140	shallow.c	FUNCTION_4
0x4000808	        0x4883c448	                           add rsp, 0x48	       140	shallow.c	FUNCTION_4
0x400080c	              0x5b	                                 pop rbx	       140	shallow.c	FUNCTION_4
0x400080d	              0x5d	                                 pop rbp	       140	shallow.c	FUNCTION_4
0x400080e	            0x415c	                                 pop r12	       140	shallow.c	FUNCTION_4
0x4000810	            0x415d	                                 pop r13	       140	shallow.c	FUNCTION_4
0x4000812	            0x415e	                                 pop r14	       140	shallow.c	FUNCTION_4
0x4000814	            0x415f	                                 pop r15	       140	shallow.c	FUNCTION_4
0x4000816	              0xc3	                                     ret	       140	shallow.c	FUNCTION_4
write_shallow_commits	IF,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:functions,0:DO,0	73
0x4000a1e	            0x4155	                                push r13	       285	shallow.c	FUNCTION_10
0x4000a20	            0x4154	                                push r12	       285	shallow.c	FUNCTION_10
0x4000a22	              0x55	                                push rbp	       285	shallow.c	FUNCTION_10
0x4000a23	              0x53	                                push rbx	       285	shallow.c	FUNCTION_10
0x4000a24	        0x4883ec28	                           sub rsp, 0x28	       285	shallow.c	FUNCTION_10
0x4000a28	          0x4889fb	                            mov rbx, rdi	       285	shallow.c	FUNCTION_10
0x4000a2b	          0x4989d4	                            mov r12, rdx	       285	shallow.c	FUNCTION_10
0x4000a2e	    0x64488b042528	                mov rax, qword fs:[0x28]	       285	shallow.c	FUNCTION_10
0x4000a37	      0x4889442418	             mov qword [rsp + 0x18], rax	       285	shallow.c	FUNCTION_10
0x4000a3c	            0x31c0	                            xor eax, eax	       285	shallow.c	FUNCTION_10
0x4000a3e	        0x48893c24	                    mov qword [rsp], rdi	       268	shallow.c	FUNCTION_9
0x4000a42	        0x89742408	                mov dword [rsp + 8], esi	       269	shallow.c	FUNCTION_9
0x4000a46	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       270	shallow.c	FUNCTION_9
0x4000a4e	    0xc74424100000	               mov dword [rsp + 0x10], 0	       271	shallow.c	FUNCTION_9
0x4000a56	          0x4889e6	                            mov rsi, rsp	       272	shallow.c	FUNCTION_9	CALL_1
0x4000a59	      0xbf00000000	                              mov edi, 0	       272	shallow.c	FUNCTION_9	CALL_1
0x4000a5e	      0xe800000000	                          call 0x4000a63	       272	shallow.c	FUNCTION_9	CALL_1
0x4000a63	          0x4d85e4	                           test r12, r12	       273	shallow.c	FUNCTION_9	IF_1
0x4000a66	            0x7419	                            je 0x4000a81	       273	shallow.c	FUNCTION_9	IF_1
0x4000a68	      0xbd00000000	                              mov ebp, 0	       275	shallow.c	FUNCTION_9	FOR_1
0x4000a6d	    0x49c7c5ffffff	             mov r13, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_86	CALL_2
0x4000a74	    0x41837c240800	                  cmp dword [r12 + 8], 0	       275	shallow.c	FUNCTION_9	FOR_1
0x4000a7a	            0x7f0e	                            jg 0x4000a8a	       275	shallow.c	FUNCTION_9	FOR_1
0x4000a7c	      0xe991000000	                           jmp 0x4000b12	       275	shallow.c	FUNCTION_9	FOR_1
0x4000a81	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       274	shallow.c	FUNCTION_9	IF_1
0x4000a85	      0xe98c000000	                           jmp 0x4000b16	       274	shallow.c	FUNCTION_9	IF_1
0x4000a8a	          0x4863c5	                         movsxd rax, ebp	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0x4000a8d	        0x488d1480	                  lea rdx, [rax + rax*4]	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0x4000a91	        0x498b0424	                    mov rax, qword [r12]	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0x4000a95	        0x488d3c90	                  lea rdi, [rax + rdx*4]	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0x4000a99	      0xe800000000	                          call 0x4000a9e	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0x4000a9e	          0x4889c6	                            mov rsi, rax	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0x4000aa1	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_86	CALL_2
0x4000aa6	          0x4c89e9	                            mov rcx, r13	       279	strbuf.h	FUNCTION_86	CALL_2
0x4000aa9	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_86	CALL_2
0x4000aac	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_86	CALL_2
0x4000aae	          0x4889c8	                            mov rax, rcx	       279	strbuf.h	FUNCTION_86	CALL_2
0x4000ab1	          0x48f7d0	                                 not rax	       279	strbuf.h	FUNCTION_86	CALL_2
0x4000ab4	        0x488d50ff	                      lea rdx, [rax - 1]	       279	strbuf.h	FUNCTION_86	CALL_2
0x4000ab8	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_86	CALL_2
0x4000abb	      0xe800000000	                          call 0x4000ac0	       279	strbuf.h	FUNCTION_86	CALL_2
0x4000ac0	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_83
0x4000ac3	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_83
0x4000ac6	            0x740a	                            je 0x4000ad2	       141	strbuf.h	FUNCTION_83
0x4000ac8	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_85	IF_1	CALL_1
0x4000acc	        0x483b4308	                cmp rax, qword [rbx + 8]	       227	strbuf.h	FUNCTION_85	IF_1	CALL_1
0x4000ad0	            0x750d	                           jne 0x4000adf	       227	strbuf.h	FUNCTION_85	IF_1	CALL_1
0x4000ad2	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_85	CALL_2
0x4000ad7	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_85	CALL_2
0x4000ada	      0xe800000000	                          call 0x4000adf	       228	strbuf.h	FUNCTION_85	CALL_2
0x4000adf	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_85
0x4000ae3	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_85
0x4000ae7	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_85
0x4000aeb	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_85
0x4000aef	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_85
0x4000af3	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_85
0x4000af7	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_85
0x4000afb	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_85
0x4000aff	      0x8344240c01	                add dword [rsp + 0xc], 1	       278	shallow.c	FUNCTION_9	FOR_1
0x4000b04	          0x83c501	                              add ebp, 1	       275	shallow.c	FUNCTION_9	FOR_1
0x4000b07	      0x413b6c2408	                cmp ebp, dword [r12 + 8]	       275	shallow.c	FUNCTION_9	FOR_1
0x4000b0c	     0xf8c78ffffff	                            jl 0x4000a8a	       275	shallow.c	FUNCTION_9	FOR_1
0x4000b12	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       280	shallow.c	FUNCTION_9
0x4000b16	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       287	shallow.c	FUNCTION_10
0x4000b1b	    0x644833342528	                xor rsi, qword fs:[0x28]	       287	shallow.c	FUNCTION_10
0x4000b24	            0x7405	                            je 0x4000b2b	       287	shallow.c	FUNCTION_10
0x4000b26	      0xe800000000	                          call 0x4000b2b	       287	shallow.c	FUNCTION_10
0x4000b2b	        0x4883c428	                           add rsp, 0x28	       287	shallow.c	FUNCTION_10
0x4000b2f	              0x5b	                                 pop rbx	       287	shallow.c	FUNCTION_10
0x4000b30	              0x5d	                                 pop rbp	       287	shallow.c	FUNCTION_10
0x4000b31	            0x415c	                                 pop r12	       287	shallow.c	FUNCTION_10
0x4000b33	            0x415d	                                 pop r13	       287	shallow.c	FUNCTION_10
0x4000b35	              0xc3	                                     ret	       287	shallow.c	FUNCTION_10
clear_shallow_info	IF,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0:CALL,2:functions,0:DO,0	8
0x4000fc5	              0x53	                                push rbx	       409	shallow.c	ELSE_1	FUNCTION_17
0x4000fc6	          0x4889fb	                            mov rbx, rdi	       409	shallow.c	ELSE_1	FUNCTION_17
0x4000fc9	        0x488b7f08	                mov rdi, qword [rdi + 8]	       410	shallow.c	ELSE_1	FUNCTION_17	CALL_1
0x4000fcd	      0xe800000000	                          call 0x4000fd2	       410	shallow.c	ELSE_1	FUNCTION_17	CALL_1
0x4000fd2	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       411	shallow.c	ELSE_1	FUNCTION_17	CALL_2
0x4000fd6	      0xe800000000	                          call 0x4000fdb	       411	shallow.c	ELSE_1	FUNCTION_17	CALL_2
0x4000fdb	              0x5b	                                 pop rbx	       412	shallow.c	ELSE_1	FUNCTION_17
0x4000fdc	              0xc3	                                     ret	       412	shallow.c	ELSE_1	FUNCTION_17
prepare_shallow_info	IF,3:WHILE,0:FOR,1:SWITCH,0:ELSE,1:CALL,4:functions,0:DO,0	93
0x4000e4e	            0x4155	                                push r13	       387	shallow.c	FUNCTION_16
0x4000e50	            0x4154	                                push r12	       387	shallow.c	FUNCTION_16
0x4000e52	              0x55	                                push rbp	       387	shallow.c	FUNCTION_16
0x4000e53	              0x53	                                push rbx	       387	shallow.c	FUNCTION_16
0x4000e54	        0x4883ec08	                              sub rsp, 8	       387	shallow.c	FUNCTION_16
0x4000e58	          0x4989fc	                            mov r12, rdi	       387	shallow.c	FUNCTION_16
0x4000e5b	          0x4989f5	                            mov r13, rsi	       387	shallow.c	FUNCTION_16
0x4000e5e	    0x48b8ffffffff	                 movabs rax, 0x1ffffffff	       389	shallow.c	FUNCTION_16	CALL_1
0x4000e68	    0x482305000000	             and rax, qword [0x04000e6f]	       389	shallow.c	FUNCTION_16	CALL_1
0x4000e6f	    0x48ba00000000	                 movabs rdx, 0x100000000	       389	shallow.c	FUNCTION_16	CALL_1
0x4000e79	          0x4839d0	                            cmp rax, rdx	       389	shallow.c	FUNCTION_16	CALL_1
0x4000e7c	            0x741e	                            je 0x4000e9c	       389	shallow.c	FUNCTION_16	CALL_1
0x4000e7e	      0xb900000000	                              mov ecx, 0	       389	shallow.c	FUNCTION_16	CALL_1
0x4000e83	      0xba00000000	                              mov edx, 0	       389	shallow.c	FUNCTION_16	CALL_1
0x4000e88	      0xbe85010000	                          mov esi, 0x185	       389	shallow.c	FUNCTION_16	CALL_1
0x4000e8d	      0xbf00000000	                              mov edi, 0	       389	shallow.c	FUNCTION_16	CALL_1
0x4000e92	      0xb800000000	                              mov eax, 0	       389	shallow.c	FUNCTION_16	CALL_1
0x4000e97	      0xe800000000	                          call 0x4000e9c	       389	shallow.c	FUNCTION_16	CALL_1
0x4000e9c	    0x49c744245800	               mov qword [r12 + 0x58], 0	        90	string3.h	FUNCTION_96	CALL_6
0x4000ea5	      0x498d7c2408	                      lea rdi, [r12 + 8]	        90	string3.h	FUNCTION_96	CALL_6
0x4000eaa	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_96	CALL_6
0x4000eae	          0x4c89e1	                            mov rcx, r12	        90	string3.h	FUNCTION_96	CALL_6
0x4000eb1	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_96	CALL_6
0x4000eb4	          0x83c160	                           add ecx, 0x60	        90	string3.h	FUNCTION_96	CALL_6
0x4000eb7	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_96	CALL_6
0x4000eba	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_96	CALL_6
0x4000ebc	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_96	CALL_6
0x4000ec1	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_96	CALL_6
0x4000ec4	        0x4d892c24	                    mov qword [r12], r13	       391	shallow.c	FUNCTION_16
0x4000ec8	          0x4d85ed	                           test r13, r13	       392	shallow.c	FUNCTION_16	IF_1
0x4000ecb	     0xf84e9000000	                            je 0x4000fba	       392	shallow.c	FUNCTION_16	IF_1
0x4000ed1	        0x49635508	            movsxd rdx, dword [r13 + 8] 	       394	shallow.c	FUNCTION_16
0x4000ed5	    0x48b8ffffffff	         movabs rax, 0x3fffffffffffffff 	       795	git-compat-util.h	FUNCTION_41	IF_1
0x4000edf	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_41	IF_1
0x4000ee2	            0x7614	                           jbe 0x4000ef8	       795	git-compat-util.h	FUNCTION_41	IF_1
0x4000ee4	      0xbe04000000	                              mov esi, 4	       796	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x4000ee9	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x4000eee	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x4000ef3	      0xe800000000	                          call 0x4000ef8	       796	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x4000ef8	    0x488d3c950000	                        lea rdi, [rdx*4]	       394	shallow.c	FUNCTION_16
0x4000f00	      0xe800000000	                          call 0x4000f05	       394	shallow.c	FUNCTION_16
0x4000f05	      0x4989442408	                mov qword [r12 + 8], rax	       394	shallow.c	FUNCTION_16
0x4000f0a	        0x49635508	            movsxd rdx, dword [r13 + 8] 	       395	shallow.c	FUNCTION_16
0x4000f0e	    0x48b8ffffffff	         movabs rax, 0x3fffffffffffffff 	       795	git-compat-util.h	FUNCTION_41	IF_1
0x4000f18	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_41	IF_1
0x4000f1b	            0x7614	                           jbe 0x4000f31	       795	git-compat-util.h	FUNCTION_41	IF_1
0x4000f1d	      0xbe04000000	                              mov esi, 4	       796	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x4000f22	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x4000f27	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x4000f2c	      0xe800000000	                          call 0x4000f31	       796	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x4000f31	    0x488d3c950000	                        lea rdi, [rdx*4]	       395	shallow.c	FUNCTION_16
0x4000f39	      0xe800000000	                          call 0x4000f3e	       395	shallow.c	FUNCTION_16
0x4000f3e	      0x4989442418	             mov qword [r12 + 0x18], rax	       395	shallow.c	FUNCTION_16
0x4000f43	      0x41837d0800	                  cmp dword [r13 + 8], 0	       396	shallow.c	FUNCTION_16	FOR_1
0x4000f48	            0x7e70	                           jle 0x4000fba	       396	shallow.c	FUNCTION_16	FOR_1
0x4000f4a	      0xbb00000000	                              mov ebx, 0	       396	shallow.c	FUNCTION_16	FOR_1
0x4000f4f	          0x4863c3	                         movsxd rax, ebx	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x4000f52	        0x488d2c80	                  lea rbp, [rax + rax*4]	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x4000f56	        0x48c1e502	                              shl rbp, 2	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x4000f5a	          0x4889ef	                            mov rdi, rbp	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x4000f5d	        0x49037d00	                    add rdi, qword [r13]	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x4000f61	      0xe800000000	                          call 0x4000f66	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x4000f66	            0x85c0	                           test eax, eax	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x4000f68	            0x7430	                            je 0x4000f9a	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x4000f6a	          0x4889ef	                            mov rdi, rbp	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_4
0x4000f6d	        0x49037d00	                    add rdi, qword [r13]	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_4
0x4000f71	      0xe800000000	                          call 0x4000f76	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_4
0x4000f76	          0x4885c0	                           test rax, rax	       400	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x4000f79	            0x7406	                            je 0x4000f81	       400	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x4000f7b	        0x83781400	               cmp dword [rax + 0x14], 0	       400	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x4000f7f	            0x7830	                            js 0x4000fb1	       400	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x4000f81	      0x498b542408	                mov rdx, qword [r12 + 8]	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x4000f86	      0x418b442410	            mov eax, dword [r12 + 0x10] 	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x4000f8b	          0x8d4801	                      lea ecx, [rax + 1]	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x4000f8e	      0x41894c2410	             mov dword [r12 + 0x10], ecx	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x4000f93	            0x4898	                                    cdqe	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x4000f95	          0x891c82	            mov dword [rdx + rax*4], ebx	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x4000f98	            0xeb17	                           jmp 0x4000fb1	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x4000f9a	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x4000f9f	      0x418b442420	            mov eax, dword [r12 + 0x20] 	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x4000fa4	          0x8d4801	                      lea ecx, [rax + 1]	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x4000fa7	      0x41894c2420	             mov dword [r12 + 0x20], ecx	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x4000fac	            0x4898	                                    cdqe	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x4000fae	          0x891c82	            mov dword [rdx + rax*4], ebx	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x4000fb1	          0x83c301	                              add ebx, 1	       396	shallow.c	FUNCTION_16	FOR_1
0x4000fb4	        0x41395d08	                cmp dword [r13 + 8], ebx	       396	shallow.c	FUNCTION_16	FOR_1
0x4000fb8	            0x7f95	                            jg 0x4000f4f	       396	shallow.c	FUNCTION_16	FOR_1
0x4000fba	        0x4883c408	                              add rsp, 8	       406	shallow.c	FUNCTION_16	ELSE_1
0x4000fbe	              0x5b	                                 pop rbx	       406	shallow.c	FUNCTION_16	ELSE_1
0x4000fbf	              0x5d	                                 pop rbp	       406	shallow.c	FUNCTION_16	ELSE_1
0x4000fc0	            0x415c	                                 pop r12	       406	shallow.c	FUNCTION_16	ELSE_1
0x4000fc2	            0x415d	                                 pop r13	       406	shallow.c	FUNCTION_16	ELSE_1
0x4000fc4	              0xc3	                                     ret	       406	shallow.c	FUNCTION_16	ELSE_1
register_shallow	IF,1:WHILE,0:FOR,0:SWITCH,0:ELSE,0:CALL,4:functions,0:DO,0	28
0x4000473	              0x55	                                push rbp	        31	shallow.c	FUNCTION_2
0x4000474	              0x53	                                push rbx	        31	shallow.c	FUNCTION_2
0x4000475	        0x4883ec08	                              sub rsp, 8	        31	shallow.c	FUNCTION_2
0x4000479	          0x4889fd	                            mov rbp, rdi	        31	shallow.c	FUNCTION_2
0x400047c	      0xbf18000000	                           mov edi, 0x18	        32	shallow.c	FUNCTION_2
0x4000481	      0xe800000000	                          call 0x4000486	        32	shallow.c	FUNCTION_2
0x4000486	          0x4889c3	                            mov rbx, rax	        32	shallow.c	FUNCTION_2
0x4000489	          0x4889ef	                            mov rdi, rbp	        34	shallow.c	FUNCTION_2	CALL_2
0x400048c	      0xe800000000	                          call 0x4000491	        34	shallow.c	FUNCTION_2	CALL_2
0x4000491	        0x488b5500	                    mov rdx, qword [rbp]	        53	string3.h	FUNCTION_93	CALL_3
0x4000495	          0x488913	                    mov qword [rbx], rdx	        53	string3.h	FUNCTION_93	CALL_3
0x4000498	        0x488b5508	                mov rdx, qword [rbp + 8]	        53	string3.h	FUNCTION_93	CALL_3
0x400049c	        0x48895308	                mov qword [rbx + 8], rdx	        53	string3.h	FUNCTION_93	CALL_3
0x40004a0	          0x8b5510	            mov edx, dword [rbp + 0x10] 	        53	string3.h	FUNCTION_93	CALL_3
0x40004a3	          0x895310	             mov dword [rbx + 0x10], edx	        53	string3.h	FUNCTION_93	CALL_3
0x40004a6	    0xc74314ffffff	     mov dword [rbx + 0x14], 0xffffffff 	        37	shallow.c	FUNCTION_2
0x40004ad	          0x4885c0	                           test rax, rax	        38	shallow.c	FUNCTION_2	IF_1
0x40004b0	            0x740d	                            je 0x40004bf	        38	shallow.c	FUNCTION_2	IF_1
0x40004b2	          0xf60001	                      test byte [rax], 1	        38	shallow.c	FUNCTION_2	IF_1
0x40004b5	            0x7408	                            je 0x40004bf	        38	shallow.c	FUNCTION_2	IF_1
0x40004b7	    0x48c740300000	               mov qword [rax + 0x30], 0	        39	shallow.c	FUNCTION_2	IF_1
0x40004bf	      0xbe00000000	                              mov esi, 0	        40	shallow.c	FUNCTION_2	CALL_4
0x40004c4	          0x4889df	                            mov rdi, rbx	        40	shallow.c	FUNCTION_2	CALL_4
0x40004c7	      0xe800000000	                          call 0x40004cc	        40	shallow.c	FUNCTION_2	CALL_4
0x40004cc	        0x4883c408	                              add rsp, 8	        41	shallow.c	FUNCTION_2
0x40004d0	              0x5b	                                 pop rbx	        41	shallow.c	FUNCTION_2
0x40004d1	              0x5d	                                 pop rbp	        41	shallow.c	FUNCTION_2
0x40004d2	              0xc3	                                     ret	        41	shallow.c	FUNCTION_2
setup_temporary_shallow	IF,2:WHILE,0:FOR,0:SWITCH,0:ELSE,0:CALL,9:functions,0:DO,0	51
0x4000b36	              0x53	                                push rbx	       290	shallow.c	FUNCTION_11
0x4000b37	        0x4883ec20	                           sub rsp, 0x20	       290	shallow.c	FUNCTION_11
0x4000b3b	          0x4889fa	                            mov rdx, rdi	       290	shallow.c	FUNCTION_11
0x4000b3e	    0x64488b042528	                mov rax, qword fs:[0x28]	       290	shallow.c	FUNCTION_11
0x4000b47	      0x4889442418	             mov qword [rsp + 0x18], rax	       290	shallow.c	FUNCTION_11
0x4000b4c	            0x31c0	                            xor eax, eax	       290	shallow.c	FUNCTION_11
0x4000b4e	    0x48c704240000	                      mov qword [rsp], 0	       292	shallow.c	FUNCTION_11
0x4000b56	    0x48c744240800	                  mov qword [rsp + 8], 0	       292	shallow.c	FUNCTION_11
0x4000b5f	    0x48c744241000	               mov qword [rsp + 0x10], 0	       292	shallow.c	FUNCTION_11
0x4000b68	      0xbe00000000	                              mov esi, 0	       294	shallow.c	FUNCTION_11	IF_1	CALL_1
0x4000b6d	          0x4889e7	                            mov rdi, rsp	       294	shallow.c	FUNCTION_11	IF_1	CALL_1
0x4000b70	      0xe800000000	                          call 0x4000b75	       294	shallow.c	FUNCTION_11	IF_1	CALL_1
0x4000b75	      0xba00000000	                              mov edx, 0	       308	shallow.c	FUNCTION_11
0x4000b7a	            0x85c0	                           test eax, eax	       294	shallow.c	FUNCTION_11	IF_1	CALL_1
0x4000b7c	            0x746f	                            je 0x4000bed	       294	shallow.c	FUNCTION_11	IF_1	CALL_1
0x4000b7e	      0xbf00000000	                              mov edi, 0	       295	shallow.c	FUNCTION_11	IF_1	CALL_3
0x4000b83	      0xb800000000	                              mov eax, 0	       295	shallow.c	FUNCTION_11	IF_1	CALL_3
0x4000b88	      0xe800000000	                          call 0x4000b8d	       295	shallow.c	FUNCTION_11	IF_1	CALL_3
0x4000b8d	      0xbe80010000	                          mov esi, 0x180	       189	tempfile.h	FUNCTION_111	CALL_1
0x4000b92	          0x4889c7	                            mov rdi, rax	       189	tempfile.h	FUNCTION_111	CALL_1
0x4000b95	      0xe800000000	                          call 0x4000b9a	       189	tempfile.h	FUNCTION_111	CALL_1
0x4000b9a	          0x4889c3	                            mov rbx, rax	       189	tempfile.h	FUNCTION_111	CALL_1
0x4000b9d	          0x8b7814	            mov edi, dword [rax + 0x14] 	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000ba0	      0x488b542408	                mov rdx, qword [rsp + 8]	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000ba5	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000baa	      0xe800000000	                          call 0x4000baf	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000baf	          0x4885c0	                           test rax, rax	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000bb2	            0x780c	                            js 0x4000bc0	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000bb4	          0x4889df	                            mov rdi, rbx	       298	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_5
0x4000bb7	      0xe800000000	                          call 0x4000bbc	       298	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_5
0x4000bbc	            0x85c0	                           test eax, eax	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000bbe	            0x791a	                           jns 0x4000bda	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000bc0	          0x4889df	                            mov rdi, rbx	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0x4000bc3	      0xe800000000	                          call 0x4000bc8	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0x4000bc8	          0x4889c6	                            mov rsi, rax	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0x4000bcb	      0xbf00000000	                              mov edi, 0	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0x4000bd0	      0xb800000000	                              mov eax, 0	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0x4000bd5	      0xe800000000	                          call 0x4000bda	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0x4000bda	          0x4889e7	                            mov rdi, rsp	       301	shallow.c	FUNCTION_11	IF_1	CALL_8
0x4000bdd	      0xe800000000	                          call 0x4000be2	       301	shallow.c	FUNCTION_11	IF_1	CALL_8
0x4000be2	          0x4889df	                            mov rdi, rbx	       302	shallow.c	FUNCTION_11	IF_1	CALL_9
0x4000be5	      0xe800000000	                          call 0x4000bea	       302	shallow.c	FUNCTION_11	IF_1	CALL_9
0x4000bea	          0x4889c2	                            mov rdx, rax	       302	shallow.c	FUNCTION_11	IF_1	CALL_9
0x4000bed	          0x4889d0	                            mov rax, rdx	       309	shallow.c	FUNCTION_11
0x4000bf0	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       309	shallow.c	FUNCTION_11
0x4000bf5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       309	shallow.c	FUNCTION_11
0x4000bfe	            0x7405	                            je 0x4000c05	       309	shallow.c	FUNCTION_11
0x4000c00	      0xe800000000	                          call 0x4000c05	       309	shallow.c	FUNCTION_11
0x4000c05	        0x4883c420	                           add rsp, 0x20	       309	shallow.c	FUNCTION_11
0x4000c09	              0x5b	                                 pop rbx	       309	shallow.c	FUNCTION_11
0x4000c0a	              0xc3	                                     ret	       309	shallow.c	FUNCTION_11
check_shallow_file_for_update	IF,2:WHILE,0:FOR,0:SWITCH,0:ELSE,0:CALL,4:functions,0:DO,0	16
0x400017b	        0x4883ec08	                              sub rsp, 8	       219	shallow.c	FUNCTION_7
0x400017f	    0x833d00000000	cmp dword [0x04000186], 0xffffffffffffffff	       220	shallow.c	FUNCTION_7	IF_1
0x4000186	            0x750f	                           jne 0x4000197	       220	shallow.c	FUNCTION_7	IF_1
0x4000188	      0xbf00000000	                              mov edi, 0	       221	shallow.c	FUNCTION_7	CALL_1
0x400018d	      0xb800000000	                              mov eax, 0	       221	shallow.c	FUNCTION_7	CALL_1
0x4000192	      0xe800000000	                          call 0x4000197	       221	shallow.c	FUNCTION_7	CALL_1
0x4000197	      0xe800000000	                          call 0x400019c	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x400019c	          0x4889c6	                            mov rsi, rax	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x400019f	      0xbf00000000	                              mov edi, 0	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x40001a4	      0xe800000000	                          call 0x40001a9	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x40001a9	            0x85c0	                           test eax, eax	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x40001ab	            0x750a	                           jne 0x40001b7	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x40001ad	      0xbf00000000	                              mov edi, 0	       224	shallow.c	FUNCTION_7	CALL_4
0x40001b2	      0xe800000000	                          call 0x40001b7	       224	shallow.c	FUNCTION_7	CALL_4
0x40001b7	        0x4883c408	                              add rsp, 8	       225	shallow.c	FUNCTION_7
0x40001bb	              0xc3	                                     ret	       225	shallow.c	FUNCTION_7
is_repository_shallow	IF,4:WHILE,1:FOR,0:SWITCH,0:ELSE,0:CALL,9:functions,0:DO,0	59
0x40004d3	              0x53	                                push rbx	        44	shallow.c	FUNCTION_3
0x40004d4	    0x4881ec300400	                          sub rsp, 0x430	        44	shallow.c	FUNCTION_3
0x40004db	    0x64488b042528	                mov rax, qword fs:[0x28]	        44	shallow.c	FUNCTION_3
0x40004e4	    0x488984242804	            mov qword [rsp + 0x428], rax	        44	shallow.c	FUNCTION_3
0x40004ec	            0x31c0	                            xor eax, eax	        44	shallow.c	FUNCTION_3
0x40004ee	    0x8b0500000000	            mov eax, dword [0x040004f4] 	        49	shallow.c	FUNCTION_3	IF_1
0x40004f4	            0x85c0	                           test eax, eax	        49	shallow.c	FUNCTION_3	IF_1
0x40004f6	     0xf89b8000000	                           jns 0x40005b4	        49	shallow.c	FUNCTION_3	IF_1
0x40004fc	    0x488b3d000000	            mov rdi, qword [0x04000503] 	        47	shallow.c	FUNCTION_3
0x4000503	          0x4885ff	                           test rdi, rdi	        52	shallow.c	FUNCTION_3	IF_2
0x4000506	            0x7508	                           jne 0x4000510	        52	shallow.c	FUNCTION_3	IF_2
0x4000508	      0xe800000000	                          call 0x400050d	        53	shallow.c	FUNCTION_3	CALL_1
0x400050d	          0x4889c7	                            mov rdi, rax	        53	shallow.c	FUNCTION_3	CALL_1
0x4000510	          0x803f00	                       cmp byte [rdi], 0	        59	shallow.c	FUNCTION_3	IF_3
0x4000513	            0x7412	                            je 0x4000527	        59	shallow.c	FUNCTION_3	IF_3
0x4000515	      0xbe00000000	                              mov esi, 0	        59	shallow.c	FUNCTION_3	IF_3
0x400051a	      0xe800000000	                          call 0x400051f	        59	shallow.c	FUNCTION_3	IF_3
0x400051f	          0x4889c3	                            mov rbx, rax	        59	shallow.c	FUNCTION_3	IF_3
0x4000522	          0x4885c0	                           test rax, rax	        59	shallow.c	FUNCTION_3	IF_3
0x4000525	            0x751b	                           jne 0x4000542	        59	shallow.c	FUNCTION_3	IF_3
0x4000527	      0xbf00000000	                              mov edi, 0	        60	shallow.c	FUNCTION_3	IF_3	CALL_2
0x400052c	      0xe800000000	                          call 0x4000531	        60	shallow.c	FUNCTION_3	IF_3	CALL_2
0x4000531	    0xc70500000000	               mov dword [0x0400053b], 0	        61	shallow.c	FUNCTION_3	IF_3
0x400053b	      0xb800000000	                              mov eax, 0	        62	shallow.c	FUNCTION_3	IF_3
0x4000540	            0xeb72	                           jmp 0x40005b4	        62	shallow.c	FUNCTION_3	IF_3
0x4000542	          0x4889c7	                            mov rdi, rax	        64	shallow.c	FUNCTION_3	CALL_4
0x4000545	      0xe800000000	                          call 0x400054a	        64	shallow.c	FUNCTION_3	CALL_4
0x400054a	            0x89c6	                            mov esi, eax	        64	shallow.c	FUNCTION_3	CALL_4
0x400054c	      0xbf00000000	                              mov edi, 0	        64	shallow.c	FUNCTION_3	CALL_4
0x4000551	      0xe800000000	                          call 0x4000556	        64	shallow.c	FUNCTION_3	CALL_4
0x4000556	    0xc70500000000	               mov dword [0x04000560], 1	        65	shallow.c	FUNCTION_3
0x4000560	            0xeb2d	                           jmp 0x400058f	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_5
0x4000562	          0x4889e6	                            mov rsi, rsp	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_6
0x4000565	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_6
0x400056a	      0xe800000000	                          call 0x400056f	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_6
0x400056f	            0x85c0	                           test eax, eax	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_6
0x4000571	            0x7414	                            je 0x4000587	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_6
0x4000573	      0x488d742420	                   lea rsi, [rsp + 0x20]	        70	shallow.c	FUNCTION_3	WHILE_1	CALL_7
0x4000578	      0xbf00000000	                              mov edi, 0	        70	shallow.c	FUNCTION_3	WHILE_1	CALL_7
0x400057d	      0xb800000000	                              mov eax, 0	        70	shallow.c	FUNCTION_3	WHILE_1	CALL_7
0x4000582	      0xe800000000	                          call 0x4000587	        70	shallow.c	FUNCTION_3	WHILE_1	CALL_7
0x4000587	          0x4889e7	                            mov rdi, rsp	        71	shallow.c	FUNCTION_3	WHILE_1	CALL_8
0x400058a	      0xe800000000	                          call 0x400058f	        71	shallow.c	FUNCTION_3	WHILE_1	CALL_8
0x400058f	          0x4889da	                            mov rdx, rbx	       263	stdio2.h	FUNCTION_78	CALL_8
0x4000592	      0xbe00040000	                          mov esi, 0x400	       263	stdio2.h	FUNCTION_78	CALL_8
0x4000597	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       263	stdio2.h	FUNCTION_78	CALL_8
0x400059c	      0xe800000000	                          call 0x40005a1	       263	stdio2.h	FUNCTION_78	CALL_8
0x40005a1	          0x4885c0	                           test rax, rax	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_5
0x40005a4	            0x75bc	                           jne 0x4000562	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_5
0x40005a6	          0x4889df	                            mov rdi, rbx	        73	shallow.c	FUNCTION_3	CALL_9
0x40005a9	      0xe800000000	                          call 0x40005ae	        73	shallow.c	FUNCTION_3	CALL_9
0x40005ae	    0x8b0500000000	            mov eax, dword [0x040005b4] 	        74	shallow.c	FUNCTION_3
0x40005b4	    0x488b8c242804	           mov rcx, qword [rsp + 0x428] 	        75	shallow.c	FUNCTION_3
0x40005bc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        75	shallow.c	FUNCTION_3
0x40005c5	            0x7405	                            je 0x40005cc	        75	shallow.c	FUNCTION_3
0x40005c7	      0xe800000000	                          call 0x40005cc	        75	shallow.c	FUNCTION_3
0x40005cc	    0x4881c4300400	                          add rsp, 0x430	        75	shallow.c	FUNCTION_3
0x40005d3	              0x5b	                                 pop rbx	        75	shallow.c	FUNCTION_3
0x40005d4	              0xc3	                                     ret	        75	shallow.c	FUNCTION_3
show_commit	IF,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:functions,0:DO,0	4
0x4000077	        0x4883ec08	                              sub rsp, 8	       143	shallow.c	FUNCTION_5
0x400007b	      0xe800000000	                          call 0x4000080	       144	shallow.c	FUNCTION_5	CALL_1
0x4000080	        0x4883c408	                              add rsp, 8	       145	shallow.c	FUNCTION_5
0x4000084	              0xc3	                                     ret	       145	shallow.c	FUNCTION_5
advertise_shallow_grafts	IF,1:WHILE,0:FOR,0:SWITCH,0:ELSE,0:CALL,2:functions,0:DO,0	10
0x4000ced	        0x4883ec18	                           sub rsp, 0x18	       344	shallow.c	FUNCTION_14
0x4000cf1	        0x897c240c	              mov dword [rsp + 0xc], edi	       344	shallow.c	FUNCTION_14
0x4000cf5	      0xe800000000	                          call 0x4000cfa	       345	shallow.c	FUNCTION_14	IF_1	CALL_1
0x4000cfa	            0x85c0	                           test eax, eax	       345	shallow.c	FUNCTION_14	IF_1	CALL_1
0x4000cfc	            0x740f	                            je 0x4000d0d	       345	shallow.c	FUNCTION_14	IF_1	CALL_1
0x4000cfe	      0x488d74240c	                    lea rsi, [rsp + 0xc]	       347	shallow.c	FUNCTION_14	CALL_2
0x4000d03	      0xbf00000000	                              mov edi, 0	       347	shallow.c	FUNCTION_14	CALL_2
0x4000d08	      0xe800000000	                          call 0x4000d0d	       347	shallow.c	FUNCTION_14	CALL_2
0x4000d0d	        0x4883c418	                           add rsp, 0x18	       348	shallow.c	FUNCTION_14
0x4000d11	              0xc3	                                     ret	       348	shallow.c	FUNCTION_14
