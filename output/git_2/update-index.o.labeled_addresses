resolve_undo_clear_callback	DO,0:ELSE,0:CALL,1:WHILE,0:functions,0:SWITCH,0:FOR,0:IF,0	6
0x4000090	        0x4883ec08	                              sub rsp, 8	       807	update-index.c	FUNCTION_30
0x4000094	      0xbf00000000	                              mov edi, 0	       808	update-index.c	FUNCTION_30	CALL_1
0x4000099	      0xe800000000	                          call 0x400009e	       808	update-index.c	FUNCTION_30	CALL_1
0x400009e	            0x31c0	                            xor eax, eax	       810	update-index.c	FUNCTION_30
0x40000a0	        0x4883c408	                              add rsp, 8	       810	update-index.c	FUNCTION_30
0x40000a4	              0xc3	                                     ret	       810	update-index.c	FUNCTION_30
really_refresh_callback	DO,0:ELSE,0:CALL,1:WHILE,0:functions,0:SWITCH,0:FOR,0:IF,0	3
0x4000610	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	       792	update-index.c	FUNCTION_28	CALL_1
0x4000614	      0xbe01000000	                              mov esi, 1	       792	update-index.c	FUNCTION_28	CALL_1
0x4000619	            0xeba5	                         jmp sym.refresh	       792	update-index.c	FUNCTION_28	CALL_1
report	DO,0:ELSE,0:CALL,4:WHILE,0:functions,0:SWITCH,0:FOR,0:IF,1	44
0x4000840	    0x4881ecd80000	                           sub rsp, 0xd8	        52	update-index.c	FUNCTION_1
0x4000847	            0x84c0	                             test al, al	        52	update-index.c	FUNCTION_1
0x4000849	      0x4889742428	             mov qword [rsp + 0x28], rsi	        52	update-index.c	FUNCTION_1
0x400084e	      0x4889542430	             mov qword [rsp + 0x30], rdx	        52	update-index.c	FUNCTION_1
0x4000853	      0x48894c2438	             mov qword [rsp + 0x38], rcx	        52	update-index.c	FUNCTION_1
0x4000858	      0x4c89442440	              mov qword [rsp + 0x40], r8	        52	update-index.c	FUNCTION_1
0x400085d	      0x4c894c2448	              mov qword [rsp + 0x48], r9	        52	update-index.c	FUNCTION_1
0x4000862	            0x7437	                            je 0x400089b	        52	update-index.c	FUNCTION_1
0x4000864	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	        52	update-index.c	FUNCTION_1
0x4000869	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	        52	update-index.c	FUNCTION_1
0x400086e	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	        52	update-index.c	FUNCTION_1
0x4000873	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	        52	update-index.c	FUNCTION_1
0x400087b	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	        52	update-index.c	FUNCTION_1
0x4000883	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	        52	update-index.c	FUNCTION_1
0x400088b	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	        52	update-index.c	FUNCTION_1
0x4000893	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	        52	update-index.c	FUNCTION_1
0x400089b	    0x64488b042528	                mov rax, qword fs:[0x28]	        52	update-index.c	FUNCTION_1
0x40008a4	      0x4889442418	             mov qword [rsp + 0x18], rax	        52	update-index.c	FUNCTION_1
0x40008a9	            0x31c0	                            xor eax, eax	        52	update-index.c	FUNCTION_1
0x40008ab	    0x8b0500000000	            mov eax, dword [0x040008b1] 	        55	update-index.c	FUNCTION_1	IF_1
0x40008b1	            0x85c0	                           test eax, eax	        55	update-index.c	FUNCTION_1	IF_1
0x40008b3	            0x751b	                           jne 0x40008d0	        55	update-index.c	FUNCTION_1	IF_1
0x40008b5	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        62	update-index.c	FUNCTION_1
0x40008ba	    0x644833042528	                xor rax, qword fs:[0x28]	        62	update-index.c	FUNCTION_1
0x40008c3	            0x755b	                           jne 0x4000920	        62	update-index.c	FUNCTION_1
0x40008c5	    0x4881c4d80000	                           add rsp, 0xd8	        62	update-index.c	FUNCTION_1
0x40008cc	              0xc3	                                     ret	        62	update-index.c	FUNCTION_1
0x40008cd	           0xf1f00	                         nop dword [rax]	        62	update-index.c	FUNCTION_1
0x40008d0	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	        58	update-index.c	FUNCTION_1	CALL_1
0x40008d8	          0x4889fa	                            mov rdx, rdi	       117	stdio2.h	FUNCTION_113	CALL_1
0x40008db	    0x488b3d000000	            mov rdi, qword [0x040008e2] 	       117	stdio2.h	FUNCTION_113	CALL_1
0x40008e2	          0x4889e1	                            mov rcx, rsp	       117	stdio2.h	FUNCTION_113	CALL_1
0x40008e5	      0xbe01000000	                              mov esi, 1	       117	stdio2.h	FUNCTION_113	CALL_1
0x40008ea	    0xc70424080000	                      mov dword [rsp], 8	        58	update-index.c	FUNCTION_1	CALL_1
0x40008f1	      0x4889442408	                mov qword [rsp + 8], rax	        58	update-index.c	FUNCTION_1	CALL_1
0x40008f6	      0x488d442420	                   lea rax, [rsp + 0x20]	        58	update-index.c	FUNCTION_1	CALL_1
0x40008fb	    0xc74424043000	               mov dword [rsp + 4], 0x30	        58	update-index.c	FUNCTION_1	CALL_1
0x4000903	      0x4889442410	             mov qword [rsp + 0x10], rax	        58	update-index.c	FUNCTION_1	CALL_1
0x4000908	      0xe800000000	                          call 0x400090d	       117	stdio2.h	FUNCTION_113	CALL_1
0x400090d	    0x488b35000000	            mov rsi, qword [0x04000914] 	        81	stdio.h	FUNCTION_132	CALL_1
0x4000914	      0xbf0a000000	                            mov edi, 0xa	        81	stdio.h	FUNCTION_132	CALL_1
0x4000919	      0xe800000000	                          call 0x400091e	        81	stdio.h	FUNCTION_132	CALL_1
0x400091e	            0xeb95	                           jmp 0x40008b5	        81	stdio.h	FUNCTION_132	CALL_1
0x4000920	      0xe800000000	                          call 0x4000925	        62	update-index.c	FUNCTION_1
refresh	DO,0:ELSE,0:CALL,3:WHILE,0:functions,0:SWITCH,0:FOR,0:IF,0	23
0x40005c0	              0x55	                                push rbp	       776	update-index.c	FUNCTION_26
0x40005c1	              0x53	                                push rbx	       776	update-index.c	FUNCTION_26
0x40005c2	          0x4889fd	                            mov rbp, rdi	       776	update-index.c	FUNCTION_26
0x40005c5	            0x89f3	                            mov ebx, esi	       776	update-index.c	FUNCTION_26
0x40005c7	        0x4883ec08	                              sub rsp, 8	       776	update-index.c	FUNCTION_26
0x40005cb	      0xe800000000	                          call 0x40005d0	       777	update-index.c	FUNCTION_26	CALL_1
0x40005d0	            0x31f6	                            xor esi, esi	       778	update-index.c	FUNCTION_26	CALL_2
0x40005d2	      0xbf00000000	                              mov edi, 0	       778	update-index.c	FUNCTION_26	CALL_2
0x40005d7	      0xe800000000	                          call 0x40005dc	       778	update-index.c	FUNCTION_26	CALL_2
0x40005dc	           0xb5d00	                     or ebx, dword [rbp]	       779	update-index.c	FUNCTION_26	CALL_3
0x40005df	            0x31d2	                            xor edx, edx	       779	update-index.c	FUNCTION_26	CALL_3
0x40005e1	          0x4531c0	                            xor r8d, r8d	       779	update-index.c	FUNCTION_26	CALL_3
0x40005e4	            0x31c9	                            xor ecx, ecx	       779	update-index.c	FUNCTION_26	CALL_3
0x40005e6	      0xbf00000000	                              mov edi, 0	       779	update-index.c	FUNCTION_26	CALL_3
0x40005eb	            0x89de	                            mov esi, ebx	       779	update-index.c	FUNCTION_26	CALL_3
0x40005ed	      0xe800000000	                          call 0x40005f2	       779	update-index.c	FUNCTION_26	CALL_3
0x40005f2	        0x488b5508	                mov rdx, qword [rbp + 8]	       779	update-index.c	FUNCTION_26	CALL_3
0x40005f6	             0x902	                     or dword [rdx], eax	       779	update-index.c	FUNCTION_26	CALL_3
0x40005f8	        0x4883c408	                              add rsp, 8	       781	update-index.c	FUNCTION_26
0x40005fc	            0x31c0	                            xor eax, eax	       781	update-index.c	FUNCTION_26
0x40005fe	              0x5b	                                 pop rbx	       781	update-index.c	FUNCTION_26
0x40005ff	              0x5d	                                 pop rbp	       781	update-index.c	FUNCTION_26
0x4000600	              0xc3	                                     ret	       781	update-index.c	FUNCTION_26
reupdate_callback	DO,0:ELSE,0:CALL,3:WHILE,0:functions,0:SWITCH,0:FOR,0:IF,1	126
0x4001280	            0x4157	                                push r15	       901	update-index.c	FUNCTION_36
0x4001282	            0x4156	                                push r14	       901	update-index.c	FUNCTION_36
0x4001284	            0x4155	                                push r13	       901	update-index.c	FUNCTION_36
0x4001286	            0x4154	                                push r12	       901	update-index.c	FUNCTION_36
0x4001288	          0x4989fd	                            mov r13, rdi	       901	update-index.c	FUNCTION_36
0x400128b	              0x55	                                push rbp	       901	update-index.c	FUNCTION_36
0x400128c	              0x53	                                push rbx	       901	update-index.c	FUNCTION_36
0x400128d	        0x4883ec38	                           sub rsp, 0x38	       901	update-index.c	FUNCTION_36
0x4001291	    0x64488b042528	                mov rax, qword fs:[0x28]	       901	update-index.c	FUNCTION_36
0x400129a	      0x4889442428	             mov qword [rsp + 0x28], rax	       901	update-index.c	FUNCTION_36
0x400129f	            0x31c0	                            xor eax, eax	       901	update-index.c	FUNCTION_36
0x40012a1	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       902	update-index.c	FUNCTION_36
0x40012a5	      0x4889442408	                mov qword [rsp + 8], rax	       902	update-index.c	FUNCTION_36
0x40012aa	    0x488b05000000	            mov rax, qword [0x040012b1] 	       903	update-index.c	FUNCTION_36
0x40012b1	        0x488b5808	                mov rbx, qword [rax + 8]	       903	update-index.c	FUNCTION_36
0x40012b5	      0xe800000000	                          call 0x40012ba	       906	update-index.c	FUNCTION_36	CALL_1
0x40012ba	        0x498b4500	                    mov rax, qword [r13]	       728	update-index.c	FUNCTION_25	CALL_1
0x40012be	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       728	update-index.c	FUNCTION_25	CALL_1
0x40012c3	      0xba01000000	                              mov edx, 1	       728	update-index.c	FUNCTION_25	CALL_1
0x40012c8	          0x4889d9	                            mov rcx, rbx	       728	update-index.c	FUNCTION_25	CALL_1
0x40012cb	            0x31f6	                            xor esi, esi	       728	update-index.c	FUNCTION_25	CALL_1
0x40012cd	        0x4c8d4008	                       lea r8, [rax + 8]	       728	update-index.c	FUNCTION_25	CALL_1
0x40012d1	      0xe800000000	                          call 0x40012d6	       728	update-index.c	FUNCTION_25	CALL_1
0x40012d6	      0xbe00000000	                              mov esi, 0	       732	update-index.c	FUNCTION_25	IF_1	CALL_2
0x40012db	      0xbf00000000	                              mov edi, 0	       732	update-index.c	FUNCTION_25	IF_1	CALL_2
0x40012e0	      0xe800000000	                          call 0x40012e5	       732	update-index.c	FUNCTION_25	IF_1	CALL_2
0x40012e5	    0x8b1500000000	            mov edx, dword [0x040012eb] 	       732	update-index.c	FUNCTION_25	IF_1	CALL_2
0x40012eb	        0x89442404	                mov dword [rsp + 4], eax	       732	update-index.c	FUNCTION_25	IF_1	CALL_2
0x40012ef	            0x85d2	                           test edx, edx	       738	update-index.c	FUNCTION_25	FOR_1
0x40012f1	     0xf84c9000000	                            je 0x40013c0	       738	update-index.c	FUNCTION_25	FOR_1
0x40012f7	            0x31ed	                            xor ebp, ebp	       738	update-index.c	FUNCTION_25	FOR_1
0x40012f9	          0x4531ff	                          xor r15d, r15d	       738	update-index.c	FUNCTION_25	FOR_1
0x40012fc	            0xeb13	                           jmp 0x4001311	       738	update-index.c	FUNCTION_25	FOR_1
0x40012fe	            0x6690	                                     nop	       738	update-index.c	FUNCTION_25	FOR_1
0x4001300	        0x4183c701	                             add r15d, 1	       738	update-index.c	FUNCTION_25	FOR_1
0x4001304	        0x4883c508	                              add rbp, 8	       738	update-index.c	FUNCTION_25	FOR_1
0x4001308	          0x4139d7	                           cmp r15d, edx	       738	update-index.c	FUNCTION_25	FOR_1
0x400130b	     0xf83af000000	                           jae 0x40013c0	       738	update-index.c	FUNCTION_25	FOR_1
0x4001311	    0x488b05000000	            mov rax, qword [0x04001318] 	       739	update-index.c	FUNCTION_25	FOR_1
0x4001318	        0x488b1c28	              mov rbx, qword [rax + rbp]	       739	update-index.c	FUNCTION_25	FOR_1
0x400131c	    0xf74338003000	        test dword [rbx + 0x38], 0x3000 	       744	update-index.c	FUNCTION_25	FOR_1	IF_2	CALL_4
0x4001323	            0x75db	                           jne 0x4001300	       744	update-index.c	FUNCTION_25	FOR_1	IF_2	CALL_4
0x4001325	          0x8b4334	            mov eax, dword [rbx + 0x34] 	       337	dir.h	FUNCTION_41	CALL_4
0x4001328	        0x4c8d6358	                   lea r12, [rbx + 0x58]	       336	dir.h	FUNCTION_41	CALL_2
0x400132c	          0x8b533c	            mov edx, dword [rbx + 0x3c] 	       336	dir.h	FUNCTION_41	CALL_2
0x400132f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       336	dir.h	FUNCTION_41	CALL_2
0x4001334	          0x4c89e6	                            mov rsi, r12	       336	dir.h	FUNCTION_41	CALL_2
0x4001337	      0x2500f00000	                         and eax, 0xf000	       337	dir.h	FUNCTION_41	CALL_4
0x400133c	      0x3d00400000	                         cmp eax, 0x4000	       336	dir.h	FUNCTION_41	CALL_2
0x4001341	        0x410f94c1	                                sete r9b	       336	dir.h	FUNCTION_41	CALL_2
0x4001345	      0x3d00e00000	                         cmp eax, 0xe000	       336	dir.h	FUNCTION_41	CALL_2
0x400134a	           0xf94c0	                                 sete al	       336	dir.h	FUNCTION_41	CALL_2
0x400134d	          0x4531c0	                            xor r8d, r8d	       336	dir.h	FUNCTION_41	CALL_2
0x4001350	            0x31c9	                            xor ecx, ecx	       336	dir.h	FUNCTION_41	CALL_2
0x4001352	          0x4109c1	                             or r9d, eax	       336	dir.h	FUNCTION_41	CALL_2
0x4001355	        0x4183e101	                              and r9d, 1	       336	dir.h	FUNCTION_41	CALL_2
0x4001359	      0xe800000000	                          call 0x400135e	       336	dir.h	FUNCTION_41	CALL_2
0x400135e	            0x85c0	                           test eax, eax	       744	update-index.c	FUNCTION_25	FOR_1	IF_2	CALL_4
0x4001360	     0xf84fa000000	                            je 0x4001460	       744	update-index.c	FUNCTION_25	FOR_1	IF_2	CALL_4
0x4001366	        0x8b442404	                mov eax, dword [rsp + 4]	       746	update-index.c	FUNCTION_25	FOR_1	IF_3
0x400136a	            0x85c0	                           test eax, eax	       746	update-index.c	FUNCTION_25	FOR_1	IF_3
0x400136c	     0xf849e000000	                            je 0x4001410	       746	update-index.c	FUNCTION_25	FOR_1	IF_3
0x4001372	          0x4531f6	                          xor r14d, r14d	       740	update-index.c	FUNCTION_25	FOR_1
0x4001375	          0x4c89e7	                            mov rdi, r12	       759	update-index.c	FUNCTION_25	FOR_1	CALL_9
0x4001378	    0x8b1d00000000	            mov ebx, dword [0x0400137e] 	       758	update-index.c	FUNCTION_25	FOR_1
0x400137e	      0xe800000000	                          call 0x4001383	       759	update-index.c	FUNCTION_25	FOR_1	CALL_9
0x4001383	          0x4989c4	                            mov r12, rax	       759	update-index.c	FUNCTION_25	FOR_1	CALL_9
0x4001386	          0x4889c7	                            mov rdi, rax	       760	update-index.c	FUNCTION_25	FOR_1	CALL_10
0x4001389	      0xe822fbffff	                     call sym.update_one	       760	update-index.c	FUNCTION_25	FOR_1	CALL_10
0x400138e	          0x4c89e7	                            mov rdi, r12	       761	update-index.c	FUNCTION_25	FOR_1	CALL_11
0x4001391	      0xe800000000	                          call 0x4001396	       761	update-index.c	FUNCTION_25	FOR_1	CALL_11
0x4001396	          0x4c89f7	                            mov rdi, r14	       762	update-index.c	FUNCTION_25	FOR_1	CALL_12
0x4001399	      0xe800000000	                          call 0x400139e	       762	update-index.c	FUNCTION_25	FOR_1	CALL_12
0x400139e	    0x8b1500000000	            mov edx, dword [0x040013a4] 	       763	update-index.c	FUNCTION_25	FOR_1	IF_5
0x40013a4	            0x39d3	                            cmp ebx, edx	       763	update-index.c	FUNCTION_25	FOR_1	IF_5
0x40013a6	     0xf8543ffffff	                           jne 0x40012ef	       763	update-index.c	FUNCTION_25	FOR_1	IF_5
0x40013ac	        0x4183c701	                             add r15d, 1	       738	update-index.c	FUNCTION_25	FOR_1
0x40013b0	        0x4883c508	                              add rbp, 8	       738	update-index.c	FUNCTION_25	FOR_1
0x40013b4	          0x4139d7	                           cmp r15d, edx	       738	update-index.c	FUNCTION_25	FOR_1
0x40013b7	     0xf8254ffffff	                            jb 0x4001311	       738	update-index.c	FUNCTION_25	FOR_1
0x40013bd	           0xf1f00	                         nop dword [rax]	       738	update-index.c	FUNCTION_25	FOR_1
0x40013c0	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       766	update-index.c	FUNCTION_25	CALL_13
0x40013c5	      0xe800000000	                          call 0x40013ca	       766	update-index.c	FUNCTION_25	CALL_13
0x40013ca	      0x488b442408	                mov rax, qword [rsp + 8]	       907	update-index.c	FUNCTION_36	CALL_2
0x40013cf	    0xc70000000000	                      mov dword [rax], 0	       907	update-index.c	FUNCTION_36	CALL_2
0x40013d5	        0x49634510	         movsxd rax, dword [r13 + 0x10] 	       912	update-index.c	FUNCTION_36
0x40013d9	    0x41c745100100	               mov dword [r13 + 0x10], 1	       913	update-index.c	FUNCTION_36
0x40013e1	    0x488d04c5f8ff	                    lea rax, [rax*8 - 8]	       912	update-index.c	FUNCTION_36
0x40013e9	        0x49014500	                    add qword [r13], rax	       912	update-index.c	FUNCTION_36
0x40013ed	            0x31c0	                            xor eax, eax	       915	update-index.c	FUNCTION_36
0x40013ef	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       915	update-index.c	FUNCTION_36
0x40013f4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       915	update-index.c	FUNCTION_36
0x40013fd	            0x756c	                           jne 0x400146b	       915	update-index.c	FUNCTION_36
0x40013ff	        0x4883c438	                           add rsp, 0x38	       915	update-index.c	FUNCTION_36
0x4001403	              0x5b	                                 pop rbx	       915	update-index.c	FUNCTION_36
0x4001404	              0x5d	                                 pop rbp	       915	update-index.c	FUNCTION_36
0x4001405	            0x415c	                                 pop r12	       915	update-index.c	FUNCTION_36
0x4001407	            0x415d	                                 pop r13	       915	update-index.c	FUNCTION_36
0x4001409	            0x415e	                                 pop r14	       915	update-index.c	FUNCTION_36
0x400140b	            0x415f	                                 pop r15	       915	update-index.c	FUNCTION_36
0x400140d	              0xc3	                                     ret	       915	update-index.c	FUNCTION_36
0x400140e	            0x6690	                                     nop	       915	update-index.c	FUNCTION_36
0x4001410	          0x8b4b3c	            mov ecx, dword [rbx + 0x3c] 	       747	update-index.c	FUNCTION_25	FOR_1	IF_3	CALL_5
0x4001413	          0x4531c0	                            xor r8d, r8d	       747	update-index.c	FUNCTION_25	FOR_1	IF_3	CALL_5
0x4001416	            0x31ff	                            xor edi, edi	       747	update-index.c	FUNCTION_25	FOR_1	IF_3	CALL_5
0x4001418	          0x4c89e2	                            mov rdx, r12	       747	update-index.c	FUNCTION_25	FOR_1	IF_3	CALL_5
0x400141b	      0xbe00000000	                              mov esi, 0	       747	update-index.c	FUNCTION_25	FOR_1	IF_3	CALL_5
0x4001420	      0xe88becffff	                   call sym.read_one_ent	       747	update-index.c	FUNCTION_25	FOR_1	IF_3	CALL_5
0x4001425	          0x4885c0	                           test rax, rax	       749	update-index.c	FUNCTION_25	FOR_1	IF_4
0x4001428	          0x4989c6	                            mov r14, rax	       747	update-index.c	FUNCTION_25	FOR_1	IF_3	CALL_5
0x400142b	     0xf8441ffffff	                            je 0x4001372	       749	update-index.c	FUNCTION_25	FOR_1	IF_4
0x4001431	          0x8b4034	            mov eax, dword [rax + 0x34] 	       749	update-index.c	FUNCTION_25	FOR_1	IF_4
0x4001434	          0x394334	            cmp dword [rbx + 0x34], eax 	       749	update-index.c	FUNCTION_25	FOR_1	IF_4
0x4001437	     0xf8538ffffff	                           jne 0x4001375	       749	update-index.c	FUNCTION_25	FOR_1	IF_4
0x400143d	        0x498d7644	                   lea rsi, [r14 + 0x44]	       975	cache.h	FUNCTION_50	CALL_1
0x4001441	        0x488d7b44	                   lea rdi, [rbx + 0x44]	       975	cache.h	FUNCTION_50	CALL_1
0x4001445	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_50	CALL_1
0x400144a	      0xe800000000	                          call 0x400144f	       975	cache.h	FUNCTION_50	CALL_1
0x400144f	            0x85c0	                           test eax, eax	       749	update-index.c	FUNCTION_25	FOR_1	IF_4
0x4001451	     0xf851effffff	                           jne 0x4001375	       749	update-index.c	FUNCTION_25	FOR_1	IF_4
0x4001457	          0x4c89f7	                            mov rdi, r14	       751	update-index.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x400145a	      0xe800000000	                          call 0x400145f	       751	update-index.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x400145f	              0x90	                                     nop	       751	update-index.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x4001460	    0x8b1500000000	            mov edx, dword [0x04001466] 	       751	update-index.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x4001466	      0xe995feffff	                           jmp 0x4001300	       751	update-index.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x400146b	      0xe800000000	       call sym.stdin_cacheinfo_callback	       915	update-index.c	FUNCTION_36
add_cacheinfo	DO,0:ELSE,0:CALL,12:WHILE,0:functions,0:SWITCH,0:FOR,0:IF,3	105
0x4000930	            0x4157	                                push r15	       405	update-index.c	FUNCTION_17
0x4000932	            0x4156	                                push r14	       405	update-index.c	FUNCTION_17
0x4000934	          0x4989f7	                            mov r15, rsi	       405	update-index.c	FUNCTION_17
0x4000937	            0x4155	                                push r13	       405	update-index.c	FUNCTION_17
0x4000939	            0x4154	                                push r12	       405	update-index.c	FUNCTION_17
0x400093b	          0x4189fd	                           mov r13d, edi	       405	update-index.c	FUNCTION_17
0x400093e	              0x55	                                push rbp	       405	update-index.c	FUNCTION_17
0x400093f	              0x53	                                push rbx	       405	update-index.c	FUNCTION_17
0x4000940	          0x4889d7	                            mov rdi, rdx	       409	update-index.c	FUNCTION_17	IF_1	CALL_1
0x4000943	          0x4989d4	                            mov r12, rdx	       405	update-index.c	FUNCTION_17
0x4000946	            0x89cd	                            mov ebp, ecx	       405	update-index.c	FUNCTION_17
0x4000948	        0x4883ec08	                              sub rsp, 8	       405	update-index.c	FUNCTION_17
0x400094c	      0xe800000000	                          call 0x4000951	       409	update-index.c	FUNCTION_17	IF_1	CALL_1
0x4000951	            0x85c0	                           test eax, eax	       409	update-index.c	FUNCTION_17	IF_1	CALL_1
0x4000953	     0xf840f010000	                            je 0x4000a68	       409	update-index.c	FUNCTION_17	IF_1	CALL_1
0x4000959	          0x4c89e7	                            mov rdi, r12	       412	update-index.c	FUNCTION_17	CALL_3
0x400095c	      0xe800000000	                          call 0x4000961	       412	update-index.c	FUNCTION_17	CALL_3
0x4000961	          0x8d7059	                   lea esi, [rax + 0x59]	       414	update-index.c	FUNCTION_17	CALL_5
0x4000964	      0xbf01000000	                              mov edi, 1	       414	update-index.c	FUNCTION_17	CALL_5
0x4000969	          0x4989c6	                            mov r14, rax	       412	update-index.c	FUNCTION_17	CALL_3
0x400096c	          0x4863f6	                         movsxd rsi, esi	       414	update-index.c	FUNCTION_17	CALL_5
0x400096f	      0xe800000000	                          call 0x4000974	       414	update-index.c	FUNCTION_17	CALL_5
0x4000974	          0x498b17	                    mov rdx, qword [r15]	        53	string3.h	FUNCTION_81	CALL_3
0x4000977	        0x488d7858	                   lea rdi, [rax + 0x58]	        53	string3.h	FUNCTION_81	CALL_3
0x400097b	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_81	CALL_3
0x400097e	          0x4889c3	                            mov rbx, rax	       414	update-index.c	FUNCTION_17	CALL_5
0x4000981	        0x48895044	             mov qword [rax + 0x44], rdx	        53	string3.h	FUNCTION_81	CALL_3
0x4000985	        0x498b5708	                mov rdx, qword [r15 + 8]	        53	string3.h	FUNCTION_81	CALL_3
0x4000989	        0x4889504c	             mov qword [rax + 0x4c], rdx	        53	string3.h	FUNCTION_81	CALL_3
0x400098d	        0x418b5710	            mov edx, dword [r15 + 0x10] 	        53	string3.h	FUNCTION_81	CALL_3
0x4000991	          0x895054	             mov dword [rax + 0x54], edx	        53	string3.h	FUNCTION_81	CALL_3
0x4000994	          0x4963d6	                        movsxd rdx, r14d	        53	string3.h	FUNCTION_81	CALL_3
0x4000997	      0xe800000000	                          call 0x400099c	        53	string3.h	FUNCTION_81	CALL_3
0x400099c	          0x4489e8	                           mov eax, r13d	       256	cache.h	FUNCTION_45	IF_1	CALL_1
0x400099f	            0x89e9	                            mov ecx, ebp	       242	cache.h	FUNCTION_44
0x40009a1	        0x4489733c	            mov dword [rbx + 0x3c], r14d	       419	update-index.c	FUNCTION_17
0x40009a5	      0x2500f00000	                         and eax, 0xf000	       256	cache.h	FUNCTION_45	IF_1	CALL_1
0x40009aa	          0xc1e10c	                            shl ecx, 0xc	       242	cache.h	FUNCTION_44
0x40009ad	      0x3d00a00000	                         cmp eax, 0xa000	       256	cache.h	FUNCTION_45	IF_1	CALL_1
0x40009b2	          0x894b38	             mov dword [rbx + 0x38], ecx	       418	update-index.c	FUNCTION_17	CALL_8
0x40009b5	            0x7428	                            je 0x40009df	       256	cache.h	FUNCTION_45	IF_1	CALL_1
0x40009b7	      0x3d00400000	                         cmp eax, 0x4000	       258	cache.h	FUNCTION_45	IF_2	CALL_3
0x40009bc	     0xf848e000000	                            je 0x4000a50	       258	cache.h	FUNCTION_45	IF_2	CALL_3
0x40009c2	      0x3d00e00000	                         cmp eax, 0xe000	       258	cache.h	FUNCTION_45	IF_2	CALL_3
0x40009c7	     0xf8483000000	                            je 0x4000a50	       258	cache.h	FUNCTION_45	IF_2	CALL_3
0x40009cd	        0x4183e540	                          and r13d, 0x40	       260	cache.h	FUNCTION_45	CALL_4
0x40009d1	        0x4183fd01	                             cmp r13d, 1	       260	cache.h	FUNCTION_45	CALL_4
0x40009d5	            0x19c0	                            sbb eax, eax	       260	cache.h	FUNCTION_45	CALL_4
0x40009d7	          0x83e0b7	                     and eax, 0xffffffb7	       260	cache.h	FUNCTION_45	CALL_4
0x40009da	       0x5ed810000	                         add eax, 0x81ed	       260	cache.h	FUNCTION_45	CALL_4
0x40009df	    0x8b3500000000	            mov esi, dword [0x040009e5] 	       421	update-index.c	FUNCTION_17	IF_2
0x40009e5	          0x894334	             mov dword [rbx + 0x34], eax	       420	update-index.c	FUNCTION_17	CALL_9
0x40009e8	            0x85f6	                           test esi, esi	       421	update-index.c	FUNCTION_17	IF_2
0x40009ea	            0x7554	                           jne 0x4000a40	       421	update-index.c	FUNCTION_17	IF_2
0x40009ec	    0x8b1500000000	            mov edx, dword [0x040009f2] 	       423	update-index.c	FUNCTION_17
0x40009f2	            0x31c0	                            xor eax, eax	       423	update-index.c	FUNCTION_17
0x40009f4	      0xb902000000	                              mov ecx, 2	       424	update-index.c	FUNCTION_17
0x40009f9	          0x4889de	                            mov rsi, rbx	       425	update-index.c	FUNCTION_17	IF_3	CALL_10
0x40009fc	      0xbf00000000	                              mov edi, 0	       425	update-index.c	FUNCTION_17	IF_3	CALL_10
0x4000a01	            0x85d2	                           test edx, edx	       423	update-index.c	FUNCTION_17
0x4000a03	    0x8b1500000000	            mov edx, dword [0x04000a09] 	       424	update-index.c	FUNCTION_17
0x4000a09	           0xf95c0	                                setne al	       423	update-index.c	FUNCTION_17
0x4000a0c	            0x85d2	                           test edx, edx	       424	update-index.c	FUNCTION_17
0x4000a0e	           0xf45d1	                         cmovne edx, ecx	       424	update-index.c	FUNCTION_17
0x4000a11	             0x9c2	                             or edx, eax	       425	update-index.c	FUNCTION_17	IF_3	CALL_10
0x4000a13	      0xe800000000	                          call 0x4000a18	       425	update-index.c	FUNCTION_17	IF_3	CALL_10
0x4000a18	            0x85c0	                           test eax, eax	       425	update-index.c	FUNCTION_17	IF_3	CALL_10
0x4000a1a	            0x89c3	                            mov ebx, eax	       425	update-index.c	FUNCTION_17	IF_3	CALL_10
0x4000a1c	          0x4c89e6	                            mov rsi, r12	       426	update-index.c	FUNCTION_17	IF_3	CALL_11
0x4000a1f	            0x755f	                           jne 0x4000a80	       425	update-index.c	FUNCTION_17	IF_3	CALL_10
0x4000a21	      0xbf00000000	                              mov edi, 0	       428	update-index.c	FUNCTION_17	CALL_12
0x4000a26	            0x31c0	                            xor eax, eax	       428	update-index.c	FUNCTION_17	CALL_12
0x4000a28	      0xe813feffff	                         call sym.report	       428	update-index.c	FUNCTION_17	CALL_12
0x4000a2d	        0x4883c408	                              add rsp, 8	       430	update-index.c	FUNCTION_17
0x4000a31	            0x89d8	                            mov eax, ebx	       430	update-index.c	FUNCTION_17
0x4000a33	              0x5b	                                 pop rbx	       430	update-index.c	FUNCTION_17
0x4000a34	              0x5d	                                 pop rbp	       430	update-index.c	FUNCTION_17
0x4000a35	            0x415c	                                 pop r12	       430	update-index.c	FUNCTION_17
0x4000a37	            0x415d	                                 pop r13	       430	update-index.c	FUNCTION_17
0x4000a39	            0x415e	                                 pop r14	       430	update-index.c	FUNCTION_17
0x4000a3b	            0x415f	                                 pop r15	       430	update-index.c	FUNCTION_17
0x4000a3d	              0xc3	                                     ret	       430	update-index.c	FUNCTION_17
0x4000a3e	            0x6690	                                     nop	       430	update-index.c	FUNCTION_17
0x4000a40	          0x80cd80	                             or ch, 0x80	       422	update-index.c	FUNCTION_17	IF_2
0x4000a43	          0x894b38	             mov dword [rbx + 0x38], ecx	       422	update-index.c	FUNCTION_17	IF_2
0x4000a46	            0xeba4	                           jmp 0x40009ec	       422	update-index.c	FUNCTION_17	IF_2
0x4000a48	     0xf1f84000000	                   nop dword [rax + rax]	       422	update-index.c	FUNCTION_17	IF_2
0x4000a50	    0x8b3500000000	            mov esi, dword [0x04000a56] 	       421	update-index.c	FUNCTION_17	IF_2
0x4000a56	      0xb800e00000	                         mov eax, 0xe000	       259	cache.h	FUNCTION_45	IF_2
0x4000a5b	          0x894334	             mov dword [rbx + 0x34], eax	       420	update-index.c	FUNCTION_17	CALL_9
0x4000a5e	            0x85f6	                           test esi, esi	       421	update-index.c	FUNCTION_17	IF_2
0x4000a60	            0x748a	                            je 0x40009ec	       421	update-index.c	FUNCTION_17	IF_2
0x4000a62	            0xebdc	                           jmp 0x4000a40	       421	update-index.c	FUNCTION_17	IF_2
0x4000a64	         0xf1f4000	                         nop dword [rax]	       421	update-index.c	FUNCTION_17	IF_2
0x4000a68	          0x4c89e6	                            mov rsi, r12	       410	update-index.c	FUNCTION_17	CALL_2
0x4000a6b	      0xbf00000000	                              mov edi, 0	       410	update-index.c	FUNCTION_17	CALL_2
0x4000a70	      0xbbffffffff	                     mov ebx, 0xffffffff	       410	update-index.c	FUNCTION_17	CALL_2
0x4000a75	      0xe800000000	                          call 0x4000a7a	       410	update-index.c	FUNCTION_17	CALL_2
0x4000a7a	            0xebb1	                           jmp 0x4000a2d	       410	update-index.c	FUNCTION_17	CALL_2
0x4000a7c	         0xf1f4000	                         nop dword [rax]	       410	update-index.c	FUNCTION_17	CALL_2
0x4000a80	      0xbf00000000	                              mov edi, 0	       426	update-index.c	FUNCTION_17	IF_3	CALL_11
0x4000a85	            0x31c0	                            xor eax, eax	       426	update-index.c	FUNCTION_17	IF_3	CALL_11
0x4000a87	      0xbbffffffff	                     mov ebx, 0xffffffff	       426	update-index.c	FUNCTION_17	IF_3	CALL_11
0x4000a8c	      0xe800000000	                          call 0x4000a91	       426	update-index.c	FUNCTION_17	IF_3	CALL_11
0x4000a91	            0xeb9a	                           jmp 0x4000a2d	       426	update-index.c	FUNCTION_17	IF_3	CALL_11
refresh_callback	DO,0:ELSE,0:CALL,1:WHILE,0:functions,0:SWITCH,0:FOR,0:IF,0	3
0x4000620	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	       786	update-index.c	FUNCTION_27	CALL_1
0x4000624	            0x31f6	                            xor esi, esi	       786	update-index.c	FUNCTION_27	CALL_1
0x4000626	            0xeb98	                         jmp sym.refresh	       786	update-index.c	FUNCTION_27	CALL_1
remove_one_path	DO,0:ELSE,0:CALL,3:WHILE,0:functions,0:SWITCH,0:FOR,0:IF,2	27
0x4000200	    0x8b0500000000	            mov eax, dword [0x04000206] 	       248	update-index.c	FUNCTION_12	IF_1
0x4000206	              0x53	                                push rbx	       247	update-index.c	FUNCTION_12
0x4000207	          0x4889fe	                            mov rsi, rdi	       249	update-index.c	FUNCTION_12	CALL_1
0x400020a	          0x4889fb	                            mov rbx, rdi	       247	update-index.c	FUNCTION_12
0x400020d	            0x85c0	                           test eax, eax	       248	update-index.c	FUNCTION_12	IF_1
0x400020f	            0x742f	                            je 0x4000240	       248	update-index.c	FUNCTION_12	IF_1
0x4000211	      0xbf00000000	                              mov edi, 0	       250	update-index.c	FUNCTION_12	IF_2	CALL_2
0x4000216	      0xe800000000	                          call 0x400021b	       250	update-index.c	FUNCTION_12	IF_2	CALL_2
0x400021b	            0x85c0	                           test eax, eax	       250	update-index.c	FUNCTION_12	IF_2	CALL_2
0x400021d	            0x7509	                           jne 0x4000228	       250	update-index.c	FUNCTION_12	IF_2	CALL_2
0x400021f	              0x5b	                                 pop rbx	       253	update-index.c	FUNCTION_12
0x4000220	              0xc3	                                     ret	       253	update-index.c	FUNCTION_12
0x4000221	     0xf1f80000000	                         nop dword [rax]	       253	update-index.c	FUNCTION_12
0x4000228	          0x4889de	                            mov rsi, rbx	       251	update-index.c	FUNCTION_12	CALL_3
0x400022b	      0xbf00000000	                              mov edi, 0	       251	update-index.c	FUNCTION_12	CALL_3
0x4000230	            0x31c0	                            xor eax, eax	       251	update-index.c	FUNCTION_12	CALL_3
0x4000232	      0xe800000000	                          call 0x4000237	       251	update-index.c	FUNCTION_12	CALL_3
0x4000237	      0xb8ffffffff	                     mov eax, 0xffffffff	       251	update-index.c	FUNCTION_12	CALL_3
0x400023c	              0x5b	                                 pop rbx	       253	update-index.c	FUNCTION_12
0x400023d	              0xc3	                                     ret	       253	update-index.c	FUNCTION_12
0x400023e	            0x6690	                                     nop	       253	update-index.c	FUNCTION_12
0x4000240	      0xbf00000000	                              mov edi, 0	       249	update-index.c	FUNCTION_12	CALL_1
0x4000245	            0x31c0	                            xor eax, eax	       249	update-index.c	FUNCTION_12	CALL_1
0x4000247	      0xe800000000	                          call 0x400024c	       249	update-index.c	FUNCTION_12	CALL_1
0x400024c	      0xb8ffffffff	                     mov eax, 0xffffffff	       249	update-index.c	FUNCTION_12	CALL_1
0x4000251	              0x5b	                                 pop rbx	       253	update-index.c	FUNCTION_12
0x4000252	              0xc3	                                     ret	       253	update-index.c	FUNCTION_12
add_one_path	DO,0:ELSE,0:CALL,13:WHILE,0:functions,0:SWITCH,0:FOR,0:IF,3	134
0x4000630	          0x4885ff	                           test rdi, rdi	       275	update-index.c	FUNCTION_14	IF_1	CALL_2
0x4000633	            0x4156	                                push r14	       270	update-index.c	FUNCTION_14
0x4000635	          0x4189d6	                           mov r14d, edx	       270	update-index.c	FUNCTION_14
0x4000638	            0x4155	                                push r13	       270	update-index.c	FUNCTION_14
0x400063a	          0x4989f5	                            mov r13, rsi	       270	update-index.c	FUNCTION_14
0x400063d	            0x4154	                                push r12	       270	update-index.c	FUNCTION_14
0x400063f	          0x4989cc	                            mov r12, rcx	       270	update-index.c	FUNCTION_14
0x4000642	              0x55	                                push rbp	       270	update-index.c	FUNCTION_14
0x4000643	          0x4889fd	                            mov rbp, rdi	       270	update-index.c	FUNCTION_14
0x4000646	              0x53	                                push rbx	       270	update-index.c	FUNCTION_14
0x4000647	            0x740d	                            je 0x4000656	       275	update-index.c	FUNCTION_14	IF_1	CALL_2
0x4000649	    0xf74738003000	        test dword [rdi + 0x38], 0x3000 	       275	update-index.c	FUNCTION_14	IF_1	CALL_2
0x4000650	     0xf846a010000	                            je 0x40007c0	       275	update-index.c	FUNCTION_14	IF_1	CALL_2
0x4000656	        0x418d7659	                   lea esi, [r14 + 0x59]	       279	update-index.c	FUNCTION_14	CALL_4
0x400065a	      0xbf01000000	                              mov edi, 1	       279	update-index.c	FUNCTION_14	CALL_4
0x400065f	          0x4863f6	                         movsxd rsi, esi	       279	update-index.c	FUNCTION_14	CALL_4
0x4000662	      0xe800000000	                          call 0x4000667	       279	update-index.c	FUNCTION_14	CALL_4
0x4000667	        0x488d7858	                   lea rdi, [rax + 0x58]	        53	string3.h	FUNCTION_81	CALL_3
0x400066b	          0x4889c3	                            mov rbx, rax	       279	update-index.c	FUNCTION_14	CALL_4
0x400066e	          0x4963d6	                        movsxd rdx, r14d	        53	string3.h	FUNCTION_81	CALL_3
0x4000671	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_81	CALL_3
0x4000674	      0xe800000000	                          call 0x4000679	        53	string3.h	FUNCTION_81	CALL_3
0x4000679	    0xc74338000000	               mov dword [rbx + 0x38], 0	       281	update-index.c	FUNCTION_14	CALL_6
0x4000680	        0x4489733c	            mov dword [rbx + 0x3c], r14d	       282	update-index.c	FUNCTION_14
0x4000684	          0x4c89e6	                            mov rsi, r12	       283	update-index.c	FUNCTION_14	CALL_7
0x4000687	          0x4889df	                            mov rdi, rbx	       283	update-index.c	FUNCTION_14	CALL_7
0x400068a	      0xe800000000	                          call 0x400068f	       283	update-index.c	FUNCTION_14	CALL_7
0x400068f	    0x448b05000000	            mov r8d, dword [0x04000696] 	       266	cache.h	FUNCTION_46	IF_1	CALL_1
0x4000696	      0x418b542418	            mov edx, dword [r12 + 0x18] 	       284	update-index.c	FUNCTION_14	CALL_8
0x400069b	          0x4585c0	                           test r8d, r8d	       266	cache.h	FUNCTION_46	IF_1	CALL_1
0x400069e	     0xf84b4000000	                            je 0x4000758	       266	cache.h	FUNCTION_46	IF_1	CALL_1
0x40006a4	            0x89d0	                            mov eax, edx	       266	cache.h	FUNCTION_46	IF_1	CALL_1
0x40006a6	      0x2500f00000	                         and eax, 0xf000	       266	cache.h	FUNCTION_46	IF_1	CALL_1
0x40006ab	    0x8b3d00000000	            mov edi, dword [0x040006b1] 	       269	cache.h	FUNCTION_46	IF_2	CALL_3
0x40006b1	            0x85ff	                           test edi, edi	       269	cache.h	FUNCTION_46	IF_2	CALL_3
0x40006b3	            0x750b	                           jne 0x40006c0	       269	cache.h	FUNCTION_46	IF_2	CALL_3
0x40006b5	      0x3d00800000	                         cmp eax, 0x8000	       269	cache.h	FUNCTION_46	IF_2	CALL_3
0x40006ba	     0xf84d4000000	                            je 0x4000794	       269	cache.h	FUNCTION_46	IF_2	CALL_3
0x40006c0	      0x3d00a00000	                         cmp eax, 0xa000	       256	cache.h	FUNCTION_45	IF_1	CALL_1
0x40006c5	            0x7426	                            je 0x40006ed	       256	cache.h	FUNCTION_45	IF_1	CALL_1
0x40006c7	      0x3d00400000	                         cmp eax, 0x4000	       258	cache.h	FUNCTION_45	IF_2	CALL_3
0x40006cc	     0xf840e010000	                            je 0x40007e0	       258	cache.h	FUNCTION_45	IF_2	CALL_3
0x40006d2	      0x3d00e00000	                         cmp eax, 0xe000	       258	cache.h	FUNCTION_45	IF_2	CALL_3
0x40006d7	     0xf8403010000	                            je 0x40007e0	       258	cache.h	FUNCTION_45	IF_2	CALL_3
0x40006dd	          0x83e240	                           and edx, 0x40	       260	cache.h	FUNCTION_45	CALL_4
0x40006e0	          0x83fa01	                              cmp edx, 1	       260	cache.h	FUNCTION_45	CALL_4
0x40006e3	            0x19c0	                            sbb eax, eax	       260	cache.h	FUNCTION_45	CALL_4
0x40006e5	          0x83e0b7	                     and eax, 0xffffffb7	       260	cache.h	FUNCTION_45	CALL_4
0x40006e8	       0x5ed810000	                         add eax, 0x81ed	       260	cache.h	FUNCTION_45	CALL_4
0x40006ed	    0x8b3500000000	            mov esi, dword [0x040006f3] 	       286	update-index.c	FUNCTION_14	IF_2	CALL_9
0x40006f3	            0x31c9	                            xor ecx, ecx	       286	update-index.c	FUNCTION_14	IF_2	CALL_9
0x40006f5	        0x488d7b44	                   lea rdi, [rbx + 0x44]	       286	update-index.c	FUNCTION_14	IF_2	CALL_9
0x40006f9	          0x894334	             mov dword [rbx + 0x34], eax	       284	update-index.c	FUNCTION_14	CALL_8
0x40006fc	          0x4c89e2	                            mov rdx, r12	       286	update-index.c	FUNCTION_14	IF_2	CALL_9
0x40006ff	            0x85f6	                           test esi, esi	       286	update-index.c	FUNCTION_14	IF_2	CALL_9
0x4000701	          0x4c89ee	                            mov rsi, r13	       286	update-index.c	FUNCTION_14	IF_2	CALL_9
0x4000704	           0xf94c1	                                 sete cl	       286	update-index.c	FUNCTION_14	IF_2	CALL_9
0x4000707	      0xe800000000	                          call 0x400070c	       286	update-index.c	FUNCTION_14	IF_2	CALL_9
0x400070c	            0x85c0	                           test eax, eax	       286	update-index.c	FUNCTION_14	IF_2	CALL_9
0x400070e	     0xf8514010000	                           jne 0x4000828	       286	update-index.c	FUNCTION_14	IF_2	CALL_9
0x4000714	    0x8b1500000000	            mov edx, dword [0x0400071a] 	       291	update-index.c	FUNCTION_14
0x400071a	            0x31c0	                            xor eax, eax	       291	update-index.c	FUNCTION_14
0x400071c	      0xb902000000	                              mov ecx, 2	       292	update-index.c	FUNCTION_14
0x4000721	          0x4889de	                            mov rsi, rbx	       293	update-index.c	FUNCTION_14	IF_3	CALL_11
0x4000724	      0xbf00000000	                              mov edi, 0	       293	update-index.c	FUNCTION_14	IF_3	CALL_11
0x4000729	            0x85d2	                           test edx, edx	       291	update-index.c	FUNCTION_14
0x400072b	    0x8b1500000000	            mov edx, dword [0x04000731] 	       292	update-index.c	FUNCTION_14
0x4000731	           0xf95c0	                                setne al	       291	update-index.c	FUNCTION_14
0x4000734	            0x85d2	                           test edx, edx	       292	update-index.c	FUNCTION_14
0x4000736	           0xf45d1	                         cmovne edx, ecx	       292	update-index.c	FUNCTION_14
0x4000739	             0x9c2	                             or edx, eax	       293	update-index.c	FUNCTION_14	IF_3	CALL_11
0x400073b	      0xe800000000	                          call 0x4000740	       293	update-index.c	FUNCTION_14	IF_3	CALL_11
0x4000740	            0x85c0	                           test eax, eax	       293	update-index.c	FUNCTION_14	IF_3	CALL_11
0x4000742	     0xf85b8000000	                           jne 0x4000800	       293	update-index.c	FUNCTION_14	IF_3	CALL_11
0x4000748	            0x31c0	                            xor eax, eax	       276	update-index.c	FUNCTION_14	IF_1
0x400074a	              0x5b	                                 pop rbx	       298	update-index.c	FUNCTION_14
0x400074b	              0x5d	                                 pop rbp	       298	update-index.c	FUNCTION_14
0x400074c	            0x415c	                                 pop r12	       298	update-index.c	FUNCTION_14
0x400074e	            0x415d	                                 pop r13	       298	update-index.c	FUNCTION_14
0x4000750	            0x415e	                                 pop r14	       298	update-index.c	FUNCTION_14
0x4000752	              0xc3	                                     ret	       298	update-index.c	FUNCTION_14
0x4000753	       0xf1f440000	                   nop dword [rax + rax]	       298	update-index.c	FUNCTION_14
0x4000758	            0x89d0	                            mov eax, edx	       266	cache.h	FUNCTION_46	IF_1	CALL_1
0x400075a	      0x2500f00000	                         and eax, 0xf000	       266	cache.h	FUNCTION_46	IF_1	CALL_1
0x400075f	          0x4885ed	                           test rbp, rbp	       266	cache.h	FUNCTION_46	IF_1	CALL_1
0x4000762	     0xf8443ffffff	                            je 0x40006ab	       266	cache.h	FUNCTION_46	IF_1	CALL_1
0x4000768	      0x3d00800000	                         cmp eax, 0x8000	       266	cache.h	FUNCTION_46	IF_1	CALL_1
0x400076d	     0xf8538ffffff	                           jne 0x40006ab	       266	cache.h	FUNCTION_46	IF_1	CALL_1
0x4000773	          0x8b4534	            mov eax, dword [rbp + 0x34] 	       267	cache.h	FUNCTION_46	IF_1	CALL_2
0x4000776	            0x89c1	                            mov ecx, eax	       267	cache.h	FUNCTION_46	IF_1	CALL_2
0x4000778	    0x81e100f00000	                         and ecx, 0xf000	       267	cache.h	FUNCTION_46	IF_1	CALL_2
0x400077e	    0x81f900a00000	                         cmp ecx, 0xa000	       267	cache.h	FUNCTION_46	IF_1	CALL_2
0x4000784	     0xf8463ffffff	                            je 0x40006ed	       267	cache.h	FUNCTION_46	IF_1	CALL_2
0x400078a	    0x8b0500000000	            mov eax, dword [0x04000790] 	       269	cache.h	FUNCTION_46	IF_2	CALL_3
0x4000790	            0x85c0	                           test eax, eax	       269	cache.h	FUNCTION_46	IF_2	CALL_3
0x4000792	            0x755c	                           jne 0x40007f0	       269	cache.h	FUNCTION_46	IF_2	CALL_3
0x4000794	          0x4885ed	                           test rbp, rbp	       270	cache.h	FUNCTION_46	IF_2	IF_3	CALL_4
0x4000797	      0xb8a4810000	                         mov eax, 0x81a4	       260	cache.h	FUNCTION_45	CALL_4
0x400079c	     0xf844bffffff	                            je 0x40006ed	       270	cache.h	FUNCTION_46	IF_2	IF_3	CALL_4
0x40007a2	          0x8b4534	            mov eax, dword [rbp + 0x34] 	       270	cache.h	FUNCTION_46	IF_2	IF_3	CALL_4
0x40007a5	            0x89c2	                            mov edx, eax	       270	cache.h	FUNCTION_46	IF_2	IF_3	CALL_4
0x40007a7	    0x81e200f00000	                         and edx, 0xf000	       270	cache.h	FUNCTION_46	IF_2	IF_3	CALL_4
0x40007ad	    0x81fa00800000	                         cmp edx, 0x8000	       260	cache.h	FUNCTION_45	CALL_4
0x40007b3	      0xbaa4810000	                         mov edx, 0x81a4	       260	cache.h	FUNCTION_45	CALL_4
0x40007b8	           0xf45c2	                         cmovne eax, edx	       260	cache.h	FUNCTION_45	CALL_4
0x40007bb	      0xe92dffffff	                           jmp 0x40006ed	       260	cache.h	FUNCTION_45	CALL_4
0x40007c0	            0x31c9	                            xor ecx, ecx	       275	update-index.c	FUNCTION_14	IF_1	CALL_2
0x40007c2	          0x4889fe	                            mov rsi, rdi	       275	update-index.c	FUNCTION_14	IF_1	CALL_2
0x40007c5	          0x4c89e2	                            mov rdx, r12	       275	update-index.c	FUNCTION_14	IF_1	CALL_2
0x40007c8	      0xbf00000000	                              mov edi, 0	       275	update-index.c	FUNCTION_14	IF_1	CALL_2
0x40007cd	      0xe800000000	                          call 0x40007d2	       275	update-index.c	FUNCTION_14	IF_1	CALL_2
0x40007d2	            0x85c0	                           test eax, eax	       275	update-index.c	FUNCTION_14	IF_1	CALL_2
0x40007d4	     0xf857cfeffff	                           jne 0x4000656	       275	update-index.c	FUNCTION_14	IF_1	CALL_2
0x40007da	      0xe969ffffff	                           jmp 0x4000748	       275	update-index.c	FUNCTION_14	IF_1	CALL_2
0x40007df	              0x90	                                     nop	       275	update-index.c	FUNCTION_14	IF_1	CALL_2
0x40007e0	      0xb800e00000	                         mov eax, 0xe000	       259	cache.h	FUNCTION_45	IF_2
0x40007e5	      0xe903ffffff	                           jmp 0x40006ed	       259	cache.h	FUNCTION_45	IF_2
0x40007ea	    0x660f1f440000	                    nop word [rax + rax]	       259	cache.h	FUNCTION_45	IF_2
0x40007f0	      0xb800800000	                         mov eax, 0x8000	       269	cache.h	FUNCTION_46	IF_2	CALL_3
0x40007f5	      0xe9cdfeffff	                           jmp 0x40006c7	       269	cache.h	FUNCTION_46	IF_2	CALL_3
0x40007fa	    0x660f1f440000	                    nop word [rax + rax]	       269	cache.h	FUNCTION_46	IF_2	CALL_3
0x4000800	          0x4889df	                            mov rdi, rbx	       294	update-index.c	FUNCTION_14	IF_3	CALL_12
0x4000803	      0xe800000000	                          call 0x4000808	       294	update-index.c	FUNCTION_14	IF_3	CALL_12
0x4000808	          0x4c89ee	                            mov rsi, r13	       295	update-index.c	FUNCTION_14	IF_3	CALL_13
0x400080b	      0xbf00000000	                              mov edi, 0	       295	update-index.c	FUNCTION_14	IF_3	CALL_13
0x4000810	            0x31c0	                            xor eax, eax	       295	update-index.c	FUNCTION_14	IF_3	CALL_13
0x4000812	      0xe800000000	                          call 0x4000817	       295	update-index.c	FUNCTION_14	IF_3	CALL_13
0x4000817	      0xb8ffffffff	                     mov eax, 0xffffffff	       295	update-index.c	FUNCTION_14	IF_3	CALL_13
0x400081c	      0xe929ffffff	                           jmp 0x400074a	       295	update-index.c	FUNCTION_14	IF_3	CALL_13
0x4000821	     0xf1f80000000	                         nop dword [rax]	       295	update-index.c	FUNCTION_14	IF_3	CALL_13
0x4000828	          0x4889df	                            mov rdi, rbx	       288	update-index.c	FUNCTION_14	IF_2	CALL_10
0x400082b	      0xe800000000	                          call 0x4000830	       288	update-index.c	FUNCTION_14	IF_2	CALL_10
0x4000830	      0xb8ffffffff	                     mov eax, 0xffffffff	       289	update-index.c	FUNCTION_14	IF_2
0x4000835	      0xe910ffffff	                           jmp 0x400074a	       289	update-index.c	FUNCTION_14	IF_2
chmod_path	DO,0:ELSE,0:CALL,5:WHILE,0:functions,0:SWITCH,0:FOR,0:IF,2	35
0x4000aa0	              0x55	                                push rbp	       433	update-index.c	FUNCTION_18
0x4000aa1	              0x53	                                push rbx	       433	update-index.c	FUNCTION_18
0x4000aa2	          0x4889f5	                            mov rbp, rsi	       433	update-index.c	FUNCTION_18
0x4000aa5	            0x89fb	                            mov ebx, edi	       433	update-index.c	FUNCTION_18
0x4000aa7	          0x4889f7	                            mov rdi, rsi	       437	update-index.c	FUNCTION_18	CALL_2
0x4000aaa	        0x4883ec08	                              sub rsp, 8	       433	update-index.c	FUNCTION_18
0x4000aae	           0xfbedb	                           movsx ebx, bl	       433	update-index.c	FUNCTION_18
0x4000ab1	      0xe800000000	                          call 0x4000ab6	       437	update-index.c	FUNCTION_18	CALL_2
0x4000ab6	          0x4889ee	                            mov rsi, rbp	       437	update-index.c	FUNCTION_18	CALL_2
0x4000ab9	            0x89c2	                            mov edx, eax	       437	update-index.c	FUNCTION_18	CALL_2
0x4000abb	      0xbf00000000	                              mov edi, 0	       437	update-index.c	FUNCTION_18	CALL_2
0x4000ac0	      0xe800000000	                          call 0x4000ac5	       437	update-index.c	FUNCTION_18	CALL_2
0x4000ac5	            0x85c0	                           test eax, eax	       438	update-index.c	FUNCTION_18	IF_1
0x4000ac7	            0x7834	                            js 0x4000afd	       438	update-index.c	FUNCTION_18	IF_1
0x4000ac9	    0x488b15000000	            mov rdx, qword [0x04000ad0] 	       440	update-index.c	FUNCTION_18
0x4000ad0	            0x4898	                                    cdqe	       440	update-index.c	FUNCTION_18
0x4000ad2	      0xbf00000000	                              mov edi, 0	       441	update-index.c	FUNCTION_18	IF_2	CALL_3
0x4000ad7	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       441	update-index.c	FUNCTION_18	IF_2	CALL_3
0x4000adb	            0x89da	                            mov edx, ebx	       441	update-index.c	FUNCTION_18	IF_2	CALL_3
0x4000add	      0xe800000000	                          call 0x4000ae2	       441	update-index.c	FUNCTION_18	IF_2	CALL_3
0x4000ae2	            0x85c0	                           test eax, eax	       441	update-index.c	FUNCTION_18	IF_2	CALL_3
0x4000ae4	            0x7817	                            js 0x4000afd	       441	update-index.c	FUNCTION_18	IF_2	CALL_3
0x4000ae6	        0x4883c408	                              add rsp, 8	       448	update-index.c	FUNCTION_18
0x4000aea	          0x4889ea	                            mov rdx, rbp	       444	update-index.c	FUNCTION_18	CALL_4
0x4000aed	            0x89de	                            mov esi, ebx	       444	update-index.c	FUNCTION_18	CALL_4
0x4000aef	              0x5b	                                 pop rbx	       448	update-index.c	FUNCTION_18
0x4000af0	              0x5d	                                 pop rbp	       448	update-index.c	FUNCTION_18
0x4000af1	      0xbf00000000	                              mov edi, 0	       444	update-index.c	FUNCTION_18	CALL_4
0x4000af6	            0x31c0	                            xor eax, eax	       444	update-index.c	FUNCTION_18	CALL_4
0x4000af8	      0xe943fdffff	                          jmp sym.report	       444	update-index.c	FUNCTION_18	CALL_4
0x4000afd	          0x4889ea	                            mov rdx, rbp	       447	update-index.c	FUNCTION_18	CALL_5
0x4000b00	            0x89de	                            mov esi, ebx	       447	update-index.c	FUNCTION_18	CALL_5
0x4000b02	      0xbf00000000	                              mov edi, 0	       447	update-index.c	FUNCTION_18	CALL_5
0x4000b07	            0x31c0	                            xor eax, eax	       447	update-index.c	FUNCTION_18	CALL_5
0x4000b09	      0xe800000000	                          call 0x4000b0e	       447	update-index.c	FUNCTION_18	CALL_5
read_one_ent	DO,0:ELSE,0:CALL,9:WHILE,0:functions,0:SWITCH,0:FOR,0:IF,4	90
0x40000b0	            0x4156	                                push r14	       589	update-index.c	FUNCTION_21
0x40000b2	            0x4155	                                push r13	       589	update-index.c	FUNCTION_21
0x40000b4	          0x4189cd	                           mov r13d, ecx	       589	update-index.c	FUNCTION_21
0x40000b7	            0x4154	                                push r12	       589	update-index.c	FUNCTION_21
0x40000b9	              0x55	                                push rbp	       589	update-index.c	FUNCTION_21
0x40000ba	          0x4889d5	                            mov rbp, rdx	       589	update-index.c	FUNCTION_21
0x40000bd	              0x53	                                push rbx	       589	update-index.c	FUNCTION_21
0x40000be	          0x4989fc	                            mov r12, rdi	       589	update-index.c	FUNCTION_21
0x40000c1	          0x4889f7	                            mov rdi, rsi	       589	update-index.c	FUNCTION_21
0x40000c4	          0x4889ee	                            mov rsi, rbp	       595	update-index.c	FUNCTION_21	IF_1	CALL_1
0x40000c7	          0x4589c6	                           mov r14d, r8d	       589	update-index.c	FUNCTION_21
0x40000ca	        0x4883ec30	                           sub rsp, 0x30	       589	update-index.c	FUNCTION_21
0x40000ce	      0x488d4c240c	                    lea rcx, [rsp + 0xc]	       595	update-index.c	FUNCTION_21	IF_1	CALL_1
0x40000d3	      0x488d542410	                   lea rdx, [rsp + 0x10]	       595	update-index.c	FUNCTION_21	IF_1	CALL_1
0x40000d8	    0x64488b042528	                mov rax, qword fs:[0x28]	       589	update-index.c	FUNCTION_21
0x40000e1	      0x4889442428	             mov qword [rsp + 0x28], rax	       589	update-index.c	FUNCTION_21
0x40000e6	            0x31c0	                            xor eax, eax	       589	update-index.c	FUNCTION_21
0x40000e8	      0xe800000000	                          call 0x40000ed	       595	update-index.c	FUNCTION_21	IF_1	CALL_1
0x40000ed	            0x85c0	                           test eax, eax	       595	update-index.c	FUNCTION_21	IF_1	CALL_1
0x40000ef	            0x743f	                            je 0x4000130	       595	update-index.c	FUNCTION_21	IF_1	CALL_1
0x40000f1	            0x31db	                            xor ebx, ebx	       598	update-index.c	FUNCTION_21	IF_1
0x40000f3	          0x4d85e4	                           test r12, r12	       596	update-index.c	FUNCTION_21	IF_1	IF_2
0x40000f6	            0x7412	                            je 0x400010a	       596	update-index.c	FUNCTION_21	IF_1	IF_2
0x40000f8	          0x4c89e2	                            mov rdx, r12	       597	update-index.c	FUNCTION_21	IF_1	CALL_2
0x40000fb	          0x4889ee	                            mov rsi, rbp	       597	update-index.c	FUNCTION_21	IF_1	CALL_2
0x40000fe	      0xbf00000000	                              mov edi, 0	       597	update-index.c	FUNCTION_21	IF_1	CALL_2
0x4000103	            0x31c0	                            xor eax, eax	       597	update-index.c	FUNCTION_21	IF_1	CALL_2
0x4000105	      0xe800000000	                          call 0x400010a	       597	update-index.c	FUNCTION_21	IF_1	CALL_2
0x400010a	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       614	update-index.c	FUNCTION_21
0x400010f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       614	update-index.c	FUNCTION_21
0x4000118	          0x4889d8	                            mov rax, rbx	       614	update-index.c	FUNCTION_21
0x400011b	     0xf85ce000000	                           jne 0x40001ef	       614	update-index.c	FUNCTION_21
0x4000121	        0x4883c430	                           add rsp, 0x30	       614	update-index.c	FUNCTION_21
0x4000125	              0x5b	                                 pop rbx	       614	update-index.c	FUNCTION_21
0x4000126	              0x5d	                                 pop rbp	       614	update-index.c	FUNCTION_21
0x4000127	            0x415c	                                 pop r12	       614	update-index.c	FUNCTION_21
0x4000129	            0x415d	                                 pop r13	       614	update-index.c	FUNCTION_21
0x400012b	            0x415e	                                 pop r14	       614	update-index.c	FUNCTION_21
0x400012d	              0xc3	                                     ret	       614	update-index.c	FUNCTION_21
0x400012e	            0x6690	                                     nop	       614	update-index.c	FUNCTION_21
0x4000130	    0x817c240c0040	          cmp dword [rsp + 0xc], 0x4000 	       600	update-index.c	FUNCTION_21	IF_3
0x4000138	     0xf8482000000	                            je 0x40001c0	       600	update-index.c	FUNCTION_21	IF_3
0x400013e	        0x418d7559	                   lea esi, [r13 + 0x59]	       606	update-index.c	FUNCTION_21	CALL_5
0x4000142	      0xbf01000000	                              mov edi, 1	       606	update-index.c	FUNCTION_21	CALL_5
0x4000147	        0x41c1e60c	                           shl r14d, 0xc	       610	update-index.c	FUNCTION_21	CALL_8
0x400014b	          0x4863f6	                         movsxd rsi, esi	       606	update-index.c	FUNCTION_21	CALL_5
0x400014e	      0xe800000000	                          call 0x4000153	       606	update-index.c	FUNCTION_21	CALL_5
0x4000153	          0x4889c3	                            mov rbx, rax	       606	update-index.c	FUNCTION_21	CALL_5
0x4000156	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_81	CALL_3
0x400015b	          0x4963d5	                        movsxd rdx, r13d	        53	string3.h	FUNCTION_81	CALL_3
0x400015e	        0x488d7b58	                   lea rdi, [rbx + 0x58]	        53	string3.h	FUNCTION_81	CALL_3
0x4000162	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_81	CALL_3
0x4000165	        0x48894344	             mov qword [rbx + 0x44], rax	        53	string3.h	FUNCTION_81	CALL_3
0x4000169	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_81	CALL_3
0x400016e	        0x4889434c	             mov qword [rbx + 0x4c], rax	        53	string3.h	FUNCTION_81	CALL_3
0x4000172	        0x8b442420	            mov eax, dword [rsp + 0x20] 	        53	string3.h	FUNCTION_81	CALL_3
0x4000176	          0x894354	             mov dword [rbx + 0x54], eax	        53	string3.h	FUNCTION_81	CALL_3
0x4000179	      0xe800000000	                          call 0x400017e	        53	string3.h	FUNCTION_81	CALL_3
0x400017e	        0x8b54240c	              mov edx, dword [rsp + 0xc]	       612	update-index.c	FUNCTION_21	CALL_9
0x4000182	        0x44897338	            mov dword [rbx + 0x38], r14d	       610	update-index.c	FUNCTION_21	CALL_8
0x4000186	        0x44896b3c	            mov dword [rbx + 0x3c], r13d	       611	update-index.c	FUNCTION_21
0x400018a	            0x89d0	                            mov eax, edx	       256	cache.h	FUNCTION_45	IF_1	CALL_1
0x400018c	      0x2500f00000	                         and eax, 0xf000	       256	cache.h	FUNCTION_45	IF_1	CALL_1
0x4000191	      0x3d00a00000	                         cmp eax, 0xa000	       256	cache.h	FUNCTION_45	IF_1	CALL_1
0x4000196	            0x741e	                            je 0x40001b6	       256	cache.h	FUNCTION_45	IF_1	CALL_1
0x4000198	      0x3d00400000	                         cmp eax, 0x4000	       258	cache.h	FUNCTION_45	IF_2	CALL_3
0x400019d	            0x7449	                            je 0x40001e8	       258	cache.h	FUNCTION_45	IF_2	CALL_3
0x400019f	      0x3d00e00000	                         cmp eax, 0xe000	       258	cache.h	FUNCTION_45	IF_2	CALL_3
0x40001a4	            0x7442	                            je 0x40001e8	       258	cache.h	FUNCTION_45	IF_2	CALL_3
0x40001a6	          0x83e240	                           and edx, 0x40	       260	cache.h	FUNCTION_45	CALL_4
0x40001a9	          0x83fa01	                              cmp edx, 1	       260	cache.h	FUNCTION_45	CALL_4
0x40001ac	            0x19c0	                            sbb eax, eax	       260	cache.h	FUNCTION_45	CALL_4
0x40001ae	          0x83e0b7	                     and eax, 0xffffffb7	       260	cache.h	FUNCTION_45	CALL_4
0x40001b1	       0x5ed810000	                         add eax, 0x81ed	       260	cache.h	FUNCTION_45	CALL_4
0x40001b6	          0x894334	             mov dword [rbx + 0x34], eax	       612	update-index.c	FUNCTION_21	CALL_9
0x40001b9	      0xe94cffffff	                           jmp 0x400010a	       613	update-index.c	FUNCTION_21
0x40001be	            0x6690	                                     nop	       613	update-index.c	FUNCTION_21
0x40001c0	            0x31db	                            xor ebx, ebx	       598	update-index.c	FUNCTION_21	IF_1
0x40001c2	          0x4d85e4	                           test r12, r12	       601	update-index.c	FUNCTION_21	IF_3	IF_4
0x40001c5	     0xf843fffffff	                            je 0x400010a	       601	update-index.c	FUNCTION_21	IF_3	IF_4
0x40001cb	          0x4c89e2	                            mov rdx, r12	       602	update-index.c	FUNCTION_21	IF_3	CALL_3
0x40001ce	          0x4889ee	                            mov rsi, rbp	       602	update-index.c	FUNCTION_21	IF_3	CALL_3
0x40001d1	      0xbf00000000	                              mov edi, 0	       602	update-index.c	FUNCTION_21	IF_3	CALL_3
0x40001d6	            0x31c0	                            xor eax, eax	       602	update-index.c	FUNCTION_21	IF_3	CALL_3
0x40001d8	      0xe800000000	                          call 0x40001dd	       602	update-index.c	FUNCTION_21	IF_3	CALL_3
0x40001dd	      0xe928ffffff	                           jmp 0x400010a	       602	update-index.c	FUNCTION_21	IF_3	CALL_3
0x40001e2	    0x660f1f440000	                    nop word [rax + rax]	       602	update-index.c	FUNCTION_21	IF_3	CALL_3
0x40001e8	      0xb800e00000	                         mov eax, 0xe000	       259	cache.h	FUNCTION_45	IF_2
0x40001ed	            0xebc7	                           jmp 0x40001b6	       259	cache.h	FUNCTION_45	IF_2
0x40001ef	      0xe800000000	                          call 0x40001f4	       614	update-index.c	FUNCTION_21
chmod_callback	DO,0:ELSE,0:CALL,1:WHILE,0:functions,0:SWITCH,0:FOR,0:IF,1	21
0x4000040	        0x4883ec08	                              sub rsp, 8	       797	update-index.c	FUNCTION_29
0x4000044	           0xfb606	                   movzx eax, byte [rsi]	       799	update-index.c	FUNCTION_29	IF_1
0x4000047	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	       798	update-index.c	FUNCTION_29
0x400004b	          0x8d50d5	                   lea edx, [rax - 0x2b]	       799	update-index.c	FUNCTION_29	IF_1
0x400004e	    0x81e2fd000000	                           and edx, 0xfd	       799	update-index.c	FUNCTION_29	IF_1
0x4000054	            0x751a	                           jne 0x4000070	       799	update-index.c	FUNCTION_29	IF_1
0x4000056	        0x807e0178	                cmp byte [rsi + 1], 0x78	       799	update-index.c	FUNCTION_29	IF_1
0x400005a	            0x7514	                           jne 0x4000070	       799	update-index.c	FUNCTION_29	IF_1
0x400005c	        0x807e0200	                   cmp byte [rsi + 2], 0	       799	update-index.c	FUNCTION_29	IF_1
0x4000060	            0x750e	                           jne 0x4000070	       799	update-index.c	FUNCTION_29	IF_1
0x4000062	            0x8801	                      mov byte [rcx], al	       801	update-index.c	FUNCTION_29
0x4000064	            0x31c0	                            xor eax, eax	       802	update-index.c	FUNCTION_29
0x4000066	        0x4883c408	                              add rsp, 8	       803	update-index.c	FUNCTION_29
0x400006a	              0xc3	                                     ret	       803	update-index.c	FUNCTION_29
0x400006b	       0xf1f440000	                   nop dword [rax + rax]	       803	update-index.c	FUNCTION_29
0x4000070	      0xbf00000000	                              mov edi, 0	       800	update-index.c	FUNCTION_29	CALL_1
0x4000075	            0x31c0	                            xor eax, eax	       800	update-index.c	FUNCTION_29	CALL_1
0x4000077	      0xe800000000	                          call 0x400007c	       800	update-index.c	FUNCTION_29	CALL_1
0x400007c	      0xb8ffffffff	                     mov eax, 0xffffffff	       800	update-index.c	FUNCTION_29	CALL_1
0x4000081	        0x4883c408	                              add rsp, 8	       803	update-index.c	FUNCTION_29
0x4000085	              0xc3	                                     ret	       803	update-index.c	FUNCTION_29
cmd_update_index	DO,0:ELSE,4:CALL,128:WHILE,2:functions,0:SWITCH,2:FOR,0:IF,29	839
0x4001850	            0x4157	                                push r15	       918	update-index.c	FUNCTION_37
0x4001852	            0x4156	                                push r14	       918	update-index.c	FUNCTION_37
0x4001854	          0x4989f6	                            mov r14, rsi	       918	update-index.c	FUNCTION_37
0x4001857	            0x4155	                                push r13	       918	update-index.c	FUNCTION_37
0x4001859	            0x4154	                                push r12	       918	update-index.c	FUNCTION_37
0x400185b	          0x4189fd	                           mov r13d, edi	       918	update-index.c	FUNCTION_37
0x400185e	              0x55	                                push rbp	       918	update-index.c	FUNCTION_37
0x400185f	              0x53	                                push rbx	       918	update-index.c	FUNCTION_37
0x4001860	          0x4889d5	                            mov rbp, rdx	       918	update-index.c	FUNCTION_37
0x4001863	    0x4881ec280a00	                          sub rsp, 0xa28	       918	update-index.c	FUNCTION_37
0x400186a	    0x64488b042528	                mov rax, qword fs:[0x28]	       918	update-index.c	FUNCTION_37
0x4001873	    0x48898424180a	            mov qword [rsp + 0xa18], rax	       918	update-index.c	FUNCTION_37
0x400187b	            0x31c0	                            xor eax, eax	       918	update-index.c	FUNCTION_37
0x400187d	          0x4885d2	                           test rdx, rdx	       922	update-index.c	FUNCTION_37	CALL_1
0x4001880	    0xc74424200000	               mov dword [rsp + 0x20], 0	       919	update-index.c	FUNCTION_37
0x4001888	    0xc74424240000	               mov dword [rsp + 0x24], 0	       919	update-index.c	FUNCTION_37
0x4001890	    0xc7442428ffff	     mov dword [rsp + 0x28], 0xffffffff 	       920	update-index.c	FUNCTION_37
0x4001898	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	       921	update-index.c	FUNCTION_37
0x40018a0	     0xf84fa0a0000	                            je 0x40023a0	       922	update-index.c	FUNCTION_37	CALL_1
0x40018a6	          0x4889d7	                            mov rdi, rdx	       922	update-index.c	FUNCTION_37	CALL_1
0x40018a9	      0xe800000000	                          call 0x40018ae	       922	update-index.c	FUNCTION_37	CALL_1
0x40018ae	          0x4189c4	                           mov r12d, eax	       922	update-index.c	FUNCTION_37	CALL_1
0x40018b1	    0x488d9c248001	                  lea rbx, [rsp + 0x180]	       934	update-index.c	FUNCTION_37
0x40018b9	            0x31c0	                            xor eax, eax	       934	update-index.c	FUNCTION_37
0x40018bb	      0xb910010000	                          mov ecx, 0x110	       934	update-index.c	FUNCTION_37
0x40018c0	      0x488d542420	                   lea rdx, [rsp + 0x20]	       925	update-index.c	FUNCTION_37
0x40018c5	    0xc74424300000	               mov dword [rsp + 0x30], 0	       923	update-index.c	FUNCTION_37
0x40018cd	      0xc644241f00	                mov byte [rsp + 0x1f], 0	       924	update-index.c	FUNCTION_37
0x40018d2	          0x4889df	                            mov rdi, rbx	       934	update-index.c	FUNCTION_37
0x40018d5	    0xc74424500000	               mov dword [rsp + 0x50], 0	       925	update-index.c	FUNCTION_37
0x40018dd	    0xc7442434ffff	     mov dword [rsp + 0x34], 0xffffffff 	       927	update-index.c	FUNCTION_37
0x40018e5	          0xf348ab	              rep stosq qword [rdi], rax	       934	update-index.c	FUNCTION_37
0x40018e8	      0x488d442450	                   lea rax, [rsp + 0x50]	       934	update-index.c	FUNCTION_37
0x40018ed	      0x488d4c241f	                   lea rcx, [rsp + 0x1f]	       934	update-index.c	FUNCTION_37
0x40018f2	      0x4889542458	             mov qword [rsp + 0x58], rdx	       925	update-index.c	FUNCTION_37
0x40018f7	    0xc74424380000	               mov dword [rsp + 0x38], 0	       928	update-index.c	FUNCTION_37
0x40018ff	    0xc744243cffff	     mov dword [rsp + 0x3c], 0xffffffff 	       929	update-index.c	FUNCTION_37
0x4001907	      0x488d74242c	                   lea rsi, [rsp + 0x2c]	       934	update-index.c	FUNCTION_37
0x400190c	    0x488984249001	            mov qword [rsp + 0x190], rax	       934	update-index.c	FUNCTION_37
0x4001914	    0x48898424d001	            mov qword [rsp + 0x1d0], rax	       934	update-index.c	FUNCTION_37
0x400191c	        0x4183fd02	                             cmp r13d, 2	      1034	update-index.c	FUNCTION_37	IF_1	CALL_56
0x4001920	    0x48c744244000	               mov qword [rsp + 0x40], 0	       930	update-index.c	FUNCTION_37
0x4001929	    0xc78424800100	              mov dword [rsp + 0x180], 4	       934	update-index.c	FUNCTION_37
0x4001934	    0xc78424840100	          mov dword [rsp + 0x184], 0x71 	       934	update-index.c	FUNCTION_37
0x400193f	    0x48c78424a001	              mov qword [rsp + 0x1a0], 0	       934	update-index.c	FUNCTION_37
0x400194b	    0xc78424a80100	              mov dword [rsp + 0x1a8], 2	       934	update-index.c	FUNCTION_37
0x4001956	    0x48c78424b801	              mov qword [rsp + 0x1b8], 4	       934	update-index.c	FUNCTION_37
0x4001962	    0xc78424c00100	              mov dword [rsp + 0x1c0], 4	       934	update-index.c	FUNCTION_37
0x400196d	    0x48c78424c801	              mov qword [rsp + 0x1c8], 0	       934	update-index.c	FUNCTION_37
0x4001979	    0x48c78424e001	              mov qword [rsp + 0x1e0], 0	       934	update-index.c	FUNCTION_37
0x4001985	    0xc78424e80100	              mov dword [rsp + 0x1e8], 2	       934	update-index.c	FUNCTION_37
0x4001990	    0x48c78424f801	          mov qword [rsp + 0x1f8], 0x10 	       934	update-index.c	FUNCTION_37
0x400199c	    0xc78424000200	              mov dword [rsp + 0x200], 7	       934	update-index.c	FUNCTION_37
0x40019a7	    0x48c784240802	              mov qword [rsp + 0x208], 0	       934	update-index.c	FUNCTION_37
0x40019b3	    0x48c784241002	              mov qword [rsp + 0x210], 0	       934	update-index.c	FUNCTION_37
0x40019bf	    0x48c784242002	              mov qword [rsp + 0x220], 0	       934	update-index.c	FUNCTION_37
0x40019cb	    0xc78424280200	              mov dword [rsp + 0x228], 2	       934	update-index.c	FUNCTION_37
0x40019d6	    0x48c784243802	              mov qword [rsp + 0x238], 1	       934	update-index.c	FUNCTION_37
0x40019e2	    0xc78424400200	              mov dword [rsp + 0x240], 7	       934	update-index.c	FUNCTION_37
0x40019ed	    0x48c784244802	              mov qword [rsp + 0x248], 0	       934	update-index.c	FUNCTION_37
0x40019f9	    0x48c784245002	              mov qword [rsp + 0x250], 0	       934	update-index.c	FUNCTION_37
0x4001a05	    0x48c784246002	              mov qword [rsp + 0x260], 0	       934	update-index.c	FUNCTION_37
0x4001a11	    0xc78424680200	              mov dword [rsp + 0x268], 2	       934	update-index.c	FUNCTION_37
0x4001a1c	    0x48c784247802	              mov qword [rsp + 0x278], 1	       934	update-index.c	FUNCTION_37
0x4001a28	    0x48898424d002	            mov qword [rsp + 0x2d0], rax	       934	update-index.c	FUNCTION_37
0x4001a30	    0x488984241003	            mov qword [rsp + 0x310], rax	       934	update-index.c	FUNCTION_37
0x4001a38	    0x488984245003	            mov qword [rsp + 0x350], rax	       934	update-index.c	FUNCTION_37
0x4001a40	    0xc78424800200	              mov dword [rsp + 0x280], 7	       934	update-index.c	FUNCTION_37
0x4001a4b	    0x48c784248802	              mov qword [rsp + 0x288], 0	       934	update-index.c	FUNCTION_37
0x4001a57	    0x48c784249002	              mov qword [rsp + 0x290], 0	       934	update-index.c	FUNCTION_37
0x4001a63	    0x48c78424a002	              mov qword [rsp + 0x2a0], 0	       934	update-index.c	FUNCTION_37
0x4001a6f	    0xc78424a80200	              mov dword [rsp + 0x2a8], 2	       934	update-index.c	FUNCTION_37
0x4001a7a	    0x48c78424b802	              mov qword [rsp + 0x2b8], 1	       934	update-index.c	FUNCTION_37
0x4001a86	    0xc78424c00200	              mov dword [rsp + 0x2c0], 4	       934	update-index.c	FUNCTION_37
0x4001a91	    0x48c78424c802	              mov qword [rsp + 0x2c8], 0	       934	update-index.c	FUNCTION_37
0x4001a9d	    0x48c78424e002	              mov qword [rsp + 0x2e0], 0	       934	update-index.c	FUNCTION_37
0x4001aa9	    0xc78424e80200	              mov dword [rsp + 0x2e8], 2	       934	update-index.c	FUNCTION_37
0x4001ab4	    0x48c78424f802	              mov qword [rsp + 0x2f8], 2	       934	update-index.c	FUNCTION_37
0x4001ac0	    0xc78424000300	           mov dword [rsp + 0x300], 0xc 	       934	update-index.c	FUNCTION_37
0x4001acb	    0x48c784240803	              mov qword [rsp + 0x308], 0	       934	update-index.c	FUNCTION_37
0x4001ad7	    0x48c784242003	              mov qword [rsp + 0x320], 0	       934	update-index.c	FUNCTION_37
0x4001ae3	    0xc78424280300	              mov dword [rsp + 0x328], 6	       934	update-index.c	FUNCTION_37
0x4001aee	    0x48c784243003	              mov qword [rsp + 0x330], 0	       934	update-index.c	FUNCTION_37
0x4001afa	    0xc78424400300	           mov dword [rsp + 0x340], 0xc 	       934	update-index.c	FUNCTION_37
0x4001b05	    0x48c784244803	              mov qword [rsp + 0x348], 0	       934	update-index.c	FUNCTION_37
0x4001b11	    0x48c784246003	              mov qword [rsp + 0x360], 0	       934	update-index.c	FUNCTION_37
0x4001b1d	    0xc78424680300	              mov dword [rsp + 0x368], 6	       934	update-index.c	FUNCTION_37
0x4001b28	    0x48c784247003	              mov qword [rsp + 0x370], 0	       934	update-index.c	FUNCTION_37
0x4001b34	    0xc78424800300	           mov dword [rsp + 0x380], 0xd 	       934	update-index.c	FUNCTION_37
0x4001b3f	    0x48c784248803	              mov qword [rsp + 0x388], 0	       934	update-index.c	FUNCTION_37
0x4001b4b	    0x48c784249803	              mov qword [rsp + 0x398], 0	       934	update-index.c	FUNCTION_37
0x4001b57	    0x48c78424a003	              mov qword [rsp + 0x3a0], 0	       934	update-index.c	FUNCTION_37
0x4001b63	    0xc78424a80300	          mov dword [rsp + 0x3a8], 0x46 	       934	update-index.c	FUNCTION_37
0x4001b6e	    0x48c78424b003	              mov qword [rsp + 0x3b0], 0	       934	update-index.c	FUNCTION_37
0x4001b7a	    0xc78424c00300	           mov dword [rsp + 0x3c0], 0xc 	       934	update-index.c	FUNCTION_37
0x4001b85	    0x48c78424c803	              mov qword [rsp + 0x3c8], 0	       934	update-index.c	FUNCTION_37
0x4001b91	    0x48898c24d003	            mov qword [rsp + 0x3d0], rcx	       934	update-index.c	FUNCTION_37
0x4001b99	      0x488d4c2424	                   lea rcx, [rsp + 0x24]	       934	update-index.c	FUNCTION_37
0x4001b9e	    0x48c78424d803	              mov qword [rsp + 0x3d8], 0	       934	update-index.c	FUNCTION_37
0x4001baa	    0x48c78424e003	              mov qword [rsp + 0x3e0], 0	       934	update-index.c	FUNCTION_37
0x4001bb6	    0xc78424e80300	          mov dword [rsp + 0x3e8], 0x44 	       934	update-index.c	FUNCTION_37
0x4001bc1	    0x48c78424f003	              mov qword [rsp + 0x3f0], 0	       934	update-index.c	FUNCTION_37
0x4001bcd	    0xc78424000400	              mov dword [rsp + 0x400], 7	       934	update-index.c	FUNCTION_37
0x4001bd8	    0x48c784240804	              mov qword [rsp + 0x408], 0	       934	update-index.c	FUNCTION_37
0x4001be4	    0x48c784241004	              mov qword [rsp + 0x410], 0	       934	update-index.c	FUNCTION_37
0x4001bf0	    0x48c784242004	              mov qword [rsp + 0x420], 0	       934	update-index.c	FUNCTION_37
0x4001bfc	    0xc78424280400	              mov dword [rsp + 0x428], 6	       934	update-index.c	FUNCTION_37
0x4001c07	    0x48c784243804	              mov qword [rsp + 0x438], 1	       934	update-index.c	FUNCTION_37
0x4001c13	    0xc78424400400	              mov dword [rsp + 0x440], 7	       934	update-index.c	FUNCTION_37
0x4001c1e	    0x48c784244804	              mov qword [rsp + 0x448], 0	       934	update-index.c	FUNCTION_37
0x4001c2a	    0x48c784245004	              mov qword [rsp + 0x450], 0	       934	update-index.c	FUNCTION_37
0x4001c36	    0x48c784246004	              mov qword [rsp + 0x460], 0	       934	update-index.c	FUNCTION_37
0x4001c42	    0xc78424680400	              mov dword [rsp + 0x468], 6	       934	update-index.c	FUNCTION_37
0x4001c4d	    0x48c784247804	              mov qword [rsp + 0x478], 2	       934	update-index.c	FUNCTION_37
0x4001c59	    0xc78424800400	              mov dword [rsp + 0x480], 7	       934	update-index.c	FUNCTION_37
0x4001c64	    0x48c784248804	              mov qword [rsp + 0x488], 0	       934	update-index.c	FUNCTION_37
0x4001c70	    0x48c784249004	              mov qword [rsp + 0x490], 0	       934	update-index.c	FUNCTION_37
0x4001c7c	    0x48c78424a004	              mov qword [rsp + 0x4a0], 0	       934	update-index.c	FUNCTION_37
0x4001c88	    0xc78424a80400	              mov dword [rsp + 0x4a8], 6	       934	update-index.c	FUNCTION_37
0x4001c93	    0x48c78424b804	              mov qword [rsp + 0x4b8], 1	       934	update-index.c	FUNCTION_37
0x4001c9f	    0xc78424c00400	              mov dword [rsp + 0x4c0], 7	       934	update-index.c	FUNCTION_37
0x4001caa	    0x48c78424c804	              mov qword [rsp + 0x4c8], 0	       934	update-index.c	FUNCTION_37
0x4001cb6	    0x48c78424d004	              mov qword [rsp + 0x4d0], 0	       934	update-index.c	FUNCTION_37
0x4001cc2	    0x48c78424e004	              mov qword [rsp + 0x4e0], 0	       934	update-index.c	FUNCTION_37
0x4001cce	    0xc78424e80400	              mov dword [rsp + 0x4e8], 6	       934	update-index.c	FUNCTION_37
0x4001cd9	    0x48c78424f804	              mov qword [rsp + 0x4f8], 2	       934	update-index.c	FUNCTION_37
0x4001ce5	    0xc78424000500	              mov dword [rsp + 0x500], 7	       934	update-index.c	FUNCTION_37
0x4001cf0	    0x48c784240805	              mov qword [rsp + 0x508], 0	       934	update-index.c	FUNCTION_37
0x4001cfc	    0x48c784241005	              mov qword [rsp + 0x510], 0	       934	update-index.c	FUNCTION_37
0x4001d08	    0x48c784242005	              mov qword [rsp + 0x520], 0	       934	update-index.c	FUNCTION_37
0x4001d14	    0xc78424280500	              mov dword [rsp + 0x528], 2	       934	update-index.c	FUNCTION_37
0x4001d1f	    0x48c784243805	              mov qword [rsp + 0x538], 1	       934	update-index.c	FUNCTION_37
0x4001d2b	    0xc78424400500	              mov dword [rsp + 0x540], 7	       934	update-index.c	FUNCTION_37
0x4001d36	    0x48c784244805	              mov qword [rsp + 0x548], 0	       934	update-index.c	FUNCTION_37
0x4001d42	    0x48c784245005	              mov qword [rsp + 0x550], 0	       934	update-index.c	FUNCTION_37
0x4001d4e	    0x48c784246005	              mov qword [rsp + 0x560], 0	       934	update-index.c	FUNCTION_37
0x4001d5a	    0xc78424680500	              mov dword [rsp + 0x568], 2	       934	update-index.c	FUNCTION_37
0x4001d65	    0x48c784247805	              mov qword [rsp + 0x578], 1	       934	update-index.c	FUNCTION_37
0x4001d71	    0xc78424800500	              mov dword [rsp + 0x580], 7	       934	update-index.c	FUNCTION_37
0x4001d7c	    0xc78424840500	          mov dword [rsp + 0x584], 0x7a 	       934	update-index.c	FUNCTION_37
0x4001d87	    0x48898c249005	            mov qword [rsp + 0x590], rcx	       934	update-index.c	FUNCTION_37
0x4001d8f	    0x48c78424a005	              mov qword [rsp + 0x5a0], 0	       934	update-index.c	FUNCTION_37
0x4001d9b	    0xc78424a80500	              mov dword [rsp + 0x5a8], 2	       934	update-index.c	FUNCTION_37
0x4001da6	    0x48c78424b805	              mov qword [rsp + 0x5b8], 1	       934	update-index.c	FUNCTION_37
0x4001db2	    0xc78424c00500	           mov dword [rsp + 0x5c0], 0xd 	       934	update-index.c	FUNCTION_37
0x4001dbd	    0x48c78424c805	              mov qword [rsp + 0x5c8], 0	       934	update-index.c	FUNCTION_37
0x4001dc9	    0x4889b424d005	            mov qword [rsp + 0x5d0], rsi	       934	update-index.c	FUNCTION_37
0x4001dd1	    0x48c78424e005	              mov qword [rsp + 0x5e0], 0	       934	update-index.c	FUNCTION_37
0x4001ddd	    0xc78424e80500	              mov dword [rsp + 0x5e8], 6	       934	update-index.c	FUNCTION_37
0x4001de8	    0x48c78424f005	              mov qword [rsp + 0x5f0], 0	       934	update-index.c	FUNCTION_37
0x4001df4	    0xc78424000600	           mov dword [rsp + 0x600], 0xd 	       934	update-index.c	FUNCTION_37
0x4001dff	    0x48c784240806	              mov qword [rsp + 0x608], 0	       934	update-index.c	FUNCTION_37
0x4001e0b	    0x48898c241006	            mov qword [rsp + 0x610], rcx	       934	update-index.c	FUNCTION_37
0x4001e13	    0x48c784242006	              mov qword [rsp + 0x620], 0	       934	update-index.c	FUNCTION_37
0x4001e1f	    0xc78424280600	              mov dword [rsp + 0x628], 6	       934	update-index.c	FUNCTION_37
0x4001e2a	    0x48c784243006	              mov qword [rsp + 0x630], 0	       934	update-index.c	FUNCTION_37
0x4001e36	    0xc78424400600	           mov dword [rsp + 0x640], 0xd 	       934	update-index.c	FUNCTION_37
0x4001e41	    0x48c784244806	              mov qword [rsp + 0x648], 0	       934	update-index.c	FUNCTION_37
0x4001e4d	    0x488994245006	            mov qword [rsp + 0x650], rdx	       934	update-index.c	FUNCTION_37
0x4001e55	    0x48c784246006	              mov qword [rsp + 0x660], 0	       934	update-index.c	FUNCTION_37
0x4001e61	    0xc78424680600	              mov dword [rsp + 0x668], 6	       934	update-index.c	FUNCTION_37
0x4001e6c	    0x48c784247006	              mov qword [rsp + 0x670], 0	       934	update-index.c	FUNCTION_37
0x4001e78	    0xc78424800600	           mov dword [rsp + 0x680], 0xd 	       934	update-index.c	FUNCTION_37
0x4001e83	    0xc78424840600	          mov dword [rsp + 0x684], 0x67 	       934	update-index.c	FUNCTION_37
0x4001e8e	    0x48898424d006	            mov qword [rsp + 0x6d0], rax	       934	update-index.c	FUNCTION_37
0x4001e96	      0x488d442430	                   lea rax, [rsp + 0x30]	       934	update-index.c	FUNCTION_37
0x4001e9b	    0x48c784248806	              mov qword [rsp + 0x688], 0	       934	update-index.c	FUNCTION_37
0x4001ea7	    0x488994249006	            mov qword [rsp + 0x690], rdx	       934	update-index.c	FUNCTION_37
0x4001eaf	    0x48c78424a006	              mov qword [rsp + 0x6a0], 0	       934	update-index.c	FUNCTION_37
0x4001ebb	    0x488984249007	            mov qword [rsp + 0x790], rax	       934	update-index.c	FUNCTION_37
0x4001ec3	      0x488d442434	                   lea rax, [rsp + 0x34]	       934	update-index.c	FUNCTION_37
0x4001ec8	    0xc78424a80600	              mov dword [rsp + 0x6a8], 6	       934	update-index.c	FUNCTION_37
0x4001ed3	    0x48c78424b006	              mov qword [rsp + 0x6b0], 0	       934	update-index.c	FUNCTION_37
0x4001edf	    0xc78424c00600	              mov dword [rsp + 0x6c0], 4	       934	update-index.c	FUNCTION_37
0x4001eea	    0x48898424d007	            mov qword [rsp + 0x7d0], rax	       934	update-index.c	FUNCTION_37
0x4001ef2	      0x488d442428	                   lea rax, [rsp + 0x28]	       934	update-index.c	FUNCTION_37
0x4001ef7	    0x48c78424c806	              mov qword [rsp + 0x6c8], 0	       934	update-index.c	FUNCTION_37
0x4001f03	    0x48c78424e006	              mov qword [rsp + 0x6e0], 0	       934	update-index.c	FUNCTION_37
0x4001f0f	    0xc78424e80600	              mov dword [rsp + 0x6e8], 2	       934	update-index.c	FUNCTION_37
0x4001f1a	    0x48c78424f806	              mov qword [rsp + 0x6f8], 8	       934	update-index.c	FUNCTION_37
0x4001f26	    0xc78424000700	              mov dword [rsp + 0x700], 7	       934	update-index.c	FUNCTION_37
0x4001f31	    0x48c784240807	              mov qword [rsp + 0x708], 0	       934	update-index.c	FUNCTION_37
0x4001f3d	    0x48c784241007	              mov qword [rsp + 0x710], 0	       934	update-index.c	FUNCTION_37
0x4001f49	    0x48c784242007	              mov qword [rsp + 0x720], 0	       934	update-index.c	FUNCTION_37
0x4001f55	    0xc78424280700	              mov dword [rsp + 0x728], 2	       934	update-index.c	FUNCTION_37
0x4001f60	    0x48c784243807	              mov qword [rsp + 0x738], 1	       934	update-index.c	FUNCTION_37
0x4001f6c	    0xc78424400700	           mov dword [rsp + 0x740], 0xc 	       934	update-index.c	FUNCTION_37
0x4001f77	    0x48c784244807	              mov qword [rsp + 0x748], 0	       934	update-index.c	FUNCTION_37
0x4001f83	    0x48c784246007	              mov qword [rsp + 0x760], 0	       934	update-index.c	FUNCTION_37
0x4001f8f	    0xc78424680700	              mov dword [rsp + 0x768], 6	       934	update-index.c	FUNCTION_37
0x4001f9a	    0x48c784247007	              mov qword [rsp + 0x770], 0	       934	update-index.c	FUNCTION_37
0x4001fa6	    0xc78424800700	            mov dword [rsp + 0x780], 0xa	       934	update-index.c	FUNCTION_37
0x4001fb1	    0x48c784248807	              mov qword [rsp + 0x788], 0	       934	update-index.c	FUNCTION_37
0x4001fbd	    0x48c784249807	              mov qword [rsp + 0x798], 0	       934	update-index.c	FUNCTION_37
0x4001fc9	    0x48c78424a007	              mov qword [rsp + 0x7a0], 0	       934	update-index.c	FUNCTION_37
0x4001fd5	    0xc78424c00700	              mov dword [rsp + 0x7c0], 7	       934	update-index.c	FUNCTION_37
0x4001fe0	    0x48c78424c807	              mov qword [rsp + 0x7c8], 0	       934	update-index.c	FUNCTION_37
0x4001fec	    0x48c78424e007	              mov qword [rsp + 0x7e0], 0	       934	update-index.c	FUNCTION_37
0x4001ff8	    0xc78424e80700	              mov dword [rsp + 0x7e8], 2	       934	update-index.c	FUNCTION_37
0x4002003	    0x48c78424f807	              mov qword [rsp + 0x7f8], 1	       934	update-index.c	FUNCTION_37
0x400200f	    0x488984241008	            mov qword [rsp + 0x810], rax	       934	update-index.c	FUNCTION_37
0x4002017	    0x488984245008	            mov qword [rsp + 0x850], rax	       934	update-index.c	FUNCTION_37
0x400201f	    0x488984249008	            mov qword [rsp + 0x890], rax	       934	update-index.c	FUNCTION_37
0x4002027	      0x488d442438	                   lea rax, [rsp + 0x38]	       934	update-index.c	FUNCTION_37
0x400202c	    0xc78424000800	              mov dword [rsp + 0x800], 7	       934	update-index.c	FUNCTION_37
0x4002037	    0x48c784240808	              mov qword [rsp + 0x808], 0	       934	update-index.c	FUNCTION_37
0x4002043	    0x48898424d008	            mov qword [rsp + 0x8d0], rax	       934	update-index.c	FUNCTION_37
0x400204b	      0x488d44243c	                   lea rax, [rsp + 0x3c]	       934	update-index.c	FUNCTION_37
0x4002050	    0x48c784242008	              mov qword [rsp + 0x820], 0	       934	update-index.c	FUNCTION_37
0x400205c	    0xc78424280800	              mov dword [rsp + 0x828], 2	       934	update-index.c	FUNCTION_37
0x4002067	    0x48c784243808	              mov qword [rsp + 0x838], 1	       934	update-index.c	FUNCTION_37
0x4002073	    0xc78424400800	              mov dword [rsp + 0x840], 7	       934	update-index.c	FUNCTION_37
0x400207e	    0x48c784244808	              mov qword [rsp + 0x848], 0	       934	update-index.c	FUNCTION_37
0x400208a	    0x48c784246008	              mov qword [rsp + 0x860], 0	       934	update-index.c	FUNCTION_37
0x4002096	    0xc78424680800	              mov dword [rsp + 0x868], 2	       934	update-index.c	FUNCTION_37
0x40020a1	    0x48c784247808	              mov qword [rsp + 0x878], 2	       934	update-index.c	FUNCTION_37
0x40020ad	    0xc78424800800	              mov dword [rsp + 0x880], 7	       934	update-index.c	FUNCTION_37
0x40020b8	    0x48c784248808	              mov qword [rsp + 0x888], 0	       934	update-index.c	FUNCTION_37
0x40020c4	    0x48c78424a008	              mov qword [rsp + 0x8a0], 0	       934	update-index.c	FUNCTION_37
0x40020d0	    0xc78424a80800	              mov dword [rsp + 0x8a8], 2	       934	update-index.c	FUNCTION_37
0x40020db	    0x48c78424b808	              mov qword [rsp + 0x8b8], 3	       934	update-index.c	FUNCTION_37
0x40020e7	    0xc78424c00800	              mov dword [rsp + 0x8c0], 7	       934	update-index.c	FUNCTION_37
0x40020f2	    0x48c78424c808	              mov qword [rsp + 0x8c8], 0	       934	update-index.c	FUNCTION_37
0x40020fe	    0x48c78424e008	              mov qword [rsp + 0x8e0], 0	       934	update-index.c	FUNCTION_37
0x400210a	    0xc78424e80800	              mov dword [rsp + 0x8e8], 2	       934	update-index.c	FUNCTION_37
0x4002115	    0x48c78424f808	              mov qword [rsp + 0x8f8], 1	       934	update-index.c	FUNCTION_37
0x4002121	    0xc78424000900	              mov dword [rsp + 0x900], 7	       934	update-index.c	FUNCTION_37
0x400212c	    0x48c784240809	              mov qword [rsp + 0x908], 0	       934	update-index.c	FUNCTION_37
0x4002138	    0x488984241009	            mov qword [rsp + 0x910], rax	       934	update-index.c	FUNCTION_37
0x4002140	    0x48c784242009	              mov qword [rsp + 0x920], 0	       934	update-index.c	FUNCTION_37
0x400214c	    0xc78424280900	              mov dword [rsp + 0x928], 2	       934	update-index.c	FUNCTION_37
0x4002157	    0x48c784243809	              mov qword [rsp + 0x938], 1	       934	update-index.c	FUNCTION_37
0x4002163	    0xc78424400900	              mov dword [rsp + 0x940], 7	       934	update-index.c	FUNCTION_37
0x400216e	    0x48c784244809	              mov qword [rsp + 0x948], 0	       934	update-index.c	FUNCTION_37
0x400217a	    0x48c784245009	              mov qword [rsp + 0x950], 0	       934	update-index.c	FUNCTION_37
0x4002186	    0x48c784246009	              mov qword [rsp + 0x960], 0	       934	update-index.c	FUNCTION_37
0x4002192	    0xc78424680900	              mov dword [rsp + 0x968], 6	       934	update-index.c	FUNCTION_37
0x400219d	    0x48c784247809	              mov qword [rsp + 0x978], 1	       934	update-index.c	FUNCTION_37
0x40021a9	    0xc78424800900	              mov dword [rsp + 0x980], 7	       934	update-index.c	FUNCTION_37
0x40021b4	    0x48c784248809	              mov qword [rsp + 0x988], 0	       934	update-index.c	FUNCTION_37
0x40021c0	    0x48c784249009	              mov qword [rsp + 0x990], 0	       934	update-index.c	FUNCTION_37
0x40021cc	    0x48c78424a009	              mov qword [rsp + 0x9a0], 0	       934	update-index.c	FUNCTION_37
0x40021d8	    0xc78424a80900	              mov dword [rsp + 0x9a8], 6	       934	update-index.c	FUNCTION_37
0x40021e3	    0x48c78424b809	              mov qword [rsp + 0x9b8], 2	       934	update-index.c	FUNCTION_37
0x40021ef	     0xf8463010000	                            je 0x4002358	      1034	update-index.c	FUNCTION_37	IF_1	CALL_56
0x40021f5	            0x31f6	                            xor esi, esi	      1037	update-index.c	FUNCTION_37	CALL_58
0x40021f7	      0xbf00000000	                              mov edi, 0	      1037	update-index.c	FUNCTION_37	CALL_58
0x40021fc	      0xe800000000	                          call 0x4002201	      1037	update-index.c	FUNCTION_37	CALL_58
0x4002201	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1040	update-index.c	FUNCTION_37	CALL_59
0x4002206	            0x31f6	                            xor esi, esi	      1040	update-index.c	FUNCTION_37	CALL_59
0x4002208	      0xe800000000	                          call 0x400220d	      1040	update-index.c	FUNCTION_37	CALL_59
0x400220d	            0x85c0	                           test eax, eax	      1041	update-index.c	FUNCTION_37	IF_2
0x400220f	          0x4189c7	                           mov r15d, eax	      1040	update-index.c	FUNCTION_37	CALL_59
0x4002212	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       926	update-index.c	FUNCTION_37
0x400221a	     0xf8860010000	                            js 0x4002380	      1041	update-index.c	FUNCTION_37	IF_2
0x4002220	      0xbf00000000	                              mov edi, 0	      1044	update-index.c	FUNCTION_37	CALL_60
0x4002225	      0xe800000000	                          call 0x400222a	      1044	update-index.c	FUNCTION_37	CALL_60
0x400222a	            0x85c0	                           test eax, eax	      1045	update-index.c	FUNCTION_37	IF_3
0x400222c	     0xf885a0a0000	                            js 0x4002c8c	      1045	update-index.c	FUNCTION_37	IF_3
0x4002232	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      1052	update-index.c	FUNCTION_37	CALL_62
0x400223a	          0x4489ee	                           mov esi, r13d	      1052	update-index.c	FUNCTION_37	CALL_62
0x400223d	    0x41b902000000	                              mov r9d, 2	      1052	update-index.c	FUNCTION_37	CALL_62
0x4002243	          0x4989d8	                             mov r8, rbx	      1052	update-index.c	FUNCTION_37	CALL_62
0x4002246	          0x4889e9	                            mov rcx, rbp	      1052	update-index.c	FUNCTION_37	CALL_62
0x4002249	          0x4c89f2	                            mov rdx, r14	      1052	update-index.c	FUNCTION_37	CALL_62
0x400224c	      0xe800000000	                          call 0x4002251	      1052	update-index.c	FUNCTION_37	CALL_62
0x4002251	    0x8b8424c00000	            mov eax, dword [rsp + 0xc0] 	      1052	update-index.c	FUNCTION_37	CALL_62
0x4002258	    0x41bd03000000	                             mov r13d, 3	       933	update-index.c	FUNCTION_37
0x400225e	            0x85c0	                           test eax, eax	      1054	update-index.c	FUNCTION_37	WHILE_1
0x4002260	     0xf8462010000	                            je 0x40023c8	      1054	update-index.c	FUNCTION_37	WHILE_1
0x4002266	          0x4585ed	                         test r13d, r13d	      1055	update-index.c	FUNCTION_37	WHILE_1	IF_4
0x4002269	            0x7565	                           jne 0x40022d0	      1055	update-index.c	FUNCTION_37	WHILE_1	IF_4
0x400226b	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	      1067	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4002273	          0x4c8b30	                    mov r14, qword [rax]	      1067	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4002276	      0xe800000000	                          call 0x400227b	      1070	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_65
0x400227b	          0x4489e6	                           mov esi, r12d	      1071	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_66
0x400227e	          0x4889ef	                            mov rdi, rbp	      1071	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_66
0x4002281	          0x4c89f2	                            mov rdx, r14	      1071	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_66
0x4002284	      0xe800000000	                          call 0x4002289	      1071	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_66
0x4002289	          0x4889c7	                            mov rdi, rax	      1072	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_67
0x400228c	          0x4989c6	                            mov r14, rax	      1071	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_66
0x400228f	      0xe81cecffff	                     call sym.update_one	      1072	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_67
0x4002294	       0xfbe7c241f	           movsx edi, byte [rsp + 0x1f] 	      1073	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_6
0x4002299	          0x4084ff	                           test dil, dil	      1073	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_6
0x400229c	     0xf85ee000000	                           jne 0x4002390	      1073	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_6
0x40022a2	          0x4c89f7	                            mov rdi, r14	      1075	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_69
0x40022a5	      0xe800000000	                          call 0x40022aa	      1075	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_69
0x40022aa	    0x8b8424c00000	            mov eax, dword [rsp + 0xc0] 	      1076	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1
0x40022b1	    0x48838424b000	               add qword [rsp + 0xb0], 8	      1077	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1
0x40022ba	          0x83e801	                              sub eax, 1	      1076	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1
0x40022bd	    0x898424c00000	             mov dword [rsp + 0xc0], eax	      1076	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1
0x40022c4	            0xeb98	                           jmp 0x400225e	      1078	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1
0x40022c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1078	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1
0x40022d0	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      1056	update-index.c	FUNCTION_37	WHILE_1	IF_4	CALL_63
0x40022d8	      0xba00000000	                              mov edx, 0	      1056	update-index.c	FUNCTION_37	WHILE_1	IF_4	CALL_63
0x40022dd	          0x4889de	                            mov rsi, rbx	      1056	update-index.c	FUNCTION_37	WHILE_1	IF_4	CALL_63
0x40022e0	      0xe800000000	                          call 0x40022e5	      1056	update-index.c	FUNCTION_37	WHILE_1	IF_4	CALL_63
0x40022e5	          0x4189c5	                           mov r13d, eax	      1056	update-index.c	FUNCTION_37	WHILE_1	IF_4	CALL_63
0x40022e8	    0x8b8424c00000	            mov eax, dword [rsp + 0xc0] 	      1058	update-index.c	FUNCTION_37	WHILE_1	IF_5
0x40022ef	            0x85c0	                           test eax, eax	      1058	update-index.c	FUNCTION_37	WHILE_1	IF_5
0x40022f1	     0xf84d1000000	                            je 0x40023c8	      1058	update-index.c	FUNCTION_37	WHILE_1	IF_5
0x40022f7	        0x418d5501	                      lea edx, [r13 + 1]	      1060	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1
0x40022fb	          0x83fa04	                              cmp edx, 4	      1060	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1
0x40022fe	     0xf875affffff	                            ja 0x400225e	      1060	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4002304	    0xff24d5000000	                       jmp qword [rdx*8]	      1060	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1
0x400230b	       0xf1f440000	                   nop dword [rax + rax]	      1060	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4002310	      0xbf81000000	                           mov edi, 0x81	      1063	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_64
0x4002315	      0xe800000000	                          call 0x400231a	      1063	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_64
0x400231a	    0x660f1f440000	                    nop word [rax + rax]	      1063	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_64
0x4002320	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	      1081	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_7
0x4002328	          0x488b30	                    mov rsi, qword [rax]	      1081	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_7
0x400232b	        0x807e012d	                cmp byte [rsi + 1], 0x2d	      1081	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_7
0x400232f	            0x747f	                            je 0x40023b0	      1081	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_7
0x4002331	    0x488b8424d000	            mov rax, qword [rsp + 0xd0] 	      1084	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_71
0x4002339	      0xbf00000000	                              mov edi, 0	      1084	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_71
0x400233e	           0xfbe30	                   movsx esi, byte [rax]	      1084	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_71
0x4002341	            0x31c0	                            xor eax, eax	      1084	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_71
0x4002343	      0xe800000000	                          call 0x4002348	      1084	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_71
0x4002348	          0x4889de	                            mov rsi, rbx	      1035	update-index.c	FUNCTION_37	CALL_57
0x400234b	      0xbf00000000	                              mov edi, 0	      1035	update-index.c	FUNCTION_37	CALL_57
0x4002350	      0xe800000000	                          call 0x4002355	      1035	update-index.c	FUNCTION_37	CALL_57
0x4002355	           0xf1f00	                         nop dword [rax]	      1035	update-index.c	FUNCTION_37	CALL_57
0x4002358	        0x498b4608	                mov rax, qword [r14 + 8]	      1034	update-index.c	FUNCTION_37	IF_1	CALL_56
0x400235c	          0x80382d	                    cmp byte [rax], 0x2d	      1034	update-index.c	FUNCTION_37	IF_1	CALL_56
0x400235f	     0xf8590feffff	                           jne 0x40021f5	      1034	update-index.c	FUNCTION_37	IF_1	CALL_56
0x4002365	        0x80780168	                cmp byte [rax + 1], 0x68	      1034	update-index.c	FUNCTION_37	IF_1	CALL_56
0x4002369	     0xf8586feffff	                           jne 0x40021f5	      1034	update-index.c	FUNCTION_37	IF_1	CALL_56
0x400236f	        0x80780200	                   cmp byte [rax + 2], 0	      1034	update-index.c	FUNCTION_37	IF_1	CALL_56
0x4002373	     0xf857cfeffff	                           jne 0x40021f5	      1034	update-index.c	FUNCTION_37	IF_1	CALL_56
0x4002379	            0xebcd	                           jmp 0x4002348	      1034	update-index.c	FUNCTION_37	IF_1	CALL_56
0x400237b	       0xf1f440000	                   nop dword [rax + rax]	      1034	update-index.c	FUNCTION_37	IF_1	CALL_56
0x4002380	      0xe800000000	                          call 0x4002385	      1042	update-index.c	FUNCTION_37	IF_2
0x4002385	            0x8b00	                    mov eax, dword [rax]	      1042	update-index.c	FUNCTION_37	IF_2
0x4002387	        0x8944240c	              mov dword [rsp + 0xc], eax	      1042	update-index.c	FUNCTION_37	IF_2
0x400238b	      0xe990feffff	                           jmp 0x4002220	      1042	update-index.c	FUNCTION_37	IF_2
0x4002390	          0x4c89f6	                            mov rsi, r14	      1074	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_68
0x4002393	      0xe808e7ffff	                     call sym.chmod_path	      1074	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_68
0x4002398	      0xe905ffffff	                           jmp 0x40022a2	      1074	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_68
0x400239d	           0xf1f00	                         nop dword [rax]	      1074	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_68
0x40023a0	          0x4531e4	                          xor r12d, r12d	       922	update-index.c	FUNCTION_37	CALL_1
0x40023a3	      0xe909f5ffff	                           jmp 0x40018b1	       922	update-index.c	FUNCTION_37	CALL_1
0x40023a8	     0xf1f84000000	                   nop dword [rax + rax]	       922	update-index.c	FUNCTION_37	CALL_1
0x40023b0	        0x4883c602	                              add rsi, 2	      1082	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_70
0x40023b4	      0xbf00000000	                              mov edi, 0	      1082	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_70
0x40023b9	            0x31c0	                            xor eax, eax	      1082	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_70
0x40023bb	      0xe800000000	                          call 0x40023c0	      1082	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_70
0x40023c0	            0xeb86	                           jmp 0x4002348	      1082	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_70
0x40023c2	    0x660f1f440000	                    nop word [rax + rax]	      1082	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_70
0x40023c8	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      1088	update-index.c	FUNCTION_37	CALL_73
0x40023d0	    0x41bd00000000	                             mov r13d, 0	      1090	update-index.c	FUNCTION_37
0x40023d6	      0xe800000000	                          call 0x40023db	      1088	update-index.c	FUNCTION_37	CALL_73
0x40023db	      0x448b4c2424	            mov r9d, dword [rsp + 0x24] 	      1090	update-index.c	FUNCTION_37
0x40023e0	        0x8b742430	            mov esi, dword [rsp + 0x30] 	      1091	update-index.c	FUNCTION_37	IF_8
0x40023e4	      0xb800000000	                              mov eax, 0	      1090	update-index.c	FUNCTION_37
0x40023e9	          0x4585c9	                           test r9d, r9d	      1090	update-index.c	FUNCTION_37
0x40023ec	        0x4c0f44e8	                          cmove r13, rax	      1090	update-index.c	FUNCTION_37
0x40023f0	            0x85f6	                           test esi, esi	      1091	update-index.c	FUNCTION_37	IF_8
0x40023f2	            0x7421	                            je 0x4002415	      1091	update-index.c	FUNCTION_37	IF_8
0x40023f4	          0x8d46fe	                      lea eax, [rsi - 2]	      1092	update-index.c	FUNCTION_37	IF_8	IF_9
0x40023f7	          0x83f802	                              cmp eax, 2	      1092	update-index.c	FUNCTION_37	IF_8	IF_9
0x40023fa	     0xf87bb080000	                            ja 0x4002cbb	      1092	update-index.c	FUNCTION_37	IF_8	IF_9
0x4002400	    0x3b3500000000	            cmp esi, dword [0x04002406] 	      1098	update-index.c	FUNCTION_37	IF_8	IF_10
0x4002406	            0x7407	                            je 0x400240f	      1098	update-index.c	FUNCTION_37	IF_8	IF_10
0x4002408	    0x830d00000000	                or dword [0x0400240f], 1	      1099	update-index.c	FUNCTION_37	IF_8	IF_10
0x400240f	    0x893500000000	            mov dword [0x04002415], esi 	      1100	update-index.c	FUNCTION_37	IF_8
0x4002415	      0x448b44242c	            mov r8d, dword [rsp + 0x2c] 	      1103	update-index.c	FUNCTION_37	IF_11
0x400241a	          0x4585c0	                           test r8d, r8d	      1103	update-index.c	FUNCTION_37	IF_11
0x400241d	     0xf85e5040000	                           jne 0x4002908	      1103	update-index.c	FUNCTION_37	IF_11
0x4002423	      0x837c243400	               cmp dword [rsp + 0x34], 0	      1126	update-index.c	FUNCTION_37	IF_15
0x4002428	            0x7e3e	                           jle 0x4002468	      1126	update-index.c	FUNCTION_37	IF_15
0x400242a	      0xe800000000	                          call 0x400242f	      1127	update-index.c	FUNCTION_37	IF_15	IF_16	CALL_87
0x400242f	            0x85c0	                           test eax, eax	      1127	update-index.c	FUNCTION_37	IF_15	IF_16	CALL_87
0x4002431	     0xf8493060000	                            je 0x4002aca	      1127	update-index.c	FUNCTION_37	IF_15	IF_16	CALL_87
0x4002437	    0x48833d000000	               cmp qword [0x0400243f], 0	      1131	update-index.c	FUNCTION_37	IF_15	IF_17
0x400243f	     0xf8474070000	                            je 0x4002bb9	      1131	update-index.c	FUNCTION_37	IF_15	IF_17
0x4002445	    0x830d00000000	            or dword [0x0400244c], 0x40 	      1132	update-index.c	FUNCTION_37	IF_15	IF_17
0x400244c	        0x8b742428	            mov esi, dword [rsp + 0x28] 	      1143	update-index.c	FUNCTION_37	SWITCH_2
0x4002450	          0x8d4601	                      lea eax, [rsi + 1]	      1143	update-index.c	FUNCTION_37	SWITCH_2
0x4002453	          0x83f804	                              cmp eax, 4	      1143	update-index.c	FUNCTION_37	SWITCH_2
0x4002456	     0xf8762060000	                            ja 0x4002abe	      1143	update-index.c	FUNCTION_37	SWITCH_2
0x400245c	    0xff24c5000000	                       jmp qword [rax*8]	      1143	update-index.c	FUNCTION_37	SWITCH_2
0x4002463	       0xf1f440000	                   nop dword [rax + rax]	      1143	update-index.c	FUNCTION_37	SWITCH_2
0x4002468	            0x75e2	                           jne 0x400244c	      1135	update-index.c	FUNCTION_37	ELSE_3	IF_18
0x400246a	      0xe800000000	                          call 0x400246f	      1136	update-index.c	FUNCTION_37	ELSE_3	IF_18	IF_19	CALL_91
0x400246f	          0x83f801	                              cmp eax, 1	      1136	update-index.c	FUNCTION_37	ELSE_3	IF_18	IF_19	CALL_91
0x4002472	     0xf84a2070000	                            je 0x4002c1a	      1136	update-index.c	FUNCTION_37	ELSE_3	IF_18	IF_19	CALL_91
0x4002478	      0xbf00000000	                              mov edi, 0	      1140	update-index.c	FUNCTION_37	ELSE_3	IF_18	CALL_94
0x400247d	      0xe800000000	                          call 0x4002482	      1140	update-index.c	FUNCTION_37	ELSE_3	IF_18	CALL_94
0x4002482	            0xebc8	                           jmp 0x400244c	      1140	update-index.c	FUNCTION_37	ELSE_3	IF_18	CALL_94
0x4002484	      0xe800000000	                          call 0x4002489	      1147	update-index.c	FUNCTION_37	SWITCH_2	IF_20	CALL_95
0x4002489	          0x83f801	                              cmp eax, 1	      1147	update-index.c	FUNCTION_37	SWITCH_2	IF_20	CALL_95
0x400248c	     0xf844f070000	                            je 0x4002be1	      1147	update-index.c	FUNCTION_37	SWITCH_2	IF_20	CALL_95
0x4002492	      0xbf00000000	                              mov edi, 0	      1151	update-index.c	FUNCTION_37	SWITCH_2	CALL_98
0x4002497	      0xe800000000	                          call 0x400249c	      1151	update-index.c	FUNCTION_37	SWITCH_2	CALL_98
0x400249c	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_95	CALL_2
0x400249e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_95	CALL_2
0x40024a3	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_95	CALL_2
0x40024a8	      0xe800000000	                          call 0x40024ad	        54	gettext.h	FUNCTION_95	CALL_2
0x40024ad	          0x4889c7	                            mov rdi, rax	      1152	update-index.c	FUNCTION_37	SWITCH_2	CALL_100
0x40024b0	            0x31c0	                            xor eax, eax	      1152	update-index.c	FUNCTION_37	SWITCH_2	CALL_100
0x40024b2	      0xe889e3ffff	                         call sym.report	      1152	update-index.c	FUNCTION_37	SWITCH_2	CALL_100
0x40024b7	      0x837c243c00	               cmp dword [rsp + 0x3c], 0	      1170	update-index.c	FUNCTION_37	IF_22
0x40024bc	     0xf8ebe050000	                           jle 0x4002a80	      1170	update-index.c	FUNCTION_37	IF_22
0x40024c2	      0xe800000000	                          call 0x40024c7	      1171	update-index.c	FUNCTION_37	IF_22	IF_23	CALL_111
0x40024c7	            0x85c0	                           test eax, eax	      1171	update-index.c	FUNCTION_37	IF_22	IF_23	CALL_111
0x40024c9	     0xf8442060000	                            je 0x4002b11	      1171	update-index.c	FUNCTION_37	IF_22	IF_23	CALL_111
0x40024cf	      0xbf00000000	                              mov edi, 0	      1175	update-index.c	FUNCTION_37	IF_22	CALL_114
0x40024d4	      0xe800000000	                          call 0x40024d9	      1175	update-index.c	FUNCTION_37	IF_22	CALL_114
0x40024d9	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_95	CALL_2
0x40024de	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_95	CALL_2
0x40024e3	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_95	CALL_2
0x40024e5	      0xe800000000	                          call 0x40024ea	        54	gettext.h	FUNCTION_95	CALL_2
0x40024ea	          0x4889c7	                            mov rdi, rax	      1183	update-index.c	FUNCTION_37	ELSE_4	IF_24	CALL_122
0x40024ed	            0x31c0	                            xor eax, eax	      1183	update-index.c	FUNCTION_37	ELSE_4	IF_24	CALL_122
0x40024ef	      0xe84ce3ffff	                         call sym.report	      1183	update-index.c	FUNCTION_37	ELSE_4	IF_24	CALL_122
0x40024f4	    0x8b0d00000000	            mov ecx, dword [0x040024fa] 	      1186	update-index.c	FUNCTION_37	IF_26
0x40024fa	            0x85c9	                           test ecx, ecx	      1186	update-index.c	FUNCTION_37	IF_26
0x40024fc	     0xf85ce030000	                           jne 0x40028d0	      1186	update-index.c	FUNCTION_37	IF_26
0x4002502	        0x8b542438	            mov edx, dword [rsp + 0x38] 	      1186	update-index.c	FUNCTION_37	IF_26
0x4002506	            0x85d2	                           test edx, edx	      1186	update-index.c	FUNCTION_37	IF_26
0x4002508	     0xf85c2030000	                           jne 0x40028d0	      1186	update-index.c	FUNCTION_37	IF_26
0x400250e	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       304	lockfile.h	FUNCTION_106	CALL_1
0x4002513	            0x31db	                            xor ebx, ebx	      1198	update-index.c	FUNCTION_37
0x4002515	      0xe800000000	                          call 0x400251a	       304	lockfile.h	FUNCTION_106	CALL_1
0x400251a	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      1198	update-index.c	FUNCTION_37
0x400251e	            0x85c0	                           test eax, eax	      1198	update-index.c	FUNCTION_37
0x4002520	           0xf95c3	                                setne bl	      1198	update-index.c	FUNCTION_37
0x4002523	            0x89d8	                            mov eax, ebx	      1199	update-index.c	FUNCTION_37
0x4002525	    0x488b9c24180a	           mov rbx, qword [rsp + 0xa18] 	      1199	update-index.c	FUNCTION_37
0x400252d	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1199	update-index.c	FUNCTION_37
0x4002536	     0xf855c070000	                           jne 0x4002c98	      1199	update-index.c	FUNCTION_37
0x400253c	    0x4881c4280a00	                          add rsp, 0xa28	      1199	update-index.c	FUNCTION_37
0x4002543	              0x5b	                                 pop rbx	      1199	update-index.c	FUNCTION_37
0x4002544	              0x5d	                                 pop rbp	      1199	update-index.c	FUNCTION_37
0x4002545	            0x415c	                                 pop r12	      1199	update-index.c	FUNCTION_37
0x4002547	            0x415d	                                 pop r13	      1199	update-index.c	FUNCTION_37
0x4002549	            0x415e	                                 pop r14	      1199	update-index.c	FUNCTION_37
0x400254b	            0x415f	                                 pop r15	      1199	update-index.c	FUNCTION_37
0x400254d	              0xc3	                                     ret	      1199	update-index.c	FUNCTION_37
0x400254e	      0xe800000000	                          call 0x4002553	      1155	update-index.c	FUNCTION_37	SWITCH_2	CALL_101
0x4002553	      0xba11000000	                           mov edx, 0x11	       279	strbuf.h	FUNCTION_74	CALL_2
0x4002558	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_74	CALL_2
0x400255d	      0xbf00000000	                              mov edi, 0	       279	strbuf.h	FUNCTION_74	CALL_2
0x4002562	      0xe800000000	                          call 0x4002567	       279	strbuf.h	FUNCTION_74	CALL_2
0x4002567	    0x488b3d000000	            mov rdi, qword [0x0400256e] 	       134	update-index.c	FUNCTION_10	IF_1	CALL_2
0x400256e	      0xe800000000	                          call 0x4002573	       134	update-index.c	FUNCTION_10	IF_1	CALL_2
0x4002573	          0x4885c0	                           test rax, rax	       134	update-index.c	FUNCTION_10	IF_1	CALL_2
0x4002576	     0xf8455070000	                            je 0x4002cd1	       134	update-index.c	FUNCTION_10	IF_1	CALL_2
0x400257c	      0xe800000000	                          call 0x4002581	       137	update-index.c	FUNCTION_10	CALL_4
0x4002581	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_95	CALL_2
0x4002583	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_95	CALL_2
0x4002588	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_95	CALL_2
0x400258d	          0x4889c3	                            mov rbx, rax	       137	update-index.c	FUNCTION_10	CALL_4
0x4002590	      0xe800000000	                          call 0x4002595	        54	gettext.h	FUNCTION_95	CALL_2
0x4002595	    0x488b3d000000	            mov rdi, qword [0x0400259c] 	        97	stdio2.h	FUNCTION_111	CALL_1
0x400259c	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	FUNCTION_111	CALL_1
0x400259f	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	FUNCTION_111	CALL_1
0x40025a2	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_111	CALL_1
0x40025a7	            0x31c0	                            xor eax, eax	        97	stdio2.h	FUNCTION_111	CALL_1
0x40025a9	      0xe800000000	                          call 0x40025ae	        97	stdio2.h	FUNCTION_111	CALL_1
0x40025ae	          0x4889df	                            mov rdi, rbx	       139	update-index.c	FUNCTION_10	CALL_7
0x40025b1	      0xe800000000	                          call 0x40025b6	       139	update-index.c	FUNCTION_10	CALL_7
0x40025b6	      0xbf00000000	                              mov edi, 0	       141	update-index.c	FUNCTION_10	CALL_8
0x40025bb	      0xe800000000	                          call 0x40025c0	       141	update-index.c	FUNCTION_10	CALL_8
0x40025c0	    0x488dbc24f000	                   lea rdi, [rsp + 0xf0]	       142	update-index.c	FUNCTION_10	CALL_9
0x40025c8	      0xe873e5ffff	                call sym.xstat_mtime_dir	       142	update-index.c	FUNCTION_10	CALL_9
0x40025cd	    0x488db424f000	                   lea rsi, [rsp + 0xf0]	       143	update-index.c	FUNCTION_10	CALL_10
0x40025d5	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       143	update-index.c	FUNCTION_10	CALL_10
0x40025dd	      0xe800000000	                          call 0x40025e2	       143	update-index.c	FUNCTION_10	CALL_10
0x40025e2	    0x488b35000000	            mov rsi, qword [0x040025e9] 	       144	update-index.c	FUNCTION_10	CALL_11
0x40025e9	      0xbf2e000000	                           mov edi, 0x2e	       144	update-index.c	FUNCTION_10	CALL_11
0x40025ee	      0xe800000000	                          call 0x40025f3	       144	update-index.c	FUNCTION_10	CALL_11
0x40025f3	      0xbf01000000	                              mov edi, 1	       123	update-index.c	FUNCTION_9	CALL_1
0x40025f8	      0xe800000000	                          call 0x40025fd	       123	update-index.c	FUNCTION_9	CALL_1
0x40025fd	      0xbf00000000	                              mov edi, 0	       147	update-index.c	FUNCTION_10	CALL_13
0x4002602	      0xe8d9f1ffff	                    call sym.create_file	       147	update-index.c	FUNCTION_10	CALL_13
0x4002607	    0x488dbc24f000	                   lea rdi, [rsp + 0xf0]	       148	update-index.c	FUNCTION_10	CALL_14
0x400260f	            0x89c3	                            mov ebx, eax	       147	update-index.c	FUNCTION_10	CALL_13
0x4002611	      0xe82ae5ffff	                call sym.xstat_mtime_dir	       148	update-index.c	FUNCTION_10	CALL_14
0x4002616	    0x488db424f000	                   lea rsi, [rsp + 0xf0]	       149	update-index.c	FUNCTION_10	IF_2	CALL_15
0x400261e	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       149	update-index.c	FUNCTION_10	IF_2	CALL_15
0x4002626	      0xe800000000	                          call 0x400262b	       149	update-index.c	FUNCTION_10	IF_2	CALL_15
0x400262b	            0x85c0	                           test eax, eax	       149	update-index.c	FUNCTION_10	IF_2	CALL_15
0x400262d	     0xf84fe040000	                            je 0x4002b31	       149	update-index.c	FUNCTION_10	IF_2	CALL_15
0x4002633	    0x488db424f000	                   lea rsi, [rsp + 0xf0]	       156	update-index.c	FUNCTION_10	CALL_20
0x400263b	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       156	update-index.c	FUNCTION_10	CALL_20
0x4002643	      0xe800000000	                          call 0x4002648	       156	update-index.c	FUNCTION_10	CALL_20
0x4002648	    0x488b35000000	            mov rsi, qword [0x0400264f] 	       157	update-index.c	FUNCTION_10	CALL_21
0x400264f	      0xbf2e000000	                           mov edi, 0x2e	       157	update-index.c	FUNCTION_10	CALL_21
0x4002654	      0xe800000000	                          call 0x4002659	       157	update-index.c	FUNCTION_10	CALL_21
0x4002659	      0xbf01000000	                              mov edi, 1	       123	update-index.c	FUNCTION_9	CALL_1
0x400265e	      0xe800000000	                          call 0x4002663	       123	update-index.c	FUNCTION_9	CALL_1
0x4002663	      0xbf00000000	                              mov edi, 0	        80	update-index.c	FUNCTION_4	CALL_1
0x4002668	      0xe813f1ffff	                 call sym.get_mtime_path	        80	update-index.c	FUNCTION_4	CALL_1
0x400266d	      0xbec0010000	                          mov esi, 0x1c0	        81	update-index.c	FUNCTION_4	IF_1	CALL_2
0x4002672	          0x4889c7	                            mov rdi, rax	        81	update-index.c	FUNCTION_4	IF_1	CALL_2
0x4002675	          0x4889c5	                            mov rbp, rax	        80	update-index.c	FUNCTION_4	CALL_1
0x4002678	      0xe800000000	                          call 0x400267d	        81	update-index.c	FUNCTION_4	IF_1	CALL_2
0x400267d	            0x85c0	                           test eax, eax	        81	update-index.c	FUNCTION_4	IF_1	CALL_2
0x400267f	     0xf8556060000	                           jne 0x4002cdb	        81	update-index.c	FUNCTION_4	IF_1	CALL_2
0x4002685	    0x488dbc24f000	                   lea rdi, [rsp + 0xf0]	       161	update-index.c	FUNCTION_10	CALL_24
0x400268d	      0xe8aee4ffff	                call sym.xstat_mtime_dir	       161	update-index.c	FUNCTION_10	CALL_24
0x4002692	    0x488db424f000	                   lea rsi, [rsp + 0xf0]	       162	update-index.c	FUNCTION_10	IF_3	CALL_25
0x400269a	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       162	update-index.c	FUNCTION_10	IF_3	CALL_25
0x40026a2	      0xe800000000	                          call 0x40026a7	       162	update-index.c	FUNCTION_10	IF_3	CALL_25
0x40026a7	            0x85c0	                           test eax, eax	       162	update-index.c	FUNCTION_10	IF_3	CALL_25
0x40026a9	     0xf84e6040000	                            je 0x4002b95	       162	update-index.c	FUNCTION_10	IF_3	CALL_25
0x40026af	    0x488db424f000	                   lea rsi, [rsp + 0xf0]	       169	update-index.c	FUNCTION_10	CALL_30
0x40026b7	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       169	update-index.c	FUNCTION_10	CALL_30
0x40026bf	      0xe800000000	                          call 0x40026c4	       169	update-index.c	FUNCTION_10	CALL_30
0x40026c4	    0x488b35000000	            mov rsi, qword [0x040026cb] 	       170	update-index.c	FUNCTION_10	CALL_31
0x40026cb	      0xbf2e000000	                           mov edi, 0x2e	       170	update-index.c	FUNCTION_10	CALL_31
0x40026d0	      0xe800000000	                          call 0x40026d5	       170	update-index.c	FUNCTION_10	CALL_31
0x40026d5	      0xbf01000000	                              mov edi, 1	       123	update-index.c	FUNCTION_9	CALL_1
0x40026da	      0xe800000000	                          call 0x40026df	       123	update-index.c	FUNCTION_9	CALL_1
0x40026df	      0xba04000000	                              mov edx, 4	       173	update-index.c	FUNCTION_10	CALL_33
0x40026e4	      0xbe00000000	                              mov esi, 0	       173	update-index.c	FUNCTION_10	CALL_33
0x40026e9	            0x89df	                            mov edi, ebx	       173	update-index.c	FUNCTION_10	CALL_33
0x40026eb	      0xe800000000	                          call 0x40026f0	       173	update-index.c	FUNCTION_10	CALL_33
0x40026f0	            0x89df	                            mov edi, ebx	       174	update-index.c	FUNCTION_10	CALL_34
0x40026f2	      0xe800000000	                          call 0x40026f7	       174	update-index.c	FUNCTION_10	CALL_34
0x40026f7	    0x488dbc24f000	                   lea rdi, [rsp + 0xf0]	       175	update-index.c	FUNCTION_10	CALL_35
0x40026ff	      0xe83ce4ffff	                call sym.xstat_mtime_dir	       175	update-index.c	FUNCTION_10	CALL_35
0x4002704	    0x488db424f000	                   lea rsi, [rsp + 0xf0]	       176	update-index.c	FUNCTION_10	IF_4	CALL_36
0x400270c	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       176	update-index.c	FUNCTION_10	IF_4	CALL_36
0x4002714	      0xe800000000	                          call 0x4002719	       176	update-index.c	FUNCTION_10	IF_4	CALL_36
0x4002719	            0x85c0	                           test eax, eax	       176	update-index.c	FUNCTION_10	IF_4	CALL_36
0x400271b	    0x488b35000000	            mov rsi, qword [0x04002722] 	       177	update-index.c	FUNCTION_10	IF_4	CALL_37
0x4002722	     0xf85a0040000	                           jne 0x4002bc8	       176	update-index.c	FUNCTION_10	IF_4	CALL_36
0x4002728	      0xbf2e000000	                           mov edi, 0x2e	       182	update-index.c	FUNCTION_10	CALL_40
0x400272d	      0xe800000000	                          call 0x4002732	       182	update-index.c	FUNCTION_10	CALL_40
0x4002732	      0xbf01000000	                              mov edi, 1	       123	update-index.c	FUNCTION_9	CALL_1
0x4002737	      0xe800000000	                          call 0x400273c	       123	update-index.c	FUNCTION_9	CALL_1
0x400273c	      0xbf00000000	                              mov edi, 0	       185	update-index.c	FUNCTION_10	CALL_43
0x4002741	      0xe89af0ffff	                    call sym.create_file	       185	update-index.c	FUNCTION_10	CALL_43
0x4002746	            0x89c7	                            mov edi, eax	       185	update-index.c	FUNCTION_10	CALL_43
0x4002748	      0xe800000000	                          call 0x400274d	       185	update-index.c	FUNCTION_10	CALL_43
0x400274d	    0x488dbc24f000	                   lea rdi, [rsp + 0xf0]	       186	update-index.c	FUNCTION_10	CALL_44
0x4002755	      0xe8e6e3ffff	                call sym.xstat_mtime_dir	       186	update-index.c	FUNCTION_10	CALL_44
0x400275a	    0x488db424f000	                   lea rsi, [rsp + 0xf0]	       187	update-index.c	FUNCTION_10	IF_5	CALL_45
0x4002762	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       187	update-index.c	FUNCTION_10	IF_5	CALL_45
0x400276a	      0xe800000000	                          call 0x400276f	       187	update-index.c	FUNCTION_10	IF_5	CALL_45
0x400276f	            0x85c0	                           test eax, eax	       187	update-index.c	FUNCTION_10	IF_5	CALL_45
0x4002771	    0x488b35000000	            mov rsi, qword [0x04002778] 	       188	update-index.c	FUNCTION_10	IF_5	CALL_46
0x4002778	     0xf8583040000	                           jne 0x4002c01	       187	update-index.c	FUNCTION_10	IF_5	CALL_45
0x400277e	      0xbf2e000000	                           mov edi, 0x2e	       193	update-index.c	FUNCTION_10	CALL_49
0x4002783	      0xe800000000	                          call 0x4002788	       193	update-index.c	FUNCTION_10	CALL_49
0x4002788	      0xbf01000000	                              mov edi, 1	       123	update-index.c	FUNCTION_9	CALL_1
0x400278d	      0xe800000000	                          call 0x4002792	       123	update-index.c	FUNCTION_9	CALL_1
0x4002792	      0xbf00000000	                              mov edi, 0	       196	update-index.c	FUNCTION_10	CALL_51
0x4002797	      0xe884f0ffff	                        call sym.xunlink	       196	update-index.c	FUNCTION_10	CALL_51
0x400279c	    0x488dbc24f000	                   lea rdi, [rsp + 0xf0]	       197	update-index.c	FUNCTION_10	CALL_52
0x40027a4	      0xe897e3ffff	                call sym.xstat_mtime_dir	       197	update-index.c	FUNCTION_10	CALL_52
0x40027a9	    0x488db424f000	                   lea rsi, [rsp + 0xf0]	       198	update-index.c	FUNCTION_10	IF_6	CALL_53
0x40027b1	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       198	update-index.c	FUNCTION_10	IF_6	CALL_53
0x40027b9	      0xe800000000	                          call 0x40027be	       198	update-index.c	FUNCTION_10	IF_6	CALL_53
0x40027be	            0x85c0	                           test eax, eax	       198	update-index.c	FUNCTION_10	IF_6	CALL_53
0x40027c0	     0xf8486040000	                            je 0x4002c4c	       198	update-index.c	FUNCTION_10	IF_6	CALL_53
0x40027c6	    0x488db424f000	                   lea rsi, [rsp + 0xf0]	       204	update-index.c	FUNCTION_10	CALL_57
0x40027ce	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       204	update-index.c	FUNCTION_10	CALL_57
0x40027d6	      0xe800000000	                          call 0x40027db	       204	update-index.c	FUNCTION_10	CALL_57
0x40027db	    0x488b35000000	            mov rsi, qword [0x040027e2] 	       205	update-index.c	FUNCTION_10	CALL_58
0x40027e2	      0xbf2e000000	                           mov edi, 0x2e	       205	update-index.c	FUNCTION_10	CALL_58
0x40027e7	      0xe800000000	                          call 0x40027ec	       205	update-index.c	FUNCTION_10	CALL_58
0x40027ec	      0xbf01000000	                              mov edi, 1	       123	update-index.c	FUNCTION_9	CALL_1
0x40027f1	      0xe800000000	                          call 0x40027f6	       123	update-index.c	FUNCTION_9	CALL_1
0x40027f6	      0xbf00000000	                              mov edi, 0	       208	update-index.c	FUNCTION_10	CALL_60
0x40027fb	      0xe820f0ffff	                        call sym.xunlink	       208	update-index.c	FUNCTION_10	CALL_60
0x4002800	      0xbf00000000	                              mov edi, 0	       111	update-index.c	FUNCTION_8	CALL_1
0x4002805	      0xe876efffff	                 call sym.get_mtime_path	       111	update-index.c	FUNCTION_8	CALL_1
0x400280a	          0x4889c7	                            mov rdi, rax	       112	update-index.c	FUNCTION_8	IF_1	CALL_2
0x400280d	          0x4889c3	                            mov rbx, rax	       111	update-index.c	FUNCTION_8	CALL_1
0x4002810	      0xe800000000	                          call 0x4002815	       112	update-index.c	FUNCTION_8	IF_1	CALL_2
0x4002815	            0x85c0	                           test eax, eax	       112	update-index.c	FUNCTION_8	IF_1	CALL_2
0x4002817	     0xf8587040000	                           jne 0x4002ca4	       112	update-index.c	FUNCTION_8	IF_1	CALL_2
0x400281d	    0x488dbc24f000	                   lea rdi, [rsp + 0xf0]	       210	update-index.c	FUNCTION_10	CALL_62
0x4002825	      0xe816e3ffff	                call sym.xstat_mtime_dir	       210	update-index.c	FUNCTION_10	CALL_62
0x400282a	    0x488db424f000	                   lea rsi, [rsp + 0xf0]	       211	update-index.c	FUNCTION_10	IF_7	CALL_63
0x4002832	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       211	update-index.c	FUNCTION_10	IF_7	CALL_63
0x400283a	      0xe800000000	                          call 0x400283f	       211	update-index.c	FUNCTION_10	IF_7	CALL_63
0x400283f	            0x85c0	                           test eax, eax	       211	update-index.c	FUNCTION_10	IF_7	CALL_63
0x4002841	     0xf8425040000	                            je 0x4002c6c	       211	update-index.c	FUNCTION_10	IF_7	CALL_63
0x4002847	    0x488b3d000000	            mov rdi, qword [0x0400284e] 	       218	update-index.c	FUNCTION_10	IF_8	CALL_67
0x400284e	      0xe800000000	                          call 0x4002853	       218	update-index.c	FUNCTION_10	IF_8	CALL_67
0x4002853	            0x85c0	                           test eax, eax	       218	update-index.c	FUNCTION_10	IF_8	CALL_67
0x4002855	            0x89c3	                            mov ebx, eax	       218	update-index.c	FUNCTION_10	IF_8	CALL_67
0x4002857	     0xf8540040000	                           jne 0x4002c9d	       218	update-index.c	FUNCTION_10	IF_8	CALL_67
0x400285d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_95	CALL_2
0x4002862	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_95	CALL_2
0x4002864	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_95	CALL_2
0x4002869	      0xe800000000	                          call 0x400286e	        54	gettext.h	FUNCTION_95	CALL_2
0x400286e	    0x488b3d000000	            mov rdi, qword [0x04002875] 	       220	update-index.c	FUNCTION_10	CALL_71
0x4002875	          0x4889c6	                            mov rsi, rax	       220	update-index.c	FUNCTION_10	CALL_71
0x4002878	            0x31c0	                            xor eax, eax	       220	update-index.c	FUNCTION_10	CALL_71
0x400287a	      0xe800000000	                          call 0x400287f	       220	update-index.c	FUNCTION_10	CALL_71
0x400287f	      0xbf00000000	                              mov edi, 0	       224	update-index.c	FUNCTION_10	CALL_72
0x4002884	      0xe800000000	                          call 0x4002889	       224	update-index.c	FUNCTION_10	CALL_72
0x4002889	      0xe995fcffff	                           jmp 0x4002523	      1156	update-index.c	FUNCTION_37	SWITCH_2	CALL_102
0x400288e	      0xe800000000	                          call 0x4002893	      1159	update-index.c	FUNCTION_37	SWITCH_2	IF_21	CALL_103
0x4002893	            0x85c0	                           test eax, eax	      1159	update-index.c	FUNCTION_37	SWITCH_2	IF_21	CALL_103
0x4002895	     0xf84da020000	                            je 0x4002b75	      1159	update-index.c	FUNCTION_37	SWITCH_2	IF_21	CALL_103
0x400289b	      0xbf00000000	                              mov edi, 0	      1163	update-index.c	FUNCTION_37	SWITCH_2	CALL_106
0x40028a0	      0xe800000000	                          call 0x40028a5	      1163	update-index.c	FUNCTION_37	SWITCH_2	CALL_106
0x40028a5	      0xe800000000	                          call 0x40028aa	      1164	update-index.c	FUNCTION_37	SWITCH_2	CALL_109
0x40028aa	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_95	CALL_2
0x40028ac	          0x4889c3	                            mov rbx, rax	      1164	update-index.c	FUNCTION_37	SWITCH_2	CALL_109
0x40028af	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_95	CALL_2
0x40028b4	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_95	CALL_2
0x40028b9	      0xe800000000	                          call 0x40028be	        54	gettext.h	FUNCTION_95	CALL_2
0x40028be	          0x4889de	                            mov rsi, rbx	      1164	update-index.c	FUNCTION_37	SWITCH_2	CALL_109
0x40028c1	          0x4889c7	                            mov rdi, rax	      1164	update-index.c	FUNCTION_37	SWITCH_2	CALL_109
0x40028c4	            0x31c0	                            xor eax, eax	      1164	update-index.c	FUNCTION_37	SWITCH_2	CALL_109
0x40028c6	      0xe875dfffff	                         call sym.report	      1164	update-index.c	FUNCTION_37	SWITCH_2	CALL_109
0x40028cb	      0xe9e7fbffff	                           jmp 0x40024b7	      1165	update-index.c	FUNCTION_37	SWITCH_2
0x40028d0	          0x4585ff	                         test r15d, r15d	      1187	update-index.c	FUNCTION_37	IF_26	IF_27
0x40028d3	     0xf88d4010000	                            js 0x4002aad	      1187	update-index.c	FUNCTION_37	IF_26	IF_27
0x40028d9	      0x488d742440	                   lea rsi, [rsp + 0x40]	      1192	update-index.c	FUNCTION_37	IF_26	IF_29	CALL_126
0x40028de	      0xba01000000	                              mov edx, 1	      1192	update-index.c	FUNCTION_37	IF_26	IF_29	CALL_126
0x40028e3	      0xbf00000000	                              mov edi, 0	      1192	update-index.c	FUNCTION_37	IF_26	IF_29	CALL_126
0x40028e8	      0xe800000000	                          call 0x40028ed	      1192	update-index.c	FUNCTION_37	IF_26	IF_29	CALL_126
0x40028ed	            0x85c0	                           test eax, eax	      1192	update-index.c	FUNCTION_37	IF_26	IF_29	CALL_126
0x40028ef	     0xf8419fcffff	                            je 0x400250e	      1192	update-index.c	FUNCTION_37	IF_26	IF_29	CALL_126
0x40028f5	      0xbf00000000	                              mov edi, 0	      1193	update-index.c	FUNCTION_37	IF_26	CALL_127
0x40028fa	            0x31c0	                            xor eax, eax	      1193	update-index.c	FUNCTION_37	IF_26	CALL_127
0x40028fc	      0xe800000000	                          call 0x4002901	      1193	update-index.c	FUNCTION_37	IF_26	CALL_127
0x4002901	     0xf1f80000000	                         nop dword [rax]	      1193	update-index.c	FUNCTION_37	IF_26	CALL_127
0x4002908	    0x48c744246000	               mov qword [rsp + 0x60], 0	      1104	update-index.c	FUNCTION_37	IF_11
0x4002911	    0x48c744246800	               mov qword [rsp + 0x68], 0	      1104	update-index.c	FUNCTION_37	IF_11
0x400291a	    0x48c744247000	               mov qword [rsp + 0x70], 0	      1104	update-index.c	FUNCTION_37	IF_11
0x4002923	    0x48c784248000	               mov qword [rsp + 0x80], 0	      1105	update-index.c	FUNCTION_37	IF_11
0x400292f	    0x48c784248800	               mov qword [rsp + 0x88], 0	      1105	update-index.c	FUNCTION_37	IF_11
0x400293b	    0x48c784249000	               mov qword [rsp + 0x90], 0	      1105	update-index.c	FUNCTION_37	IF_11
0x4002947	      0xe800000000	                          call 0x400294c	      1107	update-index.c	FUNCTION_37	IF_11	CALL_75
0x400294c	            0xeb0a	                           jmp 0x4002958	      1108	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_76
0x400294e	            0x6690	                                     nop	      1108	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_76
0x4002950	          0x4889df	                            mov rdi, rbx	      1120	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_84
0x4002953	      0xe800000000	                          call 0x4002958	      1120	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_84
0x4002958	    0x488b35000000	            mov rsi, qword [0x0400295f] 	      1108	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_76
0x400295f	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      1108	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_76
0x4002964	          0x41ffd5	                                call r13	      1108	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_76
0x4002967	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1108	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_76
0x400296a	     0xf84f0000000	                            je 0x4002a60	      1108	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_76
0x4002970	        0x8b7c2424	            mov edi, dword [rsp + 0x24] 	      1110	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12
0x4002974	      0x488b742470	            mov rsi, qword [rsp + 0x70] 	      1110	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12
0x4002979	            0x85ff	                           test edi, edi	      1110	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12
0x400297b	            0x7505	                           jne 0x4002982	      1110	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12
0x400297d	          0x803e22	                    cmp byte [rsi], 0x22	      1110	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12
0x4002980	            0x742e	                            je 0x40029b0	      1110	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12
0x4002982	          0x4889f2	                            mov rdx, rsi	      1116	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_81
0x4002985	          0x4889ef	                            mov rdi, rbp	      1116	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_81
0x4002988	          0x4489e6	                           mov esi, r12d	      1116	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_81
0x400298b	      0xe800000000	                          call 0x4002990	      1116	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_81
0x4002990	          0x4889c7	                            mov rdi, rax	      1117	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_82
0x4002993	          0x4889c3	                            mov rbx, rax	      1116	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_81
0x4002996	      0xe815e5ffff	                     call sym.update_one	      1117	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_82
0x400299b	       0xfbe7c241f	           movsx edi, byte [rsp + 0x1f] 	      1118	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_14
0x40029a0	          0x4084ff	                           test dil, dil	      1118	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_14
0x40029a3	            0x74ab	                            je 0x4002950	      1118	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_14
0x40029a5	          0x4889de	                            mov rsi, rbx	      1119	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_83
0x40029a8	      0xe8f3e0ffff	                     call sym.chmod_path	      1119	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_83
0x40029ad	            0xeba1	                           jmp 0x4002950	      1119	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_83
0x40029af	              0x90	                                     nop	      1119	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_83
0x40029b0	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	       165	strbuf.h	FUNCTION_72	IF_2
0x40029b8	    0x48c784248800	               mov qword [rsp + 0x88], 0	       164	strbuf.h	FUNCTION_72
0x40029c4	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_72	IF_2
0x40029ca	     0xf841a010000	                            je 0x4002aea	       165	strbuf.h	FUNCTION_72	IF_2
0x40029d0	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_72	IF_2
0x40029d3	      0x488b742470	            mov rsi, qword [rsp + 0x70] 	       166	strbuf.h	FUNCTION_72	IF_2
0x40029d8	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      1112	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12	IF_13	CALL_78
0x40029e0	            0x31d2	                            xor edx, edx	      1112	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12	IF_13	CALL_78
0x40029e2	      0xe800000000	                          call 0x40029e7	      1112	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12	IF_13	CALL_78
0x40029e7	            0x85c0	                           test eax, eax	      1112	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12	IF_13	CALL_78
0x40029e9	     0xf8503030000	                           jne 0x4002cf2	      1112	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12	IF_13	CALL_78
0x40029ef	    0x488bb4248000	            mov rsi, qword [rsp + 0x80] 	        53	string3.h	FUNCTION_81	CALL_3
0x40029f7	      0x488b4c2460	            mov rcx, qword [rsp + 0x60] 	        53	string3.h	FUNCTION_81	CALL_3
0x40029fc	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	        53	string3.h	FUNCTION_81	CALL_3
0x4002a01	      0x488b442470	            mov rax, qword [rsp + 0x70] 	        53	string3.h	FUNCTION_81	CALL_3
0x4002a06	      0x4889742460	             mov qword [rsp + 0x60], rsi	        53	string3.h	FUNCTION_81	CALL_3
0x4002a0b	    0x488bb4248800	            mov rsi, qword [rsp + 0x88] 	        53	string3.h	FUNCTION_81	CALL_3
0x4002a13	    0x48898c24000a	            mov qword [rsp + 0xa00], rcx	        53	string3.h	FUNCTION_81	CALL_3
0x4002a1b	    0x48899424080a	            mov qword [rsp + 0xa08], rdx	        53	string3.h	FUNCTION_81	CALL_3
0x4002a23	    0x48898424100a	            mov qword [rsp + 0xa10], rax	        53	string3.h	FUNCTION_81	CALL_3
0x4002a2b	    0x48898c248000	             mov qword [rsp + 0x80], rcx	        53	string3.h	FUNCTION_81	CALL_3
0x4002a33	      0x4889742468	             mov qword [rsp + 0x68], rsi	        53	string3.h	FUNCTION_81	CALL_3
0x4002a38	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	        53	string3.h	FUNCTION_81	CALL_3
0x4002a40	    0x488994248800	             mov qword [rsp + 0x88], rdx	        53	string3.h	FUNCTION_81	CALL_3
0x4002a48	    0x488984249000	             mov qword [rsp + 0x90], rax	        53	string3.h	FUNCTION_81	CALL_3
0x4002a50	      0x4889742470	             mov qword [rsp + 0x70], rsi	        53	string3.h	FUNCTION_81	CALL_3
0x4002a55	      0xe928ffffff	                           jmp 0x4002982	        53	string3.h	FUNCTION_81	CALL_3
0x4002a5a	    0x660f1f440000	                    nop word [rax + rax]	        53	string3.h	FUNCTION_81	CALL_3
0x4002a60	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      1122	update-index.c	FUNCTION_37	IF_11	CALL_85
0x4002a68	      0xe800000000	                          call 0x4002a6d	      1122	update-index.c	FUNCTION_37	IF_11	CALL_85
0x4002a6d	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      1123	update-index.c	FUNCTION_37	IF_11	CALL_86
0x4002a72	      0xe800000000	                          call 0x4002a77	      1123	update-index.c	FUNCTION_37	IF_11	CALL_86
0x4002a77	      0xe9a7f9ffff	                           jmp 0x4002423	      1123	update-index.c	FUNCTION_37	IF_11	CALL_86
0x4002a7c	         0xf1f4000	                         nop dword [rax]	      1123	update-index.c	FUNCTION_37	IF_11	CALL_86
0x4002a80	     0xf856efaffff	                           jne 0x40024f4	      1177	update-index.c	FUNCTION_37	ELSE_4	IF_24
0x4002a86	      0xe800000000	                          call 0x4002a8b	      1178	update-index.c	FUNCTION_37	ELSE_4	IF_24	IF_25	CALL_117
0x4002a8b	          0x83f801	                              cmp eax, 1	      1178	update-index.c	FUNCTION_37	ELSE_4	IF_24	IF_25	CALL_117
0x4002a8e	     0xf849f010000	                            je 0x4002c33	      1178	update-index.c	FUNCTION_37	ELSE_4	IF_24	IF_25	CALL_117
0x4002a94	      0xbf00000000	                              mov edi, 0	      1182	update-index.c	FUNCTION_37	ELSE_4	IF_24	CALL_120
0x4002a99	      0xe800000000	                          call 0x4002a9e	      1182	update-index.c	FUNCTION_37	ELSE_4	IF_24	CALL_120
0x4002a9e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_95	CALL_2
0x4002aa3	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_95	CALL_2
0x4002aa8	      0xe936faffff	                           jmp 0x40024e3	        54	gettext.h	FUNCTION_95	CALL_2
0x4002aad	      0xf644245004	               test byte [rsp + 0x50], 4	      1188	update-index.c	FUNCTION_37	IF_26	IF_27	IF_28
0x4002ab2	            0x744c	                            je 0x4002b00	      1188	update-index.c	FUNCTION_37	IF_26	IF_27	IF_28
0x4002ab4	      0xbf80000000	                           mov edi, 0x80	      1189	update-index.c	FUNCTION_37	IF_26	IF_27	CALL_123
0x4002ab9	      0xe800000000	                          call 0x4002abe	      1189	update-index.c	FUNCTION_37	IF_26	IF_27	CALL_123
0x4002abe	      0xbf00000000	                              mov edi, 0	      1167	update-index.c	FUNCTION_37	SWITCH_2	CALL_110
0x4002ac3	            0x31c0	                            xor eax, eax	      1167	update-index.c	FUNCTION_37	SWITCH_2	CALL_110
0x4002ac5	      0xe800000000	                          call 0x4002aca	      1167	update-index.c	FUNCTION_37	SWITCH_2	CALL_110
0x4002aca	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_95	CALL_2
0x4002acc	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_95	CALL_2
0x4002ad1	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_95	CALL_2
0x4002ad6	      0xe800000000	                          call 0x4002adb	        54	gettext.h	FUNCTION_95	CALL_2
0x4002adb	          0x4889c7	                            mov rdi, rax	      1128	update-index.c	FUNCTION_37	IF_15	IF_16	CALL_89
0x4002ade	            0x31c0	                            xor eax, eax	      1128	update-index.c	FUNCTION_37	IF_15	IF_16	CALL_89
0x4002ae0	      0xe800000000	                          call 0x4002ae5	      1128	update-index.c	FUNCTION_37	IF_15	IF_16	CALL_89
0x4002ae5	      0xe94df9ffff	                           jmp 0x4002437	      1128	update-index.c	FUNCTION_37	IF_15	IF_16	CALL_89
0x4002aea	    0x803d00000000	                cmp byte [0x04002af1], 0	       168	strbuf.h	FUNCTION_72	CALL_2
0x4002af1	     0xf84e1feffff	                            je 0x40029d8	       168	strbuf.h	FUNCTION_72	CALL_2
0x4002af7	      0xe800000000	                          call 0x4002afc	       168	strbuf.h	FUNCTION_72	CALL_2
0x4002afc	         0xf1f4000	                         nop dword [rax]	       168	strbuf.h	FUNCTION_72	CALL_2
0x4002b00	      0xe800000000	                          call 0x4002b05	      1190	update-index.c	FUNCTION_37	IF_26	IF_27	CALL_125
0x4002b05	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1190	update-index.c	FUNCTION_37	IF_26	IF_27	CALL_125
0x4002b09	          0x4889c7	                            mov rdi, rax	      1190	update-index.c	FUNCTION_37	IF_26	IF_27	CALL_125
0x4002b0c	      0xe800000000	                          call 0x4002b11	      1190	update-index.c	FUNCTION_37	IF_26	IF_27	CALL_125
0x4002b11	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_95	CALL_2
0x4002b13	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_95	CALL_2
0x4002b18	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_95	CALL_2
0x4002b1d	      0xe800000000	                          call 0x4002b22	        54	gettext.h	FUNCTION_95	CALL_2
0x4002b22	          0x4889c7	                            mov rdi, rax	      1172	update-index.c	FUNCTION_37	IF_22	IF_23	CALL_113
0x4002b25	            0x31c0	                            xor eax, eax	      1172	update-index.c	FUNCTION_37	IF_22	IF_23	CALL_113
0x4002b27	      0xe800000000	                          call 0x4002b2c	      1172	update-index.c	FUNCTION_37	IF_22	IF_23	CALL_113
0x4002b2c	      0xe99ef9ffff	                           jmp 0x40024cf	      1172	update-index.c	FUNCTION_37	IF_22	IF_23	CALL_113
0x4002b31	            0x89df	                            mov edi, ebx	       150	update-index.c	FUNCTION_10	IF_2	CALL_16
0x4002b33	      0xe800000000	                          call 0x4002b38	       150	update-index.c	FUNCTION_10	IF_2	CALL_16
0x4002b38	    0x488b35000000	            mov rsi, qword [0x04002b3f] 	       151	update-index.c	FUNCTION_10	IF_2	CALL_17
0x4002b3f	      0xbf0a000000	                            mov edi, 0xa	       151	update-index.c	FUNCTION_10	IF_2	CALL_17
0x4002b44	      0xe800000000	                          call 0x4002b49	       151	update-index.c	FUNCTION_10	IF_2	CALL_17
0x4002b49	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_95	CALL_2
0x4002b4e	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_95	CALL_2
0x4002b53	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_95	CALL_2
0x4002b55	      0xbb01000000	                              mov ebx, 1	       165	update-index.c	FUNCTION_10	IF_3	CALL_29
0x4002b5a	      0xe800000000	                          call 0x4002b5f	        54	gettext.h	FUNCTION_95	CALL_2
0x4002b5f	    0x488b3d000000	            mov rdi, qword [0x04002b66] 	       165	update-index.c	FUNCTION_10	IF_3	CALL_29
0x4002b66	          0x4889c6	                            mov rsi, rax	       165	update-index.c	FUNCTION_10	IF_3	CALL_29
0x4002b69	            0x31c0	                            xor eax, eax	       165	update-index.c	FUNCTION_10	IF_3	CALL_29
0x4002b6b	      0xe800000000	                          call 0x4002b70	       165	update-index.c	FUNCTION_10	IF_3	CALL_29
0x4002b70	      0xe90afdffff	                           jmp 0x400287f	       165	update-index.c	FUNCTION_10	IF_3	CALL_29
0x4002b75	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_95	CALL_2
0x4002b77	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_95	CALL_2
0x4002b7c	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_95	CALL_2
0x4002b81	      0xe800000000	                          call 0x4002b86	        54	gettext.h	FUNCTION_95	CALL_2
0x4002b86	          0x4889c7	                            mov rdi, rax	      1160	update-index.c	FUNCTION_37	SWITCH_2	IF_21	CALL_105
0x4002b89	            0x31c0	                            xor eax, eax	      1160	update-index.c	FUNCTION_37	SWITCH_2	IF_21	CALL_105
0x4002b8b	      0xe800000000	                          call 0x4002b90	      1160	update-index.c	FUNCTION_37	SWITCH_2	IF_21	CALL_105
0x4002b90	      0xe906fdffff	                           jmp 0x400289b	      1160	update-index.c	FUNCTION_37	SWITCH_2	IF_21	CALL_105
0x4002b95	            0x89df	                            mov edi, ebx	       163	update-index.c	FUNCTION_10	IF_3	CALL_26
0x4002b97	      0xe800000000	                          call 0x4002b9c	       163	update-index.c	FUNCTION_10	IF_3	CALL_26
0x4002b9c	    0x488b35000000	            mov rsi, qword [0x04002ba3] 	       164	update-index.c	FUNCTION_10	IF_3	CALL_27
0x4002ba3	      0xbf0a000000	                            mov edi, 0xa	       164	update-index.c	FUNCTION_10	IF_3	CALL_27
0x4002ba8	      0xe800000000	                          call 0x4002bad	       164	update-index.c	FUNCTION_10	IF_3	CALL_27
0x4002bad	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_95	CALL_2
0x4002bb2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_95	CALL_2
0x4002bb7	            0xeb9a	                           jmp 0x4002b53	        54	gettext.h	FUNCTION_95	CALL_2
0x4002bb9	      0xbf00000000	                              mov edi, 0	      1134	update-index.c	FUNCTION_37	IF_15	CALL_90
0x4002bbe	      0xe800000000	                          call 0x4002bc3	      1134	update-index.c	FUNCTION_37	IF_15	CALL_90
0x4002bc3	      0xe984f8ffff	                           jmp 0x400244c	      1134	update-index.c	FUNCTION_37	IF_15	CALL_90
0x4002bc8	      0xbf0a000000	                            mov edi, 0xa	       177	update-index.c	FUNCTION_10	IF_4	CALL_37
0x4002bcd	      0xe800000000	                          call 0x4002bd2	       177	update-index.c	FUNCTION_10	IF_4	CALL_37
0x4002bd2	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_95	CALL_2
0x4002bd7	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_95	CALL_2
0x4002bdc	      0xe972ffffff	                           jmp 0x4002b53	        54	gettext.h	FUNCTION_95	CALL_2
0x4002be1	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_95	CALL_2
0x4002be3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_95	CALL_2
0x4002be8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_95	CALL_2
0x4002bed	      0xe800000000	                          call 0x4002bf2	        54	gettext.h	FUNCTION_95	CALL_2
0x4002bf2	          0x4889c7	                            mov rdi, rax	      1148	update-index.c	FUNCTION_37	SWITCH_2	IF_20	CALL_97
0x4002bf5	            0x31c0	                            xor eax, eax	      1148	update-index.c	FUNCTION_37	SWITCH_2	IF_20	CALL_97
0x4002bf7	      0xe800000000	                          call 0x4002bfc	      1148	update-index.c	FUNCTION_37	SWITCH_2	IF_20	CALL_97
0x4002bfc	      0xe991f8ffff	                           jmp 0x4002492	      1148	update-index.c	FUNCTION_37	SWITCH_2	IF_20	CALL_97
0x4002c01	      0xbf0a000000	                            mov edi, 0xa	       188	update-index.c	FUNCTION_10	IF_5	CALL_46
0x4002c06	      0xe800000000	                          call 0x4002c0b	       188	update-index.c	FUNCTION_10	IF_5	CALL_46
0x4002c0b	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_95	CALL_2
0x4002c10	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_95	CALL_2
0x4002c15	      0xe939ffffff	                           jmp 0x4002b53	        54	gettext.h	FUNCTION_95	CALL_2
0x4002c1a	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_95	CALL_2
0x4002c1f	      0xe80cdfffff	                       call sym._.part.3	        54	gettext.h	FUNCTION_95	CALL_2
0x4002c24	          0x4889c7	                            mov rdi, rax	      1137	update-index.c	FUNCTION_37	ELSE_3	IF_18	IF_19	CALL_93
0x4002c27	            0x31c0	                            xor eax, eax	      1137	update-index.c	FUNCTION_37	ELSE_3	IF_18	IF_19	CALL_93
0x4002c29	      0xe800000000	                          call 0x4002c2e	      1137	update-index.c	FUNCTION_37	ELSE_3	IF_18	IF_19	CALL_93
0x4002c2e	      0xe945f8ffff	                           jmp 0x4002478	      1137	update-index.c	FUNCTION_37	ELSE_3	IF_18	IF_19	CALL_93
0x4002c33	      0xbf00000000	                              mov edi, 0	      1137	update-index.c	FUNCTION_37	ELSE_3	IF_18	IF_19	CALL_93
0x4002c38	      0xe8f3deffff	                       call sym._.part.3	      1137	update-index.c	FUNCTION_37	ELSE_3	IF_18	IF_19	CALL_93
0x4002c3d	          0x4889c7	                            mov rdi, rax	      1179	update-index.c	FUNCTION_37	ELSE_4	IF_24	IF_25	CALL_119
0x4002c40	            0x31c0	                            xor eax, eax	      1179	update-index.c	FUNCTION_37	ELSE_4	IF_24	IF_25	CALL_119
0x4002c42	      0xe800000000	                          call 0x4002c47	      1179	update-index.c	FUNCTION_37	ELSE_4	IF_24	IF_25	CALL_119
0x4002c47	      0xe948feffff	                           jmp 0x4002a94	      1179	update-index.c	FUNCTION_37	ELSE_4	IF_24	IF_25	CALL_119
0x4002c4c	    0x488b35000000	            mov rsi, qword [0x04002c53] 	       199	update-index.c	FUNCTION_10	IF_6	CALL_54
0x4002c53	      0xbf0a000000	                            mov edi, 0xa	       199	update-index.c	FUNCTION_10	IF_6	CALL_54
0x4002c58	      0xe800000000	                          call 0x4002c5d	       199	update-index.c	FUNCTION_10	IF_6	CALL_54
0x4002c5d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_95	CALL_2
0x4002c62	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_95	CALL_2
0x4002c67	      0xe9e7feffff	                           jmp 0x4002b53	        54	gettext.h	FUNCTION_95	CALL_2
0x4002c6c	    0x488b35000000	            mov rsi, qword [0x04002c73] 	       212	update-index.c	FUNCTION_10	IF_7	CALL_64
0x4002c73	      0xbf0a000000	                            mov edi, 0xa	       212	update-index.c	FUNCTION_10	IF_7	CALL_64
0x4002c78	      0xe800000000	                          call 0x4002c7d	       212	update-index.c	FUNCTION_10	IF_7	CALL_64
0x4002c7d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_95	CALL_2
0x4002c82	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_95	CALL_2
0x4002c87	      0xe9c7feffff	                           jmp 0x4002b53	        54	gettext.h	FUNCTION_95	CALL_2
0x4002c8c	      0xbf00000000	                              mov edi, 0	      1046	update-index.c	FUNCTION_37	CALL_61
0x4002c91	            0x31c0	                            xor eax, eax	      1046	update-index.c	FUNCTION_37	CALL_61
0x4002c93	      0xe800000000	                          call 0x4002c98	      1046	update-index.c	FUNCTION_37	CALL_61
0x4002c98	      0xe800000000	                          call 0x4002c9d	      1199	update-index.c	FUNCTION_37
0x4002c9d	    0x488b1d000000	            mov rbx, qword [0x04002ca4] 	       219	update-index.c	FUNCTION_10	CALL_69
0x4002ca4	      0xbf00000000	                              mov edi, 0	       219	update-index.c	FUNCTION_10	CALL_69
0x4002ca9	      0xe882deffff	                       call sym._.part.3	       219	update-index.c	FUNCTION_10	CALL_69
0x4002cae	          0x4889de	                            mov rsi, rbx	       219	update-index.c	FUNCTION_10	CALL_69
0x4002cb1	          0x4889c7	                            mov rdi, rax	       219	update-index.c	FUNCTION_10	CALL_69
0x4002cb4	            0x31c0	                            xor eax, eax	       219	update-index.c	FUNCTION_10	CALL_69
0x4002cb6	      0xe800000000	                          call 0x4002cbb	       219	update-index.c	FUNCTION_10	CALL_69
0x4002cbb	      0xb904000000	                              mov ecx, 4	      1094	update-index.c	FUNCTION_37	IF_8	IF_9	CALL_74
0x4002cc0	      0xba02000000	                              mov edx, 2	      1094	update-index.c	FUNCTION_37	IF_8	IF_9	CALL_74
0x4002cc5	      0xbf00000000	                              mov edi, 0	      1094	update-index.c	FUNCTION_37	IF_8	IF_9	CALL_74
0x4002cca	            0x31c0	                            xor eax, eax	      1094	update-index.c	FUNCTION_37	IF_8	IF_9	CALL_74
0x4002ccc	      0xe800000000	                          call 0x4002cd1	      1094	update-index.c	FUNCTION_37	IF_8	IF_9	CALL_74
0x4002cd1	      0xbf00000000	                              mov edi, 0	       135	update-index.c	FUNCTION_10	CALL_3
0x4002cd6	      0xe800000000	                          call 0x4002cdb	       135	update-index.c	FUNCTION_10	CALL_3
0x4002cdb	      0xbf00000000	                              mov edi, 0	       135	update-index.c	FUNCTION_10	CALL_3
0x4002ce0	      0xe84bdeffff	                       call sym._.part.3	       135	update-index.c	FUNCTION_10	CALL_3
0x4002ce5	          0x4889ee	                            mov rsi, rbp	        82	update-index.c	FUNCTION_4	CALL_4
0x4002ce8	          0x4889c7	                            mov rdi, rax	        82	update-index.c	FUNCTION_4	CALL_4
0x4002ceb	            0x31c0	                            xor eax, eax	        82	update-index.c	FUNCTION_4	CALL_4
0x4002ced	      0xe800000000	                          call 0x4002cf2	        82	update-index.c	FUNCTION_4	CALL_4
0x4002cf2	      0xbf00000000	                              mov edi, 0	      1113	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12	CALL_79
0x4002cf7	            0x31c0	                            xor eax, eax	      1113	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12	CALL_79
0x4002cf9	      0xe800000000	                  call section_end..text	      1113	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12	CALL_79
xunlink	DO,0:ELSE,0:CALL,4:WHILE,0:functions,0:SWITCH,0:FOR,0:IF,1	15
0x4001820	              0x53	                                push rbx	       103	update-index.c	FUNCTION_7
0x4001821	      0xe85affffff	                 call sym.get_mtime_path	       104	update-index.c	FUNCTION_7	CALL_1
0x4001826	          0x4889c7	                            mov rdi, rax	       105	update-index.c	FUNCTION_7	IF_1	CALL_2
0x4001829	          0x4889c3	                            mov rbx, rax	       104	update-index.c	FUNCTION_7	CALL_1
0x400182c	      0xe800000000	                          call 0x4001831	       105	update-index.c	FUNCTION_7	IF_1	CALL_2
0x4001831	            0x85c0	                           test eax, eax	       105	update-index.c	FUNCTION_7	IF_1	CALL_2
0x4001833	            0x7502	                           jne 0x4001837	       105	update-index.c	FUNCTION_7	IF_1	CALL_2
0x4001835	              0x5b	                                 pop rbx	       107	update-index.c	FUNCTION_7
0x4001836	              0xc3	                                     ret	       107	update-index.c	FUNCTION_7
0x4001837	      0xbf00000000	                              mov edi, 0	       107	update-index.c	FUNCTION_7
0x400183c	      0xe8eff2ffff	                       call sym._.part.3	       107	update-index.c	FUNCTION_7
0x4001841	          0x4889de	                            mov rsi, rbx	       106	update-index.c	FUNCTION_7	CALL_4
0x4001844	          0x4889c7	                            mov rdi, rax	       106	update-index.c	FUNCTION_7	CALL_4
0x4001847	            0x31c0	                            xor eax, eax	       106	update-index.c	FUNCTION_7	CALL_4
0x4001849	      0xe800000000	                          call 0x400184e	       106	update-index.c	FUNCTION_7	CALL_4
mark_ce_flags	DO,0:ELSE,1:CALL,4:WHILE,0:functions,0:SWITCH,0:FOR,0:IF,2	63
0x4000db0	            0x4156	                                push r14	       229	update-index.c	FUNCTION_11
0x4000db2	            0x4155	                                push r13	       229	update-index.c	FUNCTION_11
0x4000db4	          0x4189d5	                           mov r13d, edx	       229	update-index.c	FUNCTION_11
0x4000db7	            0x4154	                                push r12	       229	update-index.c	FUNCTION_11
0x4000db9	              0x55	                                push rbp	       229	update-index.c	FUNCTION_11
0x4000dba	          0x4989fc	                            mov r12, rdi	       229	update-index.c	FUNCTION_11
0x4000dbd	              0x53	                                push rbx	       229	update-index.c	FUNCTION_11
0x4000dbe	            0x89f5	                            mov ebp, esi	       229	update-index.c	FUNCTION_11
0x4000dc0	      0xe800000000	                          call 0x4000dc5	       230	update-index.c	FUNCTION_11	CALL_1
0x4000dc5	          0x4c89e6	                            mov rsi, r12	       231	update-index.c	FUNCTION_11	CALL_2
0x4000dc8	            0x89c2	                            mov edx, eax	       231	update-index.c	FUNCTION_11	CALL_2
0x4000dca	      0xbf00000000	                              mov edi, 0	       231	update-index.c	FUNCTION_11	CALL_2
0x4000dcf	      0xe800000000	                          call 0x4000dd4	       231	update-index.c	FUNCTION_11	CALL_2
0x4000dd4	            0x85c0	                           test eax, eax	       232	update-index.c	FUNCTION_11	IF_1
0x4000dd6	     0xf88c4000000	                            js 0x4000ea0	       232	update-index.c	FUNCTION_11	IF_1
0x4000ddc	    0x48833d000000	               cmp qword [0x04000de4], 0	        66	fsmonitor.h	FUNCTION_39	IF_1
0x4000de4	          0x4c63f0	                         movsxd r14, eax	       233	update-index.c	FUNCTION_11	IF_1	CALL_3
0x4000de7	    0x488b05000000	            mov rax, qword [0x04000dee] 	       233	update-index.c	FUNCTION_11	IF_1	CALL_3
0x4000dee	        0x4e8b04f0	             mov r8, qword [rax + r14*8]	       233	update-index.c	FUNCTION_11	IF_1	CALL_3
0x4000df2	            0x7467	                            je 0x4000e5b	        66	fsmonitor.h	FUNCTION_39	IF_1
0x4000df4	    0x41816038ffff	       and dword [r8 + 0x38], 0xffdfffff	        67	fsmonitor.h	FUNCTION_39	IF_1
0x4000dfc	        0x498d5858	                    lea rbx, [r8 + 0x58]	        68	fsmonitor.h	FUNCTION_39	IF_1	CALL_1
0x4000e00	      0xba01000000	                              mov edx, 1	        68	fsmonitor.h	FUNCTION_39	IF_1	CALL_1
0x4000e05	      0xbf00000000	                              mov edi, 0	        68	fsmonitor.h	FUNCTION_39	IF_1	CALL_1
0x4000e0a	          0x4889de	                            mov rsi, rbx	        68	fsmonitor.h	FUNCTION_39	IF_1	CALL_1
0x4000e0d	      0xe800000000	                          call 0x4000e12	        68	fsmonitor.h	FUNCTION_39	IF_1	CALL_1
0x4000e12	    0x48baffffffff	                 movabs rdx, 0x1ffffffff	        69	fsmonitor.h	FUNCTION_39	IF_1	CALL_2
0x4000e1c	    0x482315000000	             and rdx, qword [0x04000e23]	        69	fsmonitor.h	FUNCTION_39	IF_1	CALL_2
0x4000e23	    0x48b800000000	                 movabs rax, 0x100000000	        69	fsmonitor.h	FUNCTION_39	IF_1	CALL_2
0x4000e2d	          0x4839c2	                            cmp rdx, rax	        69	fsmonitor.h	FUNCTION_39	IF_1	CALL_2
0x4000e30	            0x741e	                            je 0x4000e50	        69	fsmonitor.h	FUNCTION_39	IF_1	CALL_2
0x4000e32	          0x4989d8	                             mov r8, rbx	        69	fsmonitor.h	FUNCTION_39	IF_1	CALL_2
0x4000e35	      0xb900000000	                              mov ecx, 0	        69	fsmonitor.h	FUNCTION_39	IF_1	CALL_2
0x4000e3a	      0xba00000000	                              mov edx, 0	        69	fsmonitor.h	FUNCTION_39	IF_1	CALL_2
0x4000e3f	      0xbe45000000	                           mov esi, 0x45	        69	fsmonitor.h	FUNCTION_39	IF_1	CALL_2
0x4000e44	      0xbf00000000	                              mov edi, 0	        69	fsmonitor.h	FUNCTION_39	IF_1	CALL_2
0x4000e49	            0x31c0	                            xor eax, eax	        69	fsmonitor.h	FUNCTION_39	IF_1	CALL_2
0x4000e4b	      0xe800000000	                          call 0x4000e50	        69	fsmonitor.h	FUNCTION_39	IF_1	CALL_2
0x4000e50	    0x488b05000000	            mov rax, qword [0x04000e57] 	        69	fsmonitor.h	FUNCTION_39	IF_1	CALL_2
0x4000e57	        0x4e8b04f0	             mov r8, qword [rax + r14*8]	        69	fsmonitor.h	FUNCTION_39	IF_1	CALL_2
0x4000e5b	          0x4585ed	                         test r13d, r13d	       234	update-index.c	FUNCTION_11	IF_1	IF_2
0x4000e5e	            0x7530	                           jne 0x4000e90	       234	update-index.c	FUNCTION_11	IF_1	IF_2
0x4000e60	            0xf7d5	                                 not ebp	       237	update-index.c	FUNCTION_11	IF_1	ELSE_1
0x4000e62	        0x41236838	              and ebp, dword [r8 + 0x38]	       237	update-index.c	FUNCTION_11	IF_1	ELSE_1
0x4000e66	    0x81cd00000008	                    or ebp, section_end.	       238	update-index.c	FUNCTION_11	IF_1
0x4000e6c	          0x4c89e6	                            mov rsi, r12	       239	update-index.c	FUNCTION_11	IF_1	CALL_4
0x4000e6f	      0xbf00000000	                              mov edi, 0	       239	update-index.c	FUNCTION_11	IF_1	CALL_4
0x4000e74	        0x41896838	              mov dword [r8 + 0x38], ebp	       238	update-index.c	FUNCTION_11	IF_1
0x4000e78	      0xe800000000	                          call 0x4000e7d	       239	update-index.c	FUNCTION_11	IF_1	CALL_4
0x4000e7d	    0x830d00000000	                or dword [0x04000e84], 2	       240	update-index.c	FUNCTION_11	IF_1
0x4000e84	            0x31c0	                            xor eax, eax	       241	update-index.c	FUNCTION_11	IF_1
0x4000e86	              0x5b	                                 pop rbx	       244	update-index.c	FUNCTION_11
0x4000e87	              0x5d	                                 pop rbp	       244	update-index.c	FUNCTION_11
0x4000e88	            0x415c	                                 pop r12	       244	update-index.c	FUNCTION_11
0x4000e8a	            0x415d	                                 pop r13	       244	update-index.c	FUNCTION_11
0x4000e8c	            0x415e	                                 pop r14	       244	update-index.c	FUNCTION_11
0x4000e8e	              0xc3	                                     ret	       244	update-index.c	FUNCTION_11
0x4000e8f	              0x90	                                     nop	       244	update-index.c	FUNCTION_11
0x4000e90	        0x410b6838	               or ebp, dword [r8 + 0x38]	       235	update-index.c	FUNCTION_11	IF_1	IF_2
0x4000e94	            0xebd0	                           jmp 0x4000e66	       235	update-index.c	FUNCTION_11	IF_1	IF_2
0x4000e96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       235	update-index.c	FUNCTION_11	IF_1	IF_2
0x4000ea0	      0xb8ffffffff	                     mov eax, 0xffffffff	       243	update-index.c	FUNCTION_11
0x4000ea5	            0xebdf	                           jmp 0x4000e86	       243	update-index.c	FUNCTION_11
get_mtime_path	DO,0:ELSE,0:CALL,2:WHILE,0:functions,0:SWITCH,0:FOR,0:IF,0	19
0x4001780	        0x4883ec08	                              sub rsp, 8	        71	update-index.c	FUNCTION_3
0x4001784	    0x488b05000000	            mov rax, qword [0x0400178b] 	       165	strbuf.h	FUNCTION_72	IF_2
0x400178b	    0x48c705000000	               mov qword [0x04001796], 0	       164	strbuf.h	FUNCTION_72
0x4001796	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_72	IF_2
0x400179c	            0x7432	                            je 0x40017d0	       165	strbuf.h	FUNCTION_72	IF_2
0x400179e	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_72	IF_2
0x40017a1	    0x488b15000000	            mov rdx, qword [0x040017a8] 	        74	update-index.c	FUNCTION_3	CALL_2
0x40017a8	          0x4889f9	                            mov rcx, rdi	        74	update-index.c	FUNCTION_3	CALL_2
0x40017ab	            0x31c0	                            xor eax, eax	        74	update-index.c	FUNCTION_3	CALL_2
0x40017ad	      0xbe00000000	                              mov esi, 0	        74	update-index.c	FUNCTION_3	CALL_2
0x40017b2	      0xbf00000000	                              mov edi, 0	        74	update-index.c	FUNCTION_3	CALL_2
0x40017b7	      0xe800000000	                          call 0x40017bc	        74	update-index.c	FUNCTION_3	CALL_2
0x40017bc	    0x488b05000000	            mov rax, qword [0x040017c3] 	        76	update-index.c	FUNCTION_3
0x40017c3	        0x4883c408	                              add rsp, 8	        76	update-index.c	FUNCTION_3
0x40017c7	              0xc3	                                     ret	        76	update-index.c	FUNCTION_3
0x40017c8	     0xf1f84000000	                   nop dword [rax + rax]	        76	update-index.c	FUNCTION_3
0x40017d0	    0x803d00000000	                cmp byte [0x040017d7], 0	       168	strbuf.h	FUNCTION_72	CALL_2
0x40017d7	            0x74c8	                            je 0x40017a1	       168	strbuf.h	FUNCTION_72	CALL_2
0x40017d9	      0xe800000000	                          call 0x40017de	       168	strbuf.h	FUNCTION_72	CALL_2
unresolve_callback	DO,0:ELSE,0:CALL,2:WHILE,0:functions,0:SWITCH,0:FOR,0:IF,1	205
0x4000260	            0x4157	                                push r15	       884	update-index.c	FUNCTION_35
0x4000262	            0x4156	                                push r14	       884	update-index.c	FUNCTION_35
0x4000264	            0x4155	                                push r13	       884	update-index.c	FUNCTION_35
0x4000266	            0x4154	                                push r12	       884	update-index.c	FUNCTION_35
0x4000268	              0x55	                                push rbp	       884	update-index.c	FUNCTION_35
0x4000269	              0x53	                                push rbx	       884	update-index.c	FUNCTION_35
0x400026a	        0x4883ec28	                           sub rsp, 0x28	       884	update-index.c	FUNCTION_35
0x400026e	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       885	update-index.c	FUNCTION_35
0x4000272	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       884	update-index.c	FUNCTION_35
0x4000277	      0x4889442418	             mov qword [rsp + 0x18], rax	       885	update-index.c	FUNCTION_35
0x400027c	    0x488b05000000	            mov rax, qword [0x04000283] 	       886	update-index.c	FUNCTION_35
0x4000283	        0x4c8b7808	                mov r15, qword [rax + 8]	       886	update-index.c	FUNCTION_35
0x4000287	          0x4d85ff	                           test r15, r15	       889	update-index.c	FUNCTION_35	CALL_1
0x400028a	     0xf84e0020000	                            je 0x4000570	       889	update-index.c	FUNCTION_35	CALL_1
0x4000290	          0x4c89ff	                            mov rdi, r15	       890	update-index.c	FUNCTION_35	CALL_2
0x4000293	      0xe800000000	                          call 0x4000298	       890	update-index.c	FUNCTION_35	CALL_2
0x4000298	        0x89442404	                mov dword [rsp + 4], eax	       889	update-index.c	FUNCTION_35	CALL_1
0x400029c	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       889	update-index.c	FUNCTION_35	CALL_1
0x40002a1	      0xbe00000000	                              mov esi, 0	       690	update-index.c	FUNCTION_23	IF_1	CALL_1
0x40002a6	      0xbf00000000	                              mov edi, 0	       690	update-index.c	FUNCTION_23	IF_1	CALL_1
0x40002ab	          0x488b28	                    mov rbp, qword [rax]	       889	update-index.c	FUNCTION_35	CALL_1
0x40002ae	          0x8b5810	            mov ebx, dword [rax + 0x10] 	       889	update-index.c	FUNCTION_35	CALL_1
0x40002b1	      0xe800000000	                          call 0x40002b6	       690	update-index.c	FUNCTION_23	IF_1	CALL_1
0x40002b6	            0x85c0	                           test eax, eax	       690	update-index.c	FUNCTION_23	IF_1	CALL_1
0x40002b8	     0xf85f1020000	                           jne 0x40005af	       690	update-index.c	FUNCTION_23	IF_1	CALL_1
0x40002be	      0xbe00000000	                              mov esi, 0	       692	update-index.c	FUNCTION_23	IF_2	CALL_3
0x40002c3	      0xbf00000000	                              mov edi, 0	       692	update-index.c	FUNCTION_23	IF_2	CALL_3
0x40002c8	      0xe800000000	                          call 0x40002cd	       692	update-index.c	FUNCTION_23	IF_2	CALL_3
0x40002cd	            0x85c0	                           test eax, eax	       692	update-index.c	FUNCTION_23	IF_2	CALL_3
0x40002cf	     0xf85b8020000	                           jne 0x400058d	       692	update-index.c	FUNCTION_23	IF_2	CALL_3
0x40002d5	          0x83fb01	                              cmp ebx, 1	       709	update-index.c	FUNCTION_24	FOR_1
0x40002d8	     0xf8e9f020000	                           jle 0x400057d	       709	update-index.c	FUNCTION_24	FOR_1
0x40002de	          0x8d43fe	                      lea eax, [rbx - 2]	       709	update-index.c	FUNCTION_24	FOR_1
0x40002e1	        0x4c8d6508	                      lea r12, [rbp + 8]	       709	update-index.c	FUNCTION_24	FOR_1
0x40002e5	          0x4531f6	                          xor r14d, r14d	       709	update-index.c	FUNCTION_24	FOR_1
0x40002e8	      0x488d44c510	          lea rax, [rbp + rax*8 + 0x10] 	       709	update-index.c	FUNCTION_24	FOR_1
0x40002ed	      0x4889442408	                mov qword [rsp + 8], rax	       709	update-index.c	FUNCTION_24	FOR_1
0x40002f2	      0xe913010000	                           jmp 0x400040a	       709	update-index.c	FUNCTION_24	FOR_1
0x40002f7	    0x660f1f840000	                    nop word [rax + rax]	       709	update-index.c	FUNCTION_24	FOR_1
0x4000300	            0x89c6	                            mov esi, eax	       627	update-index.c	FUNCTION_22	IF_1	CALL_3
0x4000302	      0xbf00000000	                              mov edi, 0	       627	update-index.c	FUNCTION_22	IF_1	CALL_3
0x4000307	      0xe800000000	                          call 0x400030c	       627	update-index.c	FUNCTION_22	IF_1	CALL_3
0x400030c	    0x390500000000	            cmp dword [0x04000312], eax 	       628	update-index.c	FUNCTION_22	IF_1	IF_2
0x4000312	            0x7624	                           jbe 0x4000338	       628	update-index.c	FUNCTION_22	IF_1	IF_2
0x4000314	    0x488b15000000	            mov rdx, qword [0x0400031b] 	       629	update-index.c	FUNCTION_22	IF_1	IF_2
0x400031b	            0x4898	                                    cdqe	       629	update-index.c	FUNCTION_22	IF_1	IF_2
0x400031d	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	       629	update-index.c	FUNCTION_22	IF_1	IF_2
0x4000321	    0xf74738003000	        test dword [rdi + 0x38], 0x3000 	       630	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3	CALL_4
0x4000328	            0x740e	                            je 0x4000338	       630	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3	CALL_4
0x400032a	          0x396f3c	            cmp dword [rdi + 0x3c], ebp 	       630	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3	CALL_4
0x400032d	     0xf841d020000	                            je 0x4000550	       630	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3	CALL_4
0x4000333	       0xf1f440000	                   nop dword [rax + rax]	       630	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3	CALL_4
0x4000338	            0x89e9	                            mov ecx, ebp	       658	update-index.c	FUNCTION_22	CALL_10
0x400033a	    0x41b802000000	                              mov r8d, 2	       658	update-index.c	FUNCTION_22	CALL_10
0x4000340	          0x4889da	                            mov rdx, rbx	       658	update-index.c	FUNCTION_22	CALL_10
0x4000343	      0xbe00000000	                              mov esi, 0	       658	update-index.c	FUNCTION_22	CALL_10
0x4000348	      0xbf00000000	                              mov edi, 0	       658	update-index.c	FUNCTION_22	CALL_10
0x400034d	      0xe85efdffff	                   call sym.read_one_ent	       658	update-index.c	FUNCTION_22	CALL_10
0x4000352	            0x89e9	                            mov ecx, ebp	       659	update-index.c	FUNCTION_22	CALL_11
0x4000354	          0x4989c5	                            mov r13, rax	       658	update-index.c	FUNCTION_22	CALL_10
0x4000357	    0x41b803000000	                              mov r8d, 3	       659	update-index.c	FUNCTION_22	CALL_11
0x400035d	          0x4889da	                            mov rdx, rbx	       659	update-index.c	FUNCTION_22	CALL_11
0x4000360	      0xbe00000000	                              mov esi, 0	       659	update-index.c	FUNCTION_22	CALL_11
0x4000365	      0xbf00000000	                              mov edi, 0	       659	update-index.c	FUNCTION_22	CALL_11
0x400036a	      0xe841fdffff	                   call sym.read_one_ent	       659	update-index.c	FUNCTION_22	CALL_11
0x400036f	          0x4d85ed	                           test r13, r13	       661	update-index.c	FUNCTION_22	IF_6
0x4000372	          0x4889c5	                            mov rbp, rax	       659	update-index.c	FUNCTION_22	CALL_11
0x4000375	     0xf8425010000	                            je 0x40004a0	       661	update-index.c	FUNCTION_22	IF_6
0x400037b	          0x4885c0	                           test rax, rax	       661	update-index.c	FUNCTION_22	IF_6
0x400037e	     0xf841c010000	                            je 0x40004a0	       661	update-index.c	FUNCTION_22	IF_6
0x4000384	        0x488d7044	                   lea rsi, [rax + 0x44]	       975	cache.h	FUNCTION_50	CALL_1
0x4000388	        0x498d7d44	                   lea rdi, [r13 + 0x44]	       975	cache.h	FUNCTION_50	CALL_1
0x400038c	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_50	CALL_1
0x4000391	      0xe800000000	                          call 0x4000396	       975	cache.h	FUNCTION_50	CALL_1
0x4000396	            0x85c0	                           test eax, eax	       665	update-index.c	FUNCTION_22	IF_7	CALL_12
0x4000398	            0x750d	                           jne 0x40003a7	       665	update-index.c	FUNCTION_22	IF_7	CALL_12
0x400039a	          0x8b4534	            mov eax, dword [rbp + 0x34] 	       665	update-index.c	FUNCTION_22	IF_7	CALL_12
0x400039d	        0x41394534	            cmp dword [r13 + 0x34], eax 	       665	update-index.c	FUNCTION_22	IF_7	CALL_12
0x40003a1	     0xf8489010000	                            je 0x4000530	       665	update-index.c	FUNCTION_22	IF_7	CALL_12
0x40003a7	          0x4889de	                            mov rsi, rbx	       672	update-index.c	FUNCTION_22	CALL_14
0x40003aa	      0xbf00000000	                              mov edi, 0	       672	update-index.c	FUNCTION_22	CALL_14
0x40003af	      0xe800000000	                          call 0x40003b4	       672	update-index.c	FUNCTION_22	CALL_14
0x40003b4	      0xba01000000	                              mov edx, 1	       673	update-index.c	FUNCTION_22	IF_8	CALL_15
0x40003b9	          0x4c89ee	                            mov rsi, r13	       673	update-index.c	FUNCTION_22	IF_8	CALL_15
0x40003bc	      0xbf00000000	                              mov edi, 0	       673	update-index.c	FUNCTION_22	IF_8	CALL_15
0x40003c1	      0xe800000000	                          call 0x40003c6	       673	update-index.c	FUNCTION_22	IF_8	CALL_15
0x40003c6	            0x85c0	                           test eax, eax	       673	update-index.c	FUNCTION_22	IF_8	CALL_15
0x40003c8	     0xf84e2000000	                            je 0x40004b0	       673	update-index.c	FUNCTION_22	IF_8	CALL_15
0x40003ce	          0x4889de	                            mov rsi, rbx	       674	update-index.c	FUNCTION_22	IF_8	CALL_16
0x40003d1	      0xbf00000000	                              mov edi, 0	       674	update-index.c	FUNCTION_22	IF_8	CALL_16
0x40003d6	            0x31c0	                            xor eax, eax	       674	update-index.c	FUNCTION_22	IF_8	CALL_16
0x40003d8	    0x41beffffffff	                    mov r14d, 0xffffffff	       674	update-index.c	FUNCTION_22	IF_8	CALL_16
0x40003de	      0xe800000000	                          call 0x40003e3	       674	update-index.c	FUNCTION_22	IF_8	CALL_16
0x40003e3	          0x4c89ef	                            mov rdi, r13	       683	update-index.c	FUNCTION_22	CALL_19
0x40003e6	      0xe800000000	                          call 0x40003eb	       683	update-index.c	FUNCTION_22	CALL_19
0x40003eb	          0x4889ef	                            mov rdi, rbp	       684	update-index.c	FUNCTION_22	CALL_20
0x40003ee	      0xe800000000	                          call 0x40003f3	       684	update-index.c	FUNCTION_22	CALL_20
0x40003f3	          0x4889df	                            mov rdi, rbx	       713	update-index.c	FUNCTION_24	FOR_1	CALL_4
0x40003f6	        0x4983c408	                              add r12, 8	       713	update-index.c	FUNCTION_24	FOR_1	CALL_4
0x40003fa	      0xe800000000	                          call 0x40003ff	       713	update-index.c	FUNCTION_24	FOR_1	CALL_4
0x40003ff	      0x4c3b642408	                cmp r12, qword [rsp + 8]	       709	update-index.c	FUNCTION_24	FOR_1
0x4000404	     0xf84de000000	                            je 0x40004e8	       709	update-index.c	FUNCTION_24	FOR_1
0x400040a	        0x498b1424	                    mov rdx, qword [r12]	       711	update-index.c	FUNCTION_24	FOR_1	CALL_2
0x400040e	        0x8b742404	                mov esi, dword [rsp + 4]	       711	update-index.c	FUNCTION_24	FOR_1	CALL_2
0x4000412	          0x4c89ff	                            mov rdi, r15	       711	update-index.c	FUNCTION_24	FOR_1	CALL_2
0x4000415	      0xe800000000	                          call 0x400041a	       711	update-index.c	FUNCTION_24	FOR_1	CALL_2
0x400041a	          0x4889c3	                            mov rbx, rax	       711	update-index.c	FUNCTION_24	FOR_1	CALL_2
0x400041d	          0x4889c7	                            mov rdi, rax	       618	update-index.c	FUNCTION_22	CALL_1
0x4000420	      0xe800000000	                          call 0x4000425	       618	update-index.c	FUNCTION_22	CALL_1
0x4000425	          0x4889de	                            mov rsi, rbx	       624	update-index.c	FUNCTION_22	CALL_2
0x4000428	            0x89c2	                            mov edx, eax	       624	update-index.c	FUNCTION_22	CALL_2
0x400042a	      0xbf00000000	                              mov edi, 0	       624	update-index.c	FUNCTION_22	CALL_2
0x400042f	          0x4889c5	                            mov rbp, rax	       618	update-index.c	FUNCTION_22	CALL_1
0x4000432	      0xe800000000	                          call 0x4000437	       624	update-index.c	FUNCTION_22	CALL_2
0x4000437	            0x85c0	                           test eax, eax	       625	update-index.c	FUNCTION_22	IF_1
0x4000439	     0xf89c1feffff	                           jns 0x4000300	       625	update-index.c	FUNCTION_22	IF_1
0x400043f	            0xf7d0	                                 not eax	       641	update-index.c	FUNCTION_22	ELSE_1
0x4000441	    0x390500000000	            cmp dword [0x04000447], eax 	       642	update-index.c	FUNCTION_22	ELSE_1	IF_4
0x4000447	     0xf86ebfeffff	                           jbe 0x4000338	       642	update-index.c	FUNCTION_22	ELSE_1	IF_4
0x400044d	    0x488b15000000	            mov rdx, qword [0x04000454] 	       643	update-index.c	FUNCTION_22	ELSE_1	IF_4
0x4000454	            0x4898	                                    cdqe	       643	update-index.c	FUNCTION_22	ELSE_1	IF_4
0x4000456	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	       643	update-index.c	FUNCTION_22	ELSE_1	IF_4
0x400045a	          0x396f3c	            cmp dword [rdi + 0x3c], ebp 	       644	update-index.c	FUNCTION_22	ELSE_1	IF_4	IF_5	CALL_7
0x400045d	     0xf85d5feffff	                           jne 0x4000338	       644	update-index.c	FUNCTION_22	ELSE_1	IF_4	IF_5	CALL_7
0x4000463	        0x4883c758	                           add rdi, 0x58	       645	update-index.c	FUNCTION_22	ELSE_1	IF_4	IF_5	CALL_8
0x4000467	          0x4863d5	                         movsxd rdx, ebp	       645	update-index.c	FUNCTION_22	ELSE_1	IF_4	IF_5	CALL_8
0x400046a	          0x4889de	                            mov rsi, rbx	       645	update-index.c	FUNCTION_22	ELSE_1	IF_4	IF_5	CALL_8
0x400046d	      0xe800000000	                          call 0x4000472	       645	update-index.c	FUNCTION_22	ELSE_1	IF_4	IF_5	CALL_8
0x4000472	            0x85c0	                           test eax, eax	       644	update-index.c	FUNCTION_22	ELSE_1	IF_4	IF_5	CALL_7
0x4000474	     0xf85befeffff	                           jne 0x4000338	       644	update-index.c	FUNCTION_22	ELSE_1	IF_4	IF_5	CALL_7
0x400047a	    0x488b3d000000	            mov rdi, qword [0x04000481] 	        97	stdio2.h	FUNCTION_111	CALL_1
0x4000481	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	FUNCTION_111	CALL_1
0x4000484	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_111	CALL_1
0x4000489	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_111	CALL_1
0x400048e	            0x31ed	                            xor ebp, ebp	       621	update-index.c	FUNCTION_22
0x4000490	          0x4531ed	                          xor r13d, r13d	       621	update-index.c	FUNCTION_22
0x4000493	      0xe800000000	                          call 0x4000498	        97	stdio2.h	FUNCTION_111	CALL_1
0x4000498	      0xe946ffffff	                           jmp 0x40003e3	        97	stdio2.h	FUNCTION_111	CALL_1
0x400049d	           0xf1f00	                         nop dword [rax]	        97	stdio2.h	FUNCTION_111	CALL_1
0x40004a0	    0x41beffffffff	                    mov r14d, 0xffffffff	       661	update-index.c	FUNCTION_22	IF_6
0x40004a6	      0xe938ffffff	                           jmp 0x40003e3	       661	update-index.c	FUNCTION_22	IF_6
0x40004ab	       0xf1f440000	                   nop dword [rax + rax]	       661	update-index.c	FUNCTION_22	IF_6
0x40004b0	      0xba01000000	                              mov edx, 1	       678	update-index.c	FUNCTION_22	IF_9	CALL_17
0x40004b5	          0x4889ee	                            mov rsi, rbp	       678	update-index.c	FUNCTION_22	IF_9	CALL_17
0x40004b8	      0xbf00000000	                              mov edi, 0	       678	update-index.c	FUNCTION_22	IF_9	CALL_17
0x40004bd	      0xe800000000	                          call 0x40004c2	       678	update-index.c	FUNCTION_22	IF_9	CALL_17
0x40004c2	            0x85c0	                           test eax, eax	       678	update-index.c	FUNCTION_22	IF_9	CALL_17
0x40004c4	     0xf8429ffffff	                            je 0x40003f3	       678	update-index.c	FUNCTION_22	IF_9	CALL_17
0x40004ca	          0x4889de	                            mov rsi, rbx	       680	update-index.c	FUNCTION_22	CALL_18
0x40004cd	      0xbf00000000	                              mov edi, 0	       680	update-index.c	FUNCTION_22	CALL_18
0x40004d2	            0x31c0	                            xor eax, eax	       680	update-index.c	FUNCTION_22	CALL_18
0x40004d4	      0xe800000000	                          call 0x40004d9	       680	update-index.c	FUNCTION_22	CALL_18
0x40004d9	    0x41beffffffff	                    mov r14d, 0xffffffff	       680	update-index.c	FUNCTION_22	CALL_18
0x40004df	      0xe9fffeffff	                           jmp 0x40003e3	       680	update-index.c	FUNCTION_22	CALL_18
0x40004e4	         0xf1f4000	                         nop dword [rax]	       680	update-index.c	FUNCTION_22	CALL_18
0x40004e8	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       889	update-index.c	FUNCTION_35	CALL_1
0x40004ed	          0x4585f6	                         test r14d, r14d	       891	update-index.c	FUNCTION_35	IF_1
0x40004f0	          0x448930	                   mov dword [rax], r14d	       889	update-index.c	FUNCTION_35	CALL_1
0x40004f3	            0x740a	                            je 0x40004ff	       891	update-index.c	FUNCTION_35	IF_1
0x40004f5	    0xc70500000000	               mov dword [0x040004ff], 0	       892	update-index.c	FUNCTION_35	IF_1
0x40004ff	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       894	update-index.c	FUNCTION_35
0x4000504	        0x48634110	         movsxd rax, dword [rcx + 0x10] 	       894	update-index.c	FUNCTION_35
0x4000508	    0xc74110010000	               mov dword [rcx + 0x10], 1	       895	update-index.c	FUNCTION_35
0x400050f	    0x488d04c5f8ff	                    lea rax, [rax*8 - 8]	       894	update-index.c	FUNCTION_35
0x4000517	          0x480101	                    add qword [rcx], rax	       894	update-index.c	FUNCTION_35
0x400051a	        0x4883c428	                           add rsp, 0x28	       897	update-index.c	FUNCTION_35
0x400051e	              0x5b	                                 pop rbx	       897	update-index.c	FUNCTION_35
0x400051f	            0x31c0	                            xor eax, eax	       897	update-index.c	FUNCTION_35
0x4000521	              0x5d	                                 pop rbp	       897	update-index.c	FUNCTION_35
0x4000522	            0x415c	                                 pop r12	       897	update-index.c	FUNCTION_35
0x4000524	            0x415d	                                 pop r13	       897	update-index.c	FUNCTION_35
0x4000526	            0x415e	                                 pop r14	       897	update-index.c	FUNCTION_35
0x4000528	            0x415f	                                 pop r15	       897	update-index.c	FUNCTION_35
0x400052a	              0xc3	                                     ret	       897	update-index.c	FUNCTION_35
0x400052b	       0xf1f440000	                   nop dword [rax + rax]	       897	update-index.c	FUNCTION_35
0x4000530	    0x488b3d000000	            mov rdi, qword [0x04000537] 	        97	stdio2.h	FUNCTION_111	CALL_1
0x4000537	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	FUNCTION_111	CALL_1
0x400053a	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_111	CALL_1
0x400053f	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_111	CALL_1
0x4000544	            0x31c0	                            xor eax, eax	        97	stdio2.h	FUNCTION_111	CALL_1
0x4000546	      0xe800000000	                          call 0x400054b	        97	stdio2.h	FUNCTION_111	CALL_1
0x400054b	      0xe993feffff	                           jmp 0x40003e3	        97	stdio2.h	FUNCTION_111	CALL_1
0x4000550	        0x4883c758	                           add rdi, 0x58	       632	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3	CALL_6
0x4000554	          0x4863d5	                         movsxd rdx, ebp	       632	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3	CALL_6
0x4000557	          0x4889de	                            mov rsi, rbx	       632	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3	CALL_6
0x400055a	      0xe800000000	                          call 0x400055f	       632	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3	CALL_6
0x400055f	            0x85c0	                           test eax, eax	       631	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3	CALL_5
0x4000561	     0xf85d1fdffff	                           jne 0x4000338	       631	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3	CALL_5
0x4000567	      0xe987feffff	                           jmp 0x40003f3	       631	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3	CALL_5
0x400056c	         0xf1f4000	                         nop dword [rax]	       631	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3	CALL_5
0x4000570	    0xc74424040000	                  mov dword [rsp + 4], 0	       889	update-index.c	FUNCTION_35	CALL_1
0x4000578	      0xe91ffdffff	                           jmp 0x400029c	       889	update-index.c	FUNCTION_35	CALL_1
0x400057d	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       889	update-index.c	FUNCTION_35	CALL_1
0x4000582	    0xc70000000000	                      mov dword [rax], 0	       889	update-index.c	FUNCTION_35	CALL_1
0x4000588	      0xe972ffffff	                           jmp 0x40004ff	       889	update-index.c	FUNCTION_35	CALL_1
0x400058d	    0x488b0d000000	            mov rcx, qword [0x04000594] 	        97	stdio2.h	FUNCTION_111	CALL_1
0x4000594	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	FUNCTION_111	CALL_1
0x4000599	      0xba1e000000	                           mov edx, 0x1e	        97	stdio2.h	FUNCTION_111	CALL_1
0x400059e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_111	CALL_1
0x40005a3	      0xe800000000	                          call 0x40005a8	        97	stdio2.h	FUNCTION_111	CALL_1
0x40005a8	            0x31ff	                            xor edi, edi	       694	update-index.c	FUNCTION_23	IF_2	CALL_5
0x40005aa	      0xe800000000	                          call 0x40005af	       694	update-index.c	FUNCTION_23	IF_2	CALL_5
0x40005af	      0xbf00000000	                              mov edi, 0	       691	update-index.c	FUNCTION_23	CALL_2
0x40005b4	            0x31c0	                            xor eax, eax	       691	update-index.c	FUNCTION_23	CALL_2
0x40005b6	      0xe800000000	                          call 0x40005bb	       691	update-index.c	FUNCTION_23	CALL_2
create_file	DO,0:ELSE,0:CALL,4:WHILE,0:functions,0:SWITCH,0:FOR,0:IF,1	18
0x40017e0	              0x53	                                push rbx	        93	update-index.c	FUNCTION_6
0x40017e1	      0xe89affffff	                 call sym.get_mtime_path	        95	update-index.c	FUNCTION_6	CALL_1
0x40017e6	      0xbaa4010000	                          mov edx, 0x1a4	        53	fcntl2.h	FUNCTION_139	IF_2	CALL_9
0x40017eb	          0x4889c7	                            mov rdi, rax	        53	fcntl2.h	FUNCTION_139	IF_2	CALL_9
0x40017ee	          0x4889c3	                            mov rbx, rax	        95	update-index.c	FUNCTION_6	CALL_1
0x40017f1	      0xbe42000000	                           mov esi, 0x42	        53	fcntl2.h	FUNCTION_139	IF_2	CALL_9
0x40017f6	            0x31c0	                            xor eax, eax	        53	fcntl2.h	FUNCTION_139	IF_2	CALL_9
0x40017f8	      0xe800000000	                          call 0x40017fd	        53	fcntl2.h	FUNCTION_139	IF_2	CALL_9
0x40017fd	            0x85c0	                           test eax, eax	        97	update-index.c	FUNCTION_6	IF_1
0x40017ff	            0x7802	                            js 0x4001803	        97	update-index.c	FUNCTION_6	IF_1
0x4001801	              0x5b	                                 pop rbx	       100	update-index.c	FUNCTION_6
0x4001802	              0xc3	                                     ret	       100	update-index.c	FUNCTION_6
0x4001803	      0xbf00000000	                              mov edi, 0	       100	update-index.c	FUNCTION_6
0x4001808	      0xe823f3ffff	                       call sym._.part.3	       100	update-index.c	FUNCTION_6
0x400180d	          0x4889de	                            mov rsi, rbx	        98	update-index.c	FUNCTION_6	CALL_4
0x4001810	          0x4889c7	                            mov rdi, rax	        98	update-index.c	FUNCTION_6	CALL_4
0x4001813	            0x31c0	                            xor eax, eax	        98	update-index.c	FUNCTION_6	CALL_4
0x4001815	      0xe800000000	                          call 0x400181a	        98	update-index.c	FUNCTION_6	CALL_4
cacheinfo_callback	DO,0:ELSE,0:CALL,8:WHILE,0:functions,0:SWITCH,0:FOR,0:IF,4	128
0x4000bc0	            0x4155	                                push r13	       837	update-index.c	FUNCTION_32
0x4000bc2	            0x4154	                                push r12	       837	update-index.c	FUNCTION_32
0x4000bc4	              0x55	                                push rbp	       837	update-index.c	FUNCTION_32
0x4000bc5	              0x53	                                push rbx	       837	update-index.c	FUNCTION_32
0x4000bc6	          0x4889fb	                            mov rbx, rdi	       837	update-index.c	FUNCTION_32
0x4000bc9	        0x4883ec38	                           sub rsp, 0x38	       837	update-index.c	FUNCTION_32
0x4000bcd	    0x64488b042528	                mov rax, qword fs:[0x28]	       837	update-index.c	FUNCTION_32
0x4000bd6	      0x4889442428	             mov qword [rsp + 0x28], rax	       837	update-index.c	FUNCTION_32
0x4000bdb	            0x31c0	                            xor eax, eax	       837	update-index.c	FUNCTION_32
0x4000bdd	          0x488b07	                    mov rax, qword [rdi]	       842	update-index.c	FUNCTION_32	IF_1	CALL_1
0x4000be0	        0x488b6808	                mov rbp, qword [rax + 8]	       842	update-index.c	FUNCTION_32	IF_1	CALL_1
0x4000be4	          0x4885ed	                           test rbp, rbp	       820	update-index.c	FUNCTION_31	IF_1
0x4000be7	     0xf84b3000000	                            je 0x4000ca0	       820	update-index.c	FUNCTION_31	IF_1
0x4000bed	      0xe800000000	                          call 0x4000bf2	       823	update-index.c	FUNCTION_31
0x4000bf2	      0x488d742408	                      lea rsi, [rsp + 8]	       824	update-index.c	FUNCTION_31	CALL_1
0x4000bf7	          0x4989c5	                            mov r13, rax	       823	update-index.c	FUNCTION_31
0x4000bfa	      0xba08000000	                              mov edx, 8	       824	update-index.c	FUNCTION_31	CALL_1
0x4000bff	    0xc70000000000	                      mov dword [rax], 0	       823	update-index.c	FUNCTION_31
0x4000c05	          0x4889ef	                            mov rdi, rbp	       824	update-index.c	FUNCTION_31	CALL_1
0x4000c08	      0xe800000000	                          call 0x4000c0d	       824	update-index.c	FUNCTION_31	CALL_1
0x4000c0d	        0x418b5500	                    mov edx, dword [r13]	       825	update-index.c	FUNCTION_31	IF_2
0x4000c11	          0x4989c4	                            mov r12, rax	       824	update-index.c	FUNCTION_31	CALL_1
0x4000c14	            0x85d2	                           test edx, edx	       825	update-index.c	FUNCTION_31	IF_2
0x4000c16	     0xf8584000000	                           jne 0x4000ca0	       825	update-index.c	FUNCTION_31	IF_2
0x4000c1c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       825	update-index.c	FUNCTION_31	IF_2
0x4000c21	          0x4839fd	                            cmp rbp, rdi	       825	update-index.c	FUNCTION_31	IF_2
0x4000c24	            0x747a	                            je 0x4000ca0	       825	update-index.c	FUNCTION_31	IF_2
0x4000c26	          0x803f2c	                    cmp byte [rdi], 0x2c	       825	update-index.c	FUNCTION_31	IF_2
0x4000c29	            0x7575	                           jne 0x4000ca0	       825	update-index.c	FUNCTION_31	IF_2
0x4000c2b	            0x89c0	                            mov eax, eax	       825	update-index.c	FUNCTION_31	IF_2
0x4000c2d	          0x4939c4	                            cmp r12, rax	       825	update-index.c	FUNCTION_31	IF_2
0x4000c30	            0x756e	                           jne 0x4000ca0	       825	update-index.c	FUNCTION_31	IF_2
0x4000c32	      0x488d742410	                   lea rsi, [rsp + 0x10]	       829	update-index.c	FUNCTION_31	IF_3	CALL_2
0x4000c37	        0x4883c701	                              add rdi, 1	       828	update-index.c	FUNCTION_31
0x4000c3b	      0x48897c2408	                mov qword [rsp + 8], rdi	       828	update-index.c	FUNCTION_31
0x4000c40	      0xe800000000	                          call 0x4000c45	       829	update-index.c	FUNCTION_31	IF_3	CALL_2
0x4000c45	            0x85c0	                           test eax, eax	       829	update-index.c	FUNCTION_31	IF_3	CALL_2
0x4000c47	            0x7557	                           jne 0x4000ca0	       829	update-index.c	FUNCTION_31	IF_3	CALL_2
0x4000c49	      0x488b742408	                mov rsi, qword [rsp + 8]	       829	update-index.c	FUNCTION_31	IF_3	CALL_2
0x4000c4e	        0x807e282c	            cmp byte [rsi + 0x28], 0x2c 	       829	update-index.c	FUNCTION_31	IF_3	CALL_2
0x4000c52	            0x754c	                           jne 0x4000ca0	       829	update-index.c	FUNCTION_31	IF_3	CALL_2
0x4000c54	        0x488d6e29	                   lea rbp, [rsi + 0x29]	       831	update-index.c	FUNCTION_31
0x4000c58	      0x488d742410	                   lea rsi, [rsp + 0x10]	       843	update-index.c	FUNCTION_32	IF_1	IF_2	CALL_2
0x4000c5d	            0x31c9	                            xor ecx, ecx	       843	update-index.c	FUNCTION_32	IF_1	IF_2	CALL_2
0x4000c5f	          0x4489e7	                           mov edi, r12d	       843	update-index.c	FUNCTION_32	IF_1	IF_2	CALL_2
0x4000c62	          0x4889ea	                            mov rdx, rbp	       843	update-index.c	FUNCTION_32	IF_1	IF_2	CALL_2
0x4000c65	      0xe8c6fcffff	                  call sym.add_cacheinfo	       843	update-index.c	FUNCTION_32	IF_1	IF_2	CALL_2
0x4000c6a	            0x85c0	                           test eax, eax	       843	update-index.c	FUNCTION_32	IF_1	IF_2	CALL_2
0x4000c6c	     0xf8521010000	                           jne 0x4000d93	       843	update-index.c	FUNCTION_32	IF_1	IF_2	CALL_2
0x4000c72	        0x48830308	                      add qword [rbx], 8	       845	update-index.c	FUNCTION_32	IF_1
0x4000c76	        0x836b1001	               sub dword [rbx + 0x10], 1	       846	update-index.c	FUNCTION_32	IF_1
0x4000c7a	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       857	update-index.c	FUNCTION_32
0x4000c7f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       857	update-index.c	FUNCTION_32
0x4000c88	     0xf8500010000	                           jne 0x4000d8e	       857	update-index.c	FUNCTION_32
0x4000c8e	        0x4883c438	                           add rsp, 0x38	       857	update-index.c	FUNCTION_32
0x4000c92	              0x5b	                                 pop rbx	       857	update-index.c	FUNCTION_32
0x4000c93	              0x5d	                                 pop rbp	       857	update-index.c	FUNCTION_32
0x4000c94	            0x415c	                                 pop r12	       857	update-index.c	FUNCTION_32
0x4000c96	            0x415d	                                 pop r13	       857	update-index.c	FUNCTION_32
0x4000c98	              0xc3	                                     ret	       857	update-index.c	FUNCTION_32
0x4000c99	     0xf1f80000000	                         nop dword [rax]	       857	update-index.c	FUNCTION_32
0x4000ca0	        0x837b1003	               cmp dword [rbx + 0x10], 3	       849	update-index.c	FUNCTION_32	IF_3
0x4000ca4	     0xf8ece000000	                           jle 0x4000d78	       849	update-index.c	FUNCTION_32	IF_3
0x4000caa	          0x488b03	                    mov rax, qword [rbx]	       851	update-index.c	FUNCTION_32	IF_4	CALL_5
0x4000cad	        0x4c8d6008	                      lea r12, [rax + 8]	       851	update-index.c	FUNCTION_32	IF_4	CALL_5
0x4000cb1	          0x4c8923	                    mov qword [rbx], r12	       851	update-index.c	FUNCTION_32	IF_4	CALL_5
0x4000cb4	        0x488b6808	                mov rbp, qword [rax + 8]	       851	update-index.c	FUNCTION_32	IF_4	CALL_5
0x4000cb8	      0xe800000000	                          call 0x4000cbd	      1014	git-compat-util.h	FUNCTION_165
0x4000cbd	      0xbe2d000000	                           mov esi, 0x2d	      1016	git-compat-util.h	FUNCTION_165	IF_1	CALL_1
0x4000cc2	    0xc70000000000	                      mov dword [rax], 0	      1014	git-compat-util.h	FUNCTION_165
0x4000cc8	          0x4989c5	                            mov r13, rax	      1014	git-compat-util.h	FUNCTION_165
0x4000ccb	          0x4889ef	                            mov rdi, rbp	      1016	git-compat-util.h	FUNCTION_165	IF_1	CALL_1
0x4000cce	      0xe800000000	                          call 0x4000cd3	      1016	git-compat-util.h	FUNCTION_165	IF_1	CALL_1
0x4000cd3	          0x4885c0	                           test rax, rax	      1016	git-compat-util.h	FUNCTION_165	IF_1	CALL_1
0x4000cd6	     0xf8587000000	                           jne 0x4000d63	      1016	git-compat-util.h	FUNCTION_165	IF_1	CALL_1
0x4000cdc	      0x488d742408	                      lea rsi, [rsp + 8]	      1018	git-compat-util.h	FUNCTION_165	CALL_2
0x4000ce1	      0xba08000000	                              mov edx, 8	      1018	git-compat-util.h	FUNCTION_165	CALL_2
0x4000ce6	          0x4889ef	                            mov rdi, rbp	      1018	git-compat-util.h	FUNCTION_165	CALL_2
0x4000ce9	      0xe800000000	                          call 0x4000cee	      1018	git-compat-util.h	FUNCTION_165	CALL_2
0x4000cee	          0x4989c4	                            mov r12, rax	      1018	git-compat-util.h	FUNCTION_165	CALL_2
0x4000cf1	        0x418b4500	                    mov eax, dword [r13]	      1019	git-compat-util.h	FUNCTION_165	IF_2
0x4000cf5	            0x85c0	                           test eax, eax	      1019	git-compat-util.h	FUNCTION_165	IF_2
0x4000cf7	            0x7567	                           jne 0x4000d60	      1019	git-compat-util.h	FUNCTION_165	IF_2
0x4000cf9	      0x488b442408	                mov rax, qword [rsp + 8]	      1019	git-compat-util.h	FUNCTION_165	IF_2
0x4000cfe	          0x803800	                       cmp byte [rax], 0	      1019	git-compat-util.h	FUNCTION_165	IF_2
0x4000d01	            0x755d	                           jne 0x4000d60	      1019	git-compat-util.h	FUNCTION_165	IF_2
0x4000d03	          0x4839c5	                            cmp rbp, rax	      1019	git-compat-util.h	FUNCTION_165	IF_2
0x4000d06	            0x7458	                            je 0x4000d60	      1019	git-compat-util.h	FUNCTION_165	IF_2
0x4000d08	          0x4489e0	                           mov eax, r12d	      1019	git-compat-util.h	FUNCTION_165	IF_2
0x4000d0b	          0x4939c4	                            cmp r12, rax	      1019	git-compat-util.h	FUNCTION_165	IF_2
0x4000d0e	            0x7550	                           jne 0x4000d60	      1019	git-compat-util.h	FUNCTION_165	IF_2
0x4000d10	          0x488b03	                    mov rax, qword [rbx]	       852	update-index.c	FUNCTION_32	IF_4	CALL_6
0x4000d13	      0x488d742410	                   lea rsi, [rsp + 0x10]	       852	update-index.c	FUNCTION_32	IF_4	CALL_6
0x4000d18	        0x488d5008	                      lea rdx, [rax + 8]	       851	update-index.c	FUNCTION_32	IF_4	CALL_5
0x4000d1c	          0x488913	                    mov qword [rbx], rdx	       851	update-index.c	FUNCTION_32	IF_4	CALL_5
0x4000d1f	        0x488b7808	                mov rdi, qword [rax + 8]	       852	update-index.c	FUNCTION_32	IF_4	CALL_6
0x4000d23	      0xe800000000	                          call 0x4000d28	       852	update-index.c	FUNCTION_32	IF_4	CALL_6
0x4000d28	            0x85c0	                           test eax, eax	       851	update-index.c	FUNCTION_32	IF_4	CALL_5
0x4000d2a	            0x7534	                           jne 0x4000d60	       851	update-index.c	FUNCTION_32	IF_4	CALL_5
0x4000d2c	          0x488b03	                    mov rax, qword [rbx]	       853	update-index.c	FUNCTION_32	IF_4	CALL_7
0x4000d2f	      0x488d742410	                   lea rsi, [rsp + 0x10]	       853	update-index.c	FUNCTION_32	IF_4	CALL_7
0x4000d34	            0x31c9	                            xor ecx, ecx	       853	update-index.c	FUNCTION_32	IF_4	CALL_7
0x4000d36	          0x4489e7	                           mov edi, r12d	       853	update-index.c	FUNCTION_32	IF_4	CALL_7
0x4000d39	        0x488d5008	                      lea rdx, [rax + 8]	       852	update-index.c	FUNCTION_32	IF_4	CALL_6
0x4000d3d	          0x488913	                    mov qword [rbx], rdx	       852	update-index.c	FUNCTION_32	IF_4	CALL_6
0x4000d40	        0x488b5008	                mov rdx, qword [rax + 8]	       853	update-index.c	FUNCTION_32	IF_4	CALL_7
0x4000d44	      0xe8e7fbffff	                  call sym.add_cacheinfo	       853	update-index.c	FUNCTION_32	IF_4	CALL_7
0x4000d49	            0x85c0	                           test eax, eax	       852	update-index.c	FUNCTION_32	IF_4	CALL_6
0x4000d4b	            0x7513	                           jne 0x4000d60	       852	update-index.c	FUNCTION_32	IF_4	CALL_6
0x4000d4d	        0x836b1003	               sub dword [rbx + 0x10], 3	       855	update-index.c	FUNCTION_32
0x4000d51	      0xe924ffffff	                           jmp 0x4000c7a	       856	update-index.c	FUNCTION_32
0x4000d56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       856	update-index.c	FUNCTION_32
0x4000d60	          0x4c8b23	                    mov r12, qword [rbx]	       856	update-index.c	FUNCTION_32
0x4000d63	        0x498b3424	                    mov rsi, qword [r12]	       854	update-index.c	FUNCTION_32	CALL_8
0x4000d67	      0xbf00000000	                              mov edi, 0	       854	update-index.c	FUNCTION_32	CALL_8
0x4000d6c	            0x31c0	                            xor eax, eax	       854	update-index.c	FUNCTION_32	CALL_8
0x4000d6e	      0xe800000000	                          call 0x4000d73	       854	update-index.c	FUNCTION_32	CALL_8
0x4000d73	       0xf1f440000	                   nop dword [rax + rax]	       854	update-index.c	FUNCTION_32	CALL_8
0x4000d78	      0xbf00000000	                              mov edi, 0	       850	update-index.c	FUNCTION_32	CALL_4
0x4000d7d	            0x31c0	                            xor eax, eax	       850	update-index.c	FUNCTION_32	CALL_4
0x4000d7f	      0xe800000000	                          call 0x4000d84	       850	update-index.c	FUNCTION_32	CALL_4
0x4000d84	      0xb8ffffffff	                     mov eax, 0xffffffff	       850	update-index.c	FUNCTION_32	CALL_4
0x4000d89	      0xe9ecfeffff	                           jmp 0x4000c7a	       850	update-index.c	FUNCTION_32	CALL_4
0x4000d8e	      0xe800000000	                          call 0x4000d93	       857	update-index.c	FUNCTION_32
0x4000d93	          0x4889ee	                            mov rsi, rbp	       844	update-index.c	FUNCTION_32	IF_1	CALL_3
0x4000d96	      0xbf00000000	                              mov edi, 0	       844	update-index.c	FUNCTION_32	IF_1	CALL_3
0x4000d9b	            0x31c0	                            xor eax, eax	       844	update-index.c	FUNCTION_32	IF_1	CALL_3
0x4000d9d	      0xe800000000	                          call 0x4000da2	       844	update-index.c	FUNCTION_32	IF_1	CALL_3
