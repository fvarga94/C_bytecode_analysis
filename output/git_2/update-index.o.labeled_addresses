unresolve_callback	SWITCH,0:DO,0:WHILE,0:CALL,2:FOR,0:ELSE,0:IF,1:functions,0	210
0x4000261	            0x4157	                                push r15	       884	update-index.c	FUNCTION_35
0x4000263	            0x4156	                                push r14	       884	update-index.c	FUNCTION_35
0x4000265	            0x4155	                                push r13	       884	update-index.c	FUNCTION_35
0x4000267	            0x4154	                                push r12	       884	update-index.c	FUNCTION_35
0x4000269	              0x55	                                push rbp	       884	update-index.c	FUNCTION_35
0x400026a	              0x53	                                push rbx	       884	update-index.c	FUNCTION_35
0x400026b	        0x4883ec38	                           sub rsp, 0x38	       884	update-index.c	FUNCTION_35
0x400026f	      0x48897c2420	             mov qword [rsp + 0x20], rdi	       884	update-index.c	FUNCTION_35
0x4000274	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       885	update-index.c	FUNCTION_35
0x4000278	      0x4889442428	             mov qword [rsp + 0x28], rax	       885	update-index.c	FUNCTION_35
0x400027d	    0x488b05000000	            mov rax, qword [0x04000284] 	       886	update-index.c	FUNCTION_35
0x4000284	        0x488b7808	                mov rdi, qword [rax + 8]	       886	update-index.c	FUNCTION_35
0x4000288	      0x48897c2408	                mov qword [rsp + 8], rdi	       886	update-index.c	FUNCTION_35
0x400028d	          0x4885ff	                           test rdi, rdi	       889	update-index.c	FUNCTION_35	CALL_1
0x4000290	            0x741a	                            je 0x40002ac	       889	update-index.c	FUNCTION_35	CALL_1
0x4000292	      0xb800000000	                              mov eax, 0	       890	update-index.c	FUNCTION_35	CALL_2
0x4000297	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       890	update-index.c	FUNCTION_35	CALL_2
0x400029e	            0xf2ae	              repne scasb al, byte [rdi]	       890	update-index.c	FUNCTION_35	CALL_2
0x40002a0	          0x48f7d1	                                 not rcx	       890	update-index.c	FUNCTION_35	CALL_2
0x40002a3	          0x8d41ff	                      lea eax, [rcx - 1]	       889	update-index.c	FUNCTION_35	CALL_1
0x40002a6	        0x89442414	             mov dword [rsp + 0x14], eax	       889	update-index.c	FUNCTION_35	CALL_1
0x40002aa	            0xeb08	                           jmp 0x40002b4	       889	update-index.c	FUNCTION_35	CALL_1
0x40002ac	    0xc74424140000	               mov dword [rsp + 0x14], 0	       889	update-index.c	FUNCTION_35	CALL_1
0x40002b4	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       889	update-index.c	FUNCTION_35	CALL_1
0x40002b9	          0x4c8b20	                    mov r12, qword [rax]	       889	update-index.c	FUNCTION_35	CALL_1
0x40002bc	          0x8b5810	            mov ebx, dword [rax + 0x10] 	       889	update-index.c	FUNCTION_35	CALL_1
0x40002bf	      0xbe00000000	                              mov esi, 0	       690	update-index.c	FUNCTION_23	IF_1	CALL_1
0x40002c4	      0xbf00000000	                              mov edi, 0	       690	update-index.c	FUNCTION_23	IF_1	CALL_1
0x40002c9	      0xe800000000	                          call 0x40002ce	       690	update-index.c	FUNCTION_23	IF_1	CALL_1
0x40002ce	            0x85c0	                           test eax, eax	       690	update-index.c	FUNCTION_23	IF_1	CALL_1
0x40002d0	            0x740f	                            je 0x40002e1	       690	update-index.c	FUNCTION_23	IF_1	CALL_1
0x40002d2	      0xbf00000000	                              mov edi, 0	       691	update-index.c	FUNCTION_23	CALL_2
0x40002d7	      0xb800000000	                              mov eax, 0	       691	update-index.c	FUNCTION_23	CALL_2
0x40002dc	      0xe800000000	                          call 0x40002e1	       691	update-index.c	FUNCTION_23	CALL_2
0x40002e1	      0xbe00000000	                              mov esi, 0	       692	update-index.c	FUNCTION_23	IF_2	CALL_3
0x40002e6	      0xbf00000000	                              mov edi, 0	       692	update-index.c	FUNCTION_23	IF_2	CALL_3
0x40002eb	      0xe800000000	                          call 0x40002f0	       692	update-index.c	FUNCTION_23	IF_2	CALL_3
0x40002f0	            0x85c0	                           test eax, eax	       692	update-index.c	FUNCTION_23	IF_2	CALL_3
0x40002f2	            0x750a	                           jne 0x40002fe	       692	update-index.c	FUNCTION_23	IF_2	CALL_3
0x40002f4	          0x83fb01	                              cmp ebx, 1	       709	update-index.c	FUNCTION_24	FOR_1
0x40002f7	            0x7f2a	                            jg 0x4000323	       709	update-index.c	FUNCTION_24	FOR_1
0x40002f9	      0xe97c020000	                           jmp 0x400057a	       709	update-index.c	FUNCTION_24	FOR_1
0x40002fe	    0x488b0d000000	            mov rcx, qword [0x04000305] 	        97	stdio2.h	CALL_10
0x4000305	      0xba1e000000	                           mov edx, 0x1e	        97	stdio2.h	CALL_10
0x400030a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_10
0x400030f	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_10
0x4000314	      0xe800000000	                          call 0x4000319	        97	stdio2.h	CALL_10
0x4000319	      0xbf00000000	                              mov edi, 0	       694	update-index.c	FUNCTION_23	IF_2	CALL_4
0x400031e	      0xe800000000	                          call 0x4000323	       694	update-index.c	FUNCTION_23	IF_2	CALL_4
0x4000323	      0x498d6c2408	                      lea rbp, [r12 + 8]	       694	update-index.c	FUNCTION_23	IF_2	CALL_4
0x4000328	          0x8d43fe	                      lea eax, [rbx - 2]	       694	update-index.c	FUNCTION_23	IF_2	CALL_4
0x400032b	      0x498d44c410	          lea rax, [r12 + rax*8 + 0x10] 	       694	update-index.c	FUNCTION_23	IF_2	CALL_4
0x4000330	      0x4889442418	             mov qword [rsp + 0x18], rax	       694	update-index.c	FUNCTION_23	IF_2	CALL_4
0x4000335	    0x41bf00000000	                             mov r15d, 0	       709	update-index.c	FUNCTION_24	FOR_1
0x400033b	        0x488b5500	                    mov rdx, qword [rbp]	       711	update-index.c	FUNCTION_24	FOR_1	CALL_2
0x400033f	        0x8b742414	            mov esi, dword [rsp + 0x14] 	       711	update-index.c	FUNCTION_24	FOR_1	CALL_2
0x4000343	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       711	update-index.c	FUNCTION_24	FOR_1	CALL_2
0x4000348	      0xe800000000	                          call 0x400034d	       711	update-index.c	FUNCTION_24	FOR_1	CALL_2
0x400034d	          0x4889c3	                            mov rbx, rax	       711	update-index.c	FUNCTION_24	FOR_1	CALL_2
0x4000350	      0xb800000000	                              mov eax, 0	       618	update-index.c	FUNCTION_22	CALL_1
0x4000355	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       618	update-index.c	FUNCTION_22	CALL_1
0x400035c	          0x4889df	                            mov rdi, rbx	       618	update-index.c	FUNCTION_22	CALL_1
0x400035f	            0xf2ae	              repne scasb al, byte [rdi]	       618	update-index.c	FUNCTION_22	CALL_1
0x4000361	          0x4889c8	                            mov rax, rcx	       618	update-index.c	FUNCTION_22	CALL_1
0x4000364	          0x48f7d0	                                 not rax	       618	update-index.c	FUNCTION_22	CALL_1
0x4000367	        0x4c8d70ff	                      lea r14, [rax - 1]	       618	update-index.c	FUNCTION_22	CALL_1
0x400036b	          0x4489f2	                           mov edx, r14d	       624	update-index.c	FUNCTION_22
0x400036e	          0x4889de	                            mov rsi, rbx	       624	update-index.c	FUNCTION_22
0x4000371	      0xbf00000000	                              mov edi, 0	       624	update-index.c	FUNCTION_22
0x4000376	      0xe800000000	                          call 0x400037b	       624	update-index.c	FUNCTION_22
0x400037b	            0x85c0	                           test eax, eax	       625	update-index.c	FUNCTION_22	IF_1
0x400037d	            0x784c	                            js 0x40003cb	       625	update-index.c	FUNCTION_22	IF_1
0x400037f	            0x89c6	                            mov esi, eax	       627	update-index.c	FUNCTION_22	IF_1
0x4000381	      0xbf00000000	                              mov edi, 0	       627	update-index.c	FUNCTION_22	IF_1
0x4000386	      0xe800000000	                          call 0x400038b	       627	update-index.c	FUNCTION_22	IF_1
0x400038b	    0x390500000000	            cmp dword [0x04000391], eax 	       628	update-index.c	FUNCTION_22	IF_1	IF_2
0x4000391	     0xf8694000000	                           jbe 0x400042b	       628	update-index.c	FUNCTION_22	IF_1	IF_2
0x4000397	            0x4898	                                    cdqe	       629	update-index.c	FUNCTION_22	IF_1	IF_2
0x4000399	    0x488b15000000	            mov rdx, qword [0x040003a0] 	       629	update-index.c	FUNCTION_22	IF_1	IF_2
0x40003a0	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	       629	update-index.c	FUNCTION_22	IF_1	IF_2
0x40003a4	    0xf74738003000	        test dword [rdi + 0x38], 0x3000 	       630	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3
0x40003ab	            0x747e	                            je 0x400042b	       630	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3
0x40003ad	        0x4439773c	           cmp dword [rdi + 0x3c], r14d 	       630	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3
0x40003b1	            0x7578	                           jne 0x400042b	       630	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3
0x40003b3	          0x4963d6	                        movsxd rdx, r14d	       632	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3	CALL_2
0x40003b6	        0x4883c758	                           add rdi, 0x58	       632	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3	CALL_2
0x40003ba	          0x4889de	                            mov rsi, rbx	       632	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3	CALL_2
0x40003bd	      0xe800000000	                          call 0x40003c2	       632	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3	CALL_2
0x40003c2	            0x85c0	                           test eax, eax	       631	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3
0x40003c4	            0x7565	                           jne 0x400042b	       631	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3
0x40003c6	      0xe97c010000	                           jmp 0x4000547	       631	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3
0x40003cb	            0xf7d0	                                 not eax	       641	update-index.c	FUNCTION_22	ELSE_1
0x40003cd	    0x390500000000	            cmp dword [0x040003d3], eax 	       642	update-index.c	FUNCTION_22	ELSE_1	IF_4
0x40003d3	            0x7656	                           jbe 0x400042b	       642	update-index.c	FUNCTION_22	ELSE_1	IF_4
0x40003d5	            0x4898	                                    cdqe	       643	update-index.c	FUNCTION_22	ELSE_1	IF_4
0x40003d7	    0x488b15000000	            mov rdx, qword [0x040003de] 	       643	update-index.c	FUNCTION_22	ELSE_1	IF_4
0x40003de	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	       643	update-index.c	FUNCTION_22	ELSE_1	IF_4
0x40003e2	        0x4439773c	           cmp dword [rdi + 0x3c], r14d 	       644	update-index.c	FUNCTION_22	ELSE_1	IF_4	IF_5
0x40003e6	            0x7543	                           jne 0x400042b	       644	update-index.c	FUNCTION_22	ELSE_1	IF_4	IF_5
0x40003e8	          0x4963d6	                        movsxd rdx, r14d	       645	update-index.c	FUNCTION_22	ELSE_1	IF_4	IF_5	CALL_3
0x40003eb	        0x4883c758	                           add rdi, 0x58	       645	update-index.c	FUNCTION_22	ELSE_1	IF_4	IF_5	CALL_3
0x40003ef	          0x4889de	                            mov rsi, rbx	       645	update-index.c	FUNCTION_22	ELSE_1	IF_4	IF_5	CALL_3
0x40003f2	      0xe800000000	                          call 0x40003f7	       645	update-index.c	FUNCTION_22	ELSE_1	IF_4	IF_5	CALL_3
0x40003f7	            0x85c0	                           test eax, eax	       644	update-index.c	FUNCTION_22	ELSE_1	IF_4	IF_5
0x40003f9	            0x7530	                           jne 0x400042b	       644	update-index.c	FUNCTION_22	ELSE_1	IF_4	IF_5
0x40003fb	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_10
0x40003fe	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_10
0x4000403	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_10
0x4000408	    0x488b3d000000	            mov rdi, qword [0x0400040f] 	        97	stdio2.h	CALL_10
0x400040f	      0xe800000000	                          call 0x4000414	        97	stdio2.h	CALL_10
0x4000414	    0x41be00000000	                             mov r14d, 0	       621	update-index.c	FUNCTION_22
0x400041a	    0x41bc00000000	                             mov r12d, 0	       621	update-index.c	FUNCTION_22
0x4000420	    0x41bd00000000	                             mov r13d, 0	       620	update-index.c	FUNCTION_22
0x4000426	      0xe909010000	                           jmp 0x4000534	       620	update-index.c	FUNCTION_22
0x400042b	    0x41b802000000	                              mov r8d, 2	       658	update-index.c	FUNCTION_22	CALL_4
0x4000431	          0x4489f1	                           mov ecx, r14d	       658	update-index.c	FUNCTION_22	CALL_4
0x4000434	          0x4889da	                            mov rdx, rbx	       658	update-index.c	FUNCTION_22	CALL_4
0x4000437	      0xbe00000000	                              mov esi, 0	       658	update-index.c	FUNCTION_22	CALL_4
0x400043c	      0xbf00000000	                              mov edi, 0	       658	update-index.c	FUNCTION_22	CALL_4
0x4000441	      0xe88cfcffff	                   call sym.read_one_ent	       658	update-index.c	FUNCTION_22	CALL_4
0x4000446	          0x4989c4	                            mov r12, rax	       658	update-index.c	FUNCTION_22	CALL_4
0x4000449	    0x41b803000000	                              mov r8d, 3	       659	update-index.c	FUNCTION_22	CALL_5
0x400044f	          0x4489f1	                           mov ecx, r14d	       659	update-index.c	FUNCTION_22	CALL_5
0x4000452	          0x4889da	                            mov rdx, rbx	       659	update-index.c	FUNCTION_22	CALL_5
0x4000455	      0xbe00000000	                              mov esi, 0	       659	update-index.c	FUNCTION_22	CALL_5
0x400045a	      0xbf00000000	                              mov edi, 0	       659	update-index.c	FUNCTION_22	CALL_5
0x400045f	      0xe86efcffff	                   call sym.read_one_ent	       659	update-index.c	FUNCTION_22	CALL_5
0x4000464	          0x4989c6	                            mov r14, rax	       659	update-index.c	FUNCTION_22	CALL_5
0x4000467	          0x4d85e4	                           test r12, r12	       661	update-index.c	FUNCTION_22	IF_6
0x400046a	     0xf84be000000	                            je 0x400052e	       661	update-index.c	FUNCTION_22	IF_6
0x4000470	          0x4885c0	                           test rax, rax	       661	update-index.c	FUNCTION_22	IF_6
0x4000473	     0xf84b5000000	                            je 0x400052e	       661	update-index.c	FUNCTION_22	IF_6
0x4000479	        0x488d7044	                   lea rsi, [rax + 0x44]	       975	cache.h	FUNCTION_62	CALL_1
0x400047d	      0x498d7c2444	                   lea rdi, [r12 + 0x44]	       975	cache.h	FUNCTION_62	CALL_1
0x4000482	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_62	CALL_1
0x4000487	      0xe800000000	                          call 0x400048c	       975	cache.h	FUNCTION_62	CALL_1
0x400048c	            0x85c0	                           test eax, eax	       665	update-index.c	FUNCTION_22	IF_7	CALL_6
0x400048e	            0x7531	                           jne 0x40004c1	       665	update-index.c	FUNCTION_22	IF_7	CALL_6
0x4000490	        0x418b4634	            mov eax, dword [r14 + 0x34] 	       665	update-index.c	FUNCTION_22	IF_7	CALL_6
0x4000494	      0x4139442434	            cmp dword [r12 + 0x34], eax 	       665	update-index.c	FUNCTION_22	IF_7	CALL_6
0x4000499	            0x7526	                           jne 0x40004c1	       665	update-index.c	FUNCTION_22	IF_7	CALL_6
0x400049b	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_10
0x400049e	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_10
0x40004a3	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_10
0x40004a8	    0x488b3d000000	            mov rdi, qword [0x040004af] 	        97	stdio2.h	CALL_10
0x40004af	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_10
0x40004b4	      0xe800000000	                          call 0x40004b9	        97	stdio2.h	CALL_10
0x40004b9	    0x41bd00000000	                             mov r13d, 0	       620	update-index.c	FUNCTION_22
0x40004bf	            0xeb73	                           jmp 0x4000534	       620	update-index.c	FUNCTION_22
0x40004c1	          0x4889de	                            mov rsi, rbx	       672	update-index.c	FUNCTION_22
0x40004c4	      0xbf00000000	                              mov edi, 0	       672	update-index.c	FUNCTION_22
0x40004c9	      0xe800000000	                          call 0x40004ce	       672	update-index.c	FUNCTION_22
0x40004ce	      0xba01000000	                              mov edx, 1	       673	update-index.c	FUNCTION_22	IF_8
0x40004d3	          0x4c89e6	                            mov rsi, r12	       673	update-index.c	FUNCTION_22	IF_8
0x40004d6	      0xbf00000000	                              mov edi, 0	       673	update-index.c	FUNCTION_22	IF_8
0x40004db	      0xe800000000	                          call 0x40004e0	       673	update-index.c	FUNCTION_22	IF_8
0x40004e0	            0x85c0	                           test eax, eax	       673	update-index.c	FUNCTION_22	IF_8
0x40004e2	            0x741a	                            je 0x40004fe	       673	update-index.c	FUNCTION_22	IF_8
0x40004e4	          0x4889de	                            mov rsi, rbx	       674	update-index.c	FUNCTION_22	IF_8
0x40004e7	      0xbf00000000	                              mov edi, 0	       674	update-index.c	FUNCTION_22	IF_8
0x40004ec	      0xb800000000	                              mov eax, 0	       674	update-index.c	FUNCTION_22	IF_8
0x40004f1	      0xe800000000	                          call 0x40004f6	       674	update-index.c	FUNCTION_22	IF_8
0x40004f6	    0x41bdffffffff	                    mov r13d, 0xffffffff	       675	update-index.c	FUNCTION_22	IF_8
0x40004fc	            0xeb36	                           jmp 0x4000534	       675	update-index.c	FUNCTION_22	IF_8
0x40004fe	      0xba01000000	                              mov edx, 1	       678	update-index.c	FUNCTION_22	IF_9
0x4000503	          0x4c89f6	                            mov rsi, r14	       678	update-index.c	FUNCTION_22	IF_9
0x4000506	      0xbf00000000	                              mov edi, 0	       678	update-index.c	FUNCTION_22	IF_9
0x400050b	      0xe800000000	                          call 0x4000510	       678	update-index.c	FUNCTION_22	IF_9
0x4000510	            0x85c0	                           test eax, eax	       678	update-index.c	FUNCTION_22	IF_9
0x4000512	            0x7433	                            je 0x4000547	       678	update-index.c	FUNCTION_22	IF_9
0x4000514	          0x4889de	                            mov rsi, rbx	       680	update-index.c	FUNCTION_22
0x4000517	      0xbf00000000	                              mov edi, 0	       680	update-index.c	FUNCTION_22
0x400051c	      0xb800000000	                              mov eax, 0	       680	update-index.c	FUNCTION_22
0x4000521	      0xe800000000	                          call 0x4000526	       680	update-index.c	FUNCTION_22
0x4000526	    0x41bdffffffff	                    mov r13d, 0xffffffff	       681	update-index.c	FUNCTION_22
0x400052c	            0xeb06	                           jmp 0x4000534	       681	update-index.c	FUNCTION_22
0x400052e	    0x41bdffffffff	                    mov r13d, 0xffffffff	       662	update-index.c	FUNCTION_22	IF_6
0x4000534	          0x4c89e7	                            mov rdi, r12	       683	update-index.c	FUNCTION_22	CALL_7
0x4000537	      0xe800000000	                          call 0x400053c	       683	update-index.c	FUNCTION_22	CALL_7
0x400053c	          0x4c89f7	                            mov rdi, r14	       684	update-index.c	FUNCTION_22	CALL_8
0x400053f	      0xe800000000	                          call 0x4000544	       684	update-index.c	FUNCTION_22	CALL_8
0x4000544	          0x4489e8	                           mov eax, r13d	       685	update-index.c	FUNCTION_22
0x4000547	          0x4109c7	                            or r15d, eax	       712	update-index.c	FUNCTION_24	FOR_1	CALL_3
0x400054a	          0x4889df	                            mov rdi, rbx	       713	update-index.c	FUNCTION_24	FOR_1	CALL_4
0x400054d	      0xe800000000	                          call 0x4000552	       713	update-index.c	FUNCTION_24	FOR_1	CALL_4
0x4000552	        0x4883c508	                              add rbp, 8	       713	update-index.c	FUNCTION_24	FOR_1	CALL_4
0x4000556	      0x483b6c2418	            cmp rbp, qword [rsp + 0x18] 	       709	update-index.c	FUNCTION_24	FOR_1
0x400055b	     0xf85dafdffff	                           jne 0x400033b	       709	update-index.c	FUNCTION_24	FOR_1
0x4000561	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       889	update-index.c	FUNCTION_35	CALL_1
0x4000566	          0x448938	                   mov dword [rax], r15d	       889	update-index.c	FUNCTION_35	CALL_1
0x4000569	          0x4585ff	                         test r15d, r15d	       891	update-index.c	FUNCTION_35	IF_1
0x400056c	            0x7417	                            je 0x4000585	       891	update-index.c	FUNCTION_35	IF_1
0x400056e	    0xc70500000000	               mov dword [0x04000578], 0	       892	update-index.c	FUNCTION_35	IF_1
0x4000578	            0xeb0b	                           jmp 0x4000585	       892	update-index.c	FUNCTION_35	IF_1
0x400057a	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       889	update-index.c	FUNCTION_35	CALL_1
0x400057f	    0xc70000000000	                      mov dword [rax], 0	       889	update-index.c	FUNCTION_35	CALL_1
0x4000585	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       894	update-index.c	FUNCTION_35
0x400058a	        0x48634210	         movsxd rax, dword [rdx + 0x10] 	       894	update-index.c	FUNCTION_35
0x400058e	    0x488d04c5f8ff	                    lea rax, [rax*8 - 8]	       894	update-index.c	FUNCTION_35
0x4000596	          0x480102	                    add qword [rdx], rax	       894	update-index.c	FUNCTION_35
0x4000599	    0xc74210010000	               mov dword [rdx + 0x10], 1	       895	update-index.c	FUNCTION_35
0x40005a0	      0xb800000000	                              mov eax, 0	       897	update-index.c	FUNCTION_35
0x40005a5	        0x4883c438	                           add rsp, 0x38	       897	update-index.c	FUNCTION_35
0x40005a9	              0x5b	                                 pop rbx	       897	update-index.c	FUNCTION_35
0x40005aa	              0x5d	                                 pop rbp	       897	update-index.c	FUNCTION_35
0x40005ab	            0x415c	                                 pop r12	       897	update-index.c	FUNCTION_35
0x40005ad	            0x415d	                                 pop r13	       897	update-index.c	FUNCTION_35
0x40005af	            0x415e	                                 pop r14	       897	update-index.c	FUNCTION_35
0x40005b1	            0x415f	                                 pop r15	       897	update-index.c	FUNCTION_35
0x40005b3	              0xc3	                                     ret	       897	update-index.c	FUNCTION_35
read_one_ent	SWITCH,0:DO,0:WHILE,0:CALL,6:FOR,0:ELSE,0:IF,4:functions,0	85
0x40000d2	            0x4155	                                push r13	       589	update-index.c	FUNCTION_21
0x40000d4	            0x4154	                                push r12	       589	update-index.c	FUNCTION_21
0x40000d6	              0x55	                                push rbp	       589	update-index.c	FUNCTION_21
0x40000d7	              0x53	                                push rbx	       589	update-index.c	FUNCTION_21
0x40000d8	        0x4883ec38	                           sub rsp, 0x38	       589	update-index.c	FUNCTION_21
0x40000dc	          0x4889fb	                            mov rbx, rdi	       589	update-index.c	FUNCTION_21
0x40000df	          0x4889f7	                            mov rdi, rsi	       589	update-index.c	FUNCTION_21
0x40000e2	          0x4889d5	                            mov rbp, rdx	       589	update-index.c	FUNCTION_21
0x40000e5	          0x4189cc	                           mov r12d, ecx	       589	update-index.c	FUNCTION_21
0x40000e8	          0x4589c5	                           mov r13d, r8d	       589	update-index.c	FUNCTION_21
0x40000eb	    0x64488b042528	                mov rax, qword fs:[0x28]	       589	update-index.c	FUNCTION_21
0x40000f4	      0x4889442428	             mov qword [rsp + 0x28], rax	       589	update-index.c	FUNCTION_21
0x40000f9	            0x31c0	                            xor eax, eax	       589	update-index.c	FUNCTION_21
0x40000fb	      0x488d4c240c	                    lea rcx, [rsp + 0xc]	       595	update-index.c	FUNCTION_21	IF_1	CALL_1
0x4000100	      0x488d542410	                   lea rdx, [rsp + 0x10]	       595	update-index.c	FUNCTION_21	IF_1	CALL_1
0x4000105	          0x4889ee	                            mov rsi, rbp	       595	update-index.c	FUNCTION_21	IF_1	CALL_1
0x4000108	      0xe800000000	                          call 0x400010d	       595	update-index.c	FUNCTION_21	IF_1	CALL_1
0x400010d	            0x85c0	                           test eax, eax	       595	update-index.c	FUNCTION_21	IF_1	CALL_1
0x400010f	            0x7428	                            je 0x4000139	       595	update-index.c	FUNCTION_21	IF_1	CALL_1
0x4000111	      0xb800000000	                              mov eax, 0	       598	update-index.c	FUNCTION_21	IF_1
0x4000116	          0x4885db	                           test rbx, rbx	       596	update-index.c	FUNCTION_21	IF_1	IF_2
0x4000119	     0xf84d2000000	                            je 0x40001f1	       596	update-index.c	FUNCTION_21	IF_1	IF_2
0x400011f	          0x4889da	                            mov rdx, rbx	       597	update-index.c	FUNCTION_21	IF_1	IF_2
0x4000122	          0x4889ee	                            mov rsi, rbp	       597	update-index.c	FUNCTION_21	IF_1	IF_2
0x4000125	      0xbf00000000	                              mov edi, 0	       597	update-index.c	FUNCTION_21	IF_1	IF_2
0x400012a	      0xe800000000	                          call 0x400012f	       597	update-index.c	FUNCTION_21	IF_1	IF_2
0x400012f	      0xb800000000	                              mov eax, 0	       598	update-index.c	FUNCTION_21	IF_1
0x4000134	      0xe9b8000000	                           jmp 0x40001f1	       598	update-index.c	FUNCTION_21	IF_1
0x4000139	    0x817c240c0040	          cmp dword [rsp + 0xc], 0x4000 	       600	update-index.c	FUNCTION_21	IF_3
0x4000141	            0x7528	                           jne 0x400016b	       600	update-index.c	FUNCTION_21	IF_3
0x4000143	      0xb800000000	                              mov eax, 0	       603	update-index.c	FUNCTION_21	IF_3
0x4000148	          0x4885db	                           test rbx, rbx	       601	update-index.c	FUNCTION_21	IF_3	IF_4
0x400014b	     0xf84a0000000	                            je 0x40001f1	       601	update-index.c	FUNCTION_21	IF_3	IF_4
0x4000151	          0x4889da	                            mov rdx, rbx	       602	update-index.c	FUNCTION_21	IF_3	IF_4
0x4000154	          0x4889ee	                            mov rsi, rbp	       602	update-index.c	FUNCTION_21	IF_3	IF_4
0x4000157	      0xbf00000000	                              mov edi, 0	       602	update-index.c	FUNCTION_21	IF_3	IF_4
0x400015c	      0xe800000000	                          call 0x4000161	       602	update-index.c	FUNCTION_21	IF_3	IF_4
0x4000161	      0xb800000000	                              mov eax, 0	       603	update-index.c	FUNCTION_21	IF_3
0x4000166	      0xe986000000	                           jmp 0x40001f1	       603	update-index.c	FUNCTION_21	IF_3
0x400016b	      0x418d742459	                   lea esi, [r12 + 0x59]	       606	update-index.c	FUNCTION_21	CALL_2
0x4000170	          0x4863f6	                         movsxd rsi, esi	       606	update-index.c	FUNCTION_21	CALL_2
0x4000173	      0xbf01000000	                              mov edi, 1	       606	update-index.c	FUNCTION_21	CALL_2
0x4000178	      0xe800000000	                          call 0x400017d	       606	update-index.c	FUNCTION_21	CALL_2
0x400017d	          0x4889c3	                            mov rbx, rax	       606	update-index.c	FUNCTION_21	CALL_2
0x4000180	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_82	CALL_3
0x4000185	        0x48894344	             mov qword [rbx + 0x44], rax	        53	string3.h	FUNCTION_82	CALL_3
0x4000189	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_82	CALL_3
0x400018e	        0x4889434c	             mov qword [rbx + 0x4c], rax	        53	string3.h	FUNCTION_82	CALL_3
0x4000192	        0x8b442420	            mov eax, dword [rsp + 0x20] 	        53	string3.h	FUNCTION_82	CALL_3
0x4000196	          0x894354	             mov dword [rbx + 0x54], eax	        53	string3.h	FUNCTION_82	CALL_3
0x4000199	        0x488d7b58	                   lea rdi, [rbx + 0x58]	        53	string3.h	FUNCTION_82	CALL_3
0x400019d	          0x4963d4	                        movsxd rdx, r12d	        53	string3.h	FUNCTION_82	CALL_3
0x40001a0	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_82	CALL_3
0x40001a3	      0xe800000000	                          call 0x40001a8	        53	string3.h	FUNCTION_82	CALL_3
0x40001a8	        0x41c1e50c	                           shl r13d, 0xc	       610	update-index.c	FUNCTION_21	CALL_5
0x40001ac	        0x44896b38	            mov dword [rbx + 0x38], r13d	       610	update-index.c	FUNCTION_21	CALL_5
0x40001b0	        0x4489633c	            mov dword [rbx + 0x3c], r12d	       611	update-index.c	FUNCTION_21
0x40001b4	        0x8b54240c	              mov edx, dword [rsp + 0xc]	       612	update-index.c	FUNCTION_21	CALL_6
0x40001b8	            0x89d0	                            mov eax, edx	       256	cache.h	FUNCTION_57	IF_1	CALL_1
0x40001ba	      0x2500f00000	                         and eax, 0xf000	       256	cache.h	FUNCTION_57	IF_1	CALL_1
0x40001bf	      0x3d00a00000	                         cmp eax, 0xa000	       256	cache.h	FUNCTION_57	IF_1	CALL_1
0x40001c4	            0x7425	                            je 0x40001eb	       256	cache.h	FUNCTION_57	IF_1	CALL_1
0x40001c6	      0x3d00400000	                         cmp eax, 0x4000	       258	cache.h	FUNCTION_57	IF_2	CALL_2
0x40001cb	            0x7419	                            je 0x40001e6	       258	cache.h	FUNCTION_57	IF_2	CALL_2
0x40001cd	      0x3d00e00000	                         cmp eax, 0xe000	       258	cache.h	FUNCTION_57	IF_2	CALL_2
0x40001d2	            0x7412	                            je 0x40001e6	       258	cache.h	FUNCTION_57	IF_2	CALL_2
0x40001d4	          0x83e240	                           and edx, 0x40	       260	cache.h	FUNCTION_57
0x40001d7	          0x83fa01	                              cmp edx, 1	       260	cache.h	FUNCTION_57
0x40001da	            0x19c0	                            sbb eax, eax	       260	cache.h	FUNCTION_57
0x40001dc	          0x83e0b7	                     and eax, 0xffffffb7	       260	cache.h	FUNCTION_57
0x40001df	       0x5ed810000	                         add eax, 0x81ed	       260	cache.h	FUNCTION_57
0x40001e4	            0xeb05	                           jmp 0x40001eb	       260	cache.h	FUNCTION_57
0x40001e6	      0xb800e00000	                         mov eax, 0xe000	       259	cache.h	FUNCTION_57	IF_2
0x40001eb	          0x894334	             mov dword [rbx + 0x34], eax	       612	update-index.c	FUNCTION_21	CALL_6
0x40001ee	          0x4889d8	                            mov rax, rbx	       613	update-index.c	FUNCTION_21
0x40001f1	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       614	update-index.c	FUNCTION_21
0x40001f6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       614	update-index.c	FUNCTION_21
0x40001ff	            0x7405	                            je 0x4000206	       614	update-index.c	FUNCTION_21
0x4000201	      0xe800000000	                          call 0x4000206	       614	update-index.c	FUNCTION_21
0x4000206	        0x4883c438	                           add rsp, 0x38	       614	update-index.c	FUNCTION_21
0x400020a	              0x5b	                                 pop rbx	       614	update-index.c	FUNCTION_21
0x400020b	              0x5d	                                 pop rbp	       614	update-index.c	FUNCTION_21
0x400020c	            0x415c	                                 pop r12	       614	update-index.c	FUNCTION_21
0x400020e	            0x415d	                                 pop r13	       614	update-index.c	FUNCTION_21
0x4000210	              0xc3	                                     ret	       614	update-index.c	FUNCTION_21
avoid_racy	SWITCH,0:DO,0:WHILE,0:CALL,1:FOR,0:ELSE,0:IF,0:functions,0	5
0x4000910	        0x4883ec08	                              sub rsp, 8	       117	update-index.c	FUNCTION_9
0x4000914	      0xbf01000000	                              mov edi, 1	       123	update-index.c	FUNCTION_9	CALL_1
0x4000919	      0xe800000000	                          call 0x400091e	       123	update-index.c	FUNCTION_9	CALL_1
0x400091e	        0x4883c408	                              add rsp, 8	       124	update-index.c	FUNCTION_9
0x4000922	              0xc3	                                     ret	       124	update-index.c	FUNCTION_9
really_refresh_callback	SWITCH,0:DO,0:WHILE,0:CALL,1:FOR,0:ELSE,0:IF,0:functions,0	6
0x4000604	        0x4883ec08	                              sub rsp, 8	       791	update-index.c	FUNCTION_28
0x4000608	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	       792	update-index.c	FUNCTION_28	CALL_1
0x400060c	      0xbe01000000	                              mov esi, 1	       792	update-index.c	FUNCTION_28	CALL_1
0x4000611	      0xe89effffff	                        call sym.refresh	       792	update-index.c	FUNCTION_28	CALL_1
0x4000616	        0x4883c408	                              add rsp, 8	       793	update-index.c	FUNCTION_28
0x400061a	              0xc3	                                     ret	       793	update-index.c	FUNCTION_28
add_one_path	SWITCH,0:DO,0:WHILE,0:CALL,8:FOR,0:ELSE,0:IF,3:functions,0	119
0x4000746	            0x4156	                                push r14	       270	update-index.c	FUNCTION_14
0x4000748	            0x4155	                                push r13	       270	update-index.c	FUNCTION_14
0x400074a	            0x4154	                                push r12	       270	update-index.c	FUNCTION_14
0x400074c	              0x55	                                push rbp	       270	update-index.c	FUNCTION_14
0x400074d	              0x53	                                push rbx	       270	update-index.c	FUNCTION_14
0x400074e	          0x4989fc	                            mov r12, rdi	       270	update-index.c	FUNCTION_14
0x4000751	          0x4989f5	                            mov r13, rsi	       270	update-index.c	FUNCTION_14
0x4000754	          0x4189d6	                           mov r14d, edx	       270	update-index.c	FUNCTION_14
0x4000757	          0x4889cd	                            mov rbp, rcx	       270	update-index.c	FUNCTION_14
0x400075a	          0x4885ff	                           test rdi, rdi	       275	update-index.c	FUNCTION_14	IF_1
0x400075d	            0x7426	                            je 0x4000785	       275	update-index.c	FUNCTION_14	IF_1
0x400075f	    0xf74738003000	        test dword [rdi + 0x38], 0x3000 	       275	update-index.c	FUNCTION_14	IF_1
0x4000766	            0x751d	                           jne 0x4000785	       275	update-index.c	FUNCTION_14	IF_1
0x4000768	      0xb900000000	                              mov ecx, 0	       275	update-index.c	FUNCTION_14	IF_1
0x400076d	          0x4889ea	                            mov rdx, rbp	       275	update-index.c	FUNCTION_14	IF_1
0x4000770	          0x4889fe	                            mov rsi, rdi	       275	update-index.c	FUNCTION_14	IF_1
0x4000773	      0xbf00000000	                              mov edi, 0	       275	update-index.c	FUNCTION_14	IF_1
0x4000778	      0xe800000000	                          call 0x400077d	       275	update-index.c	FUNCTION_14	IF_1
0x400077d	            0x85c0	                           test eax, eax	       275	update-index.c	FUNCTION_14	IF_1
0x400077f	     0xf845f010000	                            je 0x40008e4	       275	update-index.c	FUNCTION_14	IF_1
0x4000785	        0x418d7659	                   lea esi, [r14 + 0x59]	       279	update-index.c	FUNCTION_14	CALL_1
0x4000789	          0x4863f6	                         movsxd rsi, esi	       279	update-index.c	FUNCTION_14	CALL_1
0x400078c	      0xbf01000000	                              mov edi, 1	       279	update-index.c	FUNCTION_14	CALL_1
0x4000791	      0xe800000000	                          call 0x4000796	       279	update-index.c	FUNCTION_14	CALL_1
0x4000796	          0x4889c3	                            mov rbx, rax	       279	update-index.c	FUNCTION_14	CALL_1
0x4000799	        0x488d7858	                   lea rdi, [rax + 0x58]	        53	string3.h	FUNCTION_82	CALL_3
0x400079d	          0x4963d6	                        movsxd rdx, r14d	        53	string3.h	FUNCTION_82	CALL_3
0x40007a0	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_82	CALL_3
0x40007a3	      0xe800000000	                          call 0x40007a8	        53	string3.h	FUNCTION_82	CALL_3
0x40007a8	    0xc74338000000	               mov dword [rbx + 0x38], 0	       281	update-index.c	FUNCTION_14	CALL_3
0x40007af	        0x4489733c	            mov dword [rbx + 0x3c], r14d	       282	update-index.c	FUNCTION_14
0x40007b3	          0x4889ee	                            mov rsi, rbp	       283	update-index.c	FUNCTION_14	CALL_4
0x40007b6	          0x4889df	                            mov rdi, rbx	       283	update-index.c	FUNCTION_14	CALL_4
0x40007b9	      0xe800000000	                          call 0x40007be	       283	update-index.c	FUNCTION_14	CALL_4
0x40007be	          0x8b5518	            mov edx, dword [rbp + 0x18] 	       284	update-index.c	FUNCTION_14	CALL_5
0x40007c1	    0x833d00000000	               cmp dword [0x040007c8], 0	       266	cache.h	FUNCTION_58	IF_1	CALL_1
0x40007c8	            0x7528	                           jne 0x40007f2	       266	cache.h	FUNCTION_58	IF_1	CALL_1
0x40007ca	            0x89d0	                            mov eax, edx	       266	cache.h	FUNCTION_58	IF_1	CALL_1
0x40007cc	      0x2500f00000	                         and eax, 0xf000	       266	cache.h	FUNCTION_58	IF_1	CALL_1
0x40007d1	      0x3d00800000	                         cmp eax, 0x8000	       266	cache.h	FUNCTION_58	IF_1	CALL_1
0x40007d6	            0x751a	                           jne 0x40007f2	       266	cache.h	FUNCTION_58	IF_1	CALL_1
0x40007d8	          0x4d85e4	                           test r12, r12	       266	cache.h	FUNCTION_58	IF_1	CALL_1
0x40007db	            0x7415	                            je 0x40007f2	       266	cache.h	FUNCTION_58	IF_1	CALL_1
0x40007dd	      0x418b442434	            mov eax, dword [r12 + 0x34] 	       267	cache.h	FUNCTION_58	IF_1	CALL_2
0x40007e2	            0x89c1	                            mov ecx, eax	       267	cache.h	FUNCTION_58	IF_1	CALL_2
0x40007e4	    0x81e100f00000	                         and ecx, 0xf000	       267	cache.h	FUNCTION_58	IF_1	CALL_2
0x40007ea	    0x81f900a00000	                         cmp ecx, 0xa000	       267	cache.h	FUNCTION_58	IF_1	CALL_2
0x40007f0	            0x7471	                            je 0x4000863	       267	cache.h	FUNCTION_58	IF_1	CALL_2
0x40007f2	    0x833d00000000	               cmp dword [0x040007f9], 0	       269	cache.h	FUNCTION_58	IF_2	CALL_3
0x40007f9	            0x7535	                           jne 0x4000830	       269	cache.h	FUNCTION_58	IF_2	CALL_3
0x40007fb	            0x89d0	                            mov eax, edx	       269	cache.h	FUNCTION_58	IF_2	CALL_3
0x40007fd	      0x2500f00000	                         and eax, 0xf000	       269	cache.h	FUNCTION_58	IF_2	CALL_3
0x4000802	      0x3d00800000	                         cmp eax, 0x8000	       269	cache.h	FUNCTION_58	IF_2	CALL_3
0x4000807	            0x7527	                           jne 0x4000830	       269	cache.h	FUNCTION_58	IF_2	CALL_3
0x4000809	      0xb8a4810000	                         mov eax, 0x81a4	       272	cache.h	FUNCTION_58	IF_2	CALL_5
0x400080e	          0x4d85e4	                           test r12, r12	       270	cache.h	FUNCTION_58	IF_2	IF_3	CALL_4
0x4000811	            0x7450	                            je 0x4000863	       270	cache.h	FUNCTION_58	IF_2	IF_3	CALL_4
0x4000813	      0x418b442434	            mov eax, dword [r12 + 0x34] 	       270	cache.h	FUNCTION_58	IF_2	IF_3	CALL_4
0x4000818	            0x89c2	                            mov edx, eax	       270	cache.h	FUNCTION_58	IF_2	IF_3	CALL_4
0x400081a	    0x81e200f00000	                         and edx, 0xf000	       270	cache.h	FUNCTION_58	IF_2	IF_3	CALL_4
0x4000820	    0x81fa00800000	                         cmp edx, 0x8000	       272	cache.h	FUNCTION_58	IF_2	CALL_5
0x4000826	      0xbaa4810000	                         mov edx, 0x81a4	       272	cache.h	FUNCTION_58	IF_2	CALL_5
0x400082b	           0xf45c2	                         cmovne eax, edx	       272	cache.h	FUNCTION_58	IF_2	CALL_5
0x400082e	            0xeb33	                           jmp 0x4000863	       272	cache.h	FUNCTION_58	IF_2	CALL_5
0x4000830	            0x89d0	                            mov eax, edx	       256	cache.h	FUNCTION_57	IF_1	CALL_1
0x4000832	      0x2500f00000	                         and eax, 0xf000	       256	cache.h	FUNCTION_57	IF_1	CALL_1
0x4000837	      0x3d00a00000	                         cmp eax, 0xa000	       256	cache.h	FUNCTION_57	IF_1	CALL_1
0x400083c	            0x7425	                            je 0x4000863	       256	cache.h	FUNCTION_57	IF_1	CALL_1
0x400083e	      0x3d00400000	                         cmp eax, 0x4000	       258	cache.h	FUNCTION_57	IF_2	CALL_2
0x4000843	            0x7419	                            je 0x400085e	       258	cache.h	FUNCTION_57	IF_2	CALL_2
0x4000845	      0x3d00e00000	                         cmp eax, 0xe000	       258	cache.h	FUNCTION_57	IF_2	CALL_2
0x400084a	            0x7412	                            je 0x400085e	       258	cache.h	FUNCTION_57	IF_2	CALL_2
0x400084c	          0x83e240	                           and edx, 0x40	       260	cache.h	FUNCTION_57
0x400084f	          0x83fa01	                              cmp edx, 1	       260	cache.h	FUNCTION_57
0x4000852	            0x19c0	                            sbb eax, eax	       260	cache.h	FUNCTION_57
0x4000854	          0x83e0b7	                     and eax, 0xffffffb7	       260	cache.h	FUNCTION_57
0x4000857	       0x5ed810000	                         add eax, 0x81ed	       260	cache.h	FUNCTION_57
0x400085c	            0xeb05	                           jmp 0x4000863	       260	cache.h	FUNCTION_57
0x400085e	      0xb800e00000	                         mov eax, 0xe000	       259	cache.h	FUNCTION_57	IF_2
0x4000863	          0x894334	             mov dword [rbx + 0x34], eax	       284	update-index.c	FUNCTION_14	CALL_5
0x4000866	    0x833d00000000	               cmp dword [0x0400086d], 0	       286	update-index.c	FUNCTION_14	IF_2	CALL_6
0x400086d	           0xf94c1	                                 sete cl	       286	update-index.c	FUNCTION_14	IF_2	CALL_6
0x4000870	           0xfb6c9	                           movzx ecx, cl	       286	update-index.c	FUNCTION_14	IF_2	CALL_6
0x4000873	        0x488d7b44	                   lea rdi, [rbx + 0x44]	       286	update-index.c	FUNCTION_14	IF_2	CALL_6
0x4000877	          0x4889ea	                            mov rdx, rbp	       286	update-index.c	FUNCTION_14	IF_2	CALL_6
0x400087a	          0x4c89ee	                            mov rsi, r13	       286	update-index.c	FUNCTION_14	IF_2	CALL_6
0x400087d	      0xe800000000	                          call 0x4000882	       286	update-index.c	FUNCTION_14	IF_2	CALL_6
0x4000882	            0x85c0	                           test eax, eax	       286	update-index.c	FUNCTION_14	IF_2	CALL_6
0x4000884	            0x740f	                            je 0x4000895	       286	update-index.c	FUNCTION_14	IF_2	CALL_6
0x4000886	          0x4889df	                            mov rdi, rbx	       288	update-index.c	FUNCTION_14	IF_2	CALL_7
0x4000889	      0xe800000000	                          call 0x400088e	       288	update-index.c	FUNCTION_14	IF_2	CALL_7
0x400088e	      0xb8ffffffff	                     mov eax, 0xffffffff	       289	update-index.c	FUNCTION_14	IF_2
0x4000893	            0xeb4f	                           jmp 0x40008e4	       289	update-index.c	FUNCTION_14	IF_2
0x4000895	    0x833d00000000	               cmp dword [0x0400089c], 0	       291	update-index.c	FUNCTION_14
0x400089c	           0xf95c0	                                setne al	       291	update-index.c	FUNCTION_14
0x400089f	           0xfb6c0	                           movzx eax, al	       291	update-index.c	FUNCTION_14
0x40008a2	    0x8b1500000000	            mov edx, dword [0x040008a8] 	       292	update-index.c	FUNCTION_14
0x40008a8	            0x85d2	                           test edx, edx	       292	update-index.c	FUNCTION_14
0x40008aa	      0xb902000000	                              mov ecx, 2	       292	update-index.c	FUNCTION_14
0x40008af	           0xf45d1	                         cmovne edx, ecx	       292	update-index.c	FUNCTION_14
0x40008b2	             0x9c2	                             or edx, eax	       293	update-index.c	FUNCTION_14	IF_3
0x40008b4	          0x4889de	                            mov rsi, rbx	       293	update-index.c	FUNCTION_14	IF_3
0x40008b7	      0xbf00000000	                              mov edi, 0	       293	update-index.c	FUNCTION_14	IF_3
0x40008bc	      0xe800000000	                          call 0x40008c1	       293	update-index.c	FUNCTION_14	IF_3
0x40008c1	            0x85c0	                           test eax, eax	       293	update-index.c	FUNCTION_14	IF_3
0x40008c3	            0x741f	                            je 0x40008e4	       293	update-index.c	FUNCTION_14	IF_3
0x40008c5	          0x4889df	                            mov rdi, rbx	       294	update-index.c	FUNCTION_14	IF_3	CALL_8
0x40008c8	      0xe800000000	                          call 0x40008cd	       294	update-index.c	FUNCTION_14	IF_3	CALL_8
0x40008cd	          0x4c89ee	                            mov rsi, r13	       295	update-index.c	FUNCTION_14	IF_3
0x40008d0	      0xbf00000000	                              mov edi, 0	       295	update-index.c	FUNCTION_14	IF_3
0x40008d5	      0xb800000000	                              mov eax, 0	       295	update-index.c	FUNCTION_14	IF_3
0x40008da	      0xe800000000	                          call 0x40008df	       295	update-index.c	FUNCTION_14	IF_3
0x40008df	      0xb8ffffffff	                     mov eax, 0xffffffff	       295	update-index.c	FUNCTION_14	IF_3
0x40008e4	              0x5b	                                 pop rbx	       298	update-index.c	FUNCTION_14
0x40008e5	              0x5d	                                 pop rbp	       298	update-index.c	FUNCTION_14
0x40008e6	            0x415c	                                 pop r12	       298	update-index.c	FUNCTION_14
0x40008e8	            0x415d	                                 pop r13	       298	update-index.c	FUNCTION_14
0x40008ea	            0x415e	                                 pop r14	       298	update-index.c	FUNCTION_14
0x40008ec	              0xc3	                                     ret	       298	update-index.c	FUNCTION_14
stdin_callback	SWITCH,0:DO,0:WHILE,0:CALL,0:FOR,0:ELSE,0:IF,1:functions,0	15
0x4000040	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       874	update-index.c	FUNCTION_34
0x4000044	        0x837f1001	               cmp dword [rdi + 0x10], 1	       876	update-index.c	FUNCTION_34	IF_1
0x4000048	            0x741e	                            je 0x4000068	       876	update-index.c	FUNCTION_34	IF_1
0x400004a	        0x4883ec08	                              sub rsp, 8	       873	update-index.c	FUNCTION_34
0x400004e	        0x488b7608	                mov rsi, qword [rsi + 8]	       877	update-index.c	FUNCTION_34	IF_1
0x4000052	      0xbf00000000	                              mov edi, 0	       877	update-index.c	FUNCTION_34	IF_1
0x4000057	      0xb800000000	                              mov eax, 0	       877	update-index.c	FUNCTION_34	IF_1
0x400005c	      0xe800000000	                          call 0x4000061	       877	update-index.c	FUNCTION_34	IF_1
0x4000061	      0xb8ffffffff	                     mov eax, 0xffffffff	       877	update-index.c	FUNCTION_34	IF_1
0x4000066	            0xeb0c	                           jmp 0x4000074	       877	update-index.c	FUNCTION_34	IF_1
0x4000068	    0xc70001000000	                      mov dword [rax], 1	       878	update-index.c	FUNCTION_34
0x400006e	      0xb800000000	                              mov eax, 0	       879	update-index.c	FUNCTION_34
0x4000073	              0xc3	                                     ret	       879	update-index.c	FUNCTION_34
0x4000074	        0x4883c408	                              add rsp, 8	       880	update-index.c	FUNCTION_34
0x4000078	              0xc3	                                     ret	       880	update-index.c	FUNCTION_34
refresh	SWITCH,0:DO,0:WHILE,0:CALL,1:FOR,0:ELSE,0:IF,0:functions,0	23
0x40005b4	              0x55	                                push rbp	       776	update-index.c	FUNCTION_26
0x40005b5	              0x53	                                push rbx	       776	update-index.c	FUNCTION_26
0x40005b6	        0x4883ec08	                              sub rsp, 8	       776	update-index.c	FUNCTION_26
0x40005ba	          0x4889fd	                            mov rbp, rdi	       776	update-index.c	FUNCTION_26
0x40005bd	            0x89f3	                            mov ebx, esi	       776	update-index.c	FUNCTION_26
0x40005bf	      0xe800000000	                          call 0x40005c4	       777	update-index.c	FUNCTION_26	CALL_1
0x40005c4	      0xbe00000000	                              mov esi, 0	       778	update-index.c	FUNCTION_26
0x40005c9	      0xbf00000000	                              mov edi, 0	       778	update-index.c	FUNCTION_26
0x40005ce	      0xe800000000	                          call 0x40005d3	       778	update-index.c	FUNCTION_26
0x40005d3	           0xb5d00	                     or ebx, dword [rbp]	       779	update-index.c	FUNCTION_26
0x40005d6	            0x89de	                            mov esi, ebx	       779	update-index.c	FUNCTION_26
0x40005d8	    0x41b800000000	                              mov r8d, 0	       779	update-index.c	FUNCTION_26
0x40005de	      0xb900000000	                              mov ecx, 0	       779	update-index.c	FUNCTION_26
0x40005e3	      0xba00000000	                              mov edx, 0	       779	update-index.c	FUNCTION_26
0x40005e8	      0xbf00000000	                              mov edi, 0	       779	update-index.c	FUNCTION_26
0x40005ed	      0xe800000000	                          call 0x40005f2	       779	update-index.c	FUNCTION_26
0x40005f2	        0x488b5508	                mov rdx, qword [rbp + 8]	       779	update-index.c	FUNCTION_26
0x40005f6	             0x902	                     or dword [rdx], eax	       779	update-index.c	FUNCTION_26
0x40005f8	      0xb800000000	                              mov eax, 0	       781	update-index.c	FUNCTION_26
0x40005fd	        0x4883c408	                              add rsp, 8	       781	update-index.c	FUNCTION_26
0x4000601	              0x5b	                                 pop rbx	       781	update-index.c	FUNCTION_26
0x4000602	              0x5d	                                 pop rbp	       781	update-index.c	FUNCTION_26
0x4000603	              0xc3	                                     ret	       781	update-index.c	FUNCTION_26
chmod_callback	SWITCH,0:DO,0:WHILE,0:CALL,0:FOR,0:ELSE,0:IF,1:functions,0	19
0x4000079	        0x4883ec08	                              sub rsp, 8	       797	update-index.c	FUNCTION_29
0x400007d	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	       798	update-index.c	FUNCTION_29
0x4000081	           0xfb606	                   movzx eax, byte [rsi]	       799	update-index.c	FUNCTION_29	IF_1
0x4000084	          0x8d50d5	                   lea edx, [rax - 0x2b]	       799	update-index.c	FUNCTION_29	IF_1
0x4000087	          0xf6c2fd	                           test dl, 0xfd	       799	update-index.c	FUNCTION_29	IF_1
0x400008a	            0x750c	                           jne 0x4000098	       799	update-index.c	FUNCTION_29	IF_1
0x400008c	        0x807e0178	                cmp byte [rsi + 1], 0x78	       799	update-index.c	FUNCTION_29	IF_1
0x4000090	            0x7506	                           jne 0x4000098	       799	update-index.c	FUNCTION_29	IF_1
0x4000092	        0x807e0200	                   cmp byte [rsi + 2], 0	       799	update-index.c	FUNCTION_29	IF_1
0x4000096	            0x7416	                            je 0x40000ae	       799	update-index.c	FUNCTION_29	IF_1
0x4000098	      0xbf00000000	                              mov edi, 0	       800	update-index.c	FUNCTION_29	IF_1
0x400009d	      0xb800000000	                              mov eax, 0	       800	update-index.c	FUNCTION_29	IF_1
0x40000a2	      0xe800000000	                          call 0x40000a7	       800	update-index.c	FUNCTION_29	IF_1
0x40000a7	      0xb8ffffffff	                     mov eax, 0xffffffff	       800	update-index.c	FUNCTION_29	IF_1
0x40000ac	            0xeb07	                           jmp 0x40000b5	       800	update-index.c	FUNCTION_29	IF_1
0x40000ae	            0x8801	                      mov byte [rcx], al	       801	update-index.c	FUNCTION_29
0x40000b0	      0xb800000000	                              mov eax, 0	       802	update-index.c	FUNCTION_29
0x40000b5	        0x4883c408	                              add rsp, 8	       803	update-index.c	FUNCTION_29
0x40000b9	              0xc3	                                     ret	       803	update-index.c	FUNCTION_29
cacheinfo_callback	SWITCH,0:DO,0:WHILE,0:CALL,7:FOR,0:ELSE,0:IF,4:functions,0	125
0x4000ba0	            0x4155	                                push r13	       837	update-index.c	FUNCTION_32
0x4000ba2	            0x4154	                                push r12	       837	update-index.c	FUNCTION_32
0x4000ba4	              0x55	                                push rbp	       837	update-index.c	FUNCTION_32
0x4000ba5	              0x53	                                push rbx	       837	update-index.c	FUNCTION_32
0x4000ba6	        0x4883ec38	                           sub rsp, 0x38	       837	update-index.c	FUNCTION_32
0x4000baa	          0x4889fb	                            mov rbx, rdi	       837	update-index.c	FUNCTION_32
0x4000bad	    0x64488b042528	                mov rax, qword fs:[0x28]	       837	update-index.c	FUNCTION_32
0x4000bb6	      0x4889442428	             mov qword [rsp + 0x28], rax	       837	update-index.c	FUNCTION_32
0x4000bbb	            0x31c0	                            xor eax, eax	       837	update-index.c	FUNCTION_32
0x4000bbd	          0x488b07	                    mov rax, qword [rdi]	       842	update-index.c	FUNCTION_32	IF_1	CALL_1
0x4000bc0	        0x488b6808	                mov rbp, qword [rax + 8]	       842	update-index.c	FUNCTION_32	IF_1	CALL_1
0x4000bc4	          0x4885ed	                           test rbp, rbp	       820	update-index.c	FUNCTION_31	IF_1
0x4000bc7	     0xf849b010000	                            je 0x4000d68	       820	update-index.c	FUNCTION_31	IF_1
0x4000bcd	      0xe800000000	                          call 0x4000bd2	       823	update-index.c	FUNCTION_31
0x4000bd2	          0x4989c5	                            mov r13, rax	       823	update-index.c	FUNCTION_31
0x4000bd5	    0xc70000000000	                      mov dword [rax], 0	       823	update-index.c	FUNCTION_31
0x4000bdb	      0xba08000000	                              mov edx, 8	       824	update-index.c	FUNCTION_31	CALL_1
0x4000be0	      0x488d742408	                      lea rsi, [rsp + 8]	       824	update-index.c	FUNCTION_31	CALL_1
0x4000be5	          0x4889ef	                            mov rdi, rbp	       824	update-index.c	FUNCTION_31	CALL_1
0x4000be8	      0xe800000000	                          call 0x4000bed	       824	update-index.c	FUNCTION_31	CALL_1
0x4000bed	          0x4989c4	                            mov r12, rax	       824	update-index.c	FUNCTION_31	CALL_1
0x4000bf0	      0x41837d0000	                      cmp dword [r13], 0	       825	update-index.c	FUNCTION_31	IF_2
0x4000bf5	     0xf856d010000	                           jne 0x4000d68	       825	update-index.c	FUNCTION_31	IF_2
0x4000bfb	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       825	update-index.c	FUNCTION_31	IF_2
0x4000c00	          0x4839fd	                            cmp rbp, rdi	       825	update-index.c	FUNCTION_31	IF_2
0x4000c03	     0xf845f010000	                            je 0x4000d68	       825	update-index.c	FUNCTION_31	IF_2
0x4000c09	          0x803f2c	                    cmp byte [rdi], 0x2c	       825	update-index.c	FUNCTION_31	IF_2
0x4000c0c	     0xf8556010000	                           jne 0x4000d68	       825	update-index.c	FUNCTION_31	IF_2
0x4000c12	            0x89c0	                            mov eax, eax	       825	update-index.c	FUNCTION_31	IF_2
0x4000c14	          0x4939c4	                            cmp r12, rax	       825	update-index.c	FUNCTION_31	IF_2
0x4000c17	     0xf854b010000	                           jne 0x4000d68	       825	update-index.c	FUNCTION_31	IF_2
0x4000c1d	        0x4883c701	                              add rdi, 1	       828	update-index.c	FUNCTION_31
0x4000c21	      0x48897c2408	                mov qword [rsp + 8], rdi	       828	update-index.c	FUNCTION_31
0x4000c26	      0x488d742410	                   lea rsi, [rsp + 0x10]	       829	update-index.c	FUNCTION_31	IF_3	CALL_2
0x4000c2b	      0xe800000000	                          call 0x4000c30	       829	update-index.c	FUNCTION_31	IF_3	CALL_2
0x4000c30	            0x85c0	                           test eax, eax	       829	update-index.c	FUNCTION_31	IF_3	CALL_2
0x4000c32	     0xf8530010000	                           jne 0x4000d68	       829	update-index.c	FUNCTION_31	IF_3	CALL_2
0x4000c38	      0x488b742408	                mov rsi, qword [rsp + 8]	       829	update-index.c	FUNCTION_31	IF_3	CALL_2
0x4000c3d	        0x807e282c	            cmp byte [rsi + 0x28], 0x2c 	       829	update-index.c	FUNCTION_31	IF_3	CALL_2
0x4000c41	     0xf8521010000	                           jne 0x4000d68	       829	update-index.c	FUNCTION_31	IF_3	CALL_2
0x4000c47	        0x488d6e29	                   lea rbp, [rsi + 0x29]	       831	update-index.c	FUNCTION_31
0x4000c4b	      0xb900000000	                              mov ecx, 0	       843	update-index.c	FUNCTION_32	IF_1	IF_2	CALL_2
0x4000c50	          0x4889ea	                            mov rdx, rbp	       843	update-index.c	FUNCTION_32	IF_1	IF_2	CALL_2
0x4000c53	      0x488d742410	                   lea rsi, [rsp + 0x10]	       843	update-index.c	FUNCTION_32	IF_1	IF_2	CALL_2
0x4000c58	          0x4489e7	                           mov edi, r12d	       843	update-index.c	FUNCTION_32	IF_1	IF_2	CALL_2
0x4000c5b	      0xe8edfdffff	                  call sym.add_cacheinfo	       843	update-index.c	FUNCTION_32	IF_1	IF_2	CALL_2
0x4000c60	            0x85c0	                           test eax, eax	       843	update-index.c	FUNCTION_32	IF_1	IF_2	CALL_2
0x4000c62	            0x7412	                            je 0x4000c76	       843	update-index.c	FUNCTION_32	IF_1	IF_2	CALL_2
0x4000c64	          0x4889ee	                            mov rsi, rbp	       844	update-index.c	FUNCTION_32	IF_1	CALL_3
0x4000c67	      0xbf00000000	                              mov edi, 0	       844	update-index.c	FUNCTION_32	IF_1	CALL_3
0x4000c6c	      0xb800000000	                              mov eax, 0	       844	update-index.c	FUNCTION_32	IF_1	CALL_3
0x4000c71	      0xe800000000	                          call 0x4000c76	       844	update-index.c	FUNCTION_32	IF_1	CALL_3
0x4000c76	        0x48830308	                      add qword [rbx], 8	       845	update-index.c	FUNCTION_32	IF_1
0x4000c7a	        0x836b1001	               sub dword [rbx + 0x10], 1	       846	update-index.c	FUNCTION_32	IF_1
0x4000c7e	      0xe9d3000000	                           jmp 0x4000d56	       847	update-index.c	FUNCTION_32	IF_1
0x4000c83	      0xbf00000000	                              mov edi, 0	       850	update-index.c	FUNCTION_32	IF_3
0x4000c88	      0xb800000000	                              mov eax, 0	       850	update-index.c	FUNCTION_32	IF_3
0x4000c8d	      0xe800000000	                          call 0x4000c92	       850	update-index.c	FUNCTION_32	IF_3
0x4000c92	      0xb8ffffffff	                     mov eax, 0xffffffff	       850	update-index.c	FUNCTION_32	IF_3
0x4000c97	      0xe9ba000000	                           jmp 0x4000d56	       850	update-index.c	FUNCTION_32	IF_3
0x4000c9c	          0x488b03	                    mov rax, qword [rbx]	       851	update-index.c	FUNCTION_32	IF_4	CALL_4
0x4000c9f	        0x488d5008	                      lea rdx, [rax + 8]	       851	update-index.c	FUNCTION_32	IF_4	CALL_4
0x4000ca3	          0x488913	                    mov qword [rbx], rdx	       851	update-index.c	FUNCTION_32	IF_4	CALL_4
0x4000ca6	        0x488b6808	                mov rbp, qword [rax + 8]	       851	update-index.c	FUNCTION_32	IF_4	CALL_4
0x4000caa	      0xe800000000	                          call 0x4000caf	      1014	git-compat-util.h	FUNCTION_124
0x4000caf	          0x4989c5	                            mov r13, rax	      1014	git-compat-util.h	FUNCTION_124
0x4000cb2	    0xc70000000000	                      mov dword [rax], 0	      1014	git-compat-util.h	FUNCTION_124
0x4000cb8	      0xbe2d000000	                           mov esi, 0x2d	      1016	git-compat-util.h	FUNCTION_124	IF_1	CALL_1
0x4000cbd	          0x4889ef	                            mov rdi, rbp	      1016	git-compat-util.h	FUNCTION_124	IF_1	CALL_1
0x4000cc0	      0xe800000000	                          call 0x4000cc5	      1016	git-compat-util.h	FUNCTION_124	IF_1	CALL_1
0x4000cc5	          0x4885c0	                           test rax, rax	      1016	git-compat-util.h	FUNCTION_124	IF_1	CALL_1
0x4000cc8	            0x7573	                           jne 0x4000d3d	      1016	git-compat-util.h	FUNCTION_124	IF_1	CALL_1
0x4000cca	      0xba08000000	                              mov edx, 8	      1018	git-compat-util.h	FUNCTION_124	CALL_2
0x4000ccf	      0x488d742408	                      lea rsi, [rsp + 8]	      1018	git-compat-util.h	FUNCTION_124	CALL_2
0x4000cd4	          0x4889ef	                            mov rdi, rbp	      1018	git-compat-util.h	FUNCTION_124	CALL_2
0x4000cd7	      0xe800000000	                          call 0x4000cdc	      1018	git-compat-util.h	FUNCTION_124	CALL_2
0x4000cdc	          0x4989c4	                            mov r12, rax	      1018	git-compat-util.h	FUNCTION_124	CALL_2
0x4000cdf	      0x41837d0000	                      cmp dword [r13], 0	      1019	git-compat-util.h	FUNCTION_124	IF_2
0x4000ce4	            0x7557	                           jne 0x4000d3d	      1019	git-compat-util.h	FUNCTION_124	IF_2
0x4000ce6	      0x488b442408	                mov rax, qword [rsp + 8]	      1019	git-compat-util.h	FUNCTION_124	IF_2
0x4000ceb	          0x803800	                       cmp byte [rax], 0	      1019	git-compat-util.h	FUNCTION_124	IF_2
0x4000cee	            0x754d	                           jne 0x4000d3d	      1019	git-compat-util.h	FUNCTION_124	IF_2
0x4000cf0	          0x4839c5	                            cmp rbp, rax	      1019	git-compat-util.h	FUNCTION_124	IF_2
0x4000cf3	            0x7448	                            je 0x4000d3d	      1019	git-compat-util.h	FUNCTION_124	IF_2
0x4000cf5	          0x4489e0	                           mov eax, r12d	      1019	git-compat-util.h	FUNCTION_124	IF_2
0x4000cf8	          0x4939c4	                            cmp r12, rax	      1019	git-compat-util.h	FUNCTION_124	IF_2
0x4000cfb	            0x7540	                           jne 0x4000d3d	      1019	git-compat-util.h	FUNCTION_124	IF_2
0x4000cfd	          0x488b03	                    mov rax, qword [rbx]	       852	update-index.c	FUNCTION_32	IF_4	CALL_5
0x4000d00	        0x488d5008	                      lea rdx, [rax + 8]	       851	update-index.c	FUNCTION_32	IF_4	CALL_4
0x4000d04	          0x488913	                    mov qword [rbx], rdx	       851	update-index.c	FUNCTION_32	IF_4	CALL_4
0x4000d07	        0x488b7808	                mov rdi, qword [rax + 8]	       852	update-index.c	FUNCTION_32	IF_4	CALL_5
0x4000d0b	      0x488d742410	                   lea rsi, [rsp + 0x10]	       852	update-index.c	FUNCTION_32	IF_4	CALL_5
0x4000d10	      0xe800000000	                          call 0x4000d15	       852	update-index.c	FUNCTION_32	IF_4	CALL_5
0x4000d15	            0x85c0	                           test eax, eax	       851	update-index.c	FUNCTION_32	IF_4	CALL_4
0x4000d17	            0x7524	                           jne 0x4000d3d	       851	update-index.c	FUNCTION_32	IF_4	CALL_4
0x4000d19	          0x488b03	                    mov rax, qword [rbx]	       853	update-index.c	FUNCTION_32	IF_4	CALL_6
0x4000d1c	        0x488d5008	                      lea rdx, [rax + 8]	       852	update-index.c	FUNCTION_32	IF_4	CALL_5
0x4000d20	          0x488913	                    mov qword [rbx], rdx	       852	update-index.c	FUNCTION_32	IF_4	CALL_5
0x4000d23	        0x488b5008	                mov rdx, qword [rax + 8]	       853	update-index.c	FUNCTION_32	IF_4	CALL_6
0x4000d27	      0xb900000000	                              mov ecx, 0	       853	update-index.c	FUNCTION_32	IF_4	CALL_6
0x4000d2c	      0x488d742410	                   lea rsi, [rsp + 0x10]	       853	update-index.c	FUNCTION_32	IF_4	CALL_6
0x4000d31	          0x4489e7	                           mov edi, r12d	       853	update-index.c	FUNCTION_32	IF_4	CALL_6
0x4000d34	      0xe814fdffff	                  call sym.add_cacheinfo	       853	update-index.c	FUNCTION_32	IF_4	CALL_6
0x4000d39	            0x85c0	                           test eax, eax	       852	update-index.c	FUNCTION_32	IF_4	CALL_5
0x4000d3b	            0x7415	                            je 0x4000d52	       852	update-index.c	FUNCTION_32	IF_4	CALL_5
0x4000d3d	          0x488b03	                    mov rax, qword [rbx]	       854	update-index.c	FUNCTION_32	CALL_7
0x4000d40	          0x488b30	                    mov rsi, qword [rax]	       854	update-index.c	FUNCTION_32	CALL_7
0x4000d43	      0xbf00000000	                              mov edi, 0	       854	update-index.c	FUNCTION_32	CALL_7
0x4000d48	      0xb800000000	                              mov eax, 0	       854	update-index.c	FUNCTION_32	CALL_7
0x4000d4d	      0xe800000000	                          call 0x4000d52	       854	update-index.c	FUNCTION_32	CALL_7
0x4000d52	        0x836b1003	               sub dword [rbx + 0x10], 3	       855	update-index.c	FUNCTION_32
0x4000d56	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       857	update-index.c	FUNCTION_32
0x4000d5b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       857	update-index.c	FUNCTION_32
0x4000d64	            0x7416	                            je 0x4000d7c	       857	update-index.c	FUNCTION_32
0x4000d66	            0xeb0f	                           jmp 0x4000d77	       857	update-index.c	FUNCTION_32
0x4000d68	        0x837b1003	               cmp dword [rbx + 0x10], 3	       849	update-index.c	FUNCTION_32	IF_3
0x4000d6c	     0xf8f2affffff	                            jg 0x4000c9c	       849	update-index.c	FUNCTION_32	IF_3
0x4000d72	      0xe90cffffff	                           jmp 0x4000c83	       849	update-index.c	FUNCTION_32	IF_3
0x4000d77	      0xe800000000	                          call 0x4000d7c	       857	update-index.c	FUNCTION_32
0x4000d7c	        0x4883c438	                           add rsp, 0x38	       857	update-index.c	FUNCTION_32
0x4000d80	              0x5b	                                 pop rbx	       857	update-index.c	FUNCTION_32
0x4000d81	              0x5d	                                 pop rbp	       857	update-index.c	FUNCTION_32
0x4000d82	            0x415c	                                 pop r12	       857	update-index.c	FUNCTION_32
0x4000d84	            0x415d	                                 pop r13	       857	update-index.c	FUNCTION_32
0x4000d86	              0xc3	                                     ret	       857	update-index.c	FUNCTION_32
refresh_callback	SWITCH,0:DO,0:WHILE,0:CALL,1:FOR,0:ELSE,0:IF,0:functions,0	6
0x400061b	        0x4883ec08	                              sub rsp, 8	       785	update-index.c	FUNCTION_27
0x400061f	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	       786	update-index.c	FUNCTION_27	CALL_1
0x4000623	      0xbe00000000	                              mov esi, 0	       786	update-index.c	FUNCTION_27	CALL_1
0x4000628	      0xe887ffffff	                        call sym.refresh	       786	update-index.c	FUNCTION_27	CALL_1
0x400062d	        0x4883c408	                              add rsp, 8	       787	update-index.c	FUNCTION_27
0x4000631	              0xc3	                                     ret	       787	update-index.c	FUNCTION_27
remove_test_directory	SWITCH,0:DO,0:WHILE,0:CALL,1:FOR,0:ELSE,0:IF,1:functions,0	8
0x40008ed	    0x48833d000000	               cmp qword [0x040008f5], 0	        66	update-index.c	FUNCTION_2	IF_1
0x40008f5	            0x7417	                            je 0x400090e	        66	update-index.c	FUNCTION_2	IF_1
0x40008f7	        0x4883ec08	                              sub rsp, 8	        65	update-index.c	FUNCTION_2
0x40008fb	      0xbe00000000	                              mov esi, 0	        67	update-index.c	FUNCTION_2	CALL_1
0x4000900	      0xbf00000000	                              mov edi, 0	        67	update-index.c	FUNCTION_2	CALL_1
0x4000905	      0xe800000000	                          call 0x400090a	        67	update-index.c	FUNCTION_2	CALL_1
0x400090a	        0x4883c408	                              add rsp, 8	        68	update-index.c	FUNCTION_2
0x400090e	            0xf3c3	                                     ret	        68	update-index.c	FUNCTION_2
cmd_update_index	SWITCH,2:DO,0:WHILE,2:CALL,89:FOR,0:ELSE,4:IF,29:functions,0	873
0x4001790	            0x4157	                                push r15	       918	update-index.c	FUNCTION_37
0x4001792	            0x4156	                                push r14	       918	update-index.c	FUNCTION_37
0x4001794	            0x4155	                                push r13	       918	update-index.c	FUNCTION_37
0x4001796	            0x4154	                                push r12	       918	update-index.c	FUNCTION_37
0x4001798	              0x55	                                push rbp	       918	update-index.c	FUNCTION_37
0x4001799	              0x53	                                push rbx	       918	update-index.c	FUNCTION_37
0x400179a	    0x4881ec180a00	                          sub rsp, 0xa18	       918	update-index.c	FUNCTION_37
0x40017a1	            0x89fd	                            mov ebp, edi	       918	update-index.c	FUNCTION_37
0x40017a3	          0x4989f4	                            mov r12, rsi	       918	update-index.c	FUNCTION_37
0x40017a6	          0x4889d3	                            mov rbx, rdx	       918	update-index.c	FUNCTION_37
0x40017a9	    0x64488b042528	                mov rax, qword fs:[0x28]	       918	update-index.c	FUNCTION_37
0x40017b2	    0x48898424080a	            mov qword [rsp + 0xa08], rax	       918	update-index.c	FUNCTION_37
0x40017ba	            0x31c0	                            xor eax, eax	       918	update-index.c	FUNCTION_37
0x40017bc	    0xc74424100000	               mov dword [rsp + 0x10], 0	       919	update-index.c	FUNCTION_37
0x40017c4	    0xc74424140000	               mov dword [rsp + 0x14], 0	       919	update-index.c	FUNCTION_37
0x40017cc	    0xc7442418ffff	     mov dword [rsp + 0x18], 0xffffffff 	       920	update-index.c	FUNCTION_37
0x40017d4	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       921	update-index.c	FUNCTION_37
0x40017dc	          0x4885d2	                           test rdx, rdx	       922	update-index.c	FUNCTION_37	CALL_1
0x40017df	            0x7415	                            je 0x40017f6	       922	update-index.c	FUNCTION_37	CALL_1
0x40017e1	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       922	update-index.c	FUNCTION_37	CALL_1
0x40017e8	          0x4889d7	                            mov rdi, rdx	       922	update-index.c	FUNCTION_37	CALL_1
0x40017eb	            0xf2ae	              repne scasb al, byte [rdi]	       922	update-index.c	FUNCTION_37	CALL_1
0x40017ed	          0x48f7d1	                                 not rcx	       922	update-index.c	FUNCTION_37	CALL_1
0x40017f0	        0x448d69ff	                     lea r13d, [rcx - 1]	       922	update-index.c	FUNCTION_37	CALL_1
0x40017f4	            0xeb06	                           jmp 0x40017fc	       922	update-index.c	FUNCTION_37	CALL_1
0x40017f6	    0x41bd00000000	                             mov r13d, 0	       922	update-index.c	FUNCTION_37	CALL_1
0x40017fc	    0xc74424200000	               mov dword [rsp + 0x20], 0	       923	update-index.c	FUNCTION_37
0x4001804	      0xc644240f00	                 mov byte [rsp + 0xf], 0	       924	update-index.c	FUNCTION_37
0x4001809	    0xc74424400000	               mov dword [rsp + 0x40], 0	       925	update-index.c	FUNCTION_37
0x4001811	      0x488d542410	                   lea rdx, [rsp + 0x10]	       925	update-index.c	FUNCTION_37
0x4001816	      0x4889542448	             mov qword [rsp + 0x48], rdx	       925	update-index.c	FUNCTION_37
0x400181b	    0xc7442424ffff	     mov dword [rsp + 0x24], 0xffffffff 	       927	update-index.c	FUNCTION_37
0x4001823	    0xc74424280000	               mov dword [rsp + 0x28], 0	       928	update-index.c	FUNCTION_37
0x400182b	    0xc744242cffff	     mov dword [rsp + 0x2c], 0xffffffff 	       929	update-index.c	FUNCTION_37
0x4001833	    0x48c744243000	               mov qword [rsp + 0x30], 0	       930	update-index.c	FUNCTION_37
0x400183c	    0x488dbc247001	                  lea rdi, [rsp + 0x170]	       934	update-index.c	FUNCTION_37
0x4001844	      0xb910010000	                          mov ecx, 0x110	       934	update-index.c	FUNCTION_37
0x4001849	      0xb800000000	                              mov eax, 0	       934	update-index.c	FUNCTION_37
0x400184e	          0xf348ab	              rep stosq qword [rdi], rax	       934	update-index.c	FUNCTION_37
0x4001851	    0xc78424700100	              mov dword [rsp + 0x170], 4	       934	update-index.c	FUNCTION_37
0x400185c	    0xc78424740100	          mov dword [rsp + 0x174], 0x71 	       934	update-index.c	FUNCTION_37
0x4001867	      0x488d442440	                   lea rax, [rsp + 0x40]	       934	update-index.c	FUNCTION_37
0x400186c	    0x488984248001	            mov qword [rsp + 0x180], rax	       934	update-index.c	FUNCTION_37
0x4001874	    0x48c784249001	              mov qword [rsp + 0x190], 0	       934	update-index.c	FUNCTION_37
0x4001880	    0xc78424980100	              mov dword [rsp + 0x198], 2	       934	update-index.c	FUNCTION_37
0x400188b	    0x48c78424a801	              mov qword [rsp + 0x1a8], 4	       934	update-index.c	FUNCTION_37
0x4001897	    0xc78424b00100	              mov dword [rsp + 0x1b0], 4	       934	update-index.c	FUNCTION_37
0x40018a2	    0x48c78424b801	              mov qword [rsp + 0x1b8], 0	       934	update-index.c	FUNCTION_37
0x40018ae	    0x48898424c001	            mov qword [rsp + 0x1c0], rax	       934	update-index.c	FUNCTION_37
0x40018b6	    0x48c78424d001	              mov qword [rsp + 0x1d0], 0	       934	update-index.c	FUNCTION_37
0x40018c2	    0xc78424d80100	              mov dword [rsp + 0x1d8], 2	       934	update-index.c	FUNCTION_37
0x40018cd	    0x48c78424e801	          mov qword [rsp + 0x1e8], 0x10 	       934	update-index.c	FUNCTION_37
0x40018d9	    0xc78424f00100	              mov dword [rsp + 0x1f0], 7	       934	update-index.c	FUNCTION_37
0x40018e4	    0x48c78424f801	              mov qword [rsp + 0x1f8], 0	       934	update-index.c	FUNCTION_37
0x40018f0	    0x48c784240002	              mov qword [rsp + 0x200], 0	       934	update-index.c	FUNCTION_37
0x40018fc	    0x48c784241002	              mov qword [rsp + 0x210], 0	       934	update-index.c	FUNCTION_37
0x4001908	    0xc78424180200	              mov dword [rsp + 0x218], 2	       934	update-index.c	FUNCTION_37
0x4001913	    0x48c784242802	              mov qword [rsp + 0x228], 1	       934	update-index.c	FUNCTION_37
0x400191f	    0xc78424300200	              mov dword [rsp + 0x230], 7	       934	update-index.c	FUNCTION_37
0x400192a	    0x48c784243802	              mov qword [rsp + 0x238], 0	       934	update-index.c	FUNCTION_37
0x4001936	    0x48c784244002	              mov qword [rsp + 0x240], 0	       934	update-index.c	FUNCTION_37
0x4001942	    0x48c784245002	              mov qword [rsp + 0x250], 0	       934	update-index.c	FUNCTION_37
0x400194e	    0xc78424580200	              mov dword [rsp + 0x258], 2	       934	update-index.c	FUNCTION_37
0x4001959	    0x48c784246802	              mov qword [rsp + 0x268], 1	       934	update-index.c	FUNCTION_37
0x4001965	    0xc78424700200	              mov dword [rsp + 0x270], 7	       934	update-index.c	FUNCTION_37
0x4001970	    0x48c784247802	              mov qword [rsp + 0x278], 0	       934	update-index.c	FUNCTION_37
0x400197c	    0x48c784248002	              mov qword [rsp + 0x280], 0	       934	update-index.c	FUNCTION_37
0x4001988	    0x48c784249002	              mov qword [rsp + 0x290], 0	       934	update-index.c	FUNCTION_37
0x4001994	    0xc78424980200	              mov dword [rsp + 0x298], 2	       934	update-index.c	FUNCTION_37
0x400199f	    0x48c78424a802	              mov qword [rsp + 0x2a8], 1	       934	update-index.c	FUNCTION_37
0x40019ab	    0xc78424b00200	              mov dword [rsp + 0x2b0], 4	       934	update-index.c	FUNCTION_37
0x40019b6	    0x48c78424b802	              mov qword [rsp + 0x2b8], 0	       934	update-index.c	FUNCTION_37
0x40019c2	    0x48898424c002	            mov qword [rsp + 0x2c0], rax	       934	update-index.c	FUNCTION_37
0x40019ca	    0x48c78424d002	              mov qword [rsp + 0x2d0], 0	       934	update-index.c	FUNCTION_37
0x40019d6	    0xc78424d80200	              mov dword [rsp + 0x2d8], 2	       934	update-index.c	FUNCTION_37
0x40019e1	    0x48c78424e802	              mov qword [rsp + 0x2e8], 2	       934	update-index.c	FUNCTION_37
0x40019ed	    0xc78424f00200	           mov dword [rsp + 0x2f0], 0xc 	       934	update-index.c	FUNCTION_37
0x40019f8	    0x48c78424f802	              mov qword [rsp + 0x2f8], 0	       934	update-index.c	FUNCTION_37
0x4001a04	    0x488984240003	            mov qword [rsp + 0x300], rax	       934	update-index.c	FUNCTION_37
0x4001a0c	    0x48c784241003	              mov qword [rsp + 0x310], 0	       934	update-index.c	FUNCTION_37
0x4001a18	    0xc78424180300	              mov dword [rsp + 0x318], 6	       934	update-index.c	FUNCTION_37
0x4001a23	    0x48c784242003	              mov qword [rsp + 0x320], 0	       934	update-index.c	FUNCTION_37
0x4001a2f	    0xc78424300300	           mov dword [rsp + 0x330], 0xc 	       934	update-index.c	FUNCTION_37
0x4001a3a	    0x48c784243803	              mov qword [rsp + 0x338], 0	       934	update-index.c	FUNCTION_37
0x4001a46	    0x488984244003	            mov qword [rsp + 0x340], rax	       934	update-index.c	FUNCTION_37
0x4001a4e	    0x48c784245003	              mov qword [rsp + 0x350], 0	       934	update-index.c	FUNCTION_37
0x4001a5a	    0xc78424580300	              mov dword [rsp + 0x358], 6	       934	update-index.c	FUNCTION_37
0x4001a65	    0x48c784246003	              mov qword [rsp + 0x360], 0	       934	update-index.c	FUNCTION_37
0x4001a71	    0xc78424700300	           mov dword [rsp + 0x370], 0xd 	       934	update-index.c	FUNCTION_37
0x4001a7c	    0x48c784247803	              mov qword [rsp + 0x378], 0	       934	update-index.c	FUNCTION_37
0x4001a88	    0x48c784248803	              mov qword [rsp + 0x388], 0	       934	update-index.c	FUNCTION_37
0x4001a94	    0x48c784249003	              mov qword [rsp + 0x390], 0	       934	update-index.c	FUNCTION_37
0x4001aa0	    0xc78424980300	          mov dword [rsp + 0x398], 0x46 	       934	update-index.c	FUNCTION_37
0x4001aab	    0x48c78424a003	              mov qword [rsp + 0x3a0], 0	       934	update-index.c	FUNCTION_37
0x4001ab7	    0xc78424b00300	           mov dword [rsp + 0x3b0], 0xc 	       934	update-index.c	FUNCTION_37
0x4001ac2	    0x48c78424b803	              mov qword [rsp + 0x3b8], 0	       934	update-index.c	FUNCTION_37
0x4001ace	      0x488d4c240f	                    lea rcx, [rsp + 0xf]	       934	update-index.c	FUNCTION_37
0x4001ad3	    0x48898c24c003	            mov qword [rsp + 0x3c0], rcx	       934	update-index.c	FUNCTION_37
0x4001adb	    0x48c78424c803	              mov qword [rsp + 0x3c8], 0	       934	update-index.c	FUNCTION_37
0x4001ae7	    0x48c78424d003	              mov qword [rsp + 0x3d0], 0	       934	update-index.c	FUNCTION_37
0x4001af3	    0xc78424d80300	          mov dword [rsp + 0x3d8], 0x44 	       934	update-index.c	FUNCTION_37
0x4001afe	    0x48c78424e003	              mov qword [rsp + 0x3e0], 0	       934	update-index.c	FUNCTION_37
0x4001b0a	    0xc78424f00300	              mov dword [rsp + 0x3f0], 7	       934	update-index.c	FUNCTION_37
0x4001b15	    0x48c78424f803	              mov qword [rsp + 0x3f8], 0	       934	update-index.c	FUNCTION_37
0x4001b21	    0x48c784240004	              mov qword [rsp + 0x400], 0	       934	update-index.c	FUNCTION_37
0x4001b2d	    0x48c784241004	              mov qword [rsp + 0x410], 0	       934	update-index.c	FUNCTION_37
0x4001b39	    0xc78424180400	              mov dword [rsp + 0x418], 6	       934	update-index.c	FUNCTION_37
0x4001b44	    0x48c784242804	              mov qword [rsp + 0x428], 1	       934	update-index.c	FUNCTION_37
0x4001b50	    0xc78424300400	              mov dword [rsp + 0x430], 7	       934	update-index.c	FUNCTION_37
0x4001b5b	    0x48c784243804	              mov qword [rsp + 0x438], 0	       934	update-index.c	FUNCTION_37
0x4001b67	    0x48c784244004	              mov qword [rsp + 0x440], 0	       934	update-index.c	FUNCTION_37
0x4001b73	    0x48c784245004	              mov qword [rsp + 0x450], 0	       934	update-index.c	FUNCTION_37
0x4001b7f	    0xc78424580400	              mov dword [rsp + 0x458], 6	       934	update-index.c	FUNCTION_37
0x4001b8a	    0x48c784246804	              mov qword [rsp + 0x468], 2	       934	update-index.c	FUNCTION_37
0x4001b96	    0xc78424700400	              mov dword [rsp + 0x470], 7	       934	update-index.c	FUNCTION_37
0x4001ba1	    0x48c784247804	              mov qword [rsp + 0x478], 0	       934	update-index.c	FUNCTION_37
0x4001bad	    0x48c784248004	              mov qword [rsp + 0x480], 0	       934	update-index.c	FUNCTION_37
0x4001bb9	    0x48c784249004	              mov qword [rsp + 0x490], 0	       934	update-index.c	FUNCTION_37
0x4001bc5	    0xc78424980400	              mov dword [rsp + 0x498], 6	       934	update-index.c	FUNCTION_37
0x4001bd0	    0x48c78424a804	              mov qword [rsp + 0x4a8], 1	       934	update-index.c	FUNCTION_37
0x4001bdc	    0xc78424b00400	              mov dword [rsp + 0x4b0], 7	       934	update-index.c	FUNCTION_37
0x4001be7	    0x48c78424b804	              mov qword [rsp + 0x4b8], 0	       934	update-index.c	FUNCTION_37
0x4001bf3	    0x48c78424c004	              mov qword [rsp + 0x4c0], 0	       934	update-index.c	FUNCTION_37
0x4001bff	    0x48c78424d004	              mov qword [rsp + 0x4d0], 0	       934	update-index.c	FUNCTION_37
0x4001c0b	    0xc78424d80400	              mov dword [rsp + 0x4d8], 6	       934	update-index.c	FUNCTION_37
0x4001c16	    0x48c78424e804	              mov qword [rsp + 0x4e8], 2	       934	update-index.c	FUNCTION_37
0x4001c22	    0xc78424f00400	              mov dword [rsp + 0x4f0], 7	       934	update-index.c	FUNCTION_37
0x4001c2d	    0x48c78424f804	              mov qword [rsp + 0x4f8], 0	       934	update-index.c	FUNCTION_37
0x4001c39	    0x48c784240005	              mov qword [rsp + 0x500], 0	       934	update-index.c	FUNCTION_37
0x4001c45	    0x48c784241005	              mov qword [rsp + 0x510], 0	       934	update-index.c	FUNCTION_37
0x4001c51	    0xc78424180500	              mov dword [rsp + 0x518], 2	       934	update-index.c	FUNCTION_37
0x4001c5c	    0x48c784242805	              mov qword [rsp + 0x528], 1	       934	update-index.c	FUNCTION_37
0x4001c68	    0xc78424300500	              mov dword [rsp + 0x530], 7	       934	update-index.c	FUNCTION_37
0x4001c73	    0x48c784243805	              mov qword [rsp + 0x538], 0	       934	update-index.c	FUNCTION_37
0x4001c7f	    0x48c784244005	              mov qword [rsp + 0x540], 0	       934	update-index.c	FUNCTION_37
0x4001c8b	    0x48c784245005	              mov qword [rsp + 0x550], 0	       934	update-index.c	FUNCTION_37
0x4001c97	    0xc78424580500	              mov dword [rsp + 0x558], 2	       934	update-index.c	FUNCTION_37
0x4001ca2	    0x48c784246805	              mov qword [rsp + 0x568], 1	       934	update-index.c	FUNCTION_37
0x4001cae	    0xc78424700500	              mov dword [rsp + 0x570], 7	       934	update-index.c	FUNCTION_37
0x4001cb9	    0xc78424740500	          mov dword [rsp + 0x574], 0x7a 	       934	update-index.c	FUNCTION_37
0x4001cc4	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	       934	update-index.c	FUNCTION_37
0x4001cc9	    0x48898c248005	            mov qword [rsp + 0x580], rcx	       934	update-index.c	FUNCTION_37
0x4001cd1	    0x48c784249005	              mov qword [rsp + 0x590], 0	       934	update-index.c	FUNCTION_37
0x4001cdd	    0xc78424980500	              mov dword [rsp + 0x598], 2	       934	update-index.c	FUNCTION_37
0x4001ce8	    0x48c78424a805	              mov qword [rsp + 0x5a8], 1	       934	update-index.c	FUNCTION_37
0x4001cf4	    0xc78424b00500	           mov dword [rsp + 0x5b0], 0xd 	       934	update-index.c	FUNCTION_37
0x4001cff	    0x48c78424b805	              mov qword [rsp + 0x5b8], 0	       934	update-index.c	FUNCTION_37
0x4001d0b	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	       934	update-index.c	FUNCTION_37
0x4001d10	    0x4889b424c005	            mov qword [rsp + 0x5c0], rsi	       934	update-index.c	FUNCTION_37
0x4001d18	    0x48c78424d005	              mov qword [rsp + 0x5d0], 0	       934	update-index.c	FUNCTION_37
0x4001d24	    0xc78424d80500	              mov dword [rsp + 0x5d8], 6	       934	update-index.c	FUNCTION_37
0x4001d2f	    0x48c78424e005	              mov qword [rsp + 0x5e0], 0	       934	update-index.c	FUNCTION_37
0x4001d3b	    0xc78424f00500	           mov dword [rsp + 0x5f0], 0xd 	       934	update-index.c	FUNCTION_37
0x4001d46	    0x48c78424f805	              mov qword [rsp + 0x5f8], 0	       934	update-index.c	FUNCTION_37
0x4001d52	    0x48898c240006	            mov qword [rsp + 0x600], rcx	       934	update-index.c	FUNCTION_37
0x4001d5a	    0x48c784241006	              mov qword [rsp + 0x610], 0	       934	update-index.c	FUNCTION_37
0x4001d66	    0xc78424180600	              mov dword [rsp + 0x618], 6	       934	update-index.c	FUNCTION_37
0x4001d71	    0x48c784242006	              mov qword [rsp + 0x620], 0	       934	update-index.c	FUNCTION_37
0x4001d7d	    0xc78424300600	           mov dword [rsp + 0x630], 0xd 	       934	update-index.c	FUNCTION_37
0x4001d88	    0x48c784243806	              mov qword [rsp + 0x638], 0	       934	update-index.c	FUNCTION_37
0x4001d94	    0x488994244006	            mov qword [rsp + 0x640], rdx	       934	update-index.c	FUNCTION_37
0x4001d9c	    0x48c784245006	              mov qword [rsp + 0x650], 0	       934	update-index.c	FUNCTION_37
0x4001da8	    0xc78424580600	              mov dword [rsp + 0x658], 6	       934	update-index.c	FUNCTION_37
0x4001db3	    0x48c784246006	              mov qword [rsp + 0x660], 0	       934	update-index.c	FUNCTION_37
0x4001dbf	    0xc78424700600	           mov dword [rsp + 0x670], 0xd 	       934	update-index.c	FUNCTION_37
0x4001dca	    0xc78424740600	          mov dword [rsp + 0x674], 0x67 	       934	update-index.c	FUNCTION_37
0x4001dd5	    0x48c784247806	              mov qword [rsp + 0x678], 0	       934	update-index.c	FUNCTION_37
0x4001de1	    0x488994248006	            mov qword [rsp + 0x680], rdx	       934	update-index.c	FUNCTION_37
0x4001de9	    0x48c784249006	              mov qword [rsp + 0x690], 0	       934	update-index.c	FUNCTION_37
0x4001df5	    0xc78424980600	              mov dword [rsp + 0x698], 6	       934	update-index.c	FUNCTION_37
0x4001e00	    0x48c78424a006	              mov qword [rsp + 0x6a0], 0	       934	update-index.c	FUNCTION_37
0x4001e0c	    0xc78424b00600	              mov dword [rsp + 0x6b0], 4	       934	update-index.c	FUNCTION_37
0x4001e17	    0x48c78424b806	              mov qword [rsp + 0x6b8], 0	       934	update-index.c	FUNCTION_37
0x4001e23	    0x48898424c006	            mov qword [rsp + 0x6c0], rax	       934	update-index.c	FUNCTION_37
0x4001e2b	    0x48c78424d006	              mov qword [rsp + 0x6d0], 0	       934	update-index.c	FUNCTION_37
0x4001e37	    0xc78424d80600	              mov dword [rsp + 0x6d8], 2	       934	update-index.c	FUNCTION_37
0x4001e42	    0x48c78424e806	              mov qword [rsp + 0x6e8], 8	       934	update-index.c	FUNCTION_37
0x4001e4e	    0xc78424f00600	              mov dword [rsp + 0x6f0], 7	       934	update-index.c	FUNCTION_37
0x4001e59	    0x48c78424f806	              mov qword [rsp + 0x6f8], 0	       934	update-index.c	FUNCTION_37
0x4001e65	    0x48c784240007	              mov qword [rsp + 0x700], 0	       934	update-index.c	FUNCTION_37
0x4001e71	    0x48c784241007	              mov qword [rsp + 0x710], 0	       934	update-index.c	FUNCTION_37
0x4001e7d	    0xc78424180700	              mov dword [rsp + 0x718], 2	       934	update-index.c	FUNCTION_37
0x4001e88	    0x48c784242807	              mov qword [rsp + 0x728], 1	       934	update-index.c	FUNCTION_37
0x4001e94	    0xc78424300700	           mov dword [rsp + 0x730], 0xc 	       934	update-index.c	FUNCTION_37
0x4001e9f	    0x48c784243807	              mov qword [rsp + 0x738], 0	       934	update-index.c	FUNCTION_37
0x4001eab	    0x48c784245007	              mov qword [rsp + 0x750], 0	       934	update-index.c	FUNCTION_37
0x4001eb7	    0xc78424580700	              mov dword [rsp + 0x758], 6	       934	update-index.c	FUNCTION_37
0x4001ec2	    0x48c784246007	              mov qword [rsp + 0x760], 0	       934	update-index.c	FUNCTION_37
0x4001ece	    0xc78424700700	            mov dword [rsp + 0x770], 0xa	       934	update-index.c	FUNCTION_37
0x4001ed9	    0x48c784247807	              mov qword [rsp + 0x778], 0	       934	update-index.c	FUNCTION_37
0x4001ee5	      0x488d442420	                   lea rax, [rsp + 0x20]	       934	update-index.c	FUNCTION_37
0x4001eea	    0x488984248007	            mov qword [rsp + 0x780], rax	       934	update-index.c	FUNCTION_37
0x4001ef2	    0x48c784248807	              mov qword [rsp + 0x788], 0	       934	update-index.c	FUNCTION_37
0x4001efe	    0x48c784249007	              mov qword [rsp + 0x790], 0	       934	update-index.c	FUNCTION_37
0x4001f0a	    0xc78424b00700	              mov dword [rsp + 0x7b0], 7	       934	update-index.c	FUNCTION_37
0x4001f15	    0x48c78424b807	              mov qword [rsp + 0x7b8], 0	       934	update-index.c	FUNCTION_37
0x4001f21	      0x488d442424	                   lea rax, [rsp + 0x24]	       934	update-index.c	FUNCTION_37
0x4001f26	    0x48898424c007	            mov qword [rsp + 0x7c0], rax	       934	update-index.c	FUNCTION_37
0x4001f2e	    0x48c78424d007	              mov qword [rsp + 0x7d0], 0	       934	update-index.c	FUNCTION_37
0x4001f3a	    0xc78424d80700	              mov dword [rsp + 0x7d8], 2	       934	update-index.c	FUNCTION_37
0x4001f45	    0x48c78424e807	              mov qword [rsp + 0x7e8], 1	       934	update-index.c	FUNCTION_37
0x4001f51	    0xc78424f00700	              mov dword [rsp + 0x7f0], 7	       934	update-index.c	FUNCTION_37
0x4001f5c	    0x48c78424f807	              mov qword [rsp + 0x7f8], 0	       934	update-index.c	FUNCTION_37
0x4001f68	      0x488d442418	                   lea rax, [rsp + 0x18]	       934	update-index.c	FUNCTION_37
0x4001f6d	    0x488984240008	            mov qword [rsp + 0x800], rax	       934	update-index.c	FUNCTION_37
0x4001f75	    0x48c784241008	              mov qword [rsp + 0x810], 0	       934	update-index.c	FUNCTION_37
0x4001f81	    0xc78424180800	              mov dword [rsp + 0x818], 2	       934	update-index.c	FUNCTION_37
0x4001f8c	    0x48c784242808	              mov qword [rsp + 0x828], 1	       934	update-index.c	FUNCTION_37
0x4001f98	    0xc78424300800	              mov dword [rsp + 0x830], 7	       934	update-index.c	FUNCTION_37
0x4001fa3	    0x48c784243808	              mov qword [rsp + 0x838], 0	       934	update-index.c	FUNCTION_37
0x4001faf	    0x488984244008	            mov qword [rsp + 0x840], rax	       934	update-index.c	FUNCTION_37
0x4001fb7	    0x48c784245008	              mov qword [rsp + 0x850], 0	       934	update-index.c	FUNCTION_37
0x4001fc3	    0xc78424580800	              mov dword [rsp + 0x858], 2	       934	update-index.c	FUNCTION_37
0x4001fce	    0x48c784246808	              mov qword [rsp + 0x868], 2	       934	update-index.c	FUNCTION_37
0x4001fda	    0xc78424700800	              mov dword [rsp + 0x870], 7	       934	update-index.c	FUNCTION_37
0x4001fe5	    0x48c784247808	              mov qword [rsp + 0x878], 0	       934	update-index.c	FUNCTION_37
0x4001ff1	    0x488984248008	            mov qword [rsp + 0x880], rax	       934	update-index.c	FUNCTION_37
0x4001ff9	    0x48c784249008	              mov qword [rsp + 0x890], 0	       934	update-index.c	FUNCTION_37
0x4002005	    0xc78424980800	              mov dword [rsp + 0x898], 2	       934	update-index.c	FUNCTION_37
0x4002010	    0x48c78424a808	              mov qword [rsp + 0x8a8], 3	       934	update-index.c	FUNCTION_37
0x400201c	    0xc78424b00800	              mov dword [rsp + 0x8b0], 7	       934	update-index.c	FUNCTION_37
0x4002027	    0x48c78424b808	              mov qword [rsp + 0x8b8], 0	       934	update-index.c	FUNCTION_37
0x4002033	      0x488d442428	                   lea rax, [rsp + 0x28]	       934	update-index.c	FUNCTION_37
0x4002038	    0x48898424c008	            mov qword [rsp + 0x8c0], rax	       934	update-index.c	FUNCTION_37
0x4002040	    0x48c78424d008	              mov qword [rsp + 0x8d0], 0	       934	update-index.c	FUNCTION_37
0x400204c	    0xc78424d80800	              mov dword [rsp + 0x8d8], 2	       934	update-index.c	FUNCTION_37
0x4002057	    0x48c78424e808	              mov qword [rsp + 0x8e8], 1	       934	update-index.c	FUNCTION_37
0x4002063	    0xc78424f00800	              mov dword [rsp + 0x8f0], 7	       934	update-index.c	FUNCTION_37
0x400206e	    0x48c78424f808	              mov qword [rsp + 0x8f8], 0	       934	update-index.c	FUNCTION_37
0x400207a	      0x488d44242c	                   lea rax, [rsp + 0x2c]	       934	update-index.c	FUNCTION_37
0x400207f	    0x488984240009	            mov qword [rsp + 0x900], rax	       934	update-index.c	FUNCTION_37
0x4002087	    0x48c784241009	              mov qword [rsp + 0x910], 0	       934	update-index.c	FUNCTION_37
0x4002093	    0xc78424180900	              mov dword [rsp + 0x918], 2	       934	update-index.c	FUNCTION_37
0x400209e	    0x48c784242809	              mov qword [rsp + 0x928], 1	       934	update-index.c	FUNCTION_37
0x40020aa	    0xc78424300900	              mov dword [rsp + 0x930], 7	       934	update-index.c	FUNCTION_37
0x40020b5	    0x48c784243809	              mov qword [rsp + 0x938], 0	       934	update-index.c	FUNCTION_37
0x40020c1	    0x48c784244009	              mov qword [rsp + 0x940], 0	       934	update-index.c	FUNCTION_37
0x40020cd	    0x48c784245009	              mov qword [rsp + 0x950], 0	       934	update-index.c	FUNCTION_37
0x40020d9	    0xc78424580900	              mov dword [rsp + 0x958], 6	       934	update-index.c	FUNCTION_37
0x40020e4	    0x48c784246809	              mov qword [rsp + 0x968], 1	       934	update-index.c	FUNCTION_37
0x40020f0	    0xc78424700900	              mov dword [rsp + 0x970], 7	       934	update-index.c	FUNCTION_37
0x40020fb	    0x48c784247809	              mov qword [rsp + 0x978], 0	       934	update-index.c	FUNCTION_37
0x4002107	    0x48c784248009	              mov qword [rsp + 0x980], 0	       934	update-index.c	FUNCTION_37
0x4002113	    0x48c784249009	              mov qword [rsp + 0x990], 0	       934	update-index.c	FUNCTION_37
0x400211f	    0xc78424980900	              mov dword [rsp + 0x998], 6	       934	update-index.c	FUNCTION_37
0x400212a	    0x48c78424a809	              mov qword [rsp + 0x9a8], 2	       934	update-index.c	FUNCTION_37
0x4002136	          0x83fd02	                              cmp ebp, 2	      1034	update-index.c	FUNCTION_37	IF_1	CALL_21
0x4002139	            0x7528	                           jne 0x4002163	      1034	update-index.c	FUNCTION_37	IF_1	CALL_21
0x400213b	      0x498b442408	                mov rax, qword [r12 + 8]	      1034	update-index.c	FUNCTION_37	IF_1	CALL_21
0x4002140	          0x80382d	                    cmp byte [rax], 0x2d	      1034	update-index.c	FUNCTION_37	IF_1	CALL_21
0x4002143	            0x751e	                           jne 0x4002163	      1034	update-index.c	FUNCTION_37	IF_1	CALL_21
0x4002145	        0x80780168	                cmp byte [rax + 1], 0x68	      1034	update-index.c	FUNCTION_37	IF_1	CALL_21
0x4002149	            0x7518	                           jne 0x4002163	      1034	update-index.c	FUNCTION_37	IF_1	CALL_21
0x400214b	        0x80780200	                   cmp byte [rax + 2], 0	      1034	update-index.c	FUNCTION_37	IF_1	CALL_21
0x400214f	            0x7512	                           jne 0x4002163	      1034	update-index.c	FUNCTION_37	IF_1	CALL_21
0x4002151	    0x488db4247001	                  lea rsi, [rsp + 0x170]	      1035	update-index.c	FUNCTION_37	CALL_22
0x4002159	      0xbf00000000	                              mov edi, 0	      1035	update-index.c	FUNCTION_37	CALL_22
0x400215e	      0xe800000000	                          call 0x4002163	      1035	update-index.c	FUNCTION_37	CALL_22
0x4002163	      0xbe00000000	                              mov esi, 0	      1037	update-index.c	FUNCTION_37	CALL_23
0x4002168	      0xbf00000000	                              mov edi, 0	      1037	update-index.c	FUNCTION_37	CALL_23
0x400216d	      0xe800000000	                          call 0x4002172	      1037	update-index.c	FUNCTION_37	CALL_23
0x4002172	      0xbe00000000	                              mov esi, 0	      1040	update-index.c	FUNCTION_37	CALL_24
0x4002177	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1040	update-index.c	FUNCTION_37	CALL_24
0x400217c	      0xe800000000	                          call 0x4002181	      1040	update-index.c	FUNCTION_37	CALL_24
0x4002181	          0x4189c6	                           mov r14d, eax	      1040	update-index.c	FUNCTION_37	CALL_24
0x4002184	    0x41bf00000000	                             mov r15d, 0	       926	update-index.c	FUNCTION_37
0x400218a	            0x85c0	                           test eax, eax	      1041	update-index.c	FUNCTION_37	IF_2
0x400218c	            0x7908	                           jns 0x4002196	      1041	update-index.c	FUNCTION_37	IF_2
0x400218e	      0xe800000000	                          call 0x4002193	      1042	update-index.c	FUNCTION_37	IF_2
0x4002193	          0x448b38	                   mov r15d, dword [rax]	      1042	update-index.c	FUNCTION_37	IF_2
0x4002196	      0xbf00000000	                              mov edi, 0	      1044	update-index.c	FUNCTION_37
0x400219b	      0xe800000000	                          call 0x40021a0	      1044	update-index.c	FUNCTION_37
0x40021a0	            0x85c0	                           test eax, eax	      1045	update-index.c	FUNCTION_37	IF_3
0x40021a2	            0x790f	                           jns 0x40021b3	      1045	update-index.c	FUNCTION_37	IF_3
0x40021a4	      0xbf00000000	                              mov edi, 0	      1046	update-index.c	FUNCTION_37	CALL_25
0x40021a9	      0xb800000000	                              mov eax, 0	      1046	update-index.c	FUNCTION_37	CALL_25
0x40021ae	      0xe800000000	                          call 0x40021b3	      1046	update-index.c	FUNCTION_37	CALL_25
0x40021b3	    0x41b902000000	                              mov r9d, 2	      1052	update-index.c	FUNCTION_37	CALL_26
0x40021b9	    0x4c8d84247001	                   lea r8, [rsp + 0x170]	      1052	update-index.c	FUNCTION_37	CALL_26
0x40021c1	          0x4889d9	                            mov rcx, rbx	      1052	update-index.c	FUNCTION_37	CALL_26
0x40021c4	          0x4c89e2	                            mov rdx, r12	      1052	update-index.c	FUNCTION_37	CALL_26
0x40021c7	            0x89ee	                            mov esi, ebp	      1052	update-index.c	FUNCTION_37	CALL_26
0x40021c9	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      1052	update-index.c	FUNCTION_37	CALL_26
0x40021d1	      0xe800000000	                          call 0x40021d6	      1052	update-index.c	FUNCTION_37	CALL_26
0x40021d6	      0xbd03000000	                              mov ebp, 3	       933	update-index.c	FUNCTION_37
0x40021db	      0xe9f9000000	                           jmp 0x40022d9	      1054	update-index.c	FUNCTION_37	WHILE_1
0x40021e0	            0x85ed	                           test ebp, ebp	      1055	update-index.c	FUNCTION_37	WHILE_1	IF_4
0x40021e2	            0x7449	                            je 0x400222d	      1055	update-index.c	FUNCTION_37	WHILE_1	IF_4
0x40021e4	      0xba00000000	                              mov edx, 0	      1056	update-index.c	FUNCTION_37	WHILE_1	IF_4	CALL_27
0x40021e9	    0x488db4247001	                  lea rsi, [rsp + 0x170]	      1056	update-index.c	FUNCTION_37	WHILE_1	IF_4	CALL_27
0x40021f1	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      1056	update-index.c	FUNCTION_37	WHILE_1	IF_4	CALL_27
0x40021f9	      0xe800000000	                          call 0x40021fe	      1056	update-index.c	FUNCTION_37	WHILE_1	IF_4	CALL_27
0x40021fe	            0x89c5	                            mov ebp, eax	      1056	update-index.c	FUNCTION_37	WHILE_1	IF_4	CALL_27
0x4002200	    0x83bc24b00000	               cmp dword [rsp + 0xb0], 0	      1058	update-index.c	FUNCTION_37	WHILE_1	IF_5
0x4002208	     0xf84d9000000	                            je 0x40022e7	      1058	update-index.c	FUNCTION_37	WHILE_1	IF_5
0x400220e	          0x8d4001	                      lea eax, [rax + 1]	      1060	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4002211	          0x83f804	                              cmp eax, 4	      1060	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4002214	     0xf87bf000000	                            ja 0x40022d9	      1060	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1
0x400221a	            0x89c0	                            mov eax, eax	      1060	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1
0x400221c	    0xff24c5000000	                       jmp qword [rax*8]	      1060	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4002223	      0xbf81000000	                           mov edi, 0x81	      1063	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_28
0x4002228	      0xe800000000	                          call 0x400222d	      1063	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_28
0x400222d	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	      1067	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4002235	          0x4c8b20	                    mov r12, qword [rax]	      1067	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4002238	      0xe800000000	                          call 0x400223d	      1070	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_29
0x400223d	          0x4c89e2	                            mov rdx, r12	      1071	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_30
0x4002240	          0x4489ee	                           mov esi, r13d	      1071	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_30
0x4002243	          0x4889df	                            mov rdi, rbx	      1071	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_30
0x4002246	      0xe800000000	                          call 0x400224b	      1071	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_30
0x400224b	          0x4989c4	                            mov r12, rax	      1071	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_30
0x400224e	          0x4889c7	                            mov rdi, rax	      1072	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_31
0x4002251	      0xe831ebffff	                     call sym.update_one	      1072	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_31
0x4002256	       0xfb67c240f	            movzx edi, byte [rsp + 0xf] 	      1073	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_6
0x400225b	          0x4084ff	                           test dil, dil	      1073	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_6
0x400225e	            0x740c	                            je 0x400226c	      1073	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_6
0x4002260	        0x400fbeff	                          movsx edi, dil	      1074	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_32
0x4002264	          0x4c89e6	                            mov rsi, r12	      1074	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_32
0x4002267	      0xe8cbf0ffff	                     call sym.chmod_path	      1074	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_32
0x400226c	          0x4c89e7	                            mov rdi, r12	      1075	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_33
0x400226f	      0xe800000000	                          call 0x4002274	      1075	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_33
0x4002274	    0x83ac24b00000	               sub dword [rsp + 0xb0], 1	      1076	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1
0x400227c	    0x48838424a000	               add qword [rsp + 0xa0], 8	      1077	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4002285	            0xeb52	                           jmp 0x40022d9	      1078	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1
0x4002287	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	      1081	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_7
0x400228f	          0x488b30	                    mov rsi, qword [rax]	      1081	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_7
0x4002292	        0x807e012d	                cmp byte [rsi + 1], 0x2d	      1081	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_7
0x4002296	            0x7515	                           jne 0x40022ad	      1081	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_7
0x4002298	        0x4883c602	                              add rsi, 2	      1082	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_7
0x400229c	      0xbf00000000	                              mov edi, 0	      1082	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_7
0x40022a1	      0xb800000000	                              mov eax, 0	      1082	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_7
0x40022a6	      0xe800000000	                          call 0x40022ab	      1082	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_7
0x40022ab	            0xeb1a	                           jmp 0x40022c7	      1082	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	IF_7
0x40022ad	    0x488b8424c000	            mov rax, qword [rsp + 0xc0] 	      1084	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	ELSE_1
0x40022b5	           0xfbe30	                   movsx esi, byte [rax]	      1084	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	ELSE_1
0x40022b8	      0xbf00000000	                              mov edi, 0	      1084	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	ELSE_1
0x40022bd	      0xb800000000	                              mov eax, 0	      1084	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	ELSE_1
0x40022c2	      0xe800000000	                          call 0x40022c7	      1084	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	ELSE_1
0x40022c7	    0x488db4247001	                  lea rsi, [rsp + 0x170]	      1085	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_34
0x40022cf	      0xbf00000000	                              mov edi, 0	      1085	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_34
0x40022d4	      0xe800000000	                          call 0x40022d9	      1085	update-index.c	FUNCTION_37	WHILE_1	SWITCH_1	CALL_34
0x40022d9	    0x83bc24b00000	               cmp dword [rsp + 0xb0], 0	      1054	update-index.c	FUNCTION_37	WHILE_1
0x40022e1	     0xf85f9feffff	                           jne 0x40021e0	      1054	update-index.c	FUNCTION_37	WHILE_1
0x40022e7	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      1088	update-index.c	FUNCTION_37	CALL_35
0x40022ef	      0xe800000000	                          call 0x40022f4	      1088	update-index.c	FUNCTION_37	CALL_35
0x40022f4	      0x837c241400	               cmp dword [rsp + 0x14], 0	      1090	update-index.c	FUNCTION_37
0x40022f9	      0xb800000000	                              mov eax, 0	      1090	update-index.c	FUNCTION_37
0x40022fe	    0x41bc00000000	                             mov r12d, 0	      1090	update-index.c	FUNCTION_37
0x4002304	        0x4c0f44e0	                          cmove r12, rax	      1090	update-index.c	FUNCTION_37
0x4002308	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      1091	update-index.c	FUNCTION_37	IF_8
0x400230c	            0x85f6	                           test esi, esi	      1091	update-index.c	FUNCTION_37	IF_8
0x400230e	            0x7436	                            je 0x4002346	      1091	update-index.c	FUNCTION_37	IF_8
0x4002310	          0x8d46fe	                      lea eax, [rsi - 2]	      1092	update-index.c	FUNCTION_37	IF_8	IF_9
0x4002313	          0x83f802	                              cmp eax, 2	      1092	update-index.c	FUNCTION_37	IF_8	IF_9
0x4002316	            0x7619	                           jbe 0x4002331	      1092	update-index.c	FUNCTION_37	IF_8	IF_9
0x4002318	      0xb904000000	                              mov ecx, 4	      1094	update-index.c	FUNCTION_37	IF_8	IF_9	CALL_36
0x400231d	      0xba02000000	                              mov edx, 2	      1094	update-index.c	FUNCTION_37	IF_8	IF_9	CALL_36
0x4002322	      0xbf00000000	                              mov edi, 0	      1094	update-index.c	FUNCTION_37	IF_8	IF_9	CALL_36
0x4002327	      0xb800000000	                              mov eax, 0	      1094	update-index.c	FUNCTION_37	IF_8	IF_9	CALL_36
0x400232c	      0xe800000000	                          call 0x4002331	      1094	update-index.c	FUNCTION_37	IF_8	IF_9	CALL_36
0x4002331	    0x3b3500000000	            cmp esi, dword [0x04002337] 	      1098	update-index.c	FUNCTION_37	IF_8	IF_10
0x4002337	            0x7407	                            je 0x4002340	      1098	update-index.c	FUNCTION_37	IF_8	IF_10
0x4002339	    0x830d00000000	                or dword [0x04002340], 1	      1099	update-index.c	FUNCTION_37	IF_8	IF_10
0x4002340	    0x893500000000	            mov dword [0x04002346], esi 	      1100	update-index.c	FUNCTION_37	IF_8
0x4002346	      0x837c241c00	               cmp dword [rsp + 0x1c], 0	      1103	update-index.c	FUNCTION_37	IF_11
0x400234b	     0xf8482010000	                            je 0x40024d3	      1103	update-index.c	FUNCTION_37	IF_11
0x4002351	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1104	update-index.c	FUNCTION_37	IF_11
0x400235a	    0x48c744245800	               mov qword [rsp + 0x58], 0	      1104	update-index.c	FUNCTION_37	IF_11
0x4002363	    0x48c744246000	               mov qword [rsp + 0x60], 0	      1104	update-index.c	FUNCTION_37	IF_11
0x400236c	    0x48c744247000	               mov qword [rsp + 0x70], 0	      1105	update-index.c	FUNCTION_37	IF_11
0x4002375	    0x48c744247800	               mov qword [rsp + 0x78], 0	      1105	update-index.c	FUNCTION_37	IF_11
0x400237e	    0x48c784248000	               mov qword [rsp + 0x80], 0	      1105	update-index.c	FUNCTION_37	IF_11
0x400238a	      0xe800000000	                          call 0x400238f	      1107	update-index.c	FUNCTION_37	IF_11	CALL_37
0x400238f	      0xe913010000	                           jmp 0x40024a7	      1108	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_38
0x4002394	      0x837c241400	               cmp dword [rsp + 0x14], 0	      1110	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12
0x4002399	     0xf85cf000000	                           jne 0x400246e	      1110	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12
0x400239f	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      1110	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12
0x40023a4	          0x803822	                    cmp byte [rax], 0x22	      1110	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12
0x40023a7	     0xf85c1000000	                           jne 0x400246e	      1110	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12
0x40023ad	    0x48c744247800	               mov qword [rsp + 0x78], 0	       164	strbuf.h	FUNCTION_131
0x40023b6	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	       165	strbuf.h	FUNCTION_131	IF_2
0x40023be	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_131	IF_2
0x40023c4	            0x7405	                            je 0x40023cb	       165	strbuf.h	FUNCTION_131	IF_2
0x40023c6	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_131	IF_2
0x40023c9	            0xeb22	                           jmp 0x40023ed	       166	strbuf.h	FUNCTION_131	IF_2
0x40023cb	    0x803d00000000	                cmp byte [0x040023d2], 0	       168	strbuf.h	FUNCTION_131	CALL_2
0x40023d2	            0x7419	                            je 0x40023ed	       168	strbuf.h	FUNCTION_131	CALL_2
0x40023d4	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_131	CALL_2
0x40023d9	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_131	CALL_2
0x40023de	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_131	CALL_2
0x40023e3	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_131	CALL_2
0x40023e8	      0xe800000000	                          call 0x40023ed	       168	strbuf.h	FUNCTION_131	CALL_2
0x40023ed	      0xba00000000	                              mov edx, 0	      1112	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12	IF_13	CALL_39
0x40023f2	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      1112	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12	IF_13	CALL_39
0x40023f7	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      1112	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12	IF_13	CALL_39
0x40023fc	      0xe800000000	                          call 0x4002401	      1112	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12	IF_13	CALL_39
0x4002401	            0x85c0	                           test eax, eax	      1112	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12	IF_13	CALL_39
0x4002403	            0x740f	                            je 0x4002414	      1112	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12	IF_13	CALL_39
0x4002405	      0xbf00000000	                              mov edi, 0	      1113	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12	CALL_40
0x400240a	      0xb800000000	                              mov eax, 0	      1113	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12	CALL_40
0x400240f	      0xe800000000	                          call 0x4002414	      1113	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_12	CALL_40
0x4002414	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	        53	string3.h	FUNCTION_82	CALL_3
0x4002419	    0x48898c24f009	            mov qword [rsp + 0x9f0], rcx	        53	string3.h	FUNCTION_82	CALL_3
0x4002421	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	        53	string3.h	FUNCTION_82	CALL_3
0x4002426	    0x48899424f809	            mov qword [rsp + 0x9f8], rdx	        53	string3.h	FUNCTION_82	CALL_3
0x400242e	      0x488b442460	            mov rax, qword [rsp + 0x60] 	        53	string3.h	FUNCTION_82	CALL_3
0x4002433	    0x48898424000a	            mov qword [rsp + 0xa00], rax	        53	string3.h	FUNCTION_82	CALL_3
0x400243b	      0x488b742470	            mov rsi, qword [rsp + 0x70] 	        53	string3.h	FUNCTION_82	CALL_3
0x4002440	      0x4889742450	             mov qword [rsp + 0x50], rsi	        53	string3.h	FUNCTION_82	CALL_3
0x4002445	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	        53	string3.h	FUNCTION_82	CALL_3
0x400244a	      0x4889742458	             mov qword [rsp + 0x58], rsi	        53	string3.h	FUNCTION_82	CALL_3
0x400244f	    0x488bb4248000	            mov rsi, qword [rsp + 0x80] 	        53	string3.h	FUNCTION_82	CALL_3
0x4002457	      0x4889742460	             mov qword [rsp + 0x60], rsi	        53	string3.h	FUNCTION_82	CALL_3
0x400245c	      0x48894c2470	             mov qword [rsp + 0x70], rcx	        53	string3.h	FUNCTION_82	CALL_3
0x4002461	      0x4889542478	             mov qword [rsp + 0x78], rdx	        53	string3.h	FUNCTION_82	CALL_3
0x4002466	    0x488984248000	             mov qword [rsp + 0x80], rax	        53	string3.h	FUNCTION_82	CALL_3
0x400246e	      0x488b542460	            mov rdx, qword [rsp + 0x60] 	      1116	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_42
0x4002473	          0x4489ee	                           mov esi, r13d	      1116	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_42
0x4002476	          0x4889df	                            mov rdi, rbx	      1116	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_42
0x4002479	      0xe800000000	                          call 0x400247e	      1116	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_42
0x400247e	          0x4889c5	                            mov rbp, rax	      1116	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_42
0x4002481	          0x4889c7	                            mov rdi, rax	      1117	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_43
0x4002484	      0xe8fee8ffff	                     call sym.update_one	      1117	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_43
0x4002489	       0xfb67c240f	            movzx edi, byte [rsp + 0xf] 	      1118	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_14
0x400248e	          0x4084ff	                           test dil, dil	      1118	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_14
0x4002491	            0x740c	                            je 0x400249f	      1118	update-index.c	FUNCTION_37	IF_11	WHILE_2	IF_14
0x4002493	        0x400fbeff	                          movsx edi, dil	      1119	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_44
0x4002497	          0x4889ee	                            mov rsi, rbp	      1119	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_44
0x400249a	      0xe898eeffff	                     call sym.chmod_path	      1119	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_44
0x400249f	          0x4889ef	                            mov rdi, rbp	      1120	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_45
0x40024a2	      0xe800000000	                          call 0x40024a7	      1120	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_45
0x40024a7	    0x488b35000000	            mov rsi, qword [0x040024ae] 	      1108	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_38
0x40024ae	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      1108	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_38
0x40024b3	          0x41ffd4	                                call r12	      1108	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_38
0x40024b6	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1108	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_38
0x40024b9	     0xf85d5feffff	                           jne 0x4002394	      1108	update-index.c	FUNCTION_37	IF_11	WHILE_2	CALL_38
0x40024bf	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      1122	update-index.c	FUNCTION_37	IF_11	CALL_46
0x40024c4	      0xe800000000	                          call 0x40024c9	      1122	update-index.c	FUNCTION_37	IF_11	CALL_46
0x40024c9	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      1123	update-index.c	FUNCTION_37	IF_11	CALL_47
0x40024ce	      0xe800000000	                          call 0x40024d3	      1123	update-index.c	FUNCTION_37	IF_11	CALL_47
0x40024d3	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      1126	update-index.c	FUNCTION_37	IF_15
0x40024d7	            0x85c0	                           test eax, eax	      1126	update-index.c	FUNCTION_37	IF_15
0x40024d9	            0x7e49	                           jle 0x4002524	      1126	update-index.c	FUNCTION_37	IF_15
0x40024db	      0xe800000000	                          call 0x40024e0	      1127	update-index.c	FUNCTION_37	IF_15	IF_16	CALL_48
0x40024e0	            0x85c0	                           test eax, eax	      1127	update-index.c	FUNCTION_37	IF_15	IF_16	CALL_48
0x40024e2	            0x7521	                           jne 0x4002505	      1127	update-index.c	FUNCTION_37	IF_15	IF_16	CALL_48
0x40024e4	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_100
0x40024e9	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_100
0x40024ee	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_100
0x40024f3	      0xe800000000	                          call 0x40024f8	        54	gettext.h	FUNCTION_100
0x40024f8	          0x4889c7	                            mov rdi, rax	      1128	update-index.c	FUNCTION_37	IF_15	IF_16	CALL_50
0x40024fb	      0xb800000000	                              mov eax, 0	      1128	update-index.c	FUNCTION_37	IF_15	IF_16	CALL_50
0x4002500	      0xe800000000	                          call 0x4002505	      1128	update-index.c	FUNCTION_37	IF_15	IF_16	CALL_50
0x4002505	    0x48833d000000	               cmp qword [0x0400250d], 0	      1131	update-index.c	FUNCTION_37	IF_15	IF_17
0x400250d	            0x7409	                            je 0x4002518	      1131	update-index.c	FUNCTION_37	IF_15	IF_17
0x400250f	    0x830d00000000	            or dword [0x04002516], 0x40 	      1132	update-index.c	FUNCTION_37	IF_15	IF_17
0x4002516	            0xeb45	                           jmp 0x400255d	      1132	update-index.c	FUNCTION_37	IF_15	IF_17
0x4002518	      0xbf00000000	                              mov edi, 0	      1134	update-index.c	FUNCTION_37	IF_15	CALL_51
0x400251d	      0xe800000000	                          call 0x4002522	      1134	update-index.c	FUNCTION_37	IF_15	CALL_51
0x4002522	            0xeb39	                           jmp 0x400255d	      1134	update-index.c	FUNCTION_37	IF_15	CALL_51
0x4002524	            0x85c0	                           test eax, eax	      1135	update-index.c	FUNCTION_37	ELSE_3	IF_18
0x4002526	            0x7535	                           jne 0x400255d	      1135	update-index.c	FUNCTION_37	ELSE_3	IF_18
0x4002528	      0xe800000000	                          call 0x400252d	      1136	update-index.c	FUNCTION_37	ELSE_3	IF_18	IF_19	CALL_52
0x400252d	          0x83f801	                              cmp eax, 1	      1136	update-index.c	FUNCTION_37	ELSE_3	IF_18	IF_19	CALL_52
0x4002530	            0x7521	                           jne 0x4002553	      1136	update-index.c	FUNCTION_37	ELSE_3	IF_18	IF_19	CALL_52
0x4002532	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_100
0x4002537	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_100
0x400253c	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_100
0x4002541	      0xe800000000	                          call 0x4002546	        54	gettext.h	FUNCTION_100
0x4002546	          0x4889c7	                            mov rdi, rax	      1137	update-index.c	FUNCTION_37	ELSE_3	IF_18	IF_19	CALL_54
0x4002549	      0xb800000000	                              mov eax, 0	      1137	update-index.c	FUNCTION_37	ELSE_3	IF_18	IF_19	CALL_54
0x400254e	      0xe800000000	                          call 0x4002553	      1137	update-index.c	FUNCTION_37	ELSE_3	IF_18	IF_19	CALL_54
0x4002553	      0xbf00000000	                              mov edi, 0	      1140	update-index.c	FUNCTION_37	ELSE_3	IF_18	CALL_55
0x4002558	      0xe800000000	                          call 0x400255d	      1140	update-index.c	FUNCTION_37	ELSE_3	IF_18	CALL_55
0x400255d	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      1143	update-index.c	FUNCTION_37	SWITCH_2
0x4002561	          0x8d4601	                      lea eax, [rsi + 1]	      1143	update-index.c	FUNCTION_37	SWITCH_2
0x4002564	          0x83f804	                              cmp eax, 4	      1143	update-index.c	FUNCTION_37	SWITCH_2
0x4002567	     0xf87d0050000	                            ja 0x4002b3d	      1143	update-index.c	FUNCTION_37	SWITCH_2
0x400256d	            0x89c0	                            mov eax, eax	      1143	update-index.c	FUNCTION_37	SWITCH_2
0x400256f	    0xff24c5000000	                       jmp qword [rax*8]	      1143	update-index.c	FUNCTION_37	SWITCH_2
0x4002576	      0xe800000000	                          call 0x400257b	      1147	update-index.c	FUNCTION_37	SWITCH_2	IF_20	CALL_56
0x400257b	          0x83f801	                              cmp eax, 1	      1147	update-index.c	FUNCTION_37	SWITCH_2	IF_20	CALL_56
0x400257e	            0x7521	                           jne 0x40025a1	      1147	update-index.c	FUNCTION_37	SWITCH_2	IF_20	CALL_56
0x4002580	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_100
0x4002585	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_100
0x400258a	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_100
0x400258f	      0xe800000000	                          call 0x4002594	        54	gettext.h	FUNCTION_100
0x4002594	          0x4889c7	                            mov rdi, rax	      1148	update-index.c	FUNCTION_37	SWITCH_2	IF_20	CALL_58
0x4002597	      0xb800000000	                              mov eax, 0	      1148	update-index.c	FUNCTION_37	SWITCH_2	IF_20	CALL_58
0x400259c	      0xe800000000	                          call 0x40025a1	      1148	update-index.c	FUNCTION_37	SWITCH_2	IF_20	CALL_58
0x40025a1	      0xbf00000000	                              mov edi, 0	      1151	update-index.c	FUNCTION_37	SWITCH_2	CALL_59
0x40025a6	      0xe800000000	                          call 0x40025ab	      1151	update-index.c	FUNCTION_37	SWITCH_2	CALL_59
0x40025ab	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_100
0x40025b0	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_100
0x40025b5	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_100
0x40025ba	      0xe800000000	                          call 0x40025bf	        54	gettext.h	FUNCTION_100
0x40025bf	          0x4889c7	                            mov rdi, rax	      1152	update-index.c	FUNCTION_37	SWITCH_2	CALL_61
0x40025c2	      0xb800000000	                              mov eax, 0	      1152	update-index.c	FUNCTION_37	SWITCH_2	CALL_61
0x40025c7	      0xe8a2e3ffff	                         call sym.report	      1152	update-index.c	FUNCTION_37	SWITCH_2	CALL_61
0x40025cc	      0xe97b050000	                           jmp 0x4002b4c	      1153	update-index.c	FUNCTION_37	SWITCH_2
0x40025d1	      0xe800000000	                          call 0x40025d6	      1155	update-index.c	FUNCTION_37	SWITCH_2	CALL_62
0x40025d6	      0xba11000000	                           mov edx, 0x11	       279	strbuf.h	FUNCTION_133	CALL_2
0x40025db	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_133	CALL_2
0x40025e0	      0xbf00000000	                              mov edi, 0	       279	strbuf.h	FUNCTION_133	CALL_2
0x40025e5	      0xe800000000	                          call 0x40025ea	       279	strbuf.h	FUNCTION_133	CALL_2
0x40025ea	    0x488b3d000000	            mov rdi, qword [0x040025f1] 	       134	update-index.c	FUNCTION_10	IF_1
0x40025f1	      0xe800000000	                          call 0x40025f6	       134	update-index.c	FUNCTION_10	IF_1
0x40025f6	          0x4885c0	                           test rax, rax	       134	update-index.c	FUNCTION_10	IF_1
0x40025f9	            0x750a	                           jne 0x4002605	       134	update-index.c	FUNCTION_10	IF_1
0x40025fb	      0xbf00000000	                              mov edi, 0	       135	update-index.c	FUNCTION_10	CALL_2
0x4002600	      0xe800000000	                          call 0x4002605	       135	update-index.c	FUNCTION_10	CALL_2
0x4002605	      0xe800000000	                          call 0x400260a	       137	update-index.c	FUNCTION_10	CALL_3
0x400260a	          0x4889c3	                            mov rbx, rax	       137	update-index.c	FUNCTION_10	CALL_3
0x400260d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_100
0x4002612	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_100
0x4002617	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_100
0x400261c	      0xe800000000	                          call 0x4002621	        54	gettext.h	FUNCTION_100
0x4002621	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_10
0x4002624	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_10
0x4002627	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_10
0x400262c	    0x488b3d000000	            mov rdi, qword [0x04002633] 	        97	stdio2.h	CALL_10
0x4002633	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_10
0x4002638	      0xe800000000	                          call 0x400263d	        97	stdio2.h	CALL_10
0x400263d	          0x4889df	                            mov rdi, rbx	       139	update-index.c	FUNCTION_10	CALL_5
0x4002640	      0xe800000000	                          call 0x4002645	       139	update-index.c	FUNCTION_10	CALL_5
0x4002645	      0xbf00000000	                              mov edi, 0	       141	update-index.c	FUNCTION_10
0x400264a	      0xe800000000	                          call 0x400264f	       141	update-index.c	FUNCTION_10
0x400264f	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	       142	update-index.c	FUNCTION_10	CALL_6
0x4002657	      0xe8c7e2ffff	                call sym.xstat_mtime_dir	       142	update-index.c	FUNCTION_10	CALL_6
0x400265c	    0x488db424e000	                   lea rsi, [rsp + 0xe0]	       143	update-index.c	FUNCTION_10	CALL_7
0x4002664	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       143	update-index.c	FUNCTION_10	CALL_7
0x4002669	      0xe800000000	                          call 0x400266e	       143	update-index.c	FUNCTION_10	CALL_7
0x400266e	    0x488b35000000	            mov rsi, qword [0x04002675] 	       144	update-index.c	FUNCTION_10	CALL_8
0x4002675	      0xbf2e000000	                           mov edi, 0x2e	       144	update-index.c	FUNCTION_10	CALL_8
0x400267a	      0xe800000000	                          call 0x400267f	       144	update-index.c	FUNCTION_10	CALL_8
0x400267f	      0xe88ce2ffff	                     call sym.avoid_racy	       146	update-index.c	FUNCTION_10	CALL_9
0x4002684	      0xbf00000000	                              mov edi, 0	       147	update-index.c	FUNCTION_10	CALL_10
0x4002689	      0xe89bedffff	                    call sym.create_file	       147	update-index.c	FUNCTION_10	CALL_10
0x400268e	            0x89c3	                            mov ebx, eax	       147	update-index.c	FUNCTION_10	CALL_10
0x4002690	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	       148	update-index.c	FUNCTION_10	CALL_11
0x4002698	      0xe886e2ffff	                call sym.xstat_mtime_dir	       148	update-index.c	FUNCTION_10	CALL_11
0x400269d	    0x488db424e000	                   lea rsi, [rsp + 0xe0]	       149	update-index.c	FUNCTION_10	IF_2	CALL_12
0x40026a5	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       149	update-index.c	FUNCTION_10	IF_2	CALL_12
0x40026aa	      0xe800000000	                          call 0x40026af	       149	update-index.c	FUNCTION_10	IF_2	CALL_12
0x40026af	            0x85c0	                           test eax, eax	       149	update-index.c	FUNCTION_10	IF_2	CALL_12
0x40026b1	            0x754a	                           jne 0x40026fd	       149	update-index.c	FUNCTION_10	IF_2	CALL_12
0x40026b3	            0x89df	                            mov edi, ebx	       150	update-index.c	FUNCTION_10	IF_2	CALL_13
0x40026b5	      0xe800000000	                          call 0x40026ba	       150	update-index.c	FUNCTION_10	IF_2	CALL_13
0x40026ba	    0x488b35000000	            mov rsi, qword [0x040026c1] 	       151	update-index.c	FUNCTION_10	IF_2	CALL_14
0x40026c1	      0xbf0a000000	                            mov edi, 0xa	       151	update-index.c	FUNCTION_10	IF_2	CALL_14
0x40026c6	      0xe800000000	                          call 0x40026cb	       151	update-index.c	FUNCTION_10	IF_2	CALL_14
0x40026cb	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_100
0x40026d0	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_100
0x40026d5	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_100
0x40026da	      0xe800000000	                          call 0x40026df	        54	gettext.h	FUNCTION_100
0x40026df	          0x4889c6	                            mov rsi, rax	       152	update-index.c	FUNCTION_10	IF_2	CALL_16
0x40026e2	    0x488b3d000000	            mov rdi, qword [0x040026e9] 	       152	update-index.c	FUNCTION_10	IF_2	CALL_16
0x40026e9	      0xb800000000	                              mov eax, 0	       152	update-index.c	FUNCTION_10	IF_2	CALL_16
0x40026ee	      0xe800000000	                          call 0x40026f3	       152	update-index.c	FUNCTION_10	IF_2	CALL_16
0x40026f3	      0xbb00000000	                              mov ebx, 0	       130	update-index.c	FUNCTION_10
0x40026f8	      0xe9ca030000	                           jmp 0x4002ac7	       130	update-index.c	FUNCTION_10
0x40026fd	    0x488db424e000	                   lea rsi, [rsp + 0xe0]	       156	update-index.c	FUNCTION_10	CALL_17
0x4002705	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       156	update-index.c	FUNCTION_10	CALL_17
0x400270a	      0xe800000000	                          call 0x400270f	       156	update-index.c	FUNCTION_10	CALL_17
0x400270f	    0x488b35000000	            mov rsi, qword [0x04002716] 	       157	update-index.c	FUNCTION_10	CALL_18
0x4002716	      0xbf2e000000	                           mov edi, 0x2e	       157	update-index.c	FUNCTION_10	CALL_18
0x400271b	      0xe800000000	                          call 0x4002720	       157	update-index.c	FUNCTION_10	CALL_18
0x4002720	      0xe8ebe1ffff	                     call sym.avoid_racy	       159	update-index.c	FUNCTION_10	CALL_19
0x4002725	      0xbf00000000	                              mov edi, 0	        80	update-index.c	FUNCTION_4	CALL_1
0x400272a	      0xe88becffff	                 call sym.get_mtime_path	        80	update-index.c	FUNCTION_4	CALL_1
0x400272f	          0x4889c5	                            mov rbp, rax	        80	update-index.c	FUNCTION_4	CALL_1
0x4002732	      0xbec0010000	                          mov esi, 0x1c0	        81	update-index.c	FUNCTION_4	IF_1
0x4002737	          0x4889c7	                            mov rdi, rax	        81	update-index.c	FUNCTION_4	IF_1
0x400273a	      0xe800000000	                          call 0x400273f	        81	update-index.c	FUNCTION_4	IF_1
0x400273f	            0x85c0	                           test eax, eax	        81	update-index.c	FUNCTION_4	IF_1
0x4002741	            0x7424	                            je 0x4002767	        81	update-index.c	FUNCTION_4	IF_1
0x4002743	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_100
0x4002748	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_100
0x400274d	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_100
0x4002752	      0xe800000000	                          call 0x4002757	        54	gettext.h	FUNCTION_100
0x4002757	          0x4889ee	                            mov rsi, rbp	        82	update-index.c	FUNCTION_4	CALL_3
0x400275a	          0x4889c7	                            mov rdi, rax	        82	update-index.c	FUNCTION_4	CALL_3
0x400275d	      0xb800000000	                              mov eax, 0	        82	update-index.c	FUNCTION_4	CALL_3
0x4002762	      0xe800000000	                          call 0x4002767	        82	update-index.c	FUNCTION_4	CALL_3
0x4002767	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	       161	update-index.c	FUNCTION_10	CALL_21
0x400276f	      0xe8afe1ffff	                call sym.xstat_mtime_dir	       161	update-index.c	FUNCTION_10	CALL_21
0x4002774	    0x488db424e000	                   lea rsi, [rsp + 0xe0]	       162	update-index.c	FUNCTION_10	IF_3	CALL_22
0x400277c	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       162	update-index.c	FUNCTION_10	IF_3	CALL_22
0x4002781	      0xe800000000	                          call 0x4002786	       162	update-index.c	FUNCTION_10	IF_3	CALL_22
0x4002786	            0x85c0	                           test eax, eax	       162	update-index.c	FUNCTION_10	IF_3	CALL_22
0x4002788	            0x754a	                           jne 0x40027d4	       162	update-index.c	FUNCTION_10	IF_3	CALL_22
0x400278a	            0x89df	                            mov edi, ebx	       163	update-index.c	FUNCTION_10	IF_3	CALL_23
0x400278c	      0xe800000000	                          call 0x4002791	       163	update-index.c	FUNCTION_10	IF_3	CALL_23
0x4002791	    0x488b35000000	            mov rsi, qword [0x04002798] 	       164	update-index.c	FUNCTION_10	IF_3	CALL_24
0x4002798	      0xbf0a000000	                            mov edi, 0xa	       164	update-index.c	FUNCTION_10	IF_3	CALL_24
0x400279d	      0xe800000000	                          call 0x40027a2	       164	update-index.c	FUNCTION_10	IF_3	CALL_24
0x40027a2	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_100
0x40027a7	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_100
0x40027ac	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_100
0x40027b1	      0xe800000000	                          call 0x40027b6	        54	gettext.h	FUNCTION_100
0x40027b6	          0x4889c6	                            mov rsi, rax	       165	update-index.c	FUNCTION_10	IF_3	CALL_26
0x40027b9	    0x488b3d000000	            mov rdi, qword [0x040027c0] 	       165	update-index.c	FUNCTION_10	IF_3	CALL_26
0x40027c0	      0xb800000000	                              mov eax, 0	       165	update-index.c	FUNCTION_10	IF_3	CALL_26
0x40027c5	      0xe800000000	                          call 0x40027ca	       165	update-index.c	FUNCTION_10	IF_3	CALL_26
0x40027ca	      0xbb00000000	                              mov ebx, 0	       130	update-index.c	FUNCTION_10
0x40027cf	      0xe9f3020000	                           jmp 0x4002ac7	       130	update-index.c	FUNCTION_10
0x40027d4	    0x488db424e000	                   lea rsi, [rsp + 0xe0]	       169	update-index.c	FUNCTION_10	CALL_27
0x40027dc	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       169	update-index.c	FUNCTION_10	CALL_27
0x40027e1	      0xe800000000	                          call 0x40027e6	       169	update-index.c	FUNCTION_10	CALL_27
0x40027e6	    0x488b35000000	            mov rsi, qword [0x040027ed] 	       170	update-index.c	FUNCTION_10	CALL_28
0x40027ed	      0xbf2e000000	                           mov edi, 0x2e	       170	update-index.c	FUNCTION_10	CALL_28
0x40027f2	      0xe800000000	                          call 0x40027f7	       170	update-index.c	FUNCTION_10	CALL_28
0x40027f7	      0xe814e1ffff	                     call sym.avoid_racy	       172	update-index.c	FUNCTION_10	CALL_29
0x40027fc	      0xba04000000	                              mov edx, 4	       173	update-index.c	FUNCTION_10	CALL_30
0x4002801	      0xbe00000000	                              mov esi, 0	       173	update-index.c	FUNCTION_10	CALL_30
0x4002806	            0x89df	                            mov edi, ebx	       173	update-index.c	FUNCTION_10	CALL_30
0x4002808	      0xe800000000	                          call 0x400280d	       173	update-index.c	FUNCTION_10	CALL_30
0x400280d	            0x89df	                            mov edi, ebx	       174	update-index.c	FUNCTION_10	CALL_31
0x400280f	      0xe800000000	                          call 0x4002814	       174	update-index.c	FUNCTION_10	CALL_31
0x4002814	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	       175	update-index.c	FUNCTION_10	CALL_32
0x400281c	      0xe802e1ffff	                call sym.xstat_mtime_dir	       175	update-index.c	FUNCTION_10	CALL_32
0x4002821	    0x488db424e000	                   lea rsi, [rsp + 0xe0]	       176	update-index.c	FUNCTION_10	IF_4	CALL_33
0x4002829	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       176	update-index.c	FUNCTION_10	IF_4	CALL_33
0x400282e	      0xe800000000	                          call 0x4002833	       176	update-index.c	FUNCTION_10	IF_4	CALL_33
0x4002833	            0x85c0	                           test eax, eax	       176	update-index.c	FUNCTION_10	IF_4	CALL_33
0x4002835	            0x7443	                            je 0x400287a	       176	update-index.c	FUNCTION_10	IF_4	CALL_33
0x4002837	    0x488b35000000	            mov rsi, qword [0x0400283e] 	       177	update-index.c	FUNCTION_10	IF_4	CALL_34
0x400283e	      0xbf0a000000	                            mov edi, 0xa	       177	update-index.c	FUNCTION_10	IF_4	CALL_34
0x4002843	      0xe800000000	                          call 0x4002848	       177	update-index.c	FUNCTION_10	IF_4	CALL_34
0x4002848	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_100
0x400284d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_100
0x4002852	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_100
0x4002857	      0xe800000000	                          call 0x400285c	        54	gettext.h	FUNCTION_100
0x400285c	          0x4889c6	                            mov rsi, rax	       178	update-index.c	FUNCTION_10	IF_4	CALL_36
0x400285f	    0x488b3d000000	            mov rdi, qword [0x04002866] 	       178	update-index.c	FUNCTION_10	IF_4	CALL_36
0x4002866	      0xb800000000	                              mov eax, 0	       178	update-index.c	FUNCTION_10	IF_4	CALL_36
0x400286b	      0xe800000000	                          call 0x4002870	       178	update-index.c	FUNCTION_10	IF_4	CALL_36
0x4002870	      0xbb00000000	                              mov ebx, 0	       130	update-index.c	FUNCTION_10
0x4002875	      0xe94d020000	                           jmp 0x4002ac7	       130	update-index.c	FUNCTION_10
0x400287a	    0x488b35000000	            mov rsi, qword [0x04002881] 	       182	update-index.c	FUNCTION_10	CALL_37
0x4002881	      0xbf2e000000	                           mov edi, 0x2e	       182	update-index.c	FUNCTION_10	CALL_37
0x4002886	      0xe800000000	                          call 0x400288b	       182	update-index.c	FUNCTION_10	CALL_37
0x400288b	      0xe880e0ffff	                     call sym.avoid_racy	       184	update-index.c	FUNCTION_10	CALL_38
0x4002890	      0xbf00000000	                              mov edi, 0	       185	update-index.c	FUNCTION_10	CALL_40
0x4002895	      0xe88febffff	                    call sym.create_file	       185	update-index.c	FUNCTION_10	CALL_40
0x400289a	            0x89c7	                            mov edi, eax	       185	update-index.c	FUNCTION_10	CALL_40
0x400289c	      0xe800000000	                          call 0x40028a1	       185	update-index.c	FUNCTION_10	CALL_40
0x40028a1	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	       186	update-index.c	FUNCTION_10	CALL_41
0x40028a9	      0xe875e0ffff	                call sym.xstat_mtime_dir	       186	update-index.c	FUNCTION_10	CALL_41
0x40028ae	    0x488db424e000	                   lea rsi, [rsp + 0xe0]	       187	update-index.c	FUNCTION_10	IF_5	CALL_42
0x40028b6	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       187	update-index.c	FUNCTION_10	IF_5	CALL_42
0x40028bb	      0xe800000000	                          call 0x40028c0	       187	update-index.c	FUNCTION_10	IF_5	CALL_42
0x40028c0	            0x85c0	                           test eax, eax	       187	update-index.c	FUNCTION_10	IF_5	CALL_42
0x40028c2	            0x7443	                            je 0x4002907	       187	update-index.c	FUNCTION_10	IF_5	CALL_42
0x40028c4	    0x488b35000000	            mov rsi, qword [0x040028cb] 	       188	update-index.c	FUNCTION_10	IF_5	CALL_43
0x40028cb	      0xbf0a000000	                            mov edi, 0xa	       188	update-index.c	FUNCTION_10	IF_5	CALL_43
0x40028d0	      0xe800000000	                          call 0x40028d5	       188	update-index.c	FUNCTION_10	IF_5	CALL_43
0x40028d5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_100
0x40028da	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_100
0x40028df	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_100
0x40028e4	      0xe800000000	                          call 0x40028e9	        54	gettext.h	FUNCTION_100
0x40028e9	          0x4889c6	                            mov rsi, rax	       189	update-index.c	FUNCTION_10	IF_5	CALL_45
0x40028ec	    0x488b3d000000	            mov rdi, qword [0x040028f3] 	       189	update-index.c	FUNCTION_10	IF_5	CALL_45
0x40028f3	      0xb800000000	                              mov eax, 0	       189	update-index.c	FUNCTION_10	IF_5	CALL_45
0x40028f8	      0xe800000000	                          call 0x40028fd	       189	update-index.c	FUNCTION_10	IF_5	CALL_45
0x40028fd	      0xbb00000000	                              mov ebx, 0	       130	update-index.c	FUNCTION_10
0x4002902	      0xe9c0010000	                           jmp 0x4002ac7	       130	update-index.c	FUNCTION_10
0x4002907	    0x488b35000000	            mov rsi, qword [0x0400290e] 	       193	update-index.c	FUNCTION_10	CALL_46
0x400290e	      0xbf2e000000	                           mov edi, 0x2e	       193	update-index.c	FUNCTION_10	CALL_46
0x4002913	      0xe800000000	                          call 0x4002918	       193	update-index.c	FUNCTION_10	CALL_46
0x4002918	      0xe8f3dfffff	                     call sym.avoid_racy	       195	update-index.c	FUNCTION_10	CALL_47
0x400291d	      0xbf00000000	                              mov edi, 0	       196	update-index.c	FUNCTION_10	CALL_48
0x4002922	      0xe84cebffff	                        call sym.xunlink	       196	update-index.c	FUNCTION_10	CALL_48
0x4002927	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	       197	update-index.c	FUNCTION_10	CALL_49
0x400292f	      0xe8efdfffff	                call sym.xstat_mtime_dir	       197	update-index.c	FUNCTION_10	CALL_49
0x4002934	    0x488db424e000	                   lea rsi, [rsp + 0xe0]	       198	update-index.c	FUNCTION_10	IF_6	CALL_50
0x400293c	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       198	update-index.c	FUNCTION_10	IF_6	CALL_50
0x4002941	      0xe800000000	                          call 0x4002946	       198	update-index.c	FUNCTION_10	IF_6	CALL_50
0x4002946	            0x85c0	                           test eax, eax	       198	update-index.c	FUNCTION_10	IF_6	CALL_50
0x4002948	            0x7543	                           jne 0x400298d	       198	update-index.c	FUNCTION_10	IF_6	CALL_50
0x400294a	    0x488b35000000	            mov rsi, qword [0x04002951] 	       199	update-index.c	FUNCTION_10	IF_6	CALL_51
0x4002951	      0xbf0a000000	                            mov edi, 0xa	       199	update-index.c	FUNCTION_10	IF_6	CALL_51
0x4002956	      0xe800000000	                          call 0x400295b	       199	update-index.c	FUNCTION_10	IF_6	CALL_51
0x400295b	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_100
0x4002960	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_100
0x4002965	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_100
0x400296a	      0xe800000000	                          call 0x400296f	        54	gettext.h	FUNCTION_100
0x400296f	          0x4889c6	                            mov rsi, rax	       200	update-index.c	FUNCTION_10	IF_6	CALL_53
0x4002972	    0x488b3d000000	            mov rdi, qword [0x04002979] 	       200	update-index.c	FUNCTION_10	IF_6	CALL_53
0x4002979	      0xb800000000	                              mov eax, 0	       200	update-index.c	FUNCTION_10	IF_6	CALL_53
0x400297e	      0xe800000000	                          call 0x4002983	       200	update-index.c	FUNCTION_10	IF_6	CALL_53
0x4002983	      0xbb00000000	                              mov ebx, 0	       130	update-index.c	FUNCTION_10
0x4002988	      0xe93a010000	                           jmp 0x4002ac7	       130	update-index.c	FUNCTION_10
0x400298d	    0x488db424e000	                   lea rsi, [rsp + 0xe0]	       204	update-index.c	FUNCTION_10	CALL_54
0x4002995	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       204	update-index.c	FUNCTION_10	CALL_54
0x400299a	      0xe800000000	                          call 0x400299f	       204	update-index.c	FUNCTION_10	CALL_54
0x400299f	    0x488b35000000	            mov rsi, qword [0x040029a6] 	       205	update-index.c	FUNCTION_10	CALL_55
0x40029a6	      0xbf2e000000	                           mov edi, 0x2e	       205	update-index.c	FUNCTION_10	CALL_55
0x40029ab	      0xe800000000	                          call 0x40029b0	       205	update-index.c	FUNCTION_10	CALL_55
0x40029b0	      0xe85bdfffff	                     call sym.avoid_racy	       207	update-index.c	FUNCTION_10	CALL_56
0x40029b5	      0xbf00000000	                              mov edi, 0	       208	update-index.c	FUNCTION_10	CALL_57
0x40029ba	      0xe8b4eaffff	                        call sym.xunlink	       208	update-index.c	FUNCTION_10	CALL_57
0x40029bf	      0xbf00000000	                              mov edi, 0	       111	update-index.c	FUNCTION_8	CALL_1
0x40029c4	      0xe8f1e9ffff	                 call sym.get_mtime_path	       111	update-index.c	FUNCTION_8	CALL_1
0x40029c9	          0x4889c3	                            mov rbx, rax	       111	update-index.c	FUNCTION_8	CALL_1
0x40029cc	          0x4889c7	                            mov rdi, rax	       112	update-index.c	FUNCTION_8	IF_1	CALL_2
0x40029cf	      0xe800000000	                          call 0x40029d4	       112	update-index.c	FUNCTION_8	IF_1	CALL_2
0x40029d4	            0x85c0	                           test eax, eax	       112	update-index.c	FUNCTION_8	IF_1	CALL_2
0x40029d6	            0x7424	                            je 0x40029fc	       112	update-index.c	FUNCTION_8	IF_1	CALL_2
0x40029d8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_100
0x40029dd	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_100
0x40029e2	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_100
0x40029e7	      0xe800000000	                          call 0x40029ec	        54	gettext.h	FUNCTION_100
0x40029ec	          0x4889de	                            mov rsi, rbx	       113	update-index.c	FUNCTION_8	CALL_4
0x40029ef	          0x4889c7	                            mov rdi, rax	       113	update-index.c	FUNCTION_8	CALL_4
0x40029f2	      0xb800000000	                              mov eax, 0	       113	update-index.c	FUNCTION_8	CALL_4
0x40029f7	      0xe800000000	                          call 0x40029fc	       113	update-index.c	FUNCTION_8	CALL_4
0x40029fc	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	       210	update-index.c	FUNCTION_10	CALL_59
0x4002a04	      0xe81adfffff	                call sym.xstat_mtime_dir	       210	update-index.c	FUNCTION_10	CALL_59
0x4002a09	    0x488db424e000	                   lea rsi, [rsp + 0xe0]	       211	update-index.c	FUNCTION_10	IF_7	CALL_60
0x4002a11	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       211	update-index.c	FUNCTION_10	IF_7	CALL_60
0x4002a16	      0xe800000000	                          call 0x4002a1b	       211	update-index.c	FUNCTION_10	IF_7	CALL_60
0x4002a1b	            0x85c0	                           test eax, eax	       211	update-index.c	FUNCTION_10	IF_7	CALL_60
0x4002a1d	            0x7540	                           jne 0x4002a5f	       211	update-index.c	FUNCTION_10	IF_7	CALL_60
0x4002a1f	    0x488b35000000	            mov rsi, qword [0x04002a26] 	       212	update-index.c	FUNCTION_10	IF_7	CALL_61
0x4002a26	      0xbf0a000000	                            mov edi, 0xa	       212	update-index.c	FUNCTION_10	IF_7	CALL_61
0x4002a2b	      0xe800000000	                          call 0x4002a30	       212	update-index.c	FUNCTION_10	IF_7	CALL_61
0x4002a30	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_100
0x4002a35	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_100
0x4002a3a	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_100
0x4002a3f	      0xe800000000	                          call 0x4002a44	        54	gettext.h	FUNCTION_100
0x4002a44	          0x4889c6	                            mov rsi, rax	       213	update-index.c	FUNCTION_10	IF_7	CALL_63
0x4002a47	    0x488b3d000000	            mov rdi, qword [0x04002a4e] 	       213	update-index.c	FUNCTION_10	IF_7	CALL_63
0x4002a4e	      0xb800000000	                              mov eax, 0	       213	update-index.c	FUNCTION_10	IF_7	CALL_63
0x4002a53	      0xe800000000	                          call 0x4002a58	       213	update-index.c	FUNCTION_10	IF_7	CALL_63
0x4002a58	      0xbb00000000	                              mov ebx, 0	       130	update-index.c	FUNCTION_10
0x4002a5d	            0xeb68	                           jmp 0x4002ac7	       130	update-index.c	FUNCTION_10
0x4002a5f	    0x488b3d000000	            mov rdi, qword [0x04002a66] 	       218	update-index.c	FUNCTION_10	IF_8	CALL_64
0x4002a66	      0xe800000000	                          call 0x4002a6b	       218	update-index.c	FUNCTION_10	IF_8	CALL_64
0x4002a6b	            0x85c0	                           test eax, eax	       218	update-index.c	FUNCTION_10	IF_8	CALL_64
0x4002a6d	            0x742b	                            je 0x4002a9a	       218	update-index.c	FUNCTION_10	IF_8	CALL_64
0x4002a6f	    0x488b1d000000	            mov rbx, qword [0x04002a76] 	       219	update-index.c	FUNCTION_10	CALL_66
0x4002a76	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_100
0x4002a7b	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_100
0x4002a80	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_100
0x4002a85	      0xe800000000	                          call 0x4002a8a	        54	gettext.h	FUNCTION_100
0x4002a8a	          0x4889de	                            mov rsi, rbx	       219	update-index.c	FUNCTION_10	CALL_66
0x4002a8d	          0x4889c7	                            mov rdi, rax	       219	update-index.c	FUNCTION_10	CALL_66
0x4002a90	      0xb800000000	                              mov eax, 0	       219	update-index.c	FUNCTION_10	CALL_66
0x4002a95	      0xe800000000	                          call 0x4002a9a	       219	update-index.c	FUNCTION_10	CALL_66
0x4002a9a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_100
0x4002a9f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_100
0x4002aa4	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_100
0x4002aa9	      0xe800000000	                          call 0x4002aae	        54	gettext.h	FUNCTION_100
0x4002aae	          0x4889c6	                            mov rsi, rax	       220	update-index.c	FUNCTION_10	CALL_68
0x4002ab1	    0x488b3d000000	            mov rdi, qword [0x04002ab8] 	       220	update-index.c	FUNCTION_10	CALL_68
0x4002ab8	      0xb800000000	                              mov eax, 0	       220	update-index.c	FUNCTION_10	CALL_68
0x4002abd	      0xe800000000	                          call 0x4002ac2	       220	update-index.c	FUNCTION_10	CALL_68
0x4002ac2	      0xbb01000000	                              mov ebx, 1	       221	update-index.c	FUNCTION_10
0x4002ac7	      0xbf00000000	                              mov edi, 0	       224	update-index.c	FUNCTION_10	CALL_69
0x4002acc	      0xe800000000	                          call 0x4002ad1	       224	update-index.c	FUNCTION_10	CALL_69
0x4002ad1	            0x89d8	                            mov eax, ebx	      1156	update-index.c	FUNCTION_37	SWITCH_2	CALL_63
0x4002ad3	          0x83f001	                              xor eax, 1	      1156	update-index.c	FUNCTION_37	SWITCH_2	CALL_63
0x4002ad6	      0xe99c010000	                           jmp 0x4002c77	      1156	update-index.c	FUNCTION_37	SWITCH_2	CALL_63
0x4002adb	      0xe800000000	                          call 0x4002ae0	      1159	update-index.c	FUNCTION_37	SWITCH_2	IF_21	CALL_64
0x4002ae0	            0x85c0	                           test eax, eax	      1159	update-index.c	FUNCTION_37	SWITCH_2	IF_21	CALL_64
0x4002ae2	            0x7521	                           jne 0x4002b05	      1159	update-index.c	FUNCTION_37	SWITCH_2	IF_21	CALL_64
0x4002ae4	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_100
0x4002ae9	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_100
0x4002aee	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_100
0x4002af3	      0xe800000000	                          call 0x4002af8	        54	gettext.h	FUNCTION_100
0x4002af8	          0x4889c7	                            mov rdi, rax	      1160	update-index.c	FUNCTION_37	SWITCH_2	IF_21	CALL_66
0x4002afb	      0xb800000000	                              mov eax, 0	      1160	update-index.c	FUNCTION_37	SWITCH_2	IF_21	CALL_66
0x4002b00	      0xe800000000	                          call 0x4002b05	      1160	update-index.c	FUNCTION_37	SWITCH_2	IF_21	CALL_66
0x4002b05	      0xbf00000000	                              mov edi, 0	      1163	update-index.c	FUNCTION_37	SWITCH_2	CALL_67
0x4002b0a	      0xe800000000	                          call 0x4002b0f	      1163	update-index.c	FUNCTION_37	SWITCH_2	CALL_67
0x4002b0f	      0xe800000000	                          call 0x4002b14	      1164	update-index.c	FUNCTION_37	SWITCH_2	CALL_70
0x4002b14	          0x4889c3	                            mov rbx, rax	      1164	update-index.c	FUNCTION_37	SWITCH_2	CALL_70
0x4002b17	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_100
0x4002b1c	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_100
0x4002b21	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_100
0x4002b26	      0xe800000000	                          call 0x4002b2b	        54	gettext.h	FUNCTION_100
0x4002b2b	          0x4889de	                            mov rsi, rbx	      1164	update-index.c	FUNCTION_37	SWITCH_2	CALL_70
0x4002b2e	          0x4889c7	                            mov rdi, rax	      1164	update-index.c	FUNCTION_37	SWITCH_2	CALL_70
0x4002b31	      0xb800000000	                              mov eax, 0	      1164	update-index.c	FUNCTION_37	SWITCH_2	CALL_70
0x4002b36	      0xe833deffff	                         call sym.report	      1164	update-index.c	FUNCTION_37	SWITCH_2	CALL_70
0x4002b3b	            0xeb0f	                           jmp 0x4002b4c	      1165	update-index.c	FUNCTION_37	SWITCH_2
0x4002b3d	      0xbf00000000	                              mov edi, 0	      1167	update-index.c	FUNCTION_37	SWITCH_2	CALL_71
0x4002b42	      0xb800000000	                              mov eax, 0	      1167	update-index.c	FUNCTION_37	SWITCH_2	CALL_71
0x4002b47	      0xe800000000	                          call 0x4002b4c	      1167	update-index.c	FUNCTION_37	SWITCH_2	CALL_71
0x4002b4c	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      1170	update-index.c	FUNCTION_37	IF_22
0x4002b50	            0x85c0	                           test eax, eax	      1170	update-index.c	FUNCTION_37	IF_22
0x4002b52	            0x7e57	                           jle 0x4002bab	      1170	update-index.c	FUNCTION_37	IF_22
0x4002b54	      0xe800000000	                          call 0x4002b59	      1171	update-index.c	FUNCTION_37	IF_22	IF_23	CALL_72
0x4002b59	            0x85c0	                           test eax, eax	      1171	update-index.c	FUNCTION_37	IF_22	IF_23	CALL_72
0x4002b5b	            0x7521	                           jne 0x4002b7e	      1171	update-index.c	FUNCTION_37	IF_22	IF_23	CALL_72
0x4002b5d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_100
0x4002b62	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_100
0x4002b67	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_100
0x4002b6c	      0xe800000000	                          call 0x4002b71	        54	gettext.h	FUNCTION_100
0x4002b71	          0x4889c7	                            mov rdi, rax	      1172	update-index.c	FUNCTION_37	IF_22	IF_23	CALL_74
0x4002b74	      0xb800000000	                              mov eax, 0	      1172	update-index.c	FUNCTION_37	IF_22	IF_23	CALL_74
0x4002b79	      0xe800000000	                          call 0x4002b7e	      1172	update-index.c	FUNCTION_37	IF_22	IF_23	CALL_74
0x4002b7e	      0xbf00000000	                              mov edi, 0	      1175	update-index.c	FUNCTION_37	IF_22	CALL_75
0x4002b83	      0xe800000000	                          call 0x4002b88	      1175	update-index.c	FUNCTION_37	IF_22	CALL_75
0x4002b88	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_100
0x4002b8d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_100
0x4002b92	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_100
0x4002b97	      0xe800000000	                          call 0x4002b9c	        54	gettext.h	FUNCTION_100
0x4002b9c	          0x4889c7	                            mov rdi, rax	      1176	update-index.c	FUNCTION_37	IF_22	CALL_77
0x4002b9f	      0xb800000000	                              mov eax, 0	      1176	update-index.c	FUNCTION_37	IF_22	CALL_77
0x4002ba4	      0xe8c5ddffff	                         call sym.report	      1176	update-index.c	FUNCTION_37	IF_22	CALL_77
0x4002ba9	            0xeb5a	                           jmp 0x4002c05	      1176	update-index.c	FUNCTION_37	IF_22	CALL_77
0x4002bab	            0x85c0	                           test eax, eax	      1177	update-index.c	FUNCTION_37	ELSE_4	IF_24
0x4002bad	            0x7556	                           jne 0x4002c05	      1177	update-index.c	FUNCTION_37	ELSE_4	IF_24
0x4002baf	      0xe800000000	                          call 0x4002bb4	      1178	update-index.c	FUNCTION_37	ELSE_4	IF_24	IF_25	CALL_78
0x4002bb4	          0x83f801	                              cmp eax, 1	      1178	update-index.c	FUNCTION_37	ELSE_4	IF_24	IF_25	CALL_78
0x4002bb7	            0x7521	                           jne 0x4002bda	      1178	update-index.c	FUNCTION_37	ELSE_4	IF_24	IF_25	CALL_78
0x4002bb9	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_100
0x4002bbe	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_100
0x4002bc3	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_100
0x4002bc8	      0xe800000000	                          call 0x4002bcd	        54	gettext.h	FUNCTION_100
0x4002bcd	          0x4889c7	                            mov rdi, rax	      1179	update-index.c	FUNCTION_37	ELSE_4	IF_24	IF_25	CALL_80
0x4002bd0	      0xb800000000	                              mov eax, 0	      1179	update-index.c	FUNCTION_37	ELSE_4	IF_24	IF_25	CALL_80
0x4002bd5	      0xe800000000	                          call 0x4002bda	      1179	update-index.c	FUNCTION_37	ELSE_4	IF_24	IF_25	CALL_80
0x4002bda	      0xbf00000000	                              mov edi, 0	      1182	update-index.c	FUNCTION_37	ELSE_4	IF_24	CALL_81
0x4002bdf	      0xe800000000	                          call 0x4002be4	      1182	update-index.c	FUNCTION_37	ELSE_4	IF_24	CALL_81
0x4002be4	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_100
0x4002be9	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_100
0x4002bee	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_100
0x4002bf3	      0xe800000000	                          call 0x4002bf8	        54	gettext.h	FUNCTION_100
0x4002bf8	          0x4889c7	                            mov rdi, rax	      1183	update-index.c	FUNCTION_37	ELSE_4	IF_24	CALL_83
0x4002bfb	      0xb800000000	                              mov eax, 0	      1183	update-index.c	FUNCTION_37	ELSE_4	IF_24	CALL_83
0x4002c00	      0xe869ddffff	                         call sym.report	      1183	update-index.c	FUNCTION_37	ELSE_4	IF_24	CALL_83
0x4002c05	    0x833d00000000	               cmp dword [0x04002c0c], 0	      1186	update-index.c	FUNCTION_37	IF_26
0x4002c0c	            0x7507	                           jne 0x4002c15	      1186	update-index.c	FUNCTION_37	IF_26
0x4002c0e	      0x837c242800	               cmp dword [rsp + 0x28], 0	      1186	update-index.c	FUNCTION_37	IF_26
0x4002c13	            0x744d	                            je 0x4002c62	      1186	update-index.c	FUNCTION_37	IF_26
0x4002c15	          0x4585f6	                         test r14d, r14d	      1187	update-index.c	FUNCTION_37	IF_26	IF_27
0x4002c18	            0x7921	                           jns 0x4002c3b	      1187	update-index.c	FUNCTION_37	IF_26	IF_27
0x4002c1a	      0xf644244004	               test byte [rsp + 0x40], 4	      1188	update-index.c	FUNCTION_37	IF_26	IF_27	IF_28
0x4002c1f	            0x740a	                            je 0x4002c2b	      1188	update-index.c	FUNCTION_37	IF_26	IF_27	IF_28
0x4002c21	      0xbf80000000	                           mov edi, 0x80	      1189	update-index.c	FUNCTION_37	IF_26	IF_27	CALL_84
0x4002c26	      0xe800000000	                          call 0x4002c2b	      1189	update-index.c	FUNCTION_37	IF_26	IF_27	CALL_84
0x4002c2b	      0xe800000000	                          call 0x4002c30	      1190	update-index.c	FUNCTION_37	IF_26	IF_27	CALL_86
0x4002c30	          0x4489fe	                           mov esi, r15d	      1190	update-index.c	FUNCTION_37	IF_26	IF_27	CALL_86
0x4002c33	          0x4889c7	                            mov rdi, rax	      1190	update-index.c	FUNCTION_37	IF_26	IF_27	CALL_86
0x4002c36	      0xe800000000	                          call 0x4002c3b	      1190	update-index.c	FUNCTION_37	IF_26	IF_27	CALL_86
0x4002c3b	      0xba01000000	                              mov edx, 1	      1192	update-index.c	FUNCTION_37	IF_26	IF_29	CALL_87
0x4002c40	      0x488d742430	                   lea rsi, [rsp + 0x30]	      1192	update-index.c	FUNCTION_37	IF_26	IF_29	CALL_87
0x4002c45	      0xbf00000000	                              mov edi, 0	      1192	update-index.c	FUNCTION_37	IF_26	IF_29	CALL_87
0x4002c4a	      0xe800000000	                          call 0x4002c4f	      1192	update-index.c	FUNCTION_37	IF_26	IF_29	CALL_87
0x4002c4f	            0x85c0	                           test eax, eax	      1192	update-index.c	FUNCTION_37	IF_26	IF_29	CALL_87
0x4002c51	            0x740f	                            je 0x4002c62	      1192	update-index.c	FUNCTION_37	IF_26	IF_29	CALL_87
0x4002c53	      0xbf00000000	                              mov edi, 0	      1193	update-index.c	FUNCTION_37	IF_26	CALL_88
0x4002c58	      0xb800000000	                              mov eax, 0	      1193	update-index.c	FUNCTION_37	IF_26	CALL_88
0x4002c5d	      0xe800000000	                          call 0x4002c62	      1193	update-index.c	FUNCTION_37	IF_26	CALL_88
0x4002c62	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       304	lockfile.h	FUNCTION_149	CALL_1
0x4002c67	      0xe800000000	                          call 0x4002c6c	       304	lockfile.h	FUNCTION_149	CALL_1
0x4002c6c	      0x837c241000	               cmp dword [rsp + 0x10], 0	      1198	update-index.c	FUNCTION_37
0x4002c71	           0xf95c0	                                setne al	      1198	update-index.c	FUNCTION_37
0x4002c74	           0xfb6c0	                           movzx eax, al	      1198	update-index.c	FUNCTION_37
0x4002c77	    0x488b9c24080a	           mov rbx, qword [rsp + 0xa08] 	      1199	update-index.c	FUNCTION_37
0x4002c7f	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1199	update-index.c	FUNCTION_37
0x4002c88	            0x7405	                            je 0x4002c8f	      1199	update-index.c	FUNCTION_37
0x4002c8a	      0xe800000000	                          call 0x4002c8f	      1199	update-index.c	FUNCTION_37
0x4002c8f	    0x4881c4180a00	                          add rsp, 0xa18	      1199	update-index.c	FUNCTION_37
0x4002c96	              0x5b	                                 pop rbx	      1199	update-index.c	FUNCTION_37
0x4002c97	              0x5d	                                 pop rbp	      1199	update-index.c	FUNCTION_37
0x4002c98	            0x415c	                                 pop r12	      1199	update-index.c	FUNCTION_37
0x4002c9a	            0x415d	                                 pop r13	      1199	update-index.c	FUNCTION_37
0x4002c9c	            0x415e	                                 pop r14	      1199	update-index.c	FUNCTION_37
0x4002c9e	            0x415f	                                 pop r15	      1199	update-index.c	FUNCTION_37
0x4002ca0	              0xc3	                                     ret	      1199	update-index.c	FUNCTION_37
add_cacheinfo	SWITCH,0:DO,0:WHILE,0:CALL,8:FOR,0:ELSE,0:IF,3:functions,0	97
0x4000a4d	            0x4157	                                push r15	       405	update-index.c	FUNCTION_17
0x4000a4f	            0x4156	                                push r14	       405	update-index.c	FUNCTION_17
0x4000a51	            0x4155	                                push r13	       405	update-index.c	FUNCTION_17
0x4000a53	            0x4154	                                push r12	       405	update-index.c	FUNCTION_17
0x4000a55	              0x55	                                push rbp	       405	update-index.c	FUNCTION_17
0x4000a56	              0x53	                                push rbx	       405	update-index.c	FUNCTION_17
0x4000a57	        0x4883ec08	                              sub rsp, 8	       405	update-index.c	FUNCTION_17
0x4000a5b	          0x4189fe	                           mov r14d, edi	       405	update-index.c	FUNCTION_17
0x4000a5e	          0x4989f7	                            mov r15, rsi	       405	update-index.c	FUNCTION_17
0x4000a61	          0x4989d5	                            mov r13, rdx	       405	update-index.c	FUNCTION_17
0x4000a64	          0x4189cc	                           mov r12d, ecx	       405	update-index.c	FUNCTION_17
0x4000a67	          0x4889d7	                            mov rdi, rdx	       409	update-index.c	FUNCTION_17	IF_1	CALL_1
0x4000a6a	      0xe800000000	                          call 0x4000a6f	       409	update-index.c	FUNCTION_17	IF_1	CALL_1
0x4000a6f	            0x85c0	                           test eax, eax	       409	update-index.c	FUNCTION_17	IF_1	CALL_1
0x4000a71	            0x7517	                           jne 0x4000a8a	       409	update-index.c	FUNCTION_17	IF_1	CALL_1
0x4000a73	          0x4c89ee	                            mov rsi, r13	       410	update-index.c	FUNCTION_17	IF_1
0x4000a76	      0xbf00000000	                              mov edi, 0	       410	update-index.c	FUNCTION_17	IF_1
0x4000a7b	      0xe800000000	                          call 0x4000a80	       410	update-index.c	FUNCTION_17	IF_1
0x4000a80	      0xbbffffffff	                     mov ebx, 0xffffffff	       410	update-index.c	FUNCTION_17	IF_1
0x4000a85	      0xe905010000	                           jmp 0x4000b8f	       410	update-index.c	FUNCTION_17	IF_1
0x4000a8a	      0xb800000000	                              mov eax, 0	       412	update-index.c	FUNCTION_17	CALL_2
0x4000a8f	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       412	update-index.c	FUNCTION_17	CALL_2
0x4000a96	          0x4c89ef	                            mov rdi, r13	       412	update-index.c	FUNCTION_17	CALL_2
0x4000a99	            0xf2ae	              repne scasb al, byte [rdi]	       412	update-index.c	FUNCTION_17	CALL_2
0x4000a9b	          0x48f7d1	                                 not rcx	       412	update-index.c	FUNCTION_17	CALL_2
0x4000a9e	        0x488d59ff	                      lea rbx, [rcx - 1]	       412	update-index.c	FUNCTION_17	CALL_2
0x4000aa2	          0x8d7359	                   lea esi, [rbx + 0x59]	       414	update-index.c	FUNCTION_17	CALL_3
0x4000aa5	          0x4863f6	                         movsxd rsi, esi	       414	update-index.c	FUNCTION_17	CALL_3
0x4000aa8	      0xbf01000000	                              mov edi, 1	       414	update-index.c	FUNCTION_17	CALL_3
0x4000aad	      0xe800000000	                          call 0x4000ab2	       414	update-index.c	FUNCTION_17	CALL_3
0x4000ab2	          0x4889c5	                            mov rbp, rax	       414	update-index.c	FUNCTION_17	CALL_3
0x4000ab5	          0x498b17	                    mov rdx, qword [r15]	        53	string3.h	FUNCTION_82	CALL_3
0x4000ab8	        0x48895544	            mov qword [rbp + 0x44], rdx 	        53	string3.h	FUNCTION_82	CALL_3
0x4000abc	        0x498b5708	                mov rdx, qword [r15 + 8]	        53	string3.h	FUNCTION_82	CALL_3
0x4000ac0	        0x4889554c	            mov qword [rbp + 0x4c], rdx 	        53	string3.h	FUNCTION_82	CALL_3
0x4000ac4	        0x418b5710	            mov edx, dword [r15 + 0x10] 	        53	string3.h	FUNCTION_82	CALL_3
0x4000ac8	          0x895554	            mov dword [rbp + 0x54], edx 	        53	string3.h	FUNCTION_82	CALL_3
0x4000acb	        0x488d7d58	                   lea rdi, [rbp + 0x58]	        53	string3.h	FUNCTION_82	CALL_3
0x4000acf	          0x4863d3	                         movsxd rdx, ebx	        53	string3.h	FUNCTION_82	CALL_3
0x4000ad2	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_82	CALL_3
0x4000ad5	      0xe800000000	                          call 0x4000ada	        53	string3.h	FUNCTION_82	CALL_3
0x4000ada	        0x41c1e40c	                           shl r12d, 0xc	       242	cache.h	FUNCTION_56
0x4000ade	        0x44896538	           mov dword [rbp + 0x38], r12d 	       418	update-index.c	FUNCTION_17	CALL_6
0x4000ae2	          0x895d3c	            mov dword [rbp + 0x3c], ebx 	       419	update-index.c	FUNCTION_17
0x4000ae5	          0x4489f0	                           mov eax, r14d	       256	cache.h	FUNCTION_57	IF_1	CALL_1
0x4000ae8	      0x2500f00000	                         and eax, 0xf000	       256	cache.h	FUNCTION_57	IF_1	CALL_1
0x4000aed	      0x3d00a00000	                         cmp eax, 0xa000	       256	cache.h	FUNCTION_57	IF_1	CALL_1
0x4000af2	            0x7427	                            je 0x4000b1b	       256	cache.h	FUNCTION_57	IF_1	CALL_1
0x4000af4	      0x3d00400000	                         cmp eax, 0x4000	       258	cache.h	FUNCTION_57	IF_2	CALL_2
0x4000af9	            0x741b	                            je 0x4000b16	       258	cache.h	FUNCTION_57	IF_2	CALL_2
0x4000afb	      0x3d00e00000	                         cmp eax, 0xe000	       258	cache.h	FUNCTION_57	IF_2	CALL_2
0x4000b00	            0x7414	                            je 0x4000b16	       258	cache.h	FUNCTION_57	IF_2	CALL_2
0x4000b02	        0x4183e640	                          and r14d, 0x40	       260	cache.h	FUNCTION_57
0x4000b06	        0x4183fe01	                             cmp r14d, 1	       260	cache.h	FUNCTION_57
0x4000b0a	            0x19c0	                            sbb eax, eax	       260	cache.h	FUNCTION_57
0x4000b0c	          0x83e0b7	                     and eax, 0xffffffb7	       260	cache.h	FUNCTION_57
0x4000b0f	       0x5ed810000	                         add eax, 0x81ed	       260	cache.h	FUNCTION_57
0x4000b14	            0xeb05	                           jmp 0x4000b1b	       260	cache.h	FUNCTION_57
0x4000b16	      0xb800e00000	                         mov eax, 0xe000	       259	cache.h	FUNCTION_57	IF_2
0x4000b1b	          0x894534	            mov dword [rbp + 0x34], eax 	       420	update-index.c	FUNCTION_17	CALL_7
0x4000b1e	    0x833d00000000	               cmp dword [0x04000b25], 0	       421	update-index.c	FUNCTION_17	IF_2
0x4000b25	            0x740b	                            je 0x4000b32	       421	update-index.c	FUNCTION_17	IF_2
0x4000b27	    0x4181cc008000	                         or r12d, 0x8000	       422	update-index.c	FUNCTION_17	IF_2
0x4000b2e	        0x44896538	           mov dword [rbp + 0x38], r12d 	       422	update-index.c	FUNCTION_17	IF_2
0x4000b32	    0x833d00000000	               cmp dword [0x04000b39], 0	       423	update-index.c	FUNCTION_17
0x4000b39	           0xf95c0	                                setne al	       423	update-index.c	FUNCTION_17
0x4000b3c	           0xfb6c0	                           movzx eax, al	       423	update-index.c	FUNCTION_17
0x4000b3f	    0x8b1500000000	            mov edx, dword [0x04000b45] 	       424	update-index.c	FUNCTION_17
0x4000b45	            0x85d2	                           test edx, edx	       424	update-index.c	FUNCTION_17
0x4000b47	      0xb902000000	                              mov ecx, 2	       424	update-index.c	FUNCTION_17
0x4000b4c	           0xf45d1	                         cmovne edx, ecx	       424	update-index.c	FUNCTION_17
0x4000b4f	             0x9c2	                             or edx, eax	       425	update-index.c	FUNCTION_17	IF_3
0x4000b51	          0x4889ee	                            mov rsi, rbp	       425	update-index.c	FUNCTION_17	IF_3
0x4000b54	      0xbf00000000	                              mov edi, 0	       425	update-index.c	FUNCTION_17	IF_3
0x4000b59	      0xe800000000	                          call 0x4000b5e	       425	update-index.c	FUNCTION_17	IF_3
0x4000b5e	            0x89c3	                            mov ebx, eax	       425	update-index.c	FUNCTION_17	IF_3
0x4000b60	            0x85c0	                           test eax, eax	       425	update-index.c	FUNCTION_17	IF_3
0x4000b62	            0x7419	                            je 0x4000b7d	       425	update-index.c	FUNCTION_17	IF_3
0x4000b64	          0x4c89ee	                            mov rsi, r13	       426	update-index.c	FUNCTION_17	IF_3
0x4000b67	      0xbf00000000	                              mov edi, 0	       426	update-index.c	FUNCTION_17	IF_3
0x4000b6c	      0xb800000000	                              mov eax, 0	       426	update-index.c	FUNCTION_17	IF_3
0x4000b71	      0xe800000000	                          call 0x4000b76	       426	update-index.c	FUNCTION_17	IF_3
0x4000b76	      0xbbffffffff	                     mov ebx, 0xffffffff	       426	update-index.c	FUNCTION_17	IF_3
0x4000b7b	            0xeb12	                           jmp 0x4000b8f	       426	update-index.c	FUNCTION_17	IF_3
0x4000b7d	          0x4c89ee	                            mov rsi, r13	       428	update-index.c	FUNCTION_17	CALL_8
0x4000b80	      0xbf00000000	                              mov edi, 0	       428	update-index.c	FUNCTION_17	CALL_8
0x4000b85	      0xb800000000	                              mov eax, 0	       428	update-index.c	FUNCTION_17	CALL_8
0x4000b8a	      0xe8dffdffff	                         call sym.report	       428	update-index.c	FUNCTION_17	CALL_8
0x4000b8f	            0x89d8	                            mov eax, ebx	       430	update-index.c	FUNCTION_17
0x4000b91	        0x4883c408	                              add rsp, 8	       430	update-index.c	FUNCTION_17
0x4000b95	              0x5b	                                 pop rbx	       430	update-index.c	FUNCTION_17
0x4000b96	              0x5d	                                 pop rbp	       430	update-index.c	FUNCTION_17
0x4000b97	            0x415c	                                 pop r12	       430	update-index.c	FUNCTION_17
0x4000b99	            0x415d	                                 pop r13	       430	update-index.c	FUNCTION_17
0x4000b9b	            0x415e	                                 pop r14	       430	update-index.c	FUNCTION_17
0x4000b9d	            0x415f	                                 pop r15	       430	update-index.c	FUNCTION_17
0x4000b9f	              0xc3	                                     ret	       430	update-index.c	FUNCTION_17
mark_ce_flags	SWITCH,0:DO,0:WHILE,0:CALL,3:FOR,0:ELSE,1:IF,2:functions,0	68
0x4000632	            0x4156	                                push r14	       229	update-index.c	FUNCTION_11
0x4000634	            0x4155	                                push r13	       229	update-index.c	FUNCTION_11
0x4000636	            0x4154	                                push r12	       229	update-index.c	FUNCTION_11
0x4000638	              0x55	                                push rbp	       229	update-index.c	FUNCTION_11
0x4000639	              0x53	                                push rbx	       229	update-index.c	FUNCTION_11
0x400063a	          0x4889fb	                            mov rbx, rdi	       229	update-index.c	FUNCTION_11
0x400063d	            0x89f5	                            mov ebp, esi	       229	update-index.c	FUNCTION_11
0x400063f	          0x4189d4	                           mov r12d, edx	       229	update-index.c	FUNCTION_11
0x4000642	      0xb800000000	                              mov eax, 0	       230	update-index.c	FUNCTION_11	CALL_1
0x4000647	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       230	update-index.c	FUNCTION_11	CALL_1
0x400064e	            0xf2ae	              repne scasb al, byte [rdi]	       230	update-index.c	FUNCTION_11	CALL_1
0x4000650	          0x48f7d1	                                 not rcx	       230	update-index.c	FUNCTION_11	CALL_1
0x4000653	        0x488d51ff	                      lea rdx, [rcx - 1]	       230	update-index.c	FUNCTION_11	CALL_1
0x4000657	          0x4889de	                            mov rsi, rbx	       231	update-index.c	FUNCTION_11
0x400065a	      0xbf00000000	                              mov edi, 0	       231	update-index.c	FUNCTION_11
0x400065f	      0xe800000000	                          call 0x4000664	       231	update-index.c	FUNCTION_11
0x4000664	            0x85c0	                           test eax, eax	       232	update-index.c	FUNCTION_11	IF_1
0x4000666	     0xf88cc000000	                            js 0x4000738	       232	update-index.c	FUNCTION_11	IF_1
0x400066c	          0x4c63e8	                         movsxd r13, eax	       233	update-index.c	FUNCTION_11	IF_1	CALL_2
0x400066f	    0x488b05000000	            mov rax, qword [0x04000676] 	       233	update-index.c	FUNCTION_11	IF_1	CALL_2
0x4000676	        0x4a8d04e8	                  lea rax, [rax + r13*8]	       233	update-index.c	FUNCTION_11	IF_1	CALL_2
0x400067a	    0x48833d000000	               cmp qword [0x04000682], 0	        66	fsmonitor.h	FUNCTION_151	IF_1
0x4000682	            0x7462	                            je 0x40006e6	        66	fsmonitor.h	FUNCTION_151	IF_1
0x4000684	          0x4c8b30	                    mov r14, qword [rax]	       233	update-index.c	FUNCTION_11	IF_1	CALL_2
0x4000687	    0x41816638ffff	      and dword [r14 + 0x38], 0xffdfffff	        67	fsmonitor.h	FUNCTION_151	IF_1
0x400068f	        0x4983c658	                           add r14, 0x58	        68	fsmonitor.h	FUNCTION_151	IF_1	CALL_1
0x4000693	      0xba01000000	                              mov edx, 1	        68	fsmonitor.h	FUNCTION_151	IF_1	CALL_1
0x4000698	          0x4c89f6	                            mov rsi, r14	        68	fsmonitor.h	FUNCTION_151	IF_1	CALL_1
0x400069b	      0xbf00000000	                              mov edi, 0	        68	fsmonitor.h	FUNCTION_151	IF_1	CALL_1
0x40006a0	      0xe800000000	                          call 0x40006a5	        68	fsmonitor.h	FUNCTION_151	IF_1	CALL_1
0x40006a5	    0x48b8ffffffff	                 movabs rax, 0x1ffffffff	        69	fsmonitor.h	FUNCTION_151	IF_1	CALL_2
0x40006af	    0x482305000000	             and rax, qword [0x040006b6]	        69	fsmonitor.h	FUNCTION_151	IF_1	CALL_2
0x40006b6	    0x48ba00000000	                 movabs rdx, 0x100000000	        69	fsmonitor.h	FUNCTION_151	IF_1	CALL_2
0x40006c0	          0x4839d0	                            cmp rax, rdx	        69	fsmonitor.h	FUNCTION_151	IF_1	CALL_2
0x40006c3	            0x7421	                            je 0x40006e6	        69	fsmonitor.h	FUNCTION_151	IF_1	CALL_2
0x40006c5	          0x4d89f0	                             mov r8, r14	        69	fsmonitor.h	FUNCTION_151	IF_1	CALL_2
0x40006c8	      0xb900000000	                              mov ecx, 0	        69	fsmonitor.h	FUNCTION_151	IF_1	CALL_2
0x40006cd	      0xba00000000	                              mov edx, 0	        69	fsmonitor.h	FUNCTION_151	IF_1	CALL_2
0x40006d2	      0xbe45000000	                           mov esi, 0x45	        69	fsmonitor.h	FUNCTION_151	IF_1	CALL_2
0x40006d7	      0xbf00000000	                              mov edi, 0	        69	fsmonitor.h	FUNCTION_151	IF_1	CALL_2
0x40006dc	      0xb800000000	                              mov eax, 0	        69	fsmonitor.h	FUNCTION_151	IF_1	CALL_2
0x40006e1	      0xe800000000	                          call 0x40006e6	        69	fsmonitor.h	FUNCTION_151	IF_1	CALL_2
0x40006e6	          0x4585e4	                         test r12d, r12d	       234	update-index.c	FUNCTION_11	IF_1	IF_2
0x40006e9	            0x7410	                            je 0x40006fb	       234	update-index.c	FUNCTION_11	IF_1	IF_2
0x40006eb	    0x488b05000000	            mov rax, qword [0x040006f2] 	       235	update-index.c	FUNCTION_11	IF_1	IF_2
0x40006f2	        0x4a8b04e8	            mov rax, qword [rax + r13*8]	       235	update-index.c	FUNCTION_11	IF_1	IF_2
0x40006f6	           0x96838	              or dword [rax + 0x38], ebp	       235	update-index.c	FUNCTION_11	IF_1	IF_2
0x40006f9	            0xeb10	                           jmp 0x400070b	       235	update-index.c	FUNCTION_11	IF_1	IF_2
0x40006fb	    0x488b05000000	            mov rax, qword [0x04000702] 	       237	update-index.c	FUNCTION_11	IF_1	ELSE_1
0x4000702	        0x4a8b04e8	            mov rax, qword [rax + r13*8]	       237	update-index.c	FUNCTION_11	IF_1	ELSE_1
0x4000706	            0xf7d5	                                 not ebp	       237	update-index.c	FUNCTION_11	IF_1	ELSE_1
0x4000708	          0x216838	             and dword [rax + 0x38], ebp	       237	update-index.c	FUNCTION_11	IF_1	ELSE_1
0x400070b	    0x488b05000000	            mov rax, qword [0x04000712] 	       238	update-index.c	FUNCTION_11	IF_1
0x4000712	        0x4a8b04e8	            mov rax, qword [rax + r13*8]	       238	update-index.c	FUNCTION_11	IF_1
0x4000716	    0x814838000000	     or dword [rax + 0x38], section_end.	       238	update-index.c	FUNCTION_11	IF_1
0x400071d	          0x4889de	                            mov rsi, rbx	       239	update-index.c	FUNCTION_11	IF_1	CALL_3
0x4000720	      0xbf00000000	                              mov edi, 0	       239	update-index.c	FUNCTION_11	IF_1	CALL_3
0x4000725	      0xe800000000	                          call 0x400072a	       239	update-index.c	FUNCTION_11	IF_1	CALL_3
0x400072a	    0x830d00000000	                or dword [0x04000731], 2	       240	update-index.c	FUNCTION_11	IF_1
0x4000731	      0xb800000000	                              mov eax, 0	       241	update-index.c	FUNCTION_11	IF_1
0x4000736	            0xeb05	                           jmp 0x400073d	       241	update-index.c	FUNCTION_11	IF_1
0x4000738	      0xb8ffffffff	                     mov eax, 0xffffffff	       243	update-index.c	FUNCTION_11
0x400073d	              0x5b	                                 pop rbx	       244	update-index.c	FUNCTION_11
0x400073e	              0x5d	                                 pop rbp	       244	update-index.c	FUNCTION_11
0x400073f	            0x415c	                                 pop r12	       244	update-index.c	FUNCTION_11
0x4000741	            0x415d	                                 pop r13	       244	update-index.c	FUNCTION_11
0x4000743	            0x415e	                                 pop r14	       244	update-index.c	FUNCTION_11
0x4000745	              0xc3	                                     ret	       244	update-index.c	FUNCTION_11
xunlink	SWITCH,0:DO,0:WHILE,0:CALL,4:FOR,0:ELSE,0:IF,1:functions,0	17
0x4001473	              0x53	                                push rbx	       103	update-index.c	FUNCTION_7
0x4001474	      0xe841ffffff	                 call sym.get_mtime_path	       104	update-index.c	FUNCTION_7	CALL_1
0x4001479	          0x4889c3	                            mov rbx, rax	       104	update-index.c	FUNCTION_7	CALL_1
0x400147c	          0x4889c7	                            mov rdi, rax	       105	update-index.c	FUNCTION_7	IF_1	CALL_2
0x400147f	      0xe800000000	                          call 0x4001484	       105	update-index.c	FUNCTION_7	IF_1	CALL_2
0x4001484	            0x85c0	                           test eax, eax	       105	update-index.c	FUNCTION_7	IF_1	CALL_2
0x4001486	            0x7424	                            je 0x40014ac	       105	update-index.c	FUNCTION_7	IF_1	CALL_2
0x4001488	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_100
0x400148d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_100
0x4001492	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_100
0x4001497	      0xe800000000	                          call 0x400149c	        54	gettext.h	FUNCTION_100
0x400149c	          0x4889de	                            mov rsi, rbx	       106	update-index.c	FUNCTION_7	CALL_4
0x400149f	          0x4889c7	                            mov rdi, rax	       106	update-index.c	FUNCTION_7	CALL_4
0x40014a2	      0xb800000000	                              mov eax, 0	       106	update-index.c	FUNCTION_7	CALL_4
0x40014a7	      0xe800000000	                          call 0x40014ac	       106	update-index.c	FUNCTION_7	CALL_4
0x40014ac	              0x5b	                                 pop rbx	       107	update-index.c	FUNCTION_7
0x40014ad	              0xc3	                                     ret	       107	update-index.c	FUNCTION_7
create_file	SWITCH,0:DO,0:WHILE,0:CALL,4:FOR,0:ELSE,0:IF,1:functions,0	20
0x4001429	              0x53	                                push rbx	        93	update-index.c	FUNCTION_6
0x400142a	      0xe88bffffff	                 call sym.get_mtime_path	        95	update-index.c	FUNCTION_6	CALL_1
0x400142f	          0x4889c3	                            mov rbx, rax	        95	update-index.c	FUNCTION_6	CALL_1
0x4001432	      0xbaa4010000	                          mov edx, 0x1a4	        53	fcntl2.h	FUNCTION_94	IF_2	CALL_9
0x4001437	      0xbe42000000	                           mov esi, 0x42	        53	fcntl2.h	FUNCTION_94	IF_2	CALL_9
0x400143c	          0x4889c7	                            mov rdi, rax	        53	fcntl2.h	FUNCTION_94	IF_2	CALL_9
0x400143f	      0xb800000000	                              mov eax, 0	        53	fcntl2.h	FUNCTION_94	IF_2	CALL_9
0x4001444	      0xe800000000	                          call 0x4001449	        53	fcntl2.h	FUNCTION_94	IF_2	CALL_9
0x4001449	            0x85c0	                           test eax, eax	        97	update-index.c	FUNCTION_6	IF_1
0x400144b	            0x7924	                           jns 0x4001471	        97	update-index.c	FUNCTION_6	IF_1
0x400144d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_100
0x4001452	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_100
0x4001457	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_100
0x400145c	      0xe800000000	                          call 0x4001461	        54	gettext.h	FUNCTION_100
0x4001461	          0x4889de	                            mov rsi, rbx	        98	update-index.c	FUNCTION_6	CALL_4
0x4001464	          0x4889c7	                            mov rdi, rax	        98	update-index.c	FUNCTION_6	CALL_4
0x4001467	      0xb800000000	                              mov eax, 0	        98	update-index.c	FUNCTION_6	CALL_4
0x400146c	      0xe800000000	                          call 0x4001471	        98	update-index.c	FUNCTION_6	CALL_4
0x4001471	              0x5b	                                 pop rbx	       100	update-index.c	FUNCTION_6
0x4001472	              0xc3	                                     ret	       100	update-index.c	FUNCTION_6
reupdate_callback	SWITCH,0:DO,0:WHILE,0:CALL,3:FOR,0:ELSE,0:IF,1:functions,0	112
0x400116a	            0x4157	                                push r15	       901	update-index.c	FUNCTION_36
0x400116c	            0x4156	                                push r14	       901	update-index.c	FUNCTION_36
0x400116e	            0x4155	                                push r13	       901	update-index.c	FUNCTION_36
0x4001170	            0x4154	                                push r12	       901	update-index.c	FUNCTION_36
0x4001172	              0x55	                                push rbp	       901	update-index.c	FUNCTION_36
0x4001173	              0x53	                                push rbx	       901	update-index.c	FUNCTION_36
0x4001174	        0x4883ec38	                           sub rsp, 0x38	       901	update-index.c	FUNCTION_36
0x4001178	          0x4989fe	                            mov r14, rdi	       901	update-index.c	FUNCTION_36
0x400117b	    0x64488b042528	                mov rax, qword fs:[0x28]	       901	update-index.c	FUNCTION_36
0x4001184	      0x4889442428	             mov qword [rsp + 0x28], rax	       901	update-index.c	FUNCTION_36
0x4001189	            0x31c0	                            xor eax, eax	       901	update-index.c	FUNCTION_36
0x400118b	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       902	update-index.c	FUNCTION_36
0x400118f	      0x4889442408	                mov qword [rsp + 8], rax	       902	update-index.c	FUNCTION_36
0x4001194	    0x488b05000000	            mov rax, qword [0x0400119b] 	       903	update-index.c	FUNCTION_36
0x400119b	        0x488b5808	                mov rbx, qword [rax + 8]	       903	update-index.c	FUNCTION_36
0x400119f	      0xe800000000	                          call 0x40011a4	       906	update-index.c	FUNCTION_36	CALL_1
0x40011a4	          0x498b06	                    mov rax, qword [r14]	       728	update-index.c	FUNCTION_25	CALL_1
0x40011a7	        0x4c8d4008	                       lea r8, [rax + 8]	       728	update-index.c	FUNCTION_25	CALL_1
0x40011ab	          0x4889d9	                            mov rcx, rbx	       728	update-index.c	FUNCTION_25	CALL_1
0x40011ae	      0xba01000000	                              mov edx, 1	       728	update-index.c	FUNCTION_25	CALL_1
0x40011b3	      0xbe00000000	                              mov esi, 0	       728	update-index.c	FUNCTION_25	CALL_1
0x40011b8	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       728	update-index.c	FUNCTION_25	CALL_1
0x40011bd	      0xe800000000	                          call 0x40011c2	       728	update-index.c	FUNCTION_25	CALL_1
0x40011c2	      0xbe00000000	                              mov esi, 0	       732	update-index.c	FUNCTION_25	IF_1	CALL_2
0x40011c7	      0xbf00000000	                              mov edi, 0	       732	update-index.c	FUNCTION_25	IF_1	CALL_2
0x40011cc	      0xe800000000	                          call 0x40011d1	       732	update-index.c	FUNCTION_25	IF_1	CALL_2
0x40011d1	          0x4189c7	                           mov r15d, eax	       732	update-index.c	FUNCTION_25	IF_1	CALL_2
0x40011d4	    0x833d00000000	               cmp dword [0x040011db], 0	       738	update-index.c	FUNCTION_25	FOR_1
0x40011db	     0xf8401010000	                            je 0x40012e2	       738	update-index.c	FUNCTION_25	FOR_1
0x40011e1	      0xbb00000000	                              mov ebx, 0	       738	update-index.c	FUNCTION_25	FOR_1
0x40011e6	          0x4863c3	                         movsxd rax, ebx	       739	update-index.c	FUNCTION_25	FOR_1
0x40011e9	    0x488b15000000	            mov rdx, qword [0x040011f0] 	       739	update-index.c	FUNCTION_25	FOR_1
0x40011f0	        0x488b2cc2	            mov rbp, qword [rdx + rax*8]	       739	update-index.c	FUNCTION_25	FOR_1
0x40011f4	    0xf74538003000	        test dword [rbp + 0x38], 0x3000 	       744	update-index.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x40011fb	     0xf85d2000000	                           jne 0x40012d3	       744	update-index.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x4001201	          0x8b4534	            mov eax, dword [rbp + 0x34] 	       337	dir.h	FUNCTION_153	CALL_2
0x4001204	      0x2500f00000	                         and eax, 0xf000	       337	dir.h	FUNCTION_153	CALL_2
0x4001209	        0x4c8d6558	                   lea r12, [rbp + 0x58]	       336	dir.h	FUNCTION_153	CALL_1
0x400120d	      0x3d00400000	                         cmp eax, 0x4000	       336	dir.h	FUNCTION_153	CALL_1
0x4001212	        0x410f94c1	                                sete r9b	       336	dir.h	FUNCTION_153	CALL_1
0x4001216	      0x3d00e00000	                         cmp eax, 0xe000	       336	dir.h	FUNCTION_153	CALL_1
0x400121b	           0xf94c0	                                 sete al	       336	dir.h	FUNCTION_153	CALL_1
0x400121e	          0x4109c1	                             or r9d, eax	       336	dir.h	FUNCTION_153	CALL_1
0x4001221	          0x8b553c	            mov edx, dword [rbp + 0x3c] 	       336	dir.h	FUNCTION_153	CALL_1
0x4001224	        0x4183e101	                              and r9d, 1	       336	dir.h	FUNCTION_153	CALL_1
0x4001228	    0x41b800000000	                              mov r8d, 0	       336	dir.h	FUNCTION_153	CALL_1
0x400122e	      0xb900000000	                              mov ecx, 0	       336	dir.h	FUNCTION_153	CALL_1
0x4001233	          0x4c89e6	                            mov rsi, r12	       336	dir.h	FUNCTION_153	CALL_1
0x4001236	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       336	dir.h	FUNCTION_153	CALL_1
0x400123b	      0xe800000000	                          call 0x4001240	       336	dir.h	FUNCTION_153	CALL_1
0x4001240	            0x85c0	                           test eax, eax	       744	update-index.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x4001242	     0xf848b000000	                            je 0x40012d3	       744	update-index.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x4001248	    0x41bd00000000	                             mov r13d, 0	       740	update-index.c	FUNCTION_25	FOR_1
0x400124e	          0x4585ff	                         test r15d, r15d	       746	update-index.c	FUNCTION_25	FOR_1	IF_3
0x4001251	            0x754b	                           jne 0x400129e	       746	update-index.c	FUNCTION_25	FOR_1	IF_3
0x4001253	          0x8b4d3c	            mov ecx, dword [rbp + 0x3c] 	       747	update-index.c	FUNCTION_25	FOR_1	IF_3	CALL_4
0x4001256	    0x41b800000000	                              mov r8d, 0	       747	update-index.c	FUNCTION_25	FOR_1	IF_3	CALL_4
0x400125c	          0x4c89e2	                            mov rdx, r12	       747	update-index.c	FUNCTION_25	FOR_1	IF_3	CALL_4
0x400125f	      0xbe00000000	                              mov esi, 0	       747	update-index.c	FUNCTION_25	FOR_1	IF_3	CALL_4
0x4001264	      0xbf00000000	                              mov edi, 0	       747	update-index.c	FUNCTION_25	FOR_1	IF_3	CALL_4
0x4001269	      0xe864eeffff	                   call sym.read_one_ent	       747	update-index.c	FUNCTION_25	FOR_1	IF_3	CALL_4
0x400126e	          0x4989c5	                            mov r13, rax	       747	update-index.c	FUNCTION_25	FOR_1	IF_3	CALL_4
0x4001271	          0x4885c0	                           test rax, rax	       749	update-index.c	FUNCTION_25	FOR_1	IF_4
0x4001274	            0x7428	                            je 0x400129e	       749	update-index.c	FUNCTION_25	FOR_1	IF_4
0x4001276	          0x8b4034	            mov eax, dword [rax + 0x34] 	       749	update-index.c	FUNCTION_25	FOR_1	IF_4
0x4001279	          0x394534	            cmp dword [rbp + 0x34], eax 	       749	update-index.c	FUNCTION_25	FOR_1	IF_4
0x400127c	            0x7520	                           jne 0x400129e	       749	update-index.c	FUNCTION_25	FOR_1	IF_4
0x400127e	        0x498d7544	                   lea rsi, [r13 + 0x44]	       975	cache.h	FUNCTION_62	CALL_1
0x4001282	        0x488d7d44	                   lea rdi, [rbp + 0x44]	       975	cache.h	FUNCTION_62	CALL_1
0x4001286	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_62	CALL_1
0x400128b	      0xe800000000	                          call 0x4001290	       975	cache.h	FUNCTION_62	CALL_1
0x4001290	            0x85c0	                           test eax, eax	       749	update-index.c	FUNCTION_25	FOR_1	IF_4
0x4001292	            0x750a	                           jne 0x400129e	       749	update-index.c	FUNCTION_25	FOR_1	IF_4
0x4001294	          0x4c89ef	                            mov rdi, r13	       751	update-index.c	FUNCTION_25	FOR_1	IF_4	CALL_6
0x4001297	      0xe800000000	                          call 0x400129c	       751	update-index.c	FUNCTION_25	FOR_1	IF_4	CALL_6
0x400129c	            0xeb35	                           jmp 0x40012d3	       751	update-index.c	FUNCTION_25	FOR_1	IF_4	CALL_6
0x400129e	    0x8b2d00000000	            mov ebp, dword [0x040012a4] 	       758	update-index.c	FUNCTION_25	FOR_1
0x40012a4	          0x4c89e7	                            mov rdi, r12	       759	update-index.c	FUNCTION_25	FOR_1	CALL_7
0x40012a7	      0xe800000000	                          call 0x40012ac	       759	update-index.c	FUNCTION_25	FOR_1	CALL_7
0x40012ac	          0x4989c4	                            mov r12, rax	       759	update-index.c	FUNCTION_25	FOR_1	CALL_7
0x40012af	          0x4889c7	                            mov rdi, rax	       760	update-index.c	FUNCTION_25	FOR_1	CALL_8
0x40012b2	      0xe8d0faffff	                     call sym.update_one	       760	update-index.c	FUNCTION_25	FOR_1	CALL_8
0x40012b7	          0x4c89e7	                            mov rdi, r12	       761	update-index.c	FUNCTION_25	FOR_1	CALL_9
0x40012ba	      0xe800000000	                          call 0x40012bf	       761	update-index.c	FUNCTION_25	FOR_1	CALL_9
0x40012bf	          0x4c89ef	                            mov rdi, r13	       762	update-index.c	FUNCTION_25	FOR_1	CALL_10
0x40012c2	      0xe800000000	                          call 0x40012c7	       762	update-index.c	FUNCTION_25	FOR_1	CALL_10
0x40012c7	    0x3b2d00000000	            cmp ebp, dword [0x040012cd] 	       763	update-index.c	FUNCTION_25	FOR_1	IF_5
0x40012cd	     0xf8501ffffff	                           jne 0x40011d4	       763	update-index.c	FUNCTION_25	FOR_1	IF_5
0x40012d3	          0x83c301	                              add ebx, 1	       738	update-index.c	FUNCTION_25	FOR_1
0x40012d6	    0x391d00000000	            cmp dword [0x040012dc], ebx 	       738	update-index.c	FUNCTION_25	FOR_1
0x40012dc	     0xf8704ffffff	                            ja 0x40011e6	       738	update-index.c	FUNCTION_25	FOR_1
0x40012e2	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       766	update-index.c	FUNCTION_25	CALL_11
0x40012e7	      0xe800000000	                          call 0x40012ec	       766	update-index.c	FUNCTION_25	CALL_11
0x40012ec	      0x488b442408	                mov rax, qword [rsp + 8]	       907	update-index.c	FUNCTION_36	CALL_2
0x40012f1	    0xc70000000000	                      mov dword [rax], 0	       907	update-index.c	FUNCTION_36	CALL_2
0x40012f7	        0x49634610	         movsxd rax, dword [r14 + 0x10] 	       912	update-index.c	FUNCTION_36
0x40012fb	    0x488d04c5f8ff	                    lea rax, [rax*8 - 8]	       912	update-index.c	FUNCTION_36
0x4001303	          0x490106	                    add qword [r14], rax	       912	update-index.c	FUNCTION_36
0x4001306	    0x41c746100100	               mov dword [r14 + 0x10], 1	       913	update-index.c	FUNCTION_36
0x400130e	      0xb800000000	                              mov eax, 0	       915	update-index.c	FUNCTION_36
0x4001313	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       915	update-index.c	FUNCTION_36
0x4001318	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       915	update-index.c	FUNCTION_36
0x4001321	            0x7405	                            je 0x4001328	       915	update-index.c	FUNCTION_36
0x4001323	      0xe800000000	                          call 0x4001328	       915	update-index.c	FUNCTION_36
0x4001328	        0x4883c438	                           add rsp, 0x38	       915	update-index.c	FUNCTION_36
0x400132c	              0x5b	                                 pop rbx	       915	update-index.c	FUNCTION_36
0x400132d	              0x5d	                                 pop rbp	       915	update-index.c	FUNCTION_36
0x400132e	            0x415c	                                 pop r12	       915	update-index.c	FUNCTION_36
0x4001330	            0x415d	                                 pop r13	       915	update-index.c	FUNCTION_36
0x4001332	            0x415e	                                 pop r14	       915	update-index.c	FUNCTION_36
0x4001334	            0x415f	                                 pop r15	       915	update-index.c	FUNCTION_36
0x4001336	              0xc3	                                     ret	       915	update-index.c	FUNCTION_36
chmod_path	SWITCH,0:DO,0:WHILE,0:CALL,3:FOR,0:ELSE,0:IF,2:functions,0	39
0x4001337	            0x4154	                                push r12	       433	update-index.c	FUNCTION_18
0x4001339	              0x55	                                push rbp	       433	update-index.c	FUNCTION_18
0x400133a	              0x53	                                push rbx	       433	update-index.c	FUNCTION_18
0x400133b	            0x89fd	                            mov ebp, edi	       433	update-index.c	FUNCTION_18
0x400133d	          0x4889f3	                            mov rbx, rsi	       433	update-index.c	FUNCTION_18
0x4001340	      0xb800000000	                              mov eax, 0	       437	update-index.c	FUNCTION_18	CALL_1
0x4001345	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       437	update-index.c	FUNCTION_18	CALL_1
0x400134c	          0x4889f7	                            mov rdi, rsi	       437	update-index.c	FUNCTION_18	CALL_1
0x400134f	            0xf2ae	              repne scasb al, byte [rdi]	       437	update-index.c	FUNCTION_18	CALL_1
0x4001351	          0x48f7d1	                                 not rcx	       437	update-index.c	FUNCTION_18	CALL_1
0x4001354	        0x488d51ff	                      lea rdx, [rcx - 1]	       437	update-index.c	FUNCTION_18	CALL_1
0x4001358	      0xbf00000000	                              mov edi, 0	       437	update-index.c	FUNCTION_18	CALL_1
0x400135d	      0xe800000000	                          call 0x4001362	       437	update-index.c	FUNCTION_18	CALL_1
0x4001362	            0x85c0	                           test eax, eax	       438	update-index.c	FUNCTION_18	IF_1
0x4001364	            0x7839	                            js 0x400139f	       438	update-index.c	FUNCTION_18	IF_1
0x4001366	        0x440fbee5	                         movsx r12d, bpl	       441	update-index.c	FUNCTION_18	IF_2
0x400136a	            0x4898	                                    cdqe	       440	update-index.c	FUNCTION_18
0x400136c	    0x488b15000000	            mov rdx, qword [0x04001373] 	       440	update-index.c	FUNCTION_18
0x4001373	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       441	update-index.c	FUNCTION_18	IF_2
0x4001377	          0x4489e2	                           mov edx, r12d	       441	update-index.c	FUNCTION_18	IF_2
0x400137a	      0xbf00000000	                              mov edi, 0	       441	update-index.c	FUNCTION_18	IF_2
0x400137f	      0xe800000000	                          call 0x4001384	       441	update-index.c	FUNCTION_18	IF_2
0x4001384	            0x85c0	                           test eax, eax	       441	update-index.c	FUNCTION_18	IF_2
0x4001386	            0x7817	                            js 0x400139f	       441	update-index.c	FUNCTION_18	IF_2
0x4001388	          0x4889da	                            mov rdx, rbx	       444	update-index.c	FUNCTION_18	CALL_2
0x400138b	          0x4489e6	                           mov esi, r12d	       444	update-index.c	FUNCTION_18	CALL_2
0x400138e	      0xbf00000000	                              mov edi, 0	       444	update-index.c	FUNCTION_18	CALL_2
0x4001393	      0xb800000000	                              mov eax, 0	       444	update-index.c	FUNCTION_18	CALL_2
0x4001398	      0xe8d1f5ffff	                         call sym.report	       444	update-index.c	FUNCTION_18	CALL_2
0x400139d	            0xeb16	                           jmp 0x40013b5	       445	update-index.c	FUNCTION_18
0x400139f	        0x400fbef5	                          movsx esi, bpl	       447	update-index.c	FUNCTION_18	CALL_3
0x40013a3	          0x4889da	                            mov rdx, rbx	       447	update-index.c	FUNCTION_18	CALL_3
0x40013a6	      0xbf00000000	                              mov edi, 0	       447	update-index.c	FUNCTION_18	CALL_3
0x40013ab	      0xb800000000	                              mov eax, 0	       447	update-index.c	FUNCTION_18	CALL_3
0x40013b0	      0xe800000000	                          call 0x40013b5	       447	update-index.c	FUNCTION_18	CALL_3
0x40013b5	              0x5b	                                 pop rbx	       448	update-index.c	FUNCTION_18
0x40013b6	              0x5d	                                 pop rbp	       448	update-index.c	FUNCTION_18
0x40013b7	            0x415c	                                 pop r12	       448	update-index.c	FUNCTION_18
0x40013b9	              0xc3	                                     ret	       448	update-index.c	FUNCTION_18
get_mtime_path	SWITCH,0:DO,0:WHILE,0:CALL,1:FOR,0:ELSE,0:IF,0:functions,0	23
0x40013ba	        0x4883ec08	                              sub rsp, 8	        71	update-index.c	FUNCTION_3
0x40013be	    0x48c705000000	               mov qword [0x040013c9], 0	       164	strbuf.h	FUNCTION_131
0x40013c9	    0x488b05000000	            mov rax, qword [0x040013d0] 	       165	strbuf.h	FUNCTION_131	IF_2
0x40013d0	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_131	IF_2
0x40013d6	            0x7405	                            je 0x40013dd	       165	strbuf.h	FUNCTION_131	IF_2
0x40013d8	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_131	IF_2
0x40013db	            0xeb22	                           jmp 0x40013ff	       166	strbuf.h	FUNCTION_131	IF_2
0x40013dd	    0x803d00000000	                cmp byte [0x040013e4], 0	       168	strbuf.h	FUNCTION_131	CALL_2
0x40013e4	            0x7419	                            je 0x40013ff	       168	strbuf.h	FUNCTION_131	CALL_2
0x40013e6	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_131	CALL_2
0x40013eb	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_131	CALL_2
0x40013f0	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_131	CALL_2
0x40013f5	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_131	CALL_2
0x40013fa	      0xe800000000	                          call 0x40013ff	       168	strbuf.h	FUNCTION_131	CALL_2
0x40013ff	          0x4889f9	                            mov rcx, rdi	        74	update-index.c	FUNCTION_3	CALL_1
0x4001402	    0x488b15000000	            mov rdx, qword [0x04001409] 	        74	update-index.c	FUNCTION_3	CALL_1
0x4001409	      0xbe00000000	                              mov esi, 0	        74	update-index.c	FUNCTION_3	CALL_1
0x400140e	      0xbf00000000	                              mov edi, 0	        74	update-index.c	FUNCTION_3	CALL_1
0x4001413	      0xb800000000	                              mov eax, 0	        74	update-index.c	FUNCTION_3	CALL_1
0x4001418	      0xe800000000	                          call 0x400141d	        74	update-index.c	FUNCTION_3	CALL_1
0x400141d	    0x488b05000000	            mov rax, qword [0x04001424] 	        76	update-index.c	FUNCTION_3
0x4001424	        0x4883c408	                              add rsp, 8	        76	update-index.c	FUNCTION_3
0x4001428	              0xc3	                                     ret	        76	update-index.c	FUNCTION_3
resolve_undo_clear_callback	SWITCH,0:DO,0:WHILE,0:CALL,0:FOR,0:ELSE,0:IF,0:functions,0	6
0x40000ba	        0x4883ec08	                              sub rsp, 8	       807	update-index.c	FUNCTION_30
0x40000be	      0xbf00000000	                              mov edi, 0	       808	update-index.c	FUNCTION_30
0x40000c3	      0xe800000000	                          call 0x40000c8	       808	update-index.c	FUNCTION_30
0x40000c8	      0xb800000000	                              mov eax, 0	       810	update-index.c	FUNCTION_30
0x40000cd	        0x4883c408	                              add rsp, 8	       810	update-index.c	FUNCTION_30
0x40000d1	              0xc3	                                     ret	       810	update-index.c	FUNCTION_30
stdin_cacheinfo_callback	SWITCH,0:DO,0:WHILE,0:CALL,1:FOR,0:ELSE,0:IF,1:functions,0	170
0x40014ae	            0x4156	                                push r14	       861	update-index.c	FUNCTION_33
0x40014b0	            0x4155	                                push r13	       861	update-index.c	FUNCTION_33
0x40014b2	            0x4154	                                push r12	       861	update-index.c	FUNCTION_33
0x40014b4	              0x55	                                push rbp	       861	update-index.c	FUNCTION_33
0x40014b5	              0x53	                                push rbx	       861	update-index.c	FUNCTION_33
0x40014b6	        0x4883ec70	                           sub rsp, 0x70	       861	update-index.c	FUNCTION_33
0x40014ba	    0x64488b042528	                mov rax, qword fs:[0x28]	       861	update-index.c	FUNCTION_33
0x40014c3	      0x4889442468	             mov qword [rsp + 0x68], rax	       861	update-index.c	FUNCTION_33
0x40014c8	            0x31c0	                            xor eax, eax	       861	update-index.c	FUNCTION_33
0x40014ca	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       862	update-index.c	FUNCTION_33
0x40014ce	        0x837f1001	               cmp dword [rdi + 0x10], 1	       864	update-index.c	FUNCTION_33	IF_1
0x40014d2	            0x741d	                            je 0x40014f1	       864	update-index.c	FUNCTION_33	IF_1
0x40014d4	        0x488b7608	                mov rsi, qword [rsi + 8]	       865	update-index.c	FUNCTION_33	IF_1
0x40014d8	      0xbf00000000	                              mov edi, 0	       865	update-index.c	FUNCTION_33	IF_1
0x40014dd	      0xb800000000	                              mov eax, 0	       865	update-index.c	FUNCTION_33	IF_1
0x40014e2	      0xe800000000	                          call 0x40014e7	       865	update-index.c	FUNCTION_33	IF_1
0x40014e7	      0xb8ffffffff	                     mov eax, 0xffffffff	       865	update-index.c	FUNCTION_33	IF_1
0x40014ec	      0xe97d020000	                           jmp 0x400176e	       865	update-index.c	FUNCTION_33	IF_1
0x40014f1	    0xc70500000000	               mov dword [0x040014fb], 1	       866	update-index.c	FUNCTION_33
0x40014fb	    0xc70500000000	               mov dword [0x04001505], 1	       866	update-index.c	FUNCTION_33
0x4001505	    0xc70500000000	               mov dword [0x0400150f], 1	       866	update-index.c	FUNCTION_33
0x400150f	          0x448b30	                   mov r14d, dword [rax]	       867	update-index.c	FUNCTION_33	CALL_1
0x4001512	    0x48c744241000	               mov qword [rsp + 0x10], 0	       485	update-index.c	FUNCTION_20
0x400151b	    0x48c744241800	               mov qword [rsp + 0x18], 0	       485	update-index.c	FUNCTION_20
0x4001524	    0x48c744242000	               mov qword [rsp + 0x20], 0	       485	update-index.c	FUNCTION_20
0x400152d	    0x48c744243000	               mov qword [rsp + 0x30], 0	       486	update-index.c	FUNCTION_20
0x4001536	    0x48c744243800	               mov qword [rsp + 0x38], 0	       486	update-index.c	FUNCTION_20
0x400153f	    0x48c744244000	               mov qword [rsp + 0x40], 0	       486	update-index.c	FUNCTION_20
0x4001548	          0x4585f6	                         test r14d, r14d	       489	update-index.c	FUNCTION_20
0x400154b	      0xb800000000	                              mov eax, 0	       489	update-index.c	FUNCTION_20
0x4001550	    0x41bd00000000	                             mov r13d, 0	       489	update-index.c	FUNCTION_20
0x4001556	        0x4c0f44e8	                          cmove r13, rax	       489	update-index.c	FUNCTION_20
0x400155a	      0xe9de010000	                           jmp 0x400173d	       489	update-index.c	FUNCTION_20
0x400155f	      0xe800000000	                          call 0x4001564	       514	update-index.c	FUNCTION_20	WHILE_1
0x4001564	          0x4889c3	                            mov rbx, rax	       514	update-index.c	FUNCTION_20	WHILE_1
0x4001567	    0xc70000000000	                      mov dword [rax], 0	       514	update-index.c	FUNCTION_20	WHILE_1
0x400156d	      0xba08000000	                              mov edx, 8	       515	update-index.c	FUNCTION_20	WHILE_1	CALL_2
0x4001572	      0x488d742408	                      lea rsi, [rsp + 8]	       515	update-index.c	FUNCTION_20	WHILE_1	CALL_2
0x4001577	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       515	update-index.c	FUNCTION_20	WHILE_1	CALL_2
0x400157c	      0xe800000000	                          call 0x4001581	       515	update-index.c	FUNCTION_20	WHILE_1	CALL_2
0x4001581	          0x4989c4	                            mov r12, rax	       515	update-index.c	FUNCTION_20	WHILE_1	CALL_2
0x4001584	      0x488b6c2408	                mov rbp, qword [rsp + 8]	       516	update-index.c	FUNCTION_20	WHILE_1	IF_1
0x4001589	      0x48396c2420	            cmp qword [rsp + 0x20], rbp 	       516	update-index.c	FUNCTION_20	WHILE_1	IF_1
0x400158e	     0xf8495010000	                            je 0x4001729	       516	update-index.c	FUNCTION_20	WHILE_1	IF_1
0x4001594	        0x807d0020	                    cmp byte [rbp], 0x20	       516	update-index.c	FUNCTION_20	WHILE_1	IF_1
0x4001598	     0xf858b010000	                           jne 0x4001729	       516	update-index.c	FUNCTION_20	WHILE_1	IF_1
0x400159e	          0x833b00	                      cmp dword [rbx], 0	       517	update-index.c	FUNCTION_20	WHILE_1	IF_1
0x40015a1	     0xf8582010000	                           jne 0x4001729	       517	update-index.c	FUNCTION_20	WHILE_1	IF_1
0x40015a7	            0x89c0	                            mov eax, eax	       517	update-index.c	FUNCTION_20	WHILE_1	IF_1
0x40015a9	          0x4939c4	                            cmp r12, rax	       517	update-index.c	FUNCTION_20	WHILE_1	IF_1
0x40015ac	     0xf8577010000	                           jne 0x4001729	       517	update-index.c	FUNCTION_20	WHILE_1	IF_1
0x40015b2	      0xbe09000000	                              mov esi, 9	       521	update-index.c	FUNCTION_20	WHILE_1	CALL_3
0x40015b7	          0x4889ef	                            mov rdi, rbp	       521	update-index.c	FUNCTION_20	WHILE_1	CALL_3
0x40015ba	      0xe800000000	                          call 0x40015bf	       521	update-index.c	FUNCTION_20	WHILE_1	CALL_3
0x40015bf	          0x4889c3	                            mov rbx, rax	       521	update-index.c	FUNCTION_20	WHILE_1	CALL_3
0x40015c2	          0x4885c0	                           test rax, rax	       522	update-index.c	FUNCTION_20	WHILE_1	IF_2
0x40015c5	     0xf845e010000	                            je 0x4001729	       522	update-index.c	FUNCTION_20	WHILE_1	IF_2
0x40015cb	          0x4829e8	                            sub rax, rbp	       522	update-index.c	FUNCTION_20	WHILE_1	IF_2
0x40015ce	        0x4883f828	                           cmp rax, 0x28	       522	update-index.c	FUNCTION_20	WHILE_1	IF_2
0x40015d2	     0xf8e51010000	                           jle 0x4001729	       522	update-index.c	FUNCTION_20	WHILE_1	IF_2
0x40015d8	        0x807bfe20	                cmp byte [rbx - 2], 0x20	       525	update-index.c	FUNCTION_20	WHILE_1	IF_3
0x40015dc	            0x7521	                           jne 0x40015ff	       525	update-index.c	FUNCTION_20	WHILE_1	IF_3
0x40015de	         0xfb66bff	               movzx ebp, byte [rbx - 1]	       525	update-index.c	FUNCTION_20	WHILE_1	IF_3
0x40015e2	          0x8d45d0	                   lea eax, [rbp - 0x30]	       525	update-index.c	FUNCTION_20	WHILE_1	IF_3
0x40015e5	            0x3c03	                               cmp al, 3	       525	update-index.c	FUNCTION_20	WHILE_1	IF_3
0x40015e7	            0x7716	                            ja 0x40015ff	       525	update-index.c	FUNCTION_20	WHILE_1	IF_3
0x40015e9	        0x400fbeed	                          movsx ebp, bpl	       526	update-index.c	FUNCTION_20	WHILE_1	IF_3
0x40015ed	          0x83ed30	                           sub ebp, 0x30	       526	update-index.c	FUNCTION_20	WHILE_1	IF_3
0x40015f0	        0x488d4301	                      lea rax, [rbx + 1]	       527	update-index.c	FUNCTION_20	WHILE_1	IF_3
0x40015f4	      0x4889442408	                mov qword [rsp + 8], rax	       527	update-index.c	FUNCTION_20	WHILE_1	IF_3
0x40015f9	        0x4883eb02	                              sub rbx, 2	       528	update-index.c	FUNCTION_20	WHILE_1	IF_3
0x40015fd	            0xeb0e	                           jmp 0x400160d	       528	update-index.c	FUNCTION_20	WHILE_1	IF_3
0x40015ff	        0x488d4301	                      lea rax, [rbx + 1]	       532	update-index.c	FUNCTION_20	WHILE_1	ELSE_1
0x4001603	      0x4889442408	                mov qword [rsp + 8], rax	       532	update-index.c	FUNCTION_20	WHILE_1	ELSE_1
0x4001608	      0xbd00000000	                              mov ebp, 0	       531	update-index.c	FUNCTION_20	WHILE_1	ELSE_1
0x400160d	        0x488d7bd8	                   lea rdi, [rbx - 0x28]	       535	update-index.c	FUNCTION_20	WHILE_1	IF_4	CALL_4
0x4001611	      0x488d742450	                   lea rsi, [rsp + 0x50]	       535	update-index.c	FUNCTION_20	WHILE_1	IF_4	CALL_4
0x4001616	      0xe800000000	                          call 0x400161b	       535	update-index.c	FUNCTION_20	WHILE_1	IF_4	CALL_4
0x400161b	            0x85c0	                           test eax, eax	       535	update-index.c	FUNCTION_20	WHILE_1	IF_4	CALL_4
0x400161d	     0xf8506010000	                           jne 0x4001729	       535	update-index.c	FUNCTION_20	WHILE_1	IF_4	CALL_4
0x4001623	        0x807bd720	            cmp byte [rbx - 0x29], 0x20 	       535	update-index.c	FUNCTION_20	WHILE_1	IF_4	CALL_4
0x4001627	     0xf85fc000000	                           jne 0x4001729	       535	update-index.c	FUNCTION_20	WHILE_1	IF_4	CALL_4
0x400162d	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       539	update-index.c	FUNCTION_20	WHILE_1
0x4001632	          0x4585f6	                         test r14d, r14d	       540	update-index.c	FUNCTION_20	WHILE_1	IF_5
0x4001635	            0x756c	                           jne 0x40016a3	       540	update-index.c	FUNCTION_20	WHILE_1	IF_5
0x4001637	          0x803b22	                    cmp byte [rbx], 0x22	       540	update-index.c	FUNCTION_20	WHILE_1	IF_5
0x400163a	            0x7567	                           jne 0x40016a3	       540	update-index.c	FUNCTION_20	WHILE_1	IF_5
0x400163c	    0x48c744243800	               mov qword [rsp + 0x38], 0	       164	strbuf.h	FUNCTION_131
0x4001645	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       165	strbuf.h	FUNCTION_131	IF_2
0x400164a	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_131	IF_2
0x4001650	            0x7405	                            je 0x4001657	       165	strbuf.h	FUNCTION_131	IF_2
0x4001652	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_131	IF_2
0x4001655	            0xeb22	                           jmp 0x4001679	       166	strbuf.h	FUNCTION_131	IF_2
0x4001657	    0x803d00000000	                cmp byte [0x0400165e], 0	       168	strbuf.h	FUNCTION_131	CALL_2
0x400165e	            0x7419	                            je 0x4001679	       168	strbuf.h	FUNCTION_131	CALL_2
0x4001660	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_131	CALL_2
0x4001665	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_131	CALL_2
0x400166a	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_131	CALL_2
0x400166f	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_131	CALL_2
0x4001674	      0xe800000000	                          call 0x4001679	       168	strbuf.h	FUNCTION_131	CALL_2
0x4001679	      0xba00000000	                              mov edx, 0	       542	update-index.c	FUNCTION_20	WHILE_1	IF_5	IF_6	CALL_5
0x400167e	          0x4889de	                            mov rsi, rbx	       542	update-index.c	FUNCTION_20	WHILE_1	IF_5	IF_6	CALL_5
0x4001681	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       542	update-index.c	FUNCTION_20	WHILE_1	IF_5	IF_6	CALL_5
0x4001686	      0xe800000000	                          call 0x400168b	       542	update-index.c	FUNCTION_20	WHILE_1	IF_5	IF_6	CALL_5
0x400168b	            0x85c0	                           test eax, eax	       542	update-index.c	FUNCTION_20	WHILE_1	IF_5	IF_6	CALL_5
0x400168d	            0x740f	                            je 0x400169e	       542	update-index.c	FUNCTION_20	WHILE_1	IF_5	IF_6	CALL_5
0x400168f	      0xbf00000000	                              mov edi, 0	       543	update-index.c	FUNCTION_20	WHILE_1	IF_5	IF_6	CALL_6
0x4001694	      0xb800000000	                              mov eax, 0	       543	update-index.c	FUNCTION_20	WHILE_1	IF_5	IF_6	CALL_6
0x4001699	      0xe800000000	                          call 0x400169e	       543	update-index.c	FUNCTION_20	WHILE_1	IF_5	IF_6	CALL_6
0x400169e	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	       545	update-index.c	FUNCTION_20	WHILE_1	IF_5
0x40016a3	          0x4889df	                            mov rdi, rbx	       548	update-index.c	FUNCTION_20	WHILE_1	IF_7	CALL_7
0x40016a6	      0xe800000000	                          call 0x40016ab	       548	update-index.c	FUNCTION_20	WHILE_1	IF_7	CALL_7
0x40016ab	            0x85c0	                           test eax, eax	       548	update-index.c	FUNCTION_20	WHILE_1	IF_7	CALL_7
0x40016ad	            0x751b	                           jne 0x40016ca	       548	update-index.c	FUNCTION_20	WHILE_1	IF_7	CALL_7
0x40016af	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_10
0x40016b2	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_10
0x40016b7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_10
0x40016bc	    0x488b3d000000	            mov rdi, qword [0x040016c3] 	        97	stdio2.h	CALL_10
0x40016c3	      0xe800000000	                          call 0x40016c8	        97	stdio2.h	CALL_10
0x40016c8	            0xeb73	                           jmp 0x400173d	        97	stdio2.h	CALL_10
0x40016ca	          0x4585e4	                         test r12d, r12d	       553	update-index.c	FUNCTION_20	WHILE_1	IF_8
0x40016cd	            0x7525	                           jne 0x40016f4	       553	update-index.c	FUNCTION_20	WHILE_1	IF_8
0x40016cf	          0x4889de	                            mov rsi, rbx	       555	update-index.c	FUNCTION_20	WHILE_1	IF_8	IF_9
0x40016d2	      0xbf00000000	                              mov edi, 0	       555	update-index.c	FUNCTION_20	WHILE_1	IF_8	IF_9
0x40016d7	      0xe800000000	                          call 0x40016dc	       555	update-index.c	FUNCTION_20	WHILE_1	IF_8	IF_9
0x40016dc	            0x85c0	                           test eax, eax	       555	update-index.c	FUNCTION_20	WHILE_1	IF_8	IF_9
0x40016de	            0x745d	                            je 0x400173d	       555	update-index.c	FUNCTION_20	WHILE_1	IF_8	IF_9
0x40016e0	      0x488b742408	                mov rsi, qword [rsp + 8]	       556	update-index.c	FUNCTION_20	WHILE_1	IF_8	IF_9	CALL_8
0x40016e5	      0xbf00000000	                              mov edi, 0	       556	update-index.c	FUNCTION_20	WHILE_1	IF_8	IF_9	CALL_8
0x40016ea	      0xb800000000	                              mov eax, 0	       556	update-index.c	FUNCTION_20	WHILE_1	IF_8	IF_9	CALL_8
0x40016ef	      0xe800000000	                          call 0x40016f4	       556	update-index.c	FUNCTION_20	WHILE_1	IF_8	IF_9	CALL_8
0x40016f4	      0x488b442408	                mov rax, qword [rsp + 8]	       564	update-index.c	FUNCTION_20	WHILE_1	ELSE_2
0x40016f9	        0xc640ff00	                   mov byte [rax - 1], 0	       564	update-index.c	FUNCTION_20	WHILE_1	ELSE_2
0x40016fd	        0xc640d600	                mov byte [rax - 0x2a], 0	       564	update-index.c	FUNCTION_20	WHILE_1	ELSE_2
0x4001701	            0x89e9	                            mov ecx, ebp	       565	update-index.c	FUNCTION_20	WHILE_1	ELSE_2	IF_10	CALL_9
0x4001703	          0x4889da	                            mov rdx, rbx	       565	update-index.c	FUNCTION_20	WHILE_1	ELSE_2	IF_10	CALL_9
0x4001706	      0x488d742450	                   lea rsi, [rsp + 0x50]	       565	update-index.c	FUNCTION_20	WHILE_1	ELSE_2	IF_10	CALL_9
0x400170b	          0x4489e7	                           mov edi, r12d	       565	update-index.c	FUNCTION_20	WHILE_1	ELSE_2	IF_10	CALL_9
0x400170e	      0xe83af3ffff	                  call sym.add_cacheinfo	       565	update-index.c	FUNCTION_20	WHILE_1	ELSE_2	IF_10	CALL_9
0x4001713	            0x85c0	                           test eax, eax	       565	update-index.c	FUNCTION_20	WHILE_1	ELSE_2	IF_10	CALL_9
0x4001715	            0x7426	                            je 0x400173d	       565	update-index.c	FUNCTION_20	WHILE_1	ELSE_2	IF_10	CALL_9
0x4001717	          0x4889de	                            mov rsi, rbx	       566	update-index.c	FUNCTION_20	WHILE_1	ELSE_2	IF_10	CALL_10
0x400171a	      0xbf00000000	                              mov edi, 0	       566	update-index.c	FUNCTION_20	WHILE_1	ELSE_2	IF_10	CALL_10
0x400171f	      0xb800000000	                              mov eax, 0	       566	update-index.c	FUNCTION_20	WHILE_1	ELSE_2	IF_10	CALL_10
0x4001724	      0xe800000000	                          call 0x4001729	       566	update-index.c	FUNCTION_20	WHILE_1	ELSE_2	IF_10	CALL_10
0x4001729	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       572	update-index.c	FUNCTION_20	WHILE_1	CALL_11
0x400172e	      0xbf00000000	                              mov edi, 0	       572	update-index.c	FUNCTION_20	WHILE_1	CALL_11
0x4001733	      0xb800000000	                              mov eax, 0	       572	update-index.c	FUNCTION_20	WHILE_1	CALL_11
0x4001738	      0xe800000000	                          call 0x400173d	       572	update-index.c	FUNCTION_20	WHILE_1	CALL_11
0x400173d	    0x488b35000000	            mov rsi, qword [0x04001744] 	       490	update-index.c	FUNCTION_20	WHILE_1	CALL_1
0x4001744	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       490	update-index.c	FUNCTION_20	WHILE_1	CALL_1
0x4001749	          0x41ffd5	                                call r13	       490	update-index.c	FUNCTION_20	WHILE_1	CALL_1
0x400174c	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       490	update-index.c	FUNCTION_20	WHILE_1	CALL_1
0x400174f	     0xf850afeffff	                           jne 0x400155f	       490	update-index.c	FUNCTION_20	WHILE_1	CALL_1
0x4001755	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       574	update-index.c	FUNCTION_20	CALL_12
0x400175a	      0xe800000000	                          call 0x400175f	       574	update-index.c	FUNCTION_20	CALL_12
0x400175f	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       575	update-index.c	FUNCTION_20	CALL_13
0x4001764	      0xe800000000	                          call 0x4001769	       575	update-index.c	FUNCTION_20	CALL_13
0x4001769	      0xb800000000	                              mov eax, 0	       868	update-index.c	FUNCTION_33
0x400176e	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	       869	update-index.c	FUNCTION_33
0x4001773	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       869	update-index.c	FUNCTION_33
0x400177c	            0x7405	                            je 0x4001783	       869	update-index.c	FUNCTION_33
0x400177e	      0xe800000000	                          call 0x4001783	       869	update-index.c	FUNCTION_33
0x4001783	        0x4883c470	                           add rsp, 0x70	       869	update-index.c	FUNCTION_33
0x4001787	              0x5b	                                 pop rbx	       869	update-index.c	FUNCTION_33
0x4001788	              0x5d	                                 pop rbp	       869	update-index.c	FUNCTION_33
0x4001789	            0x415c	                                 pop r12	       869	update-index.c	FUNCTION_33
0x400178b	            0x415d	                                 pop r13	       869	update-index.c	FUNCTION_33
0x400178d	            0x415e	                                 pop r14	       869	update-index.c	FUNCTION_33
0x400178f	              0xc3	                                     ret	       869	update-index.c	FUNCTION_33
remove_one_path	SWITCH,0:DO,0:WHILE,0:CALL,0:FOR,0:ELSE,0:IF,2:functions,0	22
0x4000211	              0x53	                                push rbx	       247	update-index.c	FUNCTION_12
0x4000212	          0x4889fb	                            mov rbx, rdi	       247	update-index.c	FUNCTION_12
0x4000215	    0x833d00000000	               cmp dword [0x0400021c], 0	       248	update-index.c	FUNCTION_12	IF_1
0x400021c	            0x7519	                           jne 0x4000237	       248	update-index.c	FUNCTION_12	IF_1
0x400021e	          0x4889fe	                            mov rsi, rdi	       249	update-index.c	FUNCTION_12	IF_1
0x4000221	      0xbf00000000	                              mov edi, 0	       249	update-index.c	FUNCTION_12	IF_1
0x4000226	      0xb800000000	                              mov eax, 0	       249	update-index.c	FUNCTION_12	IF_1
0x400022b	      0xe800000000	                          call 0x4000230	       249	update-index.c	FUNCTION_12	IF_1
0x4000230	      0xb8ffffffff	                     mov eax, 0xffffffff	       249	update-index.c	FUNCTION_12	IF_1
0x4000235	            0xeb28	                           jmp 0x400025f	       249	update-index.c	FUNCTION_12	IF_1
0x4000237	          0x4889fe	                            mov rsi, rdi	       250	update-index.c	FUNCTION_12	IF_2
0x400023a	      0xbf00000000	                              mov edi, 0	       250	update-index.c	FUNCTION_12	IF_2
0x400023f	      0xe800000000	                          call 0x4000244	       250	update-index.c	FUNCTION_12	IF_2
0x4000244	            0x85c0	                           test eax, eax	       250	update-index.c	FUNCTION_12	IF_2
0x4000246	            0x7417	                            je 0x400025f	       250	update-index.c	FUNCTION_12	IF_2
0x4000248	          0x4889de	                            mov rsi, rbx	       251	update-index.c	FUNCTION_12	IF_2
0x400024b	      0xbf00000000	                              mov edi, 0	       251	update-index.c	FUNCTION_12	IF_2
0x4000250	      0xb800000000	                              mov eax, 0	       251	update-index.c	FUNCTION_12	IF_2
0x4000255	      0xe800000000	                          call 0x400025a	       251	update-index.c	FUNCTION_12	IF_2
0x400025a	      0xb8ffffffff	                     mov eax, 0xffffffff	       251	update-index.c	FUNCTION_12	IF_2
0x400025f	              0x5b	                                 pop rbx	       253	update-index.c	FUNCTION_12
0x4000260	              0xc3	                                     ret	       253	update-index.c	FUNCTION_12
