diffcore_merge_broken	SWITCH,0:IF,4:ELSE,2:WHILE,0:functions,0:DO,0:FOR,2:CALL,8	171
0x40004d0	            0x4157	                                push r15	       262	diffcore-break.c	FUNCTION_4
0x40004d2	            0x4156	                                push r14	       262	diffcore-break.c	FUNCTION_4
0x40004d4	            0x4155	                                push r13	       262	diffcore-break.c	FUNCTION_4
0x40004d6	            0x4154	                                push r12	       262	diffcore-break.c	FUNCTION_4
0x40004d8	              0x55	                                push rbp	       262	diffcore-break.c	FUNCTION_4
0x40004d9	              0x53	                                push rbx	       262	diffcore-break.c	FUNCTION_4
0x40004da	        0x4883ec68	                           sub rsp, 0x68	       262	diffcore-break.c	FUNCTION_4
0x40004de	    0x448b2d000000	           mov r13d, dword [0x040004e5] 	       269	diffcore-break.c	FUNCTION_4	FOR_1
0x40004e5	    0x488b1d000000	            mov rbx, qword [0x040004ec] 	       269	diffcore-break.c	FUNCTION_4	FOR_1
0x40004ec	    0x64488b042528	                mov rax, qword fs:[0x28]	       262	diffcore-break.c	FUNCTION_4
0x40004f5	      0x4889442458	             mov qword [rsp + 0x58], rax	       262	diffcore-break.c	FUNCTION_4
0x40004fa	            0x31c0	                            xor eax, eax	       262	diffcore-break.c	FUNCTION_4
0x40004fc	    0x48c744244000	               mov qword [rsp + 0x40], 0	       267	diffcore-break.c	FUNCTION_4	CALL_1
0x4000505	    0xc74424480000	               mov dword [rsp + 0x48], 0	       267	diffcore-break.c	FUNCTION_4	CALL_1
0x400050d	          0x4585ed	                         test r13d, r13d	       269	diffcore-break.c	FUNCTION_4	FOR_1
0x4000510	    0xc744244c0000	               mov dword [rsp + 0x4c], 0	       267	diffcore-break.c	FUNCTION_4	CALL_1
0x4000518	     0xf8e15010000	                           jle 0x4000633	       269	diffcore-break.c	FUNCTION_4	FOR_1
0x400051e	      0x44896c242c	            mov dword [rsp + 0x2c], r13d	       269	diffcore-break.c	FUNCTION_4	FOR_1
0x4000523	    0xc74424280100	               mov dword [rsp + 0x28], 1	       269	diffcore-break.c	FUNCTION_4	FOR_1
0x400052b	    0x48c744241800	               mov qword [rsp + 0x18], 0	       269	diffcore-break.c	FUNCTION_4	FOR_1
0x4000534	         0xf1f4000	                         nop dword [rax]	       269	diffcore-break.c	FUNCTION_4	FOR_1
0x4000538	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       270	diffcore-break.c	FUNCTION_4	FOR_1
0x400053d	        0x488b0403	              mov rax, qword [rbx + rax]	       270	diffcore-break.c	FUNCTION_4	FOR_1
0x4000541	          0x4885c0	                           test rax, rax	       271	diffcore-break.c	FUNCTION_4	FOR_1	IF_1
0x4000544	      0x4889442410	             mov qword [rsp + 0x10], rax	       270	diffcore-break.c	FUNCTION_4	FOR_1
0x4000549	     0xf84c7000000	                            je 0x4000616	       271	diffcore-break.c	FUNCTION_4	FOR_1	IF_1
0x400054f	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       274	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2
0x4000554	        0xf6401301	               test byte [rax + 0x13], 1	       274	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2
0x4000558	     0xf8422010000	                            je 0x4000680	       274	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2
0x400055e	        0x488b5008	                mov rdx, qword [rax + 8]	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x4000562	          0x488b00	                    mov rax, qword [rax]	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x4000565	      0x4889442430	             mov qword [rsp + 0x30], rax	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x400056a	        0x488b4018	            mov rax, qword [rax + 0x18] 	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x400056e	        0x488b7218	            mov rsi, qword [rdx + 0x18] 	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x4000572	      0x4889542438	             mov qword [rsp + 0x38], rdx	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x4000577	          0x4889c7	                            mov rdi, rax	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x400057a	      0x4889442420	             mov qword [rsp + 0x20], rax	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x400057f	      0xe800000000	                          call 0x4000584	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x4000584	            0x85c0	                           test eax, eax	       274	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2
0x4000586	     0xf85f4000000	                           jne 0x4000680	       274	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2
0x400058c	        0x8b442428	            mov eax, dword [rsp + 0x28] 	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x4000590	          0x4439e8	                           cmp eax, r13d	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x4000593	     0xf8d11020000	                           jge 0x40007aa	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x4000599	          0x4863c8	                         movsxd rcx, eax	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x400059c	          0x4189c4	                           mov r12d, eax	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x400059f	      0x44896c2404	               mov dword [rsp + 4], r13d	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x40005a4	    0x488d2ccd0000	                        lea rbp, [rcx*8]	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x40005ac	         0xf1f4000	                         nop dword [rax]	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x40005b0	        0x4c8b3c2b	              mov r15, qword [rbx + rbp]	       280	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x40005b4	      0x41f6471301	               test byte [r15 + 0x13], 1	       281	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x40005b9	            0x7435	                            je 0x40005f0	       281	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x40005bb	        0x498b4708	                mov rax, qword [r15 + 8]	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x40005bf	          0x4d8b2f	                    mov r13, qword [r15]	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x40005c2	        0x4c8b7018	            mov r14, qword [rax + 0x18] 	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x40005c6	        0x498b7d18	            mov rdi, qword [r13 + 0x18] 	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x40005ca	      0x4889442408	                mov qword [rsp + 8], rax	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x40005cf	          0x4c89f6	                            mov rsi, r14	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x40005d2	      0xe800000000	                          call 0x40005d7	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x40005d7	            0x85c0	                           test eax, eax	       281	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x40005d9	            0x7515	                           jne 0x40005f0	       281	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x40005db	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       283	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_4
0x40005e0	          0x4c89f6	                            mov rsi, r14	       283	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_4
0x40005e3	      0xe800000000	                          call 0x40005e8	       283	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_4
0x40005e8	            0x85c0	                           test eax, eax	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x40005ea	     0xf84f0000000	                            je 0x40006e0	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x40005f0	        0x4183c401	                             add r12d, 1	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x40005f4	        0x4883c508	                              add rbp, 8	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x40005f8	      0x443b642404	               cmp r12d, dword [rsp + 4]	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x40005fd	            0x75b1	                           jne 0x40005b0	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x40005ff	      0x448b6c2404	               mov r13d, dword [rsp + 4]	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x4000604	      0x443b6c242c	           cmp r13d, dword [rsp + 0x2c] 	       290	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	IF_4
0x4000609	     0xf8ea1000000	                           jle 0x40006b0	       290	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	IF_4
0x400060f	    0x488b1d000000	            mov rbx, qword [0x04000616] 	       290	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	IF_4
0x4000616	        0x8b442428	            mov eax, dword [rsp + 0x28] 	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x400061a	    0x488344241808	               add qword [rsp + 0x18], 8	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x4000620	      0x8344242801	               add dword [rsp + 0x28], 1	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x4000625	          0x4139c5	                           cmp r13d, eax	       269	diffcore-break.c	FUNCTION_4	FOR_1
0x4000628	      0x44896c242c	            mov dword [rsp + 0x2c], r13d	       269	diffcore-break.c	FUNCTION_4	FOR_1
0x400062d	     0xf8f05ffffff	                            jg 0x4000538	       269	diffcore-break.c	FUNCTION_4	FOR_1
0x4000633	          0x4889df	                            mov rdi, rbx	       299	diffcore-break.c	FUNCTION_4	CALL_8
0x4000636	      0xe800000000	                          call 0x400063b	       299	diffcore-break.c	FUNCTION_4	CALL_8
0x400063b	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       300	diffcore-break.c	FUNCTION_4
0x4000640	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	       300	diffcore-break.c	FUNCTION_4
0x4000645	    0x488905000000	            mov qword [0x0400064c], rax 	       300	diffcore-break.c	FUNCTION_4
0x400064c	    0x488915000000	            mov qword [0x04000653], rdx 	       300	diffcore-break.c	FUNCTION_4
0x4000653	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       303	diffcore-break.c	FUNCTION_4
0x4000658	    0x644833042528	                xor rax, qword fs:[0x28]	       303	diffcore-break.c	FUNCTION_4
0x4000661	     0xf855c010000	                           jne 0x40007c3	       303	diffcore-break.c	FUNCTION_4
0x4000667	        0x4883c468	                           add rsp, 0x68	       303	diffcore-break.c	FUNCTION_4
0x400066b	              0x5b	                                 pop rbx	       303	diffcore-break.c	FUNCTION_4
0x400066c	              0x5d	                                 pop rbp	       303	diffcore-break.c	FUNCTION_4
0x400066d	            0x415c	                                 pop r12	       303	diffcore-break.c	FUNCTION_4
0x400066f	            0x415d	                                 pop r13	       303	diffcore-break.c	FUNCTION_4
0x4000671	            0x415e	                                 pop r14	       303	diffcore-break.c	FUNCTION_4
0x4000673	            0x415f	                                 pop r15	       303	diffcore-break.c	FUNCTION_4
0x4000675	              0xc3	                                     ret	       303	diffcore-break.c	FUNCTION_4
0x4000676	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       303	diffcore-break.c	FUNCTION_4
0x4000680	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       297	diffcore-break.c	FUNCTION_4	FOR_1	CALL_7
0x4000685	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       297	diffcore-break.c	FUNCTION_4	FOR_1	CALL_7
0x400068a	      0xe800000000	                          call 0x400068f	       297	diffcore-break.c	FUNCTION_4	FOR_1	CALL_7
0x400068f	    0x448b2d000000	           mov r13d, dword [0x04000696] 	       297	diffcore-break.c	FUNCTION_4	FOR_1	CALL_7
0x4000696	        0x8b442428	            mov eax, dword [rsp + 0x28] 	       297	diffcore-break.c	FUNCTION_4	FOR_1	CALL_7
0x400069a	    0x488b1d000000	            mov rbx, qword [0x040006a1] 	       297	diffcore-break.c	FUNCTION_4	FOR_1	CALL_7
0x40006a1	      0xe974ffffff	                           jmp 0x400061a	       297	diffcore-break.c	FUNCTION_4	FOR_1	CALL_7
0x40006a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       297	diffcore-break.c	FUNCTION_4	FOR_1	CALL_7
0x40006b0	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       294	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_6
0x40006b5	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       294	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_6
0x40006ba	      0xe800000000	                          call 0x40006bf	       294	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_6
0x40006bf	    0x448b2d000000	           mov r13d, dword [0x040006c6] 	       294	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_6
0x40006c6	    0x488b1d000000	            mov rbx, qword [0x040006cd] 	       294	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_6
0x40006cd	        0x8b442428	            mov eax, dword [rsp + 0x28] 	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x40006d1	      0xe944ffffff	                           jmp 0x400061a	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x40006d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x40006e0	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       232	diffcore-break.c	FUNCTION_3	IF_1	CALL_1
0x40006e5	      0x6683784000	                cmp word [rax + 0x40], 0	       232	diffcore-break.c	FUNCTION_3	IF_1	CALL_1
0x40006ea	     0xf8494000000	                            je 0x4000784	       232	diffcore-break.c	FUNCTION_3	IF_1	CALL_1
0x40006f0	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       239	diffcore-break.c	FUNCTION_3	IF_3	CALL_4
0x40006f5	      0x6683784000	                cmp word [rax + 0x40], 0	       239	diffcore-break.c	FUNCTION_3	IF_3	CALL_4
0x40006fa	     0xf85c8000000	                           jne 0x40007c8	       239	diffcore-break.c	FUNCTION_3	IF_3	CALL_4
0x4000700	    0x6641837d4000	                cmp word [r13 + 0x40], 0	       241	diffcore-break.c	FUNCTION_3	IF_4	CALL_6
0x4000706	     0xf85c8000000	                           jne 0x40007d4	       241	diffcore-break.c	FUNCTION_3	IF_4	CALL_6
0x400070c	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       241	diffcore-break.c	FUNCTION_3	IF_4	CALL_6
0x4000711	        0x498b5708	                mov rdx, qword [r15 + 8]	       243	diffcore-break.c	FUNCTION_3	IF_5	CALL_8
0x4000715	      0x66837a4000	                cmp word [rdx + 0x40], 0	       243	diffcore-break.c	FUNCTION_3	IF_5	CALL_8
0x400071a	     0xf84c0000000	                            je 0x40007e0	       243	diffcore-break.c	FUNCTION_3	IF_5	CALL_8
0x4000720	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       246	diffcore-break.c	FUNCTION_3	CALL_10
0x4000725	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       246	diffcore-break.c	FUNCTION_3	CALL_10
0x400072a	      0xe800000000	                          call 0x400072f	       246	diffcore-break.c	FUNCTION_3	CALL_10
0x400072f	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       247	diffcore-break.c	FUNCTION_3
0x4000734	        0x488b7b08	                mov rdi, qword [rbx + 8]	       255	diffcore-break.c	FUNCTION_3	CALL_11
0x4000738	         0xfb75110	           movzx edx, word [rcx + 0x10] 	       247	diffcore-break.c	FUNCTION_3
0x400073c	        0x66895010	               mov word [rax + 0x10], dx	       247	diffcore-break.c	FUNCTION_3
0x4000740	          0x488b03	                    mov rax, qword [rbx]	       254	diffcore-break.c	FUNCTION_3
0x4000743	        0x83403c01	               add dword [rax + 0x3c], 1	       254	diffcore-break.c	FUNCTION_3
0x4000747	      0xe800000000	                          call 0x400074c	       255	diffcore-break.c	FUNCTION_3	CALL_11
0x400074c	          0x498b3f	                    mov rdi, qword [r15]	       256	diffcore-break.c	FUNCTION_3	CALL_12
0x400074f	      0xe800000000	                          call 0x4000754	       256	diffcore-break.c	FUNCTION_3	CALL_12
0x4000754	          0x4889df	                            mov rdi, rbx	       257	diffcore-break.c	FUNCTION_3	CALL_13
0x4000757	      0xe800000000	                          call 0x400075c	       257	diffcore-break.c	FUNCTION_3	CALL_13
0x400075c	          0x4c89ff	                            mov rdi, r15	       258	diffcore-break.c	FUNCTION_3	CALL_14
0x400075f	      0xe800000000	                          call 0x4000764	       258	diffcore-break.c	FUNCTION_3	CALL_14
0x4000764	    0x488b05000000	            mov rax, qword [0x0400076b] 	       286	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x400076b	      0x448964242c	            mov dword [rsp + 0x2c], r12d	       287	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x4000770	    0x448b2d000000	           mov r13d, dword [0x04000777] 	       287	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x4000777	    0x48c704280000	                mov qword [rax + rbp], 0	       286	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x400077f	      0xe980feffff	                           jmp 0x4000604	       287	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x4000784	    0x6641837d4000	                cmp word [r13 + 0x40], 0	       237	diffcore-break.c	FUNCTION_3	IF_2	CALL_2
0x400078a	            0x742b	                            je 0x40007b7	       237	diffcore-break.c	FUNCTION_3	IF_2	CALL_2
0x400078c	      0x488b442408	                mov rax, qword [rsp + 8]	       239	diffcore-break.c	FUNCTION_3	IF_3	CALL_4
0x4000791	      0x6683784000	                cmp word [rax + 0x40], 0	       239	diffcore-break.c	FUNCTION_3	IF_3	CALL_4
0x4000796	            0x7530	                           jne 0x40007c8	       239	diffcore-break.c	FUNCTION_3	IF_3	CALL_4
0x4000798	          0x4c89fb	                            mov rbx, r15	       280	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x400079b	      0x4c896c2430	             mov qword [rsp + 0x30], r13	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x40007a0	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	       239	diffcore-break.c	FUNCTION_3	IF_3	CALL_4
0x40007a5	      0xe967ffffff	                           jmp 0x4000711	       239	diffcore-break.c	FUNCTION_3	IF_3	CALL_4
0x40007aa	        0x8b442428	            mov eax, dword [rsp + 0x28] 	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x40007ae	        0x8944242c	             mov dword [rsp + 0x2c], eax	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x40007b2	      0xe94dfeffff	                           jmp 0x4000604	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x40007b7	      0xbf00000000	                              mov edi, 0	       238	diffcore-break.c	FUNCTION_3	CALL_3
0x40007bc	            0x31c0	                            xor eax, eax	       238	diffcore-break.c	FUNCTION_3	CALL_3
0x40007be	      0xe800000000	                          call 0x40007c3	       238	diffcore-break.c	FUNCTION_3	CALL_3
0x40007c3	      0xe800000000	                          call 0x40007c8	       303	diffcore-break.c	FUNCTION_4
0x40007c8	      0xbf00000000	                              mov edi, 0	       240	diffcore-break.c	FUNCTION_3	CALL_5
0x40007cd	            0x31c0	                            xor eax, eax	       240	diffcore-break.c	FUNCTION_3	CALL_5
0x40007cf	      0xe800000000	                          call 0x40007d4	       240	diffcore-break.c	FUNCTION_3	CALL_5
0x40007d4	      0xbf00000000	                              mov edi, 0	       242	diffcore-break.c	FUNCTION_3	CALL_7
0x40007d9	            0x31c0	                            xor eax, eax	       242	diffcore-break.c	FUNCTION_3	CALL_7
0x40007db	      0xe800000000	                          call 0x40007e0	       242	diffcore-break.c	FUNCTION_3	CALL_7
0x40007e0	      0xbf00000000	                              mov edi, 0	       244	diffcore-break.c	FUNCTION_3	CALL_9
0x40007e5	            0x31c0	                            xor eax, eax	       244	diffcore-break.c	FUNCTION_3	CALL_9
0x40007e7	      0xe800000000	     call str.internal_error_in_merge__1	       244	diffcore-break.c	FUNCTION_3	CALL_9
diffcore_break	SWITCH,0:IF,5:ELSE,0:WHILE,0:functions,0:DO,0:FOR,1:CALL,18	287
0x4000040	            0x4157	                                push r15	       118	diffcore-break.c	FUNCTION_2
0x4000042	            0x4156	                                push r14	       118	diffcore-break.c	FUNCTION_2
0x4000044	      0xba30750000	                         mov edx, 0x7530	       163	diffcore-break.c	FUNCTION_2	IF_1
0x4000049	            0x4155	                                push r13	       118	diffcore-break.c	FUNCTION_2
0x400004b	            0x4154	                                push r12	       118	diffcore-break.c	FUNCTION_2
0x400004d	        0x440fb7ef	                          movzx r13d, di	       160	diffcore-break.c	FUNCTION_2
0x4000051	              0x55	                                push rbp	       118	diffcore-break.c	FUNCTION_2
0x4000052	              0x53	                                push rbx	       118	diffcore-break.c	FUNCTION_2
0x4000053	    0x41bea08c0000	                        mov r14d, 0x8ca0	       159	diffcore-break.c	FUNCTION_2
0x4000059	        0x4883ec68	                           sub rsp, 0x68	       118	diffcore-break.c	FUNCTION_2
0x400005d	    0x64488b042528	                mov rax, qword fs:[0x28]	       118	diffcore-break.c	FUNCTION_2
0x4000066	      0x4889442458	             mov qword [rsp + 0x58], rax	       118	diffcore-break.c	FUNCTION_2
0x400006b	            0x31c0	                            xor eax, eax	       118	diffcore-break.c	FUNCTION_2
0x400006d	            0x89f8	                            mov eax, edi	       159	diffcore-break.c	FUNCTION_2
0x400006f	    0x48c744244000	               mov qword [rsp + 0x40], 0	       167	diffcore-break.c	FUNCTION_2	CALL_1
0x4000078	    0xc74424480000	               mov dword [rsp + 0x48], 0	       167	diffcore-break.c	FUNCTION_2	CALL_1
0x4000080	          0xc1e810	                           shr eax, 0x10	       159	diffcore-break.c	FUNCTION_2
0x4000083	          0x4585ed	                         test r13d, r13d	       163	diffcore-break.c	FUNCTION_2	IF_1
0x4000086	    0xc744244c0000	               mov dword [rsp + 0x4c], 0	       167	diffcore-break.c	FUNCTION_2	CALL_1
0x400008e	        0x440f44ea	                         cmove r13d, edx	       163	diffcore-break.c	FUNCTION_2	IF_1
0x4000092	            0x85c0	                           test eax, eax	       159	diffcore-break.c	FUNCTION_2
0x4000094	        0x440f45f0	                        cmovne r14d, eax	       159	diffcore-break.c	FUNCTION_2
0x4000098	    0x8b0500000000	            mov eax, dword [0x0400009e] 	       169	diffcore-break.c	FUNCTION_2	FOR_1
0x400009e	      0x4489742414	            mov dword [rsp + 0x14], r14d	       159	diffcore-break.c	FUNCTION_2
0x40000a3	            0x85c0	                           test eax, eax	       169	diffcore-break.c	FUNCTION_2	FOR_1
0x40000a5	     0xf8ec6000000	                           jle 0x4000171	       169	diffcore-break.c	FUNCTION_2	FOR_1
0x40000ab	          0x4963c5	                        movsxd rax, r13d	       109	diffcore-break.c	FUNCTION_1	IF_12
0x40000ae	          0x4531e4	                          xor r12d, r12d	       169	diffcore-break.c	FUNCTION_2	FOR_1
0x40000b1	            0x31ed	                            xor ebp, ebp	       169	diffcore-break.c	FUNCTION_2	FOR_1
0x40000b3	      0x4889442420	             mov qword [rsp + 0x20], rax	       109	diffcore-break.c	FUNCTION_1	IF_12
0x40000b8	     0xf1f84000000	                   nop dword [rax + rax]	       109	diffcore-break.c	FUNCTION_1	IF_12
0x40000c0	    0x488b05000000	            mov rax, qword [0x040000c7] 	       170	diffcore-break.c	FUNCTION_2	FOR_1
0x40000c7	        0x4a8b1c20	              mov rbx, qword [rax + r12]	       170	diffcore-break.c	FUNCTION_2	FOR_1
0x40000cb	          0x4c8b33	                    mov r14, qword [rbx]	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x40000ce	      0x410fb74640	           movzx eax, word [r14 + 0x40] 	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x40000d3	          0x6685c0	                             test ax, ax	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x40000d6	            0x7468	                            je 0x4000140	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x40000d8	        0x4c8b5b08	                mov r11, qword [rbx + 8]	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x40000dc	      0x410fb74b40	           movzx ecx, word [r11 + 0x40] 	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x40000e1	          0x6685c9	                             test cx, cx	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x40000e4	            0x745a	                            je 0x4000140	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x40000e6	        0x662500f0	                          and ax, 0xf000	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x40000ea	        0x663d00e0	                          cmp ax, 0xe000	       399	cache.h	FUNCTION_11	CALL_1
0x40000ee	          0x4189c7	                           mov r15d, eax	       399	cache.h	FUNCTION_11	CALL_1
0x40000f1	            0x744d	                            je 0x4000140	       399	cache.h	FUNCTION_11	CALL_1
0x40000f3	        0x663d0040	                          cmp ax, 0x4000	       399	cache.h	FUNCTION_11	CALL_1
0x40000f7	            0x7447	                            je 0x4000140	       399	cache.h	FUNCTION_11	CALL_1
0x40000f9	      0x6681e100f0	                          and cx, 0xf000	       399	cache.h	FUNCTION_11	CALL_1
0x40000fe	      0x6681f90040	                          cmp cx, 0x4000	       399	cache.h	FUNCTION_11	CALL_1
0x4000103	            0x743b	                            je 0x4000140	       399	cache.h	FUNCTION_11	CALL_1
0x4000105	      0x6681f900e0	                          cmp cx, 0xe000	       399	cache.h	FUNCTION_11	CALL_1
0x400010a	        0x894c2408	                mov dword [rsp + 8], ecx	       399	cache.h	FUNCTION_11	CALL_1
0x400010e	            0x7430	                            je 0x4000140	       399	cache.h	FUNCTION_11	CALL_1
0x4000110	        0x498b4618	            mov rax, qword [r14 + 0x18] 	       180	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_6
0x4000114	        0x498b7318	            mov rsi, qword [r11 + 0x18] 	       180	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_6
0x4000118	      0x4c895c2418	             mov qword [rsp + 0x18], r11	       180	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_6
0x400011d	          0x4889c7	                            mov rdi, rax	       180	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_6
0x4000120	      0x4889442428	             mov qword [rsp + 0x28], rax	       180	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_6
0x4000125	      0xe800000000	                          call 0x400012a	       180	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_6
0x400012a	            0x85c0	                           test eax, eax	       179	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x400012c	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	       179	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x4000131	        0x8b4c2408	                mov ecx, dword [rsp + 8]	       179	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x4000135	     0xf8485000000	                            je 0x40001c0	       179	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x400013b	       0xf1f440000	                   nop dword [rax + rax]	       179	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x4000140	          0x4c89f7	                            mov rdi, r14	       216	diffcore-break.c	FUNCTION_2	FOR_1	CALL_15
0x4000143	      0xe800000000	                          call 0x4000148	       216	diffcore-break.c	FUNCTION_2	FOR_1	CALL_15
0x4000148	        0x488b7b08	                mov rdi, qword [rbx + 8]	       217	diffcore-break.c	FUNCTION_2	FOR_1	CALL_16
0x400014c	      0xe800000000	                          call 0x4000151	       217	diffcore-break.c	FUNCTION_2	FOR_1	CALL_16
0x4000151	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       218	diffcore-break.c	FUNCTION_2	FOR_1	CALL_17
0x4000156	          0x4889de	                            mov rsi, rbx	       218	diffcore-break.c	FUNCTION_2	FOR_1	CALL_17
0x4000159	      0xe800000000	                          call 0x400015e	       218	diffcore-break.c	FUNCTION_2	FOR_1	CALL_17
0x400015e	          0x83c501	                              add ebp, 1	       169	diffcore-break.c	FUNCTION_2	FOR_1
0x4000161	        0x4983c408	                              add r12, 8	       169	diffcore-break.c	FUNCTION_2	FOR_1
0x4000165	    0x392d00000000	            cmp dword [0x0400016b], ebp 	       169	diffcore-break.c	FUNCTION_2	FOR_1
0x400016b	     0xf8f4fffffff	                            jg 0x40000c0	       169	diffcore-break.c	FUNCTION_2	FOR_1
0x4000171	    0x488b3d000000	            mov rdi, qword [0x04000178] 	       220	diffcore-break.c	FUNCTION_2	CALL_18
0x4000178	      0xe800000000	                          call 0x400017d	       220	diffcore-break.c	FUNCTION_2	CALL_18
0x400017d	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       221	diffcore-break.c	FUNCTION_2
0x4000182	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	       221	diffcore-break.c	FUNCTION_2
0x4000187	    0x488905000000	            mov qword [0x0400018e], rax 	       221	diffcore-break.c	FUNCTION_2
0x400018e	    0x488915000000	            mov qword [0x04000195], rdx 	       221	diffcore-break.c	FUNCTION_2
0x4000195	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       224	diffcore-break.c	FUNCTION_2
0x400019a	    0x644833042528	                xor rax, qword fs:[0x28]	       224	diffcore-break.c	FUNCTION_2
0x40001a3	     0xf8575020000	                           jne 0x400041e	       224	diffcore-break.c	FUNCTION_2
0x40001a9	        0x4883c468	                           add rsp, 0x68	       224	diffcore-break.c	FUNCTION_2
0x40001ad	              0x5b	                                 pop rbx	       224	diffcore-break.c	FUNCTION_2
0x40001ae	              0x5d	                                 pop rbp	       224	diffcore-break.c	FUNCTION_2
0x40001af	            0x415c	                                 pop r12	       224	diffcore-break.c	FUNCTION_2
0x40001b1	            0x415d	                                 pop r13	       224	diffcore-break.c	FUNCTION_2
0x40001b3	            0x415e	                                 pop r14	       224	diffcore-break.c	FUNCTION_2
0x40001b5	            0x415f	                                 pop r15	       224	diffcore-break.c	FUNCTION_2
0x40001b7	              0xc3	                                     ret	       224	diffcore-break.c	FUNCTION_2
0x40001b8	     0xf1f84000000	                   nop dword [rax + rax]	       224	diffcore-break.c	FUNCTION_2
0x40001c0	    0x664181ff0080	                        cmp r15w, 0x8000	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0x40001c6	      0xb860ea0000	                         mov eax, 0xea60	        56	diffcore-break.c	FUNCTION_1	IF_1
0x40001cb	        0x400f94c6	                                sete sil	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0x40001cf	      0x6681f90080	                          cmp cx, 0x8000	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0x40001d4	           0xf94c2	                                 sete dl	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0x40001d7	          0x4038d6	                             cmp sil, dl	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0x40001da	            0x7477	                            je 0x4000253	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0x40001dc	        0x39442414	            cmp dword [rsp + 0x14], eax 	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0x40001e0	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       197	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_8
0x40001e5	      0xba00000000	                              mov edx, 0	       197	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_8
0x40001ea	           0xf4ed0	                         cmovle edx, eax	       197	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_8
0x40001ed	          0x4189d7	                           mov r15d, edx	       197	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_8
0x40001f0	      0xe800000000	                          call 0x40001f5	       197	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_8
0x40001f5	          0x488b33	                    mov rsi, qword [rbx]	       198	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_9
0x40001f8	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       198	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_9
0x40001fd	          0x4889c2	                            mov rdx, rax	       198	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_9
0x4000200	      0xe800000000	                          call 0x4000205	       198	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_9
0x4000205	        0x80481301	                 or byte [rax + 0x13], 1	       200	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x4000209	      0x6644897810	             mov word [rax + 0x10], r15w	       199	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x400020e	        0x488b4308	                mov rax, qword [rbx + 8]	       203	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_10
0x4000212	        0x488b7818	            mov rdi, qword [rax + 0x18] 	       203	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_10
0x4000216	      0xe800000000	                          call 0x400021b	       203	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_10
0x400021b	        0x488b5308	                mov rdx, qword [rbx + 8]	       204	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_11
0x400021f	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       204	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_11
0x4000224	          0x4889c6	                            mov rsi, rax	       204	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_11
0x4000227	      0xe800000000	                          call 0x400022c	       204	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_11
0x400022c	        0x80481301	                 or byte [rax + 0x13], 1	       206	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x4000230	      0x6644897810	             mov word [rax + 0x10], r15w	       205	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x4000235	          0x488b3b	                    mov rdi, qword [rbx]	       208	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_12
0x4000238	      0xe800000000	                          call 0x400023d	       208	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_12
0x400023d	        0x488b7b08	                mov rdi, qword [rbx + 8]	       209	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_13
0x4000241	      0xe800000000	                          call 0x4000246	       209	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_13
0x4000246	          0x4889df	                            mov rdi, rbx	       210	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_14
0x4000249	      0xe800000000	                          call 0x400024e	       210	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_14
0x400024e	      0xe90bffffff	                           jmp 0x400015e	       210	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_14
0x4000253	      0x41f6464201	               test byte [r14 + 0x42], 1	        60	diffcore-break.c	FUNCTION_1	IF_2
0x4000258	            0x7429	                            je 0x4000283	        60	diffcore-break.c	FUNCTION_1	IF_2
0x400025a	      0x41f6434201	               test byte [r11 + 0x42], 1	        60	diffcore-break.c	FUNCTION_1	IF_2
0x400025f	            0x7422	                            je 0x4000283	        60	diffcore-break.c	FUNCTION_1	IF_2
0x4000261	          0x4c89de	                            mov rsi, r11	       975	cache.h	FUNCTION_12	CALL_1
0x4000264	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_12	CALL_1
0x4000269	          0x4c89f7	                            mov rdi, r14	       975	cache.h	FUNCTION_12	CALL_1
0x400026c	      0x4c895c2408	                mov qword [rsp + 8], r11	       975	cache.h	FUNCTION_12	CALL_1
0x4000271	      0xe800000000	                          call 0x4000276	       975	cache.h	FUNCTION_12	CALL_1
0x4000276	            0x85c0	                           test eax, eax	        60	diffcore-break.c	FUNCTION_1	IF_2
0x4000278	      0x4c8b5c2408	                mov r11, qword [rsp + 8]	        60	diffcore-break.c	FUNCTION_1	IF_2
0x400027d	     0xf84bdfeffff	                            je 0x4000140	        60	diffcore-break.c	FUNCTION_1	IF_2
0x4000283	            0x31f6	                            xor esi, esi	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x4000285	          0x4c89f7	                            mov rdi, r14	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x4000288	      0x4c895c2408	                mov qword [rsp + 8], r11	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x400028d	      0xe800000000	                          call 0x4000292	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x4000292	            0x85c0	                           test eax, eax	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x4000294	      0x4c8b5c2408	                mov r11, qword [rsp + 8]	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x4000299	            0x7408	                            je 0x40002a3	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x400029b	          0x4c8b33	                    mov r14, qword [rbx]	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x400029e	      0xe99dfeffff	                           jmp 0x4000140	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x40002a3	            0x31f6	                            xor esi, esi	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x40002a5	          0x4c89df	                            mov rdi, r11	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x40002a8	      0x4c895c2408	                mov qword [rsp + 8], r11	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x40002ad	      0xe800000000	                          call 0x40002b2	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x40002b2	            0x85c0	                           test eax, eax	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x40002b4	      0x4c8b5c2408	                mov r11, qword [rsp + 8]	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x40002b9	            0x75e0	                           jne 0x400029b	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x40002bb	        0x498b4630	            mov rax, qword [r14 + 0x30] 	        67	diffcore-break.c	FUNCTION_1
0x40002bf	        0x49394330	            cmp qword [r11 + 0x30], rax 	        67	diffcore-break.c	FUNCTION_1
0x40002c3	          0x4989c7	                            mov r15, rax	        67	diffcore-break.c	FUNCTION_1
0x40002c6	      0x4d0f437b30	          cmovae r15, qword [r11 + 0x30]	        67	diffcore-break.c	FUNCTION_1
0x40002cb	    0x4981ff8f0100	                          cmp r15, 0x18f	        71	diffcore-break.c	FUNCTION_1	IF_5
0x40002d2	            0x76c7	                           jbe 0x400029b	        71	diffcore-break.c	FUNCTION_1	IF_5
0x40002d4	          0x4885c0	                           test rax, rax	        71	diffcore-break.c	FUNCTION_1	IF_5
0x40002d7	            0x74c2	                            je 0x400029b	        71	diffcore-break.c	FUNCTION_1	IF_5
0x40002d9	        0x498d4b28	                   lea rcx, [r11 + 0x28]	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x40002dd	        0x498d5628	                   lea rdx, [r14 + 0x28]	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x40002e1	      0x4c8d4c2438	                    lea r9, [rsp + 0x38]	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x40002e6	      0x4c8d442430	                    lea r8, [rsp + 0x30]	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x40002eb	          0x4c89de	                            mov rsi, r11	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x40002ee	          0x4c89f7	                            mov rdi, r14	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x40002f1	      0x4c895c2408	                mov qword [rsp + 8], r11	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x40002f6	      0xe800000000	                          call 0x40002fb	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x40002fb	            0x85c0	                           test eax, eax	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x40002fd	      0x4c8b5c2408	                mov r11, qword [rsp + 8]	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x4000302	            0x7597	                           jne 0x400029b	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x4000304	        0x498b5630	            mov rdx, qword [r14 + 0x30] 	        80	diffcore-break.c	FUNCTION_1	IF_7
0x4000308	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	        80	diffcore-break.c	FUNCTION_1	IF_7
0x400030d	          0x4839ca	                            cmp rdx, rcx	        80	diffcore-break.c	FUNCTION_1	IF_7
0x4000310	     0xf83ea000000	                           jae 0x4000400	        80	diffcore-break.c	FUNCTION_1	IF_7
0x4000316	        0x660fefc0	                         pxor xmm0, xmm0	        81	diffcore-break.c	FUNCTION_1	IF_7
0x400031a	      0x4889542430	             mov qword [rsp + 0x30], rdx	        81	diffcore-break.c	FUNCTION_1	IF_7
0x400031f	          0x4889d1	                            mov rcx, rdx	        81	diffcore-break.c	FUNCTION_1	IF_7
0x4000322	            0x31f6	                            xor esi, esi	        81	diffcore-break.c	FUNCTION_1	IF_7
0x4000324	          0x4889cf	                            mov rdi, rcx	        82	diffcore-break.c	FUNCTION_1	IF_8
0x4000327	      0x48037c2438	             add rdi, qword [rsp + 0x38]	        82	diffcore-break.c	FUNCTION_1	IF_8
0x400032c	        0x498b4330	            mov rax, qword [r11 + 0x30] 	        82	diffcore-break.c	FUNCTION_1	IF_8
0x4000330	          0x4839f8	                            cmp rax, rdi	        82	diffcore-break.c	FUNCTION_1	IF_8
0x4000333	            0x7311	                           jae 0x4000346	        82	diffcore-break.c	FUNCTION_1	IF_8
0x4000335	          0x4839c8	                            cmp rax, rcx	        83	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x4000338	     0xf86e5000000	                           jbe 0x4000423	        83	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x400033e	          0x4829c8	                            sub rax, rcx	        84	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x4000341	      0x4889442438	             mov qword [rsp + 0x38], rax	        84	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x4000346	          0x4885d2	                           test rdx, rdx	        95	diffcore-break.c	FUNCTION_1
0x4000349	     0xf8800010000	                            js 0x400044f	        95	diffcore-break.c	FUNCTION_1
0x400034f	        0x660fefc9	                         pxor xmm1, xmm1	        95	diffcore-break.c	FUNCTION_1
0x4000353	      0xf2480f2aca	                      cvtsi2sd xmm1, rdx	        95	diffcore-break.c	FUNCTION_1
0x4000358	        0x660f28d8	                       movapd xmm3, xmm0	        95	diffcore-break.c	FUNCTION_1
0x400035c	        0xf20f5ed9	                        divsd xmm3, xmm1	        95	diffcore-break.c	FUNCTION_1
0x4000360	        0xf20f2cc3	                     cvttsd2si eax, xmm3	        95	diffcore-break.c	FUNCTION_1
0x4000364	          0x4139c5	                           cmp r13d, eax	        96	diffcore-break.c	FUNCTION_1	IF_10
0x4000367	            0x7c7f	                            jl 0x40003e8	        96	diffcore-break.c	FUNCTION_1	IF_10
0x4000369	      0x4c8b442438	              mov r8, qword [rsp + 0x38]	       102	diffcore-break.c	FUNCTION_1
0x400036e	          0x4d89c1	                              mov r9, r8	       103	diffcore-break.c	FUNCTION_1	IF_11
0x4000371	          0x4901f1	                             add r9, rsi	       103	diffcore-break.c	FUNCTION_1	IF_11
0x4000374	     0xf8833010000	                            js 0x40004ad	       103	diffcore-break.c	FUNCTION_1	IF_11
0x400037a	        0x660fefc9	                         pxor xmm1, xmm1	       103	diffcore-break.c	FUNCTION_1	IF_11
0x400037e	      0xf2490f2ac9	                       cvtsi2sd xmm1, r9	       103	diffcore-break.c	FUNCTION_1	IF_11
0x4000383	          0x4d85ff	                           test r15, r15	       103	diffcore-break.c	FUNCTION_1	IF_11
0x4000386	    0xf20f590d0000	          mulsd xmm1, qword [0x0400038e]	       103	diffcore-break.c	FUNCTION_1	IF_11
0x400038e	     0xf88fa000000	                            js 0x400048e	       103	diffcore-break.c	FUNCTION_1	IF_11
0x4000394	        0x660fefd2	                         pxor xmm2, xmm2	       103	diffcore-break.c	FUNCTION_1	IF_11
0x4000398	      0xf2490f2ad7	                      cvtsi2sd xmm2, r15	       103	diffcore-break.c	FUNCTION_1	IF_11
0x400039d	        0xf20f5eca	                        divsd xmm1, xmm2	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40003a1	        0x660fefd2	                         pxor xmm2, xmm2	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40003a5	      0xf2410f2ad5	                     cvtsi2sd xmm2, r13d	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40003aa	        0x660f2ed1	                      ucomisd xmm2, xmm1	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40003ae	     0xf87e7feffff	                            ja 0x400029b	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40003b4	    0x480faf542420	            imul rdx, qword [rsp + 0x20]	       109	diffcore-break.c	FUNCTION_1	IF_12
0x40003ba	          0x4885d2	                           test rdx, rdx	       109	diffcore-break.c	FUNCTION_1	IF_12
0x40003bd	     0xf88ad000000	                            js 0x4000470	       109	diffcore-break.c	FUNCTION_1	IF_12
0x40003c3	        0x660fefc9	                         pxor xmm1, xmm1	       109	diffcore-break.c	FUNCTION_1	IF_12
0x40003c7	      0xf2480f2aca	                      cvtsi2sd xmm1, rdx	       109	diffcore-break.c	FUNCTION_1	IF_12
0x40003cc	        0x660f2ec1	                      ucomisd xmm0, xmm1	       109	diffcore-break.c	FUNCTION_1	IF_12
0x40003d0	            0x7616	                           jbe 0x40003e8	       109	diffcore-break.c	FUNCTION_1	IF_12
0x40003d2	        0x4b8d1480	                    lea rdx, [r8 + r8*4]	       110	diffcore-break.c	FUNCTION_1	IF_12
0x40003d6	        0x48c1e202	                              shl rdx, 2	       110	diffcore-break.c	FUNCTION_1	IF_12
0x40003da	          0x4839f2	                            cmp rdx, rsi	       110	diffcore-break.c	FUNCTION_1	IF_12
0x40003dd	            0x7309	                           jae 0x40003e8	       110	diffcore-break.c	FUNCTION_1	IF_12
0x40003df	          0x4839ca	                            cmp rdx, rcx	       110	diffcore-break.c	FUNCTION_1	IF_12
0x40003e2	     0xf82b3feffff	                            jb 0x400029b	       110	diffcore-break.c	FUNCTION_1	IF_12
0x40003e8	          0x488b13	                    mov rdx, qword [rbx]	       110	diffcore-break.c	FUNCTION_1	IF_12
0x40003eb	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       110	diffcore-break.c	FUNCTION_1	IF_12
0x40003ef	      0x4889542428	             mov qword [rsp + 0x28], rdx	       110	diffcore-break.c	FUNCTION_1	IF_12
0x40003f4	      0xe9e3fdffff	                           jmp 0x40001dc	       110	diffcore-break.c	FUNCTION_1	IF_12
0x40003f9	     0xf1f80000000	                         nop dword [rax]	       110	diffcore-break.c	FUNCTION_1	IF_12
0x4000400	          0x4889d6	                            mov rsi, rdx	       110	diffcore-break.c	FUNCTION_1	IF_12
0x4000403	          0x4829ce	                            sub rsi, rcx	       110	diffcore-break.c	FUNCTION_1	IF_12
0x4000406	            0x7829	                            js 0x4000431	       110	diffcore-break.c	FUNCTION_1	IF_12
0x4000408	        0x660fefc0	                         pxor xmm0, xmm0	       110	diffcore-break.c	FUNCTION_1	IF_12
0x400040c	      0xf2480f2ac6	                      cvtsi2sd xmm0, rsi	       110	diffcore-break.c	FUNCTION_1	IF_12
0x4000411	    0xf20f59050000	          mulsd xmm0, qword [0x04000419]	       110	diffcore-break.c	FUNCTION_1	IF_12
0x4000419	      0xe906ffffff	                           jmp 0x4000324	       110	diffcore-break.c	FUNCTION_1	IF_12
0x400041e	      0xe800000000	                          call 0x4000423	       224	diffcore-break.c	FUNCTION_2
0x4000423	    0x48c744243800	               mov qword [rsp + 0x38], 0	        86	diffcore-break.c	FUNCTION_1	IF_8	ELSE_1
0x400042c	      0xe915ffffff	                           jmp 0x4000346	        86	diffcore-break.c	FUNCTION_1	IF_8	ELSE_1
0x4000431	          0x4889f0	                            mov rax, rsi	        86	diffcore-break.c	FUNCTION_1	IF_8	ELSE_1
0x4000434	          0x4889f7	                            mov rdi, rsi	        86	diffcore-break.c	FUNCTION_1	IF_8	ELSE_1
0x4000437	        0x660fefc0	                         pxor xmm0, xmm0	        86	diffcore-break.c	FUNCTION_1	IF_8	ELSE_1
0x400043b	          0x48d1e8	                              shr rax, 1	        86	diffcore-break.c	FUNCTION_1	IF_8	ELSE_1
0x400043e	          0x83e701	                              and edi, 1	        86	diffcore-break.c	FUNCTION_1	IF_8	ELSE_1
0x4000441	          0x4809f8	                             or rax, rdi	        86	diffcore-break.c	FUNCTION_1	IF_8	ELSE_1
0x4000444	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	        86	diffcore-break.c	FUNCTION_1	IF_8	ELSE_1
0x4000449	        0xf20f58c0	                        addsd xmm0, xmm0	        86	diffcore-break.c	FUNCTION_1	IF_8	ELSE_1
0x400044d	            0xebc2	                           jmp 0x4000411	        86	diffcore-break.c	FUNCTION_1	IF_8	ELSE_1
0x400044f	          0x4889d0	                            mov rax, rdx	        95	diffcore-break.c	FUNCTION_1
0x4000452	          0x4889d7	                            mov rdi, rdx	        95	diffcore-break.c	FUNCTION_1
0x4000455	        0x660fefc9	                         pxor xmm1, xmm1	        95	diffcore-break.c	FUNCTION_1
0x4000459	          0x48d1e8	                              shr rax, 1	        95	diffcore-break.c	FUNCTION_1
0x400045c	          0x83e701	                              and edi, 1	        95	diffcore-break.c	FUNCTION_1
0x400045f	          0x4809f8	                             or rax, rdi	        95	diffcore-break.c	FUNCTION_1
0x4000462	      0xf2480f2ac8	                      cvtsi2sd xmm1, rax	        95	diffcore-break.c	FUNCTION_1
0x4000467	        0xf20f58c9	                        addsd xmm1, xmm1	        95	diffcore-break.c	FUNCTION_1
0x400046b	      0xe9e8feffff	                           jmp 0x4000358	        95	diffcore-break.c	FUNCTION_1
0x4000470	          0x4889d7	                            mov rdi, rdx	       109	diffcore-break.c	FUNCTION_1	IF_12
0x4000473	        0x660fefc9	                         pxor xmm1, xmm1	       109	diffcore-break.c	FUNCTION_1	IF_12
0x4000477	          0x48d1ef	                              shr rdi, 1	       109	diffcore-break.c	FUNCTION_1	IF_12
0x400047a	          0x83e201	                              and edx, 1	       109	diffcore-break.c	FUNCTION_1	IF_12
0x400047d	          0x4809d7	                             or rdi, rdx	       109	diffcore-break.c	FUNCTION_1	IF_12
0x4000480	      0xf2480f2acf	                      cvtsi2sd xmm1, rdi	       109	diffcore-break.c	FUNCTION_1	IF_12
0x4000485	        0xf20f58c9	                        addsd xmm1, xmm1	       109	diffcore-break.c	FUNCTION_1	IF_12
0x4000489	      0xe93effffff	                           jmp 0x40003cc	       109	diffcore-break.c	FUNCTION_1	IF_12
0x400048e	          0x4c89ff	                            mov rdi, r15	       103	diffcore-break.c	FUNCTION_1	IF_11
0x4000491	        0x660fefd2	                         pxor xmm2, xmm2	       103	diffcore-break.c	FUNCTION_1	IF_11
0x4000495	          0x48d1ef	                              shr rdi, 1	       103	diffcore-break.c	FUNCTION_1	IF_11
0x4000498	        0x4183e701	                             and r15d, 1	       103	diffcore-break.c	FUNCTION_1	IF_11
0x400049c	          0x4c09ff	                             or rdi, r15	       103	diffcore-break.c	FUNCTION_1	IF_11
0x400049f	      0xf2480f2ad7	                      cvtsi2sd xmm2, rdi	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40004a4	        0xf20f58d2	                        addsd xmm2, xmm2	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40004a8	      0xe9f0feffff	                           jmp 0x400039d	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40004ad	          0x4c89cf	                             mov rdi, r9	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40004b0	        0x660fefc9	                         pxor xmm1, xmm1	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40004b4	          0x48d1ef	                              shr rdi, 1	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40004b7	        0x4183e101	                              and r9d, 1	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40004bb	          0x4c09cf	                              or rdi, r9	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40004be	      0xf2480f2acf	                      cvtsi2sd xmm1, rdi	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40004c3	        0xf20f58c9	                        addsd xmm1, xmm1	       103	diffcore-break.c	FUNCTION_1	IF_11
0x40004c7	      0xe9b7feffff	                           jmp 0x4000383	       103	diffcore-break.c	FUNCTION_1	IF_11
