trailer_set_if_exists	IF,6:DO,0:functions,0:SWITCH,0:CALL,5:WHILE,0:FOR,0:ELSE,6	49
0x40009ae	          0x4885f6	                           test rsi, rsi	       399	trailer.c	ELSE_5	FUNCTION_23	IF_1
0x40009b1	            0x750c	                           jne 0x40009bf	       399	trailer.c	ELSE_5	FUNCTION_23	IF_1
0x40009b3	    0xc70700000000	                      mov dword [rdi], 0	       400	trailer.c	ELSE_5	FUNCTION_23	IF_1
0x40009b9	      0xb800000000	                              mov eax, 0	       413	trailer.c	FUNCTION_23	ELSE_5	ELSE_6
0x40009be	              0xc3	                                     ret	       414	trailer.c	FUNCTION_23	ELSE_5	ELSE_6
0x40009bf	              0x55	                                push rbp	       398	trailer.c	ELSE_5	FUNCTION_23
0x40009c0	              0x53	                                push rbx	       398	trailer.c	ELSE_5	FUNCTION_23
0x40009c1	        0x4883ec08	                              sub rsp, 8	       398	trailer.c	ELSE_5	FUNCTION_23
0x40009c5	          0x4889f3	                            mov rbx, rsi	       398	trailer.c	ELSE_5	FUNCTION_23
0x40009c8	          0x4889fd	                            mov rbp, rdi	       398	trailer.c	ELSE_5	FUNCTION_23
0x40009cb	      0xbf00000000	                              mov edi, 0	       401	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2	CALL_1
0x40009d0	      0xe800000000	                          call 0x40009d5	       401	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2	CALL_1
0x40009d5	            0x85c0	                           test eax, eax	       401	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2	CALL_1
0x40009d7	            0x7509	                           jne 0x40009e2	       401	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2	CALL_1
0x40009d9	    0xc74500020000	                      mov dword [rbp], 2	       402	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2
0x40009e0	            0xeb6d	                           jmp 0x4000a4f	       402	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2
0x40009e2	          0x4889de	                            mov rsi, rbx	       403	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3	CALL_2
0x40009e5	      0xbf00000000	                              mov edi, 0	       403	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3	CALL_2
0x40009ea	      0xe800000000	                          call 0x40009ef	       403	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3	CALL_2
0x40009ef	            0x85c0	                           test eax, eax	       403	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3	CALL_2
0x40009f1	            0x7509	                           jne 0x40009fc	       403	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3	CALL_2
0x40009f3	    0xc74500010000	                      mov dword [rbp], 1	       404	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3
0x40009fa	            0xeb53	                           jmp 0x4000a4f	       404	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3
0x40009fc	          0x4889de	                            mov rsi, rbx	       405	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4	CALL_3
0x40009ff	      0xbf00000000	                              mov edi, 0	       405	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4	CALL_3
0x4000a04	      0xe800000000	                          call 0x4000a09	       405	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4	CALL_3
0x4000a09	            0x85c0	                           test eax, eax	       405	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4	CALL_3
0x4000a0b	            0x7509	                           jne 0x4000a16	       405	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4	CALL_3
0x4000a0d	    0xc74500030000	                      mov dword [rbp], 3	       406	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4
0x4000a14	            0xeb39	                           jmp 0x4000a4f	       406	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4
0x4000a16	          0x4889de	                            mov rsi, rbx	       407	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5	CALL_4
0x4000a19	      0xbf00000000	                              mov edi, 0	       407	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5	CALL_4
0x4000a1e	      0xe800000000	                          call 0x4000a23	       407	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5	CALL_4
0x4000a23	            0x85c0	                           test eax, eax	       407	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5	CALL_4
0x4000a25	            0x7509	                           jne 0x4000a30	       407	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5	CALL_4
0x4000a27	    0xc74500040000	                      mov dword [rbp], 4	       408	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5
0x4000a2e	            0xeb1f	                           jmp 0x4000a4f	       408	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5
0x4000a30	          0x4889de	                            mov rsi, rbx	       409	trailer.c	FUNCTION_23	IF_6	CALL_5
0x4000a33	      0xbf00000000	                              mov edi, 0	       409	trailer.c	FUNCTION_23	IF_6	CALL_5
0x4000a38	      0xe800000000	                          call 0x4000a3d	       409	trailer.c	FUNCTION_23	IF_6	CALL_5
0x4000a3d	            0x85c0	                           test eax, eax	       409	trailer.c	FUNCTION_23	IF_6	CALL_5
0x4000a3f	            0x7509	                           jne 0x4000a4a	       409	trailer.c	FUNCTION_23	IF_6	CALL_5
0x4000a41	    0xc74500050000	                      mov dword [rbp], 5	       410	trailer.c	FUNCTION_23	IF_6	ELSE_5
0x4000a48	            0xeb05	                           jmp 0x4000a4f	       410	trailer.c	FUNCTION_23	IF_6	ELSE_5
0x4000a4a	      0xb8ffffffff	                     mov eax, 0xffffffff	       412	trailer.c	FUNCTION_23	ELSE_5	ELSE_6
0x4000a4f	        0x4883c408	                              add rsp, 8	       414	trailer.c	FUNCTION_23	ELSE_5	ELSE_6
0x4000a53	              0x5b	                                 pop rbx	       414	trailer.c	FUNCTION_23	ELSE_5	ELSE_6
0x4000a54	              0x5d	                                 pop rbp	       414	trailer.c	FUNCTION_23	ELSE_5	ELSE_6
0x4000a55	              0xc3	                                     ret	       414	trailer.c	FUNCTION_23	ELSE_5	ELSE_6
parse_trailer	IF,4:DO,0:functions,0:SWITCH,0:CALL,12:WHILE,0:FOR,0:ELSE,1	93
0x400033c	            0x4156	                                push r14	       634	trailer.c	FUNCTION_33
0x400033e	            0x4155	                                push r13	       634	trailer.c	FUNCTION_33
0x4000340	            0x4154	                                push r12	       634	trailer.c	FUNCTION_33
0x4000342	              0x55	                                push rbp	       634	trailer.c	FUNCTION_33
0x4000343	              0x53	                                push rbx	       634	trailer.c	FUNCTION_33
0x4000344	          0x4989fc	                            mov r12, rdi	       634	trailer.c	FUNCTION_33
0x4000347	          0x4989d5	                            mov r13, rdx	       634	trailer.c	FUNCTION_33
0x400034a	          0x4989ce	                            mov r14, rcx	       634	trailer.c	FUNCTION_33
0x400034d	        0x4183f8ff	             cmp r8d, 0xffffffffffffffff	       639	trailer.c	FUNCTION_33	IF_1
0x4000351	            0x7448	                            je 0x400039b	       639	trailer.c	FUNCTION_33	IF_1
0x4000353	          0x4889f3	                            mov rbx, rsi	       639	trailer.c	FUNCTION_33	IF_1
0x4000356	          0x4963e8	                         movsxd rbp, r8d	       640	trailer.c	FUNCTION_33	IF_1	CALL_1
0x4000359	          0x4889ea	                            mov rdx, rbp	       640	trailer.c	FUNCTION_33	IF_1	CALL_1
0x400035c	          0x4889ce	                            mov rsi, rcx	       640	trailer.c	FUNCTION_33	IF_1	CALL_1
0x400035f	      0xe800000000	                          call 0x4000364	       640	trailer.c	FUNCTION_33	IF_1	CALL_1
0x4000364	          0x4c89e7	                            mov rdi, r12	       641	trailer.c	FUNCTION_33	IF_1	CALL_2
0x4000367	      0xe800000000	                          call 0x400036c	       641	trailer.c	FUNCTION_33	IF_1	CALL_2
0x400036c	      0x498d742e01	                lea rsi, [r14 + rbp + 1]	       642	trailer.c	FUNCTION_33	IF_1	CALL_3
0x4000371	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_57	CALL_2
0x4000376	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_57	CALL_2
0x400037d	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_57	CALL_2
0x4000380	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_57	CALL_2
0x4000382	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_57	CALL_2
0x4000385	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_57	CALL_2
0x4000389	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_57	CALL_2
0x400038c	      0xe800000000	                          call 0x4000391	       279	strbuf.h	FUNCTION_57	CALL_2
0x4000391	          0x4889df	                            mov rdi, rbx	       643	trailer.c	FUNCTION_33	IF_1	CALL_4
0x4000394	      0xe800000000	                          call 0x4000399	       643	trailer.c	FUNCTION_33	IF_1	CALL_4
0x4000399	            0xeb2b	                           jmp 0x40003c6	       643	trailer.c	FUNCTION_33	IF_1	CALL_4
0x400039b	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_57	CALL_2
0x40003a0	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_57	CALL_2
0x40003a7	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_57	CALL_2
0x40003aa	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_57	CALL_2
0x40003ac	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_57	CALL_2
0x40003af	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_57	CALL_2
0x40003b3	          0x4c89f6	                            mov rsi, r14	       279	strbuf.h	FUNCTION_57	CALL_2
0x40003b6	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_57	CALL_2
0x40003b9	      0xe800000000	                          call 0x40003be	       279	strbuf.h	FUNCTION_57	CALL_2
0x40003be	          0x4c89e7	                            mov rdi, r12	       646	trailer.c	FUNCTION_33	ELSE_1	CALL_6
0x40003c1	      0xe800000000	                          call 0x40003c6	       646	trailer.c	FUNCTION_33	ELSE_1	CALL_6
0x40003c6	      0x498b742408	                mov rsi, qword [r12 + 8]	       650	trailer.c	FUNCTION_33	CALL_7
0x40003cb	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	       650	trailer.c	FUNCTION_33	CALL_7
0x40003d0	      0xe86bfcffff	    call sym.token_len_without_separator	       650	trailer.c	FUNCTION_33	CALL_7
0x40003d5	            0x89c5	                            mov ebp, eax	       650	trailer.c	FUNCTION_33	CALL_7
0x40003d7	          0x4d85ed	                           test r13, r13	       651	trailer.c	FUNCTION_33	IF_2
0x40003da	            0x7408	                            je 0x40003e4	       651	trailer.c	FUNCTION_33	IF_2
0x40003dc	    0x49c745000000	                      mov qword [r13], 0	       652	trailer.c	FUNCTION_33	IF_2
0x40003e4	    0x488b1d000000	            mov rbx, qword [0x040003eb] 	       653	trailer.c	FUNCTION_33
0x40003eb	    0x4881fb000000	                              cmp rbx, 0	       653	trailer.c	FUNCTION_33
0x40003f2	     0xf8481000000	                            je 0x4000479	       653	trailer.c	FUNCTION_33
0x40003f8	      0x4d8b742410	            mov r14, qword [r12 + 0x10] 	       655	trailer.c	FUNCTION_33	IF_3	CALL_8
0x40003fd	            0x89ea	                            mov edx, ebp	       655	trailer.c	FUNCTION_33	IF_3	CALL_8
0x40003ff	          0x4889de	                            mov rsi, rbx	       655	trailer.c	FUNCTION_33	IF_3	CALL_8
0x4000402	          0x4c89f7	                            mov rdi, r14	       655	trailer.c	FUNCTION_33	IF_3	CALL_8
0x4000405	      0xe8e6feffff	             call sym.token_matches_item	       655	trailer.c	FUNCTION_33	IF_3	CALL_8
0x400040a	            0x85c0	                           test eax, eax	       655	trailer.c	FUNCTION_33	IF_3	CALL_8
0x400040c	            0x745f	                            je 0x400046d	       655	trailer.c	FUNCTION_33	IF_3	CALL_8
0x400040e	      0xbe00000000	                              mov esi, 0	       656	trailer.c	FUNCTION_33	IF_3	CALL_9
0x4000413	          0x4c89e7	                            mov rdi, r12	       656	trailer.c	FUNCTION_33	IF_3	CALL_9
0x4000416	      0xe800000000	                          call 0x400041b	       656	trailer.c	FUNCTION_33	IF_3	CALL_9
0x400041b	          0x4889c5	                            mov rbp, rax	       656	trailer.c	FUNCTION_33	IF_3	CALL_9
0x400041e	          0x4d85ed	                           test r13, r13	       657	trailer.c	FUNCTION_33	IF_3	IF_4
0x4000421	            0x7408	                            je 0x400042b	       657	trailer.c	FUNCTION_33	IF_3	IF_4
0x4000423	        0x488d4320	                   lea rax, [rbx + 0x20]	       658	trailer.c	FUNCTION_33	IF_3	IF_4
0x4000427	        0x49894500	                    mov qword [r13], rax	       658	trailer.c	FUNCTION_33	IF_3	IF_4
0x400042b	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       581	trailer.c	FUNCTION_30	IF_1
0x400042f	          0x4889c6	                            mov rsi, rax	       582	trailer.c	FUNCTION_30	IF_1
0x4000432	          0x4885c0	                           test rax, rax	       581	trailer.c	FUNCTION_30	IF_1
0x4000435	            0x750c	                           jne 0x4000443	       581	trailer.c	FUNCTION_30	IF_1
0x4000437	          0x4889ee	                            mov rsi, rbp	       584	trailer.c	FUNCTION_30	IF_2
0x400043a	          0x4885ed	                           test rbp, rbp	       583	trailer.c	FUNCTION_30	IF_2
0x400043d	            0x7504	                           jne 0x4000443	       583	trailer.c	FUNCTION_30	IF_2
0x400043f	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	       585	trailer.c	FUNCTION_30
0x4000443	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_57	CALL_2
0x4000448	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_57	CALL_2
0x400044f	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_57	CALL_2
0x4000452	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_57	CALL_2
0x4000454	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_57	CALL_2
0x4000457	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_57	CALL_2
0x400045b	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_57	CALL_2
0x400045e	      0xe800000000	                          call 0x4000463	       279	strbuf.h	FUNCTION_57	CALL_2
0x4000463	          0x4889ef	                            mov rdi, rbp	       660	trailer.c	FUNCTION_33	IF_3	CALL_12
0x4000466	      0xe800000000	                          call 0x400046b	       660	trailer.c	FUNCTION_33	IF_3	CALL_12
0x400046b	            0xeb0c	                           jmp 0x4000479	       661	trailer.c	FUNCTION_33	IF_3
0x400046d	          0x488b1b	                    mov rbx, qword [rbx]	       653	trailer.c	FUNCTION_33
0x4000470	    0x4881fb000000	                              cmp rbx, 0	       653	trailer.c	FUNCTION_33
0x4000477	            0x7584	                           jne 0x40003fd	       653	trailer.c	FUNCTION_33
0x4000479	              0x5b	                                 pop rbx	       664	trailer.c	FUNCTION_33
0x400047a	              0x5d	                                 pop rbp	       664	trailer.c	FUNCTION_33
0x400047b	            0x415c	                                 pop r12	       664	trailer.c	FUNCTION_33
0x400047d	            0x415d	                                 pop r13	       664	trailer.c	FUNCTION_33
0x400047f	            0x415e	                                 pop r14	       664	trailer.c	FUNCTION_33
0x4000481	              0xc3	                                     ret	       664	trailer.c	FUNCTION_33
trailer_set_where	IF,5:DO,0:functions,0:SWITCH,0:CALL,4:WHILE,0:FOR,0:ELSE,5	42
0x4000920	          0x4885f6	                           test rsi, rsi	       382	trailer.c	FUNCTION_22	IF_1
0x4000923	            0x750c	                           jne 0x4000931	       382	trailer.c	FUNCTION_22	IF_1
0x4000925	    0xc70700000000	                      mov dword [rdi], 0	       383	trailer.c	FUNCTION_22	IF_1
0x400092b	      0xb800000000	                              mov eax, 0	       394	trailer.c	FUNCTION_22	ELSE_5
0x4000930	              0xc3	                                     ret	       395	trailer.c	FUNCTION_22	ELSE_5
0x4000931	              0x55	                                push rbp	       381	trailer.c	FUNCTION_22
0x4000932	              0x53	                                push rbx	       381	trailer.c	FUNCTION_22
0x4000933	        0x4883ec08	                              sub rsp, 8	       381	trailer.c	FUNCTION_22
0x4000937	          0x4889f3	                            mov rbx, rsi	       381	trailer.c	FUNCTION_22
0x400093a	          0x4889fd	                            mov rbp, rdi	       381	trailer.c	FUNCTION_22
0x400093d	      0xbf00000000	                              mov edi, 0	       384	trailer.c	FUNCTION_22	ELSE_1	IF_2	CALL_1
0x4000942	      0xe800000000	                          call 0x4000947	       384	trailer.c	FUNCTION_22	ELSE_1	IF_2	CALL_1
0x4000947	            0x85c0	                           test eax, eax	       384	trailer.c	FUNCTION_22	ELSE_1	IF_2	CALL_1
0x4000949	            0x7509	                           jne 0x4000954	       384	trailer.c	FUNCTION_22	ELSE_1	IF_2	CALL_1
0x400094b	    0xc74500020000	                      mov dword [rbp], 2	       385	trailer.c	FUNCTION_22	ELSE_1	IF_2
0x4000952	            0xeb53	                           jmp 0x40009a7	       385	trailer.c	FUNCTION_22	ELSE_1	IF_2
0x4000954	          0x4889de	                            mov rsi, rbx	       386	trailer.c	FUNCTION_22	ELSE_2	IF_3	CALL_2
0x4000957	      0xbf00000000	                              mov edi, 0	       386	trailer.c	FUNCTION_22	ELSE_2	IF_3	CALL_2
0x400095c	      0xe800000000	                          call 0x4000961	       386	trailer.c	FUNCTION_22	ELSE_2	IF_3	CALL_2
0x4000961	            0x85c0	                           test eax, eax	       386	trailer.c	FUNCTION_22	ELSE_2	IF_3	CALL_2
0x4000963	            0x7509	                           jne 0x400096e	       386	trailer.c	FUNCTION_22	ELSE_2	IF_3	CALL_2
0x4000965	    0xc74500030000	                      mov dword [rbp], 3	       387	trailer.c	FUNCTION_22	ELSE_2	IF_3
0x400096c	            0xeb39	                           jmp 0x40009a7	       387	trailer.c	FUNCTION_22	ELSE_2	IF_3
0x400096e	          0x4889de	                            mov rsi, rbx	       388	trailer.c	FUNCTION_22	ELSE_3	IF_4	CALL_3
0x4000971	      0xbf00000000	                              mov edi, 0	       388	trailer.c	FUNCTION_22	ELSE_3	IF_4	CALL_3
0x4000976	      0xe800000000	                          call 0x400097b	       388	trailer.c	FUNCTION_22	ELSE_3	IF_4	CALL_3
0x400097b	            0x85c0	                           test eax, eax	       388	trailer.c	FUNCTION_22	ELSE_3	IF_4	CALL_3
0x400097d	            0x7509	                           jne 0x4000988	       388	trailer.c	FUNCTION_22	ELSE_3	IF_4	CALL_3
0x400097f	    0xc74500010000	                      mov dword [rbp], 1	       389	trailer.c	FUNCTION_22	ELSE_3	IF_4
0x4000986	            0xeb1f	                           jmp 0x40009a7	       389	trailer.c	FUNCTION_22	ELSE_3	IF_4
0x4000988	          0x4889de	                            mov rsi, rbx	       390	trailer.c	FUNCTION_22	ELSE_4	IF_5	CALL_4
0x400098b	      0xbf00000000	                              mov edi, 0	       390	trailer.c	FUNCTION_22	ELSE_4	IF_5	CALL_4
0x4000990	      0xe800000000	                          call 0x4000995	       390	trailer.c	FUNCTION_22	ELSE_4	IF_5	CALL_4
0x4000995	            0x85c0	                           test eax, eax	       390	trailer.c	FUNCTION_22	ELSE_4	IF_5	CALL_4
0x4000997	            0x7509	                           jne 0x40009a2	       390	trailer.c	FUNCTION_22	ELSE_4	IF_5	CALL_4
0x4000999	    0xc74500040000	                      mov dword [rbp], 4	       391	trailer.c	FUNCTION_22	ELSE_4	IF_5
0x40009a0	            0xeb05	                           jmp 0x40009a7	       391	trailer.c	FUNCTION_22	ELSE_4	IF_5
0x40009a2	      0xb8ffffffff	                     mov eax, 0xffffffff	       393	trailer.c	FUNCTION_22	ELSE_5
0x40009a7	        0x4883c408	                              add rsp, 8	       395	trailer.c	FUNCTION_22	ELSE_5
0x40009ab	              0x5b	                                 pop rbx	       395	trailer.c	FUNCTION_22	ELSE_5
0x40009ac	              0x5d	                                 pop rbp	       395	trailer.c	FUNCTION_22	ELSE_5
0x40009ad	              0xc3	                                     ret	       395	trailer.c	FUNCTION_22	ELSE_5
duplicate_conf	IF,0:DO,0:functions,0:SWITCH,0:CALL,3:WHILE,0:FOR,0:ELSE,0	37
0x4000155	              0x55	                                push rbp	       430	trailer.c	ELSE_3	FUNCTION_25
0x4000156	              0x53	                                push rbx	       430	trailer.c	ELSE_3	FUNCTION_25
0x4000157	        0x4883ec08	                              sub rsp, 8	       430	trailer.c	ELSE_3	FUNCTION_25
0x400015b	          0x4889fb	                            mov rbx, rdi	       430	trailer.c	ELSE_3	FUNCTION_25
0x400015e	          0x4889f5	                            mov rbp, rsi	       430	trailer.c	ELSE_3	FUNCTION_25
0x4000161	          0x488b06	                    mov rax, qword [rsi]	       431	trailer.c	ELSE_3	FUNCTION_25
0x4000164	          0x488907	                    mov qword [rdi], rax	       431	trailer.c	ELSE_3	FUNCTION_25
0x4000167	        0x488b4608	                mov rax, qword [rsi + 8]	       431	trailer.c	ELSE_3	FUNCTION_25
0x400016b	        0x48894708	                mov qword [rdi + 8], rax	       431	trailer.c	ELSE_3	FUNCTION_25
0x400016f	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       431	trailer.c	ELSE_3	FUNCTION_25
0x4000173	        0x48894710	             mov qword [rdi + 0x10], rax	       431	trailer.c	ELSE_3	FUNCTION_25
0x4000177	        0x488b4618	            mov rax, qword [rsi + 0x18] 	       431	trailer.c	ELSE_3	FUNCTION_25
0x400017b	        0x48894718	             mov qword [rdi + 0x18], rax	       431	trailer.c	ELSE_3	FUNCTION_25
0x400017f	        0x488b4620	            mov rax, qword [rsi + 0x20] 	       431	trailer.c	ELSE_3	FUNCTION_25
0x4000183	        0x48894720	             mov qword [rdi + 0x20], rax	       431	trailer.c	ELSE_3	FUNCTION_25
0x4000187	          0x488b06	                    mov rax, qword [rsi]	       432	trailer.c	ELSE_3	FUNCTION_25	CALL_1
0x400018a	          0x4885c0	                           test rax, rax	       924	git-compat-util.h	FUNCTION_82	CALL_1
0x400018d	            0x7408	                            je 0x4000197	       924	git-compat-util.h	FUNCTION_82	CALL_1
0x400018f	          0x4889c7	                            mov rdi, rax	       924	git-compat-util.h	FUNCTION_82	CALL_1
0x4000192	      0xe800000000	                          call 0x4000197	       924	git-compat-util.h	FUNCTION_82	CALL_1
0x4000197	          0x488903	                    mov qword [rbx], rax	       432	trailer.c	ELSE_3	FUNCTION_25	CALL_1
0x400019a	        0x488b4508	                mov rax, qword [rbp + 8]	       433	trailer.c	ELSE_3	FUNCTION_25	CALL_2
0x400019e	          0x4885c0	                           test rax, rax	       924	git-compat-util.h	FUNCTION_82	CALL_1
0x40001a1	            0x7408	                            je 0x40001ab	       924	git-compat-util.h	FUNCTION_82	CALL_1
0x40001a3	          0x4889c7	                            mov rdi, rax	       924	git-compat-util.h	FUNCTION_82	CALL_1
0x40001a6	      0xe800000000	                          call 0x40001ab	       924	git-compat-util.h	FUNCTION_82	CALL_1
0x40001ab	        0x48894308	                mov qword [rbx + 8], rax	       433	trailer.c	ELSE_3	FUNCTION_25	CALL_2
0x40001af	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       434	trailer.c	ELSE_3	FUNCTION_25	CALL_3
0x40001b3	          0x4885c0	                           test rax, rax	       924	git-compat-util.h	FUNCTION_82	CALL_1
0x40001b6	            0x7408	                            je 0x40001c0	       924	git-compat-util.h	FUNCTION_82	CALL_1
0x40001b8	          0x4889c7	                            mov rdi, rax	       924	git-compat-util.h	FUNCTION_82	CALL_1
0x40001bb	      0xe800000000	                          call 0x40001c0	       924	git-compat-util.h	FUNCTION_82	CALL_1
0x40001c0	        0x48894310	             mov qword [rbx + 0x10], rax	       434	trailer.c	ELSE_3	FUNCTION_25	CALL_3
0x40001c4	        0x4883c408	                              add rsp, 8	       435	trailer.c	ELSE_3	FUNCTION_25
0x40001c8	              0x5b	                                 pop rbx	       435	trailer.c	ELSE_3	FUNCTION_25
0x40001c9	              0x5d	                                 pop rbp	       435	trailer.c	ELSE_3	FUNCTION_25
0x40001ca	              0xc3	                                     ret	       435	trailer.c	ELSE_3	FUNCTION_25
git_trailer_default_config	IF,9:DO,0:functions,0:SWITCH,0:CALL,16:WHILE,0:FOR,0:ELSE,3	106
0x4000d49	            0x4154	                                push r12	       474	trailer.c	FUNCTION_27
0x4000d4b	              0x55	                                push rbp	       474	trailer.c	FUNCTION_27
0x4000d4c	              0x53	                                push rbx	       474	trailer.c	FUNCTION_27
0x4000d4d	          0x4889fb	                            mov rbx, rdi	       474	trailer.c	FUNCTION_27
0x4000d50	      0xb800000000	                              mov eax, 0	       474	trailer.c	FUNCTION_27
0x4000d55	           0xfb608	                   movzx ecx, byte [rax]	       484	git-compat-util.h	FUNCTION_70	DO_1	IF_1
0x4000d58	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_70	DO_1	IF_1
0x4000d5a	     0xf8443010000	                            je 0x4000ea3	       484	git-compat-util.h	FUNCTION_70	DO_1	IF_1
0x4000d60	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_70	DO_1
0x4000d64	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_70	DO_1
0x4000d68	          0x3a4bff	                  cmp cl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_70	DO_1
0x4000d6b	            0x74e8	                            je 0x4000d55	       488	git-compat-util.h	FUNCTION_70	DO_1
0x4000d6d	      0xe94d010000	                           jmp 0x4000ebf	       488	git-compat-util.h	FUNCTION_70	DO_1
0x4000d72	      0xbf00000000	                              mov edi, 0	       482	trailer.c	FUNCTION_27	IF_2	IF_3	CALL_3
0x4000d77	      0xb906000000	                              mov ecx, 6	       482	trailer.c	FUNCTION_27	IF_2	IF_3	CALL_3
0x4000d7c	          0x4889de	                            mov rsi, rbx	       482	trailer.c	FUNCTION_27	IF_2	IF_3	CALL_3
0x4000d7f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       482	trailer.c	FUNCTION_27	IF_2	IF_3	CALL_3
0x4000d81	           0xf97c2	                                 seta dl	       482	trailer.c	FUNCTION_27	IF_2	IF_3	CALL_3
0x4000d84	           0xf92c0	                                 setb al	       482	trailer.c	FUNCTION_27	IF_2	IF_3	CALL_3
0x4000d87	            0x38c2	                              cmp dl, al	       482	trailer.c	FUNCTION_27	IF_2	IF_3	CALL_3
0x4000d89	            0x7541	                           jne 0x4000dcc	       482	trailer.c	FUNCTION_27	IF_2	IF_3	CALL_3
0x4000d8b	          0x4c89e6	                            mov rsi, r12	       483	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_4
0x4000d8e	      0xbf00000000	                              mov edi, 0	       483	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_4
0x4000d93	      0xe800000000	                          call 0x4000d98	       483	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_4
0x4000d98	            0x85c0	                           test eax, eax	       483	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_4
0x4000d9a	     0xf891f010000	                           jns 0x4000ebf	       483	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_4
0x4000da0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4000da5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4000daa	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4000daf	      0xe800000000	                          call 0x4000db4	        54	gettext.h	FUNCTION_93
0x4000db4	          0x4889ea	                            mov rdx, rbp	       485	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_6
0x4000db7	          0x4c89e6	                            mov rsi, r12	       485	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_6
0x4000dba	          0x4889c7	                            mov rdi, rax	       485	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_6
0x4000dbd	      0xb800000000	                              mov eax, 0	       485	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_6
0x4000dc2	      0xe800000000	                          call 0x4000dc7	       485	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_6
0x4000dc7	      0xe9f3000000	                           jmp 0x4000ebf	       485	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_6
0x4000dcc	      0xbf00000000	                              mov edi, 0	       487	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_7
0x4000dd1	      0xb909000000	                              mov ecx, 9	       487	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_7
0x4000dd6	          0x4889de	                            mov rsi, rbx	       487	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_7
0x4000dd9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       487	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_7
0x4000ddb	           0xf97c2	                                 seta dl	       487	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_7
0x4000dde	           0xf92c0	                                 setb al	       487	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_7
0x4000de1	            0x38c2	                              cmp dl, al	       487	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_7
0x4000de3	            0x7541	                           jne 0x4000e26	       487	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_7
0x4000de5	          0x4c89e6	                            mov rsi, r12	       488	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_8
0x4000de8	      0xbf00000000	                              mov edi, 0	       488	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_8
0x4000ded	      0xe800000000	                          call 0x4000df2	       488	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_8
0x4000df2	            0x85c0	                           test eax, eax	       488	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_8
0x4000df4	     0xf89c5000000	                           jns 0x4000ebf	       488	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_8
0x4000dfa	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4000dff	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4000e04	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4000e09	      0xe800000000	                          call 0x4000e0e	        54	gettext.h	FUNCTION_93
0x4000e0e	          0x4889ea	                            mov rdx, rbp	       490	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_10
0x4000e11	          0x4c89e6	                            mov rsi, r12	       490	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_10
0x4000e14	          0x4889c7	                            mov rdi, rax	       490	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_10
0x4000e17	      0xb800000000	                              mov eax, 0	       490	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_10
0x4000e1c	      0xe800000000	                          call 0x4000e21	       490	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_10
0x4000e21	      0xe999000000	                           jmp 0x4000ebf	       490	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	IF_6	CALL_10
0x4000e26	      0xbf00000000	                              mov edi, 0	       492	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	CALL_11
0x4000e2b	      0xb90a000000	                            mov ecx, 0xa	       492	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	CALL_11
0x4000e30	          0x4889de	                            mov rsi, rbx	       492	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	CALL_11
0x4000e33	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       492	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	CALL_11
0x4000e35	           0xf97c2	                                 seta dl	       492	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	CALL_11
0x4000e38	           0xf92c0	                                 setb al	       492	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	CALL_11
0x4000e3b	            0x38c2	                              cmp dl, al	       492	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	CALL_11
0x4000e3d	            0x753a	                           jne 0x4000e79	       492	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	CALL_11
0x4000e3f	          0x4c89e6	                            mov rsi, r12	       493	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_12
0x4000e42	      0xbf00000000	                              mov edi, 0	       493	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_12
0x4000e47	      0xe800000000	                          call 0x4000e4c	       493	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_12
0x4000e4c	            0x85c0	                           test eax, eax	       493	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_12
0x4000e4e	            0x796f	                           jns 0x4000ebf	       493	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_12
0x4000e50	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4000e55	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4000e5a	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4000e5f	      0xe800000000	                          call 0x4000e64	        54	gettext.h	FUNCTION_93
0x4000e64	          0x4889ea	                            mov rdx, rbp	       495	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_14
0x4000e67	          0x4c89e6	                            mov rsi, r12	       495	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_14
0x4000e6a	          0x4889c7	                            mov rdi, rax	       495	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_14
0x4000e6d	      0xb800000000	                              mov eax, 0	       495	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_14
0x4000e72	      0xe800000000	                          call 0x4000e77	       495	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_14
0x4000e77	            0xeb46	                           jmp 0x4000ebf	       495	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	IF_8	CALL_14
0x4000e79	      0xbf00000000	                              mov edi, 0	       497	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_15
0x4000e7e	      0xb90b000000	                            mov ecx, 0xb	       497	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_15
0x4000e83	          0x4889de	                            mov rsi, rbx	       497	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_15
0x4000e86	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       497	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_15
0x4000e88	           0xf97c2	                                 seta dl	       497	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_15
0x4000e8b	           0xf92c0	                                 setb al	       497	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_15
0x4000e8e	            0x38c2	                              cmp dl, al	       497	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_15
0x4000e90	            0x752d	                           jne 0x4000ebf	       497	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_15
0x4000e92	          0x4c89e7	                            mov rdi, r12	       498	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_16
0x4000e95	      0xe800000000	                          call 0x4000e9a	       498	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_16
0x4000e9a	    0x488905000000	            mov qword [0x04000ea1], rax 	       498	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_16
0x4000ea1	            0xeb1c	                           jmp 0x4000ebf	       498	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_16
0x4000ea3	          0x4989f4	                            mov r12, rsi	       498	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_16
0x4000ea6	          0x4889fd	                            mov rbp, rdi	       498	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_16
0x4000ea9	      0xbe2e000000	                           mov esi, 0x2e	       480	trailer.c	FUNCTION_27	CALL_2
0x4000eae	          0x4889df	                            mov rdi, rbx	       480	trailer.c	FUNCTION_27	CALL_2
0x4000eb1	      0xe800000000	                          call 0x4000eb6	       480	trailer.c	FUNCTION_27	CALL_2
0x4000eb6	          0x4885c0	                           test rax, rax	       481	trailer.c	FUNCTION_27	IF_2
0x4000eb9	     0xf84b3feffff	                            je 0x4000d72	       481	trailer.c	FUNCTION_27	IF_2
0x4000ebf	      0xb800000000	                              mov eax, 0	       502	trailer.c	FUNCTION_27
0x4000ec4	              0x5b	                                 pop rbx	       502	trailer.c	FUNCTION_27
0x4000ec5	              0x5d	                                 pop rbp	       502	trailer.c	FUNCTION_27
0x4000ec6	            0x415c	                                 pop r12	       502	trailer.c	FUNCTION_27
0x4000ec8	              0xc3	                                     ret	       502	trailer.c	FUNCTION_27
same_trailer	IF,0:DO,0:functions,0:SWITCH,0:CALL,2:WHILE,0:FOR,0:ELSE,0	18
0x4000508	              0x55	                                push rbp	        99	trailer.c	FUNCTION_5
0x4000509	              0x53	                                push rbx	        99	trailer.c	FUNCTION_5
0x400050a	        0x4883ec08	                              sub rsp, 8	        99	trailer.c	FUNCTION_5
0x400050e	          0x4889fb	                            mov rbx, rdi	        99	trailer.c	FUNCTION_5
0x4000511	          0x4889f5	                            mov rbp, rsi	        99	trailer.c	FUNCTION_5
0x4000514	      0xe869ffffff	                     call sym.same_token	       100	trailer.c	FUNCTION_5	CALL_2
0x4000519	            0x85c0	                           test eax, eax	       100	trailer.c	FUNCTION_5	CALL_2
0x400051b	            0x7415	                            je 0x4000532	       100	trailer.c	FUNCTION_5	CALL_2
0x400051d	        0x488b7518	            mov rsi, qword [rbp + 0x18] 	        95	trailer.c	FUNCTION_4	CALL_1
0x4000521	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	        95	trailer.c	FUNCTION_4	CALL_1
0x4000525	      0xe800000000	                          call 0x400052a	        95	trailer.c	FUNCTION_4	CALL_1
0x400052a	            0x85c0	                           test eax, eax	       100	trailer.c	FUNCTION_5	CALL_2
0x400052c	           0xf94c0	                                 sete al	       100	trailer.c	FUNCTION_5	CALL_2
0x400052f	           0xfb6c0	                           movzx eax, al	       100	trailer.c	FUNCTION_5	CALL_2
0x4000532	        0x4883c408	                              add rsp, 8	       101	trailer.c	FUNCTION_5
0x4000536	              0x5b	                                 pop rbx	       101	trailer.c	FUNCTION_5
0x4000537	              0x5d	                                 pop rbp	       101	trailer.c	FUNCTION_5
0x4000538	              0xc3	                                     ret	       101	trailer.c	FUNCTION_5
token_len_without_separator	IF,0:DO,0:functions,0:SWITCH,0:CALL,0:WHILE,1:FOR,0:ELSE,0	18
0x4000040	          0x4885f6	                           test rsi, rsi	        74	trailer.c	FUNCTION_2	WHILE_1
0x4000043	            0x7432	                            je 0x4000077	        74	trailer.c	FUNCTION_2	WHILE_1
0x4000045	        0x488d46ff	                      lea rax, [rsi - 1]	        74	trailer.c	FUNCTION_2	WHILE_1
0x4000049	       0xfb65437ff	         movzx edx, byte [rdi + rsi - 1]	        74	trailer.c	FUNCTION_2	WHILE_1
0x400004e	    0xf68200000000	                      test byte [rdx], 6	        74	trailer.c	FUNCTION_2	WHILE_1
0x4000055	            0x7419	                            je 0x4000070	        74	trailer.c	FUNCTION_2	WHILE_1
0x4000057	          0x4889f0	                            mov rax, rsi	        74	trailer.c	FUNCTION_2	WHILE_1
0x400005a	              0xc3	                                     ret	        74	trailer.c	FUNCTION_2	WHILE_1
0x400005b	        0x488d48ff	                      lea rcx, [rax - 1]	        74	trailer.c	FUNCTION_2	WHILE_1
0x400005f	       0xfb65407ff	         movzx edx, byte [rdi + rax - 1]	        74	trailer.c	FUNCTION_2	WHILE_1
0x4000064	    0xf68200000000	                      test byte [rdx], 6	        74	trailer.c	FUNCTION_2	WHILE_1
0x400006b	            0x750d	                           jne 0x400007a	        74	trailer.c	FUNCTION_2	WHILE_1
0x400006d	          0x4889c8	                            mov rax, rcx	        74	trailer.c	FUNCTION_2	WHILE_1
0x4000070	          0x4885c0	                           test rax, rax	        74	trailer.c	FUNCTION_2	WHILE_1
0x4000073	            0x75e6	                           jne 0x400005b	        74	trailer.c	FUNCTION_2	WHILE_1
0x4000075	            0xf3c3	                                     ret	        74	trailer.c	FUNCTION_2	WHILE_1
0x4000077	          0x4889f0	                            mov rax, rsi	        74	trailer.c	FUNCTION_2	WHILE_1
0x400007a	            0xf3c3	                                     ret	        77	trailer.c	FUNCTION_2
ensure_configured	IF,1:DO,0:functions,0:SWITCH,0:CALL,2:WHILE,0:FOR,0:ELSE,0	15
0x40000c1	    0x833d00000000	               cmp dword [0x040000c8], 0	       567	trailer.c	FUNCTION_29	IF_1
0x40000c8	            0x754e	                           jne 0x4000118	       567	trailer.c	FUNCTION_29	IF_1
0x40000ca	        0x4883ec08	                              sub rsp, 8	       566	trailer.c	FUNCTION_29
0x40000ce	    0xc70500000000	               mov dword [0x040000d8], 1	       571	trailer.c	FUNCTION_29
0x40000d8	    0xc70500000000	               mov dword [0x040000e2], 1	       572	trailer.c	FUNCTION_29
0x40000e2	    0xc70500000000	               mov dword [0x040000ec], 1	       573	trailer.c	FUNCTION_29
0x40000ec	      0xbe00000000	                              mov esi, 0	       574	trailer.c	FUNCTION_29	CALL_1
0x40000f1	      0xbf00000000	                              mov edi, 0	       574	trailer.c	FUNCTION_29	CALL_1
0x40000f6	      0xe800000000	                          call 0x40000fb	       574	trailer.c	FUNCTION_29	CALL_1
0x40000fb	      0xbe00000000	                              mov esi, 0	       575	trailer.c	FUNCTION_29	CALL_2
0x4000100	      0xbf00000000	                              mov edi, 0	       575	trailer.c	FUNCTION_29	CALL_2
0x4000105	      0xe800000000	                          call 0x400010a	       575	trailer.c	FUNCTION_29	CALL_2
0x400010a	    0xc70500000000	               mov dword [0x04000114], 1	       576	trailer.c	FUNCTION_29
0x4000114	        0x4883c408	                              add rsp, 8	       577	trailer.c	FUNCTION_29
0x4000118	            0xf3c3	                                     ret	       577	trailer.c	FUNCTION_29
unfold_value	IF,1:DO,0:functions,0:SWITCH,0:CALL,6:WHILE,2:FOR,0:ELSE,1	100
0x4000788	            0x4154	                                push r12	       916	trailer.c	FUNCTION_44
0x400078a	              0x55	                                push rbp	       916	trailer.c	FUNCTION_44
0x400078b	              0x53	                                push rbx	       916	trailer.c	FUNCTION_44
0x400078c	        0x4883ec40	                           sub rsp, 0x40	       916	trailer.c	FUNCTION_44
0x4000790	          0x4889fd	                            mov rbp, rdi	       916	trailer.c	FUNCTION_44
0x4000793	    0x64488b042528	                mov rax, qword fs:[0x28]	       916	trailer.c	FUNCTION_44
0x400079c	      0x4889442438	             mov qword [rsp + 0x38], rax	       916	trailer.c	FUNCTION_44
0x40007a1	            0x31c0	                            xor eax, eax	       916	trailer.c	FUNCTION_44
0x40007a3	    0x48c704240000	                      mov qword [rsp], 0	       917	trailer.c	FUNCTION_44
0x40007ab	    0x48c744240800	                  mov qword [rsp + 8], 0	       917	trailer.c	FUNCTION_44
0x40007b4	    0x48c744241000	               mov qword [rsp + 0x10], 0	       917	trailer.c	FUNCTION_44
0x40007bd	        0x488b7708	                mov rsi, qword [rdi + 8]	       920	trailer.c	FUNCTION_44	CALL_1
0x40007c1	          0x4889e7	                            mov rdi, rsp	       920	trailer.c	FUNCTION_44	CALL_1
0x40007c4	      0xe800000000	                          call 0x40007c9	       920	trailer.c	FUNCTION_44	CALL_1
0x40007c9	      0xb800000000	                              mov eax, 0	       921	trailer.c	FUNCTION_44
0x40007ce	      0xe9cf000000	                           jmp 0x40008a2	       922	trailer.c	FUNCTION_44	WHILE_1
0x40007d3	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	       923	trailer.c	FUNCTION_44	WHILE_1
0x40007d7	        0x488d5801	                      lea rbx, [rax + 1]	       923	trailer.c	FUNCTION_44	WHILE_1
0x40007db	      0x440fb62401	            movzx r12d, byte [rcx + rax]	       923	trailer.c	FUNCTION_44	WHILE_1
0x40007e0	        0x4180fc0a	                           cmp r12b, 0xa	       924	trailer.c	FUNCTION_44	WHILE_1	IF_1
0x40007e4	            0x7573	                           jne 0x4000859	       924	trailer.c	FUNCTION_44	WHILE_1	IF_1
0x40007e6	          0x4839da	                            cmp rdx, rbx	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x40007e9	            0x7623	                           jbe 0x400080e	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x40007eb	         0xfb60419	             movzx eax, byte [rcx + rbx]	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x40007ef	    0xf68000000000	                      test byte [rax], 1	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x40007f6	            0x7416	                            je 0x400080e	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x40007f8	        0x4883c301	                              add rbx, 1	       927	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x40007fc	          0x4839da	                            cmp rdx, rbx	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x40007ff	            0x760d	                           jbe 0x400080e	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x4000801	         0xfb60419	             movzx eax, byte [rcx + rbx]	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x4000805	    0xf68000000000	                      test byte [rax], 1	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x400080c	            0x75ea	                           jne 0x40007f8	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x400080e	        0x488b0424	                    mov rax, qword [rsp]	       141	strbuf.h	FUNCTION_54
0x4000812	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_54
0x4000815	            0x740b	                            je 0x4000822	       141	strbuf.h	FUNCTION_54
0x4000817	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_56	IF_1	CALL_1
0x400081b	      0x4839442408	                cmp qword [rsp + 8], rax	       227	strbuf.h	FUNCTION_56	IF_1	CALL_1
0x4000820	            0x750d	                           jne 0x400082f	       227	strbuf.h	FUNCTION_56	IF_1	CALL_1
0x4000822	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_56	CALL_2
0x4000827	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_56	CALL_2
0x400082a	      0xe800000000	                          call 0x400082f	       228	strbuf.h	FUNCTION_56	CALL_2
0x400082f	      0x488b442408	                mov rax, qword [rsp + 8]	       229	strbuf.h	FUNCTION_56
0x4000834	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_56
0x4000838	      0x4889542408	                mov qword [rsp + 8], rdx	       229	strbuf.h	FUNCTION_56
0x400083d	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_56
0x4000842	        0xc6040220	              mov byte [rdx + rax], 0x20	       229	strbuf.h	FUNCTION_56
0x4000846	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_56
0x400084b	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_56
0x4000850	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_56
0x4000854	          0x4889d8	                            mov rax, rbx	       230	strbuf.h	FUNCTION_56
0x4000857	            0xeb49	                           jmp 0x40008a2	       230	strbuf.h	FUNCTION_56
0x4000859	        0x488b0424	                    mov rax, qword [rsp]	       141	strbuf.h	FUNCTION_54
0x400085d	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_54
0x4000860	            0x740b	                            je 0x400086d	       141	strbuf.h	FUNCTION_54
0x4000862	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_56	IF_1	CALL_1
0x4000866	      0x483b442408	                cmp rax, qword [rsp + 8]	       227	strbuf.h	FUNCTION_56	IF_1	CALL_1
0x400086b	            0x750d	                           jne 0x400087a	       227	strbuf.h	FUNCTION_56	IF_1	CALL_1
0x400086d	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_56	CALL_2
0x4000872	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_56	CALL_2
0x4000875	      0xe800000000	                          call 0x400087a	       228	strbuf.h	FUNCTION_56	CALL_2
0x400087a	      0x488b442408	                mov rax, qword [rsp + 8]	       229	strbuf.h	FUNCTION_56
0x400087f	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_56
0x4000883	      0x4889542408	                mov qword [rsp + 8], rdx	       229	strbuf.h	FUNCTION_56
0x4000888	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_56
0x400088d	        0x44882402	              mov byte [rdx + rax], r12b	       229	strbuf.h	FUNCTION_56
0x4000891	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_56
0x4000896	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_56
0x400089b	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_56
0x400089f	          0x4889d8	                            mov rax, rbx	       923	trailer.c	FUNCTION_44	WHILE_1
0x40008a2	        0x488b5508	                mov rdx, qword [rbp + 8]	       922	trailer.c	FUNCTION_44	WHILE_1
0x40008a6	          0x4839d0	                            cmp rax, rdx	       922	trailer.c	FUNCTION_44	WHILE_1
0x40008a9	     0xf8224ffffff	                            jb 0x40007d3	       922	trailer.c	FUNCTION_44	WHILE_1
0x40008af	          0x4889e7	                            mov rdi, rsp	       935	trailer.c	FUNCTION_44	CALL_4
0x40008b2	      0xe800000000	                          call 0x40008b7	       935	trailer.c	FUNCTION_44	CALL_4
0x40008b7	        0x488b0c24	                    mov rcx, qword [rsp]	        53	string3.h	FUNCTION_95	CALL_3
0x40008bb	      0x48894c2420	             mov qword [rsp + 0x20], rcx	        53	string3.h	FUNCTION_95	CALL_3
0x40008c0	      0x488b542408	                mov rdx, qword [rsp + 8]	        53	string3.h	FUNCTION_95	CALL_3
0x40008c5	      0x4889542428	             mov qword [rsp + 0x28], rdx	        53	string3.h	FUNCTION_95	CALL_3
0x40008ca	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_95	CALL_3
0x40008cf	      0x4889442430	             mov qword [rsp + 0x30], rax	        53	string3.h	FUNCTION_95	CALL_3
0x40008d4	        0x488b7500	                    mov rsi, qword [rbp]	        53	string3.h	FUNCTION_95	CALL_3
0x40008d8	        0x48893424	                    mov qword [rsp], rsi	        53	string3.h	FUNCTION_95	CALL_3
0x40008dc	        0x488b7508	                mov rsi, qword [rbp + 8]	        53	string3.h	FUNCTION_95	CALL_3
0x40008e0	      0x4889742408	                mov qword [rsp + 8], rsi	        53	string3.h	FUNCTION_95	CALL_3
0x40008e5	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	        53	string3.h	FUNCTION_95	CALL_3
0x40008e9	      0x4889742410	             mov qword [rsp + 0x10], rsi	        53	string3.h	FUNCTION_95	CALL_3
0x40008ee	        0x48894d00	                    mov qword [rbp], rcx	        53	string3.h	FUNCTION_95	CALL_3
0x40008f2	        0x48895508	                mov qword [rbp + 8], rdx	        53	string3.h	FUNCTION_95	CALL_3
0x40008f6	        0x48894510	            mov qword [rbp + 0x10], rax 	        53	string3.h	FUNCTION_95	CALL_3
0x40008fa	          0x4889e7	                            mov rdi, rsp	       939	trailer.c	FUNCTION_44	CALL_6
0x40008fd	      0xe800000000	                          call 0x4000902	       939	trailer.c	FUNCTION_44	CALL_6
0x4000902	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       940	trailer.c	FUNCTION_44
0x4000907	    0x644833042528	                xor rax, qword fs:[0x28]	       940	trailer.c	FUNCTION_44
0x4000910	            0x7405	                            je 0x4000917	       940	trailer.c	FUNCTION_44
0x4000912	      0xe800000000	                          call 0x4000917	       940	trailer.c	FUNCTION_44
0x4000917	        0x4883c440	                           add rsp, 0x40	       940	trailer.c	FUNCTION_44
0x400091b	              0x5b	                                 pop rbx	       940	trailer.c	FUNCTION_44
0x400091c	              0x5d	                                 pop rbp	       940	trailer.c	FUNCTION_44
0x400091d	            0x415c	                                 pop r12	       940	trailer.c	FUNCTION_44
0x400091f	              0xc3	                                     ret	       940	trailer.c	FUNCTION_44
trailer_set_if_missing	IF,3:DO,0:functions,0:SWITCH,0:CALL,2:WHILE,0:FOR,0:ELSE,3	28
0x4000a56	          0x4885f6	                           test rsi, rsi	       418	trailer.c	ELSE_6	FUNCTION_24	IF_1
0x4000a59	            0x750c	                           jne 0x4000a67	       418	trailer.c	ELSE_6	FUNCTION_24	IF_1
0x4000a5b	    0xc70700000000	                      mov dword [rdi], 0	       419	trailer.c	ELSE_6	FUNCTION_24	IF_1
0x4000a61	      0xb800000000	                              mov eax, 0	       426	trailer.c	ELSE_6	FUNCTION_24	ELSE_3
0x4000a66	              0xc3	                                     ret	       427	trailer.c	ELSE_6	FUNCTION_24	ELSE_3
0x4000a67	              0x55	                                push rbp	       417	trailer.c	ELSE_6	FUNCTION_24
0x4000a68	              0x53	                                push rbx	       417	trailer.c	ELSE_6	FUNCTION_24
0x4000a69	        0x4883ec08	                              sub rsp, 8	       417	trailer.c	ELSE_6	FUNCTION_24
0x4000a6d	          0x4889f3	                            mov rbx, rsi	       417	trailer.c	ELSE_6	FUNCTION_24
0x4000a70	          0x4889fd	                            mov rbp, rdi	       417	trailer.c	ELSE_6	FUNCTION_24
0x4000a73	      0xbf00000000	                              mov edi, 0	       420	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2	CALL_1
0x4000a78	      0xe800000000	                          call 0x4000a7d	       420	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2	CALL_1
0x4000a7d	            0x85c0	                           test eax, eax	       420	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2	CALL_1
0x4000a7f	            0x7509	                           jne 0x4000a8a	       420	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2	CALL_1
0x4000a81	    0xc74500020000	                      mov dword [rbp], 2	       421	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2
0x4000a88	            0xeb1f	                           jmp 0x4000aa9	       421	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2
0x4000a8a	          0x4889de	                            mov rsi, rbx	       422	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3	CALL_2
0x4000a8d	      0xbf00000000	                              mov edi, 0	       422	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3	CALL_2
0x4000a92	      0xe800000000	                          call 0x4000a97	       422	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3	CALL_2
0x4000a97	            0x85c0	                           test eax, eax	       422	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3	CALL_2
0x4000a99	            0x7509	                           jne 0x4000aa4	       422	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3	CALL_2
0x4000a9b	    0xc74500010000	                      mov dword [rbp], 1	       423	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3
0x4000aa2	            0xeb05	                           jmp 0x4000aa9	       423	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3
0x4000aa4	      0xb8ffffffff	                     mov eax, 0xffffffff	       425	trailer.c	ELSE_6	FUNCTION_24	ELSE_3
0x4000aa9	        0x4883c408	                              add rsp, 8	       427	trailer.c	ELSE_6	FUNCTION_24	ELSE_3
0x4000aad	              0x5b	                                 pop rbx	       427	trailer.c	ELSE_6	FUNCTION_24	ELSE_3
0x4000aae	              0x5d	                                 pop rbp	       427	trailer.c	ELSE_6	FUNCTION_24	ELSE_3
0x4000aaf	              0xc3	                                     ret	       427	trailer.c	ELSE_6	FUNCTION_24	ELSE_3
free_arg_item	IF,0:DO,0:functions,0:SWITCH,0:CALL,6:WHILE,0:FOR,0:ELSE,0	16
0x400011a	              0x53	                                push rbx	       126	trailer.c	FUNCTION_9
0x400011b	          0x4889fb	                            mov rbx, rdi	       126	trailer.c	FUNCTION_9
0x400011e	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	       127	trailer.c	FUNCTION_9	CALL_1
0x4000122	      0xe800000000	                          call 0x4000127	       127	trailer.c	FUNCTION_9	CALL_1
0x4000127	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       128	trailer.c	FUNCTION_9	CALL_2
0x400012b	      0xe800000000	                          call 0x4000130	       128	trailer.c	FUNCTION_9	CALL_2
0x4000130	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	       129	trailer.c	FUNCTION_9	CALL_3
0x4000134	      0xe800000000	                          call 0x4000139	       129	trailer.c	FUNCTION_9	CALL_3
0x4000139	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       130	trailer.c	FUNCTION_9	CALL_4
0x400013d	      0xe800000000	                          call 0x4000142	       130	trailer.c	FUNCTION_9	CALL_4
0x4000142	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       131	trailer.c	FUNCTION_9	CALL_5
0x4000146	      0xe800000000	                          call 0x400014b	       131	trailer.c	FUNCTION_9	CALL_5
0x400014b	          0x4889df	                            mov rdi, rbx	       132	trailer.c	FUNCTION_9	CALL_6
0x400014e	      0xe800000000	                          call 0x4000153	       132	trailer.c	FUNCTION_9	CALL_6
0x4000153	              0x5b	                                 pop rbx	       133	trailer.c	FUNCTION_9
0x4000154	              0xc3	                                     ret	       133	trailer.c	FUNCTION_9
last_line	IF,3:DO,0:functions,0:SWITCH,0:CALL,0:WHILE,0:FOR,1:ELSE,0	25
0x400007c	          0x4885f6	                           test rsi, rsi	       769	trailer.c	FUNCTION_39	IF_1
0x400007f	            0x742e	                            je 0x40000af	       769	trailer.c	FUNCTION_39	IF_1
0x4000081	        0x4883fe01	                              cmp rsi, 1	       771	trailer.c	FUNCTION_39	IF_2
0x4000085	            0x742e	                            je 0x40000b5	       771	trailer.c	FUNCTION_39	IF_2
0x4000087	          0x83ee02	                              sub esi, 2	       780	trailer.c	FUNCTION_39	FOR_1
0x400008a	            0x782f	                            js 0x40000bb	       780	trailer.c	FUNCTION_39	FOR_1
0x400008c	          0x4863c6	                         movsxd rax, esi	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x400008f	        0x803c070a	               cmp byte [rdi + rax], 0xa	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4000093	            0x750f	                           jne 0x40000a4	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4000095	            0xeb09	                           jmp 0x40000a0	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4000097	          0x4863c6	                         movsxd rax, esi	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x400009a	        0x803c070a	               cmp byte [rdi + rax], 0xa	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x400009e	            0x7504	                           jne 0x40000a4	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40000a0	          0x8d4601	                      lea eax, [rsi + 1]	       782	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40000a3	              0xc3	                                     ret	       782	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40000a4	          0x83ee01	                              sub esi, 1	       780	trailer.c	FUNCTION_39	FOR_1
0x40000a7	            0x79ee	                           jns 0x4000097	       780	trailer.c	FUNCTION_39	FOR_1
0x40000a9	      0xb800000000	                              mov eax, 0	       784	trailer.c	FUNCTION_39
0x40000ae	              0xc3	                                     ret	       784	trailer.c	FUNCTION_39
0x40000af	      0xb8ffffffff	                     mov eax, 0xffffffff	       770	trailer.c	FUNCTION_39	IF_1
0x40000b4	              0xc3	                                     ret	       770	trailer.c	FUNCTION_39	IF_1
0x40000b5	      0xb800000000	                              mov eax, 0	       772	trailer.c	FUNCTION_39	IF_2
0x40000ba	              0xc3	                                     ret	       772	trailer.c	FUNCTION_39	IF_2
0x40000bb	      0xb800000000	                              mov eax, 0	       784	trailer.c	FUNCTION_39
0x40000c0	              0xc3	                                     ret	       785	trailer.c	FUNCTION_39
same_token	IF,1:DO,0:functions,0:SWITCH,0:CALL,5:WHILE,0:FOR,0:ELSE,0	46
0x4000482	            0x4156	                                push r14	        80	trailer.c	FUNCTION_3
0x4000484	            0x4155	                                push r13	        80	trailer.c	FUNCTION_3
0x4000486	            0x4154	                                push r12	        80	trailer.c	FUNCTION_3
0x4000488	              0x55	                                push rbp	        80	trailer.c	FUNCTION_3
0x4000489	              0x53	                                push rbx	        80	trailer.c	FUNCTION_3
0x400048a	        0x488b6f10	            mov rbp, qword [rdi + 0x10] 	        83	trailer.c	FUNCTION_3	IF_1
0x400048e	          0x4885ed	                           test rbp, rbp	        83	trailer.c	FUNCTION_3	IF_1
0x4000491	            0x7467	                            je 0x40004fa	        83	trailer.c	FUNCTION_3	IF_1
0x4000493	          0x4989f5	                            mov r13, rsi	        83	trailer.c	FUNCTION_3	IF_1
0x4000496	    0x49c7c6ffffff	             mov r14, 0xffffffffffffffff	        86	trailer.c	FUNCTION_3	CALL_2
0x400049d	      0xbb00000000	                              mov ebx, 0	        86	trailer.c	FUNCTION_3	CALL_2
0x40004a2	          0x4c89f1	                            mov rcx, r14	        86	trailer.c	FUNCTION_3	CALL_2
0x40004a5	          0x4889ef	                            mov rdi, rbp	        86	trailer.c	FUNCTION_3	CALL_2
0x40004a8	            0x89d8	                            mov eax, ebx	        86	trailer.c	FUNCTION_3	CALL_2
0x40004aa	            0xf2ae	              repne scasb al, byte [rdi]	        86	trailer.c	FUNCTION_3	CALL_2
0x40004ac	          0x48f7d1	                                 not rcx	        86	trailer.c	FUNCTION_3	CALL_2
0x40004af	        0x4a8d3431	                    lea rsi, [rcx + r14]	        86	trailer.c	FUNCTION_3	CALL_2
0x40004b3	          0x4889ef	                            mov rdi, rbp	        86	trailer.c	FUNCTION_3	CALL_2
0x40004b6	      0xe885fbffff	    call sym.token_len_without_separator	        86	trailer.c	FUNCTION_3	CALL_2
0x40004bb	          0x4989c4	                            mov r12, rax	        86	trailer.c	FUNCTION_3	CALL_2
0x40004be	        0x4d8b6d10	            mov r13, qword [r13 + 0x10] 	        87	trailer.c	FUNCTION_3	CALL_4
0x40004c2	          0x4c89f1	                            mov rcx, r14	        87	trailer.c	FUNCTION_3	CALL_4
0x40004c5	          0x4c89ef	                            mov rdi, r13	        87	trailer.c	FUNCTION_3	CALL_4
0x40004c8	            0x89d8	                            mov eax, ebx	        87	trailer.c	FUNCTION_3	CALL_4
0x40004ca	            0xf2ae	              repne scasb al, byte [rdi]	        87	trailer.c	FUNCTION_3	CALL_4
0x40004cc	          0x48f7d1	                                 not rcx	        87	trailer.c	FUNCTION_3	CALL_4
0x40004cf	        0x4a8d3431	                    lea rsi, [rcx + r14]	        87	trailer.c	FUNCTION_3	CALL_4
0x40004d3	          0x4c89ef	                            mov rdi, r13	        87	trailer.c	FUNCTION_3	CALL_4
0x40004d6	      0xe865fbffff	    call sym.token_len_without_separator	        87	trailer.c	FUNCTION_3	CALL_4
0x40004db	          0x4939c4	                            cmp r12, rax	        90	trailer.c	FUNCTION_3	CALL_5
0x40004de	        0x490f46c4	                         cmovbe rax, r12	        90	trailer.c	FUNCTION_3	CALL_5
0x40004e2	          0x4889c2	                            mov rdx, rax	        90	trailer.c	FUNCTION_3	CALL_5
0x40004e5	          0x4c89ee	                            mov rsi, r13	        90	trailer.c	FUNCTION_3	CALL_5
0x40004e8	          0x4889ef	                            mov rdi, rbp	        90	trailer.c	FUNCTION_3	CALL_5
0x40004eb	      0xe800000000	                          call 0x40004f0	        90	trailer.c	FUNCTION_3	CALL_5
0x40004f0	            0x85c0	                           test eax, eax	        90	trailer.c	FUNCTION_3	CALL_5
0x40004f2	           0xf94c0	                                 sete al	        90	trailer.c	FUNCTION_3	CALL_5
0x40004f5	           0xfb6c0	                           movzx eax, al	        90	trailer.c	FUNCTION_3	CALL_5
0x40004f8	            0xeb05	                           jmp 0x40004ff	        90	trailer.c	FUNCTION_3	CALL_5
0x40004fa	      0xb800000000	                              mov eax, 0	        84	trailer.c	FUNCTION_3	IF_1
0x40004ff	              0x5b	                                 pop rbx	        91	trailer.c	FUNCTION_3
0x4000500	              0x5d	                                 pop rbp	        91	trailer.c	FUNCTION_3
0x4000501	            0x415c	                                 pop r12	        91	trailer.c	FUNCTION_3
0x4000503	            0x415d	                                 pop r13	        91	trailer.c	FUNCTION_3
0x4000505	            0x415e	                                 pop r14	        91	trailer.c	FUNCTION_3
0x4000507	              0xc3	                                     ret	        91	trailer.c	FUNCTION_3
trailer_info_release	IF,0:DO,0:functions,0:SWITCH,0:CALL,2:WHILE,0:FOR,1:ELSE,0	21
0x4001437	              0x55	                                push rbp	      1113	trailer.c	FUNCTION_50
0x4001438	              0x53	                                push rbx	      1113	trailer.c	FUNCTION_50
0x4001439	        0x4883ec08	                              sub rsp, 8	      1113	trailer.c	FUNCTION_50
0x400143d	          0x4889fd	                            mov rbp, rdi	      1113	trailer.c	FUNCTION_50
0x4001440	      0x48837f2000	               cmp qword [rdi + 0x20], 0	      1115	trailer.c	FUNCTION_50	FOR_1
0x4001445	            0x7423	                            je 0x400146a	      1115	trailer.c	FUNCTION_50	FOR_1
0x4001447	      0xb800000000	                              mov eax, 0	      1115	trailer.c	FUNCTION_50	FOR_1
0x400144c	      0xbb00000000	                              mov ebx, 0	      1115	trailer.c	FUNCTION_50	FOR_1
0x4001451	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	      1116	trailer.c	FUNCTION_50	CALL_1
0x4001455	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	      1116	trailer.c	FUNCTION_50	CALL_1
0x4001459	      0xe800000000	                          call 0x400145e	      1116	trailer.c	FUNCTION_50	CALL_1
0x400145e	          0x83c301	                              add ebx, 1	      1115	trailer.c	FUNCTION_50	FOR_1
0x4001461	          0x4863c3	                         movsxd rax, ebx	      1115	trailer.c	FUNCTION_50	FOR_1
0x4001464	        0x483b4520	            cmp rax, qword [rbp + 0x20] 	      1115	trailer.c	FUNCTION_50	FOR_1
0x4001468	            0x72e7	                            jb 0x4001451	      1115	trailer.c	FUNCTION_50	FOR_1
0x400146a	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	      1117	trailer.c	FUNCTION_50	CALL_2
0x400146e	      0xe800000000	                          call 0x4001473	      1117	trailer.c	FUNCTION_50	CALL_2
0x4001473	        0x4883c408	                              add rsp, 8	      1118	trailer.c	FUNCTION_50
0x4001477	              0x5b	                                 pop rbx	      1118	trailer.c	FUNCTION_50
0x4001478	              0x5d	                                 pop rbp	      1118	trailer.c	FUNCTION_50
0x4001479	              0xc3	                                     ret	      1118	trailer.c	FUNCTION_50
git_trailer_config	IF,9:DO,0:functions,0:SWITCH,1:CALL,22:WHILE,0:FOR,1:ELSE,0	167
0x4000ab0	            0x4157	                                push r15	       505	trailer.c	FUNCTION_28
0x4000ab2	            0x4156	                                push r14	       505	trailer.c	FUNCTION_28
0x4000ab4	            0x4155	                                push r13	       505	trailer.c	FUNCTION_28
0x4000ab6	            0x4154	                                push r12	       505	trailer.c	FUNCTION_28
0x4000ab8	              0x55	                                push rbp	       505	trailer.c	FUNCTION_28
0x4000ab9	              0x53	                                push rbx	       505	trailer.c	FUNCTION_28
0x4000aba	        0x4883ec08	                              sub rsp, 8	       505	trailer.c	FUNCTION_28
0x4000abe	          0x4889fb	                            mov rbx, rdi	       505	trailer.c	FUNCTION_28
0x4000ac1	      0xb800000000	                              mov eax, 0	       505	trailer.c	FUNCTION_28
0x4000ac6	           0xfb608	                   movzx ecx, byte [rax]	       484	git-compat-util.h	FUNCTION_70	DO_1	IF_1
0x4000ac9	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_70	DO_1	IF_1
0x4000acb	     0xf843f020000	                            je 0x4000d10	       484	git-compat-util.h	FUNCTION_70	DO_1	IF_1
0x4000ad1	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_70	DO_1
0x4000ad5	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_70	DO_1
0x4000ad9	          0x3a4bff	                  cmp cl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_70	DO_1
0x4000adc	            0x74e8	                            je 0x4000ac6	       488	git-compat-util.h	FUNCTION_70	DO_1
0x4000ade	      0xe952020000	                           jmp 0x4000d35	       488	git-compat-util.h	FUNCTION_70	DO_1
0x4000ae3	          0x4189ee	                           mov r14d, ebp	       488	git-compat-util.h	FUNCTION_70	DO_1
0x4000ae6	          0x4889e8	                            mov rax, rbp	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x4000ae9	        0x48c1e004	                              shl rax, 4	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x4000aed	    0x488bb8000000	                    mov rdi, qword [rax]	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x4000af4	          0x4c89fe	                            mov rsi, r15	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x4000af7	      0xe800000000	                          call 0x4000afc	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x4000afc	            0x85c0	                           test eax, eax	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x4000afe	            0x740f	                            je 0x4000b0f	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x4000b00	        0x4883c501	                              add rbp, 1	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x4000b04	        0x4883fd05	                              cmp rbp, 5	       521	trailer.c	FUNCTION_28	FOR_1
0x4000b08	            0x75d9	                           jne 0x4000ae3	       521	trailer.c	FUNCTION_28	FOR_1
0x4000b0a	      0xe926020000	                           jmp 0x4000d35	       521	trailer.c	FUNCTION_28	FOR_1
0x4000b0f	          0x4929df	                            sub r15, rbx	       524	trailer.c	FUNCTION_28	FOR_1	CALL_4
0x4000b12	        0x498d77ff	                      lea rsi, [r15 - 1]	       524	trailer.c	FUNCTION_28	FOR_1	CALL_4
0x4000b16	          0x4889df	                            mov rdi, rbx	       524	trailer.c	FUNCTION_28	FOR_1	CALL_4
0x4000b19	      0xe800000000	                          call 0x4000b1e	       524	trailer.c	FUNCTION_28	FOR_1	CALL_4
0x4000b1e	          0x4889c5	                            mov rbp, rax	       524	trailer.c	FUNCTION_28	FOR_1	CALL_4
0x4000b21	          0x4d63f6	                        movsxd r14, r14d	       525	trailer.c	FUNCTION_28	FOR_1
0x4000b24	        0x49c1e604	                              shl r14, 4	       525	trailer.c	FUNCTION_28	FOR_1
0x4000b28	    0x458bb6000000	                   mov r14d, dword [r14]	       525	trailer.c	FUNCTION_28	FOR_1
0x4000b2f	          0x4885c0	                           test rax, rax	       529	trailer.c	FUNCTION_28	IF_4
0x4000b32	     0xf84fd010000	                            je 0x4000d35	       529	trailer.c	FUNCTION_28	IF_4
0x4000b38	    0x488b1d000000	            mov rbx, qword [0x04000b3f] 	       443	trailer.c	FUNCTION_26
0x4000b3f	    0x4881fb000000	                              cmp rbx, 0	       443	trailer.c	FUNCTION_26
0x4000b46	            0x741c	                            je 0x4000b64	       443	trailer.c	FUNCTION_26
0x4000b48	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       445	trailer.c	FUNCTION_26	IF_1	CALL_1
0x4000b4c	          0x4889ee	                            mov rsi, rbp	       445	trailer.c	FUNCTION_26	IF_1	CALL_1
0x4000b4f	      0xe800000000	                          call 0x4000b54	       445	trailer.c	FUNCTION_26	IF_1	CALL_1
0x4000b54	            0x85c0	                           test eax, eax	       445	trailer.c	FUNCTION_26	IF_1	CALL_1
0x4000b56	            0x745b	                            je 0x4000bb3	       445	trailer.c	FUNCTION_26	IF_1	CALL_1
0x4000b58	          0x488b1b	                    mov rbx, qword [rbx]	       443	trailer.c	FUNCTION_26
0x4000b5b	    0x4881fb000000	                              cmp rbx, 0	       443	trailer.c	FUNCTION_26
0x4000b62	            0x75e4	                           jne 0x4000b48	       443	trailer.c	FUNCTION_26
0x4000b64	      0xbe01000000	                              mov esi, 1	       450	trailer.c	FUNCTION_26	CALL_2
0x4000b69	      0xbf48000000	                           mov edi, 0x48	       450	trailer.c	FUNCTION_26	CALL_2
0x4000b6e	      0xe800000000	                          call 0x4000b73	       450	trailer.c	FUNCTION_26	CALL_2
0x4000b73	          0x4889c3	                            mov rbx, rax	       450	trailer.c	FUNCTION_26	CALL_2
0x4000b76	        0x488d7820	                   lea rdi, [rax + 0x20]	       451	trailer.c	FUNCTION_26	CALL_3
0x4000b7a	      0xbe00000000	                              mov esi, 0	       451	trailer.c	FUNCTION_26	CALL_3
0x4000b7f	      0xe8d1f5ffff	                 call sym.duplicate_conf	       451	trailer.c	FUNCTION_26	CALL_3
0x4000b84	          0x4889ef	                            mov rdi, rbp	       452	trailer.c	FUNCTION_26	CALL_4
0x4000b87	      0xe800000000	                          call 0x4000b8c	       452	trailer.c	FUNCTION_26	CALL_4
0x4000b8c	        0x48894320	             mov qword [rbx + 0x20], rax	       452	trailer.c	FUNCTION_26	CALL_4
0x4000b90	    0x488b05000000	            mov rax, qword [0x04000b97] 	        63	list.h	FUNCTION_108
0x4000b97	          0x488918	                    mov qword [rax], rbx	        63	list.h	FUNCTION_108
0x4000b9a	    0x48c703000000	                      mov qword [rbx], 0	        64	list.h	FUNCTION_108
0x4000ba1	    0x488b05000000	            mov rax, qword [0x04000ba8] 	        65	list.h	FUNCTION_108
0x4000ba8	        0x48894308	                mov qword [rbx + 8], rax	        65	list.h	FUNCTION_108
0x4000bac	    0x48891d000000	            mov qword [0x04000bb3], rbx 	        66	list.h	FUNCTION_108
0x4000bb3	          0x4889ef	                            mov rdi, rbp	       534	trailer.c	FUNCTION_28	CALL_6
0x4000bb6	      0xe800000000	                          call 0x4000bbb	       534	trailer.c	FUNCTION_28	CALL_6
0x4000bbb	        0x4183fe04	                             cmp r14d, 4	       536	trailer.c	FUNCTION_28	SWITCH_1
0x4000bbf	     0xf8739010000	                            ja 0x4000cfe	       536	trailer.c	FUNCTION_28	SWITCH_1
0x4000bc5	          0x4589f6	                          mov r14d, r14d	       536	trailer.c	FUNCTION_28	SWITCH_1
0x4000bc8	    0x42ff24f50000	                       jmp qword [r14*8]	       536	trailer.c	FUNCTION_28	SWITCH_1
0x4000bd0	      0x48837b2800	               cmp qword [rbx + 0x28], 0	       538	trailer.c	FUNCTION_28	SWITCH_1	IF_5
0x4000bd5	            0x7424	                            je 0x4000bfb	       538	trailer.c	FUNCTION_28	SWITCH_1	IF_5
0x4000bd7	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4000bdc	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4000be1	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4000be6	      0xe800000000	                          call 0x4000beb	        54	gettext.h	FUNCTION_93
0x4000beb	          0x4c89e6	                            mov rsi, r12	       539	trailer.c	FUNCTION_28	SWITCH_1	CALL_8
0x4000bee	          0x4889c7	                            mov rdi, rax	       539	trailer.c	FUNCTION_28	SWITCH_1	CALL_8
0x4000bf1	      0xb800000000	                              mov eax, 0	       539	trailer.c	FUNCTION_28	SWITCH_1	CALL_8
0x4000bf6	      0xe800000000	                          call 0x4000bfb	       539	trailer.c	FUNCTION_28	SWITCH_1	CALL_8
0x4000bfb	          0x4c89ef	                            mov rdi, r13	       540	trailer.c	FUNCTION_28	SWITCH_1	CALL_9
0x4000bfe	      0xe800000000	                          call 0x4000c03	       540	trailer.c	FUNCTION_28	SWITCH_1	CALL_9
0x4000c03	        0x48894328	             mov qword [rbx + 0x28], rax	       540	trailer.c	FUNCTION_28	SWITCH_1	CALL_9
0x4000c07	      0xe929010000	                           jmp 0x4000d35	       541	trailer.c	FUNCTION_28	SWITCH_1
0x4000c0c	      0x48837b3000	               cmp qword [rbx + 0x30], 0	       543	trailer.c	FUNCTION_28	SWITCH_1	IF_6
0x4000c11	            0x7424	                            je 0x4000c37	       543	trailer.c	FUNCTION_28	SWITCH_1	IF_6
0x4000c13	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4000c18	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4000c1d	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4000c22	      0xe800000000	                          call 0x4000c27	        54	gettext.h	FUNCTION_93
0x4000c27	          0x4c89e6	                            mov rsi, r12	       544	trailer.c	FUNCTION_28	SWITCH_1	CALL_11
0x4000c2a	          0x4889c7	                            mov rdi, rax	       544	trailer.c	FUNCTION_28	SWITCH_1	CALL_11
0x4000c2d	      0xb800000000	                              mov eax, 0	       544	trailer.c	FUNCTION_28	SWITCH_1	CALL_11
0x4000c32	      0xe800000000	                          call 0x4000c37	       544	trailer.c	FUNCTION_28	SWITCH_1	CALL_11
0x4000c37	          0x4c89ef	                            mov rdi, r13	       545	trailer.c	FUNCTION_28	SWITCH_1	CALL_12
0x4000c3a	      0xe800000000	                          call 0x4000c3f	       545	trailer.c	FUNCTION_28	SWITCH_1	CALL_12
0x4000c3f	        0x48894330	             mov qword [rbx + 0x30], rax	       545	trailer.c	FUNCTION_28	SWITCH_1	CALL_12
0x4000c43	      0xe9ed000000	                           jmp 0x4000d35	       546	trailer.c	FUNCTION_28	SWITCH_1
0x4000c48	        0x488d7b38	                   lea rdi, [rbx + 0x38]	       548	trailer.c	FUNCTION_28	SWITCH_1	IF_7	CALL_13
0x4000c4c	          0x4c89ee	                            mov rsi, r13	       548	trailer.c	FUNCTION_28	SWITCH_1	IF_7	CALL_13
0x4000c4f	      0xe800000000	                          call 0x4000c54	       548	trailer.c	FUNCTION_28	SWITCH_1	IF_7	CALL_13
0x4000c54	            0x85c0	                           test eax, eax	       548	trailer.c	FUNCTION_28	SWITCH_1	IF_7	CALL_13
0x4000c56	     0xf84d9000000	                            je 0x4000d35	       548	trailer.c	FUNCTION_28	SWITCH_1	IF_7	CALL_13
0x4000c5c	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4000c61	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4000c66	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4000c6b	      0xe800000000	                          call 0x4000c70	        54	gettext.h	FUNCTION_93
0x4000c70	          0x4c89e2	                            mov rdx, r12	       549	trailer.c	FUNCTION_28	SWITCH_1	CALL_15
0x4000c73	          0x4c89ee	                            mov rsi, r13	       549	trailer.c	FUNCTION_28	SWITCH_1	CALL_15
0x4000c76	          0x4889c7	                            mov rdi, rax	       549	trailer.c	FUNCTION_28	SWITCH_1	CALL_15
0x4000c79	      0xb800000000	                              mov eax, 0	       549	trailer.c	FUNCTION_28	SWITCH_1	CALL_15
0x4000c7e	      0xe800000000	                          call 0x4000c83	       549	trailer.c	FUNCTION_28	SWITCH_1	CALL_15
0x4000c83	      0xe9ad000000	                           jmp 0x4000d35	       549	trailer.c	FUNCTION_28	SWITCH_1	CALL_15
0x4000c88	        0x488d7b3c	                   lea rdi, [rbx + 0x3c]	       552	trailer.c	FUNCTION_28	SWITCH_1	IF_8	CALL_16
0x4000c8c	          0x4c89ee	                            mov rsi, r13	       552	trailer.c	FUNCTION_28	SWITCH_1	IF_8	CALL_16
0x4000c8f	      0xe800000000	                          call 0x4000c94	       552	trailer.c	FUNCTION_28	SWITCH_1	IF_8	CALL_16
0x4000c94	            0x85c0	                           test eax, eax	       552	trailer.c	FUNCTION_28	SWITCH_1	IF_8	CALL_16
0x4000c96	     0xf8499000000	                            je 0x4000d35	       552	trailer.c	FUNCTION_28	SWITCH_1	IF_8	CALL_16
0x4000c9c	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4000ca1	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4000ca6	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4000cab	      0xe800000000	                          call 0x4000cb0	        54	gettext.h	FUNCTION_93
0x4000cb0	          0x4c89e2	                            mov rdx, r12	       553	trailer.c	FUNCTION_28	SWITCH_1	CALL_18
0x4000cb3	          0x4c89ee	                            mov rsi, r13	       553	trailer.c	FUNCTION_28	SWITCH_1	CALL_18
0x4000cb6	          0x4889c7	                            mov rdi, rax	       553	trailer.c	FUNCTION_28	SWITCH_1	CALL_18
0x4000cb9	      0xb800000000	                              mov eax, 0	       553	trailer.c	FUNCTION_28	SWITCH_1	CALL_18
0x4000cbe	      0xe800000000	                          call 0x4000cc3	       553	trailer.c	FUNCTION_28	SWITCH_1	CALL_18
0x4000cc3	            0xeb70	                           jmp 0x4000d35	       553	trailer.c	FUNCTION_28	SWITCH_1	CALL_18
0x4000cc5	        0x488d7b40	                   lea rdi, [rbx + 0x40]	       556	trailer.c	FUNCTION_28	SWITCH_1	IF_9	CALL_19
0x4000cc9	          0x4c89ee	                            mov rsi, r13	       556	trailer.c	FUNCTION_28	SWITCH_1	IF_9	CALL_19
0x4000ccc	      0xe800000000	                          call 0x4000cd1	       556	trailer.c	FUNCTION_28	SWITCH_1	IF_9	CALL_19
0x4000cd1	            0x85c0	                           test eax, eax	       556	trailer.c	FUNCTION_28	SWITCH_1	IF_9	CALL_19
0x4000cd3	            0x7460	                            je 0x4000d35	       556	trailer.c	FUNCTION_28	SWITCH_1	IF_9	CALL_19
0x4000cd5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4000cda	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4000cdf	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4000ce4	      0xe800000000	                          call 0x4000ce9	        54	gettext.h	FUNCTION_93
0x4000ce9	          0x4c89e2	                            mov rdx, r12	       557	trailer.c	FUNCTION_28	SWITCH_1	CALL_21
0x4000cec	          0x4c89ee	                            mov rsi, r13	       557	trailer.c	FUNCTION_28	SWITCH_1	CALL_21
0x4000cef	          0x4889c7	                            mov rdi, rax	       557	trailer.c	FUNCTION_28	SWITCH_1	CALL_21
0x4000cf2	      0xb800000000	                              mov eax, 0	       557	trailer.c	FUNCTION_28	SWITCH_1	CALL_21
0x4000cf7	      0xe800000000	                          call 0x4000cfc	       557	trailer.c	FUNCTION_28	SWITCH_1	CALL_21
0x4000cfc	            0xeb37	                           jmp 0x4000d35	       557	trailer.c	FUNCTION_28	SWITCH_1	CALL_21
0x4000cfe	          0x4489f6	                           mov esi, r14d	       560	trailer.c	FUNCTION_28	SWITCH_1	CALL_22
0x4000d01	      0xbf00000000	                              mov edi, 0	       560	trailer.c	FUNCTION_28	SWITCH_1	CALL_22
0x4000d06	      0xb800000000	                              mov eax, 0	       560	trailer.c	FUNCTION_28	SWITCH_1	CALL_22
0x4000d0b	      0xe800000000	                          call 0x4000d10	       560	trailer.c	FUNCTION_28	SWITCH_1	CALL_22
0x4000d10	          0x4989f5	                            mov r13, rsi	       560	trailer.c	FUNCTION_28	SWITCH_1	CALL_22
0x4000d13	          0x4989fc	                            mov r12, rdi	       560	trailer.c	FUNCTION_28	SWITCH_1	CALL_22
0x4000d16	      0xbe2e000000	                           mov esi, 0x2e	       516	trailer.c	FUNCTION_28	CALL_2
0x4000d1b	          0x4889df	                            mov rdi, rbx	       516	trailer.c	FUNCTION_28	CALL_2
0x4000d1e	      0xe800000000	                          call 0x4000d23	       516	trailer.c	FUNCTION_28	CALL_2
0x4000d23	        0x4c8d7801	                      lea r15, [rax + 1]	       520	trailer.c	FUNCTION_28
0x4000d27	      0xbd00000000	                              mov ebp, 0	       520	trailer.c	FUNCTION_28
0x4000d2c	          0x4885c0	                           test rax, rax	       517	trailer.c	FUNCTION_28	IF_2
0x4000d2f	     0xf85aefdffff	                           jne 0x4000ae3	       517	trailer.c	FUNCTION_28	IF_2
0x4000d35	      0xb800000000	                              mov eax, 0	       563	trailer.c	FUNCTION_28
0x4000d3a	        0x4883c408	                              add rsp, 8	       563	trailer.c	FUNCTION_28
0x4000d3e	              0x5b	                                 pop rbx	       563	trailer.c	FUNCTION_28
0x4000d3f	              0x5d	                                 pop rbp	       563	trailer.c	FUNCTION_28
0x4000d40	            0x415c	                                 pop r12	       563	trailer.c	FUNCTION_28
0x4000d42	            0x415d	                                 pop r13	       563	trailer.c	FUNCTION_28
0x4000d44	            0x415e	                                 pop r14	       563	trailer.c	FUNCTION_28
0x4000d46	            0x415f	                                 pop r15	       563	trailer.c	FUNCTION_28
0x4000d48	              0xc3	                                     ret	       563	trailer.c	FUNCTION_28
trailer_info_get	IF,1:DO,0:functions,0:SWITCH,0:CALL,15:WHILE,0:FOR,1:ELSE,0	360
0x4000ec9	            0x4157	                                push r15	      1070	trailer.c	FUNCTION_49
0x4000ecb	            0x4156	                                push r14	      1070	trailer.c	FUNCTION_49
0x4000ecd	            0x4155	                                push r13	      1070	trailer.c	FUNCTION_49
0x4000ecf	            0x4154	                                push r12	      1070	trailer.c	FUNCTION_49
0x4000ed1	              0x55	                                push rbp	      1070	trailer.c	FUNCTION_49
0x4000ed2	              0x53	                                push rbx	      1070	trailer.c	FUNCTION_49
0x4000ed3	        0x4883ec68	                           sub rsp, 0x68	      1070	trailer.c	FUNCTION_49
0x4000ed7	      0x48897c2438	             mov qword [rsp + 0x38], rdi	      1070	trailer.c	FUNCTION_49
0x4000edc	          0x4889f3	                            mov rbx, rsi	      1070	trailer.c	FUNCTION_49
0x4000edf	      0x4889742408	                mov qword [rsp + 8], rsi	      1070	trailer.c	FUNCTION_49
0x4000ee4	    0x64488b042528	                mov rax, qword fs:[0x28]	      1070	trailer.c	FUNCTION_49
0x4000eed	      0x4889442458	             mov qword [rsp + 0x58], rax	      1070	trailer.c	FUNCTION_49
0x4000ef2	            0x31c0	                            xor eax, eax	      1070	trailer.c	FUNCTION_49
0x4000ef4	      0xe8c8f1ffff	              call sym.ensure_configured	      1077	trailer.c	FUNCTION_49	CALL_1
0x4000ef9	          0x803b00	                       cmp byte [rbx], 0	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4000efc	            0x7429	                            je 0x4000f27	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4000efe	      0xbe00000000	                              mov esi, 0	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4000f03	          0x4889df	                            mov rdi, rbx	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4000f06	      0xe800000000	                          call 0x4000f0b	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4000f0b	            0x85c0	                           test eax, eax	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4000f0d	            0x7406	                            je 0x4000f15	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4000f0f	        0x2b5c2408	                sub ebx, dword [rsp + 8]	       797	trailer.c	FUNCTION_40	FOR_1	IF_1
0x4000f13	            0xeb1b	                           jmp 0x4000f30	       797	trailer.c	FUNCTION_40	FOR_1	IF_1
0x4000f15	          0x4889df	                            mov rdi, rbx	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4000f18	      0xe84cf8ffff	                      call sym.next_line	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4000f1d	          0x4889c3	                            mov rbx, rax	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4000f20	          0x803800	                       cmp byte [rax], 0	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4000f23	            0x75d9	                           jne 0x4000efe	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4000f25	            0xeb05	                           jmp 0x4000f2c	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4000f27	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4000f2c	        0x2b5c2408	                sub ebx, dword [rsp + 8]	       800	trailer.c	FUNCTION_40
0x4000f30	          0x4863f3	                         movsxd rsi, ebx	      1080	trailer.c	FUNCTION_49	CALL_3
0x4000f33	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	       904	trailer.c	FUNCTION_42	CALL_1
0x4000f38	          0x4c89ff	                            mov rdi, r15	       904	trailer.c	FUNCTION_42	CALL_1
0x4000f3b	      0xe800000000	                          call 0x4000f40	       904	trailer.c	FUNCTION_42	CALL_1
0x4000f40	            0x29c3	                            sub ebx, eax	       904	trailer.c	FUNCTION_42	CALL_1
0x4000f42	        0x895c2428	             mov dword [rsp + 0x28], ebx	       904	trailer.c	FUNCTION_42	CALL_1
0x4000f46	          0x4863eb	                         movsxd rbp, ebx	      1081	trailer.c	FUNCTION_49	CALL_4
0x4000f49	          0x4c89f8	                            mov rax, r15	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4000f4c	        0x498d3c2f	                    lea rdi, [r15 + rbp]	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4000f50	      0x48897c2430	             mov qword [rsp + 0x30], rdi	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4000f55	          0x4939ff	                            cmp r15, rdi	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4000f58	            0x735f	                           jae 0x4000fb9	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4000f5a	    0x440fb6250000	          movzx r12d, byte [0x04000f62] 	       823	trailer.c	FUNCTION_41	FOR_1	IF_1
0x4000f62	          0x4889fb	                            mov rbx, rdi	       823	trailer.c	FUNCTION_41	FOR_1	IF_1
0x4000f65	           0xfb610	                   movzx edx, byte [rax]	       823	trailer.c	FUNCTION_41	FOR_1	IF_1
0x4000f68	          0x4438e2	                            cmp dl, r12b	       823	trailer.c	FUNCTION_41	FOR_1	IF_1
0x4000f6b	            0x743d	                            je 0x4000faa	       823	trailer.c	FUNCTION_41	FOR_1	IF_1
0x4000f6d	            0x84d2	                             test dl, dl	       106	trailer.c	FUNCTION_6	WHILE_1
0x4000f6f	            0x7430	                            je 0x4000fa1	       106	trailer.c	FUNCTION_6	WHILE_1
0x4000f71	          0x80fa0a	                             cmp dl, 0xa	       106	trailer.c	FUNCTION_6	WHILE_1
0x4000f74	            0x742b	                            je 0x4000fa1	       106	trailer.c	FUNCTION_6	WHILE_1
0x4000f76	           0xfb6ca	                           movzx ecx, dl	       106	trailer.c	FUNCTION_6	WHILE_1
0x4000f79	    0xf68100000000	                      test byte [rcx], 1	       106	trailer.c	FUNCTION_6	WHILE_1
0x4000f80	            0x741f	                            je 0x4000fa1	       106	trailer.c	FUNCTION_6	WHILE_1
0x4000f82	          0x4889c1	                            mov rcx, rax	       106	trailer.c	FUNCTION_6	WHILE_1
0x4000f85	        0x4883c101	                              add rcx, 1	       107	trailer.c	FUNCTION_6	WHILE_1
0x4000f89	           0xfb611	                   movzx edx, byte [rcx]	       106	trailer.c	FUNCTION_6	WHILE_1
0x4000f8c	            0x84d2	                             test dl, dl	       106	trailer.c	FUNCTION_6	WHILE_1
0x4000f8e	            0x7411	                            je 0x4000fa1	       106	trailer.c	FUNCTION_6	WHILE_1
0x4000f90	          0x80fa0a	                             cmp dl, 0xa	       106	trailer.c	FUNCTION_6	WHILE_1
0x4000f93	            0x740c	                            je 0x4000fa1	       106	trailer.c	FUNCTION_6	WHILE_1
0x4000f95	           0xfb6f2	                           movzx esi, dl	       106	trailer.c	FUNCTION_6	WHILE_1
0x4000f98	    0xf68600000000	                      test byte [rsi], 1	       106	trailer.c	FUNCTION_6	WHILE_1
0x4000f9f	            0x75e4	                           jne 0x4000f85	       106	trailer.c	FUNCTION_6	WHILE_1
0x4000fa1	            0x84d2	                             test dl, dl	       825	trailer.c	FUNCTION_41	FOR_1	IF_2	CALL_2
0x4000fa3	            0x7419	                            je 0x4000fbe	       825	trailer.c	FUNCTION_41	FOR_1	IF_2	CALL_2
0x4000fa5	          0x80fa0a	                             cmp dl, 0xa	       825	trailer.c	FUNCTION_41	FOR_1	IF_2	CALL_2
0x4000fa8	            0x7414	                            je 0x4000fbe	       825	trailer.c	FUNCTION_41	FOR_1	IF_2	CALL_2
0x4000faa	          0x4889c7	                            mov rdi, rax	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4000fad	      0xe8b7f7ffff	                      call sym.next_line	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4000fb2	          0x4839d8	                            cmp rax, rbx	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4000fb5	            0x72ae	                            jb 0x4000f65	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4000fb7	            0xeb05	                           jmp 0x4000fbe	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4000fb9	      0x488b442408	                mov rax, qword [rsp + 8]	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4000fbe	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       828	trailer.c	FUNCTION_41
0x4000fc3	          0x4829f8	                            sub rax, rdi	       828	trailer.c	FUNCTION_41
0x4000fc6	          0x4889c3	                            mov rbx, rax	       828	trailer.c	FUNCTION_41
0x4000fc9	          0x4189c7	                           mov r15d, eax	       828	trailer.c	FUNCTION_41
0x4000fcc	          0x4889ee	                            mov rsi, rbp	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x4000fcf	          0x4889fd	                            mov rbp, rdi	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x4000fd2	      0xe8a5f0ffff	                      call sym.last_line	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x4000fd7	            0x39c3	                            cmp ebx, eax	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x4000fd9	     0xf8f1d020000	                            jg 0x40011fc	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x4000fdf	    0xc74424180000	               mov dword [rsp + 0x18], 0	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x4000fe7	    0xc74424200000	               mov dword [rsp + 0x20], 0	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x4000fef	      0xbb01000000	                              mov ebx, 1	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x4000ff4	    0x41bd00000000	                             mov r13d, 0	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x4000ffa	    0x41be00000000	                             mov r14d, 0	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x4001000	      0x44896c2410	            mov dword [rsp + 0x10], r13d	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x4001005	          0x4989ed	                            mov r13, rbp	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x4001008	          0x4c63e0	                         movsxd r12, eax	       839	trailer.c	FUNCTION_41	FOR_2
0x400100b	      0x4b8d6c2500	                    lea rbp, [r13 + r12]	       839	trailer.c	FUNCTION_41	FOR_2
0x4001010	         0xfb64500	                   movzx eax, byte [rbp]	       843	trailer.c	FUNCTION_41	FOR_2	IF_3
0x4001014	    0x3a0500000000	               cmp al, byte [0x0400101a]	       843	trailer.c	FUNCTION_41	FOR_2	IF_3
0x400101a	            0x7419	                            je 0x4001035	       843	trailer.c	FUNCTION_41	FOR_2	IF_3
0x400101c	            0x84c0	                             test al, al	       106	trailer.c	FUNCTION_6	WHILE_1
0x400101e	            0x7442	                            je 0x4001062	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001020	            0x3c0a	                             cmp al, 0xa	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001022	            0x743e	                            je 0x4001062	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001024	           0xfb6c8	                           movzx ecx, al	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001027	          0x4889ea	                            mov rdx, rbp	       106	trailer.c	FUNCTION_6	WHILE_1
0x400102a	    0xf68100000000	                      test byte [rcx], 1	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001031	            0x7514	                           jne 0x4001047	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001033	            0xeb2d	                           jmp 0x4001062	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001035	      0x4403742410	            add r14d, dword [rsp + 0x10]	       844	trailer.c	FUNCTION_41	FOR_2	IF_3
0x400103a	    0xc74424100000	               mov dword [rsp + 0x10], 0	       845	trailer.c	FUNCTION_41	FOR_2	IF_3
0x4001042	      0xe99b010000	                           jmp 0x40011e2	       845	trailer.c	FUNCTION_41	FOR_2	IF_3
0x4001047	        0x4883c201	                              add rdx, 1	       107	trailer.c	FUNCTION_6	WHILE_1
0x400104b	           0xfb602	                   movzx eax, byte [rdx]	       106	trailer.c	FUNCTION_6	WHILE_1
0x400104e	            0x84c0	                             test al, al	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001050	            0x7410	                            je 0x4001062	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001052	            0x3c0a	                             cmp al, 0xa	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001054	            0x740c	                            je 0x4001062	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001056	           0xfb6c8	                           movzx ecx, al	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001059	    0xf68100000000	                      test byte [rcx], 1	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001060	            0x75e5	                           jne 0x4001047	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001062	            0x84c0	                             test al, al	       848	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_5
0x4001064	            0x741a	                            je 0x4001080	       848	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_5
0x4001066	            0x3c0a	                             cmp al, 0xa	       848	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_5
0x4001068	            0x7416	                            je 0x4001080	       848	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_5
0x400106a	    0x488b35000000	            mov rsi, qword [0x04001071] 	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x4001071	      0xbb00000000	                              mov ebx, 0	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x4001076	          0x4885f6	                           test rsi, rsi	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x4001079	            0x755e	                           jne 0x40010d9	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x400107b	      0xe990000000	                           jmp 0x4001110	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x4001080	            0x85db	                           test ebx, ebx	       849	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_5
0x4001082	     0xf855a010000	                           jne 0x40011e2	       849	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_5
0x4001088	      0x448b6c2410	           mov r13d, dword [rsp + 0x10] 	       849	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_5
0x400108d	          0x4501f5	                          add r13d, r14d	       851	trailer.c	FUNCTION_41	FOR_2	IF_4
0x4001090	      0x837c242000	               cmp dword [rsp + 0x20], 0	       852	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x4001095	            0x741d	                            je 0x40010b4	       852	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x4001097	        0x8b442418	            mov eax, dword [rsp + 0x18] 	       852	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x400109b	          0x8d0440	                  lea eax, [rax + rax*2]	       852	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x400109e	          0x4139c5	                           cmp r13d, eax	       852	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x40010a1	            0x7f11	                            jg 0x40010b4	       852	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x40010a3	          0x4889ef	                            mov rdi, rbp	       854	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_6
0x40010a6	      0xe8bef6ffff	                      call sym.next_line	       854	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_6
0x40010ab	        0x2b442408	                sub eax, dword [rsp + 8]	       854	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_6
0x40010af	      0xe952010000	                           jmp 0x4001206	       854	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_6
0x40010b4	      0x837c241800	               cmp dword [rsp + 0x18], 0	       855	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40010b9	     0xf8443010000	                            je 0x4001202	       855	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40010bf	          0x4585ed	                         test r13d, r13d	       855	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40010c2	     0xf853a010000	                           jne 0x4001202	       855	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40010c8	          0x4889ef	                            mov rdi, rbp	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40010cb	      0xe899f6ffff	                      call sym.next_line	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40010d0	        0x2b442408	                sub eax, dword [rsp + 8]	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40010d4	      0xe92d010000	                           jmp 0x4001206	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40010d9	          0x4889ef	                            mov rdi, rbp	       862	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8	CALL_8
0x40010dc	      0xe800000000	                          call 0x40010e1	       862	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8	CALL_8
0x40010e1	            0x85c0	                           test eax, eax	       862	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8	CALL_8
0x40010e3	            0x741f	                            je 0x4001104	       862	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8	CALL_8
0x40010e5	      0x8344241801	               add dword [rsp + 0x18], 1	       863	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8
0x40010ea	    0xc74424100000	               mov dword [rsp + 0x10], 0	       864	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8
0x40010f2	    0xc74424200100	               mov dword [rsp + 0x20], 1	       865	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8
0x40010fa	      0xbb00000000	                              mov ebx, 0	       859	trailer.c	FUNCTION_41	FOR_2
0x40010ff	      0xe9de000000	                           jmp 0x40011e2	       859	trailer.c	FUNCTION_41	FOR_2
0x4001104	        0x4883c308	                              add rbx, 8	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x4001108	          0x488b33	                    mov rsi, qword [rbx]	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x400110b	          0x4885f6	                           test rsi, rsi	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x400110e	            0x75c9	                           jne 0x40010d9	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x4001110	    0x488b35000000	            mov rsi, qword [0x04001117] 	       870	trailer.c	FUNCTION_41	FOR_2	CALL_9
0x4001117	          0x4889ef	                            mov rdi, rbp	       870	trailer.c	FUNCTION_41	FOR_2	CALL_9
0x400111a	      0xe840f1ffff	                 call sym.find_separator	       870	trailer.c	FUNCTION_41	FOR_2	CALL_9
0x400111f	        0x8944242c	             mov dword [rsp + 0x2c], eax	       870	trailer.c	FUNCTION_41	FOR_2	CALL_9
0x4001123	            0x85c0	                           test eax, eax	       871	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001125	            0x7e57	                           jle 0x400117e	       871	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001127	         0xfb64500	                   movzx eax, byte [rbp]	       871	trailer.c	FUNCTION_41	FOR_2	IF_9
0x400112b	    0xf68000000000	                      test byte [rax], 1	       871	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001132	            0x7557	                           jne 0x400118b	       871	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001134	      0x8344241801	               add dword [rsp + 0x18], 1	       874	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001139	      0x837c242000	               cmp dword [rsp + 0x20], 0	       876	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_10
0x400113e	            0x756f	                           jne 0x40011af	       876	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_10
0x4001140	    0x488b1d000000	            mov rbx, qword [0x04001147] 	       878	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001147	    0x4881fb000000	                              cmp rbx, 0	       878	trailer.c	FUNCTION_41	FOR_2	IF_9
0x400114e	            0x746e	                            je 0x40011be	       878	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001150	        0x8b54242c	            mov edx, dword [rsp + 0x2c] 	       881	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_11	CALL_10
0x4001154	          0x4889de	                            mov rsi, rbx	       881	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_11	CALL_10
0x4001157	          0x4889ef	                            mov rdi, rbp	       881	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_11	CALL_10
0x400115a	      0xe891f1ffff	             call sym.token_matches_item	       881	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_11	CALL_10
0x400115f	            0x85c0	                           test eax, eax	       881	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_11	CALL_10
0x4001161	            0x756a	                           jne 0x40011cd	       881	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_11	CALL_10
0x4001163	          0x488b1b	                    mov rbx, qword [rbx]	       878	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001166	    0x4881fb000000	                              cmp rbx, 0	       878	trailer.c	FUNCTION_41	FOR_2	IF_9
0x400116d	            0x75e1	                           jne 0x4001150	       878	trailer.c	FUNCTION_41	FOR_2	IF_9
0x400116f	    0xc74424100000	               mov dword [rsp + 0x10], 0	       875	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001177	      0xbb00000000	                              mov ebx, 0	       859	trailer.c	FUNCTION_41	FOR_2
0x400117c	            0xeb64	                           jmp 0x40011e2	       859	trailer.c	FUNCTION_41	FOR_2
0x400117e	         0xfb64500	                   movzx eax, byte [rbp]	       887	trailer.c	FUNCTION_41	FOR_2	ELSE_2	IF_12
0x4001182	    0xf68000000000	                      test byte [rax], 1	       887	trailer.c	FUNCTION_41	FOR_2	ELSE_2	IF_12
0x4001189	            0x740c	                            je 0x4001197	       887	trailer.c	FUNCTION_41	FOR_2	ELSE_2	IF_12
0x400118b	      0x8344241001	               add dword [rsp + 0x10], 1	       888	trailer.c	FUNCTION_41	FOR_2	ELSE_2	IF_12
0x4001190	      0xbb00000000	                              mov ebx, 0	       859	trailer.c	FUNCTION_41	FOR_2
0x4001195	            0xeb4b	                           jmp 0x40011e2	       859	trailer.c	FUNCTION_41	FOR_2
0x4001197	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       891	trailer.c	FUNCTION_41	FOR_2	ELSE_3
0x400119b	      0x458d740601	               lea r14d, [r14 + rax + 1]	       891	trailer.c	FUNCTION_41	FOR_2	ELSE_3
0x40011a0	    0xc74424100000	               mov dword [rsp + 0x10], 0	       892	trailer.c	FUNCTION_41	FOR_2	ELSE_3
0x40011a8	      0xbb00000000	                              mov ebx, 0	       859	trailer.c	FUNCTION_41	FOR_2
0x40011ad	            0xeb33	                           jmp 0x40011e2	       859	trailer.c	FUNCTION_41	FOR_2
0x40011af	    0xc74424100000	               mov dword [rsp + 0x10], 0	       875	trailer.c	FUNCTION_41	FOR_2	IF_9
0x40011b7	      0xbb00000000	                              mov ebx, 0	       859	trailer.c	FUNCTION_41	FOR_2
0x40011bc	            0xeb24	                           jmp 0x40011e2	       859	trailer.c	FUNCTION_41	FOR_2
0x40011be	    0xc74424100000	               mov dword [rsp + 0x10], 0	       875	trailer.c	FUNCTION_41	FOR_2	IF_9
0x40011c6	      0xbb00000000	                              mov ebx, 0	       859	trailer.c	FUNCTION_41	FOR_2
0x40011cb	            0xeb15	                           jmp 0x40011e2	       859	trailer.c	FUNCTION_41	FOR_2
0x40011cd	    0xc74424100000	               mov dword [rsp + 0x10], 0	       875	trailer.c	FUNCTION_41	FOR_2	IF_9
0x40011d5	    0xc74424200100	               mov dword [rsp + 0x20], 1	       883	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_11
0x40011dd	      0xbb00000000	                              mov ebx, 0	       859	trailer.c	FUNCTION_41	FOR_2
0x40011e2	          0x4c89e6	                            mov rsi, r12	       838	trailer.c	FUNCTION_41	FOR_2	CALL_4
0x40011e5	          0x4c89ef	                            mov rdi, r13	       838	trailer.c	FUNCTION_41	FOR_2	CALL_4
0x40011e8	      0xe88feeffff	                      call sym.last_line	       838	trailer.c	FUNCTION_41	FOR_2	CALL_4
0x40011ed	          0x4139c7	                           cmp r15d, eax	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x40011f0	     0xf8e12feffff	                           jle 0x4001008	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x40011f6	        0x8b442428	            mov eax, dword [rsp + 0x28] 	       898	trailer.c	FUNCTION_41
0x40011fa	            0xeb0a	                           jmp 0x4001206	       898	trailer.c	FUNCTION_41
0x40011fc	        0x8b442428	            mov eax, dword [rsp + 0x28] 	       898	trailer.c	FUNCTION_41
0x4001200	            0xeb04	                           jmp 0x4001206	       898	trailer.c	FUNCTION_41
0x4001202	        0x8b442428	            mov eax, dword [rsp + 0x28] 	       857	trailer.c	FUNCTION_41	FOR_2	IF_4
0x4001206	          0x4863f8	                         movsxd rdi, eax	      1083	trailer.c	FUNCTION_49	CALL_5
0x4001209	          0x4889fb	                            mov rbx, rdi	      1083	trailer.c	FUNCTION_49	CALL_5
0x400120c	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      1083	trailer.c	FUNCTION_49	CALL_5
0x4001211	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1083	trailer.c	FUNCTION_49	CALL_5
0x4001216	          0x4801df	                            add rdi, rbx	      1083	trailer.c	FUNCTION_49	CALL_5
0x4001219	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      1083	trailer.c	FUNCTION_49	CALL_5
0x400121e	        0x8b742428	            mov esi, dword [rsp + 0x28] 	      1083	trailer.c	FUNCTION_49	CALL_5
0x4001222	            0x29c6	                            sub esi, eax	      1083	trailer.c	FUNCTION_49	CALL_5
0x4001224	          0x4863f6	                         movsxd rsi, esi	      1083	trailer.c	FUNCTION_49	CALL_5
0x4001227	      0xb900000000	                              mov ecx, 0	      1083	trailer.c	FUNCTION_49	CALL_5
0x400122c	      0xba0a000000	                            mov edx, 0xa	      1083	trailer.c	FUNCTION_49	CALL_5
0x4001231	      0xe800000000	                          call 0x4001236	      1083	trailer.c	FUNCTION_49	CALL_5
0x4001236	          0x4989c4	                            mov r12, rax	      1083	trailer.c	FUNCTION_49	CALL_5
0x4001239	      0x4889442420	             mov qword [rsp + 0x20], rax	      1083	trailer.c	FUNCTION_49	CALL_5
0x400123e	          0x488b00	                    mov rax, qword [rax]	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001241	          0x4885c0	                           test rax, rax	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001244	     0xf842c010000	                            je 0x4001376	      1087	trailer.c	FUNCTION_49	FOR_1
0x400124a	      0xbd00000000	                              mov ebp, 0	      1087	trailer.c	FUNCTION_49	FOR_1
0x400124f	      0xbb00000000	                              mov ebx, 0	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001254	    0x41be00000000	                             mov r14d, 0	      1087	trailer.c	FUNCTION_49	FOR_1
0x400125a	    0x41bf00000000	                             mov r15d, 0	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001260	          0x4885ed	                           test rbp, rbp	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1
0x4001263	            0x747a	                            je 0x40012df	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1
0x4001265	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1
0x4001269	           0xfb600	                   movzx eax, byte [rax]	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1
0x400126c	    0xf68000000000	                      test byte [rax], 1	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1
0x4001273	            0x746a	                            je 0x40012df	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1
0x4001275	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1089	trailer.c	FUNCTION_49	FOR_1	IF_1
0x400127e	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1089	trailer.c	FUNCTION_49	FOR_1	IF_1
0x4001287	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1089	trailer.c	FUNCTION_49	FOR_1	IF_1
0x4001290	        0x488b7500	                    mov rsi, qword [rbp]	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_8
0x4001294	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_8
0x400129b	          0x4889f7	                            mov rdi, rsi	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_8
0x400129e	      0xb800000000	                              mov eax, 0	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_8
0x40012a3	            0xf2ae	              repne scasb al, byte [rdi]	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_8
0x40012a5	          0x48f7d1	                                 not rcx	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_8
0x40012a8	        0x488d51ff	                      lea rdx, [rcx - 1]	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_8
0x40012ac	          0x4889d1	                            mov rcx, rdx	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_8
0x40012af	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_8
0x40012b4	      0xe800000000	                          call 0x40012b9	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_8
0x40012b9	        0x498b3424	                    mov rsi, qword [r12]	      1091	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_9
0x40012bd	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1091	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_9
0x40012c2	      0xe800000000	                          call 0x40012c7	      1091	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_9
0x40012c7	      0xbe00000000	                              mov esi, 0	      1092	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_10
0x40012cc	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1092	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_10
0x40012d1	      0xe800000000	                          call 0x40012d6	      1092	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_10
0x40012d6	        0x48894500	                    mov qword [rbp], rax	      1092	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_10
0x40012da	      0xe984000000	                           jmp 0x4001363	      1092	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_10
0x40012df	        0x4d8d6e01	                      lea r13, [r14 + 1]	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x40012e3	          0x4939dd	                            cmp r13, rbx	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x40012e6	            0x7648	                           jbe 0x4001330	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x40012e8	      0x488d5c5b30	          lea rbx, [rbx + rbx*2 + 0x30] 	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x40012ed	          0x48d1eb	                              shr rbx, 1	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x40012f0	          0x4939dd	                            cmp r13, rbx	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x40012f3	        0x490f43dd	                         cmovae rbx, r13	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x40012f7	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_78	IF_1
0x4001301	          0x4839c3	                            cmp rbx, rax	       795	git-compat-util.h	FUNCTION_78	IF_1
0x4001304	            0x7617	                           jbe 0x400131d	       795	git-compat-util.h	FUNCTION_78	IF_1
0x4001306	          0x4889da	                            mov rdx, rbx	       796	git-compat-util.h	FUNCTION_78	IF_1	CALL_1
0x4001309	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_78	IF_1	CALL_1
0x400130e	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_78	IF_1	CALL_1
0x4001313	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_78	IF_1	CALL_1
0x4001318	      0xe800000000	                          call 0x400131d	       796	git-compat-util.h	FUNCTION_78	IF_1	CALL_1
0x400131d	    0x488d34dd0000	                        lea rsi, [rbx*8]	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x4001325	          0x4c89ff	                            mov rdi, r15	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x4001328	      0xe800000000	                          call 0x400132d	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x400132d	          0x4989c7	                            mov r15, rax	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x4001330	        0x4b8d2cf7	                  lea rbp, [r15 + r14*8]	      1096	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x4001334	      0xbe00000000	                              mov esi, 0	      1096	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x4001339	        0x498b3c24	                    mov rdi, qword [r12]	      1096	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x400133d	      0xe800000000	                          call 0x4001342	      1096	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x4001342	        0x48894500	                    mov qword [rbp], rax	      1096	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x4001346	    0x488b35000000	            mov rsi, qword [0x0400134d] 	      1097	trailer.c	FUNCTION_49	FOR_1	CALL_13
0x400134d	          0x4889c7	                            mov rdi, rax	      1097	trailer.c	FUNCTION_49	FOR_1	CALL_13
0x4001350	      0xe80aefffff	                 call sym.find_separator	      1097	trailer.c	FUNCTION_49	FOR_1	CALL_13
0x4001355	          0x4d89ee	                            mov r14, r13	      1100	trailer.c	FUNCTION_49	FOR_1
0x4001358	            0x85c0	                           test eax, eax	      1100	trailer.c	FUNCTION_49	FOR_1
0x400135a	      0xb800000000	                              mov eax, 0	      1100	trailer.c	FUNCTION_49	FOR_1
0x400135f	        0x480f4ee8	                         cmovle rbp, rax	      1100	trailer.c	FUNCTION_49	FOR_1
0x4001363	        0x4983c408	                              add r12, 8	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001367	        0x498b0424	                    mov rax, qword [r12]	      1087	trailer.c	FUNCTION_49	FOR_1
0x400136b	          0x4885c0	                           test rax, rax	      1087	trailer.c	FUNCTION_49	FOR_1
0x400136e	     0xf85ecfeffff	                           jne 0x4001260	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001374	            0xeb0c	                           jmp 0x4001382	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001376	    0x41be00000000	                             mov r14d, 0	      1074	trailer.c	FUNCTION_49
0x400137c	    0x41bf00000000	                             mov r15d, 0	      1073	trailer.c	FUNCTION_49
0x4001382	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1102	trailer.c	FUNCTION_49	CALL_14
0x4001387	      0xe800000000	                          call 0x400138c	      1102	trailer.c	FUNCTION_49	CALL_14
0x400138c	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       909	trailer.c	FUNCTION_43	CALL_1
0x4001391	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       909	trailer.c	FUNCTION_43	CALL_1
0x4001396	          0x4889df	                            mov rdi, rbx	       909	trailer.c	FUNCTION_43	CALL_1
0x4001399	      0xe8deecffff	                      call sym.last_line	       909	trailer.c	FUNCTION_43	CALL_1
0x400139e	            0x85c0	                           test eax, eax	       910	trailer.c	FUNCTION_43	IF_1
0x40013a0	            0x784b	                            js 0x40013ed	       910	trailer.c	FUNCTION_43	IF_1
0x40013a2	            0x4898	                                    cdqe	       912	trailer.c	FUNCTION_43	CALL_2
0x40013a4	          0x4889da	                            mov rdx, rbx	       912	trailer.c	FUNCTION_43	CALL_2
0x40013a7	          0x4801c2	                            add rdx, rax	       912	trailer.c	FUNCTION_43	CALL_2
0x40013aa	           0xfb602	                   movzx eax, byte [rdx]	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013ad	            0x3c0a	                             cmp al, 0xa	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013af	            0x742b	                            je 0x40013dc	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013b1	            0x84c0	                             test al, al	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013b3	            0x7427	                            je 0x40013dc	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013b5	           0xfb6c8	                           movzx ecx, al	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013b8	    0xf68100000000	                      test byte [rcx], 1	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013bf	            0x741b	                            je 0x40013dc	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013c1	        0x4883c201	                              add rdx, 1	       107	trailer.c	FUNCTION_6	WHILE_1
0x40013c5	           0xfb602	                   movzx eax, byte [rdx]	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013c8	            0x84c0	                             test al, al	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013ca	            0x7410	                            je 0x40013dc	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013cc	            0x3c0a	                             cmp al, 0xa	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013ce	            0x740c	                            je 0x40013dc	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013d0	           0xfb6c8	                           movzx ecx, al	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013d3	    0xf68100000000	                      test byte [rcx], 1	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013da	            0x75e5	                           jne 0x40013c1	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013dc	            0x84c0	                             test al, al	       108	trailer.c	FUNCTION_6
0x40013de	           0xf94c2	                                 sete dl	       108	trailer.c	FUNCTION_6
0x40013e1	            0x3c0a	                             cmp al, 0xa	       108	trailer.c	FUNCTION_6
0x40013e3	           0xf94c0	                                 sete al	       108	trailer.c	FUNCTION_6
0x40013e6	             0x9d0	                             or eax, edx	       108	trailer.c	FUNCTION_6
0x40013e8	           0xfb6c0	                           movzx eax, al	       108	trailer.c	FUNCTION_6
0x40013eb	            0xeb05	                           jmp 0x40013f2	       108	trailer.c	FUNCTION_6
0x40013ed	      0xb800000000	                              mov eax, 0	       911	trailer.c	FUNCTION_43	IF_1
0x40013f2	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1104	trailer.c	FUNCTION_49	CALL_15
0x40013f7	            0x8907	                    mov dword [rdi], eax	      1104	trailer.c	FUNCTION_49	CALL_15
0x40013f9	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1106	trailer.c	FUNCTION_49
0x40013fe	        0x48894708	                mov qword [rdi + 8], rax	      1106	trailer.c	FUNCTION_49
0x4001402	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      1107	trailer.c	FUNCTION_49
0x4001407	        0x48894710	             mov qword [rdi + 0x10], rax	      1107	trailer.c	FUNCTION_49
0x400140b	        0x4c897f18	             mov qword [rdi + 0x18], r15	      1108	trailer.c	FUNCTION_49
0x400140f	        0x4c897720	             mov qword [rdi + 0x20], r14	      1109	trailer.c	FUNCTION_49
0x4001413	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      1110	trailer.c	FUNCTION_49
0x4001418	    0x644833042528	                xor rax, qword fs:[0x28]	      1110	trailer.c	FUNCTION_49
0x4001421	            0x7405	                            je 0x4001428	      1110	trailer.c	FUNCTION_49
0x4001423	      0xe800000000	                          call 0x4001428	      1110	trailer.c	FUNCTION_49
0x4001428	        0x4883c468	                           add rsp, 0x68	      1110	trailer.c	FUNCTION_49
0x400142c	              0x5b	                                 pop rbx	      1110	trailer.c	FUNCTION_49
0x400142d	              0x5d	                                 pop rbp	      1110	trailer.c	FUNCTION_49
0x400142e	            0x415c	                                 pop r12	      1110	trailer.c	FUNCTION_49
0x4001430	            0x415d	                                 pop r13	      1110	trailer.c	FUNCTION_49
0x4001432	            0x415e	                                 pop r14	      1110	trailer.c	FUNCTION_49
0x4001434	            0x415f	                                 pop r15	      1110	trailer.c	FUNCTION_49
0x4001436	              0xc3	                                     ret	      1110	trailer.c	FUNCTION_49
next_line	IF,0:DO,0:functions,0:SWITCH,0:CALL,0:WHILE,0:FOR,0:ELSE,0	9
0x4000769	        0x4883ec08	                              sub rsp, 8	       758	trailer.c	FUNCTION_38
0x400076d	      0xbe0a000000	                            mov esi, 0xa	       759	trailer.c	FUNCTION_38
0x4000772	      0xe800000000	                          call 0x4000777	       759	trailer.c	FUNCTION_38
0x4000777	          0x803800	                       cmp byte [rax], 0	       760	trailer.c	FUNCTION_38
0x400077a	           0xf95c2	                                setne dl	       760	trailer.c	FUNCTION_38
0x400077d	           0xfb6d2	                           movzx edx, dl	       760	trailer.c	FUNCTION_38
0x4000780	          0x4801d0	                            add rax, rdx	       760	trailer.c	FUNCTION_38
0x4000783	        0x4883c408	                              add rsp, 8	       761	trailer.c	FUNCTION_38
0x4000787	              0xc3	                                     ret	       761	trailer.c	FUNCTION_38
apply_item_command	IF,3:DO,0:functions,0:SWITCH,0:CALL,4:WHILE,0:FOR,0:ELSE,2	121
0x4000539	            0x4154	                                push r12	       251	trailer.c	FUNCTION_17
0x400053b	              0x55	                                push rbp	       251	trailer.c	FUNCTION_17
0x400053c	              0x53	                                push rbx	       251	trailer.c	FUNCTION_17
0x400053d	    0x4881ecc00000	                           sub rsp, 0xc0	       251	trailer.c	FUNCTION_17
0x4000544	    0x64488b042528	                mov rax, qword fs:[0x28]	       251	trailer.c	FUNCTION_17
0x400054d	    0x48898424b800	             mov qword [rsp + 0xb8], rax	       251	trailer.c	FUNCTION_17
0x4000555	            0x31c0	                            xor eax, eax	       251	trailer.c	FUNCTION_17
0x4000557	      0x48837e3000	               cmp qword [rsi + 0x30], 0	       252	trailer.c	FUNCTION_17	IF_1
0x400055c	     0xf84e3010000	                            je 0x4000745	       252	trailer.c	FUNCTION_17	IF_1
0x4000562	          0x4889f5	                            mov rbp, rsi	       252	trailer.c	FUNCTION_17	IF_1
0x4000565	        0x488b5e18	            mov rbx, qword [rsi + 0x18] 	       254	trailer.c	FUNCTION_17	IF_1	IF_2
0x4000569	          0x4885db	                           test rbx, rbx	       254	trailer.c	FUNCTION_17	IF_1	IF_2
0x400056c	            0x7405	                            je 0x4000573	       254	trailer.c	FUNCTION_17	IF_1	IF_2
0x400056e	          0x803b00	                       cmp byte [rbx], 0	       254	trailer.c	FUNCTION_17	IF_1	IF_2
0x4000571	            0x7525	                           jne 0x4000598	       254	trailer.c	FUNCTION_17	IF_1	IF_2
0x4000573	          0x4885ff	                           test rdi, rdi	       257	trailer.c	FUNCTION_17	IF_1	ELSE_1	IF_3
0x4000576	            0x7413	                            je 0x400058b	       257	trailer.c	FUNCTION_17	IF_1	ELSE_1	IF_3
0x4000578	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       257	trailer.c	FUNCTION_17	IF_1	ELSE_1	IF_3
0x400057c	          0x4885ff	                           test rdi, rdi	       257	trailer.c	FUNCTION_17	IF_1	ELSE_1	IF_3
0x400057f	            0x740a	                            je 0x400058b	       257	trailer.c	FUNCTION_17	IF_1	ELSE_1	IF_3
0x4000581	      0xe800000000	                          call 0x4000586	       258	trailer.c	FUNCTION_17	IF_1	ELSE_1	CALL_1
0x4000586	          0x4889c3	                            mov rbx, rax	       258	trailer.c	FUNCTION_17	IF_1	ELSE_1	CALL_1
0x4000589	            0xeb0d	                           jmp 0x4000598	       258	trailer.c	FUNCTION_17	IF_1	ELSE_1	CALL_1
0x400058b	      0xbf00000000	                              mov edi, 0	       260	trailer.c	FUNCTION_17	IF_1	ELSE_1	CALL_2
0x4000590	      0xe800000000	                          call 0x4000595	       260	trailer.c	FUNCTION_17	IF_1	ELSE_1	CALL_2
0x4000595	          0x4889c3	                            mov rbx, rax	       260	trailer.c	FUNCTION_17	IF_1	ELSE_1	CALL_2
0x4000598	        0x488b7530	            mov rsi, qword [rbp + 0x30] 	       262	trailer.c	FUNCTION_17	IF_1	CALL_3
0x400059c	    0x48c704240000	                      mov qword [rsp], 0	       221	trailer.c	FUNCTION_16
0x40005a4	    0x48c744240800	                  mov qword [rsp + 8], 0	       221	trailer.c	FUNCTION_16
0x40005ad	    0x48c744241000	               mov qword [rsp + 0x10], 0	       221	trailer.c	FUNCTION_16
0x40005b6	    0x48c744242000	               mov qword [rsp + 0x20], 0	       222	trailer.c	FUNCTION_16
0x40005bf	    0x48c744242800	               mov qword [rsp + 0x28], 0	       222	trailer.c	FUNCTION_16
0x40005c8	    0x48c744243000	               mov qword [rsp + 0x30], 0	       222	trailer.c	FUNCTION_16
0x40005d1	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       223	trailer.c	FUNCTION_16
0x40005d6	      0xb90c000000	                            mov ecx, 0xc	       223	trailer.c	FUNCTION_16
0x40005db	      0xb800000000	                              mov eax, 0	       223	trailer.c	FUNCTION_16
0x40005e0	          0xf348ab	              rep stosq qword [rdi], rax	       223	trailer.c	FUNCTION_16
0x40005e3	    0x48c744244800	               mov qword [rsp + 0x48], 0	       223	trailer.c	FUNCTION_16
0x40005ec	    0x48c744245800	               mov qword [rsp + 0x58], 0	       223	trailer.c	FUNCTION_16
0x40005f5	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	       224	trailer.c	FUNCTION_16
0x4000601	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	       224	trailer.c	FUNCTION_16
0x400060d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_57	CALL_2
0x4000614	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_57	CALL_2
0x4000617	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_57	CALL_2
0x4000619	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_57	CALL_2
0x400061c	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_57	CALL_2
0x4000620	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_57	CALL_2
0x4000623	      0xe800000000	                          call 0x4000628	       279	strbuf.h	FUNCTION_57	CALL_2
0x4000628	          0x4885db	                           test rbx, rbx	       228	trailer.c	FUNCTION_16	IF_1
0x400062b	            0x7445	                            je 0x4000672	       228	trailer.c	FUNCTION_16	IF_1
0x400062d	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	       113	trailer.c	FUNCTION_7	CALL_1
0x4000632	      0xbe00000000	                              mov esi, 0	       113	trailer.c	FUNCTION_7	CALL_1
0x4000637	          0x4c89e7	                            mov rdi, r12	       113	trailer.c	FUNCTION_7	CALL_1
0x400063a	      0xe800000000	                          call 0x400063f	       113	trailer.c	FUNCTION_7	CALL_1
0x400063f	          0x4889c6	                            mov rsi, rax	       113	trailer.c	FUNCTION_7	CALL_1
0x4000642	          0x4885c0	                           test rax, rax	       114	trailer.c	FUNCTION_7	IF_1
0x4000645	            0x742b	                            je 0x4000672	       114	trailer.c	FUNCTION_7	IF_1
0x4000647	      0xb800000000	                              mov eax, 0	       115	trailer.c	FUNCTION_7	CALL_4
0x400064c	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       115	trailer.c	FUNCTION_7	CALL_4
0x4000653	          0x4889df	                            mov rdi, rbx	       115	trailer.c	FUNCTION_7	CALL_4
0x4000656	            0xf2ae	              repne scasb al, byte [rdi]	       115	trailer.c	FUNCTION_7	CALL_4
0x4000658	          0x48f7d1	                                 not rcx	       115	trailer.c	FUNCTION_7	CALL_4
0x400065b	          0x4c29e6	                            sub rsi, r12	       115	trailer.c	FUNCTION_7	CALL_4
0x400065e	        0x4c8d41ff	                       lea r8, [rcx - 1]	       115	trailer.c	FUNCTION_7	CALL_4
0x4000662	          0x4889d9	                            mov rcx, rbx	       115	trailer.c	FUNCTION_7	CALL_4
0x4000665	      0xba04000000	                              mov edx, 4	       115	trailer.c	FUNCTION_7	CALL_4
0x400066a	          0x4889e7	                            mov rdi, rsp	       115	trailer.c	FUNCTION_7	CALL_4
0x400066d	      0xe800000000	                          call 0x4000672	       115	trailer.c	FUNCTION_7	CALL_4
0x4000672	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       231	trailer.c	FUNCTION_16
0x4000677	    0x48898424a000	             mov qword [rsp + 0xa0], rax	       231	trailer.c	FUNCTION_16
0x400067f	    0x488d8424a000	                   lea rax, [rsp + 0xa0]	       232	trailer.c	FUNCTION_16
0x4000687	      0x4889442440	             mov qword [rsp + 0x40], rax	       232	trailer.c	FUNCTION_16
0x400068c	    0x48c784248000	               mov qword [rsp + 0x80], 0	       233	trailer.c	FUNCTION_16
0x4000698	    0x808c24880000	              or byte [rsp + 0x88], 0x41	       235	trailer.c	FUNCTION_16
0x40006a0	        0x4883ec08	                              sub rsp, 8	       112	run-command.h	FUNCTION_138	CALL_1
0x40006a4	            0x6a00	                                  push 0	       112	run-command.h	FUNCTION_138	CALL_1
0x40006a6	    0x41b900000000	                              mov r9d, 0	       112	run-command.h	FUNCTION_138	CALL_1
0x40006ac	    0x41b800040000	                          mov r8d, 0x400	       112	run-command.h	FUNCTION_138	CALL_1
0x40006b2	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	       112	run-command.h	FUNCTION_138	CALL_1
0x40006b7	      0xba00000000	                              mov edx, 0	       112	run-command.h	FUNCTION_138	CALL_1
0x40006bc	      0xbe00000000	                              mov esi, 0	       112	run-command.h	FUNCTION_138	CALL_1
0x40006c1	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       112	run-command.h	FUNCTION_138	CALL_1
0x40006c6	      0xe800000000	                          call 0x40006cb	       112	run-command.h	FUNCTION_138	CALL_1
0x40006cb	        0x4883c410	                           add rsp, 0x10	       237	trailer.c	FUNCTION_16	IF_2	CALL_3
0x40006cf	            0x85c0	                           test eax, eax	       237	trailer.c	FUNCTION_16	IF_2	CALL_3
0x40006d1	            0x7442	                            je 0x4000715	       237	trailer.c	FUNCTION_16	IF_2	CALL_3
0x40006d3	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	       238	trailer.c	FUNCTION_16	IF_2	CALL_4
0x40006d8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x40006dd	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40006e2	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x40006e7	      0xe800000000	                          call 0x40006ec	        54	gettext.h	FUNCTION_93
0x40006ec	          0x4c89e6	                            mov rsi, r12	       238	trailer.c	FUNCTION_16	IF_2	CALL_4
0x40006ef	          0x4889c7	                            mov rdi, rax	       238	trailer.c	FUNCTION_16	IF_2	CALL_4
0x40006f2	      0xb800000000	                              mov eax, 0	       238	trailer.c	FUNCTION_16	IF_2	CALL_4
0x40006f7	      0xe800000000	                          call 0x40006fc	       238	trailer.c	FUNCTION_16	IF_2	CALL_4
0x40006fc	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       239	trailer.c	FUNCTION_16	IF_2	CALL_5
0x4000701	      0xe800000000	                          call 0x4000706	       239	trailer.c	FUNCTION_16	IF_2	CALL_5
0x4000706	      0xbf00000000	                              mov edi, 0	       240	trailer.c	FUNCTION_16	IF_2	CALL_6
0x400070b	      0xe800000000	                          call 0x4000710	       240	trailer.c	FUNCTION_16	IF_2	CALL_6
0x4000710	          0x4989c4	                            mov r12, rax	       240	trailer.c	FUNCTION_16	IF_2	CALL_6
0x4000713	            0xeb1c	                           jmp 0x4000731	       240	trailer.c	FUNCTION_16	IF_2	CALL_6
0x4000715	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       242	trailer.c	FUNCTION_16	ELSE_1	CALL_7
0x400071a	      0xe800000000	                          call 0x400071f	       242	trailer.c	FUNCTION_16	ELSE_1	CALL_7
0x400071f	      0xbe00000000	                              mov esi, 0	       243	trailer.c	FUNCTION_16	ELSE_1	CALL_8
0x4000724	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       243	trailer.c	FUNCTION_16	ELSE_1	CALL_8
0x4000729	      0xe800000000	                          call 0x400072e	       243	trailer.c	FUNCTION_16	ELSE_1	CALL_8
0x400072e	          0x4989c4	                            mov r12, rax	       243	trailer.c	FUNCTION_16	ELSE_1	CALL_8
0x4000731	          0x4889e7	                            mov rdi, rsp	       246	trailer.c	FUNCTION_16	CALL_9
0x4000734	      0xe800000000	                          call 0x4000739	       246	trailer.c	FUNCTION_16	CALL_9
0x4000739	        0x4c896518	            mov qword [rbp + 0x18], r12 	       262	trailer.c	FUNCTION_17	IF_1	CALL_3
0x400073d	          0x4889df	                            mov rdi, rbx	       263	trailer.c	FUNCTION_17	IF_1	CALL_4
0x4000740	      0xe800000000	                          call 0x4000745	       263	trailer.c	FUNCTION_17	IF_1	CALL_4
0x4000745	    0x488b8424b800	            mov rax, qword [rsp + 0xb8] 	       265	trailer.c	FUNCTION_17
0x400074d	    0x644833042528	                xor rax, qword fs:[0x28]	       265	trailer.c	FUNCTION_17
0x4000756	            0x7405	                            je 0x400075d	       265	trailer.c	FUNCTION_17
0x4000758	      0xe800000000	                          call 0x400075d	       265	trailer.c	FUNCTION_17
0x400075d	    0x4881c4c00000	                           add rsp, 0xc0	       265	trailer.c	FUNCTION_17
0x4000764	              0x5b	                                 pop rbx	       265	trailer.c	FUNCTION_17
0x4000765	              0x5d	                                 pop rbp	       265	trailer.c	FUNCTION_17
0x4000766	            0x415c	                                 pop r12	       265	trailer.c	FUNCTION_17
0x4000768	              0xc3	                                     ret	       265	trailer.c	FUNCTION_17
token_matches_item	IF,1:DO,0:functions,0:SWITCH,0:CALL,2:WHILE,0:FOR,0:ELSE,0	28
0x40002f0	            0x4154	                                push r12	       589	trailer.c	FUNCTION_31
0x40002f2	              0x55	                                push rbp	       589	trailer.c	FUNCTION_31
0x40002f3	              0x53	                                push rbx	       589	trailer.c	FUNCTION_31
0x40002f4	          0x4989fc	                            mov r12, rdi	       589	trailer.c	FUNCTION_31
0x40002f7	          0x4889f5	                            mov rbp, rsi	       589	trailer.c	FUNCTION_31
0x40002fa	          0x4863da	                         movsxd rbx, edx	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x40002fd	        0x488b7620	            mov rsi, qword [rsi + 0x20] 	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x4000301	          0x4889da	                            mov rdx, rbx	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x4000304	      0xe800000000	                          call 0x4000309	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x4000309	      0xba01000000	                              mov edx, 1	       591	trailer.c	FUNCTION_31	IF_1
0x400030e	            0x85c0	                           test eax, eax	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x4000310	            0x7423	                            je 0x4000335	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x4000312	        0x488b7528	            mov rsi, qword [rbp + 0x28] 	       592	trailer.c	FUNCTION_31	CALL_2
0x4000316	          0x4885f6	                           test rsi, rsi	       592	trailer.c	FUNCTION_31	CALL_2
0x4000319	            0x7415	                            je 0x4000330	       592	trailer.c	FUNCTION_31	CALL_2
0x400031b	          0x4889da	                            mov rdx, rbx	       592	trailer.c	FUNCTION_31	CALL_2
0x400031e	          0x4c89e7	                            mov rdi, r12	       592	trailer.c	FUNCTION_31	CALL_2
0x4000321	      0xe800000000	                          call 0x4000326	       592	trailer.c	FUNCTION_31	CALL_2
0x4000326	            0x85c0	                           test eax, eax	       591	trailer.c	FUNCTION_31	IF_1
0x4000328	           0xf94c2	                                 sete dl	       591	trailer.c	FUNCTION_31	IF_1
0x400032b	           0xfb6d2	                           movzx edx, dl	       591	trailer.c	FUNCTION_31	IF_1
0x400032e	            0xeb05	                           jmp 0x4000335	       591	trailer.c	FUNCTION_31	IF_1
0x4000330	      0xba00000000	                              mov edx, 0	       592	trailer.c	FUNCTION_31	CALL_2
0x4000335	            0x89d0	                            mov eax, edx	       593	trailer.c	FUNCTION_31
0x4000337	              0x5b	                                 pop rbx	       593	trailer.c	FUNCTION_31
0x4000338	              0x5d	                                 pop rbp	       593	trailer.c	FUNCTION_31
0x4000339	            0x415c	                                 pop r12	       593	trailer.c	FUNCTION_31
0x400033b	              0xc3	                                     ret	       593	trailer.c	FUNCTION_31
add_arg_to_input_list	IF,1:DO,0:functions,0:SWITCH,0:CALL,4:WHILE,0:FOR,0:ELSE,1	42
0x40001cb	            0x4155	                                push r13	       187	trailer.c	FUNCTION_14
0x40001cd	            0x4154	                                push r12	       187	trailer.c	FUNCTION_14
0x40001cf	              0x55	                                push rbp	       187	trailer.c	FUNCTION_14
0x40001d0	              0x53	                                push rbx	       187	trailer.c	FUNCTION_14
0x40001d1	        0x4883ec08	                              sub rsp, 8	       187	trailer.c	FUNCTION_14
0x40001d5	          0x4989fc	                            mov r12, rdi	       187	trailer.c	FUNCTION_14
0x40001d8	          0x4889f5	                            mov rbp, rsi	       187	trailer.c	FUNCTION_14
0x40001db	          0x8b4638	            mov eax, dword [rsi + 0x38] 	        63	trailer.c	FUNCTION_1
0x40001de	        0x448d68ff	                     lea r13d, [rax - 1]	        63	trailer.c	FUNCTION_1
0x40001e2	      0xbe01000000	                              mov esi, 1	       177	trailer.c	FUNCTION_13	CALL_1
0x40001e7	      0xbf20000000	                           mov edi, 0x20	       177	trailer.c	FUNCTION_13	CALL_1
0x40001ec	      0xe800000000	                          call 0x40001f1	       177	trailer.c	FUNCTION_13	CALL_1
0x40001f1	          0x4889c3	                            mov rbx, rax	       177	trailer.c	FUNCTION_13	CALL_1
0x40001f4	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       178	trailer.c	FUNCTION_13
0x40001f8	        0x48894310	             mov qword [rbx + 0x10], rax	       178	trailer.c	FUNCTION_13
0x40001fc	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       179	trailer.c	FUNCTION_13
0x4000200	        0x48894318	             mov qword [rbx + 0x18], rax	       179	trailer.c	FUNCTION_13
0x4000204	    0x48c745180000	               mov qword [rbp + 0x18], 0	       180	trailer.c	FUNCTION_13
0x400020c	    0x48c745100000	               mov qword [rbp + 0x10], 0	       180	trailer.c	FUNCTION_13
0x4000214	          0x4889ef	                            mov rdi, rbp	       181	trailer.c	FUNCTION_13	CALL_2
0x4000217	      0xe8fefeffff	                  call sym.free_arg_item	       181	trailer.c	FUNCTION_13	CALL_2
0x400021c	        0x4183fd01	                             cmp r13d, 1	       190	trailer.c	FUNCTION_14	IF_1
0x4000220	            0x7719	                            ja 0x400023b	       190	trailer.c	FUNCTION_14	IF_1
0x4000222	        0x498b0424	                    mov rax, qword [r12]	        54	list.h	FUNCTION_107
0x4000226	        0x48895808	                mov qword [rax + 8], rbx	        54	list.h	FUNCTION_107
0x400022a	        0x498b0424	                    mov rax, qword [r12]	        55	list.h	FUNCTION_107
0x400022e	          0x488903	                    mov qword [rbx], rax	        55	list.h	FUNCTION_107
0x4000231	        0x4c896308	                mov qword [rbx + 8], r12	        56	list.h	FUNCTION_107
0x4000235	        0x49891c24	                    mov qword [r12], rbx	        57	list.h	FUNCTION_107
0x4000239	            0xeb19	                           jmp 0x4000254	        57	list.h	FUNCTION_107
0x400023b	      0x498b442408	                mov rax, qword [r12 + 8]	        63	list.h	FUNCTION_108
0x4000240	          0x488918	                    mov qword [rax], rbx	        63	list.h	FUNCTION_108
0x4000243	          0x4c8923	                    mov qword [rbx], r12	        64	list.h	FUNCTION_108
0x4000246	      0x498b442408	                mov rax, qword [r12 + 8]	        65	list.h	FUNCTION_108
0x400024b	        0x48894308	                mov qword [rbx + 8], rax	        65	list.h	FUNCTION_108
0x400024f	      0x49895c2408	                mov qword [r12 + 8], rbx	        66	list.h	FUNCTION_108
0x4000254	        0x4883c408	                              add rsp, 8	       194	trailer.c	FUNCTION_14
0x4000258	              0x5b	                                 pop rbx	       194	trailer.c	FUNCTION_14
0x4000259	              0x5d	                                 pop rbp	       194	trailer.c	FUNCTION_14
0x400025a	            0x415c	                                 pop r12	       194	trailer.c	FUNCTION_14
0x400025c	            0x415d	                                 pop r13	       194	trailer.c	FUNCTION_14
0x400025e	              0xc3	                                     ret	       194	trailer.c	FUNCTION_14
format_trailers_from_commit	IF,0:DO,0:functions,0:SWITCH,0:CALL,3:WHILE,0:FOR,0:ELSE,0	92
0x400212c	            0x4156	                                push r14	      1158	trailer.c	FUNCTION_52
0x400212e	            0x4155	                                push r13	      1158	trailer.c	FUNCTION_52
0x4002130	            0x4154	                                push r12	      1158	trailer.c	FUNCTION_52
0x4002132	              0x55	                                push rbp	      1158	trailer.c	FUNCTION_52
0x4002133	              0x53	                                push rbx	      1158	trailer.c	FUNCTION_52
0x4002134	        0x4883ec70	                           sub rsp, 0x70	      1158	trailer.c	FUNCTION_52
0x4002138	          0x4989fd	                            mov r13, rdi	      1158	trailer.c	FUNCTION_52
0x400213b	          0x4989d4	                            mov r12, rdx	      1158	trailer.c	FUNCTION_52
0x400213e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1158	trailer.c	FUNCTION_52
0x4002147	      0x4889442468	             mov qword [rsp + 0x68], rax	      1158	trailer.c	FUNCTION_52
0x400214c	            0x31c0	                            xor eax, eax	      1158	trailer.c	FUNCTION_52
0x400214e	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1161	trailer.c	FUNCTION_52	CALL_1
0x4002153	      0xe800000000	                          call 0x4002158	      1161	trailer.c	FUNCTION_52	CALL_1
0x4002158	    0x41837c240800	                  cmp dword [r12 + 8], 0	      1127	trailer.c	FUNCTION_51	IF_1
0x400215e	            0x7508	                           jne 0x4002168	      1127	trailer.c	FUNCTION_51	IF_1
0x4002160	    0x41837c241000	               cmp dword [r12 + 0x10], 0	      1127	trailer.c	FUNCTION_51	IF_1
0x4002166	            0x741e	                            je 0x4002186	      1127	trailer.c	FUNCTION_51	IF_1
0x4002168	      0xbb00000000	                              mov ebx, 0	      1133	trailer.c	FUNCTION_51	FOR_1
0x400216d	      0xb800000000	                              mov eax, 0	      1133	trailer.c	FUNCTION_51	FOR_1
0x4002172	    0x49c7c6ffffff	             mov r14, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_57	CALL_2
0x4002179	    0x48837c246000	               cmp qword [rsp + 0x60], 0	      1133	trailer.c	FUNCTION_51	FOR_1
0x400217f	            0x751f	                           jne 0x40021a0	      1133	trailer.c	FUNCTION_51	FOR_1
0x4002181	      0xe904010000	                           jmp 0x400228a	      1133	trailer.c	FUNCTION_51	FOR_1
0x4002186	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      1129	trailer.c	FUNCTION_51	IF_1
0x400218b	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	      1128	trailer.c	FUNCTION_51	IF_1	CALL_1
0x4002190	          0x4829f2	                            sub rdx, rsi	      1128	trailer.c	FUNCTION_51	IF_1	CALL_1
0x4002193	          0x4c89ef	                            mov rdi, r13	      1128	trailer.c	FUNCTION_51	IF_1	CALL_1
0x4002196	      0xe800000000	                          call 0x400219b	      1128	trailer.c	FUNCTION_51	IF_1	CALL_1
0x400219b	      0xe9ea000000	                           jmp 0x400228a	      1128	trailer.c	FUNCTION_51	IF_1	CALL_1
0x40021a0	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      1134	trailer.c	FUNCTION_51	FOR_1
0x40021a5	        0x488b2cc2	            mov rbp, qword [rdx + rax*8]	      1134	trailer.c	FUNCTION_51	FOR_1
0x40021a9	    0x488b35000000	            mov rsi, qword [0x040021b0] 	      1135	trailer.c	FUNCTION_51	FOR_1	CALL_2
0x40021b0	          0x4889ef	                            mov rdi, rbp	      1135	trailer.c	FUNCTION_51	FOR_1	CALL_2
0x40021b3	      0xe8a7e0ffff	                 call sym.find_separator	      1135	trailer.c	FUNCTION_51	FOR_1	CALL_2
0x40021b8	            0x85c0	                           test eax, eax	      1137	trailer.c	FUNCTION_51	FOR_1	IF_2
0x40021ba	     0xf8e8f000000	                           jle 0x400224f	      1137	trailer.c	FUNCTION_51	FOR_1	IF_2
0x40021c0	    0x48c704240000	                      mov qword [rsp], 0	      1138	trailer.c	FUNCTION_51	FOR_1	IF_2
0x40021c8	    0x48c744240800	                  mov qword [rsp + 8], 0	      1138	trailer.c	FUNCTION_51	FOR_1	IF_2
0x40021d1	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1138	trailer.c	FUNCTION_51	FOR_1	IF_2
0x40021da	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1139	trailer.c	FUNCTION_51	FOR_1	IF_2
0x40021e3	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1139	trailer.c	FUNCTION_51	FOR_1	IF_2
0x40021ec	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1139	trailer.c	FUNCTION_51	FOR_1	IF_2
0x40021f5	          0x4189c0	                            mov r8d, eax	      1141	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_3
0x40021f8	          0x4889e9	                            mov rcx, rbp	      1141	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_3
0x40021fb	      0xba00000000	                              mov edx, 0	      1141	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_3
0x4002200	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1141	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_3
0x4002205	          0x4889e7	                            mov rdi, rsp	      1141	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_3
0x4002208	      0xe82fe1ffff	                  call sym.parse_trailer	      1141	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_3
0x400220d	    0x41837c241000	               cmp dword [r12 + 0x10], 0	      1142	trailer.c	FUNCTION_51	FOR_1	IF_2	IF_3
0x4002213	            0x740a	                            je 0x400221f	      1142	trailer.c	FUNCTION_51	FOR_1	IF_2	IF_3
0x4002215	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1143	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_4
0x400221a	      0xe869e5ffff	                   call sym.unfold_value	      1143	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_4
0x400221f	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      1145	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x4002224	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1145	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x4002229	      0xbe00000000	                              mov esi, 0	      1145	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x400222e	          0x4c89ef	                            mov rdi, r13	      1145	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x4002231	      0xb800000000	                              mov eax, 0	      1145	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x4002236	      0xe800000000	                          call 0x400223b	      1145	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x400223b	          0x4889e7	                            mov rdi, rsp	      1146	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_6
0x400223e	      0xe800000000	                          call 0x4002243	      1146	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_6
0x4002243	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1147	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_7
0x4002248	      0xe800000000	                          call 0x400224d	      1147	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_7
0x400224d	            0xeb2a	                           jmp 0x4002279	      1147	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_7
0x400224f	    0x41837c240800	                  cmp dword [r12 + 8], 0	      1149	trailer.c	FUNCTION_51	FOR_1	ELSE_1	IF_4
0x4002255	            0x7522	                           jne 0x4002279	      1149	trailer.c	FUNCTION_51	FOR_1	ELSE_1	IF_4
0x4002257	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_57	CALL_2
0x400225c	          0x4c89f1	                            mov rcx, r14	       279	strbuf.h	FUNCTION_57	CALL_2
0x400225f	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_57	CALL_2
0x4002262	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_57	CALL_2
0x4002264	          0x4889c8	                            mov rax, rcx	       279	strbuf.h	FUNCTION_57	CALL_2
0x4002267	          0x48f7d0	                                 not rax	       279	strbuf.h	FUNCTION_57	CALL_2
0x400226a	        0x488d50ff	                      lea rdx, [rax - 1]	       279	strbuf.h	FUNCTION_57	CALL_2
0x400226e	          0x4889ee	                            mov rsi, rbp	       279	strbuf.h	FUNCTION_57	CALL_2
0x4002271	          0x4c89ef	                            mov rdi, r13	       279	strbuf.h	FUNCTION_57	CALL_2
0x4002274	      0xe800000000	                          call 0x4002279	       279	strbuf.h	FUNCTION_57	CALL_2
0x4002279	          0x83c301	                              add ebx, 1	      1133	trailer.c	FUNCTION_51	FOR_1
0x400227c	          0x4863c3	                         movsxd rax, ebx	      1133	trailer.c	FUNCTION_51	FOR_1
0x400227f	      0x483b442460	            cmp rax, qword [rsp + 0x60] 	      1133	trailer.c	FUNCTION_51	FOR_1
0x4002284	     0xf8216ffffff	                            jb 0x40021a0	      1133	trailer.c	FUNCTION_51	FOR_1
0x400228a	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1163	trailer.c	FUNCTION_52	CALL_3
0x400228f	      0xe800000000	                          call 0x4002294	      1163	trailer.c	FUNCTION_52	CALL_3
0x4002294	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      1164	trailer.c	FUNCTION_52
0x4002299	    0x644833042528	                xor rax, qword fs:[0x28]	      1164	trailer.c	FUNCTION_52
0x40022a2	            0x7405	                            je 0x40022a9	      1164	trailer.c	FUNCTION_52
0x40022a4	      0xe800000000	                          call 0x40022a9	      1164	trailer.c	FUNCTION_52
0x40022a9	        0x4883c470	                           add rsp, 0x70	      1164	trailer.c	FUNCTION_52
0x40022ad	              0x5b	                                 pop rbx	      1164	trailer.c	FUNCTION_52
0x40022ae	              0x5d	                                 pop rbp	      1164	trailer.c	FUNCTION_52
0x40022af	            0x415c	                                 pop r12	      1164	trailer.c	FUNCTION_52
0x40022b1	            0x415d	                                 pop r13	      1164	trailer.c	FUNCTION_52
0x40022b3	            0x415e	                                 pop r14	      1164	trailer.c	FUNCTION_52
0x40022b5	              0xc3	                                     ret	      1164	trailer.c	FUNCTION_52
find_separator	IF,3:DO,0:functions,0:SWITCH,0:CALL,1:WHILE,0:FOR,1:ELSE,0	53
0x400025f	           0xfb617	                   movzx edx, byte [rdi]	       610	trailer.c	FUNCTION_32	FOR_1
0x4000262	            0x84d2	                             test dl, dl	       610	trailer.c	FUNCTION_32	FOR_1
0x4000264	            0x746d	                            je 0x40002d3	       610	trailer.c	FUNCTION_32	FOR_1
0x4000266	            0x4155	                                push r13	       607	trailer.c	FUNCTION_32
0x4000268	            0x4154	                                push r12	       607	trailer.c	FUNCTION_32
0x400026a	              0x55	                                push rbp	       607	trailer.c	FUNCTION_32
0x400026b	              0x53	                                push rbx	       607	trailer.c	FUNCTION_32
0x400026c	        0x4883ec08	                              sub rsp, 8	       607	trailer.c	FUNCTION_32
0x4000270	          0x4989f4	                            mov r12, rsi	       607	trailer.c	FUNCTION_32
0x4000273	          0x4989fd	                            mov r13, rdi	       607	trailer.c	FUNCTION_32
0x4000276	          0x4889fb	                            mov rbx, rdi	       610	trailer.c	FUNCTION_32	FOR_1
0x4000279	      0xbd00000000	                              mov ebp, 0	       610	trailer.c	FUNCTION_32	FOR_1
0x400027e	           0xfbef2	                           movsx esi, dl	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4000281	          0x4c89e7	                            mov rdi, r12	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4000284	      0xe800000000	                          call 0x4000289	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4000289	          0x4885c0	                           test rax, rax	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x400028c	            0x7407	                            je 0x4000295	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x400028e	            0x89d8	                            mov eax, ebx	       612	trailer.c	FUNCTION_32	FOR_1	IF_1
0x4000290	          0x4429e8	                           sub eax, r13d	       612	trailer.c	FUNCTION_32	FOR_1	IF_1
0x4000293	            0xeb50	                           jmp 0x40002e5	       612	trailer.c	FUNCTION_32	FOR_1	IF_1
0x4000295	            0x85ed	                           test ebp, ebp	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x4000297	            0x7513	                           jne 0x40002ac	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x4000299	           0xfb603	                   movzx eax, byte [rbx]	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x400029c	           0xfb6d0	                           movzx edx, al	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x400029f	    0xf68200000000	                      test byte [rdx], 6	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x40002a6	            0x7519	                           jne 0x40002c1	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x40002a8	            0x3c2d	                            cmp al, 0x2d	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x40002aa	            0x7415	                            je 0x40002c1	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x40002ac	          0x4939dd	                            cmp r13, rbx	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x40002af	            0x7428	                            je 0x40002d9	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x40002b1	           0xfb603	                   movzx eax, byte [rbx]	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x40002b4	            0x3c20	                            cmp al, 0x20	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x40002b6	            0x7404	                            je 0x40002bc	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x40002b8	            0x3c09	                               cmp al, 9	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x40002ba	            0x7524	                           jne 0x40002e0	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x40002bc	      0xbd01000000	                              mov ebp, 1	       616	trailer.c	FUNCTION_32	FOR_1	IF_3
0x40002c1	        0x4883c301	                              add rbx, 1	       610	trailer.c	FUNCTION_32	FOR_1
0x40002c5	           0xfb613	                   movzx edx, byte [rbx]	       610	trailer.c	FUNCTION_32	FOR_1
0x40002c8	            0x84d2	                             test dl, dl	       610	trailer.c	FUNCTION_32	FOR_1
0x40002ca	            0x75b2	                           jne 0x400027e	       610	trailer.c	FUNCTION_32	FOR_1
0x40002cc	      0xb8ffffffff	                     mov eax, 0xffffffff	       621	trailer.c	FUNCTION_32
0x40002d1	            0xeb12	                           jmp 0x40002e5	       621	trailer.c	FUNCTION_32
0x40002d3	      0xb8ffffffff	                     mov eax, 0xffffffff	       621	trailer.c	FUNCTION_32
0x40002d8	              0xc3	                                     ret	       622	trailer.c	FUNCTION_32
0x40002d9	      0xb8ffffffff	                     mov eax, 0xffffffff	       621	trailer.c	FUNCTION_32
0x40002de	            0xeb05	                           jmp 0x40002e5	       621	trailer.c	FUNCTION_32
0x40002e0	      0xb8ffffffff	                     mov eax, 0xffffffff	       621	trailer.c	FUNCTION_32
0x40002e5	        0x4883c408	                              add rsp, 8	       622	trailer.c	FUNCTION_32
0x40002e9	              0x5b	                                 pop rbx	       622	trailer.c	FUNCTION_32
0x40002ea	              0x5d	                                 pop rbp	       622	trailer.c	FUNCTION_32
0x40002eb	            0x415c	                                 pop r12	       622	trailer.c	FUNCTION_32
0x40002ed	            0x415d	                                 pop r13	       622	trailer.c	FUNCTION_32
0x40002ef	              0xc3	                                     ret	       622	trailer.c	FUNCTION_32
