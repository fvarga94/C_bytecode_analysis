get_root_part	FOR,0:IF,0:SWITCH,0:WHILE,0:functions,0:DO,0:ELSE,0:CALL,3	32
0x4000040	              0x55	                                push rbp	        53	abspath.c	FUNCTION_4
0x4000041	              0x53	                                push rbx	        53	abspath.c	FUNCTION_4
0x4000042	        0x4883ec08	                              sub rsp, 8	        53	abspath.c	FUNCTION_4
0x4000046	          0x4889f5	                            mov rbp, rsi	        53	abspath.c	FUNCTION_4
0x4000049	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       372	git-compat-util.h	FUNCTION_15
0x400004d	          0x80382f	                    cmp byte [rax], 0x2f	       364	git-compat-util.h	FUNCTION_14
0x4000050	           0xf94c3	                                 sete bl	       364	git-compat-util.h	FUNCTION_14
0x4000053	    0x48c747080000	                  mov qword [rdi + 8], 0	       164	strbuf.h	FUNCTION_41
0x400005b	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       165	strbuf.h	FUNCTION_41	IF_2
0x400005f	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_41	IF_2
0x4000065	            0x7405	                            je 0x400006c	       165	strbuf.h	FUNCTION_41	IF_2
0x4000067	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_41	IF_2
0x400006a	            0xeb22	                           jmp 0x400008e	       166	strbuf.h	FUNCTION_41	IF_2
0x400006c	    0x803d00000000	                cmp byte [0x04000073], 0	       168	strbuf.h	FUNCTION_41	CALL_2
0x4000073	            0x7419	                            je 0x400008e	       168	strbuf.h	FUNCTION_41	CALL_2
0x4000075	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_41	CALL_2
0x400007a	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_41	CALL_2
0x400007f	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_41	CALL_2
0x4000084	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_41	CALL_2
0x4000089	      0xe800000000	                          call 0x400008e	       168	strbuf.h	FUNCTION_41	CALL_2
0x400008e	           0xfb6db	                           movzx ebx, bl	        57	abspath.c	FUNCTION_4	CALL_1
0x4000091	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	        57	abspath.c	FUNCTION_4	CALL_1
0x4000095	          0x4889da	                            mov rdx, rbx	        57	abspath.c	FUNCTION_4	CALL_1
0x4000098	      0xe800000000	                          call 0x400009d	        57	abspath.c	FUNCTION_4	CALL_1
0x400009d	          0x4889da	                            mov rdx, rbx	        61	abspath.c	FUNCTION_4	CALL_3
0x40000a0	      0xbe00000000	                              mov esi, 0	        61	abspath.c	FUNCTION_4	CALL_3
0x40000a5	          0x4889ef	                            mov rdi, rbp	        61	abspath.c	FUNCTION_4	CALL_3
0x40000a8	      0xe800000000	                          call 0x40000ad	        61	abspath.c	FUNCTION_4	CALL_3
0x40000ad	        0x4883c408	                              add rsp, 8	        62	abspath.c	FUNCTION_4
0x40000b1	              0x5b	                                 pop rbx	        62	abspath.c	FUNCTION_4
0x40000b2	              0x5d	                                 pop rbp	        62	abspath.c	FUNCTION_4
0x40000b3	              0xc3	                                     ret	        62	abspath.c	FUNCTION_4
real_path	FOR,0:IF,0:SWITCH,0:WHILE,0:functions,0:DO,0:ELSE,0:CALL,1	7
0x40006c1	        0x4883ec08	                              sub rsp, 8	       210	abspath.c	FUNCTION_6
0x40006c5	          0x4889fe	                            mov rsi, rdi	       210	abspath.c	FUNCTION_6
0x40006c8	      0xba01000000	                              mov edx, 1	       212	abspath.c	FUNCTION_6	CALL_1
0x40006cd	      0xbf00000000	                              mov edi, 0	       212	abspath.c	FUNCTION_6	CALL_1
0x40006d2	      0xe800000000	                          call 0x40006d7	       212	abspath.c	FUNCTION_6	CALL_1
0x40006d7	        0x4883c408	                              add rsp, 8	       213	abspath.c	FUNCTION_6
0x40006db	              0xc3	                                     ret	       213	abspath.c	FUNCTION_6
real_path_if_valid	FOR,0:IF,0:SWITCH,0:WHILE,0:functions,0:DO,0:ELSE,0:CALL,1	7
0x40006dc	        0x4883ec08	                              sub rsp, 8	       216	abspath.c	FUNCTION_7
0x40006e0	          0x4889fe	                            mov rsi, rdi	       216	abspath.c	FUNCTION_7
0x40006e3	      0xba00000000	                              mov edx, 0	       218	abspath.c	FUNCTION_7	CALL_1
0x40006e8	      0xbf00000000	                              mov edi, 0	       218	abspath.c	FUNCTION_7	CALL_1
0x40006ed	      0xe800000000	                          call 0x40006f2	       218	abspath.c	FUNCTION_7	CALL_1
0x40006f2	        0x4883c408	                              add rsp, 8	       219	abspath.c	FUNCTION_7
0x40006f6	              0xc3	                                     ret	       219	abspath.c	FUNCTION_7
absolute_pathdup	FOR,0:IF,0:SWITCH,0:WHILE,0:functions,0:DO,0:ELSE,0:CALL,2	19
0x40007d3	        0x4883ec28	                           sub rsp, 0x28	       247	abspath.c	FUNCTION_10
0x40007d7	          0x4889fe	                            mov rsi, rdi	       247	abspath.c	FUNCTION_10
0x40007da	    0x64488b042528	                mov rax, qword fs:[0x28]	       247	abspath.c	FUNCTION_10
0x40007e3	      0x4889442418	             mov qword [rsp + 0x18], rax	       247	abspath.c	FUNCTION_10
0x40007e8	            0x31c0	                            xor eax, eax	       247	abspath.c	FUNCTION_10
0x40007ea	    0x48c704240000	                      mov qword [rsp], 0	       248	abspath.c	FUNCTION_10
0x40007f2	    0x48c744240800	                  mov qword [rsp + 8], 0	       248	abspath.c	FUNCTION_10
0x40007fb	    0x48c744241000	               mov qword [rsp + 0x10], 0	       248	abspath.c	FUNCTION_10
0x4000804	          0x4889e7	                            mov rdi, rsp	       249	abspath.c	FUNCTION_10	CALL_1
0x4000807	      0xe800000000	                          call 0x400080c	       249	abspath.c	FUNCTION_10	CALL_1
0x400080c	      0xbe00000000	                              mov esi, 0	       250	abspath.c	FUNCTION_10	CALL_2
0x4000811	          0x4889e7	                            mov rdi, rsp	       250	abspath.c	FUNCTION_10	CALL_2
0x4000814	      0xe800000000	                          call 0x4000819	       250	abspath.c	FUNCTION_10	CALL_2
0x4000819	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       251	abspath.c	FUNCTION_10
0x400081e	    0x644833142528	                xor rdx, qword fs:[0x28]	       251	abspath.c	FUNCTION_10
0x4000827	            0x7405	                            je 0x400082e	       251	abspath.c	FUNCTION_10
0x4000829	      0xe800000000	                          call 0x400082e	       251	abspath.c	FUNCTION_10
0x400082e	        0x4883c428	                           add rsp, 0x28	       251	abspath.c	FUNCTION_10
0x4000832	              0xc3	                                     ret	       251	abspath.c	FUNCTION_10
real_pathdup	FOR,0:IF,1:SWITCH,0:WHILE,0:functions,0:DO,0:ELSE,0:CALL,3	30
0x40006f7	              0x53	                                push rbx	       222	abspath.c	FUNCTION_8
0x40006f8	        0x4883ec20	                           sub rsp, 0x20	       222	abspath.c	FUNCTION_8
0x40006fc	            0x89f2	                            mov edx, esi	       222	abspath.c	FUNCTION_8
0x40006fe	    0x64488b042528	                mov rax, qword fs:[0x28]	       222	abspath.c	FUNCTION_8
0x4000707	      0x4889442418	             mov qword [rsp + 0x18], rax	       222	abspath.c	FUNCTION_8
0x400070c	            0x31c0	                            xor eax, eax	       222	abspath.c	FUNCTION_8
0x400070e	    0x48c704240000	                      mov qword [rsp], 0	       223	abspath.c	FUNCTION_8
0x4000716	    0x48c744240800	                  mov qword [rsp + 8], 0	       223	abspath.c	FUNCTION_8
0x400071f	    0x48c744241000	               mov qword [rsp + 0x10], 0	       223	abspath.c	FUNCTION_8
0x4000728	          0x4889fe	                            mov rsi, rdi	       226	abspath.c	FUNCTION_8	IF_1	CALL_1
0x400072b	          0x4889e7	                            mov rdi, rsp	       226	abspath.c	FUNCTION_8	IF_1	CALL_1
0x400072e	      0xe800000000	                          call 0x4000733	       226	abspath.c	FUNCTION_8	IF_1	CALL_1
0x4000733	          0x4885c0	                           test rax, rax	       226	abspath.c	FUNCTION_8	IF_1	CALL_1
0x4000736	            0x7412	                            je 0x400074a	       226	abspath.c	FUNCTION_8	IF_1	CALL_1
0x4000738	      0xbe00000000	                              mov esi, 0	       227	abspath.c	FUNCTION_8	CALL_2
0x400073d	          0x4889e7	                            mov rdi, rsp	       227	abspath.c	FUNCTION_8	CALL_2
0x4000740	      0xe800000000	                          call 0x4000745	       227	abspath.c	FUNCTION_8	CALL_2
0x4000745	          0x4889c3	                            mov rbx, rax	       227	abspath.c	FUNCTION_8	CALL_2
0x4000748	            0xeb05	                           jmp 0x400074f	       227	abspath.c	FUNCTION_8	CALL_2
0x400074a	      0xbb00000000	                              mov ebx, 0	       224	abspath.c	FUNCTION_8
0x400074f	          0x4889e7	                            mov rdi, rsp	       229	abspath.c	FUNCTION_8	CALL_3
0x4000752	      0xe800000000	                          call 0x4000757	       229	abspath.c	FUNCTION_8	CALL_3
0x4000757	          0x4889d8	                            mov rax, rbx	       232	abspath.c	FUNCTION_8
0x400075a	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       232	abspath.c	FUNCTION_8
0x400075f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       232	abspath.c	FUNCTION_8
0x4000768	            0x7405	                            je 0x400076f	       232	abspath.c	FUNCTION_8
0x400076a	      0xe800000000	                          call 0x400076f	       232	abspath.c	FUNCTION_8
0x400076f	        0x4883c420	                           add rsp, 0x20	       232	abspath.c	FUNCTION_8
0x4000773	              0x5b	                                 pop rbx	       232	abspath.c	FUNCTION_8
0x4000774	              0xc3	                                     ret	       232	abspath.c	FUNCTION_8
prefix_filename	FOR,0:IF,2:SWITCH,0:WHILE,0:functions,0:DO,0:ELSE,2:CALL,6	42
0x4000833	              0x53	                                push rbx	       254	abspath.c	FUNCTION_11
0x4000834	        0x4883ec20	                           sub rsp, 0x20	       254	abspath.c	FUNCTION_11
0x4000838	          0x4889f3	                            mov rbx, rsi	       254	abspath.c	FUNCTION_11
0x400083b	    0x64488b042528	                mov rax, qword fs:[0x28]	       254	abspath.c	FUNCTION_11
0x4000844	      0x4889442418	             mov qword [rsp + 0x18], rax	       254	abspath.c	FUNCTION_11
0x4000849	            0x31c0	                            xor eax, eax	       254	abspath.c	FUNCTION_11
0x400084b	    0x48c704240000	                      mov qword [rsp], 0	       255	abspath.c	FUNCTION_11
0x4000853	    0x48c744240800	                  mov qword [rsp + 8], 0	       255	abspath.c	FUNCTION_11
0x400085c	    0x48c744241000	               mov qword [rsp + 0x10], 0	       255	abspath.c	FUNCTION_11
0x4000865	          0x4885ff	                           test rdi, rdi	       256	abspath.c	FUNCTION_11	CALL_1
0x4000868	            0x7428	                            je 0x4000892	       256	abspath.c	FUNCTION_11	CALL_1
0x400086a	          0x4989f8	                             mov r8, rdi	       256	abspath.c	FUNCTION_11	CALL_1
0x400086d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       256	abspath.c	FUNCTION_11	CALL_1
0x4000874	            0xf2ae	              repne scasb al, byte [rdi]	       256	abspath.c	FUNCTION_11	CALL_1
0x4000876	          0x48f7d1	                                 not rcx	       256	abspath.c	FUNCTION_11	CALL_1
0x4000879	          0x4889ca	                            mov rdx, rcx	       258	abspath.c	FUNCTION_11	IF_1
0x400087c	        0x4883ea01	                              sub rdx, 1	       258	abspath.c	FUNCTION_11	IF_1
0x4000880	            0x7410	                            je 0x4000892	       258	abspath.c	FUNCTION_11	IF_1
0x4000882	          0x803e2f	                    cmp byte [rsi], 0x2f	       260	abspath.c	FUNCTION_11	ELSE_1	IF_2	CALL_2
0x4000885	            0x740b	                            je 0x4000892	       260	abspath.c	FUNCTION_11	ELSE_1	IF_2	CALL_2
0x4000887	          0x4c89c6	                             mov rsi, r8	       263	abspath.c	FUNCTION_11	CALL_3
0x400088a	          0x4889e7	                            mov rdi, rsp	       263	abspath.c	FUNCTION_11	CALL_3
0x400088d	      0xe800000000	                          call 0x4000892	       263	abspath.c	FUNCTION_11	CALL_3
0x4000892	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_43	CALL_2
0x4000897	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_43	CALL_2
0x400089e	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_43	CALL_2
0x40008a1	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_43	CALL_2
0x40008a3	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_43	CALL_2
0x40008a6	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_43	CALL_2
0x40008aa	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_43	CALL_2
0x40008ad	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_43	CALL_2
0x40008b0	      0xe800000000	                          call 0x40008b5	       279	strbuf.h	FUNCTION_43	CALL_2
0x40008b5	      0xbe00000000	                              mov esi, 0	       269	abspath.c	FUNCTION_11	CALL_6
0x40008ba	          0x4889e7	                            mov rdi, rsp	       269	abspath.c	FUNCTION_11	CALL_6
0x40008bd	      0xe800000000	                          call 0x40008c2	       269	abspath.c	FUNCTION_11	CALL_6
0x40008c2	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       270	abspath.c	FUNCTION_11
0x40008c7	    0x644833342528	                xor rsi, qword fs:[0x28]	       270	abspath.c	FUNCTION_11
0x40008d0	            0x7405	                            je 0x40008d7	       270	abspath.c	FUNCTION_11
0x40008d2	      0xe800000000	                          call 0x40008d7	       270	abspath.c	FUNCTION_11
0x40008d7	        0x4883c420	                           add rsp, 0x20	       270	abspath.c	FUNCTION_11
0x40008db	              0x5b	                                 pop rbx	       270	abspath.c	FUNCTION_11
0x40008dc	              0xc3	                                     ret	       270	abspath.c	FUNCTION_11
strip_last_component	FOR,0:IF,0:SWITCH,0:WHILE,2:functions,0:DO,0:ELSE,0:CALL,1	57
0x40000b4	        0x4883ec08	                              sub rsp, 8	        16	abspath.c	FUNCTION_2
0x40000b8	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	        17	abspath.c	FUNCTION_2
0x40000bc	          0x80392f	                    cmp byte [rcx], 0x2f	        17	abspath.c	FUNCTION_2
0x40000bf	        0x400f94c6	                                sete sil	        17	abspath.c	FUNCTION_2
0x40000c3	        0x400fb6f6	                          movzx esi, sil	        17	abspath.c	FUNCTION_2
0x40000c7	        0x488b4708	                mov rax, qword [rdi + 8]	        18	abspath.c	FUNCTION_2
0x40000cb	          0x4839c6	                            cmp rsi, rax	        21	abspath.c	FUNCTION_2	WHILE_1
0x40000ce	     0xf839c000000	                           jae 0x4000170	        21	abspath.c	FUNCTION_2	WHILE_1
0x40000d4	        0x488d50ff	                      lea rdx, [rax - 1]	        21	abspath.c	FUNCTION_2	WHILE_1
0x40000d8	      0x807c01ff2f	         cmp byte [rcx + rax - 1], 0x2f 	        21	abspath.c	FUNCTION_2	WHILE_1
0x40000dd	            0x7513	                           jne 0x40000f2	        21	abspath.c	FUNCTION_2	WHILE_1
0x40000df	      0xe994000000	                           jmp 0x4000178	        21	abspath.c	FUNCTION_2	WHILE_1
0x40000e4	        0x488d42ff	                      lea rax, [rdx - 1]	        21	abspath.c	FUNCTION_2	WHILE_1
0x40000e8	      0x807c11ff2f	         cmp byte [rcx + rdx - 1], 0x2f 	        21	abspath.c	FUNCTION_2	WHILE_1
0x40000ed	            0x7471	                            je 0x4000160	        21	abspath.c	FUNCTION_2	WHILE_1
0x40000ef	          0x4889c2	                            mov rdx, rax	        21	abspath.c	FUNCTION_2	WHILE_1
0x40000f2	          0x4839d6	                            cmp rsi, rdx	        21	abspath.c	FUNCTION_2	WHILE_1
0x40000f5	            0x75ed	                           jne 0x40000e4	        21	abspath.c	FUNCTION_2	WHILE_1
0x40000f7	            0xeb7a	                           jmp 0x4000173	        21	abspath.c	FUNCTION_2	WHILE_1
0x40000f9	        0x488d50ff	                      lea rdx, [rax - 1]	        24	abspath.c	FUNCTION_2	WHILE_2
0x40000fd	      0x807c01ff2f	         cmp byte [rcx + rax - 1], 0x2f 	        24	abspath.c	FUNCTION_2	WHILE_2
0x4000102	            0x7508	                           jne 0x400010c	        24	abspath.c	FUNCTION_2	WHILE_2
0x4000104	          0x4889d0	                            mov rax, rdx	        24	abspath.c	FUNCTION_2	WHILE_2
0x4000107	          0x4839c6	                            cmp rsi, rax	        24	abspath.c	FUNCTION_2	WHILE_2
0x400010a	            0x72ed	                            jb 0x40000f9	        24	abspath.c	FUNCTION_2	WHILE_2
0x400010c	          0x488b17	                    mov rdx, qword [rdi]	       162	strbuf.h	FUNCTION_41	IF_1
0x400010f	        0x4883fa01	                              cmp rdx, 1	       162	strbuf.h	FUNCTION_41	IF_1
0x4000113	        0x4883d2ff	             adc rdx, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_41	IF_1
0x4000117	          0x4839c2	                            cmp rdx, rax	       162	strbuf.h	FUNCTION_41	IF_1
0x400011a	            0x730f	                           jae 0x400012b	       162	strbuf.h	FUNCTION_41	IF_1
0x400011c	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_41	CALL_1
0x4000121	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_41	CALL_1
0x4000126	      0xe800000000	                          call 0x400012b	       163	strbuf.h	FUNCTION_41	CALL_1
0x400012b	        0x48894708	                mov qword [rdi + 8], rax	       164	strbuf.h	FUNCTION_41
0x400012f	    0x4881f9000000	                              cmp rcx, 0	       165	strbuf.h	FUNCTION_41	IF_2
0x4000136	            0x7406	                            je 0x400013e	       165	strbuf.h	FUNCTION_41	IF_2
0x4000138	        0xc6040100	                 mov byte [rcx + rax], 0	       166	strbuf.h	FUNCTION_41	IF_2
0x400013c	            0xeb40	                           jmp 0x400017e	       166	strbuf.h	FUNCTION_41	IF_2
0x400013e	    0x803d00000000	                cmp byte [0x04000145], 0	       168	strbuf.h	FUNCTION_41	CALL_2
0x4000145	            0x7437	                            je 0x400017e	       168	strbuf.h	FUNCTION_41	CALL_2
0x4000147	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_41	CALL_2
0x400014c	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_41	CALL_2
0x4000151	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_41	CALL_2
0x4000156	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_41	CALL_2
0x400015b	      0xe800000000	                          call 0x4000160	       168	strbuf.h	FUNCTION_41	CALL_2
0x4000160	        0x488d42ff	                      lea rax, [rdx - 1]	        24	abspath.c	FUNCTION_2	WHILE_2
0x4000164	      0x807c11ff2f	         cmp byte [rcx + rdx - 1], 0x2f 	        24	abspath.c	FUNCTION_2	WHILE_2
0x4000169	            0x749c	                            je 0x4000107	        24	abspath.c	FUNCTION_2	WHILE_2
0x400016b	          0x4889d0	                            mov rax, rdx	        24	abspath.c	FUNCTION_2	WHILE_2
0x400016e	            0xeb9c	                           jmp 0x400010c	        24	abspath.c	FUNCTION_2	WHILE_2
0x4000170	          0x4889c2	                            mov rdx, rax	        18	abspath.c	FUNCTION_2
0x4000173	          0x4889d0	                            mov rax, rdx	        24	abspath.c	FUNCTION_2	WHILE_2
0x4000176	            0xeb94	                           jmp 0x400010c	        24	abspath.c	FUNCTION_2	WHILE_2
0x4000178	        0x4883e801	                              sub rax, 1	        24	abspath.c	FUNCTION_2	WHILE_2
0x400017c	            0xeb89	                           jmp 0x4000107	        24	abspath.c	FUNCTION_2	WHILE_2
0x400017e	        0x4883c408	                              add rsp, 8	        28	abspath.c	FUNCTION_2
0x4000182	              0xc3	                                     ret	        28	abspath.c	FUNCTION_2
absolute_path	FOR,0:IF,0:SWITCH,0:WHILE,0:functions,0:DO,0:ELSE,0:CALL,1	20
0x4000775	        0x4883ec08	                              sub rsp, 8	       239	abspath.c	FUNCTION_9
0x4000779	    0x48c705000000	               mov qword [0x04000784], 0	       164	strbuf.h	FUNCTION_41
0x4000784	    0x488b05000000	            mov rax, qword [0x0400078b] 	       165	strbuf.h	FUNCTION_41	IF_2
0x400078b	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_41	IF_2
0x4000791	            0x7405	                            je 0x4000798	       165	strbuf.h	FUNCTION_41	IF_2
0x4000793	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_41	IF_2
0x4000796	            0xeb22	                           jmp 0x40007ba	       166	strbuf.h	FUNCTION_41	IF_2
0x4000798	    0x803d00000000	                cmp byte [0x0400079f], 0	       168	strbuf.h	FUNCTION_41	CALL_2
0x400079f	            0x7419	                            je 0x40007ba	       168	strbuf.h	FUNCTION_41	CALL_2
0x40007a1	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_41	CALL_2
0x40007a6	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_41	CALL_2
0x40007ab	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_41	CALL_2
0x40007b0	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_41	CALL_2
0x40007b5	      0xe800000000	                          call 0x40007ba	       168	strbuf.h	FUNCTION_41	CALL_2
0x40007ba	          0x4889fe	                            mov rsi, rdi	       242	abspath.c	FUNCTION_9	CALL_1
0x40007bd	      0xbf00000000	                              mov edi, 0	       242	abspath.c	FUNCTION_9	CALL_1
0x40007c2	      0xe800000000	                          call 0x40007c7	       242	abspath.c	FUNCTION_9	CALL_1
0x40007c7	    0x488b05000000	            mov rax, qword [0x040007ce] 	       244	abspath.c	FUNCTION_9
0x40007ce	        0x4883c408	                              add rsp, 8	       244	abspath.c	FUNCTION_9
0x40007d2	              0xc3	                                     ret	       244	abspath.c	FUNCTION_9
