cache_tree_matches_traversal	ELSE,0:SWITCH,0:IF,1:FOR,0:CALL,3:WHILE,0:DO,0:functions,0	35
0x4001650	              0x55	                                push rbp	       715	cache-tree.c	FUNCTION_24
0x4001651	              0x53	                                push rbx	       715	cache-tree.c	FUNCTION_24
0x4001652	          0x4889d0	                            mov rax, rdx	       715	cache-tree.c	FUNCTION_24
0x4001655	          0x4889f5	                            mov rbp, rsi	       715	cache-tree.c	FUNCTION_24
0x4001658	        0x4883c218	                           add rdx, 0x18	       715	cache-tree.c	FUNCTION_24
0x400165c	        0x4883ec08	                              sub rsp, 8	       715	cache-tree.c	FUNCTION_24
0x4001660	        0x488b7008	                mov rsi, qword [rax + 8]	       718	cache-tree.c	FUNCTION_24	CALL_1
0x4001664	      0xe807eeffff	call sym.find_cache_tree_from_traversal.isra.2	       718	cache-tree.c	FUNCTION_24	CALL_1
0x4001669	        0x488b7508	                mov rsi, qword [rbp + 8]	       719	cache-tree.c	FUNCTION_24	CALL_2
0x400166d	          0x4889c7	                            mov rdi, rax	       719	cache-tree.c	FUNCTION_24	CALL_2
0x4001670	      0xe86bedffff	                call sym.cache_tree_find	       719	cache-tree.c	FUNCTION_24	CALL_2
0x4001675	          0x4885c0	                           test rax, rax	       720	cache-tree.c	FUNCTION_24	IF_1	CALL_3
0x4001678	            0x742e	                            je 0x40016a8	       720	cache-tree.c	FUNCTION_24	IF_1	CALL_3
0x400167a	            0x8b18	                    mov ebx, dword [rax]	       720	cache-tree.c	FUNCTION_24	IF_1	CALL_3
0x400167c	            0x85db	                           test ebx, ebx	       720	cache-tree.c	FUNCTION_24	IF_1	CALL_3
0x400167e	            0x7e28	                           jle 0x40016a8	       720	cache-tree.c	FUNCTION_24	IF_1	CALL_3
0x4001680	        0x488b7d00	                    mov rdi, qword [rbp]	       975	cache.h	FUNCTION_33	CALL_1
0x4001684	        0x488d7004	                      lea rsi, [rax + 4]	       975	cache.h	FUNCTION_33	CALL_1
0x4001688	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_33	CALL_1
0x400168d	      0xe800000000	                          call 0x4001692	       975	cache.h	FUNCTION_33	CALL_1
0x4001692	            0x85c0	                           test eax, eax	       722	cache-tree.c	FUNCTION_24
0x4001694	      0xb800000000	                              mov eax, 0	       722	cache-tree.c	FUNCTION_24
0x4001699	           0xf45d8	                         cmovne ebx, eax	       722	cache-tree.c	FUNCTION_24
0x400169c	        0x4883c408	                              add rsp, 8	       723	cache-tree.c	FUNCTION_24
0x40016a0	            0x89d8	                            mov eax, ebx	       723	cache-tree.c	FUNCTION_24
0x40016a2	              0x5b	                                 pop rbx	       723	cache-tree.c	FUNCTION_24
0x40016a3	              0x5d	                                 pop rbp	       723	cache-tree.c	FUNCTION_24
0x40016a4	              0xc3	                                     ret	       723	cache-tree.c	FUNCTION_24
0x40016a5	           0xf1f00	                         nop dword [rax]	       723	cache-tree.c	FUNCTION_24
0x40016a8	            0x31db	                            xor ebx, ebx	       722	cache-tree.c	FUNCTION_24
0x40016aa	        0x4883c408	                              add rsp, 8	       723	cache-tree.c	FUNCTION_24
0x40016ae	            0x89d8	                            mov eax, ebx	       723	cache-tree.c	FUNCTION_24
0x40016b0	              0x5b	                                 pop rbx	       723	cache-tree.c	FUNCTION_24
0x40016b1	              0x5d	                                 pop rbp	       723	cache-tree.c	FUNCTION_24
0x40016b2	              0xc3	                                     ret	       723	cache-tree.c	FUNCTION_24
cache_tree_find	ELSE,0:SWITCH,0:IF,2:FOR,0:CALL,2:WHILE,2:DO,0:functions,0	47
0x40003e0	          0x4885ff	                           test rdi, rdi	       580	cache-tree.c	FUNCTION_18	IF_1
0x40003e3	            0x747a	                            je 0x400045f	       580	cache-tree.c	FUNCTION_18	IF_1
0x40003e5	            0x4154	                                push r12	       579	cache-tree.c	FUNCTION_18
0x40003e7	              0x55	                                push rbp	       579	cache-tree.c	FUNCTION_18
0x40003e8	          0x4989fc	                            mov r12, rdi	       579	cache-tree.c	FUNCTION_18
0x40003eb	              0x53	                                push rbx	       579	cache-tree.c	FUNCTION_18
0x40003ec	           0xfb616	                   movzx edx, byte [rsi]	       579	cache-tree.c	FUNCTION_18
0x40003ef	          0x4889f3	                            mov rbx, rsi	       579	cache-tree.c	FUNCTION_18
0x40003f2	            0x84d2	                             test dl, dl	       582	cache-tree.c	FUNCTION_18	WHILE_1
0x40003f4	            0x745a	                            je 0x4000450	       582	cache-tree.c	FUNCTION_18	WHILE_1
0x40003f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       582	cache-tree.c	FUNCTION_18	WHILE_1
0x4000400	      0xbe2f000000	                           mov esi, 0x2f	       586	cache-tree.c	FUNCTION_18	WHILE_1	CALL_1
0x4000405	          0x4889df	                            mov rdi, rbx	       586	cache-tree.c	FUNCTION_18	WHILE_1	CALL_1
0x4000408	      0xe800000000	                          call 0x400040d	       586	cache-tree.c	FUNCTION_18	WHILE_1	CALL_1
0x400040d	          0x4889c2	                            mov rdx, rax	       591	cache-tree.c	FUNCTION_18	WHILE_1	CALL_2
0x4000410	            0x31c9	                            xor ecx, ecx	       591	cache-tree.c	FUNCTION_18	WHILE_1	CALL_2
0x4000412	          0x4889de	                            mov rsi, rbx	       591	cache-tree.c	FUNCTION_18	WHILE_1	CALL_2
0x4000415	          0x4829da	                            sub rdx, rbx	       591	cache-tree.c	FUNCTION_18	WHILE_1	CALL_2
0x4000418	          0x4c89e7	                            mov rdi, r12	       591	cache-tree.c	FUNCTION_18	WHILE_1	CALL_2
0x400041b	          0x4889c5	                            mov rbp, rax	       586	cache-tree.c	FUNCTION_18	WHILE_1	CALL_1
0x400041e	      0xe80dfeffff	                   call sym.find_subtree	       591	cache-tree.c	FUNCTION_18	WHILE_1	CALL_2
0x4000423	          0x4885c0	                           test rax, rax	       592	cache-tree.c	FUNCTION_18	WHILE_1	IF_2
0x4000426	            0x7430	                            je 0x4000458	       592	cache-tree.c	FUNCTION_18	WHILE_1	IF_2
0x4000428	         0xfb65500	                   movzx edx, byte [rbp]	       597	cache-tree.c	FUNCTION_18	WHILE_1	WHILE_2
0x400042c	          0x4c8b20	                    mov r12, qword [rax]	       594	cache-tree.c	FUNCTION_18	WHILE_1
0x400042f	          0x4889eb	                            mov rbx, rbp	       597	cache-tree.c	FUNCTION_18	WHILE_1	WHILE_2
0x4000432	          0x80fa2f	                            cmp dl, 0x2f	       597	cache-tree.c	FUNCTION_18	WHILE_1	WHILE_2
0x4000435	            0x75bb	                           jne 0x40003f2	       597	cache-tree.c	FUNCTION_18	WHILE_1	WHILE_2
0x4000437	    0x660f1f840000	                    nop word [rax + rax]	       597	cache-tree.c	FUNCTION_18	WHILE_1	WHILE_2
0x4000440	        0x4883c301	                              add rbx, 1	       598	cache-tree.c	FUNCTION_18	WHILE_1	WHILE_2
0x4000444	           0xfb613	                   movzx edx, byte [rbx]	       597	cache-tree.c	FUNCTION_18	WHILE_1	WHILE_2
0x4000447	          0x80fa2f	                            cmp dl, 0x2f	       597	cache-tree.c	FUNCTION_18	WHILE_1	WHILE_2
0x400044a	            0x74f4	                            je 0x4000440	       597	cache-tree.c	FUNCTION_18	WHILE_1	WHILE_2
0x400044c	            0x84d2	                             test dl, dl	       582	cache-tree.c	FUNCTION_18	WHILE_1
0x400044e	            0x75b0	                           jne 0x4000400	       582	cache-tree.c	FUNCTION_18	WHILE_1
0x4000450	          0x4c89e0	                            mov rax, r12	       582	cache-tree.c	FUNCTION_18	WHILE_1
0x4000453	              0x5b	                                 pop rbx	       601	cache-tree.c	FUNCTION_18
0x4000454	              0x5d	                                 pop rbp	       601	cache-tree.c	FUNCTION_18
0x4000455	            0x415c	                                 pop r12	       601	cache-tree.c	FUNCTION_18
0x4000457	              0xc3	                                     ret	       601	cache-tree.c	FUNCTION_18
0x4000458	              0x5b	                                 pop rbx	       601	cache-tree.c	FUNCTION_18
0x4000459	            0x31c0	                            xor eax, eax	       581	cache-tree.c	FUNCTION_18	IF_1
0x400045b	              0x5d	                                 pop rbp	       601	cache-tree.c	FUNCTION_18
0x400045c	            0x415c	                                 pop r12	       601	cache-tree.c	FUNCTION_18
0x400045e	              0xc3	                                     ret	       601	cache-tree.c	FUNCTION_18
0x400045f	            0x31c0	                            xor eax, eax	       581	cache-tree.c	FUNCTION_18	IF_1
0x4000461	              0xc3	                                     ret	       601	cache-tree.c	FUNCTION_18
cache_tree_sub	ELSE,0:SWITCH,0:IF,0:FOR,0:CALL,2:WHILE,0:DO,0:functions,0	15
0x4000d90	              0x55	                                push rbp	        94	cache-tree.c	FUNCTION_6
0x4000d91	              0x53	                                push rbx	        94	cache-tree.c	FUNCTION_6
0x4000d92	          0x4889fd	                            mov rbp, rdi	        94	cache-tree.c	FUNCTION_6
0x4000d95	          0x4889f7	                            mov rdi, rsi	        95	cache-tree.c	FUNCTION_6	CALL_1
0x4000d98	          0x4889f3	                            mov rbx, rsi	        94	cache-tree.c	FUNCTION_6
0x4000d9b	        0x4883ec08	                              sub rsp, 8	        94	cache-tree.c	FUNCTION_6
0x4000d9f	      0xe800000000	                          call 0x4000da4	        95	cache-tree.c	FUNCTION_6	CALL_1
0x4000da4	        0x4883c408	                              add rsp, 8	        97	cache-tree.c	FUNCTION_6
0x4000da8	          0x4889de	                            mov rsi, rbx	        96	cache-tree.c	FUNCTION_6	CALL_2
0x4000dab	          0x4889ef	                            mov rdi, rbp	        96	cache-tree.c	FUNCTION_6	CALL_2
0x4000dae	              0x5b	                                 pop rbx	        97	cache-tree.c	FUNCTION_6
0x4000daf	              0x5d	                                 pop rbp	        97	cache-tree.c	FUNCTION_6
0x4000db0	      0xb901000000	                              mov ecx, 1	        96	cache-tree.c	FUNCTION_6	CALL_2
0x4000db5	            0x89c2	                            mov edx, eax	        96	cache-tree.c	FUNCTION_6	CALL_2
0x4000db7	      0xe974f4ffff	                    jmp sym.find_subtree	        96	cache-tree.c	FUNCTION_6	CALL_2
cache_tree_write	ELSE,0:SWITCH,0:IF,0:FOR,0:CALL,1:WHILE,0:DO,0:functions,0	3
0x40013e0	            0x31c9	                            xor ecx, ecx	       484	cache-tree.c	FUNCTION_15	CALL_1
0x40013e2	      0xba00000000	                              mov edx, 0	       484	cache-tree.c	FUNCTION_15	CALL_1
0x40013e7	      0xe954ecffff	                       jmp sym.write_one	       484	cache-tree.c	FUNCTION_15	CALL_1
write_cache_as_tree	ELSE,0:SWITCH,0:IF,0:FOR,0:CALL,2:WHILE,0:DO,0:functions,0	16
0x40015d0	            0x4154	                                push r12	       655	cache-tree.c	FUNCTION_20
0x40015d2	              0x55	                                push rbp	       655	cache-tree.c	FUNCTION_20
0x40015d3	          0x4989d4	                            mov r12, rdx	       655	cache-tree.c	FUNCTION_20
0x40015d6	              0x53	                                push rbx	       655	cache-tree.c	FUNCTION_20
0x40015d7	            0x89f5	                            mov ebp, esi	       655	cache-tree.c	FUNCTION_20
0x40015d9	          0x4889fb	                            mov rbx, rdi	       655	cache-tree.c	FUNCTION_20
0x40015dc	      0xe800000000	                          call 0x40015e1	       656	cache-tree.c	FUNCTION_20	CALL_2
0x40015e1	          0x4d89e0	                             mov r8, r12	       656	cache-tree.c	FUNCTION_20	CALL_2
0x40015e4	            0x89e9	                            mov ecx, ebp	       656	cache-tree.c	FUNCTION_20	CALL_2
0x40015e6	          0x4889df	                            mov rdi, rbx	       656	cache-tree.c	FUNCTION_20	CALL_2
0x40015e9	              0x5b	                                 pop rbx	       657	cache-tree.c	FUNCTION_20
0x40015ea	              0x5d	                                 pop rbp	       657	cache-tree.c	FUNCTION_20
0x40015eb	            0x415c	                                 pop r12	       657	cache-tree.c	FUNCTION_20
0x40015ed	          0x4889c2	                            mov rdx, rax	       656	cache-tree.c	FUNCTION_20	CALL_2
0x40015f0	      0xbe00000000	                              mov esi, 0	       656	cache-tree.c	FUNCTION_20	CALL_2
0x40015f5	      0xe926feffff	             jmp sym.write_index_as_tree	       656	cache-tree.c	FUNCTION_20	CALL_2
update_main_cache_tree	ELSE,0:SWITCH,0:IF,1:FOR,0:CALL,2:WHILE,0:DO,0:functions,0	18
0x40016c0	    0x48833d000000	               cmp qword [0x040016c8], 0	       727	cache-tree.c	FUNCTION_25	IF_1
0x40016c8	              0x53	                                push rbx	       726	cache-tree.c	FUNCTION_25
0x40016c9	            0x89fb	                            mov ebx, edi	       726	cache-tree.c	FUNCTION_25
0x40016cb	            0x7413	                            je 0x40016e0	       727	cache-tree.c	FUNCTION_25	IF_1
0x40016cd	            0x89de	                            mov esi, ebx	       729	cache-tree.c	FUNCTION_25	CALL_2
0x40016cf	      0xbf00000000	                              mov edi, 0	       729	cache-tree.c	FUNCTION_25	CALL_2
0x40016d4	              0x5b	                                 pop rbx	       730	cache-tree.c	FUNCTION_25
0x40016d5	      0xe9f6faffff	               jmp sym.cache_tree_update	       729	cache-tree.c	FUNCTION_25	CALL_2
0x40016da	    0x660f1f440000	                    nop word [rax + rax]	       729	cache-tree.c	FUNCTION_25	CALL_2
0x40016e0	      0xbe28000000	                           mov esi, 0x28	        13	cache-tree.c	FUNCTION_1	CALL_1
0x40016e5	      0xbf01000000	                              mov edi, 1	        13	cache-tree.c	FUNCTION_1	CALL_1
0x40016ea	      0xe800000000	                          call 0x40016ef	        13	cache-tree.c	FUNCTION_1	CALL_1
0x40016ef	            0x89de	                            mov esi, ebx	       729	cache-tree.c	FUNCTION_25	CALL_2
0x40016f1	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	        14	cache-tree.c	FUNCTION_1
0x40016f7	      0xbf00000000	                              mov edi, 0	       729	cache-tree.c	FUNCTION_25	CALL_2
0x40016fc	              0x5b	                                 pop rbx	       730	cache-tree.c	FUNCTION_25
0x40016fd	    0x488905000000	            mov qword [0x04001704], rax 	       728	cache-tree.c	FUNCTION_25	CALL_1
0x4001704	      0xe9c7faffff	               jmp sym.cache_tree_update	       729	cache-tree.c	FUNCTION_25	CALL_2
cache_tree_invalidate_path	ELSE,0:SWITCH,0:IF,1:FOR,0:CALL,1:WHILE,0:DO,0:functions,0	9
0x4001130	              0x53	                                push rbx	       146	cache-tree.c	FUNCTION_8
0x4001131	          0x4889fb	                            mov rbx, rdi	       146	cache-tree.c	FUNCTION_8
0x4001134	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	       147	cache-tree.c	FUNCTION_8	IF_1	CALL_1
0x4001138	      0xe813f4ffff	             call sym.do_invalidate_path	       147	cache-tree.c	FUNCTION_8	IF_1	CALL_1
0x400113d	            0x85c0	                           test eax, eax	       147	cache-tree.c	FUNCTION_8	IF_1	CALL_1
0x400113f	            0x7404	                            je 0x4001145	       147	cache-tree.c	FUNCTION_8	IF_1	CALL_1
0x4001141	        0x834b1420	             or dword [rbx + 0x14], 0x20	       148	cache-tree.c	FUNCTION_8	IF_1
0x4001145	              0x5b	                                 pop rbx	       149	cache-tree.c	FUNCTION_8
0x4001146	              0xc3	                                     ret	       149	cache-tree.c	FUNCTION_8
read_one	ELSE,1:SWITCH,0:IF,9:FOR,1:CALL,12:WHILE,2:DO,0:functions,0	159
0x4000dc0	            0x4157	                                push r15	       488	cache-tree.c	FUNCTION_16
0x4000dc2	            0x4156	                                push r14	       488	cache-tree.c	FUNCTION_16
0x4000dc4	            0x4155	                                push r13	       488	cache-tree.c	FUNCTION_16
0x4000dc6	            0x4154	                                push r12	       488	cache-tree.c	FUNCTION_16
0x4000dc8	              0x55	                                push rbp	       488	cache-tree.c	FUNCTION_16
0x4000dc9	              0x53	                                push rbx	       488	cache-tree.c	FUNCTION_16
0x4000dca	        0x4883ec48	                           sub rsp, 0x48	       488	cache-tree.c	FUNCTION_16
0x4000dce	          0x488b06	                    mov rax, qword [rsi]	       490	cache-tree.c	FUNCTION_16
0x4000dd1	          0x488b17	                    mov rdx, qword [rdi]	       489	cache-tree.c	FUNCTION_16
0x4000dd4	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	       488	cache-tree.c	FUNCTION_16
0x4000ddd	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       488	cache-tree.c	FUNCTION_16
0x4000de2	            0x31c9	                            xor ecx, ecx	       488	cache-tree.c	FUNCTION_16
0x4000de4	    0x488b0d000000	            mov rcx, qword [0x04000deb] 	       495	cache-tree.c	FUNCTION_16
0x4000deb	      0x48897c2408	                mov qword [rsp + 8], rdi	       488	cache-tree.c	FUNCTION_16
0x4000df0	          0x4885c0	                           test rax, rax	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000df3	      0x4889542418	             mov qword [rsp + 0x18], rdx	       489	cache-tree.c	FUNCTION_16
0x4000df8	      0x4889442420	             mov qword [rsp + 0x20], rax	       490	cache-tree.c	FUNCTION_16
0x4000dfd	    0x48c744243000	               mov qword [rsp + 0x30], 0	       497	cache-tree.c	FUNCTION_16
0x4000e06	        0x488b4958	            mov rcx, qword [rcx + 0x58] 	       495	cache-tree.c	FUNCTION_16
0x4000e0a	        0x488b5910	            mov rbx, qword [rcx + 0x10] 	       495	cache-tree.c	FUNCTION_16
0x4000e0e	            0x742c	                            je 0x4000e3c	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000e10	          0x803a00	                       cmp byte [rdx], 0	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000e13	          0x4989f4	                            mov r12, rsi	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000e16	            0x7453	                            je 0x4000e6b	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000e18	        0x4883e801	                              sub rax, 1	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000e1c	            0xeb0b	                           jmp 0x4000e29	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000e1e	            0x6690	                                     nop	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000e20	        0x4883e801	                              sub rax, 1	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000e24	          0x803a00	                       cmp byte [rdx], 0	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000e27	            0x7447	                            je 0x4000e70	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000e29	        0x4883c201	                              add rdx, 1	       501	cache-tree.c	FUNCTION_16	WHILE_1
0x4000e2d	          0x4885c0	                           test rax, rax	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000e30	      0x4889442420	             mov qword [rsp + 0x20], rax	       500	cache-tree.c	FUNCTION_16	WHILE_1
0x4000e35	      0x4889542418	             mov qword [rsp + 0x18], rdx	       501	cache-tree.c	FUNCTION_16	WHILE_1
0x4000e3a	            0x75e4	                           jne 0x4000e20	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4000e3c	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       567	cache-tree.c	FUNCTION_16	CALL_12
0x4000e41	      0xe800000000	                          call 0x4000e46	       567	cache-tree.c	FUNCTION_16	CALL_12
0x4000e46	            0x31c0	                            xor eax, eax	       568	cache-tree.c	FUNCTION_16
0x4000e48	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       569	cache-tree.c	FUNCTION_16
0x4000e4d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       569	cache-tree.c	FUNCTION_16
0x4000e56	     0xf85b2010000	                           jne 0x400100e	       569	cache-tree.c	FUNCTION_16
0x4000e5c	        0x4883c448	                           add rsp, 0x48	       569	cache-tree.c	FUNCTION_16
0x4000e60	              0x5b	                                 pop rbx	       569	cache-tree.c	FUNCTION_16
0x4000e61	              0x5d	                                 pop rbp	       569	cache-tree.c	FUNCTION_16
0x4000e62	            0x415c	                                 pop r12	       569	cache-tree.c	FUNCTION_16
0x4000e64	            0x415d	                                 pop r13	       569	cache-tree.c	FUNCTION_16
0x4000e66	            0x415e	                                 pop r14	       569	cache-tree.c	FUNCTION_16
0x4000e68	            0x415f	                                 pop r15	       569	cache-tree.c	FUNCTION_16
0x4000e6a	              0xc3	                                     ret	       569	cache-tree.c	FUNCTION_16
0x4000e6b	        0x4883e801	                              sub rax, 1	       569	cache-tree.c	FUNCTION_16
0x4000e6f	              0x90	                                     nop	       569	cache-tree.c	FUNCTION_16
0x4000e70	        0x4883c201	                              add rdx, 1	       505	cache-tree.c	FUNCTION_16
0x4000e74	      0xbe28000000	                           mov esi, 0x28	        13	cache-tree.c	FUNCTION_1	CALL_1
0x4000e79	      0xbf01000000	                              mov edi, 1	        13	cache-tree.c	FUNCTION_1	CALL_1
0x4000e7e	      0x4889542418	             mov qword [rsp + 0x18], rdx	       505	cache-tree.c	FUNCTION_16
0x4000e83	      0x4889442420	             mov qword [rsp + 0x20], rax	       505	cache-tree.c	FUNCTION_16
0x4000e88	      0xe800000000	                          call 0x4000e8d	        13	cache-tree.c	FUNCTION_1	CALL_1
0x4000e8d	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       508	cache-tree.c	FUNCTION_16
0x4000e92	      0x488d742428	                   lea rsi, [rsp + 0x28]	       509	cache-tree.c	FUNCTION_16	CALL_2
0x4000e97	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	        14	cache-tree.c	FUNCTION_1
0x4000e9d	      0xba0a000000	                            mov edx, 0xa	       509	cache-tree.c	FUNCTION_16	CALL_2
0x4000ea2	          0x4989c5	                            mov r13, rax	        13	cache-tree.c	FUNCTION_1	CALL_1
0x4000ea5	      0x4889442430	             mov qword [rsp + 0x30], rax	       506	cache-tree.c	FUNCTION_16	CALL_1
0x4000eaa	          0x4c89ff	                            mov rdi, r15	       509	cache-tree.c	FUNCTION_16	CALL_2
0x4000ead	      0xe800000000	                          call 0x4000eb2	       509	cache-tree.c	FUNCTION_16	CALL_2
0x4000eb2	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	       510	cache-tree.c	FUNCTION_16	IF_2
0x4000eb7	        0x41894500	                    mov dword [r13], eax	       509	cache-tree.c	FUNCTION_16	CALL_2
0x4000ebb	          0x4d39f7	                            cmp r15, r14	       510	cache-tree.c	FUNCTION_16	IF_2
0x4000ebe	     0xf8478ffffff	                            je 0x4000e3c	       510	cache-tree.c	FUNCTION_16	IF_2
0x4000ec4	      0x488d742428	                   lea rsi, [rsp + 0x28]	       513	cache-tree.c	FUNCTION_16	CALL_3
0x4000ec9	      0xba0a000000	                            mov edx, 0xa	       513	cache-tree.c	FUNCTION_16	CALL_3
0x4000ece	          0x4c89f7	                            mov rdi, r14	       513	cache-tree.c	FUNCTION_16	CALL_3
0x4000ed1	      0xe800000000	                          call 0x4000ed6	       513	cache-tree.c	FUNCTION_16	CALL_3
0x4000ed6	      0x4c3b742428	            cmp r14, qword [rsp + 0x28] 	       514	cache-tree.c	FUNCTION_16	IF_3
0x4000edb	          0x4989c5	                            mov r13, rax	       513	cache-tree.c	FUNCTION_16	CALL_3
0x4000ede	     0xf8458ffffff	                            je 0x4000e3c	       514	cache-tree.c	FUNCTION_16	IF_3
0x4000ee4	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000ee9	          0x4885c0	                           test rax, rax	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000eec	     0xf844affffff	                            je 0x4000e3c	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000ef2	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000ef7	           0xfb616	                   movzx edx, byte [rsi]	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000efa	          0x80fa0a	                             cmp dl, 0xa	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000efd	            0x7439	                            je 0x4000f38	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000eff	            0x84d2	                             test dl, dl	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000f01	            0x7435	                            je 0x4000f38	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000f03	        0x4883e801	                              sub rax, 1	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000f07	            0xeb17	                           jmp 0x4000f20	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000f09	     0xf1f80000000	                         nop dword [rax]	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000f10	           0xfb616	                   movzx edx, byte [rsi]	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000f13	        0x4883e801	                              sub rax, 1	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000f17	            0x84d2	                             test dl, dl	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000f19	            0x7425	                            je 0x4000f40	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000f1b	          0x80fa0a	                             cmp dl, 0xa	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000f1e	            0x7420	                            je 0x4000f40	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000f20	        0x4883c601	                              add rsi, 1	       518	cache-tree.c	FUNCTION_16	WHILE_2
0x4000f24	          0x4885c0	                           test rax, rax	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000f27	      0x4889442420	             mov qword [rsp + 0x20], rax	       517	cache-tree.c	FUNCTION_16	WHILE_2
0x4000f2c	      0x4889742418	             mov qword [rsp + 0x18], rsi	       518	cache-tree.c	FUNCTION_16	WHILE_2
0x4000f31	            0x75dd	                           jne 0x4000f10	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000f33	      0xe904ffffff	                           jmp 0x4000e3c	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000f38	        0x4883e801	                              sub rax, 1	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000f3c	         0xf1f4000	                         nop dword [rax]	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4000f40	      0x4c8b742430	            mov r14, qword [rsp + 0x30] 	       523	cache-tree.c	FUNCTION_16	IF_5
0x4000f45	        0x4883c601	                              add rsi, 1	       522	cache-tree.c	FUNCTION_16
0x4000f49	      0x4889442420	             mov qword [rsp + 0x20], rax	       522	cache-tree.c	FUNCTION_16
0x4000f4e	      0x4889742418	             mov qword [rsp + 0x18], rsi	       522	cache-tree.c	FUNCTION_16
0x4000f53	          0x418b16	                    mov edx, dword [r14]	       523	cache-tree.c	FUNCTION_16	IF_5
0x4000f56	            0x85d2	                           test edx, edx	       523	cache-tree.c	FUNCTION_16	IF_5
0x4000f58	            0x7826	                            js 0x4000f80	       523	cache-tree.c	FUNCTION_16	IF_5
0x4000f5a	            0x89db	                            mov ebx, ebx	       523	cache-tree.c	FUNCTION_16	IF_5
0x4000f5c	          0x4839d8	                            cmp rax, rbx	       524	cache-tree.c	FUNCTION_16	IF_5	IF_6
0x4000f5f	     0xf82d7feffff	                            jb 0x4000e3c	       524	cache-tree.c	FUNCTION_16	IF_5	IF_6
0x4000f65	        0x498d7e04	                      lea rdi, [r14 + 4]	        53	string3.h	FUNCTION_53	CALL_3
0x4000f69	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_53	CALL_3
0x4000f6c	      0xe800000000	                          call 0x4000f71	        53	string3.h	FUNCTION_53	CALL_3
0x4000f71	      0x48015c2418	            add qword [rsp + 0x18], rbx 	       527	cache-tree.c	FUNCTION_16	IF_5
0x4000f76	      0x48295c2420	             sub qword [rsp + 0x20], rbx	       528	cache-tree.c	FUNCTION_16	IF_5
0x4000f7b	      0x4c8b742430	            mov r14, qword [rsp + 0x30] 	       528	cache-tree.c	FUNCTION_16	IF_5
0x4000f80	        0x418d7d02	                      lea edi, [r13 + 2]	       546	cache-tree.c	FUNCTION_16
0x4000f84	      0xbe08000000	                              mov esi, 8	       547	cache-tree.c	FUNCTION_16	CALL_8
0x4000f89	            0x31db	                            xor ebx, ebx	       548	cache-tree.c	FUNCTION_16	FOR_1
0x4000f8b	          0x4589ef	                          mov r15d, r13d	       513	cache-tree.c	FUNCTION_16	CALL_3
0x4000f8e	        0x41897e1c	             mov dword [r14 + 0x1c], edi	       546	cache-tree.c	FUNCTION_16
0x4000f92	          0x4863ff	                         movsxd rdi, edi	       547	cache-tree.c	FUNCTION_16	CALL_8
0x4000f95	      0xe800000000	                          call 0x4000f9a	       547	cache-tree.c	FUNCTION_16	CALL_8
0x4000f9a	          0x4585ed	                         test r13d, r13d	       548	cache-tree.c	FUNCTION_16	FOR_1
0x4000f9d	        0x49894620	             mov qword [r14 + 0x20], rax	       547	cache-tree.c	FUNCTION_16	CALL_8
0x4000fa1	            0x7f1d	                            jg 0x4000fc0	       548	cache-tree.c	FUNCTION_16	FOR_1
0x4000fa3	            0xeb43	                           jmp 0x4000fe8	       548	cache-tree.c	FUNCTION_16	FOR_1
0x4000fa5	           0xf1f00	                         nop dword [rax]	       548	cache-tree.c	FUNCTION_16	FOR_1
0x4000fa8	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       557	cache-tree.c	FUNCTION_16	FOR_1	CALL_10
0x4000fad	          0x4c89f6	                            mov rsi, r14	       557	cache-tree.c	FUNCTION_16	FOR_1	CALL_10
0x4000fb0	          0x83c301	                              add ebx, 1	       548	cache-tree.c	FUNCTION_16	FOR_1
0x4000fb3	      0xe800000000	                          call 0x4000fb8	       557	cache-tree.c	FUNCTION_16	FOR_1	CALL_10
0x4000fb8	          0x4139df	                           cmp r15d, ebx	       548	cache-tree.c	FUNCTION_16	FOR_1
0x4000fbb	          0x488928	                    mov qword [rax], rbp	       558	cache-tree.c	FUNCTION_16	FOR_1
0x4000fbe	            0x7428	                            je 0x4000fe8	       548	cache-tree.c	FUNCTION_16	FOR_1
0x4000fc0	      0x488d742420	                   lea rsi, [rsp + 0x20]	       554	cache-tree.c	FUNCTION_16	FOR_1	CALL_9
0x4000fc5	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	       554	cache-tree.c	FUNCTION_16	FOR_1	CALL_9
0x4000fca	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	       552	cache-tree.c	FUNCTION_16	FOR_1
0x4000fcf	      0xe8ecfdffff	                       call sym.read_one	       554	cache-tree.c	FUNCTION_16	FOR_1	CALL_9
0x4000fd4	          0x4885c0	                           test rax, rax	       555	cache-tree.c	FUNCTION_16	FOR_1	IF_8
0x4000fd7	          0x4889c5	                            mov rbp, rax	       554	cache-tree.c	FUNCTION_16	FOR_1	CALL_9
0x4000fda	            0x75cc	                           jne 0x4000fa8	       555	cache-tree.c	FUNCTION_16	FOR_1	IF_8
0x4000fdc	      0xe95bfeffff	                           jmp 0x4000e3c	       555	cache-tree.c	FUNCTION_16	FOR_1	IF_8
0x4000fe1	     0xf1f80000000	                         nop dword [rax]	       555	cache-tree.c	FUNCTION_16	FOR_1	IF_8
0x4000fe8	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       560	cache-tree.c	FUNCTION_16	IF_9
0x4000fed	        0x443b6818	           cmp r13d, dword [rax + 0x18] 	       560	cache-tree.c	FUNCTION_16	IF_9
0x4000ff1	            0x7520	                           jne 0x4001013	       560	cache-tree.c	FUNCTION_16	IF_9
0x4000ff3	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       562	cache-tree.c	FUNCTION_16
0x4000ff8	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       562	cache-tree.c	FUNCTION_16
0x4000ffd	          0x488911	                    mov qword [rcx], rdx	       562	cache-tree.c	FUNCTION_16
0x4001000	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       563	cache-tree.c	FUNCTION_16
0x4001005	        0x49891424	                    mov qword [r12], rdx	       563	cache-tree.c	FUNCTION_16
0x4001009	      0xe93afeffff	                           jmp 0x4000e48	       564	cache-tree.c	FUNCTION_16
0x400100e	      0xe800000000	                          call 0x4001013	       569	cache-tree.c	FUNCTION_16
0x4001013	      0xbf00000000	                              mov edi, 0	       561	cache-tree.c	FUNCTION_16	CALL_11
0x4001018	            0x31c0	                            xor eax, eax	       561	cache-tree.c	FUNCTION_16	CALL_11
0x400101a	      0xe800000000	                          call 0x400101f	       561	cache-tree.c	FUNCTION_16	CALL_11
cache_tree_read	ELSE,0:SWITCH,0:IF,1:FOR,0:CALL,1:WHILE,0:DO,0:functions,0	11
0x40013f0	        0x4883ec18	                           sub rsp, 0x18	       572	cache-tree.c	FUNCTION_17
0x40013f4	            0x31c0	                            xor eax, eax	       572	cache-tree.c	FUNCTION_17
0x40013f6	      0x48897c2408	                mov qword [rsp + 8], rdi	       572	cache-tree.c	FUNCTION_17
0x40013fb	        0x48893424	                    mov qword [rsp], rsi	       572	cache-tree.c	FUNCTION_17
0x40013ff	          0x803f00	                       cmp byte [rdi], 0	       573	cache-tree.c	FUNCTION_17	IF_1
0x4001402	            0x750d	                           jne 0x4001411	       573	cache-tree.c	FUNCTION_17	IF_1
0x4001404	      0x488d7c2408	                      lea rdi, [rsp + 8]	       575	cache-tree.c	FUNCTION_17	CALL_1
0x4001409	          0x4889e6	                            mov rsi, rsp	       575	cache-tree.c	FUNCTION_17	CALL_1
0x400140c	      0xe8aff9ffff	                       call sym.read_one	       575	cache-tree.c	FUNCTION_17	CALL_1
0x4001411	        0x4883c418	                           add rsp, 0x18	       576	cache-tree.c	FUNCTION_17
0x4001415	              0xc3	                                     ret	       576	cache-tree.c	FUNCTION_17
update_one	ELSE,4:SWITCH,0:IF,19:FOR,1:CALL,36:WHILE,2:DO,0:functions,0	432
0x4000670	            0x4157	                                push r15	       242	cache-tree.c	FUNCTION_12
0x4000672	            0x4156	                                push r14	       242	cache-tree.c	FUNCTION_12
0x4000674	            0x4155	                                push r13	       242	cache-tree.c	FUNCTION_12
0x4000676	            0x4154	                                push r12	       242	cache-tree.c	FUNCTION_12
0x4000678	              0x55	                                push rbp	       242	cache-tree.c	FUNCTION_12
0x4000679	              0x53	                                push rbx	       242	cache-tree.c	FUNCTION_12
0x400067a	    0x4881eca80000	                           sub rsp, 0xa8	       242	cache-tree.c	FUNCTION_12
0x4000681	    0x64488b042528	                mov rax, qword fs:[0x28]	       242	cache-tree.c	FUNCTION_12
0x400068a	    0x488984249800	             mov qword [rsp + 0x98], rax	       242	cache-tree.c	FUNCTION_12
0x4000692	            0x31c0	                            xor eax, eax	       242	cache-tree.c	FUNCTION_12
0x4000694	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       242	cache-tree.c	FUNCTION_12
0x4000699	    0x8b8424e00000	            mov eax, dword [rsp + 0xe0] 	       246	cache-tree.c	FUNCTION_12
0x40006a0	    0x8b8c24e00000	            mov ecx, dword [rsp + 0xe0] 	       250	cache-tree.c	FUNCTION_12	CALL_1
0x40006a7	      0x48897c2418	             mov qword [rsp + 0x18], rdi	       242	cache-tree.c	FUNCTION_12
0x40006ac	      0x4889742408	                mov qword [rsp + 8], rsi	       242	cache-tree.c	FUNCTION_12
0x40006b1	        0x89542404	                mov dword [rsp + 4], edx	       242	cache-tree.c	FUNCTION_12
0x40006b5	          0x83e010	                           and eax, 0x10	       246	cache-tree.c	FUNCTION_12
0x40006b8	      0x4489442430	             mov dword [rsp + 0x30], r8d	       242	cache-tree.c	FUNCTION_12
0x40006bd	      0x4c894c2428	              mov qword [rsp + 0x28], r9	       242	cache-tree.c	FUNCTION_12
0x40006c2	          0x83e104	                              and ecx, 4	       250	cache-tree.c	FUNCTION_12	CALL_1
0x40006c5	        0x89442458	             mov dword [rsp + 0x58], eax	       246	cache-tree.c	FUNCTION_12
0x40006c9	        0x894c245c	             mov dword [rsp + 0x5c], ecx	       250	cache-tree.c	FUNCTION_12	CALL_1
0x40006cd	            0x7408	                            je 0x40006d7	       250	cache-tree.c	FUNCTION_12	CALL_1
0x40006cf	            0x85c0	                           test eax, eax	       250	cache-tree.c	FUNCTION_12	CALL_1
0x40006d1	     0xf8596060000	                           jne 0x4000d6d	       250	cache-tree.c	FUNCTION_12	CALL_1
0x40006d7	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       252	cache-tree.c	FUNCTION_12
0x40006dc	    0xc70000000000	                      mov dword [rax], 0	       252	cache-tree.c	FUNCTION_12
0x40006e2	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       254	cache-tree.c	FUNCTION_12	IF_1	CALL_2
0x40006e7	            0x8b38	                    mov edi, dword [rax]	       254	cache-tree.c	FUNCTION_12	IF_1	CALL_2
0x40006e9	            0x85ff	                           test edi, edi	       254	cache-tree.c	FUNCTION_12	IF_1	CALL_2
0x40006eb	            0x7818	                            js 0x4000705	       254	cache-tree.c	FUNCTION_12	IF_1	CALL_2
0x40006ed	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       254	cache-tree.c	FUNCTION_12	IF_1	CALL_2
0x40006f2	            0x31f6	                            xor esi, esi	      1251	cache.h	FUNCTION_48	CALL_1
0x40006f4	        0x488d7804	                      lea rdi, [rax + 4]	       254	cache-tree.c	FUNCTION_12	IF_1	CALL_2
0x40006f8	      0xe800000000	                          call 0x40006fd	      1251	cache.h	FUNCTION_48	CALL_1
0x40006fd	            0x85c0	                           test eax, eax	       254	cache-tree.c	FUNCTION_12	IF_1	CALL_2
0x40006ff	     0xf85eb040000	                           jne 0x4000bf0	       254	cache-tree.c	FUNCTION_12	IF_1	CALL_2
0x4000705	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       262	cache-tree.c	FUNCTION_12	FOR_1
0x400070a	          0x8b5018	            mov edx, dword [rax + 0x18] 	       262	cache-tree.c	FUNCTION_12	FOR_1
0x400070d	            0x85d2	                           test edx, edx	       262	cache-tree.c	FUNCTION_12	FOR_1
0x400070f	            0x7e2a	                           jle 0x400073b	       262	cache-tree.c	FUNCTION_12	FOR_1
0x4000711	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       262	cache-tree.c	FUNCTION_12	FOR_1
0x4000716	          0x83ea01	                              sub edx, 1	       262	cache-tree.c	FUNCTION_12	FOR_1
0x4000719	        0x488b4020	            mov rax, qword [rax + 0x20] 	       262	cache-tree.c	FUNCTION_12	FOR_1
0x400071d	      0x488d4cd008	              lea rcx, [rax + rdx*8 + 8]	       262	cache-tree.c	FUNCTION_12	FOR_1
0x4000722	    0x660f1f440000	                    nop word [rax + rax]	       262	cache-tree.c	FUNCTION_12	FOR_1
0x4000728	          0x488b10	                    mov rdx, qword [rax]	       263	cache-tree.c	FUNCTION_12	FOR_1
0x400072b	        0x4883c008	                              add rax, 8	       263	cache-tree.c	FUNCTION_12	FOR_1
0x400072f	          0x4839c8	                            cmp rax, rcx	       262	cache-tree.c	FUNCTION_12	FOR_1
0x4000732	    0xc74210000000	               mov dword [rdx + 0x10], 0	       263	cache-tree.c	FUNCTION_12	FOR_1
0x4000739	            0x75ed	                           jne 0x4000728	       262	cache-tree.c	FUNCTION_12	FOR_1
0x400073b	        0x8b742404	                mov esi, dword [rsp + 4]	       269	cache-tree.c	FUNCTION_12	WHILE_1
0x400073f	            0x85f6	                           test esi, esi	       269	cache-tree.c	FUNCTION_12	WHILE_1
0x4000741	     0xf8e9d050000	                           jle 0x4000ce4	       269	cache-tree.c	FUNCTION_12	WHILE_1
0x4000747	      0x488b442408	                mov rax, qword [rsp + 8]	       270	cache-tree.c	FUNCTION_12	WHILE_1
0x400074c	        0x8b4c2430	            mov ecx, dword [rsp + 0x30] 	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x4000750	          0x488b00	                    mov rax, qword [rax]	       270	cache-tree.c	FUNCTION_12	WHILE_1
0x4000753	          0x3b483c	            cmp ecx, dword [rax + 0x3c] 	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x4000756	        0x4c8d6058	                   lea r12, [rax + 0x58]	       275	cache-tree.c	FUNCTION_12	WHILE_1
0x400075a	     0xf8db6050000	                           jge 0x4000d16	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x4000760	      0x4c63742430	         movsxd r14, dword [rsp + 0x30] 	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x4000765	      0x488d742460	                   lea rsi, [rsp + 0x60]	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x400076a	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x400076f	            0x31db	                            xor ebx, ebx	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x4000771	      0x4889742438	             mov qword [rsp + 0x38], rsi	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x4000776	          0x4489f5	                           mov ebp, r14d	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x4000779	      0xe9a1000000	                           jmp 0x400081f	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x400077e	            0x6690	                                     nop	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x4000780	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       291	cache-tree.c	FUNCTION_12	WHILE_1	CALL_6
0x4000785	          0x4c29f8	                            sub rax, r15	       290	cache-tree.c	FUNCTION_12	WHILE_1
0x4000788	          0x4c89fe	                            mov rsi, r15	       291	cache-tree.c	FUNCTION_12	WHILE_1	CALL_6
0x400078b	      0xb901000000	                              mov ecx, 1	       291	cache-tree.c	FUNCTION_12	WHILE_1	CALL_6
0x4000790	            0x89c2	                            mov edx, eax	       291	cache-tree.c	FUNCTION_12	WHILE_1	CALL_6
0x4000792	      0x4889442420	             mov qword [rsp + 0x20], rax	       291	cache-tree.c	FUNCTION_12	WHILE_1	CALL_6
0x4000797	      0xe894faffff	                   call sym.find_subtree	       291	cache-tree.c	FUNCTION_12	WHILE_1	CALL_6
0x400079c	          0x488b38	                    mov rdi, qword [rax]	       292	cache-tree.c	FUNCTION_12	WHILE_1	IF_4
0x400079f	          0x4989c7	                            mov r15, rax	       291	cache-tree.c	FUNCTION_12	WHILE_1	CALL_6
0x40007a2	      0x4c8b5c2420	            mov r11, qword [rsp + 0x20] 	       292	cache-tree.c	FUNCTION_12	WHILE_1	IF_4
0x40007a7	          0x4885ff	                           test rdi, rdi	       292	cache-tree.c	FUNCTION_12	WHILE_1	IF_4
0x40007aa	     0xf8478040000	                            je 0x4000c28	       292	cache-tree.c	FUNCTION_12	WHILE_1	IF_4
0x40007b0	        0x8b542404	                mov edx, dword [rsp + 4]	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x40007b4	        0x4883ec08	                              sub rsp, 8	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x40007b8	      0x468d441d01	                lea r8d, [rbp + r11 + 1]	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x40007bd	    0x8b8424e80000	            mov eax, dword [rsp + 0xe8] 	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x40007c4	          0x4c89e1	                            mov rcx, r12	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x40007c7	          0x4c89ee	                            mov rsi, r13	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x40007ca	            0x29da	                            sub edx, ebx	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x40007cc	              0x50	                                push rax	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x40007cd	      0x4c8b4c2448	              mov r9, qword [rsp + 0x48]	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x40007d2	      0xe899feffff	                     call sym.update_one	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x40007d7	            0x85c0	                           test eax, eax	       300	cache-tree.c	FUNCTION_12	WHILE_1	IF_5
0x40007d9	              0x5a	                                 pop rdx	       300	cache-tree.c	FUNCTION_12	WHILE_1	IF_5
0x40007da	              0x59	                                 pop rcx	       300	cache-tree.c	FUNCTION_12	WHILE_1	IF_5
0x40007db	     0xf887f040000	                            js 0x4000c60	       300	cache-tree.c	FUNCTION_12	WHILE_1	IF_5
0x40007e1	     0xf843e050000	                            je 0x4000d25	       302	cache-tree.c	FUNCTION_12	WHILE_1	IF_6
0x40007e7	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       306	cache-tree.c	FUNCTION_12	WHILE_1
0x40007ec	             0x1c3	                            add ebx, eax	       304	cache-tree.c	FUNCTION_12	WHILE_1
0x40007ee	        0x41894708	                mov dword [r15 + 8], eax	       305	cache-tree.c	FUNCTION_12	WHILE_1
0x40007f2	        0x8b442460	            mov eax, dword [rsp + 0x60] 	       306	cache-tree.c	FUNCTION_12	WHILE_1
0x40007f6	             0x106	                    add dword [rsi], eax	       306	cache-tree.c	FUNCTION_12	WHILE_1
0x40007f8	        0x395c2404	                cmp dword [rsp + 4], ebx	       269	cache-tree.c	FUNCTION_12	WHILE_1
0x40007fc	    0x41c747100100	               mov dword [r15 + 0x10], 1	       307	cache-tree.c	FUNCTION_12	WHILE_1
0x4000804	            0x7e5a	                           jle 0x4000860	       269	cache-tree.c	FUNCTION_12	WHILE_1
0x4000806	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       270	cache-tree.c	FUNCTION_12	WHILE_1
0x400080b	          0x4863c3	                         movsxd rax, ebx	       270	cache-tree.c	FUNCTION_12	WHILE_1
0x400080e	        0x4c8d2cc1	                  lea r13, [rcx + rax*8]	       270	cache-tree.c	FUNCTION_12	WHILE_1
0x4000812	        0x498b4500	                    mov rax, qword [r13]	       270	cache-tree.c	FUNCTION_12	WHILE_1
0x4000816	          0x39683c	            cmp dword [rax + 0x3c], ebp 	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x4000819	        0x4c8d6058	                   lea r12, [rax + 0x58]	       275	cache-tree.c	FUNCTION_12	WHILE_1
0x400081d	            0x7e41	                           jle 0x4000860	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x400081f	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x4000824	          0x4c89f2	                            mov rdx, r14	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x4000827	          0x4c89e6	                            mov rsi, r12	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x400082a	      0xe800000000	                          call 0x400082f	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x400082f	            0x85c0	                           test eax, eax	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x4000831	            0x752d	                           jne 0x4000860	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_4
0x4000833	        0x4f8d3c34	                    lea r15, [r12 + r14]	       280	cache-tree.c	FUNCTION_12	WHILE_1	CALL_5
0x4000837	      0xbe2f000000	                           mov esi, 0x2f	       280	cache-tree.c	FUNCTION_12	WHILE_1	CALL_5
0x400083c	          0x4c89ff	                            mov rdi, r15	       280	cache-tree.c	FUNCTION_12	WHILE_1	CALL_5
0x400083f	      0xe800000000	                          call 0x4000844	       280	cache-tree.c	FUNCTION_12	WHILE_1	CALL_5
0x4000844	          0x4885c0	                           test rax, rax	       281	cache-tree.c	FUNCTION_12	WHILE_1	IF_3
0x4000847	     0xf8533ffffff	                           jne 0x4000780	       281	cache-tree.c	FUNCTION_12	WHILE_1	IF_3
0x400084d	          0x83c301	                              add ebx, 1	       282	cache-tree.c	FUNCTION_12	WHILE_1	IF_3
0x4000850	        0x395c2404	                cmp dword [rsp + 4], ebx	       269	cache-tree.c	FUNCTION_12	WHILE_1
0x4000854	            0x7fb0	                            jg 0x4000806	       269	cache-tree.c	FUNCTION_12	WHILE_1
0x4000856	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       269	cache-tree.c	FUNCTION_12	WHILE_1
0x4000860	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       269	cache-tree.c	FUNCTION_12	WHILE_1
0x4000865	        0x448b7818	           mov r15d, dword [rax + 0x18] 	       207	cache-tree.c	FUNCTION_10
0x4000869	        0x4c8b7020	            mov r14, qword [rax + 0x20] 	       207	cache-tree.c	FUNCTION_10
0x400086d	          0x4585ff	                         test r15d, r15d	       209	cache-tree.c	FUNCTION_10	FOR_1
0x4000870	     0xf8e2e040000	                           jle 0x4000ca4	       209	cache-tree.c	FUNCTION_10	FOR_1
0x4000876	            0x31db	                            xor ebx, ebx	       293	cache-tree.c	FUNCTION_12	WHILE_1	CALL_7
0x4000878	          0x4531ed	                          xor r13d, r13d	       293	cache-tree.c	FUNCTION_12	WHILE_1	CALL_7
0x400087b	      0x4c8b642418	            mov r12, qword [rsp + 0x18] 	       293	cache-tree.c	FUNCTION_12	WHILE_1	CALL_7
0x4000880	            0xeb1a	                           jmp 0x400089c	       293	cache-tree.c	FUNCTION_12	WHILE_1	CALL_7
0x4000882	    0x660f1f440000	                    nop word [rax + rax]	       293	cache-tree.c	FUNCTION_12	WHILE_1	CALL_7
0x4000888	        0x4883c301	                              add rbx, 1	       293	cache-tree.c	FUNCTION_12	WHILE_1	CALL_7
0x400088c	          0x4963c5	                        movsxd rax, r13d	       212	cache-tree.c	FUNCTION_10	FOR_1	IF_1
0x400088f	        0x4183c501	                             add r13d, 1	       212	cache-tree.c	FUNCTION_10	FOR_1	IF_1
0x4000893	          0x4139df	                           cmp r15d, ebx	       209	cache-tree.c	FUNCTION_10	FOR_1
0x4000896	        0x49892cc6	            mov qword [r14 + rax*8], rbp	       212	cache-tree.c	FUNCTION_10	FOR_1	IF_1
0x400089a	            0x7e2a	                           jle 0x40008c6	       209	cache-tree.c	FUNCTION_10	FOR_1
0x400089c	        0x498b2cde	            mov rbp, qword [r14 + rbx*8]	       210	cache-tree.c	FUNCTION_10	FOR_1
0x40008a0	          0x8b4510	            mov eax, dword [rbp + 0x10] 	       211	cache-tree.c	FUNCTION_10	FOR_1	IF_1
0x40008a3	            0x85c0	                           test eax, eax	       211	cache-tree.c	FUNCTION_10	FOR_1	IF_1
0x40008a5	            0x75e1	                           jne 0x4000888	       211	cache-tree.c	FUNCTION_10	FOR_1	IF_1
0x40008a7	          0x4889ef	                            mov rdi, rbp	       214	cache-tree.c	FUNCTION_10	FOR_1	ELSE_1	CALL_1
0x40008aa	        0x4883c301	                              add rbx, 1	       214	cache-tree.c	FUNCTION_10	FOR_1	ELSE_1	CALL_1
0x40008ae	      0xe800000000	                          call 0x40008b3	       214	cache-tree.c	FUNCTION_10	FOR_1	ELSE_1	CALL_1
0x40008b3	          0x4889ef	                            mov rdi, rbp	       215	cache-tree.c	FUNCTION_10	FOR_1	ELSE_1	CALL_2
0x40008b6	      0xe800000000	                          call 0x40008bb	       215	cache-tree.c	FUNCTION_10	FOR_1	ELSE_1	CALL_2
0x40008bb	    0x41836c241801	               sub dword [r12 + 0x18], 1	       216	cache-tree.c	FUNCTION_10	FOR_1	ELSE_1
0x40008c1	          0x4139df	                           cmp r15d, ebx	       209	cache-tree.c	FUNCTION_10	FOR_1
0x40008c4	            0x7fd6	                            jg 0x400089c	       209	cache-tree.c	FUNCTION_10	FOR_1
0x40008c6	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       315	cache-tree.c	FUNCTION_12	CALL_11
0x40008cb	      0xbe00200000	                         mov esi, 0x2000	       315	cache-tree.c	FUNCTION_12	CALL_11
0x40008d0	      0xe800000000	                          call 0x40008d5	       315	cache-tree.c	FUNCTION_12	CALL_11
0x40008d5	        0x8b5c2404	                mov ebx, dword [rsp + 4]	       318	cache-tree.c	FUNCTION_12	WHILE_2
0x40008d9	            0x85db	                           test ebx, ebx	       318	cache-tree.c	FUNCTION_12	WHILE_2
0x40008db	     0xf8e25040000	                           jle 0x4000d06	       318	cache-tree.c	FUNCTION_12	WHILE_2
0x40008e1	      0x488b442408	                mov rax, qword [rsp + 8]	       319	cache-tree.c	FUNCTION_12	WHILE_2
0x40008e6	          0x488b18	                    mov rbx, qword [rax]	       319	cache-tree.c	FUNCTION_12	WHILE_2
0x40008e9	      0x4863442430	         movsxd rax, dword [rsp + 0x30] 	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x40008ee	        0x448b733c	           mov r14d, dword [rbx + 0x3c] 	       329	cache-tree.c	FUNCTION_12	WHILE_2	CALL_12
0x40008f2	        0x4c8d6358	                   lea r12, [rbx + 0x58]	       328	cache-tree.c	FUNCTION_12	WHILE_2
0x40008f6	          0x4439f0	                           cmp eax, r14d	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x40008f9	     0xf8d07040000	                           jge 0x4000d06	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x40008ff	    0x8bac24e00000	            mov ebp, dword [rsp + 0xe0] 	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x4000906	      0x4889442448	             mov qword [rsp + 0x48], rax	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x400090b	          0x4531ff	                          xor r15d, r15d	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x400090e	    0xc74424340000	               mov dword [rsp + 0x34], 0	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x4000916	          0x83e501	                              and ebp, 1	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x4000919	          0x83f501	                              xor ebp, 1	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x400091c	            0x89e8	                            mov eax, ebp	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x400091e	          0x83e001	                              and eax, 1	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x4000921	        0x88442453	               mov byte [rsp + 0x53], al	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x4000925	            0xeb3b	                           jmp 0x4000962	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x4000927	    0x660f1f840000	                    nop word [rax + rax]	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x4000930	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       371	cache-tree.c	FUNCTION_12	WHILE_2	IF_13
0x4000935	          0x830001	                      add dword [rax], 1	       371	cache-tree.c	FUNCTION_12	WHILE_2	IF_13
0x4000938	      0x443b7c2404	               cmp r15d, dword [rsp + 4]	       318	cache-tree.c	FUNCTION_12	WHILE_2
0x400093d	     0xf8d7d010000	                           jge 0x4000ac0	       318	cache-tree.c	FUNCTION_12	WHILE_2
0x4000943	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       319	cache-tree.c	FUNCTION_12	WHILE_2
0x4000948	          0x4963c7	                        movsxd rax, r15d	       319	cache-tree.c	FUNCTION_12	WHILE_2
0x400094b	        0x488b1cc1	            mov rbx, qword [rcx + rax*8]	       319	cache-tree.c	FUNCTION_12	WHILE_2
0x400094f	        0x448b733c	           mov r14d, dword [rbx + 0x3c] 	       329	cache-tree.c	FUNCTION_12	WHILE_2	CALL_12
0x4000953	      0x4439742430	           cmp dword [rsp + 0x30], r14d 	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x4000958	        0x4c8d6358	                   lea r12, [rbx + 0x58]	       328	cache-tree.c	FUNCTION_12	WHILE_2
0x400095c	     0xf8d5e010000	                           jge 0x4000ac0	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x4000962	      0x488b6c2448	            mov rbp, qword [rsp + 0x48] 	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x4000967	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x400096c	          0x4c89e6	                            mov rsi, r12	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x400096f	          0x4889ea	                            mov rdx, rbp	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x4000972	      0xe800000000	                          call 0x4000977	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x4000977	            0x85c0	                           test eax, eax	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x4000979	     0xf8541010000	                           jne 0x4000ac0	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_13
0x400097f	        0x498d2c2c	                    lea rbp, [r12 + rbp]	       333	cache-tree.c	FUNCTION_12	WHILE_2	CALL_14
0x4000983	      0xbe2f000000	                           mov esi, 0x2f	       333	cache-tree.c	FUNCTION_12	WHILE_2	CALL_14
0x4000988	          0x4889ef	                            mov rdi, rbp	       333	cache-tree.c	FUNCTION_12	WHILE_2	CALL_14
0x400098b	      0xe800000000	                          call 0x4000990	       333	cache-tree.c	FUNCTION_12	WHILE_2	CALL_14
0x4000990	          0x4885c0	                           test rax, rax	       334	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x4000993	     0xf849f010000	                            je 0x4000b38	       334	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x4000999	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       336	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	CALL_15
0x400099e	          0x4829e8	                            sub rax, rbp	       335	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x40009a1	            0x31c9	                            xor ecx, ecx	       336	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	CALL_15
0x40009a3	            0x89c2	                            mov edx, eax	       336	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	CALL_15
0x40009a5	          0x4889ee	                            mov rsi, rbp	       336	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	CALL_15
0x40009a8	          0x4989c5	                            mov r13, rax	       335	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x40009ab	        0x89442444	             mov dword [rsp + 0x44], eax	       335	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x40009af	      0xe87cf8ffff	                   call sym.find_subtree	       336	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	CALL_15
0x40009b4	          0x4885c0	                           test rax, rax	       337	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_9
0x40009b7	          0x4989c6	                            mov r14, rax	       336	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	CALL_15
0x40009ba	     0xf8498030000	                            je 0x4000d58	       337	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_9
0x40009c0	        0x44037808	               add r15d, dword [rax + 8]	       340	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x40009c4	          0x488b00	                    mov rax, qword [rax]	       341	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x40009c7	    0xc74424200040	         mov dword [rsp + 0x20], 0x4000 	       325	cache-tree.c	FUNCTION_12	WHILE_2
0x40009cf	        0x4c8d6804	                      lea r13, [rax + 4]	       341	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x40009d3	            0x8b00	                    mov eax, dword [rax]	       343	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x40009d5	            0x89c1	                            mov ecx, eax	       343	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x40009d7	          0xc1e91f	                           shr ecx, 0x1f	       343	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x40009da	        0x894c2440	             mov dword [rsp + 0x40], ecx	       343	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x40009de	            0x89c1	                            mov ecx, eax	       325	cache-tree.c	FUNCTION_12	WHILE_2
0x40009e0	          0xc1e91f	                           shr ecx, 0x1f	       325	cache-tree.c	FUNCTION_12	WHILE_2
0x40009e3	            0x85c0	                           test eax, eax	       325	cache-tree.c	FUNCTION_12	WHILE_2
0x40009e5	      0xb801000000	                              mov eax, 1	       325	cache-tree.c	FUNCTION_12	WHILE_2
0x40009ea	       0xf49442434	          cmovns eax, dword [rsp + 0x34]	       325	cache-tree.c	FUNCTION_12	WHILE_2
0x40009ef	        0x894c2454	             mov dword [rsp + 0x54], ecx	       325	cache-tree.c	FUNCTION_12	WHILE_2
0x40009f3	        0x89442434	             mov dword [rsp + 0x34], eax	       325	cache-tree.c	FUNCTION_12	WHILE_2
0x40009f7	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_33	CALL_1
0x40009fc	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_33	CALL_1
0x4000a01	          0x4c89ef	                            mov rdi, r13	       975	cache.h	FUNCTION_33	CALL_1
0x4000a04	      0xe800000000	                          call 0x4000a09	       975	cache.h	FUNCTION_33	CALL_1
0x4000a09	            0x85c0	                           test eax, eax	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x4000a0b	     0xf846f010000	                            je 0x4000b80	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x4000a11	      0x807c245300	                cmp byte [rsp + 0x53], 0	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x4000a16	            0x740e	                            je 0x4000a26	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x4000a18	    0x817c242000e0	         cmp dword [rsp + 0x20], 0xe000 	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x4000a20	     0xf854a010000	                           jne 0x4000b70	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x4000a26	          0x8b4338	            mov eax, dword [rbx + 0x38] 	       370	cache-tree.c	FUNCTION_12	WHILE_2	IF_13
0x4000a29	      0xa900000200	                       test eax, 0x20000	       370	cache-tree.c	FUNCTION_12	WHILE_2	IF_13
0x4000a2e	     0xf85fcfeffff	                           jne 0x4000930	       370	cache-tree.c	FUNCTION_12	WHILE_2	IF_13
0x4000a34	          0x4d85f6	                           test r14, r14	       380	cache-tree.c	FUNCTION_12	WHILE_2	IF_14	CALL_22
0x4000a37	     0xf8493010000	                            je 0x4000bd0	       380	cache-tree.c	FUNCTION_12	WHILE_2	IF_14	CALL_22
0x4000a3d	      0x448b542440	           mov r10d, dword [rsp + 0x40] 	       388	cache-tree.c	FUNCTION_12	WHILE_2	IF_15	CALL_23
0x4000a42	          0x4585d2	                         test r10d, r10d	       388	cache-tree.c	FUNCTION_12	WHILE_2	IF_15	CALL_23
0x4000a45	            0x741a	                            je 0x4000a61	       388	cache-tree.c	FUNCTION_12	WHILE_2	IF_15	CALL_23
0x4000a47	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_33	CALL_1
0x4000a4c	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_33	CALL_1
0x4000a51	          0x4c89ef	                            mov rdi, r13	       975	cache.h	FUNCTION_33	CALL_1
0x4000a54	      0xe800000000	                          call 0x4000a59	       975	cache.h	FUNCTION_33	CALL_1
0x4000a59	            0x85c0	                           test eax, eax	       388	cache-tree.c	FUNCTION_12	WHILE_2	IF_15	CALL_23
0x4000a5b	     0xf84d7feffff	                            je 0x4000938	       388	cache-tree.c	FUNCTION_12	WHILE_2	IF_15	CALL_23
0x4000a61	      0x448b742444	           mov r14d, dword [rsp + 0x44] 	       391	cache-tree.c	FUNCTION_12	WHILE_2	CALL_24
0x4000a66	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	       391	cache-tree.c	FUNCTION_12	WHILE_2	CALL_24
0x4000a6b	        0x418d7664	                   lea esi, [r14 + 0x64]	       391	cache-tree.c	FUNCTION_12	WHILE_2	CALL_24
0x4000a6f	          0x4889df	                            mov rdi, rbx	       391	cache-tree.c	FUNCTION_12	WHILE_2	CALL_24
0x4000a72	          0x4863f6	                         movsxd rsi, esi	       391	cache-tree.c	FUNCTION_12	WHILE_2	CALL_24
0x4000a75	      0xe800000000	                          call 0x4000a7a	       391	cache-tree.c	FUNCTION_12	WHILE_2	CALL_24
0x4000a7a	        0x8b542420	            mov edx, dword [rsp + 0x20] 	       392	cache-tree.c	FUNCTION_12	WHILE_2	CALL_25
0x4000a7e	          0x4531c9	                            xor r9d, r9d	       392	cache-tree.c	FUNCTION_12	WHILE_2	CALL_25
0x4000a81	            0x31c0	                            xor eax, eax	       392	cache-tree.c	FUNCTION_12	WHILE_2	CALL_25
0x4000a83	          0x4989e8	                             mov r8, rbp	       392	cache-tree.c	FUNCTION_12	WHILE_2	CALL_25
0x4000a86	          0x4489f1	                           mov ecx, r14d	       392	cache-tree.c	FUNCTION_12	WHILE_2	CALL_25
0x4000a89	      0xbe00000000	                              mov esi, 0	       392	cache-tree.c	FUNCTION_12	WHILE_2	CALL_25
0x4000a8e	          0x4889df	                            mov rdi, rbx	       392	cache-tree.c	FUNCTION_12	WHILE_2	CALL_25
0x4000a91	      0xe800000000	                          call 0x4000a96	       392	cache-tree.c	FUNCTION_12	WHILE_2	CALL_25
0x4000a96	    0x488b05000000	            mov rax, qword [0x04000a9d] 	       393	cache-tree.c	FUNCTION_12	WHILE_2	CALL_26
0x4000a9d	          0x4c89ee	                            mov rsi, r13	       393	cache-tree.c	FUNCTION_12	WHILE_2	CALL_26
0x4000aa0	          0x4889df	                            mov rdi, rbx	       393	cache-tree.c	FUNCTION_12	WHILE_2	CALL_26
0x4000aa3	        0x488b4058	            mov rax, qword [rax + 0x58] 	       393	cache-tree.c	FUNCTION_12	WHILE_2	CALL_26
0x4000aa7	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       393	cache-tree.c	FUNCTION_12	WHILE_2	CALL_26
0x4000aab	      0xe800000000	                          call 0x4000ab0	       393	cache-tree.c	FUNCTION_12	WHILE_2	CALL_26
0x4000ab0	      0x443b7c2404	               cmp r15d, dword [rsp + 4]	       318	cache-tree.c	FUNCTION_12	WHILE_2
0x4000ab5	     0xf8c88feffff	                            jl 0x4000943	       318	cache-tree.c	FUNCTION_12	WHILE_2
0x4000abb	       0xf1f440000	                   nop dword [rax + rax]	       318	cache-tree.c	FUNCTION_12	WHILE_2
0x4000ac0	      0x448b4c2458	            mov r9d, dword [rsp + 0x58] 	       401	cache-tree.c	FUNCTION_12	IF_16
0x4000ac5	          0x4585c9	                           test r9d, r9d	       401	cache-tree.c	FUNCTION_12	IF_16
0x4000ac8	     0xf859a010000	                           jne 0x4000c68	       401	cache-tree.c	FUNCTION_12	IF_16
0x4000ace	      0x448b44245c	            mov r8d, dword [rsp + 0x5c] 	       408	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18
0x4000ad3	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       409	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18	CALL_31
0x4000ad8	    0x488b15000000	            mov rdx, qword [0x04000adf] 	       409	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18	CALL_31
0x4000adf	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	       409	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18	CALL_31
0x4000ae4	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	       409	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18	CALL_31
0x4000ae9	          0x4585c0	                           test r8d, r8d	       408	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18
0x4000aec	        0x488d4804	                      lea rcx, [rax + 4]	       409	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18	CALL_31
0x4000af0	     0xf855a010000	                           jne 0x4000c50	       408	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18
0x4000af6	      0xe800000000	                          call 0x4000afb	       410	cache-tree.c	FUNCTION_12	ELSE_4	IF_19	CALL_32
0x4000afb	            0x85c0	                           test eax, eax	       410	cache-tree.c	FUNCTION_12	ELSE_4	IF_19	CALL_32
0x4000afd	     0xf8541020000	                           jne 0x4000d44	       410	cache-tree.c	FUNCTION_12	ELSE_4	IF_19	CALL_32
0x4000b03	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       416	cache-tree.c	FUNCTION_12	CALL_34
0x4000b08	      0xe800000000	                          call 0x4000b0d	       416	cache-tree.c	FUNCTION_12	CALL_34
0x4000b0d	        0x8b542434	            mov edx, dword [rsp + 0x34] 	       417	cache-tree.c	FUNCTION_12
0x4000b11	      0xb8ffffffff	                     mov eax, 0xffffffff	       417	cache-tree.c	FUNCTION_12
0x4000b16	            0x85d2	                           test edx, edx	       417	cache-tree.c	FUNCTION_12
0x4000b18	            0x750a	                           jne 0x4000b24	       417	cache-tree.c	FUNCTION_12
0x4000b1a	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       417	cache-tree.c	FUNCTION_12
0x4000b1f	          0x4489f8	                           mov eax, r15d	       417	cache-tree.c	FUNCTION_12
0x4000b22	            0x2b01	                    sub eax, dword [rcx]	       417	cache-tree.c	FUNCTION_12
0x4000b24	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       417	cache-tree.c	FUNCTION_12
0x4000b29	          0x4489fb	                           mov ebx, r15d	       423	cache-tree.c	FUNCTION_12
0x4000b2c	            0x8907	                    mov dword [rdi], eax	       417	cache-tree.c	FUNCTION_12
0x4000b2e	      0xe9c4000000	                           jmp 0x4000bf7	       423	cache-tree.c	FUNCTION_12
0x4000b33	       0xf1f440000	                   nop dword [rax + rax]	       423	cache-tree.c	FUNCTION_12
0x4000b38	      0x442b742430	            sub r14d, dword [rsp + 0x30]	       352	cache-tree.c	FUNCTION_12	WHILE_2	ELSE_1
0x4000b3d	          0x8b4334	            mov eax, dword [rbx + 0x34] 	       351	cache-tree.c	FUNCTION_12	WHILE_2	ELSE_1
0x4000b40	        0x4c8d6b44	                   lea r13, [rbx + 0x44]	       350	cache-tree.c	FUNCTION_12	WHILE_2	ELSE_1
0x4000b44	        0x4183c701	                             add r15d, 1	       353	cache-tree.c	FUNCTION_12	WHILE_2	ELSE_1
0x4000b48	    0xc74424400000	               mov dword [rsp + 0x40], 0	       326	cache-tree.c	FUNCTION_12	WHILE_2
0x4000b50	    0xc74424540000	               mov dword [rsp + 0x54], 0	       325	cache-tree.c	FUNCTION_12	WHILE_2
0x4000b58	        0x89442420	             mov dword [rsp + 0x20], eax	       351	cache-tree.c	FUNCTION_12	WHILE_2	ELSE_1
0x4000b5c	      0x4489742444	            mov dword [rsp + 0x44], r14d	       352	cache-tree.c	FUNCTION_12	WHILE_2	ELSE_1
0x4000b61	          0x4531f6	                          xor r14d, r14d	       320	cache-tree.c	FUNCTION_12	WHILE_2
0x4000b64	      0xe98efeffff	                           jmp 0x40009f7	       320	cache-tree.c	FUNCTION_12	WHILE_2
0x4000b69	     0xf1f80000000	                         nop dword [rax]	       320	cache-tree.c	FUNCTION_12	WHILE_2
0x4000b70	          0x4c89ef	                            mov rdi, r13	       357	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_18
0x4000b73	      0xe800000000	                          call 0x4000b78	       357	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_18
0x4000b78	            0x85c0	                           test eax, eax	       357	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_18
0x4000b7a	     0xf85a6feffff	                           jne 0x4000a26	       357	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_18
0x4000b80	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       358	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_19
0x4000b85	      0xbbffffffff	                     mov ebx, 0xffffffff	       360	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	IF_12
0x4000b8a	      0xe800000000	                          call 0x4000b8f	       358	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_19
0x4000b8f	      0x448b5c2454	           mov r11d, dword [rsp + 0x54] 	       359	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	IF_12
0x4000b94	          0x4585db	                         test r11d, r11d	       359	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	IF_12
0x4000b97	            0x755e	                           jne 0x4000bf7	       359	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	IF_12
0x4000b99	      0x448b742444	           mov r14d, dword [rsp + 0x44] 	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_20
0x4000b9e	      0x4403742430	            add r14d, dword [rsp + 0x30]	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_20
0x4000ba3	          0x4c89ef	                            mov rdi, r13	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_20
0x4000ba6	      0xe800000000	                          call 0x4000bab	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_20
0x4000bab	        0x8b742420	            mov esi, dword [rsp + 0x20] 	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_20
0x4000baf	          0x4889c2	                            mov rdx, rax	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_20
0x4000bb2	          0x4d89e0	                             mov r8, r12	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_20
0x4000bb5	      0xbf00000000	                              mov edi, 0	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_20
0x4000bba	            0x31c0	                            xor eax, eax	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_20
0x4000bbc	          0x4489f1	                           mov ecx, r14d	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_20
0x4000bbf	      0xe800000000	                          call 0x4000bc4	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_20
0x4000bc4	            0xeb31	                           jmp 0x4000bf7	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_20
0x4000bc6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_20
0x4000bd0	      0xa900000020	                    test eax, 0x20000000	       380	cache-tree.c	FUNCTION_12	WHILE_2	IF_14	CALL_22
0x4000bd5	     0xf8462feffff	                            je 0x4000a3d	       380	cache-tree.c	FUNCTION_12	WHILE_2	IF_14	CALL_22
0x4000bdb	    0xc74424340100	               mov dword [rsp + 0x34], 1	       381	cache-tree.c	FUNCTION_12	WHILE_2	IF_14
0x4000be3	      0xe950fdffff	                           jmp 0x4000938	       381	cache-tree.c	FUNCTION_12	WHILE_2	IF_14
0x4000be8	     0xf1f84000000	                   nop dword [rax + rax]	       381	cache-tree.c	FUNCTION_12	WHILE_2	IF_14
0x4000bf0	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       255	cache-tree.c	FUNCTION_12	IF_1
0x4000bf5	            0x8b18	                    mov ebx, dword [rax]	       255	cache-tree.c	FUNCTION_12	IF_1
0x4000bf7	    0x488b8c249800	            mov rcx, qword [rsp + 0x98] 	       424	cache-tree.c	FUNCTION_12
0x4000bff	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       424	cache-tree.c	FUNCTION_12
0x4000c08	            0x89d8	                            mov eax, ebx	       424	cache-tree.c	FUNCTION_12
0x4000c0a	     0xf8576010000	                           jne 0x4000d86	       424	cache-tree.c	FUNCTION_12
0x4000c10	    0x4881c4a80000	                           add rsp, 0xa8	       424	cache-tree.c	FUNCTION_12
0x4000c17	              0x5b	                                 pop rbx	       424	cache-tree.c	FUNCTION_12
0x4000c18	              0x5d	                                 pop rbp	       424	cache-tree.c	FUNCTION_12
0x4000c19	            0x415c	                                 pop r12	       424	cache-tree.c	FUNCTION_12
0x4000c1b	            0x415d	                                 pop r13	       424	cache-tree.c	FUNCTION_12
0x4000c1d	            0x415e	                                 pop r14	       424	cache-tree.c	FUNCTION_12
0x4000c1f	            0x415f	                                 pop r15	       424	cache-tree.c	FUNCTION_12
0x4000c21	              0xc3	                                     ret	       424	cache-tree.c	FUNCTION_12
0x4000c22	    0x660f1f440000	                    nop word [rax + rax]	       424	cache-tree.c	FUNCTION_12
0x4000c28	      0xbf01000000	                              mov edi, 1	        13	cache-tree.c	FUNCTION_1	CALL_1
0x4000c2d	      0xbe28000000	                           mov esi, 0x28	        13	cache-tree.c	FUNCTION_1	CALL_1
0x4000c32	      0xe800000000	                          call 0x4000c37	        13	cache-tree.c	FUNCTION_1	CALL_1
0x4000c37	      0x4c8b5c2420	            mov r11, qword [rsp + 0x20] 	       293	cache-tree.c	FUNCTION_12	WHILE_1	CALL_7
0x4000c3c	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	        14	cache-tree.c	FUNCTION_1
0x4000c42	          0x4889c7	                            mov rdi, rax	       293	cache-tree.c	FUNCTION_12	WHILE_1	CALL_7
0x4000c45	          0x498907	                    mov qword [r15], rax	       293	cache-tree.c	FUNCTION_12	WHILE_1	CALL_7
0x4000c48	      0xe963fbffff	                           jmp 0x40007b0	       293	cache-tree.c	FUNCTION_12	WHILE_1	CALL_7
0x4000c4d	           0xf1f00	                         nop dword [rax]	       293	cache-tree.c	FUNCTION_12	WHILE_1	CALL_7
0x4000c50	      0xe800000000	                          call 0x4000c55	       409	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18	CALL_31
0x4000c55	      0xe9a9feffff	                           jmp 0x4000b03	       409	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18	CALL_31
0x4000c5a	    0x660f1f440000	                    nop word [rax + rax]	       409	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18	CALL_31
0x4000c60	            0x89c3	                            mov ebx, eax	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x4000c62	            0xeb93	                           jmp 0x4000bf7	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x4000c64	         0xf1f4000	                         nop dword [rax]	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x4000c68	    0x488b15000000	            mov rdx, qword [0x04000c6f] 	       403	cache-tree.c	FUNCTION_12	IF_16	CALL_28
0x4000c6f	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	       403	cache-tree.c	FUNCTION_12	IF_16	CALL_28
0x4000c74	    0x488d8c248000	                   lea rcx, [rsp + 0x80]	       403	cache-tree.c	FUNCTION_12	IF_16	CALL_28
0x4000c7c	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	       403	cache-tree.c	FUNCTION_12	IF_16	CALL_28
0x4000c81	      0xe800000000	                          call 0x4000c86	       403	cache-tree.c	FUNCTION_12	IF_16	CALL_28
0x4000c86	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       404	cache-tree.c	FUNCTION_12	IF_16	IF_17	CALL_29
0x4000c8e	      0xe800000000	                          call 0x4000c93	       404	cache-tree.c	FUNCTION_12	IF_16	IF_17	CALL_29
0x4000c93	            0x85c0	                           test eax, eax	       404	cache-tree.c	FUNCTION_12	IF_16	IF_17	CALL_29
0x4000c95	            0x7521	                           jne 0x4000cb8	       404	cache-tree.c	FUNCTION_12	IF_16	IF_17	CALL_29
0x4000c97	    0xc74424340100	               mov dword [rsp + 0x34], 1	       407	cache-tree.c	FUNCTION_12	IF_16	ELSE_2
0x4000c9f	      0xe95ffeffff	                           jmp 0x4000b03	       407	cache-tree.c	FUNCTION_12	IF_16	ELSE_2
0x4000ca4	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       315	cache-tree.c	FUNCTION_12	CALL_11
0x4000ca9	      0xbe00200000	                         mov esi, 0x2000	       315	cache-tree.c	FUNCTION_12	CALL_11
0x4000cae	      0xe800000000	                          call 0x4000cb3	       315	cache-tree.c	FUNCTION_12	CALL_11
0x4000cb3	      0xe929fcffff	                           jmp 0x40008e1	       315	cache-tree.c	FUNCTION_12	CALL_11
0x4000cb8	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_53	CALL_3
0x4000cbd	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	        53	string3.h	FUNCTION_53	CALL_3
0x4000cc5	        0x48894704	                mov qword [rdi + 4], rax	        53	string3.h	FUNCTION_53	CALL_3
0x4000cc9	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	        53	string3.h	FUNCTION_53	CALL_3
0x4000cd1	        0x4889470c	              mov qword [rdi + 0xc], rax	        53	string3.h	FUNCTION_53	CALL_3
0x4000cd5	    0x8b8424900000	            mov eax, dword [rsp + 0x90] 	        53	string3.h	FUNCTION_53	CALL_3
0x4000cdc	          0x894714	             mov dword [rdi + 0x14], eax	        53	string3.h	FUNCTION_53	CALL_3
0x4000cdf	      0xe91ffeffff	                           jmp 0x4000b03	        53	string3.h	FUNCTION_53	CALL_3
0x4000ce4	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       207	cache-tree.c	FUNCTION_10
0x4000ce9	        0x448b7818	           mov r15d, dword [rax + 0x18] 	       207	cache-tree.c	FUNCTION_10
0x4000ced	          0x4585ff	                         test r15d, r15d	       209	cache-tree.c	FUNCTION_10	FOR_1
0x4000cf0	            0x7f3f	                            jg 0x4000d31	       209	cache-tree.c	FUNCTION_10	FOR_1
0x4000cf2	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       315	cache-tree.c	FUNCTION_12	CALL_11
0x4000cf7	      0xbe00200000	                         mov esi, 0x2000	       315	cache-tree.c	FUNCTION_12	CALL_11
0x4000cfc	      0x48897c2438	             mov qword [rsp + 0x38], rdi	       315	cache-tree.c	FUNCTION_12	CALL_11
0x4000d01	      0xe800000000	                          call 0x4000d06	       315	cache-tree.c	FUNCTION_12	CALL_11
0x4000d06	          0x4531ff	                          xor r15d, r15d	       317	cache-tree.c	FUNCTION_12
0x4000d09	    0xc74424340000	               mov dword [rsp + 0x34], 0	       247	cache-tree.c	FUNCTION_12
0x4000d11	      0xe9aafdffff	                           jmp 0x4000ac0	       247	cache-tree.c	FUNCTION_12
0x4000d16	      0x488d442460	                   lea rax, [rsp + 0x60]	       247	cache-tree.c	FUNCTION_12
0x4000d1b	      0x4889442438	             mov qword [rsp + 0x38], rax	       247	cache-tree.c	FUNCTION_12
0x4000d20	      0xe93bfbffff	                           jmp 0x4000860	       247	cache-tree.c	FUNCTION_12
0x4000d25	      0xbf00000000	                              mov edi, 0	       303	cache-tree.c	FUNCTION_12	WHILE_1	CALL_9
0x4000d2a	            0x31c0	                            xor eax, eax	       303	cache-tree.c	FUNCTION_12	WHILE_1	CALL_9
0x4000d2c	      0xe800000000	                          call 0x4000d31	       303	cache-tree.c	FUNCTION_12	WHILE_1	CALL_9
0x4000d31	        0x4c8b7020	            mov r14, qword [rax + 0x20] 	       303	cache-tree.c	FUNCTION_12	WHILE_1	CALL_9
0x4000d35	      0x488d442460	                   lea rax, [rsp + 0x60]	       303	cache-tree.c	FUNCTION_12	WHILE_1	CALL_9
0x4000d3a	      0x4889442438	             mov qword [rsp + 0x38], rax	       303	cache-tree.c	FUNCTION_12	WHILE_1	CALL_9
0x4000d3f	      0xe932fbffff	                           jmp 0x4000876	       303	cache-tree.c	FUNCTION_12	WHILE_1	CALL_9
0x4000d44	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       412	cache-tree.c	FUNCTION_12	ELSE_4	IF_19	CALL_33
0x4000d49	      0xbbffffffff	                     mov ebx, 0xffffffff	       413	cache-tree.c	FUNCTION_12	ELSE_4	IF_19
0x4000d4e	      0xe800000000	                          call 0x4000d53	       412	cache-tree.c	FUNCTION_12	ELSE_4	IF_19	CALL_33
0x4000d53	      0xe99ffeffff	                           jmp 0x4000bf7	       413	cache-tree.c	FUNCTION_12	ELSE_4	IF_19
0x4000d58	          0x4c89e1	                            mov rcx, r12	       338	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_9	CALL_16
0x4000d5b	          0x4889ea	                            mov rdx, rbp	       338	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_9	CALL_16
0x4000d5e	          0x4489ee	                           mov esi, r13d	       338	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_9	CALL_16
0x4000d61	      0xbf00000000	                              mov edi, 0	       338	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_9	CALL_16
0x4000d66	            0x31c0	                            xor eax, eax	       338	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_9	CALL_16
0x4000d68	      0xe800000000	                          call 0x4000d6d	       338	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_9	CALL_16
0x4000d6d	      0xb900000000	                              mov ecx, 0	       250	cache-tree.c	FUNCTION_12	CALL_1
0x4000d72	      0xbafa000000	                           mov edx, 0xfa	       250	cache-tree.c	FUNCTION_12	CALL_1
0x4000d77	      0xbe00000000	                              mov esi, 0	       250	cache-tree.c	FUNCTION_12	CALL_1
0x4000d7c	      0xbf00000000	                              mov edi, 0	       250	cache-tree.c	FUNCTION_12	CALL_1
0x4000d81	      0xe800000000	                          call 0x4000d86	       250	cache-tree.c	FUNCTION_12	CALL_1
0x4000d86	      0xe800000000	                          call 0x4000d8b	       424	cache-tree.c	FUNCTION_12
prime_cache_tree	ELSE,0:SWITCH,0:IF,0:FOR,0:CALL,3:WHILE,0:DO,0:functions,0	20
0x4001600	              0x55	                                push rbp	       686	cache-tree.c	FUNCTION_22
0x4001601	              0x53	                                push rbx	       686	cache-tree.c	FUNCTION_22
0x4001602	          0x4889fb	                            mov rbx, rdi	       686	cache-tree.c	FUNCTION_22
0x4001605	        0x488d7f20	                   lea rdi, [rdi + 0x20]	       687	cache-tree.c	FUNCTION_22	CALL_1
0x4001609	          0x4889f5	                            mov rbp, rsi	       686	cache-tree.c	FUNCTION_22
0x400160c	        0x4883ec08	                              sub rsp, 8	       686	cache-tree.c	FUNCTION_22
0x4001610	      0xe800000000	                          call 0x4001615	       687	cache-tree.c	FUNCTION_22	CALL_1
0x4001615	      0xbe28000000	                           mov esi, 0x28	        13	cache-tree.c	FUNCTION_1	CALL_1
0x400161a	      0xbf01000000	                              mov edi, 1	        13	cache-tree.c	FUNCTION_1	CALL_1
0x400161f	      0xe800000000	                          call 0x4001624	        13	cache-tree.c	FUNCTION_1	CALL_1
0x4001624	          0x4889ee	                            mov rsi, rbp	       689	cache-tree.c	FUNCTION_22	CALL_3
0x4001627	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	        14	cache-tree.c	FUNCTION_1
0x400162d	          0x4889c7	                            mov rdi, rax	       689	cache-tree.c	FUNCTION_22	CALL_3
0x4001630	        0x48894320	             mov qword [rbx + 0x20], rax	       688	cache-tree.c	FUNCTION_22	CALL_2
0x4001634	      0xe8e7f9ffff	           call sym.prime_cache_tree_rec	       689	cache-tree.c	FUNCTION_22	CALL_3
0x4001639	        0x834b1420	             or dword [rbx + 0x14], 0x20	       690	cache-tree.c	FUNCTION_22
0x400163d	        0x4883c408	                              add rsp, 8	       691	cache-tree.c	FUNCTION_22
0x4001641	              0x5b	                                 pop rbx	       691	cache-tree.c	FUNCTION_22
0x4001642	              0x5d	                                 pop rbp	       691	cache-tree.c	FUNCTION_22
0x4001643	              0xc3	                                     ret	       691	cache-tree.c	FUNCTION_22
do_invalidate_path	ELSE,0:SWITCH,0:IF,4:FOR,0:CALL,8:WHILE,0:DO,0:functions,0	88
0x4000550	          0x4885ff	                           test rdi, rdi	       116	cache-tree.c	FUNCTION_7	IF_1
0x4000553	     0xf84ff000000	                            je 0x4000658	       116	cache-tree.c	FUNCTION_7	IF_1
0x4000559	            0x4156	                                push r14	       100	cache-tree.c	FUNCTION_7
0x400055b	            0x4155	                                push r13	       100	cache-tree.c	FUNCTION_7
0x400055d	            0x4154	                                push r12	       100	cache-tree.c	FUNCTION_7
0x400055f	              0x55	                                push rbp	       100	cache-tree.c	FUNCTION_7
0x4000560	          0x4889f5	                            mov rbp, rsi	       100	cache-tree.c	FUNCTION_7
0x4000563	              0x53	                                push rbx	       100	cache-tree.c	FUNCTION_7
0x4000564	      0xbe2f000000	                           mov esi, 0x2f	       118	cache-tree.c	FUNCTION_7	CALL_2
0x4000569	          0x4889fb	                            mov rbx, rdi	       118	cache-tree.c	FUNCTION_7	CALL_2
0x400056c	          0x4889ef	                            mov rdi, rbp	       118	cache-tree.c	FUNCTION_7	CALL_2
0x400056f	      0xe800000000	                          call 0x4000574	       118	cache-tree.c	FUNCTION_7	CALL_2
0x4000574	          0x4889c2	                            mov rdx, rax	       119	cache-tree.c	FUNCTION_7
0x4000577	    0xc703ffffffff	            mov dword [rbx], 0xffffffff 	       120	cache-tree.c	FUNCTION_7
0x400057d	          0x4989c4	                            mov r12, rax	       118	cache-tree.c	FUNCTION_7	CALL_2
0x4000580	          0x4829ea	                            sub rdx, rbp	       119	cache-tree.c	FUNCTION_7
0x4000583	          0x803800	                       cmp byte [rax], 0	       121	cache-tree.c	FUNCTION_7	IF_2
0x4000586	            0x7430	                            je 0x40005b8	       121	cache-tree.c	FUNCTION_7	IF_2
0x4000588	            0x31c9	                            xor ecx, ecx	       139	cache-tree.c	FUNCTION_7	CALL_7
0x400058a	          0x4889ee	                            mov rsi, rbp	       139	cache-tree.c	FUNCTION_7	CALL_7
0x400058d	          0x4889df	                            mov rdi, rbx	       139	cache-tree.c	FUNCTION_7	CALL_7
0x4000590	      0xe89bfcffff	                   call sym.find_subtree	       139	cache-tree.c	FUNCTION_7	CALL_7
0x4000595	          0x4885c0	                           test rax, rax	       140	cache-tree.c	FUNCTION_7	IF_4
0x4000598	            0x740d	                            je 0x40005a7	       140	cache-tree.c	FUNCTION_7	IF_4
0x400059a	          0x488b38	                    mov rdi, qword [rax]	       141	cache-tree.c	FUNCTION_7	CALL_8
0x400059d	      0x498d742401	                      lea rsi, [r12 + 1]	       141	cache-tree.c	FUNCTION_7	CALL_8
0x40005a2	      0xe8a9ffffff	             call sym.do_invalidate_path	       141	cache-tree.c	FUNCTION_7	CALL_8
0x40005a7	              0x5b	                                 pop rbx	       143	cache-tree.c	FUNCTION_7
0x40005a8	      0xb801000000	                              mov eax, 1	       142	cache-tree.c	FUNCTION_7
0x40005ad	              0x5d	                                 pop rbp	       143	cache-tree.c	FUNCTION_7
0x40005ae	            0x415c	                                 pop r12	       143	cache-tree.c	FUNCTION_7
0x40005b0	            0x415d	                                 pop r13	       143	cache-tree.c	FUNCTION_7
0x40005b2	            0x415e	                                 pop r14	       143	cache-tree.c	FUNCTION_7
0x40005b4	              0xc3	                                     ret	       143	cache-tree.c	FUNCTION_7
0x40005b5	           0xf1f00	                         nop dword [rax]	       143	cache-tree.c	FUNCTION_7
0x40005b8	        0x4c8b6b20	            mov r13, qword [rbx + 0x20] 	       143	cache-tree.c	FUNCTION_7
0x40005bc	          0x8b7b18	            mov edi, dword [rbx + 0x18] 	       123	cache-tree.c	FUNCTION_7	IF_2	CALL_3
0x40005bf	            0x89d1	                            mov ecx, edx	       123	cache-tree.c	FUNCTION_7	IF_2	CALL_3
0x40005c1	          0x4889ea	                            mov rdx, rbp	       123	cache-tree.c	FUNCTION_7	IF_2	CALL_3
0x40005c4	          0x4c89ee	                            mov rsi, r13	       123	cache-tree.c	FUNCTION_7	IF_2	CALL_3
0x40005c7	      0xe8a4fbffff	             call sym.subtree_pos.isra.0	       123	cache-tree.c	FUNCTION_7	IF_2	CALL_3
0x40005cc	            0x85c0	                           test eax, eax	       124	cache-tree.c	FUNCTION_7	IF_2	IF_3
0x40005ce	          0x4189c4	                           mov r12d, eax	       123	cache-tree.c	FUNCTION_7	IF_2	CALL_3
0x40005d1	            0x78d4	                            js 0x40005a7	       124	cache-tree.c	FUNCTION_7	IF_2	IF_3
0x40005d3	          0x4c63f0	                         movsxd r14, eax	       125	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_4
0x40005d6	      0x4b8b7cf500	            mov rdi, qword [r13 + r14*8]	       125	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_4
0x40005db	    0x4a8d2cf50000	                        lea rbp, [r14*8]	       125	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_4
0x40005e3	      0xe800000000	                          call 0x40005e8	       125	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_4
0x40005e8	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       126	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_5
0x40005ec	        0x4a8b3cf0	            mov rdi, qword [rax + r14*8]	       126	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_5
0x40005f0	      0xe800000000	                          call 0x40005f5	       126	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_5
0x40005f5	          0x8b4b18	            mov ecx, dword [rbx + 0x18] 	       133	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40005f8	            0x89ca	                            mov edx, ecx	       133	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40005fa	          0x4429e2	                           sub edx, r12d	       133	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x40005fd	          0x83ea01	                              sub edx, 1	       133	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4000600	          0x4863d2	                         movsxd rdx, edx	       133	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4000603	          0x4885d2	                           test rdx, rdx	       861	git-compat-util.h	FUNCTION_83	IF_1
0x4000606	            0x7518	                           jne 0x4000620	       861	git-compat-util.h	FUNCTION_83	IF_1
0x4000608	          0x83e901	                              sub ecx, 1	       135	cache-tree.c	FUNCTION_7	IF_2	IF_3
0x400060b	      0xb801000000	                              mov eax, 1	       137	cache-tree.c	FUNCTION_7	IF_2
0x4000610	          0x894b18	             mov dword [rbx + 0x18], ecx	       135	cache-tree.c	FUNCTION_7	IF_2	IF_3
0x4000613	              0x5b	                                 pop rbx	       143	cache-tree.c	FUNCTION_7
0x4000614	              0x5d	                                 pop rbp	       143	cache-tree.c	FUNCTION_7
0x4000615	            0x415c	                                 pop r12	       143	cache-tree.c	FUNCTION_7
0x4000617	            0x415d	                                 pop r13	       143	cache-tree.c	FUNCTION_7
0x4000619	            0x415e	                                 pop r14	       143	cache-tree.c	FUNCTION_7
0x400061b	              0xc3	                                     ret	       143	cache-tree.c	FUNCTION_7
0x400061c	         0xf1f4000	                         nop dword [rax]	       143	cache-tree.c	FUNCTION_7
0x4000620	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_80	IF_1	CALL_1
0x400062a	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_80	IF_1	CALL_1
0x400062d	            0x772c	                            ja 0x400065b	       795	git-compat-util.h	FUNCTION_80	IF_1	CALL_1
0x400062f	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       133	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_6
0x4000633	        0x48c1e203	                              shl rdx, 3	        59	string3.h	FUNCTION_54	CALL_3
0x4000637	      0x488d742f08	                lea rsi, [rdi + rbp + 8]	        59	string3.h	FUNCTION_54	CALL_3
0x400063c	          0x4801ef	                            add rdi, rbp	        59	string3.h	FUNCTION_54	CALL_3
0x400063f	      0xe800000000	                          call 0x4000644	        59	string3.h	FUNCTION_54	CALL_3
0x4000644	          0x8b4b18	            mov ecx, dword [rbx + 0x18] 	        59	string3.h	FUNCTION_54	CALL_3
0x4000647	      0xb801000000	                              mov eax, 1	       137	cache-tree.c	FUNCTION_7	IF_2
0x400064c	          0x83e901	                              sub ecx, 1	       135	cache-tree.c	FUNCTION_7	IF_2	IF_3
0x400064f	          0x894b18	             mov dword [rbx + 0x18], ecx	       135	cache-tree.c	FUNCTION_7	IF_2	IF_3
0x4000652	            0xebbf	                           jmp 0x4000613	       135	cache-tree.c	FUNCTION_7	IF_2	IF_3
0x4000654	         0xf1f4000	                         nop dword [rax]	       135	cache-tree.c	FUNCTION_7	IF_2	IF_3
0x4000658	            0x31c0	                            xor eax, eax	       117	cache-tree.c	FUNCTION_7	IF_1
0x400065a	              0xc3	                                     ret	       117	cache-tree.c	FUNCTION_7	IF_1
0x400065b	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_80	IF_1	CALL_2
0x4000660	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_80	IF_1	CALL_2
0x4000665	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_80	IF_1	CALL_2
0x4000667	      0xe800000000	                          call 0x400066c	       796	git-compat-util.h	FUNCTION_80	IF_1	CALL_2
prime_cache_tree_rec	ELSE,1:SWITCH,0:IF,2:FOR,0:CALL,9:WHILE,1:DO,0:functions,0	70
0x4001020	            0x4155	                                push r13	       660	cache-tree.c	FUNCTION_21
0x4001022	            0x4154	                                push r12	       660	cache-tree.c	FUNCTION_21
0x4001024	              0x55	                                push rbp	       660	cache-tree.c	FUNCTION_21
0x4001025	              0x53	                                push rbx	       660	cache-tree.c	FUNCTION_21
0x4001026	          0x4889fd	                            mov rbp, rdi	       660	cache-tree.c	FUNCTION_21
0x4001029	            0x31db	                            xor ebx, ebx	       667	cache-tree.c	FUNCTION_21
0x400102b	        0x4883ec58	                           sub rsp, 0x58	       660	cache-tree.c	FUNCTION_21
0x400102f	        0x488b4e04	                mov rcx, qword [rsi + 4]	        53	string3.h	FUNCTION_53	CALL_3
0x4001033	    0x64488b042528	                mov rax, qword fs:[0x28]	       660	cache-tree.c	FUNCTION_21
0x400103c	      0x4889442448	             mov qword [rsp + 0x48], rax	       660	cache-tree.c	FUNCTION_21
0x4001041	            0x31c0	                            xor eax, eax	       660	cache-tree.c	FUNCTION_21
0x4001043	        0x48894f04	                mov qword [rdi + 4], rcx	        53	string3.h	FUNCTION_53	CALL_3
0x4001047	        0x488b4e0c	              mov rcx, qword [rsi + 0xc]	        53	string3.h	FUNCTION_53	CALL_3
0x400104b	        0x48894f0c	              mov qword [rdi + 0xc], rcx	        53	string3.h	FUNCTION_53	CALL_3
0x400104f	          0x8b5614	            mov edx, dword [rsi + 0x14] 	        53	string3.h	FUNCTION_53	CALL_3
0x4001052	          0x895714	             mov dword [rdi + 0x14], edx	        53	string3.h	FUNCTION_53	CALL_3
0x4001055	        0x488b5620	            mov rdx, qword [rsi + 0x20] 	       666	cache-tree.c	FUNCTION_21	CALL_2
0x4001059	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       666	cache-tree.c	FUNCTION_21	CALL_2
0x400105e	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	       666	cache-tree.c	FUNCTION_21	CALL_2
0x4001062	      0xe800000000	                          call 0x4001067	       666	cache-tree.c	FUNCTION_21	CALL_2
0x4001067	    0x660f1f840000	                    nop word [rax + rax]	       666	cache-tree.c	FUNCTION_21	CALL_2
0x4001070	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       668	cache-tree.c	FUNCTION_21	WHILE_1	CALL_3
0x4001075	          0x4889e6	                            mov rsi, rsp	       668	cache-tree.c	FUNCTION_21	WHILE_1	CALL_3
0x4001078	      0xe800000000	                          call 0x400107d	       668	cache-tree.c	FUNCTION_21	WHILE_1	CALL_3
0x400107d	            0x85c0	                           test eax, eax	       668	cache-tree.c	FUNCTION_21	WHILE_1	CALL_3
0x400107f	            0x746f	                            je 0x40010f0	       668	cache-tree.c	FUNCTION_21	WHILE_1	CALL_3
0x4001081	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       669	cache-tree.c	FUNCTION_21	WHILE_1	IF_1	CALL_4
0x4001085	      0x2500f00000	                         and eax, 0xf000	       669	cache-tree.c	FUNCTION_21	WHILE_1	IF_1	CALL_4
0x400108a	      0x3d00400000	                         cmp eax, 0x4000	       669	cache-tree.c	FUNCTION_21	WHILE_1	IF_1	CALL_4
0x400108f	            0x740f	                            je 0x40010a0	       669	cache-tree.c	FUNCTION_21	WHILE_1	IF_1	CALL_4
0x4001091	          0x83c301	                              add ebx, 1	       670	cache-tree.c	FUNCTION_21	WHILE_1	IF_1
0x4001094	            0xebda	                           jmp 0x4001070	       670	cache-tree.c	FUNCTION_21	WHILE_1	IF_1
0x4001096	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       670	cache-tree.c	FUNCTION_21	WHILE_1	IF_1
0x40010a0	        0x488b3c24	                    mov rdi, qword [rsp]	       673	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_5
0x40010a4	      0xe800000000	                          call 0x40010a9	       673	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_5
0x40010a9	          0xf60001	                      test byte [rax], 1	       674	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	IF_2
0x40010ac	          0x4989c4	                            mov r12, rax	       673	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_5
0x40010af	            0x745f	                            je 0x4001110	       674	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	IF_2
0x40010b1	      0x488b742408	                mov rsi, qword [rsp + 8]	       676	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_7
0x40010b6	          0x4889ef	                            mov rdi, rbp	       676	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_7
0x40010b9	      0xe800000000	                          call 0x40010be	       676	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_7
0x40010be	      0xbe28000000	                           mov esi, 0x28	        13	cache-tree.c	FUNCTION_1	CALL_1
0x40010c3	          0x4989c5	                            mov r13, rax	       676	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_7
0x40010c6	      0xbf01000000	                              mov edi, 1	        13	cache-tree.c	FUNCTION_1	CALL_1
0x40010cb	      0xe800000000	                          call 0x40010d0	        13	cache-tree.c	FUNCTION_1	CALL_1
0x40010d0	          0x4c89e6	                            mov rsi, r12	       678	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_9
0x40010d3	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	        14	cache-tree.c	FUNCTION_1
0x40010d9	          0x4889c7	                            mov rdi, rax	       678	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_9
0x40010dc	        0x49894500	                    mov qword [r13], rax	       677	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_8
0x40010e0	      0xe83bffffff	           call sym.prime_cache_tree_rec	       678	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_9
0x40010e5	        0x498b4500	                    mov rax, qword [r13]	       679	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1
0x40010e9	             0x318	                    add ebx, dword [rax]	       679	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1
0x40010eb	            0xeb83	                           jmp 0x4001070	       679	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1
0x40010ed	           0xf1f00	                         nop dword [rax]	       679	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1
0x40010f0	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       683	cache-tree.c	FUNCTION_21
0x40010f5	    0x644833042528	                xor rax, qword fs:[0x28]	       683	cache-tree.c	FUNCTION_21
0x40010fe	          0x895d00	                    mov dword [rbp], ebx	       682	cache-tree.c	FUNCTION_21
0x4001101	            0x7519	                           jne 0x400111c	       683	cache-tree.c	FUNCTION_21
0x4001103	        0x4883c458	                           add rsp, 0x58	       683	cache-tree.c	FUNCTION_21
0x4001107	              0x5b	                                 pop rbx	       683	cache-tree.c	FUNCTION_21
0x4001108	              0x5d	                                 pop rbp	       683	cache-tree.c	FUNCTION_21
0x4001109	            0x415c	                                 pop r12	       683	cache-tree.c	FUNCTION_21
0x400110b	            0x415d	                                 pop r13	       683	cache-tree.c	FUNCTION_21
0x400110d	              0xc3	                                     ret	       683	cache-tree.c	FUNCTION_21
0x400110e	            0x6690	                                     nop	       683	cache-tree.c	FUNCTION_21
0x4001110	            0x31f6	                            xor esi, esi	        22	tree.h	FUNCTION_65	CALL_1
0x4001112	          0x4889c7	                            mov rdi, rax	        22	tree.h	FUNCTION_65	CALL_1
0x4001115	      0xe800000000	                          call 0x400111a	        22	tree.h	FUNCTION_65	CALL_1
0x400111a	            0xeb95	                           jmp 0x40010b1	        22	tree.h	FUNCTION_65	CALL_1
0x400111c	      0xe800000000	                          call 0x4001121	       683	cache-tree.c	FUNCTION_21
write_one	ELSE,1:SWITCH,0:IF,4:FOR,1:CALL,10:WHILE,0:DO,0:functions,0	93
0x4000040	            0x4157	                                push r15	       444	cache-tree.c	FUNCTION_14
0x4000042	            0x4156	                                push r14	       444	cache-tree.c	FUNCTION_14
0x4000044	          0x4989fe	                            mov r14, rdi	       444	cache-tree.c	FUNCTION_14
0x4000047	            0x4155	                                push r13	       444	cache-tree.c	FUNCTION_14
0x4000049	          0x4989f5	                            mov r13, rsi	       444	cache-tree.c	FUNCTION_14
0x400004c	            0x4154	                                push r12	       444	cache-tree.c	FUNCTION_14
0x400004e	          0x8d7164	                   lea esi, [rcx + 0x64]	       453	cache-tree.c	FUNCTION_14	CALL_1
0x4000051	              0x55	                                push rbp	       444	cache-tree.c	FUNCTION_14
0x4000052	              0x53	                                push rbx	       444	cache-tree.c	FUNCTION_14
0x4000053	          0x4889d5	                            mov rbp, rdx	       444	cache-tree.c	FUNCTION_14
0x4000056	            0x89cb	                            mov ebx, ecx	       444	cache-tree.c	FUNCTION_14
0x4000058	        0x4883ec18	                           sub rsp, 0x18	       444	cache-tree.c	FUNCTION_14
0x400005c	          0x4863f6	                         movsxd rsi, esi	       453	cache-tree.c	FUNCTION_14	CALL_1
0x400005f	      0xe800000000	                          call 0x4000064	       453	cache-tree.c	FUNCTION_14	CALL_1
0x4000064	          0x4863d3	                         movsxd rdx, ebx	       454	cache-tree.c	FUNCTION_14	CALL_2
0x4000067	          0x4889ee	                            mov rsi, rbp	       454	cache-tree.c	FUNCTION_14	CALL_2
0x400006a	          0x4c89f7	                            mov rdi, r14	       454	cache-tree.c	FUNCTION_14	CALL_2
0x400006d	      0xe800000000	                          call 0x4000072	       454	cache-tree.c	FUNCTION_14	CALL_2
0x4000072	        0x458b4518	            mov r8d, dword [r13 + 0x18] 	       455	cache-tree.c	FUNCTION_14	CALL_3
0x4000076	        0x418b4d00	                    mov ecx, dword [r13]	       455	cache-tree.c	FUNCTION_14	CALL_3
0x400007a	            0x31d2	                            xor edx, edx	       455	cache-tree.c	FUNCTION_14	CALL_3
0x400007c	            0x31c0	                            xor eax, eax	       455	cache-tree.c	FUNCTION_14	CALL_3
0x400007e	      0xbe00000000	                              mov esi, 0	       455	cache-tree.c	FUNCTION_14	CALL_3
0x4000083	          0x4c89f7	                            mov rdi, r14	       455	cache-tree.c	FUNCTION_14	CALL_3
0x4000086	      0xe800000000	                          call 0x400008b	       455	cache-tree.c	FUNCTION_14	CALL_3
0x400008b	        0x418b5500	                    mov edx, dword [r13]	       467	cache-tree.c	FUNCTION_14	IF_2
0x400008f	            0x85d2	                           test edx, edx	       467	cache-tree.c	FUNCTION_14	IF_2
0x4000091	            0x781b	                            js 0x40000ae	       467	cache-tree.c	FUNCTION_14	IF_2
0x4000093	    0x488b05000000	            mov rax, qword [0x0400009a] 	       468	cache-tree.c	FUNCTION_14	IF_2	CALL_7
0x400009a	        0x498d7504	                      lea rsi, [r13 + 4]	       468	cache-tree.c	FUNCTION_14	IF_2	CALL_7
0x400009e	          0x4c89f7	                            mov rdi, r14	       468	cache-tree.c	FUNCTION_14	IF_2	CALL_7
0x40000a1	        0x488b4058	            mov rax, qword [rax + 0x58] 	       468	cache-tree.c	FUNCTION_14	IF_2	CALL_7
0x40000a5	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       468	cache-tree.c	FUNCTION_14	IF_2	CALL_7
0x40000a9	      0xe800000000	                          call 0x40000ae	       468	cache-tree.c	FUNCTION_14	IF_2	CALL_7
0x40000ae	        0x418b4518	            mov eax, dword [r13 + 0x18] 	       470	cache-tree.c	FUNCTION_14	FOR_1
0x40000b2	            0x85c0	                           test eax, eax	       470	cache-tree.c	FUNCTION_14	FOR_1
0x40000b4	     0xf8ea6000000	                           jle 0x4000160	       470	cache-tree.c	FUNCTION_14	FOR_1
0x40000ba	        0x498b4520	            mov rax, qword [r13 + 0x20] 	       471	cache-tree.c	FUNCTION_14	FOR_1
0x40000be	          0x4531e4	                          xor r12d, r12d	       471	cache-tree.c	FUNCTION_14	FOR_1
0x40000c1	            0x31db	                            xor ebx, ebx	       471	cache-tree.c	FUNCTION_14	FOR_1
0x40000c3	          0x488b28	                    mov rbp, qword [rax]	       471	cache-tree.c	FUNCTION_14	FOR_1
0x40000c6	          0x8b4d0c	              mov ecx, dword [rbp + 0xc]	       471	cache-tree.c	FUNCTION_14	FOR_1
0x40000c9	        0x4c8d7d14	                   lea r15, [rbp + 0x14]	       471	cache-tree.c	FUNCTION_14	FOR_1
0x40000cd	           0xf1f00	                         nop dword [rax]	       471	cache-tree.c	FUNCTION_14	FOR_1
0x40000d0	        0x488b7500	                    mov rsi, qword [rbp]	       478	cache-tree.c	FUNCTION_14	FOR_1	CALL_10
0x40000d4	          0x4c89fa	                            mov rdx, r15	       478	cache-tree.c	FUNCTION_14	FOR_1	CALL_10
0x40000d7	          0x4c89f7	                            mov rdi, r14	       478	cache-tree.c	FUNCTION_14	FOR_1	CALL_10
0x40000da	          0x83c301	                              add ebx, 1	       470	cache-tree.c	FUNCTION_14	FOR_1
0x40000dd	      0xe85effffff	                      call sym.write_one	       478	cache-tree.c	FUNCTION_14	FOR_1	CALL_10
0x40000e2	        0x41395d18	            cmp dword [r13 + 0x18], ebx 	       470	cache-tree.c	FUNCTION_14	FOR_1
0x40000e6	            0x7e78	                           jle 0x4000160	       470	cache-tree.c	FUNCTION_14	FOR_1
0x40000e8	        0x498b4520	            mov rax, qword [r13 + 0x20] 	       471	cache-tree.c	FUNCTION_14	FOR_1
0x40000ec	            0x85db	                           test ebx, ebx	       472	cache-tree.c	FUNCTION_14	FOR_1	IF_3
0x40000ee	      0x4d8d442408	                       lea r8, [r12 + 8]	       471	cache-tree.c	FUNCTION_14	FOR_1
0x40000f3	      0x4a8b6c2008	         mov rbp, qword [rax + r12 + 8] 	       471	cache-tree.c	FUNCTION_14	FOR_1
0x40000f8	            0x7456	                            je 0x4000150	       472	cache-tree.c	FUNCTION_14	FOR_1	IF_3
0x40000fa	        0x4a8b3420	              mov rsi, qword [rax + r12]	       473	cache-tree.c	FUNCTION_14	FOR_1	IF_3
0x40000fe	          0x8b4d0c	              mov ecx, dword [rbp + 0xc]	       474	cache-tree.c	FUNCTION_14	FOR_1	IF_3	IF_4	CALL_8
0x4000101	          0x8b460c	              mov eax, dword [rsi + 0xc]	       474	cache-tree.c	FUNCTION_14	FOR_1	IF_3	IF_4	CALL_8
0x4000104	            0x39c8	                            cmp eax, ecx	        38	cache-tree.c	FUNCTION_3	IF_1
0x4000106	            0x7e10	                           jle 0x4000118	        38	cache-tree.c	FUNCTION_3	IF_1
0x4000108	      0xbf00000000	                              mov edi, 0	       476	cache-tree.c	FUNCTION_14	FOR_1	IF_3	CALL_9
0x400010d	            0x31c0	                            xor eax, eax	       476	cache-tree.c	FUNCTION_14	FOR_1	IF_3	CALL_9
0x400010f	      0xe800000000	                          call 0x4000114	       476	cache-tree.c	FUNCTION_14	FOR_1	IF_3	CALL_9
0x4000114	         0xf1f4000	                         nop dword [rax]	       476	cache-tree.c	FUNCTION_14	FOR_1	IF_3	CALL_9
0x4000118	            0x39c8	                            cmp eax, ecx	        40	cache-tree.c	FUNCTION_3	IF_2
0x400011a	        0x4c8d7d14	                   lea r15, [rbp + 0x14]	       474	cache-tree.c	FUNCTION_14	FOR_1	IF_3	IF_4	CALL_8
0x400011e	            0x7c25	                            jl 0x4000145	        40	cache-tree.c	FUNCTION_3	IF_2
0x4000120	          0x4863d1	                         movsxd rdx, ecx	        42	cache-tree.c	FUNCTION_3	CALL_1
0x4000123	        0x4883c614	                           add rsi, 0x14	        42	cache-tree.c	FUNCTION_3	CALL_1
0x4000127	          0x4c89ff	                            mov rdi, r15	        42	cache-tree.c	FUNCTION_3	CALL_1
0x400012a	      0x4c89442408	                 mov qword [rsp + 8], r8	        42	cache-tree.c	FUNCTION_3	CALL_1
0x400012f	        0x894c2404	                mov dword [rsp + 4], ecx	        42	cache-tree.c	FUNCTION_3	CALL_1
0x4000133	      0xe800000000	                          call 0x4000138	        42	cache-tree.c	FUNCTION_3	CALL_1
0x4000138	            0x85c0	                           test eax, eax	       474	cache-tree.c	FUNCTION_14	FOR_1	IF_3	IF_4	CALL_8
0x400013a	        0x8b4c2404	                mov ecx, dword [rsp + 4]	       474	cache-tree.c	FUNCTION_14	FOR_1	IF_3	IF_4	CALL_8
0x400013e	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       474	cache-tree.c	FUNCTION_14	FOR_1	IF_3	IF_4	CALL_8
0x4000143	            0x7ec3	                           jle 0x4000108	       474	cache-tree.c	FUNCTION_14	FOR_1	IF_3	IF_4	CALL_8
0x4000145	          0x4d89c4	                             mov r12, r8	       444	cache-tree.c	FUNCTION_14
0x4000148	            0xeb86	                           jmp 0x40000d0	       444	cache-tree.c	FUNCTION_14
0x400014a	    0x660f1f440000	                    nop word [rax + rax]	       444	cache-tree.c	FUNCTION_14
0x4000150	          0x8b4d0c	              mov ecx, dword [rbp + 0xc]	       444	cache-tree.c	FUNCTION_14
0x4000153	        0x4c8d7d14	                   lea r15, [rbp + 0x14]	       444	cache-tree.c	FUNCTION_14
0x4000157	            0xebec	                           jmp 0x4000145	       444	cache-tree.c	FUNCTION_14
0x4000159	     0xf1f80000000	                         nop dword [rax]	       444	cache-tree.c	FUNCTION_14
0x4000160	        0x4883c418	                           add rsp, 0x18	       480	cache-tree.c	FUNCTION_14
0x4000164	              0x5b	                                 pop rbx	       480	cache-tree.c	FUNCTION_14
0x4000165	              0x5d	                                 pop rbp	       480	cache-tree.c	FUNCTION_14
0x4000166	            0x415c	                                 pop r12	       480	cache-tree.c	FUNCTION_14
0x4000168	            0x415d	                                 pop r13	       480	cache-tree.c	FUNCTION_14
0x400016a	            0x415e	                                 pop r14	       480	cache-tree.c	FUNCTION_14
0x400016c	            0x415f	                                 pop r15	       480	cache-tree.c	FUNCTION_14
0x400016e	              0xc3	                                     ret	       480	cache-tree.c	FUNCTION_14
write_index_as_tree	ELSE,1:SWITCH,0:IF,7:FOR,0:CALL,12:WHILE,0:DO,0:functions,0	107
0x4001420	            0x4156	                                push r14	       604	cache-tree.c	FUNCTION_19
0x4001422	            0x4155	                                push r13	       604	cache-tree.c	FUNCTION_19
0x4001424	          0x4989d6	                            mov r14, rdx	       604	cache-tree.c	FUNCTION_19
0x4001427	            0x4154	                                push r12	       604	cache-tree.c	FUNCTION_19
0x4001429	              0x55	                                push rbp	       604	cache-tree.c	FUNCTION_19
0x400142a	      0xba01000000	                              mov edx, 1	       175	lockfile.h	FUNCTION_93	CALL_1
0x400142f	              0x53	                                push rbx	       604	cache-tree.c	FUNCTION_19
0x4001430	          0x4889fd	                            mov rbp, rdi	       604	cache-tree.c	FUNCTION_19
0x4001433	          0x4889f3	                            mov rbx, rsi	       604	cache-tree.c	FUNCTION_19
0x4001436	          0x4189cd	                           mov r13d, ecx	       604	cache-tree.c	FUNCTION_19
0x4001439	          0x4c89f6	                            mov rsi, r14	       175	lockfile.h	FUNCTION_93	CALL_1
0x400143c	            0x31c9	                            xor ecx, ecx	       175	lockfile.h	FUNCTION_93	CALL_1
0x400143e	        0x4883ec10	                           sub rsp, 0x10	       604	cache-tree.c	FUNCTION_19
0x4001442	          0x4d89c4	                             mov r12, r8	       604	cache-tree.c	FUNCTION_19
0x4001445	          0x4889e7	                            mov rdi, rsp	       175	lockfile.h	FUNCTION_93	CALL_1
0x4001448	    0x48c704240000	                      mov qword [rsp], 0	       606	cache-tree.c	FUNCTION_19
0x4001450	    0x64488b042528	                mov rax, qword fs:[0x28]	       604	cache-tree.c	FUNCTION_19
0x4001459	      0x4889442408	                mov qword [rsp + 8], rax	       604	cache-tree.c	FUNCTION_19
0x400145e	            0x31c0	                            xor eax, eax	       604	cache-tree.c	FUNCTION_19
0x4001460	      0xe800000000	                          call 0x4001465	       175	lockfile.h	FUNCTION_93	CALL_1
0x4001465	      0xe800000000	                          call 0x400146a	       611	cache-tree.c	FUNCTION_19	CALL_3
0x400146a	          0x4c89f6	                            mov rsi, r14	       611	cache-tree.c	FUNCTION_19	CALL_3
0x400146d	          0x4889c2	                            mov rdx, rax	       611	cache-tree.c	FUNCTION_19	CALL_3
0x4001470	          0x4889df	                            mov rdi, rbx	       611	cache-tree.c	FUNCTION_19	CALL_3
0x4001473	      0xe800000000	                          call 0x4001478	       611	cache-tree.c	FUNCTION_19	CALL_3
0x4001478	            0x85c0	                           test eax, eax	       612	cache-tree.c	FUNCTION_19	IF_1
0x400147a	     0xf8820010000	                            js 0x40015a0	       612	cache-tree.c	FUNCTION_19	IF_1
0x4001480	        0x41f6c502	                            test r13b, 2	       616	cache-tree.c	FUNCTION_19	IF_2
0x4001484	     0xf8586000000	                           jne 0x4001510	       616	cache-tree.c	FUNCTION_19	IF_2
0x400148a	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       619	cache-tree.c	FUNCTION_19	IF_3
0x400148e	          0x4885ff	                           test rdi, rdi	       619	cache-tree.c	FUNCTION_19	IF_3
0x4001491	     0xf84e1000000	                            je 0x4001578	       619	cache-tree.c	FUNCTION_19	IF_3
0x4001497	      0xe800000000	                          call 0x400149c	       622	cache-tree.c	FUNCTION_19	CALL_6
0x400149c	            0x85c0	                           test eax, eax	       623	cache-tree.c	FUNCTION_19	IF_4
0x400149e	     0xf847c000000	                            je 0x4001520	       623	cache-tree.c	FUNCTION_19	IF_4
0x40014a4	          0x4d85e4	                           test r12, r12	       637	cache-tree.c	FUNCTION_19	IF_6
0x40014a7	     0xf849f000000	                            je 0x400154c	       637	cache-tree.c	FUNCTION_19	IF_6
0x40014ad	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       639	cache-tree.c	FUNCTION_19	IF_6	CALL_9
0x40014b1	          0x4c89e6	                            mov rsi, r12	       639	cache-tree.c	FUNCTION_19	IF_6	CALL_9
0x40014b4	      0xe827efffff	                call sym.cache_tree_find	       639	cache-tree.c	FUNCTION_19	IF_6	CALL_9
0x40014b9	          0x4885c0	                           test rax, rax	       640	cache-tree.c	FUNCTION_19	IF_6	IF_7
0x40014bc	     0xf84ee000000	                            je 0x40015b0	       640	cache-tree.c	FUNCTION_19	IF_6	IF_7
0x40014c2	        0x488d5004	                      lea rdx, [rax + 4]	        53	string3.h	FUNCTION_53	CALL_3
0x40014c6	        0x488b4004	                mov rax, qword [rax + 4]	        53	string3.h	FUNCTION_53	CALL_3
0x40014ca	            0x31db	                            xor ebx, ebx	       607	cache-tree.c	FUNCTION_19
0x40014cc	        0x48894500	                    mov qword [rbp], rax	        53	string3.h	FUNCTION_53	CALL_3
0x40014d0	        0x488b4208	                mov rax, qword [rdx + 8]	        53	string3.h	FUNCTION_53	CALL_3
0x40014d4	        0x48894508	                mov qword [rbp + 8], rax	        53	string3.h	FUNCTION_53	CALL_3
0x40014d8	          0x8b4210	            mov eax, dword [rdx + 0x10] 	        53	string3.h	FUNCTION_53	CALL_3
0x40014db	          0x894510	            mov dword [rbp + 0x10], eax 	        53	string3.h	FUNCTION_53	CALL_3
0x40014de	          0x4889e7	                            mov rdi, rsp	       304	lockfile.h	FUNCTION_102	CALL_1
0x40014e1	      0xe800000000	                          call 0x40014e6	       304	lockfile.h	FUNCTION_102	CALL_1
0x40014e6	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       652	cache-tree.c	FUNCTION_19
0x40014eb	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       652	cache-tree.c	FUNCTION_19
0x40014f4	            0x89d8	                            mov eax, ebx	       652	cache-tree.c	FUNCTION_19
0x40014f6	     0xf85ce000000	                           jne 0x40015ca	       652	cache-tree.c	FUNCTION_19
0x40014fc	        0x4883c410	                           add rsp, 0x10	       652	cache-tree.c	FUNCTION_19
0x4001500	              0x5b	                                 pop rbx	       652	cache-tree.c	FUNCTION_19
0x4001501	              0x5d	                                 pop rbp	       652	cache-tree.c	FUNCTION_19
0x4001502	            0x415c	                                 pop r12	       652	cache-tree.c	FUNCTION_19
0x4001504	            0x415d	                                 pop r13	       652	cache-tree.c	FUNCTION_19
0x4001506	            0x415e	                                 pop r14	       652	cache-tree.c	FUNCTION_19
0x4001508	              0xc3	                                     ret	       652	cache-tree.c	FUNCTION_19
0x4001509	     0xf1f80000000	                         nop dword [rax]	       652	cache-tree.c	FUNCTION_19
0x4001510	        0x488d7b20	                   lea rdi, [rbx + 0x20]	       617	cache-tree.c	FUNCTION_19	CALL_4
0x4001514	      0xe800000000	                          call 0x4001519	       617	cache-tree.c	FUNCTION_19	CALL_4
0x4001519	      0xe96cffffff	                           jmp 0x400148a	       617	cache-tree.c	FUNCTION_19	CALL_4
0x400151e	            0x6690	                                     nop	       617	cache-tree.c	FUNCTION_19	CALL_4
0x4001520	          0x4489ee	                           mov esi, r13d	       624	cache-tree.c	FUNCTION_19	IF_4	IF_5	CALL_7
0x4001523	          0x4889df	                            mov rdi, rbx	       624	cache-tree.c	FUNCTION_19	IF_4	IF_5	CALL_7
0x4001526	      0xe800000000	                          call 0x400152b	       624	cache-tree.c	FUNCTION_19	IF_4	IF_5	CALL_7
0x400152b	            0x85c0	                           test eax, eax	       624	cache-tree.c	FUNCTION_19	IF_4	IF_5	CALL_7
0x400152d	     0xf888d000000	                            js 0x40015c0	       624	cache-tree.c	FUNCTION_19	IF_4	IF_5	CALL_7
0x4001533	      0xba01000000	                              mov edx, 1	       628	cache-tree.c	FUNCTION_19	IF_4	CALL_8
0x4001538	          0x4889e6	                            mov rsi, rsp	       628	cache-tree.c	FUNCTION_19	IF_4	CALL_8
0x400153b	          0x4889df	                            mov rdi, rbx	       628	cache-tree.c	FUNCTION_19	IF_4	CALL_8
0x400153e	      0xe800000000	                          call 0x4001543	       628	cache-tree.c	FUNCTION_19	IF_4	CALL_8
0x4001543	          0x4d85e4	                           test r12, r12	       637	cache-tree.c	FUNCTION_19	IF_6
0x4001546	     0xf8561ffffff	                           jne 0x40014ad	       637	cache-tree.c	FUNCTION_19	IF_6
0x400154c	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	        53	string3.h	FUNCTION_53	CALL_3
0x4001550	            0x31db	                            xor ebx, ebx	       607	cache-tree.c	FUNCTION_19
0x4001552	        0x488d4204	                      lea rax, [rdx + 4]	        53	string3.h	FUNCTION_53	CALL_3
0x4001556	        0x488b5204	                mov rdx, qword [rdx + 4]	        53	string3.h	FUNCTION_53	CALL_3
0x400155a	        0x48895500	                    mov qword [rbp], rdx	        53	string3.h	FUNCTION_53	CALL_3
0x400155e	        0x488b5008	                mov rdx, qword [rax + 8]	        53	string3.h	FUNCTION_53	CALL_3
0x4001562	        0x48895508	                mov qword [rbp + 8], rdx	        53	string3.h	FUNCTION_53	CALL_3
0x4001566	          0x8b4010	            mov eax, dword [rax + 0x10] 	        53	string3.h	FUNCTION_53	CALL_3
0x4001569	          0x894510	            mov dword [rbp + 0x10], eax 	        53	string3.h	FUNCTION_53	CALL_3
0x400156c	      0xe96dffffff	                           jmp 0x40014de	        53	string3.h	FUNCTION_53	CALL_3
0x4001571	     0xf1f80000000	                         nop dword [rax]	        53	string3.h	FUNCTION_53	CALL_3
0x4001578	      0xbf01000000	                              mov edi, 1	        13	cache-tree.c	FUNCTION_1	CALL_1
0x400157d	      0xbe28000000	                           mov esi, 0x28	        13	cache-tree.c	FUNCTION_1	CALL_1
0x4001582	      0xe800000000	                          call 0x4001587	        13	cache-tree.c	FUNCTION_1	CALL_1
0x4001587	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	        14	cache-tree.c	FUNCTION_1
0x400158d	          0x4889c7	                            mov rdi, rax	       620	cache-tree.c	FUNCTION_19	CALL_5
0x4001590	        0x48894320	             mov qword [rbx + 0x20], rax	       620	cache-tree.c	FUNCTION_19	CALL_5
0x4001594	      0xe9fefeffff	                           jmp 0x4001497	       620	cache-tree.c	FUNCTION_19	CALL_5
0x4001599	     0xf1f80000000	                         nop dword [rax]	       620	cache-tree.c	FUNCTION_19	CALL_5
0x40015a0	      0xbbffffffff	                     mov ebx, 0xffffffff	       613	cache-tree.c	FUNCTION_19	IF_1
0x40015a5	      0xe934ffffff	                           jmp 0x40014de	       613	cache-tree.c	FUNCTION_19	IF_1
0x40015aa	    0x660f1f440000	                    nop word [rax + rax]	       613	cache-tree.c	FUNCTION_19	IF_1
0x40015b0	      0xbbfdffffff	                     mov ebx, 0xfffffffd	       641	cache-tree.c	FUNCTION_19	IF_6	IF_7
0x40015b5	      0xe924ffffff	                           jmp 0x40014de	       641	cache-tree.c	FUNCTION_19	IF_6	IF_7
0x40015ba	    0x660f1f440000	                    nop word [rax + rax]	       641	cache-tree.c	FUNCTION_19	IF_6	IF_7
0x40015c0	      0xbbfeffffff	                     mov ebx, 0xfffffffe	       625	cache-tree.c	FUNCTION_19	IF_4	IF_5
0x40015c5	      0xe914ffffff	                           jmp 0x40014de	       625	cache-tree.c	FUNCTION_19	IF_4	IF_5
0x40015ca	      0xe800000000	                          call 0x40015cf	       652	cache-tree.c	FUNCTION_19
cache_tree_free	ELSE,0:SWITCH,0:IF,2:FOR,1:CALL,4:WHILE,0:DO,0:functions,0	39
0x40004c0	            0x4155	                                push r13	        19	cache-tree.c	FUNCTION_2
0x40004c2	            0x4154	                                push r12	        19	cache-tree.c	FUNCTION_2
0x40004c4	              0x55	                                push rbp	        19	cache-tree.c	FUNCTION_2
0x40004c5	              0x53	                                push rbx	        19	cache-tree.c	FUNCTION_2
0x40004c6	        0x4883ec08	                              sub rsp, 8	        19	cache-tree.c	FUNCTION_2
0x40004ca	          0x4c8b27	                    mov r12, qword [rdi]	        21	cache-tree.c	FUNCTION_2
0x40004cd	          0x4d85e4	                           test r12, r12	        23	cache-tree.c	FUNCTION_2	IF_1
0x40004d0	            0x7465	                            je 0x4000537	        23	cache-tree.c	FUNCTION_2	IF_1
0x40004d2	      0x418b442418	            mov eax, dword [r12 + 0x18] 	        25	cache-tree.c	FUNCTION_2	FOR_1
0x40004d7	          0x4989fd	                            mov r13, rdi	        25	cache-tree.c	FUNCTION_2	FOR_1
0x40004da	            0x85c0	                           test eax, eax	        25	cache-tree.c	FUNCTION_2	FOR_1
0x40004dc	      0x498b442420	            mov rax, qword [r12 + 0x20] 	        25	cache-tree.c	FUNCTION_2	FOR_1
0x40004e1	            0x7e3c	                           jle 0x400051f	        25	cache-tree.c	FUNCTION_2	FOR_1
0x40004e3	            0x31db	                            xor ebx, ebx	        25	cache-tree.c	FUNCTION_2	FOR_1
0x40004e5	            0x31ed	                            xor ebp, ebp	        25	cache-tree.c	FUNCTION_2	FOR_1
0x40004e7	    0x660f1f840000	                    nop word [rax + rax]	        25	cache-tree.c	FUNCTION_2	FOR_1
0x40004f0	        0x488b3c18	              mov rdi, qword [rax + rbx]	        26	cache-tree.c	FUNCTION_2	FOR_1	IF_2
0x40004f4	          0x4885ff	                           test rdi, rdi	        26	cache-tree.c	FUNCTION_2	FOR_1	IF_2
0x40004f7	            0x7418	                            je 0x4000511	        26	cache-tree.c	FUNCTION_2	FOR_1	IF_2
0x40004f9	      0xe800000000	                          call 0x40004fe	        27	cache-tree.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40004fe	      0x498b442420	            mov rax, qword [r12 + 0x20] 	        28	cache-tree.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x4000503	        0x488b3c18	              mov rdi, qword [rax + rbx]	        28	cache-tree.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x4000507	      0xe800000000	                          call 0x400050c	        28	cache-tree.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x400050c	      0x498b442420	            mov rax, qword [r12 + 0x20] 	        28	cache-tree.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x4000511	          0x83c501	                              add ebp, 1	        25	cache-tree.c	FUNCTION_2	FOR_1
0x4000514	        0x4883c308	                              add rbx, 8	        25	cache-tree.c	FUNCTION_2	FOR_1
0x4000518	      0x41396c2418	            cmp dword [r12 + 0x18], ebp 	        25	cache-tree.c	FUNCTION_2	FOR_1
0x400051d	            0x7fd1	                            jg 0x40004f0	        25	cache-tree.c	FUNCTION_2	FOR_1
0x400051f	          0x4889c7	                            mov rdi, rax	        30	cache-tree.c	FUNCTION_2	CALL_3
0x4000522	      0xe800000000	                          call 0x4000527	        30	cache-tree.c	FUNCTION_2	CALL_3
0x4000527	          0x4c89e7	                            mov rdi, r12	        31	cache-tree.c	FUNCTION_2	CALL_4
0x400052a	      0xe800000000	                          call 0x400052f	        31	cache-tree.c	FUNCTION_2	CALL_4
0x400052f	    0x49c745000000	                      mov qword [r13], 0	        32	cache-tree.c	FUNCTION_2
0x4000537	        0x4883c408	                              add rsp, 8	        33	cache-tree.c	FUNCTION_2
0x400053b	              0x5b	                                 pop rbx	        33	cache-tree.c	FUNCTION_2
0x400053c	              0x5d	                                 pop rbp	        33	cache-tree.c	FUNCTION_2
0x400053d	            0x415c	                                 pop r12	        33	cache-tree.c	FUNCTION_2
0x400053f	            0x415d	                                 pop r13	        33	cache-tree.c	FUNCTION_2
0x4000541	              0xc3	                                     ret	        33	cache-tree.c	FUNCTION_2
find_subtree	ELSE,0:SWITCH,0:IF,3:FOR,0:CALL,4:WHILE,0:DO,0:functions,0	119
0x4000230	            0x4157	                                push r15	        70	cache-tree.c	ELSE_1	FUNCTION_5
0x4000232	            0x4156	                                push r14	        70	cache-tree.c	ELSE_1	FUNCTION_5
0x4000234	          0x4989f6	                            mov r14, rsi	        70	cache-tree.c	ELSE_1	FUNCTION_5
0x4000237	            0x4155	                                push r13	        70	cache-tree.c	ELSE_1	FUNCTION_5
0x4000239	            0x4154	                                push r12	        70	cache-tree.c	ELSE_1	FUNCTION_5
0x400023b	          0x4189d5	                           mov r13d, edx	        70	cache-tree.c	ELSE_1	FUNCTION_5
0x400023e	              0x55	                                push rbp	        70	cache-tree.c	ELSE_1	FUNCTION_5
0x400023f	              0x53	                                push rbx	        70	cache-tree.c	ELSE_1	FUNCTION_5
0x4000240	            0x89cd	                            mov ebp, ecx	        70	cache-tree.c	ELSE_1	FUNCTION_5
0x4000242	          0x4889fb	                            mov rbx, rdi	        70	cache-tree.c	ELSE_1	FUNCTION_5
0x4000245	            0x89d1	                            mov ecx, edx	        72	cache-tree.c	ELSE_1	FUNCTION_5	CALL_1
0x4000247	          0x4889f2	                            mov rdx, rsi	        72	cache-tree.c	ELSE_1	FUNCTION_5	CALL_1
0x400024a	        0x4883ec08	                              sub rsp, 8	        70	cache-tree.c	ELSE_1	FUNCTION_5
0x400024e	        0x4c8b7f20	            mov r15, qword [rdi + 0x20] 	        70	cache-tree.c	ELSE_1	FUNCTION_5
0x4000252	        0x448b6718	           mov r12d, dword [rdi + 0x18] 	        70	cache-tree.c	ELSE_1	FUNCTION_5
0x4000256	          0x4c89fe	                            mov rsi, r15	        72	cache-tree.c	ELSE_1	FUNCTION_5	CALL_1
0x4000259	          0x4489e7	                           mov edi, r12d	        72	cache-tree.c	ELSE_1	FUNCTION_5	CALL_1
0x400025c	      0xe80fffffff	             call sym.subtree_pos.isra.0	        72	cache-tree.c	ELSE_1	FUNCTION_5	CALL_1
0x4000261	            0x85c0	                           test eax, eax	        73	cache-tree.c	ELSE_1	FUNCTION_5	IF_1
0x4000263	            0x781b	                            js 0x4000280	        73	cache-tree.c	ELSE_1	FUNCTION_5	IF_1
0x4000265	            0x4898	                                    cdqe	        74	cache-tree.c	ELSE_1	FUNCTION_5	IF_1
0x4000267	        0x498b04c7	            mov rax, qword [r15 + rax*8]	        74	cache-tree.c	ELSE_1	FUNCTION_5	IF_1
0x400026b	        0x4883c408	                              add rsp, 8	        91	cache-tree.c	ELSE_1	FUNCTION_5
0x400026f	              0x5b	                                 pop rbx	        91	cache-tree.c	ELSE_1	FUNCTION_5
0x4000270	              0x5d	                                 pop rbp	        91	cache-tree.c	ELSE_1	FUNCTION_5
0x4000271	            0x415c	                                 pop r12	        91	cache-tree.c	ELSE_1	FUNCTION_5
0x4000273	            0x415d	                                 pop r13	        91	cache-tree.c	ELSE_1	FUNCTION_5
0x4000275	            0x415e	                                 pop r14	        91	cache-tree.c	ELSE_1	FUNCTION_5
0x4000277	            0x415f	                                 pop r15	        91	cache-tree.c	ELSE_1	FUNCTION_5
0x4000279	              0xc3	                                     ret	        91	cache-tree.c	ELSE_1	FUNCTION_5
0x400027a	    0x660f1f440000	                    nop word [rax + rax]	        91	cache-tree.c	ELSE_1	FUNCTION_5
0x4000280	            0x85ed	                           test ebp, ebp	        75	cache-tree.c	ELSE_1	FUNCTION_5	IF_2
0x4000282	     0xf8408010000	                            je 0x4000390	        75	cache-tree.c	ELSE_1	FUNCTION_5	IF_2
0x4000288	            0xf7d0	                                 not eax	        78	cache-tree.c	ELSE_1	FUNCTION_5
0x400028a	          0x4863e8	                         movsxd rbp, eax	        78	cache-tree.c	ELSE_1	FUNCTION_5
0x400028d	          0x8b431c	            mov eax, dword [rbx + 0x1c] 	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x4000290	          0x4439e0	                           cmp eax, r12d	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x4000293	            0x7f4c	                            jg 0x40002e1	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x4000295	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x4000299	            0x89c2	                            mov edx, eax	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x400029b	          0xc1ea1f	                           shr edx, 0x1f	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x400029e	             0x1c2	                            add edx, eax	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x40002a0	            0xd1fa	                              sar edx, 1	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x40002a2	          0x4439e2	                           cmp edx, r12d	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x40002a5	     0xf8fd5000000	                            jg 0x4000380	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x40002ab	      0x418d542401	                      lea edx, [r12 + 1]	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x40002b0	          0x89531c	             mov dword [rbx + 0x1c], edx	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x40002b3	          0x4863d2	                         movsxd rdx, edx	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x40002b6	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_80	IF_1	CALL_1
0x40002c0	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_80	IF_1	CALL_1
0x40002c3	     0xf87e3000000	                            ja 0x40003ac	       795	git-compat-util.h	FUNCTION_80	IF_1	CALL_1
0x40002c9	    0x488d34d50000	                        lea rsi, [rdx*8]	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x40002d1	          0x4c89ff	                            mov rdi, r15	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x40002d4	      0xe800000000	                          call 0x40002d9	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x40002d9	        0x448b6318	           mov r12d, dword [rbx + 0x18] 	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x40002dd	        0x48894320	             mov qword [rbx + 0x20], rax	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x40002e1	          0x4d63fd	                        movsxd r15, r13d	        82	cache-tree.c	ELSE_1	FUNCTION_5	CALL_3
0x40002e4	        0x4183c401	                             add r12d, 1	        80	cache-tree.c	ELSE_1	FUNCTION_5
0x40002e8	        0x4983ffe7	             cmp r15, 0xffffffffffffffe7	       785	git-compat-util.h	FUNCTION_79	IF_1	CALL_1
0x40002ec	        0x44896318	            mov dword [rbx + 0x18], r12d	        80	cache-tree.c	ELSE_1	FUNCTION_5
0x40002f0	     0xf87c7000000	                            ja 0x40003bd	       785	git-compat-util.h	FUNCTION_79	IF_1	CALL_1
0x40002f6	     0xf849b000000	                            je 0x4000397	       785	git-compat-util.h	FUNCTION_79	IF_1	CALL_1
0x40002fc	        0x498d7719	                   lea rsi, [r15 + 0x19]	        82	cache-tree.c	ELSE_1	FUNCTION_5	CALL_3
0x4000300	      0xbf01000000	                              mov edi, 1	        82	cache-tree.c	ELSE_1	FUNCTION_5	CALL_3
0x4000305	      0xe800000000	                          call 0x400030a	        82	cache-tree.c	ELSE_1	FUNCTION_5	CALL_3
0x400030a	        0x488d7814	                   lea rdi, [rax + 0x14]	        53	string3.h	FUNCTION_53	CALL_3
0x400030e	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_53	CALL_3
0x4000311	          0x4c89f6	                            mov rsi, r14	        53	string3.h	FUNCTION_53	CALL_3
0x4000314	          0x4989c4	                            mov r12, rax	        82	cache-tree.c	ELSE_1	FUNCTION_5	CALL_3
0x4000317	      0xe800000000	                          call 0x400031c	        53	string3.h	FUNCTION_53	CALL_3
0x400031c	          0x8b4318	            mov eax, dword [rbx + 0x18] 	        86	cache-tree.c	ELSE_1	FUNCTION_5	IF_3
0x400031f	    0x49c704240000	                      mov qword [r12], 0	        83	cache-tree.c	ELSE_1	FUNCTION_5
0x4000327	      0x45896c240c	             mov dword [r12 + 0xc], r13d	        84	cache-tree.c	ELSE_1	FUNCTION_5
0x400032c	            0x39c5	                            cmp ebp, eax	        86	cache-tree.c	ELSE_1	FUNCTION_5	IF_3
0x400032e	            0x7c20	                            jl 0x4000350	        86	cache-tree.c	ELSE_1	FUNCTION_5	IF_3
0x4000330	        0x48c1e503	                              shl rbp, 3	        86	cache-tree.c	ELSE_1	FUNCTION_5	IF_3
0x4000334	        0x488b4320	            mov rax, qword [rbx + 0x20] 	        89	cache-tree.c	ELSE_1	FUNCTION_5
0x4000338	        0x4c892428	              mov qword [rax + rbp], r12	        89	cache-tree.c	ELSE_1	FUNCTION_5
0x400033c	        0x4883c408	                              add rsp, 8	        91	cache-tree.c	ELSE_1	FUNCTION_5
0x4000340	          0x4c89e0	                            mov rax, r12	        90	cache-tree.c	ELSE_1	FUNCTION_5
0x4000343	              0x5b	                                 pop rbx	        91	cache-tree.c	ELSE_1	FUNCTION_5
0x4000344	              0x5d	                                 pop rbp	        91	cache-tree.c	ELSE_1	FUNCTION_5
0x4000345	            0x415c	                                 pop r12	        91	cache-tree.c	ELSE_1	FUNCTION_5
0x4000347	            0x415d	                                 pop r13	        91	cache-tree.c	ELSE_1	FUNCTION_5
0x4000349	            0x415e	                                 pop r14	        91	cache-tree.c	ELSE_1	FUNCTION_5
0x400034b	            0x415f	                                 pop r15	        91	cache-tree.c	ELSE_1	FUNCTION_5
0x400034d	              0xc3	                                     ret	        91	cache-tree.c	ELSE_1	FUNCTION_5
0x400034e	            0x6690	                                     nop	        91	cache-tree.c	ELSE_1	FUNCTION_5
0x4000350	            0x29e8	                            sub eax, ebp	        87	cache-tree.c	ELSE_1	FUNCTION_5	IF_3	CALL_4
0x4000352	        0x48c1e503	                              shl rbp, 3	        87	cache-tree.c	ELSE_1	FUNCTION_5	IF_3	CALL_4
0x4000356	          0x83e801	                              sub eax, 1	       861	git-compat-util.h	FUNCTION_83	IF_1
0x4000359	            0x74d9	                            je 0x4000334	       861	git-compat-util.h	FUNCTION_83	IF_1
0x400035b	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	        87	cache-tree.c	ELSE_1	FUNCTION_5	IF_3	CALL_4
0x400035f	            0x4898	                                    cdqe	        59	string3.h	FUNCTION_54	CALL_3
0x4000361	    0x488d14c50000	                        lea rdx, [rax*8]	        59	string3.h	FUNCTION_54	CALL_3
0x4000369	        0x488d3429	                    lea rsi, [rcx + rbp]	        59	string3.h	FUNCTION_54	CALL_3
0x400036d	      0x488d7c2908	                lea rdi, [rcx + rbp + 8]	        59	string3.h	FUNCTION_54	CALL_3
0x4000372	      0xe800000000	                          call 0x4000377	        59	string3.h	FUNCTION_54	CALL_3
0x4000377	            0xebbb	                           jmp 0x4000334	        59	string3.h	FUNCTION_54	CALL_3
0x4000379	     0xf1f80000000	                         nop dword [rax]	        59	string3.h	FUNCTION_54	CALL_3
0x4000380	          0x89531c	             mov dword [rbx + 0x1c], edx	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x4000383	      0xe92bffffff	                           jmp 0x40002b3	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x4000388	     0xf1f84000000	                   nop dword [rax + rax]	        79	cache-tree.c	ELSE_1	FUNCTION_5	CALL_2
0x4000390	            0x31c0	                            xor eax, eax	        76	cache-tree.c	ELSE_1	FUNCTION_5	IF_2
0x4000392	      0xe9d4feffff	                           jmp 0x400026b	        76	cache-tree.c	ELSE_1	FUNCTION_5	IF_2
0x4000397	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_79	IF_1	CALL_2
0x400039c	        0x4883ceff	              or rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_79	IF_1	CALL_2
0x40003a0	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_79	IF_1	CALL_2
0x40003a5	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_79	IF_1	CALL_2
0x40003a7	      0xe800000000	                          call 0x40003ac	       786	git-compat-util.h	FUNCTION_79	IF_1	CALL_2
0x40003ac	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_80	IF_1	CALL_2
0x40003b1	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_80	IF_1	CALL_2
0x40003b6	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_80	IF_1	CALL_2
0x40003b8	      0xe800000000	                          call 0x40003bd	       796	git-compat-util.h	FUNCTION_80	IF_1	CALL_2
0x40003bd	          0x4c89fa	                            mov rdx, r15	       786	git-compat-util.h	FUNCTION_79	IF_1	CALL_2
0x40003c0	      0xbe18000000	                           mov esi, 0x18	       786	git-compat-util.h	FUNCTION_79	IF_1	CALL_2
0x40003c5	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_79	IF_1	CALL_2
0x40003ca	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_79	IF_1	CALL_2
0x40003cc	      0xe800000000	                          call 0x40003d1	       786	git-compat-util.h	FUNCTION_79	IF_1	CALL_2
cache_tree_update	ELSE,0:SWITCH,0:IF,2:FOR,0:CALL,2:WHILE,0:DO,0:functions,0	138
0x40011d0	            0x4157	                                push r15	       427	cache-tree.c	FUNCTION_13
0x40011d2	            0x4156	                                push r14	       427	cache-tree.c	FUNCTION_13
0x40011d4	            0x4155	                                push r13	       427	cache-tree.c	FUNCTION_13
0x40011d6	            0x4154	                                push r12	       427	cache-tree.c	FUNCTION_13
0x40011d8	              0x55	                                push rbp	       427	cache-tree.c	FUNCTION_13
0x40011d9	              0x53	                                push rbx	       427	cache-tree.c	FUNCTION_13
0x40011da	            0x89f5	                            mov ebp, esi	       155	cache-tree.c	FUNCTION_9
0x40011dc	          0x83e508	                              and ebp, 8	       155	cache-tree.c	FUNCTION_9
0x40011df	        0x4883ec48	                           sub rsp, 0x48	       427	cache-tree.c	FUNCTION_13
0x40011e3	        0x488b5720	            mov rdx, qword [rdi + 0x20] 	       428	cache-tree.c	FUNCTION_13
0x40011e7	          0x8b470c	              mov eax, dword [rdi + 0xc]	       430	cache-tree.c	FUNCTION_13
0x40011ea	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	       427	cache-tree.c	FUNCTION_13
0x40011f3	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       427	cache-tree.c	FUNCTION_13
0x40011f8	            0x31c9	                            xor ecx, ecx	       427	cache-tree.c	FUNCTION_13
0x40011fa	      0x48897c2428	             mov qword [rsp + 0x28], rdi	       427	cache-tree.c	FUNCTION_13
0x40011ff	        0x89742424	             mov dword [rsp + 0x24], esi	       427	cache-tree.c	FUNCTION_13
0x4001203	      0x4889542418	             mov qword [rsp + 0x18], rdx	       428	cache-tree.c	FUNCTION_13
0x4001208	          0x488b17	                    mov rdx, qword [rdi]	       429	cache-tree.c	FUNCTION_13
0x400120b	            0x85c0	                           test eax, eax	       159	cache-tree.c	FUNCTION_9	FOR_1
0x400120d	        0x89442420	             mov dword [rsp + 0x20], eax	       430	cache-tree.c	FUNCTION_13
0x4001211	      0x4889542410	             mov qword [rsp + 0x10], rdx	       429	cache-tree.c	FUNCTION_13
0x4001216	            0x7e76	                           jle 0x400128e	       159	cache-tree.c	FUNCTION_9	FOR_1
0x4001218	        0x8b442420	            mov eax, dword [rsp + 0x20] 	       159	cache-tree.c	FUNCTION_9	FOR_1
0x400121c	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       159	cache-tree.c	FUNCTION_9	FOR_1
0x4001221	          0x4531f6	                          xor r14d, r14d	       159	cache-tree.c	FUNCTION_9	FOR_1
0x4001224	          0x83e801	                              sub eax, 1	       159	cache-tree.c	FUNCTION_9	FOR_1
0x4001227	          0x4989d4	                            mov r12, rdx	       159	cache-tree.c	FUNCTION_9	FOR_1
0x400122a	      0x488d5cc208	              lea rbx, [rdx + rax*8 + 8]	       159	cache-tree.c	FUNCTION_9	FOR_1
0x400122f	              0x90	                                     nop	       159	cache-tree.c	FUNCTION_9	FOR_1
0x4001230	        0x4d8b2c24	                    mov r13, qword [r12]	       160	cache-tree.c	FUNCTION_9	FOR_1
0x4001234	    0x41f745380030	        test dword [r13 + 0x38], 0x3000 	       161	cache-tree.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x400123c	            0x743e	                            je 0x400127c	       161	cache-tree.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x400123e	            0x85ed	                           test ebp, ebp	       162	cache-tree.c	FUNCTION_9	FOR_1	IF_1	IF_2
0x4001240	     0xf8585010000	                           jne 0x40013cb	       162	cache-tree.c	FUNCTION_9	FOR_1	IF_1	IF_2
0x4001246	        0x4183c601	                             add r14d, 1	       164	cache-tree.c	FUNCTION_9	FOR_1	IF_1	IF_3
0x400124a	        0x4183fe0a	                           cmp r14d, 0xa	       164	cache-tree.c	FUNCTION_9	FOR_1	IF_1	IF_3
0x400124e	     0xf8f5c010000	                            jg 0x40013b0	       164	cache-tree.c	FUNCTION_9	FOR_1	IF_1	IF_3
0x4001254	        0x498d7d44	                   lea rdi, [r13 + 0x44]	       168	cache-tree.c	FUNCTION_9	FOR_1	IF_1	CALL_3
0x4001258	      0xe800000000	                          call 0x400125d	       168	cache-tree.c	FUNCTION_9	FOR_1	IF_1	CALL_3
0x400125d	    0x488b3d000000	            mov rdi, qword [0x04001264] 	        97	stdio2.h	FUNCTION_107	CALL_1
0x4001264	        0x498d4d58	                   lea rcx, [r13 + 0x58]	        97	stdio2.h	FUNCTION_107	CALL_1
0x4001268	          0x4989c0	                             mov r8, rax	       168	cache-tree.c	FUNCTION_9	FOR_1	IF_1	CALL_3
0x400126b	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_107	CALL_1
0x4001270	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_107	CALL_1
0x4001275	            0x31c0	                            xor eax, eax	        97	stdio2.h	FUNCTION_107	CALL_1
0x4001277	      0xe800000000	                          call 0x400127c	        97	stdio2.h	FUNCTION_107	CALL_1
0x400127c	        0x4983c408	                              add r12, 8	        97	stdio2.h	FUNCTION_107	CALL_1
0x4001280	          0x4939dc	                            cmp r12, rbx	       159	cache-tree.c	FUNCTION_9	FOR_1
0x4001283	            0x75ab	                           jne 0x4001230	       159	cache-tree.c	FUNCTION_9	FOR_1
0x4001285	          0x4585f6	                         test r14d, r14d	       172	cache-tree.c	FUNCTION_9	IF_4
0x4001288	     0xf853d010000	                           jne 0x40013cb	       172	cache-tree.c	FUNCTION_9	IF_4
0x400128e	      0x837c242001	               cmp dword [rsp + 0x20], 1	       180	cache-tree.c	FUNCTION_9	FOR_2
0x4001293	     0xf8eb7000000	                           jle 0x4001350	       180	cache-tree.c	FUNCTION_9	FOR_2
0x4001299	        0x8b442420	            mov eax, dword [rsp + 0x20] 	       180	cache-tree.c	FUNCTION_9	FOR_2
0x400129d	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       180	cache-tree.c	FUNCTION_9	FOR_2
0x40012a2	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       180	cache-tree.c	FUNCTION_9	FOR_2
0x40012aa	          0x83e802	                              sub eax, 2	       180	cache-tree.c	FUNCTION_9	FOR_2
0x40012ad	          0x4989f7	                            mov r15, rsi	       180	cache-tree.c	FUNCTION_9	FOR_2
0x40012b0	      0x4c8d74c608	              lea r14, [rsi + rax*8 + 8]	       180	cache-tree.c	FUNCTION_9	FOR_2
0x40012b5	            0xeb12	                           jmp 0x40012c9	       180	cache-tree.c	FUNCTION_9	FOR_2
0x40012b7	    0x660f1f840000	                    nop word [rax + rax]	       180	cache-tree.c	FUNCTION_9	FOR_2
0x40012c0	        0x4983c708	                              add r15, 8	       180	cache-tree.c	FUNCTION_9	FOR_2
0x40012c4	          0x4d39fe	                            cmp r14, r15	       180	cache-tree.c	FUNCTION_9	FOR_2
0x40012c7	            0x747f	                            je 0x4001348	       180	cache-tree.c	FUNCTION_9	FOR_2
0x40012c9	          0x498b07	                    mov rax, qword [r15]	       185	cache-tree.c	FUNCTION_9	FOR_2
0x40012cc	        0x4d8b6f08	                mov r13, qword [r15 + 8]	       186	cache-tree.c	FUNCTION_9	FOR_2
0x40012d0	        0x488d6858	                   lea rbp, [rax + 0x58]	       185	cache-tree.c	FUNCTION_9	FOR_2
0x40012d4	        0x4d8d6558	                   lea r12, [r13 + 0x58]	       186	cache-tree.c	FUNCTION_9	FOR_2
0x40012d8	          0x4889ef	                            mov rdi, rbp	       187	cache-tree.c	FUNCTION_9	FOR_2	CALL_5
0x40012db	      0xe800000000	                          call 0x40012e0	       187	cache-tree.c	FUNCTION_9	FOR_2	CALL_5
0x40012e0	          0x4c89e7	                            mov rdi, r12	       188	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_6
0x40012e3	          0x4863d8	                         movsxd rbx, eax	       188	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_6
0x40012e6	      0xe800000000	                          call 0x40012eb	       188	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_6
0x40012eb	          0x4839c3	                            cmp rbx, rax	       188	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_6
0x40012ee	            0x73d0	                           jae 0x40012c0	       188	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_6
0x40012f0	          0x4889da	                            mov rdx, rbx	       189	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_7
0x40012f3	          0x4c89e6	                            mov rsi, r12	       189	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_7
0x40012f6	          0x4889ef	                            mov rdi, rbp	       189	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_7
0x40012f9	      0xe800000000	                          call 0x40012fe	       189	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_7
0x40012fe	            0x85c0	                           test eax, eax	       188	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_6
0x4001300	            0x75be	                           jne 0x40012c0	       188	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_6
0x4001302	    0x41807c1d582f	      cmp byte [r13 + rbx + 0x58], 0x2f 	       189	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_7
0x4001308	            0x75b6	                           jne 0x40012c0	       189	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_7
0x400130a	      0x8344240c01	                add dword [rsp + 0xc], 1	       191	cache-tree.c	FUNCTION_9	FOR_2	IF_5	IF_6
0x400130f	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       191	cache-tree.c	FUNCTION_9	FOR_2	IF_5	IF_6
0x4001313	          0x83f80a	                            cmp eax, 0xa	       191	cache-tree.c	FUNCTION_9	FOR_2	IF_5	IF_6
0x4001316	     0xf8f94000000	                            jg 0x40013b0	       191	cache-tree.c	FUNCTION_9	FOR_2	IF_5	IF_6
0x400131c	    0x488b3d000000	            mov rdi, qword [0x04001323] 	        97	stdio2.h	FUNCTION_107	CALL_1
0x4001323	            0x31c0	                            xor eax, eax	        97	stdio2.h	FUNCTION_107	CALL_1
0x4001325	          0x4d89e0	                             mov r8, r12	        97	stdio2.h	FUNCTION_107	CALL_1
0x4001328	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	FUNCTION_107	CALL_1
0x400132b	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_107	CALL_1
0x4001330	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_107	CALL_1
0x4001335	        0x4983c708	                              add r15, 8	        97	stdio2.h	FUNCTION_107	CALL_1
0x4001339	      0xe800000000	                          call 0x400133e	        97	stdio2.h	FUNCTION_107	CALL_1
0x400133e	          0x4d39fe	                            cmp r14, r15	       180	cache-tree.c	FUNCTION_9	FOR_2
0x4001341	            0x7586	                           jne 0x40012c9	       180	cache-tree.c	FUNCTION_9	FOR_2
0x4001343	       0xf1f440000	                   nop dword [rax + rax]	       180	cache-tree.c	FUNCTION_9	FOR_2
0x4001348	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       199	cache-tree.c	FUNCTION_9	IF_7
0x400134c	            0x85f6	                           test esi, esi	       199	cache-tree.c	FUNCTION_9	IF_7
0x400134e	            0x757b	                           jne 0x40013cb	       199	cache-tree.c	FUNCTION_9	IF_7
0x4001350	        0x4883ec08	                              sub rsp, 8	       435	cache-tree.c	FUNCTION_13	CALL_2
0x4001354	          0x4531c0	                            xor r8d, r8d	       435	cache-tree.c	FUNCTION_13	CALL_2
0x4001357	      0xb900000000	                              mov ecx, 0	       435	cache-tree.c	FUNCTION_13	CALL_2
0x400135c	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	       435	cache-tree.c	FUNCTION_13	CALL_2
0x4001360	              0x50	                                push rax	       435	cache-tree.c	FUNCTION_13	CALL_2
0x4001361	        0x8b542430	            mov edx, dword [rsp + 0x30] 	       435	cache-tree.c	FUNCTION_13	CALL_2
0x4001365	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       435	cache-tree.c	FUNCTION_13	CALL_2
0x400136a	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       435	cache-tree.c	FUNCTION_13	CALL_2
0x400136f	      0x4c8d4c2444	                    lea r9, [rsp + 0x44]	       435	cache-tree.c	FUNCTION_13	CALL_2
0x4001374	      0xe8f7f2ffff	                     call sym.update_one	       435	cache-tree.c	FUNCTION_13	CALL_2
0x4001379	            0x85c0	                           test eax, eax	       436	cache-tree.c	FUNCTION_13	IF_2
0x400137b	              0x5a	                                 pop rdx	       436	cache-tree.c	FUNCTION_13	IF_2
0x400137c	              0x59	                                 pop rcx	       436	cache-tree.c	FUNCTION_13	IF_2
0x400137d	            0x780b	                            js 0x400138a	       436	cache-tree.c	FUNCTION_13	IF_2
0x400137f	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       438	cache-tree.c	FUNCTION_13
0x4001384	        0x83481420	             or dword [rax + 0x14], 0x20	       438	cache-tree.c	FUNCTION_13
0x4001388	            0x31c0	                            xor eax, eax	       439	cache-tree.c	FUNCTION_13
0x400138a	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	       440	cache-tree.c	FUNCTION_13
0x400138f	    0x644833342528	                xor rsi, qword fs:[0x28]	       440	cache-tree.c	FUNCTION_13
0x4001398	            0x7538	                           jne 0x40013d2	       440	cache-tree.c	FUNCTION_13
0x400139a	        0x4883c448	                           add rsp, 0x48	       440	cache-tree.c	FUNCTION_13
0x400139e	              0x5b	                                 pop rbx	       440	cache-tree.c	FUNCTION_13
0x400139f	              0x5d	                                 pop rbp	       440	cache-tree.c	FUNCTION_13
0x40013a0	            0x415c	                                 pop r12	       440	cache-tree.c	FUNCTION_13
0x40013a2	            0x415d	                                 pop r13	       440	cache-tree.c	FUNCTION_13
0x40013a4	            0x415e	                                 pop r14	       440	cache-tree.c	FUNCTION_13
0x40013a6	            0x415f	                                 pop r15	       440	cache-tree.c	FUNCTION_13
0x40013a8	              0xc3	                                     ret	       440	cache-tree.c	FUNCTION_13
0x40013a9	     0xf1f80000000	                         nop dword [rax]	       440	cache-tree.c	FUNCTION_13
0x40013b0	    0x488b0d000000	            mov rcx, qword [0x040013b7] 	        97	stdio2.h	FUNCTION_107	CALL_1
0x40013b7	      0xba04000000	                              mov edx, 4	        97	stdio2.h	FUNCTION_107	CALL_1
0x40013bc	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_107	CALL_1
0x40013c1	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	FUNCTION_107	CALL_1
0x40013c6	      0xe800000000	                          call 0x40013cb	        97	stdio2.h	FUNCTION_107	CALL_1
0x40013cb	      0xb8ffffffff	                     mov eax, 0xffffffff	        97	stdio2.h	FUNCTION_107	CALL_1
0x40013d0	            0xebb8	                           jmp 0x400138a	        97	stdio2.h	FUNCTION_107	CALL_1
0x40013d2	      0xe800000000	                          call 0x40013d7	       440	cache-tree.c	FUNCTION_13
