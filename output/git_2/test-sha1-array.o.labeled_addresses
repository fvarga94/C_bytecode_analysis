print_oid	IF,0:CALL,2:ELSE,0:FOR,0:functions,0:WHILE,0:SWITCH,0:DO,0	7
0x4000040	        0x4883ec08	                              sub rsp, 8	         6	test-sha1-array.c	FUNCTION_1
0x4000044	      0xe800000000	                          call 0x4000049	         7	test-sha1-array.c	FUNCTION_1	CALL_2
0x4000049	          0x4889c7	                            mov rdi, rax	         7	test-sha1-array.c	FUNCTION_1	CALL_2
0x400004c	      0xe800000000	                          call 0x4000051	         7	test-sha1-array.c	FUNCTION_1	CALL_2
0x4000051	            0x31c0	                            xor eax, eax	         9	test-sha1-array.c	FUNCTION_1
0x4000053	        0x4883c408	                              add rsp, 8	         9	test-sha1-array.c	FUNCTION_1
0x4000057	              0xc3	                                     ret	         9	test-sha1-array.c	FUNCTION_1
cmd__sha1_array	IF,6:CALL,15:ELSE,4:FOR,0:functions,0:WHILE,1:SWITCH,0:DO,0	100
0x4000060	              0x53	                                push rbx	        12	test-sha1-array.c	FUNCTION_2
0x4000061	        0x4883ec60	                           sub rsp, 0x60	        12	test-sha1-array.c	FUNCTION_2
0x4000065	    0x64488b042528	                mov rax, qword fs:[0x28]	        12	test-sha1-array.c	FUNCTION_2
0x400006e	      0x4889442458	             mov qword [rsp + 0x58], rax	        12	test-sha1-array.c	FUNCTION_2
0x4000073	            0x31c0	                            xor eax, eax	        12	test-sha1-array.c	FUNCTION_2
0x4000075	    0x48c704240000	                      mov qword [rsp], 0	        13	test-sha1-array.c	FUNCTION_2
0x400007d	    0xc74424080000	                  mov dword [rsp + 8], 0	        13	test-sha1-array.c	FUNCTION_2
0x4000085	    0xc744240c0000	                mov dword [rsp + 0xc], 0	        13	test-sha1-array.c	FUNCTION_2
0x400008d	    0xc74424100000	               mov dword [rsp + 0x10], 0	        13	test-sha1-array.c	FUNCTION_2
0x4000095	    0x48c744242000	               mov qword [rsp + 0x20], 0	        14	test-sha1-array.c	FUNCTION_2
0x400009e	    0x48c744242800	               mov qword [rsp + 0x28], 0	        14	test-sha1-array.c	FUNCTION_2
0x40000a7	    0x48c744243000	               mov qword [rsp + 0x30], 0	        14	test-sha1-array.c	FUNCTION_2
0x40000b0	    0x488b35000000	            mov rsi, qword [0x040000b7] 	        16	test-sha1-array.c	FUNCTION_2	WHILE_1	CALL_1
0x40000b7	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        16	test-sha1-array.c	FUNCTION_2	WHILE_1	CALL_1
0x40000bc	      0xe800000000	                          call 0x40000c1	        16	test-sha1-array.c	FUNCTION_2	WHILE_1	CALL_1
0x40000c1	          0x83f8ff	             cmp eax, 0xffffffffffffffff	        16	test-sha1-array.c	FUNCTION_2	WHILE_1	CALL_1
0x40000c4	     0xf8403010000	                            je 0x40001cd	        16	test-sha1-array.c	FUNCTION_2	WHILE_1	CALL_1
0x40000ca	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	        20	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x40000cf	      0xb800000000	                              mov eax, 0	        20	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x40000d4	          0x4c89c3	                             mov rbx, r8	        20	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x40000d7	            0xeb14	                           jmp 0x40000ed	        20	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x40000d9	     0xf1f80000000	                         nop dword [rax]	        20	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x40000e0	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_9	DO_1
0x40000e4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_9	DO_1
0x40000e8	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_9	DO_1
0x40000eb	            0x7533	                           jne 0x4000120	       488	git-compat-util.h	FUNCTION_9	DO_1
0x40000ed	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_9	DO_1	IF_1
0x40000f0	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_9	DO_1	IF_1
0x40000f2	            0x75ec	                           jne 0x40000e0	       484	git-compat-util.h	FUNCTION_9	DO_1	IF_1
0x40000f4	      0x488d742440	                   lea rsi, [rsp + 0x40]	        21	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	IF_2	CALL_3
0x40000f9	          0x4889df	                            mov rdi, rbx	        21	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	IF_2	CALL_3
0x40000fc	      0xe800000000	                          call 0x4000101	        21	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	IF_2	CALL_3
0x4000101	            0x85c0	                           test eax, eax	        21	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	IF_2	CALL_3
0x4000103	     0xf85dc000000	                           jne 0x40001e5	        21	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	IF_2	CALL_3
0x4000109	      0x488d742440	                   lea rsi, [rsp + 0x40]	        23	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_5
0x400010e	          0x4889e7	                            mov rdi, rsp	        23	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_5
0x4000111	      0xe800000000	                          call 0x4000116	        23	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_5
0x4000116	            0xeb98	                           jmp 0x40000b0	        23	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_5
0x4000118	     0xf1f84000000	                   nop dword [rax + rax]	        23	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_5
0x4000120	          0x4c89c3	                             mov rbx, r8	        20	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x4000123	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_9	DO_1
0x4000128	            0xeb13	                           jmp 0x400013d	       488	git-compat-util.h	FUNCTION_9	DO_1
0x400012a	    0x660f1f440000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_9	DO_1
0x4000130	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_9	DO_1
0x4000134	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_9	DO_1
0x4000138	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_9	DO_1
0x400013b	            0x7543	                           jne 0x4000180	       488	git-compat-util.h	FUNCTION_9	DO_1
0x400013d	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_9	DO_1	IF_1
0x4000140	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_9	DO_1	IF_1
0x4000142	            0x75ec	                           jne 0x4000130	       484	git-compat-util.h	FUNCTION_9	DO_1	IF_1
0x4000144	      0x488d742440	                   lea rsi, [rsp + 0x40]	        25	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	IF_4	CALL_7
0x4000149	          0x4889df	                            mov rdi, rbx	        25	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	IF_4	CALL_7
0x400014c	      0xe800000000	                          call 0x4000151	        25	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	IF_4	CALL_7
0x4000151	            0x85c0	                           test eax, eax	        25	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	IF_4	CALL_7
0x4000153	     0xf858c000000	                           jne 0x40001e5	        25	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	IF_4	CALL_7
0x4000159	      0x488d742440	                   lea rsi, [rsp + 0x40]	        27	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_10
0x400015e	          0x4889e7	                            mov rdi, rsp	        27	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_10
0x4000161	      0xe800000000	                          call 0x4000166	        27	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_10
0x4000166	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	FUNCTION_35	CALL_2
0x400016b	            0x89c2	                            mov edx, eax	       104	stdio2.h	FUNCTION_35	CALL_2
0x400016d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	FUNCTION_35	CALL_2
0x4000172	            0x31c0	                            xor eax, eax	       104	stdio2.h	FUNCTION_35	CALL_2
0x4000174	      0xe800000000	                          call 0x4000179	       104	stdio2.h	FUNCTION_35	CALL_2
0x4000179	      0xe932ffffff	                           jmp 0x40000b0	       104	stdio2.h	FUNCTION_35	CALL_2
0x400017e	            0x6690	                                     nop	       104	stdio2.h	FUNCTION_35	CALL_2
0x4000180	      0xbf00000000	                              mov edi, 0	        28	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_2	IF_5	CALL_11
0x4000185	      0xb906000000	                              mov ecx, 6	        28	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_2	IF_5	CALL_11
0x400018a	          0x4c89c6	                             mov rsi, r8	        28	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_2	IF_5	CALL_11
0x400018d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_2	IF_5	CALL_11
0x400018f	            0x742f	                            je 0x40001c0	        28	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_2	IF_5	CALL_11
0x4000191	      0xbf00000000	                              mov edi, 0	        30	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_3	IF_6	CALL_13
0x4000196	      0xb910000000	                           mov ecx, 0x10	        30	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_3	IF_6	CALL_13
0x400019b	          0x4c89c6	                             mov rsi, r8	        30	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_3	IF_6	CALL_13
0x400019e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        30	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_3	IF_6	CALL_13
0x40001a0	            0x7557	                           jne 0x40001f9	        30	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_3	IF_6	CALL_13
0x40001a2	            0x31d2	                            xor edx, edx	        31	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_3	IF_6
0x40001a4	      0xbe00000000	                              mov esi, 0	        31	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_3	IF_6
0x40001a9	          0x4889e7	                            mov rdi, rsp	        31	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_3	IF_6
0x40001ac	      0xe800000000	                          call 0x40001b1	        31	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_3	IF_6
0x40001b1	      0xe9fafeffff	                           jmp 0x40000b0	        31	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_3	IF_6
0x40001b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        31	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_3	IF_6
0x40001c0	          0x4889e7	                            mov rdi, rsp	        29	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_2	IF_5
0x40001c3	      0xe800000000	                          call 0x40001c8	        29	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_2	IF_5
0x40001c8	      0xe9e3feffff	                           jmp 0x40000b0	        29	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_2	IF_5
0x40001cd	            0x31c0	                            xor eax, eax	        36	test-sha1-array.c	FUNCTION_2
0x40001cf	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	        36	test-sha1-array.c	FUNCTION_2
0x40001d4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        36	test-sha1-array.c	FUNCTION_2
0x40001dd	            0x7515	                           jne 0x40001f4	        36	test-sha1-array.c	FUNCTION_2
0x40001df	        0x4883c460	                           add rsp, 0x60	        36	test-sha1-array.c	FUNCTION_2
0x40001e3	              0x5b	                                 pop rbx	        36	test-sha1-array.c	FUNCTION_2
0x40001e4	              0xc3	                                     ret	        36	test-sha1-array.c	FUNCTION_2
0x40001e5	          0x4889de	                            mov rsi, rbx	        26	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_8
0x40001e8	      0xbf00000000	                              mov edi, 0	        26	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_8
0x40001ed	            0x31c0	                            xor eax, eax	        26	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_8
0x40001ef	      0xe800000000	                          call 0x40001f4	        26	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_8
0x40001f4	      0xe800000000	                          call 0x40001f9	        36	test-sha1-array.c	FUNCTION_2
0x40001f9	          0x4c89c6	                             mov rsi, r8	        33	test-sha1-array.c	FUNCTION_2	WHILE_1	CALL_15
0x40001fc	      0xbf00000000	                              mov edi, 0	        33	test-sha1-array.c	FUNCTION_2	WHILE_1	CALL_15
0x4000201	            0x31c0	                            xor eax, eax	        33	test-sha1-array.c	FUNCTION_2	WHILE_1	CALL_15
0x4000203	      0xe800000000	                         call str.append	        33	test-sha1-array.c	FUNCTION_2	WHILE_1	CALL_15
