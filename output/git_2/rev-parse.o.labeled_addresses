handle_ref_opt	WHILE,0:DO,0:functions,0:IF,1:CALL,3:FOR,0:ELSE,1:SWITCH,0	18
0x4000083	        0x4883ec08	                              sub rsp, 8	       571	rev-parse.c	FUNCTION_21
0x4000087	          0x4889f8	                            mov rax, rdi	       571	rev-parse.c	FUNCTION_21
0x400008a	          0x4889f7	                            mov rdi, rsi	       571	rev-parse.c	FUNCTION_21
0x400008d	          0x4885c0	                           test rax, rax	       572	rev-parse.c	FUNCTION_21	IF_1
0x4000090	            0x7417	                            je 0x40000a9	       572	rev-parse.c	FUNCTION_21	IF_1
0x4000092	      0xb900000000	                              mov ecx, 0	       573	rev-parse.c	FUNCTION_21	CALL_1
0x4000097	          0x4889f2	                            mov rdx, rsi	       573	rev-parse.c	FUNCTION_21	CALL_1
0x400009a	          0x4889c6	                            mov rsi, rax	       573	rev-parse.c	FUNCTION_21	CALL_1
0x400009d	      0xbf00000000	                              mov edi, 0	       573	rev-parse.c	FUNCTION_21	CALL_1
0x40000a2	      0xe800000000	                          call 0x40000a7	       573	rev-parse.c	FUNCTION_21	CALL_1
0x40000a7	            0xeb0f	                           jmp 0x40000b8	       573	rev-parse.c	FUNCTION_21	CALL_1
0x40000a9	      0xba00000000	                              mov edx, 0	       575	rev-parse.c	FUNCTION_21	CALL_2
0x40000ae	      0xbe00000000	                              mov esi, 0	       575	rev-parse.c	FUNCTION_21	CALL_2
0x40000b3	      0xe800000000	                          call 0x40000b8	       575	rev-parse.c	FUNCTION_21	CALL_2
0x40000b8	      0xbf00000000	                              mov edi, 0	       576	rev-parse.c	FUNCTION_21	CALL_3
0x40000bd	      0xe800000000	                          call 0x40000c2	       576	rev-parse.c	FUNCTION_21	CALL_3
0x40000c2	        0x4883c408	                              add rsp, 8	       577	rev-parse.c	FUNCTION_21
0x40000c6	              0xc3	                                     ret	       577	rev-parse.c	FUNCTION_21
die_no_single_rev	WHILE,0:DO,0:functions,0:IF,1:CALL,2:FOR,0:ELSE,1:SWITCH,0	8
0x40003e7	        0x4883ec08	                              sub rsp, 8	       537	rev-parse.c	FUNCTION_19
0x40003eb	            0x85ff	                           test edi, edi	       538	rev-parse.c	FUNCTION_19	IF_1
0x40003ed	            0x740a	                            je 0x40003f9	       538	rev-parse.c	FUNCTION_19	IF_1
0x40003ef	      0xbf01000000	                              mov edi, 1	       539	rev-parse.c	FUNCTION_19	CALL_1
0x40003f4	      0xe800000000	                          call 0x40003f9	       539	rev-parse.c	FUNCTION_19	CALL_1
0x40003f9	      0xbf00000000	                              mov edi, 0	       541	rev-parse.c	FUNCTION_19	CALL_2
0x40003fe	            0xb000	                               mov al, 0	       541	rev-parse.c	FUNCTION_19	CALL_2
0x4000400	      0xe800000000	                   call sym.show_default	       541	rev-parse.c	FUNCTION_19	CALL_2
show_rev	WHILE,0:DO,0:functions,0:IF,5:CALL,10:FOR,0:ELSE,3:SWITCH,1	83
0x400022c	              0x55	                                push rbp	       126	rev-parse.c	FUNCTION_4
0x400022d	              0x53	                                push rbx	       126	rev-parse.c	FUNCTION_4
0x400022e	        0x4883ec38	                           sub rsp, 0x38	       126	rev-parse.c	FUNCTION_4
0x4000232	    0x64488b042528	                mov rax, qword fs:[0x28]	       126	rev-parse.c	FUNCTION_4
0x400023b	      0x4889442428	             mov qword [rsp + 0x28], rax	       126	rev-parse.c	FUNCTION_4
0x4000240	            0x31c0	                            xor eax, eax	       126	rev-parse.c	FUNCTION_4
0x4000242	    0xf60500000000	               test byte [0x04000249], 1	       127	rev-parse.c	FUNCTION_4	IF_1
0x4000249	     0xf8406010000	                            je 0x4000355	       127	rev-parse.c	FUNCTION_4	IF_1
0x400024f	            0x89fd	                            mov ebp, edi	       127	rev-parse.c	FUNCTION_4	IF_1
0x4000251	          0x4889f7	                            mov rdi, rsi	       127	rev-parse.c	FUNCTION_4	IF_1
0x4000254	          0x4889d3	                            mov rbx, rdx	       127	rev-parse.c	FUNCTION_4	IF_1
0x4000257	    0x48c705000000	               mov qword [0x04000262], 0	       129	rev-parse.c	FUNCTION_4
0x4000262	    0x8b0500000000	            mov eax, dword [0x04000268] 	       131	rev-parse.c	FUNCTION_4	IF_2
0x4000268	            0x85c0	                           test eax, eax	       131	rev-parse.c	FUNCTION_4	IF_2
0x400026a	            0x7512	                           jne 0x400027e	       131	rev-parse.c	FUNCTION_4	IF_2
0x400026c	    0x833d00000000	               cmp dword [0x04000273], 0	       131	rev-parse.c	FUNCTION_4	IF_2
0x4000273	     0xf85d1000000	                           jne 0x400034a	       131	rev-parse.c	FUNCTION_4	IF_2
0x4000279	      0xe9a0000000	                           jmp 0x400031e	       131	rev-parse.c	FUNCTION_4	IF_2
0x400027e	          0x4885d2	                           test rdx, rdx	       131	rev-parse.c	FUNCTION_4	IF_2
0x4000281	     0xf8497000000	                            je 0x400031e	       131	rev-parse.c	FUNCTION_4	IF_2
0x4000287	          0x83f802	                              cmp eax, 2	       132	rev-parse.c	FUNCTION_4	IF_2	IF_3
0x400028a	            0x7409	                            je 0x4000295	       132	rev-parse.c	FUNCTION_4	IF_2	IF_3
0x400028c	    0x833d00000000	               cmp dword [0x04000293], 0	       132	rev-parse.c	FUNCTION_4	IF_2	IF_3
0x4000293	            0x747d	                            je 0x4000312	       132	rev-parse.c	FUNCTION_4	IF_2	IF_3
0x4000295	      0xb800000000	                              mov eax, 0	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x400029a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x40002a1	          0x4889df	                            mov rdi, rbx	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x40002a4	            0xf2ae	              repne scasb al, byte [rdi]	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x40002a6	          0x48f7d1	                                 not rcx	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x40002a9	        0x488d71ff	                      lea rsi, [rcx - 1]	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x40002ad	      0x488d4c2408	                      lea rcx, [rsp + 8]	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x40002b2	      0x488d542410	                   lea rdx, [rsp + 0x10]	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x40002b7	          0x4889df	                            mov rdi, rbx	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x40002ba	      0xe800000000	                          call 0x40002bf	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x40002bf	            0x85c0	                           test eax, eax	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x40002c1	            0x7443	                            je 0x4000306	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x40002c3	          0x83f801	                              cmp eax, 1	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x40002c6	            0x752c	                           jne 0x40002f4	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x40002c8	    0x833d00000000	               cmp dword [0x040002cf], 0	       147	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	IF_4
0x40002cf	            0x7415	                            je 0x40002e6	       147	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	IF_4
0x40002d1	    0x8b3500000000	            mov esi, dword [0x040002d7] 	       148	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	IF_4	CALL_3
0x40002d7	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       148	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	IF_4	CALL_3
0x40002dc	      0xe800000000	                          call 0x40002e1	       148	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	IF_4	CALL_3
0x40002e1	      0x4889442408	                mov qword [rsp + 8], rax	       148	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	IF_4	CALL_3
0x40002e6	      0x488b742408	                mov rsi, qword [rsp + 8]	       150	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_4
0x40002eb	            0x89ef	                            mov edi, ebp	       150	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_4
0x40002ed	      0xe86dfeffff	                 call sym.show_with_type	       150	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_4
0x40002f2	            0xeb12	                           jmp 0x4000306	       151	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1
0x40002f4	          0x4889de	                            mov rsi, rbx	       153	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1
0x40002f7	      0xbf00000000	                              mov edi, 0	       153	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1
0x40002fc	      0xb800000000	                              mov eax, 0	       153	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1
0x4000301	      0xe800000000	                          call 0x4000306	       153	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1
0x4000306	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       156	rev-parse.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x400030b	      0xe800000000	                          call 0x4000310	       156	rev-parse.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4000310	            0xeb43	                           jmp 0x4000355	       132	rev-parse.c	FUNCTION_4	IF_2	IF_3
0x4000312	          0x4889d6	                            mov rsi, rdx	       158	rev-parse.c	FUNCTION_4	IF_2	ELSE_1	CALL_6
0x4000315	            0x89ef	                            mov edi, ebp	       158	rev-parse.c	FUNCTION_4	IF_2	ELSE_1	CALL_6
0x4000317	      0xe843feffff	                 call sym.show_with_type	       158	rev-parse.c	FUNCTION_4	IF_2	ELSE_1	CALL_6
0x400031c	            0xeb37	                           jmp 0x4000355	       158	rev-parse.c	FUNCTION_4	IF_2	ELSE_1	CALL_6
0x400031e	    0x8b3500000000	            mov esi, dword [0x04000324] 	       161	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x4000324	            0x85f6	                           test esi, esi	       161	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x4000326	            0x7411	                            je 0x4000339	       161	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x4000328	      0xe800000000	                          call 0x400032d	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x400032d	          0x4889c6	                            mov rsi, rax	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x4000330	            0x89ef	                            mov edi, ebp	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x4000332	      0xe828feffff	                 call sym.show_with_type	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x4000337	            0xeb1c	                           jmp 0x4000355	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x4000339	      0xe800000000	                          call 0x400033e	       164	rev-parse.c	FUNCTION_4	CALL_10
0x400033e	          0x4889c6	                            mov rsi, rax	       164	rev-parse.c	FUNCTION_4	CALL_10
0x4000341	            0x89ef	                            mov edi, ebp	       164	rev-parse.c	FUNCTION_4	CALL_10
0x4000343	      0xe817feffff	                 call sym.show_with_type	       164	rev-parse.c	FUNCTION_4	CALL_10
0x4000348	            0xeb0b	                           jmp 0x4000355	       164	rev-parse.c	FUNCTION_4	CALL_10
0x400034a	          0x4885d2	                           test rdx, rdx	       131	rev-parse.c	FUNCTION_4	IF_2
0x400034d	     0xf8542ffffff	                           jne 0x4000295	       131	rev-parse.c	FUNCTION_4	IF_2
0x4000353	            0xebc9	                           jmp 0x400031e	       131	rev-parse.c	FUNCTION_4	IF_2
0x4000355	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       165	rev-parse.c	FUNCTION_4
0x400035a	    0x644833042528	                xor rax, qword fs:[0x28]	       165	rev-parse.c	FUNCTION_4
0x4000363	            0x7405	                            je 0x400036a	       165	rev-parse.c	FUNCTION_4
0x4000365	      0xe800000000	                          call 0x400036a	       165	rev-parse.c	FUNCTION_4
0x400036a	        0x4883c438	                           add rsp, 0x38	       165	rev-parse.c	FUNCTION_4
0x400036e	              0x5b	                                 pop rbx	       165	rev-parse.c	FUNCTION_4
0x400036f	              0x5d	                                 pop rbp	       165	rev-parse.c	FUNCTION_4
0x4000370	              0xc3	                                     ret	       165	rev-parse.c	FUNCTION_4
show_abbrev	WHILE,0:DO,0:functions,0:IF,0:CALL,1:FOR,0:ELSE,0:SWITCH,0	8
0x400038c	        0x4883ec08	                              sub rsp, 8	       210	rev-parse.c	FUNCTION_9
0x4000390	          0x4889fe	                            mov rsi, rdi	       210	rev-parse.c	FUNCTION_9
0x4000393	      0xba00000000	                              mov edx, 0	       211	rev-parse.c	FUNCTION_9	CALL_1
0x4000398	      0xbf00000000	                              mov edi, 0	       211	rev-parse.c	FUNCTION_9	CALL_1
0x400039d	      0xe88afeffff	                       call sym.show_rev	       211	rev-parse.c	FUNCTION_9	CALL_1
0x40003a2	      0xb800000000	                              mov eax, 0	       213	rev-parse.c	FUNCTION_9
0x40003a7	        0x4883c408	                              add rsp, 8	       213	rev-parse.c	FUNCTION_9
0x40003ab	              0xc3	                                     ret	       213	rev-parse.c	FUNCTION_9
show_reference	WHILE,0:DO,0:functions,0:IF,1:CALL,2:FOR,0:ELSE,0:SWITCH,0	19
0x40003ac	              0x55	                                push rbp	       196	rev-parse.c	FUNCTION_7
0x40003ad	              0x53	                                push rbx	       196	rev-parse.c	FUNCTION_7
0x40003ae	        0x4883ec08	                              sub rsp, 8	       196	rev-parse.c	FUNCTION_7
0x40003b2	          0x4889fb	                            mov rbx, rdi	       196	rev-parse.c	FUNCTION_7
0x40003b5	          0x4889f5	                            mov rbp, rsi	       196	rev-parse.c	FUNCTION_7
0x40003b8	          0x4889fe	                            mov rsi, rdi	       197	rev-parse.c	FUNCTION_7	IF_1	CALL_1
0x40003bb	    0x488b3d000000	            mov rdi, qword [0x040003c2] 	       197	rev-parse.c	FUNCTION_7	IF_1	CALL_1
0x40003c2	      0xe800000000	                          call 0x40003c7	       197	rev-parse.c	FUNCTION_7	IF_1	CALL_1
0x40003c7	            0x85c0	                           test eax, eax	       197	rev-parse.c	FUNCTION_7	IF_1	CALL_1
0x40003c9	            0x7510	                           jne 0x40003db	       197	rev-parse.c	FUNCTION_7	IF_1	CALL_1
0x40003cb	          0x4889da	                            mov rdx, rbx	       199	rev-parse.c	FUNCTION_7	CALL_2
0x40003ce	          0x4889ee	                            mov rsi, rbp	       199	rev-parse.c	FUNCTION_7	CALL_2
0x40003d1	      0xbf00000000	                              mov edi, 0	       199	rev-parse.c	FUNCTION_7	CALL_2
0x40003d6	      0xe851feffff	                       call sym.show_rev	       199	rev-parse.c	FUNCTION_7	CALL_2
0x40003db	      0xb800000000	                              mov eax, 0	       201	rev-parse.c	FUNCTION_7
0x40003e0	        0x4883c408	                              add rsp, 8	       201	rev-parse.c	FUNCTION_7
0x40003e4	              0x5b	                                 pop rbx	       201	rev-parse.c	FUNCTION_7
0x40003e5	              0x5d	                                 pop rbp	       201	rev-parse.c	FUNCTION_7
0x40003e6	              0xc3	                                     ret	       201	rev-parse.c	FUNCTION_7
anti_reference	WHILE,0:DO,0:functions,0:IF,0:CALL,1:FOR,0:ELSE,0:SWITCH,0	7
0x4000371	        0x4883ec08	                              sub rsp, 8	       204	rev-parse.c	FUNCTION_8
0x4000375	          0x4889fa	                            mov rdx, rdi	       204	rev-parse.c	FUNCTION_8
0x4000378	      0xbf01000000	                              mov edi, 1	       205	rev-parse.c	FUNCTION_8	CALL_1
0x400037d	      0xe8aafeffff	                       call sym.show_rev	       205	rev-parse.c	FUNCTION_8	CALL_1
0x4000382	      0xb800000000	                              mov eax, 0	       207	rev-parse.c	FUNCTION_8
0x4000387	        0x4883c408	                              add rsp, 8	       207	rev-parse.c	FUNCTION_8
0x400038b	              0xc3	                                     ret	       207	rev-parse.c	FUNCTION_8
show_file	WHILE,0:DO,0:functions,0:IF,2:CALL,5:FOR,0:ELSE,1:SWITCH,0	31
0x400047c	              0x55	                                push rbp	       228	rev-parse.c	FUNCTION_11
0x400047d	              0x53	                                push rbx	       228	rev-parse.c	FUNCTION_11
0x400047e	        0x4883ec08	                              sub rsp, 8	       228	rev-parse.c	FUNCTION_11
0x4000482	          0x4889fd	                            mov rbp, rdi	       228	rev-parse.c	FUNCTION_11
0x4000485	            0x89f3	                            mov ebx, esi	       228	rev-parse.c	FUNCTION_11
0x4000487	      0xe879ffffff	                   call sym.show_default	       229	rev-parse.c	FUNCTION_11	CALL_1
0x400048c	    0x8b1500000000	            mov edx, dword [0x04000492] 	       230	rev-parse.c	FUNCTION_11	IF_1
0x4000492	          0x83e20a	                            and edx, 0xa	       230	rev-parse.c	FUNCTION_11	IF_1
0x4000495	      0xb800000000	                              mov eax, 0	       240	rev-parse.c	FUNCTION_11
0x400049a	          0x83fa0a	                            cmp edx, 0xa	       230	rev-parse.c	FUNCTION_11	IF_1
0x400049d	            0x753e	                           jne 0x40004dd	       230	rev-parse.c	FUNCTION_11	IF_1
0x400049f	            0x85db	                           test ebx, ebx	       231	rev-parse.c	FUNCTION_11	IF_1	IF_2
0x40004a1	            0x742d	                            je 0x40004d0	       231	rev-parse.c	FUNCTION_11	IF_1	IF_2
0x40004a3	    0x488b05000000	            mov rax, qword [0x040004aa] 	       232	rev-parse.c	FUNCTION_11	IF_1	IF_2
0x40004aa	        0x488b7808	                mov rdi, qword [rax + 8]	       233	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x40004ae	          0x4889ee	                            mov rsi, rbp	       233	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x40004b1	      0xe800000000	                          call 0x40004b6	       233	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x40004b6	          0x4889c3	                            mov rbx, rax	       233	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x40004b9	          0x4889c7	                            mov rdi, rax	       234	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x40004bc	      0xe806fcffff	                           call sym.show	       234	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x40004c1	          0x4889df	                            mov rdi, rbx	       235	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x40004c4	      0xe800000000	                          call 0x40004c9	       235	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x40004c9	      0xb801000000	                              mov eax, 1	       238	rev-parse.c	FUNCTION_11	IF_1
0x40004ce	            0xeb0d	                           jmp 0x40004dd	       238	rev-parse.c	FUNCTION_11	IF_1
0x40004d0	          0x4889ef	                            mov rdi, rbp	       237	rev-parse.c	FUNCTION_11	IF_1	CALL_5
0x40004d3	      0xe8effbffff	                           call sym.show	       237	rev-parse.c	FUNCTION_11	IF_1	CALL_5
0x40004d8	      0xb801000000	                              mov eax, 1	       238	rev-parse.c	FUNCTION_11	IF_1
0x40004dd	        0x4883c408	                              add rsp, 8	       241	rev-parse.c	FUNCTION_11
0x40004e1	              0x5b	                                 pop rbx	       241	rev-parse.c	FUNCTION_11
0x40004e2	              0x5d	                                 pop rbp	       241	rev-parse.c	FUNCTION_11
0x40004e3	              0xc3	                                     ret	       241	rev-parse.c	FUNCTION_11
opt_with_value	WHILE,0:DO,0:functions,0:IF,3:CALL,1:FOR,0:ELSE,0:SWITCH,0	24
0x4000040	            0x8a06	                      mov al, byte [rsi]	       484	git-compat-util.h	FUNCTION_40	DO_1	IF_1
0x4000042	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_40	DO_1	IF_1
0x4000044	            0x7434	                            je 0x400007a	       484	git-compat-util.h	FUNCTION_40	DO_1	IF_1
0x4000046	          0x48ffc7	                                 inc rdi	       488	git-compat-util.h	FUNCTION_40	DO_1
0x4000049	          0x48ffc6	                                 inc rsi	       488	git-compat-util.h	FUNCTION_40	DO_1
0x400004c	          0x3a47ff	                  cmp al, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_40	DO_1
0x400004f	            0x74ef	                   je sym.opt_with_value	       488	git-compat-util.h	FUNCTION_40	DO_1
0x4000051	      0xb800000000	                              mov eax, 0	       567	rev-parse.c	FUNCTION_20
0x4000056	              0xc3	                                     ret	       567	rev-parse.c	FUNCTION_20
0x4000057	    0x48c702000000	                      mov qword [rdx], 0	       559	rev-parse.c	FUNCTION_20	IF_1	IF_2
0x400005e	      0xb801000000	                              mov eax, 1	       560	rev-parse.c	FUNCTION_20	IF_1	IF_2
0x4000063	              0xc3	                                     ret	       560	rev-parse.c	FUNCTION_20	IF_1	IF_2
0x4000064	      0xb800000000	                              mov eax, 0	       567	rev-parse.c	FUNCTION_20
0x4000069	          0x80f93d	                            cmp cl, 0x3d	       562	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x400006c	            0x7514	                           jne 0x4000082	       562	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x400006e	          0x48ffc7	                                 inc rdi	       563	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x4000071	          0x48893a	                    mov qword [rdx], rdi	       563	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x4000074	      0xb801000000	                              mov eax, 1	       564	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x4000079	              0xc3	                                     ret	       564	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x400007a	            0x8a0f	                      mov cl, byte [rdi]	       558	rev-parse.c	FUNCTION_20	IF_1	IF_2
0x400007c	            0x84c9	                             test cl, cl	       558	rev-parse.c	FUNCTION_20	IF_1	IF_2
0x400007e	            0x75e4	                           jne 0x4000064	       558	rev-parse.c	FUNCTION_20	IF_1	IF_2
0x4000080	            0xebd5	                           jmp 0x4000057	       558	rev-parse.c	FUNCTION_20	IF_1	IF_2
0x4000082	              0xc3	                                     ret	       568	rev-parse.c	FUNCTION_20
show_datestring	WHILE,0:DO,0:functions,0:IF,1:CALL,4:FOR,0:ELSE,0:SWITCH,0	21
0x40001e6	    0x8b0500000000	            mov eax, dword [0x040001ec] 	       220	rev-parse.c	FUNCTION_10	IF_1
0x40001ec	          0x83e005	                              and eax, 5	       220	rev-parse.c	FUNCTION_10	IF_1
0x40001ef	          0x83f805	                              cmp eax, 5	       220	rev-parse.c	FUNCTION_10	IF_1
0x40001f2	            0x7537	                           jne 0x400022b	       220	rev-parse.c	FUNCTION_10	IF_1
0x40001f4	              0x53	                                push rbx	       216	rev-parse.c	FUNCTION_10
0x40001f5	          0x4889fb	                            mov rbx, rdi	       216	rev-parse.c	FUNCTION_10
0x40001f8	          0x4889f7	                            mov rdi, rsi	       216	rev-parse.c	FUNCTION_10
0x40001fb	      0xbe00000000	                              mov esi, 0	       222	rev-parse.c	FUNCTION_10	CALL_2
0x4000200	      0xe800000000	                          call 0x4000205	       222	rev-parse.c	FUNCTION_10	CALL_2
0x4000205	          0x4889c2	                            mov rdx, rax	       222	rev-parse.c	FUNCTION_10	CALL_2
0x4000208	          0x4889de	                            mov rsi, rbx	       222	rev-parse.c	FUNCTION_10	CALL_2
0x400020b	      0xbf00000000	                              mov edi, 0	       222	rev-parse.c	FUNCTION_10	CALL_2
0x4000210	            0xb000	                               mov al, 0	       222	rev-parse.c	FUNCTION_10	CALL_2
0x4000212	      0xe800000000	                          call 0x4000217	       222	rev-parse.c	FUNCTION_10	CALL_2
0x4000217	          0x4889c3	                            mov rbx, rax	       222	rev-parse.c	FUNCTION_10	CALL_2
0x400021a	          0x4889c7	                            mov rdi, rax	       223	rev-parse.c	FUNCTION_10	CALL_3
0x400021d	      0xe8a5feffff	                           call sym.show	       223	rev-parse.c	FUNCTION_10	CALL_3
0x4000222	          0x4889df	                            mov rdi, rbx	       224	rev-parse.c	FUNCTION_10	CALL_4
0x4000225	      0xe800000000	                          call 0x400022a	       224	rev-parse.c	FUNCTION_10	CALL_4
0x400022a	              0x5b	                                 pop rbx	       225	rev-parse.c	FUNCTION_10
0x400022b	              0xc3	                                     ret	       225	rev-parse.c	FUNCTION_10
show_default	WHILE,0:DO,0:functions,0:IF,2:CALL,2:FOR,0:ELSE,0:SWITCH,0	29
0x4000405	              0x53	                                push rbx	       180	rev-parse.c	FUNCTION_6
0x4000406	        0x4883ec20	                           sub rsp, 0x20	       180	rev-parse.c	FUNCTION_6
0x400040a	    0x64488b042528	                mov rax, qword fs:[0x28]	       180	rev-parse.c	FUNCTION_6
0x4000413	      0x4889442418	             mov qword [rsp + 0x18], rax	       180	rev-parse.c	FUNCTION_6
0x4000418	            0x31c0	                            xor eax, eax	       180	rev-parse.c	FUNCTION_6
0x400041a	    0x488b1d000000	            mov rbx, qword [0x04000421] 	       181	rev-parse.c	FUNCTION_6
0x4000421	      0xba00000000	                              mov edx, 0	       192	rev-parse.c	FUNCTION_6
0x4000426	          0x4885db	                           test rbx, rbx	       183	rev-parse.c	FUNCTION_6	IF_1
0x4000429	            0x7434	                            je 0x400045f	       183	rev-parse.c	FUNCTION_6	IF_1
0x400042b	    0x48c705000000	               mov qword [0x04000436], 0	       186	rev-parse.c	FUNCTION_6	IF_1
0x4000436	          0x4889e6	                            mov rsi, rsp	       187	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x4000439	          0x4889df	                            mov rdi, rbx	       187	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x400043c	      0xe800000000	                          call 0x4000441	       187	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x4000441	      0xba00000000	                              mov edx, 0	       192	rev-parse.c	FUNCTION_6
0x4000446	            0x85c0	                           test eax, eax	       187	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x4000448	            0x7515	                           jne 0x400045f	       187	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x400044a	          0x4889da	                            mov rdx, rbx	       188	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_2
0x400044d	          0x4889e6	                            mov rsi, rsp	       188	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_2
0x4000450	      0xbf00000000	                              mov edi, 0	       188	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_2
0x4000455	      0xe8d2fdffff	                       call sym.show_rev	       188	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_2
0x400045a	      0xba01000000	                              mov edx, 1	       189	rev-parse.c	FUNCTION_6	IF_1	IF_2
0x400045f	            0x89d0	                            mov eax, edx	       193	rev-parse.c	FUNCTION_6
0x4000461	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       193	rev-parse.c	FUNCTION_6
0x4000466	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       193	rev-parse.c	FUNCTION_6
0x400046f	            0x7405	                            je 0x4000476	       193	rev-parse.c	FUNCTION_6
0x4000471	      0xe800000000	                          call 0x4000476	       193	rev-parse.c	FUNCTION_6
0x4000476	        0x4883c420	                           add rsp, 0x20	       193	rev-parse.c	FUNCTION_6
0x400047a	              0x5b	                                 pop rbx	       193	rev-parse.c	FUNCTION_6
0x400047b	              0xc3	                                     ret	       193	rev-parse.c	FUNCTION_6
parseopt_dump	WHILE,0:DO,0:functions,0:IF,5:CALL,6:FOR,0:ELSE,3:SWITCH,0	80
0x40004e4	            0x4154	                                push r12	       365	rev-parse.c	FUNCTION_14
0x40004e6	              0x55	                                push rbp	       365	rev-parse.c	FUNCTION_14
0x40004e7	              0x53	                                push rbx	       365	rev-parse.c	FUNCTION_14
0x40004e8	          0x4889fd	                            mov rbp, rdi	       365	rev-parse.c	FUNCTION_14
0x40004eb	          0x4989f4	                            mov r12, rsi	       365	rev-parse.c	FUNCTION_14
0x40004ee	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	       366	rev-parse.c	FUNCTION_14
0x40004f2	            0x85d2	                           test edx, edx	       367	rev-parse.c	FUNCTION_14	IF_1
0x40004f4	            0x7418	                            je 0x400050e	       367	rev-parse.c	FUNCTION_14	IF_1
0x40004f6	        0x488b5708	                mov rdx, qword [rdi + 8]	       368	rev-parse.c	FUNCTION_14	CALL_1
0x40004fa	      0xbe00000000	                              mov esi, 0	       368	rev-parse.c	FUNCTION_14	CALL_1
0x40004ff	          0x4889df	                            mov rdi, rbx	       368	rev-parse.c	FUNCTION_14	CALL_1
0x4000502	      0xb800000000	                              mov eax, 0	       368	rev-parse.c	FUNCTION_14	CALL_1
0x4000507	      0xe800000000	                          call 0x400050c	       368	rev-parse.c	FUNCTION_14	CALL_1
0x400050c	            0xeb41	                           jmp 0x400054f	       368	rev-parse.c	FUNCTION_14	CALL_1
0x400050e	          0x8b5704	                mov edx, dword [rdi + 4]	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000511	            0x85d2	                           test edx, edx	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000513	            0x7424	                            je 0x4000539	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000515	      0x48837f0800	                  cmp qword [rdi + 8], 0	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x400051a	            0x7409	                            je 0x4000525	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x400051c	    0x833d00000000	               cmp dword [0x04000523], 0	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000523	            0x7514	                           jne 0x4000539	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000525	      0xbe00000000	                              mov esi, 0	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x400052a	          0x4889df	                            mov rdi, rbx	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x400052d	      0xb800000000	                              mov eax, 0	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000532	      0xe800000000	                          call 0x4000537	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000537	            0xeb16	                           jmp 0x400054f	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000539	        0x488b5508	                mov rdx, qword [rbp + 8]	       372	rev-parse.c	FUNCTION_14	CALL_3
0x400053d	      0xbe00000000	                              mov esi, 0	       372	rev-parse.c	FUNCTION_14	CALL_3
0x4000542	          0x4889df	                            mov rdi, rbx	       372	rev-parse.c	FUNCTION_14	CALL_3
0x4000545	      0xb800000000	                              mov eax, 0	       372	rev-parse.c	FUNCTION_14	CALL_3
0x400054a	      0xe800000000	                          call 0x400054f	       372	rev-parse.c	FUNCTION_14	CALL_3
0x400054f	          0x4d85e4	                           test r12, r12	       373	rev-parse.c	FUNCTION_14	IF_3
0x4000552	     0xf849b000000	                            je 0x40005f3	       373	rev-parse.c	FUNCTION_14	IF_3
0x4000558	    0x833d00000000	               cmp dword [0x0400055f], 0	       374	rev-parse.c	FUNCTION_14	IF_3	IF_4
0x400055f	            0x7541	                           jne 0x40005a2	       374	rev-parse.c	FUNCTION_14	IF_3	IF_4
0x4000561	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_24
0x4000564	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_24
0x4000567	            0x740a	                            je 0x4000573	       141	strbuf.h	FUNCTION_24
0x4000569	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x400056d	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x4000571	            0x750d	                           jne 0x4000580	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x4000573	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_26	CALL_2
0x4000578	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_26	CALL_2
0x400057b	      0xe800000000	                          call 0x4000580	       228	strbuf.h	FUNCTION_26	CALL_2
0x4000580	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_26
0x4000584	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_26
0x4000588	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_26
0x400058c	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_26
0x4000590	        0xc6040220	              mov byte [rdx + rax], 0x20	       229	strbuf.h	FUNCTION_26
0x4000594	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_26
0x4000598	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_26
0x400059c	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_26
0x40005a0	            0xeb46	                           jmp 0x40005e8	       230	strbuf.h	FUNCTION_26
0x40005a2	      0x48837d0800	                  cmp qword [rbp + 8], 0	       376	rev-parse.c	FUNCTION_14	IF_3	ELSE_3	IF_5
0x40005a7	            0x743f	                            je 0x40005e8	       376	rev-parse.c	FUNCTION_14	IF_3	ELSE_3	IF_5
0x40005a9	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_24
0x40005ac	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_24
0x40005af	            0x740a	                            je 0x40005bb	       141	strbuf.h	FUNCTION_24
0x40005b1	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x40005b5	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x40005b9	            0x750d	                           jne 0x40005c8	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x40005bb	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_26	CALL_2
0x40005c0	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_26	CALL_2
0x40005c3	      0xe800000000	                          call 0x40005c8	       228	strbuf.h	FUNCTION_26	CALL_2
0x40005c8	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_26
0x40005cc	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_26
0x40005d0	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_26
0x40005d4	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_26
0x40005d8	        0xc604023d	              mov byte [rdx + rax], 0x3d	       229	strbuf.h	FUNCTION_26
0x40005dc	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_26
0x40005e0	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_26
0x40005e4	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_26
0x40005e8	          0x4c89e6	                            mov rsi, r12	       378	rev-parse.c	FUNCTION_14	IF_3	CALL_6
0x40005eb	          0x4889df	                            mov rdi, rbx	       378	rev-parse.c	FUNCTION_14	IF_3	CALL_6
0x40005ee	      0xe800000000	                          call 0x40005f3	       378	rev-parse.c	FUNCTION_14	IF_3	CALL_6
0x40005f3	      0xb800000000	                              mov eax, 0	       381	rev-parse.c	FUNCTION_14
0x40005f8	              0x5b	                                 pop rbx	       381	rev-parse.c	FUNCTION_14
0x40005f9	              0x5d	                                 pop rbp	       381	rev-parse.c	FUNCTION_14
0x40005fa	            0x415c	                                 pop r12	       381	rev-parse.c	FUNCTION_14
0x40005fc	              0xc3	                                     ret	       381	rev-parse.c	FUNCTION_14
