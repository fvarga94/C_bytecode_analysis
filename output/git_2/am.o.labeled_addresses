merge_tree	IF,3:WHILE,0:CALL,9:DO,0:ELSE,0:FOR,0:SWITCH,0:functions,0	61
0x4001806	              0x55	                                push rbp	      1956	am.c	FUNCTION_52
0x4001807	              0x53	                                push rbx	      1956	am.c	FUNCTION_52
0x4001808	    0x4881ec580300	                          sub rsp, 0x358	      1956	am.c	FUNCTION_52
0x400180f	          0x4889fb	                            mov rbx, rdi	      1956	am.c	FUNCTION_52
0x4001812	    0x64488b042528	                mov rax, qword fs:[0x28]	      1956	am.c	FUNCTION_52
0x400181b	    0x488984244803	            mov qword [rsp + 0x348], rax	      1956	am.c	FUNCTION_52
0x4001823	            0x31c0	                            xor eax, eax	      1956	am.c	FUNCTION_52
0x4001825	    0x48c704240000	                      mov qword [rsp], 0	      1957	am.c	FUNCTION_52
0x400182d	      0xbe00000000	                              mov esi, 0	        22	tree.h	FUNCTION_62	CALL_1
0x4001832	      0xe800000000	                          call 0x4001837	        22	tree.h	FUNCTION_62	CALL_1
0x4001837	            0x85c0	                           test eax, eax	      1961	am.c	FUNCTION_52	IF_1	CALL_1
0x4001839	     0xf85c7000000	                           jne 0x4001906	      1961	am.c	FUNCTION_52	IF_1	CALL_1
0x400183f	      0xbe01000000	                              mov esi, 1	      1964	am.c	FUNCTION_52	CALL_2
0x4001844	          0x4889e7	                            mov rdi, rsp	      1964	am.c	FUNCTION_52	CALL_2
0x4001847	      0xe800000000	                          call 0x400184c	      1964	am.c	FUNCTION_52	CALL_2
0x400184c	      0x488d6c2440	                   lea rbp, [rsp + 0x40]	        90	string3.h	FUNCTION_66	CALL_6
0x4001851	      0xb960000000	                           mov ecx, 0x60	        90	string3.h	FUNCTION_66	CALL_6
0x4001856	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_66	CALL_6
0x400185b	          0x4889ef	                            mov rdi, rbp	        90	string3.h	FUNCTION_66	CALL_6
0x400185e	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_66	CALL_6
0x4001861	    0xc78424400200	              mov dword [rsp + 0x240], 1	      1967	am.c	FUNCTION_52
0x400186c	    0x48c784246002	              mov qword [rsp + 0x260], 0	      1968	am.c	FUNCTION_52
0x4001878	    0x48c784245802	              mov qword [rsp + 0x258], 0	      1969	am.c	FUNCTION_52
0x4001884	    0xc74424440100	               mov dword [rsp + 0x44], 1	      1970	am.c	FUNCTION_52
0x400188c	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	      1971	am.c	FUNCTION_52
0x4001898	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      1972	am.c	FUNCTION_52	CALL_4
0x400189c	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1972	am.c	FUNCTION_52	CALL_4
0x40018a0	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1972	am.c	FUNCTION_52	CALL_4
0x40018a5	      0xe800000000	                          call 0x40018aa	      1972	am.c	FUNCTION_52	CALL_4
0x40018aa	          0x4889ea	                            mov rdx, rbp	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x40018ad	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x40018b2	      0xbf01000000	                              mov edi, 1	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x40018b7	      0xe800000000	                          call 0x40018bc	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x40018bc	            0x85c0	                           test eax, eax	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x40018be	            0x740f	                            je 0x40018cf	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x40018c0	          0x4889e7	                            mov rdi, rsp	       304	lockfile.h	FUNCTION_84	CALL_1
0x40018c3	      0xe800000000	                          call 0x40018c8	       304	lockfile.h	FUNCTION_84	CALL_1
0x40018c8	      0xb8ffffffff	                     mov eax, 0xffffffff	      1976	am.c	FUNCTION_52	IF_2
0x40018cd	            0xeb3c	                           jmp 0x400190b	      1976	am.c	FUNCTION_52	IF_2
0x40018cf	      0xba01000000	                              mov edx, 1	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x40018d4	          0x4889e6	                            mov rsi, rsp	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x40018d7	      0xbf00000000	                              mov edi, 0	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x40018dc	      0xe800000000	                          call 0x40018e1	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x40018e1	            0x85c0	                           test eax, eax	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x40018e3	            0x7426	                            je 0x400190b	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x40018e5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x40018ea	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x40018ef	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x40018f4	      0xe800000000	                          call 0x40018f9	        54	gettext.h	FUNCTION_87
0x40018f9	          0x4889c7	                            mov rdi, rax	      1980	am.c	FUNCTION_52	CALL_9
0x40018fc	      0xb800000000	                              mov eax, 0	      1980	am.c	FUNCTION_52	CALL_9
0x4001901	      0xe800000000	                          call 0x4001906	      1980	am.c	FUNCTION_52	CALL_9
0x4001906	      0xb8ffffffff	                     mov eax, 0xffffffff	      1962	am.c	FUNCTION_52	IF_1
0x400190b	    0x488b8c244803	           mov rcx, qword [rsp + 0x348] 	      1983	am.c	FUNCTION_52
0x4001913	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1983	am.c	FUNCTION_52
0x400191c	            0x7405	                            je 0x4001923	      1983	am.c	FUNCTION_52
0x400191e	      0xe800000000	                          call 0x4001923	      1983	am.c	FUNCTION_52
0x4001923	    0x4881c4580300	                          add rsp, 0x358	      1983	am.c	FUNCTION_52
0x400192a	              0x5b	                                 pop rbx	      1983	am.c	FUNCTION_52
0x400192b	              0x5d	                                 pop rbp	      1983	am.c	FUNCTION_52
0x400192c	              0xc3	                                     ret	      1983	am.c	FUNCTION_52
am_next	IF,1:WHILE,0:CALL,13:DO,0:ELSE,1:FOR,0:SWITCH,0:functions,0	77
0x400066a	              0x53	                                push rbx	      1100	am.c	FUNCTION_32
0x400066b	        0x4883ec20	                           sub rsp, 0x20	      1100	am.c	FUNCTION_32
0x400066f	          0x4889fb	                            mov rbx, rdi	      1100	am.c	FUNCTION_32
0x4000672	    0x64488b042528	                mov rax, qword fs:[0x28]	      1100	am.c	FUNCTION_32
0x400067b	      0x4889442418	             mov qword [rsp + 0x18], rax	      1100	am.c	FUNCTION_32
0x4000680	            0x31c0	                            xor eax, eax	      1100	am.c	FUNCTION_32
0x4000682	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      1103	am.c	FUNCTION_32
0x4000686	      0xe800000000	                          call 0x400068b	      1103	am.c	FUNCTION_32
0x400068b	    0x48c743100000	               mov qword [rbx + 0x10], 0	      1103	am.c	FUNCTION_32
0x4000693	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1104	am.c	FUNCTION_32
0x4000697	      0xe800000000	                          call 0x400069c	      1104	am.c	FUNCTION_32
0x400069c	    0x48c743180000	               mov qword [rbx + 0x18], 0	      1104	am.c	FUNCTION_32
0x40006a4	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1105	am.c	FUNCTION_32
0x40006a8	      0xe800000000	                          call 0x40006ad	      1105	am.c	FUNCTION_32
0x40006ad	    0x48c743200000	               mov qword [rbx + 0x20], 0	      1105	am.c	FUNCTION_32
0x40006b5	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      1106	am.c	FUNCTION_32
0x40006b9	      0xe800000000	                          call 0x40006be	      1106	am.c	FUNCTION_32
0x40006be	    0x48c743280000	               mov qword [rbx + 0x28], 0	      1106	am.c	FUNCTION_32
0x40006c6	    0x48c743300000	               mov qword [rbx + 0x30], 0	      1107	am.c	FUNCTION_32
0x40006ce	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x40006d3	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x40006d6	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x40006db	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x40006e0	      0xe800000000	                          call 0x40006e5	       183	am.c	FUNCTION_6	CALL_1
0x40006e5	          0x4889c7	                            mov rdi, rax	      1109	am.c	FUNCTION_32	CALL_2
0x40006e8	      0xe800000000	                          call 0x40006ed	      1109	am.c	FUNCTION_32	CALL_2
0x40006ed	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x40006f2	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x40006f5	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x40006fa	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x40006ff	      0xe800000000	                          call 0x4000704	       183	am.c	FUNCTION_6	CALL_1
0x4000704	          0x4889c7	                            mov rdi, rax	      1110	am.c	FUNCTION_32	CALL_4
0x4000707	      0xe800000000	                          call 0x400070c	      1110	am.c	FUNCTION_32	CALL_4
0x400070c	    0x48c743380000	               mov qword [rbx + 0x38], 0	        90	string3.h	FUNCTION_66	CALL_6
0x4000714	    0x48c743400000	               mov qword [rbx + 0x40], 0	        90	string3.h	FUNCTION_66	CALL_6
0x400071c	    0xc74348000000	               mov dword [rbx + 0x48], 0	        90	string3.h	FUNCTION_66	CALL_6
0x4000723	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4000728	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x400072b	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4000730	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x4000735	      0xe800000000	                          call 0x400073a	       183	am.c	FUNCTION_6	CALL_1
0x400073a	          0x4889c7	                            mov rdi, rax	      1113	am.c	FUNCTION_32	CALL_7
0x400073d	      0xe800000000	                          call 0x4000742	      1113	am.c	FUNCTION_32	CALL_7
0x4000742	      0xb901000000	                              mov ecx, 1	      1114	am.c	FUNCTION_32	CALL_8
0x4000747	      0xba00000000	                              mov edx, 0	      1114	am.c	FUNCTION_32	CALL_8
0x400074c	      0xbe00000000	                              mov esi, 0	      1114	am.c	FUNCTION_32	CALL_8
0x4000751	      0xbf00000000	                              mov edi, 0	      1114	am.c	FUNCTION_32	CALL_8
0x4000756	      0xe800000000	                          call 0x400075b	      1114	am.c	FUNCTION_32	CALL_8
0x400075b	          0x4889e6	                            mov rsi, rsp	      1116	am.c	FUNCTION_32	IF_1	CALL_9
0x400075e	      0xbf00000000	                              mov edi, 0	      1116	am.c	FUNCTION_32	IF_1	CALL_9
0x4000763	      0xe800000000	                          call 0x4000768	      1116	am.c	FUNCTION_32	IF_1	CALL_9
0x4000768	            0x85c0	                           test eax, eax	      1116	am.c	FUNCTION_32	IF_1	CALL_9
0x400076a	            0x751a	                           jne 0x4000786	      1116	am.c	FUNCTION_32	IF_1	CALL_9
0x400076c	          0x4889e7	                            mov rdi, rsp	      1117	am.c	FUNCTION_32	CALL_11
0x400076f	      0xe800000000	                          call 0x4000774	      1117	am.c	FUNCTION_32	CALL_11
0x4000774	          0x4889c2	                            mov rdx, rax	      1117	am.c	FUNCTION_32	CALL_11
0x4000777	      0xbe00000000	                              mov esi, 0	      1117	am.c	FUNCTION_32	CALL_11
0x400077c	          0x4889df	                            mov rdi, rbx	      1117	am.c	FUNCTION_32	CALL_11
0x400077f	      0xe86afeffff	               call sym.write_state_text	      1117	am.c	FUNCTION_32	CALL_11
0x4000784	            0xeb12	                           jmp 0x4000798	      1117	am.c	FUNCTION_32	CALL_11
0x4000786	      0xba00000000	                              mov edx, 0	      1119	am.c	FUNCTION_32	CALL_12
0x400078b	      0xbe00000000	                              mov esi, 0	      1119	am.c	FUNCTION_32	CALL_12
0x4000790	          0x4889df	                            mov rdi, rbx	      1119	am.c	FUNCTION_32	CALL_12
0x4000793	      0xe856feffff	               call sym.write_state_text	      1119	am.c	FUNCTION_32	CALL_12
0x4000798	          0x8b4308	                mov eax, dword [rbx + 8]	      1121	am.c	FUNCTION_32
0x400079b	          0x8d5001	                      lea edx, [rax + 1]	      1121	am.c	FUNCTION_32
0x400079e	          0x895308	                mov dword [rbx + 8], edx	      1121	am.c	FUNCTION_32
0x40007a1	      0xbe00000000	                              mov esi, 0	      1122	am.c	FUNCTION_32	CALL_13
0x40007a6	          0x4889df	                            mov rdi, rbx	      1122	am.c	FUNCTION_32	CALL_13
0x40007a9	      0xe88efeffff	              call sym.write_state_count	      1122	am.c	FUNCTION_32	CALL_13
0x40007ae	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1123	am.c	FUNCTION_32
0x40007b3	    0x644833042528	                xor rax, qword fs:[0x28]	      1123	am.c	FUNCTION_32
0x40007bc	            0x7405	                            je 0x40007c3	      1123	am.c	FUNCTION_32
0x40007be	      0xe800000000	                          call 0x40007c3	      1123	am.c	FUNCTION_32
0x40007c3	        0x4883c420	                           add rsp, 0x20	      1123	am.c	FUNCTION_32
0x40007c7	              0x5b	                                 pop rbx	      1123	am.c	FUNCTION_32
0x40007c8	              0xc3	                                     ret	      1123	am.c	FUNCTION_32
git_am_config	IF,1:WHILE,0:CALL,2:DO,0:ELSE,0:FOR,0:SWITCH,0:functions,0	17
0x4000040	              0x55	                                push rbp	      2189	am.c	FUNCTION_60
0x4000041	              0x53	                                push rbx	      2189	am.c	FUNCTION_60
0x4000042	        0x4883ec08	                              sub rsp, 8	      2189	am.c	FUNCTION_60
0x4000046	          0x4889fb	                            mov rbx, rdi	      2189	am.c	FUNCTION_60
0x4000049	          0x4889f5	                            mov rbp, rsi	      2189	am.c	FUNCTION_60
0x400004c	      0xba00000000	                              mov edx, 0	      2192	am.c	FUNCTION_60	CALL_1
0x4000051	      0xe800000000	                          call 0x4000056	      2192	am.c	FUNCTION_60	CALL_1
0x4000056	            0x85c0	                           test eax, eax	      2193	am.c	FUNCTION_60	IF_1
0x4000058	            0x7510	                           jne 0x400006a	      2193	am.c	FUNCTION_60	IF_1
0x400005a	      0xba00000000	                              mov edx, 0	      2196	am.c	FUNCTION_60	CALL_2
0x400005f	          0x4889ee	                            mov rsi, rbp	      2196	am.c	FUNCTION_60	CALL_2
0x4000062	          0x4889df	                            mov rdi, rbx	      2196	am.c	FUNCTION_60	CALL_2
0x4000065	      0xe800000000	                          call 0x400006a	      2196	am.c	FUNCTION_60	CALL_2
0x400006a	        0x4883c408	                              add rsp, 8	      2197	am.c	FUNCTION_60
0x400006e	              0x5b	                                 pop rbx	      2197	am.c	FUNCTION_60
0x400006f	              0x5d	                                 pop rbp	      2197	am.c	FUNCTION_60
0x4000070	              0xc3	                                     ret	      2197	am.c	FUNCTION_60
write_commit_patch	IF,0:WHILE,0:CALL,6:DO,0:ELSE,0:FOR,0:SWITCH,0:functions,0	45
0x400086f	              0x55	                                push rbp	      1369	am.c	FUNCTION_40
0x4000870	              0x53	                                push rbx	      1369	am.c	FUNCTION_40
0x4000871	    0x4881ecc80800	                          sub rsp, 0x8c8	      1369	am.c	FUNCTION_40
0x4000878	          0x4889f3	                            mov rbx, rsi	      1369	am.c	FUNCTION_40
0x400087b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1369	am.c	FUNCTION_40
0x4000884	    0x48898424b808	            mov qword [rsp + 0x8b8], rax	      1369	am.c	FUNCTION_40
0x400088c	            0x31c0	                            xor eax, eax	      1369	am.c	FUNCTION_40
0x400088e	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4000893	          0x488b37	                    mov rsi, qword [rdi]	       183	am.c	FUNCTION_6	CALL_1
0x4000896	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x400089b	      0xe800000000	                          call 0x40008a0	       183	am.c	FUNCTION_6	CALL_1
0x40008a0	      0xbe00000000	                              mov esi, 0	      1373	am.c	FUNCTION_40	CALL_2
0x40008a5	          0x4889c7	                            mov rdi, rax	      1373	am.c	FUNCTION_40	CALL_2
0x40008a8	      0xe800000000	                          call 0x40008ad	      1373	am.c	FUNCTION_40	CALL_2
0x40008ad	          0x4889c5	                            mov rbp, rax	      1373	am.c	FUNCTION_40	CALL_2
0x40008b0	      0xbe00000000	                              mov esi, 0	      1374	am.c	FUNCTION_40	CALL_3
0x40008b5	          0x4889e7	                            mov rdi, rsp	      1374	am.c	FUNCTION_40	CALL_3
0x40008b8	      0xe800000000	                          call 0x40008bd	      1374	am.c	FUNCTION_40	CALL_3
0x40008bd	    0xc78424a00000	               mov dword [rsp + 0xa0], 0	      1376	am.c	FUNCTION_40
0x40008c8	      0x804c247b80	              or byte [rsp + 0x7b], 0x80	      1377	am.c	FUNCTION_40
0x40008cd	    0xc78424580500	          mov dword [rsp + 0x558], 0x10 	      1379	am.c	FUNCTION_40
0x40008d8	       0xfb6442479	           movzx eax, byte [rsp + 0x79] 	      1380	am.c	FUNCTION_40
0x40008dd	          0x83c80d	                             or eax, 0xd	      1380	am.c	FUNCTION_40
0x40008e0	        0x88442479	               mov byte [rsp + 0x79], al	      1380	am.c	FUNCTION_40
0x40008e4	    0x808c24300500	             or byte [rsp + 0x530], 0x14	      1382	am.c	FUNCTION_40
0x40008ec	    0xc78424380500	              mov dword [rsp + 0x538], 0	      1383	am.c	FUNCTION_40
0x40008f7	    0x4889ac24f805	            mov qword [rsp + 0x5f8], rbp	      1384	am.c	FUNCTION_40
0x40008ff	    0xc78424000600	              mov dword [rsp + 0x600], 1	      1385	am.c	FUNCTION_40
0x400090a	      0xba00000000	                              mov edx, 0	      1386	am.c	FUNCTION_40	CALL_4
0x400090f	          0x4889de	                            mov rsi, rbx	      1386	am.c	FUNCTION_40	CALL_4
0x4000912	          0x4889e7	                            mov rdi, rsp	      1386	am.c	FUNCTION_40	CALL_4
0x4000915	      0xe800000000	                          call 0x400091a	      1386	am.c	FUNCTION_40	CALL_4
0x400091a	    0x488dbc24f804	                  lea rdi, [rsp + 0x4f8]	      1387	am.c	FUNCTION_40	CALL_5
0x4000922	      0xe800000000	                          call 0x4000927	      1387	am.c	FUNCTION_40	CALL_5
0x4000927	          0x4889de	                            mov rsi, rbx	      1388	am.c	FUNCTION_40	CALL_6
0x400092a	          0x4889e7	                            mov rdi, rsp	      1388	am.c	FUNCTION_40	CALL_6
0x400092d	      0xe800000000	                          call 0x4000932	      1388	am.c	FUNCTION_40	CALL_6
0x4000932	    0x488b8424b808	           mov rax, qword [rsp + 0x8b8] 	      1389	am.c	FUNCTION_40
0x400093a	    0x644833042528	                xor rax, qword fs:[0x28]	      1389	am.c	FUNCTION_40
0x4000943	            0x7405	                            je 0x400094a	      1389	am.c	FUNCTION_40
0x4000945	      0xe800000000	                          call 0x400094a	      1389	am.c	FUNCTION_40
0x400094a	    0x4881c4c80800	                          add rsp, 0x8c8	      1389	am.c	FUNCTION_40
0x4000951	              0x5b	                                 pop rbx	      1389	am.c	FUNCTION_40
0x4000952	              0x5d	                                 pop rbp	      1389	am.c	FUNCTION_40
0x4000953	              0xc3	                                     ret	      1389	am.c	FUNCTION_40
fall_back_threeway	IF,8:WHILE,0:CALL,25:DO,0:ELSE,0:FOR,0:SWITCH,0:functions,0	205
0x4000e25	            0x4154	                                push r12	      1537	am.c	FUNCTION_45
0x4000e27	              0x55	                                push rbp	      1537	am.c	FUNCTION_45
0x4000e28	              0x53	                                push rbx	      1537	am.c	FUNCTION_45
0x4000e29	    0x4881ec900900	                          sub rsp, 0x990	      1537	am.c	FUNCTION_45
0x4000e30	          0x4889fb	                            mov rbx, rdi	      1537	am.c	FUNCTION_45
0x4000e33	          0x4889f5	                            mov rbp, rsi	      1537	am.c	FUNCTION_45
0x4000e36	    0x64488b042528	                mov rax, qword fs:[0x28]	      1537	am.c	FUNCTION_45
0x4000e3f	    0x488984248809	            mov qword [rsp + 0x988], rax	      1537	am.c	FUNCTION_45
0x4000e47	            0x31c0	                            xor eax, eax	      1537	am.c	FUNCTION_45
0x4000e49	      0x488d442470	                   lea rax, [rsp + 0x70]	      1539	am.c	FUNCTION_45
0x4000e4e	      0x4889442460	             mov qword [rsp + 0x60], rax	      1539	am.c	FUNCTION_45
0x4000e53	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x4000e5b	      0xbf00000000	                              mov edi, 0	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x4000e60	      0xe800000000	                          call 0x4000e65	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x4000e65	            0x85c0	                           test eax, eax	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x4000e67	            0x792b	                           jns 0x4000e94	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x4000e69	    0x488b05000000	            mov rax, qword [0x04000e70] 	        53	string3.h	FUNCTION_63	CALL_3
0x4000e70	    0x48898424b000	             mov qword [rsp + 0xb0], rax	        53	string3.h	FUNCTION_63	CALL_3
0x4000e78	    0x488b05000000	            mov rax, qword [0x04000e7f] 	        53	string3.h	FUNCTION_63	CALL_3
0x4000e7f	    0x48898424b800	             mov qword [rsp + 0xb8], rax	        53	string3.h	FUNCTION_63	CALL_3
0x4000e87	    0x8b0500000000	            mov eax, dword [0x04000e8d] 	        53	string3.h	FUNCTION_63	CALL_3
0x4000e8d	    0x898424c00000	             mov dword [rsp + 0xc0], eax	        53	string3.h	FUNCTION_63	CALL_3
0x4000e94	          0x4889e7	                            mov rdi, rsp	      1519	am.c	FUNCTION_44
0x4000e97	      0xb90c000000	                            mov ecx, 0xc	      1519	am.c	FUNCTION_44
0x4000e9c	      0xb800000000	                              mov eax, 0	      1519	am.c	FUNCTION_44
0x4000ea1	          0xf348ab	              rep stosq qword [rdi], rax	      1519	am.c	FUNCTION_44
0x4000ea4	    0x48c744240800	                  mov qword [rsp + 8], 0	      1519	am.c	FUNCTION_44
0x4000ead	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1519	am.c	FUNCTION_44
0x4000eb6	      0xc644244808	                mov byte [rsp + 0x48], 8	      1521	am.c	FUNCTION_44
0x4000ebb	      0x4c8d642408	                      lea r12, [rsp + 8]	      1522	am.c	FUNCTION_44	CALL_1
0x4000ec0	      0xbe00000000	                              mov esi, 0	      1522	am.c	FUNCTION_44	CALL_1
0x4000ec5	          0x4c89e7	                            mov rdi, r12	      1522	am.c	FUNCTION_44	CALL_1
0x4000ec8	      0xe800000000	                          call 0x4000ecd	      1522	am.c	FUNCTION_44	CALL_1
0x4000ecd	        0x488b7370	            mov rsi, qword [rbx + 0x70] 	      1523	am.c	FUNCTION_44	CALL_2
0x4000ed1	          0x4c89e7	                            mov rdi, r12	      1523	am.c	FUNCTION_44	CALL_2
0x4000ed4	      0xe800000000	                          call 0x4000ed9	      1523	am.c	FUNCTION_44	CALL_2
0x4000ed9	          0x4889ea	                            mov rdx, rbp	      1524	am.c	FUNCTION_44	CALL_3
0x4000edc	      0xbe00000000	                              mov esi, 0	      1524	am.c	FUNCTION_44	CALL_3
0x4000ee1	          0x4c89e7	                            mov rdi, r12	      1524	am.c	FUNCTION_44	CALL_3
0x4000ee4	      0xb800000000	                              mov eax, 0	      1524	am.c	FUNCTION_44	CALL_3
0x4000ee9	      0xe800000000	                          call 0x4000eee	      1524	am.c	FUNCTION_44	CALL_3
0x4000eee	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4000ef3	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4000ef6	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4000efb	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x4000f00	      0xe800000000	                          call 0x4000f05	       183	am.c	FUNCTION_6	CALL_1
0x4000f05	          0x4889c6	                            mov rsi, rax	      1525	am.c	FUNCTION_44	CALL_5
0x4000f08	          0x4c89e7	                            mov rdi, r12	      1525	am.c	FUNCTION_44	CALL_5
0x4000f0b	      0xe800000000	                          call 0x4000f10	      1525	am.c	FUNCTION_44	CALL_5
0x4000f10	          0x4889e7	                            mov rdi, rsp	      1527	am.c	FUNCTION_44	IF_1	CALL_6
0x4000f13	      0xe800000000	                          call 0x4000f18	      1527	am.c	FUNCTION_44	IF_1	CALL_6
0x4000f18	            0x85c0	                           test eax, eax	      1547	am.c	FUNCTION_45	IF_2	CALL_3
0x4000f1a	            0x7419	                            je 0x4000f35	      1547	am.c	FUNCTION_45	IF_2	CALL_3
0x4000f1c	      0xbf00000000	                              mov edi, 0	      1548	am.c	FUNCTION_45	IF_2
0x4000f21	      0xb800000000	                              mov eax, 0	      1548	am.c	FUNCTION_45	IF_2
0x4000f26	      0xe800000000	                          call 0x4000f2b	      1548	am.c	FUNCTION_45	IF_2
0x4000f2b	      0xbdffffffff	                     mov ebp, 0xffffffff	      1548	am.c	FUNCTION_45	IF_2
0x4000f30	      0xe998020000	                           jmp 0x40011cd	      1548	am.c	FUNCTION_45	IF_2
0x4000f35	      0xbf00000000	                              mov edi, 0	      1550	am.c	FUNCTION_45
0x4000f3a	      0xe800000000	                          call 0x4000f3f	      1550	am.c	FUNCTION_45
0x4000f3f	      0xe800000000	                          call 0x4000f44	      1551	am.c	FUNCTION_45
0x4000f44	          0x4889c2	                            mov rdx, rax	      1551	am.c	FUNCTION_45
0x4000f47	          0x4889ee	                            mov rsi, rbp	      1551	am.c	FUNCTION_45
0x4000f4a	      0xbf00000000	                              mov edi, 0	      1551	am.c	FUNCTION_45
0x4000f4f	      0xe800000000	                          call 0x4000f54	      1551	am.c	FUNCTION_45
0x4000f54	    0x41b800000000	                              mov r8d, 0	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x4000f5a	      0xb900000000	                              mov ecx, 0	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x4000f5f	          0x4889ea	                            mov rdx, rbp	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x4000f62	      0xbe00000000	                              mov esi, 0	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x4000f67	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x4000f6c	      0xe800000000	                          call 0x4000f71	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x4000f71	            0x85c0	                           test eax, eax	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x4000f73	            0x742b	                            je 0x4000fa0	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x4000f75	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x4000f7a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x4000f7f	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x4000f84	      0xe800000000	                          call 0x4000f89	        54	gettext.h	FUNCTION_87
0x4000f89	          0x4889c7	                            mov rdi, rax	      1554	am.c	FUNCTION_45	CALL_5
0x4000f8c	      0xb800000000	                              mov eax, 0	      1554	am.c	FUNCTION_45	CALL_5
0x4000f91	      0xe800000000	                          call 0x4000f96	      1554	am.c	FUNCTION_45	CALL_5
0x4000f96	      0xbdffffffff	                     mov ebp, 0xffffffff	      1554	am.c	FUNCTION_45	CALL_5
0x4000f9b	      0xe92d020000	                           jmp 0x40011cd	      1554	am.c	FUNCTION_45	CALL_5
0x4000fa0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x4000fa5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x4000faa	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x4000faf	      0xe800000000	                          call 0x4000fb4	        54	gettext.h	FUNCTION_87
0x4000fb4	          0x4889c2	                            mov rdx, rax	      1556	am.c	FUNCTION_45	CALL_7
0x4000fb7	    0x488b35000000	            mov rsi, qword [0x04000fbe] 	      1556	am.c	FUNCTION_45	CALL_7
0x4000fbe	          0x4889df	                            mov rdi, rbx	      1556	am.c	FUNCTION_45	CALL_7
0x4000fc1	      0xb800000000	                              mov eax, 0	      1556	am.c	FUNCTION_45	CALL_7
0x4000fc6	      0xe88efdffff	                            call sym.say	      1556	am.c	FUNCTION_45	CALL_7
0x4000fcb	        0x837b5800	               cmp dword [rbx + 0x58], 0	      1558	am.c	FUNCTION_45	IF_4
0x4000fcf	            0x757e	                           jne 0x400104f	      1558	am.c	FUNCTION_45	IF_4
0x4000fd1	    0x48c704240000	                      mov qword [rsp], 0	      1564	am.c	FUNCTION_45	IF_4
0x4000fd9	      0xbe00000000	                              mov esi, 0	      1566	am.c	FUNCTION_45	IF_4	CALL_8
0x4000fde	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      1566	am.c	FUNCTION_45	IF_4	CALL_8
0x4000fe6	      0xe800000000	                          call 0x4000feb	      1566	am.c	FUNCTION_45	IF_4	CALL_8
0x4000feb	    0xc78424280600	         mov dword [rsp + 0x628], 0x200 	      1567	am.c	FUNCTION_45	IF_4
0x4000ff6	    0x4c8da424c805	                  lea r12, [rsp + 0x5c8]	      1568	am.c	FUNCTION_45	IF_4	CALL_9
0x4000ffe	    0x488b8c241001	           mov rcx, qword [rsp + 0x110] 	      1568	am.c	FUNCTION_45	IF_4	CALL_9
0x4001006	      0xba01000000	                              mov edx, 1	      1568	am.c	FUNCTION_45	IF_4	CALL_9
0x400100b	          0x4889e6	                            mov rsi, rsp	      1568	am.c	FUNCTION_45	IF_4	CALL_9
0x400100e	          0x4c89e7	                            mov rdi, r12	      1568	am.c	FUNCTION_45	IF_4	CALL_9
0x4001011	      0xe800000000	                          call 0x4001016	      1568	am.c	FUNCTION_45	IF_4	CALL_9
0x4001016	      0xb900000000	                              mov ecx, 0	      1569	am.c	FUNCTION_45	IF_4	CALL_10
0x400101b	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	      1569	am.c	FUNCTION_45	IF_4	CALL_10
0x4001023	      0xbe00000000	                              mov esi, 0	      1569	am.c	FUNCTION_45	IF_4	CALL_10
0x4001028	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      1569	am.c	FUNCTION_45	IF_4	CALL_10
0x4001030	      0xe800000000	                          call 0x4001035	      1569	am.c	FUNCTION_45	IF_4	CALL_10
0x4001035	          0x4c89e7	                            mov rdi, r12	      1570	am.c	FUNCTION_45	IF_4	CALL_11
0x4001038	      0xe800000000	                          call 0x400103d	      1570	am.c	FUNCTION_45	IF_4	CALL_11
0x400103d	      0xbe01000000	                              mov esi, 1	      1571	am.c	FUNCTION_45	IF_4	CALL_12
0x4001042	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      1571	am.c	FUNCTION_45	IF_4	CALL_12
0x400104a	      0xe800000000	                          call 0x400104f	      1571	am.c	FUNCTION_45	IF_4	CALL_12
0x400104f	          0x4889ee	                            mov rsi, rbp	      1574	am.c	FUNCTION_45	IF_5	CALL_13
0x4001052	          0x4889df	                            mov rdi, rbx	      1574	am.c	FUNCTION_45	IF_5	CALL_13
0x4001055	      0xe81dfbffff	                      call sym.run_apply	      1574	am.c	FUNCTION_45	IF_5	CALL_13
0x400105a	            0x85c0	                           test eax, eax	      1574	am.c	FUNCTION_45	IF_5	CALL_13
0x400105c	            0x742b	                            je 0x4001089	      1574	am.c	FUNCTION_45	IF_5	CALL_13
0x400105e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x4001063	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x4001068	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x400106d	      0xe800000000	                          call 0x4001072	        54	gettext.h	FUNCTION_87
0x4001072	          0x4889c7	                            mov rdi, rax	      1575	am.c	FUNCTION_45	IF_5	CALL_14
0x4001075	      0xb800000000	                              mov eax, 0	      1575	am.c	FUNCTION_45	IF_5	CALL_14
0x400107a	      0xe800000000	                          call 0x400107f	      1575	am.c	FUNCTION_45	IF_5	CALL_14
0x400107f	      0xbdffffffff	                     mov ebp, 0xffffffff	      1575	am.c	FUNCTION_45	IF_5	CALL_14
0x4001084	      0xe944010000	                           jmp 0x40011cd	      1575	am.c	FUNCTION_45	IF_5	CALL_14
0x4001089	    0x41b800000000	                              mov r8d, 0	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x400108f	      0xb900000000	                              mov ecx, 0	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x4001094	          0x4889ea	                            mov rdx, rbp	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x4001097	      0xbe00000000	                              mov esi, 0	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x400109c	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x40010a4	      0xe800000000	                          call 0x40010a9	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x40010a9	            0x85c0	                           test eax, eax	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x40010ab	            0x7419	                            je 0x40010c6	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x40010ad	      0xbf00000000	                              mov edi, 0	      1579	am.c	FUNCTION_45	IF_6
0x40010b2	      0xb800000000	                              mov eax, 0	      1579	am.c	FUNCTION_45	IF_6
0x40010b7	      0xe800000000	                          call 0x40010bc	      1579	am.c	FUNCTION_45	IF_6
0x40010bc	      0xbdffffffff	                     mov ebp, 0xffffffff	      1579	am.c	FUNCTION_45	IF_6
0x40010c1	      0xe907010000	                           jmp 0x40011cd	      1579	am.c	FUNCTION_45	IF_6
0x40010c6	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x40010cb	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x40010d0	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x40010d5	      0xe800000000	                          call 0x40010da	        54	gettext.h	FUNCTION_87
0x40010da	          0x4889c2	                            mov rdx, rax	      1581	am.c	FUNCTION_45	CALL_17
0x40010dd	    0x488b35000000	            mov rsi, qword [0x040010e4] 	      1581	am.c	FUNCTION_45	CALL_17
0x40010e4	          0x4889df	                            mov rdi, rbx	      1581	am.c	FUNCTION_45	CALL_17
0x40010e7	      0xb800000000	                              mov eax, 0	      1581	am.c	FUNCTION_45	CALL_17
0x40010ec	      0xe868fcffff	                            call sym.say	      1581	am.c	FUNCTION_45	CALL_17
0x40010f1	      0xbf00000000	                              mov edi, 0	      1583	am.c	FUNCTION_45
0x40010f6	      0xe800000000	                          call 0x40010fb	      1583	am.c	FUNCTION_45
0x40010fb	      0xbf00000000	                              mov edi, 0	      1584	am.c	FUNCTION_45
0x4001100	      0xe800000000	                          call 0x4001105	      1584	am.c	FUNCTION_45
0x4001105	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      1594	am.c	FUNCTION_45	CALL_18
0x400110d	      0xe800000000	                          call 0x4001112	      1594	am.c	FUNCTION_45	CALL_18
0x4001112	    0x48c78424d800	               mov qword [rsp + 0xd8], 0	      1596	am.c	FUNCTION_45
0x400111e	        0x488b6b28	            mov rbp, qword [rbx + 0x28] 	      1597	am.c	FUNCTION_45	CALL_20
0x4001122	          0x4889ef	                            mov rdi, rbp	      1597	am.c	FUNCTION_45	CALL_20
0x4001125	      0xe847efffff	                        call sym.linelen	      1597	am.c	FUNCTION_45	CALL_20
0x400112a	          0x4889ea	                            mov rdx, rbp	      1597	am.c	FUNCTION_45	CALL_20
0x400112d	            0x89c6	                            mov esi, eax	      1597	am.c	FUNCTION_45	CALL_20
0x400112f	      0xbf00000000	                              mov edi, 0	      1597	am.c	FUNCTION_45	CALL_20
0x4001134	      0xb800000000	                              mov eax, 0	      1597	am.c	FUNCTION_45	CALL_20
0x4001139	      0xe800000000	                          call 0x400113e	      1597	am.c	FUNCTION_45	CALL_20
0x400113e	          0x4989c4	                            mov r12, rax	      1597	am.c	FUNCTION_45	CALL_20
0x4001141	    0x48898424e000	             mov qword [rsp + 0xe0], rax	      1598	am.c	FUNCTION_45
0x4001149	        0x837b5800	               cmp dword [rbx + 0x58], 0	      1600	am.c	FUNCTION_45	IF_7
0x400114d	            0x740b	                            je 0x400115a	      1600	am.c	FUNCTION_45	IF_7
0x400114f	    0xc78424080100	              mov dword [rsp + 0x108], 0	      1601	am.c	FUNCTION_45	IF_7
0x400115a	          0x4989e1	                             mov r9, rsp	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x400115d	      0x4c8d442460	                    lea r8, [rsp + 0x60]	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x4001162	      0xb901000000	                              mov ecx, 1	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x4001167	    0x488d94249000	                   lea rdx, [rsp + 0x90]	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x400116f	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x4001177	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x400117f	      0xe800000000	                          call 0x4001184	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x4001184	            0x89c5	                            mov ebp, eax	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x4001186	            0x85c0	                           test eax, eax	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x4001188	            0x743b	                            je 0x40011c5	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x400118a	    0x8bbb90000000	            mov edi, dword [rbx + 0x90] 	      1604	am.c	FUNCTION_45	IF_8	CALL_22
0x4001190	      0xe800000000	                          call 0x4001195	      1604	am.c	FUNCTION_45	IF_8	CALL_22
0x4001195	          0x4c89e7	                            mov rdi, r12	      1605	am.c	FUNCTION_45	IF_8	CALL_23
0x4001198	      0xe800000000	                          call 0x400119d	      1605	am.c	FUNCTION_45	IF_8	CALL_23
0x400119d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x40011a2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x40011a7	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x40011ac	      0xe800000000	                          call 0x40011b1	        54	gettext.h	FUNCTION_87
0x40011b1	          0x4889c7	                            mov rdi, rax	      1606	am.c	FUNCTION_45	IF_8	CALL_24
0x40011b4	      0xb800000000	                              mov eax, 0	      1606	am.c	FUNCTION_45	IF_8	CALL_24
0x40011b9	      0xe800000000	                          call 0x40011be	      1606	am.c	FUNCTION_45	IF_8	CALL_24
0x40011be	      0xbdffffffff	                     mov ebp, 0xffffffff	      1606	am.c	FUNCTION_45	IF_8	CALL_24
0x40011c3	            0xeb08	                           jmp 0x40011cd	      1606	am.c	FUNCTION_45	IF_8	CALL_24
0x40011c5	          0x4c89e7	                            mov rdi, r12	      1609	am.c	FUNCTION_45	CALL_25
0x40011c8	      0xe800000000	                          call 0x40011cd	      1609	am.c	FUNCTION_45	CALL_25
0x40011cd	            0x89e8	                            mov eax, ebp	      1611	am.c	FUNCTION_45
0x40011cf	    0x488b8c248809	           mov rcx, qword [rsp + 0x988] 	      1611	am.c	FUNCTION_45
0x40011d7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1611	am.c	FUNCTION_45
0x40011e0	            0x7405	                            je 0x40011e7	      1611	am.c	FUNCTION_45
0x40011e2	      0xe800000000	                          call 0x40011e7	      1611	am.c	FUNCTION_45
0x40011e7	    0x4881c4900900	                          add rsp, 0x990	      1611	am.c	FUNCTION_45
0x40011ee	              0x5b	                                 pop rbx	      1611	am.c	FUNCTION_45
0x40011ef	              0x5d	                                 pop rbp	      1611	am.c	FUNCTION_45
0x40011f0	            0x415c	                                 pop r12	      1611	am.c	FUNCTION_45
0x40011f2	              0xc3	                                     ret	      1611	am.c	FUNCTION_45
linelen	IF,0:WHILE,0:CALL,0:DO,0:ELSE,0:FOR,0:SWITCH,0:functions,0	7
0x4000071	              0x53	                                push rbx	        56	am.c	FUNCTION_2
0x4000072	          0x4889fb	                            mov rbx, rdi	        56	am.c	FUNCTION_2
0x4000075	      0xbe0a000000	                            mov esi, 0xa	        57	am.c	FUNCTION_2
0x400007a	      0xe800000000	                          call 0x400007f	        57	am.c	FUNCTION_2
0x400007f	          0x4829d8	                            sub rax, rbx	        57	am.c	FUNCTION_2
0x4000082	              0x5b	                                 pop rbx	        58	am.c	FUNCTION_2
0x4000083	              0xc3	                                     ret	        58	am.c	FUNCTION_2
stgit_patch_to_mail	IF,4:WHILE,2:CALL,8:DO,0:ELSE,4:FOR,0:SWITCH,0:functions,0	139
0x4003a22	            0x4154	                                push r12	       803	am.c	FUNCTION_27
0x4003a24	              0x55	                                push rbp	       803	am.c	FUNCTION_27
0x4003a25	              0x53	                                push rbx	       803	am.c	FUNCTION_27
0x4003a26	        0x4883ec20	                           sub rsp, 0x20	       803	am.c	FUNCTION_27
0x4003a2a	          0x4889fd	                            mov rbp, rdi	       803	am.c	FUNCTION_27
0x4003a2d	          0x4889f3	                            mov rbx, rsi	       803	am.c	FUNCTION_27
0x4003a30	    0x64488b042528	                mov rax, qword fs:[0x28]	       803	am.c	FUNCTION_27
0x4003a39	      0x4889442418	             mov qword [rsp + 0x18], rax	       803	am.c	FUNCTION_27
0x4003a3e	            0x31c0	                            xor eax, eax	       803	am.c	FUNCTION_27
0x4003a40	    0x48c704240000	                      mov qword [rsp], 0	       804	am.c	FUNCTION_27
0x4003a48	    0x48c744240800	                  mov qword [rsp + 8], 0	       804	am.c	FUNCTION_27
0x4003a51	    0x48c744241000	               mov qword [rsp + 0x10], 0	       804	am.c	FUNCTION_27
0x4003a5a	    0x41bc00000000	                             mov r12d, 0	       805	am.c	FUNCTION_27
0x4003a60	      0xe9e4000000	                           jmp 0x4003b49	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x4003a65	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       810	am.c	FUNCTION_27	WHILE_1	IF_1	CALL_2
0x4003a6a	           0xfb607	                   movzx eax, byte [rdi]	        65	am.c	FUNCTION_3	FOR_1
0x4003a6d	            0x84c0	                             test al, al	        65	am.c	FUNCTION_3	FOR_1
0x4003a6f	     0xf84d4000000	                            je 0x4003b49	        65	am.c	FUNCTION_3	FOR_1
0x4003a75	           0xfb6c0	                           movzx eax, al	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x4003a78	    0xf68000000000	                      test byte [rax], 1	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x4003a7f	            0x7421	                            je 0x4003aa2	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x4003a81	          0x4889fa	                            mov rdx, rdi	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x4003a84	            0xeb0c	                           jmp 0x4003a92	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x4003a86	           0xfb6c0	                           movzx eax, al	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x4003a89	    0xf68000000000	                      test byte [rax], 1	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x4003a90	            0x741a	                            je 0x4003aac	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x4003a92	        0x4883c201	                              add rdx, 1	        65	am.c	FUNCTION_3	FOR_1
0x4003a96	           0xfb602	                   movzx eax, byte [rdx]	        65	am.c	FUNCTION_3	FOR_1
0x4003a99	            0x84c0	                             test al, al	        65	am.c	FUNCTION_3	FOR_1
0x4003a9b	            0x75e9	                           jne 0x4003a86	        65	am.c	FUNCTION_3	FOR_1
0x4003a9d	      0xe9a7000000	                           jmp 0x4003b49	        65	am.c	FUNCTION_3	FOR_1
0x4003aa2	          0x4889f9	                            mov rcx, rdi	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x4003aa5	      0xb800000000	                              mov eax, 0	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x4003aaa	            0xeb08	                           jmp 0x4003ab4	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x4003aac	          0x4889f9	                            mov rcx, rdi	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x4003aaf	      0xb800000000	                              mov eax, 0	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x4003ab4	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_95	DO_1	IF_1
0x4003ab7	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_95	DO_1	IF_1
0x4003ab9	     0xf8462010000	                            je 0x4003c21	       484	git-compat-util.h	FUNCTION_95	DO_1	IF_1
0x4003abf	        0x4883c101	                              add rcx, 1	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4003ac3	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4003ac7	          0x3a51ff	                  cmp dl, byte [rcx - 1]	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4003aca	            0x74e8	                            je 0x4003ab4	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4003acc	      0xe96c010000	                           jmp 0x4003c3d	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4003ad1	      0xbe00000000	                              mov esi, 0	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x4003ad6	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x4003adb	      0xe800000000	                          call 0x4003ae0	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x4003ae0	            0x85c0	                           test eax, eax	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x4003ae2	            0x741e	                            je 0x4003b02	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x4003ae4	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	        97	stdio2.h	CALL_119
0x4003ae9	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_119
0x4003aee	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_119
0x4003af3	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_119
0x4003af6	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_119
0x4003afb	      0xe800000000	                          call 0x4003b00	        97	stdio2.h	CALL_119
0x4003b00	            0xeb47	                           jmp 0x4003b49	        97	stdio2.h	CALL_119
0x4003b02	          0x4585e4	                         test r12d, r12d	       816	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4
0x4003b05	            0x7524	                           jne 0x4003b2b	       816	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4
0x4003b07	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	        97	stdio2.h	CALL_119
0x4003b0c	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_119
0x4003b11	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_119
0x4003b16	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_119
0x4003b19	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_119
0x4003b1e	      0xe800000000	                          call 0x4003b23	        97	stdio2.h	CALL_119
0x4003b23	    0x41bc01000000	                             mov r12d, 1	       818	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4
0x4003b29	            0xeb1e	                           jmp 0x4003b49	       818	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4
0x4003b2b	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	        97	stdio2.h	CALL_119
0x4003b30	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_119
0x4003b35	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_119
0x4003b3a	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_119
0x4003b3d	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_119
0x4003b42	      0xe800000000	                          call 0x4003b47	        97	stdio2.h	CALL_119
0x4003b47	            0xeb13	                           jmp 0x4003b5c	        97	stdio2.h	CALL_119
0x4003b49	          0x4889de	                            mov rsi, rbx	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x4003b4c	          0x4889e7	                            mov rdi, rsp	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x4003b4f	      0xe800000000	                          call 0x4003b54	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x4003b54	            0x85c0	                           test eax, eax	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x4003b56	     0xf8409ffffff	                            je 0x4003a65	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x4003b5c	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_135
0x4003b65	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_135	IF_2
0x4003b6a	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_135	IF_2
0x4003b70	            0x7405	                            je 0x4003b77	       165	strbuf.h	FUNCTION_135	IF_2
0x4003b72	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_135	IF_2
0x4003b75	            0xeb76	                           jmp 0x4003bed	       166	strbuf.h	FUNCTION_135	IF_2
0x4003b77	    0x803d00000000	                cmp byte [0x04003b7e], 0	       168	strbuf.h	FUNCTION_135	CALL_2
0x4003b7e	            0x746d	                            je 0x4003bed	       168	strbuf.h	FUNCTION_135	CALL_2
0x4003b80	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_135	CALL_2
0x4003b85	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_135	CALL_2
0x4003b8a	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_135	CALL_2
0x4003b8f	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_135	CALL_2
0x4003b94	      0xe800000000	                          call 0x4003b99	       168	strbuf.h	FUNCTION_135	CALL_2
0x4003b99	          0x4889e9	                            mov rcx, rbp	       827	am.c	FUNCTION_27	WHILE_2	CALL_7
0x4003b9c	      0x488b542408	                mov rdx, qword [rsp + 8]	       827	am.c	FUNCTION_27	WHILE_2	CALL_7
0x4003ba1	      0xbe01000000	                              mov esi, 1	       827	am.c	FUNCTION_27	WHILE_2	CALL_7
0x4003ba6	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       827	am.c	FUNCTION_27	WHILE_2	CALL_7
0x4003bab	      0xe800000000	                          call 0x4003bb0	       827	am.c	FUNCTION_27	WHILE_2	CALL_7
0x4003bb0	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_135
0x4003bb9	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_135	IF_2
0x4003bbe	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_135	IF_2
0x4003bc4	            0x7405	                            je 0x4003bcb	       165	strbuf.h	FUNCTION_135	IF_2
0x4003bc6	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_135	IF_2
0x4003bc9	            0xeb22	                           jmp 0x4003bed	       166	strbuf.h	FUNCTION_135	IF_2
0x4003bcb	    0x803d00000000	                cmp byte [0x04003bd2], 0	       168	strbuf.h	FUNCTION_135	CALL_2
0x4003bd2	            0x7419	                            je 0x4003bed	       168	strbuf.h	FUNCTION_135	CALL_2
0x4003bd4	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_135	CALL_2
0x4003bd9	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_135	CALL_2
0x4003bde	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_135	CALL_2
0x4003be3	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_135	CALL_2
0x4003be8	      0xe800000000	                          call 0x4003bed	       168	strbuf.h	FUNCTION_135	CALL_2
0x4003bed	          0x4889da	                            mov rdx, rbx	       826	am.c	FUNCTION_27	WHILE_2	CALL_6
0x4003bf0	      0xbe00200000	                         mov esi, 0x2000	       826	am.c	FUNCTION_27	WHILE_2	CALL_6
0x4003bf5	          0x4889e7	                            mov rdi, rsp	       826	am.c	FUNCTION_27	WHILE_2	CALL_6
0x4003bf8	      0xe800000000	                          call 0x4003bfd	       826	am.c	FUNCTION_27	WHILE_2	CALL_6
0x4003bfd	          0x4885c0	                           test rax, rax	       826	am.c	FUNCTION_27	WHILE_2	CALL_6
0x4003c00	            0x7597	                           jne 0x4003b99	       826	am.c	FUNCTION_27	WHILE_2	CALL_6
0x4003c02	          0x4889e7	                            mov rdi, rsp	       831	am.c	FUNCTION_27	CALL_8
0x4003c05	      0xe800000000	                          call 0x4003c0a	       831	am.c	FUNCTION_27	CALL_8
0x4003c0a	      0xb800000000	                              mov eax, 0	       833	am.c	FUNCTION_27
0x4003c0f	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       833	am.c	FUNCTION_27
0x4003c14	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       833	am.c	FUNCTION_27
0x4003c1d	            0x743a	                            je 0x4003c59	       833	am.c	FUNCTION_27
0x4003c1f	            0xeb33	                           jmp 0x4003c54	       833	am.c	FUNCTION_27
0x4003c21	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_119
0x4003c26	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_119
0x4003c2b	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_119
0x4003c2e	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_119
0x4003c33	      0xe800000000	                          call 0x4003c38	        97	stdio2.h	CALL_119
0x4003c38	      0xe90cffffff	                           jmp 0x4003b49	        97	stdio2.h	CALL_119
0x4003c3d	      0xbe00000000	                              mov esi, 0	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x4003c42	      0xe800000000	                          call 0x4003c47	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x4003c47	            0x85c0	                           test eax, eax	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x4003c49	     0xf8595feffff	                           jne 0x4003ae4	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x4003c4f	      0xe97dfeffff	                           jmp 0x4003ad1	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x4003c54	      0xe800000000	                          call 0x4003c59	       833	am.c	FUNCTION_27
0x4003c59	        0x4883c420	                           add rsp, 0x20	       833	am.c	FUNCTION_27
0x4003c5d	              0x5b	                                 pop rbx	       833	am.c	FUNCTION_27
0x4003c5e	              0x5d	                                 pop rbp	       833	am.c	FUNCTION_27
0x4003c5f	            0x415c	                                 pop r12	       833	am.c	FUNCTION_27
0x4003c61	              0xc3	                                     ret	       833	am.c	FUNCTION_27
write_state_count	IF,0:WHILE,0:CALL,2:DO,0:ELSE,0:FOR,0:SWITCH,0:functions,0	14
0x400063c	              0x53	                                push rbx	       197	am.c	FUNCTION_8
0x400063d	            0x89d3	                            mov ebx, edx	       197	am.c	FUNCTION_8
0x400063f	          0x4889f2	                            mov rdx, rsi	       183	am.c	FUNCTION_6	CALL_1
0x4000642	          0x488b37	                    mov rsi, qword [rdi]	       183	am.c	FUNCTION_6	CALL_1
0x4000645	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x400064a	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x400064f	      0xe800000000	                          call 0x4000654	       183	am.c	FUNCTION_6	CALL_1
0x4000654	            0x89da	                            mov edx, ebx	       198	am.c	FUNCTION_8	CALL_2
0x4000656	      0xbe00000000	                              mov esi, 0	       198	am.c	FUNCTION_8	CALL_2
0x400065b	          0x4889c7	                            mov rdi, rax	       198	am.c	FUNCTION_8	CALL_2
0x400065e	      0xb800000000	                              mov eax, 0	       198	am.c	FUNCTION_8	CALL_2
0x4000663	      0xe800000000	                          call 0x4000668	       198	am.c	FUNCTION_8	CALL_2
0x4000668	              0x5b	                                 pop rbx	       199	am.c	FUNCTION_8
0x4000669	              0xc3	                                     ret	       199	am.c	FUNCTION_8
die_user_resolve	IF,1:WHILE,0:CALL,8:DO,0:ELSE,1:FOR,0:SWITCH,0:functions,0	38
0x40007c9	              0x53	                                push rbx	      1156	am.c	FUNCTION_35
0x40007ca	    0x488bb7800000	            mov rsi, qword [rdi + 0x80] 	      1157	am.c	FUNCTION_35	IF_1
0x40007d1	          0x4885f6	                           test rsi, rsi	      1157	am.c	FUNCTION_35	IF_1
0x40007d4	            0x7411	                            je 0x40007e7	      1157	am.c	FUNCTION_35	IF_1
0x40007d6	      0xbf00000000	                              mov edi, 0	      1158	am.c	FUNCTION_35	IF_1	CALL_1
0x40007db	      0xb800000000	                              mov eax, 0	      1158	am.c	FUNCTION_35	IF_1	CALL_1
0x40007e0	      0xe800000000	                          call 0x40007e5	      1158	am.c	FUNCTION_35	IF_1	CALL_1
0x40007e5	            0xeb7e	                           jmp 0x4000865	      1158	am.c	FUNCTION_35	IF_1	CALL_1
0x40007e7	        0x837f5000	               cmp dword [rdi + 0x50], 0	      1160	am.c	FUNCTION_35	ELSE_1
0x40007eb	      0xbb00000000	                              mov ebx, 0	      1160	am.c	FUNCTION_35	ELSE_1
0x40007f0	      0xb800000000	                              mov eax, 0	      1160	am.c	FUNCTION_35	ELSE_1
0x40007f5	        0x480f45d8	                         cmovne rbx, rax	      1160	am.c	FUNCTION_35	ELSE_1
0x40007f9	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x40007fe	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x4000803	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x4000808	      0xe800000000	                          call 0x400080d	        54	gettext.h	FUNCTION_87
0x400080d	          0x4889de	                            mov rsi, rbx	      1162	am.c	FUNCTION_35	ELSE_1	CALL_3
0x4000810	          0x4889c7	                            mov rdi, rax	      1162	am.c	FUNCTION_35	ELSE_1	CALL_3
0x4000813	      0xb800000000	                              mov eax, 0	      1162	am.c	FUNCTION_35	ELSE_1	CALL_3
0x4000818	      0xe800000000	                          call 0x400081d	      1162	am.c	FUNCTION_35	ELSE_1	CALL_3
0x400081d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x4000822	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x4000827	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x400082c	      0xe800000000	                          call 0x4000831	        54	gettext.h	FUNCTION_87
0x4000831	          0x4889de	                            mov rsi, rbx	      1163	am.c	FUNCTION_35	ELSE_1	CALL_5
0x4000834	          0x4889c7	                            mov rdi, rax	      1163	am.c	FUNCTION_35	ELSE_1	CALL_5
0x4000837	      0xb800000000	                              mov eax, 0	      1163	am.c	FUNCTION_35	ELSE_1	CALL_5
0x400083c	      0xe800000000	                          call 0x4000841	      1163	am.c	FUNCTION_35	ELSE_1	CALL_5
0x4000841	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x4000846	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x400084b	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x4000850	      0xe800000000	                          call 0x4000855	        54	gettext.h	FUNCTION_87
0x4000855	          0x4889de	                            mov rsi, rbx	      1164	am.c	FUNCTION_35	ELSE_1	CALL_7
0x4000858	          0x4889c7	                            mov rdi, rax	      1164	am.c	FUNCTION_35	ELSE_1	CALL_7
0x400085b	      0xb800000000	                              mov eax, 0	      1164	am.c	FUNCTION_35	ELSE_1	CALL_7
0x4000860	      0xe800000000	                          call 0x4000865	      1164	am.c	FUNCTION_35	ELSE_1	CALL_7
0x4000865	      0xbf80000000	                           mov edi, 0x80	      1167	am.c	FUNCTION_35	CALL_8
0x400086a	      0xe800000000	             call sym.write_commit_patch	      1167	am.c	FUNCTION_35	CALL_8
msgnum	IF,0:WHILE,0:CALL,1:DO,0:ELSE,0:FOR,0:SWITCH,0:functions,0	23
0x4001e56	        0x4883ec08	                              sub rsp, 8	      1129	am.c	FUNCTION_33
0x4001e5a	    0x48c705000000	               mov qword [0x04001e65], 0	       164	strbuf.h	FUNCTION_135
0x4001e65	    0x488b05000000	            mov rax, qword [0x04001e6c] 	       165	strbuf.h	FUNCTION_135	IF_2
0x4001e6c	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_135	IF_2
0x4001e72	            0x7405	                            je 0x4001e79	       165	strbuf.h	FUNCTION_135	IF_2
0x4001e74	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_135	IF_2
0x4001e77	            0xeb22	                           jmp 0x4001e9b	       166	strbuf.h	FUNCTION_135	IF_2
0x4001e79	    0x803d00000000	                cmp byte [0x04001e80], 0	       168	strbuf.h	FUNCTION_135	CALL_2
0x4001e80	            0x7419	                            je 0x4001e9b	       168	strbuf.h	FUNCTION_135	CALL_2
0x4001e82	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_135	CALL_2
0x4001e87	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_135	CALL_2
0x4001e8c	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_135	CALL_2
0x4001e91	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_135	CALL_2
0x4001e96	      0xe800000000	                          call 0x4001e9b	       168	strbuf.h	FUNCTION_135	CALL_2
0x4001e9b	          0x8b4f08	                mov ecx, dword [rdi + 8]	      1133	am.c	FUNCTION_33	CALL_1
0x4001e9e	          0x8b574c	            mov edx, dword [rdi + 0x4c] 	      1133	am.c	FUNCTION_33	CALL_1
0x4001ea1	      0xbe00000000	                              mov esi, 0	      1133	am.c	FUNCTION_33	CALL_1
0x4001ea6	      0xbf00000000	                              mov edi, 0	      1133	am.c	FUNCTION_33	CALL_1
0x4001eab	      0xb800000000	                              mov eax, 0	      1133	am.c	FUNCTION_33	CALL_1
0x4001eb0	      0xe800000000	                          call 0x4001eb5	      1133	am.c	FUNCTION_33	CALL_1
0x4001eb5	    0x488b05000000	            mov rax, qword [0x04001ebc] 	      1136	am.c	FUNCTION_33
0x4001ebc	        0x4883c408	                              add rsp, 8	      1136	am.c	FUNCTION_33
0x4001ec0	              0xc3	                                     ret	      1136	am.c	FUNCTION_33
read_commit_msg	IF,1:WHILE,0:CALL,4:DO,0:ELSE,0:FOR,0:SWITCH,0:functions,0	39
0x4001fa6	              0x53	                                push rbx	       375	am.c	FUNCTION_16
0x4001fa7	        0x4883ec20	                           sub rsp, 0x20	       375	am.c	FUNCTION_16
0x4001fab	    0x64488b042528	                mov rax, qword fs:[0x28]	       375	am.c	FUNCTION_16
0x4001fb4	      0x4889442418	             mov qword [rsp + 0x18], rax	       375	am.c	FUNCTION_16
0x4001fb9	            0x31c0	                            xor eax, eax	       375	am.c	FUNCTION_16
0x4001fbb	    0x48c704240000	                      mov qword [rsp], 0	       376	am.c	FUNCTION_16
0x4001fc3	    0x48c744240800	                  mov qword [rsp + 8], 0	       376	am.c	FUNCTION_16
0x4001fcc	    0x48c744241000	               mov qword [rsp + 0x10], 0	       376	am.c	FUNCTION_16
0x4001fd5	      0x48837f2800	               cmp qword [rdi + 0x28], 0	       378	am.c	FUNCTION_16	CALL_1
0x4001fda	            0x7419	                            je 0x4001ff5	       378	am.c	FUNCTION_16	CALL_1
0x4001fdc	      0xb900000000	                              mov ecx, 0	       378	am.c	FUNCTION_16	CALL_1
0x4001fe1	      0xba7a010000	                          mov edx, 0x17a	       378	am.c	FUNCTION_16	CALL_1
0x4001fe6	      0xbe00000000	                              mov esi, 0	       378	am.c	FUNCTION_16	CALL_1
0x4001feb	      0xbf00000000	                              mov edi, 0	       378	am.c	FUNCTION_16	CALL_1
0x4001ff0	      0xe800000000	                          call 0x4001ff5	       378	am.c	FUNCTION_16	CALL_1
0x4001ff5	          0x4889fb	                            mov rbx, rdi	       378	am.c	FUNCTION_16	CALL_1
0x4001ff8	      0xb900000000	                              mov ecx, 0	       380	am.c	FUNCTION_16	IF_1	CALL_2
0x4001ffd	      0xba00000000	                              mov edx, 0	       380	am.c	FUNCTION_16	IF_1	CALL_2
0x4002002	          0x4889fe	                            mov rsi, rdi	       380	am.c	FUNCTION_16	IF_1	CALL_2
0x4002005	          0x4889e7	                            mov rdi, rsp	       380	am.c	FUNCTION_16	IF_1	CALL_2
0x4002008	      0xe8b4feffff	                call sym.read_state_file	       380	am.c	FUNCTION_16	IF_1	CALL_2
0x400200d	            0x85c0	                           test eax, eax	       380	am.c	FUNCTION_16	IF_1	CALL_2
0x400200f	            0x790f	                           jns 0x4002020	       380	am.c	FUNCTION_16	IF_1	CALL_2
0x4002011	          0x4889e7	                            mov rdi, rsp	       381	am.c	FUNCTION_16	IF_1	CALL_3
0x4002014	      0xe800000000	                          call 0x4002019	       381	am.c	FUNCTION_16	IF_1	CALL_3
0x4002019	      0xb8ffffffff	                     mov eax, 0xffffffff	       382	am.c	FUNCTION_16	IF_1
0x400201e	            0xeb15	                           jmp 0x4002035	       382	am.c	FUNCTION_16	IF_1
0x4002020	        0x488d7330	                   lea rsi, [rbx + 0x30]	       385	am.c	FUNCTION_16	CALL_4
0x4002024	          0x4889e7	                            mov rdi, rsp	       385	am.c	FUNCTION_16	CALL_4
0x4002027	      0xe800000000	                          call 0x400202c	       385	am.c	FUNCTION_16	CALL_4
0x400202c	        0x48894328	             mov qword [rbx + 0x28], rax	       385	am.c	FUNCTION_16	CALL_4
0x4002030	      0xb800000000	                              mov eax, 0	       386	am.c	FUNCTION_16
0x4002035	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       387	am.c	FUNCTION_16
0x400203a	    0x644833142528	                xor rdx, qword fs:[0x28]	       387	am.c	FUNCTION_16
0x4002043	            0x7405	                            je 0x400204a	       387	am.c	FUNCTION_16
0x4002045	      0xe800000000	                          call 0x400204a	       387	am.c	FUNCTION_16
0x400204a	        0x4883c420	                           add rsp, 0x20	       387	am.c	FUNCTION_16
0x400204e	              0x5b	                                 pop rbx	       387	am.c	FUNCTION_16
0x400204f	              0xc3	                                     ret	       387	am.c	FUNCTION_16
do_interactive	IF,9:WHILE,0:CALL,20:DO,0:ELSE,5:FOR,1:SWITCH,0:functions,0	129
0x4000954	            0x4155	                                push r13	      1699	am.c	FUNCTION_48
0x4000956	            0x4154	                                push r12	      1699	am.c	FUNCTION_48
0x4000958	              0x55	                                push rbp	      1699	am.c	FUNCTION_48
0x4000959	              0x53	                                push rbx	      1699	am.c	FUNCTION_48
0x400095a	        0x4883ec78	                           sub rsp, 0x78	      1699	am.c	FUNCTION_48
0x400095e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1699	am.c	FUNCTION_48
0x4000967	      0x4889442468	             mov qword [rsp + 0x68], rax	      1699	am.c	FUNCTION_48
0x400096c	            0x31c0	                            xor eax, eax	      1699	am.c	FUNCTION_48
0x400096e	      0x48837f2800	               cmp qword [rdi + 0x28], 0	      1700	am.c	FUNCTION_48	CALL_1
0x4000973	            0x7519	                           jne 0x400098e	      1700	am.c	FUNCTION_48	CALL_1
0x4000975	      0xb900000000	                              mov ecx, 0	      1700	am.c	FUNCTION_48	CALL_1
0x400097a	      0xbaa4060000	                          mov edx, 0x6a4	      1700	am.c	FUNCTION_48	CALL_1
0x400097f	      0xbe00000000	                              mov esi, 0	      1700	am.c	FUNCTION_48	CALL_1
0x4000984	      0xbf00000000	                              mov edi, 0	      1700	am.c	FUNCTION_48	CALL_1
0x4000989	      0xe800000000	                          call 0x400098e	      1700	am.c	FUNCTION_48	CALL_1
0x400098e	          0x4889fb	                            mov rbx, rdi	      1700	am.c	FUNCTION_48	CALL_1
0x4000991	      0xbf00000000	                              mov edi, 0	      1702	am.c	FUNCTION_48	IF_1	CALL_2
0x4000996	      0xe800000000	                          call 0x400099b	      1702	am.c	FUNCTION_48	IF_1	CALL_2
0x400099b	            0x85c0	                           test eax, eax	      1702	am.c	FUNCTION_48	IF_1	CALL_2
0x400099d	            0x7521	                           jne 0x40009c0	      1702	am.c	FUNCTION_48	IF_1	CALL_2
0x400099f	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x40009a4	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x40009a9	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x40009ae	      0xe800000000	                          call 0x40009b3	        54	gettext.h	FUNCTION_87
0x40009b3	          0x4889c7	                            mov rdi, rax	      1703	am.c	FUNCTION_48	CALL_4
0x40009b6	      0xb800000000	                              mov eax, 0	      1703	am.c	FUNCTION_48	CALL_4
0x40009bb	      0xe800000000	                          call 0x40009c0	      1703	am.c	FUNCTION_48	CALL_4
0x40009c0	    0x41bc00000000	                             mov r12d, 0	      1742	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	IF_9
0x40009c6	      0x488d6c2408	                      lea rbp, [rsp + 8]	      1744	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_19
0x40009cb	        0x4c8d6b30	                   lea r13, [rbx + 0x30]	      1734	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_14
0x40009cf	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x40009d4	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x40009d9	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x40009de	      0xe800000000	                          call 0x40009e3	        54	gettext.h	FUNCTION_87
0x40009e3	          0x4889c7	                            mov rdi, rax	      1708	am.c	FUNCTION_48	FOR_1	CALL_6
0x40009e6	      0xe800000000	                          call 0x40009eb	      1708	am.c	FUNCTION_48	FOR_1	CALL_6
0x40009eb	      0xbf00000000	                              mov edi, 0	      1709	am.c	FUNCTION_48	FOR_1	CALL_7
0x40009f0	      0xe800000000	                          call 0x40009f5	      1709	am.c	FUNCTION_48	FOR_1	CALL_7
0x40009f5	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       104	stdio2.h	CALL_122
0x40009f9	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_122
0x40009fe	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_122
0x4000a03	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_122
0x4000a08	      0xe800000000	                          call 0x4000a0d	       104	stdio2.h	CALL_122
0x4000a0d	      0xbf00000000	                              mov edi, 0	      1711	am.c	FUNCTION_48	FOR_1	CALL_8
0x4000a12	      0xe800000000	                          call 0x4000a17	      1711	am.c	FUNCTION_48	FOR_1	CALL_8
0x4000a17	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x4000a1c	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x4000a21	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x4000a26	      0xe800000000	                          call 0x4000a2b	        54	gettext.h	FUNCTION_87
0x4000a2b	      0xbe02000000	                              mov esi, 2	      1718	am.c	FUNCTION_48	FOR_1	CALL_10
0x4000a30	          0x4889c7	                            mov rdi, rax	      1718	am.c	FUNCTION_48	FOR_1	CALL_10
0x4000a33	      0xe800000000	                          call 0x4000a38	      1718	am.c	FUNCTION_48	FOR_1	CALL_10
0x4000a38	          0x4885c0	                           test rax, rax	      1720	am.c	FUNCTION_48	FOR_1	IF_2
0x4000a3b	            0x7492	                            je 0x40009cf	      1720	am.c	FUNCTION_48	FOR_1	IF_2
0x4000a3d	           0xfb600	                   movzx eax, byte [rax]	      1722	am.c	FUNCTION_48	FOR_1	ELSE_1	IF_3
0x4000a40	          0x83e0df	                     and eax, 0xffffffdf	      1722	am.c	FUNCTION_48	FOR_1	ELSE_1	IF_3
0x4000a43	            0x3c59	                            cmp al, 0x59	      1722	am.c	FUNCTION_48	FOR_1	ELSE_1	IF_3
0x4000a45	     0xf8400010000	                            je 0x4000b4b	      1722	am.c	FUNCTION_48	FOR_1	ELSE_1	IF_3
0x4000a4b	            0x3c41	                            cmp al, 0x41	      1724	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4000a4d	            0x7511	                           jne 0x4000a60	      1724	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4000a4f	    0xc74350000000	               mov dword [rbx + 0x50], 0	      1725	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4000a56	      0xb800000000	                              mov eax, 0	      1726	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4000a5b	      0xe9f7000000	                           jmp 0x4000b57	      1726	am.c	FUNCTION_48	FOR_1	ELSE_2	IF_4
0x4000a60	            0x3c4e	                            cmp al, 0x4e	      1727	am.c	FUNCTION_48	FOR_1	ELSE_3	IF_5
0x4000a62	     0xf84ea000000	                            je 0x4000b52	      1727	am.c	FUNCTION_48	FOR_1	ELSE_3	IF_5
0x4000a68	            0x3c45	                            cmp al, 0x45	      1729	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4000a6a	            0x756a	                           jne 0x4000ad6	      1729	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4000a6c	    0x48c704240000	                      mov qword [rsp], 0	      1730	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4000a74	    0x48c744240800	                  mov qword [rsp + 8], 0	      1730	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4000a7d	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1730	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6
0x4000a86	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4000a8b	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4000a8e	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4000a93	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x4000a98	      0xe800000000	                          call 0x4000a9d	       183	am.c	FUNCTION_6	CALL_1
0x4000a9d	      0xba00000000	                              mov edx, 0	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_12
0x4000aa2	          0x4889e6	                            mov rsi, rsp	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_12
0x4000aa5	          0x4889c7	                            mov rdi, rax	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_12
0x4000aa8	      0xe800000000	                          call 0x4000aad	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_12
0x4000aad	            0x85c0	                           test eax, eax	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_12
0x4000aaf	            0x7518	                           jne 0x4000ac9	      1732	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_12
0x4000ab1	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      1733	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_13
0x4000ab5	      0xe800000000	                          call 0x4000aba	      1733	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_13
0x4000aba	          0x4c89ee	                            mov rsi, r13	      1734	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_14
0x4000abd	          0x4889e7	                            mov rdi, rsp	      1734	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_14
0x4000ac0	      0xe800000000	                          call 0x4000ac5	      1734	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_14
0x4000ac5	        0x48894328	             mov qword [rbx + 0x28], rax	      1734	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	IF_7	CALL_14
0x4000ac9	          0x4889e7	                            mov rdi, rsp	      1736	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	CALL_15
0x4000acc	      0xe800000000	                          call 0x4000ad1	      1736	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	CALL_15
0x4000ad1	      0xe9f9feffff	                           jmp 0x40009cf	      1736	am.c	FUNCTION_48	FOR_1	ELSE_4	IF_6	CALL_15
0x4000ad6	            0x3c56	                            cmp al, 0x56	      1737	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4000ad8	     0xf85f1feffff	                           jne 0x40009cf	      1737	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4000ade	      0xbf01000000	                              mov edi, 1	      1738	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_16
0x4000ae3	      0xe800000000	                          call 0x4000ae8	      1738	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_16
0x4000ae8	          0x4889c6	                            mov rsi, rax	      1738	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_16
0x4000aeb	          0x4889e7	                            mov rdi, rsp	      1739	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4000aee	      0xb90c000000	                            mov ecx, 0xc	      1739	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4000af3	      0xb800000000	                              mov eax, 0	      1739	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4000af8	          0xf348ab	              rep stosq qword [rdi], rax	      1739	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4000afb	    0x48c744240800	                  mov qword [rsp + 8], 0	      1739	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4000b04	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1739	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8
0x4000b0d	          0x4885f6	                           test rsi, rsi	      1741	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	IF_9
0x4000b10	        0x490f44f4	                          cmove rsi, r12	      1742	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	IF_9
0x4000b14	          0x4889e7	                            mov rdi, rsp	      1743	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_17
0x4000b17	      0xe800000000	                          call 0x4000b1c	      1743	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_17
0x4000b1c	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4000b21	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4000b24	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4000b29	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x4000b2e	      0xe800000000	                          call 0x4000b33	       183	am.c	FUNCTION_6	CALL_1
0x4000b33	          0x4889c6	                            mov rsi, rax	      1744	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_19
0x4000b36	          0x4889ef	                            mov rdi, rbp	      1744	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_19
0x4000b39	      0xe800000000	                          call 0x4000b3e	      1744	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_19
0x4000b3e	          0x4889e7	                            mov rdi, rsp	      1745	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_20
0x4000b41	      0xe800000000	                          call 0x4000b46	      1745	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_20
0x4000b46	      0xe984feffff	                           jmp 0x40009cf	      1745	am.c	FUNCTION_48	FOR_1	ELSE_5	IF_8	CALL_20
0x4000b4b	      0xb800000000	                              mov eax, 0	      1723	am.c	FUNCTION_48	FOR_1	ELSE_1	IF_3
0x4000b50	            0xeb05	                           jmp 0x4000b57	      1723	am.c	FUNCTION_48	FOR_1	ELSE_1	IF_3
0x4000b52	      0xb801000000	                              mov eax, 1	      1728	am.c	FUNCTION_48	FOR_1	ELSE_3	IF_5
0x4000b57	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      1748	am.c	FUNCTION_48
0x4000b5c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1748	am.c	FUNCTION_48
0x4000b65	            0x7405	                            je 0x4000b6c	      1748	am.c	FUNCTION_48
0x4000b67	      0xe800000000	                          call 0x4000b6c	      1748	am.c	FUNCTION_48
0x4000b6c	        0x4883c478	                           add rsp, 0x78	      1748	am.c	FUNCTION_48
0x4000b70	              0x5b	                                 pop rbx	      1748	am.c	FUNCTION_48
0x4000b71	              0x5d	                                 pop rbp	      1748	am.c	FUNCTION_48
0x4000b72	            0x415c	                                 pop r12	      1748	am.c	FUNCTION_48
0x4000b74	            0x415d	                                 pop r13	      1748	am.c	FUNCTION_48
0x4000b76	              0xc3	                                     ret	      1748	am.c	FUNCTION_48
validate_resume_state	IF,2:WHILE,0:CALL,6:DO,0:ELSE,0:FOR,0:SWITCH,0:functions,0	39
0x40001ef	              0x53	                                push rbx	      1681	am.c	FUNCTION_47
0x40001f0	      0x48837f2800	               cmp qword [rdi + 0x28], 0	      1682	am.c	FUNCTION_47	IF_1
0x40001f5	            0x753e	                           jne 0x4000235	      1682	am.c	FUNCTION_47	IF_1
0x40001f7	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x40001fc	          0x488b37	                    mov rsi, qword [rdi]	       183	am.c	FUNCTION_6	CALL_1
0x40001ff	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4000204	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x4000209	      0xe800000000	                          call 0x400020e	       183	am.c	FUNCTION_6	CALL_1
0x400020e	          0x4889c3	                            mov rbx, rax	       183	am.c	FUNCTION_6	CALL_1
0x4000211	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x4000216	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x400021b	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x4000220	      0xe800000000	                          call 0x4000225	        54	gettext.h	FUNCTION_87
0x4000225	          0x4889de	                            mov rsi, rbx	      1683	am.c	FUNCTION_47	IF_1	CALL_2
0x4000228	          0x4889c7	                            mov rdi, rax	      1683	am.c	FUNCTION_47	IF_1	CALL_2
0x400022b	      0xb800000000	                              mov eax, 0	      1683	am.c	FUNCTION_47	IF_1	CALL_2
0x4000230	      0xe800000000	                          call 0x4000235	      1683	am.c	FUNCTION_47	IF_1	CALL_2
0x4000235	      0x48837f1000	               cmp qword [rdi + 0x10], 0	      1686	am.c	FUNCTION_47	IF_2
0x400023a	            0x740e	                            je 0x400024a	      1686	am.c	FUNCTION_47	IF_2
0x400023c	      0x48837f1800	               cmp qword [rdi + 0x18], 0	      1686	am.c	FUNCTION_47	IF_2
0x4000241	            0x7407	                            je 0x400024a	      1686	am.c	FUNCTION_47	IF_2
0x4000243	      0x48837f2000	               cmp qword [rdi + 0x20], 0	      1686	am.c	FUNCTION_47	IF_2
0x4000248	            0x753e	                           jne 0x4000288	      1686	am.c	FUNCTION_47	IF_2
0x400024a	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x400024f	          0x488b37	                    mov rsi, qword [rdi]	       183	am.c	FUNCTION_6	CALL_1
0x4000252	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4000257	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x400025c	      0xe800000000	                          call 0x4000261	       183	am.c	FUNCTION_6	CALL_1
0x4000261	          0x4889c3	                            mov rbx, rax	       183	am.c	FUNCTION_6	CALL_1
0x4000264	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x4000269	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x400026e	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x4000273	      0xe800000000	                          call 0x4000278	        54	gettext.h	FUNCTION_87
0x4000278	          0x4889de	                            mov rsi, rbx	      1687	am.c	FUNCTION_47	IF_2	CALL_5
0x400027b	          0x4889c7	                            mov rdi, rax	      1687	am.c	FUNCTION_47	IF_2	CALL_5
0x400027e	      0xb800000000	                              mov eax, 0	      1687	am.c	FUNCTION_47	IF_2	CALL_5
0x4000283	      0xe800000000	                          call 0x4000288	      1687	am.c	FUNCTION_47	IF_2	CALL_5
0x4000288	              0x5b	                                 pop rbx	      1689	am.c	FUNCTION_47
0x4000289	              0xc3	                                     ret	      1689	am.c	FUNCTION_47
do_commit	IF,7:WHILE,0:CALL,27:DO,0:ELSE,1:FOR,0:SWITCH,0:functions,0	174
0x40011f3	            0x4155	                                push r13	      1619	am.c	FUNCTION_46
0x40011f5	            0x4154	                                push r12	      1619	am.c	FUNCTION_46
0x40011f7	              0x55	                                push rbp	      1619	am.c	FUNCTION_46
0x40011f8	              0x53	                                push rbx	      1619	am.c	FUNCTION_46
0x40011f9	    0x4881ec980000	                           sub rsp, 0x98	      1619	am.c	FUNCTION_46
0x4001200	          0x4889fb	                            mov rbx, rdi	      1619	am.c	FUNCTION_46
0x4001203	    0x64488b042528	                mov rax, qword fs:[0x28]	      1619	am.c	FUNCTION_46
0x400120c	    0x488984248800	             mov qword [rsp + 0x88], rax	      1619	am.c	FUNCTION_46
0x4001214	            0x31c0	                            xor eax, eax	      1619	am.c	FUNCTION_46
0x4001216	    0x48c744240800	                  mov qword [rsp + 8], 0	      1622	am.c	FUNCTION_46
0x400121f	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1624	am.c	FUNCTION_46
0x4001228	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1624	am.c	FUNCTION_46
0x4001231	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1624	am.c	FUNCTION_46
0x400123a	      0xba00000000	                              mov edx, 0	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x400123f	      0xbe00000000	                              mov esi, 0	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x4001244	      0xbf00000000	                              mov edi, 0	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x4001249	      0xe800000000	                          call 0x400124e	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x400124e	            0x85c0	                           test eax, eax	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x4001250	            0x740a	                            je 0x400125c	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x4001252	      0xbf01000000	                              mov edi, 1	      1627	am.c	FUNCTION_46	CALL_2
0x4001257	      0xe800000000	                          call 0x400125c	      1627	am.c	FUNCTION_46	CALL_2
0x400125c	      0xba00000000	                              mov edx, 0	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4001261	      0xbe00000000	                              mov esi, 0	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4001266	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x400126b	      0xe800000000	                          call 0x4001270	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4001270	            0x85c0	                           test eax, eax	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4001272	            0x7421	                            je 0x4001295	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4001274	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x4001279	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x400127e	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x4001283	      0xe800000000	                          call 0x4001288	        54	gettext.h	FUNCTION_87
0x4001288	          0x4889c7	                            mov rdi, rax	      1630	am.c	FUNCTION_46	CALL_5
0x400128b	      0xb800000000	                              mov eax, 0	      1630	am.c	FUNCTION_46	CALL_5
0x4001290	      0xe800000000	                          call 0x4001295	      1630	am.c	FUNCTION_46	CALL_5
0x4001295	      0x488d742450	                   lea rsi, [rsp + 0x50]	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x400129a	      0xbf00000000	                              mov edi, 0	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x400129f	      0xe800000000	                          call 0x40012a4	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x40012a4	            0x85c0	                           test eax, eax	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x40012a6	            0x751e	                           jne 0x40012c6	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x40012a8	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x40012ad	      0xe800000000	                          call 0x40012b2	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x40012b2	      0x488d742408	                      lea rsi, [rsp + 8]	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x40012b7	          0x4889c7	                            mov rdi, rax	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x40012ba	      0xe800000000	                          call 0x40012bf	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x40012bf	      0x4c8d642450	                   lea r12, [rsp + 0x50]	      1633	am.c	FUNCTION_46	IF_3
0x40012c4	            0xeb31	                           jmp 0x40012f7	      1633	am.c	FUNCTION_46	IF_3
0x40012c6	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x40012cb	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x40012d0	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x40012d5	      0xe800000000	                          call 0x40012da	        54	gettext.h	FUNCTION_87
0x40012da	          0x4889c2	                            mov rdx, rax	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x40012dd	    0x488b35000000	            mov rsi, qword [0x040012e4] 	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x40012e4	          0x4889df	                            mov rdi, rbx	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x40012e7	      0xb800000000	                              mov eax, 0	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x40012ec	      0xe868faffff	                            call sym.say	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x40012f1	    0x41bc00000000	                             mov r12d, 0	      1636	am.c	FUNCTION_46	ELSE_1
0x40012f7	      0xba00000000	                              mov edx, 0	      1640	am.c	FUNCTION_46	CALL_11
0x40012fc	    0x83bb8c000000	               cmp dword [rbx + 0x8c], 0	      1640	am.c	FUNCTION_46	CALL_11
0x4001303	            0x7504	                           jne 0x4001309	      1640	am.c	FUNCTION_46	CALL_11
0x4001305	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      1640	am.c	FUNCTION_46	CALL_11
0x4001309	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1640	am.c	FUNCTION_46	CALL_11
0x400130d	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1640	am.c	FUNCTION_46	CALL_11
0x4001311	      0xb901000000	                              mov ecx, 1	      1640	am.c	FUNCTION_46	CALL_11
0x4001316	      0xe800000000	                          call 0x400131b	      1640	am.c	FUNCTION_46	CALL_11
0x400131b	          0x4889c5	                            mov rbp, rax	      1640	am.c	FUNCTION_46	CALL_11
0x400131e	    0x83bb88000000	               cmp dword [rbx + 0x88], 0	      1644	am.c	FUNCTION_46	IF_4
0x4001325	            0x7421	                            je 0x4001348	      1644	am.c	FUNCTION_46	IF_4
0x4001327	      0xbe00000000	                              mov esi, 0	      1645	am.c	FUNCTION_46	IF_4
0x400132c	    0x83bb8c000000	               cmp dword [rbx + 0x8c], 0	      1645	am.c	FUNCTION_46	IF_4
0x4001333	            0x7504	                           jne 0x4001339	      1645	am.c	FUNCTION_46	IF_4
0x4001335	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      1645	am.c	FUNCTION_46	IF_4
0x4001339	      0xba01000000	                              mov edx, 1	      1645	am.c	FUNCTION_46	IF_4
0x400133e	      0xbf00000000	                              mov edi, 0	      1645	am.c	FUNCTION_46	IF_4
0x4001343	      0xe800000000	                          call 0x4001348	      1645	am.c	FUNCTION_46	IF_4
0x4001348	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x400134c	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4001350	        0x4883ec08	                              sub rsp, 8	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4001354	    0xffb398000000	                 push qword [rbx + 0x98]	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x400135a	          0x4989e9	                             mov r9, rbp	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x400135d	    0x4c8d84248000	                    lea r8, [rsp + 0x80]	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4001365	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x400136a	      0x488d542440	                   lea rdx, [rsp + 0x40]	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x400136f	      0xe800000000	                          call 0x4001374	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4001374	        0x4883c410	                           add rsp, 0x10	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4001378	            0x85c0	                           test eax, eax	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x400137a	            0x7421	                            je 0x400139d	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x400137c	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x4001381	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x4001386	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x400138b	      0xe800000000	                          call 0x4001390	        54	gettext.h	FUNCTION_87
0x4001390	          0x4889c7	                            mov rdi, rax	      1650	am.c	FUNCTION_46	CALL_14
0x4001393	      0xb800000000	                              mov eax, 0	      1650	am.c	FUNCTION_46	CALL_14
0x4001398	      0xe800000000	                          call 0x400139d	      1650	am.c	FUNCTION_46	CALL_14
0x400139d	      0xbf00000000	                              mov edi, 0	      1652	am.c	FUNCTION_46	CALL_15
0x40013a2	      0xe800000000	                          call 0x40013a7	      1652	am.c	FUNCTION_46	CALL_15
0x40013a7	          0x4889c5	                            mov rbp, rax	      1652	am.c	FUNCTION_46	CALL_15
0x40013aa	          0x4885c0	                           test rax, rax	      1654	am.c	FUNCTION_46	IF_6
0x40013ad	      0xb800000000	                              mov eax, 0	      1654	am.c	FUNCTION_46	IF_6
0x40013b2	        0x480f44e8	                          cmove rbp, rax	      1654	am.c	FUNCTION_46	IF_6
0x40013b6	        0x4c8b6b28	            mov r13, qword [rbx + 0x28] 	      1656	am.c	FUNCTION_46	CALL_17
0x40013ba	          0x4c89ef	                            mov rdi, r13	      1656	am.c	FUNCTION_46	CALL_17
0x40013bd	      0xe8afecffff	                        call sym.linelen	      1656	am.c	FUNCTION_46	CALL_17
0x40013c2	          0x4d89e8	                             mov r8, r13	      1656	am.c	FUNCTION_46	CALL_17
0x40013c5	            0x89c1	                            mov ecx, eax	      1656	am.c	FUNCTION_46	CALL_17
0x40013c7	          0x4889ea	                            mov rdx, rbp	      1656	am.c	FUNCTION_46	CALL_17
0x40013ca	      0xbe00000000	                              mov esi, 0	      1656	am.c	FUNCTION_46	CALL_17
0x40013cf	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1656	am.c	FUNCTION_46	CALL_17
0x40013d4	      0xb800000000	                              mov eax, 0	      1656	am.c	FUNCTION_46	CALL_17
0x40013d9	      0xe800000000	                          call 0x40013de	      1656	am.c	FUNCTION_46	CALL_17
0x40013de	    0x41b901000000	                              mov r9d, 1	      1659	am.c	FUNCTION_46	CALL_18
0x40013e4	    0x41b800000000	                              mov r8d, 0	      1659	am.c	FUNCTION_46	CALL_18
0x40013ea	          0x4c89e1	                            mov rcx, r12	      1659	am.c	FUNCTION_46	CALL_18
0x40013ed	      0x488d542470	                   lea rdx, [rsp + 0x70]	      1659	am.c	FUNCTION_46	CALL_18
0x40013f2	      0xbe00000000	                              mov esi, 0	      1659	am.c	FUNCTION_46	CALL_18
0x40013f7	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1659	am.c	FUNCTION_46	CALL_18
0x40013fc	      0xe800000000	                          call 0x4001401	      1659	am.c	FUNCTION_46	CALL_18
0x4001401	    0x83bba0000000	               cmp dword [rbx + 0xa0], 0	      1662	am.c	FUNCTION_46	IF_7
0x4001408	     0xf84a8000000	                            je 0x40014b6	      1662	am.c	FUNCTION_46	IF_7
0x400140e	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001413	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4001416	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x400141b	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001420	      0xe800000000	                          call 0x4001425	       183	am.c	FUNCTION_6	CALL_1
0x4001425	      0xbe00000000	                              mov esi, 0	      1663	am.c	FUNCTION_46	IF_7	CALL_20
0x400142a	          0x4889c7	                            mov rdi, rax	      1663	am.c	FUNCTION_46	IF_7	CALL_20
0x400142d	      0xe800000000	                          call 0x4001432	      1663	am.c	FUNCTION_46	IF_7	CALL_20
0x4001432	          0x4889c5	                            mov rbp, rax	      1663	am.c	FUNCTION_46	IF_7	CALL_20
0x4001435	        0x4883c338	                           add rbx, 0x38	       990	cache.h	FUNCTION_154	CALL_1
0x4001439	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_151	CALL_1
0x400143e	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_151	CALL_1
0x4001443	          0x4889df	                            mov rdi, rbx	       975	cache.h	FUNCTION_151	CALL_1
0x4001446	      0xe800000000	                          call 0x400144b	       975	cache.h	FUNCTION_151	CALL_1
0x400144b	            0x85c0	                           test eax, eax	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x400144d	            0x7519	                           jne 0x4001468	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x400144f	      0xb900000000	                              mov ecx, 0	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x4001454	      0xba81060000	                          mov edx, 0x681	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x4001459	      0xbe00000000	                              mov esi, 0	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x400145e	      0xbf00000000	                              mov edi, 0	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x4001463	      0xe800000000	                          call 0x4001468	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x4001468	          0x4889df	                            mov rdi, rbx	      1666	am.c	FUNCTION_46	IF_7	CALL_23
0x400146b	      0xe800000000	                          call 0x4001470	      1666	am.c	FUNCTION_46	IF_7	CALL_23
0x4001470	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_119
0x4001473	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_119
0x4001478	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_119
0x400147d	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_119
0x4001480	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_119
0x4001485	      0xe800000000	                          call 0x400148a	        97	stdio2.h	CALL_119
0x400148a	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      1667	am.c	FUNCTION_46	IF_7	CALL_24
0x400148f	      0xe800000000	                          call 0x4001494	      1667	am.c	FUNCTION_46	IF_7	CALL_24
0x4001494	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_119
0x4001497	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_119
0x400149c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_119
0x40014a1	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_119
0x40014a4	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_119
0x40014a9	      0xe800000000	                          call 0x40014ae	        97	stdio2.h	CALL_119
0x40014ae	          0x4889ef	                            mov rdi, rbp	      1668	am.c	FUNCTION_46	IF_7	CALL_25
0x40014b1	      0xe800000000	                          call 0x40014b6	      1668	am.c	FUNCTION_46	IF_7	CALL_25
0x40014b6	      0xba00000000	                              mov edx, 0	      1671	am.c	FUNCTION_46	CALL_26
0x40014bb	      0xbe00000000	                              mov esi, 0	      1671	am.c	FUNCTION_46	CALL_26
0x40014c0	      0xbf00000000	                              mov edi, 0	      1671	am.c	FUNCTION_46	CALL_26
0x40014c5	      0xb800000000	                              mov eax, 0	      1671	am.c	FUNCTION_46	CALL_26
0x40014ca	      0xe800000000	                          call 0x40014cf	      1671	am.c	FUNCTION_46	CALL_26
0x40014cf	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1673	am.c	FUNCTION_46	CALL_27
0x40014d4	      0xe800000000	                          call 0x40014d9	      1673	am.c	FUNCTION_46	CALL_27
0x40014d9	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      1674	am.c	FUNCTION_46
0x40014e1	    0x644833042528	                xor rax, qword fs:[0x28]	      1674	am.c	FUNCTION_46
0x40014ea	            0x7405	                            je 0x40014f1	      1674	am.c	FUNCTION_46
0x40014ec	      0xe800000000	                          call 0x40014f1	      1674	am.c	FUNCTION_46
0x40014f1	    0x4881c4980000	                           add rsp, 0x98	      1674	am.c	FUNCTION_46
0x40014f8	              0x5b	                                 pop rbx	      1674	am.c	FUNCTION_46
0x40014f9	              0x5d	                                 pop rbp	      1674	am.c	FUNCTION_46
0x40014fa	            0x415c	                                 pop r12	      1674	am.c	FUNCTION_46
0x40014fc	            0x415d	                                 pop r13	      1674	am.c	FUNCTION_46
0x40014fe	              0xc3	                                     ret	      1674	am.c	FUNCTION_46
write_state_text	IF,0:WHILE,0:CALL,2:DO,0:ELSE,0:FOR,0:SWITCH,0:functions,0	14
0x40005ee	              0x53	                                push rbx	       191	am.c	FUNCTION_7
0x40005ef	          0x4889d3	                            mov rbx, rdx	       191	am.c	FUNCTION_7
0x40005f2	          0x4889f2	                            mov rdx, rsi	       183	am.c	FUNCTION_6	CALL_1
0x40005f5	          0x488b37	                    mov rsi, qword [rdi]	       183	am.c	FUNCTION_6	CALL_1
0x40005f8	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x40005fd	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x4000602	      0xe800000000	                          call 0x4000607	       183	am.c	FUNCTION_6	CALL_1
0x4000607	          0x4889da	                            mov rdx, rbx	       192	am.c	FUNCTION_7	CALL_2
0x400060a	      0xbe00000000	                              mov esi, 0	       192	am.c	FUNCTION_7	CALL_2
0x400060f	          0x4889c7	                            mov rdi, rax	       192	am.c	FUNCTION_7	CALL_2
0x4000612	      0xb800000000	                              mov eax, 0	       192	am.c	FUNCTION_7	CALL_2
0x4000617	      0xe800000000	                          call 0x400061c	       192	am.c	FUNCTION_7	CALL_2
0x400061c	              0x5b	                                 pop rbx	       193	am.c	FUNCTION_7
0x400061d	              0xc3	                                     ret	       193	am.c	FUNCTION_7
split_mail_mbox	IF,3:WHILE,0:CALL,11:DO,0:ELSE,0:FOR,0:SWITCH,0:functions,0	89
0x400046a	            0x4155	                                push r13	       708	am.c	FUNCTION_25
0x400046c	            0x4154	                                push r12	       708	am.c	FUNCTION_25
0x400046e	              0x55	                                push rbp	       708	am.c	FUNCTION_25
0x400046f	              0x53	                                push rbx	       708	am.c	FUNCTION_25
0x4000470	    0x4881ec980000	                           sub rsp, 0x98	       708	am.c	FUNCTION_25
0x4000477	          0x4889fb	                            mov rbx, rdi	       708	am.c	FUNCTION_25
0x400047a	          0x4989f4	                            mov r12, rsi	       708	am.c	FUNCTION_25
0x400047d	          0x4189d5	                           mov r13d, edx	       708	am.c	FUNCTION_25
0x4000480	            0x89cd	                            mov ebp, ecx	       708	am.c	FUNCTION_25
0x4000482	    0x64488b042528	                mov rax, qword fs:[0x28]	       708	am.c	FUNCTION_25
0x400048b	    0x488984248800	             mov qword [rsp + 0x88], rax	       708	am.c	FUNCTION_25
0x4000493	            0x31c0	                            xor eax, eax	       708	am.c	FUNCTION_25
0x4000495	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       709	am.c	FUNCTION_25
0x400049a	      0xb90c000000	                            mov ecx, 0xc	       709	am.c	FUNCTION_25
0x400049f	          0xf348ab	              rep stosq qword [rdi], rax	       709	am.c	FUNCTION_25
0x40004a2	    0x48c744242800	               mov qword [rsp + 0x28], 0	       709	am.c	FUNCTION_25
0x40004ab	    0x48c744243800	               mov qword [rsp + 0x38], 0	       709	am.c	FUNCTION_25
0x40004b4	    0x48c704240000	                      mov qword [rsp], 0	       710	am.c	FUNCTION_25
0x40004bc	    0x48c744240800	                  mov qword [rsp + 8], 0	       710	am.c	FUNCTION_25
0x40004c5	    0x48c744241000	               mov qword [rsp + 0x10], 0	       710	am.c	FUNCTION_25
0x40004ce	      0xc644246808	                mov byte [rsp + 0x68], 8	       713	am.c	FUNCTION_25
0x40004d3	      0xbe00000000	                              mov esi, 0	       714	am.c	FUNCTION_25	CALL_1
0x40004d8	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	       714	am.c	FUNCTION_25	CALL_1
0x40004dd	      0xe800000000	                          call 0x40004e2	       714	am.c	FUNCTION_25	CALL_1
0x40004e2	          0x8b534c	            mov edx, dword [rbx + 0x4c] 	       715	am.c	FUNCTION_25	CALL_2
0x40004e5	      0xbe00000000	                              mov esi, 0	       715	am.c	FUNCTION_25	CALL_2
0x40004ea	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	       715	am.c	FUNCTION_25	CALL_2
0x40004ef	      0xb800000000	                              mov eax, 0	       715	am.c	FUNCTION_25	CALL_2
0x40004f4	      0xe800000000	                          call 0x40004f9	       715	am.c	FUNCTION_25	CALL_2
0x40004f9	          0x488b13	                    mov rdx, qword [rbx]	       716	am.c	FUNCTION_25	CALL_3
0x40004fc	      0xbe00000000	                              mov esi, 0	       716	am.c	FUNCTION_25	CALL_3
0x4000501	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	       716	am.c	FUNCTION_25	CALL_3
0x4000506	      0xb800000000	                              mov eax, 0	       716	am.c	FUNCTION_25	CALL_3
0x400050b	      0xe800000000	                          call 0x4000510	       716	am.c	FUNCTION_25	CALL_3
0x4000510	      0xbe00000000	                              mov esi, 0	       717	am.c	FUNCTION_25	CALL_4
0x4000515	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	       717	am.c	FUNCTION_25	CALL_4
0x400051a	      0xe800000000	                          call 0x400051f	       717	am.c	FUNCTION_25	CALL_4
0x400051f	          0x4585ed	                         test r13d, r13d	       718	am.c	FUNCTION_25	IF_1
0x4000522	            0x740f	                            je 0x4000533	       718	am.c	FUNCTION_25	IF_1
0x4000524	      0xbe00000000	                              mov esi, 0	       719	am.c	FUNCTION_25	CALL_5
0x4000529	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	       719	am.c	FUNCTION_25	CALL_5
0x400052e	      0xe800000000	                          call 0x4000533	       719	am.c	FUNCTION_25	CALL_5
0x4000533	            0x85ed	                           test ebp, ebp	       720	am.c	FUNCTION_25	IF_2
0x4000535	            0x740f	                            je 0x4000546	       720	am.c	FUNCTION_25	IF_2
0x4000537	      0xbe00000000	                              mov esi, 0	       721	am.c	FUNCTION_25	CALL_6
0x400053c	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	       721	am.c	FUNCTION_25	CALL_6
0x4000541	      0xe800000000	                          call 0x4000546	       721	am.c	FUNCTION_25	CALL_6
0x4000546	      0x488d6c2428	                   lea rbp, [rsp + 0x28]	       722	am.c	FUNCTION_25	CALL_7
0x400054b	      0xbe00000000	                              mov esi, 0	       722	am.c	FUNCTION_25	CALL_7
0x4000550	          0x4889ef	                            mov rdi, rbp	       722	am.c	FUNCTION_25	CALL_7
0x4000553	      0xe800000000	                          call 0x4000558	       722	am.c	FUNCTION_25	CALL_7
0x4000558	          0x4c89e6	                            mov rsi, r12	       723	am.c	FUNCTION_25	CALL_8
0x400055b	          0x4889ef	                            mov rdi, rbp	       723	am.c	FUNCTION_25	CALL_8
0x400055e	      0xe800000000	                          call 0x4000563	       723	am.c	FUNCTION_25	CALL_8
0x4000563	        0x4883ec08	                              sub rsp, 8	       112	run-command.h	FUNCTION_171	CALL_1
0x4000567	            0x6a00	                                  push 0	       112	run-command.h	FUNCTION_171	CALL_1
0x4000569	    0x41b900000000	                              mov r9d, 0	       112	run-command.h	FUNCTION_171	CALL_1
0x400056f	    0x41b808000000	                              mov r8d, 8	       112	run-command.h	FUNCTION_171	CALL_1
0x4000575	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	       112	run-command.h	FUNCTION_171	CALL_1
0x400057a	      0xba00000000	                              mov edx, 0	       112	run-command.h	FUNCTION_171	CALL_1
0x400057f	      0xbe00000000	                              mov esi, 0	       112	run-command.h	FUNCTION_171	CALL_1
0x4000584	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       112	run-command.h	FUNCTION_171	CALL_1
0x4000589	      0xe800000000	                          call 0x400058e	       112	run-command.h	FUNCTION_171	CALL_1
0x400058e	            0x89c5	                            mov ebp, eax	       112	run-command.h	FUNCTION_171	CALL_1
0x4000590	        0x4883c410	                           add rsp, 0x10	       726	am.c	FUNCTION_25	IF_3
0x4000594	            0x85c0	                           test eax, eax	       726	am.c	FUNCTION_25	IF_3
0x4000596	            0x751e	                           jne 0x40005b6	       726	am.c	FUNCTION_25	IF_3
0x4000598	    0xc74308010000	                  mov dword [rbx + 8], 1	       729	am.c	FUNCTION_25
0x400059f	      0xba0a000000	                            mov edx, 0xa	       730	am.c	FUNCTION_25	CALL_10
0x40005a4	      0xbe00000000	                              mov esi, 0	       730	am.c	FUNCTION_25	CALL_10
0x40005a9	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       730	am.c	FUNCTION_25	CALL_10
0x40005ae	      0xe800000000	                          call 0x40005b3	       730	am.c	FUNCTION_25	CALL_10
0x40005b3	          0x89430c	              mov dword [rbx + 0xc], eax	       730	am.c	FUNCTION_25	CALL_10
0x40005b6	          0x4889e7	                            mov rdi, rsp	       733	am.c	FUNCTION_25	CALL_11
0x40005b9	      0xe800000000	                          call 0x40005be	       733	am.c	FUNCTION_25	CALL_11
0x40005be	            0x85ed	                           test ebp, ebp	       734	am.c	FUNCTION_25
0x40005c0	           0xf95c0	                                setne al	       734	am.c	FUNCTION_25
0x40005c3	           0xfb6c0	                           movzx eax, al	       734	am.c	FUNCTION_25
0x40005c6	            0xf7d8	                                 neg eax	       734	am.c	FUNCTION_25
0x40005c8	    0x488b9c248800	            mov rbx, qword [rsp + 0x88] 	       735	am.c	FUNCTION_25
0x40005d0	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       735	am.c	FUNCTION_25
0x40005d9	            0x7405	                            je 0x40005e0	       735	am.c	FUNCTION_25
0x40005db	      0xe800000000	                          call 0x40005e0	       735	am.c	FUNCTION_25
0x40005e0	    0x4881c4980000	                           add rsp, 0x98	       735	am.c	FUNCTION_25
0x40005e7	              0x5b	                                 pop rbx	       735	am.c	FUNCTION_25
0x40005e8	              0x5d	                                 pop rbp	       735	am.c	FUNCTION_25
0x40005e9	            0x415c	                                 pop r12	       735	am.c	FUNCTION_25
0x40005eb	            0x415d	                                 pop r13	       735	am.c	FUNCTION_25
0x40005ed	              0xc3	                                     ret	       735	am.c	FUNCTION_25
am_run	IF,15:WHILE,1:CALL,51:DO,0:ELSE,2:FOR,0:SWITCH,0:functions,0	1014
0x40026ea	            0x4157	                                push r15	      1758	am.c	FUNCTION_49
0x40026ec	            0x4156	                                push r14	      1758	am.c	FUNCTION_49
0x40026ee	            0x4155	                                push r13	      1758	am.c	FUNCTION_49
0x40026f0	            0x4154	                                push r12	      1758	am.c	FUNCTION_49
0x40026f2	              0x55	                                push rbp	      1758	am.c	FUNCTION_49
0x40026f3	              0x53	                                push rbx	      1758	am.c	FUNCTION_49
0x40026f4	    0x4881ec680200	                          sub rsp, 0x268	      1758	am.c	FUNCTION_49
0x40026fb	          0x4889fd	                            mov rbp, rdi	      1758	am.c	FUNCTION_49
0x40026fe	          0x4189f4	                           mov r12d, esi	      1758	am.c	FUNCTION_49
0x4002701	    0x64488b042528	                mov rax, qword fs:[0x28]	      1758	am.c	FUNCTION_49
0x400270a	    0x488984245802	            mov qword [rsp + 0x258], rax	      1758	am.c	FUNCTION_49
0x4002712	            0x31c0	                            xor eax, eax	      1758	am.c	FUNCTION_49
0x4002714	    0x48c784242001	              mov qword [rsp + 0x120], 0	      1759	am.c	FUNCTION_49
0x4002720	    0x48c784242801	              mov qword [rsp + 0x128], 0	      1759	am.c	FUNCTION_49
0x400272c	    0x48c784243001	              mov qword [rsp + 0x130], 0	      1759	am.c	FUNCTION_49
0x4002738	    0x48c704240000	                      mov qword [rsp], 0	      1760	am.c	FUNCTION_49
0x4002740	    0x48c744240800	                  mov qword [rsp + 8], 0	      1760	am.c	FUNCTION_49
0x4002749	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1760	am.c	FUNCTION_49
0x4002752	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002757	          0x488b37	                    mov rsi, qword [rdi]	       183	am.c	FUNCTION_6	CALL_1
0x400275a	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x400275f	      0xe800000000	                          call 0x4002764	       183	am.c	FUNCTION_6	CALL_1
0x4002764	          0x4889c7	                            mov rdi, rax	      1762	am.c	FUNCTION_49	CALL_2
0x4002767	      0xe800000000	                          call 0x400276c	      1762	am.c	FUNCTION_49	CALL_2
0x400276c	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	      1143	am.c	FUNCTION_34
0x4002778	      0xbe01000000	                              mov esi, 1	      1145	am.c	FUNCTION_34	CALL_1
0x400277d	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      1145	am.c	FUNCTION_34	CALL_1
0x4002785	      0xe800000000	                          call 0x400278a	      1145	am.c	FUNCTION_34	CALL_1
0x400278a	    0x41b800000000	                              mov r8d, 0	      1146	am.c	FUNCTION_34
0x4002790	      0xb900000000	                              mov ecx, 0	      1146	am.c	FUNCTION_34
0x4002795	      0xba00000000	                              mov edx, 0	      1146	am.c	FUNCTION_34
0x400279a	      0xbe04000000	                              mov esi, 4	      1146	am.c	FUNCTION_34
0x400279f	      0xbf00000000	                              mov edi, 0	      1146	am.c	FUNCTION_34
0x40027a4	      0xe800000000	                          call 0x40027a9	      1146	am.c	FUNCTION_34
0x40027a9	      0xba01000000	                              mov edx, 1	      1147	am.c	FUNCTION_34	IF_1	CALL_2
0x40027ae	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      1147	am.c	FUNCTION_34	IF_1	CALL_2
0x40027b6	      0xbf00000000	                              mov edi, 0	      1147	am.c	FUNCTION_34	IF_1	CALL_2
0x40027bb	      0xe800000000	                          call 0x40027c0	      1147	am.c	FUNCTION_34	IF_1	CALL_2
0x40027c0	            0x85c0	                           test eax, eax	      1147	am.c	FUNCTION_34	IF_1	CALL_2
0x40027c2	            0x7421	                            je 0x40027e5	      1147	am.c	FUNCTION_34	IF_1	CALL_2
0x40027c4	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x40027c9	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x40027ce	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x40027d3	      0xe800000000	                          call 0x40027d8	        54	gettext.h	FUNCTION_87
0x40027d8	          0x4889c7	                            mov rdi, rax	      1148	am.c	FUNCTION_34	CALL_4
0x40027db	      0xb800000000	                              mov eax, 0	      1148	am.c	FUNCTION_34	CALL_4
0x40027e0	      0xe800000000	                          call 0x40027e5	      1148	am.c	FUNCTION_34	CALL_4
0x40027e5	          0x4889e7	                            mov rdi, rsp	      1766	am.c	FUNCTION_49	IF_1	CALL_4
0x40027e8	      0xe800000000	                          call 0x40027ed	      1766	am.c	FUNCTION_49	IF_1	CALL_4
0x40027ed	            0x85c0	                           test eax, eax	      1766	am.c	FUNCTION_49	IF_1	CALL_4
0x40027ef	            0x743b	                            je 0x400282c	      1766	am.c	FUNCTION_49	IF_1	CALL_4
0x40027f1	      0xba01000000	                              mov edx, 1	      1767	am.c	FUNCTION_49	IF_1	CALL_5
0x40027f6	      0xbe00000000	                              mov esi, 0	      1767	am.c	FUNCTION_49	IF_1	CALL_5
0x40027fb	          0x4889ef	                            mov rdi, rbp	      1767	am.c	FUNCTION_49	IF_1	CALL_5
0x40027fe	      0xe81bdeffff	               call sym.write_state_bool	      1767	am.c	FUNCTION_49	IF_1	CALL_5
0x4002803	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      1768	am.c	FUNCTION_49	IF_1	CALL_7
0x4002808	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x400280d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x4002812	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x4002817	      0xe800000000	                          call 0x400281c	        54	gettext.h	FUNCTION_87
0x400281c	          0x4889de	                            mov rsi, rbx	      1768	am.c	FUNCTION_49	IF_1	CALL_7
0x400281f	          0x4889c7	                            mov rdi, rax	      1768	am.c	FUNCTION_49	IF_1	CALL_7
0x4002822	      0xb800000000	                              mov eax, 0	      1768	am.c	FUNCTION_49	IF_1	CALL_7
0x4002827	      0xe800000000	                          call 0x400282c	      1768	am.c	FUNCTION_49	IF_1	CALL_7
0x400282c	          0x4889e7	                            mov rdi, rsp	      1771	am.c	FUNCTION_49	CALL_8
0x400282f	      0xe800000000	                          call 0x4002834	      1771	am.c	FUNCTION_49	CALL_8
0x4002834	    0x4c8db4243002	                  lea r14, [rsp + 0x230]	      1276	am.c	FUNCTION_37	CALL_34
0x400283c	      0xe9e50c0000	                           jmp 0x4003526	      1773	am.c	FUNCTION_49	WHILE_1
0x4002841	          0x4889ef	                            mov rdi, rbp	      1774	am.c	FUNCTION_49	WHILE_1	CALL_10
0x4002844	      0xe80df6ffff	                         call sym.msgnum	      1774	am.c	FUNCTION_49	WHILE_1	CALL_10
0x4002849	          0x4889c2	                            mov rdx, rax	       183	am.c	FUNCTION_6	CALL_1
0x400284c	        0x488b7500	                    mov rsi, qword [rbp]	       183	am.c	FUNCTION_6	CALL_1
0x4002850	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002855	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x400285a	      0xe800000000	                          call 0x400285f	       183	am.c	FUNCTION_6	CALL_1
0x400285f	          0x4889c3	                            mov rbx, rax	       183	am.c	FUNCTION_6	CALL_1
0x4002862	      0xe800000000	                          call 0x4002867	      1777	am.c	FUNCTION_49	WHILE_1	CALL_11
0x4002867	          0x4889df	                            mov rdi, rbx	      1779	am.c	FUNCTION_49	WHILE_1	IF_2	CALL_12
0x400286a	      0xe800000000	                          call 0x400286f	      1779	am.c	FUNCTION_49	WHILE_1	IF_2	CALL_12
0x400286f	            0x85c0	                           test eax, eax	      1779	am.c	FUNCTION_49	WHILE_1	IF_2	CALL_12
0x4002871	     0xf848c0c0000	                            je 0x4003503	      1779	am.c	FUNCTION_49	WHILE_1	IF_2	CALL_12
0x4002877	          0x4585e4	                         test r12d, r12d	      1782	am.c	FUNCTION_49	WHILE_1	IF_3
0x400287a	            0x740d	                            je 0x4002889	      1782	am.c	FUNCTION_49	WHILE_1	IF_3
0x400287c	          0x4889ef	                            mov rdi, rbp	      1783	am.c	FUNCTION_49	WHILE_1	IF_3	CALL_13
0x400287f	      0xe86bd9ffff	          call sym.validate_resume_state	      1783	am.c	FUNCTION_49	WHILE_1	IF_3	CALL_13
0x4002884	      0xe9360a0000	                           jmp 0x40032bf	      1783	am.c	FUNCTION_49	WHILE_1	IF_3	CALL_13
0x4002889	    0x83bda0000000	               cmp dword [rbp + 0xa0], 0	      1787	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_4
0x4002890	     0xf841e030000	                            je 0x4002bb4	      1787	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_4
0x4002896	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	      1307	am.c	FUNCTION_38
0x40028a2	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	      1307	am.c	FUNCTION_38
0x40028ae	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	      1307	am.c	FUNCTION_38
0x40028ba	      0xbe00000000	                              mov esi, 0	      1308	am.c	FUNCTION_38	CALL_1
0x40028bf	          0x4889df	                            mov rdi, rbx	      1308	am.c	FUNCTION_38	CALL_1
0x40028c2	      0xe800000000	                          call 0x40028c7	      1308	am.c	FUNCTION_38	CALL_1
0x40028c7	          0x4989c5	                            mov r13, rax	      1308	am.c	FUNCTION_38	CALL_1
0x40028ca	          0x4889c6	                            mov rsi, rax	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x40028cd	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x40028d5	      0xe800000000	                          call 0x40028da	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x40028da	            0x85c0	                           test eax, eax	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x40028dc	     0xf85980f0000	                           jne 0x400387a	      1312	am.c	FUNCTION_38	IF_1	CALL_2
0x40028e2	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	      1313	am.c	FUNCTION_38	IF_1	CALL_3
0x40028ea	      0xb800000000	                              mov eax, 0	      1313	am.c	FUNCTION_38	IF_1	CALL_3
0x40028ef	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_95	DO_1	IF_1
0x40028f2	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_95	DO_1	IF_1
0x40028f4	     0xf844d0f0000	                            je 0x4003847	       484	git-compat-util.h	FUNCTION_95	DO_1	IF_1
0x40028fa	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_95	DO_1
0x40028fe	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4002902	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4002905	            0x74e8	                            je 0x40028ef	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4002907	      0xe980100000	                           jmp 0x400398c	       488	git-compat-util.h	FUNCTION_95	DO_1
0x400290c	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x4002911	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x4002916	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x400291b	      0xe800000000	                          call 0x4002920	        54	gettext.h	FUNCTION_87
0x4002920	          0x4889de	                            mov rsi, rbx	      1436	am.c	FUNCTION_42	CALL_3
0x4002923	          0x4889c7	                            mov rdi, rax	      1436	am.c	FUNCTION_42	CALL_3
0x4002926	      0xb800000000	                              mov eax, 0	      1436	am.c	FUNCTION_42	CALL_3
0x400292b	      0xe800000000	                          call 0x4002930	      1436	am.c	FUNCTION_42	CALL_3
0x4002930	          0x4889de	                            mov rsi, rbx	      1438	am.c	FUNCTION_42	CALL_4
0x4002933	    0x488dbc244001	                  lea rdi, [rsp + 0x140]	      1438	am.c	FUNCTION_42	CALL_4
0x400293b	      0xe800000000	                          call 0x4002940	      1438	am.c	FUNCTION_42	CALL_4
0x4002940	          0x4889c3	                            mov rbx, rax	      1438	am.c	FUNCTION_42	CALL_4
0x4002943	      0xe800000000	                          call 0x4002948	      1332	am.c	FUNCTION_39	CALL_2
0x4002948	          0x4889c2	                            mov rdx, rax	      1332	am.c	FUNCTION_39	CALL_2
0x400294b	      0xbe00000000	                              mov esi, 0	      1332	am.c	FUNCTION_39	CALL_2
0x4002950	          0x4889df	                            mov rdi, rbx	      1332	am.c	FUNCTION_39	CALL_2
0x4002953	      0xe800000000	                          call 0x4002958	      1332	am.c	FUNCTION_39	CALL_2
0x4002958	          0x4989c5	                            mov r13, rax	      1332	am.c	FUNCTION_39	CALL_2
0x400295b	    0x488d94248000	                   lea rdx, [rsp + 0x80]	      1334	am.c	FUNCTION_39	CALL_3
0x4002963	      0xbe00000000	                              mov esi, 0	      1334	am.c	FUNCTION_39	CALL_3
0x4002968	          0x4889c7	                            mov rdi, rax	      1334	am.c	FUNCTION_39	CALL_3
0x400296b	      0xe800000000	                          call 0x4002970	      1334	am.c	FUNCTION_39	CALL_3
0x4002970	          0x4989c7	                            mov r15, rax	      1334	am.c	FUNCTION_39	CALL_3
0x4002973	    0x8b9424800000	            mov edx, dword [rsp + 0x80] 	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x400297a	          0x4889c6	                            mov rsi, rax	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x400297d	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x4002985	      0xe800000000	                          call 0x400298a	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x400298a	            0x85c0	                           test eax, eax	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x400298c	            0x792e	                           jns 0x40029bc	      1336	am.c	FUNCTION_39	IF_1	CALL_4
0x400298e	    0x488b9c248000	            mov rbx, qword [rsp + 0x80] 	      1337	am.c	FUNCTION_39	CALL_6
0x4002996	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x400299b	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x40029a0	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x40029a5	      0xe800000000	                          call 0x40029aa	        54	gettext.h	FUNCTION_87
0x40029aa	          0x4c89fa	                            mov rdx, r15	      1337	am.c	FUNCTION_39	CALL_6
0x40029ad	            0x89de	                            mov esi, ebx	      1337	am.c	FUNCTION_39	CALL_6
0x40029af	          0x4889c7	                            mov rdi, rax	      1337	am.c	FUNCTION_39	CALL_6
0x40029b2	      0xb800000000	                              mov eax, 0	      1337	am.c	FUNCTION_39	CALL_6
0x40029b7	      0xe800000000	                          call 0x40029bc	      1337	am.c	FUNCTION_39	CALL_6
0x40029bc	      0x48837d1000	               cmp qword [rbp + 0x10], 0	      1339	am.c	FUNCTION_39	CALL_7
0x40029c1	            0x7419	                            je 0x40029dc	      1339	am.c	FUNCTION_39	CALL_7
0x40029c3	      0xb900000000	                              mov ecx, 0	      1339	am.c	FUNCTION_39	CALL_7
0x40029c8	      0xba3b050000	                          mov edx, 0x53b	      1339	am.c	FUNCTION_39	CALL_7
0x40029cd	      0xbe00000000	                              mov esi, 0	      1339	am.c	FUNCTION_39	CALL_7
0x40029d2	      0xbf00000000	                              mov edi, 0	      1339	am.c	FUNCTION_39	CALL_7
0x40029d7	      0xe800000000	                          call 0x40029dc	      1339	am.c	FUNCTION_39	CALL_7
0x40029dc	    0x488bbc24a000	            mov rdi, qword [rsp + 0xa0] 	      1340	am.c	FUNCTION_39	IF_2
0x40029e4	          0x4885ff	                           test rdi, rdi	      1340	am.c	FUNCTION_39	IF_2
0x40029e7	            0x7416	                            je 0x40029ff	      1340	am.c	FUNCTION_39	IF_2
0x40029e9	    0x488bb424a800	            mov rsi, qword [rsp + 0xa8] 	      1342	am.c	FUNCTION_39	CALL_8
0x40029f1	          0x4829fe	                            sub rsi, rdi	      1342	am.c	FUNCTION_39	CALL_8
0x40029f4	      0xe800000000	                          call 0x40029f9	      1342	am.c	FUNCTION_39	CALL_8
0x40029f9	        0x48894510	            mov qword [rbp + 0x10], rax 	      1341	am.c	FUNCTION_39	IF_2
0x40029fd	            0xeb0e	                           jmp 0x4002a0d	      1341	am.c	FUNCTION_39	IF_2
0x40029ff	      0xbf00000000	                              mov edi, 0	      1344	am.c	FUNCTION_39	CALL_9
0x4002a04	      0xe800000000	                          call 0x4002a09	      1344	am.c	FUNCTION_39	CALL_9
0x4002a09	        0x48894510	            mov qword [rbp + 0x10], rax 	      1344	am.c	FUNCTION_39	CALL_9
0x4002a0d	      0x48837d1800	               cmp qword [rbp + 0x18], 0	      1346	am.c	FUNCTION_39	CALL_10
0x4002a12	            0x7419	                            je 0x4002a2d	      1346	am.c	FUNCTION_39	CALL_10
0x4002a14	      0xb900000000	                              mov ecx, 0	      1346	am.c	FUNCTION_39	CALL_10
0x4002a19	      0xba42050000	                          mov edx, 0x542	      1346	am.c	FUNCTION_39	CALL_10
0x4002a1e	      0xbe00000000	                              mov esi, 0	      1346	am.c	FUNCTION_39	CALL_10
0x4002a23	      0xbf00000000	                              mov edi, 0	      1346	am.c	FUNCTION_39	CALL_10
0x4002a28	      0xe800000000	                          call 0x4002a2d	      1346	am.c	FUNCTION_39	CALL_10
0x4002a2d	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	      1347	am.c	FUNCTION_39	IF_3
0x4002a35	          0x4885ff	                           test rdi, rdi	      1347	am.c	FUNCTION_39	IF_3
0x4002a38	            0x7416	                            je 0x4002a50	      1347	am.c	FUNCTION_39	IF_3
0x4002a3a	    0x488bb424b800	            mov rsi, qword [rsp + 0xb8] 	      1349	am.c	FUNCTION_39	CALL_11
0x4002a42	          0x4829fe	                            sub rsi, rdi	      1349	am.c	FUNCTION_39	CALL_11
0x4002a45	      0xe800000000	                          call 0x4002a4a	      1349	am.c	FUNCTION_39	CALL_11
0x4002a4a	        0x48894518	            mov qword [rbp + 0x18], rax 	      1348	am.c	FUNCTION_39	IF_3
0x4002a4e	            0xeb0e	                           jmp 0x4002a5e	      1348	am.c	FUNCTION_39	IF_3
0x4002a50	      0xbf00000000	                              mov edi, 0	      1351	am.c	FUNCTION_39	CALL_12
0x4002a55	      0xe800000000	                          call 0x4002a5a	      1351	am.c	FUNCTION_39	CALL_12
0x4002a5a	        0x48894518	            mov qword [rbp + 0x18], rax 	      1351	am.c	FUNCTION_39	CALL_12
0x4002a5e	      0x48837d2000	               cmp qword [rbp + 0x20], 0	      1353	am.c	FUNCTION_39	CALL_13
0x4002a63	            0x7419	                            je 0x4002a7e	      1353	am.c	FUNCTION_39	CALL_13
0x4002a65	      0xb900000000	                              mov ecx, 0	      1353	am.c	FUNCTION_39	CALL_13
0x4002a6a	      0xba49050000	                          mov edx, 0x549	      1353	am.c	FUNCTION_39	CALL_13
0x4002a6f	      0xbe00000000	                              mov esi, 0	      1353	am.c	FUNCTION_39	CALL_13
0x4002a74	      0xbf00000000	                              mov edi, 0	      1353	am.c	FUNCTION_39	CALL_13
0x4002a79	      0xe800000000	                          call 0x4002a7e	      1353	am.c	FUNCTION_39	CALL_13
0x4002a7e	      0xbf00000000	                              mov edi, 0	      1354	am.c	FUNCTION_39	CALL_15
0x4002a83	      0xe800000000	                          call 0x4002a88	      1354	am.c	FUNCTION_39	CALL_15
0x4002a88	          0x4889c6	                            mov rsi, rax	      1354	am.c	FUNCTION_39	CALL_15
0x4002a8b	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      1354	am.c	FUNCTION_39	CALL_15
0x4002a93	      0xe800000000	                          call 0x4002a98	      1354	am.c	FUNCTION_39	CALL_15
0x4002a98	          0x4889c7	                            mov rdi, rax	      1354	am.c	FUNCTION_39	CALL_15
0x4002a9b	      0xe800000000	                          call 0x4002aa0	      1354	am.c	FUNCTION_39	CALL_15
0x4002aa0	        0x48894520	            mov qword [rbp + 0x20], rax 	      1354	am.c	FUNCTION_39	CALL_15
0x4002aa4	      0x48837d2800	               cmp qword [rbp + 0x28], 0	      1356	am.c	FUNCTION_39	CALL_16
0x4002aa9	            0x7419	                            je 0x4002ac4	      1356	am.c	FUNCTION_39	CALL_16
0x4002aab	      0xb900000000	                              mov ecx, 0	      1356	am.c	FUNCTION_39	CALL_16
0x4002ab0	      0xba4c050000	                          mov edx, 0x54c	      1356	am.c	FUNCTION_39	CALL_16
0x4002ab5	      0xbe00000000	                              mov esi, 0	      1356	am.c	FUNCTION_39	CALL_16
0x4002aba	      0xbf00000000	                              mov edi, 0	      1356	am.c	FUNCTION_39	CALL_16
0x4002abf	      0xe800000000	                          call 0x4002ac4	      1356	am.c	FUNCTION_39	CALL_16
0x4002ac4	      0xbe00000000	                              mov esi, 0	      1357	am.c	FUNCTION_39	CALL_17
0x4002ac9	          0x4c89ef	                            mov rdi, r13	      1357	am.c	FUNCTION_39	CALL_17
0x4002acc	      0xe800000000	                          call 0x4002ad1	      1357	am.c	FUNCTION_39	CALL_17
0x4002ad1	          0x4885c0	                           test rax, rax	      1358	am.c	FUNCTION_39	IF_4
0x4002ad4	            0x7530	                           jne 0x4002b06	      1358	am.c	FUNCTION_39	IF_4
0x4002ad6	        0x488d7b04	                      lea rdi, [rbx + 4]	      1359	am.c	FUNCTION_39	CALL_20
0x4002ada	      0xe800000000	                          call 0x4002adf	      1359	am.c	FUNCTION_39	CALL_20
0x4002adf	          0x4889c3	                            mov rbx, rax	      1359	am.c	FUNCTION_39	CALL_20
0x4002ae2	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x4002ae7	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x4002aec	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x4002af1	      0xe800000000	                          call 0x4002af6	        54	gettext.h	FUNCTION_87
0x4002af6	          0x4889de	                            mov rsi, rbx	      1359	am.c	FUNCTION_39	CALL_20
0x4002af9	          0x4889c7	                            mov rdi, rax	      1359	am.c	FUNCTION_39	CALL_20
0x4002afc	      0xb800000000	                              mov eax, 0	      1359	am.c	FUNCTION_39	CALL_20
0x4002b01	      0xe800000000	                          call 0x4002b06	      1359	am.c	FUNCTION_39	CALL_20
0x4002b06	        0x488d7802	                      lea rdi, [rax + 2]	      1360	am.c	FUNCTION_39	CALL_21
0x4002b0a	      0xe800000000	                          call 0x4002b0f	      1360	am.c	FUNCTION_39	CALL_21
0x4002b0f	          0x4889c7	                            mov rdi, rax	      1360	am.c	FUNCTION_39	CALL_21
0x4002b12	        0x48894528	            mov qword [rbp + 0x28], rax 	      1360	am.c	FUNCTION_39	CALL_21
0x4002b16	      0xb800000000	                              mov eax, 0	      1361	am.c	FUNCTION_39	CALL_22
0x4002b1b	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1361	am.c	FUNCTION_39	CALL_22
0x4002b22	            0xf2ae	              repne scasb al, byte [rdi]	      1361	am.c	FUNCTION_39	CALL_22
0x4002b24	          0x4889c8	                            mov rax, rcx	      1361	am.c	FUNCTION_39	CALL_22
0x4002b27	          0x48f7d0	                                 not rax	      1361	am.c	FUNCTION_39	CALL_22
0x4002b2a	        0x4883e801	                              sub rax, 1	      1361	am.c	FUNCTION_39	CALL_22
0x4002b2e	        0x48894530	            mov qword [rbp + 0x30], rax 	      1361	am.c	FUNCTION_39	CALL_22
0x4002b32	          0x4c89ee	                            mov rsi, r13	      1362	am.c	FUNCTION_39	CALL_23
0x4002b35	          0x4889df	                            mov rdi, rbx	      1362	am.c	FUNCTION_39	CALL_23
0x4002b38	      0xe800000000	                          call 0x4002b3d	      1362	am.c	FUNCTION_39	CALL_23
0x4002b3d	          0x4889de	                            mov rsi, rbx	      1442	am.c	FUNCTION_42	CALL_6
0x4002b40	          0x4889ef	                            mov rdi, rbp	      1442	am.c	FUNCTION_42	CALL_6
0x4002b43	      0xe827ddffff	             call sym.write_commit_patch	      1442	am.c	FUNCTION_42	CALL_6
0x4002b48	    0x488b84244001	           mov rax, qword [rsp + 0x140] 	        53	string3.h	FUNCTION_63	CALL_3
0x4002b50	        0x48894538	            mov qword [rbp + 0x38], rax 	        53	string3.h	FUNCTION_63	CALL_3
0x4002b54	    0x488b84244801	           mov rax, qword [rsp + 0x148] 	        53	string3.h	FUNCTION_63	CALL_3
0x4002b5c	        0x48894540	            mov qword [rbp + 0x40], rax 	        53	string3.h	FUNCTION_63	CALL_3
0x4002b60	    0x8b8424500100	           mov eax, dword [rsp + 0x150] 	        53	string3.h	FUNCTION_63	CALL_3
0x4002b67	          0x894548	            mov dword [rbp + 0x48], eax 	        53	string3.h	FUNCTION_63	CALL_3
0x4002b6a	    0x488dbc244001	                  lea rdi, [rsp + 0x140]	      1445	am.c	FUNCTION_42	CALL_9
0x4002b72	      0xe800000000	                          call 0x4002b77	      1445	am.c	FUNCTION_42	CALL_9
0x4002b77	          0x4889c2	                            mov rdx, rax	      1445	am.c	FUNCTION_42	CALL_9
0x4002b7a	      0xbe00000000	                              mov esi, 0	      1445	am.c	FUNCTION_42	CALL_9
0x4002b7f	          0x4889ef	                            mov rdi, rbp	      1445	am.c	FUNCTION_42	CALL_9
0x4002b82	      0xe867daffff	               call sym.write_state_text	      1445	am.c	FUNCTION_42	CALL_9
0x4002b87	    0x41b901000000	                              mov r9d, 1	      1446	am.c	FUNCTION_42	CALL_10
0x4002b8d	    0x41b801000000	                              mov r8d, 1	      1446	am.c	FUNCTION_42	CALL_10
0x4002b93	      0xb900000000	                              mov ecx, 0	      1446	am.c	FUNCTION_42	CALL_10
0x4002b98	    0x488d94244001	                  lea rdx, [rsp + 0x140]	      1446	am.c	FUNCTION_42	CALL_10
0x4002ba0	      0xbe00000000	                              mov esi, 0	      1446	am.c	FUNCTION_42	CALL_10
0x4002ba5	      0xbf00000000	                              mov edi, 0	      1446	am.c	FUNCTION_42	CALL_10
0x4002baa	      0xe800000000	                          call 0x4002baf	      1446	am.c	FUNCTION_42	CALL_10
0x4002baf	      0xe9f4040000	                           jmp 0x40030a8	      1446	am.c	FUNCTION_42	CALL_10
0x4002bb4	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1194	am.c	FUNCTION_37
0x4002bbd	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1194	am.c	FUNCTION_37
0x4002bc6	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1194	am.c	FUNCTION_37
0x4002bcf	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1195	am.c	FUNCTION_37
0x4002bd8	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1195	am.c	FUNCTION_37
0x4002be1	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1195	am.c	FUNCTION_37
0x4002bea	    0x48c744246000	               mov qword [rsp + 0x60], 0	      1196	am.c	FUNCTION_37
0x4002bf3	    0x48c744246800	               mov qword [rsp + 0x68], 0	      1196	am.c	FUNCTION_37
0x4002bfc	    0x48c744247000	               mov qword [rsp + 0x70], 0	      1196	am.c	FUNCTION_37
0x4002c05	    0x48c784248000	               mov qword [rsp + 0x80], 0	      1197	am.c	FUNCTION_37
0x4002c11	    0x48c784248800	               mov qword [rsp + 0x88], 0	      1197	am.c	FUNCTION_37
0x4002c1d	    0x48c784249000	               mov qword [rsp + 0x90], 0	      1197	am.c	FUNCTION_37
0x4002c29	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	      1198	am.c	FUNCTION_37
0x4002c35	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	      1198	am.c	FUNCTION_37
0x4002c41	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	      1198	am.c	FUNCTION_37
0x4002c4d	    0x488dbc244001	                  lea rdi, [rsp + 0x140]	      1202	am.c	FUNCTION_37	CALL_1
0x4002c55	      0xe800000000	                          call 0x4002c5a	      1202	am.c	FUNCTION_37	CALL_1
0x4002c5a	        0x837d6000	               cmp dword [rbp + 0x60], 0	      1204	am.c	FUNCTION_37	IF_1
0x4002c5e	            0x740f	                            je 0x4002c6f	      1204	am.c	FUNCTION_37	IF_1
0x4002c60	      0xe800000000	                          call 0x4002c65	      1205	am.c	FUNCTION_37	CALL_2
0x4002c65	    0x48898424a001	            mov qword [rsp + 0x1a0], rax	      1205	am.c	FUNCTION_37	CALL_2
0x4002c6d	            0xeb0c	                           jmp 0x4002c7b	      1205	am.c	FUNCTION_37	CALL_2
0x4002c6f	    0x48c78424a001	              mov qword [rsp + 0x1a0], 0	      1207	am.c	FUNCTION_37	ELSE_1
0x4002c7b	          0x8b4564	            mov eax, dword [rbp + 0x64] 	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x4002c7e	          0x83f801	                              cmp eax, 1	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x4002c81	            0x740b	                            je 0x4002c8e	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x4002c83	          0x83f802	                              cmp eax, 2	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x4002c86	            0x7413	                            je 0x4002c9b	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x4002c88	            0x85c0	                           test eax, eax	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x4002c8a	            0x751c	                           jne 0x4002ca8	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x4002c8c	            0xeb29	                           jmp 0x4002cb7	      1209	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x4002c8e	    0xc78424880100	              mov dword [rsp + 0x188], 1	      1213	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x4002c99	            0xeb1c	                           jmp 0x4002cb7	      1213	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x4002c9b	    0xc784248c0100	              mov dword [rsp + 0x18c], 1	      1216	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x4002ca6	            0xeb0f	                           jmp 0x4002cb7	      1216	am.c	FUNCTION_37	ELSE_1	SWITCH_1
0x4002ca8	      0xbf00000000	                              mov edi, 0	      1219	am.c	FUNCTION_37	ELSE_1	SWITCH_1	CALL_3
0x4002cad	      0xb800000000	                              mov eax, 0	      1219	am.c	FUNCTION_37	ELSE_1	SWITCH_1	CALL_3
0x4002cb2	      0xe800000000	                          call 0x4002cb7	      1219	am.c	FUNCTION_37	ELSE_1	SWITCH_1	CALL_3
0x4002cb7	        0x837d6800	               cmp dword [rbp + 0x68], 0	      1222	am.c	FUNCTION_37	IF_2
0x4002cbb	            0x740b	                            je 0x4002cc8	      1222	am.c	FUNCTION_37	IF_2
0x4002cbd	    0xc78424900100	              mov dword [rsp + 0x190], 1	      1223	am.c	FUNCTION_37	IF_2
0x4002cc8	          0x8b456c	            mov eax, dword [rbp + 0x6c] 	      1225	am.c	FUNCTION_37	SWITCH_2
0x4002ccb	            0x85c0	                           test eax, eax	      1225	am.c	FUNCTION_37	SWITCH_2
0x4002ccd	            0x740c	                            je 0x4002cdb	      1225	am.c	FUNCTION_37	SWITCH_2
0x4002ccf	          0x83f801	                              cmp eax, 1	      1225	am.c	FUNCTION_37	SWITCH_2
0x4002cd2	            0x7414	                            je 0x4002ce8	      1225	am.c	FUNCTION_37	SWITCH_2
0x4002cd4	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1225	am.c	FUNCTION_37	SWITCH_2
0x4002cd7	            0x751c	                           jne 0x4002cf5	      1225	am.c	FUNCTION_37	SWITCH_2
0x4002cd9	            0xeb29	                           jmp 0x4002d04	      1225	am.c	FUNCTION_37	SWITCH_2
0x4002cdb	    0xc78424940100	              mov dword [rsp + 0x194], 0	      1229	am.c	FUNCTION_37	SWITCH_2
0x4002ce6	            0xeb1c	                           jmp 0x4002d04	      1229	am.c	FUNCTION_37	SWITCH_2
0x4002ce8	    0xc78424940100	              mov dword [rsp + 0x194], 1	      1232	am.c	FUNCTION_37	SWITCH_2
0x4002cf3	            0xeb0f	                           jmp 0x4002d04	      1232	am.c	FUNCTION_37	SWITCH_2
0x4002cf5	      0xbf00000000	                              mov edi, 0	      1235	am.c	FUNCTION_37	SWITCH_2	CALL_4
0x4002cfa	      0xb800000000	                              mov eax, 0	      1235	am.c	FUNCTION_37	SWITCH_2	CALL_4
0x4002cff	      0xe800000000	                          call 0x4002d04	      1235	am.c	FUNCTION_37	SWITCH_2	CALL_4
0x4002d04	      0xbe00000000	                              mov esi, 0	      1238	am.c	FUNCTION_37	CALL_5
0x4002d09	          0x4889df	                            mov rdi, rbx	      1238	am.c	FUNCTION_37	CALL_5
0x4002d0c	      0xe800000000	                          call 0x4002d11	      1238	am.c	FUNCTION_37	CALL_5
0x4002d11	    0x488984244001	            mov qword [rsp + 0x140], rax	      1238	am.c	FUNCTION_37	CALL_5
0x4002d19	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002d1e	        0x488b7500	                    mov rsi, qword [rbp]	       183	am.c	FUNCTION_6	CALL_1
0x4002d22	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002d27	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002d2c	      0xe800000000	                          call 0x4002d31	       183	am.c	FUNCTION_6	CALL_1
0x4002d31	      0xbe00000000	                              mov esi, 0	      1239	am.c	FUNCTION_37	CALL_7
0x4002d36	          0x4889c7	                            mov rdi, rax	      1239	am.c	FUNCTION_37	CALL_7
0x4002d39	      0xe800000000	                          call 0x4002d3e	      1239	am.c	FUNCTION_37	CALL_7
0x4002d3e	    0x488984244801	            mov qword [rsp + 0x148], rax	      1239	am.c	FUNCTION_37	CALL_7
0x4002d46	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002d4b	        0x488b7500	                    mov rsi, qword [rbp]	       183	am.c	FUNCTION_6	CALL_1
0x4002d4f	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002d54	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002d59	      0xe800000000	                          call 0x4002d5e	       183	am.c	FUNCTION_6	CALL_1
0x4002d5e	          0x4889c3	                            mov rbx, rax	       183	am.c	FUNCTION_6	CALL_1
0x4002d61	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002d66	        0x488b7500	                    mov rsi, qword [rbp]	       183	am.c	FUNCTION_6	CALL_1
0x4002d6a	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002d6f	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002d74	      0xe800000000	                          call 0x4002d79	       183	am.c	FUNCTION_6	CALL_1
0x4002d79	          0x4889da	                            mov rdx, rbx	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x4002d7c	          0x4889c6	                            mov rsi, rax	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x4002d7f	    0x488dbc244001	                  lea rdi, [rsp + 0x140]	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x4002d87	      0xe800000000	                          call 0x4002d8c	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x4002d8c	            0x85c0	                           test eax, eax	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x4002d8e	            0x740f	                            je 0x4002d9f	      1240	am.c	FUNCTION_37	IF_3	CALL_10
0x4002d90	      0xbf00000000	                              mov edi, 0	      1241	am.c	FUNCTION_37	CALL_11
0x4002d95	      0xb800000000	                              mov eax, 0	      1241	am.c	FUNCTION_37	CALL_11
0x4002d9a	      0xe800000000	                          call 0x4002d9f	      1241	am.c	FUNCTION_37	CALL_11
0x4002d9f	    0x488bbc244001	           mov rdi, qword [rsp + 0x140] 	      1243	am.c	FUNCTION_37	CALL_12
0x4002da7	      0xe800000000	                          call 0x4002dac	      1243	am.c	FUNCTION_37	CALL_12
0x4002dac	    0x488bbc244801	           mov rdi, qword [rsp + 0x148] 	      1244	am.c	FUNCTION_37	CALL_13
0x4002db4	      0xe800000000	                          call 0x4002db9	      1244	am.c	FUNCTION_37	CALL_13
0x4002db9	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002dbe	        0x488b7500	                    mov rsi, qword [rbp]	       183	am.c	FUNCTION_6	CALL_1
0x4002dc2	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002dc7	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002dcc	      0xe800000000	                          call 0x4002dd1	       183	am.c	FUNCTION_6	CALL_1
0x4002dd1	      0xbe00000000	                              mov esi, 0	      1247	am.c	FUNCTION_37	CALL_15
0x4002dd6	          0x4889c7	                            mov rdi, rax	      1247	am.c	FUNCTION_37	CALL_15
0x4002dd9	      0xe800000000	                          call 0x4002dde	      1247	am.c	FUNCTION_37	CALL_15
0x4002dde	          0x4989c5	                            mov r13, rax	      1247	am.c	FUNCTION_37	CALL_15
0x4002de1	      0xe9f3000000	                           jmp 0x4002ed9	      1247	am.c	FUNCTION_37	CALL_15
0x4002de6	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	      1251	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_17
0x4002deb	          0x4c89c3	                             mov rbx, r8	      1251	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_17
0x4002dee	      0xb800000000	                              mov eax, 0	      1251	am.c	FUNCTION_37	WHILE_1	IF_4	CALL_17
0x4002df3	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_95	DO_1	IF_1
0x4002df6	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_95	DO_1	IF_1
0x4002df8	     0xf84960a0000	                            je 0x4003894	       484	git-compat-util.h	FUNCTION_95	DO_1	IF_1
0x4002dfe	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4002e02	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4002e06	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4002e09	            0x74e8	                            je 0x4002df3	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4002e0b	          0x4c89c6	                             mov rsi, r8	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4002e0e	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4002e13	            0xeb6e	                           jmp 0x4002e83	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4002e15	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       141	strbuf.h	FUNCTION_134
0x4002e1a	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_134
0x4002e1d	            0x7409	                            je 0x4002e28	       141	strbuf.h	FUNCTION_134
0x4002e1f	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_136	IF_1	CALL_1
0x4002e23	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_136	IF_1	CALL_1
0x4002e26	            0x750f	                           jne 0x4002e37	       227	strbuf.h	FUNCTION_136	IF_1	CALL_1
0x4002e28	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_136	CALL_2
0x4002e2d	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       228	strbuf.h	FUNCTION_136	CALL_2
0x4002e32	      0xe800000000	                          call 0x4002e37	       228	strbuf.h	FUNCTION_136	CALL_2
0x4002e37	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       229	strbuf.h	FUNCTION_136
0x4002e3c	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_136
0x4002e40	      0x4889542448	             mov qword [rsp + 0x48], rdx	       229	strbuf.h	FUNCTION_136
0x4002e45	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	       229	strbuf.h	FUNCTION_136
0x4002e4a	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_136
0x4002e4e	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       230	strbuf.h	FUNCTION_136
0x4002e53	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	       230	strbuf.h	FUNCTION_136
0x4002e58	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_136
0x4002e5c	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_137	CALL_2
0x4002e61	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_137	CALL_2
0x4002e68	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_137	CALL_2
0x4002e6b	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_137	CALL_2
0x4002e6d	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_137	CALL_2
0x4002e70	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_137	CALL_2
0x4002e74	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_137	CALL_2
0x4002e77	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       279	strbuf.h	FUNCTION_137	CALL_2
0x4002e7c	      0xe800000000	                          call 0x4002e81	       279	strbuf.h	FUNCTION_137	CALL_2
0x4002e81	            0xeb56	                           jmp 0x4002ed9	       279	strbuf.h	FUNCTION_137	CALL_2
0x4002e83	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_95	DO_1	IF_1
0x4002e86	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_95	DO_1	IF_1
0x4002e88	     0xf84190a0000	                            je 0x40038a7	       484	git-compat-util.h	FUNCTION_95	DO_1	IF_1
0x4002e8e	        0x4883c601	                              add rsi, 1	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4002e92	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4002e96	          0x3a56ff	                  cmp dl, byte [rsi - 1]	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4002e99	            0x74e8	                            je 0x4002e83	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4002e9b	          0x4c89c6	                             mov rsi, r8	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4002e9e	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4002ea3	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_95	DO_1	IF_1
0x4002ea6	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_95	DO_1	IF_1
0x4002ea8	     0xf84200a0000	                            je 0x40038ce	       484	git-compat-util.h	FUNCTION_95	DO_1	IF_1
0x4002eae	        0x4883c601	                              add rsi, 1	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4002eb2	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4002eb6	          0x3a56ff	                  cmp dl, byte [rsi - 1]	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4002eb9	            0x74e8	                            je 0x4002ea3	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4002ebb	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4002ec0	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_95	DO_1	IF_1
0x4002ec3	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_95	DO_1	IF_1
0x4002ec5	     0xf842d0a0000	                            je 0x40038f8	       484	git-compat-util.h	FUNCTION_95	DO_1	IF_1
0x4002ecb	        0x4983c001	                               add r8, 1	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4002ecf	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4002ed3	        0x413a50ff	                   cmp dl, byte [r8 - 1]	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4002ed7	            0x74e7	                            je 0x4002ec0	       488	git-compat-util.h	FUNCTION_95	DO_1
0x4002ed9	          0x4c89ee	                            mov rsi, r13	      1248	am.c	FUNCTION_37	WHILE_1	CALL_16
0x4002edc	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1248	am.c	FUNCTION_37	WHILE_1	CALL_16
0x4002ee1	      0xe800000000	                          call 0x4002ee6	      1248	am.c	FUNCTION_37	WHILE_1	CALL_16
0x4002ee6	            0x85c0	                           test eax, eax	      1248	am.c	FUNCTION_37	WHILE_1	CALL_16
0x4002ee8	     0xf84f8feffff	                            je 0x4002de6	      1248	am.c	FUNCTION_37	WHILE_1	CALL_16
0x4002eee	          0x4c89ef	                            mov rdi, r13	      1262	am.c	FUNCTION_37	CALL_26
0x4002ef1	      0xe800000000	                          call 0x4002ef6	      1262	am.c	FUNCTION_37	CALL_26
0x4002ef6	      0xbf00000000	                              mov edi, 0	      1265	am.c	FUNCTION_37	IF_9	CALL_27
0x4002efb	      0xb91a000000	                           mov ecx, 0x1a	      1265	am.c	FUNCTION_37	IF_9	CALL_27
0x4002f00	      0x488b742470	            mov rsi, qword [rsp + 0x70] 	      1265	am.c	FUNCTION_37	IF_9	CALL_27
0x4002f05	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1265	am.c	FUNCTION_37	IF_9	CALL_27
0x4002f07	           0xf97c2	                                 seta dl	      1265	am.c	FUNCTION_37	IF_9	CALL_27
0x4002f0a	           0xf92c0	                                 setb al	      1265	am.c	FUNCTION_37	IF_9	CALL_27
0x4002f0d	            0x38c2	                              cmp dl, al	      1265	am.c	FUNCTION_37	IF_9	CALL_27
0x4002f0f	     0xf84910a0000	                            je 0x40039a6	      1265	am.c	FUNCTION_37	IF_9	CALL_27
0x4002f15	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002f1a	        0x488b7500	                    mov rsi, qword [rbp]	       183	am.c	FUNCTION_6	CALL_1
0x4002f1e	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002f23	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002f28	      0xe800000000	                          call 0x4002f2d	       183	am.c	FUNCTION_6	CALL_1
0x4002f2d	          0x4889c7	                            mov rdi, rax	      1270	am.c	FUNCTION_37	IF_10	CALL_29
0x4002f30	      0xe8cae5ffff	                  call sym.is_empty_file	      1270	am.c	FUNCTION_37	IF_10	CALL_29
0x4002f35	            0x85c0	                           test eax, eax	      1270	am.c	FUNCTION_37	IF_10	CALL_29
0x4002f37	            0x7429	                            je 0x4002f62	      1270	am.c	FUNCTION_37	IF_10	CALL_29
0x4002f39	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x4002f3e	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x4002f43	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x4002f48	      0xe800000000	                          call 0x4002f4d	        54	gettext.h	FUNCTION_87
0x4002f4d	          0x4889c7	                            mov rdi, rax	      1271	am.c	FUNCTION_37	IF_10	CALL_31
0x4002f50	      0xb800000000	                              mov eax, 0	      1271	am.c	FUNCTION_37	IF_10	CALL_31
0x4002f55	      0xe800000000	                          call 0x4002f5a	      1271	am.c	FUNCTION_37	IF_10	CALL_31
0x4002f5a	          0x4889ef	                            mov rdi, rbp	      1272	am.c	FUNCTION_37	IF_10	CALL_32
0x4002f5d	      0xe867d8ffff	               call sym.die_user_resolve	      1272	am.c	FUNCTION_37	IF_10	CALL_32
0x4002f62	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_137	CALL_2
0x4002f67	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_137	CALL_2
0x4002f6c	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       279	strbuf.h	FUNCTION_137	CALL_2
0x4002f71	      0xe800000000	                          call 0x4002f76	       279	strbuf.h	FUNCTION_137	CALL_2
0x4002f76	          0x4c89f6	                            mov rsi, r14	      1276	am.c	FUNCTION_37	CALL_34
0x4002f79	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1276	am.c	FUNCTION_37	CALL_34
0x4002f7e	      0xe800000000	                          call 0x4002f83	      1276	am.c	FUNCTION_37	CALL_34
0x4002f83	      0xbe00000000	                              mov esi, 0	      1277	am.c	FUNCTION_37	CALL_35
0x4002f88	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1277	am.c	FUNCTION_37	CALL_35
0x4002f8d	      0xe800000000	                          call 0x4002f92	      1277	am.c	FUNCTION_37	CALL_35
0x4002f92	      0x48837d1000	               cmp qword [rbp + 0x10], 0	      1279	am.c	FUNCTION_37	CALL_36
0x4002f97	            0x7419	                            je 0x4002fb2	      1279	am.c	FUNCTION_37	CALL_36
0x4002f99	      0xb900000000	                              mov ecx, 0	      1279	am.c	FUNCTION_37	CALL_36
0x4002f9e	      0xbaff040000	                          mov edx, 0x4ff	      1279	am.c	FUNCTION_37	CALL_36
0x4002fa3	      0xbe00000000	                              mov esi, 0	      1279	am.c	FUNCTION_37	CALL_36
0x4002fa8	      0xbf00000000	                              mov edi, 0	      1279	am.c	FUNCTION_37	CALL_36
0x4002fad	      0xe800000000	                          call 0x4002fb2	      1279	am.c	FUNCTION_37	CALL_36
0x4002fb2	      0xbe00000000	                              mov esi, 0	      1280	am.c	FUNCTION_37	CALL_37
0x4002fb7	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      1280	am.c	FUNCTION_37	CALL_37
0x4002fbc	      0xe800000000	                          call 0x4002fc1	      1280	am.c	FUNCTION_37	CALL_37
0x4002fc1	        0x48894510	            mov qword [rbp + 0x10], rax 	      1280	am.c	FUNCTION_37	CALL_37
0x4002fc5	      0x48837d1800	               cmp qword [rbp + 0x18], 0	      1282	am.c	FUNCTION_37	CALL_38
0x4002fca	            0x7419	                            je 0x4002fe5	      1282	am.c	FUNCTION_37	CALL_38
0x4002fcc	      0xb900000000	                              mov ecx, 0	      1282	am.c	FUNCTION_37	CALL_38
0x4002fd1	      0xba02050000	                          mov edx, 0x502	      1282	am.c	FUNCTION_37	CALL_38
0x4002fd6	      0xbe00000000	                              mov esi, 0	      1282	am.c	FUNCTION_37	CALL_38
0x4002fdb	      0xbf00000000	                              mov edi, 0	      1282	am.c	FUNCTION_37	CALL_38
0x4002fe0	      0xe800000000	                          call 0x4002fe5	      1282	am.c	FUNCTION_37	CALL_38
0x4002fe5	      0xbe00000000	                              mov esi, 0	      1283	am.c	FUNCTION_37	CALL_39
0x4002fea	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      1283	am.c	FUNCTION_37	CALL_39
0x4002ff2	      0xe800000000	                          call 0x4002ff7	      1283	am.c	FUNCTION_37	CALL_39
0x4002ff7	        0x48894518	            mov qword [rbp + 0x18], rax 	      1283	am.c	FUNCTION_37	CALL_39
0x4002ffb	      0x48837d2000	               cmp qword [rbp + 0x20], 0	      1285	am.c	FUNCTION_37	CALL_40
0x4003000	            0x7419	                            je 0x400301b	      1285	am.c	FUNCTION_37	CALL_40
0x4003002	      0xb900000000	                              mov ecx, 0	      1285	am.c	FUNCTION_37	CALL_40
0x4003007	      0xba05050000	                          mov edx, 0x505	      1285	am.c	FUNCTION_37	CALL_40
0x400300c	      0xbe00000000	                              mov esi, 0	      1285	am.c	FUNCTION_37	CALL_40
0x4003011	      0xbf00000000	                              mov edi, 0	      1285	am.c	FUNCTION_37	CALL_40
0x4003016	      0xe800000000	                          call 0x400301b	      1285	am.c	FUNCTION_37	CALL_40
0x400301b	      0xbe00000000	                              mov esi, 0	      1286	am.c	FUNCTION_37	CALL_41
0x4003020	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      1286	am.c	FUNCTION_37	CALL_41
0x4003028	      0xe800000000	                          call 0x400302d	      1286	am.c	FUNCTION_37	CALL_41
0x400302d	        0x48894520	            mov qword [rbp + 0x20], rax 	      1286	am.c	FUNCTION_37	CALL_41
0x4003031	      0x48837d2800	               cmp qword [rbp + 0x28], 0	      1288	am.c	FUNCTION_37	CALL_42
0x4003036	            0x7419	                            je 0x4003051	      1288	am.c	FUNCTION_37	CALL_42
0x4003038	      0xb900000000	                              mov ecx, 0	      1288	am.c	FUNCTION_37	CALL_42
0x400303d	      0xba08050000	                          mov edx, 0x508	      1288	am.c	FUNCTION_37	CALL_42
0x4003042	      0xbe00000000	                              mov esi, 0	      1288	am.c	FUNCTION_37	CALL_42
0x4003047	      0xbf00000000	                              mov edi, 0	      1288	am.c	FUNCTION_37	CALL_42
0x400304c	      0xe800000000	                          call 0x4003051	      1288	am.c	FUNCTION_37	CALL_42
0x4003051	        0x488d7530	                   lea rsi, [rbp + 0x30]	      1289	am.c	FUNCTION_37	CALL_43
0x4003055	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1289	am.c	FUNCTION_37	CALL_43
0x400305a	      0xe800000000	                          call 0x400305f	      1289	am.c	FUNCTION_37	CALL_43
0x400305f	        0x48894528	            mov qword [rbp + 0x28], rax 	      1289	am.c	FUNCTION_37	CALL_43
0x4003063	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1292	am.c	FUNCTION_37	CALL_44
0x4003068	      0xe800000000	                          call 0x400306d	      1292	am.c	FUNCTION_37	CALL_44
0x400306d	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      1293	am.c	FUNCTION_37	CALL_45
0x4003075	      0xe800000000	                          call 0x400307a	      1293	am.c	FUNCTION_37	CALL_45
0x400307a	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      1294	am.c	FUNCTION_37	CALL_46
0x4003082	      0xe800000000	                          call 0x4003087	      1294	am.c	FUNCTION_37	CALL_46
0x4003087	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      1295	am.c	FUNCTION_37	CALL_47
0x400308c	      0xe800000000	                          call 0x4003091	      1295	am.c	FUNCTION_37	CALL_47
0x4003091	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1296	am.c	FUNCTION_37	CALL_48
0x4003096	      0xe800000000	                          call 0x400309b	      1296	am.c	FUNCTION_37	CALL_48
0x400309b	    0x488dbc244001	                  lea rdi, [rsp + 0x140]	      1297	am.c	FUNCTION_37	CALL_49
0x40030a3	      0xe800000000	                          call 0x40030a8	      1297	am.c	FUNCTION_37	CALL_49
0x40030a8	        0x837d5c00	               cmp dword [rbp + 0x5c], 0	      1795	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_6
0x40030ac	            0x7408	                            je 0x40030b6	      1795	am.c	FUNCTION_49	WHILE_1	ELSE_1	IF_6
0x40030ae	          0x4889ef	                            mov rdi, rbp	      1796	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_16
0x40030b1	      0xe8cecfffff	              call sym.am_append_signoff	      1796	am.c	FUNCTION_49	WHILE_1	ELSE_1	CALL_16
0x40030b6	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	       348	am.c	FUNCTION_15
0x40030c2	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	       348	am.c	FUNCTION_15
0x40030ce	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	       348	am.c	FUNCTION_15
0x40030da	      0xba10000000	                           mov edx, 0x10	       279	strbuf.h	FUNCTION_137	CALL_2
0x40030df	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_137	CALL_2
0x40030e4	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	       279	strbuf.h	FUNCTION_137	CALL_2
0x40030ec	      0xe800000000	                          call 0x40030f1	       279	strbuf.h	FUNCTION_137	CALL_2
0x40030f1	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	       351	am.c	FUNCTION_15	CALL_2
0x40030f5	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	       351	am.c	FUNCTION_15	CALL_2
0x40030fd	      0xe800000000	                          call 0x4003102	       351	am.c	FUNCTION_15	CALL_2
0x4003102	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	       141	strbuf.h	FUNCTION_134
0x400310a	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_134
0x400310d	            0x740e	                            je 0x400311d	       141	strbuf.h	FUNCTION_134
0x400310f	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_136	IF_1	CALL_1
0x4003113	    0x483b8424a800	            cmp rax, qword [rsp + 0xa8] 	       227	strbuf.h	FUNCTION_136	IF_1	CALL_1
0x400311b	            0x7512	                           jne 0x400312f	       227	strbuf.h	FUNCTION_136	IF_1	CALL_1
0x400311d	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_136	CALL_2
0x4003122	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	       228	strbuf.h	FUNCTION_136	CALL_2
0x400312a	      0xe800000000	                          call 0x400312f	       228	strbuf.h	FUNCTION_136	CALL_2
0x400312f	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	       229	strbuf.h	FUNCTION_136
0x4003137	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_136
0x400313b	    0x48899424a800	             mov qword [rsp + 0xa8], rdx	       229	strbuf.h	FUNCTION_136
0x4003143	    0x488b9424b000	            mov rdx, qword [rsp + 0xb0] 	       229	strbuf.h	FUNCTION_136
0x400314b	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_136
0x400314f	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	       230	strbuf.h	FUNCTION_136
0x4003157	    0x488b9424b000	            mov rdx, qword [rsp + 0xb0] 	       230	strbuf.h	FUNCTION_136
0x400315f	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_136
0x4003163	      0xba11000000	                           mov edx, 0x11	       279	strbuf.h	FUNCTION_137	CALL_2
0x4003168	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_137	CALL_2
0x400316d	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	       279	strbuf.h	FUNCTION_137	CALL_2
0x4003175	      0xe800000000	                          call 0x400317a	       279	strbuf.h	FUNCTION_137	CALL_2
0x400317a	        0x488b7518	            mov rsi, qword [rbp + 0x18] 	       355	am.c	FUNCTION_15	CALL_5
0x400317e	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	       355	am.c	FUNCTION_15	CALL_5
0x4003186	      0xe800000000	                          call 0x400318b	       355	am.c	FUNCTION_15	CALL_5
0x400318b	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	       141	strbuf.h	FUNCTION_134
0x4003193	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_134
0x4003196	            0x740e	                            je 0x40031a6	       141	strbuf.h	FUNCTION_134
0x4003198	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_136	IF_1	CALL_1
0x400319c	    0x483b8424a800	            cmp rax, qword [rsp + 0xa8] 	       227	strbuf.h	FUNCTION_136	IF_1	CALL_1
0x40031a4	            0x7512	                           jne 0x40031b8	       227	strbuf.h	FUNCTION_136	IF_1	CALL_1
0x40031a6	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_136	CALL_2
0x40031ab	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	       228	strbuf.h	FUNCTION_136	CALL_2
0x40031b3	      0xe800000000	                          call 0x40031b8	       228	strbuf.h	FUNCTION_136	CALL_2
0x40031b8	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	       229	strbuf.h	FUNCTION_136
0x40031c0	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_136
0x40031c4	    0x48899424a800	             mov qword [rsp + 0xa8], rdx	       229	strbuf.h	FUNCTION_136
0x40031cc	    0x488b9424b000	            mov rdx, qword [rsp + 0xb0] 	       229	strbuf.h	FUNCTION_136
0x40031d4	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_136
0x40031d8	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	       230	strbuf.h	FUNCTION_136
0x40031e0	    0x488b9424b000	            mov rdx, qword [rsp + 0xb0] 	       230	strbuf.h	FUNCTION_136
0x40031e8	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_136
0x40031ec	      0xba10000000	                           mov edx, 0x10	       279	strbuf.h	FUNCTION_137	CALL_2
0x40031f1	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_137	CALL_2
0x40031f6	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	       279	strbuf.h	FUNCTION_137	CALL_2
0x40031fe	      0xe800000000	                          call 0x4003203	       279	strbuf.h	FUNCTION_137	CALL_2
0x4003203	        0x488b7520	            mov rsi, qword [rbp + 0x20] 	       359	am.c	FUNCTION_15	CALL_8
0x4003207	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	       359	am.c	FUNCTION_15	CALL_8
0x400320f	      0xe800000000	                          call 0x4003214	       359	am.c	FUNCTION_15	CALL_8
0x4003214	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	       141	strbuf.h	FUNCTION_134
0x400321c	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_134
0x400321f	            0x740e	                            je 0x400322f	       141	strbuf.h	FUNCTION_134
0x4003221	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_136	IF_1	CALL_1
0x4003225	    0x483b8424a800	            cmp rax, qword [rsp + 0xa8] 	       227	strbuf.h	FUNCTION_136	IF_1	CALL_1
0x400322d	            0x7512	                           jne 0x4003241	       227	strbuf.h	FUNCTION_136	IF_1	CALL_1
0x400322f	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_136	CALL_2
0x4003234	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	       228	strbuf.h	FUNCTION_136	CALL_2
0x400323c	      0xe800000000	                          call 0x4003241	       228	strbuf.h	FUNCTION_136	CALL_2
0x4003241	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	       229	strbuf.h	FUNCTION_136
0x4003249	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_136
0x400324d	    0x48899424a800	             mov qword [rsp + 0xa8], rdx	       229	strbuf.h	FUNCTION_136
0x4003255	    0x488b9424b000	            mov rdx, qword [rsp + 0xb0] 	       229	strbuf.h	FUNCTION_136
0x400325d	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_136
0x4003261	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	       230	strbuf.h	FUNCTION_136
0x4003269	    0x488b9424b000	            mov rdx, qword [rsp + 0xb0] 	       230	strbuf.h	FUNCTION_136
0x4003271	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_136
0x4003275	    0x488b9424b000	            mov rdx, qword [rsp + 0xb0] 	       362	am.c	FUNCTION_15	CALL_10
0x400327d	      0xbe00000000	                              mov esi, 0	       362	am.c	FUNCTION_15	CALL_10
0x4003282	          0x4889ef	                            mov rdi, rbp	       362	am.c	FUNCTION_15	CALL_10
0x4003285	      0xe864d3ffff	               call sym.write_state_text	       362	am.c	FUNCTION_15	CALL_10
0x400328a	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	       364	am.c	FUNCTION_15	CALL_11
0x4003292	      0xe800000000	                          call 0x4003297	       364	am.c	FUNCTION_15	CALL_11
0x4003297	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x400329c	        0x488b7500	                    mov rsi, qword [rbp]	       183	am.c	FUNCTION_6	CALL_1
0x40032a0	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x40032a5	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x40032aa	      0xe800000000	                          call 0x40032af	       183	am.c	FUNCTION_6	CALL_1
0x40032af	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	       395	am.c	FUNCTION_17	CALL_2
0x40032b3	        0x488b7528	            mov rsi, qword [rbp + 0x28] 	       395	am.c	FUNCTION_17	CALL_2
0x40032b7	          0x4889c7	                            mov rdi, rax	       395	am.c	FUNCTION_17	CALL_2
0x40032ba	      0xe800000000	                          call 0x40032bf	       395	am.c	FUNCTION_17	CALL_2
0x40032bf	        0x837d5000	               cmp dword [rbp + 0x50], 0	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x40032c3	            0x7410	                            je 0x40032d5	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x40032c5	          0x4889ef	                            mov rdi, rbp	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x40032c8	      0xe887d6ffff	                 call sym.do_interactive	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x40032cd	            0x85c0	                           test eax, eax	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x40032cf	     0xf852e020000	                           jne 0x4003503	      1802	am.c	FUNCTION_49	WHILE_1	IF_7	CALL_19
0x40032d5	      0x48837d2800	               cmp qword [rbp + 0x28], 0	       492	am.c	FUNCTION_20	CALL_1
0x40032da	            0x7519	                           jne 0x40032f5	       492	am.c	FUNCTION_20	CALL_1
0x40032dc	      0xb900000000	                              mov ecx, 0	       492	am.c	FUNCTION_20	CALL_1
0x40032e1	      0xbaec010000	                          mov edx, 0x1ec	       492	am.c	FUNCTION_20	CALL_1
0x40032e6	      0xbe00000000	                              mov esi, 0	       492	am.c	FUNCTION_20	CALL_1
0x40032eb	      0xbf00000000	                              mov edi, 0	       492	am.c	FUNCTION_20	CALL_1
0x40032f0	      0xe800000000	                          call 0x40032f5	       492	am.c	FUNCTION_20	CALL_1
0x40032f5	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x40032fa	        0x488b7500	                    mov rsi, qword [rbp]	       183	am.c	FUNCTION_6	CALL_1
0x40032fe	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4003303	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x4003308	      0xe800000000	                          call 0x400330d	       183	am.c	FUNCTION_6	CALL_1
0x400330d	      0xb900000000	                              mov ecx, 0	       493	am.c	FUNCTION_20	CALL_3
0x4003312	          0x4889c2	                            mov rdx, rax	       493	am.c	FUNCTION_20	CALL_3
0x4003315	      0xbe00000000	                              mov esi, 0	       493	am.c	FUNCTION_20	CALL_3
0x400331a	      0xbf00000000	                              mov edi, 0	       493	am.c	FUNCTION_20	CALL_3
0x400331f	      0xb800000000	                              mov eax, 0	       493	am.c	FUNCTION_20	CALL_3
0x4003324	      0xe800000000	                          call 0x4003329	       493	am.c	FUNCTION_20	CALL_3
0x4003329	            0x85c0	                           test eax, eax	       495	am.c	FUNCTION_20	IF_1
0x400332b	     0xf85f7050000	                           jne 0x4003928	       495	am.c	FUNCTION_20	IF_1
0x4003331	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	       496	am.c	FUNCTION_20	IF_1
0x4003335	      0xe800000000	                          call 0x400333a	       496	am.c	FUNCTION_20	IF_1
0x400333a	    0x48c745280000	               mov qword [rbp + 0x28], 0	       496	am.c	FUNCTION_20	IF_1
0x4003342	          0x4889ef	                            mov rdi, rbp	       497	am.c	FUNCTION_20	IF_1	IF_2	CALL_4
0x4003345	      0xe85cecffff	                call sym.read_commit_msg	       497	am.c	FUNCTION_20	IF_1	IF_2	CALL_4
0x400334a	            0x85c0	                           test eax, eax	       497	am.c	FUNCTION_20	IF_1	IF_2	CALL_4
0x400334c	     0xf89e0050000	                           jns 0x4003932	       497	am.c	FUNCTION_20	IF_1	IF_2	CALL_4
0x4003352	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4003357	        0x488b7500	                    mov rsi, qword [rbp]	       183	am.c	FUNCTION_6	CALL_1
0x400335b	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4003360	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x4003365	      0xe800000000	                          call 0x400336a	       183	am.c	FUNCTION_6	CALL_1
0x400336a	          0x4889c3	                            mov rbx, rax	       183	am.c	FUNCTION_6	CALL_1
0x400336d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x4003372	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x4003377	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x400337c	      0xe800000000	                          call 0x4003381	        54	gettext.h	FUNCTION_87
0x4003381	          0x4889de	                            mov rsi, rbx	       498	am.c	FUNCTION_20	IF_1	IF_2	CALL_6
0x4003384	          0x4889c7	                            mov rdi, rax	       498	am.c	FUNCTION_20	IF_1	IF_2	CALL_6
0x4003387	      0xb800000000	                              mov eax, 0	       498	am.c	FUNCTION_20	IF_1	IF_2	CALL_6
0x400338c	      0xe800000000	                          call 0x4003391	       498	am.c	FUNCTION_20	IF_1	IF_2	CALL_6
0x4003391	        0x837d5400	               cmp dword [rbp + 0x54], 0	      1812	am.c	FUNCTION_49	WHILE_1	IF_9
0x4003395	     0xf84cc000000	                            je 0x4003467	      1812	am.c	FUNCTION_49	WHILE_1	IF_9
0x400339b	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	      1813	am.c	FUNCTION_49	WHILE_1	IF_9
0x40033a7	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	      1813	am.c	FUNCTION_49	WHILE_1	IF_9
0x40033b3	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	      1813	am.c	FUNCTION_49	WHILE_1	IF_9
0x40033bf	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x40033c4	        0x488b7500	                    mov rsi, qword [rbp]	       183	am.c	FUNCTION_6	CALL_1
0x40033c8	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x40033cd	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x40033d2	      0xe800000000	                          call 0x40033d7	       183	am.c	FUNCTION_6	CALL_1
0x40033d7	          0x4889c6	                            mov rsi, rax	       183	am.c	FUNCTION_6	CALL_1
0x40033da	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_137	CALL_2
0x40033df	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_137	CALL_2
0x40033e6	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_137	CALL_2
0x40033e9	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_137	CALL_2
0x40033eb	          0x4889c8	                            mov rax, rcx	       279	strbuf.h	FUNCTION_137	CALL_2
0x40033ee	          0x48f7d0	                                 not rax	       279	strbuf.h	FUNCTION_137	CALL_2
0x40033f1	        0x488d50ff	                      lea rdx, [rax - 1]	       279	strbuf.h	FUNCTION_137	CALL_2
0x40033f5	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	       279	strbuf.h	FUNCTION_137	CALL_2
0x40033fd	      0xe800000000	                          call 0x4003402	       279	strbuf.h	FUNCTION_137	CALL_2
0x4003402	    0x488bb424b000	            mov rsi, qword [rsp + 0xb0] 	      1816	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_28
0x400340a	          0x4889ef	                            mov rdi, rbp	      1816	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_28
0x400340d	      0xe813daffff	             call sym.fall_back_threeway	      1816	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_28
0x4003412	            0x89c3	                            mov ebx, eax	      1816	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_28
0x4003414	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      1817	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_29
0x400341c	      0xe800000000	                          call 0x4003421	      1817	am.c	FUNCTION_49	WHILE_1	IF_9	CALL_29
0x4003421	            0x85db	                           test ebx, ebx	      1823	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_30
0x4003423	            0x7542	                           jne 0x4003467	      1823	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_30
0x4003425	      0xbf00000000	                              mov edi, 0	      1823	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_30
0x400342a	      0xe800000000	                          call 0x400342f	      1823	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_30
0x400342f	            0x85c0	                           test eax, eax	      1823	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_30
0x4003431	     0xf85c4000000	                           jne 0x40034fb	      1823	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_30
0x4003437	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x400343c	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x4003441	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x4003446	      0xe800000000	                          call 0x400344b	        54	gettext.h	FUNCTION_87
0x400344b	          0x4889c2	                            mov rdx, rax	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x400344e	    0x488b35000000	            mov rsi, qword [0x04003455] 	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4003455	          0x4889ef	                            mov rdi, rbp	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4003458	      0xb800000000	                              mov eax, 0	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x400345d	      0xe8f7d8ffff	                            call sym.say	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4003462	      0xe99c000000	                           jmp 0x4003503	      1824	am.c	FUNCTION_49	WHILE_1	IF_9	IF_10	CALL_32
0x4003467	    0xc78424a00000	               mov dword [rsp + 0xa0], 1	      1830	am.c	FUNCTION_49	WHILE_1	IF_11
0x4003472	        0x488b5d28	            mov rbx, qword [rbp + 0x28] 	      1833	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_36
0x4003476	          0x4889df	                            mov rdi, rbx	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4003479	      0xe8f3cbffff	                        call sym.linelen	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x400347e	          0x4189c5	                           mov r13d, eax	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4003481	          0x4889ef	                            mov rdi, rbp	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4003484	      0xe8cde9ffff	                         call sym.msgnum	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x4003489	          0x4989c4	                            mov r12, rax	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x400348c	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x4003491	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x4003496	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x400349b	      0xe800000000	                          call 0x40034a0	        54	gettext.h	FUNCTION_87
0x40034a0	          0x4889d9	                            mov rcx, rbx	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x40034a3	          0x4489ea	                           mov edx, r13d	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x40034a6	          0x4c89e6	                            mov rsi, r12	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x40034a9	          0x4889c7	                            mov rdi, rax	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x40034ac	      0xb800000000	                              mov eax, 0	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x40034b1	      0xe800000000	                          call 0x40034b6	      1832	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_35
0x40034b6	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      1835	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_37
0x40034be	      0xbf00000000	                              mov edi, 0	      1835	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_37
0x40034c3	      0xe800000000	                          call 0x40034c8	      1835	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_37
0x40034c8	    0x83bc24a00000	               cmp dword [rsp + 0xa0], 0	      1837	am.c	FUNCTION_49	WHILE_1	IF_11	IF_12
0x40034d0	            0x7421	                            je 0x40034f3	      1837	am.c	FUNCTION_49	WHILE_1	IF_11	IF_12
0x40034d2	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x40034d7	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x40034dc	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x40034e1	      0xe800000000	                          call 0x40034e6	        54	gettext.h	FUNCTION_87
0x40034e6	          0x4889c7	                            mov rdi, rax	      1838	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_39
0x40034e9	      0xb800000000	                              mov eax, 0	      1838	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_39
0x40034ee	      0xe800000000	                          call 0x40034f3	      1838	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_39
0x40034f3	          0x4889ef	                            mov rdi, rbp	      1840	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_40
0x40034f6	      0xe8ced2ffff	               call sym.die_user_resolve	      1840	am.c	FUNCTION_49	WHILE_1	IF_11	CALL_40
0x40034fb	          0x4889ef	                            mov rdi, rbp	      1843	am.c	FUNCTION_49	WHILE_1	CALL_41
0x40034fe	      0xe8f0dcffff	                      call sym.do_commit	      1843	am.c	FUNCTION_49	WHILE_1	CALL_41
0x4003503	          0x4889ef	                            mov rdi, rbp	      1846	am.c	FUNCTION_49	WHILE_1	CALL_42
0x4003506	      0xe85fd1ffff	                        call sym.am_next	      1846	am.c	FUNCTION_49	WHILE_1	CALL_42
0x400350b	          0x4585e4	                         test r12d, r12d	      1848	am.c	FUNCTION_49	WHILE_1	IF_13
0x400350e	            0x7410	                            je 0x4003520	      1848	am.c	FUNCTION_49	WHILE_1	IF_13
0x4003510	          0x4889ef	                            mov rdi, rbp	      1849	am.c	FUNCTION_49	WHILE_1	CALL_43
0x4003513	      0xe838ebffff	                        call sym.am_load	      1849	am.c	FUNCTION_49	WHILE_1	CALL_43
0x4003518	    0x41bc00000000	                             mov r12d, 0	      1850	am.c	FUNCTION_49	WHILE_1
0x400351e	            0xeb06	                           jmp 0x4003526	      1850	am.c	FUNCTION_49	WHILE_1
0x4003520	    0x41bc00000000	                             mov r12d, 0	      1850	am.c	FUNCTION_49	WHILE_1
0x4003526	          0x8b450c	              mov eax, dword [rbp + 0xc]	      1773	am.c	FUNCTION_49	WHILE_1
0x4003529	          0x394508	                cmp dword [rbp + 8], eax	      1773	am.c	FUNCTION_49	WHILE_1
0x400352c	     0xf8e0ff3ffff	                           jle 0x4002841	      1773	am.c	FUNCTION_49	WHILE_1
0x4003532	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4003537	        0x488b7500	                    mov rsi, qword [rbp]	       183	am.c	FUNCTION_6	CALL_1
0x400353b	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4003540	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x4003545	      0xe800000000	                          call 0x400354a	       183	am.c	FUNCTION_6	CALL_1
0x400354a	          0x4889c7	                            mov rdi, rax	      1853	am.c	FUNCTION_49	IF_14	CALL_45
0x400354d	      0xe8addfffff	                  call sym.is_empty_file	      1853	am.c	FUNCTION_49	IF_14	CALL_45
0x4003552	            0x85c0	                           test eax, eax	      1853	am.c	FUNCTION_49	IF_14	CALL_45
0x4003554	     0xf85b1020000	                           jne 0x400380b	      1853	am.c	FUNCTION_49	IF_14	CALL_45
0x400355a	    0x83bda0000000	               cmp dword [rbp + 0xa0], 0	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x4003561	            0x7519	                           jne 0x400357c	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x4003563	      0xb900000000	                              mov ecx, 0	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x4003568	      0xba3e070000	                          mov edx, 0x73e	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x400356d	      0xbe00000000	                              mov esi, 0	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x4003572	      0xbf00000000	                              mov edi, 0	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x4003577	      0xe800000000	                          call 0x400357c	      1854	am.c	FUNCTION_49	IF_14	CALL_46
0x400357c	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	       538	am.c	FUNCTION_22
0x4003588	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	       538	am.c	FUNCTION_22
0x4003594	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	       538	am.c	FUNCTION_22
0x40035a0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x40035a5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x40035aa	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x40035af	      0xe800000000	                          call 0x40035b4	        54	gettext.h	FUNCTION_87
0x40035b4	          0x4989c5	                            mov r13, rax	        54	gettext.h	FUNCTION_87
0x40035b7	    0x83bda0000000	               cmp dword [rbp + 0xa0], 0	       544	am.c	FUNCTION_22	CALL_2
0x40035be	            0x7519	                           jne 0x40035d9	       544	am.c	FUNCTION_22	CALL_2
0x40035c0	      0xb900000000	                              mov ecx, 0	       544	am.c	FUNCTION_22	CALL_2
0x40035c5	      0xba20020000	                          mov edx, 0x220	       544	am.c	FUNCTION_22	CALL_2
0x40035ca	      0xbe00000000	                              mov esi, 0	       544	am.c	FUNCTION_22	CALL_2
0x40035cf	      0xbf00000000	                              mov edi, 0	       544	am.c	FUNCTION_22	CALL_2
0x40035d4	      0xe800000000	                          call 0x40035d9	       544	am.c	FUNCTION_22	CALL_2
0x40035d9	      0xbf00000000	                              mov edi, 0	       546	am.c	FUNCTION_22	CALL_3
0x40035de	      0xe800000000	                          call 0x40035e3	       546	am.c	FUNCTION_22	CALL_3
0x40035e3	          0x4889c3	                            mov rbx, rax	       546	am.c	FUNCTION_22	CALL_3
0x40035e6	          0x4885c0	                           test rax, rax	       547	am.c	FUNCTION_22	IF_1
0x40035e9	     0xf846e010000	                            je 0x400375d	       547	am.c	FUNCTION_22	IF_1
0x40035ef	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x40035f4	        0x488b7500	                    mov rsi, qword [rbp]	       183	am.c	FUNCTION_6	CALL_1
0x40035f8	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x40035fd	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x4003602	      0xe800000000	                          call 0x4003607	       183	am.c	FUNCTION_6	CALL_1
0x4003607	      0xbe00000000	                              mov esi, 0	       550	am.c	FUNCTION_22	CALL_5
0x400360c	          0x4889c7	                            mov rdi, rax	       550	am.c	FUNCTION_22	CALL_5
0x400360f	      0xe800000000	                          call 0x4003614	       550	am.c	FUNCTION_22	CALL_5
0x4003614	          0x4989c4	                            mov r12, rax	       550	am.c	FUNCTION_22	CALL_5
0x4003617	      0xe907010000	                           jmp 0x4003723	       550	am.c	FUNCTION_22	CALL_5
0x400361c	    0x4883bc24a800	           cmp qword [rsp + 0xa8], 0x51 	       555	am.c	FUNCTION_22	WHILE_1	IF_2
0x4003625	            0x741a	                            je 0x4003641	       555	am.c	FUNCTION_22	WHILE_1	IF_2
0x4003627	    0x488bb424b000	            mov rsi, qword [rsp + 0xb0] 	       556	am.c	FUNCTION_22	WHILE_1	IF_2
0x400362f	          0x4c89ef	                            mov rdi, r13	       556	am.c	FUNCTION_22	WHILE_1	IF_2
0x4003632	      0xb800000000	                              mov eax, 0	       556	am.c	FUNCTION_22	WHILE_1	IF_2
0x4003637	      0xe800000000	                          call 0x400363c	       556	am.c	FUNCTION_22	WHILE_1	IF_2
0x400363c	      0xe9fa000000	                           jmp 0x400373b	       556	am.c	FUNCTION_22	WHILE_1	IF_2
0x4003641	    0x488db4240001	                  lea rsi, [rsp + 0x100]	       560	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_7
0x4003649	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	       560	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_7
0x4003651	      0xe800000000	                          call 0x4003656	       560	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_7
0x4003656	            0x85c0	                           test eax, eax	       560	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_7
0x4003658	            0x741a	                            je 0x4003674	       560	am.c	FUNCTION_22	WHILE_1	IF_3	CALL_7
0x400365a	    0x488bb424b000	            mov rsi, qword [rsp + 0xb0] 	       561	am.c	FUNCTION_22	WHILE_1	IF_3
0x4003662	          0x4c89ef	                            mov rdi, r13	       561	am.c	FUNCTION_22	WHILE_1	IF_3
0x4003665	      0xb800000000	                              mov eax, 0	       561	am.c	FUNCTION_22	WHILE_1	IF_3
0x400366a	      0xe800000000	                          call 0x400366f	       561	am.c	FUNCTION_22	WHILE_1	IF_3
0x400366f	      0xe9c7000000	                           jmp 0x400373b	       561	am.c	FUNCTION_22	WHILE_1	IF_3
0x4003674	    0x488bb424b000	            mov rsi, qword [rsp + 0xb0] 	       565	am.c	FUNCTION_22	WHILE_1	IF_4
0x400367c	        0x807e2820	            cmp byte [rsi + 0x28], 0x20 	       565	am.c	FUNCTION_22	WHILE_1	IF_4
0x4003680	            0x7412	                            je 0x4003694	       565	am.c	FUNCTION_22	WHILE_1	IF_4
0x4003682	          0x4c89ef	                            mov rdi, r13	       566	am.c	FUNCTION_22	WHILE_1	IF_4
0x4003685	      0xb800000000	                              mov eax, 0	       566	am.c	FUNCTION_22	WHILE_1	IF_4
0x400368a	      0xe800000000	                          call 0x400368f	       566	am.c	FUNCTION_22	WHILE_1	IF_4
0x400368f	      0xe9a7000000	                           jmp 0x400373b	       566	am.c	FUNCTION_22	WHILE_1	IF_4
0x4003694	        0x488d7e29	                   lea rdi, [rsi + 0x29]	       570	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_8
0x4003698	    0x488db4244001	                  lea rsi, [rsp + 0x140]	       570	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_8
0x40036a0	      0xe800000000	                          call 0x40036a5	       570	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_8
0x40036a5	            0x85c0	                           test eax, eax	       570	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_8
0x40036a7	            0x7417	                            je 0x40036c0	       570	am.c	FUNCTION_22	WHILE_1	IF_5	CALL_8
0x40036a9	    0x488bb424b000	            mov rsi, qword [rsp + 0xb0] 	       571	am.c	FUNCTION_22	WHILE_1	IF_5
0x40036b1	          0x4c89ef	                            mov rdi, r13	       571	am.c	FUNCTION_22	WHILE_1	IF_5
0x40036b4	      0xb800000000	                              mov eax, 0	       571	am.c	FUNCTION_22	WHILE_1	IF_5
0x40036b9	      0xe800000000	                          call 0x40036be	       571	am.c	FUNCTION_22	WHILE_1	IF_5
0x40036be	            0xeb7b	                           jmp 0x400373b	       571	am.c	FUNCTION_22	WHILE_1	IF_5
0x40036c0	    0x488d94244001	                  lea rdx, [rsp + 0x140]	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_9
0x40036c8	    0x488db4240001	                  lea rsi, [rsp + 0x100]	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_9
0x40036d0	          0x4889df	                            mov rdi, rbx	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_9
0x40036d3	      0xe800000000	                          call 0x40036d8	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_9
0x40036d8	            0x85c0	                           test eax, eax	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_9
0x40036da	            0x7447	                            je 0x4003723	       575	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_9
0x40036dc	    0x488dbc244001	                  lea rdi, [rsp + 0x140]	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x40036e4	      0xe800000000	                          call 0x40036e9	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x40036e9	          0x4989c7	                            mov r15, rax	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x40036ec	    0x488dbc240001	                  lea rdi, [rsp + 0x100]	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x40036f4	      0xe800000000	                          call 0x40036f9	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x40036f9	          0x4989c6	                            mov r14, rax	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x40036fc	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x4003701	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x4003706	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x400370b	      0xe800000000	                          call 0x4003710	        54	gettext.h	FUNCTION_87
0x4003710	          0x4c89fa	                            mov rdx, r15	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4003713	          0x4c89f6	                            mov rsi, r14	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4003716	          0x4889c7	                            mov rdi, rax	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4003719	      0xb800000000	                              mov eax, 0	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x400371e	      0xe800000000	                          call 0x4003723	       576	am.c	FUNCTION_22	WHILE_1	IF_6	CALL_10
0x4003723	          0x4c89e6	                            mov rsi, r12	       552	am.c	FUNCTION_22	WHILE_1	CALL_6
0x4003726	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	       552	am.c	FUNCTION_22	WHILE_1	CALL_6
0x400372e	      0xe800000000	                          call 0x4003733	       552	am.c	FUNCTION_22	WHILE_1	CALL_6
0x4003733	            0x85c0	                           test eax, eax	       552	am.c	FUNCTION_22	WHILE_1	CALL_6
0x4003735	     0xf84e1feffff	                            je 0x400361c	       552	am.c	FUNCTION_22	WHILE_1	CALL_6
0x400373b	      0xbe00000000	                              mov esi, 0	       581	am.c	FUNCTION_22	CALL_13
0x4003740	          0x4889df	                            mov rdi, rbx	       581	am.c	FUNCTION_22	CALL_13
0x4003743	      0xe800000000	                          call 0x4003748	       581	am.c	FUNCTION_22	CALL_13
0x4003748	          0x4c89e7	                            mov rdi, r12	       582	am.c	FUNCTION_22	CALL_14
0x400374b	      0xe800000000	                          call 0x4003750	       582	am.c	FUNCTION_22	CALL_14
0x4003750	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	       583	am.c	FUNCTION_22	CALL_15
0x4003758	      0xe800000000	                          call 0x400375d	       583	am.c	FUNCTION_22	CALL_15
0x400375d	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	       510	am.c	FUNCTION_21
0x4003765	      0xb90c000000	                            mov ecx, 0xc	       510	am.c	FUNCTION_21
0x400376a	      0xb800000000	                              mov eax, 0	       510	am.c	FUNCTION_21
0x400376f	          0xf348ab	              rep stosq qword [rdi], rax	       510	am.c	FUNCTION_21
0x4003772	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	       510	am.c	FUNCTION_21
0x400377e	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	       510	am.c	FUNCTION_21
0x400378a	      0xbf00000000	                              mov edi, 0	       511	am.c	FUNCTION_21	CALL_1
0x400378f	      0xe800000000	                          call 0x4003794	       511	am.c	FUNCTION_21	CALL_1
0x4003794	          0x4885c0	                           test rax, rax	       514	am.c	FUNCTION_21	IF_1
0x4003797	            0x7472	                            je 0x400380b	       514	am.c	FUNCTION_21	IF_1
0x4003799	    0x488d9c24a800	                   lea rbx, [rsp + 0xa8]	       517	am.c	FUNCTION_21	CALL_2
0x40037a1	          0x4889c6	                            mov rsi, rax	       517	am.c	FUNCTION_21	CALL_2
0x40037a4	          0x4889df	                            mov rdi, rbx	       517	am.c	FUNCTION_21	CALL_2
0x40037a7	      0xe800000000	                          call 0x40037ac	       517	am.c	FUNCTION_21	CALL_2
0x40037ac	      0xbe00000000	                              mov esi, 0	       518	am.c	FUNCTION_21	CALL_3
0x40037b1	          0x4889df	                            mov rdi, rbx	       518	am.c	FUNCTION_21	CALL_3
0x40037b4	      0xe800000000	                          call 0x40037b9	       518	am.c	FUNCTION_21	CALL_3
0x40037b9	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x40037be	        0x488b7500	                    mov rsi, qword [rbp]	       183	am.c	FUNCTION_6	CALL_1
0x40037c2	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x40037c7	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x40037cc	      0xe800000000	                          call 0x40037d1	       183	am.c	FUNCTION_6	CALL_1
0x40037d1	      0xbe00000000	                              mov esi, 0	       520	am.c	FUNCTION_21	CALL_5
0x40037d6	          0x4889c7	                            mov rdi, rax	       520	am.c	FUNCTION_21	CALL_5
0x40037d9	      0xb800000000	                              mov eax, 0	       520	am.c	FUNCTION_21	CALL_5
0x40037de	      0xe800000000	                          call 0x40037e3	       520	am.c	FUNCTION_21	CALL_5
0x40037e3	    0x898424cc0000	             mov dword [rsp + 0xcc], eax	       520	am.c	FUNCTION_21	CALL_5
0x40037ea	    0x808c24e80000	              or byte [rsp + 0xe8], 0x20	       521	am.c	FUNCTION_21
0x40037f2	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	       523	am.c	FUNCTION_21	CALL_6
0x40037fa	      0xe800000000	                          call 0x40037ff	       523	am.c	FUNCTION_21	CALL_6
0x40037ff	    0x8bbc24cc0000	            mov edi, dword [rsp + 0xcc] 	       525	am.c	FUNCTION_21	CALL_7
0x4003806	      0xe800000000	                          call 0x400380b	       525	am.c	FUNCTION_21	CALL_7
0x400380b	    0x83bda0000000	               cmp dword [rbp + 0xa0], 0	      1863	am.c	FUNCTION_49	IF_15
0x4003812	     0xf85e0010000	                           jne 0x40039f8	      1863	am.c	FUNCTION_49	IF_15
0x4003818	          0x4889ef	                            mov rdi, rbp	      1864	am.c	FUNCTION_49	IF_15	CALL_49
0x400381b	      0xe8dcddffff	                     call sym.am_destroy	      1864	am.c	FUNCTION_49	IF_15	CALL_49
0x4003820	    0x488b05000000	            mov rax, qword [0x04003827] 	      1865	am.c	FUNCTION_49	IF_15	CALL_50
0x4003827	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      1865	am.c	FUNCTION_49	IF_15	CALL_50
0x400382b	      0xe800000000	                          call 0x4003830	      1865	am.c	FUNCTION_49	IF_15	CALL_50
0x4003830	      0xbe02000000	                              mov esi, 2	      1866	am.c	FUNCTION_49	IF_15	CALL_51
0x4003835	    0x488dbc242001	                  lea rdi, [rsp + 0x120]	      1866	am.c	FUNCTION_49	IF_15	CALL_51
0x400383d	      0xe800000000	                          call 0x4003842	      1866	am.c	FUNCTION_49	IF_15	CALL_51
0x4003842	      0xe9b1010000	                           jmp 0x40039f8	      1868	am.c	FUNCTION_49
0x4003847	    0x488db4244001	                  lea rsi, [rsp + 0x140]	      1314	am.c	FUNCTION_38	IF_1	CALL_4
0x400384f	      0xe800000000	                          call 0x4003854	      1314	am.c	FUNCTION_38	IF_1	CALL_4
0x4003854	          0x4189c7	                           mov r15d, eax	      1314	am.c	FUNCTION_38	IF_1	CALL_4
0x4003857	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      1317	am.c	FUNCTION_38	CALL_5
0x400385f	      0xe800000000	                          call 0x4003864	      1317	am.c	FUNCTION_38	CALL_5
0x4003864	          0x4c89ef	                            mov rdi, r13	      1318	am.c	FUNCTION_38	CALL_6
0x4003867	      0xe800000000	                          call 0x400386c	      1318	am.c	FUNCTION_38	CALL_6
0x400386c	          0x4585ff	                         test r15d, r15d	      1435	am.c	FUNCTION_42	IF_1	CALL_1
0x400386f	     0xf89bbf0ffff	                           jns 0x4002930	      1435	am.c	FUNCTION_42	IF_1	CALL_1
0x4003875	      0xe992f0ffff	                           jmp 0x400290c	      1435	am.c	FUNCTION_42	IF_1	CALL_1
0x400387a	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      1317	am.c	FUNCTION_38	CALL_5
0x4003882	      0xe800000000	                          call 0x4003887	      1317	am.c	FUNCTION_38	CALL_5
0x4003887	          0x4c89ef	                            mov rdi, r13	      1318	am.c	FUNCTION_38	CALL_6
0x400388a	      0xe800000000	                          call 0x400388f	      1318	am.c	FUNCTION_38	CALL_6
0x400388f	      0xe978f0ffff	                           jmp 0x400290c	      1318	am.c	FUNCTION_38	CALL_6
0x4003894	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      1252	am.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x4003899	          0x4885c0	                           test rax, rax	      1252	am.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x400389c	     0xf84baf5ffff	                            je 0x4002e5c	      1252	am.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x40038a2	      0xe96ef5ffff	                           jmp 0x4002e15	      1252	am.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x40038a7	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_137	CALL_2
0x40038ac	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_137	CALL_2
0x40038b3	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_137	CALL_2
0x40038b6	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_137	CALL_2
0x40038b8	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_137	CALL_2
0x40038bb	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_137	CALL_2
0x40038bf	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       279	strbuf.h	FUNCTION_137	CALL_2
0x40038c4	      0xe800000000	                          call 0x40038c9	       279	strbuf.h	FUNCTION_137	CALL_2
0x40038c9	      0xe90bf6ffff	                           jmp 0x4002ed9	       279	strbuf.h	FUNCTION_137	CALL_2
0x40038ce	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_137	CALL_2
0x40038d3	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_137	CALL_2
0x40038da	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_137	CALL_2
0x40038dd	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_137	CALL_2
0x40038df	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_137	CALL_2
0x40038e2	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_137	CALL_2
0x40038e6	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	       279	strbuf.h	FUNCTION_137	CALL_2
0x40038ee	      0xe800000000	                          call 0x40038f3	       279	strbuf.h	FUNCTION_137	CALL_2
0x40038f3	      0xe9e1f5ffff	                           jmp 0x4002ed9	       279	strbuf.h	FUNCTION_137	CALL_2
0x40038f8	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_137	CALL_2
0x40038fd	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_137	CALL_2
0x4003904	          0x4c89c7	                             mov rdi, r8	       279	strbuf.h	FUNCTION_137	CALL_2
0x4003907	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_137	CALL_2
0x4003909	          0x4889c8	                            mov rax, rcx	       279	strbuf.h	FUNCTION_137	CALL_2
0x400390c	          0x48f7d0	                                 not rax	       279	strbuf.h	FUNCTION_137	CALL_2
0x400390f	        0x488d50ff	                      lea rdx, [rax - 1]	       279	strbuf.h	FUNCTION_137	CALL_2
0x4003913	          0x4c89c6	                             mov rsi, r8	       279	strbuf.h	FUNCTION_137	CALL_2
0x4003916	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       279	strbuf.h	FUNCTION_137	CALL_2
0x400391e	      0xe800000000	                          call 0x4003923	       279	strbuf.h	FUNCTION_137	CALL_2
0x4003923	      0xe9b1f5ffff	                           jmp 0x4002ed9	       279	strbuf.h	FUNCTION_137	CALL_2
0x4003928	      0xbf01000000	                              mov edi, 1	      1806	am.c	FUNCTION_49	WHILE_1	CALL_21
0x400392d	      0xe800000000	                          call 0x4003932	      1806	am.c	FUNCTION_49	WHILE_1	CALL_21
0x4003932	        0x488b5d28	            mov rbx, qword [rbp + 0x28] 	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4003936	          0x4889df	                            mov rdi, rbx	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4003939	      0xe833c7ffff	                        call sym.linelen	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x400393e	          0x4189c5	                           mov r13d, eax	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4003941	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x4003946	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x400394b	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x4003950	      0xe800000000	                          call 0x4003955	        54	gettext.h	FUNCTION_87
0x4003955	          0x4989d8	                             mov r8, rbx	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4003958	          0x4489e9	                           mov ecx, r13d	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x400395b	          0x4889c2	                            mov rdx, rax	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x400395e	    0x488b35000000	            mov rsi, qword [0x04003965] 	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4003965	          0x4889ef	                            mov rdi, rbp	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4003968	      0xb800000000	                              mov eax, 0	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x400396d	      0xe8e7d3ffff	                            call sym.say	      1808	am.c	FUNCTION_49	WHILE_1	CALL_24
0x4003972	      0xbe00000000	                              mov esi, 0	      1810	am.c	FUNCTION_49	WHILE_1	CALL_25
0x4003977	          0x4889ef	                            mov rdi, rbp	      1810	am.c	FUNCTION_49	WHILE_1	CALL_25
0x400397a	      0xe8f8d1ffff	                      call sym.run_apply	      1810	am.c	FUNCTION_49	WHILE_1	CALL_25
0x400397f	            0x85c0	                           test eax, eax	      1812	am.c	FUNCTION_49	WHILE_1	IF_9
0x4003981	     0xf850afaffff	                           jne 0x4003391	      1812	am.c	FUNCTION_49	WHILE_1	IF_9
0x4003987	      0xe96ffbffff	                           jmp 0x40034fb	      1812	am.c	FUNCTION_49	WHILE_1	IF_9
0x400398c	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      1317	am.c	FUNCTION_38	CALL_5
0x4003994	      0xe800000000	                          call 0x4003999	      1317	am.c	FUNCTION_38	CALL_5
0x4003999	          0x4c89ef	                            mov rdi, r13	      1318	am.c	FUNCTION_38	CALL_6
0x400399c	      0xe800000000	                          call 0x40039a1	      1318	am.c	FUNCTION_38	CALL_6
0x40039a1	      0xe966efffff	                           jmp 0x400290c	      1318	am.c	FUNCTION_38	CALL_6
0x40039a6	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1292	am.c	FUNCTION_37	CALL_44
0x40039ab	      0xe800000000	                          call 0x40039b0	      1292	am.c	FUNCTION_37	CALL_44
0x40039b0	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      1293	am.c	FUNCTION_37	CALL_45
0x40039b8	      0xe800000000	                          call 0x40039bd	      1293	am.c	FUNCTION_37	CALL_45
0x40039bd	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      1294	am.c	FUNCTION_37	CALL_46
0x40039c5	      0xe800000000	                          call 0x40039ca	      1294	am.c	FUNCTION_37	CALL_46
0x40039ca	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      1295	am.c	FUNCTION_37	CALL_47
0x40039cf	      0xe800000000	                          call 0x40039d4	      1295	am.c	FUNCTION_37	CALL_47
0x40039d4	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1296	am.c	FUNCTION_37	CALL_48
0x40039d9	      0xe800000000	                          call 0x40039de	      1296	am.c	FUNCTION_37	CALL_48
0x40039de	    0x488dbc244001	                  lea rdi, [rsp + 0x140]	      1297	am.c	FUNCTION_37	CALL_49
0x40039e6	      0xe800000000	                          call 0x40039eb	      1297	am.c	FUNCTION_37	CALL_49
0x40039eb	          0x4889ef	                            mov rdi, rbp	      1846	am.c	FUNCTION_49	WHILE_1	CALL_42
0x40039ee	      0xe877ccffff	                        call sym.am_next	      1846	am.c	FUNCTION_49	WHILE_1	CALL_42
0x40039f3	      0xe928fbffff	                           jmp 0x4003520	      1846	am.c	FUNCTION_49	WHILE_1	CALL_42
0x40039f8	    0x488b84245802	           mov rax, qword [rsp + 0x258] 	      1868	am.c	FUNCTION_49
0x4003a00	    0x644833042528	                xor rax, qword fs:[0x28]	      1868	am.c	FUNCTION_49
0x4003a09	            0x7405	                            je 0x4003a10	      1868	am.c	FUNCTION_49
0x4003a0b	      0xe800000000	                          call 0x4003a10	      1868	am.c	FUNCTION_49
0x4003a10	    0x4881c4680200	                          add rsp, 0x268	      1868	am.c	FUNCTION_49
0x4003a17	              0x5b	                                 pop rbx	      1868	am.c	FUNCTION_49
0x4003a18	              0x5d	                                 pop rbp	      1868	am.c	FUNCTION_49
0x4003a19	            0x415c	                                 pop r12	      1868	am.c	FUNCTION_49
0x4003a1b	            0x415d	                                 pop r13	      1868	am.c	FUNCTION_49
0x4003a1d	            0x415e	                                 pop r14	      1868	am.c	FUNCTION_49
0x4003a1f	            0x415f	                                 pop r15	      1868	am.c	FUNCTION_49
0x4003a21	              0xc3	                                     ret	      1868	am.c	FUNCTION_49
am_append_signoff	IF,0:WHILE,0:CALL,3:DO,0:ELSE,0:FOR,0:SWITCH,0:functions,0	29
0x4000084	              0x53	                                push rbx	      1174	am.c	FUNCTION_36
0x4000085	        0x4883ec20	                           sub rsp, 0x20	      1174	am.c	FUNCTION_36
0x4000089	          0x4889fb	                            mov rbx, rdi	      1174	am.c	FUNCTION_36
0x400008c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1174	am.c	FUNCTION_36
0x4000095	      0x4889442418	             mov qword [rsp + 0x18], rax	      1174	am.c	FUNCTION_36
0x400009a	            0x31c0	                            xor eax, eax	      1174	am.c	FUNCTION_36
0x400009c	    0x48c704240000	                      mov qword [rsp], 0	      1175	am.c	FUNCTION_36
0x40000a4	    0x48c744240800	                  mov qword [rsp + 8], 0	      1175	am.c	FUNCTION_36
0x40000ad	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1175	am.c	FUNCTION_36
0x40000b6	        0x488b5730	            mov rdx, qword [rdi + 0x30] 	      1177	am.c	FUNCTION_36	CALL_1
0x40000ba	        0x488b7728	            mov rsi, qword [rdi + 0x28] 	      1177	am.c	FUNCTION_36	CALL_1
0x40000be	          0x4889d1	                            mov rcx, rdx	      1177	am.c	FUNCTION_36	CALL_1
0x40000c1	          0x4889e7	                            mov rdi, rsp	      1177	am.c	FUNCTION_36	CALL_1
0x40000c4	      0xe800000000	                          call 0x40000c9	      1177	am.c	FUNCTION_36	CALL_1
0x40000c9	      0xba00000000	                              mov edx, 0	      1178	am.c	FUNCTION_36	CALL_2
0x40000ce	      0xbe00000000	                              mov esi, 0	      1178	am.c	FUNCTION_36	CALL_2
0x40000d3	          0x4889e7	                            mov rdi, rsp	      1178	am.c	FUNCTION_36	CALL_2
0x40000d6	      0xe800000000	                          call 0x40000db	      1178	am.c	FUNCTION_36	CALL_2
0x40000db	        0x488d7330	                   lea rsi, [rbx + 0x30]	      1179	am.c	FUNCTION_36	CALL_3
0x40000df	          0x4889e7	                            mov rdi, rsp	      1179	am.c	FUNCTION_36	CALL_3
0x40000e2	      0xe800000000	                          call 0x40000e7	      1179	am.c	FUNCTION_36	CALL_3
0x40000e7	        0x48894328	             mov qword [rbx + 0x28], rax	      1179	am.c	FUNCTION_36	CALL_3
0x40000eb	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1180	am.c	FUNCTION_36
0x40000f0	    0x644833042528	                xor rax, qword fs:[0x28]	      1180	am.c	FUNCTION_36
0x40000f9	            0x7405	                            je 0x4000100	      1180	am.c	FUNCTION_36
0x40000fb	      0xe800000000	                          call 0x4000100	      1180	am.c	FUNCTION_36
0x4000100	        0x4883c420	                           add rsp, 0x20	      1180	am.c	FUNCTION_36
0x4000104	              0x5b	                                 pop rbx	      1180	am.c	FUNCTION_36
0x4000105	              0xc3	                                     ret	      1180	am.c	FUNCTION_36
parse_opt_patchformat	IF,5:WHILE,0:CALL,6:DO,0:ELSE,5:FOR,0:SWITCH,0:functions,0	71
0x4000106	          0x4889f2	                            mov rdx, rsi	      2160	am.c	FUNCTION_59
0x4000109	        0x4c8b4710	              mov r8, qword [rdi + 0x10]	      2161	am.c	FUNCTION_59
0x400010d	      0xbf00000000	                              mov edi, 0	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x4000112	      0xb905000000	                              mov ecx, 5	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x4000117	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x4000119	           0xf97c0	                                 seta al	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x400011c	           0xf92c1	                                 setb cl	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x400011f	            0x29c8	                            sub eax, ecx	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x4000121	           0xfbec0	                           movsx eax, al	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x4000124	            0x85c0	                           test eax, eax	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x4000126	            0x7508	                           jne 0x4000130	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x4000128	    0x41c700010000	                       mov dword [r8], 1	      2164	am.c	FUNCTION_59	IF_1
0x400012f	              0xc3	                                     ret	      2176	am.c	FUNCTION_59
0x4000130	      0xbf00000000	                              mov edi, 0	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4000135	      0xb906000000	                              mov ecx, 6	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x400013a	          0x4889d6	                            mov rsi, rdx	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x400013d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x400013f	           0xf97c0	                                 seta al	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4000142	           0xf92c1	                                 setb cl	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4000145	            0x29c8	                            sub eax, ecx	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4000147	           0xfbec0	                           movsx eax, al	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x400014a	            0x85c0	                           test eax, eax	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x400014c	            0x7508	                           jne 0x4000156	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x400014e	    0x41c700020000	                       mov dword [r8], 2	      2166	am.c	FUNCTION_59	ELSE_1	IF_2
0x4000155	              0xc3	                                     ret	      2166	am.c	FUNCTION_59	ELSE_1	IF_2
0x4000156	      0xbf00000000	                              mov edi, 0	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x400015b	      0xb90d000000	                            mov ecx, 0xd	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x4000160	          0x4889d6	                            mov rsi, rdx	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x4000163	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x4000165	           0xf97c0	                                 seta al	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x4000168	           0xf92c1	                                 setb cl	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x400016b	            0x29c8	                            sub eax, ecx	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x400016d	           0xfbec0	                           movsx eax, al	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x4000170	            0x85c0	                           test eax, eax	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x4000172	            0x7508	                           jne 0x400017c	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x4000174	    0x41c700030000	                       mov dword [r8], 3	      2168	am.c	FUNCTION_59	ELSE_2	IF_3
0x400017b	              0xc3	                                     ret	      2168	am.c	FUNCTION_59	ELSE_2	IF_3
0x400017c	          0x803a68	                    cmp byte [rdx], 0x68	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x400017f	            0x7519	                           jne 0x400019a	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x4000181	        0x807a0167	                cmp byte [rdx + 1], 0x67	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x4000185	            0x7513	                           jne 0x400019a	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x4000187	        0x807a0200	                   cmp byte [rdx + 2], 0	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x400018b	            0x750d	                           jne 0x400019a	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x400018d	    0x41c700040000	                       mov dword [r8], 4	      2170	am.c	FUNCTION_59	ELSE_3	IF_4
0x4000194	      0xb800000000	                              mov eax, 0	      2175	am.c	FUNCTION_59
0x4000199	              0xc3	                                     ret	      2175	am.c	FUNCTION_59
0x400019a	      0xbf00000000	                              mov edi, 0	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x400019f	      0xb907000000	                              mov ecx, 7	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x40001a4	          0x4889d6	                            mov rsi, rdx	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x40001a7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x40001a9	           0xf97c0	                                 seta al	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x40001ac	           0xf92c1	                                 setb cl	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x40001af	            0x29c8	                            sub eax, ecx	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x40001b1	           0xfbec0	                           movsx eax, al	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x40001b4	            0x85c0	                           test eax, eax	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x40001b6	            0x7508	                           jne 0x40001c0	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x40001b8	    0x41c700050000	                       mov dword [r8], 5	      2172	am.c	FUNCTION_59	ELSE_4	IF_5
0x40001bf	              0xc3	                                     ret	      2172	am.c	FUNCTION_59	ELSE_4	IF_5
0x40001c0	              0x53	                                push rbx	      2160	am.c	FUNCTION_59
0x40001c1	          0x4889d3	                            mov rbx, rdx	      2160	am.c	FUNCTION_59
0x40001c4	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x40001c9	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x40001ce	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x40001d3	      0xe800000000	                          call 0x40001d8	        54	gettext.h	FUNCTION_87
0x40001d8	          0x4889de	                            mov rsi, rbx	      2174	am.c	FUNCTION_59	CALL_6
0x40001db	          0x4889c7	                            mov rdi, rax	      2174	am.c	FUNCTION_59	CALL_6
0x40001de	      0xb800000000	                              mov eax, 0	      2174	am.c	FUNCTION_59	CALL_6
0x40001e3	      0xe800000000	                          call 0x40001e8	      2174	am.c	FUNCTION_59	CALL_6
0x40001e8	      0xb8ffffffff	                     mov eax, 0xffffffff	      2174	am.c	FUNCTION_59	CALL_6
0x40001ed	              0x5b	                                 pop rbx	      2176	am.c	FUNCTION_59
0x40001ee	              0xc3	                                     ret	      2176	am.c	FUNCTION_59
say	IF,1:WHILE,0:CALL,4:DO,0:ELSE,0:FOR,0:SWITCH,0:functions,0	41
0x4000d59	              0x53	                                push rbx	       212	am.c	FUNCTION_10
0x4000d5a	    0x4881ecd00000	                           sub rsp, 0xd0	       212	am.c	FUNCTION_10
0x4000d61	          0x4889f3	                            mov rbx, rsi	       212	am.c	FUNCTION_10
0x4000d64	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       212	am.c	FUNCTION_10
0x4000d69	      0x4c89442440	              mov qword [rsp + 0x40], r8	       212	am.c	FUNCTION_10
0x4000d6e	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       212	am.c	FUNCTION_10
0x4000d73	            0x84c0	                             test al, al	       212	am.c	FUNCTION_10
0x4000d75	            0x7437	                            je 0x4000dae	       212	am.c	FUNCTION_10
0x4000d77	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       212	am.c	FUNCTION_10
0x4000d7c	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       212	am.c	FUNCTION_10
0x4000d81	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       212	am.c	FUNCTION_10
0x4000d86	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       212	am.c	FUNCTION_10
0x4000d8e	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       212	am.c	FUNCTION_10
0x4000d96	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       212	am.c	FUNCTION_10
0x4000d9e	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       212	am.c	FUNCTION_10
0x4000da6	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       212	am.c	FUNCTION_10
0x4000dae	    0x64488b042528	                mov rax, qword fs:[0x28]	       212	am.c	FUNCTION_10
0x4000db7	      0x4889442418	             mov qword [rsp + 0x18], rax	       212	am.c	FUNCTION_10
0x4000dbc	            0x31c0	                            xor eax, eax	       212	am.c	FUNCTION_10
0x4000dbe	    0xc70424180000	                   mov dword [rsp], 0x18	       215	am.c	FUNCTION_10	CALL_1
0x4000dc5	    0xc74424043000	               mov dword [rsp + 4], 0x30	       215	am.c	FUNCTION_10	CALL_1
0x4000dcd	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       215	am.c	FUNCTION_10	CALL_1
0x4000dd5	      0x4889442408	                mov qword [rsp + 8], rax	       215	am.c	FUNCTION_10	CALL_1
0x4000dda	      0x488d442420	                   lea rax, [rsp + 0x20]	       215	am.c	FUNCTION_10	CALL_1
0x4000ddf	      0x4889442410	             mov qword [rsp + 0x10], rax	       215	am.c	FUNCTION_10	CALL_1
0x4000de4	        0x837f5800	               cmp dword [rdi + 0x58], 0	       216	am.c	FUNCTION_10	IF_1
0x4000de8	            0x751d	                           jne 0x4000e07	       216	am.c	FUNCTION_10	IF_1
0x4000dea	          0x4889e1	                            mov rcx, rsp	       127	stdio2.h	FUNCTION_121	CALL_1
0x4000ded	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_121	CALL_1
0x4000df2	          0x4889df	                            mov rdi, rbx	       127	stdio2.h	FUNCTION_121	CALL_1
0x4000df5	      0xe800000000	                          call 0x4000dfa	       127	stdio2.h	FUNCTION_121	CALL_1
0x4000dfa	          0x4889de	                            mov rsi, rbx	       218	am.c	FUNCTION_10	IF_1	CALL_3
0x4000dfd	      0xbf0a000000	                            mov edi, 0xa	       218	am.c	FUNCTION_10	IF_1	CALL_3
0x4000e02	      0xe800000000	                          call 0x4000e07	       218	am.c	FUNCTION_10	IF_1	CALL_3
0x4000e07	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       221	am.c	FUNCTION_10
0x4000e0c	    0x644833042528	                xor rax, qword fs:[0x28]	       221	am.c	FUNCTION_10
0x4000e15	            0x7405	                            je 0x4000e1c	       221	am.c	FUNCTION_10
0x4000e17	      0xe800000000	                          call 0x4000e1c	       221	am.c	FUNCTION_10
0x4000e1c	    0x4881c4d00000	                           add rsp, 0xd0	       221	am.c	FUNCTION_10
0x4000e23	              0x5b	                                 pop rbx	       221	am.c	FUNCTION_10
0x4000e24	              0xc3	                                     ret	       221	am.c	FUNCTION_10
split_mail_conv	IF,7:WHILE,0:CALL,9:DO,0:ELSE,1:FOR,1:SWITCH,0:functions,0	111
0x400028a	            0x4157	                                push r15	       752	am.c	FUNCTION_26
0x400028c	            0x4156	                                push r14	       752	am.c	FUNCTION_26
0x400028e	            0x4155	                                push r13	       752	am.c	FUNCTION_26
0x4000290	            0x4154	                                push r12	       752	am.c	FUNCTION_26
0x4000292	              0x55	                                push rbp	       752	am.c	FUNCTION_26
0x4000293	              0x53	                                push rbx	       752	am.c	FUNCTION_26
0x4000294	        0x4883ec18	                           sub rsp, 0x18	       752	am.c	FUNCTION_26
0x4000298	        0x48893c24	                    mov qword [rsp], rdi	       752	am.c	FUNCTION_26
0x400029c	          0x4989f6	                            mov r14, rsi	       752	am.c	FUNCTION_26
0x400029f	          0x4989d5	                            mov r13, rdx	       752	am.c	FUNCTION_26
0x40002a2	        0x894c240c	              mov dword [rsp + 0xc], ecx	       752	am.c	FUNCTION_26
0x40002a6	          0x488b3a	                    mov rdi, qword [rdx]	       756	am.c	FUNCTION_26	IF_1
0x40002a9	          0x4885ff	                           test rdi, rdi	       756	am.c	FUNCTION_26	IF_1
0x40002ac	            0x7516	                           jne 0x40002c4	       756	am.c	FUNCTION_26	IF_1
0x40002ae	    0x488b3d000000	            mov rdi, qword [0x040002b5] 	       759	am.c	FUNCTION_26	FOR_1
0x40002b5	          0x4885ff	                           test rdi, rdi	       759	am.c	FUNCTION_26	FOR_1
0x40002b8	     0xf844b010000	                            je 0x4000409	       759	am.c	FUNCTION_26	FOR_1
0x40002be	    0x41bd00000000	                             mov r13d, 0	       757	am.c	FUNCTION_26	IF_1
0x40002c4	    0x41bc00000000	                             mov r12d, 0	       757	am.c	FUNCTION_26	IF_1
0x40002ca	          0x803f2d	                    cmp byte [rdi], 0x2d	       764	am.c	FUNCTION_26	FOR_1	IF_2	CALL_1
0x40002cd	            0x750f	                           jne 0x40002de	       764	am.c	FUNCTION_26	FOR_1	IF_2	CALL_1
0x40002cf	        0x807f0100	                   cmp byte [rdi + 1], 0	       764	am.c	FUNCTION_26	FOR_1	IF_2	CALL_1
0x40002d3	            0x7509	                           jne 0x40002de	       764	am.c	FUNCTION_26	FOR_1	IF_2	CALL_1
0x40002d5	    0x488b1d000000	            mov rbx, qword [0x040002dc] 	       765	am.c	FUNCTION_26	FOR_1	IF_2
0x40002dc	            0xeb0d	                           jmp 0x40002eb	       765	am.c	FUNCTION_26	FOR_1	IF_2
0x40002de	      0xbe00000000	                              mov esi, 0	       767	am.c	FUNCTION_26	FOR_1	ELSE_1
0x40002e3	      0xe800000000	                          call 0x40002e8	       767	am.c	FUNCTION_26	FOR_1	ELSE_1
0x40002e8	          0x4889c3	                            mov rbx, rax	       767	am.c	FUNCTION_26	FOR_1	ELSE_1
0x40002eb	          0x4885db	                           test rbx, rbx	       769	am.c	FUNCTION_26	FOR_1	IF_3
0x40002ee	            0x7532	                           jne 0x4000322	       769	am.c	FUNCTION_26	FOR_1	IF_3
0x40002f0	        0x498b5d00	                    mov rbx, qword [r13]	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_2
0x40002f4	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x40002f9	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x40002fe	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x4000303	      0xe800000000	                          call 0x4000308	        54	gettext.h	FUNCTION_87
0x4000308	          0x4889de	                            mov rsi, rbx	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_2
0x400030b	          0x4889c7	                            mov rdi, rax	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_2
0x400030e	      0xb800000000	                              mov eax, 0	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_2
0x4000313	      0xe800000000	                          call 0x4000318	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_2
0x4000318	      0xb8ffffffff	                     mov eax, 0xffffffff	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_2
0x400031d	      0xe9fe000000	                           jmp 0x4000420	       770	am.c	FUNCTION_26	FOR_1	IF_3	CALL_2
0x4000322	        0x4183c401	                             add r12d, 1	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x4000326	        0x418b564c	            mov edx, dword [r14 + 0x4c] 	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x400032a	          0x4489e1	                           mov ecx, r12d	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x400032d	          0x498b36	                    mov rsi, qword [r14]	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x4000330	      0xbf00000000	                              mov edi, 0	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x4000335	      0xb800000000	                              mov eax, 0	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x400033a	      0xe800000000	                          call 0x400033f	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x400033f	          0x4989c7	                            mov r15, rax	       773	am.c	FUNCTION_26	FOR_1	CALL_3
0x4000342	      0xbe00000000	                              mov esi, 0	       775	am.c	FUNCTION_26	FOR_1
0x4000347	          0x4889c7	                            mov rdi, rax	       775	am.c	FUNCTION_26	FOR_1
0x400034a	      0xe800000000	                          call 0x400034f	       775	am.c	FUNCTION_26	FOR_1
0x400034f	          0x4889c5	                            mov rbp, rax	       775	am.c	FUNCTION_26	FOR_1
0x4000352	          0x4885c0	                           test rax, rax	       776	am.c	FUNCTION_26	FOR_1	IF_4
0x4000355	            0x753f	                           jne 0x4000396	       776	am.c	FUNCTION_26	FOR_1	IF_4
0x4000357	    0x483b1d000000	            cmp rbx, qword [0x0400035e] 	       777	am.c	FUNCTION_26	FOR_1	IF_4	IF_5
0x400035e	            0x7408	                            je 0x4000368	       777	am.c	FUNCTION_26	FOR_1	IF_4	IF_5
0x4000360	          0x4889df	                            mov rdi, rbx	       778	am.c	FUNCTION_26	FOR_1	IF_4	CALL_4
0x4000363	      0xe800000000	                          call 0x4000368	       778	am.c	FUNCTION_26	FOR_1	IF_4	CALL_4
0x4000368	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x400036d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x4000372	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x4000377	      0xe800000000	                          call 0x400037c	        54	gettext.h	FUNCTION_87
0x400037c	          0x4c89fe	                            mov rsi, r15	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_5
0x400037f	          0x4889c7	                            mov rdi, rax	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_5
0x4000382	      0xb800000000	                              mov eax, 0	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_5
0x4000387	      0xe800000000	                          call 0x400038c	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_5
0x400038c	      0xb8ffffffff	                     mov eax, 0xffffffff	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_5
0x4000391	      0xe98a000000	                           jmp 0x4000420	       779	am.c	FUNCTION_26	FOR_1	IF_4	CALL_5
0x4000396	        0x8b54240c	              mov edx, dword [rsp + 0xc]	       783	am.c	FUNCTION_26	FOR_1	CALL_6
0x400039a	          0x4889de	                            mov rsi, rbx	       783	am.c	FUNCTION_26	FOR_1	CALL_6
0x400039d	          0x4889c7	                            mov rdi, rax	       783	am.c	FUNCTION_26	FOR_1	CALL_6
0x40003a0	        0x488b0424	                    mov rax, qword [rsp]	       783	am.c	FUNCTION_26	FOR_1	CALL_6
0x40003a4	            0xffd0	                                call rax	       783	am.c	FUNCTION_26	FOR_1	CALL_6
0x40003a6	          0x4189c7	                           mov r15d, eax	       783	am.c	FUNCTION_26	FOR_1	CALL_6
0x40003a9	          0x4889ef	                            mov rdi, rbp	       785	am.c	FUNCTION_26	FOR_1	CALL_7
0x40003ac	      0xe800000000	                          call 0x40003b1	       785	am.c	FUNCTION_26	FOR_1	CALL_7
0x40003b1	    0x483b1d000000	            cmp rbx, qword [0x040003b8] 	       786	am.c	FUNCTION_26	FOR_1	IF_6
0x40003b8	            0x7408	                            je 0x40003c2	       786	am.c	FUNCTION_26	FOR_1	IF_6
0x40003ba	          0x4889df	                            mov rdi, rbx	       787	am.c	FUNCTION_26	FOR_1	CALL_8
0x40003bd	      0xe800000000	                          call 0x40003c2	       787	am.c	FUNCTION_26	FOR_1	CALL_8
0x40003c2	          0x4585ff	                         test r15d, r15d	       789	am.c	FUNCTION_26	FOR_1	IF_7
0x40003c5	            0x742f	                            je 0x40003f6	       789	am.c	FUNCTION_26	FOR_1	IF_7
0x40003c7	        0x498b5d00	                    mov rbx, qword [r13]	       790	am.c	FUNCTION_26	FOR_1	CALL_9
0x40003cb	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x40003d0	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x40003d5	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x40003da	      0xe800000000	                          call 0x40003df	        54	gettext.h	FUNCTION_87
0x40003df	          0x4889de	                            mov rsi, rbx	       790	am.c	FUNCTION_26	FOR_1	CALL_9
0x40003e2	          0x4889c7	                            mov rdi, rax	       790	am.c	FUNCTION_26	FOR_1	CALL_9
0x40003e5	      0xb800000000	                              mov eax, 0	       790	am.c	FUNCTION_26	FOR_1	CALL_9
0x40003ea	      0xe800000000	                          call 0x40003ef	       790	am.c	FUNCTION_26	FOR_1	CALL_9
0x40003ef	      0xb8ffffffff	                     mov eax, 0xffffffff	       790	am.c	FUNCTION_26	FOR_1	CALL_9
0x40003f4	            0xeb2a	                           jmp 0x4000420	       790	am.c	FUNCTION_26	FOR_1	CALL_9
0x40003f6	        0x4983c508	                              add r13, 8	       759	am.c	FUNCTION_26	FOR_1
0x40003fa	        0x498b7d00	                    mov rdi, qword [r13]	       759	am.c	FUNCTION_26	FOR_1
0x40003fe	          0x4885ff	                           test rdi, rdi	       759	am.c	FUNCTION_26	FOR_1
0x4000401	     0xf85c3feffff	                           jne 0x40002ca	       759	am.c	FUNCTION_26	FOR_1
0x4000407	            0xeb06	                           jmp 0x400040f	       759	am.c	FUNCTION_26	FOR_1
0x4000409	    0x41bc00000000	                             mov r12d, 0	       759	am.c	FUNCTION_26	FOR_1
0x400040f	    0x41c746080100	                  mov dword [r14 + 8], 1	       793	am.c	FUNCTION_26
0x4000417	        0x4589660c	             mov dword [r14 + 0xc], r12d	       794	am.c	FUNCTION_26
0x400041b	      0xb800000000	                              mov eax, 0	       795	am.c	FUNCTION_26
0x4000420	        0x4883c418	                           add rsp, 0x18	       796	am.c	FUNCTION_26
0x4000424	              0x5b	                                 pop rbx	       796	am.c	FUNCTION_26
0x4000425	              0x5d	                                 pop rbp	       796	am.c	FUNCTION_26
0x4000426	            0x415c	                                 pop r12	       796	am.c	FUNCTION_26
0x4000428	            0x415d	                                 pop r13	       796	am.c	FUNCTION_26
0x400042a	            0x415e	                                 pop r14	       796	am.c	FUNCTION_26
0x400042c	            0x415f	                                 pop r15	       796	am.c	FUNCTION_26
0x400042e	              0xc3	                                     ret	       796	am.c	FUNCTION_26
run_apply	IF,7:WHILE,0:CALL,14:DO,0:ELSE,1:FOR,0:SWITCH,0:functions,0	104
0x4000b77	            0x4154	                                push r12	      1457	am.c	FUNCTION_43
0x4000b79	              0x55	                                push rbp	      1457	am.c	FUNCTION_43
0x4000b7a	              0x53	                                push rbx	      1457	am.c	FUNCTION_43
0x4000b7b	    0x4881ec800100	                          sub rsp, 0x180	      1457	am.c	FUNCTION_43
0x4000b82	          0x4989fc	                            mov r12, rdi	      1457	am.c	FUNCTION_43
0x4000b85	          0x4889f3	                            mov rbx, rsi	      1457	am.c	FUNCTION_43
0x4000b88	    0x64488b042528	                mov rax, qword fs:[0x28]	      1457	am.c	FUNCTION_43
0x4000b91	    0x488984247801	            mov qword [rsp + 0x178], rax	      1457	am.c	FUNCTION_43
0x4000b99	            0x31c0	                            xor eax, eax	      1457	am.c	FUNCTION_43
0x4000b9b	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1458	am.c	FUNCTION_43
0x4000ba4	    0xc74424180000	               mov dword [rsp + 0x18], 0	      1458	am.c	FUNCTION_43
0x4000bac	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      1458	am.c	FUNCTION_43
0x4000bb4	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1459	am.c	FUNCTION_43
0x4000bbd	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1459	am.c	FUNCTION_43
0x4000bc5	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      1459	am.c	FUNCTION_43
0x4000bcd	    0xc74424080000	                  mov dword [rsp + 8], 0	      1462	am.c	FUNCTION_43
0x4000bd5	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1463	am.c	FUNCTION_43
0x4000bdd	      0xbe00000000	                              mov esi, 0	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x4000be2	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x4000be7	      0xe800000000	                          call 0x4000bec	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x4000bec	            0x85c0	                           test eax, eax	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x4000bee	            0x740f	                            je 0x4000bff	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x4000bf0	      0xbf00000000	                              mov edi, 0	      1466	am.c	FUNCTION_43	CALL_2
0x4000bf5	      0xb800000000	                              mov eax, 0	      1466	am.c	FUNCTION_43	CALL_2
0x4000bfa	      0xe800000000	                          call 0x4000bff	      1466	am.c	FUNCTION_43	CALL_2
0x4000bff	      0xbe00000000	                              mov esi, 0	      1468	am.c	FUNCTION_43	CALL_3
0x4000c04	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1468	am.c	FUNCTION_43	CALL_3
0x4000c09	      0xe800000000	                          call 0x4000c0e	      1468	am.c	FUNCTION_43	CALL_3
0x4000c0e	      0x498b742470	            mov rsi, qword [r12 + 0x70] 	      1469	am.c	FUNCTION_43	CALL_4
0x4000c13	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1469	am.c	FUNCTION_43	CALL_4
0x4000c18	      0xe800000000	                          call 0x4000c1d	      1469	am.c	FUNCTION_43	CALL_4
0x4000c1d	    0x41b900000000	                              mov r9d, 0	      1471	am.c	FUNCTION_43	CALL_5
0x4000c23	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	      1471	am.c	FUNCTION_43	CALL_5
0x4000c28	      0x488d4c2408	                      lea rcx, [rsp + 8]	      1471	am.c	FUNCTION_43	CALL_5
0x4000c2d	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1471	am.c	FUNCTION_43	CALL_5
0x4000c32	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1471	am.c	FUNCTION_43	CALL_5
0x4000c37	        0x8b7c2428	            mov edi, dword [rsp + 0x28] 	      1471	am.c	FUNCTION_43	CALL_5
0x4000c3b	      0xe800000000	                          call 0x4000c40	      1471	am.c	FUNCTION_43	CALL_5
0x4000c40	            0x85c0	                           test eax, eax	      1475	am.c	FUNCTION_43	IF_2
0x4000c42	            0x740f	                            je 0x4000c53	      1475	am.c	FUNCTION_43	IF_2
0x4000c44	      0xbf00000000	                              mov edi, 0	      1476	am.c	FUNCTION_43	CALL_6
0x4000c49	      0xb800000000	                              mov eax, 0	      1476	am.c	FUNCTION_43	CALL_6
0x4000c4e	      0xe800000000	                          call 0x4000c53	      1476	am.c	FUNCTION_43	CALL_6
0x4000c53	          0x4885db	                           test rbx, rbx	      1478	am.c	FUNCTION_43	IF_3
0x4000c56	            0x7412	                            je 0x4000c6a	      1478	am.c	FUNCTION_43	IF_3
0x4000c58	    0x48899c248000	             mov qword [rsp + 0x80], rbx	      1479	am.c	FUNCTION_43	IF_3
0x4000c60	    0xc74424440100	               mov dword [rsp + 0x44], 1	      1480	am.c	FUNCTION_43	IF_3
0x4000c68	            0xeb1b	                           jmp 0x4000c85	      1480	am.c	FUNCTION_43	IF_3
0x4000c6a	    0xc744244c0100	               mov dword [rsp + 0x4c], 1	      1482	am.c	FUNCTION_43	ELSE_1
0x4000c72	    0x41837c245400	               cmp dword [r12 + 0x54], 0	      1488	am.c	FUNCTION_43	IF_4
0x4000c78	            0x740b	                            je 0x4000c85	      1488	am.c	FUNCTION_43	IF_4
0x4000c7a	    0xc78424880000	     mov dword [rsp + 0x88], 0xffffffff 	      1489	am.c	FUNCTION_43	IF_4
0x4000c85	        0x8b742408	                mov esi, dword [rsp + 8]	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x4000c89	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x4000c8e	      0xe800000000	                          call 0x4000c93	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x4000c93	            0x89c5	                            mov ebp, eax	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x4000c95	            0x85c0	                           test eax, eax	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x4000c97	            0x740f	                            je 0x4000ca8	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x4000c99	      0xbf00000000	                              mov edi, 0	      1492	am.c	FUNCTION_43	CALL_8
0x4000c9e	      0xb800000000	                              mov eax, 0	      1492	am.c	FUNCTION_43	CALL_8
0x4000ca3	      0xe800000000	                          call 0x4000ca8	      1492	am.c	FUNCTION_43	CALL_8
0x4000ca8	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4000cad	        0x498b3424	                    mov rsi, qword [r12]	       183	am.c	FUNCTION_6	CALL_1
0x4000cb1	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4000cb6	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x4000cbb	      0xe800000000	                          call 0x4000cc0	       183	am.c	FUNCTION_6	CALL_1
0x4000cc0	          0x4889c6	                            mov rsi, rax	      1494	am.c	FUNCTION_43	CALL_10
0x4000cc3	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1494	am.c	FUNCTION_43	CALL_10
0x4000cc8	      0xe800000000	                          call 0x4000ccd	      1494	am.c	FUNCTION_43	CALL_10
0x4000ccd	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      1496	am.c	FUNCTION_43	CALL_11
0x4000cd1	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1496	am.c	FUNCTION_43	CALL_11
0x4000cd6	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      1496	am.c	FUNCTION_43	CALL_11
0x4000cda	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1496	am.c	FUNCTION_43	CALL_11
0x4000cdf	      0xe800000000	                          call 0x4000ce4	      1496	am.c	FUNCTION_43	CALL_11
0x4000ce4	          0x4189c4	                           mov r12d, eax	      1496	am.c	FUNCTION_43	CALL_11
0x4000ce7	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1498	am.c	FUNCTION_43	CALL_12
0x4000cec	      0xe800000000	                          call 0x4000cf1	      1498	am.c	FUNCTION_43	CALL_12
0x4000cf1	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1499	am.c	FUNCTION_43	CALL_13
0x4000cf6	      0xe800000000	                          call 0x4000cfb	      1499	am.c	FUNCTION_43	CALL_13
0x4000cfb	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1500	am.c	FUNCTION_43	CALL_14
0x4000d00	      0xe800000000	                          call 0x4000d05	      1500	am.c	FUNCTION_43	CALL_14
0x4000d05	          0x4585e4	                         test r12d, r12d	      1502	am.c	FUNCTION_43	IF_6
0x4000d08	            0x7526	                           jne 0x4000d30	      1502	am.c	FUNCTION_43	IF_6
0x4000d0a	          0x4885db	                           test rbx, rbx	      1505	am.c	FUNCTION_43	IF_7
0x4000d0d	            0x7424	                            je 0x4000d33	      1505	am.c	FUNCTION_43	IF_7
0x4000d0f	      0xbf00000000	                              mov edi, 0	      1507	am.c	FUNCTION_43	IF_7
0x4000d14	      0xe800000000	                          call 0x4000d19	      1507	am.c	FUNCTION_43	IF_7
0x4000d19	      0xe800000000	                          call 0x4000d1e	      1508	am.c	FUNCTION_43	IF_7
0x4000d1e	          0x4889c2	                            mov rdx, rax	      1508	am.c	FUNCTION_43	IF_7
0x4000d21	          0x4889de	                            mov rsi, rbx	      1508	am.c	FUNCTION_43	IF_7
0x4000d24	      0xbf00000000	                              mov edi, 0	      1508	am.c	FUNCTION_43	IF_7
0x4000d29	      0xe800000000	                          call 0x4000d2e	      1508	am.c	FUNCTION_43	IF_7
0x4000d2e	            0xeb03	                           jmp 0x4000d33	      1508	am.c	FUNCTION_43	IF_7
0x4000d30	          0x4489e5	                           mov ebp, r12d	      1503	am.c	FUNCTION_43	IF_6
0x4000d33	            0x89e8	                            mov eax, ebp	      1512	am.c	FUNCTION_43
0x4000d35	    0x488b9c247801	           mov rbx, qword [rsp + 0x178] 	      1512	am.c	FUNCTION_43
0x4000d3d	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1512	am.c	FUNCTION_43
0x4000d46	            0x7405	                            je 0x4000d4d	      1512	am.c	FUNCTION_43
0x4000d48	      0xe800000000	                          call 0x4000d4d	      1512	am.c	FUNCTION_43
0x4000d4d	    0x4881c4800100	                          add rsp, 0x180	      1512	am.c	FUNCTION_43
0x4000d54	              0x5b	                                 pop rbx	      1512	am.c	FUNCTION_43
0x4000d55	              0x5d	                                 pop rbp	      1512	am.c	FUNCTION_43
0x4000d56	            0x415c	                                 pop r12	      1512	am.c	FUNCTION_43
0x4000d58	              0xc3	                                     ret	      1512	am.c	FUNCTION_43
am_state_release	IF,0:WHILE,0:CALL,6:DO,0:ELSE,0:FOR,0:SWITCH,0:functions,0	16
0x400042f	              0x53	                                push rbx	       169	am.c	FUNCTION_5
0x4000430	          0x4889fb	                            mov rbx, rdi	       169	am.c	FUNCTION_5
0x4000433	          0x488b3f	                    mov rdi, qword [rdi]	       170	am.c	FUNCTION_5	CALL_1
0x4000436	      0xe800000000	                          call 0x400043b	       170	am.c	FUNCTION_5	CALL_1
0x400043b	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       171	am.c	FUNCTION_5	CALL_2
0x400043f	      0xe800000000	                          call 0x4000444	       171	am.c	FUNCTION_5	CALL_2
0x4000444	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       172	am.c	FUNCTION_5	CALL_3
0x4000448	      0xe800000000	                          call 0x400044d	       172	am.c	FUNCTION_5	CALL_3
0x400044d	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       173	am.c	FUNCTION_5	CALL_4
0x4000451	      0xe800000000	                          call 0x4000456	       173	am.c	FUNCTION_5	CALL_4
0x4000456	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       174	am.c	FUNCTION_5	CALL_5
0x400045a	      0xe800000000	                          call 0x400045f	       174	am.c	FUNCTION_5	CALL_5
0x400045f	        0x488d7b70	                   lea rdi, [rbx + 0x70]	       175	am.c	FUNCTION_5	CALL_6
0x4000463	      0xe800000000	                          call 0x4000468	       175	am.c	FUNCTION_5	CALL_6
0x4000468	              0x5b	                                 pop rbx	       176	am.c	FUNCTION_5
0x4000469	              0xc3	                                     ret	       176	am.c	FUNCTION_5
read_state_file	IF,3:WHILE,0:CALL,6:DO,0:ELSE,0:FOR,0:SWITCH,0:functions,0	63
0x4001ec1	            0x4155	                                push r13	       246	am.c	FUNCTION_12
0x4001ec3	            0x4154	                                push r12	       246	am.c	FUNCTION_12
0x4001ec5	              0x55	                                push rbp	       246	am.c	FUNCTION_12
0x4001ec6	              0x53	                                push rbx	       246	am.c	FUNCTION_12
0x4001ec7	        0x4883ec08	                              sub rsp, 8	       246	am.c	FUNCTION_12
0x4001ecb	          0x4889fb	                            mov rbx, rdi	       246	am.c	FUNCTION_12
0x4001ece	          0x4889f5	                            mov rbp, rsi	       246	am.c	FUNCTION_12
0x4001ed1	          0x4989d4	                            mov r12, rdx	       246	am.c	FUNCTION_12
0x4001ed4	          0x4189cd	                           mov r13d, ecx	       246	am.c	FUNCTION_12
0x4001ed7	    0x48c747080000	                  mov qword [rdi + 8], 0	       164	strbuf.h	FUNCTION_135
0x4001edf	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       165	strbuf.h	FUNCTION_135	IF_2
0x4001ee3	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_135	IF_2
0x4001ee9	            0x7405	                            je 0x4001ef0	       165	strbuf.h	FUNCTION_135	IF_2
0x4001eeb	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_135	IF_2
0x4001eee	            0xeb22	                           jmp 0x4001f12	       166	strbuf.h	FUNCTION_135	IF_2
0x4001ef0	    0x803d00000000	                cmp byte [0x04001ef7], 0	       168	strbuf.h	FUNCTION_135	CALL_2
0x4001ef7	            0x7419	                            je 0x4001f12	       168	strbuf.h	FUNCTION_135	CALL_2
0x4001ef9	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_135	CALL_2
0x4001efe	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_135	CALL_2
0x4001f03	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_135	CALL_2
0x4001f08	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_135	CALL_2
0x4001f0d	      0xe800000000	                          call 0x4001f12	       168	strbuf.h	FUNCTION_135	CALL_2
0x4001f12	          0x4c89e2	                            mov rdx, r12	       183	am.c	FUNCTION_6	CALL_1
0x4001f15	        0x488b7500	                    mov rsi, qword [rbp]	       183	am.c	FUNCTION_6	CALL_1
0x4001f19	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001f1e	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001f23	      0xe800000000	                          call 0x4001f28	       183	am.c	FUNCTION_6	CALL_1
0x4001f28	      0xba00000000	                              mov edx, 0	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001f2d	          0x4889c6	                            mov rsi, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001f30	          0x4889df	                            mov rdi, rbx	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001f33	      0xe800000000	                          call 0x4001f38	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001f38	          0x4885c0	                           test rax, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001f3b	            0x7812	                            js 0x4001f4f	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001f3d	          0x4585ed	                         test r13d, r13d	       250	am.c	FUNCTION_12	IF_1	IF_2
0x4001f40	            0x7408	                            je 0x4001f4a	       250	am.c	FUNCTION_12	IF_1	IF_2
0x4001f42	          0x4889df	                            mov rdi, rbx	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x4001f45	      0xe800000000	                          call 0x4001f4a	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x4001f4a	          0x8b4308	                mov eax, dword [rbx + 8]	       253	am.c	FUNCTION_12	IF_1
0x4001f4d	            0xeb4c	                           jmp 0x4001f9b	       253	am.c	FUNCTION_12	IF_1
0x4001f4f	      0xe800000000	                          call 0x4001f54	       256	am.c	FUNCTION_12	IF_3
0x4001f54	          0x833802	                      cmp dword [rax], 2	       256	am.c	FUNCTION_12	IF_3
0x4001f57	            0x743d	                            je 0x4001f96	       256	am.c	FUNCTION_12	IF_3
0x4001f59	          0x4c89e2	                            mov rdx, r12	       183	am.c	FUNCTION_6	CALL_1
0x4001f5c	        0x488b7500	                    mov rsi, qword [rbp]	       183	am.c	FUNCTION_6	CALL_1
0x4001f60	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001f65	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001f6a	      0xe800000000	                          call 0x4001f6f	       183	am.c	FUNCTION_6	CALL_1
0x4001f6f	          0x4889c3	                            mov rbx, rax	       183	am.c	FUNCTION_6	CALL_1
0x4001f72	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x4001f77	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x4001f7c	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x4001f81	      0xe800000000	                          call 0x4001f86	        54	gettext.h	FUNCTION_87
0x4001f86	          0x4889de	                            mov rsi, rbx	       259	am.c	FUNCTION_12	CALL_6
0x4001f89	          0x4889c7	                            mov rdi, rax	       259	am.c	FUNCTION_12	CALL_6
0x4001f8c	      0xb800000000	                              mov eax, 0	       259	am.c	FUNCTION_12	CALL_6
0x4001f91	      0xe800000000	                          call 0x4001f96	       259	am.c	FUNCTION_12	CALL_6
0x4001f96	      0xb8ffffffff	                     mov eax, 0xffffffff	       257	am.c	FUNCTION_12	IF_3
0x4001f9b	        0x4883c408	                              add rsp, 8	       260	am.c	FUNCTION_12
0x4001f9f	              0x5b	                                 pop rbx	       260	am.c	FUNCTION_12
0x4001fa0	              0x5d	                                 pop rbp	       260	am.c	FUNCTION_12
0x4001fa1	            0x415c	                                 pop r12	       260	am.c	FUNCTION_12
0x4001fa3	            0x415d	                                 pop r13	       260	am.c	FUNCTION_12
0x4001fa5	              0xc3	                                     ret	       260	am.c	FUNCTION_12
fast_forward_to	IF,3:WHILE,0:CALL,11:DO,0:ELSE,0:FOR,0:SWITCH,0:functions,0	86
0x4001677	            0x4155	                                push r13	      1917	am.c	FUNCTION_51
0x4001679	            0x4154	                                push r12	      1917	am.c	FUNCTION_51
0x400167b	              0x55	                                push rbp	      1917	am.c	FUNCTION_51
0x400167c	              0x53	                                push rbx	      1917	am.c	FUNCTION_51
0x400167d	    0x4881ec780300	                          sub rsp, 0x378	      1917	am.c	FUNCTION_51
0x4001684	          0x4889fb	                            mov rbx, rdi	      1917	am.c	FUNCTION_51
0x4001687	          0x4889f5	                            mov rbp, rsi	      1917	am.c	FUNCTION_51
0x400168a	          0x4189d5	                           mov r13d, edx	      1917	am.c	FUNCTION_51
0x400168d	    0x64488b042528	                mov rax, qword fs:[0x28]	      1917	am.c	FUNCTION_51
0x4001696	    0x488984246803	            mov qword [rsp + 0x368], rax	      1917	am.c	FUNCTION_51
0x400169e	            0x31c0	                            xor eax, eax	      1917	am.c	FUNCTION_51
0x40016a0	    0x48c704240000	                      mov qword [rsp], 0	      1918	am.c	FUNCTION_51
0x40016a8	      0xbe00000000	                              mov esi, 0	        22	tree.h	FUNCTION_62	CALL_1
0x40016ad	      0xe800000000	                          call 0x40016b2	        22	tree.h	FUNCTION_62	CALL_1
0x40016b2	            0x85c0	                           test eax, eax	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x40016b4	     0xf851a010000	                           jne 0x40017d4	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x40016ba	      0xbe00000000	                              mov esi, 0	        22	tree.h	FUNCTION_62	CALL_1
0x40016bf	          0x4889ef	                            mov rdi, rbp	        22	tree.h	FUNCTION_62	CALL_1
0x40016c2	      0xe800000000	                          call 0x40016c7	        22	tree.h	FUNCTION_62	CALL_1
0x40016c7	            0x85c0	                           test eax, eax	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x40016c9	     0xf850c010000	                           jne 0x40017db	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x40016cf	      0xbe01000000	                              mov esi, 1	      1925	am.c	FUNCTION_51	CALL_3
0x40016d4	          0x4889e7	                            mov rdi, rsp	      1925	am.c	FUNCTION_51	CALL_3
0x40016d7	      0xe800000000	                          call 0x40016dc	      1925	am.c	FUNCTION_51	CALL_3
0x40016dc	    0x41b800000000	                              mov r8d, 0	      1927	am.c	FUNCTION_51
0x40016e2	      0xb900000000	                              mov ecx, 0	      1927	am.c	FUNCTION_51
0x40016e7	      0xba00000000	                              mov edx, 0	      1927	am.c	FUNCTION_51
0x40016ec	      0xbe04000000	                              mov esi, 4	      1927	am.c	FUNCTION_51
0x40016f1	      0xbf00000000	                              mov edi, 0	      1927	am.c	FUNCTION_51
0x40016f6	      0xe800000000	                          call 0x40016fb	      1927	am.c	FUNCTION_51
0x40016fb	      0x4c8d642460	                   lea r12, [rsp + 0x60]	        90	string3.h	FUNCTION_66	CALL_6
0x4001700	      0xb960000000	                           mov ecx, 0x60	        90	string3.h	FUNCTION_66	CALL_6
0x4001705	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_66	CALL_6
0x400170a	          0x4c89e7	                            mov rdi, r12	        90	string3.h	FUNCTION_66	CALL_6
0x400170d	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_66	CALL_6
0x4001710	    0xc78424600200	              mov dword [rsp + 0x260], 1	      1930	am.c	FUNCTION_51
0x400171b	    0x48c784248002	              mov qword [rsp + 0x280], 0	      1931	am.c	FUNCTION_51
0x4001727	    0x48c784247802	              mov qword [rsp + 0x278], 0	      1932	am.c	FUNCTION_51
0x4001733	    0xc74424680100	               mov dword [rsp + 0x68], 1	      1933	am.c	FUNCTION_51
0x400173b	    0xc74424640100	               mov dword [rsp + 0x64], 1	      1934	am.c	FUNCTION_51
0x4001743	      0x44896c2460	            mov dword [rsp + 0x60], r13d	      1935	am.c	FUNCTION_51
0x4001748	    0x48c78424c800	               mov qword [rsp + 0xc8], 0	      1936	am.c	FUNCTION_51
0x4001754	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      1937	am.c	FUNCTION_51	CALL_5
0x4001758	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1937	am.c	FUNCTION_51	CALL_5
0x400175c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1937	am.c	FUNCTION_51	CALL_5
0x4001761	      0xe800000000	                          call 0x4001766	      1937	am.c	FUNCTION_51	CALL_5
0x4001766	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	      1938	am.c	FUNCTION_51	CALL_6
0x400176a	        0x488b7518	            mov rsi, qword [rbp + 0x18] 	      1938	am.c	FUNCTION_51	CALL_6
0x400176e	      0x488d7c2438	                   lea rdi, [rsp + 0x38]	      1938	am.c	FUNCTION_51	CALL_6
0x4001773	      0xe800000000	                          call 0x4001778	      1938	am.c	FUNCTION_51	CALL_6
0x4001778	          0x4c89e2	                            mov rdx, r12	      1940	am.c	FUNCTION_51	IF_2	CALL_7
0x400177b	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1940	am.c	FUNCTION_51	IF_2	CALL_7
0x4001780	      0xbf02000000	                              mov edi, 2	      1940	am.c	FUNCTION_51	IF_2	CALL_7
0x4001785	      0xe800000000	                          call 0x400178a	      1940	am.c	FUNCTION_51	IF_2	CALL_7
0x400178a	            0x85c0	                           test eax, eax	      1940	am.c	FUNCTION_51	IF_2	CALL_7
0x400178c	            0x740f	                            je 0x400179d	      1940	am.c	FUNCTION_51	IF_2	CALL_7
0x400178e	          0x4889e7	                            mov rdi, rsp	       304	lockfile.h	FUNCTION_84	CALL_1
0x4001791	      0xe800000000	                          call 0x4001796	       304	lockfile.h	FUNCTION_84	CALL_1
0x4001796	      0xb8ffffffff	                     mov eax, 0xffffffff	      1942	am.c	FUNCTION_51	IF_2
0x400179b	            0xeb43	                           jmp 0x40017e0	      1942	am.c	FUNCTION_51	IF_2
0x400179d	      0xba01000000	                              mov edx, 1	      1945	am.c	FUNCTION_51	IF_3	CALL_9
0x40017a2	          0x4889e6	                            mov rsi, rsp	      1945	am.c	FUNCTION_51	IF_3	CALL_9
0x40017a5	      0xbf00000000	                              mov edi, 0	      1945	am.c	FUNCTION_51	IF_3	CALL_9
0x40017aa	      0xe800000000	                          call 0x40017af	      1945	am.c	FUNCTION_51	IF_3	CALL_9
0x40017af	            0x85c0	                           test eax, eax	      1945	am.c	FUNCTION_51	IF_3	CALL_9
0x40017b1	            0x742d	                            je 0x40017e0	      1945	am.c	FUNCTION_51	IF_3	CALL_9
0x40017b3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x40017b8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x40017bd	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x40017c2	      0xe800000000	                          call 0x40017c7	        54	gettext.h	FUNCTION_87
0x40017c7	          0x4889c7	                            mov rdi, rax	      1946	am.c	FUNCTION_51	CALL_11
0x40017ca	      0xb800000000	                              mov eax, 0	      1946	am.c	FUNCTION_51	CALL_11
0x40017cf	      0xe800000000	                          call 0x40017d4	      1946	am.c	FUNCTION_51	CALL_11
0x40017d4	      0xb8ffffffff	                     mov eax, 0xffffffff	      1923	am.c	FUNCTION_51	IF_1
0x40017d9	            0xeb05	                           jmp 0x40017e0	      1923	am.c	FUNCTION_51	IF_1
0x40017db	      0xb8ffffffff	                     mov eax, 0xffffffff	      1923	am.c	FUNCTION_51	IF_1
0x40017e0	    0x488b8c246803	           mov rcx, qword [rsp + 0x368] 	      1949	am.c	FUNCTION_51
0x40017e8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1949	am.c	FUNCTION_51
0x40017f1	            0x7405	                            je 0x40017f8	      1949	am.c	FUNCTION_51
0x40017f3	      0xe800000000	                          call 0x40017f8	      1949	am.c	FUNCTION_51
0x40017f8	    0x4881c4780300	                          add rsp, 0x378	      1949	am.c	FUNCTION_51
0x40017ff	              0x5b	                                 pop rbx	      1949	am.c	FUNCTION_51
0x4001800	              0x5d	                                 pop rbp	      1949	am.c	FUNCTION_51
0x4001801	            0x415c	                                 pop r12	      1949	am.c	FUNCTION_51
0x4001803	            0x415d	                                 pop r13	      1949	am.c	FUNCTION_51
0x4001805	              0xc3	                                     ret	      1949	am.c	FUNCTION_51
am_load	IF,11:WHILE,0:CALL,45:DO,0:ELSE,6:FOR,0:SWITCH,0:functions,0	414
0x4002050	            0x4156	                                push r14	       402	am.c	FUNCTION_18
0x4002052	            0x4155	                                push r13	       402	am.c	FUNCTION_18
0x4002054	            0x4154	                                push r12	       402	am.c	FUNCTION_18
0x4002056	              0x55	                                push rbp	       402	am.c	FUNCTION_18
0x4002057	              0x53	                                push rbx	       402	am.c	FUNCTION_18
0x4002058	        0x4883ec70	                           sub rsp, 0x70	       402	am.c	FUNCTION_18
0x400205c	          0x4889fd	                            mov rbp, rdi	       402	am.c	FUNCTION_18
0x400205f	    0x64488b042528	                mov rax, qword fs:[0x28]	       402	am.c	FUNCTION_18
0x4002068	      0x4889442468	             mov qword [rsp + 0x68], rax	       402	am.c	FUNCTION_18
0x400206d	            0x31c0	                            xor eax, eax	       402	am.c	FUNCTION_18
0x400206f	    0x48c704240000	                      mov qword [rsp], 0	       403	am.c	FUNCTION_18
0x4002077	    0x48c744240800	                  mov qword [rsp + 8], 0	       403	am.c	FUNCTION_18
0x4002080	    0x48c744241000	               mov qword [rsp + 0x10], 0	       403	am.c	FUNCTION_18
0x4002089	      0xb901000000	                              mov ecx, 1	       405	am.c	FUNCTION_18	IF_1	CALL_1
0x400208e	      0xba00000000	                              mov edx, 0	       405	am.c	FUNCTION_18	IF_1	CALL_1
0x4002093	          0x4889fe	                            mov rsi, rdi	       405	am.c	FUNCTION_18	IF_1	CALL_1
0x4002096	          0x4889e7	                            mov rdi, rsp	       405	am.c	FUNCTION_18	IF_1	CALL_1
0x4002099	      0xe823feffff	                call sym.read_state_file	       405	am.c	FUNCTION_18	IF_1	CALL_1
0x400209e	            0x85c0	                           test eax, eax	       405	am.c	FUNCTION_18	IF_1	CALL_1
0x40020a0	            0x790f	                           jns 0x40020b1	       405	am.c	FUNCTION_18	IF_1	CALL_1
0x40020a2	      0xbf00000000	                              mov edi, 0	       406	am.c	FUNCTION_18	CALL_2
0x40020a7	      0xb800000000	                              mov eax, 0	       406	am.c	FUNCTION_18	CALL_2
0x40020ac	      0xe800000000	                          call 0x40020b1	       406	am.c	FUNCTION_18	CALL_2
0x40020b1	      0xba0a000000	                            mov edx, 0xa	       407	am.c	FUNCTION_18	CALL_3
0x40020b6	      0xbe00000000	                              mov esi, 0	       407	am.c	FUNCTION_18	CALL_3
0x40020bb	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       407	am.c	FUNCTION_18	CALL_3
0x40020c0	      0xe800000000	                          call 0x40020c5	       407	am.c	FUNCTION_18	CALL_3
0x40020c5	          0x894508	                mov dword [rbp + 8], eax	       407	am.c	FUNCTION_18	CALL_3
0x40020c8	      0xb901000000	                              mov ecx, 1	       409	am.c	FUNCTION_18	IF_2	CALL_4
0x40020cd	      0xba00000000	                              mov edx, 0	       409	am.c	FUNCTION_18	IF_2	CALL_4
0x40020d2	          0x4889ee	                            mov rsi, rbp	       409	am.c	FUNCTION_18	IF_2	CALL_4
0x40020d5	          0x4889e7	                            mov rdi, rsp	       409	am.c	FUNCTION_18	IF_2	CALL_4
0x40020d8	      0xe8e4fdffff	                call sym.read_state_file	       409	am.c	FUNCTION_18	IF_2	CALL_4
0x40020dd	            0x85c0	                           test eax, eax	       409	am.c	FUNCTION_18	IF_2	CALL_4
0x40020df	            0x790f	                           jns 0x40020f0	       409	am.c	FUNCTION_18	IF_2	CALL_4
0x40020e1	      0xbf00000000	                              mov edi, 0	       410	am.c	FUNCTION_18	CALL_5
0x40020e6	      0xb800000000	                              mov eax, 0	       410	am.c	FUNCTION_18	CALL_5
0x40020eb	      0xe800000000	                          call 0x40020f0	       410	am.c	FUNCTION_18	CALL_5
0x40020f0	      0xba0a000000	                            mov edx, 0xa	       411	am.c	FUNCTION_18	CALL_6
0x40020f5	      0xbe00000000	                              mov esi, 0	       411	am.c	FUNCTION_18	CALL_6
0x40020fa	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       411	am.c	FUNCTION_18	CALL_6
0x40020ff	      0xe800000000	                          call 0x4002104	       411	am.c	FUNCTION_18	CALL_6
0x4002104	          0x89450c	              mov dword [rbp + 0xc], eax	       411	am.c	FUNCTION_18	CALL_6
0x4002107	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x400210c	        0x488b7500	                    mov rsi, qword [rbp]	       183	am.c	FUNCTION_6	CALL_1
0x4002110	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002115	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x400211a	      0xe800000000	                          call 0x400211f	       183	am.c	FUNCTION_6	CALL_1
0x400211f	          0x4989c4	                            mov r12, rax	       183	am.c	FUNCTION_6	CALL_1
0x4002122	    0x48c744242000	               mov qword [rsp + 0x20], 0	       307	am.c	FUNCTION_14
0x400212b	    0x48c744242800	               mov qword [rsp + 0x28], 0	       307	am.c	FUNCTION_14
0x4002134	    0x48c744243000	               mov qword [rsp + 0x30], 0	       307	am.c	FUNCTION_14
0x400213d	    0x48c744244000	               mov qword [rsp + 0x40], 0	       308	am.c	FUNCTION_14
0x4002146	    0xc74424480000	               mov dword [rsp + 0x48], 0	       308	am.c	FUNCTION_14
0x400214e	    0xc744244c0000	               mov dword [rsp + 0x4c], 0	       308	am.c	FUNCTION_14
0x4002156	      0x804c245001	                 or byte [rsp + 0x50], 1	       308	am.c	FUNCTION_14
0x400215b	    0x48c744245800	               mov qword [rsp + 0x58], 0	       308	am.c	FUNCTION_14
0x4002164	      0x48837d1000	               cmp qword [rbp + 0x10], 0	       312	am.c	FUNCTION_14	CALL_2
0x4002169	            0x7419	                            je 0x4002184	       312	am.c	FUNCTION_14	CALL_2
0x400216b	      0xb900000000	                              mov ecx, 0	       312	am.c	FUNCTION_14	CALL_2
0x4002170	      0xba38010000	                          mov edx, 0x138	       312	am.c	FUNCTION_14	CALL_2
0x4002175	      0xbe00000000	                              mov esi, 0	       312	am.c	FUNCTION_14	CALL_2
0x400217a	      0xbf00000000	                              mov edi, 0	       312	am.c	FUNCTION_14	CALL_2
0x400217f	      0xe800000000	                          call 0x4002184	       312	am.c	FUNCTION_14	CALL_2
0x4002184	      0x48837d1800	               cmp qword [rbp + 0x18], 0	       313	am.c	FUNCTION_14	CALL_3
0x4002189	            0x7419	                            je 0x40021a4	       313	am.c	FUNCTION_14	CALL_3
0x400218b	      0xb900000000	                              mov ecx, 0	       313	am.c	FUNCTION_14	CALL_3
0x4002190	      0xba39010000	                          mov edx, 0x139	       313	am.c	FUNCTION_14	CALL_3
0x4002195	      0xbe00000000	                              mov esi, 0	       313	am.c	FUNCTION_14	CALL_3
0x400219a	      0xbf00000000	                              mov edi, 0	       313	am.c	FUNCTION_14	CALL_3
0x400219f	      0xe800000000	                          call 0x40021a4	       313	am.c	FUNCTION_14	CALL_3
0x40021a4	      0x48837d2000	               cmp qword [rbp + 0x20], 0	       314	am.c	FUNCTION_14	CALL_4
0x40021a9	            0x7419	                            je 0x40021c4	       314	am.c	FUNCTION_14	CALL_4
0x40021ab	      0xb900000000	                              mov ecx, 0	       314	am.c	FUNCTION_14	CALL_4
0x40021b0	      0xba3a010000	                          mov edx, 0x13a	       314	am.c	FUNCTION_14	CALL_4
0x40021b5	      0xbe00000000	                              mov esi, 0	       314	am.c	FUNCTION_14	CALL_4
0x40021ba	      0xbf00000000	                              mov edi, 0	       314	am.c	FUNCTION_14	CALL_4
0x40021bf	      0xe800000000	                          call 0x40021c4	       314	am.c	FUNCTION_14	CALL_4
0x40021c4	      0xbe00000000	                              mov esi, 0	        53	fcntl2.h	FUNCTION_172	IF_2	CALL_9
0x40021c9	          0x4889c7	                            mov rdi, rax	        53	fcntl2.h	FUNCTION_172	IF_2	CALL_9
0x40021cc	      0xb800000000	                              mov eax, 0	        53	fcntl2.h	FUNCTION_172	IF_2	CALL_9
0x40021d1	      0xe800000000	                          call 0x40021d6	        53	fcntl2.h	FUNCTION_172	IF_2	CALL_9
0x40021d6	            0x89c3	                            mov ebx, eax	        53	fcntl2.h	FUNCTION_172	IF_2	CALL_9
0x40021d8	            0x85c0	                           test eax, eax	       317	am.c	FUNCTION_14	IF_1
0x40021da	            0x7932	                           jns 0x400220e	       317	am.c	FUNCTION_14	IF_1
0x40021dc	      0xe800000000	                          call 0x40021e1	       318	am.c	FUNCTION_14	IF_1	IF_2
0x40021e1	          0x833802	                      cmp dword [rax], 2	       318	am.c	FUNCTION_14	IF_1	IF_2
0x40021e4	     0xf8457010000	                            je 0x4002341	       318	am.c	FUNCTION_14	IF_1	IF_2
0x40021ea	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x40021ef	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x40021f4	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x40021f9	      0xe800000000	                          call 0x40021fe	        54	gettext.h	FUNCTION_87
0x40021fe	          0x4c89e6	                            mov rsi, r12	       320	am.c	FUNCTION_14	IF_1	CALL_7
0x4002201	          0x4889c7	                            mov rdi, rax	       320	am.c	FUNCTION_14	IF_1	CALL_7
0x4002204	      0xb800000000	                              mov eax, 0	       320	am.c	FUNCTION_14	IF_1	CALL_7
0x4002209	      0xe800000000	                          call 0x400220e	       320	am.c	FUNCTION_14	IF_1	CALL_7
0x400220e	      0xba00000000	                              mov edx, 0	       322	am.c	FUNCTION_14	CALL_8
0x4002213	            0x89c6	                            mov esi, eax	       322	am.c	FUNCTION_14	CALL_8
0x4002215	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       322	am.c	FUNCTION_14	CALL_8
0x400221a	      0xe800000000	                          call 0x400221f	       322	am.c	FUNCTION_14	CALL_8
0x400221f	            0x89df	                            mov edi, ebx	       323	am.c	FUNCTION_14	CALL_9
0x4002221	      0xe800000000	                          call 0x4002226	       323	am.c	FUNCTION_14	CALL_9
0x4002226	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	       324	am.c	FUNCTION_14	IF_3	CALL_10
0x400222b	          0x803b00	                       cmp byte [rbx], 0	       268	am.c	FUNCTION_13	WHILE_1
0x400222e	     0xf845f040000	                            je 0x4002693	       268	am.c	FUNCTION_13	WHILE_1
0x4002234	      0xbe3d000000	                           mov esi, 0x3d	       271	am.c	FUNCTION_13	WHILE_1	CALL_1
0x4002239	          0x4889df	                            mov rdi, rbx	       271	am.c	FUNCTION_13	WHILE_1	CALL_1
0x400223c	      0xe800000000	                          call 0x4002241	       271	am.c	FUNCTION_13	WHILE_1	CALL_1
0x4002241	          0x4989c4	                            mov r12, rax	       271	am.c	FUNCTION_13	WHILE_1	CALL_1
0x4002244	          0x4885c0	                           test rax, rax	       272	am.c	FUNCTION_13	WHILE_1	IF_1
0x4002247	     0xf8451040000	                            je 0x400269e	       272	am.c	FUNCTION_13	WHILE_1	IF_1
0x400224d	      0xbe0a000000	                            mov esi, 0xa	       274	am.c	FUNCTION_13	WHILE_1
0x4002252	          0x4889c7	                            mov rdi, rax	       274	am.c	FUNCTION_13	WHILE_1
0x4002255	      0xe800000000	                          call 0x400225a	       274	am.c	FUNCTION_13	WHILE_1
0x400225a	          0x4989c5	                            mov r13, rax	       274	am.c	FUNCTION_13	WHILE_1
0x400225d	      0x4d8d742401	                      lea r14, [r12 + 1]	       275	am.c	FUNCTION_13	WHILE_1
0x4002262	      0x41c6042400	                       mov byte [r12], 0	       275	am.c	FUNCTION_13	WHILE_1
0x4002267	          0x4889de	                            mov rsi, rbx	       276	am.c	FUNCTION_13	WHILE_1	CALL_2
0x400226a	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       276	am.c	FUNCTION_13	WHILE_1	CALL_2
0x400226f	      0xe800000000	                          call 0x4002274	       276	am.c	FUNCTION_13	WHILE_1	CALL_2
0x4002274	          0x4989c4	                            mov r12, rax	       276	am.c	FUNCTION_13	WHILE_1	CALL_2
0x4002277	      0x41807d000a	                     cmp byte [r13], 0xa	       278	am.c	FUNCTION_13	WHILE_1
0x400227c	           0xf94c3	                                 sete bl	       278	am.c	FUNCTION_13	WHILE_1
0x400227f	           0xfb6db	                           movzx ebx, bl	       278	am.c	FUNCTION_13	WHILE_1
0x4002282	          0x4c01eb	                            add rbx, r13	       278	am.c	FUNCTION_13	WHILE_1
0x4002285	      0x41c6450000	                       mov byte [r13], 0	       279	am.c	FUNCTION_13	WHILE_1
0x400228a	          0x4c89f7	                            mov rdi, r14	       280	am.c	FUNCTION_13	WHILE_1	CALL_3
0x400228d	      0xe800000000	                          call 0x4002292	       280	am.c	FUNCTION_13	WHILE_1	CALL_3
0x4002292	          0x4885c0	                           test rax, rax	       281	am.c	FUNCTION_13	WHILE_1	IF_2
0x4002295	     0xf8403040000	                            je 0x400269e	       281	am.c	FUNCTION_13	WHILE_1	IF_2
0x400229b	          0x4889c7	                            mov rdi, rax	       283	am.c	FUNCTION_13	WHILE_1	CALL_4
0x400229e	      0xe800000000	                          call 0x40022a3	       283	am.c	FUNCTION_13	WHILE_1	CALL_4
0x40022a3	      0x4989442408	                mov qword [r12 + 8], rax	       283	am.c	FUNCTION_13	WHILE_1	CALL_4
0x40022a8	          0x803b00	                       cmp byte [rbx], 0	       268	am.c	FUNCTION_13	WHILE_1
0x40022ab	            0x7587	                           jne 0x4002234	       268	am.c	FUNCTION_13	WHILE_1
0x40022ad	      0xe9e1030000	                           jmp 0x4002693	       268	am.c	FUNCTION_13	WHILE_1
0x40022b2	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x40022b7	          0x488b30	                    mov rsi, qword [rax]	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x40022ba	      0xbf00000000	                              mov edi, 0	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x40022bf	      0xb910000000	                           mov ecx, 0x10	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x40022c4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x40022c6	           0xf97c1	                                 seta cl	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x40022c9	           0xf92c2	                                 setb dl	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x40022cc	            0x38d1	                              cmp cl, dl	       327	am.c	FUNCTION_14	IF_4
0x40022ce	     0xf85ca030000	                           jne 0x400269e	       327	am.c	FUNCTION_14	IF_4
0x40022d4	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       329	am.c	FUNCTION_14	IF_4	CALL_12
0x40022d8	      0xbf00000000	                              mov edi, 0	       329	am.c	FUNCTION_14	IF_4	CALL_12
0x40022dd	      0xb911000000	                           mov ecx, 0x11	       329	am.c	FUNCTION_14	IF_4	CALL_12
0x40022e2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       329	am.c	FUNCTION_14	IF_4	CALL_12
0x40022e4	           0xf97c1	                                 seta cl	       329	am.c	FUNCTION_14	IF_4	CALL_12
0x40022e7	           0xf92c2	                                 setb dl	       329	am.c	FUNCTION_14	IF_4	CALL_12
0x40022ea	            0x38d1	                              cmp cl, dl	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x40022ec	     0xf85ac030000	                           jne 0x400269e	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x40022f2	        0x488b7020	            mov rsi, qword [rax + 0x20] 	       330	am.c	FUNCTION_14	IF_4	CALL_13
0x40022f6	      0xbf00000000	                              mov edi, 0	       330	am.c	FUNCTION_14	IF_4	CALL_13
0x40022fb	      0xb910000000	                           mov ecx, 0x10	       330	am.c	FUNCTION_14	IF_4	CALL_13
0x4002300	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       330	am.c	FUNCTION_14	IF_4	CALL_13
0x4002302	           0xf97c1	                                 seta cl	       330	am.c	FUNCTION_14	IF_4	CALL_13
0x4002305	           0xf92c2	                                 setb dl	       330	am.c	FUNCTION_14	IF_4	CALL_13
0x4002308	            0x38d1	                              cmp cl, dl	       329	am.c	FUNCTION_14	IF_4	CALL_12
0x400230a	     0xf858e030000	                           jne 0x400269e	       329	am.c	FUNCTION_14	IF_4	CALL_12
0x4002310	        0x488b5008	                mov rdx, qword [rax + 8]	       332	am.c	FUNCTION_14
0x4002314	        0x48895510	            mov qword [rbp + 0x10], rdx 	       332	am.c	FUNCTION_14
0x4002318	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       333	am.c	FUNCTION_14
0x400231c	        0x48895518	            mov qword [rbp + 0x18], rdx 	       333	am.c	FUNCTION_14
0x4002320	        0x488b4028	            mov rax, qword [rax + 0x28] 	       334	am.c	FUNCTION_14
0x4002324	        0x48894520	            mov qword [rbp + 0x20], rax 	       334	am.c	FUNCTION_14
0x4002328	      0xbe00000000	                              mov esi, 0	       337	am.c	FUNCTION_14	CALL_14
0x400232d	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       337	am.c	FUNCTION_14	CALL_14
0x4002332	      0xe800000000	                          call 0x4002337	       337	am.c	FUNCTION_14	CALL_14
0x4002337	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       338	am.c	FUNCTION_14	CALL_15
0x400233c	      0xe800000000	                          call 0x4002341	       338	am.c	FUNCTION_14	CALL_15
0x4002341	          0x4889ef	                            mov rdi, rbp	       416	am.c	FUNCTION_18	CALL_10
0x4002344	      0xe85dfcffff	                call sym.read_commit_msg	       416	am.c	FUNCTION_18	CALL_10
0x4002349	      0xb901000000	                              mov ecx, 1	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x400234e	      0xba00000000	                              mov edx, 0	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x4002353	          0x4889ee	                            mov rsi, rbp	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x4002356	          0x4889e7	                            mov rdi, rsp	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x4002359	      0xe863fbffff	                call sym.read_state_file	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x400235e	            0x85c0	                           test eax, eax	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x4002360	            0x7919	                           jns 0x400237b	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x4002362	    0x48c745380000	               mov qword [rbp + 0x38], 0	        90	string3.h	FUNCTION_66	CALL_6
0x400236a	    0x48c745400000	               mov qword [rbp + 0x40], 0	        90	string3.h	FUNCTION_66	CALL_6
0x4002372	    0xc74548000000	               mov dword [rbp + 0x48], 0	        90	string3.h	FUNCTION_66	CALL_6
0x4002379	            0xeb51	                           jmp 0x40023cc	        90	string3.h	FUNCTION_66	CALL_6
0x400237b	        0x488d7538	                   lea rsi, [rbp + 0x38]	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x400237f	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x4002384	      0xe800000000	                          call 0x4002389	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x4002389	            0x85c0	                           test eax, eax	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x400238b	            0x793f	                           jns 0x40023cc	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x400238d	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002392	        0x488b7500	                    mov rsi, qword [rbp]	       183	am.c	FUNCTION_6	CALL_1
0x4002396	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x400239b	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x40023a0	      0xe800000000	                          call 0x40023a5	       183	am.c	FUNCTION_6	CALL_1
0x40023a5	          0x4889c3	                            mov rbx, rax	       183	am.c	FUNCTION_6	CALL_1
0x40023a8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x40023ad	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x40023b2	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x40023b7	      0xe800000000	                          call 0x40023bc	        54	gettext.h	FUNCTION_87
0x40023bc	          0x4889de	                            mov rsi, rbx	       421	am.c	FUNCTION_18	ELSE_1	IF_5
0x40023bf	          0x4889c7	                            mov rdi, rax	       421	am.c	FUNCTION_18	ELSE_1	IF_5
0x40023c2	      0xb800000000	                              mov eax, 0	       421	am.c	FUNCTION_18	ELSE_1	IF_5
0x40023c7	      0xe800000000	                          call 0x40023cc	       421	am.c	FUNCTION_18	ELSE_1	IF_5
0x40023cc	      0xb901000000	                              mov ecx, 1	       423	am.c	FUNCTION_18	CALL_17
0x40023d1	      0xba00000000	                              mov edx, 0	       423	am.c	FUNCTION_18	CALL_17
0x40023d6	          0x4889ee	                            mov rsi, rbp	       423	am.c	FUNCTION_18	CALL_17
0x40023d9	          0x4889e7	                            mov rdi, rsp	       423	am.c	FUNCTION_18	CALL_17
0x40023dc	      0xe8e0faffff	                call sym.read_state_file	       423	am.c	FUNCTION_18	CALL_17
0x40023e1	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       424	am.c	FUNCTION_18	CALL_18
0x40023e6	           0xfb611	                   movzx edx, byte [rcx]	       424	am.c	FUNCTION_18	CALL_18
0x40023e9	      0xb874000000	                           mov eax, 0x74	       424	am.c	FUNCTION_18	CALL_18
0x40023ee	            0x29d0	                            sub eax, edx	       424	am.c	FUNCTION_18	CALL_18
0x40023f0	            0x7506	                           jne 0x40023f8	       424	am.c	FUNCTION_18	CALL_18
0x40023f2	         0xfb64101	               movzx eax, byte [rcx + 1]	       424	am.c	FUNCTION_18	CALL_18
0x40023f6	            0xf7d8	                                 neg eax	       424	am.c	FUNCTION_18	CALL_18
0x40023f8	            0x85c0	                           test eax, eax	       424	am.c	FUNCTION_18	CALL_18
0x40023fa	           0xf94c0	                                 sete al	       424	am.c	FUNCTION_18	CALL_18
0x40023fd	           0xfb6c0	                           movzx eax, al	       424	am.c	FUNCTION_18	CALL_18
0x4002400	          0x894554	            mov dword [rbp + 0x54], eax 	       424	am.c	FUNCTION_18	CALL_18
0x4002403	      0xb901000000	                              mov ecx, 1	       426	am.c	FUNCTION_18	CALL_19
0x4002408	      0xba00000000	                              mov edx, 0	       426	am.c	FUNCTION_18	CALL_19
0x400240d	          0x4889ee	                            mov rsi, rbp	       426	am.c	FUNCTION_18	CALL_19
0x4002410	          0x4889e7	                            mov rdi, rsp	       426	am.c	FUNCTION_18	CALL_19
0x4002413	      0xe8a9faffff	                call sym.read_state_file	       426	am.c	FUNCTION_18	CALL_19
0x4002418	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       427	am.c	FUNCTION_18	CALL_20
0x400241d	           0xfb611	                   movzx edx, byte [rcx]	       427	am.c	FUNCTION_18	CALL_20
0x4002420	      0xb874000000	                           mov eax, 0x74	       427	am.c	FUNCTION_18	CALL_20
0x4002425	            0x29d0	                            sub eax, edx	       427	am.c	FUNCTION_18	CALL_20
0x4002427	            0x7506	                           jne 0x400242f	       427	am.c	FUNCTION_18	CALL_20
0x4002429	         0xfb64101	               movzx eax, byte [rcx + 1]	       427	am.c	FUNCTION_18	CALL_20
0x400242d	            0xf7d8	                                 neg eax	       427	am.c	FUNCTION_18	CALL_20
0x400242f	            0x85c0	                           test eax, eax	       427	am.c	FUNCTION_18	CALL_20
0x4002431	           0xf94c0	                                 sete al	       427	am.c	FUNCTION_18	CALL_20
0x4002434	           0xfb6c0	                           movzx eax, al	       427	am.c	FUNCTION_18	CALL_20
0x4002437	          0x894558	            mov dword [rbp + 0x58], eax 	       427	am.c	FUNCTION_18	CALL_20
0x400243a	      0xb901000000	                              mov ecx, 1	       429	am.c	FUNCTION_18	CALL_21
0x400243f	      0xba00000000	                              mov edx, 0	       429	am.c	FUNCTION_18	CALL_21
0x4002444	          0x4889ee	                            mov rsi, rbp	       429	am.c	FUNCTION_18	CALL_21
0x4002447	          0x4889e7	                            mov rdi, rsp	       429	am.c	FUNCTION_18	CALL_21
0x400244a	      0xe872faffff	                call sym.read_state_file	       429	am.c	FUNCTION_18	CALL_21
0x400244f	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       430	am.c	FUNCTION_18	CALL_22
0x4002454	           0xfb611	                   movzx edx, byte [rcx]	       430	am.c	FUNCTION_18	CALL_22
0x4002457	      0xb874000000	                           mov eax, 0x74	       430	am.c	FUNCTION_18	CALL_22
0x400245c	            0x29d0	                            sub eax, edx	       430	am.c	FUNCTION_18	CALL_22
0x400245e	            0x7506	                           jne 0x4002466	       430	am.c	FUNCTION_18	CALL_22
0x4002460	         0xfb64101	               movzx eax, byte [rcx + 1]	       430	am.c	FUNCTION_18	CALL_22
0x4002464	            0xf7d8	                                 neg eax	       430	am.c	FUNCTION_18	CALL_22
0x4002466	            0x85c0	                           test eax, eax	       430	am.c	FUNCTION_18	CALL_22
0x4002468	           0xf94c0	                                 sete al	       430	am.c	FUNCTION_18	CALL_22
0x400246b	           0xfb6c0	                           movzx eax, al	       430	am.c	FUNCTION_18	CALL_22
0x400246e	          0x89455c	            mov dword [rbp + 0x5c], eax 	       430	am.c	FUNCTION_18	CALL_22
0x4002471	      0xb901000000	                              mov ecx, 1	       432	am.c	FUNCTION_18	CALL_23
0x4002476	      0xba00000000	                              mov edx, 0	       432	am.c	FUNCTION_18	CALL_23
0x400247b	          0x4889ee	                            mov rsi, rbp	       432	am.c	FUNCTION_18	CALL_23
0x400247e	          0x4889e7	                            mov rdi, rsp	       432	am.c	FUNCTION_18	CALL_23
0x4002481	      0xe83bfaffff	                call sym.read_state_file	       432	am.c	FUNCTION_18	CALL_23
0x4002486	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       433	am.c	FUNCTION_18	CALL_24
0x400248b	           0xfb611	                   movzx edx, byte [rcx]	       433	am.c	FUNCTION_18	CALL_24
0x400248e	      0xb874000000	                           mov eax, 0x74	       433	am.c	FUNCTION_18	CALL_24
0x4002493	            0x29d0	                            sub eax, edx	       433	am.c	FUNCTION_18	CALL_24
0x4002495	            0x7506	                           jne 0x400249d	       433	am.c	FUNCTION_18	CALL_24
0x4002497	         0xfb64101	               movzx eax, byte [rcx + 1]	       433	am.c	FUNCTION_18	CALL_24
0x400249b	            0xf7d8	                                 neg eax	       433	am.c	FUNCTION_18	CALL_24
0x400249d	            0x85c0	                           test eax, eax	       433	am.c	FUNCTION_18	CALL_24
0x400249f	           0xf94c0	                                 sete al	       433	am.c	FUNCTION_18	CALL_24
0x40024a2	           0xfb6c0	                           movzx eax, al	       433	am.c	FUNCTION_18	CALL_24
0x40024a5	          0x894560	            mov dword [rbp + 0x60], eax 	       433	am.c	FUNCTION_18	CALL_24
0x40024a8	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x40024ad	        0x488b7500	                    mov rsi, qword [rbp]	       183	am.c	FUNCTION_6	CALL_1
0x40024b1	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x40024b6	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x40024bb	      0xe800000000	                          call 0x40024c0	       183	am.c	FUNCTION_6	CALL_1
0x40024c0	          0x4889c7	                            mov rdi, rax	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x40024c3	      0xe800000000	                          call 0x40024c8	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x40024c8	            0x85c0	                           test eax, eax	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x40024ca	            0x7435	                            je 0x4002501	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x40024cc	      0xb901000000	                              mov ecx, 1	       436	am.c	FUNCTION_18	IF_6	CALL_27
0x40024d1	      0xba00000000	                              mov edx, 0	       436	am.c	FUNCTION_18	IF_6	CALL_27
0x40024d6	          0x4889ee	                            mov rsi, rbp	       436	am.c	FUNCTION_18	IF_6	CALL_27
0x40024d9	          0x4889e7	                            mov rdi, rsp	       436	am.c	FUNCTION_18	IF_6	CALL_27
0x40024dc	      0xe8e0f9ffff	                call sym.read_state_file	       436	am.c	FUNCTION_18	IF_6	CALL_27
0x40024e1	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x40024e6	      0xb802000000	                              mov eax, 2	       438	am.c	FUNCTION_18	IF_6
0x40024eb	          0x803a74	                    cmp byte [rdx], 0x74	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x40024ee	            0x7509	                           jne 0x40024f9	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x40024f0	        0x807a0101	                   cmp byte [rdx + 1], 1	       438	am.c	FUNCTION_18	IF_6
0x40024f4	            0x19c0	                            sbb eax, eax	       438	am.c	FUNCTION_18	IF_6
0x40024f6	          0x83c002	                              add eax, 2	       438	am.c	FUNCTION_18	IF_6
0x40024f9	    0x898590000000	            mov dword [rbp + 0x90], eax 	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x40024ff	            0xeb0a	                           jmp 0x400250b	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x4002501	    0xc78590000000	               mov dword [rbp + 0x90], 0	       440	am.c	FUNCTION_18	ELSE_2
0x400250b	      0xb901000000	                              mov ecx, 1	       443	am.c	FUNCTION_18	CALL_29
0x4002510	      0xba00000000	                              mov edx, 0	       443	am.c	FUNCTION_18	CALL_29
0x4002515	          0x4889ee	                            mov rsi, rbp	       443	am.c	FUNCTION_18	CALL_29
0x4002518	          0x4889e7	                            mov rdi, rsp	       443	am.c	FUNCTION_18	CALL_29
0x400251b	      0xe8a1f9ffff	                call sym.read_state_file	       443	am.c	FUNCTION_18	CALL_29
0x4002520	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x4002525	           0xfb610	                   movzx edx, byte [rax]	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x4002528	          0x83fa74	                           cmp edx, 0x74	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x400252b	            0x750f	                           jne 0x400253c	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x400252d	        0x80780100	                   cmp byte [rax + 1], 0	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x4002531	            0x751d	                           jne 0x4002550	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x4002533	    0xc74564010000	               mov dword [rbp + 0x64], 1	       445	am.c	FUNCTION_18	IF_7
0x400253a	            0xeb1b	                           jmp 0x4002557	       445	am.c	FUNCTION_18	IF_7
0x400253c	          0x83fa62	                           cmp edx, 0x62	       446	am.c	FUNCTION_18	ELSE_3	IF_8	CALL_31
0x400253f	            0x750f	                           jne 0x4002550	       446	am.c	FUNCTION_18	ELSE_3	IF_8	CALL_31
0x4002541	        0x80780100	                   cmp byte [rax + 1], 0	       446	am.c	FUNCTION_18	ELSE_3	IF_8	CALL_31
0x4002545	            0x7509	                           jne 0x4002550	       446	am.c	FUNCTION_18	ELSE_3	IF_8	CALL_31
0x4002547	    0xc74564020000	               mov dword [rbp + 0x64], 2	       447	am.c	FUNCTION_18	ELSE_3	IF_8
0x400254e	            0xeb07	                           jmp 0x4002557	       447	am.c	FUNCTION_18	ELSE_3	IF_8
0x4002550	    0xc74564000000	               mov dword [rbp + 0x64], 0	       449	am.c	FUNCTION_18	ELSE_4
0x4002557	      0xb901000000	                              mov ecx, 1	       451	am.c	FUNCTION_18	CALL_32
0x400255c	      0xba00000000	                              mov edx, 0	       451	am.c	FUNCTION_18	CALL_32
0x4002561	          0x4889ee	                            mov rsi, rbp	       451	am.c	FUNCTION_18	CALL_32
0x4002564	          0x4889e7	                            mov rdi, rsp	       451	am.c	FUNCTION_18	CALL_32
0x4002567	      0xe855f9ffff	                call sym.read_state_file	       451	am.c	FUNCTION_18	CALL_32
0x400256c	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       452	am.c	FUNCTION_18	CALL_33
0x4002571	           0xfb611	                   movzx edx, byte [rcx]	       452	am.c	FUNCTION_18	CALL_33
0x4002574	      0xb874000000	                           mov eax, 0x74	       452	am.c	FUNCTION_18	CALL_33
0x4002579	            0x29d0	                            sub eax, edx	       452	am.c	FUNCTION_18	CALL_33
0x400257b	            0x7506	                           jne 0x4002583	       452	am.c	FUNCTION_18	CALL_33
0x400257d	         0xfb64101	               movzx eax, byte [rcx + 1]	       452	am.c	FUNCTION_18	CALL_33
0x4002581	            0xf7d8	                                 neg eax	       452	am.c	FUNCTION_18	CALL_33
0x4002583	            0x85c0	                           test eax, eax	       452	am.c	FUNCTION_18	CALL_33
0x4002585	           0xf94c0	                                 sete al	       452	am.c	FUNCTION_18	CALL_33
0x4002588	           0xfb6c0	                           movzx eax, al	       452	am.c	FUNCTION_18	CALL_33
0x400258b	          0x894568	            mov dword [rbp + 0x68], eax 	       452	am.c	FUNCTION_18	CALL_33
0x400258e	      0xb901000000	                              mov ecx, 1	       454	am.c	FUNCTION_18	CALL_34
0x4002593	      0xba00000000	                              mov edx, 0	       454	am.c	FUNCTION_18	CALL_34
0x4002598	          0x4889ee	                            mov rsi, rbp	       454	am.c	FUNCTION_18	CALL_34
0x400259b	          0x4889e7	                            mov rdi, rsp	       454	am.c	FUNCTION_18	CALL_34
0x400259e	      0xe81ef9ffff	                call sym.read_state_file	       454	am.c	FUNCTION_18	CALL_34
0x40025a3	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x40025a8	           0xfb610	                   movzx edx, byte [rax]	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x40025ab	          0x83fa74	                           cmp edx, 0x74	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x40025ae	            0x750f	                           jne 0x40025bf	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x40025b0	        0x80780100	                   cmp byte [rax + 1], 0	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x40025b4	            0x751d	                           jne 0x40025d3	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x40025b6	    0xc7456c010000	               mov dword [rbp + 0x6c], 1	       456	am.c	FUNCTION_18	IF_9
0x40025bd	            0xeb1b	                           jmp 0x40025da	       456	am.c	FUNCTION_18	IF_9
0x40025bf	          0x83fa66	                           cmp edx, 0x66	       457	am.c	FUNCTION_18	ELSE_5	IF_10	CALL_36
0x40025c2	            0x750f	                           jne 0x40025d3	       457	am.c	FUNCTION_18	ELSE_5	IF_10	CALL_36
0x40025c4	        0x80780100	                   cmp byte [rax + 1], 0	       457	am.c	FUNCTION_18	ELSE_5	IF_10	CALL_36
0x40025c8	            0x7509	                           jne 0x40025d3	       457	am.c	FUNCTION_18	ELSE_5	IF_10	CALL_36
0x40025ca	    0xc7456c000000	               mov dword [rbp + 0x6c], 0	       458	am.c	FUNCTION_18	ELSE_5	IF_10
0x40025d1	            0xeb07	                           jmp 0x40025da	       458	am.c	FUNCTION_18	ELSE_5	IF_10
0x40025d3	    0xc7456cffffff	     mov dword [rbp + 0x6c], 0xffffffff 	       460	am.c	FUNCTION_18	ELSE_6
0x40025da	      0xb901000000	                              mov ecx, 1	       462	am.c	FUNCTION_18	CALL_37
0x40025df	      0xba00000000	                              mov edx, 0	       462	am.c	FUNCTION_18	CALL_37
0x40025e4	          0x4889ee	                            mov rsi, rbp	       462	am.c	FUNCTION_18	CALL_37
0x40025e7	          0x4889e7	                            mov rdi, rsp	       462	am.c	FUNCTION_18	CALL_37
0x40025ea	      0xe8d2f8ffff	                call sym.read_state_file	       462	am.c	FUNCTION_18	CALL_37
0x40025ef	        0x488d5d70	                   lea rbx, [rbp + 0x70]	       463	am.c	FUNCTION_18	CALL_38
0x40025f3	          0x4889df	                            mov rdi, rbx	       463	am.c	FUNCTION_18	CALL_38
0x40025f6	      0xe800000000	                          call 0x40025fb	       463	am.c	FUNCTION_18	CALL_38
0x40025fb	          0x4889de	                            mov rsi, rbx	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x40025fe	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x4002603	      0xe800000000	                          call 0x4002608	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x4002608	            0x85c0	                           test eax, eax	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x400260a	            0x793f	                           jns 0x400264b	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x400260c	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002611	        0x488b7500	                    mov rsi, qword [rbp]	       183	am.c	FUNCTION_6	CALL_1
0x4002615	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x400261a	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x400261f	      0xe800000000	                          call 0x4002624	       183	am.c	FUNCTION_6	CALL_1
0x4002624	          0x4889c3	                            mov rbx, rax	       183	am.c	FUNCTION_6	CALL_1
0x4002627	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x400262c	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x4002631	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x4002636	      0xe800000000	                          call 0x400263b	        54	gettext.h	FUNCTION_87
0x400263b	          0x4889de	                            mov rsi, rbx	       465	am.c	FUNCTION_18	CALL_42
0x400263e	          0x4889c7	                            mov rdi, rax	       465	am.c	FUNCTION_18	CALL_42
0x4002641	      0xb800000000	                              mov eax, 0	       465	am.c	FUNCTION_18	CALL_42
0x4002646	      0xe800000000	                          call 0x400264b	       465	am.c	FUNCTION_18	CALL_42
0x400264b	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002650	        0x488b7500	                    mov rsi, qword [rbp]	       183	am.c	FUNCTION_6	CALL_1
0x4002654	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002659	      0xb800000000	                              mov eax, 0	       183	am.c	FUNCTION_6	CALL_1
0x400265e	      0xe800000000	                          call 0x4002663	       183	am.c	FUNCTION_6	CALL_1
0x4002663	          0x4889c7	                            mov rdi, rax	       467	am.c	FUNCTION_18	CALL_44
0x4002666	      0xe800000000	                          call 0x400266b	       467	am.c	FUNCTION_18	CALL_44
0x400266b	            0x85c0	                           test eax, eax	       467	am.c	FUNCTION_18	CALL_44
0x400266d	           0xf95c0	                                setne al	       467	am.c	FUNCTION_18	CALL_44
0x4002670	           0xfb6c0	                           movzx eax, al	       467	am.c	FUNCTION_18	CALL_44
0x4002673	    0x8985a0000000	            mov dword [rbp + 0xa0], eax 	       467	am.c	FUNCTION_18	CALL_44
0x4002679	          0x4889e7	                            mov rdi, rsp	       469	am.c	FUNCTION_18	CALL_45
0x400267c	      0xe800000000	                          call 0x4002681	       469	am.c	FUNCTION_18	CALL_45
0x4002681	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       470	am.c	FUNCTION_18
0x4002686	    0x644833042528	                xor rax, qword fs:[0x28]	       470	am.c	FUNCTION_18
0x400268f	            0x744c	                            je 0x40026dd	       470	am.c	FUNCTION_18
0x4002691	            0xeb45	                           jmp 0x40026d8	       470	am.c	FUNCTION_18
0x4002693	      0x837c244803	               cmp dword [rsp + 0x48], 3	       327	am.c	FUNCTION_14	IF_4
0x4002698	     0xf8414fcffff	                            je 0x40022b2	       327	am.c	FUNCTION_14	IF_4
0x400269e	      0xbe01000000	                              mov esi, 1	       337	am.c	FUNCTION_14	CALL_14
0x40026a3	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       337	am.c	FUNCTION_14	CALL_14
0x40026a8	      0xe800000000	                          call 0x40026ad	       337	am.c	FUNCTION_14	CALL_14
0x40026ad	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       338	am.c	FUNCTION_14	CALL_15
0x40026b2	      0xe800000000	                          call 0x40026b7	       338	am.c	FUNCTION_14	CALL_15
0x40026b7	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x40026bc	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x40026c1	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x40026c6	      0xe800000000	                          call 0x40026cb	        54	gettext.h	FUNCTION_87
0x40026cb	          0x4889c7	                            mov rdi, rax	       414	am.c	FUNCTION_18	CALL_9
0x40026ce	      0xb800000000	                              mov eax, 0	       414	am.c	FUNCTION_18	CALL_9
0x40026d3	      0xe800000000	                          call 0x40026d8	       414	am.c	FUNCTION_18	CALL_9
0x40026d8	      0xe800000000	                          call 0x40026dd	       470	am.c	FUNCTION_18
0x40026dd	        0x4883c470	                           add rsp, 0x70	       470	am.c	FUNCTION_18
0x40026e1	              0x5b	                                 pop rbx	       470	am.c	FUNCTION_18
0x40026e2	              0x5d	                                 pop rbp	       470	am.c	FUNCTION_18
0x40026e3	            0x415c	                                 pop r12	       470	am.c	FUNCTION_18
0x40026e5	            0x415d	                                 pop r13	       470	am.c	FUNCTION_18
0x40026e7	            0x415e	                                 pop r14	       470	am.c	FUNCTION_18
0x40026e9	              0xc3	                                     ret	       470	am.c	FUNCTION_18
write_state_bool	IF,0:WHILE,0:CALL,1:DO,0:ELSE,0:FOR,0:SWITCH,0:functions,0	8
0x400061e	        0x4883ec08	                              sub rsp, 8	       203	am.c	FUNCTION_9
0x4000622	            0x85d2	                           test edx, edx	       204	am.c	FUNCTION_9	CALL_1
0x4000624	      0xba00000000	                              mov edx, 0	       204	am.c	FUNCTION_9	CALL_1
0x4000629	      0xb800000000	                              mov eax, 0	       204	am.c	FUNCTION_9	CALL_1
0x400062e	        0x480f45d0	                         cmovne rdx, rax	       204	am.c	FUNCTION_9	CALL_1
0x4000632	      0xe8b7ffffff	               call sym.write_state_text	       204	am.c	FUNCTION_9	CALL_1
0x4000637	        0x4883c408	                              add rsp, 8	       205	am.c	FUNCTION_9
0x400063b	              0xc3	                                     ret	       205	am.c	FUNCTION_9
am_destroy	IF,0:WHILE,0:CALL,3:DO,0:ELSE,0:FOR,0:SWITCH,0:functions,0	26
0x40015fc	        0x4883ec28	                           sub rsp, 0x28	       477	am.c	FUNCTION_19
0x4001600	    0x64488b042528	                mov rax, qword fs:[0x28]	       477	am.c	FUNCTION_19
0x4001609	      0x4889442418	             mov qword [rsp + 0x18], rax	       477	am.c	FUNCTION_19
0x400160e	            0x31c0	                            xor eax, eax	       477	am.c	FUNCTION_19
0x4001610	    0x48c704240000	                      mov qword [rsp], 0	       478	am.c	FUNCTION_19
0x4001618	    0x48c744240800	                  mov qword [rsp + 8], 0	       478	am.c	FUNCTION_19
0x4001621	    0x48c744241000	               mov qword [rsp + 0x10], 0	       478	am.c	FUNCTION_19
0x400162a	          0x488b37	                    mov rsi, qword [rdi]	       480	am.c	FUNCTION_19	CALL_1
0x400162d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_137	CALL_2
0x4001634	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_137	CALL_2
0x4001637	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_137	CALL_2
0x4001639	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_137	CALL_2
0x400163c	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_137	CALL_2
0x4001640	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_137	CALL_2
0x4001643	      0xe800000000	                          call 0x4001648	       279	strbuf.h	FUNCTION_137	CALL_2
0x4001648	      0xbe00000000	                              mov esi, 0	       481	am.c	FUNCTION_19	CALL_2
0x400164d	          0x4889e7	                            mov rdi, rsp	       481	am.c	FUNCTION_19	CALL_2
0x4001650	      0xe800000000	                          call 0x4001655	       481	am.c	FUNCTION_19	CALL_2
0x4001655	          0x4889e7	                            mov rdi, rsp	       482	am.c	FUNCTION_19	CALL_3
0x4001658	      0xe800000000	                          call 0x400165d	       482	am.c	FUNCTION_19	CALL_3
0x400165d	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       483	am.c	FUNCTION_19
0x4001662	    0x644833042528	                xor rax, qword fs:[0x28]	       483	am.c	FUNCTION_19
0x400166b	            0x7405	                            je 0x4001672	       483	am.c	FUNCTION_19
0x400166d	      0xe800000000	                          call 0x4001672	       483	am.c	FUNCTION_19
0x4001672	        0x4883c428	                           add rsp, 0x28	       483	am.c	FUNCTION_19
0x4001676	              0xc3	                                     ret	       483	am.c	FUNCTION_19
clean_index	IF,7:WHILE,0:CALL,14:DO,0:ELSE,0:FOR,0:SWITCH,0:functions,0	101
0x400192d	            0x4154	                                push r12	      1990	am.c	FUNCTION_53
0x400192f	              0x55	                                push rbp	      1990	am.c	FUNCTION_53
0x4001930	              0x53	                                push rbx	      1990	am.c	FUNCTION_53
0x4001931	        0x4883ec20	                           sub rsp, 0x20	      1990	am.c	FUNCTION_53
0x4001935	          0x4889fd	                            mov rbp, rdi	      1990	am.c	FUNCTION_53
0x4001938	          0x4989f4	                            mov r12, rsi	      1990	am.c	FUNCTION_53
0x400193b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1990	am.c	FUNCTION_53
0x4001944	      0x4889442418	             mov qword [rsp + 0x18], rax	      1990	am.c	FUNCTION_53
0x4001949	            0x31c0	                            xor eax, eax	      1990	am.c	FUNCTION_53
0x400194b	      0xe800000000	                          call 0x4001950	      1994	am.c	FUNCTION_53	CALL_1
0x4001950	          0x4885c0	                           test rax, rax	      1995	am.c	FUNCTION_53	IF_1
0x4001953	            0x7539	                           jne 0x400198e	      1995	am.c	FUNCTION_53	IF_1
0x4001955	          0x4889ef	                            mov rdi, rbp	      1996	am.c	FUNCTION_53	CALL_3
0x4001958	      0xe800000000	                          call 0x400195d	      1996	am.c	FUNCTION_53	CALL_3
0x400195d	          0x4889c3	                            mov rbx, rax	      1996	am.c	FUNCTION_53	CALL_3
0x4001960	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x4001965	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x400196a	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x400196f	      0xe800000000	                          call 0x4001974	        54	gettext.h	FUNCTION_87
0x4001974	          0x4889de	                            mov rsi, rbx	      1996	am.c	FUNCTION_53	CALL_3
0x4001977	          0x4889c7	                            mov rdi, rax	      1996	am.c	FUNCTION_53	CALL_3
0x400197a	      0xb800000000	                              mov eax, 0	      1996	am.c	FUNCTION_53	CALL_3
0x400197f	      0xe800000000	                          call 0x4001984	      1996	am.c	FUNCTION_53	CALL_3
0x4001984	      0xbbffffffff	                     mov ebx, 0xffffffff	      1996	am.c	FUNCTION_53	CALL_3
0x4001989	      0xe9ff000000	                           jmp 0x4001a8d	      1996	am.c	FUNCTION_53	CALL_3
0x400198e	          0x4889c3	                            mov rbx, rax	      1996	am.c	FUNCTION_53	CALL_3
0x4001991	          0x4c89e7	                            mov rdi, r12	      1998	am.c	FUNCTION_53	CALL_4
0x4001994	      0xe800000000	                          call 0x4001999	      1998	am.c	FUNCTION_53	CALL_4
0x4001999	          0x4889c5	                            mov rbp, rax	      1998	am.c	FUNCTION_53	CALL_4
0x400199c	          0x4885c0	                           test rax, rax	      1999	am.c	FUNCTION_53	IF_2
0x400199f	            0x7539	                           jne 0x40019da	      1999	am.c	FUNCTION_53	IF_2
0x40019a1	          0x4c89e7	                            mov rdi, r12	      2000	am.c	FUNCTION_53	CALL_6
0x40019a4	      0xe800000000	                          call 0x40019a9	      2000	am.c	FUNCTION_53	CALL_6
0x40019a9	          0x4889c3	                            mov rbx, rax	      2000	am.c	FUNCTION_53	CALL_6
0x40019ac	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x40019b1	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x40019b6	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x40019bb	      0xe800000000	                          call 0x40019c0	        54	gettext.h	FUNCTION_87
0x40019c0	          0x4889de	                            mov rsi, rbx	      2000	am.c	FUNCTION_53	CALL_6
0x40019c3	          0x4889c7	                            mov rdi, rax	      2000	am.c	FUNCTION_53	CALL_6
0x40019c6	      0xb800000000	                              mov eax, 0	      2000	am.c	FUNCTION_53	CALL_6
0x40019cb	      0xe800000000	                          call 0x40019d0	      2000	am.c	FUNCTION_53	CALL_6
0x40019d0	      0xbbffffffff	                     mov ebx, 0xffffffff	      2000	am.c	FUNCTION_53	CALL_6
0x40019d5	      0xe9b3000000	                           jmp 0x4001a8d	      2000	am.c	FUNCTION_53	CALL_6
0x40019da	      0xbf00000000	                              mov edi, 0	      2002	am.c	FUNCTION_53
0x40019df	      0xe800000000	                          call 0x40019e4	      2002	am.c	FUNCTION_53
0x40019e4	      0xba01000000	                              mov edx, 1	      2004	am.c	FUNCTION_53	IF_3	CALL_7
0x40019e9	          0x4889de	                            mov rsi, rbx	      2004	am.c	FUNCTION_53	IF_3	CALL_7
0x40019ec	          0x4889df	                            mov rdi, rbx	      2004	am.c	FUNCTION_53	IF_3	CALL_7
0x40019ef	      0xe883fcffff	                call sym.fast_forward_to	      2004	am.c	FUNCTION_53	IF_3	CALL_7
0x40019f4	      0xbbffffffff	                     mov ebx, 0xffffffff	      2005	am.c	FUNCTION_53	IF_3
0x40019f9	            0x85c0	                           test eax, eax	      2004	am.c	FUNCTION_53	IF_3	CALL_7
0x40019fb	     0xf858c000000	                           jne 0x4001a8d	      2004	am.c	FUNCTION_53	IF_3	CALL_7
0x4001a01	      0xba00000000	                              mov edx, 0	      2007	am.c	FUNCTION_53	IF_4	CALL_8
0x4001a06	      0xbe00000000	                              mov esi, 0	      2007	am.c	FUNCTION_53	IF_4	CALL_8
0x4001a0b	          0x4889e7	                            mov rdi, rsp	      2007	am.c	FUNCTION_53	IF_4	CALL_8
0x4001a0e	      0xe800000000	                          call 0x4001a13	      2007	am.c	FUNCTION_53	IF_4	CALL_8
0x4001a13	            0x85c0	                           test eax, eax	      2007	am.c	FUNCTION_53	IF_4	CALL_8
0x4001a15	            0x7576	                           jne 0x4001a8d	      2007	am.c	FUNCTION_53	IF_4	CALL_8
0x4001a17	          0x4889e7	                            mov rdi, rsp	      2010	am.c	FUNCTION_53	CALL_9
0x4001a1a	      0xe800000000	                          call 0x4001a1f	      2010	am.c	FUNCTION_53	CALL_9
0x4001a1f	          0x4885c0	                           test rax, rax	      2011	am.c	FUNCTION_53	IF_5
0x4001a22	            0x7536	                           jne 0x4001a5a	      2011	am.c	FUNCTION_53	IF_5
0x4001a24	          0x4889e7	                            mov rdi, rsp	      2012	am.c	FUNCTION_53	CALL_11
0x4001a27	      0xe800000000	                          call 0x4001a2c	      2012	am.c	FUNCTION_53	CALL_11
0x4001a2c	          0x4889c3	                            mov rbx, rax	      2012	am.c	FUNCTION_53	CALL_11
0x4001a2f	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_87
0x4001a34	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_87
0x4001a39	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_87
0x4001a3e	      0xe800000000	                          call 0x4001a43	        54	gettext.h	FUNCTION_87
0x4001a43	          0x4889de	                            mov rsi, rbx	      2012	am.c	FUNCTION_53	CALL_11
0x4001a46	          0x4889c7	                            mov rdi, rax	      2012	am.c	FUNCTION_53	CALL_11
0x4001a49	      0xb800000000	                              mov eax, 0	      2012	am.c	FUNCTION_53	CALL_11
0x4001a4e	      0xe800000000	                          call 0x4001a53	      2012	am.c	FUNCTION_53	CALL_11
0x4001a53	      0xbbffffffff	                     mov ebx, 0xffffffff	      2012	am.c	FUNCTION_53	CALL_11
0x4001a58	            0xeb33	                           jmp 0x4001a8d	      2012	am.c	FUNCTION_53	CALL_11
0x4001a5a	      0xba00000000	                              mov edx, 0	      2014	am.c	FUNCTION_53	IF_6	CALL_12
0x4001a5f	          0x4889ee	                            mov rsi, rbp	      2014	am.c	FUNCTION_53	IF_6	CALL_12
0x4001a62	          0x4889c7	                            mov rdi, rax	      2014	am.c	FUNCTION_53	IF_6	CALL_12
0x4001a65	      0xe80dfcffff	                call sym.fast_forward_to	      2014	am.c	FUNCTION_53	IF_6	CALL_12
0x4001a6a	      0xbbffffffff	                     mov ebx, 0xffffffff	      2015	am.c	FUNCTION_53	IF_6
0x4001a6f	            0x85c0	                           test eax, eax	      2014	am.c	FUNCTION_53	IF_6	CALL_12
0x4001a71	            0x751a	                           jne 0x4001a8d	      2014	am.c	FUNCTION_53	IF_6	CALL_12
0x4001a73	          0x4889ef	                            mov rdi, rbp	      2017	am.c	FUNCTION_53	IF_7	CALL_13
0x4001a76	      0xe88bfdffff	                     call sym.merge_tree	      2017	am.c	FUNCTION_53	IF_7	CALL_13
0x4001a7b	            0x89c3	                            mov ebx, eax	      2017	am.c	FUNCTION_53	IF_7	CALL_13
0x4001a7d	            0x85c0	                           test eax, eax	      2017	am.c	FUNCTION_53	IF_7	CALL_13
0x4001a7f	            0x7507	                           jne 0x4001a88	      2017	am.c	FUNCTION_53	IF_7	CALL_13
0x4001a81	      0xe800000000	                          call 0x4001a86	      2020	am.c	FUNCTION_53	CALL_14
0x4001a86	            0xeb05	                           jmp 0x4001a8d	      2022	am.c	FUNCTION_53
0x4001a88	      0xbbffffffff	                     mov ebx, 0xffffffff	      2018	am.c	FUNCTION_53	IF_7
0x4001a8d	            0x89d8	                            mov eax, ebx	      2023	am.c	FUNCTION_53
0x4001a8f	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2023	am.c	FUNCTION_53
0x4001a94	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2023	am.c	FUNCTION_53
0x4001a9d	            0x7405	                            je 0x4001aa4	      2023	am.c	FUNCTION_53
0x4001a9f	      0xe800000000	                          call 0x4001aa4	      2023	am.c	FUNCTION_53
0x4001aa4	        0x4883c420	                           add rsp, 0x20	      2023	am.c	FUNCTION_53
0x4001aa8	              0x5b	                                 pop rbx	      2023	am.c	FUNCTION_53
0x4001aa9	              0x5d	                                 pop rbp	      2023	am.c	FUNCTION_53
0x4001aaa	            0x415c	                                 pop r12	      2023	am.c	FUNCTION_53
0x4001aac	              0xc3	                                     ret	      2023	am.c	FUNCTION_53
am_rerere_clear	IF,0:WHILE,0:CALL,2:DO,0:ELSE,0:FOR,0:SWITCH,0:functions,0	20
0x4001593	        0x4883ec38	                           sub rsp, 0x38	      2029	am.c	FUNCTION_54
0x4001597	    0x64488b042528	                mov rax, qword fs:[0x28]	      2029	am.c	FUNCTION_54
0x40015a0	      0x4889442428	             mov qword [rsp + 0x28], rax	      2029	am.c	FUNCTION_54
0x40015a5	            0x31c0	                            xor eax, eax	      2029	am.c	FUNCTION_54
0x40015a7	    0x48c704240000	                      mov qword [rsp], 0	      2030	am.c	FUNCTION_54
0x40015af	    0xc74424080000	                  mov dword [rsp + 8], 0	      2030	am.c	FUNCTION_54
0x40015b7	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      2030	am.c	FUNCTION_54
0x40015bf	      0x804c241001	                 or byte [rsp + 0x10], 1	      2030	am.c	FUNCTION_54
0x40015c4	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2030	am.c	FUNCTION_54
0x40015cd	          0x4889e7	                            mov rdi, rsp	      2031	am.c	FUNCTION_54	CALL_1
0x40015d0	      0xe800000000	                          call 0x40015d5	      2031	am.c	FUNCTION_54	CALL_1
0x40015d5	      0xbe01000000	                              mov esi, 1	      2032	am.c	FUNCTION_54	CALL_2
0x40015da	          0x4889e7	                            mov rdi, rsp	      2032	am.c	FUNCTION_54	CALL_2
0x40015dd	      0xe800000000	                          call 0x40015e2	      2032	am.c	FUNCTION_54	CALL_2
0x40015e2	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2033	am.c	FUNCTION_54
0x40015e7	    0x644833042528	                xor rax, qword fs:[0x28]	      2033	am.c	FUNCTION_54
0x40015f0	            0x7405	                            je 0x40015f7	      2033	am.c	FUNCTION_54
0x40015f2	      0xe800000000	                          call 0x40015f7	      2033	am.c	FUNCTION_54
0x40015f7	        0x4883c438	                           add rsp, 0x38	      2033	am.c	FUNCTION_54
0x40015fb	              0xc3	                                     ret	      2033	am.c	FUNCTION_54
