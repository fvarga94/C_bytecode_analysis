supported_man_viewer	DO,0:ELSE,0:WHILE,0:SWITCH,0:CALL,3:IF,0:functions,0:FOR,0	31
0x40000da	              0x55	                                push rbp	       187	help.c	FUNCTION_9
0x40000db	              0x53	                                push rbx	       187	help.c	FUNCTION_9
0x40000dc	        0x4883ec08	                              sub rsp, 8	       187	help.c	FUNCTION_9
0x40000e0	          0x4889fb	                            mov rbx, rdi	       187	help.c	FUNCTION_9
0x40000e3	          0x4889f5	                            mov rbp, rsi	       187	help.c	FUNCTION_9
0x40000e6	          0x4889f2	                            mov rdx, rsi	       188	help.c	FUNCTION_9	CALL_1
0x40000e9	          0x4889fe	                            mov rsi, rdi	       188	help.c	FUNCTION_9	CALL_1
0x40000ec	      0xbf00000000	                              mov edi, 0	       188	help.c	FUNCTION_9	CALL_1
0x40000f1	      0xe800000000	                          call 0x40000f6	       188	help.c	FUNCTION_9	CALL_1
0x40000f6	      0xba01000000	                              mov edx, 1	       189	help.c	FUNCTION_9	CALL_2
0x40000fb	            0x85c0	                           test eax, eax	       189	help.c	FUNCTION_9	CALL_2
0x40000fd	            0x7431	                            je 0x4000130	       189	help.c	FUNCTION_9	CALL_2
0x40000ff	          0x4889ea	                            mov rdx, rbp	       189	help.c	FUNCTION_9	CALL_2
0x4000102	          0x4889de	                            mov rsi, rbx	       189	help.c	FUNCTION_9	CALL_2
0x4000105	      0xbf00000000	                              mov edi, 0	       189	help.c	FUNCTION_9	CALL_2
0x400010a	      0xe800000000	                          call 0x400010f	       189	help.c	FUNCTION_9	CALL_2
0x400010f	      0xba01000000	                              mov edx, 1	       189	help.c	FUNCTION_9	CALL_2
0x4000114	            0x85c0	                           test eax, eax	       188	help.c	FUNCTION_9	CALL_1
0x4000116	            0x7418	                            je 0x4000130	       188	help.c	FUNCTION_9	CALL_1
0x4000118	          0x4889ea	                            mov rdx, rbp	       190	help.c	FUNCTION_9	CALL_3
0x400011b	          0x4889de	                            mov rsi, rbx	       190	help.c	FUNCTION_9	CALL_3
0x400011e	      0xbf00000000	                              mov edi, 0	       190	help.c	FUNCTION_9	CALL_3
0x4000123	      0xe800000000	                          call 0x4000128	       190	help.c	FUNCTION_9	CALL_3
0x4000128	            0x85c0	                           test eax, eax	       189	help.c	FUNCTION_9	CALL_2
0x400012a	           0xf94c2	                                 sete dl	       189	help.c	FUNCTION_9	CALL_2
0x400012d	           0xfb6d2	                           movzx edx, dl	       189	help.c	FUNCTION_9	CALL_2
0x4000130	            0x89d0	                            mov eax, edx	       191	help.c	FUNCTION_9
0x4000132	        0x4883c408	                              add rsp, 8	       191	help.c	FUNCTION_9
0x4000136	              0x5b	                                 pop rbx	       191	help.c	FUNCTION_9
0x4000137	              0x5d	                                 pop rbp	       191	help.c	FUNCTION_9
0x4000138	              0xc3	                                     ret	       191	help.c	FUNCTION_9
is_git_command	DO,0:ELSE,0:WHILE,0:SWITCH,0:CALL,4:IF,1:functions,0:FOR,0	25
0x4000555	              0x53	                                push rbx	       285	help.c	FUNCTION_15
0x4000556	          0x4889fb	                            mov rbx, rdi	       285	help.c	FUNCTION_15
0x4000559	      0xe800000000	                          call 0x400055e	       286	help.c	FUNCTION_15	IF_1	CALL_1
0x400055e	      0xba01000000	                              mov edx, 1	       287	help.c	FUNCTION_15	IF_1
0x4000563	            0x85c0	                           test eax, eax	       286	help.c	FUNCTION_15	IF_1	CALL_1
0x4000565	            0x753f	                           jne 0x40005a6	       286	help.c	FUNCTION_15	IF_1	CALL_1
0x4000567	      0xba00000000	                              mov edx, 0	       289	help.c	FUNCTION_15	CALL_2
0x400056c	      0xbe00000000	                              mov esi, 0	       289	help.c	FUNCTION_15	CALL_2
0x4000571	      0xbf00000000	                              mov edi, 0	       289	help.c	FUNCTION_15	CALL_2
0x4000576	      0xe800000000	                          call 0x400057b	       289	help.c	FUNCTION_15	CALL_2
0x400057b	          0x4889de	                            mov rsi, rbx	       290	help.c	FUNCTION_15	CALL_3
0x400057e	      0xbf00000000	                              mov edi, 0	       290	help.c	FUNCTION_15	CALL_3
0x4000583	      0xe800000000	                          call 0x4000588	       290	help.c	FUNCTION_15	CALL_3
0x4000588	      0xba01000000	                              mov edx, 1	       290	help.c	FUNCTION_15	CALL_3
0x400058d	            0x85c0	                           test eax, eax	       290	help.c	FUNCTION_15	CALL_3
0x400058f	            0x7515	                           jne 0x40005a6	       290	help.c	FUNCTION_15	CALL_3
0x4000591	          0x4889de	                            mov rsi, rbx	       291	help.c	FUNCTION_15	CALL_4
0x4000594	      0xbf00000000	                              mov edi, 0	       291	help.c	FUNCTION_15	CALL_4
0x4000599	      0xe800000000	                          call 0x400059e	       291	help.c	FUNCTION_15	CALL_4
0x400059e	            0x85c0	                           test eax, eax	       287	help.c	FUNCTION_15	IF_1
0x40005a0	           0xf95c2	                                setne dl	       287	help.c	FUNCTION_15	IF_1
0x40005a3	           0xfb6d2	                           movzx edx, dl	       287	help.c	FUNCTION_15	IF_1
0x40005a6	            0x89d0	                            mov eax, edx	       292	help.c	FUNCTION_15
0x40005a8	              0x5b	                                 pop rbx	       292	help.c	FUNCTION_15
0x40005a9	              0xc3	                                     ret	       292	help.c	FUNCTION_15
git_help_config	DO,0:ELSE,0:WHILE,0:SWITCH,0:CALL,14:IF,8:functions,0:FOR,0	227
0x400021a	            0x4156	                                push r14	       255	help.c	FUNCTION_14
0x400021c	            0x4155	                                push r13	       255	help.c	FUNCTION_14
0x400021e	            0x4154	                                push r12	       255	help.c	FUNCTION_14
0x4000220	              0x55	                                push rbp	       255	help.c	FUNCTION_14
0x4000221	              0x53	                                push rbx	       255	help.c	FUNCTION_14
0x4000222	        0x4883ec20	                           sub rsp, 0x20	       255	help.c	FUNCTION_14
0x4000226	          0x4889fd	                            mov rbp, rdi	       255	help.c	FUNCTION_14
0x4000229	          0x4989f4	                            mov r12, rsi	       255	help.c	FUNCTION_14
0x400022c	          0x4989d6	                            mov r14, rdx	       255	help.c	FUNCTION_14
0x400022f	    0x64488b042528	                mov rax, qword fs:[0x28]	       255	help.c	FUNCTION_14
0x4000238	      0x4889442418	             mov qword [rsp + 0x18], rax	       255	help.c	FUNCTION_14
0x400023d	            0x31c0	                            xor eax, eax	       255	help.c	FUNCTION_14
0x400023f	      0xbe00000000	                              mov esi, 0	       256	help.c	FUNCTION_14	IF_1	CALL_1
0x4000244	      0xe800000000	                          call 0x4000249	       256	help.c	FUNCTION_14	IF_1	CALL_1
0x4000249	            0x85c0	                           test eax, eax	       256	help.c	FUNCTION_14	IF_1	CALL_1
0x400024b	            0x741c	                            je 0x4000269	       256	help.c	FUNCTION_14	IF_1	CALL_1
0x400024d	      0xb900000000	                              mov ecx, 0	       257	help.c	FUNCTION_14	CALL_2
0x4000252	      0xba00000000	                              mov edx, 0	       257	help.c	FUNCTION_14	CALL_2
0x4000257	          0x4c89e6	                            mov rsi, r12	       257	help.c	FUNCTION_14	CALL_2
0x400025a	          0x4889ef	                            mov rdi, rbp	       257	help.c	FUNCTION_14	CALL_2
0x400025d	      0xe800000000	                          call 0x4000262	       257	help.c	FUNCTION_14	CALL_2
0x4000262	            0x89c3	                            mov ebx, eax	       257	help.c	FUNCTION_14	CALL_2
0x4000264	      0xe9c8020000	                           jmp 0x4000531	       257	help.c	FUNCTION_14	CALL_2
0x4000269	          0x4189c5	                           mov r13d, eax	       257	help.c	FUNCTION_14	CALL_2
0x400026c	      0xbf00000000	                              mov edi, 0	       258	help.c	FUNCTION_14	IF_2	CALL_3
0x4000271	      0xb90c000000	                            mov ecx, 0xc	       258	help.c	FUNCTION_14	IF_2	CALL_3
0x4000276	          0x4889ee	                            mov rsi, rbp	       258	help.c	FUNCTION_14	IF_2	CALL_3
0x4000279	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       258	help.c	FUNCTION_14	IF_2	CALL_3
0x400027b	           0xf97c3	                                 seta bl	       258	help.c	FUNCTION_14	IF_2	CALL_3
0x400027e	           0xf92c0	                                 setb al	       258	help.c	FUNCTION_14	IF_2	CALL_3
0x4000281	            0x29c3	                            sub ebx, eax	       258	help.c	FUNCTION_14	IF_2	CALL_3
0x4000283	           0xfbedb	                           movsx ebx, bl	       258	help.c	FUNCTION_14	IF_2	CALL_3
0x4000286	            0x85db	                           test ebx, ebx	       258	help.c	FUNCTION_14	IF_2	CALL_3
0x4000288	            0x752a	                           jne 0x40002b4	       258	help.c	FUNCTION_14	IF_2	CALL_3
0x400028a	          0x4d85e4	                           test r12, r12	       259	help.c	FUNCTION_14	IF_2	IF_3
0x400028d	            0x7512	                           jne 0x40002a1	       259	help.c	FUNCTION_14	IF_2	IF_3
0x400028f	          0x4889ef	                            mov rdi, rbp	       260	help.c	FUNCTION_14	IF_2	CALL_4
0x4000292	      0xe800000000	                          call 0x4000297	       260	help.c	FUNCTION_14	IF_2	CALL_4
0x4000297	      0xbbffffffff	                     mov ebx, 0xffffffff	       260	help.c	FUNCTION_14	IF_2	CALL_4
0x400029c	      0xe990020000	                           jmp 0x4000531	       260	help.c	FUNCTION_14	IF_2	CALL_4
0x40002a1	          0x4c89e7	                            mov rdi, r12	       261	help.c	FUNCTION_14	IF_2	CALL_5
0x40002a4	      0xe890feffff	              call sym.parse_help_format	       261	help.c	FUNCTION_14	IF_2	CALL_5
0x40002a9	    0x890500000000	            mov dword [0x040002af], eax 	       261	help.c	FUNCTION_14	IF_2	CALL_5
0x40002af	      0xe97d020000	                           jmp 0x4000531	       262	help.c	FUNCTION_14	IF_2
0x40002b4	      0xbf00000000	                              mov edi, 0	       264	help.c	FUNCTION_14	IF_4	CALL_6
0x40002b9	      0xb90e000000	                            mov ecx, 0xe	       264	help.c	FUNCTION_14	IF_4	CALL_6
0x40002be	          0x4889ee	                            mov rsi, rbp	       264	help.c	FUNCTION_14	IF_4	CALL_6
0x40002c1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       264	help.c	FUNCTION_14	IF_4	CALL_6
0x40002c3	           0xf97c3	                                 seta bl	       264	help.c	FUNCTION_14	IF_4	CALL_6
0x40002c6	           0xf92c0	                                 setb al	       264	help.c	FUNCTION_14	IF_4	CALL_6
0x40002c9	            0x29c3	                            sub ebx, eax	       264	help.c	FUNCTION_14	IF_4	CALL_6
0x40002cb	           0xfbedb	                           movsx ebx, bl	       264	help.c	FUNCTION_14	IF_4	CALL_6
0x40002ce	            0x85db	                           test ebx, ebx	       264	help.c	FUNCTION_14	IF_4	CALL_6
0x40002d0	            0x752b	                           jne 0x40002fd	       264	help.c	FUNCTION_14	IF_4	CALL_6
0x40002d2	          0x4d85e4	                           test r12, r12	       265	help.c	FUNCTION_14	IF_4	IF_5
0x40002d5	            0x7512	                           jne 0x40002e9	       265	help.c	FUNCTION_14	IF_4	IF_5
0x40002d7	          0x4889ef	                            mov rdi, rbp	       266	help.c	FUNCTION_14	IF_4	CALL_7
0x40002da	      0xe800000000	                          call 0x40002df	       266	help.c	FUNCTION_14	IF_4	CALL_7
0x40002df	      0xbbffffffff	                     mov ebx, 0xffffffff	       266	help.c	FUNCTION_14	IF_4	CALL_7
0x40002e4	      0xe948020000	                           jmp 0x4000531	       266	help.c	FUNCTION_14	IF_4	CALL_7
0x40002e9	          0x4c89e7	                            mov rdi, r12	       267	help.c	FUNCTION_14	IF_4	CALL_8
0x40002ec	      0xe800000000	                          call 0x40002f1	       267	help.c	FUNCTION_14	IF_4	CALL_8
0x40002f1	    0x488905000000	            mov qword [0x040002f8], rax 	       267	help.c	FUNCTION_14	IF_4	CALL_8
0x40002f8	      0xe934020000	                           jmp 0x4000531	       268	help.c	FUNCTION_14	IF_4
0x40002fd	      0xbf00000000	                              mov edi, 0	       270	help.c	FUNCTION_14	IF_6	CALL_9
0x4000302	      0xb90b000000	                            mov ecx, 0xb	       270	help.c	FUNCTION_14	IF_6	CALL_9
0x4000307	          0x4889ee	                            mov rsi, rbp	       270	help.c	FUNCTION_14	IF_6	CALL_9
0x400030a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       270	help.c	FUNCTION_14	IF_6	CALL_9
0x400030c	           0xf97c3	                                 seta bl	       270	help.c	FUNCTION_14	IF_6	CALL_9
0x400030f	           0xf92c0	                                 setb al	       270	help.c	FUNCTION_14	IF_6	CALL_9
0x4000312	            0x29c3	                            sub ebx, eax	       270	help.c	FUNCTION_14	IF_6	CALL_9
0x4000314	           0xfbedb	                           movsx ebx, bl	       270	help.c	FUNCTION_14	IF_6	CALL_9
0x4000317	            0x85db	                           test ebx, ebx	       270	help.c	FUNCTION_14	IF_6	CALL_9
0x4000319	     0xf85af000000	                           jne 0x40003ce	       270	help.c	FUNCTION_14	IF_6	CALL_9
0x400031f	          0x4d85e4	                           test r12, r12	       271	help.c	FUNCTION_14	IF_6	IF_7
0x4000322	            0x7413	                            je 0x4000337	       271	help.c	FUNCTION_14	IF_6	IF_7
0x4000324	    0x488b15000000	            mov rdx, qword [0x0400032b] 	       179	help.c	FUNCTION_8
0x400032b	      0xbd00000000	                              mov ebp, 0	       179	help.c	FUNCTION_8
0x4000330	          0x4885d2	                           test rdx, rdx	       181	help.c	FUNCTION_8	WHILE_1
0x4000333	            0x7422	                            je 0x4000357	       181	help.c	FUNCTION_8	WHILE_1
0x4000335	            0xeb15	                           jmp 0x400034c	       181	help.c	FUNCTION_8	WHILE_1
0x4000337	          0x4889ef	                            mov rdi, rbp	       272	help.c	FUNCTION_14	IF_6	CALL_10
0x400033a	      0xe800000000	                          call 0x400033f	       272	help.c	FUNCTION_14	IF_6	CALL_10
0x400033f	      0xbbffffffff	                     mov ebx, 0xffffffff	       272	help.c	FUNCTION_14	IF_6	CALL_10
0x4000344	      0xe9e8010000	                           jmp 0x4000531	       272	help.c	FUNCTION_14	IF_6	CALL_10
0x4000349	          0x4889c2	                            mov rdx, rax	       182	help.c	FUNCTION_8	WHILE_1
0x400034c	          0x488b02	                    mov rax, qword [rdx]	       182	help.c	FUNCTION_8	WHILE_1
0x400034f	          0x4885c0	                           test rax, rax	       181	help.c	FUNCTION_8	WHILE_1
0x4000352	            0x75f5	                           jne 0x4000349	       181	help.c	FUNCTION_8	WHILE_1
0x4000354	          0x4889d5	                            mov rbp, rdx	       182	help.c	FUNCTION_8	WHILE_1
0x4000357	      0xb800000000	                              mov eax, 0	       183	help.c	FUNCTION_8
0x400035c	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       183	help.c	FUNCTION_8
0x4000363	          0x4c89e7	                            mov rdi, r12	       183	help.c	FUNCTION_8
0x4000366	            0xf2ae	              repne scasb al, byte [rdi]	       183	help.c	FUNCTION_8
0x4000368	          0x48f7d1	                                 not rcx	       183	help.c	FUNCTION_8
0x400036b	        0x4c8d69ff	                      lea r13, [rcx - 1]	       183	help.c	FUNCTION_8
0x400036f	        0x4983fdf7	             cmp r13, 0xfffffffffffffff7	       785	git-compat-util.h	FUNCTION_40	IF_1
0x4000373	            0x7612	                           jbe 0x4000387	       785	git-compat-util.h	FUNCTION_40	IF_1
0x4000375	          0x4c89ea	                            mov rdx, r13	       786	git-compat-util.h	FUNCTION_40	IF_1	CALL_1
0x4000378	      0xbe08000000	                              mov esi, 8	       786	git-compat-util.h	FUNCTION_40	IF_1	CALL_1
0x400037d	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_40	IF_1	CALL_1
0x4000382	      0xe800000000	                          call 0x4000387	       786	git-compat-util.h	FUNCTION_40	IF_1	CALL_1
0x4000387	        0x4983fdf7	             cmp r13, 0xfffffffffffffff7	       785	git-compat-util.h	FUNCTION_40	IF_1
0x400038b	            0x751b	                           jne 0x40003a8	       785	git-compat-util.h	FUNCTION_40	IF_1
0x400038d	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_40	IF_1	CALL_1
0x4000392	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_40	IF_1	CALL_1
0x4000399	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_40	IF_1	CALL_1
0x400039e	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_40	IF_1	CALL_1
0x40003a3	      0xe800000000	                          call 0x40003a8	       786	git-compat-util.h	FUNCTION_40	IF_1	CALL_1
0x40003a8	        0x498d7509	                      lea rsi, [r13 + 9]	       183	help.c	FUNCTION_8
0x40003ac	      0xbf01000000	                              mov edi, 1	       183	help.c	FUNCTION_8
0x40003b1	      0xe800000000	                          call 0x40003b6	       183	help.c	FUNCTION_8
0x40003b6	        0x48894500	                    mov qword [rbp], rax	       183	help.c	FUNCTION_8
0x40003ba	        0x488d7808	                      lea rdi, [rax + 8]	        53	string3.h	FUNCTION_54	CALL_3
0x40003be	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_54	CALL_3
0x40003c1	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_54	CALL_3
0x40003c4	      0xe800000000	                          call 0x40003c9	        53	string3.h	FUNCTION_54	CALL_3
0x40003c9	      0xe963010000	                           jmp 0x4000531	        53	string3.h	FUNCTION_54	CALL_3
0x40003ce	      0xbe00000000	                              mov esi, 0	       276	help.c	FUNCTION_14	IF_8	CALL_12
0x40003d3	          0x4889ef	                            mov rdi, rbp	       276	help.c	FUNCTION_14	IF_8	CALL_12
0x40003d6	      0xe800000000	                          call 0x40003db	       276	help.c	FUNCTION_14	IF_8	CALL_12
0x40003db	            0x85c0	                           test eax, eax	       276	help.c	FUNCTION_14	IF_8	CALL_12
0x40003dd	     0xf843e010000	                            je 0x4000521	       276	help.c	FUNCTION_14	IF_8	CALL_12
0x40003e3	      0x4c8d442410	                    lea r8, [rsp + 0x10]	       237	help.c	FUNCTION_13	IF_1	CALL_1
0x40003e8	      0x488d4c2404	                      lea rcx, [rsp + 4]	       237	help.c	FUNCTION_13	IF_1	CALL_1
0x40003ed	      0x488d542408	                      lea rdx, [rsp + 8]	       237	help.c	FUNCTION_13	IF_1	CALL_1
0x40003f2	      0xbe00000000	                              mov esi, 0	       237	help.c	FUNCTION_13	IF_1	CALL_1
0x40003f7	          0x4889ef	                            mov rdi, rbp	       237	help.c	FUNCTION_13	IF_1	CALL_1
0x40003fa	      0xe800000000	                          call 0x40003ff	       237	help.c	FUNCTION_13	IF_1	CALL_1
0x40003ff	            0x85c0	                           test eax, eax	       237	help.c	FUNCTION_13	IF_1	CALL_1
0x4000401	     0xf8815010000	                            js 0x400051c	       237	help.c	FUNCTION_13	IF_1	CALL_1
0x4000407	      0x4c8b742408	                mov r14, qword [rsp + 8]	       237	help.c	FUNCTION_13	IF_1	CALL_1
0x400040c	          0x4d85f6	                           test r14, r14	       237	help.c	FUNCTION_13	IF_1	CALL_1
0x400040f	     0xf8407010000	                            je 0x400051c	       237	help.c	FUNCTION_13	IF_1	CALL_1
0x4000415	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       240	help.c	FUNCTION_13	IF_2	CALL_2
0x400041a	      0xbf00000000	                              mov edi, 0	       240	help.c	FUNCTION_13	IF_2	CALL_2
0x400041f	      0xb905000000	                              mov ecx, 5	       240	help.c	FUNCTION_13	IF_2	CALL_2
0x4000424	          0x4889c6	                            mov rsi, rax	       240	help.c	FUNCTION_13	IF_2	CALL_2
0x4000427	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       240	help.c	FUNCTION_13	IF_2	CALL_2
0x4000429	           0xf97c3	                                 seta bl	       240	help.c	FUNCTION_13	IF_2	CALL_2
0x400042c	           0xf92c2	                                 setb dl	       240	help.c	FUNCTION_13	IF_2	CALL_2
0x400042f	            0x29d3	                            sub ebx, edx	       240	help.c	FUNCTION_13	IF_2	CALL_2
0x4000431	           0xfbedb	                           movsx ebx, bl	       240	help.c	FUNCTION_13	IF_2	CALL_2
0x4000434	            0x85db	                           test ebx, ebx	       240	help.c	FUNCTION_13	IF_2	CALL_2
0x4000436	            0x756b	                           jne 0x40004a3	       240	help.c	FUNCTION_13	IF_2	CALL_2
0x4000438	          0x4d85e4	                           test r12, r12	       241	help.c	FUNCTION_13	IF_2	IF_3
0x400043b	            0x7513	                           jne 0x4000450	       241	help.c	FUNCTION_13	IF_2	IF_3
0x400043d	          0x4889ef	                            mov rdi, rbp	       242	help.c	FUNCTION_13	IF_2	CALL_3
0x4000440	      0xe800000000	                          call 0x4000445	       242	help.c	FUNCTION_13	IF_2	CALL_3
0x4000445	    0x41bdffffffff	                    mov r13d, 0xffffffff	       242	help.c	FUNCTION_13	IF_2	CALL_3
0x400044b	      0xe9cc000000	                           jmp 0x400051c	       242	help.c	FUNCTION_13	IF_2	CALL_3
0x4000450	      0x48636c2404	            movsxd rbp, dword [rsp + 4] 	       243	help.c	FUNCTION_13	IF_2	CALL_4
0x4000455	          0x4889ee	                            mov rsi, rbp	       208	help.c	FUNCTION_11	IF_1	CALL_1
0x4000458	          0x4c89f7	                            mov rdi, r14	       208	help.c	FUNCTION_11	IF_1	CALL_1
0x400045b	      0xe87afcffff	           call sym.supported_man_viewer	       208	help.c	FUNCTION_11	IF_1	CALL_1
0x4000460	          0x4189c5	                           mov r13d, eax	       208	help.c	FUNCTION_11	IF_1	CALL_1
0x4000463	            0x85c0	                           test eax, eax	       208	help.c	FUNCTION_11	IF_1	CALL_1
0x4000465	            0x7416	                            je 0x400047d	       208	help.c	FUNCTION_11	IF_1	CALL_1
0x4000467	          0x4c89e2	                            mov rdx, r12	       209	help.c	FUNCTION_11	CALL_2
0x400046a	          0x4889ee	                            mov rsi, rbp	       209	help.c	FUNCTION_11	CALL_2
0x400046d	          0x4c89f7	                            mov rdi, r14	       209	help.c	FUNCTION_11	CALL_2
0x4000470	      0xe8cbfbffff	         call sym.do_add_man_viewer_info	       209	help.c	FUNCTION_11	CALL_2
0x4000475	          0x4189dd	                           mov r13d, ebx	       243	help.c	FUNCTION_13	IF_2	CALL_4
0x4000478	      0xe99f000000	                           jmp 0x400051c	       243	help.c	FUNCTION_13	IF_2	CALL_4
0x400047d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_68
0x4000482	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_68
0x4000487	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_68
0x400048c	      0xe800000000	                          call 0x4000491	        54	gettext.h	FUNCTION_68
0x4000491	          0x4c89f6	                            mov rsi, r14	       211	help.c	FUNCTION_11	ELSE_1	CALL_4
0x4000494	          0x4889c7	                            mov rdi, rax	       211	help.c	FUNCTION_11	ELSE_1	CALL_4
0x4000497	      0xb800000000	                              mov eax, 0	       211	help.c	FUNCTION_11	ELSE_1	CALL_4
0x400049c	      0xe800000000	                          call 0x40004a1	       211	help.c	FUNCTION_11	ELSE_1	CALL_4
0x40004a1	            0xeb79	                           jmp 0x400051c	       211	help.c	FUNCTION_11	ELSE_1	CALL_4
0x40004a3	          0x803863	                    cmp byte [rax], 0x63	       245	help.c	FUNCTION_13	IF_4	CALL_5
0x40004a6	            0x7574	                           jne 0x400051c	       245	help.c	FUNCTION_13	IF_4	CALL_5
0x40004a8	        0x8078016d	                cmp byte [rax + 1], 0x6d	       245	help.c	FUNCTION_13	IF_4	CALL_5
0x40004ac	            0x756e	                           jne 0x400051c	       245	help.c	FUNCTION_13	IF_4	CALL_5
0x40004ae	        0x80780264	                cmp byte [rax + 2], 0x64	       245	help.c	FUNCTION_13	IF_4	CALL_5
0x40004b2	            0x7568	                           jne 0x400051c	       245	help.c	FUNCTION_13	IF_4	CALL_5
0x40004b4	        0x80780300	                   cmp byte [rax + 3], 0	       245	help.c	FUNCTION_13	IF_4	CALL_5
0x40004b8	            0x7562	                           jne 0x400051c	       245	help.c	FUNCTION_13	IF_4	CALL_5
0x40004ba	          0x4d85e4	                           test r12, r12	       246	help.c	FUNCTION_13	IF_4	IF_5
0x40004bd	            0x7510	                           jne 0x40004cf	       246	help.c	FUNCTION_13	IF_4	IF_5
0x40004bf	          0x4889ef	                            mov rdi, rbp	       247	help.c	FUNCTION_13	IF_4	CALL_6
0x40004c2	      0xe800000000	                          call 0x40004c7	       247	help.c	FUNCTION_13	IF_4	CALL_6
0x40004c7	    0x41bdffffffff	                    mov r13d, 0xffffffff	       247	help.c	FUNCTION_13	IF_4	CALL_6
0x40004cd	            0xeb4d	                           jmp 0x400051c	       247	help.c	FUNCTION_13	IF_4	CALL_6
0x40004cf	      0x48636c2404	            movsxd rbp, dword [rsp + 4] 	       248	help.c	FUNCTION_13	IF_4	CALL_7
0x40004d4	          0x4889ee	                            mov rsi, rbp	       222	help.c	FUNCTION_12	IF_1	CALL_1
0x40004d7	          0x4c89f7	                            mov rdi, r14	       222	help.c	FUNCTION_12	IF_1	CALL_1
0x40004da	      0xe8fbfbffff	           call sym.supported_man_viewer	       222	help.c	FUNCTION_12	IF_1	CALL_1
0x40004df	            0x89c3	                            mov ebx, eax	       222	help.c	FUNCTION_12	IF_1	CALL_1
0x40004e1	            0x85c0	                           test eax, eax	       222	help.c	FUNCTION_12	IF_1	CALL_1
0x40004e3	            0x7426	                            je 0x400050b	       222	help.c	FUNCTION_12	IF_1	CALL_1
0x40004e5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_68
0x40004ea	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_68
0x40004ef	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_68
0x40004f4	      0xe800000000	                          call 0x40004f9	        54	gettext.h	FUNCTION_68
0x40004f9	          0x4c89f6	                            mov rsi, r14	       223	help.c	FUNCTION_12	IF_1	CALL_3
0x40004fc	          0x4889c7	                            mov rdi, rax	       223	help.c	FUNCTION_12	IF_1	CALL_3
0x40004ff	      0xb800000000	                              mov eax, 0	       223	help.c	FUNCTION_12	IF_1	CALL_3
0x4000504	      0xe800000000	                          call 0x4000509	       223	help.c	FUNCTION_12	IF_1	CALL_3
0x4000509	            0xeb11	                           jmp 0x400051c	       223	help.c	FUNCTION_12	IF_1	CALL_3
0x400050b	          0x4c89e2	                            mov rdx, r12	       227	help.c	FUNCTION_12	CALL_4
0x400050e	          0x4889ee	                            mov rsi, rbp	       227	help.c	FUNCTION_12	CALL_4
0x4000511	          0x4c89f7	                            mov rdi, r14	       227	help.c	FUNCTION_12	CALL_4
0x4000514	      0xe827fbffff	         call sym.do_add_man_viewer_info	       227	help.c	FUNCTION_12	CALL_4
0x4000519	          0x4189dd	                           mov r13d, ebx	       248	help.c	FUNCTION_13	IF_4	CALL_7
0x400051c	          0x4489eb	                           mov ebx, r13d	       277	help.c	FUNCTION_14	CALL_13
0x400051f	            0xeb10	                           jmp 0x4000531	       277	help.c	FUNCTION_14	CALL_13
0x4000521	          0x4c89f2	                            mov rdx, r14	       279	help.c	FUNCTION_14	CALL_14
0x4000524	          0x4c89e6	                            mov rsi, r12	       279	help.c	FUNCTION_14	CALL_14
0x4000527	          0x4889ef	                            mov rdi, rbp	       279	help.c	FUNCTION_14	CALL_14
0x400052a	      0xe800000000	                          call 0x400052f	       279	help.c	FUNCTION_14	CALL_14
0x400052f	            0x89c3	                            mov ebx, eax	       279	help.c	FUNCTION_14	CALL_14
0x4000531	            0x89d8	                            mov eax, ebx	       280	help.c	FUNCTION_14
0x4000533	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       280	help.c	FUNCTION_14
0x4000538	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       280	help.c	FUNCTION_14
0x4000541	            0x7405	                            je 0x4000548	       280	help.c	FUNCTION_14
0x4000543	      0xe800000000	                          call 0x4000548	       280	help.c	FUNCTION_14
0x4000548	        0x4883c420	                           add rsp, 0x20	       280	help.c	FUNCTION_14
0x400054c	              0x5b	                                 pop rbx	       280	help.c	FUNCTION_14
0x400054d	              0x5d	                                 pop rbp	       280	help.c	FUNCTION_14
0x400054e	            0x415c	                                 pop r12	       280	help.c	FUNCTION_14
0x4000550	            0x415d	                                 pop r13	       280	help.c	FUNCTION_14
0x4000552	            0x415e	                                 pop r14	       280	help.c	FUNCTION_14
0x4000554	              0xc3	                                     ret	       280	help.c	FUNCTION_14
do_add_man_viewer_info	DO,0:ELSE,0:WHILE,0:SWITCH,0:CALL,1:IF,0:functions,0:FOR,0	42
0x4000040	            0x4155	                                push r13	       196	help.c	FUNCTION_10
0x4000042	            0x4154	                                push r12	       196	help.c	FUNCTION_10
0x4000044	              0x55	                                push rbp	       196	help.c	FUNCTION_10
0x4000045	              0x53	                                push rbx	       196	help.c	FUNCTION_10
0x4000046	        0x4883ec08	                              sub rsp, 8	       196	help.c	FUNCTION_10
0x400004a	          0x4889f3	                            mov rbx, rsi	       196	help.c	FUNCTION_10
0x400004d	        0x4883feef	             cmp rsi, 0xffffffffffffffef	       785	git-compat-util.h	FUNCTION_40	IF_1
0x4000051	            0x7617	                           jbe 0x400006a	       785	git-compat-util.h	FUNCTION_40	IF_1
0x4000053	          0x4889f2	                            mov rdx, rsi	       786	git-compat-util.h	FUNCTION_40	IF_1	CALL_1
0x4000056	      0xbe10000000	                           mov esi, 0x10	       786	git-compat-util.h	FUNCTION_40	IF_1	CALL_1
0x400005b	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_40	IF_1	CALL_1
0x4000060	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_40	IF_1	CALL_1
0x4000065	      0xe800000000	                          call 0x400006a	       786	git-compat-util.h	FUNCTION_40	IF_1	CALL_1
0x400006a	          0x4989fd	                            mov r13, rdi	       786	git-compat-util.h	FUNCTION_40	IF_1	CALL_1
0x400006d	          0x4989d4	                            mov r12, rdx	       786	git-compat-util.h	FUNCTION_40	IF_1	CALL_1
0x4000070	        0x4883feef	             cmp rsi, 0xffffffffffffffef	       785	git-compat-util.h	FUNCTION_40	IF_1
0x4000074	            0x751b	                           jne 0x4000091	       785	git-compat-util.h	FUNCTION_40	IF_1
0x4000076	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_40	IF_1	CALL_1
0x400007b	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_40	IF_1	CALL_1
0x4000082	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_40	IF_1	CALL_1
0x4000087	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_40	IF_1	CALL_1
0x400008c	      0xe800000000	                          call 0x4000091	       786	git-compat-util.h	FUNCTION_40	IF_1	CALL_1
0x4000091	        0x488d7611	                   lea rsi, [rsi + 0x11]	       198	help.c	FUNCTION_10
0x4000095	      0xbf01000000	                              mov edi, 1	       198	help.c	FUNCTION_10
0x400009a	      0xe800000000	                          call 0x400009f	       198	help.c	FUNCTION_10
0x400009f	          0x4889c5	                            mov rbp, rax	       198	help.c	FUNCTION_10
0x40000a2	        0x488d7810	                   lea rdi, [rax + 0x10]	        53	string3.h	FUNCTION_54	CALL_3
0x40000a6	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_54	CALL_3
0x40000a9	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_54	CALL_3
0x40000ac	      0xe800000000	                          call 0x40000b1	        53	string3.h	FUNCTION_54	CALL_3
0x40000b1	          0x4c89e7	                            mov rdi, r12	       199	help.c	FUNCTION_10	CALL_1
0x40000b4	      0xe800000000	                          call 0x40000b9	       199	help.c	FUNCTION_10	CALL_1
0x40000b9	        0x48894508	                mov qword [rbp + 8], rax	       199	help.c	FUNCTION_10	CALL_1
0x40000bd	    0x488b05000000	            mov rax, qword [0x040000c4] 	       200	help.c	FUNCTION_10
0x40000c4	        0x48894500	                    mov qword [rbp], rax	       200	help.c	FUNCTION_10
0x40000c8	    0x48892d000000	            mov qword [0x040000cf], rbp 	       201	help.c	FUNCTION_10
0x40000cf	        0x4883c408	                              add rsp, 8	       202	help.c	FUNCTION_10
0x40000d3	              0x5b	                                 pop rbx	       202	help.c	FUNCTION_10
0x40000d4	              0x5d	                                 pop rbp	       202	help.c	FUNCTION_10
0x40000d5	            0x415c	                                 pop r12	       202	help.c	FUNCTION_10
0x40000d7	            0x415d	                                 pop r13	       202	help.c	FUNCTION_10
0x40000d9	              0xc3	                                     ret	       202	help.c	FUNCTION_10
cmd_to_page	DO,0:ELSE,3:WHILE,0:SWITCH,0:CALL,4:IF,3:functions,0:FOR,0	26
0x40005aa	      0xb800000000	                              mov eax, 0	       297	help.c	FUNCTION_16	IF_1
0x40005af	          0x4885ff	                           test rdi, rdi	       296	help.c	FUNCTION_16	IF_1
0x40005b2	            0x7448	                            je 0x40005fc	       296	help.c	FUNCTION_16	IF_1
0x40005b4	              0x53	                                push rbx	       295	help.c	FUNCTION_16
0x40005b5	          0x4889fb	                            mov rbx, rdi	       295	help.c	FUNCTION_16
0x40005b8	          0x4889c6	                            mov rsi, rax	       298	help.c	FUNCTION_16	ELSE_1	IF_2	CALL_1
0x40005bb	      0xe800000000	                          call 0x40005c0	       298	help.c	FUNCTION_16	ELSE_1	IF_2	CALL_1
0x40005c0	            0x89c2	                            mov edx, eax	       298	help.c	FUNCTION_16	ELSE_1	IF_2	CALL_1
0x40005c2	          0x4889d8	                            mov rax, rbx	       299	help.c	FUNCTION_16	ELSE_1	IF_2
0x40005c5	            0x85d2	                           test edx, edx	       298	help.c	FUNCTION_16	ELSE_1	IF_2	CALL_1
0x40005c7	            0x7532	                           jne 0x40005fb	       298	help.c	FUNCTION_16	ELSE_1	IF_2	CALL_1
0x40005c9	          0x4889df	                            mov rdi, rbx	       300	help.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x40005cc	      0xe884ffffff	                 call sym.is_git_command	       300	help.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x40005d1	            0x85c0	                           test eax, eax	       300	help.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x40005d3	            0x7414	                            je 0x40005e9	       300	help.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x40005d5	          0x4889de	                            mov rsi, rbx	       301	help.c	FUNCTION_16	ELSE_2	IF_3
0x40005d8	      0xbf00000000	                              mov edi, 0	       301	help.c	FUNCTION_16	ELSE_2	IF_3
0x40005dd	      0xb800000000	                              mov eax, 0	       301	help.c	FUNCTION_16	ELSE_2	IF_3
0x40005e2	      0xe800000000	                          call 0x40005e7	       301	help.c	FUNCTION_16	ELSE_2	IF_3
0x40005e7	            0xeb12	                           jmp 0x40005fb	       301	help.c	FUNCTION_16	ELSE_2	IF_3
0x40005e9	          0x4889de	                            mov rsi, rbx	       303	help.c	FUNCTION_16	CALL_4
0x40005ec	      0xbf00000000	                              mov edi, 0	       303	help.c	FUNCTION_16	CALL_4
0x40005f1	      0xb800000000	                              mov eax, 0	       303	help.c	FUNCTION_16	CALL_4
0x40005f6	      0xe800000000	                          call 0x40005fb	       303	help.c	FUNCTION_16	CALL_4
0x40005fb	              0x5b	                                 pop rbx	       304	help.c	FUNCTION_16
0x40005fc	            0xf3c3	                                     ret	       304	help.c	FUNCTION_16
parse_help_format	DO,0:ELSE,0:WHILE,0:SWITCH,0:CALL,6:IF,3:functions,0:FOR,0	62
0x4000139	          0x4889fa	                            mov rdx, rdi	        60	help.c	FUNCTION_1
0x400013c	        0x440fb607	                   movzx r8d, byte [rdi]	        61	help.c	FUNCTION_1	IF_1	CALL_1
0x4000140	        0x4183f86d	                           cmp r8d, 0x6d	        61	help.c	FUNCTION_1	IF_1	CALL_1
0x4000144	            0x7523	                           jne 0x4000169	        61	help.c	FUNCTION_1	IF_1	CALL_1
0x4000146	        0x807f0161	                cmp byte [rdi + 1], 0x61	        61	help.c	FUNCTION_1	IF_1	CALL_1
0x400014a	     0xf85a8000000	                           jne 0x40001f8	        61	help.c	FUNCTION_1	IF_1	CALL_1
0x4000150	        0x807f026e	                cmp byte [rdi + 2], 0x6e	        61	help.c	FUNCTION_1	IF_1	CALL_1
0x4000154	     0xf859e000000	                           jne 0x40001f8	        61	help.c	FUNCTION_1	IF_1	CALL_1
0x400015a	        0x807f0300	                   cmp byte [rdi + 3], 0	        61	help.c	FUNCTION_1	IF_1	CALL_1
0x400015e	     0xf8482000000	                            je 0x40001e6	        61	help.c	FUNCTION_1	IF_1	CALL_1
0x4000164	      0xe98f000000	                           jmp 0x40001f8	        61	help.c	FUNCTION_1	IF_1	CALL_1
0x4000169	      0xbf00000000	                              mov edi, 0	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x400016e	      0xb905000000	                              mov ecx, 5	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x4000173	          0x4889d6	                            mov rsi, rdx	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x4000176	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x4000178	        0x400f97c6	                                seta sil	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x400017c	           0xf92c1	                                 setb cl	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x400017f	      0xb802000000	                              mov eax, 2	        64	help.c	FUNCTION_1	IF_2
0x4000184	          0x4038ce	                             cmp sil, cl	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x4000187	     0xf848b000000	                            je 0x4000218	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x400018d	        0x4183f877	                           cmp r8d, 0x77	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x4000191	            0x7512	                           jne 0x40001a5	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x4000193	        0x807a0165	                cmp byte [rdx + 1], 0x65	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x4000197	            0x750c	                           jne 0x40001a5	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x4000199	        0x807a0262	                cmp byte [rdx + 2], 0x62	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x400019d	            0x7506	                           jne 0x40001a5	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x400019f	        0x807a0300	                   cmp byte [rdx + 3], 0	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x40001a3	            0x7447	                            je 0x40001ec	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x40001a5	      0xbf00000000	                              mov edi, 0	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x40001aa	      0xb905000000	                              mov ecx, 5	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x40001af	          0x4889d6	                            mov rsi, rdx	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x40001b2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x40001b4	           0xf97c1	                                 seta cl	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x40001b7	           0xf92c0	                                 setb al	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x40001ba	            0x38c1	                              cmp cl, al	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x40001bc	            0x7434	                            je 0x40001f2	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x40001be	              0x53	                                push rbx	        60	help.c	FUNCTION_1
0x40001bf	          0x4889d3	                            mov rbx, rdx	        60	help.c	FUNCTION_1
0x40001c2	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_68
0x40001c7	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_68
0x40001cc	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_68
0x40001d1	      0xe800000000	                          call 0x40001d6	        54	gettext.h	FUNCTION_68
0x40001d6	          0x4889de	                            mov rsi, rbx	        67	help.c	FUNCTION_1	CALL_6
0x40001d9	          0x4889c7	                            mov rdi, rax	        67	help.c	FUNCTION_1	CALL_6
0x40001dc	      0xb800000000	                              mov eax, 0	        67	help.c	FUNCTION_1	CALL_6
0x40001e1	      0xe800000000	                          call 0x40001e6	        67	help.c	FUNCTION_1	CALL_6
0x40001e6	      0xb801000000	                              mov eax, 1	        62	help.c	FUNCTION_1	IF_1
0x40001eb	              0xc3	                                     ret	        62	help.c	FUNCTION_1	IF_1
0x40001ec	      0xb803000000	                              mov eax, 3	        66	help.c	FUNCTION_1	IF_3
0x40001f1	              0xc3	                                     ret	        66	help.c	FUNCTION_1	IF_3
0x40001f2	      0xb803000000	                              mov eax, 3	        66	help.c	FUNCTION_1	IF_3
0x40001f7	              0xc3	                                     ret	        66	help.c	FUNCTION_1	IF_3
0x40001f8	      0xbf00000000	                              mov edi, 0	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x40001fd	      0xb905000000	                              mov ecx, 5	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x4000202	          0x4889d6	                            mov rsi, rdx	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x4000205	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x4000207	        0x400f97c6	                                seta sil	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x400020b	           0xf92c1	                                 setb cl	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x400020e	      0xb802000000	                              mov eax, 2	        64	help.c	FUNCTION_1	IF_2
0x4000213	          0x4038ce	                             cmp sil, cl	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x4000216	            0x758d	                           jne 0x40001a5	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x4000218	            0xf3c3	                                     ret	        68	help.c	FUNCTION_1
