encode_85	IF,1:DO,0:WHILE,1:functions,0:CALL,0:ELSE,0:SWITCH,0:FOR,2	48
0x4000183	          0x4189d1	                            mov r9d, edx	        80	base85.c	FUNCTION_3
0x4000186	    0x41bac1c0c0c0	                    mov r10d, 0xc0c0c0c1	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x400018c	            0x85d2	                           test edx, edx	        82	base85.c	FUNCTION_3	WHILE_1
0x400018e	            0x756c	                           jne 0x40001fc	        82	base85.c	FUNCTION_3	WHILE_1
0x4000190	      0xe980000000	                           jmp 0x4000215	        82	base85.c	FUNCTION_3	WHILE_1
0x4000195	        0x4883c201	                              add rdx, 1	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x4000199	         0xfb642ff	               movzx eax, byte [rdx - 1]	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x400019d	            0xd3e0	                             shl eax, cl	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x400019f	          0x4109c0	                             or r8d, eax	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x40001a2	        0x4183e901	                              sub r9d, 1	        88	base85.c	FUNCTION_3	WHILE_1	FOR_1	IF_1
0x40001a6	            0x740d	                            je 0x40001b5	        88	base85.c	FUNCTION_3	WHILE_1	FOR_1	IF_1
0x40001a8	          0x83e908	                              sub ecx, 8	        85	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x40001ab	          0x83f9f8	             cmp ecx, 0xfffffffffffffff8	        85	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x40001ae	            0x75e5	                           jne 0x4000195	        85	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x40001b0	          0x4889d6	                            mov rsi, rdx	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x40001b3	            0xeb08	                           jmp 0x40001bd	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x40001b5	          0x4889d6	                            mov rsi, rdx	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x40001b8	            0xeb03	                           jmp 0x40001bd	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x40001ba	          0x4889d6	                            mov rsi, rdx	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x40001bd	        0x488d4f04	                      lea rcx, [rdi + 4]	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x40001c1	        0x4c8d5fff	                      lea r11, [rdi - 1]	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x40001c5	          0x4489c0	                            mov eax, r8d	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001c8	          0x41f7e2	                                mul r10d	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001cb	            0x89d0	                            mov eax, edx	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001cd	          0xc1e806	                              shr eax, 6	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001d0	          0x6bc055	                     imul eax, eax, 0x55	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001d3	          0x4129c0	                            sub r8d, eax	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001d6	          0x4489c0	                            mov eax, r8d	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001d9	          0xc1ea06	                              shr edx, 6	        94	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001dc	          0x4189d0	                            mov r8d, edx	        94	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001df	            0x4898	                                    cdqe	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001e1	     0xfb680000000	                   movzx eax, byte [rax]	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001e8	            0x8801	                      mov byte [rcx], al	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001ea	        0x4883e901	                              sub rcx, 1	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001ee	          0x4939cb	                            cmp r11, rcx	        92	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001f1	            0x75d2	                           jne 0x40001c5	        92	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40001f3	        0x4883c705	                              add rdi, 5	        97	base85.c	FUNCTION_3	WHILE_1
0x40001f7	          0x4585c9	                           test r9d, r9d	        82	base85.c	FUNCTION_3	WHILE_1
0x40001fa	            0x7419	                            je 0x4000215	        82	base85.c	FUNCTION_3	WHILE_1
0x40001fc	        0x488d5601	                      lea rdx, [rsi + 1]	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x4000200	        0x440fb606	                   movzx r8d, byte [rsi]	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x4000204	        0x41c1e018	                           shl r8d, 0x18	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x4000208	        0x4183e901	                              sub r9d, 1	        88	base85.c	FUNCTION_3	WHILE_1	FOR_1	IF_1
0x400020c	            0x74ac	                            je 0x40001ba	        88	base85.c	FUNCTION_3	WHILE_1	FOR_1	IF_1
0x400020e	      0xb910000000	                           mov ecx, 0x10	        88	base85.c	FUNCTION_3	WHILE_1	FOR_1	IF_1
0x4000213	            0xeb80	                           jmp 0x4000195	        88	base85.c	FUNCTION_3	WHILE_1	FOR_1	IF_1
0x4000215	          0xc60700	                       mov byte [rdi], 0	       101	base85.c	FUNCTION_3
0x4000218	              0xc3	                                     ret	       101	base85.c	FUNCTION_3
decode_85	IF,3:DO,2:WHILE,1:functions,0:CALL,4:ELSE,0:SWITCH,0:FOR,0	83
0x4000040	        0x4883ec08	                              sub rsp, 8	        41	base85.c	FUNCTION_2
0x4000044	    0x803d00000000	                cmp byte [0x0400004b], 0	        32	base85.c	FUNCTION_1	IF_1
0x400004b	     0xf8508010000	                           jne 0x4000159	        32	base85.c	FUNCTION_1	IF_1
0x4000051	      0xb900000000	                              mov ecx, 0	        32	base85.c	FUNCTION_1	IF_1
0x4000056	      0xb801000000	                              mov eax, 1	        32	base85.c	FUNCTION_1	IF_1
0x400005b	        0x4c0fbe01	                    movsx r8, byte [rcx]	        36	base85.c	FUNCTION_1	FOR_1
0x400005f	    0x418880000000	                       mov byte [r8], al	        36	base85.c	FUNCTION_1	FOR_1
0x4000066	          0x83c001	                              add eax, 1	        36	base85.c	FUNCTION_1	FOR_1
0x4000069	        0x4883c101	                              add rcx, 1	        36	base85.c	FUNCTION_1	FOR_1
0x400006d	          0x83f856	                           cmp eax, 0x56	        34	base85.c	FUNCTION_1	FOR_1	CALL_1
0x4000070	            0x75e9	                           jne 0x400005b	        34	base85.c	FUNCTION_1	FOR_1	CALL_1
0x4000072	      0xe9e2000000	                           jmp 0x4000159	        34	base85.c	FUNCTION_1	FOR_1	CALL_1
0x4000077	    0x41ba04000000	                             mov r10d, 4	        67	base85.c	FUNCTION_2	WHILE_1
0x400007d	        0x4c8d5e04	                      lea r11, [rsi + 4]	        67	base85.c	FUNCTION_2	WHILE_1
0x4000081	          0x4989f1	                             mov r9, rsi	        32	base85.c	FUNCTION_1	IF_1
0x4000084	      0xb900000000	                              mov ecx, 0	        32	base85.c	FUNCTION_1	IF_1
0x4000089	            0xeb03	                           jmp 0x400008e	        32	base85.c	FUNCTION_1	IF_1
0x400008b	          0x4d89c1	                              mov r9, r8	        50	base85.c	FUNCTION_2	WHILE_1	DO_1
0x400008e	        0x4d8d4101	                        lea r8, [r9 + 1]	        50	base85.c	FUNCTION_2	WHILE_1	DO_1
0x4000092	      0x410fb670ff	                movzx esi, byte [r8 - 1]	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x4000097	          0x4863c6	                         movsxd rax, esi	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x400009a	     0xfbe80000000	                   movsx eax, byte [rax]	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000a1	          0x83e801	                              sub eax, 1	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0x40000a4	            0x7919	                           jns 0x40000bf	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0x40000a6	      0xbf00000000	                              mov edi, 0	        53	base85.c	FUNCTION_2	WHILE_1	DO_1	CALL_2
0x40000ab	      0xb800000000	                              mov eax, 0	        53	base85.c	FUNCTION_2	WHILE_1	DO_1	CALL_2
0x40000b0	      0xe800000000	                          call 0x40000b5	        53	base85.c	FUNCTION_2	WHILE_1	DO_1	CALL_2
0x40000b5	      0xb8ffffffff	                     mov eax, 0xffffffff	        53	base85.c	FUNCTION_2	WHILE_1	DO_1	CALL_2
0x40000ba	      0xe9bf000000	                           jmp 0x400017e	        53	base85.c	FUNCTION_2	WHILE_1	DO_1	CALL_2
0x40000bf	          0x6bc955	                     imul ecx, ecx, 0x55	        54	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000c2	             0x1c1	                            add ecx, eax	        54	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000c4	          0x4d39c3	                             cmp r11, r8	        55	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000c7	            0x75c2	                           jne 0x400008b	        55	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000c9	        0x498d7102	                       lea rsi, [r9 + 2]	        56	base85.c	FUNCTION_2	WHILE_1
0x40000cd	      0x450fb64101	                movzx r8d, byte [r9 + 1]	        57	base85.c	FUNCTION_2	WHILE_1
0x40000d2	          0x4963c0	                         movsxd rax, r8d	        57	base85.c	FUNCTION_2	WHILE_1
0x40000d5	     0xfbe80000000	                   movsx eax, byte [rax]	        57	base85.c	FUNCTION_2	WHILE_1
0x40000dc	          0x83e801	                              sub eax, 1	        58	base85.c	FUNCTION_2	WHILE_1	IF_2
0x40000df	            0x791c	                           jns 0x40000fd	        58	base85.c	FUNCTION_2	WHILE_1	IF_2
0x40000e1	          0x4489c6	                            mov esi, r8d	        59	base85.c	FUNCTION_2	WHILE_1	CALL_3
0x40000e4	      0xbf00000000	                              mov edi, 0	        59	base85.c	FUNCTION_2	WHILE_1	CALL_3
0x40000e9	      0xb800000000	                              mov eax, 0	        59	base85.c	FUNCTION_2	WHILE_1	CALL_3
0x40000ee	      0xe800000000	                          call 0x40000f3	        59	base85.c	FUNCTION_2	WHILE_1	CALL_3
0x40000f3	      0xb8ffffffff	                     mov eax, 0xffffffff	        59	base85.c	FUNCTION_2	WHILE_1	CALL_3
0x40000f8	      0xe981000000	                           jmp 0x400017e	        59	base85.c	FUNCTION_2	WHILE_1	CALL_3
0x40000fd	    0x81f903030303	                      cmp ecx, 0x3030303	        61	base85.c	FUNCTION_2	WHILE_1	IF_3
0x4000103	            0x770e	                            ja 0x4000113	        61	base85.c	FUNCTION_2	WHILE_1	IF_3
0x4000105	          0x6bc955	                     imul ecx, ecx, 0x55	        62	base85.c	FUNCTION_2	WHILE_1	IF_3
0x4000108	          0x4189c0	                            mov r8d, eax	        61	base85.c	FUNCTION_2	WHILE_1	IF_3
0x400010b	          0x41f7d0	                                 not r8d	        61	base85.c	FUNCTION_2	WHILE_1	IF_3
0x400010e	          0x4139c8	                            cmp r8d, ecx	        61	base85.c	FUNCTION_2	WHILE_1	IF_3
0x4000111	            0x731a	                           jae 0x400012d	        61	base85.c	FUNCTION_2	WHILE_1	IF_3
0x4000113	        0x498d71fd	                       lea rsi, [r9 - 3]	        63	base85.c	FUNCTION_2	WHILE_1	CALL_4
0x4000117	      0xbf00000000	                              mov edi, 0	        63	base85.c	FUNCTION_2	WHILE_1	CALL_4
0x400011c	      0xb800000000	                              mov eax, 0	        63	base85.c	FUNCTION_2	WHILE_1	CALL_4
0x4000121	      0xe800000000	                          call 0x4000126	        63	base85.c	FUNCTION_2	WHILE_1	CALL_4
0x4000126	      0xb8ffffffff	                     mov eax, 0xffffffff	        63	base85.c	FUNCTION_2	WHILE_1	CALL_4
0x400012b	            0xeb51	                           jmp 0x400017e	        63	base85.c	FUNCTION_2	WHILE_1	CALL_4
0x400012d	             0x1c8	                            add eax, ecx	        64	base85.c	FUNCTION_2	WHILE_1
0x400012f	          0x83fa04	                              cmp edx, 4	        67	base85.c	FUNCTION_2	WHILE_1
0x4000132	          0x4589d1	                           mov r9d, r10d	        67	base85.c	FUNCTION_2	WHILE_1
0x4000135	        0x440f4eca	                         cmovle r9d, edx	        67	base85.c	FUNCTION_2	WHILE_1
0x4000139	          0x4429ca	                            sub edx, r9d	        68	base85.c	FUNCTION_2	WHILE_1
0x400013c	        0x418d49ff	                       lea ecx, [r9 - 1]	        68	base85.c	FUNCTION_2	WHILE_1
0x4000140	      0x4c8d440f01	                 lea r8, [rdi + rcx + 1]	        68	base85.c	FUNCTION_2	WHILE_1
0x4000145	          0x4889f9	                            mov rcx, rdi	        68	base85.c	FUNCTION_2	WHILE_1
0x4000148	          0xc1c008	                              rol eax, 8	        70	base85.c	FUNCTION_2	WHILE_1	DO_2
0x400014b	        0x4883c101	                              add rcx, 1	        71	base85.c	FUNCTION_2	WHILE_1	DO_2
0x400014f	          0x8841ff	                  mov byte [rcx - 1], al	        71	base85.c	FUNCTION_2	WHILE_1	DO_2
0x4000152	          0x4c39c1	                             cmp rcx, r8	        72	base85.c	FUNCTION_2	WHILE_1	DO_2
0x4000155	            0x75f1	                           jne 0x4000148	        72	base85.c	FUNCTION_2	WHILE_1	DO_2
0x4000157	            0xeb0f	                           jmp 0x4000168	        72	base85.c	FUNCTION_2	WHILE_1	DO_2
0x4000159	            0x85d2	                           test edx, edx	        45	base85.c	FUNCTION_2	WHILE_1
0x400015b	     0xf8516ffffff	                           jne 0x4000077	        45	base85.c	FUNCTION_2	WHILE_1
0x4000161	      0xb800000000	                              mov eax, 0	        76	base85.c	FUNCTION_2
0x4000166	            0xeb16	                           jmp 0x400017e	        76	base85.c	FUNCTION_2
0x4000168	        0x418d41ff	                       lea eax, [r9 - 1]	        76	base85.c	FUNCTION_2
0x400016c	      0x488d7c0701	                lea rdi, [rdi + rax + 1]	        76	base85.c	FUNCTION_2
0x4000171	            0x85d2	                           test edx, edx	        45	base85.c	FUNCTION_2	WHILE_1
0x4000173	     0xf8504ffffff	                           jne 0x400007d	        45	base85.c	FUNCTION_2	WHILE_1
0x4000179	      0xb800000000	                              mov eax, 0	        76	base85.c	FUNCTION_2
0x400017e	        0x4883c408	                              add rsp, 8	        77	base85.c	FUNCTION_2
0x4000182	              0xc3	                                     ret	        77	base85.c	FUNCTION_2
