prune_subdir	IF,1:functions,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0:SWITCH,0	10
0x4000040	    0x833d00000000	               cmp dword [0x04000047], 0	        74	prune.c	FUNCTION_4	IF_1
0x4000047	            0x7516	                           jne 0x400005f	        74	prune.c	FUNCTION_4	IF_1
0x4000049	        0x4883ec08	                              sub rsp, 8	        73	prune.c	FUNCTION_4
0x400004d	          0x4889f7	                            mov rdi, rsi	        73	prune.c	FUNCTION_4
0x4000050	      0xe800000000	                          call 0x4000055	        75	prune.c	FUNCTION_4	CALL_1
0x4000055	      0xb800000000	                              mov eax, 0	        77	prune.c	FUNCTION_4
0x400005a	        0x4883c408	                              add rsp, 8	        77	prune.c	FUNCTION_4
0x400005e	              0xc3	                                     ret	        77	prune.c	FUNCTION_4
0x400005f	      0xb800000000	                              mov eax, 0	        77	prune.c	FUNCTION_4
0x4000064	              0xc3	                                     ret	        77	prune.c	FUNCTION_4
remove_temporary_files	IF,2:functions,0:FOR,0:CALL,6:ELSE,0:WHILE,1:DO,0:SWITCH,0	38
0x400025e	            0x4154	                                push r12	        86	prune.c	FUNCTION_5
0x4000260	              0x55	                                push rbp	        86	prune.c	FUNCTION_5
0x4000261	              0x53	                                push rbx	        86	prune.c	FUNCTION_5
0x4000262	          0x4989fc	                            mov r12, rdi	        86	prune.c	FUNCTION_5
0x4000265	      0xe800000000	                          call 0x400026a	        90	prune.c	FUNCTION_5	CALL_1
0x400026a	          0x4889c5	                            mov rbp, rax	        90	prune.c	FUNCTION_5	CALL_1
0x400026d	          0x4885c0	                           test rax, rax	        91	prune.c	FUNCTION_5	IF_1
0x4000270	            0x7552	                           jne 0x40002c4	        91	prune.c	FUNCTION_5	IF_1
0x4000272	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_9
0x4000275	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x400027a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x400027f	    0x488b3d000000	            mov rdi, qword [0x04000286] 	        97	stdio2.h	CALL_9
0x4000286	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_9
0x400028b	      0xe800000000	                          call 0x4000290	        97	stdio2.h	CALL_9
0x4000290	            0xeb47	                           jmp 0x40002d9	        97	stdio2.h	CALL_9
0x4000292	        0x488d5813	                   lea rbx, [rax + 0x13]	        96	prune.c	FUNCTION_5	WHILE_1	IF_2	CALL_3
0x4000296	      0xbe00000000	                              mov esi, 0	        96	prune.c	FUNCTION_5	WHILE_1	IF_2	CALL_3
0x400029b	          0x4889df	                            mov rdi, rbx	        96	prune.c	FUNCTION_5	WHILE_1	IF_2	CALL_3
0x400029e	      0xe800000000	                          call 0x40002a3	        96	prune.c	FUNCTION_5	WHILE_1	IF_2	CALL_3
0x40002a3	            0x85c0	                           test eax, eax	        96	prune.c	FUNCTION_5	WHILE_1	IF_2	CALL_3
0x40002a5	            0x741d	                            je 0x40002c4	        96	prune.c	FUNCTION_5	WHILE_1	IF_2	CALL_3
0x40002a7	          0x4889da	                            mov rdx, rbx	        97	prune.c	FUNCTION_5	WHILE_1	IF_2
0x40002aa	          0x4c89e6	                            mov rsi, r12	        97	prune.c	FUNCTION_5	WHILE_1	IF_2
0x40002ad	      0xbf00000000	                              mov edi, 0	        97	prune.c	FUNCTION_5	WHILE_1	IF_2
0x40002b2	      0xb800000000	                              mov eax, 0	        97	prune.c	FUNCTION_5	WHILE_1	IF_2
0x40002b7	      0xe800000000	                          call 0x40002bc	        97	prune.c	FUNCTION_5	WHILE_1	IF_2
0x40002bc	          0x4889c7	                            mov rdi, rax	        97	prune.c	FUNCTION_5	WHILE_1	IF_2
0x40002bf	      0xe8a1fdffff	                 call sym.prune_tmp_file	        97	prune.c	FUNCTION_5	WHILE_1	IF_2
0x40002c4	          0x4889ef	                            mov rdi, rbp	        95	prune.c	FUNCTION_5	WHILE_1	CALL_2
0x40002c7	      0xe800000000	                          call 0x40002cc	        95	prune.c	FUNCTION_5	WHILE_1	CALL_2
0x40002cc	          0x4885c0	                           test rax, rax	        95	prune.c	FUNCTION_5	WHILE_1	CALL_2
0x40002cf	            0x75c1	                           jne 0x4000292	        95	prune.c	FUNCTION_5	WHILE_1	CALL_2
0x40002d1	          0x4889ef	                            mov rdi, rbp	        98	prune.c	FUNCTION_5	CALL_6
0x40002d4	      0xe800000000	                          call 0x40002d9	        98	prune.c	FUNCTION_5	CALL_6
0x40002d9	              0x5b	                                 pop rbx	        99	prune.c	FUNCTION_5
0x40002da	              0x5d	                                 pop rbp	        99	prune.c	FUNCTION_5
0x40002db	            0x415c	                                 pop r12	        99	prune.c	FUNCTION_5
0x40002dd	              0xc3	                                     ret	        99	prune.c	FUNCTION_5
prune_cruft	IF,1:functions,0:FOR,0:CALL,2:ELSE,1:WHILE,0:DO,0:SWITCH,0	18
0x400011f	              0x53	                                push rbx	        64	prune.c	FUNCTION_3
0x4000120	          0x4889f3	                            mov rbx, rsi	        64	prune.c	FUNCTION_3
0x4000123	      0xbe00000000	                              mov esi, 0	        65	prune.c	FUNCTION_3	IF_1	CALL_1
0x4000128	      0xe800000000	                          call 0x400012d	        65	prune.c	FUNCTION_3	IF_1	CALL_1
0x400012d	            0x85c0	                           test eax, eax	        65	prune.c	FUNCTION_3	IF_1	CALL_1
0x400012f	            0x740a	                            je 0x400013b	        65	prune.c	FUNCTION_3	IF_1	CALL_1
0x4000131	          0x4889df	                            mov rdi, rbx	        66	prune.c	FUNCTION_3	CALL_2
0x4000134	      0xe82cffffff	                 call sym.prune_tmp_file	        66	prune.c	FUNCTION_3	CALL_2
0x4000139	            0xeb1e	                           jmp 0x4000159	        66	prune.c	FUNCTION_3	CALL_2
0x400013b	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_9
0x400013e	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000143	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000148	    0x488b3d000000	            mov rdi, qword [0x0400014f] 	        97	stdio2.h	CALL_9
0x400014f	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_9
0x4000154	      0xe800000000	                          call 0x4000159	        97	stdio2.h	CALL_9
0x4000159	      0xb800000000	                              mov eax, 0	        70	prune.c	FUNCTION_3
0x400015e	              0x5b	                                 pop rbx	        70	prune.c	FUNCTION_3
0x400015f	              0xc3	                                     ret	        70	prune.c	FUNCTION_3
cmd_prune	IF,6:functions,0:FOR,0:CALL,30:ELSE,1:WHILE,1:DO,0:SWITCH,0	161
0x40002de	            0x4154	                                push r12	       102	prune.c	FUNCTION_6
0x40002e0	              0x55	                                push rbp	       102	prune.c	FUNCTION_6
0x40002e1	              0x53	                                push rbx	       102	prune.c	FUNCTION_6
0x40002e2	    0x4881ec700a00	                          sub rsp, 0xa70	       102	prune.c	FUNCTION_6
0x40002e9	          0x4189fc	                           mov r12d, edi	       102	prune.c	FUNCTION_6
0x40002ec	          0x4889f3	                            mov rbx, rsi	       102	prune.c	FUNCTION_6
0x40002ef	          0x4889d5	                            mov rbp, rdx	       102	prune.c	FUNCTION_6
0x40002f2	    0x64488b042528	                mov rax, qword fs:[0x28]	       102	prune.c	FUNCTION_6
0x40002fb	    0x48898424680a	            mov qword [rsp + 0xa68], rax	       102	prune.c	FUNCTION_6
0x4000303	            0x31c0	                            xor eax, eax	       102	prune.c	FUNCTION_6
0x4000305	    0x48c744240800	                  mov qword [rsp + 8], 0	       104	prune.c	FUNCTION_6
0x400030e	    0xc74424040000	                  mov dword [rsp + 4], 0	       105	prune.c	FUNCTION_6
0x4000316	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       106	prune.c	FUNCTION_6
0x400031b	      0xb930000000	                           mov ecx, 0x30	       106	prune.c	FUNCTION_6
0x4000320	          0xf348ab	              rep stosq qword [rdi], rax	       106	prune.c	FUNCTION_6
0x4000323	    0xc74424300700	               mov dword [rsp + 0x30], 7	       106	prune.c	FUNCTION_6
0x400032b	    0xc74424346e00	           mov dword [rsp + 0x34], 0x6e 	       106	prune.c	FUNCTION_6
0x4000333	    0x48c744243800	               mov qword [rsp + 0x38], 0	       106	prune.c	FUNCTION_6
0x400033c	    0x48c744244000	               mov qword [rsp + 0x40], 0	       106	prune.c	FUNCTION_6
0x4000345	    0x48c744245000	               mov qword [rsp + 0x50], 0	       106	prune.c	FUNCTION_6
0x400034e	    0xc74424580200	               mov dword [rsp + 0x58], 2	       106	prune.c	FUNCTION_6
0x4000356	    0x48c744246801	               mov qword [rsp + 0x68], 1	       106	prune.c	FUNCTION_6
0x400035f	    0xc74424700600	               mov dword [rsp + 0x70], 6	       106	prune.c	FUNCTION_6
0x4000367	    0xc74424747600	           mov dword [rsp + 0x74], 0x76 	       106	prune.c	FUNCTION_6
0x400036f	    0x48c744247800	               mov qword [rsp + 0x78], 0	       106	prune.c	FUNCTION_6
0x4000378	    0x48c784248000	               mov qword [rsp + 0x80], 0	       106	prune.c	FUNCTION_6
0x4000384	    0x48c784249000	               mov qword [rsp + 0x90], 0	       106	prune.c	FUNCTION_6
0x4000390	    0xc78424980000	               mov dword [rsp + 0x98], 2	       106	prune.c	FUNCTION_6
0x400039b	    0xc78424b00000	               mov dword [rsp + 0xb0], 7	       106	prune.c	FUNCTION_6
0x40003a6	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	       106	prune.c	FUNCTION_6
0x40003b2	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	       106	prune.c	FUNCTION_6
0x40003be	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	       106	prune.c	FUNCTION_6
0x40003ca	    0xc78424d80000	               mov dword [rsp + 0xd8], 2	       106	prune.c	FUNCTION_6
0x40003d5	    0x48c78424e800	               mov qword [rsp + 0xe8], 1	       106	prune.c	FUNCTION_6
0x40003e1	    0xc78424f00000	            mov dword [rsp + 0xf0], 0xc 	       106	prune.c	FUNCTION_6
0x40003ec	    0x48c78424f800	               mov qword [rsp + 0xf8], 0	       106	prune.c	FUNCTION_6
0x40003f8	    0x48c784240001	              mov qword [rsp + 0x100], 0	       106	prune.c	FUNCTION_6
0x4000404	    0x48c784240801	              mov qword [rsp + 0x108], 0	       106	prune.c	FUNCTION_6
0x4000410	    0x48c784241001	              mov qword [rsp + 0x110], 0	       106	prune.c	FUNCTION_6
0x400041c	    0x48c784242001	              mov qword [rsp + 0x120], 0	       106	prune.c	FUNCTION_6
0x4000428	    0xc78424300100	              mov dword [rsp + 0x130], 7	       106	prune.c	FUNCTION_6
0x4000433	    0x48c784243801	              mov qword [rsp + 0x138], 0	       106	prune.c	FUNCTION_6
0x400043f	      0x488d442404	                      lea rax, [rsp + 4]	       106	prune.c	FUNCTION_6
0x4000444	    0x488984244001	            mov qword [rsp + 0x140], rax	       106	prune.c	FUNCTION_6
0x400044c	    0x48c784245001	              mov qword [rsp + 0x150], 0	       106	prune.c	FUNCTION_6
0x4000458	    0xc78424580100	              mov dword [rsp + 0x158], 2	       106	prune.c	FUNCTION_6
0x4000463	    0x48c784246801	              mov qword [rsp + 0x168], 1	       106	prune.c	FUNCTION_6
0x400046f	    0x48c705000000	mov qword [0x0400047a], 0xffffffffffffffff 	       118	prune.c	FUNCTION_6
0x400047a	    0xc70500000000	               mov dword [0x04000484], 0	       119	prune.c	FUNCTION_6
0x4000484	    0xc70500000000	               mov dword [0x0400048e], 0	       120	prune.c	FUNCTION_6
0x400048e	    0xc70500000000	               mov dword [0x04000498], 1	       121	prune.c	FUNCTION_6
0x4000498	          0x4889d6	                            mov rsi, rdx	       122	prune.c	FUNCTION_6	CALL_7
0x400049b	    0x488dbc24b001	                  lea rdi, [rsp + 0x1b0]	       122	prune.c	FUNCTION_6	CALL_7
0x40004a3	      0xe800000000	                          call 0x40004a8	       122	prune.c	FUNCTION_6	CALL_7
0x40004a8	    0x41b900000000	                              mov r9d, 0	       124	prune.c	FUNCTION_6	CALL_8
0x40004ae	    0x41b800000000	                              mov r8d, 0	       124	prune.c	FUNCTION_6	CALL_8
0x40004b4	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	       124	prune.c	FUNCTION_6	CALL_8
0x40004b9	          0x4889ea	                            mov rdx, rbp	       124	prune.c	FUNCTION_6	CALL_8
0x40004bc	          0x4889de	                            mov rsi, rbx	       124	prune.c	FUNCTION_6	CALL_8
0x40004bf	          0x4489e7	                           mov edi, r12d	       124	prune.c	FUNCTION_6	CALL_8
0x40004c2	      0xe800000000	                          call 0x40004c7	       124	prune.c	FUNCTION_6	CALL_8
0x40004c7	    0x833d00000000	               cmp dword [0x040004ce], 0	       126	prune.c	FUNCTION_6	IF_1
0x40004ce	            0x7506	                           jne 0x40004d6	       126	prune.c	FUNCTION_6	IF_1
0x40004d0	            0x85c0	                           test eax, eax	       129	prune.c	FUNCTION_6	WHILE_1
0x40004d2	            0x7523	                           jne 0x40004f7	       129	prune.c	FUNCTION_6	WHILE_1
0x40004d4	            0xeb7d	                           jmp 0x4000553	       129	prune.c	FUNCTION_6	WHILE_1
0x40004d6	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_26
0x40004db	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_26
0x40004e0	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_26
0x40004e5	      0xe800000000	                          call 0x40004ea	        54	gettext.h	FUNCTION_26
0x40004ea	          0x4889c7	                            mov rdi, rax	       127	prune.c	FUNCTION_6	CALL_10
0x40004ed	      0xb800000000	                              mov eax, 0	       127	prune.c	FUNCTION_6	CALL_10
0x40004f2	      0xe800000000	                          call 0x40004f7	       127	prune.c	FUNCTION_6	CALL_10
0x40004f7	          0x8d40ff	                      lea eax, [rax - 1]	       127	prune.c	FUNCTION_6	CALL_10
0x40004fa	      0x4c8d64c308	              lea r12, [rbx + rax*8 + 8]	       127	prune.c	FUNCTION_6	CALL_10
0x40004ff	        0x4883c308	                              add rbx, 8	       131	prune.c	FUNCTION_6	WHILE_1
0x4000503	        0x488b6bf8	                mov rbp, qword [rbx - 8]	       131	prune.c	FUNCTION_6	WHILE_1
0x4000507	      0x488d742410	                   lea rsi, [rsp + 0x10]	       133	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_11
0x400050c	          0x4889ef	                            mov rdi, rbp	       133	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_11
0x400050f	      0xe800000000	                          call 0x4000514	       133	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_11
0x4000514	            0x85c0	                           test eax, eax	       133	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_11
0x4000516	            0x7529	                           jne 0x4000541	       133	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_11
0x4000518	          0x4889ee	                            mov rsi, rbp	       134	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_12
0x400051b	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       134	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_12
0x4000520	      0xe800000000	                          call 0x4000525	       134	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_12
0x4000525	      0xba00000000	                              mov edx, 0	       136	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_13
0x400052a	          0x4889c6	                            mov rsi, rax	       136	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_13
0x400052d	    0x488dbc24b001	                  lea rdi, [rsp + 0x1b0]	       136	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_13
0x4000535	      0xe800000000	                          call 0x400053a	       136	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_13
0x400053a	          0x4939dc	                            cmp r12, rbx	       129	prune.c	FUNCTION_6	WHILE_1
0x400053d	            0x75c0	                           jne 0x40004ff	       129	prune.c	FUNCTION_6	WHILE_1
0x400053f	            0xeb12	                           jmp 0x4000553	       129	prune.c	FUNCTION_6	WHILE_1
0x4000541	          0x4889ee	                            mov rsi, rbp	       139	prune.c	FUNCTION_6	WHILE_1	CALL_14
0x4000544	      0xbf00000000	                              mov edi, 0	       139	prune.c	FUNCTION_6	WHILE_1	CALL_14
0x4000549	      0xb800000000	                              mov eax, 0	       139	prune.c	FUNCTION_6	WHILE_1	CALL_14
0x400054e	      0xe800000000	                          call 0x4000553	       139	prune.c	FUNCTION_6	WHILE_1	CALL_14
0x4000553	    0x833d00000000	cmp dword [0x0400055a], 0xffffffffffffffff	       142	prune.c	FUNCTION_6	IF_3
0x400055a	            0x7510	                           jne 0x400056c	       142	prune.c	FUNCTION_6	IF_3
0x400055c	      0xbf02000000	                              mov edi, 2	       143	prune.c	FUNCTION_6	CALL_15
0x4000561	      0xe800000000	                          call 0x4000566	       143	prune.c	FUNCTION_6	CALL_15
0x4000566	    0x890500000000	            mov dword [0x0400056c], eax 	       143	prune.c	FUNCTION_6	CALL_15
0x400056c	    0x833d00000000	               cmp dword [0x04000573], 0	       144	prune.c	FUNCTION_6	IF_4
0x4000573	            0x7426	                            je 0x400059b	       144	prune.c	FUNCTION_6	IF_4
0x4000575	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_26
0x400057a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_26
0x400057f	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_26
0x4000584	      0xe800000000	                          call 0x4000589	        54	gettext.h	FUNCTION_26
0x4000589	      0xbe00000000	                              mov esi, 0	       145	prune.c	FUNCTION_6	CALL_17
0x400058e	          0x4889c7	                            mov rdi, rax	       145	prune.c	FUNCTION_6	CALL_17
0x4000591	      0xe800000000	                          call 0x4000596	       145	prune.c	FUNCTION_6	CALL_17
0x4000596	      0x4889442408	                mov qword [rsp + 8], rax	       145	prune.c	FUNCTION_6	CALL_17
0x400059b	      0x837c240400	                  cmp dword [rsp + 4], 0	       146	prune.c	FUNCTION_6	IF_5
0x40005a0	            0x7412	                            je 0x40005b4	       146	prune.c	FUNCTION_6	IF_5
0x40005a2	    0xc70500000000	               mov dword [0x040005ac], 0	       147	prune.c	FUNCTION_6	IF_5
0x40005ac	    0x808c24280200	             or byte [rsp + 0x228], 0x80	       148	prune.c	FUNCTION_6	IF_5
0x40005b4	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       151	prune.c	FUNCTION_6	CALL_18
0x40005b9	    0x488b15000000	            mov rdx, qword [0x040005c0] 	       151	prune.c	FUNCTION_6	CALL_18
0x40005c0	      0xbe01000000	                              mov esi, 1	       151	prune.c	FUNCTION_6	CALL_18
0x40005c5	    0x488dbc24b001	                  lea rdi, [rsp + 0x1b0]	       151	prune.c	FUNCTION_6	CALL_18
0x40005cd	      0xe800000000	                          call 0x40005d2	       151	prune.c	FUNCTION_6	CALL_18
0x40005d2	      0x488d7c2408	                      lea rdi, [rsp + 8]	       152	prune.c	FUNCTION_6	CALL_19
0x40005d7	      0xe800000000	                          call 0x40005dc	       152	prune.c	FUNCTION_6	CALL_19
0x40005dc	      0xe800000000	                          call 0x40005e1	       153	prune.c	FUNCTION_6	CALL_21
0x40005e1	    0x41b800000000	                              mov r8d, 0	       153	prune.c	FUNCTION_6	CALL_21
0x40005e7	      0xb900000000	                              mov ecx, 0	       153	prune.c	FUNCTION_6	CALL_21
0x40005ec	      0xba00000000	                              mov edx, 0	       153	prune.c	FUNCTION_6	CALL_21
0x40005f1	      0xbe00000000	                              mov esi, 0	       153	prune.c	FUNCTION_6	CALL_21
0x40005f6	          0x4889c7	                            mov rdi, rax	       153	prune.c	FUNCTION_6	CALL_21
0x40005f9	      0xe800000000	                          call 0x40005fe	       153	prune.c	FUNCTION_6	CALL_21
0x40005fe	    0x833d00000000	               cmp dword [0x04000605], 0	       156	prune.c	FUNCTION_6	CALL_22
0x4000605	        0x400f95c7	                               setne dil	       156	prune.c	FUNCTION_6	CALL_22
0x4000609	        0x400fb6ff	                          movzx edi, dil	       156	prune.c	FUNCTION_6	CALL_22
0x400060d	      0xe800000000	                          call 0x4000612	       156	prune.c	FUNCTION_6	CALL_22
0x4000612	      0xe800000000	                          call 0x4000617	       157	prune.c	FUNCTION_6	CALL_24
0x4000617	          0x4889c7	                            mov rdi, rax	       157	prune.c	FUNCTION_6	CALL_24
0x400061a	      0xe83ffcffff	         call sym.remove_temporary_files	       157	prune.c	FUNCTION_6	CALL_24
0x400061f	      0xe800000000	                          call 0x4000624	       158	prune.c	FUNCTION_6	CALL_26
0x4000624	          0x4889c6	                            mov rsi, rax	       158	prune.c	FUNCTION_6	CALL_26
0x4000627	      0xbf00000000	                              mov edi, 0	       158	prune.c	FUNCTION_6	CALL_26
0x400062c	      0xb800000000	                              mov eax, 0	       158	prune.c	FUNCTION_6	CALL_26
0x4000631	      0xe800000000	                          call 0x4000636	       158	prune.c	FUNCTION_6	CALL_26
0x4000636	          0x4889c3	                            mov rbx, rax	       158	prune.c	FUNCTION_6	CALL_26
0x4000639	          0x4889c7	                            mov rdi, rax	       159	prune.c	FUNCTION_6	CALL_27
0x400063c	      0xe81dfcffff	         call sym.remove_temporary_files	       159	prune.c	FUNCTION_6	CALL_27
0x4000641	          0x4889df	                            mov rdi, rbx	       160	prune.c	FUNCTION_6	CALL_28
0x4000644	      0xe800000000	                          call 0x4000649	       160	prune.c	FUNCTION_6	CALL_28
0x4000649	      0xe800000000	                          call 0x400064e	       162	prune.c	FUNCTION_6	IF_6	CALL_29
0x400064e	            0x85c0	                           test eax, eax	       162	prune.c	FUNCTION_6	IF_6	CALL_29
0x4000650	            0x740b	                            je 0x400065d	       162	prune.c	FUNCTION_6	IF_6	CALL_29
0x4000652	    0x8b3d00000000	            mov edi, dword [0x04000658] 	       163	prune.c	FUNCTION_6	CALL_30
0x4000658	      0xe800000000	                          call 0x400065d	       163	prune.c	FUNCTION_6	CALL_30
0x400065d	      0xb800000000	                              mov eax, 0	       166	prune.c	FUNCTION_6
0x4000662	    0x488b8c24680a	           mov rcx, qword [rsp + 0xa68] 	       166	prune.c	FUNCTION_6
0x400066a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       166	prune.c	FUNCTION_6
0x4000673	            0x7405	                            je 0x400067a	       166	prune.c	FUNCTION_6
0x4000675	      0xe800000000	                          call 0x400067a	       166	prune.c	FUNCTION_6
0x400067a	    0x4881c4700a00	                          add rsp, 0xa70	       166	prune.c	FUNCTION_6
0x4000681	              0x5b	                                 pop rbx	       166	prune.c	FUNCTION_6
0x4000682	              0x5d	                                 pop rbp	       166	prune.c	FUNCTION_6
0x4000683	            0x415c	                                 pop r12	       166	prune.c	FUNCTION_6
0x4000685	              0xc3	                                     ret	       166	prune.c	FUNCTION_6
