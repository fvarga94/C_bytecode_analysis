prune_subdir	WHILE,0:functions,0:SWITCH,0:IF,1:FOR,0:CALL,1:DO,0:ELSE,0	12
0x4000040	    0x8b0500000000	            mov eax, dword [0x04000046] 	        74	prune.c	FUNCTION_4	IF_1
0x4000046	            0x85c0	                           test eax, eax	        74	prune.c	FUNCTION_4	IF_1
0x4000048	            0x7406	                            je 0x4000050	        74	prune.c	FUNCTION_4	IF_1
0x400004a	            0x31c0	                            xor eax, eax	        77	prune.c	FUNCTION_4
0x400004c	              0xc3	                                     ret	        77	prune.c	FUNCTION_4
0x400004d	           0xf1f00	                         nop dword [rax]	        77	prune.c	FUNCTION_4
0x4000050	        0x4883ec08	                              sub rsp, 8	        73	prune.c	FUNCTION_4
0x4000054	          0x4889f7	                            mov rdi, rsi	        73	prune.c	FUNCTION_4
0x4000057	      0xe800000000	                          call 0x400005c	        75	prune.c	FUNCTION_4	CALL_1
0x400005c	            0x31c0	                            xor eax, eax	        77	prune.c	FUNCTION_4
0x400005e	        0x4883c408	                              add rsp, 8	        77	prune.c	FUNCTION_4
0x4000062	              0xc3	                                     ret	        77	prune.c	FUNCTION_4
cmd_prune	WHILE,1:functions,0:SWITCH,0:IF,6:FOR,0:CALL,35:DO,0:ELSE,1	168
0x4000330	            0x4154	                                push r12	       102	prune.c	FUNCTION_6
0x4000332	              0x55	                                push rbp	       102	prune.c	FUNCTION_6
0x4000333	          0x4189fc	                           mov r12d, edi	       102	prune.c	FUNCTION_6
0x4000336	              0x53	                                push rbx	       102	prune.c	FUNCTION_6
0x4000337	      0xb930000000	                           mov ecx, 0x30	       106	prune.c	FUNCTION_6
0x400033c	          0x4889f3	                            mov rbx, rsi	       102	prune.c	FUNCTION_6
0x400033f	          0x4889d6	                            mov rsi, rdx	       122	prune.c	FUNCTION_6	CALL_12
0x4000342	          0x4889d5	                            mov rbp, rdx	       102	prune.c	FUNCTION_6
0x4000345	    0x4881ec700a00	                          sub rsp, 0xa70	       102	prune.c	FUNCTION_6
0x400034c	    0x64488b042528	                mov rax, qword fs:[0x28]	       102	prune.c	FUNCTION_6
0x4000355	    0x48898424680a	            mov qword [rsp + 0xa68], rax	       102	prune.c	FUNCTION_6
0x400035d	            0x31c0	                            xor eax, eax	       102	prune.c	FUNCTION_6
0x400035f	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       106	prune.c	FUNCTION_6
0x4000364	    0x48c744240800	                  mov qword [rsp + 8], 0	       104	prune.c	FUNCTION_6
0x400036d	    0xc74424040000	                  mov dword [rsp + 4], 0	       105	prune.c	FUNCTION_6
0x4000375	          0xf348ab	              rep stosq qword [rdi], rax	       106	prune.c	FUNCTION_6
0x4000378	      0x488d442404	                      lea rax, [rsp + 4]	       106	prune.c	FUNCTION_6
0x400037d	    0x488dbc24b001	                  lea rdi, [rsp + 0x1b0]	       122	prune.c	FUNCTION_6	CALL_12
0x4000385	    0xc74424300700	               mov dword [rsp + 0x30], 7	       106	prune.c	FUNCTION_6
0x400038d	    0xc74424346e00	           mov dword [rsp + 0x34], 0x6e 	       106	prune.c	FUNCTION_6
0x4000395	    0x48c744243800	               mov qword [rsp + 0x38], 0	       106	prune.c	FUNCTION_6
0x400039e	    0x48c744244000	               mov qword [rsp + 0x40], 0	       106	prune.c	FUNCTION_6
0x40003a7	    0x48c744245000	               mov qword [rsp + 0x50], 0	       106	prune.c	FUNCTION_6
0x40003b0	    0xc74424580200	               mov dword [rsp + 0x58], 2	       106	prune.c	FUNCTION_6
0x40003b8	    0x48c744246801	               mov qword [rsp + 0x68], 1	       106	prune.c	FUNCTION_6
0x40003c1	    0xc74424700600	               mov dword [rsp + 0x70], 6	       106	prune.c	FUNCTION_6
0x40003c9	    0xc74424747600	           mov dword [rsp + 0x74], 0x76 	       106	prune.c	FUNCTION_6
0x40003d1	    0x48c744247800	               mov qword [rsp + 0x78], 0	       106	prune.c	FUNCTION_6
0x40003da	    0x48c784248000	               mov qword [rsp + 0x80], 0	       106	prune.c	FUNCTION_6
0x40003e6	    0x48c784249000	               mov qword [rsp + 0x90], 0	       106	prune.c	FUNCTION_6
0x40003f2	    0xc78424980000	               mov dword [rsp + 0x98], 2	       106	prune.c	FUNCTION_6
0x40003fd	    0xc78424b00000	               mov dword [rsp + 0xb0], 7	       106	prune.c	FUNCTION_6
0x4000408	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	       106	prune.c	FUNCTION_6
0x4000414	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	       106	prune.c	FUNCTION_6
0x4000420	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	       106	prune.c	FUNCTION_6
0x400042c	    0xc78424d80000	               mov dword [rsp + 0xd8], 2	       106	prune.c	FUNCTION_6
0x4000437	    0x48c78424e800	               mov qword [rsp + 0xe8], 1	       106	prune.c	FUNCTION_6
0x4000443	    0xc78424f00000	            mov dword [rsp + 0xf0], 0xc 	       106	prune.c	FUNCTION_6
0x400044e	    0x48c78424f800	               mov qword [rsp + 0xf8], 0	       106	prune.c	FUNCTION_6
0x400045a	    0x48c784240001	              mov qword [rsp + 0x100], 0	       106	prune.c	FUNCTION_6
0x4000466	    0x48c784240801	              mov qword [rsp + 0x108], 0	       106	prune.c	FUNCTION_6
0x4000472	    0x48c784241001	              mov qword [rsp + 0x110], 0	       106	prune.c	FUNCTION_6
0x400047e	    0x48c784242001	              mov qword [rsp + 0x120], 0	       106	prune.c	FUNCTION_6
0x400048a	    0x488984244001	            mov qword [rsp + 0x140], rax	       106	prune.c	FUNCTION_6
0x4000492	    0xc78424300100	              mov dword [rsp + 0x130], 7	       106	prune.c	FUNCTION_6
0x400049d	    0x48c784243801	              mov qword [rsp + 0x138], 0	       106	prune.c	FUNCTION_6
0x40004a9	    0x48c784245001	              mov qword [rsp + 0x150], 0	       106	prune.c	FUNCTION_6
0x40004b5	    0xc78424580100	              mov dword [rsp + 0x158], 2	       106	prune.c	FUNCTION_6
0x40004c0	    0x48c784246801	              mov qword [rsp + 0x168], 1	       106	prune.c	FUNCTION_6
0x40004cc	    0x48c705000000	mov qword [0x040004d7], 0xffffffffffffffff 	       118	prune.c	FUNCTION_6
0x40004d7	    0xc70500000000	               mov dword [0x040004e1], 0	       119	prune.c	FUNCTION_6
0x40004e1	    0xc70500000000	               mov dword [0x040004eb], 0	       120	prune.c	FUNCTION_6
0x40004eb	    0xc70500000000	               mov dword [0x040004f5], 1	       121	prune.c	FUNCTION_6
0x40004f5	      0xe800000000	                          call 0x40004fa	       122	prune.c	FUNCTION_6	CALL_12
0x40004fa	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	       124	prune.c	FUNCTION_6	CALL_13
0x40004ff	          0x4531c9	                            xor r9d, r9d	       124	prune.c	FUNCTION_6	CALL_13
0x4000502	    0x41b800000000	                              mov r8d, 0	       124	prune.c	FUNCTION_6	CALL_13
0x4000508	          0x4889ea	                            mov rdx, rbp	       124	prune.c	FUNCTION_6	CALL_13
0x400050b	          0x4889de	                            mov rsi, rbx	       124	prune.c	FUNCTION_6	CALL_13
0x400050e	          0x4489e7	                           mov edi, r12d	       124	prune.c	FUNCTION_6	CALL_13
0x4000511	      0xe800000000	                          call 0x4000516	       124	prune.c	FUNCTION_6	CALL_13
0x4000516	    0x8b0d00000000	            mov ecx, dword [0x0400051c] 	       126	prune.c	FUNCTION_6	IF_1
0x400051c	            0x85c9	                           test ecx, ecx	       126	prune.c	FUNCTION_6	IF_1
0x400051e	     0xf85aa010000	                           jne 0x40006ce	       126	prune.c	FUNCTION_6	IF_1
0x4000524	            0x85c0	                           test eax, eax	       129	prune.c	FUNCTION_6	WHILE_1
0x4000526	            0x744c	                            je 0x4000574	       129	prune.c	FUNCTION_6	WHILE_1
0x4000528	          0x83e801	                              sub eax, 1	       129	prune.c	FUNCTION_6	WHILE_1
0x400052b	      0x4c8d64c308	              lea r12, [rbx + rax*8 + 8]	       129	prune.c	FUNCTION_6	WHILE_1
0x4000530	        0x4883c308	                              add rbx, 8	       131	prune.c	FUNCTION_6	WHILE_1
0x4000534	        0x488b6bf8	                mov rbp, qword [rbx - 8]	       131	prune.c	FUNCTION_6	WHILE_1
0x4000538	      0x488d742410	                   lea rsi, [rsp + 0x10]	       133	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_16
0x400053d	          0x4889ef	                            mov rdi, rbp	       133	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_16
0x4000540	      0xe800000000	                          call 0x4000545	       133	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_16
0x4000545	            0x85c0	                           test eax, eax	       133	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_16
0x4000547	          0x4889ee	                            mov rsi, rbp	       134	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_17
0x400054a	     0xf856d010000	                           jne 0x40006bd	       133	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_16
0x4000550	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       134	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_17
0x4000555	      0xe800000000	                          call 0x400055a	       134	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_17
0x400055a	    0x488dbc24b001	                  lea rdi, [rsp + 0x1b0]	       136	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_18
0x4000562	      0xba00000000	                              mov edx, 0	       136	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_18
0x4000567	          0x4889c6	                            mov rsi, rax	       136	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_18
0x400056a	      0xe800000000	                          call 0x400056f	       136	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_18
0x400056f	          0x4939dc	                            cmp r12, rbx	       129	prune.c	FUNCTION_6	WHILE_1
0x4000572	            0x75bc	                           jne 0x4000530	       129	prune.c	FUNCTION_6	WHILE_1
0x4000574	    0x8b0500000000	            mov eax, dword [0x0400057a] 	       142	prune.c	FUNCTION_6	IF_3
0x400057a	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       142	prune.c	FUNCTION_6	IF_3
0x400057d	     0xf8425010000	                            je 0x40006a8	       142	prune.c	FUNCTION_6	IF_3
0x4000583	            0x85c0	                           test eax, eax	       144	prune.c	FUNCTION_6	IF_4
0x4000585	     0xf85f5000000	                           jne 0x4000680	       144	prune.c	FUNCTION_6	IF_4
0x400058b	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       144	prune.c	FUNCTION_6	IF_4
0x4000590	        0x8b542404	                mov edx, dword [rsp + 4]	       146	prune.c	FUNCTION_6	IF_5
0x4000594	            0x85d2	                           test edx, edx	       146	prune.c	FUNCTION_6	IF_5
0x4000596	     0xf85c4000000	                           jne 0x4000660	       146	prune.c	FUNCTION_6	IF_5
0x400059c	    0x488b15000000	            mov rdx, qword [0x040005a3] 	       151	prune.c	FUNCTION_6	CALL_23
0x40005a3	    0x488dbc24b001	                  lea rdi, [rsp + 0x1b0]	       151	prune.c	FUNCTION_6	CALL_23
0x40005ab	      0xbe01000000	                              mov esi, 1	       151	prune.c	FUNCTION_6	CALL_23
0x40005b0	      0xe800000000	                          call 0x40005b5	       151	prune.c	FUNCTION_6	CALL_23
0x40005b5	      0x488d7c2408	                      lea rdi, [rsp + 8]	       152	prune.c	FUNCTION_6	CALL_24
0x40005ba	      0xe800000000	                          call 0x40005bf	       152	prune.c	FUNCTION_6	CALL_24
0x40005bf	      0xe800000000	                          call 0x40005c4	       153	prune.c	FUNCTION_6	CALL_26
0x40005c4	          0x4531c0	                            xor r8d, r8d	       153	prune.c	FUNCTION_6	CALL_26
0x40005c7	      0xb900000000	                              mov ecx, 0	       153	prune.c	FUNCTION_6	CALL_26
0x40005cc	      0xba00000000	                              mov edx, 0	       153	prune.c	FUNCTION_6	CALL_26
0x40005d1	      0xbe00000000	                              mov esi, 0	       153	prune.c	FUNCTION_6	CALL_26
0x40005d6	          0x4889c7	                            mov rdi, rax	       153	prune.c	FUNCTION_6	CALL_26
0x40005d9	      0xe800000000	                          call 0x40005de	       153	prune.c	FUNCTION_6	CALL_26
0x40005de	    0x8b0500000000	            mov eax, dword [0x040005e4] 	       156	prune.c	FUNCTION_6	CALL_27
0x40005e4	            0x31ff	                            xor edi, edi	       156	prune.c	FUNCTION_6	CALL_27
0x40005e6	            0x85c0	                           test eax, eax	       156	prune.c	FUNCTION_6	CALL_27
0x40005e8	        0x400f95c7	                               setne dil	       156	prune.c	FUNCTION_6	CALL_27
0x40005ec	      0xe800000000	                          call 0x40005f1	       156	prune.c	FUNCTION_6	CALL_27
0x40005f1	      0xe800000000	                          call 0x40005f6	       157	prune.c	FUNCTION_6	CALL_29
0x40005f6	          0x4889c7	                            mov rdi, rax	       157	prune.c	FUNCTION_6	CALL_29
0x40005f9	      0xe8a2fcffff	         call sym.remove_temporary_files	       157	prune.c	FUNCTION_6	CALL_29
0x40005fe	      0xe800000000	                          call 0x4000603	       158	prune.c	FUNCTION_6	CALL_31
0x4000603	      0xbf00000000	                              mov edi, 0	       158	prune.c	FUNCTION_6	CALL_31
0x4000608	          0x4889c6	                            mov rsi, rax	       158	prune.c	FUNCTION_6	CALL_31
0x400060b	            0x31c0	                            xor eax, eax	       158	prune.c	FUNCTION_6	CALL_31
0x400060d	      0xe800000000	                          call 0x4000612	       158	prune.c	FUNCTION_6	CALL_31
0x4000612	          0x4889c3	                            mov rbx, rax	       158	prune.c	FUNCTION_6	CALL_31
0x4000615	          0x4889c7	                            mov rdi, rax	       159	prune.c	FUNCTION_6	CALL_32
0x4000618	      0xe883fcffff	         call sym.remove_temporary_files	       159	prune.c	FUNCTION_6	CALL_32
0x400061d	          0x4889df	                            mov rdi, rbx	       160	prune.c	FUNCTION_6	CALL_33
0x4000620	      0xe800000000	                          call 0x4000625	       160	prune.c	FUNCTION_6	CALL_33
0x4000625	      0xe800000000	                          call 0x400062a	       162	prune.c	FUNCTION_6	IF_6	CALL_34
0x400062a	            0x85c0	                           test eax, eax	       162	prune.c	FUNCTION_6	IF_6	CALL_34
0x400062c	            0x740b	                            je 0x4000639	       162	prune.c	FUNCTION_6	IF_6	CALL_34
0x400062e	    0x8b3d00000000	            mov edi, dword [0x04000634] 	       163	prune.c	FUNCTION_6	CALL_35
0x4000634	      0xe800000000	                          call 0x4000639	       163	prune.c	FUNCTION_6	CALL_35
0x4000639	            0x31c0	                            xor eax, eax	       166	prune.c	FUNCTION_6
0x400063b	    0x488b8c24680a	           mov rcx, qword [rsp + 0xa68] 	       166	prune.c	FUNCTION_6
0x4000643	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       166	prune.c	FUNCTION_6
0x400064c	            0x757b	                           jne 0x40006c9	       166	prune.c	FUNCTION_6
0x400064e	    0x4881c4700a00	                          add rsp, 0xa70	       166	prune.c	FUNCTION_6
0x4000655	              0x5b	                                 pop rbx	       166	prune.c	FUNCTION_6
0x4000656	              0x5d	                                 pop rbp	       166	prune.c	FUNCTION_6
0x4000657	            0x415c	                                 pop r12	       166	prune.c	FUNCTION_6
0x4000659	              0xc3	                                     ret	       166	prune.c	FUNCTION_6
0x400065a	    0x660f1f440000	                    nop word [rax + rax]	       166	prune.c	FUNCTION_6
0x4000660	    0xc70500000000	               mov dword [0x0400066a], 0	       147	prune.c	FUNCTION_6	IF_5
0x400066a	    0x808c24280200	             or byte [rsp + 0x228], 0x80	       148	prune.c	FUNCTION_6	IF_5
0x4000672	      0xe925ffffff	                           jmp 0x400059c	       148	prune.c	FUNCTION_6	IF_5
0x4000677	    0x660f1f840000	                    nop word [rax + rax]	       148	prune.c	FUNCTION_6	IF_5
0x4000680	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_9	CALL_2
0x4000685	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_9	CALL_2
0x400068a	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_9	CALL_2
0x400068c	      0xe800000000	                          call 0x4000691	        54	gettext.h	FUNCTION_9	CALL_2
0x4000691	            0x31f6	                            xor esi, esi	       145	prune.c	FUNCTION_6	CALL_22
0x4000693	          0x4889c7	                            mov rdi, rax	       145	prune.c	FUNCTION_6	CALL_22
0x4000696	      0xe800000000	                          call 0x400069b	       145	prune.c	FUNCTION_6	CALL_22
0x400069b	          0x4889c1	                            mov rcx, rax	       145	prune.c	FUNCTION_6	CALL_22
0x400069e	      0x4889442408	                mov qword [rsp + 8], rax	       145	prune.c	FUNCTION_6	CALL_22
0x40006a3	      0xe9e8feffff	                           jmp 0x4000590	       145	prune.c	FUNCTION_6	CALL_22
0x40006a8	      0xbf02000000	                              mov edi, 2	       143	prune.c	FUNCTION_6	CALL_20
0x40006ad	      0xe800000000	                          call 0x40006b2	       143	prune.c	FUNCTION_6	CALL_20
0x40006b2	    0x890500000000	            mov dword [0x040006b8], eax 	       143	prune.c	FUNCTION_6	CALL_20
0x40006b8	      0xe9c6feffff	                           jmp 0x4000583	       143	prune.c	FUNCTION_6	CALL_20
0x40006bd	      0xbf00000000	                              mov edi, 0	       139	prune.c	FUNCTION_6	WHILE_1	CALL_19
0x40006c2	            0x31c0	                            xor eax, eax	       139	prune.c	FUNCTION_6	WHILE_1	CALL_19
0x40006c4	      0xe800000000	                          call 0x40006c9	       139	prune.c	FUNCTION_6	WHILE_1	CALL_19
0x40006c9	      0xe800000000	                          call 0x40006ce	       166	prune.c	FUNCTION_6
0x40006ce	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_9	CALL_2
0x40006d0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_9	CALL_2
0x40006d5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_9	CALL_2
0x40006da	      0xe800000000	                          call 0x40006df	        54	gettext.h	FUNCTION_9	CALL_2
0x40006df	          0x4889c7	                            mov rdi, rax	       127	prune.c	FUNCTION_6	CALL_15
0x40006e2	            0x31c0	                            xor eax, eax	       127	prune.c	FUNCTION_6	CALL_15
0x40006e4	      0xe800000000	                  call section_end..text	       127	prune.c	FUNCTION_6	CALL_15
