stuff_change	SWITCH,0:IF,3:ELSE,0:CALL,13:WHILE,0:functions,0:DO,0:FOR,0	89
0x4000040	            0x4157	                                push r15	        40	diff.c	FUNCTION_2
0x4000042	            0x4156	                                push r14	        40	diff.c	FUNCTION_2
0x4000044	            0x4155	                                push r13	        40	diff.c	FUNCTION_2
0x4000046	            0x4154	                                push r12	        40	diff.c	FUNCTION_2
0x4000048	              0x55	                                push rbp	        40	diff.c	FUNCTION_2
0x4000049	              0x53	                                push rbx	        40	diff.c	FUNCTION_2
0x400004a	        0x4883ec18	                           sub rsp, 0x18	        40	diff.c	FUNCTION_2
0x400004e	          0x4889fd	                            mov rbp, rdi	        40	diff.c	FUNCTION_2
0x4000051	          0x4189f6	                           mov r14d, esi	        40	diff.c	FUNCTION_2
0x4000054	          0x4189d5	                           mov r13d, edx	        40	diff.c	FUNCTION_2
0x4000057	          0x4889cb	                            mov rbx, rcx	        40	diff.c	FUNCTION_2
0x400005a	          0x4d89c7	                             mov r15, r8	        40	diff.c	FUNCTION_2
0x400005d	      0x44894c240c	              mov dword [rsp + 0xc], r9d	        40	diff.c	FUNCTION_2
0x4000062	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_18	CALL_1
0x4000067	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_18	CALL_1
0x400006c	          0x4889cf	                            mov rdi, rcx	       975	cache.h	FUNCTION_18	CALL_1
0x400006f	      0xe800000000	                          call 0x4000074	       975	cache.h	FUNCTION_18	CALL_1
0x4000074	            0x85c0	                           test eax, eax	        43	diff.c	FUNCTION_2	IF_1	CALL_2
0x4000076	            0x7433	                            je 0x40000ab	        43	diff.c	FUNCTION_2	IF_1	CALL_2
0x4000078	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_18	CALL_1
0x400007d	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_18	CALL_1
0x4000082	          0x4c89ff	                            mov rdi, r15	       975	cache.h	FUNCTION_18	CALL_1
0x4000085	      0xe800000000	                          call 0x400008a	       975	cache.h	FUNCTION_18	CALL_1
0x400008a	            0x85c0	                           test eax, eax	        43	diff.c	FUNCTION_2	IF_1	CALL_2
0x400008c	            0x741d	                            je 0x40000ab	        43	diff.c	FUNCTION_2	IF_1	CALL_2
0x400008e	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_18	CALL_1
0x4000093	          0x4c89fe	                            mov rsi, r15	       975	cache.h	FUNCTION_18	CALL_1
0x4000096	          0x4889df	                            mov rdi, rbx	       975	cache.h	FUNCTION_18	CALL_1
0x4000099	      0xe800000000	                          call 0x400009e	       975	cache.h	FUNCTION_18	CALL_1
0x400009e	            0x85c0	                           test eax, eax	        44	diff.c	FUNCTION_2	IF_1	CALL_3
0x40000a0	            0x7509	                           jne 0x40000ab	        44	diff.c	FUNCTION_2	IF_1	CALL_3
0x40000a2	          0x4539ee	                          cmp r14d, r13d	        44	diff.c	FUNCTION_2	IF_1	CALL_3
0x40000a5	     0xf84b7000000	                            je 0x4000162	        44	diff.c	FUNCTION_2	IF_1	CALL_3
0x40000ab	        0xf6453940	           test byte [rbp + 0x39], 0x40 	        47	diff.c	FUNCTION_2	IF_2
0x40000af	            0x7426	                            je 0x40000d7	        47	diff.c	FUNCTION_2	IF_2
0x40000b1	      0x488b442458	            mov rax, qword [rsp + 0x58] 	        47	diff.c	FUNCTION_2	IF_2
0x40000b6	      0x488b4c2460	            mov rcx, qword [rsp + 0x60] 	        47	diff.c	FUNCTION_2	IF_2
0x40000bb	      0x48894c2458	             mov qword [rsp + 0x58], rcx	        47	diff.c	FUNCTION_2	IF_2
0x40000c0	      0x4889442460	             mov qword [rsp + 0x60], rax	        47	diff.c	FUNCTION_2	IF_2
0x40000c5	          0x4889d8	                            mov rax, rbx	        47	diff.c	FUNCTION_2	IF_2
0x40000c8	          0x4c89fb	                            mov rbx, r15	        47	diff.c	FUNCTION_2	IF_2
0x40000cb	          0x4989c7	                            mov r15, rax	        47	diff.c	FUNCTION_2	IF_2
0x40000ce	          0x4489f0	                           mov eax, r14d	        47	diff.c	FUNCTION_2	IF_2
0x40000d1	          0x4589ee	                          mov r14d, r13d	        47	diff.c	FUNCTION_2	IF_2
0x40000d4	          0x4189c5	                           mov r13d, eax	        47	diff.c	FUNCTION_2	IF_2
0x40000d7	    0x4c8ba5900000	            mov r12, qword [rbp + 0x90] 	        53	diff.c	FUNCTION_2	IF_3
0x40000de	          0x4d85e4	                           test r12, r12	        53	diff.c	FUNCTION_2	IF_3
0x40000e1	            0x742f	                            je 0x4000112	        53	diff.c	FUNCTION_2	IF_3
0x40000e3	    0x4863ad980000	         movsxd rbp, dword [rbp + 0x98] 	        54	diff.c	FUNCTION_2	IF_3	CALL_7
0x40000ea	          0x4889ea	                            mov rdx, rbp	        54	diff.c	FUNCTION_2	IF_3	CALL_7
0x40000ed	          0x4c89e6	                            mov rsi, r12	        54	diff.c	FUNCTION_2	IF_3	CALL_7
0x40000f0	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	        54	diff.c	FUNCTION_2	IF_3	CALL_7
0x40000f5	      0xe800000000	                          call 0x40000fa	        54	diff.c	FUNCTION_2	IF_3	CALL_7
0x40000fa	            0x85c0	                           test eax, eax	        53	diff.c	FUNCTION_2	IF_3
0x40000fc	            0x7564	                           jne 0x4000162	        53	diff.c	FUNCTION_2	IF_3
0x40000fe	          0x4889ea	                            mov rdx, rbp	        55	diff.c	FUNCTION_2	IF_3	CALL_8
0x4000101	          0x4c89e6	                            mov rsi, r12	        55	diff.c	FUNCTION_2	IF_3	CALL_8
0x4000104	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	        55	diff.c	FUNCTION_2	IF_3	CALL_8
0x4000109	      0xe800000000	                          call 0x400010e	        55	diff.c	FUNCTION_2	IF_3	CALL_8
0x400010e	            0x85c0	                           test eax, eax	        54	diff.c	FUNCTION_2	IF_3	CALL_7
0x4000110	            0x7550	                           jne 0x4000162	        54	diff.c	FUNCTION_2	IF_3	CALL_7
0x4000112	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	        58	diff.c	FUNCTION_2	CALL_9
0x4000117	      0xe800000000	                          call 0x400011c	        58	diff.c	FUNCTION_2	CALL_9
0x400011c	          0x4889c5	                            mov rbp, rax	        58	diff.c	FUNCTION_2	CALL_9
0x400011f	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	        59	diff.c	FUNCTION_2	CALL_10
0x4000124	      0xe800000000	                          call 0x4000129	        59	diff.c	FUNCTION_2	CALL_10
0x4000129	          0x4989c4	                            mov r12, rax	        59	diff.c	FUNCTION_2	CALL_10
0x400012c	        0x410fb7ce	                         movzx ecx, r14w	        60	diff.c	FUNCTION_2	CALL_11
0x4000130	        0x8b54240c	              mov edx, dword [rsp + 0xc]	        60	diff.c	FUNCTION_2	CALL_11
0x4000134	          0x4889de	                            mov rsi, rbx	        60	diff.c	FUNCTION_2	CALL_11
0x4000137	          0x4889ef	                            mov rdi, rbp	        60	diff.c	FUNCTION_2	CALL_11
0x400013a	      0xe800000000	                          call 0x400013f	        60	diff.c	FUNCTION_2	CALL_11
0x400013f	        0x410fb7cd	                         movzx ecx, r13w	        61	diff.c	FUNCTION_2	CALL_12
0x4000143	        0x8b542450	            mov edx, dword [rsp + 0x50] 	        61	diff.c	FUNCTION_2	CALL_12
0x4000147	          0x4c89fe	                            mov rsi, r15	        61	diff.c	FUNCTION_2	CALL_12
0x400014a	          0x4c89e7	                            mov rdi, r12	        61	diff.c	FUNCTION_2	CALL_12
0x400014d	      0xe800000000	                          call 0x4000152	        61	diff.c	FUNCTION_2	CALL_12
0x4000152	          0x4c89e2	                            mov rdx, r12	        63	diff.c	FUNCTION_2	CALL_13
0x4000155	          0x4889ee	                            mov rsi, rbp	        63	diff.c	FUNCTION_2	CALL_13
0x4000158	      0xbf00000000	                              mov edi, 0	        63	diff.c	FUNCTION_2	CALL_13
0x400015d	      0xe800000000	                          call 0x4000162	        63	diff.c	FUNCTION_2	CALL_13
0x4000162	        0x4883c418	                           add rsp, 0x18	        64	diff.c	FUNCTION_2
0x4000166	              0x5b	                                 pop rbx	        64	diff.c	FUNCTION_2
0x4000167	              0x5d	                                 pop rbp	        64	diff.c	FUNCTION_2
0x4000168	            0x415c	                                 pop r12	        64	diff.c	FUNCTION_2
0x400016a	            0x415d	                                 pop r13	        64	diff.c	FUNCTION_2
0x400016c	            0x415e	                                 pop r14	        64	diff.c	FUNCTION_2
0x400016e	            0x415f	                                 pop r15	        64	diff.c	FUNCTION_2
0x4000170	              0xc3	                                     ret	        64	diff.c	FUNCTION_2
builtin_diff_tree	SWITCH,0:IF,2:ELSE,0:CALL,3:WHILE,0:functions,0:DO,0:FOR,0	39
0x4000171	              0x53	                                push rbx	       163	diff.c	FUNCTION_6
0x4000172	        0x4883ec20	                           sub rsp, 0x20	       163	diff.c	FUNCTION_6
0x4000176	    0x64488b042528	                mov rax, qword fs:[0x28]	       163	diff.c	FUNCTION_6
0x400017f	      0x4889442418	             mov qword [rsp + 0x18], rax	       163	diff.c	FUNCTION_6
0x4000184	            0x31c0	                            xor eax, eax	       163	diff.c	FUNCTION_6
0x4000186	          0x83fe01	                              cmp esi, 1	       167	diff.c	FUNCTION_6	IF_1
0x4000189	            0x7e0a	                           jle 0x4000195	       167	diff.c	FUNCTION_6	IF_1
0x400018b	      0xbf00000000	                              mov edi, 0	       168	diff.c	FUNCTION_6	CALL_1
0x4000190	      0xe800000000	                          call 0x4000195	       168	diff.c	FUNCTION_6	CALL_1
0x4000195	          0x4889fb	                            mov rbx, rdi	       168	diff.c	FUNCTION_6	CALL_1
0x4000198	          0x498b30	                     mov rsi, qword [r8]	       174	diff.c	FUNCTION_6	IF_2
0x400019b	            0x8b06	                    mov eax, dword [rsi]	       165	diff.c	FUNCTION_6
0x400019d	          0xc1e805	                              shr eax, 5	       165	diff.c	FUNCTION_6
0x40001a0	          0x83e001	                              and eax, 1	       165	diff.c	FUNCTION_6
0x40001a3	          0x4863f8	                         movsxd rdi, eax	       176	diff.c	FUNCTION_6
0x40001a6	          0x488b11	                    mov rdx, qword [rcx]	       176	diff.c	FUNCTION_6
0x40001a9	        0x4883c204	                              add rdx, 4	       176	diff.c	FUNCTION_6
0x40001ad	        0x488914fc	            mov qword [rsp + rdi*8], rdx	       176	diff.c	FUNCTION_6
0x40001b1	      0xba01000000	                              mov edx, 1	       177	diff.c	FUNCTION_6
0x40001b6	            0x29c2	                            sub edx, eax	       177	diff.c	FUNCTION_6
0x40001b8	            0x89d0	                            mov eax, edx	       177	diff.c	FUNCTION_6
0x40001ba	            0x4898	                                    cdqe	       177	diff.c	FUNCTION_6
0x40001bc	        0x4883c604	                              add rsi, 4	       177	diff.c	FUNCTION_6
0x40001c0	        0x488934c4	            mov qword [rsp + rax*8], rsi	       177	diff.c	FUNCTION_6
0x40001c4	    0x488d8bf80400	                  lea rcx, [rbx + 0x4f8]	       178	diff.c	FUNCTION_6	CALL_2
0x40001cb	      0xba00000000	                              mov edx, 0	       178	diff.c	FUNCTION_6	CALL_2
0x40001d0	      0x488b742408	                mov rsi, qword [rsp + 8]	       178	diff.c	FUNCTION_6	CALL_2
0x40001d5	        0x488b3c24	                    mov rdi, qword [rsp]	       178	diff.c	FUNCTION_6	CALL_2
0x40001d9	      0xe800000000	                          call 0x40001de	       178	diff.c	FUNCTION_6	CALL_2
0x40001de	          0x4889df	                            mov rdi, rbx	       179	diff.c	FUNCTION_6	CALL_3
0x40001e1	      0xe800000000	                          call 0x40001e6	       179	diff.c	FUNCTION_6	CALL_3
0x40001e6	      0xb800000000	                              mov eax, 0	       181	diff.c	FUNCTION_6
0x40001eb	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       181	diff.c	FUNCTION_6
0x40001f0	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       181	diff.c	FUNCTION_6
0x40001f9	            0x7405	                            je 0x4000200	       181	diff.c	FUNCTION_6
0x40001fb	      0xe800000000	                          call 0x4000200	       181	diff.c	FUNCTION_6
0x4000200	        0x4883c420	                           add rsp, 0x20	       181	diff.c	FUNCTION_6
0x4000204	              0x5b	                                 pop rbx	       181	diff.c	FUNCTION_6
0x4000205	              0xc3	                                     ret	       181	diff.c	FUNCTION_6
