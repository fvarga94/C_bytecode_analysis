xdl_cleanup_merge	IF,1:DO,0:FOR,1:functions,0:WHILE,0:ELSE,0:CALL,1:SWITCH,0	21
0x4000391	              0x55	                                push rbp	        82	xmerge.c	FUNCTION_2
0x4000392	              0x53	                                push rbx	        82	xmerge.c	FUNCTION_2
0x4000393	        0x4883ec08	                              sub rsp, 8	        82	xmerge.c	FUNCTION_2
0x4000397	          0x4885ff	                           test rdi, rdi	        87	xmerge.c	FUNCTION_2	FOR_1
0x400039a	            0x7420	                            je 0x40003bc	        87	xmerge.c	FUNCTION_2	FOR_1
0x400039c	      0xbd00000000	                              mov ebp, 0	        87	xmerge.c	FUNCTION_2	FOR_1
0x40003a1	            0xeb03	                           jmp 0x40003a6	        87	xmerge.c	FUNCTION_2	FOR_1
0x40003a3	          0x4889df	                            mov rdi, rbx	        87	xmerge.c	FUNCTION_2	FOR_1
0x40003a6	        0x837f0801	                  cmp dword [rdi + 8], 1	        89	xmerge.c	FUNCTION_2	FOR_1	IF_1
0x40003aa	          0x83d500	                              adc ebp, 0	        89	xmerge.c	FUNCTION_2	FOR_1	IF_1
0x40003ad	          0x488b1f	                    mov rbx, qword [rdi]	        90	xmerge.c	FUNCTION_2	FOR_1
0x40003b0	      0xe800000000	                          call 0x40003b5	        91	xmerge.c	FUNCTION_2	FOR_1	CALL_1
0x40003b5	          0x4885db	                           test rbx, rbx	        87	xmerge.c	FUNCTION_2	FOR_1
0x40003b8	            0x75e9	                           jne 0x40003a3	        87	xmerge.c	FUNCTION_2	FOR_1
0x40003ba	            0xeb05	                           jmp 0x40003c1	        87	xmerge.c	FUNCTION_2	FOR_1
0x40003bc	      0xbd00000000	                              mov ebp, 0	        83	xmerge.c	FUNCTION_2
0x40003c1	            0x89e8	                            mov eax, ebp	        94	xmerge.c	FUNCTION_2
0x40003c3	        0x4883c408	                              add rsp, 8	        94	xmerge.c	FUNCTION_2
0x40003c7	              0x5b	                                 pop rbx	        94	xmerge.c	FUNCTION_2
0x40003c8	              0x5d	                                 pop rbp	        94	xmerge.c	FUNCTION_2
0x40003c9	              0xc3	                                     ret	        94	xmerge.c	FUNCTION_2
xdl_append_merge	IF,4:DO,0:FOR,0:functions,0:WHILE,0:ELSE,1:CALL,1:SWITCH,0	90
0x400015f	            0x4157	                                push r15	        54	xmerge.c	FUNCTION_1
0x4000161	            0x4156	                                push r14	        54	xmerge.c	FUNCTION_1
0x4000163	            0x4155	                                push r13	        54	xmerge.c	FUNCTION_1
0x4000165	            0x4154	                                push r12	        54	xmerge.c	FUNCTION_1
0x4000167	              0x55	                                push rbp	        54	xmerge.c	FUNCTION_1
0x4000168	              0x53	                                push rbx	        54	xmerge.c	FUNCTION_1
0x4000169	        0x4883ec18	                           sub rsp, 0x18	        54	xmerge.c	FUNCTION_1
0x400016d	          0x4989fd	                            mov r13, rdi	        54	xmerge.c	FUNCTION_1
0x4000170	          0x4189f6	                           mov r14d, esi	        54	xmerge.c	FUNCTION_1
0x4000173	      0x4889542408	                mov qword [rsp + 8], rdx	        54	xmerge.c	FUNCTION_1
0x4000178	          0x4989cc	                            mov r12, rcx	        54	xmerge.c	FUNCTION_1
0x400017b	          0x4c89c5	                             mov rbp, r8	        54	xmerge.c	FUNCTION_1
0x400017e	          0x4d89cf	                             mov r15, r9	        54	xmerge.c	FUNCTION_1
0x4000181	          0x488b1f	                    mov rbx, qword [rdi]	        55	xmerge.c	FUNCTION_1
0x4000184	          0x4885db	                           test rbx, rbx	        56	xmerge.c	FUNCTION_1	IF_1
0x4000187	     0xf84fd000000	                            je 0x400028a	        56	xmerge.c	FUNCTION_1	IF_1
0x400018d	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        56	xmerge.c	FUNCTION_1	IF_1
0x4000191	          0x4889c2	                            mov rdx, rax	        56	xmerge.c	FUNCTION_1	IF_1
0x4000194	        0x48035320	             add rdx, qword [rbx + 0x20]	        56	xmerge.c	FUNCTION_1	IF_1
0x4000198	          0x4c39c2	                             cmp rdx, r8	        56	xmerge.c	FUNCTION_1	IF_1
0x400019b	            0x7d13	                           jge 0x40001b0	        56	xmerge.c	FUNCTION_1	IF_1
0x400019d	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	        56	xmerge.c	FUNCTION_1	IF_1
0x40001a1	        0x48035318	             add rdx, qword [rbx + 0x18]	        56	xmerge.c	FUNCTION_1	IF_1
0x40001a5	      0x483b542450	            cmp rdx, qword [rsp + 0x50] 	        56	xmerge.c	FUNCTION_1	IF_1
0x40001aa	     0xf8c8f000000	                            jl 0x400023f	        56	xmerge.c	FUNCTION_1	IF_1
0x40001b0	        0x44397308	               cmp dword [rbx + 8], r14d	        57	xmerge.c	FUNCTION_1	IF_1	IF_2
0x40001b4	            0x7407	                            je 0x40001bd	        57	xmerge.c	FUNCTION_1	IF_1	IF_2
0x40001b6	    0xc74308000000	                  mov dword [rbx + 8], 0	        58	xmerge.c	FUNCTION_1	IF_1	IF_2
0x40001bd	      0x4c03642408	                add r12, qword [rsp + 8]	        59	xmerge.c	FUNCTION_1	IF_1
0x40001c2	        0x4c2b6330	             sub r12, qword [rbx + 0x30]	        59	xmerge.c	FUNCTION_1	IF_1
0x40001c6	        0x4c896338	             mov qword [rbx + 0x38], r12	        59	xmerge.c	FUNCTION_1	IF_1
0x40001ca	          0x4c01fd	                            add rbp, r15	        60	xmerge.c	FUNCTION_1	IF_1
0x40001cd	          0x4829c5	                            sub rbp, rax	        60	xmerge.c	FUNCTION_1	IF_1
0x40001d0	        0x48896b20	             mov qword [rbx + 0x20], rbp	        60	xmerge.c	FUNCTION_1	IF_1
0x40001d4	      0x488b442450	            mov rax, qword [rsp + 0x50] 	        61	xmerge.c	FUNCTION_1	IF_1
0x40001d9	      0x4803442458	             add rax, qword [rsp + 0x58]	        61	xmerge.c	FUNCTION_1	IF_1
0x40001de	        0x482b4318	             sub rax, qword [rbx + 0x18]	        61	xmerge.c	FUNCTION_1	IF_1
0x40001e2	        0x48894328	             mov qword [rbx + 0x28], rax	        61	xmerge.c	FUNCTION_1	IF_1
0x40001e6	      0xb800000000	                              mov eax, 0	        78	xmerge.c	FUNCTION_1
0x40001eb	      0xe9b1000000	                           jmp 0x40002a1	        61	xmerge.c	FUNCTION_1	IF_1
0x40001f0	        0x49895500	                    mov qword [r13], rdx	        76	xmerge.c	FUNCTION_1	ELSE_1
0x40001f4	      0xb800000000	                              mov eax, 0	        78	xmerge.c	FUNCTION_1
0x40001f9	      0xe9a3000000	                           jmp 0x40002a1	        78	xmerge.c	FUNCTION_1
0x40001fe	      0xb8ffffffff	                     mov eax, 0xffffffff	        65	xmerge.c	FUNCTION_1	ELSE_1	IF_3
0x4000203	      0xe999000000	                           jmp 0x40002a1	        65	xmerge.c	FUNCTION_1	ELSE_1	IF_3
0x4000208	    0x48c702000000	                      mov qword [rdx], 0	        66	xmerge.c	FUNCTION_1	ELSE_1
0x400020f	        0x44897208	               mov dword [rdx + 8], r14d	        67	xmerge.c	FUNCTION_1	ELSE_1
0x4000213	      0x488b442408	                mov rax, qword [rsp + 8]	        68	xmerge.c	FUNCTION_1	ELSE_1
0x4000218	        0x48894230	             mov qword [rdx + 0x30], rax	        68	xmerge.c	FUNCTION_1	ELSE_1
0x400021c	        0x4c896238	             mov qword [rdx + 0x38], r12	        69	xmerge.c	FUNCTION_1	ELSE_1
0x4000220	        0x48896a10	             mov qword [rdx + 0x10], rbp	        70	xmerge.c	FUNCTION_1	ELSE_1
0x4000224	        0x4c897a20	             mov qword [rdx + 0x20], r15	        71	xmerge.c	FUNCTION_1	ELSE_1
0x4000228	      0x488b442450	            mov rax, qword [rsp + 0x50] 	        72	xmerge.c	FUNCTION_1	ELSE_1
0x400022d	        0x48894218	             mov qword [rdx + 0x18], rax	        72	xmerge.c	FUNCTION_1	ELSE_1
0x4000231	      0x488b442458	            mov rax, qword [rsp + 0x58] 	        73	xmerge.c	FUNCTION_1	ELSE_1
0x4000236	        0x48894228	             mov qword [rdx + 0x28], rax	        73	xmerge.c	FUNCTION_1	ELSE_1
0x400023a	          0x488913	                    mov qword [rbx], rdx	        75	xmerge.c	FUNCTION_1	ELSE_1	IF_4
0x400023d	            0xebb1	                           jmp 0x40001f0	        75	xmerge.c	FUNCTION_1	ELSE_1	IF_4
0x400023f	      0xbf40000000	                           mov edi, 0x40	        63	xmerge.c	FUNCTION_1	ELSE_1	CALL_1
0x4000244	      0xe800000000	                          call 0x4000249	        63	xmerge.c	FUNCTION_1	ELSE_1	CALL_1
0x4000249	          0x4889c2	                            mov rdx, rax	        63	xmerge.c	FUNCTION_1	ELSE_1	CALL_1
0x400024c	          0x4885c0	                           test rax, rax	        64	xmerge.c	FUNCTION_1	ELSE_1	IF_3
0x400024f	            0x75b7	                           jne 0x4000208	        64	xmerge.c	FUNCTION_1	ELSE_1	IF_3
0x4000251	            0xebab	                           jmp 0x40001fe	        64	xmerge.c	FUNCTION_1	ELSE_1	IF_3
0x4000253	    0x48c702000000	                      mov qword [rdx], 0	        66	xmerge.c	FUNCTION_1	ELSE_1
0x400025a	        0x44897208	               mov dword [rdx + 8], r14d	        67	xmerge.c	FUNCTION_1	ELSE_1
0x400025e	      0x488b442408	                mov rax, qword [rsp + 8]	        68	xmerge.c	FUNCTION_1	ELSE_1
0x4000263	        0x48894230	             mov qword [rdx + 0x30], rax	        68	xmerge.c	FUNCTION_1	ELSE_1
0x4000267	        0x4c896238	             mov qword [rdx + 0x38], r12	        69	xmerge.c	FUNCTION_1	ELSE_1
0x400026b	        0x48896a10	             mov qword [rdx + 0x10], rbp	        70	xmerge.c	FUNCTION_1	ELSE_1
0x400026f	        0x4c897a20	             mov qword [rdx + 0x20], r15	        71	xmerge.c	FUNCTION_1	ELSE_1
0x4000273	      0x488b442450	            mov rax, qword [rsp + 0x50] 	        72	xmerge.c	FUNCTION_1	ELSE_1
0x4000278	        0x48894218	             mov qword [rdx + 0x18], rax	        72	xmerge.c	FUNCTION_1	ELSE_1
0x400027c	      0x488b442458	            mov rax, qword [rsp + 0x58] 	        73	xmerge.c	FUNCTION_1	ELSE_1
0x4000281	        0x48894228	             mov qword [rdx + 0x28], rax	        73	xmerge.c	FUNCTION_1	ELSE_1
0x4000285	      0xe966ffffff	                           jmp 0x40001f0	        73	xmerge.c	FUNCTION_1	ELSE_1
0x400028a	      0xbf40000000	                           mov edi, 0x40	        63	xmerge.c	FUNCTION_1	ELSE_1	CALL_1
0x400028f	      0xe800000000	                          call 0x4000294	        63	xmerge.c	FUNCTION_1	ELSE_1	CALL_1
0x4000294	          0x4889c2	                            mov rdx, rax	        63	xmerge.c	FUNCTION_1	ELSE_1	CALL_1
0x4000297	      0xb8ffffffff	                     mov eax, 0xffffffff	        65	xmerge.c	FUNCTION_1	ELSE_1	IF_3
0x400029c	          0x4885d2	                           test rdx, rdx	        64	xmerge.c	FUNCTION_1	ELSE_1	IF_3
0x400029f	            0x75b2	                           jne 0x4000253	        64	xmerge.c	FUNCTION_1	ELSE_1	IF_3
0x40002a1	        0x4883c418	                           add rsp, 0x18	        79	xmerge.c	FUNCTION_1
0x40002a5	              0x5b	                                 pop rbx	        79	xmerge.c	FUNCTION_1
0x40002a6	              0x5d	                                 pop rbp	        79	xmerge.c	FUNCTION_1
0x40002a7	            0x415c	                                 pop r12	        79	xmerge.c	FUNCTION_1
0x40002a9	            0x415d	                                 pop r13	        79	xmerge.c	FUNCTION_1
0x40002ab	            0x415e	                                 pop r14	        79	xmerge.c	FUNCTION_1
0x40002ad	            0x415f	                                 pop r15	        79	xmerge.c	FUNCTION_1
0x40002af	              0xc3	                                     ret	        79	xmerge.c	FUNCTION_1
xdl_recs_copy_0	IF,7:DO,0:FOR,1:functions,0:WHILE,0:ELSE,0:CALL,1:SWITCH,0	73
0x40002b0	            0x4157	                                push r15	       113	xmerge.c	FUNCTION_4
0x40002b2	            0x4156	                                push r14	       113	xmerge.c	FUNCTION_4
0x40002b4	            0x4155	                                push r13	       113	xmerge.c	FUNCTION_4
0x40002b6	            0x4154	                                push r12	       113	xmerge.c	FUNCTION_4
0x40002b8	              0x55	                                push rbp	       113	xmerge.c	FUNCTION_4
0x40002b9	              0x53	                                push rbx	       113	xmerge.c	FUNCTION_4
0x40002ba	        0x4883ec18	                           sub rsp, 0x18	       113	xmerge.c	FUNCTION_4
0x40002be	      0x4c8b642450	            mov r12, qword [rsp + 0x50] 	       113	xmerge.c	FUNCTION_4
0x40002c3	            0x85ff	                           test edi, edi	       117	xmerge.c	FUNCTION_4
0x40002c5	            0x7406	                            je 0x40002cd	       117	xmerge.c	FUNCTION_4
0x40002c7	        0x488b4660	            mov rax, qword [rsi + 0x60] 	       117	xmerge.c	FUNCTION_4
0x40002cb	            0xeb07	                           jmp 0x40002d4	       117	xmerge.c	FUNCTION_4
0x40002cd	    0x488b86e80000	            mov rax, qword [rsi + 0xe8] 	       117	xmerge.c	FUNCTION_4
0x40002d4	          0x4863d2	                         movsxd rdx, edx	       117	xmerge.c	FUNCTION_4
0x40002d7	        0x4c8d3cd0	                  lea r15, [rax + rdx*8]	       117	xmerge.c	FUNCTION_4
0x40002db	            0x85c9	                           test ecx, ecx	       119	xmerge.c	FUNCTION_4	IF_1
0x40002dd	     0xf8e96000000	                           jle 0x4000379	       119	xmerge.c	FUNCTION_4	IF_1
0x40002e3	      0x44894c2408	                mov dword [rsp + 8], r9d	       119	xmerge.c	FUNCTION_4	IF_1
0x40002e8	      0x448944240c	              mov dword [rsp + 0xc], r8d	       119	xmerge.c	FUNCTION_4	IF_1
0x40002ed	          0x4189ce	                           mov r14d, ecx	       119	xmerge.c	FUNCTION_4	IF_1
0x40002f0	          0x4c89fb	                            mov rbx, r15	       119	xmerge.c	FUNCTION_4	IF_1
0x40002f3	          0x8d41ff	                      lea eax, [rcx - 1]	       119	xmerge.c	FUNCTION_4	IF_1
0x40002f6	      0x4d8d6cc708	              lea r13, [r15 + rax*8 + 8]	       119	xmerge.c	FUNCTION_4	IF_1
0x40002fb	      0xbd00000000	                              mov ebp, 0	       119	xmerge.c	FUNCTION_4	IF_1
0x4000300	          0x4d85e4	                           test r12, r12	       123	xmerge.c	FUNCTION_4	FOR_1	IF_2
0x4000303	            0x7416	                            je 0x400031b	       123	xmerge.c	FUNCTION_4	FOR_1	IF_2
0x4000305	          0x488b03	                    mov rax, qword [rbx]	       124	xmerge.c	FUNCTION_4	FOR_1	IF_2
0x4000308	          0x4863fd	                         movsxd rdi, ebp	        53	string3.h	FUNCTION_18	CALL_3
0x400030b	          0x4c01e7	                            add rdi, r12	        53	string3.h	FUNCTION_18	CALL_3
0x400030e	        0x488b7008	                mov rsi, qword [rax + 8]	        53	string3.h	FUNCTION_18	CALL_3
0x4000312	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        53	string3.h	FUNCTION_18	CALL_3
0x4000316	      0xe800000000	                          call 0x400031b	        53	string3.h	FUNCTION_18	CALL_3
0x400031b	          0x488b03	                    mov rax, qword [rbx]	       122	xmerge.c	FUNCTION_4	FOR_1
0x400031e	           0x36810	             add ebp, dword [rax + 0x10]	       122	xmerge.c	FUNCTION_4	FOR_1
0x4000321	        0x4883c308	                              add rbx, 8	       122	xmerge.c	FUNCTION_4	FOR_1
0x4000325	          0x4c39eb	                            cmp rbx, r13	       122	xmerge.c	FUNCTION_4	FOR_1
0x4000328	            0x75d6	                           jne 0x4000300	       122	xmerge.c	FUNCTION_4	FOR_1
0x400032a	            0x89e8	                            mov eax, ebp	       122	xmerge.c	FUNCTION_4	FOR_1
0x400032c	      0x837c240800	                  cmp dword [rsp + 8], 0	       125	xmerge.c	FUNCTION_4	IF_3
0x4000331	            0x744f	                            je 0x4000382	       125	xmerge.c	FUNCTION_4	IF_3
0x4000333	          0x4d63f6	                        movsxd r14, r14d	       126	xmerge.c	FUNCTION_4	IF_3
0x4000336	      0x4b8b54f7f8	        mov rdx, qword [r15 + r14*8 - 8]	       126	xmerge.c	FUNCTION_4	IF_3
0x400033b	        0x488b4210	            mov rax, qword [rdx + 0x10] 	       126	xmerge.c	FUNCTION_4	IF_3
0x400033f	            0x85c0	                           test eax, eax	       127	xmerge.c	FUNCTION_4	IF_3	IF_4
0x4000341	            0x740d	                            je 0x4000350	       127	xmerge.c	FUNCTION_4	IF_3	IF_4
0x4000343	            0x4898	                                    cdqe	       127	xmerge.c	FUNCTION_4	IF_3	IF_4
0x4000345	        0x488b5208	                mov rdx, qword [rdx + 8]	       127	xmerge.c	FUNCTION_4	IF_3	IF_4
0x4000349	      0x807c02ff0a	          cmp byte [rdx + rax - 1], 0xa 	       127	xmerge.c	FUNCTION_4	IF_3	IF_4
0x400034e	            0x7430	                            je 0x4000380	       127	xmerge.c	FUNCTION_4	IF_3	IF_4
0x4000350	      0x837c240c00	                cmp dword [rsp + 0xc], 0	       128	xmerge.c	FUNCTION_4	IF_3	IF_4	IF_5
0x4000355	            0x7410	                            je 0x4000367	       128	xmerge.c	FUNCTION_4	IF_3	IF_4	IF_5
0x4000357	          0x4d85e4	                           test r12, r12	       129	xmerge.c	FUNCTION_4	IF_3	IF_4	IF_5	IF_6
0x400035a	            0x7408	                            je 0x4000364	       129	xmerge.c	FUNCTION_4	IF_3	IF_4	IF_5	IF_6
0x400035c	          0x4863c5	                         movsxd rax, ebp	       130	xmerge.c	FUNCTION_4	IF_3	IF_4	IF_5	IF_6
0x400035f	      0x41c604040d	               mov byte [r12 + rax], 0xd	       130	xmerge.c	FUNCTION_4	IF_3	IF_4	IF_5	IF_6
0x4000364	          0x83c501	                              add ebp, 1	       131	xmerge.c	FUNCTION_4	IF_3	IF_4	IF_5
0x4000367	          0x4d85e4	                           test r12, r12	       134	xmerge.c	FUNCTION_4	IF_3	IF_4	IF_7
0x400036a	            0x7408	                            je 0x4000374	       134	xmerge.c	FUNCTION_4	IF_3	IF_4	IF_7
0x400036c	          0x4863c5	                         movsxd rax, ebp	       135	xmerge.c	FUNCTION_4	IF_3	IF_4	IF_7
0x400036f	      0x41c604040a	               mov byte [r12 + rax], 0xa	       135	xmerge.c	FUNCTION_4	IF_3	IF_4	IF_7
0x4000374	          0x8d4501	                      lea eax, [rbp + 1]	       136	xmerge.c	FUNCTION_4	IF_3	IF_4
0x4000377	            0xeb09	                           jmp 0x4000382	       136	xmerge.c	FUNCTION_4	IF_3	IF_4
0x4000379	      0xb800000000	                              mov eax, 0	       120	xmerge.c	FUNCTION_4	IF_1
0x400037e	            0xeb02	                           jmp 0x4000382	       120	xmerge.c	FUNCTION_4	IF_1
0x4000380	            0x89e8	                            mov eax, ebp	       122	xmerge.c	FUNCTION_4	FOR_1
0x4000382	        0x4883c418	                           add rsp, 0x18	       140	xmerge.c	FUNCTION_4
0x4000386	              0x5b	                                 pop rbx	       140	xmerge.c	FUNCTION_4
0x4000387	              0x5d	                                 pop rbp	       140	xmerge.c	FUNCTION_4
0x4000388	            0x415c	                                 pop r12	       140	xmerge.c	FUNCTION_4
0x400038a	            0x415d	                                 pop r13	       140	xmerge.c	FUNCTION_4
0x400038c	            0x415e	                                 pop r14	       140	xmerge.c	FUNCTION_4
0x400038e	            0x415f	                                 pop r15	       140	xmerge.c	FUNCTION_4
0x4000390	              0xc3	                                     ret	       140	xmerge.c	FUNCTION_4
is_eol_crlf	IF,4:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:CALL,0:SWITCH,0	53
0x4000040	        0x488b4738	            mov rax, qword [rdi + 0x38] 	       161	xmerge.c	FUNCTION_7	IF_1
0x4000044	          0x4863ce	                         movsxd rcx, esi	       161	xmerge.c	FUNCTION_7	IF_1
0x4000047	        0x488d50ff	                      lea rdx, [rax - 1]	       161	xmerge.c	FUNCTION_7	IF_1
0x400004b	          0x4839d1	                            cmp rcx, rdx	       161	xmerge.c	FUNCTION_7	IF_1
0x400004e	            0x7d22	                           jge 0x4000072	       161	xmerge.c	FUNCTION_7	IF_1
0x4000050	        0x488b4760	            mov rax, qword [rdi + 0x60] 	       163	xmerge.c	FUNCTION_7	IF_1
0x4000054	        0x488b14c8	            mov rdx, qword [rax + rcx*8]	       163	xmerge.c	FUNCTION_7	IF_1
0x4000058	        0x488b4210	            mov rax, qword [rdx + 0x10] 	       163	xmerge.c	FUNCTION_7	IF_1
0x400005c	        0x4883f801	                              cmp rax, 1	       163	xmerge.c	FUNCTION_7	IF_1
0x4000060	            0x7e76	                           jle 0x40000d8	       163	xmerge.c	FUNCTION_7	IF_1
0x4000062	        0x488b5208	                mov rdx, qword [rdx + 8]	       164	xmerge.c	FUNCTION_7	IF_1
0x4000066	      0x807c02fe0d	          cmp byte [rdx + rax - 2], 0xd 	       163	xmerge.c	FUNCTION_7	IF_1
0x400006b	           0xf94c0	                                 sete al	       163	xmerge.c	FUNCTION_7	IF_1
0x400006e	           0xfb6c0	                           movzx eax, al	       163	xmerge.c	FUNCTION_7	IF_1
0x4000071	              0xc3	                                     ret	       163	xmerge.c	FUNCTION_7	IF_1
0x4000072	          0x4885c0	                           test rax, rax	       165	xmerge.c	FUNCTION_7	IF_2
0x4000075	            0x7467	                            je 0x40000de	       165	xmerge.c	FUNCTION_7	IF_2
0x4000077	        0x488b5760	            mov rdx, qword [rdi + 0x60] 	       168	xmerge.c	FUNCTION_7	IF_3
0x400007b	          0x4863c6	                         movsxd rax, esi	       168	xmerge.c	FUNCTION_7	IF_3
0x400007e	    0x488d3cc50000	                        lea rdi, [rax*8]	       168	xmerge.c	FUNCTION_7	IF_3
0x4000086	        0x488b0cc2	            mov rcx, qword [rdx + rax*8]	       168	xmerge.c	FUNCTION_7	IF_3
0x400008a	        0x488b4110	            mov rax, qword [rcx + 0x10] 	       168	xmerge.c	FUNCTION_7	IF_3
0x400008e	          0x4885c0	                           test rax, rax	       168	xmerge.c	FUNCTION_7	IF_3
0x4000091	            0x741d	                            je 0x40000b0	       168	xmerge.c	FUNCTION_7	IF_3
0x4000093	        0x488b4908	                mov rcx, qword [rcx + 8]	       169	xmerge.c	FUNCTION_7	IF_3
0x4000097	      0x807c01ff0a	          cmp byte [rcx + rax - 1], 0xa 	       168	xmerge.c	FUNCTION_7	IF_3
0x400009c	            0x7512	                           jne 0x40000b0	       168	xmerge.c	FUNCTION_7	IF_3
0x400009e	        0x4883f801	                              cmp rax, 1	       171	xmerge.c	FUNCTION_7	IF_3
0x40000a2	            0x7e40	                           jle 0x40000e4	       171	xmerge.c	FUNCTION_7	IF_3
0x40000a4	      0x807c01fe0d	          cmp byte [rcx + rax - 2], 0xd 	       163	xmerge.c	FUNCTION_7	IF_1
0x40000a9	           0xf94c0	                                 sete al	       163	xmerge.c	FUNCTION_7	IF_1
0x40000ac	           0xfb6c0	                           movzx eax, al	       163	xmerge.c	FUNCTION_7	IF_1
0x40000af	              0xc3	                                     ret	       163	xmerge.c	FUNCTION_7	IF_1
0x40000b0	            0x85f6	                           test esi, esi	       173	xmerge.c	FUNCTION_7	IF_4
0x40000b2	            0x7436	                            je 0x40000ea	       173	xmerge.c	FUNCTION_7	IF_4
0x40000b4	      0x488b4c3af8	          mov rcx, qword [rdx + rdi - 8]	       177	xmerge.c	FUNCTION_7
0x40000b9	        0x488b5110	            mov rdx, qword [rcx + 0x10] 	       177	xmerge.c	FUNCTION_7
0x40000bd	      0xb800000000	                              mov eax, 0	       177	xmerge.c	FUNCTION_7
0x40000c2	        0x4883fa01	                              cmp rdx, 1	       177	xmerge.c	FUNCTION_7
0x40000c6	            0x7e27	                           jle 0x40000ef	       177	xmerge.c	FUNCTION_7
0x40000c8	        0x488b4108	                mov rax, qword [rcx + 8]	       178	xmerge.c	FUNCTION_7
0x40000cc	      0x807c10fe0d	          cmp byte [rax + rdx - 2], 0xd 	       163	xmerge.c	FUNCTION_7	IF_1
0x40000d1	           0xf94c0	                                 sete al	       163	xmerge.c	FUNCTION_7	IF_1
0x40000d4	           0xfb6c0	                           movzx eax, al	       163	xmerge.c	FUNCTION_7	IF_1
0x40000d7	              0xc3	                                     ret	       163	xmerge.c	FUNCTION_7	IF_1
0x40000d8	      0xb800000000	                              mov eax, 0	       163	xmerge.c	FUNCTION_7	IF_1
0x40000dd	              0xc3	                                     ret	       163	xmerge.c	FUNCTION_7	IF_1
0x40000de	      0xb8ffffffff	                     mov eax, 0xffffffff	       167	xmerge.c	FUNCTION_7	IF_2
0x40000e3	              0xc3	                                     ret	       167	xmerge.c	FUNCTION_7	IF_2
0x40000e4	      0xb800000000	                              mov eax, 0	       171	xmerge.c	FUNCTION_7	IF_3
0x40000e9	              0xc3	                                     ret	       171	xmerge.c	FUNCTION_7	IF_3
0x40000ea	      0xb8ffffffff	                     mov eax, 0xffffffff	       175	xmerge.c	FUNCTION_7	IF_4
0x40000ef	            0xf3c3	                                     ret	       179	xmerge.c	FUNCTION_7
xdl_fill_merge_buffer	IF,5:DO,0:FOR,1:functions,0:WHILE,0:ELSE,2:CALL,6:SWITCH,0	401
0x40003ca	            0x4157	                                push r15	       289	xmerge.c	FUNCTION_10
0x40003cc	            0x4156	                                push r14	       289	xmerge.c	FUNCTION_10
0x40003ce	            0x4155	                                push r13	       289	xmerge.c	FUNCTION_10
0x40003d0	            0x4154	                                push r12	       289	xmerge.c	FUNCTION_10
0x40003d2	              0x55	                                push rbp	       289	xmerge.c	FUNCTION_10
0x40003d3	              0x53	                                push rbx	       289	xmerge.c	FUNCTION_10
0x40003d4	        0x4883ec58	                           sub rsp, 0x58	       289	xmerge.c	FUNCTION_10
0x40003d8	          0x4989fe	                            mov r14, rdi	       289	xmerge.c	FUNCTION_10
0x40003db	      0x4889742438	             mov qword [rsp + 0x38], rsi	       289	xmerge.c	FUNCTION_10
0x40003e0	      0x4889542418	             mov qword [rsp + 0x18], rdx	       289	xmerge.c	FUNCTION_10
0x40003e5	      0x48894c2430	             mov qword [rsp + 0x30], rcx	       289	xmerge.c	FUNCTION_10
0x40003ea	      0x4c89442440	              mov qword [rsp + 0x40], r8	       289	xmerge.c	FUNCTION_10
0x40003ef	      0x44894c2414	             mov dword [rsp + 0x14], r9d	       289	xmerge.c	FUNCTION_10
0x40003f4	    0x488b9c249000	            mov rbx, qword [rsp + 0x90] 	       289	xmerge.c	FUNCTION_10
0x40003fc	    0x4c8bbc249800	            mov r15, qword [rsp + 0x98] 	       289	xmerge.c	FUNCTION_10
0x4000404	    0x8b8424a80000	            mov eax, dword [rsp + 0xa8] 	       289	xmerge.c	FUNCTION_10
0x400040b	          0x4885db	                           test rbx, rbx	       292	xmerge.c	FUNCTION_10	FOR_1
0x400040e	     0xf8461040000	                            je 0x4000875	       292	xmerge.c	FUNCTION_10	FOR_1
0x4000414	            0x85c0	                           test eax, eax	       292	xmerge.c	FUNCTION_10	FOR_1
0x4000416	      0xba07000000	                              mov edx, 7	       292	xmerge.c	FUNCTION_10	FOR_1
0x400041b	           0xf4fd0	                          cmovg edx, eax	       292	xmerge.c	FUNCTION_10	FOR_1
0x400041e	        0x89542428	             mov dword [rsp + 0x28], edx	       292	xmerge.c	FUNCTION_10	FOR_1
0x4000422	          0x8d4201	                      lea eax, [rdx + 1]	       215	xmerge.c	FUNCTION_9	IF_2
0x4000425	        0x8944244c	             mov dword [rsp + 0x4c], eax	       215	xmerge.c	FUNCTION_9	IF_2
0x4000429	          0x4863c2	                         movsxd rax, edx	       217	xmerge.c	FUNCTION_9	ELSE_1	CALL_6
0x400042c	      0x4889442420	             mov qword [rsp + 0x20], rax	       217	xmerge.c	FUNCTION_9	ELSE_1	CALL_6
0x4000431	    0x41bd00000000	                             mov r13d, 0	       217	xmerge.c	FUNCTION_9	ELSE_1	CALL_6
0x4000437	    0x41bc00000000	                             mov r12d, 0	       217	xmerge.c	FUNCTION_9	ELSE_1	CALL_6
0x400043d	      0x48897c2408	                mov qword [rsp + 8], rdi	       204	xmerge.c	FUNCTION_9	CALL_3
0x4000442	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       293	xmerge.c	FUNCTION_10	FOR_1	IF_1
0x4000446	            0x85c0	                           test eax, eax	       293	xmerge.c	FUNCTION_10	FOR_1	IF_1
0x4000448	            0x7412	                            je 0x400045c	       293	xmerge.c	FUNCTION_10	FOR_1	IF_1
0x400044a	        0x837b0800	                  cmp dword [rbx + 8], 0	       293	xmerge.c	FUNCTION_10	FOR_1	IF_1
0x400044e	     0xf8547040000	                           jne 0x400089b	       293	xmerge.c	FUNCTION_10	FOR_1	IF_1
0x4000454	          0x894308	                mov dword [rbx + 8], eax	       294	xmerge.c	FUNCTION_10	FOR_1	IF_1
0x4000457	      0xe93f040000	                           jmp 0x400089b	       294	xmerge.c	FUNCTION_10	FOR_1	IF_1
0x400045c	          0x8b4308	                mov eax, dword [rbx + 8]	       296	xmerge.c	FUNCTION_10	FOR_1	IF_2
0x400045f	            0x85c0	                           test eax, eax	       296	xmerge.c	FUNCTION_10	FOR_1	IF_2
0x4000461	     0xf8529030000	                           jne 0x4000790	       296	xmerge.c	FUNCTION_10	FOR_1	IF_2
0x4000467	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       202	xmerge.c	FUNCTION_9	CALL_1
0x400046c	          0x4885ff	                           test rdi, rdi	       202	xmerge.c	FUNCTION_9	CALL_1
0x400046f	            0x740f	                            je 0x4000480	       202	xmerge.c	FUNCTION_9	CALL_1
0x4000471	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       202	xmerge.c	FUNCTION_9	CALL_1
0x4000478	            0xf2ae	              repne scasb al, byte [rdi]	       202	xmerge.c	FUNCTION_9	CALL_1
0x400047a	            0x89cd	                            mov ebp, ecx	       202	xmerge.c	FUNCTION_9	CALL_1
0x400047c	            0xf7d5	                                 not ebp	       202	xmerge.c	FUNCTION_9	CALL_1
0x400047e	            0xeb05	                           jmp 0x4000485	       202	xmerge.c	FUNCTION_9	CALL_1
0x4000480	      0xbd00000000	                              mov ebp, 0	       202	xmerge.c	FUNCTION_9	CALL_1
0x4000485	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       203	xmerge.c	FUNCTION_9	CALL_2
0x400048a	          0x4885ff	                           test rdi, rdi	       203	xmerge.c	FUNCTION_9	CALL_2
0x400048d	            0x7418	                            je 0x40004a7	       203	xmerge.c	FUNCTION_9	CALL_2
0x400048f	      0xb800000000	                              mov eax, 0	       203	xmerge.c	FUNCTION_9	CALL_2
0x4000494	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       203	xmerge.c	FUNCTION_9	CALL_2
0x400049b	            0xf2ae	              repne scasb al, byte [rdi]	       203	xmerge.c	FUNCTION_9	CALL_2
0x400049d	            0x89c8	                            mov eax, ecx	       203	xmerge.c	FUNCTION_9	CALL_2
0x400049f	            0xf7d0	                                 not eax	       203	xmerge.c	FUNCTION_9	CALL_2
0x40004a1	        0x8944242c	             mov dword [rsp + 0x2c], eax	       203	xmerge.c	FUNCTION_9	CALL_2
0x40004a5	            0xeb08	                           jmp 0x40004af	       203	xmerge.c	FUNCTION_9	CALL_2
0x40004a7	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	       203	xmerge.c	FUNCTION_9	CALL_2
0x40004af	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	       204	xmerge.c	FUNCTION_9	CALL_3
0x40004b4	          0x4885ff	                           test rdi, rdi	       204	xmerge.c	FUNCTION_9	CALL_3
0x40004b7	            0x7418	                            je 0x40004d1	       204	xmerge.c	FUNCTION_9	CALL_3
0x40004b9	      0xb800000000	                              mov eax, 0	       204	xmerge.c	FUNCTION_9	CALL_3
0x40004be	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       204	xmerge.c	FUNCTION_9	CALL_3
0x40004c5	            0xf2ae	              repne scasb al, byte [rdi]	       204	xmerge.c	FUNCTION_9	CALL_3
0x40004c7	            0x89c8	                            mov eax, ecx	       204	xmerge.c	FUNCTION_9	CALL_3
0x40004c9	            0xf7d0	                                 not eax	       204	xmerge.c	FUNCTION_9	CALL_3
0x40004cb	        0x89442448	             mov dword [rsp + 0x48], eax	       204	xmerge.c	FUNCTION_9	CALL_3
0x40004cf	            0xeb08	                           jmp 0x40004d9	       204	xmerge.c	FUNCTION_9	CALL_3
0x40004d1	    0xc74424480000	               mov dword [rsp + 0x48], 0	       204	xmerge.c	FUNCTION_9	CALL_3
0x40004d9	          0x4889da	                            mov rdx, rbx	       205	xmerge.c	FUNCTION_9	CALL_4
0x40004dc	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       205	xmerge.c	FUNCTION_9	CALL_4
0x40004e1	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       205	xmerge.c	FUNCTION_9	CALL_4
0x40004e6	      0xe806fcffff	                   call sym.is_cr_needed	       205	xmerge.c	FUNCTION_9	CALL_4
0x40004eb	          0x4189c6	                           mov r14d, eax	       205	xmerge.c	FUNCTION_9	CALL_4
0x40004ee	          0x4d85ff	                           test r15, r15	       211	xmerge.c	FUNCTION_9	CALL_5
0x40004f1	     0xf84ac030000	                            je 0x40008a3	       211	xmerge.c	FUNCTION_9	CALL_5
0x40004f7	          0x8b4b10	            mov ecx, dword [rbx + 0x10] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x40004fa	          0x4429e9	                           sub ecx, r13d	       144	xmerge.c	FUNCTION_5	CALL_1
0x40004fd	        0x4883ec08	                              sub rsp, 8	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000501	          0x4963c4	                        movsxd rax, r12d	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000504	          0x4c01f8	                            add rax, r15	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000507	              0x50	                                push rax	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000508	    0x41b900000000	                              mov r9d, 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x400050e	    0x41b800000000	                              mov r8d, 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000514	          0x4489ea	                           mov edx, r13d	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000517	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x400051c	      0xbf00000000	                              mov edi, 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000521	      0xe88afdffff	                call sym.xdl_recs_copy_0	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000526	          0x4101c4	                           add r12d, eax	       211	xmerge.c	FUNCTION_9	CALL_5
0x4000529	          0x4963fc	                        movsxd rdi, r12d	        90	string3.h	FUNCTION_21	CALL_6
0x400052c	          0x4c01ff	                            add rdi, r15	        90	string3.h	FUNCTION_21	CALL_6
0x400052f	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	        90	string3.h	FUNCTION_21	CALL_6
0x4000534	      0xbe3c000000	                           mov esi, 0x3c	        90	string3.h	FUNCTION_21	CALL_6
0x4000539	      0xe800000000	                          call 0x400053e	        90	string3.h	FUNCTION_21	CALL_6
0x400053e	      0x4403642438	            add r12d, dword [rsp + 0x38]	       218	xmerge.c	FUNCTION_9	ELSE_1
0x4000543	        0x4883c410	                           add rsp, 0x10	       219	xmerge.c	FUNCTION_9	ELSE_1	IF_3
0x4000547	            0x85ed	                           test ebp, ebp	       219	xmerge.c	FUNCTION_9	ELSE_1	IF_3
0x4000549	            0x7420	                            je 0x400056b	       219	xmerge.c	FUNCTION_9	ELSE_1	IF_3
0x400054b	          0x4963c4	                        movsxd rax, r12d	       220	xmerge.c	FUNCTION_9	ELSE_1	IF_3
0x400054e	      0x41c6040720	              mov byte [r15 + rax], 0x20	       220	xmerge.c	FUNCTION_9	ELSE_1	IF_3
0x4000553	      0x498d7c0701	                lea rdi, [r15 + rax + 1]	        53	string3.h	FUNCTION_18	CALL_3
0x4000558	          0x8d55ff	                      lea edx, [rbp - 1]	        53	string3.h	FUNCTION_18	CALL_3
0x400055b	          0x4863d2	                         movsxd rdx, edx	        53	string3.h	FUNCTION_18	CALL_3
0x400055e	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_18	CALL_3
0x4000563	      0xe800000000	                          call 0x4000568	        53	string3.h	FUNCTION_18	CALL_3
0x4000568	          0x4101ec	                           add r12d, ebp	       222	xmerge.c	FUNCTION_9	ELSE_1	IF_3
0x400056b	          0x4585f6	                         test r14d, r14d	       224	xmerge.c	FUNCTION_9	ELSE_1	IF_4
0x400056e	            0x740d	                            je 0x400057d	       224	xmerge.c	FUNCTION_9	ELSE_1	IF_4
0x4000570	          0x4963c4	                        movsxd rax, r12d	       225	xmerge.c	FUNCTION_9	ELSE_1	IF_4
0x4000573	      0x41c604070d	               mov byte [r15 + rax], 0xd	       225	xmerge.c	FUNCTION_9	ELSE_1	IF_4
0x4000578	      0x458d642401	                     lea r12d, [r12 + 1]	       225	xmerge.c	FUNCTION_9	ELSE_1	IF_4
0x400057d	      0x418d6c2401	                      lea ebp, [r12 + 1]	       226	xmerge.c	FUNCTION_9	ELSE_1
0x4000582	          0x4d63e4	                        movsxd r12, r12d	       226	xmerge.c	FUNCTION_9	ELSE_1
0x4000585	      0x43c604270a	               mov byte [r15 + r12], 0xa	       226	xmerge.c	FUNCTION_9	ELSE_1
0x400058a	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x400058e	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000592	        0x4883ec08	                              sub rsp, 8	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000596	          0x4863c5	                         movsxd rax, ebp	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000599	          0x4c01f8	                            add rax, r15	       144	xmerge.c	FUNCTION_5	CALL_1
0x400059c	              0x50	                                push rax	       144	xmerge.c	FUNCTION_5	CALL_1
0x400059d	    0x41b901000000	                              mov r9d, 1	       144	xmerge.c	FUNCTION_5	CALL_1
0x40005a3	          0x4589f0	                           mov r8d, r14d	       144	xmerge.c	FUNCTION_5	CALL_1
0x40005a6	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x40005ab	      0xbf00000000	                              mov edi, 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x40005b0	      0xe8fbfcffff	                call sym.xdl_recs_copy_0	       144	xmerge.c	FUNCTION_5	CALL_1
0x40005b5	             0x1c5	                            add ebp, eax	       230	xmerge.c	FUNCTION_9	CALL_8
0x40005b7	        0x4883c410	                           add rsp, 0x10	       233	xmerge.c	FUNCTION_9	IF_5
0x40005bb	    0x83bc24a00000	               cmp dword [rsp + 0xa0], 1	       233	xmerge.c	FUNCTION_9	IF_5
0x40005c3	     0xf85f6000000	                           jne 0x40006bf	       233	xmerge.c	FUNCTION_9	IF_5
0x40005c9	            0xeb0f	                           jmp 0x40005da	       233	xmerge.c	FUNCTION_9	IF_5
0x40005cb	      0x44036c2448	            add r13d, dword [rsp + 0x48]	       236	xmerge.c	FUNCTION_9	IF_5	IF_6
0x40005d0	          0x4101ed	                           add r13d, ebp	       236	xmerge.c	FUNCTION_9	IF_5	IF_6
0x40005d3	      0xb800000000	                              mov eax, 0	       249	xmerge.c	FUNCTION_9	IF_5	CALL_11
0x40005d8	            0xeb6d	                           jmp 0x4000647	       249	xmerge.c	FUNCTION_9	IF_5	CALL_11
0x40005da	          0x4863fd	                         movsxd rdi, ebp	        90	string3.h	FUNCTION_21	CALL_6
0x40005dd	          0x4c01ff	                            add rdi, r15	        90	string3.h	FUNCTION_21	CALL_6
0x40005e0	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	        90	string3.h	FUNCTION_21	CALL_6
0x40005e5	      0xbe7c000000	                           mov esi, 0x7c	        90	string3.h	FUNCTION_21	CALL_6
0x40005ea	      0xe800000000	                          call 0x40005ef	        90	string3.h	FUNCTION_21	CALL_6
0x40005ef	        0x8b442428	            mov eax, dword [rsp + 0x28] 	       239	xmerge.c	FUNCTION_9	IF_5	ELSE_2
0x40005f3	        0x448d2428	                   lea r12d, [rax + rbp]	       239	xmerge.c	FUNCTION_9	IF_5	ELSE_2
0x40005f7	      0x837c244800	               cmp dword [rsp + 0x48], 0	       240	xmerge.c	FUNCTION_9	IF_5	ELSE_2	IF_7
0x40005fc	            0x7424	                            je 0x4000622	       240	xmerge.c	FUNCTION_9	IF_5	ELSE_2	IF_7
0x40005fe	          0x4963c4	                        movsxd rax, r12d	       241	xmerge.c	FUNCTION_9	IF_5	ELSE_2	IF_7
0x4000601	      0x41c6040720	              mov byte [r15 + rax], 0x20	       241	xmerge.c	FUNCTION_9	IF_5	ELSE_2	IF_7
0x4000606	      0x498d7c0701	                lea rdi, [r15 + rax + 1]	        53	string3.h	FUNCTION_18	CALL_3
0x400060b	        0x8b6c2448	            mov ebp, dword [rsp + 0x48] 	        53	string3.h	FUNCTION_18	CALL_3
0x400060f	          0x8d55ff	                      lea edx, [rbp - 1]	        53	string3.h	FUNCTION_18	CALL_3
0x4000612	          0x4863d2	                         movsxd rdx, edx	        53	string3.h	FUNCTION_18	CALL_3
0x4000615	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	        53	string3.h	FUNCTION_18	CALL_3
0x400061a	      0xe800000000	                          call 0x400061f	        53	string3.h	FUNCTION_18	CALL_3
0x400061f	          0x4101ec	                           add r12d, ebp	       243	xmerge.c	FUNCTION_9	IF_5	ELSE_2	IF_7
0x4000622	          0x4585f6	                         test r14d, r14d	       245	xmerge.c	FUNCTION_9	IF_5	ELSE_2	IF_8
0x4000625	            0x740d	                            je 0x4000634	       245	xmerge.c	FUNCTION_9	IF_5	ELSE_2	IF_8
0x4000627	          0x4963c4	                        movsxd rax, r12d	       246	xmerge.c	FUNCTION_9	IF_5	ELSE_2	IF_8
0x400062a	      0x41c604070d	               mov byte [r15 + rax], 0xd	       246	xmerge.c	FUNCTION_9	IF_5	ELSE_2	IF_8
0x400062f	      0x458d642401	                     lea r12d, [r12 + 1]	       246	xmerge.c	FUNCTION_9	IF_5	ELSE_2	IF_8
0x4000634	      0x458d6c2401	                     lea r13d, [r12 + 1]	       247	xmerge.c	FUNCTION_9	IF_5	ELSE_2
0x4000639	          0x4963ec	                        movsxd rbp, r12d	       247	xmerge.c	FUNCTION_9	IF_5	ELSE_2
0x400063c	      0x41c6042f0a	               mov byte [r15 + rbp], 0xa	       247	xmerge.c	FUNCTION_9	IF_5	ELSE_2
0x4000641	          0x4963c5	                        movsxd rax, r13d	       249	xmerge.c	FUNCTION_9	IF_5	CALL_11
0x4000644	          0x4c01f8	                            add rax, r15	       249	xmerge.c	FUNCTION_9	IF_5	CALL_11
0x4000647	        0x488b4b38	            mov rcx, qword [rbx + 0x38] 	       149	xmerge.c	FUNCTION_6	CALL_1
0x400064b	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	       149	xmerge.c	FUNCTION_6	CALL_1
0x400064f	        0x4883ec08	                              sub rsp, 8	       149	xmerge.c	FUNCTION_6	CALL_1
0x4000653	              0x50	                                push rax	       149	xmerge.c	FUNCTION_6	CALL_1
0x4000654	    0x41b901000000	                              mov r9d, 1	       149	xmerge.c	FUNCTION_6	CALL_1
0x400065a	          0x4589f0	                           mov r8d, r14d	       149	xmerge.c	FUNCTION_6	CALL_1
0x400065d	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       149	xmerge.c	FUNCTION_6	CALL_1
0x4000662	      0xbf01000000	                              mov edi, 1	       149	xmerge.c	FUNCTION_6	CALL_1
0x4000667	      0xe844fcffff	                call sym.xdl_recs_copy_0	       149	xmerge.c	FUNCTION_6	CALL_1
0x400066c	        0x428d2c28	                    lea ebp, [rax + r13]	       249	xmerge.c	FUNCTION_9	IF_5	CALL_11
0x4000670	        0x4883c410	                           add rsp, 0x10	       253	xmerge.c	FUNCTION_9	IF_9
0x4000674	          0x4d85ff	                           test r15, r15	       253	xmerge.c	FUNCTION_9	IF_9
0x4000677	            0x7546	                           jne 0x40006bf	       253	xmerge.c	FUNCTION_9	IF_9
0x4000679	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	       254	xmerge.c	FUNCTION_9	IF_9
0x400067d	        0x458d2c06	                   lea r13d, [r14 + rax]	       254	xmerge.c	FUNCTION_9	IF_9
0x4000681	          0x4401ed	                           add ebp, r13d	       254	xmerge.c	FUNCTION_9	IF_9
0x4000684	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000688	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x400068c	        0x4883ec08	                              sub rsp, 8	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000690	            0x6a00	                                  push 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000692	    0x41b901000000	                              mov r9d, 1	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000698	          0x4589f0	                           mov r8d, r14d	       144	xmerge.c	FUNCTION_5	CALL_1
0x400069b	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x40006a0	      0xbf00000000	                              mov edi, 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x40006a5	      0xe806fcffff	                call sym.xdl_recs_copy_0	       144	xmerge.c	FUNCTION_5	CALL_1
0x40006aa	             0x1c5	                            add ebp, eax	       267	xmerge.c	FUNCTION_9	IF_11
0x40006ac	      0x44036c243c	            add r13d, dword [rsp + 0x3c]	       267	xmerge.c	FUNCTION_9	IF_11
0x40006b1	      0x468d642d00	                   lea r12d, [rbp + r13]	       267	xmerge.c	FUNCTION_9	IF_11
0x40006b6	        0x4883c410	                           add rsp, 0x10	       267	xmerge.c	FUNCTION_9	IF_11
0x40006ba	      0xe99b010000	                           jmp 0x400085a	       267	xmerge.c	FUNCTION_9	IF_11
0x40006bf	          0x4863fd	                         movsxd rdi, ebp	        90	string3.h	FUNCTION_21	CALL_6
0x40006c2	          0x4c01ff	                            add rdi, r15	        90	string3.h	FUNCTION_21	CALL_6
0x40006c5	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	        90	string3.h	FUNCTION_21	CALL_6
0x40006ca	      0xbe3d000000	                           mov esi, 0x3d	        90	string3.h	FUNCTION_21	CALL_6
0x40006cf	      0xe800000000	                          call 0x40006d4	        90	string3.h	FUNCTION_21	CALL_6
0x40006d4	         0x36c2428	             add ebp, dword [rsp + 0x28]	       257	xmerge.c	FUNCTION_9	ELSE_3
0x40006d8	          0x4585f6	                         test r14d, r14d	       258	xmerge.c	FUNCTION_9	ELSE_3	IF_10
0x40006db	            0x740b	                            je 0x40006e8	       258	xmerge.c	FUNCTION_9	ELSE_3	IF_10
0x40006dd	          0x4863c5	                         movsxd rax, ebp	       259	xmerge.c	FUNCTION_9	ELSE_3	IF_10
0x40006e0	      0x41c604070d	               mov byte [r15 + rax], 0xd	       259	xmerge.c	FUNCTION_9	ELSE_3	IF_10
0x40006e5	          0x8d6d01	                      lea ebp, [rbp + 1]	       259	xmerge.c	FUNCTION_9	ELSE_3	IF_10
0x40006e8	        0x448d6d01	                     lea r13d, [rbp + 1]	       260	xmerge.c	FUNCTION_9	ELSE_3
0x40006ec	          0x4863ed	                         movsxd rbp, ebp	       260	xmerge.c	FUNCTION_9	ELSE_3
0x40006ef	      0x41c6042f0a	               mov byte [r15 + rbp], 0xa	       260	xmerge.c	FUNCTION_9	ELSE_3
0x40006f4	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x40006f8	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x40006fc	        0x4883ec08	                              sub rsp, 8	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000700	          0x4963c5	                        movsxd rax, r13d	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000703	          0x4c01f8	                            add rax, r15	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000706	              0x50	                                push rax	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000707	    0x41b901000000	                              mov r9d, 1	       144	xmerge.c	FUNCTION_5	CALL_1
0x400070d	          0x4589f0	                           mov r8d, r14d	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000710	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000715	      0xbf00000000	                              mov edi, 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x400071a	      0xe891fbffff	                call sym.xdl_recs_copy_0	       144	xmerge.c	FUNCTION_5	CALL_1
0x400071f	      0x418d6c0500	                    lea ebp, [r13 + rax]	       264	xmerge.c	FUNCTION_9	CALL_13
0x4000724	          0x4863fd	                         movsxd rdi, ebp	        90	string3.h	FUNCTION_21	CALL_6
0x4000727	          0x4c01ff	                            add rdi, r15	        90	string3.h	FUNCTION_21	CALL_6
0x400072a	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	        90	string3.h	FUNCTION_21	CALL_6
0x400072f	      0xbe3e000000	                           mov esi, 0x3e	        90	string3.h	FUNCTION_21	CALL_6
0x4000734	      0xe800000000	                          call 0x4000739	        90	string3.h	FUNCTION_21	CALL_6
0x4000739	         0x36c2438	             add ebp, dword [rsp + 0x38]	       270	xmerge.c	FUNCTION_9	ELSE_4
0x400073d	        0x4883c410	                           add rsp, 0x10	       271	xmerge.c	FUNCTION_9	ELSE_4	IF_12
0x4000741	      0x837c242c00	               cmp dword [rsp + 0x2c], 0	       271	xmerge.c	FUNCTION_9	ELSE_4	IF_12
0x4000746	            0x7427	                            je 0x400076f	       271	xmerge.c	FUNCTION_9	ELSE_4	IF_12
0x4000748	          0x4863c5	                         movsxd rax, ebp	       272	xmerge.c	FUNCTION_9	ELSE_4	IF_12
0x400074b	      0x41c6040720	              mov byte [r15 + rax], 0x20	       272	xmerge.c	FUNCTION_9	ELSE_4	IF_12
0x4000750	      0x498d7c0701	                lea rdi, [r15 + rax + 1]	        53	string3.h	FUNCTION_18	CALL_3
0x4000755	      0x448b64242c	           mov r12d, dword [rsp + 0x2c] 	        53	string3.h	FUNCTION_18	CALL_3
0x400075a	      0x418d5424ff	                      lea edx, [r12 - 1]	        53	string3.h	FUNCTION_18	CALL_3
0x400075f	          0x4863d2	                         movsxd rdx, edx	        53	string3.h	FUNCTION_18	CALL_3
0x4000762	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_18	CALL_3
0x4000767	      0xe800000000	                          call 0x400076c	        53	string3.h	FUNCTION_18	CALL_3
0x400076c	          0x4401e5	                           add ebp, r12d	       274	xmerge.c	FUNCTION_9	ELSE_4	IF_12
0x400076f	          0x4585f6	                         test r14d, r14d	       276	xmerge.c	FUNCTION_9	ELSE_4	IF_13
0x4000772	            0x740b	                            je 0x400077f	       276	xmerge.c	FUNCTION_9	ELSE_4	IF_13
0x4000774	          0x4863c5	                         movsxd rax, ebp	       277	xmerge.c	FUNCTION_9	ELSE_4	IF_13
0x4000777	      0x41c604070d	               mov byte [r15 + rax], 0xd	       277	xmerge.c	FUNCTION_9	ELSE_4	IF_13
0x400077c	          0x8d6d01	                      lea ebp, [rbp + 1]	       277	xmerge.c	FUNCTION_9	ELSE_4	IF_13
0x400077f	        0x448d6501	                     lea r12d, [rbp + 1]	       278	xmerge.c	FUNCTION_9	ELSE_4
0x4000783	          0x4863ed	                         movsxd rbp, ebp	       278	xmerge.c	FUNCTION_9	ELSE_4
0x4000786	      0x41c6042f0a	               mov byte [r15 + rbp], 0xa	       278	xmerge.c	FUNCTION_9	ELSE_4
0x400078b	      0xe9ca000000	                           jmp 0x400085a	       278	xmerge.c	FUNCTION_9	ELSE_4
0x4000790	            0xa803	                              test al, 3	       301	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3
0x4000792	     0xf84ca000000	                            je 0x4000862	       301	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3
0x4000798	          0x4d85ff	                           test r15, r15	       303	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	CALL_2
0x400079b	     0xf84bd010000	                            je 0x400095e	       303	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	CALL_2
0x40007a1	          0x8b4b10	            mov ecx, dword [rbx + 0x10] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x40007a4	          0x4429e9	                           sub ecx, r13d	       144	xmerge.c	FUNCTION_5	CALL_1
0x40007a7	        0x4883ec08	                              sub rsp, 8	       144	xmerge.c	FUNCTION_5	CALL_1
0x40007ab	          0x4963c4	                        movsxd rax, r12d	       144	xmerge.c	FUNCTION_5	CALL_1
0x40007ae	          0x4c01f8	                            add rax, r15	       144	xmerge.c	FUNCTION_5	CALL_1
0x40007b1	              0x50	                                push rax	       144	xmerge.c	FUNCTION_5	CALL_1
0x40007b2	    0x41b900000000	                              mov r9d, 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x40007b8	    0x41b800000000	                              mov r8d, 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x40007be	          0x4489ea	                           mov edx, r13d	       144	xmerge.c	FUNCTION_5	CALL_1
0x40007c1	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x40007c6	      0xbf00000000	                              mov edi, 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x40007cb	      0xe8e0faffff	                call sym.xdl_recs_copy_0	       144	xmerge.c	FUNCTION_5	CALL_1
0x40007d0	          0x4101c4	                           add r12d, eax	       303	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	CALL_2
0x40007d3	          0x8b6b08	                mov ebp, dword [rbx + 8]	       306	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_4
0x40007d6	        0x4883c410	                           add rsp, 0x10	       306	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_4
0x40007da	        0x40f6c501	                             test bpl, 1	       306	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_4
0x40007de	     0xf853b010000	                           jne 0x400091f	       306	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_4
0x40007e4	      0xe9b1010000	                           jmp 0x400099a	       306	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_4
0x40007e9	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x40007ed	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x40007f1	        0x4883ec08	                              sub rsp, 8	       144	xmerge.c	FUNCTION_5	CALL_1
0x40007f5	              0x56	                                push rsi	       144	xmerge.c	FUNCTION_5	CALL_1
0x40007f6	          0x4189e9	                            mov r9d, ebp	       144	xmerge.c	FUNCTION_5	CALL_1
0x40007f9	        0x4183e102	                              and r9d, 2	       144	xmerge.c	FUNCTION_5	CALL_1
0x40007fd	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000802	      0xbf00000000	                              mov edi, 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000807	      0xe8a4faffff	                call sym.xdl_recs_copy_0	       144	xmerge.c	FUNCTION_5	CALL_1
0x400080c	          0x4101c4	                           add r12d, eax	       309	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_4	CALL_4
0x400080f	        0x4883c410	                           add rsp, 0x10	       313	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_5
0x4000813	        0xf6430802	                  test byte [rbx + 8], 2	       313	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_5
0x4000817	            0x7441	                            je 0x400085a	       313	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_5
0x4000819	          0x4d85ff	                           test r15, r15	       314	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_5	CALL_5
0x400081c	            0x7408	                            je 0x4000826	       314	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_5	CALL_5
0x400081e	          0x4963c4	                        movsxd rax, r12d	       314	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_5	CALL_5
0x4000821	          0x4c01f8	                            add rax, r15	       314	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_5	CALL_5
0x4000824	            0xeb05	                           jmp 0x400082b	       314	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_5	CALL_5
0x4000826	      0xb800000000	                              mov eax, 0	       314	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_5	CALL_5
0x400082b	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x400082f	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000833	        0x4883ec08	                              sub rsp, 8	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000837	              0x50	                                push rax	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000838	    0x41b900000000	                              mov r9d, 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x400083e	    0x41b800000000	                              mov r8d, 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000844	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000849	      0xbf00000000	                              mov edi, 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x400084e	      0xe85dfaffff	                call sym.xdl_recs_copy_0	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000853	          0x4101c4	                           add r12d, eax	       314	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_5	CALL_5
0x4000856	        0x4883c410	                           add rsp, 0x10	       314	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_5	CALL_5
0x400085a	        0x4c8b6b20	            mov r13, qword [rbx + 0x20] 	       318	xmerge.c	FUNCTION_10	FOR_1
0x400085e	        0x44036b10	            add r13d, dword [rbx + 0x10]	       318	xmerge.c	FUNCTION_10	FOR_1
0x4000862	          0x488b1b	                    mov rbx, qword [rbx]	       292	xmerge.c	FUNCTION_10	FOR_1
0x4000865	          0x4885db	                           test rbx, rbx	       292	xmerge.c	FUNCTION_10	FOR_1
0x4000868	     0xf85d4fbffff	                           jne 0x4000442	       292	xmerge.c	FUNCTION_10	FOR_1
0x400086e	      0x4c8b742408	                mov r14, qword [rsp + 8]	       292	xmerge.c	FUNCTION_10	FOR_1
0x4000873	            0xeb0c	                           jmp 0x4000881	       292	xmerge.c	FUNCTION_10	FOR_1
0x4000875	    0x41bd00000000	                             mov r13d, 0	       292	xmerge.c	FUNCTION_10	FOR_1
0x400087b	    0x41bc00000000	                             mov r12d, 0	       292	xmerge.c	FUNCTION_10	FOR_1
0x4000881	          0x4d85ff	                           test r15, r15	       320	xmerge.c	FUNCTION_10	CALL_6
0x4000884	            0x740b	                            je 0x4000891	       320	xmerge.c	FUNCTION_10	CALL_6
0x4000886	          0x4963c4	                        movsxd rax, r12d	       320	xmerge.c	FUNCTION_10	CALL_6
0x4000889	          0x4c01f8	                            add rax, r15	       320	xmerge.c	FUNCTION_10	CALL_6
0x400088c	      0xe92c010000	                           jmp 0x40009bd	       320	xmerge.c	FUNCTION_10	CALL_6
0x4000891	      0xb800000000	                              mov eax, 0	       320	xmerge.c	FUNCTION_10	CALL_6
0x4000896	      0xe922010000	                           jmp 0x40009bd	       320	xmerge.c	FUNCTION_10	CALL_6
0x400089b	          0x8b4308	                mov eax, dword [rbx + 8]	       296	xmerge.c	FUNCTION_10	FOR_1	IF_2
0x400089e	      0xe9edfeffff	                           jmp 0x4000790	       296	xmerge.c	FUNCTION_10	FOR_1	IF_2
0x40008a3	          0x8b4b10	            mov ecx, dword [rbx + 0x10] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x40008a6	          0x4429e9	                           sub ecx, r13d	       144	xmerge.c	FUNCTION_5	CALL_1
0x40008a9	        0x4883ec08	                              sub rsp, 8	       144	xmerge.c	FUNCTION_5	CALL_1
0x40008ad	            0x6a00	                                  push 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x40008af	    0x41b900000000	                              mov r9d, 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x40008b5	    0x41b800000000	                              mov r8d, 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x40008bb	          0x4489ea	                           mov edx, r13d	       144	xmerge.c	FUNCTION_5	CALL_1
0x40008be	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x40008c3	      0xbf00000000	                              mov edi, 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x40008c8	      0xe8e3f9ffff	                call sym.xdl_recs_copy_0	       144	xmerge.c	FUNCTION_5	CALL_1
0x40008cd	          0x4101c4	                           add r12d, eax	       211	xmerge.c	FUNCTION_9	CALL_5
0x40008d0	        0x8b44245c	            mov eax, dword [rsp + 0x5c] 	       215	xmerge.c	FUNCTION_9	IF_2
0x40008d4	        0x458d2c06	                   lea r13d, [r14 + rax]	       215	xmerge.c	FUNCTION_9	IF_2
0x40008d8	          0x4401ed	                           add ebp, r13d	       215	xmerge.c	FUNCTION_9	IF_2
0x40008db	          0x4401e5	                           add ebp, r12d	       215	xmerge.c	FUNCTION_9	IF_2
0x40008de	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x40008e2	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x40008e6	    0x48c704240000	                      mov qword [rsp], 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x40008ee	    0x41b901000000	                              mov r9d, 1	       144	xmerge.c	FUNCTION_5	CALL_1
0x40008f4	          0x4589f0	                           mov r8d, r14d	       144	xmerge.c	FUNCTION_5	CALL_1
0x40008f7	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x40008fc	      0xbf00000000	                              mov edi, 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000901	      0xe8aaf9ffff	                call sym.xdl_recs_copy_0	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000906	             0x1c5	                            add ebp, eax	       230	xmerge.c	FUNCTION_9	CALL_8
0x4000908	        0x4883c410	                           add rsp, 0x10	       233	xmerge.c	FUNCTION_9	IF_5
0x400090c	    0x83bc24a00000	               cmp dword [rsp + 0xa0], 1	       233	xmerge.c	FUNCTION_9	IF_5
0x4000914	     0xf84b1fcffff	                            je 0x40005cb	       233	xmerge.c	FUNCTION_9	IF_5
0x400091a	      0xe95afdffff	                           jmp 0x4000679	       233	xmerge.c	FUNCTION_9	IF_5
0x400091f	          0x4889da	                            mov rdx, rbx	       307	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_4	CALL_3
0x4000922	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       307	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_4	CALL_3
0x4000927	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       307	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_4	CALL_3
0x400092c	      0xe8c0f7ffff	                   call sym.is_cr_needed	       307	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_4	CALL_3
0x4000931	          0x4189c0	                            mov r8d, eax	       307	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_4	CALL_3
0x4000934	          0x4963f4	                        movsxd rsi, r12d	       309	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_4	CALL_4
0x4000937	          0x4c01fe	                            add rsi, r15	       309	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_4	CALL_4
0x400093a	      0xe9aafeffff	                           jmp 0x40007e9	       309	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_4	CALL_4
0x400093f	          0x4889da	                            mov rdx, rbx	       307	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_4	CALL_3
0x4000942	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       307	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_4	CALL_3
0x4000947	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       307	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_4	CALL_3
0x400094c	      0xe8a0f7ffff	                   call sym.is_cr_needed	       307	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_4	CALL_3
0x4000951	          0x4189c0	                            mov r8d, eax	       307	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_4	CALL_3
0x4000954	      0xbe00000000	                              mov esi, 0	       309	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_4	CALL_4
0x4000959	      0xe98bfeffff	                           jmp 0x40007e9	       309	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_4	CALL_4
0x400095e	          0x8b4b10	            mov ecx, dword [rbx + 0x10] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000961	          0x4429e9	                           sub ecx, r13d	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000964	        0x4883ec08	                              sub rsp, 8	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000968	            0x6a00	                                  push 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x400096a	    0x41b900000000	                              mov r9d, 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000970	    0x41b800000000	                              mov r8d, 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000976	          0x4489ea	                           mov edx, r13d	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000979	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x400097e	      0xbf00000000	                              mov edi, 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000983	      0xe828f9ffff	                call sym.xdl_recs_copy_0	       144	xmerge.c	FUNCTION_5	CALL_1
0x4000988	          0x4101c4	                           add r12d, eax	       303	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	CALL_2
0x400098b	          0x8b6b08	                mov ebp, dword [rbx + 8]	       306	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_4
0x400098e	        0x4883c410	                           add rsp, 0x10	       306	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_4
0x4000992	        0x40f6c501	                             test bpl, 1	       306	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_4
0x4000996	            0x7411	                            je 0x40009a9	       306	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_4
0x4000998	            0xeba5	                           jmp 0x400093f	       306	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_4
0x400099a	        0xf6430802	                  test byte [rbx + 8], 2	       313	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_5
0x400099e	     0xf857afeffff	                           jne 0x400081e	       313	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_5
0x40009a4	      0xe9b1feffff	                           jmp 0x400085a	       313	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_5
0x40009a9	      0xb800000000	                              mov eax, 0	       314	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_5	CALL_5
0x40009ae	        0xf6430802	                  test byte [rbx + 8], 2	       313	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_5
0x40009b2	     0xf8573feffff	                           jne 0x400082b	       313	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_5
0x40009b8	      0xe99dfeffff	                           jmp 0x400085a	       313	xmerge.c	FUNCTION_10	FOR_1	ELSE_1	IF_3	IF_5
0x40009bd	    0x418b8ec00000	            mov ecx, dword [r14 + 0xc0] 	       144	xmerge.c	FUNCTION_5	CALL_1
0x40009c4	          0x4429e9	                           sub ecx, r13d	       144	xmerge.c	FUNCTION_5	CALL_1
0x40009c7	        0x4883ec08	                              sub rsp, 8	       144	xmerge.c	FUNCTION_5	CALL_1
0x40009cb	              0x50	                                push rax	       144	xmerge.c	FUNCTION_5	CALL_1
0x40009cc	    0x41b900000000	                              mov r9d, 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x40009d2	    0x41b800000000	                              mov r8d, 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x40009d8	          0x4489ea	                           mov edx, r13d	       144	xmerge.c	FUNCTION_5	CALL_1
0x40009db	          0x4c89f6	                            mov rsi, r14	       144	xmerge.c	FUNCTION_5	CALL_1
0x40009de	      0xbf00000000	                              mov edi, 0	       144	xmerge.c	FUNCTION_5	CALL_1
0x40009e3	      0xe8c8f8ffff	                call sym.xdl_recs_copy_0	       144	xmerge.c	FUNCTION_5	CALL_1
0x40009e8	          0x4401e0	                           add eax, r12d	       322	xmerge.c	FUNCTION_10
0x40009eb	        0x4883c468	                           add rsp, 0x68	       323	xmerge.c	FUNCTION_10
0x40009ef	              0x5b	                                 pop rbx	       323	xmerge.c	FUNCTION_10
0x40009f0	              0x5d	                                 pop rbp	       323	xmerge.c	FUNCTION_10
0x40009f1	            0x415c	                                 pop r12	       323	xmerge.c	FUNCTION_10
0x40009f3	            0x415d	                                 pop r13	       323	xmerge.c	FUNCTION_10
0x40009f5	            0x415e	                                 pop r14	       323	xmerge.c	FUNCTION_10
0x40009f7	            0x415f	                                 pop r15	       323	xmerge.c	FUNCTION_10
0x40009f9	              0xc3	                                     ret	       323	xmerge.c	FUNCTION_10
xdl_merge	IF,6:DO,0:FOR,0:functions,0:WHILE,0:ELSE,2:CALL,22:SWITCH,0	662
0x40009fa	            0x4157	                                push r15	       635	xmerge.c	FUNCTION_17
0x40009fc	            0x4156	                                push r14	       635	xmerge.c	FUNCTION_17
0x40009fe	            0x4155	                                push r13	       635	xmerge.c	FUNCTION_17
0x4000a00	            0x4154	                                push r12	       635	xmerge.c	FUNCTION_17
0x4000a02	              0x55	                                push rbp	       635	xmerge.c	FUNCTION_17
0x4000a03	              0x53	                                push rbx	       635	xmerge.c	FUNCTION_17
0x4000a04	    0x4881ece80300	                          sub rsp, 0x3e8	       635	xmerge.c	FUNCTION_17
0x4000a0b	          0x4889fb	                            mov rbx, rdi	       635	xmerge.c	FUNCTION_17
0x4000a0e	          0x4989f4	                            mov r12, rsi	       635	xmerge.c	FUNCTION_17
0x4000a11	          0x4889d5	                            mov rbp, rdx	       635	xmerge.c	FUNCTION_17
0x4000a14	          0x4989ce	                            mov r14, rcx	       635	xmerge.c	FUNCTION_17
0x4000a17	        0x4c890424	                     mov qword [rsp], r8	       635	xmerge.c	FUNCTION_17
0x4000a1b	    0x64488b342528	                mov rsi, qword fs:[0x28]	       635	xmerge.c	FUNCTION_17
0x4000a24	    0x4889b424d803	            mov qword [rsp + 0x3d8], rsi	       635	xmerge.c	FUNCTION_17
0x4000a2c	            0x31f6	                            xor esi, esi	       635	xmerge.c	FUNCTION_17
0x4000a2e	      0x48894c2408	                mov qword [rsp + 8], rcx	       639	xmerge.c	FUNCTION_17
0x4000a33	    0x49c700000000	                       mov qword [r8], 0	       641	xmerge.c	FUNCTION_17
0x4000a3a	    0x49c740080000	                   mov qword [r8 + 8], 0	       642	xmerge.c	FUNCTION_17
0x4000a42	    0x488d8c24a000	                   lea rcx, [rsp + 0xa0]	       644	xmerge.c	FUNCTION_17	IF_1	CALL_1
0x4000a4a	          0x4c89f2	                            mov rdx, r14	       644	xmerge.c	FUNCTION_17	IF_1	CALL_1
0x4000a4d	          0x4c89e6	                            mov rsi, r12	       644	xmerge.c	FUNCTION_17	IF_1	CALL_1
0x4000a50	      0xe800000000	                          call 0x4000a55	       644	xmerge.c	FUNCTION_17	IF_1	CALL_1
0x4000a55	            0x85c0	                           test eax, eax	       644	xmerge.c	FUNCTION_17	IF_1	CALL_1
0x4000a57	     0xf88c3090000	                            js 0x4001420	       644	xmerge.c	FUNCTION_17	IF_1	CALL_1
0x4000a5d	    0x488d8c24b001	                  lea rcx, [rsp + 0x1b0]	       647	xmerge.c	FUNCTION_17	IF_2	CALL_2
0x4000a65	          0x4c89f2	                            mov rdx, r14	       647	xmerge.c	FUNCTION_17	IF_2	CALL_2
0x4000a68	          0x4889ee	                            mov rsi, rbp	       647	xmerge.c	FUNCTION_17	IF_2	CALL_2
0x4000a6b	          0x4889df	                            mov rdi, rbx	       647	xmerge.c	FUNCTION_17	IF_2	CALL_2
0x4000a6e	      0xe800000000	                          call 0x4000a73	       647	xmerge.c	FUNCTION_17	IF_2	CALL_2
0x4000a73	            0x85c0	                           test eax, eax	       647	xmerge.c	FUNCTION_17	IF_2	CALL_2
0x4000a75	            0x7917	                           jns 0x4000a8e	       647	xmerge.c	FUNCTION_17	IF_2	CALL_2
0x4000a77	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	       648	xmerge.c	FUNCTION_17	IF_2	CALL_3
0x4000a7f	      0xe800000000	                          call 0x4000a84	       648	xmerge.c	FUNCTION_17	IF_2	CALL_3
0x4000a84	      0xb8ffffffff	                     mov eax, 0xffffffff	       649	xmerge.c	FUNCTION_17	IF_2
0x4000a89	      0xe997090000	                           jmp 0x4001425	       649	xmerge.c	FUNCTION_17	IF_2
0x4000a8e	    0x488d8424a000	                   lea rax, [rsp + 0xa0]	       651	xmerge.c	FUNCTION_17	IF_3	CALL_4
0x4000a96	    0x488db4242801	                  lea rsi, [rsp + 0x128]	       651	xmerge.c	FUNCTION_17	IF_3	CALL_4
0x4000a9e	          0x498b16	                    mov rdx, qword [r14]	       651	xmerge.c	FUNCTION_17	IF_3	CALL_4
0x4000aa1	          0x4889c7	                            mov rdi, rax	       651	xmerge.c	FUNCTION_17	IF_3	CALL_4
0x4000aa4	      0xe800000000	                          call 0x4000aa9	       651	xmerge.c	FUNCTION_17	IF_3	CALL_4
0x4000aa9	            0x85c0	                           test eax, eax	       651	xmerge.c	FUNCTION_17	IF_3	CALL_4
0x4000aab	            0x7835	                            js 0x4000ae2	       651	xmerge.c	FUNCTION_17	IF_3	CALL_4
0x4000aad	    0x488d8424a000	                   lea rax, [rsp + 0xa0]	       652	xmerge.c	FUNCTION_17	IF_3	CALL_5
0x4000ab5	    0x488dbc242801	                  lea rdi, [rsp + 0x128]	       652	xmerge.c	FUNCTION_17	IF_3	CALL_5
0x4000abd	          0x498b16	                    mov rdx, qword [r14]	       652	xmerge.c	FUNCTION_17	IF_3	CALL_5
0x4000ac0	          0x4889c6	                            mov rsi, rax	       652	xmerge.c	FUNCTION_17	IF_3	CALL_5
0x4000ac3	      0xe800000000	                          call 0x4000ac8	       652	xmerge.c	FUNCTION_17	IF_3	CALL_5
0x4000ac8	            0x85c0	                           test eax, eax	       651	xmerge.c	FUNCTION_17	IF_3	CALL_4
0x4000aca	            0x7816	                            js 0x4000ae2	       651	xmerge.c	FUNCTION_17	IF_3	CALL_4
0x4000acc	      0x488d742460	                   lea rsi, [rsp + 0x60]	       653	xmerge.c	FUNCTION_17	IF_3	CALL_6
0x4000ad1	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	       653	xmerge.c	FUNCTION_17	IF_3	CALL_6
0x4000ad9	      0xe800000000	                          call 0x4000ade	       653	xmerge.c	FUNCTION_17	IF_3	CALL_6
0x4000ade	            0x85c0	                           test eax, eax	       652	xmerge.c	FUNCTION_17	IF_3	CALL_5
0x4000ae0	            0x7917	                           jns 0x4000af9	       652	xmerge.c	FUNCTION_17	IF_3	CALL_5
0x4000ae2	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	       654	xmerge.c	FUNCTION_17	IF_3	CALL_7
0x4000aea	      0xe800000000	                          call 0x4000aef	       654	xmerge.c	FUNCTION_17	IF_3	CALL_7
0x4000aef	      0xb8ffffffff	                     mov eax, 0xffffffff	       655	xmerge.c	FUNCTION_17	IF_3
0x4000af4	      0xe92c090000	                           jmp 0x4001425	       655	xmerge.c	FUNCTION_17	IF_3
0x4000af9	    0x488d8424b001	                  lea rax, [rsp + 0x1b0]	       657	xmerge.c	FUNCTION_17	IF_4	CALL_8
0x4000b01	    0x488db4243802	                  lea rsi, [rsp + 0x238]	       657	xmerge.c	FUNCTION_17	IF_4	CALL_8
0x4000b09	          0x498b16	                    mov rdx, qword [r14]	       657	xmerge.c	FUNCTION_17	IF_4	CALL_8
0x4000b0c	          0x4889c7	                            mov rdi, rax	       657	xmerge.c	FUNCTION_17	IF_4	CALL_8
0x4000b0f	      0xe800000000	                          call 0x4000b14	       657	xmerge.c	FUNCTION_17	IF_4	CALL_8
0x4000b14	            0x85c0	                           test eax, eax	       657	xmerge.c	FUNCTION_17	IF_4	CALL_8
0x4000b16	            0x7835	                            js 0x4000b4d	       657	xmerge.c	FUNCTION_17	IF_4	CALL_8
0x4000b18	    0x488d8424b001	                  lea rax, [rsp + 0x1b0]	       658	xmerge.c	FUNCTION_17	IF_4	CALL_9
0x4000b20	    0x488dbc243802	                  lea rdi, [rsp + 0x238]	       658	xmerge.c	FUNCTION_17	IF_4	CALL_9
0x4000b28	          0x498b16	                    mov rdx, qword [r14]	       658	xmerge.c	FUNCTION_17	IF_4	CALL_9
0x4000b2b	          0x4889c6	                            mov rsi, rax	       658	xmerge.c	FUNCTION_17	IF_4	CALL_9
0x4000b2e	      0xe800000000	                          call 0x4000b33	       658	xmerge.c	FUNCTION_17	IF_4	CALL_9
0x4000b33	            0x85c0	                           test eax, eax	       657	xmerge.c	FUNCTION_17	IF_4	CALL_8
0x4000b35	            0x7816	                            js 0x4000b4d	       657	xmerge.c	FUNCTION_17	IF_4	CALL_8
0x4000b37	      0x488d742468	                   lea rsi, [rsp + 0x68]	       659	xmerge.c	FUNCTION_17	IF_4	CALL_10
0x4000b3c	    0x488dbc24b001	                  lea rdi, [rsp + 0x1b0]	       659	xmerge.c	FUNCTION_17	IF_4	CALL_10
0x4000b44	      0xe800000000	                          call 0x4000b49	       659	xmerge.c	FUNCTION_17	IF_4	CALL_10
0x4000b49	            0x85c0	                           test eax, eax	       658	xmerge.c	FUNCTION_17	IF_4	CALL_9
0x4000b4b	            0x792e	                           jns 0x4000b7b	       658	xmerge.c	FUNCTION_17	IF_4	CALL_9
0x4000b4d	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	       660	xmerge.c	FUNCTION_17	IF_4	CALL_11
0x4000b52	      0xe800000000	                          call 0x4000b57	       660	xmerge.c	FUNCTION_17	IF_4	CALL_11
0x4000b57	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	       661	xmerge.c	FUNCTION_17	IF_4	CALL_12
0x4000b5f	      0xe800000000	                          call 0x4000b64	       661	xmerge.c	FUNCTION_17	IF_4	CALL_12
0x4000b64	    0x488dbc24b001	                  lea rdi, [rsp + 0x1b0]	       662	xmerge.c	FUNCTION_17	IF_4	CALL_13
0x4000b6c	      0xe800000000	                          call 0x4000b71	       662	xmerge.c	FUNCTION_17	IF_4	CALL_13
0x4000b71	      0xb8ffffffff	                     mov eax, 0xffffffff	       663	xmerge.c	FUNCTION_17	IF_4
0x4000b76	      0xe9aa080000	                           jmp 0x4001425	       663	xmerge.c	FUNCTION_17	IF_4
0x4000b7b	      0x488b5c2460	            mov rbx, qword [rsp + 0x60] 	       666	xmerge.c	FUNCTION_17	IF_5
0x4000b80	          0x4885db	                           test rbx, rbx	       666	xmerge.c	FUNCTION_17	IF_5
0x4000b83	            0x7531	                           jne 0x4000bb6	       666	xmerge.c	FUNCTION_17	IF_5
0x4000b85	        0x488b7d08	                mov rdi, qword [rbp + 8]	       667	xmerge.c	FUNCTION_17	IF_5	CALL_14
0x4000b89	      0xe800000000	                          call 0x4000b8e	       667	xmerge.c	FUNCTION_17	IF_5	CALL_14
0x4000b8e	        0x4c8b3c24	                    mov r15, qword [rsp]	       667	xmerge.c	FUNCTION_17	IF_5	CALL_14
0x4000b92	          0x498907	                    mov qword [r15], rax	       667	xmerge.c	FUNCTION_17	IF_5	CALL_14
0x4000b95	        0x488b5d08	                mov rbx, qword [rbp + 8]	       668	xmerge.c	FUNCTION_17	IF_5	CALL_15
0x4000b99	        0x488b7500	                    mov rsi, qword [rbp]	        53	string3.h	FUNCTION_18	CALL_3
0x4000b9d	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_18	CALL_3
0x4000ba0	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_18	CALL_3
0x4000ba3	      0xe800000000	                          call 0x4000ba8	        53	string3.h	FUNCTION_18	CALL_3
0x4000ba8	        0x49895f08	                mov qword [r15 + 8], rbx	       669	xmerge.c	FUNCTION_17	IF_5
0x4000bac	      0xbb00000000	                              mov ebx, 0	       665	xmerge.c	FUNCTION_17
0x4000bb1	      0xe938080000	                           jmp 0x40013ee	       665	xmerge.c	FUNCTION_17
0x4000bb6	      0x488b6c2468	            mov rbp, qword [rsp + 0x68] 	       670	xmerge.c	FUNCTION_17	ELSE_1	IF_6
0x4000bbb	          0x4885ed	                           test rbp, rbp	       670	xmerge.c	FUNCTION_17	ELSE_1	IF_6
0x4000bbe	            0x7533	                           jne 0x4000bf3	       670	xmerge.c	FUNCTION_17	ELSE_1	IF_6
0x4000bc0	      0x498b7c2408	                mov rdi, qword [r12 + 8]	       671	xmerge.c	FUNCTION_17	ELSE_1	IF_6	CALL_16
0x4000bc5	      0xe800000000	                          call 0x4000bca	       671	xmerge.c	FUNCTION_17	ELSE_1	IF_6	CALL_16
0x4000bca	        0x4c8b3c24	                    mov r15, qword [rsp]	       671	xmerge.c	FUNCTION_17	ELSE_1	IF_6	CALL_16
0x4000bce	          0x498907	                    mov qword [r15], rax	       671	xmerge.c	FUNCTION_17	ELSE_1	IF_6	CALL_16
0x4000bd1	      0x498b5c2408	                mov rbx, qword [r12 + 8]	       672	xmerge.c	FUNCTION_17	ELSE_1	IF_6	CALL_17
0x4000bd6	        0x498b3424	                    mov rsi, qword [r12]	        53	string3.h	FUNCTION_18	CALL_3
0x4000bda	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_18	CALL_3
0x4000bdd	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_18	CALL_3
0x4000be0	      0xe800000000	                          call 0x4000be5	        53	string3.h	FUNCTION_18	CALL_3
0x4000be5	        0x49895f08	                mov qword [r15 + 8], rbx	       673	xmerge.c	FUNCTION_17	ELSE_1	IF_6
0x4000be9	      0xbb00000000	                              mov ebx, 0	       665	xmerge.c	FUNCTION_17
0x4000bee	      0xe9fb070000	                           jmp 0x40013ee	       665	xmerge.c	FUNCTION_17
0x4000bf3	        0x498b4628	            mov rax, qword [r14 + 0x28] 	       477	xmerge.c	FUNCTION_16
0x4000bf7	      0x4889442410	             mov qword [rsp + 0x10], rax	       477	xmerge.c	FUNCTION_16
0x4000bfc	        0x498b4630	            mov rax, qword [r14 + 0x30] 	       478	xmerge.c	FUNCTION_16
0x4000c00	      0x4889442418	             mov qword [rsp + 0x18], rax	       478	xmerge.c	FUNCTION_16
0x4000c05	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       479	xmerge.c	FUNCTION_16
0x4000c09	      0x4889442420	             mov qword [rsp + 0x20], rax	       479	xmerge.c	FUNCTION_16
0x4000c0e	        0x458b6e1c	           mov r13d, dword [r14 + 0x1c] 	       481	xmerge.c	FUNCTION_16
0x4000c12	        0x418b4624	            mov eax, dword [r14 + 0x24] 	       482	xmerge.c	FUNCTION_16
0x4000c16	        0x89442428	             mov dword [rsp + 0x28], eax	       482	xmerge.c	FUNCTION_16
0x4000c1a	        0x418b7620	            mov esi, dword [r14 + 0x20] 	       483	xmerge.c	FUNCTION_16
0x4000c1e	        0x8974242c	             mov dword [rsp + 0x2c], esi	       483	xmerge.c	FUNCTION_16
0x4000c22	        0x4183fd01	                             cmp r13d, 1	       490	xmerge.c	FUNCTION_16	IF_1	IF_2
0x4000c26	            0x7e11	                           jle 0x4000c39	       490	xmerge.c	FUNCTION_16	IF_1	IF_2
0x4000c28	          0x83f801	                              cmp eax, 1	       490	xmerge.c	FUNCTION_16	IF_1	IF_2
0x4000c2b	           0xf94c0	                                 sete al	       490	xmerge.c	FUNCTION_16	IF_1	IF_2
0x4000c2e	            0x84c0	                             test al, al	       491	xmerge.c	FUNCTION_16	IF_1	IF_2
0x4000c30	      0xb801000000	                              mov eax, 1	       491	xmerge.c	FUNCTION_16	IF_1	IF_2
0x4000c35	        0x440f45e8	                        cmovne r13d, eax	       491	xmerge.c	FUNCTION_16	IF_1	IF_2
0x4000c39	    0x48c744247000	               mov qword [rsp + 0x70], 0	       494	xmerge.c	FUNCTION_16
0x4000c42	          0x4589ef	                          mov r15d, r13d	       494	xmerge.c	FUNCTION_16
0x4000c45	          0x4d89f5	                            mov r13, r14	       494	xmerge.c	FUNCTION_16
0x4000c48	            0xeb05	                           jmp 0x4000c4f	       494	xmerge.c	FUNCTION_16
0x4000c4a	          0x4d85f6	                           test r14, r14	       497	xmerge.c	FUNCTION_16	WHILE_1	IF_3
0x4000c4d	            0x7505	                           jne 0x4000c54	       497	xmerge.c	FUNCTION_16	WHILE_1	IF_3
0x4000c4f	      0x4c8b742470	            mov r14, qword [rsp + 0x70] 	       498	xmerge.c	FUNCTION_16	WHILE_1	IF_3
0x4000c54	        0x488b4308	                mov rax, qword [rbx + 8]	       499	xmerge.c	FUNCTION_16	WHILE_1	IF_4
0x4000c58	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	       499	xmerge.c	FUNCTION_16	WHILE_1	IF_4
0x4000c5c	        0x488b7508	                mov rsi, qword [rbp + 8]	       499	xmerge.c	FUNCTION_16	WHILE_1	IF_4
0x4000c60	        0x488d1408	                    lea rdx, [rax + rcx]	       499	xmerge.c	FUNCTION_16	WHILE_1	IF_4
0x4000c64	          0x4839f2	                            cmp rdx, rsi	       499	xmerge.c	FUNCTION_16	WHILE_1	IF_4
0x4000c67	            0x7d4b	                           jge 0x4000cb4	       499	xmerge.c	FUNCTION_16	WHILE_1	IF_4
0x4000c69	          0x4863c9	                         movsxd rcx, ecx	       506	xmerge.c	FUNCTION_16	WHILE_1	IF_4	IF_5	CALL_1
0x4000c6c	          0x4863d0	                         movsxd rdx, eax	       506	xmerge.c	FUNCTION_16	WHILE_1	IF_4	IF_5	CALL_1
0x4000c6f	              0x51	                                push rcx	       506	xmerge.c	FUNCTION_16	WHILE_1	IF_4	IF_5	CALL_1
0x4000c70	           0x34510	             add eax, dword [rbp + 0x10]	       506	xmerge.c	FUNCTION_16	WHILE_1	IF_4	IF_5	CALL_1
0x4000c73	            0x29f0	                            sub eax, esi	       506	xmerge.c	FUNCTION_16	WHILE_1	IF_4	IF_5	CALL_1
0x4000c75	            0x4898	                                    cdqe	       506	xmerge.c	FUNCTION_16	WHILE_1	IF_4	IF_5	CALL_1
0x4000c77	              0x50	                                push rax	       506	xmerge.c	FUNCTION_16	WHILE_1	IF_4	IF_5	CALL_1
0x4000c78	        0x4c634b20	          movsxd r9, dword [rbx + 0x20] 	       506	xmerge.c	FUNCTION_16	WHILE_1	IF_4	IF_5	CALL_1
0x4000c7c	        0x4c634310	          movsxd r8, dword [rbx + 0x10] 	       506	xmerge.c	FUNCTION_16	WHILE_1	IF_4	IF_5	CALL_1
0x4000c80	      0xbe01000000	                              mov esi, 1	       506	xmerge.c	FUNCTION_16	WHILE_1	IF_4	IF_5	CALL_1
0x4000c85	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       506	xmerge.c	FUNCTION_16	WHILE_1	IF_4	IF_5	CALL_1
0x4000c8d	      0xe8cdf4ffff	               call sym.xdl_append_merge	       506	xmerge.c	FUNCTION_16	WHILE_1	IF_4	IF_5	CALL_1
0x4000c92	        0x4883c410	                           add rsp, 0x10	       506	xmerge.c	FUNCTION_16	WHILE_1	IF_4	IF_5	CALL_1
0x4000c96	            0x85c0	                           test eax, eax	       506	xmerge.c	FUNCTION_16	WHILE_1	IF_4	IF_5	CALL_1
0x4000c98	            0x7412	                            je 0x4000cac	       506	xmerge.c	FUNCTION_16	WHILE_1	IF_4	IF_5	CALL_1
0x4000c9a	          0x4c89f7	                            mov rdi, r14	       508	xmerge.c	FUNCTION_16	WHILE_1	IF_4	IF_5	CALL_2
0x4000c9d	      0xe8eff6ffff	              call sym.xdl_cleanup_merge	       508	xmerge.c	FUNCTION_16	WHILE_1	IF_4	IF_5	CALL_2
0x4000ca2	      0xbbffffffff	                     mov ebx, 0xffffffff	       509	xmerge.c	FUNCTION_16	WHILE_1	IF_4	IF_5
0x4000ca7	      0xe942070000	                           jmp 0x40013ee	       509	xmerge.c	FUNCTION_16	WHILE_1	IF_4	IF_5
0x4000cac	          0x488b1b	                    mov rbx, qword [rbx]	       511	xmerge.c	FUNCTION_16	WHILE_1	IF_4
0x4000caf	      0xe9fe010000	                           jmp 0x4000eb2	       511	xmerge.c	FUNCTION_16	WHILE_1	IF_4
0x4000cb4	        0x4c8b4d18	              mov r9, qword [rbp + 0x18]	       514	xmerge.c	FUNCTION_16	WHILE_1	IF_6
0x4000cb8	        0x4a8d140e	                     lea rdx, [rsi + r9]	       514	xmerge.c	FUNCTION_16	WHILE_1	IF_6
0x4000cbc	          0x4839d0	                            cmp rax, rdx	       514	xmerge.c	FUNCTION_16	WHILE_1	IF_6
0x4000cbf	            0x7e55	                           jle 0x4000d16	       514	xmerge.c	FUNCTION_16	WHILE_1	IF_6
0x4000cc1	          0x4963c9	                         movsxd rcx, r9d	       521	xmerge.c	FUNCTION_16	WHILE_1	IF_6	IF_7	CALL_3
0x4000cc4	          0x4189f0	                            mov r8d, esi	       521	xmerge.c	FUNCTION_16	WHILE_1	IF_6	IF_7	CALL_3
0x4000cc7	        0x44034310	             add r8d, dword [rbx + 0x10]	       521	xmerge.c	FUNCTION_16	WHILE_1	IF_6	IF_7	CALL_3
0x4000ccb	          0x4129c0	                            sub r8d, eax	       521	xmerge.c	FUNCTION_16	WHILE_1	IF_6	IF_7	CALL_3
0x4000cce	          0x4863d6	                         movsxd rdx, esi	       521	xmerge.c	FUNCTION_16	WHILE_1	IF_6	IF_7	CALL_3
0x4000cd1	        0x48634520	         movsxd rax, dword [rbp + 0x20] 	       521	xmerge.c	FUNCTION_16	WHILE_1	IF_6	IF_7	CALL_3
0x4000cd5	              0x50	                                push rax	       521	xmerge.c	FUNCTION_16	WHILE_1	IF_6	IF_7	CALL_3
0x4000cd6	        0x48634510	         movsxd rax, dword [rbp + 0x10] 	       521	xmerge.c	FUNCTION_16	WHILE_1	IF_6	IF_7	CALL_3
0x4000cda	              0x50	                                push rax	       521	xmerge.c	FUNCTION_16	WHILE_1	IF_6	IF_7	CALL_3
0x4000cdb	          0x4989c9	                             mov r9, rcx	       521	xmerge.c	FUNCTION_16	WHILE_1	IF_6	IF_7	CALL_3
0x4000cde	          0x4d63c0	                          movsxd r8, r8d	       521	xmerge.c	FUNCTION_16	WHILE_1	IF_6	IF_7	CALL_3
0x4000ce1	      0xbe02000000	                              mov esi, 2	       521	xmerge.c	FUNCTION_16	WHILE_1	IF_6	IF_7	CALL_3
0x4000ce6	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       521	xmerge.c	FUNCTION_16	WHILE_1	IF_6	IF_7	CALL_3
0x4000cee	      0xe86cf4ffff	               call sym.xdl_append_merge	       521	xmerge.c	FUNCTION_16	WHILE_1	IF_6	IF_7	CALL_3
0x4000cf3	        0x4883c410	                           add rsp, 0x10	       521	xmerge.c	FUNCTION_16	WHILE_1	IF_6	IF_7	CALL_3
0x4000cf7	            0x85c0	                           test eax, eax	       521	xmerge.c	FUNCTION_16	WHILE_1	IF_6	IF_7	CALL_3
0x4000cf9	            0x7412	                            je 0x4000d0d	       521	xmerge.c	FUNCTION_16	WHILE_1	IF_6	IF_7	CALL_3
0x4000cfb	          0x4c89f7	                            mov rdi, r14	       523	xmerge.c	FUNCTION_16	WHILE_1	IF_6	IF_7	CALL_4
0x4000cfe	      0xe88ef6ffff	              call sym.xdl_cleanup_merge	       523	xmerge.c	FUNCTION_16	WHILE_1	IF_6	IF_7	CALL_4
0x4000d03	      0xbbffffffff	                     mov ebx, 0xffffffff	       524	xmerge.c	FUNCTION_16	WHILE_1	IF_6	IF_7
0x4000d08	      0xe9e1060000	                           jmp 0x40013ee	       524	xmerge.c	FUNCTION_16	WHILE_1	IF_6	IF_7
0x4000d0d	        0x488b6d00	                    mov rbp, qword [rbp]	       526	xmerge.c	FUNCTION_16	WHILE_1	IF_6
0x4000d11	      0xe99c010000	                           jmp 0x4000eb2	       526	xmerge.c	FUNCTION_16	WHILE_1	IF_6
0x4000d16	          0x4839f0	                            cmp rax, rsi	       529	xmerge.c	FUNCTION_16	WHILE_1	IF_8
0x4000d19	           0xf95c2	                                setne dl	       529	xmerge.c	FUNCTION_16	WHILE_1	IF_8
0x4000d1c	          0x4c39c9	                             cmp rcx, r9	       529	xmerge.c	FUNCTION_16	WHILE_1	IF_8
0x4000d1f	           0xf95c0	                                setne al	       529	xmerge.c	FUNCTION_16	WHILE_1	IF_8
0x4000d22	             0x8c2	                               or dl, al	       529	xmerge.c	FUNCTION_16	WHILE_1	IF_8
0x4000d24	     0xf85d8000000	                           jne 0x4000e02	       529	xmerge.c	FUNCTION_16	WHILE_1	IF_8
0x4000d2a	          0x4585ff	                         test r15d, r15d	       529	xmerge.c	FUNCTION_16	WHILE_1	IF_8
0x4000d2d	     0xf84cf000000	                            je 0x4000e02	       529	xmerge.c	FUNCTION_16	WHILE_1	IF_8
0x4000d33	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       531	xmerge.c	FUNCTION_16	WHILE_1	IF_8
0x4000d37	        0x483b4520	            cmp rax, qword [rbp + 0x20] 	       530	xmerge.c	FUNCTION_16	WHILE_1	IF_8
0x4000d3b	     0xf85c1000000	                           jne 0x4000e02	       530	xmerge.c	FUNCTION_16	WHILE_1	IF_8
0x4000d41	        0x498b7500	                    mov rsi, qword [r13]	       532	xmerge.c	FUNCTION_16	WHILE_1	IF_8	CALL_5
0x4000d45	          0x4989f3	                            mov r11, rsi	       532	xmerge.c	FUNCTION_16	WHILE_1	IF_8	CALL_5
0x4000d48	    0x488bb4248801	           mov rsi, qword [rsp + 0x188] 	       100	xmerge.c	FUNCTION_3
0x4000d50	        0x48635310	         movsxd rdx, dword [rbx + 0x10] 	       100	xmerge.c	FUNCTION_3
0x4000d54	        0x48c1e203	                              shl rdx, 3	       100	xmerge.c	FUNCTION_3
0x4000d58	    0x488bbc249802	           mov rdi, qword [rsp + 0x298] 	       101	xmerge.c	FUNCTION_3
0x4000d60	        0x48634d10	         movsxd rcx, dword [rbp + 0x10] 	       101	xmerge.c	FUNCTION_3
0x4000d64	        0x48c1e103	                              shl rcx, 3	       101	xmerge.c	FUNCTION_3
0x4000d68	            0x85c0	                           test eax, eax	       103	xmerge.c	FUNCTION_3	FOR_1
0x4000d6a	     0xf8e27010000	                           jle 0x4000e97	       103	xmerge.c	FUNCTION_3	FOR_1
0x4000d70	          0x8d40ff	                      lea eax, [rax - 1]	       103	xmerge.c	FUNCTION_3	FOR_1
0x4000d73	    0x488d04c50800	                    lea rax, [rax*8 + 8]	       103	xmerge.c	FUNCTION_3	FOR_1
0x4000d7b	    0x41bc00000000	                             mov r12d, 0	       103	xmerge.c	FUNCTION_3	FOR_1
0x4000d81	          0x4801cf	                            add rdi, rcx	       105	xmerge.c	FUNCTION_3	FOR_1
0x4000d84	          0x4801d6	                            add rsi, rdx	       104	xmerge.c	FUNCTION_3	FOR_1	CALL_1
0x4000d87	      0x44897c2430	            mov dword [rsp + 0x30], r15d	       104	xmerge.c	FUNCTION_3	FOR_1	CALL_1
0x4000d8c	      0x4c89742438	             mov qword [rsp + 0x38], r14	       104	xmerge.c	FUNCTION_3	FOR_1	CALL_1
0x4000d91	          0x4989c7	                            mov r15, rax	       104	xmerge.c	FUNCTION_3	FOR_1	CALL_1
0x4000d94	      0x48895c2440	             mov qword [rsp + 0x40], rbx	       104	xmerge.c	FUNCTION_3	FOR_1	CALL_1
0x4000d99	          0x4c89db	                            mov rbx, r11	       104	xmerge.c	FUNCTION_3	FOR_1	CALL_1
0x4000d9c	      0x48896c2448	             mov qword [rsp + 0x48], rbp	       104	xmerge.c	FUNCTION_3	FOR_1	CALL_1
0x4000da1	          0x4889fd	                            mov rbp, rdi	       104	xmerge.c	FUNCTION_3	FOR_1	CALL_1
0x4000da4	          0x4989f6	                            mov r14, rsi	       104	xmerge.c	FUNCTION_3	FOR_1	CALL_1
0x4000da7	      0x4a8b542500	              mov rdx, qword [rbp + r12]	       105	xmerge.c	FUNCTION_3	FOR_1
0x4000dac	        0x4b8b0426	              mov rax, qword [r14 + r12]	       104	xmerge.c	FUNCTION_3	FOR_1	CALL_1
0x4000db0	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	       104	xmerge.c	FUNCTION_3	FOR_1	CALL_1
0x4000db4	        0x488b5208	                mov rdx, qword [rdx + 8]	       104	xmerge.c	FUNCTION_3	FOR_1	CALL_1
0x4000db8	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       104	xmerge.c	FUNCTION_3	FOR_1	CALL_1
0x4000dbc	        0x488b7808	                mov rdi, qword [rax + 8]	       104	xmerge.c	FUNCTION_3	FOR_1	CALL_1
0x4000dc0	          0x4989d8	                             mov r8, rbx	       104	xmerge.c	FUNCTION_3	FOR_1	CALL_1
0x4000dc3	      0xe800000000	                          call 0x4000dc8	       104	xmerge.c	FUNCTION_3	FOR_1	CALL_1
0x4000dc8	            0x85c0	                           test eax, eax	       106	xmerge.c	FUNCTION_3	FOR_1	IF_1
0x4000dca	            0x7422	                            je 0x4000dee	       106	xmerge.c	FUNCTION_3	FOR_1	IF_1
0x4000dcc	        0x4983c408	                              add r12, 8	       106	xmerge.c	FUNCTION_3	FOR_1	IF_1
0x4000dd0	          0x4d39e7	                            cmp r15, r12	       103	xmerge.c	FUNCTION_3	FOR_1
0x4000dd3	            0x75d2	                           jne 0x4000da7	       103	xmerge.c	FUNCTION_3	FOR_1
0x4000dd5	      0x448b7c2430	           mov r15d, dword [rsp + 0x30] 	       103	xmerge.c	FUNCTION_3	FOR_1
0x4000dda	      0x4c8b742438	            mov r14, qword [rsp + 0x38] 	       103	xmerge.c	FUNCTION_3	FOR_1
0x4000ddf	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	       103	xmerge.c	FUNCTION_3	FOR_1
0x4000de4	      0x488b6c2448	            mov rbp, qword [rsp + 0x48] 	       103	xmerge.c	FUNCTION_3	FOR_1
0x4000de9	      0xe9a9000000	                           jmp 0x4000e97	       103	xmerge.c	FUNCTION_3	FOR_1
0x4000dee	      0x448b7c2430	           mov r15d, dword [rsp + 0x30] 	       103	xmerge.c	FUNCTION_3	FOR_1
0x4000df3	      0x4c8b742438	            mov r14, qword [rsp + 0x38] 	       103	xmerge.c	FUNCTION_3	FOR_1
0x4000df8	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	       103	xmerge.c	FUNCTION_3	FOR_1
0x4000dfd	      0x488b6c2448	            mov rbp, qword [rsp + 0x48] 	       103	xmerge.c	FUNCTION_3	FOR_1
0x4000e02	        0x488b4b08	                mov rcx, qword [rbx + 8]	       536	xmerge.c	FUNCTION_16	WHILE_1	IF_8
0x4000e06	          0x4189ca	                           mov r10d, ecx	       536	xmerge.c	FUNCTION_16	WHILE_1	IF_8
0x4000e09	        0x442b5508	               sub r10d, dword [rbp + 8]	       536	xmerge.c	FUNCTION_16	WHILE_1	IF_8
0x4000e0d	        0x4c8b5b18	            mov r11, qword [rbx + 0x18] 	       537	xmerge.c	FUNCTION_16	WHILE_1	IF_8
0x4000e11	          0x4489d7	                           mov edi, r10d	       537	xmerge.c	FUNCTION_16	WHILE_1	IF_8
0x4000e14	          0x2b7d18	             sub edi, dword [rbp + 0x18]	       537	xmerge.c	FUNCTION_16	WHILE_1	IF_8
0x4000e17	          0x4401df	                           add edi, r11d	       537	xmerge.c	FUNCTION_16	WHILE_1	IF_8
0x4000e1a	            0x89ca	                            mov edx, ecx	       539	xmerge.c	FUNCTION_16	WHILE_1	IF_8
0x4000e1c	        0x4c8b4b10	              mov r9, qword [rbx + 0x10]	       540	xmerge.c	FUNCTION_16	WHILE_1	IF_8
0x4000e20	          0x4589c8	                            mov r8d, r9d	       540	xmerge.c	FUNCTION_16	WHILE_1	IF_8
0x4000e23	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       541	xmerge.c	FUNCTION_16	WHILE_1	IF_8
0x4000e27	            0x89c6	                            mov esi, eax	       541	xmerge.c	FUNCTION_16	WHILE_1	IF_8
0x4000e29	          0x4585d2	                         test r10d, r10d	       542	xmerge.c	FUNCTION_16	WHILE_1	IF_8	IF_9
0x4000e2c	            0x7e08	                           jle 0x4000e36	       542	xmerge.c	FUNCTION_16	WHILE_1	IF_8	IF_9
0x4000e2e	          0x4429d2	                           sub edx, r10d	       543	xmerge.c	FUNCTION_16	WHILE_1	IF_8	IF_9
0x4000e31	          0x4529d0	                           sub r8d, r10d	       544	xmerge.c	FUNCTION_16	WHILE_1	IF_8	IF_9
0x4000e34	            0xeb04	                           jmp 0x4000e3a	       544	xmerge.c	FUNCTION_16	WHILE_1	IF_8	IF_9
0x4000e36	        0x418d3402	                    lea esi, [r10 + rax]	       547	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_1
0x4000e3a	          0x4401d9	                           add ecx, r11d	       548	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_1
0x4000e3d	            0x29d1	                            sub ecx, edx	       548	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_1
0x4000e3f	        0x44034b20	             add r9d, dword [rbx + 0x20]	       549	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_1
0x4000e43	          0x4529c1	                            sub r9d, r8d	       549	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_1
0x4000e46	           0x34520	             add eax, dword [rbp + 0x20]	       550	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_1
0x4000e49	            0x29f0	                            sub eax, esi	       550	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_1
0x4000e4b	            0x85ff	                           test edi, edi	       551	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_1	IF_10
0x4000e4d	            0x7907	                           jns 0x4000e56	       551	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_1	IF_10
0x4000e4f	            0x29f9	                            sub ecx, edi	       552	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_1	IF_10
0x4000e51	          0x4129f9	                            sub r9d, edi	       553	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_1	IF_10
0x4000e54	            0xeb02	                           jmp 0x4000e58	       553	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_1	IF_10
0x4000e56	             0x1f8	                            add eax, edi	       555	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_2
0x4000e58	          0x4863c9	                         movsxd rcx, ecx	       556	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_2	IF_11	CALL_6
0x4000e5b	          0x4863d2	                         movsxd rdx, edx	       556	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_2	IF_11	CALL_6
0x4000e5e	            0x4898	                                    cdqe	       556	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_2	IF_11	CALL_6
0x4000e60	              0x50	                                push rax	       556	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_2	IF_11	CALL_6
0x4000e61	          0x4863f6	                         movsxd rsi, esi	       556	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_2	IF_11	CALL_6
0x4000e64	              0x56	                                push rsi	       556	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_2	IF_11	CALL_6
0x4000e65	          0x4d63c9	                          movsxd r9, r9d	       556	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_2	IF_11	CALL_6
0x4000e68	          0x4d63c0	                          movsxd r8, r8d	       556	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_2	IF_11	CALL_6
0x4000e6b	      0xbe00000000	                              mov esi, 0	       556	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_2	IF_11	CALL_6
0x4000e70	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       556	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_2	IF_11	CALL_6
0x4000e78	      0xe8e2f2ffff	               call sym.xdl_append_merge	       556	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_2	IF_11	CALL_6
0x4000e7d	        0x4883c410	                           add rsp, 0x10	       556	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_2	IF_11	CALL_6
0x4000e81	            0x85c0	                           test eax, eax	       556	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_2	IF_11	CALL_6
0x4000e83	            0x7412	                            je 0x4000e97	       556	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_2	IF_11	CALL_6
0x4000e85	          0x4c89f7	                            mov rdi, r14	       558	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_2	IF_11	CALL_7
0x4000e88	      0xe804f5ffff	              call sym.xdl_cleanup_merge	       558	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_2	IF_11	CALL_7
0x4000e8d	      0xbbffffffff	                     mov ebx, 0xffffffff	       559	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_2	IF_11
0x4000e92	      0xe957050000	                           jmp 0x40013ee	       559	xmerge.c	FUNCTION_16	WHILE_1	IF_8	ELSE_2	IF_11
0x4000e97	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       563	xmerge.c	FUNCTION_16	WHILE_1
0x4000e9b	           0x35308	                add edx, dword [rbx + 8]	       563	xmerge.c	FUNCTION_16	WHILE_1
0x4000e9e	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       564	xmerge.c	FUNCTION_16	WHILE_1
0x4000ea2	           0x34508	                add eax, dword [rbp + 8]	       564	xmerge.c	FUNCTION_16	WHILE_1
0x4000ea5	            0x39c2	                            cmp edx, eax	       566	xmerge.c	FUNCTION_16	WHILE_1	IF_12
0x4000ea7	            0x7c06	                            jl 0x4000eaf	       566	xmerge.c	FUNCTION_16	WHILE_1	IF_12
0x4000ea9	        0x488b6d00	                    mov rbp, qword [rbp]	       567	xmerge.c	FUNCTION_16	WHILE_1	IF_12
0x4000ead	            0x7f03	                            jg 0x4000eb2	       568	xmerge.c	FUNCTION_16	WHILE_1	IF_13
0x4000eaf	          0x488b1b	                    mov rbx, qword [rbx]	       569	xmerge.c	FUNCTION_16	WHILE_1	IF_13
0x4000eb2	          0x4885db	                           test rbx, rbx	       496	xmerge.c	FUNCTION_16	WHILE_1
0x4000eb5	            0x7409	                            je 0x4000ec0	       496	xmerge.c	FUNCTION_16	WHILE_1
0x4000eb7	          0x4885ed	                           test rbp, rbp	       496	xmerge.c	FUNCTION_16	WHILE_1
0x4000eba	     0xf858afdffff	                           jne 0x4000c4a	       496	xmerge.c	FUNCTION_16	WHILE_1
0x4000ec0	          0x4c89e8	                            mov rax, r13	       496	xmerge.c	FUNCTION_16	WHILE_1
0x4000ec3	          0x4589fd	                          mov r13d, r15d	       496	xmerge.c	FUNCTION_16	WHILE_1
0x4000ec6	          0x4d89f7	                            mov r15, r14	       496	xmerge.c	FUNCTION_16	WHILE_1
0x4000ec9	          0x4989c6	                            mov r14, rax	       496	xmerge.c	FUNCTION_16	WHILE_1
0x4000ecc	          0x4885db	                           test rbx, rbx	       571	xmerge.c	FUNCTION_16	WHILE_2
0x4000ecf	            0x7462	                            je 0x4000f33	       571	xmerge.c	FUNCTION_16	WHILE_2
0x4000ed1	          0x4d85ff	                           test r15, r15	       573	xmerge.c	FUNCTION_16	WHILE_2	IF_14
0x4000ed4	    0x4c0f447c2470	           cmove r15, qword [rsp + 0x70]	       573	xmerge.c	FUNCTION_16	WHILE_2	IF_14
0x4000eda	        0x488b4308	                mov rax, qword [rbx + 8]	       574	xmerge.c	FUNCTION_16	WHILE_2
0x4000ede	        0x48634b18	         movsxd rcx, dword [rbx + 0x18] 	       580	xmerge.c	FUNCTION_16	WHILE_2	IF_15	CALL_8
0x4000ee2	          0x4863d0	                         movsxd rdx, eax	       580	xmerge.c	FUNCTION_16	WHILE_2	IF_15	CALL_8
0x4000ee5	              0x51	                                push rcx	       580	xmerge.c	FUNCTION_16	WHILE_2	IF_15	CALL_8
0x4000ee6	     0x38424780200	            add eax, dword [rsp + 0x278]	       580	xmerge.c	FUNCTION_16	WHILE_2	IF_15	CALL_8
0x4000eed	    0x2b8424f00100	            sub eax, dword [rsp + 0x1f0]	       580	xmerge.c	FUNCTION_16	WHILE_2	IF_15	CALL_8
0x4000ef4	            0x4898	                                    cdqe	       580	xmerge.c	FUNCTION_16	WHILE_2	IF_15	CALL_8
0x4000ef6	              0x50	                                push rax	       580	xmerge.c	FUNCTION_16	WHILE_2	IF_15	CALL_8
0x4000ef7	        0x4c634b20	          movsxd r9, dword [rbx + 0x20] 	       580	xmerge.c	FUNCTION_16	WHILE_2	IF_15	CALL_8
0x4000efb	        0x4c634310	          movsxd r8, dword [rbx + 0x10] 	       580	xmerge.c	FUNCTION_16	WHILE_2	IF_15	CALL_8
0x4000eff	      0xbe01000000	                              mov esi, 1	       580	xmerge.c	FUNCTION_16	WHILE_2	IF_15	CALL_8
0x4000f04	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       580	xmerge.c	FUNCTION_16	WHILE_2	IF_15	CALL_8
0x4000f0c	      0xe84ef2ffff	               call sym.xdl_append_merge	       580	xmerge.c	FUNCTION_16	WHILE_2	IF_15	CALL_8
0x4000f11	        0x4883c410	                           add rsp, 0x10	       580	xmerge.c	FUNCTION_16	WHILE_2	IF_15	CALL_8
0x4000f15	            0x85c0	                           test eax, eax	       580	xmerge.c	FUNCTION_16	WHILE_2	IF_15	CALL_8
0x4000f17	            0x7412	                            je 0x4000f2b	       580	xmerge.c	FUNCTION_16	WHILE_2	IF_15	CALL_8
0x4000f19	          0x4c89ff	                            mov rdi, r15	       582	xmerge.c	FUNCTION_16	WHILE_2	IF_15	CALL_9
0x4000f1c	      0xe870f4ffff	              call sym.xdl_cleanup_merge	       582	xmerge.c	FUNCTION_16	WHILE_2	IF_15	CALL_9
0x4000f21	      0xbbffffffff	                     mov ebx, 0xffffffff	       583	xmerge.c	FUNCTION_16	WHILE_2	IF_15
0x4000f26	      0xe9c3040000	                           jmp 0x40013ee	       583	xmerge.c	FUNCTION_16	WHILE_2	IF_15
0x4000f2b	          0x488b1b	                    mov rbx, qword [rbx]	       585	xmerge.c	FUNCTION_16	WHILE_2
0x4000f2e	          0x4885db	                           test rbx, rbx	       571	xmerge.c	FUNCTION_16	WHILE_2
0x4000f31	            0x759e	                           jne 0x4000ed1	       571	xmerge.c	FUNCTION_16	WHILE_2
0x4000f33	          0x4885ed	                           test rbp, rbp	       587	xmerge.c	FUNCTION_16	WHILE_3
0x4000f36	            0x746c	                            je 0x4000fa4	       587	xmerge.c	FUNCTION_16	WHILE_3
0x4000f38	          0x4d85ff	                           test r15, r15	       589	xmerge.c	FUNCTION_16	WHILE_3	IF_16
0x4000f3b	    0x4c0f447c2470	           cmove r15, qword [rsp + 0x70]	       589	xmerge.c	FUNCTION_16	WHILE_3	IF_16
0x4000f41	        0x488b5508	                mov rdx, qword [rbp + 8]	       590	xmerge.c	FUNCTION_16	WHILE_3
0x4000f45	        0x48634d18	         movsxd rcx, dword [rbp + 0x18] 	       596	xmerge.c	FUNCTION_16	WHILE_3	IF_17	CALL_10
0x4000f49	          0x4189d0	                            mov r8d, edx	       596	xmerge.c	FUNCTION_16	WHILE_3	IF_17	CALL_10
0x4000f4c	    0x440384246001	            add r8d, dword [rsp + 0x160]	       596	xmerge.c	FUNCTION_16	WHILE_3	IF_17	CALL_10
0x4000f54	    0x442b8424d800	             sub r8d, dword [rsp + 0xd8]	       596	xmerge.c	FUNCTION_16	WHILE_3	IF_17	CALL_10
0x4000f5c	          0x4863d2	                         movsxd rdx, edx	       596	xmerge.c	FUNCTION_16	WHILE_3	IF_17	CALL_10
0x4000f5f	        0x48634520	         movsxd rax, dword [rbp + 0x20] 	       596	xmerge.c	FUNCTION_16	WHILE_3	IF_17	CALL_10
0x4000f63	              0x50	                                push rax	       596	xmerge.c	FUNCTION_16	WHILE_3	IF_17	CALL_10
0x4000f64	        0x48634510	         movsxd rax, dword [rbp + 0x10] 	       596	xmerge.c	FUNCTION_16	WHILE_3	IF_17	CALL_10
0x4000f68	              0x50	                                push rax	       596	xmerge.c	FUNCTION_16	WHILE_3	IF_17	CALL_10
0x4000f69	          0x4989c9	                             mov r9, rcx	       596	xmerge.c	FUNCTION_16	WHILE_3	IF_17	CALL_10
0x4000f6c	          0x4d63c0	                          movsxd r8, r8d	       596	xmerge.c	FUNCTION_16	WHILE_3	IF_17	CALL_10
0x4000f6f	      0xbe02000000	                              mov esi, 2	       596	xmerge.c	FUNCTION_16	WHILE_3	IF_17	CALL_10
0x4000f74	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       596	xmerge.c	FUNCTION_16	WHILE_3	IF_17	CALL_10
0x4000f7c	      0xe8def1ffff	               call sym.xdl_append_merge	       596	xmerge.c	FUNCTION_16	WHILE_3	IF_17	CALL_10
0x4000f81	        0x4883c410	                           add rsp, 0x10	       596	xmerge.c	FUNCTION_16	WHILE_3	IF_17	CALL_10
0x4000f85	            0x85c0	                           test eax, eax	       596	xmerge.c	FUNCTION_16	WHILE_3	IF_17	CALL_10
0x4000f87	            0x7412	                            je 0x4000f9b	       596	xmerge.c	FUNCTION_16	WHILE_3	IF_17	CALL_10
0x4000f89	          0x4c89ff	                            mov rdi, r15	       598	xmerge.c	FUNCTION_16	WHILE_3	IF_17	CALL_11
0x4000f8c	      0xe800f4ffff	              call sym.xdl_cleanup_merge	       598	xmerge.c	FUNCTION_16	WHILE_3	IF_17	CALL_11
0x4000f91	      0xbbffffffff	                     mov ebx, 0xffffffff	       599	xmerge.c	FUNCTION_16	WHILE_3	IF_17
0x4000f96	      0xe953040000	                           jmp 0x40013ee	       599	xmerge.c	FUNCTION_16	WHILE_3	IF_17
0x4000f9b	        0x488b6d00	                    mov rbp, qword [rbp]	       601	xmerge.c	FUNCTION_16	WHILE_3
0x4000f9f	          0x4885ed	                           test rbp, rbp	       587	xmerge.c	FUNCTION_16	WHILE_3
0x4000fa2	            0x7594	                           jne 0x4000f38	       587	xmerge.c	FUNCTION_16	WHILE_3
0x4000fa4	          0x4d85ff	                           test r15, r15	       603	xmerge.c	FUNCTION_16	IF_18
0x4000fa7	     0xf858d040000	                           jne 0x400143a	       603	xmerge.c	FUNCTION_16	IF_18
0x4000fad	      0x4c8b7c2470	            mov r15, qword [rsp + 0x70] 	       604	xmerge.c	FUNCTION_16	IF_18
0x4000fb2	        0x4183fd01	                             cmp r13d, 1	       606	xmerge.c	FUNCTION_16	IF_19
0x4000fb6	     0xf8e7d030000	                           jle 0x4001339	       606	xmerge.c	FUNCTION_16	IF_19
0x4000fbc	          0x4d85ff	                           test r15, r15	       332	xmerge.c	FUNCTION_11	FOR_1
0x4000fbf	     0xf8474030000	                            je 0x4001339	       332	xmerge.c	FUNCTION_11	FOR_1
0x4000fc5	          0x4c89fb	                            mov rbx, r15	       103	xmerge.c	FUNCTION_3	FOR_1
0x4000fc8	    0x488d84244803	                  lea rax, [rsp + 0x348]	       358	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_2
0x4000fd0	      0x4889442440	             mov qword [rsp + 0x40], rax	       358	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_2
0x4000fd5	      0x44896c2448	            mov dword [rsp + 0x48], r13d	       358	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_2
0x4000fda	      0x4c897c2430	             mov qword [rsp + 0x30], r15	       358	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_2
0x4000fdf	      0x4c89742438	             mov qword [rsp + 0x38], r14	       358	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_2
0x4000fe4	        0x837b0800	                  cmp dword [rbx + 8], 0	       339	xmerge.c	FUNCTION_11	FOR_1	IF_1
0x4000fe8	     0xf8511020000	                           jne 0x40011ff	       339	xmerge.c	FUNCTION_11	FOR_1	IF_1
0x4000fee	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       343	xmerge.c	FUNCTION_11	FOR_1	IF_2
0x4000ff2	          0x4885c0	                           test rax, rax	       343	xmerge.c	FUNCTION_11	FOR_1	IF_2
0x4000ff5	     0xf8404020000	                            je 0x40011ff	       343	xmerge.c	FUNCTION_11	FOR_1	IF_2
0x4000ffb	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       343	xmerge.c	FUNCTION_11	FOR_1	IF_2
0x4000fff	          0x4885d2	                           test rdx, rdx	       343	xmerge.c	FUNCTION_11	FOR_1	IF_2
0x4001002	     0xf84f7010000	                            je 0x40011ff	       343	xmerge.c	FUNCTION_11	FOR_1	IF_2
0x4001008	        0x4c8b7310	            mov r14, qword [rbx + 0x10] 	       336	xmerge.c	FUNCTION_11	FOR_1
0x400100c	        0x4c8b6b18	            mov r13, qword [rbx + 0x18] 	       336	xmerge.c	FUNCTION_11	FOR_1
0x4001010	    0x488bb4248801	           mov rsi, qword [rsp + 0x188] 	       350	xmerge.c	FUNCTION_11	FOR_1
0x4001018	        0x4a8b0cf6	            mov rcx, qword [rsi + r14*8]	       350	xmerge.c	FUNCTION_11	FOR_1
0x400101c	        0x488b4908	                mov rcx, qword [rcx + 8]	       350	xmerge.c	FUNCTION_11	FOR_1
0x4001020	    0x48898c248000	             mov qword [rsp + 0x80], rcx	       350	xmerge.c	FUNCTION_11	FOR_1
0x4001028	          0x4c01f0	                            add rax, r14	       351	xmerge.c	FUNCTION_11	FOR_1
0x400102b	      0x488b74c6f8	        mov rsi, qword [rsi + rax*8 - 8]	       351	xmerge.c	FUNCTION_11	FOR_1
0x4001030	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       351	xmerge.c	FUNCTION_11	FOR_1
0x4001034	        0x48034608	                add rax, qword [rsi + 8]	       351	xmerge.c	FUNCTION_11	FOR_1
0x4001038	          0x4829c8	                            sub rax, rcx	       351	xmerge.c	FUNCTION_11	FOR_1
0x400103b	    0x488984248800	             mov qword [rsp + 0x88], rax	       351	xmerge.c	FUNCTION_11	FOR_1
0x4001043	    0x488b84249802	           mov rax, qword [rsp + 0x298] 	       353	xmerge.c	FUNCTION_11	FOR_1
0x400104b	        0x4a8b0ce8	            mov rcx, qword [rax + r13*8]	       353	xmerge.c	FUNCTION_11	FOR_1
0x400104f	        0x488b4908	                mov rcx, qword [rcx + 8]	       353	xmerge.c	FUNCTION_11	FOR_1
0x4001053	    0x48898c249000	             mov qword [rsp + 0x90], rcx	       353	xmerge.c	FUNCTION_11	FOR_1
0x400105b	          0x4c01ea	                            add rdx, r13	       354	xmerge.c	FUNCTION_11	FOR_1
0x400105e	      0x488b54d0f8	        mov rdx, qword [rax + rdx*8 - 8]	       354	xmerge.c	FUNCTION_11	FOR_1
0x4001063	        0x488b4210	            mov rax, qword [rdx + 0x10] 	       354	xmerge.c	FUNCTION_11	FOR_1
0x4001067	        0x48034208	                add rax, qword [rdx + 8]	       354	xmerge.c	FUNCTION_11	FOR_1
0x400106b	          0x4829c8	                            sub rax, rcx	       354	xmerge.c	FUNCTION_11	FOR_1
0x400106e	    0x488984249800	             mov qword [rsp + 0x98], rax	       354	xmerge.c	FUNCTION_11	FOR_1
0x4001076	    0x488d8c24c002	                  lea rcx, [rsp + 0x2c0]	       356	xmerge.c	FUNCTION_11	FOR_1	IF_3	CALL_1
0x400107e	      0x488b542408	                mov rdx, qword [rsp + 8]	       356	xmerge.c	FUNCTION_11	FOR_1	IF_3	CALL_1
0x4001083	    0x488db4249000	                   lea rsi, [rsp + 0x90]	       356	xmerge.c	FUNCTION_11	FOR_1	IF_3	CALL_1
0x400108b	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       356	xmerge.c	FUNCTION_11	FOR_1	IF_3	CALL_1
0x4001093	      0xe800000000	                          call 0x4001098	       356	xmerge.c	FUNCTION_11	FOR_1	IF_3	CALL_1
0x4001098	            0x85c0	                           test eax, eax	       356	xmerge.c	FUNCTION_11	FOR_1	IF_3	CALL_1
0x400109a	     0xf8882020000	                            js 0x4001322	       356	xmerge.c	FUNCTION_11	FOR_1	IF_3	CALL_1
0x40010a0	      0x4c8b7c2438	            mov r15, qword [rsp + 0x38] 	       358	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_2
0x40010a5	          0x498b17	                    mov rdx, qword [r15]	       358	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_2
0x40010a8	      0x488b6c2440	            mov rbp, qword [rsp + 0x40] 	       358	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_2
0x40010ad	          0x4889ee	                            mov rsi, rbp	       358	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_2
0x40010b0	    0x488dbc24c002	                  lea rdi, [rsp + 0x2c0]	       358	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_2
0x40010b8	      0xe800000000	                          call 0x40010bd	       358	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_2
0x40010bd	            0x85c0	                           test eax, eax	       358	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_2
0x40010bf	            0x782d	                            js 0x40010ee	       358	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_2
0x40010c1	          0x498b17	                    mov rdx, qword [r15]	       359	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_3
0x40010c4	    0x488db424c002	                  lea rsi, [rsp + 0x2c0]	       359	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_3
0x40010cc	          0x4889ef	                            mov rdi, rbp	       359	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_3
0x40010cf	      0xe800000000	                          call 0x40010d4	       359	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_3
0x40010d4	            0x85c0	                           test eax, eax	       358	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_2
0x40010d6	            0x7816	                            js 0x40010ee	       358	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_2
0x40010d8	      0x488d742478	                   lea rsi, [rsp + 0x78]	       360	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_4
0x40010dd	    0x488dbc24c002	                  lea rdi, [rsp + 0x2c0]	       360	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_4
0x40010e5	      0xe800000000	                          call 0x40010ea	       360	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_4
0x40010ea	            0x85c0	                           test eax, eax	       359	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_3
0x40010ec	            0x7917	                           jns 0x4001105	       359	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_3
0x40010ee	      0x4c8b7c2430	            mov r15, qword [rsp + 0x30] 	       359	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_3
0x40010f3	    0x488dbc24c002	                  lea rdi, [rsp + 0x2c0]	       361	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_5
0x40010fb	      0xe800000000	                          call 0x4001100	       361	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_5
0x4001100	      0xe922020000	                           jmp 0x4001327	       361	xmerge.c	FUNCTION_11	FOR_1	IF_4	CALL_5
0x4001105	      0x4c8b7c2478	            mov r15, qword [rsp + 0x78] 	       364	xmerge.c	FUNCTION_11	FOR_1	IF_5
0x400110a	          0x4d85ff	                           test r15, r15	       364	xmerge.c	FUNCTION_11	FOR_1	IF_5
0x400110d	            0x7519	                           jne 0x4001128	       364	xmerge.c	FUNCTION_11	FOR_1	IF_5
0x400110f	    0x488dbc24c002	                  lea rdi, [rsp + 0x2c0]	       366	xmerge.c	FUNCTION_11	FOR_1	IF_5	CALL_6
0x4001117	      0xe800000000	                          call 0x400111c	       366	xmerge.c	FUNCTION_11	FOR_1	IF_5	CALL_6
0x400111c	    0xc74308040000	                  mov dword [rbx + 8], 4	       367	xmerge.c	FUNCTION_11	FOR_1	IF_5
0x4001123	      0xe9d7000000	                           jmp 0x40011ff	       367	xmerge.c	FUNCTION_11	FOR_1	IF_5
0x4001128	          0x4d63f6	                        movsxd r14, r14d	       371	xmerge.c	FUNCTION_11	FOR_1
0x400112b	          0x4c89f0	                            mov rax, r14	       371	xmerge.c	FUNCTION_11	FOR_1
0x400112e	        0x49034708	                add rax, qword [r15 + 8]	       371	xmerge.c	FUNCTION_11	FOR_1
0x4001132	        0x48894310	             mov qword [rbx + 0x10], rax	       371	xmerge.c	FUNCTION_11	FOR_1
0x4001136	        0x498b4718	            mov rax, qword [r15 + 0x18] 	       372	xmerge.c	FUNCTION_11	FOR_1
0x400113a	        0x48894320	             mov qword [rbx + 0x20], rax	       372	xmerge.c	FUNCTION_11	FOR_1
0x400113e	          0x4d63ed	                        movsxd r13, r13d	       373	xmerge.c	FUNCTION_11	FOR_1
0x4001141	          0x4c89e8	                            mov rax, r13	       373	xmerge.c	FUNCTION_11	FOR_1
0x4001144	        0x49034710	             add rax, qword [r15 + 0x10]	       373	xmerge.c	FUNCTION_11	FOR_1
0x4001148	        0x48894318	             mov qword [rbx + 0x18], rax	       373	xmerge.c	FUNCTION_11	FOR_1
0x400114c	        0x498b4720	            mov rax, qword [r15 + 0x20] 	       374	xmerge.c	FUNCTION_11	FOR_1
0x4001150	        0x48894328	             mov qword [rbx + 0x28], rax	       374	xmerge.c	FUNCTION_11	FOR_1
0x4001154	          0x4d8b27	                    mov r12, qword [r15]	       375	xmerge.c	FUNCTION_11	FOR_1	WHILE_1
0x4001157	          0x4d85e4	                           test r12, r12	       375	xmerge.c	FUNCTION_11	FOR_1	WHILE_1
0x400115a	     0xf8484000000	                            je 0x40011e4	       375	xmerge.c	FUNCTION_11	FOR_1	WHILE_1
0x4001160	      0xbf40000000	                           mov edi, 0x40	       376	xmerge.c	FUNCTION_11	FOR_1	WHILE_1	CALL_7
0x4001165	      0xe800000000	                          call 0x400116a	       376	xmerge.c	FUNCTION_11	FOR_1	WHILE_1	CALL_7
0x400116a	          0x4885c0	                           test rax, rax	       377	xmerge.c	FUNCTION_11	FOR_1	WHILE_1	IF_6
0x400116d	            0x7525	                           jne 0x4001194	       377	xmerge.c	FUNCTION_11	FOR_1	WHILE_1	IF_6
0x400116f	          0x4c89fb	                            mov rbx, r15	       377	xmerge.c	FUNCTION_11	FOR_1	WHILE_1	IF_6
0x4001172	      0x4c8b7c2430	            mov r15, qword [rsp + 0x30] 	       377	xmerge.c	FUNCTION_11	FOR_1	WHILE_1	IF_6
0x4001177	    0x488d8424c002	                  lea rax, [rsp + 0x2c0]	       378	xmerge.c	FUNCTION_11	FOR_1	WHILE_1	IF_6	CALL_8
0x400117f	          0x4889c7	                            mov rdi, rax	       378	xmerge.c	FUNCTION_11	FOR_1	WHILE_1	IF_6	CALL_8
0x4001182	      0xe800000000	                          call 0x4001187	       378	xmerge.c	FUNCTION_11	FOR_1	WHILE_1	IF_6	CALL_8
0x4001187	          0x4889df	                            mov rdi, rbx	       379	xmerge.c	FUNCTION_11	FOR_1	WHILE_1	IF_6	CALL_9
0x400118a	      0xe800000000	                          call 0x400118f	       379	xmerge.c	FUNCTION_11	FOR_1	WHILE_1	IF_6	CALL_9
0x400118f	      0xe993010000	                           jmp 0x4001327	       379	xmerge.c	FUNCTION_11	FOR_1	WHILE_1	IF_6	CALL_9
0x4001194	      0x4c89642478	             mov qword [rsp + 0x78], r12	       382	xmerge.c	FUNCTION_11	FOR_1	WHILE_1
0x4001199	          0x488b13	                    mov rdx, qword [rbx]	       383	xmerge.c	FUNCTION_11	FOR_1	WHILE_1
0x400119c	          0x488910	                    mov qword [rax], rdx	       383	xmerge.c	FUNCTION_11	FOR_1	WHILE_1
0x400119f	          0x488903	                    mov qword [rbx], rax	       384	xmerge.c	FUNCTION_11	FOR_1	WHILE_1
0x40011a2	    0xc74008000000	                  mov dword [rax + 8], 0	       386	xmerge.c	FUNCTION_11	FOR_1	WHILE_1
0x40011a9	      0x488b542478	            mov rdx, qword [rsp + 0x78] 	       387	xmerge.c	FUNCTION_11	FOR_1	WHILE_1
0x40011ae	          0x4c89f1	                            mov rcx, r14	       387	xmerge.c	FUNCTION_11	FOR_1	WHILE_1
0x40011b1	        0x48034a08	                add rcx, qword [rdx + 8]	       387	xmerge.c	FUNCTION_11	FOR_1	WHILE_1
0x40011b5	        0x48894810	             mov qword [rax + 0x10], rcx	       387	xmerge.c	FUNCTION_11	FOR_1	WHILE_1
0x40011b9	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	       388	xmerge.c	FUNCTION_11	FOR_1	WHILE_1
0x40011bd	        0x48894820	             mov qword [rax + 0x20], rcx	       388	xmerge.c	FUNCTION_11	FOR_1	WHILE_1
0x40011c1	          0x4c89e9	                            mov rcx, r13	       389	xmerge.c	FUNCTION_11	FOR_1	WHILE_1
0x40011c4	        0x48034a10	             add rcx, qword [rdx + 0x10]	       389	xmerge.c	FUNCTION_11	FOR_1	WHILE_1
0x40011c8	        0x48894818	             mov qword [rax + 0x18], rcx	       389	xmerge.c	FUNCTION_11	FOR_1	WHILE_1
0x40011cc	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	       390	xmerge.c	FUNCTION_11	FOR_1	WHILE_1
0x40011d0	        0x48894828	             mov qword [rax + 0x28], rcx	       390	xmerge.c	FUNCTION_11	FOR_1	WHILE_1
0x40011d4	          0x4c8b22	                    mov r12, qword [rdx]	       375	xmerge.c	FUNCTION_11	FOR_1	WHILE_1
0x40011d7	          0x4889c3	                            mov rbx, rax	       376	xmerge.c	FUNCTION_11	FOR_1	WHILE_1	CALL_7
0x40011da	          0x4d85e4	                           test r12, r12	       375	xmerge.c	FUNCTION_11	FOR_1	WHILE_1
0x40011dd	            0x7581	                           jne 0x4001160	       375	xmerge.c	FUNCTION_11	FOR_1	WHILE_1
0x40011df	          0x4889c5	                            mov rbp, rax	       375	xmerge.c	FUNCTION_11	FOR_1	WHILE_1
0x40011e2	            0xeb03	                           jmp 0x40011e7	       375	xmerge.c	FUNCTION_11	FOR_1	WHILE_1
0x40011e4	          0x4889dd	                            mov rbp, rbx	       375	xmerge.c	FUNCTION_11	FOR_1	WHILE_1
0x40011e7	    0x488dbc24c002	                  lea rdi, [rsp + 0x2c0]	       392	xmerge.c	FUNCTION_11	FOR_1	CALL_10
0x40011ef	      0xe800000000	                          call 0x40011f4	       392	xmerge.c	FUNCTION_11	FOR_1	CALL_10
0x40011f4	          0x4c89ff	                            mov rdi, r15	       393	xmerge.c	FUNCTION_11	FOR_1	CALL_11
0x40011f7	      0xe800000000	                          call 0x40011fc	       393	xmerge.c	FUNCTION_11	FOR_1	CALL_11
0x40011fc	          0x4889eb	                            mov rbx, rbp	       393	xmerge.c	FUNCTION_11	FOR_1	CALL_11
0x40011ff	          0x488b1b	                    mov rbx, qword [rbx]	       332	xmerge.c	FUNCTION_11	FOR_1
0x4001202	          0x4885db	                           test rbx, rbx	       332	xmerge.c	FUNCTION_11	FOR_1
0x4001205	     0xf85d9fdffff	                           jne 0x4000fe4	       332	xmerge.c	FUNCTION_11	FOR_1
0x400120b	      0x448b6c2448	           mov r13d, dword [rsp + 0x48] 	       332	xmerge.c	FUNCTION_11	FOR_1
0x4001210	      0x4c8b7c2430	            mov r15, qword [rsp + 0x30] 	       332	xmerge.c	FUNCTION_11	FOR_1
0x4001215	      0x4c8b742438	            mov r14, qword [rsp + 0x38] 	       332	xmerge.c	FUNCTION_11	FOR_1
0x400121a	    0xc74424380000	               mov dword [rsp + 0x38], 0	       332	xmerge.c	FUNCTION_11	FOR_1
0x4001222	      0x44896c2440	            mov dword [rsp + 0x40], r13d	       332	xmerge.c	FUNCTION_11	FOR_1
0x4001227	      0x4c897c2448	             mov qword [rsp + 0x48], r15	       332	xmerge.c	FUNCTION_11	FOR_1
0x400122c	          0x4d89fd	                            mov r13, r15	       332	xmerge.c	FUNCTION_11	FOR_1
0x400122f	      0x4c89742450	             mov qword [rsp + 0x50], r14	       332	xmerge.c	FUNCTION_11	FOR_1
0x4001234	            0xeb03	                           jmp 0x4001239	       332	xmerge.c	FUNCTION_11	FOR_1
0x4001236	          0x4d89e5	                            mov r13, r12	       332	xmerge.c	FUNCTION_11	FOR_1
0x4001239	        0x4d8b6500	                    mov r12, qword [r13]	       441	xmerge.c	FUNCTION_15	FOR_1
0x400123d	          0x4d85e4	                           test r12, r12	       444	xmerge.c	FUNCTION_15	FOR_1	IF_2
0x4001240	     0xf84c9000000	                            je 0x400130f	       444	xmerge.c	FUNCTION_15	FOR_1	IF_2
0x4001246	      0x41837d0800	                  cmp dword [r13 + 8], 0	       450	xmerge.c	FUNCTION_15	FOR_1	IF_3
0x400124b	            0x75e9	                           jne 0x4001236	       450	xmerge.c	FUNCTION_15	FOR_1	IF_3
0x400124d	    0x41837c240800	                  cmp dword [r12 + 8], 0	       450	xmerge.c	FUNCTION_15	FOR_1	IF_3
0x4001253	            0x75e1	                           jne 0x4001236	       450	xmerge.c	FUNCTION_15	FOR_1	IF_3
0x4001255	        0x498b4510	            mov rax, qword [r13 + 0x10] 	       447	xmerge.c	FUNCTION_15	FOR_1
0x4001259	      0x4889442408	                mov qword [rsp + 8], rax	       447	xmerge.c	FUNCTION_15	FOR_1
0x400125e	        0x41034520	             add eax, dword [r13 + 0x20]	       447	xmerge.c	FUNCTION_15	FOR_1
0x4001262	          0x4189c6	                           mov r14d, eax	       447	xmerge.c	FUNCTION_15	FOR_1
0x4001265	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	       448	xmerge.c	FUNCTION_15	FOR_1
0x400126a	      0x4889742430	             mov qword [rsp + 0x30], rsi	       448	xmerge.c	FUNCTION_15	FOR_1
0x400126f	            0x89f2	                            mov edx, esi	       451	xmerge.c	FUNCTION_15	FOR_1	IF_3
0x4001271	            0x29c2	                            sub edx, eax	       451	xmerge.c	FUNCTION_15	FOR_1	IF_3
0x4001273	          0x83fa03	                              cmp edx, 3	       450	xmerge.c	FUNCTION_15	FOR_1	IF_3
0x4001276	            0x7e55	                           jle 0x40012cd	       450	xmerge.c	FUNCTION_15	FOR_1	IF_3
0x4001278	      0x837c244002	               cmp dword [rsp + 0x40], 2	       451	xmerge.c	FUNCTION_15	FOR_1	IF_3
0x400127d	            0x7eb7	                           jle 0x4001236	       451	xmerge.c	FUNCTION_15	FOR_1	IF_3
0x400127f	            0x85d2	                           test edx, edx	       408	xmerge.c	FUNCTION_13	FOR_1
0x4001281	            0x744a	                            je 0x40012cd	       408	xmerge.c	FUNCTION_13	FOR_1
0x4001283	    0x4c8bbc248801	           mov r15, qword [rsp + 0x188] 	       410	xmerge.c	FUNCTION_13	FOR_1	IF_1
0x400128b	             0x1d0	                            add eax, edx	       410	xmerge.c	FUNCTION_13	FOR_1	IF_1
0x400128d	      0x4c896c2458	             mov qword [rsp + 0x58], r13	       410	xmerge.c	FUNCTION_13	FOR_1	IF_1
0x4001292	          0x4189c5	                           mov r13d, eax	       410	xmerge.c	FUNCTION_13	FOR_1	IF_1
0x4001295	          0x4963c6	                        movsxd rax, r14d	       410	xmerge.c	FUNCTION_13	FOR_1	IF_1
0x4001298	        0x498b04c7	            mov rax, qword [r15 + rax*8]	       410	xmerge.c	FUNCTION_13	FOR_1	IF_1
0x400129c	        0x488b5808	                mov rbx, qword [rax + 8]	       409	xmerge.c	FUNCTION_13	FOR_1	IF_1	CALL_1
0x40012a0	          0x4889dd	                            mov rbp, rbx	       409	xmerge.c	FUNCTION_13	FOR_1	IF_1	CALL_1
0x40012a3	        0x48036810	             add rbp, qword [rax + 0x10]	       409	xmerge.c	FUNCTION_13	FOR_1	IF_1	CALL_1
0x40012a7	            0xeb1a	                           jmp 0x40012c3	       409	xmerge.c	FUNCTION_13	FOR_1	IF_1	CALL_1
0x40012a9	      0xe800000000	                          call 0x40012ae	       401	xmerge.c	FUNCTION_12	WHILE_1	IF_1	CALL_1
0x40012ae	        0x4883c301	                              add rbx, 1	       401	xmerge.c	FUNCTION_12	WHILE_1	IF_1	CALL_1
0x40012b2	         0xfb653ff	               movzx edx, byte [rbx - 1]	       401	xmerge.c	FUNCTION_12	WHILE_1	IF_1	CALL_1
0x40012b6	          0x488b00	                    mov rax, qword [rax]	       401	xmerge.c	FUNCTION_12	WHILE_1	IF_1	CALL_1
0x40012b9	        0xf6045008	              test byte [rax + rdx*2], 8	       401	xmerge.c	FUNCTION_12	WHILE_1	IF_1	CALL_1
0x40012bd	     0xf8573ffffff	                           jne 0x4001236	       401	xmerge.c	FUNCTION_12	WHILE_1	IF_1	CALL_1
0x40012c3	          0x4839dd	                            cmp rbp, rbx	       400	xmerge.c	FUNCTION_12	WHILE_1
0x40012c6	            0x75e1	                           jne 0x40012a9	       400	xmerge.c	FUNCTION_12	WHILE_1
0x40012c8	      0xe97c010000	                           jmp 0x4001449	       400	xmerge.c	FUNCTION_12	WHILE_1
0x40012cd	      0x8344243801	               add dword [rsp + 0x38], 1	       456	xmerge.c	FUNCTION_15	FOR_1	ELSE_1
0x40012d2	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       422	xmerge.c	FUNCTION_14
0x40012d7	      0x4903442420	             add rax, qword [r12 + 0x20]	       422	xmerge.c	FUNCTION_14
0x40012dc	      0x482b442408	                sub rax, qword [rsp + 8]	       422	xmerge.c	FUNCTION_14
0x40012e1	        0x49894520	             mov qword [r13 + 0x20], rax	       422	xmerge.c	FUNCTION_14
0x40012e5	      0x498b442428	            mov rax, qword [r12 + 0x28] 	       423	xmerge.c	FUNCTION_14
0x40012ea	      0x4903442418	             add rax, qword [r12 + 0x18]	       423	xmerge.c	FUNCTION_14
0x40012ef	        0x492b4518	             sub rax, qword [r13 + 0x18]	       423	xmerge.c	FUNCTION_14
0x40012f3	        0x49894528	             mov qword [r13 + 0x28], rax	       423	xmerge.c	FUNCTION_14
0x40012f7	        0x498b0424	                    mov rax, qword [r12]	       424	xmerge.c	FUNCTION_14
0x40012fb	        0x49894500	                    mov qword [r13], rax	       424	xmerge.c	FUNCTION_14
0x40012ff	          0x4c89e7	                            mov rdi, r12	       425	xmerge.c	FUNCTION_14	CALL_1
0x4001302	      0xe800000000	                          call 0x4001307	       425	xmerge.c	FUNCTION_14	CALL_1
0x4001307	          0x4d89ec	                            mov r12, r13	       425	xmerge.c	FUNCTION_14	CALL_1
0x400130a	      0xe927ffffff	                           jmp 0x4001236	       425	xmerge.c	FUNCTION_14	CALL_1
0x400130f	      0x4c8b7c2448	            mov r15, qword [rsp + 0x48] 	       425	xmerge.c	FUNCTION_14	CALL_1
0x4001314	      0x4c8b742450	            mov r14, qword [rsp + 0x50] 	       425	xmerge.c	FUNCTION_14	CALL_1
0x4001319	      0x837c243800	               cmp dword [rsp + 0x38], 0	       607	xmerge.c	FUNCTION_16	IF_19	CALL_12
0x400131e	            0x7919	                           jns 0x4001339	       607	xmerge.c	FUNCTION_16	IF_19	CALL_12
0x4001320	            0xeb05	                           jmp 0x4001327	       607	xmerge.c	FUNCTION_16	IF_19	CALL_12
0x4001322	      0x4c8b7c2430	            mov r15, qword [rsp + 0x30] 	       607	xmerge.c	FUNCTION_16	IF_19	CALL_12
0x4001327	          0x4c89ff	                            mov rdi, r15	       610	xmerge.c	FUNCTION_16	IF_19	CALL_14
0x400132a	      0xe862f0ffff	              call sym.xdl_cleanup_merge	       610	xmerge.c	FUNCTION_16	IF_19	CALL_14
0x400132f	      0xbbffffffff	                     mov ebx, 0xffffffff	       611	xmerge.c	FUNCTION_16	IF_19
0x4001334	      0xe9b5000000	                           jmp 0x40013ee	       611	xmerge.c	FUNCTION_16	IF_19
0x4001339	        0x4c8b2424	                    mov r12, qword [rsp]	       614	xmerge.c	FUNCTION_16	IF_20
0x400133d	          0x4d85e4	                           test r12, r12	       614	xmerge.c	FUNCTION_16	IF_20
0x4001340	     0xf849e000000	                            je 0x40013e4	       614	xmerge.c	FUNCTION_16	IF_20
0x4001346	        0x418b6e18	            mov ebp, dword [r14 + 0x18] 	       615	xmerge.c	FUNCTION_16	IF_20
0x400134a	              0x55	                                push rbp	       616	xmerge.c	FUNCTION_16	IF_20	CALL_15
0x400134b	        0x8b442430	            mov eax, dword [rsp + 0x30] 	       616	xmerge.c	FUNCTION_16	IF_20	CALL_15
0x400134f	              0x50	                                push rax	       616	xmerge.c	FUNCTION_16	IF_20	CALL_15
0x4001350	            0x6a00	                                  push 0	       616	xmerge.c	FUNCTION_16	IF_20	CALL_15
0x4001352	            0x4157	                                push r15	       616	xmerge.c	FUNCTION_16	IF_20	CALL_15
0x4001354	      0x448b4c244c	            mov r9d, dword [rsp + 0x4c] 	       616	xmerge.c	FUNCTION_16	IF_20	CALL_15
0x4001359	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	       616	xmerge.c	FUNCTION_16	IF_20	CALL_15
0x400135e	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	       616	xmerge.c	FUNCTION_16	IF_20	CALL_15
0x4001363	    0x488d9424d001	                  lea rdx, [rsp + 0x1d0]	       616	xmerge.c	FUNCTION_16	IF_20	CALL_15
0x400136b	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	       616	xmerge.c	FUNCTION_16	IF_20	CALL_15
0x4001370	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	       616	xmerge.c	FUNCTION_16	IF_20	CALL_15
0x4001378	      0xe84df0ffff	          call sym.xdl_fill_merge_buffer	       616	xmerge.c	FUNCTION_16	IF_20	CALL_15
0x400137d	            0x89c3	                            mov ebx, eax	       616	xmerge.c	FUNCTION_16	IF_20	CALL_15
0x400137f	        0x4883c420	                           add rsp, 0x20	       620	xmerge.c	FUNCTION_16	IF_20	CALL_16
0x4001383	          0x4863f8	                         movsxd rdi, eax	       620	xmerge.c	FUNCTION_16	IF_20	CALL_16
0x4001386	      0xe800000000	                          call 0x400138b	       620	xmerge.c	FUNCTION_16	IF_20	CALL_16
0x400138b	        0x49890424	                    mov qword [r12], rax	       620	xmerge.c	FUNCTION_16	IF_20	CALL_16
0x400138f	          0x4885c0	                           test rax, rax	       621	xmerge.c	FUNCTION_16	IF_20	IF_21
0x4001392	            0x750f	                           jne 0x40013a3	       621	xmerge.c	FUNCTION_16	IF_20	IF_21
0x4001394	          0x4c89ff	                            mov rdi, r15	       622	xmerge.c	FUNCTION_16	IF_20	IF_21	CALL_17
0x4001397	      0xe8f5efffff	              call sym.xdl_cleanup_merge	       622	xmerge.c	FUNCTION_16	IF_20	IF_21	CALL_17
0x400139c	      0xbbffffffff	                     mov ebx, 0xffffffff	       623	xmerge.c	FUNCTION_16	IF_20	IF_21
0x40013a1	            0xeb4b	                           jmp 0x40013ee	       623	xmerge.c	FUNCTION_16	IF_20	IF_21
0x40013a3	          0x4863db	                         movsxd rbx, ebx	       625	xmerge.c	FUNCTION_16	IF_20
0x40013a6	        0x488b3424	                    mov rsi, qword [rsp]	       625	xmerge.c	FUNCTION_16	IF_20
0x40013aa	        0x48895e08	                mov qword [rsi + 8], rbx	       625	xmerge.c	FUNCTION_16	IF_20
0x40013ae	              0x55	                                push rbp	       626	xmerge.c	FUNCTION_16	IF_20	CALL_18
0x40013af	        0x8b742430	            mov esi, dword [rsp + 0x30] 	       626	xmerge.c	FUNCTION_16	IF_20	CALL_18
0x40013b3	              0x56	                                push rsi	       626	xmerge.c	FUNCTION_16	IF_20	CALL_18
0x40013b4	              0x50	                                push rax	       626	xmerge.c	FUNCTION_16	IF_20	CALL_18
0x40013b5	            0x4157	                                push r15	       626	xmerge.c	FUNCTION_16	IF_20	CALL_18
0x40013b7	      0x448b4c244c	            mov r9d, dword [rsp + 0x4c] 	       626	xmerge.c	FUNCTION_16	IF_20	CALL_18
0x40013bc	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	       626	xmerge.c	FUNCTION_16	IF_20	CALL_18
0x40013c1	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	       626	xmerge.c	FUNCTION_16	IF_20	CALL_18
0x40013c6	    0x488d9424d001	                  lea rdx, [rsp + 0x1d0]	       626	xmerge.c	FUNCTION_16	IF_20	CALL_18
0x40013ce	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	       626	xmerge.c	FUNCTION_16	IF_20	CALL_18
0x40013d3	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	       626	xmerge.c	FUNCTION_16	IF_20	CALL_18
0x40013db	      0xe8eaefffff	          call sym.xdl_fill_merge_buffer	       626	xmerge.c	FUNCTION_16	IF_20	CALL_18
0x40013e0	        0x4883c420	                           add rsp, 0x20	       626	xmerge.c	FUNCTION_16	IF_20	CALL_18
0x40013e4	          0x4c89ff	                            mov rdi, r15	       630	xmerge.c	FUNCTION_16	CALL_19
0x40013e7	      0xe8a5efffff	              call sym.xdl_cleanup_merge	       630	xmerge.c	FUNCTION_16	CALL_19
0x40013ec	            0x89c3	                            mov ebx, eax	       630	xmerge.c	FUNCTION_16	CALL_19
0x40013ee	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	       679	xmerge.c	FUNCTION_17	CALL_19
0x40013f3	      0xe800000000	                          call 0x40013f8	       679	xmerge.c	FUNCTION_17	CALL_19
0x40013f8	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	       680	xmerge.c	FUNCTION_17	CALL_20
0x40013fd	      0xe800000000	                          call 0x4001402	       680	xmerge.c	FUNCTION_17	CALL_20
0x4001402	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	       682	xmerge.c	FUNCTION_17	CALL_21
0x400140a	      0xe800000000	                          call 0x400140f	       682	xmerge.c	FUNCTION_17	CALL_21
0x400140f	    0x488dbc24b001	                  lea rdi, [rsp + 0x1b0]	       683	xmerge.c	FUNCTION_17	CALL_22
0x4001417	      0xe800000000	                          call 0x400141c	       683	xmerge.c	FUNCTION_17	CALL_22
0x400141c	            0x89d8	                            mov eax, ebx	       685	xmerge.c	FUNCTION_17
0x400141e	            0xeb05	                           jmp 0x4001425	       685	xmerge.c	FUNCTION_17
0x4001420	      0xb8ffffffff	                     mov eax, 0xffffffff	       645	xmerge.c	FUNCTION_17	IF_1
0x4001425	    0x488bb424d803	           mov rsi, qword [rsp + 0x3d8] 	       686	xmerge.c	FUNCTION_17
0x400142d	    0x644833342528	                xor rsi, qword fs:[0x28]	       686	xmerge.c	FUNCTION_17
0x4001436	            0x742d	                            je 0x4001465	       686	xmerge.c	FUNCTION_17
0x4001438	            0xeb26	                           jmp 0x4001460	       686	xmerge.c	FUNCTION_17
0x400143a	        0x4183fd01	                             cmp r13d, 1	       606	xmerge.c	FUNCTION_16	IF_19
0x400143e	     0xf8f81fbffff	                            jg 0x4000fc5	       606	xmerge.c	FUNCTION_16	IF_19
0x4001444	      0xe9f0feffff	                           jmp 0x4001339	       606	xmerge.c	FUNCTION_16	IF_19
0x4001449	        0x4183c601	                             add r14d, 1	       408	xmerge.c	FUNCTION_13	FOR_1
0x400144d	          0x4539f5	                          cmp r13d, r14d	       408	xmerge.c	FUNCTION_13	FOR_1
0x4001450	     0xf853ffeffff	                           jne 0x4001295	       408	xmerge.c	FUNCTION_13	FOR_1
0x4001456	      0x4c8b6c2458	            mov r13, qword [rsp + 0x58] 	       408	xmerge.c	FUNCTION_13	FOR_1
0x400145b	      0xe96dfeffff	                           jmp 0x40012cd	       408	xmerge.c	FUNCTION_13	FOR_1
0x4001460	      0xe800000000	                          call 0x4001465	       686	xmerge.c	FUNCTION_17
0x4001465	    0x4881c4e80300	                          add rsp, 0x3e8	       686	xmerge.c	FUNCTION_17
0x400146c	              0x5b	                                 pop rbx	       686	xmerge.c	FUNCTION_17
0x400146d	              0x5d	                                 pop rbp	       686	xmerge.c	FUNCTION_17
0x400146e	            0x415c	                                 pop r12	       686	xmerge.c	FUNCTION_17
0x4001470	            0x415d	                                 pop r13	       686	xmerge.c	FUNCTION_17
0x4001472	            0x415e	                                 pop r14	       686	xmerge.c	FUNCTION_17
0x4001474	            0x415f	                                 pop r15	       686	xmerge.c	FUNCTION_17
0x4001476	              0xc3	                                     ret	       686	xmerge.c	FUNCTION_17
is_cr_needed	IF,2:DO,0:FOR,0:functions,0:WHILE,0:ELSE,0:CALL,3:SWITCH,0	34
0x40000f1	            0x4154	                                push r12	       182	xmerge.c	FUNCTION_8
0x40000f3	              0x55	                                push rbp	       182	xmerge.c	FUNCTION_8
0x40000f4	              0x53	                                push rbx	       182	xmerge.c	FUNCTION_8
0x40000f5	          0x4889fb	                            mov rbx, rdi	       182	xmerge.c	FUNCTION_8
0x40000f8	          0x4889f5	                            mov rbp, rsi	       182	xmerge.c	FUNCTION_8
0x40000fb	          0x4989d4	                            mov r12, rdx	       182	xmerge.c	FUNCTION_8
0x40000fe	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       186	xmerge.c	FUNCTION_8	CALL_1
0x4000102	          0x8d42ff	                      lea eax, [rdx - 1]	       186	xmerge.c	FUNCTION_8	CALL_1
0x4000105	          0x4885d2	                           test rdx, rdx	       186	xmerge.c	FUNCTION_8	CALL_1
0x4000108	      0xbe00000000	                              mov esi, 0	       186	xmerge.c	FUNCTION_8	CALL_1
0x400010d	           0xf45f0	                         cmovne esi, eax	       186	xmerge.c	FUNCTION_8	CALL_1
0x4000110	    0x488dbf880000	                   lea rdi, [rdi + 0x88]	       186	xmerge.c	FUNCTION_8	CALL_1
0x4000117	      0xe824ffffff	                    call sym.is_eol_crlf	       186	xmerge.c	FUNCTION_8	CALL_1
0x400011c	            0x85c0	                           test eax, eax	       187	xmerge.c	FUNCTION_8	IF_1
0x400011e	            0x7430	                            je 0x4000150	       187	xmerge.c	FUNCTION_8	IF_1
0x4000120	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	       188	xmerge.c	FUNCTION_8	CALL_2
0x4000125	          0x8d42ff	                      lea eax, [rdx - 1]	       188	xmerge.c	FUNCTION_8	CALL_2
0x4000128	          0x4885d2	                           test rdx, rdx	       188	xmerge.c	FUNCTION_8	CALL_2
0x400012b	      0xbe00000000	                              mov esi, 0	       188	xmerge.c	FUNCTION_8	CALL_2
0x4000130	           0xf45f0	                         cmovne esi, eax	       188	xmerge.c	FUNCTION_8	CALL_2
0x4000133	    0x488dbd880000	                   lea rdi, [rbp + 0x88]	       188	xmerge.c	FUNCTION_8	CALL_2
0x400013a	      0xe801ffffff	                    call sym.is_eol_crlf	       188	xmerge.c	FUNCTION_8	CALL_2
0x400013f	            0x85c0	                           test eax, eax	       190	xmerge.c	FUNCTION_8	IF_2
0x4000141	            0x740d	                            je 0x4000150	       190	xmerge.c	FUNCTION_8	IF_2
0x4000143	      0xbe00000000	                              mov esi, 0	       191	xmerge.c	FUNCTION_8	CALL_3
0x4000148	          0x4889df	                            mov rdi, rbx	       191	xmerge.c	FUNCTION_8	CALL_3
0x400014b	      0xe8f0feffff	                    call sym.is_eol_crlf	       191	xmerge.c	FUNCTION_8	CALL_3
0x4000150	            0x85c0	                           test eax, eax	       193	xmerge.c	FUNCTION_8
0x4000152	      0xba00000000	                              mov edx, 0	       193	xmerge.c	FUNCTION_8
0x4000157	           0xf48c2	                          cmovs eax, edx	       193	xmerge.c	FUNCTION_8
0x400015a	              0x5b	                                 pop rbx	       194	xmerge.c	FUNCTION_8
0x400015b	              0x5d	                                 pop rbp	       194	xmerge.c	FUNCTION_8
0x400015c	            0x415c	                                 pop r12	       194	xmerge.c	FUNCTION_8
0x400015e	              0xc3	                                     ret	       194	xmerge.c	FUNCTION_8
