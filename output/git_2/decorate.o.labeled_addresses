insert_decoration	ELSE,0:FOR,0:SWITCH,0:CALL,1:functions,0:IF,2:WHILE,1:DO,0	26
0x4000040	          0x4989d3	                            mov r11, rdx	        15	decorate.c	FUNCTION_2
0x4000043	        0x448b4708	                mov r8d, dword [rdi + 8]	        16	decorate.c	FUNCTION_2
0x4000047	        0x4c8b4f10	              mov r9, qword [rdi + 0x10]	        17	decorate.c	FUNCTION_2
0x400004b	          0x8b4604	                mov eax, dword [rsi + 4]	        11	decorate.c	FUNCTION_1	CALL_1
0x400004e	      0xba00000000	                              mov edx, 0	        11	decorate.c	FUNCTION_1	CALL_1
0x4000053	          0x41f7f0	                                 div r8d	        11	decorate.c	FUNCTION_1	CALL_1
0x4000056	    0x41ba00000000	                             mov r10d, 0	        27	decorate.c	FUNCTION_2	WHILE_1	IF_2
0x400005c	            0xeb18	                           jmp 0x4000076	        20	decorate.c	FUNCTION_2	WHILE_1
0x400005e	          0x4839c6	                            cmp rsi, rax	        21	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x4000061	            0x7509	                           jne 0x400006c	        21	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x4000063	        0x488b4108	                mov rax, qword [rcx + 8]	        22	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x4000067	        0x4c895908	                mov qword [rcx + 8], r11	        23	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x400006b	              0xc3	                                     ret	        24	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x400006c	          0x83c201	                              add edx, 1	        26	decorate.c	FUNCTION_2	WHILE_1	IF_2
0x400006f	          0x4139d0	                            cmp r8d, edx	        26	decorate.c	FUNCTION_2	WHILE_1	IF_2
0x4000072	        0x410f46d2	                        cmovbe edx, r10d	        27	decorate.c	FUNCTION_2	WHILE_1	IF_2
0x4000076	            0x89d1	                            mov ecx, edx	        20	decorate.c	FUNCTION_2	WHILE_1
0x4000078	        0x48c1e104	                              shl rcx, 4	        20	decorate.c	FUNCTION_2	WHILE_1
0x400007c	          0x4c01c9	                             add rcx, r9	        20	decorate.c	FUNCTION_2	WHILE_1
0x400007f	          0x488b01	                    mov rax, qword [rcx]	        20	decorate.c	FUNCTION_2	WHILE_1
0x4000082	          0x4885c0	                           test rax, rax	        20	decorate.c	FUNCTION_2	WHILE_1
0x4000085	            0x75d7	                           jne 0x400005e	        20	decorate.c	FUNCTION_2	WHILE_1
0x4000087	          0x488931	                    mov qword [rcx], rsi	        29	decorate.c	FUNCTION_2
0x400008a	        0x4c895908	                mov qword [rcx + 8], r11	        30	decorate.c	FUNCTION_2
0x400008e	        0x83470c01	                add dword [rdi + 0xc], 1	        31	decorate.c	FUNCTION_2
0x4000092	              0xc3	                                     ret	        33	decorate.c	FUNCTION_2
add_decoration	ELSE,0:FOR,0:SWITCH,0:CALL,2:functions,0:IF,1:WHILE,0:DO,0	60
0x4000093	            0x4157	                                push r15	        58	decorate.c	FUNCTION_4
0x4000095	            0x4156	                                push r14	        58	decorate.c	FUNCTION_4
0x4000097	            0x4155	                                push r13	        58	decorate.c	FUNCTION_4
0x4000099	            0x4154	                                push r12	        58	decorate.c	FUNCTION_4
0x400009b	              0x55	                                push rbp	        58	decorate.c	FUNCTION_4
0x400009c	              0x53	                                push rbx	        58	decorate.c	FUNCTION_4
0x400009d	        0x4883ec08	                              sub rsp, 8	        58	decorate.c	FUNCTION_4
0x40000a1	          0x4889fd	                            mov rbp, rdi	        58	decorate.c	FUNCTION_4
0x40000a4	          0x4989f5	                            mov r13, rsi	        58	decorate.c	FUNCTION_4
0x40000a7	          0x4989d6	                            mov r14, rdx	        58	decorate.c	FUNCTION_4
0x40000aa	        0x448b6708	               mov r12d, dword [rdi + 8]	        61	decorate.c	FUNCTION_4	IF_1
0x40000ae	          0x8b470c	              mov eax, dword [rdi + 0xc]	        61	decorate.c	FUNCTION_4	IF_1
0x40000b1	          0x8d4801	                      lea ecx, [rax + 1]	        61	decorate.c	FUNCTION_4	IF_1
0x40000b4	        0x438d0424	                    lea eax, [r12 + r12]	        61	decorate.c	FUNCTION_4	IF_1
0x40000b8	      0xbaabaaaaaa	                     mov edx, 0xaaaaaaab	        61	decorate.c	FUNCTION_4	IF_1
0x40000bd	            0xf7e2	                                 mul edx	        61	decorate.c	FUNCTION_4	IF_1
0x40000bf	            0xd1ea	                              shr edx, 1	        61	decorate.c	FUNCTION_4	IF_1
0x40000c1	            0x39d1	                            cmp ecx, edx	        61	decorate.c	FUNCTION_4	IF_1
0x40000c3	            0x766b	                           jbe 0x4000130	        61	decorate.c	FUNCTION_4	IF_1
0x40000c5	        0x4c8b7f10	            mov r15, qword [rdi + 0x10] 	        39	decorate.c	FUNCTION_3
0x40000c9	    0x438d8464b80b	         lea eax, [r12 + r12*2 + 0xbb8] 	        41	decorate.c	FUNCTION_3
0x40000d1	            0x89c7	                            mov edi, eax	        41	decorate.c	FUNCTION_3
0x40000d3	          0xc1ef1f	                           shr edi, 0x1f	        41	decorate.c	FUNCTION_3
0x40000d6	             0x1c7	                            add edi, eax	        41	decorate.c	FUNCTION_3
0x40000d8	            0xd1ff	                              sar edi, 1	        41	decorate.c	FUNCTION_3
0x40000da	          0x897d08	                mov dword [rbp + 8], edi	        41	decorate.c	FUNCTION_3
0x40000dd	            0x89ff	                            mov edi, edi	        42	decorate.c	FUNCTION_3	CALL_1
0x40000df	      0xbe10000000	                           mov esi, 0x10	        42	decorate.c	FUNCTION_3	CALL_1
0x40000e4	      0xe800000000	                          call 0x40000e9	        42	decorate.c	FUNCTION_3	CALL_1
0x40000e9	        0x48894510	            mov qword [rbp + 0x10], rax 	        42	decorate.c	FUNCTION_3	CALL_1
0x40000ed	    0xc7450c000000	                mov dword [rbp + 0xc], 0	        43	decorate.c	FUNCTION_3
0x40000f4	          0x4585e4	                         test r12d, r12d	        45	decorate.c	FUNCTION_3	FOR_1
0x40000f7	            0x7e2f	                           jle 0x4000128	        45	decorate.c	FUNCTION_3	FOR_1
0x40000f9	        0x498d5f08	                      lea rbx, [r15 + 8]	        45	decorate.c	FUNCTION_3	FOR_1
0x40000fd	      0x418d4424ff	                      lea eax, [r12 - 1]	        45	decorate.c	FUNCTION_3	FOR_1
0x4000102	        0x48c1e004	                              shl rax, 4	        45	decorate.c	FUNCTION_3	FOR_1
0x4000106	      0x4d8d640718	            lea r12, [r15 + rax + 0x18] 	        45	decorate.c	FUNCTION_3	FOR_1
0x400010b	          0x488b13	                    mov rdx, qword [rbx]	        47	decorate.c	FUNCTION_3	FOR_1
0x400010e	          0x4885d2	                           test rdx, rdx	        49	decorate.c	FUNCTION_3	FOR_1	IF_1
0x4000111	            0x740c	                            je 0x400011f	        49	decorate.c	FUNCTION_3	FOR_1	IF_1
0x4000113	        0x488b73f8	                mov rsi, qword [rbx - 8]	        51	decorate.c	FUNCTION_3	FOR_1	CALL_2
0x4000117	          0x4889ef	                            mov rdi, rbp	        51	decorate.c	FUNCTION_3	FOR_1	CALL_2
0x400011a	      0xe821ffffff	              call sym.insert_decoration	        51	decorate.c	FUNCTION_3	FOR_1	CALL_2
0x400011f	        0x4883c310	                           add rbx, 0x10	        51	decorate.c	FUNCTION_3	FOR_1	CALL_2
0x4000123	          0x4c39e3	                            cmp rbx, r12	        45	decorate.c	FUNCTION_3	FOR_1
0x4000126	            0x75e3	                           jne 0x400010b	        45	decorate.c	FUNCTION_3	FOR_1
0x4000128	          0x4c89ff	                            mov rdi, r15	        53	decorate.c	FUNCTION_3	CALL_3
0x400012b	      0xe800000000	                          call 0x4000130	        53	decorate.c	FUNCTION_3	CALL_3
0x4000130	          0x4c89f2	                            mov rdx, r14	        63	decorate.c	FUNCTION_4	CALL_2
0x4000133	          0x4c89ee	                            mov rsi, r13	        63	decorate.c	FUNCTION_4	CALL_2
0x4000136	          0x4889ef	                            mov rdi, rbp	        63	decorate.c	FUNCTION_4	CALL_2
0x4000139	      0xe802ffffff	              call sym.insert_decoration	        63	decorate.c	FUNCTION_4	CALL_2
0x400013e	        0x4883c408	                              add rsp, 8	        64	decorate.c	FUNCTION_4
0x4000142	              0x5b	                                 pop rbx	        64	decorate.c	FUNCTION_4
0x4000143	              0x5d	                                 pop rbp	        64	decorate.c	FUNCTION_4
0x4000144	            0x415c	                                 pop r12	        64	decorate.c	FUNCTION_4
0x4000146	            0x415d	                                 pop r13	        64	decorate.c	FUNCTION_4
0x4000148	            0x415e	                                 pop r14	        64	decorate.c	FUNCTION_4
0x400014a	            0x415f	                                 pop r15	        64	decorate.c	FUNCTION_4
0x400014c	              0xc3	                                     ret	        64	decorate.c	FUNCTION_4
lookup_decoration	ELSE,0:FOR,1:SWITCH,0:CALL,1:functions,0:IF,4:WHILE,0:DO,0	26
0x400014d	        0x448b4708	                mov r8d, dword [rdi + 8]	        71	decorate.c	FUNCTION_5	IF_1
0x4000151	          0x4585c0	                           test r8d, r8d	        71	decorate.c	FUNCTION_5	IF_1
0x4000154	            0x743c	                            je 0x4000192	        71	decorate.c	FUNCTION_5	IF_1
0x4000156	          0x8b4604	                mov eax, dword [rsi + 4]	        11	decorate.c	FUNCTION_1	CALL_1
0x4000159	      0xba00000000	                              mov edx, 0	        11	decorate.c	FUNCTION_1	CALL_1
0x400015e	          0x41f7f0	                                 div r8d	        11	decorate.c	FUNCTION_1	CALL_1
0x4000161	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	        75	decorate.c	FUNCTION_5	FOR_1
0x4000165	    0x41b900000000	                              mov r9d, 0	        81	decorate.c	FUNCTION_5	FOR_1	IF_4
0x400016b	            0x89d0	                            mov eax, edx	        75	decorate.c	FUNCTION_5	FOR_1
0x400016d	        0x48c1e004	                              shl rax, 4	        75	decorate.c	FUNCTION_5	FOR_1
0x4000171	          0x4801f8	                            add rax, rdi	        75	decorate.c	FUNCTION_5	FOR_1
0x4000174	          0x488b08	                    mov rcx, qword [rax]	        76	decorate.c	FUNCTION_5	FOR_1	IF_2
0x4000177	          0x4839ce	                            cmp rsi, rcx	        76	decorate.c	FUNCTION_5	FOR_1	IF_2
0x400017a	            0x7505	                           jne 0x4000181	        76	decorate.c	FUNCTION_5	FOR_1	IF_2
0x400017c	        0x488b4008	                mov rax, qword [rax + 8]	        77	decorate.c	FUNCTION_5	FOR_1	IF_2
0x4000180	              0xc3	                                     ret	        77	decorate.c	FUNCTION_5	FOR_1	IF_2
0x4000181	          0x4885c9	                           test rcx, rcx	        78	decorate.c	FUNCTION_5	FOR_1	IF_3
0x4000184	            0x7412	                            je 0x4000198	        78	decorate.c	FUNCTION_5	FOR_1	IF_3
0x4000186	          0x83c201	                              add edx, 1	        80	decorate.c	FUNCTION_5	FOR_1	IF_4
0x4000189	          0x4139d0	                            cmp r8d, edx	        80	decorate.c	FUNCTION_5	FOR_1	IF_4
0x400018c	        0x410f44d1	                          cmove edx, r9d	        81	decorate.c	FUNCTION_5	FOR_1	IF_4
0x4000190	            0xebd9	                           jmp 0x400016b	        81	decorate.c	FUNCTION_5	FOR_1	IF_4
0x4000192	      0xb800000000	                              mov eax, 0	        72	decorate.c	FUNCTION_5	IF_1
0x4000197	              0xc3	                                     ret	        72	decorate.c	FUNCTION_5	IF_1
0x4000198	      0xb800000000	                              mov eax, 0	        79	decorate.c	FUNCTION_5	FOR_1	IF_3
0x400019d	              0xc3	                                     ret	        83	decorate.c	FUNCTION_5
