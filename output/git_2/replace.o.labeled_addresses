show_reference	ELSE,2:IF,4:WHILE,0:CALL,9:functions,0:FOR,0:DO,0:SWITCH,0	89
0x40008d0	            0x4157	                                push r15	        44	replace.c	FUNCTION_1
0x40008d2	            0x4156	                                push r14	        44	replace.c	FUNCTION_1
0x40008d4	            0x4155	                                push r13	        44	replace.c	FUNCTION_1
0x40008d6	            0x4154	                                push r12	        44	replace.c	FUNCTION_1
0x40008d8	              0x55	                                push rbp	        44	replace.c	FUNCTION_1
0x40008d9	              0x53	                                push rbx	        44	replace.c	FUNCTION_1
0x40008da	        0x4883ec28	                           sub rsp, 0x28	        44	replace.c	FUNCTION_1
0x40008de	          0x4889fd	                            mov rbp, rdi	        44	replace.c	FUNCTION_1
0x40008e1	          0x4989f5	                            mov r13, rsi	        44	replace.c	FUNCTION_1
0x40008e4	          0x4989cc	                            mov r12, rcx	        44	replace.c	FUNCTION_1
0x40008e7	    0x64488b042528	                mov rax, qword fs:[0x28]	        44	replace.c	FUNCTION_1
0x40008f0	      0x4889442418	             mov qword [rsp + 0x18], rax	        44	replace.c	FUNCTION_1
0x40008f5	            0x31c0	                            xor eax, eax	        44	replace.c	FUNCTION_1
0x40008f7	      0xba00000000	                              mov edx, 0	        47	replace.c	FUNCTION_1	IF_1	CALL_1
0x40008fc	          0x4889fe	                            mov rsi, rdi	        47	replace.c	FUNCTION_1	IF_1	CALL_1
0x40008ff	          0x488b39	                    mov rdi, qword [rcx]	        47	replace.c	FUNCTION_1	IF_1	CALL_1
0x4000902	      0xe800000000	                          call 0x4000907	        47	replace.c	FUNCTION_1	IF_1	CALL_1
0x4000907	      0xbb00000000	                              mov ebx, 0	        68	replace.c	FUNCTION_1
0x400090c	            0x85c0	                           test eax, eax	        47	replace.c	FUNCTION_1	IF_1	CALL_1
0x400090e	     0xf85d8000000	                           jne 0x40009ec	        47	replace.c	FUNCTION_1	IF_1	CALL_1
0x4000914	            0x89c3	                            mov ebx, eax	        47	replace.c	FUNCTION_1	IF_1	CALL_1
0x4000916	      0x418b442408	                mov eax, dword [r12 + 8]	        48	replace.c	FUNCTION_1	IF_1	IF_2
0x400091b	            0x85c0	                           test eax, eax	        48	replace.c	FUNCTION_1	IF_1	IF_2
0x400091d	            0x750d	                           jne 0x400092c	        48	replace.c	FUNCTION_1	IF_1	IF_2
0x400091f	          0x4889ef	                            mov rdi, rbp	       104	stdio2.h	CALL_12
0x4000922	      0xe800000000	                          call 0x4000927	       104	stdio2.h	CALL_12
0x4000927	      0xe9c0000000	                           jmp 0x40009ec	       104	stdio2.h	CALL_12
0x400092c	          0x83f801	                              cmp eax, 1	        50	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x400092f	            0x7527	                           jne 0x4000958	        50	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x4000931	          0x4c89ef	                            mov rdi, r13	        51	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x4000934	      0xe800000000	                          call 0x4000939	        51	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x4000939	          0x4889c1	                            mov rcx, rax	       104	stdio2.h	CALL_12
0x400093c	          0x4889ea	                            mov rdx, rbp	       104	stdio2.h	CALL_12
0x400093f	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_12
0x4000944	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_12
0x4000949	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_12
0x400094e	      0xe800000000	                          call 0x4000953	       104	stdio2.h	CALL_12
0x4000953	      0xe994000000	                           jmp 0x40009ec	       104	stdio2.h	CALL_12
0x4000958	          0x4889e6	                            mov rsi, rsp	        56	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4	CALL_3
0x400095b	          0x4889ef	                            mov rdi, rbp	        56	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4	CALL_3
0x400095e	      0xe800000000	                          call 0x4000963	        56	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4	CALL_3
0x4000963	            0x89c3	                            mov ebx, eax	        56	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4	CALL_3
0x4000965	            0x85c0	                           test eax, eax	        56	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4	CALL_3
0x4000967	            0x7419	                            je 0x4000982	        56	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4	CALL_3
0x4000969	          0x4889ee	                            mov rsi, rbp	        57	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_4
0x400096c	      0xbf00000000	                              mov edi, 0	        57	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_4
0x4000971	      0xb800000000	                              mov eax, 0	        57	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_4
0x4000976	      0xe800000000	                          call 0x400097b	        57	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_4
0x400097b	      0xbbffffffff	                     mov ebx, 0xffffffff	        57	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_4
0x4000980	            0xeb6a	                           jmp 0x40009ec	        57	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_4
0x4000982	      0xba00000000	                              mov edx, 0	        59	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_5
0x4000987	          0x4889e6	                            mov rsi, rsp	        59	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_5
0x400098a	    0x488b3d000000	            mov rdi, qword [0x04000991] 	        59	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_5
0x4000991	      0xe800000000	                          call 0x4000996	        59	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_5
0x4000996	          0x4189c7	                           mov r15d, eax	        59	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_5
0x4000999	      0xba00000000	                              mov edx, 0	        61	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_6
0x400099e	          0x4c89ee	                            mov rsi, r13	        61	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_6
0x40009a1	    0x488b3d000000	            mov rdi, qword [0x040009a8] 	        61	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_6
0x40009a8	      0xe800000000	                          call 0x40009ad	        61	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_6
0x40009ad	            0x89c7	                            mov edi, eax	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_7
0x40009af	      0xe800000000	                          call 0x40009b4	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_7
0x40009b4	          0x4989c6	                            mov r14, rax	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_7
0x40009b7	          0x4c89ef	                            mov rdi, r13	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_7
0x40009ba	      0xe800000000	                          call 0x40009bf	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_7
0x40009bf	          0x4989c4	                            mov r12, rax	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_7
0x40009c2	          0x4489ff	                           mov edi, r15d	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_7
0x40009c5	      0xe800000000	                          call 0x40009ca	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_7
0x40009ca	          0x4d89f1	                             mov r9, r14	       104	stdio2.h	CALL_12
0x40009cd	          0x4d89e0	                             mov r8, r12	       104	stdio2.h	CALL_12
0x40009d0	          0x4889c1	                            mov rcx, rax	       104	stdio2.h	CALL_12
0x40009d3	          0x4889ea	                            mov rdx, rbp	       104	stdio2.h	CALL_12
0x40009d6	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_12
0x40009db	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_12
0x40009e0	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_12
0x40009e5	      0xe800000000	                          call 0x40009ea	       104	stdio2.h	CALL_12
0x40009ea	            0xeb00	                           jmp 0x40009ec	       104	stdio2.h	CALL_12
0x40009ec	            0x89d8	                            mov eax, ebx	        69	replace.c	FUNCTION_1
0x40009ee	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	        69	replace.c	FUNCTION_1
0x40009f3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        69	replace.c	FUNCTION_1
0x40009fc	            0x7405	                            je 0x4000a03	        69	replace.c	FUNCTION_1
0x40009fe	      0xe800000000	                          call 0x4000a03	        69	replace.c	FUNCTION_1
0x4000a03	        0x4883c428	                           add rsp, 0x28	        69	replace.c	FUNCTION_1
0x4000a07	              0x5b	                                 pop rbx	        69	replace.c	FUNCTION_1
0x4000a08	              0x5d	                                 pop rbp	        69	replace.c	FUNCTION_1
0x4000a09	            0x415c	                                 pop r12	        69	replace.c	FUNCTION_1
0x4000a0b	            0x415d	                                 pop r13	        69	replace.c	FUNCTION_1
0x4000a0d	            0x415e	                                 pop r14	        69	replace.c	FUNCTION_1
0x4000a0f	            0x415f	                                 pop r15	        69	replace.c	FUNCTION_1
0x4000a11	              0xc3	                                     ret	        69	replace.c	FUNCTION_1
delete_replace_ref	ELSE,0:IF,1:WHILE,0:CALL,1:functions,0:FOR,0:DO,0:SWITCH,0	22
0x4000040	              0x55	                                push rbp	       134	replace.c	FUNCTION_4
0x4000041	              0x53	                                push rbx	       134	replace.c	FUNCTION_4
0x4000042	        0x4883ec08	                              sub rsp, 8	       134	replace.c	FUNCTION_4
0x4000046	          0x4889fd	                            mov rbp, rdi	       134	replace.c	FUNCTION_4
0x4000049	      0xb900000000	                              mov ecx, 0	       135	replace.c	FUNCTION_4	IF_1	CALL_1
0x400004e	      0xbf00000000	                              mov edi, 0	       135	replace.c	FUNCTION_4	IF_1	CALL_1
0x4000053	      0xe800000000	                          call 0x4000058	       135	replace.c	FUNCTION_4	IF_1	CALL_1
0x4000058	      0xbb01000000	                              mov ebx, 1	       136	replace.c	FUNCTION_4	IF_1
0x400005d	            0x85c0	                           test eax, eax	       135	replace.c	FUNCTION_4	IF_1	CALL_1
0x400005f	            0x751b	                           jne 0x400007c	       135	replace.c	FUNCTION_4	IF_1	CALL_1
0x4000061	            0x89c3	                            mov ebx, eax	       135	replace.c	FUNCTION_4	IF_1	CALL_1
0x4000063	          0x4889ea	                            mov rdx, rbp	       104	stdio2.h	CALL_12
0x4000066	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_12
0x400006b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_12
0x4000070	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_12
0x4000075	      0xe800000000	                          call 0x400007a	       104	stdio2.h	CALL_12
0x400007a	            0xeb00	                           jmp 0x400007c	       138	replace.c	FUNCTION_4
0x400007c	            0x89d8	                            mov eax, ebx	       139	replace.c	FUNCTION_4
0x400007e	        0x4883c408	                              add rsp, 8	       139	replace.c	FUNCTION_4
0x4000082	              0x5b	                                 pop rbx	       139	replace.c	FUNCTION_4
0x4000083	              0x5d	                                 pop rbp	       139	replace.c	FUNCTION_4
0x4000084	              0xc3	                                     ret	       139	replace.c	FUNCTION_4
check_one_mergetag	ELSE,0:IF,4:WHILE,0:CALL,15:functions,0:FOR,1:DO,0:SWITCH,0	111
0x4000725	            0x4156	                                push r14	       397	replace.c	FUNCTION_12
0x4000727	            0x4155	                                push r13	       397	replace.c	FUNCTION_12
0x4000729	            0x4154	                                push r12	       397	replace.c	FUNCTION_12
0x400072b	              0x55	                                push rbp	       397	replace.c	FUNCTION_12
0x400072c	              0x53	                                push rbx	       397	replace.c	FUNCTION_12
0x400072d	        0x4883ec40	                           sub rsp, 0x40	       397	replace.c	FUNCTION_12
0x4000731	          0x4889f3	                            mov rbx, rsi	       397	replace.c	FUNCTION_12
0x4000734	          0x4889d5	                            mov rbp, rdx	       397	replace.c	FUNCTION_12
0x4000737	    0x64488b042528	                mov rax, qword fs:[0x28]	       397	replace.c	FUNCTION_12
0x4000740	      0x4889442438	             mov qword [rsp + 0x38], rax	       397	replace.c	FUNCTION_12
0x4000745	            0x31c0	                            xor eax, eax	       397	replace.c	FUNCTION_12
0x4000747	        0x488b4208	                mov rax, qword [rdx + 8]	       399	replace.c	FUNCTION_12
0x400074b	          0x4c8b28	                    mov r13, qword [rax]	       399	replace.c	FUNCTION_12
0x400074e	      0xbf04000000	                              mov edi, 4	       404	replace.c	FUNCTION_12	CALL_2
0x4000753	      0xe800000000	                          call 0x4000758	       404	replace.c	FUNCTION_12	CALL_2
0x4000758	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       404	replace.c	FUNCTION_12	CALL_2
0x400075c	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       404	replace.c	FUNCTION_12	CALL_2
0x4000760	          0x4889e1	                            mov rcx, rsp	       404	replace.c	FUNCTION_12	CALL_2
0x4000763	          0x4889c2	                            mov rdx, rax	       404	replace.c	FUNCTION_12	CALL_2
0x4000766	      0xe800000000	                          call 0x400076b	       404	replace.c	FUNCTION_12	CALL_2
0x400076b	          0x4889e7	                            mov rdi, rsp	       405	replace.c	FUNCTION_12	CALL_3
0x400076e	      0xe800000000	                          call 0x4000773	       405	replace.c	FUNCTION_12	CALL_3
0x4000773	          0x4885c0	                           test rax, rax	       406	replace.c	FUNCTION_12	IF_1
0x4000776	            0x752e	                           jne 0x40007a6	       406	replace.c	FUNCTION_12	IF_1
0x4000778	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_36
0x400077d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_36
0x4000782	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_36
0x4000787	      0xe800000000	                          call 0x400078c	        54	gettext.h	FUNCTION_36
0x400078c	          0x4c89ee	                            mov rsi, r13	       407	replace.c	FUNCTION_12	CALL_5
0x400078f	          0x4889c7	                            mov rdi, rax	       407	replace.c	FUNCTION_12	CALL_5
0x4000792	      0xb800000000	                              mov eax, 0	       407	replace.c	FUNCTION_12	CALL_5
0x4000797	      0xe800000000	                          call 0x400079c	       407	replace.c	FUNCTION_12	CALL_5
0x400079c	      0xbaffffffff	                     mov edx, 0xffffffff	       407	replace.c	FUNCTION_12	CALL_5
0x40007a1	      0xe906010000	                           jmp 0x40008ac	       407	replace.c	FUNCTION_12	CALL_5
0x40007a6	          0x4989c4	                            mov r12, rax	       407	replace.c	FUNCTION_12	CALL_5
0x40007a9	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x40007ad	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x40007b1	          0x4889c7	                            mov rdi, rax	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x40007b4	      0xe800000000	                          call 0x40007b9	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x40007b9	            0x85c0	                           test eax, eax	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x40007bb	            0x7510	                           jne 0x40007cd	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x40007bd	      0xbb01000000	                              mov ebx, 1	       412	replace.c	FUNCTION_12	FOR_1
0x40007c2	        0x837d0001	                      cmp dword [rbp], 1	       412	replace.c	FUNCTION_12	FOR_1
0x40007c6	            0x7f33	                            jg 0x40007fb	       412	replace.c	FUNCTION_12	FOR_1
0x40007c8	      0xe9a8000000	                           jmp 0x4000875	       412	replace.c	FUNCTION_12	FOR_1
0x40007cd	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_36
0x40007d2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_36
0x40007d7	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_36
0x40007dc	      0xe800000000	                          call 0x40007e1	        54	gettext.h	FUNCTION_36
0x40007e1	          0x4c89ee	                            mov rsi, r13	       409	replace.c	FUNCTION_12	CALL_8
0x40007e4	          0x4889c7	                            mov rdi, rax	       409	replace.c	FUNCTION_12	CALL_8
0x40007e7	      0xb800000000	                              mov eax, 0	       409	replace.c	FUNCTION_12	CALL_8
0x40007ec	      0xe800000000	                          call 0x40007f1	       409	replace.c	FUNCTION_12	CALL_8
0x40007f1	      0xbaffffffff	                     mov edx, 0xffffffff	       409	replace.c	FUNCTION_12	CALL_8
0x40007f6	      0xe9b1000000	                           jmp 0x40008ac	       409	replace.c	FUNCTION_12	CALL_8
0x40007fb	          0x4863c3	                         movsxd rax, ebx	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x40007fe	    0x4c8d34c50000	                        lea r14, [rax*8]	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x4000806	        0x488b5508	                mov rdx, qword [rbp + 8]	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x400080a	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x400080e	      0x488d742420	                   lea rsi, [rsp + 0x20]	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x4000813	      0xe800000000	                          call 0x4000818	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x4000818	            0x85c0	                           test eax, eax	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x400081a	            0x7933	                           jns 0x400084f	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x400081c	        0x488b4508	                mov rax, qword [rbp + 8]	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x4000820	        0x4a8b1c30	              mov rbx, qword [rax + r14]	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x4000824	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_36
0x4000829	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_36
0x400082e	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_36
0x4000833	      0xe800000000	                          call 0x4000838	        54	gettext.h	FUNCTION_36
0x4000838	          0x4889de	                            mov rsi, rbx	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x400083b	          0x4889c7	                            mov rdi, rax	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x400083e	      0xb800000000	                              mov eax, 0	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x4000843	      0xe800000000	                          call 0x4000848	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x4000848	      0xbaffffffff	                     mov edx, 0xffffffff	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x400084d	            0xeb5d	                           jmp 0x40008ac	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x400084f	      0x498b442418	            mov rax, qword [r12 + 0x18] 	       975	cache.h	FUNCTION_45	CALL_1
0x4000854	        0x488d7804	                      lea rdi, [rax + 4]	       975	cache.h	FUNCTION_45	CALL_1
0x4000858	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_45	CALL_1
0x400085d	      0x488d742420	                   lea rsi, [rsp + 0x20]	       975	cache.h	FUNCTION_45	CALL_1
0x4000862	      0xe800000000	                          call 0x4000867	       975	cache.h	FUNCTION_45	CALL_1
0x4000867	            0x89c2	                            mov edx, eax	       975	cache.h	FUNCTION_45	CALL_1
0x4000869	            0x85c0	                           test eax, eax	       417	replace.c	FUNCTION_12	FOR_1	IF_4	CALL_12
0x400086b	            0x743f	                            je 0x40008ac	       417	replace.c	FUNCTION_12	FOR_1	IF_4	CALL_12
0x400086d	          0x83c301	                              add ebx, 1	       412	replace.c	FUNCTION_12	FOR_1
0x4000870	          0x395d00	                    cmp dword [rbp], ebx	       412	replace.c	FUNCTION_12	FOR_1
0x4000873	            0x7f86	                            jg 0x40007fb	       412	replace.c	FUNCTION_12	FOR_1
0x4000875	          0x4889e7	                            mov rdi, rsp	       421	replace.c	FUNCTION_12	CALL_14
0x4000878	      0xe800000000	                          call 0x400087d	       421	replace.c	FUNCTION_12	CALL_14
0x400087d	          0x4889c3	                            mov rbx, rax	       421	replace.c	FUNCTION_12	CALL_14
0x4000880	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_36
0x4000885	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_36
0x400088a	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_36
0x400088f	      0xe800000000	                          call 0x4000894	        54	gettext.h	FUNCTION_36
0x4000894	          0x4889da	                            mov rdx, rbx	       421	replace.c	FUNCTION_12	CALL_14
0x4000897	          0x4c89ee	                            mov rsi, r13	       421	replace.c	FUNCTION_12	CALL_14
0x400089a	          0x4889c7	                            mov rdi, rax	       421	replace.c	FUNCTION_12	CALL_14
0x400089d	      0xb800000000	                              mov eax, 0	       421	replace.c	FUNCTION_12	CALL_14
0x40008a2	      0xe800000000	                          call 0x40008a7	       421	replace.c	FUNCTION_12	CALL_14
0x40008a7	      0xbaffffffff	                     mov edx, 0xffffffff	       421	replace.c	FUNCTION_12	CALL_14
0x40008ac	            0x89d0	                            mov eax, edx	       424	replace.c	FUNCTION_12
0x40008ae	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       424	replace.c	FUNCTION_12
0x40008b3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       424	replace.c	FUNCTION_12
0x40008bc	            0x7405	                            je 0x40008c3	       424	replace.c	FUNCTION_12
0x40008be	      0xe800000000	                          call 0x40008c3	       424	replace.c	FUNCTION_12
0x40008c3	        0x4883c440	                           add rsp, 0x40	       424	replace.c	FUNCTION_12
0x40008c7	              0x5b	                                 pop rbx	       424	replace.c	FUNCTION_12
0x40008c8	              0x5d	                                 pop rbp	       424	replace.c	FUNCTION_12
0x40008c9	            0x415c	                                 pop r12	       424	replace.c	FUNCTION_12
0x40008cb	            0x415d	                                 pop r13	       424	replace.c	FUNCTION_12
0x40008cd	            0x415e	                                 pop r14	       424	replace.c	FUNCTION_12
0x40008cf	              0xc3	                                     ret	       424	replace.c	FUNCTION_12
replace_object_oid	ELSE,0:IF,3:WHILE,0:CALL,13:functions,0:FOR,0:DO,0:SWITCH,0	104
0x4000177	            0x4157	                                push r15	       163	replace.c	FUNCTION_6
0x4000179	            0x4156	                                push r14	       163	replace.c	FUNCTION_6
0x400017b	            0x4155	                                push r13	       163	replace.c	FUNCTION_6
0x400017d	            0x4154	                                push r12	       163	replace.c	FUNCTION_6
0x400017f	              0x55	                                push rbp	       163	replace.c	FUNCTION_6
0x4000180	              0x53	                                push rbx	       163	replace.c	FUNCTION_6
0x4000181	        0x4883ec68	                           sub rsp, 0x68	       163	replace.c	FUNCTION_6
0x4000185	          0x4989fe	                            mov r14, rdi	       163	replace.c	FUNCTION_6
0x4000188	          0x4889f3	                            mov rbx, rsi	       163	replace.c	FUNCTION_6
0x400018b	          0x4989d7	                            mov r15, rdx	       163	replace.c	FUNCTION_6
0x400018e	          0x4989cc	                            mov r12, rcx	       163	replace.c	FUNCTION_6
0x4000191	          0x4489c5	                            mov ebp, r8d	       163	replace.c	FUNCTION_6
0x4000194	    0x64488b042528	                mov rax, qword fs:[0x28]	       163	replace.c	FUNCTION_6
0x400019d	      0x4889442458	             mov qword [rsp + 0x58], rax	       163	replace.c	FUNCTION_6
0x40001a2	            0x31c0	                            xor eax, eax	       163	replace.c	FUNCTION_6
0x40001a4	    0x48c704240000	                      mov qword [rsp], 0	       166	replace.c	FUNCTION_6
0x40001ac	    0x48c744240800	                  mov qword [rsp + 8], 0	       166	replace.c	FUNCTION_6
0x40001b5	    0x48c744241000	               mov qword [rsp + 0x10], 0	       166	replace.c	FUNCTION_6
0x40001be	    0x48c744242000	               mov qword [rsp + 0x20], 0	       168	replace.c	FUNCTION_6
0x40001c7	    0x48c744242800	               mov qword [rsp + 0x28], 0	       168	replace.c	FUNCTION_6
0x40001d0	    0x48c744243000	               mov qword [rsp + 0x30], 0	       168	replace.c	FUNCTION_6
0x40001d9	      0xba00000000	                              mov edx, 0	       171	replace.c	FUNCTION_6	CALL_1
0x40001de	    0x488b3d000000	            mov rdi, qword [0x040001e5] 	       171	replace.c	FUNCTION_6	CALL_1
0x40001e5	      0xe800000000	                          call 0x40001ea	       171	replace.c	FUNCTION_6	CALL_1
0x40001ea	          0x4189c5	                           mov r13d, eax	       171	replace.c	FUNCTION_6	CALL_1
0x40001ed	      0xba00000000	                              mov edx, 0	       172	replace.c	FUNCTION_6	CALL_2
0x40001f2	          0x4c89e6	                            mov rsi, r12	       172	replace.c	FUNCTION_6	CALL_2
0x40001f5	    0x488b3d000000	            mov rdi, qword [0x040001fc] 	       172	replace.c	FUNCTION_6	CALL_2
0x40001fc	      0xe800000000	                          call 0x4000201	       172	replace.c	FUNCTION_6	CALL_2
0x4000201	            0x85ed	                           test ebp, ebp	       173	replace.c	FUNCTION_6	IF_1
0x4000203	            0x753c	                           jne 0x4000241	       173	replace.c	FUNCTION_6	IF_1
0x4000205	          0x4139c5	                           cmp r13d, eax	       173	replace.c	FUNCTION_6	IF_1
0x4000208	            0x7437	                            je 0x4000241	       173	replace.c	FUNCTION_6	IF_1
0x400020a	            0x89c7	                            mov edi, eax	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x400020c	      0xe800000000	                          call 0x4000211	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x4000211	          0x4889c3	                            mov rbx, rax	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x4000214	          0x4489ef	                           mov edi, r13d	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x4000217	      0xe800000000	                          call 0x400021c	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x400021c	          0x4989d8	                             mov r8, rbx	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x400021f	          0x4c89f9	                            mov rcx, r15	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x4000222	          0x4889c2	                            mov rdx, rax	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x4000225	          0x4c89f6	                            mov rsi, r14	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x4000228	      0xbf00000000	                              mov edi, 0	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x400022d	      0xb800000000	                              mov eax, 0	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x4000232	      0xe800000000	                          call 0x4000237	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x4000237	      0xb8ffffffff	                     mov eax, 0xffffffff	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x400023c	      0xe9ae000000	                           jmp 0x40002ef	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x4000241	            0x89e9	                            mov ecx, ebp	       181	replace.c	FUNCTION_6	IF_2	CALL_6
0x4000243	          0x4889e2	                            mov rdx, rsp	       181	replace.c	FUNCTION_6	IF_2	CALL_6
0x4000246	      0x488d742440	                   lea rsi, [rsp + 0x40]	       181	replace.c	FUNCTION_6	IF_2	CALL_6
0x400024b	          0x4889df	                            mov rdi, rbx	       181	replace.c	FUNCTION_6	IF_2	CALL_6
0x400024e	      0xe832feffff	                call sym.check_ref_valid	       181	replace.c	FUNCTION_6	IF_2	CALL_6
0x4000253	            0x85c0	                           test eax, eax	       181	replace.c	FUNCTION_6	IF_2	CALL_6
0x4000255	            0x7412	                            je 0x4000269	       181	replace.c	FUNCTION_6	IF_2	CALL_6
0x4000257	          0x4889e7	                            mov rdi, rsp	       182	replace.c	FUNCTION_6	IF_2	CALL_7
0x400025a	      0xe800000000	                          call 0x400025f	       182	replace.c	FUNCTION_6	IF_2	CALL_7
0x400025f	      0xb8ffffffff	                     mov eax, 0xffffffff	       183	replace.c	FUNCTION_6	IF_2
0x4000264	      0xe986000000	                           jmp 0x40002ef	       183	replace.c	FUNCTION_6	IF_2
0x4000269	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       186	replace.c	FUNCTION_6	CALL_8
0x400026e	      0xe800000000	                          call 0x4000273	       186	replace.c	FUNCTION_6	CALL_8
0x4000273	          0x4889c5	                            mov rbp, rax	       186	replace.c	FUNCTION_6	CALL_8
0x4000276	          0x4885c0	                           test rax, rax	       187	replace.c	FUNCTION_6	IF_3
0x4000279	            0x7449	                            je 0x40002c4	       187	replace.c	FUNCTION_6	IF_3
0x400027b	        0x4883ec08	                              sub rsp, 8	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x400027f	      0x488d442428	                   lea rax, [rsp + 0x28]	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x4000284	              0x50	                                push rax	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x4000285	    0x41b900000000	                              mov r9d, 0	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x400028b	    0x41b800000000	                              mov r8d, 0	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x4000291	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x4000296	          0x4c89e2	                            mov rdx, r12	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x4000299	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x400029e	          0x4889ef	                            mov rdi, rbp	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x40002a1	      0xe800000000	                          call 0x40002a6	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x40002a6	        0x4883c410	                           add rsp, 0x10	       187	replace.c	FUNCTION_6	IF_3
0x40002aa	            0x85c0	                           test eax, eax	       187	replace.c	FUNCTION_6	IF_3
0x40002ac	            0x7516	                           jne 0x40002c4	       187	replace.c	FUNCTION_6	IF_3
0x40002ae	      0x488d742420	                   lea rsi, [rsp + 0x20]	       190	replace.c	FUNCTION_6	IF_3	CALL_10
0x40002b3	          0x4889ef	                            mov rdi, rbp	       190	replace.c	FUNCTION_6	IF_3	CALL_10
0x40002b6	      0xe800000000	                          call 0x40002bb	       190	replace.c	FUNCTION_6	IF_3	CALL_10
0x40002bb	      0xbb00000000	                              mov ebx, 0	       169	replace.c	FUNCTION_6
0x40002c0	            0x85c0	                           test eax, eax	       189	replace.c	FUNCTION_6	IF_3
0x40002c2	            0x7419	                            je 0x40002dd	       189	replace.c	FUNCTION_6	IF_3
0x40002c4	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       191	replace.c	FUNCTION_6	CALL_11
0x40002c9	      0xbf00000000	                              mov edi, 0	       191	replace.c	FUNCTION_6	CALL_11
0x40002ce	      0xb800000000	                              mov eax, 0	       191	replace.c	FUNCTION_6	CALL_11
0x40002d3	      0xe800000000	                          call 0x40002d8	       191	replace.c	FUNCTION_6	CALL_11
0x40002d8	      0xbbffffffff	                     mov ebx, 0xffffffff	       191	replace.c	FUNCTION_6	CALL_11
0x40002dd	          0x4889ef	                            mov rdi, rbp	       193	replace.c	FUNCTION_6	CALL_12
0x40002e0	      0xe800000000	                          call 0x40002e5	       193	replace.c	FUNCTION_6	CALL_12
0x40002e5	          0x4889e7	                            mov rdi, rsp	       194	replace.c	FUNCTION_6	CALL_13
0x40002e8	      0xe800000000	                          call 0x40002ed	       194	replace.c	FUNCTION_6	CALL_13
0x40002ed	            0x89d8	                            mov eax, ebx	       195	replace.c	FUNCTION_6
0x40002ef	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	       196	replace.c	FUNCTION_6
0x40002f4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       196	replace.c	FUNCTION_6
0x40002fd	            0x7405	                            je 0x4000304	       196	replace.c	FUNCTION_6
0x40002ff	      0xe800000000	                          call 0x4000304	       196	replace.c	FUNCTION_6
0x4000304	        0x4883c468	                           add rsp, 0x68	       196	replace.c	FUNCTION_6
0x4000308	              0x5b	                                 pop rbx	       196	replace.c	FUNCTION_6
0x4000309	              0x5d	                                 pop rbp	       196	replace.c	FUNCTION_6
0x400030a	            0x415c	                                 pop r12	       196	replace.c	FUNCTION_6
0x400030c	            0x415d	                                 pop r13	       196	replace.c	FUNCTION_6
0x400030e	            0x415e	                                 pop r14	       196	replace.c	FUNCTION_6
0x4000310	            0x415f	                                 pop r15	       196	replace.c	FUNCTION_6
0x4000312	              0xc3	                                     ret	       196	replace.c	FUNCTION_6
check_ref_valid	ELSE,1:IF,3:WHILE,0:CALL,7:functions,0:FOR,0:DO,0:SWITCH,0	63
0x4000085	            0x4155	                                push r13	       145	replace.c	FUNCTION_5
0x4000087	            0x4154	                                push r12	       145	replace.c	FUNCTION_5
0x4000089	              0x55	                                push rbp	       145	replace.c	FUNCTION_5
0x400008a	              0x53	                                push rbx	       145	replace.c	FUNCTION_5
0x400008b	        0x4883ec08	                              sub rsp, 8	       145	replace.c	FUNCTION_5
0x400008f	          0x4889f5	                            mov rbp, rsi	       145	replace.c	FUNCTION_5
0x4000092	          0x4889d3	                            mov rbx, rdx	       145	replace.c	FUNCTION_5
0x4000095	          0x4189cd	                           mov r13d, ecx	       145	replace.c	FUNCTION_5
0x4000098	    0x48c742080000	                  mov qword [rdx + 8], 0	       164	strbuf.h	FUNCTION_67
0x40000a0	        0x488b4210	            mov rax, qword [rdx + 0x10] 	       165	strbuf.h	FUNCTION_67	IF_2
0x40000a4	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_67	IF_2
0x40000aa	            0x7405	                            je 0x40000b1	       165	strbuf.h	FUNCTION_67	IF_2
0x40000ac	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_67	IF_2
0x40000af	            0xeb22	                           jmp 0x40000d3	       166	strbuf.h	FUNCTION_67	IF_2
0x40000b1	    0x803d00000000	                cmp byte [0x040000b8], 0	       168	strbuf.h	FUNCTION_67	CALL_2
0x40000b8	            0x7419	                            je 0x40000d3	       168	strbuf.h	FUNCTION_67	CALL_2
0x40000ba	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_67	CALL_2
0x40000bf	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_67	CALL_2
0x40000c4	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_67	CALL_2
0x40000c9	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_67	CALL_2
0x40000ce	      0xe800000000	                          call 0x40000d3	       168	strbuf.h	FUNCTION_67	CALL_2
0x40000d3	      0xe800000000	                          call 0x40000d8	       147	replace.c	FUNCTION_5	CALL_2
0x40000d8	          0x4889c1	                            mov rcx, rax	       147	replace.c	FUNCTION_5	CALL_2
0x40000db	    0x488b15000000	            mov rdx, qword [0x040000e2] 	       147	replace.c	FUNCTION_5	CALL_2
0x40000e2	      0xbe00000000	                              mov esi, 0	       147	replace.c	FUNCTION_5	CALL_2
0x40000e7	          0x4889df	                            mov rdi, rbx	       147	replace.c	FUNCTION_5	CALL_2
0x40000ea	      0xb800000000	                              mov eax, 0	       147	replace.c	FUNCTION_5	CALL_2
0x40000ef	      0xe800000000	                          call 0x40000f4	       147	replace.c	FUNCTION_5	CALL_2
0x40000f4	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       148	replace.c	FUNCTION_5	IF_1	CALL_3
0x40000f8	      0xbe00000000	                              mov esi, 0	       148	replace.c	FUNCTION_5	IF_1	CALL_3
0x40000fd	      0xe800000000	                          call 0x4000102	       148	replace.c	FUNCTION_5	IF_1	CALL_3
0x4000102	          0x4189c4	                           mov r12d, eax	       148	replace.c	FUNCTION_5	IF_1	CALL_3
0x4000105	            0x85c0	                           test eax, eax	       148	replace.c	FUNCTION_5	IF_1	CALL_3
0x4000107	            0x741a	                            je 0x4000123	       148	replace.c	FUNCTION_5	IF_1	CALL_3
0x4000109	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       149	replace.c	FUNCTION_5	CALL_4
0x400010d	      0xbf00000000	                              mov edi, 0	       149	replace.c	FUNCTION_5	CALL_4
0x4000112	      0xb800000000	                              mov eax, 0	       149	replace.c	FUNCTION_5	CALL_4
0x4000117	      0xe800000000	                          call 0x400011c	       149	replace.c	FUNCTION_5	CALL_4
0x400011c	      0xb8ffffffff	                     mov eax, 0xffffffff	       149	replace.c	FUNCTION_5	CALL_4
0x4000121	            0xeb49	                           jmp 0x400016c	       149	replace.c	FUNCTION_5	CALL_4
0x4000123	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       151	replace.c	FUNCTION_5	IF_2	CALL_5
0x4000127	          0x4889ee	                            mov rsi, rbp	       151	replace.c	FUNCTION_5	IF_2	CALL_5
0x400012a	      0xe800000000	                          call 0x400012f	       151	replace.c	FUNCTION_5	IF_2	CALL_5
0x400012f	            0x85c0	                           test eax, eax	       151	replace.c	FUNCTION_5	IF_2	CALL_5
0x4000131	            0x741c	                            je 0x400014f	       151	replace.c	FUNCTION_5	IF_2	CALL_5
0x4000133	    0x48c745000000	                      mov qword [rbp], 0	        90	string3.h	FUNCTION_83	CALL_6
0x400013b	    0x48c745080000	                  mov qword [rbp + 8], 0	        90	string3.h	FUNCTION_83	CALL_6
0x4000143	    0xc74510000000	               mov dword [rbp + 0x10], 0	        90	string3.h	FUNCTION_83	CALL_6
0x400014a	          0x4489e0	                           mov eax, r12d	       155	replace.c	FUNCTION_5
0x400014d	            0xeb1d	                           jmp 0x400016c	       155	replace.c	FUNCTION_5
0x400014f	          0x4585ed	                         test r13d, r13d	       153	replace.c	FUNCTION_5	ELSE_1	IF_3
0x4000152	            0x7518	                           jne 0x400016c	       153	replace.c	FUNCTION_5	ELSE_1	IF_3
0x4000154	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x4000158	      0xbf00000000	                              mov edi, 0	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x400015d	      0xb800000000	                              mov eax, 0	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x4000162	      0xe800000000	                          call 0x4000167	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x4000167	      0xb8ffffffff	                     mov eax, 0xffffffff	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x400016c	        0x4883c408	                              add rsp, 8	       156	replace.c	FUNCTION_5
0x4000170	              0x5b	                                 pop rbx	       156	replace.c	FUNCTION_5
0x4000171	              0x5d	                                 pop rbp	       156	replace.c	FUNCTION_5
0x4000172	            0x415c	                                 pop r12	       156	replace.c	FUNCTION_5
0x4000174	            0x415d	                                 pop r13	       156	replace.c	FUNCTION_5
0x4000176	              0xc3	                                     ret	       156	replace.c	FUNCTION_5
create_graft	ELSE,0:IF,8:WHILE,0:CALL,29:functions,0:FOR,0:DO,0:SWITCH,0	238
0x4000313	            0x4157	                                push r15	       436	replace.c	FUNCTION_14
0x4000315	            0x4156	                                push r14	       436	replace.c	FUNCTION_14
0x4000317	            0x4155	                                push r13	       436	replace.c	FUNCTION_14
0x4000319	            0x4154	                                push r12	       436	replace.c	FUNCTION_14
0x400031b	              0x55	                                push rbp	       436	replace.c	FUNCTION_14
0x400031c	              0x53	                                push rbx	       436	replace.c	FUNCTION_14
0x400031d	    0x4881ecb80000	                           sub rsp, 0xb8	       436	replace.c	FUNCTION_14
0x4000324	        0x897c2404	                mov dword [rsp + 4], edi	       436	replace.c	FUNCTION_14
0x4000328	          0x4989f7	                            mov r15, rsi	       436	replace.c	FUNCTION_14
0x400032b	        0x8954241c	             mov dword [rsp + 0x1c], edx	       436	replace.c	FUNCTION_14
0x400032f	        0x894c2418	             mov dword [rsp + 0x18], ecx	       436	replace.c	FUNCTION_14
0x4000333	    0x64488b042528	                mov rax, qword fs:[0x28]	       436	replace.c	FUNCTION_14
0x400033c	    0x48898424a800	             mov qword [rsp + 0xa8], rax	       436	replace.c	FUNCTION_14
0x4000344	            0x31c0	                            xor eax, eax	       436	replace.c	FUNCTION_14
0x4000346	          0x488b06	                    mov rax, qword [rsi]	       438	replace.c	FUNCTION_14
0x4000349	      0x4889442410	             mov qword [rsp + 0x10], rax	       438	replace.c	FUNCTION_14
0x400034e	    0x48c744243000	               mov qword [rsp + 0x30], 0	       440	replace.c	FUNCTION_14
0x4000357	    0x48c744243800	               mov qword [rsp + 0x38], 0	       440	replace.c	FUNCTION_14
0x4000360	    0x48c744244000	               mov qword [rsp + 0x40], 0	       440	replace.c	FUNCTION_14
0x4000369	      0x488d742470	                   lea rsi, [rsp + 0x70]	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x400036e	          0x4889c7	                            mov rdi, rax	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x4000371	      0xe800000000	                          call 0x4000376	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x4000376	            0x85c0	                           test eax, eax	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x4000378	            0x7930	                           jns 0x40003aa	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x400037a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_36
0x400037f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_36
0x4000384	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_36
0x4000389	      0xe800000000	                          call 0x400038e	        54	gettext.h	FUNCTION_36
0x400038e	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       445	replace.c	FUNCTION_14	CALL_3
0x4000393	          0x4889c7	                            mov rdi, rax	       445	replace.c	FUNCTION_14	CALL_3
0x4000396	      0xb800000000	                              mov eax, 0	       445	replace.c	FUNCTION_14	CALL_3
0x400039b	      0xe800000000	                          call 0x40003a0	       445	replace.c	FUNCTION_14	CALL_3
0x40003a0	      0xbbffffffff	                     mov ebx, 0xffffffff	       445	replace.c	FUNCTION_14	CALL_3
0x40003a5	      0xe94f030000	                           jmp 0x40006f9	       445	replace.c	FUNCTION_14	CALL_3
0x40003aa	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       446	replace.c	FUNCTION_14	CALL_4
0x40003af	      0xe800000000	                          call 0x40003b4	       446	replace.c	FUNCTION_14	CALL_4
0x40003b4	          0x4989c6	                            mov r14, rax	       446	replace.c	FUNCTION_14	CALL_4
0x40003b7	          0x4885c0	                           test rax, rax	       447	replace.c	FUNCTION_14	IF_2
0x40003ba	            0x7530	                           jne 0x40003ec	       447	replace.c	FUNCTION_14	IF_2
0x40003bc	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_36
0x40003c1	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_36
0x40003c6	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_36
0x40003cb	      0xe800000000	                          call 0x40003d0	        54	gettext.h	FUNCTION_36
0x40003d0	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       448	replace.c	FUNCTION_14	CALL_6
0x40003d5	          0x4889c7	                            mov rdi, rax	       448	replace.c	FUNCTION_14	CALL_6
0x40003d8	      0xb800000000	                              mov eax, 0	       448	replace.c	FUNCTION_14	CALL_6
0x40003dd	      0xe800000000	                          call 0x40003e2	       448	replace.c	FUNCTION_14	CALL_6
0x40003e2	      0xbbffffffff	                     mov ebx, 0xffffffff	       448	replace.c	FUNCTION_14	CALL_6
0x40003e7	      0xe90d030000	                           jmp 0x40006f9	       448	replace.c	FUNCTION_14	CALL_6
0x40003ec	      0x488d742428	                   lea rsi, [rsp + 0x28]	       450	replace.c	FUNCTION_14	CALL_7
0x40003f1	          0x4889c7	                            mov rdi, rax	       450	replace.c	FUNCTION_14	CALL_7
0x40003f4	      0xe800000000	                          call 0x40003f9	       450	replace.c	FUNCTION_14	CALL_7
0x40003f9	          0x4889c3	                            mov rbx, rax	       450	replace.c	FUNCTION_14	CALL_7
0x40003fc	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       451	replace.c	FUNCTION_14	CALL_8
0x4000401	          0x4889c6	                            mov rsi, rax	       451	replace.c	FUNCTION_14	CALL_8
0x4000404	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       451	replace.c	FUNCTION_14	CALL_8
0x4000409	      0xe800000000	                          call 0x400040e	       451	replace.c	FUNCTION_14	CALL_8
0x400040e	          0x4889de	                            mov rsi, rbx	       452	replace.c	FUNCTION_14	CALL_9
0x4000411	          0x4c89f7	                            mov rdi, r14	       452	replace.c	FUNCTION_14	CALL_9
0x4000414	      0xe800000000	                          call 0x4000419	       452	replace.c	FUNCTION_14	CALL_9
0x4000419	        0x8b442404	                mov eax, dword [rsp + 4]	       454	replace.c	FUNCTION_14	IF_3	CALL_10
0x400041d	          0x8d58ff	                      lea ebx, [rax - 1]	       454	replace.c	FUNCTION_14	IF_3	CALL_10
0x4000420	    0x48c744245000	               mov qword [rsp + 0x50], 0	       354	replace.c	FUNCTION_11
0x4000429	    0x48c744245800	               mov qword [rsp + 0x58], 0	       354	replace.c	FUNCTION_11
0x4000432	    0x48c744246000	               mov qword [rsp + 0x60], 0	       354	replace.c	FUNCTION_11
0x400043b	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       360	replace.c	FUNCTION_11
0x4000440	        0x4883c02e	                           add rax, 0x2e	       360	replace.c	FUNCTION_11
0x4000444	      0x4889442408	                mov qword [rsp + 8], rax	       360	replace.c	FUNCTION_11
0x4000449	          0x4889c5	                            mov rbp, rax	       361	replace.c	FUNCTION_11
0x400044c	            0xeb04	                           jmp 0x4000452	       361	replace.c	FUNCTION_11
0x400044e	        0x4883c530	                           add rbp, 0x30	       364	replace.c	FUNCTION_11	WHILE_1
0x4000452	      0xbe00000000	                              mov esi, 0	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x4000457	          0x4889ef	                            mov rdi, rbp	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x400045a	      0xe800000000	                          call 0x400045f	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x400045f	            0x85c0	                           test eax, eax	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x4000461	            0x75eb	                           jne 0x400044e	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x4000463	            0x85db	                           test ebx, ebx	       367	replace.c	FUNCTION_11	FOR_1
0x4000465	     0xf8ee3000000	                           jle 0x400054e	       367	replace.c	FUNCTION_11	FOR_1
0x400046b	        0x498d5f08	                      lea rbx, [r15 + 8]	       367	replace.c	FUNCTION_11	FOR_1
0x400046f	        0x8b442404	                mov eax, dword [rsp + 4]	       367	replace.c	FUNCTION_11	FOR_1
0x4000473	          0x8d40fe	                      lea eax, [rax - 2]	       367	replace.c	FUNCTION_11	FOR_1
0x4000476	      0x4d8d6cc710	          lea r13, [r15 + rax*8 + 0x10] 	       367	replace.c	FUNCTION_11	FOR_1
0x400047b	    0x488db4249000	                   lea rsi, [rsp + 0x90]	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4000483	          0x488b3b	                    mov rdi, qword [rbx]	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4000486	      0xe800000000	                          call 0x400048b	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x400048b	            0x85c0	                           test eax, eax	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x400048d	            0x7933	                           jns 0x40004c2	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x400048f	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       370	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x4000494	      0xe800000000	                          call 0x4000499	       370	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x4000499	          0x488b1b	                    mov rbx, qword [rbx]	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_5
0x400049c	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_36
0x40004a1	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_36
0x40004a6	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_36
0x40004ab	      0xe800000000	                          call 0x40004b0	        54	gettext.h	FUNCTION_36
0x40004b0	          0x4889de	                            mov rsi, rbx	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_5
0x40004b3	          0x4889c7	                            mov rdi, rax	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_5
0x40004b6	      0xb800000000	                              mov eax, 0	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_5
0x40004bb	      0xe800000000	                          call 0x40004c0	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_5
0x40004c0	            0xeb78	                           jmp 0x400053a	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_5
0x40004c2	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       374	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_6
0x40004ca	      0xe800000000	                          call 0x40004cf	       374	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_6
0x40004cf	          0x4885c0	                           test rax, rax	       374	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_6
0x40004d2	            0x7533	                           jne 0x4000507	       374	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_6
0x40004d4	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       375	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_7
0x40004d9	      0xe800000000	                          call 0x40004de	       375	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_7
0x40004de	          0x488b1b	                    mov rbx, qword [rbx]	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x40004e1	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_36
0x40004e6	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_36
0x40004eb	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_36
0x40004f0	      0xe800000000	                          call 0x40004f5	        54	gettext.h	FUNCTION_36
0x40004f5	          0x4889de	                            mov rsi, rbx	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x40004f8	          0x4889c7	                            mov rdi, rax	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x40004fb	      0xb800000000	                              mov eax, 0	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x4000500	      0xe800000000	                          call 0x4000505	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x4000505	            0xeb33	                           jmp 0x400053a	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x4000507	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x400050f	      0xe800000000	                          call 0x4000514	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x4000514	          0x4889c2	                            mov rdx, rax	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x4000517	      0xbe00000000	                              mov esi, 0	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x400051c	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x4000521	      0xb800000000	                              mov eax, 0	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x4000526	      0xe800000000	                          call 0x400052b	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x400052b	        0x4883c308	                              add rbx, 8	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x400052f	          0x4c39eb	                            cmp rbx, r13	       367	replace.c	FUNCTION_11	FOR_1
0x4000532	     0xf8543ffffff	                           jne 0x400047b	       367	replace.c	FUNCTION_11	FOR_1
0x4000538	            0xeb14	                           jmp 0x400054e	       367	replace.c	FUNCTION_11	FOR_1
0x400053a	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       455	replace.c	FUNCTION_14	IF_3	CALL_11
0x400053f	      0xe800000000	                          call 0x4000544	       455	replace.c	FUNCTION_14	IF_3	CALL_11
0x4000544	      0xbbffffffff	                     mov ebx, 0xffffffff	       456	replace.c	FUNCTION_14	IF_3
0x4000549	      0xe9ab010000	                           jmp 0x40006f9	       456	replace.c	FUNCTION_14	IF_3
0x400054e	          0x4889ea	                            mov rdx, rbp	       382	replace.c	FUNCTION_11	CALL_12
0x4000551	      0x488b442408	                mov rax, qword [rsp + 8]	       382	replace.c	FUNCTION_11	CALL_12
0x4000556	          0x4829c2	                            sub rdx, rax	       382	replace.c	FUNCTION_11	CALL_12
0x4000559	          0x4889c6	                            mov rsi, rax	       382	replace.c	FUNCTION_11	CALL_12
0x400055c	      0x482b742440	             sub rsi, qword [rsp + 0x40]	       382	replace.c	FUNCTION_11	CALL_12
0x4000561	      0x4c8b442458	              mov r8, qword [rsp + 0x58]	       382	replace.c	FUNCTION_11	CALL_12
0x4000566	      0x488b4c2460	            mov rcx, qword [rsp + 0x60] 	       382	replace.c	FUNCTION_11	CALL_12
0x400056b	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       382	replace.c	FUNCTION_11	CALL_12
0x4000570	      0xe800000000	                          call 0x4000575	       382	replace.c	FUNCTION_11	CALL_12
0x4000575	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       385	replace.c	FUNCTION_11	CALL_13
0x400057a	      0xe800000000	                          call 0x400057f	       385	replace.c	FUNCTION_11	CALL_13
0x400057f	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       459	replace.c	FUNCTION_14	IF_4	CALL_12
0x4000584	      0xe800000000	                          call 0x4000589	       459	replace.c	FUNCTION_14	IF_4	CALL_12
0x4000589	            0x85c0	                           test eax, eax	       459	replace.c	FUNCTION_14	IF_4	CALL_12
0x400058b	            0x7447	                            je 0x40005d4	       459	replace.c	FUNCTION_14	IF_4	CALL_12
0x400058d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_36
0x4000592	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_36
0x4000597	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_36
0x400059c	      0xe800000000	                          call 0x40005a1	        54	gettext.h	FUNCTION_36
0x40005a1	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       460	replace.c	FUNCTION_14	IF_4	CALL_14
0x40005a6	          0x4889c7	                            mov rdi, rax	       460	replace.c	FUNCTION_14	IF_4	CALL_14
0x40005a9	      0xb800000000	                              mov eax, 0	       460	replace.c	FUNCTION_14	IF_4	CALL_14
0x40005ae	      0xe800000000	                          call 0x40005b3	       460	replace.c	FUNCTION_14	IF_4	CALL_14
0x40005b3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_36
0x40005b8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_36
0x40005bd	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_36
0x40005c2	      0xe800000000	                          call 0x40005c7	        54	gettext.h	FUNCTION_36
0x40005c7	          0x4889c7	                            mov rdi, rax	       461	replace.c	FUNCTION_14	IF_4	CALL_16
0x40005ca	      0xb800000000	                              mov eax, 0	       461	replace.c	FUNCTION_14	IF_4	CALL_16
0x40005cf	      0xe800000000	                          call 0x40005d4	       461	replace.c	FUNCTION_14	IF_4	CALL_16
0x40005d4	        0x8b442404	                mov eax, dword [rsp + 4]	       430	replace.c	FUNCTION_13
0x40005d8	        0x89442450	             mov dword [rsp + 0x50], eax	       430	replace.c	FUNCTION_13
0x40005dc	      0x4c897c2458	             mov qword [rsp + 0x58], r15	       431	replace.c	FUNCTION_13
0x40005e1	      0x488d542450	                   lea rdx, [rsp + 0x50]	       432	replace.c	FUNCTION_13	CALL_1
0x40005e6	          0x4c89f6	                            mov rsi, r14	       432	replace.c	FUNCTION_13	CALL_1
0x40005e9	      0xbf00000000	                              mov edi, 0	       432	replace.c	FUNCTION_13	CALL_1
0x40005ee	      0xe800000000	                          call 0x40005f3	       432	replace.c	FUNCTION_13	CALL_1
0x40005f3	            0x85c0	                           test eax, eax	       464	replace.c	FUNCTION_14	IF_5	CALL_17
0x40005f5	            0x7414	                            je 0x400060b	       464	replace.c	FUNCTION_14	IF_5	CALL_17
0x40005f7	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       465	replace.c	FUNCTION_14	IF_5	CALL_18
0x40005fc	      0xe800000000	                          call 0x4000601	       465	replace.c	FUNCTION_14	IF_5	CALL_18
0x4000601	      0xbbffffffff	                     mov ebx, 0xffffffff	       466	replace.c	FUNCTION_14	IF_5
0x4000606	      0xe9ee000000	                           jmp 0x40006f9	       466	replace.c	FUNCTION_14	IF_5
0x400060b	    0x488d8c249000	                   lea rcx, [rsp + 0x90]	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x4000613	    0x488b15000000	            mov rdx, qword [0x0400061a] 	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x400061a	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x400061f	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x4000624	      0xe800000000	                          call 0x4000629	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x4000629	            0x85c0	                           test eax, eax	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x400062b	            0x743a	                            je 0x4000667	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x400062d	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       470	replace.c	FUNCTION_14	IF_6	CALL_20
0x4000632	      0xe800000000	                          call 0x4000637	       470	replace.c	FUNCTION_14	IF_6	CALL_20
0x4000637	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_36
0x400063c	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_36
0x4000641	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_36
0x4000646	      0xe800000000	                          call 0x400064b	        54	gettext.h	FUNCTION_36
0x400064b	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       471	replace.c	FUNCTION_14	IF_6	CALL_22
0x4000650	          0x4889c7	                            mov rdi, rax	       471	replace.c	FUNCTION_14	IF_6	CALL_22
0x4000653	      0xb800000000	                              mov eax, 0	       471	replace.c	FUNCTION_14	IF_6	CALL_22
0x4000658	      0xe800000000	                          call 0x400065d	       471	replace.c	FUNCTION_14	IF_6	CALL_22
0x400065d	      0xbbffffffff	                     mov ebx, 0xffffffff	       471	replace.c	FUNCTION_14	IF_6	CALL_22
0x4000662	      0xe992000000	                           jmp 0x40006f9	       471	replace.c	FUNCTION_14	IF_6	CALL_22
0x4000667	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       475	replace.c	FUNCTION_14	CALL_23
0x400066c	      0xe800000000	                          call 0x4000671	       475	replace.c	FUNCTION_14	CALL_23
0x4000671	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_45	CALL_1
0x4000676	    0x488db4249000	                   lea rsi, [rsp + 0x90]	       975	cache.h	FUNCTION_45	CALL_1
0x400067e	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       975	cache.h	FUNCTION_45	CALL_1
0x4000683	      0xe800000000	                          call 0x4000688	       975	cache.h	FUNCTION_45	CALL_1
0x4000688	            0x89c3	                            mov ebx, eax	       975	cache.h	FUNCTION_45	CALL_1
0x400068a	            0x85c0	                           test eax, eax	       477	replace.c	FUNCTION_14	IF_7	CALL_24
0x400068c	            0x7548	                           jne 0x40006d6	       477	replace.c	FUNCTION_14	IF_7	CALL_24
0x400068e	      0x837c241800	               cmp dword [rsp + 0x18], 0	       478	replace.c	FUNCTION_14	IF_7	IF_8
0x4000693	            0x741e	                            je 0x40006b3	       478	replace.c	FUNCTION_14	IF_7	IF_8
0x4000695	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_26
0x400069a	      0xe800000000	                          call 0x400069f	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_26
0x400069f	          0x4889c6	                            mov rsi, rax	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_26
0x40006a2	      0xbf00000000	                              mov edi, 0	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_26
0x40006a7	      0xb800000000	                              mov eax, 0	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_26
0x40006ac	      0xe800000000	                          call 0x40006b1	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_26
0x40006b1	            0xeb46	                           jmp 0x40006f9	       480	replace.c	FUNCTION_14	IF_7	IF_8
0x40006b3	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x40006b8	      0xe800000000	                          call 0x40006bd	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x40006bd	          0x4889c6	                            mov rsi, rax	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x40006c0	      0xbf00000000	                              mov edi, 0	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x40006c5	      0xb800000000	                              mov eax, 0	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x40006ca	      0xe800000000	                          call 0x40006cf	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x40006cf	      0xbbffffffff	                     mov ebx, 0xffffffff	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x40006d4	            0xeb23	                           jmp 0x40006f9	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x40006d6	      0x448b44241c	            mov r8d, dword [rsp + 0x1c] 	       485	replace.c	FUNCTION_14	CALL_29
0x40006db	    0x488d8c249000	                   lea rcx, [rsp + 0x90]	       485	replace.c	FUNCTION_14	CALL_29
0x40006e3	      0xba00000000	                              mov edx, 0	       485	replace.c	FUNCTION_14	CALL_29
0x40006e8	      0x488d742470	                   lea rsi, [rsp + 0x70]	       485	replace.c	FUNCTION_14	CALL_29
0x40006ed	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       485	replace.c	FUNCTION_14	CALL_29
0x40006f2	      0xe880faffff	             call sym.replace_object_oid	       485	replace.c	FUNCTION_14	CALL_29
0x40006f7	            0x89c3	                            mov ebx, eax	       485	replace.c	FUNCTION_14	CALL_29
0x40006f9	            0x89d8	                            mov eax, ebx	       486	replace.c	FUNCTION_14
0x40006fb	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	       486	replace.c	FUNCTION_14
0x4000703	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       486	replace.c	FUNCTION_14
0x400070c	            0x7405	                            je 0x4000713	       486	replace.c	FUNCTION_14
0x400070e	      0xe800000000	                          call 0x4000713	       486	replace.c	FUNCTION_14
0x4000713	    0x4881c4b80000	                           add rsp, 0xb8	       486	replace.c	FUNCTION_14
0x400071a	              0x5b	                                 pop rbx	       486	replace.c	FUNCTION_14
0x400071b	              0x5d	                                 pop rbp	       486	replace.c	FUNCTION_14
0x400071c	            0x415c	                                 pop r12	       486	replace.c	FUNCTION_14
0x400071e	            0x415d	                                 pop r13	       486	replace.c	FUNCTION_14
0x4000720	            0x415e	                                 pop r14	       486	replace.c	FUNCTION_14
0x4000722	            0x415f	                                 pop r15	       486	replace.c	FUNCTION_14
0x4000724	              0xc3	                                     ret	       486	replace.c	FUNCTION_14
