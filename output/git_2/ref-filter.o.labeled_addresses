parse_opt_merge_filter	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,4:functions,0:CALL,8:ELSE,1	70
0x4004cc8	            0x4155	                                push r13	      2347	ref-filter.c	FUNCTION_90
0x4004cca	            0x4154	                                push r12	      2347	ref-filter.c	FUNCTION_90
0x4004ccc	              0x55	                                push rbp	      2347	ref-filter.c	FUNCTION_90
0x4004ccd	              0x53	                                push rbx	      2347	ref-filter.c	FUNCTION_90
0x4004cce	        0x4883ec28	                           sub rsp, 0x28	      2347	ref-filter.c	FUNCTION_90
0x4004cd2	          0x4889fb	                            mov rbx, rdi	      2347	ref-filter.c	FUNCTION_90
0x4004cd5	          0x4989f5	                            mov r13, rsi	      2347	ref-filter.c	FUNCTION_90
0x4004cd8	    0x64488b042528	                mov rax, qword fs:[0x28]	      2347	ref-filter.c	FUNCTION_90
0x4004ce1	      0x4889442418	             mov qword [rsp + 0x18], rax	      2347	ref-filter.c	FUNCTION_90
0x4004ce6	            0x31c0	                            xor eax, eax	      2347	ref-filter.c	FUNCTION_90
0x4004ce8	        0x488b6f10	            mov rbp, qword [rdi + 0x10] 	      2348	ref-filter.c	FUNCTION_90
0x4004cec	        0x488b7f08	                mov rdi, qword [rdi + 8]	      2350	ref-filter.c	FUNCTION_90	CALL_1
0x4004cf0	      0xbe00000000	                              mov esi, 0	      2350	ref-filter.c	FUNCTION_90	CALL_1
0x4004cf5	      0xe800000000	                          call 0x4004cfa	      2350	ref-filter.c	FUNCTION_90	CALL_1
0x4004cfa	        0x837d3000	               cmp dword [rbp + 0x30], 0	      2352	ref-filter.c	FUNCTION_90	IF_1
0x4004cfe	            0x743b	                            je 0x4004d3b	      2352	ref-filter.c	FUNCTION_90	IF_1
0x4004d00	            0x85c0	                           test eax, eax	      2353	ref-filter.c	FUNCTION_90	IF_1	IF_2
0x4004d02	            0x741d	                            je 0x4004d21	      2353	ref-filter.c	FUNCTION_90	IF_1	IF_2
0x4004d04	      0xba00000000	                              mov edx, 0	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4004d09	      0xbe00000000	                              mov esi, 0	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4004d0e	          0x4889df	                            mov rdi, rbx	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4004d11	      0xe800000000	                          call 0x4004d16	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4004d16	    0x41bcffffffff	                    mov r12d, 0xffffffff	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4004d1c	      0xe989000000	                           jmp 0x4004daa	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4004d21	      0xba00000000	                              mov edx, 0	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x4004d26	      0xbe00000000	                              mov esi, 0	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x4004d2b	          0x4889df	                            mov rdi, rbx	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x4004d2e	      0xe800000000	                          call 0x4004d33	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x4004d33	    0x41bcffffffff	                    mov r12d, 0xffffffff	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x4004d39	            0xeb6f	                           jmp 0x4004daa	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x4004d3b	          0x83f801	                              cmp eax, 1	      2360	ref-filter.c	FUNCTION_90
0x4004d3e	            0x19c0	                            sbb eax, eax	      2360	ref-filter.c	FUNCTION_90
0x4004d40	          0x83c002	                              add eax, 2	      2360	ref-filter.c	FUNCTION_90
0x4004d43	          0x894530	            mov dword [rbp + 0x30], eax 	      2360	ref-filter.c	FUNCTION_90
0x4004d46	          0x4889e6	                            mov rsi, rsp	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x4004d49	          0x4c89ef	                            mov rdi, r13	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x4004d4c	      0xe800000000	                          call 0x4004d51	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x4004d51	          0x4189c4	                           mov r12d, eax	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x4004d54	            0x85c0	                           test eax, eax	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x4004d56	            0x7424	                            je 0x4004d7c	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x4004d58	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4004d5d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4004d62	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4004d67	      0xe800000000	                          call 0x4004d6c	        54	gettext.h	FUNCTION_93
0x4004d6c	          0x4c89ee	                            mov rsi, r13	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x4004d6f	          0x4889c7	                            mov rdi, rax	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x4004d72	      0xb800000000	                              mov eax, 0	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x4004d77	      0xe800000000	                          call 0x4004d7c	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x4004d7c	      0xbe00000000	                              mov esi, 0	      2367	ref-filter.c	FUNCTION_90	CALL_7
0x4004d81	          0x4889e7	                            mov rdi, rsp	      2367	ref-filter.c	FUNCTION_90	CALL_7
0x4004d84	      0xe800000000	                          call 0x4004d89	      2367	ref-filter.c	FUNCTION_90	CALL_7
0x4004d89	        0x48894538	            mov qword [rbp + 0x38], rax 	      2367	ref-filter.c	FUNCTION_90	CALL_7
0x4004d8d	          0x4885c0	                           test rax, rax	      2368	ref-filter.c	FUNCTION_90	IF_4
0x4004d90	            0x7518	                           jne 0x4004daa	      2368	ref-filter.c	FUNCTION_90	IF_4
0x4004d92	      0xba00000000	                              mov edx, 0	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x4004d97	      0xbe00000000	                              mov esi, 0	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x4004d9c	          0x4889df	                            mov rdi, rbx	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x4004d9f	      0xe800000000	                          call 0x4004da4	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x4004da4	    0x41bcffffffff	                    mov r12d, 0xffffffff	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x4004daa	          0x4489e0	                           mov eax, r12d	      2372	ref-filter.c	FUNCTION_90
0x4004dad	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2372	ref-filter.c	FUNCTION_90
0x4004db2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2372	ref-filter.c	FUNCTION_90
0x4004dbb	            0x7405	                            je 0x4004dc2	      2372	ref-filter.c	FUNCTION_90
0x4004dbd	      0xe800000000	                          call 0x4004dc2	      2372	ref-filter.c	FUNCTION_90
0x4004dc2	        0x4883c428	                           add rsp, 0x28	      2372	ref-filter.c	FUNCTION_90
0x4004dc6	              0x5b	                                 pop rbx	      2372	ref-filter.c	FUNCTION_90
0x4004dc7	              0x5d	                                 pop rbp	      2372	ref-filter.c	FUNCTION_90
0x4004dc8	            0x415c	                                 pop r12	      2372	ref-filter.c	FUNCTION_90
0x4004dca	            0x415d	                                 pop r13	      2372	ref-filter.c	FUNCTION_90
0x4004dcc	              0xc3	                                     ret	      2372	ref-filter.c	FUNCTION_90
remote_ref_atom_parser	SWITCH,0:FOR,1:WHILE,0:DO,0:IF,8:functions,0:CALL,12:ELSE,5	138
0x40021a8	            0x4156	                                push r14	       157	ref-filter.c	FUNCTION_5
0x40021aa	            0x4155	                                push r13	       157	ref-filter.c	FUNCTION_5
0x40021ac	            0x4154	                                push r12	       157	ref-filter.c	FUNCTION_5
0x40021ae	              0x55	                                push rbp	       157	ref-filter.c	FUNCTION_5
0x40021af	              0x53	                                push rbx	       157	ref-filter.c	FUNCTION_5
0x40021b0	        0x4883ec30	                           sub rsp, 0x30	       157	ref-filter.c	FUNCTION_5
0x40021b4	          0x4889f5	                            mov rbp, rsi	       157	ref-filter.c	FUNCTION_5
0x40021b7	          0x4989d4	                            mov r12, rdx	       157	ref-filter.c	FUNCTION_5
0x40021ba	          0x4989cd	                            mov r13, rcx	       157	ref-filter.c	FUNCTION_5
0x40021bd	    0x64488b042528	                mov rax, qword fs:[0x28]	       157	ref-filter.c	FUNCTION_5
0x40021c6	      0x4889442428	             mov qword [rsp + 0x28], rax	       157	ref-filter.c	FUNCTION_5
0x40021cb	            0x31c0	                            xor eax, eax	       157	ref-filter.c	FUNCTION_5
0x40021cd	    0x48c704240000	                      mov qword [rsp], 0	       158	ref-filter.c	FUNCTION_5
0x40021d5	    0xc74424080000	                  mov dword [rsp + 8], 0	       158	ref-filter.c	FUNCTION_5
0x40021dd	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       158	ref-filter.c	FUNCTION_5
0x40021e5	      0x804c241001	                 or byte [rsp + 0x10], 1	       158	ref-filter.c	FUNCTION_5
0x40021ea	    0x48c744241800	               mov qword [rsp + 0x18], 0	       158	ref-filter.c	FUNCTION_5
0x40021f3	          0x488b06	                    mov rax, qword [rsi]	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x40021f6	      0xbf00000000	                              mov edi, 0	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x40021fb	      0xb905000000	                              mov ecx, 5	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x4002200	          0x4889c6	                            mov rsi, rax	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x4002203	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x4002205	           0xf97c1	                                 seta cl	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x4002208	           0xf92c2	                                 setb dl	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x400220b	            0x38d1	                              cmp cl, dl	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x400220d	            0x7411	                            je 0x4002220	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x400220f	      0xbe00000000	                              mov esi, 0	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x4002214	          0x4889c7	                            mov rdi, rax	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x4002217	      0xe800000000	                          call 0x400221c	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x400221c	            0x85c0	                           test eax, eax	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x400221e	            0x7404	                            je 0x4002224	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x4002220	        0x804d2002	                 or byte [rbp + 0x20], 2	       162	ref-filter.c	FUNCTION_5	IF_1
0x4002224	          0x4d85e4	                           test r12, r12	       164	ref-filter.c	FUNCTION_5	IF_2
0x4002227	            0x7521	                           jne 0x400224a	       164	ref-filter.c	FUNCTION_5	IF_2
0x4002229	    0xc74510000000	               mov dword [rbp + 0x10], 0	       165	ref-filter.c	FUNCTION_5	IF_2
0x4002230	        0x488d7d14	                   lea rdi, [rbp + 0x14]	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x4002234	          0x4c89e9	                            mov rcx, r13	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x4002237	        0x488b5500	                    mov rdx, qword [rbp]	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x400223b	      0xbe00000000	                              mov esi, 0	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x4002240	      0xe83cfdffff	   call sym.refname_atom_parser_internal	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x4002245	      0xe940010000	                           jmp 0x400238a	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x400224a	        0x806520fe	             and byte [rbp + 0x20], 0xfe	       170	ref-filter.c	FUNCTION_5
0x400224e	      0xb9ffffffff	                     mov ecx, 0xffffffff	       171	ref-filter.c	FUNCTION_5	CALL_4
0x4002253	      0xba2c000000	                           mov edx, 0x2c	       171	ref-filter.c	FUNCTION_5	CALL_4
0x4002258	          0x4c89e6	                            mov rsi, r12	       171	ref-filter.c	FUNCTION_5	CALL_4
0x400225b	          0x4889e7	                            mov rdi, rsp	       171	ref-filter.c	FUNCTION_5	CALL_4
0x400225e	      0xe800000000	                          call 0x4002263	       171	ref-filter.c	FUNCTION_5	CALL_4
0x4002263	      0x837c240800	                  cmp dword [rsp + 8], 0	       173	ref-filter.c	FUNCTION_5	FOR_1
0x4002268	     0xf840a010000	                            je 0x4002378	       173	ref-filter.c	FUNCTION_5	FOR_1
0x400226e	      0xbb00000000	                              mov ebx, 0	       173	ref-filter.c	FUNCTION_5	FOR_1
0x4002273	        0x4c8d7514	                   lea r14, [rbp + 0x14]	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x4002277	          0x4863c3	                         movsxd rax, ebx	       174	ref-filter.c	FUNCTION_5	FOR_1
0x400227a	        0x48c1e004	                              shl rax, 4	       174	ref-filter.c	FUNCTION_5	FOR_1
0x400227e	        0x48030424	                    add rax, qword [rsp]	       174	ref-filter.c	FUNCTION_5	FOR_1
0x4002282	          0x488b00	                    mov rax, qword [rax]	       174	ref-filter.c	FUNCTION_5	FOR_1
0x4002285	      0xbf00000000	                              mov edi, 0	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0x400228a	      0xb906000000	                              mov ecx, 6	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0x400228f	          0x4889c6	                            mov rsi, rax	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0x4002292	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0x4002294	           0xf97c1	                                 seta cl	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0x4002297	           0xf92c2	                                 setb dl	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0x400229a	            0x38d1	                              cmp cl, dl	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0x400229c	            0x750c	                           jne 0x40022aa	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0x400229e	    0xc74510010000	               mov dword [rbp + 0x10], 1	       177	ref-filter.c	FUNCTION_5	FOR_1	IF_3
0x40022a5	      0xe9c1000000	                           jmp 0x400236b	       177	ref-filter.c	FUNCTION_5	FOR_1	IF_3
0x40022aa	      0xbf00000000	                              mov edi, 0	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0x40022af	      0xb90b000000	                            mov ecx, 0xb	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0x40022b4	          0x4889c6	                            mov rsi, rax	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0x40022b7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0x40022b9	           0xf97c1	                                 seta cl	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0x40022bc	           0xf92c2	                                 setb dl	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0x40022bf	            0x38d1	                              cmp cl, dl	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0x40022c1	            0x750c	                           jne 0x40022cf	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0x40022c3	    0xc74510020000	               mov dword [rbp + 0x10], 2	       179	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x40022ca	      0xe99c000000	                           jmp 0x400236b	       179	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x40022cf	      0xbf00000000	                              mov edi, 0	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0x40022d4	      0xb90a000000	                            mov ecx, 0xa	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0x40022d9	          0x4889c6	                            mov rsi, rax	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0x40022dc	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0x40022de	           0xf97c1	                                 seta cl	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0x40022e1	           0xf92c2	                                 setb dl	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0x40022e4	            0x38d1	                              cmp cl, dl	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0x40022e6	            0x7506	                           jne 0x40022ee	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0x40022e8	        0x804d2001	                 or byte [rbp + 0x20], 1	       181	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5
0x40022ec	            0xeb7d	                           jmp 0x400236b	       181	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5
0x40022ee	      0xbf00000000	                              mov edi, 0	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0x40022f3	      0xb90b000000	                            mov ecx, 0xb	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0x40022f8	          0x4889c6	                            mov rsi, rax	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0x40022fb	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0x40022fd	           0xf97c1	                                 seta cl	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0x4002300	           0xf92c2	                                 setb dl	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0x4002303	            0x38d1	                              cmp cl, dl	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0x4002305	            0x750d	                           jne 0x4002314	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0x4002307	    0xc74510030000	               mov dword [rbp + 0x10], 3	       183	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6
0x400230e	        0x804d2004	                 or byte [rbp + 0x20], 4	       184	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6
0x4002312	            0xeb57	                           jmp 0x400236b	       184	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6
0x4002314	      0xbf00000000	                              mov edi, 0	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0x4002319	      0xb90a000000	                            mov ecx, 0xa	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0x400231e	          0x4889c6	                            mov rsi, rax	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0x4002321	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0x4002323	           0xf97c2	                                 seta dl	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0x4002326	           0xf92c0	                                 setb al	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0x4002329	            0x38c2	                              cmp dl, al	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0x400232b	            0x750d	                           jne 0x400233a	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0x400232d	    0xc74510040000	               mov dword [rbp + 0x10], 4	       186	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7
0x4002334	        0x804d2004	                 or byte [rbp + 0x20], 4	       187	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7
0x4002338	            0xeb31	                           jmp 0x400236b	       187	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7
0x400233a	    0xc74510000000	               mov dword [rbp + 0x10], 0	       189	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5
0x4002341	          0x4c89e9	                            mov rcx, r13	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x4002344	        0x488b5500	                    mov rdx, qword [rbp]	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x4002348	          0x4c89e6	                            mov rsi, r12	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x400234b	          0x4c89f7	                            mov rdi, r14	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x400234e	      0xe82efcffff	   call sym.refname_atom_parser_internal	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x4002353	            0x85c0	                           test eax, eax	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x4002355	            0x7414	                            je 0x400236b	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x4002357	      0xbe00000000	                              mov esi, 0	       192	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_11
0x400235c	          0x4889e7	                            mov rdi, rsp	       192	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_11
0x400235f	      0xe800000000	                          call 0x4002364	       192	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_11
0x4002364	      0xb8ffffffff	                     mov eax, 0xffffffff	       193	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8
0x4002369	            0xeb1f	                           jmp 0x400238a	       193	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8
0x400236b	          0x83c301	                              add ebx, 1	       173	ref-filter.c	FUNCTION_5	FOR_1
0x400236e	        0x395c2408	                cmp dword [rsp + 8], ebx	       173	ref-filter.c	FUNCTION_5	FOR_1
0x4002372	     0xf87fffeffff	                            ja 0x4002277	       173	ref-filter.c	FUNCTION_5	FOR_1
0x4002378	      0xbe00000000	                              mov esi, 0	       198	ref-filter.c	FUNCTION_5	CALL_12
0x400237d	          0x4889e7	                            mov rdi, rsp	       198	ref-filter.c	FUNCTION_5	CALL_12
0x4002380	      0xe800000000	                          call 0x4002385	       198	ref-filter.c	FUNCTION_5	CALL_12
0x4002385	      0xb800000000	                              mov eax, 0	       199	ref-filter.c	FUNCTION_5
0x400238a	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	       200	ref-filter.c	FUNCTION_5
0x400238f	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       200	ref-filter.c	FUNCTION_5
0x4002398	            0x7405	                            je 0x400239f	       200	ref-filter.c	FUNCTION_5
0x400239a	      0xe800000000	                          call 0x400239f	       200	ref-filter.c	FUNCTION_5
0x400239f	        0x4883c430	                           add rsp, 0x30	       200	ref-filter.c	FUNCTION_5
0x40023a3	              0x5b	                                 pop rbx	       200	ref-filter.c	FUNCTION_5
0x40023a4	              0x5d	                                 pop rbp	       200	ref-filter.c	FUNCTION_5
0x40023a5	            0x415c	                                 pop r12	       200	ref-filter.c	FUNCTION_5
0x40023a7	            0x415d	                                 pop r13	       200	ref-filter.c	FUNCTION_5
0x40023a9	            0x415e	                                 pop r14	       200	ref-filter.c	FUNCTION_5
0x40023ab	              0xc3	                                     ret	       200	ref-filter.c	FUNCTION_5
find_next	SWITCH,0:FOR,0:WHILE,1:DO,0:IF,3:functions,0:CALL,0:ELSE,1	23
0x4000040	           0xfb60f	                   movzx ecx, byte [rdi]	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x4000043	            0x84c9	                             test cl, cl	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x4000045	            0x742d	                            je 0x4000074	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x4000047	          0x4889fa	                            mov rdx, rdi	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x400004a	          0x80f925	                            cmp cl, 0x25	       748	ref-filter.c	FUNCTION_29	WHILE_1	IF_1
0x400004d	            0x7513	                           jne 0x4000062	       748	ref-filter.c	FUNCTION_29	WHILE_1	IF_1
0x400004f	         0xfb64701	               movzx eax, byte [rdi + 1]	       753	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x4000053	            0x3c28	                            cmp al, 0x28	       753	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x4000055	            0x7423	                            je 0x400007a	       753	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x4000057	            0x3c25	                            cmp al, 0x25	       756	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x4000059	           0xf94c2	                                 sete dl	       756	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x400005c	           0xfb6d2	                           movzx edx, dl	       756	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x400005f	          0x4801fa	                            add rdx, rdi	       756	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x4000062	        0x488d7a01	                      lea rdi, [rdx + 1]	       759	ref-filter.c	FUNCTION_29	WHILE_1
0x4000066	         0xfb64a01	               movzx ecx, byte [rdx + 1]	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x400006a	            0x84c9	                             test cl, cl	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x400006c	            0x75d9	                           jne 0x4000047	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x400006e	      0xb800000000	                              mov eax, 0	       761	ref-filter.c	FUNCTION_29
0x4000073	              0xc3	                                     ret	       761	ref-filter.c	FUNCTION_29
0x4000074	      0xb800000000	                              mov eax, 0	       761	ref-filter.c	FUNCTION_29
0x4000079	              0xc3	                                     ret	       761	ref-filter.c	FUNCTION_29
0x400007a	          0x4889f8	                            mov rax, rdi	       761	ref-filter.c	FUNCTION_29
0x400007d	              0xc3	                                     ret	       762	ref-filter.c	FUNCTION_29
quote_formatting	SWITCH,1:FOR,0:WHILE,0:DO,0:IF,0:functions,0:CALL,5:ELSE,0	24
0x4001242	        0x4883ec08	                              sub rsp, 8	       521	ref-filter.c	FUNCTION_17
0x4001246	          0x83fa08	                              cmp edx, 8	       522	ref-filter.c	FUNCTION_17	SWITCH_1
0x4001249	            0x7748	                            ja 0x4001293	       522	ref-filter.c	FUNCTION_17	SWITCH_1
0x400124b	          0x4989f8	                             mov r8, rdi	       522	ref-filter.c	FUNCTION_17	SWITCH_1
0x400124e	            0x89d2	                            mov edx, edx	       522	ref-filter.c	FUNCTION_17	SWITCH_1
0x4001250	    0xff24d5000000	                       jmp qword [rdx*8]	       522	ref-filter.c	FUNCTION_17	SWITCH_1
0x4001257	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_99	CALL_2
0x400125c	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_99	CALL_2
0x4001263	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_99	CALL_2
0x4001266	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_99	CALL_2
0x4001268	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_99	CALL_2
0x400126b	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_99	CALL_2
0x400126f	          0x4c89c7	                             mov rdi, r8	       279	strbuf.h	FUNCTION_99	CALL_2
0x4001272	      0xe800000000	                          call 0x4001277	       279	strbuf.h	FUNCTION_99	CALL_2
0x4001277	            0xeb1a	                           jmp 0x4001293	       279	strbuf.h	FUNCTION_99	CALL_2
0x4001279	      0xe800000000	                          call 0x400127e	       527	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_2
0x400127e	            0xeb13	                           jmp 0x4001293	       528	ref-filter.c	FUNCTION_17	SWITCH_1
0x4001280	      0xe800000000	                          call 0x4001285	       530	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_3
0x4001285	            0xeb0c	                           jmp 0x4001293	       531	ref-filter.c	FUNCTION_17	SWITCH_1
0x4001287	      0xe800000000	                          call 0x400128c	       533	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_4
0x400128c	            0xeb05	                           jmp 0x4001293	       534	ref-filter.c	FUNCTION_17	SWITCH_1
0x400128e	      0xe800000000	                          call 0x4001293	       536	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_5
0x4001293	        0x4883c408	                              add rsp, 8	       539	ref-filter.c	FUNCTION_17
0x4001297	              0xc3	                                     ret	       539	ref-filter.c	FUNCTION_17
subject_atom_parser	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,1:functions,0:CALL,2:ELSE,0	19
0x40007dd	          0x4885d2	                           test rdx, rdx	       214	ref-filter.c	FUNCTION_7	IF_1
0x40007e0	            0x742f	                            je 0x4000811	       214	ref-filter.c	FUNCTION_7	IF_1
0x40007e2	              0x53	                                push rbx	       213	ref-filter.c	FUNCTION_7
0x40007e3	          0x4889cb	                            mov rbx, rcx	       213	ref-filter.c	FUNCTION_7
0x40007e6	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x40007eb	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40007f0	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x40007f5	      0xe800000000	                          call 0x40007fa	        54	gettext.h	FUNCTION_93
0x40007fa	          0x4889c2	                            mov rdx, rax	       215	ref-filter.c	FUNCTION_7	CALL_2
0x40007fd	      0xbeffffffff	                     mov esi, 0xffffffff	       215	ref-filter.c	FUNCTION_7	CALL_2
0x4000802	          0x4889df	                            mov rdi, rbx	       215	ref-filter.c	FUNCTION_7	CALL_2
0x4000805	      0xb800000000	                              mov eax, 0	       215	ref-filter.c	FUNCTION_7	CALL_2
0x400080a	      0xe846fbffff	                call sym.strbuf_addf_ret	       215	ref-filter.c	FUNCTION_7	CALL_2
0x400080f	            0xeb0d	                           jmp 0x400081e	       215	ref-filter.c	FUNCTION_7	CALL_2
0x4000811	    0xc74610050000	               mov dword [rsi + 0x10], 5	       216	ref-filter.c	FUNCTION_7
0x4000818	      0xb800000000	                              mov eax, 0	       217	ref-filter.c	FUNCTION_7
0x400081d	              0xc3	                                     ret	       217	ref-filter.c	FUNCTION_7
0x400081e	              0x5b	                                 pop rbx	       218	ref-filter.c	FUNCTION_7
0x400081f	              0xc3	                                     ret	       218	ref-filter.c	FUNCTION_7
ref_array_sort	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,0:functions,0:CALL,0:ELSE,0	15
0x40048e3	        0x4883ec08	                              sub rsp, 8	      2196	ref-filter.c	FUNCTION_81
0x40048e7	          0x4989f8	                             mov r8, rdi	      2196	ref-filter.c	FUNCTION_81
0x40048ea	          0x4889f0	                            mov rax, rsi	      2196	ref-filter.c	FUNCTION_81
0x40048ed	          0x486336	                 movsxd rsi, dword [rsi]	      2197	ref-filter.c	FUNCTION_81
0x40048f0	        0x488b7808	                mov rdi, qword [rax + 8]	      2197	ref-filter.c	FUNCTION_81
0x40048f4	      0xb900000000	                              mov ecx, 0	      2197	ref-filter.c	FUNCTION_81
0x40048f9	      0xba08000000	                              mov edx, 8	      2197	ref-filter.c	FUNCTION_81
0x40048fe	      0xe800000000	                          call 0x4004903	      2197	ref-filter.c	FUNCTION_81
0x4004903	            0x85c0	                           test eax, eax	      2197	ref-filter.c	FUNCTION_81
0x4004905	            0x740f	                            je 0x4004916	      2197	ref-filter.c	FUNCTION_81
0x4004907	      0xbf00000000	                              mov edi, 0	      2197	ref-filter.c	FUNCTION_81
0x400490c	      0xb800000000	                              mov eax, 0	      2197	ref-filter.c	FUNCTION_81
0x4004911	      0xe800000000	                          call 0x4004916	      2197	ref-filter.c	FUNCTION_81
0x4004916	        0x4883c408	                              add rsp, 8	      2198	ref-filter.c	FUNCTION_81
0x400491a	              0xc3	                                     ret	      2198	ref-filter.c	FUNCTION_81
if_atom_parser	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,3:functions,0:CALL,4:ELSE,3	50
0x400040a	          0x4889d0	                            mov rax, rdx	       360	ref-filter.c	FUNCTION_14
0x400040d	    0x41b800000000	                              mov r8d, 0	       360	ref-filter.c	FUNCTION_14
0x4000413	          0x4885d2	                           test rdx, rdx	       361	ref-filter.c	FUNCTION_14	IF_1
0x4000416	            0x750d	                           jne 0x4000425	       361	ref-filter.c	FUNCTION_14	IF_1
0x4000418	    0xc74610020000	               mov dword [rsi + 0x10], 2	       362	ref-filter.c	FUNCTION_14	IF_1
0x400041f	      0xb800000000	                              mov eax, 0	       363	ref-filter.c	FUNCTION_14	IF_1
0x4000424	              0xc3	                                     ret	       363	ref-filter.c	FUNCTION_14	IF_1
0x4000425	        0x450fb608	                    movzx r9d, byte [r8]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4000429	          0x4584c9	                           test r9b, r9b	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x400042c	            0x7511	                           jne 0x400043f	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x400042e	        0x48894618	             mov qword [rsi + 0x18], rax	       485	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4000432	    0xc74610000000	               mov dword [rsi + 0x10], 0	       365	ref-filter.c	FUNCTION_14	ELSE_1	IF_2
0x4000439	      0xb800000000	                              mov eax, 0	       370	ref-filter.c	FUNCTION_14
0x400043e	              0xc3	                                     ret	       371	ref-filter.c	FUNCTION_14
0x400043f	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4000443	        0x4983c001	                               add r8, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4000447	        0x443a48ff	                 cmp r9b, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x400044b	            0x74d8	                            je 0x4000425	       488	git-compat-util.h	FUNCTION_112	DO_1
0x400044d	          0x4889d0	                            mov rax, rdx	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4000450	    0x41b800000000	                              mov r8d, 0	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4000456	        0x450fb608	                    movzx r9d, byte [r8]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x400045a	          0x4584c9	                           test r9b, r9b	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x400045d	            0x7511	                           jne 0x4000470	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x400045f	        0x48894618	             mov qword [rsi + 0x18], rax	       485	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4000463	    0xc74610010000	               mov dword [rsi + 0x10], 1	       367	ref-filter.c	FUNCTION_14	ELSE_2	IF_3
0x400046a	      0xb800000000	                              mov eax, 0	       370	ref-filter.c	FUNCTION_14
0x400046f	              0xc3	                                     ret	       370	ref-filter.c	FUNCTION_14
0x4000470	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4000474	        0x4983c001	                               add r8, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4000478	        0x443a48ff	                 cmp r9b, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x400047c	            0x74d8	                            je 0x4000456	       488	git-compat-util.h	FUNCTION_112	DO_1
0x400047e	              0x55	                                push rbp	       360	ref-filter.c	FUNCTION_14
0x400047f	              0x53	                                push rbx	       360	ref-filter.c	FUNCTION_14
0x4000480	        0x4883ec08	                              sub rsp, 8	       360	ref-filter.c	FUNCTION_14
0x4000484	          0x4889cd	                            mov rbp, rcx	       360	ref-filter.c	FUNCTION_14
0x4000487	          0x4889d3	                            mov rbx, rdx	       360	ref-filter.c	FUNCTION_14
0x400048a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x400048f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4000494	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4000499	      0xe800000000	                          call 0x400049e	        54	gettext.h	FUNCTION_93
0x400049e	          0x4889d9	                            mov rcx, rbx	       369	ref-filter.c	FUNCTION_14	CALL_4
0x40004a1	          0x4889c2	                            mov rdx, rax	       369	ref-filter.c	FUNCTION_14	CALL_4
0x40004a4	      0xbeffffffff	                     mov esi, 0xffffffff	       369	ref-filter.c	FUNCTION_14	CALL_4
0x40004a9	          0x4889ef	                            mov rdi, rbp	       369	ref-filter.c	FUNCTION_14	CALL_4
0x40004ac	      0xb800000000	                              mov eax, 0	       369	ref-filter.c	FUNCTION_14	CALL_4
0x40004b1	      0xe89ffeffff	                call sym.strbuf_addf_ret	       369	ref-filter.c	FUNCTION_14	CALL_4
0x40004b6	        0x4883c408	                              add rsp, 8	       371	ref-filter.c	FUNCTION_14
0x40004ba	              0x5b	                                 pop rbx	       371	ref-filter.c	FUNCTION_14
0x40004bb	              0x5d	                                 pop rbp	       371	ref-filter.c	FUNCTION_14
0x40004bc	              0xc3	                                     ret	       371	ref-filter.c	FUNCTION_14
align_atom_parser	SWITCH,0:FOR,1:WHILE,0:DO,0:IF,8:functions,0:CALL,22:ELSE,4	205
0x40023c7	            0x4157	                                push r15	       308	ref-filter.c	FUNCTION_13
0x40023c9	            0x4156	                                push r14	       308	ref-filter.c	FUNCTION_13
0x40023cb	            0x4155	                                push r13	       308	ref-filter.c	FUNCTION_13
0x40023cd	            0x4154	                                push r12	       308	ref-filter.c	FUNCTION_13
0x40023cf	              0x55	                                push rbp	       308	ref-filter.c	FUNCTION_13
0x40023d0	              0x53	                                push rbx	       308	ref-filter.c	FUNCTION_13
0x40023d1	        0x4883ec48	                           sub rsp, 0x48	       308	ref-filter.c	FUNCTION_13
0x40023d5	          0x4989cf	                            mov r15, rcx	       308	ref-filter.c	FUNCTION_13
0x40023d8	    0x64488b042528	                mov rax, qword fs:[0x28]	       308	ref-filter.c	FUNCTION_13
0x40023e1	      0x4889442438	             mov qword [rsp + 0x38], rax	       308	ref-filter.c	FUNCTION_13
0x40023e6	            0x31c0	                            xor eax, eax	       308	ref-filter.c	FUNCTION_13
0x40023e8	    0x48c744241000	               mov qword [rsp + 0x10], 0	       310	ref-filter.c	FUNCTION_13
0x40023f1	    0xc74424180000	               mov dword [rsp + 0x18], 0	       310	ref-filter.c	FUNCTION_13
0x40023f9	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       310	ref-filter.c	FUNCTION_13
0x4002401	      0x804c242001	                 or byte [rsp + 0x20], 1	       310	ref-filter.c	FUNCTION_13
0x4002406	    0x48c744242800	               mov qword [rsp + 0x28], 0	       310	ref-filter.c	FUNCTION_13
0x400240f	          0x4885d2	                           test rdx, rdx	       314	ref-filter.c	FUNCTION_13	IF_1
0x4002412	            0x752e	                           jne 0x4002442	       314	ref-filter.c	FUNCTION_13	IF_1
0x4002414	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4002419	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x400241e	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4002423	      0xe800000000	                          call 0x4002428	        54	gettext.h	FUNCTION_93
0x4002428	          0x4889c2	                            mov rdx, rax	       315	ref-filter.c	FUNCTION_13	CALL_2
0x400242b	      0xbeffffffff	                     mov esi, 0xffffffff	       315	ref-filter.c	FUNCTION_13	CALL_2
0x4002430	          0x4c89ff	                            mov rdi, r15	       315	ref-filter.c	FUNCTION_13	CALL_2
0x4002433	      0xb800000000	                              mov eax, 0	       315	ref-filter.c	FUNCTION_13	CALL_2
0x4002438	      0xe818dfffff	                call sym.strbuf_addf_ret	       315	ref-filter.c	FUNCTION_13	CALL_2
0x400243d	      0xe908020000	                           jmp 0x400264a	       315	ref-filter.c	FUNCTION_13	CALL_2
0x4002442	          0x4989f6	                            mov r14, rsi	       315	ref-filter.c	FUNCTION_13	CALL_2
0x4002445	          0x4889d6	                            mov rsi, rdx	       315	ref-filter.c	FUNCTION_13	CALL_2
0x4002448	    0x41c746100000	               mov dword [r14 + 0x10], 0	       317	ref-filter.c	FUNCTION_13
0x4002450	      0xb9ffffffff	                     mov ecx, 0xffffffff	       319	ref-filter.c	FUNCTION_13	CALL_3
0x4002455	      0xba2c000000	                           mov edx, 0x2c	       319	ref-filter.c	FUNCTION_13	CALL_3
0x400245a	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       319	ref-filter.c	FUNCTION_13	CALL_3
0x400245f	      0xe800000000	                          call 0x4002464	       319	ref-filter.c	FUNCTION_13	CALL_3
0x4002464	      0x837c241800	               cmp dword [rsp + 0x18], 0	       320	ref-filter.c	FUNCTION_13	FOR_1
0x4002469	     0xf8489010000	                            je 0x40025f8	       320	ref-filter.c	FUNCTION_13	FOR_1
0x400246f	    0x41bdffffffff	                    mov r13d, 0xffffffff	       320	ref-filter.c	FUNCTION_13	FOR_1
0x4002475	      0xbd00000000	                              mov ebp, 0	       320	ref-filter.c	FUNCTION_13	FOR_1
0x400247a	          0x4863c5	                         movsxd rax, ebp	       321	ref-filter.c	FUNCTION_13	FOR_1
0x400247d	        0x48c1e004	                              shl rax, 4	       321	ref-filter.c	FUNCTION_13	FOR_1
0x4002481	      0x4803442410	             add rax, qword [rsp + 0x10]	       321	ref-filter.c	FUNCTION_13	FOR_1
0x4002486	          0x4c8b20	                    mov r12, qword [rax]	       321	ref-filter.c	FUNCTION_13	FOR_1
0x4002489	          0x4c89e3	                            mov rbx, r12	       321	ref-filter.c	FUNCTION_13	FOR_1
0x400248c	      0xb800000000	                              mov eax, 0	       321	ref-filter.c	FUNCTION_13	FOR_1
0x4002491	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4002494	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4002496	     0xf84c7010000	                            je 0x4002663	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x400249c	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40024a0	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40024a4	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40024a7	            0x74e8	                            je 0x4002491	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40024a9	          0x4c89e3	                            mov rbx, r12	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40024ac	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40024b1	            0xeb49	                           jmp 0x40024fc	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40024b3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x40024b8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40024bd	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x40024c2	      0xe800000000	                          call 0x40024c7	        54	gettext.h	FUNCTION_93
0x40024c7	          0x4889da	                            mov rdx, rbx	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x40024ca	          0x4889c6	                            mov rsi, rax	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x40024cd	          0x4c89ff	                            mov rdi, r15	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x40024d0	      0xb800000000	                              mov eax, 0	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x40024d5	      0xe800000000	                          call 0x40024da	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x40024da	      0xbe00000000	                              mov esi, 0	       328	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_8
0x40024df	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       328	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_8
0x40024e4	      0xe800000000	                          call 0x40024e9	       328	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_8
0x40024e9	      0xb8ffffffff	                     mov eax, 0xffffffff	       329	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3
0x40024ee	      0xe957010000	                           jmp 0x400264a	       329	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3
0x40024f3	        0x41894610	             mov dword [r14 + 0x10], eax	       331	ref-filter.c	FUNCTION_13	FOR_1	IF_2
0x40024f7	      0xe9e9000000	                           jmp 0x40025e5	       331	ref-filter.c	FUNCTION_13	FOR_1	IF_2
0x40024fc	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x40024ff	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4002501	     0xf8471010000	                            je 0x4002678	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4002507	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x400250b	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x400250f	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002512	            0x74e8	                            je 0x40024fc	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002514	      0xe985010000	                           jmp 0x400269e	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002519	      0xba0a000000	                            mov edx, 0xa	      1018	git-compat-util.h	FUNCTION_128	CALL_2
0x400251e	      0x488d742408	                      lea rsi, [rsp + 8]	      1018	git-compat-util.h	FUNCTION_128	CALL_2
0x4002523	          0x4889df	                            mov rdi, rbx	      1018	git-compat-util.h	FUNCTION_128	CALL_2
0x4002526	      0xe800000000	                          call 0x400252b	      1018	git-compat-util.h	FUNCTION_128	CALL_2
0x400252b	      0x41833c2400	                      cmp dword [r12], 0	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002530	     0xf858e010000	                           jne 0x40026c4	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002536	      0x488b542408	                mov rdx, qword [rsp + 8]	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x400253b	          0x803a00	                       cmp byte [rdx], 0	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x400253e	     0xf8580010000	                           jne 0x40026c4	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002544	          0x4839d3	                            cmp rbx, rdx	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002547	     0xf8477010000	                            je 0x40026c4	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x400254d	            0x89c2	                            mov edx, eax	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x400254f	          0x4839d0	                            cmp rax, rdx	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002552	     0xf856c010000	                           jne 0x40026c4	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002558	          0x4189c5	                           mov r13d, eax	      1021	git-compat-util.h	FUNCTION_128
0x400255b	      0xe985000000	                           jmp 0x40025e5	      1021	git-compat-util.h	FUNCTION_128
0x4002560	      0xba0a000000	                            mov edx, 0xa	      1018	git-compat-util.h	FUNCTION_128	CALL_2
0x4002565	      0x488d742408	                      lea rsi, [rsp + 8]	      1018	git-compat-util.h	FUNCTION_128	CALL_2
0x400256a	          0x4c89e7	                            mov rdi, r12	      1018	git-compat-util.h	FUNCTION_128	CALL_2
0x400256d	      0xe800000000	                          call 0x4002572	      1018	git-compat-util.h	FUNCTION_128	CALL_2
0x4002572	          0x833b00	                      cmp dword [rbx], 0	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002575	     0xf8589010000	                           jne 0x4002704	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x400257b	      0x488b542408	                mov rdx, qword [rsp + 8]	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002580	          0x803a00	                       cmp byte [rdx], 0	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002583	     0xf857b010000	                           jne 0x4002704	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002589	          0x4939d4	                            cmp r12, rdx	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x400258c	     0xf8472010000	                            je 0x4002704	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002592	            0x89c2	                            mov edx, eax	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002594	          0x4839d0	                            cmp rax, rdx	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002597	     0xf8567010000	                           jne 0x4002704	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x400259d	          0x4189c5	                           mov r13d, eax	      1021	git-compat-util.h	FUNCTION_128
0x40025a0	            0xeb43	                           jmp 0x40025e5	      1021	git-compat-util.h	FUNCTION_128
0x40025a2	        0x41894610	             mov dword [r14 + 0x10], eax	       341	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7
0x40025a6	            0xeb3d	                           jmp 0x40025e5	       341	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7
0x40025a8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x40025ad	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40025b2	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x40025b7	      0xe800000000	                          call 0x40025bc	        54	gettext.h	FUNCTION_93
0x40025bc	          0x4c89e2	                            mov rdx, r12	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x40025bf	          0x4889c6	                            mov rsi, rax	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x40025c2	          0x4c89ff	                            mov rdi, r15	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x40025c5	      0xb800000000	                              mov eax, 0	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x40025ca	      0xe800000000	                          call 0x40025cf	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x40025cf	      0xbe00000000	                              mov esi, 0	       344	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_18
0x40025d4	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       344	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_18
0x40025d9	      0xe800000000	                          call 0x40025de	       344	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_18
0x40025de	      0xb8ffffffff	                     mov eax, 0xffffffff	       345	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4
0x40025e3	            0xeb65	                           jmp 0x400264a	       345	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4
0x40025e5	          0x83c501	                              add ebp, 1	       320	ref-filter.c	FUNCTION_13	FOR_1
0x40025e8	        0x396c2418	            cmp dword [rsp + 0x18], ebp 	       320	ref-filter.c	FUNCTION_13	FOR_1
0x40025ec	     0xf8788feffff	                            ja 0x400247a	       320	ref-filter.c	FUNCTION_13	FOR_1
0x40025f2	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	       349	ref-filter.c	FUNCTION_13	IF_8
0x40025f6	            0x753a	                           jne 0x4002632	       349	ref-filter.c	FUNCTION_13	IF_8
0x40025f8	      0xbe00000000	                              mov esi, 0	       350	ref-filter.c	FUNCTION_13	IF_8	CALL_19
0x40025fd	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       350	ref-filter.c	FUNCTION_13	IF_8	CALL_19
0x4002602	      0xe800000000	                          call 0x4002607	       350	ref-filter.c	FUNCTION_13	IF_8	CALL_19
0x4002607	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x400260c	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4002611	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4002616	      0xe800000000	                          call 0x400261b	        54	gettext.h	FUNCTION_93
0x400261b	          0x4889c2	                            mov rdx, rax	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x400261e	      0xbeffffffff	                     mov esi, 0xffffffff	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x4002623	          0x4c89ff	                            mov rdi, r15	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x4002626	      0xb800000000	                              mov eax, 0	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x400262b	      0xe825ddffff	                call sym.strbuf_addf_ret	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x4002630	            0xeb18	                           jmp 0x400264a	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x4002632	        0x45896e14	            mov dword [r14 + 0x14], r13d	       353	ref-filter.c	FUNCTION_13
0x4002636	      0xbe00000000	                              mov esi, 0	       354	ref-filter.c	FUNCTION_13	CALL_22
0x400263b	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       354	ref-filter.c	FUNCTION_13	CALL_22
0x4002640	      0xe800000000	                          call 0x4002645	       354	ref-filter.c	FUNCTION_13	CALL_22
0x4002645	      0xb800000000	                              mov eax, 0	       355	ref-filter.c	FUNCTION_13
0x400264a	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       356	ref-filter.c	FUNCTION_13
0x400264f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       356	ref-filter.c	FUNCTION_13
0x4002658	     0xf84c0000000	                            je 0x400271e	       356	ref-filter.c	FUNCTION_13
0x400265e	      0xe9b6000000	                           jmp 0x4002719	       356	ref-filter.c	FUNCTION_13
0x4002663	          0x4889df	                            mov rdi, rbx	       325	ref-filter.c	FUNCTION_13	FOR_1	IF_2	CALL_5
0x4002666	      0xe813daffff	           call sym.parse_align_position	       325	ref-filter.c	FUNCTION_13	FOR_1	IF_2	CALL_5
0x400266b	            0x85c0	                           test eax, eax	       326	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3
0x400266d	     0xf8980feffff	                           jns 0x40024f3	       326	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3
0x4002673	      0xe93bfeffff	                           jmp 0x40024b3	       326	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3
0x4002678	      0xe800000000	                          call 0x400267d	      1014	git-compat-util.h	FUNCTION_128
0x400267d	          0x4989c4	                            mov r12, rax	      1014	git-compat-util.h	FUNCTION_128
0x4002680	    0xc70000000000	                      mov dword [rax], 0	      1014	git-compat-util.h	FUNCTION_128
0x4002686	      0xbe2d000000	                           mov esi, 0x2d	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x400268b	          0x4889df	                            mov rdi, rbx	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x400268e	      0xe800000000	                          call 0x4002693	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x4002693	          0x4885c0	                           test rax, rax	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x4002696	     0xf847dfeffff	                            je 0x4002519	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x400269c	            0xeb26	                           jmp 0x40026c4	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x400269e	      0xe800000000	                          call 0x40026a3	      1014	git-compat-util.h	FUNCTION_128
0x40026a3	          0x4889c3	                            mov rbx, rax	      1014	git-compat-util.h	FUNCTION_128
0x40026a6	    0xc70000000000	                      mov dword [rax], 0	      1014	git-compat-util.h	FUNCTION_128
0x40026ac	      0xbe2d000000	                           mov esi, 0x2d	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x40026b1	          0x4c89e7	                            mov rdi, r12	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x40026b4	      0xe800000000	                          call 0x40026b9	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x40026b9	          0x4885c0	                           test rax, rax	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x40026bc	     0xf849efeffff	                            je 0x4002560	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x40026c2	            0xeb40	                           jmp 0x4002704	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x40026c4	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x40026c9	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40026ce	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x40026d3	      0xe800000000	                          call 0x40026d8	        54	gettext.h	FUNCTION_93
0x40026d8	          0x4889da	                            mov rdx, rbx	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x40026db	          0x4889c6	                            mov rsi, rax	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x40026de	          0x4c89ff	                            mov rdi, r15	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x40026e1	      0xb800000000	                              mov eax, 0	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x40026e6	      0xe800000000	                          call 0x40026eb	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x40026eb	      0xbe00000000	                              mov esi, 0	       335	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_13
0x40026f0	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       335	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_13
0x40026f5	      0xe800000000	                          call 0x40026fa	       335	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_13
0x40026fa	      0xb8ffffffff	                     mov eax, 0xffffffff	       336	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5
0x40026ff	      0xe946ffffff	                           jmp 0x400264a	       336	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5
0x4002704	          0x4c89e7	                            mov rdi, r12	       340	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7	CALL_15
0x4002707	      0xe872d9ffff	           call sym.parse_align_position	       340	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7	CALL_15
0x400270c	            0x85c0	                           test eax, eax	       340	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7	CALL_15
0x400270e	     0xf898efeffff	                           jns 0x40025a2	       340	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7	CALL_15
0x4002714	      0xe98ffeffff	                           jmp 0x40025a8	       340	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7	CALL_15
0x4002719	      0xe800000000	                          call 0x400271e	       356	ref-filter.c	FUNCTION_13
0x400271e	        0x4883c448	                           add rsp, 0x48	       356	ref-filter.c	FUNCTION_13
0x4002722	              0x5b	                                 pop rbx	       356	ref-filter.c	FUNCTION_13
0x4002723	              0x5d	                                 pop rbp	       356	ref-filter.c	FUNCTION_13
0x4002724	            0x415c	                                 pop r12	       356	ref-filter.c	FUNCTION_13
0x4002726	            0x415d	                                 pop r13	       356	ref-filter.c	FUNCTION_13
0x4002728	            0x415e	                                 pop r14	       356	ref-filter.c	FUNCTION_13
0x400272a	            0x415f	                                 pop r15	       356	ref-filter.c	FUNCTION_13
0x400272c	              0xc3	                                     ret	       356	ref-filter.c	FUNCTION_13
body_atom_parser	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,1:functions,0:CALL,2:ELSE,0	19
0x400079a	          0x4885d2	                           test rdx, rdx	       205	ref-filter.c	FUNCTION_6	IF_1
0x400079d	            0x742f	                            je 0x40007ce	       205	ref-filter.c	FUNCTION_6	IF_1
0x400079f	              0x53	                                push rbx	       204	ref-filter.c	FUNCTION_6
0x40007a0	          0x4889cb	                            mov rbx, rcx	       204	ref-filter.c	FUNCTION_6
0x40007a3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x40007a8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40007ad	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x40007b2	      0xe800000000	                          call 0x40007b7	        54	gettext.h	FUNCTION_93
0x40007b7	          0x4889c2	                            mov rdx, rax	       206	ref-filter.c	FUNCTION_6	CALL_2
0x40007ba	      0xbeffffffff	                     mov esi, 0xffffffff	       206	ref-filter.c	FUNCTION_6	CALL_2
0x40007bf	          0x4889df	                            mov rdi, rbx	       206	ref-filter.c	FUNCTION_6	CALL_2
0x40007c2	      0xb800000000	                              mov eax, 0	       206	ref-filter.c	FUNCTION_6	CALL_2
0x40007c7	      0xe889fbffff	                call sym.strbuf_addf_ret	       206	ref-filter.c	FUNCTION_6	CALL_2
0x40007cc	            0xeb0d	                           jmp 0x40007db	       206	ref-filter.c	FUNCTION_6	CALL_2
0x40007ce	    0xc74610020000	               mov dword [rsi + 0x10], 2	       207	ref-filter.c	FUNCTION_6
0x40007d5	      0xb800000000	                              mov eax, 0	       208	ref-filter.c	FUNCTION_6
0x40007da	              0xc3	                                     ret	       208	ref-filter.c	FUNCTION_6
0x40007db	              0x5b	                                 pop rbx	       209	ref-filter.c	FUNCTION_6
0x40007dc	              0xc3	                                     ret	       209	ref-filter.c	FUNCTION_6
end_align_handler	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,0:functions,0:CALL,3:ELSE,0	39
0x4001ed4	              0x53	                                push rbx	       579	ref-filter.c	FUNCTION_21
0x4001ed5	        0x4883ec40	                           sub rsp, 0x40	       579	ref-filter.c	FUNCTION_21
0x4001ed9	    0x64488b042528	                mov rax, qword fs:[0x28]	       579	ref-filter.c	FUNCTION_21
0x4001ee2	      0x4889442438	             mov qword [rsp + 0x38], rax	       579	ref-filter.c	FUNCTION_21
0x4001ee7	            0x31c0	                            xor eax, eax	       579	ref-filter.c	FUNCTION_21
0x4001ee9	          0x488b1f	                    mov rbx, qword [rdi]	       580	ref-filter.c	FUNCTION_21
0x4001eec	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       581	ref-filter.c	FUNCTION_21
0x4001ef0	    0x48c704240000	                      mov qword [rsp], 0	       582	ref-filter.c	FUNCTION_21
0x4001ef8	    0x48c744240800	                  mov qword [rsp + 8], 0	       582	ref-filter.c	FUNCTION_21
0x4001f01	    0x48c744241000	               mov qword [rsp + 0x10], 0	       582	ref-filter.c	FUNCTION_21
0x4001f0a	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	       584	ref-filter.c	FUNCTION_21	CALL_1
0x4001f0e	          0x8b5004	                mov edx, dword [rax + 4]	       584	ref-filter.c	FUNCTION_21	CALL_1
0x4001f11	            0x8b30	                    mov esi, dword [rax]	       584	ref-filter.c	FUNCTION_21	CALL_1
0x4001f13	          0x4889e7	                            mov rdi, rsp	       584	ref-filter.c	FUNCTION_21	CALL_1
0x4001f16	      0xe800000000	                          call 0x4001f1b	       584	ref-filter.c	FUNCTION_21	CALL_1
0x4001f1b	        0x488b7308	                mov rsi, qword [rbx + 8]	        53	string3.h	FUNCTION_133	CALL_3
0x4001f1f	      0x4889742420	             mov qword [rsp + 0x20], rsi	        53	string3.h	FUNCTION_133	CALL_3
0x4001f24	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	        53	string3.h	FUNCTION_133	CALL_3
0x4001f28	      0x48894c2428	             mov qword [rsp + 0x28], rcx	        53	string3.h	FUNCTION_133	CALL_3
0x4001f2d	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	        53	string3.h	FUNCTION_133	CALL_3
0x4001f31	      0x4889542430	             mov qword [rsp + 0x30], rdx	        53	string3.h	FUNCTION_133	CALL_3
0x4001f36	        0x488b3c24	                    mov rdi, qword [rsp]	        53	string3.h	FUNCTION_133	CALL_3
0x4001f3a	        0x48897b08	                mov qword [rbx + 8], rdi	        53	string3.h	FUNCTION_133	CALL_3
0x4001f3e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        53	string3.h	FUNCTION_133	CALL_3
0x4001f43	        0x48897b10	             mov qword [rbx + 0x10], rdi	        53	string3.h	FUNCTION_133	CALL_3
0x4001f47	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_133	CALL_3
0x4001f4c	        0x48897b18	             mov qword [rbx + 0x18], rdi	        53	string3.h	FUNCTION_133	CALL_3
0x4001f50	        0x48893424	                    mov qword [rsp], rsi	        53	string3.h	FUNCTION_133	CALL_3
0x4001f54	      0x48894c2408	                mov qword [rsp + 8], rcx	        53	string3.h	FUNCTION_133	CALL_3
0x4001f59	      0x4889542410	             mov qword [rsp + 0x10], rdx	        53	string3.h	FUNCTION_133	CALL_3
0x4001f5e	          0x4889e7	                            mov rdi, rsp	       586	ref-filter.c	FUNCTION_21	CALL_3
0x4001f61	      0xe800000000	                          call 0x4001f66	       586	ref-filter.c	FUNCTION_21	CALL_3
0x4001f66	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       587	ref-filter.c	FUNCTION_21
0x4001f6b	    0x644833042528	                xor rax, qword fs:[0x28]	       587	ref-filter.c	FUNCTION_21
0x4001f74	            0x7405	                            je 0x4001f7b	       587	ref-filter.c	FUNCTION_21
0x4001f76	      0xe800000000	                          call 0x4001f7b	       587	ref-filter.c	FUNCTION_21
0x4001f7b	        0x4883c440	                           add rsp, 0x40	       587	ref-filter.c	FUNCTION_21
0x4001f7f	              0x5b	                                 pop rbx	       587	ref-filter.c	FUNCTION_21
0x4001f80	              0xc3	                                     ret	       587	ref-filter.c	FUNCTION_21
get_head_description	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,5:functions,0:CALL,18:ELSE,5	111
0x40038f4	              0x53	                                push rbx	      1379	ref-filter.c	FUNCTION_53
0x40038f5	    0x4881ecb00000	                           sub rsp, 0xb0	      1379	ref-filter.c	FUNCTION_53
0x40038fc	    0x64488b042528	                mov rax, qword fs:[0x28]	      1379	ref-filter.c	FUNCTION_53
0x4003905	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      1379	ref-filter.c	FUNCTION_53
0x400390d	            0x31c0	                            xor eax, eax	      1379	ref-filter.c	FUNCTION_53
0x400390f	    0x48c704240000	                      mov qword [rsp], 0	      1380	ref-filter.c	FUNCTION_53
0x4003917	    0x48c744240800	                  mov qword [rsp + 8], 0	      1380	ref-filter.c	FUNCTION_53
0x4003920	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1380	ref-filter.c	FUNCTION_53
0x4003929	      0x488d542420	                   lea rdx, [rsp + 0x20]	        90	string3.h	FUNCTION_136	CALL_6
0x400392e	      0xb910000000	                           mov ecx, 0x10	        90	string3.h	FUNCTION_136	CALL_6
0x4003933	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_136	CALL_6
0x4003936	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_136	CALL_6
0x4003939	      0xbe01000000	                              mov esi, 1	      1383	ref-filter.c	FUNCTION_53	CALL_2
0x400393e	          0x4889d7	                            mov rdi, rdx	      1383	ref-filter.c	FUNCTION_53	CALL_2
0x4003941	      0xe800000000	                          call 0x4003946	      1383	ref-filter.c	FUNCTION_53	CALL_2
0x4003946	      0x837c242c00	               cmp dword [rsp + 0x2c], 0	      1384	ref-filter.c	FUNCTION_53	IF_1
0x400394b	            0x7507	                           jne 0x4003954	      1384	ref-filter.c	FUNCTION_53	IF_1
0x400394d	      0x837c243000	               cmp dword [rsp + 0x30], 0	      1384	ref-filter.c	FUNCTION_53	IF_1
0x4003952	            0x7467	                            je 0x40039bb	      1384	ref-filter.c	FUNCTION_53	IF_1
0x4003954	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      1386	ref-filter.c	FUNCTION_53	IF_1	IF_2
0x4003959	          0x4885db	                           test rbx, rbx	      1386	ref-filter.c	FUNCTION_53	IF_1	IF_2
0x400395c	            0x742c	                            je 0x400398a	      1386	ref-filter.c	FUNCTION_53	IF_1	IF_2
0x400395e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4003963	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4003968	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x400396d	      0xe800000000	                          call 0x4003972	        54	gettext.h	FUNCTION_93
0x4003972	          0x4889da	                            mov rdx, rbx	      1387	ref-filter.c	FUNCTION_53	IF_1	IF_2	CALL_4
0x4003975	          0x4889c6	                            mov rsi, rax	      1387	ref-filter.c	FUNCTION_53	IF_1	IF_2	CALL_4
0x4003978	          0x4889e7	                            mov rdi, rsp	      1387	ref-filter.c	FUNCTION_53	IF_1	IF_2	CALL_4
0x400397b	      0xb800000000	                              mov eax, 0	      1387	ref-filter.c	FUNCTION_53	IF_1	IF_2	CALL_4
0x4003980	      0xe800000000	                          call 0x4003985	      1387	ref-filter.c	FUNCTION_53	IF_1	IF_2	CALL_4
0x4003985	      0xe906010000	                           jmp 0x4003a90	      1387	ref-filter.c	FUNCTION_53	IF_1	IF_2	CALL_4
0x400398a	      0x488b5c2458	            mov rbx, qword [rsp + 0x58] 	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x400398f	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4003994	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4003999	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x400399e	      0xe800000000	                          call 0x40039a3	        54	gettext.h	FUNCTION_93
0x40039a3	          0x4889da	                            mov rdx, rbx	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x40039a6	          0x4889c6	                            mov rsi, rax	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x40039a9	          0x4889e7	                            mov rdi, rsp	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x40039ac	      0xb800000000	                              mov eax, 0	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x40039b1	      0xe800000000	                          call 0x40039b6	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x40039b6	      0xe9d5000000	                           jmp 0x4003a90	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x40039bb	      0x837c243800	               cmp dword [rsp + 0x38], 0	      1392	ref-filter.c	FUNCTION_53	ELSE_2	IF_3
0x40039c0	            0x7431	                            je 0x40039f3	      1392	ref-filter.c	FUNCTION_53	ELSE_2	IF_3
0x40039c2	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x40039c7	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x40039cc	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40039d1	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x40039d6	      0xe800000000	                          call 0x40039db	        54	gettext.h	FUNCTION_93
0x40039db	          0x4889da	                            mov rdx, rbx	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x40039de	          0x4889c6	                            mov rsi, rax	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x40039e1	          0x4889e7	                            mov rdi, rsp	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x40039e4	      0xb800000000	                              mov eax, 0	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x40039e9	      0xe800000000	                          call 0x40039ee	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x40039ee	      0xe99d000000	                           jmp 0x4003a90	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x40039f3	      0x488b5c2458	            mov rbx, qword [rsp + 0x58] 	      1395	ref-filter.c	FUNCTION_53	ELSE_3	IF_4
0x40039f8	          0x4885db	                           test rbx, rbx	      1395	ref-filter.c	FUNCTION_53	ELSE_3	IF_4
0x40039fb	            0x7459	                            je 0x4003a56	      1395	ref-filter.c	FUNCTION_53	ELSE_3	IF_4
0x40039fd	      0x837c244000	               cmp dword [rsp + 0x40], 0	      1396	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5
0x4003a02	            0x7429	                            je 0x4003a2d	      1396	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5
0x4003a04	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4003a09	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4003a0e	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4003a13	      0xe800000000	                          call 0x4003a18	        54	gettext.h	FUNCTION_93
0x4003a18	          0x4889da	                            mov rdx, rbx	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x4003a1b	          0x4889c6	                            mov rsi, rax	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x4003a1e	          0x4889e7	                            mov rdi, rsp	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x4003a21	      0xb800000000	                              mov eax, 0	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x4003a26	      0xe800000000	                          call 0x4003a2b	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x4003a2b	            0xeb63	                           jmp 0x4003a90	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x4003a2d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4003a32	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4003a37	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4003a3c	      0xe800000000	                          call 0x4003a41	        54	gettext.h	FUNCTION_93
0x4003a41	          0x4889da	                            mov rdx, rbx	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x4003a44	          0x4889c6	                            mov rsi, rax	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x4003a47	          0x4889e7	                            mov rdi, rsp	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x4003a4a	      0xb800000000	                              mov eax, 0	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x4003a4f	      0xe800000000	                          call 0x4003a54	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x4003a54	            0xeb3a	                           jmp 0x4003a90	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x4003a56	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4003a5b	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4003a60	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4003a65	      0xe800000000	                          call 0x4003a6a	        54	gettext.h	FUNCTION_93
0x4003a6a	          0x4889c6	                            mov rsi, rax	        54	gettext.h	FUNCTION_93
0x4003a6d	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_99	CALL_2
0x4003a72	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_99	CALL_2
0x4003a79	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_99	CALL_2
0x4003a7c	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_99	CALL_2
0x4003a7e	          0x4889c8	                            mov rax, rcx	       279	strbuf.h	FUNCTION_99	CALL_2
0x4003a81	          0x48f7d0	                                 not rax	       279	strbuf.h	FUNCTION_99	CALL_2
0x4003a84	        0x488d50ff	                      lea rdx, [rax - 1]	       279	strbuf.h	FUNCTION_99	CALL_2
0x4003a88	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_99	CALL_2
0x4003a8b	      0xe800000000	                          call 0x4003a90	       279	strbuf.h	FUNCTION_99	CALL_2
0x4003a90	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      1413	ref-filter.c	FUNCTION_53	CALL_15
0x4003a95	      0xe800000000	                          call 0x4003a9a	      1413	ref-filter.c	FUNCTION_53	CALL_15
0x4003a9a	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      1414	ref-filter.c	FUNCTION_53	CALL_16
0x4003a9f	      0xe800000000	                          call 0x4003aa4	      1414	ref-filter.c	FUNCTION_53	CALL_16
0x4003aa4	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      1415	ref-filter.c	FUNCTION_53	CALL_17
0x4003aa9	      0xe800000000	                          call 0x4003aae	      1415	ref-filter.c	FUNCTION_53	CALL_17
0x4003aae	      0xbe00000000	                              mov esi, 0	      1416	ref-filter.c	FUNCTION_53	CALL_18
0x4003ab3	          0x4889e7	                            mov rdi, rsp	      1416	ref-filter.c	FUNCTION_53	CALL_18
0x4003ab6	      0xe800000000	                          call 0x4003abb	      1416	ref-filter.c	FUNCTION_53	CALL_18
0x4003abb	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	      1417	ref-filter.c	FUNCTION_53
0x4003ac3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1417	ref-filter.c	FUNCTION_53
0x4003acc	            0x7405	                            je 0x4003ad3	      1417	ref-filter.c	FUNCTION_53
0x4003ace	      0xe800000000	                          call 0x4003ad3	      1417	ref-filter.c	FUNCTION_53
0x4003ad3	    0x4881c4b00000	                           add rsp, 0xb0	      1417	ref-filter.c	FUNCTION_53
0x4003ada	              0x5b	                                 pop rbx	      1417	ref-filter.c	FUNCTION_53
0x4003adb	              0xc3	                                     ret	      1417	ref-filter.c	FUNCTION_53
ref_kind_from_refname	SWITCH,0:FOR,1:WHILE,0:DO,0:IF,2:functions,0:CALL,2:ELSE,0	34
0x40002e6	          0x4889fa	                            mov rdx, rdi	      1939	ref-filter.c	FUNCTION_72
0x40002e9	      0xbf00000000	                              mov edi, 0	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x40002ee	      0xb905000000	                              mov ecx, 5	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x40002f3	          0x4889d6	                            mov rsi, rdx	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x40002f6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x40002f8	        0x400f97c6	                                seta sil	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x40002fc	           0xf92c1	                                 setb cl	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x40002ff	      0xb820000000	                           mov eax, 0x20	      1952	ref-filter.c	FUNCTION_72	IF_1
0x4000304	          0x4038ce	                             cmp sil, cl	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4000307	            0x744a	                            je 0x4000353	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4000309	            0x4154	                                push r12	      1939	ref-filter.c	FUNCTION_72
0x400030b	              0x55	                                push rbp	      1939	ref-filter.c	FUNCTION_72
0x400030c	              0x53	                                push rbx	      1939	ref-filter.c	FUNCTION_72
0x400030d	          0x4889d5	                            mov rbp, rdx	      1939	ref-filter.c	FUNCTION_72
0x4000310	      0xbb00000000	                              mov ebx, 0	      1939	ref-filter.c	FUNCTION_72
0x4000315	          0x4889d8	                            mov rax, rbx	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_2
0x4000318	        0x48c1e004	                              shl rax, 4	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_2
0x400031c	    0x488bb0000000	                    mov rsi, qword [rax]	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_2
0x4000323	          0x4889ef	                            mov rdi, rbp	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_2
0x4000326	      0xe800000000	                          call 0x400032b	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_2
0x400032b	            0x85c0	                           test eax, eax	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_2
0x400032d	            0x7411	                            je 0x4000340	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_2
0x400032f	          0x4189dc	                           mov r12d, ebx	      1956	ref-filter.c	FUNCTION_72	FOR_1	IF_2
0x4000332	        0x49c1e404	                              shl r12, 4	      1956	ref-filter.c	FUNCTION_72	FOR_1	IF_2
0x4000336	    0x418b84240000	                    mov eax, dword [r12]	      1956	ref-filter.c	FUNCTION_72	FOR_1	IF_2
0x400033e	            0xeb0f	                           jmp 0x400034f	      1956	ref-filter.c	FUNCTION_72	FOR_1	IF_2
0x4000340	        0x4883c301	                              add rbx, 1	      1956	ref-filter.c	FUNCTION_72	FOR_1	IF_2
0x4000344	        0x4883fb03	                              cmp rbx, 3	      1954	ref-filter.c	FUNCTION_72	FOR_1
0x4000348	            0x75cb	                           jne 0x4000315	      1954	ref-filter.c	FUNCTION_72	FOR_1
0x400034a	      0xb810000000	                           mov eax, 0x10	      1959	ref-filter.c	FUNCTION_72
0x400034f	              0x5b	                                 pop rbx	      1960	ref-filter.c	FUNCTION_72
0x4000350	              0x5d	                                 pop rbp	      1960	ref-filter.c	FUNCTION_72
0x4000351	            0x415c	                                 pop r12	      1960	ref-filter.c	FUNCTION_72
0x4000353	            0xf3c3	                                     ret	      1960	ref-filter.c	FUNCTION_72
refname_atom_parser	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,0:functions,0:CALL,1:ELSE,0	8
0x40023ac	        0x4883ec08	                              sub rsp, 8	       291	ref-filter.c	FUNCTION_11
0x40023b0	          0x4889d0	                            mov rax, rdx	       291	ref-filter.c	FUNCTION_11
0x40023b3	        0x488d7e10	                   lea rdi, [rsi + 0x10]	       292	ref-filter.c	FUNCTION_11	CALL_1
0x40023b7	          0x488b16	                    mov rdx, qword [rsi]	       292	ref-filter.c	FUNCTION_11	CALL_1
0x40023ba	          0x4889c6	                            mov rsi, rax	       292	ref-filter.c	FUNCTION_11	CALL_1
0x40023bd	      0xe8bffbffff	   call sym.refname_atom_parser_internal	       292	ref-filter.c	FUNCTION_11	CALL_1
0x40023c2	        0x4883c408	                              add rsp, 8	       293	ref-filter.c	FUNCTION_11
0x40023c6	              0xc3	                                     ret	       293	ref-filter.c	FUNCTION_11
parse_ref_filter_atom	SWITCH,0:FOR,2:WHILE,0:DO,0:IF,10:functions,0:CALL,13:ELSE,0	217
0x4000820	            0x4157	                                push r15	       455	ref-filter.c	FUNCTION_16
0x4000822	            0x4156	                                push r14	       455	ref-filter.c	FUNCTION_16
0x4000824	            0x4155	                                push r13	       455	ref-filter.c	FUNCTION_16
0x4000826	            0x4154	                                push r12	       455	ref-filter.c	FUNCTION_16
0x4000828	              0x55	                                push rbp	       455	ref-filter.c	FUNCTION_16
0x4000829	              0x53	                                push rbx	       455	ref-filter.c	FUNCTION_16
0x400082a	        0x4883ec48	                           sub rsp, 0x48	       455	ref-filter.c	FUNCTION_16
0x400082e	      0x48897c2430	             mov qword [rsp + 0x30], rdi	       455	ref-filter.c	FUNCTION_16
0x4000833	        0x48893424	                    mov qword [rsp], rsi	       455	ref-filter.c	FUNCTION_16
0x4000837	      0x4889542418	             mov qword [rsp + 0x18], rdx	       455	ref-filter.c	FUNCTION_16
0x400083c	      0x48894c2428	             mov qword [rsp + 0x28], rcx	       455	ref-filter.c	FUNCTION_16
0x4000841	          0x803e2a	                    cmp byte [rsi], 0x2a	       461	ref-filter.c	FUNCTION_16	IF_1
0x4000844	            0x7513	                           jne 0x4000859	       461	ref-filter.c	FUNCTION_16	IF_1
0x4000846	          0x4889f0	                            mov rax, rsi	       461	ref-filter.c	FUNCTION_16	IF_1
0x4000849	          0x4839d0	                            cmp rax, rdx	       461	ref-filter.c	FUNCTION_16	IF_1
0x400084c	            0x730b	                           jae 0x4000859	       461	ref-filter.c	FUNCTION_16	IF_1
0x400084e	        0x4883c001	                              add rax, 1	       462	ref-filter.c	FUNCTION_16	IF_1
0x4000852	      0x4889442408	                mov qword [rsp + 8], rax	       462	ref-filter.c	FUNCTION_16	IF_1
0x4000857	            0xeb09	                           jmp 0x4000862	       462	ref-filter.c	FUNCTION_16	IF_1
0x4000859	        0x488b0424	                    mov rax, qword [rsp]	       460	ref-filter.c	FUNCTION_16
0x400085d	      0x4889442408	                mov qword [rsp + 8], rax	       460	ref-filter.c	FUNCTION_16
0x4000862	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       463	ref-filter.c	FUNCTION_16	IF_2
0x4000867	      0x4839442408	                cmp qword [rsp + 8], rax	       463	ref-filter.c	FUNCTION_16	IF_2
0x400086c	            0x7331	                           jae 0x400089f	       463	ref-filter.c	FUNCTION_16	IF_2
0x400086e	    0x448b2d000000	           mov r13d, dword [0x04000875] 	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4000875	    0x488b2d000000	            mov rbp, qword [0x0400087c] 	       468	ref-filter.c	FUNCTION_16	FOR_1
0x400087c	      0xbb00000000	                              mov ebx, 0	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x4000881	    0x49c7c7ffffff	             mov r15, 0xffffffffffffffff	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x4000888	    0x41be00000000	                             mov r14d, 0	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x400088e	          0x4989c4	                            mov r12, rax	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4000891	        0x4c2b2424	                    sub r12, qword [rsp]	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4000895	          0x4585ed	                         test r13d, r13d	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4000898	            0x7f47	                            jg 0x40008e1	       468	ref-filter.c	FUNCTION_16	FOR_1
0x400089a	      0xe983000000	                           jmp 0x4000922	       468	ref-filter.c	FUNCTION_16	FOR_1
0x400089f	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x40008a4	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40008a9	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x40008ae	      0xe800000000	                          call 0x40008b3	        54	gettext.h	FUNCTION_93
0x40008b3	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x40008b8	        0x488b3424	                    mov rsi, qword [rsp]	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x40008bc	          0x4829f1	                            sub rcx, rsi	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x40008bf	          0x4989f0	                             mov r8, rsi	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x40008c2	          0x4889c2	                            mov rdx, rax	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x40008c5	      0xbeffffffff	                     mov esi, 0xffffffff	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x40008ca	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x40008cf	      0xb800000000	                              mov eax, 0	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x40008d4	      0xe87cfaffff	                call sym.strbuf_addf_ret	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x40008d9	          0x4189c5	                           mov r13d, eax	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x40008dc	      0xe975020000	                           jmp 0x4000b56	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x40008e1	        0x4c8b4500	                     mov r8, qword [rbp]	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x40008e5	          0x4c89f9	                            mov rcx, r15	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x40008e8	          0x4c89c7	                             mov rdi, r8	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x40008eb	          0x4489f0	                           mov eax, r14d	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x40008ee	            0xf2ae	              repne scasb al, byte [rdi]	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x40008f0	          0x48f7d1	                                 not rcx	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x40008f3	        0x4883e901	                              sub rcx, 1	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x40008f7	          0x4863c1	                         movsxd rax, ecx	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x40008fa	          0x4c39e0	                            cmp rax, r12	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x40008fd	            0x7517	                           jne 0x4000916	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x40008ff	          0x4889c2	                            mov rdx, rax	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4000902	        0x488b3424	                    mov rsi, qword [rsp]	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4000906	          0x4c89c7	                             mov rdi, r8	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4000909	      0xe800000000	                          call 0x400090e	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x400090e	            0x85c0	                           test eax, eax	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4000910	     0xf8435020000	                            je 0x4000b4b	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4000916	          0x83c301	                              add ebx, 1	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4000919	        0x4883c560	                           add rbp, 0x60	       468	ref-filter.c	FUNCTION_16	FOR_1
0x400091d	          0x4439eb	                           cmp ebx, r13d	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4000920	            0x75bf	                           jne 0x40008e1	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4000922	      0x488b442408	                mov rax, qword [rsp + 8]	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4000927	          0x4889c3	                            mov rbx, rax	       480	ref-filter.c	FUNCTION_16	CALL_5
0x400092a	      0x4c8b642418	            mov r12, qword [rsp + 0x18] 	       480	ref-filter.c	FUNCTION_16	CALL_5
0x400092f	          0x4c89e2	                            mov rdx, r12	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4000932	          0x4829c2	                            sub rdx, rax	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4000935	      0xbe3a000000	                           mov esi, 0x3a	       480	ref-filter.c	FUNCTION_16	CALL_5
0x400093a	          0x4889c7	                            mov rdi, rax	       480	ref-filter.c	FUNCTION_16	CALL_5
0x400093d	      0xe800000000	                          call 0x4000942	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4000942	      0x4889442420	             mov qword [rsp + 0x20], rax	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4000947	          0x4885c0	                           test rax, rax	       481	ref-filter.c	FUNCTION_16
0x400094a	        0x4c0f45e0	                         cmovne r12, rax	       481	ref-filter.c	FUNCTION_16
0x400094e	          0x4129dc	                           sub r12d, ebx	       481	ref-filter.c	FUNCTION_16
0x4000951	      0xbd00000000	                              mov ebp, 0	       481	ref-filter.c	FUNCTION_16
0x4000956	      0xbb00000000	                              mov ebx, 0	       481	ref-filter.c	FUNCTION_16
0x400095b	    0x49c7c7ffffff	             mov r15, 0xffffffffffffffff	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x4000962	    0x41be00000000	                             mov r14d, 0	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x4000968	          0x4963c4	                        movsxd rax, r12d	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x400096b	      0x4889442410	             mov qword [rsp + 0x10], rax	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x4000970	      0x44896c243c	            mov dword [rsp + 0x3c], r13d	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x4000975	        0x4c8b4500	                     mov r8, qword [rbp]	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x4000979	          0x4c89f9	                            mov rcx, r15	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x400097c	          0x4c89c7	                             mov rdi, r8	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x400097f	          0x4489f0	                           mov eax, r14d	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x4000982	            0xf2ae	              repne scasb al, byte [rdi]	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x4000984	          0x48f7d1	                                 not rcx	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x4000987	        0x4883e901	                              sub rcx, 1	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x400098b	          0x4139cc	                           cmp r12d, ecx	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x400098e	            0x7516	                           jne 0x40009a6	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x4000990	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x4000995	      0x488b742408	                mov rsi, qword [rsp + 8]	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x400099a	          0x4c89c7	                             mov rdi, r8	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x400099d	      0xe800000000	                          call 0x40009a2	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x40009a2	            0x85c0	                           test eax, eax	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x40009a4	            0x740e	                            je 0x40009b4	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x40009a6	          0x83c301	                              add ebx, 1	       484	ref-filter.c	FUNCTION_16	FOR_2
0x40009a9	        0x4883c518	                           add rbp, 0x18	       484	ref-filter.c	FUNCTION_16	FOR_2
0x40009ad	          0x83fb27	                           cmp ebx, 0x27	       484	ref-filter.c	FUNCTION_16	FOR_2
0x40009b0	            0x75c3	                           jne 0x4000975	       484	ref-filter.c	FUNCTION_16	FOR_2
0x40009b2	            0xeb0a	                           jmp 0x40009be	       484	ref-filter.c	FUNCTION_16	FOR_2
0x40009b4	      0x448b6c243c	           mov r13d, dword [rsp + 0x3c] 	       484	ref-filter.c	FUNCTION_16	FOR_2
0x40009b9	          0x83fb26	                           cmp ebx, 0x26	       490	ref-filter.c	FUNCTION_16	IF_5
0x40009bc	            0x7642	                           jbe 0x4000a00	       490	ref-filter.c	FUNCTION_16	IF_5
0x40009be	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x40009c3	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40009c8	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x40009cd	      0xe800000000	                          call 0x40009d2	        54	gettext.h	FUNCTION_93
0x40009d2	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x40009d7	        0x488b3424	                    mov rsi, qword [rsp]	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x40009db	          0x4829f1	                            sub rcx, rsi	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x40009de	          0x4989f0	                             mov r8, rsi	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x40009e1	          0x4889c2	                            mov rdx, rax	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x40009e4	      0xbeffffffff	                     mov esi, 0xffffffff	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x40009e9	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x40009ee	      0xb800000000	                              mov eax, 0	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x40009f3	      0xe85df9ffff	                call sym.strbuf_addf_ret	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x40009f8	          0x4189c5	                           mov r13d, eax	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x40009fb	      0xe956010000	                           jmp 0x4000b56	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x4000a00	        0x418d5501	                      lea edx, [r13 + 1]	       496	ref-filter.c	FUNCTION_16
0x4000a04	    0x891500000000	            mov dword [0x04000a0a], edx 	       496	ref-filter.c	FUNCTION_16
0x4000a0a	          0x4863d2	                         movsxd rdx, edx	       497	ref-filter.c	FUNCTION_16
0x4000a0d	    0x48b8aaaaaaaa	           movabs rax, 0x2aaaaaaaaaaaaaa	       795	git-compat-util.h	FUNCTION_120	IF_1
0x4000a17	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_120	IF_1
0x4000a1a	            0x7614	                           jbe 0x4000a30	       795	git-compat-util.h	FUNCTION_120	IF_1
0x4000a1c	      0xbe60000000	                           mov esi, 0x60	       796	git-compat-util.h	FUNCTION_120	IF_1	CALL_1
0x4000a21	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_120	IF_1	CALL_1
0x4000a26	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_120	IF_1	CALL_1
0x4000a2b	      0xe800000000	                          call 0x4000a30	       796	git-compat-util.h	FUNCTION_120	IF_1	CALL_1
0x4000a30	        0x488d2c52	                  lea rbp, [rdx + rdx*2]	       798	git-compat-util.h	FUNCTION_120
0x4000a34	        0x48c1e505	                              shl rbp, 5	       798	git-compat-util.h	FUNCTION_120
0x4000a38	          0x4889ee	                            mov rsi, rbp	       497	ref-filter.c	FUNCTION_16
0x4000a3b	    0x488b3d000000	            mov rdi, qword [0x04000a42] 	       497	ref-filter.c	FUNCTION_16
0x4000a42	      0xe800000000	                          call 0x4000a47	       497	ref-filter.c	FUNCTION_16
0x4000a47	    0x488905000000	            mov qword [0x04000a4e], rax 	       497	ref-filter.c	FUNCTION_16
0x4000a4e	        0x4883ed60	                           sub rbp, 0x60	       498	ref-filter.c	FUNCTION_16	CALL_10
0x4000a52	        0x4c8d2428	                    lea r12, [rax + rbp]	       498	ref-filter.c	FUNCTION_16	CALL_10
0x4000a56	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       498	ref-filter.c	FUNCTION_16	CALL_10
0x4000a5b	        0x4c8b3424	                    mov r14, qword [rsp]	       498	ref-filter.c	FUNCTION_16	CALL_10
0x4000a5f	          0x4c29f6	                            sub rsi, r14	       498	ref-filter.c	FUNCTION_16	CALL_10
0x4000a62	          0x4c89f7	                            mov rdi, r14	       498	ref-filter.c	FUNCTION_16	CALL_10
0x4000a65	      0xe800000000	                          call 0x4000a6a	       498	ref-filter.c	FUNCTION_16	CALL_10
0x4000a6a	        0x49890424	                    mov qword [r12], rax	       498	ref-filter.c	FUNCTION_16	CALL_10
0x4000a6e	          0x4889ee	                            mov rsi, rbp	       499	ref-filter.c	FUNCTION_16
0x4000a71	    0x480335000000	             add rsi, qword [0x04000a78]	       499	ref-filter.c	FUNCTION_16
0x4000a78	          0x4863c3	                         movsxd rax, ebx	       499	ref-filter.c	FUNCTION_16
0x4000a7b	        0x488d0440	                  lea rax, [rax + rax*2]	       499	ref-filter.c	FUNCTION_16
0x4000a7f	    0x8b04c5000000	                  mov eax, dword [rax*8]	       499	ref-filter.c	FUNCTION_16
0x4000a86	          0x894608	                mov dword [rsi + 8], eax	       499	ref-filter.c	FUNCTION_16
0x4000a89	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       500	ref-filter.c	FUNCTION_16	IF_6
0x4000a8e	          0x4885c0	                           test rax, rax	       500	ref-filter.c	FUNCTION_16	IF_6
0x4000a91	            0x741f	                            je 0x4000ab2	       500	ref-filter.c	FUNCTION_16	IF_6
0x4000a93	          0x4c29f0	                            sub rax, r14	       501	ref-filter.c	FUNCTION_16	IF_6
0x4000a96	          0x488b16	                    mov rdx, qword [rsi]	       501	ref-filter.c	FUNCTION_16	IF_6
0x4000a99	      0x488d440201	                lea rax, [rdx + rax + 1]	       501	ref-filter.c	FUNCTION_16	IF_6
0x4000a9e	          0x4889c2	                            mov rdx, rax	       501	ref-filter.c	FUNCTION_16	IF_6
0x4000aa1	          0x803800	                       cmp byte [rax], 0	       507	ref-filter.c	FUNCTION_16	IF_6	IF_7
0x4000aa4	      0xb800000000	                              mov eax, 0	       507	ref-filter.c	FUNCTION_16	IF_6	IF_7
0x4000aa9	        0x480f45c2	                         cmovne rax, rdx	       507	ref-filter.c	FUNCTION_16	IF_6	IF_7
0x4000aad	      0x4889442420	             mov qword [rsp + 0x20], rax	       507	ref-filter.c	FUNCTION_16	IF_6	IF_7
0x4000ab2	    0x48c746100000	               mov qword [rsi + 0x10], 0	        90	string3.h	FUNCTION_136	CALL_6
0x4000aba	    0x48c746580000	               mov qword [rsi + 0x58], 0	        90	string3.h	FUNCTION_136	CALL_6
0x4000ac2	        0x488d7e18	                   lea rdi, [rsi + 0x18]	        90	string3.h	FUNCTION_136	CALL_6
0x4000ac6	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_136	CALL_6
0x4000aca	            0x89f0	                            mov eax, esi	        90	string3.h	FUNCTION_136	CALL_6
0x4000acc	            0x29f8	                            sub eax, edi	        90	string3.h	FUNCTION_136	CALL_6
0x4000ace	          0x8d4860	                   lea ecx, [rax + 0x60]	        90	string3.h	FUNCTION_136	CALL_6
0x4000ad1	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_136	CALL_6
0x4000ad4	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_136	CALL_6
0x4000ad6	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_136	CALL_6
0x4000adb	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_136	CALL_6
0x4000ade	          0x4863c3	                         movsxd rax, ebx	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4000ae1	        0x488d0440	                  lea rax, [rax + rax*2]	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4000ae5	    0x488b04c50000	                  mov rax, qword [rax*8]	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4000aed	          0x4885c0	                           test rax, rax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4000af0	            0x7415	                            je 0x4000b07	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4000af2	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4000af7	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4000afc	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4000b01	            0xffd0	                                call rax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4000b03	            0x85c0	                           test eax, eax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4000b05	            0x7549	                           jne 0x4000b50	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4000b07	        0x488b0424	                    mov rax, qword [rsp]	       513	ref-filter.c	FUNCTION_16	IF_9
0x4000b0b	          0x80382a	                    cmp byte [rax], 0x2a	       513	ref-filter.c	FUNCTION_16	IF_9
0x4000b0e	            0x750a	                           jne 0x4000b1a	       513	ref-filter.c	FUNCTION_16	IF_9
0x4000b10	    0xc70500000000	               mov dword [0x04000b1a], 1	       514	ref-filter.c	FUNCTION_16	IF_9
0x4000b1a	          0x4863db	                         movsxd rbx, ebx	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4000b1d	        0x488d045b	                  lea rax, [rbx + rbx*2]	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4000b21	    0x488b34c50000	                  mov rsi, qword [rax*8]	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4000b29	      0xbf00000000	                              mov edi, 0	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4000b2e	      0xb907000000	                              mov ecx, 7	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4000b33	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4000b35	           0xf97c2	                                 seta dl	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4000b38	           0xf92c0	                                 setb al	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4000b3b	            0x38c2	                              cmp dl, al	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4000b3d	            0x7517	                           jne 0x4000b56	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4000b3f	    0xc70500000000	               mov dword [0x04000b49], 1	       516	ref-filter.c	FUNCTION_16	IF_10
0x4000b49	            0xeb0b	                           jmp 0x4000b56	       516	ref-filter.c	FUNCTION_16	IF_10
0x4000b4b	          0x4189dd	                           mov r13d, ebx	       516	ref-filter.c	FUNCTION_16	IF_10
0x4000b4e	            0xeb06	                           jmp 0x4000b56	       516	ref-filter.c	FUNCTION_16	IF_10
0x4000b50	    0x41bdffffffff	                    mov r13d, 0xffffffff	       512	ref-filter.c	FUNCTION_16	IF_8
0x4000b56	          0x4489e8	                           mov eax, r13d	       518	ref-filter.c	FUNCTION_16
0x4000b59	        0x4883c448	                           add rsp, 0x48	       518	ref-filter.c	FUNCTION_16
0x4000b5d	              0x5b	                                 pop rbx	       518	ref-filter.c	FUNCTION_16
0x4000b5e	              0x5d	                                 pop rbp	       518	ref-filter.c	FUNCTION_16
0x4000b5f	            0x415c	                                 pop r12	       518	ref-filter.c	FUNCTION_16
0x4000b61	            0x415d	                                 pop r13	       518	ref-filter.c	FUNCTION_16
0x4000b63	            0x415e	                                 pop r14	       518	ref-filter.c	FUNCTION_16
0x4000b65	            0x415f	                                 pop r15	       518	ref-filter.c	FUNCTION_16
0x4000b67	              0xc3	                                     ret	       518	ref-filter.c	FUNCTION_16
contains_tag_algo	SWITCH,1:FOR,0:WHILE,1:DO,0:IF,2:functions,0:CALL,8:ELSE,1	82
0x4002bbe	            0x4157	                                push r15	      1699	ref-filter.c	FUNCTION_62
0x4002bc0	            0x4156	                                push r14	      1699	ref-filter.c	FUNCTION_62
0x4002bc2	            0x4155	                                push r13	      1699	ref-filter.c	FUNCTION_62
0x4002bc4	            0x4154	                                push r12	      1699	ref-filter.c	FUNCTION_62
0x4002bc6	              0x55	                                push rbp	      1699	ref-filter.c	FUNCTION_62
0x4002bc7	              0x53	                                push rbx	      1699	ref-filter.c	FUNCTION_62
0x4002bc8	        0x4883ec28	                           sub rsp, 0x28	      1699	ref-filter.c	FUNCTION_62
0x4002bcc	          0x4989fc	                            mov r12, rdi	      1699	ref-filter.c	FUNCTION_62
0x4002bcf	          0x4889f5	                            mov rbp, rsi	      1699	ref-filter.c	FUNCTION_62
0x4002bd2	          0x4889d3	                            mov rbx, rdx	      1699	ref-filter.c	FUNCTION_62
0x4002bd5	    0x64488b042528	                mov rax, qword fs:[0x28]	      1699	ref-filter.c	FUNCTION_62
0x4002bde	      0x4889442418	             mov qword [rsp + 0x18], rax	      1699	ref-filter.c	FUNCTION_62
0x4002be3	            0x31c0	                            xor eax, eax	      1699	ref-filter.c	FUNCTION_62
0x4002be5	    0xc70424000000	                      mov dword [rsp], 0	      1700	ref-filter.c	FUNCTION_62
0x4002bec	    0xc74424040000	                  mov dword [rsp + 4], 0	      1700	ref-filter.c	FUNCTION_62
0x4002bf4	    0x48c744240800	                  mov qword [rsp + 8], 0	      1700	ref-filter.c	FUNCTION_62
0x4002bfd	      0xe866e2ffff	                  call sym.contains_test	      1701	ref-filter.c	FUNCTION_62	CALL_1
0x4002c02	            0x85c0	                           test eax, eax	      1703	ref-filter.c	FUNCTION_62	IF_1
0x4002c04	     0xf85bb000000	                           jne 0x4002cc5	      1703	ref-filter.c	FUNCTION_62	IF_1
0x4002c0a	          0x4889e6	                            mov rsi, rsp	      1706	ref-filter.c	FUNCTION_62	CALL_2
0x4002c0d	          0x4c89e7	                            mov rdi, r12	      1706	ref-filter.c	FUNCTION_62	CALL_2
0x4002c10	      0xe8cdd4ffff	         call sym.push_to_contains_stack	      1706	ref-filter.c	FUNCTION_62	CALL_2
0x4002c15	      0xe988000000	                           jmp 0x4002ca2	      1707	ref-filter.c	FUNCTION_62	WHILE_1
0x4002c1a	            0x4898	                                    cdqe	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x4002c1c	        0x48c1e004	                              shl rax, 4	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x4002c20	      0x488b542408	                mov rdx, qword [rsp + 8]	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x4002c25	      0x4c8d7402f0	             lea r14, [rdx + rax - 0x10]	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x4002c2a	          0x4d8b3e	                    mov r15, qword [r14]	      1709	ref-filter.c	FUNCTION_62	WHILE_1
0x4002c2d	        0x4d8b6e08	                mov r13, qword [r14 + 8]	      1710	ref-filter.c	FUNCTION_62	WHILE_1
0x4002c31	          0x4d85ed	                           test r13, r13	      1712	ref-filter.c	FUNCTION_62	WHILE_1	IF_2
0x4002c34	            0x751c	                           jne 0x4002c52	      1712	ref-filter.c	FUNCTION_62	WHILE_1	IF_2
0x4002c36	      0xba01000000	                              mov edx, 1	      1632	ref-filter.c	CALL_1
0x4002c3b	          0x4c89fe	                            mov rsi, r15	      1632	ref-filter.c	CALL_1
0x4002c3e	          0x4889df	                            mov rdi, rbx	      1632	ref-filter.c	CALL_1
0x4002c41	      0xe837e0ffff	         call sym.contains_cache_at_peek	      1632	ref-filter.c	CALL_1
0x4002c46	    0xc70001000000	                      mov dword [rax], 1	      1713	ref-filter.c	FUNCTION_62	WHILE_1	IF_2	CALL_3
0x4002c4c	        0x832c2401	                      sub dword [rsp], 1	      1714	ref-filter.c	FUNCTION_62	WHILE_1	IF_2
0x4002c50	            0xeb50	                           jmp 0x4002ca2	      1714	ref-filter.c	FUNCTION_62	WHILE_1	IF_2
0x4002c52	          0x4889da	                            mov rdx, rbx	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4002c55	          0x4889ee	                            mov rsi, rbp	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4002c58	        0x498b7d00	                    mov rdi, qword [r13]	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4002c5c	      0xe807e2ffff	                  call sym.contains_test	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4002c61	          0x83f801	                              cmp eax, 1	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4002c64	            0x7426	                            je 0x4002c8c	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4002c66	          0x83f801	                              cmp eax, 1	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4002c69	            0x722b	                            jb 0x4002c96	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4002c6b	          0x83f802	                              cmp eax, 2	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4002c6e	            0x7532	                           jne 0x4002ca2	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4002c70	      0xba01000000	                              mov edx, 1	      1632	ref-filter.c	CALL_1
0x4002c75	          0x4c89fe	                            mov rsi, r15	      1632	ref-filter.c	CALL_1
0x4002c78	          0x4889df	                            mov rdi, rbx	      1632	ref-filter.c	CALL_1
0x4002c7b	      0xe8fddfffff	         call sym.contains_cache_at_peek	      1632	ref-filter.c	CALL_1
0x4002c80	    0xc70002000000	                      mov dword [rax], 2	      1722	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_5
0x4002c86	        0x832c2401	                      sub dword [rsp], 1	      1723	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x4002c8a	            0xeb16	                           jmp 0x4002ca2	      1724	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x4002c8c	        0x498b4508	                mov rax, qword [r13 + 8]	      1726	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x4002c90	        0x49894608	                mov qword [r14 + 8], rax	      1726	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x4002c94	            0xeb0c	                           jmp 0x4002ca2	      1727	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x4002c96	          0x4889e6	                            mov rsi, rsp	      1729	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_6
0x4002c99	        0x498b7d00	                    mov rdi, qword [r13]	      1729	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_6
0x4002c9d	      0xe840d4ffff	         call sym.push_to_contains_stack	      1729	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_6
0x4002ca2	          0x8b0424	                    mov eax, dword [rsp]	      1707	ref-filter.c	FUNCTION_62	WHILE_1
0x4002ca5	            0x85c0	                           test eax, eax	      1707	ref-filter.c	FUNCTION_62	WHILE_1
0x4002ca7	     0xf856dffffff	                           jne 0x4002c1a	      1707	ref-filter.c	FUNCTION_62	WHILE_1
0x4002cad	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1733	ref-filter.c	FUNCTION_62	CALL_7
0x4002cb2	      0xe800000000	                          call 0x4002cb7	      1733	ref-filter.c	FUNCTION_62	CALL_7
0x4002cb7	          0x4889da	                            mov rdx, rbx	      1734	ref-filter.c	FUNCTION_62	CALL_8
0x4002cba	          0x4889ee	                            mov rsi, rbp	      1734	ref-filter.c	FUNCTION_62	CALL_8
0x4002cbd	          0x4c89e7	                            mov rdi, r12	      1734	ref-filter.c	FUNCTION_62	CALL_8
0x4002cc0	      0xe8a3e1ffff	                  call sym.contains_test	      1734	ref-filter.c	FUNCTION_62	CALL_8
0x4002cc5	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1735	ref-filter.c	FUNCTION_62
0x4002cca	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1735	ref-filter.c	FUNCTION_62
0x4002cd3	            0x7405	                            je 0x4002cda	      1735	ref-filter.c	FUNCTION_62
0x4002cd5	      0xe800000000	                          call 0x4002cda	      1735	ref-filter.c	FUNCTION_62
0x4002cda	        0x4883c428	                           add rsp, 0x28	      1735	ref-filter.c	FUNCTION_62
0x4002cde	              0x5b	                                 pop rbx	      1735	ref-filter.c	FUNCTION_62
0x4002cdf	              0x5d	                                 pop rbp	      1735	ref-filter.c	FUNCTION_62
0x4002ce0	            0x415c	                                 pop r12	      1735	ref-filter.c	FUNCTION_62
0x4002ce2	            0x415d	                                 pop r13	      1735	ref-filter.c	FUNCTION_62
0x4002ce4	            0x415e	                                 pop r14	      1735	ref-filter.c	FUNCTION_62
0x4002ce6	            0x415f	                                 pop r15	      1735	ref-filter.c	FUNCTION_62
0x4002ce8	              0xc3	                                     ret	      1735	ref-filter.c	FUNCTION_62
compare_refs	SWITCH,0:FOR,1:WHILE,0:DO,0:IF,1:functions,0:CALL,1:ELSE,0	112
0x40040b3	            0x4156	                                push r14	      2182	ref-filter.c	FUNCTION_80
0x40040b5	            0x4155	                                push r13	      2182	ref-filter.c	FUNCTION_80
0x40040b7	            0x4154	                                push r12	      2182	ref-filter.c	FUNCTION_80
0x40040b9	              0x55	                                push rbp	      2182	ref-filter.c	FUNCTION_80
0x40040ba	              0x53	                                push rbx	      2182	ref-filter.c	FUNCTION_80
0x40040bb	        0x4883ec30	                           sub rsp, 0x30	      2182	ref-filter.c	FUNCTION_80
0x40040bf	    0x64488b042528	                mov rax, qword fs:[0x28]	      2182	ref-filter.c	FUNCTION_80
0x40040c8	      0x4889442428	             mov qword [rsp + 0x28], rax	      2182	ref-filter.c	FUNCTION_80
0x40040cd	            0x31c0	                            xor eax, eax	      2182	ref-filter.c	FUNCTION_80
0x40040cf	          0x4c8b27	                    mov r12, qword [rdi]	      2183	ref-filter.c	FUNCTION_80
0x40040d2	          0x488b2e	                    mov rbp, qword [rsi]	      2184	ref-filter.c	FUNCTION_80
0x40040d5	          0x4885d2	                           test rdx, rdx	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x40040d8	     0xf842c010000	                            je 0x400420a	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x40040de	          0x4889d3	                            mov rbx, rdx	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x40040e1	        0x4c8d6d38	                   lea r13, [rbp + 0x38]	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x40040e5	          0x8b7308	                mov esi, dword [rbx + 8]	      2155	ref-filter.c	FUNCTION_79
0x40040e8	          0x4863c6	                         movsxd rax, esi	      2155	ref-filter.c	FUNCTION_79
0x40040eb	        0x488d0440	                  lea rax, [rax + rax*2]	      2155	ref-filter.c	FUNCTION_79
0x40040ef	        0x48c1e005	                              shl rax, 5	      2155	ref-filter.c	FUNCTION_79
0x40040f3	    0x480305000000	             add rax, qword [0x040040fa]	      2155	ref-filter.c	FUNCTION_79
0x40040fa	        0x448b7008	               mov r14d, dword [rax + 8]	      2155	ref-filter.c	FUNCTION_79
0x40040fe	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2157	ref-filter.c	FUNCTION_79
0x4004107	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2157	ref-filter.c	FUNCTION_79
0x4004110	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2157	ref-filter.c	FUNCTION_79
0x4004119	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x400411e	          0x4889e2	                            mov rdx, rsp	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x4004121	          0x4c89e7	                            mov rdi, r12	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x4004124	      0xe816ffffff	             call sym.get_ref_atom_value	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x4004129	            0x85c0	                           test eax, eax	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x400412b	            0x7414	                            je 0x4004141	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x400412d	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      2160	ref-filter.c	FUNCTION_79	CALL_2
0x4004132	      0xbf00000000	                              mov edi, 0	      2160	ref-filter.c	FUNCTION_79	CALL_2
0x4004137	      0xb800000000	                              mov eax, 0	      2160	ref-filter.c	FUNCTION_79	CALL_2
0x400413c	      0xe800000000	                          call 0x4004141	      2160	ref-filter.c	FUNCTION_79	CALL_2
0x4004141	          0x8b7308	                mov esi, dword [rbx + 8]	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x4004144	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x4004149	      0x488d542408	                      lea rdx, [rsp + 8]	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x400414e	          0x4889ef	                            mov rdi, rbp	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x4004151	      0xe8e9feffff	             call sym.get_ref_atom_value	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x4004156	            0x85c0	                           test eax, eax	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x4004158	            0x7414	                            je 0x400416e	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x400415a	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      2162	ref-filter.c	FUNCTION_79	CALL_4
0x400415f	      0xbf00000000	                              mov edi, 0	      2162	ref-filter.c	FUNCTION_79	CALL_4
0x4004164	      0xb800000000	                              mov eax, 0	      2162	ref-filter.c	FUNCTION_79	CALL_4
0x4004169	      0xe800000000	                          call 0x400416e	      2162	ref-filter.c	FUNCTION_79	CALL_4
0x400416e	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2163	ref-filter.c	FUNCTION_79	CALL_5
0x4004173	      0xe800000000	                          call 0x4004178	      2163	ref-filter.c	FUNCTION_79	CALL_5
0x4004178	         0xfb6530c	            movzx edx, byte [rbx + 0xc] 	      2164	ref-filter.c	FUNCTION_79
0x400417c	            0x89d0	                            mov eax, edx	      2164	ref-filter.c	FUNCTION_79
0x400417e	          0x83e002	                              and eax, 2	      2164	ref-filter.c	FUNCTION_79
0x4004181	      0xb800000000	                              mov eax, 0	      2164	ref-filter.c	FUNCTION_79
0x4004186	      0xb900000000	                              mov ecx, 0	      2164	ref-filter.c	FUNCTION_79
0x400418b	        0x480f44c8	                          cmove rcx, rax	      2164	ref-filter.c	FUNCTION_79
0x400418f	          0xf6c204	                              test dl, 4	      2165	ref-filter.c	FUNCTION_79	IF_3
0x4004192	            0x7416	                            je 0x40041aa	      2165	ref-filter.c	FUNCTION_79	IF_3
0x4004194	      0x488b442408	                mov rax, qword [rsp + 8]	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x4004199	          0x488b30	                    mov rsi, qword [rax]	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x400419c	        0x488b0424	                    mov rax, qword [rsp]	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x40041a0	          0x488b38	                    mov rdi, qword [rax]	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x40041a3	      0xe800000000	                          call 0x40041a8	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x40041a8	            0xeb42	                           jmp 0x40041ec	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x40041aa	          0x4585f6	                         test r14d, r14d	      2167	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x40041ad	            0x7513	                           jne 0x40041c2	      2167	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x40041af	      0x488b442408	                mov rax, qword [rsp + 8]	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x40041b4	          0x488b30	                    mov rsi, qword [rax]	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x40041b7	        0x488b0424	                    mov rax, qword [rsp]	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x40041bb	          0x488b38	                    mov rdi, qword [rax]	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x40041be	            0xffd1	                                call rcx	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x40041c0	            0xeb2a	                           jmp 0x40041ec	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x40041c2	        0x488b0424	                    mov rax, qword [rsp]	      2170	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x40041c6	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      2170	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x40041ca	      0x488b442408	                mov rax, qword [rsp + 8]	      2170	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x40041cf	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      2170	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x40041d3	          0x4839f7	                            cmp rdi, rsi	      2170	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x40041d6	            0x724f	                            jb 0x4004227	      2170	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x40041d8	      0xb801000000	                              mov eax, 1	      2175	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_4
0x40041dd	          0x4839f7	                            cmp rdi, rsi	      2172	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x40041e0	            0x754a	                           jne 0x400422c	      2172	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x40041e2	      0x498d7c2438	                   lea rdi, [r12 + 0x38]	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x40041e7	          0x4c89ee	                            mov rsi, r13	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x40041ea	            0xffd1	                                call rcx	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x40041ec	            0x89c2	                            mov edx, eax	      2178	ref-filter.c	FUNCTION_79
0x40041ee	        0xf6430c01	                test byte [rbx + 0xc], 1	      2178	ref-filter.c	FUNCTION_79
0x40041f2	            0x7404	                            je 0x40041f8	      2178	ref-filter.c	FUNCTION_79
0x40041f4	            0xf7d8	                                 neg eax	      2178	ref-filter.c	FUNCTION_79
0x40041f6	            0x89c2	                            mov edx, eax	      2178	ref-filter.c	FUNCTION_79
0x40041f8	            0x85d2	                           test edx, edx	      2189	ref-filter.c	FUNCTION_80	FOR_1	IF_1
0x40041fa	            0x7513	                           jne 0x400420f	      2189	ref-filter.c	FUNCTION_80	FOR_1	IF_1
0x40041fc	          0x488b1b	                    mov rbx, qword [rbx]	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x40041ff	          0x4885db	                           test rbx, rbx	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x4004202	     0xf85ddfeffff	                           jne 0x40040e5	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x4004208	            0xeb05	                           jmp 0x400420f	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x400420a	      0xba00000000	                              mov edx, 0	      2192	ref-filter.c	FUNCTION_80
0x400420f	            0x89d0	                            mov eax, edx	      2193	ref-filter.c	FUNCTION_80
0x4004211	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      2193	ref-filter.c	FUNCTION_80
0x4004216	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2193	ref-filter.c	FUNCTION_80
0x400421f	            0x7417	                            je 0x4004238	      2193	ref-filter.c	FUNCTION_80
0x4004221	            0xeb10	                           jmp 0x4004233	      2193	ref-filter.c	FUNCTION_80
0x4004223	            0x89c2	                            mov edx, eax	      2193	ref-filter.c	FUNCTION_80
0x4004225	            0xebe8	                           jmp 0x400420f	      2193	ref-filter.c	FUNCTION_80
0x4004227	      0xb8ffffffff	                     mov eax, 0xffffffff	      2171	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x400422c	          0xf6c201	                              test dl, 1	      2178	ref-filter.c	FUNCTION_79
0x400422f	            0x75c3	                           jne 0x40041f4	      2178	ref-filter.c	FUNCTION_79
0x4004231	            0xebf0	                           jmp 0x4004223	      2178	ref-filter.c	FUNCTION_79
0x4004233	      0xe800000000	                          call 0x4004238	      2193	ref-filter.c	FUNCTION_80
0x4004238	        0x4883c430	                           add rsp, 0x30	      2193	ref-filter.c	FUNCTION_80
0x400423c	              0x5b	                                 pop rbx	      2193	ref-filter.c	FUNCTION_80
0x400423d	              0x5d	                                 pop rbp	      2193	ref-filter.c	FUNCTION_80
0x400423e	            0x415c	                                 pop r12	      2193	ref-filter.c	FUNCTION_80
0x4004240	            0x415d	                                 pop r13	      2193	ref-filter.c	FUNCTION_80
0x4004242	            0x415e	                                 pop r14	      2193	ref-filter.c	FUNCTION_80
0x4004244	              0xc3	                                     ret	      2193	ref-filter.c	FUNCTION_80
contains_test	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,2:functions,0:CALL,3:ELSE,0	41
0x4000e68	            0x4156	                                push r14	      1671	ref-filter.c	FUNCTION_60
0x4000e6a	            0x4155	                                push r13	      1671	ref-filter.c	FUNCTION_60
0x4000e6c	            0x4154	                                push r12	      1671	ref-filter.c	FUNCTION_60
0x4000e6e	              0x55	                                push rbp	      1671	ref-filter.c	FUNCTION_60
0x4000e6f	              0x53	                                push rbx	      1671	ref-filter.c	FUNCTION_60
0x4000e70	          0x4989fd	                            mov r13, rdi	      1671	ref-filter.c	FUNCTION_60
0x4000e73	          0x4889f3	                            mov rbx, rsi	      1671	ref-filter.c	FUNCTION_60
0x4000e76	          0x4889d7	                            mov rdi, rdx	      1671	ref-filter.c	FUNCTION_60
0x4000e79	      0xba01000000	                              mov edx, 1	      1632	ref-filter.c	CALL_1
0x4000e7e	          0x4c89ee	                            mov rsi, r13	      1632	ref-filter.c	CALL_1
0x4000e81	      0xe8f7fdffff	         call sym.contains_cache_at_peek	      1632	ref-filter.c	CALL_1
0x4000e86	          0x448b20	                   mov r12d, dword [rax]	      1675	ref-filter.c	FUNCTION_60	IF_1
0x4000e89	          0x4585e4	                         test r12d, r12d	      1675	ref-filter.c	FUNCTION_60	IF_1
0x4000e8c	            0x7546	                           jne 0x4000ed4	      1675	ref-filter.c	FUNCTION_60	IF_1
0x4000e8e	          0x4989c6	                            mov r14, rax	      1675	ref-filter.c	FUNCTION_60	IF_1
0x4000e91	          0x4885db	                           test rbx, rbx	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4000e94	            0x7436	                            je 0x4000ecc	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4000e96	        0x498d6d04	                      lea rbp, [r13 + 4]	       975	cache.h	FUNCTION_152	CALL_1
0x4000e9a	          0x488b03	                    mov rax, qword [rbx]	       975	cache.h	FUNCTION_152	CALL_1
0x4000e9d	        0x488d7804	                      lea rdi, [rax + 4]	       975	cache.h	FUNCTION_152	CALL_1
0x4000ea1	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_152	CALL_1
0x4000ea6	          0x4889ee	                            mov rsi, rbp	       975	cache.h	FUNCTION_152	CALL_1
0x4000ea9	      0xe800000000	                          call 0x4000eae	       975	cache.h	FUNCTION_152	CALL_1
0x4000eae	            0x85c0	                           test eax, eax	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x4000eb0	            0x740b	                            je 0x4000ebd	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x4000eb2	        0x488b5b08	                mov rbx, qword [rbx + 8]	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4000eb6	          0x4885db	                           test rbx, rbx	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4000eb9	            0x75df	                           jne 0x4000e9a	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4000ebb	            0xeb0f	                           jmp 0x4000ecc	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4000ebd	    0x41c706020000	                      mov dword [r14], 2	      1680	ref-filter.c	FUNCTION_60	IF_2
0x4000ec4	    0x41bc02000000	                             mov r12d, 2	      1681	ref-filter.c	FUNCTION_60	IF_2
0x4000eca	            0xeb08	                           jmp 0x4000ed4	      1681	ref-filter.c	FUNCTION_60	IF_2
0x4000ecc	          0x4c89ef	                            mov rdi, r13	      1685	ref-filter.c	FUNCTION_60	CALL_3
0x4000ecf	      0xe800000000	                          call 0x4000ed4	      1685	ref-filter.c	FUNCTION_60	CALL_3
0x4000ed4	          0x4489e0	                           mov eax, r12d	      1687	ref-filter.c	FUNCTION_60
0x4000ed7	              0x5b	                                 pop rbx	      1687	ref-filter.c	FUNCTION_60
0x4000ed8	              0x5d	                                 pop rbp	      1687	ref-filter.c	FUNCTION_60
0x4000ed9	            0x415c	                                 pop r12	      1687	ref-filter.c	FUNCTION_60
0x4000edb	            0x415d	                                 pop r13	      1687	ref-filter.c	FUNCTION_60
0x4000edd	            0x415e	                                 pop r14	      1687	ref-filter.c	FUNCTION_60
0x4000edf	              0xc3	                                     ret	      1687	ref-filter.c	FUNCTION_60
find_wholine	SWITCH,0:FOR,0:WHILE,1:DO,0:IF,3:functions,0:CALL,2:ELSE,0	40
0x4000df5	            0x4155	                                push r13	       912	ref-filter.c	FUNCTION_36
0x4000df7	            0x4154	                                push r12	       912	ref-filter.c	FUNCTION_36
0x4000df9	              0x55	                                push rbp	       912	ref-filter.c	FUNCTION_36
0x4000dfa	              0x53	                                push rbx	       912	ref-filter.c	FUNCTION_36
0x4000dfb	        0x4883ec08	                              sub rsp, 8	       912	ref-filter.c	FUNCTION_36
0x4000dff	          0x4989fc	                            mov r12, rdi	       912	ref-filter.c	FUNCTION_36
0x4000e02	          0x4889d3	                            mov rbx, rdx	       912	ref-filter.c	FUNCTION_36
0x4000e05	          0x4863ee	                         movsxd rbp, esi	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4000e08	            0xeb3b	                           jmp 0x4000e45	       914	ref-filter.c	FUNCTION_36	WHILE_1
0x4000e0a	          0x4889ea	                            mov rdx, rbp	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4000e0d	          0x4c89e6	                            mov rsi, r12	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4000e10	          0x4889df	                            mov rdi, rbx	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4000e13	      0xe800000000	                          call 0x4000e18	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4000e18	            0x85c0	                           test eax, eax	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4000e1a	            0x750d	                           jne 0x4000e29	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4000e1c	        0x803c2b20	              cmp byte [rbx + rbp], 0x20	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4000e20	            0x7507	                           jne 0x4000e29	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4000e22	      0x488d442b01	                lea rax, [rbx + rbp + 1]	       917	ref-filter.c	FUNCTION_36	WHILE_1	IF_1
0x4000e27	            0xeb34	                           jmp 0x4000e5d	       917	ref-filter.c	FUNCTION_36	WHILE_1	IF_1
0x4000e29	      0xbe0a000000	                            mov esi, 0xa	       918	ref-filter.c	FUNCTION_36	WHILE_1	CALL_2
0x4000e2e	          0x4889df	                            mov rdi, rbx	       918	ref-filter.c	FUNCTION_36	WHILE_1	CALL_2
0x4000e31	      0xe800000000	                          call 0x4000e36	       918	ref-filter.c	FUNCTION_36	WHILE_1	CALL_2
0x4000e36	          0x4885c0	                           test rax, rax	       919	ref-filter.c	FUNCTION_36	WHILE_1	IF_2
0x4000e39	            0x7416	                            je 0x4000e51	       919	ref-filter.c	FUNCTION_36	WHILE_1	IF_2
0x4000e3b	        0x488d5801	                      lea rbx, [rax + 1]	       921	ref-filter.c	FUNCTION_36	WHILE_1
0x4000e3f	        0x8078010a	                 cmp byte [rax + 1], 0xa	       922	ref-filter.c	FUNCTION_36	WHILE_1	IF_3
0x4000e43	            0x7413	                            je 0x4000e58	       922	ref-filter.c	FUNCTION_36	WHILE_1	IF_3
0x4000e45	          0x803b00	                       cmp byte [rbx], 0	       914	ref-filter.c	FUNCTION_36	WHILE_1
0x4000e48	            0x75c0	                           jne 0x4000e0a	       914	ref-filter.c	FUNCTION_36	WHILE_1
0x4000e4a	      0xb800000000	                              mov eax, 0	       926	ref-filter.c	FUNCTION_36
0x4000e4f	            0xeb0c	                           jmp 0x4000e5d	       926	ref-filter.c	FUNCTION_36
0x4000e51	      0xb800000000	                              mov eax, 0	       920	ref-filter.c	FUNCTION_36	WHILE_1	IF_2
0x4000e56	            0xeb05	                           jmp 0x4000e5d	       920	ref-filter.c	FUNCTION_36	WHILE_1	IF_2
0x4000e58	      0xb800000000	                              mov eax, 0	       923	ref-filter.c	FUNCTION_36	WHILE_1	IF_3
0x4000e5d	        0x4883c408	                              add rsp, 8	       927	ref-filter.c	FUNCTION_36
0x4000e61	              0x5b	                                 pop rbx	       927	ref-filter.c	FUNCTION_36
0x4000e62	              0x5d	                                 pop rbp	       927	ref-filter.c	FUNCTION_36
0x4000e63	            0x415c	                                 pop r12	       927	ref-filter.c	FUNCTION_36
0x4000e65	            0x415d	                                 pop r13	       927	ref-filter.c	FUNCTION_36
0x4000e67	              0xc3	                                     ret	       927	ref-filter.c	FUNCTION_36
push_to_contains_stack	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,0:functions,0:CALL,0:ELSE,0	47
0x40000e2	              0x55	                                push rbp	      1690	ref-filter.c	FUNCTION_61
0x40000e3	              0x53	                                push rbx	      1690	ref-filter.c	FUNCTION_61
0x40000e4	        0x4883ec08	                              sub rsp, 8	      1690	ref-filter.c	FUNCTION_61
0x40000e8	          0x4889fd	                            mov rbp, rdi	      1690	ref-filter.c	FUNCTION_61
0x40000eb	          0x4889f3	                            mov rbx, rsi	      1690	ref-filter.c	FUNCTION_61
0x40000ee	            0x8b06	                    mov eax, dword [rsi]	      1691	ref-filter.c	FUNCTION_61
0x40000f0	          0x8d5001	                      lea edx, [rax + 1]	      1691	ref-filter.c	FUNCTION_61
0x40000f3	          0x8b4604	                mov eax, dword [rsi + 4]	      1691	ref-filter.c	FUNCTION_61
0x40000f6	            0x39c2	                            cmp edx, eax	      1691	ref-filter.c	FUNCTION_61
0x40000f8	            0x7e4f	                           jle 0x4000149	      1691	ref-filter.c	FUNCTION_61
0x40000fa	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	      1691	ref-filter.c	FUNCTION_61
0x40000fe	            0x89c6	                            mov esi, eax	      1691	ref-filter.c	FUNCTION_61
0x4000100	          0xc1ee1f	                           shr esi, 0x1f	      1691	ref-filter.c	FUNCTION_61
0x4000103	             0x1c6	                            add esi, eax	      1691	ref-filter.c	FUNCTION_61
0x4000105	            0xd1fe	                              sar esi, 1	      1691	ref-filter.c	FUNCTION_61
0x4000107	            0x39f2	                            cmp edx, esi	      1691	ref-filter.c	FUNCTION_61
0x4000109	           0xf4ff2	                          cmovg esi, edx	      1691	ref-filter.c	FUNCTION_61
0x400010c	          0x897304	                mov dword [rbx + 4], esi	      1691	ref-filter.c	FUNCTION_61
0x400010f	          0x4863d6	                         movsxd rdx, esi	      1691	ref-filter.c	FUNCTION_61
0x4000112	    0x48b8ffffffff	          movabs rax, 0xfffffffffffffff 	       795	git-compat-util.h	FUNCTION_120	IF_1
0x400011c	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_120	IF_1
0x400011f	            0x7614	                           jbe 0x4000135	       795	git-compat-util.h	FUNCTION_120	IF_1
0x4000121	      0xbe10000000	                           mov esi, 0x10	       796	git-compat-util.h	FUNCTION_120	IF_1	CALL_1
0x4000126	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_120	IF_1	CALL_1
0x400012b	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_120	IF_1	CALL_1
0x4000130	      0xe800000000	                          call 0x4000135	       796	git-compat-util.h	FUNCTION_120	IF_1	CALL_1
0x4000135	        0x48c1e204	                              shl rdx, 4	      1691	ref-filter.c	FUNCTION_61
0x4000139	          0x4889d6	                            mov rsi, rdx	      1691	ref-filter.c	FUNCTION_61
0x400013c	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1691	ref-filter.c	FUNCTION_61
0x4000140	      0xe800000000	                          call 0x4000145	      1691	ref-filter.c	FUNCTION_61
0x4000145	        0x48894308	                mov qword [rbx + 8], rax	      1691	ref-filter.c	FUNCTION_61
0x4000149	          0x486303	                 movsxd rax, dword [rbx]	      1692	ref-filter.c	FUNCTION_61
0x400014c	        0x48c1e004	                              shl rax, 4	      1692	ref-filter.c	FUNCTION_61
0x4000150	        0x48034308	                add rax, qword [rbx + 8]	      1692	ref-filter.c	FUNCTION_61
0x4000154	          0x488928	                    mov qword [rax], rbp	      1692	ref-filter.c	FUNCTION_61
0x4000157	        0x488b5308	                mov rdx, qword [rbx + 8]	      1693	ref-filter.c	FUNCTION_61
0x400015b	            0x8b03	                    mov eax, dword [rbx]	      1693	ref-filter.c	FUNCTION_61
0x400015d	          0x8d4801	                      lea ecx, [rax + 1]	      1693	ref-filter.c	FUNCTION_61
0x4000160	            0x890b	                    mov dword [rbx], ecx	      1693	ref-filter.c	FUNCTION_61
0x4000162	        0x488b4d30	            mov rcx, qword [rbp + 0x30] 	      1693	ref-filter.c	FUNCTION_61
0x4000166	            0x4898	                                    cdqe	      1693	ref-filter.c	FUNCTION_61
0x4000168	        0x48c1e004	                              shl rax, 4	      1693	ref-filter.c	FUNCTION_61
0x400016c	      0x48894c0208	          mov qword [rdx + rax + 8], rcx	      1693	ref-filter.c	FUNCTION_61
0x4000171	        0x4883c408	                              add rsp, 8	      1694	ref-filter.c	FUNCTION_61
0x4000175	              0x5b	                                 pop rbx	      1694	ref-filter.c	FUNCTION_61
0x4000176	              0x5d	                                 pop rbp	      1694	ref-filter.c	FUNCTION_61
0x4000177	              0xc3	                                     ret	      1694	ref-filter.c	FUNCTION_61
parse_align_position	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,3:functions,0:CALL,3:ELSE,2	30
0x400007e	          0x4889fa	                            mov rdx, rdi	       296	ref-filter.c	FUNCTION_12
0x4000081	      0xbf00000000	                              mov edi, 0	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x4000086	      0xb906000000	                              mov ecx, 6	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x400008b	          0x4889d6	                            mov rsi, rdx	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x400008e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x4000090	        0x400f97c6	                                seta sil	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x4000094	           0xf92c1	                                 setb cl	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x4000097	      0xb802000000	                              mov eax, 2	       298	ref-filter.c	FUNCTION_12	IF_1
0x400009c	          0x4038ce	                             cmp sil, cl	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x400009f	            0x743f	                            je 0x40000e0	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x40000a1	      0xbf00000000	                              mov edi, 0	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x40000a6	      0xb907000000	                              mov ecx, 7	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x40000ab	          0x4889d6	                            mov rsi, rdx	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x40000ae	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x40000b0	        0x400f97c6	                                seta sil	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x40000b4	           0xf92c1	                                 setb cl	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x40000b7	      0xb801000000	                              mov eax, 1	       300	ref-filter.c	FUNCTION_12	ELSE_1	IF_2
0x40000bc	          0x4038ce	                             cmp sil, cl	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x40000bf	            0x741f	                            je 0x40000e0	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x40000c1	      0xbf00000000	                              mov edi, 0	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x40000c6	      0xb905000000	                              mov ecx, 5	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x40000cb	          0x4889d6	                            mov rsi, rdx	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x40000ce	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x40000d0	           0xf97c2	                                 seta dl	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x40000d3	           0xf92c0	                                 setb al	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x40000d6	            0x38c2	                              cmp dl, al	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x40000d8	           0xf95c0	                                setne al	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x40000db	           0xfb6c0	                           movzx eax, al	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x40000de	            0xf7d8	                                 neg eax	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x40000e0	            0xf3c3	                                     ret	       304	ref-filter.c	FUNCTION_12
color_atom_parser	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,3:functions,0:CALL,7:ELSE,0	57
0x40004bd	            0x4155	                                push r13	       119	ref-filter.c	FUNCTION_3
0x40004bf	            0x4154	                                push r12	       119	ref-filter.c	FUNCTION_3
0x40004c1	              0x55	                                push rbp	       119	ref-filter.c	FUNCTION_3
0x40004c2	              0x53	                                push rbx	       119	ref-filter.c	FUNCTION_3
0x40004c3	        0x4883ec08	                              sub rsp, 8	       119	ref-filter.c	FUNCTION_3
0x40004c7	          0x4989cd	                            mov r13, rcx	       119	ref-filter.c	FUNCTION_3
0x40004ca	          0x4885d2	                           test rdx, rdx	       120	ref-filter.c	FUNCTION_3	IF_1
0x40004cd	            0x752d	                           jne 0x40004fc	       120	ref-filter.c	FUNCTION_3	IF_1
0x40004cf	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x40004d4	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40004d9	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x40004de	      0xe800000000	                          call 0x40004e3	        54	gettext.h	FUNCTION_93
0x40004e3	          0x4889c2	                            mov rdx, rax	       121	ref-filter.c	FUNCTION_3	CALL_2
0x40004e6	      0xbeffffffff	                     mov esi, 0xffffffff	       121	ref-filter.c	FUNCTION_3	CALL_2
0x40004eb	          0x4c89ef	                            mov rdi, r13	       121	ref-filter.c	FUNCTION_3	CALL_2
0x40004ee	      0xb800000000	                              mov eax, 0	       121	ref-filter.c	FUNCTION_3	CALL_2
0x40004f3	      0xe85dfeffff	                call sym.strbuf_addf_ret	       121	ref-filter.c	FUNCTION_3	CALL_2
0x40004f8	            0x89c5	                            mov ebp, eax	       121	ref-filter.c	FUNCTION_3	CALL_2
0x40004fa	            0xeb72	                           jmp 0x400056e	       121	ref-filter.c	FUNCTION_3	CALL_2
0x40004fc	          0x4989fc	                            mov r12, rdi	       121	ref-filter.c	FUNCTION_3	CALL_2
0x40004ff	          0x4889d5	                            mov rbp, rdx	       121	ref-filter.c	FUNCTION_3	CALL_2
0x4000502	        0x488d5e10	                   lea rbx, [rsi + 0x10]	       122	ref-filter.c	FUNCTION_3	IF_2	CALL_3
0x4000506	          0x4889de	                            mov rsi, rbx	       122	ref-filter.c	FUNCTION_3	IF_2	CALL_3
0x4000509	          0x4889d7	                            mov rdi, rdx	       122	ref-filter.c	FUNCTION_3	IF_2	CALL_3
0x400050c	      0xe800000000	                          call 0x4000511	       122	ref-filter.c	FUNCTION_3	IF_2	CALL_3
0x4000511	            0x85c0	                           test eax, eax	       122	ref-filter.c	FUNCTION_3	IF_2	CALL_3
0x4000513	            0x7930	                           jns 0x4000545	       122	ref-filter.c	FUNCTION_3	IF_2	CALL_3
0x4000515	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x400051a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x400051f	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4000524	      0xe800000000	                          call 0x4000529	        54	gettext.h	FUNCTION_93
0x4000529	          0x4889e9	                            mov rcx, rbp	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x400052c	          0x4889c2	                            mov rdx, rax	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x400052f	      0xbeffffffff	                     mov esi, 0xffffffff	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x4000534	          0x4c89ef	                            mov rdi, r13	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x4000537	      0xb800000000	                              mov eax, 0	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x400053c	      0xe814feffff	                call sym.strbuf_addf_ret	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x4000541	            0x89c5	                            mov ebp, eax	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x4000543	            0xeb29	                           jmp 0x400056e	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x4000545	      0x418b74240c	              mov esi, dword [r12 + 0xc]	       129	ref-filter.c	FUNCTION_3	IF_3	CALL_6
0x400054a	      0xbf01000000	                              mov edi, 1	       129	ref-filter.c	FUNCTION_3	IF_3	CALL_6
0x400054f	      0xe800000000	                          call 0x4000554	       129	ref-filter.c	FUNCTION_3	IF_3	CALL_6
0x4000554	            0x89c5	                            mov ebp, eax	       129	ref-filter.c	FUNCTION_3	IF_3	CALL_6
0x4000556	            0x85c0	                           test eax, eax	       129	ref-filter.c	FUNCTION_3	IF_3	CALL_6
0x4000558	            0x750f	                           jne 0x4000569	       129	ref-filter.c	FUNCTION_3	IF_3	CALL_6
0x400055a	          0x4889de	                            mov rsi, rbx	       130	ref-filter.c	FUNCTION_3	CALL_7
0x400055d	      0xbf00000000	                              mov edi, 0	       130	ref-filter.c	FUNCTION_3	CALL_7
0x4000562	      0xe800000000	                          call 0x4000567	       130	ref-filter.c	FUNCTION_3	CALL_7
0x4000567	            0xeb05	                           jmp 0x400056e	       130	ref-filter.c	FUNCTION_3	CALL_7
0x4000569	      0xbd00000000	                              mov ebp, 0	       131	ref-filter.c	FUNCTION_3
0x400056e	            0x89e8	                            mov eax, ebp	       132	ref-filter.c	FUNCTION_3
0x4000570	        0x4883c408	                              add rsp, 8	       132	ref-filter.c	FUNCTION_3
0x4000574	              0x5b	                                 pop rbx	       132	ref-filter.c	FUNCTION_3
0x4000575	              0x5d	                                 pop rbp	       132	ref-filter.c	FUNCTION_3
0x4000576	            0x415c	                                 pop r12	       132	ref-filter.c	FUNCTION_3
0x4000578	            0x415d	                                 pop r13	       132	ref-filter.c	FUNCTION_3
0x400057a	              0xc3	                                     ret	       132	ref-filter.c	FUNCTION_3
free_array_item	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,0:functions,0:CALL,2:ELSE,0	8
0x4000c1c	              0x53	                                push rbx	      2038	ref-filter.c	FUNCTION_75
0x4000c1d	          0x4889fb	                            mov rbx, rdi	      2038	ref-filter.c	FUNCTION_75
0x4000c20	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	      2039	ref-filter.c	FUNCTION_75	CALL_1
0x4000c24	      0xe800000000	                          call 0x4000c29	      2039	ref-filter.c	FUNCTION_75	CALL_1
0x4000c29	          0x4889df	                            mov rdi, rbx	      2040	ref-filter.c	FUNCTION_75	CALL_2
0x4000c2c	      0xe800000000	                          call 0x4000c31	      2040	ref-filter.c	FUNCTION_75	CALL_2
0x4000c31	              0x5b	                                 pop rbx	      2041	ref-filter.c	FUNCTION_75
0x4000c32	              0xc3	                                     ret	      2041	ref-filter.c	FUNCTION_75
grab_person	SWITCH,0:FOR,2:WHILE,0:DO,0:IF,17:functions,0:CALL,20:ELSE,4	283
0x4002ce9	            0x4157	                                push r15	      1008	ref-filter.c	FUNCTION_42
0x4002ceb	            0x4156	                                push r14	      1008	ref-filter.c	FUNCTION_42
0x4002ced	            0x4155	                                push r13	      1008	ref-filter.c	FUNCTION_42
0x4002cef	            0x4154	                                push r12	      1008	ref-filter.c	FUNCTION_42
0x4002cf1	              0x55	                                push rbp	      1008	ref-filter.c	FUNCTION_42
0x4002cf2	              0x53	                                push rbx	      1008	ref-filter.c	FUNCTION_42
0x4002cf3	        0x4883ec48	                           sub rsp, 0x48	      1008	ref-filter.c	FUNCTION_42
0x4002cf7	      0x48897c2408	                mov qword [rsp + 8], rdi	      1008	ref-filter.c	FUNCTION_42
0x4002cfc	      0x4889742418	             mov qword [rsp + 0x18], rsi	      1008	ref-filter.c	FUNCTION_42
0x4002d01	          0x4189d5	                           mov r13d, edx	      1008	ref-filter.c	FUNCTION_42
0x4002d04	      0x4c89442420	              mov qword [rsp + 0x20], r8	      1008	ref-filter.c	FUNCTION_42
0x4002d09	      0x4c894c2428	              mov qword [rsp + 0x28], r9	      1008	ref-filter.c	FUNCTION_42
0x4002d0e	      0xb800000000	                              mov eax, 0	      1010	ref-filter.c	FUNCTION_42	CALL_1
0x4002d13	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1010	ref-filter.c	FUNCTION_42	CALL_1
0x4002d1a	            0xf2ae	              repne scasb al, byte [rdi]	      1010	ref-filter.c	FUNCTION_42	CALL_1
0x4002d1c	          0x48f7d1	                                 not rcx	      1010	ref-filter.c	FUNCTION_42	CALL_1
0x4002d1f	        0x488d41ff	                      lea rax, [rcx - 1]	      1010	ref-filter.c	FUNCTION_42	CALL_1
0x4002d23	      0x4889442438	             mov qword [rsp + 0x38], rax	      1010	ref-filter.c	FUNCTION_42	CALL_1
0x4002d28	        0x89442434	             mov dword [rsp + 0x34], eax	      1010	ref-filter.c	FUNCTION_42	CALL_1
0x4002d2c	    0x833d00000000	               cmp dword [0x04002d33], 0	      1013	ref-filter.c	FUNCTION_42	FOR_1
0x4002d33	     0xf8e3f030000	                           jle 0x4003078	      1013	ref-filter.c	FUNCTION_42	FOR_1
0x4002d39	    0x41bf00000000	                             mov r15d, 0	      1013	ref-filter.c	FUNCTION_42	FOR_1
0x4002d3f	      0xbb00000000	                              mov ebx, 0	      1013	ref-filter.c	FUNCTION_42	FOR_1
0x4002d44	            0x4898	                                    cdqe	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x4002d46	      0x4889442410	             mov qword [rsp + 0x10], rax	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x4002d4b	          0x4863eb	                         movsxd rbp, ebx	      1014	ref-filter.c	FUNCTION_42	FOR_1
0x4002d4e	      0x488d446d00	                  lea rax, [rbp + rbp*2]	      1014	ref-filter.c	FUNCTION_42	FOR_1
0x4002d53	        0x48c1e005	                              shl rax, 5	      1014	ref-filter.c	FUNCTION_42	FOR_1
0x4002d57	    0x480305000000	             add rax, qword [0x04002d5e]	      1014	ref-filter.c	FUNCTION_42	FOR_1
0x4002d5e	          0x4c8b20	                    mov r12, qword [rax]	      1014	ref-filter.c	FUNCTION_42	FOR_1
0x4002d61	          0x4585ed	                         test r13d, r13d	      1016	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x4002d64	           0xf95c2	                                setne dl	      1016	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x4002d67	      0x41803c242a	                    cmp byte [r12], 0x2a	      1016	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x4002d6c	           0xf94c0	                                 sete al	      1016	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x4002d6f	            0x38c2	                              cmp dl, al	      1016	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x4002d71	     0xf85d7010000	                           jne 0x4002f4e	      1016	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x4002d77	        0x4183fd01	                             cmp r13d, 1	      1019	ref-filter.c	FUNCTION_42	FOR_1	IF_2
0x4002d7b	        0x4983dcff	             sbb r12, 0xffffffffffffffff	      1019	ref-filter.c	FUNCTION_42	FOR_1	IF_2
0x4002d7f	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x4002d84	          0x4c89f2	                            mov rdx, r14	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x4002d87	          0x4c89e6	                            mov rsi, r12	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x4002d8a	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x4002d8f	      0xe800000000	                          call 0x4002d94	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x4002d94	            0x85c0	                           test eax, eax	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x4002d96	     0xf85b2010000	                           jne 0x4002f4e	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x4002d9c	        0x4f8d3434	                    lea r14, [r12 + r14]	      1022	ref-filter.c	FUNCTION_42	FOR_1	IF_4
0x4002da0	        0x41803e00	                       cmp byte [r14], 0	      1022	ref-filter.c	FUNCTION_42	FOR_1	IF_4
0x4002da4	     0xf84fc020000	                            je 0x40030a6	      1022	ref-filter.c	FUNCTION_42	FOR_1	IF_4
0x4002daa	      0xbf00000000	                              mov edi, 0	      1023	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_3
0x4002daf	      0xb905000000	                              mov ecx, 5	      1023	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_3
0x4002db4	          0x4c89f6	                            mov rsi, r14	      1023	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_3
0x4002db7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1023	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_3
0x4002db9	           0xf97c2	                                 seta dl	      1023	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_3
0x4002dbc	           0xf92c0	                                 setb al	      1023	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_3
0x4002dbf	            0x38c2	                              cmp dl, al	      1022	ref-filter.c	FUNCTION_42	FOR_1	IF_4
0x4002dc1	     0xf84f7020000	                            je 0x40030be	      1022	ref-filter.c	FUNCTION_42	FOR_1	IF_4
0x4002dc7	      0xbf00000000	                              mov edi, 0	      1024	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_4
0x4002dcc	      0xb906000000	                              mov ecx, 6	      1024	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_4
0x4002dd1	          0x4c89f6	                            mov rsi, r14	      1024	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_4
0x4002dd4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1024	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_4
0x4002dd6	           0xf97c2	                                 seta dl	      1024	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_4
0x4002dd9	           0xf92c0	                                 setb al	      1024	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_4
0x4002ddc	            0x38c2	                              cmp dl, al	      1023	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_3
0x4002dde	     0xf84da020000	                            je 0x40030be	      1023	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_3
0x4002de4	      0xbe00000000	                              mov esi, 0	      1025	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_5
0x4002de9	          0x4c89f7	                            mov rdi, r14	      1025	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_5
0x4002dec	      0xe800000000	                          call 0x4002df1	      1025	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_5
0x4002df1	            0x85c0	                           test eax, eax	      1024	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_4
0x4002df3	     0xf8455010000	                            je 0x4002f4e	      1024	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_4
0x4002df9	          0x4d85ff	                           test r15, r15	      1027	ref-filter.c	FUNCTION_42	FOR_1	IF_5
0x4002dfc	            0x7524	                           jne 0x4002e22	      1027	ref-filter.c	FUNCTION_42	FOR_1	IF_5
0x4002dfe	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1028	ref-filter.c	FUNCTION_42	FOR_1	CALL_6
0x4002e03	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1028	ref-filter.c	FUNCTION_42	FOR_1	CALL_6
0x4002e08	        0x8b742434	            mov esi, dword [rsp + 0x34] 	      1028	ref-filter.c	FUNCTION_42	FOR_1	CALL_6
0x4002e0c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1028	ref-filter.c	FUNCTION_42	FOR_1	CALL_6
0x4002e11	      0xe8dfdfffff	                   call sym.find_wholine	      1028	ref-filter.c	FUNCTION_42	FOR_1	CALL_6
0x4002e16	          0x4989c7	                            mov r15, rax	      1028	ref-filter.c	FUNCTION_42	FOR_1	CALL_6
0x4002e19	          0x4885c0	                           test rax, rax	      1029	ref-filter.c	FUNCTION_42	FOR_1	IF_6
0x4002e1c	     0xf84c5020000	                            je 0x40030e7	      1029	ref-filter.c	FUNCTION_42	FOR_1	IF_6
0x4002e22	        0x48c1e505	                              shl rbp, 5	      1015	ref-filter.c	FUNCTION_42	FOR_1
0x4002e26	      0x48036c2418	             add rbp, qword [rsp + 0x18]	      1015	ref-filter.c	FUNCTION_42	FOR_1
0x4002e2b	        0x41803e00	                       cmp byte [r14], 0	      1031	ref-filter.c	FUNCTION_42	FOR_1	IF_7
0x4002e2f	            0x7524	                           jne 0x4002e55	      1031	ref-filter.c	FUNCTION_42	FOR_1	IF_7
0x4002e31	      0xbe0a000000	                            mov esi, 0xa	       931	ref-filter.c	FUNCTION_37
0x4002e36	          0x4c89ff	                            mov rdi, r15	       931	ref-filter.c	FUNCTION_37
0x4002e39	      0xe800000000	                          call 0x4002e3e	       931	ref-filter.c	FUNCTION_37
0x4002e3e	          0x4c29f8	                            sub rax, r15	       932	ref-filter.c	FUNCTION_37	CALL_1
0x4002e41	          0x4889c6	                            mov rsi, rax	       932	ref-filter.c	FUNCTION_37	CALL_1
0x4002e44	          0x4c89ff	                            mov rdi, r15	       932	ref-filter.c	FUNCTION_37	CALL_1
0x4002e47	      0xe800000000	                          call 0x4002e4c	       932	ref-filter.c	FUNCTION_37	CALL_1
0x4002e4c	        0x48894500	                    mov qword [rbp], rax	      1032	ref-filter.c	FUNCTION_42	FOR_1	CALL_7
0x4002e50	      0xe9f9000000	                           jmp 0x4002f4e	      1032	ref-filter.c	FUNCTION_42	FOR_1	CALL_7
0x4002e55	      0xbf00000000	                              mov edi, 0	      1033	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8	CALL_8
0x4002e5a	      0xb905000000	                              mov ecx, 5	      1033	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8	CALL_8
0x4002e5f	          0x4c89f6	                            mov rsi, r14	      1033	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8	CALL_8
0x4002e62	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1033	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8	CALL_8
0x4002e64	           0xf97c2	                                 seta dl	      1033	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8	CALL_8
0x4002e67	           0xf92c0	                                 setb al	      1033	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8	CALL_8
0x4002e6a	            0x38c2	                              cmp dl, al	      1033	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8	CALL_8
0x4002e6c	            0x755d	                           jne 0x4002ecb	      1033	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8	CALL_8
0x4002e6e	        0x410fb607	                   movzx eax, byte [r15]	       938	ref-filter.c	FUNCTION_38	FOR_1
0x4002e72	            0x84c0	                             test al, al	       938	ref-filter.c	FUNCTION_38	FOR_1
0x4002e74	            0x7447	                            je 0x4002ebd	       938	ref-filter.c	FUNCTION_38	FOR_1
0x4002e76	            0x3c0a	                             cmp al, 0xa	       938	ref-filter.c	FUNCTION_38	FOR_1
0x4002e78	            0x7443	                            je 0x4002ebd	       938	ref-filter.c	FUNCTION_38	FOR_1
0x4002e7a	          0x4c89f8	                            mov rax, r15	       938	ref-filter.c	FUNCTION_38	FOR_1
0x4002e7d	      0xbf00000000	                              mov edi, 0	       939	ref-filter.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x4002e82	      0xb902000000	                              mov ecx, 2	       939	ref-filter.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x4002e87	          0x4889c6	                            mov rsi, rax	       939	ref-filter.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x4002e8a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       939	ref-filter.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x4002e8c	           0xf97c1	                                 seta cl	       939	ref-filter.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x4002e8f	           0xf92c2	                                 setb dl	       939	ref-filter.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x4002e92	            0x38d1	                              cmp cl, dl	       939	ref-filter.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x4002e94	            0x7510	                           jne 0x4002ea6	       939	ref-filter.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x4002e96	          0x4c29f8	                            sub rax, r15	       940	ref-filter.c	FUNCTION_38	FOR_1	CALL_2
0x4002e99	          0x4889c6	                            mov rsi, rax	       940	ref-filter.c	FUNCTION_38	FOR_1	CALL_2
0x4002e9c	          0x4c89ff	                            mov rdi, r15	       940	ref-filter.c	FUNCTION_38	FOR_1	CALL_2
0x4002e9f	      0xe800000000	                          call 0x4002ea4	       940	ref-filter.c	FUNCTION_38	FOR_1	CALL_2
0x4002ea4	            0xeb1c	                           jmp 0x4002ec2	       940	ref-filter.c	FUNCTION_38	FOR_1	CALL_2
0x4002ea6	        0x4883c001	                              add rax, 1	       938	ref-filter.c	FUNCTION_38	FOR_1
0x4002eaa	           0xfb610	                   movzx edx, byte [rax]	       938	ref-filter.c	FUNCTION_38	FOR_1
0x4002ead	            0x84d2	                             test dl, dl	       938	ref-filter.c	FUNCTION_38	FOR_1
0x4002eaf	            0x7405	                            je 0x4002eb6	       938	ref-filter.c	FUNCTION_38	FOR_1
0x4002eb1	          0x80fa0a	                             cmp dl, 0xa	       938	ref-filter.c	FUNCTION_38	FOR_1
0x4002eb4	            0x75c7	                           jne 0x4002e7d	       938	ref-filter.c	FUNCTION_38	FOR_1
0x4002eb6	      0xb800000000	                              mov eax, 0	       942	ref-filter.c	FUNCTION_38
0x4002ebb	            0xeb05	                           jmp 0x4002ec2	       942	ref-filter.c	FUNCTION_38
0x4002ebd	      0xb800000000	                              mov eax, 0	       942	ref-filter.c	FUNCTION_38
0x4002ec2	        0x48894500	                    mov qword [rbp], rax	      1034	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8
0x4002ec6	      0xe983000000	                           jmp 0x4002f4e	      1034	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8
0x4002ecb	      0xbf00000000	                              mov edi, 0	      1035	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9	CALL_10
0x4002ed0	      0xb906000000	                              mov ecx, 6	      1035	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9	CALL_10
0x4002ed5	          0x4c89f6	                            mov rsi, r14	      1035	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9	CALL_10
0x4002ed8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1035	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9	CALL_10
0x4002eda	           0xf97c2	                                 seta dl	      1035	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9	CALL_10
0x4002edd	           0xf92c0	                                 setb al	      1035	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9	CALL_10
0x4002ee0	            0x38c2	                              cmp dl, al	      1035	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9	CALL_10
0x4002ee2	            0x754b	                           jne 0x4002f2f	      1035	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9	CALL_10
0x4002ee4	      0xbe3c000000	                           mov esi, 0x3c	       947	ref-filter.c	FUNCTION_39	CALL_1
0x4002ee9	          0x4c89ff	                            mov rdi, r15	       947	ref-filter.c	FUNCTION_39	CALL_1
0x4002eec	      0xe800000000	                          call 0x4002ef1	       947	ref-filter.c	FUNCTION_39	CALL_1
0x4002ef1	          0x4989c4	                            mov r12, rax	       947	ref-filter.c	FUNCTION_39	CALL_1
0x4002ef4	          0x4885c0	                           test rax, rax	       949	ref-filter.c	FUNCTION_39	IF_1
0x4002ef7	            0x742b	                            je 0x4002f24	       949	ref-filter.c	FUNCTION_39	IF_1
0x4002ef9	      0xbe3e000000	                           mov esi, 0x3e	       951	ref-filter.c	FUNCTION_39	CALL_2
0x4002efe	          0x4889c7	                            mov rdi, rax	       951	ref-filter.c	FUNCTION_39	CALL_2
0x4002f01	      0xe800000000	                          call 0x4002f06	       951	ref-filter.c	FUNCTION_39	CALL_2
0x4002f06	          0x4889c2	                            mov rdx, rax	       951	ref-filter.c	FUNCTION_39	CALL_2
0x4002f09	      0xb800000000	                              mov eax, 0	       953	ref-filter.c	FUNCTION_39	IF_2
0x4002f0e	          0x4885d2	                           test rdx, rdx	       952	ref-filter.c	FUNCTION_39	IF_2
0x4002f11	            0x7416	                            je 0x4002f29	       952	ref-filter.c	FUNCTION_39	IF_2
0x4002f13	        0x488d7201	                      lea rsi, [rdx + 1]	       954	ref-filter.c	FUNCTION_39	CALL_3
0x4002f17	          0x4c29e6	                            sub rsi, r12	       954	ref-filter.c	FUNCTION_39	CALL_3
0x4002f1a	          0x4c89e7	                            mov rdi, r12	       954	ref-filter.c	FUNCTION_39	CALL_3
0x4002f1d	      0xe800000000	                          call 0x4002f22	       954	ref-filter.c	FUNCTION_39	CALL_3
0x4002f22	            0xeb05	                           jmp 0x4002f29	       954	ref-filter.c	FUNCTION_39	CALL_3
0x4002f24	      0xb800000000	                              mov eax, 0	       950	ref-filter.c	FUNCTION_39	IF_1
0x4002f29	        0x48894500	                    mov qword [rbp], rax	      1036	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9
0x4002f2d	            0xeb1f	                           jmp 0x4002f4e	      1036	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9
0x4002f2f	      0xbe00000000	                              mov esi, 0	      1037	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10	CALL_12
0x4002f34	          0x4c89f7	                            mov rdi, r14	      1037	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10	CALL_12
0x4002f37	      0xe800000000	                          call 0x4002f3c	      1037	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10	CALL_12
0x4002f3c	            0x85c0	                           test eax, eax	      1037	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10	CALL_12
0x4002f3e	            0x740e	                            je 0x4002f4e	      1037	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10	CALL_12
0x4002f40	          0x4c89e2	                            mov rdx, r12	      1038	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10
0x4002f43	          0x4889ee	                            mov rsi, rbp	      1038	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10
0x4002f46	          0x4c89ff	                            mov rdi, r15	      1038	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10
0x4002f49	      0xe84eecffff	                      call sym.grab_date	      1038	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10
0x4002f4e	          0x83c301	                              add ebx, 1	      1013	ref-filter.c	FUNCTION_42	FOR_1
0x4002f51	    0x391d00000000	            cmp dword [0x04002f57], ebx 	      1013	ref-filter.c	FUNCTION_42	FOR_1
0x4002f57	     0xf8feefdffff	                            jg 0x4002d4b	      1013	ref-filter.c	FUNCTION_42	FOR_1
0x4002f5d	      0xbf00000000	                              mov edi, 0	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x4002f62	      0xb907000000	                              mov ecx, 7	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x4002f67	      0x488b742408	                mov rsi, qword [rsp + 8]	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x4002f6c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x4002f6e	           0xf97c2	                                 seta dl	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x4002f71	           0xf92c0	                                 setb al	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x4002f74	            0x38c2	                              cmp dl, al	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x4002f76	            0x741f	                            je 0x4002f97	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x4002f78	      0xbf00000000	                              mov edi, 0	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x4002f7d	      0xb90a000000	                            mov ecx, 0xa	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x4002f82	      0x488b742408	                mov rsi, qword [rsp + 8]	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x4002f87	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x4002f89	           0xf97c2	                                 seta dl	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x4002f8c	           0xf92c0	                                 setb al	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x4002f8f	            0x38c2	                              cmp dl, al	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x4002f91	     0xf8550010000	                           jne 0x40030e7	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x4002f97	          0x4d85ff	                           test r15, r15	      1047	ref-filter.c	FUNCTION_42	IF_12
0x4002f9a	            0x7524	                           jne 0x4002fc0	      1047	ref-filter.c	FUNCTION_42	IF_12
0x4002f9c	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1048	ref-filter.c	FUNCTION_42	CALL_16
0x4002fa1	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1048	ref-filter.c	FUNCTION_42	CALL_16
0x4002fa6	        0x8b742438	            mov esi, dword [rsp + 0x38] 	      1048	ref-filter.c	FUNCTION_42	CALL_16
0x4002faa	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1048	ref-filter.c	FUNCTION_42	CALL_16
0x4002faf	      0xe841deffff	                   call sym.find_wholine	      1048	ref-filter.c	FUNCTION_42	CALL_16
0x4002fb4	          0x4989c7	                            mov r15, rax	      1048	ref-filter.c	FUNCTION_42	CALL_16
0x4002fb7	          0x4885c0	                           test rax, rax	      1049	ref-filter.c	FUNCTION_42	IF_13
0x4002fba	     0xf8427010000	                            je 0x40030e7	      1049	ref-filter.c	FUNCTION_42	IF_13
0x4002fc0	    0x833d00000000	               cmp dword [0x04002fc7], 0	      1051	ref-filter.c	FUNCTION_42	FOR_2
0x4002fc7	     0xf8e1a010000	                           jle 0x40030e7	      1051	ref-filter.c	FUNCTION_42	FOR_2
0x4002fcd	      0xbb00000000	                              mov ebx, 0	      1051	ref-filter.c	FUNCTION_42	FOR_2
0x4002fd2	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	      1051	ref-filter.c	FUNCTION_42	FOR_2
0x4002fd7	          0x4863d3	                         movsxd rdx, ebx	      1052	ref-filter.c	FUNCTION_42	FOR_2
0x4002fda	        0x488d0452	                  lea rax, [rdx + rdx*2]	      1052	ref-filter.c	FUNCTION_42	FOR_2
0x4002fde	        0x48c1e005	                              shl rax, 5	      1052	ref-filter.c	FUNCTION_42	FOR_2
0x4002fe2	    0x480305000000	             add rax, qword [0x04002fe9]	      1052	ref-filter.c	FUNCTION_42	FOR_2
0x4002fe9	          0x4c8b20	                    mov r12, qword [rax]	      1052	ref-filter.c	FUNCTION_42	FOR_2
0x4002fec	          0x4585ed	                         test r13d, r13d	      1054	ref-filter.c	FUNCTION_42	FOR_2	IF_14
0x4002fef	           0xf95c1	                                setne cl	      1054	ref-filter.c	FUNCTION_42	FOR_2	IF_14
0x4002ff2	      0x41803c242a	                    cmp byte [r12], 0x2a	      1054	ref-filter.c	FUNCTION_42	FOR_2	IF_14
0x4002ff7	           0xf94c0	                                 sete al	      1054	ref-filter.c	FUNCTION_42	FOR_2	IF_14
0x4002ffa	            0x38c1	                              cmp cl, al	      1054	ref-filter.c	FUNCTION_42	FOR_2	IF_14
0x4002ffc	            0x7569	                           jne 0x4003067	      1054	ref-filter.c	FUNCTION_42	FOR_2	IF_14
0x4002ffe	        0x4183fd01	                             cmp r13d, 1	      1057	ref-filter.c	FUNCTION_42	FOR_2	IF_15
0x4003002	        0x4983dcff	             sbb r12, 0xffffffffffffffff	      1057	ref-filter.c	FUNCTION_42	FOR_2	IF_15
0x4003006	        0x48c1e205	                              shl rdx, 5	      1053	ref-filter.c	FUNCTION_42	FOR_2
0x400300a	      0x4c8d741500	                    lea r14, [rbp + rdx]	      1053	ref-filter.c	FUNCTION_42	FOR_2
0x400300f	      0xbe00000000	                              mov esi, 0	      1059	ref-filter.c	FUNCTION_42	FOR_2	IF_16	CALL_17
0x4003014	          0x4c89e7	                            mov rdi, r12	      1059	ref-filter.c	FUNCTION_42	FOR_2	IF_16	CALL_17
0x4003017	      0xe800000000	                          call 0x400301c	      1059	ref-filter.c	FUNCTION_42	FOR_2	IF_16	CALL_17
0x400301c	            0x85c0	                           test eax, eax	      1059	ref-filter.c	FUNCTION_42	FOR_2	IF_16	CALL_17
0x400301e	            0x7410	                            je 0x4003030	      1059	ref-filter.c	FUNCTION_42	FOR_2	IF_16	CALL_17
0x4003020	          0x4c89e2	                            mov rdx, r12	      1060	ref-filter.c	FUNCTION_42	FOR_2	CALL_18
0x4003023	          0x4c89f6	                            mov rsi, r14	      1060	ref-filter.c	FUNCTION_42	FOR_2	CALL_18
0x4003026	          0x4c89ff	                            mov rdi, r15	      1060	ref-filter.c	FUNCTION_42	FOR_2	CALL_18
0x4003029	      0xe86eebffff	                      call sym.grab_date	      1060	ref-filter.c	FUNCTION_42	FOR_2	CALL_18
0x400302e	            0xeb37	                           jmp 0x4003067	      1060	ref-filter.c	FUNCTION_42	FOR_2	CALL_18
0x4003030	      0xbf00000000	                              mov edi, 0	      1061	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17	CALL_19
0x4003035	      0xb908000000	                              mov ecx, 8	      1061	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17	CALL_19
0x400303a	          0x4c89e6	                            mov rsi, r12	      1061	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17	CALL_19
0x400303d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1061	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17	CALL_19
0x400303f	           0xf97c2	                                 seta dl	      1061	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17	CALL_19
0x4003042	           0xf92c0	                                 setb al	      1061	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17	CALL_19
0x4003045	            0x38c2	                              cmp dl, al	      1061	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17	CALL_19
0x4003047	            0x751e	                           jne 0x4003067	      1061	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17	CALL_19
0x4003049	      0xbe0a000000	                            mov esi, 0xa	       931	ref-filter.c	FUNCTION_37
0x400304e	          0x4c89ff	                            mov rdi, r15	       931	ref-filter.c	FUNCTION_37
0x4003051	      0xe800000000	                          call 0x4003056	       931	ref-filter.c	FUNCTION_37
0x4003056	          0x4c29f8	                            sub rax, r15	       932	ref-filter.c	FUNCTION_37	CALL_1
0x4003059	          0x4889c6	                            mov rsi, rax	       932	ref-filter.c	FUNCTION_37	CALL_1
0x400305c	          0x4c89ff	                            mov rdi, r15	       932	ref-filter.c	FUNCTION_37	CALL_1
0x400305f	      0xe800000000	                          call 0x4003064	       932	ref-filter.c	FUNCTION_37	CALL_1
0x4003064	          0x498906	                    mov qword [r14], rax	      1062	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17
0x4003067	          0x83c301	                              add ebx, 1	      1051	ref-filter.c	FUNCTION_42	FOR_2
0x400306a	    0x391d00000000	            cmp dword [0x04003070], ebx 	      1051	ref-filter.c	FUNCTION_42	FOR_2
0x4003070	     0xf8f61ffffff	                            jg 0x4002fd7	      1051	ref-filter.c	FUNCTION_42	FOR_2
0x4003076	            0xeb6f	                           jmp 0x40030e7	      1051	ref-filter.c	FUNCTION_42	FOR_2
0x4003078	      0xbf00000000	                              mov edi, 0	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x400307d	      0xb907000000	                              mov ecx, 7	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x4003082	      0x488b742408	                mov rsi, qword [rsp + 8]	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x4003087	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x4003089	           0xf97c2	                                 seta dl	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x400308c	           0xf92c0	                                 setb al	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x400308f	            0x38c2	                              cmp dl, al	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x4003091	            0x7535	                           jne 0x40030c8	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x4003093	      0xe904ffffff	                           jmp 0x4002f9c	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x4003098	        0x48c1e505	                              shl rbp, 5	      1015	ref-filter.c	FUNCTION_42	FOR_1
0x400309c	      0x48036c2418	             add rbp, qword [rsp + 0x18]	      1015	ref-filter.c	FUNCTION_42	FOR_1
0x40030a1	      0xe98bfdffff	                           jmp 0x4002e31	      1015	ref-filter.c	FUNCTION_42	FOR_1
0x40030a6	          0x4d85ff	                           test r15, r15	      1027	ref-filter.c	FUNCTION_42	FOR_1	IF_5
0x40030a9	            0x75ed	                           jne 0x4003098	      1027	ref-filter.c	FUNCTION_42	FOR_1	IF_5
0x40030ab	      0xe94efdffff	                           jmp 0x4002dfe	      1027	ref-filter.c	FUNCTION_42	FOR_1	IF_5
0x40030b0	        0x48c1e505	                              shl rbp, 5	      1015	ref-filter.c	FUNCTION_42	FOR_1
0x40030b4	      0x48036c2418	             add rbp, qword [rsp + 0x18]	      1015	ref-filter.c	FUNCTION_42	FOR_1
0x40030b9	      0xe997fdffff	                           jmp 0x4002e55	      1015	ref-filter.c	FUNCTION_42	FOR_1
0x40030be	          0x4d85ff	                           test r15, r15	      1027	ref-filter.c	FUNCTION_42	FOR_1	IF_5
0x40030c1	            0x75ed	                           jne 0x40030b0	      1027	ref-filter.c	FUNCTION_42	FOR_1	IF_5
0x40030c3	      0xe936fdffff	                           jmp 0x4002dfe	      1027	ref-filter.c	FUNCTION_42	FOR_1	IF_5
0x40030c8	      0xbf00000000	                              mov edi, 0	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x40030cd	      0xb90a000000	                            mov ecx, 0xa	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x40030d2	      0x488b742408	                mov rsi, qword [rsp + 8]	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x40030d7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x40030d9	           0xf97c2	                                 seta dl	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x40030dc	           0xf92c0	                                 setb al	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x40030df	            0x38c2	                              cmp dl, al	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x40030e1	     0xf84b5feffff	                            je 0x4002f9c	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x40030e7	        0x4883c448	                           add rsp, 0x48	      1064	ref-filter.c	FUNCTION_42
0x40030eb	              0x5b	                                 pop rbx	      1064	ref-filter.c	FUNCTION_42
0x40030ec	              0x5d	                                 pop rbp	      1064	ref-filter.c	FUNCTION_42
0x40030ed	            0x415c	                                 pop r12	      1064	ref-filter.c	FUNCTION_42
0x40030ef	            0x415d	                                 pop r13	      1064	ref-filter.c	FUNCTION_42
0x40030f1	            0x415e	                                 pop r14	      1064	ref-filter.c	FUNCTION_42
0x40030f3	            0x415f	                                 pop r15	      1064	ref-filter.c	FUNCTION_42
0x40030f5	              0xc3	                                     ret	      1064	ref-filter.c	FUNCTION_42
get_object	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,3:functions,0:CALL,9:ELSE,2	403
0x40030f6	            0x4157	                                push r15	      1436	ref-filter.c	FUNCTION_56
0x40030f8	            0x4156	                                push r14	      1436	ref-filter.c	FUNCTION_56
0x40030fa	            0x4155	                                push r13	      1436	ref-filter.c	FUNCTION_56
0x40030fc	            0x4154	                                push r12	      1436	ref-filter.c	FUNCTION_56
0x40030fe	              0x55	                                push rbp	      1436	ref-filter.c	FUNCTION_56
0x40030ff	              0x53	                                push rbx	      1436	ref-filter.c	FUNCTION_56
0x4003100	        0x4883ec58	                           sub rsp, 0x58	      1436	ref-filter.c	FUNCTION_56
0x4003104	          0x4889fd	                            mov rbp, rdi	      1436	ref-filter.c	FUNCTION_56
0x4003107	          0x4889f3	                            mov rbx, rsi	      1436	ref-filter.c	FUNCTION_56
0x400310a	          0x4189d5	                           mov r13d, edx	      1436	ref-filter.c	FUNCTION_56
0x400310d	          0x4989cf	                            mov r15, rcx	      1436	ref-filter.c	FUNCTION_56
0x4003110	          0x4d89c4	                             mov r12, r8	      1436	ref-filter.c	FUNCTION_56
0x4003113	    0x64488b042528	                mov rax, qword fs:[0x28]	      1436	ref-filter.c	FUNCTION_56
0x400311c	      0x4889442448	             mov qword [rsp + 0x48], rax	      1436	ref-filter.c	FUNCTION_56
0x4003121	            0x31c0	                            xor eax, eax	      1436	ref-filter.c	FUNCTION_56
0x4003123	      0xb901000000	                              mov ecx, 1	      1200	cache.h	FUNCTION_166	CALL_1
0x4003128	      0x488d542428	                   lea rdx, [rsp + 0x28]	      1200	cache.h	FUNCTION_166	CALL_1
0x400312d	      0x488d742430	                   lea rsi, [rsp + 0x30]	      1200	cache.h	FUNCTION_166	CALL_1
0x4003132	          0x4889df	                            mov rdi, rbx	      1200	cache.h	FUNCTION_166	CALL_1
0x4003135	      0xe800000000	                          call 0x400313a	      1200	cache.h	FUNCTION_166	CALL_1
0x400313a	      0x4889442408	                mov qword [rsp + 8], rax	      1200	cache.h	FUNCTION_166	CALL_1
0x400313f	          0x4885c0	                           test rax, rax	       806	ref-filter.c	FUNCTION_31	IF_1
0x4003142	            0x742a	                            je 0x400316e	       806	ref-filter.c	FUNCTION_31	IF_1
0x4003144	      0x4c8d442424	                    lea r8, [rsp + 0x24]	       807	ref-filter.c	FUNCTION_31	CALL_2
0x4003149	          0x4889c1	                            mov rcx, rax	       807	ref-filter.c	FUNCTION_31	CALL_2
0x400314c	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       807	ref-filter.c	FUNCTION_31	CALL_2
0x4003151	        0x8b742430	            mov esi, dword [rsp + 0x30] 	       807	ref-filter.c	FUNCTION_31	CALL_2
0x4003155	          0x4889df	                            mov rdi, rbx	       807	ref-filter.c	FUNCTION_31	CALL_2
0x4003158	      0xe800000000	                          call 0x400315d	       807	ref-filter.c	FUNCTION_31	CALL_2
0x400315d	          0x4989c6	                            mov r14, rax	       807	ref-filter.c	FUNCTION_31	CALL_2
0x4003160	          0x498907	                    mov qword [r15], rax	       807	ref-filter.c	FUNCTION_31	CALL_2
0x4003163	          0x4885c0	                           test rax, rax	      1444	ref-filter.c	FUNCTION_56	ELSE_1	IF_2
0x4003166	     0xf858d000000	                           jne 0x40031f9	      1444	ref-filter.c	FUNCTION_56	ELSE_1	IF_2
0x400316c	            0xeb49	                           jmp 0x40031b7	      1444	ref-filter.c	FUNCTION_56	ELSE_1	IF_2
0x400316e	    0x49c707000000	                      mov qword [r15], 0	       809	ref-filter.c	FUNCTION_31	ELSE_1
0x4003175	          0x4889df	                            mov rdi, rbx	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x4003178	      0xe800000000	                          call 0x400317d	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x400317d	          0x4889c3	                            mov rbx, rax	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x4003180	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4003185	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x400318a	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x400318f	      0xe800000000	                          call 0x4003194	        54	gettext.h	FUNCTION_93
0x4003194	        0x4c8d4538	                    lea r8, [rbp + 0x38]	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x4003198	          0x4889d9	                            mov rcx, rbx	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x400319b	          0x4889c2	                            mov rdx, rax	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x400319e	      0xbeffffffff	                     mov esi, 0xffffffff	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x40031a3	          0x4c89e7	                            mov rdi, r12	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x40031a6	      0xb800000000	                              mov eax, 0	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x40031ab	      0xe8a5d1ffff	                call sym.strbuf_addf_ret	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x40031b0	            0x89c3	                            mov ebx, eax	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x40031b2	      0xe9d6040000	                           jmp 0x400368d	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x40031b7	          0x4889df	                            mov rdi, rbx	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40031ba	      0xe800000000	                          call 0x40031bf	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40031bf	          0x4889c3	                            mov rbx, rax	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40031c2	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x40031c7	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40031cc	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x40031d1	      0xe800000000	                          call 0x40031d6	        54	gettext.h	FUNCTION_93
0x40031d6	        0x4c8d4538	                    lea r8, [rbp + 0x38]	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40031da	          0x4889d9	                            mov rcx, rbx	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40031dd	          0x4889c2	                            mov rdx, rax	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40031e0	      0xbeffffffff	                     mov esi, 0xffffffff	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40031e5	          0x4c89e7	                            mov rdi, r12	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40031e8	      0xb800000000	                              mov eax, 0	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40031ed	      0xe863d1ffff	                call sym.strbuf_addf_ret	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40031f2	            0x89c3	                            mov ebx, eax	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40031f4	      0xe994040000	                           jmp 0x400368d	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40031f9	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x40031fe	      0x4889442410	             mov qword [rsp + 0x10], rax	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x4003203	        0x4c8b7d30	            mov r15, qword [rbp + 0x30] 	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x4003207	    0x833d00000000	               cmp dword [0x0400320e], 0	       837	ref-filter.c	FUNCTION_33	FOR_1
0x400320e	     0xf8e9e040000	                           jle 0x40036b2	       837	ref-filter.c	FUNCTION_33	FOR_1
0x4003214	      0xbd00000000	                              mov ebp, 0	       837	ref-filter.c	FUNCTION_33	FOR_1
0x4003219	        0x498d4604	                      lea rax, [r14 + 4]	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x400321d	        0x48890424	                    mov qword [rsp], rax	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x4003221	          0x4863dd	                         movsxd rbx, ebp	       838	ref-filter.c	FUNCTION_33	FOR_1
0x4003224	        0x488d045b	                  lea rax, [rbx + rbx*2]	       838	ref-filter.c	FUNCTION_33	FOR_1
0x4003228	        0x48c1e005	                              shl rax, 5	       838	ref-filter.c	FUNCTION_33	FOR_1
0x400322c	    0x480305000000	             add rax, qword [0x04003233]	       838	ref-filter.c	FUNCTION_33	FOR_1
0x4003233	          0x4c8b00	                     mov r8, qword [rax]	       838	ref-filter.c	FUNCTION_33	FOR_1
0x4003236	          0x4585ed	                         test r13d, r13d	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x4003239	        0x410f95c4	                              setne r12b	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x400323d	        0x4180382a	                     cmp byte [r8], 0x2a	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x4003241	           0xf94c2	                                 sete dl	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x4003244	          0x4138d4	                            cmp r12b, dl	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x4003247	     0xf858c000000	                           jne 0x40032d9	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x400324d	        0x4183fd01	                             cmp r13d, 1	       843	ref-filter.c	FUNCTION_33	FOR_1	IF_2
0x4003251	        0x4983d8ff	              sbb r8, 0xffffffffffffffff	       843	ref-filter.c	FUNCTION_33	FOR_1	IF_2
0x4003255	        0x48c1e305	                              shl rbx, 5	       839	ref-filter.c	FUNCTION_33	FOR_1
0x4003259	          0x4c01fb	                            add rbx, r15	       839	ref-filter.c	FUNCTION_33	FOR_1
0x400325c	      0xbf00000000	                              mov edi, 0	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x4003261	      0xb90b000000	                            mov ecx, 0xb	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x4003266	          0x4c89c6	                             mov rsi, r8	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x4003269	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x400326b	           0xf97c1	                                 seta cl	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x400326e	           0xf92c2	                                 setb dl	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x4003271	            0x38d1	                              cmp cl, dl	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x4003273	            0x7514	                           jne 0x4003289	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x4003275	        0x410fb63e	                   movzx edi, byte [r14]	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x4003279	          0x40d0ef	                              shr dil, 1	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x400327c	          0x83e707	                              and edi, 7	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x400327f	      0xe800000000	                          call 0x4003284	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x4003284	          0x488903	                    mov qword [rbx], rax	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x4003287	            0xeb50	                           jmp 0x40032d9	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x4003289	      0xbf00000000	                              mov edi, 0	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x400328e	      0xb90b000000	                            mov ecx, 0xb	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x4003293	          0x4c89c6	                             mov rsi, r8	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x4003296	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x4003298	           0xf97c1	                                 seta cl	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x400329b	           0xf92c2	                                 setb dl	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x400329e	            0x38d1	                              cmp cl, dl	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x40032a0	            0x7520	                           jne 0x40032c2	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x40032a2	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       847	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4
0x40032a7	        0x48894310	             mov qword [rbx + 0x10], rax	       847	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4
0x40032ab	          0x4889c6	                            mov rsi, rax	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40032ae	      0xbf00000000	                              mov edi, 0	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40032b3	      0xb800000000	                              mov eax, 0	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40032b8	      0xe800000000	                          call 0x40032bd	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40032bd	          0x488903	                    mov qword [rbx], rax	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40032c0	            0xeb17	                           jmp 0x40032d9	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40032c2	          0x4585ed	                         test r13d, r13d	       850	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x40032c5	            0x7412	                            je 0x40032d9	       850	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x40032c7	          0x4889c1	                            mov rcx, rax	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x40032ca	          0x4889da	                            mov rdx, rbx	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x40032cd	        0x488b3424	                    mov rsi, qword [rsp]	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x40032d1	          0x4c89c7	                             mov rdi, r8	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x40032d4	      0xe841e3ffff	                call sym.grab_objectname	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x40032d9	          0x83c501	                              add ebp, 1	       837	ref-filter.c	FUNCTION_33	FOR_1
0x40032dc	    0x8b0500000000	            mov eax, dword [0x040032e2] 	       837	ref-filter.c	FUNCTION_33	FOR_1
0x40032e2	            0x39c5	                            cmp ebp, eax	       837	ref-filter.c	FUNCTION_33	FOR_1
0x40032e4	     0xf8c37ffffff	                            jl 0x4003221	       837	ref-filter.c	FUNCTION_33	FOR_1
0x40032ea	        0x410fb636	                   movzx esi, byte [r14]	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40032ee	          0x40d0ee	                              shr sil, 1	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40032f1	          0x83e607	                              and esi, 7	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40032f4	        0x4080fe03	                              cmp sil, 3	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40032f8	            0x7715	                            ja 0x400330f	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40032fa	        0x4080fe02	                              cmp sil, 2	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40032fe	     0xf837d030000	                           jae 0x4003681	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4003304	        0x4080fe01	                              cmp sil, 1	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4003308	            0x7422	                            je 0x400332c	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x400330a	      0xe95f030000	                           jmp 0x400366e	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x400330f	        0x4080fe04	                              cmp sil, 4	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4003313	     0xf8555030000	                           jne 0x400366e	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4003319	      0xbb00000000	                              mov ebx, 0	       861	ref-filter.c	FUNCTION_34	FOR_1
0x400331e	    0x833d00000000	               cmp dword [0x04003325], 0	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4003325	            0x7f12	                            jg 0x4003339	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4003327	      0xe9e3000000	                           jmp 0x400340f	       861	ref-filter.c	FUNCTION_34	FOR_1
0x400332c	            0x85c0	                           test eax, eax	       883	ref-filter.c	FUNCTION_35	FOR_1
0x400332e	     0xf8f1c010000	                            jg 0x4003450	       883	ref-filter.c	FUNCTION_35	FOR_1
0x4003334	      0xe9de020000	                           jmp 0x4003617	       883	ref-filter.c	FUNCTION_35	FOR_1
0x4003339	          0x4863eb	                         movsxd rbp, ebx	       862	ref-filter.c	FUNCTION_34	FOR_1
0x400333c	      0x488d446d00	                  lea rax, [rbp + rbp*2]	       862	ref-filter.c	FUNCTION_34	FOR_1
0x4003341	        0x48c1e005	                              shl rax, 5	       862	ref-filter.c	FUNCTION_34	FOR_1
0x4003345	    0x480305000000	             add rax, qword [0x0400334c]	       862	ref-filter.c	FUNCTION_34	FOR_1
0x400334c	          0x488b00	                    mov rax, qword [rax]	       862	ref-filter.c	FUNCTION_34	FOR_1
0x400334f	          0x4585ed	                         test r13d, r13d	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x4003352	           0xf95c1	                                setne cl	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x4003355	          0x80382a	                    cmp byte [rax], 0x2a	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x4003358	           0xf94c2	                                 sete dl	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x400335b	            0x38d1	                              cmp cl, dl	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x400335d	     0xf859d000000	                           jne 0x4003400	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x4003363	        0x4183fd01	                             cmp r13d, 1	       867	ref-filter.c	FUNCTION_34	FOR_1	IF_2
0x4003367	        0x4883d8ff	             sbb rax, 0xffffffffffffffff	       867	ref-filter.c	FUNCTION_34	FOR_1	IF_2
0x400336b	        0x48c1e505	                              shl rbp, 5	       863	ref-filter.c	FUNCTION_34	FOR_1
0x400336f	          0x4c01fd	                            add rbp, r15	       863	ref-filter.c	FUNCTION_34	FOR_1
0x4003372	          0x803874	                    cmp byte [rax], 0x74	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x4003375	            0x751c	                           jne 0x4003393	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x4003377	        0x80780161	                cmp byte [rax + 1], 0x61	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x400337b	            0x7516	                           jne 0x4003393	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x400337d	        0x80780267	                cmp byte [rax + 2], 0x67	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x4003381	            0x7510	                           jne 0x4003393	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x4003383	        0x80780300	                   cmp byte [rax + 3], 0	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x4003387	            0x750a	                           jne 0x4003393	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x4003389	        0x498b4620	            mov rax, qword [r14 + 0x20] 	       869	ref-filter.c	FUNCTION_34	FOR_1	IF_3
0x400338d	        0x48894500	                    mov qword [rbp], rax	       869	ref-filter.c	FUNCTION_34	FOR_1	IF_3
0x4003391	            0xeb6d	                           jmp 0x4003400	       869	ref-filter.c	FUNCTION_34	FOR_1	IF_3
0x4003393	      0xbf00000000	                              mov edi, 0	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x4003398	      0xb905000000	                              mov ecx, 5	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x400339d	          0x4889c6	                            mov rsi, rax	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40033a0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40033a2	           0xf97c1	                                 seta cl	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40033a5	           0xf92c2	                                 setb dl	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40033a8	            0x38d1	                              cmp cl, dl	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40033aa	            0x751d	                           jne 0x40033c9	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40033ac	        0x498b4618	            mov rax, qword [r14 + 0x18] 	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40033b0	          0x4885c0	                           test rax, rax	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40033b3	            0x744b	                            je 0x4003400	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40033b5	           0xfb638	                   movzx edi, byte [rax]	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x40033b8	          0x40d0ef	                              shr dil, 1	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x40033bb	          0x83e707	                              and edi, 7	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x40033be	      0xe800000000	                          call 0x40033c3	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x40033c3	        0x48894500	                    mov qword [rbp], rax	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x40033c7	            0xeb37	                           jmp 0x4003400	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x40033c9	      0xbf00000000	                              mov edi, 0	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40033ce	      0xb907000000	                              mov ecx, 7	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40033d3	          0x4889c6	                            mov rsi, rax	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40033d6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40033d8	           0xf97c2	                                 seta dl	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40033db	           0xf92c0	                                 setb al	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40033de	            0x38c2	                              cmp dl, al	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40033e0	            0x751e	                           jne 0x4003400	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40033e2	        0x498b4618	            mov rax, qword [r14 + 0x18] 	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40033e6	          0x4885c0	                           test rax, rax	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40033e9	            0x7415	                            je 0x4003400	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40033eb	        0x488d7804	                      lea rdi, [rax + 4]	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x40033ef	      0xe800000000	                          call 0x40033f4	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x40033f4	          0x4889c7	                            mov rdi, rax	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x40033f7	      0xe800000000	                          call 0x40033fc	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x40033fc	        0x48894500	                    mov qword [rbp], rax	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x4003400	          0x83c301	                              add ebx, 1	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4003403	    0x3b1d00000000	            cmp ebx, dword [0x04003409] 	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4003409	     0xf8c2affffff	                            jl 0x4003339	       861	ref-filter.c	FUNCTION_34	FOR_1
0x400340f	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x4003414	          0x4989e8	                             mov r8, rbp	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x4003417	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x400341c	          0x4889d9	                            mov rcx, rbx	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x400341f	          0x4c89f2	                            mov rdx, r14	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x4003422	          0x4489ee	                           mov esi, r13d	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x4003425	          0x4c89ff	                            mov rdi, r15	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x4003428	      0xe887e2ffff	         call sym.grab_sub_body_contents	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x400342d	          0x4989e9	                             mov r9, rbp	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x4003430	          0x4989d8	                             mov r8, rbx	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x4003433	          0x4c89f1	                            mov rcx, r14	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x4003436	          0x4489ea	                           mov edx, r13d	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x4003439	          0x4c89fe	                            mov rsi, r15	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x400343c	      0xbf00000000	                              mov edi, 0	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x4003441	      0xe8a3f8ffff	                    call sym.grab_person	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x4003446	      0xbb00000000	                              mov ebx, 0	      1438	ref-filter.c	FUNCTION_56
0x400344b	      0xe93d020000	                           jmp 0x400368d	      1438	ref-filter.c	FUNCTION_56
0x4003450	      0xbb00000000	                              mov ebx, 0	       883	ref-filter.c	FUNCTION_35	FOR_1
0x4003455	          0x4863d3	                         movsxd rdx, ebx	       884	ref-filter.c	FUNCTION_35	FOR_1
0x4003458	        0x488d0452	                  lea rax, [rdx + rdx*2]	       884	ref-filter.c	FUNCTION_35	FOR_1
0x400345c	        0x48c1e005	                              shl rax, 5	       884	ref-filter.c	FUNCTION_35	FOR_1
0x4003460	    0x480305000000	             add rax, qword [0x04003467]	       884	ref-filter.c	FUNCTION_35	FOR_1
0x4003467	          0x488b00	                    mov rax, qword [rax]	       884	ref-filter.c	FUNCTION_35	FOR_1
0x400346a	          0x80382a	                    cmp byte [rax], 0x2a	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x400346d	           0xf94c1	                                 sete cl	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x4003470	          0x4138cc	                            cmp r12b, cl	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x4003473	     0xf858f010000	                           jne 0x4003608	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x4003479	        0x4183fd01	                             cmp r13d, 1	       889	ref-filter.c	FUNCTION_35	FOR_1	IF_2
0x400347d	        0x4883d8ff	             sbb rax, 0xffffffffffffffff	       889	ref-filter.c	FUNCTION_35	FOR_1	IF_2
0x4003481	        0x48c1e205	                              shl rdx, 5	       885	ref-filter.c	FUNCTION_35	FOR_1
0x4003485	        0x498d3417	                    lea rsi, [r15 + rdx]	       885	ref-filter.c	FUNCTION_35	FOR_1
0x4003489	      0x4889742418	             mov qword [rsp + 0x18], rsi	       885	ref-filter.c	FUNCTION_35	FOR_1
0x400348e	      0xbf00000000	                              mov edi, 0	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x4003493	      0xb905000000	                              mov ecx, 5	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x4003498	          0x4889c6	                            mov rsi, rax	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x400349b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x400349d	           0xf97c1	                                 seta cl	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x40034a0	           0xf92c2	                                 setb dl	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x40034a3	            0x38d1	                              cmp cl, dl	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x40034a5	            0x7525	                           jne 0x40034cc	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x40034a7	          0x4c89f7	                            mov rdi, r14	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x40034aa	      0xe800000000	                          call 0x40034af	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x40034af	          0x4889c7	                            mov rdi, rax	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x40034b2	      0xe800000000	                          call 0x40034b7	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x40034b7	          0x4889c7	                            mov rdi, rax	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x40034ba	      0xe800000000	                          call 0x40034bf	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x40034bf	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x40034c4	          0x488906	                    mov qword [rsi], rax	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x40034c7	      0xe93c010000	                           jmp 0x4003608	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x40034cc	      0xbf00000000	                              mov edi, 0	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x40034d1	      0xb90a000000	                            mov ecx, 0xa	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x40034d6	          0x4889c6	                            mov rsi, rax	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x40034d9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x40034db	           0xf97c1	                                 seta cl	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x40034de	           0xf92c2	                                 setb dl	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x40034e1	            0x38d1	                              cmp cl, dl	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x40034e3	            0x752c	                           jne 0x4003511	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x40034e5	        0x498b7e30	            mov rdi, qword [r14 + 0x30] 	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x40034e9	      0xe800000000	                          call 0x40034ee	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x40034ee	            0x89c6	                            mov esi, eax	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x40034f0	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x40034f5	        0x48897510	            mov qword [rbp + 0x10], rsi 	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x40034f9	      0xbf00000000	                              mov edi, 0	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x40034fe	      0xb800000000	                              mov eax, 0	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x4003503	      0xe800000000	                          call 0x4003508	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x4003508	        0x48894500	                    mov qword [rbp], rax	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x400350c	      0xe9f7000000	                           jmp 0x4003608	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x4003511	      0xbf00000000	                              mov edi, 0	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x4003516	      0xb907000000	                              mov ecx, 7	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x400351b	          0x4889c6	                            mov rsi, rax	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x400351e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x4003520	           0xf97c2	                                 seta dl	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x4003523	           0xf92c0	                                 setb al	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x4003526	            0x38c2	                              cmp dl, al	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x4003528	     0xf85da000000	                           jne 0x4003608	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x400352e	    0x48c744243000	               mov qword [rsp + 0x30], 0	       899	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x4003537	    0x48c744243800	               mov qword [rsp + 0x38], 0	       899	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x4003540	    0x48c744244000	               mov qword [rsp + 0x40], 0	       899	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x4003549	        0x498b6e30	            mov rbp, qword [r14 + 0x30] 	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x400354d	          0x4885ed	                           test rbp, rbp	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x4003550	     0xf858a010000	                           jne 0x40036e0	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x4003556	      0xe996000000	                           jmp 0x40035f1	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x400355b	        0x488b4500	                    mov rax, qword [rbp]	       901	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x400355f	        0x48890424	                    mov qword [rsp], rax	       901	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x4003563	        0x49396e30	            cmp qword [r14 + 0x30], rbp 	       902	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4003567	            0x7449	                            je 0x40035b2	       902	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4003569	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       141	strbuf.h	FUNCTION_96
0x400356e	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_96
0x4003571	            0x740b	                            je 0x400357e	       141	strbuf.h	FUNCTION_96
0x4003573	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_98	IF_1	CALL_1
0x4003577	      0x4839442438	            cmp qword [rsp + 0x38], rax 	       227	strbuf.h	FUNCTION_98	IF_1	CALL_1
0x400357c	            0x750f	                           jne 0x400358d	       227	strbuf.h	FUNCTION_98	IF_1	CALL_1
0x400357e	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_98	CALL_2
0x4003583	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       228	strbuf.h	FUNCTION_98	CALL_2
0x4003588	      0xe800000000	                          call 0x400358d	       228	strbuf.h	FUNCTION_98	CALL_2
0x400358d	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       229	strbuf.h	FUNCTION_98
0x4003592	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_98
0x4003596	      0x4889542438	             mov qword [rsp + 0x38], rdx	       229	strbuf.h	FUNCTION_98
0x400359b	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       229	strbuf.h	FUNCTION_98
0x40035a0	        0xc6040220	              mov byte [rdx + rax], 0x20	       229	strbuf.h	FUNCTION_98
0x40035a4	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       230	strbuf.h	FUNCTION_98
0x40035a9	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       230	strbuf.h	FUNCTION_98
0x40035ae	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_98
0x40035b2	        0x488b3c24	                    mov rdi, qword [rsp]	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x40035b6	        0x4883c704	                              add rdi, 4	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x40035ba	      0xe800000000	                          call 0x40035bf	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x40035bf	          0x4889c6	                            mov rsi, rax	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x40035c2	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_99	CALL_2
0x40035c9	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_99	CALL_2
0x40035cc	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_99	CALL_2
0x40035d1	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_99	CALL_2
0x40035d3	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_99	CALL_2
0x40035d6	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_99	CALL_2
0x40035da	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       279	strbuf.h	FUNCTION_99	CALL_2
0x40035df	      0xe800000000	                          call 0x40035e4	       279	strbuf.h	FUNCTION_99	CALL_2
0x40035e4	        0x488b6d08	                mov rbp, qword [rbp + 8]	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x40035e8	          0x4885ed	                           test rbp, rbp	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x40035eb	     0xf856affffff	                           jne 0x400355b	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x40035f1	      0xbe00000000	                              mov esi, 0	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x40035f6	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x40035fb	      0xe800000000	                          call 0x4003600	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x4003600	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x4003605	          0x488906	                    mov qword [rsi], rax	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x4003608	          0x83c301	                              add ebx, 1	       883	ref-filter.c	FUNCTION_35	FOR_1
0x400360b	    0x3b1d00000000	            cmp ebx, dword [0x04003611] 	       883	ref-filter.c	FUNCTION_35	FOR_1
0x4003611	     0xf8c3efeffff	                            jl 0x4003455	       883	ref-filter.c	FUNCTION_35	FOR_1
0x4003617	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x400361c	          0x4989e8	                             mov r8, rbp	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x400361f	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x4003624	          0x4889d9	                            mov rcx, rbx	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x4003627	          0x4c89f2	                            mov rdx, r14	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x400362a	          0x4489ee	                           mov esi, r13d	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x400362d	          0x4c89ff	                            mov rdi, r15	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x4003630	      0xe87fe0ffff	         call sym.grab_sub_body_contents	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x4003635	          0x4989e9	                             mov r9, rbp	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x4003638	          0x4989d8	                             mov r8, rbx	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x400363b	          0x4c89f1	                            mov rcx, r14	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x400363e	          0x4489ea	                           mov edx, r13d	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x4003641	          0x4c89fe	                            mov rsi, r15	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x4003644	      0xbf00000000	                              mov edi, 0	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x4003649	      0xe89bf6ffff	                    call sym.grab_person	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x400364e	          0x4989e9	                             mov r9, rbp	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x4003651	          0x4989d8	                             mov r8, rbx	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x4003654	          0x4c89f1	                            mov rcx, r14	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x4003657	          0x4489ea	                           mov edx, r13d	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x400365a	          0x4c89fe	                            mov rsi, r15	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x400365d	      0xbf00000000	                              mov edi, 0	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x4003662	      0xe882f6ffff	                    call sym.grab_person	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x4003667	      0xbb00000000	                              mov ebx, 0	      1438	ref-filter.c	FUNCTION_56
0x400366c	            0xeb1f	                           jmp 0x400368d	      1438	ref-filter.c	FUNCTION_56
0x400366e	        0x400fb6f6	                          movzx esi, sil	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x4003672	      0xbf00000000	                              mov edi, 0	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x4003677	      0xb800000000	                              mov eax, 0	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x400367c	      0xe800000000	                          call 0x4003681	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x4003681	      0xbb00000000	                              mov ebx, 0	      1438	ref-filter.c	FUNCTION_56
0x4003686	            0xeb05	                           jmp 0x400368d	      1438	ref-filter.c	FUNCTION_56
0x4003688	      0xbb00000000	                              mov ebx, 0	      1438	ref-filter.c	FUNCTION_56
0x400368d	      0x837c242400	               cmp dword [rsp + 0x24], 0	      1449	ref-filter.c	FUNCTION_56	IF_3
0x4003692	            0x750a	                           jne 0x400369e	      1449	ref-filter.c	FUNCTION_56	IF_3
0x4003694	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1450	ref-filter.c	FUNCTION_56	CALL_9
0x4003699	      0xe800000000	                          call 0x400369e	      1450	ref-filter.c	FUNCTION_56	CALL_9
0x400369e	            0x89d8	                            mov eax, ebx	      1452	ref-filter.c	FUNCTION_56
0x40036a0	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      1452	ref-filter.c	FUNCTION_56
0x40036a5	    0x644833342528	                xor rsi, qword fs:[0x28]	      1452	ref-filter.c	FUNCTION_56
0x40036ae	            0x7442	                            je 0x40036f2	      1452	ref-filter.c	FUNCTION_56
0x40036b0	            0xeb3b	                           jmp 0x40036ed	      1452	ref-filter.c	FUNCTION_56
0x40036b2	        0x410fb636	                   movzx esi, byte [r14]	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40036b6	          0x40d0ee	                              shr sil, 1	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40036b9	          0x83e607	                              and esi, 7	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40036bc	        0x4080fe03	                              cmp sil, 3	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40036c0	            0x7712	                            ja 0x40036d4	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40036c2	        0x4080fe02	                              cmp sil, 2	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40036c6	            0x73c0	                           jae 0x4003688	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40036c8	        0x4080fe01	                              cmp sil, 1	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40036cc	     0xf8445ffffff	                            je 0x4003617	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40036d2	            0xeb9a	                           jmp 0x400366e	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40036d4	        0x4080fe04	                              cmp sil, 4	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40036d8	     0xf843bfcffff	                            je 0x4003319	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40036de	            0xeb8e	                           jmp 0x400366e	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40036e0	        0x488b4500	                    mov rax, qword [rbp]	       901	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x40036e4	        0x48890424	                    mov qword [rsp], rax	       901	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x40036e8	      0xe9c5feffff	                           jmp 0x40035b2	       901	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x40036ed	      0xe800000000	                          call 0x40036f2	      1452	ref-filter.c	FUNCTION_56
0x40036f2	        0x4883c458	                           add rsp, 0x58	      1452	ref-filter.c	FUNCTION_56
0x40036f6	              0x5b	                                 pop rbx	      1452	ref-filter.c	FUNCTION_56
0x40036f7	              0x5d	                                 pop rbp	      1452	ref-filter.c	FUNCTION_56
0x40036f8	            0x415c	                                 pop r12	      1452	ref-filter.c	FUNCTION_56
0x40036fa	            0x415d	                                 pop r13	      1452	ref-filter.c	FUNCTION_56
0x40036fc	            0x415e	                                 pop r14	      1452	ref-filter.c	FUNCTION_56
0x40036fe	            0x415f	                                 pop r15	      1452	ref-filter.c	FUNCTION_56
0x4003700	              0xc3	                                     ret	      1452	ref-filter.c	FUNCTION_56
head_atom_parser	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,0:functions,0:CALL,1:ELSE,0	11
0x40002be	              0x53	                                push rbx	       375	ref-filter.c	FUNCTION_15
0x40002bf	          0x4889f3	                            mov rbx, rsi	       375	ref-filter.c	FUNCTION_15
0x40002c2	      0xb900000000	                              mov ecx, 0	       376	ref-filter.c	FUNCTION_15	CALL_1
0x40002c7	      0xba00000000	                              mov edx, 0	       376	ref-filter.c	FUNCTION_15	CALL_1
0x40002cc	      0xbe01000000	                              mov esi, 1	       376	ref-filter.c	FUNCTION_15	CALL_1
0x40002d1	      0xbf00000000	                              mov edi, 0	       376	ref-filter.c	FUNCTION_15	CALL_1
0x40002d6	      0xe800000000	                          call 0x40002db	       376	ref-filter.c	FUNCTION_15	CALL_1
0x40002db	        0x48894310	             mov qword [rbx + 0x10], rax	       376	ref-filter.c	FUNCTION_15	CALL_1
0x40002df	      0xb800000000	                              mov eax, 0	       378	ref-filter.c	FUNCTION_15
0x40002e4	              0x5b	                                 pop rbx	       378	ref-filter.c	FUNCTION_15
0x40002e5	              0xc3	                                     ret	       378	ref-filter.c	FUNCTION_15
grab_sub_body_contents	SWITCH,0:FOR,1:WHILE,0:DO,0:IF,11:functions,0:CALL,14:ELSE,6	310
0x40016b4	            0x4157	                                push r15	      1136	ref-filter.c	FUNCTION_45
0x40016b6	            0x4156	                                push r14	      1136	ref-filter.c	FUNCTION_45
0x40016b8	            0x4155	                                push r13	      1136	ref-filter.c	FUNCTION_45
0x40016ba	            0x4154	                                push r12	      1136	ref-filter.c	FUNCTION_45
0x40016bc	              0x55	                                push rbp	      1136	ref-filter.c	FUNCTION_45
0x40016bd	              0x53	                                push rbx	      1136	ref-filter.c	FUNCTION_45
0x40016be	    0x4881ec980000	                           sub rsp, 0x98	      1136	ref-filter.c	FUNCTION_45
0x40016c5	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      1136	ref-filter.c	FUNCTION_45
0x40016ca	      0x48894c2460	             mov qword [rsp + 0x60], rcx	      1136	ref-filter.c	FUNCTION_45
0x40016cf	    0x64488b042528	                mov rax, qword fs:[0x28]	      1136	ref-filter.c	FUNCTION_45
0x40016d8	    0x488984248800	             mov qword [rsp + 0x88], rax	      1136	ref-filter.c	FUNCTION_45
0x40016e0	            0x31c0	                            xor eax, eax	      1136	ref-filter.c	FUNCTION_45
0x40016e2	    0x833d00000000	               cmp dword [0x040016e9], 0	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x40016e9	     0xf8e83040000	                           jle 0x4001b72	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x40016ef	          0x4189f5	                           mov r13d, esi	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x40016f2	    0x48c744243800	               mov qword [rsp + 0x38], 0	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x40016fb	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x4001704	    0x41be00000000	                             mov r14d, 0	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x400170a	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x4001713	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x400171c	    0x48c744245800	               mov qword [rsp + 0x58], 0	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x4001725	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x400172e	    0x41bf00000000	                             mov r15d, 0	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x4001734	          0x4963ef	                        movsxd rbp, r15d	      1142	ref-filter.c	FUNCTION_45	FOR_1
0x4001737	      0x488d5c6d00	                  lea rbx, [rbp + rbp*2]	      1142	ref-filter.c	FUNCTION_45	FOR_1
0x400173c	        0x48c1e305	                              shl rbx, 5	      1142	ref-filter.c	FUNCTION_45	FOR_1
0x4001740	    0x48031d000000	             add rbx, qword [0x04001747]	      1142	ref-filter.c	FUNCTION_45	FOR_1
0x4001747	          0x4c8b23	                    mov r12, qword [rbx]	      1143	ref-filter.c	FUNCTION_45	FOR_1
0x400174a	          0x4585ed	                         test r13d, r13d	      1145	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x400174d	           0xf95c2	                                setne dl	      1145	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x4001750	      0x41803c242a	                    cmp byte [r12], 0x2a	      1145	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x4001755	           0xf94c0	                                 sete al	      1145	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x4001758	            0x38c2	                              cmp dl, al	      1145	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x400175a	     0xf85b6030000	                           jne 0x4001b16	      1145	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x4001760	        0x4183fd01	                             cmp r13d, 1	      1148	ref-filter.c	FUNCTION_45	FOR_1	IF_2
0x4001764	        0x4983dcff	             sbb r12, 0xffffffffffffffff	      1148	ref-filter.c	FUNCTION_45	FOR_1	IF_2
0x4001768	      0xbf00000000	                              mov edi, 0	      1149	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_1
0x400176d	      0xb908000000	                              mov ecx, 8	      1149	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_1
0x4001772	          0x4c89e6	                            mov rsi, r12	      1149	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_1
0x4001775	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1149	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_1
0x4001777	           0xf97c2	                                 seta dl	      1149	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_1
0x400177a	           0xf92c0	                                 setb al	      1149	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_1
0x400177d	            0x38c2	                              cmp dl, al	      1149	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_1
0x400177f	            0x743f	                            je 0x40017c0	      1149	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_1
0x4001781	      0xbf00000000	                              mov edi, 0	      1150	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x4001786	      0xb905000000	                              mov ecx, 5	      1150	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x400178b	          0x4c89e6	                            mov rsi, r12	      1150	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x400178e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1150	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x4001790	           0xf97c2	                                 seta dl	      1150	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x4001793	           0xf92c0	                                 setb al	      1150	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x4001796	            0x38c2	                              cmp dl, al	      1149	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_1
0x4001798	            0x7426	                            je 0x40017c0	      1149	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_1
0x400179a	      0xbe00000000	                              mov esi, 0	      1151	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_3
0x400179f	          0x4c89e7	                            mov rdi, r12	      1151	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_3
0x40017a2	      0xe800000000	                          call 0x40017a7	      1151	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_3
0x40017a7	            0x85c0	                           test eax, eax	      1150	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x40017a9	            0x7515	                           jne 0x40017c0	      1150	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x40017ab	      0xbe00000000	                              mov esi, 0	      1152	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_4
0x40017b0	          0x4c89e7	                            mov rdi, r12	      1152	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_4
0x40017b3	      0xe800000000	                          call 0x40017b8	      1152	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_4
0x40017b8	            0x85c0	                           test eax, eax	      1151	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_3
0x40017ba	     0xf8456030000	                            je 0x4001b16	      1151	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_3
0x40017c0	          0x4d85f6	                           test r14, r14	      1154	ref-filter.c	FUNCTION_45	FOR_1	IF_4
0x40017c3	     0xf8527010000	                           jne 0x40018f0	      1154	ref-filter.c	FUNCTION_45	FOR_1	IF_4
0x40017c9	            0xeb16	                           jmp 0x40017e1	      1154	ref-filter.c	FUNCTION_45	FOR_1	IF_4
0x40017cb	      0xbe0a000000	                            mov esi, 0xa	      1075	ref-filter.c	FUNCTION_43	WHILE_1
0x40017d0	          0x4889c7	                            mov rdi, rax	      1075	ref-filter.c	FUNCTION_43	WHILE_1
0x40017d3	      0xe800000000	                          call 0x40017d8	      1075	ref-filter.c	FUNCTION_43	WHILE_1
0x40017d8	          0x803801	                       cmp byte [rax], 1	      1077	ref-filter.c	FUNCTION_43	WHILE_1	IF_1
0x40017db	        0x4883d8ff	             sbb rax, 0xffffffffffffffff	      1077	ref-filter.c	FUNCTION_43	WHILE_1	IF_1
0x40017df	            0xeb05	                           jmp 0x40017e6	      1077	ref-filter.c	FUNCTION_43	WHILE_1	IF_1
0x40017e1	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      1077	ref-filter.c	FUNCTION_43	WHILE_1	IF_1
0x40017e6	           0xfb610	                   movzx edx, byte [rax]	      1074	ref-filter.c	FUNCTION_43	WHILE_1
0x40017e9	            0x84d2	                             test dl, dl	      1074	ref-filter.c	FUNCTION_43	WHILE_1
0x40017eb	            0x7405	                            je 0x40017f2	      1074	ref-filter.c	FUNCTION_43	WHILE_1
0x40017ed	          0x80fa0a	                             cmp dl, 0xa	      1074	ref-filter.c	FUNCTION_43	WHILE_1
0x40017f0	            0x75d9	                           jne 0x40017cb	      1074	ref-filter.c	FUNCTION_43	WHILE_1
0x40017f2	          0x80fa0a	                             cmp dl, 0xa	      1081	ref-filter.c	FUNCTION_43	WHILE_2
0x40017f5	            0x750f	                           jne 0x4001806	      1081	ref-filter.c	FUNCTION_43	WHILE_2
0x40017f7	          0x4989c6	                            mov r14, rax	      1081	ref-filter.c	FUNCTION_43	WHILE_2
0x40017fa	        0x4983c601	                              add r14, 1	      1082	ref-filter.c	FUNCTION_43	WHILE_2
0x40017fe	        0x41803e0a	                     cmp byte [r14], 0xa	      1081	ref-filter.c	FUNCTION_43	WHILE_2
0x4001802	            0x74f6	                            je 0x40017fa	      1081	ref-filter.c	FUNCTION_43	WHILE_2
0x4001804	            0xeb03	                           jmp 0x4001809	      1081	ref-filter.c	FUNCTION_43	WHILE_2
0x4001806	          0x4989c6	                            mov r14, rax	      1081	ref-filter.c	FUNCTION_43	WHILE_2
0x4001809	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1085	ref-filter.c	FUNCTION_43	CALL_2
0x4001810	          0x4c89f7	                            mov rdi, r14	      1085	ref-filter.c	FUNCTION_43	CALL_2
0x4001813	      0xb800000000	                              mov eax, 0	      1085	ref-filter.c	FUNCTION_43	CALL_2
0x4001818	            0xf2ae	              repne scasb al, byte [rdi]	      1085	ref-filter.c	FUNCTION_43	CALL_2
0x400181a	          0x48f7d1	                                 not rcx	      1085	ref-filter.c	FUNCTION_43	CALL_2
0x400181d	        0x488d71ff	                      lea rsi, [rcx - 1]	      1085	ref-filter.c	FUNCTION_43	CALL_2
0x4001821	          0x4c89f7	                            mov rdi, r14	      1085	ref-filter.c	FUNCTION_43	CALL_2
0x4001824	      0xe800000000	                          call 0x4001829	      1085	ref-filter.c	FUNCTION_43	CALL_2
0x4001829	        0x498d3c06	                    lea rdi, [r14 + rax]	      1085	ref-filter.c	FUNCTION_43	CALL_2
0x400182d	      0x48897c2438	             mov qword [rsp + 0x38], rdi	      1085	ref-filter.c	FUNCTION_43	CALL_2
0x4001832	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1086	ref-filter.c	FUNCTION_43	CALL_3
0x4001839	      0xb800000000	                              mov eax, 0	      1086	ref-filter.c	FUNCTION_43	CALL_3
0x400183e	            0xf2ae	              repne scasb al, byte [rdi]	      1086	ref-filter.c	FUNCTION_43	CALL_3
0x4001840	          0x48f7d1	                                 not rcx	      1086	ref-filter.c	FUNCTION_43	CALL_3
0x4001843	        0x488d41ff	                      lea rax, [rcx - 1]	      1086	ref-filter.c	FUNCTION_43	CALL_3
0x4001847	      0x4889442450	             mov qword [rsp + 0x50], rax	      1086	ref-filter.c	FUNCTION_43	CALL_3
0x400184c	          0x4c89f0	                            mov rax, r14	      1086	ref-filter.c	FUNCTION_43	CALL_3
0x400184f	            0xeb1a	                           jmp 0x400186b	      1086	ref-filter.c	FUNCTION_43	CALL_3
0x4001851	      0xbe0a000000	                            mov esi, 0xa	      1092	ref-filter.c	FUNCTION_43	WHILE_3
0x4001856	          0x4889c7	                            mov rdi, rax	      1092	ref-filter.c	FUNCTION_43	WHILE_3
0x4001859	      0xe800000000	                          call 0x400185e	      1092	ref-filter.c	FUNCTION_43	WHILE_3
0x400185e	          0x803800	                       cmp byte [rax], 0	      1093	ref-filter.c	FUNCTION_43	WHILE_3	IF_2
0x4001861	     0xf84c2020000	                            je 0x4001b29	      1093	ref-filter.c	FUNCTION_43	WHILE_3	IF_2
0x4001867	        0x4883c001	                              add rax, 1	      1094	ref-filter.c	FUNCTION_43	WHILE_3	IF_2
0x400186b	      0x4839442438	            cmp qword [rsp + 0x38], rax 	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x4001870	            0x760c	                           jbe 0x400187e	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x4001872	           0xfb610	                   movzx edx, byte [rax]	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x4001875	          0x80fa0a	                             cmp dl, 0xa	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x4001878	            0x7404	                            je 0x400187e	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x400187a	            0x84d2	                             test dl, dl	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x400187c	            0x75d3	                           jne 0x4001851	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x400187e	          0x4889c7	                            mov rdi, rax	      1099	ref-filter.c	FUNCTION_43	IF_3
0x4001881	          0x4c29f7	                            sub rdi, r14	      1099	ref-filter.c	FUNCTION_43	IF_3
0x4001884	      0x48897c2448	             mov qword [rsp + 0x48], rdi	      1099	ref-filter.c	FUNCTION_43	IF_3
0x4001889	            0x7411	                            je 0x400189c	      1099	ref-filter.c	FUNCTION_43	IF_3
0x400188b	        0x488d57ff	                      lea rdx, [rdi - 1]	      1099	ref-filter.c	FUNCTION_43	IF_3
0x400188f	        0x8078ff0a	                 cmp byte [rax - 1], 0xa	      1099	ref-filter.c	FUNCTION_43	IF_3
0x4001893	        0x480f45d7	                         cmovne rdx, rdi	      1099	ref-filter.c	FUNCTION_43	IF_3
0x4001897	      0x4889542448	             mov qword [rsp + 0x48], rdx	      1099	ref-filter.c	FUNCTION_43	IF_3
0x400189c	          0x80380a	                     cmp byte [rax], 0xa	      1103	ref-filter.c	FUNCTION_43	WHILE_4
0x400189f	            0x7510	                           jne 0x40018b1	      1103	ref-filter.c	FUNCTION_43	WHILE_4
0x40018a1	        0x4883c001	                              add rax, 1	      1104	ref-filter.c	FUNCTION_43	WHILE_4
0x40018a5	          0x80380a	                     cmp byte [rax], 0xa	      1103	ref-filter.c	FUNCTION_43	WHILE_4
0x40018a8	            0x74f7	                            je 0x40018a1	      1103	ref-filter.c	FUNCTION_43	WHILE_4
0x40018aa	      0x4889442430	             mov qword [rsp + 0x30], rax	      1103	ref-filter.c	FUNCTION_43	WHILE_4
0x40018af	            0xeb11	                           jmp 0x40018c2	      1103	ref-filter.c	FUNCTION_43	WHILE_4
0x40018b1	      0x4889442430	             mov qword [rsp + 0x30], rax	      1103	ref-filter.c	FUNCTION_43	WHILE_4
0x40018b6	            0xeb0a	                           jmp 0x40018c2	      1103	ref-filter.c	FUNCTION_43	WHILE_4
0x40018b8	      0x4889542448	             mov qword [rsp + 0x48], rdx	      1099	ref-filter.c	FUNCTION_43	IF_3
0x40018bd	      0x4889442430	             mov qword [rsp + 0x30], rax	      1092	ref-filter.c	FUNCTION_43	WHILE_3
0x40018c2	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1106	ref-filter.c	FUNCTION_43	CALL_4
0x40018c9	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1106	ref-filter.c	FUNCTION_43	CALL_4
0x40018ce	      0xb800000000	                              mov eax, 0	      1106	ref-filter.c	FUNCTION_43	CALL_4
0x40018d3	            0xf2ae	              repne scasb al, byte [rdi]	      1106	ref-filter.c	FUNCTION_43	CALL_4
0x40018d5	          0x48f7d1	                                 not rcx	      1106	ref-filter.c	FUNCTION_43	CALL_4
0x40018d8	        0x488d41ff	                      lea rax, [rcx - 1]	      1106	ref-filter.c	FUNCTION_43	CALL_4
0x40018dc	      0x4889442440	             mov qword [rsp + 0x40], rax	      1106	ref-filter.c	FUNCTION_43	CALL_4
0x40018e1	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1107	ref-filter.c	FUNCTION_43
0x40018e6	      0x482b442430	             sub rax, qword [rsp + 0x30]	      1107	ref-filter.c	FUNCTION_43
0x40018eb	      0x4889442458	             mov qword [rsp + 0x58], rax	      1107	ref-filter.c	FUNCTION_43
0x40018f0	        0x48c1e505	                              shl rbp, 5	      1144	ref-filter.c	FUNCTION_45	FOR_1
0x40018f4	      0x48036c2410	             add rbp, qword [rsp + 0x10]	      1144	ref-filter.c	FUNCTION_45	FOR_1
0x40018f9	      0x48896c2408	                mov qword [rsp + 8], rbp	      1144	ref-filter.c	FUNCTION_45	FOR_1
0x40018fe	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      1160	ref-filter.c	FUNCTION_45	FOR_1	IF_5
0x4001901	          0x83f805	                              cmp eax, 5	      1160	ref-filter.c	FUNCTION_45	FOR_1	IF_5
0x4001904	            0x7545	                           jne 0x400194b	      1160	ref-filter.c	FUNCTION_45	FOR_1	IF_5
0x4001906	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	       959	ref-filter.c	FUNCTION_40	CALL_1
0x400190b	          0x4889de	                            mov rsi, rbx	       959	ref-filter.c	FUNCTION_40	CALL_1
0x400190e	          0x4c89f7	                            mov rdi, r14	       959	ref-filter.c	FUNCTION_40	CALL_1
0x4001911	      0xe800000000	                          call 0x4001916	       959	ref-filter.c	FUNCTION_40	CALL_1
0x4001916	          0x4885db	                           test rbx, rbx	       962	ref-filter.c	FUNCTION_40	FOR_1
0x4001919	            0x7423	                            je 0x400193e	       962	ref-filter.c	FUNCTION_40	FOR_1
0x400191b	      0xb900000000	                              mov ecx, 0	       962	ref-filter.c	FUNCTION_40	FOR_1
0x4001920	      0xba00000000	                              mov edx, 0	       962	ref-filter.c	FUNCTION_40	FOR_1
0x4001925	          0x4889de	                            mov rsi, rbx	       962	ref-filter.c	FUNCTION_40	FOR_1
0x4001928	          0x4801c2	                            add rdx, rax	       963	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x400192b	          0x803a0a	                     cmp byte [rdx], 0xa	       963	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x400192e	            0x7503	                           jne 0x4001933	       963	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x4001930	          0xc60220	                    mov byte [rdx], 0x20	       964	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x4001933	          0x83c101	                              add ecx, 1	       962	ref-filter.c	FUNCTION_40	FOR_1
0x4001936	          0x4863d1	                         movsxd rdx, ecx	       962	ref-filter.c	FUNCTION_40	FOR_1
0x4001939	          0x4839f2	                            cmp rdx, rsi	       962	ref-filter.c	FUNCTION_40	FOR_1
0x400193c	            0x72ea	                            jb 0x4001928	       962	ref-filter.c	FUNCTION_40	FOR_1
0x400193e	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1161	ref-filter.c	FUNCTION_45	FOR_1	CALL_6
0x4001943	          0x488901	                    mov qword [rcx], rax	      1161	ref-filter.c	FUNCTION_45	FOR_1	CALL_6
0x4001946	      0xe9cb010000	                           jmp 0x4001b16	      1161	ref-filter.c	FUNCTION_45	FOR_1	CALL_6
0x400194b	          0x83f802	                              cmp eax, 2	      1162	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x400194e	            0x751c	                           jne 0x400196c	      1162	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x4001950	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      1163	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x4001955	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1163	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x400195a	      0xe800000000	                          call 0x400195f	      1163	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x400195f	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1163	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x4001964	          0x488901	                    mov qword [rcx], rax	      1163	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x4001967	      0xe9aa010000	                           jmp 0x4001b16	      1163	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x400196c	          0x83f801	                              cmp eax, 1	      1164	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x400196f	            0x751c	                           jne 0x400198d	      1164	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x4001971	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	      1165	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x4001976	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1165	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x400197b	      0xe800000000	                          call 0x4001980	      1165	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x4001980	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1165	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x4001985	          0x488907	                    mov qword [rdi], rax	      1165	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x4001988	      0xe989010000	                           jmp 0x4001b16	      1165	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x400198d	          0x83f804	                              cmp eax, 4	      1166	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x4001990	            0x751c	                           jne 0x40019ae	      1166	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x4001992	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	      1167	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x4001997	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1167	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x400199c	      0xe800000000	                          call 0x40019a1	      1167	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x40019a1	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1167	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x40019a6	          0x488907	                    mov qword [rdi], rax	      1167	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x40019a9	      0xe968010000	                           jmp 0x4001b16	      1167	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x40019ae	          0x83f803	                              cmp eax, 3	      1168	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x40019b1	     0xf85fe000000	                           jne 0x4001ab5	      1168	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x40019b7	    0x48c744247000	               mov qword [rsp + 0x70], 0	      1169	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x40019c0	    0x48c744247800	               mov qword [rsp + 0x78], 0	      1169	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x40019c9	    0x48c784248000	               mov qword [rsp + 0x80], 0	      1169	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x40019d5	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      1170	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x40019da	      0x482b442450	             sub rax, qword [rsp + 0x50]	      1170	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x40019df	      0x4803442430	             add rax, qword [rsp + 0x30]	      1170	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x40019e4	      0x4889442428	             mov qword [rsp + 0x28], rax	      1170	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x40019e9	          0x8b4b28	            mov ecx, dword [rbx + 0x28] 	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x40019ec	        0x894c2468	             mov dword [rsp + 0x68], ecx	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x40019f0	      0x4c89742418	             mov qword [rsp + 0x18], r14	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x40019f5	          0x4889c7	                            mov rdi, rax	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x40019f8	          0x4c29f7	                            sub rdi, r14	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x40019fb	      0x48897c2420	             mov qword [rsp + 0x20], rdi	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x4001a00	          0x4c39f0	                            cmp rax, r14	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x4001a03	     0xf8693000000	                           jbe 0x4001a9c	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x4001a09	            0x85c9	                           test ecx, ecx	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x4001a0b	            0x7f20	                            jg 0x4001a2d	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x4001a0d	      0xe98a000000	                           jmp 0x4001a9c	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x4001a12	          0x4585e4	                         test r12d, r12d	      1123	ref-filter.c	FUNCTION_44	FOR_1	IF_1
0x4001a15	            0x7424	                            je 0x4001a3b	      1123	ref-filter.c	FUNCTION_44	FOR_1	IF_1
0x4001a17	      0xba05000000	                              mov edx, 5	       279	strbuf.h	FUNCTION_99	CALL_2
0x4001a1c	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_99	CALL_2
0x4001a21	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       279	strbuf.h	FUNCTION_99	CALL_2
0x4001a26	      0xe800000000	                          call 0x4001a2b	       279	strbuf.h	FUNCTION_99	CALL_2
0x4001a2b	            0xeb0e	                           jmp 0x4001a3b	       279	strbuf.h	FUNCTION_99	CALL_2
0x4001a2d	          0x4c89f3	                            mov rbx, r14	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x4001a30	    0x41bc00000000	                             mov r12d, 0	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x4001a36	      0x44897c246c	            mov dword [rsp + 0x6c], r15d	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x4001a3b	          0x4889d8	                            mov rax, rbx	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x4001a3e	      0x482b442418	             sub rax, qword [rsp + 0x18]	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x4001a43	      0x4c8b7c2420	            mov r15, qword [rsp + 0x20] 	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x4001a48	          0x4929c7	                            sub r15, rax	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x4001a4b	          0x4c89fa	                            mov rdx, r15	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x4001a4e	      0xbe0a000000	                            mov esi, 0xa	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x4001a53	          0x4889df	                            mov rdi, rbx	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x4001a56	      0xe800000000	                          call 0x4001a5b	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x4001a5b	          0x4889c5	                            mov rbp, rax	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x4001a5e	          0x4885c0	                           test rax, rax	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x4001a61	     0xf84d9000000	                            je 0x4001b40	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x4001a67	          0x4889c2	                            mov rdx, rax	      1127	ref-filter.c	FUNCTION_44	FOR_1	CALL_3
0x4001a6a	          0x4829da	                            sub rdx, rbx	      1127	ref-filter.c	FUNCTION_44	FOR_1	CALL_3
0x4001a6d	          0x4889de	                            mov rsi, rbx	      1127	ref-filter.c	FUNCTION_44	FOR_1	CALL_3
0x4001a70	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      1127	ref-filter.c	FUNCTION_44	FOR_1	CALL_3
0x4001a75	      0xe800000000	                          call 0x4001a7a	      1127	ref-filter.c	FUNCTION_44	FOR_1	CALL_3
0x4001a7a	        0x488d5d01	                      lea rbx, [rbp + 1]	      1130	ref-filter.c	FUNCTION_44	FOR_1
0x4001a7e	        0x4183c401	                             add r12d, 1	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x4001a82	      0x48395c2428	            cmp qword [rsp + 0x28], rbx 	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x4001a87	            0x760e	                           jbe 0x4001a97	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x4001a89	      0x4439642468	           cmp dword [rsp + 0x68], r12d 	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x4001a8e	            0x7f82	                            jg 0x4001a12	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x4001a90	      0x448b7c246c	           mov r15d, dword [rsp + 0x6c] 	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x4001a95	            0xeb05	                           jmp 0x4001a9c	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x4001a97	      0x448b7c246c	           mov r15d, dword [rsp + 0x6c] 	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x4001a9c	      0xbe00000000	                              mov esi, 0	      1174	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_11
0x4001aa1	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      1174	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_11
0x4001aa6	      0xe800000000	                          call 0x4001aab	      1174	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_11
0x4001aab	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1174	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_11
0x4001ab0	          0x488901	                    mov qword [rcx], rax	      1174	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_11
0x4001ab3	            0xeb61	                           jmp 0x4001b16	      1174	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_11
0x4001ab5	          0x83f806	                              cmp eax, 6	      1175	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10
0x4001ab8	            0x7548	                           jne 0x4001b02	      1175	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10
0x4001aba	    0x48c744247000	               mov qword [rsp + 0x70], 0	      1176	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10
0x4001ac3	    0x48c744247800	               mov qword [rsp + 0x78], 0	      1176	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10
0x4001acc	    0x48c784248000	               mov qword [rsp + 0x80], 0	      1176	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10
0x4001ad8	        0x488d5314	                   lea rdx, [rbx + 0x14]	      1179	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_12
0x4001adc	          0x4c89f6	                            mov rsi, r14	      1179	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_12
0x4001adf	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      1179	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_12
0x4001ae4	      0xe800000000	                          call 0x4001ae9	      1179	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_12
0x4001ae9	      0xbe00000000	                              mov esi, 0	      1181	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_13
0x4001aee	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      1181	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_13
0x4001af3	      0xe800000000	                          call 0x4001af8	      1181	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_13
0x4001af8	      0x488b742408	                mov rsi, qword [rsp + 8]	      1181	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_13
0x4001afd	          0x488906	                    mov qword [rsi], rax	      1181	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_13
0x4001b00	            0xeb14	                           jmp 0x4001b16	      1181	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_13
0x4001b02	            0x85c0	                           test eax, eax	      1182	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x4001b04	            0x7510	                           jne 0x4001b16	      1182	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x4001b06	          0x4c89f7	                            mov rdi, r14	      1183	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x4001b09	      0xe800000000	                          call 0x4001b0e	      1183	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x4001b0e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1183	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x4001b13	          0x488907	                    mov qword [rdi], rax	      1183	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x4001b16	        0x4183c701	                             add r15d, 1	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x4001b1a	    0x44393d000000	           cmp dword [0x04001b21], r15d 	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x4001b21	     0xf8f0dfcffff	                            jg 0x4001734	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x4001b27	            0xeb49	                           jmp 0x4001b72	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x4001b29	          0x4889c1	                            mov rcx, rax	      1099	ref-filter.c	FUNCTION_43	IF_3
0x4001b2c	          0x4c29f1	                            sub rcx, r14	      1099	ref-filter.c	FUNCTION_43	IF_3
0x4001b2f	      0x48894c2448	             mov qword [rsp + 0x48], rcx	      1099	ref-filter.c	FUNCTION_43	IF_3
0x4001b34	            0x7524	                           jne 0x4001b5a	      1099	ref-filter.c	FUNCTION_43	IF_3
0x4001b36	      0x4889442430	             mov qword [rsp + 0x30], rax	      1092	ref-filter.c	FUNCTION_43	WHILE_3
0x4001b3b	      0xe982fdffff	                           jmp 0x40018c2	      1092	ref-filter.c	FUNCTION_43	WHILE_3
0x4001b40	          0x4c89fa	                            mov rdx, r15	      1092	ref-filter.c	FUNCTION_43	WHILE_3
0x4001b43	      0x448b7c246c	           mov r15d, dword [rsp + 0x6c] 	      1092	ref-filter.c	FUNCTION_43	WHILE_3
0x4001b48	          0x4889de	                            mov rsi, rbx	      1127	ref-filter.c	FUNCTION_44	FOR_1	CALL_3
0x4001b4b	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      1127	ref-filter.c	FUNCTION_44	FOR_1	CALL_3
0x4001b50	      0xe800000000	                          call 0x4001b55	      1127	ref-filter.c	FUNCTION_44	FOR_1	CALL_3
0x4001b55	      0xe942ffffff	                           jmp 0x4001a9c	      1127	ref-filter.c	FUNCTION_44	FOR_1	CALL_3
0x4001b5a	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      1099	ref-filter.c	FUNCTION_43	IF_3
0x4001b5f	        0x488d56ff	                      lea rdx, [rsi - 1]	      1099	ref-filter.c	FUNCTION_43	IF_3
0x4001b63	        0x8078ff0a	                 cmp byte [rax - 1], 0xa	      1099	ref-filter.c	FUNCTION_43	IF_3
0x4001b67	     0xf852ffdffff	                           jne 0x400189c	      1099	ref-filter.c	FUNCTION_43	IF_3
0x4001b6d	      0xe946fdffff	                           jmp 0x40018b8	      1099	ref-filter.c	FUNCTION_43	IF_3
0x4001b72	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      1185	ref-filter.c	FUNCTION_45
0x4001b7a	    0x644833042528	                xor rax, qword fs:[0x28]	      1185	ref-filter.c	FUNCTION_45
0x4001b83	            0x7405	                            je 0x4001b8a	      1185	ref-filter.c	FUNCTION_45
0x4001b85	      0xe800000000	                          call 0x4001b8a	      1185	ref-filter.c	FUNCTION_45
0x4001b8a	    0x4881c4980000	                           add rsp, 0x98	      1185	ref-filter.c	FUNCTION_45
0x4001b91	              0x5b	                                 pop rbx	      1185	ref-filter.c	FUNCTION_45
0x4001b92	              0x5d	                                 pop rbp	      1185	ref-filter.c	FUNCTION_45
0x4001b93	            0x415c	                                 pop r12	      1185	ref-filter.c	FUNCTION_45
0x4001b95	            0x415d	                                 pop r13	      1185	ref-filter.c	FUNCTION_45
0x4001b97	            0x415e	                                 pop r14	      1185	ref-filter.c	FUNCTION_45
0x4001b99	            0x415f	                                 pop r15	      1185	ref-filter.c	FUNCTION_45
0x4001b9b	              0xc3	                                     ret	      1185	ref-filter.c	FUNCTION_45
end_atom_handler	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,2:functions,0:CALL,7:ELSE,0	66
0x4001cac	            0x4154	                                push r12	       717	ref-filter.c	FUNCTION_28
0x4001cae	              0x55	                                push rbp	       717	ref-filter.c	FUNCTION_28
0x4001caf	              0x53	                                push rbx	       717	ref-filter.c	FUNCTION_28
0x4001cb0	        0x4883ec40	                           sub rsp, 0x40	       717	ref-filter.c	FUNCTION_28
0x4001cb4	    0x64488b042528	                mov rax, qword fs:[0x28]	       717	ref-filter.c	FUNCTION_28
0x4001cbd	      0x4889442438	             mov qword [rsp + 0x38], rax	       717	ref-filter.c	FUNCTION_28
0x4001cc2	            0x31c0	                            xor eax, eax	       717	ref-filter.c	FUNCTION_28
0x4001cc4	        0x488b4608	                mov rax, qword [rsi + 8]	       718	ref-filter.c	FUNCTION_28
0x4001cc8	    0x48c704240000	                      mov qword [rsp], 0	       719	ref-filter.c	FUNCTION_28
0x4001cd0	    0x48c744240800	                  mov qword [rsp + 8], 0	       719	ref-filter.c	FUNCTION_28
0x4001cd9	    0x48c744241000	               mov qword [rsp + 0x10], 0	       719	ref-filter.c	FUNCTION_28
0x4001ce2	        0x488b4020	            mov rax, qword [rax + 0x20] 	       721	ref-filter.c	FUNCTION_28	IF_1
0x4001ce6	          0x4885c0	                           test rax, rax	       721	ref-filter.c	FUNCTION_28	IF_1
0x4001ce9	            0x7531	                           jne 0x4001d1c	       721	ref-filter.c	FUNCTION_28	IF_1
0x4001ceb	          0x4889d5	                            mov rbp, rdx	       721	ref-filter.c	FUNCTION_28	IF_1
0x4001cee	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4001cf3	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4001cf8	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4001cfd	      0xe800000000	                          call 0x4001d02	        54	gettext.h	FUNCTION_93
0x4001d02	          0x4889c2	                            mov rdx, rax	       722	ref-filter.c	FUNCTION_28	CALL_2
0x4001d05	      0xbeffffffff	                     mov esi, 0xffffffff	       722	ref-filter.c	FUNCTION_28	CALL_2
0x4001d0a	          0x4889ef	                            mov rdi, rbp	       722	ref-filter.c	FUNCTION_28	CALL_2
0x4001d0d	      0xb800000000	                              mov eax, 0	       722	ref-filter.c	FUNCTION_28	CALL_2
0x4001d12	      0xe83ee6ffff	                call sym.strbuf_addf_ret	       722	ref-filter.c	FUNCTION_28	CALL_2
0x4001d17	      0xe987000000	                           jmp 0x4001da3	       722	ref-filter.c	FUNCTION_28	CALL_2
0x4001d1c	          0x4889f3	                            mov rbx, rsi	       722	ref-filter.c	FUNCTION_28	CALL_2
0x4001d1f	        0x488d6e08	                      lea rbp, [rsi + 8]	       723	ref-filter.c	FUNCTION_28	CALL_3
0x4001d23	          0x4889ef	                            mov rdi, rbp	       723	ref-filter.c	FUNCTION_28	CALL_3
0x4001d26	            0xffd0	                                call rax	       723	ref-filter.c	FUNCTION_28	CALL_3
0x4001d28	        0x4c8b6308	                mov r12, qword [rbx + 8]	       726	ref-filter.c	FUNCTION_28
0x4001d2c	        0x498b0424	                    mov rax, qword [r12]	       733	ref-filter.c	FUNCTION_28	IF_2
0x4001d30	        0x48833800	                      cmp qword [rax], 0	       733	ref-filter.c	FUNCTION_28	IF_2
0x4001d34	            0x7558	                           jne 0x4001d8e	       733	ref-filter.c	FUNCTION_28	IF_2
0x4001d36	      0x498b742418	            mov rsi, qword [r12 + 0x18] 	       734	ref-filter.c	FUNCTION_28	IF_2	CALL_4
0x4001d3b	            0x8b13	                    mov edx, dword [rbx]	       734	ref-filter.c	FUNCTION_28	IF_2	CALL_4
0x4001d3d	          0x4889e7	                            mov rdi, rsp	       734	ref-filter.c	FUNCTION_28	IF_2	CALL_4
0x4001d40	      0xe8fdf4ffff	               call sym.quote_formatting	       734	ref-filter.c	FUNCTION_28	IF_2	CALL_4
0x4001d45	      0x498b742408	                mov rsi, qword [r12 + 8]	        53	string3.h	FUNCTION_133	CALL_3
0x4001d4a	      0x4889742420	             mov qword [rsp + 0x20], rsi	        53	string3.h	FUNCTION_133	CALL_3
0x4001d4f	      0x498b4c2410	            mov rcx, qword [r12 + 0x10] 	        53	string3.h	FUNCTION_133	CALL_3
0x4001d54	      0x48894c2428	             mov qword [rsp + 0x28], rcx	        53	string3.h	FUNCTION_133	CALL_3
0x4001d59	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	        53	string3.h	FUNCTION_133	CALL_3
0x4001d5e	      0x4889542430	             mov qword [rsp + 0x30], rdx	        53	string3.h	FUNCTION_133	CALL_3
0x4001d63	        0x488b3c24	                    mov rdi, qword [rsp]	        53	string3.h	FUNCTION_133	CALL_3
0x4001d67	      0x49897c2408	                mov qword [r12 + 8], rdi	        53	string3.h	FUNCTION_133	CALL_3
0x4001d6c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        53	string3.h	FUNCTION_133	CALL_3
0x4001d71	      0x49897c2410	             mov qword [r12 + 0x10], rdi	        53	string3.h	FUNCTION_133	CALL_3
0x4001d76	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_133	CALL_3
0x4001d7b	      0x49897c2418	             mov qword [r12 + 0x18], rdi	        53	string3.h	FUNCTION_133	CALL_3
0x4001d80	        0x48893424	                    mov qword [rsp], rsi	        53	string3.h	FUNCTION_133	CALL_3
0x4001d84	      0x48894c2408	                mov qword [rsp + 8], rcx	        53	string3.h	FUNCTION_133	CALL_3
0x4001d89	      0x4889542410	             mov qword [rsp + 0x10], rdx	        53	string3.h	FUNCTION_133	CALL_3
0x4001d8e	          0x4889e7	                            mov rdi, rsp	       737	ref-filter.c	FUNCTION_28	CALL_6
0x4001d91	      0xe800000000	                          call 0x4001d96	       737	ref-filter.c	FUNCTION_28	CALL_6
0x4001d96	          0x4889ef	                            mov rdi, rbp	       738	ref-filter.c	FUNCTION_28	CALL_7
0x4001d99	      0xe8c1f2ffff	              call sym.pop_stack_element	       738	ref-filter.c	FUNCTION_28	CALL_7
0x4001d9e	      0xb800000000	                              mov eax, 0	       739	ref-filter.c	FUNCTION_28
0x4001da3	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       740	ref-filter.c	FUNCTION_28
0x4001da8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       740	ref-filter.c	FUNCTION_28
0x4001db1	            0x7405	                            je 0x4001db8	       740	ref-filter.c	FUNCTION_28
0x4001db3	      0xe800000000	                          call 0x4001db8	       740	ref-filter.c	FUNCTION_28
0x4001db8	        0x4883c440	                           add rsp, 0x40	       740	ref-filter.c	FUNCTION_28
0x4001dbc	              0x5b	                                 pop rbx	       740	ref-filter.c	FUNCTION_28
0x4001dbd	              0x5d	                                 pop rbp	       740	ref-filter.c	FUNCTION_28
0x4001dbe	            0x415c	                                 pop r12	       740	ref-filter.c	FUNCTION_28
0x4001dc0	              0xc3	                                     ret	       740	ref-filter.c	FUNCTION_28
parse_sorting_atom	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,1:functions,0:CALL,4:ELSE,0	37
0x4000b68	              0x53	                                push rbx	      2293	ref-filter.c	FUNCTION_86
0x4000b69	        0x4883ec40	                           sub rsp, 0x40	      2293	ref-filter.c	FUNCTION_86
0x4000b6d	          0x4889fe	                            mov rsi, rdi	      2293	ref-filter.c	FUNCTION_86
0x4000b70	    0x64488b042528	                mov rax, qword fs:[0x28]	      2293	ref-filter.c	FUNCTION_86
0x4000b79	      0x4889442438	             mov qword [rsp + 0x38], rax	      2293	ref-filter.c	FUNCTION_86
0x4000b7e	            0x31c0	                            xor eax, eax	      2293	ref-filter.c	FUNCTION_86
0x4000b80	    0x48c704240000	                      mov qword [rsp], 0	      2298	ref-filter.c	FUNCTION_86
0x4000b88	    0x48c744240800	                  mov qword [rsp + 8], 0	      2298	ref-filter.c	FUNCTION_86
0x4000b91	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2298	ref-filter.c	FUNCTION_86
0x4000b9a	    0xc744240cffff	      mov dword [rsp + 0xc], 0xffffffff 	      2298	ref-filter.c	FUNCTION_86
0x4000ba2	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2299	ref-filter.c	FUNCTION_86	CALL_1
0x4000ba9	            0xf2ae	              repne scasb al, byte [rdi]	      2299	ref-filter.c	FUNCTION_86	CALL_1
0x4000bab	          0x48f7d1	                                 not rcx	      2299	ref-filter.c	FUNCTION_86	CALL_1
0x4000bae	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2300	ref-filter.c	FUNCTION_86
0x4000bb7	    0x48c744242800	               mov qword [rsp + 0x28], 0	      2300	ref-filter.c	FUNCTION_86
0x4000bc0	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2300	ref-filter.c	FUNCTION_86
0x4000bc9	      0x488d540eff	                lea rdx, [rsi + rcx - 1]	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x4000bce	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x4000bd3	          0x4889e7	                            mov rdi, rsp	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x4000bd6	      0xe845fcffff	          call sym.parse_ref_filter_atom	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x4000bdb	            0x85c0	                           test eax, eax	      2302	ref-filter.c	FUNCTION_86	IF_1
0x4000bdd	            0x7914	                           jns 0x4000bf3	      2302	ref-filter.c	FUNCTION_86	IF_1
0x4000bdf	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      2303	ref-filter.c	FUNCTION_86	CALL_3
0x4000be4	      0xbf00000000	                              mov edi, 0	      2303	ref-filter.c	FUNCTION_86	CALL_3
0x4000be9	      0xb800000000	                              mov eax, 0	      2303	ref-filter.c	FUNCTION_86	CALL_3
0x4000bee	      0xe800000000	                          call 0x4000bf3	      2303	ref-filter.c	FUNCTION_86	CALL_3
0x4000bf3	            0x89c3	                            mov ebx, eax	      2303	ref-filter.c	FUNCTION_86	CALL_3
0x4000bf5	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2304	ref-filter.c	FUNCTION_86	CALL_4
0x4000bfa	      0xe800000000	                          call 0x4000bff	      2304	ref-filter.c	FUNCTION_86	CALL_4
0x4000bff	            0x89d8	                            mov eax, ebx	      2306	ref-filter.c	FUNCTION_86
0x4000c01	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      2306	ref-filter.c	FUNCTION_86
0x4000c06	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2306	ref-filter.c	FUNCTION_86
0x4000c0f	            0x7405	                            je 0x4000c16	      2306	ref-filter.c	FUNCTION_86
0x4000c11	      0xe800000000	                          call 0x4000c16	      2306	ref-filter.c	FUNCTION_86
0x4000c16	        0x4883c440	                           add rsp, 0x40	      2306	ref-filter.c	FUNCTION_86
0x4000c1a	              0x5b	                                 pop rbx	      2306	ref-filter.c	FUNCTION_86
0x4000c1b	              0xc3	                                     ret	      2306	ref-filter.c	FUNCTION_86
refname_atom_parser_internal	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,6:functions,0:CALL,12:ELSE,4	147
0x4001f81	            0x4156	                                push r14	       136	ref-filter.c	FUNCTION_4
0x4001f83	            0x4155	                                push r13	       136	ref-filter.c	FUNCTION_4
0x4001f85	            0x4154	                                push r12	       136	ref-filter.c	FUNCTION_4
0x4001f87	              0x55	                                push rbp	       136	ref-filter.c	FUNCTION_4
0x4001f88	              0x53	                                push rbx	       136	ref-filter.c	FUNCTION_4
0x4001f89	        0x4883ec10	                           sub rsp, 0x10	       136	ref-filter.c	FUNCTION_4
0x4001f8d	          0x4989fc	                            mov r12, rdi	       136	ref-filter.c	FUNCTION_4
0x4001f90	    0x64488b042528	                mov rax, qword fs:[0x28]	       136	ref-filter.c	FUNCTION_4
0x4001f99	      0x4889442408	                mov qword [rsp + 8], rax	       136	ref-filter.c	FUNCTION_4
0x4001f9e	            0x31c0	                            xor eax, eax	       136	ref-filter.c	FUNCTION_4
0x4001fa0	          0x4885f6	                           test rsi, rsi	       137	ref-filter.c	FUNCTION_4	IF_1
0x4001fa3	            0x750b	                           jne 0x4001fb0	       137	ref-filter.c	FUNCTION_4	IF_1
0x4001fa5	    0xc70700000000	                      mov dword [rdi], 0	       138	ref-filter.c	FUNCTION_4	IF_1
0x4001fab	      0xe904010000	                           jmp 0x40020b4	       138	ref-filter.c	FUNCTION_4	IF_1
0x4001fb0	          0x4889f5	                            mov rbp, rsi	       138	ref-filter.c	FUNCTION_4	IF_1
0x4001fb3	          0x4989d6	                            mov r14, rdx	       138	ref-filter.c	FUNCTION_4	IF_1
0x4001fb6	          0x4989cd	                            mov r13, rcx	       138	ref-filter.c	FUNCTION_4	IF_1
0x4001fb9	      0xbf00000000	                              mov edi, 0	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4001fbe	      0xb906000000	                              mov ecx, 6	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4001fc3	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4001fc5	           0xf97c0	                                 seta al	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4001fc8	           0xf92c2	                                 setb dl	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4001fcb	            0x29d0	                            sub eax, edx	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4001fcd	           0xfbec0	                           movsx eax, al	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4001fd0	          0x4889eb	                            mov rbx, rbp	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4001fd3	      0xba00000000	                              mov edx, 0	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4001fd8	            0x85c0	                           test eax, eax	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4001fda	            0x750d	                           jne 0x4001fe9	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4001fdc	    0x41c704240100	                      mov dword [r12], 1	       140	ref-filter.c	FUNCTION_4	ELSE_1	IF_2
0x4001fe4	      0xe9cb000000	                           jmp 0x40020b4	       140	ref-filter.c	FUNCTION_4	ELSE_1	IF_2
0x4001fe9	           0xfb602	                   movzx eax, byte [rdx]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4001fec	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4001fee	            0x7433	                            je 0x4002023	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4001ff0	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4001ff4	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4001ff8	          0x3a43ff	                  cmp al, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4001ffb	            0x74ec	                            je 0x4001fe9	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4001ffd	          0x4889eb	                            mov rbx, rbp	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002000	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002005	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4002008	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x400200a	            0x7417	                            je 0x4002023	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x400200c	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002010	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002014	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002017	            0x74ec	                            je 0x4002005	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002019	          0x4889eb	                            mov rbx, rbp	       488	git-compat-util.h	FUNCTION_112	DO_1
0x400201c	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002021	            0xeb4d	                           jmp 0x4002070	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002023	    0x41c704240200	                      mov dword [r12], 2	       143	ref-filter.c	FUNCTION_4	ELSE_2	IF_3
0x400202b	      0xe800000000	                          call 0x4002030	      1030	git-compat-util.h	FUNCTION_129
0x4002030	          0x4889c5	                            mov rbp, rax	      1030	git-compat-util.h	FUNCTION_129
0x4002033	    0xc70000000000	                      mov dword [rax], 0	      1030	git-compat-util.h	FUNCTION_129
0x4002039	      0xba0a000000	                            mov edx, 0xa	      1031	git-compat-util.h	FUNCTION_129	CALL_1
0x400203e	          0x4889e6	                            mov rsi, rsp	      1031	git-compat-util.h	FUNCTION_129	CALL_1
0x4002041	          0x4889df	                            mov rdi, rbx	      1031	git-compat-util.h	FUNCTION_129	CALL_1
0x4002044	      0xe800000000	                          call 0x4002049	      1031	git-compat-util.h	FUNCTION_129	CALL_1
0x4002049	          0x4889c2	                            mov rdx, rax	      1031	git-compat-util.h	FUNCTION_129	CALL_1
0x400204c	          0x8b4500	                    mov eax, dword [rbp]	      1032	git-compat-util.h	FUNCTION_129	IF_1
0x400204f	            0x85c0	                           test eax, eax	      1032	git-compat-util.h	FUNCTION_129	IF_1
0x4002051	            0x757a	                           jne 0x40020cd	      1032	git-compat-util.h	FUNCTION_129	IF_1
0x4002053	        0x488b0c24	                    mov rcx, qword [rsp]	      1032	git-compat-util.h	FUNCTION_129	IF_1
0x4002057	          0x803900	                       cmp byte [rcx], 0	      1032	git-compat-util.h	FUNCTION_129	IF_1
0x400205a	            0x7571	                           jne 0x40020cd	      1032	git-compat-util.h	FUNCTION_129	IF_1
0x400205c	          0x4839cb	                            cmp rbx, rcx	      1032	git-compat-util.h	FUNCTION_129	IF_1
0x400205f	            0x746c	                            je 0x40020cd	      1032	git-compat-util.h	FUNCTION_129	IF_1
0x4002061	          0x4863ca	                         movsxd rcx, edx	      1032	git-compat-util.h	FUNCTION_129	IF_1
0x4002064	          0x4839ca	                            cmp rdx, rcx	      1032	git-compat-util.h	FUNCTION_129	IF_1
0x4002067	            0x7564	                           jne 0x40020cd	      1032	git-compat-util.h	FUNCTION_129	IF_1
0x4002069	      0x4189542404	                mov dword [r12 + 4], edx	      1034	git-compat-util.h	FUNCTION_129
0x400206e	            0xeb44	                           jmp 0x40020b4	      1034	git-compat-util.h	FUNCTION_129
0x4002070	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4002073	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4002075	     0xf8480000000	                            je 0x40020fb	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x400207b	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x400207f	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002083	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002086	            0x74e8	                            je 0x4002070	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002088	      0xe9a4000000	                           jmp 0x4002131	       488	git-compat-util.h	FUNCTION_112	DO_1
0x400208d	        0x488b0c24	                    mov rcx, qword [rsp]	      1032	git-compat-util.h	FUNCTION_129	IF_1
0x4002091	          0x803900	                       cmp byte [rcx], 0	      1032	git-compat-util.h	FUNCTION_129	IF_1
0x4002094	     0xf85cb000000	                           jne 0x4002165	      1032	git-compat-util.h	FUNCTION_129	IF_1
0x400209a	          0x4839cb	                            cmp rbx, rcx	      1032	git-compat-util.h	FUNCTION_129	IF_1
0x400209d	     0xf84c2000000	                            je 0x4002165	      1032	git-compat-util.h	FUNCTION_129	IF_1
0x40020a3	          0x4863ca	                         movsxd rcx, edx	      1032	git-compat-util.h	FUNCTION_129	IF_1
0x40020a6	          0x4839ca	                            cmp rdx, rcx	      1032	git-compat-util.h	FUNCTION_129	IF_1
0x40020a9	     0xf85b6000000	                           jne 0x4002165	      1032	git-compat-util.h	FUNCTION_129	IF_1
0x40020af	      0x4189542408	                mov dword [r12 + 8], edx	      1034	git-compat-util.h	FUNCTION_129
0x40020b4	      0x488b742408	                mov rsi, qword [rsp + 8]	       153	ref-filter.c	FUNCTION_4
0x40020b9	    0x644833342528	                xor rsi, qword fs:[0x28]	       153	ref-filter.c	FUNCTION_4
0x40020c2	     0xf84d3000000	                            je 0x400219b	       153	ref-filter.c	FUNCTION_4
0x40020c8	      0xe9c9000000	                           jmp 0x4002196	       153	ref-filter.c	FUNCTION_4
0x40020cd	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x40020d2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40020d7	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x40020dc	      0xe800000000	                          call 0x40020e1	        54	gettext.h	FUNCTION_93
0x40020e1	          0x4889d9	                            mov rcx, rbx	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x40020e4	          0x4889c2	                            mov rdx, rax	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x40020e7	      0xbeffffffff	                     mov esi, 0xffffffff	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x40020ec	          0x4c89ef	                            mov rdi, r13	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x40020ef	      0xb800000000	                              mov eax, 0	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x40020f4	      0xe85ce2ffff	                call sym.strbuf_addf_ret	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x40020f9	            0xebb9	                           jmp 0x40020b4	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x40020fb	    0x41c704240300	                      mov dword [r12], 3	       147	ref-filter.c	FUNCTION_4	ELSE_3	IF_5
0x4002103	      0xe800000000	                          call 0x4002108	      1030	git-compat-util.h	FUNCTION_129
0x4002108	          0x4889c5	                            mov rbp, rax	      1030	git-compat-util.h	FUNCTION_129
0x400210b	    0xc70000000000	                      mov dword [rax], 0	      1030	git-compat-util.h	FUNCTION_129
0x4002111	      0xba0a000000	                            mov edx, 0xa	      1031	git-compat-util.h	FUNCTION_129	CALL_1
0x4002116	          0x4889e6	                            mov rsi, rsp	      1031	git-compat-util.h	FUNCTION_129	CALL_1
0x4002119	          0x4889df	                            mov rdi, rbx	      1031	git-compat-util.h	FUNCTION_129	CALL_1
0x400211c	      0xe800000000	                          call 0x4002121	      1031	git-compat-util.h	FUNCTION_129	CALL_1
0x4002121	          0x4889c2	                            mov rdx, rax	      1031	git-compat-util.h	FUNCTION_129	CALL_1
0x4002124	          0x8b4500	                    mov eax, dword [rbp]	      1032	git-compat-util.h	FUNCTION_129	IF_1
0x4002127	            0x85c0	                           test eax, eax	      1032	git-compat-util.h	FUNCTION_129	IF_1
0x4002129	     0xf845effffff	                            je 0x400208d	      1032	git-compat-util.h	FUNCTION_129	IF_1
0x400212f	            0xeb34	                           jmp 0x4002165	      1032	git-compat-util.h	FUNCTION_129	IF_1
0x4002131	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4002136	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x400213b	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4002140	      0xe800000000	                          call 0x4002145	        54	gettext.h	FUNCTION_93
0x4002145	          0x4989e8	                             mov r8, rbp	       151	ref-filter.c	FUNCTION_4	CALL_12
0x4002148	          0x4c89f1	                            mov rcx, r14	       151	ref-filter.c	FUNCTION_4	CALL_12
0x400214b	          0x4889c2	                            mov rdx, rax	       151	ref-filter.c	FUNCTION_4	CALL_12
0x400214e	      0xbeffffffff	                     mov esi, 0xffffffff	       151	ref-filter.c	FUNCTION_4	CALL_12
0x4002153	          0x4c89ef	                            mov rdi, r13	       151	ref-filter.c	FUNCTION_4	CALL_12
0x4002156	      0xb800000000	                              mov eax, 0	       151	ref-filter.c	FUNCTION_4	CALL_12
0x400215b	      0xe8f5e1ffff	                call sym.strbuf_addf_ret	       151	ref-filter.c	FUNCTION_4	CALL_12
0x4002160	      0xe94fffffff	                           jmp 0x40020b4	       151	ref-filter.c	FUNCTION_4	CALL_12
0x4002165	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x400216a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x400216f	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4002174	      0xe800000000	                          call 0x4002179	        54	gettext.h	FUNCTION_93
0x4002179	          0x4889d9	                            mov rcx, rbx	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x400217c	          0x4889c2	                            mov rdx, rax	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x400217f	      0xbeffffffff	                     mov esi, 0xffffffff	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x4002184	          0x4c89ef	                            mov rdi, r13	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x4002187	      0xb800000000	                              mov eax, 0	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x400218c	      0xe8c4e1ffff	                call sym.strbuf_addf_ret	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x4002191	      0xe91effffff	                           jmp 0x40020b4	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x4002196	      0xe800000000	                          call 0x400219b	       153	ref-filter.c	FUNCTION_4
0x400219b	        0x4883c410	                           add rsp, 0x10	       153	ref-filter.c	FUNCTION_4
0x400219f	              0x5b	                                 pop rbx	       153	ref-filter.c	FUNCTION_4
0x40021a0	              0x5d	                                 pop rbp	       153	ref-filter.c	FUNCTION_4
0x40021a1	            0x415c	                                 pop r12	       153	ref-filter.c	FUNCTION_4
0x40021a3	            0x415d	                                 pop r13	       153	ref-filter.c	FUNCTION_4
0x40021a5	            0x415e	                                 pop r14	       153	ref-filter.c	FUNCTION_4
0x40021a7	              0xc3	                                     ret	       153	ref-filter.c	FUNCTION_4
if_then_else_handler	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,4:functions,0:CALL,6:ELSE,2	99
0x40028a8	              0x55	                                push rbp	       602	ref-filter.c	FUNCTION_23
0x40028a9	              0x53	                                push rbx	       602	ref-filter.c	FUNCTION_23
0x40028aa	        0x4883ec38	                           sub rsp, 0x38	       602	ref-filter.c	FUNCTION_23
0x40028ae	    0x64488b042528	                mov rax, qword fs:[0x28]	       602	ref-filter.c	FUNCTION_23
0x40028b7	      0x4889442428	             mov qword [rsp + 0x28], rax	       602	ref-filter.c	FUNCTION_23
0x40028bc	            0x31c0	                            xor eax, eax	       602	ref-filter.c	FUNCTION_23
0x40028be	          0x488b07	                    mov rax, qword [rdi]	       603	ref-filter.c	FUNCTION_23
0x40028c1	      0x4889442408	                mov qword [rsp + 8], rax	       603	ref-filter.c	FUNCTION_23
0x40028c6	        0x488b5828	            mov rbx, qword [rax + 0x28] 	       605	ref-filter.c	FUNCTION_23
0x40028ca	         0xfb65310	           movzx edx, byte [rbx + 0x10] 	       607	ref-filter.c	FUNCTION_23	IF_1
0x40028ce	          0xf6c201	                              test dl, 1	       607	ref-filter.c	FUNCTION_23	IF_1
0x40028d1	            0x7521	                           jne 0x40028f4	       607	ref-filter.c	FUNCTION_23	IF_1
0x40028d3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x40028d8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40028dd	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x40028e2	      0xe800000000	                          call 0x40028e7	        54	gettext.h	FUNCTION_93
0x40028e7	          0x4889c7	                            mov rdi, rax	       608	ref-filter.c	FUNCTION_23	CALL_2
0x40028ea	      0xb800000000	                              mov eax, 0	       608	ref-filter.c	FUNCTION_23	CALL_2
0x40028ef	      0xe800000000	                          call 0x40028f4	       608	ref-filter.c	FUNCTION_23	CALL_2
0x40028f4	          0x4889fd	                            mov rbp, rdi	       608	ref-filter.c	FUNCTION_23	CALL_2
0x40028f7	          0xf6c202	                              test dl, 2	       610	ref-filter.c	FUNCTION_23	IF_2
0x40028fa	     0xf84d8000000	                            je 0x40029d8	       610	ref-filter.c	FUNCTION_23	IF_2
0x4002900	          0xf6c204	                              test dl, 4	       616	ref-filter.c	FUNCTION_23	IF_2	IF_3
0x4002903	            0x744a	                            je 0x400294f	       616	ref-filter.c	FUNCTION_23	IF_2	IF_3
0x4002905	    0x48c740100000	               mov qword [rax + 0x10], 0	       164	strbuf.h	FUNCTION_97
0x400290d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       165	strbuf.h	FUNCTION_97	IF_2
0x4002911	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_97	IF_2
0x4002917	            0x7405	                            je 0x400291e	       165	strbuf.h	FUNCTION_97	IF_2
0x4002919	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_97	IF_2
0x400291c	            0xeb22	                           jmp 0x4002940	       166	strbuf.h	FUNCTION_97	IF_2
0x400291e	    0x803d00000000	                cmp byte [0x04002925], 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x4002925	            0x7419	                            je 0x4002940	       168	strbuf.h	FUNCTION_97	CALL_2
0x4002927	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x400292c	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_97	CALL_2
0x4002931	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x4002936	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x400293b	      0xe800000000	                          call 0x4002940	       168	strbuf.h	FUNCTION_97	CALL_2
0x4002940	      0x488d7c2408	                      lea rdi, [rsp + 8]	       618	ref-filter.c	FUNCTION_23	IF_2	IF_3	CALL_3
0x4002945	      0xe815e7ffff	              call sym.pop_stack_element	       618	ref-filter.c	FUNCTION_23	IF_2	IF_3	CALL_3
0x400294a	      0xe9c9000000	                           jmp 0x4002a18	       618	ref-filter.c	FUNCTION_23	IF_2	IF_3	CALL_3
0x400294f	          0x488b30	                    mov rsi, qword [rax]	       620	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_4
0x4002952	        0x4c8b4808	                 mov r9, qword [rax + 8]	        53	string3.h	FUNCTION_133	CALL_3
0x4002956	      0x4c894c2410	              mov qword [rsp + 0x10], r9	        53	string3.h	FUNCTION_133	CALL_3
0x400295b	        0x4c8b4010	              mov r8, qword [rax + 0x10]	        53	string3.h	FUNCTION_133	CALL_3
0x400295f	      0x4c89442418	              mov qword [rsp + 0x18], r8	        53	string3.h	FUNCTION_133	CALL_3
0x4002964	        0x488b7818	            mov rdi, qword [rax + 0x18] 	        53	string3.h	FUNCTION_133	CALL_3
0x4002968	      0x48897c2420	             mov qword [rsp + 0x20], rdi	        53	string3.h	FUNCTION_133	CALL_3
0x400296d	        0x4c8b5608	                mov r10, qword [rsi + 8]	        53	string3.h	FUNCTION_133	CALL_3
0x4002971	        0x4c895008	                mov qword [rax + 8], r10	        53	string3.h	FUNCTION_133	CALL_3
0x4002975	        0x4c8b5610	            mov r10, qword [rsi + 0x10] 	        53	string3.h	FUNCTION_133	CALL_3
0x4002979	        0x4c895010	             mov qword [rax + 0x10], r10	        53	string3.h	FUNCTION_133	CALL_3
0x400297d	        0x4c8b5618	            mov r10, qword [rsi + 0x18] 	        53	string3.h	FUNCTION_133	CALL_3
0x4002981	        0x4c895018	             mov qword [rax + 0x18], r10	        53	string3.h	FUNCTION_133	CALL_3
0x4002985	        0x4c894e08	                 mov qword [rsi + 8], r9	        53	string3.h	FUNCTION_133	CALL_3
0x4002989	        0x4c894610	              mov qword [rsi + 0x10], r8	        53	string3.h	FUNCTION_133	CALL_3
0x400298d	        0x48897e18	             mov qword [rsi + 0x18], rdi	        53	string3.h	FUNCTION_133	CALL_3
0x4002991	    0x48c740100000	               mov qword [rax + 0x10], 0	       164	strbuf.h	FUNCTION_97
0x4002999	        0x488b4018	            mov rax, qword [rax + 0x18] 	       165	strbuf.h	FUNCTION_97	IF_2
0x400299d	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_97	IF_2
0x40029a3	            0x7405	                            je 0x40029aa	       165	strbuf.h	FUNCTION_97	IF_2
0x40029a5	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_97	IF_2
0x40029a8	            0xeb22	                           jmp 0x40029cc	       166	strbuf.h	FUNCTION_97	IF_2
0x40029aa	    0x803d00000000	                cmp byte [0x040029b1], 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x40029b1	            0x7419	                            je 0x40029cc	       168	strbuf.h	FUNCTION_97	CALL_2
0x40029b3	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x40029b8	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_97	CALL_2
0x40029bd	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x40029c2	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x40029c7	      0xe800000000	                          call 0x40029cc	       168	strbuf.h	FUNCTION_97	CALL_2
0x40029cc	      0x488d7c2408	                      lea rdi, [rsp + 8]	       622	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_5
0x40029d1	      0xe889e6ffff	              call sym.pop_stack_element	       622	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_5
0x40029d6	            0xeb40	                           jmp 0x4002a18	       622	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_5
0x40029d8	          0xf6c204	                              test dl, 4	       624	ref-filter.c	FUNCTION_23	ELSE_2	IF_4
0x40029db	            0x753b	                           jne 0x4002a18	       624	ref-filter.c	FUNCTION_23	ELSE_2	IF_4
0x40029dd	    0x48c740100000	               mov qword [rax + 0x10], 0	       164	strbuf.h	FUNCTION_97
0x40029e5	        0x488b4018	            mov rax, qword [rax + 0x18] 	       165	strbuf.h	FUNCTION_97	IF_2
0x40029e9	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_97	IF_2
0x40029ef	            0x7405	                            je 0x40029f6	       165	strbuf.h	FUNCTION_97	IF_2
0x40029f1	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_97	IF_2
0x40029f4	            0xeb22	                           jmp 0x4002a18	       166	strbuf.h	FUNCTION_97	IF_2
0x40029f6	    0x803d00000000	                cmp byte [0x040029fd], 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x40029fd	            0x7419	                            je 0x4002a18	       168	strbuf.h	FUNCTION_97	CALL_2
0x40029ff	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x4002a04	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_97	CALL_2
0x4002a09	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x4002a0e	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x4002a13	      0xe800000000	                          call 0x4002a18	       168	strbuf.h	FUNCTION_97	CALL_2
0x4002a18	      0x488b442408	                mov rax, qword [rsp + 8]	       632	ref-filter.c	FUNCTION_23
0x4002a1d	        0x48894500	                    mov qword [rbp], rax	       632	ref-filter.c	FUNCTION_23
0x4002a21	          0x4889df	                            mov rdi, rbx	       633	ref-filter.c	FUNCTION_23	CALL_6
0x4002a24	      0xe800000000	                          call 0x4002a29	       633	ref-filter.c	FUNCTION_23	CALL_6
0x4002a29	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       634	ref-filter.c	FUNCTION_23
0x4002a2e	    0x644833042528	                xor rax, qword fs:[0x28]	       634	ref-filter.c	FUNCTION_23
0x4002a37	            0x7405	                            je 0x4002a3e	       634	ref-filter.c	FUNCTION_23
0x4002a39	      0xe800000000	                          call 0x4002a3e	       634	ref-filter.c	FUNCTION_23
0x4002a3e	        0x4883c438	                           add rsp, 0x38	       634	ref-filter.c	FUNCTION_23
0x4002a42	              0x5b	                                 pop rbx	       634	ref-filter.c	FUNCTION_23
0x4002a43	              0x5d	                                 pop rbp	       634	ref-filter.c	FUNCTION_23
0x4002a44	              0xc3	                                     ret	       634	ref-filter.c	FUNCTION_23
ref_default_sorting	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,0:functions,0:CALL,2:ELSE,0	12
0x4004bf5	              0x53	                                push rbx	      2310	ref-filter.c	FUNCTION_87
0x4004bf6	      0xbe10000000	                           mov esi, 0x10	      2313	ref-filter.c	FUNCTION_87	CALL_1
0x4004bfb	      0xbf01000000	                              mov edi, 1	      2313	ref-filter.c	FUNCTION_87	CALL_1
0x4004c00	      0xe800000000	                          call 0x4004c05	      2313	ref-filter.c	FUNCTION_87	CALL_1
0x4004c05	          0x4889c3	                            mov rbx, rax	      2313	ref-filter.c	FUNCTION_87	CALL_1
0x4004c08	    0x48c700000000	                      mov qword [rax], 0	      2315	ref-filter.c	FUNCTION_87
0x4004c0f	      0xbf00000000	                              mov edi, 0	      2316	ref-filter.c	FUNCTION_87	CALL_2
0x4004c14	      0xe84fbfffff	             call sym.parse_sorting_atom	      2316	ref-filter.c	FUNCTION_87	CALL_2
0x4004c19	          0x894308	                mov dword [rbx + 8], eax	      2316	ref-filter.c	FUNCTION_87	CALL_2
0x4004c1c	          0x4889d8	                            mov rax, rbx	      2318	ref-filter.c	FUNCTION_87
0x4004c1f	              0x5b	                                 pop rbx	      2318	ref-filter.c	FUNCTION_87
0x4004c20	              0xc3	                                     ret	      2318	ref-filter.c	FUNCTION_87
strbuf_addf_ret	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,0:functions,0:CALL,3:ELSE,0	36
0x4000355	              0x53	                                push rbx	       109	ref-filter.c	FUNCTION_2
0x4000356	    0x4881ecd00000	                           sub rsp, 0xd0	       109	ref-filter.c	FUNCTION_2
0x400035d	            0x89f3	                            mov ebx, esi	       109	ref-filter.c	FUNCTION_2
0x400035f	          0x4889d6	                            mov rsi, rdx	       109	ref-filter.c	FUNCTION_2
0x4000362	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       109	ref-filter.c	FUNCTION_2
0x4000367	      0x4c89442440	              mov qword [rsp + 0x40], r8	       109	ref-filter.c	FUNCTION_2
0x400036c	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       109	ref-filter.c	FUNCTION_2
0x4000371	            0x84c0	                             test al, al	       109	ref-filter.c	FUNCTION_2
0x4000373	            0x7437	                            je 0x40003ac	       109	ref-filter.c	FUNCTION_2
0x4000375	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       109	ref-filter.c	FUNCTION_2
0x400037a	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       109	ref-filter.c	FUNCTION_2
0x400037f	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       109	ref-filter.c	FUNCTION_2
0x4000384	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       109	ref-filter.c	FUNCTION_2
0x400038c	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       109	ref-filter.c	FUNCTION_2
0x4000394	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       109	ref-filter.c	FUNCTION_2
0x400039c	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       109	ref-filter.c	FUNCTION_2
0x40003a4	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       109	ref-filter.c	FUNCTION_2
0x40003ac	    0x64488b042528	                mov rax, qword fs:[0x28]	       109	ref-filter.c	FUNCTION_2
0x40003b5	      0x4889442418	             mov qword [rsp + 0x18], rax	       109	ref-filter.c	FUNCTION_2
0x40003ba	            0x31c0	                            xor eax, eax	       109	ref-filter.c	FUNCTION_2
0x40003bc	    0xc70424180000	                   mov dword [rsp], 0x18	       111	ref-filter.c	FUNCTION_2	CALL_1
0x40003c3	    0xc74424043000	               mov dword [rsp + 4], 0x30	       111	ref-filter.c	FUNCTION_2	CALL_1
0x40003cb	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       111	ref-filter.c	FUNCTION_2	CALL_1
0x40003d3	      0x4889442408	                mov qword [rsp + 8], rax	       111	ref-filter.c	FUNCTION_2	CALL_1
0x40003d8	      0x488d442420	                   lea rax, [rsp + 0x20]	       111	ref-filter.c	FUNCTION_2	CALL_1
0x40003dd	      0x4889442410	             mov qword [rsp + 0x10], rax	       111	ref-filter.c	FUNCTION_2	CALL_1
0x40003e2	          0x4889e2	                            mov rdx, rsp	       112	ref-filter.c	FUNCTION_2	CALL_2
0x40003e5	      0xe800000000	                          call 0x40003ea	       112	ref-filter.c	FUNCTION_2	CALL_2
0x40003ea	            0x89d8	                            mov eax, ebx	       115	ref-filter.c	FUNCTION_2
0x40003ec	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       115	ref-filter.c	FUNCTION_2
0x40003f1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       115	ref-filter.c	FUNCTION_2
0x40003fa	            0x7405	                            je 0x4000401	       115	ref-filter.c	FUNCTION_2
0x40003fc	      0xe800000000	                          call 0x4000401	       115	ref-filter.c	FUNCTION_2
0x4000401	    0x4881c4d00000	                           add rsp, 0xd0	       115	ref-filter.c	FUNCTION_2
0x4000408	              0x5b	                                 pop rbx	       115	ref-filter.c	FUNCTION_2
0x4000409	              0xc3	                                     ret	       115	ref-filter.c	FUNCTION_2
show_ref	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,3:functions,0:CALL,3:ELSE,3	95
0x40012e7	            0x4154	                                push r12	      1307	ref-filter.c	ELSE_1	FUNCTION_51
0x40012e9	              0x55	                                push rbp	      1307	ref-filter.c	ELSE_1	FUNCTION_51
0x40012ea	              0x53	                                push rbx	      1307	ref-filter.c	ELSE_1	FUNCTION_51
0x40012eb	          0x4889f3	                            mov rbx, rsi	      1307	ref-filter.c	ELSE_1	FUNCTION_51
0x40012ee	            0x8b17	                    mov edx, dword [rdi]	      1308	ref-filter.c	ELSE_1	FUNCTION_51	IF_1
0x40012f0	          0x83fa01	                              cmp edx, 1	      1308	ref-filter.c	ELSE_1	FUNCTION_51	IF_1
0x40012f3	            0x7513	                           jne 0x4001308	      1308	ref-filter.c	ELSE_1	FUNCTION_51	IF_1
0x40012f5	    0x8b3500000000	            mov esi, dword [0x040012fb] 	      1309	ref-filter.c	ELSE_1	FUNCTION_51	CALL_1
0x40012fb	          0x4889df	                            mov rdi, rbx	      1309	ref-filter.c	ELSE_1	FUNCTION_51	CALL_1
0x40012fe	      0xe800000000	                          call 0x4001303	      1309	ref-filter.c	ELSE_1	FUNCTION_51	CALL_1
0x4001303	      0xe9fa000000	                           jmp 0x4001402	      1309	ref-filter.c	ELSE_1	FUNCTION_51	CALL_1
0x4001308	          0x83fa02	                              cmp edx, 2	      1310	ref-filter.c	FUNCTION_51	IF_2
0x400130b	            0x7565	                           jne 0x4001372	      1310	ref-filter.c	FUNCTION_51	IF_2
0x400130d	          0x8b4704	                mov eax, dword [rdi + 4]	      1311	ref-filter.c	FUNCTION_51	ELSE_1	CALL_2
0x4001310	            0x85c0	                           test eax, eax	      1246	ref-filter.c	FUNCTION_49	IF_1
0x4001312	            0x7814	                            js 0x4001328	      1246	ref-filter.c	FUNCTION_49	IF_1
0x4001314	            0x4898	                                    cdqe	      1243	ref-filter.c	FUNCTION_49
0x4001316	            0xeb29	                           jmp 0x4001341	      1243	ref-filter.c	FUNCTION_49
0x4001318	          0x80fa2f	                            cmp dl, 0x2f	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x400131b	            0x7505	                           jne 0x4001322	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x400131d	          0x83c601	                              add esi, 1	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4001320	            0xeb0e	                           jmp 0x4001330	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4001322	        0x4883c101	                              add rcx, 1	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4001326	            0xeb08	                           jmp 0x4001330	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4001328	          0x4889f1	                            mov rcx, rsi	      1246	ref-filter.c	FUNCTION_49	IF_1
0x400132b	      0xbe00000000	                              mov esi, 0	      1246	ref-filter.c	FUNCTION_49	IF_1
0x4001330	          0x4863d6	                         movsxd rdx, esi	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4001333	         0xfb61411	             movzx edx, byte [rcx + rdx]	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4001337	            0x84d2	                             test dl, dl	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4001339	            0x75dd	                           jne 0x4001318	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x400133b	        0x8d443001	                lea eax, [rax + rsi + 1]	      1259	ref-filter.c	FUNCTION_49	IF_1
0x400133f	            0x4898	                                    cdqe	      1259	ref-filter.c	FUNCTION_49	IF_1
0x4001341	          0x4885c0	                           test rax, rax	      1262	ref-filter.c	FUNCTION_49	WHILE_1
0x4001344	     0xf8ea2000000	                           jle 0x40013ec	      1262	ref-filter.c	FUNCTION_49	WHILE_1
0x400134a	           0xfb613	                   movzx edx, byte [rbx]	      1263	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x400134d	            0x84d2	                             test dl, dl	      1263	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x400134f	     0xf849c000000	                            je 0x40013f1	      1263	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x4001355	          0x80fa2f	                            cmp dl, 0x2f	      1267	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x4001358	           0xf94c2	                                 sete dl	      1267	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x400135b	           0xfb6d2	                           movzx edx, dl	      1267	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x400135e	          0x4829d0	                            sub rax, rdx	      1267	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x4001361	        0x4883c301	                              add rbx, 1	      1263	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x4001365	          0x4885c0	                           test rax, rax	      1262	ref-filter.c	FUNCTION_49	WHILE_1
0x4001368	            0x7fe0	                            jg 0x400134a	      1262	ref-filter.c	FUNCTION_49	WHILE_1
0x400136a	          0x4889d8	                            mov rax, rbx	      1263	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x400136d	      0xe990000000	                           jmp 0x4001402	      1263	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x4001372	          0x4889f0	                            mov rax, rsi	      1315	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_3
0x4001375	          0x83fa03	                              cmp edx, 3	      1312	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_2	IF_3
0x4001378	     0xf8584000000	                           jne 0x4001402	      1312	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_2	IF_3
0x400137e	        0x448b6708	               mov r12d, dword [rdi + 8]	      1313	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_2	IF_3
0x4001382	          0x4889f7	                            mov rdi, rsi	      1278	ref-filter.c	FUNCTION_50	CALL_1
0x4001385	      0xe800000000	                          call 0x400138a	      1278	ref-filter.c	FUNCTION_50	CALL_1
0x400138a	          0x4889c5	                            mov rbp, rax	      1278	ref-filter.c	FUNCTION_50	CALL_1
0x400138d	          0x4585e4	                         test r12d, r12d	      1280	ref-filter.c	FUNCTION_50	IF_1
0x4001390	            0x7814	                            js 0x40013a6	      1280	ref-filter.c	FUNCTION_50	IF_1
0x4001392	          0x4d63e4	                        movsxd r12, r12d	      1277	ref-filter.c	FUNCTION_50
0x4001395	            0xeb27	                           jmp 0x40013be	      1277	ref-filter.c	FUNCTION_50
0x4001397	            0x3c2f	                            cmp al, 0x2f	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x4001399	            0x7505	                           jne 0x40013a0	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x400139b	          0x83c201	                              add edx, 1	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x400139e	            0xeb0b	                           jmp 0x40013ab	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x40013a0	        0x4883c301	                              add rbx, 1	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x40013a4	            0xeb05	                           jmp 0x40013ab	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x40013a6	      0xba00000000	                              mov edx, 0	      1280	ref-filter.c	FUNCTION_50	IF_1
0x40013ab	          0x4863c2	                         movsxd rax, edx	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x40013ae	         0xfb60403	             movzx eax, byte [rbx + rax]	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x40013b2	            0x84c0	                             test al, al	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x40013b4	            0x75e1	                           jne 0x4001397	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x40013b6	      0x458d641401	               lea r12d, [r12 + rdx + 1]	      1293	ref-filter.c	FUNCTION_50	IF_1
0x40013bb	          0x4d63e4	                        movsxd r12, r12d	      1293	ref-filter.c	FUNCTION_50	IF_1
0x40013be	      0x498d5c24ff	                      lea rbx, [r12 - 1]	      1296	ref-filter.c	FUNCTION_50	WHILE_1
0x40013c3	          0x4d85e4	                           test r12, r12	      1296	ref-filter.c	FUNCTION_50	WHILE_1
0x40013c6	            0x7e30	                           jle 0x40013f8	      1296	ref-filter.c	FUNCTION_50	WHILE_1
0x40013c8	      0xbe2f000000	                           mov esi, 0x2f	      1297	ref-filter.c	FUNCTION_50	WHILE_1	CALL_2
0x40013cd	          0x4889ef	                            mov rdi, rbp	      1297	ref-filter.c	FUNCTION_50	WHILE_1	CALL_2
0x40013d0	      0xe800000000	                          call 0x40013d5	      1297	ref-filter.c	FUNCTION_50	WHILE_1	CALL_2
0x40013d5	          0x4885c0	                           test rax, rax	      1298	ref-filter.c	FUNCTION_50	WHILE_1	IF_2
0x40013d8	            0x7423	                            je 0x40013fd	      1298	ref-filter.c	FUNCTION_50	WHILE_1	IF_2
0x40013da	          0xc60000	                       mov byte [rax], 0	      1301	ref-filter.c	FUNCTION_50	WHILE_1	ELSE_1
0x40013dd	        0x4883eb01	                              sub rbx, 1	      1296	ref-filter.c	FUNCTION_50	WHILE_1
0x40013e1	        0x4883fbff	             cmp rbx, 0xffffffffffffffff	      1296	ref-filter.c	FUNCTION_50	WHILE_1
0x40013e5	            0x75e1	                           jne 0x40013c8	      1296	ref-filter.c	FUNCTION_50	WHILE_1
0x40013e7	          0x4889e8	                            mov rax, rbp	      1303	ref-filter.c	FUNCTION_50	ELSE_1
0x40013ea	            0xeb16	                           jmp 0x4001402	      1303	ref-filter.c	FUNCTION_50	ELSE_1
0x40013ec	          0x4889d8	                            mov rax, rbx	      1262	ref-filter.c	FUNCTION_49	WHILE_1
0x40013ef	            0xeb11	                           jmp 0x4001402	      1262	ref-filter.c	FUNCTION_49	WHILE_1
0x40013f1	      0xb800000000	                              mov eax, 0	      1265	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x40013f6	            0xeb0a	                           jmp 0x4001402	      1265	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x40013f8	          0x4889e8	                            mov rax, rbp	      1303	ref-filter.c	FUNCTION_50	ELSE_1
0x40013fb	            0xeb05	                           jmp 0x4001402	      1303	ref-filter.c	FUNCTION_50	ELSE_1
0x40013fd	      0xb800000000	                              mov eax, 0	      1299	ref-filter.c	FUNCTION_50	WHILE_1	IF_2
0x4001402	              0x5b	                                 pop rbx	      1316	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_3
0x4001403	              0x5d	                                 pop rbp	      1316	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_3
0x4001404	            0x415c	                                 pop r12	      1316	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_3
0x4001406	              0xc3	                                     ret	      1316	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_3
parse_ref_sorting	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,2:functions,0:CALL,4:ELSE,0	43
0x4004c21	            0x4154	                                push r12	      2321	ref-filter.c	FUNCTION_88
0x4004c23	              0x55	                                push rbp	      2321	ref-filter.c	FUNCTION_88
0x4004c24	              0x53	                                push rbx	      2321	ref-filter.c	FUNCTION_88
0x4004c25	          0x4989fc	                            mov r12, rdi	      2321	ref-filter.c	FUNCTION_88
0x4004c28	          0x4889f5	                            mov rbp, rsi	      2321	ref-filter.c	FUNCTION_88
0x4004c2b	      0xbe10000000	                           mov esi, 0x10	      2324	ref-filter.c	FUNCTION_88	CALL_1
0x4004c30	      0xbf01000000	                              mov edi, 1	      2324	ref-filter.c	FUNCTION_88	CALL_1
0x4004c35	      0xe800000000	                          call 0x4004c3a	      2324	ref-filter.c	FUNCTION_88	CALL_1
0x4004c3a	          0x4889c3	                            mov rbx, rax	      2324	ref-filter.c	FUNCTION_88	CALL_1
0x4004c3d	        0x498b0424	                    mov rax, qword [r12]	      2325	ref-filter.c	FUNCTION_88
0x4004c41	          0x488903	                    mov qword [rbx], rax	      2325	ref-filter.c	FUNCTION_88
0x4004c44	        0x49891c24	                    mov qword [r12], rbx	      2326	ref-filter.c	FUNCTION_88
0x4004c48	        0x807d002d	                    cmp byte [rbp], 0x2d	      2328	ref-filter.c	FUNCTION_88	IF_1
0x4004c4c	            0x7508	                           jne 0x4004c56	      2328	ref-filter.c	FUNCTION_88	IF_1
0x4004c4e	        0x804b0c01	                  or byte [rbx + 0xc], 1	      2329	ref-filter.c	FUNCTION_88	IF_1
0x4004c52	        0x4883c501	                              add rbp, 1	      2330	ref-filter.c	FUNCTION_88	IF_1
0x4004c56	          0x4889ef	                            mov rdi, rbp	      2321	ref-filter.c	FUNCTION_88
0x4004c59	      0xb800000000	                              mov eax, 0	      2321	ref-filter.c	FUNCTION_88
0x4004c5e	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4004c61	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4004c63	            0x742e	                            je 0x4004c93	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4004c65	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004c69	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004c6d	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004c70	            0x74ec	                            je 0x4004c5e	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004c72	          0x4889ef	                            mov rdi, rbp	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004c75	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004c7a	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4004c7d	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4004c7f	            0x7412	                            je 0x4004c93	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4004c81	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004c85	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004c89	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004c8c	            0x74ec	                            je 0x4004c7a	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004c8e	          0x4889ef	                            mov rdi, rbp	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004c91	            0xeb04	                           jmp 0x4004c97	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004c93	        0x804b0c04	                  or byte [rbx + 0xc], 4	      2334	ref-filter.c	FUNCTION_88	IF_2
0x4004c97	      0xe8ccbeffff	             call sym.parse_sorting_atom	      2335	ref-filter.c	FUNCTION_88	CALL_4
0x4004c9c	          0x894308	                mov dword [rbx + 8], eax	      2335	ref-filter.c	FUNCTION_88	CALL_4
0x4004c9f	              0x5b	                                 pop rbx	      2336	ref-filter.c	FUNCTION_88
0x4004ca0	              0x5d	                                 pop rbp	      2336	ref-filter.c	FUNCTION_88
0x4004ca1	            0x415c	                                 pop r12	      2336	ref-filter.c	FUNCTION_88
0x4004ca3	              0xc3	                                     ret	      2336	ref-filter.c	FUNCTION_88
do_merge_filter	SWITCH,0:FOR,2:WHILE,0:DO,0:IF,2:functions,0:CALL,11:ELSE,1	102
0x4000ee0	            0x4157	                                push r15	      2055	ref-filter.c	FUNCTION_77
0x4000ee2	            0x4156	                                push r14	      2055	ref-filter.c	FUNCTION_77
0x4000ee4	            0x4155	                                push r13	      2055	ref-filter.c	FUNCTION_77
0x4000ee6	            0x4154	                                push r12	      2055	ref-filter.c	FUNCTION_77
0x4000ee8	              0x55	                                push rbp	      2055	ref-filter.c	FUNCTION_77
0x4000ee9	              0x53	                                push rbx	      2055	ref-filter.c	FUNCTION_77
0x4000eea	    0x4881ecc80800	                          sub rsp, 0x8c8	      2055	ref-filter.c	FUNCTION_77
0x4000ef1	    0x64488b042528	                mov rax, qword fs:[0x28]	      2055	ref-filter.c	FUNCTION_77
0x4000efa	    0x48898424b808	            mov qword [rsp + 0x8b8], rax	      2055	ref-filter.c	FUNCTION_77
0x4000f02	            0x31c0	                            xor eax, eax	      2055	ref-filter.c	FUNCTION_77
0x4000f04	        0x4c8b6708	                mov r12, qword [rdi + 8]	      2058	ref-filter.c	FUNCTION_77
0x4000f08	          0x488b1f	                    mov rbx, qword [rdi]	      2059	ref-filter.c	FUNCTION_77
0x4000f0b	          0x486333	                 movsxd rsi, dword [rbx]	      2060	ref-filter.c	FUNCTION_77	CALL_1
0x4000f0e	      0xbf08000000	                              mov edi, 8	      2060	ref-filter.c	FUNCTION_77	CALL_1
0x4000f13	      0xe800000000	                          call 0x4000f18	      2060	ref-filter.c	FUNCTION_77	CALL_1
0x4000f18	          0x4989c5	                            mov r13, rax	      2060	ref-filter.c	FUNCTION_77	CALL_1
0x4000f1b	      0xbe00000000	                              mov esi, 0	      2062	ref-filter.c	FUNCTION_77	CALL_2
0x4000f20	          0x4889e7	                            mov rdi, rsp	      2062	ref-filter.c	FUNCTION_77	CALL_2
0x4000f23	      0xe800000000	                          call 0x4000f28	      2062	ref-filter.c	FUNCTION_77	CALL_2
0x4000f28	          0x833b00	                      cmp dword [rbx], 0	      2064	ref-filter.c	FUNCTION_77	FOR_1
0x4000f2b	            0x7e30	                           jle 0x4000f5d	      2064	ref-filter.c	FUNCTION_77	FOR_1
0x4000f2d	      0xbd00000000	                              mov ebp, 0	      2064	ref-filter.c	FUNCTION_77	FOR_1
0x4000f32	          0x4c63fd	                         movsxd r15, ebp	      2065	ref-filter.c	FUNCTION_77	FOR_1
0x4000f35	        0x488b4308	                mov rax, qword [rbx + 8]	      2065	ref-filter.c	FUNCTION_77	FOR_1
0x4000f39	        0x4e8b34f8	            mov r14, qword [rax + r15*8]	      2065	ref-filter.c	FUNCTION_77	FOR_1
0x4000f3d	        0x498d5638	                   lea rdx, [r14 + 0x38]	      2066	ref-filter.c	FUNCTION_77	FOR_1	CALL_3
0x4000f41	        0x498b7628	            mov rsi, qword [r14 + 0x28] 	      2066	ref-filter.c	FUNCTION_77	FOR_1	CALL_3
0x4000f45	          0x4889e7	                            mov rdi, rsp	      2066	ref-filter.c	FUNCTION_77	FOR_1	CALL_3
0x4000f48	      0xe800000000	                          call 0x4000f4d	      2066	ref-filter.c	FUNCTION_77	FOR_1	CALL_3
0x4000f4d	        0x498b4628	            mov rax, qword [r14 + 0x28] 	      2067	ref-filter.c	FUNCTION_77	FOR_1
0x4000f51	      0x4b8944fd00	            mov qword [r13 + r15*8], rax	      2067	ref-filter.c	FUNCTION_77	FOR_1
0x4000f56	          0x83c501	                              add ebp, 1	      2064	ref-filter.c	FUNCTION_77	FOR_1
0x4000f59	            0x392b	                    cmp dword [rbx], ebp	      2064	ref-filter.c	FUNCTION_77	FOR_1
0x4000f5b	            0x7fd5	                            jg 0x4000f32	      2064	ref-filter.c	FUNCTION_77	FOR_1
0x4000f5d	      0x498b442438	            mov rax, qword [r12 + 0x38] 	      2070	ref-filter.c	FUNCTION_77
0x4000f62	          0x830820	                    or dword [rax], 0x20	      2070	ref-filter.c	FUNCTION_77
0x4000f65	      0x498b742438	            mov rsi, qword [r12 + 0x38] 	      2071	ref-filter.c	FUNCTION_77	CALL_4
0x4000f6a	      0xba00000000	                              mov edx, 0	      2071	ref-filter.c	FUNCTION_77	CALL_4
0x4000f6f	          0x4889e7	                            mov rdi, rsp	      2071	ref-filter.c	FUNCTION_77	CALL_4
0x4000f72	      0xe800000000	                          call 0x4000f77	      2071	ref-filter.c	FUNCTION_77	CALL_4
0x4000f77	      0x804c247604	                 or byte [rsp + 0x76], 4	      2073	ref-filter.c	FUNCTION_77
0x4000f7c	          0x4889e7	                            mov rdi, rsp	      2074	ref-filter.c	FUNCTION_77	IF_1	CALL_5
0x4000f7f	      0xe800000000	                          call 0x4000f84	      2074	ref-filter.c	FUNCTION_77	IF_1	CALL_5
0x4000f84	            0x85c0	                           test eax, eax	      2074	ref-filter.c	FUNCTION_77	IF_1	CALL_5
0x4000f86	            0x7421	                            je 0x4000fa9	      2074	ref-filter.c	FUNCTION_77	IF_1	CALL_5
0x4000f88	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4000f8d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4000f92	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4000f97	      0xe800000000	                          call 0x4000f9c	        54	gettext.h	FUNCTION_93
0x4000f9c	          0x4889c7	                            mov rdi, rax	      2075	ref-filter.c	FUNCTION_77	CALL_7
0x4000f9f	      0xb800000000	                              mov eax, 0	      2075	ref-filter.c	FUNCTION_77	CALL_7
0x4000fa4	      0xe800000000	                          call 0x4000fa9	      2075	ref-filter.c	FUNCTION_77	CALL_7
0x4000fa9	          0x448b3b	                   mov r15d, dword [rbx]	      2077	ref-filter.c	FUNCTION_77
0x4000fac	    0xc70300000000	                      mov dword [rbx], 0	      2078	ref-filter.c	FUNCTION_77
0x4000fb2	          0x4585ff	                         test r15d, r15d	      2080	ref-filter.c	FUNCTION_77	FOR_2
0x4000fb5	            0x7e57	                           jle 0x400100e	      2080	ref-filter.c	FUNCTION_77	FOR_2
0x4000fb7	        0x418d47ff	                      lea eax, [r15 - 1]	      2080	ref-filter.c	FUNCTION_77	FOR_2
0x4000fbb	    0x4c8d34c50800	                    lea r14, [rax*8 + 8]	      2080	ref-filter.c	FUNCTION_77	FOR_2
0x4000fc3	      0xbd00000000	                              mov ebp, 0	      2080	ref-filter.c	FUNCTION_77	FOR_2
0x4000fc8	        0x488b5308	                mov rdx, qword [rbx + 8]	      2081	ref-filter.c	FUNCTION_77	FOR_2
0x4000fcc	        0x488d0c2a	                    lea rcx, [rdx + rbp]	      2081	ref-filter.c	FUNCTION_77	FOR_2
0x4000fd0	          0x488b39	                    mov rdi, qword [rcx]	      2081	ref-filter.c	FUNCTION_77	FOR_2
0x4000fd3	        0x488b4728	            mov rax, qword [rdi + 0x28] 	      2084	ref-filter.c	FUNCTION_77	FOR_2
0x4000fd7	            0x8b00	                    mov eax, dword [rax]	      2084	ref-filter.c	FUNCTION_77	FOR_2
0x4000fd9	          0xc1e805	                              shr eax, 5	      2086	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4000fdc	          0x83e001	                              and eax, 1	      2086	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4000fdf	    0x41837c243001	               cmp dword [r12 + 0x30], 1	      2086	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4000fe5	        0x400f94c6	                                sete sil	      2086	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4000fe9	          0x4038f0	                             cmp al, sil	      2086	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4000fec	            0x7512	                           jne 0x4001000	      2086	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4000fee	            0x8b03	                    mov eax, dword [rbx]	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4000ff0	          0x8d7001	                      lea esi, [rax + 1]	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4000ff3	            0x8933	                    mov dword [rbx], esi	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4000ff5	          0x488b09	                    mov rcx, qword [rcx]	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4000ff8	            0x4898	                                    cdqe	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4000ffa	        0x48890cc2	            mov qword [rdx + rax*8], rcx	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4000ffe	            0xeb05	                           jmp 0x4001005	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4001000	      0xe817fcffff	                call sym.free_array_item	      2089	ref-filter.c	FUNCTION_77	FOR_2	CALL_8
0x4001005	        0x4883c508	                              add rbp, 8	      2089	ref-filter.c	FUNCTION_77	FOR_2	CALL_8
0x4001009	          0x4c39f5	                            cmp rbp, r14	      2080	ref-filter.c	FUNCTION_77	FOR_2
0x400100c	            0x75ba	                           jne 0x4000fc8	      2080	ref-filter.c	FUNCTION_77	FOR_2
0x400100e	      0xbaff070004	                      mov edx, 0x40007ff	      2092	ref-filter.c	FUNCTION_77	CALL_9
0x4001013	          0x4c89ee	                            mov rsi, r13	      2092	ref-filter.c	FUNCTION_77	CALL_9
0x4001016	          0x4489ff	                           mov edi, r15d	      2092	ref-filter.c	FUNCTION_77	CALL_9
0x4001019	      0xe800000000	                          call 0x400101e	      2092	ref-filter.c	FUNCTION_77	CALL_9
0x400101e	      0x498b7c2438	            mov rdi, qword [r12 + 0x38] 	      2093	ref-filter.c	FUNCTION_77	CALL_10
0x4001023	      0xbeff070004	                      mov esi, 0x40007ff	      2093	ref-filter.c	FUNCTION_77	CALL_10
0x4001028	      0xe800000000	                          call 0x400102d	      2093	ref-filter.c	FUNCTION_77	CALL_10
0x400102d	          0x4c89ef	                            mov rdi, r13	      2094	ref-filter.c	FUNCTION_77	CALL_11
0x4001030	      0xe800000000	                          call 0x4001035	      2094	ref-filter.c	FUNCTION_77	CALL_11
0x4001035	    0x488b8424b808	           mov rax, qword [rsp + 0x8b8] 	      2095	ref-filter.c	FUNCTION_77
0x400103d	    0x644833042528	                xor rax, qword fs:[0x28]	      2095	ref-filter.c	FUNCTION_77
0x4001046	            0x7405	                            je 0x400104d	      2095	ref-filter.c	FUNCTION_77
0x4001048	      0xe800000000	                          call 0x400104d	      2095	ref-filter.c	FUNCTION_77
0x400104d	    0x4881c4c80800	                          add rsp, 0x8c8	      2095	ref-filter.c	FUNCTION_77
0x4001054	              0x5b	                                 pop rbx	      2095	ref-filter.c	FUNCTION_77
0x4001055	              0x5d	                                 pop rbp	      2095	ref-filter.c	FUNCTION_77
0x4001056	            0x415c	                                 pop r12	      2095	ref-filter.c	FUNCTION_77
0x4001058	            0x415d	                                 pop r13	      2095	ref-filter.c	FUNCTION_77
0x400105a	            0x415e	                                 pop r14	      2095	ref-filter.c	FUNCTION_77
0x400105c	            0x415f	                                 pop r15	      2095	ref-filter.c	FUNCTION_77
0x400105e	              0xc3	                                     ret	      2095	ref-filter.c	FUNCTION_77
if_atom_handler	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,0:functions,0:CALL,2:ELSE,0	25
0x40011b3	            0x4154	                                push r12	       638	ref-filter.c	FUNCTION_24
0x40011b5	              0x55	                                push rbp	       638	ref-filter.c	FUNCTION_24
0x40011b6	              0x53	                                push rbx	       638	ref-filter.c	FUNCTION_24
0x40011b7	          0x4989fc	                            mov r12, rdi	       638	ref-filter.c	FUNCTION_24
0x40011ba	          0x4889f5	                            mov rbp, rsi	       638	ref-filter.c	FUNCTION_24
0x40011bd	      0xbe01000000	                              mov esi, 1	       640	ref-filter.c	FUNCTION_24	CALL_1
0x40011c2	      0xbf18000000	                           mov edi, 0x18	       640	ref-filter.c	FUNCTION_24	CALL_1
0x40011c7	      0xe800000000	                          call 0x40011cc	       640	ref-filter.c	FUNCTION_24	CALL_1
0x40011cc	          0x4889c3	                            mov rbx, rax	       640	ref-filter.c	FUNCTION_24	CALL_1
0x40011cf	      0x498b442418	            mov rax, qword [r12 + 0x18] 	       642	ref-filter.c	FUNCTION_24
0x40011d4	        0x488b4018	            mov rax, qword [rax + 0x18] 	       642	ref-filter.c	FUNCTION_24
0x40011d8	        0x48894308	                mov qword [rbx + 8], rax	       642	ref-filter.c	FUNCTION_24
0x40011dc	      0x498b442418	            mov rax, qword [r12 + 0x18] 	       643	ref-filter.c	FUNCTION_24
0x40011e1	          0x8b4010	            mov eax, dword [rax + 0x10] 	       643	ref-filter.c	FUNCTION_24
0x40011e4	            0x8903	                    mov dword [rbx], eax	       643	ref-filter.c	FUNCTION_24
0x40011e6	        0x488d7d08	                      lea rdi, [rbp + 8]	       645	ref-filter.c	FUNCTION_24	CALL_2
0x40011ea	      0xe8a9feffff	             call sym.push_stack_element	       645	ref-filter.c	FUNCTION_24	CALL_2
0x40011ef	        0x488b4508	                mov rax, qword [rbp + 8]	       646	ref-filter.c	FUNCTION_24
0x40011f3	    0x48c740200000	               mov qword [rax + 0x20], 0	       647	ref-filter.c	FUNCTION_24
0x40011fb	        0x48895828	             mov qword [rax + 0x28], rbx	       648	ref-filter.c	FUNCTION_24
0x40011ff	      0xb800000000	                              mov eax, 0	       650	ref-filter.c	FUNCTION_24
0x4001204	              0x5b	                                 pop rbx	       650	ref-filter.c	FUNCTION_24
0x4001205	              0x5d	                                 pop rbp	       650	ref-filter.c	FUNCTION_24
0x4001206	            0x415c	                                 pop r12	       650	ref-filter.c	FUNCTION_24
0x4001208	              0xc3	                                     ret	       650	ref-filter.c	FUNCTION_24
append_literal	SWITCH,0:FOR,0:WHILE,1:DO,0:IF,3:functions,0:CALL,3:ELSE,1	80
0x4001dc1	            0x4156	                                push r14	      2201	ref-filter.c	FUNCTION_82
0x4001dc3	            0x4155	                                push r13	      2201	ref-filter.c	FUNCTION_82
0x4001dc5	            0x4154	                                push r12	      2201	ref-filter.c	FUNCTION_82
0x4001dc7	              0x55	                                push rbp	      2201	ref-filter.c	FUNCTION_82
0x4001dc8	              0x53	                                push rbx	      2201	ref-filter.c	FUNCTION_82
0x4001dc9	          0x4889fd	                            mov rbp, rdi	      2201	ref-filter.c	FUNCTION_82
0x4001dcc	          0x4989f4	                            mov r12, rsi	      2201	ref-filter.c	FUNCTION_82
0x4001dcf	        0x488b5a08	                mov rbx, qword [rdx + 8]	      2202	ref-filter.c	FUNCTION_82
0x4001dd3	        0x4c8d6b08	                      lea r13, [rbx + 8]	      2202	ref-filter.c	FUNCTION_82
0x4001dd7	      0xe9d5000000	                           jmp 0x4001eb1	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x4001ddc	            0x3c25	                            cmp al, 0x25	      2205	ref-filter.c	FUNCTION_82	WHILE_1	IF_1
0x4001dde	     0xf8584000000	                           jne 0x4001e68	      2205	ref-filter.c	FUNCTION_82	WHILE_1	IF_1
0x4001de4	         0xfb64501	               movzx eax, byte [rbp + 1]	      2206	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	IF_2
0x4001de8	            0x3c25	                            cmp al, 0x25	      2206	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	IF_2
0x4001dea	            0x7506	                           jne 0x4001df2	      2206	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	IF_2
0x4001dec	        0x4883c501	                              add rbp, 1	      2207	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	IF_2
0x4001df0	            0xeb76	                           jmp 0x4001e68	      2207	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	IF_2
0x4001df2	           0xfb6c0	                           movzx eax, al	      1273	cache.h	FUNCTION_168
0x4001df5	    0x440fb6b00000	                  movzx r14d, byte [rax]	      1273	cache.h	FUNCTION_168
0x4001dfd	        0x410fbec6	                         movsx eax, r14b	      1273	cache.h	FUNCTION_168
0x4001e01	          0x4189c6	                           mov r14d, eax	      1283	cache.h	FUNCTION_169	CALL_2
0x4001e04	      0xa9f0ffffff	                    test eax, 0xfffffff0	      1283	cache.h	FUNCTION_169	CALL_2
0x4001e09	            0x7512	                           jne 0x4001e1d	      1283	cache.h	FUNCTION_169	CALL_2
0x4001e0b	         0xfb65502	               movzx edx, byte [rbp + 2]	      1273	cache.h	FUNCTION_168
0x4001e0f	    0x440fbeb20000	                  movsx r14d, byte [rdx]	      1283	cache.h	FUNCTION_169	CALL_2
0x4001e17	          0xc1e004	                              shl eax, 4	      1283	cache.h	FUNCTION_169	CALL_2
0x4001e1a	          0x4109c6	                            or r14d, eax	      1283	cache.h	FUNCTION_169	CALL_2
0x4001e1d	          0x4585f6	                         test r14d, r14d	      2210	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	IF_3
0x4001e20	            0x7846	                            js 0x4001e68	      2210	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	IF_3
0x4001e22	        0x488b4308	                mov rax, qword [rbx + 8]	       141	strbuf.h	FUNCTION_96
0x4001e26	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_96
0x4001e29	            0x740a	                            je 0x4001e35	       141	strbuf.h	FUNCTION_96
0x4001e2b	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_98	IF_1	CALL_1
0x4001e2f	        0x48394310	            cmp qword [rbx + 0x10], rax 	       227	strbuf.h	FUNCTION_98	IF_1	CALL_1
0x4001e33	            0x750d	                           jne 0x4001e42	       227	strbuf.h	FUNCTION_98	IF_1	CALL_1
0x4001e35	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_98	CALL_2
0x4001e3a	          0x4c89ef	                            mov rdi, r13	       228	strbuf.h	FUNCTION_98	CALL_2
0x4001e3d	      0xe800000000	                          call 0x4001e42	       228	strbuf.h	FUNCTION_98	CALL_2
0x4001e42	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       229	strbuf.h	FUNCTION_98
0x4001e46	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_98
0x4001e4a	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_98
0x4001e4e	        0x48894b10	             mov qword [rbx + 0x10], rcx	       229	strbuf.h	FUNCTION_98
0x4001e52	        0x44883402	              mov byte [rdx + rax], r14b	       229	strbuf.h	FUNCTION_98
0x4001e56	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       230	strbuf.h	FUNCTION_98
0x4001e5a	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_98
0x4001e5e	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_98
0x4001e62	        0x4883c503	                              add rbp, 3	      2212	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	IF_3
0x4001e66	            0xeb49	                           jmp 0x4001eb1	      2213	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	IF_3
0x4001e68	      0x440fb67500	                  movzx r14d, byte [rbp]	      2217	ref-filter.c	FUNCTION_82	WHILE_1	CALL_3
0x4001e6d	        0x488b4308	                mov rax, qword [rbx + 8]	       141	strbuf.h	FUNCTION_96
0x4001e71	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_96
0x4001e74	            0x740a	                            je 0x4001e80	       141	strbuf.h	FUNCTION_96
0x4001e76	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_98	IF_1	CALL_1
0x4001e7a	        0x48394310	            cmp qword [rbx + 0x10], rax 	       227	strbuf.h	FUNCTION_98	IF_1	CALL_1
0x4001e7e	            0x750d	                           jne 0x4001e8d	       227	strbuf.h	FUNCTION_98	IF_1	CALL_1
0x4001e80	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_98	CALL_2
0x4001e85	          0x4c89ef	                            mov rdi, r13	       228	strbuf.h	FUNCTION_98	CALL_2
0x4001e88	      0xe800000000	                          call 0x4001e8d	       228	strbuf.h	FUNCTION_98	CALL_2
0x4001e8d	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       229	strbuf.h	FUNCTION_98
0x4001e91	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_98
0x4001e95	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_98
0x4001e99	        0x48894b10	             mov qword [rbx + 0x10], rcx	       229	strbuf.h	FUNCTION_98
0x4001e9d	        0x44883402	              mov byte [rdx + rax], r14b	       229	strbuf.h	FUNCTION_98
0x4001ea1	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       230	strbuf.h	FUNCTION_98
0x4001ea5	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_98
0x4001ea9	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_98
0x4001ead	        0x4883c501	                              add rbp, 1	      2218	ref-filter.c	FUNCTION_82	WHILE_1
0x4001eb1	         0xfb64500	                   movzx eax, byte [rbp]	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x4001eb5	            0x84c0	                             test al, al	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x4001eb7	            0x7412	                            je 0x4001ecb	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x4001eb9	          0x4d85e4	                           test r12, r12	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x4001ebc	     0xf841affffff	                            je 0x4001ddc	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x4001ec2	          0x4c39e5	                            cmp rbp, r12	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x4001ec5	     0xf8211ffffff	                            jb 0x4001ddc	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x4001ecb	              0x5b	                                 pop rbx	      2220	ref-filter.c	FUNCTION_82
0x4001ecc	              0x5d	                                 pop rbp	      2220	ref-filter.c	FUNCTION_82
0x4001ecd	            0x415c	                                 pop r12	      2220	ref-filter.c	FUNCTION_82
0x4001ecf	            0x415d	                                 pop r13	      2220	ref-filter.c	FUNCTION_82
0x4001ed1	            0x415e	                                 pop r14	      2220	ref-filter.c	FUNCTION_82
0x4001ed3	              0xc3	                                     ret	      2220	ref-filter.c	FUNCTION_82
pop_stack_element	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,1:functions,0:CALL,3:ELSE,0	20
0x400105f	            0x4154	                                push r12	       567	ref-filter.c	FUNCTION_20
0x4001061	              0x55	                                push rbp	       567	ref-filter.c	FUNCTION_20
0x4001062	              0x53	                                push rbx	       567	ref-filter.c	FUNCTION_20
0x4001063	          0x4989fc	                            mov r12, rdi	       567	ref-filter.c	FUNCTION_20
0x4001066	          0x488b1f	                    mov rbx, qword [rdi]	       568	ref-filter.c	FUNCTION_20
0x4001069	          0x488b2b	                    mov rbp, qword [rbx]	       569	ref-filter.c	FUNCTION_20
0x400106c	          0x4885ed	                           test rbp, rbp	       571	ref-filter.c	FUNCTION_20	IF_1
0x400106f	            0x740d	                            je 0x400107e	       571	ref-filter.c	FUNCTION_20	IF_1
0x4001071	        0x488d7308	                      lea rsi, [rbx + 8]	       572	ref-filter.c	FUNCTION_20	CALL_1
0x4001075	        0x488d7d08	                      lea rdi, [rbp + 8]	       572	ref-filter.c	FUNCTION_20	CALL_1
0x4001079	      0xe800000000	                          call 0x400107e	       572	ref-filter.c	FUNCTION_20	CALL_1
0x400107e	        0x488d7b08	                      lea rdi, [rbx + 8]	       573	ref-filter.c	FUNCTION_20	CALL_2
0x4001082	      0xe800000000	                          call 0x4001087	       573	ref-filter.c	FUNCTION_20	CALL_2
0x4001087	          0x4889df	                            mov rdi, rbx	       574	ref-filter.c	FUNCTION_20	CALL_3
0x400108a	      0xe800000000	                          call 0x400108f	       574	ref-filter.c	FUNCTION_20	CALL_3
0x400108f	        0x49892c24	                    mov qword [r12], rbp	       575	ref-filter.c	FUNCTION_20
0x4001093	              0x5b	                                 pop rbx	       576	ref-filter.c	FUNCTION_20
0x4001094	              0x5d	                                 pop rbp	       576	ref-filter.c	FUNCTION_20
0x4001095	            0x415c	                                 pop r12	       576	ref-filter.c	FUNCTION_20
0x4001097	              0xc3	                                     ret	       576	ref-filter.c	FUNCTION_20
objectname_atom_parser	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,5:functions,0:CALL,7:ELSE,3	103
0x4002a45	            0x4155	                                push r13	       272	ref-filter.c	FUNCTION_10
0x4002a47	            0x4154	                                push r12	       272	ref-filter.c	FUNCTION_10
0x4002a49	              0x55	                                push rbp	       272	ref-filter.c	FUNCTION_10
0x4002a4a	              0x53	                                push rbx	       272	ref-filter.c	FUNCTION_10
0x4002a4b	        0x4883ec18	                           sub rsp, 0x18	       272	ref-filter.c	FUNCTION_10
0x4002a4f	          0x4989f4	                            mov r12, rsi	       272	ref-filter.c	FUNCTION_10
0x4002a52	    0x64488b042528	                mov rax, qword fs:[0x28]	       272	ref-filter.c	FUNCTION_10
0x4002a5b	      0x4889442408	                mov qword [rsp + 8], rax	       272	ref-filter.c	FUNCTION_10
0x4002a60	            0x31c0	                            xor eax, eax	       272	ref-filter.c	FUNCTION_10
0x4002a62	          0x4885d2	                           test rdx, rdx	       273	ref-filter.c	FUNCTION_10	IF_1
0x4002a65	            0x750c	                           jne 0x4002a73	       273	ref-filter.c	FUNCTION_10	IF_1
0x4002a67	    0xc74610000000	               mov dword [rsi + 0x10], 0	       274	ref-filter.c	FUNCTION_10	IF_1
0x4002a6e	      0xe9cc000000	                           jmp 0x4002b3f	       274	ref-filter.c	FUNCTION_10	IF_1
0x4002a73	          0x4889d5	                            mov rbp, rdx	       274	ref-filter.c	FUNCTION_10	IF_1
0x4002a76	          0x4989cd	                            mov r13, rcx	       274	ref-filter.c	FUNCTION_10	IF_1
0x4002a79	      0xbf00000000	                              mov edi, 0	       275	ref-filter.c	FUNCTION_10	ELSE_1	IF_2	CALL_1
0x4002a7e	      0xb906000000	                              mov ecx, 6	       275	ref-filter.c	FUNCTION_10	ELSE_1	IF_2	CALL_1
0x4002a83	          0x4889d6	                            mov rsi, rdx	       275	ref-filter.c	FUNCTION_10	ELSE_1	IF_2	CALL_1
0x4002a86	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       275	ref-filter.c	FUNCTION_10	ELSE_1	IF_2	CALL_1
0x4002a88	           0xf97c0	                                 seta al	       275	ref-filter.c	FUNCTION_10	ELSE_1	IF_2	CALL_1
0x4002a8b	           0xf92c2	                                 setb dl	       275	ref-filter.c	FUNCTION_10	ELSE_1	IF_2	CALL_1
0x4002a8e	            0x29d0	                            sub eax, edx	       275	ref-filter.c	FUNCTION_10	ELSE_1	IF_2	CALL_1
0x4002a90	           0xfbec0	                           movsx eax, al	       275	ref-filter.c	FUNCTION_10	ELSE_1	IF_2	CALL_1
0x4002a93	          0x4889eb	                            mov rbx, rbp	       275	ref-filter.c	FUNCTION_10	ELSE_1	IF_2	CALL_1
0x4002a96	      0xba00000000	                              mov edx, 0	       275	ref-filter.c	FUNCTION_10	ELSE_1	IF_2	CALL_1
0x4002a9b	            0x85c0	                           test eax, eax	       275	ref-filter.c	FUNCTION_10	ELSE_1	IF_2	CALL_1
0x4002a9d	            0x750e	                           jne 0x4002aad	       275	ref-filter.c	FUNCTION_10	ELSE_1	IF_2	CALL_1
0x4002a9f	    0x41c744241002	               mov dword [r12 + 0x10], 2	       276	ref-filter.c	FUNCTION_10	ELSE_1	IF_2
0x4002aa8	      0xe992000000	                           jmp 0x4002b3f	       276	ref-filter.c	FUNCTION_10	ELSE_1	IF_2
0x4002aad	           0xfb602	                   movzx eax, byte [rdx]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4002ab0	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4002ab2	     0xf8499000000	                            je 0x4002b51	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4002ab8	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002abc	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002ac0	          0x3a43ff	                  cmp al, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002ac3	            0x74e8	                            je 0x4002aad	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002ac5	      0xe9b6000000	                           jmp 0x4002b80	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002aca	      0xba0a000000	                            mov edx, 0xa	      1018	git-compat-util.h	FUNCTION_128	CALL_2
0x4002acf	          0x4889e6	                            mov rsi, rsp	      1018	git-compat-util.h	FUNCTION_128	CALL_2
0x4002ad2	          0x4889df	                            mov rdi, rbx	      1018	git-compat-util.h	FUNCTION_128	CALL_2
0x4002ad5	      0xe800000000	                          call 0x4002ada	      1018	git-compat-util.h	FUNCTION_128	CALL_2
0x4002ada	          0x4889c2	                            mov rdx, rax	      1018	git-compat-util.h	FUNCTION_128	CALL_2
0x4002add	          0x8b4500	                    mov eax, dword [rbp]	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002ae0	            0x85c0	                           test eax, eax	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002ae2	            0x751e	                           jne 0x4002b02	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002ae4	        0x488b0c24	                    mov rcx, qword [rsp]	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002ae8	          0x803900	                       cmp byte [rcx], 0	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002aeb	            0x7515	                           jne 0x4002b02	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002aed	          0x4839cb	                            cmp rbx, rcx	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002af0	            0x7410	                            je 0x4002b02	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002af2	            0x89d1	                            mov ecx, edx	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002af4	          0x4839ca	                            cmp rdx, rcx	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002af7	            0x7509	                           jne 0x4002b02	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002af9	      0x4189542414	             mov dword [r12 + 0x14], edx	      1021	git-compat-util.h	FUNCTION_128
0x4002afe	            0x85d2	                           test edx, edx	       279	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_4	CALL_3
0x4002b00	            0x752e	                           jne 0x4002b30	       279	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_4	CALL_3
0x4002b02	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4002b07	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4002b0c	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4002b11	      0xe800000000	                          call 0x4002b16	        54	gettext.h	FUNCTION_93
0x4002b16	          0x4889d9	                            mov rcx, rbx	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x4002b19	          0x4889c2	                            mov rdx, rax	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x4002b1c	      0xbeffffffff	                     mov esi, 0xffffffff	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x4002b21	          0x4c89ef	                            mov rdi, r13	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x4002b24	      0xb800000000	                              mov eax, 0	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x4002b29	      0xe827d8ffff	                call sym.strbuf_addf_ret	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x4002b2e	            0xeb0f	                           jmp 0x4002b3f	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x4002b30	    0x8b0d00000000	            mov ecx, dword [0x04002b36] 	       282	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_5
0x4002b36	            0x39ca	                            cmp edx, ecx	       282	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_5
0x4002b38	            0x7305	                           jae 0x4002b3f	       282	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_5
0x4002b3a	      0x41894c2414	             mov dword [r12 + 0x14], ecx	       283	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_5
0x4002b3f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       287	ref-filter.c	FUNCTION_10
0x4002b44	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       287	ref-filter.c	FUNCTION_10
0x4002b4d	            0x7464	                            je 0x4002bb3	       287	ref-filter.c	FUNCTION_10
0x4002b4f	            0xeb5d	                           jmp 0x4002bae	       287	ref-filter.c	FUNCTION_10
0x4002b51	    0x41c744241001	               mov dword [r12 + 0x10], 1	       278	ref-filter.c	FUNCTION_10	ELSE_2	IF_3
0x4002b5a	      0xe800000000	                          call 0x4002b5f	      1014	git-compat-util.h	FUNCTION_128
0x4002b5f	          0x4889c5	                            mov rbp, rax	      1014	git-compat-util.h	FUNCTION_128
0x4002b62	    0xc70000000000	                      mov dword [rax], 0	      1014	git-compat-util.h	FUNCTION_128
0x4002b68	      0xbe2d000000	                           mov esi, 0x2d	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x4002b6d	          0x4889df	                            mov rdi, rbx	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x4002b70	      0xe800000000	                          call 0x4002b75	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x4002b75	          0x4885c0	                           test rax, rax	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x4002b78	     0xf844cffffff	                            je 0x4002aca	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x4002b7e	            0xeb82	                           jmp 0x4002b02	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x4002b80	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4002b85	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4002b8a	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4002b8f	      0xe800000000	                          call 0x4002b94	        54	gettext.h	FUNCTION_93
0x4002b94	          0x4889e9	                            mov rcx, rbp	       285	ref-filter.c	FUNCTION_10	CALL_7
0x4002b97	          0x4889c2	                            mov rdx, rax	       285	ref-filter.c	FUNCTION_10	CALL_7
0x4002b9a	      0xbeffffffff	                     mov esi, 0xffffffff	       285	ref-filter.c	FUNCTION_10	CALL_7
0x4002b9f	          0x4c89ef	                            mov rdi, r13	       285	ref-filter.c	FUNCTION_10	CALL_7
0x4002ba2	      0xb800000000	                              mov eax, 0	       285	ref-filter.c	FUNCTION_10	CALL_7
0x4002ba7	      0xe8a9d7ffff	                call sym.strbuf_addf_ret	       285	ref-filter.c	FUNCTION_10	CALL_7
0x4002bac	            0xeb91	                           jmp 0x4002b3f	       285	ref-filter.c	FUNCTION_10	CALL_7
0x4002bae	      0xe800000000	                          call 0x4002bb3	       287	ref-filter.c	FUNCTION_10
0x4002bb3	        0x4883c418	                           add rsp, 0x18	       287	ref-filter.c	FUNCTION_10
0x4002bb7	              0x5b	                                 pop rbx	       287	ref-filter.c	FUNCTION_10
0x4002bb8	              0x5d	                                 pop rbp	       287	ref-filter.c	FUNCTION_10
0x4002bb9	            0x415c	                                 pop r12	       287	ref-filter.c	FUNCTION_10
0x4002bbb	            0x415d	                                 pop r13	       287	ref-filter.c	FUNCTION_10
0x4002bbd	              0xc3	                                     ret	       287	ref-filter.c	FUNCTION_10
append_atom	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,1:functions,0:CALL,2:ELSE,1	22
0x4001298	        0x4883ec08	                              sub rsp, 8	       543	ref-filter.c	FUNCTION_18
0x400129c	        0x4c8b4608	                 mov r8, qword [rsi + 8]	       550	ref-filter.c	FUNCTION_18	IF_1
0x40012a0	        0x49833800	                       cmp qword [r8], 0	       550	ref-filter.c	FUNCTION_18	IF_1
0x40012a4	            0x7513	                           jne 0x40012b9	       550	ref-filter.c	FUNCTION_18	IF_1
0x40012a6	        0x4983c008	                               add r8, 8	       551	ref-filter.c	FUNCTION_18	CALL_1
0x40012aa	            0x8b16	                    mov edx, dword [rsi]	       551	ref-filter.c	FUNCTION_18	CALL_1
0x40012ac	          0x488b37	                    mov rsi, qword [rdi]	       551	ref-filter.c	FUNCTION_18	CALL_1
0x40012af	          0x4c89c7	                             mov rdi, r8	       551	ref-filter.c	FUNCTION_18	CALL_1
0x40012b2	      0xe88bffffff	               call sym.quote_formatting	       551	ref-filter.c	FUNCTION_18	CALL_1
0x40012b7	            0xeb24	                           jmp 0x40012dd	       551	ref-filter.c	FUNCTION_18	CALL_1
0x40012b9	          0x488b37	                    mov rsi, qword [rdi]	       553	ref-filter.c	FUNCTION_18	CALL_2
0x40012bc	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_99	CALL_2
0x40012c1	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_99	CALL_2
0x40012c8	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_99	CALL_2
0x40012cb	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_99	CALL_2
0x40012cd	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_99	CALL_2
0x40012d0	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_99	CALL_2
0x40012d4	        0x498d7808	                       lea rdi, [r8 + 8]	       553	ref-filter.c	FUNCTION_18	CALL_2
0x40012d8	      0xe800000000	                          call 0x40012dd	       279	strbuf.h	FUNCTION_99	CALL_2
0x40012dd	      0xb800000000	                              mov eax, 0	       555	ref-filter.c	FUNCTION_18
0x40012e2	        0x4883c408	                              add rsp, 8	       555	ref-filter.c	FUNCTION_18
0x40012e6	              0xc3	                                     ret	       555	ref-filter.c	FUNCTION_18
ref_array_clear	SWITCH,0:FOR,1:WHILE,0:DO,0:IF,0:functions,0:CALL,1:ELSE,0	23
0x400465d	              0x55	                                push rbp	      2045	ref-filter.c	FUNCTION_76
0x400465e	              0x53	                                push rbx	      2045	ref-filter.c	FUNCTION_76
0x400465f	        0x4883ec08	                              sub rsp, 8	      2045	ref-filter.c	FUNCTION_76
0x4004663	          0x4889fd	                            mov rbp, rdi	      2045	ref-filter.c	FUNCTION_76
0x4004666	          0x833f00	                      cmp dword [rdi], 0	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x4004669	            0x7e1d	                           jle 0x4004688	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x400466b	      0xbb00000000	                              mov ebx, 0	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x4004670	          0x4863d3	                         movsxd rdx, ebx	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x4004673	        0x488b4508	                mov rax, qword [rbp + 8]	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x4004677	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x400467b	      0xe89cc5ffff	                call sym.free_array_item	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x4004680	          0x83c301	                              add ebx, 1	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x4004683	          0x395d00	                    cmp dword [rbp], ebx	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x4004686	            0x7fe8	                            jg 0x4004670	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x4004688	        0x488b7d08	                mov rdi, qword [rbp + 8]	      2050	ref-filter.c	FUNCTION_76
0x400468c	      0xe800000000	                          call 0x4004691	      2050	ref-filter.c	FUNCTION_76
0x4004691	    0x48c745080000	                  mov qword [rbp + 8], 0	      2050	ref-filter.c	FUNCTION_76
0x4004699	    0xc74504000000	                  mov dword [rbp + 4], 0	      2051	ref-filter.c	FUNCTION_76
0x40046a0	    0xc74500000000	                      mov dword [rbp], 0	      2051	ref-filter.c	FUNCTION_76
0x40046a7	        0x4883c408	                              add rsp, 8	      2052	ref-filter.c	FUNCTION_76
0x40046ab	              0x5b	                                 pop rbx	      2052	ref-filter.c	FUNCTION_76
0x40046ac	              0x5d	                                 pop rbp	      2052	ref-filter.c	FUNCTION_76
0x40046ad	              0xc3	                                     ret	      2052	ref-filter.c	FUNCTION_76
get_ref_atom_value	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,2:functions,0:CALL,2:ELSE,0	38
0x400403f	            0x4154	                                push r12	      1612	ref-filter.c	FUNCTION_58
0x4004041	              0x55	                                push rbp	      1612	ref-filter.c	FUNCTION_58
0x4004042	              0x53	                                push rbx	      1612	ref-filter.c	FUNCTION_58
0x4004043	          0x4889fd	                            mov rbp, rdi	      1612	ref-filter.c	FUNCTION_58
0x4004046	            0x89f3	                            mov ebx, esi	      1612	ref-filter.c	FUNCTION_58
0x4004048	          0x4989d4	                            mov r12, rdx	      1612	ref-filter.c	FUNCTION_58
0x400404b	      0x48837f3000	               cmp qword [rdi + 0x30], 0	      1613	ref-filter.c	FUNCTION_58	IF_1
0x4004050	            0x7548	                           jne 0x400409a	      1613	ref-filter.c	FUNCTION_58	IF_1
0x4004052	          0x4889ce	                            mov rsi, rcx	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x4004055	      0xe882faffff	                 call sym.populate_value	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x400405a	            0x89c2	                            mov edx, eax	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x400405c	      0xb8ffffffff	                     mov eax, 0xffffffff	      1615	ref-filter.c	FUNCTION_58	IF_1	IF_2
0x4004061	            0x85d2	                           test edx, edx	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x4004063	            0x7549	                           jne 0x40040ae	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x4004065	        0x488b7530	            mov rsi, qword [rbp + 0x30] 	      1616	ref-filter.c	FUNCTION_58	IF_1	CALL_2
0x4004069	    0x8b0d00000000	            mov ecx, dword [0x0400406f] 	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x400406f	            0x85c9	                           test ecx, ecx	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004071	            0x7e27	                           jle 0x400409a	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004073	          0x4889f0	                            mov rax, rsi	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004076	          0x8d51ff	                      lea edx, [rcx - 1]	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004079	        0x4883c201	                              add rdx, 1	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x400407d	        0x48c1e205	                              shl rdx, 5	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004081	          0x4801f2	                            add rdx, rsi	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004084	        0x48833800	                      cmp qword [rax], 0	      1196	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x4004088	            0x7507	                           jne 0x4004091	      1196	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x400408a	    0x48c700000000	                      mov qword [rax], 0	      1197	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x4004091	        0x4883c020	                           add rax, 0x20	      1197	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x4004095	          0x4839d0	                            cmp rax, rdx	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004098	            0x75ea	                           jne 0x4004084	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x400409a	          0x4863db	                         movsxd rbx, ebx	      1618	ref-filter.c	FUNCTION_58
0x400409d	        0x48c1e305	                              shl rbx, 5	      1618	ref-filter.c	FUNCTION_58
0x40040a1	        0x48035d30	             add rbx, qword [rbp + 0x30]	      1618	ref-filter.c	FUNCTION_58
0x40040a5	        0x49891c24	                    mov qword [r12], rbx	      1618	ref-filter.c	FUNCTION_58
0x40040a9	      0xb800000000	                              mov eax, 0	      1619	ref-filter.c	FUNCTION_58
0x40040ae	              0x5b	                                 pop rbx	      1620	ref-filter.c	FUNCTION_58
0x40040af	              0x5d	                                 pop rbp	      1620	ref-filter.c	FUNCTION_58
0x40040b0	            0x415c	                                 pop r12	      1620	ref-filter.c	FUNCTION_58
0x40040b2	              0xc3	                                     ret	      1620	ref-filter.c	FUNCTION_58
grab_objectname	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,4:functions,0:CALL,8:ELSE,3	47
0x400161a	            0x4154	                                push r12	       815	ref-filter.c	ELSE_1	FUNCTION_32
0x400161c	              0x55	                                push rbp	       815	ref-filter.c	ELSE_1	FUNCTION_32
0x400161d	              0x53	                                push rbx	       815	ref-filter.c	ELSE_1	FUNCTION_32
0x400161e	          0x4989f4	                            mov r12, rsi	       815	ref-filter.c	ELSE_1	FUNCTION_32
0x4001621	          0x4889d5	                            mov rbp, rdx	       815	ref-filter.c	ELSE_1	FUNCTION_32
0x4001624	          0x4889cb	                            mov rbx, rcx	       815	ref-filter.c	ELSE_1	FUNCTION_32
0x4001627	      0xbe00000000	                              mov esi, 0	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x400162c	      0xe800000000	                          call 0x4001631	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x4001631	            0x85c0	                           test eax, eax	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x4001633	            0x747a	                            je 0x40016af	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x4001635	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       817	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x4001638	          0x83f802	                              cmp eax, 2	       817	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x400163b	            0x7521	                           jne 0x400165e	       817	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x400163d	    0x8b3500000000	            mov esi, dword [0x04001643] 	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x4001643	          0x4c89e7	                            mov rdi, r12	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x4001646	      0xe800000000	                          call 0x400164b	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x400164b	          0x4889c7	                            mov rdi, rax	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x400164e	      0xe800000000	                          call 0x4001653	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x4001653	        0x48894500	                    mov qword [rbp], rax	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x4001657	      0xb801000000	                              mov eax, 1	       819	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x400165c	            0xeb51	                           jmp 0x40016af	       819	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x400165e	            0x85c0	                           test eax, eax	       820	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x4001660	            0x751b	                           jne 0x400167d	       820	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x4001662	          0x4c89e7	                            mov rdi, r12	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x4001665	      0xe800000000	                          call 0x400166a	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x400166a	          0x4889c7	                            mov rdi, rax	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x400166d	      0xe800000000	                          call 0x4001672	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x4001672	        0x48894500	                    mov qword [rbp], rax	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x4001676	      0xb801000000	                              mov eax, 1	       822	ref-filter.c	FUNCTION_32	IF_1	IF_3
0x400167b	            0xeb32	                           jmp 0x40016af	       822	ref-filter.c	FUNCTION_32	IF_1	IF_3
0x400167d	          0x83f801	                              cmp eax, 1	       823	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4
0x4001680	            0x751e	                           jne 0x40016a0	       823	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4
0x4001682	          0x8b7314	            mov esi, dword [rbx + 0x14] 	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x4001685	          0x4c89e7	                            mov rdi, r12	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x4001688	      0xe800000000	                          call 0x400168d	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x400168d	          0x4889c7	                            mov rdi, rax	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x4001690	      0xe800000000	                          call 0x4001695	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x4001695	        0x48894500	                    mov qword [rbp], rax	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x4001699	      0xb801000000	                              mov eax, 1	       825	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4
0x400169e	            0xeb0f	                           jmp 0x40016af	       825	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4
0x40016a0	      0xbf00000000	                              mov edi, 0	       827	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	CALL_8
0x40016a5	      0xb800000000	                              mov eax, 0	       827	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	CALL_8
0x40016aa	      0xe800000000	                          call 0x40016af	       827	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	CALL_8
0x40016af	              0x5b	                                 pop rbx	       830	ref-filter.c	FUNCTION_32	ELSE_1
0x40016b0	              0x5d	                                 pop rbp	       830	ref-filter.c	FUNCTION_32	ELSE_1
0x40016b1	            0x415c	                                 pop r12	       830	ref-filter.c	FUNCTION_32	ELSE_1
0x40016b3	              0xc3	                                     ret	       830	ref-filter.c	FUNCTION_32	ELSE_1
contents_atom_parser	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,8:functions,0:CALL,12:ELSE,6	154
0x400057b	            0x4155	                                push r13	       248	ref-filter.c	FUNCTION_9
0x400057d	            0x4154	                                push r12	       248	ref-filter.c	FUNCTION_9
0x400057f	              0x55	                                push rbp	       248	ref-filter.c	FUNCTION_9
0x4000580	              0x53	                                push rbx	       248	ref-filter.c	FUNCTION_9
0x4000581	        0x4883ec18	                           sub rsp, 0x18	       248	ref-filter.c	FUNCTION_9
0x4000585	          0x4889f5	                            mov rbp, rsi	       248	ref-filter.c	FUNCTION_9
0x4000588	    0x64488b042528	                mov rax, qword fs:[0x28]	       248	ref-filter.c	FUNCTION_9
0x4000591	      0x4889442408	                mov qword [rsp + 8], rax	       248	ref-filter.c	FUNCTION_9
0x4000596	            0x31c0	                            xor eax, eax	       248	ref-filter.c	FUNCTION_9
0x4000598	          0x4885d2	                           test rdx, rdx	       249	ref-filter.c	FUNCTION_9	IF_1
0x400059b	            0x750c	                           jne 0x40005a9	       249	ref-filter.c	FUNCTION_9	IF_1
0x400059d	    0xc74610000000	               mov dword [rsi + 0x10], 0	       250	ref-filter.c	FUNCTION_9	IF_1
0x40005a4	      0xe940010000	                           jmp 0x40006e9	       250	ref-filter.c	FUNCTION_9	IF_1
0x40005a9	          0x4989f8	                             mov r8, rdi	       250	ref-filter.c	FUNCTION_9	IF_1
0x40005ac	          0x4889d3	                            mov rbx, rdx	       250	ref-filter.c	FUNCTION_9	IF_1
0x40005af	          0x4989cc	                            mov r12, rcx	       250	ref-filter.c	FUNCTION_9	IF_1
0x40005b2	      0xbf00000000	                              mov edi, 0	       251	ref-filter.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
0x40005b7	      0xb905000000	                              mov ecx, 5	       251	ref-filter.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
0x40005bc	          0x4889d6	                            mov rsi, rdx	       251	ref-filter.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
0x40005bf	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       251	ref-filter.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
0x40005c1	           0xf97c0	                                 seta al	       251	ref-filter.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
0x40005c4	           0xf92c2	                                 setb dl	       251	ref-filter.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
0x40005c7	            0x29d0	                            sub eax, edx	       251	ref-filter.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
0x40005c9	           0xfbec0	                           movsx eax, al	       251	ref-filter.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
0x40005cc	            0x85c0	                           test eax, eax	       251	ref-filter.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
0x40005ce	            0x750c	                           jne 0x40005dc	       251	ref-filter.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
0x40005d0	    0xc74510010000	               mov dword [rbp + 0x10], 1	       252	ref-filter.c	FUNCTION_9	ELSE_1	IF_2
0x40005d7	      0xe90d010000	                           jmp 0x40006e9	       252	ref-filter.c	FUNCTION_9	ELSE_1	IF_2
0x40005dc	      0xbf00000000	                              mov edi, 0	       253	ref-filter.c	FUNCTION_9	ELSE_2	IF_3	CALL_2
0x40005e1	      0xb90a000000	                            mov ecx, 0xa	       253	ref-filter.c	FUNCTION_9	ELSE_2	IF_3	CALL_2
0x40005e6	          0x4889de	                            mov rsi, rbx	       253	ref-filter.c	FUNCTION_9	ELSE_2	IF_3	CALL_2
0x40005e9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       253	ref-filter.c	FUNCTION_9	ELSE_2	IF_3	CALL_2
0x40005eb	           0xf97c0	                                 seta al	       253	ref-filter.c	FUNCTION_9	ELSE_2	IF_3	CALL_2
0x40005ee	           0xf92c2	                                 setb dl	       253	ref-filter.c	FUNCTION_9	ELSE_2	IF_3	CALL_2
0x40005f1	            0x29d0	                            sub eax, edx	       253	ref-filter.c	FUNCTION_9	ELSE_2	IF_3	CALL_2
0x40005f3	           0xfbec0	                           movsx eax, al	       253	ref-filter.c	FUNCTION_9	ELSE_2	IF_3	CALL_2
0x40005f6	            0x85c0	                           test eax, eax	       253	ref-filter.c	FUNCTION_9	ELSE_2	IF_3	CALL_2
0x40005f8	            0x750c	                           jne 0x4000606	       253	ref-filter.c	FUNCTION_9	ELSE_2	IF_3	CALL_2
0x40005fa	    0xc74510040000	               mov dword [rbp + 0x10], 4	       254	ref-filter.c	FUNCTION_9	ELSE_2	IF_3
0x4000601	      0xe9e3000000	                           jmp 0x40006e9	       254	ref-filter.c	FUNCTION_9	ELSE_2	IF_3
0x4000606	      0xbf00000000	                              mov edi, 0	       255	ref-filter.c	FUNCTION_9	ELSE_3	IF_4	CALL_3
0x400060b	      0xb908000000	                              mov ecx, 8	       255	ref-filter.c	FUNCTION_9	ELSE_3	IF_4	CALL_3
0x4000610	          0x4889de	                            mov rsi, rbx	       255	ref-filter.c	FUNCTION_9	ELSE_3	IF_4	CALL_3
0x4000613	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       255	ref-filter.c	FUNCTION_9	ELSE_3	IF_4	CALL_3
0x4000615	           0xf97c0	                                 seta al	       255	ref-filter.c	FUNCTION_9	ELSE_3	IF_4	CALL_3
0x4000618	           0xf92c2	                                 setb dl	       255	ref-filter.c	FUNCTION_9	ELSE_3	IF_4	CALL_3
0x400061b	            0x29d0	                            sub eax, edx	       255	ref-filter.c	FUNCTION_9	ELSE_3	IF_4	CALL_3
0x400061d	           0xfbec0	                           movsx eax, al	       255	ref-filter.c	FUNCTION_9	ELSE_3	IF_4	CALL_3
0x4000620	          0x4889d9	                            mov rcx, rbx	       255	ref-filter.c	FUNCTION_9	ELSE_3	IF_4	CALL_3
0x4000623	      0xba00000000	                              mov edx, 0	       255	ref-filter.c	FUNCTION_9	ELSE_3	IF_4	CALL_3
0x4000628	            0x85c0	                           test eax, eax	       255	ref-filter.c	FUNCTION_9	ELSE_3	IF_4	CALL_3
0x400062a	            0x750c	                           jne 0x4000638	       255	ref-filter.c	FUNCTION_9	ELSE_3	IF_4	CALL_3
0x400062c	    0xc74510050000	               mov dword [rbp + 0x10], 5	       256	ref-filter.c	FUNCTION_9	ELSE_3	IF_4
0x4000633	      0xe9b1000000	                           jmp 0x40006e9	       256	ref-filter.c	FUNCTION_9	ELSE_3	IF_4
0x4000638	           0xfb602	                   movzx eax, byte [rdx]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x400063b	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x400063d	            0x7417	                            je 0x4000656	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x400063f	        0x4883c101	                              add rcx, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4000643	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4000647	          0x3a41ff	                  cmp al, byte [rcx - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x400064a	            0x74ec	                            je 0x4000638	       488	git-compat-util.h	FUNCTION_112	DO_1
0x400064c	          0x4989dd	                            mov r13, rbx	       488	git-compat-util.h	FUNCTION_112	DO_1
0x400064f	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4000654	            0xeb47	                           jmp 0x400069d	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4000656	          0x4889c8	                            mov rax, rcx	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4000659	      0xba00000000	                              mov edx, 0	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x400065e	           0xfb632	                   movzx esi, byte [rdx]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4000661	          0x4084f6	                           test sil, sil	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4000664	            0x7411	                            je 0x4000677	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4000666	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x400066a	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x400066e	        0x403a70ff	                 cmp sil, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4000672	            0x74ea	                            je 0x400065e	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4000674	          0x4889c8	                            mov rax, rcx	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4000677	          0x803800	                       cmp byte [rax], 0	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x400067a	      0xba00000000	                              mov edx, 0	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x400067f	        0x480f45d0	                         cmovne rdx, rax	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x4000683	          0x4c89e1	                            mov rcx, r12	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x4000686	          0x4889ee	                            mov rsi, rbp	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x4000689	          0x4c89c7	                             mov rdi, r8	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x400068c	      0xe8e7faffff	           call sym.trailers_atom_parser	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x4000691	            0x85c0	                           test eax, eax	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x4000693	           0xf95c0	                                setne al	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x4000696	           0xfb6c0	                           movzx eax, al	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x4000699	            0xf7d8	                                 neg eax	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x400069b	            0xeb4c	                           jmp 0x40006e9	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x400069d	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x40006a0	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x40006a2	            0x745e	                            je 0x4000702	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x40006a4	        0x4983c501	                              add r13, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40006a8	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40006ac	        0x413a55ff	                  cmp dl, byte [r13 - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40006b0	            0x74eb	                            je 0x400069d	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40006b2	            0xeb77	                           jmp 0x400072b	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40006b4	      0xba0a000000	                            mov edx, 0xa	      1018	git-compat-util.h	FUNCTION_128	CALL_2
0x40006b9	          0x4889e6	                            mov rsi, rsp	      1018	git-compat-util.h	FUNCTION_128	CALL_2
0x40006bc	          0x4c89ef	                            mov rdi, r13	      1018	git-compat-util.h	FUNCTION_128	CALL_2
0x40006bf	      0xe800000000	                          call 0x40006c4	      1018	git-compat-util.h	FUNCTION_128	CALL_2
0x40006c4	          0x4889c2	                            mov rdx, rax	      1018	git-compat-util.h	FUNCTION_128	CALL_2
0x40006c7	            0x8b03	                    mov eax, dword [rbx]	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x40006c9	            0x85c0	                           test eax, eax	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x40006cb	     0xf8588000000	                           jne 0x4000759	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x40006d1	        0x488b0c24	                    mov rcx, qword [rsp]	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x40006d5	          0x803900	                       cmp byte [rcx], 0	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x40006d8	            0x757f	                           jne 0x4000759	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x40006da	          0x4939cd	                            cmp r13, rcx	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x40006dd	            0x747a	                            je 0x4000759	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x40006df	            0x89d1	                            mov ecx, edx	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x40006e1	          0x4839ca	                            cmp rdx, rcx	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x40006e4	            0x7573	                           jne 0x4000759	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x40006e6	          0x895528	            mov dword [rbp + 0x28], edx 	      1021	git-compat-util.h	FUNCTION_128
0x40006e9	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       268	ref-filter.c	FUNCTION_9
0x40006ee	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       268	ref-filter.c	FUNCTION_9
0x40006f7	     0xf8492000000	                            je 0x400078f	       268	ref-filter.c	FUNCTION_9
0x40006fd	      0xe988000000	                           jmp 0x400078a	       268	ref-filter.c	FUNCTION_9
0x4000702	    0xc74510030000	               mov dword [rbp + 0x10], 3	       262	ref-filter.c	FUNCTION_9	ELSE_5	IF_7
0x4000709	      0xe800000000	                          call 0x400070e	      1014	git-compat-util.h	FUNCTION_128
0x400070e	          0x4889c3	                            mov rbx, rax	      1014	git-compat-util.h	FUNCTION_128
0x4000711	    0xc70000000000	                      mov dword [rax], 0	      1014	git-compat-util.h	FUNCTION_128
0x4000717	      0xbe2d000000	                           mov esi, 0x2d	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x400071c	          0x4c89ef	                            mov rdi, r13	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x400071f	      0xe800000000	                          call 0x4000724	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x4000724	          0x4885c0	                           test rax, rax	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x4000727	            0x748b	                            je 0x40006b4	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x4000729	            0xeb2e	                           jmp 0x4000759	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x400072b	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4000730	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4000735	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x400073a	      0xe800000000	                          call 0x400073f	        54	gettext.h	FUNCTION_93
0x400073f	          0x4889d9	                            mov rcx, rbx	       266	ref-filter.c	FUNCTION_9	CALL_12
0x4000742	          0x4889c2	                            mov rdx, rax	       266	ref-filter.c	FUNCTION_9	CALL_12
0x4000745	      0xbeffffffff	                     mov esi, 0xffffffff	       266	ref-filter.c	FUNCTION_9	CALL_12
0x400074a	          0x4c89e7	                            mov rdi, r12	       266	ref-filter.c	FUNCTION_9	CALL_12
0x400074d	      0xb800000000	                              mov eax, 0	       266	ref-filter.c	FUNCTION_9	CALL_12
0x4000752	      0xe8fefbffff	                call sym.strbuf_addf_ret	       266	ref-filter.c	FUNCTION_9	CALL_12
0x4000757	            0xeb90	                           jmp 0x40006e9	       266	ref-filter.c	FUNCTION_9	CALL_12
0x4000759	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x400075e	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4000763	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4000768	      0xe800000000	                          call 0x400076d	        54	gettext.h	FUNCTION_93
0x400076d	          0x4c89e9	                            mov rcx, r13	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0x4000770	          0x4889c2	                            mov rdx, rax	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0x4000773	      0xbeffffffff	                     mov esi, 0xffffffff	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0x4000778	          0x4c89e7	                            mov rdi, r12	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0x400077b	      0xb800000000	                              mov eax, 0	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0x4000780	      0xe8d0fbffff	                call sym.strbuf_addf_ret	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0x4000785	      0xe95fffffff	                           jmp 0x40006e9	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0x400078a	      0xe800000000	                          call 0x400078f	       268	ref-filter.c	FUNCTION_9
0x400078f	        0x4883c418	                           add rsp, 0x18	       268	ref-filter.c	FUNCTION_9
0x4000793	              0x5b	                                 pop rbx	       268	ref-filter.c	FUNCTION_9
0x4000794	              0x5d	                                 pop rbp	       268	ref-filter.c	FUNCTION_9
0x4000795	            0x415c	                                 pop r12	       268	ref-filter.c	FUNCTION_9
0x4000797	            0x415d	                                 pop r13	       268	ref-filter.c	FUNCTION_9
0x4000799	              0xc3	                                     ret	       268	ref-filter.c	FUNCTION_9
verify_ref_format	SWITCH,0:FOR,1:WHILE,0:DO,0:IF,4:functions,0:CALL,9:ELSE,0	97
0x4003776	            0x4154	                                push r12	       769	ref-filter.c	FUNCTION_30
0x4003778	              0x55	                                push rbp	       769	ref-filter.c	FUNCTION_30
0x4003779	              0x53	                                push rbx	       769	ref-filter.c	FUNCTION_30
0x400377a	        0x4883ec20	                           sub rsp, 0x20	       769	ref-filter.c	FUNCTION_30
0x400377e	          0x4989fc	                            mov r12, rdi	       769	ref-filter.c	FUNCTION_30
0x4003781	    0x64488b042528	                mov rax, qword fs:[0x28]	       769	ref-filter.c	FUNCTION_30
0x400378a	      0x4889442418	             mov qword [rsp + 0x18], rax	       769	ref-filter.c	FUNCTION_30
0x400378f	            0x31c0	                            xor eax, eax	       769	ref-filter.c	FUNCTION_30
0x4003791	    0xc74710000000	               mov dword [rdi + 0x10], 0	       772	ref-filter.c	FUNCTION_30
0x4003798	          0x488b2f	                    mov rbp, qword [rdi]	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x400379b	        0x807d0000	                       cmp byte [rbp], 0	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x400379f	     0xf85cb000000	                           jne 0x4003870	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x40037a5	      0xe906010000	                           jmp 0x40038b0	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x40037aa	    0x48c704240000	                      mov qword [rsp], 0	       774	ref-filter.c	FUNCTION_30	FOR_1
0x40037b2	    0x48c744240800	                  mov qword [rsp + 8], 0	       774	ref-filter.c	FUNCTION_30	FOR_1
0x40037bb	    0x48c744241000	               mov qword [rsp + 0x10], 0	       774	ref-filter.c	FUNCTION_30	FOR_1
0x40037c4	      0xbe29000000	                           mov esi, 0x29	       775	ref-filter.c	FUNCTION_30	FOR_1	CALL_2
0x40037c9	          0x4889ef	                            mov rdi, rbp	       775	ref-filter.c	FUNCTION_30	FOR_1	CALL_2
0x40037cc	      0xe800000000	                          call 0x40037d1	       775	ref-filter.c	FUNCTION_30	FOR_1	CALL_2
0x40037d1	          0x4889c3	                            mov rbx, rax	       775	ref-filter.c	FUNCTION_30	FOR_1	CALL_2
0x40037d4	          0x4885c0	                           test rax, rax	       778	ref-filter.c	FUNCTION_30	FOR_1	IF_1
0x40037d7	            0x752e	                           jne 0x4003807	       778	ref-filter.c	FUNCTION_30	FOR_1	IF_1
0x40037d9	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x40037de	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40037e3	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x40037e8	      0xe800000000	                          call 0x40037ed	        54	gettext.h	FUNCTION_93
0x40037ed	          0x4889ee	                            mov rsi, rbp	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x40037f0	          0x4889c7	                            mov rdi, rax	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x40037f3	      0xb800000000	                              mov eax, 0	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x40037f8	      0xe800000000	                          call 0x40037fd	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x40037fd	      0xb8ffffffff	                     mov eax, 0xffffffff	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x4003802	      0xe9a9000000	                           jmp 0x40038b0	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x4003807	        0x488d7502	                      lea rsi, [rbp + 2]	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x400380b	          0x4889e1	                            mov rcx, rsp	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x400380e	          0x4889c2	                            mov rdx, rax	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x4003811	          0x4c89e7	                            mov rdi, r12	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x4003814	      0xe807d0ffff	          call sym.parse_ref_filter_atom	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x4003819	            0x85c0	                           test eax, eax	       782	ref-filter.c	FUNCTION_30	FOR_1	IF_2
0x400381b	            0x7914	                           jns 0x4003831	       782	ref-filter.c	FUNCTION_30	FOR_1	IF_2
0x400381d	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       783	ref-filter.c	FUNCTION_30	FOR_1	CALL_5
0x4003822	      0xbf00000000	                              mov edi, 0	       783	ref-filter.c	FUNCTION_30	FOR_1	CALL_5
0x4003827	      0xb800000000	                              mov eax, 0	       783	ref-filter.c	FUNCTION_30	FOR_1	CALL_5
0x400382c	      0xe800000000	                          call 0x4003831	       783	ref-filter.c	FUNCTION_30	FOR_1	CALL_5
0x4003831	        0x488d6b01	                      lea rbp, [rbx + 1]	       784	ref-filter.c	FUNCTION_30	FOR_1
0x4003835	            0x4898	                                    cdqe	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x4003837	        0x488d0440	                  lea rax, [rax + rax*2]	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x400383b	        0x48c1e005	                              shl rax, 5	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x400383f	    0x480305000000	             add rax, qword [0x04003846]	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x4003846	          0x488b30	                    mov rsi, qword [rax]	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x4003849	      0xb800000000	                              mov eax, 0	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x400384e	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4003851	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4003853	            0x746d	                            je 0x40038c2	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4003855	        0x4883c601	                              add rsi, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4003859	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x400385d	          0x3a56ff	                  cmp dl, byte [rsi - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4003860	            0x74ec	                            je 0x400384e	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4003862	          0x4889e7	                            mov rdi, rsp	       788	ref-filter.c	FUNCTION_30	FOR_1	CALL_8
0x4003865	      0xe800000000	                          call 0x400386a	       788	ref-filter.c	FUNCTION_30	FOR_1	CALL_8
0x400386a	        0x807b0100	                   cmp byte [rbx + 1], 0	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x400386e	            0x7414	                            je 0x4003884	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x4003870	          0x4889ef	                            mov rdi, rbp	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x4003873	      0xe8c8c7ffff	                      call sym.find_next	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x4003878	          0x4889c5	                            mov rbp, rax	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x400387b	          0x4885c0	                           test rax, rax	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x400387e	     0xf8526ffffff	                           jne 0x40037aa	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x4003884	      0x418b442410	            mov eax, dword [r12 + 0x10] 	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x4003889	            0x85c0	                           test eax, eax	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x400388b	            0x7423	                            je 0x40038b0	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x400388d	      0x418b74240c	              mov esi, dword [r12 + 0xc]	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x4003892	      0xbf01000000	                              mov edi, 1	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x4003897	      0xe800000000	                          call 0x400389c	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x400389c	            0x85c0	                           test eax, eax	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x400389e	            0x750b	                           jne 0x40038ab	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x40038a0	    0x41c744241000	               mov dword [r12 + 0x10], 0	       791	ref-filter.c	FUNCTION_30	IF_4
0x40038a9	            0xeb05	                           jmp 0x40038b0	       791	ref-filter.c	FUNCTION_30	IF_4
0x40038ab	      0xb800000000	                              mov eax, 0	       792	ref-filter.c	FUNCTION_30
0x40038b0	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       793	ref-filter.c	FUNCTION_30
0x40038b5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       793	ref-filter.c	FUNCTION_30
0x40038be	            0x742b	                            je 0x40038eb	       793	ref-filter.c	FUNCTION_30
0x40038c0	            0xeb24	                           jmp 0x40038e6	       793	ref-filter.c	FUNCTION_30
0x40038c2	      0xbf00000000	                              mov edi, 0	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x40038c7	      0xb906000000	                              mov ecx, 6	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x40038cc	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x40038ce	           0xf97c2	                                 seta dl	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x40038d1	           0xf92c0	                                 setb al	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x40038d4	            0x38c2	                              cmp dl, al	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x40038d6	           0xf95c0	                                setne al	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x40038d9	           0xfb6c0	                           movzx eax, al	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x40038dc	      0x4189442410	             mov dword [r12 + 0x10], eax	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x40038e1	      0xe97cffffff	                           jmp 0x4003862	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x40038e6	      0xe800000000	                          call 0x40038eb	       793	ref-filter.c	FUNCTION_30
0x40038eb	        0x4883c420	                           add rsp, 0x20	       793	ref-filter.c	FUNCTION_30
0x40038ef	              0x5b	                                 pop rbx	       793	ref-filter.c	FUNCTION_30
0x40038f0	              0x5d	                                 pop rbp	       793	ref-filter.c	FUNCTION_30
0x40038f1	            0x415c	                                 pop r12	       793	ref-filter.c	FUNCTION_30
0x40038f3	              0xc3	                                     ret	       793	ref-filter.c	FUNCTION_30
format_ref_array_item	SWITCH,0:FOR,1:WHILE,0:DO,0:IF,6:functions,0:CALL,17:ELSE,0	126
0x400491b	            0x4157	                                push r15	      2226	ref-filter.c	FUNCTION_83
0x400491d	            0x4156	                                push r14	      2226	ref-filter.c	FUNCTION_83
0x400491f	            0x4155	                                push r13	      2226	ref-filter.c	FUNCTION_83
0x4004921	            0x4154	                                push r12	      2226	ref-filter.c	FUNCTION_83
0x4004923	              0x55	                                push rbp	      2226	ref-filter.c	FUNCTION_83
0x4004924	              0x53	                                push rbx	      2226	ref-filter.c	FUNCTION_83
0x4004925	        0x4883ec58	                           sub rsp, 0x58	      2226	ref-filter.c	FUNCTION_83
0x4004929	          0x4989ff	                            mov r15, rdi	      2226	ref-filter.c	FUNCTION_83
0x400492c	          0x4989f6	                            mov r14, rsi	      2226	ref-filter.c	FUNCTION_83
0x400492f	      0x4889542408	                mov qword [rsp + 8], rdx	      2226	ref-filter.c	FUNCTION_83
0x4004934	          0x4989cd	                            mov r13, rcx	      2226	ref-filter.c	FUNCTION_83
0x4004937	    0x64488b042528	                mov rax, qword fs:[0x28]	      2226	ref-filter.c	FUNCTION_83
0x4004940	      0x4889442448	             mov qword [rsp + 0x48], rax	      2226	ref-filter.c	FUNCTION_83
0x4004945	            0x31c0	                            xor eax, eax	      2226	ref-filter.c	FUNCTION_83
0x4004947	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2228	ref-filter.c	FUNCTION_83
0x4004950	          0x8b4608	                mov eax, dword [rsi + 8]	      2230	ref-filter.c	FUNCTION_83
0x4004953	        0x89442410	             mov dword [rsp + 0x10], eax	      2230	ref-filter.c	FUNCTION_83
0x4004957	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      2231	ref-filter.c	FUNCTION_83	CALL_1
0x400495c	      0xe837c7ffff	             call sym.push_stack_element	      2231	ref-filter.c	FUNCTION_83	CALL_1
0x4004961	          0x4d8b26	                    mov r12, qword [r14]	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4004964	      0x410fb62c24	                   movzx ebp, byte [r12]	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4004969	          0x4084ed	                           test bpl, bpl	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x400496c	     0xf858e000000	                           jne 0x4004a00	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4004972	      0xe9cb000000	                           jmp 0x4004a42	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4004977	      0xbe29000000	                           mov esi, 0x29	      2237	ref-filter.c	FUNCTION_83	FOR_1	CALL_3
0x400497c	          0x4889df	                            mov rdi, rbx	      2237	ref-filter.c	FUNCTION_83	FOR_1	CALL_3
0x400497f	      0xe800000000	                          call 0x4004984	      2237	ref-filter.c	FUNCTION_83	FOR_1	CALL_3
0x4004984	          0x4889c5	                            mov rbp, rax	      2237	ref-filter.c	FUNCTION_83	FOR_1	CALL_3
0x4004987	          0x4c39e3	                            cmp rbx, r12	      2238	ref-filter.c	FUNCTION_83	FOR_1	IF_1
0x400498a	            0x7610	                           jbe 0x400499c	      2238	ref-filter.c	FUNCTION_83	FOR_1	IF_1
0x400498c	      0x488d542410	                   lea rdx, [rsp + 0x10]	      2239	ref-filter.c	FUNCTION_83	FOR_1	CALL_4
0x4004991	          0x4889de	                            mov rsi, rbx	      2239	ref-filter.c	FUNCTION_83	FOR_1	CALL_4
0x4004994	          0x4c89e7	                            mov rdi, r12	      2239	ref-filter.c	FUNCTION_83	FOR_1	CALL_4
0x4004997	      0xe825d4ffff	                 call sym.append_literal	      2239	ref-filter.c	FUNCTION_83	FOR_1	CALL_4
0x400499c	        0x488d7302	                      lea rsi, [rbx + 2]	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x40049a0	          0x4c89e9	                            mov rcx, r13	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x40049a3	          0x4889ea	                            mov rdx, rbp	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x40049a6	          0x4c89f7	                            mov rdi, r14	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x40049a9	      0xe872beffff	          call sym.parse_ref_filter_atom	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x40049ae	            0x85c0	                           test eax, eax	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x40049b0	            0x782d	                            js 0x40049df	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x40049b2	          0x4c89e9	                            mov rcx, r13	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x40049b5	      0x488d542420	                   lea rdx, [rsp + 0x20]	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x40049ba	            0x89c6	                            mov esi, eax	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x40049bc	          0x4c89ff	                            mov rdi, r15	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x40049bf	      0xe87bf6ffff	             call sym.get_ref_atom_value	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x40049c4	            0x85c0	                           test eax, eax	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x40049c6	            0x7517	                           jne 0x40049df	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x40049c8	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x40049cd	          0x4c89ea	                            mov rdx, r13	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x40049d0	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x40049d5	          0x4889c7	                            mov rdi, rax	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x40049d8	          0xff5008	                    call qword [rax + 8]	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x40049db	            0x85c0	                           test eax, eax	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x40049dd	            0x7414	                            je 0x40049f3	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x40049df	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      2243	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_8
0x40049e4	      0xe876c6ffff	              call sym.pop_stack_element	      2243	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_8
0x40049e9	      0xb8ffffffff	                     mov eax, 0xffffffff	      2244	ref-filter.c	FUNCTION_83	FOR_1	IF_2
0x40049ee	      0xe9e3000000	                           jmp 0x4004ad6	      2244	ref-filter.c	FUNCTION_83	FOR_1	IF_2
0x40049f3	        0x4c8d6501	                      lea r12, [rbp + 1]	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x40049f7	         0xfb66d01	               movzx ebp, byte [rbp + 1]	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x40049fb	          0x4084ed	                           test bpl, bpl	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x40049fe	            0x7442	                            je 0x4004a42	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4004a00	          0x4c89e7	                            mov rdi, r12	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4004a03	      0xe838b6ffff	                      call sym.find_next	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4004a08	          0x4889c3	                            mov rbx, rax	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4004a0b	          0x4885c0	                           test rax, rax	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4004a0e	     0xf8563ffffff	                           jne 0x4004977	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4004a14	          0x4084ed	                           test bpl, bpl	      2247	ref-filter.c	FUNCTION_83	IF_3
0x4004a17	            0x7429	                            je 0x4004a42	      2247	ref-filter.c	FUNCTION_83	IF_3
0x4004a19	      0xb800000000	                              mov eax, 0	      2248	ref-filter.c	FUNCTION_83	IF_3	CALL_9
0x4004a1e	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2248	ref-filter.c	FUNCTION_83	IF_3	CALL_9
0x4004a25	          0x4c89e7	                            mov rdi, r12	      2248	ref-filter.c	FUNCTION_83	IF_3	CALL_9
0x4004a28	            0xf2ae	              repne scasb al, byte [rdi]	      2248	ref-filter.c	FUNCTION_83	IF_3	CALL_9
0x4004a2a	          0x4889c8	                            mov rax, rcx	      2248	ref-filter.c	FUNCTION_83	IF_3	CALL_9
0x4004a2d	          0x48f7d0	                                 not rax	      2248	ref-filter.c	FUNCTION_83	IF_3	CALL_9
0x4004a30	      0x498d7404ff	                lea rsi, [r12 + rax - 1]	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x4004a35	      0x488d542410	                   lea rdx, [rsp + 0x10]	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x4004a3a	          0x4c89e7	                            mov rdi, r12	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x4004a3d	      0xe87fd3ffff	                 call sym.append_literal	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x4004a42	      0x41837e1000	               cmp dword [r14 + 0x10], 0	      2251	ref-filter.c	FUNCTION_83	IF_4
0x4004a47	            0x7430	                            je 0x4004a79	      2251	ref-filter.c	FUNCTION_83	IF_4
0x4004a49	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2253	ref-filter.c	FUNCTION_83	IF_4
0x4004a52	          0x4c89ea	                            mov rdx, r13	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x4004a55	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x4004a5a	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x4004a5f	      0xe834c8ffff	                    call sym.append_atom	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x4004a64	            0x85c0	                           test eax, eax	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x4004a66	            0x7411	                            je 0x4004a79	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x4004a68	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      2255	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_12
0x4004a6d	      0xe8edc5ffff	              call sym.pop_stack_element	      2255	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_12
0x4004a72	      0xb8ffffffff	                     mov eax, 0xffffffff	      2256	ref-filter.c	FUNCTION_83	IF_4	IF_5
0x4004a77	            0xeb5d	                           jmp 0x4004ad6	      2256	ref-filter.c	FUNCTION_83	IF_4	IF_5
0x4004a79	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2259	ref-filter.c	FUNCTION_83	IF_6
0x4004a7e	        0x48833800	                      cmp qword [rax], 0	      2259	ref-filter.c	FUNCTION_83	IF_6
0x4004a82	            0x7435	                            je 0x4004ab9	      2259	ref-filter.c	FUNCTION_83	IF_6
0x4004a84	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      2260	ref-filter.c	FUNCTION_83	IF_6	CALL_13
0x4004a89	      0xe8d1c5ffff	              call sym.pop_stack_element	      2260	ref-filter.c	FUNCTION_83	IF_6	CALL_13
0x4004a8e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4004a93	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4004a98	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4004a9d	      0xe800000000	                          call 0x4004aa2	        54	gettext.h	FUNCTION_93
0x4004aa2	          0x4889c2	                            mov rdx, rax	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x4004aa5	      0xbeffffffff	                     mov esi, 0xffffffff	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x4004aaa	          0x4c89ef	                            mov rdi, r13	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x4004aad	      0xb800000000	                              mov eax, 0	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x4004ab2	      0xe89eb8ffff	                call sym.strbuf_addf_ret	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x4004ab7	            0xeb1d	                           jmp 0x4004ad6	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x4004ab9	        0x488d7008	                      lea rsi, [rax + 8]	      2263	ref-filter.c	FUNCTION_83	CALL_16
0x4004abd	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2263	ref-filter.c	FUNCTION_83	CALL_16
0x4004ac2	      0xe800000000	                          call 0x4004ac7	      2263	ref-filter.c	FUNCTION_83	CALL_16
0x4004ac7	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      2264	ref-filter.c	FUNCTION_83	CALL_17
0x4004acc	      0xe88ec5ffff	              call sym.pop_stack_element	      2264	ref-filter.c	FUNCTION_83	CALL_17
0x4004ad1	      0xb800000000	                              mov eax, 0	      2265	ref-filter.c	FUNCTION_83
0x4004ad6	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      2266	ref-filter.c	FUNCTION_83
0x4004adb	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2266	ref-filter.c	FUNCTION_83
0x4004ae4	            0x7405	                            je 0x4004aeb	      2266	ref-filter.c	FUNCTION_83
0x4004ae6	      0xe800000000	                          call 0x4004aeb	      2266	ref-filter.c	FUNCTION_83
0x4004aeb	        0x4883c458	                           add rsp, 0x58	      2266	ref-filter.c	FUNCTION_83
0x4004aef	              0x5b	                                 pop rbx	      2266	ref-filter.c	FUNCTION_83
0x4004af0	              0x5d	                                 pop rbp	      2266	ref-filter.c	FUNCTION_83
0x4004af1	            0x415c	                                 pop r12	      2266	ref-filter.c	FUNCTION_83
0x4004af3	            0x415d	                                 pop r13	      2266	ref-filter.c	FUNCTION_83
0x4004af5	            0x415e	                                 pop r14	      2266	ref-filter.c	FUNCTION_83
0x4004af7	            0x415f	                                 pop r15	      2266	ref-filter.c	FUNCTION_83
0x4004af9	              0xc3	                                     ret	      2266	ref-filter.c	FUNCTION_83
pretty_print_ref	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,0:functions,0:CALL,4:ELSE,0	19
0x4004bc0	            0x4154	                                push r12	      2284	ref-filter.c	FUNCTION_85
0x4004bc2	              0x55	                                push rbp	      2284	ref-filter.c	FUNCTION_85
0x4004bc3	              0x53	                                push rbx	      2284	ref-filter.c	FUNCTION_85
0x4004bc4	          0x4889fd	                            mov rbp, rdi	      2284	ref-filter.c	FUNCTION_85
0x4004bc7	          0x4989d4	                            mov r12, rdx	      2284	ref-filter.c	FUNCTION_85
0x4004bca	      0xe883c1ffff	             call sym.new_ref_array_item	      2286	ref-filter.c	FUNCTION_85	CALL_1
0x4004bcf	          0x4889c3	                            mov rbx, rax	      2286	ref-filter.c	FUNCTION_85	CALL_1
0x4004bd2	          0x4889ef	                            mov rdi, rbp	      2287	ref-filter.c	FUNCTION_85	CALL_2
0x4004bd5	      0xe80cb7ffff	          call sym.ref_kind_from_refname	      2287	ref-filter.c	FUNCTION_85	CALL_2
0x4004bda	          0x894318	             mov dword [rbx + 0x18], eax	      2287	ref-filter.c	FUNCTION_85	CALL_2
0x4004bdd	          0x4c89e6	                            mov rsi, r12	      2288	ref-filter.c	FUNCTION_85	CALL_3
0x4004be0	          0x4889df	                            mov rdi, rbx	      2288	ref-filter.c	FUNCTION_85	CALL_3
0x4004be3	      0xe800000000	                          call 0x4004be8	      2288	ref-filter.c	FUNCTION_85	CALL_3
0x4004be8	          0x4889df	                            mov rdi, rbx	      2289	ref-filter.c	FUNCTION_85	CALL_4
0x4004beb	      0xe82cc0ffff	                call sym.free_array_item	      2289	ref-filter.c	FUNCTION_85	CALL_4
0x4004bf0	              0x5b	                                 pop rbx	      2290	ref-filter.c	FUNCTION_85
0x4004bf1	              0x5d	                                 pop rbp	      2290	ref-filter.c	FUNCTION_85
0x4004bf2	            0x415c	                                 pop r12	      2290	ref-filter.c	FUNCTION_85
0x4004bf4	              0xc3	                                     ret	      2290	ref-filter.c	FUNCTION_85
align_atom_handler	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,0:functions,0:CALL,1:ELSE,0	17
0x4001209	              0x55	                                push rbp	       591	ref-filter.c	FUNCTION_22
0x400120a	              0x53	                                push rbx	       591	ref-filter.c	FUNCTION_22
0x400120b	        0x4883ec08	                              sub rsp, 8	       591	ref-filter.c	FUNCTION_22
0x400120f	          0x4889fd	                            mov rbp, rdi	       591	ref-filter.c	FUNCTION_22
0x4001212	          0x4889f3	                            mov rbx, rsi	       591	ref-filter.c	FUNCTION_22
0x4001215	        0x488d7e08	                      lea rdi, [rsi + 8]	       594	ref-filter.c	FUNCTION_22	CALL_1
0x4001219	      0xe87afeffff	             call sym.push_stack_element	       594	ref-filter.c	FUNCTION_22	CALL_1
0x400121e	        0x488b5308	                mov rdx, qword [rbx + 8]	       595	ref-filter.c	FUNCTION_22
0x4001222	    0x48c742200000	               mov qword [rdx + 0x20], 0	       596	ref-filter.c	FUNCTION_22
0x400122a	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       597	ref-filter.c	FUNCTION_22
0x400122e	        0x4883c010	                           add rax, 0x10	       597	ref-filter.c	FUNCTION_22
0x4001232	        0x48894228	             mov qword [rdx + 0x28], rax	       597	ref-filter.c	FUNCTION_22
0x4001236	      0xb800000000	                              mov eax, 0	       599	ref-filter.c	FUNCTION_22
0x400123b	        0x4883c408	                              add rsp, 8	       599	ref-filter.c	FUNCTION_22
0x400123f	              0x5b	                                 pop rbx	       599	ref-filter.c	FUNCTION_22
0x4001240	              0x5d	                                 pop rbp	       599	ref-filter.c	FUNCTION_22
0x4001241	              0xc3	                                     ret	       599	ref-filter.c	FUNCTION_22
filter_refs	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,8:functions,0:CALL,11:ELSE,4	140
0x40046ae	              0x55	                                push rbp	      2104	ref-filter.c	FUNCTION_78
0x40046af	              0x53	                                push rbx	      2104	ref-filter.c	FUNCTION_78
0x40046b0	        0x4883ec78	                           sub rsp, 0x78	      2104	ref-filter.c	FUNCTION_78
0x40046b4	    0x64488b042528	                mov rax, qword fs:[0x28]	      2104	ref-filter.c	FUNCTION_78
0x40046bd	      0x4889442468	             mov qword [rsp + 0x68], rax	      2104	ref-filter.c	FUNCTION_78
0x40046c2	            0x31c0	                            xor eax, eax	      2104	ref-filter.c	FUNCTION_78
0x40046c4	      0x48897c2420	             mov qword [rsp + 0x20], rdi	      2109	ref-filter.c	FUNCTION_78
0x40046c9	      0x4889742428	             mov qword [rsp + 0x28], rsi	      2110	ref-filter.c	FUNCTION_78
0x40046ce	            0x89d5	                            mov ebp, edx	      2107	ref-filter.c	FUNCTION_78
0x40046d0	          0x83e501	                              and ebp, 1	      2107	ref-filter.c	FUNCTION_78
0x40046d3	            0x89d0	                            mov eax, edx	      2114	ref-filter.c	FUNCTION_78
0x40046d5	          0x83e03e	                           and eax, 0x3e	      2114	ref-filter.c	FUNCTION_78
0x40046d8	          0x894644	             mov dword [rsi + 0x44], eax	      2114	ref-filter.c	FUNCTION_78
0x40046db	    0xc74424340100	               mov dword [rsp + 0x34], 1	      1632	ref-filter.c	CALL_1
0x40046e3	    0xc7442430f8ff	        mov dword [rsp + 0x30], 0x1fff8 	      1632	ref-filter.c	CALL_1
0x40046eb	    0xc74424380000	               mov dword [rsp + 0x38], 0	      1632	ref-filter.c	CALL_1
0x40046f3	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1632	ref-filter.c	CALL_1
0x40046fc	    0xc744244c0100	               mov dword [rsp + 0x4c], 1	      1632	ref-filter.c	CALL_1
0x4004704	    0xc7442448f8ff	        mov dword [rsp + 0x48], 0x1fff8 	      1632	ref-filter.c	CALL_1
0x400470c	    0xc74424500000	               mov dword [rsp + 0x50], 0	      1632	ref-filter.c	CALL_1
0x4004714	    0x48c744245800	               mov qword [rsp + 0x58], 0	      1632	ref-filter.c	CALL_1
0x400471d	            0x85c0	                           test eax, eax	      2120	ref-filter.c	FUNCTION_78	IF_2
0x400471f	            0x750a	                           jne 0x400472b	      2120	ref-filter.c	FUNCTION_78	IF_2
0x4004721	      0xbf00000000	                              mov edi, 0	      2121	ref-filter.c	FUNCTION_78	CALL_3
0x4004726	      0xe800000000	                          call 0x400472b	      2121	ref-filter.c	FUNCTION_78	CALL_3
0x400472b	          0x4889f3	                            mov rbx, rsi	      2121	ref-filter.c	FUNCTION_78	CALL_3
0x400472e	          0x83f804	                              cmp eax, 4	      2129	ref-filter.c	FUNCTION_78	ELSE_1	IF_3
0x4004731	            0x751d	                           jne 0x4004750	      2129	ref-filter.c	FUNCTION_78	ELSE_1	IF_3
0x4004733	            0x89e9	                            mov ecx, ebp	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4004735	      0x488d542420	                   lea rdx, [rsp + 0x20]	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x400473a	      0xbe00000000	                              mov esi, 0	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x400473f	      0xbf00000000	                              mov edi, 0	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4004744	      0xe800000000	                          call 0x4004749	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4004749	            0x89c5	                            mov ebp, eax	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x400474b	      0xe932010000	                           jmp 0x4004882	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4004750	          0x83f808	                              cmp eax, 8	      2131	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4004753	            0x751d	                           jne 0x4004772	      2131	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4004755	            0x89e9	                            mov ecx, ebp	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4004757	      0x488d542420	                   lea rdx, [rsp + 0x20]	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x400475c	      0xbe00000000	                              mov esi, 0	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4004761	      0xbf00000000	                              mov edi, 0	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4004766	      0xe800000000	                          call 0x400476b	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x400476b	            0x89c5	                            mov ebp, eax	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x400476d	      0xe910010000	                           jmp 0x4004882	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4004772	          0x83f802	                              cmp eax, 2	      2133	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4004775	            0x751d	                           jne 0x4004794	      2133	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4004777	            0x89e9	                            mov ecx, ebp	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4004779	      0x488d542420	                   lea rdx, [rsp + 0x20]	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x400477e	      0xbe00000000	                              mov esi, 0	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4004783	      0xbf00000000	                              mov edi, 0	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4004788	      0xe800000000	                          call 0x400478d	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x400478d	            0x89c5	                            mov ebp, eax	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x400478f	      0xe9ee000000	                           jmp 0x4004882	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4004794	          0xf6c21e	                           test dl, 0x1e	      2135	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x4004797	     0xf84e9000000	                            je 0x4004886	      2135	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x400479d	    0x48c704240000	                      mov qword [rsp], 0	      1843	ref-filter.c	FUNCTION_68
0x40047a5	    0x48c744240800	                  mov qword [rsp + 8], 0	      1843	ref-filter.c	FUNCTION_68
0x40047ae	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1843	ref-filter.c	FUNCTION_68
0x40047b7	        0xf6464002	               test byte [rsi + 0x40], 2	      1846	ref-filter.c	FUNCTION_68	IF_1
0x40047bb	            0x751d	                           jne 0x40047da	      1846	ref-filter.c	FUNCTION_68	IF_1
0x40047bd	            0x89e9	                            mov ecx, ebp	      1852	ref-filter.c	FUNCTION_68	IF_1	CALL_1
0x40047bf	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1852	ref-filter.c	FUNCTION_68	IF_1	CALL_1
0x40047c4	      0xbe00000000	                              mov esi, 0	      1852	ref-filter.c	FUNCTION_68	IF_1	CALL_1
0x40047c9	      0xbf00000000	                              mov edi, 0	      1852	ref-filter.c	FUNCTION_68	IF_1	CALL_1
0x40047ce	      0xe800000000	                          call 0x40047d3	      1852	ref-filter.c	FUNCTION_68	IF_1	CALL_1
0x40047d3	            0x89c5	                            mov ebp, eax	      1852	ref-filter.c	FUNCTION_68	IF_1	CALL_1
0x40047d5	      0xe9a8000000	                           jmp 0x4004882	      1852	ref-filter.c	FUNCTION_68	IF_1	CALL_1
0x40047da	          0x488b06	                    mov rax, qword [rsi]	      1855	ref-filter.c	FUNCTION_68	IF_2
0x40047dd	          0x488b30	                    mov rsi, qword [rax]	      1855	ref-filter.c	FUNCTION_68	IF_2
0x40047e0	          0x4885f6	                           test rsi, rsi	      1855	ref-filter.c	FUNCTION_68	IF_2
0x40047e3	            0x751d	                           jne 0x4004802	      1855	ref-filter.c	FUNCTION_68	IF_2
0x40047e5	            0x89e9	                            mov ecx, ebp	      1857	ref-filter.c	FUNCTION_68	IF_2	CALL_2
0x40047e7	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1857	ref-filter.c	FUNCTION_68	IF_2	CALL_2
0x40047ec	      0xbe00000000	                              mov esi, 0	      1857	ref-filter.c	FUNCTION_68	IF_2	CALL_2
0x40047f1	      0xbf00000000	                              mov edi, 0	      1857	ref-filter.c	FUNCTION_68	IF_2	CALL_2
0x40047f6	      0xe800000000	                          call 0x40047fb	      1857	ref-filter.c	FUNCTION_68	IF_2	CALL_2
0x40047fb	            0x89c5	                            mov ebp, eax	      1857	ref-filter.c	FUNCTION_68	IF_2	CALL_2
0x40047fd	      0xe980000000	                           jmp 0x4004882	      1857	ref-filter.c	FUNCTION_68	IF_2	CALL_2
0x4004802	      0x4883780800	                  cmp qword [rax + 8], 0	      1860	ref-filter.c	FUNCTION_68	IF_3
0x4004807	            0x7518	                           jne 0x4004821	      1860	ref-filter.c	FUNCTION_68	IF_3
0x4004809	           0xfb606	                   movzx eax, byte [rsi]	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x400480c	            0x84c0	                             test al, al	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x400480e	            0x7444	                            je 0x4004854	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004810	           0xfb6c0	                           movzx eax, al	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004813	          0x4889f2	                            mov rdx, rsi	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004816	    0xf68000000000	                      test byte [rax], 8	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x400481d	            0x741c	                            je 0x400483b	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x400481f	            0xeb36	                           jmp 0x4004857	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004821	            0x89e9	                            mov ecx, ebp	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x4004823	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x4004828	      0xbe00000000	                              mov esi, 0	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x400482d	      0xbf00000000	                              mov edi, 0	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x4004832	      0xe800000000	                          call 0x4004837	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x4004837	            0x89c5	                            mov ebp, eax	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x4004839	            0xeb47	                           jmp 0x4004882	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x400483b	        0x4883c201	                              add rdx, 1	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x400483f	           0xfb602	                   movzx eax, byte [rdx]	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004842	            0x84c0	                             test al, al	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004844	            0x7411	                            je 0x4004857	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004846	           0xfb6c0	                           movzx eax, al	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004849	    0xf68000000000	                      test byte [rax], 8	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004850	            0x74e9	                            je 0x400483b	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004852	            0xeb03	                           jmp 0x4004857	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004854	          0x4889f2	                            mov rdx, rsi	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004857	          0x4829f2	                            sub rdx, rsi	      1830	ref-filter.c	FUNCTION_67	CALL_1
0x400485a	          0x4889e7	                            mov rdi, rsp	      1830	ref-filter.c	FUNCTION_67	CALL_1
0x400485d	      0xe800000000	                          call 0x4004862	      1830	ref-filter.c	FUNCTION_67	CALL_1
0x4004862	            0x89e9	                            mov ecx, ebp	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x4004864	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x4004869	      0xbe00000000	                              mov esi, 0	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x400486e	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x4004873	      0xe800000000	                          call 0x4004878	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x4004878	            0x89c5	                            mov ebp, eax	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x400487a	          0x4889e7	                            mov rdi, rsp	      1874	ref-filter.c	FUNCTION_68	CALL_6
0x400487d	      0xe800000000	                          call 0x4004882	      1874	ref-filter.c	FUNCTION_68	CALL_6
0x4004882	            0x85ed	                           test ebp, ebp	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x4004884	            0x751a	                           jne 0x40048a0	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x4004886	      0xbd00000000	                              mov ebp, 0	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x400488b	        0xf6434420	           test byte [rbx + 0x44], 0x20 	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x400488f	            0x740f	                            je 0x40048a0	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x4004891	      0x488d742420	                   lea rsi, [rsp + 0x20]	      2138	ref-filter.c	FUNCTION_78	ELSE_1	CALL_8
0x4004896	      0xbf00000000	                              mov edi, 0	      2138	ref-filter.c	FUNCTION_78	ELSE_1	CALL_8
0x400489b	      0xe800000000	                          call 0x40048a0	      2138	ref-filter.c	FUNCTION_78	ELSE_1	CALL_8
0x40048a0	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2141	ref-filter.c	FUNCTION_78	CALL_9
0x40048a5	      0xe889c3ffff	           call sym.clear_contains_cache	      2141	ref-filter.c	FUNCTION_78	CALL_9
0x40048aa	      0x488d7c2448	                   lea rdi, [rsp + 0x48]	      2142	ref-filter.c	FUNCTION_78	CALL_10
0x40048af	      0xe87fc3ffff	           call sym.clear_contains_cache	      2142	ref-filter.c	FUNCTION_78	CALL_10
0x40048b4	      0x48837b3800	               cmp qword [rbx + 0x38], 0	      2145	ref-filter.c	FUNCTION_78	IF_8
0x40048b9	            0x740a	                            je 0x40048c5	      2145	ref-filter.c	FUNCTION_78	IF_8
0x40048bb	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2146	ref-filter.c	FUNCTION_78	CALL_11
0x40048c0	      0xe81bc6ffff	                call sym.do_merge_filter	      2146	ref-filter.c	FUNCTION_78	CALL_11
0x40048c5	            0x89e8	                            mov eax, ebp	      2149	ref-filter.c	FUNCTION_78
0x40048c7	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      2149	ref-filter.c	FUNCTION_78
0x40048cc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2149	ref-filter.c	FUNCTION_78
0x40048d5	            0x7405	                            je 0x40048dc	      2149	ref-filter.c	FUNCTION_78
0x40048d7	      0xe800000000	                          call 0x40048dc	      2149	ref-filter.c	FUNCTION_78
0x40048dc	        0x4883c478	                           add rsp, 0x78	      2149	ref-filter.c	FUNCTION_78
0x40048e0	              0x5b	                                 pop rbx	      2149	ref-filter.c	FUNCTION_78
0x40048e1	              0x5d	                                 pop rbp	      2149	ref-filter.c	FUNCTION_78
0x40048e2	              0xc3	                                     ret	      2149	ref-filter.c	FUNCTION_78
setup_ref_filter_porcelain_msg	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,0:functions,0:CALL,4:ELSE,0	23
0x4003701	        0x4883ec08	                              sub rsp, 8	        34	ref-filter.c	FUNCTION_1
0x4003705	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x400370a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x400370f	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4003714	      0xe800000000	                          call 0x4003719	        54	gettext.h	FUNCTION_93
0x4003719	    0x488905000000	            mov qword [0x04003720], rax 	        35	ref-filter.c	FUNCTION_1	CALL_1
0x4003720	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4003725	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x400372a	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x400372f	      0xe800000000	                          call 0x4003734	        54	gettext.h	FUNCTION_93
0x4003734	    0x488905000000	            mov qword [0x0400373b], rax 	        36	ref-filter.c	FUNCTION_1	CALL_2
0x400373b	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4003740	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4003745	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x400374a	      0xe800000000	                          call 0x400374f	        54	gettext.h	FUNCTION_93
0x400374f	    0x488905000000	            mov qword [0x04003756], rax 	        37	ref-filter.c	FUNCTION_1	CALL_3
0x4003756	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x400375b	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4003760	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4003765	      0xe800000000	                          call 0x400376a	        54	gettext.h	FUNCTION_93
0x400376a	    0x488905000000	            mov qword [0x04003771], rax 	        38	ref-filter.c	FUNCTION_1	CALL_4
0x4003771	        0x4883c408	                              add rsp, 8	        39	ref-filter.c	FUNCTION_1
0x4003775	              0xc3	                                     ret	        39	ref-filter.c	FUNCTION_1
then_atom_handler	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,9:functions,0:CALL,9:ELSE,2	104
0x400272d	            0x4154	                                push r12	       664	ref-filter.c	FUNCTION_26
0x400272f	              0x55	                                push rbp	       664	ref-filter.c	FUNCTION_26
0x4002730	              0x53	                                push rbx	       664	ref-filter.c	FUNCTION_26
0x4002731	          0x4989d4	                            mov r12, rdx	       664	ref-filter.c	FUNCTION_26
0x4002734	        0x488b5e08	                mov rbx, qword [rsi + 8]	       665	ref-filter.c	FUNCTION_26
0x4002738	    0x48817b200000	               cmp qword [rbx + 0x20], 0	       668	ref-filter.c	FUNCTION_26	IF_1
0x4002740	            0x7509	                           jne 0x400274b	       668	ref-filter.c	FUNCTION_26	IF_1
0x4002742	        0x488b6b28	            mov rbp, qword [rbx + 0x28] 	       669	ref-filter.c	FUNCTION_26	IF_1
0x4002746	          0x4885ed	                           test rbp, rbp	       670	ref-filter.c	FUNCTION_26	IF_2
0x4002749	            0x752e	                           jne 0x4002779	       670	ref-filter.c	FUNCTION_26	IF_2
0x400274b	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4002750	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4002755	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x400275a	      0xe800000000	                          call 0x400275f	        54	gettext.h	FUNCTION_93
0x400275f	          0x4889c2	                            mov rdx, rax	       671	ref-filter.c	FUNCTION_26	CALL_2
0x4002762	      0xbeffffffff	                     mov esi, 0xffffffff	       671	ref-filter.c	FUNCTION_26	CALL_2
0x4002767	          0x4c89e7	                            mov rdi, r12	       671	ref-filter.c	FUNCTION_26	CALL_2
0x400276a	      0xb800000000	                              mov eax, 0	       671	ref-filter.c	FUNCTION_26	CALL_2
0x400276f	      0xe8e1dbffff	                call sym.strbuf_addf_ret	       671	ref-filter.c	FUNCTION_26	CALL_2
0x4002774	      0xe92a010000	                           jmp 0x40028a3	       671	ref-filter.c	FUNCTION_26	CALL_2
0x4002779	         0xfb64510	           movzx eax, byte [rbp + 0x10] 	       672	ref-filter.c	FUNCTION_26	IF_3
0x400277d	            0xa801	                              test al, 1	       672	ref-filter.c	FUNCTION_26	IF_3
0x400277f	            0x742e	                            je 0x40027af	       672	ref-filter.c	FUNCTION_26	IF_3
0x4002781	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4002786	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x400278b	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4002790	      0xe800000000	                          call 0x4002795	        54	gettext.h	FUNCTION_93
0x4002795	          0x4889c2	                            mov rdx, rax	       673	ref-filter.c	FUNCTION_26	CALL_4
0x4002798	      0xbeffffffff	                     mov esi, 0xffffffff	       673	ref-filter.c	FUNCTION_26	CALL_4
0x400279d	          0x4c89e7	                            mov rdi, r12	       673	ref-filter.c	FUNCTION_26	CALL_4
0x40027a0	      0xb800000000	                              mov eax, 0	       673	ref-filter.c	FUNCTION_26	CALL_4
0x40027a5	      0xe8abdbffff	                call sym.strbuf_addf_ret	       673	ref-filter.c	FUNCTION_26	CALL_4
0x40027aa	      0xe9f4000000	                           jmp 0x40028a3	       673	ref-filter.c	FUNCTION_26	CALL_4
0x40027af	            0xa802	                              test al, 2	       674	ref-filter.c	FUNCTION_26	IF_4
0x40027b1	            0x742e	                            je 0x40027e1	       674	ref-filter.c	FUNCTION_26	IF_4
0x40027b3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x40027b8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40027bd	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x40027c2	      0xe800000000	                          call 0x40027c7	        54	gettext.h	FUNCTION_93
0x40027c7	          0x4889c2	                            mov rdx, rax	       675	ref-filter.c	FUNCTION_26	CALL_6
0x40027ca	      0xbeffffffff	                     mov esi, 0xffffffff	       675	ref-filter.c	FUNCTION_26	CALL_6
0x40027cf	          0x4c89e7	                            mov rdi, r12	       675	ref-filter.c	FUNCTION_26	CALL_6
0x40027d2	      0xb800000000	                              mov eax, 0	       675	ref-filter.c	FUNCTION_26	CALL_6
0x40027d7	      0xe879dbffff	                call sym.strbuf_addf_ret	       675	ref-filter.c	FUNCTION_26	CALL_6
0x40027dc	      0xe9c2000000	                           jmp 0x40028a3	       675	ref-filter.c	FUNCTION_26	CALL_6
0x40027e1	        0x804d1001	                 or byte [rbp + 0x10], 1	       676	ref-filter.c	FUNCTION_26
0x40027e5	          0x8b4500	                    mov eax, dword [rbp]	       682	ref-filter.c	FUNCTION_26	IF_5
0x40027e8	            0x85c0	                           test eax, eax	       682	ref-filter.c	FUNCTION_26	IF_5
0x40027ea	            0x7517	                           jne 0x4002803	       682	ref-filter.c	FUNCTION_26	IF_5
0x40027ec	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x40027f0	        0x488b7d08	                mov rdi, qword [rbp + 8]	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x40027f4	      0xe800000000	                          call 0x40027f9	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x40027f9	            0x85c0	                           test eax, eax	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x40027fb	            0x7559	                           jne 0x4002856	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x40027fd	        0x804d1004	                 or byte [rbp + 0x10], 4	       684	ref-filter.c	FUNCTION_26	IF_5	IF_6
0x4002801	            0xeb53	                           jmp 0x4002856	       684	ref-filter.c	FUNCTION_26	IF_5	IF_6
0x4002803	          0x83f801	                              cmp eax, 1	       685	ref-filter.c	FUNCTION_26	ELSE_1	IF_7
0x4002806	            0x7517	                           jne 0x400281f	       685	ref-filter.c	FUNCTION_26	ELSE_1	IF_7
0x4002808	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x400280c	        0x488b7d08	                mov rdi, qword [rbp + 8]	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x4002810	      0xe800000000	                          call 0x4002815	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x4002815	            0x85c0	                           test eax, eax	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x4002817	            0x743d	                            je 0x4002856	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x4002819	        0x804d1004	                 or byte [rbp + 0x10], 4	       687	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8
0x400281d	            0xeb37	                           jmp 0x4002856	       687	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8
0x400281f	      0x48837b1000	               cmp qword [rbx + 0x10], 0	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x4002824	            0x7430	                            je 0x4002856	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x4002826	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x400282a	           0xfb602	                   movzx eax, byte [rdx]	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x400282d	            0x84c0	                             test al, al	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x400282f	            0x7425	                            je 0x4002856	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x4002831	           0xfb6c0	                           movzx eax, al	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x4002834	    0xf68000000000	                      test byte [rax], 1	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x400283b	            0x750e	                           jne 0x400284b	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x400283d	            0xeb5e	                           jmp 0x400289d	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x400283f	           0xfb6c0	                           movzx eax, al	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x4002842	    0xf68000000000	                      test byte [rax], 1	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x4002849	            0x7452	                            je 0x400289d	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x400284b	        0x4883c201	                              add rdx, 1	       657	ref-filter.c	FUNCTION_25	WHILE_1
0x400284f	           0xfb602	                   movzx eax, byte [rdx]	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x4002852	            0x84c0	                             test al, al	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x4002854	            0x75e9	                           jne 0x400283f	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x4002856	    0x48c743100000	               mov qword [rbx + 0x10], 0	       164	strbuf.h	FUNCTION_97
0x400285e	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       165	strbuf.h	FUNCTION_97	IF_2
0x4002862	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_97	IF_2
0x4002868	            0x740a	                            je 0x4002874	       165	strbuf.h	FUNCTION_97	IF_2
0x400286a	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_97	IF_2
0x400286d	      0xb800000000	                              mov eax, 0	       691	ref-filter.c	FUNCTION_26
0x4002872	            0xeb2f	                           jmp 0x40028a3	       691	ref-filter.c	FUNCTION_26
0x4002874	    0x803d00000000	                cmp byte [0x0400287b], 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x400287b	            0x7419	                            je 0x4002896	       168	strbuf.h	FUNCTION_97	CALL_2
0x400287d	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x4002882	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_97	CALL_2
0x4002887	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x400288c	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x4002891	      0xe800000000	                          call 0x4002896	       168	strbuf.h	FUNCTION_97	CALL_2
0x4002896	      0xb800000000	                              mov eax, 0	       691	ref-filter.c	FUNCTION_26
0x400289b	            0xeb06	                           jmp 0x40028a3	       691	ref-filter.c	FUNCTION_26
0x400289d	        0x804d1004	                 or byte [rbp + 0x10], 4	       689	ref-filter.c	FUNCTION_26	ELSE_2	IF_9
0x40028a1	            0xebb3	                           jmp 0x4002856	       689	ref-filter.c	FUNCTION_26	ELSE_2	IF_9
0x40028a3	              0x5b	                                 pop rbx	       692	ref-filter.c	FUNCTION_26
0x40028a4	              0x5d	                                 pop rbp	       692	ref-filter.c	FUNCTION_26
0x40028a5	            0x415c	                                 pop r12	       692	ref-filter.c	FUNCTION_26
0x40028a7	              0xc3	                                     ret	       692	ref-filter.c	FUNCTION_26
push_stack_element	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,0:functions,0:CALL,2:ELSE,0	18
0x4001098	              0x55	                                push rbp	       558	ref-filter.c	FUNCTION_19
0x4001099	              0x53	                                push rbx	       558	ref-filter.c	FUNCTION_19
0x400109a	        0x4883ec08	                              sub rsp, 8	       558	ref-filter.c	FUNCTION_19
0x400109e	          0x4889fd	                            mov rbp, rdi	       558	ref-filter.c	FUNCTION_19
0x40010a1	      0xbe30000000	                           mov esi, 0x30	       559	ref-filter.c	FUNCTION_19	CALL_1
0x40010a6	      0xbf01000000	                              mov edi, 1	       559	ref-filter.c	FUNCTION_19	CALL_1
0x40010ab	      0xe800000000	                          call 0x40010b0	       559	ref-filter.c	FUNCTION_19	CALL_1
0x40010b0	          0x4889c3	                            mov rbx, rax	       559	ref-filter.c	FUNCTION_19	CALL_1
0x40010b3	        0x488d7808	                      lea rdi, [rax + 8]	       561	ref-filter.c	FUNCTION_19	CALL_2
0x40010b7	      0xbe00000000	                              mov esi, 0	       561	ref-filter.c	FUNCTION_19	CALL_2
0x40010bc	      0xe800000000	                          call 0x40010c1	       561	ref-filter.c	FUNCTION_19	CALL_2
0x40010c1	        0x488b4500	                    mov rax, qword [rbp]	       562	ref-filter.c	FUNCTION_19
0x40010c5	          0x488903	                    mov qword [rbx], rax	       562	ref-filter.c	FUNCTION_19
0x40010c8	        0x48895d00	                    mov qword [rbp], rbx	       563	ref-filter.c	FUNCTION_19
0x40010cc	        0x4883c408	                              add rsp, 8	       564	ref-filter.c	FUNCTION_19
0x40010d0	              0x5b	                                 pop rbx	       564	ref-filter.c	FUNCTION_19
0x40010d1	              0x5d	                                 pop rbp	       564	ref-filter.c	FUNCTION_19
0x40010d2	              0xc3	                                     ret	       564	ref-filter.c	FUNCTION_19
trailers_atom_parser	SWITCH,0:FOR,1:WHILE,0:DO,0:IF,3:functions,0:CALL,7:ELSE,2	80
0x4000178	            0x4154	                                push r12	       222	ref-filter.c	FUNCTION_8
0x400017a	              0x55	                                push rbp	       222	ref-filter.c	FUNCTION_8
0x400017b	              0x53	                                push rbx	       222	ref-filter.c	FUNCTION_8
0x400017c	        0x4883ec30	                           sub rsp, 0x30	       222	ref-filter.c	FUNCTION_8
0x4000180	          0x4889f3	                            mov rbx, rsi	       222	ref-filter.c	FUNCTION_8
0x4000183	    0x64488b042528	                mov rax, qword fs:[0x28]	       222	ref-filter.c	FUNCTION_8
0x400018c	      0x4889442428	             mov qword [rsp + 0x28], rax	       222	ref-filter.c	FUNCTION_8
0x4000191	            0x31c0	                            xor eax, eax	       222	ref-filter.c	FUNCTION_8
0x4000193	    0x48c704240000	                      mov qword [rsp], 0	       223	ref-filter.c	FUNCTION_8
0x400019b	    0xc74424080000	                  mov dword [rsp + 8], 0	       223	ref-filter.c	FUNCTION_8
0x40001a3	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       223	ref-filter.c	FUNCTION_8
0x40001ab	      0x804c241001	                 or byte [rsp + 0x10], 1	       223	ref-filter.c	FUNCTION_8
0x40001b0	    0x48c744241800	               mov qword [rsp + 0x18], 0	       223	ref-filter.c	FUNCTION_8
0x40001b9	          0x4885d2	                           test rdx, rdx	       226	ref-filter.c	FUNCTION_8	IF_1
0x40001bc	     0xf84c5000000	                            je 0x4000287	       226	ref-filter.c	FUNCTION_8	IF_1
0x40001c2	          0x4889d6	                            mov rsi, rdx	       226	ref-filter.c	FUNCTION_8	IF_1
0x40001c5	          0x4889cd	                            mov rbp, rcx	       226	ref-filter.c	FUNCTION_8	IF_1
0x40001c8	      0xb9ffffffff	                     mov ecx, 0xffffffff	       227	ref-filter.c	FUNCTION_8	IF_1	CALL_1
0x40001cd	      0xba2c000000	                           mov edx, 0x2c	       227	ref-filter.c	FUNCTION_8	IF_1	CALL_1
0x40001d2	          0x4889e7	                            mov rdi, rsp	       227	ref-filter.c	FUNCTION_8	IF_1	CALL_1
0x40001d5	      0xe800000000	                          call 0x40001da	       227	ref-filter.c	FUNCTION_8	IF_1	CALL_1
0x40001da	      0x448b442408	                mov r8d, dword [rsp + 8]	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x40001df	          0x4585c0	                           test r8d, r8d	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x40001e2	     0xf849f000000	                            je 0x4000287	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x40001e8	        0x4c8b0c24	                     mov r9, qword [rsp]	       229	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x40001ec	      0xb800000000	                              mov eax, 0	       229	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x40001f1	          0x4863d0	                         movsxd rdx, eax	       229	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x40001f4	        0x48c1e204	                              shl rdx, 4	       229	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x40001f8	        0x4d8b2411	               mov r12, qword [r9 + rdx]	       229	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x40001fc	      0xbf00000000	                              mov edi, 0	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0x4000201	      0xb907000000	                              mov ecx, 7	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0x4000206	          0x4c89e6	                            mov rsi, r12	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0x4000209	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0x400020b	           0xf97c1	                                 seta cl	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0x400020e	           0xf92c2	                                 setb dl	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0x4000211	            0x38d1	                              cmp cl, dl	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0x4000213	            0x7509	                           jne 0x400021e	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0x4000215	    0xc74324010000	               mov dword [rbx + 0x24], 1	       231	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2
0x400021c	            0xeb5d	                           jmp 0x400027b	       231	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2
0x400021e	      0xbf00000000	                              mov edi, 0	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000223	      0xb905000000	                              mov ecx, 5	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000228	          0x4c89e6	                            mov rsi, r12	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x400022b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x400022d	           0xf97c1	                                 seta cl	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000230	           0xf92c2	                                 setb dl	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000233	            0x38d1	                              cmp cl, dl	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000235	            0x7509	                           jne 0x4000240	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000237	    0xc7431c010000	               mov dword [rbx + 0x1c], 1	       233	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3
0x400023e	            0xeb3b	                           jmp 0x400027b	       233	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3
0x4000240	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4000245	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x400024a	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x400024f	      0xe800000000	                          call 0x4000254	        54	gettext.h	FUNCTION_93
0x4000254	          0x4c89e2	                            mov rdx, r12	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0x4000257	          0x4889c6	                            mov rsi, rax	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0x400025a	          0x4889ef	                            mov rdi, rbp	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0x400025d	      0xb800000000	                              mov eax, 0	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0x4000262	      0xe800000000	                          call 0x4000267	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0x4000267	      0xbe00000000	                              mov esi, 0	       236	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_6
0x400026c	          0x4889e7	                            mov rdi, rsp	       236	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_6
0x400026f	      0xe800000000	                          call 0x4000274	       236	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_6
0x4000274	      0xb8ffffffff	                     mov eax, 0xffffffff	       237	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2
0x4000279	            0xeb25	                           jmp 0x40002a0	       237	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2
0x400027b	          0x83c001	                              add eax, 1	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x400027e	          0x4139c0	                            cmp r8d, eax	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000281	     0xf856affffff	                           jne 0x40001f1	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000287	    0xc74310060000	               mov dword [rbx + 0x10], 6	       241	ref-filter.c	FUNCTION_8
0x400028e	      0xbe00000000	                              mov esi, 0	       242	ref-filter.c	FUNCTION_8	CALL_7
0x4000293	          0x4889e7	                            mov rdi, rsp	       242	ref-filter.c	FUNCTION_8	CALL_7
0x4000296	      0xe800000000	                          call 0x400029b	       242	ref-filter.c	FUNCTION_8	CALL_7
0x400029b	      0xb800000000	                              mov eax, 0	       243	ref-filter.c	FUNCTION_8
0x40002a0	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	       244	ref-filter.c	FUNCTION_8
0x40002a5	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       244	ref-filter.c	FUNCTION_8
0x40002ae	            0x7405	                            je 0x40002b5	       244	ref-filter.c	FUNCTION_8
0x40002b0	      0xe800000000	                          call 0x40002b5	       244	ref-filter.c	FUNCTION_8
0x40002b5	        0x4883c430	                           add rsp, 0x30	       244	ref-filter.c	FUNCTION_8
0x40002b9	              0x5b	                                 pop rbx	       244	ref-filter.c	FUNCTION_8
0x40002ba	              0x5d	                                 pop rbp	       244	ref-filter.c	FUNCTION_8
0x40002bb	            0x415c	                                 pop r12	       244	ref-filter.c	FUNCTION_8
0x40002bd	              0xc3	                                     ret	       244	ref-filter.c	FUNCTION_8
else_atom_handler	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,4:functions,0:CALL,7:ELSE,0	60
0x40010d3	            0x4154	                                push r12	       696	ref-filter.c	FUNCTION_27
0x40010d5	              0x55	                                push rbp	       696	ref-filter.c	FUNCTION_27
0x40010d6	              0x53	                                push rbx	       696	ref-filter.c	FUNCTION_27
0x40010d7	          0x4989d4	                            mov r12, rdx	       696	ref-filter.c	FUNCTION_27
0x40010da	        0x488b6e08	                mov rbp, qword [rsi + 8]	       697	ref-filter.c	FUNCTION_27
0x40010de	    0x48817d200000	               cmp qword [rbp + 0x20], 0	       700	ref-filter.c	FUNCTION_27	IF_1
0x40010e6	            0x750c	                           jne 0x40010f4	       700	ref-filter.c	FUNCTION_27	IF_1
0x40010e8	          0x4889f3	                            mov rbx, rsi	       700	ref-filter.c	FUNCTION_27	IF_1
0x40010eb	        0x488b5528	            mov rdx, qword [rbp + 0x28] 	       701	ref-filter.c	FUNCTION_27	IF_1
0x40010ef	          0x4885d2	                           test rdx, rdx	       702	ref-filter.c	FUNCTION_27	IF_2
0x40010f2	            0x752e	                           jne 0x4001122	       702	ref-filter.c	FUNCTION_27	IF_2
0x40010f4	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x40010f9	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40010fe	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4001103	      0xe800000000	                          call 0x4001108	        54	gettext.h	FUNCTION_93
0x4001108	          0x4889c2	                            mov rdx, rax	       703	ref-filter.c	FUNCTION_27	CALL_2
0x400110b	      0xbeffffffff	                     mov esi, 0xffffffff	       703	ref-filter.c	FUNCTION_27	CALL_2
0x4001110	          0x4c89e7	                            mov rdi, r12	       703	ref-filter.c	FUNCTION_27	CALL_2
0x4001113	      0xb800000000	                              mov eax, 0	       703	ref-filter.c	FUNCTION_27	CALL_2
0x4001118	      0xe838f2ffff	                call sym.strbuf_addf_ret	       703	ref-filter.c	FUNCTION_27	CALL_2
0x400111d	      0xe98c000000	                           jmp 0x40011ae	       703	ref-filter.c	FUNCTION_27	CALL_2
0x4001122	         0xfb64210	           movzx eax, byte [rdx + 0x10] 	       704	ref-filter.c	FUNCTION_27	IF_3
0x4001126	            0xa801	                              test al, 1	       704	ref-filter.c	FUNCTION_27	IF_3
0x4001128	            0x752b	                           jne 0x4001155	       704	ref-filter.c	FUNCTION_27	IF_3
0x400112a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x400112f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4001134	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4001139	      0xe800000000	                          call 0x400113e	        54	gettext.h	FUNCTION_93
0x400113e	          0x4889c2	                            mov rdx, rax	       705	ref-filter.c	FUNCTION_27	CALL_4
0x4001141	      0xbeffffffff	                     mov esi, 0xffffffff	       705	ref-filter.c	FUNCTION_27	CALL_4
0x4001146	          0x4c89e7	                            mov rdi, r12	       705	ref-filter.c	FUNCTION_27	CALL_4
0x4001149	      0xb800000000	                              mov eax, 0	       705	ref-filter.c	FUNCTION_27	CALL_4
0x400114e	      0xe802f2ffff	                call sym.strbuf_addf_ret	       705	ref-filter.c	FUNCTION_27	CALL_4
0x4001153	            0xeb59	                           jmp 0x40011ae	       705	ref-filter.c	FUNCTION_27	CALL_4
0x4001155	            0xa802	                              test al, 2	       706	ref-filter.c	FUNCTION_27	IF_4
0x4001157	            0x742b	                            je 0x4001184	       706	ref-filter.c	FUNCTION_27	IF_4
0x4001159	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x400115e	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4001163	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4001168	      0xe800000000	                          call 0x400116d	        54	gettext.h	FUNCTION_93
0x400116d	          0x4889c2	                            mov rdx, rax	       707	ref-filter.c	FUNCTION_27	CALL_6
0x4001170	      0xbeffffffff	                     mov esi, 0xffffffff	       707	ref-filter.c	FUNCTION_27	CALL_6
0x4001175	          0x4c89e7	                            mov rdi, r12	       707	ref-filter.c	FUNCTION_27	CALL_6
0x4001178	      0xb800000000	                              mov eax, 0	       707	ref-filter.c	FUNCTION_27	CALL_6
0x400117d	      0xe8d3f1ffff	                call sym.strbuf_addf_ret	       707	ref-filter.c	FUNCTION_27	CALL_6
0x4001182	            0xeb2a	                           jmp 0x40011ae	       707	ref-filter.c	FUNCTION_27	CALL_6
0x4001184	        0x804a1002	                 or byte [rdx + 0x10], 2	       708	ref-filter.c	FUNCTION_27
0x4001188	        0x488d7e08	                      lea rdi, [rsi + 8]	       709	ref-filter.c	FUNCTION_27	CALL_7
0x400118c	      0xe807ffffff	             call sym.push_stack_element	       709	ref-filter.c	FUNCTION_27	CALL_7
0x4001191	        0x488b4308	                mov rax, qword [rbx + 8]	       710	ref-filter.c	FUNCTION_27
0x4001195	        0x488b5528	            mov rdx, qword [rbp + 0x28] 	       710	ref-filter.c	FUNCTION_27
0x4001199	        0x48895028	             mov qword [rax + 0x28], rdx	       710	ref-filter.c	FUNCTION_27
0x400119d	        0x488b4308	                mov rax, qword [rbx + 8]	       711	ref-filter.c	FUNCTION_27
0x40011a1	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	       711	ref-filter.c	FUNCTION_27
0x40011a5	        0x48895020	             mov qword [rax + 0x20], rdx	       711	ref-filter.c	FUNCTION_27
0x40011a9	      0xb800000000	                              mov eax, 0	       712	ref-filter.c	FUNCTION_27
0x40011ae	              0x5b	                                 pop rbx	       713	ref-filter.c	FUNCTION_27
0x40011af	              0x5d	                                 pop rbp	       713	ref-filter.c	FUNCTION_27
0x40011b0	            0x415c	                                 pop r12	       713	ref-filter.c	FUNCTION_27
0x40011b2	              0xc3	                                     ret	       713	ref-filter.c	FUNCTION_27
new_ref_array_item	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,0:functions,0:CALL,1:ELSE,0	46
0x4000d52	            0x4155	                                push r13	      1917	ref-filter.c	FUNCTION_70
0x4000d54	            0x4154	                                push r12	      1917	ref-filter.c	FUNCTION_70
0x4000d56	              0x55	                                push rbp	      1917	ref-filter.c	FUNCTION_70
0x4000d57	              0x53	                                push rbx	      1917	ref-filter.c	FUNCTION_70
0x4000d58	        0x4883ec08	                              sub rsp, 8	      1917	ref-filter.c	FUNCTION_70
0x4000d5c	          0x4989fc	                            mov r12, rdi	      1917	ref-filter.c	FUNCTION_70
0x4000d5f	      0xb800000000	                              mov eax, 0	      1920	ref-filter.c	FUNCTION_70
0x4000d64	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1920	ref-filter.c	FUNCTION_70
0x4000d6b	            0xf2ae	              repne scasb al, byte [rdi]	      1920	ref-filter.c	FUNCTION_70
0x4000d6d	          0x48f7d1	                                 not rcx	      1920	ref-filter.c	FUNCTION_70
0x4000d70	        0x488d59ff	                      lea rbx, [rcx - 1]	      1920	ref-filter.c	FUNCTION_70
0x4000d74	        0x4883fbc7	             cmp rbx, 0xffffffffffffffc7	       785	git-compat-util.h	FUNCTION_119	IF_1
0x4000d78	            0x7612	                           jbe 0x4000d8c	       785	git-compat-util.h	FUNCTION_119	IF_1
0x4000d7a	          0x4889da	                            mov rdx, rbx	       786	git-compat-util.h	FUNCTION_119	IF_1	CALL_1
0x4000d7d	      0xbe38000000	                           mov esi, 0x38	       786	git-compat-util.h	FUNCTION_119	IF_1	CALL_1
0x4000d82	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_119	IF_1	CALL_1
0x4000d87	      0xe800000000	                          call 0x4000d8c	       786	git-compat-util.h	FUNCTION_119	IF_1	CALL_1
0x4000d8c	          0x4889f5	                            mov rbp, rsi	       786	git-compat-util.h	FUNCTION_119	IF_1	CALL_1
0x4000d8f	        0x4883fbc7	             cmp rbx, 0xffffffffffffffc7	       785	git-compat-util.h	FUNCTION_119	IF_1
0x4000d93	            0x751b	                           jne 0x4000db0	       785	git-compat-util.h	FUNCTION_119	IF_1
0x4000d95	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_119	IF_1	CALL_1
0x4000d9a	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_119	IF_1	CALL_1
0x4000da1	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_119	IF_1	CALL_1
0x4000da6	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_119	IF_1	CALL_1
0x4000dab	      0xe800000000	                          call 0x4000db0	       786	git-compat-util.h	FUNCTION_119	IF_1	CALL_1
0x4000db0	        0x488d7339	                   lea rsi, [rbx + 0x39]	      1920	ref-filter.c	FUNCTION_70
0x4000db4	      0xbf01000000	                              mov edi, 1	      1920	ref-filter.c	FUNCTION_70
0x4000db9	      0xe800000000	                          call 0x4000dbe	      1920	ref-filter.c	FUNCTION_70
0x4000dbe	          0x4989c5	                            mov r13, rax	      1920	ref-filter.c	FUNCTION_70
0x4000dc1	        0x488d7838	                   lea rdi, [rax + 0x38]	        53	string3.h	FUNCTION_133	CALL_3
0x4000dc5	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_133	CALL_3
0x4000dc8	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_133	CALL_3
0x4000dcb	      0xe800000000	                          call 0x4000dd0	        53	string3.h	FUNCTION_133	CALL_3
0x4000dd0	        0x488b4500	                    mov rax, qword [rbp]	        53	string3.h	FUNCTION_133	CALL_3
0x4000dd4	        0x49894500	                    mov qword [r13], rax	        53	string3.h	FUNCTION_133	CALL_3
0x4000dd8	        0x488b4508	                mov rax, qword [rbp + 8]	        53	string3.h	FUNCTION_133	CALL_3
0x4000ddc	        0x49894508	                mov qword [r13 + 8], rax	        53	string3.h	FUNCTION_133	CALL_3
0x4000de0	          0x8b4510	            mov eax, dword [rbp + 0x10] 	        53	string3.h	FUNCTION_133	CALL_3
0x4000de3	        0x41894510	             mov dword [r13 + 0x10], eax	        53	string3.h	FUNCTION_133	CALL_3
0x4000de7	          0x4c89e8	                            mov rax, r13	      1924	ref-filter.c	FUNCTION_70
0x4000dea	        0x4883c408	                              add rsp, 8	      1924	ref-filter.c	FUNCTION_70
0x4000dee	              0x5b	                                 pop rbx	      1924	ref-filter.c	FUNCTION_70
0x4000def	              0x5d	                                 pop rbp	      1924	ref-filter.c	FUNCTION_70
0x4000df0	            0x415c	                                 pop r12	      1924	ref-filter.c	FUNCTION_70
0x4000df2	            0x415d	                                 pop r13	      1924	ref-filter.c	FUNCTION_70
0x4000df4	              0xc3	                                     ret	      1924	ref-filter.c	FUNCTION_70
populate_value	SWITCH,0:FOR,2:WHILE,0:DO,0:IF,31:functions,0:CALL,33:ELSE,17	352
0x4003adc	            0x4157	                                push r15	      1458	ref-filter.c	FUNCTION_57
0x4003ade	            0x4156	                                push r14	      1458	ref-filter.c	FUNCTION_57
0x4003ae0	            0x4155	                                push r13	      1458	ref-filter.c	FUNCTION_57
0x4003ae2	            0x4154	                                push r12	      1458	ref-filter.c	FUNCTION_57
0x4003ae4	              0x55	                                push rbp	      1458	ref-filter.c	FUNCTION_57
0x4003ae5	              0x53	                                push rbx	      1458	ref-filter.c	FUNCTION_57
0x4003ae6	    0x4881ec480100	                          sub rsp, 0x148	      1458	ref-filter.c	FUNCTION_57
0x4003aed	          0x4989fe	                            mov r14, rdi	      1458	ref-filter.c	FUNCTION_57
0x4003af0	      0x4889742410	             mov qword [rsp + 0x10], rsi	      1458	ref-filter.c	FUNCTION_57
0x4003af5	    0x64488b042528	                mov rax, qword fs:[0x28]	      1458	ref-filter.c	FUNCTION_57
0x4003afe	    0x488984243801	            mov qword [rsp + 0x138], rax	      1458	ref-filter.c	FUNCTION_57
0x4003b06	            0x31c0	                            xor eax, eax	      1458	ref-filter.c	FUNCTION_57
0x4003b08	    0x48633d000000	         movsxd rdi, dword [0x04003b0f] 	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x4003b0f	      0xbe20000000	                           mov esi, 0x20	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x4003b14	      0xe800000000	                          call 0x4003b19	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x4003b19	        0x49894630	             mov qword [r14 + 0x30], rax	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x4003b1d	    0x8b0500000000	            mov eax, dword [0x04003b23] 	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4003b23	            0x85c0	                           test eax, eax	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4003b25	     0xf84df040000	                            je 0x400400a	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4003b2b	      0x41f6461401	               test byte [r14 + 0x14], 1	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4003b30	            0x742f	                            je 0x4003b61	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4003b32	      0x49837e2000	               cmp qword [r14 + 0x20], 0	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4003b37	            0x7528	                           jne 0x4003b61	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4003b39	        0x498d7e38	                   lea rdi, [r14 + 0x38]	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x4003b3d	      0xb900000000	                              mov ecx, 0	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x4003b42	      0xba00000000	                              mov edx, 0	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x4003b47	      0xbe01000000	                              mov esi, 1	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x4003b4c	      0xe800000000	                          call 0x4003b51	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x4003b51	          0x4885c0	                           test rax, rax	      1469	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x4003b54	      0xba00000000	                              mov edx, 0	      1469	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x4003b59	        0x480f44c2	                          cmove rax, rdx	      1469	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x4003b5d	        0x49894620	             mov qword [r14 + 0x20], rax	      1469	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x4003b61	    0x833d00000000	               cmp dword [0x04003b68], 0	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003b68	     0xf8e17040000	                           jle 0x4003f85	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003b6e	    0x41bd00000000	                             mov r13d, 0	      1458	ref-filter.c	FUNCTION_57
0x4003b74	        0x498d4638	                   lea rax, [r14 + 0x38]	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4003b78	      0x4889442408	                mov qword [rsp + 8], rax	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4003b7d	      0x488d442431	                   lea rax, [rsp + 0x31]	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x4003b82	      0x4889442418	             mov qword [rsp + 0x18], rax	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x4003b87	          0x4963dd	                        movsxd rbx, r13d	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x4003b8a	        0x488d2c5b	                  lea rbp, [rbx + rbx*2]	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x4003b8e	        0x48c1e505	                              shl rbp, 5	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x4003b92	    0x48032d000000	             add rbp, qword [0x04003b99]	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x4003b99	        0x4c8b6500	                    mov r12, qword [rbp]	      1475	ref-filter.c	FUNCTION_57	FOR_1
0x4003b9d	        0x48c1e305	                              shl rbx, 5	      1476	ref-filter.c	FUNCTION_57	FOR_1
0x4003ba1	        0x49035e30	             add rbx, qword [r14 + 0x30]	      1476	ref-filter.c	FUNCTION_57	FOR_1
0x4003ba5	    0x48c743080000	                  mov qword [rbx + 8], 0	      1481	ref-filter.c	FUNCTION_57	FOR_1
0x4003bad	        0x48896b18	             mov qword [rbx + 0x18], rbp	      1482	ref-filter.c	FUNCTION_57	FOR_1
0x4003bb1	    0x41bf00000000	                             mov r15d, 0	      1477	ref-filter.c	FUNCTION_57	FOR_1
0x4003bb7	      0x41803c242a	                    cmp byte [r12], 0x2a	      1484	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x4003bbc	            0x750a	                           jne 0x4003bc8	      1484	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x4003bbe	        0x4983c401	                              add r12, 1	      1486	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x4003bc2	    0x41bf01000000	                             mov r15d, 1	      1485	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x4003bc8	      0xbe00000000	                              mov esi, 0	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x4003bcd	          0x4c89e7	                            mov rdi, r12	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x4003bd0	      0xe800000000	                          call 0x4003bd5	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x4003bd5	            0x85c0	                           test eax, eax	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x4003bd7	            0x7424	                            je 0x4003bfd	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x4003bd9	      0x41f6461820	           test byte [r14 + 0x18], 0x20 	      1429	ref-filter.c	FUNCTION_55	IF_1
0x4003bde	            0x740a	                            je 0x4003bea	      1429	ref-filter.c	FUNCTION_55	IF_1
0x4003be0	      0xe800000000	                          call 0x4003be5	      1430	ref-filter.c	FUNCTION_55	CALL_1
0x4003be5	      0xe9d9020000	                           jmp 0x4003ec3	      1430	ref-filter.c	FUNCTION_55	CALL_1
0x4003bea	        0x488d7d10	                   lea rdi, [rbp + 0x10]	      1431	ref-filter.c	FUNCTION_55	CALL_2
0x4003bee	      0x488b742408	                mov rsi, qword [rsp + 8]	      1431	ref-filter.c	FUNCTION_55	CALL_2
0x4003bf3	      0xe8efd6ffff	                       call sym.show_ref	      1431	ref-filter.c	FUNCTION_55	CALL_2
0x4003bf8	      0xe9c6020000	                           jmp 0x4003ec3	      1431	ref-filter.c	FUNCTION_55	CALL_2
0x4003bfd	      0xbe00000000	                              mov esi, 0	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x4003c02	          0x4c89e7	                            mov rdi, r12	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x4003c05	      0xe800000000	                          call 0x4003c0a	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x4003c0a	            0x85c0	                           test eax, eax	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x4003c0c	            0x7420	                            je 0x4003c2e	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x4003c0e	        0x498b7620	            mov rsi, qword [r14 + 0x20] 	      1421	ref-filter.c	FUNCTION_54	IF_1
0x4003c12	      0xb800000000	                              mov eax, 0	      1422	ref-filter.c	FUNCTION_54	IF_1
0x4003c17	          0x4885f6	                           test rsi, rsi	      1421	ref-filter.c	FUNCTION_54	IF_1
0x4003c1a	     0xf84a3020000	                            je 0x4003ec3	      1421	ref-filter.c	FUNCTION_54	IF_1
0x4003c20	        0x488d7d10	                   lea rdi, [rbp + 0x10]	      1424	ref-filter.c	FUNCTION_54	CALL_1
0x4003c24	      0xe8bed6ffff	                       call sym.show_ref	      1424	ref-filter.c	FUNCTION_54	CALL_1
0x4003c29	      0xe995020000	                           jmp 0x4003ec3	      1424	ref-filter.c	FUNCTION_54	CALL_1
0x4003c2e	      0xbe00000000	                              mov esi, 0	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x4003c33	          0x4c89e7	                            mov rdi, r12	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x4003c36	      0xe800000000	                          call 0x4003c3b	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x4003c3b	            0x85c0	                           test eax, eax	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x4003c3d	            0x743c	                            je 0x4003c7b	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x4003c3f	        0x498d7e38	                   lea rdi, [r14 + 0x38]	      1496	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7	CALL_8
0x4003c43	      0xb800000000	                              mov eax, 0	      1496	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7	CALL_8
0x4003c48	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4003c4b	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4003c4d	     0xf845e030000	                            je 0x4003fb1	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4003c53	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4003c57	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4003c5b	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4003c5e	            0x74e8	                            je 0x4003c48	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4003c60	      0xe97d020000	                           jmp 0x4003ee2	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4003c65	          0x4889d9	                            mov rcx, rbx	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x4003c68	          0x4c89e2	                            mov rdx, r12	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x4003c6b	          0x4889c6	                            mov rsi, rax	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x4003c6e	          0x4889ef	                            mov rdi, rbp	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x4003c71	      0xe891d7ffff	        call sym.fill_remote_ref_details	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x4003c76	      0xe967020000	                           jmp 0x4003ee2	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x4003c7b	        0xf6452002	               test byte [rbp + 0x20], 2	      1505	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9
0x4003c7f	            0x7458	                            je 0x4003cd9	      1505	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9
0x4003c81	        0x498d7e38	                   lea rdi, [r14 + 0x38]	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4003c85	      0xb800000000	                              mov eax, 0	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4003c8a	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4003c8d	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4003c8f	     0xf843f030000	                            je 0x4003fd4	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4003c95	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4003c99	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4003c9d	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4003ca0	            0x74e8	                            je 0x4003c8a	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4003ca2	      0xe93b020000	                           jmp 0x4003ee2	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4003ca7	      0xbe00000000	                              mov esi, 0	      1515	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	CALL_14
0x4003cac	          0x4c89e7	                            mov rdi, r12	      1515	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	CALL_14
0x4003caf	      0xe800000000	                          call 0x4003cb4	      1515	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	CALL_14
0x4003cb4	          0x4889c6	                            mov rsi, rax	      1515	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	CALL_14
0x4003cb7	          0x4885c0	                           test rax, rax	      1516	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	IF_12
0x4003cba	            0x750a	                           jne 0x4003cc6	      1516	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	IF_12
0x4003cbc	      0xe921020000	                           jmp 0x4003ee2	      1516	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	IF_12
0x4003cc1	      0xbe00000000	                              mov esi, 0	      1513	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_11
0x4003cc6	          0x4889d9	                            mov rcx, rbx	      1519	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_15
0x4003cc9	          0x4c89e2	                            mov rdx, r12	      1519	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_15
0x4003ccc	          0x4889ef	                            mov rdi, rbp	      1519	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_15
0x4003ccf	      0xe833d7ffff	        call sym.fill_remote_ref_details	      1519	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_15
0x4003cd4	      0xe909020000	                           jmp 0x4003ee2	      1520	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9
0x4003cd9	      0xbe00000000	                              mov esi, 0	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x4003cde	          0x4c89e7	                            mov rdi, r12	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x4003ce1	      0xe800000000	                          call 0x4003ce6	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x4003ce6	            0x85c0	                           test eax, eax	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x4003ce8	            0x740c	                            je 0x4003cf6	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x4003cea	        0x4883c510	                           add rbp, 0x10	      1522	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13
0x4003cee	          0x48892b	                    mov qword [rbx], rbp	      1522	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13
0x4003cf1	      0xe9ec010000	                           jmp 0x4003ee2	      1523	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13
0x4003cf6	      0xbf00000000	                              mov edi, 0	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x4003cfb	      0xb905000000	                              mov ecx, 5	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x4003d00	          0x4c89e6	                            mov rsi, r12	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x4003d03	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x4003d05	           0xf97c2	                                 seta dl	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x4003d08	           0xf92c0	                                 setb al	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x4003d0b	            0x38c2	                              cmp dl, al	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x4003d0d	     0xf8580000000	                           jne 0x4003d93	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x4003d13	        0x418b7614	            mov esi, dword [r14 + 0x14] 	      1526	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_15
0x4003d17	        0x40f6c601	                             test sil, 1	      1526	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_15
0x4003d1b	     0xf84f8020000	                            je 0x4004019	      1526	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_15
0x4003d21	      0xb92c000000	                           mov ecx, 0x2c	      1526	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_15
0x4003d26	      0xba00000000	                              mov edx, 0	      1526	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_15
0x4003d2b	      0x488d442430	                   lea rax, [rsp + 0x30]	      1526	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_15
0x4003d30	        0x4883c001	                              add rax, 1	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x4003d34	        0x4883c201	                              add rdx, 1	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x4003d38	          0x8848ff	                  mov byte [rax - 1], cl	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x4003d3b	           0xfb60a	                   movzx ecx, byte [rdx]	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x4003d3e	            0x84c9	                             test cl, cl	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x4003d40	            0x75ee	                           jne 0x4003d30	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x4003d42	      0xe9a4020000	                           jmp 0x4003feb	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x4003d47	      0x488d442430	                   lea rax, [rsp + 0x30]	      1525	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14
0x4003d4c	      0xb92c000000	                           mov ecx, 0x2c	      1525	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14
0x4003d51	      0xba00000000	                              mov edx, 0	      1525	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14
0x4003d56	        0x4883c001	                              add rax, 1	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x4003d5a	        0x4883c201	                              add rdx, 1	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x4003d5e	          0x8848ff	                  mov byte [rax - 1], cl	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x4003d61	           0xfb60a	                   movzx ecx, byte [rdx]	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x4003d64	            0x84c9	                             test cl, cl	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x4003d66	            0x75ee	                           jne 0x4003d56	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x4003d68	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      1530	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x4003d6d	          0x4839c8	                            cmp rax, rcx	      1530	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x4003d70	            0x750c	                           jne 0x4003d7e	      1530	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x4003d72	    0x48c703000000	                      mov qword [rbx], 0	      1531	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x4003d79	      0xe964010000	                           jmp 0x4003ee2	      1531	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x4003d7e	          0xc60000	                       mov byte [rax], 0	      1533	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7
0x4003d81	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x4003d86	      0xe800000000	                          call 0x4003d8b	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x4003d8b	          0x488903	                    mov qword [rbx], rax	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x4003d8e	      0xe94f010000	                           jmp 0x4003ee2	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x4003d93	          0x4585ff	                         test r15d, r15d	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4003d96	            0x7519	                           jne 0x4003db1	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4003d98	          0x4889e9	                            mov rcx, rbp	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4003d9b	          0x4889da	                            mov rdx, rbx	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4003d9e	          0x4c89f6	                            mov rsi, r14	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4003da1	          0x4c89e7	                            mov rdi, r12	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4003da4	      0xe871d8ffff	                call sym.grab_objectname	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4003da9	            0x85c0	                           test eax, eax	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4003dab	     0xf8531010000	                           jne 0x4003ee2	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4003db1	      0xbf00000000	                              mov edi, 0	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x4003db6	      0xb905000000	                              mov ecx, 5	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x4003dbb	          0x4c89e6	                            mov rsi, r12	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x4003dbe	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x4003dc0	           0xf97c2	                                 seta dl	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x4003dc3	           0xf92c0	                                 setb al	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x4003dc6	            0x38c2	                              cmp dl, al	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x4003dc8	            0x752f	                           jne 0x4003df9	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x4003dca	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4003dce	          0x4885f6	                           test rsi, rsi	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4003dd1	            0x741a	                            je 0x4003ded	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4003dd3	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4003dd8	      0xe800000000	                          call 0x4003ddd	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4003ddd	            0x85c0	                           test eax, eax	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4003ddf	            0x750c	                           jne 0x4003ded	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4003de1	    0x48c703000000	                      mov qword [rbx], 0	      1541	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20
0x4003de8	      0xe9f5000000	                           jmp 0x4003ee2	      1541	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20
0x4003ded	    0x48c703000000	                      mov qword [rbx], 0	      1543	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	ELSE_10
0x4003df4	      0xe9e9000000	                           jmp 0x4003ee2	      1543	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	ELSE_10
0x4003df9	      0xbe00000000	                              mov esi, 0	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x4003dfe	          0x4c89e7	                            mov rdi, r12	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x4003e01	      0xe800000000	                          call 0x4003e06	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x4003e06	            0x85c0	                           test eax, eax	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x4003e08	            0x740d	                            je 0x4003e17	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x4003e0a	    0x48c743080000	                  mov qword [rbx + 8], 0	      1546	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21
0x4003e12	      0xe9cb000000	                           jmp 0x4003ee2	      1547	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21
0x4003e17	      0x41803c2465	                    cmp byte [r12], 0x65	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x4003e1c	            0x7525	                           jne 0x4003e43	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x4003e1e	    0x41807c24016e	                cmp byte [r12 + 1], 0x6e	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x4003e24	            0x751d	                           jne 0x4003e43	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x4003e26	    0x41807c240264	                cmp byte [r12 + 2], 0x64	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x4003e2c	            0x7515	                           jne 0x4003e43	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x4003e2e	    0x41807c240300	                   cmp byte [r12 + 3], 0	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x4003e34	            0x750d	                           jne 0x4003e43	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x4003e36	    0x48c743080000	                  mov qword [rbx + 8], 0	      1549	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22
0x4003e3e	      0xe99f000000	                           jmp 0x4003ee2	      1550	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22
0x4003e43	      0xbe00000000	                              mov esi, 0	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x4003e48	          0x4c89e7	                            mov rdi, r12	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x4003e4b	      0xe800000000	                          call 0x4003e50	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x4003e50	            0x85c0	                           test eax, eax	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x4003e52	            0x7429	                            je 0x4003e7d	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x4003e54	      0xb800000000	                              mov eax, 0	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x4003e59	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4003e5c	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4003e5e	     0xf8496010000	                            je 0x4003ffa	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4003e64	        0x4983c401	                              add r12, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4003e68	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4003e6c	      0x413a5424ff	                  cmp dl, byte [r12 - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4003e71	            0x74e6	                            je 0x4003e59	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4003e73	    0x48c743080000	                  mov qword [rbx + 8], 0	      1556	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23
0x4003e7b	            0xeb65	                           jmp 0x4003ee2	      1556	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23
0x4003e7d	      0xbf00000000	                              mov edi, 0	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x4003e82	      0xb905000000	                              mov ecx, 5	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x4003e87	          0x4c89e6	                            mov rsi, r12	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x4003e8a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x4003e8c	           0xf97c2	                                 seta dl	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x4003e8f	           0xf92c0	                                 setb al	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x4003e92	            0x38c2	                              cmp dl, al	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x4003e94	            0x750a	                           jne 0x4003ea0	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x4003e96	    0x48c743080000	                  mov qword [rbx + 8], 0	      1559	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25
0x4003e9e	            0xeb42	                           jmp 0x4003ee2	      1560	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25
0x4003ea0	      0xbf00000000	                              mov edi, 0	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x4003ea5	      0xb905000000	                              mov ecx, 5	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x4003eaa	          0x4c89e6	                            mov rsi, r12	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x4003ead	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x4003eaf	           0xf97c2	                                 seta dl	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x4003eb2	           0xf92c0	                                 setb al	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x4003eb5	            0x38c2	                              cmp dl, al	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x4003eb7	            0x7529	                           jne 0x4003ee2	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x4003eb9	    0x48c743080000	                  mov qword [rbx + 8], 0	      1562	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26
0x4003ec1	            0xeb1f	                           jmp 0x4003ee2	      1563	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26
0x4003ec3	          0x4585ff	                         test r15d, r15d	      1567	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x4003ec6	            0x7505	                           jne 0x4003ecd	      1567	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x4003ec8	          0x488903	                    mov qword [rbx], rax	      1568	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x4003ecb	            0xeb15	                           jmp 0x4003ee2	      1568	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x4003ecd	          0x4889c6	                            mov rsi, rax	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x4003ed0	      0xbf00000000	                              mov edi, 0	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x4003ed5	      0xb800000000	                              mov eax, 0	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x4003eda	      0xe800000000	                          call 0x4003edf	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x4003edf	          0x488903	                    mov qword [rbx], rax	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x4003ee2	        0x4183c501	                             add r13d, 1	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003ee6	    0x8b1500000000	            mov edx, dword [0x04003eec] 	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003eec	          0x4439ea	                           cmp edx, r13d	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003eef	     0xf8f92fcffff	                            jg 0x4003b87	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003ef5	            0x85d2	                           test edx, edx	      1573	ref-filter.c	FUNCTION_57	FOR_2
0x4003ef7	     0xf8e8f000000	                           jle 0x4003f8c	      1573	ref-filter.c	FUNCTION_57	FOR_2
0x4003efd	        0x498b4e30	            mov rcx, qword [r14 + 0x30] 	      1574	ref-filter.c	FUNCTION_57	FOR_2
0x4003f01	        0x48833900	                      cmp qword [rcx], 0	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4003f05	            0x7425	                            je 0x4003f2c	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4003f07	          0x4889c8	                            mov rax, rcx	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4003f0a	          0x8d52ff	                      lea edx, [rdx - 1]	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4003f0d	        0x48c1e205	                              shl rdx, 5	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4003f11	          0x4801ca	                            add rdx, rcx	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4003f14	            0xeb0a	                           jmp 0x4003f20	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4003f16	        0x4883c020	                           add rax, 0x20	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4003f1a	        0x48833800	                      cmp qword [rax], 0	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4003f1e	            0x740c	                            je 0x4003f2c	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4003f20	          0x4839d0	                            cmp rax, rdx	      1573	ref-filter.c	FUNCTION_57	FOR_2
0x4003f23	            0x75f1	                           jne 0x4003f16	      1573	ref-filter.c	FUNCTION_57	FOR_2
0x4003f25	      0xb800000000	                              mov eax, 0	      1579	ref-filter.c	FUNCTION_57	IF_29
0x4003f2a	            0xeb70	                           jmp 0x4003f9c	      1579	ref-filter.c	FUNCTION_57	IF_29
0x4003f2c	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4003f31	      0x488d4c2428	                   lea rcx, [rsp + 0x28]	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4003f36	      0xba00000000	                              mov edx, 0	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4003f3b	          0x4c89f6	                            mov rsi, r14	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4003f3e	          0x4c89f7	                            mov rdi, r14	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4003f41	      0xe8b0f1ffff	                     call sym.get_object	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4003f46	            0x85c0	                           test eax, eax	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4003f48	            0x7549	                           jne 0x4003f93	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4003f4a	    0x8b1500000000	            mov edx, dword [0x04003f50] 	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4003f50	            0x85d2	                           test edx, edx	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4003f52	            0x7446	                            je 0x4003f9a	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4003f54	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4003f59	           0xfb611	                   movzx edx, byte [rcx]	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4003f5c	          0x83e20e	                            and edx, 0xe	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4003f5f	          0x80fa08	                               cmp dl, 8	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4003f62	            0x7538	                           jne 0x4003f9c	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4003f64	        0x488b7118	            mov rsi, qword [rcx + 0x18] 	      1595	ref-filter.c	FUNCTION_57
0x4003f68	        0x4883c604	                              add rsi, 4	      1595	ref-filter.c	FUNCTION_57
0x4003f6c	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4003f71	      0x488d4c2428	                   lea rcx, [rsp + 0x28]	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4003f76	      0xba01000000	                              mov edx, 1	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4003f7b	          0x4c89f7	                            mov rdi, r14	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4003f7e	      0xe873f1ffff	                     call sym.get_object	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4003f83	            0xeb17	                           jmp 0x4003f9c	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4003f85	      0xb800000000	                              mov eax, 0	      1579	ref-filter.c	FUNCTION_57	IF_29
0x4003f8a	            0xeb10	                           jmp 0x4003f9c	      1579	ref-filter.c	FUNCTION_57	IF_29
0x4003f8c	      0xb800000000	                              mov eax, 0	      1579	ref-filter.c	FUNCTION_57	IF_29
0x4003f91	            0xeb09	                           jmp 0x4003f9c	      1579	ref-filter.c	FUNCTION_57	IF_29
0x4003f93	      0xb8ffffffff	                     mov eax, 0xffffffff	      1582	ref-filter.c	FUNCTION_57	IF_30
0x4003f98	            0xeb02	                           jmp 0x4003f9c	      1582	ref-filter.c	FUNCTION_57	IF_30
0x4003f9a	            0x89d0	                            mov eax, edx	      1589	ref-filter.c	FUNCTION_57	IF_31
0x4003f9c	    0x488b8c243801	           mov rcx, qword [rsp + 0x138] 	      1604	ref-filter.c	FUNCTION_57
0x4003fa4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1604	ref-filter.c	FUNCTION_57
0x4003fad	            0x747e	                            je 0x400402d	      1604	ref-filter.c	FUNCTION_57
0x4003faf	            0xeb77	                           jmp 0x4004028	      1604	ref-filter.c	FUNCTION_57
0x4003fb1	      0xe800000000	                          call 0x4003fb6	      1499	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_9
0x4003fb6	          0x4989c4	                            mov r12, rax	      1499	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_9
0x4003fb9	      0xbe00000000	                              mov esi, 0	      1501	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_10
0x4003fbe	          0x4889c7	                            mov rdi, rax	      1501	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_10
0x4003fc1	      0xe800000000	                          call 0x4003fc6	      1501	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_10
0x4003fc6	          0x4885c0	                           test rax, rax	      1502	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_8
0x4003fc9	     0xf8596fcffff	                           jne 0x4003c65	      1502	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_8
0x4003fcf	      0xe90effffff	                           jmp 0x4003ee2	      1502	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_8
0x4003fd4	      0xe800000000	                          call 0x4003fd9	      1510	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_13
0x4003fd9	          0x4989c4	                            mov r12, rax	      1510	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_13
0x4003fdc	        0xf6452004	               test byte [rbp + 0x20], 4	      1512	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_11
0x4003fe0	     0xf85dbfcffff	                           jne 0x4003cc1	      1512	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_11
0x4003fe6	      0xe9bcfcffff	                           jmp 0x4003ca7	      1512	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_11
0x4003feb	        0x40f6c602	                             test sil, 2	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x4003fef	     0xf8473fdffff	                            je 0x4003d68	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x4003ff5	      0xe952fdffff	                           jmp 0x4003d4c	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x4003ffa	          0x4c89e7	                            mov rdi, r12	      1555	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_28
0x4003ffd	      0xe800000000	                          call 0x4004002	      1555	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_28
0x4004002	          0x488903	                    mov qword [rbx], rax	      1555	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_28
0x4004005	      0xe969feffff	                           jmp 0x4003e73	      1555	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_28
0x400400a	    0x833d00000000	               cmp dword [0x04004011], 0	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4004011	     0xf8f57fbffff	                            jg 0x4003b6e	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4004017	            0xeb83	                           jmp 0x4003f9c	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4004019	        0x40f6c602	                             test sil, 2	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x400401d	     0xf844ffdffff	                            je 0x4003d72	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x4004023	      0xe91ffdffff	                           jmp 0x4003d47	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x4004028	      0xe800000000	                          call 0x400402d	      1604	ref-filter.c	FUNCTION_57
0x400402d	    0x4881c4480100	                          add rsp, 0x148	      1604	ref-filter.c	FUNCTION_57
0x4004034	              0x5b	                                 pop rbx	      1604	ref-filter.c	FUNCTION_57
0x4004035	              0x5d	                                 pop rbp	      1604	ref-filter.c	FUNCTION_57
0x4004036	            0x415c	                                 pop r12	      1604	ref-filter.c	FUNCTION_57
0x4004038	            0x415d	                                 pop r13	      1604	ref-filter.c	FUNCTION_57
0x400403a	            0x415e	                                 pop r14	      1604	ref-filter.c	FUNCTION_57
0x400403c	            0x415f	                                 pop r15	      1604	ref-filter.c	FUNCTION_57
0x400403e	              0xc3	                                     ret	      1604	ref-filter.c	FUNCTION_57
parse_opt_ref_sorting	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,1:functions,0:CALL,1:ELSE,0	11
0x4004ca4	          0x4885f6	                           test rsi, rsi	      2340	ref-filter.c	FUNCTION_89	IF_1
0x4004ca7	            0x7414	                            je 0x4004cbd	      2340	ref-filter.c	FUNCTION_89	IF_1
0x4004ca9	        0x4883ec08	                              sub rsp, 8	      2339	ref-filter.c	FUNCTION_89
0x4004cad	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      2342	ref-filter.c	FUNCTION_89	CALL_1
0x4004cb1	      0xe800000000	                          call 0x4004cb6	      2342	ref-filter.c	FUNCTION_89	CALL_1
0x4004cb6	      0xb800000000	                              mov eax, 0	      2343	ref-filter.c	FUNCTION_89
0x4004cbb	            0xeb06	                           jmp 0x4004cc3	      2343	ref-filter.c	FUNCTION_89
0x4004cbd	      0xb8ffffffff	                     mov eax, 0xffffffff	      2341	ref-filter.c	FUNCTION_89	IF_1
0x4004cc2	              0xc3	                                     ret	      2341	ref-filter.c	FUNCTION_89	IF_1
0x4004cc3	        0x4883c408	                              add rsp, 8	      2344	ref-filter.c	FUNCTION_89
0x4004cc7	              0xc3	                                     ret	      2344	ref-filter.c	FUNCTION_89
fill_remote_ref_details	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,16:functions,0:CALL,15:ELSE,14	133
0x4001407	              0x55	                                push rbp	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x4001408	              0x53	                                push rbx	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x4001409	        0x4883ec18	                           sub rsp, 0x18	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x400140d	          0x4889fb	                            mov rbx, rdi	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x4001410	          0x4889cd	                            mov rbp, rcx	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x4001413	    0x64488b042528	                mov rax, qword fs:[0x28]	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x400141c	      0x4889442408	                mov qword [rsp + 8], rax	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x4001421	            0x31c0	                            xor eax, eax	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x4001423	          0x8b4710	            mov eax, dword [rdi + 0x10] 	      1322	ref-filter.c	ELSE_3	FUNCTION_52	IF_1
0x4001426	            0x85c0	                           test eax, eax	      1322	ref-filter.c	ELSE_3	FUNCTION_52	IF_1
0x4001428	            0x7512	                           jne 0x400143c	      1322	ref-filter.c	ELSE_3	FUNCTION_52	IF_1
0x400142a	        0x488d7f14	                   lea rdi, [rdi + 0x14]	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x400142e	      0xe8b4feffff	                       call sym.show_ref	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x4001433	        0x48894500	                    mov qword [rbp], rax	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x4001437	      0xe9c2010000	                           jmp 0x40015fe	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x400143c	          0x4889d7	                            mov rdi, rdx	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x400143f	          0x83f801	                              cmp eax, 1	      1324	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2
0x4001442	     0xf85cc000000	                           jne 0x4001514	      1324	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2
0x4001448	    0x41b801000000	                              mov r8d, 1	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x400144e	      0xb900000000	                              mov ecx, 0	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x4001453	      0x488d542404	                      lea rdx, [rsp + 4]	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x4001458	          0x4889e6	                            mov rsi, rsp	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x400145b	      0xe800000000	                          call 0x4001460	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x4001460	            0x85c0	                           test eax, eax	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x4001462	            0x7912	                           jns 0x4001476	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x4001464	    0x488b3d000000	            mov rdi, qword [0x0400146b] 	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x400146b	      0xe800000000	                          call 0x4001470	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x4001470	        0x48894500	                    mov qword [rbp], rax	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x4001474	            0xeb64	                           jmp 0x40014da	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x4001476	          0x8b3424	                    mov esi, dword [rsp]	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x4001479	            0x85f6	                           test esi, esi	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x400147b	            0x7529	                           jne 0x40014a6	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x400147d	        0x8b742404	                mov esi, dword [rsp + 4]	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x4001481	            0x85f6	                           test esi, esi	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x4001483	            0x750a	                           jne 0x400148f	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x4001485	    0x48c745000000	                      mov qword [rbp], 0	      1329	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x400148d	            0xeb4b	                           jmp 0x40014da	      1329	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x400148f	    0x488b3d000000	            mov rdi, qword [0x04001496] 	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x4001496	      0xb800000000	                              mov eax, 0	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x400149b	      0xe800000000	                          call 0x40014a0	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x40014a0	        0x48894500	                    mov qword [rbp], rax	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x40014a4	            0xeb34	                           jmp 0x40014da	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x40014a6	        0x8b542404	                mov edx, dword [rsp + 4]	      1332	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x40014aa	            0x85d2	                           test edx, edx	      1332	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x40014ac	            0x7517	                           jne 0x40014c5	      1332	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x40014ae	    0x488b3d000000	            mov rdi, qword [0x040014b5] 	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x40014b5	      0xb800000000	                              mov eax, 0	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x40014ba	      0xe800000000	                          call 0x40014bf	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x40014bf	        0x48894500	                    mov qword [rbp], rax	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x40014c3	            0xeb15	                           jmp 0x40014da	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x40014c5	    0x488b3d000000	            mov rdi, qword [0x040014cc] 	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x40014cc	      0xb800000000	                              mov eax, 0	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x40014d1	      0xe800000000	                          call 0x40014d6	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x40014d6	        0x48894500	                    mov qword [rbp], rax	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x40014da	        0xf6432001	               test byte [rbx + 0x20], 1	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x40014de	     0xf851a010000	                           jne 0x40015fe	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x40014e4	        0x488b5d00	                    mov rbx, qword [rbp]	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x40014e8	          0x803b00	                       cmp byte [rbx], 0	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x40014eb	     0xf840d010000	                            je 0x40015fe	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x40014f1	          0x4889de	                            mov rsi, rbx	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x40014f4	      0xbf00000000	                              mov edi, 0	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x40014f9	      0xb800000000	                              mov eax, 0	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x40014fe	      0xe800000000	                          call 0x4001503	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x4001503	        0x48894500	                    mov qword [rbp], rax	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x4001507	          0x4889df	                            mov rdi, rbx	      1340	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_8
0x400150a	      0xe800000000	                          call 0x400150f	      1340	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_8
0x400150f	      0xe9ea000000	                           jmp 0x40015fe	      1340	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_8
0x4001514	          0x83f802	                              cmp eax, 2	      1342	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8
0x4001517	            0x755e	                           jne 0x4001577	      1342	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8
0x4001519	    0x41b801000000	                              mov r8d, 1	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x400151f	      0xb900000000	                              mov ecx, 0	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x4001524	      0x488d542404	                      lea rdx, [rsp + 4]	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x4001529	          0x4889e6	                            mov rsi, rsp	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x400152c	      0xe800000000	                          call 0x4001531	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x4001531	            0x85c0	                           test eax, eax	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x4001533	     0xf88c5000000	                            js 0x40015fe	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x4001539	        0x833c2400	                      cmp dword [rsp], 0	      1347	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x400153d	            0x751c	                           jne 0x400155b	      1347	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x400153f	      0x837c240400	                  cmp dword [rsp + 4], 0	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x4001544	      0xba00000000	                              mov edx, 0	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x4001549	      0xb800000000	                              mov eax, 0	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x400154e	        0x480f44c2	                          cmove rax, rdx	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x4001552	        0x48894500	                    mov qword [rbp], rax	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x4001556	      0xe9a3000000	                           jmp 0x40015fe	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x400155b	      0x837c240400	                  cmp dword [rsp + 4], 0	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x4001560	      0xba00000000	                              mov edx, 0	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x4001565	      0xb800000000	                              mov eax, 0	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x400156a	        0x480f44c2	                          cmove rax, rdx	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x400156e	        0x48894500	                    mov qword [rbp], rax	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x4001572	      0xe987000000	                           jmp 0x40015fe	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x4001577	          0x83f803	                              cmp eax, 3	      1355	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13
0x400157a	            0x753b	                           jne 0x40015b7	      1355	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13
0x400157c	        0xf6432002	               test byte [rbx + 0x20], 2	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x4001580	            0x740c	                            je 0x400158e	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x4001582	      0x488d742404	                      lea rsi, [rsp + 4]	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x4001587	      0xe800000000	                          call 0x400158c	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x400158c	            0xeb0a	                           jmp 0x4001598	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x400158e	      0x488d742404	                      lea rsi, [rsp + 4]	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x4001593	      0xe800000000	                          call 0x4001598	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x4001598	      0x837c240400	                  cmp dword [rsp + 4], 0	      1360	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	IF_14
0x400159d	            0x740e	                            je 0x40015ad	      1360	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	IF_14
0x400159f	          0x4889c7	                            mov rdi, rax	      1361	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_12
0x40015a2	      0xe800000000	                          call 0x40015a7	      1361	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_12
0x40015a7	        0x48894500	                    mov qword [rbp], rax	      1361	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_12
0x40015ab	            0xeb51	                           jmp 0x40015fe	      1361	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_12
0x40015ad	    0x48c745000000	                      mov qword [rbp], 0	      1363	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	ELSE_11
0x40015b5	            0xeb47	                           jmp 0x40015fe	      1363	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	ELSE_11
0x40015b7	          0x83f804	                              cmp eax, 4	      1364	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	ELSE_11
0x40015ba	            0x7533	                           jne 0x40015ef	      1364	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	ELSE_11
0x40015bc	         0xfb67320	           movzx esi, byte [rbx + 0x20] 	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x40015c0	          0x40d0ee	                              shr sil, 1	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x40015c3	          0x83e601	                              and esi, 1	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x40015c6	      0x488d542404	                      lea rdx, [rsp + 4]	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x40015cb	      0xe800000000	                          call 0x40015d0	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x40015d0	      0x837c240400	                  cmp dword [rsp + 4], 0	      1370	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	IF_16
0x40015d5	            0x740e	                            je 0x40015e5	      1370	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	IF_16
0x40015d7	          0x4889c7	                            mov rdi, rax	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x40015da	      0xe800000000	                          call 0x40015df	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x40015df	        0x48894500	                    mov qword [rbp], rax	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x40015e3	            0xeb19	                           jmp 0x40015fe	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x40015e5	    0x48c745000000	                      mov qword [rbp], 0	      1373	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	ELSE_13
0x40015ed	            0xeb0f	                           jmp 0x40015fe	      1373	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	ELSE_13
0x40015ef	      0xbf00000000	                              mov edi, 0	      1375	ref-filter.c	FUNCTION_52	ELSE_3	CALL_15
0x40015f4	      0xb800000000	                              mov eax, 0	      1375	ref-filter.c	FUNCTION_52	ELSE_3	CALL_15
0x40015f9	      0xe800000000	                          call 0x40015fe	      1375	ref-filter.c	FUNCTION_52	ELSE_3	CALL_15
0x40015fe	      0x488b442408	                mov rax, qword [rsp + 8]	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x4001603	    0x644833042528	                xor rax, qword fs:[0x28]	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x400160c	            0x7405	                            je 0x4001613	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x400160e	      0xe800000000	                          call 0x4001613	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x4001613	        0x4883c418	                           add rsp, 0x18	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x4001617	              0x5b	                                 pop rbx	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x4001618	              0x5d	                                 pop rbp	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x4001619	              0xc3	                                     ret	      1376	ref-filter.c	FUNCTION_52	ELSE_3
ref_filter_handler	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,9:functions,0:CALL,11:ELSE,0	249
0x40042d3	            0x4157	                                push r15	      1976	ref-filter.c	FUNCTION_74
0x40042d5	            0x4156	                                push r14	      1976	ref-filter.c	FUNCTION_74
0x40042d7	            0x4155	                                push r13	      1976	ref-filter.c	FUNCTION_74
0x40042d9	            0x4154	                                push r12	      1976	ref-filter.c	FUNCTION_74
0x40042db	              0x55	                                push rbp	      1976	ref-filter.c	FUNCTION_74
0x40042dc	              0x53	                                push rbx	      1976	ref-filter.c	FUNCTION_74
0x40042dd	        0x4883ec28	                           sub rsp, 0x28	      1976	ref-filter.c	FUNCTION_74
0x40042e1	          0x4989fd	                            mov r13, rdi	      1976	ref-filter.c	FUNCTION_74
0x40042e4	      0x4889742410	             mov qword [rsp + 0x10], rsi	      1976	ref-filter.c	FUNCTION_74
0x40042e9	      0x48894c2408	                mov qword [rsp + 8], rcx	      1976	ref-filter.c	FUNCTION_74
0x40042ee	          0xf6c208	                              test dl, 8	      1983	ref-filter.c	FUNCTION_74	IF_1
0x40042f1	            0x7429	                            je 0x400431c	      1983	ref-filter.c	FUNCTION_74	IF_1
0x40042f3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x40042f8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40042fd	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4004302	      0xe800000000	                          call 0x4004307	        54	gettext.h	FUNCTION_93
0x4004307	          0x4c89ee	                            mov rsi, r13	      1984	ref-filter.c	FUNCTION_74	IF_1	CALL_2
0x400430a	          0x4889c7	                            mov rdi, rax	      1984	ref-filter.c	FUNCTION_74	IF_1	CALL_2
0x400430d	      0xb800000000	                              mov eax, 0	      1984	ref-filter.c	FUNCTION_74	IF_1	CALL_2
0x4004312	      0xe800000000	                          call 0x4004317	      1984	ref-filter.c	FUNCTION_74	IF_1	CALL_2
0x4004317	      0xe92d030000	                           jmp 0x4004649	      1985	ref-filter.c	FUNCTION_74	IF_1
0x400431c	          0x4189d6	                           mov r14d, edx	      1985	ref-filter.c	FUNCTION_74	IF_1
0x400431f	          0xf6c204	                              test dl, 4	      1988	ref-filter.c	FUNCTION_74	IF_2
0x4004322	            0x7429	                            je 0x400434d	      1988	ref-filter.c	FUNCTION_74	IF_2
0x4004324	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4004329	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x400432e	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4004333	      0xe800000000	                          call 0x4004338	        54	gettext.h	FUNCTION_93
0x4004338	          0x4c89ee	                            mov rsi, r13	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x400433b	          0x4889c7	                            mov rdi, rax	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x400433e	      0xb800000000	                              mov eax, 0	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x4004343	      0xe800000000	                          call 0x4004348	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x4004348	      0xe9fc020000	                           jmp 0x4004649	      1990	ref-filter.c	FUNCTION_74	IF_2
0x400434d	      0x488b442408	                mov rax, qword [rsp + 8]	      1978	ref-filter.c	FUNCTION_74
0x4004352	        0x4c8b7808	                mov r15, qword [rax + 8]	      1978	ref-filter.c	FUNCTION_74
0x4004356	        0x418b4744	            mov eax, dword [r15 + 0x44] 	      1964	ref-filter.c	FUNCTION_73	IF_1
0x400435a	          0x8d50fe	                      lea edx, [rax - 2]	      1965	ref-filter.c	FUNCTION_73	IF_1
0x400435d	    0xf7c2fdffffff	                    test edx, 0xfffffffd	      1965	ref-filter.c	FUNCTION_73	IF_1
0x4004363	            0x740a	                            je 0x400436f	      1965	ref-filter.c	FUNCTION_73	IF_1
0x4004365	          0x83f808	                              cmp eax, 8	      1965	ref-filter.c	FUNCTION_73	IF_1
0x4004368	            0x7405	                            je 0x400436f	      1965	ref-filter.c	FUNCTION_73	IF_1
0x400436a	      0xe877bfffff	          call sym.ref_kind_from_refname	      1968	ref-filter.c	FUNCTION_73	CALL_1
0x400436f	        0x8944241c	             mov dword [rsp + 0x1c], eax	      1994	ref-filter.c	FUNCTION_74	CALL_5
0x4004373	        0x41854744	           test dword [r15 + 0x44], eax 	      1995	ref-filter.c	FUNCTION_74	IF_3
0x4004377	     0xf84cc020000	                            je 0x4004649	      1995	ref-filter.c	FUNCTION_74	IF_3
0x400437d	          0x4d8b27	                    mov r12, qword [r15]	      1809	ref-filter.c	FUNCTION_66	IF_1
0x4004380	        0x498b1c24	                    mov rbx, qword [r12]	      1809	ref-filter.c	FUNCTION_66	IF_1
0x4004384	          0x4885db	                           test rbx, rbx	      1809	ref-filter.c	FUNCTION_66	IF_1
0x4004387	     0xf84ac020000	                            je 0x4004639	      1809	ref-filter.c	FUNCTION_66	IF_1
0x400438d	      0x410fb64740	           movzx eax, byte [r15 + 0x40] 	      1811	ref-filter.c	FUNCTION_66	IF_2
0x4004392	            0xa802	                              test al, 2	      1811	ref-filter.c	FUNCTION_66	IF_2
0x4004394	     0xf849f000000	                            je 0x4004439	      1811	ref-filter.c	FUNCTION_66	IF_2
0x400439a	      0xb800000000	                              mov eax, 0	      1784	ref-filter.c	FUNCTION_65	CALL_1
0x400439f	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1784	ref-filter.c	FUNCTION_65	CALL_1
0x40043a6	          0x4c89ef	                            mov rdi, r13	      1784	ref-filter.c	FUNCTION_65	CALL_1
0x40043a9	            0xf2ae	              repne scasb al, byte [rdi]	      1784	ref-filter.c	FUNCTION_65	CALL_1
0x40043ab	          0x4889ce	                            mov rsi, rcx	      1784	ref-filter.c	FUNCTION_65	CALL_1
0x40043ae	          0x48f7d6	                                 not rsi	      1784	ref-filter.c	FUNCTION_65	CALL_1
0x40043b1	          0x8d46ff	                      lea eax, [rsi - 1]	      1784	ref-filter.c	FUNCTION_65	CALL_1
0x40043b4	        0x89442418	             mov dword [rsp + 0x18], eax	      1784	ref-filter.c	FUNCTION_65	CALL_1
0x40043b8	      0xb800000000	                              mov eax, 0	      1792	ref-filter.c	FUNCTION_65	FOR_1	CALL_2
0x40043bd	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1792	ref-filter.c	FUNCTION_65	FOR_1	CALL_2
0x40043c4	          0x4889df	                            mov rdi, rbx	      1792	ref-filter.c	FUNCTION_65	FOR_1	CALL_2
0x40043c7	            0xf2ae	              repne scasb al, byte [rdi]	      1792	ref-filter.c	FUNCTION_65	FOR_1	CALL_2
0x40043c9	          0x4889c8	                            mov rax, rcx	      1792	ref-filter.c	FUNCTION_65	FOR_1	CALL_2
0x40043cc	          0x48f7d0	                                 not rax	      1792	ref-filter.c	FUNCTION_65	FOR_1	CALL_2
0x40043cf	        0x488d68ff	                      lea rbp, [rax - 1]	      1792	ref-filter.c	FUNCTION_65	FOR_1	CALL_2
0x40043d3	        0x396c2418	            cmp dword [rsp + 0x18], ebp 	      1794	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x40043d7	            0x7c36	                            jl 0x400440f	      1794	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x40043d9	          0x4863ed	                         movsxd rbp, ebp	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x40043dc	          0x4889ea	                            mov rdx, rbp	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x40043df	          0x4889de	                            mov rsi, rbx	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x40043e2	          0x4c89ef	                            mov rdi, r13	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x40043e5	      0xe800000000	                          call 0x40043ea	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x40043ea	            0x85c0	                           test eax, eax	      1794	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x40043ec	            0x7521	                           jne 0x400440f	      1794	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x40043ee	    0x410fb6442d00	             movzx eax, byte [r13 + rbp]	      1796	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x40043f4	            0x84c0	                             test al, al	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x40043f6	     0xf843d020000	                            je 0x4004639	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x40043fc	            0x3c2f	                            cmp al, 0x2f	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x40043fe	     0xf8435020000	                            je 0x4004639	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x4004404	      0x807c2bff2f	         cmp byte [rbx + rbp - 1], 0x2f 	      1797	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x4004409	     0xf842a020000	                            je 0x4004639	      1797	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x400440f	      0xba02000000	                              mov edx, 2	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x4004414	          0x4c89ee	                            mov rsi, r13	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x4004417	          0x4889df	                            mov rdi, rbx	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x400441a	      0xe800000000	                          call 0x400441f	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x400441f	            0x85c0	                           test eax, eax	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x4004421	     0xf8412020000	                            je 0x4004639	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x4004427	        0x4983c408	                              add r12, 8	      1790	ref-filter.c	FUNCTION_65	FOR_1
0x400442b	        0x498b1c24	                    mov rbx, qword [r12]	      1790	ref-filter.c	FUNCTION_65	FOR_1
0x400442f	          0x4885db	                           test rbx, rbx	      1790	ref-filter.c	FUNCTION_65	FOR_1
0x4004432	            0x7584	                           jne 0x40043b8	      1790	ref-filter.c	FUNCTION_65	FOR_1
0x4004434	      0xe910020000	                           jmp 0x4004649	      1790	ref-filter.c	FUNCTION_65	FOR_1
0x4004439	          0xc0e802	                               shr al, 2	      1754	ref-filter.c	FUNCTION_64
0x400443c	          0x83e001	                              and eax, 1	      1754	ref-filter.c	FUNCTION_64
0x400443f	        0x89442418	             mov dword [rsp + 0x18], eax	      1754	ref-filter.c	FUNCTION_64
0x4004443	          0x4c89ed	                            mov rbp, r13	      1754	ref-filter.c	FUNCTION_64
0x4004446	      0xb800000000	                              mov eax, 0	      1754	ref-filter.c	FUNCTION_64
0x400444b	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x400444e	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4004450	            0x7464	                            je 0x40044b6	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4004452	        0x4883c501	                              add rbp, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004456	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x400445a	          0x3a55ff	                  cmp dl, byte [rbp - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x400445d	            0x74ec	                            je 0x400444b	       488	git-compat-util.h	FUNCTION_112	DO_1
0x400445f	          0x4c89ed	                            mov rbp, r13	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004462	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004467	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x400446a	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x400446c	            0x7448	                            je 0x40044b6	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x400446e	        0x4883c501	                              add rbp, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004472	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004476	          0x3a55ff	                  cmp dl, byte [rbp - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004479	            0x74ec	                            je 0x4004467	       488	git-compat-util.h	FUNCTION_112	DO_1
0x400447b	          0x4c89ed	                            mov rbp, r13	       488	git-compat-util.h	FUNCTION_112	DO_1
0x400447e	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004483	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4004486	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4004488	            0x742c	                            je 0x40044b6	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x400448a	        0x4883c501	                              add rbp, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x400448e	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004492	          0x3a55ff	                  cmp dl, byte [rbp - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004495	            0x74ec	                            je 0x4004483	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004497	          0x4c89ed	                            mov rbp, r13	       488	git-compat-util.h	FUNCTION_112	DO_1
0x400449a	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_112	DO_1
0x400449f	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x40044a2	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x40044a4	            0x7410	                            je 0x40044b6	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x40044a6	        0x4883c501	                              add rbp, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40044aa	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40044ae	          0x3a55ff	                  cmp dl, byte [rbp - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40044b1	            0x74ec	                            je 0x400449f	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40044b3	          0x4c89ed	                            mov rbp, r13	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40044b6	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x40044ba	          0x4889ee	                            mov rsi, rbp	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x40044bd	          0x4889df	                            mov rdi, rbx	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x40044c0	      0xe800000000	                          call 0x40044c5	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x40044c5	            0x85c0	                           test eax, eax	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x40044c7	     0xf846c010000	                            je 0x4004639	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x40044cd	        0x4983c408	                              add r12, 8	      1768	ref-filter.c	FUNCTION_64	FOR_1
0x40044d1	        0x498b1c24	                    mov rbx, qword [r12]	      1768	ref-filter.c	FUNCTION_64	FOR_1
0x40044d5	          0x4885db	                           test rbx, rbx	      1768	ref-filter.c	FUNCTION_64	FOR_1
0x40044d8	            0x75dc	                           jne 0x40044b6	      1768	ref-filter.c	FUNCTION_64	FOR_1
0x40044da	      0xe96a010000	                           jmp 0x4004649	      1768	ref-filter.c	FUNCTION_64	FOR_1
0x40044df	        0x498d5f08	                      lea rbx, [r15 + 8]	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x40044e3	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x40044e8	          0x4889df	                            mov rdi, rbx	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x40044eb	      0xe800000000	                          call 0x40044f0	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x40044f0	            0x85c0	                           test eax, eax	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x40044f2	            0x7961	                           jns 0x4004555	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x40044f4	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1900	ref-filter.c	FUNCTION_69	CALL_2
0x40044f9	      0xe800000000	                          call 0x40044fe	      1900	ref-filter.c	FUNCTION_69	CALL_2
0x40044fe	          0x4885c0	                           test rax, rax	      1901	ref-filter.c	FUNCTION_69	IF_2
0x4004501	            0x7524	                           jne 0x4004527	      1901	ref-filter.c	FUNCTION_69	IF_2
0x4004503	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4004508	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x400450d	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_93
0x4004512	      0xe800000000	                          call 0x4004517	        54	gettext.h	FUNCTION_93
0x4004517	          0x4c89ee	                            mov rsi, r13	      1902	ref-filter.c	FUNCTION_69	CALL_4
0x400451a	          0x4889c7	                            mov rdi, rax	      1902	ref-filter.c	FUNCTION_69	CALL_4
0x400451d	      0xb800000000	                              mov eax, 0	      1902	ref-filter.c	FUNCTION_69	CALL_4
0x4004522	      0xe800000000	                          call 0x4004527	      1902	ref-filter.c	FUNCTION_69	CALL_4
0x4004527	           0xfb610	                   movzx edx, byte [rax]	      1903	ref-filter.c	FUNCTION_69	IF_3
0x400452a	          0x83e20e	                            and edx, 0xe	      1903	ref-filter.c	FUNCTION_69	IF_3
0x400452d	          0x80fa08	                               cmp dl, 8	      1903	ref-filter.c	FUNCTION_69	IF_3
0x4004530	     0xf8513010000	                           jne 0x4004649	      1903	ref-filter.c	FUNCTION_69	IF_3
0x4004536	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      1904	ref-filter.c	FUNCTION_69	IF_3
0x400453a	        0x4883c604	                              add rsi, 4	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x400453e	     0xf8405010000	                            je 0x4004649	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x4004544	          0x4889df	                            mov rdi, rbx	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x4004547	      0xe800000000	                          call 0x400454c	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x400454c	            0x85c0	                           test eax, eax	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x400454e	            0x7911	                           jns 0x4004561	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x4004550	      0xe9f4000000	                           jmp 0x4004649	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x4004555	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x400455b	     0xf84e8000000	                            je 0x4004649	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x4004561	      0x49837f3800	               cmp qword [r15 + 0x38], 0	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4004566	            0x7519	                           jne 0x4004581	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4004568	      0x49837f2000	               cmp qword [r15 + 0x20], 0	      2009	ref-filter.c	FUNCTION_74	IF_6
0x400456d	            0x7512	                           jne 0x4004581	      2009	ref-filter.c	FUNCTION_74	IF_6
0x400456f	      0x49837f2800	               cmp qword [r15 + 0x28], 0	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4004574	            0x750b	                           jne 0x4004581	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4004576	      0x41837f5000	               cmp dword [r15 + 0x50], 0	      2009	ref-filter.c	FUNCTION_74	IF_6
0x400457b	     0xf848d000000	                            je 0x400460e	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4004581	      0xbe01000000	                              mov esi, 1	      2010	ref-filter.c	FUNCTION_74	IF_6	CALL_8
0x4004586	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2010	ref-filter.c	FUNCTION_74	IF_6	CALL_8
0x400458b	      0xe800000000	                          call 0x4004590	      2010	ref-filter.c	FUNCTION_74	IF_6	CALL_8
0x4004590	          0x4889c3	                            mov rbx, rax	      2010	ref-filter.c	FUNCTION_74	IF_6	CALL_8
0x4004593	          0x4885c0	                           test rax, rax	      2011	ref-filter.c	FUNCTION_74	IF_6	IF_7
0x4004596	     0xf84ad000000	                            je 0x4004649	      2011	ref-filter.c	FUNCTION_74	IF_6	IF_7
0x400459c	        0x498b7720	            mov rsi, qword [r15 + 0x20] 	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x40045a0	          0x4885f6	                           test rsi, rsi	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x40045a3	            0x742f	                            je 0x40045d4	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x40045a5	      0x41f6474001	               test byte [r15 + 0x40], 1	      1740	ref-filter.c	FUNCTION_63	IF_1
0x40045aa	            0x741c	                            je 0x40045c8	      1740	ref-filter.c	FUNCTION_63	IF_1
0x40045ac	      0x488b442408	                mov rax, qword [rsp + 8]	      2015	ref-filter.c	FUNCTION_74	IF_6	IF_8	CALL_9
0x40045b1	        0x488d5010	                   lea rdx, [rax + 0x10]	      2015	ref-filter.c	FUNCTION_74	IF_6	IF_8	CALL_9
0x40045b5	          0x4889df	                            mov rdi, rbx	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x40045b8	      0xe801e6ffff	              call sym.contains_tag_algo	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x40045bd	          0x83f802	                              cmp eax, 2	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x40045c0	           0xf94c0	                                 sete al	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x40045c3	           0xfb6c0	                           movzx eax, al	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x40045c6	            0xeb08	                           jmp 0x40045d0	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x40045c8	          0x4889c7	                            mov rdi, rax	      1742	ref-filter.c	FUNCTION_63	CALL_2
0x40045cb	      0xe800000000	                          call 0x40045d0	      1742	ref-filter.c	FUNCTION_63	CALL_2
0x40045d0	            0x85c0	                           test eax, eax	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x40045d2	            0x7475	                            je 0x4004649	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x40045d4	        0x498b7728	            mov rsi, qword [r15 + 0x28] 	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x40045d8	          0x4885f6	                           test rsi, rsi	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x40045db	            0x7436	                            je 0x4004613	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x40045dd	      0x41f6474001	               test byte [r15 + 0x40], 1	      1740	ref-filter.c	FUNCTION_63	IF_1
0x40045e2	            0x741c	                            je 0x4004600	      1740	ref-filter.c	FUNCTION_63	IF_1
0x40045e4	      0x488b442408	                mov rax, qword [rsp + 8]	      2019	ref-filter.c	FUNCTION_74	IF_6	IF_9	CALL_10
0x40045e9	        0x488d5028	                   lea rdx, [rax + 0x28]	      2019	ref-filter.c	FUNCTION_74	IF_6	IF_9	CALL_10
0x40045ed	          0x4889df	                            mov rdi, rbx	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x40045f0	      0xe8c9e5ffff	              call sym.contains_tag_algo	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x40045f5	          0x83f802	                              cmp eax, 2	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x40045f8	           0xf94c0	                                 sete al	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x40045fb	           0xfb6c0	                           movzx eax, al	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x40045fe	            0xeb08	                           jmp 0x4004608	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x4004600	          0x4889df	                            mov rdi, rbx	      1742	ref-filter.c	FUNCTION_63	CALL_2
0x4004603	      0xe800000000	                          call 0x4004608	      1742	ref-filter.c	FUNCTION_63	CALL_2
0x4004608	            0x85c0	                           test eax, eax	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x400460a	            0x7407	                            je 0x4004613	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x400460c	            0xeb3b	                           jmp 0x4004649	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x400460e	      0xbb00000000	                              mov ebx, 0	      1980	ref-filter.c	FUNCTION_74
0x4004613	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x4004618	          0x4c89ee	                            mov rsi, r13	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x400461b	      0x488b442408	                mov rax, qword [rsp + 8]	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x4004620	          0x488b38	                    mov rdi, qword [rax]	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x4004623	      0xe800000000	                          call 0x4004628	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x4004628	        0x48895828	             mov qword [rax + 0x28], rbx	      2029	ref-filter.c	FUNCTION_74
0x400462c	        0x44897014	            mov dword [rax + 0x14], r14d	      2030	ref-filter.c	FUNCTION_74
0x4004630	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      2031	ref-filter.c	FUNCTION_74
0x4004634	          0x897018	             mov dword [rax + 0x18], esi	      2031	ref-filter.c	FUNCTION_74
0x4004637	            0xeb10	                           jmp 0x4004649	      2033	ref-filter.c	FUNCTION_74
0x4004639	      0x41837f1000	               cmp dword [r15 + 0x10], 0	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x400463e	     0xf841dffffff	                            je 0x4004561	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x4004644	      0xe996feffff	                           jmp 0x40044df	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x4004649	      0xb800000000	                              mov eax, 0	      2034	ref-filter.c	FUNCTION_74
0x400464e	        0x4883c428	                           add rsp, 0x28	      2034	ref-filter.c	FUNCTION_74
0x4004652	              0x5b	                                 pop rbx	      2034	ref-filter.c	FUNCTION_74
0x4004653	              0x5d	                                 pop rbp	      2034	ref-filter.c	FUNCTION_74
0x4004654	            0x415c	                                 pop r12	      2034	ref-filter.c	FUNCTION_74
0x4004656	            0x415d	                                 pop r13	      2034	ref-filter.c	FUNCTION_74
0x4004658	            0x415e	                                 pop r14	      2034	ref-filter.c	FUNCTION_74
0x400465a	            0x415f	                                 pop r15	      2034	ref-filter.c	FUNCTION_74
0x400465c	              0xc3	                                     ret	      2034	ref-filter.c	FUNCTION_74
ref_array_push	SWITCH,0:FOR,0:WHILE,0:DO,0:IF,0:functions,0:CALL,1:ELSE,0	44
0x4004245	              0x55	                                push rbp	      1929	ref-filter.c	FUNCTION_71
0x4004246	              0x53	                                push rbx	      1929	ref-filter.c	FUNCTION_71
0x4004247	        0x4883ec08	                              sub rsp, 8	      1929	ref-filter.c	FUNCTION_71
0x400424b	          0x4889fb	                            mov rbx, rdi	      1929	ref-filter.c	FUNCTION_71
0x400424e	          0x4889f7	                            mov rdi, rsi	      1929	ref-filter.c	FUNCTION_71
0x4004251	          0x4889d6	                            mov rsi, rdx	      1930	ref-filter.c	FUNCTION_71	CALL_1
0x4004254	      0xe8f9caffff	             call sym.new_ref_array_item	      1930	ref-filter.c	FUNCTION_71	CALL_1
0x4004259	          0x4889c5	                            mov rbp, rax	      1930	ref-filter.c	FUNCTION_71	CALL_1
0x400425c	            0x8b03	                    mov eax, dword [rbx]	      1932	ref-filter.c	FUNCTION_71
0x400425e	          0x8d5001	                      lea edx, [rax + 1]	      1932	ref-filter.c	FUNCTION_71
0x4004261	          0x8b4304	                mov eax, dword [rbx + 4]	      1932	ref-filter.c	FUNCTION_71
0x4004264	            0x39c2	                            cmp edx, eax	      1932	ref-filter.c	FUNCTION_71
0x4004266	            0x7e50	                           jle 0x40042b8	      1932	ref-filter.c	FUNCTION_71
0x4004268	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	      1932	ref-filter.c	FUNCTION_71
0x400426c	            0x89c6	                            mov esi, eax	      1932	ref-filter.c	FUNCTION_71
0x400426e	          0xc1ee1f	                           shr esi, 0x1f	      1932	ref-filter.c	FUNCTION_71
0x4004271	             0x1c6	                            add esi, eax	      1932	ref-filter.c	FUNCTION_71
0x4004273	            0xd1fe	                              sar esi, 1	      1932	ref-filter.c	FUNCTION_71
0x4004275	            0x39f2	                            cmp edx, esi	      1932	ref-filter.c	FUNCTION_71
0x4004277	           0xf4ff2	                          cmovg esi, edx	      1932	ref-filter.c	FUNCTION_71
0x400427a	          0x897304	                mov dword [rbx + 4], esi	      1932	ref-filter.c	FUNCTION_71
0x400427d	          0x4863d6	                         movsxd rdx, esi	      1932	ref-filter.c	FUNCTION_71
0x4004280	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_120	IF_1
0x400428a	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_120	IF_1
0x400428d	            0x7614	                           jbe 0x40042a3	       795	git-compat-util.h	FUNCTION_120	IF_1
0x400428f	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_120	IF_1	CALL_1
0x4004294	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_120	IF_1	CALL_1
0x4004299	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_120	IF_1	CALL_1
0x400429e	      0xe800000000	                          call 0x40042a3	       796	git-compat-util.h	FUNCTION_120	IF_1	CALL_1
0x40042a3	    0x488d34d50000	                        lea rsi, [rdx*8]	      1932	ref-filter.c	FUNCTION_71
0x40042ab	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1932	ref-filter.c	FUNCTION_71
0x40042af	      0xe800000000	                          call 0x40042b4	      1932	ref-filter.c	FUNCTION_71
0x40042b4	        0x48894308	                mov qword [rbx + 8], rax	      1932	ref-filter.c	FUNCTION_71
0x40042b8	        0x488b5308	                mov rdx, qword [rbx + 8]	      1933	ref-filter.c	FUNCTION_71
0x40042bc	            0x8b03	                    mov eax, dword [rbx]	      1933	ref-filter.c	FUNCTION_71
0x40042be	          0x8d4801	                      lea ecx, [rax + 1]	      1933	ref-filter.c	FUNCTION_71
0x40042c1	            0x890b	                    mov dword [rbx], ecx	      1933	ref-filter.c	FUNCTION_71
0x40042c3	            0x4898	                                    cdqe	      1933	ref-filter.c	FUNCTION_71
0x40042c5	        0x48892cc2	            mov qword [rdx + rax*8], rbp	      1933	ref-filter.c	FUNCTION_71
0x40042c9	          0x4889e8	                            mov rax, rbp	      1936	ref-filter.c	FUNCTION_71
0x40042cc	        0x4883c408	                              add rsp, 8	      1936	ref-filter.c	FUNCTION_71
0x40042d0	              0x5b	                                 pop rbx	      1936	ref-filter.c	FUNCTION_71
0x40042d1	              0x5d	                                 pop rbp	      1936	ref-filter.c	FUNCTION_71
0x40042d2	              0xc3	                                     ret	      1936	ref-filter.c	FUNCTION_71
