packed_refs_lock	FOR,0:CALL,10:DO,0:SWITCH,0:ELSE,0:IF,3:WHILE,0:functions,0	61
0x40011a9	            0x4155	                                push r13	       982	packed-backend.c	FUNCTION_27
0x40011ab	            0x4154	                                push r12	       982	packed-backend.c	FUNCTION_27
0x40011ad	              0x55	                                push rbp	       982	packed-backend.c	FUNCTION_27
0x40011ae	              0x53	                                push rbx	       982	packed-backend.c	FUNCTION_27
0x40011af	        0x4883ec08	                              sub rsp, 8	       982	packed-backend.c	FUNCTION_27
0x40011b3	            0x89f5	                            mov ebp, esi	       982	packed-backend.c	FUNCTION_27
0x40011b5	          0x4989d5	                            mov r13, rdx	       982	packed-backend.c	FUNCTION_27
0x40011b8	      0xba00000000	                              mov edx, 0	       983	packed-backend.c	FUNCTION_27
0x40011bd	      0xbe0a000000	                            mov esi, 0xa	       983	packed-backend.c	FUNCTION_27
0x40011c2	      0xe837f0ffff	                call sym.packed_downcast	       983	packed-backend.c	FUNCTION_27
0x40011c7	          0x4889c3	                            mov rbx, rax	       983	packed-backend.c	FUNCTION_27
0x40011ca	    0x833d00000000	               cmp dword [0x040011d1], 0	       989	packed-backend.c	FUNCTION_27	IF_1
0x40011d1	            0x7519	                           jne 0x40011ec	       989	packed-backend.c	FUNCTION_27	IF_1
0x40011d3	      0xbe00000000	                              mov esi, 0	       990	packed-backend.c	FUNCTION_27	IF_1	CALL_2
0x40011d8	      0xbf00000000	                              mov edi, 0	       990	packed-backend.c	FUNCTION_27	IF_1	CALL_2
0x40011dd	      0xe800000000	                          call 0x40011e2	       990	packed-backend.c	FUNCTION_27	IF_1	CALL_2
0x40011e2	    0xc70500000000	               mov dword [0x040011ec], 1	       991	packed-backend.c	FUNCTION_27	IF_1
0x40011ec	        0x4c8d6320	                   lea r12, [rbx + 0x20]	       999	packed-backend.c	FUNCTION_27	IF_2	CALL_3
0x40011f0	    0x48630d000000	         movsxd rcx, dword [0x040011f7] 	       999	packed-backend.c	FUNCTION_27	IF_2	CALL_3
0x40011f7	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       999	packed-backend.c	FUNCTION_27	IF_2	CALL_3
0x40011fb	            0x89ea	                            mov edx, ebp	       999	packed-backend.c	FUNCTION_27	IF_2	CALL_3
0x40011fd	          0x4c89e7	                            mov rdi, r12	       999	packed-backend.c	FUNCTION_27	IF_2	CALL_3
0x4001200	      0xe800000000	                          call 0x4001205	       999	packed-backend.c	FUNCTION_27	IF_2	CALL_3
0x4001205	            0x85c0	                           test eax, eax	       999	packed-backend.c	FUNCTION_27	IF_2	CALL_3
0x4001207	            0x791a	                           jns 0x4001223	       999	packed-backend.c	FUNCTION_27	IF_2	CALL_3
0x4001209	      0xe800000000	                          call 0x400120e	      1003	packed-backend.c	FUNCTION_27	IF_2	CALL_4
0x400120e	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1003	packed-backend.c	FUNCTION_27	IF_2	CALL_4
0x4001212	          0x4c89ea	                            mov rdx, r13	      1003	packed-backend.c	FUNCTION_27	IF_2	CALL_4
0x4001215	            0x8b30	                    mov esi, dword [rax]	      1003	packed-backend.c	FUNCTION_27	IF_2	CALL_4
0x4001217	      0xe800000000	                          call 0x400121c	      1003	packed-backend.c	FUNCTION_27	IF_2	CALL_4
0x400121c	      0xbdffffffff	                     mov ebp, 0xffffffff	      1004	packed-backend.c	FUNCTION_27	IF_2
0x4001221	            0xeb53	                           jmp 0x4001276	      1004	packed-backend.c	FUNCTION_27	IF_2
0x4001223	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       249	lockfile.h	FUNCTION_56	CALL_1
0x4001227	      0xe800000000	                          call 0x400122c	       249	lockfile.h	FUNCTION_56	CALL_1
0x400122c	            0x89c5	                            mov ebp, eax	       249	lockfile.h	FUNCTION_56	CALL_1
0x400122e	            0x85c0	                           test eax, eax	      1007	packed-backend.c	FUNCTION_27	IF_3	CALL_5
0x4001230	            0x7434	                            je 0x4001266	      1007	packed-backend.c	FUNCTION_27	IF_3	CALL_5
0x4001232	      0xe800000000	                          call 0x4001237	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x4001237	            0x8b38	                    mov edi, dword [rax]	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x4001239	      0xe800000000	                          call 0x400123e	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x400123e	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x4001242	          0x4889c1	                            mov rcx, rax	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x4001245	      0xbe00000000	                              mov esi, 0	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x400124a	          0x4c89ef	                            mov rdi, r13	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x400124d	      0xb800000000	                              mov eax, 0	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x4001252	      0xe800000000	                          call 0x4001257	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x4001257	          0x4c89e7	                            mov rdi, r12	       304	lockfile.h	FUNCTION_59	CALL_1
0x400125a	      0xe800000000	                          call 0x400125f	       304	lockfile.h	FUNCTION_59	CALL_1
0x400125f	      0xbdffffffff	                     mov ebp, 0xffffffff	      1010	packed-backend.c	FUNCTION_27	IF_3
0x4001264	            0xeb10	                           jmp 0x4001276	      1010	packed-backend.c	FUNCTION_27	IF_3
0x4001266	          0x4889df	                            mov rdi, rbx	      1021	packed-backend.c	FUNCTION_27	CALL_9
0x4001269	      0xe8f3f0ffff	              call sym.validate_snapshot	      1021	packed-backend.c	FUNCTION_27	CALL_9
0x400126e	          0x4889df	                            mov rdi, rbx	      1027	packed-backend.c	FUNCTION_27	CALL_10
0x4001271	      0xe8e1f7ffff	                   call sym.get_snapshot	      1027	packed-backend.c	FUNCTION_27	CALL_10
0x4001276	            0x89e8	                            mov eax, ebp	      1029	packed-backend.c	FUNCTION_27
0x4001278	        0x4883c408	                              add rsp, 8	      1029	packed-backend.c	FUNCTION_27
0x400127c	              0x5b	                                 pop rbx	      1029	packed-backend.c	FUNCTION_27
0x400127d	              0x5d	                                 pop rbp	      1029	packed-backend.c	FUNCTION_27
0x400127e	            0x415c	                                 pop r12	      1029	packed-backend.c	FUNCTION_27
0x4001280	            0x415d	                                 pop r13	      1029	packed-backend.c	FUNCTION_27
0x4001282	              0xc3	                                     ret	      1029	packed-backend.c	FUNCTION_27
packed_initial_transaction_commit	FOR,0:CALL,1:DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:functions,0	6
0x4000778	        0x4883ec08	                              sub rsp, 8	      1499	packed-backend.c	FUNCTION_37
0x400077c	          0x4889f7	                            mov rdi, rsi	      1499	packed-backend.c	FUNCTION_37
0x400077f	          0x4889d6	                            mov rsi, rdx	      1500	packed-backend.c	FUNCTION_37	CALL_1
0x4000782	      0xe800000000	                          call 0x4000787	      1500	packed-backend.c	FUNCTION_37	CALL_1
0x4000787	        0x4883c408	                              add rsp, 8	      1501	packed-backend.c	FUNCTION_37
0x400078b	              0xc3	                                     ret	      1501	packed-backend.c	FUNCTION_37
packed_ref_store_create	FOR,0:CALL,4:DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:functions,0	24
0x40001af	            0x4154	                                push r12	       198	packed-backend.c	FUNCTION_4
0x40001b1	              0x55	                                push rbp	       198	packed-backend.c	FUNCTION_4
0x40001b2	              0x53	                                push rbx	       198	packed-backend.c	FUNCTION_4
0x40001b3	          0x4889fd	                            mov rbp, rdi	       198	packed-backend.c	FUNCTION_4
0x40001b6	          0x4189f4	                           mov r12d, esi	       198	packed-backend.c	FUNCTION_4
0x40001b9	      0xbe30000000	                           mov esi, 0x30	       199	packed-backend.c	FUNCTION_4	CALL_1
0x40001be	      0xbf01000000	                              mov edi, 1	       199	packed-backend.c	FUNCTION_4	CALL_1
0x40001c3	      0xe800000000	                          call 0x40001c8	       199	packed-backend.c	FUNCTION_4	CALL_1
0x40001c8	          0x4889c3	                            mov rbx, rax	       199	packed-backend.c	FUNCTION_4	CALL_1
0x40001cb	      0xbe00000000	                              mov esi, 0	       202	packed-backend.c	FUNCTION_4	CALL_2
0x40001d0	          0x4889c7	                            mov rdi, rax	       202	packed-backend.c	FUNCTION_4	CALL_2
0x40001d3	      0xe800000000	                          call 0x40001d8	       202	packed-backend.c	FUNCTION_4	CALL_2
0x40001d8	        0x44896308	               mov dword [rbx + 8], r12d	       203	packed-backend.c	FUNCTION_4
0x40001dc	          0x4889ef	                            mov rdi, rbp	       205	packed-backend.c	FUNCTION_4	CALL_3
0x40001df	      0xe800000000	                          call 0x40001e4	       205	packed-backend.c	FUNCTION_4	CALL_3
0x40001e4	        0x48894310	             mov qword [rbx + 0x10], rax	       205	packed-backend.c	FUNCTION_4	CALL_3
0x40001e8	        0x488d7310	                   lea rsi, [rbx + 0x10]	       206	packed-backend.c	FUNCTION_4	CALL_4
0x40001ec	      0xbf00000000	                              mov edi, 0	       206	packed-backend.c	FUNCTION_4	CALL_4
0x40001f1	      0xe800000000	                          call 0x40001f6	       206	packed-backend.c	FUNCTION_4	CALL_4
0x40001f6	          0x4889d8	                            mov rax, rbx	       209	packed-backend.c	FUNCTION_4
0x40001f9	              0x5b	                                 pop rbx	       209	packed-backend.c	FUNCTION_4
0x40001fa	              0x5d	                                 pop rbp	       209	packed-backend.c	FUNCTION_4
0x40001fb	            0x415c	                                 pop r12	       209	packed-backend.c	FUNCTION_4
0x40001fd	              0xc3	                                     ret	       209	packed-backend.c	FUNCTION_4
packed_ref_iterator_advance	FOR,0:CALL,4:DO,0:SWITCH,0:ELSE,0:IF,3:WHILE,1:functions,0	190
0x4000491	            0x4157	                                push r15	       854	packed-backend.c	FUNCTION_22
0x4000493	            0x4156	                                push r14	       854	packed-backend.c	FUNCTION_22
0x4000495	            0x4155	                                push r13	       854	packed-backend.c	FUNCTION_22
0x4000497	            0x4154	                                push r12	       854	packed-backend.c	FUNCTION_22
0x4000499	              0x55	                                push rbp	       854	packed-backend.c	FUNCTION_22
0x400049a	              0x53	                                push rbx	       854	packed-backend.c	FUNCTION_22
0x400049b	        0x4883ec28	                           sub rsp, 0x28	       854	packed-backend.c	FUNCTION_22
0x400049f	          0x4889fb	                            mov rbx, rdi	       854	packed-backend.c	FUNCTION_22
0x40004a2	    0x64488b042528	                mov rax, qword fs:[0x28]	       854	packed-backend.c	FUNCTION_22
0x40004ab	      0x4889442418	             mov qword [rsp + 0x18], rax	       854	packed-backend.c	FUNCTION_22
0x40004b0	            0x31c0	                            xor eax, eax	       854	packed-backend.c	FUNCTION_22
0x40004b2	        0x488d4768	                   lea rax, [rdi + 0x68]	       791	packed-backend.c	FUNCTION_21
0x40004b6	      0x4889442408	                mov qword [rsp + 8], rax	       791	packed-backend.c	FUNCTION_21
0x40004bb	        0x4c8d6f40	                   lea r13, [rdi + 0x40]	       799	packed-backend.c	FUNCTION_21	IF_2	CALL_1
0x40004bf	            0xeb30	                           jmp 0x40004f1	       859	packed-backend.c	FUNCTION_22	WHILE_1	CALL_1
0x40004c1	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       861	packed-backend.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40004c5	      0xe800000000	                          call 0x40004ca	       861	packed-backend.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40004ca	            0x85c0	                           test eax, eax	       860	packed-backend.c	FUNCTION_22	WHILE_1	IF_1
0x40004cc	            0x7523	                           jne 0x40004f1	       860	packed-backend.c	FUNCTION_22	WHILE_1	IF_1
0x40004ce	    0x8b9380000000	            mov edx, dword [rbx + 0x80] 	       864	packed-backend.c	FUNCTION_22	WHILE_1	IF_2
0x40004d4	          0xf6c201	                              test dl, 1	       864	packed-backend.c	FUNCTION_22	WHILE_1	IF_2
0x40004d7	     0xf8547020000	                           jne 0x4000724	       864	packed-backend.c	FUNCTION_22	WHILE_1	IF_2
0x40004dd	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       865	packed-backend.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x40004e1	          0x4c89ee	                            mov rsi, r13	       865	packed-backend.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x40004e4	      0xe800000000	                          call 0x40004e9	       865	packed-backend.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x40004e9	            0x85c0	                           test eax, eax	       864	packed-backend.c	FUNCTION_22	WHILE_1	IF_2
0x40004eb	     0xf8533020000	                           jne 0x4000724	       864	packed-backend.c	FUNCTION_22	WHILE_1	IF_2
0x40004f1	        0x488b4330	            mov rax, qword [rbx + 0x30] 	       789	packed-backend.c	FUNCTION_21
0x40004f5	      0x4889442410	             mov qword [rsp + 0x10], rax	       789	packed-backend.c	FUNCTION_21
0x40004fa	    0x48c743700000	               mov qword [rbx + 0x70], 0	       164	strbuf.h	FUNCTION_97
0x4000502	        0x488b4378	            mov rax, qword [rbx + 0x78] 	       165	strbuf.h	FUNCTION_97	IF_2
0x4000506	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_97	IF_2
0x400050c	            0x7405	                            je 0x4000513	       165	strbuf.h	FUNCTION_97	IF_2
0x400050e	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_97	IF_2
0x4000511	            0xeb22	                           jmp 0x4000535	       166	strbuf.h	FUNCTION_97	IF_2
0x4000513	    0x803d00000000	                cmp byte [0x0400051a], 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x400051a	            0x7419	                            je 0x4000535	       168	strbuf.h	FUNCTION_97	CALL_2
0x400051c	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x4000521	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_97	CALL_2
0x4000526	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x400052b	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x4000530	      0xe800000000	                          call 0x4000535	       168	strbuf.h	FUNCTION_97	CALL_2
0x4000535	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       793	packed-backend.c	FUNCTION_21	IF_1
0x4000539	        0x48394330	            cmp qword [rbx + 0x30], rax 	       793	packed-backend.c	FUNCTION_21	IF_1
0x400053d	     0xf84f6010000	                            je 0x4000739	       793	packed-backend.c	FUNCTION_21	IF_1
0x4000543	    0xc74320020000	               mov dword [rbx + 0x20], 2	       796	packed-backend.c	FUNCTION_21
0x400054a	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       798	packed-backend.c	FUNCTION_21	IF_2
0x400054f	          0x4829f8	                            sub rax, rdi	       798	packed-backend.c	FUNCTION_21	IF_2
0x4000552	        0x4883f829	                           cmp rax, 0x29	       798	packed-backend.c	FUNCTION_21	IF_2
0x4000556	            0x7e2e	                           jle 0x4000586	       798	packed-backend.c	FUNCTION_21	IF_2
0x4000558	      0x488d542410	                   lea rdx, [rsp + 0x10]	       799	packed-backend.c	FUNCTION_21	IF_2	CALL_1
0x400055d	          0x4c89ee	                            mov rsi, r13	       799	packed-backend.c	FUNCTION_21	IF_2	CALL_1
0x4000560	      0xe800000000	                          call 0x4000565	       799	packed-backend.c	FUNCTION_21	IF_2	CALL_1
0x4000565	          0x4189c6	                           mov r14d, eax	       799	packed-backend.c	FUNCTION_21	IF_2	CALL_1
0x4000568	            0x85c0	                           test eax, eax	       798	packed-backend.c	FUNCTION_21	IF_2
0x400056a	            0x751a	                           jne 0x4000586	       798	packed-backend.c	FUNCTION_21	IF_2
0x400056c	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       800	packed-backend.c	FUNCTION_21	IF_2
0x4000571	        0x488d6801	                      lea rbp, [rax + 1]	       800	packed-backend.c	FUNCTION_21	IF_2
0x4000575	      0x48896c2410	             mov qword [rsp + 0x10], rbp	       800	packed-backend.c	FUNCTION_21	IF_2
0x400057a	           0xfb600	                   movzx eax, byte [rax]	       800	packed-backend.c	FUNCTION_21	IF_2
0x400057d	    0xf68000000000	                      test byte [rax], 1	       799	packed-backend.c	FUNCTION_21	IF_2	CALL_1
0x4000584	            0x751b	                           jne 0x40005a1	       799	packed-backend.c	FUNCTION_21	IF_2	CALL_1
0x4000586	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	       802	packed-backend.c	FUNCTION_21	IF_2
0x400058a	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	       801	packed-backend.c	FUNCTION_21	IF_2	CALL_2
0x400058e	          0x4829f2	                            sub rdx, rsi	       801	packed-backend.c	FUNCTION_21	IF_2	CALL_2
0x4000591	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       801	packed-backend.c	FUNCTION_21	IF_2	CALL_2
0x4000595	          0x488b00	                    mov rax, qword [rax]	       801	packed-backend.c	FUNCTION_21	IF_2	CALL_2
0x4000598	        0x488b7810	            mov rdi, qword [rax + 0x10] 	       801	packed-backend.c	FUNCTION_21	IF_2	CALL_2
0x400059c	      0xe8f7fdffff	               call sym.die_invalid_line	       801	packed-backend.c	FUNCTION_21	IF_2	CALL_2
0x40005a1	        0x4c8b7b38	            mov r15, qword [rbx + 0x38] 	       804	packed-backend.c	FUNCTION_21	CALL_3
0x40005a5	          0x4c89fa	                            mov rdx, r15	       804	packed-backend.c	FUNCTION_21	CALL_3
0x40005a8	          0x4829ea	                            sub rdx, rbp	       804	packed-backend.c	FUNCTION_21	CALL_3
0x40005ab	      0xbe0a000000	                            mov esi, 0xa	       804	packed-backend.c	FUNCTION_21	CALL_3
0x40005b0	          0x4889ef	                            mov rdi, rbp	       804	packed-backend.c	FUNCTION_21	CALL_3
0x40005b3	      0xe800000000	                          call 0x40005b8	       804	packed-backend.c	FUNCTION_21	CALL_3
0x40005b8	          0x4989c4	                            mov r12, rax	       804	packed-backend.c	FUNCTION_21	CALL_3
0x40005bb	          0x4885c0	                           test rax, rax	       805	packed-backend.c	FUNCTION_21	IF_3
0x40005be	            0x751a	                           jne 0x40005da	       805	packed-backend.c	FUNCTION_21	IF_3
0x40005c0	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	       807	packed-backend.c	FUNCTION_21	IF_3
0x40005c4	          0x4c89fa	                            mov rdx, r15	       806	packed-backend.c	FUNCTION_21	IF_3	CALL_4
0x40005c7	          0x4829f2	                            sub rdx, rsi	       806	packed-backend.c	FUNCTION_21	IF_3	CALL_4
0x40005ca	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       806	packed-backend.c	FUNCTION_21	IF_3	CALL_4
0x40005ce	          0x488b00	                    mov rax, qword [rax]	       806	packed-backend.c	FUNCTION_21	IF_3	CALL_4
0x40005d1	        0x488b7810	            mov rdi, qword [rax + 0x10] 	       806	packed-backend.c	FUNCTION_21	IF_3	CALL_4
0x40005d5	      0xe870fcffff	          call sym.die_unterminated_line	       806	packed-backend.c	FUNCTION_21	IF_3	CALL_4
0x40005da	          0x4889c2	                            mov rdx, rax	       809	packed-backend.c	FUNCTION_21	CALL_5
0x40005dd	          0x4829ea	                            sub rdx, rbp	       809	packed-backend.c	FUNCTION_21	CALL_5
0x40005e0	          0x4889ee	                            mov rsi, rbp	       809	packed-backend.c	FUNCTION_21	CALL_5
0x40005e3	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       809	packed-backend.c	FUNCTION_21	CALL_5
0x40005e8	      0xe800000000	                          call 0x40005ed	       809	packed-backend.c	FUNCTION_21	CALL_5
0x40005ed	        0x488b7b78	            mov rdi, qword [rbx + 0x78] 	       810	packed-backend.c	FUNCTION_21
0x40005f1	        0x48897b10	             mov qword [rbx + 0x10], rdi	       810	packed-backend.c	FUNCTION_21
0x40005f5	      0xbe01000000	                              mov esi, 1	       812	packed-backend.c	FUNCTION_21	IF_4	CALL_6
0x40005fa	      0xe800000000	                          call 0x40005ff	       812	packed-backend.c	FUNCTION_21	IF_4	CALL_6
0x40005ff	            0x85c0	                           test eax, eax	       812	packed-backend.c	FUNCTION_21	IF_4	CALL_6
0x4000601	            0x7437	                            je 0x400063a	       812	packed-backend.c	FUNCTION_21	IF_4	CALL_6
0x4000603	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       813	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_7
0x4000607	      0xe800000000	                          call 0x400060c	       813	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_7
0x400060c	            0x85c0	                           test eax, eax	       813	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_7
0x400060e	            0x750e	                           jne 0x400061e	       813	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_7
0x4000610	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       814	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_8
0x4000614	      0xbf00000000	                              mov edi, 0	       814	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_8
0x4000619	      0xe800000000	                          call 0x400061e	       814	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_8
0x400061e	    0x49c745000000	                      mov qword [r13], 0	        90	string3.h	FUNCTION_109	CALL_6
0x4000626	    0x49c745080000	                  mov qword [r13 + 8], 0	        90	string3.h	FUNCTION_109	CALL_6
0x400062e	    0x41c745100000	               mov dword [r13 + 0x10], 0	        90	string3.h	FUNCTION_109	CALL_6
0x4000636	        0x834b200c	              or dword [rbx + 0x20], 0xc	       817	packed-backend.c	FUNCTION_21	IF_4
0x400063a	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       819	packed-backend.c	FUNCTION_21	IF_6
0x400063e	          0x8b4028	            mov eax, dword [rax + 0x28] 	       819	packed-backend.c	FUNCTION_21	IF_6
0x4000641	          0x83f802	                              cmp eax, 2	       819	packed-backend.c	FUNCTION_21	IF_6
0x4000644	            0x7417	                            je 0x400065d	       819	packed-backend.c	FUNCTION_21	IF_6
0x4000646	          0x83f801	                              cmp eax, 1	       819	packed-backend.c	FUNCTION_21	IF_6
0x4000649	            0x7516	                           jne 0x4000661	       819	packed-backend.c	FUNCTION_21	IF_6
0x400064b	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       821	packed-backend.c	FUNCTION_21	IF_6	CALL_10
0x400064f	      0xbe00000000	                              mov esi, 0	       821	packed-backend.c	FUNCTION_21	IF_6	CALL_10
0x4000654	      0xe800000000	                          call 0x4000659	       821	packed-backend.c	FUNCTION_21	IF_6	CALL_10
0x4000659	            0x85c0	                           test eax, eax	       820	packed-backend.c	FUNCTION_21	IF_6
0x400065b	            0x7404	                            je 0x4000661	       820	packed-backend.c	FUNCTION_21	IF_6
0x400065d	        0x834b2040	            or dword [rbx + 0x20], 0x40 	       822	packed-backend.c	FUNCTION_21	IF_6
0x4000661	      0x498d442401	                      lea rax, [r12 + 1]	       824	packed-backend.c	FUNCTION_21
0x4000666	        0x48894330	             mov qword [rbx + 0x30], rax	       824	packed-backend.c	FUNCTION_21
0x400066a	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	       826	packed-backend.c	FUNCTION_21	IF_7
0x400066e	          0x4839d0	                            cmp rax, rdx	       826	packed-backend.c	FUNCTION_21	IF_7
0x4000671	     0xf8394000000	                           jae 0x400070b	       826	packed-backend.c	FUNCTION_21	IF_7
0x4000677	    0x41807c24015e	                cmp byte [r12 + 1], 0x5e	       826	packed-backend.c	FUNCTION_21	IF_7
0x400067d	     0xf8588000000	                           jne 0x400070b	       826	packed-backend.c	FUNCTION_21	IF_7
0x4000683	      0x498d7c2402	                      lea rdi, [r12 + 2]	       827	packed-backend.c	FUNCTION_21	IF_7
0x4000688	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       827	packed-backend.c	FUNCTION_21	IF_7
0x400068d	          0x4829fa	                            sub rdx, rdi	       828	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x4000690	        0x4883fa28	                           cmp rdx, 0x28	       828	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x4000694	            0x7e28	                           jle 0x40006be	       828	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x4000696	        0x488d6b54	                   lea rbp, [rbx + 0x54]	       829	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_11
0x400069a	      0x488d542410	                   lea rdx, [rsp + 0x10]	       829	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_11
0x400069f	          0x4889ee	                            mov rsi, rbp	       829	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_11
0x40006a2	      0xe800000000	                          call 0x40006a7	       829	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_11
0x40006a7	            0x85c0	                           test eax, eax	       828	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x40006a9	            0x7513	                           jne 0x40006be	       828	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x40006ab	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       830	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x40006b0	        0x488d4201	                      lea rax, [rdx + 1]	       830	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x40006b4	      0x4889442410	             mov qword [rsp + 0x10], rax	       830	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x40006b9	          0x803a0a	                     cmp byte [rdx], 0xa	       829	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_11
0x40006bc	            0x741b	                            je 0x40006d9	       829	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_11
0x40006be	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	       832	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x40006c2	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	       831	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_12
0x40006c6	          0x4829f2	                            sub rdx, rsi	       831	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_12
0x40006c9	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       831	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_12
0x40006cd	          0x488b00	                    mov rax, qword [rax]	       831	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_12
0x40006d0	        0x488b7810	            mov rdi, qword [rax + 0x10] 	       831	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_12
0x40006d4	      0xe8bffcffff	               call sym.die_invalid_line	       831	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_12
0x40006d9	        0x48894330	             mov qword [rbx + 0x30], rax	       833	packed-backend.c	FUNCTION_21	IF_7
0x40006dd	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       840	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x40006e0	            0xa804	                              test al, 4	       840	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x40006e2	            0x741f	                            je 0x4000703	       840	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x40006e4	    0x48c743540000	               mov qword [rbx + 0x54], 0	        90	string3.h	FUNCTION_109	CALL_6
0x40006ec	    0x48c745080000	                  mov qword [rbp + 8], 0	        90	string3.h	FUNCTION_109	CALL_6
0x40006f4	    0xc74510000000	               mov dword [rbp + 0x10], 0	        90	string3.h	FUNCTION_109	CALL_6
0x40006fb	          0x83e0bf	                     and eax, 0xffffffbf	       842	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x40006fe	          0x894320	             mov dword [rbx + 0x20], eax	       842	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x4000701	            0xeb4f	                           jmp 0x4000752	       842	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x4000703	          0x83c840	                            or eax, 0x40	       844	packed-backend.c	FUNCTION_21	IF_7	ELSE_1
0x4000706	          0x894320	             mov dword [rbx + 0x20], eax	       844	packed-backend.c	FUNCTION_21	IF_7	ELSE_1
0x4000709	            0xeb47	                           jmp 0x4000752	       844	packed-backend.c	FUNCTION_21	IF_7	ELSE_1
0x400070b	    0x48c743540000	               mov qword [rbx + 0x54], 0	        90	string3.h	FUNCTION_109	CALL_6
0x4000713	    0x48c7435c0000	               mov qword [rbx + 0x5c], 0	        90	string3.h	FUNCTION_109	CALL_6
0x400071b	    0xc74364000000	               mov dword [rbx + 0x64], 0	        90	string3.h	FUNCTION_109	CALL_6
0x4000722	            0xeb2e	                           jmp 0x4000752	        90	string3.h	FUNCTION_109	CALL_6
0x4000724	          0x4489f0	                           mov eax, r14d	       876	packed-backend.c	FUNCTION_22
0x4000727	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       876	packed-backend.c	FUNCTION_22
0x400072c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       876	packed-backend.c	FUNCTION_22
0x4000735	            0x7432	                            je 0x4000769	       876	packed-backend.c	FUNCTION_22
0x4000737	            0xeb2b	                           jmp 0x4000764	       876	packed-backend.c	FUNCTION_22
0x4000739	          0x4889df	                            mov rdi, rbx	       872	packed-backend.c	FUNCTION_22	IF_3	CALL_4
0x400073c	      0xe800000000	                          call 0x4000741	       872	packed-backend.c	FUNCTION_22	IF_3	CALL_4
0x4000741	          0x4189c6	                           mov r14d, eax	       872	packed-backend.c	FUNCTION_22	IF_3	CALL_4
0x4000744	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       873	packed-backend.c	FUNCTION_22	IF_3
0x4000747	      0xb8feffffff	                     mov eax, 0xfffffffe	       873	packed-backend.c	FUNCTION_22	IF_3
0x400074c	        0x440f45f0	                        cmovne r14d, eax	       873	packed-backend.c	FUNCTION_22	IF_3
0x4000750	            0xebd2	                           jmp 0x4000724	       873	packed-backend.c	FUNCTION_22	IF_3
0x4000752	    0xf68380000000	               test byte [rbx + 0x80], 2	       860	packed-backend.c	FUNCTION_22	WHILE_1	IF_1
0x4000759	     0xf846ffdffff	                            je 0x40004ce	       860	packed-backend.c	FUNCTION_22	WHILE_1	IF_1
0x400075f	      0xe95dfdffff	                           jmp 0x40004c1	       860	packed-backend.c	FUNCTION_22	WHILE_1	IF_1
0x4000764	      0xe800000000	                          call 0x4000769	       876	packed-backend.c	FUNCTION_22
0x4000769	        0x4883c428	                           add rsp, 0x28	       876	packed-backend.c	FUNCTION_22
0x400076d	              0x5b	                                 pop rbx	       876	packed-backend.c	FUNCTION_22
0x400076e	              0x5d	                                 pop rbp	       876	packed-backend.c	FUNCTION_22
0x400076f	            0x415c	                                 pop r12	       876	packed-backend.c	FUNCTION_22
0x4000771	            0x415d	                                 pop r13	       876	packed-backend.c	FUNCTION_22
0x4000773	            0x415e	                                 pop r14	       876	packed-backend.c	FUNCTION_22
0x4000775	            0x415f	                                 pop r15	       876	packed-backend.c	FUNCTION_22
0x4000777	              0xc3	                                     ret	       876	packed-backend.c	FUNCTION_22
packed_for_each_reflog_ent	FOR,0:CALL,0:DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:functions,0	2
0x4000191	      0xb800000000	                              mov eax, 0	      1593	packed-backend.c	FUNCTION_44
0x4000196	              0xc3	                                     ret	      1593	packed-backend.c	FUNCTION_44
packed_transaction_abort	FOR,0:CALL,2:DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:functions,0	11
0x4001341	              0x53	                                push rbx	      1458	packed-backend.c	FUNCTION_35
0x4001342	          0x4889f3	                            mov rbx, rsi	      1458	packed-backend.c	FUNCTION_35
0x4001345	      0xba00000000	                              mov edx, 0	      1459	packed-backend.c	FUNCTION_35	CALL_1
0x400134a	      0xbe07000000	                              mov esi, 7	      1459	packed-backend.c	FUNCTION_35	CALL_1
0x400134f	      0xe8aaeeffff	                call sym.packed_downcast	      1459	packed-backend.c	FUNCTION_35	CALL_1
0x4001354	          0x4889de	                            mov rsi, rbx	      1464	packed-backend.c	FUNCTION_35	CALL_2
0x4001357	          0x4889c7	                            mov rdi, rax	      1464	packed-backend.c	FUNCTION_35	CALL_2
0x400135a	      0xe866ffffff	     call sym.packed_transaction_cleanup	      1464	packed-backend.c	FUNCTION_35	CALL_2
0x400135f	      0xb800000000	                              mov eax, 0	      1466	packed-backend.c	FUNCTION_35
0x4001364	              0x5b	                                 pop rbx	      1466	packed-backend.c	FUNCTION_35
0x4001365	              0xc3	                                     ret	      1466	packed-backend.c	FUNCTION_35
verify_buffer_safe	FOR,0:CALL,2:DO,0:SWITCH,0:ELSE,0:IF,2:WHILE,0:functions,0	30
0x40009fb	        0x4883ec08	                              sub rsp, 8	       450	packed-backend.c	FUNCTION_14
0x40009ff	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	       451	packed-backend.c	FUNCTION_14
0x4000a03	        0x488b5720	            mov rdx, qword [rdi + 0x20] 	       452	packed-backend.c	FUNCTION_14
0x4000a07	          0x4839d6	                            cmp rsi, rdx	       455	packed-backend.c	FUNCTION_14	IF_1
0x4000a0a	            0x7446	                            je 0x4000a52	       455	packed-backend.c	FUNCTION_14	IF_1
0x4000a0c	        0x488d42ff	                      lea rax, [rdx - 1]	       458	packed-backend.c	FUNCTION_14	CALL_1
0x4000a10	          0x4839c6	                            cmp rsi, rax	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x4000a13	            0x720e	                            jb 0x4000a23	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x4000a15	          0x4889c6	                            mov rsi, rax	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x4000a18	            0xeb17	                           jmp 0x4000a31	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x4000a1a	        0x4883e801	                              sub rax, 1	       416	packed-backend.c	FUNCTION_12	WHILE_1
0x4000a1e	          0x4839c6	                            cmp rsi, rax	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x4000a21	            0x740e	                            je 0x4000a31	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x4000a23	        0x8078ff0a	                 cmp byte [rax - 1], 0xa	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x4000a27	            0x75f1	                           jne 0x4000a1a	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x4000a29	          0x80385e	                    cmp byte [rax], 0x5e	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x4000a2c	            0x74ec	                            je 0x4000a1a	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x4000a2e	          0x4889c6	                            mov rsi, rax	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x4000a31	        0x807aff0a	                 cmp byte [rdx - 1], 0xa	       459	packed-backend.c	FUNCTION_14	IF_2
0x4000a35	            0x750c	                           jne 0x4000a43	       459	packed-backend.c	FUNCTION_14	IF_2
0x4000a37	          0x4889d0	                            mov rax, rdx	       459	packed-backend.c	FUNCTION_14	IF_2
0x4000a3a	          0x4829f0	                            sub rax, rsi	       459	packed-backend.c	FUNCTION_14	IF_2
0x4000a3d	        0x4883f829	                           cmp rax, 0x29	       459	packed-backend.c	FUNCTION_14	IF_2
0x4000a41	            0x7f0f	                            jg 0x4000a52	       459	packed-backend.c	FUNCTION_14	IF_2
0x4000a43	          0x4829f2	                            sub rdx, rsi	       460	packed-backend.c	FUNCTION_14	IF_2	CALL_2
0x4000a46	          0x488b07	                    mov rax, qword [rdi]	       460	packed-backend.c	FUNCTION_14	IF_2	CALL_2
0x4000a49	        0x488b7810	            mov rdi, qword [rax + 0x10] 	       460	packed-backend.c	FUNCTION_14	IF_2	CALL_2
0x4000a4d	      0xe846f9ffff	               call sym.die_invalid_line	       460	packed-backend.c	FUNCTION_14	IF_2	CALL_2
0x4000a52	        0x4883c408	                              add rsp, 8	       462	packed-backend.c	FUNCTION_14
0x4000a56	              0xc3	                                     ret	       462	packed-backend.c	FUNCTION_14
clear_snapshot_buffer	FOR,0:CALL,2:DO,0:SWITCH,0:ELSE,1:IF,2:WHILE,0:functions,0	24
0x40002ca	              0x53	                                push rbx	       168	packed-backend.c	FUNCTION_2
0x40002cb	          0x4889fb	                            mov rbx, rdi	       168	packed-backend.c	FUNCTION_2
0x40002ce	        0x837f0800	                  cmp dword [rdi + 8], 0	       169	packed-backend.c	FUNCTION_2	IF_1
0x40002d2	            0x7433	                            je 0x4000307	       169	packed-backend.c	FUNCTION_2	IF_1
0x40002d4	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2
0x40002d8	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2
0x40002dc	          0x4829fe	                            sub rsi, rdi	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2
0x40002df	      0xe800000000	                          call 0x40002e4	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2
0x40002e4	            0x85c0	                           test eax, eax	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2
0x40002e6	            0x7416	                            je 0x40002fe	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2
0x40002e8	          0x488b03	                    mov rax, qword [rbx]	       171	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x40002eb	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       171	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x40002ef	      0xbf00000000	                              mov edi, 0	       171	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x40002f4	      0xb800000000	                              mov eax, 0	       171	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x40002f9	      0xe800000000	                          call 0x40002fe	       171	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x40002fe	    0xc74308000000	                  mov dword [rbx + 8], 0	       173	packed-backend.c	FUNCTION_2	IF_1
0x4000305	            0xeb09	                           jmp 0x4000310	       173	packed-backend.c	FUNCTION_2	IF_1
0x4000307	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	       175	packed-backend.c	FUNCTION_2	ELSE_1	CALL_2
0x400030b	      0xe800000000	                          call 0x4000310	       175	packed-backend.c	FUNCTION_2	ELSE_1	CALL_2
0x4000310	    0x48c743200000	               mov qword [rbx + 0x20], 0	       177	packed-backend.c	FUNCTION_2
0x4000318	    0x48c743180000	               mov qword [rbx + 0x18], 0	       177	packed-backend.c	FUNCTION_2
0x4000320	    0x48c743100000	               mov qword [rbx + 0x10], 0	       177	packed-backend.c	FUNCTION_2
0x4000328	              0x5b	                                 pop rbx	       178	packed-backend.c	FUNCTION_2
0x4000329	              0xc3	                                     ret	       178	packed-backend.c	FUNCTION_2
packed_reflog_exists	FOR,0:CALL,0:DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:functions,0	2
0x400019d	      0xb800000000	                              mov eax, 0	      1607	packed-backend.c	FUNCTION_46
0x40001a2	              0xc3	                                     ret	      1607	packed-backend.c	FUNCTION_46
packed_delete_refs	FOR,0:CALL,7:DO,0:SWITCH,0:ELSE,1:IF,4:WHILE,0:functions,1	127
0x40007fd	            0x4157	                                push r15	      1505	packed-backend.c	FUNCTION_38
0x40007ff	            0x4156	                                push r14	      1505	packed-backend.c	FUNCTION_38
0x4000801	            0x4155	                                push r13	      1505	packed-backend.c	FUNCTION_38
0x4000803	            0x4154	                                push r12	      1505	packed-backend.c	FUNCTION_38
0x4000805	              0x55	                                push rbp	      1505	packed-backend.c	FUNCTION_38
0x4000806	              0x53	                                push rbx	      1505	packed-backend.c	FUNCTION_38
0x4000807	        0x4883ec38	                           sub rsp, 0x38	      1505	packed-backend.c	FUNCTION_38
0x400080b	          0x4889fb	                            mov rbx, rdi	      1505	packed-backend.c	FUNCTION_38
0x400080e	          0x4989f5	                            mov r13, rsi	      1505	packed-backend.c	FUNCTION_38
0x4000811	          0x4889d5	                            mov rbp, rdx	      1505	packed-backend.c	FUNCTION_38
0x4000814	          0x4189ce	                           mov r14d, ecx	      1505	packed-backend.c	FUNCTION_38
0x4000817	    0x64488b042528	                mov rax, qword fs:[0x28]	      1505	packed-backend.c	FUNCTION_38
0x4000820	      0x4889442428	             mov qword [rsp + 0x28], rax	      1505	packed-backend.c	FUNCTION_38
0x4000825	            0x31c0	                            xor eax, eax	      1505	packed-backend.c	FUNCTION_38
0x4000827	      0xba00000000	                              mov edx, 0	      1506	packed-backend.c	FUNCTION_38
0x400082c	      0xbe02000000	                              mov esi, 2	      1506	packed-backend.c	FUNCTION_38
0x4000831	      0xe8c8f9ffff	                call sym.packed_downcast	      1506	packed-backend.c	FUNCTION_38
0x4000836	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1508	packed-backend.c	FUNCTION_38
0x400083f	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1508	packed-backend.c	FUNCTION_38
0x4000848	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1508	packed-backend.c	FUNCTION_38
0x4000851	      0xb800000000	                              mov eax, 0	      1516	packed-backend.c	FUNCTION_38	IF_1
0x4000856	        0x837d0800	                  cmp dword [rbp + 8], 0	      1515	packed-backend.c	FUNCTION_38	IF_1
0x400085a	     0xf8477010000	                            je 0x40009d7	      1515	packed-backend.c	FUNCTION_38	IF_1
0x4000860	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1524	packed-backend.c	FUNCTION_38	CALL_2
0x4000865	          0x4889df	                            mov rdi, rbx	      1524	packed-backend.c	FUNCTION_38	CALL_2
0x4000868	      0xe800000000	                          call 0x400086d	      1524	packed-backend.c	FUNCTION_38	CALL_2
0x400086d	          0x4989c4	                            mov r12, rax	      1524	packed-backend.c	FUNCTION_38	CALL_2
0x4000870	          0x4885c0	                           test rax, rax	      1525	packed-backend.c	FUNCTION_38	IF_2
0x4000873	     0xf8459010000	                            je 0x40009d2	      1525	packed-backend.c	FUNCTION_38	IF_2
0x4000879	        0x488b5d00	                    mov rbx, qword [rbp]	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x400087d	          0x4885db	                           test rbx, rbx	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x4000880	     0xf84bf000000	                            je 0x4000945	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x4000886	          0x8b4508	                mov eax, dword [rbp + 8]	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x4000889	        0x48c1e004	                              shl rax, 4	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x400088d	          0x4801d8	                            add rax, rbx	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x4000890	          0x4839c3	                            cmp rbx, rax	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x4000893	     0xf83ac000000	                           jae 0x4000945	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x4000899	      0x4c8d4c2410	                    lea r9, [rsp + 0x10]	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x400089e	          0x4d89e8	                             mov r8, r13	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x40008a1	          0x4489f1	                           mov ecx, r14d	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x40008a4	      0xba00000000	                              mov edx, 0	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x40008a9	          0x488b33	                    mov rsi, qword [rbx]	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x40008ac	          0x4c89e7	                            mov rdi, r12	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x40008af	      0xe800000000	                          call 0x40008b4	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x40008b4	            0x85c0	                           test eax, eax	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x40008b6	            0x7473	                            je 0x400092b	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x40008b8	      0x4c8b7c2420	            mov r15, qword [rsp + 0x20] 	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x40008bd	          0x488b03	                    mov rax, qword [rbx]	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x40008c0	      0x4889442408	                mov qword [rsp + 8], rax	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x40008c5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x40008ca	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x40008cf	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_120
0x40008d4	      0xe800000000	                          call 0x40008d9	        54	gettext.h	FUNCTION_120
0x40008d9	          0x4c89fa	                            mov rdx, r15	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x40008dc	      0x488b742408	                mov rsi, qword [rsp + 8]	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x40008e1	          0x4889c7	                            mov rdi, rax	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x40008e4	      0xb800000000	                              mov eax, 0	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x40008e9	      0xe800000000	                          call 0x40008ee	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x40008ee	    0x48c744241800	               mov qword [rsp + 0x18], 0	       164	strbuf.h	FUNCTION_97
0x40008f7	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       165	strbuf.h	FUNCTION_97	IF_2
0x40008fc	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_97	IF_2
0x4000902	            0x7405	                            je 0x4000909	       165	strbuf.h	FUNCTION_97	IF_2
0x4000904	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_97	IF_2
0x4000907	            0xeb22	                           jmp 0x400092b	       166	strbuf.h	FUNCTION_97	IF_2
0x4000909	    0x803d00000000	                cmp byte [0x04000910], 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x4000910	            0x7419	                            je 0x400092b	       168	strbuf.h	FUNCTION_97	CALL_2
0x4000912	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x4000917	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_97	CALL_2
0x400091c	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x4000921	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x4000926	      0xe800000000	                          call 0x400092b	       168	strbuf.h	FUNCTION_97	CALL_2
0x400092b	        0x4883c310	                           add rbx, 0x10	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x400092f	            0x7414	                            je 0x4000945	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x4000931	          0x8b4508	                mov eax, dword [rbp + 8]	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x4000934	        0x48c1e004	                              shl rax, 4	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x4000938	        0x48034500	                    add rax, qword [rbp]	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x400093c	          0x4839c3	                            cmp rbx, rax	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x400093f	     0xf8254ffffff	                            jb 0x4000899	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x4000945	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1537	packed-backend.c	FUNCTION_38	CALL_3
0x400094a	          0x4c89e7	                            mov rdi, r12	      1537	packed-backend.c	FUNCTION_38	CALL_3
0x400094d	      0xe800000000	                          call 0x4000952	      1537	packed-backend.c	FUNCTION_38	CALL_3
0x4000952	            0x89c3	                            mov ebx, eax	      1537	packed-backend.c	FUNCTION_38	CALL_3
0x4000954	            0x85c0	                           test eax, eax	      1539	packed-backend.c	FUNCTION_38	IF_3
0x4000956	            0x7464	                            je 0x40009bc	      1539	packed-backend.c	FUNCTION_38	IF_3
0x4000958	        0x837d0801	                  cmp dword [rbp + 8], 1	      1540	packed-backend.c	FUNCTION_38	IF_3	IF_4
0x400095c	            0x7535	                           jne 0x4000993	      1540	packed-backend.c	FUNCTION_38	IF_3	IF_4
0x400095e	      0x4c8b6c2420	            mov r13, qword [rsp + 0x20] 	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4000963	        0x488b4500	                    mov rax, qword [rbp]	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4000967	          0x488b28	                    mov rbp, qword [rax]	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x400096a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x400096f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x4000974	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_120
0x4000979	      0xe800000000	                          call 0x400097e	        54	gettext.h	FUNCTION_120
0x400097e	          0x4c89ea	                            mov rdx, r13	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4000981	          0x4889ee	                            mov rsi, rbp	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4000984	          0x4889c7	                            mov rdi, rax	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4000987	      0xb800000000	                              mov eax, 0	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x400098c	      0xe800000000	                          call 0x4000991	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4000991	            0xeb29	                           jmp 0x40009bc	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4000993	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	      1544	packed-backend.c	FUNCTION_38	IF_3	CALL_5
0x4000998	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_120
0x400099d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_120
0x40009a2	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_120
0x40009a7	      0xe800000000	                          call 0x40009ac	        54	gettext.h	FUNCTION_120
0x40009ac	          0x4889ee	                            mov rsi, rbp	      1544	packed-backend.c	FUNCTION_38	IF_3	CALL_5
0x40009af	          0x4889c7	                            mov rdi, rax	      1544	packed-backend.c	FUNCTION_38	IF_3	CALL_5
0x40009b2	      0xb800000000	                              mov eax, 0	      1544	packed-backend.c	FUNCTION_38	IF_3	CALL_5
0x40009b7	      0xe800000000	                          call 0x40009bc	      1544	packed-backend.c	FUNCTION_38	IF_3	CALL_5
0x40009bc	          0x4c89e7	                            mov rdi, r12	      1547	packed-backend.c	FUNCTION_38	CALL_6
0x40009bf	      0xe800000000	                          call 0x40009c4	      1547	packed-backend.c	FUNCTION_38	CALL_6
0x40009c4	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1548	packed-backend.c	FUNCTION_38	CALL_7
0x40009c9	      0xe800000000	                          call 0x40009ce	      1548	packed-backend.c	FUNCTION_38	CALL_7
0x40009ce	            0x89d8	                            mov eax, ebx	      1549	packed-backend.c	FUNCTION_38
0x40009d0	            0xeb05	                           jmp 0x40009d7	      1549	packed-backend.c	FUNCTION_38
0x40009d2	      0xb8ffffffff	                     mov eax, 0xffffffff	      1526	packed-backend.c	FUNCTION_38	IF_2
0x40009d7	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1550	packed-backend.c	FUNCTION_38
0x40009dc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1550	packed-backend.c	FUNCTION_38
0x40009e5	            0x7405	                            je 0x40009ec	      1550	packed-backend.c	FUNCTION_38
0x40009e7	      0xe800000000	                          call 0x40009ec	      1550	packed-backend.c	FUNCTION_38
0x40009ec	        0x4883c438	                           add rsp, 0x38	      1550	packed-backend.c	FUNCTION_38
0x40009f0	              0x5b	                                 pop rbx	      1550	packed-backend.c	FUNCTION_38
0x40009f1	              0x5d	                                 pop rbp	      1550	packed-backend.c	FUNCTION_38
0x40009f2	            0x415c	                                 pop r12	      1550	packed-backend.c	FUNCTION_38
0x40009f4	            0x415d	                                 pop r13	      1550	packed-backend.c	FUNCTION_38
0x40009f6	            0x415e	                                 pop r14	      1550	packed-backend.c	FUNCTION_38
0x40009f8	            0x415f	                                 pop r15	      1550	packed-backend.c	FUNCTION_38
0x40009fa	              0xc3	                                     ret	      1550	packed-backend.c	FUNCTION_38
packed_create_symref	FOR,0:CALL,1:DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:functions,0	4
0x40002b7	        0x4883ec08	                              sub rsp, 8	      1565	packed-backend.c	FUNCTION_40
0x40002bb	      0xbf00000000	                              mov edi, 0	      1566	packed-backend.c	FUNCTION_40	CALL_1
0x40002c0	      0xb800000000	                              mov eax, 0	      1566	packed-backend.c	FUNCTION_40	CALL_1
0x40002c5	      0xe800000000	          call sym.clear_snapshot_buffer	      1566	packed-backend.c	FUNCTION_40	CALL_1
packed_read_raw_ref	FOR,0:CALL,5:DO,0:SWITCH,0:ELSE,0:IF,2:WHILE,0:functions,0	44
0x4001030	            0x4156	                                push r14	       728	packed-backend.c	FUNCTION_20
0x4001032	            0x4155	                                push r13	       728	packed-backend.c	FUNCTION_20
0x4001034	            0x4154	                                push r12	       728	packed-backend.c	FUNCTION_20
0x4001036	              0x55	                                push rbp	       728	packed-backend.c	FUNCTION_20
0x4001037	              0x53	                                push rbx	       728	packed-backend.c	FUNCTION_20
0x4001038	          0x4889f3	                            mov rbx, rsi	       728	packed-backend.c	FUNCTION_20
0x400103b	          0x4989d6	                            mov r14, rdx	       728	packed-backend.c	FUNCTION_20
0x400103e	          0x4c89c5	                             mov rbp, r8	       728	packed-backend.c	FUNCTION_20
0x4001041	      0xba00000000	                              mov edx, 0	       729	packed-backend.c	FUNCTION_20
0x4001046	      0xbe01000000	                              mov esi, 1	       729	packed-backend.c	FUNCTION_20
0x400104b	      0xe8aef1ffff	                call sym.packed_downcast	       729	packed-backend.c	FUNCTION_20
0x4001050	          0x4989c4	                            mov r12, rax	       729	packed-backend.c	FUNCTION_20
0x4001053	          0x4889c7	                            mov rdi, rax	       731	packed-backend.c	FUNCTION_20	CALL_2
0x4001056	      0xe8fcf9ffff	                   call sym.get_snapshot	       731	packed-backend.c	FUNCTION_20	CALL_2
0x400105b	          0x4989c5	                            mov r13, rax	       731	packed-backend.c	FUNCTION_20	CALL_2
0x400105e	    0xc74500000000	                      mov dword [rbp], 0	       734	packed-backend.c	FUNCTION_20
0x4001065	      0xba01000000	                              mov edx, 1	       736	packed-backend.c	FUNCTION_20	CALL_3
0x400106a	          0x4889de	                            mov rsi, rbx	       736	packed-backend.c	FUNCTION_20	CALL_3
0x400106d	          0x4889c7	                            mov rdi, rax	       736	packed-backend.c	FUNCTION_20	CALL_3
0x4001070	      0xe826f0ffff	        call sym.find_reference_location	       736	packed-backend.c	FUNCTION_20	CALL_3
0x4001075	          0x4885c0	                           test rax, rax	       738	packed-backend.c	FUNCTION_20	IF_1
0x4001078	            0x7512	                           jne 0x400108c	       738	packed-backend.c	FUNCTION_20	IF_1
0x400107a	      0xe800000000	                          call 0x400107f	       740	packed-backend.c	FUNCTION_20	IF_1
0x400107f	    0xc70002000000	                      mov dword [rax], 2	       740	packed-backend.c	FUNCTION_20	IF_1
0x4001085	      0xb8ffffffff	                     mov eax, 0xffffffff	       741	packed-backend.c	FUNCTION_20	IF_1
0x400108a	            0xeb2d	                           jmp 0x40010b9	       741	packed-backend.c	FUNCTION_20	IF_1
0x400108c	          0x4889c3	                            mov rbx, rax	       741	packed-backend.c	FUNCTION_20	IF_1
0x400108f	          0x4c89f6	                            mov rsi, r14	       744	packed-backend.c	FUNCTION_20	IF_2	CALL_4
0x4001092	          0x4889c7	                            mov rdi, rax	       744	packed-backend.c	FUNCTION_20	IF_2	CALL_4
0x4001095	      0xe800000000	                          call 0x400109a	       744	packed-backend.c	FUNCTION_20	IF_2	CALL_4
0x400109a	            0x85c0	                           test eax, eax	       744	packed-backend.c	FUNCTION_20	IF_2	CALL_4
0x400109c	            0x7414	                            je 0x40010b2	       744	packed-backend.c	FUNCTION_20	IF_2	CALL_4
0x400109e	        0x498b5520	            mov rdx, qword [r13 + 0x20] 	       745	packed-backend.c	FUNCTION_20	CALL_5
0x40010a2	          0x4829da	                            sub rdx, rbx	       745	packed-backend.c	FUNCTION_20	CALL_5
0x40010a5	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	       745	packed-backend.c	FUNCTION_20	CALL_5
0x40010aa	          0x4889de	                            mov rsi, rbx	       745	packed-backend.c	FUNCTION_20	CALL_5
0x40010ad	      0xe8e6f2ffff	               call sym.die_invalid_line	       745	packed-backend.c	FUNCTION_20	CALL_5
0x40010b2	    0xc74500020000	                      mov dword [rbp], 2	       747	packed-backend.c	FUNCTION_20
0x40010b9	              0x5b	                                 pop rbx	       749	packed-backend.c	FUNCTION_20
0x40010ba	              0x5d	                                 pop rbp	       749	packed-backend.c	FUNCTION_20
0x40010bb	            0x415c	                                 pop r12	       749	packed-backend.c	FUNCTION_20
0x40010bd	            0x415d	                                 pop r13	       749	packed-backend.c	FUNCTION_20
0x40010bf	            0x415e	                                 pop r14	       749	packed-backend.c	FUNCTION_20
0x40010c1	              0xc3	                                     ret	       749	packed-backend.c	FUNCTION_20
packed_transaction_cleanup	FOR,0:CALL,6:DO,0:SWITCH,0:ELSE,0:IF,3:WHILE,0:functions,0	40
0x40012c5	            0x4154	                                push r12	      1374	packed-backend.c	FUNCTION_33
0x40012c7	              0x55	                                push rbp	      1374	packed-backend.c	FUNCTION_33
0x40012c8	              0x53	                                push rbx	      1374	packed-backend.c	FUNCTION_33
0x40012c9	          0x4889f5	                            mov rbp, rsi	      1374	packed-backend.c	FUNCTION_33
0x40012cc	        0x488b5e28	            mov rbx, qword [rsi + 0x28] 	      1375	packed-backend.c	FUNCTION_33
0x40012d0	          0x4885db	                           test rbx, rbx	      1377	packed-backend.c	FUNCTION_33	IF_1
0x40012d3	            0x7448	                            je 0x400131d	      1377	packed-backend.c	FUNCTION_33	IF_1
0x40012d5	          0x4989fc	                            mov r12, rdi	      1377	packed-backend.c	FUNCTION_33	IF_1
0x40012d8	        0x488d7b08	                      lea rdi, [rbx + 8]	      1378	packed-backend.c	FUNCTION_33	IF_1	CALL_1
0x40012dc	      0xbe00000000	                              mov esi, 0	      1378	packed-backend.c	FUNCTION_33	IF_1	CALL_1
0x40012e1	      0xe800000000	                          call 0x40012e6	      1378	packed-backend.c	FUNCTION_33	IF_1	CALL_1
0x40012e6	      0x498b442428	            mov rax, qword [r12 + 0x28] 	      1380	packed-backend.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x40012eb	          0x4885c0	                           test rax, rax	       202	tempfile.h	FUNCTION_67
0x40012ee	            0x7407	                            je 0x40012f7	       202	tempfile.h	FUNCTION_67
0x40012f0	          0x8b4010	            mov eax, dword [rax + 0x10] 	       202	tempfile.h	FUNCTION_67
0x40012f3	            0x85c0	                           test eax, eax	       202	tempfile.h	FUNCTION_67
0x40012f5	            0x752f	                           jne 0x4001326	       202	tempfile.h	FUNCTION_67
0x40012f7	          0x833b00	                      cmp dword [rbx], 0	      1383	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_4
0x40012fa	            0x7411	                            je 0x400130d	      1383	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_4
0x40012fc	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       183	lockfile.h	FUNCTION_51	CALL_1
0x4001301	          0x4885c0	                           test rax, rax	       202	tempfile.h	FUNCTION_67
0x4001304	            0x7407	                            je 0x400130d	       202	tempfile.h	FUNCTION_67
0x4001306	          0x8b4010	            mov eax, dword [rax + 0x10] 	       202	tempfile.h	FUNCTION_67
0x4001309	            0x85c0	                           test eax, eax	       202	tempfile.h	FUNCTION_67
0x400130b	            0x7525	                           jne 0x4001332	       202	tempfile.h	FUNCTION_67
0x400130d	          0x4889df	                            mov rdi, rbx	      1388	packed-backend.c	FUNCTION_33	IF_1	CALL_6
0x4001310	      0xe800000000	                          call 0x4001315	      1388	packed-backend.c	FUNCTION_33	IF_1	CALL_6
0x4001315	    0x48c745280000	               mov qword [rbp + 0x28], 0	      1389	packed-backend.c	FUNCTION_33	IF_1
0x400131d	    0xc74520020000	               mov dword [rbp + 0x20], 2	      1392	packed-backend.c	FUNCTION_33
0x4001324	            0xeb16	                           jmp 0x400133c	      1393	packed-backend.c	FUNCTION_33
0x4001326	      0x498d7c2428	                   lea rdi, [r12 + 0x28]	      1381	packed-backend.c	FUNCTION_33	IF_1	CALL_3
0x400132b	      0xe800000000	                          call 0x4001330	      1381	packed-backend.c	FUNCTION_33	IF_1	CALL_3
0x4001330	            0xebc5	                           jmp 0x40012f7	      1381	packed-backend.c	FUNCTION_33	IF_1	CALL_3
0x4001332	          0x4c89e7	                            mov rdi, r12	      1384	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_5
0x4001335	      0xe800000000	                          call 0x400133a	      1384	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_5
0x400133a	            0xebd1	                           jmp 0x400130d	      1384	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_5
0x400133c	              0x5b	                                 pop rbx	      1393	packed-backend.c	FUNCTION_33
0x400133d	              0x5d	                                 pop rbp	      1393	packed-backend.c	FUNCTION_33
0x400133e	            0x415c	                                 pop r12	      1393	packed-backend.c	FUNCTION_33
0x4001340	              0xc3	                                     ret	      1393	packed-backend.c	FUNCTION_33
packed_ref_iterator_begin	FOR,0:CALL,9:DO,0:SWITCH,0:ELSE,1:IF,4:WHILE,0:functions,0	69
0x40010c2	            0x4156	                                push r14	       915	packed-backend.c	FUNCTION_25
0x40010c4	            0x4155	                                push r13	       915	packed-backend.c	FUNCTION_25
0x40010c6	            0x4154	                                push r12	       915	packed-backend.c	FUNCTION_25
0x40010c8	              0x55	                                push rbp	       915	packed-backend.c	FUNCTION_25
0x40010c9	              0x53	                                push rbx	       915	packed-backend.c	FUNCTION_25
0x40010ca	          0x4989f4	                            mov r12, rsi	       915	packed-backend.c	FUNCTION_25
0x40010cd	          0x4189d5	                           mov r13d, edx	       915	packed-backend.c	FUNCTION_25
0x40010d0	            0x89d0	                            mov eax, edx	       923	packed-backend.c	FUNCTION_25	IF_1
0x40010d2	          0x83e001	                              and eax, 1	       923	packed-backend.c	FUNCTION_25	IF_1
0x40010d5	          0x83f801	                              cmp eax, 1	       924	packed-backend.c	FUNCTION_25	IF_1
0x40010d8	            0x19f6	                            sbb esi, esi	       924	packed-backend.c	FUNCTION_25	IF_1
0x40010da	          0x83e604	                              and esi, 4	       924	packed-backend.c	FUNCTION_25	IF_1
0x40010dd	          0x83c601	                              add esi, 1	       924	packed-backend.c	FUNCTION_25	IF_1
0x40010e0	      0xba00000000	                              mov edx, 0	       925	packed-backend.c	FUNCTION_25	CALL_1
0x40010e5	      0xe814f1ffff	                call sym.packed_downcast	       925	packed-backend.c	FUNCTION_25	CALL_1
0x40010ea	          0x4889c7	                            mov rdi, rax	       932	packed-backend.c	FUNCTION_25	CALL_2
0x40010ed	      0xe865f9ffff	                   call sym.get_snapshot	       932	packed-backend.c	FUNCTION_25	CALL_2
0x40010f2	          0x4889c5	                            mov rbp, rax	       932	packed-backend.c	FUNCTION_25	CALL_2
0x40010f5	          0x4d85e4	                           test r12, r12	       934	packed-backend.c	FUNCTION_25	IF_2
0x40010f8	            0x741c	                            je 0x4001116	       934	packed-backend.c	FUNCTION_25	IF_2
0x40010fa	      0x41803c2400	                       cmp byte [r12], 0	       934	packed-backend.c	FUNCTION_25	IF_2
0x40010ff	            0x7415	                            je 0x4001116	       934	packed-backend.c	FUNCTION_25	IF_2
0x4001101	      0xba00000000	                              mov edx, 0	       935	packed-backend.c	FUNCTION_25	CALL_3
0x4001106	          0x4c89e6	                            mov rsi, r12	       935	packed-backend.c	FUNCTION_25	CALL_3
0x4001109	          0x4889c7	                            mov rdi, rax	       935	packed-backend.c	FUNCTION_25	CALL_3
0x400110c	      0xe88aefffff	        call sym.find_reference_location	       935	packed-backend.c	FUNCTION_25	CALL_3
0x4001111	          0x4989c6	                            mov r14, rax	       935	packed-backend.c	FUNCTION_25	CALL_3
0x4001114	            0xeb04	                           jmp 0x400111a	       935	packed-backend.c	FUNCTION_25	CALL_3
0x4001116	        0x4c8b7518	            mov r14, qword [rbp + 0x18] 	       937	packed-backend.c	FUNCTION_25	ELSE_1
0x400111a	        0x4c3b7520	            cmp r14, qword [rbp + 0x20] 	       939	packed-backend.c	FUNCTION_25	IF_3
0x400111e	            0x7507	                           jne 0x4001127	       939	packed-backend.c	FUNCTION_25	IF_3
0x4001120	      0xe800000000	                          call 0x4001125	       940	packed-backend.c	FUNCTION_25	CALL_4
0x4001125	            0xeb79	                           jmp 0x40011a0	       940	packed-backend.c	FUNCTION_25	CALL_4
0x4001127	      0xbe88000000	                           mov esi, 0x88	       942	packed-backend.c	FUNCTION_25	CALL_5
0x400112c	      0xbf01000000	                              mov edi, 1	       942	packed-backend.c	FUNCTION_25	CALL_5
0x4001131	      0xe800000000	                          call 0x4001136	       942	packed-backend.c	FUNCTION_25	CALL_5
0x4001136	          0x4889c3	                            mov rbx, rax	       942	packed-backend.c	FUNCTION_25	CALL_5
0x4001139	      0xba01000000	                              mov edx, 1	       944	packed-backend.c	FUNCTION_25	CALL_6
0x400113e	      0xbe00000000	                              mov esi, 0	       944	packed-backend.c	FUNCTION_25	CALL_6
0x4001143	          0x4889c7	                            mov rdi, rax	       944	packed-backend.c	FUNCTION_25	CALL_6
0x4001146	      0xe800000000	                          call 0x400114b	       944	packed-backend.c	FUNCTION_25	CALL_6
0x400114b	        0x48896b28	             mov qword [rbx + 0x28], rbp	       946	packed-backend.c	FUNCTION_25
0x400114f	        0x83452c01	               add dword [rbp + 0x2c], 1	       159	packed-backend.c	FUNCTION_1
0x4001153	        0x4c897330	             mov qword [rbx + 0x30], r14	       949	packed-backend.c	FUNCTION_25
0x4001157	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       950	packed-backend.c	FUNCTION_25
0x400115b	        0x48894338	             mov qword [rbx + 0x38], rax	       950	packed-backend.c	FUNCTION_25
0x400115f	        0x488d7b68	                   lea rdi, [rbx + 0x68]	       951	packed-backend.c	FUNCTION_25	CALL_8
0x4001163	      0xbe00000000	                              mov esi, 0	       951	packed-backend.c	FUNCTION_25	CALL_8
0x4001168	      0xe800000000	                          call 0x400116d	       951	packed-backend.c	FUNCTION_25	CALL_8
0x400116d	        0x488d4340	                   lea rax, [rbx + 0x40]	       953	packed-backend.c	FUNCTION_25
0x4001171	        0x48894318	             mov qword [rbx + 0x18], rax	       953	packed-backend.c	FUNCTION_25
0x4001175	    0x4489ab800000	            mov dword [rbx + 0x80], r13d	       955	packed-backend.c	FUNCTION_25
0x400117c	          0x4d85e4	                           test r12, r12	       957	packed-backend.c	FUNCTION_25	IF_4
0x400117f	            0x741c	                            je 0x400119d	       957	packed-backend.c	FUNCTION_25	IF_4
0x4001181	          0x4889d8	                            mov rax, rbx	       943	packed-backend.c	FUNCTION_25
0x4001184	      0x41803c2400	                       cmp byte [r12], 0	       957	packed-backend.c	FUNCTION_25	IF_4
0x4001189	            0x7415	                            je 0x40011a0	       957	packed-backend.c	FUNCTION_25	IF_4
0x400118b	      0xba00000000	                              mov edx, 0	       959	packed-backend.c	FUNCTION_25	CALL_9
0x4001190	          0x4c89e6	                            mov rsi, r12	       959	packed-backend.c	FUNCTION_25	CALL_9
0x4001193	          0x4889df	                            mov rdi, rbx	       959	packed-backend.c	FUNCTION_25	CALL_9
0x4001196	      0xe800000000	                          call 0x400119b	       959	packed-backend.c	FUNCTION_25	CALL_9
0x400119b	            0xeb03	                           jmp 0x40011a0	       959	packed-backend.c	FUNCTION_25	CALL_9
0x400119d	          0x4889d8	                            mov rax, rbx	       943	packed-backend.c	FUNCTION_25
0x40011a0	              0x5b	                                 pop rbx	       962	packed-backend.c	FUNCTION_25
0x40011a1	              0x5d	                                 pop rbp	       962	packed-backend.c	FUNCTION_25
0x40011a2	            0x415c	                                 pop r12	       962	packed-backend.c	FUNCTION_25
0x40011a4	            0x415d	                                 pop r13	       962	packed-backend.c	FUNCTION_25
0x40011a6	            0x415e	                                 pop r14	       962	packed-backend.c	FUNCTION_25
0x40011a8	              0xc3	                                     ret	       962	packed-backend.c	FUNCTION_25
packed_refs_unlock	FOR,0:CALL,4:DO,0:SWITCH,0:ELSE,0:IF,1:WHILE,0:functions,0	18
0x4001283	        0x4883ec08	                              sub rsp, 8	      1032	packed-backend.c	FUNCTION_28
0x4001287	      0xba00000000	                              mov edx, 0	      1033	packed-backend.c	FUNCTION_28	CALL_1
0x400128c	      0xbe03000000	                              mov esi, 3	      1033	packed-backend.c	FUNCTION_28	CALL_1
0x4001291	      0xe868efffff	                call sym.packed_downcast	      1033	packed-backend.c	FUNCTION_28	CALL_1
0x4001296	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       183	lockfile.h	FUNCTION_51	CALL_1
0x400129a	          0x4885d2	                           test rdx, rdx	       202	tempfile.h	FUNCTION_67
0x400129d	            0x7412	                            je 0x40012b1	       202	tempfile.h	FUNCTION_67
0x400129f	          0x8b5210	            mov edx, dword [rdx + 0x10] 	       202	tempfile.h	FUNCTION_67
0x40012a2	            0x85d2	                           test edx, edx	       202	tempfile.h	FUNCTION_67
0x40012a4	            0x740b	                            je 0x40012b1	       202	tempfile.h	FUNCTION_67
0x40012a6	        0x488d7820	                   lea rdi, [rax + 0x20]	       304	lockfile.h	FUNCTION_59	CALL_1
0x40012aa	      0xe800000000	                          call 0x40012af	       304	lockfile.h	FUNCTION_59	CALL_1
0x40012af	            0xeb0f	                           jmp 0x40012c0	      1041	packed-backend.c	FUNCTION_28
0x40012b1	      0xbf00000000	                              mov edi, 0	      1039	packed-backend.c	FUNCTION_28	CALL_3
0x40012b6	      0xb800000000	                              mov eax, 0	      1039	packed-backend.c	FUNCTION_28	CALL_3
0x40012bb	      0xe800000000	                          call 0x40012c0	      1039	packed-backend.c	FUNCTION_28	CALL_3
0x40012c0	        0x4883c408	                              add rsp, 8	      1041	packed-backend.c	FUNCTION_28
0x40012c4	              0xc3	                                     ret	      1041	packed-backend.c	FUNCTION_28
packed_pack_refs	FOR,0:CALL,0:DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:functions,0	2
0x400018b	      0xb800000000	                              mov eax, 0	      1560	packed-backend.c	FUNCTION_39
0x4000190	              0xc3	                                     ret	      1560	packed-backend.c	FUNCTION_39
packed_copy_ref	FOR,0:CALL,1:DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:functions,0	4
0x4000291	        0x4883ec08	                              sub rsp, 8	      1579	packed-backend.c	FUNCTION_42
0x4000295	      0xbf00000000	                              mov edi, 0	      1580	packed-backend.c	FUNCTION_42	CALL_1
0x400029a	      0xb800000000	                              mov eax, 0	      1580	packed-backend.c	FUNCTION_42	CALL_1
0x400029f	      0xe800000000	              call sym.packed_rename_ref	      1580	packed-backend.c	FUNCTION_42	CALL_1
cmp_packed_ref_records	FOR,0:CALL,0:DO,0:SWITCH,0:ELSE,1:IF,3:WHILE,1:functions,0	33
0x4000040	          0x488b07	                    mov rax, qword [rdi]	       277	packed-backend.c	FUNCTION_9
0x4000043	        0x488d4829	                   lea rcx, [rax + 0x29]	       277	packed-backend.c	FUNCTION_9
0x4000047	          0x488b36	                    mov rsi, qword [rsi]	       278	packed-backend.c	FUNCTION_9
0x400004a	        0x488d5629	                   lea rdx, [rsi + 0x29]	       278	packed-backend.c	FUNCTION_9
0x400004e	         0xfb64029	           movzx eax, byte [rax + 0x29] 	       281	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x4000052	            0x3c0a	                             cmp al, 0xa	       281	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x4000054	            0x740b	                            je 0x4000061	       281	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x4000056	         0xfb67629	           movzx esi, byte [rsi + 0x29] 	       283	packed-backend.c	FUNCTION_9	WHILE_1	IF_2
0x400005a	          0x4038f0	                             cmp al, sil	       283	packed-backend.c	FUNCTION_9	WHILE_1	IF_2
0x400005d	            0x7425	                            je 0x4000084	       283	packed-backend.c	FUNCTION_9	WHILE_1	IF_2
0x400005f	            0xeb14	                           jmp 0x4000075	       283	packed-backend.c	FUNCTION_9	WHILE_1	IF_2
0x4000061	          0x803a0a	                     cmp byte [rdx], 0xa	       282	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x4000064	           0xf95c0	                                setne al	       282	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x4000067	           0xfb6c0	                           movzx eax, al	       282	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x400006a	            0xf7d8	                                 neg eax	       282	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x400006c	              0xc3	                                     ret	       282	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x400006d	           0xfb632	                   movzx esi, byte [rdx]	       283	packed-backend.c	FUNCTION_9	WHILE_1	IF_2
0x4000070	          0x4038f0	                             cmp al, sil	       283	packed-backend.c	FUNCTION_9	WHILE_1	IF_2
0x4000073	            0x740f	                            je 0x4000084	       283	packed-backend.c	FUNCTION_9	WHILE_1	IF_2
0x4000075	        0x4080fe0a	                            cmp sil, 0xa	       284	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	IF_3
0x4000079	            0x741a	                            je 0x4000095	       284	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	IF_3
0x400007b	          0x4038f0	                             cmp al, sil	       287	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	ELSE_1
0x400007e	            0x19c0	                            sbb eax, eax	       287	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	ELSE_1
0x4000080	          0x83c801	                               or eax, 1	       287	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	ELSE_1
0x4000083	              0xc3	                                     ret	       287	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	ELSE_1
0x4000084	        0x4883c101	                              add rcx, 1	       289	packed-backend.c	FUNCTION_9	WHILE_1
0x4000088	        0x4883c201	                              add rdx, 1	       290	packed-backend.c	FUNCTION_9	WHILE_1
0x400008c	           0xfb601	                   movzx eax, byte [rcx]	       281	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x400008f	            0x3c0a	                             cmp al, 0xa	       281	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x4000091	            0x75da	                           jne 0x400006d	       281	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x4000093	            0xebcc	                           jmp 0x4000061	       281	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x4000095	      0xb801000000	                              mov eax, 1	       285	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	IF_3
0x400009a	              0xc3	                                     ret	       292	packed-backend.c	FUNCTION_9
packed_downcast	FOR,0:CALL,2:DO,0:SWITCH,0:ELSE,0:IF,2:WHILE,0:functions,0	22
0x40001fe	        0x4883ec08	                              sub rsp, 8	       220	packed-backend.c	FUNCTION_5
0x4000202	          0x4989d0	                             mov r8, rdx	       220	packed-backend.c	FUNCTION_5
0x4000205	          0x488b07	                    mov rax, qword [rdi]	       223	packed-backend.c	FUNCTION_5	IF_1
0x4000208	    0x483d00000000	                              cmp rax, 0	       223	packed-backend.c	FUNCTION_5	IF_1
0x400020e	            0x7413	                            je 0x4000223	       223	packed-backend.c	FUNCTION_5	IF_1
0x4000210	        0x488b7008	                mov rsi, qword [rax + 8]	       224	packed-backend.c	FUNCTION_5	IF_1	CALL_1
0x4000214	      0xbf00000000	                              mov edi, 0	       224	packed-backend.c	FUNCTION_5	IF_1	CALL_1
0x4000219	      0xb800000000	                              mov eax, 0	       224	packed-backend.c	FUNCTION_5	IF_1	CALL_1
0x400021e	      0xe800000000	                          call 0x4000223	       224	packed-backend.c	FUNCTION_5	IF_1	CALL_1
0x4000223	          0x8b4f08	                mov ecx, dword [rdi + 8]	       229	packed-backend.c	FUNCTION_5	IF_2
0x4000226	            0x89c8	                            mov eax, ecx	       229	packed-backend.c	FUNCTION_5	IF_2
0x4000228	            0x21f0	                            and eax, esi	       229	packed-backend.c	FUNCTION_5	IF_2
0x400022a	            0x39c6	                            cmp esi, eax	       229	packed-backend.c	FUNCTION_5	IF_2
0x400022c	            0x7414	                            je 0x4000242	       229	packed-backend.c	FUNCTION_5	IF_2
0x400022e	            0x89f2	                            mov edx, esi	       230	packed-backend.c	FUNCTION_5	IF_2	CALL_2
0x4000230	          0x4c89c6	                             mov rsi, r8	       230	packed-backend.c	FUNCTION_5	IF_2	CALL_2
0x4000233	      0xbf00000000	                              mov edi, 0	       230	packed-backend.c	FUNCTION_5	IF_2	CALL_2
0x4000238	      0xb800000000	                              mov eax, 0	       230	packed-backend.c	FUNCTION_5	IF_2	CALL_2
0x400023d	      0xe800000000	                          call 0x4000242	       230	packed-backend.c	FUNCTION_5	IF_2	CALL_2
0x4000242	          0x4889f8	                            mov rax, rdi	       234	packed-backend.c	FUNCTION_5
0x4000245	        0x4883c408	                              add rsp, 8	       234	packed-backend.c	FUNCTION_5
0x4000249	              0xc3	                                     ret	       234	packed-backend.c	FUNCTION_5
die_unterminated_line	FOR,0:CALL,2:DO,0:SWITCH,0:ELSE,1:IF,1:WHILE,0:functions,0	13
0x400024a	        0x4883ec08	                              sub rsp, 8	       248	packed-backend.c	FUNCTION_7
0x400024e	        0x4883fa4f	                           cmp rdx, 0x4f	       249	packed-backend.c	FUNCTION_7	IF_1
0x4000252	            0x7715	                            ja 0x4000269	       249	packed-backend.c	FUNCTION_7	IF_1
0x4000254	          0x4889f1	                            mov rcx, rsi	       250	packed-backend.c	FUNCTION_7	CALL_1
0x4000257	          0x4889fe	                            mov rsi, rdi	       250	packed-backend.c	FUNCTION_7	CALL_1
0x400025a	      0xbf00000000	                              mov edi, 0	       250	packed-backend.c	FUNCTION_7	CALL_1
0x400025f	      0xb800000000	                              mov eax, 0	       250	packed-backend.c	FUNCTION_7	CALL_1
0x4000264	      0xe800000000	                          call 0x4000269	       250	packed-backend.c	FUNCTION_7	CALL_1
0x4000269	          0x4889f2	                            mov rdx, rsi	       252	packed-backend.c	FUNCTION_7	CALL_2
0x400026c	          0x4889fe	                            mov rsi, rdi	       252	packed-backend.c	FUNCTION_7	CALL_2
0x400026f	      0xbf00000000	                              mov edi, 0	       252	packed-backend.c	FUNCTION_7	CALL_2
0x4000274	      0xb800000000	                              mov eax, 0	       252	packed-backend.c	FUNCTION_7	CALL_2
0x4000279	      0xe800000000	           call sym.packed_create_reflog	       252	packed-backend.c	FUNCTION_7	CALL_2
packed_ref_iterator_abort	FOR,0:CALL,3:DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:functions,0	11
0x4000409	              0x53	                                push rbx	       895	packed-backend.c	FUNCTION_24
0x400040a	          0x4889fb	                            mov rbx, rdi	       895	packed-backend.c	FUNCTION_24
0x400040d	        0x488d7f68	                   lea rdi, [rdi + 0x68]	       900	packed-backend.c	FUNCTION_24	CALL_1
0x4000411	      0xe800000000	                          call 0x4000416	       900	packed-backend.c	FUNCTION_24	CALL_1
0x4000416	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       901	packed-backend.c	FUNCTION_24	CALL_2
0x400041a	      0xe80bffffff	               call sym.release_snapshot	       901	packed-backend.c	FUNCTION_24	CALL_2
0x400041f	          0x4889df	                            mov rdi, rbx	       902	packed-backend.c	FUNCTION_24	CALL_3
0x4000422	      0xe800000000	                          call 0x4000427	       902	packed-backend.c	FUNCTION_24	CALL_3
0x4000427	      0xb8ffffffff	                     mov eax, 0xffffffff	       904	packed-backend.c	FUNCTION_24
0x400042c	              0x5b	                                 pop rbx	       904	packed-backend.c	FUNCTION_24
0x400042d	              0xc3	                                     ret	       904	packed-backend.c	FUNCTION_24
write_packed_entry	FOR,0:CALL,2:DO,0:SWITCH,0:ELSE,0:IF,1:WHILE,0:functions,0	35
0x400078c	            0x4154	                                push r12	       973	packed-backend.c	FUNCTION_26
0x400078e	              0x55	                                push rbp	       973	packed-backend.c	FUNCTION_26
0x400078f	              0x53	                                push rbx	       973	packed-backend.c	FUNCTION_26
0x4000790	          0x4889fb	                            mov rbx, rdi	       973	packed-backend.c	FUNCTION_26
0x4000793	          0x4989f4	                            mov r12, rsi	       973	packed-backend.c	FUNCTION_26
0x4000796	          0x4889cd	                            mov rbp, rcx	       973	packed-backend.c	FUNCTION_26
0x4000799	          0x4889d7	                            mov rdi, rdx	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_1
0x400079c	      0xe800000000	                          call 0x40007a1	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_1
0x40007a1	          0x4d89e0	                             mov r8, r12	        97	stdio2.h	CALL_385
0x40007a4	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_385
0x40007a7	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_385
0x40007ac	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_385
0x40007b1	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_385
0x40007b4	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_385
0x40007b9	      0xe800000000	                          call 0x40007be	        97	stdio2.h	CALL_385
0x40007be	            0x85c0	                           test eax, eax	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_1
0x40007c0	            0x7831	                            js 0x40007f3	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_1
0x40007c2	      0xb800000000	                              mov eax, 0	       978	packed-backend.c	FUNCTION_26
0x40007c7	          0x4885ed	                           test rbp, rbp	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_1
0x40007ca	            0x742c	                            je 0x40007f8	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_1
0x40007cc	          0x4889ef	                            mov rdi, rbp	       975	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x40007cf	      0xe800000000	                          call 0x40007d4	       975	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x40007d4	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_385
0x40007d7	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_385
0x40007dc	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_385
0x40007e1	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_385
0x40007e4	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_385
0x40007e9	      0xe800000000	                          call 0x40007ee	        97	stdio2.h	CALL_385
0x40007ee	          0xc1f81f	                           sar eax, 0x1f	       975	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x40007f1	            0xeb05	                           jmp 0x40007f8	       975	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x40007f3	      0xb8ffffffff	                     mov eax, 0xffffffff	       976	packed-backend.c	FUNCTION_26	IF_1
0x40007f8	              0x5b	                                 pop rbx	       979	packed-backend.c	FUNCTION_26
0x40007f9	              0x5d	                                 pop rbp	       979	packed-backend.c	FUNCTION_26
0x40007fa	            0x415c	                                 pop r12	       979	packed-backend.c	FUNCTION_26
0x40007fc	              0xc3	                                     ret	       979	packed-backend.c	FUNCTION_26
find_reference_location	FOR,0:CALL,3:DO,0:SWITCH,0:ELSE,3:IF,3:WHILE,1:functions,0	79
0x400009b	              0x53	                                push rbx	       537	packed-backend.c	FUNCTION_16
0x400009c	        0x488b4f18	            mov rcx, qword [rdi + 0x18] 	       552	packed-backend.c	FUNCTION_16
0x40000a0	        0x488b5f20	            mov rbx, qword [rdi + 0x20] 	       558	packed-backend.c	FUNCTION_16
0x40000a4	          0x4839d9	                            cmp rcx, rbx	       560	packed-backend.c	FUNCTION_16	WHILE_1
0x40000a7	            0x750b	                           jne 0x40000b4	       560	packed-backend.c	FUNCTION_16	WHILE_1
0x40000a9	          0x4889d9	                            mov rcx, rbx	       552	packed-backend.c	FUNCTION_16
0x40000ac	      0xe9c7000000	                           jmp 0x4000178	       552	packed-backend.c	FUNCTION_16
0x40000b1	          0x4889c3	                            mov rbx, rax	       426	packed-backend.c	FUNCTION_13	WHILE_1
0x40000b4	          0x4889d8	                            mov rax, rbx	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x40000b7	          0x4829c8	                            sub rax, rcx	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x40000ba	          0x4989c3	                            mov r11, rax	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x40000bd	        0x49c1eb3f	                           shr r11, 0x3f	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x40000c1	          0x4c01d8	                            add rax, r11	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x40000c4	          0x48d1f8	                              sar rax, 1	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x40000c7	        0x4c8d1c01	                    lea r11, [rcx + rax]	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x40000cb	          0x4c89d8	                            mov rax, r11	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x40000ce	          0x4939cb	                            cmp r11, rcx	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x40000d1	            0x770b	                            ja 0x40000de	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x40000d3	            0xeb19	                           jmp 0x40000ee	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x40000d5	        0x4883e801	                              sub rax, 1	       416	packed-backend.c	FUNCTION_12	WHILE_1
0x40000d9	          0x4839c8	                            cmp rax, rcx	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x40000dc	            0x740d	                            je 0x40000eb	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x40000de	        0x8078ff0a	                 cmp byte [rax - 1], 0xa	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x40000e2	            0x75f1	                           jne 0x40000d5	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x40000e4	          0x80385e	                    cmp byte [rax], 0x5e	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x40000e7	            0x74ec	                            je 0x40000d5	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x40000e9	            0xeb03	                           jmp 0x40000ee	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x40000eb	          0x4889c8	                            mov rax, rcx	       416	packed-backend.c	FUNCTION_12	WHILE_1
0x40000ee	        0x4c8d4829	                    lea r9, [rax + 0x29]	       300	packed-backend.c	FUNCTION_10
0x40000f2	         0xfb67829	           movzx edi, byte [rax + 0x29] 	       304	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x40000f6	        0x4080ff0a	                            cmp dil, 0xa	       304	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x40000fa	            0x7413	                            je 0x400010f	       304	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x40000fc	        0x440fb606	                   movzx r8d, byte [rsi]	       306	packed-backend.c	FUNCTION_10	WHILE_1	IF_2
0x4000100	          0x4584c0	                           test r8b, r8b	       306	packed-backend.c	FUNCTION_10	WHILE_1	IF_2
0x4000103	            0x746a	                            je 0x400016f	       306	packed-backend.c	FUNCTION_10	WHILE_1	IF_2
0x4000105	          0x4438c7	                            cmp dil, r8b	       308	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x4000108	            0x7528	                           jne 0x4000132	       308	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x400010a	          0x4989f2	                            mov r10, rsi	       308	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x400010d	            0xeb2a	                           jmp 0x4000139	       308	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x400010f	          0x4989f2	                            mov r10, rsi	       301	packed-backend.c	FUNCTION_10
0x4000112	        0x41803a00	                       cmp byte [r10], 0	       305	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x4000116	           0xf95c1	                                setne cl	       305	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x4000119	           0xfb6c9	                           movzx ecx, cl	       305	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x400011c	            0xf7d9	                                 neg ecx	       305	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x400011e	            0x85c9	                           test ecx, ecx	       567	packed-backend.c	FUNCTION_16	WHILE_1	IF_1
0x4000120	            0x782b	                            js 0x400014d	       567	packed-backend.c	FUNCTION_16	WHILE_1	IF_1
0x4000122	            0xeb5f	                           jmp 0x4000183	       567	packed-backend.c	FUNCTION_16	WHILE_1	IF_1
0x4000124	        0x450fb602	                   movzx r8d, byte [r10]	       306	packed-backend.c	FUNCTION_10	WHILE_1	IF_2
0x4000128	          0x4584c0	                           test r8b, r8b	       306	packed-backend.c	FUNCTION_10	WHILE_1	IF_2
0x400012b	            0x7442	                            je 0x400016f	       306	packed-backend.c	FUNCTION_10	WHILE_1	IF_2
0x400012d	          0x4438c7	                            cmp dil, r8b	       308	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x4000130	            0x7407	                            je 0x4000139	       308	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x4000132	          0x4438c7	                            cmp dil, r8b	       309	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x4000135	            0x7338	                           jae 0x400016f	       309	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x4000137	            0xeb14	                           jmp 0x400014d	       309	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x4000139	        0x4983c101	                               add r9, 1	       310	packed-backend.c	FUNCTION_10	WHILE_1
0x400013d	        0x4983c201	                              add r10, 1	       311	packed-backend.c	FUNCTION_10	WHILE_1
0x4000141	        0x410fb639	                    movzx edi, byte [r9]	       304	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x4000145	        0x4080ff0a	                            cmp dil, 0xa	       304	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x4000149	            0x75d9	                           jne 0x4000124	       304	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x400014b	            0xebc5	                           jmp 0x4000112	       304	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x400014d	          0x4c89d9	                            mov rcx, r11	       308	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x4000150	        0x4883c101	                              add rcx, 1	       426	packed-backend.c	FUNCTION_13	WHILE_1
0x4000154	          0x4839d9	                            cmp rcx, rbx	       426	packed-backend.c	FUNCTION_13	WHILE_1
0x4000157	            0x7313	                           jae 0x400016c	       426	packed-backend.c	FUNCTION_13	WHILE_1
0x4000159	        0x8079ff0a	                 cmp byte [rcx - 1], 0xa	       426	packed-backend.c	FUNCTION_13	WHILE_1
0x400015d	            0x75f1	                           jne 0x4000150	       426	packed-backend.c	FUNCTION_13	WHILE_1
0x400015f	          0x80395e	                    cmp byte [rcx], 0x5e	       426	packed-backend.c	FUNCTION_13	WHILE_1
0x4000162	            0x74ec	                            je 0x4000150	       426	packed-backend.c	FUNCTION_13	WHILE_1
0x4000164	          0x4889d8	                            mov rax, rbx	       426	packed-backend.c	FUNCTION_13	WHILE_1
0x4000167	      0xe945ffffff	                           jmp 0x40000b1	       426	packed-backend.c	FUNCTION_13	WHILE_1
0x400016c	          0x4889d8	                            mov rax, rbx	       426	packed-backend.c	FUNCTION_13	WHILE_1
0x400016f	          0x4839c8	                            cmp rax, rcx	       560	packed-backend.c	FUNCTION_16	WHILE_1
0x4000172	     0xf8539ffffff	                           jne 0x40000b1	       560	packed-backend.c	FUNCTION_16	WHILE_1
0x4000178	            0x85d2	                           test edx, edx	       576	packed-backend.c	FUNCTION_16	IF_3
0x400017a	      0xb800000000	                              mov eax, 0	       576	packed-backend.c	FUNCTION_16	IF_3
0x400017f	        0x480f44c1	                          cmove rax, rcx	       576	packed-backend.c	FUNCTION_16	IF_3
0x4000183	              0x5b	                                 pop rbx	       580	packed-backend.c	FUNCTION_16	ELSE_3
0x4000184	              0xc3	                                     ret	       580	packed-backend.c	FUNCTION_16	ELSE_3
packed_reflog_expire	FOR,0:CALL,0:DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:functions,0	2
0x40001a9	      0xb800000000	                              mov eax, 0	      1631	packed-backend.c	FUNCTION_49
0x40001ae	              0xc3	                                     ret	      1631	packed-backend.c	FUNCTION_49
packed_transaction_finish	FOR,0:CALL,8:DO,0:SWITCH,0:ELSE,0:IF,1:WHILE,0:functions,0	48
0x4001366	            0x4155	                                push r13	      1471	packed-backend.c	FUNCTION_36
0x4001368	            0x4154	                                push r12	      1471	packed-backend.c	FUNCTION_36
0x400136a	              0x55	                                push rbp	      1471	packed-backend.c	FUNCTION_36
0x400136b	              0x53	                                push rbx	      1471	packed-backend.c	FUNCTION_36
0x400136c	        0x4883ec08	                              sub rsp, 8	      1471	packed-backend.c	FUNCTION_36
0x4001370	          0x4989f4	                            mov r12, rsi	      1471	packed-backend.c	FUNCTION_36
0x4001373	          0x4989d5	                            mov r13, rdx	      1471	packed-backend.c	FUNCTION_36
0x4001376	      0xba00000000	                              mov edx, 0	      1472	packed-backend.c	FUNCTION_36	CALL_1
0x400137b	      0xbe07000000	                              mov esi, 7	      1472	packed-backend.c	FUNCTION_36	CALL_1
0x4001380	      0xe879eeffff	                call sym.packed_downcast	      1472	packed-backend.c	FUNCTION_36	CALL_1
0x4001385	          0x4889c3	                            mov rbx, rax	      1472	packed-backend.c	FUNCTION_36	CALL_1
0x4001388	        0x488b7818	            mov rdi, qword [rax + 0x18] 	       238	packed-backend.c	FUNCTION_6	IF_1
0x400138c	          0x4885ff	                           test rdi, rdi	       238	packed-backend.c	FUNCTION_6	IF_1
0x400138f	            0x740d	                            je 0x400139e	       238	packed-backend.c	FUNCTION_6	IF_1
0x4001391	    0x48c740180000	               mov qword [rax + 0x18], 0	       241	packed-backend.c	FUNCTION_6	IF_1
0x4001399	      0xe88cefffff	               call sym.release_snapshot	       242	packed-backend.c	FUNCTION_6	IF_1	CALL_1
0x400139e	        0x488d7b20	                   lea rdi, [rbx + 0x20]	      1481	packed-backend.c	FUNCTION_36	CALL_3
0x40013a2	      0xe800000000	                          call 0x40013a7	      1481	packed-backend.c	FUNCTION_36	CALL_3
0x40013a7	          0x4889c5	                            mov rbp, rax	      1481	packed-backend.c	FUNCTION_36	CALL_3
0x40013aa	        0x488d7b28	                   lea rdi, [rbx + 0x28]	      1482	packed-backend.c	FUNCTION_36	IF_1	CALL_4
0x40013ae	          0x4889c6	                            mov rsi, rax	      1482	packed-backend.c	FUNCTION_36	IF_1	CALL_4
0x40013b1	      0xe800000000	                          call 0x40013b6	      1482	packed-backend.c	FUNCTION_36	IF_1	CALL_4
0x40013b6	            0x85c0	                           test eax, eax	      1482	packed-backend.c	FUNCTION_36	IF_1	CALL_4
0x40013b8	            0x742d	                            je 0x40013e7	      1482	packed-backend.c	FUNCTION_36	IF_1	CALL_4
0x40013ba	      0xe800000000	                          call 0x40013bf	      1484	packed-backend.c	FUNCTION_36	IF_1	CALL_6
0x40013bf	            0x8b38	                    mov edi, dword [rax]	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x40013c1	      0xe800000000	                          call 0x40013c6	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x40013c6	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x40013ca	          0x4889c1	                            mov rcx, rax	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x40013cd	      0xbe00000000	                              mov esi, 0	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x40013d2	          0x4c89ef	                            mov rdi, r13	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x40013d5	      0xb800000000	                              mov eax, 0	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x40013da	      0xe800000000	                          call 0x40013df	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x40013df	    0x41bdfeffffff	                    mov r13d, 0xfffffffe	      1476	packed-backend.c	FUNCTION_36
0x40013e5	            0xeb06	                           jmp 0x40013ed	      1485	packed-backend.c	FUNCTION_36	IF_1
0x40013e7	    0x41bd00000000	                             mov r13d, 0	      1488	packed-backend.c	FUNCTION_36
0x40013ed	          0x4889ef	                            mov rdi, rbp	      1491	packed-backend.c	FUNCTION_36	CALL_7
0x40013f0	      0xe800000000	                          call 0x40013f5	      1491	packed-backend.c	FUNCTION_36	CALL_7
0x40013f5	          0x4c89e6	                            mov rsi, r12	      1492	packed-backend.c	FUNCTION_36	CALL_8
0x40013f8	          0x4889df	                            mov rdi, rbx	      1492	packed-backend.c	FUNCTION_36	CALL_8
0x40013fb	      0xe8c5feffff	     call sym.packed_transaction_cleanup	      1492	packed-backend.c	FUNCTION_36	CALL_8
0x4001400	          0x4489e8	                           mov eax, r13d	      1494	packed-backend.c	FUNCTION_36
0x4001403	        0x4883c408	                              add rsp, 8	      1494	packed-backend.c	FUNCTION_36
0x4001407	              0x5b	                                 pop rbx	      1494	packed-backend.c	FUNCTION_36
0x4001408	              0x5d	                                 pop rbp	      1494	packed-backend.c	FUNCTION_36
0x4001409	            0x415c	                                 pop r12	      1494	packed-backend.c	FUNCTION_36
0x400140b	            0x415d	                                 pop r13	      1494	packed-backend.c	FUNCTION_36
0x400140d	              0xc3	                                     ret	      1494	packed-backend.c	FUNCTION_36
packed_for_each_reflog_ent_reverse	FOR,0:CALL,0:DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:functions,0	2
0x4000197	      0xb800000000	                              mov eax, 0	      1601	packed-backend.c	FUNCTION_45
0x400019c	              0xc3	                                     ret	      1601	packed-backend.c	FUNCTION_45
packed_init_db	FOR,0:CALL,0:DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:functions,0	2
0x4000185	      0xb800000000	                              mov eax, 0	      1068	packed-backend.c	FUNCTION_30
0x400018a	              0xc3	                                     ret	      1068	packed-backend.c	FUNCTION_30
packed_transaction_prepare	FOR,1:CALL,10:DO,0:SWITCH,0:ELSE,0:IF,4:WHILE,0:functions,0	352
0x400140e	            0x4157	                                push r15	      1398	packed-backend.c	FUNCTION_34
0x4001410	            0x4156	                                push r14	      1398	packed-backend.c	FUNCTION_34
0x4001412	            0x4155	                                push r13	      1398	packed-backend.c	FUNCTION_34
0x4001414	            0x4154	                                push r12	      1398	packed-backend.c	FUNCTION_34
0x4001416	              0x55	                                push rbp	      1398	packed-backend.c	FUNCTION_34
0x4001417	              0x53	                                push rbx	      1398	packed-backend.c	FUNCTION_34
0x4001418	        0x4883ec78	                           sub rsp, 0x78	      1398	packed-backend.c	FUNCTION_34
0x400141c	          0x4989fe	                            mov r14, rdi	      1398	packed-backend.c	FUNCTION_34
0x400141f	          0x4989f7	                            mov r15, rsi	      1398	packed-backend.c	FUNCTION_34
0x4001422	      0x4889542428	             mov qword [rsp + 0x28], rdx	      1398	packed-backend.c	FUNCTION_34
0x4001427	    0x64488b042528	                mov rax, qword fs:[0x28]	      1398	packed-backend.c	FUNCTION_34
0x4001430	      0x4889442468	             mov qword [rsp + 0x68], rax	      1398	packed-backend.c	FUNCTION_34
0x4001435	            0x31c0	                            xor eax, eax	      1398	packed-backend.c	FUNCTION_34
0x4001437	      0xba00000000	                              mov edx, 0	      1399	packed-backend.c	FUNCTION_34	CALL_1
0x400143c	      0xbe07000000	                              mov esi, 7	      1399	packed-backend.c	FUNCTION_34	CALL_1
0x4001441	      0xe8b8edffff	                call sym.packed_downcast	      1399	packed-backend.c	FUNCTION_34	CALL_1
0x4001446	      0x4889442420	             mov qword [rsp + 0x20], rax	      1399	packed-backend.c	FUNCTION_34	CALL_1
0x400144b	      0xbe28000000	                           mov esi, 0x28	      1416	packed-backend.c	FUNCTION_34	CALL_2
0x4001450	      0xbf01000000	                              mov edi, 1	      1416	packed-backend.c	FUNCTION_34	CALL_2
0x4001455	      0xe800000000	                          call 0x400145a	      1416	packed-backend.c	FUNCTION_34	CALL_2
0x400145a	          0x4989c5	                            mov r13, rax	      1416	packed-backend.c	FUNCTION_34	CALL_2
0x400145d	        0x4c8d6008	                      lea r12, [rax + 8]	      1417	packed-backend.c	FUNCTION_34	CALL_3
0x4001461	      0xbe00000000	                              mov esi, 0	      1417	packed-backend.c	FUNCTION_34	CALL_3
0x4001466	          0x4c89e7	                            mov rdi, r12	      1417	packed-backend.c	FUNCTION_34	CALL_3
0x4001469	      0xe800000000	                          call 0x400146e	      1417	packed-backend.c	FUNCTION_34	CALL_3
0x400146e	        0x4d896f28	             mov qword [r15 + 0x28], r13	      1419	packed-backend.c	FUNCTION_34
0x4001472	      0x49837f1800	               cmp qword [r15 + 0x18], 0	      1425	packed-backend.c	FUNCTION_34	FOR_1
0x4001477	            0x7427	                            je 0x40014a0	      1425	packed-backend.c	FUNCTION_34	FOR_1
0x4001479	      0xbb00000000	                              mov ebx, 0	      1425	packed-backend.c	FUNCTION_34	FOR_1
0x400147e	        0x498b4708	                mov rax, qword [r15 + 8]	      1426	packed-backend.c	FUNCTION_34	FOR_1
0x4001482	        0x488b2cd8	            mov rbp, qword [rax + rbx*8]	      1426	packed-backend.c	FUNCTION_34	FOR_1
0x4001486	        0x488d7550	                   lea rsi, [rbp + 0x50]	      1428	packed-backend.c	FUNCTION_34	FOR_1	CALL_4
0x400148a	          0x4c89e7	                            mov rdi, r12	      1427	packed-backend.c	FUNCTION_34	FOR_1
0x400148d	      0xe800000000	                          call 0x4001492	      1427	packed-backend.c	FUNCTION_34	FOR_1
0x4001492	        0x48896808	                mov qword [rax + 8], rbp	      1431	packed-backend.c	FUNCTION_34	FOR_1
0x4001496	        0x4883c301	                              add rbx, 1	      1425	packed-backend.c	FUNCTION_34	FOR_1
0x400149a	        0x49395f18	            cmp qword [r15 + 0x18], rbx 	      1425	packed-backend.c	FUNCTION_34	FOR_1
0x400149e	            0x77de	                            ja 0x400147e	      1425	packed-backend.c	FUNCTION_34	FOR_1
0x40014a0	          0x4c89e7	                            mov rdi, r12	      1433	packed-backend.c	FUNCTION_34	CALL_5
0x40014a3	      0xe800000000	                          call 0x40014a8	      1433	packed-backend.c	FUNCTION_34	CALL_5
0x40014a8	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      1435	packed-backend.c	FUNCTION_34	IF_1	CALL_6
0x40014ad	          0x4c89e7	                            mov rdi, r12	      1435	packed-backend.c	FUNCTION_34	IF_1	CALL_6
0x40014b0	      0xe800000000	                          call 0x40014b5	      1435	packed-backend.c	FUNCTION_34	IF_1	CALL_6
0x40014b5	            0x85c0	                           test eax, eax	      1435	packed-backend.c	FUNCTION_34	IF_1	CALL_6
0x40014b7	     0xf850b040000	                           jne 0x40018c8	      1435	packed-backend.c	FUNCTION_34	IF_1	CALL_6
0x40014bd	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       183	lockfile.h	FUNCTION_51	CALL_1
0x40014c2	        0x488b4020	            mov rax, qword [rax + 0x20] 	       183	lockfile.h	FUNCTION_51	CALL_1
0x40014c6	          0x4885c0	                           test rax, rax	       202	tempfile.h	FUNCTION_67
0x40014c9	     0xf8424040000	                            je 0x40018f3	       202	tempfile.h	FUNCTION_67
0x40014cf	          0x8b4010	            mov eax, dword [rax + 0x10] 	       202	tempfile.h	FUNCTION_67
0x40014d2	            0x85c0	                           test eax, eax	       202	tempfile.h	FUNCTION_67
0x40014d4	            0x750d	                           jne 0x40014e3	       202	tempfile.h	FUNCTION_67
0x40014d6	      0xe918040000	                           jmp 0x40018f3	       202	tempfile.h	FUNCTION_67
0x40014db	    0x41c745000100	                      mov dword [r13], 1	      1441	packed-backend.c	FUNCTION_34	IF_2
0x40014e3	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1088	packed-backend.c	FUNCTION_31
0x40014ec	    0x48c744243800	               mov qword [rsp + 0x38], 0	      1088	packed-backend.c	FUNCTION_31
0x40014f5	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1088	packed-backend.c	FUNCTION_31
0x40014fe	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       183	lockfile.h	FUNCTION_51	CALL_1
0x4001503	        0x488b4020	            mov rax, qword [rax + 0x20] 	       183	lockfile.h	FUNCTION_51	CALL_1
0x4001507	          0x4885c0	                           test rax, rax	       202	tempfile.h	FUNCTION_67
0x400150a	     0xf84ff030000	                            je 0x400190f	       202	tempfile.h	FUNCTION_67
0x4001510	          0x8b4010	            mov eax, dword [rax + 0x10] 	       202	tempfile.h	FUNCTION_67
0x4001513	            0x85c0	                           test eax, eax	       202	tempfile.h	FUNCTION_67
0x4001515	     0xf8503040000	                           jne 0x400191e	       202	tempfile.h	FUNCTION_67
0x400151b	      0xe9ef030000	                           jmp 0x400190f	       202	tempfile.h	FUNCTION_67
0x4001520	      0xe800000000	                          call 0x4001525	      1105	packed-backend.c	FUNCTION_31	IF_2	CALL_8
0x4001525	            0x8b38	                    mov edi, dword [rax]	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x4001527	      0xe800000000	                          call 0x400152c	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x400152c	          0x4889c1	                            mov rcx, rax	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x400152f	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x4001534	      0xbe00000000	                              mov esi, 0	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x4001539	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x400153e	      0xb800000000	                              mov eax, 0	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x4001543	      0xe800000000	                          call 0x4001548	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x4001548	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1106	packed-backend.c	FUNCTION_31	IF_2	CALL_9
0x400154d	      0xe800000000	                          call 0x4001552	      1106	packed-backend.c	FUNCTION_31	IF_2	CALL_9
0x4001552	      0xe971030000	                           jmp 0x40018c8	      1106	packed-backend.c	FUNCTION_31	IF_2	CALL_9
0x4001557	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1109	packed-backend.c	FUNCTION_31	CALL_10
0x400155c	      0xe800000000	                          call 0x4001561	      1109	packed-backend.c	FUNCTION_31	CALL_10
0x4001561	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1111	packed-backend.c	FUNCTION_31	CALL_11
0x4001566	        0x488b7828	            mov rdi, qword [rax + 0x28] 	      1111	packed-backend.c	FUNCTION_31	CALL_11
0x400156a	      0xbe00000000	                              mov esi, 0	      1111	packed-backend.c	FUNCTION_31	CALL_11
0x400156f	      0xe800000000	                          call 0x4001574	      1111	packed-backend.c	FUNCTION_31	CALL_11
0x4001574	      0x4889442418	             mov qword [rsp + 0x18], rax	      1111	packed-backend.c	FUNCTION_31	CALL_11
0x4001579	          0x4885c0	                           test rax, rax	      1112	packed-backend.c	FUNCTION_31	IF_3
0x400157c	            0x7528	                           jne 0x40015a6	      1112	packed-backend.c	FUNCTION_31	IF_3
0x400157e	      0xe800000000	                          call 0x4001583	      1114	packed-backend.c	FUNCTION_31	IF_3	CALL_13
0x4001583	            0x8b38	                    mov edi, dword [rax]	      1113	packed-backend.c	FUNCTION_31	IF_3	CALL_12
0x4001585	      0xe800000000	                          call 0x400158a	      1113	packed-backend.c	FUNCTION_31	IF_3	CALL_12
0x400158a	          0x4889c2	                            mov rdx, rax	      1113	packed-backend.c	FUNCTION_31	IF_3	CALL_12
0x400158d	      0xbe00000000	                              mov esi, 0	      1113	packed-backend.c	FUNCTION_31	IF_3	CALL_12
0x4001592	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1113	packed-backend.c	FUNCTION_31	IF_3	CALL_12
0x4001597	      0xb800000000	                              mov eax, 0	      1113	packed-backend.c	FUNCTION_31	IF_3	CALL_12
0x400159c	      0xe800000000	                          call 0x40015a1	      1113	packed-backend.c	FUNCTION_31	IF_3	CALL_12
0x40015a1	      0xe914030000	                           jmp 0x40018ba	      1113	packed-backend.c	FUNCTION_31	IF_3	CALL_12
0x40015a6	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_385
0x40015ab	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_385
0x40015b0	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_385
0x40015b5	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	        97	stdio2.h	CALL_385
0x40015ba	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_385
0x40015bf	      0xe800000000	                          call 0x40015c4	        97	stdio2.h	CALL_385
0x40015c4	            0x85c0	                           test eax, eax	      1118	packed-backend.c	FUNCTION_31	IF_4
0x40015c6	     0xf88a4020000	                            js 0x4001870	      1118	packed-backend.c	FUNCTION_31	IF_4
0x40015cc	      0xba01000000	                              mov edx, 1	      1128	packed-backend.c	FUNCTION_31	CALL_14
0x40015d1	      0xbe00000000	                              mov esi, 0	      1128	packed-backend.c	FUNCTION_31	CALL_14
0x40015d6	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1128	packed-backend.c	FUNCTION_31	CALL_14
0x40015db	      0xe8e2faffff	      call sym.packed_ref_iterator_begin	      1128	packed-backend.c	FUNCTION_31	CALL_14
0x40015e0	          0x4989c4	                            mov r12, rax	      1128	packed-backend.c	FUNCTION_31	CALL_14
0x40015e3	          0x4889c7	                            mov rdi, rax	      1130	packed-backend.c	FUNCTION_31	IF_5	CALL_15
0x40015e6	      0xe800000000	                          call 0x40015eb	      1130	packed-backend.c	FUNCTION_31	IF_5	CALL_15
0x40015eb	        0x89442408	                mov dword [rsp + 8], eax	      1130	packed-backend.c	FUNCTION_31	IF_5	CALL_15
0x40015ef	            0x85c0	                           test eax, eax	      1131	packed-backend.c	FUNCTION_31	IF_5
0x40015f1	      0xb800000000	                              mov eax, 0	      1131	packed-backend.c	FUNCTION_31	IF_5
0x40015f6	        0x4c0f45e0	                         cmovne r12, rax	      1131	packed-backend.c	FUNCTION_31	IF_5
0x40015fa	      0xbd00000000	                              mov ebp, 0	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_32
0x40015ff	      0xe9d4010000	                           jmp 0x40017d8	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_32
0x4001604	        0x418b4510	            mov eax, dword [r13 + 0x10] 	      1139	packed-backend.c	FUNCTION_31	WHILE_1	IF_6
0x4001608	          0x4839e8	                            cmp rax, rbp	      1139	packed-backend.c	FUNCTION_31	WHILE_1	IF_6
0x400160b	     0xf861f010000	                           jbe 0x4001730	      1139	packed-backend.c	FUNCTION_31	WHILE_1	IF_6
0x4001611	      0xe97b030000	                           jmp 0x4001991	      1139	packed-backend.c	FUNCTION_31	WHILE_1	IF_6
0x4001616	        0x448b7328	           mov r14d, dword [rbx + 0x28] 	      1156	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9
0x400161a	        0x41f6c608	                            test r14b, 8	      1156	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9
0x400161e	     0xf848b000000	                            je 0x40016af	      1156	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9
0x4001624	        0x488d4314	                   lea rax, [rbx + 0x14]	       990	cache.h	FUNCTION_78	CALL_1
0x4001628	      0x4889442408	                mov qword [rsp + 8], rax	       990	cache.h	FUNCTION_78	CALL_1
0x400162d	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_75	CALL_1
0x4001632	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_75	CALL_1
0x4001637	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_75	CALL_1
0x400163a	      0xe800000000	                          call 0x400163f	       975	cache.h	FUNCTION_75	CALL_1
0x400163f	            0x85c0	                           test eax, eax	      1157	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_17
0x4001641	            0x7519	                           jne 0x400165c	      1157	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_17
0x4001643	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1158	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_18
0x4001648	      0xbe00000000	                              mov esi, 0	      1158	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_18
0x400164d	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1158	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_18
0x4001652	      0xe800000000	                          call 0x4001657	      1158	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_18
0x4001657	      0xe956020000	                           jmp 0x40018b2	      1158	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_18
0x400165c	      0x498b742418	            mov rsi, qword [r12 + 0x18] 	       975	cache.h	FUNCTION_75	CALL_1
0x4001661	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_75	CALL_1
0x4001666	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       975	cache.h	FUNCTION_75	CALL_1
0x400166b	      0xe800000000	                          call 0x4001670	       975	cache.h	FUNCTION_75	CALL_1
0x4001670	            0x85c0	                           test eax, eax	      1162	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_19
0x4001672	            0x743b	                            je 0x40016af	      1162	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_19
0x4001674	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x4001679	      0xe800000000	                          call 0x400167e	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x400167e	          0x4889c3	                            mov rbx, rax	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x4001681	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x4001686	      0xe800000000	                          call 0x400168b	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x400168b	          0x4989d8	                             mov r8, rbx	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x400168e	          0x4889c1	                            mov rcx, rax	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x4001691	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x4001696	      0xbe00000000	                              mov esi, 0	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x400169b	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x40016a0	      0xb800000000	                              mov eax, 0	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x40016a5	      0xe800000000	                          call 0x40016aa	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x40016aa	      0xe903020000	                           jmp 0x40018b2	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x40016af	        0x41f6c604	                            test r14b, 4	      1173	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12
0x40016b3	            0x741c	                            je 0x40016d1	      1173	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12
0x40016b5	          0x4c89e7	                            mov rdi, r12	      1179	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12	IF_13	CALL_23
0x40016b8	      0xe800000000	                          call 0x40016bd	      1179	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12	IF_13	CALL_23
0x40016bd	        0x89442408	                mov dword [rsp + 8], eax	      1179	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12	IF_13	CALL_23
0x40016c1	            0x85c0	                           test eax, eax	      1180	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12	IF_13
0x40016c3	      0xb800000000	                              mov eax, 0	      1180	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12	IF_13
0x40016c8	        0x4c0f45e0	                         cmovne r12, rax	      1180	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12	IF_13
0x40016cc	      0xe9b1000000	                           jmp 0x4001782	      1180	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12	IF_13
0x40016d1	        0x4883c501	                              add rbp, 1	      1187	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	ELSE_4
0x40016d5	            0xeb59	                           jmp 0x4001730	      1187	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	ELSE_4
0x40016d7	          0x4585f6	                         test r14d, r14d	      1190	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14
0x40016da	            0x7e4f	                           jle 0x400172b	      1190	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14
0x40016dc	        0xf6432808	               test byte [rbx + 0x28], 8	      1196	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15
0x40016e0	            0x7449	                            je 0x400172b	      1196	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15
0x40016e2	        0x488d4314	                   lea rax, [rbx + 0x14]	       990	cache.h	FUNCTION_78	CALL_1
0x40016e6	      0x4889442410	             mov qword [rsp + 0x10], rax	       990	cache.h	FUNCTION_78	CALL_1
0x40016eb	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_75	CALL_1
0x40016f0	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_75	CALL_1
0x40016f5	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_75	CALL_1
0x40016f8	      0xe800000000	                          call 0x40016fd	       975	cache.h	FUNCTION_75	CALL_1
0x40016fd	            0x85c0	                           test eax, eax	      1196	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15
0x40016ff	            0x742a	                            je 0x400172b	      1196	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15
0x4001701	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1198	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_25
0x4001706	      0xe800000000	                          call 0x400170b	      1198	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_25
0x400170b	        0x488d5350	                   lea rdx, [rbx + 0x50]	      1200	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15
0x400170f	          0x4889c1	                            mov rcx, rax	      1198	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_25
0x4001712	      0xbe00000000	                              mov esi, 0	      1198	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_25
0x4001717	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1198	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_25
0x400171c	      0xb800000000	                              mov eax, 0	      1198	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_25
0x4001721	      0xe800000000	                          call 0x4001726	      1198	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_25
0x4001726	      0xe982010000	                           jmp 0x40018ad	      1198	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_25
0x400172b	          0x4585f6	                         test r14d, r14d	      1206	packed-backend.c	FUNCTION_31	WHILE_1	IF_16
0x400172e	            0x7952	                           jns 0x4001782	      1206	packed-backend.c	FUNCTION_31	WHILE_1	IF_16
0x4001730	      0x488d742450	                   lea rsi, [rsp + 0x50]	      1210	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	CALL_27
0x4001735	          0x4c89e7	                            mov rdi, r12	      1210	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	CALL_27
0x4001738	      0xe800000000	                          call 0x400173d	      1210	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	CALL_27
0x400173d	            0x85c0	                           test eax, eax	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_28
0x400173f	      0xb900000000	                              mov ecx, 0	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_28
0x4001744	      0x488d442450	                   lea rax, [rsp + 0x50]	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_28
0x4001749	        0x480f44c8	                          cmove rcx, rax	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_28
0x400174d	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_28
0x4001752	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_28
0x4001757	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_28
0x400175c	      0xe82bf0ffff	             call sym.write_packed_entry	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_28
0x4001761	            0x85c0	                           test eax, eax	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_28
0x4001763	     0xf850d010000	                           jne 0x4001876	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_28
0x4001769	          0x4c89e7	                            mov rdi, r12	      1217	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_18	CALL_29
0x400176c	      0xe800000000	                          call 0x4001771	      1217	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_18	CALL_29
0x4001771	        0x89442408	                mov dword [rsp + 8], eax	      1217	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_18	CALL_29
0x4001775	            0x85c0	                           test eax, eax	      1218	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_18
0x4001777	      0xb800000000	                              mov eax, 0	      1218	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_18
0x400177c	        0x4c0f45e0	                         cmovne r12, rax	      1218	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_18
0x4001780	            0xeb56	                           jmp 0x40017d8	      1218	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_18
0x4001782	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_75	CALL_1
0x4001787	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_75	CALL_1
0x400178c	          0x4889df	                            mov rdi, rbx	       975	cache.h	FUNCTION_75	CALL_1
0x400178f	      0xe800000000	                          call 0x4001794	       975	cache.h	FUNCTION_75	CALL_1
0x4001794	            0x85c0	                           test eax, eax	      1219	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_6	IF_19	CALL_30
0x4001796	            0x7506	                           jne 0x400179e	      1219	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_6	IF_19	CALL_30
0x4001798	        0x4883c501	                              add rbp, 1	      1227	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_6	IF_19
0x400179c	            0xeb3a	                           jmp 0x40017d8	      1227	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_6	IF_19
0x400179e	      0x488d742450	                   lea rsi, [rsp + 0x50]	      1230	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	CALL_31
0x40017a3	          0x4889df	                            mov rdi, rbx	      1230	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	CALL_31
0x40017a6	      0xe800000000	                          call 0x40017ab	      1230	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	CALL_31
0x40017ab	            0x85c0	                           test eax, eax	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_32
0x40017ad	      0xb900000000	                              mov ecx, 0	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_32
0x40017b2	      0x488d442450	                   lea rax, [rsp + 0x50]	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_32
0x40017b7	        0x480f44c8	                          cmove rcx, rax	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_32
0x40017bb	        0x488d7350	                   lea rsi, [rbx + 0x50]	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_32
0x40017bf	          0x4889da	                            mov rdx, rbx	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_32
0x40017c2	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_32
0x40017c7	      0xe8c0efffff	             call sym.write_packed_entry	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_32
0x40017cc	            0x85c0	                           test eax, eax	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_32
0x40017ce	     0xf85a2000000	                           jne 0x4001876	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_32
0x40017d4	        0x4883c501	                              add rbp, 1	      1238	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7
0x40017d8	          0x4d85e4	                           test r12, r12	      1135	packed-backend.c	FUNCTION_31	WHILE_1
0x40017db	     0xf8523feffff	                           jne 0x4001604	      1135	packed-backend.c	FUNCTION_31	WHILE_1
0x40017e1	        0x418b4510	            mov eax, dword [r13 + 0x10] 	      1135	packed-backend.c	FUNCTION_31	WHILE_1
0x40017e5	          0x4839c5	                            cmp rbp, rax	      1135	packed-backend.c	FUNCTION_31	WHILE_1
0x40017e8	     0xf8289010000	                            jb 0x4001977	      1135	packed-backend.c	FUNCTION_31	WHILE_1
0x40017ee	      0x837c2408ff	 cmp dword [rsp + 8], 0xffffffffffffffff	      1242	packed-backend.c	FUNCTION_31	IF_21
0x40017f3	            0x7419	                            je 0x400180e	      1242	packed-backend.c	FUNCTION_31	IF_21
0x40017f5	      0xba43000000	                           mov edx, 0x43	       279	strbuf.h	FUNCTION_99	CALL_2
0x40017fa	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_99	CALL_2
0x40017ff	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       279	strbuf.h	FUNCTION_99	CALL_2
0x4001804	      0xe800000000	                          call 0x4001809	       279	strbuf.h	FUNCTION_99	CALL_2
0x4001809	      0xe9ac000000	                           jmp 0x40018ba	       279	strbuf.h	FUNCTION_99	CALL_2
0x400180e	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1248	packed-backend.c	FUNCTION_31	IF_22	CALL_34
0x4001813	        0x488b7828	            mov rdi, qword [rax + 0x28] 	      1248	packed-backend.c	FUNCTION_31	IF_22	CALL_34
0x4001817	      0xe800000000	                          call 0x400181c	      1248	packed-backend.c	FUNCTION_31	IF_22	CALL_34
0x400181c	            0x85c0	                           test eax, eax	      1248	packed-backend.c	FUNCTION_31	IF_22	CALL_34
0x400181e	     0xf8446010000	                            je 0x400196a	      1248	packed-backend.c	FUNCTION_31	IF_22	CALL_34
0x4001824	      0xe800000000	                          call 0x4001829	      1251	packed-backend.c	FUNCTION_31	IF_22	CALL_37
0x4001829	            0x8b38	                    mov edi, dword [rax]	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_35
0x400182b	      0xe800000000	                          call 0x4001830	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_35
0x4001830	          0x4889c3	                            mov rbx, rax	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_35
0x4001833	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_35
0x4001838	        0x498b7e28	            mov rdi, qword [r14 + 0x28] 	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_35
0x400183c	      0xe800000000	                          call 0x4001841	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_35
0x4001841	          0x4889d9	                            mov rcx, rbx	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_35
0x4001844	          0x4889c2	                            mov rdx, rax	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_35
0x4001847	      0xbe00000000	                              mov esi, 0	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_35
0x400184c	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_35
0x4001851	      0xb800000000	                              mov eax, 0	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_35
0x4001856	      0xe800000000	                          call 0x400185b	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_35
0x400185b	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1252	packed-backend.c	FUNCTION_31	IF_22	CALL_38
0x4001860	      0xe800000000	                          call 0x4001865	      1252	packed-backend.c	FUNCTION_31	IF_22	CALL_38
0x4001865	        0x498d7e28	                   lea rdi, [r14 + 0x28]	      1253	packed-backend.c	FUNCTION_31	IF_22	CALL_39
0x4001869	      0xe800000000	                          call 0x400186e	      1253	packed-backend.c	FUNCTION_31	IF_22	CALL_39
0x400186e	            0xeb58	                           jmp 0x40018c8	      1253	packed-backend.c	FUNCTION_31	IF_22	CALL_39
0x4001870	    0x41bc00000000	                             mov r12d, 0	      1084	packed-backend.c	FUNCTION_31
0x4001876	      0xe800000000	                          call 0x400187b	      1261	packed-backend.c	FUNCTION_31	CALL_42
0x400187b	            0x8b38	                    mov edi, dword [rax]	      1260	packed-backend.c	FUNCTION_31	CALL_40
0x400187d	      0xe800000000	                          call 0x4001882	      1260	packed-backend.c	FUNCTION_31	CALL_40
0x4001882	          0x4889c3	                            mov rbx, rax	      1260	packed-backend.c	FUNCTION_31	CALL_40
0x4001885	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1260	packed-backend.c	FUNCTION_31	CALL_40
0x400188a	        0x488b7828	            mov rdi, qword [rax + 0x28] 	      1260	packed-backend.c	FUNCTION_31	CALL_40
0x400188e	      0xe800000000	                          call 0x4001893	      1260	packed-backend.c	FUNCTION_31	CALL_40
0x4001893	          0x4889d9	                            mov rcx, rbx	      1260	packed-backend.c	FUNCTION_31	CALL_40
0x4001896	          0x4889c2	                            mov rdx, rax	      1260	packed-backend.c	FUNCTION_31	CALL_40
0x4001899	      0xbe00000000	                              mov esi, 0	      1260	packed-backend.c	FUNCTION_31	CALL_40
0x400189e	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1260	packed-backend.c	FUNCTION_31	CALL_40
0x40018a3	      0xb800000000	                              mov eax, 0	      1260	packed-backend.c	FUNCTION_31	CALL_40
0x40018a8	      0xe800000000	                          call 0x40018ad	      1260	packed-backend.c	FUNCTION_31	CALL_40
0x40018ad	          0x4d85e4	                           test r12, r12	      1264	packed-backend.c	FUNCTION_31	IF_23
0x40018b0	            0x7408	                            je 0x40018ba	      1264	packed-backend.c	FUNCTION_31	IF_23
0x40018b2	          0x4c89e7	                            mov rdi, r12	      1265	packed-backend.c	FUNCTION_31	CALL_43
0x40018b5	      0xe800000000	                          call 0x40018ba	      1265	packed-backend.c	FUNCTION_31	CALL_43
0x40018ba	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1267	packed-backend.c	FUNCTION_31	CALL_44
0x40018bf	        0x488d7828	                   lea rdi, [rax + 0x28]	      1267	packed-backend.c	FUNCTION_31	CALL_44
0x40018c3	      0xe800000000	                          call 0x40018c8	      1267	packed-backend.c	FUNCTION_31	CALL_44
0x40018c8	          0x4c89fe	                            mov rsi, r15	      1451	packed-backend.c	FUNCTION_34	CALL_10
0x40018cb	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1451	packed-backend.c	FUNCTION_34	CALL_10
0x40018d0	      0xe8f0f9ffff	     call sym.packed_transaction_cleanup	      1451	packed-backend.c	FUNCTION_34	CALL_10
0x40018d5	      0xb8feffffff	                     mov eax, 0xfffffffe	      1452	packed-backend.c	FUNCTION_34
0x40018da	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      1453	packed-backend.c	FUNCTION_34
0x40018df	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1453	packed-backend.c	FUNCTION_34
0x40018e8	     0xf84dd000000	                            je 0x40019cb	      1453	packed-backend.c	FUNCTION_34
0x40018ee	      0xe9d3000000	                           jmp 0x40019c6	      1453	packed-backend.c	FUNCTION_34
0x40018f3	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      1439	packed-backend.c	FUNCTION_34	IF_2	IF_3	CALL_8
0x40018f8	      0xbe00000000	                              mov esi, 0	      1439	packed-backend.c	FUNCTION_34	IF_2	IF_3	CALL_8
0x40018fd	          0x4c89f7	                            mov rdi, r14	      1439	packed-backend.c	FUNCTION_34	IF_2	IF_3	CALL_8
0x4001900	      0xe800000000	                          call 0x4001905	      1439	packed-backend.c	FUNCTION_34	IF_2	IF_3	CALL_8
0x4001905	            0x85c0	                           test eax, eax	      1439	packed-backend.c	FUNCTION_34	IF_2	IF_3	CALL_8
0x4001907	     0xf84cefbffff	                            je 0x40014db	      1439	packed-backend.c	FUNCTION_34	IF_2	IF_3	CALL_8
0x400190d	            0xebb9	                           jmp 0x40018c8	      1439	packed-backend.c	FUNCTION_34	IF_2	IF_3	CALL_8
0x400190f	      0xbf00000000	                              mov edi, 0	      1092	packed-backend.c	FUNCTION_31	CALL_2
0x4001914	      0xb800000000	                              mov eax, 0	      1092	packed-backend.c	FUNCTION_31	CALL_2
0x4001919	      0xe800000000	                          call 0x400191e	      1092	packed-backend.c	FUNCTION_31	CALL_2
0x400191e	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	      1099	packed-backend.c	FUNCTION_31	CALL_3
0x4001923	        0x498d7e20	                   lea rdi, [r14 + 0x20]	      1099	packed-backend.c	FUNCTION_31	CALL_3
0x4001927	      0xe800000000	                          call 0x400192c	      1099	packed-backend.c	FUNCTION_31	CALL_3
0x400192c	          0x4889c3	                            mov rbx, rax	      1099	packed-backend.c	FUNCTION_31	CALL_3
0x400192f	          0x4889c2	                            mov rdx, rax	      1100	packed-backend.c	FUNCTION_31	CALL_4
0x4001932	      0xbe00000000	                              mov esi, 0	      1100	packed-backend.c	FUNCTION_31	CALL_4
0x4001937	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1100	packed-backend.c	FUNCTION_31	CALL_4
0x400193c	      0xb800000000	                              mov eax, 0	      1100	packed-backend.c	FUNCTION_31	CALL_4
0x4001941	      0xe800000000	                          call 0x4001946	      1100	packed-backend.c	FUNCTION_31	CALL_4
0x4001946	          0x4889df	                            mov rdi, rbx	      1101	packed-backend.c	FUNCTION_31	CALL_5
0x4001949	      0xe800000000	                          call 0x400194e	      1101	packed-backend.c	FUNCTION_31	CALL_5
0x400194e	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      1102	packed-backend.c	FUNCTION_31	CALL_6
0x4001953	      0xe800000000	                          call 0x4001958	      1102	packed-backend.c	FUNCTION_31	CALL_6
0x4001958	        0x49894628	             mov qword [r14 + 0x28], rax	      1102	packed-backend.c	FUNCTION_31	CALL_6
0x400195c	          0x4885c0	                           test rax, rax	      1103	packed-backend.c	FUNCTION_31	IF_2
0x400195f	     0xf85f2fbffff	                           jne 0x4001557	      1103	packed-backend.c	FUNCTION_31	IF_2
0x4001965	      0xe9b6fbffff	                           jmp 0x4001520	      1103	packed-backend.c	FUNCTION_31	IF_2
0x400196a	    0x41c747200100	               mov dword [r15 + 0x20], 1	      1447	packed-backend.c	FUNCTION_34
0x4001972	      0xe963ffffff	                           jmp 0x40018da	      1448	packed-backend.c	FUNCTION_34
0x4001977	          0x4889e8	                            mov rax, rbp	      1142	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1
0x400197a	        0x48c1e004	                              shl rax, 4	      1142	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1
0x400197e	        0x49034508	                add rax, qword [r13 + 8]	      1142	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1
0x4001982	        0x488b5808	                mov rbx, qword [rax + 8]	      1142	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1
0x4001986	    0x41be01000000	                             mov r14d, 1	      1145	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	IF_7
0x400198c	      0xe94bfdffff	                           jmp 0x40016dc	      1145	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	IF_7
0x4001991	          0x4889e8	                            mov rax, rbp	      1142	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1
0x4001994	        0x48c1e004	                              shl rax, 4	      1142	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1
0x4001998	        0x49034508	                add rax, qword [r13 + 8]	      1142	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1
0x400199c	        0x488b5808	                mov rbx, qword [rax + 8]	      1142	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1
0x40019a0	        0x488d4350	                   lea rax, [rbx + 0x50]	      1147	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	CALL_16
0x40019a4	      0x4889442410	             mov qword [rsp + 0x10], rax	      1147	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	CALL_16
0x40019a9	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	      1147	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	CALL_16
0x40019ae	          0x4889c6	                            mov rsi, rax	      1147	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	CALL_16
0x40019b1	      0xe800000000	                          call 0x40019b6	      1147	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	CALL_16
0x40019b6	          0x4189c6	                           mov r14d, eax	      1147	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	CALL_16
0x40019b9	            0x85c0	                           test eax, eax	      1150	packed-backend.c	FUNCTION_31	WHILE_1	IF_8
0x40019bb	     0xf8455fcffff	                            je 0x4001616	      1150	packed-backend.c	FUNCTION_31	WHILE_1	IF_8
0x40019c1	      0xe911fdffff	                           jmp 0x40016d7	      1150	packed-backend.c	FUNCTION_31	WHILE_1	IF_8
0x40019c6	      0xe800000000	                          call 0x40019cb	      1453	packed-backend.c	FUNCTION_34
0x40019cb	        0x4883c478	                           add rsp, 0x78	      1453	packed-backend.c	FUNCTION_34
0x40019cf	              0x5b	                                 pop rbx	      1453	packed-backend.c	FUNCTION_34
0x40019d0	              0x5d	                                 pop rbp	      1453	packed-backend.c	FUNCTION_34
0x40019d1	            0x415c	                                 pop r12	      1453	packed-backend.c	FUNCTION_34
0x40019d3	            0x415d	                                 pop r13	      1453	packed-backend.c	FUNCTION_34
0x40019d5	            0x415e	                                 pop r14	      1453	packed-backend.c	FUNCTION_34
0x40019d7	            0x415f	                                 pop r15	      1453	packed-backend.c	FUNCTION_34
0x40019d9	              0xc3	                                     ret	      1453	packed-backend.c	FUNCTION_34
packed_refs_is_locked	FOR,0:CALL,2:DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:functions,0	15
0x40019da	        0x4883ec08	                              sub rsp, 8	      1044	packed-backend.c	FUNCTION_29
0x40019de	      0xba00000000	                              mov edx, 0	      1045	packed-backend.c	FUNCTION_29	CALL_1
0x40019e3	      0xbe03000000	                              mov esi, 3	      1045	packed-backend.c	FUNCTION_29	CALL_1
0x40019e8	      0xe811e8ffff	                call sym.packed_downcast	      1045	packed-backend.c	FUNCTION_29	CALL_1
0x40019ed	        0x488b4020	            mov rax, qword [rax + 0x20] 	       183	lockfile.h	FUNCTION_51	CALL_1
0x40019f1	          0x4885c0	                           test rax, rax	       202	tempfile.h	FUNCTION_67
0x40019f4	            0x740d	                            je 0x4001a03	       202	tempfile.h	FUNCTION_67
0x40019f6	          0x8b4010	            mov eax, dword [rax + 0x10] 	       202	tempfile.h	FUNCTION_67
0x40019f9	            0x85c0	                           test eax, eax	       202	tempfile.h	FUNCTION_67
0x40019fb	           0xf95c0	                                setne al	       202	tempfile.h	FUNCTION_67
0x40019fe	           0xfb6c0	                           movzx eax, al	       202	tempfile.h	FUNCTION_67
0x4001a01	            0xeb05	                           jmp 0x4001a08	       202	tempfile.h	FUNCTION_67
0x4001a03	      0xb800000000	                              mov eax, 0	       202	tempfile.h	FUNCTION_67
0x4001a08	        0x4883c408	                              add rsp, 8	      1051	packed-backend.c	FUNCTION_29
0x4001a0c	              0xc3	                                     ret	      1051	packed-backend.c	FUNCTION_29
is_packed_transaction_needed	FOR,2:CALL,5:DO,0:SWITCH,0:ELSE,0:IF,5:WHILE,0:functions,0	98
0x4001a0d	            0x4156	                                push r14	      1273	packed-backend.c	FUNCTION_32
0x4001a0f	            0x4155	                                push r13	      1273	packed-backend.c	FUNCTION_32
0x4001a11	            0x4154	                                push r12	      1273	packed-backend.c	FUNCTION_32
0x4001a13	              0x55	                                push rbp	      1273	packed-backend.c	FUNCTION_32
0x4001a14	              0x53	                                push rbx	      1273	packed-backend.c	FUNCTION_32
0x4001a15	        0x4883ec50	                           sub rsp, 0x50	      1273	packed-backend.c	FUNCTION_32
0x4001a19	          0x4989fd	                            mov r13, rdi	      1273	packed-backend.c	FUNCTION_32
0x4001a1c	          0x4889f5	                            mov rbp, rsi	      1273	packed-backend.c	FUNCTION_32
0x4001a1f	    0x64488b042528	                mov rax, qword fs:[0x28]	      1273	packed-backend.c	FUNCTION_32
0x4001a28	      0x4889442448	             mov qword [rsp + 0x48], rax	      1273	packed-backend.c	FUNCTION_32
0x4001a2d	            0x31c0	                            xor eax, eax	      1273	packed-backend.c	FUNCTION_32
0x4001a2f	      0xba00000000	                              mov edx, 0	      1274	packed-backend.c	FUNCTION_32	CALL_1
0x4001a34	      0xbe01000000	                              mov esi, 1	      1274	packed-backend.c	FUNCTION_32	CALL_1
0x4001a39	      0xe8c0e7ffff	                call sym.packed_downcast	      1274	packed-backend.c	FUNCTION_32	CALL_1
0x4001a3e	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1278	packed-backend.c	FUNCTION_32
0x4001a47	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1278	packed-backend.c	FUNCTION_32
0x4001a50	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1278	packed-backend.c	FUNCTION_32
0x4001a59	        0x488b4020	            mov rax, qword [rax + 0x20] 	       183	lockfile.h	FUNCTION_51	CALL_1
0x4001a5d	          0x4885c0	                           test rax, rax	       202	tempfile.h	FUNCTION_67
0x4001a60	     0xf84dd000000	                            je 0x4001b43	       202	tempfile.h	FUNCTION_67
0x4001a66	          0x8b4010	            mov eax, dword [rax + 0x10] 	       202	tempfile.h	FUNCTION_67
0x4001a69	            0x85c0	                           test eax, eax	       202	tempfile.h	FUNCTION_67
0x4001a6b	     0xf85eb000000	                           jne 0x4001b5c	       202	tempfile.h	FUNCTION_67
0x4001a71	      0xe9cd000000	                           jmp 0x4001b43	       202	tempfile.h	FUNCTION_67
0x4001a76	        0x4c8b7508	                mov r14, qword [rbp + 8]	      1318	packed-backend.c	FUNCTION_32	FOR_1
0x4001a7a	          0x498b3e	                    mov rdi, qword [r14]	      1318	packed-backend.c	FUNCTION_32	FOR_1
0x4001a7d	          0x8b4728	            mov eax, dword [rdi + 0x28] 	      1320	packed-backend.c	FUNCTION_32	FOR_1	IF_2
0x4001a80	            0xa808	                              test al, 8	      1320	packed-backend.c	FUNCTION_32	FOR_1	IF_2
0x4001a82	     0xf8596000000	                           jne 0x4001b1e	      1320	packed-backend.c	FUNCTION_32	FOR_1	IF_2
0x4001a88	      0xbb00000000	                              mov ebx, 0	      1320	packed-backend.c	FUNCTION_32	FOR_1	IF_2
0x4001a8d	            0xeb0f	                           jmp 0x4001a9e	      1320	packed-backend.c	FUNCTION_32	FOR_1	IF_2
0x4001a8f	        0x498b3cde	            mov rdi, qword [r14 + rbx*8]	      1318	packed-backend.c	FUNCTION_32	FOR_1
0x4001a93	          0x8b4728	            mov eax, dword [rdi + 0x28] 	      1320	packed-backend.c	FUNCTION_32	FOR_1	IF_2
0x4001a96	            0xa808	                              test al, 8	      1320	packed-backend.c	FUNCTION_32	FOR_1	IF_2
0x4001a98	     0xf8587000000	                           jne 0x4001b25	      1320	packed-backend.c	FUNCTION_32	FOR_1	IF_2
0x4001a9e	            0xa804	                              test al, 4	      1324	packed-backend.c	FUNCTION_32	FOR_1	IF_3	CALL_3
0x4001aa0	            0x7413	                            je 0x4001ab5	      1324	packed-backend.c	FUNCTION_32	FOR_1	IF_3	CALL_3
0x4001aa2	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_75	CALL_1
0x4001aa7	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_75	CALL_1
0x4001aac	      0xe800000000	                          call 0x4001ab1	       975	cache.h	FUNCTION_75	CALL_1
0x4001ab1	            0x85c0	                           test eax, eax	      1324	packed-backend.c	FUNCTION_32	FOR_1	IF_3	CALL_3
0x4001ab3	            0x7577	                           jne 0x4001b2c	      1324	packed-backend.c	FUNCTION_32	FOR_1	IF_3	CALL_3
0x4001ab5	        0x4883c301	                              add rbx, 1	      1317	packed-backend.c	FUNCTION_32	FOR_1
0x4001ab9	          0x4c39e3	                            cmp rbx, r12	      1317	packed-backend.c	FUNCTION_32	FOR_1
0x4001abc	            0x75d1	                           jne 0x4001a8f	      1317	packed-backend.c	FUNCTION_32	FOR_1
0x4001abe	      0xbb00000000	                              mov ebx, 0	      1317	packed-backend.c	FUNCTION_32	FOR_1
0x4001ac3	        0x488b4508	                mov rax, qword [rbp + 8]	      1338	packed-backend.c	FUNCTION_32	FOR_2
0x4001ac7	        0x488b34d8	            mov rsi, qword [rax + rbx*8]	      1338	packed-backend.c	FUNCTION_32	FOR_2
0x4001acb	        0xf6462804	               test byte [rsi + 0x28], 4	      1342	packed-backend.c	FUNCTION_32	FOR_2	IF_4
0x4001acf	            0x7430	                            je 0x4001b01	      1342	packed-backend.c	FUNCTION_32	FOR_2	IF_4
0x4001ad1	        0x4883c650	                           add rsi, 0x50	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_4
0x4001ad5	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_4
0x4001ada	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_4
0x4001adf	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_4
0x4001ae4	          0x4c89ef	                            mov rdi, r13	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_4
0x4001ae7	      0xe800000000	                          call 0x4001aec	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_4
0x4001aec	            0x85c0	                           test eax, eax	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_4
0x4001aee	            0x740a	                            je 0x4001afa	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_4
0x4001af0	      0xe800000000	                          call 0x4001af5	      1351	packed-backend.c	FUNCTION_32	FOR_2	IF_5
0x4001af5	          0x833802	                      cmp dword [rax], 2	      1350	packed-backend.c	FUNCTION_32	FOR_2	IF_5
0x4001af8	            0x7407	                            je 0x4001b01	      1350	packed-backend.c	FUNCTION_32	FOR_2	IF_5
0x4001afa	      0xbb01000000	                              mov ebx, 1	      1356	packed-backend.c	FUNCTION_32	FOR_2	IF_5
0x4001aff	            0xeb0f	                           jmp 0x4001b10	      1356	packed-backend.c	FUNCTION_32	FOR_2	IF_5
0x4001b01	        0x4883c301	                              add rbx, 1	      1337	packed-backend.c	FUNCTION_32	FOR_2
0x4001b05	        0x48395d18	            cmp qword [rbp + 0x18], rbx 	      1337	packed-backend.c	FUNCTION_32	FOR_2
0x4001b09	            0x77b8	                            ja 0x4001ac3	      1337	packed-backend.c	FUNCTION_32	FOR_2
0x4001b0b	      0xbb00000000	                              mov ebx, 0	      1336	packed-backend.c	FUNCTION_32
0x4001b10	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1361	packed-backend.c	FUNCTION_32	CALL_5
0x4001b15	      0xe800000000	                          call 0x4001b1a	      1361	packed-backend.c	FUNCTION_32	CALL_5
0x4001b1a	            0x89d8	                            mov eax, ebx	      1362	packed-backend.c	FUNCTION_32
0x4001b1c	            0xeb13	                           jmp 0x4001b31	      1362	packed-backend.c	FUNCTION_32
0x4001b1e	      0xb801000000	                              mov eax, 1	      1322	packed-backend.c	FUNCTION_32	FOR_1	IF_2
0x4001b23	            0xeb0c	                           jmp 0x4001b31	      1322	packed-backend.c	FUNCTION_32	FOR_1	IF_2
0x4001b25	      0xb801000000	                              mov eax, 1	      1322	packed-backend.c	FUNCTION_32	FOR_1	IF_2
0x4001b2a	            0xeb05	                           jmp 0x4001b31	      1322	packed-backend.c	FUNCTION_32	FOR_1	IF_2
0x4001b2c	      0xb801000000	                              mov eax, 1	      1326	packed-backend.c	FUNCTION_32	FOR_1	IF_3
0x4001b31	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      1363	packed-backend.c	FUNCTION_32
0x4001b36	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1363	packed-backend.c	FUNCTION_32
0x4001b3f	            0x7433	                            je 0x4001b74	      1363	packed-backend.c	FUNCTION_32
0x4001b41	            0xeb2c	                           jmp 0x4001b6f	      1363	packed-backend.c	FUNCTION_32
0x4001b43	      0xba00000000	                              mov edx, 0	      1283	packed-backend.c	FUNCTION_32	IF_1
0x4001b48	      0xbe03050000	                          mov esi, 0x503	      1283	packed-backend.c	FUNCTION_32	IF_1
0x4001b4d	      0xbf00000000	                              mov edi, 0	      1283	packed-backend.c	FUNCTION_32	IF_1
0x4001b52	      0xb800000000	                              mov eax, 0	      1283	packed-backend.c	FUNCTION_32	IF_1
0x4001b57	      0xe800000000	                          call 0x4001b5c	      1283	packed-backend.c	FUNCTION_32	IF_1
0x4001b5c	        0x4c8b6518	            mov r12, qword [rbp + 0x18] 	      1317	packed-backend.c	FUNCTION_32	FOR_1
0x4001b60	      0xbb00000000	                              mov ebx, 0	      1336	packed-backend.c	FUNCTION_32
0x4001b65	          0x4d85e4	                           test r12, r12	      1317	packed-backend.c	FUNCTION_32	FOR_1
0x4001b68	            0x74a6	                            je 0x4001b10	      1317	packed-backend.c	FUNCTION_32	FOR_1
0x4001b6a	      0xe907ffffff	                           jmp 0x4001a76	      1317	packed-backend.c	FUNCTION_32	FOR_1
0x4001b6f	      0xe800000000	                          call 0x4001b74	      1363	packed-backend.c	FUNCTION_32
0x4001b74	        0x4883c450	                           add rsp, 0x50	      1363	packed-backend.c	FUNCTION_32
0x4001b78	              0x5b	                                 pop rbx	      1363	packed-backend.c	FUNCTION_32
0x4001b79	              0x5d	                                 pop rbp	      1363	packed-backend.c	FUNCTION_32
0x4001b7a	            0x415c	                                 pop r12	      1363	packed-backend.c	FUNCTION_32
0x4001b7c	            0x415d	                                 pop r13	      1363	packed-backend.c	FUNCTION_32
0x4001b7e	            0x415e	                                 pop r14	      1363	packed-backend.c	FUNCTION_32
0x4001b80	              0xc3	                                     ret	      1363	packed-backend.c	FUNCTION_32
packed_rename_ref	FOR,0:CALL,1:DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:functions,0	4
0x40002a4	        0x4883ec08	                              sub rsp, 8	      1572	packed-backend.c	FUNCTION_41
0x40002a8	      0xbf00000000	                              mov edi, 0	      1573	packed-backend.c	FUNCTION_41	CALL_1
0x40002ad	      0xb800000000	                              mov eax, 0	      1573	packed-backend.c	FUNCTION_41	CALL_1
0x40002b2	      0xe800000000	           call sym.packed_create_symref	      1573	packed-backend.c	FUNCTION_41	CALL_1
release_snapshot	FOR,0:CALL,3:DO,0:SWITCH,0:ELSE,1:IF,1:WHILE,0:functions,0	17
0x400032a	          0x8b472c	            mov eax, dword [rdi + 0x2c] 	       186	packed-backend.c	FUNCTION_3	IF_1
0x400032d	          0x8d50ff	                      lea edx, [rax - 1]	       186	packed-backend.c	FUNCTION_3	IF_1
0x4000330	          0x89572c	             mov dword [rdi + 0x2c], edx	       186	packed-backend.c	FUNCTION_3	IF_1
0x4000333	      0xb800000000	                              mov eax, 0	       192	packed-backend.c	FUNCTION_3	ELSE_1
0x4000338	            0x85d2	                           test edx, edx	       186	packed-backend.c	FUNCTION_3	IF_1
0x400033a	            0x7523	                           jne 0x400035f	       186	packed-backend.c	FUNCTION_3	IF_1
0x400033c	              0x53	                                push rbx	       185	packed-backend.c	FUNCTION_3
0x400033d	          0x4889fb	                            mov rbx, rdi	       185	packed-backend.c	FUNCTION_3
0x4000340	        0x488d7f30	                   lea rdi, [rdi + 0x30]	       187	packed-backend.c	FUNCTION_3	IF_1	CALL_1
0x4000344	      0xe800000000	                          call 0x4000349	       187	packed-backend.c	FUNCTION_3	IF_1	CALL_1
0x4000349	          0x4889df	                            mov rdi, rbx	       188	packed-backend.c	FUNCTION_3	IF_1	CALL_2
0x400034c	      0xe879ffffff	          call sym.clear_snapshot_buffer	       188	packed-backend.c	FUNCTION_3	IF_1	CALL_2
0x4000351	          0x4889df	                            mov rdi, rbx	       189	packed-backend.c	FUNCTION_3	IF_1	CALL_3
0x4000354	      0xe800000000	                          call 0x4000359	       189	packed-backend.c	FUNCTION_3	IF_1	CALL_3
0x4000359	      0xb801000000	                              mov eax, 1	       190	packed-backend.c	FUNCTION_3	IF_1
0x400035e	              0x5b	                                 pop rbx	       194	packed-backend.c	FUNCTION_3
0x400035f	            0xf3c3	                                     ret	       194	packed-backend.c	FUNCTION_3
packed_reflog_iterator_begin	FOR,0:CALL,1:DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:functions,0	4
0x40003fb	        0x4883ec08	                              sub rsp, 8	      1584	packed-backend.c	FUNCTION_43
0x40003ff	      0xe800000000	                          call 0x4000404	      1585	packed-backend.c	FUNCTION_43	CALL_1
0x4000404	        0x4883c408	                              add rsp, 8	      1586	packed-backend.c	FUNCTION_43
0x4000408	              0xc3	                                     ret	      1586	packed-backend.c	FUNCTION_43
packed_create_reflog	FOR,0:CALL,1:DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:functions,0	4
0x400027e	        0x4883ec08	                              sub rsp, 8	      1612	packed-backend.c	FUNCTION_47
0x4000282	      0xbf00000000	                              mov edi, 0	      1613	packed-backend.c	FUNCTION_47	CALL_1
0x4000287	      0xb800000000	                              mov eax, 0	      1613	packed-backend.c	FUNCTION_47	CALL_1
0x400028c	      0xe800000000	                call sym.packed_copy_ref	      1613	packed-backend.c	FUNCTION_47	CALL_1
validate_snapshot	FOR,0:CALL,2:DO,0:SWITCH,0:ELSE,0:IF,1:WHILE,0:functions,0	17
0x4000361	        0x488b4718	            mov rax, qword [rdi + 0x18] 	       700	packed-backend.c	FUNCTION_18	IF_1
0x4000365	          0x4885c0	                           test rax, rax	       700	packed-backend.c	FUNCTION_18	IF_1
0x4000368	            0x742c	                            je 0x4000396	       700	packed-backend.c	FUNCTION_18	IF_1
0x400036a	              0x53	                                push rbx	       699	packed-backend.c	FUNCTION_18
0x400036b	          0x4889fb	                            mov rbx, rdi	       699	packed-backend.c	FUNCTION_18
0x400036e	        0x488b7710	            mov rsi, qword [rdi + 0x10] 	       701	packed-backend.c	FUNCTION_18	IF_1	CALL_1
0x4000372	        0x488d7830	                   lea rdi, [rax + 0x30]	       701	packed-backend.c	FUNCTION_18	IF_1	CALL_1
0x4000376	      0xe800000000	                          call 0x400037b	       701	packed-backend.c	FUNCTION_18	IF_1	CALL_1
0x400037b	            0x85c0	                           test eax, eax	       700	packed-backend.c	FUNCTION_18	IF_1
0x400037d	            0x7516	                           jne 0x4000395	       700	packed-backend.c	FUNCTION_18	IF_1
0x400037f	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       238	packed-backend.c	FUNCTION_6	IF_1
0x4000383	          0x4885ff	                           test rdi, rdi	       238	packed-backend.c	FUNCTION_6	IF_1
0x4000386	            0x740d	                            je 0x4000395	       238	packed-backend.c	FUNCTION_6	IF_1
0x4000388	    0x48c743180000	               mov qword [rbx + 0x18], 0	       241	packed-backend.c	FUNCTION_6	IF_1
0x4000390	      0xe895ffffff	               call sym.release_snapshot	       242	packed-backend.c	FUNCTION_6	IF_1	CALL_1
0x4000395	              0x5b	                                 pop rbx	       703	packed-backend.c	FUNCTION_18
0x4000396	            0xf3c3	                                     ret	       703	packed-backend.c	FUNCTION_18
die_invalid_line	FOR,0:CALL,4:DO,0:SWITCH,0:ELSE,2:IF,2:WHILE,0:functions,0	29
0x4000398	            0x4154	                                push r12	       257	packed-backend.c	FUNCTION_8
0x400039a	              0x55	                                push rbp	       257	packed-backend.c	FUNCTION_8
0x400039b	              0x53	                                push rbx	       257	packed-backend.c	FUNCTION_8
0x400039c	          0x4989fc	                            mov r12, rdi	       257	packed-backend.c	FUNCTION_8
0x400039f	          0x4889f3	                            mov rbx, rsi	       257	packed-backend.c	FUNCTION_8
0x40003a2	          0x4889d5	                            mov rbp, rdx	       257	packed-backend.c	FUNCTION_8
0x40003a5	      0xbe0a000000	                            mov esi, 0xa	       258	packed-backend.c	FUNCTION_8	CALL_1
0x40003aa	          0x4889df	                            mov rdi, rbx	       258	packed-backend.c	FUNCTION_8	CALL_1
0x40003ad	      0xe800000000	                          call 0x40003b2	       258	packed-backend.c	FUNCTION_8	CALL_1
0x40003b2	          0x4885c0	                           test rax, rax	       260	packed-backend.c	FUNCTION_8	IF_1
0x40003b5	            0x750e	                           jne 0x40003c5	       260	packed-backend.c	FUNCTION_8	IF_1
0x40003b7	          0x4889ea	                            mov rdx, rbp	       261	packed-backend.c	FUNCTION_8	CALL_2
0x40003ba	          0x4889de	                            mov rsi, rbx	       261	packed-backend.c	FUNCTION_8	CALL_2
0x40003bd	          0x4c89e7	                            mov rdi, r12	       261	packed-backend.c	FUNCTION_8	CALL_2
0x40003c0	      0xe885feffff	          call sym.die_unterminated_line	       261	packed-backend.c	FUNCTION_8	CALL_2
0x40003c5	          0x4829d8	                            sub rax, rbx	       262	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x40003c8	          0x4889c2	                            mov rdx, rax	       262	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x40003cb	        0x4883f84f	                           cmp rax, 0x4f	       262	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x40003cf	            0x7f15	                            jg 0x40003e6	       262	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x40003d1	          0x4889d9	                            mov rcx, rbx	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x40003d4	          0x4c89e6	                            mov rsi, r12	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x40003d7	      0xbf00000000	                              mov edi, 0	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x40003dc	      0xb800000000	                              mov eax, 0	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x40003e1	      0xe800000000	                          call 0x40003e6	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x40003e6	          0x4889da	                            mov rdx, rbx	       265	packed-backend.c	FUNCTION_8	CALL_4
0x40003e9	          0x4c89e6	                            mov rsi, r12	       265	packed-backend.c	FUNCTION_8	CALL_4
0x40003ec	      0xbf00000000	                              mov edi, 0	       265	packed-backend.c	FUNCTION_8	CALL_4
0x40003f1	      0xb800000000	                              mov eax, 0	       265	packed-backend.c	FUNCTION_8	CALL_4
0x40003f6	      0xe800000000	   call sym.packed_reflog_iterator_begin	       265	packed-backend.c	FUNCTION_8	CALL_4
packed_ref_iterator_peel	FOR,0:CALL,3:DO,0:SWITCH,0:ELSE,2:IF,2:WHILE,0:functions,0	30
0x400042e	        0x4883ec08	                              sub rsp, 8	       880	packed-backend.c	FUNCTION_23
0x4000432	          0x8b5720	            mov edx, dword [rdi + 0x20] 	       884	packed-backend.c	FUNCTION_23	IF_1
0x4000435	          0xf6c240	                           test dl, 0x40	       884	packed-backend.c	FUNCTION_23	IF_1
0x4000438	            0x7437	                            je 0x4000471	       884	packed-backend.c	FUNCTION_23	IF_1
0x400043a	        0x488d4754	                   lea rax, [rdi + 0x54]	      1000	cache.h	FUNCTION_80	CALL_1
0x400043e	        0x488b5754	            mov rdx, qword [rdi + 0x54] 	        53	string3.h	FUNCTION_106	CALL_3
0x4000442	          0x488916	                    mov qword [rsi], rdx	        53	string3.h	FUNCTION_106	CALL_3
0x4000445	        0x488b575c	            mov rdx, qword [rdi + 0x5c] 	        53	string3.h	FUNCTION_106	CALL_3
0x4000449	        0x48895608	                mov qword [rsi + 8], rdx	        53	string3.h	FUNCTION_106	CALL_3
0x400044d	          0x8b5764	            mov edx, dword [rdi + 0x64] 	        53	string3.h	FUNCTION_106	CALL_3
0x4000450	          0x895610	             mov dword [rsi + 0x10], edx	        53	string3.h	FUNCTION_106	CALL_3
0x4000453	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_75	CALL_1
0x4000458	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_75	CALL_1
0x400045d	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_75	CALL_1
0x4000460	      0xe800000000	                          call 0x4000465	       975	cache.h	FUNCTION_75	CALL_1
0x4000465	            0x85c0	                           test eax, eax	       886	packed-backend.c	FUNCTION_23	IF_1	CALL_2
0x4000467	           0xf94c0	                                 sete al	       886	packed-backend.c	FUNCTION_23	IF_1	CALL_2
0x400046a	           0xfb6c0	                           movzx eax, al	       886	packed-backend.c	FUNCTION_23	IF_1	CALL_2
0x400046d	            0xf7d8	                                 neg eax	       886	packed-backend.c	FUNCTION_23	IF_1	CALL_2
0x400046f	            0xeb1b	                           jmp 0x400048c	       886	packed-backend.c	FUNCTION_23	IF_1	CALL_2
0x4000471	      0xb8ffffffff	                     mov eax, 0xffffffff	       888	packed-backend.c	FUNCTION_23	ELSE_1	IF_2
0x4000476	          0xf6c205	                              test dl, 5	       887	packed-backend.c	FUNCTION_23	ELSE_1	IF_2
0x4000479	            0x7511	                           jne 0x400048c	       887	packed-backend.c	FUNCTION_23	ELSE_1	IF_2
0x400047b	        0x4883c740	                           add rdi, 0x40	       890	packed-backend.c	FUNCTION_23	ELSE_2	CALL_3
0x400047f	      0xe800000000	                          call 0x4000484	       890	packed-backend.c	FUNCTION_23	ELSE_2	CALL_3
0x4000484	            0x85c0	                           test eax, eax	       890	packed-backend.c	FUNCTION_23	ELSE_2	CALL_3
0x4000486	           0xf95c0	                                setne al	       890	packed-backend.c	FUNCTION_23	ELSE_2	CALL_3
0x4000489	           0xfb6c0	                           movzx eax, al	       890	packed-backend.c	FUNCTION_23	ELSE_2	CALL_3
0x400048c	        0x4883c408	                              add rsp, 8	       892	packed-backend.c	FUNCTION_23
0x4000490	              0xc3	                                     ret	       892	packed-backend.c	FUNCTION_23
packed_delete_reflog	FOR,0:CALL,0:DO,0:SWITCH,0:ELSE,0:IF,0:WHILE,0:functions,0	2
0x40001a3	      0xb800000000	                              mov eax, 0	      1620	packed-backend.c	FUNCTION_48
0x40001a8	              0xc3	                                     ret	      1620	packed-backend.c	FUNCTION_48
