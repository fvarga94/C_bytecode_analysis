parse_list_objects_filter	WHILE,0:DO,0:FOR,0:SWITCH,0:ELSE,0:CALL,2:IF,1:functions,0	22
0x4000270	        0x4883ec28	                           sub rsp, 0x28	        84	list-objects-filter-options.c	FUNCTION_2
0x4000274	          0x4889e2	                            mov rdx, rsp	        86	list-objects-filter-options.c	FUNCTION_2	IF_1	CALL_1
0x4000277	    0x48c704240000	                      mov qword [rsp], 0	        85	list-objects-filter-options.c	FUNCTION_2
0x400027f	    0x48c744240800	                  mov qword [rsp + 8], 0	        85	list-objects-filter-options.c	FUNCTION_2
0x4000288	    0x64488b042528	                mov rax, qword fs:[0x28]	        84	list-objects-filter-options.c	FUNCTION_2
0x4000291	      0x4889442418	             mov qword [rsp + 0x18], rax	        84	list-objects-filter-options.c	FUNCTION_2
0x4000296	            0x31c0	                            xor eax, eax	        84	list-objects-filter-options.c	FUNCTION_2
0x4000298	    0x48c744241000	               mov qword [rsp + 0x10], 0	        85	list-objects-filter-options.c	FUNCTION_2
0x40002a1	      0xe89afdffff	call sym.gently_parse_list_objects_filter	        86	list-objects-filter-options.c	FUNCTION_2	IF_1	CALL_1
0x40002a6	            0x85c0	                           test eax, eax	        86	list-objects-filter-options.c	FUNCTION_2	IF_1	CALL_1
0x40002a8	            0x7517	                           jne 0x40002c1	        86	list-objects-filter-options.c	FUNCTION_2	IF_1	CALL_1
0x40002aa	            0x31c0	                            xor eax, eax	        89	list-objects-filter-options.c	FUNCTION_2
0x40002ac	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	        89	list-objects-filter-options.c	FUNCTION_2
0x40002b1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        89	list-objects-filter-options.c	FUNCTION_2
0x40002ba	            0x7516	                           jne 0x40002d2	        89	list-objects-filter-options.c	FUNCTION_2
0x40002bc	        0x4883c428	                           add rsp, 0x28	        89	list-objects-filter-options.c	FUNCTION_2
0x40002c0	              0xc3	                                     ret	        89	list-objects-filter-options.c	FUNCTION_2
0x40002c1	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        87	list-objects-filter-options.c	FUNCTION_2	CALL_2
0x40002c6	      0xbf00000000	                              mov edi, 0	        87	list-objects-filter-options.c	FUNCTION_2	CALL_2
0x40002cb	            0x31c0	                            xor eax, eax	        87	list-objects-filter-options.c	FUNCTION_2	CALL_2
0x40002cd	      0xe800000000	                          call 0x40002d2	        87	list-objects-filter-options.c	FUNCTION_2	CALL_2
0x40002d2	      0xe800000000	                          call 0x40002d7	        89	list-objects-filter-options.c	FUNCTION_2
partial_clone_register	WHILE,0:DO,0:FOR,0:SWITCH,0:ELSE,0:CALL,8:IF,1:functions,0	38
0x4000360	              0x55	                                push rbp	       116	list-objects-filter-options.c	FUNCTION_5
0x4000361	              0x53	                                push rbx	       116	list-objects-filter-options.c	FUNCTION_5
0x4000362	          0x4889f5	                            mov rbp, rsi	       116	list-objects-filter-options.c	FUNCTION_5
0x4000365	          0x4889fb	                            mov rbx, rdi	       116	list-objects-filter-options.c	FUNCTION_5
0x4000368	        0x4883ec08	                              sub rsp, 8	       116	list-objects-filter-options.c	FUNCTION_5
0x400036c	    0x488b35000000	            mov rsi, qword [0x04000373] 	       123	list-objects-filter-options.c	FUNCTION_5	IF_1
0x4000373	          0x4885f6	                           test rsi, rsi	       123	list-objects-filter-options.c	FUNCTION_5	IF_1
0x4000376	            0x740e	                            je 0x4000386	       123	list-objects-filter-options.c	FUNCTION_5	IF_1
0x4000378	          0x803e00	                       cmp byte [rsi], 0	       123	list-objects-filter-options.c	FUNCTION_5	IF_1
0x400037b	            0x7409	                            je 0x4000386	       123	list-objects-filter-options.c	FUNCTION_5	IF_1
0x400037d	      0xe800000000	                          call 0x4000382	       125	list-objects-filter-options.c	FUNCTION_5	IF_1	CALL_1
0x4000382	            0x85c0	                           test eax, eax	       124	list-objects-filter-options.c	FUNCTION_5	IF_1
0x4000384	            0x754e	                           jne 0x40003d4	       124	list-objects-filter-options.c	FUNCTION_5	IF_1
0x4000386	      0xbe00000000	                              mov esi, 0	       128	list-objects-filter-options.c	FUNCTION_5	CALL_4
0x400038b	      0xbf00000000	                              mov edi, 0	       128	list-objects-filter-options.c	FUNCTION_5	CALL_4
0x4000390	      0xe800000000	                          call 0x4000395	       128	list-objects-filter-options.c	FUNCTION_5	CALL_4
0x4000395	          0x4889de	                            mov rsi, rbx	       129	list-objects-filter-options.c	FUNCTION_5	CALL_5
0x4000398	      0xbf00000000	                              mov edi, 0	       129	list-objects-filter-options.c	FUNCTION_5	CALL_5
0x400039d	      0xe800000000	                          call 0x40003a2	       129	list-objects-filter-options.c	FUNCTION_5	CALL_5
0x40003a2	          0x4889df	                            mov rdi, rbx	       131	list-objects-filter-options.c	FUNCTION_5	CALL_6
0x40003a5	      0xe800000000	                          call 0x40003aa	       131	list-objects-filter-options.c	FUNCTION_5	CALL_6
0x40003aa	        0x488b7d00	                    mov rdi, qword [rbp]	       138	list-objects-filter-options.c	FUNCTION_5	CALL_7
0x40003ae	    0x488905000000	            mov qword [0x040003b5], rax 	       131	list-objects-filter-options.c	FUNCTION_5	CALL_6
0x40003b5	      0xe800000000	                          call 0x40003ba	       138	list-objects-filter-options.c	FUNCTION_5	CALL_7
0x40003ba	    0x488905000000	            mov qword [0x040003c1], rax 	       137	list-objects-filter-options.c	FUNCTION_5
0x40003c1	        0x4883c408	                              add rsp, 8	       141	list-objects-filter-options.c	FUNCTION_5
0x40003c5	          0x4889c6	                            mov rsi, rax	       139	list-objects-filter-options.c	FUNCTION_5	CALL_8
0x40003c8	              0x5b	                                 pop rbx	       141	list-objects-filter-options.c	FUNCTION_5
0x40003c9	              0x5d	                                 pop rbp	       141	list-objects-filter-options.c	FUNCTION_5
0x40003ca	      0xbf00000000	                              mov edi, 0	       139	list-objects-filter-options.c	FUNCTION_5	CALL_8
0x40003cf	      0xe900000000	                           jmp 0x40003d4	       139	list-objects-filter-options.c	FUNCTION_5	CALL_8
0x40003d4	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_9	CALL_2
0x40003d6	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_9	CALL_2
0x40003db	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_9	CALL_2
0x40003e0	      0xe800000000	                          call 0x40003e5	        54	gettext.h	FUNCTION_9	CALL_2
0x40003e5	          0x4889c7	                            mov rdi, rax	       126	list-objects-filter-options.c	FUNCTION_5	CALL_3
0x40003e8	            0x31c0	                            xor eax, eax	       126	list-objects-filter-options.c	FUNCTION_5	CALL_3
0x40003ea	      0xe800000000	                          call 0x40003ef	       126	list-objects-filter-options.c	FUNCTION_5	CALL_3
opt_parse_list_objects_filter	WHILE,0:DO,0:FOR,0:SWITCH,0:ELSE,0:CALL,2:IF,1:functions,0	15
0x4000330	              0x53	                                push rbx	        93	list-objects-filter-options.c	FUNCTION_3
0x4000331	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	        94	list-objects-filter-options.c	FUNCTION_3
0x4000335	            0x85d2	                           test edx, edx	        96	list-objects-filter-options.c	FUNCTION_3	IF_1
0x4000337	          0x4889df	                            mov rdi, rbx	       101	list-objects-filter-options.c	FUNCTION_3	CALL_2
0x400033a	            0x7514	                           jne 0x4000350	        96	list-objects-filter-options.c	FUNCTION_3	IF_1
0x400033c	          0x4885f6	                           test rsi, rsi	        96	list-objects-filter-options.c	FUNCTION_3	IF_1
0x400033f	            0x740f	                            je 0x4000350	        96	list-objects-filter-options.c	FUNCTION_3	IF_1
0x4000341	              0x5b	                                 pop rbx	       102	list-objects-filter-options.c	FUNCTION_3
0x4000342	      0xe929ffffff	       jmp sym.parse_list_objects_filter	       101	list-objects-filter-options.c	FUNCTION_3	CALL_2
0x4000347	    0x660f1f840000	                    nop word [rax + rax]	       101	list-objects-filter-options.c	FUNCTION_3	CALL_2
0x4000350	      0xe800000000	                          call 0x4000355	        69	list-objects-filter-options.h	FUNCTION_11	CALL_1
0x4000355	        0x804b0c01	                  or byte [rbx + 0xc], 1	        70	list-objects-filter-options.h	FUNCTION_11
0x4000359	            0x31c0	                            xor eax, eax	       102	list-objects-filter-options.c	FUNCTION_3
0x400035b	              0x5b	                                 pop rbx	       102	list-objects-filter-options.c	FUNCTION_3
0x400035c	              0xc3	                                     ret	       102	list-objects-filter-options.c	FUNCTION_3
list_objects_filter_release	WHILE,0:DO,0:FOR,0:SWITCH,0:ELSE,0:CALL,4:IF,0:functions,0	15
0x40002e0	              0x53	                                push rbx	       106	list-objects-filter-options.c	FUNCTION_4
0x40002e1	          0x4889fb	                            mov rbx, rdi	       106	list-objects-filter-options.c	FUNCTION_4
0x40002e4	          0x488b3f	                    mov rdi, qword [rdi]	       107	list-objects-filter-options.c	FUNCTION_4	CALL_1
0x40002e7	      0xe800000000	                          call 0x40002ec	       107	list-objects-filter-options.c	FUNCTION_4	CALL_1
0x40002ec	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       108	list-objects-filter-options.c	FUNCTION_4	CALL_2
0x40002f0	      0xe800000000	                          call 0x40002f5	       108	list-objects-filter-options.c	FUNCTION_4	CALL_2
0x40002f5	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       109	list-objects-filter-options.c	FUNCTION_4	CALL_3
0x40002f9	      0xe800000000	                          call 0x40002fe	       109	list-objects-filter-options.c	FUNCTION_4	CALL_3
0x40002fe	    0x48c703000000	                      mov qword [rbx], 0	        90	string3.h	FUNCTION_53	CALL_6
0x4000305	    0x48c743080000	                  mov qword [rbx + 8], 0	        90	string3.h	FUNCTION_53	CALL_6
0x400030d	    0x48c743100000	               mov qword [rbx + 0x10], 0	        90	string3.h	FUNCTION_53	CALL_6
0x4000315	    0x48c743180000	               mov qword [rbx + 0x18], 0	        90	string3.h	FUNCTION_53	CALL_6
0x400031d	    0x48c743200000	               mov qword [rbx + 0x20], 0	        90	string3.h	FUNCTION_53	CALL_6
0x4000325	              0x5b	                                 pop rbx	       111	list-objects-filter-options.c	FUNCTION_4
0x4000326	              0xc3	                                     ret	       111	list-objects-filter-options.c	FUNCTION_4
gently_parse_list_objects_filter	WHILE,0:DO,0:FOR,0:SWITCH,0:ELSE,3:CALL,15:IF,9:functions,0	142
0x4000040	            0x4155	                                push r13	        28	list-objects-filter-options.c	FUNCTION_1
0x4000042	            0x4154	                                push r12	        28	list-objects-filter-options.c	FUNCTION_1
0x4000044	          0x4989d4	                            mov r12, rdx	        28	list-objects-filter-options.c	FUNCTION_1
0x4000047	              0x55	                                push rbp	        28	list-objects-filter-options.c	FUNCTION_1
0x4000048	              0x53	                                push rbx	        28	list-objects-filter-options.c	FUNCTION_1
0x4000049	        0x4883ec68	                           sub rsp, 0x68	        28	list-objects-filter-options.c	FUNCTION_1
0x400004d	    0x64488b042528	                mov rax, qword fs:[0x28]	        28	list-objects-filter-options.c	FUNCTION_1
0x4000056	      0x4889442458	             mov qword [rsp + 0x58], rax	        28	list-objects-filter-options.c	FUNCTION_1
0x400005b	            0x31c0	                            xor eax, eax	        28	list-objects-filter-options.c	FUNCTION_1
0x400005d	          0x8b4708	                mov eax, dword [rdi + 8]	        31	list-objects-filter-options.c	FUNCTION_1	IF_1
0x4000060	            0x85c0	                           test eax, eax	        31	list-objects-filter-options.c	FUNCTION_1	IF_1
0x4000062	            0x7464	                            je 0x40000c8	        31	list-objects-filter-options.c	FUNCTION_1	IF_1
0x4000064	          0x4885d2	                           test rdx, rdx	        32	list-objects-filter-options.c	FUNCTION_1	IF_1	IF_2
0x4000067	      0xbb01000000	                              mov ebx, 1	        38	list-objects-filter-options.c	FUNCTION_1	IF_1
0x400006c	            0x7434	                            je 0x40000a2	        32	list-objects-filter-options.c	FUNCTION_1	IF_1	IF_2
0x400006e	          0x4889d7	                            mov rdi, rdx	        33	list-objects-filter-options.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x4000071	            0x31f6	                            xor esi, esi	        33	list-objects-filter-options.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x4000073	      0xe800000000	                          call 0x4000078	        33	list-objects-filter-options.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x4000078	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_9	CALL_2
0x400007d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_9	CALL_2
0x4000082	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_9	CALL_2
0x4000084	      0xe800000000	                          call 0x4000089	        54	gettext.h	FUNCTION_9	CALL_2
0x4000089	          0x4889c5	                            mov rbp, rax	        54	gettext.h	FUNCTION_9	CALL_2
0x400008c	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_16	CALL_2
0x400008f	      0xe800000000	                          call 0x4000094	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000094	          0x4889ee	                            mov rsi, rbp	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000097	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_16	CALL_2
0x400009a	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_16	CALL_2
0x400009d	      0xe800000000	                          call 0x40000a2	       279	strbuf.h	FUNCTION_16	CALL_2
0x40000a2	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	        80	list-objects-filter-options.c	FUNCTION_1
0x40000a7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        80	list-objects-filter-options.c	FUNCTION_1
0x40000b0	            0x89d8	                            mov eax, ebx	        80	list-objects-filter-options.c	FUNCTION_1
0x40000b2	     0xf85a6010000	                           jne 0x400025e	        80	list-objects-filter-options.c	FUNCTION_1
0x40000b8	        0x4883c468	                           add rsp, 0x68	        80	list-objects-filter-options.c	FUNCTION_1
0x40000bc	              0x5b	                                 pop rbx	        80	list-objects-filter-options.c	FUNCTION_1
0x40000bd	              0x5d	                                 pop rbp	        80	list-objects-filter-options.c	FUNCTION_1
0x40000be	            0x415c	                                 pop r12	        80	list-objects-filter-options.c	FUNCTION_1
0x40000c0	            0x415d	                                 pop r13	        80	list-objects-filter-options.c	FUNCTION_1
0x40000c2	              0xc3	                                     ret	        80	list-objects-filter-options.c	FUNCTION_1
0x40000c3	       0xf1f440000	                   nop dword [rax + rax]	        80	list-objects-filter-options.c	FUNCTION_1
0x40000c8	          0x4989f5	                            mov r13, rsi	        80	list-objects-filter-options.c	FUNCTION_1
0x40000cb	          0x4889fd	                            mov rbp, rdi	        80	list-objects-filter-options.c	FUNCTION_1
0x40000ce	          0x4889f7	                            mov rdi, rsi	        41	list-objects-filter-options.c	FUNCTION_1	CALL_4
0x40000d1	      0xe800000000	                          call 0x40000d6	        41	list-objects-filter-options.c	FUNCTION_1	CALL_4
0x40000d6	      0xbf00000000	                              mov edi, 0	        43	list-objects-filter-options.c	FUNCTION_1	IF_3	CALL_5
0x40000db	        0x48894500	                    mov qword [rbp], rax	        41	list-objects-filter-options.c	FUNCTION_1	CALL_4
0x40000df	      0xb90a000000	                            mov ecx, 0xa	        43	list-objects-filter-options.c	FUNCTION_1	IF_3	CALL_5
0x40000e4	          0x4c89ee	                            mov rsi, r13	        43	list-objects-filter-options.c	FUNCTION_1	IF_3	CALL_5
0x40000e7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        43	list-objects-filter-options.c	FUNCTION_1	IF_3	CALL_5
0x40000e9	          0x4c89ef	                            mov rdi, r13	        43	list-objects-filter-options.c	FUNCTION_1	IF_3	CALL_5
0x40000ec	           0xf92c0	                                 setb al	        43	list-objects-filter-options.c	FUNCTION_1	IF_3	CALL_5
0x40000ef	           0xf97c3	                                 seta bl	        43	list-objects-filter-options.c	FUNCTION_1	IF_3	CALL_5
0x40000f2	            0x29c3	                            sub ebx, eax	        43	list-objects-filter-options.c	FUNCTION_1	IF_3	CALL_5
0x40000f4	      0xb800000000	                              mov eax, 0	        43	list-objects-filter-options.c	FUNCTION_1	IF_3	CALL_5
0x40000f9	           0xfbedb	                           movsx ebx, bl	        43	list-objects-filter-options.c	FUNCTION_1	IF_3	CALL_5
0x40000fc	            0x85db	                           test ebx, ebx	        43	list-objects-filter-options.c	FUNCTION_1	IF_3	CALL_5
0x40000fe	            0x751d	                           jne 0x400011d	        43	list-objects-filter-options.c	FUNCTION_1	IF_3	CALL_5
0x4000100	    0xc74508010000	                  mov dword [rbp + 8], 1	        44	list-objects-filter-options.c	FUNCTION_1	IF_3
0x4000107	            0xeb99	                           jmp 0x40000a2	        45	list-objects-filter-options.c	FUNCTION_1	IF_3
0x4000109	     0xf1f80000000	                         nop dword [rax]	        45	list-objects-filter-options.c	FUNCTION_1	IF_3
0x4000110	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_29	DO_1
0x4000114	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_29	DO_1
0x4000118	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_29	DO_1
0x400011b	            0x7573	                           jne 0x4000190	       488	git-compat-util.h	FUNCTION_29	DO_1
0x400011d	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x4000120	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x4000122	            0x75ec	                           jne 0x4000110	       484	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x4000124	        0x488d7520	                   lea rsi, [rbp + 0x20]	        48	list-objects-filter-options.c	FUNCTION_1	ELSE_1	IF_4	IF_5	CALL_7
0x4000128	      0xe800000000	                          call 0x400012d	        48	list-objects-filter-options.c	FUNCTION_1	ELSE_1	IF_4	IF_5	CALL_7
0x400012d	            0x85c0	                           test eax, eax	        48	list-objects-filter-options.c	FUNCTION_1	ELSE_1	IF_4	IF_5	CALL_7
0x400012f	     0xf851b010000	                           jne 0x4000250	        48	list-objects-filter-options.c	FUNCTION_1	ELSE_1	IF_4	IF_5	CALL_7
0x4000135	          0x4d85e4	                           test r12, r12	        74	list-objects-filter-options.c	FUNCTION_1	IF_9
0x4000138	            0x741c	                            je 0x4000156	        74	list-objects-filter-options.c	FUNCTION_1	IF_9
0x400013a	            0x31f6	                            xor esi, esi	        75	list-objects-filter-options.c	FUNCTION_1	IF_9	CALL_13
0x400013c	          0x4c89e7	                            mov rdi, r12	        75	list-objects-filter-options.c	FUNCTION_1	IF_9	CALL_13
0x400013f	      0xe800000000	                          call 0x4000144	        75	list-objects-filter-options.c	FUNCTION_1	IF_9	CALL_13
0x4000144	          0x4c89ea	                            mov rdx, r13	        76	list-objects-filter-options.c	FUNCTION_1	IF_9	CALL_14
0x4000147	      0xbe00000000	                              mov esi, 0	        76	list-objects-filter-options.c	FUNCTION_1	IF_9	CALL_14
0x400014c	          0x4c89e7	                            mov rdi, r12	        76	list-objects-filter-options.c	FUNCTION_1	IF_9	CALL_14
0x400014f	            0x31c0	                            xor eax, eax	        76	list-objects-filter-options.c	FUNCTION_1	IF_9	CALL_14
0x4000151	      0xe800000000	                          call 0x4000156	        76	list-objects-filter-options.c	FUNCTION_1	IF_9	CALL_14
0x4000156	    0x48c745000000	                      mov qword [rbp], 0	        90	string3.h	FUNCTION_53	CALL_6
0x400015e	    0x48c745080000	                  mov qword [rbp + 8], 0	        90	string3.h	FUNCTION_53	CALL_6
0x4000166	      0xbb01000000	                              mov ebx, 1	        79	list-objects-filter-options.c	FUNCTION_1
0x400016b	    0x48c745100000	               mov qword [rbp + 0x10], 0	        90	string3.h	FUNCTION_53	CALL_6
0x4000173	    0x48c745180000	               mov qword [rbp + 0x18], 0	        90	string3.h	FUNCTION_53	CALL_6
0x400017b	    0x48c745200000	               mov qword [rbp + 0x20], 0	        90	string3.h	FUNCTION_53	CALL_6
0x4000183	      0xe91affffff	                           jmp 0x40000a2	        79	list-objects-filter-options.c	FUNCTION_1
0x4000188	     0xf1f84000000	                   nop dword [rax + rax]	        79	list-objects-filter-options.c	FUNCTION_1
0x4000190	          0x4c89ef	                            mov rdi, r13	       488	git-compat-util.h	FUNCTION_29	DO_1
0x4000193	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_29	DO_1
0x4000198	            0xeb13	                           jmp 0x40001ad	       488	git-compat-util.h	FUNCTION_29	DO_1
0x400019a	    0x660f1f440000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_29	DO_1
0x40001a0	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_29	DO_1
0x40001a4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_29	DO_1
0x40001a8	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_29	DO_1
0x40001ab	            0x7533	                           jne 0x40001e0	       488	git-compat-util.h	FUNCTION_29	DO_1
0x40001ad	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x40001b0	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x40001b2	            0x75ec	                           jne 0x40001a0	       484	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x40001b4	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	        62	list-objects-filter-options.c	FUNCTION_1	ELSE_2	IF_6	IF_7	CALL_9
0x40001b9	          0x4889e2	                            mov rdx, rsp	        62	list-objects-filter-options.c	FUNCTION_1	ELSE_2	IF_6	IF_7	CALL_9
0x40001bc	      0xbe20000000	                           mov esi, 0x20	        62	list-objects-filter-options.c	FUNCTION_1	ELSE_2	IF_6	IF_7	CALL_9
0x40001c1	      0xe800000000	                          call 0x40001c6	        62	list-objects-filter-options.c	FUNCTION_1	ELSE_2	IF_6	IF_7	CALL_9
0x40001c6	            0x85c0	                           test eax, eax	        62	list-objects-filter-options.c	FUNCTION_1	ELSE_2	IF_6	IF_7	CALL_9
0x40001c8	            0x7456	                            je 0x4000220	        62	list-objects-filter-options.c	FUNCTION_1	ELSE_2	IF_6	IF_7	CALL_9
0x40001ca	    0xc74508030000	                  mov dword [rbp + 8], 3	        65	list-objects-filter-options.c	FUNCTION_1	ELSE_2	IF_6
0x40001d1	            0x31db	                            xor ebx, ebx	        66	list-objects-filter-options.c	FUNCTION_1	ELSE_2	IF_6
0x40001d3	      0xe9cafeffff	                           jmp 0x40000a2	        66	list-objects-filter-options.c	FUNCTION_1	ELSE_2	IF_6
0x40001d8	     0xf1f84000000	                   nop dword [rax + rax]	        66	list-objects-filter-options.c	FUNCTION_1	ELSE_2	IF_6
0x40001e0	          0x4c89ef	                            mov rdi, r13	       488	git-compat-util.h	FUNCTION_29	DO_1
0x40001e3	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_29	DO_1
0x40001e8	            0xeb17	                           jmp 0x4000201	       488	git-compat-util.h	FUNCTION_29	DO_1
0x40001ea	    0x660f1f440000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_29	DO_1
0x40001f0	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_29	DO_1
0x40001f4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_29	DO_1
0x40001f8	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_29	DO_1
0x40001fb	     0xf8534ffffff	                           jne 0x4000135	       488	git-compat-util.h	FUNCTION_29	DO_1
0x4000201	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x4000204	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x4000206	            0x75e8	                           jne 0x40001f0	       484	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x4000208	    0xc74508040000	                  mov dword [rbp + 8], 4	        69	list-objects-filter-options.c	FUNCTION_1	ELSE_3	IF_8
0x400020f	            0x31db	                            xor ebx, ebx	        71	list-objects-filter-options.c	FUNCTION_1	ELSE_3	IF_8
0x4000211	      0xe800000000	                          call 0x4000216	        70	list-objects-filter-options.c	FUNCTION_1	ELSE_3	IF_8	CALL_12
0x4000216	        0x48894518	            mov qword [rbp + 0x18], rax 	        70	list-objects-filter-options.c	FUNCTION_1	ELSE_3	IF_8	CALL_12
0x400021a	      0xe983feffff	                           jmp 0x40000a2	        71	list-objects-filter-options.c	FUNCTION_1	ELSE_3	IF_8
0x400021f	              0x90	                                     nop	        71	list-objects-filter-options.c	FUNCTION_1	ELSE_3	IF_8
0x4000220	      0xbf14000000	                           mov edi, 0x14	      1005	cache.h	FUNCTION_75	CALL_1
0x4000225	      0xe800000000	                          call 0x400022a	      1005	cache.h	FUNCTION_75	CALL_1
0x400022a	        0x488b1424	                    mov rdx, qword [rsp]	        53	string3.h	FUNCTION_50	CALL_3
0x400022e	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_50	CALL_3
0x4000231	      0x488b542408	                mov rdx, qword [rsp + 8]	        53	string3.h	FUNCTION_50	CALL_3
0x4000236	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_50	CALL_3
0x400023a	        0x8b542410	            mov edx, dword [rsp + 0x10] 	        53	string3.h	FUNCTION_50	CALL_3
0x400023e	          0x895010	             mov dword [rax + 0x10], edx	        53	string3.h	FUNCTION_50	CALL_3
0x4000241	        0x48894510	            mov qword [rbp + 0x10], rax 	        64	list-objects-filter-options.c	FUNCTION_1	ELSE_2	IF_6	CALL_10
0x4000245	            0xeb83	                           jmp 0x40001ca	        64	list-objects-filter-options.c	FUNCTION_1	ELSE_2	IF_6	CALL_10
0x4000247	    0x660f1f840000	                    nop word [rax + rax]	        64	list-objects-filter-options.c	FUNCTION_1	ELSE_2	IF_6	CALL_10
0x4000250	    0xc74508020000	                  mov dword [rbp + 8], 2	        49	list-objects-filter-options.c	FUNCTION_1	ELSE_1	IF_4	IF_5
0x4000257	            0x31db	                            xor ebx, ebx	        50	list-objects-filter-options.c	FUNCTION_1	ELSE_1	IF_4	IF_5
0x4000259	      0xe944feffff	                           jmp 0x40000a2	        50	list-objects-filter-options.c	FUNCTION_1	ELSE_1	IF_4	IF_5
0x400025e	      0xe800000000	                          call 0x4000263	        80	list-objects-filter-options.c	FUNCTION_1
partial_clone_get_default_filter_spec	WHILE,0:DO,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:IF,0:functions,0	3
0x40003f0	    0x488b35000000	            mov rsi, qword [0x040003f7] 	       149	list-objects-filter-options.c	FUNCTION_6	CALL_1
0x40003f7	            0x31d2	                            xor edx, edx	       149	list-objects-filter-options.c	FUNCTION_6	CALL_1
0x40003f9	      0xe942fcffff	jmp sym.gently_parse_list_objects_filter	       149	list-objects-filter-options.c	FUNCTION_6	CALL_1
