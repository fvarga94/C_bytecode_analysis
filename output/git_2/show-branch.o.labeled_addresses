append_ref	FOR,1:SWITCH,0:CALL,5:ELSE,0:functions,0:WHILE,0:IF,4:DO,0	54
0x4000284	            0x4154	                                push r12	       362	show-branch.c	FUNCTION_15
0x4000286	              0x55	                                push rbp	       362	show-branch.c	FUNCTION_15
0x4000287	              0x53	                                push rbx	       362	show-branch.c	FUNCTION_15
0x4000288	          0x4889fd	                            mov rbp, rdi	       362	show-branch.c	FUNCTION_15
0x400028b	          0x4889f7	                            mov rdi, rsi	       362	show-branch.c	FUNCTION_15
0x400028e	            0x89d3	                            mov ebx, edx	       362	show-branch.c	FUNCTION_15
0x4000290	      0xbe01000000	                              mov esi, 1	       363	show-branch.c	FUNCTION_15	CALL_1
0x4000295	      0xe800000000	                          call 0x400029a	       363	show-branch.c	FUNCTION_15	CALL_1
0x400029a	          0x4885c0	                           test rax, rax	       366	show-branch.c	FUNCTION_15	IF_1
0x400029d	     0xf84a6000000	                            je 0x4000349	       366	show-branch.c	FUNCTION_15	IF_1
0x40002a3	            0x85db	                           test ebx, ebx	       369	show-branch.c	FUNCTION_15	IF_2
0x40002a5	            0x7532	                           jne 0x40002d9	       369	show-branch.c	FUNCTION_15	IF_2
0x40002a7	    0x8b0500000000	            mov eax, dword [0x040002ad] 	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x40002ad	            0x85c0	                           test eax, eax	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x40002af	            0x7e28	                           jle 0x40002d9	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x40002b1	      0xbb00000000	                              mov ebx, 0	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x40002b6	          0x8d40ff	                      lea eax, [rax - 1]	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x40002b9	    0x4c8d24c50000	                        lea r12, [rax*8]	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x40002c1	          0x488b33	                    mov rsi, qword [rbx]	       372	show-branch.c	FUNCTION_15	IF_2	FOR_1	IF_3	CALL_2
0x40002c4	          0x4889ef	                            mov rdi, rbp	       372	show-branch.c	FUNCTION_15	IF_2	FOR_1	IF_3	CALL_2
0x40002c7	      0xe800000000	                          call 0x40002cc	       372	show-branch.c	FUNCTION_15	IF_2	FOR_1	IF_3	CALL_2
0x40002cc	            0x85c0	                           test eax, eax	       372	show-branch.c	FUNCTION_15	IF_2	FOR_1	IF_3	CALL_2
0x40002ce	            0x7479	                            je 0x4000349	       372	show-branch.c	FUNCTION_15	IF_2	FOR_1	IF_3	CALL_2
0x40002d0	        0x4883c308	                              add rbx, 8	       372	show-branch.c	FUNCTION_15	IF_2	FOR_1	IF_3	CALL_2
0x40002d4	          0x4c39e3	                            cmp rbx, r12	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x40002d7	            0x75e8	                           jne 0x40002c1	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x40002d9	    0x8b1d00000000	            mov ebx, dword [0x040002df] 	       375	show-branch.c	FUNCTION_15	IF_4
0x40002df	          0x83fb18	                           cmp ebx, 0x18	       375	show-branch.c	FUNCTION_15	IF_4
0x40002e2	            0x7e36	                           jle 0x400031a	       375	show-branch.c	FUNCTION_15	IF_4
0x40002e4	    0x41b805000000	                              mov r8d, 5	        62	gettext.h	FUNCTION_32
0x40002ea	      0xb919000000	                           mov ecx, 0x19	        62	gettext.h	FUNCTION_32
0x40002ef	      0xba00000000	                              mov edx, 0	        62	gettext.h	FUNCTION_32
0x40002f4	      0xbe00000000	                              mov esi, 0	        62	gettext.h	FUNCTION_32
0x40002f9	      0xbf00000000	                              mov edi, 0	        62	gettext.h	FUNCTION_32
0x40002fe	      0xe800000000	                          call 0x4000303	        62	gettext.h	FUNCTION_32
0x4000303	      0xba19000000	                           mov edx, 0x19	       376	show-branch.c	FUNCTION_15	IF_4	CALL_4
0x4000308	          0x4889ee	                            mov rsi, rbp	       376	show-branch.c	FUNCTION_15	IF_4	CALL_4
0x400030b	          0x4889c7	                            mov rdi, rax	       376	show-branch.c	FUNCTION_15	IF_4	CALL_4
0x400030e	      0xb800000000	                              mov eax, 0	       376	show-branch.c	FUNCTION_15	IF_4	CALL_4
0x4000313	      0xe800000000	                          call 0x4000318	       376	show-branch.c	FUNCTION_15	IF_4	CALL_4
0x4000318	            0xeb2f	                           jmp 0x4000349	       379	show-branch.c	FUNCTION_15	IF_4
0x400031a	          0x8d4301	                      lea eax, [rbx + 1]	       381	show-branch.c	FUNCTION_15	CALL_5
0x400031d	    0x890500000000	            mov dword [0x04000323], eax 	       381	show-branch.c	FUNCTION_15	CALL_5
0x4000323	          0x4889ef	                            mov rdi, rbp	       381	show-branch.c	FUNCTION_15	CALL_5
0x4000326	      0xe800000000	                          call 0x400032b	       381	show-branch.c	FUNCTION_15	CALL_5
0x400032b	          0x4863db	                         movsxd rbx, ebx	       381	show-branch.c	FUNCTION_15	CALL_5
0x400032e	    0x488904dd0000	                  mov qword [rbx*8], rax	       381	show-branch.c	FUNCTION_15	CALL_5
0x4000336	    0x486305000000	         movsxd rax, dword [0x0400033d] 	       382	show-branch.c	FUNCTION_15
0x400033d	    0x48c704c50000	                    mov qword [rax*8], 0	       382	show-branch.c	FUNCTION_15
0x4000349	      0xb800000000	                              mov eax, 0	       384	show-branch.c	FUNCTION_15
0x400034e	              0x5b	                                 pop rbx	       384	show-branch.c	FUNCTION_15
0x400034f	              0x5d	                                 pop rbp	       384	show-branch.c	FUNCTION_15
0x4000350	            0x415c	                                 pop r12	       384	show-branch.c	FUNCTION_15
0x4000352	              0xc3	                                     ret	       384	show-branch.c	FUNCTION_15
append_one_rev	FOR,0:SWITCH,0:CALL,10:ELSE,0:functions,0:WHILE,0:IF,3:DO,0	68
0x4000540	              0x55	                                push rbp	       515	show-branch.c	FUNCTION_24
0x4000541	              0x53	                                push rbx	       515	show-branch.c	FUNCTION_24
0x4000542	        0x4883ec28	                           sub rsp, 0x28	       515	show-branch.c	FUNCTION_24
0x4000546	          0x4889fb	                            mov rbx, rdi	       515	show-branch.c	FUNCTION_24
0x4000549	    0x64488b042528	                mov rax, qword fs:[0x28]	       515	show-branch.c	FUNCTION_24
0x4000552	      0x4889442418	             mov qword [rsp + 0x18], rax	       515	show-branch.c	FUNCTION_24
0x4000557	            0x31c0	                            xor eax, eax	       515	show-branch.c	FUNCTION_24
0x4000559	          0x4889e6	                            mov rsi, rsp	       517	show-branch.c	FUNCTION_24	IF_1	CALL_1
0x400055c	      0xe800000000	                          call 0x4000561	       517	show-branch.c	FUNCTION_24	IF_1	CALL_1
0x4000561	            0x85c0	                           test eax, eax	       517	show-branch.c	FUNCTION_24	IF_1	CALL_1
0x4000563	            0x7515	                           jne 0x400057a	       517	show-branch.c	FUNCTION_24	IF_1	CALL_1
0x4000565	      0xba00000000	                              mov edx, 0	       518	show-branch.c	FUNCTION_24	IF_1	CALL_2
0x400056a	          0x4889e6	                            mov rsi, rsp	       518	show-branch.c	FUNCTION_24	IF_1	CALL_2
0x400056d	          0x4889df	                            mov rdi, rbx	       518	show-branch.c	FUNCTION_24	IF_1	CALL_2
0x4000570	      0xe80ffdffff	                     call sym.append_ref	       518	show-branch.c	FUNCTION_24	IF_1	CALL_2
0x4000575	      0xe9b4000000	                           jmp 0x400062e	       519	show-branch.c	FUNCTION_24	IF_1
0x400057a	      0xbe2a000000	                           mov esi, 0x2a	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x400057f	          0x4889df	                            mov rdi, rbx	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000582	      0xe800000000	                          call 0x4000587	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000587	          0x4885c0	                           test rax, rax	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x400058a	            0x7524	                           jne 0x40005b0	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x400058c	      0xbe3f000000	                           mov esi, 0x3f	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000591	          0x4889df	                            mov rdi, rbx	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000594	      0xe800000000	                          call 0x4000599	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000599	          0x4885c0	                           test rax, rax	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x400059c	            0x7512	                           jne 0x40005b0	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x400059e	      0xbe5b000000	                           mov esi, 0x5b	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x40005a3	          0x4889df	                            mov rdi, rbx	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x40005a6	      0xe800000000	                          call 0x40005ab	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x40005ab	          0x4885c0	                           test rax, rax	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x40005ae	            0x746c	                            je 0x400061c	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x40005b0	    0x8b2d00000000	            mov ebp, dword [0x040005b6] 	       523	show-branch.c	FUNCTION_24	IF_2
0x40005b6	    0x48891d000000	            mov qword [0x040005bd], rbx 	       525	show-branch.c	FUNCTION_24	IF_2
0x40005bd	          0x4889df	                            mov rdi, rbx	       526	show-branch.c	FUNCTION_24	IF_2	CALL_6
0x40005c0	      0xe800000000	                          call 0x40005c5	       526	show-branch.c	FUNCTION_24	IF_2	CALL_6
0x40005c5	    0x890500000000	            mov dword [0x040005cb], eax 	       526	show-branch.c	FUNCTION_24	IF_2	CALL_6
0x40005cb	      0xbe00000000	                              mov esi, 0	       527	show-branch.c	FUNCTION_24	IF_2	CALL_7
0x40005d0	      0xbf00000000	                              mov edi, 0	       527	show-branch.c	FUNCTION_24	IF_2	CALL_7
0x40005d5	      0xe800000000	                          call 0x40005da	       527	show-branch.c	FUNCTION_24	IF_2	CALL_7
0x40005da	    0x8b0500000000	            mov eax, dword [0x040005e0] 	       528	show-branch.c	FUNCTION_24	IF_2	IF_3
0x40005e0	          0x83f818	                           cmp eax, 0x18	       528	show-branch.c	FUNCTION_24	IF_2	IF_3
0x40005e3	            0x7f28	                            jg 0x400060d	       528	show-branch.c	FUNCTION_24	IF_2	IF_3
0x40005e5	            0x39c5	                            cmp ebp, eax	       528	show-branch.c	FUNCTION_24	IF_2	IF_3
0x40005e7	            0x7524	                           jne 0x400060d	       528	show-branch.c	FUNCTION_24	IF_2	IF_3
0x40005e9	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_31
0x40005ee	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_31
0x40005f3	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_31
0x40005f8	      0xe800000000	                          call 0x40005fd	        54	gettext.h	FUNCTION_31
0x40005fd	          0x4889de	                            mov rsi, rbx	       530	show-branch.c	FUNCTION_24	IF_2	CALL_8
0x4000600	          0x4889c7	                            mov rdi, rax	       530	show-branch.c	FUNCTION_24	IF_2	CALL_8
0x4000603	      0xb800000000	                              mov eax, 0	       530	show-branch.c	FUNCTION_24	IF_2	CALL_8
0x4000608	      0xe800000000	                          call 0x400060d	       530	show-branch.c	FUNCTION_24	IF_2	CALL_8
0x400060d	    0x8b3500000000	            mov esi, dword [0x04000613] 	       531	show-branch.c	FUNCTION_24	IF_2	CALL_9
0x4000613	            0x89ef	                            mov edi, ebp	       531	show-branch.c	FUNCTION_24	IF_2	CALL_9
0x4000615	      0xe83bfcffff	                 call sym.sort_ref_range	       531	show-branch.c	FUNCTION_24	IF_2	CALL_9
0x400061a	            0xeb12	                           jmp 0x400062e	       532	show-branch.c	FUNCTION_24	IF_2
0x400061c	          0x4889de	                            mov rsi, rbx	       534	show-branch.c	FUNCTION_24	CALL_10
0x400061f	      0xbf00000000	                              mov edi, 0	       534	show-branch.c	FUNCTION_24	CALL_10
0x4000624	      0xb800000000	                              mov eax, 0	       534	show-branch.c	FUNCTION_24	CALL_10
0x4000629	      0xe800000000	                          call 0x400062e	       534	show-branch.c	FUNCTION_24	CALL_10
0x400062e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       535	show-branch.c	FUNCTION_24
0x4000633	    0x644833042528	                xor rax, qword fs:[0x28]	       535	show-branch.c	FUNCTION_24
0x400063c	            0x7405	                            je 0x4000643	       535	show-branch.c	FUNCTION_24
0x400063e	      0xe800000000	                          call 0x4000643	       535	show-branch.c	FUNCTION_24
0x4000643	        0x4883c428	                           add rsp, 0x28	       535	show-branch.c	FUNCTION_24
0x4000647	              0x5b	                                 pop rbx	       535	show-branch.c	FUNCTION_24
0x4000648	              0x5d	                                 pop rbp	       535	show-branch.c	FUNCTION_24
0x4000649	              0xc3	                                     ret	       535	show-branch.c	FUNCTION_24
name_first_parent_chain	FOR,0:SWITCH,0:CALL,1:ELSE,1:functions,0:WHILE,1:IF,3:DO,0	46
0x400069b	              0x55	                                push rbp	        93	show-branch.c	FUNCTION_6
0x400069c	              0x53	                                push rbx	        93	show-branch.c	FUNCTION_6
0x400069d	        0x4883ec08	                              sub rsp, 8	        93	show-branch.c	FUNCTION_6
0x40006a1	          0x4885ff	                           test rdi, rdi	        95	show-branch.c	FUNCTION_6	WHILE_1
0x40006a4	            0x745f	                            je 0x4000705	        95	show-branch.c	FUNCTION_6	WHILE_1
0x40006a6	        0x488b4718	            mov rax, qword [rdi + 0x18] 	        97	show-branch.c	FUNCTION_6	WHILE_1	IF_1
0x40006aa	          0x4885c0	                           test rax, rax	        97	show-branch.c	FUNCTION_6	WHILE_1	IF_1
0x40006ad	            0x745d	                            je 0x400070c	        97	show-branch.c	FUNCTION_6	WHILE_1	IF_1
0x40006af	        0x488b5730	            mov rdx, qword [rdi + 0x30] 	        99	show-branch.c	FUNCTION_6	WHILE_1	IF_2
0x40006b3	          0x4885d2	                           test rdx, rdx	        99	show-branch.c	FUNCTION_6	WHILE_1	IF_2
0x40006b6	            0x745b	                            je 0x4000713	        99	show-branch.c	FUNCTION_6	WHILE_1	IF_2
0x40006b8	          0x488b1a	                    mov rbx, qword [rdx]	       101	show-branch.c	FUNCTION_6	WHILE_1
0x40006bb	      0xbd00000000	                              mov ebp, 0	       102	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x40006c0	      0x48837b1800	               cmp qword [rbx + 0x18], 0	       102	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x40006c5	            0x741e	                            je 0x40006e5	       102	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x40006c7	            0xeb4f	                           jmp 0x4000718	       102	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x40006c9	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        97	show-branch.c	FUNCTION_6	WHILE_1	IF_1
0x40006cd	          0x4885c0	                           test rax, rax	        97	show-branch.c	FUNCTION_6	WHILE_1	IF_1
0x40006d0	            0x7446	                            je 0x4000718	        97	show-branch.c	FUNCTION_6	WHILE_1	IF_1
0x40006d2	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	        99	show-branch.c	FUNCTION_6	WHILE_1	IF_2
0x40006d6	          0x4885d2	                           test rdx, rdx	        99	show-branch.c	FUNCTION_6	WHILE_1	IF_2
0x40006d9	            0x743d	                            je 0x4000718	        99	show-branch.c	FUNCTION_6	WHILE_1	IF_2
0x40006db	          0x488b1a	                    mov rbx, qword [rdx]	       101	show-branch.c	FUNCTION_6	WHILE_1
0x40006de	      0x48837b1800	               cmp qword [rbx + 0x18], 0	       102	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x40006e3	            0x7533	                           jne 0x4000718	       102	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x40006e5	          0x4885c0	                           test rax, rax	        84	show-branch.c	FUNCTION_5	IF_1
0x40006e8	            0x7411	                            je 0x40006fb	        84	show-branch.c	FUNCTION_5	IF_1
0x40006ea	          0x8b4808	                mov ecx, dword [rax + 8]	        88	show-branch.c	FUNCTION_5	IF_2	CALL_1
0x40006ed	          0x8d5101	                      lea edx, [rcx + 1]	        88	show-branch.c	FUNCTION_5	IF_2	CALL_1
0x40006f0	          0x488b30	                    mov rsi, qword [rax]	        88	show-branch.c	FUNCTION_5	IF_2	CALL_1
0x40006f3	          0x4889df	                            mov rdi, rbx	        88	show-branch.c	FUNCTION_5	IF_2	CALL_1
0x40006f6	      0xe870ffffff	                    call sym.name_commit	        88	show-branch.c	FUNCTION_5	IF_2	CALL_1
0x40006fb	          0x83c501	                              add ebp, 1	       104	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x40006fe	          0x4885db	                           test rbx, rbx	        95	show-branch.c	FUNCTION_6	WHILE_1
0x4000701	            0x75c6	                           jne 0x40006c9	        95	show-branch.c	FUNCTION_6	WHILE_1
0x4000703	            0xeb13	                           jmp 0x4000718	        95	show-branch.c	FUNCTION_6	WHILE_1
0x4000705	      0xbd00000000	                              mov ebp, 0	        94	show-branch.c	FUNCTION_6
0x400070a	            0xeb0c	                           jmp 0x4000718	        94	show-branch.c	FUNCTION_6
0x400070c	      0xbd00000000	                              mov ebp, 0	        94	show-branch.c	FUNCTION_6
0x4000711	            0xeb05	                           jmp 0x4000718	        94	show-branch.c	FUNCTION_6
0x4000713	      0xbd00000000	                              mov ebp, 0	        94	show-branch.c	FUNCTION_6
0x4000718	            0x89e8	                            mov eax, ebp	       111	show-branch.c	FUNCTION_6	ELSE_1
0x400071a	        0x4883c408	                              add rsp, 8	       111	show-branch.c	FUNCTION_6	ELSE_1
0x400071e	              0x5b	                                 pop rbx	       111	show-branch.c	FUNCTION_6	ELSE_1
0x400071f	              0x5d	                                 pop rbp	       111	show-branch.c	FUNCTION_6	ELSE_1
0x4000720	              0xc3	                                     ret	       111	show-branch.c	FUNCTION_6	ELSE_1
sort_ref_range	FOR,0:SWITCH,0:CALL,0:ELSE,0:functions,0:WHILE,0:IF,0:DO,0	12
0x4000255	            0x29fe	                            sub esi, edi	       357	show-branch.c	FUNCTION_14
0x4000257	          0x4863f6	                         movsxd rsi, esi	       357	show-branch.c	FUNCTION_14
0x400025a	        0x4883fe01	                              cmp rsi, 1	      1048	git-compat-util.h	FUNCTION_57	IF_1
0x400025e	            0x7622	                           jbe 0x4000282	      1048	git-compat-util.h	FUNCTION_57	IF_1
0x4000260	        0x4883ec08	                              sub rsp, 8	       356	show-branch.c	FUNCTION_14
0x4000264	          0x4863ff	                         movsxd rdi, edi	      1049	git-compat-util.h	FUNCTION_57	IF_1
0x4000267	    0x488d3cfd0000	                        lea rdi, [rdi*8]	      1049	git-compat-util.h	FUNCTION_57	IF_1
0x400026f	      0xb900000000	                              mov ecx, 0	      1049	git-compat-util.h	FUNCTION_57	IF_1
0x4000274	      0xba08000000	                              mov edx, 8	      1049	git-compat-util.h	FUNCTION_57	IF_1
0x4000279	      0xe800000000	                          call 0x400027e	      1049	git-compat-util.h	FUNCTION_57	IF_1
0x400027e	        0x4883c408	                              add rsp, 8	       358	show-branch.c	FUNCTION_14
0x4000282	            0xf3c3	                                     ret	       358	show-branch.c	FUNCTION_14
get_color_code	FOR,0:SWITCH,0:CALL,1:ELSE,0:functions,0:WHILE,0:IF,1:DO,0	16
0x4000721	              0x53	                                push rbx	        32	show-branch.c	FUNCTION_1
0x4000722	            0x89fb	                            mov ebx, edi	        32	show-branch.c	FUNCTION_1
0x4000724	    0x8b3500000000	            mov esi, dword [0x0400072a] 	        33	show-branch.c	FUNCTION_1	IF_1	CALL_1
0x400072a	      0xbf01000000	                              mov edi, 1	        33	show-branch.c	FUNCTION_1	IF_1	CALL_1
0x400072f	      0xe800000000	                          call 0x4000734	        33	show-branch.c	FUNCTION_1	IF_1	CALL_1
0x4000734	      0xba00000000	                              mov edx, 0	        35	show-branch.c	FUNCTION_1
0x4000739	            0x85c0	                           test eax, eax	        33	show-branch.c	FUNCTION_1	IF_1	CALL_1
0x400073b	            0x7414	                            je 0x4000751	        33	show-branch.c	FUNCTION_1	IF_1	CALL_1
0x400073d	            0x89d8	                            mov eax, ebx	        34	show-branch.c	FUNCTION_1	IF_1
0x400073f	              0x99	                                     cdq	        34	show-branch.c	FUNCTION_1	IF_1
0x4000740	    0xf73d00000000	                 idiv dword [0x04000746]	        34	show-branch.c	FUNCTION_1	IF_1
0x4000746	          0x4863d2	                         movsxd rdx, edx	        34	show-branch.c	FUNCTION_1	IF_1
0x4000749	    0x488b14d50000	                  mov rdx, qword [rdx*8]	        34	show-branch.c	FUNCTION_1	IF_1
0x4000751	          0x4889d0	                            mov rax, rdx	        36	show-branch.c	FUNCTION_1
0x4000754	              0x5b	                                 pop rbx	        36	show-branch.c	FUNCTION_1
0x4000755	              0xc3	                                     ret	        36	show-branch.c	FUNCTION_1
name_commit	FOR,0:SWITCH,0:CALL,1:ELSE,0:functions,0:WHILE,0:IF,1:DO,0	18
0x400066b	            0x4154	                                push r12	        66	show-branch.c	FUNCTION_4
0x400066d	              0x55	                                push rbp	        66	show-branch.c	FUNCTION_4
0x400066e	              0x53	                                push rbx	        66	show-branch.c	FUNCTION_4
0x400066f	          0x4889fb	                            mov rbx, rdi	        66	show-branch.c	FUNCTION_4
0x4000672	          0x4989f4	                            mov r12, rsi	        66	show-branch.c	FUNCTION_4
0x4000675	            0x89d5	                            mov ebp, edx	        66	show-branch.c	FUNCTION_4
0x4000677	      0x48837f1800	               cmp qword [rdi + 0x18], 0	        68	show-branch.c	FUNCTION_4	IF_1
0x400067c	            0x750e	                           jne 0x400068c	        68	show-branch.c	FUNCTION_4	IF_1
0x400067e	      0xbf10000000	                           mov edi, 0x10	        69	show-branch.c	FUNCTION_4	CALL_1
0x4000683	      0xe800000000	                          call 0x4000688	        69	show-branch.c	FUNCTION_4	CALL_1
0x4000688	        0x48894318	             mov qword [rbx + 0x18], rax	        69	show-branch.c	FUNCTION_4	CALL_1
0x400068c	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        70	show-branch.c	FUNCTION_4
0x4000690	          0x4c8920	                    mov qword [rax], r12	        71	show-branch.c	FUNCTION_4
0x4000693	          0x896808	                mov dword [rax + 8], ebp	        72	show-branch.c	FUNCTION_4
0x4000696	              0x5b	                                 pop rbx	        73	show-branch.c	FUNCTION_4
0x4000697	              0x5d	                                 pop rbp	        73	show-branch.c	FUNCTION_4
0x4000698	            0x415c	                                 pop r12	        73	show-branch.c	FUNCTION_4
0x400069a	              0xc3	                                     ret	        73	show-branch.c	FUNCTION_4
git_show_branch_config	FOR,0:SWITCH,0:CALL,7:ELSE,0:functions,0:WHILE,0:IF,4:DO,0	54
0x4000040	              0x55	                                push rbp	       538	show-branch.c	FUNCTION_25
0x4000041	              0x53	                                push rbx	       538	show-branch.c	FUNCTION_25
0x4000042	        0x4883ec08	                              sub rsp, 8	       538	show-branch.c	FUNCTION_25
0x4000046	          0x4889f8	                            mov rax, rdi	       538	show-branch.c	FUNCTION_25
0x4000049	          0x4889f5	                            mov rbp, rsi	       538	show-branch.c	FUNCTION_25
0x400004c	      0xbf00000000	                              mov edi, 0	       539	show-branch.c	FUNCTION_25	IF_1	CALL_1
0x4000051	      0xb913000000	                           mov ecx, 0x13	       539	show-branch.c	FUNCTION_25	IF_1	CALL_1
0x4000056	          0x4889c6	                            mov rsi, rax	       539	show-branch.c	FUNCTION_25	IF_1	CALL_1
0x4000059	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       539	show-branch.c	FUNCTION_25	IF_1	CALL_1
0x400005b	           0xf97c3	                                 seta bl	       539	show-branch.c	FUNCTION_25	IF_1	CALL_1
0x400005e	           0xf92c1	                                 setb cl	       539	show-branch.c	FUNCTION_25	IF_1	CALL_1
0x4000061	            0x29cb	                            sub ebx, ecx	       539	show-branch.c	FUNCTION_25	IF_1	CALL_1
0x4000063	           0xfbedb	                           movsx ebx, bl	       539	show-branch.c	FUNCTION_25	IF_1	CALL_1
0x4000066	            0x85db	                           test ebx, ebx	       539	show-branch.c	FUNCTION_25	IF_1	CALL_1
0x4000068	            0x753b	                           jne 0x40000a5	       539	show-branch.c	FUNCTION_25	IF_1	CALL_1
0x400006a	          0x4885ed	                           test rbp, rbp	       540	show-branch.c	FUNCTION_25	IF_1	IF_2
0x400006d	            0x750f	                           jne 0x400007e	       540	show-branch.c	FUNCTION_25	IF_1	IF_2
0x400006f	          0x4889c7	                            mov rdi, rax	       541	show-branch.c	FUNCTION_25	IF_1	CALL_2
0x4000072	      0xe800000000	                          call 0x4000077	       541	show-branch.c	FUNCTION_25	IF_1	CALL_2
0x4000077	      0xbbffffffff	                     mov ebx, 0xffffffff	       541	show-branch.c	FUNCTION_25	IF_1	CALL_2
0x400007c	            0xeb65	                           jmp 0x40000e3	       541	show-branch.c	FUNCTION_25	IF_1	CALL_2
0x400007e	    0x833d00000000	               cmp dword [0x04000085], 0	       546	show-branch.c	FUNCTION_25	IF_1	IF_3
0x4000085	            0x750f	                           jne 0x4000096	       546	show-branch.c	FUNCTION_25	IF_1	IF_3
0x4000087	      0xbe00000000	                              mov esi, 0	       547	show-branch.c	FUNCTION_25	IF_1	CALL_3
0x400008c	      0xbf00000000	                              mov edi, 0	       547	show-branch.c	FUNCTION_25	IF_1	CALL_3
0x4000091	      0xe800000000	                          call 0x4000096	       547	show-branch.c	FUNCTION_25	IF_1	CALL_3
0x4000096	          0x4889ee	                            mov rsi, rbp	       548	show-branch.c	FUNCTION_25	IF_1	CALL_4
0x4000099	      0xbf00000000	                              mov edi, 0	       548	show-branch.c	FUNCTION_25	IF_1	CALL_4
0x400009e	      0xe800000000	                          call 0x40000a3	       548	show-branch.c	FUNCTION_25	IF_1	CALL_4
0x40000a3	            0xeb3e	                           jmp 0x40000e3	       549	show-branch.c	FUNCTION_25	IF_1
0x40000a5	      0xbf00000000	                              mov edi, 0	       552	show-branch.c	FUNCTION_25	IF_4	CALL_5
0x40000aa	      0xb911000000	                           mov ecx, 0x11	       552	show-branch.c	FUNCTION_25	IF_4	CALL_5
0x40000af	          0x4889c6	                            mov rsi, rax	       552	show-branch.c	FUNCTION_25	IF_4	CALL_5
0x40000b2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       552	show-branch.c	FUNCTION_25	IF_4	CALL_5
0x40000b4	           0xf97c3	                                 seta bl	       552	show-branch.c	FUNCTION_25	IF_4	CALL_5
0x40000b7	           0xf92c1	                                 setb cl	       552	show-branch.c	FUNCTION_25	IF_4	CALL_5
0x40000ba	            0x29cb	                            sub ebx, ecx	       552	show-branch.c	FUNCTION_25	IF_4	CALL_5
0x40000bc	           0xfbedb	                           movsx ebx, bl	       552	show-branch.c	FUNCTION_25	IF_4	CALL_5
0x40000bf	            0x85db	                           test ebx, ebx	       552	show-branch.c	FUNCTION_25	IF_4	CALL_5
0x40000c1	            0x7513	                           jne 0x40000d6	       552	show-branch.c	FUNCTION_25	IF_4	CALL_5
0x40000c3	          0x4889ee	                            mov rsi, rbp	       553	show-branch.c	FUNCTION_25	IF_4	CALL_6
0x40000c6	          0x4889c7	                            mov rdi, rax	       553	show-branch.c	FUNCTION_25	IF_4	CALL_6
0x40000c9	      0xe800000000	                          call 0x40000ce	       553	show-branch.c	FUNCTION_25	IF_4	CALL_6
0x40000ce	    0x890500000000	            mov dword [0x040000d4], eax 	       553	show-branch.c	FUNCTION_25	IF_4	CALL_6
0x40000d4	            0xeb0d	                           jmp 0x40000e3	       554	show-branch.c	FUNCTION_25	IF_4
0x40000d6	          0x4889ee	                            mov rsi, rbp	       557	show-branch.c	FUNCTION_25	CALL_7
0x40000d9	          0x4889c7	                            mov rdi, rax	       557	show-branch.c	FUNCTION_25	CALL_7
0x40000dc	      0xe800000000	                          call 0x40000e1	       557	show-branch.c	FUNCTION_25	CALL_7
0x40000e1	            0x89c3	                            mov ebx, eax	       557	show-branch.c	FUNCTION_25	CALL_7
0x40000e3	            0x89d8	                            mov eax, ebx	       558	show-branch.c	FUNCTION_25
0x40000e5	        0x4883c408	                              add rsp, 8	       558	show-branch.c	FUNCTION_25
0x40000e9	              0x5b	                                 pop rbx	       558	show-branch.c	FUNCTION_25
0x40000ea	              0x5d	                                 pop rbp	       558	show-branch.c	FUNCTION_25
0x40000eb	              0xc3	                                     ret	       558	show-branch.c	FUNCTION_25
append_remote_ref	FOR,0:SWITCH,0:CALL,4:ELSE,0:functions,0:WHILE,0:IF,2:DO,0	39
0x4000353	              0x55	                                push rbp	       403	show-branch.c	FUNCTION_17
0x4000354	              0x53	                                push rbx	       403	show-branch.c	FUNCTION_17
0x4000355	        0x4883ec28	                           sub rsp, 0x28	       403	show-branch.c	FUNCTION_17
0x4000359	          0x4889fb	                            mov rbx, rdi	       403	show-branch.c	FUNCTION_17
0x400035c	          0x4889f5	                            mov rbp, rsi	       403	show-branch.c	FUNCTION_17
0x400035f	    0x64488b042528	                mov rax, qword fs:[0x28]	       403	show-branch.c	FUNCTION_17
0x4000368	      0x4889442418	             mov qword [rsp + 0x18], rax	       403	show-branch.c	FUNCTION_17
0x400036d	            0x31c0	                            xor eax, eax	       403	show-branch.c	FUNCTION_17
0x400036f	      0xbe00000000	                              mov esi, 0	       406	show-branch.c	FUNCTION_17	IF_1	CALL_1
0x4000374	      0xe800000000	                          call 0x4000379	       406	show-branch.c	FUNCTION_17	IF_1	CALL_1
0x4000379	            0x85c0	                           test eax, eax	       406	show-branch.c	FUNCTION_17	IF_1	CALL_1
0x400037b	            0x7443	                            je 0x40003c0	       406	show-branch.c	FUNCTION_17	IF_1	CALL_1
0x400037d	        0x488d7b0d	                    lea rdi, [rbx + 0xd]	       411	show-branch.c	FUNCTION_17	IF_2	CALL_3
0x4000381	          0x4889e6	                            mov rsi, rsp	       411	show-branch.c	FUNCTION_17	IF_2	CALL_3
0x4000384	      0xe800000000	                          call 0x4000389	       411	show-branch.c	FUNCTION_17	IF_2	CALL_3
0x4000389	      0xba05000000	                              mov edx, 5	       412	show-branch.c	FUNCTION_17	IF_2
0x400038e	            0x85c0	                           test eax, eax	       411	show-branch.c	FUNCTION_17	IF_2	CALL_3
0x4000390	            0x751b	                           jne 0x40003ad	       411	show-branch.c	FUNCTION_17	IF_2	CALL_3
0x4000392	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_67	CALL_1
0x4000397	          0x4889ee	                            mov rsi, rbp	       975	cache.h	FUNCTION_67	CALL_1
0x400039a	          0x4889e7	                            mov rdi, rsp	       975	cache.h	FUNCTION_67	CALL_1
0x400039d	      0xe800000000	                          call 0x40003a2	       975	cache.h	FUNCTION_67	CALL_1
0x40003a2	          0x83f801	                              cmp eax, 1	       412	show-branch.c	FUNCTION_17	IF_2
0x40003a5	            0x19d2	                            sbb edx, edx	       412	show-branch.c	FUNCTION_17	IF_2
0x40003a7	          0x83e208	                              and edx, 8	       412	show-branch.c	FUNCTION_17	IF_2
0x40003aa	          0x83c205	                              add edx, 5	       412	show-branch.c	FUNCTION_17	IF_2
0x40003ad	          0x4863fa	                         movsxd rdi, edx	       413	show-branch.c	FUNCTION_17	CALL_4
0x40003b0	          0x4801df	                            add rdi, rbx	       413	show-branch.c	FUNCTION_17	CALL_4
0x40003b3	      0xba00000000	                              mov edx, 0	       413	show-branch.c	FUNCTION_17	CALL_4
0x40003b8	          0x4889ee	                            mov rsi, rbp	       413	show-branch.c	FUNCTION_17	CALL_4
0x40003bb	      0xe8c4feffff	                     call sym.append_ref	       413	show-branch.c	FUNCTION_17	CALL_4
0x40003c0	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       414	show-branch.c	FUNCTION_17
0x40003c5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       414	show-branch.c	FUNCTION_17
0x40003ce	            0x7405	                            je 0x40003d5	       414	show-branch.c	FUNCTION_17
0x40003d0	      0xe800000000	                          call 0x40003d5	       414	show-branch.c	FUNCTION_17
0x40003d5	        0x4883c428	                           add rsp, 0x28	       414	show-branch.c	FUNCTION_17
0x40003d9	              0x5b	                                 pop rbx	       414	show-branch.c	FUNCTION_17
0x40003da	              0x5d	                                 pop rbp	       414	show-branch.c	FUNCTION_17
0x40003db	              0xc3	                                     ret	       414	show-branch.c	FUNCTION_17
append_head_ref	FOR,0:SWITCH,0:CALL,4:ELSE,0:functions,0:WHILE,0:IF,2:DO,0	39
0x40003dc	              0x55	                                push rbp	       388	show-branch.c	FUNCTION_16
0x40003dd	              0x53	                                push rbx	       388	show-branch.c	FUNCTION_16
0x40003de	        0x4883ec28	                           sub rsp, 0x28	       388	show-branch.c	FUNCTION_16
0x40003e2	          0x4889fb	                            mov rbx, rdi	       388	show-branch.c	FUNCTION_16
0x40003e5	          0x4889f5	                            mov rbp, rsi	       388	show-branch.c	FUNCTION_16
0x40003e8	    0x64488b042528	                mov rax, qword fs:[0x28]	       388	show-branch.c	FUNCTION_16
0x40003f1	      0x4889442418	             mov qword [rsp + 0x18], rax	       388	show-branch.c	FUNCTION_16
0x40003f6	            0x31c0	                            xor eax, eax	       388	show-branch.c	FUNCTION_16
0x40003f8	      0xbe00000000	                              mov esi, 0	       391	show-branch.c	FUNCTION_16	IF_1	CALL_1
0x40003fd	      0xe800000000	                          call 0x4000402	       391	show-branch.c	FUNCTION_16	IF_1	CALL_1
0x4000402	            0x85c0	                           test eax, eax	       391	show-branch.c	FUNCTION_16	IF_1	CALL_1
0x4000404	            0x7443	                            je 0x4000449	       391	show-branch.c	FUNCTION_16	IF_1	CALL_1
0x4000406	        0x488d7b0b	                    lea rdi, [rbx + 0xb]	       396	show-branch.c	FUNCTION_16	IF_2	CALL_3
0x400040a	          0x4889e6	                            mov rsi, rsp	       396	show-branch.c	FUNCTION_16	IF_2	CALL_3
0x400040d	      0xe800000000	                          call 0x4000412	       396	show-branch.c	FUNCTION_16	IF_2	CALL_3
0x4000412	      0xba05000000	                              mov edx, 5	       397	show-branch.c	FUNCTION_16	IF_2
0x4000417	            0x85c0	                           test eax, eax	       396	show-branch.c	FUNCTION_16	IF_2	CALL_3
0x4000419	            0x751b	                           jne 0x4000436	       396	show-branch.c	FUNCTION_16	IF_2	CALL_3
0x400041b	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_67	CALL_1
0x4000420	          0x4889ee	                            mov rsi, rbp	       975	cache.h	FUNCTION_67	CALL_1
0x4000423	          0x4889e7	                            mov rdi, rsp	       975	cache.h	FUNCTION_67	CALL_1
0x4000426	      0xe800000000	                          call 0x400042b	       975	cache.h	FUNCTION_67	CALL_1
0x400042b	          0x83f801	                              cmp eax, 1	       397	show-branch.c	FUNCTION_16	IF_2
0x400042e	            0x19d2	                            sbb edx, edx	       397	show-branch.c	FUNCTION_16	IF_2
0x4000430	          0x83e206	                              and edx, 6	       397	show-branch.c	FUNCTION_16	IF_2
0x4000433	          0x83c205	                              add edx, 5	       397	show-branch.c	FUNCTION_16	IF_2
0x4000436	          0x4863fa	                         movsxd rdi, edx	       398	show-branch.c	FUNCTION_16	CALL_4
0x4000439	          0x4801df	                            add rdi, rbx	       398	show-branch.c	FUNCTION_16	CALL_4
0x400043c	      0xba00000000	                              mov edx, 0	       398	show-branch.c	FUNCTION_16	CALL_4
0x4000441	          0x4889ee	                            mov rsi, rbp	       398	show-branch.c	FUNCTION_16	CALL_4
0x4000444	      0xe83bfeffff	                     call sym.append_ref	       398	show-branch.c	FUNCTION_16	CALL_4
0x4000449	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       399	show-branch.c	FUNCTION_16
0x400044e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       399	show-branch.c	FUNCTION_16
0x4000457	            0x7405	                            je 0x400045e	       399	show-branch.c	FUNCTION_16
0x4000459	      0xe800000000	                          call 0x400045e	       399	show-branch.c	FUNCTION_16
0x400045e	        0x4883c428	                           add rsp, 0x28	       399	show-branch.c	FUNCTION_16
0x4000462	              0x5b	                                 pop rbx	       399	show-branch.c	FUNCTION_16
0x4000463	              0x5d	                                 pop rbp	       399	show-branch.c	FUNCTION_16
0x4000464	              0xc3	                                     ret	       399	show-branch.c	FUNCTION_16
rev_is_head	FOR,0:SWITCH,0:CALL,5:ELSE,0:functions,0:WHILE,0:IF,2:DO,0	63
0x4000198	          0x4885ff	                           test rdi, rdi	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x400019b	     0xf84a7000000	                            je 0x4000248	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x40001a1	              0x55	                                push rbp	       468	show-branch.c	FUNCTION_21
0x40001a2	              0x53	                                push rbx	       468	show-branch.c	FUNCTION_21
0x40001a3	        0x4883ec08	                              sub rsp, 8	       468	show-branch.c	FUNCTION_21
0x40001a7	          0x4889d0	                            mov rax, rdx	       468	show-branch.c	FUNCTION_21
0x40001aa	          0x4889f3	                            mov rbx, rsi	       468	show-branch.c	FUNCTION_21
0x40001ad	          0x4889fd	                            mov rbp, rdi	       468	show-branch.c	FUNCTION_21
0x40001b0	          0x4885d2	                           test rdx, rdx	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x40001b3	            0x742a	                            je 0x40001df	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x40001b5	          0x4885c9	                           test rcx, rcx	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x40001b8	            0x7425	                            je 0x40001df	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x40001ba	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_67	CALL_1
0x40001bf	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_67	CALL_1
0x40001c2	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_67	CALL_1
0x40001c5	      0xe800000000	                          call 0x40001ca	       975	cache.h	FUNCTION_67	CALL_1
0x40001ca	            0x89c2	                            mov edx, eax	       975	cache.h	FUNCTION_67	CALL_1
0x40001cc	      0xb800000000	                              mov eax, 0	       470	show-branch.c	FUNCTION_21	IF_1
0x40001d1	            0x85d2	                           test edx, edx	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x40001d3	            0x7579	                           jne 0x400024e	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x40001d5	          0x4889ef	                            mov rdi, rbp	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x40001d8	      0xb800000000	                              mov eax, 0	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x40001dd	            0xeb08	                           jmp 0x40001e7	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x40001df	          0x4889ef	                            mov rdi, rbp	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x40001e2	      0xb800000000	                              mov eax, 0	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x40001e7	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_39	DO_1	IF_1
0x40001ea	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_39	DO_1	IF_1
0x40001ec	            0x7410	                            je 0x40001fe	       484	git-compat-util.h	FUNCTION_39	DO_1	IF_1
0x40001ee	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_39	DO_1
0x40001f2	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_39	DO_1
0x40001f6	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_39	DO_1
0x40001f9	            0x74ec	                            je 0x40001e7	       488	git-compat-util.h	FUNCTION_39	DO_1
0x40001fb	          0x4889ef	                            mov rdi, rbp	       488	git-compat-util.h	FUNCTION_39	DO_1
0x40001fe	          0x4889de	                            mov rsi, rbx	       488	git-compat-util.h	FUNCTION_39	DO_1
0x4000201	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_39	DO_1
0x4000206	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_39	DO_1	IF_1
0x4000209	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_39	DO_1	IF_1
0x400020b	            0x742c	                            je 0x4000239	       484	git-compat-util.h	FUNCTION_39	DO_1	IF_1
0x400020d	        0x4883c601	                              add rsi, 1	       488	git-compat-util.h	FUNCTION_39	DO_1
0x4000211	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_39	DO_1
0x4000215	          0x3a56ff	                  cmp dl, byte [rsi - 1]	       488	git-compat-util.h	FUNCTION_39	DO_1
0x4000218	            0x74ec	                            je 0x4000206	       488	git-compat-util.h	FUNCTION_39	DO_1
0x400021a	          0x4889de	                            mov rsi, rbx	       488	git-compat-util.h	FUNCTION_39	DO_1
0x400021d	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_39	DO_1
0x4000222	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_39	DO_1	IF_1
0x4000225	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_39	DO_1	IF_1
0x4000227	            0x7410	                            je 0x4000239	       484	git-compat-util.h	FUNCTION_39	DO_1	IF_1
0x4000229	        0x4883c601	                              add rsi, 1	       488	git-compat-util.h	FUNCTION_39	DO_1
0x400022d	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_39	DO_1
0x4000231	          0x3a56ff	                  cmp dl, byte [rsi - 1]	       488	git-compat-util.h	FUNCTION_39	DO_1
0x4000234	            0x74ec	                            je 0x4000222	       488	git-compat-util.h	FUNCTION_39	DO_1
0x4000236	          0x4889de	                            mov rsi, rbx	       488	git-compat-util.h	FUNCTION_39	DO_1
0x4000239	      0xe800000000	                          call 0x400023e	       474	show-branch.c	FUNCTION_21	CALL_5
0x400023e	            0x85c0	                           test eax, eax	       474	show-branch.c	FUNCTION_21	CALL_5
0x4000240	           0xf94c0	                                 sete al	       474	show-branch.c	FUNCTION_21	CALL_5
0x4000243	           0xfb6c0	                           movzx eax, al	       474	show-branch.c	FUNCTION_21	CALL_5
0x4000246	            0xeb06	                           jmp 0x400024e	       474	show-branch.c	FUNCTION_21	CALL_5
0x4000248	      0xb800000000	                              mov eax, 0	       470	show-branch.c	FUNCTION_21	IF_1
0x400024d	              0xc3	                                     ret	       470	show-branch.c	FUNCTION_21	IF_1
0x400024e	        0x4883c408	                              add rsp, 8	       475	show-branch.c	FUNCTION_21
0x4000252	              0x5b	                                 pop rbx	       475	show-branch.c	FUNCTION_21
0x4000253	              0x5d	                                 pop rbp	       475	show-branch.c	FUNCTION_21
0x4000254	              0xc3	                                     ret	       475	show-branch.c	FUNCTION_21
show_one_commit	FOR,0:SWITCH,0:CALL,5:ELSE,2:functions,0:WHILE,0:IF,5:DO,0	82
0x4000756	            0x4155	                                push r13	       271	show-branch.c	FUNCTION_10
0x4000758	            0x4154	                                push r12	       271	show-branch.c	FUNCTION_10
0x400075a	              0x55	                                push rbp	       271	show-branch.c	FUNCTION_10
0x400075b	              0x53	                                push rbx	       271	show-branch.c	FUNCTION_10
0x400075c	        0x4883ec28	                           sub rsp, 0x28	       271	show-branch.c	FUNCTION_10
0x4000760	          0x4889fd	                            mov rbp, rdi	       271	show-branch.c	FUNCTION_10
0x4000763	          0x4189f5	                           mov r13d, esi	       271	show-branch.c	FUNCTION_10
0x4000766	    0x64488b042528	                mov rax, qword fs:[0x28]	       271	show-branch.c	FUNCTION_10
0x400076f	      0x4889442418	             mov qword [rsp + 0x18], rax	       271	show-branch.c	FUNCTION_10
0x4000774	            0x31c0	                            xor eax, eax	       271	show-branch.c	FUNCTION_10
0x4000776	    0x48c704240000	                      mov qword [rsp], 0	       272	show-branch.c	FUNCTION_10
0x400077e	    0x48c744240800	                  mov qword [rsp + 8], 0	       272	show-branch.c	FUNCTION_10
0x4000787	    0x48c744241000	               mov qword [rsp + 0x10], 0	       272	show-branch.c	FUNCTION_10
0x4000790	        0x4c8b6718	            mov r12, qword [rdi + 0x18] 	       274	show-branch.c	FUNCTION_10
0x4000794	      0xb900000000	                              mov ecx, 0	       273	show-branch.c	FUNCTION_10
0x4000799	          0xf60701	                      test byte [rdi], 1	       276	show-branch.c	FUNCTION_10	IF_1
0x400079c	            0x7415	                            je 0x40007b3	       276	show-branch.c	FUNCTION_10	IF_1
0x400079e	          0x4889e2	                            mov rdx, rsp	       277	show-branch.c	FUNCTION_10	IF_1	CALL_1
0x40007a1	          0x4889fe	                            mov rsi, rdi	       277	show-branch.c	FUNCTION_10	IF_1	CALL_1
0x40007a4	      0xbf05000000	                              mov edi, 5	       277	show-branch.c	FUNCTION_10	IF_1	CALL_1
0x40007a9	      0xe800000000	                          call 0x40007ae	       277	show-branch.c	FUNCTION_10	IF_1	CALL_1
0x40007ae	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       278	show-branch.c	FUNCTION_10	IF_1
0x40007b3	          0x4889cb	                            mov rbx, rcx	       273	show-branch.c	FUNCTION_10
0x40007b6	      0xb800000000	                              mov eax, 0	       273	show-branch.c	FUNCTION_10
0x40007bb	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_39	DO_1	IF_1
0x40007be	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_39	DO_1	IF_1
0x40007c0	            0x7410	                            je 0x40007d2	       484	git-compat-util.h	FUNCTION_39	DO_1	IF_1
0x40007c2	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_39	DO_1
0x40007c6	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_39	DO_1
0x40007ca	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_39	DO_1
0x40007cd	            0x74ec	                            je 0x40007bb	       488	git-compat-util.h	FUNCTION_39	DO_1
0x40007cf	          0x4889cb	                            mov rbx, rcx	       488	git-compat-util.h	FUNCTION_39	DO_1
0x40007d2	          0x4585ed	                         test r13d, r13d	       282	show-branch.c	FUNCTION_10	IF_2
0x40007d5	     0xf858c000000	                           jne 0x4000867	       282	show-branch.c	FUNCTION_10	IF_2
0x40007db	          0x4d85e4	                           test r12, r12	       283	show-branch.c	FUNCTION_10	IF_2	IF_3
0x40007de	            0x7461	                            je 0x4000841	       283	show-branch.c	FUNCTION_10	IF_2	IF_3
0x40007e0	        0x498b1424	                    mov rdx, qword [r12]	       283	show-branch.c	FUNCTION_10	IF_2	IF_3
0x40007e4	          0x4885d2	                           test rdx, rdx	       283	show-branch.c	FUNCTION_10	IF_2	IF_3
0x40007e7	            0x7458	                            je 0x4000841	       283	show-branch.c	FUNCTION_10	IF_2	IF_3
0x40007e9	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_391
0x40007ee	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_391
0x40007f3	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_391
0x40007f8	      0xe800000000	                          call 0x40007fd	       104	stdio2.h	CALL_391
0x40007fd	      0x418b542408	                mov edx, dword [r12 + 8]	       285	show-branch.c	FUNCTION_10	IF_2	IF_3	IF_4
0x4000802	            0x85d2	                           test edx, edx	       285	show-branch.c	FUNCTION_10	IF_2	IF_3	IF_4
0x4000804	            0x7425	                            je 0x400082b	       285	show-branch.c	FUNCTION_10	IF_2	IF_3	IF_4
0x4000806	          0x83fa01	                              cmp edx, 1	       286	show-branch.c	FUNCTION_10	IF_2	IF_3	IF_4	IF_5
0x4000809	            0x750c	                           jne 0x4000817	       286	show-branch.c	FUNCTION_10	IF_2	IF_3	IF_4	IF_5
0x400080b	      0xbf5e000000	                           mov edi, 0x5e	       104	stdio2.h	CALL_391
0x4000810	      0xe800000000	                          call 0x4000815	       104	stdio2.h	CALL_391
0x4000815	            0xeb14	                           jmp 0x400082b	       104	stdio2.h	CALL_391
0x4000817	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_391
0x400081c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_391
0x4000821	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_391
0x4000826	      0xe800000000	                          call 0x400082b	       104	stdio2.h	CALL_391
0x400082b	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_391
0x4000830	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_391
0x4000835	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_391
0x400083a	      0xe800000000	                          call 0x400083f	       104	stdio2.h	CALL_391
0x400083f	            0xeb26	                           jmp 0x4000867	       104	stdio2.h	CALL_391
0x4000841	        0x488d7d04	                      lea rdi, [rbp + 4]	       295	show-branch.c	FUNCTION_10	IF_2	ELSE_2	CALL_3
0x4000845	    0x8b3500000000	            mov esi, dword [0x0400084b] 	       294	show-branch.c	FUNCTION_10	IF_2	ELSE_2
0x400084b	      0xe800000000	                          call 0x4000850	       294	show-branch.c	FUNCTION_10	IF_2	ELSE_2
0x4000850	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_391
0x4000853	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_391
0x4000858	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_391
0x400085d	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_391
0x4000862	      0xe800000000	                          call 0x4000867	       104	stdio2.h	CALL_391
0x4000867	          0x4889df	                            mov rdi, rbx	       298	show-branch.c	FUNCTION_10	CALL_4
0x400086a	      0xe800000000	                          call 0x400086f	       298	show-branch.c	FUNCTION_10	CALL_4
0x400086f	          0x4889e7	                            mov rdi, rsp	       299	show-branch.c	FUNCTION_10	CALL_5
0x4000872	      0xe800000000	                          call 0x4000877	       299	show-branch.c	FUNCTION_10	CALL_5
0x4000877	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       300	show-branch.c	FUNCTION_10
0x400087c	    0x644833042528	                xor rax, qword fs:[0x28]	       300	show-branch.c	FUNCTION_10
0x4000885	            0x7405	                            je 0x400088c	       300	show-branch.c	FUNCTION_10
0x4000887	      0xe800000000	                          call 0x400088c	       300	show-branch.c	FUNCTION_10
0x400088c	        0x4883c428	                           add rsp, 0x28	       300	show-branch.c	FUNCTION_10
0x4000890	              0x5b	                                 pop rbx	       300	show-branch.c	FUNCTION_10
0x4000891	              0x5d	                                 pop rbp	       300	show-branch.c	FUNCTION_10
0x4000892	            0x415c	                                 pop r12	       300	show-branch.c	FUNCTION_10
0x4000894	            0x415d	                                 pop r13	       300	show-branch.c	FUNCTION_10
0x4000896	              0xc3	                                     ret	       300	show-branch.c	FUNCTION_10
parse_reflog_param	FOR,0:SWITCH,0:CALL,1:ELSE,2:functions,0:WHILE,0:IF,4:DO,0	45
0x40000ec	              0x55	                                push rbp	       585	show-branch.c	FUNCTION_27
0x40000ed	              0x53	                                push rbx	       585	show-branch.c	FUNCTION_27
0x40000ee	        0x4883ec18	                           sub rsp, 0x18	       585	show-branch.c	FUNCTION_27
0x40000f2	          0x4889f3	                            mov rbx, rsi	       585	show-branch.c	FUNCTION_27
0x40000f5	    0x64488b042528	                mov rax, qword fs:[0x28]	       585	show-branch.c	FUNCTION_27
0x40000fe	      0x4889442408	                mov qword [rsp + 8], rax	       585	show-branch.c	FUNCTION_27
0x4000103	            0x31c0	                            xor eax, eax	       585	show-branch.c	FUNCTION_27
0x4000105	        0x488b6f10	            mov rbp, qword [rdi + 0x10] 	       587	show-branch.c	FUNCTION_27
0x4000109	          0x4885f6	                           test rsi, rsi	       588	show-branch.c	FUNCTION_27	IF_1
0x400010c	      0xb800000000	                              mov eax, 0	       589	show-branch.c	FUNCTION_27	IF_1
0x4000111	        0x480f44d8	                          cmove rbx, rax	       589	show-branch.c	FUNCTION_27	IF_1
0x4000115	      0xba0a000000	                            mov edx, 0xa	       590	show-branch.c	FUNCTION_27	CALL_1
0x400011a	          0x4889e6	                            mov rsi, rsp	       590	show-branch.c	FUNCTION_27	CALL_1
0x400011d	          0x4889df	                            mov rdi, rbx	       590	show-branch.c	FUNCTION_27	CALL_1
0x4000120	      0xe800000000	                          call 0x4000125	       590	show-branch.c	FUNCTION_27	CALL_1
0x4000125	          0x4889c2	                            mov rdx, rax	       590	show-branch.c	FUNCTION_27	CALL_1
0x4000128	    0x890500000000	            mov dword [0x0400012e], eax 	       590	show-branch.c	FUNCTION_27	CALL_1
0x400012e	        0x488b0424	                    mov rax, qword [rsp]	       591	show-branch.c	FUNCTION_27	IF_2
0x4000132	           0xfb608	                   movzx ecx, byte [rax]	       591	show-branch.c	FUNCTION_27	IF_2
0x4000135	          0x80f92c	                            cmp cl, 0x2c	       591	show-branch.c	FUNCTION_27	IF_2
0x4000138	            0x750a	                           jne 0x4000144	       591	show-branch.c	FUNCTION_27	IF_2
0x400013a	        0x4883c001	                              add rax, 1	       592	show-branch.c	FUNCTION_27	IF_2
0x400013e	        0x48894500	                    mov qword [rbp], rax	       592	show-branch.c	FUNCTION_27	IF_2
0x4000142	            0xeb25	                           jmp 0x4000169	       592	show-branch.c	FUNCTION_27	IF_2
0x4000144	            0x84c9	                             test cl, cl	       593	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x4000146	            0x7419	                            je 0x4000161	       593	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x4000148	          0x4889de	                            mov rsi, rbx	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x400014b	      0xbf00000000	                              mov edi, 0	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x4000150	      0xb800000000	                              mov eax, 0	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x4000155	      0xe800000000	                          call 0x400015a	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x400015a	      0xb8ffffffff	                     mov eax, 0xffffffff	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x400015f	            0xeb1b	                           jmp 0x400017c	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x4000161	    0x48c745000000	                      mov qword [rbp], 0	       596	show-branch.c	FUNCTION_27	ELSE_2
0x4000169	      0xb800000000	                              mov eax, 0	       599	show-branch.c	FUNCTION_27
0x400016e	            0x85d2	                           test edx, edx	       597	show-branch.c	FUNCTION_27	IF_4
0x4000170	            0x7f0a	                            jg 0x400017c	       597	show-branch.c	FUNCTION_27	IF_4
0x4000172	    0xc70500000000	               mov dword [0x0400017c], 4	       598	show-branch.c	FUNCTION_27	IF_4
0x400017c	      0x488b742408	                mov rsi, qword [rsp + 8]	       600	show-branch.c	FUNCTION_27
0x4000181	    0x644833342528	                xor rsi, qword fs:[0x28]	       600	show-branch.c	FUNCTION_27
0x400018a	            0x7405	                            je 0x4000191	       600	show-branch.c	FUNCTION_27
0x400018c	      0xe800000000	                          call 0x4000191	       600	show-branch.c	FUNCTION_27
0x4000191	        0x4883c418	                           add rsp, 0x18	       600	show-branch.c	FUNCTION_27
0x4000195	              0x5b	                                 pop rbx	       600	show-branch.c	FUNCTION_27
0x4000196	              0x5d	                                 pop rbp	       600	show-branch.c	FUNCTION_27
0x4000197	              0xc3	                                     ret	       600	show-branch.c	FUNCTION_27
compare_ref_name	FOR,0:SWITCH,0:CALL,1:ELSE,0:functions,0:WHILE,0:IF,0:DO,0	75
0x4000897	          0x488b0e	                    mov rcx, qword [rsi]	       352	show-branch.c	FUNCTION_13	CALL_1
0x400089a	          0x488b37	                    mov rsi, qword [rdi]	       352	show-branch.c	FUNCTION_13	CALL_1
0x400089d	           0xfb616	                   movzx edx, byte [rsi]	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008a0	          0x8d42d0	                   lea eax, [rdx - 0x30]	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008a3	            0x3c09	                               cmp al, 9	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008a5	     0xf87b4000000	                            ja 0x400095f	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008ab	      0xb800000000	                              mov eax, 0	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008b0	          0x8d0480	                  lea eax, [rax + rax*4]	       314	show-branch.c	FUNCTION_11	FOR_1
0x40008b3	           0xfbed2	                           movsx edx, dl	       314	show-branch.c	FUNCTION_11	FOR_1
0x40008b6	        0x8d4442d0	           lea eax, [rdx + rax*2 - 0x30]	       314	show-branch.c	FUNCTION_11	FOR_1
0x40008ba	        0x4883c601	                              add rsi, 1	       313	show-branch.c	FUNCTION_11	FOR_1
0x40008be	           0xfb616	                   movzx edx, byte [rsi]	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008c1	          0x8d7ad0	                   lea edi, [rdx - 0x30]	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008c4	        0x4080ff09	                              cmp dil, 9	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008c8	            0x76e6	                           jbe 0x40008b0	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008ca	           0xfb611	                   movzx edx, byte [rcx]	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008cd	          0x8d7ad0	                   lea edi, [rdx - 0x30]	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008d0	        0x4080ff09	                              cmp dil, 9	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008d4	            0x7722	                            ja 0x40008f8	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008d6	      0xbf00000000	                              mov edi, 0	       311	show-branch.c	FUNCTION_11	FOR_1
0x40008db	          0x8d3cbf	                  lea edi, [rdi + rdi*4]	       314	show-branch.c	FUNCTION_11	FOR_1
0x40008de	           0xfbed2	                           movsx edx, dl	       314	show-branch.c	FUNCTION_11	FOR_1
0x40008e1	        0x8d7c7ad0	           lea edi, [rdx + rdi*2 - 0x30]	       314	show-branch.c	FUNCTION_11	FOR_1
0x40008e5	        0x4883c101	                              add rcx, 1	       313	show-branch.c	FUNCTION_11	FOR_1
0x40008e9	           0xfb611	                   movzx edx, byte [rcx]	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008ec	        0x448d42d0	                   lea r8d, [rdx - 0x30]	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008f0	        0x4180f809	                              cmp r8b, 9	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008f4	            0x76e5	                           jbe 0x40008db	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008f6	            0xeb05	                           jmp 0x40008fd	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008f8	      0xbf00000000	                              mov edi, 0	       312	show-branch.c	FUNCTION_11	FOR_1
0x40008fd	            0x39c7	                            cmp edi, eax	       327	show-branch.c	FUNCTION_12	WHILE_1	IF_1
0x40008ff	            0x7508	                           jne 0x4000909	       327	show-branch.c	FUNCTION_12	WHILE_1	IF_1
0x4000901	    0x41ba00000000	                             mov r10d, 0	       336	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x4000907	            0xeb03	                           jmp 0x400090c	       336	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x4000909	            0x29f8	                            sub eax, edi	       328	show-branch.c	FUNCTION_12	WHILE_1	IF_1
0x400090b	              0xc3	                                     ret	       328	show-branch.c	FUNCTION_12	WHILE_1	IF_1
0x400090c	        0x440fb606	                   movzx r8d, byte [rsi]	       331	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x4000910	        0x410fbec0	                          movsx eax, r8b	       331	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x4000914	           0xfb639	                   movzx edi, byte [rcx]	       332	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x4000917	        0x400fbed7	                          movsx edx, dil	       332	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x400091b	        0x448d48d0	                   lea r9d, [rax - 0x30]	       333	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x400091f	        0x4183f909	                              cmp r9d, 9	       333	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x4000923	            0x7651	                           jbe 0x4000976	       333	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x4000925	          0x4189d1	                            mov r9d, edx	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x4000928	        0x4183e930	                           sub r9d, 0x30	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x400092c	        0x4183f909	                              cmp r9d, 9	       336	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x4000930	        0x410f46d2	                        cmovbe edx, r10d	       336	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x4000934	            0x39d0	                            cmp eax, edx	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x4000936	            0x740a	                            je 0x4000942	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x4000938	            0xeb05	                           jmp 0x400093f	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x400093a	      0xb800000000	                              mov eax, 0	       334	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x400093f	            0x29d0	                            sub eax, edx	       338	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x4000941	              0xc3	                                     ret	       338	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x4000942	            0x85d2	                           test edx, edx	       339	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_5
0x4000944	            0x740a	                            je 0x4000950	       339	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_5
0x4000946	        0x4883c601	                              add rsi, 1	       341	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x400094a	        0x4883c101	                              add rcx, 1	       342	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x400094e	            0xebbc	                           jmp 0x400090c	       342	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x4000950	          0x4108f8	                             or r8b, dil	       344	show-branch.c	FUNCTION_12	WHILE_1	IF_6
0x4000953	     0xf8544ffffff	                           jne 0x400089d	       344	show-branch.c	FUNCTION_12	WHILE_1	IF_6
0x4000959	      0xb800000000	                              mov eax, 0	       345	show-branch.c	FUNCTION_12	WHILE_1	IF_6
0x400095e	              0xc3	                                     ret	       352	show-branch.c	FUNCTION_13	CALL_1
0x400095f	           0xfb611	                   movzx edx, byte [rcx]	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000962	          0x8d7ad0	                   lea edi, [rdx - 0x30]	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000965	      0xb800000000	                              mov eax, 0	       311	show-branch.c	FUNCTION_11	FOR_1
0x400096a	        0x4080ff09	                              cmp dil, 9	       312	show-branch.c	FUNCTION_11	FOR_1
0x400096e	     0xf8662ffffff	                           jbe 0x40008d6	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000974	            0xeb8b	                           jmp 0x4000901	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000976	        0x400fbec7	                          movsx eax, dil	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x400097a	          0x83e830	                           sub eax, 0x30	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x400097d	          0x83f809	                              cmp eax, 9	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x4000980	            0x76ce	                           jbe 0x4000950	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x4000982	            0x85d2	                           test edx, edx	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x4000984	            0x75b4	                           jne 0x400093a	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x4000986	            0xebc8	                           jmp 0x4000950	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
mark_seen	FOR,0:SWITCH,0:CALL,1:ELSE,0:functions,0:WHILE,0:IF,1:DO,0	8
0x400064a	      0xb800000000	                              mov eax, 0	       193	show-branch.c	FUNCTION_8
0x400064f	    0xf707f0ffff7f	           test dword [rdi], 0x7ffffff0 	       189	show-branch.c	FUNCTION_8	IF_1
0x4000655	            0x7512	                           jne 0x4000669	       189	show-branch.c	FUNCTION_8	IF_1
0x4000657	        0x4883ec08	                              sub rsp, 8	       188	show-branch.c	FUNCTION_8
0x400065b	      0xe800000000	                          call 0x4000660	       190	show-branch.c	FUNCTION_8	IF_1	CALL_1
0x4000660	      0xb801000000	                              mov eax, 1	       191	show-branch.c	FUNCTION_8	IF_1
0x4000665	        0x4883c408	                              add rsp, 8	       194	show-branch.c	FUNCTION_8
0x4000669	            0xf3c3	                                     ret	       194	show-branch.c	FUNCTION_8
append_matching_ref	FOR,1:SWITCH,0:CALL,7:ELSE,0:functions,0:WHILE,0:IF,5:DO,0	68
0x4000465	            0x4155	                                push r13	       429	show-branch.c	FUNCTION_19
0x4000467	            0x4154	                                push r12	       429	show-branch.c	FUNCTION_19
0x4000469	              0x55	                                push rbp	       429	show-branch.c	FUNCTION_19
0x400046a	              0x53	                                push rbx	       429	show-branch.c	FUNCTION_19
0x400046b	        0x4883ec08	                              sub rsp, 8	       429	show-branch.c	FUNCTION_19
0x400046f	          0x4889fb	                            mov rbx, rdi	       429	show-branch.c	FUNCTION_19
0x4000472	          0x4889f5	                            mov rbp, rsi	       429	show-branch.c	FUNCTION_19
0x4000475	          0x4189d4	                           mov r12d, edx	       429	show-branch.c	FUNCTION_19
0x4000478	          0x4989cd	                            mov r13, rcx	       429	show-branch.c	FUNCTION_19
0x400047b	      0xe800000000	                          call 0x4000480	       435	show-branch.c	FUNCTION_19	CALL_1
0x4000480	    0x8b0d00000000	            mov ecx, dword [0x04000486] 	       436	show-branch.c	FUNCTION_19	FOR_1
0x4000486	          0x4889de	                            mov rsi, rbx	       436	show-branch.c	FUNCTION_19	FOR_1
0x4000489	            0xeb0f	                           jmp 0x400049a	       436	show-branch.c	FUNCTION_19	FOR_1
0x400048b	        0x4883c601	                              add rsi, 1	       437	show-branch.c	FUNCTION_19	FOR_1	IF_1
0x400048f	          0x80fa2f	                            cmp dl, 0x2f	       438	show-branch.c	FUNCTION_19	FOR_1	IF_1
0x4000492	           0xf94c2	                                 sete dl	       438	show-branch.c	FUNCTION_19	FOR_1	IF_1
0x4000495	           0xfb6d2	                           movzx edx, dl	       438	show-branch.c	FUNCTION_19	FOR_1	IF_1
0x4000498	            0x29d0	                            sub eax, edx	       438	show-branch.c	FUNCTION_19	FOR_1	IF_1
0x400049a	           0xfb616	                   movzx edx, byte [rsi]	       436	show-branch.c	FUNCTION_19	FOR_1
0x400049d	            0x84d2	                             test dl, dl	       436	show-branch.c	FUNCTION_19	FOR_1
0x400049f	     0xf848b000000	                            je 0x4000530	       436	show-branch.c	FUNCTION_19	FOR_1
0x40004a5	            0x39c8	                            cmp eax, ecx	       436	show-branch.c	FUNCTION_19	FOR_1
0x40004a7	            0x7fe2	                            jg 0x400048b	       436	show-branch.c	FUNCTION_19	FOR_1
0x40004a9	      0xba00000000	                              mov edx, 0	       441	show-branch.c	FUNCTION_19	IF_3	CALL_2
0x40004ae	    0x488b3d000000	            mov rdi, qword [0x040004b5] 	       441	show-branch.c	FUNCTION_19	IF_3	CALL_2
0x40004b5	      0xe800000000	                          call 0x40004ba	       441	show-branch.c	FUNCTION_19	IF_3	CALL_2
0x40004ba	            0x89c2	                            mov edx, eax	       441	show-branch.c	FUNCTION_19	IF_3	CALL_2
0x40004bc	      0xb800000000	                              mov eax, 0	       442	show-branch.c	FUNCTION_19	IF_3
0x40004c1	            0x85d2	                           test edx, edx	       441	show-branch.c	FUNCTION_19	IF_3	CALL_2
0x40004c3	            0x7570	                           jne 0x4000535	       441	show-branch.c	FUNCTION_19	IF_3	CALL_2
0x40004c5	      0xbe00000000	                              mov esi, 0	       443	show-branch.c	FUNCTION_19	IF_4	CALL_3
0x40004ca	          0x4889df	                            mov rdi, rbx	       443	show-branch.c	FUNCTION_19	IF_4	CALL_3
0x40004cd	      0xe800000000	                          call 0x40004d2	       443	show-branch.c	FUNCTION_19	IF_4	CALL_3
0x40004d2	            0x85c0	                           test eax, eax	       443	show-branch.c	FUNCTION_19	IF_4	CALL_3
0x40004d4	            0x7413	                            je 0x40004e9	       443	show-branch.c	FUNCTION_19	IF_4	CALL_3
0x40004d6	          0x4c89e9	                            mov rcx, r13	       444	show-branch.c	FUNCTION_19	CALL_4
0x40004d9	          0x4489e2	                           mov edx, r12d	       444	show-branch.c	FUNCTION_19	CALL_4
0x40004dc	          0x4889ee	                            mov rsi, rbp	       444	show-branch.c	FUNCTION_19	CALL_4
0x40004df	          0x4889df	                            mov rdi, rbx	       444	show-branch.c	FUNCTION_19	CALL_4
0x40004e2	      0xe8f5feffff	                call sym.append_head_ref	       444	show-branch.c	FUNCTION_19	CALL_4
0x40004e7	            0xeb4c	                           jmp 0x4000535	       444	show-branch.c	FUNCTION_19	CALL_4
0x40004e9	      0xbe00000000	                              mov esi, 0	       445	show-branch.c	FUNCTION_19	IF_5	CALL_5
0x40004ee	          0x4889df	                            mov rdi, rbx	       445	show-branch.c	FUNCTION_19	IF_5	CALL_5
0x40004f1	      0xe800000000	                          call 0x40004f6	       445	show-branch.c	FUNCTION_19	IF_5	CALL_5
0x40004f6	            0x85c0	                           test eax, eax	       445	show-branch.c	FUNCTION_19	IF_5	CALL_5
0x40004f8	            0x7424	                            je 0x400051e	       445	show-branch.c	FUNCTION_19	IF_5	CALL_5
0x40004fa	      0xbe00000000	                              mov esi, 0	       419	show-branch.c	FUNCTION_18	IF_1	CALL_1
0x40004ff	          0x4889df	                            mov rdi, rbx	       419	show-branch.c	FUNCTION_18	IF_1	CALL_1
0x4000502	      0xe800000000	                          call 0x4000507	       419	show-branch.c	FUNCTION_18	IF_1	CALL_1
0x4000507	            0x85c0	                           test eax, eax	       419	show-branch.c	FUNCTION_18	IF_1	CALL_1
0x4000509	            0x742a	                            je 0x4000535	       419	show-branch.c	FUNCTION_18	IF_1	CALL_1
0x400050b	        0x488d7b05	                      lea rdi, [rbx + 5]	       421	show-branch.c	FUNCTION_18	CALL_2
0x400050f	      0xba00000000	                              mov edx, 0	       421	show-branch.c	FUNCTION_18	CALL_2
0x4000514	          0x4889ee	                            mov rsi, rbp	       421	show-branch.c	FUNCTION_18	CALL_2
0x4000517	      0xe868fdffff	                     call sym.append_ref	       421	show-branch.c	FUNCTION_18	CALL_2
0x400051c	            0xeb17	                           jmp 0x4000535	       421	show-branch.c	FUNCTION_18	CALL_2
0x400051e	      0xba00000000	                              mov edx, 0	       447	show-branch.c	FUNCTION_19	CALL_7
0x4000523	          0x4889ee	                            mov rsi, rbp	       447	show-branch.c	FUNCTION_19	CALL_7
0x4000526	          0x4889df	                            mov rdi, rbx	       447	show-branch.c	FUNCTION_19	CALL_7
0x4000529	      0xe856fdffff	                     call sym.append_ref	       447	show-branch.c	FUNCTION_19	CALL_7
0x400052e	            0xeb05	                           jmp 0x4000535	       447	show-branch.c	FUNCTION_19	CALL_7
0x4000530	      0xb800000000	                              mov eax, 0	       440	show-branch.c	FUNCTION_19	IF_2
0x4000535	        0x4883c408	                              add rsp, 8	       448	show-branch.c	FUNCTION_19
0x4000539	              0x5b	                                 pop rbx	       448	show-branch.c	FUNCTION_19
0x400053a	              0x5d	                                 pop rbp	       448	show-branch.c	FUNCTION_19
0x400053b	            0x415c	                                 pop r12	       448	show-branch.c	FUNCTION_19
0x400053d	            0x415d	                                 pop r13	       448	show-branch.c	FUNCTION_19
0x400053f	              0xc3	                                     ret	       448	show-branch.c	FUNCTION_19
