name_first_parent_chain	SWITCH,0:IF,3:functions,0:DO,0:WHILE,1:CALL,1:ELSE,1:FOR,0	45
0x4000840	            0x4155	                                push r13	        93	show-branch.c	FUNCTION_6
0x4000842	            0x4154	                                push r12	        93	show-branch.c	FUNCTION_6
0x4000844	              0x55	                                push rbp	        93	show-branch.c	FUNCTION_6
0x4000845	              0x53	                                push rbx	        93	show-branch.c	FUNCTION_6
0x4000846	        0x4883ec08	                              sub rsp, 8	        93	show-branch.c	FUNCTION_6
0x400084a	          0x4885ff	                           test rdi, rdi	        95	show-branch.c	FUNCTION_6	WHILE_1
0x400084d	            0x746c	                            je 0x40008bb	        95	show-branch.c	FUNCTION_6	WHILE_1
0x400084f	        0x488b4718	            mov rax, qword [rdi + 0x18] 	        97	show-branch.c	FUNCTION_6	WHILE_1	IF_1
0x4000853	          0x4885c0	                           test rax, rax	        97	show-branch.c	FUNCTION_6	WHILE_1	IF_1
0x4000856	            0x7463	                            je 0x40008bb	        97	show-branch.c	FUNCTION_6	WHILE_1	IF_1
0x4000858	        0x488b5730	            mov rdx, qword [rdi + 0x30] 	        99	show-branch.c	FUNCTION_6	WHILE_1	IF_2
0x400085c	          0x4885d2	                           test rdx, rdx	        99	show-branch.c	FUNCTION_6	WHILE_1	IF_2
0x400085f	            0x745a	                            je 0x40008bb	        99	show-branch.c	FUNCTION_6	WHILE_1	IF_2
0x4000861	          0x488b1a	                    mov rbx, qword [rdx]	       101	show-branch.c	FUNCTION_6	WHILE_1
0x4000864	          0x4531e4	                          xor r12d, r12d	       102	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x4000867	      0x48837b1800	               cmp qword [rbx + 0x18], 0	       102	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x400086c	            0x7415	                            je 0x4000883	       102	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x400086e	            0xeb3d	                           jmp 0x40008ad	       102	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x4000870	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	        99	show-branch.c	FUNCTION_6	WHILE_1	IF_2
0x4000874	          0x4885d2	                           test rdx, rdx	        99	show-branch.c	FUNCTION_6	WHILE_1	IF_2
0x4000877	            0x7434	                            je 0x40008ad	        99	show-branch.c	FUNCTION_6	WHILE_1	IF_2
0x4000879	          0x488b1a	                    mov rbx, qword [rdx]	       101	show-branch.c	FUNCTION_6	WHILE_1
0x400087c	      0x48837b1800	               cmp qword [rbx + 0x18], 0	       102	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x4000881	            0x752a	                           jne 0x40008ad	       102	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x4000883	          0x8b4808	                mov ecx, dword [rax + 8]	        88	show-branch.c	FUNCTION_5	IF_2	CALL_1
0x4000886	          0x4c8b28	                    mov r13, qword [rax]	        88	show-branch.c	FUNCTION_5	IF_2	CALL_1
0x4000889	      0xbf10000000	                           mov edi, 0x10	        69	show-branch.c	FUNCTION_4	CALL_1
0x400088e	        0x4183c401	                             add r12d, 1	       104	show-branch.c	FUNCTION_6	WHILE_1	IF_3
0x4000892	          0x8d6901	                      lea ebp, [rcx + 1]	        88	show-branch.c	FUNCTION_5	IF_2	CALL_1
0x4000895	      0xe800000000	                          call 0x400089a	        69	show-branch.c	FUNCTION_4	CALL_1
0x400089a	        0x48894318	             mov qword [rbx + 0x18], rax	        69	show-branch.c	FUNCTION_4	CALL_1
0x400089e	          0x4c8928	                    mov qword [rax], r13	        71	show-branch.c	FUNCTION_4
0x40008a1	          0x896808	                mov dword [rax + 8], ebp	        72	show-branch.c	FUNCTION_4
0x40008a4	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        97	show-branch.c	FUNCTION_6	WHILE_1	IF_1
0x40008a8	          0x4885c0	                           test rax, rax	        97	show-branch.c	FUNCTION_6	WHILE_1	IF_1
0x40008ab	            0x75c3	                           jne 0x4000870	        97	show-branch.c	FUNCTION_6	WHILE_1	IF_1
0x40008ad	        0x4883c408	                              add rsp, 8	       111	show-branch.c	FUNCTION_6	ELSE_1
0x40008b1	          0x4489e0	                           mov eax, r12d	       111	show-branch.c	FUNCTION_6	ELSE_1
0x40008b4	              0x5b	                                 pop rbx	       111	show-branch.c	FUNCTION_6	ELSE_1
0x40008b5	              0x5d	                                 pop rbp	       111	show-branch.c	FUNCTION_6	ELSE_1
0x40008b6	            0x415c	                                 pop r12	       111	show-branch.c	FUNCTION_6	ELSE_1
0x40008b8	            0x415d	                                 pop r13	       111	show-branch.c	FUNCTION_6	ELSE_1
0x40008ba	              0xc3	                                     ret	       111	show-branch.c	FUNCTION_6	ELSE_1
0x40008bb	          0x4531e4	                          xor r12d, r12d	        94	show-branch.c	FUNCTION_6
0x40008be	            0xebed	                           jmp 0x40008ad	        94	show-branch.c	FUNCTION_6
rev_is_head	SWITCH,0:IF,2:functions,0:DO,0:WHILE,0:CALL,5:ELSE,0:FOR,0	72
0x4000210	          0x4885ff	                           test rdi, rdi	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x4000213	     0xf84d7000000	                            je 0x40002f0	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x4000219	              0x55	                                push rbp	       468	show-branch.c	FUNCTION_21
0x400021a	              0x53	                                push rbx	       468	show-branch.c	FUNCTION_21
0x400021b	          0x4889d0	                            mov rax, rdx	       468	show-branch.c	FUNCTION_21
0x400021e	          0x4889f5	                            mov rbp, rsi	       468	show-branch.c	FUNCTION_21
0x4000221	          0x4889fb	                            mov rbx, rdi	       468	show-branch.c	FUNCTION_21
0x4000224	        0x4883ec08	                              sub rsp, 8	       468	show-branch.c	FUNCTION_21
0x4000228	          0x4885d2	                           test rdx, rdx	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x400022b	            0x741d	                            je 0x400024a	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x400022d	          0x4885c9	                           test rcx, rcx	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x4000230	            0x7418	                            je 0x400024a	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x4000232	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_36	CALL_1
0x4000237	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_36	CALL_1
0x400023a	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_36	CALL_1
0x400023d	      0xe800000000	                          call 0x4000242	       975	cache.h	FUNCTION_36	CALL_1
0x4000242	            0x89c2	                            mov edx, eax	       975	cache.h	FUNCTION_36	CALL_1
0x4000244	            0x31c0	                            xor eax, eax	       470	show-branch.c	FUNCTION_21	IF_1
0x4000246	            0x85d2	                           test edx, edx	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x4000248	            0x7557	                           jne 0x40002a1	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x400024a	          0x4889df	                            mov rdi, rbx	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x400024d	      0xb800000000	                              mov eax, 0	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x4000252	            0xeb11	                           jmp 0x4000265	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x4000254	         0xf1f4000	                         nop dword [rax]	       469	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x4000258	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_62	DO_1
0x400025c	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_62	DO_1
0x4000260	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_62	DO_1
0x4000263	            0x757b	                           jne 0x40002e0	       488	git-compat-util.h	FUNCTION_62	DO_1
0x4000265	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_62	DO_1	IF_1
0x4000268	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_62	DO_1	IF_1
0x400026a	            0x75ec	                           jne 0x4000258	       484	git-compat-util.h	FUNCTION_62	DO_1	IF_1
0x400026c	          0x4889ee	                            mov rsi, rbp	       488	git-compat-util.h	FUNCTION_62	DO_1
0x400026f	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_62	DO_1
0x4000274	            0xeb17	                           jmp 0x400028d	       488	git-compat-util.h	FUNCTION_62	DO_1
0x4000276	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       488	git-compat-util.h	FUNCTION_62	DO_1
0x4000280	        0x4883c601	                              add rsi, 1	       488	git-compat-util.h	FUNCTION_62	DO_1
0x4000284	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_62	DO_1
0x4000288	          0x3a56ff	                  cmp dl, byte [rsi - 1]	       488	git-compat-util.h	FUNCTION_62	DO_1
0x400028b	            0x7523	                           jne 0x40002b0	       488	git-compat-util.h	FUNCTION_62	DO_1
0x400028d	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_62	DO_1	IF_1
0x4000290	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_62	DO_1	IF_1
0x4000292	            0x75ec	                           jne 0x4000280	       484	git-compat-util.h	FUNCTION_62	DO_1	IF_1
0x4000294	      0xe800000000	                          call 0x4000299	       474	show-branch.c	FUNCTION_21	CALL_5
0x4000299	            0x85c0	                           test eax, eax	       474	show-branch.c	FUNCTION_21	CALL_5
0x400029b	           0xf94c0	                                 sete al	       474	show-branch.c	FUNCTION_21	CALL_5
0x400029e	           0xfb6c0	                           movzx eax, al	       474	show-branch.c	FUNCTION_21	CALL_5
0x40002a1	        0x4883c408	                              add rsp, 8	       475	show-branch.c	FUNCTION_21
0x40002a5	              0x5b	                                 pop rbx	       475	show-branch.c	FUNCTION_21
0x40002a6	              0x5d	                                 pop rbp	       475	show-branch.c	FUNCTION_21
0x40002a7	              0xc3	                                     ret	       475	show-branch.c	FUNCTION_21
0x40002a8	     0xf1f84000000	                   nop dword [rax + rax]	       475	show-branch.c	FUNCTION_21
0x40002b0	          0x4889ee	                            mov rsi, rbp	       488	git-compat-util.h	FUNCTION_62	DO_1
0x40002b3	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_62	DO_1
0x40002b8	            0xeb13	                           jmp 0x40002cd	       488	git-compat-util.h	FUNCTION_62	DO_1
0x40002ba	    0x660f1f440000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_62	DO_1
0x40002c0	        0x4883c601	                              add rsi, 1	       488	git-compat-util.h	FUNCTION_62	DO_1
0x40002c4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_62	DO_1
0x40002c8	          0x3a56ff	                  cmp dl, byte [rsi - 1]	       488	git-compat-util.h	FUNCTION_62	DO_1
0x40002cb	            0x751b	                           jne 0x40002e8	       488	git-compat-util.h	FUNCTION_62	DO_1
0x40002cd	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_62	DO_1	IF_1
0x40002d0	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_62	DO_1	IF_1
0x40002d2	            0x75ec	                           jne 0x40002c0	       484	git-compat-util.h	FUNCTION_62	DO_1	IF_1
0x40002d4	            0xebbe	                           jmp 0x4000294	       484	git-compat-util.h	FUNCTION_62	DO_1	IF_1
0x40002d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       484	git-compat-util.h	FUNCTION_62	DO_1	IF_1
0x40002e0	          0x4889df	                            mov rdi, rbx	       488	git-compat-util.h	FUNCTION_62	DO_1
0x40002e3	            0xeb87	                           jmp 0x400026c	       488	git-compat-util.h	FUNCTION_62	DO_1
0x40002e5	           0xf1f00	                         nop dword [rax]	       488	git-compat-util.h	FUNCTION_62	DO_1
0x40002e8	          0x4889ee	                            mov rsi, rbp	       488	git-compat-util.h	FUNCTION_62	DO_1
0x40002eb	            0xeba7	                           jmp 0x4000294	       488	git-compat-util.h	FUNCTION_62	DO_1
0x40002ed	           0xf1f00	                         nop dword [rax]	       488	git-compat-util.h	FUNCTION_62	DO_1
0x40002f0	            0x31c0	                            xor eax, eax	       470	show-branch.c	FUNCTION_21	IF_1
0x40002f2	              0xc3	                                     ret	       470	show-branch.c	FUNCTION_21	IF_1
parse_reflog_param	SWITCH,0:IF,4:functions,0:DO,0:WHILE,0:CALL,2:ELSE,2:FOR,0	47
0x4000150	              0x55	                                push rbp	       585	show-branch.c	FUNCTION_27
0x4000151	              0x53	                                push rbx	       585	show-branch.c	FUNCTION_27
0x4000152	          0x4889f3	                            mov rbx, rsi	       585	show-branch.c	FUNCTION_27
0x4000155	      0xba0a000000	                            mov edx, 0xa	       590	show-branch.c	FUNCTION_27	CALL_1
0x400015a	        0x4883ec18	                           sub rsp, 0x18	       585	show-branch.c	FUNCTION_27
0x400015e	        0x488b6f10	            mov rbp, qword [rdi + 0x10] 	       587	show-branch.c	FUNCTION_27
0x4000162	    0x64488b042528	                mov rax, qword fs:[0x28]	       585	show-branch.c	FUNCTION_27
0x400016b	      0x4889442408	                mov qword [rsp + 8], rax	       585	show-branch.c	FUNCTION_27
0x4000170	            0x31c0	                            xor eax, eax	       585	show-branch.c	FUNCTION_27
0x4000172	          0x4885f6	                           test rsi, rsi	       589	show-branch.c	FUNCTION_27	IF_1
0x4000175	      0xb800000000	                              mov eax, 0	       589	show-branch.c	FUNCTION_27	IF_1
0x400017a	          0x4889e6	                            mov rsi, rsp	       590	show-branch.c	FUNCTION_27	CALL_1
0x400017d	        0x480f44d8	                          cmove rbx, rax	       589	show-branch.c	FUNCTION_27	IF_1
0x4000181	          0x4889df	                            mov rdi, rbx	       590	show-branch.c	FUNCTION_27	CALL_1
0x4000184	      0xe800000000	                          call 0x4000189	       590	show-branch.c	FUNCTION_27	CALL_1
0x4000189	          0x4889c2	                            mov rdx, rax	       590	show-branch.c	FUNCTION_27	CALL_1
0x400018c	    0x890500000000	            mov dword [0x04000192], eax 	       590	show-branch.c	FUNCTION_27	CALL_1
0x4000192	        0x488b0424	                    mov rax, qword [rsp]	       591	show-branch.c	FUNCTION_27	IF_2
0x4000196	           0xfb608	                   movzx ecx, byte [rax]	       591	show-branch.c	FUNCTION_27	IF_2
0x4000199	          0x80f92c	                            cmp cl, 0x2c	       591	show-branch.c	FUNCTION_27	IF_2
0x400019c	            0x743a	                            je 0x40001d8	       591	show-branch.c	FUNCTION_27	IF_2
0x400019e	            0x84c9	                             test cl, cl	       593	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x40001a0	            0x7546	                           jne 0x40001e8	       593	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x40001a2	    0x48c745000000	                      mov qword [rbp], 0	       596	show-branch.c	FUNCTION_27	ELSE_2
0x40001aa	            0x31c0	                            xor eax, eax	       599	show-branch.c	FUNCTION_27
0x40001ac	            0x85d2	                           test edx, edx	       597	show-branch.c	FUNCTION_27	IF_4
0x40001ae	            0x7f0a	                            jg 0x40001ba	       597	show-branch.c	FUNCTION_27	IF_4
0x40001b0	    0xc70500000000	               mov dword [0x040001ba], 4	       598	show-branch.c	FUNCTION_27	IF_4
0x40001ba	      0x488b742408	                mov rsi, qword [rsp + 8]	       600	show-branch.c	FUNCTION_27
0x40001bf	    0x644833342528	                xor rsi, qword fs:[0x28]	       600	show-branch.c	FUNCTION_27
0x40001c8	            0x7534	                           jne 0x40001fe	       600	show-branch.c	FUNCTION_27
0x40001ca	        0x4883c418	                           add rsp, 0x18	       600	show-branch.c	FUNCTION_27
0x40001ce	              0x5b	                                 pop rbx	       600	show-branch.c	FUNCTION_27
0x40001cf	              0x5d	                                 pop rbp	       600	show-branch.c	FUNCTION_27
0x40001d0	              0xc3	                                     ret	       600	show-branch.c	FUNCTION_27
0x40001d1	     0xf1f80000000	                         nop dword [rax]	       600	show-branch.c	FUNCTION_27
0x40001d8	        0x4883c001	                              add rax, 1	       592	show-branch.c	FUNCTION_27	IF_2
0x40001dc	        0x48894500	                    mov qword [rbp], rax	       592	show-branch.c	FUNCTION_27	IF_2
0x40001e0	            0xebc8	                           jmp 0x40001aa	       592	show-branch.c	FUNCTION_27	IF_2
0x40001e2	    0x660f1f440000	                    nop word [rax + rax]	       592	show-branch.c	FUNCTION_27	IF_2
0x40001e8	          0x4889de	                            mov rsi, rbx	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x40001eb	      0xbf00000000	                              mov edi, 0	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x40001f0	            0x31c0	                            xor eax, eax	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x40001f2	      0xe800000000	                          call 0x40001f7	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x40001f7	      0xb8ffffffff	                     mov eax, 0xffffffff	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x40001fc	            0xebbc	                           jmp 0x40001ba	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x40001fe	      0xe800000000	                          call 0x4000203	       600	show-branch.c	FUNCTION_27
append_one_rev	SWITCH,0:IF,3:functions,0:DO,0:WHILE,0:CALL,11:ELSE,0:FOR,0	77
0x40008c0	              0x55	                                push rbp	       515	show-branch.c	FUNCTION_24
0x40008c1	              0x53	                                push rbx	       515	show-branch.c	FUNCTION_24
0x40008c2	          0x4889fb	                            mov rbx, rdi	       515	show-branch.c	FUNCTION_24
0x40008c5	        0x4883ec28	                           sub rsp, 0x28	       515	show-branch.c	FUNCTION_24
0x40008c9	          0x4889e6	                            mov rsi, rsp	       517	show-branch.c	FUNCTION_24	IF_1	CALL_1
0x40008cc	    0x64488b042528	                mov rax, qword fs:[0x28]	       515	show-branch.c	FUNCTION_24
0x40008d5	      0x4889442418	             mov qword [rsp + 0x18], rax	       515	show-branch.c	FUNCTION_24
0x40008da	            0x31c0	                            xor eax, eax	       515	show-branch.c	FUNCTION_24
0x40008dc	      0xe800000000	                          call 0x40008e1	       517	show-branch.c	FUNCTION_24	IF_1	CALL_1
0x40008e1	            0x85c0	                           test eax, eax	       517	show-branch.c	FUNCTION_24	IF_1	CALL_1
0x40008e3	     0xf84cf000000	                            je 0x40009b8	       517	show-branch.c	FUNCTION_24	IF_1	CALL_1
0x40008e9	      0xbe2a000000	                           mov esi, 0x2a	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x40008ee	          0x4889df	                            mov rdi, rbx	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x40008f1	      0xe800000000	                          call 0x40008f6	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x40008f6	          0x4885c0	                           test rax, rax	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x40008f9	            0x747d	                            je 0x4000978	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x40008fb	          0x4889df	                            mov rdi, rbx	       526	show-branch.c	FUNCTION_24	IF_2	CALL_6
0x40008fe	    0x48632d000000	         movsxd rbp, dword [0x04000905] 	       523	show-branch.c	FUNCTION_24	IF_2
0x4000905	    0x48891d000000	            mov qword [0x0400090c], rbx 	       525	show-branch.c	FUNCTION_24	IF_2
0x400090c	      0xe800000000	                          call 0x4000911	       526	show-branch.c	FUNCTION_24	IF_2	CALL_6
0x4000911	            0x31f6	                            xor esi, esi	       527	show-branch.c	FUNCTION_24	IF_2	CALL_7
0x4000913	      0xbf00000000	                              mov edi, 0	       527	show-branch.c	FUNCTION_24	IF_2	CALL_7
0x4000918	    0x890500000000	            mov dword [0x0400091e], eax 	       526	show-branch.c	FUNCTION_24	IF_2	CALL_6
0x400091e	      0xe800000000	                          call 0x4000923	       527	show-branch.c	FUNCTION_24	IF_2	CALL_7
0x4000923	    0x8b3500000000	            mov esi, dword [0x04000929] 	       528	show-branch.c	FUNCTION_24	IF_2	IF_3
0x4000929	            0x39f5	                            cmp ebp, esi	       528	show-branch.c	FUNCTION_24	IF_2	IF_3
0x400092b	            0x7509	                           jne 0x4000936	       528	show-branch.c	FUNCTION_24	IF_2	IF_3
0x400092d	          0x83fe18	                           cmp esi, 0x18	       528	show-branch.c	FUNCTION_24	IF_2	IF_3
0x4000930	     0xf8e9a000000	                           jle 0x40009d0	       528	show-branch.c	FUNCTION_24	IF_2	IF_3
0x4000936	            0x29ee	                            sub esi, ebp	       357	show-branch.c	FUNCTION_14	CALL_1
0x4000938	          0x4863f6	                         movsxd rsi, esi	       357	show-branch.c	FUNCTION_14	CALL_1
0x400093b	        0x4883fe01	                              cmp rsi, 1	      1048	git-compat-util.h	FUNCTION_80	IF_1
0x400093f	            0x7617	                           jbe 0x4000958	      1048	git-compat-util.h	FUNCTION_80	IF_1
0x4000941	    0x488d3ced0000	                        lea rdi, [rbp*8]	      1049	git-compat-util.h	FUNCTION_80	CALL_1
0x4000949	      0xb900000000	                              mov ecx, 0	      1049	git-compat-util.h	FUNCTION_80	CALL_1
0x400094e	      0xba08000000	                              mov edx, 8	      1049	git-compat-util.h	FUNCTION_80	CALL_1
0x4000953	      0xe800000000	                          call 0x4000958	      1049	git-compat-util.h	FUNCTION_80	CALL_1
0x4000958	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       535	show-branch.c	FUNCTION_24
0x400095d	    0x644833042528	                xor rax, qword fs:[0x28]	       535	show-branch.c	FUNCTION_24
0x4000966	     0xf858d000000	                           jne 0x40009f9	       535	show-branch.c	FUNCTION_24
0x400096c	        0x4883c428	                           add rsp, 0x28	       535	show-branch.c	FUNCTION_24
0x4000970	              0x5b	                                 pop rbx	       535	show-branch.c	FUNCTION_24
0x4000971	              0x5d	                                 pop rbp	       535	show-branch.c	FUNCTION_24
0x4000972	              0xc3	                                     ret	       535	show-branch.c	FUNCTION_24
0x4000973	       0xf1f440000	                   nop dword [rax + rax]	       535	show-branch.c	FUNCTION_24
0x4000978	      0xbe3f000000	                           mov esi, 0x3f	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x400097d	          0x4889df	                            mov rdi, rbx	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000980	      0xe800000000	                          call 0x4000985	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000985	          0x4885c0	                           test rax, rax	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000988	     0xf856dffffff	                           jne 0x40008fb	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x400098e	      0xbe5b000000	                           mov esi, 0x5b	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000993	          0x4889df	                            mov rdi, rbx	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000996	      0xe800000000	                          call 0x400099b	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x400099b	          0x4885c0	                           test rax, rax	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x400099e	     0xf8557ffffff	                           jne 0x40008fb	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x40009a4	          0x4889de	                            mov rsi, rbx	       534	show-branch.c	FUNCTION_24	CALL_11
0x40009a7	      0xbf00000000	                              mov edi, 0	       534	show-branch.c	FUNCTION_24	CALL_11
0x40009ac	            0x31c0	                            xor eax, eax	       534	show-branch.c	FUNCTION_24	CALL_11
0x40009ae	      0xe800000000	                          call 0x40009b3	       534	show-branch.c	FUNCTION_24	CALL_11
0x40009b3	       0xf1f440000	                   nop dword [rax + rax]	       534	show-branch.c	FUNCTION_24	CALL_11
0x40009b8	            0x31d2	                            xor edx, edx	       518	show-branch.c	FUNCTION_24	IF_1	CALL_2
0x40009ba	          0x4889e6	                            mov rsi, rsp	       518	show-branch.c	FUNCTION_24	IF_1	CALL_2
0x40009bd	          0x4889df	                            mov rdi, rbx	       518	show-branch.c	FUNCTION_24	IF_1	CALL_2
0x40009c0	      0xe85bfbffff	                     call sym.append_ref	       518	show-branch.c	FUNCTION_24	IF_1	CALL_2
0x40009c5	            0xeb91	                           jmp 0x4000958	       519	show-branch.c	FUNCTION_24	IF_1
0x40009c7	    0x660f1f840000	                    nop word [rax + rax]	       519	show-branch.c	FUNCTION_24	IF_1
0x40009d0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_85	CALL_2
0x40009d5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_85	CALL_2
0x40009da	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_85	CALL_2
0x40009dc	      0xe800000000	                          call 0x40009e1	        54	gettext.h	FUNCTION_85	CALL_2
0x40009e1	          0x4889de	                            mov rsi, rbx	       530	show-branch.c	FUNCTION_24	IF_2	CALL_9
0x40009e4	          0x4889c7	                            mov rdi, rax	       530	show-branch.c	FUNCTION_24	IF_2	CALL_9
0x40009e7	            0x31c0	                            xor eax, eax	       530	show-branch.c	FUNCTION_24	IF_2	CALL_9
0x40009e9	      0xe800000000	                          call 0x40009ee	       530	show-branch.c	FUNCTION_24	IF_2	CALL_9
0x40009ee	    0x8b3500000000	            mov esi, dword [0x040009f4] 	       530	show-branch.c	FUNCTION_24	IF_2	CALL_9
0x40009f4	      0xe93dffffff	                           jmp 0x4000936	       530	show-branch.c	FUNCTION_24	IF_2	CALL_9
0x40009f9	      0xe800000000	                          call 0x40009fe	       535	show-branch.c	FUNCTION_24
show_one_commit	SWITCH,0:IF,5:functions,0:DO,0:WHILE,0:CALL,10:ELSE,2:FOR,0	88
0x4000300	            0x4155	                                push r13	       271	show-branch.c	FUNCTION_10
0x4000302	            0x4154	                                push r12	       271	show-branch.c	FUNCTION_10
0x4000304	          0x4189f5	                           mov r13d, esi	       271	show-branch.c	FUNCTION_10
0x4000307	              0x55	                                push rbp	       271	show-branch.c	FUNCTION_10
0x4000308	              0x53	                                push rbx	       271	show-branch.c	FUNCTION_10
0x4000309	          0x4889fd	                            mov rbp, rdi	       271	show-branch.c	FUNCTION_10
0x400030c	      0xb900000000	                              mov ecx, 0	       271	show-branch.c	FUNCTION_10
0x4000311	        0x4883ec28	                           sub rsp, 0x28	       271	show-branch.c	FUNCTION_10
0x4000315	        0x4c8b6718	            mov r12, qword [rdi + 0x18] 	       274	show-branch.c	FUNCTION_10
0x4000319	    0x64488b042528	                mov rax, qword fs:[0x28]	       271	show-branch.c	FUNCTION_10
0x4000322	      0x4889442418	             mov qword [rsp + 0x18], rax	       271	show-branch.c	FUNCTION_10
0x4000327	            0x31c0	                            xor eax, eax	       271	show-branch.c	FUNCTION_10
0x4000329	          0xf60701	                      test byte [rdi], 1	       276	show-branch.c	FUNCTION_10	IF_1
0x400032c	    0x48c704240000	                      mov qword [rsp], 0	       272	show-branch.c	FUNCTION_10
0x4000334	    0x48c744240800	                  mov qword [rsp + 8], 0	       272	show-branch.c	FUNCTION_10
0x400033d	    0x48c744241000	               mov qword [rsp + 0x10], 0	       272	show-branch.c	FUNCTION_10
0x4000346	     0xf85e4000000	                           jne 0x4000430	       276	show-branch.c	FUNCTION_10	IF_1
0x400034c	          0x4889cb	                            mov rbx, rcx	       273	show-branch.c	FUNCTION_10
0x400034f	      0xb800000000	                              mov eax, 0	       273	show-branch.c	FUNCTION_10
0x4000354	            0xeb1b	                           jmp 0x4000371	       273	show-branch.c	FUNCTION_10
0x4000356	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       273	show-branch.c	FUNCTION_10
0x4000360	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_62	DO_1
0x4000364	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_62	DO_1
0x4000368	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_62	DO_1
0x400036b	     0xf85b7000000	                           jne 0x4000428	       488	git-compat-util.h	FUNCTION_62	DO_1
0x4000371	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_62	DO_1	IF_1
0x4000374	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_62	DO_1	IF_1
0x4000376	            0x75e8	                           jne 0x4000360	       484	git-compat-util.h	FUNCTION_62	DO_1	IF_1
0x4000378	          0x4585ed	                         test r13d, r13d	       282	show-branch.c	FUNCTION_10	IF_2
0x400037b	            0x7553	                           jne 0x40003d0	       282	show-branch.c	FUNCTION_10	IF_2
0x400037d	          0x4d85e4	                           test r12, r12	       283	show-branch.c	FUNCTION_10	IF_2	IF_3
0x4000380	            0x747e	                            je 0x4000400	       283	show-branch.c	FUNCTION_10	IF_2	IF_3
0x4000382	        0x498b1424	                    mov rdx, qword [r12]	       283	show-branch.c	FUNCTION_10	IF_2	IF_3
0x4000386	          0x4885d2	                           test rdx, rdx	       283	show-branch.c	FUNCTION_10	IF_2	IF_3
0x4000389	            0x7475	                            je 0x4000400	       283	show-branch.c	FUNCTION_10	IF_2	IF_3
0x400038b	            0x31c0	                            xor eax, eax	       104	stdio2.h	FUNCTION_92	CALL_2
0x400038d	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	FUNCTION_92	CALL_2
0x4000392	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	FUNCTION_92	CALL_2
0x4000397	      0xe800000000	                          call 0x400039c	       104	stdio2.h	FUNCTION_92	CALL_2
0x400039c	      0x418b542408	                mov edx, dword [r12 + 8]	       285	show-branch.c	FUNCTION_10	IF_2	IF_3	IF_4
0x40003a1	            0x85d2	                           test edx, edx	       285	show-branch.c	FUNCTION_10	IF_2	IF_3	IF_4
0x40003a3	            0x741a	                            je 0x40003bf	       285	show-branch.c	FUNCTION_10	IF_2	IF_3	IF_4
0x40003a5	          0x83fa01	                              cmp edx, 1	       286	show-branch.c	FUNCTION_10	IF_2	IF_3	IF_4	IF_5
0x40003a8	     0xf849c000000	                            je 0x400044a	       286	show-branch.c	FUNCTION_10	IF_2	IF_3	IF_4	IF_5
0x40003ae	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	FUNCTION_92	CALL_2
0x40003b3	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	FUNCTION_92	CALL_2
0x40003b8	            0x31c0	                            xor eax, eax	       104	stdio2.h	FUNCTION_92	CALL_2
0x40003ba	      0xe800000000	                          call 0x40003bf	       104	stdio2.h	FUNCTION_92	CALL_2
0x40003bf	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	FUNCTION_92	CALL_2
0x40003c4	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	FUNCTION_92	CALL_2
0x40003c9	            0x31c0	                            xor eax, eax	       104	stdio2.h	FUNCTION_92	CALL_2
0x40003cb	      0xe800000000	                          call 0x40003d0	       104	stdio2.h	FUNCTION_92	CALL_2
0x40003d0	          0x4889df	                            mov rdi, rbx	       298	show-branch.c	FUNCTION_10	CALL_9
0x40003d3	      0xe800000000	                          call 0x40003d8	       298	show-branch.c	FUNCTION_10	CALL_9
0x40003d8	          0x4889e7	                            mov rdi, rsp	       299	show-branch.c	FUNCTION_10	CALL_10
0x40003db	      0xe800000000	                          call 0x40003e0	       299	show-branch.c	FUNCTION_10	CALL_10
0x40003e0	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       300	show-branch.c	FUNCTION_10
0x40003e5	    0x644833042528	                xor rax, qword fs:[0x28]	       300	show-branch.c	FUNCTION_10
0x40003ee	            0x7569	                           jne 0x4000459	       300	show-branch.c	FUNCTION_10
0x40003f0	        0x4883c428	                           add rsp, 0x28	       300	show-branch.c	FUNCTION_10
0x40003f4	              0x5b	                                 pop rbx	       300	show-branch.c	FUNCTION_10
0x40003f5	              0x5d	                                 pop rbp	       300	show-branch.c	FUNCTION_10
0x40003f6	            0x415c	                                 pop r12	       300	show-branch.c	FUNCTION_10
0x40003f8	            0x415d	                                 pop r13	       300	show-branch.c	FUNCTION_10
0x40003fa	              0xc3	                                     ret	       300	show-branch.c	FUNCTION_10
0x40003fb	       0xf1f440000	                   nop dword [rax + rax]	       300	show-branch.c	FUNCTION_10
0x4000400	    0x8b3500000000	            mov esi, dword [0x04000406] 	       294	show-branch.c	FUNCTION_10	IF_2	ELSE_2	CALL_7
0x4000406	        0x488d7d04	                      lea rdi, [rbp + 4]	       295	show-branch.c	FUNCTION_10	IF_2	ELSE_2	CALL_8
0x400040a	      0xe800000000	                          call 0x400040f	       294	show-branch.c	FUNCTION_10	IF_2	ELSE_2	CALL_7
0x400040f	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	FUNCTION_92	CALL_2
0x4000414	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	FUNCTION_92	CALL_2
0x4000417	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	FUNCTION_92	CALL_2
0x400041c	            0x31c0	                            xor eax, eax	       104	stdio2.h	FUNCTION_92	CALL_2
0x400041e	      0xe800000000	                          call 0x4000423	       104	stdio2.h	FUNCTION_92	CALL_2
0x4000423	            0xebab	                           jmp 0x40003d0	       104	stdio2.h	FUNCTION_92	CALL_2
0x4000425	           0xf1f00	                         nop dword [rax]	       104	stdio2.h	FUNCTION_92	CALL_2
0x4000428	          0x4889cb	                            mov rbx, rcx	       488	git-compat-util.h	FUNCTION_62	DO_1
0x400042b	      0xe948ffffff	                           jmp 0x4000378	       488	git-compat-util.h	FUNCTION_62	DO_1
0x4000430	          0x4889fe	                            mov rsi, rdi	       277	show-branch.c	FUNCTION_10	IF_1	CALL_1
0x4000433	          0x4889e2	                            mov rdx, rsp	       277	show-branch.c	FUNCTION_10	IF_1	CALL_1
0x4000436	      0xbf05000000	                              mov edi, 5	       277	show-branch.c	FUNCTION_10	IF_1	CALL_1
0x400043b	      0xe800000000	                          call 0x4000440	       277	show-branch.c	FUNCTION_10	IF_1	CALL_1
0x4000440	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       278	show-branch.c	FUNCTION_10	IF_1
0x4000445	      0xe902ffffff	                           jmp 0x400034c	       278	show-branch.c	FUNCTION_10	IF_1
0x400044a	      0xbf5e000000	                           mov edi, 0x5e	       104	stdio2.h	FUNCTION_92	CALL_2
0x400044f	      0xe800000000	                          call 0x4000454	       104	stdio2.h	FUNCTION_92	CALL_2
0x4000454	      0xe966ffffff	                           jmp 0x40003bf	       104	stdio2.h	FUNCTION_92	CALL_2
0x4000459	      0xe800000000	                          call 0x400045e	       300	show-branch.c	FUNCTION_10
compare_ref_name	SWITCH,0:IF,0:functions,0:DO,0:WHILE,0:CALL,1:ELSE,0:FOR,0	79
0x4000040	          0x488b36	                    mov rsi, qword [rsi]	       352	show-branch.c	FUNCTION_13	CALL_1
0x4000043	          0x488b3f	                    mov rdi, qword [rdi]	       352	show-branch.c	FUNCTION_13	CALL_1
0x4000046	           0xfbe16	                   movsx edx, byte [rsi]	       352	show-branch.c	FUNCTION_13	CALL_1
0x4000049	           0xfbe0f	                   movsx ecx, byte [rdi]	       352	show-branch.c	FUNCTION_13	CALL_1
0x400004c	          0x8d41d0	                   lea eax, [rcx - 0x30]	       312	show-branch.c	FUNCTION_11	FOR_1
0x400004f	            0x3c09	                               cmp al, 9	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000051	     0xf87d4000000	                            ja 0x400012b	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000057	            0x31c0	                            xor eax, eax	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000059	     0xf1f80000000	                         nop dword [rax]	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000060	          0x8d0480	                  lea eax, [rax + rax*4]	       314	show-branch.c	FUNCTION_11	FOR_1
0x4000063	        0x4883c701	                              add rdi, 1	       313	show-branch.c	FUNCTION_11	FOR_1
0x4000067	        0x8d4441d0	           lea eax, [rcx + rax*2 - 0x30]	       314	show-branch.c	FUNCTION_11	FOR_1
0x400006b	           0xfbe0f	                   movsx ecx, byte [rdi]	       312	show-branch.c	FUNCTION_11	FOR_1
0x400006e	        0x448d41d0	                   lea r8d, [rcx - 0x30]	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000072	        0x4180f809	                              cmp r8b, 9	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000076	            0x76e8	                           jbe 0x4000060	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000078	          0x8d4ad0	                   lea ecx, [rdx - 0x30]	       312	show-branch.c	FUNCTION_11	FOR_1
0x400007b	          0x80f909	                               cmp cl, 9	       312	show-branch.c	FUNCTION_11	FOR_1
0x400007e	     0xf87bc000000	                            ja 0x4000140	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000084	            0x31c9	                            xor ecx, ecx	       311	show-branch.c	FUNCTION_11	FOR_1
0x4000086	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       311	show-branch.c	FUNCTION_11	FOR_1
0x4000090	          0x8d0c89	                  lea ecx, [rcx + rcx*4]	       314	show-branch.c	FUNCTION_11	FOR_1
0x4000093	        0x4883c601	                              add rsi, 1	       313	show-branch.c	FUNCTION_11	FOR_1
0x4000097	        0x8d4c4ad0	           lea ecx, [rdx + rcx*2 - 0x30]	       314	show-branch.c	FUNCTION_11	FOR_1
0x400009b	           0xfbe16	                   movsx edx, byte [rsi]	       312	show-branch.c	FUNCTION_11	FOR_1
0x400009e	        0x448d42d0	                   lea r8d, [rdx - 0x30]	       312	show-branch.c	FUNCTION_11	FOR_1
0x40000a2	        0x4180f809	                              cmp r8b, 9	       312	show-branch.c	FUNCTION_11	FOR_1
0x40000a6	            0x76e8	                           jbe 0x4000090	       312	show-branch.c	FUNCTION_11	FOR_1
0x40000a8	            0x39c1	                            cmp ecx, eax	       327	show-branch.c	FUNCTION_12	WHILE_1	IF_1
0x40000aa	            0x757c	                           jne 0x4000128	       327	show-branch.c	FUNCTION_12	WHILE_1	IF_1
0x40000ac	           0xfbe0f	                   movsx ecx, byte [rdi]	       327	show-branch.c	FUNCTION_12	WHILE_1	IF_1
0x40000af	           0xfbe16	                   movsx edx, byte [rsi]	       327	show-branch.c	FUNCTION_12	WHILE_1	IF_1
0x40000b2	        0x440fbec1	                           movsx r8d, cl	       333	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x40000b6	        0x440fbeca	                           movsx r9d, dl	       332	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x40000ba	        0x418d40d0	                    lea eax, [r8 - 0x30]	       333	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x40000be	          0x83f809	                              cmp eax, 9	       333	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x40000c1	        0x418d41d0	                    lea eax, [r9 - 0x30]	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x40000c5	            0x7629	                           jbe 0x40000f0	       333	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x40000c7	          0x83f809	                              cmp eax, 9	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x40000ca	          0x4489c0	                            mov eax, r8d	       331	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x40000cd	            0x7639	                           jbe 0x4000108	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x40000cf	          0x4539c8	                            cmp r8d, r9d	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x40000d2	            0x753c	                           jne 0x4000110	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x40000d4	          0x4585c0	                           test r8d, r8d	       339	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_5
0x40000d7	            0x741c	                            je 0x40000f5	       339	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_5
0x40000d9	        0x4883c701	                              add rdi, 1	       341	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x40000dd	        0x4883c601	                              add rsi, 1	       342	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x40000e1	           0xfbe0f	                   movsx ecx, byte [rdi]	       342	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x40000e4	           0xfbe16	                   movsx edx, byte [rsi]	       342	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x40000e7	            0xebc9	                           jmp 0x40000b2	       342	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x40000e9	     0xf1f80000000	                         nop dword [rax]	       342	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x40000f0	          0x83f809	                              cmp eax, 9	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x40000f3	            0x7723	                            ja 0x4000118	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x40000f5	            0x89c8	                            mov eax, ecx	       344	show-branch.c	FUNCTION_12	WHILE_1	IF_6
0x40000f7	             0x8d0	                               or al, dl	       344	show-branch.c	FUNCTION_12	WHILE_1	IF_6
0x40000f9	     0xf854dffffff	                           jne 0x400004c	       344	show-branch.c	FUNCTION_12	WHILE_1	IF_6
0x40000ff	            0x31c0	                            xor eax, eax	       345	show-branch.c	FUNCTION_12	WHILE_1	IF_6
0x4000101	              0xc3	                                     ret	       352	show-branch.c	FUNCTION_13	CALL_1
0x4000102	    0x660f1f440000	                    nop word [rax + rax]	       352	show-branch.c	FUNCTION_13	CALL_1
0x4000108	          0x4585c0	                           test r8d, r8d	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x400010b	            0x74e8	                            je 0x40000f5	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x400010d	          0x4531c9	                            xor r9d, r9d	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x4000110	          0x4429c8	                            sub eax, r9d	       338	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x4000113	              0xc3	                                     ret	       338	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x4000114	         0xf1f4000	                         nop dword [rax]	       338	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x4000118	          0x4585c9	                           test r9d, r9d	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x400011b	            0x74d8	                            je 0x40000f5	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x400011d	            0x31c0	                            xor eax, eax	       334	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x400011f	            0xebef	                           jmp 0x4000110	       334	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x4000121	     0xf1f80000000	                         nop dword [rax]	       334	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x4000128	            0x29c8	                            sub eax, ecx	       328	show-branch.c	FUNCTION_12	WHILE_1	IF_1
0x400012a	              0xc3	                                     ret	       328	show-branch.c	FUNCTION_12	WHILE_1	IF_1
0x400012b	        0x448d42d0	                   lea r8d, [rdx - 0x30]	       312	show-branch.c	FUNCTION_11	FOR_1
0x400012f	            0x31c0	                            xor eax, eax	       311	show-branch.c	FUNCTION_11	FOR_1
0x4000131	        0x4180f809	                              cmp r8b, 9	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000135	     0xf8649ffffff	                           jbe 0x4000084	       312	show-branch.c	FUNCTION_11	FOR_1
0x400013b	      0xe972ffffff	                           jmp 0x40000b2	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000140	            0x31c9	                            xor ecx, ecx	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000142	      0xe961ffffff	                           jmp 0x40000a8	       312	show-branch.c	FUNCTION_11	FOR_1
cmd_show_branch	SWITCH,0:IF,42:functions,0:DO,0:WHILE,2:CALL,104:ELSE,7:FOR,8	1220
0x4000a00	            0x4157	                                push r15	       603	show-branch.c	FUNCTION_28
0x4000a02	            0x4156	                                push r14	       603	show-branch.c	FUNCTION_28
0x4000a04	      0xb980000000	                           mov ecx, 0x80	       624	show-branch.c	FUNCTION_28
0x4000a09	            0x4155	                                push r13	       603	show-branch.c	FUNCTION_28
0x4000a0b	            0x4154	                                push r12	       603	show-branch.c	FUNCTION_28
0x4000a0d	          0x4189fc	                           mov r12d, edi	       603	show-branch.c	FUNCTION_28
0x4000a10	              0x55	                                push rbp	       603	show-branch.c	FUNCTION_28
0x4000a11	              0x53	                                push rbx	       603	show-branch.c	FUNCTION_28
0x4000a12	          0x4989d5	                            mov r13, rdx	       603	show-branch.c	FUNCTION_28
0x4000a15	          0x4889f3	                            mov rbx, rsi	       603	show-branch.c	FUNCTION_28
0x4000a18	            0x31f6	                            xor esi, esi	       663	show-branch.c	FUNCTION_28	CALL_32
0x4000a1a	    0x4881ecf80600	                          sub rsp, 0x6f8	       603	show-branch.c	FUNCTION_28
0x4000a21	    0x488dac24e002	                  lea rbp, [rsp + 0x2e0]	       624	show-branch.c	FUNCTION_28
0x4000a29	    0x48c744246800	               mov qword [rsp + 0x68], 0	       606	show-branch.c	FUNCTION_28
0x4000a32	    0x48c744247000	               mov qword [rsp + 0x70], 0	       606	show-branch.c	FUNCTION_28
0x4000a3b	    0x64488b042528	                mov rax, qword fs:[0x28]	       603	show-branch.c	FUNCTION_28
0x4000a44	    0x48898424e806	            mov qword [rsp + 0x6e8], rax	       603	show-branch.c	FUNCTION_28
0x4000a4c	            0x31c0	                            xor eax, eax	       603	show-branch.c	FUNCTION_28
0x4000a4e	          0x4889ef	                            mov rdi, rbp	       624	show-branch.c	FUNCTION_28
0x4000a51	    0xc74424340000	               mov dword [rsp + 0x34], 0	       608	show-branch.c	FUNCTION_28
0x4000a59	    0xc74424380000	               mov dword [rsp + 0x38], 0	       609	show-branch.c	FUNCTION_28
0x4000a61	          0xf348ab	              rep stosq qword [rdi], rax	       624	show-branch.c	FUNCTION_28
0x4000a64	      0x488d442438	                   lea rax, [rsp + 0x38]	       624	show-branch.c	FUNCTION_28
0x4000a69	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	       609	show-branch.c	FUNCTION_28
0x4000a71	    0xc74424400000	               mov dword [rsp + 0x40], 0	       611	show-branch.c	FUNCTION_28
0x4000a79	    0xc74424440000	               mov dword [rsp + 0x44], 0	       614	show-branch.c	FUNCTION_28
0x4000a81	    0xc74424480000	               mov dword [rsp + 0x48], 0	       615	show-branch.c	FUNCTION_28
0x4000a89	      0x488d542458	                   lea rdx, [rsp + 0x58]	       624	show-branch.c	FUNCTION_28
0x4000a8e	    0x48898424f002	            mov qword [rsp + 0x2f0], rax	       624	show-branch.c	FUNCTION_28
0x4000a96	      0x488d44243c	                   lea rax, [rsp + 0x3c]	       624	show-branch.c	FUNCTION_28
0x4000a9b	    0xc744244c0000	               mov dword [rsp + 0x4c], 0	       616	show-branch.c	FUNCTION_28
0x4000aa3	    0xc74424500000	               mov dword [rsp + 0x50], 0	       617	show-branch.c	FUNCTION_28
0x4000aab	    0xc74424540000	               mov dword [rsp + 0x54], 0	       619	show-branch.c	FUNCTION_28
0x4000ab3	      0xbf00000000	                              mov edi, 0	       663	show-branch.c	FUNCTION_28	CALL_32
0x4000ab8	    0xc74424580000	               mov dword [rsp + 0x58], 0	       621	show-branch.c	FUNCTION_28
0x4000ac0	    0xc744245c0100	               mov dword [rsp + 0x5c], 1	       622	show-branch.c	FUNCTION_28
0x4000ac8	    0x48c744247800	               mov qword [rsp + 0x78], 0	       623	show-branch.c	FUNCTION_28
0x4000ad1	    0xc78424e00200	              mov dword [rsp + 0x2e0], 7	       624	show-branch.c	FUNCTION_28
0x4000adc	    0xc78424e40200	          mov dword [rsp + 0x2e4], 0x61 	       624	show-branch.c	FUNCTION_28
0x4000ae7	    0x48c78424e802	              mov qword [rsp + 0x2e8], 0	       624	show-branch.c	FUNCTION_28
0x4000af3	    0x48c784240003	              mov qword [rsp + 0x300], 0	       624	show-branch.c	FUNCTION_28
0x4000aff	    0xc78424080300	              mov dword [rsp + 0x308], 2	       624	show-branch.c	FUNCTION_28
0x4000b0a	    0x48c784241803	              mov qword [rsp + 0x318], 1	       624	show-branch.c	FUNCTION_28
0x4000b16	    0xc78424200300	              mov dword [rsp + 0x320], 7	       624	show-branch.c	FUNCTION_28
0x4000b21	    0xc78424240300	          mov dword [rsp + 0x324], 0x72 	       624	show-branch.c	FUNCTION_28
0x4000b2c	    0x48c784242803	              mov qword [rsp + 0x328], 0	       624	show-branch.c	FUNCTION_28
0x4000b38	    0x488984243003	            mov qword [rsp + 0x330], rax	       624	show-branch.c	FUNCTION_28
0x4000b40	      0x488d442434	                   lea rax, [rsp + 0x34]	       624	show-branch.c	FUNCTION_28
0x4000b45	    0x48c784244003	              mov qword [rsp + 0x340], 0	       624	show-branch.c	FUNCTION_28
0x4000b51	    0xc78424480300	              mov dword [rsp + 0x348], 2	       624	show-branch.c	FUNCTION_28
0x4000b5c	    0x48c784245803	              mov qword [rsp + 0x358], 1	       624	show-branch.c	FUNCTION_28
0x4000b68	    0x48898424b003	            mov qword [rsp + 0x3b0], rax	       624	show-branch.c	FUNCTION_28
0x4000b70	    0x48898424f003	            mov qword [rsp + 0x3f0], rax	       624	show-branch.c	FUNCTION_28
0x4000b78	      0x488d44244c	                   lea rax, [rsp + 0x4c]	       624	show-branch.c	FUNCTION_28
0x4000b7d	    0xc78424600300	           mov dword [rsp + 0x360], 0xc 	       624	show-branch.c	FUNCTION_28
0x4000b88	    0x48c784246803	              mov qword [rsp + 0x368], 0	       624	show-branch.c	FUNCTION_28
0x4000b94	    0x488984243004	            mov qword [rsp + 0x430], rax	       624	show-branch.c	FUNCTION_28
0x4000b9c	      0x488d442454	                   lea rax, [rsp + 0x54]	       624	show-branch.c	FUNCTION_28
0x4000ba1	    0x48c784247003	              mov qword [rsp + 0x370], 0	       624	show-branch.c	FUNCTION_28
0x4000bad	    0x48c784247803	              mov qword [rsp + 0x378], 0	       624	show-branch.c	FUNCTION_28
0x4000bb9	    0x48c784248003	              mov qword [rsp + 0x380], 0	       624	show-branch.c	FUNCTION_28
0x4000bc5	    0xc78424880300	              mov dword [rsp + 0x388], 1	       624	show-branch.c	FUNCTION_28
0x4000bd0	    0x48c784249003	              mov qword [rsp + 0x390], 0	       624	show-branch.c	FUNCTION_28
0x4000bdc	    0x48c784249803	              mov qword [rsp + 0x398], 0	       624	show-branch.c	FUNCTION_28
0x4000be8	    0xc78424a00300	            mov dword [rsp + 0x3a0], 0xa	       624	show-branch.c	FUNCTION_28
0x4000bf3	    0x48c78424a803	              mov qword [rsp + 0x3a8], 0	       624	show-branch.c	FUNCTION_28
0x4000bff	    0x48c78424b803	              mov qword [rsp + 0x3b8], 0	       624	show-branch.c	FUNCTION_28
0x4000c0b	    0x48c78424c003	              mov qword [rsp + 0x3c0], 0	       624	show-branch.c	FUNCTION_28
0x4000c17	    0xc78424c80300	              mov dword [rsp + 0x3c8], 1	       624	show-branch.c	FUNCTION_28
0x4000c22	    0x48c78424d803	              mov qword [rsp + 0x3d8], 1	       624	show-branch.c	FUNCTION_28
0x4000c2e	    0xc78424e00300	              mov dword [rsp + 0x3e0], 7	       624	show-branch.c	FUNCTION_28
0x4000c39	    0x48c78424e803	              mov qword [rsp + 0x3e8], 0	       624	show-branch.c	FUNCTION_28
0x4000c45	    0x48c784240004	              mov qword [rsp + 0x400], 0	       624	show-branch.c	FUNCTION_28
0x4000c51	    0xc78424080400	              mov dword [rsp + 0x408], 2	       624	show-branch.c	FUNCTION_28
0x4000c5c	    0x48c784241804	mov qword [rsp + 0x418], 0xffffffffffffffff	       624	show-branch.c	FUNCTION_28
0x4000c68	    0xc78424200400	              mov dword [rsp + 0x420], 7	       624	show-branch.c	FUNCTION_28
0x4000c73	    0x48c784242804	              mov qword [rsp + 0x428], 0	       624	show-branch.c	FUNCTION_28
0x4000c7f	    0x48c784244004	              mov qword [rsp + 0x440], 0	       624	show-branch.c	FUNCTION_28
0x4000c8b	    0xc78424480400	              mov dword [rsp + 0x448], 2	       624	show-branch.c	FUNCTION_28
0x4000c96	    0x48c784245804	              mov qword [rsp + 0x458], 1	       624	show-branch.c	FUNCTION_28
0x4000ca2	    0xc78424600400	              mov dword [rsp + 0x460], 7	       624	show-branch.c	FUNCTION_28
0x4000cad	    0x48c784246804	              mov qword [rsp + 0x468], 0	       624	show-branch.c	FUNCTION_28
0x4000cb9	    0x488984247004	            mov qword [rsp + 0x470], rax	       624	show-branch.c	FUNCTION_28
0x4000cc1	      0x488d442450	                   lea rax, [rsp + 0x50]	       624	show-branch.c	FUNCTION_28
0x4000cc6	    0x48899424b005	            mov qword [rsp + 0x5b0], rdx	       624	show-branch.c	FUNCTION_28
0x4000cce	    0x48c784248004	              mov qword [rsp + 0x480], 0	       624	show-branch.c	FUNCTION_28
0x4000cda	      0x488d54245c	                   lea rdx, [rsp + 0x5c]	       624	show-branch.c	FUNCTION_28
0x4000cdf	    0x48898424b004	            mov qword [rsp + 0x4b0], rax	       624	show-branch.c	FUNCTION_28
0x4000ce7	      0x488d442444	                   lea rax, [rsp + 0x44]	       624	show-branch.c	FUNCTION_28
0x4000cec	    0xc78424880400	              mov dword [rsp + 0x488], 2	       624	show-branch.c	FUNCTION_28
0x4000cf7	    0x48c784249804	              mov qword [rsp + 0x498], 1	       624	show-branch.c	FUNCTION_28
0x4000d03	    0xc78424a00400	              mov dword [rsp + 0x4a0], 7	       624	show-branch.c	FUNCTION_28
0x4000d0e	    0x48898424f004	            mov qword [rsp + 0x4f0], rax	       624	show-branch.c	FUNCTION_28
0x4000d16	      0x488d442448	                   lea rax, [rsp + 0x48]	       624	show-branch.c	FUNCTION_28
0x4000d1b	    0x48c78424a804	              mov qword [rsp + 0x4a8], 0	       624	show-branch.c	FUNCTION_28
0x4000d27	    0x48c78424c004	              mov qword [rsp + 0x4c0], 0	       624	show-branch.c	FUNCTION_28
0x4000d33	    0xc78424c80400	              mov dword [rsp + 0x4c8], 2	       624	show-branch.c	FUNCTION_28
0x4000d3e	    0x488984243005	            mov qword [rsp + 0x530], rax	       624	show-branch.c	FUNCTION_28
0x4000d46	      0x488d442440	                   lea rax, [rsp + 0x40]	       624	show-branch.c	FUNCTION_28
0x4000d4b	    0x48c78424d804	              mov qword [rsp + 0x4d8], 1	       624	show-branch.c	FUNCTION_28
0x4000d57	    0xc78424e00400	              mov dword [rsp + 0x4e0], 7	       624	show-branch.c	FUNCTION_28
0x4000d62	    0x48c78424e804	              mov qword [rsp + 0x4e8], 0	       624	show-branch.c	FUNCTION_28
0x4000d6e	    0x488984247005	            mov qword [rsp + 0x570], rax	       624	show-branch.c	FUNCTION_28
0x4000d76	    0x48c784240005	              mov qword [rsp + 0x500], 0	       624	show-branch.c	FUNCTION_28
0x4000d82	    0xc78424080500	              mov dword [rsp + 0x508], 2	       624	show-branch.c	FUNCTION_28
0x4000d8d	    0x48c784241805	              mov qword [rsp + 0x518], 1	       624	show-branch.c	FUNCTION_28
0x4000d99	    0xc78424200500	              mov dword [rsp + 0x520], 7	       624	show-branch.c	FUNCTION_28
0x4000da4	    0x48c784242805	              mov qword [rsp + 0x528], 0	       624	show-branch.c	FUNCTION_28
0x4000db0	    0x48c784244005	              mov qword [rsp + 0x540], 0	       624	show-branch.c	FUNCTION_28
0x4000dbc	    0xc78424480500	              mov dword [rsp + 0x548], 2	       624	show-branch.c	FUNCTION_28
0x4000dc7	    0x48c784245805	              mov qword [rsp + 0x558], 1	       624	show-branch.c	FUNCTION_28
0x4000dd3	    0xc78424600500	              mov dword [rsp + 0x560], 7	       624	show-branch.c	FUNCTION_28
0x4000dde	    0x48c784246805	              mov qword [rsp + 0x568], 0	       624	show-branch.c	FUNCTION_28
0x4000dea	    0x48c784248005	              mov qword [rsp + 0x580], 0	       624	show-branch.c	FUNCTION_28
0x4000df6	    0xc78424880500	              mov dword [rsp + 0x588], 2	       624	show-branch.c	FUNCTION_28
0x4000e01	    0xc78424a00500	              mov dword [rsp + 0x5a0], 7	       624	show-branch.c	FUNCTION_28
0x4000e0c	    0x48c78424a805	              mov qword [rsp + 0x5a8], 0	       624	show-branch.c	FUNCTION_28
0x4000e18	    0x48c78424c005	              mov qword [rsp + 0x5c0], 0	       624	show-branch.c	FUNCTION_28
0x4000e24	    0xc78424c80500	              mov dword [rsp + 0x5c8], 2	       624	show-branch.c	FUNCTION_28
0x4000e2f	    0x48c78424d805	              mov qword [rsp + 0x5d8], 1	       624	show-branch.c	FUNCTION_28
0x4000e3b	    0x488984243006	            mov qword [rsp + 0x630], rax	       624	show-branch.c	FUNCTION_28
0x4000e43	      0x488d442478	                   lea rax, [rsp + 0x78]	       624	show-branch.c	FUNCTION_28
0x4000e48	    0xc78424e00500	              mov dword [rsp + 0x5e0], 7	       624	show-branch.c	FUNCTION_28
0x4000e53	    0x48c78424e805	              mov qword [rsp + 0x5e8], 0	       624	show-branch.c	FUNCTION_28
0x4000e5f	    0x48899424f005	            mov qword [rsp + 0x5f0], rdx	       624	show-branch.c	FUNCTION_28
0x4000e67	    0x48c784240006	              mov qword [rsp + 0x600], 0	       624	show-branch.c	FUNCTION_28
0x4000e73	    0xc78424080600	              mov dword [rsp + 0x608], 2	       624	show-branch.c	FUNCTION_28
0x4000e7e	    0xc78424200600	              mov dword [rsp + 0x620], 7	       624	show-branch.c	FUNCTION_28
0x4000e89	    0x48c784242806	              mov qword [rsp + 0x628], 0	       624	show-branch.c	FUNCTION_28
0x4000e95	    0x48c784244006	              mov qword [rsp + 0x640], 0	       624	show-branch.c	FUNCTION_28
0x4000ea1	    0xc78424480600	              mov dword [rsp + 0x648], 2	       624	show-branch.c	FUNCTION_28
0x4000eac	    0x48c784245806	              mov qword [rsp + 0x658], 1	       624	show-branch.c	FUNCTION_28
0x4000eb8	    0xc78424600600	           mov dword [rsp + 0x660], 0xc 	       624	show-branch.c	FUNCTION_28
0x4000ec3	    0xc78424640600	          mov dword [rsp + 0x664], 0x67 	       624	show-branch.c	FUNCTION_28
0x4000ece	    0x48c784246806	              mov qword [rsp + 0x668], 0	       624	show-branch.c	FUNCTION_28
0x4000eda	    0x488984247006	            mov qword [rsp + 0x670], rax	       624	show-branch.c	FUNCTION_28
0x4000ee2	    0x48c784247806	              mov qword [rsp + 0x678], 0	       624	show-branch.c	FUNCTION_28
0x4000eee	    0x48c784248006	              mov qword [rsp + 0x680], 0	       624	show-branch.c	FUNCTION_28
0x4000efa	    0xc78424880600	          mov dword [rsp + 0x688], 0x41 	       624	show-branch.c	FUNCTION_28
0x4000f05	    0x48c784249006	              mov qword [rsp + 0x690], 0	       624	show-branch.c	FUNCTION_28
0x4000f11	      0xe800000000	                          call 0x4000f16	       663	show-branch.c	FUNCTION_28	CALL_32
0x4000f16	        0x4183fc01	                             cmp r12d, 1	       666	show-branch.c	FUNCTION_28	IF_1
0x4000f1a	     0xf8498060000	                            je 0x40015b8	       666	show-branch.c	FUNCTION_28	IF_1
0x4000f20	          0x4c89ea	                            mov rdx, r13	       671	show-branch.c	FUNCTION_28	CALL_33
0x4000f23	    0x41b902000000	                              mov r9d, 2	       671	show-branch.c	FUNCTION_28	CALL_33
0x4000f29	    0x41b800000000	                              mov r8d, 0	       671	show-branch.c	FUNCTION_28	CALL_33
0x4000f2f	          0x4889e9	                            mov rcx, rbp	       671	show-branch.c	FUNCTION_28	CALL_33
0x4000f32	          0x4889de	                            mov rsi, rbx	       671	show-branch.c	FUNCTION_28	CALL_33
0x4000f35	          0x4489e7	                           mov edi, r12d	       671	show-branch.c	FUNCTION_28	CALL_33
0x4000f38	      0xe800000000	                          call 0x4000f3d	       671	show-branch.c	FUNCTION_28	CALL_33
0x4000f3d	        0x8b542438	            mov edx, dword [rsp + 0x38] 	       673	show-branch.c	FUNCTION_28	IF_2
0x4000f41	            0x85d2	                           test edx, edx	       673	show-branch.c	FUNCTION_28	IF_2
0x4000f43	            0x7408	                            je 0x4000f4d	       673	show-branch.c	FUNCTION_28	IF_2
0x4000f45	    0xc744243c0100	               mov dword [rsp + 0x3c], 1	       674	show-branch.c	FUNCTION_28	IF_2
0x4000f4d	        0x8b4c2434	            mov ecx, dword [rsp + 0x34] 	       676	show-branch.c	FUNCTION_28	IF_3
0x4000f51	            0x85c9	                           test ecx, ecx	       676	show-branch.c	FUNCTION_28	IF_3
0x4000f53	            0x7510	                           jne 0x4000f65	       676	show-branch.c	FUNCTION_28	IF_3
0x4000f55	    0x448b05000000	            mov r8d, dword [0x04000f5c] 	       676	show-branch.c	FUNCTION_28	IF_3
0x4000f5c	          0x4585c0	                           test r8d, r8d	       676	show-branch.c	FUNCTION_28	IF_3
0x4000f5f	     0xf8453030000	                            je 0x40012b8	       676	show-branch.c	FUNCTION_28	IF_3
0x4000f65	        0x8b7c2448	            mov edi, dword [rsp + 0x48] 	       680	show-branch.c	FUNCTION_28	IF_3	IF_4
0x4000f69	            0x85ff	                           test edi, edi	       680	show-branch.c	FUNCTION_28	IF_3	IF_4
0x4000f6b	     0xf85ff100000	                           jne 0x4002070	       680	show-branch.c	FUNCTION_28	IF_3	IF_4
0x4000f71	        0x8b742444	            mov esi, dword [rsp + 0x44] 	       680	show-branch.c	FUNCTION_28	IF_3	IF_4
0x4000f75	            0x85f6	                           test esi, esi	       680	show-branch.c	FUNCTION_28	IF_3	IF_4
0x4000f77	     0xf85f3100000	                           jne 0x4002070	       680	show-branch.c	FUNCTION_28	IF_3	IF_4
0x4000f7d	    0x8b3500000000	            mov esi, dword [0x04000f83] 	       683	show-branch.c	FUNCTION_28	IF_3	IF_5
0x4000f83	            0x85f6	                           test esi, esi	       683	show-branch.c	FUNCTION_28	IF_3	IF_5
0x4000f85	     0xf842d030000	                            je 0x40012b8	       683	show-branch.c	FUNCTION_28	IF_3	IF_5
0x4000f8b	            0x85d2	                           test edx, edx	       683	show-branch.c	FUNCTION_28	IF_3	IF_5
0x4000f8d	     0xf853f110000	                           jne 0x40020d2	       683	show-branch.c	FUNCTION_28	IF_3	IF_5
0x4000f93	            0x85c9	                           test ecx, ecx	       683	show-branch.c	FUNCTION_28	IF_3	IF_5
0x4000f95	     0xf8f37110000	                            jg 0x40020d2	       683	show-branch.c	FUNCTION_28	IF_3	IF_5
0x4000f9b	        0x8b54243c	            mov edx, dword [rsp + 0x3c] 	       683	show-branch.c	FUNCTION_28	IF_3	IF_5
0x4000f9f	            0x85d2	                           test edx, edx	       683	show-branch.c	FUNCTION_28	IF_3	IF_5
0x4000fa1	     0xf852b110000	                           jne 0x40020d2	       683	show-branch.c	FUNCTION_28	IF_3	IF_5
0x4000fa7	        0x3b442458	            cmp eax, dword [rsp + 0x58] 	       695	show-branch.c	FUNCTION_28	IF_6
0x4000fab	            0x7f10	                            jg 0x4000fbd	       695	show-branch.c	FUNCTION_28	IF_6
0x4000fad	    0xc74424380100	               mov dword [rsp + 0x38], 1	       696	show-branch.c	FUNCTION_28	IF_6
0x4000fb5	            0x85f6	                           test esi, esi	       698	show-branch.c	FUNCTION_28	IF_7
0x4000fb7	     0xf8405030000	                            je 0x40012c2	       698	show-branch.c	FUNCTION_28	IF_7
0x4000fbd	            0x85c0	                           test eax, eax	       704	show-branch.c	FUNCTION_28	IF_7	IF_8
0x4000fbf	    0xc74424600000	               mov dword [rsp + 0x60], 0	       701	show-branch.c	FUNCTION_28	IF_7
0x4000fc7	     0xf845d0b0000	                            je 0x4001b2a	       704	show-branch.c	FUNCTION_28	IF_7	IF_8
0x4000fcd	          0x83f801	                              cmp eax, 1	       716	show-branch.c	FUNCTION_28	IF_7	IF_10
0x4000fd0	     0xf85d6100000	                           jne 0x40020ac	       716	show-branch.c	FUNCTION_28	IF_7	IF_10
0x4000fd6	    0x833d00000000	           cmp dword [0x04000fdd], 0x19 	       719	show-branch.c	FUNCTION_28	IF_7	IF_11
0x4000fdd	     0xf8fd5100000	                            jg 0x40020b8	       719	show-branch.c	FUNCTION_28	IF_7	IF_11
0x4000fe3	          0x488b2b	                    mov rbp, qword [rbx]	       723	show-branch.c	FUNCTION_28	IF_7	IF_12	CALL_45
0x4000fe6	    0x4c8db4244001	                  lea r14, [rsp + 0x140]	       723	show-branch.c	FUNCTION_28	IF_7	IF_12	CALL_45
0x4000fee	          0x4889ef	                            mov rdi, rbp	       723	show-branch.c	FUNCTION_28	IF_7	IF_12	CALL_45
0x4000ff1	      0xe800000000	                          call 0x4000ff6	       723	show-branch.c	FUNCTION_28	IF_7	IF_12	CALL_45
0x4000ff6	    0x488d8c248000	                   lea rcx, [rsp + 0x80]	       723	show-branch.c	FUNCTION_28	IF_7	IF_12	CALL_45
0x4000ffe	          0x4c89f2	                            mov rdx, r14	       723	show-branch.c	FUNCTION_28	IF_7	IF_12	CALL_45
0x4001001	            0x89c6	                            mov esi, eax	       723	show-branch.c	FUNCTION_28	IF_7	IF_12	CALL_45
0x4001003	          0x4889ef	                            mov rdi, rbp	       723	show-branch.c	FUNCTION_28	IF_7	IF_12	CALL_45
0x4001006	      0xe800000000	                          call 0x400100b	       723	show-branch.c	FUNCTION_28	IF_7	IF_12	CALL_45
0x400100b	            0x85c0	                           test eax, eax	       723	show-branch.c	FUNCTION_28	IF_7	IF_12	CALL_45
0x400100d	     0xf848a100000	                            je 0x400209d	       723	show-branch.c	FUNCTION_28	IF_7	IF_12	CALL_45
0x4001013	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	       727	show-branch.c	FUNCTION_28	IF_7	IF_13
0x4001018	          0x4885ff	                           test rdi, rdi	       727	show-branch.c	FUNCTION_28	IF_7	IF_13
0x400101b	            0x742a	                            je 0x4001047	       727	show-branch.c	FUNCTION_28	IF_7	IF_13
0x400101d	    0x4c8dbc249000	                   lea r15, [rsp + 0x90]	       729	show-branch.c	FUNCTION_28	IF_7	IF_13	CALL_48
0x4001025	      0xba0a000000	                            mov edx, 0xa	       729	show-branch.c	FUNCTION_28	IF_7	IF_13	CALL_48
0x400102a	          0x4c89fe	                            mov rsi, r15	       729	show-branch.c	FUNCTION_28	IF_7	IF_13	CALL_48
0x400102d	      0xe800000000	                          call 0x4001032	       729	show-branch.c	FUNCTION_28	IF_7	IF_13	CALL_48
0x4001032	        0x89442460	             mov dword [rsp + 0x60], eax	       729	show-branch.c	FUNCTION_28	IF_7	IF_13	CALL_48
0x4001036	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	       730	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14
0x400103e	          0x803800	                       cmp byte [rax], 0	       730	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14
0x4001041	     0xf85360b0000	                           jne 0x4001b7d	       730	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14
0x4001047	    0x8b0500000000	            mov eax, dword [0x0400104d] 	       739	show-branch.c	FUNCTION_28	IF_7	FOR_1
0x400104d	            0x85c0	                           test eax, eax	       739	show-branch.c	FUNCTION_28	IF_7	FOR_1
0x400104f	     0xf8eff000000	                           jle 0x4001154	       739	show-branch.c	FUNCTION_28	IF_7	FOR_1
0x4001055	    0x4c8dac241002	                  lea r13, [rsp + 0x210]	       739	show-branch.c	FUNCTION_28	IF_7	FOR_1
0x400105d	            0x31ed	                            xor ebp, ebp	       739	show-branch.c	FUNCTION_28	IF_7	FOR_1
0x400105f	    0x4c8dbc249000	                   lea r15, [rsp + 0x90]	       739	show-branch.c	FUNCTION_28	IF_7	FOR_1
0x4001067	      0xe9a6000000	                           jmp 0x4001112	       739	show-branch.c	FUNCTION_28	IF_7	FOR_1
0x400106c	         0xf1f4000	                         nop dword [rax]	       739	show-branch.c	FUNCTION_28	IF_7	FOR_1
0x4001070	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	       751	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_52
0x4001078	      0xbe09000000	                              mov esi, 9	       751	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_52
0x400107d	      0xe800000000	                          call 0x4001082	       751	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_52
0x4001082	        0x4c8d6001	                      lea r12, [rax + 1]	       755	show-branch.c	FUNCTION_28	IF_7	FOR_1	ELSE_1
0x4001086	          0x4885c0	                           test rax, rax	       755	show-branch.c	FUNCTION_28	IF_7	FOR_1	ELSE_1
0x4001089	      0xbf01000000	                              mov edi, 1	       758	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_55
0x400108e	      0xb800000000	                              mov eax, 0	       755	show-branch.c	FUNCTION_28	IF_7	FOR_1	ELSE_1
0x4001093	        0x4c0f44e0	                          cmove r12, rax	       755	show-branch.c	FUNCTION_28	IF_7	FOR_1	ELSE_1
0x4001097	        0x4983c508	                              add r13, 8	       755	show-branch.c	FUNCTION_28	IF_7	FOR_1	ELSE_1
0x400109b	      0xe800000000	                          call 0x40010a0	       758	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_55
0x40010a0	        0x8b742464	            mov esi, dword [rsp + 0x64] 	       756	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_53
0x40010a4	    0x488bbc249000	            mov rdi, qword [rsp + 0x90] 	       756	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_53
0x40010ac	          0x4889c2	                            mov rdx, rax	       756	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_53
0x40010af	      0xe800000000	                          call 0x40010b4	       756	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_53
0x40010b4	          0x4c89e2	                            mov rdx, r12	       756	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_53
0x40010b7	          0x4889c6	                            mov rsi, rax	       756	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_53
0x40010ba	      0xbf00000000	                              mov edi, 0	       756	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_53
0x40010bf	            0x31c0	                            xor eax, eax	       756	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_53
0x40010c1	      0xe800000000	                          call 0x40010c6	       756	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_53
0x40010c6	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	       760	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_56
0x40010ce	        0x498945f8	                mov qword [r13 - 8], rax	       756	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_53
0x40010d2	      0xe800000000	                          call 0x40010d7	       760	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_56
0x40010d7	        0x8b542460	            mov edx, dword [rsp + 0x60] 	       762	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_57
0x40010db	          0x488b33	                    mov rsi, qword [rbx]	       762	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_57
0x40010de	      0xbf00000000	                              mov edi, 0	       762	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_57
0x40010e3	            0x31c0	                            xor eax, eax	       762	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_57
0x40010e5	             0x1ea	                            add edx, ebp	       762	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_57
0x40010e7	          0x83c501	                              add ebp, 1	       739	show-branch.c	FUNCTION_28	IF_7	FOR_1
0x40010ea	      0xe800000000	                          call 0x40010ef	       762	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_57
0x40010ef	      0xba01000000	                              mov edx, 1	       763	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_58
0x40010f4	          0x4989c4	                            mov r12, rax	       762	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_57
0x40010f7	          0x4c89f6	                            mov rsi, r14	       763	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_58
0x40010fa	          0x4889c7	                            mov rdi, rax	       763	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_58
0x40010fd	      0xe81ef4ffff	                     call sym.append_ref	       763	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_58
0x4001102	          0x4c89e7	                            mov rdi, r12	       764	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_59
0x4001105	      0xe800000000	                          call 0x400110a	       764	show-branch.c	FUNCTION_28	IF_7	FOR_1	CALL_59
0x400110a	    0x392d00000000	            cmp dword [0x04001110], ebp 	       739	show-branch.c	FUNCTION_28	IF_7	FOR_1
0x4001110	            0x7e42	                           jle 0x4001154	       739	show-branch.c	FUNCTION_28	IF_7	FOR_1
0x4001112	        0x8b4c2460	            mov ecx, dword [rsp + 0x60] 	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x4001116	        0x4883ec08	                              sub rsp, 8	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x400111a	            0x31d2	                            xor edx, edx	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x400111c	            0x6a00	                                  push 0	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x400111e	            0x31f6	                            xor esi, esi	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x4001120	          0x4d89f0	                             mov r8, r14	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x4001123	      0x488d442474	                   lea rax, [rsp + 0x74]	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x4001128	             0x1e9	                            add ecx, ebp	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x400112a	              0x50	                                push rax	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x400112b	            0x4157	                                push r15	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x400112d	    0x488bbc24a000	            mov rdi, qword [rsp + 0xa0] 	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x4001135	    0x4c8d8c24a800	                    lea r9, [rsp + 0xa8]	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x400113d	      0xe800000000	                          call 0x4001142	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x4001142	        0x4883c420	                           add rsp, 0x20	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x4001146	            0x85c0	                           test eax, eax	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x4001148	     0xf8422ffffff	                            je 0x4001070	       746	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15	CALL_51
0x400114e	    0x892d00000000	            mov dword [0x04001154], ebp 	       748	show-branch.c	FUNCTION_28	IF_7	FOR_1	IF_15
0x4001154	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	       766	show-branch.c	FUNCTION_28	IF_7	CALL_60
0x400115c	      0xe800000000	                          call 0x4001161	       766	show-branch.c	FUNCTION_28	IF_7	CALL_60
0x4001161	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	       777	show-branch.c	FUNCTION_28	CALL_63
0x4001169	            0x31c9	                            xor ecx, ecx	       777	show-branch.c	FUNCTION_28	CALL_63
0x400116b	      0xbe01000000	                              mov esi, 1	       777	show-branch.c	FUNCTION_28	CALL_63
0x4001170	      0xbf00000000	                              mov edi, 0	       777	show-branch.c	FUNCTION_28	CALL_63
0x4001175	      0xe800000000	                          call 0x400117a	       777	show-branch.c	FUNCTION_28	CALL_63
0x400117a	      0x448b7c2454	           mov r15d, dword [rsp + 0x54] 	       780	show-branch.c	FUNCTION_28	IF_18
0x400117f	      0x4889442418	             mov qword [rsp + 0x18], rax	       777	show-branch.c	FUNCTION_28	CALL_63
0x4001184	          0x4585ff	                         test r15d, r15d	       780	show-branch.c	FUNCTION_28	IF_18
0x4001187	     0xf84f8030000	                            je 0x4001585	       780	show-branch.c	FUNCTION_28	IF_18
0x400118d	            0x31db	                            xor ebx, ebx	       780	show-branch.c	FUNCTION_28	IF_18
0x400118f	          0x4885c0	                           test rax, rax	       780	show-branch.c	FUNCTION_28	IF_18
0x4001192	    0x8b2d00000000	            mov ebp, dword [0x04001198] 	       780	show-branch.c	FUNCTION_28	IF_18
0x4001198	      0x4c8b642418	            mov r12, qword [rsp + 0x18] 	       780	show-branch.c	FUNCTION_28	IF_18
0x400119d	     0xf84e2030000	                            je 0x4001585	       780	show-branch.c	FUNCTION_28	IF_18
0x40011a3	       0xf1f440000	                   nop dword [rax + rax]	       780	show-branch.c	FUNCTION_28	IF_18
0x40011a8	            0x39dd	                            cmp ebp, ebx	       782	show-branch.c	FUNCTION_28	IF_18	FOR_2
0x40011aa	     0xf8e25040000	                           jle 0x40015d5	       782	show-branch.c	FUNCTION_28	IF_18	FOR_2
0x40011b0	    0x488b34dd0000	                  mov rsi, qword [rbx*8]	       786	show-branch.c	FUNCTION_28	IF_18	FOR_2	IF_19	CALL_64
0x40011b8	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	       786	show-branch.c	FUNCTION_28	IF_18	FOR_2	IF_19	CALL_64
0x40011c0	            0x31c9	                            xor ecx, ecx	       786	show-branch.c	FUNCTION_28	IF_18	FOR_2	IF_19	CALL_64
0x40011c2	          0x4c89e7	                            mov rdi, r12	       786	show-branch.c	FUNCTION_28	IF_18	FOR_2	IF_19	CALL_64
0x40011c5	        0x4883c301	                              add rbx, 1	       786	show-branch.c	FUNCTION_28	IF_18	FOR_2	IF_19	CALL_64
0x40011c9	      0xe842f0ffff	                    call sym.rev_is_head	       786	show-branch.c	FUNCTION_28	IF_18	FOR_2	IF_19	CALL_64
0x40011ce	            0x85c0	                           test eax, eax	       782	show-branch.c	FUNCTION_28	IF_18	FOR_2
0x40011d0	            0x74d6	                            je 0x40011a8	       782	show-branch.c	FUNCTION_28	IF_18	FOR_2
0x40011d2	    0x488b3d000000	            mov rdi, qword [0x040011d9] 	       803	show-branch.c	FUNCTION_28	FOR_3
0x40011d9	            0x31ed	                            xor ebp, ebp	       803	show-branch.c	FUNCTION_28	FOR_3
0x40011db	          0x4885ff	                           test rdi, rdi	       803	show-branch.c	FUNCTION_28	FOR_3
0x40011de	     0xf84df010000	                            je 0x40013c3	       803	show-branch.c	FUNCTION_28	FOR_3
0x40011e4	            0x31db	                            xor ebx, ebx	       803	show-branch.c	FUNCTION_28	FOR_3
0x40011e6	    0x41be04000000	                             mov r14d, 4	       803	show-branch.c	FUNCTION_28	FOR_3
0x40011ec	            0x31ed	                            xor ebp, ebp	       803	show-branch.c	FUNCTION_28	FOR_3
0x40011ee	    0x4c8da424d000	                   lea r12, [rsp + 0xd0]	       803	show-branch.c	FUNCTION_28	FOR_3
0x40011f6	    0x41bd01000000	                             mov r13d, 1	       805	show-branch.c	FUNCTION_28	FOR_3
0x40011fc	            0xeb61	                           jmp 0x400125f	       805	show-branch.c	FUNCTION_28	FOR_3
0x40011fe	            0x6690	                                     nop	       805	show-branch.c	FUNCTION_28	FOR_3
0x4001200	            0x89d0	                            mov eax, edx	       824	show-branch.c	FUNCTION_28	FOR_3
0x4001202	    0x81e20f000080	                     and edx, 0x8000000f	       824	show-branch.c	FUNCTION_28	FOR_3
0x4001208	          0xc1e804	                              shr eax, 4	       824	show-branch.c	FUNCTION_28	FOR_3
0x400120b	          0x4409f0	                            or eax, r14d	       824	show-branch.c	FUNCTION_28	FOR_3
0x400120e	      0x25ffffff07	                      and eax, 0x7ffffff	       824	show-branch.c	FUNCTION_28	FOR_3
0x4001213	            0x89c1	                            mov ecx, eax	       824	show-branch.c	FUNCTION_28	FOR_3
0x4001215	          0xc1e104	                              shl ecx, 4	       824	show-branch.c	FUNCTION_28	FOR_3
0x4001218	             0x9ca	                             or edx, ecx	       824	show-branch.c	FUNCTION_28	FOR_3
0x400121a	          0x4439f0	                           cmp eax, r14d	       825	show-branch.c	FUNCTION_28	FOR_3	IF_25
0x400121d	          0x418917	                    mov dword [r15], edx	       824	show-branch.c	FUNCTION_28	FOR_3
0x4001220	     0xf842a010000	                            je 0x4001350	       825	show-branch.c	FUNCTION_28	FOR_3	IF_25
0x4001226	    0x488bbb000000	                    mov rdi, qword [rbx]	       803	show-branch.c	FUNCTION_28	FOR_3
0x400122d	          0x83c501	                              add ebp, 1	       803	show-branch.c	FUNCTION_28	FOR_3
0x4001230	    0x4c8db4244001	                  lea r14, [rsp + 0x140]	       827	show-branch.c	FUNCTION_28	FOR_3
0x4001238	    0x4c89bc1c4001	      mov qword [rsp + rbx + 0x140], r15	       827	show-branch.c	FUNCTION_28	FOR_3
0x4001240	          0x4885ff	                           test rdi, rdi	       803	show-branch.c	FUNCTION_28	FOR_3
0x4001243	     0xf844f010000	                            je 0x4001398	       803	show-branch.c	FUNCTION_28	FOR_3
0x4001249	          0x8d4d02	                      lea ecx, [rbp + 2]	       805	show-branch.c	FUNCTION_28	FOR_3
0x400124c	          0x4589ee	                          mov r14d, r13d	       805	show-branch.c	FUNCTION_28	FOR_3
0x400124f	        0x4883c308	                              add rbx, 8	       805	show-branch.c	FUNCTION_28	FOR_3
0x4001253	          0x41d3e6	                            shl r14d, cl	       805	show-branch.c	FUNCTION_28	FOR_3
0x4001256	          0x83fd19	                           cmp ebp, 0x19	       807	show-branch.c	FUNCTION_28	FOR_3	IF_22
0x4001259	     0xf8409010000	                            je 0x4001368	       807	show-branch.c	FUNCTION_28	FOR_3	IF_22
0x400125f	          0x4c89e6	                            mov rsi, r12	       811	show-branch.c	FUNCTION_28	FOR_3	IF_23	CALL_71
0x4001262	      0xe800000000	                          call 0x4001267	       811	show-branch.c	FUNCTION_28	FOR_3	IF_23	CALL_71
0x4001267	            0x85c0	                           test eax, eax	       811	show-branch.c	FUNCTION_28	FOR_3	IF_23	CALL_71
0x4001269	     0xf85ce0d0000	                           jne 0x400203d	       811	show-branch.c	FUNCTION_28	FOR_3	IF_23	CALL_71
0x400126f	          0x4c89e7	                            mov rdi, r12	       813	show-branch.c	FUNCTION_28	FOR_3	CALL_74
0x4001272	      0xe800000000	                          call 0x4001277	       813	show-branch.c	FUNCTION_28	FOR_3	CALL_74
0x4001277	          0x4885c0	                           test rax, rax	       814	show-branch.c	FUNCTION_28	FOR_3	IF_24
0x400127a	          0x4989c7	                            mov r15, rax	       813	show-branch.c	FUNCTION_28	FOR_3	CALL_74
0x400127d	     0xf84830d0000	                            je 0x4002006	       814	show-branch.c	FUNCTION_28	FOR_3	IF_24
0x4001283	            0x31f6	                            xor esi, esi	        75	commit.h	FUNCTION_107	CALL_1
0x4001285	          0x4889c7	                            mov rdi, rax	        75	commit.h	FUNCTION_107	CALL_1
0x4001288	      0xe800000000	                          call 0x400128d	        75	commit.h	FUNCTION_107	CALL_1
0x400128d	          0x418b17	                    mov edx, dword [r15]	       189	show-branch.c	FUNCTION_8	IF_1
0x4001290	    0xf7c2f0ffff7f	                    test edx, 0x7ffffff0	       189	show-branch.c	FUNCTION_8	IF_1
0x4001296	     0xf8564ffffff	                           jne 0x4001200	       189	show-branch.c	FUNCTION_8	IF_1
0x400129c	      0x488d742470	                   lea rsi, [rsp + 0x70]	       190	show-branch.c	FUNCTION_8	IF_1	CALL_1
0x40012a1	          0x4c89ff	                            mov rdi, r15	       190	show-branch.c	FUNCTION_8	IF_1	CALL_1
0x40012a4	      0xe800000000	                          call 0x40012a9	       190	show-branch.c	FUNCTION_8	IF_1	CALL_1
0x40012a9	          0x418b17	                    mov edx, dword [r15]	       190	show-branch.c	FUNCTION_8	IF_1	CALL_1
0x40012ac	      0xe94fffffff	                           jmp 0x4001200	       190	show-branch.c	FUNCTION_8	IF_1	CALL_1
0x40012b1	     0xf1f80000000	                         nop dword [rax]	       190	show-branch.c	FUNCTION_8	IF_1	CALL_1
0x40012b8	        0x3b442458	            cmp eax, dword [rsp + 0x58] 	       695	show-branch.c	FUNCTION_28	IF_6
0x40012bc	     0xf8ea6080000	                           jle 0x4001b68	       695	show-branch.c	FUNCTION_28	IF_6
0x40012c2	          0x8d50ff	                      lea edx, [rax - 1]	       695	show-branch.c	FUNCTION_28	IF_6
0x40012c5	            0x85c0	                           test eax, eax	       769	show-branch.c	FUNCTION_28	ELSE_2	WHILE_1
0x40012c7	      0x488d6cd308	              lea rbp, [rbx + rdx*8 + 8]	       769	show-branch.c	FUNCTION_28	ELSE_2	WHILE_1
0x40012cc	            0x7e13	                           jle 0x40012e1	       769	show-branch.c	FUNCTION_28	ELSE_2	WHILE_1
0x40012ce	            0x6690	                                     nop	       769	show-branch.c	FUNCTION_28	ELSE_2	WHILE_1
0x40012d0	          0x488b3b	                    mov rdi, qword [rbx]	       770	show-branch.c	FUNCTION_28	ELSE_2	WHILE_1	CALL_61
0x40012d3	        0x4883c308	                              add rbx, 8	       771	show-branch.c	FUNCTION_28	ELSE_2	WHILE_1
0x40012d7	      0xe8e4f5ffff	                 call sym.append_one_rev	       770	show-branch.c	FUNCTION_28	ELSE_2	WHILE_1	CALL_61
0x40012dc	          0x4839eb	                            cmp rbx, rbp	       769	show-branch.c	FUNCTION_28	ELSE_2	WHILE_1
0x40012df	            0x75ef	                           jne 0x40012d0	       769	show-branch.c	FUNCTION_28	ELSE_2	WHILE_1
0x40012e1	        0x8b442438	            mov eax, dword [rsp + 0x38] 	       773	show-branch.c	FUNCTION_28	ELSE_2	IF_17
0x40012e5	        0x8b5c243c	            mov ebx, dword [rsp + 0x3c] 	       773	show-branch.c	FUNCTION_28	ELSE_2	IF_17
0x40012e9	            0x89c1	                            mov ecx, eax	       773	show-branch.c	FUNCTION_28	ELSE_2	IF_17
0x40012eb	             0x1d9	                            add ecx, ebx	       773	show-branch.c	FUNCTION_28	ELSE_2	IF_17
0x40012ed	     0xf846efeffff	                            je 0x4001161	       773	show-branch.c	FUNCTION_28	ELSE_2	IF_17
0x40012f3	            0x85c0	                           test eax, eax	       452	show-branch.c	FUNCTION_20	IF_1
0x40012f5	     0xf85f5090000	                           jne 0x4001cf0	       452	show-branch.c	FUNCTION_20	IF_1
0x40012fb	            0x85db	                           test ebx, ebx	       458	show-branch.c	FUNCTION_20	IF_2
0x40012fd	     0xf845efeffff	                            je 0x4001161	       458	show-branch.c	FUNCTION_20	IF_2
0x4001303	            0x31f6	                            xor esi, esi	       461	show-branch.c	FUNCTION_20	IF_2	CALL_3
0x4001305	    0x48631d000000	         movsxd rbx, dword [0x0400130c] 	       459	show-branch.c	FUNCTION_20	IF_2
0x400130c	      0xbf00000000	                              mov edi, 0	       461	show-branch.c	FUNCTION_20	IF_2	CALL_3
0x4001311	      0xe800000000	                          call 0x4001316	       461	show-branch.c	FUNCTION_20	IF_2	CALL_3
0x4001316	    0x8b3500000000	            mov esi, dword [0x0400131c] 	       357	show-branch.c	FUNCTION_14	CALL_1
0x400131c	            0x29de	                            sub esi, ebx	       357	show-branch.c	FUNCTION_14	CALL_1
0x400131e	          0x4863f6	                         movsxd rsi, esi	       357	show-branch.c	FUNCTION_14	CALL_1
0x4001321	        0x4883fe01	                              cmp rsi, 1	      1048	git-compat-util.h	FUNCTION_80	IF_1
0x4001325	     0xf8636feffff	                           jbe 0x4001161	      1048	git-compat-util.h	FUNCTION_80	IF_1
0x400132b	    0x488d3cdd0000	                        lea rdi, [rbx*8]	      1049	git-compat-util.h	FUNCTION_80	CALL_1
0x4001333	      0xb900000000	                              mov ecx, 0	      1049	git-compat-util.h	FUNCTION_80	CALL_1
0x4001338	      0xba08000000	                              mov edx, 8	      1049	git-compat-util.h	FUNCTION_80	CALL_1
0x400133d	      0xe800000000	                          call 0x4001342	      1049	git-compat-util.h	FUNCTION_80	CALL_1
0x4001342	      0xe91afeffff	                           jmp 0x4001161	      1049	git-compat-util.h	FUNCTION_80	CALL_1
0x4001347	    0x660f1f840000	                    nop word [rax + rax]	      1049	git-compat-util.h	FUNCTION_80	CALL_1
0x4001350	      0x488d742468	                   lea rsi, [rsp + 0x68]	       826	show-branch.c	FUNCTION_28	FOR_3	CALL_80
0x4001355	          0x4c89ff	                            mov rdi, r15	       826	show-branch.c	FUNCTION_28	FOR_3	CALL_80
0x4001358	      0xe800000000	                          call 0x400135d	       826	show-branch.c	FUNCTION_28	FOR_3	CALL_80
0x400135d	      0xe9c4feffff	                           jmp 0x4001226	       826	show-branch.c	FUNCTION_28	FOR_3	CALL_80
0x4001362	    0x660f1f440000	                    nop word [rax + rax]	       826	show-branch.c	FUNCTION_28	FOR_3	CALL_80
0x4001368	    0x41b805000000	                              mov r8d, 5	        62	gettext.h	FUNCTION_86	CALL_2
0x400136e	      0xb919000000	                           mov ecx, 0x19	        62	gettext.h	FUNCTION_86	CALL_2
0x4001373	      0xba00000000	                              mov edx, 0	        62	gettext.h	FUNCTION_86	CALL_2
0x4001378	      0xbe00000000	                              mov esi, 0	        62	gettext.h	FUNCTION_86	CALL_2
0x400137d	            0x31ff	                            xor edi, edi	        62	gettext.h	FUNCTION_86	CALL_2
0x400137f	      0xe800000000	                          call 0x4001384	        62	gettext.h	FUNCTION_86	CALL_2
0x4001384	      0xbe19000000	                           mov esi, 0x19	       808	show-branch.c	FUNCTION_28	FOR_3	IF_22	CALL_70
0x4001389	          0x4889c7	                            mov rdi, rax	       808	show-branch.c	FUNCTION_28	FOR_3	IF_22	CALL_70
0x400138c	            0x31c0	                            xor eax, eax	       808	show-branch.c	FUNCTION_28	FOR_3	IF_22	CALL_70
0x400138e	      0xe800000000	                          call 0x4001393	       808	show-branch.c	FUNCTION_28	FOR_3	IF_22	CALL_70
0x4001393	       0xf1f440000	                   nop dword [rax + rax]	       808	show-branch.c	FUNCTION_28	FOR_3	IF_22	CALL_70
0x4001398	          0x8d45ff	                      lea eax, [rbp - 1]	       808	show-branch.c	FUNCTION_28	FOR_3	IF_22	CALL_70
0x400139b	            0x31d2	                            xor edx, edx	       803	show-branch.c	FUNCTION_28	FOR_3
0x400139d	    0x488d0c850400	                    lea rcx, [rax*4 + 4]	       803	show-branch.c	FUNCTION_28	FOR_3
0x40013a5	           0xf1f00	                         nop dword [rax]	       803	show-branch.c	FUNCTION_28	FOR_3
0x40013a8	        0x498b0456	            mov rax, qword [r14 + rdx*2]	       830	show-branch.c	FUNCTION_28	FOR_4
0x40013ac	            0x8b00	                    mov eax, dword [rax]	       830	show-branch.c	FUNCTION_28	FOR_4
0x40013ae	          0xc1e804	                              shr eax, 4	       830	show-branch.c	FUNCTION_28	FOR_4
0x40013b1	      0x25ffffff07	                      and eax, 0x7ffffff	       830	show-branch.c	FUNCTION_28	FOR_4
0x40013b6	        0x41890414	              mov dword [r12 + rdx], eax	       830	show-branch.c	FUNCTION_28	FOR_4
0x40013ba	        0x4883c204	                              add rdx, 4	       830	show-branch.c	FUNCTION_28	FOR_4
0x40013be	          0x4839ca	                            cmp rdx, rcx	       829	show-branch.c	FUNCTION_28	FOR_4
0x40013c1	            0x75e5	                           jne 0x40013a8	       829	show-branch.c	FUNCTION_28	FOR_4
0x40013c3	        0x8b442434	            mov eax, dword [rsp + 0x34] 	       832	show-branch.c	FUNCTION_28	IF_26
0x40013c7	            0x85c0	                           test eax, eax	       832	show-branch.c	FUNCTION_28	IF_26
0x40013c9	        0x89442410	             mov dword [rsp + 0x10], eax	       832	show-branch.c	FUNCTION_28	IF_26
0x40013cd	     0xf8833020000	                            js 0x4001606	       832	show-branch.c	FUNCTION_28	IF_26
0x40013d3	          0x8d4d02	                      lea ecx, [rbp + 2]	       200	show-branch.c	FUNCTION_9
0x40013d6	    0x41be01000000	                             mov r14d, 1	       200	show-branch.c	FUNCTION_9
0x40013dc	          0x41d3e6	                            shl r14d, cl	       200	show-branch.c	FUNCTION_9
0x40013df	        0x418d46ff	                      lea eax, [r14 - 1]	       200	show-branch.c	FUNCTION_9
0x40013e3	          0x4189c5	                           mov r13d, eax	       201	show-branch.c	FUNCTION_9
0x40013e6	        0x89442404	                mov dword [rsp + 4], eax	       200	show-branch.c	FUNCTION_9
0x40013ea	      0x488d442470	                   lea rax, [rsp + 0x70]	       200	show-branch.c	FUNCTION_9
0x40013ef	        0x4183e5fc	                    and r13d, 0xfffffffc	       201	show-branch.c	FUNCTION_9
0x40013f3	      0x4889442408	                mov qword [rsp + 8], rax	       201	show-branch.c	FUNCTION_9
0x40013f8	     0xf1f84000000	                   nop dword [rax + rax]	       201	show-branch.c	FUNCTION_9
0x4001400	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       203	show-branch.c	FUNCTION_9	WHILE_1
0x4001405	          0x4885c0	                           test rax, rax	       203	show-branch.c	FUNCTION_9	WHILE_1
0x4001408	     0xf84e5000000	                            je 0x40014f3	       203	show-branch.c	FUNCTION_9	WHILE_1
0x400140e	          0x4c8b20	                    mov r12, qword [rax]	        48	show-branch.c	FUNCTION_3	WHILE_1
0x4001411	      0x41f6042410	                   test byte [r12], 0x10	        50	show-branch.c	FUNCTION_3	WHILE_1	IF_1
0x4001416	     0xf84b4030000	                            je 0x40017d0	        50	show-branch.c	FUNCTION_3	WHILE_1	IF_1
0x400141c	        0x488b4008	                mov rax, qword [rax + 8]	        49	show-branch.c	FUNCTION_3	WHILE_1
0x4001420	          0x4885c0	                           test rax, rax	        47	show-branch.c	FUNCTION_3	WHILE_1
0x4001423	            0x75e9	                           jne 0x400140e	        47	show-branch.c	FUNCTION_3	WHILE_1
0x4001425	      0x488d7c2468	                   lea rdi, [rsp + 0x68]	       206	show-branch.c	FUNCTION_9	WHILE_1	CALL_2
0x400142a	      0xe800000000	                          call 0x400142f	       206	show-branch.c	FUNCTION_9	WHILE_1	CALL_2
0x400142f	      0x448b742410	           mov r14d, dword [rsp + 0x10] 	       209	show-branch.c	FUNCTION_9	WHILE_1	IF_1
0x4001434	          0x4889c2	                            mov rdx, rax	       206	show-branch.c	FUNCTION_9	WHILE_1	CALL_2
0x4001437	          0x4585f6	                         test r14d, r14d	       209	show-branch.c	FUNCTION_9	WHILE_1	IF_1
0x400143a	     0xf8eb3000000	                           jle 0x40014f3	       209	show-branch.c	FUNCTION_9	WHILE_1	IF_1
0x4001440	          0x448b38	                   mov r15d, dword [rax]	       207	show-branch.c	FUNCTION_9	WHILE_1
0x4001443	        0x8b5c2404	                mov ebx, dword [rsp + 4]	       207	show-branch.c	FUNCTION_9	WHILE_1
0x4001447	          0x4531e4	                          xor r12d, r12d	        54	show-branch.c	FUNCTION_3
0x400144a	        0x41c1ef04	                             shr r15d, 4	       207	show-branch.c	FUNCTION_9	WHILE_1
0x400144e	    0x4181e7ffffff	                     and r15d, 0x7ffffff	       207	show-branch.c	FUNCTION_9	WHILE_1
0x4001455	          0x4421fb	                           and ebx, r15d	       207	show-branch.c	FUNCTION_9	WHILE_1
0x4001458	    0xf702f0ffff7f	           test dword [rdx], 0x7ffffff0 	       189	show-branch.c	FUNCTION_8	IF_1
0x400145e	     0xf849a030000	                            je 0x40017fe	       189	show-branch.c	FUNCTION_8	IF_1
0x4001464	         0xf1f4000	                         nop dword [rax]	       189	show-branch.c	FUNCTION_8	IF_1
0x4001468	            0x89d8	                            mov eax, ebx	       214	show-branch.c	FUNCTION_9	WHILE_1	IF_2
0x400146a	          0x4521ef	                          and r15d, r13d	       213	show-branch.c	FUNCTION_9	WHILE_1	IF_2
0x400146d	        0x4c8b7230	            mov r14, qword [rdx + 0x30] 	       215	show-branch.c	FUNCTION_9	WHILE_1
0x4001471	          0x83c801	                               or eax, 1	       214	show-branch.c	FUNCTION_9	WHILE_1	IF_2
0x4001474	          0x4539fd	                          cmp r13d, r15d	       214	show-branch.c	FUNCTION_9	WHILE_1	IF_2
0x4001477	           0xf44d8	                          cmove ebx, eax	       214	show-branch.c	FUNCTION_9	WHILE_1	IF_2
0x400147a	    0x660f1f440000	                    nop word [rax + rax]	       214	show-branch.c	FUNCTION_9	WHILE_1	IF_2
0x4001480	          0x4d85f6	                           test r14, r14	       217	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x4001483	     0xf8477ffffff	                            je 0x4001400	       217	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x4001489	          0x4d8b3e	                    mov r15, qword [r14]	       218	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x400148c	        0x4d8b7608	                mov r14, qword [r14 + 8]	       220	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x4001490	          0x418b07	                    mov eax, dword [r15]	       219	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x4001493	          0xc1e804	                              shr eax, 4	       219	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x4001496	      0x25ffffff07	                      and eax, 0x7ffffff	       219	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x400149b	            0x21d8	                            and eax, ebx	       221	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2	IF_3
0x400149d	            0x39c3	                            cmp ebx, eax	       221	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2	IF_3
0x400149f	            0x74df	                            je 0x4001480	       221	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2	IF_3
0x40014a1	            0x31f6	                            xor esi, esi	        75	commit.h	FUNCTION_107	CALL_1
0x40014a3	          0x4c89ff	                            mov rdi, r15	        75	commit.h	FUNCTION_107	CALL_1
0x40014a6	      0xe800000000	                          call 0x40014ab	        75	commit.h	FUNCTION_107	CALL_1
0x40014ab	          0x418b07	                    mov eax, dword [r15]	       189	show-branch.c	FUNCTION_8	IF_1
0x40014ae	      0xa9f0ffff7f	                    test eax, 0x7ffffff0	       189	show-branch.c	FUNCTION_8	IF_1
0x40014b3	     0xf84df020000	                            je 0x4001798	       189	show-branch.c	FUNCTION_8	IF_1
0x40014b9	            0x89c2	                            mov edx, eax	       226	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x40014bb	      0x250f000080	                     and eax, 0x8000000f	       226	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x40014c0	      0x488d742468	                   lea rsi, [rsp + 0x68]	       227	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2	CALL_6
0x40014c5	          0xc1ea04	                              shr edx, 4	       226	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x40014c8	          0x4c89ff	                            mov rdi, r15	       227	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2	CALL_6
0x40014cb	             0x9da	                             or edx, ebx	       226	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x40014cd	    0x81e2ffffff07	                      and edx, 0x7ffffff	       226	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x40014d3	          0xc1e204	                              shl edx, 4	       226	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x40014d6	             0x9d0	                             or eax, edx	       226	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x40014d8	          0x418907	                    mov dword [r15], eax	       226	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x40014db	      0xe800000000	                          call 0x40014e0	       227	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2	CALL_6
0x40014e0	          0x4d85f6	                           test r14, r14	       217	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x40014e3	            0x75a4	                           jne 0x4001489	       217	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2
0x40014e5	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       203	show-branch.c	FUNCTION_9	WHILE_1
0x40014ea	          0x4885c0	                           test rax, rax	       203	show-branch.c	FUNCTION_9	WHILE_1
0x40014ed	     0xf851bffffff	                           jne 0x400140e	       203	show-branch.c	FUNCTION_9	WHILE_1
0x40014f3	      0x4c8b442470	              mov r8, qword [rsp + 0x70]	       203	show-branch.c	FUNCTION_9	WHILE_1
0x40014f8	          0x4d85c0	                             test r8, r8	       241	show-branch.c	FUNCTION_9	FOR_1	FOR_2
0x40014fb	     0xf840f010000	                            je 0x4001610	       241	show-branch.c	FUNCTION_9	FOR_1	FOR_2
0x4001501	          0x4d89c1	                              mov r9, r8	       241	show-branch.c	FUNCTION_9	FOR_1	FOR_2
0x4001504	            0x31d2	                            xor edx, edx	       241	show-branch.c	FUNCTION_9	FOR_1	FOR_2
0x4001506	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       241	show-branch.c	FUNCTION_9	FOR_1	FOR_2
0x4001510	          0x498b09	                     mov rcx, qword [r9]	       242	show-branch.c	FUNCTION_9	FOR_1	FOR_2
0x4001513	            0x8b01	                    mov eax, dword [rcx]	       245	show-branch.c	FUNCTION_9	FOR_1	FOR_2	IF_5
0x4001515	          0xc1e804	                              shr eax, 4	       245	show-branch.c	FUNCTION_9	FOR_1	FOR_2	IF_5
0x4001518	      0x25ffffff07	                      and eax, 0x7ffffff	       245	show-branch.c	FUNCTION_9	FOR_1	FOR_2	IF_5
0x400151d	            0x89c6	                            mov esi, eax	       245	show-branch.c	FUNCTION_9	FOR_1	FOR_2	IF_5
0x400151f	          0x4421ee	                           and esi, r13d	       245	show-branch.c	FUNCTION_9	FOR_1	FOR_2	IF_5
0x4001522	          0x4139f5	                           cmp r13d, esi	       245	show-branch.c	FUNCTION_9	FOR_1	FOR_2	IF_5
0x4001525	            0x7404	                            je 0x400152b	       245	show-branch.c	FUNCTION_9	FOR_1	FOR_2	IF_5
0x4001527	            0xa801	                              test al, 1	       245	show-branch.c	FUNCTION_9	FOR_1	FOR_2	IF_5
0x4001529	            0x743e	                            je 0x4001569	       245	show-branch.c	FUNCTION_9	FOR_1	FOR_2	IF_5
0x400152b	        0x488b4930	            mov rcx, qword [rcx + 0x30] 	       255	show-branch.c	FUNCTION_9	FOR_1	FOR_2
0x400152f	              0x90	                                     nop	       255	show-branch.c	FUNCTION_9	FOR_1	FOR_2
0x4001530	          0x4885c9	                           test rcx, rcx	       256	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3
0x4001533	            0x7434	                            je 0x4001569	       256	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3
0x4001535	          0x488b39	                    mov rdi, qword [rcx]	       257	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3
0x4001538	        0x488b4908	                mov rcx, qword [rcx + 8]	       258	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3
0x400153c	            0x8b37	                    mov esi, dword [rdi]	       259	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3	IF_6
0x400153e	            0x89f0	                            mov eax, esi	       259	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3	IF_6
0x4001540	          0xc1e804	                              shr eax, 4	       259	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3	IF_6
0x4001543	      0x25ffffff07	                      and eax, 0x7ffffff	       259	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3	IF_6
0x4001548	            0xa801	                              test al, 1	       259	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3	IF_6
0x400154a	            0x75e4	                           jne 0x4001530	       259	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3	IF_6
0x400154c	          0x83c801	                               or eax, 1	       260	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3	IF_6
0x400154f	          0xc1e004	                              shl eax, 4	       260	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3	IF_6
0x4001552	            0x89c2	                            mov edx, eax	       260	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3	IF_6
0x4001554	            0x89f0	                            mov eax, esi	       260	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3	IF_6
0x4001556	      0x250f000080	                     and eax, 0x8000000f	       260	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3	IF_6
0x400155b	             0x9d0	                             or eax, edx	       260	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3	IF_6
0x400155d	          0x4885c9	                           test rcx, rcx	       256	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3
0x4001560	      0xba01000000	                              mov edx, 1	       261	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3	IF_6
0x4001565	            0x8907	                    mov dword [rdi], eax	       260	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3	IF_6
0x4001567	            0x75cc	                           jne 0x4001535	       256	show-branch.c	FUNCTION_9	FOR_1	FOR_2	WHILE_3
0x4001569	        0x4d8b4908	                  mov r9, qword [r9 + 8]	       241	show-branch.c	FUNCTION_9	FOR_1	FOR_2
0x400156d	          0x4d85c9	                             test r9, r9	       241	show-branch.c	FUNCTION_9	FOR_1	FOR_2
0x4001570	            0x759e	                           jne 0x4001510	       241	show-branch.c	FUNCTION_9	FOR_1	FOR_2
0x4001572	            0x85d2	                           test edx, edx	       265	show-branch.c	FUNCTION_9	FOR_1	IF_7
0x4001574	            0x7582	                           jne 0x40014f8	       265	show-branch.c	FUNCTION_9	FOR_1	IF_7
0x4001576	      0xe995000000	                           jmp 0x4001610	       265	show-branch.c	FUNCTION_9	FOR_1	IF_7
0x400157b	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       488	git-compat-util.h	FUNCTION_62	DO_1
0x4001580	      0xe83bf3ffff	                 call sym.append_one_rev	       794	show-branch.c	FUNCTION_28	IF_18	IF_20	CALL_66
0x4001585	    0x8b0500000000	            mov eax, dword [0x0400158b] 	       794	show-branch.c	FUNCTION_28	IF_18	IF_20	CALL_66
0x400158b	            0x85c0	                           test eax, eax	       798	show-branch.c	FUNCTION_28	IF_21
0x400158d	     0xf853ffcffff	                           jne 0x40011d2	       798	show-branch.c	FUNCTION_28	IF_21
0x4001593	    0x488b0d000000	            mov rcx, qword [0x0400159a] 	        97	stdio2.h	FUNCTION_91	CALL_1
0x400159a	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	FUNCTION_91	CALL_1
0x400159f	      0xba15000000	                           mov edx, 0x15	        97	stdio2.h	FUNCTION_91	CALL_1
0x40015a4	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_91	CALL_1
0x40015a9	      0xe800000000	                          call 0x40015ae	        97	stdio2.h	FUNCTION_91	CALL_1
0x40015ae	            0x31ff	                            xor edi, edi	       800	show-branch.c	FUNCTION_28	IF_21	CALL_68
0x40015b0	      0xe800000000	                          call 0x40015b5	       800	show-branch.c	FUNCTION_28	IF_21	CALL_68
0x40015b5	           0xf1f00	                         nop dword [rax]	       800	show-branch.c	FUNCTION_28	IF_21	CALL_68
0x40015b8	    0x8b0500000000	            mov eax, dword [0x040015be] 	       666	show-branch.c	FUNCTION_28	IF_1
0x40015be	            0x85c0	                           test eax, eax	       666	show-branch.c	FUNCTION_28	IF_1
0x40015c0	     0xf845af9ffff	                            je 0x4000f20	       666	show-branch.c	FUNCTION_28	IF_1
0x40015c6	    0x488b1d000000	            mov rbx, qword [0x040015cd] 	       668	show-branch.c	FUNCTION_28	IF_1
0x40015cd	          0x4189c4	                           mov r12d, eax	       668	show-branch.c	FUNCTION_28	IF_1
0x40015d0	      0xe94bf9ffff	                           jmp 0x4000f20	       668	show-branch.c	FUNCTION_28	IF_1
0x40015d5	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       668	show-branch.c	FUNCTION_28	IF_1
0x40015da	      0xb800000000	                              mov eax, 0	       668	show-branch.c	FUNCTION_28	IF_1
0x40015df	            0xeb14	                           jmp 0x40015f5	       668	show-branch.c	FUNCTION_28	IF_1
0x40015e1	     0xf1f80000000	                         nop dword [rax]	       668	show-branch.c	FUNCTION_28	IF_1
0x40015e8	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_62	DO_1
0x40015ec	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_62	DO_1
0x40015f0	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_62	DO_1
0x40015f3	            0x7586	                           jne 0x400157b	       488	git-compat-util.h	FUNCTION_62	DO_1
0x40015f5	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_62	DO_1	IF_1
0x40015f8	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_62	DO_1	IF_1
0x40015fa	            0x75ec	                           jne 0x40015e8	       484	git-compat-util.h	FUNCTION_62	DO_1	IF_1
0x40015fc	      0xe8bff2ffff	                 call sym.append_one_rev	       794	show-branch.c	FUNCTION_28	IF_18	IF_20	CALL_66
0x4001601	      0xe97fffffff	                           jmp 0x4001585	       794	show-branch.c	FUNCTION_28	IF_18	IF_20	CALL_66
0x4001606	      0x488d442470	                   lea rax, [rsp + 0x70]	       794	show-branch.c	FUNCTION_28	IF_18	IF_20	CALL_66
0x400160b	      0x4889442408	                mov qword [rsp + 8], rax	       794	show-branch.c	FUNCTION_28	IF_18	IF_20	CALL_66
0x4001610	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       835	show-branch.c	FUNCTION_28	CALL_82
0x4001615	      0xe800000000	                          call 0x400161a	       835	show-branch.c	FUNCTION_28	CALL_82
0x400161a	        0x8b442444	            mov eax, dword [rsp + 0x44] 	       837	show-branch.c	FUNCTION_28	IF_27
0x400161e	            0x85c0	                           test eax, eax	       837	show-branch.c	FUNCTION_28	IF_27
0x4001620	        0x89442428	             mov dword [rsp + 0x28], eax	       837	show-branch.c	FUNCTION_28	IF_27
0x4001624	     0xf8593050000	                           jne 0x4001bbd	       837	show-branch.c	FUNCTION_28	IF_27
0x400162a	      0x448b642448	           mov r12d, dword [rsp + 0x48] 	       840	show-branch.c	FUNCTION_28	IF_28
0x400162f	          0x4585e4	                         test r12d, r12d	       840	show-branch.c	FUNCTION_28	IF_28
0x4001632	     0xf8507060000	                           jne 0x4001c3f	       840	show-branch.c	FUNCTION_28	IF_28
0x4001638	          0x83fd01	                              cmp ebp, 1	       844	show-branch.c	FUNCTION_28	IF_29
0x400163b	      0x448b7c2434	           mov r15d, dword [rsp + 0x34] 	       844	show-branch.c	FUNCTION_28	IF_29
0x4001640	     0xf8ee3050000	                           jle 0x4001c29	       844	show-branch.c	FUNCTION_28	IF_29
0x4001646	        0x448d75ff	                     lea r14d, [rbp - 1]	       844	show-branch.c	FUNCTION_28	IF_29
0x400164a	          0x4531e4	                          xor r12d, r12d	       503	show-branch.c	FUNCTION_23	FOR_1
0x400164d	    0xc7442404ffff	        mov dword [rsp + 4], 0xffffffff 	       503	show-branch.c	FUNCTION_23	FOR_1
0x4001655	        0x896c242c	             mov dword [rsp + 0x2c], ebp	       503	show-branch.c	FUNCTION_23	FOR_1
0x4001659	        0x498d4601	                      lea rax, [r14 + 1]	       503	show-branch.c	FUNCTION_23	FOR_1
0x400165d	    0x4c8db4244001	                  lea r14, [rsp + 0x140]	       503	show-branch.c	FUNCTION_23	FOR_1
0x4001665	      0x4889442420	             mov qword [rsp + 0x20], rax	       503	show-branch.c	FUNCTION_23	FOR_1
0x400166a	          0x4c89f0	                            mov rax, r14	       503	show-branch.c	FUNCTION_23	FOR_1
0x400166d	          0x4589fe	                          mov r14d, r15d	       503	show-branch.c	FUNCTION_23	FOR_1
0x4001670	          0x4989c7	                            mov r15, rax	       503	show-branch.c	FUNCTION_23	FOR_1
0x4001673	       0xf1f440000	                   nop dword [rax + rax]	       503	show-branch.c	FUNCTION_23	FOR_1
0x4001678	        0x4b8b04e7	            mov rax, qword [r15 + r12*8]	       850	show-branch.c	FUNCTION_28	IF_29	FOR_5
0x400167c	    0x4a8b2ce50000	                  mov rbp, qword [r12*8]	       848	show-branch.c	FUNCTION_28	IF_29	FOR_5
0x4001684	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	       847	show-branch.c	FUNCTION_28	IF_29	FOR_5	CALL_85
0x400168c	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       847	show-branch.c	FUNCTION_28	IF_29	FOR_5	CALL_85
0x4001691	          0x4489e3	                           mov ebx, r12d	       847	show-branch.c	FUNCTION_28	IF_29	FOR_5	CALL_85
0x4001694	        0x488d4804	                      lea rcx, [rax + 4]	       850	show-branch.c	FUNCTION_28	IF_29	FOR_5
0x4001698	          0x4889ee	                            mov rsi, rbp	       847	show-branch.c	FUNCTION_28	IF_29	FOR_5	CALL_85
0x400169b	      0xe870ebffff	                    call sym.rev_is_head	       847	show-branch.c	FUNCTION_28	IF_29	FOR_5	CALL_85
0x40016a0	          0x4585f6	                         test r14d, r14d	       851	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_30
0x40016a3	          0x4189c5	                           mov r13d, eax	       847	show-branch.c	FUNCTION_28	IF_29	FOR_5	CALL_85
0x40016a6	     0xf8874010000	                            js 0x4001820	       851	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_30
0x40016ac	          0x4531f6	                          xor r14d, r14d	       855	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	FOR_6
0x40016af	          0x4585e4	                         test r12d, r12d	       855	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	FOR_6
0x40016b2	            0x7426	                            je 0x40016da	       855	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	FOR_6
0x40016b4	         0xf1f4000	                         nop dword [rax]	       855	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	FOR_6
0x40016b8	    0x488b35000000	            mov rsi, qword [0x040016bf] 	        81	stdio.h	FUNCTION_113	CALL_1
0x40016bf	      0xbf20000000	                           mov edi, 0x20	        81	stdio.h	FUNCTION_113	CALL_1
0x40016c4	        0x4183c601	                             add r14d, 1	       855	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	FOR_6
0x40016c8	      0xe800000000	                          call 0x40016cd	        81	stdio.h	FUNCTION_113	CALL_1
0x40016cd	          0x4139de	                           cmp r14d, ebx	       855	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	FOR_6
0x40016d0	            0x75e6	                           jne 0x40016b8	       855	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	FOR_6
0x40016d2	    0x4a8b2ce50000	                  mov rbp, qword [r12*8]	       855	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	FOR_6
0x40016da	    0x8b3500000000	            mov esi, dword [0x040016e0] 	        40	show-branch.c	FUNCTION_2	IF_1	CALL_1
0x40016e0	      0xbf01000000	                              mov edi, 1	        40	show-branch.c	FUNCTION_2	IF_1	CALL_1
0x40016e5	      0xe800000000	                          call 0x40016ea	        40	show-branch.c	FUNCTION_2	IF_1	CALL_1
0x40016ea	    0x41b800000000	                              mov r8d, 0	        41	show-branch.c	FUNCTION_2	IF_1
0x40016f0	            0x85c0	                           test eax, eax	        41	show-branch.c	FUNCTION_2	IF_1
0x40016f2	      0xb800000000	                              mov eax, 0	        41	show-branch.c	FUNCTION_2	IF_1
0x40016f7	        0x4c0f44c0	                           cmove r8, rax	        41	show-branch.c	FUNCTION_2	IF_1
0x40016fb	    0x8b3500000000	            mov esi, dword [0x04001701] 	        33	show-branch.c	FUNCTION_1	IF_1	CALL_1
0x4001701	        0x4183fd01	                             cmp r13d, 1	       857	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	CALL_88
0x4001705	          0x4519f6	                          sbb r14d, r14d	       857	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	CALL_88
0x4001708	      0xbf01000000	                              mov edi, 1	        33	show-branch.c	FUNCTION_1	IF_1	CALL_1
0x400170d	      0x4c89442410	              mov qword [rsp + 0x10], r8	        41	show-branch.c	FUNCTION_2	IF_1
0x4001712	        0x4183e6f7	                    and r14d, 0xfffffff7	       857	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	CALL_88
0x4001716	      0xe800000000	                          call 0x400171b	        33	show-branch.c	FUNCTION_1	IF_1	CALL_1
0x400171b	        0x4183c62a	                          add r14d, 0x2a	       857	show-branch.c	FUNCTION_28	IF_29	FOR_5	ELSE_3	CALL_88
0x400171f	            0x85c0	                           test eax, eax	        33	show-branch.c	FUNCTION_1	IF_1	CALL_1
0x4001721	      0xba00000000	                              mov edx, 0	        35	show-branch.c	FUNCTION_1
0x4001726	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	        33	show-branch.c	FUNCTION_1	IF_1	CALL_1
0x400172b	            0x7414	                            je 0x4001741	        33	show-branch.c	FUNCTION_1	IF_1	CALL_1
0x400172d	            0x89d8	                            mov eax, ebx	        34	show-branch.c	FUNCTION_1	IF_1
0x400172f	              0x99	                                     cdq	        34	show-branch.c	FUNCTION_1	IF_1
0x4001730	    0xf73d00000000	                 idiv dword [0x04001736]	        34	show-branch.c	FUNCTION_1	IF_1
0x4001736	          0x4863d2	                         movsxd rdx, edx	        34	show-branch.c	FUNCTION_1	IF_1
0x4001739	    0x488b14d50000	                  mov rdx, qword [rdx*8]	        34	show-branch.c	FUNCTION_1	IF_1
0x4001741	          0x4989e9	                             mov r9, rbp	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001744	          0x4489f1	                           mov ecx, r14d	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001747	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	FUNCTION_92	CALL_2
0x400174c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001751	            0x31c0	                            xor eax, eax	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001753	      0xe800000000	                          call 0x4001758	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001758	    0x8b2d00000000	            mov ebp, dword [0x0400175e] 	       863	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_31
0x400175e	            0x85ed	                           test ebp, ebp	       863	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_31
0x4001760	            0x755e	                           jne 0x40017c0	       863	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_31
0x4001762	        0x4b8b3ce7	            mov rdi, qword [r15 + r12*8]	       865	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_31	CALL_91
0x4001766	      0xbe01000000	                              mov esi, 1	       865	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_31	CALL_91
0x400176b	      0xe890ebffff	                call sym.show_one_commit	       865	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_31	CALL_91
0x4001770	          0x4585ed	                         test r13d, r13d	       865	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_31	CALL_91
0x4001773	       0xf445c2404	              cmove ebx, dword [rsp + 4]	       865	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_31	CALL_91
0x4001778	        0x4983c401	                              add r12, 1	       865	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_31	CALL_91
0x400177c	      0x4c39642420	            cmp qword [rsp + 0x20], r12 	       845	show-branch.c	FUNCTION_28	IF_29	FOR_5
0x4001781	        0x895c2404	                mov dword [rsp + 4], ebx	       845	show-branch.c	FUNCTION_28	IF_29	FOR_5
0x4001785	     0xf84c7000000	                            je 0x4001852	       845	show-branch.c	FUNCTION_28	IF_29	FOR_5
0x400178b	      0x448b742434	           mov r14d, dword [rsp + 0x34] 	       845	show-branch.c	FUNCTION_28	IF_29	FOR_5
0x4001790	      0xe9e3feffff	                           jmp 0x4001678	       845	show-branch.c	FUNCTION_28	IF_29	FOR_5
0x4001795	           0xf1f00	                         nop dword [rax]	       845	show-branch.c	FUNCTION_28	IF_29	FOR_5
0x4001798	      0x488b742408	                mov rsi, qword [rsp + 8]	       190	show-branch.c	FUNCTION_8	IF_1	CALL_1
0x400179d	          0x4c89ff	                            mov rdi, r15	       190	show-branch.c	FUNCTION_8	IF_1	CALL_1
0x40017a0	      0xe800000000	                          call 0x40017a5	       190	show-branch.c	FUNCTION_8	IF_1	CALL_1
0x40017a5	          0x4d85e4	                           test r12, r12	       224	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2	IF_4	CALL_5
0x40017a8	     0xf849a000000	                            je 0x4001848	       224	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2	IF_4	CALL_5
0x40017ae	          0x418b07	                    mov eax, dword [r15]	       224	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2	IF_4	CALL_5
0x40017b1	      0xe903fdffff	                           jmp 0x40014b9	       224	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2	IF_4	CALL_5
0x40017b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       224	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2	IF_4	CALL_5
0x40017c0	    0x4a8bbce41002	   mov rdi, qword [rsp + r12*8 + 0x210] 	       868	show-branch.c	FUNCTION_28	IF_29	FOR_5	CALL_92
0x40017c8	      0xe800000000	                          call 0x40017cd	       868	show-branch.c	FUNCTION_28	IF_29	FOR_5	CALL_92
0x40017cd	            0xeba1	                           jmp 0x4001770	       868	show-branch.c	FUNCTION_28	IF_29	FOR_5	CALL_92
0x40017cf	              0x90	                                     nop	       868	show-branch.c	FUNCTION_28	IF_29	FOR_5	CALL_92
0x40017d0	      0x488d7c2468	                   lea rdi, [rsp + 0x68]	       206	show-branch.c	FUNCTION_9	WHILE_1	CALL_2
0x40017d5	      0xe800000000	                          call 0x40017da	       206	show-branch.c	FUNCTION_9	WHILE_1	CALL_2
0x40017da	          0x448b38	                   mov r15d, dword [rax]	       207	show-branch.c	FUNCTION_9	WHILE_1
0x40017dd	        0x8b5c2404	                mov ebx, dword [rsp + 4]	       207	show-branch.c	FUNCTION_9	WHILE_1
0x40017e1	          0x4889c2	                            mov rdx, rax	       206	show-branch.c	FUNCTION_9	WHILE_1	CALL_2
0x40017e4	        0x41c1ef04	                             shr r15d, 4	       207	show-branch.c	FUNCTION_9	WHILE_1
0x40017e8	    0x4181e7ffffff	                     and r15d, 0x7ffffff	       207	show-branch.c	FUNCTION_9	WHILE_1
0x40017ef	          0x4421fb	                           and ebx, r15d	       207	show-branch.c	FUNCTION_9	WHILE_1
0x40017f2	    0xf702f0ffff7f	           test dword [rdx], 0x7ffffff0 	       189	show-branch.c	FUNCTION_8	IF_1
0x40017f8	     0xf856afcffff	                           jne 0x4001468	       189	show-branch.c	FUNCTION_8	IF_1
0x40017fe	      0x488b742408	                mov rsi, qword [rsp + 8]	       190	show-branch.c	FUNCTION_8	IF_1	CALL_1
0x4001803	          0x4889d7	                            mov rdi, rdx	       190	show-branch.c	FUNCTION_8	IF_1	CALL_1
0x4001806	      0x4889542420	             mov qword [rsp + 0x20], rdx	       190	show-branch.c	FUNCTION_8	IF_1	CALL_1
0x400180b	      0xe800000000	                          call 0x4001810	       190	show-branch.c	FUNCTION_8	IF_1	CALL_1
0x4001810	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       190	show-branch.c	FUNCTION_8	IF_1	CALL_1
0x4001815	      0xe94efcffff	                           jmp 0x4001468	       190	show-branch.c	FUNCTION_8	IF_1	CALL_1
0x400181a	    0x660f1f440000	                    nop word [rax + rax]	       190	show-branch.c	FUNCTION_8	IF_1	CALL_1
0x4001820	          0x83f801	                              cmp eax, 1	       852	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_30	CALL_86
0x4001823	          0x4889e9	                            mov rcx, rbp	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001826	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	FUNCTION_92	CALL_2
0x400182b	            0x19d2	                            sbb edx, edx	       852	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_30	CALL_86
0x400182d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001832	            0x31c0	                            xor eax, eax	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001834	          0x83e2f6	                     and edx, 0xfffffff6	       852	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_30	CALL_86
0x4001837	          0x83c22a	                           add edx, 0x2a	       852	show-branch.c	FUNCTION_28	IF_29	FOR_5	IF_30	CALL_86
0x400183a	      0xe800000000	                          call 0x400183f	       104	stdio2.h	FUNCTION_92	CALL_2
0x400183f	      0xe914ffffff	                           jmp 0x4001758	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001844	         0xf1f4000	                         nop dword [rax]	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001848	      0x836c241001	               sub dword [rsp + 0x10], 1	       225	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2	IF_4
0x400184d	      0xe95cffffff	                           jmp 0x40017ae	       225	show-branch.c	FUNCTION_9	WHILE_1	WHILE_2	IF_4
0x4001852	        0x8b4c2434	            mov ecx, dword [rsp + 0x34] 	       873	show-branch.c	FUNCTION_28	IF_29	IF_33
0x4001856	            0x31db	                            xor ebx, ebx	       873	show-branch.c	FUNCTION_28	IF_29	IF_33
0x4001858	        0x8b6c242c	            mov ebp, dword [rsp + 0x2c] 	       873	show-branch.c	FUNCTION_28	IF_29	IF_33
0x400185c	            0x85c9	                           test ecx, ecx	       873	show-branch.c	FUNCTION_28	IF_29	IF_33
0x400185e	     0xf887e040000	                            js 0x4001ce2	       873	show-branch.c	FUNCTION_28	IF_29	IF_33
0x4001864	         0xf1f4000	                         nop dword [rax]	       873	show-branch.c	FUNCTION_28	IF_29	IF_33
0x4001868	    0x488b35000000	            mov rsi, qword [0x0400186f] 	        81	stdio.h	FUNCTION_113	CALL_1
0x400186f	      0xbf2d000000	                           mov edi, 0x2d	        81	stdio.h	FUNCTION_113	CALL_1
0x4001874	          0x83c301	                              add ebx, 1	       874	show-branch.c	FUNCTION_28	IF_29	IF_33	FOR_7
0x4001877	      0xe800000000	                          call 0x400187c	        81	stdio.h	FUNCTION_113	CALL_1
0x400187c	            0x39dd	                            cmp ebp, ebx	       874	show-branch.c	FUNCTION_28	IF_29	IF_33	FOR_7
0x400187e	            0x75e8	                           jne 0x4001868	       874	show-branch.c	FUNCTION_28	IF_29	IF_33	FOR_7
0x4001880	    0x488b35000000	            mov rsi, qword [0x04001887] 	        81	stdio.h	FUNCTION_113	CALL_1
0x4001887	      0xbf0a000000	                            mov edi, 0xa	        81	stdio.h	FUNCTION_113	CALL_1
0x400188c	      0xe800000000	                          call 0x4001891	        81	stdio.h	FUNCTION_113	CALL_1
0x4001891	      0x448b5c2434	           mov r11d, dword [rsp + 0x34] 	       879	show-branch.c	FUNCTION_28	IF_34
0x4001896	          0x4585db	                         test r11d, r11d	       879	show-branch.c	FUNCTION_28	IF_34
0x4001899	     0xf8843040000	                            js 0x4001ce2	       879	show-branch.c	FUNCTION_28	IF_34
0x400189f	        0x8b742440	            mov esi, dword [rsp + 0x40] 	       883	show-branch.c	FUNCTION_28	CALL_96
0x40018a3	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       883	show-branch.c	FUNCTION_28	CALL_96
0x40018a8	      0xe800000000	                          call 0x40018ad	       883	show-branch.c	FUNCTION_28	CALL_96
0x40018ad	      0x448b542450	           mov r10d, dword [rsp + 0x50] 	       886	show-branch.c	FUNCTION_28	IF_35
0x40018b2	          0x4585d2	                         test r10d, r10d	       886	show-branch.c	FUNCTION_28	IF_35
0x40018b5	            0x750e	                           jne 0x40018c5	       886	show-branch.c	FUNCTION_28	IF_35
0x40018b7	      0x448b4c244c	            mov r9d, dword [rsp + 0x4c] 	       886	show-branch.c	FUNCTION_28	IF_35
0x40018bc	          0x4585c9	                           test r9d, r9d	       886	show-branch.c	FUNCTION_28	IF_35
0x40018bf	     0xf846f040000	                            je 0x4001d34	       886	show-branch.c	FUNCTION_28	IF_35
0x40018c5	          0x8d4502	                      lea eax, [rbp + 2]	       890	show-branch.c	FUNCTION_28
0x40018c8	    0xc74424100000	               mov dword [rsp + 0x10], 0	       618	show-branch.c	FUNCTION_28
0x40018d0	            0x89c3	                            mov ebx, eax	       890	show-branch.c	FUNCTION_28
0x40018d2	        0x8944242c	             mov dword [rsp + 0x2c], eax	       890	show-branch.c	FUNCTION_28
0x40018d6	      0xb801000000	                              mov eax, 1	       890	show-branch.c	FUNCTION_28
0x40018db	            0x89d9	                            mov ecx, ebx	       890	show-branch.c	FUNCTION_28
0x40018dd	            0xd3e0	                             shl eax, cl	       890	show-branch.c	FUNCTION_28
0x40018df	          0x83e801	                              sub eax, 1	       890	show-branch.c	FUNCTION_28
0x40018e2	          0x83e0fc	                     and eax, 0xfffffffc	       890	show-branch.c	FUNCTION_28
0x40018e5	        0x89442418	             mov dword [rsp + 0x18], eax	       890	show-branch.c	FUNCTION_28
0x40018e9	     0xf1f80000000	                         nop dword [rax]	       890	show-branch.c	FUNCTION_28
0x40018f0	    0x48837c247000	               cmp qword [rsp + 0x70], 0	       892	show-branch.c	FUNCTION_28	WHILE_2
0x40018f6	     0xf84cc010000	                            je 0x4001ac8	       892	show-branch.c	FUNCTION_28	WHILE_2
0x40018fc	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       893	show-branch.c	FUNCTION_28	WHILE_2	CALL_98
0x4001901	      0xe800000000	                          call 0x4001906	       893	show-branch.c	FUNCTION_28	WHILE_2	CALL_98
0x4001906	          0x448b20	                   mov r12d, dword [rax]	       894	show-branch.c	FUNCTION_28	WHILE_2
0x4001909	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	       895	show-branch.c	FUNCTION_28	WHILE_2
0x400190d	          0x4989c6	                            mov r14, rax	       893	show-branch.c	FUNCTION_28	WHILE_2	CALL_98
0x4001910	            0x31d2	                            xor edx, edx	       897	show-branch.c	FUNCTION_28	WHILE_2
0x4001912	        0x41c1ec04	                             shr r12d, 4	       894	show-branch.c	FUNCTION_28	WHILE_2
0x4001916	            0x89c8	                            mov eax, ecx	       895	show-branch.c	FUNCTION_28	WHILE_2
0x4001918	    0x4181e4ffffff	                     and r12d, 0x7ffffff	       894	show-branch.c	FUNCTION_28	WHILE_2
0x400191f	          0x4421e0	                           and eax, r12d	       895	show-branch.c	FUNCTION_28	WHILE_2
0x4001922	            0x39c1	                            cmp ecx, eax	       897	show-branch.c	FUNCTION_28	WHILE_2
0x4001924	           0xf94c2	                                 sete dl	       897	show-branch.c	FUNCTION_28	WHILE_2
0x4001927	         0x9542410	              or dword [rsp + 0x10], edx	       897	show-branch.c	FUNCTION_28	WHILE_2
0x400192b	          0x83fd01	                              cmp ebp, 1	       899	show-branch.c	FUNCTION_28	WHILE_2	IF_36
0x400192e	     0xf8e5c010000	                           jle 0x4001a90	       899	show-branch.c	FUNCTION_28	WHILE_2	IF_36
0x4001934	        0x498b5630	            mov rdx, qword [r14 + 0x30] 	       900	show-branch.c	FUNCTION_28	WHILE_2	IF_36
0x4001938	          0x4885d2	                           test rdx, rdx	       900	show-branch.c	FUNCTION_28	WHILE_2	IF_36
0x400193b	     0xf84b7010000	                            je 0x4001af8	       900	show-branch.c	FUNCTION_28	WHILE_2	IF_36
0x4001941	      0x48837a0800	                  cmp qword [rdx + 8], 0	       900	show-branch.c	FUNCTION_28	WHILE_2	IF_36
0x4001946	     0xf84ac010000	                            je 0x4001af8	       900	show-branch.c	FUNCTION_28	WHILE_2	IF_36
0x400194c	      0x448b442458	            mov r8d, dword [rsp + 0x58] 	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001951	          0x4585c0	                           test r8d, r8d	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001954	     0xf84c6010000	                            je 0x4001b20	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x400195a	            0x39c1	                            cmp ecx, eax	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x400195c	     0xf84be010000	                            je 0x4001b20	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001962	      0xb801000000	                              mov eax, 1	       900	show-branch.c	FUNCTION_28	WHILE_2	IF_36
0x4001967	        0x41f6c404	                            test r12b, 4	       903	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x400196b	            0x7583	                           jne 0x40018f0	       903	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x400196d	          0x83e001	                              and eax, 1	       903	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001970	            0x89c1	                            mov ecx, eax	       903	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001972	        0x8b7c245c	            mov edi, dword [rsp + 0x5c] 	       906	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_38
0x4001976	            0x85ff	                           test edi, edi	       906	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_38
0x4001978	           0xf95c0	                                setne al	       906	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_38
0x400197b	            0x20c8	                              and al, cl	       906	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_38
0x400197d	            0x89c2	                            mov edx, eax	       906	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_38
0x400197f	            0x744f	                            je 0x40019d0	       906	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_38
0x4001981	    0x488d8c244001	                  lea rcx, [rsp + 0x140]	       906	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_38
0x4001989	            0x31c0	                            xor eax, eax	       906	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_38
0x400198b	       0xf1f440000	                   nop dword [rax + rax]	       906	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_38
0x4001990	        0x4c3b34c1	            cmp r14, qword [rcx + rax*8]	       569	show-branch.c	FUNCTION_26	FOR_1	IF_1
0x4001994	            0x7438	                            je 0x40019ce	       569	show-branch.c	FUNCTION_26	FOR_1	IF_1
0x4001996	        0x4883c001	                              add rax, 1	       569	show-branch.c	FUNCTION_26	FOR_1	IF_1
0x400199a	            0x39c5	                            cmp ebp, eax	       568	show-branch.c	FUNCTION_26	FOR_1
0x400199c	            0x7ff2	                            jg 0x4001990	       568	show-branch.c	FUNCTION_26	FOR_1
0x400199e	        0x8b7c242c	            mov edi, dword [rsp + 0x2c] 	       568	show-branch.c	FUNCTION_26	FOR_1
0x40019a2	      0xb902000000	                              mov ecx, 2	       568	show-branch.c	FUNCTION_26	FOR_1
0x40019a7	            0x31f6	                            xor esi, esi	       568	show-branch.c	FUNCTION_26	FOR_1
0x40019a9	     0xf1f80000000	                         nop dword [rax]	       568	show-branch.c	FUNCTION_26	FOR_1
0x40019b0	          0x4489e0	                           mov eax, r12d	       573	show-branch.c	FUNCTION_26	FOR_2	IF_2
0x40019b3	            0xd3e8	                             shr eax, cl	       573	show-branch.c	FUNCTION_26	FOR_2	IF_2
0x40019b5	          0x83e001	                              and eax, 1	       573	show-branch.c	FUNCTION_26	FOR_2	IF_2
0x40019b8	          0x83f801	                              cmp eax, 1	       574	show-branch.c	FUNCTION_26	FOR_2	IF_2
0x40019bb	          0x83deff	             sbb esi, 0xffffffffffffffff	       574	show-branch.c	FUNCTION_26	FOR_2	IF_2
0x40019be	          0x83c101	                              add ecx, 1	       574	show-branch.c	FUNCTION_26	FOR_2	IF_2
0x40019c1	            0x39cf	                            cmp edi, ecx	       572	show-branch.c	FUNCTION_26	FOR_2
0x40019c3	            0x75eb	                           jne 0x40019b0	       572	show-branch.c	FUNCTION_26	FOR_2
0x40019c5	          0x83fe01	                              cmp esi, 1	       576	show-branch.c	FUNCTION_26	IF_3
0x40019c8	     0xf8422ffffff	                            je 0x40018f0	       576	show-branch.c	FUNCTION_26	IF_3
0x40019ce	            0x89d1	                            mov ecx, edx	       576	show-branch.c	FUNCTION_26	IF_3
0x40019d0	            0x31db	                            xor ebx, ebx	       569	show-branch.c	FUNCTION_26	FOR_1	IF_1
0x40019d2	      0x4c89742420	             mov qword [rsp + 0x20], r14	       569	show-branch.c	FUNCTION_26	FOR_1	IF_1
0x40019d7	          0x4189cd	                           mov r13d, ecx	       569	show-branch.c	FUNCTION_26	FOR_1	IF_1
0x40019da	    0x660f1f440000	                    nop word [rax + rax]	       569	show-branch.c	FUNCTION_26	FOR_1	IF_1
0x40019e0	          0x8d4302	                      lea eax, [rbx + 2]	       911	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8	IF_39
0x40019e3	    0x41bf20000000	                          mov r15d, 0x20	       912	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8	IF_39
0x40019e9	        0x410fa3c4	                            bt r12d, eax	       911	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8	IF_39
0x40019ed	            0x731a	                           jae 0x4001a09	       911	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8	IF_39
0x40019ef	          0x4584ed	                         test r13b, r13b	       913	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8	ELSE_5	IF_40
0x40019f2	    0x41bf2d000000	                          mov r15d, 0x2d	       914	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8	ELSE_5	IF_40
0x40019f8	            0x750f	                           jne 0x4001a09	       913	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8	ELSE_5	IF_40
0x40019fa	          0x4531ff	                          xor r15d, r15d	       916	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8	ELSE_6	IF_41
0x40019fd	        0x395c2404	                cmp dword [rsp + 4], ebx	       916	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8	ELSE_6	IF_41
0x4001a01	        0x410f95c7	                              setne r15b	       916	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8	ELSE_6	IF_41
0x4001a05	        0x4183c72a	                          add r15d, 0x2a	       916	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8	ELSE_6	IF_41
0x4001a09	    0x8b3500000000	            mov esi, dword [0x04001a0f] 	        40	show-branch.c	FUNCTION_2	IF_1	CALL_1
0x4001a0f	      0xbf01000000	                              mov edi, 1	        40	show-branch.c	FUNCTION_2	IF_1	CALL_1
0x4001a14	    0x41be00000000	                             mov r14d, 0	        41	show-branch.c	FUNCTION_2	IF_1
0x4001a1a	      0xe800000000	                          call 0x4001a1f	        40	show-branch.c	FUNCTION_2	IF_1	CALL_1
0x4001a1f	    0x8b3500000000	            mov esi, dword [0x04001a25] 	        33	show-branch.c	FUNCTION_1	IF_1	CALL_1
0x4001a25	            0x85c0	                           test eax, eax	        41	show-branch.c	FUNCTION_2	IF_1
0x4001a27	    0x41b800000000	                              mov r8d, 0	        41	show-branch.c	FUNCTION_2	IF_1
0x4001a2d	      0xbf01000000	                              mov edi, 1	        33	show-branch.c	FUNCTION_1	IF_1	CALL_1
0x4001a32	        0x4d0f45f0	                          cmovne r14, r8	        41	show-branch.c	FUNCTION_2	IF_1
0x4001a36	      0xe800000000	                          call 0x4001a3b	        33	show-branch.c	FUNCTION_1	IF_1	CALL_1
0x4001a3b	            0x85c0	                           test eax, eax	        33	show-branch.c	FUNCTION_1	IF_1	CALL_1
0x4001a3d	      0xba00000000	                              mov edx, 0	        35	show-branch.c	FUNCTION_1
0x4001a42	            0x7414	                            je 0x4001a58	        33	show-branch.c	FUNCTION_1	IF_1	CALL_1
0x4001a44	            0x89d8	                            mov eax, ebx	        34	show-branch.c	FUNCTION_1	IF_1
0x4001a46	              0x99	                                     cdq	        34	show-branch.c	FUNCTION_1	IF_1
0x4001a47	    0xf73d00000000	                 idiv dword [0x04001a4d]	        34	show-branch.c	FUNCTION_1	IF_1
0x4001a4d	          0x4863d2	                         movsxd rdx, edx	        34	show-branch.c	FUNCTION_1	IF_1
0x4001a50	    0x488b14d50000	                  mov rdx, qword [rdx*8]	        34	show-branch.c	FUNCTION_1	IF_1
0x4001a58	            0x31c0	                            xor eax, eax	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001a5a	          0x4d89f0	                             mov r8, r14	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001a5d	          0x4489f9	                           mov ecx, r15d	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001a60	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001a65	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001a6a	          0x83c301	                              add ebx, 1	       909	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8
0x4001a6d	      0xe800000000	                          call 0x4001a72	       104	stdio2.h	FUNCTION_92	CALL_2
0x4001a72	            0x39dd	                            cmp ebp, ebx	       909	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8
0x4001a74	     0xf8566ffffff	                           jne 0x40019e0	       909	show-branch.c	FUNCTION_28	WHILE_2	IF_36	FOR_8
0x4001a7a	    0x488b35000000	            mov rsi, qword [0x04001a81] 	        81	stdio.h	FUNCTION_113	CALL_1
0x4001a81	      0xbf20000000	                           mov edi, 0x20	        81	stdio.h	FUNCTION_113	CALL_1
0x4001a86	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	        81	stdio.h	FUNCTION_113	CALL_1
0x4001a8b	      0xe800000000	                          call 0x4001a90	        81	stdio.h	FUNCTION_113	CALL_1
0x4001a90	        0x8b74244c	            mov esi, dword [rsp + 0x4c] 	       925	show-branch.c	FUNCTION_28	WHILE_2	CALL_104
0x4001a94	          0x4c89f7	                            mov rdi, r14	       925	show-branch.c	FUNCTION_28	WHILE_2	CALL_104
0x4001a97	      0xe864e8ffff	                call sym.show_one_commit	       925	show-branch.c	FUNCTION_28	WHILE_2	CALL_104
0x4001a9c	        0x8b742410	            mov esi, dword [rsp + 0x10] 	       927	show-branch.c	FUNCTION_28	WHILE_2	IF_42
0x4001aa0	            0x85f6	                           test esi, esi	       927	show-branch.c	FUNCTION_28	WHILE_2	IF_42
0x4001aa2	     0xf8448feffff	                            je 0x40018f0	       927	show-branch.c	FUNCTION_28	WHILE_2	IF_42
0x4001aa8	      0x836c243401	               sub dword [rsp + 0x34], 1	       927	show-branch.c	FUNCTION_28	WHILE_2	IF_42
0x4001aad	            0x7819	                            js 0x4001ac8	       927	show-branch.c	FUNCTION_28	WHILE_2	IF_42
0x4001aaf	    0x48837c247000	               cmp qword [rsp + 0x70], 0	       892	show-branch.c	FUNCTION_28	WHILE_2
0x4001ab5	    0xc74424100100	               mov dword [rsp + 0x10], 1	       892	show-branch.c	FUNCTION_28	WHILE_2
0x4001abd	     0xf8539feffff	                           jne 0x40018fc	       892	show-branch.c	FUNCTION_28	WHILE_2
0x4001ac3	       0xf1f440000	                   nop dword [rax + rax]	       892	show-branch.c	FUNCTION_28	WHILE_2
0x4001ac8	    0x488b9c24e806	           mov rbx, qword [rsp + 0x6e8] 	       931	show-branch.c	FUNCTION_28
0x4001ad0	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       931	show-branch.c	FUNCTION_28
0x4001ad9	        0x8b442428	            mov eax, dword [rsp + 0x28] 	       931	show-branch.c	FUNCTION_28
0x4001add	     0xf85b5050000	                           jne 0x4002098	       931	show-branch.c	FUNCTION_28
0x4001ae3	    0x4881c4f80600	                          add rsp, 0x6f8	       931	show-branch.c	FUNCTION_28
0x4001aea	              0x5b	                                 pop rbx	       931	show-branch.c	FUNCTION_28
0x4001aeb	              0x5d	                                 pop rbp	       931	show-branch.c	FUNCTION_28
0x4001aec	            0x415c	                                 pop r12	       931	show-branch.c	FUNCTION_28
0x4001aee	            0x415d	                                 pop r13	       931	show-branch.c	FUNCTION_28
0x4001af0	            0x415e	                                 pop r14	       931	show-branch.c	FUNCTION_28
0x4001af2	            0x415f	                                 pop r15	       931	show-branch.c	FUNCTION_28
0x4001af4	              0xc3	                                     ret	       931	show-branch.c	FUNCTION_28
0x4001af5	           0xf1f00	                         nop dword [rax]	       931	show-branch.c	FUNCTION_28
0x4001af8	        0x8b542458	            mov edx, dword [rsp + 0x58] 	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001afc	            0x85d2	                           test edx, edx	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001afe	        0x410f95c5	                              setne r13b	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001b02	        0x39442418	            cmp dword [rsp + 0x18], eax 	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001b06	           0xf95c2	                                setne dl	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001b09	            0x31c0	                            xor eax, eax	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001b0b	          0x4120d5	                            and r13b, dl	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001b0e	          0x4489e9	                           mov ecx, r13d	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001b11	     0xf8550feffff	                           jne 0x4001967	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001b17	      0xe9b4feffff	                           jmp 0x40019d0	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001b1c	         0xf1f4000	                         nop dword [rax]	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001b20	      0xb901000000	                              mov ecx, 1	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001b25	      0xe948feffff	                           jmp 0x4001972	       902	show-branch.c	FUNCTION_28	WHILE_2	IF_36	IF_37
0x4001b2a	    0x488d94244001	                  lea rdx, [rsp + 0x140]	       707	show-branch.c	FUNCTION_28	IF_7	IF_8	CALL_37
0x4001b32	            0x31c9	                            xor ecx, ecx	       707	show-branch.c	FUNCTION_28	IF_7	IF_8	CALL_37
0x4001b34	      0xbe01000000	                              mov esi, 1	       707	show-branch.c	FUNCTION_28	IF_7	IF_8	CALL_37
0x4001b39	      0xbf00000000	                              mov edi, 0	       707	show-branch.c	FUNCTION_28	IF_7	IF_8	CALL_37
0x4001b3e	      0xe800000000	                          call 0x4001b43	       707	show-branch.c	FUNCTION_28	IF_7	IF_8	CALL_37
0x4001b43	          0x4885c0	                           test rax, rax	       713	show-branch.c	FUNCTION_28	IF_7	IF_8	IF_9
0x4001b46	    0x488905000000	            mov qword [0x04001b4d], rax 	       707	show-branch.c	FUNCTION_28	IF_7	IF_8	CALL_37
0x4001b4d	    0x48c705000000	               mov qword [0x04001b58], 0	       710	show-branch.c	FUNCTION_28	IF_7	IF_8
0x4001b58	     0xf841f050000	                            je 0x400207d	       713	show-branch.c	FUNCTION_28	IF_7	IF_8	IF_9
0x4001b5e	      0xbb00000000	                              mov ebx, 0	       711	show-branch.c	FUNCTION_28	IF_7	IF_8
0x4001b63	      0xe96ef4ffff	                           jmp 0x4000fd6	       711	show-branch.c	FUNCTION_28	IF_7	IF_8
0x4001b68	         0x354243c	             add edx, dword [rsp + 0x3c]	       695	show-branch.c	FUNCTION_28	IF_6
0x4001b6c	    0x8b3500000000	            mov esi, dword [0x04001b72] 	       695	show-branch.c	FUNCTION_28	IF_6
0x4001b72	     0xf8435f4ffff	                            je 0x4000fad	       695	show-branch.c	FUNCTION_28	IF_6
0x4001b78	      0xe938f4ffff	                           jmp 0x4000fb5	       695	show-branch.c	FUNCTION_28	IF_6
0x4001b7d	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	       733	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_49
0x4001b82	            0x31f6	                            xor esi, esi	       733	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_49
0x4001b84	      0xe800000000	                          call 0x4001b89	       733	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_49
0x4001b89	        0x4883ec08	                              sub rsp, 8	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x4001b8d	          0x4531c9	                            xor r9d, r9d	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x4001b90	          0x4d89f0	                             mov r8, r14	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x4001b93	      0x488d542468	                   lea rdx, [rsp + 0x68]	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x4001b98	      0xb9ffffffff	                     mov ecx, 0xffffffff	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x4001b9d	            0x31f6	                            xor esi, esi	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x4001b9f	              0x52	                                push rdx	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x4001ba0	            0x6a00	                                  push 0	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x4001ba2	          0x4889c2	                            mov rdx, rax	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x4001ba5	            0x6a00	                                  push 0	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x4001ba7	    0x488bbc24a000	            mov rdi, qword [rsp + 0xa0] 	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x4001baf	      0xe800000000	                          call 0x4001bb4	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x4001bb4	        0x4883c420	                           add rsp, 0x20	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x4001bb8	      0xe98af4ffff	                           jmp 0x4001047	       734	show-branch.c	FUNCTION_28	IF_7	IF_13	IF_14	CALL_50
0x4001bbd	          0x8d4d02	                      lea ecx, [rbp + 2]	       479	show-branch.c	FUNCTION_22
0x4001bc0	      0xbb01000000	                              mov ebx, 1	       479	show-branch.c	FUNCTION_22
0x4001bc5	      0x488b442470	            mov rax, qword [rsp + 0x70] 	       838	show-branch.c	FUNCTION_28	CALL_83
0x4001bca	    0x41bc01000000	                             mov r12d, 1	       481	show-branch.c	FUNCTION_22
0x4001bd0	            0xd3e3	                             shl ebx, cl	       479	show-branch.c	FUNCTION_22
0x4001bd2	          0x83eb01	                              sub ebx, 1	       479	show-branch.c	FUNCTION_22
0x4001bd5	    0x488984249000	             mov qword [rsp + 0x90], rax	       479	show-branch.c	FUNCTION_22
0x4001bdd	            0x89dd	                            mov ebp, ebx	       480	show-branch.c	FUNCTION_22
0x4001bdf	          0x83e5fc	                     and ebp, 0xfffffffc	       480	show-branch.c	FUNCTION_22
0x4001be2	            0xeb36	                           jmp 0x4001c1a	       480	show-branch.c	FUNCTION_22
0x4001be4	         0xf1f4000	                         nop dword [rax]	       480	show-branch.c	FUNCTION_22
0x4001be8	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       484	show-branch.c	FUNCTION_22	WHILE_1	CALL_1
0x4001bf0	      0xe800000000	                          call 0x4001bf5	       484	show-branch.c	FUNCTION_22	WHILE_1	CALL_1
0x4001bf5	          0x4989c5	                            mov r13, rax	       484	show-branch.c	FUNCTION_22	WHILE_1	CALL_1
0x4001bf8	            0x8b00	                    mov eax, dword [rax]	       485	show-branch.c	FUNCTION_22	WHILE_1
0x4001bfa	          0xc1e804	                              shr eax, 4	       485	show-branch.c	FUNCTION_22	WHILE_1
0x4001bfd	      0x25ffffff07	                      and eax, 0x7ffffff	       485	show-branch.c	FUNCTION_22	WHILE_1
0x4001c02	            0x21d8	                            and eax, ebx	       485	show-branch.c	FUNCTION_22	WHILE_1
0x4001c04	            0xa801	                              test al, 1	       486	show-branch.c	FUNCTION_22	WHILE_1	IF_1
0x4001c06	            0x750a	                           jne 0x4001c12	       486	show-branch.c	FUNCTION_22	WHILE_1	IF_1
0x4001c08	            0x21e8	                            and eax, ebp	       486	show-branch.c	FUNCTION_22	WHILE_1	IF_1
0x4001c0a	            0x39c5	                            cmp ebp, eax	       486	show-branch.c	FUNCTION_22	WHILE_1	IF_1
0x4001c0c	     0xf84aa000000	                            je 0x4001cbc	       486	show-branch.c	FUNCTION_22	WHILE_1	IF_1
0x4001c12	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	       486	show-branch.c	FUNCTION_22	WHILE_1	IF_1
0x4001c1a	          0x4885c0	                           test rax, rax	       483	show-branch.c	FUNCTION_22	WHILE_1
0x4001c1d	            0x75c9	                           jne 0x4001be8	       483	show-branch.c	FUNCTION_22	WHILE_1
0x4001c1f	      0x4489642428	            mov dword [rsp + 0x28], r12d	       483	show-branch.c	FUNCTION_22	WHILE_1
0x4001c24	      0xe99ffeffff	                           jmp 0x4001ac8	       483	show-branch.c	FUNCTION_22	WHILE_1
0x4001c29	          0x4585ff	                         test r15d, r15d	       844	show-branch.c	FUNCTION_28	IF_29
0x4001c2c	     0xf88a8000000	                            js 0x4001cda	       844	show-branch.c	FUNCTION_28	IF_29
0x4001c32	    0xc7442404ffff	        mov dword [rsp + 4], 0xffffffff 	       620	show-branch.c	FUNCTION_28
0x4001c3a	      0xe960fcffff	                           jmp 0x400189f	       620	show-branch.c	FUNCTION_28
0x4001c3f	            0x85ed	                           test ebp, ebp	       503	show-branch.c	FUNCTION_23	FOR_1
0x4001c41	     0xf8481feffff	                            je 0x4001ac8	       503	show-branch.c	FUNCTION_23	FOR_1
0x4001c47	            0x31db	                            xor ebx, ebx	       503	show-branch.c	FUNCTION_23	FOR_1
0x4001c49	    0x4c8db4244001	                  lea r14, [rsp + 0x140]	       503	show-branch.c	FUNCTION_23	FOR_1
0x4001c51	    0x4c8da424d000	                   lea r12, [rsp + 0xd0]	       503	show-branch.c	FUNCTION_23	FOR_1
0x4001c59	            0xeb2c	                           jmp 0x4001c87	       503	show-branch.c	FUNCTION_23	FOR_1
0x4001c5b	       0xf1f440000	                   nop dword [rax + rax]	       503	show-branch.c	FUNCTION_23	FOR_1
0x4001c60	        0x418b5500	                    mov edx, dword [r13]	       509	show-branch.c	FUNCTION_23	FOR_1
0x4001c64	          0x83c801	                               or eax, 1	       509	show-branch.c	FUNCTION_23	FOR_1
0x4001c67	        0x4883c301	                              add rbx, 1	       509	show-branch.c	FUNCTION_23	FOR_1
0x4001c6b	      0x25ffffff07	                      and eax, 0x7ffffff	       509	show-branch.c	FUNCTION_23	FOR_1
0x4001c70	          0xc1e004	                              shl eax, 4	       509	show-branch.c	FUNCTION_23	FOR_1
0x4001c73	    0x81e20f000080	                     and edx, 0x8000000f	       509	show-branch.c	FUNCTION_23	FOR_1
0x4001c79	             0x9d0	                             or eax, edx	       509	show-branch.c	FUNCTION_23	FOR_1
0x4001c7b	            0x39dd	                            cmp ebp, ebx	       503	show-branch.c	FUNCTION_23	FOR_1
0x4001c7d	        0x41894500	                    mov dword [r13], eax	       509	show-branch.c	FUNCTION_23	FOR_1
0x4001c81	     0xf8e41feffff	                           jle 0x4001ac8	       503	show-branch.c	FUNCTION_23	FOR_1
0x4001c87	        0x4d8b2cde	            mov r13, qword [r14 + rbx*8]	       504	show-branch.c	FUNCTION_23	FOR_1
0x4001c8b	        0x418b4500	                    mov eax, dword [r13]	       507	show-branch.c	FUNCTION_23	FOR_1	IF_1
0x4001c8f	          0xc1e804	                              shr eax, 4	       507	show-branch.c	FUNCTION_23	FOR_1	IF_1
0x4001c92	      0x25ffffff07	                      and eax, 0x7ffffff	       507	show-branch.c	FUNCTION_23	FOR_1	IF_1
0x4001c97	        0x4139049c	           cmp dword [r12 + rbx*4], eax 	       507	show-branch.c	FUNCTION_23	FOR_1	IF_1
0x4001c9b	            0x75c3	                           jne 0x4001c60	       507	show-branch.c	FUNCTION_23	FOR_1	IF_1
0x4001c9d	        0x498d7d04	                      lea rdi, [r13 + 4]	       508	show-branch.c	FUNCTION_23	FOR_1	CALL_2
0x4001ca1	      0xe800000000	                          call 0x4001ca6	       508	show-branch.c	FUNCTION_23	FOR_1	CALL_2
0x4001ca6	          0x4889c7	                            mov rdi, rax	       508	show-branch.c	FUNCTION_23	FOR_1	CALL_2
0x4001ca9	      0xe800000000	                          call 0x4001cae	       508	show-branch.c	FUNCTION_23	FOR_1	CALL_2
0x4001cae	        0x418b4500	                    mov eax, dword [r13]	       508	show-branch.c	FUNCTION_23	FOR_1	CALL_2
0x4001cb2	          0xc1e804	                              shr eax, 4	       508	show-branch.c	FUNCTION_23	FOR_1	CALL_2
0x4001cb5	      0x25ffffff07	                      and eax, 0x7ffffff	       508	show-branch.c	FUNCTION_23	FOR_1	CALL_2
0x4001cba	            0xeba4	                           jmp 0x4001c60	       508	show-branch.c	FUNCTION_23	FOR_1	CALL_2
0x4001cbc	        0x498d7d04	                      lea rdi, [r13 + 4]	       488	show-branch.c	FUNCTION_22	WHILE_1	IF_1	CALL_3
0x4001cc0	          0x4531e4	                          xor r12d, r12d	       489	show-branch.c	FUNCTION_22	WHILE_1	IF_1
0x4001cc3	      0xe800000000	                          call 0x4001cc8	       488	show-branch.c	FUNCTION_22	WHILE_1	IF_1	CALL_3
0x4001cc8	          0x4889c7	                            mov rdi, rax	       488	show-branch.c	FUNCTION_22	WHILE_1	IF_1	CALL_3
0x4001ccb	      0xe800000000	                          call 0x4001cd0	       488	show-branch.c	FUNCTION_22	WHILE_1	IF_1	CALL_3
0x4001cd0	      0x41834d0010	                    or dword [r13], 0x10	       490	show-branch.c	FUNCTION_22	WHILE_1	IF_1
0x4001cd5	      0xe938ffffff	                           jmp 0x4001c12	       490	show-branch.c	FUNCTION_22	WHILE_1	IF_1
0x4001cda	            0x85ed	                           test ebp, ebp	       845	show-branch.c	FUNCTION_28	IF_29	FOR_5
0x4001cdc	     0xf8564f9ffff	                           jne 0x4001646	       845	show-branch.c	FUNCTION_28	IF_29	FOR_5
0x4001ce2	            0x31ff	                            xor edi, edi	       880	show-branch.c	FUNCTION_28	CALL_95
0x4001ce4	      0xe800000000	                          call 0x4001ce9	       880	show-branch.c	FUNCTION_28	CALL_95
0x4001ce9	     0xf1f80000000	                         nop dword [rax]	       880	show-branch.c	FUNCTION_28	CALL_95
0x4001cf0	            0x31f6	                            xor esi, esi	       455	show-branch.c	FUNCTION_20	IF_1	CALL_1
0x4001cf2	    0x48632d000000	         movsxd rbp, dword [0x04001cf9] 	       453	show-branch.c	FUNCTION_20	IF_1
0x4001cf9	      0xbf00000000	                              mov edi, 0	       455	show-branch.c	FUNCTION_20	IF_1	CALL_1
0x4001cfe	      0xe800000000	                          call 0x4001d03	       455	show-branch.c	FUNCTION_20	IF_1	CALL_1
0x4001d03	    0x8b3500000000	            mov esi, dword [0x04001d09] 	       357	show-branch.c	FUNCTION_14	CALL_1
0x4001d09	            0x29ee	                            sub esi, ebp	       357	show-branch.c	FUNCTION_14	CALL_1
0x4001d0b	          0x4863f6	                         movsxd rsi, esi	       357	show-branch.c	FUNCTION_14	CALL_1
0x4001d0e	        0x4883fe01	                              cmp rsi, 1	      1048	git-compat-util.h	FUNCTION_80	IF_1
0x4001d12	     0xf86e3f5ffff	                           jbe 0x40012fb	      1048	git-compat-util.h	FUNCTION_80	IF_1
0x4001d18	    0x488d3ced0000	                        lea rdi, [rbp*8]	      1049	git-compat-util.h	FUNCTION_80	CALL_1
0x4001d20	      0xb900000000	                              mov ecx, 0	      1049	git-compat-util.h	FUNCTION_80	CALL_1
0x4001d25	      0xba08000000	                              mov edx, 8	      1049	git-compat-util.h	FUNCTION_80	CALL_1
0x4001d2a	      0xe800000000	                          call 0x4001d2f	      1049	git-compat-util.h	FUNCTION_80	CALL_1
0x4001d2f	      0xe9c7f5ffff	                           jmp 0x40012fb	      1049	git-compat-util.h	FUNCTION_80	CALL_1
0x4001d34	      0x488b442470	            mov rax, qword [rsp + 0x70] 	       887	show-branch.c	FUNCTION_28	CALL_97
0x4001d39	          0x4885c0	                           test rax, rax	       123	show-branch.c	ELSE_1	FUNCTION_7	FOR_1
0x4001d3c	          0x4889c3	                            mov rbx, rax	       887	show-branch.c	FUNCTION_28	CALL_97
0x4001d3f	      0x4889442418	             mov qword [rsp + 0x18], rax	       887	show-branch.c	FUNCTION_28	CALL_97
0x4001d44	            0x747c	                            je 0x4001dc2	       123	show-branch.c	ELSE_1	FUNCTION_7	FOR_1
0x4001d46	          0x8d45ff	                      lea eax, [rbp - 1]	       123	show-branch.c	ELSE_1	FUNCTION_7	FOR_1
0x4001d49	    0x4c8d2cc50800	                    lea r13, [rax*8 + 8]	       123	show-branch.c	ELSE_1	FUNCTION_7	FOR_1
0x4001d51	            0xeb0e	                           jmp 0x4001d61	       123	show-branch.c	ELSE_1	FUNCTION_7	FOR_1
0x4001d53	       0xf1f440000	                   nop dword [rax + rax]	       123	show-branch.c	ELSE_1	FUNCTION_7	FOR_1
0x4001d58	        0x488b5b08	                mov rbx, qword [rbx + 8]	       123	show-branch.c	ELSE_1	FUNCTION_7	FOR_1
0x4001d5c	          0x4885db	                           test rbx, rbx	       123	show-branch.c	ELSE_1	FUNCTION_7	FOR_1
0x4001d5f	            0x7461	                            je 0x4001dc2	       123	show-branch.c	ELSE_1	FUNCTION_7	FOR_1
0x4001d61	          0x4c8b23	                    mov r12, qword [rbx]	       124	show-branch.c	ELSE_1	FUNCTION_7	FOR_1
0x4001d64	    0x49837c241800	               cmp qword [r12 + 0x18], 0	       125	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	IF_1
0x4001d6a	            0x75ec	                           jne 0x4001d58	       125	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	IF_1
0x4001d6c	            0x85ed	                           test ebp, ebp	       127	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2
0x4001d6e	            0x74e8	                            je 0x4001d58	       127	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2
0x4001d70	    0x4c39a4244001	           cmp qword [rsp + 0x140], r12 	       128	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2	IF_2
0x4001d78	     0xf84e8020000	                            je 0x4002066	       128	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2	IF_2
0x4001d7e	      0xb808000000	                              mov eax, 8	       128	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2	IF_2
0x4001d83	            0xeb06	                           jmp 0x4001d8b	       128	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2	IF_2
0x4001d85	           0xf1f00	                         nop dword [rax]	       128	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2	IF_2
0x4001d88	          0x4889d0	                            mov rax, rdx	       128	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2	IF_2
0x4001d8b	          0x4939c5	                            cmp r13, rax	       127	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2
0x4001d8e	            0x74c8	                            je 0x4001d58	       127	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2
0x4001d90	        0x488d5008	                      lea rdx, [rax + 8]	       127	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2
0x4001d94	    0x4c3ba4143801	     cmp r12, qword [rsp + rdx + 0x138] 	       128	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2	IF_2
0x4001d9c	            0x75ea	                           jne 0x4001d88	       128	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2	IF_2
0x4001d9e	    0x480500000000	                              add rax, 0	       128	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2	IF_2
0x4001da4	          0x4c8b30	                    mov r14, qword [rax]	       129	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2	IF_2	CALL_1
0x4001da7	      0xbf10000000	                           mov edi, 0x10	        69	show-branch.c	FUNCTION_4	CALL_1
0x4001dac	      0xe800000000	                          call 0x4001db1	        69	show-branch.c	FUNCTION_4	CALL_1
0x4001db1	      0x4989442418	             mov qword [r12 + 0x18], rax	        69	show-branch.c	FUNCTION_4	CALL_1
0x4001db6	    0xc74008000000	                  mov dword [rax + 8], 0	        72	show-branch.c	FUNCTION_4
0x4001dbd	          0x4c8930	                    mov qword [rax], r14	        71	show-branch.c	FUNCTION_4
0x4001dc0	            0xeb96	                           jmp 0x4001d58	        71	show-branch.c	FUNCTION_4
0x4001dc2	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       138	show-branch.c	ELSE_1	FUNCTION_7	DO_1	FOR_3
0x4001dc7	          0x4885c0	                           test rax, rax	       138	show-branch.c	ELSE_1	FUNCTION_7	DO_1	FOR_3
0x4001dca	     0xf84f5faffff	                            je 0x40018c5	       138	show-branch.c	ELSE_1	FUNCTION_7	DO_1	FOR_3
0x4001dd0	          0x4889c3	                            mov rbx, rax	       138	show-branch.c	ELSE_1	FUNCTION_7	DO_1	FOR_3
0x4001dd3	          0x4531e4	                          xor r12d, r12d	       138	show-branch.c	ELSE_1	FUNCTION_7	DO_1	FOR_3
0x4001dd6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       138	show-branch.c	ELSE_1	FUNCTION_7	DO_1	FOR_3
0x4001de0	          0x488b3b	                    mov rdi, qword [rbx]	       139	show-branch.c	ELSE_1	FUNCTION_7	DO_1	FOR_3	CALL_2
0x4001de3	      0xe858eaffff	        call sym.name_first_parent_chain	       139	show-branch.c	ELSE_1	FUNCTION_7	DO_1	FOR_3	CALL_2
0x4001de8	        0x488b5b08	                mov rbx, qword [rbx + 8]	       138	show-branch.c	ELSE_1	FUNCTION_7	DO_1	FOR_3
0x4001dec	          0x4101c4	                           add r12d, eax	       139	show-branch.c	ELSE_1	FUNCTION_7	DO_1	FOR_3	CALL_2
0x4001def	          0x4885db	                           test rbx, rbx	       138	show-branch.c	ELSE_1	FUNCTION_7	DO_1	FOR_3
0x4001df2	            0x75ec	                           jne 0x4001de0	       138	show-branch.c	ELSE_1	FUNCTION_7	DO_1	FOR_3
0x4001df4	          0x4585e4	                         test r12d, r12d	       141	show-branch.c	ELSE_1	FUNCTION_7	DO_1
0x4001df7	            0x75c9	                           jne 0x4001dc2	       141	show-branch.c	ELSE_1	FUNCTION_7	DO_1
0x4001df9	        0x896c2420	             mov dword [rsp + 0x20], ebp	       279	strbuf.h	FUNCTION_124	CALL_2
0x4001dfd	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	       138	show-branch.c	ELSE_1	FUNCTION_7	DO_1	FOR_3
0x4001e02	          0x4531ff	                          xor r15d, r15d	       138	show-branch.c	ELSE_1	FUNCTION_7	DO_1	FOR_3
0x4001e05	           0xf1f00	                         nop dword [rax]	       138	show-branch.c	ELSE_1	FUNCTION_7	DO_1	FOR_3
0x4001e08	          0x498b06	                    mov rax, qword [r14]	       150	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001e0b	        0x4c8b6818	            mov r13, qword [rax + 0x18] 	       151	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	IF_3
0x4001e0f	          0x4d85ed	                           test r13, r13	       151	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	IF_3
0x4001e12	     0xf84e8000000	                            je 0x4001f00	       151	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	IF_3
0x4001e18	        0x488b5830	            mov rbx, qword [rax + 0x30] 	       154	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001e1c	          0x4885db	                           test rbx, rbx	       156	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001e1f	     0xf84db000000	                            je 0x4001f00	       156	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001e25	            0x31ed	                            xor ebp, ebp	       156	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001e27	            0xeb10	                           jmp 0x4001e39	       156	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001e29	     0xf1f80000000	                         nop dword [rax]	       156	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001e30	          0x4885db	                           test rbx, rbx	       156	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001e33	     0xf84c7000000	                            je 0x4001f00	       156	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001e39	          0x4c8b23	                    mov r12, qword [rbx]	       157	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001e3c	          0x83c501	                              add ebp, 1	       160	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001e3f	    0x48c784249000	               mov qword [rsp + 0x90], 0	       158	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001e4b	    0x48c784249800	               mov qword [rsp + 0x98], 0	       158	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001e57	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	       158	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001e63	        0x488b5b08	                mov rbx, qword [rbx + 8]	       159	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001e67	    0x49837c241800	               cmp qword [r12 + 0x18], 0	       161	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	IF_4
0x4001e6d	            0x75c1	                           jne 0x4001e30	       161	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	IF_4
0x4001e6f	        0x418b4d08	                mov ecx, dword [r13 + 8]	       163	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1
0x4001e73	            0x85c9	                           test ecx, ecx	       163	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1
0x4001e75	     0xf8425010000	                            je 0x4001fa0	       163	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1
0x4001e7b	          0x83f901	                              cmp ecx, 1	       163	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1
0x4001e7e	     0xf859c000000	                           jne 0x4001f20	       163	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1
0x4001e84	        0x498b5500	                    mov rdx, qword [r13]	       168	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1	CALL_4
0x4001e88	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       168	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1	CALL_4
0x4001e90	      0xbe00000000	                              mov esi, 0	       168	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1	CALL_4
0x4001e95	            0x31c0	                            xor eax, eax	       168	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1	CALL_4
0x4001e97	      0xe800000000	                          call 0x4001e9c	       168	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1	CALL_4
0x4001e9c	          0x83fd01	                              cmp ebp, 1	       175	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	IF_5
0x4001e9f	     0xf849c000000	                            je 0x4001f41	       175	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	IF_5
0x4001ea5	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       178	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1	CALL_7
0x4001ead	            0x89ea	                            mov edx, ebp	       178	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1	CALL_7
0x4001eaf	      0xbe00000000	                              mov esi, 0	       178	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1	CALL_7
0x4001eb4	            0x31c0	                            xor eax, eax	       178	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1	CALL_7
0x4001eb6	      0xe800000000	                          call 0x4001ebb	       178	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1	CALL_7
0x4001ebb	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       179	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1	CALL_9
0x4001ec3	            0x31f6	                            xor esi, esi	       179	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1	CALL_9
0x4001ec5	      0xe800000000	                          call 0x4001eca	       179	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1	CALL_9
0x4001eca	          0x4889c2	                            mov rdx, rax	       179	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1	CALL_9
0x4001ecd	      0x498b442418	            mov rax, qword [r12 + 0x18] 	        68	show-branch.c	FUNCTION_4	IF_1
0x4001ed2	          0x4885c0	                           test rax, rax	        68	show-branch.c	FUNCTION_4	IF_1
0x4001ed5	     0xf840d010000	                            je 0x4001fe8	        68	show-branch.c	FUNCTION_4	IF_1
0x4001edb	          0x488910	                    mov qword [rax], rdx	        71	show-branch.c	FUNCTION_4
0x4001ede	    0xc74008000000	                  mov dword [rax + 8], 0	        72	show-branch.c	FUNCTION_4
0x4001ee5	          0x4c89e7	                            mov rdi, r12	       181	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1	CALL_10
0x4001ee8	        0x4183c701	                             add r15d, 1	       180	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1
0x4001eec	      0xe84fe9ffff	        call sym.name_first_parent_chain	       181	show-branch.c	FUNCTION_7	DO_2	FOR_4	ELSE_1	CALL_10
0x4001ef1	          0x4885db	                           test rbx, rbx	       156	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001ef4	     0xf853fffffff	                           jne 0x4001e39	       156	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001efa	    0x660f1f440000	                    nop word [rax + rax]	       156	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001f00	        0x4d8b7608	                mov r14, qword [r14 + 8]	       146	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001f04	          0x4d85f6	                           test r14, r14	       146	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001f07	     0xf85fbfeffff	                           jne 0x4001e08	       146	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4
0x4001f0d	          0x4585ff	                         test r15d, r15d	       184	show-branch.c	FUNCTION_7	ELSE_1	WHILE_1
0x4001f10	     0xf85e7feffff	                           jne 0x4001dfd	       184	show-branch.c	FUNCTION_7	ELSE_1	WHILE_1
0x4001f16	        0x8b6c2420	            mov ebp, dword [rsp + 0x20] 	       184	show-branch.c	FUNCTION_7	ELSE_1	WHILE_1
0x4001f1a	      0xe9a6f9ffff	                           jmp 0x40018c5	       184	show-branch.c	FUNCTION_7	ELSE_1	WHILE_1
0x4001f1f	              0x90	                                     nop	       184	show-branch.c	FUNCTION_7	ELSE_1	WHILE_1
0x4001f20	        0x498b5500	                    mov rdx, qword [r13]	       171	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1	CALL_5
0x4001f24	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       171	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1	CALL_5
0x4001f2c	            0x31c0	                            xor eax, eax	       171	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1	CALL_5
0x4001f2e	      0xbe00000000	                              mov esi, 0	       171	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1	CALL_5
0x4001f33	      0xe800000000	                          call 0x4001f38	       171	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1	CALL_5
0x4001f38	          0x83fd01	                              cmp ebp, 1	       175	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	IF_5
0x4001f3b	     0xf8564ffffff	                           jne 0x4001ea5	       175	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	IF_5
0x4001f41	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	       175	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	IF_5
0x4001f49	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_121
0x4001f4c	            0x757d	                           jne 0x4001fcb	       141	strbuf.h	FUNCTION_121
0x4001f4e	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       228	strbuf.h	FUNCTION_123	CALL_2
0x4001f56	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_123	CALL_2
0x4001f5b	      0xe800000000	                          call 0x4001f60	       228	strbuf.h	FUNCTION_123	CALL_2
0x4001f60	    0x488b94249800	            mov rdx, qword [rsp + 0x98] 	       228	strbuf.h	FUNCTION_123	CALL_2
0x4001f68	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_123
0x4001f6c	    0x488984249800	             mov qword [rsp + 0x98], rax	       229	strbuf.h	FUNCTION_123
0x4001f74	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	       229	strbuf.h	FUNCTION_123
0x4001f7c	        0xc604105e	              mov byte [rax + rdx], 0x5e	       229	strbuf.h	FUNCTION_123
0x4001f80	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	       230	strbuf.h	FUNCTION_123
0x4001f88	    0x488b9424a000	            mov rdx, qword [rsp + 0xa0] 	       230	strbuf.h	FUNCTION_123
0x4001f90	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_123
0x4001f94	      0xe922ffffff	                           jmp 0x4001ebb	       230	strbuf.h	FUNCTION_123
0x4001f99	     0xf1f80000000	                         nop dword [rax]	       230	strbuf.h	FUNCTION_123
0x4001fa0	        0x498b7500	                    mov rsi, qword [r13]	       165	show-branch.c	ELSE_1	FUNCTION_7	DO_2	FOR_4	SWITCH_1	CALL_3
0x4001fa4	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_124	CALL_2
0x4001fa7	      0x4889742410	             mov qword [rsp + 0x10], rsi	       279	strbuf.h	FUNCTION_124	CALL_2
0x4001fac	      0xe800000000	                          call 0x4001fb1	       279	strbuf.h	FUNCTION_124	CALL_2
0x4001fb1	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       279	strbuf.h	FUNCTION_124	CALL_2
0x4001fb6	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       279	strbuf.h	FUNCTION_124	CALL_2
0x4001fbe	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_124	CALL_2
0x4001fc1	      0xe800000000	                          call 0x4001fc6	       279	strbuf.h	FUNCTION_124	CALL_2
0x4001fc6	      0xe9d1feffff	                           jmp 0x4001e9c	       279	strbuf.h	FUNCTION_124	CALL_2
0x4001fcb	    0x488b94249800	            mov rdx, qword [rsp + 0x98] 	       141	strbuf.h	FUNCTION_121
0x4001fd3	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_123	IF_1	CALL_1
0x4001fd7	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_123	IF_1	CALL_1
0x4001fda	            0x758c	                           jne 0x4001f68	       227	strbuf.h	FUNCTION_123	IF_1	CALL_1
0x4001fdc	      0xe96dffffff	                           jmp 0x4001f4e	       227	strbuf.h	FUNCTION_123	IF_1	CALL_1
0x4001fe1	     0xf1f80000000	                         nop dword [rax]	       227	strbuf.h	FUNCTION_123	IF_1	CALL_1
0x4001fe8	      0xbf10000000	                           mov edi, 0x10	        69	show-branch.c	FUNCTION_4	CALL_1
0x4001fed	      0x4889542410	             mov qword [rsp + 0x10], rdx	        69	show-branch.c	FUNCTION_4	CALL_1
0x4001ff2	      0xe800000000	                          call 0x4001ff7	        69	show-branch.c	FUNCTION_4	CALL_1
0x4001ff7	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        69	show-branch.c	FUNCTION_4	CALL_1
0x4001ffc	      0x4989442418	             mov qword [r12 + 0x18], rax	        69	show-branch.c	FUNCTION_4	CALL_1
0x4002001	      0xe9d5feffff	                           jmp 0x4001edb	        69	show-branch.c	FUNCTION_4	CALL_1
0x4002006	          0x4c89e7	                            mov rdi, r12	       815	show-branch.c	FUNCTION_28	FOR_3	IF_24	CALL_76
0x4002009	          0x4863ed	                         movsxd rbp, ebp	       815	show-branch.c	FUNCTION_28	FOR_3	IF_24	CALL_76
0x400200c	      0xe800000000	                          call 0x4002011	       815	show-branch.c	FUNCTION_28	FOR_3	IF_24	CALL_76
0x4002011	    0x488b1ced0000	                  mov rbx, qword [rbp*8]	       815	show-branch.c	FUNCTION_28	FOR_3	IF_24	CALL_76
0x4002019	          0x4989c4	                            mov r12, rax	       815	show-branch.c	FUNCTION_28	FOR_3	IF_24	CALL_76
0x400201c	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_85	CALL_2
0x4002021	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_85	CALL_2
0x4002026	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_85	CALL_2
0x4002028	      0xe800000000	                          call 0x400202d	        54	gettext.h	FUNCTION_85	CALL_2
0x400202d	          0x4c89e2	                            mov rdx, r12	       815	show-branch.c	FUNCTION_28	FOR_3	IF_24	CALL_76
0x4002030	          0x4889c7	                            mov rdi, rax	       815	show-branch.c	FUNCTION_28	FOR_3	IF_24	CALL_76
0x4002033	          0x4889de	                            mov rsi, rbx	       815	show-branch.c	FUNCTION_28	FOR_3	IF_24	CALL_76
0x4002036	            0x31c0	                            xor eax, eax	       815	show-branch.c	FUNCTION_28	FOR_3	IF_24	CALL_76
0x4002038	      0xe800000000	                          call 0x400203d	       815	show-branch.c	FUNCTION_28	FOR_3	IF_24	CALL_76
0x400203d	          0x4863ed	                         movsxd rbp, ebp	       812	show-branch.c	FUNCTION_28	FOR_3	CALL_73
0x4002040	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_85	CALL_2
0x4002045	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_85	CALL_2
0x400204a	    0x488b1ced0000	                  mov rbx, qword [rbp*8]	       812	show-branch.c	FUNCTION_28	FOR_3	CALL_73
0x4002052	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_85	CALL_2
0x4002054	      0xe800000000	                          call 0x4002059	        54	gettext.h	FUNCTION_85	CALL_2
0x4002059	          0x4889de	                            mov rsi, rbx	       812	show-branch.c	FUNCTION_28	FOR_3	CALL_73
0x400205c	          0x4889c7	                            mov rdi, rax	       812	show-branch.c	FUNCTION_28	FOR_3	CALL_73
0x400205f	            0x31c0	                            xor eax, eax	       812	show-branch.c	FUNCTION_28	FOR_3	CALL_73
0x4002061	      0xe800000000	                          call 0x4002066	       812	show-branch.c	FUNCTION_28	FOR_3	CALL_73
0x4002066	      0xb800000000	                              mov eax, 0	       128	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2	IF_2
0x400206b	      0xe934fdffff	                           jmp 0x4001da4	       128	show-branch.c	ELSE_1	FUNCTION_7	FOR_1	FOR_2	IF_2
0x4002070	          0x4889ee	                            mov rsi, rbp	       681	show-branch.c	FUNCTION_28	IF_3	IF_4	CALL_34
0x4002073	      0xbf00000000	                              mov edi, 0	       681	show-branch.c	FUNCTION_28	IF_3	IF_4	CALL_34
0x4002078	      0xe800000000	                          call 0x400207d	       681	show-branch.c	FUNCTION_28	IF_3	IF_4	CALL_34
0x400207d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_85	CALL_2
0x4002082	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_85	CALL_2
0x4002087	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_85	CALL_2
0x4002089	      0xe800000000	                          call 0x400208e	        54	gettext.h	FUNCTION_85	CALL_2
0x400208e	          0x4889c7	                            mov rdi, rax	       714	show-branch.c	FUNCTION_28	IF_7	IF_8	CALL_39
0x4002091	            0x31c0	                            xor eax, eax	       714	show-branch.c	FUNCTION_28	IF_7	IF_8	CALL_39
0x4002093	      0xe800000000	                          call 0x4002098	       714	show-branch.c	FUNCTION_28	IF_7	IF_8	CALL_39
0x4002098	      0xe800000000	                          call 0x400209d	       931	show-branch.c	FUNCTION_28
0x400209d	          0x488b1b	                    mov rbx, qword [rbx]	       724	show-branch.c	FUNCTION_28	IF_7	CALL_47
0x40020a0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_85	CALL_2
0x40020a5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_85	CALL_2
0x40020aa	            0xeba6	                           jmp 0x4002052	        54	gettext.h	FUNCTION_85	CALL_2
0x40020ac	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_85	CALL_2
0x40020b1	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_85	CALL_2
0x40020b6	            0xebcf	                           jmp 0x4002087	        54	gettext.h	FUNCTION_85	CALL_2
0x40020b8	    0x41b805000000	                              mov r8d, 5	        62	gettext.h	FUNCTION_86	CALL_2
0x40020be	      0xb919000000	                           mov ecx, 0x19	        62	gettext.h	FUNCTION_86	CALL_2
0x40020c3	      0xba00000000	                              mov edx, 0	        62	gettext.h	FUNCTION_86	CALL_2
0x40020c8	      0xbe00000000	                              mov esi, 0	        62	gettext.h	FUNCTION_86	CALL_2
0x40020cd	      0xe9abf2ffff	                           jmp 0x400137d	        62	gettext.h	FUNCTION_86	CALL_2
0x40020d2	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_85	CALL_2
0x40020d7	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_85	CALL_2
0x40020dc	            0xeba9	                           jmp 0x4002087	        54	gettext.h	FUNCTION_85	CALL_2
