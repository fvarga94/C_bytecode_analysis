cmd_resolve_ref	CALL,4:FOR,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:SWITCH,0	48
0x40004b3	            0x4154	                                push r12	       132	test-ref-store.c	FUNCTION_11
0x40004b5	              0x55	                                push rbp	       132	test-ref-store.c	FUNCTION_11
0x40004b6	              0x53	                                push rbx	       132	test-ref-store.c	FUNCTION_11
0x40004b7	        0x4883ec30	                           sub rsp, 0x30	       132	test-ref-store.c	FUNCTION_11
0x40004bb	          0x4889fd	                            mov rbp, rdi	       132	test-ref-store.c	FUNCTION_11
0x40004be	          0x4889f3	                            mov rbx, rsi	       132	test-ref-store.c	FUNCTION_11
0x40004c1	    0x64488b042528	                mov rax, qword fs:[0x28]	       132	test-ref-store.c	FUNCTION_11
0x40004ca	      0x4889442428	             mov qword [rsp + 0x28], rax	       132	test-ref-store.c	FUNCTION_11
0x40004cf	            0x31c0	                            xor eax, eax	       132	test-ref-store.c	FUNCTION_11
0x40004d1	      0xbe00000000	                              mov esi, 0	       134	test-ref-store.c	FUNCTION_11	CALL_1
0x40004d6	          0x488b3b	                    mov rdi, qword [rbx]	       134	test-ref-store.c	FUNCTION_11	CALL_1
0x40004d9	      0xe862fbffff	                        call sym.notnull	       134	test-ref-store.c	FUNCTION_11	CALL_1
0x40004de	          0x4989c4	                            mov r12, rax	       134	test-ref-store.c	FUNCTION_11	CALL_1
0x40004e1	        0x488b7b08	                mov rdi, qword [rbx + 8]	       135	test-ref-store.c	FUNCTION_11	CALL_2
0x40004e5	      0xbe00000000	                              mov esi, 0	       135	test-ref-store.c	FUNCTION_11	CALL_2
0x40004ea	      0xe880fbffff	                      call sym.arg_flags	       135	test-ref-store.c	FUNCTION_11	CALL_2
0x40004ef	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	       139	test-ref-store.c	FUNCTION_11	CALL_3
0x40004f4	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	       139	test-ref-store.c	FUNCTION_11	CALL_3
0x40004f9	            0x89c2	                            mov edx, eax	       139	test-ref-store.c	FUNCTION_11	CALL_3
0x40004fb	          0x4c89e6	                            mov rsi, r12	       139	test-ref-store.c	FUNCTION_11	CALL_3
0x40004fe	          0x4889ef	                            mov rdi, rbp	       139	test-ref-store.c	FUNCTION_11	CALL_3
0x4000501	      0xe800000000	                          call 0x4000506	       139	test-ref-store.c	FUNCTION_11	CALL_3
0x4000506	          0x4889c3	                            mov rbx, rax	       139	test-ref-store.c	FUNCTION_11	CALL_3
0x4000509	      0x448b64240c	            mov r12d, dword [rsp + 0xc] 	       141	test-ref-store.c	FUNCTION_11	CALL_4
0x400050e	          0x4885c0	                           test rax, rax	       141	test-ref-store.c	FUNCTION_11	CALL_4
0x4000511	      0xbd00000000	                              mov ebp, 0	       141	test-ref-store.c	FUNCTION_11	CALL_4
0x4000516	        0x480f45e8	                         cmovne rbp, rax	       141	test-ref-store.c	FUNCTION_11	CALL_4
0x400051a	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       141	test-ref-store.c	FUNCTION_11	CALL_4
0x400051f	      0xe800000000	                          call 0x4000524	       141	test-ref-store.c	FUNCTION_11	CALL_4
0x4000524	          0x4589e0	                           mov r8d, r12d	       104	stdio2.h	CALL_12
0x4000527	          0x4889e9	                            mov rcx, rbp	       104	stdio2.h	CALL_12
0x400052a	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_12
0x400052d	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_12
0x4000532	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_12
0x4000537	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_12
0x400053c	      0xe800000000	                          call 0x4000541	       104	stdio2.h	CALL_12
0x4000541	          0x4885db	                           test rbx, rbx	       142	test-ref-store.c	FUNCTION_11
0x4000544	           0xf94c0	                                 sete al	       142	test-ref-store.c	FUNCTION_11
0x4000547	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       143	test-ref-store.c	FUNCTION_11
0x400054c	    0x644833142528	                xor rdx, qword fs:[0x28]	       143	test-ref-store.c	FUNCTION_11
0x4000555	            0x7405	                            je 0x400055c	       143	test-ref-store.c	FUNCTION_11
0x4000557	      0xe800000000	                          call 0x400055c	       143	test-ref-store.c	FUNCTION_11
0x400055c	           0xfb6c0	                           movzx eax, al	       143	test-ref-store.c	FUNCTION_11
0x400055f	        0x4883c430	                           add rsp, 0x30	       143	test-ref-store.c	FUNCTION_11
0x4000563	              0x5b	                                 pop rbx	       143	test-ref-store.c	FUNCTION_11
0x4000564	              0x5d	                                 pop rbp	       143	test-ref-store.c	FUNCTION_11
0x4000565	            0x415c	                                 pop r12	       143	test-ref-store.c	FUNCTION_11
0x4000567	              0xc3	                                     ret	       143	test-ref-store.c	FUNCTION_11
notnull	CALL,1:FOR,0:functions,0:DO,0:ELSE,0:IF,1:WHILE,0:SWITCH,0	8
0x4000040	          0x4885ff	                           test rdi, rdi	        10	test-ref-store.c	FUNCTION_1	IF_1
0x4000043	            0x7513	                           jne 0x4000058	        10	test-ref-store.c	FUNCTION_1	IF_1
0x4000045	        0x4883ec08	                              sub rsp, 8	         9	test-ref-store.c	FUNCTION_1
0x4000049	      0xbf00000000	                              mov edi, 0	        11	test-ref-store.c	FUNCTION_1	CALL_1
0x400004e	      0xb800000000	                              mov eax, 0	        11	test-ref-store.c	FUNCTION_1	CALL_1
0x4000053	      0xe800000000	                          call 0x4000058	        11	test-ref-store.c	FUNCTION_1	CALL_1
0x4000058	          0x4889f8	                            mov rax, rdi	        13	test-ref-store.c	FUNCTION_1
0x400005b	              0xc3	                                     ret	        13	test-ref-store.c	FUNCTION_1
cmd_create_symref	CALL,3:FOR,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:SWITCH,0	21
0x4000683	            0x4154	                                push r12	        88	test-ref-store.c	FUNCTION_6
0x4000685	              0x55	                                push rbp	        88	test-ref-store.c	FUNCTION_6
0x4000686	              0x53	                                push rbx	        88	test-ref-store.c	FUNCTION_6
0x4000687	          0x4889fd	                            mov rbp, rdi	        88	test-ref-store.c	FUNCTION_6
0x400068a	          0x4889f3	                            mov rbx, rsi	        88	test-ref-store.c	FUNCTION_6
0x400068d	      0xbe00000000	                              mov esi, 0	        89	test-ref-store.c	FUNCTION_6	CALL_1
0x4000692	          0x488b3b	                    mov rdi, qword [rbx]	        89	test-ref-store.c	FUNCTION_6	CALL_1
0x4000695	      0xe8a6f9ffff	                        call sym.notnull	        89	test-ref-store.c	FUNCTION_6	CALL_1
0x400069a	          0x4989c4	                            mov r12, rax	        89	test-ref-store.c	FUNCTION_6	CALL_1
0x400069d	        0x488b7b08	                mov rdi, qword [rbx + 8]	        90	test-ref-store.c	FUNCTION_6	CALL_2
0x40006a1	      0xbe00000000	                              mov esi, 0	        90	test-ref-store.c	FUNCTION_6	CALL_2
0x40006a6	      0xe895f9ffff	                        call sym.notnull	        90	test-ref-store.c	FUNCTION_6	CALL_2
0x40006ab	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	        93	test-ref-store.c	FUNCTION_6	CALL_3
0x40006af	          0x4889c2	                            mov rdx, rax	        93	test-ref-store.c	FUNCTION_6	CALL_3
0x40006b2	          0x4c89e6	                            mov rsi, r12	        93	test-ref-store.c	FUNCTION_6	CALL_3
0x40006b5	          0x4889ef	                            mov rdi, rbp	        93	test-ref-store.c	FUNCTION_6	CALL_3
0x40006b8	      0xe800000000	                          call 0x40006bd	        93	test-ref-store.c	FUNCTION_6	CALL_3
0x40006bd	              0x5b	                                 pop rbx	        94	test-ref-store.c	FUNCTION_6
0x40006be	              0x5d	                                 pop rbp	        94	test-ref-store.c	FUNCTION_6
0x40006bf	            0x415c	                                 pop r12	        94	test-ref-store.c	FUNCTION_6
0x40006c1	              0xc3	                                     ret	        94	test-ref-store.c	FUNCTION_6
cmd_pack_refs	CALL,2:FOR,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:SWITCH,0	11
0x400072b	              0x53	                                push rbx	        69	test-ref-store.c	FUNCTION_4
0x400072c	          0x4889fb	                            mov rbx, rdi	        69	test-ref-store.c	FUNCTION_4
0x400072f	          0x4889f0	                            mov rax, rsi	        69	test-ref-store.c	FUNCTION_4
0x4000732	      0xbe00000000	                              mov esi, 0	        70	test-ref-store.c	FUNCTION_4	CALL_1
0x4000737	          0x488b38	                    mov rdi, qword [rax]	        70	test-ref-store.c	FUNCTION_4	CALL_1
0x400073a	      0xe830f9ffff	                      call sym.arg_flags	        70	test-ref-store.c	FUNCTION_4	CALL_1
0x400073f	            0x89c6	                            mov esi, eax	        72	test-ref-store.c	FUNCTION_4	CALL_2
0x4000741	          0x4889df	                            mov rdi, rbx	        72	test-ref-store.c	FUNCTION_4	CALL_2
0x4000744	      0xe800000000	                          call 0x4000749	        72	test-ref-store.c	FUNCTION_4	CALL_2
0x4000749	              0x5b	                                 pop rbx	        73	test-ref-store.c	FUNCTION_4
0x400074a	              0xc3	                                     ret	        73	test-ref-store.c	FUNCTION_4
cmd_update_ref	CALL,9:FOR,0:functions,0:DO,0:ELSE,0:IF,1:WHILE,0:SWITCH,0	67
0x400008f	            0x4157	                                push r15	       233	test-ref-store.c	FUNCTION_22
0x4000091	            0x4156	                                push r14	       233	test-ref-store.c	FUNCTION_22
0x4000093	            0x4155	                                push r13	       233	test-ref-store.c	FUNCTION_22
0x4000095	            0x4154	                                push r12	       233	test-ref-store.c	FUNCTION_22
0x4000097	              0x55	                                push rbp	       233	test-ref-store.c	FUNCTION_22
0x4000098	              0x53	                                push rbx	       233	test-ref-store.c	FUNCTION_22
0x4000099	        0x4883ec48	                           sub rsp, 0x48	       233	test-ref-store.c	FUNCTION_22
0x400009d	          0x4989fc	                            mov r12, rdi	       233	test-ref-store.c	FUNCTION_22
0x40000a0	          0x4889f3	                            mov rbx, rsi	       233	test-ref-store.c	FUNCTION_22
0x40000a3	    0x64488b042528	                mov rax, qword fs:[0x28]	       233	test-ref-store.c	FUNCTION_22
0x40000ac	      0x4889442438	             mov qword [rsp + 0x38], rax	       233	test-ref-store.c	FUNCTION_22
0x40000b1	            0x31c0	                            xor eax, eax	       233	test-ref-store.c	FUNCTION_22
0x40000b3	      0xbe00000000	                              mov esi, 0	       234	test-ref-store.c	FUNCTION_22	CALL_1
0x40000b8	          0x488b3b	                    mov rdi, qword [rbx]	       234	test-ref-store.c	FUNCTION_22	CALL_1
0x40000bb	      0xe880ffffff	                        call sym.notnull	       234	test-ref-store.c	FUNCTION_22	CALL_1
0x40000c0	          0x4989c5	                            mov r13, rax	       234	test-ref-store.c	FUNCTION_22	CALL_1
0x40000c3	        0x488b7b08	                mov rdi, qword [rbx + 8]	       235	test-ref-store.c	FUNCTION_22	CALL_2
0x40000c7	      0xbe00000000	                              mov esi, 0	       235	test-ref-store.c	FUNCTION_22	CALL_2
0x40000cc	      0xe86fffffff	                        call sym.notnull	       235	test-ref-store.c	FUNCTION_22	CALL_2
0x40000d1	          0x4989c6	                            mov r14, rax	       235	test-ref-store.c	FUNCTION_22	CALL_2
0x40000d4	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       236	test-ref-store.c	FUNCTION_22	CALL_3
0x40000d8	      0xbe00000000	                              mov esi, 0	       236	test-ref-store.c	FUNCTION_22	CALL_3
0x40000dd	      0xe85effffff	                        call sym.notnull	       236	test-ref-store.c	FUNCTION_22	CALL_3
0x40000e2	          0x4989c7	                            mov r15, rax	       236	test-ref-store.c	FUNCTION_22	CALL_3
0x40000e5	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       237	test-ref-store.c	FUNCTION_22	CALL_4
0x40000e9	      0xbe00000000	                              mov esi, 0	       237	test-ref-store.c	FUNCTION_22	CALL_4
0x40000ee	      0xe84dffffff	                        call sym.notnull	       237	test-ref-store.c	FUNCTION_22	CALL_4
0x40000f3	          0x4889c5	                            mov rbp, rax	       237	test-ref-store.c	FUNCTION_22	CALL_4
0x40000f6	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       238	test-ref-store.c	FUNCTION_22	CALL_5
0x40000fa	      0xbe00000000	                              mov esi, 0	       238	test-ref-store.c	FUNCTION_22	CALL_5
0x40000ff	      0xe86bffffff	                      call sym.arg_flags	       238	test-ref-store.c	FUNCTION_22	CALL_5
0x4000104	            0x89c3	                            mov ebx, eax	       238	test-ref-store.c	FUNCTION_22	CALL_5
0x4000106	          0x4889e6	                            mov rsi, rsp	       242	test-ref-store.c	FUNCTION_22	IF_1	CALL_6
0x4000109	          0x4889ef	                            mov rdi, rbp	       242	test-ref-store.c	FUNCTION_22	IF_1	CALL_6
0x400010c	      0xe800000000	                          call 0x4000111	       242	test-ref-store.c	FUNCTION_22	IF_1	CALL_6
0x4000111	            0x85c0	                           test eax, eax	       242	test-ref-store.c	FUNCTION_22	IF_1	CALL_6
0x4000113	            0x7511	                           jne 0x4000126	       242	test-ref-store.c	FUNCTION_22	IF_1	CALL_6
0x4000115	      0x488d742420	                   lea rsi, [rsp + 0x20]	       243	test-ref-store.c	FUNCTION_22	IF_1	CALL_7
0x400011a	          0x4c89ff	                            mov rdi, r15	       243	test-ref-store.c	FUNCTION_22	IF_1	CALL_7
0x400011d	      0xe800000000	                          call 0x4000122	       243	test-ref-store.c	FUNCTION_22	IF_1	CALL_7
0x4000122	            0x85c0	                           test eax, eax	       242	test-ref-store.c	FUNCTION_22	IF_1	CALL_6
0x4000124	            0x740f	                            je 0x4000135	       242	test-ref-store.c	FUNCTION_22	IF_1	CALL_6
0x4000126	      0xbf00000000	                              mov edi, 0	       244	test-ref-store.c	FUNCTION_22	CALL_8
0x400012b	      0xb800000000	                              mov eax, 0	       244	test-ref-store.c	FUNCTION_22	CALL_8
0x4000130	      0xe800000000	                          call 0x4000135	       244	test-ref-store.c	FUNCTION_22	CALL_8
0x4000135	        0x4883ec08	                              sub rsp, 8	       246	test-ref-store.c	FUNCTION_22	CALL_9
0x4000139	            0x6a01	                                  push 1	       246	test-ref-store.c	FUNCTION_22	CALL_9
0x400013b	          0x4189d9	                            mov r9d, ebx	       246	test-ref-store.c	FUNCTION_22	CALL_9
0x400013e	      0x4c8d442410	                    lea r8, [rsp + 0x10]	       246	test-ref-store.c	FUNCTION_22	CALL_9
0x4000143	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	       246	test-ref-store.c	FUNCTION_22	CALL_9
0x4000148	          0x4c89f2	                            mov rdx, r14	       246	test-ref-store.c	FUNCTION_22	CALL_9
0x400014b	          0x4c89ee	                            mov rsi, r13	       246	test-ref-store.c	FUNCTION_22	CALL_9
0x400014e	          0x4c89e7	                            mov rdi, r12	       246	test-ref-store.c	FUNCTION_22	CALL_9
0x4000151	      0xe800000000	                          call 0x4000156	       246	test-ref-store.c	FUNCTION_22	CALL_9
0x4000156	        0x4883c410	                           add rsp, 0x10	       246	test-ref-store.c	FUNCTION_22	CALL_9
0x400015a	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       249	test-ref-store.c	FUNCTION_22
0x400015f	    0x644833142528	                xor rdx, qword fs:[0x28]	       249	test-ref-store.c	FUNCTION_22
0x4000168	            0x7405	                            je 0x400016f	       249	test-ref-store.c	FUNCTION_22
0x400016a	      0xe800000000	                          call 0x400016f	       249	test-ref-store.c	FUNCTION_22
0x400016f	        0x4883c448	                           add rsp, 0x48	       249	test-ref-store.c	FUNCTION_22
0x4000173	              0x5b	                                 pop rbx	       249	test-ref-store.c	FUNCTION_22
0x4000174	              0x5d	                                 pop rbp	       249	test-ref-store.c	FUNCTION_22
0x4000175	            0x415c	                                 pop r12	       249	test-ref-store.c	FUNCTION_22
0x4000177	            0x415d	                                 pop r13	       249	test-ref-store.c	FUNCTION_22
0x4000179	            0x415e	                                 pop r14	       249	test-ref-store.c	FUNCTION_22
0x400017b	            0x415f	                                 pop r15	       249	test-ref-store.c	FUNCTION_22
0x400017d	              0xc3	                                     ret	       249	test-ref-store.c	FUNCTION_22
each_reflog	CALL,2:FOR,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:SWITCH,0	36
0x4000343	            0x4157	                                push r15	       165	test-ref-store.c	FUNCTION_14
0x4000345	            0x4156	                                push r14	       165	test-ref-store.c	FUNCTION_14
0x4000347	            0x4155	                                push r13	       165	test-ref-store.c	FUNCTION_14
0x4000349	            0x4154	                                push r12	       165	test-ref-store.c	FUNCTION_14
0x400034b	              0x55	                                push rbp	       165	test-ref-store.c	FUNCTION_14
0x400034c	              0x53	                                push rbx	       165	test-ref-store.c	FUNCTION_14
0x400034d	        0x4883ec08	                              sub rsp, 8	       165	test-ref-store.c	FUNCTION_14
0x4000351	          0x4989ff	                            mov r15, rdi	       165	test-ref-store.c	FUNCTION_14
0x4000354	          0x4889d5	                            mov rbp, rdx	       165	test-ref-store.c	FUNCTION_14
0x4000357	          0x4989cc	                            mov r12, rcx	       165	test-ref-store.c	FUNCTION_14
0x400035a	          0x4589c5	                           mov r13d, r8d	       165	test-ref-store.c	FUNCTION_14
0x400035d	          0x4d89ce	                             mov r14, r9	       165	test-ref-store.c	FUNCTION_14
0x4000360	          0x4889f7	                            mov rdi, rsi	       166	test-ref-store.c	FUNCTION_14
0x4000363	      0xe800000000	                          call 0x4000368	       166	test-ref-store.c	FUNCTION_14
0x4000368	          0x4889c3	                            mov rbx, rax	       166	test-ref-store.c	FUNCTION_14
0x400036b	          0x4c89ff	                            mov rdi, r15	       166	test-ref-store.c	FUNCTION_14
0x400036e	      0xe800000000	                          call 0x4000373	       166	test-ref-store.c	FUNCTION_14
0x4000373	            0x4156	                                push r14	       104	stdio2.h	CALL_12
0x4000375	            0x4155	                                push r13	       104	stdio2.h	CALL_12
0x4000377	          0x4d89e1	                             mov r9, r12	       104	stdio2.h	CALL_12
0x400037a	          0x4989e8	                             mov r8, rbp	       104	stdio2.h	CALL_12
0x400037d	          0x4889d9	                            mov rcx, rbx	       104	stdio2.h	CALL_12
0x4000380	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_12
0x4000383	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_12
0x4000388	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_12
0x400038d	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_12
0x4000392	      0xe800000000	                          call 0x4000397	       104	stdio2.h	CALL_12
0x4000397	      0xb800000000	                              mov eax, 0	       170	test-ref-store.c	FUNCTION_14
0x400039c	        0x4883c418	                           add rsp, 0x18	       170	test-ref-store.c	FUNCTION_14
0x40003a0	              0x5b	                                 pop rbx	       170	test-ref-store.c	FUNCTION_14
0x40003a1	              0x5d	                                 pop rbp	       170	test-ref-store.c	FUNCTION_14
0x40003a2	            0x415c	                                 pop r12	       170	test-ref-store.c	FUNCTION_14
0x40003a4	            0x415d	                                 pop r13	       170	test-ref-store.c	FUNCTION_14
0x40003a6	            0x415e	                                 pop r14	       170	test-ref-store.c	FUNCTION_14
0x40003a8	            0x415f	                                 pop r15	       170	test-ref-store.c	FUNCTION_14
0x40003aa	              0xc3	                                     ret	       170	test-ref-store.c	FUNCTION_14
cmd_peel_ref	CALL,4:FOR,0:functions,0:DO,0:ELSE,0:IF,1:WHILE,0:SWITCH,0	29
0x40006c2	              0x53	                                push rbx	        76	test-ref-store.c	FUNCTION_5
0x40006c3	        0x4883ec20	                           sub rsp, 0x20	        76	test-ref-store.c	FUNCTION_5
0x40006c7	          0x4889fb	                            mov rbx, rdi	        76	test-ref-store.c	FUNCTION_5
0x40006ca	          0x4889f0	                            mov rax, rsi	        76	test-ref-store.c	FUNCTION_5
0x40006cd	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	        76	test-ref-store.c	FUNCTION_5
0x40006d6	      0x48894c2418	             mov qword [rsp + 0x18], rcx	        76	test-ref-store.c	FUNCTION_5
0x40006db	            0x31c9	                            xor ecx, ecx	        76	test-ref-store.c	FUNCTION_5
0x40006dd	      0xbe00000000	                              mov esi, 0	        77	test-ref-store.c	FUNCTION_5	CALL_1
0x40006e2	          0x488b38	                    mov rdi, qword [rax]	        77	test-ref-store.c	FUNCTION_5	CALL_1
0x40006e5	      0xe856f9ffff	                        call sym.notnull	        77	test-ref-store.c	FUNCTION_5	CALL_1
0x40006ea	          0x4889e2	                            mov rdx, rsp	        81	test-ref-store.c	FUNCTION_5	CALL_2
0x40006ed	          0x4889c6	                            mov rsi, rax	        81	test-ref-store.c	FUNCTION_5	CALL_2
0x40006f0	          0x4889df	                            mov rdi, rbx	        81	test-ref-store.c	FUNCTION_5	CALL_2
0x40006f3	      0xe800000000	                          call 0x40006f8	        81	test-ref-store.c	FUNCTION_5	CALL_2
0x40006f8	            0x89c3	                            mov ebx, eax	        81	test-ref-store.c	FUNCTION_5	CALL_2
0x40006fa	            0x85c0	                           test eax, eax	        82	test-ref-store.c	FUNCTION_5	IF_1
0x40006fc	            0x7510	                           jne 0x400070e	        82	test-ref-store.c	FUNCTION_5	IF_1
0x40006fe	          0x4889e7	                            mov rdi, rsp	        83	test-ref-store.c	FUNCTION_5	CALL_4
0x4000701	      0xe800000000	                          call 0x4000706	        83	test-ref-store.c	FUNCTION_5	CALL_4
0x4000706	          0x4889c7	                            mov rdi, rax	        83	test-ref-store.c	FUNCTION_5	CALL_4
0x4000709	      0xe800000000	                          call 0x400070e	        83	test-ref-store.c	FUNCTION_5	CALL_4
0x400070e	            0x89d8	                            mov eax, ebx	        85	test-ref-store.c	FUNCTION_5
0x4000710	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	        85	test-ref-store.c	FUNCTION_5
0x4000715	    0x644833142528	                xor rdx, qword fs:[0x28]	        85	test-ref-store.c	FUNCTION_5
0x400071e	            0x7405	                            je 0x4000725	        85	test-ref-store.c	FUNCTION_5
0x4000720	      0xe800000000	                          call 0x4000725	        85	test-ref-store.c	FUNCTION_5
0x4000725	        0x4883c420	                           add rsp, 0x20	        85	test-ref-store.c	FUNCTION_5
0x4000729	              0x5b	                                 pop rbx	        85	test-ref-store.c	FUNCTION_5
0x400072a	              0xc3	                                     ret	        85	test-ref-store.c	FUNCTION_5
cmd_delete_ref	CALL,7:FOR,0:functions,0:DO,0:ELSE,0:IF,1:WHILE,0:SWITCH,0	52
0x400017e	            0x4156	                                push r14	       219	test-ref-store.c	FUNCTION_21
0x4000180	            0x4155	                                push r13	       219	test-ref-store.c	FUNCTION_21
0x4000182	            0x4154	                                push r12	       219	test-ref-store.c	FUNCTION_21
0x4000184	              0x55	                                push rbp	       219	test-ref-store.c	FUNCTION_21
0x4000185	              0x53	                                push rbx	       219	test-ref-store.c	FUNCTION_21
0x4000186	        0x4883ec20	                           sub rsp, 0x20	       219	test-ref-store.c	FUNCTION_21
0x400018a	          0x4989fc	                            mov r12, rdi	       219	test-ref-store.c	FUNCTION_21
0x400018d	          0x4889f3	                            mov rbx, rsi	       219	test-ref-store.c	FUNCTION_21
0x4000190	    0x64488b042528	                mov rax, qword fs:[0x28]	       219	test-ref-store.c	FUNCTION_21
0x4000199	      0x4889442418	             mov qword [rsp + 0x18], rax	       219	test-ref-store.c	FUNCTION_21
0x400019e	            0x31c0	                            xor eax, eax	       219	test-ref-store.c	FUNCTION_21
0x40001a0	      0xbe00000000	                              mov esi, 0	       220	test-ref-store.c	FUNCTION_21	CALL_1
0x40001a5	          0x488b3b	                    mov rdi, qword [rbx]	       220	test-ref-store.c	FUNCTION_21	CALL_1
0x40001a8	      0xe893feffff	                        call sym.notnull	       220	test-ref-store.c	FUNCTION_21	CALL_1
0x40001ad	          0x4989c5	                            mov r13, rax	       220	test-ref-store.c	FUNCTION_21	CALL_1
0x40001b0	        0x488b7b08	                mov rdi, qword [rbx + 8]	       221	test-ref-store.c	FUNCTION_21	CALL_2
0x40001b4	      0xbe00000000	                              mov esi, 0	       221	test-ref-store.c	FUNCTION_21	CALL_2
0x40001b9	      0xe882feffff	                        call sym.notnull	       221	test-ref-store.c	FUNCTION_21	CALL_2
0x40001be	          0x4989c6	                            mov r14, rax	       221	test-ref-store.c	FUNCTION_21	CALL_2
0x40001c1	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       222	test-ref-store.c	FUNCTION_21	CALL_3
0x40001c5	      0xbe00000000	                              mov esi, 0	       222	test-ref-store.c	FUNCTION_21	CALL_3
0x40001ca	      0xe871feffff	                        call sym.notnull	       222	test-ref-store.c	FUNCTION_21	CALL_3
0x40001cf	          0x4889c5	                            mov rbp, rax	       222	test-ref-store.c	FUNCTION_21	CALL_3
0x40001d2	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       223	test-ref-store.c	FUNCTION_21	CALL_4
0x40001d6	      0xbe00000000	                              mov esi, 0	       223	test-ref-store.c	FUNCTION_21	CALL_4
0x40001db	      0xe88ffeffff	                      call sym.arg_flags	       223	test-ref-store.c	FUNCTION_21	CALL_4
0x40001e0	            0x89c3	                            mov ebx, eax	       223	test-ref-store.c	FUNCTION_21	CALL_4
0x40001e2	          0x4889e6	                            mov rsi, rsp	       226	test-ref-store.c	FUNCTION_21	IF_1	CALL_5
0x40001e5	          0x4889ef	                            mov rdi, rbp	       226	test-ref-store.c	FUNCTION_21	IF_1	CALL_5
0x40001e8	      0xe800000000	                          call 0x40001ed	       226	test-ref-store.c	FUNCTION_21	IF_1	CALL_5
0x40001ed	            0x85c0	                           test eax, eax	       226	test-ref-store.c	FUNCTION_21	IF_1	CALL_5
0x40001ef	            0x740f	                            je 0x4000200	       226	test-ref-store.c	FUNCTION_21	IF_1	CALL_5
0x40001f1	      0xbf00000000	                              mov edi, 0	       227	test-ref-store.c	FUNCTION_21	CALL_6
0x40001f6	      0xb800000000	                              mov eax, 0	       227	test-ref-store.c	FUNCTION_21	CALL_6
0x40001fb	      0xe800000000	                          call 0x4000200	       227	test-ref-store.c	FUNCTION_21	CALL_6
0x4000200	          0x4189d8	                            mov r8d, ebx	       229	test-ref-store.c	FUNCTION_21	CALL_7
0x4000203	          0x4889e1	                            mov rcx, rsp	       229	test-ref-store.c	FUNCTION_21	CALL_7
0x4000206	          0x4c89f2	                            mov rdx, r14	       229	test-ref-store.c	FUNCTION_21	CALL_7
0x4000209	          0x4c89ee	                            mov rsi, r13	       229	test-ref-store.c	FUNCTION_21	CALL_7
0x400020c	          0x4c89e7	                            mov rdi, r12	       229	test-ref-store.c	FUNCTION_21	CALL_7
0x400020f	      0xe800000000	                          call 0x4000214	       229	test-ref-store.c	FUNCTION_21	CALL_7
0x4000214	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       230	test-ref-store.c	FUNCTION_21
0x4000219	    0x644833142528	                xor rdx, qword fs:[0x28]	       230	test-ref-store.c	FUNCTION_21
0x4000222	            0x7405	                            je 0x4000229	       230	test-ref-store.c	FUNCTION_21
0x4000224	      0xe800000000	                          call 0x4000229	       230	test-ref-store.c	FUNCTION_21
0x4000229	        0x4883c420	                           add rsp, 0x20	       230	test-ref-store.c	FUNCTION_21
0x400022d	              0x5b	                                 pop rbx	       230	test-ref-store.c	FUNCTION_21
0x400022e	              0x5d	                                 pop rbp	       230	test-ref-store.c	FUNCTION_21
0x400022f	            0x415c	                                 pop r12	       230	test-ref-store.c	FUNCTION_21
0x4000231	            0x415d	                                 pop r13	       230	test-ref-store.c	FUNCTION_21
0x4000233	            0x415e	                                 pop r14	       230	test-ref-store.c	FUNCTION_21
0x4000235	              0xc3	                                     ret	       230	test-ref-store.c	FUNCTION_21
cmd_create_reflog	CALL,4:FOR,0:functions,0:DO,0:ELSE,0:IF,1:WHILE,0:SWITCH,0	39
0x4000257	            0x4154	                                push r12	       194	test-ref-store.c	FUNCTION_18
0x4000259	              0x55	                                push rbp	       194	test-ref-store.c	FUNCTION_18
0x400025a	              0x53	                                push rbx	       194	test-ref-store.c	FUNCTION_18
0x400025b	        0x4883ec20	                           sub rsp, 0x20	       194	test-ref-store.c	FUNCTION_18
0x400025f	          0x4889fd	                            mov rbp, rdi	       194	test-ref-store.c	FUNCTION_18
0x4000262	          0x4889f3	                            mov rbx, rsi	       194	test-ref-store.c	FUNCTION_18
0x4000265	    0x64488b042528	                mov rax, qword fs:[0x28]	       194	test-ref-store.c	FUNCTION_18
0x400026e	      0x4889442418	             mov qword [rsp + 0x18], rax	       194	test-ref-store.c	FUNCTION_18
0x4000273	            0x31c0	                            xor eax, eax	       194	test-ref-store.c	FUNCTION_18
0x4000275	      0xbe00000000	                              mov esi, 0	       195	test-ref-store.c	FUNCTION_18	CALL_1
0x400027a	          0x488b3b	                    mov rdi, qword [rbx]	       195	test-ref-store.c	FUNCTION_18	CALL_1
0x400027d	      0xe8befdffff	                        call sym.notnull	       195	test-ref-store.c	FUNCTION_18	CALL_1
0x4000282	          0x4989c4	                            mov r12, rax	       195	test-ref-store.c	FUNCTION_18	CALL_1
0x4000285	        0x488b7b08	                mov rdi, qword [rbx + 8]	       196	test-ref-store.c	FUNCTION_18	CALL_2
0x4000289	      0xbe00000000	                              mov esi, 0	       196	test-ref-store.c	FUNCTION_18	CALL_2
0x400028e	      0xe8dcfdffff	                      call sym.arg_flags	       196	test-ref-store.c	FUNCTION_18	CALL_2
0x4000293	    0x48c704240000	                      mov qword [rsp], 0	       197	test-ref-store.c	FUNCTION_18
0x400029b	    0x48c744240800	                  mov qword [rsp + 8], 0	       197	test-ref-store.c	FUNCTION_18
0x40002a4	    0x48c744241000	               mov qword [rsp + 0x10], 0	       197	test-ref-store.c	FUNCTION_18
0x40002ad	          0x4889e1	                            mov rcx, rsp	       200	test-ref-store.c	FUNCTION_18	CALL_3
0x40002b0	            0x89c2	                            mov edx, eax	       200	test-ref-store.c	FUNCTION_18	CALL_3
0x40002b2	          0x4c89e6	                            mov rsi, r12	       200	test-ref-store.c	FUNCTION_18	CALL_3
0x40002b5	          0x4889ef	                            mov rdi, rbp	       200	test-ref-store.c	FUNCTION_18	CALL_3
0x40002b8	      0xe800000000	                          call 0x40002bd	       200	test-ref-store.c	FUNCTION_18	CALL_3
0x40002bd	            0x89c3	                            mov ebx, eax	       200	test-ref-store.c	FUNCTION_18	CALL_3
0x40002bf	    0x48837c240800	                  cmp qword [rsp + 8], 0	       201	test-ref-store.c	FUNCTION_18	IF_1
0x40002c5	            0x740a	                            je 0x40002d1	       201	test-ref-store.c	FUNCTION_18	IF_1
0x40002c7	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       202	test-ref-store.c	FUNCTION_18	CALL_4
0x40002cc	      0xe800000000	                          call 0x40002d1	       202	test-ref-store.c	FUNCTION_18	CALL_4
0x40002d1	            0x89d8	                            mov eax, ebx	       204	test-ref-store.c	FUNCTION_18
0x40002d3	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       204	test-ref-store.c	FUNCTION_18
0x40002d8	    0x644833142528	                xor rdx, qword fs:[0x28]	       204	test-ref-store.c	FUNCTION_18
0x40002e1	            0x7405	                            je 0x40002e8	       204	test-ref-store.c	FUNCTION_18
0x40002e3	      0xe800000000	                          call 0x40002e8	       204	test-ref-store.c	FUNCTION_18
0x40002e8	        0x4883c420	                           add rsp, 0x20	       204	test-ref-store.c	FUNCTION_18
0x40002ec	              0x5b	                                 pop rbx	       204	test-ref-store.c	FUNCTION_18
0x40002ed	              0x5d	                                 pop rbp	       204	test-ref-store.c	FUNCTION_18
0x40002ee	            0x415c	                                 pop r12	       204	test-ref-store.c	FUNCTION_18
0x40002f0	              0xc3	                                     ret	       204	test-ref-store.c	FUNCTION_18
cmd_reflog_expire	CALL,1:FOR,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:SWITCH,0	4
0x400005c	        0x4883ec08	                              sub rsp, 8	       214	test-ref-store.c	FUNCTION_20
0x4000060	      0xbf00000000	                              mov edi, 0	       215	test-ref-store.c	FUNCTION_20	CALL_1
0x4000065	      0xb800000000	                              mov eax, 0	       215	test-ref-store.c	FUNCTION_20	CALL_1
0x400006a	      0xe800000000	                      call sym.arg_flags	       215	test-ref-store.c	FUNCTION_20	CALL_1
cmd_for_each_reflog	CALL,1:FOR,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:SWITCH,0	6
0x4000410	        0x4883ec08	                              sub rsp, 8	       158	test-ref-store.c	FUNCTION_13
0x4000414	      0xba00000000	                              mov edx, 0	       159	test-ref-store.c	FUNCTION_13	CALL_1
0x4000419	      0xbe00000000	                              mov esi, 0	       159	test-ref-store.c	FUNCTION_13	CALL_1
0x400041e	      0xe800000000	                          call 0x4000423	       159	test-ref-store.c	FUNCTION_13	CALL_1
0x4000423	        0x4883c408	                              add rsp, 8	       160	test-ref-store.c	FUNCTION_13
0x4000427	              0xc3	                                     ret	       160	test-ref-store.c	FUNCTION_13
cmd_for_each_reflog_ent	CALL,2:FOR,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:SWITCH,0	13
0x40003e7	              0x53	                                push rbx	       173	test-ref-store.c	FUNCTION_15
0x40003e8	          0x4889fb	                            mov rbx, rdi	       173	test-ref-store.c	FUNCTION_15
0x40003eb	          0x4889f0	                            mov rax, rsi	       173	test-ref-store.c	FUNCTION_15
0x40003ee	      0xbe00000000	                              mov esi, 0	       174	test-ref-store.c	FUNCTION_15	CALL_1
0x40003f3	          0x488b38	                    mov rdi, qword [rax]	       174	test-ref-store.c	FUNCTION_15	CALL_1
0x40003f6	      0xe845fcffff	                        call sym.notnull	       174	test-ref-store.c	FUNCTION_15	CALL_1
0x40003fb	          0x4889d9	                            mov rcx, rbx	       176	test-ref-store.c	FUNCTION_15	CALL_2
0x40003fe	      0xba00000000	                              mov edx, 0	       176	test-ref-store.c	FUNCTION_15	CALL_2
0x4000403	          0x4889c6	                            mov rsi, rax	       176	test-ref-store.c	FUNCTION_15	CALL_2
0x4000406	          0x4889df	                            mov rdi, rbx	       176	test-ref-store.c	FUNCTION_15	CALL_2
0x4000409	      0xe800000000	                          call 0x400040e	       176	test-ref-store.c	FUNCTION_15	CALL_2
0x400040e	              0x5b	                                 pop rbx	       177	test-ref-store.c	FUNCTION_15
0x400040f	              0xc3	                                     ret	       177	test-ref-store.c	FUNCTION_15
cmd_reflog_exists	CALL,2:FOR,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:SWITCH,0	14
0x40002f1	              0x53	                                push rbx	       187	test-ref-store.c	FUNCTION_17
0x40002f2	          0x4889fb	                            mov rbx, rdi	       187	test-ref-store.c	FUNCTION_17
0x40002f5	          0x4889f0	                            mov rax, rsi	       187	test-ref-store.c	FUNCTION_17
0x40002f8	      0xbe00000000	                              mov esi, 0	       188	test-ref-store.c	FUNCTION_17	CALL_1
0x40002fd	          0x488b38	                    mov rdi, qword [rax]	       188	test-ref-store.c	FUNCTION_17	CALL_1
0x4000300	      0xe83bfdffff	                        call sym.notnull	       188	test-ref-store.c	FUNCTION_17	CALL_1
0x4000305	          0x4889c6	                            mov rsi, rax	       190	test-ref-store.c	FUNCTION_17	CALL_2
0x4000308	          0x4889df	                            mov rdi, rbx	       190	test-ref-store.c	FUNCTION_17	CALL_2
0x400030b	      0xe800000000	                          call 0x4000310	       190	test-ref-store.c	FUNCTION_17	CALL_2
0x4000310	            0x85c0	                           test eax, eax	       190	test-ref-store.c	FUNCTION_17	CALL_2
0x4000312	           0xf94c0	                                 sete al	       190	test-ref-store.c	FUNCTION_17	CALL_2
0x4000315	           0xfb6c0	                           movzx eax, al	       190	test-ref-store.c	FUNCTION_17	CALL_2
0x4000318	              0x5b	                                 pop rbx	       191	test-ref-store.c	FUNCTION_17
0x4000319	              0xc3	                                     ret	       191	test-ref-store.c	FUNCTION_17
cmd_verify_ref	CALL,3:FOR,0:functions,0:DO,0:ELSE,0:IF,1:WHILE,0:SWITCH,0	32
0x4000428	              0x53	                                push rbx	       146	test-ref-store.c	FUNCTION_12
0x4000429	        0x4883ec20	                           sub rsp, 0x20	       146	test-ref-store.c	FUNCTION_12
0x400042d	          0x4889fb	                            mov rbx, rdi	       146	test-ref-store.c	FUNCTION_12
0x4000430	          0x4889f0	                            mov rax, rsi	       146	test-ref-store.c	FUNCTION_12
0x4000433	    0x64488b142528	                mov rdx, qword fs:[0x28]	       146	test-ref-store.c	FUNCTION_12
0x400043c	      0x4889542418	             mov qword [rsp + 0x18], rdx	       146	test-ref-store.c	FUNCTION_12
0x4000441	            0x31d2	                            xor edx, edx	       146	test-ref-store.c	FUNCTION_12
0x4000443	      0xbe00000000	                              mov esi, 0	       147	test-ref-store.c	FUNCTION_12	CALL_1
0x4000448	          0x488b38	                    mov rdi, qword [rax]	       147	test-ref-store.c	FUNCTION_12	CALL_1
0x400044b	      0xe8f0fbffff	                        call sym.notnull	       147	test-ref-store.c	FUNCTION_12	CALL_1
0x4000450	    0x48c704240000	                      mov qword [rsp], 0	       148	test-ref-store.c	FUNCTION_12
0x4000458	    0x48c744240800	                  mov qword [rsp + 8], 0	       148	test-ref-store.c	FUNCTION_12
0x4000461	    0x48c744241000	               mov qword [rsp + 0x10], 0	       148	test-ref-store.c	FUNCTION_12
0x400046a	          0x4989e0	                             mov r8, rsp	       151	test-ref-store.c	FUNCTION_12	CALL_2
0x400046d	      0xb900000000	                              mov ecx, 0	       151	test-ref-store.c	FUNCTION_12	CALL_2
0x4000472	      0xba00000000	                              mov edx, 0	       151	test-ref-store.c	FUNCTION_12	CALL_2
0x4000477	          0x4889c6	                            mov rsi, rax	       151	test-ref-store.c	FUNCTION_12	CALL_2
0x400047a	          0x4889df	                            mov rdi, rbx	       151	test-ref-store.c	FUNCTION_12	CALL_2
0x400047d	      0xe800000000	                          call 0x4000482	       151	test-ref-store.c	FUNCTION_12	CALL_2
0x4000482	            0x89c3	                            mov ebx, eax	       151	test-ref-store.c	FUNCTION_12	CALL_2
0x4000484	    0x48837c240800	                  cmp qword [rsp + 8], 0	       152	test-ref-store.c	FUNCTION_12	IF_1
0x400048a	            0x740a	                            je 0x4000496	       152	test-ref-store.c	FUNCTION_12	IF_1
0x400048c	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       153	test-ref-store.c	FUNCTION_12	CALL_3
0x4000491	      0xe800000000	                          call 0x4000496	       153	test-ref-store.c	FUNCTION_12	CALL_3
0x4000496	            0x89d8	                            mov eax, ebx	       155	test-ref-store.c	FUNCTION_12
0x4000498	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       155	test-ref-store.c	FUNCTION_12
0x400049d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       155	test-ref-store.c	FUNCTION_12
0x40004a6	            0x7405	                            je 0x40004ad	       155	test-ref-store.c	FUNCTION_12
0x40004a8	      0xe800000000	                          call 0x40004ad	       155	test-ref-store.c	FUNCTION_12
0x40004ad	        0x4883c420	                           add rsp, 0x20	       155	test-ref-store.c	FUNCTION_12
0x40004b1	              0x5b	                                 pop rbx	       155	test-ref-store.c	FUNCTION_12
0x40004b2	              0xc3	                                     ret	       155	test-ref-store.c	FUNCTION_12
cmd_for_each_reflog_ent_reverse	CALL,2:FOR,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:SWITCH,0	13
0x400031a	              0x53	                                push rbx	       180	test-ref-store.c	FUNCTION_16
0x400031b	          0x4889fb	                            mov rbx, rdi	       180	test-ref-store.c	FUNCTION_16
0x400031e	          0x4889f0	                            mov rax, rsi	       180	test-ref-store.c	FUNCTION_16
0x4000321	      0xbe00000000	                              mov esi, 0	       181	test-ref-store.c	FUNCTION_16	CALL_1
0x4000326	          0x488b38	                    mov rdi, qword [rax]	       181	test-ref-store.c	FUNCTION_16	CALL_1
0x4000329	      0xe812fdffff	                        call sym.notnull	       181	test-ref-store.c	FUNCTION_16	CALL_1
0x400032e	          0x4889d9	                            mov rcx, rbx	       183	test-ref-store.c	FUNCTION_16	CALL_2
0x4000331	      0xba00000000	                              mov edx, 0	       183	test-ref-store.c	FUNCTION_16	CALL_2
0x4000336	          0x4889c6	                            mov rsi, rax	       183	test-ref-store.c	FUNCTION_16	CALL_2
0x4000339	          0x4889df	                            mov rdi, rbx	       183	test-ref-store.c	FUNCTION_16	CALL_2
0x400033c	      0xe800000000	                          call 0x4000341	       183	test-ref-store.c	FUNCTION_16	CALL_2
0x4000341	              0x5b	                                 pop rbx	       184	test-ref-store.c	FUNCTION_16
0x4000342	              0xc3	                                     ret	       184	test-ref-store.c	FUNCTION_16
cmd__ref_store	CALL,6:FOR,1:functions,0:DO,0:ELSE,0:IF,2:WHILE,0:SWITCH,0	155
0x400074b	            0x4155	                                push r13	       281	test-ref-store.c	FUNCTION_23
0x400074d	            0x4154	                                push r12	       281	test-ref-store.c	FUNCTION_23
0x400074f	              0x55	                                push rbp	       281	test-ref-store.c	FUNCTION_23
0x4000750	              0x53	                                push rbx	       281	test-ref-store.c	FUNCTION_23
0x4000751	        0x4883ec28	                           sub rsp, 0x28	       281	test-ref-store.c	FUNCTION_23
0x4000755	          0x4989f5	                            mov r13, rsi	       281	test-ref-store.c	FUNCTION_23
0x4000758	    0x64488b042528	                mov rax, qword fs:[0x28]	       281	test-ref-store.c	FUNCTION_23
0x4000761	      0x4889442418	             mov qword [rsp + 0x18], rax	       281	test-ref-store.c	FUNCTION_23
0x4000766	            0x31c0	                            xor eax, eax	       281	test-ref-store.c	FUNCTION_23
0x4000768	      0xe800000000	                          call 0x400076d	       286	test-ref-store.c	FUNCTION_23	CALL_1
0x400076d	        0x4d8b4508	                 mov r8, qword [r13 + 8]	        24	test-ref-store.c	FUNCTION_3	IF_1
0x4000771	          0x4d85c0	                             test r8, r8	        24	test-ref-store.c	FUNCTION_3	IF_1
0x4000774	            0x750f	                           jne 0x4000785	        24	test-ref-store.c	FUNCTION_3	IF_1
0x4000776	      0xbf00000000	                              mov edi, 0	        25	test-ref-store.c	FUNCTION_3	IF_1	CALL_1
0x400077b	      0xb800000000	                              mov eax, 0	        25	test-ref-store.c	FUNCTION_3	IF_1	CALL_1
0x4000780	      0xe800000000	                          call 0x4000785	        25	test-ref-store.c	FUNCTION_3	IF_1	CALL_1
0x4000785	      0xbf00000000	                              mov edi, 0	        26	test-ref-store.c	FUNCTION_3	ELSE_1	IF_2	CALL_2
0x400078a	      0xb905000000	                              mov ecx, 5	        26	test-ref-store.c	FUNCTION_3	ELSE_1	IF_2	CALL_2
0x400078f	          0x4c89c6	                             mov rsi, r8	        26	test-ref-store.c	FUNCTION_3	ELSE_1	IF_2	CALL_2
0x4000792	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        26	test-ref-store.c	FUNCTION_3	ELSE_1	IF_2	CALL_2
0x4000794	           0xf97c1	                                 seta cl	        26	test-ref-store.c	FUNCTION_3	ELSE_1	IF_2	CALL_2
0x4000797	           0xf92c2	                                 setb dl	        26	test-ref-store.c	FUNCTION_3	ELSE_1	IF_2	CALL_2
0x400079a	          0x4c89c3	                             mov rbx, r8	        26	test-ref-store.c	FUNCTION_3	ELSE_1	IF_2	CALL_2
0x400079d	      0xb800000000	                              mov eax, 0	        26	test-ref-store.c	FUNCTION_3	ELSE_1	IF_2	CALL_2
0x40007a2	            0x38d1	                              cmp cl, dl	        26	test-ref-store.c	FUNCTION_3	ELSE_1	IF_2	CALL_2
0x40007a4	            0x7514	                           jne 0x40007ba	        26	test-ref-store.c	FUNCTION_3	ELSE_1	IF_2	CALL_2
0x40007a6	    0x488b3d000000	            mov rdi, qword [0x040007ad] 	        27	test-ref-store.c	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x40007ad	      0xe800000000	                          call 0x40007b2	        27	test-ref-store.c	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x40007b2	          0x4889c5	                            mov rbp, rax	        27	test-ref-store.c	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x40007b5	      0xe9d5000000	                           jmp 0x400088f	        27	test-ref-store.c	FUNCTION_3	ELSE_1	IF_2	CALL_3
0x40007ba	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_47	DO_1	IF_1
0x40007bd	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_47	DO_1	IF_1
0x40007bf	     0xf8459010000	                            je 0x400091e	       484	git-compat-util.h	FUNCTION_47	DO_1	IF_1
0x40007c5	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_47	DO_1
0x40007c9	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_47	DO_1
0x40007cd	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_47	DO_1
0x40007d0	            0x74e8	                            je 0x40007ba	       488	git-compat-util.h	FUNCTION_47	DO_1
0x40007d2	          0x4d89c4	                             mov r12, r8	       488	git-compat-util.h	FUNCTION_47	DO_1
0x40007d5	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_47	DO_1
0x40007da	            0xeb33	                           jmp 0x400080f	       488	git-compat-util.h	FUNCTION_47	DO_1
0x40007dc	            0x89c6	                            mov esi, eax	        34	test-ref-store.c	FUNCTION_3	ELSE_2	IF_3	CALL_6
0x40007de	      0xbf00000000	                              mov edi, 0	        34	test-ref-store.c	FUNCTION_3	ELSE_2	IF_3	CALL_6
0x40007e3	      0xb800000000	                              mov eax, 0	        34	test-ref-store.c	FUNCTION_3	ELSE_2	IF_3	CALL_6
0x40007e8	      0xe800000000	                          call 0x40007ed	        34	test-ref-store.c	FUNCTION_3	ELSE_2	IF_3	CALL_6
0x40007ed	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	        35	test-ref-store.c	FUNCTION_3	ELSE_2	IF_3	CALL_7
0x40007f2	      0xe800000000	                          call 0x40007f7	        35	test-ref-store.c	FUNCTION_3	ELSE_2	IF_3	CALL_7
0x40007f7	          0x4889e7	                            mov rdi, rsp	        36	test-ref-store.c	FUNCTION_3	ELSE_2	IF_3	CALL_8
0x40007fa	      0xe800000000	                          call 0x40007ff	        36	test-ref-store.c	FUNCTION_3	ELSE_2	IF_3	CALL_8
0x40007ff	          0x4889df	                            mov rdi, rbx	        38	test-ref-store.c	FUNCTION_3	ELSE_2	IF_3	CALL_9
0x4000802	      0xe800000000	                          call 0x4000807	        38	test-ref-store.c	FUNCTION_3	ELSE_2	IF_3	CALL_9
0x4000807	          0x4889c5	                            mov rbp, rax	        38	test-ref-store.c	FUNCTION_3	ELSE_2	IF_3	CALL_9
0x400080a	      0xe980000000	                           jmp 0x400088f	        38	test-ref-store.c	FUNCTION_3	ELSE_2	IF_3	CALL_9
0x400080f	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_47	DO_1	IF_1
0x4000812	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_47	DO_1	IF_1
0x4000814	     0xf8440010000	                            je 0x400095a	       484	git-compat-util.h	FUNCTION_47	DO_1	IF_1
0x400081a	        0x4983c401	                              add r12, 1	       488	git-compat-util.h	FUNCTION_47	DO_1
0x400081e	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_47	DO_1
0x4000822	      0x413a5424ff	                  cmp dl, byte [r12 - 1]	       488	git-compat-util.h	FUNCTION_47	DO_1
0x4000827	            0x74e6	                            je 0x400080f	       488	git-compat-util.h	FUNCTION_47	DO_1
0x4000829	      0xe94a010000	                           jmp 0x4000978	       488	git-compat-util.h	FUNCTION_47	DO_1
0x400082e	        0x488b7308	                mov rsi, qword [rbx + 8]	        45	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	FOR_1	IF_6
0x4000832	          0x4885f6	                           test rsi, rsi	        45	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	FOR_1	IF_6
0x4000835	            0x751b	                           jne 0x4000852	        45	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	FOR_1	IF_6
0x4000837	      0xbf00000000	                              mov edi, 0	        47	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	FOR_1	IF_6	IF_7	CALL_12
0x400083c	      0xb905000000	                              mov ecx, 5	        47	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	FOR_1	IF_6	IF_7	CALL_12
0x4000841	          0x4c89e6	                            mov rsi, r12	        47	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	FOR_1	IF_6	IF_7	CALL_12
0x4000844	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        47	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	FOR_1	IF_6	IF_7	CALL_12
0x4000846	           0xf97c2	                                 seta dl	        47	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	FOR_1	IF_6	IF_7	CALL_12
0x4000849	           0xf92c0	                                 setb al	        47	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	FOR_1	IF_6	IF_7	CALL_12
0x400084c	            0x38c2	                              cmp dl, al	        47	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	FOR_1	IF_6	IF_7	CALL_12
0x400084e	            0x750e	                           jne 0x400085e	        47	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	FOR_1	IF_6	IF_7	CALL_12
0x4000850	            0xeb1b	                           jmp 0x400086d	        47	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	FOR_1	IF_6	IF_7	CALL_12
0x4000852	          0x4c89e7	                            mov rdi, r12	        49	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	FOR_1	ELSE_4	IF_8	CALL_13
0x4000855	      0xe800000000	                          call 0x400085a	        49	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	FOR_1	ELSE_4	IF_8	CALL_13
0x400085a	            0x85c0	                           test eax, eax	        49	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	FOR_1	ELSE_4	IF_8	CALL_13
0x400085c	            0x740f	                            je 0x400086d	        49	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	FOR_1	ELSE_4	IF_8	CALL_13
0x400085e	        0x4883c508	                              add rbp, 8	        42	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	FOR_1
0x4000862	        0x488b5d00	                    mov rbx, qword [rbp]	        42	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	FOR_1
0x4000866	          0x4885db	                           test rbx, rbx	        42	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	FOR_1
0x4000869	            0x75c3	                           jne 0x400082e	        42	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	FOR_1
0x400086b	            0xeb05	                           jmp 0x4000872	        42	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	FOR_1
0x400086d	          0x4885db	                           test rbx, rbx	        52	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	IF_9
0x4000870	            0x7512	                           jne 0x4000884	        52	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	IF_9
0x4000872	          0x4c89e6	                            mov rsi, r12	        53	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	CALL_14
0x4000875	      0xbf00000000	                              mov edi, 0	        53	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	CALL_14
0x400087a	      0xb800000000	                              mov eax, 0	        53	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	CALL_14
0x400087f	      0xe800000000	                          call 0x4000884	        53	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	CALL_14
0x4000884	          0x4889df	                            mov rdi, rbx	        55	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	CALL_15
0x4000887	      0xe800000000	                          call 0x400088c	        55	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	CALL_15
0x400088c	          0x4889c5	                            mov rbp, rax	        55	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	CALL_15
0x400088f	          0x4885ed	                           test rbp, rbp	        59	test-ref-store.c	FUNCTION_3	IF_10
0x4000892	            0x750f	                           jne 0x40008a3	        59	test-ref-store.c	FUNCTION_3	IF_10
0x4000894	      0xbf00000000	                              mov edi, 0	        60	test-ref-store.c	FUNCTION_3	CALL_17
0x4000899	      0xb800000000	                              mov eax, 0	        60	test-ref-store.c	FUNCTION_3	CALL_17
0x400089e	      0xe800000000	                          call 0x40008a3	        60	test-ref-store.c	FUNCTION_3	CALL_17
0x40008a3	        0x4d8d6518	                   lea r12, [r13 + 0x18]	       290	test-ref-store.c	FUNCTION_23
0x40008a7	        0x4d8b6d10	            mov r13, qword [r13 + 0x10] 	       290	test-ref-store.c	FUNCTION_23
0x40008ab	          0x4d85ed	                           test r13, r13	       291	test-ref-store.c	FUNCTION_23	IF_1
0x40008ae	            0x740e	                            je 0x40008be	       291	test-ref-store.c	FUNCTION_23	IF_1
0x40008b0	    0x488b35000000	            mov rsi, qword [0x040008b7] 	       293	test-ref-store.c	FUNCTION_23	FOR_1
0x40008b7	          0x4885f6	                           test rsi, rsi	       293	test-ref-store.c	FUNCTION_23	FOR_1
0x40008ba	            0x7511	                           jne 0x40008cd	       293	test-ref-store.c	FUNCTION_23	FOR_1
0x40008bc	            0xeb4e	                           jmp 0x400090c	       293	test-ref-store.c	FUNCTION_23	FOR_1
0x40008be	      0xbf00000000	                              mov edi, 0	       292	test-ref-store.c	FUNCTION_23	CALL_3
0x40008c3	      0xb800000000	                              mov eax, 0	       292	test-ref-store.c	FUNCTION_23	CALL_3
0x40008c8	      0xe800000000	                          call 0x40008cd	       292	test-ref-store.c	FUNCTION_23	CALL_3
0x40008cd	      0xbb00000000	                              mov ebx, 0	       293	test-ref-store.c	FUNCTION_23	FOR_1
0x40008d2	          0x4c89ef	                            mov rdi, r13	       294	test-ref-store.c	FUNCTION_23	FOR_1	IF_2	CALL_4
0x40008d5	      0xe800000000	                          call 0x40008da	       294	test-ref-store.c	FUNCTION_23	FOR_1	IF_2	CALL_4
0x40008da	            0x85c0	                           test eax, eax	       294	test-ref-store.c	FUNCTION_23	FOR_1	IF_2	CALL_4
0x40008dc	            0x7522	                           jne 0x4000900	       294	test-ref-store.c	FUNCTION_23	FOR_1	IF_2	CALL_4
0x40008de	          0x4c89e6	                            mov rsi, r12	       295	test-ref-store.c	FUNCTION_23	FOR_1	CALL_5
0x40008e1	          0x4889ef	                            mov rdi, rbp	       295	test-ref-store.c	FUNCTION_23	FOR_1	CALL_5
0x40008e4	          0xff5308	                    call qword [rbx + 8]	       295	test-ref-store.c	FUNCTION_23	FOR_1	CALL_5
0x40008e7	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       299	test-ref-store.c	FUNCTION_23
0x40008ec	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       299	test-ref-store.c	FUNCTION_23
0x40008f5	     0xf8494000000	                            je 0x400098f	       299	test-ref-store.c	FUNCTION_23
0x40008fb	      0xe98a000000	                           jmp 0x400098a	       299	test-ref-store.c	FUNCTION_23
0x4000900	        0x4883c310	                           add rbx, 0x10	       293	test-ref-store.c	FUNCTION_23	FOR_1
0x4000904	          0x488b33	                    mov rsi, qword [rbx]	       293	test-ref-store.c	FUNCTION_23	FOR_1
0x4000907	          0x4885f6	                           test rsi, rsi	       293	test-ref-store.c	FUNCTION_23	FOR_1
0x400090a	            0x75c6	                           jne 0x40008d2	       293	test-ref-store.c	FUNCTION_23	FOR_1
0x400090c	          0x4c89ee	                            mov rsi, r13	       297	test-ref-store.c	FUNCTION_23	CALL_6
0x400090f	      0xbf00000000	                              mov edi, 0	       297	test-ref-store.c	FUNCTION_23	CALL_6
0x4000914	      0xb800000000	                              mov eax, 0	       297	test-ref-store.c	FUNCTION_23	CALL_6
0x4000919	      0xe800000000	                          call 0x400091e	       297	test-ref-store.c	FUNCTION_23	CALL_6
0x400091e	    0x48c704240000	                      mov qword [rsp], 0	        29	test-ref-store.c	FUNCTION_3	ELSE_2	IF_3
0x4000926	    0x48c744240800	                  mov qword [rsp + 8], 0	        29	test-ref-store.c	FUNCTION_3	ELSE_2	IF_3
0x400092f	    0x48c744241000	               mov qword [rsp + 0x10], 0	        29	test-ref-store.c	FUNCTION_3	ELSE_2	IF_3
0x4000938	      0xba00000000	                              mov edx, 0	        32	test-ref-store.c	FUNCTION_3	ELSE_2	IF_3	CALL_5
0x400093d	          0x4889de	                            mov rsi, rbx	        32	test-ref-store.c	FUNCTION_3	ELSE_2	IF_3	CALL_5
0x4000940	          0x4889e7	                            mov rdi, rsp	        32	test-ref-store.c	FUNCTION_3	ELSE_2	IF_3	CALL_5
0x4000943	      0xb800000000	                              mov eax, 0	        32	test-ref-store.c	FUNCTION_3	ELSE_2	IF_3	CALL_5
0x4000948	      0xe800000000	                          call 0x400094d	        32	test-ref-store.c	FUNCTION_3	ELSE_2	IF_3	CALL_5
0x400094d	            0x85c0	                           test eax, eax	        33	test-ref-store.c	FUNCTION_3	ELSE_2	IF_3	IF_4
0x400094f	     0xf8498feffff	                            je 0x40007ed	        33	test-ref-store.c	FUNCTION_3	ELSE_2	IF_3	IF_4
0x4000955	      0xe982feffff	                           jmp 0x40007dc	        33	test-ref-store.c	FUNCTION_3	ELSE_2	IF_3	IF_4
0x400095a	      0xbf00000000	                              mov edi, 0	        40	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	CALL_11
0x400095f	      0xe800000000	                          call 0x4000964	        40	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	CALL_11
0x4000964	          0x4889c5	                            mov rbp, rax	        40	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	CALL_11
0x4000967	          0x488b18	                    mov rbx, qword [rax]	        42	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	FOR_1
0x400096a	          0x4885db	                           test rbx, rbx	        42	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	FOR_1
0x400096d	     0xf85bbfeffff	                           jne 0x400082e	        42	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	FOR_1
0x4000973	      0xe9fafeffff	                           jmp 0x4000872	        42	test-ref-store.c	FUNCTION_3	ELSE_3	IF_5	FOR_1
0x4000978	          0x4c89c6	                             mov rsi, r8	        57	test-ref-store.c	FUNCTION_3	CALL_16
0x400097b	      0xbf00000000	                              mov edi, 0	        57	test-ref-store.c	FUNCTION_3	CALL_16
0x4000980	      0xb800000000	                              mov eax, 0	        57	test-ref-store.c	FUNCTION_3	CALL_16
0x4000985	      0xe800000000	                          call 0x400098a	        57	test-ref-store.c	FUNCTION_3	CALL_16
0x400098a	      0xe800000000	                          call 0x400098f	       299	test-ref-store.c	FUNCTION_23
0x400098f	        0x4883c428	                           add rsp, 0x28	       299	test-ref-store.c	FUNCTION_23
0x4000993	              0x5b	                                 pop rbx	       299	test-ref-store.c	FUNCTION_23
0x4000994	              0x5d	                                 pop rbp	       299	test-ref-store.c	FUNCTION_23
0x4000995	            0x415c	                                 pop r12	       299	test-ref-store.c	FUNCTION_23
0x4000997	            0x415d	                                 pop r13	       299	test-ref-store.c	FUNCTION_23
0x4000999	              0xc3	                                     ret	       299	test-ref-store.c	FUNCTION_23
cmd_rename_ref	CALL,3:FOR,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:SWITCH,0	21
0x4000593	            0x4154	                                push r12	       109	test-ref-store.c	FUNCTION_8
0x4000595	              0x55	                                push rbp	       109	test-ref-store.c	FUNCTION_8
0x4000596	              0x53	                                push rbx	       109	test-ref-store.c	FUNCTION_8
0x4000597	          0x4889fd	                            mov rbp, rdi	       109	test-ref-store.c	FUNCTION_8
0x400059a	          0x4889f3	                            mov rbx, rsi	       109	test-ref-store.c	FUNCTION_8
0x400059d	      0xbe00000000	                              mov esi, 0	       110	test-ref-store.c	FUNCTION_8	CALL_1
0x40005a2	          0x488b3b	                    mov rdi, qword [rbx]	       110	test-ref-store.c	FUNCTION_8	CALL_1
0x40005a5	      0xe896faffff	                        call sym.notnull	       110	test-ref-store.c	FUNCTION_8	CALL_1
0x40005aa	          0x4989c4	                            mov r12, rax	       110	test-ref-store.c	FUNCTION_8	CALL_1
0x40005ad	        0x488b7b08	                mov rdi, qword [rbx + 8]	       111	test-ref-store.c	FUNCTION_8	CALL_2
0x40005b1	      0xbe00000000	                              mov esi, 0	       111	test-ref-store.c	FUNCTION_8	CALL_2
0x40005b6	      0xe885faffff	                        call sym.notnull	       111	test-ref-store.c	FUNCTION_8	CALL_2
0x40005bb	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       114	test-ref-store.c	FUNCTION_8	CALL_3
0x40005bf	          0x4889c2	                            mov rdx, rax	       114	test-ref-store.c	FUNCTION_8	CALL_3
0x40005c2	          0x4c89e6	                            mov rsi, r12	       114	test-ref-store.c	FUNCTION_8	CALL_3
0x40005c5	          0x4889ef	                            mov rdi, rbp	       114	test-ref-store.c	FUNCTION_8	CALL_3
0x40005c8	      0xe800000000	                          call 0x40005cd	       114	test-ref-store.c	FUNCTION_8	CALL_3
0x40005cd	              0x5b	                                 pop rbx	       115	test-ref-store.c	FUNCTION_8
0x40005ce	              0x5d	                                 pop rbp	       115	test-ref-store.c	FUNCTION_8
0x40005cf	            0x415c	                                 pop r12	       115	test-ref-store.c	FUNCTION_8
0x40005d1	              0xc3	                                     ret	       115	test-ref-store.c	FUNCTION_8
each_ref	CALL,1:FOR,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:SWITCH,0	19
0x40003ab	              0x55	                                push rbp	       119	test-ref-store.c	FUNCTION_9
0x40003ac	              0x53	                                push rbx	       119	test-ref-store.c	FUNCTION_9
0x40003ad	        0x4883ec08	                              sub rsp, 8	       119	test-ref-store.c	FUNCTION_9
0x40003b1	          0x4889fb	                            mov rbx, rdi	       119	test-ref-store.c	FUNCTION_9
0x40003b4	            0x89d5	                            mov ebp, edx	       119	test-ref-store.c	FUNCTION_9
0x40003b6	          0x4889f7	                            mov rdi, rsi	       120	test-ref-store.c	FUNCTION_9	CALL_1
0x40003b9	      0xe800000000	                          call 0x40003be	       120	test-ref-store.c	FUNCTION_9	CALL_1
0x40003be	          0x4189e8	                            mov r8d, ebp	       104	stdio2.h	CALL_12
0x40003c1	          0x4889d9	                            mov rcx, rbx	       104	stdio2.h	CALL_12
0x40003c4	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_12
0x40003c7	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_12
0x40003cc	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_12
0x40003d1	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_12
0x40003d6	      0xe800000000	                          call 0x40003db	       104	stdio2.h	CALL_12
0x40003db	      0xb800000000	                              mov eax, 0	       122	test-ref-store.c	FUNCTION_9
0x40003e0	        0x4883c408	                              add rsp, 8	       122	test-ref-store.c	FUNCTION_9
0x40003e4	              0x5b	                                 pop rbx	       122	test-ref-store.c	FUNCTION_9
0x40003e5	              0x5d	                                 pop rbp	       122	test-ref-store.c	FUNCTION_9
0x40003e6	              0xc3	                                     ret	       122	test-ref-store.c	FUNCTION_9
cmd_for_each_ref	CALL,2:FOR,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:SWITCH,0	13
0x4000568	              0x53	                                push rbx	       125	test-ref-store.c	FUNCTION_10
0x4000569	          0x4889fb	                            mov rbx, rdi	       125	test-ref-store.c	FUNCTION_10
0x400056c	          0x4889f0	                            mov rax, rsi	       125	test-ref-store.c	FUNCTION_10
0x400056f	      0xbe00000000	                              mov esi, 0	       126	test-ref-store.c	FUNCTION_10	CALL_1
0x4000574	          0x488b38	                    mov rdi, qword [rax]	       126	test-ref-store.c	FUNCTION_10	CALL_1
0x4000577	      0xe8c4faffff	                        call sym.notnull	       126	test-ref-store.c	FUNCTION_10	CALL_1
0x400057c	      0xb900000000	                              mov ecx, 0	       128	test-ref-store.c	FUNCTION_10	CALL_2
0x4000581	      0xba00000000	                              mov edx, 0	       128	test-ref-store.c	FUNCTION_10	CALL_2
0x4000586	          0x4889c6	                            mov rsi, rax	       128	test-ref-store.c	FUNCTION_10	CALL_2
0x4000589	          0x4889df	                            mov rdi, rbx	       128	test-ref-store.c	FUNCTION_10	CALL_2
0x400058c	      0xe800000000	                          call 0x4000591	       128	test-ref-store.c	FUNCTION_10	CALL_2
0x4000591	              0x5b	                                 pop rbx	       129	test-ref-store.c	FUNCTION_10
0x4000592	              0xc3	                                     ret	       129	test-ref-store.c	FUNCTION_10
cmd_delete_refs	CALL,3:FOR,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,1:SWITCH,0	47
0x40005d2	            0x4156	                                push r14	        97	test-ref-store.c	FUNCTION_7
0x40005d4	            0x4155	                                push r13	        97	test-ref-store.c	FUNCTION_7
0x40005d6	            0x4154	                                push r12	        97	test-ref-store.c	FUNCTION_7
0x40005d8	              0x55	                                push rbp	        97	test-ref-store.c	FUNCTION_7
0x40005d9	              0x53	                                push rbx	        97	test-ref-store.c	FUNCTION_7
0x40005da	        0x4883ec30	                           sub rsp, 0x30	        97	test-ref-store.c	FUNCTION_7
0x40005de	          0x4989fc	                            mov r12, rdi	        97	test-ref-store.c	FUNCTION_7
0x40005e1	          0x4889f5	                            mov rbp, rsi	        97	test-ref-store.c	FUNCTION_7
0x40005e4	    0x64488b042528	                mov rax, qword fs:[0x28]	        97	test-ref-store.c	FUNCTION_7
0x40005ed	      0x4889442428	             mov qword [rsp + 0x28], rax	        97	test-ref-store.c	FUNCTION_7
0x40005f2	            0x31c0	                            xor eax, eax	        97	test-ref-store.c	FUNCTION_7
0x40005f4	      0xbe00000000	                              mov esi, 0	        98	test-ref-store.c	FUNCTION_7	CALL_1
0x40005f9	        0x488b7d00	                    mov rdi, qword [rbp]	        98	test-ref-store.c	FUNCTION_7	CALL_1
0x40005fd	      0xe86dfaffff	                      call sym.arg_flags	        98	test-ref-store.c	FUNCTION_7	CALL_1
0x4000602	          0x4189c6	                           mov r14d, eax	        98	test-ref-store.c	FUNCTION_7	CALL_1
0x4000605	        0x488d5d10	                   lea rbx, [rbp + 0x10]	        99	test-ref-store.c	FUNCTION_7
0x4000609	        0x4c8b6d08	                mov r13, qword [rbp + 8]	        99	test-ref-store.c	FUNCTION_7
0x400060d	    0x48c704240000	                      mov qword [rsp], 0	       100	test-ref-store.c	FUNCTION_7
0x4000615	    0xc74424080000	                  mov dword [rsp + 8], 0	       100	test-ref-store.c	FUNCTION_7
0x400061d	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       100	test-ref-store.c	FUNCTION_7
0x4000625	      0x80642410fe	             and byte [rsp + 0x10], 0xfe	       100	test-ref-store.c	FUNCTION_7
0x400062a	    0x48c744241800	               mov qword [rsp + 0x18], 0	       100	test-ref-store.c	FUNCTION_7
0x4000633	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	       102	test-ref-store.c	FUNCTION_7	WHILE_1
0x4000637	          0x4885f6	                           test rsi, rsi	       102	test-ref-store.c	FUNCTION_7	WHILE_1
0x400063a	            0x7414	                            je 0x4000650	       102	test-ref-store.c	FUNCTION_7	WHILE_1
0x400063c	        0x4883c308	                              add rbx, 8	       103	test-ref-store.c	FUNCTION_7	CALL_2
0x4000640	          0x4889e7	                            mov rdi, rsp	       103	test-ref-store.c	FUNCTION_7	CALL_2
0x4000643	      0xe800000000	                          call 0x4000648	       103	test-ref-store.c	FUNCTION_7	CALL_2
0x4000648	          0x488b33	                    mov rsi, qword [rbx]	       102	test-ref-store.c	FUNCTION_7	WHILE_1
0x400064b	          0x4885f6	                           test rsi, rsi	       102	test-ref-store.c	FUNCTION_7	WHILE_1
0x400064e	            0x75ec	                           jne 0x400063c	       102	test-ref-store.c	FUNCTION_7	WHILE_1
0x4000650	          0x4489f1	                           mov ecx, r14d	       105	test-ref-store.c	FUNCTION_7	CALL_3
0x4000653	          0x4889e2	                            mov rdx, rsp	       105	test-ref-store.c	FUNCTION_7	CALL_3
0x4000656	          0x4c89ee	                            mov rsi, r13	       105	test-ref-store.c	FUNCTION_7	CALL_3
0x4000659	          0x4c89e7	                            mov rdi, r12	       105	test-ref-store.c	FUNCTION_7	CALL_3
0x400065c	      0xe800000000	                          call 0x4000661	       105	test-ref-store.c	FUNCTION_7	CALL_3
0x4000661	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       106	test-ref-store.c	FUNCTION_7
0x4000666	    0x644833142528	                xor rdx, qword fs:[0x28]	       106	test-ref-store.c	FUNCTION_7
0x400066f	            0x7405	                            je 0x4000676	       106	test-ref-store.c	FUNCTION_7
0x4000671	      0xe800000000	                          call 0x4000676	       106	test-ref-store.c	FUNCTION_7
0x4000676	        0x4883c430	                           add rsp, 0x30	       106	test-ref-store.c	FUNCTION_7
0x400067a	              0x5b	                                 pop rbx	       106	test-ref-store.c	FUNCTION_7
0x400067b	              0x5d	                                 pop rbp	       106	test-ref-store.c	FUNCTION_7
0x400067c	            0x415c	                                 pop r12	       106	test-ref-store.c	FUNCTION_7
0x400067e	            0x415d	                                 pop r13	       106	test-ref-store.c	FUNCTION_7
0x4000680	            0x415e	                                 pop r14	       106	test-ref-store.c	FUNCTION_7
0x4000682	              0xc3	                                     ret	       106	test-ref-store.c	FUNCTION_7
cmd_delete_reflog	CALL,2:FOR,0:functions,0:DO,0:ELSE,0:IF,0:WHILE,0:SWITCH,0	11
0x4000236	              0x53	                                push rbx	       207	test-ref-store.c	FUNCTION_19
0x4000237	          0x4889fb	                            mov rbx, rdi	       207	test-ref-store.c	FUNCTION_19
0x400023a	          0x4889f0	                            mov rax, rsi	       207	test-ref-store.c	FUNCTION_19
0x400023d	      0xbe00000000	                              mov esi, 0	       208	test-ref-store.c	FUNCTION_19	CALL_1
0x4000242	          0x488b38	                    mov rdi, qword [rax]	       208	test-ref-store.c	FUNCTION_19	CALL_1
0x4000245	      0xe8f6fdffff	                        call sym.notnull	       208	test-ref-store.c	FUNCTION_19	CALL_1
0x400024a	          0x4889c6	                            mov rsi, rax	       210	test-ref-store.c	FUNCTION_19	CALL_2
0x400024d	          0x4889df	                            mov rdi, rbx	       210	test-ref-store.c	FUNCTION_19	CALL_2
0x4000250	      0xe800000000	                          call 0x4000255	       210	test-ref-store.c	FUNCTION_19	CALL_2
0x4000255	              0x5b	                                 pop rbx	       211	test-ref-store.c	FUNCTION_19
0x4000256	              0xc3	                                     ret	       211	test-ref-store.c	FUNCTION_19
