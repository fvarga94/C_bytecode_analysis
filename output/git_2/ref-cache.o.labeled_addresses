free_ref_entry	DO,0:FOR,0:CALL,2:ELSE,0:functions,0:WHILE,0:IF,1:SWITCH,0	24
0x4000091	              0x55	                                push rbp	        59	ref-cache.c	FUNCTION_5
0x4000092	              0x53	                                push rbx	        59	ref-cache.c	FUNCTION_5
0x4000093	        0x4883ec08	                              sub rsp, 8	        59	ref-cache.c	FUNCTION_5
0x4000097	          0x4889fd	                            mov rbp, rdi	        59	ref-cache.c	FUNCTION_5
0x400009a	          0xf60710	                   test byte [rdi], 0x10	        60	ref-cache.c	FUNCTION_5	IF_1
0x400009d	            0x742c	                            je 0x40000cb	        60	ref-cache.c	FUNCTION_5	IF_1
0x400009f	        0x837f0800	                  cmp dword [rdi + 8], 0	        82	ref-cache.c	FUNCTION_7	FOR_1
0x40000a3	            0x7e1d	                           jle 0x40000c2	        82	ref-cache.c	FUNCTION_7	FOR_1
0x40000a5	      0xbb00000000	                              mov ebx, 0	        82	ref-cache.c	FUNCTION_7	FOR_1
0x40000aa	          0x4863d3	                         movsxd rdx, ebx	        83	ref-cache.c	FUNCTION_7	CALL_1
0x40000ad	        0x488b4520	            mov rax, qword [rbp + 0x20] 	        83	ref-cache.c	FUNCTION_7	CALL_1
0x40000b1	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	        83	ref-cache.c	FUNCTION_7	CALL_1
0x40000b5	      0xe8d7ffffff	                 call sym.free_ref_entry	        83	ref-cache.c	FUNCTION_7	CALL_1
0x40000ba	          0x83c301	                              add ebx, 1	        82	ref-cache.c	FUNCTION_7	FOR_1
0x40000bd	          0x3b5d08	                cmp ebx, dword [rbp + 8]	        82	ref-cache.c	FUNCTION_7	FOR_1
0x40000c0	            0x7ce8	                            jl 0x40000aa	        82	ref-cache.c	FUNCTION_7	FOR_1
0x40000c2	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	        84	ref-cache.c	FUNCTION_7
0x40000c6	      0xe800000000	                          call 0x40000cb	        84	ref-cache.c	FUNCTION_7
0x40000cb	          0x4889ef	                            mov rdi, rbp	        67	ref-cache.c	FUNCTION_5	CALL_2
0x40000ce	      0xe800000000	                          call 0x40000d3	        67	ref-cache.c	FUNCTION_5	CALL_2
0x40000d3	        0x4883c408	                              add rsp, 8	        68	ref-cache.c	FUNCTION_5
0x40000d7	              0x5b	                                 pop rbx	        68	ref-cache.c	FUNCTION_5
0x40000d8	              0x5d	                                 pop rbp	        68	ref-cache.c	FUNCTION_5
0x40000d9	              0xc3	                                     ret	        68	ref-cache.c	FUNCTION_5
create_ref_entry	DO,0:FOR,0:CALL,1:ELSE,0:functions,0:WHILE,0:IF,0:SWITCH,0	48
0x4000534	            0x4156	                                push r14	        36	ref-cache.c	FUNCTION_3
0x4000536	            0x4155	                                push r13	        36	ref-cache.c	FUNCTION_3
0x4000538	            0x4154	                                push r12	        36	ref-cache.c	FUNCTION_3
0x400053a	              0x55	                                push rbp	        36	ref-cache.c	FUNCTION_3
0x400053b	              0x53	                                push rbx	        36	ref-cache.c	FUNCTION_3
0x400053c	          0x4989fc	                            mov r12, rdi	        36	ref-cache.c	FUNCTION_3
0x400053f	      0xb800000000	                              mov eax, 0	        39	ref-cache.c	FUNCTION_3
0x4000544	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	        39	ref-cache.c	FUNCTION_3
0x400054b	            0xf2ae	              repne scasb al, byte [rdi]	        39	ref-cache.c	FUNCTION_3
0x400054d	          0x48f7d1	                                 not rcx	        39	ref-cache.c	FUNCTION_3
0x4000550	        0x488d59ff	                      lea rbx, [rcx - 1]	        39	ref-cache.c	FUNCTION_3
0x4000554	        0x4883fbd7	             cmp rbx, 0xffffffffffffffd7	       785	git-compat-util.h	FUNCTION_38	IF_1
0x4000558	            0x7612	                           jbe 0x400056c	       785	git-compat-util.h	FUNCTION_38	IF_1
0x400055a	          0x4889da	                            mov rdx, rbx	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x400055d	      0xbe28000000	                           mov esi, 0x28	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x4000562	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x4000567	      0xe800000000	                          call 0x400056c	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x400056c	          0x4889f5	                            mov rbp, rsi	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x400056f	          0x4189d5	                           mov r13d, edx	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x4000572	        0x4883fbd7	             cmp rbx, 0xffffffffffffffd7	       785	git-compat-util.h	FUNCTION_38	IF_1
0x4000576	            0x751b	                           jne 0x4000593	       785	git-compat-util.h	FUNCTION_38	IF_1
0x4000578	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x400057d	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x4000584	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x4000589	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x400058e	      0xe800000000	                          call 0x4000593	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x4000593	        0x488d7329	                   lea rsi, [rbx + 0x29]	        39	ref-cache.c	FUNCTION_3
0x4000597	      0xbf01000000	                              mov edi, 1	        39	ref-cache.c	FUNCTION_3
0x400059c	      0xe800000000	                          call 0x40005a1	        39	ref-cache.c	FUNCTION_3
0x40005a1	          0x4989c6	                            mov r14, rax	        39	ref-cache.c	FUNCTION_3
0x40005a4	        0x488d7828	                   lea rdi, [rax + 0x28]	        53	string3.h	FUNCTION_52	CALL_3
0x40005a8	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_52	CALL_3
0x40005ab	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_52	CALL_3
0x40005ae	      0xe800000000	                          call 0x40005b3	        53	string3.h	FUNCTION_52	CALL_3
0x40005b3	        0x488b5500	                    mov rdx, qword [rbp]	        53	string3.h	FUNCTION_52	CALL_3
0x40005b7	        0x49895608	                mov qword [r14 + 8], rdx	        53	string3.h	FUNCTION_52	CALL_3
0x40005bb	        0x488b5508	                mov rdx, qword [rbp + 8]	        53	string3.h	FUNCTION_52	CALL_3
0x40005bf	        0x49895610	             mov qword [r14 + 0x10], rdx	        53	string3.h	FUNCTION_52	CALL_3
0x40005c3	          0x8b5510	            mov edx, dword [rbp + 0x10] 	        53	string3.h	FUNCTION_52	CALL_3
0x40005c6	        0x41895618	             mov dword [r14 + 0x18], edx	        53	string3.h	FUNCTION_52	CALL_3
0x40005ca	          0x45882e	                    mov byte [r14], r13b	        41	ref-cache.c	FUNCTION_3
0x40005cd	          0x4c89f0	                            mov rax, r14	        43	ref-cache.c	FUNCTION_3
0x40005d0	              0x5b	                                 pop rbx	        43	ref-cache.c	FUNCTION_3
0x40005d1	              0x5d	                                 pop rbp	        43	ref-cache.c	FUNCTION_3
0x40005d2	            0x415c	                                 pop r12	        43	ref-cache.c	FUNCTION_3
0x40005d4	            0x415d	                                 pop r13	        43	ref-cache.c	FUNCTION_3
0x40005d6	            0x415e	                                 pop r14	        43	ref-cache.c	FUNCTION_3
0x40005d8	              0xc3	                                     ret	        43	ref-cache.c	FUNCTION_3
search_ref_dir	DO,0:FOR,0:CALL,2:ELSE,0:functions,0:WHILE,0:IF,2:SWITCH,0	68
0x40006c3	          0x4885f6	                           test rsi, rsi	       129	ref-cache.c	FUNCTION_11	IF_1
0x40006c6	     0xf84be000000	                            je 0x400078a	       129	ref-cache.c	FUNCTION_11	IF_1
0x40006cc	      0xb8ffffffff	                     mov eax, 0xffffffff	       130	ref-cache.c	FUNCTION_11	IF_1
0x40006d1	          0x833f00	                      cmp dword [rdi], 0	       129	ref-cache.c	FUNCTION_11	IF_1
0x40006d4	     0xf84c9000000	                            je 0x40007a3	       129	ref-cache.c	FUNCTION_11	IF_1
0x40006da	            0x4157	                                push r15	       125	ref-cache.c	FUNCTION_11
0x40006dc	            0x4156	                                push r14	       125	ref-cache.c	FUNCTION_11
0x40006de	            0x4155	                                push r13	       125	ref-cache.c	FUNCTION_11
0x40006e0	            0x4154	                                push r12	       125	ref-cache.c	FUNCTION_11
0x40006e2	              0x55	                                push rbp	       125	ref-cache.c	FUNCTION_11
0x40006e3	              0x53	                                push rbx	       125	ref-cache.c	FUNCTION_11
0x40006e4	        0x4883ec28	                           sub rsp, 0x28	       125	ref-cache.c	FUNCTION_11
0x40006e8	          0x4989d7	                            mov r15, rdx	       125	ref-cache.c	FUNCTION_11
0x40006eb	      0x4889742418	             mov qword [rsp + 0x18], rsi	       125	ref-cache.c	FUNCTION_11
0x40006f0	          0x4889fb	                            mov rbx, rdi	       125	ref-cache.c	FUNCTION_11
0x40006f3	      0xe8e2f9ffff	                   call sym.sort_ref_dir	       132	ref-cache.c	FUNCTION_11	CALL_1
0x40006f8	          0x486303	                 movsxd rax, dword [rbx]	       135	ref-cache.c	FUNCTION_11	CALL_2
0x40006fb	      0x4889442408	                mov qword [rsp + 8], rax	       135	ref-cache.c	FUNCTION_11	CALL_2
0x4000700	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       135	ref-cache.c	FUNCTION_11	CALL_2
0x4000704	      0x4889442410	             mov qword [rsp + 0x10], rax	       135	ref-cache.c	FUNCTION_11	CALL_2
0x4000709	    0x41bd00000000	                             mov r13d, 0	        27	stdlib-bsearch.h	FUNCTION_64
0x400070f	            0xeb4c	                           jmp 0x400075d	        27	stdlib-bsearch.h	FUNCTION_64
0x4000711	      0x488b442408	                mov rax, qword [rsp + 8]	        31	stdlib-bsearch.h	FUNCTION_64	WHILE_1
0x4000716	      0x498d5c0500	                    lea rbx, [r13 + rax]	        31	stdlib-bsearch.h	FUNCTION_64	WHILE_1
0x400071b	          0x48d1eb	                              shr rbx, 1	        31	stdlib-bsearch.h	FUNCTION_64	WHILE_1
0x400071e	    0x4c8d24dd0000	                        lea r12, [rbx*8]	        32	stdlib-bsearch.h	FUNCTION_64	WHILE_1
0x4000726	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        32	stdlib-bsearch.h	FUNCTION_64	WHILE_1
0x400072b	        0x4e8d3420	                    lea r14, [rax + r12]	        32	stdlib-bsearch.h	FUNCTION_64	WHILE_1
0x400072f	          0x498b2e	                    mov rbp, qword [r14]	       117	ref-cache.c	FUNCTION_10
0x4000732	        0x488d7528	                   lea rsi, [rbp + 0x28]	       118	ref-cache.c	FUNCTION_10	CALL_1
0x4000736	          0x4c89fa	                            mov rdx, r15	       118	ref-cache.c	FUNCTION_10	CALL_1
0x4000739	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       118	ref-cache.c	FUNCTION_10	CALL_1
0x400073e	      0xe800000000	                          call 0x4000743	       118	ref-cache.c	FUNCTION_10	CALL_1
0x4000743	            0x89c2	                            mov edx, eax	       120	ref-cache.c	FUNCTION_10	IF_1
0x4000745	            0x85c0	                           test eax, eax	       119	ref-cache.c	FUNCTION_10	IF_1
0x4000747	            0x7508	                           jne 0x4000751	       119	ref-cache.c	FUNCTION_10	IF_1
0x4000749	    0x420fb6543d28	     movzx edx, byte [rbp + r15 + 0x28] 	       121	ref-cache.c	FUNCTION_10
0x400074f	            0xf7da	                                 neg edx	       121	ref-cache.c	FUNCTION_10
0x4000751	            0x85d2	                           test edx, edx	        34	stdlib-bsearch.h	FUNCTION_64	WHILE_1	IF_1
0x4000753	            0x7816	                            js 0x400076b	        34	stdlib-bsearch.h	FUNCTION_64	WHILE_1	IF_1
0x4000755	            0x85d2	                           test edx, edx	        36	stdlib-bsearch.h	FUNCTION_64	WHILE_1	ELSE_1	IF_2
0x4000757	            0x7e23	                           jle 0x400077c	        36	stdlib-bsearch.h	FUNCTION_64	WHILE_1	ELSE_1	IF_2
0x4000759	        0x4c8d6b01	                      lea r13, [rbx + 1]	        37	stdlib-bsearch.h	FUNCTION_64	WHILE_1	ELSE_1	IF_2
0x400075d	      0x4c3b6c2408	                cmp r13, qword [rsp + 8]	        29	stdlib-bsearch.h	FUNCTION_64	WHILE_1
0x4000762	            0x72ad	                            jb 0x4000711	        29	stdlib-bsearch.h	FUNCTION_64	WHILE_1
0x4000764	      0xb8ffffffff	                     mov eax, 0xffffffff	       139	ref-cache.c	FUNCTION_11	IF_2
0x4000769	            0xeb2a	                           jmp 0x4000795	       139	ref-cache.c	FUNCTION_11	IF_2
0x400076b	      0x48895c2408	                mov qword [rsp + 8], rbx	        31	stdlib-bsearch.h	FUNCTION_64	WHILE_1
0x4000770	          0x4939dd	                            cmp r13, rbx	        29	stdlib-bsearch.h	FUNCTION_64	WHILE_1
0x4000773	            0x729c	                            jb 0x4000711	        29	stdlib-bsearch.h	FUNCTION_64	WHILE_1
0x4000775	      0xb8ffffffff	                     mov eax, 0xffffffff	       139	ref-cache.c	FUNCTION_11	IF_2
0x400077a	            0xeb19	                           jmp 0x4000795	       139	ref-cache.c	FUNCTION_11	IF_2
0x400077c	          0x4d85f6	                           test r14, r14	       138	ref-cache.c	FUNCTION_11	IF_2
0x400077f	            0x740f	                            je 0x4000790	       138	ref-cache.c	FUNCTION_11	IF_2
0x4000781	        0x49c1ec03	                              shr r12, 3	       141	ref-cache.c	FUNCTION_11
0x4000785	          0x4c89e0	                            mov rax, r12	       141	ref-cache.c	FUNCTION_11
0x4000788	            0xeb0b	                           jmp 0x4000795	       141	ref-cache.c	FUNCTION_11
0x400078a	      0xb8ffffffff	                     mov eax, 0xffffffff	       130	ref-cache.c	FUNCTION_11	IF_1
0x400078f	              0xc3	                                     ret	       142	ref-cache.c	FUNCTION_11
0x4000790	      0xb8ffffffff	                     mov eax, 0xffffffff	       139	ref-cache.c	FUNCTION_11	IF_2
0x4000795	        0x4883c428	                           add rsp, 0x28	       142	ref-cache.c	FUNCTION_11
0x4000799	              0x5b	                                 pop rbx	       142	ref-cache.c	FUNCTION_11
0x400079a	              0x5d	                                 pop rbp	       142	ref-cache.c	FUNCTION_11
0x400079b	            0x415c	                                 pop r12	       142	ref-cache.c	FUNCTION_11
0x400079d	            0x415d	                                 pop r13	       142	ref-cache.c	FUNCTION_11
0x400079f	            0x415e	                                 pop r14	       142	ref-cache.c	FUNCTION_11
0x40007a1	            0x415f	                                 pop r15	       142	ref-cache.c	FUNCTION_11
0x40007a3	            0xf3c3	                                     ret	       142	ref-cache.c	FUNCTION_11
cache_ref_iterator_abort	DO,0:FOR,0:CALL,3:ELSE,0:functions,0:WHILE,0:IF,0:SWITCH,0	11
0x4000200	              0x53	                                push rbx	       498	ref-cache.c	FUNCTION_23
0x4000201	          0x4889fb	                            mov rbx, rdi	       498	ref-cache.c	FUNCTION_23
0x4000204	        0x488b7f38	            mov rdi, qword [rdi + 0x38] 	       502	ref-cache.c	FUNCTION_23	CALL_1
0x4000208	      0xe800000000	                          call 0x400020d	       502	ref-cache.c	FUNCTION_23	CALL_1
0x400020d	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	       503	ref-cache.c	FUNCTION_23	CALL_2
0x4000211	      0xe800000000	                          call 0x4000216	       503	ref-cache.c	FUNCTION_23	CALL_2
0x4000216	          0x4889df	                            mov rdi, rbx	       504	ref-cache.c	FUNCTION_23	CALL_3
0x4000219	      0xe800000000	                          call 0x400021e	       504	ref-cache.c	FUNCTION_23	CALL_3
0x400021e	      0xb8ffffffff	                     mov eax, 0xffffffff	       506	ref-cache.c	FUNCTION_23
0x4000223	              0x5b	                                 pop rbx	       506	ref-cache.c	FUNCTION_23
0x4000224	              0xc3	                                     ret	       506	ref-cache.c	FUNCTION_23
remove_entry_from_dir	DO,0:FOR,0:CALL,7:ELSE,1:functions,0:WHILE,0:IF,4:SWITCH,0	82
0x40008c8	            0x4155	                                push r13	       216	ref-cache.c	FUNCTION_15
0x40008ca	            0x4154	                                push r12	       216	ref-cache.c	FUNCTION_15
0x40008cc	              0x55	                                push rbp	       216	ref-cache.c	FUNCTION_15
0x40008cd	              0x53	                                push rbx	       216	ref-cache.c	FUNCTION_15
0x40008ce	        0x4883ec08	                              sub rsp, 8	       216	ref-cache.c	FUNCTION_15
0x40008d2	          0x4889fd	                            mov rbp, rdi	       216	ref-cache.c	FUNCTION_15
0x40008d5	          0x4889f3	                            mov rbx, rsi	       216	ref-cache.c	FUNCTION_15
0x40008d8	      0xb800000000	                              mov eax, 0	       217	ref-cache.c	FUNCTION_15	CALL_1
0x40008dd	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       217	ref-cache.c	FUNCTION_15	CALL_1
0x40008e4	          0x4889f7	                            mov rdi, rsi	       217	ref-cache.c	FUNCTION_15	CALL_1
0x40008e7	            0xf2ae	              repne scasb al, byte [rdi]	       217	ref-cache.c	FUNCTION_15	CALL_1
0x40008e9	          0x48f7d1	                                 not rcx	       217	ref-cache.c	FUNCTION_15	CALL_1
0x40008ec	        0x4883e901	                              sub rcx, 1	       217	ref-cache.c	FUNCTION_15	CALL_1
0x40008f0	          0x4c63e1	                         movsxd r12, ecx	       220	ref-cache.c	FUNCTION_15
0x40008f3	    0x42807c26ff2f	         cmp byte [rsi + r12 - 1], 0x2f 	       221	ref-cache.c	FUNCTION_15	IF_1
0x40008f9	            0x752e	                           jne 0x4000929	       221	ref-cache.c	FUNCTION_15	IF_1
0x40008fb	          0x83e901	                              sub ecx, 1	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x40008fe	          0x4863f1	                         movsxd rsi, ecx	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x4000901	          0x4889df	                            mov rdi, rbx	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x4000904	      0xe800000000	                          call 0x4000909	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x4000909	          0x4989c5	                            mov r13, rax	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x400090c	      0xba00000000	                              mov edx, 0	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0x4000911	          0x4889c6	                            mov rsi, rax	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0x4000914	          0x4889ef	                            mov rdi, rbp	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0x4000917	      0xe889feffff	            call sym.find_containing_dir	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0x400091c	          0x4889c5	                            mov rbp, rax	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0x400091f	          0x4c89ef	                            mov rdi, r13	       230	ref-cache.c	FUNCTION_15	IF_1	CALL_4
0x4000922	      0xe800000000	                          call 0x4000927	       230	ref-cache.c	FUNCTION_15	IF_1	CALL_4
0x4000927	            0xeb10	                           jmp 0x4000939	       230	ref-cache.c	FUNCTION_15	IF_1	CALL_4
0x4000929	      0xba00000000	                              mov edx, 0	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0x400092e	          0x4889ef	                            mov rdi, rbp	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0x4000931	      0xe86ffeffff	            call sym.find_containing_dir	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0x4000936	          0x4889c5	                            mov rbp, rax	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0x4000939	          0x4885ed	                           test rbp, rbp	       234	ref-cache.c	FUNCTION_15	IF_2
0x400093c	     0xf8484000000	                            je 0x40009c6	       234	ref-cache.c	FUNCTION_15	IF_2
0x4000942	          0x4c89e2	                            mov rdx, r12	       236	ref-cache.c	FUNCTION_15	CALL_6
0x4000945	          0x4889de	                            mov rsi, rbx	       236	ref-cache.c	FUNCTION_15	CALL_6
0x4000948	          0x4889ef	                            mov rdi, rbp	       236	ref-cache.c	FUNCTION_15	CALL_6
0x400094b	      0xe800000000	                          call 0x4000950	       236	ref-cache.c	FUNCTION_15	CALL_6
0x4000950	            0x89c3	                            mov ebx, eax	       236	ref-cache.c	FUNCTION_15	CALL_6
0x4000952	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       237	ref-cache.c	FUNCTION_15	IF_3
0x4000955	            0x7476	                            je 0x40009cd	       237	ref-cache.c	FUNCTION_15	IF_3
0x4000957	        0x488b4d18	            mov rcx, qword [rbp + 0x18] 	       239	ref-cache.c	FUNCTION_15
0x400095b	            0x4898	                                    cdqe	       239	ref-cache.c	FUNCTION_15
0x400095d	        0x48c1e003	                              shl rax, 3	       239	ref-cache.c	FUNCTION_15
0x4000961	        0x488d3c01	                    lea rdi, [rcx + rax]	       239	ref-cache.c	FUNCTION_15
0x4000965	          0x4c8b27	                    mov r12, qword [rdi]	       239	ref-cache.c	FUNCTION_15
0x4000968	            0x89da	                            mov edx, ebx	       241	ref-cache.c	FUNCTION_15
0x400096a	            0xf7d2	                                 not edx	       241	ref-cache.c	FUNCTION_15
0x400096c	           0x35500	                    add edx, dword [rbp]	       241	ref-cache.c	FUNCTION_15
0x400096f	          0x4863d2	                         movsxd rdx, edx	       241	ref-cache.c	FUNCTION_15
0x4000972	          0x4885d2	                           test rdx, rdx	       861	git-compat-util.h	FUNCTION_42	IF_1
0x4000975	            0x7431	                            je 0x40009a8	       861	git-compat-util.h	FUNCTION_42	IF_1
0x4000977	    0x48beffffffff	         movabs rsi, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_39	IF_1
0x4000981	          0x4839f2	                            cmp rdx, rsi	       795	git-compat-util.h	FUNCTION_39	IF_1
0x4000984	            0x7614	                           jbe 0x400099a	       795	git-compat-util.h	FUNCTION_39	IF_1
0x4000986	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x400098b	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x4000990	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x4000995	      0xe800000000	                          call 0x400099a	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x400099a	        0x48c1e203	                              shl rdx, 3	        59	string3.h	FUNCTION_53	CALL_3
0x400099e	      0x488d740108	                lea rsi, [rcx + rax + 8]	        59	string3.h	FUNCTION_53	CALL_3
0x40009a3	      0xe800000000	                          call 0x40009a8	        59	string3.h	FUNCTION_53	CALL_3
0x40009a8	        0x836d0001	                      sub dword [rbp], 1	       243	ref-cache.c	FUNCTION_15
0x40009ac	          0x8b4508	                mov eax, dword [rbp + 8]	       244	ref-cache.c	FUNCTION_15	IF_4
0x40009af	            0x39c3	                            cmp ebx, eax	       244	ref-cache.c	FUNCTION_15	IF_4
0x40009b1	            0x7d06	                           jge 0x40009b9	       244	ref-cache.c	FUNCTION_15	IF_4
0x40009b3	          0x83e801	                              sub eax, 1	       245	ref-cache.c	FUNCTION_15	IF_4
0x40009b6	          0x894508	                mov dword [rbp + 8], eax	       245	ref-cache.c	FUNCTION_15	IF_4
0x40009b9	          0x4c89e7	                            mov rdi, r12	       246	ref-cache.c	FUNCTION_15	CALL_7
0x40009bc	      0xe8d0f6ffff	                 call sym.free_ref_entry	       246	ref-cache.c	FUNCTION_15	CALL_7
0x40009c1	          0x8b4500	                    mov eax, dword [rbp]	       247	ref-cache.c	FUNCTION_15
0x40009c4	            0xeb0c	                           jmp 0x40009d2	       247	ref-cache.c	FUNCTION_15
0x40009c6	      0xb8ffffffff	                     mov eax, 0xffffffff	       235	ref-cache.c	FUNCTION_15	IF_2
0x40009cb	            0xeb05	                           jmp 0x40009d2	       235	ref-cache.c	FUNCTION_15	IF_2
0x40009cd	      0xb8ffffffff	                     mov eax, 0xffffffff	       238	ref-cache.c	FUNCTION_15	IF_3
0x40009d2	        0x4883c408	                              add rsp, 8	       248	ref-cache.c	FUNCTION_15
0x40009d6	              0x5b	                                 pop rbx	       248	ref-cache.c	FUNCTION_15
0x40009d7	              0x5d	                                 pop rbp	       248	ref-cache.c	FUNCTION_15
0x40009d8	            0x415c	                                 pop r12	       248	ref-cache.c	FUNCTION_15
0x40009da	            0x415d	                                 pop r13	       248	ref-cache.c	FUNCTION_15
0x40009dc	              0xc3	                                     ret	       248	ref-cache.c	FUNCTION_15
create_dir_entry	DO,0:FOR,0:CALL,0:ELSE,0:functions,0:WHILE,0:IF,0:SWITCH,0	43
0x40005ef	            0x4156	                                push r14	        91	ref-cache.c	FUNCTION_8
0x40005f1	            0x4155	                                push r13	        91	ref-cache.c	FUNCTION_8
0x40005f3	            0x4154	                                push r12	        91	ref-cache.c	FUNCTION_8
0x40005f5	              0x55	                                push rbp	        91	ref-cache.c	FUNCTION_8
0x40005f6	              0x53	                                push rbx	        91	ref-cache.c	FUNCTION_8
0x40005f7	          0x4889d3	                            mov rbx, rdx	        91	ref-cache.c	FUNCTION_8
0x40005fa	        0x4883fad7	             cmp rdx, 0xffffffffffffffd7	       785	git-compat-util.h	FUNCTION_38	IF_1
0x40005fe	            0x7614	                           jbe 0x4000614	       785	git-compat-util.h	FUNCTION_38	IF_1
0x4000600	      0xbe28000000	                           mov esi, 0x28	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x4000605	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x400060a	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x400060f	      0xe800000000	                          call 0x4000614	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x4000614	          0x4989fd	                            mov r13, rdi	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x4000617	          0x4989f6	                            mov r14, rsi	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x400061a	          0x4189cc	                           mov r12d, ecx	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x400061d	        0x4883fad7	             cmp rdx, 0xffffffffffffffd7	       785	git-compat-util.h	FUNCTION_38	IF_1
0x4000621	            0x751b	                           jne 0x400063e	       785	git-compat-util.h	FUNCTION_38	IF_1
0x4000623	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x4000628	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x400062f	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x4000634	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x4000639	      0xe800000000	                          call 0x400063e	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x400063e	        0x488d7229	                   lea rsi, [rdx + 0x29]	        94	ref-cache.c	FUNCTION_8
0x4000642	      0xbf01000000	                              mov edi, 1	        94	ref-cache.c	FUNCTION_8
0x4000647	      0xe800000000	                          call 0x400064c	        94	ref-cache.c	FUNCTION_8
0x400064c	          0x4889c5	                            mov rbp, rax	        94	ref-cache.c	FUNCTION_8
0x400064f	        0x488d7828	                   lea rdi, [rax + 0x28]	        53	string3.h	FUNCTION_52	CALL_3
0x4000653	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_52	CALL_3
0x4000656	          0x4c89f6	                            mov rsi, r14	        53	string3.h	FUNCTION_52	CALL_3
0x4000659	      0xe800000000	                          call 0x400065e	        53	string3.h	FUNCTION_52	CALL_3
0x400065e	        0x4c896d18	            mov qword [rbp + 0x18], r13 	        95	ref-cache.c	FUNCTION_8
0x4000662	        0x4183fc01	                             cmp r12d, 1	        96	ref-cache.c	FUNCTION_8
0x4000666	            0x19c0	                            sbb eax, eax	        96	ref-cache.c	FUNCTION_8
0x4000668	          0x83e0e0	                     and eax, 0xffffffe0	        96	ref-cache.c	FUNCTION_8
0x400066b	          0x83c030	                           add eax, 0x30	        96	ref-cache.c	FUNCTION_8
0x400066e	          0x884500	                      mov byte [rbp], al	        96	ref-cache.c	FUNCTION_8
0x4000671	          0x4889e8	                            mov rax, rbp	        98	ref-cache.c	FUNCTION_8
0x4000674	              0x5b	                                 pop rbx	        98	ref-cache.c	FUNCTION_8
0x4000675	              0x5d	                                 pop rbp	        98	ref-cache.c	FUNCTION_8
0x4000676	            0x415c	                                 pop r12	        98	ref-cache.c	FUNCTION_8
0x4000678	            0x415d	                                 pop r13	        98	ref-cache.c	FUNCTION_8
0x400067a	            0x415e	                                 pop r14	        98	ref-cache.c	FUNCTION_8
0x400067c	              0xc3	                                     ret	        98	ref-cache.c	FUNCTION_8
add_entry_to_dir	DO,0:FOR,0:CALL,1:ELSE,0:functions,0:WHILE,0:IF,1:SWITCH,0	58
0x4000237	              0x55	                                push rbp	         8	ref-cache.c	FUNCTION_1
0x4000238	              0x53	                                push rbx	         8	ref-cache.c	FUNCTION_1
0x4000239	        0x4883ec08	                              sub rsp, 8	         8	ref-cache.c	FUNCTION_1
0x400023d	          0x4889fb	                            mov rbx, rdi	         8	ref-cache.c	FUNCTION_1
0x4000240	          0x4889f5	                            mov rbp, rsi	         8	ref-cache.c	FUNCTION_1
0x4000243	            0x8b07	                    mov eax, dword [rdi]	         9	ref-cache.c	FUNCTION_1
0x4000245	          0x8d5001	                      lea edx, [rax + 1]	         9	ref-cache.c	FUNCTION_1
0x4000248	          0x8b4704	                mov eax, dword [rdi + 4]	         9	ref-cache.c	FUNCTION_1
0x400024b	            0x39c2	                            cmp edx, eax	         9	ref-cache.c	FUNCTION_1
0x400024d	            0x7e50	                           jle 0x400029f	         9	ref-cache.c	FUNCTION_1
0x400024f	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	         9	ref-cache.c	FUNCTION_1
0x4000253	            0x89c6	                            mov esi, eax	         9	ref-cache.c	FUNCTION_1
0x4000255	          0xc1ee1f	                           shr esi, 0x1f	         9	ref-cache.c	FUNCTION_1
0x4000258	             0x1c6	                            add esi, eax	         9	ref-cache.c	FUNCTION_1
0x400025a	            0xd1fe	                              sar esi, 1	         9	ref-cache.c	FUNCTION_1
0x400025c	            0x39f2	                            cmp edx, esi	         9	ref-cache.c	FUNCTION_1
0x400025e	           0xf4ff2	                          cmovg esi, edx	         9	ref-cache.c	FUNCTION_1
0x4000261	          0x897704	                mov dword [rdi + 4], esi	         9	ref-cache.c	FUNCTION_1
0x4000264	          0x4863d6	                         movsxd rdx, esi	         9	ref-cache.c	FUNCTION_1
0x4000267	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_39	IF_1
0x4000271	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_39	IF_1
0x4000274	            0x7614	                           jbe 0x400028a	       795	git-compat-util.h	FUNCTION_39	IF_1
0x4000276	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x400027b	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x4000280	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x4000285	      0xe800000000	                          call 0x400028a	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x400028a	    0x488d34d50000	                        lea rsi, [rdx*8]	         9	ref-cache.c	FUNCTION_1
0x4000292	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	         9	ref-cache.c	FUNCTION_1
0x4000296	      0xe800000000	                          call 0x400029b	         9	ref-cache.c	FUNCTION_1
0x400029b	        0x48894318	             mov qword [rbx + 0x18], rax	         9	ref-cache.c	FUNCTION_1
0x400029f	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	        10	ref-cache.c	FUNCTION_1
0x40002a3	            0x8b03	                    mov eax, dword [rbx]	        10	ref-cache.c	FUNCTION_1
0x40002a5	          0x8d4801	                      lea ecx, [rax + 1]	        10	ref-cache.c	FUNCTION_1
0x40002a8	            0x890b	                    mov dword [rbx], ecx	        10	ref-cache.c	FUNCTION_1
0x40002aa	            0x4898	                                    cdqe	        10	ref-cache.c	FUNCTION_1
0x40002ac	        0x48892cc2	            mov qword [rdx + rax*8], rbp	        10	ref-cache.c	FUNCTION_1
0x40002b0	            0x8b2b	                    mov ebp, dword [rbx]	        12	ref-cache.c	FUNCTION_1	IF_1
0x40002b2	          0x83fd01	                              cmp ebp, 1	        12	ref-cache.c	FUNCTION_1	IF_1
0x40002b5	            0x7430	                            je 0x40002e7	        12	ref-cache.c	FUNCTION_1	IF_1
0x40002b7	          0x8b4308	                mov eax, dword [rbx + 8]	        12	ref-cache.c	FUNCTION_1	IF_1
0x40002ba	          0x83c001	                              add eax, 1	        12	ref-cache.c	FUNCTION_1	IF_1
0x40002bd	            0x39c5	                            cmp ebp, eax	        12	ref-cache.c	FUNCTION_1	IF_1
0x40002bf	            0x7529	                           jne 0x40002ea	        12	ref-cache.c	FUNCTION_1	IF_1
0x40002c1	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x40002c5	          0x4863c5	                         movsxd rax, ebp	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x40002c8	        0x48c1e003	                              shl rax, 3	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x40002cc	      0x488b4c02f0	       mov rcx, qword [rdx + rax - 0x10]	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x40002d1	        0x488d7928	                   lea rdi, [rcx + 0x28]	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x40002d5	      0x488b7402f8	          mov rsi, qword [rdx + rax - 8]	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x40002da	        0x4883c628	                           add rsi, 0x28	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x40002de	      0xe800000000	                          call 0x40002e3	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x40002e3	            0x85c0	                           test eax, eax	        13	ref-cache.c	FUNCTION_1	IF_1
0x40002e5	            0x7903	                           jns 0x40002ea	        13	ref-cache.c	FUNCTION_1	IF_1
0x40002e7	          0x896b08	                mov dword [rbx + 8], ebp	        16	ref-cache.c	FUNCTION_1	IF_1
0x40002ea	        0x4883c408	                              add rsp, 8	        17	ref-cache.c	FUNCTION_1
0x40002ee	              0x5b	                                 pop rbx	        17	ref-cache.c	FUNCTION_1
0x40002ef	              0x5d	                                 pop rbp	        17	ref-cache.c	FUNCTION_1
0x40002f0	              0xc3	                                     ret	        17	ref-cache.c	FUNCTION_1
prime_ref_dir	DO,0:FOR,1:CALL,7:ELSE,2:functions,0:WHILE,0:IF,2:SWITCH,1	51
0x4000492	          0x833f00	                      cmp dword [rdi], 0	       355	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0x4000495	     0xf8e97000000	                           jle 0x4000532	       355	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0x400049b	            0x4155	                                push r13	       347	ref-cache.c	ELSE_2	FUNCTION_20
0x400049d	            0x4154	                                push r12	       347	ref-cache.c	ELSE_2	FUNCTION_20
0x400049f	              0x55	                                push rbp	       347	ref-cache.c	ELSE_2	FUNCTION_20
0x40004a0	              0x53	                                push rbx	       347	ref-cache.c	ELSE_2	FUNCTION_20
0x40004a1	        0x4883ec08	                              sub rsp, 8	       347	ref-cache.c	ELSE_2	FUNCTION_20
0x40004a5	          0x4989f5	                            mov r13, rsi	       347	ref-cache.c	ELSE_2	FUNCTION_20
0x40004a8	          0x4989fc	                            mov r12, rdi	       347	ref-cache.c	ELSE_2	FUNCTION_20
0x40004ab	      0xbb00000000	                              mov ebx, 0	       355	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0x40004b0	          0x4863c3	                         movsxd rax, ebx	       356	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0x40004b3	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	       356	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0x40004b8	        0x488b2cc2	            mov rbp, qword [rdx + rax*8]	       356	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0x40004bc	        0xf6450010	                   test byte [rbp], 0x10	       357	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	IF_1
0x40004c0	            0x745d	                            je 0x400051f	       357	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	IF_1
0x40004c2	          0x4d85ed	                           test r13, r13	       359	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	ELSE_1	IF_2
0x40004c5	            0x7517	                           jne 0x40004de	       359	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	ELSE_1	IF_2
0x40004c7	          0x4889ef	                            mov rdi, rbp	       361	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	ELSE_1	IF_2	CALL_2
0x40004ca	      0xe800000000	                          call 0x40004cf	       361	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	ELSE_1	IF_2	CALL_2
0x40004cf	      0xbe00000000	                              mov esi, 0	       361	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	ELSE_1	IF_2	CALL_2
0x40004d4	          0x4889c7	                            mov rdi, rax	       361	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	ELSE_1	IF_2	CALL_2
0x40004d7	      0xe8b6ffffff	                  call sym.prime_ref_dir	       361	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	ELSE_1	IF_2	CALL_2
0x40004dc	            0xeb41	                           jmp 0x400051f	       361	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	ELSE_1	IF_2	CALL_2
0x40004de	        0x488d7d28	                   lea rdi, [rbp + 0x28]	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0x40004e2	          0x4c89ee	                            mov rsi, r13	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0x40004e5	      0xe856fbffff	                call sym.overlaps_prefix	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0x40004ea	            0x85c0	                           test eax, eax	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0x40004ec	            0x7407	                            je 0x40004f5	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0x40004ee	          0x83f801	                              cmp eax, 1	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0x40004f1	            0x7419	                            je 0x400050c	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0x40004f3	            0xeb2a	                           jmp 0x400051f	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0x40004f5	          0x4889ef	                            mov rdi, rbp	       370	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_5
0x40004f8	      0xe800000000	                          call 0x40004fd	       370	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_5
0x40004fd	      0xbe00000000	                              mov esi, 0	       370	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_5
0x4000502	          0x4889c7	                            mov rdi, rax	       370	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_5
0x4000505	      0xe888ffffff	                  call sym.prime_ref_dir	       370	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_5
0x400050a	            0xeb13	                           jmp 0x400051f	       371	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1
0x400050c	          0x4889ef	                            mov rdi, rbp	       373	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_7
0x400050f	      0xe800000000	                          call 0x4000514	       373	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_7
0x4000514	          0x4c89ee	                            mov rsi, r13	       373	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_7
0x4000517	          0x4889c7	                            mov rdi, rax	       373	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_7
0x400051a	      0xe873ffffff	                  call sym.prime_ref_dir	       373	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_7
0x400051f	          0x83c301	                              add ebx, 1	       355	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0x4000522	        0x41391c24	                    cmp dword [r12], ebx	       355	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0x4000526	            0x7f88	                            jg 0x40004b0	       355	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0x4000528	        0x4883c408	                              add rsp, 8	       381	ref-cache.c	FUNCTION_20	ELSE_2
0x400052c	              0x5b	                                 pop rbx	       381	ref-cache.c	FUNCTION_20	ELSE_2
0x400052d	              0x5d	                                 pop rbp	       381	ref-cache.c	FUNCTION_20	ELSE_2
0x400052e	            0x415c	                                 pop r12	       381	ref-cache.c	FUNCTION_20	ELSE_2
0x4000530	            0x415d	                                 pop r13	       381	ref-cache.c	FUNCTION_20	ELSE_2
0x4000532	            0xf3c3	                                     ret	       381	ref-cache.c	FUNCTION_20	ELSE_2
cache_ref_iterator_peel	DO,0:FOR,0:CALL,1:ELSE,0:functions,0:WHILE,0:IF,0:SWITCH,0	5
0x4000225	        0x4883ec08	                              sub rsp, 8	       493	ref-cache.c	FUNCTION_22
0x4000229	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       494	ref-cache.c	FUNCTION_22	CALL_1
0x400022d	      0xe800000000	                          call 0x4000232	       494	ref-cache.c	FUNCTION_22	CALL_1
0x4000232	        0x4883c408	                              add rsp, 8	       495	ref-cache.c	FUNCTION_22
0x4000236	              0xc3	                                     ret	       495	ref-cache.c	FUNCTION_22
find_containing_dir	DO,0:FOR,1:CALL,3:ELSE,0:functions,0:WHILE,0:IF,1:SWITCH,0	58
0x40007a5	            0x4156	                                push r14	       185	ref-cache.c	FUNCTION_13
0x40007a7	            0x4155	                                push r13	       185	ref-cache.c	FUNCTION_13
0x40007a9	            0x4154	                                push r12	       185	ref-cache.c	FUNCTION_13
0x40007ab	              0x55	                                push rbp	       185	ref-cache.c	FUNCTION_13
0x40007ac	              0x53	                                push rbx	       185	ref-cache.c	FUNCTION_13
0x40007ad	          0x4889fd	                            mov rbp, rdi	       185	ref-cache.c	FUNCTION_13
0x40007b0	          0x4989f5	                            mov r13, rsi	       185	ref-cache.c	FUNCTION_13
0x40007b3	          0x4189d6	                           mov r14d, edx	       185	ref-cache.c	FUNCTION_13
0x40007b6	      0xbe2f000000	                           mov esi, 0x2f	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40007bb	          0x4c89ef	                            mov rdi, r13	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40007be	      0xe800000000	                          call 0x40007c3	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40007c3	          0x4889c3	                            mov rbx, rax	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40007c6	          0x4885c0	                           test rax, rax	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40007c9	            0x747d	                            je 0x4000848	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40007cb	          0x4989dc	                            mov r12, rbx	       188	ref-cache.c	FUNCTION_13	FOR_1
0x40007ce	          0x4d29ec	                            sub r12, r13	       188	ref-cache.c	FUNCTION_13	FOR_1
0x40007d1	        0x4983c401	                              add r12, 1	       188	ref-cache.c	FUNCTION_13	FOR_1
0x40007d5	          0x4c89e2	                            mov rdx, r12	       155	ref-cache.c	FUNCTION_12	CALL_1
0x40007d8	          0x4c89ee	                            mov rsi, r13	       155	ref-cache.c	FUNCTION_12	CALL_1
0x40007db	          0x4889ef	                            mov rdi, rbp	       155	ref-cache.c	FUNCTION_12	CALL_1
0x40007de	      0xe800000000	                          call 0x40007e3	       155	ref-cache.c	FUNCTION_12	CALL_1
0x40007e3	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       157	ref-cache.c	FUNCTION_12	IF_1
0x40007e6	            0x7529	                           jne 0x4000811	       157	ref-cache.c	FUNCTION_12	IF_1
0x40007e8	          0x4585f6	                         test r14d, r14d	       158	ref-cache.c	FUNCTION_12	IF_1	IF_2
0x40007eb	            0x7456	                            je 0x4000843	       158	ref-cache.c	FUNCTION_12	IF_1	IF_2
0x40007ed	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x40007f1	      0xb900000000	                              mov ecx, 0	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x40007f6	          0x4c89e2	                            mov rdx, r12	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x40007f9	          0x4c89ee	                            mov rsi, r13	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x40007fc	      0xe800000000	                          call 0x4000801	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x4000801	          0x4989c4	                            mov r12, rax	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x4000804	          0x4889c6	                            mov rsi, rax	       167	ref-cache.c	FUNCTION_12	IF_1	CALL_3
0x4000807	          0x4889ef	                            mov rdi, rbp	       167	ref-cache.c	FUNCTION_12	IF_1	CALL_3
0x400080a	      0xe800000000	                          call 0x400080f	       167	ref-cache.c	FUNCTION_12	IF_1	CALL_3
0x400080f	            0xeb0a	                           jmp 0x400081b	       167	ref-cache.c	FUNCTION_12	IF_1	CALL_3
0x4000811	            0x4898	                                    cdqe	       169	ref-cache.c	FUNCTION_12	ELSE_1
0x4000813	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	       169	ref-cache.c	FUNCTION_12	ELSE_1
0x4000817	        0x4c8b24c2	            mov r12, qword [rdx + rax*8]	       169	ref-cache.c	FUNCTION_12	ELSE_1
0x400081b	          0x4c89e7	                            mov rdi, r12	       171	ref-cache.c	FUNCTION_12	CALL_4
0x400081e	      0xe800000000	                          call 0x4000823	       171	ref-cache.c	FUNCTION_12	CALL_4
0x4000823	          0x4889c5	                            mov rbp, rax	       171	ref-cache.c	FUNCTION_12	CALL_4
0x4000826	          0x4885c0	                           test rax, rax	       191	ref-cache.c	FUNCTION_13	FOR_1	IF_1
0x4000829	            0x741d	                            je 0x4000848	       191	ref-cache.c	FUNCTION_13	FOR_1	IF_1
0x400082b	        0x488d7b01	                      lea rdi, [rbx + 1]	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x400082f	      0xbe2f000000	                           mov esi, 0x2f	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x4000834	      0xe800000000	                          call 0x4000839	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x4000839	          0x4889c3	                            mov rbx, rax	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x400083c	          0x4885c0	                           test rax, rax	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x400083f	            0x758a	                           jne 0x40007cb	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x4000841	            0xeb05	                           jmp 0x4000848	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x4000843	      0xbd00000000	                              mov ebp, 0	       192	ref-cache.c	FUNCTION_13	FOR_1	IF_1
0x4000848	          0x4889e8	                            mov rax, rbp	       199	ref-cache.c	FUNCTION_13
0x400084b	              0x5b	                                 pop rbx	       199	ref-cache.c	FUNCTION_13
0x400084c	              0x5d	                                 pop rbp	       199	ref-cache.c	FUNCTION_13
0x400084d	            0x415c	                                 pop r12	       199	ref-cache.c	FUNCTION_13
0x400084f	            0x415d	                                 pop r13	       199	ref-cache.c	FUNCTION_13
0x4000851	            0x415e	                                 pop r14	       199	ref-cache.c	FUNCTION_13
0x4000853	              0xc3	                                     ret	       199	ref-cache.c	FUNCTION_13
create_ref_cache	DO,0:FOR,0:CALL,2:ELSE,0:functions,0:WHILE,0:IF,0:SWITCH,0	22
0x400067d	            0x4154	                                push r12	        47	ref-cache.c	FUNCTION_4
0x400067f	              0x55	                                push rbp	        47	ref-cache.c	FUNCTION_4
0x4000680	              0x53	                                push rbx	        47	ref-cache.c	FUNCTION_4
0x4000681	          0x4989fc	                            mov r12, rdi	        47	ref-cache.c	FUNCTION_4
0x4000684	          0x4889f5	                            mov rbp, rsi	        47	ref-cache.c	FUNCTION_4
0x4000687	      0xbe18000000	                           mov esi, 0x18	        48	ref-cache.c	FUNCTION_4	CALL_1
0x400068c	      0xbf01000000	                              mov edi, 1	        48	ref-cache.c	FUNCTION_4	CALL_1
0x4000691	      0xe800000000	                          call 0x4000696	        48	ref-cache.c	FUNCTION_4	CALL_1
0x4000696	          0x4889c3	                            mov rbx, rax	        48	ref-cache.c	FUNCTION_4	CALL_1
0x4000699	        0x4c896008	                mov qword [rax + 8], r12	        50	ref-cache.c	FUNCTION_4
0x400069d	        0x48896810	             mov qword [rax + 0x10], rbp	        51	ref-cache.c	FUNCTION_4
0x40006a1	      0xb901000000	                              mov ecx, 1	        52	ref-cache.c	FUNCTION_4	CALL_2
0x40006a6	      0xba00000000	                              mov edx, 0	        52	ref-cache.c	FUNCTION_4	CALL_2
0x40006ab	      0xbe00000000	                              mov esi, 0	        52	ref-cache.c	FUNCTION_4	CALL_2
0x40006b0	          0x4889c7	                            mov rdi, rax	        52	ref-cache.c	FUNCTION_4	CALL_2
0x40006b3	      0xe800000000	                          call 0x40006b8	        52	ref-cache.c	FUNCTION_4	CALL_2
0x40006b8	          0x488903	                    mov qword [rbx], rax	        52	ref-cache.c	FUNCTION_4	CALL_2
0x40006bb	          0x4889d8	                            mov rax, rbx	        54	ref-cache.c	FUNCTION_4
0x40006be	              0x5b	                                 pop rbx	        54	ref-cache.c	FUNCTION_4
0x40006bf	              0x5d	                                 pop rbp	        54	ref-cache.c	FUNCTION_4
0x40006c0	            0x415c	                                 pop r12	        54	ref-cache.c	FUNCTION_4
0x40006c2	              0xc3	                                     ret	        54	ref-cache.c	FUNCTION_4
find_ref_entry	DO,0:FOR,0:CALL,3:ELSE,0:functions,0:WHILE,0:IF,2:SWITCH,0	36
0x4000854	              0x55	                                push rbp	       202	ref-cache.c	FUNCTION_14
0x4000855	              0x53	                                push rbx	       202	ref-cache.c	FUNCTION_14
0x4000856	        0x4883ec08	                              sub rsp, 8	       202	ref-cache.c	FUNCTION_14
0x400085a	          0x4889f5	                            mov rbp, rsi	       202	ref-cache.c	FUNCTION_14
0x400085d	      0xba00000000	                              mov edx, 0	       205	ref-cache.c	FUNCTION_14	CALL_1
0x4000862	      0xe83effffff	            call sym.find_containing_dir	       205	ref-cache.c	FUNCTION_14	CALL_1
0x4000867	          0x4885c0	                           test rax, rax	       206	ref-cache.c	FUNCTION_14	IF_1
0x400086a	            0x7449	                            je 0x40008b5	       206	ref-cache.c	FUNCTION_14	IF_1
0x400086c	          0x4889c3	                            mov rbx, rax	       206	ref-cache.c	FUNCTION_14	IF_1
0x400086f	      0xb800000000	                              mov eax, 0	       208	ref-cache.c	FUNCTION_14	CALL_3
0x4000874	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       208	ref-cache.c	FUNCTION_14	CALL_3
0x400087b	          0x4889ef	                            mov rdi, rbp	       208	ref-cache.c	FUNCTION_14	CALL_3
0x400087e	            0xf2ae	              repne scasb al, byte [rdi]	       208	ref-cache.c	FUNCTION_14	CALL_3
0x4000880	          0x4889ce	                            mov rsi, rcx	       208	ref-cache.c	FUNCTION_14	CALL_3
0x4000883	          0x48f7d6	                                 not rsi	       208	ref-cache.c	FUNCTION_14	CALL_3
0x4000886	        0x488d56ff	                      lea rdx, [rsi - 1]	       208	ref-cache.c	FUNCTION_14	CALL_3
0x400088a	          0x4889ee	                            mov rsi, rbp	       208	ref-cache.c	FUNCTION_14	CALL_3
0x400088d	          0x4889df	                            mov rdi, rbx	       208	ref-cache.c	FUNCTION_14	CALL_3
0x4000890	      0xe800000000	                          call 0x4000895	       208	ref-cache.c	FUNCTION_14	CALL_3
0x4000895	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       209	ref-cache.c	FUNCTION_14	IF_2
0x4000898	            0x7422	                            je 0x40008bc	       209	ref-cache.c	FUNCTION_14	IF_2
0x400089a	            0x4898	                                    cdqe	       211	ref-cache.c	FUNCTION_14
0x400089c	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       211	ref-cache.c	FUNCTION_14
0x40008a0	        0x488b04c2	            mov rax, qword [rdx + rax*8]	       211	ref-cache.c	FUNCTION_14
0x40008a4	           0xfb610	                   movzx edx, byte [rax]	       212	ref-cache.c	FUNCTION_14
0x40008a7	          0x83e210	                           and edx, 0x10	       212	ref-cache.c	FUNCTION_14
0x40008aa	      0xba00000000	                              mov edx, 0	       212	ref-cache.c	FUNCTION_14
0x40008af	        0x480f45c2	                         cmovne rax, rdx	       212	ref-cache.c	FUNCTION_14
0x40008b3	            0xeb0c	                           jmp 0x40008c1	       212	ref-cache.c	FUNCTION_14
0x40008b5	      0xb800000000	                              mov eax, 0	       207	ref-cache.c	FUNCTION_14	IF_1
0x40008ba	            0xeb05	                           jmp 0x40008c1	       207	ref-cache.c	FUNCTION_14	IF_1
0x40008bc	      0xb800000000	                              mov eax, 0	       210	ref-cache.c	FUNCTION_14	IF_2
0x40008c1	        0x4883c408	                              add rsp, 8	       213	ref-cache.c	FUNCTION_14
0x40008c5	              0x5b	                                 pop rbx	       213	ref-cache.c	FUNCTION_14
0x40008c6	              0x5d	                                 pop rbp	       213	ref-cache.c	FUNCTION_14
0x40008c7	              0xc3	                                     ret	       213	ref-cache.c	FUNCTION_14
sort_ref_dir	DO,0:FOR,1:CALL,2:ELSE,1:functions,0:WHILE,0:IF,2:SWITCH,0	79
0x40000da	            0x8b37	                    mov esi, dword [rdi]	       295	ref-cache.c	FUNCTION_18	IF_1
0x40000dc	          0x397708	                cmp dword [rdi + 8], esi	       295	ref-cache.c	FUNCTION_18	IF_1
0x40000df	     0xf8419010000	                            je 0x40001fe	       295	ref-cache.c	FUNCTION_18	IF_1
0x40000e5	            0x4157	                                push r15	       287	ref-cache.c	FUNCTION_18
0x40000e7	            0x4156	                                push r14	       287	ref-cache.c	FUNCTION_18
0x40000e9	            0x4155	                                push r13	       287	ref-cache.c	FUNCTION_18
0x40000eb	            0x4154	                                push r12	       287	ref-cache.c	FUNCTION_18
0x40000ed	              0x55	                                push rbp	       287	ref-cache.c	FUNCTION_18
0x40000ee	              0x53	                                push rbx	       287	ref-cache.c	FUNCTION_18
0x40000ef	        0x4883ec18	                           sub rsp, 0x18	       287	ref-cache.c	FUNCTION_18
0x40000f3	          0x4989fd	                            mov r13, rdi	       287	ref-cache.c	FUNCTION_18
0x40000f6	          0x4863f6	                         movsxd rsi, esi	       298	ref-cache.c	FUNCTION_18
0x40000f9	        0x4883fe01	                              cmp rsi, 1	      1048	git-compat-util.h	FUNCTION_49	IF_1
0x40000fd	            0x7613	                           jbe 0x4000112	      1048	git-compat-util.h	FUNCTION_49	IF_1
0x40000ff	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	      1049	git-compat-util.h	FUNCTION_49	IF_1
0x4000103	      0xb900000000	                              mov ecx, 0	      1049	git-compat-util.h	FUNCTION_49	IF_1
0x4000108	      0xba08000000	                              mov edx, 8	      1049	git-compat-util.h	FUNCTION_49	IF_1
0x400010d	      0xe800000000	                          call 0x4000112	      1049	git-compat-util.h	FUNCTION_49	IF_1
0x4000112	      0x41837d0000	                      cmp dword [r13], 0	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000117	     0xf8ec5000000	                           jle 0x40001e2	       301	ref-cache.c	FUNCTION_18	FOR_1
0x400011d	    0x41bc00000000	                             mov r12d, 0	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000123	      0xbd00000000	                              mov ebp, 0	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000128	    0x41bf00000000	                             mov r15d, 0	       301	ref-cache.c	FUNCTION_18	FOR_1
0x400012e	        0x4d8b7518	            mov r14, qword [r13 + 0x18] 	       302	ref-cache.c	FUNCTION_18	FOR_1
0x4000132	          0x4863c5	                         movsxd rax, ebp	       302	ref-cache.c	FUNCTION_18	FOR_1
0x4000135	        0x498b1cc6	            mov rbx, qword [r14 + rax*8]	       302	ref-cache.c	FUNCTION_18	FOR_1
0x4000139	          0x4d85e4	                           test r12, r12	       303	ref-cache.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x400013c	     0xf8483000000	                            je 0x40001c5	       303	ref-cache.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x4000142	      0x498d442428	                   lea rax, [r12 + 0x28]	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x4000147	      0x4889442408	                mov qword [rsp + 8], rax	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x400014c	        0x488d7328	                   lea rsi, [rbx + 0x28]	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x4000150	          0x4889c7	                            mov rdi, rax	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x4000153	      0xe800000000	                          call 0x4000158	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x4000158	            0x85c0	                           test eax, eax	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x400015a	            0x7569	                           jne 0x40001c5	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x400015c	      0x41f6042410	                   test byte [r12], 0x10	       271	ref-cache.c	FUNCTION_17	IF_2
0x4000161	            0x7505	                           jne 0x4000168	       271	ref-cache.c	FUNCTION_17	IF_2
0x4000163	          0xf60310	                   test byte [rbx], 0x10	       271	ref-cache.c	FUNCTION_17	IF_2
0x4000166	            0x7414	                            je 0x400017c	       271	ref-cache.c	FUNCTION_17	IF_2
0x4000168	      0x488b742408	                mov rsi, qword [rsp + 8]	       273	ref-cache.c	FUNCTION_17	CALL_2
0x400016d	      0xbf00000000	                              mov edi, 0	       273	ref-cache.c	FUNCTION_17	CALL_2
0x4000172	      0xb800000000	                              mov eax, 0	       273	ref-cache.c	FUNCTION_17	CALL_2
0x4000177	      0xe800000000	                          call 0x400017c	       273	ref-cache.c	FUNCTION_17	CALL_2
0x400017c	        0x488d7308	                      lea rsi, [rbx + 8]	       975	cache.h	FUNCTION_72	CALL_1
0x4000180	      0x498d7c2408	                      lea rdi, [r12 + 8]	       975	cache.h	FUNCTION_72	CALL_1
0x4000185	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_72	CALL_1
0x400018a	      0xe800000000	                          call 0x400018f	       975	cache.h	FUNCTION_72	CALL_1
0x400018f	            0x85c0	                           test eax, eax	       275	ref-cache.c	FUNCTION_17	IF_3	CALL_3
0x4000191	            0x7414	                            je 0x40001a7	       275	ref-cache.c	FUNCTION_17	IF_3	CALL_3
0x4000193	      0x488b742408	                mov rsi, qword [rsp + 8]	       276	ref-cache.c	FUNCTION_17	CALL_4
0x4000198	      0xbf00000000	                              mov edi, 0	       276	ref-cache.c	FUNCTION_17	CALL_4
0x400019d	      0xb800000000	                              mov eax, 0	       276	ref-cache.c	FUNCTION_17	CALL_4
0x40001a2	      0xe800000000	                          call 0x40001a7	       276	ref-cache.c	FUNCTION_17	CALL_4
0x40001a7	      0x488b742408	                mov rsi, qword [rsp + 8]	       278	ref-cache.c	FUNCTION_17	CALL_5
0x40001ac	      0xbf00000000	                              mov edi, 0	       278	ref-cache.c	FUNCTION_17	CALL_5
0x40001b1	      0xb800000000	                              mov eax, 0	       278	ref-cache.c	FUNCTION_17	CALL_5
0x40001b6	      0xe800000000	                          call 0x40001bb	       278	ref-cache.c	FUNCTION_17	CALL_5
0x40001bb	          0x4889df	                            mov rdi, rbx	       304	ref-cache.c	FUNCTION_18	FOR_1	CALL_2
0x40001be	      0xe8cefeffff	                 call sym.free_ref_entry	       304	ref-cache.c	FUNCTION_18	FOR_1	CALL_2
0x40001c3	            0xeb0e	                           jmp 0x40001d3	       304	ref-cache.c	FUNCTION_18	FOR_1	CALL_2
0x40001c5	          0x4963c7	                        movsxd rax, r15d	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0x40001c8	        0x49891cc6	            mov qword [r14 + rax*8], rbx	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0x40001cc	          0x4989dc	                            mov r12, rbx	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0x40001cf	        0x458d7f01	                     lea r15d, [r15 + 1]	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0x40001d3	          0x83c501	                              add ebp, 1	       301	ref-cache.c	FUNCTION_18	FOR_1
0x40001d6	        0x41396d00	                    cmp dword [r13], ebp	       301	ref-cache.c	FUNCTION_18	FOR_1
0x40001da	     0xf8f4effffff	                            jg 0x400012e	       301	ref-cache.c	FUNCTION_18	FOR_1
0x40001e0	            0xeb06	                           jmp 0x40001e8	       301	ref-cache.c	FUNCTION_18	FOR_1
0x40001e2	    0x41bf00000000	                             mov r15d, 0	       301	ref-cache.c	FUNCTION_18	FOR_1
0x40001e8	        0x45897d00	                   mov dword [r13], r15d	       308	ref-cache.c	FUNCTION_18	ELSE_1
0x40001ec	        0x45897d08	               mov dword [r13 + 8], r15d	       308	ref-cache.c	FUNCTION_18	ELSE_1
0x40001f0	        0x4883c418	                           add rsp, 0x18	       309	ref-cache.c	FUNCTION_18	ELSE_1
0x40001f4	              0x5b	                                 pop rbx	       309	ref-cache.c	FUNCTION_18	ELSE_1
0x40001f5	              0x5d	                                 pop rbp	       309	ref-cache.c	FUNCTION_18	ELSE_1
0x40001f6	            0x415c	                                 pop r12	       309	ref-cache.c	FUNCTION_18	ELSE_1
0x40001f8	            0x415d	                                 pop r13	       309	ref-cache.c	FUNCTION_18	ELSE_1
0x40001fa	            0x415e	                                 pop r14	       309	ref-cache.c	FUNCTION_18	ELSE_1
0x40001fc	            0x415f	                                 pop r15	       309	ref-cache.c	FUNCTION_18	ELSE_1
0x40001fe	            0xf3c3	                                     ret	       309	ref-cache.c	FUNCTION_18	ELSE_1
get_ref_dir	DO,0:FOR,0:CALL,3:ELSE,0:functions,0:WHILE,0:IF,2:SWITCH,0	31
0x40002f1	              0x55	                                push rbp	        20	ref-cache.c	FUNCTION_2
0x40002f2	              0x53	                                push rbx	        20	ref-cache.c	FUNCTION_2
0x40002f3	        0x4883ec08	                              sub rsp, 8	        20	ref-cache.c	FUNCTION_2
0x40002f7	           0xfb607	                   movzx eax, byte [rdi]	        22	ref-cache.c	FUNCTION_2	CALL_1
0x40002fa	            0xa810	                           test al, 0x10	        22	ref-cache.c	FUNCTION_2	CALL_1
0x40002fc	            0x7519	                           jne 0x4000317	        22	ref-cache.c	FUNCTION_2	CALL_1
0x40002fe	      0xb900000000	                              mov ecx, 0	        22	ref-cache.c	FUNCTION_2	CALL_1
0x4000303	      0xba16000000	                           mov edx, 0x16	        22	ref-cache.c	FUNCTION_2	CALL_1
0x4000308	      0xbe00000000	                              mov esi, 0	        22	ref-cache.c	FUNCTION_2	CALL_1
0x400030d	      0xbf00000000	                              mov edi, 0	        22	ref-cache.c	FUNCTION_2	CALL_1
0x4000312	      0xe800000000	                          call 0x4000317	        22	ref-cache.c	FUNCTION_2	CALL_1
0x4000317	          0x4889fb	                            mov rbx, rdi	        22	ref-cache.c	FUNCTION_2	CALL_1
0x400031a	        0x488d6f08	                      lea rbp, [rdi + 8]	        23	ref-cache.c	FUNCTION_2
0x400031e	            0xa820	                           test al, 0x20	        24	ref-cache.c	FUNCTION_2	IF_1
0x4000320	            0x7427	                            je 0x4000349	        24	ref-cache.c	FUNCTION_2	IF_1
0x4000322	        0x488b4f18	            mov rcx, qword [rdi + 0x18] 	        25	ref-cache.c	FUNCTION_2	IF_1	IF_2
0x4000326	        0x488b4110	            mov rax, qword [rcx + 0x10] 	        25	ref-cache.c	FUNCTION_2	IF_1	IF_2
0x400032a	          0x4885c0	                           test rax, rax	        25	ref-cache.c	FUNCTION_2	IF_1	IF_2
0x400032d	            0x750a	                           jne 0x4000339	        25	ref-cache.c	FUNCTION_2	IF_1	IF_2
0x400032f	      0xbf00000000	                              mov edi, 0	        26	ref-cache.c	FUNCTION_2	IF_1	CALL_2
0x4000334	      0xe800000000	                          call 0x4000339	        26	ref-cache.c	FUNCTION_2	IF_1	CALL_2
0x4000339	        0x488d5728	                   lea rdx, [rdi + 0x28]	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x400033d	        0x488b7908	                mov rdi, qword [rcx + 8]	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x4000341	          0x4889ee	                            mov rsi, rbp	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x4000344	            0xffd0	                                call rax	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x4000346	          0x8023df	                    and byte [rbx], 0xdf	        29	ref-cache.c	FUNCTION_2	IF_1
0x4000349	          0x4889e8	                            mov rax, rbp	        32	ref-cache.c	FUNCTION_2
0x400034c	        0x4883c408	                              add rsp, 8	        32	ref-cache.c	FUNCTION_2
0x4000350	              0x5b	                                 pop rbx	        32	ref-cache.c	FUNCTION_2
0x4000351	              0x5d	                                 pop rbp	        32	ref-cache.c	FUNCTION_2
0x4000352	              0xc3	                                     ret	        32	ref-cache.c	FUNCTION_2
free_ref_cache	DO,0:FOR,0:CALL,2:ELSE,0:functions,0:WHILE,0:IF,0:SWITCH,0	8
0x40005d9	              0x53	                                push rbx	        71	ref-cache.c	FUNCTION_6
0x40005da	          0x4889fb	                            mov rbx, rdi	        71	ref-cache.c	FUNCTION_6
0x40005dd	          0x488b3f	                    mov rdi, qword [rdi]	        72	ref-cache.c	FUNCTION_6	CALL_1
0x40005e0	      0xe8acfaffff	                 call sym.free_ref_entry	        72	ref-cache.c	FUNCTION_6	CALL_1
0x40005e5	          0x4889df	                            mov rdi, rbx	        73	ref-cache.c	FUNCTION_6	CALL_2
0x40005e8	      0xe800000000	                          call 0x40005ed	        73	ref-cache.c	FUNCTION_6	CALL_2
0x40005ed	              0x5b	                                 pop rbx	        74	ref-cache.c	FUNCTION_6
0x40005ee	              0xc3	                                     ret	        74	ref-cache.c	FUNCTION_6
cache_ref_iterator_advance	DO,0:FOR,0:CALL,4:ELSE,2:functions,0:WHILE,1:IF,6:SWITCH,0	89
0x4000353	            0x4156	                                push r14	       441	ref-cache.c	FUNCTION_21
0x4000355	            0x4155	                                push r13	       441	ref-cache.c	FUNCTION_21
0x4000357	            0x4154	                                push r12	       441	ref-cache.c	FUNCTION_21
0x4000359	              0x55	                                push rbp	       441	ref-cache.c	FUNCTION_21
0x400035a	              0x53	                                push rbx	       441	ref-cache.c	FUNCTION_21
0x400035b	          0x4889fb	                            mov rbx, rdi	       441	ref-cache.c	FUNCTION_21
0x400035e	    0x49bcffffffff	          movabs r12, 0xfffffffffffffff 	       795	git-compat-util.h	FUNCTION_39	IF_1
0x4000368	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       446	ref-cache.c	FUNCTION_21	WHILE_1
0x400036c	        0x48c1e004	                              shl rax, 4	       446	ref-cache.c	FUNCTION_21	WHILE_1
0x4000370	        0x488b5340	            mov rdx, qword [rbx + 0x40] 	       446	ref-cache.c	FUNCTION_21	WHILE_1
0x4000374	      0x488d6c02f0	             lea rbp, [rdx + rax - 0x10]	       446	ref-cache.c	FUNCTION_21	WHILE_1
0x4000379	        0x4c8b6d00	                    mov r13, qword [rbp]	       448	ref-cache.c	FUNCTION_21	WHILE_1
0x400037d	        0x837d0cff	cmp dword [rbp + 0xc], 0xffffffffffffffff	       452	ref-cache.c	FUNCTION_21	WHILE_1	IF_1
0x4000381	            0x7508	                           jne 0x400038b	       452	ref-cache.c	FUNCTION_21	WHILE_1	IF_1
0x4000383	          0x4c89ef	                            mov rdi, r13	       453	ref-cache.c	FUNCTION_21	WHILE_1	CALL_1
0x4000386	      0xe84ffdffff	                   call sym.sort_ref_dir	       453	ref-cache.c	FUNCTION_21	WHILE_1	CALL_1
0x400038b	          0x8b450c	              mov eax, dword [rbp + 0xc]	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x400038e	          0x83c001	                              add eax, 1	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x4000391	          0x89450c	              mov dword [rbp + 0xc], eax	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x4000394	        0x488b5500	                    mov rdx, qword [rbp]	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x4000398	            0x3b02	                    cmp eax, dword [rdx]	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x400039a	            0x751e	                           jne 0x40003ba	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x400039c	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x40003a0	        0x4883e801	                              sub rax, 1	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x40003a4	        0x48894328	             mov qword [rbx + 0x28], rax	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x40003a8	          0x4885c0	                           test rax, rax	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x40003ab	            0x75bb	                           jne 0x4000368	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x40003ad	          0x4889df	                            mov rdi, rbx	       458	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	CALL_2
0x40003b0	      0xe800000000	                          call 0x40003b5	       458	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	CALL_2
0x40003b5	      0xe9cf000000	                           jmp 0x4000489	       458	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	CALL_2
0x40003ba	            0x4898	                                    cdqe	       463	ref-cache.c	FUNCTION_21	WHILE_1
0x40003bc	        0x498b5518	            mov rdx, qword [r13 + 0x18] 	       463	ref-cache.c	FUNCTION_21	WHILE_1
0x40003c0	        0x4c8b2cc2	            mov r13, qword [rdx + rax*8]	       463	ref-cache.c	FUNCTION_21	WHILE_1
0x40003c4	          0x8b6d08	                mov ebp, dword [rbp + 8]	       465	ref-cache.c	FUNCTION_21	WHILE_1	IF_4
0x40003c7	          0x83fd01	                              cmp ebp, 1	       465	ref-cache.c	FUNCTION_21	WHILE_1	IF_4
0x40003ca	            0x7514	                           jne 0x40003e0	       465	ref-cache.c	FUNCTION_21	WHILE_1	IF_4
0x40003cc	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	       466	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	CALL_3
0x40003d0	        0x498d7d28	                   lea rdi, [r13 + 0x28]	       466	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	CALL_3
0x40003d4	      0xe867fcffff	                call sym.overlaps_prefix	       466	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	CALL_3
0x40003d9	            0x89c5	                            mov ebp, eax	       466	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	CALL_3
0x40003db	          0x83f802	                              cmp eax, 2	       467	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	IF_5
0x40003de	            0x7488	                            je 0x4000368	       467	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	IF_5
0x40003e0	      0x41f6450010	                   test byte [r13], 0x10	       473	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40003e5	     0xf8481000000	                            je 0x400046c	       473	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40003eb	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40003ef	        0x488d5001	                      lea rdx, [rax + 1]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40003f3	        0x488b4330	            mov rax, qword [rbx + 0x30] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40003f7	          0x4839c2	                            cmp rdx, rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40003fa	            0x7640	                           jbe 0x400043c	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40003fc	      0x488d744030	          lea rsi, [rax + rax*2 + 0x30] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000401	          0x48d1ee	                              shr rsi, 1	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000404	          0x4839f2	                            cmp rdx, rsi	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000407	        0x480f47f2	                          cmova rsi, rdx	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400040b	        0x48897330	             mov qword [rbx + 0x30], rsi	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400040f	          0x4889f2	                            mov rdx, rsi	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000412	          0x4c39e6	                            cmp rsi, r12	       795	git-compat-util.h	FUNCTION_39	IF_1
0x4000415	            0x7614	                           jbe 0x400042b	       795	git-compat-util.h	FUNCTION_39	IF_1
0x4000417	      0xbe10000000	                           mov esi, 0x10	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x400041c	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x4000421	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x4000426	      0xe800000000	                          call 0x400042b	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x400042b	        0x48c1e604	                              shl rsi, 4	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400042f	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000433	      0xe800000000	                          call 0x4000438	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000438	        0x48894340	             mov qword [rbx + 0x40], rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400043c	        0x4c8b7328	            mov r14, qword [rbx + 0x28] 	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000440	        0x498d4601	                      lea rax, [r14 + 1]	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000444	        0x48894328	             mov qword [rbx + 0x28], rax	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000448	        0x49c1e604	                              shl r14, 4	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400044c	        0x4c037340	             add r14, qword [rbx + 0x40]	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000450	          0x4c89ef	                            mov rdi, r13	       479	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x4000453	      0xe800000000	                          call 0x4000458	       479	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x4000458	          0x498906	                    mov qword [r14], rax	       479	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x400045b	        0x41896e08	                mov dword [r14 + 8], ebp	       480	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400045f	    0x41c7460cffff	      mov dword [r14 + 0xc], 0xffffffff 	       481	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000467	      0xe9fcfeffff	                           jmp 0x4000368	       481	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400046c	        0x498d4528	                   lea rax, [r13 + 0x28]	       483	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x4000470	        0x48894310	             mov qword [rbx + 0x10], rax	       483	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x4000474	        0x498d4508	                      lea rax, [r13 + 8]	       484	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x4000478	        0x48894318	             mov qword [rbx + 0x18], rax	       484	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x400047c	      0x410fb64500	                   movzx eax, byte [r13]	       485	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x4000481	          0x894320	             mov dword [rbx + 0x20], eax	       485	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x4000484	      0xb800000000	                              mov eax, 0	       486	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x4000489	              0x5b	                                 pop rbx	       489	ref-cache.c	FUNCTION_21
0x400048a	              0x5d	                                 pop rbp	       489	ref-cache.c	FUNCTION_21
0x400048b	            0x415c	                                 pop r12	       489	ref-cache.c	FUNCTION_21
0x400048d	            0x415d	                                 pop r13	       489	ref-cache.c	FUNCTION_21
0x400048f	            0x415e	                                 pop r14	       489	ref-cache.c	FUNCTION_21
0x4000491	              0xc3	                                     ret	       489	ref-cache.c	FUNCTION_21
overlaps_prefix	DO,0:FOR,0:CALL,0:ELSE,2:functions,0:WHILE,1:IF,2:SWITCH,0	21
0x4000040	           0xfb606	                   movzx eax, byte [rsi]	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000043	            0x84c0	                             test al, al	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000045	            0x7419	                            je 0x4000060	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000047	            0x3a07	                      cmp al, byte [rdi]	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000049	            0x7521	                           jne 0x400006c	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x400004b	        0x4883c701	                              add rdi, 1	       330	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x400004f	        0x4883c601	                              add rsi, 1	       331	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000053	           0xfb606	                   movzx eax, byte [rsi]	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000056	            0x84c0	                             test al, al	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000058	            0x740c	                            je 0x4000066	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x400005a	            0x3a07	                      cmp al, byte [rdi]	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x400005c	            0x74ed	                            je 0x400004b	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x400005e	            0xeb0c	                           jmp 0x400006c	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000060	      0xb800000000	                              mov eax, 0	       334	ref-cache.c	ELSE_1	FUNCTION_19	IF_1
0x4000065	              0xc3	                                     ret	       334	ref-cache.c	ELSE_1	FUNCTION_19	IF_1
0x4000066	      0xb800000000	                              mov eax, 0	       334	ref-cache.c	ELSE_1	FUNCTION_19	IF_1
0x400006b	              0xc3	                                     ret	       334	ref-cache.c	ELSE_1	FUNCTION_19	IF_1
0x400006c	          0x803f01	                       cmp byte [rdi], 1	       338	ref-cache.c	FUNCTION_19	ELSE_1	ELSE_2
0x400006f	            0x19c0	                            sbb eax, eax	       338	ref-cache.c	FUNCTION_19	ELSE_1	ELSE_2
0x4000071	          0x83c002	                              add eax, 2	       338	ref-cache.c	FUNCTION_19	ELSE_1	ELSE_2
0x4000074	              0xc3	                                     ret	       339	ref-cache.c	FUNCTION_19	ELSE_1	ELSE_2
cache_ref_iterator_begin	DO,0:FOR,0:CALL,7:ELSE,1:functions,0:WHILE,0:IF,4:SWITCH,0	82
0x4000a0d	            0x4155	                                push r13	       517	ref-cache.c	FUNCTION_24
0x4000a0f	            0x4154	                                push r12	       517	ref-cache.c	FUNCTION_24
0x4000a11	              0x55	                                push rbp	       517	ref-cache.c	FUNCTION_24
0x4000a12	              0x53	                                push rbx	       517	ref-cache.c	FUNCTION_24
0x4000a13	        0x4883ec08	                              sub rsp, 8	       517	ref-cache.c	FUNCTION_24
0x4000a17	          0x4889f5	                            mov rbp, rsi	       517	ref-cache.c	FUNCTION_24
0x4000a1a	            0x89d3	                            mov ebx, edx	       517	ref-cache.c	FUNCTION_24
0x4000a1c	          0x488b3f	                    mov rdi, qword [rdi]	       523	ref-cache.c	FUNCTION_24	CALL_1
0x4000a1f	      0xe800000000	                          call 0x4000a24	       523	ref-cache.c	FUNCTION_24	CALL_1
0x4000a24	          0x4989c5	                            mov r13, rax	       523	ref-cache.c	FUNCTION_24	CALL_1
0x4000a27	          0x4885ed	                           test rbp, rbp	       524	ref-cache.c	FUNCTION_24	IF_1
0x4000a2a	            0x7419	                            je 0x4000a45	       524	ref-cache.c	FUNCTION_24	IF_1
0x4000a2c	        0x807d0000	                       cmp byte [rbp], 0	       524	ref-cache.c	FUNCTION_24	IF_1
0x4000a30	            0x7413	                            je 0x4000a45	       524	ref-cache.c	FUNCTION_24	IF_1
0x4000a32	      0xba00000000	                              mov edx, 0	       525	ref-cache.c	FUNCTION_24	CALL_2
0x4000a37	          0x4889ee	                            mov rsi, rbp	       525	ref-cache.c	FUNCTION_24	CALL_2
0x4000a3a	          0x4889c7	                            mov rdi, rax	       525	ref-cache.c	FUNCTION_24	CALL_2
0x4000a3d	      0xe863fdffff	            call sym.find_containing_dir	       525	ref-cache.c	FUNCTION_24	CALL_2
0x4000a42	          0x4989c5	                            mov r13, rax	       525	ref-cache.c	FUNCTION_24	CALL_2
0x4000a45	          0x4d85ed	                           test r13, r13	       526	ref-cache.c	FUNCTION_24	IF_2
0x4000a48	            0x750a	                           jne 0x4000a54	       526	ref-cache.c	FUNCTION_24	IF_2
0x4000a4a	      0xe800000000	                          call 0x4000a4f	       528	ref-cache.c	FUNCTION_24	CALL_3
0x4000a4f	      0xe9e2000000	                           jmp 0x4000b36	       528	ref-cache.c	FUNCTION_24	CALL_3
0x4000a54	            0x85db	                           test ebx, ebx	       530	ref-cache.c	FUNCTION_24	IF_3
0x4000a56	            0x740b	                            je 0x4000a63	       530	ref-cache.c	FUNCTION_24	IF_3
0x4000a58	          0x4889ee	                            mov rsi, rbp	       531	ref-cache.c	FUNCTION_24	CALL_4
0x4000a5b	          0x4c89ef	                            mov rdi, r13	       531	ref-cache.c	FUNCTION_24	CALL_4
0x4000a5e	      0xe82ffaffff	                  call sym.prime_ref_dir	       531	ref-cache.c	FUNCTION_24	CALL_4
0x4000a63	      0xbe48000000	                           mov esi, 0x48	       533	ref-cache.c	FUNCTION_24	CALL_5
0x4000a68	      0xbf01000000	                              mov edi, 1	       533	ref-cache.c	FUNCTION_24	CALL_5
0x4000a6d	      0xe800000000	                          call 0x4000a72	       533	ref-cache.c	FUNCTION_24	CALL_5
0x4000a72	          0x4889c3	                            mov rbx, rax	       533	ref-cache.c	FUNCTION_24	CALL_5
0x4000a75	      0xba01000000	                              mov edx, 1	       535	ref-cache.c	FUNCTION_24	CALL_6
0x4000a7a	      0xbe00000000	                              mov esi, 0	       535	ref-cache.c	FUNCTION_24	CALL_6
0x4000a7f	          0x4889c7	                            mov rdi, rax	       535	ref-cache.c	FUNCTION_24	CALL_6
0x4000a82	      0xe800000000	                          call 0x4000a87	       535	ref-cache.c	FUNCTION_24	CALL_6
0x4000a87	        0x488b4330	            mov rax, qword [rbx + 0x30] 	       536	ref-cache.c	FUNCTION_24
0x4000a8b	        0x4883f809	                              cmp rax, 9	       536	ref-cache.c	FUNCTION_24
0x4000a8f	            0x775b	                            ja 0x4000aec	       536	ref-cache.c	FUNCTION_24
0x4000a91	      0x488d744030	          lea rsi, [rax + rax*2 + 0x30] 	       536	ref-cache.c	FUNCTION_24
0x4000a96	        0x4883fe13	                           cmp rsi, 0x13	       536	ref-cache.c	FUNCTION_24
0x4000a9a	            0x770f	                            ja 0x4000aab	       536	ref-cache.c	FUNCTION_24
0x4000a9c	    0x48c743300a00	             mov qword [rbx + 0x30], 0xa	       536	ref-cache.c	FUNCTION_24
0x4000aa4	      0xba0a000000	                            mov edx, 0xa	       536	ref-cache.c	FUNCTION_24
0x4000aa9	            0xeb2d	                           jmp 0x4000ad8	       536	ref-cache.c	FUNCTION_24
0x4000aab	          0x4889f2	                            mov rdx, rsi	       536	ref-cache.c	FUNCTION_24
0x4000aae	          0x48d1ea	                              shr rdx, 1	       536	ref-cache.c	FUNCTION_24
0x4000ab1	        0x48895330	             mov qword [rbx + 0x30], rdx	       536	ref-cache.c	FUNCTION_24
0x4000ab5	    0x48b8ffffffff	          movabs rax, 0xfffffffffffffff 	       795	git-compat-util.h	FUNCTION_39	IF_1
0x4000abf	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_39	IF_1
0x4000ac2	            0x7614	                           jbe 0x4000ad8	       795	git-compat-util.h	FUNCTION_39	IF_1
0x4000ac4	      0xbe10000000	                           mov esi, 0x10	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x4000ac9	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x4000ace	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x4000ad3	      0xe800000000	                          call 0x4000ad8	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x4000ad8	        0x48c1e204	                              shl rdx, 4	       536	ref-cache.c	FUNCTION_24
0x4000adc	          0x4889d6	                            mov rsi, rdx	       536	ref-cache.c	FUNCTION_24
0x4000adf	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	       536	ref-cache.c	FUNCTION_24
0x4000ae3	      0xe800000000	                          call 0x4000ae8	       536	ref-cache.c	FUNCTION_24
0x4000ae8	        0x48894340	             mov qword [rbx + 0x40], rax	       536	ref-cache.c	FUNCTION_24
0x4000aec	    0x48c743280100	               mov qword [rbx + 0x28], 1	       538	ref-cache.c	FUNCTION_24
0x4000af4	        0x4c8b6340	            mov r12, qword [rbx + 0x40] 	       539	ref-cache.c	FUNCTION_24
0x4000af8	    0x41c744240cff	      mov dword [r12 + 0xc], 0xffffffff 	       540	ref-cache.c	FUNCTION_24
0x4000b01	        0x4d892c24	                    mov qword [r12], r13	       541	ref-cache.c	FUNCTION_24
0x4000b05	          0x4885ed	                           test rbp, rbp	       543	ref-cache.c	FUNCTION_24	IF_4
0x4000b08	            0x7420	                            je 0x4000b2a	       543	ref-cache.c	FUNCTION_24	IF_4
0x4000b0a	        0x807d0000	                       cmp byte [rbp], 0	       543	ref-cache.c	FUNCTION_24	IF_4
0x4000b0e	            0x741a	                            je 0x4000b2a	       543	ref-cache.c	FUNCTION_24	IF_4
0x4000b10	          0x4889ef	                            mov rdi, rbp	       544	ref-cache.c	FUNCTION_24	IF_4	CALL_7
0x4000b13	      0xe800000000	                          call 0x4000b18	       544	ref-cache.c	FUNCTION_24	IF_4	CALL_7
0x4000b18	        0x48894338	             mov qword [rbx + 0x38], rax	       544	ref-cache.c	FUNCTION_24	IF_4	CALL_7
0x4000b1c	    0x41c744240801	                  mov dword [r12 + 8], 1	       545	ref-cache.c	FUNCTION_24	IF_4
0x4000b25	          0x4889d8	                            mov rax, rbx	       550	ref-cache.c	FUNCTION_24
0x4000b28	            0xeb0c	                           jmp 0x4000b36	       545	ref-cache.c	FUNCTION_24	IF_4
0x4000b2a	    0x41c744240800	                  mov dword [r12 + 8], 0	       547	ref-cache.c	FUNCTION_24	ELSE_1
0x4000b33	          0x4889d8	                            mov rax, rbx	       550	ref-cache.c	FUNCTION_24
0x4000b36	        0x4883c408	                              add rsp, 8	       551	ref-cache.c	FUNCTION_24
0x4000b3a	              0x5b	                                 pop rbx	       551	ref-cache.c	FUNCTION_24
0x4000b3b	              0x5d	                                 pop rbp	       551	ref-cache.c	FUNCTION_24
0x4000b3c	            0x415c	                                 pop r12	       551	ref-cache.c	FUNCTION_24
0x4000b3e	            0x415d	                                 pop r13	       551	ref-cache.c	FUNCTION_24
0x4000b40	              0xc3	                                     ret	       551	ref-cache.c	FUNCTION_24
ref_entry_cmp	DO,0:FOR,0:CALL,1:ELSE,0:functions,0:WHILE,0:IF,0:SWITCH,0	8
0x4000075	        0x4883ec08	                              sub rsp, 8	       101	ref-cache.c	FUNCTION_9
0x4000079	          0x488b3f	                    mov rdi, qword [rdi]	       104	ref-cache.c	FUNCTION_9	CALL_1
0x400007c	        0x4883c728	                           add rdi, 0x28	       104	ref-cache.c	FUNCTION_9	CALL_1
0x4000080	          0x488b36	                    mov rsi, qword [rsi]	       104	ref-cache.c	FUNCTION_9	CALL_1
0x4000083	        0x4883c628	                           add rsi, 0x28	       104	ref-cache.c	FUNCTION_9	CALL_1
0x4000087	      0xe800000000	                          call 0x400008c	       104	ref-cache.c	FUNCTION_9	CALL_1
0x400008c	        0x4883c408	                              add rsp, 8	       105	ref-cache.c	FUNCTION_9
0x4000090	              0xc3	                                     ret	       105	ref-cache.c	FUNCTION_9
add_ref_entry	DO,0:FOR,0:CALL,2:ELSE,0:functions,0:WHILE,0:IF,1:SWITCH,0	15
0x40009dd	              0x53	                                push rbx	       251	ref-cache.c	FUNCTION_16
0x40009de	          0x4889f3	                            mov rbx, rsi	       251	ref-cache.c	FUNCTION_16
0x40009e1	        0x488d7628	                   lea rsi, [rsi + 0x28]	       252	ref-cache.c	FUNCTION_16	CALL_1
0x40009e5	      0xba01000000	                              mov edx, 1	       252	ref-cache.c	FUNCTION_16	CALL_1
0x40009ea	      0xe8b6fdffff	            call sym.find_containing_dir	       252	ref-cache.c	FUNCTION_16	CALL_1
0x40009ef	          0x4885c0	                           test rax, rax	       253	ref-cache.c	FUNCTION_16	IF_1
0x40009f2	            0x7412	                            je 0x4000a06	       253	ref-cache.c	FUNCTION_16	IF_1
0x40009f4	          0x4889de	                            mov rsi, rbx	       255	ref-cache.c	FUNCTION_16	CALL_2
0x40009f7	          0x4889c7	                            mov rdi, rax	       255	ref-cache.c	FUNCTION_16	CALL_2
0x40009fa	      0xe800000000	                          call 0x40009ff	       255	ref-cache.c	FUNCTION_16	CALL_2
0x40009ff	      0xb800000000	                              mov eax, 0	       256	ref-cache.c	FUNCTION_16
0x4000a04	            0xeb05	                           jmp 0x4000a0b	       256	ref-cache.c	FUNCTION_16
0x4000a06	      0xb8ffffffff	                     mov eax, 0xffffffff	       254	ref-cache.c	FUNCTION_16	IF_1
0x4000a0b	              0x5b	                                 pop rbx	       257	ref-cache.c	FUNCTION_16
0x4000a0c	              0xc3	                                     ret	       257	ref-cache.c	FUNCTION_16
