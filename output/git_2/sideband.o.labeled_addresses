send_sideband	IF,2:functions,0:SWITCH,0:WHILE,1:FOR,0:ELSE,1:CALL,5:DO,0	67
0x4000410	            0x4157	                                push r15	       111	sideband.c	FUNCTION_2
0x4000412	            0x4156	                                push r14	       111	sideband.c	FUNCTION_2
0x4000414	            0x4155	                                push r13	       111	sideband.c	FUNCTION_2
0x4000416	            0x4154	                                push r12	       111	sideband.c	FUNCTION_2
0x4000418	              0x55	                                push rbp	       111	sideband.c	FUNCTION_2
0x4000419	              0x53	                                push rbx	       111	sideband.c	FUNCTION_2
0x400041a	        0x4883ec18	                           sub rsp, 0x18	       111	sideband.c	FUNCTION_2
0x400041e	    0x64488b042528	                mov rax, qword fs:[0x28]	       111	sideband.c	FUNCTION_2
0x4000427	      0x4889442408	                mov qword [rsp + 8], rax	       111	sideband.c	FUNCTION_2
0x400042c	            0x31c0	                            xor eax, eax	       111	sideband.c	FUNCTION_2
0x400042e	          0x4885c9	                           test rcx, rcx	       114	sideband.c	FUNCTION_2	WHILE_1
0x4000431	     0xf8499000000	                            je 0x40004d0	       114	sideband.c	FUNCTION_2	WHILE_1
0x4000437	          0x4189fe	                           mov r14d, edi	       114	sideband.c	FUNCTION_2	WHILE_1
0x400043a	          0x4189f7	                           mov r15d, esi	       114	sideband.c	FUNCTION_2	WHILE_1
0x400043d	          0x4989d4	                            mov r12, rdx	       114	sideband.c	FUNCTION_2	WHILE_1
0x4000440	          0x4889cd	                            mov rbp, rcx	       114	sideband.c	FUNCTION_2	WHILE_1
0x4000443	        0x458d68fb	                      lea r13d, [r8 - 5]	       114	sideband.c	FUNCTION_2	WHILE_1
0x4000447	            0xeb4b	                           jmp 0x4000494	       114	sideband.c	FUNCTION_2	WHILE_1
0x4000449	     0xf1f80000000	                         nop dword [rax]	       114	sideband.c	FUNCTION_2	WHILE_1
0x4000450	          0x8d4b05	                      lea ecx, [rbx + 5]	       122	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_1
0x4000453	      0xba00000000	                              mov edx, 0	       122	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_1
0x4000458	      0xbe05000000	                              mov esi, 5	       122	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_1
0x400045d	          0x4889e7	                            mov rdi, rsp	       122	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_1
0x4000460	            0x31c0	                            xor eax, eax	       122	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_1
0x4000462	      0xe800000000	                          call 0x4000467	       122	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_1
0x4000467	      0xba05000000	                              mov edx, 5	       124	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_2
0x400046c	          0x4889e6	                            mov rsi, rsp	       124	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_2
0x400046f	          0x4489f7	                           mov edi, r14d	       124	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_2
0x4000472	      0x44887c2404	                mov byte [rsp + 4], r15b	       123	sideband.c	FUNCTION_2	WHILE_1	IF_2
0x4000477	      0xe800000000	                          call 0x400047c	       124	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_2
0x400047c	            0x89db	                            mov ebx, ebx	       129	sideband.c	FUNCTION_2	WHILE_1	CALL_5
0x400047e	          0x4c89e6	                            mov rsi, r12	       129	sideband.c	FUNCTION_2	WHILE_1	CALL_5
0x4000481	          0x4489f7	                           mov edi, r14d	       129	sideband.c	FUNCTION_2	WHILE_1	CALL_5
0x4000484	          0x4889da	                            mov rdx, rbx	       129	sideband.c	FUNCTION_2	WHILE_1	CALL_5
0x4000487	          0x4901dc	                            add r12, rbx	       130	sideband.c	FUNCTION_2	WHILE_1
0x400048a	      0xe800000000	                          call 0x400048f	       129	sideband.c	FUNCTION_2	WHILE_1	CALL_5
0x400048f	          0x4829dd	                            sub rbp, rbx	       114	sideband.c	FUNCTION_2	WHILE_1
0x4000492	            0x743c	                            je 0x40004d0	       114	sideband.c	FUNCTION_2	WHILE_1
0x4000494	          0x4439ed	                           cmp ebp, r13d	       114	sideband.c	FUNCTION_2	WHILE_1
0x4000497	          0x4489eb	                           mov ebx, r13d	       114	sideband.c	FUNCTION_2	WHILE_1
0x400049a	           0xf46dd	                         cmovbe ebx, ebp	       114	sideband.c	FUNCTION_2	WHILE_1
0x400049d	          0x4585ff	                         test r15d, r15d	       121	sideband.c	FUNCTION_2	WHILE_1	IF_2
0x40004a0	            0x79ae	                           jns 0x4000450	       121	sideband.c	FUNCTION_2	WHILE_1	IF_2
0x40004a2	          0x8d4b04	                      lea ecx, [rbx + 4]	       126	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_3
0x40004a5	          0x4889e7	                            mov rdi, rsp	       126	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_3
0x40004a8	      0xba00000000	                              mov edx, 0	       126	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_3
0x40004ad	      0xbe05000000	                              mov esi, 5	       126	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_3
0x40004b2	            0x31c0	                            xor eax, eax	       126	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_3
0x40004b4	      0xe800000000	                          call 0x40004b9	       126	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_3
0x40004b9	      0xba04000000	                              mov edx, 4	       127	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_4
0x40004be	          0x4889e6	                            mov rsi, rsp	       127	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_4
0x40004c1	          0x4489f7	                           mov edi, r14d	       127	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_4
0x40004c4	      0xe800000000	                          call 0x40004c9	       127	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_4
0x40004c9	            0xebb1	                           jmp 0x400047c	       127	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_4
0x40004cb	       0xf1f440000	                   nop dword [rax + rax]	       127	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_4
0x40004d0	      0x488b442408	                mov rax, qword [rsp + 8]	       133	sideband.c	FUNCTION_2
0x40004d5	    0x644833042528	                xor rax, qword fs:[0x28]	       133	sideband.c	FUNCTION_2
0x40004de	            0x750f	                           jne 0x40004ef	       133	sideband.c	FUNCTION_2
0x40004e0	        0x4883c418	                           add rsp, 0x18	       133	sideband.c	FUNCTION_2
0x40004e4	              0x5b	                                 pop rbx	       133	sideband.c	FUNCTION_2
0x40004e5	              0x5d	                                 pop rbp	       133	sideband.c	FUNCTION_2
0x40004e6	            0x415c	                                 pop r12	       133	sideband.c	FUNCTION_2
0x40004e8	            0x415d	                                 pop r13	       133	sideband.c	FUNCTION_2
0x40004ea	            0x415e	                                 pop r14	       133	sideband.c	FUNCTION_2
0x40004ec	            0x415f	                                 pop r15	       133	sideband.c	FUNCTION_2
0x40004ee	              0xc3	                                     ret	       133	sideband.c	FUNCTION_2
0x40004ef	      0xe800000000	                          call 0x40004f4	       133	sideband.c	FUNCTION_2
recv_sideband	IF,7:functions,0:SWITCH,1:WHILE,2:FOR,0:ELSE,2:CALL,17:DO,0	221
0x4000040	            0x4157	                                push r15	        22	sideband.c	FUNCTION_1
0x4000042	            0x4156	                                push r14	        22	sideband.c	FUNCTION_1
0x4000044	            0x4155	                                push r13	        22	sideband.c	FUNCTION_1
0x4000046	            0x4154	                                push r12	        22	sideband.c	FUNCTION_1
0x4000048	          0x4989fc	                            mov r12, rdi	        22	sideband.c	FUNCTION_1
0x400004b	              0x55	                                push rbp	        22	sideband.c	FUNCTION_1
0x400004c	              0x53	                                push rbx	        22	sideband.c	FUNCTION_1
0x400004d	      0xbf02000000	                              mov edi, 2	        28	sideband.c	FUNCTION_1	IF_1	CALL_2
0x4000052	            0x89f5	                            mov ebp, esi	        22	sideband.c	FUNCTION_1
0x4000054	          0x4189d5	                           mov r13d, edx	        22	sideband.c	FUNCTION_1
0x4000057	    0x4881ec380001	                        sub rsp, 0x10038	        22	sideband.c	FUNCTION_1
0x400005e	    0x64488b042528	                mov rax, qword fs:[0x28]	        22	sideband.c	FUNCTION_1
0x4000067	    0x488984242800	         mov qword [rsp + 0x10028], rax 	        22	sideband.c	FUNCTION_1
0x400006f	            0x31c0	                            xor eax, eax	        22	sideband.c	FUNCTION_1
0x4000071	    0x48c744241000	               mov qword [rsp + 0x10], 0	        25	sideband.c	FUNCTION_1
0x400007a	    0x48c744241800	               mov qword [rsp + 0x18], 0	        25	sideband.c	FUNCTION_1
0x4000083	    0x48c744242000	               mov qword [rsp + 0x20], 0	        25	sideband.c	FUNCTION_1
0x400008c	      0xe800000000	                          call 0x4000091	        28	sideband.c	FUNCTION_1	IF_1	CALL_2
0x4000091	            0x85c0	                           test eax, eax	        28	sideband.c	FUNCTION_1	IF_1	CALL_2
0x4000093	     0xf853e030000	                           jne 0x40003d7	        28	sideband.c	FUNCTION_1	IF_1	CALL_2
0x4000099	      0xbb00000000	                              mov ebx, 0	        31	sideband.c	FUNCTION_1	ELSE_1
0x400009e	            0x6690	                                     nop	        31	sideband.c	FUNCTION_1	ELSE_1
0x40000a0	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	        36	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_3
0x40000a5	          0x4531c9	                            xor r9d, r9d	        36	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_3
0x40000a8	            0x31d2	                            xor edx, edx	        36	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_3
0x40000aa	            0x31f6	                            xor esi, esi	        36	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_3
0x40000ac	    0x41b8f0ff0000	                         mov r8d, 0xfff0	        36	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_3
0x40000b2	            0x89ef	                            mov edi, ebp	        36	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_3
0x40000b4	      0xe800000000	                          call 0x40000b9	        36	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_3
0x40000b9	          0x83f800	                              cmp eax, 0	        37	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_2
0x40000bc	     0xf8409030000	                            je 0x40003cb	        37	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_2
0x40000c2	     0xf8ece020000	                           jle 0x4000396	        39	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3
0x40000c8	    0x440fb6442430	           movzx r8d, byte [rsp + 0x30] 	        46	sideband.c	FUNCTION_1	ELSE_1	WHILE_1
0x40000ce	          0x4863d0	                         movsxd rdx, eax	        47	sideband.c	FUNCTION_1	ELSE_1	WHILE_1
0x40000d1	      0xc644143000	          mov byte [rsp + rdx + 0x30], 0	        47	sideband.c	FUNCTION_1	ELSE_1	WHILE_1
0x40000d6	        0x4183f802	                              cmp r8d, 2	        49	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x40000da	     0xf8485000000	                            je 0x4000165	        49	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x40000e0	        0x4183f803	                              cmp r8d, 3	        49	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x40000e4	     0xf840e020000	                            je 0x40002f8	        49	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x40000ea	        0x4183f801	                              cmp r8d, 1	        49	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x40000ee	     0xf84ec010000	                            je 0x40002e0	        49	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x40000f4	    0x48837c241800	               cmp qword [rsp + 0x18], 0	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_14
0x40000fa	      0x488d5c2410	                   lea rbx, [rsp + 0x10]	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_14
0x40000ff	      0xb800000000	                              mov eax, 0	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_14
0x4000104	      0xba00000000	                              mov edx, 0	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_14
0x4000109	          0x4c89e1	                            mov rcx, r12	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_14
0x400010c	      0xbe00000000	                              mov esi, 0	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_14
0x4000111	          0x4889df	                            mov rdi, rbx	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_14
0x4000114	      0xbdfeffffff	                     mov ebp, 0xfffffffe	        93	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x4000119	        0x480f44d0	                          cmove rdx, rax	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_14
0x400011d	            0x31c0	                            xor eax, eax	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_14
0x400011f	      0xe800000000	                          call 0x4000124	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_14
0x4000124	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        98	sideband.c	FUNCTION_1	IF_7
0x4000129	          0x4885c0	                           test rax, rax	        98	sideband.c	FUNCTION_1	IF_7
0x400012c	     0xf850b020000	                           jne 0x400033d	        98	sideband.c	FUNCTION_1	IF_7
0x4000132	          0x4889df	                            mov rdi, rbx	       102	sideband.c	FUNCTION_1	CALL_17
0x4000135	      0xe800000000	                          call 0x400013a	       102	sideband.c	FUNCTION_1	CALL_17
0x400013a	    0x488b9c242800	         mov rbx, qword [rsp + 0x10028] 	       104	sideband.c	FUNCTION_1
0x4000142	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       104	sideband.c	FUNCTION_1
0x400014b	            0x89e8	                            mov eax, ebp	       104	sideband.c	FUNCTION_1
0x400014d	     0xf85ad020000	                           jne 0x4000400	       104	sideband.c	FUNCTION_1
0x4000153	    0x4881c4380001	                        add rsp, 0x10038	       104	sideband.c	FUNCTION_1
0x400015a	              0x5b	                                 pop rbx	       104	sideband.c	FUNCTION_1
0x400015b	              0x5d	                                 pop rbp	       104	sideband.c	FUNCTION_1
0x400015c	            0x415c	                                 pop r12	       104	sideband.c	FUNCTION_1
0x400015e	            0x415d	                                 pop r13	       104	sideband.c	FUNCTION_1
0x4000160	            0x415e	                                 pop r14	       104	sideband.c	FUNCTION_1
0x4000162	            0x415f	                                 pop r15	       104	sideband.c	FUNCTION_1
0x4000164	              0xc3	                                     ret	       104	sideband.c	FUNCTION_1
0x4000165	      0x488d4c2431	                   lea rcx, [rsp + 0x31]	        49	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x400016a	    0x660f1f440000	                    nop word [rax + rax]	        49	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x4000170	           0xfbe01	                   movsx eax, byte [rcx]	      1103	string2.h	FUNCTION_15	WHILE_1
0x4000173	            0x84c0	                             test al, al	      1103	string2.h	FUNCTION_15	WHILE_1
0x4000175	     0xf8425ffffff	                            je 0x40000a0	      1103	string2.h	FUNCTION_15	WHILE_1
0x400017b	          0x4989ce	                            mov r14, rcx	      1103	string2.h	FUNCTION_15	WHILE_1
0x400017e	            0x6690	                                     nop	      1103	string2.h	FUNCTION_15	WHILE_1
0x4000180	          0x83f80d	                            cmp eax, 0xd	      1103	string2.h	FUNCTION_15	WHILE_1
0x4000183	            0x743b	                            je 0x40001c0	      1103	string2.h	FUNCTION_15	WHILE_1
0x4000185	          0x83f80a	                            cmp eax, 0xa	      1103	string2.h	FUNCTION_15	WHILE_1
0x4000188	            0x7436	                            je 0x40001c0	      1103	string2.h	FUNCTION_15	WHILE_1
0x400018a	        0x4983c601	                              add r14, 1	      1104	string2.h	FUNCTION_15	WHILE_1
0x400018e	        0x410fbe06	                   movsx eax, byte [r14]	      1103	string2.h	FUNCTION_15	WHILE_1
0x4000192	            0x84c0	                             test al, al	      1103	string2.h	FUNCTION_15	WHILE_1
0x4000194	            0x75ea	                           jne 0x4000180	      1103	string2.h	FUNCTION_15	WHILE_1
0x4000196	    0x48837c241800	               cmp qword [rsp + 0x18], 0	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_12
0x400019c	      0xb800000000	                              mov eax, 0	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_12
0x40001a1	      0xba00000000	                              mov edx, 0	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_12
0x40001a6	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_12
0x40001ab	      0xbe00000000	                              mov esi, 0	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_12
0x40001b0	        0x480f44d0	                          cmove rdx, rax	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_12
0x40001b4	            0x31c0	                            xor eax, eax	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_12
0x40001b6	      0xe800000000	                          call 0x40001bb	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_12
0x40001bb	      0xe9e0feffff	                           jmp 0x40000a0	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_12
0x40001c0	          0x4d89f7	                            mov r15, r14	        67	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x40001c3	          0x4929cf	                            sub r15, rcx	        67	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x40001c6	    0x48837c241800	               cmp qword [rsp + 0x18], 0	        69	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_4
0x40001cc	            0x7462	                            je 0x4000230	        69	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_4
0x40001ce	          0x4585ff	                         test r15d, r15d	        71	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5
0x40001d1	     0xf8e7c000000	                           jle 0x4000253	        71	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5
0x40001d7	        0x450fbe0e	                   movsx r9d, byte [r14]	        72	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x40001db	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        72	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x40001e0	          0x4989d8	                             mov r8, rbx	        72	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x40001e3	          0x4489fa	                           mov edx, r15d	        72	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x40001e6	      0xbe00000000	                              mov esi, 0	        72	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x40001eb	            0x31c0	                            xor eax, eax	        72	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x40001ed	      0xe800000000	                          call 0x40001f2	        72	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x40001f2	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	        77	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_10
0x40001f7	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	        77	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_10
0x40001fc	      0xbf02000000	                              mov edi, 2	        77	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_10
0x4000201	      0xe800000000	                          call 0x4000206	        77	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_10
0x4000206	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       165	strbuf.h	FUNCTION_23	IF_2
0x400020b	    0x48c744241800	               mov qword [rsp + 0x18], 0	       164	strbuf.h	FUNCTION_23
0x4000214	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_23	IF_2
0x400021a	     0xf8480000000	                            je 0x40002a0	       165	strbuf.h	FUNCTION_23	IF_2
0x4000220	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_23	IF_2
0x4000223	        0x498d4e01	                      lea rcx, [r14 + 1]	        80	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x4000227	      0xe944ffffff	                           jmp 0x4000170	        80	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x400022c	         0xf1f4000	                         nop dword [rax]	        80	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x4000230	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       279	strbuf.h	FUNCTION_25	CALL_2
0x4000235	      0xba08000000	                              mov edx, 8	       279	strbuf.h	FUNCTION_25	CALL_2
0x400023a	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_25	CALL_2
0x400023f	      0x48894c2408	                mov qword [rsp + 8], rcx	       279	strbuf.h	FUNCTION_25	CALL_2
0x4000244	      0xe800000000	                          call 0x4000249	       279	strbuf.h	FUNCTION_25	CALL_2
0x4000249	          0x4585ff	                         test r15d, r15d	        71	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5
0x400024c	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       279	strbuf.h	FUNCTION_25	CALL_2
0x4000251	            0x7f84	                            jg 0x40001d7	        71	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5
0x4000253	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        71	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5
0x4000258	        0x450fb63e	                  movzx r15d, byte [r14]	        75	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	ELSE_2	CALL_9
0x400025c	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_22
0x400025f	            0x756f	                           jne 0x40002d0	       141	strbuf.h	FUNCTION_22
0x4000261	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       228	strbuf.h	FUNCTION_24	CALL_2
0x4000266	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_24	CALL_2
0x400026b	      0xe800000000	                          call 0x4000270	       228	strbuf.h	FUNCTION_24	CALL_2
0x4000270	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       228	strbuf.h	FUNCTION_24	CALL_2
0x4000275	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_24
0x4000279	      0x4889442418	             mov qword [rsp + 0x18], rax	       229	strbuf.h	FUNCTION_24
0x400027e	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       229	strbuf.h	FUNCTION_24
0x4000283	        0x44883c10	              mov byte [rax + rdx], r15b	       229	strbuf.h	FUNCTION_24
0x4000287	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       230	strbuf.h	FUNCTION_24
0x400028c	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       230	strbuf.h	FUNCTION_24
0x4000291	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_24
0x4000295	      0xe958ffffff	                           jmp 0x40001f2	       230	strbuf.h	FUNCTION_24
0x400029a	    0x660f1f440000	                    nop word [rax + rax]	       230	strbuf.h	FUNCTION_24
0x40002a0	    0x803d00000000	                cmp byte [0x040002a7], 0	       168	strbuf.h	FUNCTION_23	CALL_2
0x40002a7	     0xf8476ffffff	                            je 0x4000223	       168	strbuf.h	FUNCTION_23	CALL_2
0x40002ad	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_23	CALL_2
0x40002b2	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_23	CALL_2
0x40002b7	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_23	CALL_2
0x40002bc	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_23	CALL_2
0x40002c1	      0xe800000000	                          call 0x40002c6	       168	strbuf.h	FUNCTION_23	CALL_2
0x40002c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       168	strbuf.h	FUNCTION_23	CALL_2
0x40002d0	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       141	strbuf.h	FUNCTION_22
0x40002d5	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_24	IF_1	CALL_1
0x40002d9	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_24	IF_1	CALL_1
0x40002dc	            0x7597	                           jne 0x4000275	       227	strbuf.h	FUNCTION_24	IF_1	CALL_1
0x40002de	            0xeb81	                           jmp 0x4000261	       227	strbuf.h	FUNCTION_24	IF_1	CALL_1
0x40002e0	          0x83e801	                              sub eax, 1	        88	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x40002e3	      0x488d742431	                   lea rsi, [rsp + 0x31]	        88	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x40002e8	          0x4489ef	                           mov edi, r13d	        88	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x40002eb	          0x4863d0	                         movsxd rdx, eax	        88	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x40002ee	      0xe800000000	                          call 0x40002f3	        88	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x40002f3	      0xe9a8fdffff	                           jmp 0x40000a0	        89	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x40002f8	    0x48837c241800	               cmp qword [rsp + 0x18], 0	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x40002fe	      0x488d5c2410	                   lea rbx, [rsp + 0x10]	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000303	      0xb800000000	                              mov eax, 0	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000308	      0xba00000000	                              mov edx, 0	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x400030d	      0x4c8d442431	                    lea r8, [rsp + 0x31]	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000312	      0xb900000000	                              mov ecx, 0	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000317	      0xbe00000000	                              mov esi, 0	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x400031c	          0x4889df	                            mov rdi, rbx	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x400031f	      0xbdffffffff	                     mov ebp, 0xffffffff	        53	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x4000324	        0x480f44d0	                          cmove rdx, rax	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000328	            0x31c0	                            xor eax, eax	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x400032a	      0xe800000000	                          call 0x400032f	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x400032f	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        98	sideband.c	FUNCTION_1	IF_7
0x4000334	          0x4885c0	                           test rax, rax	        98	sideband.c	FUNCTION_1	IF_7
0x4000337	     0xf84f5fdffff	                            je 0x4000132	        98	sideband.c	FUNCTION_1	IF_7
0x400033d	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        98	sideband.c	FUNCTION_1	IF_7
0x4000342	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_22
0x4000345	     0xf85a3000000	                           jne 0x40003ee	       141	strbuf.h	FUNCTION_22
0x400034b	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_24	CALL_2
0x4000350	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_24	CALL_2
0x4000353	      0xe800000000	                          call 0x4000358	       228	strbuf.h	FUNCTION_24	CALL_2
0x4000358	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       228	strbuf.h	FUNCTION_24	CALL_2
0x400035d	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_24
0x4000361	      0xbf02000000	                              mov edi, 2	       100	sideband.c	FUNCTION_1	IF_7	CALL_16
0x4000366	      0x4889542418	             mov qword [rsp + 0x18], rdx	       229	strbuf.h	FUNCTION_24
0x400036b	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       229	strbuf.h	FUNCTION_24
0x4000370	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_24
0x4000374	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       230	strbuf.h	FUNCTION_24
0x4000379	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       230	strbuf.h	FUNCTION_24
0x400037e	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_24
0x4000382	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       100	sideband.c	FUNCTION_1	IF_7	CALL_16
0x4000387	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       100	sideband.c	FUNCTION_1	IF_7	CALL_16
0x400038c	      0xe800000000	                          call 0x4000391	       100	sideband.c	FUNCTION_1	IF_7	CALL_16
0x4000391	      0xe99cfdffff	                           jmp 0x4000132	       100	sideband.c	FUNCTION_1	IF_7	CALL_16
0x4000396	    0x48837c241800	               cmp qword [rsp + 0x18], 0	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x400039c	      0x488d5c2410	                   lea rbx, [rsp + 0x10]	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x40003a1	      0xb800000000	                              mov eax, 0	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x40003a6	      0xba00000000	                              mov edx, 0	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x40003ab	          0x4c89e1	                            mov rcx, r12	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x40003ae	      0xbe00000000	                              mov esi, 0	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x40003b3	          0x4889df	                            mov rdi, rbx	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x40003b6	      0xbdfeffffff	                     mov ebp, 0xfffffffe	        43	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3
0x40003bb	        0x480f44d0	                          cmove rdx, rax	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x40003bf	            0x31c0	                            xor eax, eax	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x40003c1	      0xe800000000	                          call 0x40003c6	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x40003c6	      0xe959fdffff	                           jmp 0x4000124	        44	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3
0x40003cb	            0x31ed	                            xor ebp, ebp	        44	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3
0x40003cd	      0x488d5c2410	                   lea rbx, [rsp + 0x10]	        44	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3
0x40003d2	      0xe94dfdffff	                           jmp 0x4000124	        44	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3
0x40003d7	      0xe800000000	                          call 0x40003dc	        28	sideband.c	FUNCTION_1	IF_1	CALL_2
0x40003dc	            0x85c0	                           test eax, eax	        28	sideband.c	FUNCTION_1	IF_1	CALL_2
0x40003de	      0xbb00000000	                              mov ebx, 0	        29	sideband.c	FUNCTION_1	IF_1
0x40003e3	     0xf84b7fcffff	                            je 0x40000a0	        28	sideband.c	FUNCTION_1	IF_1	CALL_2
0x40003e9	      0xe9abfcffff	                           jmp 0x4000099	        28	sideband.c	FUNCTION_1	IF_1	CALL_2
0x40003ee	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_24	IF_1	CALL_1
0x40003f2	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_24	IF_1	CALL_1
0x40003f5	     0xf8562ffffff	                           jne 0x400035d	       227	strbuf.h	FUNCTION_24	IF_1	CALL_1
0x40003fb	      0xe94bffffff	                           jmp 0x400034b	       227	strbuf.h	FUNCTION_24	IF_1	CALL_1
0x4000400	      0xe800000000	                          call 0x4000405	       104	sideband.c	FUNCTION_1
