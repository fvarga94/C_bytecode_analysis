send_sideband	CALL,5:WHILE,1:SWITCH,0:ELSE,1:IF,2:FOR,0:DO,0:functions,0	64
0x40003e9	            0x4157	                                push r15	       111	sideband.c	FUNCTION_2
0x40003eb	            0x4156	                                push r14	       111	sideband.c	FUNCTION_2
0x40003ed	            0x4155	                                push r13	       111	sideband.c	FUNCTION_2
0x40003ef	            0x4154	                                push r12	       111	sideband.c	FUNCTION_2
0x40003f1	              0x55	                                push rbp	       111	sideband.c	FUNCTION_2
0x40003f2	              0x53	                                push rbx	       111	sideband.c	FUNCTION_2
0x40003f3	        0x4883ec18	                           sub rsp, 0x18	       111	sideband.c	FUNCTION_2
0x40003f7	    0x64488b042528	                mov rax, qword fs:[0x28]	       111	sideband.c	FUNCTION_2
0x4000400	      0x4889442408	                mov qword [rsp + 8], rax	       111	sideband.c	FUNCTION_2
0x4000405	            0x31c0	                            xor eax, eax	       111	sideband.c	FUNCTION_2
0x4000407	          0x4885c9	                           test rcx, rcx	       114	sideband.c	FUNCTION_2	WHILE_1
0x400040a	     0xf8495000000	                            je 0x40004a5	       114	sideband.c	FUNCTION_2	WHILE_1
0x4000410	          0x4189fe	                           mov r14d, edi	       114	sideband.c	FUNCTION_2	WHILE_1
0x4000413	          0x4189f7	                           mov r15d, esi	       114	sideband.c	FUNCTION_2	WHILE_1
0x4000416	          0x4989d4	                            mov r12, rdx	       114	sideband.c	FUNCTION_2	WHILE_1
0x4000419	          0x4889cd	                            mov rbp, rcx	       114	sideband.c	FUNCTION_2	WHILE_1
0x400041c	        0x458d68fb	                      lea r13d, [r8 - 5]	       119	sideband.c	FUNCTION_2	WHILE_1	IF_1
0x4000420	          0x4439ed	                           cmp ebp, r13d	       119	sideband.c	FUNCTION_2	WHILE_1	IF_1
0x4000423	          0x4489eb	                           mov ebx, r13d	       119	sideband.c	FUNCTION_2	WHILE_1	IF_1
0x4000426	           0xf46dd	                         cmovbe ebx, ebp	       119	sideband.c	FUNCTION_2	WHILE_1	IF_1
0x4000429	          0x4585ff	                         test r15d, r15d	       121	sideband.c	FUNCTION_2	WHILE_1	IF_2
0x400042c	            0x7831	                            js 0x400045f	       121	sideband.c	FUNCTION_2	WHILE_1	IF_2
0x400042e	          0x8d4b05	                      lea ecx, [rbx + 5]	       122	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_1
0x4000431	      0xba00000000	                              mov edx, 0	       122	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_1
0x4000436	      0xbe05000000	                              mov esi, 5	       122	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_1
0x400043b	          0x4889e7	                            mov rdi, rsp	       122	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_1
0x400043e	      0xb800000000	                              mov eax, 0	       122	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_1
0x4000443	      0xe800000000	                          call 0x4000448	       122	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_1
0x4000448	      0x44887c2404	                mov byte [rsp + 4], r15b	       123	sideband.c	FUNCTION_2	WHILE_1	IF_2
0x400044d	      0xba05000000	                              mov edx, 5	       124	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_2
0x4000452	          0x4889e6	                            mov rsi, rsp	       124	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_2
0x4000455	          0x4489f7	                           mov edi, r14d	       124	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_2
0x4000458	      0xe800000000	                          call 0x400045d	       124	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_2
0x400045d	            0xeb2a	                           jmp 0x4000489	       124	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_2
0x400045f	          0x8d4b04	                      lea ecx, [rbx + 4]	       126	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_3
0x4000462	      0xba00000000	                              mov edx, 0	       126	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_3
0x4000467	      0xbe05000000	                              mov esi, 5	       126	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_3
0x400046c	          0x4889e7	                            mov rdi, rsp	       126	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_3
0x400046f	      0xb800000000	                              mov eax, 0	       126	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_3
0x4000474	      0xe800000000	                          call 0x4000479	       126	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_3
0x4000479	      0xba04000000	                              mov edx, 4	       127	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_4
0x400047e	          0x4889e6	                            mov rsi, rsp	       127	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_4
0x4000481	          0x4489f7	                           mov edi, r14d	       127	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_4
0x4000484	      0xe800000000	                          call 0x4000489	       127	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_4
0x4000489	            0x89db	                            mov ebx, ebx	       129	sideband.c	FUNCTION_2	WHILE_1	CALL_5
0x400048b	          0x4889da	                            mov rdx, rbx	       129	sideband.c	FUNCTION_2	WHILE_1	CALL_5
0x400048e	          0x4c89e6	                            mov rsi, r12	       129	sideband.c	FUNCTION_2	WHILE_1	CALL_5
0x4000491	          0x4489f7	                           mov edi, r14d	       129	sideband.c	FUNCTION_2	WHILE_1	CALL_5
0x4000494	      0xe800000000	                          call 0x4000499	       129	sideband.c	FUNCTION_2	WHILE_1	CALL_5
0x4000499	          0x4901dc	                            add r12, rbx	       130	sideband.c	FUNCTION_2	WHILE_1
0x400049c	          0x4829dd	                            sub rbp, rbx	       114	sideband.c	FUNCTION_2	WHILE_1
0x400049f	     0xf857bffffff	                           jne 0x4000420	       114	sideband.c	FUNCTION_2	WHILE_1
0x40004a5	      0x488b442408	                mov rax, qword [rsp + 8]	       133	sideband.c	FUNCTION_2
0x40004aa	    0x644833042528	                xor rax, qword fs:[0x28]	       133	sideband.c	FUNCTION_2
0x40004b3	            0x7405	                            je 0x40004ba	       133	sideband.c	FUNCTION_2
0x40004b5	      0xe800000000	                          call 0x40004ba	       133	sideband.c	FUNCTION_2
0x40004ba	        0x4883c418	                           add rsp, 0x18	       133	sideband.c	FUNCTION_2
0x40004be	              0x5b	                                 pop rbx	       133	sideband.c	FUNCTION_2
0x40004bf	              0x5d	                                 pop rbp	       133	sideband.c	FUNCTION_2
0x40004c0	            0x415c	                                 pop r12	       133	sideband.c	FUNCTION_2
0x40004c2	            0x415d	                                 pop r13	       133	sideband.c	FUNCTION_2
0x40004c4	            0x415e	                                 pop r14	       133	sideband.c	FUNCTION_2
0x40004c6	            0x415f	                                 pop r15	       133	sideband.c	FUNCTION_2
0x40004c8	              0xc3	                                     ret	       133	sideband.c	FUNCTION_2
recv_sideband	CALL,15:WHILE,2:SWITCH,1:ELSE,2:IF,7:FOR,0:DO,0:functions,0	220
0x4000040	            0x4157	                                push r15	        22	sideband.c	FUNCTION_1
0x4000042	            0x4156	                                push r14	        22	sideband.c	FUNCTION_1
0x4000044	            0x4155	                                push r13	        22	sideband.c	FUNCTION_1
0x4000046	            0x4154	                                push r12	        22	sideband.c	FUNCTION_1
0x4000048	              0x55	                                push rbp	        22	sideband.c	FUNCTION_1
0x4000049	              0x53	                                push rbx	        22	sideband.c	FUNCTION_1
0x400004a	    0x4881ec380001	                        sub rsp, 0x10038	        22	sideband.c	FUNCTION_1
0x4000051	        0x48893c24	                    mov qword [rsp], rdi	        22	sideband.c	FUNCTION_1
0x4000055	          0x4189f6	                           mov r14d, esi	        22	sideband.c	FUNCTION_1
0x4000058	        0x8954240c	              mov dword [rsp + 0xc], edx	        22	sideband.c	FUNCTION_1
0x400005c	    0x64488b042528	                mov rax, qword fs:[0x28]	        22	sideband.c	FUNCTION_1
0x4000065	    0x488984242800	         mov qword [rsp + 0x10028], rax 	        22	sideband.c	FUNCTION_1
0x400006d	            0x31c0	                            xor eax, eax	        22	sideband.c	FUNCTION_1
0x400006f	    0x48c744241000	               mov qword [rsp + 0x10], 0	        25	sideband.c	FUNCTION_1
0x4000078	    0x48c744241800	               mov qword [rsp + 0x18], 0	        25	sideband.c	FUNCTION_1
0x4000081	    0x48c744242000	               mov qword [rsp + 0x20], 0	        25	sideband.c	FUNCTION_1
0x400008a	      0xbf02000000	                              mov edi, 2	        28	sideband.c	FUNCTION_1	IF_1	CALL_2
0x400008f	      0xe800000000	                          call 0x4000094	        28	sideband.c	FUNCTION_1	IF_1	CALL_2
0x4000094	    0x41bd00000000	                             mov r13d, 0	        31	sideband.c	FUNCTION_1	ELSE_1
0x400009a	            0x85c0	                           test eax, eax	        28	sideband.c	FUNCTION_1	IF_1	CALL_2
0x400009c	            0x7414	                            je 0x40000b2	        28	sideband.c	FUNCTION_1	IF_1	CALL_2
0x400009e	      0xe800000000	                          call 0x40000a3	        28	sideband.c	FUNCTION_1	IF_1	CALL_2
0x40000a3	            0x85c0	                           test eax, eax	        31	sideband.c	FUNCTION_1	ELSE_1
0x40000a5	          0x4c89e8	                            mov rax, r13	        31	sideband.c	FUNCTION_1	ELSE_1
0x40000a8	    0x41bd00000000	                             mov r13d, 0	        31	sideband.c	FUNCTION_1	ELSE_1
0x40000ae	        0x4c0f45e8	                         cmovne r13, rax	        31	sideband.c	FUNCTION_1	ELSE_1
0x40000b2	    0x41bf00000000	                             mov r15d, 0	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_10
0x40000b8	    0x41b900000000	                              mov r9d, 0	        36	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_3
0x40000be	    0x41b8f0ff0000	                         mov r8d, 0xfff0	        36	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_3
0x40000c4	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	        36	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_3
0x40000c9	      0xba00000000	                              mov edx, 0	        36	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_3
0x40000ce	      0xbe00000000	                              mov esi, 0	        36	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_3
0x40000d3	          0x4489f7	                           mov edi, r14d	        36	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_3
0x40000d6	      0xe800000000	                          call 0x40000db	        36	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_3
0x40000db	            0x85c0	                           test eax, eax	        37	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_2
0x40000dd	     0xf8453020000	                            je 0x4000336	        37	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_2
0x40000e3	            0x85c0	                           test eax, eax	        39	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3
0x40000e5	            0x7f36	                            jg 0x400011d	        39	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3
0x40000e7	    0x48837c241800	               cmp qword [rsp + 0x18], 0	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x40000ed	      0xba00000000	                              mov edx, 0	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x40000f2	      0xb800000000	                              mov eax, 0	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x40000f7	        0x480f45d0	                         cmovne rdx, rax	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x40000fb	        0x488b0c24	                    mov rcx, qword [rsp]	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x40000ff	      0xbe00000000	                              mov esi, 0	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x4000104	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x4000109	      0xb800000000	                              mov eax, 0	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x400010e	      0xe800000000	                          call 0x4000113	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x4000113	      0xbbfeffffff	                     mov ebx, 0xfffffffe	        43	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3
0x4000118	      0xe91e020000	                           jmp 0x400033b	        44	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3
0x400011d	    0x440fb6442430	           movzx r8d, byte [rsp + 0x30] 	        46	sideband.c	FUNCTION_1	ELSE_1	WHILE_1
0x4000123	          0x4863d0	                         movsxd rdx, eax	        47	sideband.c	FUNCTION_1	ELSE_1	WHILE_1
0x4000126	      0xc644143000	          mov byte [rsp + rdx + 0x30], 0	        47	sideband.c	FUNCTION_1	ELSE_1	WHILE_1
0x400012b	        0x4183f802	                              cmp r8d, 2	        49	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x400012f	     0xf843c010000	                            je 0x4000271	        49	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x4000135	        0x4183f803	                              cmp r8d, 3	        49	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x4000139	            0x740f	                            je 0x400014a	        49	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x400013b	        0x4183f801	                              cmp r8d, 1	        49	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x400013f	     0xf85be010000	                           jne 0x4000303	        49	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x4000145	      0xe9a0010000	                           jmp 0x40002ea	        49	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x400014a	    0x48837c241800	               cmp qword [rsp + 0x18], 0	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000150	      0xba00000000	                              mov edx, 0	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000155	      0xb800000000	                              mov eax, 0	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x400015a	        0x480f45d0	                         cmovne rdx, rax	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x400015e	      0x4c8d442431	                    lea r8, [rsp + 0x31]	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000163	      0xb900000000	                              mov ecx, 0	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000168	      0xbe00000000	                              mov esi, 0	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x400016d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000172	      0xb800000000	                              mov eax, 0	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000177	      0xe800000000	                          call 0x400017c	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x400017c	      0xbbffffffff	                     mov ebx, 0xffffffff	        53	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x4000181	      0xe9b5010000	                           jmp 0x400033b	        54	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x4000186	          0x4989dc	                            mov r12, rbx	        67	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x4000189	          0x4929ec	                            sub r12, rbp	        67	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x400018c	    0x48837c241800	               cmp qword [rsp + 0x18], 0	        69	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_4
0x4000192	            0x7512	                           jne 0x40001a6	        69	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_4
0x4000194	      0xba08000000	                              mov edx, 8	       279	strbuf.h	FUNCTION_7	CALL_2
0x4000199	          0x4c89fe	                            mov rsi, r15	       279	strbuf.h	FUNCTION_7	CALL_2
0x400019c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       279	strbuf.h	FUNCTION_7	CALL_2
0x40001a1	      0xe800000000	                          call 0x40001a6	       279	strbuf.h	FUNCTION_7	CALL_2
0x40001a6	          0x4585e4	                         test r12d, r12d	        71	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5
0x40001a9	            0x7e23	                           jle 0x40001ce	        71	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5
0x40001ab	        0x440fbe0b	                   movsx r9d, byte [rbx]	        72	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_7
0x40001af	          0x4d89e8	                             mov r8, r13	        72	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_7
0x40001b2	          0x4889e9	                            mov rcx, rbp	        72	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_7
0x40001b5	          0x4489e2	                           mov edx, r12d	        72	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_7
0x40001b8	      0xbe00000000	                              mov esi, 0	        72	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_7
0x40001bd	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        72	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_7
0x40001c2	      0xb800000000	                              mov eax, 0	        72	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_7
0x40001c7	      0xe800000000	                          call 0x40001cc	        72	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_7
0x40001cc	            0xeb4c	                           jmp 0x400021a	        72	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_7
0x40001ce	           0xfb62b	                   movzx ebp, byte [rbx]	        75	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	ELSE_2	CALL_8
0x40001d1	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       141	strbuf.h	FUNCTION_4
0x40001d6	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_4
0x40001d9	            0x740b	                            je 0x40001e6	       141	strbuf.h	FUNCTION_4
0x40001db	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_6	IF_1	CALL_1
0x40001df	      0x4839442418	            cmp qword [rsp + 0x18], rax 	       227	strbuf.h	FUNCTION_6	IF_1	CALL_1
0x40001e4	            0x750f	                           jne 0x40001f5	       227	strbuf.h	FUNCTION_6	IF_1	CALL_1
0x40001e6	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_6	CALL_2
0x40001eb	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       228	strbuf.h	FUNCTION_6	CALL_2
0x40001f0	      0xe800000000	                          call 0x40001f5	       228	strbuf.h	FUNCTION_6	CALL_2
0x40001f5	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       229	strbuf.h	FUNCTION_6
0x40001fa	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_6
0x40001fe	      0x4889542418	             mov qword [rsp + 0x18], rdx	       229	strbuf.h	FUNCTION_6
0x4000203	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       229	strbuf.h	FUNCTION_6
0x4000208	        0x40882c02	               mov byte [rdx + rax], bpl	       229	strbuf.h	FUNCTION_6
0x400020c	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       230	strbuf.h	FUNCTION_6
0x4000211	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       230	strbuf.h	FUNCTION_6
0x4000216	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_6
0x400021a	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	        77	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_9
0x400021f	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	        77	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_9
0x4000224	      0xbf02000000	                              mov edi, 2	        77	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_9
0x4000229	      0xe800000000	                          call 0x400022e	        77	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_9
0x400022e	    0x48c744241800	               mov qword [rsp + 0x18], 0	       164	strbuf.h	FUNCTION_5
0x4000237	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       165	strbuf.h	FUNCTION_5	IF_2
0x400023c	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_5	IF_2
0x4000242	            0x7405	                            je 0x4000249	       165	strbuf.h	FUNCTION_5	IF_2
0x4000244	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_5	IF_2
0x4000247	            0xeb22	                           jmp 0x400026b	       166	strbuf.h	FUNCTION_5	IF_2
0x4000249	    0x803d00000000	                cmp byte [0x04000250], 0	       168	strbuf.h	FUNCTION_5	CALL_2
0x4000250	            0x7419	                            je 0x400026b	       168	strbuf.h	FUNCTION_5	CALL_2
0x4000252	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_5	CALL_2
0x4000257	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_5	CALL_2
0x400025c	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_5	CALL_2
0x4000261	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_5	CALL_2
0x4000266	      0xe800000000	                          call 0x400026b	       168	strbuf.h	FUNCTION_5	CALL_2
0x400026b	        0x488d6b01	                      lea rbp, [rbx + 1]	        80	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x400026f	            0xeb05	                           jmp 0x4000276	        80	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x4000271	      0x488d6c2431	                   lea rbp, [rsp + 0x31]	        49	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x4000276	         0xfb65500	                   movzx edx, byte [rbp]	      1103	string2.h	FUNCTION_26	WHILE_1
0x400027a	            0x84d2	                             test dl, dl	      1103	string2.h	FUNCTION_26	WHILE_1
0x400027c	            0x7439	                            je 0x40002b7	      1103	string2.h	FUNCTION_26	WHILE_1
0x400027e	           0xfbec2	                           movsx eax, dl	      1103	string2.h	FUNCTION_26	WHILE_1
0x4000281	          0x83f80d	                            cmp eax, 0xd	      1103	string2.h	FUNCTION_26	WHILE_1
0x4000284	     0xf8437010000	                            je 0x40003c1	      1103	string2.h	FUNCTION_26	WHILE_1
0x400028a	          0x83f80a	                            cmp eax, 0xa	      1103	string2.h	FUNCTION_26	WHILE_1
0x400028d	     0xf842e010000	                            je 0x40003c1	      1103	string2.h	FUNCTION_26	WHILE_1
0x4000293	          0x4889eb	                            mov rbx, rbp	      1103	string2.h	FUNCTION_26	WHILE_1
0x4000296	        0x4883c301	                              add rbx, 1	      1104	string2.h	FUNCTION_26	WHILE_1
0x400029a	           0xfb603	                   movzx eax, byte [rbx]	      1103	string2.h	FUNCTION_26	WHILE_1
0x400029d	            0x84c0	                             test al, al	      1103	string2.h	FUNCTION_26	WHILE_1
0x400029f	            0x7416	                            je 0x40002b7	      1103	string2.h	FUNCTION_26	WHILE_1
0x40002a1	           0xfbec0	                           movsx eax, al	      1103	string2.h	FUNCTION_26	WHILE_1
0x40002a4	          0x83f80a	                            cmp eax, 0xa	      1103	string2.h	FUNCTION_26	WHILE_1
0x40002a7	     0xf8417010000	                            je 0x40003c4	      1103	string2.h	FUNCTION_26	WHILE_1
0x40002ad	          0x83f80d	                            cmp eax, 0xd	      1103	string2.h	FUNCTION_26	WHILE_1
0x40002b0	            0x75e4	                           jne 0x4000296	      1103	string2.h	FUNCTION_26	WHILE_1
0x40002b2	      0xe90d010000	                           jmp 0x40003c4	      1103	string2.h	FUNCTION_26	WHILE_1
0x40002b7	            0x84d2	                             test dl, dl	        83	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6
0x40002b9	     0xf84f9fdffff	                            je 0x40000b8	        83	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6
0x40002bf	    0x48837c241800	               cmp qword [rsp + 0x18], 0	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_10
0x40002c5	      0xba00000000	                              mov edx, 0	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_10
0x40002ca	        0x490f44d7	                          cmove rdx, r15	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_10
0x40002ce	          0x4889e9	                            mov rcx, rbp	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_10
0x40002d1	      0xbe00000000	                              mov esi, 0	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_10
0x40002d6	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_10
0x40002db	      0xb800000000	                              mov eax, 0	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_10
0x40002e0	      0xe800000000	                          call 0x40002e5	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_10
0x40002e5	      0xe9cefdffff	                           jmp 0x40000b8	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_10
0x40002ea	          0x83e801	                              sub eax, 1	        88	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_11
0x40002ed	          0x4863d0	                         movsxd rdx, eax	        88	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_11
0x40002f0	      0x488d742431	                   lea rsi, [rsp + 0x31]	        88	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_11
0x40002f5	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	        88	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_11
0x40002f9	      0xe800000000	                          call 0x40002fe	        88	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_11
0x40002fe	      0xe9b5fdffff	                           jmp 0x40000b8	        89	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x4000303	    0x48837c241800	               cmp qword [rsp + 0x18], 0	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x4000309	      0xba00000000	                              mov edx, 0	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x400030e	      0xb800000000	                              mov eax, 0	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x4000313	        0x480f45d0	                         cmovne rdx, rax	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x4000317	        0x488b0c24	                    mov rcx, qword [rsp]	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x400031b	      0xbe00000000	                              mov esi, 0	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x4000320	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x4000325	      0xb800000000	                              mov eax, 0	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x400032a	      0xe800000000	                          call 0x400032f	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x400032f	      0xbbfeffffff	                     mov ebx, 0xfffffffe	        93	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x4000334	            0xeb05	                           jmp 0x400033b	        94	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x4000336	      0xbb00000000	                              mov ebx, 0	        94	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x400033b	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        98	sideband.c	FUNCTION_1	IF_7
0x4000340	          0x4885c0	                           test rax, rax	        98	sideband.c	FUNCTION_1	IF_7
0x4000343	            0x745b	                            je 0x40003a0	        98	sideband.c	FUNCTION_1	IF_7
0x4000345	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       141	strbuf.h	FUNCTION_4
0x400034a	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_4
0x400034d	            0x7409	                            je 0x4000358	       141	strbuf.h	FUNCTION_4
0x400034f	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_6	IF_1	CALL_1
0x4000353	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_6	IF_1	CALL_1
0x4000356	            0x750f	                           jne 0x4000367	       227	strbuf.h	FUNCTION_6	IF_1	CALL_1
0x4000358	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_6	CALL_2
0x400035d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       228	strbuf.h	FUNCTION_6	CALL_2
0x4000362	      0xe800000000	                          call 0x4000367	       228	strbuf.h	FUNCTION_6	CALL_2
0x4000367	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       229	strbuf.h	FUNCTION_6
0x400036c	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_6
0x4000370	      0x4889542418	             mov qword [rsp + 0x18], rdx	       229	strbuf.h	FUNCTION_6
0x4000375	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       229	strbuf.h	FUNCTION_6
0x400037a	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_6
0x400037e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       230	strbuf.h	FUNCTION_6
0x4000383	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       230	strbuf.h	FUNCTION_6
0x4000388	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_6
0x400038c	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       100	sideband.c	FUNCTION_1	IF_7	CALL_14
0x4000391	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       100	sideband.c	FUNCTION_1	IF_7	CALL_14
0x4000396	      0xbf02000000	                              mov edi, 2	       100	sideband.c	FUNCTION_1	IF_7	CALL_14
0x400039b	      0xe800000000	                          call 0x40003a0	       100	sideband.c	FUNCTION_1	IF_7	CALL_14
0x40003a0	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       102	sideband.c	FUNCTION_1	CALL_15
0x40003a5	      0xe800000000	                          call 0x40003aa	       102	sideband.c	FUNCTION_1	CALL_15
0x40003aa	            0x89d8	                            mov eax, ebx	       104	sideband.c	FUNCTION_1
0x40003ac	    0x488b8c242800	         mov rcx, qword [rsp + 0x10028] 	       104	sideband.c	FUNCTION_1
0x40003b4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       104	sideband.c	FUNCTION_1
0x40003bd	            0x7418	                            je 0x40003d7	       104	sideband.c	FUNCTION_1
0x40003bf	            0xeb11	                           jmp 0x40003d2	       104	sideband.c	FUNCTION_1
0x40003c1	          0x4889eb	                            mov rbx, rbp	      1103	string2.h	FUNCTION_26	WHILE_1
0x40003c4	          0x4885db	                           test rbx, rbx	        66	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x40003c7	     0xf85b9fdffff	                           jne 0x4000186	        66	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x40003cd	      0xe9e5feffff	                           jmp 0x40002b7	        66	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x40003d2	      0xe800000000	                          call 0x40003d7	       104	sideband.c	FUNCTION_1
0x40003d7	    0x4881c4380001	                        add rsp, 0x10038	       104	sideband.c	FUNCTION_1
0x40003de	              0x5b	                                 pop rbx	       104	sideband.c	FUNCTION_1
0x40003df	              0x5d	                                 pop rbp	       104	sideband.c	FUNCTION_1
0x40003e0	            0x415c	                                 pop r12	       104	sideband.c	FUNCTION_1
0x40003e2	            0x415d	                                 pop r13	       104	sideband.c	FUNCTION_1
0x40003e4	            0x415e	                                 pop r14	       104	sideband.c	FUNCTION_1
0x40003e6	            0x415f	                                 pop r15	       104	sideband.c	FUNCTION_1
0x40003e8	              0xc3	                                     ret	       104	sideband.c	FUNCTION_1
