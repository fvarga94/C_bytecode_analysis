prune_subdir	DO,0:FOR,0:CALL,2:ELSE,0:functions,0:WHILE,0:SWITCH,0:IF,1	17
0x4000040	              0x55	                                push rbp	        15	prune-packed.c	FUNCTION_1
0x4000041	              0x53	                                push rbx	        15	prune-packed.c	FUNCTION_1
0x4000042	        0x4883ec08	                              sub rsp, 8	        15	prune-packed.c	FUNCTION_1
0x4000046	          0x4889f5	                            mov rbp, rsi	        15	prune-packed.c	FUNCTION_1
0x4000049	          0x4889d3	                            mov rbx, rdx	        15	prune-packed.c	FUNCTION_1
0x400004c	          0x8d7701	                      lea esi, [rdi + 1]	        17	prune-packed.c	FUNCTION_1	CALL_1
0x400004f	    0x488b3d000000	            mov rdi, qword [0x04000056] 	        17	prune-packed.c	FUNCTION_1	CALL_1
0x4000056	      0xe800000000	                          call 0x400005b	        17	prune-packed.c	FUNCTION_1	CALL_1
0x400005b	          0xf60301	                      test byte [rbx], 1	        18	prune-packed.c	FUNCTION_1	IF_1
0x400005e	            0x7508	                           jne 0x4000068	        18	prune-packed.c	FUNCTION_1	IF_1
0x4000060	          0x4889ef	                            mov rdi, rbp	        19	prune-packed.c	FUNCTION_1	CALL_2
0x4000063	      0xe800000000	                          call 0x4000068	        19	prune-packed.c	FUNCTION_1	CALL_2
0x4000068	      0xb800000000	                              mov eax, 0	        21	prune-packed.c	FUNCTION_1
0x400006d	        0x4883c408	                              add rsp, 8	        21	prune-packed.c	FUNCTION_1
0x4000071	              0x5b	                                 pop rbx	        21	prune-packed.c	FUNCTION_1
0x4000072	              0x5d	                                 pop rbp	        21	prune-packed.c	FUNCTION_1
0x4000073	              0xc3	                                     ret	        21	prune-packed.c	FUNCTION_1
prune_packed_objects	DO,0:FOR,0:CALL,6:ELSE,0:functions,0:WHILE,0:SWITCH,0:IF,1	27
0x40000bb	        0x4883ec18	                           sub rsp, 0x18	        39	prune-packed.c	FUNCTION_3
0x40000bf	            0x89f8	                            mov eax, edi	        39	prune-packed.c	FUNCTION_3
0x40000c1	        0x897c240c	              mov dword [rsp + 0xc], edi	        39	prune-packed.c	FUNCTION_3
0x40000c5	            0xa802	                              test al, 2	        40	prune-packed.c	FUNCTION_3	IF_1
0x40000c7	            0x7428	                            je 0x40000f1	        40	prune-packed.c	FUNCTION_3	IF_1
0x40000c9	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_7
0x40000ce	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_7
0x40000d3	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_7
0x40000d8	      0xe800000000	                          call 0x40000dd	        54	gettext.h	FUNCTION_7
0x40000dd	      0xbe00010000	                          mov esi, 0x100	        41	prune-packed.c	FUNCTION_3	CALL_2
0x40000e2	          0x4889c7	                            mov rdi, rax	        41	prune-packed.c	FUNCTION_3	CALL_2
0x40000e5	      0xe800000000	                          call 0x40000ea	        41	prune-packed.c	FUNCTION_3	CALL_2
0x40000ea	    0x488905000000	            mov qword [0x040000f1], rax 	        41	prune-packed.c	FUNCTION_3	CALL_2
0x40000f1	      0xe800000000	                          call 0x40000f6	        43	prune-packed.c	FUNCTION_3	CALL_4
0x40000f6	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	        43	prune-packed.c	FUNCTION_3	CALL_4
0x40000fb	      0xb900000000	                              mov ecx, 0	        43	prune-packed.c	FUNCTION_3	CALL_4
0x4000100	      0xba00000000	                              mov edx, 0	        43	prune-packed.c	FUNCTION_3	CALL_4
0x4000105	      0xbe00000000	                              mov esi, 0	        43	prune-packed.c	FUNCTION_3	CALL_4
0x400010a	          0x4889c7	                            mov rdi, rax	        43	prune-packed.c	FUNCTION_3	CALL_4
0x400010d	      0xe800000000	                          call 0x4000112	        43	prune-packed.c	FUNCTION_3	CALL_4
0x4000112	      0xbe00010000	                          mov esi, 0x100	        47	prune-packed.c	FUNCTION_3	CALL_5
0x4000117	    0x488b3d000000	            mov rdi, qword [0x0400011e] 	        47	prune-packed.c	FUNCTION_3	CALL_5
0x400011e	      0xe800000000	                          call 0x4000123	        47	prune-packed.c	FUNCTION_3	CALL_5
0x4000123	      0xbf00000000	                              mov edi, 0	        48	prune-packed.c	FUNCTION_3	CALL_6
0x4000128	      0xe800000000	                          call 0x400012d	        48	prune-packed.c	FUNCTION_3	CALL_6
0x400012d	        0x4883c418	                           add rsp, 0x18	        49	prune-packed.c	FUNCTION_3
0x4000131	              0xc3	                                     ret	        49	prune-packed.c	FUNCTION_3
cmd_prune_packed	DO,0:FOR,0:CALL,6:ELSE,0:functions,0:WHILE,0:SWITCH,0:IF,0	54
0x4000132	            0x4154	                                push r12	        52	prune-packed.c	FUNCTION_4
0x4000134	              0x55	                                push rbp	        52	prune-packed.c	FUNCTION_4
0x4000135	              0x53	                                push rbx	        52	prune-packed.c	FUNCTION_4
0x4000136	    0x4881ece00000	                           sub rsp, 0xe0	        52	prune-packed.c	FUNCTION_4
0x400013d	            0x89fb	                            mov ebx, edi	        52	prune-packed.c	FUNCTION_4
0x400013f	          0x4889f5	                            mov rbp, rsi	        52	prune-packed.c	FUNCTION_4
0x4000142	          0x4989d4	                            mov r12, rdx	        52	prune-packed.c	FUNCTION_4
0x4000145	    0x64488b042528	                mov rax, qword fs:[0x28]	        52	prune-packed.c	FUNCTION_4
0x400014e	    0x48898424d800	             mov qword [rsp + 0xd8], rax	        52	prune-packed.c	FUNCTION_4
0x4000156	            0x31c0	                            xor eax, eax	        52	prune-packed.c	FUNCTION_4
0x4000158	      0xbf02000000	                              mov edi, 2	        53	prune-packed.c	FUNCTION_4	CALL_1
0x400015d	      0xe800000000	                          call 0x4000162	        53	prune-packed.c	FUNCTION_4	CALL_1
0x4000162	            0x85c0	                           test eax, eax	        53	prune-packed.c	FUNCTION_4	CALL_1
0x4000164	      0xba02000000	                              mov edx, 2	        53	prune-packed.c	FUNCTION_4	CALL_1
0x4000169	           0xf45c2	                         cmovne eax, edx	        53	prune-packed.c	FUNCTION_4	CALL_1
0x400016c	        0x8944240c	              mov dword [rsp + 0xc], eax	        53	prune-packed.c	FUNCTION_4	CALL_1
0x4000170	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        54	prune-packed.c	FUNCTION_4
0x4000175	      0xb918000000	                           mov ecx, 0x18	        54	prune-packed.c	FUNCTION_4
0x400017a	      0xb800000000	                              mov eax, 0	        54	prune-packed.c	FUNCTION_4
0x400017f	          0xf348ab	              rep stosq qword [rdi], rax	        54	prune-packed.c	FUNCTION_4
0x4000182	    0xc74424100400	               mov dword [rsp + 0x10], 4	        54	prune-packed.c	FUNCTION_4
0x400018a	    0xc74424146e00	           mov dword [rsp + 0x14], 0x6e 	        54	prune-packed.c	FUNCTION_4
0x4000192	    0x48c744241800	               mov qword [rsp + 0x18], 0	        54	prune-packed.c	FUNCTION_4
0x400019b	      0x488d44240c	                    lea rax, [rsp + 0xc]	        54	prune-packed.c	FUNCTION_4
0x40001a0	      0x4889442420	             mov qword [rsp + 0x20], rax	        54	prune-packed.c	FUNCTION_4
0x40001a5	    0x48c744243000	               mov qword [rsp + 0x30], 0	        54	prune-packed.c	FUNCTION_4
0x40001ae	    0xc74424380200	               mov dword [rsp + 0x38], 2	        54	prune-packed.c	FUNCTION_4
0x40001b6	    0x48c744244801	               mov qword [rsp + 0x48], 1	        54	prune-packed.c	FUNCTION_4
0x40001bf	    0xc74424500500	               mov dword [rsp + 0x50], 5	        54	prune-packed.c	FUNCTION_4
0x40001c7	    0xc74424547100	           mov dword [rsp + 0x54], 0x71 	        54	prune-packed.c	FUNCTION_4
0x40001cf	    0x48c744245800	               mov qword [rsp + 0x58], 0	        54	prune-packed.c	FUNCTION_4
0x40001d8	      0x4889442460	             mov qword [rsp + 0x60], rax	        54	prune-packed.c	FUNCTION_4
0x40001dd	    0x48c744247000	               mov qword [rsp + 0x70], 0	        54	prune-packed.c	FUNCTION_4
0x40001e6	    0xc74424780200	               mov dword [rsp + 0x78], 2	        54	prune-packed.c	FUNCTION_4
0x40001ee	    0x48c784248800	               mov qword [rsp + 0x88], 2	        54	prune-packed.c	FUNCTION_4
0x40001fa	    0x41b900000000	                              mov r9d, 0	        62	prune-packed.c	FUNCTION_4	CALL_5
0x4000200	    0x41b800000000	                              mov r8d, 0	        62	prune-packed.c	FUNCTION_4	CALL_5
0x4000206	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	        62	prune-packed.c	FUNCTION_4	CALL_5
0x400020b	          0x4c89e2	                            mov rdx, r12	        62	prune-packed.c	FUNCTION_4	CALL_5
0x400020e	          0x4889ee	                            mov rsi, rbp	        62	prune-packed.c	FUNCTION_4	CALL_5
0x4000211	            0x89df	                            mov edi, ebx	        62	prune-packed.c	FUNCTION_4	CALL_5
0x4000213	      0xe800000000	                          call 0x4000218	        62	prune-packed.c	FUNCTION_4	CALL_5
0x4000218	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	        65	prune-packed.c	FUNCTION_4	CALL_6
0x400021c	      0xe800000000	                          call 0x4000221	        65	prune-packed.c	FUNCTION_4	CALL_6
0x4000221	    0x488bb424d800	            mov rsi, qword [rsp + 0xd8] 	        67	prune-packed.c	FUNCTION_4
0x4000229	    0x644833342528	                xor rsi, qword fs:[0x28]	        67	prune-packed.c	FUNCTION_4
0x4000232	            0x7405	                            je 0x4000239	        67	prune-packed.c	FUNCTION_4
0x4000234	      0xe800000000	                          call 0x4000239	        67	prune-packed.c	FUNCTION_4
0x4000239	      0xb800000000	                              mov eax, 0	        67	prune-packed.c	FUNCTION_4
0x400023e	    0x4881c4e00000	                           add rsp, 0xe0	        67	prune-packed.c	FUNCTION_4
0x4000245	              0x5b	                                 pop rbx	        67	prune-packed.c	FUNCTION_4
0x4000246	              0x5d	                                 pop rbp	        67	prune-packed.c	FUNCTION_4
0x4000247	            0x415c	                                 pop r12	        67	prune-packed.c	FUNCTION_4
0x4000249	              0xc3	                                     ret	        67	prune-packed.c	FUNCTION_4
prune_object	DO,0:FOR,0:CALL,2:ELSE,1:functions,0:WHILE,0:SWITCH,0:IF,2	23
0x4000074	              0x55	                                push rbp	        25	prune-packed.c	FUNCTION_2
0x4000075	              0x53	                                push rbx	        25	prune-packed.c	FUNCTION_2
0x4000076	        0x4883ec08	                              sub rsp, 8	        25	prune-packed.c	FUNCTION_2
0x400007a	          0x4889f5	                            mov rbp, rsi	        25	prune-packed.c	FUNCTION_2
0x400007d	          0x4889d3	                            mov rbx, rdx	        25	prune-packed.c	FUNCTION_2
0x4000080	      0xe800000000	                          call 0x4000085	        28	prune-packed.c	FUNCTION_2	IF_1	CALL_1
0x4000085	            0x85c0	                           test eax, eax	        28	prune-packed.c	FUNCTION_2	IF_1	CALL_1
0x4000087	            0x7426	                            je 0x40000af	        28	prune-packed.c	FUNCTION_2	IF_1	CALL_1
0x4000089	          0xf60301	                      test byte [rbx], 1	        31	prune-packed.c	FUNCTION_2	IF_2
0x400008c	            0x7419	                            je 0x40000a7	        31	prune-packed.c	FUNCTION_2	IF_2
0x400008e	          0x4889ea	                            mov rdx, rbp	       104	stdio2.h	CALL_16
0x4000091	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4000096	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400009b	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_16
0x40000a0	      0xe800000000	                          call 0x40000a5	       104	stdio2.h	CALL_16
0x40000a5	            0xeb08	                           jmp 0x40000af	       104	stdio2.h	CALL_16
0x40000a7	          0x4889ef	                            mov rdi, rbp	        34	prune-packed.c	FUNCTION_2	CALL_2
0x40000aa	      0xe800000000	                          call 0x40000af	        34	prune-packed.c	FUNCTION_2	CALL_2
0x40000af	      0xb800000000	                              mov eax, 0	        36	prune-packed.c	FUNCTION_2
0x40000b4	        0x4883c408	                              add rsp, 8	        36	prune-packed.c	FUNCTION_2
0x40000b8	              0x5b	                                 pop rbx	        36	prune-packed.c	FUNCTION_2
0x40000b9	              0x5d	                                 pop rbp	        36	prune-packed.c	FUNCTION_2
0x40000ba	              0xc3	                                     ret	        36	prune-packed.c	FUNCTION_2
