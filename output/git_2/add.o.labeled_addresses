update_callback	CALL,8:FOR,1:ELSE,0:SWITCH,1:DO,0:IF,5:functions,0:WHILE,0	87
0x4000054	        0x837f0c00	                cmp dword [rdi + 0xc], 0	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4000058	     0xf8e29010000	                           jle 0x4000187	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x400005e	            0x4156	                                push r14	        74	add.c	ELSE_1	FUNCTION_3
0x4000060	            0x4155	                                push r13	        74	add.c	ELSE_1	FUNCTION_3
0x4000062	            0x4154	                                push r12	        74	add.c	ELSE_1	FUNCTION_3
0x4000064	              0x55	                                push rbp	        74	add.c	ELSE_1	FUNCTION_3
0x4000065	              0x53	                                push rbx	        74	add.c	ELSE_1	FUNCTION_3
0x4000066	          0x4989d5	                            mov r13, rdx	        74	add.c	ELSE_1	FUNCTION_3
0x4000069	          0x4989fc	                            mov r12, rdi	        74	add.c	ELSE_1	FUNCTION_3
0x400006c	      0xbd00000000	                              mov ebp, 0	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4000071	          0x4863c5	                         movsxd rax, ebp	        79	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4000074	        0x498b1424	                    mov rdx, qword [r12]	        79	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4000078	        0x488b04c2	            mov rax, qword [rdx + rax*8]	        79	add.c	ELSE_1	FUNCTION_3	FOR_1
0x400007c	          0x488b10	                    mov rdx, qword [rax]	        80	add.c	ELSE_1	FUNCTION_3	FOR_1
0x400007f	        0x4c8b7218	            mov r14, qword [rdx + 0x18] 	        80	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4000083	         0xfb65812	           movzx ebx, byte [rax + 0x12] 	        54	add.c	FUNCTION_2	IF_1
0x4000087	          0x80fb55	                            cmp bl, 0x55	        54	add.c	FUNCTION_2	IF_1
0x400008a	            0x7414	                            je 0x40000a0	        54	add.c	FUNCTION_2	IF_1
0x400008c	          0x80fb4d	                            cmp bl, 0x4d	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x400008f	            0x744b	                            je 0x40000dc	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4000091	          0x80fb54	                            cmp bl, 0x54	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4000094	            0x7446	                            je 0x40000dc	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4000096	          0x80fb44	                            cmp bl, 0x44	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4000099	            0x751d	                           jne 0x40000b8	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x400009b	      0xe980000000	                           jmp 0x4000120	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x40000a0	      0x41f6450008	                      test byte [r13], 8	        56	add.c	FUNCTION_2	IF_2
0x40000a5	            0x7535	                           jne 0x40000dc	        56	add.c	FUNCTION_2	IF_2
0x40000a7	        0x488b4008	                mov rax, qword [rax + 8]	        56	add.c	FUNCTION_2	IF_2
0x40000ab	      0x6683784000	                cmp word [rax + 0x40], 0	        56	add.c	FUNCTION_2	IF_2
0x40000b0	     0xf84c3000000	                            je 0x4000179	        56	add.c	FUNCTION_2	IF_2
0x40000b6	            0xeb24	                           jmp 0x40000dc	        56	add.c	FUNCTION_2	IF_2
0x40000b8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_18
0x40000bd	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_18
0x40000c2	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_18
0x40000c7	      0xe800000000	                          call 0x40000cc	        54	gettext.h	FUNCTION_18
0x40000cc	           0xfbef3	                           movsx esi, bl	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x40000cf	          0x4889c7	                            mov rdi, rax	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x40000d2	      0xb800000000	                              mov eax, 0	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x40000d7	      0xe800000000	                          call 0x40000dc	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x40000dc	        0x418b5500	                    mov edx, dword [r13]	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x40000e0	          0x4c89f6	                            mov rsi, r14	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x40000e3	      0xbf00000000	                              mov edi, 0	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x40000e8	      0xe800000000	                          call 0x40000ed	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x40000ed	            0x85c0	                           test eax, eax	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x40000ef	            0x7478	                            je 0x4000169	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x40000f1	      0x41f6450004	                      test byte [r13], 4	        87	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	IF_2
0x40000f6	            0x7521	                           jne 0x4000119	        87	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	IF_2
0x40000f8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_18
0x40000fd	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_18
0x4000102	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_18
0x4000107	      0xe800000000	                          call 0x400010c	        54	gettext.h	FUNCTION_18
0x400010c	          0x4889c7	                            mov rdi, rax	        88	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_6
0x400010f	      0xb800000000	                              mov eax, 0	        88	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_6
0x4000114	      0xe800000000	                          call 0x4000119	        88	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_6
0x4000119	      0x4183450401	                  add dword [r13 + 4], 1	        89	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x400011e	            0xeb49	                           jmp 0x4000169	        89	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x4000120	        0x418b4500	                    mov eax, dword [r13]	        93	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x4000124	            0xa808	                              test al, 8	        93	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x4000126	            0x7541	                           jne 0x4000169	        93	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x4000128	            0xa802	                              test al, 2	        95	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_4
0x400012a	            0x750d	                           jne 0x4000139	        95	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_4
0x400012c	          0x4c89f6	                            mov rsi, r14	        96	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x400012f	      0xbf00000000	                              mov edi, 0	        96	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x4000134	      0xe800000000	                          call 0x4000139	        96	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x4000139	      0x41f6450003	                      test byte [r13], 3	        97	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_5
0x400013e	            0x7429	                            je 0x4000169	        97	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_5
0x4000140	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_18
0x4000145	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_18
0x400014a	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_18
0x400014f	      0xe800000000	                          call 0x4000154	        54	gettext.h	FUNCTION_18
0x4000154	          0x4c89f2	                            mov rdx, r14	       104	stdio2.h	CALL_33
0x4000157	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_33
0x400015a	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_33
0x400015f	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_33
0x4000164	      0xe800000000	                          call 0x4000169	       104	stdio2.h	CALL_33
0x4000169	          0x83c501	                              add ebp, 1	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x400016c	      0x41396c240c	              cmp dword [r12 + 0xc], ebp	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4000171	     0xf8ffafeffff	                            jg 0x4000071	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4000177	            0xeb06	                           jmp 0x400017f	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4000179	        0x418b4500	                    mov eax, dword [r13]	        93	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x400017d	            0xeba9	                           jmp 0x4000128	        93	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x400017f	              0x5b	                                 pop rbx	       102	add.c	ELSE_1	FUNCTION_3
0x4000180	              0x5d	                                 pop rbp	       102	add.c	ELSE_1	FUNCTION_3
0x4000181	            0x415c	                                 pop r12	       102	add.c	ELSE_1	FUNCTION_3
0x4000183	            0x415d	                                 pop r13	       102	add.c	ELSE_1	FUNCTION_3
0x4000185	            0x415e	                                 pop r14	       102	add.c	ELSE_1	FUNCTION_3
0x4000187	            0xf3c3	                                     ret	       102	add.c	ELSE_1	FUNCTION_3
ignore_removal_cb	CALL,0:FOR,0:ELSE,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0	7
0x4000040	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       286	add.c	FUNCTION_11
0x4000044	            0x85d2	                           test edx, edx	       286	add.c	FUNCTION_11
0x4000046	           0xf95c2	                                setne dl	       286	add.c	FUNCTION_11
0x4000049	           0xfb6d2	                           movzx edx, dl	       286	add.c	FUNCTION_11
0x400004c	            0x8910	                    mov dword [rax], edx	       286	add.c	FUNCTION_11
0x400004e	      0xb800000000	                              mov eax, 0	       288	add.c	FUNCTION_11
0x4000053	              0xc3	                                     ret	       288	add.c	FUNCTION_11
interactive_add	CALL,2:FOR,0:ELSE,0:SWITCH,0:DO,0:IF,0:functions,0:WHILE,0	26
0x40003a9	              0x53	                                push rbx	       204	add.c	FUNCTION_9
0x40003aa	        0x4883ec20	                           sub rsp, 0x20	       204	add.c	FUNCTION_9
0x40003ae	          0x4989f0	                             mov r8, rsi	       204	add.c	FUNCTION_9
0x40003b1	            0x89cb	                            mov ebx, ecx	       204	add.c	FUNCTION_9
0x40003b3	    0x64488b042528	                mov rax, qword fs:[0x28]	       204	add.c	FUNCTION_9
0x40003bc	      0x4889442418	             mov qword [rsp + 0x18], rax	       204	add.c	FUNCTION_9
0x40003c1	            0x31c0	                            xor eax, eax	       204	add.c	FUNCTION_9
0x40003c3	          0x4889d1	                            mov rcx, rdx	       207	add.c	FUNCTION_9	CALL_1
0x40003c6	      0xba1a000000	                           mov edx, 0x1a	       207	add.c	FUNCTION_9	CALL_1
0x40003cb	      0xbe00000000	                              mov esi, 0	       207	add.c	FUNCTION_9	CALL_1
0x40003d0	          0x4889e7	                            mov rdi, rsp	       207	add.c	FUNCTION_9	CALL_1
0x40003d3	      0xe800000000	                          call 0x40003d8	       207	add.c	FUNCTION_9	CALL_1
0x40003d8	            0x85db	                           test ebx, ebx	       213	add.c	FUNCTION_9	CALL_2
0x40003da	      0xbe00000000	                              mov esi, 0	       213	add.c	FUNCTION_9	CALL_2
0x40003df	      0xb800000000	                              mov eax, 0	       213	add.c	FUNCTION_9	CALL_2
0x40003e4	        0x480f45f0	                         cmovne rsi, rax	       213	add.c	FUNCTION_9	CALL_2
0x40003e8	          0x4889e2	                            mov rdx, rsp	       213	add.c	FUNCTION_9	CALL_2
0x40003eb	      0xbf00000000	                              mov edi, 0	       213	add.c	FUNCTION_9	CALL_2
0x40003f0	      0xe800000000	                          call 0x40003f5	       213	add.c	FUNCTION_9	CALL_2
0x40003f5	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       216	add.c	FUNCTION_9
0x40003fa	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       216	add.c	FUNCTION_9
0x4000403	            0x7405	                            je 0x400040a	       216	add.c	FUNCTION_9
0x4000405	      0xe800000000	                          call 0x400040a	       216	add.c	FUNCTION_9
0x400040a	        0x4883c420	                           add rsp, 0x20	       216	add.c	FUNCTION_9
0x400040e	              0x5b	                                 pop rbx	       216	add.c	FUNCTION_9
0x400040f	              0xc3	                                     ret	       216	add.c	FUNCTION_9
run_add_interactive	CALL,7:FOR,1:ELSE,0:SWITCH,0:DO,0:IF,2:functions,0:WHILE,0	59
0x40002c9	            0x4154	                                push r12	       184	add.c	FUNCTION_8
0x40002cb	              0x55	                                push rbp	       184	add.c	FUNCTION_8
0x40002cc	              0x53	                                push rbx	       184	add.c	FUNCTION_8
0x40002cd	        0x4883ec20	                           sub rsp, 0x20	       184	add.c	FUNCTION_8
0x40002d1	          0x4889fb	                            mov rbx, rdi	       184	add.c	FUNCTION_8
0x40002d4	          0x4989f4	                            mov r12, rsi	       184	add.c	FUNCTION_8
0x40002d7	          0x4889d5	                            mov rbp, rdx	       184	add.c	FUNCTION_8
0x40002da	    0x64488b042528	                mov rax, qword fs:[0x28]	       184	add.c	FUNCTION_8
0x40002e3	      0x4889442418	             mov qword [rsp + 0x18], rax	       184	add.c	FUNCTION_8
0x40002e8	            0x31c0	                            xor eax, eax	       184	add.c	FUNCTION_8
0x40002ea	    0x48c704240000	                      mov qword [rsp], 0	       186	add.c	FUNCTION_8
0x40002f2	    0xc74424080000	                  mov dword [rsp + 8], 0	       186	add.c	FUNCTION_8
0x40002fa	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       186	add.c	FUNCTION_8
0x4000302	      0xbe00000000	                              mov esi, 0	       188	add.c	FUNCTION_8	CALL_1
0x4000307	          0x4889e7	                            mov rdi, rsp	       188	add.c	FUNCTION_8	CALL_1
0x400030a	      0xe800000000	                          call 0x400030f	       188	add.c	FUNCTION_8	CALL_1
0x400030f	          0x4d85e4	                           test r12, r12	       189	add.c	FUNCTION_8	IF_1
0x4000312	            0x740b	                            je 0x400031f	       189	add.c	FUNCTION_8	IF_1
0x4000314	          0x4c89e6	                            mov rsi, r12	       190	add.c	FUNCTION_8	CALL_2
0x4000317	          0x4889e7	                            mov rdi, rsp	       190	add.c	FUNCTION_8	CALL_2
0x400031a	      0xe800000000	                          call 0x400031f	       190	add.c	FUNCTION_8	CALL_2
0x400031f	          0x4885db	                           test rbx, rbx	       191	add.c	FUNCTION_8	IF_2
0x4000322	            0x740b	                            je 0x400032f	       191	add.c	FUNCTION_8	IF_2
0x4000324	          0x4889de	                            mov rsi, rbx	       192	add.c	FUNCTION_8	CALL_3
0x4000327	          0x4889e7	                            mov rdi, rsp	       192	add.c	FUNCTION_8	CALL_3
0x400032a	      0xe800000000	                          call 0x400032f	       192	add.c	FUNCTION_8	CALL_3
0x400032f	      0xbe00000000	                              mov esi, 0	       193	add.c	FUNCTION_8	CALL_4
0x4000334	          0x4889e7	                            mov rdi, rsp	       193	add.c	FUNCTION_8	CALL_4
0x4000337	      0xe800000000	                          call 0x400033c	       193	add.c	FUNCTION_8	CALL_4
0x400033c	        0x837d0000	                      cmp dword [rbp], 0	       194	add.c	FUNCTION_8	FOR_1
0x4000340	            0x7e2f	                           jle 0x4000371	       194	add.c	FUNCTION_8	FOR_1
0x4000342	      0xbb00000000	                              mov ebx, 0	       194	add.c	FUNCTION_8	FOR_1
0x4000347	          0x4863c3	                         movsxd rax, ebx	       196	add.c	FUNCTION_8	CALL_5
0x400034a	    0x488d14c50000	                        lea rdx, [rax*8]	       196	add.c	FUNCTION_8	CALL_5
0x4000352	        0x48c1e006	                              shl rax, 6	       196	add.c	FUNCTION_8	CALL_5
0x4000356	          0x4829d0	                            sub rax, rdx	       196	add.c	FUNCTION_8	CALL_5
0x4000359	        0x48034510	             add rax, qword [rbp + 0x10]	       196	add.c	FUNCTION_8	CALL_5
0x400035d	        0x488b7008	                mov rsi, qword [rax + 8]	       196	add.c	FUNCTION_8	CALL_5
0x4000361	          0x4889e7	                            mov rdi, rsp	       196	add.c	FUNCTION_8	CALL_5
0x4000364	      0xe800000000	                          call 0x4000369	       196	add.c	FUNCTION_8	CALL_5
0x4000369	          0x83c301	                              add ebx, 1	       194	add.c	FUNCTION_8	FOR_1
0x400036c	          0x395d00	                    cmp dword [rbp], ebx	       194	add.c	FUNCTION_8	FOR_1
0x400036f	            0x7fd6	                            jg 0x4000347	       194	add.c	FUNCTION_8	FOR_1
0x4000371	      0xbe02000000	                              mov esi, 2	       198	add.c	FUNCTION_8	CALL_6
0x4000376	        0x488b3c24	                    mov rdi, qword [rsp]	       198	add.c	FUNCTION_8	CALL_6
0x400037a	      0xe800000000	                          call 0x400037f	       198	add.c	FUNCTION_8	CALL_6
0x400037f	            0x89c3	                            mov ebx, eax	       198	add.c	FUNCTION_8	CALL_6
0x4000381	          0x4889e7	                            mov rdi, rsp	       199	add.c	FUNCTION_8	CALL_7
0x4000384	      0xe800000000	                          call 0x4000389	       199	add.c	FUNCTION_8	CALL_7
0x4000389	            0x89d8	                            mov eax, ebx	       201	add.c	FUNCTION_8
0x400038b	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       201	add.c	FUNCTION_8
0x4000390	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       201	add.c	FUNCTION_8
0x4000399	            0x7405	                            je 0x40003a0	       201	add.c	FUNCTION_8
0x400039b	      0xe800000000	                          call 0x40003a0	       201	add.c	FUNCTION_8
0x40003a0	        0x4883c420	                           add rsp, 0x20	       201	add.c	FUNCTION_8
0x40003a4	              0x5b	                                 pop rbx	       201	add.c	FUNCTION_8
0x40003a5	              0x5d	                                 pop rbp	       201	add.c	FUNCTION_8
0x40003a6	            0x415c	                                 pop r12	       201	add.c	FUNCTION_8
0x40003a8	              0xc3	                                     ret	       201	add.c	FUNCTION_8
add_config	CALL,4:FOR,0:ELSE,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0	30
0x4000189	        0x4883ec08	                              sub rsp, 8	       316	add.c	FUNCTION_12
0x400018d	          0x4889f8	                            mov rax, rdi	       316	add.c	FUNCTION_12
0x4000190	          0x4989f0	                             mov r8, rsi	       316	add.c	FUNCTION_12
0x4000193	      0xbf00000000	                              mov edi, 0	       317	add.c	FUNCTION_12	IF_1	CALL_1
0x4000198	      0xb911000000	                           mov ecx, 0x11	       317	add.c	FUNCTION_12	IF_1	CALL_1
0x400019d	          0x4889c6	                            mov rsi, rax	       317	add.c	FUNCTION_12	IF_1	CALL_1
0x40001a0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       317	add.c	FUNCTION_12	IF_1	CALL_1
0x40001a2	        0x400f97c6	                                seta sil	       317	add.c	FUNCTION_12	IF_1	CALL_1
0x40001a6	           0xf92c1	                                 setb cl	       317	add.c	FUNCTION_12	IF_1	CALL_1
0x40001a9	          0x4038ce	                             cmp sil, cl	       317	add.c	FUNCTION_12	IF_1	CALL_1
0x40001ac	            0x741b	                            je 0x40001c9	       317	add.c	FUNCTION_12	IF_1	CALL_1
0x40001ae	      0xbf00000000	                              mov edi, 0	       318	add.c	FUNCTION_12	IF_1	CALL_2
0x40001b3	      0xb912000000	                           mov ecx, 0x12	       318	add.c	FUNCTION_12	IF_1	CALL_2
0x40001b8	          0x4889c6	                            mov rsi, rax	       318	add.c	FUNCTION_12	IF_1	CALL_2
0x40001bb	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       318	add.c	FUNCTION_12	IF_1	CALL_2
0x40001bd	        0x400f97c6	                                seta sil	       318	add.c	FUNCTION_12	IF_1	CALL_2
0x40001c1	           0xf92c1	                                 setb cl	       318	add.c	FUNCTION_12	IF_1	CALL_2
0x40001c4	          0x4038ce	                             cmp sil, cl	       317	add.c	FUNCTION_12	IF_1	CALL_1
0x40001c7	            0x7518	                           jne 0x40001e1	       317	add.c	FUNCTION_12	IF_1	CALL_1
0x40001c9	          0x4c89c6	                             mov rsi, r8	       319	add.c	FUNCTION_12	IF_1	CALL_3
0x40001cc	          0x4889c7	                            mov rdi, rax	       319	add.c	FUNCTION_12	IF_1	CALL_3
0x40001cf	      0xe800000000	                          call 0x40001d4	       319	add.c	FUNCTION_12	IF_1	CALL_3
0x40001d4	    0x890500000000	            mov dword [0x040001da], eax 	       319	add.c	FUNCTION_12	IF_1	CALL_3
0x40001da	      0xb800000000	                              mov eax, 0	       320	add.c	FUNCTION_12	IF_1
0x40001df	            0xeb0b	                           jmp 0x40001ec	       320	add.c	FUNCTION_12	IF_1
0x40001e1	          0x4c89c6	                             mov rsi, r8	       322	add.c	FUNCTION_12	CALL_4
0x40001e4	          0x4889c7	                            mov rdi, rax	       322	add.c	FUNCTION_12	CALL_4
0x40001e7	      0xe800000000	                          call 0x40001ec	       322	add.c	FUNCTION_12	CALL_4
0x40001ec	        0x4883c408	                              add rsp, 8	       323	add.c	FUNCTION_12
0x40001f0	              0xc3	                                     ret	       323	add.c	FUNCTION_12
add_files_to_cache	CALL,6:FOR,0:ELSE,0:SWITCH,0:DO,0:IF,1:functions,0:WHILE,0	41
0x40001f1	              0x53	                                push rbx	       106	add.c	FUNCTION_4
0x40001f2	    0x4881ecd00800	                          sub rsp, 0x8d0	       106	add.c	FUNCTION_4
0x40001f9	          0x4889f3	                            mov rbx, rsi	       106	add.c	FUNCTION_4
0x40001fc	    0x64488b042528	                mov rax, qword fs:[0x28]	       106	add.c	FUNCTION_4
0x4000205	    0x48898424c808	            mov qword [rsp + 0x8c8], rax	       106	add.c	FUNCTION_4
0x400020d	            0x31c0	                            xor eax, eax	       106	add.c	FUNCTION_4
0x400020f	    0x48c704240000	                      mov qword [rsp], 0	        90	string3.h	FUNCTION_44	CALL_6
0x4000217	          0x891424	                    mov dword [rsp], edx	       111	add.c	FUNCTION_4
0x400021a	          0x4889fe	                            mov rsi, rdi	       113	add.c	FUNCTION_4	CALL_2
0x400021d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       113	add.c	FUNCTION_4	CALL_2
0x4000222	      0xe800000000	                          call 0x4000227	       113	add.c	FUNCTION_4	CALL_2
0x4000227	      0xb900000000	                              mov ecx, 0	       114	add.c	FUNCTION_4	CALL_3
0x400022c	      0x488d542410	                   lea rdx, [rsp + 0x10]	       114	add.c	FUNCTION_4	CALL_3
0x4000231	      0xbe00000000	                              mov esi, 0	       114	add.c	FUNCTION_4	CALL_3
0x4000236	      0xbf00000000	                              mov edi, 0	       114	add.c	FUNCTION_4	CALL_3
0x400023b	      0xe800000000	                          call 0x4000240	       114	add.c	FUNCTION_4	CALL_3
0x4000240	          0x4885db	                           test rbx, rbx	       115	add.c	FUNCTION_4	IF_1
0x4000243	            0x740d	                            je 0x4000252	       115	add.c	FUNCTION_4	IF_1
0x4000245	          0x4889de	                            mov rsi, rbx	       116	add.c	FUNCTION_4	CALL_4
0x4000248	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       116	add.c	FUNCTION_4	CALL_4
0x400024d	      0xe800000000	                          call 0x4000252	       116	add.c	FUNCTION_4	CALL_4
0x4000252	    0xc78424680500	        mov dword [rsp + 0x568], 0x1000 	       117	add.c	FUNCTION_4
0x400025d	    0x48c784245006	              mov qword [rsp + 0x650], 0	       118	add.c	FUNCTION_4
0x4000269	    0x4889a4245806	            mov qword [rsp + 0x658], rsp	       119	add.c	FUNCTION_4
0x4000271	    0x808c24430500	                or byte [rsp + 0x543], 4	       120	add.c	FUNCTION_4
0x4000279	    0xc78424dc0400	              mov dword [rsp + 0x4dc], 0	       121	add.c	FUNCTION_4
0x4000284	      0xbe02000000	                              mov esi, 2	       122	add.c	FUNCTION_4	CALL_5
0x4000289	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       122	add.c	FUNCTION_4	CALL_5
0x400028e	      0xe800000000	                          call 0x4000293	       122	add.c	FUNCTION_4	CALL_5
0x4000293	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       123	add.c	FUNCTION_4	CALL_6
0x4000298	      0xe800000000	                          call 0x400029d	       123	add.c	FUNCTION_4	CALL_6
0x400029d	      0x837c240400	                  cmp dword [rsp + 4], 0	       124	add.c	FUNCTION_4
0x40002a2	           0xf95c0	                                setne al	       124	add.c	FUNCTION_4
0x40002a5	           0xfb6c0	                           movzx eax, al	       124	add.c	FUNCTION_4
0x40002a8	    0x488b8c24c808	           mov rcx, qword [rsp + 0x8c8] 	       125	add.c	FUNCTION_4
0x40002b0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       125	add.c	FUNCTION_4
0x40002b9	            0x7405	                            je 0x40002c0	       125	add.c	FUNCTION_4
0x40002bb	      0xe800000000	                          call 0x40002c0	       125	add.c	FUNCTION_4
0x40002c0	    0x4881c4d00800	                          add rsp, 0x8d0	       125	add.c	FUNCTION_4
0x40002c7	              0x5b	                                 pop rbx	       125	add.c	FUNCTION_4
0x40002c8	              0xc3	                                     ret	       125	add.c	FUNCTION_4
