diffcore_order	IF,1:ELSE,0:functions,0:SWITCH,0:WHILE,0:FOR,2:DO,0:CALL,2	54
0x40003dc	    0x8b1500000000	            mov edx, dword [0x040003e2] 	       120	diffcore-order.c	FUNCTION_6	IF_1
0x40003e2	            0x85d2	                           test edx, edx	       120	diffcore-order.c	FUNCTION_6	IF_1
0x40003e4	     0xf84c0000000	                            je 0x40004aa	       120	diffcore-order.c	FUNCTION_6	IF_1
0x40003ea	              0x55	                                push rbp	       115	diffcore-order.c	FUNCTION_6
0x40003eb	              0x53	                                push rbx	       115	diffcore-order.c	FUNCTION_6
0x40003ec	        0x4883ec08	                              sub rsp, 8	       115	diffcore-order.c	FUNCTION_6
0x40003f0	          0x4889fd	                            mov rbp, rdi	       115	diffcore-order.c	FUNCTION_6
0x40003f3	          0x4863d2	                         movsxd rdx, edx	       123	diffcore-order.c	FUNCTION_6
0x40003f6	    0x48b8ffffffff	          movabs rax, 0xfffffffffffffff 	       795	git-compat-util.h	FUNCTION_25	IF_1
0x4000400	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_25	IF_1
0x4000403	            0x7614	                           jbe 0x4000419	       795	git-compat-util.h	FUNCTION_25	IF_1
0x4000405	      0xbe10000000	                           mov esi, 0x10	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x400040a	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x400040f	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x4000414	      0xe800000000	                          call 0x4000419	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x4000419	          0x4889d7	                            mov rdi, rdx	       123	diffcore-order.c	FUNCTION_6
0x400041c	        0x48c1e704	                              shl rdi, 4	       123	diffcore-order.c	FUNCTION_6
0x4000420	      0xe800000000	                          call 0x4000425	       123	diffcore-order.c	FUNCTION_6
0x4000425	          0x4889c3	                            mov rbx, rax	       123	diffcore-order.c	FUNCTION_6
0x4000428	    0x8b0d00000000	            mov ecx, dword [0x0400042e] 	       124	diffcore-order.c	FUNCTION_6	FOR_1
0x400042e	            0x85c9	                           test ecx, ecx	       124	diffcore-order.c	FUNCTION_6	FOR_1
0x4000430	            0x7e28	                           jle 0x400045a	       124	diffcore-order.c	FUNCTION_6	FOR_1
0x4000432	      0xba00000000	                              mov edx, 0	       124	diffcore-order.c	FUNCTION_6	FOR_1
0x4000437	          0x4863c2	                         movsxd rax, edx	       125	diffcore-order.c	FUNCTION_6	FOR_1
0x400043a	    0x488b0d000000	            mov rcx, qword [0x04000441] 	       125	diffcore-order.c	FUNCTION_6	FOR_1
0x4000441	        0x488b0cc1	            mov rcx, qword [rcx + rax*8]	       125	diffcore-order.c	FUNCTION_6	FOR_1
0x4000445	        0x48c1e004	                              shl rax, 4	       125	diffcore-order.c	FUNCTION_6	FOR_1
0x4000449	        0x48890c03	              mov qword [rbx + rax], rcx	       125	diffcore-order.c	FUNCTION_6	FOR_1
0x400044d	          0x83c201	                              add edx, 1	       124	diffcore-order.c	FUNCTION_6	FOR_1
0x4000450	    0x8b0d00000000	            mov ecx, dword [0x04000456] 	       124	diffcore-order.c	FUNCTION_6	FOR_1
0x4000456	            0x39d1	                            cmp ecx, edx	       124	diffcore-order.c	FUNCTION_6	FOR_1
0x4000458	            0x7fdd	                            jg 0x4000437	       124	diffcore-order.c	FUNCTION_6	FOR_1
0x400045a	          0x4889da	                            mov rdx, rbx	       126	diffcore-order.c	FUNCTION_6	CALL_1
0x400045d	      0xbe00000000	                              mov esi, 0	       126	diffcore-order.c	FUNCTION_6	CALL_1
0x4000462	          0x4889ef	                            mov rdi, rbp	       126	diffcore-order.c	FUNCTION_6	CALL_1
0x4000465	      0xe800000000	                          call 0x400046a	       126	diffcore-order.c	FUNCTION_6	CALL_1
0x400046a	    0x833d00000000	               cmp dword [0x04000471], 0	       127	diffcore-order.c	FUNCTION_6	FOR_2
0x4000471	            0x7e29	                           jle 0x400049c	       127	diffcore-order.c	FUNCTION_6	FOR_2
0x4000473	      0xb800000000	                              mov eax, 0	       127	diffcore-order.c	FUNCTION_6	FOR_2
0x4000478	          0x4863d0	                         movsxd rdx, eax	       128	diffcore-order.c	FUNCTION_6	FOR_2
0x400047b	          0x4889d1	                            mov rcx, rdx	       128	diffcore-order.c	FUNCTION_6	FOR_2
0x400047e	        0x48c1e104	                              shl rcx, 4	       128	diffcore-order.c	FUNCTION_6	FOR_2
0x4000482	        0x488b340b	              mov rsi, qword [rbx + rcx]	       128	diffcore-order.c	FUNCTION_6	FOR_2
0x4000486	    0x488b0d000000	            mov rcx, qword [0x0400048d] 	       128	diffcore-order.c	FUNCTION_6	FOR_2
0x400048d	        0x488934d1	            mov qword [rcx + rdx*8], rsi	       128	diffcore-order.c	FUNCTION_6	FOR_2
0x4000491	          0x83c001	                              add eax, 1	       127	diffcore-order.c	FUNCTION_6	FOR_2
0x4000494	    0x390500000000	            cmp dword [0x0400049a], eax 	       127	diffcore-order.c	FUNCTION_6	FOR_2
0x400049a	            0x7fdc	                            jg 0x4000478	       127	diffcore-order.c	FUNCTION_6	FOR_2
0x400049c	          0x4889df	                            mov rdi, rbx	       129	diffcore-order.c	FUNCTION_6	CALL_2
0x400049f	      0xe800000000	                          call 0x40004a4	       129	diffcore-order.c	FUNCTION_6	CALL_2
0x40004a4	        0x4883c408	                              add rsp, 8	       131	diffcore-order.c	FUNCTION_6
0x40004a8	              0x5b	                                 pop rbx	       131	diffcore-order.c	FUNCTION_6
0x40004a9	              0x5d	                                 pop rbp	       131	diffcore-order.c	FUNCTION_6
0x40004aa	            0xf3c3	                                     ret	       131	diffcore-order.c	FUNCTION_6
pair_pathtwo	IF,0:ELSE,0:functions,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,0	3
0x4000054	        0x488b4708	                mov rax, qword [rdi + 8]	       111	diffcore-order.c	FUNCTION_5
0x4000058	        0x488b4018	            mov rax, qword [rax + 0x18] 	       111	diffcore-order.c	FUNCTION_5
0x400005c	              0xc3	                                     ret	       112	diffcore-order.c	FUNCTION_5
compare_objs_order	IF,1:ELSE,0:functions,0:SWITCH,0:WHILE,0:FOR,0:DO,0:CALL,0	9
0x4000040	          0x8b470c	              mov eax, dword [rdi + 0xc]	        86	diffcore-order.c	FUNCTION_3	IF_1
0x4000043	          0x8b560c	              mov edx, dword [rsi + 0xc]	        86	diffcore-order.c	FUNCTION_3	IF_1
0x4000046	            0x39d0	                            cmp eax, edx	        86	diffcore-order.c	FUNCTION_3	IF_1
0x4000048	            0x7403	                            je 0x400004d	        86	diffcore-order.c	FUNCTION_3	IF_1
0x400004a	            0x29d0	                            sub eax, edx	        87	diffcore-order.c	FUNCTION_3	IF_1
0x400004c	              0xc3	                                     ret	        87	diffcore-order.c	FUNCTION_3	IF_1
0x400004d	          0x8b4708	                mov eax, dword [rdi + 8]	        88	diffcore-order.c	FUNCTION_3
0x4000050	          0x2b4608	                sub eax, dword [rsi + 8]	        88	diffcore-order.c	FUNCTION_3
0x4000053	              0xc3	                                     ret	        89	diffcore-order.c	FUNCTION_3
order_objects	IF,1:ELSE,0:functions,0:SWITCH,0:WHILE,0:FOR,1:DO,0:CALL,3	218
0x400005d	            0x4157	                                push r15	        93	diffcore-order.c	FUNCTION_4
0x400005f	            0x4156	                                push r14	        93	diffcore-order.c	FUNCTION_4
0x4000061	            0x4155	                                push r13	        93	diffcore-order.c	FUNCTION_4
0x4000063	            0x4154	                                push r12	        93	diffcore-order.c	FUNCTION_4
0x4000065	              0x55	                                push rbp	        93	diffcore-order.c	FUNCTION_4
0x4000066	              0x53	                                push rbx	        93	diffcore-order.c	FUNCTION_4
0x4000067	        0x4883ec48	                           sub rsp, 0x48	        93	diffcore-order.c	FUNCTION_4
0x400006b	      0x4889742410	             mov qword [rsp + 0x10], rsi	        93	diffcore-order.c	FUNCTION_4
0x4000070	      0x4889542418	             mov qword [rsp + 0x18], rdx	        93	diffcore-order.c	FUNCTION_4
0x4000075	            0x89c8	                            mov eax, ecx	        93	diffcore-order.c	FUNCTION_4
0x4000077	        0x894c240c	              mov dword [rsp + 0xc], ecx	        93	diffcore-order.c	FUNCTION_4
0x400007b	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	        93	diffcore-order.c	FUNCTION_4
0x4000084	      0x48894c2438	             mov qword [rsp + 0x38], rcx	        93	diffcore-order.c	FUNCTION_4
0x4000089	            0x31c9	                            xor ecx, ecx	        93	diffcore-order.c	FUNCTION_4
0x400008b	            0x85c0	                           test eax, eax	        96	diffcore-order.c	FUNCTION_4	IF_1
0x400008d	     0xf8425030000	                            je 0x40003b8	        96	diffcore-order.c	FUNCTION_4	IF_1
0x4000093	          0x4889fb	                            mov rbx, rdi	        96	diffcore-order.c	FUNCTION_4	IF_1
0x4000096	    0x48c744242000	               mov qword [rsp + 0x20], 0	        14	diffcore-order.c	FUNCTION_1
0x400009f	    0x48c744242800	               mov qword [rsp + 0x28], 0	        14	diffcore-order.c	FUNCTION_1
0x40000a8	    0x48c744243000	               mov qword [rsp + 0x30], 0	        14	diffcore-order.c	FUNCTION_1
0x40000b1	    0x48833d000000	               cmp qword [0x040000b9], 0	        19	diffcore-order.c	FUNCTION_1	IF_1
0x40000b9	     0xf8557010000	                           jne 0x4000216	        19	diffcore-order.c	FUNCTION_1	IF_1
0x40000bf	      0xba00000000	                              mov edx, 0	        22	diffcore-order.c	FUNCTION_1	CALL_1
0x40000c4	          0x4889fe	                            mov rsi, rdi	        22	diffcore-order.c	FUNCTION_1	CALL_1
0x40000c7	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        22	diffcore-order.c	FUNCTION_1	CALL_1
0x40000cc	      0xe800000000	                          call 0x40000d1	        22	diffcore-order.c	FUNCTION_1	CALL_1
0x40000d1	          0x4889c5	                            mov rbp, rax	        22	diffcore-order.c	FUNCTION_1	CALL_1
0x40000d4	          0x4885c0	                           test rax, rax	        23	diffcore-order.c	FUNCTION_1	IF_2
0x40000d7	            0x7924	                           jns 0x40000fd	        23	diffcore-order.c	FUNCTION_1	IF_2
0x40000d9	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_9
0x40000de	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_9
0x40000e3	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_9
0x40000e8	      0xe800000000	                          call 0x40000ed	        54	gettext.h	FUNCTION_9
0x40000ed	          0x4889de	                            mov rsi, rbx	        24	diffcore-order.c	FUNCTION_1	CALL_3
0x40000f0	          0x4889c7	                            mov rdi, rax	        24	diffcore-order.c	FUNCTION_1	CALL_3
0x40000f3	      0xb800000000	                              mov eax, 0	        24	diffcore-order.c	FUNCTION_1	CALL_3
0x40000f8	      0xe800000000	                          call 0x40000fd	        24	diffcore-order.c	FUNCTION_1	CALL_3
0x40000fd	      0xbe00000000	                              mov esi, 0	        25	diffcore-order.c	FUNCTION_1	CALL_4
0x4000102	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        25	diffcore-order.c	FUNCTION_1	CALL_4
0x4000107	      0xe800000000	                          call 0x400010c	        25	diffcore-order.c	FUNCTION_1	CALL_4
0x400010c	          0x4989c6	                            mov r14, rax	        25	diffcore-order.c	FUNCTION_1	CALL_4
0x400010f	          0x4801c5	                            add rbp, rax	        26	diffcore-order.c	FUNCTION_1
0x4000112	    0x41bf01000000	                             mov r15d, 1	        26	diffcore-order.c	FUNCTION_1
0x4000118	    0x41bd00000000	                             mov r13d, 0	        26	diffcore-order.c	FUNCTION_1
0x400011e	      0xe9dd000000	                           jmp 0x4000200	        26	diffcore-order.c	FUNCTION_1
0x4000123	        0x4883c301	                              add rbx, 1	        33	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	FOR_2
0x4000127	          0x4839dd	                            cmp rbp, rbx	        33	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	FOR_2
0x400012a	     0xf846d020000	                            je 0x400039d	        33	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	FOR_2
0x4000130	          0x803b0a	                     cmp byte [rbx], 0xa	        33	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	FOR_2
0x4000133	            0x75ee	                           jne 0x4000123	        33	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	FOR_2
0x4000135	      0xe92c020000	                           jmp 0x4000366	        33	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	FOR_2
0x400013a	          0x4585ed	                         test r13d, r13d	        38	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_1	IF_4
0x400013d	            0x7506	                           jne 0x4000145	        38	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_1	IF_4
0x400013f	        0x4183c401	                             add r12d, 1	        39	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_1	IF_4
0x4000143	            0xeb40	                           jmp 0x4000185	        39	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_1	IF_4
0x4000145	          0x803b0a	                     cmp byte [rbx], 0xa	        41	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	IF_5
0x4000148	            0x7513	                           jne 0x400015d	        41	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	IF_5
0x400014a	          0xc60300	                       mov byte [rbx], 0	        42	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	IF_5
0x400014d	          0x4963c4	                        movsxd rax, r12d	        43	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	IF_5
0x4000150	    0x488b15000000	            mov rdx, qword [0x04000157] 	        43	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	IF_5
0x4000157	        0x48893cc2	            mov qword [rdx + rax*8], rdi	        43	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	IF_5
0x400015b	            0xeb24	                           jmp 0x4000181	        43	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	IF_5
0x400015d	          0x4963c4	                        movsxd rax, r12d	        45	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x4000160	    0x488b15000000	            mov rdx, qword [0x04000167] 	        45	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x4000167	        0x488d04c2	                  lea rax, [rdx + rax*8]	        45	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x400016b	        0x48890424	                    mov qword [rsp], rax	        45	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x400016f	          0x4889de	                            mov rsi, rbx	        45	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x4000172	          0x4829fe	                            sub rsi, rdi	        45	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x4000175	      0xe800000000	                          call 0x400017a	        45	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x400017a	        0x488b0c24	                    mov rcx, qword [rsp]	        45	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x400017e	          0x488901	                    mov qword [rcx], rax	        45	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x4000181	        0x4183c401	                             add r12d, 1	        47	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2
0x4000185	          0x4839dd	                            cmp rbp, rbx	        49	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	IF_6
0x4000188	            0x7620	                           jbe 0x40001aa	        49	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	IF_6
0x400018a	        0x4883c301	                              add rbx, 1	        50	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	IF_6
0x400018e	          0x4839dd	                            cmp rbp, rbx	        31	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1
0x4000191	            0x7617	                           jbe 0x40001aa	        31	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1
0x4000193	          0x4889df	                            mov rdi, rbx	        50	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	IF_6
0x4000196	          0x4839dd	                            cmp rbp, rbx	        33	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	FOR_2
0x4000199	     0xf8601020000	                           jbe 0x40003a0	        33	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	FOR_2
0x400019f	          0x803b0a	                     cmp byte [rbx], 0xa	        33	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	FOR_2
0x40001a2	     0xf857bffffff	                           jne 0x4000123	        33	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	FOR_2
0x40001a8	            0xebe0	                           jmp 0x400018a	        33	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	FOR_2
0x40001aa	          0x4585ed	                         test r13d, r13d	        53	diffcore-order.c	FUNCTION_1	FOR_1	IF_7
0x40001ad	            0x7543	                           jne 0x40001f2	        53	diffcore-order.c	FUNCTION_1	FOR_1	IF_7
0x40001af	    0x448925000000	           mov dword [0x040001b6], r12d 	        54	diffcore-order.c	FUNCTION_1	FOR_1	IF_7
0x40001b6	          0x4963d4	                        movsxd rdx, r12d	        55	diffcore-order.c	FUNCTION_1	FOR_1	IF_7
0x40001b9	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_25	IF_1
0x40001c3	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_25	IF_1
0x40001c6	            0x7614	                           jbe 0x40001dc	       795	git-compat-util.h	FUNCTION_25	IF_1
0x40001c8	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x40001cd	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x40001d2	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x40001d7	      0xe800000000	                          call 0x40001dc	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x40001dc	    0x488d3cd50000	                        lea rdi, [rdx*8]	        55	diffcore-order.c	FUNCTION_1	FOR_1	IF_7
0x40001e4	      0xe800000000	                          call 0x40001e9	        55	diffcore-order.c	FUNCTION_1	FOR_1	IF_7
0x40001e9	    0x488905000000	            mov qword [0x040001f0], rax 	        55	diffcore-order.c	FUNCTION_1	FOR_1	IF_7
0x40001f0	            0xeb06	                           jmp 0x40001f8	        55	diffcore-order.c	FUNCTION_1	FOR_1	IF_7
0x40001f2	        0x4183ff01	                             cmp r15d, 1	        28	diffcore-order.c	FUNCTION_1	FOR_1
0x40001f6	            0x7f1e	                            jg 0x4000216	        28	diffcore-order.c	FUNCTION_1	FOR_1
0x40001f8	        0x4183c501	                             add r13d, 1	        28	diffcore-order.c	FUNCTION_1	FOR_1
0x40001fc	        0x4183c701	                             add r15d, 1	        28	diffcore-order.c	FUNCTION_1	FOR_1
0x4000200	          0x4c89f7	                            mov rdi, r14	        31	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1
0x4000203	          0x4c89f3	                            mov rbx, r14	        31	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1
0x4000206	    0x41bc00000000	                             mov r12d, 0	        31	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1
0x400020c	          0x4939ee	                            cmp r14, rbp	        31	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1
0x400020f	            0x7285	                            jb 0x4000196	        31	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1
0x4000211	      0xe97c010000	                           jmp 0x4000392	        31	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1
0x4000216	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        31	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1
0x400021b	        0x4c8d6808	                      lea r13, [rax + 8]	        31	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1
0x400021f	    0x41be00000000	                             mov r14d, 0	       100	diffcore-order.c	FUNCTION_4	FOR_1
0x4000225	    0x49c7c7ffffff	             mov r15, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_42	CALL_2
0x400022c	      0x837c240c00	                cmp dword [rsp + 0xc], 0	       100	diffcore-order.c	FUNCTION_4	FOR_1
0x4000231	     0xf8e0e010000	                           jle 0x4000345	       100	diffcore-order.c	FUNCTION_4	FOR_1
0x4000237	        0x4c892c24	                    mov qword [rsp], r13	       100	diffcore-order.c	FUNCTION_4	FOR_1
0x400023b	        0x45897500	                   mov dword [r13], r14d	       101	diffcore-order.c	FUNCTION_4	FOR_1
0x400023f	        0x498b7df8	                mov rdi, qword [r13 - 8]	       102	diffcore-order.c	FUNCTION_4	FOR_1	CALL_3
0x4000243	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       102	diffcore-order.c	FUNCTION_4	FOR_1	CALL_3
0x4000248	            0xffd0	                                call rax	       102	diffcore-order.c	FUNCTION_4	FOR_1	CALL_3
0x400024a	          0x4989c4	                            mov r12, rax	       102	diffcore-order.c	FUNCTION_4	FOR_1	CALL_3
0x400024d	    0x8b0500000000	            mov eax, dword [0x04000253] 	        65	diffcore-order.c	FUNCTION_2	FOR_1
0x4000253	            0x85c0	                           test eax, eax	        65	diffcore-order.c	FUNCTION_2	FOR_1
0x4000255	     0xf8ed0000000	                           jle 0x400032b	        65	diffcore-order.c	FUNCTION_2	FOR_1
0x400025b	      0xbd00000000	                              mov ebp, 0	        65	diffcore-order.c	FUNCTION_2	FOR_1
0x4000260	    0x48c705000000	               mov qword [0x0400026b], 0	       164	strbuf.h	FUNCTION_40
0x400026b	    0x488b05000000	            mov rax, qword [0x04000272] 	       165	strbuf.h	FUNCTION_40	IF_2
0x4000272	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_40	IF_2
0x4000278	            0x7405	                            je 0x400027f	       165	strbuf.h	FUNCTION_40	IF_2
0x400027a	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_40	IF_2
0x400027d	            0xeb22	                           jmp 0x40002a1	       166	strbuf.h	FUNCTION_40	IF_2
0x400027f	    0x803d00000000	                cmp byte [0x04000286], 0	       168	strbuf.h	FUNCTION_40	CALL_2
0x4000286	            0x7419	                            je 0x40002a1	       168	strbuf.h	FUNCTION_40	CALL_2
0x4000288	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_40	CALL_2
0x400028d	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_40	CALL_2
0x4000292	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_40	CALL_2
0x4000297	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_40	CALL_2
0x400029c	      0xe800000000	                          call 0x40002a1	       168	strbuf.h	FUNCTION_40	CALL_2
0x40002a1	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_42	CALL_2
0x40002a6	          0x4c89f9	                            mov rcx, r15	       279	strbuf.h	FUNCTION_42	CALL_2
0x40002a9	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_42	CALL_2
0x40002ac	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_42	CALL_2
0x40002ae	          0x4889c8	                            mov rax, rcx	       279	strbuf.h	FUNCTION_42	CALL_2
0x40002b1	          0x48f7d0	                                 not rax	       279	strbuf.h	FUNCTION_42	CALL_2
0x40002b4	        0x488d50ff	                      lea rdx, [rax - 1]	       279	strbuf.h	FUNCTION_42	CALL_2
0x40002b8	          0x4c89e6	                            mov rsi, r12	       279	strbuf.h	FUNCTION_42	CALL_2
0x40002bb	      0xbf00000000	                              mov edi, 0	       279	strbuf.h	FUNCTION_42	CALL_2
0x40002c0	      0xe800000000	                          call 0x40002c5	       279	strbuf.h	FUNCTION_42	CALL_2
0x40002c5	    0x488b35000000	            mov rsi, qword [0x040002cc] 	        68	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1
0x40002cc	          0x803e00	                       cmp byte [rsi], 0	        68	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1
0x40002cf	            0x7445	                            je 0x4000316	        68	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1
0x40002d1	          0x4863dd	                         movsxd rbx, ebp	        70	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	IF_1	CALL_2
0x40002d4	        0x48c1e303	                              shl rbx, 3	        70	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	IF_1	CALL_2
0x40002d8	    0x488b05000000	            mov rax, qword [0x040002df] 	        70	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	IF_1	CALL_2
0x40002df	        0x488b3c18	              mov rdi, qword [rax + rbx]	        70	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	IF_1	CALL_2
0x40002e3	      0xba00000000	                              mov edx, 0	        70	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	IF_1	CALL_2
0x40002e8	      0xe800000000	                          call 0x40002ed	        70	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	IF_1	CALL_2
0x40002ed	            0x85c0	                           test eax, eax	        70	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	IF_1	CALL_2
0x40002ef	            0x7438	                            je 0x4000329	        70	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	IF_1	CALL_2
0x40002f1	      0xbe2f000000	                           mov esi, 0x2f	        72	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	CALL_3
0x40002f6	    0x488b3d000000	            mov rdi, qword [0x040002fd] 	        72	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	CALL_3
0x40002fd	      0xe800000000	                          call 0x4000302	        72	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	CALL_3
0x4000302	          0x4885c0	                           test rax, rax	        73	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	IF_2
0x4000305	            0x740f	                            je 0x4000316	        73	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	IF_2
0x4000307	          0xc60000	                       mov byte [rax], 0	        75	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1
0x400030a	    0x488b35000000	            mov rsi, qword [0x04000311] 	        68	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1
0x4000311	          0x803e00	                       cmp byte [rsi], 0	        68	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1
0x4000314	            0x75c2	                           jne 0x40002d8	        68	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1
0x4000316	          0x83c501	                              add ebp, 1	        65	diffcore-order.c	FUNCTION_2	FOR_1
0x4000319	    0x8b0500000000	            mov eax, dword [0x0400031f] 	        65	diffcore-order.c	FUNCTION_2	FOR_1
0x400031f	            0x39c5	                            cmp ebp, eax	        65	diffcore-order.c	FUNCTION_2	FOR_1
0x4000321	     0xf8c39ffffff	                            jl 0x4000260	        65	diffcore-order.c	FUNCTION_2	FOR_1
0x4000327	            0xeb02	                           jmp 0x400032b	        65	diffcore-order.c	FUNCTION_2	FOR_1
0x4000329	            0x89e8	                            mov eax, ebp	        70	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	IF_1	CALL_2
0x400032b	        0x488b0c24	                    mov rcx, qword [rsp]	       102	diffcore-order.c	FUNCTION_4	FOR_1	CALL_3
0x400032f	          0x894104	                mov dword [rcx + 4], eax	       102	diffcore-order.c	FUNCTION_4	FOR_1	CALL_3
0x4000332	        0x4183c601	                             add r14d, 1	       100	diffcore-order.c	FUNCTION_4	FOR_1
0x4000336	        0x4983c510	                           add r13, 0x10	       100	diffcore-order.c	FUNCTION_4	FOR_1
0x400033a	      0x443974240c	            cmp dword [rsp + 0xc], r14d 	       100	diffcore-order.c	FUNCTION_4	FOR_1
0x400033f	     0xf85f2feffff	                           jne 0x4000237	       100	diffcore-order.c	FUNCTION_4	FOR_1
0x4000345	      0x486374240c	          movsxd rsi, dword [rsp + 0xc] 	       104	diffcore-order.c	FUNCTION_4
0x400034a	        0x4883fe01	                              cmp rsi, 1	      1048	git-compat-util.h	FUNCTION_35	IF_1
0x400034e	            0x7668	                           jbe 0x40003b8	      1048	git-compat-util.h	FUNCTION_35	IF_1
0x4000350	      0xb900000000	                              mov ecx, 0	      1049	git-compat-util.h	FUNCTION_35	IF_1
0x4000355	      0xba10000000	                           mov edx, 0x10	      1049	git-compat-util.h	FUNCTION_35	IF_1
0x400035a	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1049	git-compat-util.h	FUNCTION_35	IF_1
0x400035f	      0xe800000000	                          call 0x4000364	      1049	git-compat-util.h	FUNCTION_35	IF_1
0x4000364	            0xeb52	                           jmp 0x40003b8	      1049	git-compat-util.h	FUNCTION_35	IF_1
0x4000366	           0xfb607	                   movzx eax, byte [rdi]	        36	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	IF_3
0x4000369	            0x3c23	                            cmp al, 0x23	        36	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	IF_3
0x400036b	     0xf8419feffff	                            je 0x400018a	        36	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	IF_3
0x4000371	            0x3c0a	                             cmp al, 0xa	        36	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	IF_3
0x4000373	     0xf85c1fdffff	                           jne 0x400013a	        36	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	IF_3
0x4000379	      0xe90cfeffff	                           jmp 0x400018a	        36	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	IF_3
0x400037e	    0xc70500000000	               mov dword [0x04000388], 0	        54	diffcore-order.c	FUNCTION_1	FOR_1	IF_7
0x4000388	      0xba00000000	                              mov edx, 0	        55	diffcore-order.c	FUNCTION_1	FOR_1	IF_7
0x400038d	      0xe94afeffff	                           jmp 0x40001dc	        55	diffcore-order.c	FUNCTION_1	FOR_1	IF_7
0x4000392	          0x4585ed	                         test r13d, r13d	        53	diffcore-order.c	FUNCTION_1	FOR_1	IF_7
0x4000395	     0xf8557feffff	                           jne 0x40001f2	        53	diffcore-order.c	FUNCTION_1	FOR_1	IF_7
0x400039b	            0xebe1	                           jmp 0x400037e	        53	diffcore-order.c	FUNCTION_1	FOR_1	IF_7
0x400039d	          0x4889eb	                            mov rbx, rbp	        33	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	FOR_2
0x40003a0	           0xfb607	                   movzx eax, byte [rdi]	        36	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	IF_3
0x40003a3	            0x3c0a	                             cmp al, 0xa	        36	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	IF_3
0x40003a5	     0xf84fffdffff	                            je 0x40001aa	        36	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	IF_3
0x40003ab	            0x3c23	                            cmp al, 0x23	        36	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	IF_3
0x40003ad	     0xf8587fdffff	                           jne 0x400013a	        36	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	IF_3
0x40003b3	      0xe9f2fdffff	                           jmp 0x40001aa	        36	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	IF_3
0x40003b8	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       105	diffcore-order.c	FUNCTION_4
0x40003bd	    0x644833042528	                xor rax, qword fs:[0x28]	       105	diffcore-order.c	FUNCTION_4
0x40003c6	            0x7405	                            je 0x40003cd	       105	diffcore-order.c	FUNCTION_4
0x40003c8	      0xe800000000	                          call 0x40003cd	       105	diffcore-order.c	FUNCTION_4
0x40003cd	        0x4883c448	                           add rsp, 0x48	       105	diffcore-order.c	FUNCTION_4
0x40003d1	              0x5b	                                 pop rbx	       105	diffcore-order.c	FUNCTION_4
0x40003d2	              0x5d	                                 pop rbp	       105	diffcore-order.c	FUNCTION_4
0x40003d3	            0x415c	                                 pop r12	       105	diffcore-order.c	FUNCTION_4
0x40003d5	            0x415d	                                 pop r13	       105	diffcore-order.c	FUNCTION_4
0x40003d7	            0x415e	                                 pop r14	       105	diffcore-order.c	FUNCTION_4
0x40003d9	            0x415f	                                 pop r15	       105	diffcore-order.c	FUNCTION_4
0x40003db	              0xc3	                                     ret	       105	diffcore-order.c	FUNCTION_4
