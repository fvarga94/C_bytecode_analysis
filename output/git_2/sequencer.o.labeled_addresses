write_message	ELSE,0:IF,4:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,10:DO,0	96
0x4000c32	            0x4156	                                push r14	       368	sequencer.c	FUNCTION_14
0x4000c34	            0x4155	                                push r13	       368	sequencer.c	FUNCTION_14
0x4000c36	            0x4154	                                push r12	       368	sequencer.c	FUNCTION_14
0x4000c38	              0x55	                                push rbp	       368	sequencer.c	FUNCTION_14
0x4000c39	              0x53	                                push rbx	       368	sequencer.c	FUNCTION_14
0x4000c3a	        0x4883ec10	                           sub rsp, 0x10	       368	sequencer.c	FUNCTION_14
0x4000c3e	          0x4989fc	                            mov r12, rdi	       368	sequencer.c	FUNCTION_14
0x4000c41	          0x4989f5	                            mov r13, rsi	       368	sequencer.c	FUNCTION_14
0x4000c44	          0x4889d5	                            mov rbp, rdx	       368	sequencer.c	FUNCTION_14
0x4000c47	          0x4189ce	                           mov r14d, ecx	       368	sequencer.c	FUNCTION_14
0x4000c4a	    0x64488b042528	                mov rax, qword fs:[0x28]	       368	sequencer.c	FUNCTION_14
0x4000c53	      0x4889442408	                mov qword [rsp + 8], rax	       368	sequencer.c	FUNCTION_14
0x4000c58	            0x31c0	                            xor eax, eax	       368	sequencer.c	FUNCTION_14
0x4000c5a	    0x48c704240000	                      mov qword [rsp], 0	       369	sequencer.c	FUNCTION_14
0x4000c62	      0xb900000000	                              mov ecx, 0	       175	lockfile.h	FUNCTION_106	CALL_1
0x4000c67	      0xba00000000	                              mov edx, 0	       175	lockfile.h	FUNCTION_106	CALL_1
0x4000c6c	          0x4889ee	                            mov rsi, rbp	       175	lockfile.h	FUNCTION_106	CALL_1
0x4000c6f	          0x4889e7	                            mov rdi, rsp	       175	lockfile.h	FUNCTION_106	CALL_1
0x4000c72	      0xe800000000	                          call 0x4000c77	       175	lockfile.h	FUNCTION_106	CALL_1
0x4000c77	            0x85c0	                           test eax, eax	       372	sequencer.c	FUNCTION_14	IF_1
0x4000c79	            0x792e	                           jns 0x4000ca9	       372	sequencer.c	FUNCTION_14	IF_1
0x4000c7b	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4000c80	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4000c85	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4000c8a	      0xe800000000	                          call 0x4000c8f	        54	gettext.h	FUNCTION_118
0x4000c8f	          0x4889ee	                            mov rsi, rbp	       373	sequencer.c	FUNCTION_14	CALL_2
0x4000c92	          0x4889c7	                            mov rdi, rax	       373	sequencer.c	FUNCTION_14	CALL_2
0x4000c95	      0xb800000000	                              mov eax, 0	       373	sequencer.c	FUNCTION_14	CALL_2
0x4000c9a	      0xe800000000	                          call 0x4000c9f	       373	sequencer.c	FUNCTION_14	CALL_2
0x4000c9f	      0xb8ffffffff	                     mov eax, 0xffffffff	       373	sequencer.c	FUNCTION_14	CALL_2
0x4000ca4	      0xe9d4000000	                           jmp 0x4000d7d	       373	sequencer.c	FUNCTION_14	CALL_2
0x4000ca9	            0x89c3	                            mov ebx, eax	       373	sequencer.c	FUNCTION_14	CALL_2
0x4000cab	          0x4c89ea	                            mov rdx, r13	       374	sequencer.c	FUNCTION_14	IF_2	CALL_3
0x4000cae	          0x4c89e6	                            mov rsi, r12	       374	sequencer.c	FUNCTION_14	IF_2	CALL_3
0x4000cb1	            0x89c7	                            mov edi, eax	       374	sequencer.c	FUNCTION_14	IF_2	CALL_3
0x4000cb3	      0xe800000000	                          call 0x4000cb8	       374	sequencer.c	FUNCTION_14	IF_2	CALL_3
0x4000cb8	          0x4885c0	                           test rax, rax	       374	sequencer.c	FUNCTION_14	IF_2	CALL_3
0x4000cbb	            0x7936	                           jns 0x4000cf3	       374	sequencer.c	FUNCTION_14	IF_2	CALL_3
0x4000cbd	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4000cc2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4000cc7	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4000ccc	      0xe800000000	                          call 0x4000cd1	        54	gettext.h	FUNCTION_118
0x4000cd1	          0x4889ee	                            mov rsi, rbp	       375	sequencer.c	FUNCTION_14	IF_2	CALL_4
0x4000cd4	          0x4889c7	                            mov rdi, rax	       375	sequencer.c	FUNCTION_14	IF_2	CALL_4
0x4000cd7	      0xb800000000	                              mov eax, 0	       375	sequencer.c	FUNCTION_14	IF_2	CALL_4
0x4000cdc	      0xe800000000	                          call 0x4000ce1	       375	sequencer.c	FUNCTION_14	IF_2	CALL_4
0x4000ce1	          0x4889e7	                            mov rdi, rsp	       304	lockfile.h	FUNCTION_115	CALL_1
0x4000ce4	      0xe800000000	                          call 0x4000ce9	       304	lockfile.h	FUNCTION_115	CALL_1
0x4000ce9	      0xb8ffffffff	                     mov eax, 0xffffffff	       377	sequencer.c	FUNCTION_14	IF_2
0x4000cee	      0xe98a000000	                           jmp 0x4000d7d	       377	sequencer.c	FUNCTION_14	IF_2
0x4000cf3	          0x4585f6	                         test r14d, r14d	       379	sequencer.c	FUNCTION_14	IF_3	CALL_6
0x4000cf6	            0x7449	                            je 0x4000d41	       379	sequencer.c	FUNCTION_14	IF_3	CALL_6
0x4000cf8	      0xba01000000	                              mov edx, 1	       379	sequencer.c	FUNCTION_14	IF_3	CALL_6
0x4000cfd	      0xbe00000000	                              mov esi, 0	       379	sequencer.c	FUNCTION_14	IF_3	CALL_6
0x4000d02	            0x89df	                            mov edi, ebx	       379	sequencer.c	FUNCTION_14	IF_3	CALL_6
0x4000d04	      0xe800000000	                          call 0x4000d09	       379	sequencer.c	FUNCTION_14	IF_3	CALL_6
0x4000d09	          0x4885c0	                           test rax, rax	       379	sequencer.c	FUNCTION_14	IF_3	CALL_6
0x4000d0c	            0x7933	                           jns 0x4000d41	       379	sequencer.c	FUNCTION_14	IF_3	CALL_6
0x4000d0e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4000d13	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4000d18	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4000d1d	      0xe800000000	                          call 0x4000d22	        54	gettext.h	FUNCTION_118
0x4000d22	          0x4889ee	                            mov rsi, rbp	       380	sequencer.c	FUNCTION_14	IF_3	CALL_7
0x4000d25	          0x4889c7	                            mov rdi, rax	       380	sequencer.c	FUNCTION_14	IF_3	CALL_7
0x4000d28	      0xb800000000	                              mov eax, 0	       380	sequencer.c	FUNCTION_14	IF_3	CALL_7
0x4000d2d	      0xe800000000	                          call 0x4000d32	       380	sequencer.c	FUNCTION_14	IF_3	CALL_7
0x4000d32	          0x4889e7	                            mov rdi, rsp	       304	lockfile.h	FUNCTION_115	CALL_1
0x4000d35	      0xe800000000	                          call 0x4000d3a	       304	lockfile.h	FUNCTION_115	CALL_1
0x4000d3a	      0xb8ffffffff	                     mov eax, 0xffffffff	       382	sequencer.c	FUNCTION_14	IF_3
0x4000d3f	            0xeb3c	                           jmp 0x4000d7d	       382	sequencer.c	FUNCTION_14	IF_3
0x4000d41	          0x4889e7	                            mov rdi, rsp	       384	sequencer.c	FUNCTION_14	IF_4	CALL_9
0x4000d44	      0xe800000000	                          call 0x4000d49	       384	sequencer.c	FUNCTION_14	IF_4	CALL_9
0x4000d49	            0x85c0	                           test eax, eax	       384	sequencer.c	FUNCTION_14	IF_4	CALL_9
0x4000d4b	            0x792b	                           jns 0x4000d78	       384	sequencer.c	FUNCTION_14	IF_4	CALL_9
0x4000d4d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4000d52	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4000d57	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4000d5c	      0xe800000000	                          call 0x4000d61	        54	gettext.h	FUNCTION_118
0x4000d61	          0x4889ee	                            mov rsi, rbp	       385	sequencer.c	FUNCTION_14	CALL_10
0x4000d64	          0x4889c7	                            mov rdi, rax	       385	sequencer.c	FUNCTION_14	CALL_10
0x4000d67	      0xb800000000	                              mov eax, 0	       385	sequencer.c	FUNCTION_14	CALL_10
0x4000d6c	      0xe800000000	                          call 0x4000d71	       385	sequencer.c	FUNCTION_14	CALL_10
0x4000d71	      0xb8ffffffff	                     mov eax, 0xffffffff	       385	sequencer.c	FUNCTION_14	CALL_10
0x4000d76	            0xeb05	                           jmp 0x4000d7d	       385	sequencer.c	FUNCTION_14	CALL_10
0x4000d78	      0xb800000000	                              mov eax, 0	       387	sequencer.c	FUNCTION_14
0x4000d7d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       388	sequencer.c	FUNCTION_14
0x4000d82	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       388	sequencer.c	FUNCTION_14
0x4000d8b	            0x7405	                            je 0x4000d92	       388	sequencer.c	FUNCTION_14
0x4000d8d	      0xe800000000	                          call 0x4000d92	       388	sequencer.c	FUNCTION_14
0x4000d92	        0x4883c410	                           add rsp, 0x10	       388	sequencer.c	FUNCTION_14
0x4000d96	              0x5b	                                 pop rbx	       388	sequencer.c	FUNCTION_14
0x4000d97	              0x5d	                                 pop rbp	       388	sequencer.c	FUNCTION_14
0x4000d98	            0x415c	                                 pop r12	       388	sequencer.c	FUNCTION_14
0x4000d9a	            0x415d	                                 pop r13	       388	sequencer.c	FUNCTION_14
0x4000d9c	            0x415e	                                 pop r14	       388	sequencer.c	FUNCTION_14
0x4000d9e	              0xc3	                                     ret	       388	sequencer.c	FUNCTION_14
get_item_line	ELSE,0:IF,0:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,1:DO,0	7
0x400005c	              0x53	                                push rbx	      1942	sequencer.c	FUNCTION_57
0x400005d	          0x4889fb	                            mov rbx, rdi	      1942	sequencer.c	FUNCTION_57
0x4000060	      0xe8dbffffff	           call sym.get_item_line_offset	      1943	sequencer.c	FUNCTION_57	CALL_1
0x4000065	            0x4898	                                    cdqe	      1943	sequencer.c	FUNCTION_57	CALL_1
0x4000067	        0x48034310	             add rax, qword [rbx + 0x10]	      1943	sequencer.c	FUNCTION_57	CALL_1
0x400006b	              0x5b	                                 pop rbx	      1944	sequencer.c	FUNCTION_57
0x400006c	              0xc3	                                     ret	      1944	sequencer.c	FUNCTION_57
continue_single_pick	ELSE,0:IF,1:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,6:DO,0	34
0x40008c0	        0x4883ec28	                           sub rsp, 0x28	      3242	sequencer.c	FUNCTION_88
0x40008c4	    0x64488b042528	                mov rax, qword fs:[0x28]	      3242	sequencer.c	FUNCTION_88
0x40008cd	      0x4889442418	             mov qword [rsp + 0x18], rax	      3242	sequencer.c	FUNCTION_88
0x40008d2	            0x31c0	                            xor eax, eax	      3242	sequencer.c	FUNCTION_88
0x40008d4	    0x48c704240000	                      mov qword [rsp], 0	      3243	sequencer.c	FUNCTION_88
0x40008dc	    0x48c744240800	                  mov qword [rsp + 8], 0	      3243	sequencer.c	FUNCTION_88
0x40008e5	      0xe800000000	                          call 0x40008ea	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x40008ea	          0x4889c7	                            mov rdi, rax	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x40008ed	      0xe800000000	                          call 0x40008f2	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x40008f2	            0x85c0	                           test eax, eax	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x40008f4	            0x7539	                           jne 0x400092f	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x40008f6	      0xe800000000	                          call 0x40008fb	      3246	sequencer.c	FUNCTION_88	IF_1	CALL_4
0x40008fb	          0x4889c7	                            mov rdi, rax	      3246	sequencer.c	FUNCTION_88	IF_1	CALL_4
0x40008fe	      0xe800000000	                          call 0x4000903	      3246	sequencer.c	FUNCTION_88	IF_1	CALL_4
0x4000903	            0x85c0	                           test eax, eax	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x4000905	            0x7528	                           jne 0x400092f	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x4000907	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400090c	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4000911	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4000916	      0xe800000000	                          call 0x400091b	        54	gettext.h	FUNCTION_118
0x400091b	          0x4889c7	                            mov rdi, rax	      3247	sequencer.c	FUNCTION_88	CALL_5
0x400091e	      0xb800000000	                              mov eax, 0	      3247	sequencer.c	FUNCTION_88	CALL_5
0x4000923	      0xe800000000	                          call 0x4000928	      3247	sequencer.c	FUNCTION_88	CALL_5
0x4000928	      0xb8ffffffff	                     mov eax, 0xffffffff	      3247	sequencer.c	FUNCTION_88	CALL_5
0x400092d	            0xeb0d	                           jmp 0x400093c	      3247	sequencer.c	FUNCTION_88	CALL_5
0x400092f	      0xbe02000000	                              mov esi, 2	      3248	sequencer.c	FUNCTION_88	CALL_6
0x4000934	          0x4889e7	                            mov rdi, rsp	      3248	sequencer.c	FUNCTION_88	CALL_6
0x4000937	      0xe800000000	                          call 0x400093c	      3248	sequencer.c	FUNCTION_88	CALL_6
0x400093c	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3249	sequencer.c	FUNCTION_88
0x4000941	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3249	sequencer.c	FUNCTION_88
0x400094a	            0x7405	                            je 0x4000951	      3249	sequencer.c	FUNCTION_88
0x400094c	      0xe800000000	                          call 0x4000951	      3249	sequencer.c	FUNCTION_88
0x4000951	        0x4883c428	                           add rsp, 0x28	      3249	sequencer.c	FUNCTION_88
0x4000955	              0xc3	                                     ret	      3249	sequencer.c	FUNCTION_88
write_author_script	ELSE,8:IF,8:FOR,1:WHILE,3:SWITCH,0:functions,0:CALL,18:DO,0	203
0x4001b4a	            0x4154	                                push r12	       597	sequencer.c	FUNCTION_23
0x4001b4c	              0x55	                                push rbp	       597	sequencer.c	FUNCTION_23
0x4001b4d	              0x53	                                push rbx	       597	sequencer.c	FUNCTION_23
0x4001b4e	        0x4883ec20	                           sub rsp, 0x20	       597	sequencer.c	FUNCTION_23
0x4001b52	          0x4889fd	                            mov rbp, rdi	       597	sequencer.c	FUNCTION_23
0x4001b55	    0x64488b042528	                mov rax, qword fs:[0x28]	       597	sequencer.c	FUNCTION_23
0x4001b5e	      0x4889442418	             mov qword [rsp + 0x18], rax	       597	sequencer.c	FUNCTION_23
0x4001b63	            0x31c0	                            xor eax, eax	       597	sequencer.c	FUNCTION_23
0x4001b65	    0x48c704240000	                      mov qword [rsp], 0	       598	sequencer.c	FUNCTION_23
0x4001b6d	    0x48c744240800	                  mov qword [rsp + 8], 0	       598	sequencer.c	FUNCTION_23
0x4001b76	    0x48c744241000	               mov qword [rsp + 0x10], 0	       598	sequencer.c	FUNCTION_23
0x4001b7f	          0x803f00	                       cmp byte [rdi], 0	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001b82	            0x7411	                            je 0x4001b95	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001b84	      0xbe00000000	                              mov esi, 0	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001b89	          0x4889ef	                            mov rdi, rbp	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001b8c	      0xe800000000	                          call 0x4001b91	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001b91	            0x85c0	                           test eax, eax	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001b93	            0x7417	                            je 0x4001bac	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001b95	      0xe84be6ffff	      call sym.rebase_path_author_script	       606	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_3
0x4001b9a	          0x4889c7	                            mov rdi, rax	       606	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_3
0x4001b9d	      0xe800000000	                          call 0x4001ba2	       606	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_3
0x4001ba2	      0xb800000000	                              mov eax, 0	       607	sequencer.c	FUNCTION_23	FOR_1	IF_1
0x4001ba7	      0xe966020000	                           jmp 0x4001e12	       607	sequencer.c	FUNCTION_23	FOR_1	IF_1
0x4001bac	          0x4889eb	                            mov rbx, rbp	       607	sequencer.c	FUNCTION_23	FOR_1	IF_1
0x4001baf	      0xb800000000	                              mov eax, 0	       607	sequencer.c	FUNCTION_23	FOR_1	IF_1
0x4001bb4	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x4001bb7	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x4001bb9	     0xf8480020000	                            je 0x4001e3f	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x4001bbf	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4001bc3	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4001bc7	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4001bca	            0x74e8	                            je 0x4001bb4	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4001bcc	      0xe953020000	                           jmp 0x4001e24	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4001bd1	        0x488d6801	                      lea rbp, [rax + 1]	       611	sequencer.c	FUNCTION_23	ELSE_2	IF_3
0x4001bd5	        0x80780100	                   cmp byte [rax + 1], 0	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001bd9	            0x75a9	                           jne 0x4001b84	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001bdb	            0xebb8	                           jmp 0x4001b95	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001bdd	      0xb800000000	                              mov eax, 0	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001be2	            0xeb05	                           jmp 0x4001be9	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001be4	      0xb800000000	                              mov eax, 0	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001be9	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x4001bec	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x4001bee	     0xf8497000000	                            je 0x4001c8b	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x4001bf4	        0x4883c501	                              add rbp, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4001bf8	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4001bfc	          0x3a55ff	                  cmp dl, byte [rbp - 1]	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4001bff	            0x74e8	                            je 0x4001be9	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4001c01	      0xe954020000	                           jmp 0x4001e5a	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4001c06	        0x488b0424	                    mov rax, qword [rsp]	       141	strbuf.h	FUNCTION_176
0x4001c0a	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_176
0x4001c0d	            0x740b	                            je 0x4001c1a	       141	strbuf.h	FUNCTION_176
0x4001c0f	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x4001c13	      0x483b442408	                cmp rax, qword [rsp + 8]	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x4001c18	            0x750d	                           jne 0x4001c27	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x4001c1a	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_178	CALL_2
0x4001c1f	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_178	CALL_2
0x4001c22	      0xe800000000	                          call 0x4001c27	       228	strbuf.h	FUNCTION_178	CALL_2
0x4001c27	      0x488b442408	                mov rax, qword [rsp + 8]	       229	strbuf.h	FUNCTION_178
0x4001c2c	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_178
0x4001c30	      0x4889542408	                mov qword [rsp + 8], rdx	       229	strbuf.h	FUNCTION_178
0x4001c35	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_178
0x4001c3a	        0x44882402	              mov byte [rdx + rax], r12b	       229	strbuf.h	FUNCTION_178
0x4001c3e	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_178
0x4001c43	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_178
0x4001c48	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_178
0x4001c4c	            0xeb17	                           jmp 0x4001c65	       230	strbuf.h	FUNCTION_178
0x4001c4e	      0xba27000000	                           mov edx, 0x27	       622	sequencer.c	FUNCTION_23	CALL_8
0x4001c53	      0xbe00000000	                              mov esi, 0	       622	sequencer.c	FUNCTION_23	CALL_8
0x4001c58	          0x4889e7	                            mov rdi, rsp	       622	sequencer.c	FUNCTION_23	CALL_8
0x4001c5b	      0xb800000000	                              mov eax, 0	       622	sequencer.c	FUNCTION_23	CALL_8
0x4001c60	      0xe800000000	                          call 0x4001c65	       622	sequencer.c	FUNCTION_23	CALL_8
0x4001c65	        0x4883c301	                              add rbx, 1	       622	sequencer.c	FUNCTION_23	CALL_8
0x4001c69	        0x488d6bff	                      lea rbp, [rbx - 1]	       622	sequencer.c	FUNCTION_23	CALL_8
0x4001c6d	      0x440fb663ff	              movzx r12d, byte [rbx - 1]	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001c72	        0x4180fc0d	                           cmp r12b, 0xd	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001c76	     0xf8761ffffff	                            ja 0x4001bdd	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001c7c	      0xb801240000	                         mov eax, 0x2401	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001c81	        0x4c0fa3e0	                             bt rax, r12	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001c85	     0xf8359ffffff	                           jae 0x4001be4	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001c8b	      0xba14000000	                           mov edx, 0x14	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001c90	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001c95	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001c98	      0xe800000000	                          call 0x4001c9d	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001c9d	        0x4883c501	                              add rbp, 1	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001ca1	      0xe98c000000	                           jmp 0x4001d32	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001ca6	      0xb800000000	                              mov eax, 0	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4001cab	            0xeb05	                           jmp 0x4001cb2	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4001cad	      0xb800000000	                              mov eax, 0	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4001cb2	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x4001cb5	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x4001cb7	     0xf8497000000	                            je 0x4001d54	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x4001cbd	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4001cc1	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4001cc5	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4001cc8	            0x74e8	                            je 0x4001cb2	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4001cca	      0xe99a010000	                           jmp 0x4001e69	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4001ccf	        0x488b0424	                    mov rax, qword [rsp]	       141	strbuf.h	FUNCTION_176
0x4001cd3	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_176
0x4001cd6	            0x740b	                            je 0x4001ce3	       141	strbuf.h	FUNCTION_176
0x4001cd8	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x4001cdc	      0x483b442408	                cmp rax, qword [rsp + 8]	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x4001ce1	            0x750d	                           jne 0x4001cf0	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x4001ce3	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_178	CALL_2
0x4001ce8	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_178	CALL_2
0x4001ceb	      0xe800000000	                          call 0x4001cf0	       228	strbuf.h	FUNCTION_178	CALL_2
0x4001cf0	      0x488b442408	                mov rax, qword [rsp + 8]	       229	strbuf.h	FUNCTION_178
0x4001cf5	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_178
0x4001cf9	      0x4889542408	                mov qword [rsp + 8], rdx	       229	strbuf.h	FUNCTION_178
0x4001cfe	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_178
0x4001d03	        0x44882402	              mov byte [rdx + rax], r12b	       229	strbuf.h	FUNCTION_178
0x4001d07	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_178
0x4001d0c	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_178
0x4001d11	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_178
0x4001d15	            0xeb17	                           jmp 0x4001d2e	       230	strbuf.h	FUNCTION_178
0x4001d17	      0xba27000000	                           mov edx, 0x27	       630	sequencer.c	FUNCTION_23	CALL_12
0x4001d1c	      0xbe00000000	                              mov esi, 0	       630	sequencer.c	FUNCTION_23	CALL_12
0x4001d21	          0x4889e7	                            mov rdi, rsp	       630	sequencer.c	FUNCTION_23	CALL_12
0x4001d24	      0xb800000000	                              mov eax, 0	       630	sequencer.c	FUNCTION_23	CALL_12
0x4001d29	      0xe800000000	                          call 0x4001d2e	       630	sequencer.c	FUNCTION_23	CALL_12
0x4001d2e	        0x4883c501	                              add rbp, 1	       630	sequencer.c	FUNCTION_23	CALL_12
0x4001d32	        0x488d5dff	                      lea rbx, [rbp - 1]	       630	sequencer.c	FUNCTION_23	CALL_12
0x4001d36	      0x440fb665ff	              movzx r12d, byte [rbp - 1]	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4001d3b	        0x4180fc0d	                           cmp r12b, 0xd	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4001d3f	     0xf8761ffffff	                            ja 0x4001ca6	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4001d45	      0xb801240000	                         mov eax, 0x2401	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4001d4a	        0x4c0fa3e0	                             bt rax, r12	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4001d4e	     0xf8359ffffff	                           jae 0x4001cad	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4001d54	      0xba14000000	                           mov edx, 0x14	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001d59	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001d5e	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001d61	      0xe800000000	                          call 0x4001d66	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001d66	        0x4883c301	                              add rbx, 1	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001d6a	            0xeb69	                           jmp 0x4001dd5	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001d6c	        0x4080fd27	                           cmp bpl, 0x27	       633	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x4001d70	            0x7448	                            je 0x4001dba	       633	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x4001d72	        0x488b0424	                    mov rax, qword [rsp]	       141	strbuf.h	FUNCTION_176
0x4001d76	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_176
0x4001d79	            0x740b	                            je 0x4001d86	       141	strbuf.h	FUNCTION_176
0x4001d7b	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x4001d7f	      0x483b442408	                cmp rax, qword [rsp + 8]	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x4001d84	            0x750d	                           jne 0x4001d93	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x4001d86	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_178	CALL_2
0x4001d8b	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_178	CALL_2
0x4001d8e	      0xe800000000	                          call 0x4001d93	       228	strbuf.h	FUNCTION_178	CALL_2
0x4001d93	      0x488b442408	                mov rax, qword [rsp + 8]	       229	strbuf.h	FUNCTION_178
0x4001d98	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_178
0x4001d9c	      0x4889542408	                mov qword [rsp + 8], rdx	       229	strbuf.h	FUNCTION_178
0x4001da1	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_178
0x4001da6	        0x40882c02	               mov byte [rdx + rax], bpl	       229	strbuf.h	FUNCTION_178
0x4001daa	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_178
0x4001daf	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_178
0x4001db4	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_178
0x4001db8	            0xeb17	                           jmp 0x4001dd1	       230	strbuf.h	FUNCTION_178
0x4001dba	      0xba27000000	                           mov edx, 0x27	       636	sequencer.c	FUNCTION_23	CALL_15
0x4001dbf	      0xbe00000000	                              mov esi, 0	       636	sequencer.c	FUNCTION_23	CALL_15
0x4001dc4	          0x4889e7	                            mov rdi, rsp	       636	sequencer.c	FUNCTION_23	CALL_15
0x4001dc7	      0xb800000000	                              mov eax, 0	       636	sequencer.c	FUNCTION_23	CALL_15
0x4001dcc	      0xe800000000	                          call 0x4001dd1	       636	sequencer.c	FUNCTION_23	CALL_15
0x4001dd1	        0x4883c301	                              add rbx, 1	       636	sequencer.c	FUNCTION_23	CALL_15
0x4001dd5	         0xfb66bff	               movzx ebp, byte [rbx - 1]	       632	sequencer.c	FUNCTION_23	WHILE_3
0x4001dd9	        0x4080fd0d	                            cmp bpl, 0xd	       632	sequencer.c	FUNCTION_23	WHILE_3
0x4001ddd	            0x778d	                            ja 0x4001d6c	       632	sequencer.c	FUNCTION_23	WHILE_3
0x4001ddf	      0xb801240000	                         mov eax, 0x2401	       632	sequencer.c	FUNCTION_23	WHILE_3
0x4001de4	        0x480fa3e8	                             bt rax, rbp	       632	sequencer.c	FUNCTION_23	WHILE_3
0x4001de8	            0x7382	                           jae 0x4001d6c	       632	sequencer.c	FUNCTION_23	WHILE_3
0x4001dea	      0xe8f6e3ffff	      call sym.rebase_path_author_script	       637	sequencer.c	FUNCTION_23	CALL_17
0x4001def	      0xb901000000	                              mov ecx, 1	       637	sequencer.c	FUNCTION_23	CALL_17
0x4001df4	          0x4889c2	                            mov rdx, rax	       637	sequencer.c	FUNCTION_23	CALL_17
0x4001df7	      0x488b742408	                mov rsi, qword [rsp + 8]	       637	sequencer.c	FUNCTION_23	CALL_17
0x4001dfc	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       637	sequencer.c	FUNCTION_23	CALL_17
0x4001e01	      0xe82ceeffff	                  call sym.write_message	       637	sequencer.c	FUNCTION_23	CALL_17
0x4001e06	            0x89c3	                            mov ebx, eax	       637	sequencer.c	FUNCTION_23	CALL_17
0x4001e08	          0x4889e7	                            mov rdi, rsp	       638	sequencer.c	FUNCTION_23	CALL_18
0x4001e0b	      0xe800000000	                          call 0x4001e10	       638	sequencer.c	FUNCTION_23	CALL_18
0x4001e10	            0x89d8	                            mov eax, ebx	       639	sequencer.c	FUNCTION_23
0x4001e12	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       640	sequencer.c	FUNCTION_23
0x4001e17	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       640	sequencer.c	FUNCTION_23
0x4001e20	            0x745b	                            je 0x4001e7d	       640	sequencer.c	FUNCTION_23
0x4001e22	            0xeb54	                           jmp 0x4001e78	       640	sequencer.c	FUNCTION_23
0x4001e24	      0xbe0a000000	                            mov esi, 0xa	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3
0x4001e29	          0x4889ef	                            mov rdi, rbp	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3
0x4001e2c	      0xe800000000	                          call 0x4001e31	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3
0x4001e31	          0x4885c0	                           test rax, rax	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3
0x4001e34	     0xf8597fdffff	                           jne 0x4001bd1	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3
0x4001e3a	      0xe956fdffff	                           jmp 0x4001b95	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3
0x4001e3f	      0xba11000000	                           mov edx, 0x11	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001e44	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001e49	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001e4c	      0xe800000000	                          call 0x4001e51	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001e51	        0x4883c301	                              add rbx, 1	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001e55	      0xe90ffeffff	                           jmp 0x4001c69	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001e5a	        0x4180fc27	                          cmp r12b, 0x27	       619	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x4001e5e	     0xf85a2fdffff	                           jne 0x4001c06	       619	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x4001e64	      0xe9e5fdffff	                           jmp 0x4001c4e	       619	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x4001e69	        0x4180fc27	                          cmp r12b, 0x27	       627	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x4001e6d	     0xf855cfeffff	                           jne 0x4001ccf	       627	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x4001e73	      0xe99ffeffff	                           jmp 0x4001d17	       627	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x4001e78	      0xe800000000	                          call 0x4001e7d	       640	sequencer.c	FUNCTION_23
0x4001e7d	        0x4883c420	                           add rsp, 0x20	       640	sequencer.c	FUNCTION_23
0x4001e81	              0x5b	                                 pop rbx	       640	sequencer.c	FUNCTION_23
0x4001e82	              0x5d	                                 pop rbp	       640	sequencer.c	FUNCTION_23
0x4001e83	            0x415c	                                 pop r12	       640	sequencer.c	FUNCTION_23
0x4001e85	              0xc3	                                     ret	       640	sequencer.c	FUNCTION_23
run_git_commit	ELSE,2:IF,15:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,20:DO,0	240
0x4001736	            0x4157	                                push r15	       719	sequencer.c	FUNCTION_26
0x4001738	            0x4156	                                push r14	       719	sequencer.c	FUNCTION_26
0x400173a	            0x4155	                                push r13	       719	sequencer.c	FUNCTION_26
0x400173c	            0x4154	                                push r12	       719	sequencer.c	FUNCTION_26
0x400173e	              0x55	                                push rbp	       719	sequencer.c	FUNCTION_26
0x400173f	              0x53	                                push rbx	       719	sequencer.c	FUNCTION_26
0x4001740	    0x4881ecb80000	                           sub rsp, 0xb8	       719	sequencer.c	FUNCTION_26
0x4001747	      0x48897c2408	                mov qword [rsp + 8], rdi	       719	sequencer.c	FUNCTION_26
0x400174c	          0x4989f7	                            mov r15, rsi	       719	sequencer.c	FUNCTION_26
0x400174f	          0x4189d5	                           mov r13d, edx	       719	sequencer.c	FUNCTION_26
0x4001752	    0x64488b042528	                mov rax, qword fs:[0x28]	       719	sequencer.c	FUNCTION_26
0x400175b	    0x48898424a800	             mov qword [rsp + 0xa8], rax	       719	sequencer.c	FUNCTION_26
0x4001763	            0x31c0	                            xor eax, eax	       719	sequencer.c	FUNCTION_26
0x4001765	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       720	sequencer.c	FUNCTION_26
0x400176a	      0xb90c000000	                            mov ecx, 0xc	       720	sequencer.c	FUNCTION_26
0x400176f	          0xf348ab	              rep stosq qword [rdi], rax	       720	sequencer.c	FUNCTION_26
0x4001772	    0x48c744244800	               mov qword [rsp + 0x48], 0	       720	sequencer.c	FUNCTION_26
0x400177b	    0x48c744245800	               mov qword [rsp + 0x58], 0	       720	sequencer.c	FUNCTION_26
0x4001784	    0xc68424880000	                mov byte [rsp + 0x88], 8	       723	sequencer.c	FUNCTION_26
0x400178c	          0x833e02	                      cmp dword [rsi], 2	       725	sequencer.c	FUNCTION_26	IF_1	CALL_1
0x400178f	     0xf8514010000	                           jne 0x40018a9	       725	sequencer.c	FUNCTION_26	IF_1	CALL_1
0x4001795	          0xf6c202	                              test dl, 2	       726	sequencer.c	FUNCTION_26	IF_1	IF_2
0x4001798	            0x7510	                           jne 0x40017aa	       726	sequencer.c	FUNCTION_26	IF_1	IF_2
0x400179a	    0x808c24880000	              or byte [rsp + 0x88], 0x20	       727	sequencer.c	FUNCTION_26	IF_1	IF_2
0x40017a2	    0xc7442474ffff	     mov dword [rsp + 0x74], 0xffffffff 	       728	sequencer.c	FUNCTION_26	IF_1	IF_2
0x40017aa	    0x48c744242000	               mov qword [rsp + 0x20], 0	       648	sequencer.c	FUNCTION_24
0x40017b3	    0x48c744242800	               mov qword [rsp + 0x28], 0	       648	sequencer.c	FUNCTION_24
0x40017bc	    0x48c744243000	               mov qword [rsp + 0x30], 0	       648	sequencer.c	FUNCTION_24
0x40017c5	      0xe81beaffff	      call sym.rebase_path_author_script	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x40017ca	      0xba00010000	                          mov edx, 0x100	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x40017cf	          0x4889c6	                            mov rsi, rax	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x40017d2	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x40017d7	      0xe800000000	                          call 0x40017dc	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x40017dc	          0x4885c0	                           test rax, rax	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x40017df	     0xf8ed3020000	                           jle 0x4001ab8	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x40017e5	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	       655	sequencer.c	FUNCTION_24	FOR_1
0x40017ea	           0xfb63b	                   movzx edi, byte [rbx]	       655	sequencer.c	FUNCTION_24	FOR_1
0x40017ed	          0x4084ff	                           test dil, dil	       655	sequencer.c	FUNCTION_24	FOR_1
0x40017f0	     0xf84b3000000	                            je 0x40018a9	       655	sequencer.c	FUNCTION_24	FOR_1
0x40017f6	          0x4889de	                            mov rsi, rbx	       655	sequencer.c	FUNCTION_24	FOR_1
0x40017f9	    0x41bc00000000	                             mov r12d, 0	       655	sequencer.c	FUNCTION_24	FOR_1
0x40017ff	            0xeb03	                           jmp 0x4001804	       655	sequencer.c	FUNCTION_24	FOR_1
0x4001801	          0x4889de	                            mov rsi, rbx	       655	sequencer.c	FUNCTION_24	FOR_1
0x4001804	          0x4889da	                            mov rdx, rbx	       655	sequencer.c	FUNCTION_24	FOR_1
0x4001807	      0xb800000000	                              mov eax, 0	       655	sequencer.c	FUNCTION_24	FOR_1
0x400180c	           0xfb608	                   movzx ecx, byte [rax]	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x400180f	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x4001811	     0xf846d020000	                            je 0x4001a84	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x4001817	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400181b	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400181f	          0x3a4aff	                  cmp cl, byte [rdx - 1]	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4001822	            0x74e8	                            je 0x400180c	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4001824	      0xe980020000	                           jmp 0x4001aa9	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4001829	        0x488d6eff	                      lea rbp, [rsi - 1]	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x400182d	      0x482b742430	             sub rsi, qword [rsp + 0x30]	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4001832	    0x41b800000000	                              mov r8d, 0	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4001838	      0xb900000000	                              mov ecx, 0	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x400183d	      0xba01000000	                              mov edx, 1	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4001842	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4001847	      0xe800000000	                          call 0x400184c	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x400184c	            0xeb10	                           jmp 0x400185e	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x400184e	          0x4889dd	                            mov rbp, rbx	       660	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x4001851	        0x4080ff0a	                            cmp dil, 0xa	       660	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x4001855	            0x7507	                           jne 0x400185e	       660	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x4001857	          0xc60600	                       mov byte [rsi], 0	       661	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x400185a	        0x4183c401	                             add r12d, 1	       662	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x400185e	        0x488d5d01	                      lea rbx, [rbp + 1]	       655	sequencer.c	FUNCTION_24	FOR_1
0x4001862	         0xfb67d01	               movzx edi, byte [rbp + 1]	       655	sequencer.c	FUNCTION_24	FOR_1
0x4001866	          0x4084ff	                           test dil, dil	       655	sequencer.c	FUNCTION_24	FOR_1
0x4001869	            0x7596	                           jne 0x4001801	       655	sequencer.c	FUNCTION_24	FOR_1
0x400186b	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	       665	sequencer.c	FUNCTION_24	FOR_2
0x4001870	          0x4585e4	                         test r12d, r12d	       665	sequencer.c	FUNCTION_24	FOR_2
0x4001873	            0x7e34	                           jle 0x40018a9	       665	sequencer.c	FUNCTION_24	FOR_2
0x4001875	      0xbd00000000	                              mov ebp, 0	       665	sequencer.c	FUNCTION_24	FOR_2
0x400187a	    0x49c7c6ffffff	             mov r14, 0xffffffffffffffff	       667	sequencer.c	FUNCTION_24	FOR_2	CALL_7
0x4001881	          0x4889de	                            mov rsi, rbx	       666	sequencer.c	FUNCTION_24	FOR_2	CALL_6
0x4001884	      0x488d7c2458	                   lea rdi, [rsp + 0x58]	       666	sequencer.c	FUNCTION_24	FOR_2	CALL_6
0x4001889	      0xe800000000	                          call 0x400188e	       666	sequencer.c	FUNCTION_24	FOR_2	CALL_6
0x400188e	          0x4c89f1	                            mov rcx, r14	       667	sequencer.c	FUNCTION_24	FOR_2	CALL_7
0x4001891	          0x4889df	                            mov rdi, rbx	       667	sequencer.c	FUNCTION_24	FOR_2	CALL_7
0x4001894	      0xb800000000	                              mov eax, 0	       667	sequencer.c	FUNCTION_24	FOR_2	CALL_7
0x4001899	            0xf2ae	              repne scasb al, byte [rdi]	       667	sequencer.c	FUNCTION_24	FOR_2	CALL_7
0x400189b	          0x48f7d1	                                 not rcx	       667	sequencer.c	FUNCTION_24	FOR_2	CALL_7
0x400189e	          0x4801cb	                            add rbx, rcx	       667	sequencer.c	FUNCTION_24	FOR_2	CALL_7
0x40018a1	          0x83c501	                              add ebp, 1	       665	sequencer.c	FUNCTION_24	FOR_2
0x40018a4	          0x4439e5	                           cmp ebp, r12d	       665	sequencer.c	FUNCTION_24	FOR_2
0x40018a7	            0x75d8	                           jne 0x4001881	       665	sequencer.c	FUNCTION_24	FOR_2
0x40018a9	      0xbe00000000	                              mov esi, 0	       739	sequencer.c	FUNCTION_26	CALL_5
0x40018ae	      0x488d7c2448	                   lea rdi, [rsp + 0x48]	       739	sequencer.c	FUNCTION_26	CALL_5
0x40018b3	      0xe800000000	                          call 0x40018b8	       739	sequencer.c	FUNCTION_26	CALL_5
0x40018b8	        0x41f6c510	                         test r13b, 0x10	       741	sequencer.c	FUNCTION_26	IF_4
0x40018bc	            0x750f	                           jne 0x40018cd	       741	sequencer.c	FUNCTION_26	IF_4
0x40018be	      0xbe00000000	                              mov esi, 0	       742	sequencer.c	FUNCTION_26	CALL_6
0x40018c3	      0x488d7c2448	                   lea rdi, [rsp + 0x48]	       742	sequencer.c	FUNCTION_26	CALL_6
0x40018c8	      0xe800000000	                          call 0x40018cd	       742	sequencer.c	FUNCTION_26	CALL_6
0x40018cd	        0x41f6c504	                            test r13b, 4	       743	sequencer.c	FUNCTION_26	IF_5
0x40018d1	            0x740f	                            je 0x40018e2	       743	sequencer.c	FUNCTION_26	IF_5
0x40018d3	      0xbe00000000	                              mov esi, 0	       744	sequencer.c	FUNCTION_26	CALL_7
0x40018d8	      0x488d7c2448	                   lea rdi, [rsp + 0x48]	       744	sequencer.c	FUNCTION_26	CALL_7
0x40018dd	      0xe800000000	                          call 0x40018e2	       744	sequencer.c	FUNCTION_26	CALL_7
0x40018e2	        0x498b5730	            mov rdx, qword [r15 + 0x30] 	       745	sequencer.c	FUNCTION_26	IF_6
0x40018e6	          0x4885d2	                           test rdx, rdx	       745	sequencer.c	FUNCTION_26	IF_6
0x40018e9	            0x7414	                            je 0x40018ff	       745	sequencer.c	FUNCTION_26	IF_6
0x40018eb	      0xbe00000000	                              mov esi, 0	       746	sequencer.c	FUNCTION_26	CALL_8
0x40018f0	      0x488d7c2448	                   lea rdi, [rsp + 0x48]	       746	sequencer.c	FUNCTION_26	CALL_8
0x40018f5	      0xb800000000	                              mov eax, 0	       746	sequencer.c	FUNCTION_26	CALL_8
0x40018fa	      0xe800000000	                          call 0x40018ff	       746	sequencer.c	FUNCTION_26	CALL_8
0x40018ff	      0x488b442408	                mov rax, qword [rsp + 8]	       747	sequencer.c	FUNCTION_26	IF_7
0x4001904	          0x4885c0	                           test rax, rax	       747	sequencer.c	FUNCTION_26	IF_7
0x4001907	            0x7428	                            je 0x4001931	       747	sequencer.c	FUNCTION_26	IF_7
0x4001909	      0xb900000000	                              mov ecx, 0	       748	sequencer.c	FUNCTION_26	CALL_9
0x400190e	          0x4889c2	                            mov rdx, rax	       748	sequencer.c	FUNCTION_26	CALL_9
0x4001911	      0xbe00000000	                              mov esi, 0	       748	sequencer.c	FUNCTION_26	CALL_9
0x4001916	      0x488d7c2448	                   lea rdi, [rsp + 0x48]	       748	sequencer.c	FUNCTION_26	CALL_9
0x400191b	      0xb800000000	                              mov eax, 0	       748	sequencer.c	FUNCTION_26	CALL_9
0x4001920	      0xe800000000	                          call 0x4001925	       748	sequencer.c	FUNCTION_26	CALL_9
0x4001925	        0x41f6c508	                            test r13b, 8	       751	sequencer.c	FUNCTION_26	IF_9
0x4001929	     0xf84c5010000	                            je 0x4001af4	       751	sequencer.c	FUNCTION_26	IF_9
0x400192f	            0xeb37	                           jmp 0x4001968	       751	sequencer.c	FUNCTION_26	IF_9
0x4001931	        0x41f6c502	                            test r13b, 2	       749	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x4001935	     0xf85dc010000	                           jne 0x4001b17	       749	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x400193b	      0xb900000000	                              mov ecx, 0	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x4001940	      0xba00000000	                              mov edx, 0	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x4001945	      0xbe00000000	                              mov esi, 0	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x400194a	      0x488d7c2448	                   lea rdi, [rsp + 0x48]	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x400194f	      0xb800000000	                              mov eax, 0	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x4001954	      0xe800000000	                          call 0x4001959	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x4001959	        0x41f6c508	                            test r13b, 8	       751	sequencer.c	FUNCTION_26	IF_9
0x400195d	     0xf8491010000	                            je 0x4001af4	       751	sequencer.c	FUNCTION_26	IF_9
0x4001963	      0xe9b7010000	                           jmp 0x4001b1f	       751	sequencer.c	FUNCTION_26	IF_9
0x4001968	      0xbe00000000	                              mov esi, 0	       752	sequencer.c	FUNCTION_26	CALL_11
0x400196d	      0x488d7c2448	                   lea rdi, [rsp + 0x48]	       752	sequencer.c	FUNCTION_26	CALL_11
0x4001972	      0xe800000000	                          call 0x4001977	       752	sequencer.c	FUNCTION_26	CALL_11
0x4001977	        0x41f6c502	                            test r13b, 2	       753	sequencer.c	FUNCTION_26	IF_10
0x400197b	            0x7441	                            je 0x40019be	       753	sequencer.c	FUNCTION_26	IF_10
0x400197d	      0xbe00000000	                              mov esi, 0	       754	sequencer.c	FUNCTION_26	CALL_12
0x4001982	      0x488d7c2448	                   lea rdi, [rsp + 0x48]	       754	sequencer.c	FUNCTION_26	CALL_12
0x4001987	      0xe800000000	                          call 0x400198c	       754	sequencer.c	FUNCTION_26	CALL_12
0x400198c	            0xeb30	                           jmp 0x40019be	       754	sequencer.c	FUNCTION_26	CALL_12
0x400198e	      0x41837f1000	               cmp dword [r15 + 0x10], 0	       755	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4001993	            0x7529	                           jne 0x40019be	       755	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4001995	      0x41837f0800	                  cmp dword [r15 + 8], 0	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x400199a	            0x7522	                           jne 0x40019be	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x400199c	      0x488d742418	                   lea rsi, [rsp + 0x18]	       757	sequencer.c	FUNCTION_26	ELSE_2	IF_11	CALL_13
0x40019a1	      0xbf00000000	                              mov edi, 0	       757	sequencer.c	FUNCTION_26	ELSE_2	IF_11	CALL_13
0x40019a6	      0xe800000000	                          call 0x40019ab	       757	sequencer.c	FUNCTION_26	ELSE_2	IF_11	CALL_13
0x40019ab	            0x85c0	                           test eax, eax	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x40019ad	            0x740f	                            je 0x40019be	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x40019af	      0xbe00000000	                              mov esi, 0	       758	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x40019b4	      0x488d7c2448	                   lea rdi, [rsp + 0x48]	       758	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x40019b9	      0xe800000000	                          call 0x40019be	       758	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x40019be	        0x41f6c501	                            test r13b, 1	       760	sequencer.c	FUNCTION_26	IF_12
0x40019c2	            0x740f	                            je 0x40019d3	       760	sequencer.c	FUNCTION_26	IF_12
0x40019c4	      0xbe00000000	                              mov esi, 0	       761	sequencer.c	FUNCTION_26	CALL_15
0x40019c9	      0x488d7c2448	                   lea rdi, [rsp + 0x48]	       761	sequencer.c	FUNCTION_26	CALL_15
0x40019ce	      0xe800000000	                          call 0x40019d3	       761	sequencer.c	FUNCTION_26	CALL_15
0x40019d3	      0x41837f2000	               cmp dword [r15 + 0x20], 0	       763	sequencer.c	FUNCTION_26	IF_13
0x40019d8	            0x740f	                            je 0x40019e9	       763	sequencer.c	FUNCTION_26	IF_13
0x40019da	      0xbe00000000	                              mov esi, 0	       764	sequencer.c	FUNCTION_26	CALL_16
0x40019df	      0x488d7c2448	                   lea rdi, [rsp + 0x48]	       764	sequencer.c	FUNCTION_26	CALL_16
0x40019e4	      0xe800000000	                          call 0x40019e9	       764	sequencer.c	FUNCTION_26	CALL_16
0x40019e9	      0x837c2474ff	cmp dword [rsp + 0x74], 0xffffffffffffffff	       766	sequencer.c	FUNCTION_26	IF_14
0x40019ee	            0x756e	                           jne 0x4001a5e	       766	sequencer.c	FUNCTION_26	IF_14
0x40019f0	    0x48c744242000	               mov qword [rsp + 0x20], 0	       768	sequencer.c	FUNCTION_26	IF_14
0x40019f9	    0x48c744242800	               mov qword [rsp + 0x28], 0	       768	sequencer.c	FUNCTION_26	IF_14
0x4001a02	    0x48c744243000	               mov qword [rsp + 0x30], 0	       768	sequencer.c	FUNCTION_26	IF_14
0x4001a0b	        0x4883ec08	                              sub rsp, 8	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4001a0f	            0x6a00	                                  push 0	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4001a11	      0x4c8d4c2430	                    lea r9, [rsp + 0x30]	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4001a16	    0x41b800000000	                              mov r8d, 0	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4001a1c	      0xb900000000	                              mov ecx, 0	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4001a21	      0xba00000000	                              mov edx, 0	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4001a26	      0xbe00000000	                              mov esi, 0	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4001a2b	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4001a30	      0xe800000000	                          call 0x4001a35	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4001a35	            0x89c3	                            mov ebx, eax	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4001a37	        0x4883c410	                           add rsp, 0x10	       774	sequencer.c	FUNCTION_26	IF_14	IF_15
0x4001a3b	            0x85c0	                           test eax, eax	       774	sequencer.c	FUNCTION_26	IF_14	IF_15
0x4001a3d	            0x7411	                            je 0x4001a50	       774	sequencer.c	FUNCTION_26	IF_14	IF_15
0x4001a3f	    0x488b35000000	            mov rsi, qword [0x04001a46] 	       775	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x4001a46	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       775	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x4001a4b	      0xe800000000	                          call 0x4001a50	       775	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x4001a50	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       776	sequencer.c	FUNCTION_26	IF_14	CALL_19
0x4001a55	      0xe800000000	                          call 0x4001a5a	       776	sequencer.c	FUNCTION_26	IF_14	CALL_19
0x4001a5a	            0x89d8	                            mov eax, ebx	       777	sequencer.c	FUNCTION_26	IF_14
0x4001a5c	            0xeb0a	                           jmp 0x4001a68	       777	sequencer.c	FUNCTION_26	IF_14
0x4001a5e	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       780	sequencer.c	FUNCTION_26	CALL_20
0x4001a63	      0xe800000000	                          call 0x4001a68	       780	sequencer.c	FUNCTION_26	CALL_20
0x4001a68	    0x488bb424a800	            mov rsi, qword [rsp + 0xa8] 	       781	sequencer.c	FUNCTION_26
0x4001a70	    0x644833342528	                xor rsi, qword fs:[0x28]	       781	sequencer.c	FUNCTION_26
0x4001a79	     0xf84b9000000	                            je 0x4001b38	       781	sequencer.c	FUNCTION_26
0x4001a7f	      0xe9af000000	                           jmp 0x4001b33	       781	sequencer.c	FUNCTION_26
0x4001a84	          0x4829f2	                            sub rdx, rsi	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4001a87	      0x482b742430	             sub rsi, qword [rsp + 0x30]	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4001a8c	    0x41b801000000	                              mov r8d, 1	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4001a92	      0xb900000000	                              mov ecx, 0	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4001a97	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4001a9c	      0xe800000000	                          call 0x4001aa1	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4001aa1	          0x4889dd	                            mov rbp, rbx	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4001aa4	      0xe9b5fdffff	                           jmp 0x400185e	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4001aa9	        0x4080ff27	                           cmp dil, 0x27	       658	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4001aad	     0xf859bfdffff	                           jne 0x400184e	       658	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4001ab3	      0xe971fdffff	                           jmp 0x4001829	       658	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4001ab8	          0x4c89ff	                            mov rdi, r15	       732	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_3
0x4001abb	      0xe808fcffff	            call sym.gpg_sign_opt_quoted	       732	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_3
0x4001ac0	          0x4889c3	                            mov rbx, rax	       732	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_3
0x4001ac3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4001ac8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4001acd	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4001ad2	      0xe800000000	                          call 0x4001ad7	        54	gettext.h	FUNCTION_118
0x4001ad7	          0x4889da	                            mov rdx, rbx	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x4001ada	          0x4889de	                            mov rsi, rbx	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x4001add	          0x4889c7	                            mov rdi, rax	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x4001ae0	      0xb800000000	                              mov eax, 0	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x4001ae5	      0xe800000000	                          call 0x4001aea	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x4001aea	      0xb8ffffffff	                     mov eax, 0xffffffff	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x4001aef	      0xe974ffffff	                           jmp 0x4001a68	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x4001af4	        0x41f6c502	                            test r13b, 2	       753	sequencer.c	FUNCTION_26	IF_10
0x4001af8	     0xf8490feffff	                            je 0x400198e	       753	sequencer.c	FUNCTION_26	IF_10
0x4001afe	      0xe97afeffff	                           jmp 0x400197d	       753	sequencer.c	FUNCTION_26	IF_10
0x4001b03	      0xbe00000000	                              mov esi, 0	       752	sequencer.c	FUNCTION_26	CALL_11
0x4001b08	      0x488d7c2448	                   lea rdi, [rsp + 0x48]	       752	sequencer.c	FUNCTION_26	CALL_11
0x4001b0d	      0xe800000000	                          call 0x4001b12	       752	sequencer.c	FUNCTION_26	CALL_11
0x4001b12	      0xe966feffff	                           jmp 0x400197d	       752	sequencer.c	FUNCTION_26	CALL_11
0x4001b17	        0x41f6c508	                            test r13b, 8	       751	sequencer.c	FUNCTION_26	IF_9
0x4001b1b	            0x74d7	                            je 0x4001af4	       751	sequencer.c	FUNCTION_26	IF_9
0x4001b1d	            0xebe4	                           jmp 0x4001b03	       751	sequencer.c	FUNCTION_26	IF_9
0x4001b1f	      0xbe00000000	                              mov esi, 0	       752	sequencer.c	FUNCTION_26	CALL_11
0x4001b24	      0x488d7c2448	                   lea rdi, [rsp + 0x48]	       752	sequencer.c	FUNCTION_26	CALL_11
0x4001b29	      0xe800000000	                          call 0x4001b2e	       752	sequencer.c	FUNCTION_26	CALL_11
0x4001b2e	      0xe98bfeffff	                           jmp 0x40019be	       752	sequencer.c	FUNCTION_26	CALL_11
0x4001b33	      0xe800000000	                          call 0x4001b38	       781	sequencer.c	FUNCTION_26
0x4001b38	    0x4881c4b80000	                           add rsp, 0xb8	       781	sequencer.c	FUNCTION_26
0x4001b3f	              0x5b	                                 pop rbx	       781	sequencer.c	FUNCTION_26
0x4001b40	              0x5d	                                 pop rbp	       781	sequencer.c	FUNCTION_26
0x4001b41	            0x415c	                                 pop r12	       781	sequencer.c	FUNCTION_26
0x4001b43	            0x415d	                                 pop r13	       781	sequencer.c	FUNCTION_26
0x4001b45	            0x415e	                                 pop r14	       781	sequencer.c	FUNCTION_26
0x4001b47	            0x415f	                                 pop r15	       781	sequencer.c	FUNCTION_26
0x4001b49	              0xc3	                                     ret	       781	sequencer.c	FUNCTION_26
append_new_todo	ELSE,0:IF,0:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,0:DO,0	38
0x4000aa0	              0x53	                                push rbx	      1797	sequencer.c	FUNCTION_52
0x4000aa1	          0x4889fb	                            mov rbx, rdi	      1797	sequencer.c	FUNCTION_52
0x4000aa4	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      1798	sequencer.c	FUNCTION_52
0x4000aa7	          0x8d4801	                      lea ecx, [rax + 1]	      1798	sequencer.c	FUNCTION_52
0x4000aaa	          0x8b4724	            mov eax, dword [rdi + 0x24] 	      1798	sequencer.c	FUNCTION_52
0x4000aad	            0x39c1	                            cmp ecx, eax	      1798	sequencer.c	FUNCTION_52
0x4000aaf	            0x7e50	                           jle 0x4000b01	      1798	sequencer.c	FUNCTION_52
0x4000ab1	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	      1798	sequencer.c	FUNCTION_52
0x4000ab5	            0x89c2	                            mov edx, eax	      1798	sequencer.c	FUNCTION_52
0x4000ab7	          0xc1ea1f	                           shr edx, 0x1f	      1798	sequencer.c	FUNCTION_52
0x4000aba	             0x1c2	                            add edx, eax	      1798	sequencer.c	FUNCTION_52
0x4000abc	            0xd1fa	                              sar edx, 1	      1798	sequencer.c	FUNCTION_52
0x4000abe	            0x39d1	                            cmp ecx, edx	      1798	sequencer.c	FUNCTION_52
0x4000ac0	           0xf4fd1	                          cmovg edx, ecx	      1798	sequencer.c	FUNCTION_52
0x4000ac3	          0x895724	             mov dword [rdi + 0x24], edx	      1798	sequencer.c	FUNCTION_52
0x4000ac6	          0x4863d2	                         movsxd rdx, edx	      1798	sequencer.c	FUNCTION_52
0x4000ac9	    0x48b855555555	           movabs rax, 0x555555555555555	       795	git-compat-util.h	FUNCTION_134	IF_1
0x4000ad3	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_134	IF_1
0x4000ad6	            0x7614	                           jbe 0x4000aec	       795	git-compat-util.h	FUNCTION_134	IF_1
0x4000ad8	      0xbe30000000	                           mov esi, 0x30	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x4000add	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x4000ae2	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x4000ae7	      0xe800000000	                          call 0x4000aec	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x4000aec	        0x488d3452	                  lea rsi, [rdx + rdx*2]	      1798	sequencer.c	FUNCTION_52
0x4000af0	        0x48c1e604	                              shl rsi, 4	      1798	sequencer.c	FUNCTION_52
0x4000af4	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	      1798	sequencer.c	FUNCTION_52
0x4000af8	      0xe800000000	                          call 0x4000afd	      1798	sequencer.c	FUNCTION_52
0x4000afd	        0x48894318	             mov qword [rbx + 0x18], rax	      1798	sequencer.c	FUNCTION_52
0x4000b01	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      1799	sequencer.c	FUNCTION_52
0x4000b05	          0x8b5320	            mov edx, dword [rbx + 0x20] 	      1799	sequencer.c	FUNCTION_52
0x4000b08	          0x8d4201	                      lea eax, [rdx + 1]	      1799	sequencer.c	FUNCTION_52
0x4000b0b	          0x894320	             mov dword [rbx + 0x20], eax	      1799	sequencer.c	FUNCTION_52
0x4000b0e	          0x4863d2	                         movsxd rdx, edx	      1799	sequencer.c	FUNCTION_52
0x4000b11	        0x488d0452	                  lea rax, [rdx + rdx*2]	      1799	sequencer.c	FUNCTION_52
0x4000b15	        0x48c1e004	                              shl rax, 4	      1799	sequencer.c	FUNCTION_52
0x4000b19	          0x4801c8	                            add rax, rcx	      1799	sequencer.c	FUNCTION_52
0x4000b1c	              0x5b	                                 pop rbx	      1800	sequencer.c	FUNCTION_52
0x4000b1d	              0xc3	                                     ret	      1800	sequencer.c	FUNCTION_52
sequencer_continue	ELSE,3:IF,13:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,27:DO,0	701
0x40087c1	            0x4155	                                push r13	      3378	sequencer.c	FUNCTION_90
0x40087c3	            0x4154	                                push r12	      3378	sequencer.c	FUNCTION_90
0x40087c5	              0x55	                                push rbp	      3378	sequencer.c	FUNCTION_90
0x40087c6	              0x53	                                push rbx	      3378	sequencer.c	FUNCTION_90
0x40087c7	    0x4881ecd80000	                           sub rsp, 0xd8	      3378	sequencer.c	FUNCTION_90
0x40087ce	          0x4889fb	                            mov rbx, rdi	      3378	sequencer.c	FUNCTION_90
0x40087d1	    0x64488b042528	                mov rax, qword fs:[0x28]	      3378	sequencer.c	FUNCTION_90
0x40087da	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      3378	sequencer.c	FUNCTION_90
0x40087e2	            0x31c0	                            xor eax, eax	      3378	sequencer.c	FUNCTION_90
0x40087e4	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      3379	sequencer.c	FUNCTION_90
0x40087e9	      0xb90b000000	                            mov ecx, 0xb	      3379	sequencer.c	FUNCTION_90
0x40087ee	          0xf348ab	              rep stosq qword [rdi], rax	      3379	sequencer.c	FUNCTION_90
0x40087f1	    0x48c744244000	               mov qword [rsp + 0x40], 0	      3379	sequencer.c	FUNCTION_90
0x40087fa	          0x4889df	                            mov rdi, rbx	      3382	sequencer.c	FUNCTION_90	IF_1	CALL_1
0x40087fd	      0xe85481ffff	         call sym.read_and_refresh_cache	      3382	sequencer.c	FUNCTION_90	IF_1	CALL_1
0x4008802	            0x85c0	                           test eax, eax	      3382	sequencer.c	FUNCTION_90	IF_1	CALL_1
0x4008804	     0xf853b0a0000	                           jne 0x4009245	      3382	sequencer.c	FUNCTION_90	IF_1	CALL_1
0x400880a	          0x833b02	                      cmp dword [rbx], 2	      2103	sequencer.c	FUNCTION_64	IF_1	CALL_1
0x400880d	     0xf85a6030000	                           jne 0x4008bb9	      2103	sequencer.c	FUNCTION_64	IF_1	CALL_1
0x4008813	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2104	sequencer.c	FUNCTION_64	IF_1
0x400881c	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2104	sequencer.c	FUNCTION_64	IF_1
0x4008825	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2104	sequencer.c	FUNCTION_64	IF_1
0x400882e	    0x48833d000000	               cmp qword [0x04008836], 0	       136	sequencer.c	CALL_22
0x4008836	            0x7511	                           jne 0x4008849	       136	sequencer.c	CALL_22
0x4008838	      0xbf00000000	                              mov edi, 0	       136	sequencer.c	CALL_22
0x400883d	      0xe800000000	                          call 0x4008842	       136	sequencer.c	CALL_22
0x4008842	    0x488905000000	            mov qword [0x04008849], rax 	       136	sequencer.c	CALL_22
0x4008849	      0xba01000000	                              mov edx, 1	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x400884e	    0x488b35000000	            mov rsi, qword [0x04008855] 	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x4008855	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x400885a	      0xe8498bffff	                  call sym.read_oneliner	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x400885f	            0x85c0	                           test eax, eax	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x4008861	     0xf84a8000000	                            je 0x400890f	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x4008867	      0xbe00000000	                              mov esi, 0	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x400886c	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x4008871	      0xe800000000	                          call 0x4008876	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x4008876	            0x85c0	                           test eax, eax	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x4008878	            0x753d	                           jne 0x40088b7	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x400887a	    0x48c744241800	               mov qword [rsp + 0x18], 0	       164	strbuf.h	FUNCTION_177
0x4008883	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       165	strbuf.h	FUNCTION_177	IF_2
0x4008888	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_177	IF_2
0x400888e	            0x7405	                            je 0x4008895	       165	strbuf.h	FUNCTION_177	IF_2
0x4008890	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_177	IF_2
0x4008893	            0xeb3d	                           jmp 0x40088d2	       166	strbuf.h	FUNCTION_177	IF_2
0x4008895	    0x803d00000000	                cmp byte [0x0400889c], 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400889c	            0x7434	                            je 0x40088d2	       168	strbuf.h	FUNCTION_177	CALL_2
0x400889e	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40088a3	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_177	CALL_2
0x40088a8	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40088ad	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40088b2	      0xe800000000	                          call 0x40088b7	       168	strbuf.h	FUNCTION_177	CALL_2
0x40088b7	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      2110	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_5
0x40088bb	      0xe800000000	                          call 0x40088c0	      2110	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_5
0x40088c0	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_6
0x40088c5	        0x488d7802	                      lea rdi, [rax + 2]	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_6
0x40088c9	      0xe800000000	                          call 0x40088ce	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_6
0x40088ce	        0x48894330	             mov qword [rbx + 0x30], rax	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_6
0x40088d2	    0x48c744241800	               mov qword [rsp + 0x18], 0	       164	strbuf.h	FUNCTION_177
0x40088db	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       165	strbuf.h	FUNCTION_177	IF_2
0x40088e0	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_177	IF_2
0x40088e6	            0x7405	                            je 0x40088ed	       165	strbuf.h	FUNCTION_177	IF_2
0x40088e8	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_177	IF_2
0x40088eb	            0xeb22	                           jmp 0x400890f	       166	strbuf.h	FUNCTION_177	IF_2
0x40088ed	    0x803d00000000	                cmp byte [0x040088f4], 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40088f4	            0x7419	                            je 0x400890f	       168	strbuf.h	FUNCTION_177	CALL_2
0x40088f6	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40088fb	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_177	CALL_2
0x4008900	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x4008905	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400890a	      0xe800000000	                          call 0x400890f	       168	strbuf.h	FUNCTION_177	CALL_2
0x400890f	    0x48833d000000	               cmp qword [0x04008917], 0	       145	sequencer.c	CALL_31
0x4008917	            0x7516	                           jne 0x400892f	       145	sequencer.c	CALL_31
0x4008919	      0xbf00000000	                              mov edi, 0	       145	sequencer.c	CALL_31
0x400891e	      0xb800000000	                              mov eax, 0	       145	sequencer.c	CALL_31
0x4008923	      0xe800000000	                          call 0x4008928	       145	sequencer.c	CALL_31
0x4008928	    0x488905000000	            mov qword [0x0400892f], rax 	       145	sequencer.c	CALL_31
0x400892f	      0xba01000000	                              mov edx, 1	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x4008934	    0x488b35000000	            mov rsi, qword [0x0400893b] 	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x400893b	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x4008940	      0xe8638affff	                  call sym.read_oneliner	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x4008945	            0x85c0	                           test eax, eax	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x4008947	            0x747f	                            je 0x40089c8	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x4008949	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x400894e	      0xbf00000000	                              mov edi, 0	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x4008953	      0xb914000000	                           mov ecx, 0x14	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x4008958	          0x4889c6	                            mov rsi, rax	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x400895b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x400895d	           0xf97c1	                                 seta cl	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x4008960	           0xf92c2	                                 setb dl	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x4008963	            0x38d1	                              cmp cl, dl	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x4008965	            0x7509	                           jne 0x4008970	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x4008967	    0xc74318010000	               mov dword [rbx + 0x18], 1	      2118	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x400896e	            0xeb20	                           jmp 0x4008990	      2118	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x4008970	      0xbf00000000	                              mov edi, 0	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x4008975	      0xb917000000	                           mov ecx, 0x17	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x400897a	          0x4889c6	                            mov rsi, rax	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x400897d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x400897f	           0xf97c1	                                 seta cl	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x4008982	           0xf92c2	                                 setb dl	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x4008985	            0x38d1	                              cmp cl, dl	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x4008987	            0x7507	                           jne 0x4008990	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x4008989	    0xc74318020000	               mov dword [rbx + 0x18], 2	      2120	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x4008990	    0x48c744241800	               mov qword [rsp + 0x18], 0	       164	strbuf.h	FUNCTION_177
0x4008999	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_177	IF_2
0x400899f	            0x7405	                            je 0x40089a6	       165	strbuf.h	FUNCTION_177	IF_2
0x40089a1	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_177	IF_2
0x40089a4	            0xeb22	                           jmp 0x40089c8	       166	strbuf.h	FUNCTION_177	IF_2
0x40089a6	    0x803d00000000	                cmp byte [0x040089ad], 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40089ad	            0x7419	                            je 0x40089c8	       168	strbuf.h	FUNCTION_177	CALL_2
0x40089af	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40089b4	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_177	CALL_2
0x40089b9	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40089be	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40089c3	      0xe800000000	                          call 0x40089c8	       168	strbuf.h	FUNCTION_177	CALL_2
0x40089c8	    0x48833d000000	               cmp qword [0x040089d0], 0	       138	sequencer.c	CALL_24
0x40089d0	            0x7516	                           jne 0x40089e8	       138	sequencer.c	CALL_24
0x40089d2	      0xbf00000000	                              mov edi, 0	       138	sequencer.c	CALL_24
0x40089d7	      0xb800000000	                              mov eax, 0	       138	sequencer.c	CALL_24
0x40089dc	      0xe800000000	                          call 0x40089e1	       138	sequencer.c	CALL_24
0x40089e1	    0x488905000000	            mov qword [0x040089e8], rax 	       138	sequencer.c	CALL_24
0x40089e8	    0x488b3d000000	            mov rdi, qword [0x040089ef] 	      2124	sequencer.c	FUNCTION_64	IF_1	IF_7	CALL_10
0x40089ef	      0xe800000000	                          call 0x40089f4	      2124	sequencer.c	FUNCTION_64	IF_1	IF_7	CALL_10
0x40089f4	            0x85c0	                           test eax, eax	      2124	sequencer.c	FUNCTION_64	IF_1	IF_7	CALL_10
0x40089f6	            0x7407	                            je 0x40089ff	      2124	sequencer.c	FUNCTION_64	IF_1	IF_7	CALL_10
0x40089f8	    0xc74328010000	               mov dword [rbx + 0x28], 1	      2125	sequencer.c	FUNCTION_64	IF_1	IF_7
0x40089ff	    0x48833d000000	               cmp qword [0x04008a07], 0	       139	sequencer.c	CALL_25
0x4008a07	            0x7516	                           jne 0x4008a1f	       139	sequencer.c	CALL_25
0x4008a09	      0xbf00000000	                              mov edi, 0	       139	sequencer.c	CALL_25
0x4008a0e	      0xb800000000	                              mov eax, 0	       139	sequencer.c	CALL_25
0x4008a13	      0xe800000000	                          call 0x4008a18	       139	sequencer.c	CALL_25
0x4008a18	    0x488905000000	            mov qword [0x04008a1f], rax 	       139	sequencer.c	CALL_25
0x4008a1f	    0x488b3d000000	            mov rdi, qword [0x04008a26] 	      2127	sequencer.c	FUNCTION_64	IF_1	IF_8	CALL_12
0x4008a26	      0xe800000000	                          call 0x4008a2b	      2127	sequencer.c	FUNCTION_64	IF_1	IF_8	CALL_12
0x4008a2b	            0x85c0	                           test eax, eax	      2127	sequencer.c	FUNCTION_64	IF_1	IF_8	CALL_12
0x4008a2d	            0x740e	                            je 0x4008a3d	      2127	sequencer.c	FUNCTION_64	IF_1	IF_8	CALL_12
0x4008a2f	    0xc74314000000	               mov dword [rbx + 0x14], 0	      2128	sequencer.c	FUNCTION_64	IF_1	IF_8
0x4008a36	    0xc74310010000	               mov dword [rbx + 0x10], 1	      2129	sequencer.c	FUNCTION_64	IF_1	IF_8
0x4008a3d	    0x48c744241800	               mov qword [rsp + 0x18], 0	       164	strbuf.h	FUNCTION_177
0x4008a46	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       165	strbuf.h	FUNCTION_177	IF_2
0x4008a4b	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_177	IF_2
0x4008a51	            0x7405	                            je 0x4008a58	       165	strbuf.h	FUNCTION_177	IF_2
0x4008a53	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_177	IF_2
0x4008a56	            0xeb22	                           jmp 0x4008a7a	       166	strbuf.h	FUNCTION_177	IF_2
0x4008a58	    0x803d00000000	                cmp byte [0x04008a5f], 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x4008a5f	            0x7419	                            je 0x4008a7a	       168	strbuf.h	FUNCTION_177	CALL_2
0x4008a61	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x4008a66	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_177	CALL_2
0x4008a6b	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x4008a70	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x4008a75	      0xe800000000	                          call 0x4008a7a	       168	strbuf.h	FUNCTION_177	CALL_2
0x4008a7a	    0x48833d000000	               cmp qword [0x04008a82], 0	       143	sequencer.c	CALL_29
0x4008a82	            0x7516	                           jne 0x4008a9a	       143	sequencer.c	CALL_29
0x4008a84	      0xbf00000000	                              mov edi, 0	       143	sequencer.c	CALL_29
0x4008a89	      0xb800000000	                              mov eax, 0	       143	sequencer.c	CALL_29
0x4008a8e	      0xe800000000	                          call 0x4008a93	       143	sequencer.c	CALL_29
0x4008a93	    0x488905000000	            mov qword [0x04008a9a], rax 	       143	sequencer.c	CALL_29
0x4008a9a	      0xba00000000	                              mov edx, 0	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_2
0x4008a9f	    0x488b35000000	            mov rsi, qword [0x04008aa6] 	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_2
0x4008aa6	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_2
0x4008aab	      0xe8f888ffff	                  call sym.read_oneliner	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_2
0x4008ab0	            0x85c0	                           test eax, eax	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_2
0x4008ab2	     0xf84b0000000	                            je 0x4008b68	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_2
0x4008ab8	      0xbe00000000	                              mov esi, 0	      2088	sequencer.c	FUNCTION_63	CALL_3
0x4008abd	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2088	sequencer.c	FUNCTION_63	CALL_3
0x4008ac2	      0xe800000000	                          call 0x4008ac7	      2088	sequencer.c	FUNCTION_63	CALL_3
0x4008ac7	        0x48894340	             mov qword [rbx + 0x40], rax	      2088	sequencer.c	FUNCTION_63	CALL_3
0x4008acb	    0x48833d000000	               cmp qword [0x04008ad3], 0	       144	sequencer.c	CALL_30
0x4008ad3	            0x7516	                           jne 0x4008aeb	       144	sequencer.c	CALL_30
0x4008ad5	      0xbf00000000	                              mov edi, 0	       144	sequencer.c	CALL_30
0x4008ada	      0xb800000000	                              mov eax, 0	       144	sequencer.c	CALL_30
0x4008adf	      0xe800000000	                          call 0x4008ae4	       144	sequencer.c	CALL_30
0x4008ae4	    0x488905000000	            mov qword [0x04008aeb], rax 	       144	sequencer.c	CALL_30
0x4008aeb	      0xba00000000	                              mov edx, 0	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_5
0x4008af0	    0x488b35000000	            mov rsi, qword [0x04008af7] 	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_5
0x4008af7	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_5
0x4008afc	      0xe8a788ffff	                  call sym.read_oneliner	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_5
0x4008b01	            0x85c0	                           test eax, eax	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_5
0x4008b03	            0x7463	                            je 0x4008b68	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_5
0x4008b05	        0x488d7348	                   lea rsi, [rbx + 0x48]	      2092	sequencer.c	FUNCTION_63	CALL_6
0x4008b09	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2092	sequencer.c	FUNCTION_63	CALL_6
0x4008b0e	      0xe800000000	                          call 0x4008b13	      2092	sequencer.c	FUNCTION_63	CALL_6
0x4008b13	            0x4898	                                    cdqe	      2092	sequencer.c	FUNCTION_63	CALL_6
0x4008b15	        0x48894350	             mov qword [rbx + 0x50], rax	      2092	sequencer.c	FUNCTION_63	CALL_6
0x4008b19	          0x4885c0	                           test rax, rax	      2093	sequencer.c	FUNCTION_63	FOR_1
0x4008b1c	            0x744a	                            je 0x4008b68	      2093	sequencer.c	FUNCTION_63	FOR_1
0x4008b1e	      0xbd00000000	                              mov ebp, 0	      2093	sequencer.c	FUNCTION_63	FOR_1
0x4008b23	      0xb800000000	                              mov eax, 0	      2093	sequencer.c	FUNCTION_63	FOR_1
0x4008b28	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	      2094	sequencer.c	FUNCTION_63	FOR_1
0x4008b2c	        0x4c8d24c2	                  lea r12, [rdx + rax*8]	      2094	sequencer.c	FUNCTION_63	FOR_1
0x4008b30	        0x498b0c24	                    mov rcx, qword [r12]	      2094	sequencer.c	FUNCTION_63	FOR_1
0x4008b34	          0x4889cf	                            mov rdi, rcx	      2094	sequencer.c	FUNCTION_63	FOR_1
0x4008b37	      0xb800000000	                              mov eax, 0	      2094	sequencer.c	FUNCTION_63	FOR_1
0x4008b3c	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x4008b3f	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x4008b41	            0x7410	                            je 0x4008b53	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x4008b43	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4008b47	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4008b4b	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4008b4e	            0x74ec	                            je 0x4008b3c	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4008b50	          0x4889cf	                            mov rdi, rcx	      2094	sequencer.c	FUNCTION_63	FOR_1
0x4008b53	      0xe800000000	                          call 0x4008b58	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_8
0x4008b58	        0x49890424	                    mov qword [r12], rax	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_8
0x4008b5c	          0x83c501	                              add ebp, 1	      2093	sequencer.c	FUNCTION_63	FOR_1
0x4008b5f	          0x4863c5	                         movsxd rax, ebp	      2093	sequencer.c	FUNCTION_63	FOR_1
0x4008b62	        0x483b4350	            cmp rax, qword [rbx + 0x50] 	      2093	sequencer.c	FUNCTION_63	FOR_1
0x4008b66	            0x72c0	                            jb 0x4008b28	      2093	sequencer.c	FUNCTION_63	FOR_1
0x4008b68	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2133	sequencer.c	FUNCTION_64	IF_1	CALL_14
0x4008b6d	      0xe800000000	                          call 0x4008b72	      2133	sequencer.c	FUNCTION_64	IF_1	CALL_14
0x4008b72	      0xe8c675ffff	     call sym.rebase_path_current_fixups	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_15
0x4008b77	        0x488d7b60	                   lea rdi, [rbx + 0x60]	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_15
0x4008b7b	      0xba01000000	                              mov edx, 1	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_15
0x4008b80	          0x4889c6	                            mov rsi, rax	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_15
0x4008b83	      0xe82088ffff	                  call sym.read_oneliner	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_15
0x4008b88	            0x85c0	                           test eax, eax	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_15
0x4008b8a	     0xf84d6060000	                            je 0x4009266	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_15
0x4008b90	        0x488b7b70	            mov rdi, qword [rbx + 0x70] 	      2137	sequencer.c	FUNCTION_64	IF_1	IF_9
0x4008b94	    0xc74378010000	               mov dword [rbx + 0x78], 1	      2138	sequencer.c	FUNCTION_64	IF_1	IF_9
0x4008b9b	            0xeb08	                           jmp 0x4008ba5	      2138	sequencer.c	FUNCTION_64	IF_1	IF_9
0x4008b9d	        0x83437801	               add dword [rbx + 0x78], 1	      2140	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x4008ba1	        0x488d7801	                      lea rdi, [rax + 1]	      2141	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x4008ba5	      0xbe0a000000	                            mov esi, 0xa	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x4008baa	      0xe800000000	                          call 0x4008baf	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x4008baf	          0x4885c0	                           test rax, rax	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x4008bb2	            0x75e9	                           jne 0x4008b9d	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x4008bb4	      0xe9ad060000	                           jmp 0x4009266	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x4008bb9	      0xe8b775ffff	             call sym.git_path_opts_file	      2148	sequencer.c	FUNCTION_64	IF_10	CALL_18
0x4008bbe	          0x4889c7	                            mov rdi, rax	      2148	sequencer.c	FUNCTION_64	IF_10	CALL_18
0x4008bc1	      0xe800000000	                          call 0x4008bc6	      2148	sequencer.c	FUNCTION_64	IF_10	CALL_18
0x4008bc6	            0x85c0	                           test eax, eax	      2148	sequencer.c	FUNCTION_64	IF_10	CALL_18
0x4008bc8	     0xf8498060000	                            je 0x4009266	      2148	sequencer.c	FUNCTION_64	IF_10	CALL_18
0x4008bce	      0xe8a275ffff	             call sym.git_path_opts_file	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_20
0x4008bd3	          0x4889da	                            mov rdx, rbx	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_20
0x4008bd6	          0x4889c6	                            mov rsi, rax	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_20
0x4008bd9	      0xbf00000000	                              mov edi, 0	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_20
0x4008bde	      0xe800000000	                          call 0x4008be3	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_20
0x4008be3	            0x85c0	                           test eax, eax	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_20
0x4008be5	     0xf897b060000	                           jns 0x4009266	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_20
0x4008beb	      0xe88575ffff	             call sym.git_path_opts_file	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_21
0x4008bf0	          0x4889c3	                            mov rbx, rax	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_21
0x4008bf3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4008bf8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4008bfd	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4008c02	      0xe800000000	                          call 0x4008c07	        54	gettext.h	FUNCTION_118
0x4008c07	          0x4889de	                            mov rsi, rbx	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_21
0x4008c0a	          0x4889c7	                            mov rdi, rax	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_21
0x4008c0d	      0xb800000000	                              mov eax, 0	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_21
0x4008c12	      0xe800000000	                          call 0x4008c17	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_21
0x4008c17	      0xb8ffffffff	                     mov eax, 0xffffffff	      3386	sequencer.c	FUNCTION_90	IF_2
0x4008c1c	      0xe929060000	                           jmp 0x400924a	      3386	sequencer.c	FUNCTION_90	IF_2
0x4008c21	          0x4889de	                            mov rsi, rbx	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0x4008c24	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0x4008c29	      0xe84aa3ffff	             call sym.read_populate_todo	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0x4008c2e	            0x89c5	                            mov ebp, eax	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0x4008c30	            0x85c0	                           test eax, eax	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0x4008c32	     0xf85ff050000	                           jne 0x4009237	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0x4008c38	      0xbf01000000	                              mov edi, 1	      3257	sequencer.c	FUNCTION_89	IF_1	CALL_1
0x4008c3d	      0xe800000000	                          call 0x4008c42	      3257	sequencer.c	FUNCTION_89	IF_1	CALL_1
0x4008c42	            0x85c0	                           test eax, eax	      3257	sequencer.c	FUNCTION_89	IF_1	CALL_1
0x4008c44	            0x7426	                            je 0x4008c6c	      3257	sequencer.c	FUNCTION_89	IF_1	CALL_1
0x4008c46	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4008c4b	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4008c50	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4008c55	      0xe800000000	                          call 0x4008c5a	        54	gettext.h	FUNCTION_118
0x4008c5a	          0x4889c7	                            mov rdi, rax	      3258	sequencer.c	FUNCTION_89	CALL_2
0x4008c5d	      0xb800000000	                              mov eax, 0	      3258	sequencer.c	FUNCTION_89	CALL_2
0x4008c62	      0xe800000000	                          call 0x4008c67	      3258	sequencer.c	FUNCTION_89	CALL_2
0x4008c67	      0xe92f060000	                           jmp 0x400929b	      3258	sequencer.c	FUNCTION_89	CALL_2
0x4008c6c	      0xbf00000000	                              mov edi, 0	      3260	sequencer.c	FUNCTION_89	CALL_3
0x4008c71	      0xe800000000	                          call 0x4008c76	      3260	sequencer.c	FUNCTION_89	CALL_3
0x4008c76	            0x89c5	                            mov ebp, eax	      3260	sequencer.c	FUNCTION_89	CALL_3
0x4008c78	      0xe8a075ffff	              call sym.rebase_path_amend	      3262	sequencer.c	FUNCTION_89	IF_2	CALL_5
0x4008c7d	          0x4889c7	                            mov rdi, rax	      3262	sequencer.c	FUNCTION_89	IF_2	CALL_5
0x4008c80	      0xe800000000	                          call 0x4008c85	      3262	sequencer.c	FUNCTION_89	IF_2	CALL_5
0x4008c85	            0x85c0	                           test eax, eax	      3262	sequencer.c	FUNCTION_89	IF_2	CALL_5
0x4008c87	     0xf84fc050000	                            je 0x4009289	      3262	sequencer.c	FUNCTION_89	IF_2	CALL_5
0x4008c8d	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3263	sequencer.c	FUNCTION_89	IF_2
0x4008c96	    0x48c744241800	               mov qword [rsp + 0x18], 0	      3263	sequencer.c	FUNCTION_89	IF_2
0x4008c9f	    0x48c744242000	               mov qword [rsp + 0x20], 0	      3263	sequencer.c	FUNCTION_89	IF_2
0x4008ca8	    0x488db4249000	                   lea rsi, [rsp + 0x90]	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_6
0x4008cb0	      0xbf00000000	                              mov edi, 0	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_6
0x4008cb5	      0xe800000000	                          call 0x4008cba	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_6
0x4008cba	            0x85c0	                           test eax, eax	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_6
0x4008cbc	            0x7426	                            je 0x4008ce4	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_6
0x4008cbe	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4008cc3	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4008cc8	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4008ccd	      0xe800000000	                          call 0x4008cd2	        54	gettext.h	FUNCTION_118
0x4008cd2	          0x4889c7	                            mov rdi, rax	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_7
0x4008cd5	      0xb800000000	                              mov eax, 0	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_7
0x4008cda	      0xe800000000	                          call 0x4008cdf	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_7
0x4008cdf	      0xe9b7050000	                           jmp 0x400929b	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_7
0x4008ce4	      0xe83475ffff	              call sym.rebase_path_amend	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_9
0x4008ce9	      0xba00000000	                              mov edx, 0	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_9
0x4008cee	          0x4889c6	                            mov rsi, rax	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_9
0x4008cf1	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_9
0x4008cf6	      0xe8ad86ffff	                  call sym.read_oneliner	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_9
0x4008cfb	            0x85c0	                           test eax, eax	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_9
0x4008cfd	            0x7531	                           jne 0x4008d30	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_9
0x4008cff	      0xe81975ffff	              call sym.rebase_path_amend	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_11
0x4008d04	          0x4889c3	                            mov rbx, rax	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_11
0x4008d07	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4008d0c	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4008d11	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4008d16	      0xe800000000	                          call 0x4008d1b	        54	gettext.h	FUNCTION_118
0x4008d1b	          0x4889de	                            mov rsi, rbx	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_11
0x4008d1e	          0x4889c7	                            mov rdi, rax	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_11
0x4008d21	      0xb800000000	                              mov eax, 0	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_11
0x4008d26	      0xe800000000	                          call 0x4008d2b	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_11
0x4008d2b	      0xe96b050000	                           jmp 0x400929b	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_11
0x4008d30	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_12
0x4008d38	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_12
0x4008d3d	      0xe800000000	                          call 0x4008d42	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_12
0x4008d42	            0x85c0	                           test eax, eax	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_12
0x4008d44	            0x7431	                            je 0x4008d77	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_12
0x4008d46	      0xe8d274ffff	              call sym.rebase_path_amend	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_13
0x4008d4b	          0x4889c3	                            mov rbx, rax	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_13
0x4008d4e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4008d53	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4008d58	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4008d5d	      0xe800000000	                          call 0x4008d62	        54	gettext.h	FUNCTION_118
0x4008d62	          0x4889de	                            mov rsi, rbx	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_13
0x4008d65	          0x4889c7	                            mov rdi, rax	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_13
0x4008d68	      0xb800000000	                              mov eax, 0	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_13
0x4008d6d	      0xe800000000	                          call 0x4008d72	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_13
0x4008d72	      0xe924050000	                           jmp 0x400929b	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_13
0x4008d77	            0x85ed	                           test ebp, ebp	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_15
0x4008d79	            0x7448	                            je 0x4008dc3	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_15
0x4008d7b	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_155	CALL_1
0x4008d80	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	       975	cache.h	FUNCTION_155	CALL_1
0x4008d88	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       975	cache.h	FUNCTION_155	CALL_1
0x4008d90	      0xe800000000	                          call 0x4008d95	       975	cache.h	FUNCTION_155	CALL_1
0x4008d95	            0x85c0	                           test eax, eax	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_15
0x4008d97	     0xf8464050000	                            je 0x4009301	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_15
0x4008d9d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4008da2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4008da7	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4008dac	      0xe800000000	                          call 0x4008db1	        54	gettext.h	FUNCTION_118
0x4008db1	          0x4889c7	                            mov rdi, rax	      3274	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_16
0x4008db4	      0xb800000000	                              mov eax, 0	      3274	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_16
0x4008db9	      0xe800000000	                          call 0x4008dbe	      3274	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_16
0x4008dbe	      0xe9d8040000	                           jmp 0x400929b	      3274	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_16
0x4008dc3	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_155	CALL_1
0x4008dc8	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	       975	cache.h	FUNCTION_155	CALL_1
0x4008dd0	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       975	cache.h	FUNCTION_155	CALL_1
0x4008dd8	      0xe800000000	                          call 0x4008ddd	       975	cache.h	FUNCTION_155	CALL_1
0x4008ddd	            0x85c0	                           test eax, eax	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_17
0x4008ddf	     0xf85bd040000	                           jne 0x40092a2	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_17
0x4008de5	        0x837b7800	               cmp dword [rbx + 0x78], 0	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_17
0x4008de9	     0xf8ec0040000	                           jle 0x40092af	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_17
0x4008def	      0xe87d75ffff	        call sym.rebase_path_stopped_sha	      3287	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_19
0x4008df4	          0x4889c7	                            mov rdi, rax	      3287	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_19
0x4008df7	      0xe800000000	                          call 0x4008dfc	      3287	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_19
0x4008dfc	            0x85c0	                           test eax, eax	      3286	sequencer.c	FUNCTION_89	IF_2	IF_7
0x4008dfe	     0xf84b8040000	                            je 0x40092bc	      3286	sequencer.c	FUNCTION_89	IF_2	IF_7
0x4008e04	        0x4c8b6370	            mov r12, qword [rbx + 0x70] 	      3288	sequencer.c	FUNCTION_89	IF_2	IF_7
0x4008e08	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	      3289	sequencer.c	FUNCTION_89	IF_2	IF_7
0x4008e0c	            0x89d0	                            mov eax, edx	      3289	sequencer.c	FUNCTION_89	IF_2	IF_7
0x4008e0e	        0x836b7801	               sub dword [rbx + 0x78], 1	      3291	sequencer.c	FUNCTION_89	IF_2	IF_7
0x4008e12	            0x85d2	                           test edx, edx	      3292	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x4008e14	            0x740d	                            je 0x4008e23	      3292	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x4008e16	          0x4863d2	                         movsxd rdx, edx	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x4008e19	    0x41807c14ff0a	          cmp byte [r12 + rdx - 1], 0xa 	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x4008e1f	            0x751e	                           jne 0x4008e3f	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x4008e21	            0xeb30	                           jmp 0x4008e53	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x4008e23	          0x4c89e1	                            mov rcx, r12	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x4008e26	      0xba00000000	                              mov edx, 0	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x4008e2b	      0xbedd0c0000	                          mov esi, 0xcdd	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x4008e30	      0xbf00000000	                              mov edi, 0	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x4008e35	      0xb800000000	                              mov eax, 0	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x4008e3a	      0xe800000000	                          call 0x4008e3f	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x4008e3f	          0x83e801	                              sub eax, 1	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x4008e42	     0xf842c040000	                            je 0x4009274	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x4008e48	          0x4863d0	                         movsxd rdx, eax	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x4008e4b	    0x41807c14ff0a	          cmp byte [r12 + rdx - 1], 0xa 	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x4008e51	            0x75ec	                           jne 0x4008e3f	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x4008e53	          0x4863e8	                         movsxd rbp, eax	      3296	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_20
0x4008e56	        0x488b4360	            mov rax, qword [rbx + 0x60] 	       162	strbuf.h	FUNCTION_177	IF_1
0x4008e5a	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_177	IF_1
0x4008e5d	            0x740b	                            je 0x4008e6a	       162	strbuf.h	FUNCTION_177	IF_1
0x4008e5f	            0xeb05	                           jmp 0x4008e66	       162	strbuf.h	FUNCTION_177	IF_1
0x4008e61	      0xbd00000000	                              mov ebp, 0	      3296	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_20
0x4008e66	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_177	IF_1
0x4008e6a	          0x4839e8	                            cmp rax, rbp	       162	strbuf.h	FUNCTION_177	IF_1
0x4008e6d	            0x730f	                           jae 0x4008e7e	       162	strbuf.h	FUNCTION_177	IF_1
0x4008e6f	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_177	CALL_1
0x4008e74	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_177	CALL_1
0x4008e79	      0xe800000000	                          call 0x4008e7e	       163	strbuf.h	FUNCTION_177	CALL_1
0x4008e7e	        0x48896b68	             mov qword [rbx + 0x68], rbp	       164	strbuf.h	FUNCTION_177
0x4008e82	    0x4981fc000000	                              cmp r12, 0	       165	strbuf.h	FUNCTION_177	IF_2
0x4008e89	            0x7407	                            je 0x4008e92	       165	strbuf.h	FUNCTION_177	IF_2
0x4008e8b	      0x41c6042c00	                 mov byte [r12 + rbp], 0	       166	strbuf.h	FUNCTION_177	IF_2
0x4008e90	            0xeb22	                           jmp 0x4008eb4	       166	strbuf.h	FUNCTION_177	IF_2
0x4008e92	    0x803d00000000	                cmp byte [0x04008e99], 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x4008e99	            0x7419	                            je 0x4008eb4	       168	strbuf.h	FUNCTION_177	CALL_2
0x4008e9b	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x4008ea0	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_177	CALL_2
0x4008ea5	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x4008eaa	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x4008eaf	      0xe800000000	                          call 0x4008eb4	       168	strbuf.h	FUNCTION_177	CALL_2
0x4008eb4	      0xe88472ffff	     call sym.rebase_path_current_fixups	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x4008eb9	      0xb900000000	                              mov ecx, 0	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x4008ebe	          0x4889c2	                            mov rdx, rax	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x4008ec1	          0x4889ee	                            mov rsi, rbp	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x4008ec4	          0x4c89e7	                            mov rdi, r12	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x4008ec7	      0xe8667dffff	                  call sym.write_message	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x4008ecc	            0x85c0	                           test eax, eax	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x4008ece	            0x7931	                           jns 0x4008f01	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x4008ed0	      0xe86872ffff	     call sym.rebase_path_current_fixups	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x4008ed5	          0x4889c3	                            mov rbx, rax	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x4008ed8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4008edd	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4008ee2	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4008ee7	      0xe800000000	                          call 0x4008eec	        54	gettext.h	FUNCTION_118
0x4008eec	          0x4889de	                            mov rsi, rbx	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x4008eef	          0x4889c7	                            mov rdi, rax	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x4008ef2	      0xb800000000	                              mov eax, 0	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x4008ef7	      0xe800000000	                          call 0x4008efc	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x4008efc	      0xe99a030000	                           jmp 0x400929b	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x4008f01	        0x837b7800	               cmp dword [rbx + 0x78], 0	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x4008f05	            0x7e50	                           jle 0x4008f57	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x4008f07	      0xbe00000000	                              mov esi, 0	      3314	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	CALL_26
0x4008f0c	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      3314	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	CALL_26
0x4008f11	      0xe8faa3ffff	                   call sym.peek_command	      3314	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	CALL_26
0x4008f16	          0x83e804	                              sub eax, 4	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x4008f19	          0x83f801	                              cmp eax, 1	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x4008f1c	            0x765f	                           jbe 0x4008f7d	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x4008f1e	      0xbe00000000	                              mov esi, 0	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x4008f23	          0x4c89e7	                            mov rdi, r12	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x4008f26	      0xe800000000	                          call 0x4008f2b	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x4008f2b	            0x85c0	                           test eax, eax	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x4008f2d	     0xf8596030000	                           jne 0x40092c9	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x4008f33	      0xbe00000000	                              mov esi, 0	      3323	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11
0x4008f38	          0x4c89e7	                            mov rdi, r12	      3323	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11
0x4008f3b	      0xe800000000	                          call 0x4008f40	      3323	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11
0x4008f40	    0x41bd01000000	                             mov r13d, 1	      3315	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x4008f46	        0x4883f801	                              cmp rax, 1	      3315	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x4008f4a	            0x19ed	                            sbb ebp, ebp	      3315	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x4008f4c	          0x83e506	                              and ebp, 6	      3315	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x4008f4f	          0x83c503	                              add ebp, 3	      3315	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x4008f52	      0xe97d030000	                           jmp 0x40092d4	      3315	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x4008f57	      0xbe00000000	                              mov esi, 0	      3325	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_29
0x4008f5c	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      3325	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_29
0x4008f61	      0xe8aaa3ffff	                   call sym.peek_command	      3325	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_29
0x4008f66	          0x83e804	                              sub eax, 4	      3325	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_29
0x4008f69	    0x41bd00000000	                             mov r13d, 0	      3255	sequencer.c	FUNCTION_89
0x4008f6f	      0xbd03000000	                              mov ebp, 3	      3254	sequencer.c	FUNCTION_89
0x4008f74	          0x83f801	                              cmp eax, 1	      3325	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_29
0x4008f77	     0xf8757030000	                            ja 0x40092d4	      3325	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_29
0x4008f7d	      0xe80b73ffff	         call sym.rebase_path_squash_msg	      3331	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_30
0x4008f82	          0x4889c5	                            mov rbp, rax	      3331	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_30
0x4008f85	      0x488d7c2408	                      lea rdi, [rsp + 8]	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x4008f8a	      0xe88f7bffff	                     call sym.parse_head	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x4008f8f	            0x85c0	                           test eax, eax	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x4008f91	            0x7546	                           jne 0x4008fd9	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x4008f93	      0xbe00000000	                              mov esi, 0	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x4008f98	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x4008f9d	      0xe800000000	                          call 0x4008fa2	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x4008fa2	          0x4989c4	                            mov r12, rax	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x4008fa5	          0x4885c0	                           test rax, rax	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x4008fa8	            0x742f	                            je 0x4008fd9	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x4008faa	      0xb800000000	                              mov eax, 0	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x4008faf	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x4008fb6	          0x4c89e7	                            mov rdi, r12	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x4008fb9	            0xf2ae	              repne scasb al, byte [rdi]	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x4008fbb	          0x4889c8	                            mov rax, rcx	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x4008fbe	          0x48f7d0	                                 not rax	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x4008fc1	        0x488d70ff	                      lea rsi, [rax - 1]	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x4008fc5	      0xb900000000	                              mov ecx, 0	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x4008fca	          0x4889ea	                            mov rdx, rbp	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x4008fcd	          0x4c89e7	                            mov rdi, r12	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x4008fd0	      0xe85d7cffff	                  call sym.write_message	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x4008fd5	            0x85c0	                           test eax, eax	      3334	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_32
0x4008fd7	            0x7436	                            je 0x400900f	      3334	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_32
0x4008fd9	          0x4c89e6	                            mov rsi, r12	      3336	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_35
0x4008fdc	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3336	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_35
0x4008fe1	      0xe800000000	                          call 0x4008fe6	      3336	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_35
0x4008fe6	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4008feb	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4008ff0	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4008ff5	      0xe800000000	                          call 0x4008ffa	        54	gettext.h	FUNCTION_118
0x4008ffa	          0x4889ee	                            mov rsi, rbp	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_36
0x4008ffd	          0x4889c7	                            mov rdi, rax	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_36
0x4009000	      0xb800000000	                              mov eax, 0	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_36
0x4009005	      0xe800000000	                          call 0x400900a	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_36
0x400900a	      0xe98c020000	                           jmp 0x400929b	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_36
0x400900f	          0x4c89e6	                            mov rsi, r12	      3340	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_37
0x4009012	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3340	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_37
0x4009017	      0xe800000000	                          call 0x400901c	      3340	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_37
0x400901c	    0x41bd00000000	                             mov r13d, 0	      3255	sequencer.c	FUNCTION_89
0x4009022	      0xbd03000000	                              mov ebp, 3	      3254	sequencer.c	FUNCTION_89
0x4009027	      0xe9a8020000	                           jmp 0x40092d4	      3254	sequencer.c	FUNCTION_89
0x400902c	          0x4889ef	                            mov rdi, rbp	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400902f	      0xe800000000	                          call 0x4009034	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x4009034	            0x85c0	                           test eax, eax	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x4009036	            0x7426	                            je 0x400905e	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x4009038	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400903d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4009042	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4009047	      0xe800000000	                          call 0x400904c	        54	gettext.h	FUNCTION_118
0x400904c	          0x4889c7	                            mov rdi, rax	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_42
0x400904f	      0xb800000000	                              mov eax, 0	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_42
0x4009054	      0xe800000000	                          call 0x4009059	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_42
0x4009059	      0xe93d020000	                           jmp 0x400929b	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_42
0x400905e	          0x4585ed	                         test r13d, r13d	      3353	sequencer.c	FUNCTION_89	IF_14	IF_16
0x4009061	     0xf8503030000	                           jne 0x400936a	      3353	sequencer.c	FUNCTION_89	IF_14	IF_16
0x4009067	      0xe9d0000000	                           jmp 0x400913c	      3353	sequencer.c	FUNCTION_89	IF_14	IF_16
0x400906c	      0xe83c71ffff	            call sym.rebase_path_message	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x4009071	            0x89ea	                            mov edx, ebp	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x4009073	          0x4889de	                            mov rsi, rbx	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x4009076	          0x4889c7	                            mov rdi, rax	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x4009079	      0xe8b886ffff	                 call sym.run_git_commit	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x400907e	            0x85c0	                           test eax, eax	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x4009080	     0xf84fe020000	                            je 0x4009384	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x4009086	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400908b	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4009090	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4009095	      0xe800000000	                          call 0x400909a	        54	gettext.h	FUNCTION_118
0x400909a	          0x4889c7	                            mov rdi, rax	      3359	sequencer.c	FUNCTION_89	CALL_45
0x400909d	      0xb800000000	                              mov eax, 0	      3359	sequencer.c	FUNCTION_89	CALL_45
0x40090a2	      0xe800000000	                          call 0x40090a7	      3359	sequencer.c	FUNCTION_89	CALL_45
0x40090a7	      0xe9ef010000	                           jmp 0x400929b	      3359	sequencer.c	FUNCTION_89	CALL_45
0x40090ac	        0x837b7800	               cmp dword [rbx + 0x78], 0	      3365	sequencer.c	FUNCTION_89	IF_19
0x40090b0	     0xf8e86000000	                           jle 0x400913c	      3365	sequencer.c	FUNCTION_89	IF_19
0x40090b6	      0xe88270ffff	     call sym.rebase_path_current_fixups	      3370	sequencer.c	FUNCTION_89	IF_19	CALL_53
0x40090bb	          0x4889c7	                            mov rdi, rax	      3370	sequencer.c	FUNCTION_89	IF_19	CALL_53
0x40090be	      0xe800000000	                          call 0x40090c3	      3370	sequencer.c	FUNCTION_89	IF_19	CALL_53
0x40090c3	    0x48c743680000	               mov qword [rbx + 0x68], 0	       164	strbuf.h	FUNCTION_177
0x40090cb	        0x488b4370	            mov rax, qword [rbx + 0x70] 	       165	strbuf.h	FUNCTION_177	IF_2
0x40090cf	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_177	IF_2
0x40090d5	            0x7405	                            je 0x40090dc	       165	strbuf.h	FUNCTION_177	IF_2
0x40090d7	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_177	IF_2
0x40090da	            0xeb22	                           jmp 0x40090fe	       166	strbuf.h	FUNCTION_177	IF_2
0x40090dc	    0x803d00000000	                cmp byte [0x040090e3], 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40090e3	            0x7419	                            je 0x40090fe	       168	strbuf.h	FUNCTION_177	CALL_2
0x40090e5	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40090ea	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_177	CALL_2
0x40090ef	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40090f4	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40090f9	      0xe800000000	                          call 0x40090fe	       168	strbuf.h	FUNCTION_177	CALL_2
0x40090fe	    0xc74378000000	               mov dword [rbx + 0x78], 0	      3372	sequencer.c	FUNCTION_89	IF_19
0x4009105	            0xeb35	                           jmp 0x400913c	      3372	sequencer.c	FUNCTION_89	IF_19
0x4009107	          0x4889df	                            mov rdi, rbx	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0x400910a	      0xe8ee71ffff	                  call sym.get_todo_path	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0x400910f	          0x4889c7	                            mov rdi, rax	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0x4009112	      0xe800000000	                          call 0x4009117	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0x4009117	            0x85c0	                           test eax, eax	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0x4009119	            0x750a	                           jne 0x4009125	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0x400911b	      0xe8a077ffff	           call sym.continue_single_pick	      3393	sequencer.c	FUNCTION_90	ELSE_1	IF_6
0x4009120	      0xe925010000	                           jmp 0x400924a	      3393	sequencer.c	FUNCTION_90	ELSE_1	IF_6
0x4009125	          0x4889de	                            mov rsi, rbx	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0x4009128	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0x400912d	      0xe8469effff	             call sym.read_populate_todo	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0x4009132	            0x89c5	                            mov ebp, eax	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0x4009134	            0x85c0	                           test eax, eax	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0x4009136	     0xf85fb000000	                           jne 0x4009237	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0x400913c	          0x833b02	                      cmp dword [rbx], 2	      3397	sequencer.c	FUNCTION_90	IF_8	CALL_10
0x400913f	            0x7462	                            je 0x40091a3	      3397	sequencer.c	FUNCTION_90	IF_8	CALL_10
0x4009141	      0xe800000000	                          call 0x4009146	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x4009146	          0x4889c7	                            mov rdi, rax	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x4009149	      0xe800000000	                          call 0x400914e	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x400914e	            0x85c0	                           test eax, eax	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x4009150	            0x7511	                           jne 0x4009163	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x4009152	      0xe800000000	                          call 0x4009157	      3400	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_14
0x4009157	          0x4889c7	                            mov rdi, rax	      3400	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_14
0x400915a	      0xe800000000	                          call 0x400915f	      3400	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_14
0x400915f	            0x85c0	                           test eax, eax	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x4009161	            0x740f	                            je 0x4009172	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x4009163	      0xe85877ffff	           call sym.continue_single_pick	      3401	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_15
0x4009168	            0x89c5	                            mov ebp, eax	      3401	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_15
0x400916a	            0x85c0	                           test eax, eax	      3402	sequencer.c	FUNCTION_90	IF_8	IF_9	IF_10
0x400916c	     0xf85c5000000	                           jne 0x4009237	      3402	sequencer.c	FUNCTION_90	IF_8	IF_9	IF_10
0x4009172	      0xba00000000	                              mov edx, 0	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0x4009177	      0xbe00000000	                              mov esi, 0	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0x400917c	      0xbf00000000	                              mov edi, 0	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0x4009181	      0xe800000000	                          call 0x4009186	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0x4009186	            0x85c0	                           test eax, eax	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0x4009188	            0x740f	                            je 0x4009199	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0x400918a	          0x4889df	                            mov rdi, rbx	      3406	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_17
0x400918d	      0xe85581ffff	              call sym.error_dirty_index	      3406	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_17
0x4009192	            0x89c5	                            mov ebp, eax	      3406	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_17
0x4009194	      0xe99e000000	                           jmp 0x4009237	      3407	sequencer.c	FUNCTION_90	IF_8	IF_11
0x4009199	      0x8344245801	               add dword [rsp + 0x58], 1	      3409	sequencer.c	FUNCTION_90	IF_8
0x400919e	      0xe985000000	                           jmp 0x4009228	      3409	sequencer.c	FUNCTION_90	IF_8
0x40091a3	      0xe8c971ffff	        call sym.rebase_path_stopped_sha	      3410	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_19
0x40091a8	          0x4889c7	                            mov rdi, rax	      3410	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_19
0x40091ab	      0xe800000000	                          call 0x40091b0	      3410	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_19
0x40091b0	            0x85c0	                           test eax, eax	      3410	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_19
0x40091b2	            0x7474	                            je 0x4009228	      3410	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_19
0x40091b4	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3411	sequencer.c	FUNCTION_90	ELSE_3	IF_12
0x40091bd	    0x48c744241800	               mov qword [rsp + 0x18], 0	      3411	sequencer.c	FUNCTION_90	ELSE_3	IF_12
0x40091c6	    0x48c744242000	               mov qword [rsp + 0x20], 0	      3411	sequencer.c	FUNCTION_90	ELSE_3	IF_12
0x40091cf	      0xe89d71ffff	        call sym.rebase_path_stopped_sha	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x40091d4	      0xba01000000	                              mov edx, 1	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x40091d9	          0x4889c6	                            mov rsi, rax	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x40091dc	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x40091e1	      0xe8c281ffff	                  call sym.read_oneliner	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x40091e6	            0x85c0	                           test eax, eax	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x40091e8	            0x7434	                            je 0x400921e	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x40091ea	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	      3415	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_22
0x40091f2	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      3415	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_22
0x40091f7	      0xe800000000	                          call 0x40091fc	      3415	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_22
0x40091fc	            0x85c0	                           test eax, eax	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x40091fe	            0x751e	                           jne 0x400921e	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x4009200	      0xbe00000000	                              mov esi, 0	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0x4009205	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0x400920a	      0xe801a1ffff	                   call sym.peek_command	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0x400920f	            0x89c6	                            mov esi, eax	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0x4009211	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0x4009219	      0xe89c97ffff	            call sym.record_in_rewritten	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0x400921e	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3417	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_25
0x4009223	      0xe800000000	                          call 0x4009228	      3417	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_25
0x4009228	          0x4889de	                            mov rsi, rbx	      3420	sequencer.c	FUNCTION_90	CALL_26
0x400922b	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      3420	sequencer.c	FUNCTION_90	CALL_26
0x4009230	      0xe8c3d7ffff	                   call sym.pick_commits	      3420	sequencer.c	FUNCTION_90	CALL_26
0x4009235	            0x89c5	                            mov ebp, eax	      3420	sequencer.c	FUNCTION_90	CALL_26
0x4009237	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      3422	sequencer.c	FUNCTION_90	CALL_27
0x400923c	      0xe84974ffff	              call sym.todo_list_release	      3422	sequencer.c	FUNCTION_90	CALL_27
0x4009241	            0x89e8	                            mov eax, ebp	      3423	sequencer.c	FUNCTION_90
0x4009243	            0xeb05	                           jmp 0x400924a	      3423	sequencer.c	FUNCTION_90
0x4009245	      0xb8ffffffff	                     mov eax, 0xffffffff	      3383	sequencer.c	FUNCTION_90	IF_1
0x400924a	    0x488b8c24c800	            mov rcx, qword [rsp + 0xc8] 	      3424	sequencer.c	FUNCTION_90
0x4009252	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3424	sequencer.c	FUNCTION_90
0x400925b	     0xf843a010000	                            je 0x400939b	      3424	sequencer.c	FUNCTION_90
0x4009261	      0xe930010000	                           jmp 0x4009396	      3424	sequencer.c	FUNCTION_90
0x4009266	          0x833b02	                      cmp dword [rbx], 2	      3387	sequencer.c	FUNCTION_90	IF_3	CALL_3
0x4009269	     0xf8598feffff	                           jne 0x4009107	      3387	sequencer.c	FUNCTION_90	IF_3	CALL_3
0x400926f	      0xe9adf9ffff	                           jmp 0x4008c21	      3387	sequencer.c	FUNCTION_90	IF_3	CALL_3
0x4009274	        0x488b4360	            mov rax, qword [rbx + 0x60] 	       162	strbuf.h	FUNCTION_177	IF_1
0x4009278	          0x4889c5	                            mov rbp, rax	      3296	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_20
0x400927b	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_177	IF_1
0x400927e	     0xf84fafbffff	                            je 0x4008e7e	       162	strbuf.h	FUNCTION_177	IF_1
0x4009284	      0xe9d8fbffff	                           jmp 0x4008e61	       162	strbuf.h	FUNCTION_177	IF_1
0x4009289	            0x85ed	                           test ebp, ebp	      3348	sequencer.c	FUNCTION_89	IF_14
0x400928b	     0xf8484000000	                            je 0x4009315	      3348	sequencer.c	FUNCTION_89	IF_14
0x4009291	      0xbd03000000	                              mov ebp, 3	      3254	sequencer.c	FUNCTION_89
0x4009296	      0xe9d1fdffff	                           jmp 0x400906c	      3254	sequencer.c	FUNCTION_89
0x400929b	      0xb8ffffffff	                     mov eax, 0xffffffff	      3391	sequencer.c	FUNCTION_90	IF_3	IF_5
0x40092a0	            0xeba8	                           jmp 0x400924a	      3391	sequencer.c	FUNCTION_90	IF_3	IF_5
0x40092a2	    0x41bd00000000	                             mov r13d, 0	      3255	sequencer.c	FUNCTION_89
0x40092a8	      0xbd03000000	                              mov ebp, 3	      3254	sequencer.c	FUNCTION_89
0x40092ad	            0xeb25	                           jmp 0x40092d4	      3254	sequencer.c	FUNCTION_89
0x40092af	    0x41bd00000000	                             mov r13d, 0	      3255	sequencer.c	FUNCTION_89
0x40092b5	      0xbd03000000	                              mov ebp, 3	      3254	sequencer.c	FUNCTION_89
0x40092ba	            0xeb18	                           jmp 0x40092d4	      3254	sequencer.c	FUNCTION_89
0x40092bc	    0x41bd00000000	                             mov r13d, 0	      3255	sequencer.c	FUNCTION_89
0x40092c2	      0xbd03000000	                              mov ebp, 3	      3254	sequencer.c	FUNCTION_89
0x40092c7	            0xeb0b	                           jmp 0x40092d4	      3254	sequencer.c	FUNCTION_89
0x40092c9	    0x41bd01000000	                             mov r13d, 1	      3315	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x40092cf	      0xbd03000000	                              mov ebp, 3	      3254	sequencer.c	FUNCTION_89
0x40092d4	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3344	sequencer.c	FUNCTION_89	IF_2	CALL_38
0x40092d9	      0xe800000000	                          call 0x40092de	      3344	sequencer.c	FUNCTION_89	IF_2	CALL_38
0x40092de	          0x83cd04	                               or ebp, 4	      3345	sequencer.c	FUNCTION_89	IF_2
0x40092e1	          0x4189ec	                           mov r12d, ebp	      3345	sequencer.c	FUNCTION_89	IF_2
0x40092e4	      0xe800000000	                          call 0x40092e9	      3349	sequencer.c	FUNCTION_89	IF_14	CALL_39
0x40092e9	          0x4889c5	                            mov rbp, rax	      3349	sequencer.c	FUNCTION_89	IF_14	CALL_39
0x40092ec	          0x4889c7	                            mov rdi, rax	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x40092ef	      0xe800000000	                          call 0x40092f4	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x40092f4	            0x85c0	                           test eax, eax	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x40092f6	     0xf8462fdffff	                            je 0x400905e	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x40092fc	      0xe92bfdffff	                           jmp 0x400902c	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x4009301	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3344	sequencer.c	FUNCTION_89	IF_2	CALL_38
0x4009306	      0xe800000000	                          call 0x400930b	      3344	sequencer.c	FUNCTION_89	IF_2	CALL_38
0x400930b	      0xbd07000000	                              mov ebp, 7	      3345	sequencer.c	FUNCTION_89	IF_2
0x4009310	      0xe957fdffff	                           jmp 0x400906c	      3345	sequencer.c	FUNCTION_89	IF_2
0x4009315	      0xe800000000	                          call 0x400931a	      3349	sequencer.c	FUNCTION_89	IF_14	CALL_39
0x400931a	          0x4889c5	                            mov rbp, rax	      3349	sequencer.c	FUNCTION_89	IF_14	CALL_39
0x400931d	          0x4889c7	                            mov rdi, rax	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x4009320	      0xe800000000	                          call 0x4009325	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x4009325	    0x41bc03000000	                             mov r12d, 3	      3254	sequencer.c	FUNCTION_89
0x400932b	    0x41bd00000000	                             mov r13d, 0	      3255	sequencer.c	FUNCTION_89
0x4009331	            0x85c0	                           test eax, eax	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x4009333	     0xf85f3fcffff	                           jne 0x400902c	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x4009339	      0xe9fefdffff	                           jmp 0x400913c	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400933e	      0xe8da6effff	              call sym.rebase_path_amend	      3360	sequencer.c	FUNCTION_89	CALL_47
0x4009343	          0x4889c7	                            mov rdi, rax	      3360	sequencer.c	FUNCTION_89	CALL_47
0x4009346	      0xe800000000	                          call 0x400934b	      3360	sequencer.c	FUNCTION_89	CALL_47
0x400934b	      0xe8056fffff	          call sym.rebase_path_fixup_msg	      3362	sequencer.c	FUNCTION_89	IF_18	CALL_49
0x4009350	          0x4889c7	                            mov rdi, rax	      3362	sequencer.c	FUNCTION_89	IF_18	CALL_49
0x4009353	      0xe800000000	                          call 0x4009358	      3362	sequencer.c	FUNCTION_89	IF_18	CALL_49
0x4009358	      0xe8306fffff	         call sym.rebase_path_squash_msg	      3363	sequencer.c	FUNCTION_89	IF_18	CALL_51
0x400935d	          0x4889c7	                            mov rdi, rax	      3363	sequencer.c	FUNCTION_89	IF_18	CALL_51
0x4009360	      0xe800000000	                          call 0x4009365	      3363	sequencer.c	FUNCTION_89	IF_18	CALL_51
0x4009365	      0xe942fdffff	                           jmp 0x40090ac	      3363	sequencer.c	FUNCTION_89	IF_18	CALL_51
0x400936a	          0x4489e2	                           mov edx, r12d	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x400936d	          0x4889de	                            mov rsi, rbx	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x4009370	      0xbf00000000	                              mov edi, 0	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x4009375	      0xe8bc83ffff	                 call sym.run_git_commit	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x400937a	            0x85c0	                           test eax, eax	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x400937c	     0xf8504fdffff	                           jne 0x4009086	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x4009382	            0xebba	                           jmp 0x400933e	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x4009384	      0xe8946effff	              call sym.rebase_path_amend	      3360	sequencer.c	FUNCTION_89	CALL_47
0x4009389	          0x4889c7	                            mov rdi, rax	      3360	sequencer.c	FUNCTION_89	CALL_47
0x400938c	      0xe800000000	                          call 0x4009391	      3360	sequencer.c	FUNCTION_89	CALL_47
0x4009391	      0xe916fdffff	                           jmp 0x40090ac	      3360	sequencer.c	FUNCTION_89	CALL_47
0x4009396	      0xe800000000	                          call 0x400939b	      3424	sequencer.c	FUNCTION_90
0x400939b	    0x4881c4d80000	                           add rsp, 0xd8	      3424	sequencer.c	FUNCTION_90
0x40093a2	              0x5b	                                 pop rbx	      3424	sequencer.c	FUNCTION_90
0x40093a3	              0x5d	                                 pop rbp	      3424	sequencer.c	FUNCTION_90
0x40093a4	            0x415c	                                 pop r12	      3424	sequencer.c	FUNCTION_90
0x40093a6	            0x415d	                                 pop r13	      3424	sequencer.c	FUNCTION_90
0x40093a8	              0xc3	                                     ret	      3424	sequencer.c	FUNCTION_90
populate_opts_cb	ELSE,11:IF,12:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,12:DO,0	215
0x4002688	            0x4154	                                push r12	      2043	sequencer.c	FUNCTION_62
0x400268a	              0x55	                                push rbp	      2043	sequencer.c	FUNCTION_62
0x400268b	              0x53	                                push rbx	      2043	sequencer.c	FUNCTION_62
0x400268c	        0x4883ec10	                           sub rsp, 0x10	      2043	sequencer.c	FUNCTION_62
0x4002690	          0x4889fb	                            mov rbx, rdi	      2043	sequencer.c	FUNCTION_62
0x4002693	          0x4889f5	                            mov rbp, rsi	      2043	sequencer.c	FUNCTION_62
0x4002696	    0x64488b042528	                mov rax, qword fs:[0x28]	      2043	sequencer.c	FUNCTION_62
0x400269f	      0x4889442408	                mov qword [rsp + 8], rax	      2043	sequencer.c	FUNCTION_62
0x40026a4	            0x31c0	                            xor eax, eax	      2043	sequencer.c	FUNCTION_62
0x40026a6	    0xc74424040100	                  mov dword [rsp + 4], 1	      2045	sequencer.c	FUNCTION_62
0x40026ae	          0x4885f6	                           test rsi, rsi	      2047	sequencer.c	FUNCTION_62	IF_1
0x40026b1	            0x750d	                           jne 0x40026c0	      2047	sequencer.c	FUNCTION_62	IF_1
0x40026b3	    0xc74424040000	                  mov dword [rsp + 4], 0	      2048	sequencer.c	FUNCTION_62	IF_1
0x40026bb	      0xe9a9020000	                           jmp 0x4002969	      2048	sequencer.c	FUNCTION_62	IF_1
0x40026c0	          0x4989d4	                            mov r12, rdx	      2048	sequencer.c	FUNCTION_62	IF_1
0x40026c3	      0xbf00000000	                              mov edi, 0	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x40026c8	      0xb912000000	                           mov ecx, 0x12	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x40026cd	          0x4889de	                            mov rsi, rbx	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x40026d0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x40026d2	           0xf97c2	                                 seta dl	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x40026d5	           0xf92c0	                                 setb al	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x40026d8	            0x38c2	                              cmp dl, al	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x40026da	            0x751a	                           jne 0x40026f6	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x40026dc	      0x488d542404	                      lea rdx, [rsp + 4]	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x40026e1	          0x4889ee	                            mov rsi, rbp	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x40026e4	          0x4889df	                            mov rdi, rbx	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x40026e7	      0xe800000000	                          call 0x40026ec	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x40026ec	      0x418944240c	              mov dword [r12 + 0xc], eax	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x40026f1	      0xe96c020000	                           jmp 0x4002962	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x40026f6	      0xbf00000000	                              mov edi, 0	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x40026fb	      0xb90d000000	                            mov ecx, 0xd	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4002700	          0x4889de	                            mov rsi, rbx	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4002703	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4002705	           0xf97c2	                                 seta dl	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4002708	           0xf92c0	                                 setb al	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x400270b	            0x38c2	                              cmp dl, al	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x400270d	            0x751a	                           jne 0x4002729	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x400270f	      0x488d542404	                      lea rdx, [rsp + 4]	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4002714	          0x4889ee	                            mov rsi, rbp	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4002717	          0x4889df	                            mov rdi, rbx	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x400271a	      0xe800000000	                          call 0x400271f	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x400271f	      0x4189442404	                mov dword [r12 + 4], eax	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4002724	      0xe939020000	                           jmp 0x4002962	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4002729	      0xbf00000000	                              mov edi, 0	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x400272e	      0xb910000000	                           mov ecx, 0x10	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4002733	          0x4889de	                            mov rsi, rbx	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4002736	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4002738	           0xf97c2	                                 seta dl	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x400273b	           0xf92c0	                                 setb al	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x400273e	            0x38c2	                              cmp dl, al	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4002740	            0x751a	                           jne 0x400275c	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4002742	      0x488d542404	                      lea rdx, [rsp + 4]	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4002747	          0x4889ee	                            mov rsi, rbp	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x400274a	          0x4889df	                            mov rdi, rbx	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x400274d	      0xe800000000	                          call 0x4002752	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4002752	      0x4189442410	             mov dword [r12 + 0x10], eax	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4002757	      0xe906020000	                           jmp 0x4002962	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x400275c	      0xbf00000000	                              mov edi, 0	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4002761	      0xb916000000	                           mov ecx, 0x16	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4002766	          0x4889de	                            mov rsi, rbx	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4002769	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x400276b	           0xf97c2	                                 seta dl	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x400276e	           0xf92c0	                                 setb al	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4002771	            0x38c2	                              cmp dl, al	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4002773	            0x751a	                           jne 0x400278f	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4002775	      0x488d542404	                      lea rdx, [rsp + 4]	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x400277a	          0x4889ee	                            mov rsi, rbp	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x400277d	          0x4889df	                            mov rdi, rbx	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4002780	      0xe800000000	                          call 0x4002785	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4002785	      0x4189442408	                mov dword [r12 + 8], eax	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x400278a	      0xe9d3010000	                           jmp 0x4002962	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x400278f	      0xbf00000000	                              mov edi, 0	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x4002794	      0xb911000000	                           mov ecx, 0x11	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x4002799	          0x4889de	                            mov rsi, rbx	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x400279c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x400279e	           0xf97c2	                                 seta dl	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x40027a1	           0xf92c0	                                 setb al	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x40027a4	            0x38c2	                              cmp dl, al	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x40027a6	            0x751a	                           jne 0x40027c2	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x40027a8	      0x488d542404	                      lea rdx, [rsp + 4]	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x40027ad	          0x4889ee	                            mov rsi, rbp	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x40027b0	          0x4889df	                            mov rdi, rbx	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x40027b3	      0xe800000000	                          call 0x40027b8	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x40027b8	      0x4189442414	             mov dword [r12 + 0x14], eax	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x40027bd	      0xe9a0010000	                           jmp 0x4002962	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x40027c2	      0xbf00000000	                              mov edi, 0	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x40027c7	      0xb911000000	                           mov ecx, 0x11	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x40027cc	          0x4889de	                            mov rsi, rbx	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x40027cf	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x40027d1	           0xf97c2	                                 seta dl	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x40027d4	           0xf92c0	                                 setb al	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x40027d7	            0x38c2	                              cmp dl, al	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x40027d9	            0x7515	                           jne 0x40027f0	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x40027db	          0x4889ee	                            mov rsi, rbp	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x40027de	          0x4889df	                            mov rdi, rbx	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x40027e1	      0xe800000000	                          call 0x40027e6	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x40027e6	      0x418944242c	             mov dword [r12 + 0x2c], eax	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x40027eb	      0xe972010000	                           jmp 0x4002962	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x40027f0	      0xbf00000000	                              mov edi, 0	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x40027f5	      0xb911000000	                           mov ecx, 0x11	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x40027fa	          0x4889de	                            mov rsi, rbx	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x40027fd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x40027ff	           0xf97c2	                                 seta dl	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x4002802	           0xf92c0	                                 setb al	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x4002805	            0x38c2	                              cmp dl, al	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x4002807	            0x751c	                           jne 0x4002825	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x4002809	      0x498b7c2440	            mov rdi, qword [r12 + 0x40] 	      2037	sequencer.c	FUNCTION_61	CALL_2
0x400280e	      0xe800000000	                          call 0x4002813	      2037	sequencer.c	FUNCTION_61	CALL_2
0x4002813	          0x4889ef	                            mov rdi, rbp	      2038	sequencer.c	FUNCTION_61	CALL_3
0x4002816	      0xe800000000	                          call 0x400281b	      2038	sequencer.c	FUNCTION_61	CALL_3
0x400281b	      0x4989442440	             mov qword [r12 + 0x40], rax	      2038	sequencer.c	FUNCTION_61	CALL_3
0x4002820	      0xe93d010000	                           jmp 0x4002962	      2038	sequencer.c	FUNCTION_61	CALL_3
0x4002825	      0xbf00000000	                              mov edi, 0	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x400282a	      0xb911000000	                           mov ecx, 0x11	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x400282f	          0x4889de	                            mov rsi, rbx	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x4002832	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x4002834	           0xf97c2	                                 seta dl	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x4002837	           0xf92c0	                                 setb al	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x400283a	            0x38c2	                              cmp dl, al	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x400283c	            0x751c	                           jne 0x400285a	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x400283e	      0x498b7c2430	            mov rdi, qword [r12 + 0x30] 	      2037	sequencer.c	FUNCTION_61	CALL_2
0x4002843	      0xe800000000	                          call 0x4002848	      2037	sequencer.c	FUNCTION_61	CALL_2
0x4002848	          0x4889ef	                            mov rdi, rbp	      2038	sequencer.c	FUNCTION_61	CALL_3
0x400284b	      0xe800000000	                          call 0x4002850	      2038	sequencer.c	FUNCTION_61	CALL_3
0x4002850	      0x4989442430	             mov qword [r12 + 0x30], rax	      2038	sequencer.c	FUNCTION_61	CALL_3
0x4002855	      0xe908010000	                           jmp 0x4002962	      2038	sequencer.c	FUNCTION_61	CALL_3
0x400285a	      0xbf00000000	                              mov edi, 0	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x400285f	      0xb918000000	                           mov ecx, 0x18	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4002864	          0x4889de	                            mov rsi, rbx	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4002867	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4002869	           0xf97c2	                                 seta dl	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x400286c	           0xf92c0	                                 setb al	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x400286f	            0x38c2	                              cmp dl, al	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4002871	     0xf8586000000	                           jne 0x40028fd	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4002877	      0x498b442450	            mov rax, qword [r12 + 0x50] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x400287c	        0x4883c001	                              add rax, 1	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4002880	      0x498b542458	            mov rdx, qword [r12 + 0x58] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4002885	          0x4839d0	                            cmp rax, rdx	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4002888	            0x764e	                           jbe 0x40028d8	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x400288a	      0x488d545230	          lea rdx, [rdx + rdx*2 + 0x30] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x400288f	          0x48d1ea	                              shr rdx, 1	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4002892	          0x4839d0	                            cmp rax, rdx	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4002895	        0x480f47d0	                          cmova rdx, rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4002899	      0x4989542458	             mov qword [r12 + 0x58], rdx	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x400289e	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_134	IF_1
0x40028a8	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_134	IF_1
0x40028ab	            0x7614	                           jbe 0x40028c1	       795	git-compat-util.h	FUNCTION_134	IF_1
0x40028ad	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x40028b2	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x40028b7	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x40028bc	      0xe800000000	                          call 0x40028c1	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x40028c1	    0x488d34d50000	                        lea rsi, [rdx*8]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x40028c9	      0x498b7c2448	            mov rdi, qword [r12 + 0x48] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x40028ce	      0xe800000000	                          call 0x40028d3	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x40028d3	      0x4989442448	             mov qword [r12 + 0x48], rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x40028d8	      0x498b542448	            mov rdx, qword [r12 + 0x48] 	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_9
0x40028dd	      0x498b442450	            mov rax, qword [r12 + 0x50] 	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_9
0x40028e2	        0x488d4801	                      lea rcx, [rax + 1]	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_9
0x40028e6	      0x49894c2450	             mov qword [r12 + 0x50], rcx	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_9
0x40028eb	        0x4c8d24c2	                  lea r12, [rdx + rax*8]	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_9
0x40028ef	          0x4889ef	                            mov rdi, rbp	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_9
0x40028f2	      0xe800000000	                          call 0x40028f7	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_9
0x40028f7	        0x49890424	                    mov qword [r12], rax	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_9
0x40028fb	            0xeb65	                           jmp 0x4002962	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_9
0x40028fd	      0xbf00000000	                              mov edi, 0	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4002902	      0xb91a000000	                           mov ecx, 0x1a	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4002907	          0x4889de	                            mov rsi, rbx	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x400290a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x400290c	           0xf97c2	                                 seta dl	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x400290f	           0xf92c0	                                 setb al	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4002912	            0x38c2	                              cmp dl, al	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4002914	            0x7521	                           jne 0x4002937	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4002916	      0x488d542404	                      lea rdx, [rsp + 4]	      2070	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_10
0x400291b	          0x4889ee	                            mov rsi, rbp	      2070	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_10
0x400291e	          0x4889df	                            mov rdi, rbx	      2070	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_10
0x4002921	      0xe800000000	                          call 0x4002926	      2070	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_10
0x4002926	          0x83f801	                              cmp eax, 1	      2071	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4002929	            0x19c0	                            sbb eax, eax	      2071	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x400292b	            0xf7d0	                                 not eax	      2071	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x400292d	          0x83c002	                              add eax, 2	      2071	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4002930	      0x4189442418	             mov dword [r12 + 0x18], eax	      2069	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4002935	            0xeb2b	                           jmp 0x4002962	      2069	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4002937	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400293c	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4002941	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4002946	      0xe800000000	                          call 0x400294b	        54	gettext.h	FUNCTION_118
0x400294b	          0x4889de	                            mov rsi, rbx	      2073	sequencer.c	FUNCTION_62	CALL_11
0x400294e	          0x4889c7	                            mov rdi, rax	      2073	sequencer.c	FUNCTION_62	CALL_11
0x4002951	      0xb800000000	                              mov eax, 0	      2073	sequencer.c	FUNCTION_62	CALL_11
0x4002956	      0xe800000000	                          call 0x400295b	      2073	sequencer.c	FUNCTION_62	CALL_11
0x400295b	      0xb8ffffffff	                     mov eax, 0xffffffff	      2073	sequencer.c	FUNCTION_62	CALL_11
0x4002960	            0xeb3a	                           jmp 0x400299c	      2073	sequencer.c	FUNCTION_62	CALL_11
0x4002962	      0x837c240400	                  cmp dword [rsp + 4], 0	      2075	sequencer.c	FUNCTION_62	IF_12
0x4002967	            0x752e	                           jne 0x4002997	      2075	sequencer.c	FUNCTION_62	IF_12
0x4002969	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400296e	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4002973	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4002978	      0xe800000000	                          call 0x400297d	        54	gettext.h	FUNCTION_118
0x400297d	          0x4889ea	                            mov rdx, rbp	      2076	sequencer.c	FUNCTION_62	CALL_12
0x4002980	          0x4889de	                            mov rsi, rbx	      2076	sequencer.c	FUNCTION_62	CALL_12
0x4002983	          0x4889c7	                            mov rdi, rax	      2076	sequencer.c	FUNCTION_62	CALL_12
0x4002986	      0xb800000000	                              mov eax, 0	      2076	sequencer.c	FUNCTION_62	CALL_12
0x400298b	      0xe800000000	                          call 0x4002990	      2076	sequencer.c	FUNCTION_62	CALL_12
0x4002990	      0xb8ffffffff	                     mov eax, 0xffffffff	      2076	sequencer.c	FUNCTION_62	CALL_12
0x4002995	            0xeb05	                           jmp 0x400299c	      2076	sequencer.c	FUNCTION_62	CALL_12
0x4002997	      0xb800000000	                              mov eax, 0	      2078	sequencer.c	FUNCTION_62
0x400299c	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      2079	sequencer.c	FUNCTION_62
0x40029a1	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2079	sequencer.c	FUNCTION_62
0x40029aa	            0x7405	                            je 0x40029b1	      2079	sequencer.c	FUNCTION_62
0x40029ac	      0xe800000000	                          call 0x40029b1	      2079	sequencer.c	FUNCTION_62
0x40029b1	        0x4883c410	                           add rsp, 0x10	      2079	sequencer.c	FUNCTION_62
0x40029b5	              0x5b	                                 pop rbx	      2079	sequencer.c	FUNCTION_62
0x40029b6	              0x5d	                                 pop rbp	      2079	sequencer.c	FUNCTION_62
0x40029b7	            0x415c	                                 pop r12	      2079	sequencer.c	FUNCTION_62
0x40029b9	              0xc3	                                     ret	      2079	sequencer.c	FUNCTION_62
sequencer_pick_revisions	ELSE,1:IF,11:FOR,1:WHILE,0:SWITCH,0:functions,0:CALL,24:DO,0	479
0x40093a9	            0x4157	                                push r15	      3434	sequencer.c	FUNCTION_92
0x40093ab	            0x4156	                                push r14	      3434	sequencer.c	FUNCTION_92
0x40093ad	            0x4155	                                push r13	      3434	sequencer.c	FUNCTION_92
0x40093af	            0x4154	                                push r12	      3434	sequencer.c	FUNCTION_92
0x40093b1	              0x55	                                push rbp	      3434	sequencer.c	FUNCTION_92
0x40093b2	              0x53	                                push rbx	      3434	sequencer.c	FUNCTION_92
0x40093b3	    0x4881ecc80000	                           sub rsp, 0xc8	      3434	sequencer.c	FUNCTION_92
0x40093ba	          0x4889fb	                            mov rbx, rdi	      3434	sequencer.c	FUNCTION_92
0x40093bd	    0x64488b042528	                mov rax, qword fs:[0x28]	      3434	sequencer.c	FUNCTION_92
0x40093c6	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      3434	sequencer.c	FUNCTION_92
0x40093ce	            0x31c0	                            xor eax, eax	      3434	sequencer.c	FUNCTION_92
0x40093d0	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      3435	sequencer.c	FUNCTION_92
0x40093d5	      0xb90b000000	                            mov ecx, 0xb	      3435	sequencer.c	FUNCTION_92
0x40093da	          0xf348ab	              rep stosq qword [rdi], rax	      3435	sequencer.c	FUNCTION_92
0x40093dd	    0x48c744245000	               mov qword [rsp + 0x50], 0	      3435	sequencer.c	FUNCTION_92
0x40093e6	    0x4883bb800000	               cmp qword [rbx + 0x80], 0	      3439	sequencer.c	FUNCTION_92	CALL_1
0x40093ee	            0x7519	                           jne 0x4009409	      3439	sequencer.c	FUNCTION_92	CALL_1
0x40093f0	      0xb900000000	                              mov ecx, 0	      3439	sequencer.c	FUNCTION_92	CALL_1
0x40093f5	      0xba6f0d0000	                          mov edx, 0xd6f	      3439	sequencer.c	FUNCTION_92	CALL_1
0x40093fa	      0xbe00000000	                              mov esi, 0	      3439	sequencer.c	FUNCTION_92	CALL_1
0x40093ff	      0xbf00000000	                              mov edi, 0	      3439	sequencer.c	FUNCTION_92	CALL_1
0x4009404	      0xe800000000	                          call 0x4009409	      3439	sequencer.c	FUNCTION_92	CALL_1
0x4009409	          0x4889df	                            mov rdi, rbx	      3440	sequencer.c	FUNCTION_92	IF_1	CALL_2
0x400940c	      0xe84575ffff	         call sym.read_and_refresh_cache	      3440	sequencer.c	FUNCTION_92	IF_1	CALL_2
0x4009411	            0x85c0	                           test eax, eax	      3440	sequencer.c	FUNCTION_92	IF_1	CALL_2
0x4009413	     0xf85bf060000	                           jne 0x4009ad8	      3440	sequencer.c	FUNCTION_92	IF_1	CALL_2
0x4009419	    0x488bbb800000	            mov rdi, qword [rbx + 0x80] 	      3443	sequencer.c	FUNCTION_92	FOR_1
0x4009420	        0x837f0800	                  cmp dword [rdi + 8], 0	      3443	sequencer.c	FUNCTION_92	FOR_1
0x4009424	     0xf84d7000000	                            je 0x4009501	      3443	sequencer.c	FUNCTION_92	FOR_1
0x400942a	      0xbd00000000	                              mov ebp, 0	      3443	sequencer.c	FUNCTION_92	FOR_1
0x400942f	          0x4863c5	                         movsxd rax, ebp	      3445	sequencer.c	FUNCTION_92	FOR_1
0x4009432	        0x48c1e005	                              shl rax, 5	      3445	sequencer.c	FUNCTION_92	FOR_1
0x4009436	        0x48034710	             add rax, qword [rdi + 0x10]	      3445	sequencer.c	FUNCTION_92	FOR_1
0x400943a	        0x4c8b6008	                mov r12, qword [rax + 8]	      3445	sequencer.c	FUNCTION_92	FOR_1
0x400943e	      0x41803c2400	                       cmp byte [r12], 0	      3448	sequencer.c	FUNCTION_92	FOR_1	IF_2	CALL_3
0x4009443	     0xf84a5000000	                            je 0x40094ee	      3448	sequencer.c	FUNCTION_92	FOR_1	IF_2	CALL_3
0x4009449	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0x4009451	          0x4c89e7	                            mov rdi, r12	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0x4009454	      0xe800000000	                          call 0x4009459	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0x4009459	            0x85c0	                           test eax, eax	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0x400945b	            0x7563	                           jne 0x40094c0	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0x400945d	      0xbe01000000	                              mov esi, 1	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0x4009462	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0x400946a	      0xe800000000	                          call 0x400946f	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0x400946f	          0x4885c0	                           test rax, rax	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0x4009472	            0x757a	                           jne 0x40094ee	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0x4009474	      0xba00000000	                              mov edx, 0	      3453	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_6
0x4009479	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      3453	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_6
0x4009481	    0x488b3d000000	            mov rdi, qword [0x04009488] 	      3453	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_6
0x4009488	      0xe800000000	                          call 0x400948d	      3453	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_6
0x400948d	            0x89c7	                            mov edi, eax	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400948f	      0xe800000000	                          call 0x4009494	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x4009494	          0x4889c3	                            mov rbx, rax	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x4009497	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400949c	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40094a1	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40094a6	      0xe800000000	                          call 0x40094ab	        54	gettext.h	FUNCTION_118
0x40094ab	          0x4889da	                            mov rdx, rbx	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x40094ae	          0x4c89e6	                            mov rsi, r12	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x40094b1	          0x4889c7	                            mov rdi, rax	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x40094b4	      0xb800000000	                              mov eax, 0	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x40094b9	      0xe800000000	                          call 0x40094be	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x40094be	            0xeb24	                           jmp 0x40094e4	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x40094c0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40094c5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40094ca	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40094cf	      0xe800000000	                          call 0x40094d4	        54	gettext.h	FUNCTION_118
0x40094d4	          0x4c89e6	                            mov rsi, r12	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_9
0x40094d7	          0x4889c7	                            mov rdi, rax	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_9
0x40094da	      0xb800000000	                              mov eax, 0	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_9
0x40094df	      0xe800000000	                          call 0x40094e4	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_9
0x40094e4	      0xb8ffffffff	                     mov eax, 0xffffffff	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x40094e9	      0xe9ef050000	                           jmp 0x4009add	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x40094ee	          0x83c501	                              add ebp, 1	      3443	sequencer.c	FUNCTION_92	FOR_1
0x40094f1	    0x488bbb800000	            mov rdi, qword [rbx + 0x80] 	      3443	sequencer.c	FUNCTION_92	FOR_1
0x40094f8	          0x396f08	                cmp dword [rdi + 8], ebp	      3443	sequencer.c	FUNCTION_92	FOR_1
0x40094fb	     0xf872effffff	                            ja 0x400942f	      3443	sequencer.c	FUNCTION_92	FOR_1
0x4009501	        0x837f2801	               cmp dword [rdi + 0x28], 1	      3470	sequencer.c	FUNCTION_92	IF_5
0x4009505	     0xf85ce000000	                           jne 0x40095d9	      3470	sequencer.c	FUNCTION_92	IF_5
0x400950b	        0x488b4730	            mov rax, qword [rdi + 0x30] 	      3471	sequencer.c	FUNCTION_92	IF_5
0x400950f	        0x83781005	               cmp dword [rax + 0x10], 5	      3470	sequencer.c	FUNCTION_92	IF_5
0x4009513	     0xf85c0000000	                           jne 0x40095d9	      3470	sequencer.c	FUNCTION_92	IF_5
0x4009519	        0xf6477430	           test byte [rdi + 0x74], 0x30 	      3471	sequencer.c	FUNCTION_92	IF_5
0x400951d	     0xf84fc050000	                            je 0x4009b1f	      3471	sequencer.c	FUNCTION_92	IF_5
0x4009523	        0x83781400	               cmp dword [rax + 0x14], 0	      3472	sequencer.c	FUNCTION_92	IF_5
0x4009527	     0xf85cc050000	                           jne 0x4009af9	      3472	sequencer.c	FUNCTION_92	IF_5
0x400952d	      0xe800000000	                          call 0x4009532	      3475	sequencer.c	FUNCTION_92	IF_5	IF_6	CALL_10
0x4009532	            0x85c0	                           test eax, eax	      3475	sequencer.c	FUNCTION_92	IF_5	IF_6	CALL_10
0x4009534	            0x742b	                            je 0x4009561	      3475	sequencer.c	FUNCTION_92	IF_5	IF_6	CALL_10
0x4009536	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400953b	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4009540	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4009545	      0xe800000000	                          call 0x400954a	        54	gettext.h	FUNCTION_118
0x400954a	          0x4889c7	                            mov rdi, rax	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_11
0x400954d	      0xb800000000	                              mov eax, 0	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_11
0x4009552	      0xe800000000	                          call 0x4009557	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_11
0x4009557	      0xb8ffffffff	                     mov eax, 0xffffffff	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_11
0x400955c	      0xe97c050000	                           jmp 0x4009add	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_11
0x4009561	    0x488bbb800000	            mov rdi, qword [rbx + 0x80] 	      3477	sequencer.c	FUNCTION_92	IF_5	CALL_12
0x4009568	      0xe800000000	                          call 0x400956d	      3477	sequencer.c	FUNCTION_92	IF_5	CALL_12
0x400956d	          0x4889c5	                            mov rbp, rax	      3477	sequencer.c	FUNCTION_92	IF_5	CALL_12
0x4009570	          0x4885c0	                           test rax, rax	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x4009573	            0x7411	                            je 0x4009586	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x4009575	    0x488bbb800000	            mov rdi, qword [rbx + 0x80] 	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x400957c	      0xe800000000	                          call 0x4009581	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x4009581	          0x4885c0	                           test rax, rax	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x4009584	            0x7419	                            je 0x400959f	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x4009586	      0xbf00000000	                              mov edi, 0	      3479	sequencer.c	FUNCTION_92	IF_5	IF_7
0x400958b	      0xb800000000	                              mov eax, 0	      3479	sequencer.c	FUNCTION_92	IF_5	IF_7
0x4009590	      0xe800000000	                          call 0x4009595	      3479	sequencer.c	FUNCTION_92	IF_5	IF_7
0x4009595	      0xb8ffffffff	                     mov eax, 0xffffffff	      3479	sequencer.c	FUNCTION_92	IF_5	IF_7
0x400959a	      0xe93e050000	                           jmp 0x4009add	      3479	sequencer.c	FUNCTION_92	IF_5	IF_7
0x400959f	          0x4889df	                            mov rdi, rbx	      3428	sequencer.c	FUNCTION_91	CALL_1
0x40095a2	      0xe80d71ffff	                    call sym.action_name	      3428	sequencer.c	FUNCTION_91	CALL_1
0x40095a7	      0xba00000000	                              mov edx, 0	      3428	sequencer.c	FUNCTION_91	CALL_1
0x40095ac	          0x4889c6	                            mov rsi, rax	      3428	sequencer.c	FUNCTION_91	CALL_1
0x40095af	      0xbf00000000	                              mov edi, 0	      3428	sequencer.c	FUNCTION_91	CALL_1
0x40095b4	      0xe800000000	                          call 0x40095b9	      3428	sequencer.c	FUNCTION_91	CALL_1
0x40095b9	          0x833b01	                      cmp dword [rbx], 1	      3429	sequencer.c	FUNCTION_91	CALL_2
0x40095bc	        0x400f95c7	                               setne dil	      3429	sequencer.c	FUNCTION_91	CALL_2
0x40095c0	        0x400fb6ff	                          movzx edi, dil	      3429	sequencer.c	FUNCTION_91	CALL_2
0x40095c4	      0xb900000000	                              mov ecx, 0	      3429	sequencer.c	FUNCTION_91	CALL_2
0x40095c9	          0x4889da	                            mov rdx, rbx	      3429	sequencer.c	FUNCTION_91	CALL_2
0x40095cc	          0x4889ee	                            mov rsi, rbp	      3429	sequencer.c	FUNCTION_91	CALL_2
0x40095cf	      0xe80cb9ffff	                 call sym.do_pick_commit	      3429	sequencer.c	FUNCTION_91	CALL_2
0x40095d4	      0xe904050000	                           jmp 0x4009add	      3480	sequencer.c	FUNCTION_92	IF_5	CALL_14
0x40095d9	            0x8b13	                    mov edx, dword [rbx]	      2165	sequencer.c	FUNCTION_65
0x40095db	          0x83fa01	                              cmp edx, 1	      2165	sequencer.c	FUNCTION_65
0x40095de	        0x410f95c7	                              setne r15b	      2165	sequencer.c	FUNCTION_65
0x40095e2	        0x450fb6ff	                        movzx r15d, r15b	      2165	sequencer.c	FUNCTION_65
0x40095e6	          0x4489f8	                           mov eax, r15d	      2167	sequencer.c	FUNCTION_65
0x40095e9	        0x48c1e004	                              shl rax, 4	      2167	sequencer.c	FUNCTION_65
0x40095ed	    0x480500000000	                              add rax, 0	      2167	sequencer.c	FUNCTION_65
0x40095f3	        0x488b4008	                mov rax, qword [rax + 8]	      2167	sequencer.c	FUNCTION_65
0x40095f7	      0x4889442408	                mov qword [rsp + 8], rax	      2167	sequencer.c	FUNCTION_65
0x40095fc	          0x83fa01	                              cmp edx, 1	      1735	sequencer.c	FUNCTION_49	IF_1
0x40095ff	            0x7520	                           jne 0x4009621	      1735	sequencer.c	FUNCTION_49	IF_1
0x4009601	        0xf6477430	           test byte [rdi + 0x74], 0x30 	      1735	sequencer.c	FUNCTION_49	IF_1
0x4009605	            0x751a	                           jne 0x4009621	      1735	sequencer.c	FUNCTION_49	IF_1
0x4009607	         0xfb64777	           movzx eax, byte [rdi + 0x77] 	      1736	sequencer.c	FUNCTION_49	IF_1
0x400960b	            0x89c2	                            mov edx, eax	      1736	sequencer.c	FUNCTION_49	IF_1
0x400960d	          0xc0ea06	                               shr dl, 6	      1736	sequencer.c	FUNCTION_49	IF_1
0x4009610	          0x83e201	                              and edx, 1	      1736	sequencer.c	FUNCTION_49	IF_1
0x4009613	          0x83f201	                              xor edx, 1	      1736	sequencer.c	FUNCTION_49	IF_1
0x4009616	          0xc1e206	                              shl edx, 6	      1736	sequencer.c	FUNCTION_49	IF_1
0x4009619	          0x83e0bf	                     and eax, 0xffffffbf	      1736	sequencer.c	FUNCTION_49	IF_1
0x400961c	             0x9d0	                             or eax, edx	      1736	sequencer.c	FUNCTION_49	IF_1
0x400961e	          0x884777	               mov byte [rdi + 0x77], al	      1736	sequencer.c	FUNCTION_49	IF_1
0x4009621	    0x488bbb800000	            mov rdi, qword [rbx + 0x80] 	      1738	sequencer.c	FUNCTION_49	IF_2	CALL_1
0x4009628	      0xe800000000	                          call 0x400962d	      1738	sequencer.c	FUNCTION_49	IF_2	CALL_1
0x400962d	            0x85c0	                           test eax, eax	      1738	sequencer.c	FUNCTION_49	IF_2	CALL_1
0x400962f	            0x7426	                            je 0x4009657	      1738	sequencer.c	FUNCTION_49	IF_2	CALL_1
0x4009631	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4009636	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400963b	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4009640	      0xe800000000	                          call 0x4009645	        54	gettext.h	FUNCTION_118
0x4009645	          0x4889c7	                            mov rdi, rax	      1739	sequencer.c	FUNCTION_49	CALL_2
0x4009648	      0xb800000000	                              mov eax, 0	      1739	sequencer.c	FUNCTION_49	CALL_2
0x400964d	      0xe800000000	                          call 0x4009652	      1739	sequencer.c	FUNCTION_49	CALL_2
0x4009652	      0xe9f9040000	                           jmp 0x4009b50	      1739	sequencer.c	FUNCTION_49	CALL_2
0x4009657	    0x488b83800000	            mov rax, qword [rbx + 0x80] 	      1741	sequencer.c	FUNCTION_49	IF_3
0x400965e	        0x48833800	                      cmp qword [rax], 0	      1741	sequencer.c	FUNCTION_49	IF_3
0x4009662	     0xf85ae000000	                           jne 0x4009716	      1741	sequencer.c	FUNCTION_49	IF_3
0x4009668	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400966d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4009672	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4009677	      0xe800000000	                          call 0x400967c	        54	gettext.h	FUNCTION_118
0x400967c	          0x4889c7	                            mov rdi, rax	      1742	sequencer.c	FUNCTION_49	CALL_3
0x400967f	      0xb800000000	                              mov eax, 0	      1742	sequencer.c	FUNCTION_49	CALL_3
0x4009684	      0xe800000000	                          call 0x4009689	      1742	sequencer.c	FUNCTION_49	CALL_3
0x4009689	      0xe9c2040000	                           jmp 0x4009b50	      1742	sequencer.c	FUNCTION_49	CALL_3
0x400968e	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      2174	sequencer.c	FUNCTION_65	WHILE_1	CALL_3
0x4009693	      0xe80874ffff	                call sym.append_new_todo	      2174	sequencer.c	FUNCTION_65	WHILE_1	CALL_3
0x4009698	          0x4989c5	                            mov r13, rax	      2174	sequencer.c	FUNCTION_65	WHILE_1	CALL_3
0x400969b	      0xbe00000000	                              mov esi, 0	      2175	sequencer.c	FUNCTION_65	WHILE_1	CALL_4
0x40096a0	          0x4889ef	                            mov rdi, rbp	      2175	sequencer.c	FUNCTION_65	WHILE_1	CALL_4
0x40096a3	      0xe800000000	                          call 0x40096a8	      2175	sequencer.c	FUNCTION_65	WHILE_1	CALL_4
0x40096a8	          0x4989c4	                            mov r12, rax	      2175	sequencer.c	FUNCTION_65	WHILE_1	CALL_4
0x40096ab	        0x45897d00	                   mov dword [r13], r15d	      2179	sequencer.c	FUNCTION_65	WHILE_1
0x40096af	        0x49896d08	                mov qword [r13 + 8], rbp	      2180	sequencer.c	FUNCTION_65	WHILE_1
0x40096b3	    0x49c745180000	               mov qword [r13 + 0x18], 0	      2181	sequencer.c	FUNCTION_65	WHILE_1
0x40096bb	    0x41c745200000	               mov dword [r13 + 0x20], 0	      2182	sequencer.c	FUNCTION_65	WHILE_1
0x40096c3	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2183	sequencer.c	FUNCTION_65	WHILE_1
0x40096c8	        0x49894528	             mov qword [r13 + 0x28], rax	      2183	sequencer.c	FUNCTION_65	WHILE_1
0x40096cc	      0x488d742420	                   lea rsi, [rsp + 0x20]	      2184	sequencer.c	FUNCTION_65	WHILE_1	CALL_5
0x40096d1	          0x4c89e7	                            mov rdi, r12	      2184	sequencer.c	FUNCTION_65	WHILE_1	CALL_5
0x40096d4	      0xe800000000	                          call 0x40096d9	      2184	sequencer.c	FUNCTION_65	WHILE_1	CALL_5
0x40096d9	          0x4189c5	                           mov r13d, eax	      2184	sequencer.c	FUNCTION_65	WHILE_1	CALL_5
0x40096dc	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x40096e1	          0x4889ef	                            mov rdi, rbp	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x40096e4	      0xe8c77fffff	              call sym.short_commit_name	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x40096e9	          0x4d89f1	                             mov r9, r14	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x40096ec	          0x4589e8	                           mov r8d, r13d	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x40096ef	          0x4889c1	                            mov rcx, rax	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x40096f2	      0x488b542408	                mov rdx, qword [rsp + 8]	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x40096f7	      0xbe00000000	                              mov esi, 0	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x40096fc	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x4009701	      0xb800000000	                              mov eax, 0	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x4009706	      0xe800000000	                          call 0x400970b	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x400970b	          0x4c89e6	                            mov rsi, r12	      2187	sequencer.c	FUNCTION_65	WHILE_1	CALL_8
0x400970e	          0x4889ef	                            mov rdi, rbp	      2187	sequencer.c	FUNCTION_65	WHILE_1	CALL_8
0x4009711	      0xe800000000	                          call 0x4009716	      2187	sequencer.c	FUNCTION_65	WHILE_1	CALL_8
0x4009716	    0x488bbb800000	            mov rdi, qword [rbx + 0x80] 	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x400971d	      0xe800000000	                          call 0x4009722	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x4009722	          0x4889c5	                            mov rbp, rax	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x4009725	          0x4885c0	                           test rax, rax	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x4009728	     0xf8560ffffff	                           jne 0x400968e	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x400972e	      0xe800000000	                          call 0x4009733	      2194	sequencer.c	FUNCTION_66	IF_1	CALL_2
0x4009733	          0x4889c7	                            mov rdi, rax	      2194	sequencer.c	FUNCTION_66	IF_1	CALL_2
0x4009736	      0xe800000000	                          call 0x400973b	      2194	sequencer.c	FUNCTION_66	IF_1	CALL_2
0x400973b	            0x85c0	                           test eax, eax	      2194	sequencer.c	FUNCTION_66	IF_1	CALL_2
0x400973d	            0x7447	                            je 0x4009786	      2194	sequencer.c	FUNCTION_66	IF_1	CALL_2
0x400973f	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4009744	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4009749	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x400974e	      0xe800000000	                          call 0x4009753	        54	gettext.h	FUNCTION_118
0x4009753	          0x4889c7	                            mov rdi, rax	      2195	sequencer.c	FUNCTION_66	IF_1	CALL_3
0x4009756	      0xb800000000	                              mov eax, 0	      2195	sequencer.c	FUNCTION_66	IF_1	CALL_3
0x400975b	      0xe800000000	                          call 0x4009760	      2195	sequencer.c	FUNCTION_66	IF_1	CALL_3
0x4009760	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4009765	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400976a	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x400976f	      0xe800000000	                          call 0x4009774	        54	gettext.h	FUNCTION_118
0x4009774	          0x4889c7	                            mov rdi, rax	      2196	sequencer.c	FUNCTION_66	IF_1	CALL_5
0x4009777	      0xb800000000	                              mov eax, 0	      2196	sequencer.c	FUNCTION_66	IF_1	CALL_5
0x400977c	      0xe800000000	                          call 0x4009781	      2196	sequencer.c	FUNCTION_66	IF_1	CALL_5
0x4009781	      0xe9d1030000	                           jmp 0x4009b57	      2196	sequencer.c	FUNCTION_66	IF_1	CALL_5
0x4009786	      0xe800000000	                          call 0x400978b	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_6
0x400978b	      0xbeff010000	                          mov esi, 0x1ff	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_6
0x4009790	          0x4889c7	                            mov rdi, rax	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_6
0x4009793	      0xe800000000	                          call 0x4009798	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_6
0x4009798	            0x85c0	                           test eax, eax	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_6
0x400979a	     0xf89c1030000	                           jns 0x4009b61	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_6
0x40097a0	      0xe800000000	                          call 0x40097a5	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x40097a5	          0x4889c3	                            mov rbx, rax	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x40097a8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40097ad	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40097b2	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40097b7	      0xe800000000	                          call 0x40097bc	        54	gettext.h	FUNCTION_118
0x40097bc	          0x4889de	                            mov rsi, rbx	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x40097bf	          0x4889c7	                            mov rdi, rax	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x40097c2	      0xb800000000	                              mov eax, 0	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x40097c7	      0xe800000000	                          call 0x40097cc	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x40097cc	      0xe986030000	                           jmp 0x4009b57	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x40097d1	          0x833b00	                      cmp dword [rbx], 0	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x40097d4	            0x752b	                           jne 0x4009801	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x40097d6	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40097db	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40097e0	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40097e5	      0xe800000000	                          call 0x40097ea	        54	gettext.h	FUNCTION_118
0x40097ea	          0x4889c7	                            mov rdi, rax	      3493	sequencer.c	FUNCTION_92	CALL_18
0x40097ed	      0xb800000000	                              mov eax, 0	      3493	sequencer.c	FUNCTION_92	CALL_18
0x40097f2	      0xe800000000	                          call 0x40097f7	      3493	sequencer.c	FUNCTION_92	CALL_18
0x40097f7	      0xb8ffffffff	                     mov eax, 0xffffffff	      3493	sequencer.c	FUNCTION_92	CALL_18
0x40097fc	      0xe9dc020000	                           jmp 0x4009add	      3493	sequencer.c	FUNCTION_92	CALL_18
0x4009801	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      3494	sequencer.c	FUNCTION_92	IF_10	CALL_20
0x4009809	      0xe800000000	                          call 0x400980e	      3494	sequencer.c	FUNCTION_92	IF_10	CALL_20
0x400980e	          0x4989c4	                            mov r12, rax	      3494	sequencer.c	FUNCTION_92	IF_10	CALL_20
0x4009811	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2206	sequencer.c	FUNCTION_67
0x400981a	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2207	sequencer.c	FUNCTION_67
0x4009823	    0x48c744242800	               mov qword [rsp + 0x28], 0	      2207	sequencer.c	FUNCTION_67
0x400982c	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2207	sequencer.c	FUNCTION_67
0x4009835	      0xe89368ffff	             call sym.git_path_head_file	      2211	sequencer.c	FUNCTION_67	CALL_2
0x400983a	      0xb900000000	                              mov ecx, 0	       175	lockfile.h	FUNCTION_106	CALL_1
0x400983f	      0xba00000000	                              mov edx, 0	       175	lockfile.h	FUNCTION_106	CALL_1
0x4009844	          0x4889c6	                            mov rsi, rax	       175	lockfile.h	FUNCTION_106	CALL_1
0x4009847	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       175	lockfile.h	FUNCTION_106	CALL_1
0x400984c	      0xe800000000	                          call 0x4009851	       175	lockfile.h	FUNCTION_106	CALL_1
0x4009851	            0x89c5	                            mov ebp, eax	       175	lockfile.h	FUNCTION_106	CALL_1
0x4009853	            0x85c0	                           test eax, eax	      2212	sequencer.c	FUNCTION_67	IF_1
0x4009855	            0x7926	                           jns 0x400987d	      2212	sequencer.c	FUNCTION_67	IF_1
0x4009857	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400985c	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4009861	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4009866	      0xe800000000	                          call 0x400986b	        54	gettext.h	FUNCTION_118
0x400986b	          0x4889c7	                            mov rdi, rax	      2213	sequencer.c	FUNCTION_67	CALL_3
0x400986e	      0xb800000000	                              mov eax, 0	      2213	sequencer.c	FUNCTION_67	CALL_3
0x4009873	      0xe800000000	                          call 0x4009878	      2213	sequencer.c	FUNCTION_67	CALL_3
0x4009878	      0xe903030000	                           jmp 0x4009b80	      2213	sequencer.c	FUNCTION_67	CALL_3
0x400987d	          0x4c89e2	                            mov rdx, r12	      2214	sequencer.c	FUNCTION_67	CALL_4
0x4009880	      0xbe00000000	                              mov esi, 0	      2214	sequencer.c	FUNCTION_67	CALL_4
0x4009885	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2214	sequencer.c	FUNCTION_67	CALL_4
0x400988a	      0xb800000000	                              mov eax, 0	      2214	sequencer.c	FUNCTION_67	CALL_4
0x400988f	      0xe800000000	                          call 0x4009894	      2214	sequencer.c	FUNCTION_67	CALL_4
0x4009894	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      2215	sequencer.c	FUNCTION_67	CALL_5
0x4009899	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      2215	sequencer.c	FUNCTION_67	CALL_5
0x400989e	            0x89ef	                            mov edi, ebp	      2215	sequencer.c	FUNCTION_67	CALL_5
0x40098a0	      0xe800000000	                          call 0x40098a5	      2215	sequencer.c	FUNCTION_67	CALL_5
0x40098a5	          0x4889c5	                            mov rbp, rax	      2215	sequencer.c	FUNCTION_67	CALL_5
0x40098a8	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2216	sequencer.c	FUNCTION_67	CALL_6
0x40098ad	      0xe800000000	                          call 0x40098b2	      2216	sequencer.c	FUNCTION_67	CALL_6
0x40098b2	          0x4885ed	                           test rbp, rbp	      2217	sequencer.c	FUNCTION_67	IF_2
0x40098b5	            0x793b	                           jns 0x40098f2	      2217	sequencer.c	FUNCTION_67	IF_2
0x40098b7	      0xe81168ffff	             call sym.git_path_head_file	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_8
0x40098bc	          0x4889c3	                            mov rbx, rax	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_8
0x40098bf	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40098c4	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40098c9	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40098ce	      0xe800000000	                          call 0x40098d3	        54	gettext.h	FUNCTION_118
0x40098d3	          0x4889de	                            mov rsi, rbx	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_8
0x40098d6	          0x4889c7	                            mov rdi, rax	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_8
0x40098d9	      0xb800000000	                              mov eax, 0	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_8
0x40098de	      0xe800000000	                          call 0x40098e3	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_8
0x40098e3	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       304	lockfile.h	FUNCTION_115	CALL_1
0x40098e8	      0xe800000000	                          call 0x40098ed	       304	lockfile.h	FUNCTION_115	CALL_1
0x40098ed	      0xe98e020000	                           jmp 0x4009b80	       304	lockfile.h	FUNCTION_115	CALL_1
0x40098f2	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2222	sequencer.c	FUNCTION_67	IF_3	CALL_10
0x40098f7	      0xe800000000	                          call 0x40098fc	      2222	sequencer.c	FUNCTION_67	IF_3	CALL_10
0x40098fc	            0x85c0	                           test eax, eax	      2222	sequencer.c	FUNCTION_67	IF_3	CALL_10
0x40098fe	     0xf8986020000	                           jns 0x4009b8a	      2222	sequencer.c	FUNCTION_67	IF_3	CALL_10
0x4009904	      0xe8c467ffff	             call sym.git_path_head_file	      2223	sequencer.c	FUNCTION_67	CALL_12
0x4009909	          0x4889c3	                            mov rbx, rax	      2223	sequencer.c	FUNCTION_67	CALL_12
0x400990c	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4009911	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4009916	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x400991b	      0xe800000000	                          call 0x4009920	        54	gettext.h	FUNCTION_118
0x4009920	          0x4889de	                            mov rsi, rbx	      2223	sequencer.c	FUNCTION_67	CALL_12
0x4009923	          0x4889c7	                            mov rdi, rax	      2223	sequencer.c	FUNCTION_67	CALL_12
0x4009926	      0xb800000000	                              mov eax, 0	      2223	sequencer.c	FUNCTION_67	CALL_12
0x400992b	      0xe800000000	                          call 0x4009930	      2223	sequencer.c	FUNCTION_67	CALL_12
0x4009930	      0xe94b020000	                           jmp 0x4009b80	      2223	sequencer.c	FUNCTION_67	CALL_12
0x4009935	      0xba00000000	                              mov edx, 0	      2372	sequencer.c	FUNCTION_73	CALL_2
0x400993a	      0xbe00000000	                              mov esi, 0	      2372	sequencer.c	FUNCTION_73	CALL_2
0x400993f	          0x4c89ef	                            mov rdi, r13	      2372	sequencer.c	FUNCTION_73	CALL_2
0x4009942	      0xe800000000	                          call 0x4009947	      2372	sequencer.c	FUNCTION_73	CALL_2
0x4009947	          0x4189c4	                           mov r12d, eax	      2372	sequencer.c	FUNCTION_73	CALL_2
0x400994a	        0x837b0400	                  cmp dword [rbx + 4], 0	      2373	sequencer.c	FUNCTION_73	IF_2
0x400994e	            0x7415	                            je 0x4009965	      2373	sequencer.c	FUNCTION_73	IF_2
0x4009950	      0xba00000000	                              mov edx, 0	      2374	sequencer.c	FUNCTION_73	CALL_3
0x4009955	      0xbe00000000	                              mov esi, 0	      2374	sequencer.c	FUNCTION_73	CALL_3
0x400995a	          0x4c89ef	                            mov rdi, r13	      2374	sequencer.c	FUNCTION_73	CALL_3
0x400995d	      0xe800000000	                          call 0x4009962	      2374	sequencer.c	FUNCTION_73	CALL_3
0x4009962	          0x4109c4	                            or r12d, eax	      2374	sequencer.c	FUNCTION_73	CALL_3
0x4009965	        0x837b1000	               cmp dword [rbx + 0x10], 0	      2375	sequencer.c	FUNCTION_73	IF_3
0x4009969	            0x7415	                            je 0x4009980	      2375	sequencer.c	FUNCTION_73	IF_3
0x400996b	      0xba00000000	                              mov edx, 0	      2376	sequencer.c	FUNCTION_73	CALL_4
0x4009970	      0xbe00000000	                              mov esi, 0	      2376	sequencer.c	FUNCTION_73	CALL_4
0x4009975	          0x4c89ef	                            mov rdi, r13	      2376	sequencer.c	FUNCTION_73	CALL_4
0x4009978	      0xe800000000	                          call 0x400997d	      2376	sequencer.c	FUNCTION_73	CALL_4
0x400997d	          0x4109c4	                            or r12d, eax	      2376	sequencer.c	FUNCTION_73	CALL_4
0x4009980	        0x837b0800	                  cmp dword [rbx + 8], 0	      2377	sequencer.c	FUNCTION_73	IF_4
0x4009984	            0x7415	                            je 0x400999b	      2377	sequencer.c	FUNCTION_73	IF_4
0x4009986	      0xba00000000	                              mov edx, 0	      2378	sequencer.c	FUNCTION_73	CALL_5
0x400998b	      0xbe00000000	                              mov esi, 0	      2378	sequencer.c	FUNCTION_73	CALL_5
0x4009990	          0x4c89ef	                            mov rdi, r13	      2378	sequencer.c	FUNCTION_73	CALL_5
0x4009993	      0xe800000000	                          call 0x4009998	      2378	sequencer.c	FUNCTION_73	CALL_5
0x4009998	          0x4109c4	                            or r12d, eax	      2378	sequencer.c	FUNCTION_73	CALL_5
0x400999b	        0x837b1400	               cmp dword [rbx + 0x14], 0	      2379	sequencer.c	FUNCTION_73	IF_5
0x400999f	            0x7415	                            je 0x40099b6	      2379	sequencer.c	FUNCTION_73	IF_5
0x40099a1	      0xba00000000	                              mov edx, 0	      2380	sequencer.c	FUNCTION_73	CALL_6
0x40099a6	      0xbe00000000	                              mov esi, 0	      2380	sequencer.c	FUNCTION_73	CALL_6
0x40099ab	          0x4c89ef	                            mov rdi, r13	      2380	sequencer.c	FUNCTION_73	CALL_6
0x40099ae	      0xe800000000	                          call 0x40099b3	      2380	sequencer.c	FUNCTION_73	CALL_6
0x40099b3	          0x4109c4	                            or r12d, eax	      2380	sequencer.c	FUNCTION_73	CALL_6
0x40099b6	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      2381	sequencer.c	FUNCTION_73	IF_6
0x40099b9	            0x85d2	                           test edx, edx	      2381	sequencer.c	FUNCTION_73	IF_6
0x40099bb	            0x744e	                            je 0x4009a0b	      2381	sequencer.c	FUNCTION_73	IF_6
0x40099bd	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2382	sequencer.c	FUNCTION_73	IF_6
0x40099c6	    0x48c744242800	               mov qword [rsp + 0x28], 0	      2382	sequencer.c	FUNCTION_73	IF_6
0x40099cf	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2382	sequencer.c	FUNCTION_73	IF_6
0x40099d8	      0xbe00000000	                              mov esi, 0	      2383	sequencer.c	FUNCTION_73	IF_6	CALL_7
0x40099dd	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2383	sequencer.c	FUNCTION_73	IF_6	CALL_7
0x40099e2	      0xb800000000	                              mov eax, 0	      2383	sequencer.c	FUNCTION_73	IF_6	CALL_7
0x40099e7	      0xe800000000	                          call 0x40099ec	      2383	sequencer.c	FUNCTION_73	IF_6	CALL_7
0x40099ec	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x40099f1	      0xbe00000000	                              mov esi, 0	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x40099f6	          0x4c89ef	                            mov rdi, r13	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x40099f9	      0xe800000000	                          call 0x40099fe	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x40099fe	          0x4109c4	                            or r12d, eax	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x4009a01	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2385	sequencer.c	FUNCTION_73	IF_6	CALL_9
0x4009a06	      0xe800000000	                          call 0x4009a0b	      2385	sequencer.c	FUNCTION_73	IF_6	CALL_9
0x4009a0b	        0x488b5340	            mov rdx, qword [rbx + 0x40] 	      2387	sequencer.c	FUNCTION_73	IF_7
0x4009a0f	          0x4885d2	                           test rdx, rdx	      2387	sequencer.c	FUNCTION_73	IF_7
0x4009a12	            0x7410	                            je 0x4009a24	      2387	sequencer.c	FUNCTION_73	IF_7
0x4009a14	      0xbe00000000	                              mov esi, 0	      2388	sequencer.c	FUNCTION_73	CALL_10
0x4009a19	          0x4c89ef	                            mov rdi, r13	      2388	sequencer.c	FUNCTION_73	CALL_10
0x4009a1c	      0xe800000000	                          call 0x4009a21	      2388	sequencer.c	FUNCTION_73	CALL_10
0x4009a21	          0x4109c4	                            or r12d, eax	      2388	sequencer.c	FUNCTION_73	CALL_10
0x4009a24	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      2389	sequencer.c	FUNCTION_73	IF_8
0x4009a28	          0x4885d2	                           test rdx, rdx	      2389	sequencer.c	FUNCTION_73	IF_8
0x4009a2b	            0x7410	                            je 0x4009a3d	      2389	sequencer.c	FUNCTION_73	IF_8
0x4009a2d	      0xbe00000000	                              mov esi, 0	      2390	sequencer.c	FUNCTION_73	CALL_11
0x4009a32	          0x4c89ef	                            mov rdi, r13	      2390	sequencer.c	FUNCTION_73	CALL_11
0x4009a35	      0xe800000000	                          call 0x4009a3a	      2390	sequencer.c	FUNCTION_73	CALL_11
0x4009a3a	          0x4109c4	                            or r12d, eax	      2390	sequencer.c	FUNCTION_73	CALL_11
0x4009a3d	      0x48837b4800	               cmp qword [rbx + 0x48], 0	      2391	sequencer.c	FUNCTION_73	IF_9
0x4009a42	            0x7440	                            je 0x4009a84	      2391	sequencer.c	FUNCTION_73	IF_9
0x4009a44	      0x48837b5000	               cmp qword [rbx + 0x50], 0	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x4009a49	            0x7439	                            je 0x4009a84	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x4009a4b	      0xbd00000000	                              mov ebp, 0	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x4009a50	      0xb800000000	                              mov eax, 0	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x4009a55	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x4009a59	        0x488b14c2	            mov rdx, qword [rdx + rax*8]	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x4009a5d	    0x41b800000000	                              mov r8d, 0	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x4009a63	      0xb900000000	                              mov ecx, 0	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x4009a68	      0xbe00000000	                              mov esi, 0	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x4009a6d	          0x4c89ef	                            mov rdi, r13	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x4009a70	      0xe800000000	                          call 0x4009a75	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x4009a75	          0x4109c4	                            or r12d, eax	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x4009a78	          0x83c501	                              add ebp, 1	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x4009a7b	          0x4863c5	                         movsxd rax, ebp	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x4009a7e	        0x483b4350	            cmp rax, qword [rbx + 0x50] 	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x4009a82	            0x72d1	                            jb 0x4009a55	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x4009a84	          0x8b4318	            mov eax, dword [rbx + 0x18] 	      2398	sequencer.c	FUNCTION_73	IF_10
0x4009a87	            0x85c0	                           test eax, eax	      2398	sequencer.c	FUNCTION_73	IF_10
0x4009a89	            0x7421	                            je 0x4009aac	      2398	sequencer.c	FUNCTION_73	IF_10
0x4009a8b	          0x83f801	                              cmp eax, 1	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x4009a8e	      0xba00000000	                              mov edx, 0	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x4009a93	      0xb800000000	                              mov eax, 0	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x4009a98	        0x480f44d0	                          cmove rdx, rax	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x4009a9c	      0xbe00000000	                              mov esi, 0	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x4009aa1	          0x4c89ef	                            mov rdi, r13	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x4009aa4	      0xe800000000	                          call 0x4009aa9	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x4009aa9	          0x4109c4	                            or r12d, eax	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x4009aac	      0xb8ffffffff	                     mov eax, 0xffffffff	      3497	sequencer.c	FUNCTION_92	IF_11
0x4009ab1	          0x4585e4	                         test r12d, r12d	      3496	sequencer.c	FUNCTION_92	IF_11	CALL_21
0x4009ab4	            0x7527	                           jne 0x4009add	      3496	sequencer.c	FUNCTION_92	IF_11	CALL_21
0x4009ab6	      0xe8b19cffff	       call sym.update_abort_safety_file	      3498	sequencer.c	FUNCTION_92	CALL_22
0x4009abb	          0x4889de	                            mov rsi, rbx	      3499	sequencer.c	FUNCTION_92	CALL_23
0x4009abe	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      3499	sequencer.c	FUNCTION_92	CALL_23
0x4009ac3	      0xe830cfffff	                   call sym.pick_commits	      3499	sequencer.c	FUNCTION_92	CALL_23
0x4009ac8	            0x89c3	                            mov ebx, eax	      3499	sequencer.c	FUNCTION_92	CALL_23
0x4009aca	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      3500	sequencer.c	FUNCTION_92	CALL_24
0x4009acf	      0xe8b66bffff	              call sym.todo_list_release	      3500	sequencer.c	FUNCTION_92	CALL_24
0x4009ad4	            0x89d8	                            mov eax, ebx	      3501	sequencer.c	FUNCTION_92
0x4009ad6	            0xeb05	                           jmp 0x4009add	      3501	sequencer.c	FUNCTION_92
0x4009ad8	      0xb8ffffffff	                     mov eax, 0xffffffff	      3441	sequencer.c	FUNCTION_92	IF_1
0x4009add	    0x488b8c24b800	            mov rcx, qword [rsp + 0xb8] 	      3502	sequencer.c	FUNCTION_92
0x4009ae5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3502	sequencer.c	FUNCTION_92
0x4009aee	     0xf84b8000000	                            je 0x4009bac	      3502	sequencer.c	FUNCTION_92
0x4009af4	      0xe9ae000000	                           jmp 0x4009ba7	      3502	sequencer.c	FUNCTION_92
0x4009af9	          0x833b01	                      cmp dword [rbx], 1	      2165	sequencer.c	FUNCTION_65
0x4009afc	        0x410f95c7	                              setne r15b	      2165	sequencer.c	FUNCTION_65
0x4009b00	        0x450fb6ff	                        movzx r15d, r15b	      2165	sequencer.c	FUNCTION_65
0x4009b04	          0x4489f8	                           mov eax, r15d	      2167	sequencer.c	FUNCTION_65
0x4009b07	        0x48c1e004	                              shl rax, 4	      2167	sequencer.c	FUNCTION_65
0x4009b0b	    0x480500000000	                              add rax, 0	      2167	sequencer.c	FUNCTION_65
0x4009b11	        0x488b4008	                mov rax, qword [rax + 8]	      2167	sequencer.c	FUNCTION_65
0x4009b15	      0x4889442408	                mov qword [rsp + 8], rax	      2167	sequencer.c	FUNCTION_65
0x4009b1a	      0xe902fbffff	                           jmp 0x4009621	      2167	sequencer.c	FUNCTION_65
0x4009b1f	            0x8b13	                    mov edx, dword [rbx]	      2165	sequencer.c	FUNCTION_65
0x4009b21	          0x83fa01	                              cmp edx, 1	      2165	sequencer.c	FUNCTION_65
0x4009b24	        0x410f95c7	                              setne r15b	      2165	sequencer.c	FUNCTION_65
0x4009b28	        0x450fb6ff	                        movzx r15d, r15b	      2165	sequencer.c	FUNCTION_65
0x4009b2c	          0x4489f8	                           mov eax, r15d	      2167	sequencer.c	FUNCTION_65
0x4009b2f	        0x48c1e004	                              shl rax, 4	      2167	sequencer.c	FUNCTION_65
0x4009b33	    0x480500000000	                              add rax, 0	      2167	sequencer.c	FUNCTION_65
0x4009b39	        0x488b4008	                mov rax, qword [rax + 8]	      2167	sequencer.c	FUNCTION_65
0x4009b3d	      0x4889442408	                mov qword [rsp + 8], rax	      2167	sequencer.c	FUNCTION_65
0x4009b42	          0x83fa01	                              cmp edx, 1	      1735	sequencer.c	FUNCTION_49	IF_1
0x4009b45	     0xf85d6faffff	                           jne 0x4009621	      1735	sequencer.c	FUNCTION_49	IF_1
0x4009b4b	      0xe9b7faffff	                           jmp 0x4009607	      1735	sequencer.c	FUNCTION_49	IF_1
0x4009b50	      0xb8ffffffff	                     mov eax, 0xffffffff	      3491	sequencer.c	FUNCTION_92	IF_8
0x4009b55	            0xeb86	                           jmp 0x4009add	      3491	sequencer.c	FUNCTION_92	IF_8
0x4009b57	      0xb8ffffffff	                     mov eax, 0xffffffff	      3491	sequencer.c	FUNCTION_92	IF_8
0x4009b5c	      0xe97cffffff	                           jmp 0x4009add	      3491	sequencer.c	FUNCTION_92	IF_8
0x4009b61	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x4009b69	      0xbf00000000	                              mov edi, 0	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x4009b6e	      0xe800000000	                          call 0x4009b73	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x4009b73	            0x85c0	                           test eax, eax	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x4009b75	     0xf8556fcffff	                           jne 0x40097d1	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x4009b7b	      0xe981fcffff	                           jmp 0x4009801	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x4009b80	      0xb8ffffffff	                     mov eax, 0xffffffff	      3495	sequencer.c	FUNCTION_92	IF_10
0x4009b85	      0xe953ffffff	                           jmp 0x4009add	      3495	sequencer.c	FUNCTION_92	IF_10
0x4009b8a	      0xe8e665ffff	             call sym.git_path_opts_file	      2368	sequencer.c	FUNCTION_73	CALL_1
0x4009b8f	          0x4989c5	                            mov r13, rax	      2368	sequencer.c	FUNCTION_73	CALL_1
0x4009b92	    0x41bc00000000	                             mov r12d, 0	      2369	sequencer.c	FUNCTION_73
0x4009b98	        0x837b0c00	                cmp dword [rbx + 0xc], 0	      2371	sequencer.c	FUNCTION_73	IF_1
0x4009b9c	     0xf84a8fdffff	                            je 0x400994a	      2371	sequencer.c	FUNCTION_73	IF_1
0x4009ba2	      0xe98efdffff	                           jmp 0x4009935	      2371	sequencer.c	FUNCTION_73	IF_1
0x4009ba7	      0xe800000000	                          call 0x4009bac	      3502	sequencer.c	FUNCTION_92
0x4009bac	    0x4881c4c80000	                           add rsp, 0xc8	      3502	sequencer.c	FUNCTION_92
0x4009bb3	              0x5b	                                 pop rbx	      3502	sequencer.c	FUNCTION_92
0x4009bb4	              0x5d	                                 pop rbp	      3502	sequencer.c	FUNCTION_92
0x4009bb5	            0x415c	                                 pop r12	      3502	sequencer.c	FUNCTION_92
0x4009bb7	            0x415d	                                 pop r13	      3502	sequencer.c	FUNCTION_92
0x4009bb9	            0x415e	                                 pop r14	      3502	sequencer.c	FUNCTION_92
0x4009bbb	            0x415f	                                 pop r15	      3502	sequencer.c	FUNCTION_92
0x4009bbd	              0xc3	                                     ret	      3502	sequencer.c	FUNCTION_92
labels_cmp	ELSE,0:IF,0:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,0:DO,0	13
0x4000489	        0x4883ec08	                              sub rsp, 8	      3572	sequencer.c	FUNCTION_94
0x400048d	          0x4885c9	                           test rcx, rcx	      3573	sequencer.c	FUNCTION_94
0x4000490	            0x740e	                            je 0x40004a0	      3573	sequencer.c	FUNCTION_94
0x4000492	        0x488d7e10	                   lea rdi, [rsi + 0x10]	      3573	sequencer.c	FUNCTION_94
0x4000496	          0x4889ce	                            mov rsi, rcx	      3573	sequencer.c	FUNCTION_94
0x4000499	      0xe800000000	                          call 0x400049e	      3573	sequencer.c	FUNCTION_94
0x400049e	            0xeb10	                           jmp 0x40004b0	      3573	sequencer.c	FUNCTION_94
0x40004a0	        0x4883c210	                           add rdx, 0x10	      3573	sequencer.c	FUNCTION_94
0x40004a4	        0x488d7e10	                   lea rdi, [rsi + 0x10]	      3573	sequencer.c	FUNCTION_94
0x40004a8	          0x4889d6	                            mov rsi, rdx	      3573	sequencer.c	FUNCTION_94
0x40004ab	      0xe800000000	                          call 0x40004b0	      3573	sequencer.c	FUNCTION_94
0x40004b0	        0x4883c408	                              add rsp, 8	      3574	sequencer.c	FUNCTION_94
0x40004b4	              0xc3	                                     ret	      3574	sequencer.c	FUNCTION_94
read_and_refresh_cache	ELSE,0:IF,3:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,11:DO,0	81
0x4000956	              0x55	                                push rbp	      1747	sequencer.c	FUNCTION_50
0x4000957	              0x53	                                push rbx	      1747	sequencer.c	FUNCTION_50
0x4000958	        0x4883ec18	                           sub rsp, 0x18	      1747	sequencer.c	FUNCTION_50
0x400095c	          0x4889fd	                            mov rbp, rdi	      1747	sequencer.c	FUNCTION_50
0x400095f	    0x64488b042528	                mov rax, qword fs:[0x28]	      1747	sequencer.c	FUNCTION_50
0x4000968	      0x4889442408	                mov qword [rsp + 8], rax	      1747	sequencer.c	FUNCTION_50
0x400096d	            0x31c0	                            xor eax, eax	      1747	sequencer.c	FUNCTION_50
0x400096f	    0x48c704240000	                      mov qword [rsp], 0	      1748	sequencer.c	FUNCTION_50
0x4000977	      0xbe00000000	                              mov esi, 0	      1749	sequencer.c	FUNCTION_50	CALL_1
0x400097c	          0x4889e7	                            mov rdi, rsp	      1749	sequencer.c	FUNCTION_50	CALL_1
0x400097f	      0xe800000000	                          call 0x4000984	      1749	sequencer.c	FUNCTION_50	CALL_1
0x4000984	            0x89c3	                            mov ebx, eax	      1749	sequencer.c	FUNCTION_50	CALL_1
0x4000986	      0xbe00000000	                              mov esi, 0	      1750	sequencer.c	FUNCTION_50	IF_1	CALL_2
0x400098b	      0xbf00000000	                              mov edi, 0	      1750	sequencer.c	FUNCTION_50	IF_1	CALL_2
0x4000990	      0xe800000000	                          call 0x4000995	      1750	sequencer.c	FUNCTION_50	IF_1	CALL_2
0x4000995	            0x85c0	                           test eax, eax	      1750	sequencer.c	FUNCTION_50	IF_1	CALL_2
0x4000997	            0x795d	                           jns 0x40009f6	      1750	sequencer.c	FUNCTION_50	IF_1	CALL_2
0x4000999	          0x4889e7	                            mov rdi, rsp	       304	lockfile.h	FUNCTION_115	CALL_1
0x400099c	      0xe800000000	                          call 0x40009a1	       304	lockfile.h	FUNCTION_115	CALL_1
0x40009a1	          0x4889ef	                            mov rdi, rbp	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_4
0x40009a4	      0xe80bfdffff	                    call sym.action_name	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_4
0x40009a9	      0xbb00000000	                              mov ebx, 0	        53	gettext.h	FUNCTION_118	IF_1
0x40009ae	          0x803800	                       cmp byte [rax], 0	        52	gettext.h	FUNCTION_118	IF_1
0x40009b1	            0x7415	                            je 0x40009c8	        52	gettext.h	FUNCTION_118	IF_1
0x40009b3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40009b8	          0x4889c6	                            mov rsi, rax	        54	gettext.h	FUNCTION_118
0x40009bb	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40009c0	      0xe800000000	                          call 0x40009c5	        54	gettext.h	FUNCTION_118
0x40009c5	          0x4889c3	                            mov rbx, rax	        54	gettext.h	FUNCTION_118
0x40009c8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40009cd	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40009d2	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40009d7	      0xe800000000	                          call 0x40009dc	        54	gettext.h	FUNCTION_118
0x40009dc	          0x4889de	                            mov rsi, rbx	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_4
0x40009df	          0x4889c7	                            mov rdi, rax	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_4
0x40009e2	      0xb800000000	                              mov eax, 0	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_4
0x40009e7	      0xe800000000	                          call 0x40009ec	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_4
0x40009ec	      0xb8ffffffff	                     mov eax, 0xffffffff	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_4
0x40009f1	      0xe98e000000	                           jmp 0x4000a84	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_4
0x40009f6	    0x41b800000000	                              mov r8d, 0	      1755	sequencer.c	FUNCTION_50	CALL_7
0x40009fc	      0xb900000000	                              mov ecx, 0	      1755	sequencer.c	FUNCTION_50	CALL_7
0x4000a01	      0xba00000000	                              mov edx, 0	      1755	sequencer.c	FUNCTION_50	CALL_7
0x4000a06	      0xbe06000000	                              mov esi, 6	      1755	sequencer.c	FUNCTION_50	CALL_7
0x4000a0b	      0xbf00000000	                              mov edi, 0	      1755	sequencer.c	FUNCTION_50	CALL_7
0x4000a10	      0xe800000000	                          call 0x4000a15	      1755	sequencer.c	FUNCTION_50	CALL_7
0x4000a15	      0xb800000000	                              mov eax, 0	      1763	sequencer.c	FUNCTION_50
0x4000a1a	            0x85db	                           test ebx, ebx	      1756	sequencer.c	FUNCTION_50	IF_2
0x4000a1c	            0x7866	                            js 0x4000a84	      1756	sequencer.c	FUNCTION_50	IF_2
0x4000a1e	      0xba03000000	                              mov edx, 3	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_8
0x4000a23	          0x4889e6	                            mov rsi, rsp	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_8
0x4000a26	      0xbf00000000	                              mov edi, 0	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_8
0x4000a2b	      0xe800000000	                          call 0x4000a30	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_8
0x4000a30	            0x85c0	                           test eax, eax	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_8
0x4000a32	            0x7450	                            je 0x4000a84	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_8
0x4000a34	          0x4889ef	                            mov rdi, rbp	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4000a37	      0xe878fcffff	                    call sym.action_name	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4000a3c	      0xbb00000000	                              mov ebx, 0	        53	gettext.h	FUNCTION_118	IF_1
0x4000a41	          0x803800	                       cmp byte [rax], 0	        52	gettext.h	FUNCTION_118	IF_1
0x4000a44	            0x7415	                            je 0x4000a5b	        52	gettext.h	FUNCTION_118	IF_1
0x4000a46	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4000a4b	          0x4889c6	                            mov rsi, rax	        54	gettext.h	FUNCTION_118
0x4000a4e	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4000a53	      0xe800000000	                          call 0x4000a58	        54	gettext.h	FUNCTION_118
0x4000a58	          0x4889c3	                            mov rbx, rax	        54	gettext.h	FUNCTION_118
0x4000a5b	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4000a60	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4000a65	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4000a6a	      0xe800000000	                          call 0x4000a6f	        54	gettext.h	FUNCTION_118
0x4000a6f	          0x4889de	                            mov rsi, rbx	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4000a72	          0x4889c7	                            mov rdi, rax	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4000a75	      0xb800000000	                              mov eax, 0	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4000a7a	      0xe800000000	                          call 0x4000a7f	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4000a7f	      0xb8ffffffff	                     mov eax, 0xffffffff	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4000a84	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1764	sequencer.c	FUNCTION_50
0x4000a89	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1764	sequencer.c	FUNCTION_50
0x4000a92	            0x7405	                            je 0x4000a99	      1764	sequencer.c	FUNCTION_50
0x4000a94	      0xe800000000	                          call 0x4000a99	      1764	sequencer.c	FUNCTION_50
0x4000a99	        0x4883c418	                           add rsp, 0x18	      1764	sequencer.c	FUNCTION_50
0x4000a9d	              0x5b	                                 pop rbx	      1764	sequencer.c	FUNCTION_50
0x4000a9e	              0x5d	                                 pop rbp	      1764	sequencer.c	FUNCTION_50
0x4000a9f	              0xc3	                                     ret	      1764	sequencer.c	FUNCTION_50
sequencer_make_script	ELSE,0:IF,7:FOR,0:WHILE,1:SWITCH,0:functions,0:CALL,21:DO,0	811
0x4009bbe	            0x4157	                                push r15	      3908	sequencer.c	FUNCTION_97
0x4009bc0	            0x4156	                                push r14	      3908	sequencer.c	FUNCTION_97
0x4009bc2	            0x4155	                                push r13	      3908	sequencer.c	FUNCTION_97
0x4009bc4	            0x4154	                                push r12	      3908	sequencer.c	FUNCTION_97
0x4009bc6	              0x55	                                push rbp	      3908	sequencer.c	FUNCTION_97
0x4009bc7	              0x53	                                push rbx	      3908	sequencer.c	FUNCTION_97
0x4009bc8	    0x4881ec880b00	                          sub rsp, 0xb88	      3908	sequencer.c	FUNCTION_97
0x4009bcf	          0x4989ff	                            mov r15, rdi	      3908	sequencer.c	FUNCTION_97
0x4009bd2	          0x4189f5	                           mov r13d, esi	      3908	sequencer.c	FUNCTION_97
0x4009bd5	          0x4989d6	                            mov r14, rdx	      3908	sequencer.c	FUNCTION_97
0x4009bd8	            0x89cd	                            mov ebp, ecx	      3908	sequencer.c	FUNCTION_97
0x4009bda	    0x64488b042528	                mov rax, qword fs:[0x28]	      3908	sequencer.c	FUNCTION_97
0x4009be3	    0x48898424780b	            mov qword [rsp + 0xb78], rax	      3908	sequencer.c	FUNCTION_97
0x4009beb	            0x31c0	                            xor eax, eax	      3908	sequencer.c	FUNCTION_97
0x4009bed	    0x48c744244000	               mov qword [rsp + 0x40], 0	      3909	sequencer.c	FUNCTION_97
0x4009bf6	    0x488dbc242002	                  lea rdi, [rsp + 0x220]	      3910	sequencer.c	FUNCTION_97
0x4009bfe	      0xb914000000	                           mov ecx, 0x14	      3910	sequencer.c	FUNCTION_97
0x4009c03	          0xf348ab	              rep stosq qword [rdi], rax	      3910	sequencer.c	FUNCTION_97
0x4009c06	    0x48c744246000	               mov qword [rsp + 0x60], 0	      3911	sequencer.c	FUNCTION_97
0x4009c0f	    0x48c744246800	               mov qword [rsp + 0x68], 0	      3911	sequencer.c	FUNCTION_97
0x4009c18	    0x48c744247000	               mov qword [rsp + 0x70], 0	      3911	sequencer.c	FUNCTION_97
0x4009c21	            0x89e8	                            mov eax, ebp	      3914	sequencer.c	FUNCTION_97
0x4009c23	          0x83e001	                              and eax, 1	      3914	sequencer.c	FUNCTION_97
0x4009c26	        0x89442438	             mov dword [rsp + 0x38], eax	      3914	sequencer.c	FUNCTION_97
0x4009c2a	        0x40f6c504	                             test bpl, 4	      3915	sequencer.c	FUNCTION_97
0x4009c2e	      0xb800000000	                              mov eax, 0	      3915	sequencer.c	FUNCTION_97
0x4009c33	      0xbb00000000	                              mov ebx, 0	      3915	sequencer.c	FUNCTION_97
0x4009c38	        0x480f44d8	                          cmove rbx, rax	      3915	sequencer.c	FUNCTION_97
0x4009c3c	          0x4189ec	                           mov r12d, ebp	      3916	sequencer.c	FUNCTION_97
0x4009c3f	        0x4183e408	                             and r12d, 8	      3916	sequencer.c	FUNCTION_97
0x4009c43	      0xbe00000000	                              mov esi, 0	      3918	sequencer.c	FUNCTION_97	CALL_1
0x4009c48	    0x488dbc24c002	                  lea rdi, [rsp + 0x2c0]	      3918	sequencer.c	FUNCTION_97	CALL_1
0x4009c50	      0xe800000000	                          call 0x4009c55	      3918	sequencer.c	FUNCTION_97	CALL_1
0x4009c55	    0x808c24390300	             or byte [rsp + 0x339], 0x10	      3919	sequencer.c	FUNCTION_97
0x4009c5d	          0x4585e4	                         test r12d, r12d	      3920	sequencer.c	FUNCTION_97	IF_1
0x4009c60	            0x750b	                           jne 0x4009c6d	      3920	sequencer.c	FUNCTION_97	IF_1
0x4009c62	    0xc78424a40700	              mov dword [rsp + 0x7a4], 1	      3921	sequencer.c	FUNCTION_97	IF_1
0x4009c6d	    0x808c24380300	                or byte [rsp + 0x338], 2	      3922	sequencer.c	FUNCTION_97
0x4009c75	    0x808c24360300	                or byte [rsp + 0x336], 4	      3923	sequencer.c	FUNCTION_97
0x4009c7d	    0x808c24370300	            or byte [rsp + 0x337], 0x42 	      3925	sequencer.c	FUNCTION_97
0x4009c85	    0xc784242c0300	              mov dword [rsp + 0x32c], 0	      3926	sequencer.c	FUNCTION_97
0x4009c90	    0x808c24350300	                or byte [rsp + 0x335], 1	      3927	sequencer.c	FUNCTION_97
0x4009c98	    0x808c243a0300	             or byte [rsp + 0x33a], 0x80	      3929	sequencer.c	FUNCTION_97
0x4009ca0	      0x488d742440	                   lea rsi, [rsp + 0x40]	      3930	sequencer.c	FUNCTION_97	CALL_2
0x4009ca5	      0xbf00000000	                              mov edi, 0	      3930	sequencer.c	FUNCTION_97	CALL_2
0x4009caa	      0xe800000000	                          call 0x4009caf	      3930	sequencer.c	FUNCTION_97	CALL_2
0x4009caf	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      3931	sequencer.c	FUNCTION_97	IF_2
0x4009cb4	          0x4885ff	                           test rdi, rdi	      3931	sequencer.c	FUNCTION_97	IF_2
0x4009cb7	            0x7405	                            je 0x4009cbe	      3931	sequencer.c	FUNCTION_97	IF_2
0x4009cb9	          0x803f00	                       cmp byte [rdi], 0	      3931	sequencer.c	FUNCTION_97	IF_2
0x4009cbc	            0x7514	                           jne 0x4009cd2	      3931	sequencer.c	FUNCTION_97	IF_2
0x4009cbe	      0xe800000000	                          call 0x4009cc3	      3932	sequencer.c	FUNCTION_97	IF_2	CALL_3
0x4009cc3	      0xbf00000000	                              mov edi, 0	      3933	sequencer.c	FUNCTION_97	IF_2	CALL_4
0x4009cc8	      0xe800000000	                          call 0x4009ccd	      3933	sequencer.c	FUNCTION_97	IF_2	CALL_4
0x4009ccd	      0x4889442440	             mov qword [rsp + 0x40], rax	      3933	sequencer.c	FUNCTION_97	IF_2	CALL_4
0x4009cd2	    0x488db424c002	                  lea rsi, [rsp + 0x2c0]	      3935	sequencer.c	FUNCTION_97	CALL_5
0x4009cda	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      3935	sequencer.c	FUNCTION_97	CALL_5
0x4009cdf	      0xe800000000	                          call 0x4009ce4	      3935	sequencer.c	FUNCTION_97	CALL_5
0x4009ce4	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      3936	sequencer.c	FUNCTION_97	CALL_6
0x4009ce9	      0xe800000000	                          call 0x4009cee	      3936	sequencer.c	FUNCTION_97	CALL_6
0x4009cee	    0x8b8424640300	           mov eax, dword [rsp + 0x364] 	      3937	sequencer.c	FUNCTION_97
0x4009cf5	    0x898424200200	            mov dword [rsp + 0x220], eax	      3937	sequencer.c	FUNCTION_97
0x4009cfc	      0xe800000000	                          call 0x4009d01	      3938	sequencer.c	FUNCTION_97	CALL_7
0x4009d01	    0x488984247802	            mov qword [rsp + 0x278], rax	      3938	sequencer.c	FUNCTION_97	CALL_7
0x4009d09	      0xb900000000	                              mov ecx, 0	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x4009d0e	    0x488d9424c002	                  lea rdx, [rsp + 0x2c0]	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x4009d16	          0x4c89f6	                            mov rsi, r14	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x4009d19	          0x4489ef	                           mov edi, r13d	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x4009d1c	      0xe800000000	                          call 0x4009d21	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x4009d21	          0x83f801	                              cmp eax, 1	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x4009d24	            0x7e2b	                           jle 0x4009d51	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x4009d26	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4009d2b	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4009d30	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4009d35	      0xe800000000	                          call 0x4009d3a	        54	gettext.h	FUNCTION_118
0x4009d3a	          0x4889c7	                            mov rdi, rax	      3941	sequencer.c	FUNCTION_97	CALL_9
0x4009d3d	      0xb800000000	                              mov eax, 0	      3941	sequencer.c	FUNCTION_97	CALL_9
0x4009d42	      0xe800000000	                          call 0x4009d47	      3941	sequencer.c	FUNCTION_97	CALL_9
0x4009d47	      0xb8ffffffff	                     mov eax, 0xffffffff	      3941	sequencer.c	FUNCTION_97	CALL_9
0x4009d4c	      0xe9c40c0000	                           jmp 0x400aa15	      3941	sequencer.c	FUNCTION_97	CALL_9
0x4009d51	    0x488dbc24c002	                  lea rdi, [rsp + 0x2c0]	      3943	sequencer.c	FUNCTION_97	IF_4	CALL_10
0x4009d59	      0xe800000000	                          call 0x4009d5e	      3943	sequencer.c	FUNCTION_97	IF_4	CALL_10
0x4009d5e	            0x85c0	                           test eax, eax	      3943	sequencer.c	FUNCTION_97	IF_4	CALL_10
0x4009d60	            0x792b	                           jns 0x4009d8d	      3943	sequencer.c	FUNCTION_97	IF_4	CALL_10
0x4009d62	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4009d67	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4009d6c	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4009d71	      0xe800000000	                          call 0x4009d76	        54	gettext.h	FUNCTION_118
0x4009d76	          0x4889c7	                            mov rdi, rax	      3944	sequencer.c	FUNCTION_97	CALL_11
0x4009d79	      0xb800000000	                              mov eax, 0	      3944	sequencer.c	FUNCTION_97	CALL_11
0x4009d7e	      0xe800000000	                          call 0x4009d83	      3944	sequencer.c	FUNCTION_97	CALL_11
0x4009d83	      0xb8ffffffff	                     mov eax, 0xffffffff	      3944	sequencer.c	FUNCTION_97	CALL_11
0x4009d88	      0xe9880c0000	                           jmp 0x400aa15	      3944	sequencer.c	FUNCTION_97	CALL_11
0x4009d8d	          0x4585e4	                         test r12d, r12d	      3946	sequencer.c	FUNCTION_97	IF_5
0x4009d90	     0xf84570c0000	                            je 0x400a9ed	      3946	sequencer.c	FUNCTION_97	IF_5
0x4009d96	            0x89e8	                            mov eax, ebp	      3683	sequencer.c	FUNCTION_96
0x4009d98	          0x83e010	                           and eax, 0x10	      3683	sequencer.c	FUNCTION_96
0x4009d9b	        0x8944243c	             mov dword [rsp + 0x3c], eax	      3683	sequencer.c	FUNCTION_96
0x4009d9f	    0x48c784248000	               mov qword [rsp + 0x80], 0	      3684	sequencer.c	FUNCTION_96
0x4009dab	    0x48c784248800	               mov qword [rsp + 0x88], 0	      3684	sequencer.c	FUNCTION_96
0x4009db7	    0x48c784249000	               mov qword [rsp + 0x90], 0	      3684	sequencer.c	FUNCTION_96
0x4009dc3	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	      3684	sequencer.c	FUNCTION_96
0x4009dcf	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	      3684	sequencer.c	FUNCTION_96
0x4009ddb	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	      3684	sequencer.c	FUNCTION_96
0x4009de7	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	      3685	sequencer.c	FUNCTION_96
0x4009df3	    0x48c78424c800	               mov qword [rsp + 0xc8], 0	      3685	sequencer.c	FUNCTION_96
0x4009dff	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	      3685	sequencer.c	FUNCTION_96
0x4009e0b	    0x48c744244800	               mov qword [rsp + 0x48], 0	      3686	sequencer.c	FUNCTION_96
0x4009e14	    0x48c744245000	               mov qword [rsp + 0x50], 0	      3687	sequencer.c	FUNCTION_96
0x4009e1d	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	      3689	sequencer.c	FUNCTION_96
0x4009e25	      0xb800000000	                              mov eax, 0	      3689	sequencer.c	FUNCTION_96
0x4009e2a	      0xb906000000	                              mov ecx, 6	      3689	sequencer.c	FUNCTION_96
0x4009e2f	          0xf348ab	              rep stosq qword [rdi], rax	      3689	sequencer.c	FUNCTION_96
0x4009e32	    0x488dbc241001	                  lea rdi, [rsp + 0x110]	      3691	sequencer.c	FUNCTION_96
0x4009e3a	      0xb906000000	                              mov ecx, 6	      3691	sequencer.c	FUNCTION_96
0x4009e3f	          0xf348ab	              rep stosq qword [rdi], rax	      3691	sequencer.c	FUNCTION_96
0x4009e42	    0x488dbc244001	                  lea rdi, [rsp + 0x140]	      3691	sequencer.c	FUNCTION_96
0x4009e4a	      0xb906000000	                              mov ecx, 6	      3691	sequencer.c	FUNCTION_96
0x4009e4f	          0xf348ab	              rep stosq qword [rdi], rax	      3691	sequencer.c	FUNCTION_96
0x4009e52	    0x488dbc247001	                  lea rdi, [rsp + 0x170]	      3692	sequencer.c	FUNCTION_96
0x4009e5a	      0xb906000000	                              mov ecx, 6	      3692	sequencer.c	FUNCTION_96
0x4009e5f	          0xf348ab	              rep stosq qword [rdi], rax	      3692	sequencer.c	FUNCTION_96
0x4009e62	    0x488dbc24a001	                  lea rdi, [rsp + 0x1a0]	      3693	sequencer.c	FUNCTION_96
0x4009e6a	      0xb90f000000	                            mov ecx, 0xf	      3693	sequencer.c	FUNCTION_96
0x4009e6f	          0xf348ab	              rep stosq qword [rdi], rax	      3693	sequencer.c	FUNCTION_96
0x4009e72	    0x48c784241002	              mov qword [rsp + 0x210], 0	      3693	sequencer.c	FUNCTION_96
0x4009e7e	          0x83e504	                              and ebp, 4	      3696	sequencer.c	FUNCTION_96
0x4009e81	      0xb800000000	                              mov eax, 0	      3696	sequencer.c	FUNCTION_96
0x4009e86	      0xba00000000	                              mov edx, 0	      3696	sequencer.c	FUNCTION_96
0x4009e8b	        0x480f44c2	                          cmove rax, rdx	      3696	sequencer.c	FUNCTION_96
0x4009e8f	      0x4889442420	             mov qword [rsp + 0x20], rax	      3696	sequencer.c	FUNCTION_96
0x4009e94	      0xb800000000	                              mov eax, 0	      3696	sequencer.c	FUNCTION_96
0x4009e99	      0xba00000000	                              mov edx, 0	      3696	sequencer.c	FUNCTION_96
0x4009e9e	        0x480f44c2	                          cmove rax, rdx	      3696	sequencer.c	FUNCTION_96
0x4009ea2	      0x4889442428	             mov qword [rsp + 0x28], rax	      3696	sequencer.c	FUNCTION_96
0x4009ea7	      0xb800000000	                              mov eax, 0	      3696	sequencer.c	FUNCTION_96
0x4009eac	      0xba00000000	                              mov edx, 0	      3696	sequencer.c	FUNCTION_96
0x4009eb1	        0x480f44c2	                          cmove rax, rdx	      3696	sequencer.c	FUNCTION_96
0x4009eb5	      0x4889442430	             mov qword [rsp + 0x30], rax	      3696	sequencer.c	FUNCTION_96
0x4009eba	      0xb800000000	                              mov eax, 0	      3696	sequencer.c	FUNCTION_96
0x4009ebf	      0xba00000000	                              mov edx, 0	      3696	sequencer.c	FUNCTION_96
0x4009ec4	        0x480f44c2	                          cmove rax, rdx	      3696	sequencer.c	FUNCTION_96
0x4009ec8	      0x4889442410	             mov qword [rsp + 0x10], rax	      3696	sequencer.c	FUNCTION_96
0x4009ecd	      0xbe00000000	                              mov esi, 0	      3701	sequencer.c	FUNCTION_96	CALL_1
0x4009ed2	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	      3701	sequencer.c	FUNCTION_96	CALL_1
0x4009eda	      0xe800000000	                          call 0x4009edf	      3701	sequencer.c	FUNCTION_96	CALL_1
0x4009edf	      0xbe00000000	                              mov esi, 0	      3702	sequencer.c	FUNCTION_96	CALL_2
0x4009ee4	    0x488dbc24a001	                  lea rdi, [rsp + 0x1a0]	      3702	sequencer.c	FUNCTION_96	CALL_2
0x4009eec	      0xe800000000	                          call 0x4009ef1	      3702	sequencer.c	FUNCTION_96	CALL_2
0x4009ef1	    0x488dbc24d001	                  lea rdi, [rsp + 0x1d0]	      3703	sequencer.c	FUNCTION_96	CALL_3
0x4009ef9	      0xb900000000	                              mov ecx, 0	      3703	sequencer.c	FUNCTION_96	CALL_3
0x4009efe	      0xba00000000	                              mov edx, 0	      3703	sequencer.c	FUNCTION_96	CALL_3
0x4009f03	      0xbe00000000	                              mov esi, 0	      3703	sequencer.c	FUNCTION_96	CALL_3
0x4009f08	      0xe800000000	                          call 0x4009f0d	      3703	sequencer.c	FUNCTION_96	CALL_3
0x4009f0d	    0x488dbc240002	                  lea rdi, [rsp + 0x200]	      3704	sequencer.c	FUNCTION_96	CALL_4
0x4009f15	      0xbe20000000	                           mov esi, 0x20	      3704	sequencer.c	FUNCTION_96	CALL_4
0x4009f1a	      0xe800000000	                          call 0x4009f1f	      3704	sequencer.c	FUNCTION_96	CALL_4
0x4009f1f	    0x83bc24e80200	              cmp dword [rsp + 0x2e8], 0	      3706	sequencer.c	FUNCTION_96	IF_1
0x4009f27	            0x744d	                            je 0x4009f76	      3706	sequencer.c	FUNCTION_96	IF_1
0x4009f29	    0x488b8424f002	           mov rax, qword [rsp + 0x2f0] 	      3706	sequencer.c	FUNCTION_96	IF_1
0x4009f31	        0xf6401504	               test byte [rax + 0x15], 4	      3706	sequencer.c	FUNCTION_96	IF_1
0x4009f35	            0x743f	                            je 0x4009f76	      3706	sequencer.c	FUNCTION_96	IF_1
0x4009f37	          0x488b18	                    mov rbx, qword [rax]	      3707	sequencer.c	FUNCTION_96	IF_1
0x4009f3a	      0xbe2d000000	                           mov esi, 0x2d	      3708	sequencer.c	FUNCTION_96	IF_1
0x4009f3f	      0xbf01000000	                              mov edi, 1	      3708	sequencer.c	FUNCTION_96	IF_1
0x4009f44	      0xe800000000	                          call 0x4009f49	      3708	sequencer.c	FUNCTION_96	IF_1
0x4009f49	    0xc740286f6e74	     mov dword [rax + 0x28], 0x6f746e6f 	        53	string3.h	FUNCTION_186	CALL_3
0x4009f50	        0x488b7304	                mov rsi, qword [rbx + 4]	        53	string3.h	FUNCTION_186	CALL_3
0x4009f54	        0x48897010	             mov qword [rax + 0x10], rsi	        53	string3.h	FUNCTION_186	CALL_3
0x4009f58	        0x488b730c	              mov rsi, qword [rbx + 0xc]	        53	string3.h	FUNCTION_186	CALL_3
0x4009f5c	        0x48897018	             mov qword [rax + 0x18], rsi	        53	string3.h	FUNCTION_186	CALL_3
0x4009f60	          0x8b4b14	            mov ecx, dword [rbx + 0x14] 	        53	string3.h	FUNCTION_186	CALL_3
0x4009f63	          0x894820	             mov dword [rax + 0x20], ecx	        53	string3.h	FUNCTION_186	CALL_3
0x4009f66	          0x4889c6	                            mov rsi, rax	      3710	sequencer.c	FUNCTION_96	IF_1	CALL_6
0x4009f69	    0x488dbc24a001	                  lea rdi, [rsp + 0x1a0]	      3710	sequencer.c	FUNCTION_96	IF_1	CALL_6
0x4009f71	      0xe800000000	                          call 0x4009f76	      3710	sequencer.c	FUNCTION_96	IF_1	CALL_6
0x4009f76	      0x488d442450	                   lea rax, [rsp + 0x50]	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x4009f7b	      0x4889442408	                mov qword [rsp + 8], rax	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x4009f80	      0x4c8d642448	                   lea r12, [rsp + 0x48]	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x4009f85	      0xe960050000	                           jmp 0x400a4ea	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x4009f8a	          0x4c89e6	                            mov rsi, r12	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0x4009f8d	          0x4889ef	                            mov rdi, rbp	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0x4009f90	      0xe800000000	                          call 0x4009f95	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0x4009f95	        0x4c8d6008	                      lea r12, [rax + 8]	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0x4009f99	        0x4c8d6d04	                      lea r13, [rbp + 4]	      3727	sequencer.c	FUNCTION_96	WHILE_1	CALL_9
0x4009f9d	          0x4c89ee	                            mov rsi, r13	      3727	sequencer.c	FUNCTION_96	WHILE_1	CALL_9
0x4009fa0	    0x488dbc241001	                  lea rdi, [rsp + 0x110]	      3727	sequencer.c	FUNCTION_96	WHILE_1	CALL_9
0x4009fa8	      0xe800000000	                          call 0x4009fad	      3727	sequencer.c	FUNCTION_96	WHILE_1	CALL_9
0x4009fad	          0x4889ef	                            mov rdi, rbp	      3729	sequencer.c	FUNCTION_96	WHILE_1	CALL_10
0x4009fb0	      0xe81376ffff	       call sym.is_original_commit_empty	      3729	sequencer.c	FUNCTION_96	WHILE_1	CALL_10
0x4009fb5	            0x89c3	                            mov ebx, eax	      3729	sequencer.c	FUNCTION_96	WHILE_1	CALL_10
0x4009fb7	            0x85c0	                           test eax, eax	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0x4009fb9	            0x750d	                           jne 0x4009fc8	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0x4009fbb	    0xf74500002000	                test dword [rbp], 0x2000	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0x4009fc2	     0xf8522050000	                           jne 0x400a4ea	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0x4009fc8	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	       164	strbuf.h	FUNCTION_177
0x4009fd4	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	       165	strbuf.h	FUNCTION_177	IF_2
0x4009fdc	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_177	IF_2
0x4009fe2	            0x7405	                            je 0x4009fe9	       165	strbuf.h	FUNCTION_177	IF_2
0x4009fe4	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_177	IF_2
0x4009fe7	            0xeb22	                           jmp 0x400a00b	       166	strbuf.h	FUNCTION_177	IF_2
0x4009fe9	    0x803d00000000	                cmp byte [0x04009ff0], 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x4009ff0	            0x7419	                            je 0x400a00b	       168	strbuf.h	FUNCTION_177	CALL_2
0x4009ff2	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x4009ff7	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_177	CALL_2
0x4009ffc	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a001	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a006	      0xe800000000	                          call 0x400a00b	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a00b	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      3734	sequencer.c	FUNCTION_96	WHILE_1	CALL_11
0x400a013	          0x4889ee	                            mov rsi, rbp	      3734	sequencer.c	FUNCTION_96	WHILE_1	CALL_11
0x400a016	    0x488dbc242002	                  lea rdi, [rsp + 0x220]	      3734	sequencer.c	FUNCTION_96	WHILE_1	CALL_11
0x400a01e	      0xe800000000	                          call 0x400a023	      3734	sequencer.c	FUNCTION_96	WHILE_1	CALL_11
0x400a023	        0x488b4530	            mov rax, qword [rbp + 0x30] 	      3736	sequencer.c	FUNCTION_96	WHILE_1
0x400a027	          0x4885c0	                           test rax, rax	      3736	sequencer.c	FUNCTION_96	WHILE_1
0x400a02a	            0x740d	                            je 0x400a039	      3736	sequencer.c	FUNCTION_96	WHILE_1
0x400a02c	        0x4c8b7008	                mov r14, qword [rax + 8]	      3736	sequencer.c	FUNCTION_96	WHILE_1
0x400a030	          0x4d85f6	                           test r14, r14	      3737	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400a033	     0xf854e010000	                           jne 0x400a187	      3737	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400a039	    0x48c784248800	               mov qword [rsp + 0x88], 0	       164	strbuf.h	FUNCTION_177
0x400a045	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	       165	strbuf.h	FUNCTION_177	IF_2
0x400a04d	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_177	IF_2
0x400a053	            0x7405	                            je 0x400a05a	       165	strbuf.h	FUNCTION_177	IF_2
0x400a055	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_177	IF_2
0x400a058	            0xeb22	                           jmp 0x400a07c	       166	strbuf.h	FUNCTION_177	IF_2
0x400a05a	    0x803d00000000	                cmp byte [0x0400a061], 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a061	            0x7419	                            je 0x400a07c	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a063	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a068	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a06d	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a072	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a077	      0xe800000000	                          call 0x400a07c	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a07c	      0x837c243800	               cmp dword [rsp + 0x38], 0	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400a081	            0x7522	                           jne 0x400a0a5	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400a083	            0x85db	                           test ebx, ebx	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400a085	            0x741e	                            je 0x400a0a5	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400a087	     0xfbe15000000	           movsx edx, byte [0x0400a08e] 	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_12
0x400a08e	      0xbe00000000	                              mov esi, 0	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_12
0x400a093	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_12
0x400a09b	      0xb800000000	                              mov eax, 0	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_12
0x400a0a0	      0xe800000000	                          call 0x400a0a5	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_12
0x400a0a5	    0x488b9c24b000	            mov rbx, qword [rsp + 0xb0] 	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400a0ad	          0x4c89ef	                            mov rdi, r13	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400a0b0	      0xe800000000	                          call 0x400a0b5	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400a0b5	          0x4989d8	                             mov r8, rbx	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400a0b8	          0x4889c1	                            mov rcx, rax	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400a0bb	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400a0c0	      0xbe00000000	                              mov esi, 0	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400a0c5	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400a0cd	      0xb800000000	                              mov eax, 0	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400a0d2	      0xe800000000	                          call 0x400a0d7	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400a0d7	    0x488bbc249000	            mov rdi, qword [rsp + 0x90] 	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400a0df	      0xb800000000	                              mov eax, 0	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400a0e4	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400a0eb	            0xf2ae	              repne scasb al, byte [rdi]	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400a0ed	          0x4889c8	                            mov rax, rcx	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400a0f0	          0x48f7d0	                                 not rax	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400a0f3	        0x488d58ff	                      lea rbx, [rax - 1]	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400a0f7	        0x4883fbd7	             cmp rbx, 0xffffffffffffffd7	       785	git-compat-util.h	FUNCTION_133	IF_1
0x400a0fb	            0x7617	                           jbe 0x400a114	       785	git-compat-util.h	FUNCTION_133	IF_1
0x400a0fd	          0x4889da	                            mov rdx, rbx	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400a100	      0xbe28000000	                           mov esi, 0x28	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400a105	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400a10a	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400a10f	      0xe800000000	                          call 0x400a114	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400a114	        0x4883fbd7	             cmp rbx, 0xffffffffffffffd7	       785	git-compat-util.h	FUNCTION_133	IF_1
0x400a118	            0x751b	                           jne 0x400a135	       785	git-compat-util.h	FUNCTION_133	IF_1
0x400a11a	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400a11f	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400a126	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400a12b	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400a130	      0xe800000000	                          call 0x400a135	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400a135	        0x488d7329	                   lea rsi, [rbx + 0x29]	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400a139	      0xbf01000000	                              mov edi, 1	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400a13e	      0xe800000000	                          call 0x400a143	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400a143	          0x4989c6	                            mov r14, rax	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400a146	        0x488d7828	                   lea rdi, [rax + 0x28]	        53	string3.h	FUNCTION_186	CALL_3
0x400a14a	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_186	CALL_3
0x400a14d	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	        53	string3.h	FUNCTION_186	CALL_3
0x400a155	      0xe800000000	                          call 0x400a15a	        53	string3.h	FUNCTION_186	CALL_3
0x400a15a	        0x488b5504	                mov rdx, qword [rbp + 4]	        53	string3.h	FUNCTION_186	CALL_3
0x400a15e	        0x49895610	             mov qword [r14 + 0x10], rdx	        53	string3.h	FUNCTION_186	CALL_3
0x400a162	        0x498b5508	                mov rdx, qword [r13 + 8]	        53	string3.h	FUNCTION_186	CALL_3
0x400a166	        0x49895618	             mov qword [r14 + 0x18], rdx	        53	string3.h	FUNCTION_186	CALL_3
0x400a16a	        0x418b5510	            mov edx, dword [r13 + 0x10] 	        53	string3.h	FUNCTION_186	CALL_3
0x400a16e	        0x41895620	             mov dword [r14 + 0x20], edx	        53	string3.h	FUNCTION_186	CALL_3
0x400a172	          0x4c89f6	                            mov rsi, r14	      3748	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_16
0x400a175	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	      3748	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_16
0x400a17d	      0xe800000000	                          call 0x400a182	      3748	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_16
0x400a182	      0xe963030000	                           jmp 0x400a4ea	      3748	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_16
0x400a187	      0x49837e0800	                  cmp qword [r14 + 8], 0	      3753	sequencer.c	FUNCTION_96	WHILE_1
0x400a18c	     0xf84b1080000	                            je 0x400aa43	      3753	sequencer.c	FUNCTION_96	WHILE_1
0x400a192	      0xe993080000	                           jmp 0x400aa2a	      3753	sequencer.c	FUNCTION_96	WHILE_1
0x400a197	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_177	IF_2
0x400a19a	            0xeb22	                           jmp 0x400a1be	       166	strbuf.h	FUNCTION_177	IF_2
0x400a19c	    0x803d00000000	                cmp byte [0x0400a1a3], 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a1a3	            0x7419	                            je 0x400a1be	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a1a5	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a1aa	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a1af	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a1b4	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a1b9	      0xe800000000	                          call 0x400a1be	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a1be	    0x488b9c24b000	            mov rbx, qword [rsp + 0xb0] 	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400a1c6	          0x4889df	                            mov rdi, rbx	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400a1c9	      0xb800000000	                              mov eax, 0	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400a1ce	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x400a1d1	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x400a1d3	     0xf848f080000	                            je 0x400aa68	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x400a1d9	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400a1dd	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400a1e1	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400a1e4	            0x74e8	                            je 0x400a1ce	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400a1e6	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400a1eb	            0xeb3d	                           jmp 0x400a22a	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400a1ed	        0x4883c001	                              add rax, 1	      3762	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400a1f1	      0xbe27000000	                           mov esi, 0x27	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400a1f6	      0x4889442418	             mov qword [rsp + 0x18], rax	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400a1fb	          0x4889c7	                            mov rdi, rax	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400a1fe	      0xe800000000	                          call 0x400a203	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400a203	          0x4885c0	                           test rax, rax	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400a206	            0x741d	                            je 0x400a225	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400a208	          0x4889c2	                            mov rdx, rax	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_18
0x400a20b	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_18
0x400a210	          0x4829ca	                            sub rdx, rcx	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_18
0x400a213	          0x4889ce	                            mov rsi, rcx	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_18
0x400a216	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_18
0x400a21e	      0xe800000000	                          call 0x400a223	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_18
0x400a223	            0xeb5f	                           jmp 0x400a284	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_18
0x400a225	      0xb800000000	                              mov eax, 0	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400a22a	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x400a22d	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x400a22f	     0xf8450080000	                            je 0x400aa85	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x400a235	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400a239	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400a23d	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400a240	            0x74e8	                            je 0x400a22a	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400a242	            0xeb2b	                           jmp 0x400a26f	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400a244	        0x488d7006	                      lea rsi, [rax + 6]	      3767	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400a248	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x400a24d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_179	CALL_2
0x400a254	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_179	CALL_2
0x400a257	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400a259	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_179	CALL_2
0x400a25c	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400a260	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400a268	      0xe800000000	                          call 0x400a26d	       279	strbuf.h	FUNCTION_179	CALL_2
0x400a26d	            0xeb15	                           jmp 0x400a284	       279	strbuf.h	FUNCTION_179	CALL_2
0x400a26f	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      3769	sequencer.c	FUNCTION_96	WHILE_1	CALL_22
0x400a277	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	      3769	sequencer.c	FUNCTION_96	WHILE_1	CALL_22
0x400a27f	      0xe800000000	                          call 0x400a284	      3769	sequencer.c	FUNCTION_96	WHILE_1	CALL_22
0x400a284	    0x488b9424d000	            mov rdx, qword [rsp + 0xd0] 	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400a28c	           0xfb602	                   movzx eax, byte [rdx]	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400a28f	            0x84c0	                             test al, al	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400a291	            0x741a	                            je 0x400a2ad	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400a293	           0xfb6c0	                           movzx eax, al	      3772	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8
0x400a296	    0xf68000000000	                      test byte [rax], 1	      3772	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8
0x400a29d	            0x7403	                            je 0x400a2a2	      3772	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8
0x400a29f	          0xc6022d	                    mov byte [rdx], 0x2d	      3773	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8
0x400a2a2	        0x4883c201	                              add rdx, 1	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400a2a6	           0xfb602	                   movzx eax, byte [rdx]	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400a2a9	            0x84c0	                             test al, al	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400a2ab	            0x75e6	                           jne 0x400a293	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400a2ad	    0x48c784248800	               mov qword [rsp + 0x88], 0	       164	strbuf.h	FUNCTION_177
0x400a2b9	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	       165	strbuf.h	FUNCTION_177	IF_2
0x400a2c1	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_177	IF_2
0x400a2c7	            0x7405	                            je 0x400a2ce	       165	strbuf.h	FUNCTION_177	IF_2
0x400a2c9	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_177	IF_2
0x400a2cc	            0xeb22	                           jmp 0x400a2f0	       166	strbuf.h	FUNCTION_177	IF_2
0x400a2ce	    0x803d00000000	                cmp byte [0x0400a2d5], 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a2d5	            0x7419	                            je 0x400a2f0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a2d7	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a2dc	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a2e1	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a2e6	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a2eb	      0xe800000000	                          call 0x400a2f0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a2f0	          0x4c89ef	                            mov rdi, r13	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_23
0x400a2f3	      0xe800000000	                          call 0x400a2f8	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_23
0x400a2f8	          0x4889c1	                            mov rcx, rax	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_23
0x400a2fb	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_23
0x400a300	      0xbe00000000	                              mov esi, 0	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_23
0x400a305	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_23
0x400a30d	      0xb800000000	                              mov eax, 0	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_23
0x400a312	      0xe800000000	                          call 0x400a317	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_23
0x400a317	          0x498b06	                    mov rax, qword [r14]	      3780	sequencer.c	FUNCTION_96	WHILE_1
0x400a31a	        0x488d5804	                      lea rbx, [rax + 4]	      3780	sequencer.c	FUNCTION_96	WHILE_1
0x400a31e	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	       141	strbuf.h	FUNCTION_176
0x400a326	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_176
0x400a329	            0x740e	                            je 0x400a339	       141	strbuf.h	FUNCTION_176
0x400a32b	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x400a32f	    0x483984248800	            cmp qword [rsp + 0x88], rax 	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x400a337	            0x7512	                           jne 0x400a34b	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x400a339	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_178	CALL_2
0x400a33e	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       228	strbuf.h	FUNCTION_178	CALL_2
0x400a346	      0xe800000000	                          call 0x400a34b	       228	strbuf.h	FUNCTION_178	CALL_2
0x400a34b	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	       229	strbuf.h	FUNCTION_178
0x400a353	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_178
0x400a357	    0x488994248800	             mov qword [rsp + 0x88], rdx	       229	strbuf.h	FUNCTION_178
0x400a35f	    0x488b94249000	            mov rdx, qword [rsp + 0x90] 	       229	strbuf.h	FUNCTION_178
0x400a367	        0xc6040220	              mov byte [rdx + rax], 0x20	       229	strbuf.h	FUNCTION_178
0x400a36b	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	       230	strbuf.h	FUNCTION_178
0x400a373	    0x488b94249000	            mov rdx, qword [rsp + 0x90] 	       230	strbuf.h	FUNCTION_178
0x400a37b	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_178
0x400a37f	          0x4889de	                            mov rsi, rbx	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_26
0x400a382	    0x488dbc241001	                  lea rdi, [rsp + 0x110]	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_26
0x400a38a	      0xe800000000	                          call 0x400a38f	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_26
0x400a38f	            0x85c0	                           test eax, eax	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_26
0x400a391	            0x753f	                           jne 0x400a3d2	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_26
0x400a393	    0x488d9424a001	                  lea rdx, [rsp + 0x1a0]	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_28
0x400a39b	      0xbe00000000	                              mov esi, 0	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_28
0x400a3a0	          0x4889df	                            mov rdi, rbx	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_28
0x400a3a3	      0xe8be7effff	                      call sym.label_oid	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_28
0x400a3a8	          0x4889c6	                            mov rsi, rax	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_28
0x400a3ab	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x400a3b0	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_179	CALL_2
0x400a3b7	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_179	CALL_2
0x400a3ba	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400a3bc	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_179	CALL_2
0x400a3bf	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400a3c3	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400a3cb	      0xe800000000	                          call 0x400a3d0	       279	strbuf.h	FUNCTION_179	CALL_2
0x400a3d0	            0xeb56	                           jmp 0x400a428	       279	strbuf.h	FUNCTION_179	CALL_2
0x400a3d2	      0x488b742408	                mov rsi, qword [rsp + 8]	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_29
0x400a3d7	          0x498b3e	                    mov rdi, qword [r14]	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_29
0x400a3da	      0xe800000000	                          call 0x400a3df	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_29
0x400a3df	        0x4883c008	                              add rax, 8	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_29
0x400a3e3	      0x4889442408	                mov qword [rsp + 8], rax	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_29
0x400a3e8	    0x488d9424a001	                  lea rdx, [rsp + 0x1a0]	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_31
0x400a3f0	    0x488bb424d000	            mov rsi, qword [rsp + 0xd0] 	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_31
0x400a3f8	          0x4889df	                            mov rdi, rbx	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_31
0x400a3fb	      0xe8667effff	                      call sym.label_oid	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_31
0x400a400	          0x4889c6	                            mov rsi, rax	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_31
0x400a403	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x400a408	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_179	CALL_2
0x400a40f	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_179	CALL_2
0x400a412	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400a414	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_179	CALL_2
0x400a417	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400a41b	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400a423	      0xe800000000	                          call 0x400a428	       279	strbuf.h	FUNCTION_179	CALL_2
0x400a428	    0x488b9424b000	            mov rdx, qword [rsp + 0xb0] 	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_32
0x400a430	      0xbe00000000	                              mov esi, 0	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_32
0x400a435	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_32
0x400a43d	      0xb800000000	                              mov eax, 0	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_32
0x400a442	      0xe800000000	                          call 0x400a447	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_32
0x400a447	    0x488bbc249000	            mov rdi, qword [rsp + 0x90] 	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400a44f	      0xb800000000	                              mov eax, 0	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400a454	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400a45b	            0xf2ae	              repne scasb al, byte [rdi]	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400a45d	          0x48f7d1	                                 not rcx	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400a460	        0x488d59ff	                      lea rbx, [rcx - 1]	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400a464	        0x4883fbd7	             cmp rbx, 0xffffffffffffffd7	       785	git-compat-util.h	FUNCTION_133	IF_1
0x400a468	            0x7612	                           jbe 0x400a47c	       785	git-compat-util.h	FUNCTION_133	IF_1
0x400a46a	          0x4889da	                            mov rdx, rbx	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400a46d	      0xbe28000000	                           mov esi, 0x28	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400a472	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400a477	      0xe800000000	                          call 0x400a47c	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400a47c	        0x4883fbd7	             cmp rbx, 0xffffffffffffffd7	       785	git-compat-util.h	FUNCTION_133	IF_1
0x400a480	            0x751b	                           jne 0x400a49d	       785	git-compat-util.h	FUNCTION_133	IF_1
0x400a482	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400a487	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400a48e	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400a493	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400a498	      0xe800000000	                          call 0x400a49d	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400a49d	        0x488d7329	                   lea rsi, [rbx + 0x29]	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400a4a1	      0xbf01000000	                              mov edi, 1	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400a4a6	      0xe800000000	                          call 0x400a4ab	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400a4ab	          0x4989c6	                            mov r14, rax	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400a4ae	        0x488d7828	                   lea rdi, [rax + 0x28]	        53	string3.h	FUNCTION_186	CALL_3
0x400a4b2	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_186	CALL_3
0x400a4b5	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	        53	string3.h	FUNCTION_186	CALL_3
0x400a4bd	      0xe800000000	                          call 0x400a4c2	        53	string3.h	FUNCTION_186	CALL_3
0x400a4c2	        0x488b5504	                mov rdx, qword [rbp + 4]	        53	string3.h	FUNCTION_186	CALL_3
0x400a4c6	        0x49895610	             mov qword [r14 + 0x10], rdx	        53	string3.h	FUNCTION_186	CALL_3
0x400a4ca	        0x498b5508	                mov rdx, qword [r13 + 8]	        53	string3.h	FUNCTION_186	CALL_3
0x400a4ce	        0x49895618	             mov qword [r14 + 0x18], rdx	        53	string3.h	FUNCTION_186	CALL_3
0x400a4d2	        0x418b5510	            mov edx, dword [r13 + 0x10] 	        53	string3.h	FUNCTION_186	CALL_3
0x400a4d6	        0x41895620	             mov dword [r14 + 0x20], edx	        53	string3.h	FUNCTION_186	CALL_3
0x400a4da	          0x4c89f6	                            mov rsi, r14	      3795	sequencer.c	FUNCTION_96	WHILE_1	CALL_34
0x400a4dd	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	      3795	sequencer.c	FUNCTION_96	WHILE_1	CALL_34
0x400a4e5	      0xe800000000	                          call 0x400a4ea	      3795	sequencer.c	FUNCTION_96	WHILE_1	CALL_34
0x400a4ea	    0x488dbc24c002	                  lea rdi, [rsp + 0x2c0]	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_7
0x400a4f2	      0xe800000000	                          call 0x400a4f7	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_7
0x400a4f7	          0x4889c5	                            mov rbp, rax	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_7
0x400a4fa	          0x4885c0	                           test rax, rax	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_7
0x400a4fd	     0xf8587faffff	                           jne 0x4009f8a	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_7
0x400a503	      0x4c8b642448	            mov r12, qword [rsp + 0x48] 	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400a508	          0x4d85e4	                           test r12, r12	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400a50b	            0x7508	                           jne 0x400a515	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400a50d	      0xe9a0000000	                           jmp 0x400a5b2	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400a512	          0x4989d4	                            mov r12, rdx	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400a515	        0x498b0424	                    mov rax, qword [r12]	      3804	sequencer.c	FUNCTION_96	FOR_2
0x400a519	        0x488b6830	            mov rbp, qword [rax + 0x30] 	      3804	sequencer.c	FUNCTION_96	FOR_2
0x400a51d	          0x4885ed	                           test rbp, rbp	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400a520	            0x7460	                            je 0x400a582	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400a522	        0x488b4500	                    mov rax, qword [rbp]	      3806	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400a526	        0x488d5804	                      lea rbx, [rax + 4]	      3806	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400a52a	          0x4889de	                            mov rsi, rbx	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_35
0x400a52d	    0x488dbc241001	                  lea rdi, [rsp + 0x110]	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_35
0x400a535	      0xe800000000	                          call 0x400a53a	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_35
0x400a53a	            0x85c0	                           test eax, eax	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_35
0x400a53c	            0x743b	                            je 0x400a579	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_35
0x400a53e	          0x4889de	                            mov rsi, rbx	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_36
0x400a541	    0x488dbc244001	                  lea rdi, [rsp + 0x140]	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_36
0x400a549	      0xe800000000	                          call 0x400a54e	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_36
0x400a54e	            0x85c0	                           test eax, eax	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_36
0x400a550	            0x7512	                           jne 0x400a564	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_36
0x400a552	          0x4889de	                            mov rsi, rbx	      3810	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_37
0x400a555	    0x488dbc244001	                  lea rdi, [rsp + 0x140]	      3810	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_37
0x400a55d	      0xe800000000	                          call 0x400a562	      3810	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_37
0x400a562	            0xeb15	                           jmp 0x400a579	      3810	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_37
0x400a564	    0x488d9424a001	                  lea rdx, [rsp + 0x1a0]	      3812	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_38
0x400a56c	      0xbe00000000	                              mov esi, 0	      3812	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_38
0x400a571	          0x4889df	                            mov rdi, rbx	      3812	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_38
0x400a574	      0xe8ed7cffff	                      call sym.label_oid	      3812	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_38
0x400a579	        0x488b6d08	                mov rbp, qword [rbp + 8]	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400a57d	          0x4885ed	                           test rbp, rbp	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400a580	            0x75a0	                           jne 0x400a522	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400a582	      0x498b542408	                mov rdx, qword [r12 + 8]	      3816	sequencer.c	FUNCTION_96	FOR_2	IF_12
0x400a587	          0x4885d2	                           test rdx, rdx	      3816	sequencer.c	FUNCTION_96	FOR_2	IF_12
0x400a58a	            0x7586	                           jne 0x400a512	      3816	sequencer.c	FUNCTION_96	FOR_2	IF_12
0x400a58c	      0x488b742408	                mov rsi, qword [rsp + 8]	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_39
0x400a591	        0x498b3c24	                    mov rdi, qword [r12]	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_39
0x400a595	      0xe800000000	                          call 0x400a59a	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_39
0x400a59a	      0x498b542408	                mov rdx, qword [r12 + 8]	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400a59f	          0x4885d2	                           test rdx, rdx	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400a5a2	            0x740e	                            je 0x400a5b2	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400a5a4	        0x4883c008	                              add rax, 8	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_39
0x400a5a8	      0x4889442408	                mov qword [rsp + 8], rax	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_39
0x400a5ad	      0xe960ffffff	                           jmp 0x400a512	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_39
0x400a5b2	      0x4c8b642428	            mov r12, qword [rsp + 0x28] 	        97	stdio2.h	CALL_575
0x400a5b7	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_575
0x400a5ba	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_575
0x400a5bf	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_575
0x400a5c4	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_575
0x400a5c7	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_575
0x400a5cc	      0xe800000000	                          call 0x400a5d1	        97	stdio2.h	CALL_575
0x400a5d1	      0x488b6c2450	            mov rbp, qword [rsp + 0x50] 	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400a5d6	          0x4885ed	                           test rbp, rbp	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400a5d9	     0xf847b020000	                            je 0x400a85a	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400a5df	      0x4c8b6c2430	            mov r13, qword [rsp + 0x30] 	      3844	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_44
0x400a5e4	    0x48c744245800	               mov qword [rsp + 0x58], 0	      3830	sequencer.c	FUNCTION_96	FOR_4
0x400a5ed	        0x488b5d00	                    mov rbx, qword [rbp]	      3832	sequencer.c	FUNCTION_96	FOR_4
0x400a5f1	        0x4c8d7304	                      lea r14, [rbx + 4]	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_40
0x400a5f5	          0x4c89f6	                            mov rsi, r14	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_40
0x400a5f8	    0x488dbc247001	                  lea rdi, [rsp + 0x170]	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_40
0x400a600	      0xe800000000	                          call 0x400a605	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_40
0x400a605	            0x85c0	                           test eax, eax	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_40
0x400a607	     0xf8540020000	                           jne 0x400a84d	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_40
0x400a60d	          0x4c89f6	                            mov rsi, r14	      3835	sequencer.c	FUNCTION_96	FOR_4	CALL_41
0x400a610	    0x488dbc24a001	                  lea rdi, [rsp + 0x1a0]	      3835	sequencer.c	FUNCTION_96	FOR_4	CALL_41
0x400a618	      0xe800000000	                          call 0x400a61d	      3835	sequencer.c	FUNCTION_96	FOR_4	CALL_41
0x400a61d	          0x4885c0	                           test rax, rax	      3837	sequencer.c	FUNCTION_96	FOR_4	IF_14
0x400a620	            0x741d	                            je 0x400a63f	      3837	sequencer.c	FUNCTION_96	FOR_4	IF_14
0x400a622	        0x488d4828	                   lea rcx, [rax + 0x28]	        97	stdio2.h	CALL_575
0x400a626	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_575
0x400a62b	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_575
0x400a630	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_575
0x400a633	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_575
0x400a638	      0xe800000000	                          call 0x400a63d	        97	stdio2.h	CALL_575
0x400a63d	            0xeb28	                           jmp 0x400a667	        97	stdio2.h	CALL_575
0x400a63f	          0x4c89fe	                            mov rsi, r15	        97	stdio2.h	CALL_575
0x400a642	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_575
0x400a647	      0xe800000000	                          call 0x400a64c	        97	stdio2.h	CALL_575
0x400a64c	            0xeb19	                           jmp 0x400a667	        97	stdio2.h	CALL_575
0x400a64e	      0x488d742458	                   lea rsi, [rsp + 0x58]	      3844	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_44
0x400a653	          0x4889df	                            mov rdi, rbx	      3844	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_44
0x400a656	      0xe800000000	                          call 0x400a65b	      3844	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_44
0x400a65b	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      3845	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	IF_15
0x400a65f	          0x4885c0	                           test rax, rax	      3845	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	IF_15
0x400a662	            0x7434	                            je 0x400a698	      3845	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	IF_15
0x400a664	          0x488b18	                    mov rbx, qword [rax]	      3849	sequencer.c	FUNCTION_96	FOR_4	WHILE_2
0x400a667	        0x4c8d7304	                      lea r14, [rbx + 4]	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_42
0x400a66b	          0x4c89f6	                            mov rsi, r14	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_42
0x400a66e	    0x488dbc241001	                  lea rdi, [rsp + 0x110]	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_42
0x400a676	      0xe800000000	                          call 0x400a67b	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_42
0x400a67b	            0x85c0	                           test eax, eax	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_42
0x400a67d	            0x7414	                            je 0x400a693	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_42
0x400a67f	          0x4c89f6	                            mov rsi, r14	      3843	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_43
0x400a682	    0x488dbc247001	                  lea rdi, [rsp + 0x170]	      3843	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_43
0x400a68a	      0xe800000000	                          call 0x400a68f	      3843	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_43
0x400a68f	            0x85c0	                           test eax, eax	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_42
0x400a691	            0x74bb	                            je 0x400a64e	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_42
0x400a693	          0x4885db	                           test rbx, rbx	      3852	sequencer.c	FUNCTION_96	FOR_4	IF_16
0x400a696	            0x751f	                           jne 0x400a6b7	      3852	sequencer.c	FUNCTION_96	FOR_4	IF_16
0x400a698	          0x4c89e9	                            mov rcx, r13	        97	stdio2.h	CALL_575
0x400a69b	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_575
0x400a6a0	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_575
0x400a6a5	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_575
0x400a6a8	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_575
0x400a6ad	      0xe800000000	                          call 0x400a6b2	        97	stdio2.h	CALL_575
0x400a6b2	      0xe9f7000000	                           jmp 0x400a7ae	        97	stdio2.h	CALL_575
0x400a6b7	          0x4c89f6	                            mov rsi, r14	      3857	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_45
0x400a6ba	    0x488dbc24a001	                  lea rdi, [rsp + 0x1a0]	      3857	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_45
0x400a6c2	      0xe800000000	                          call 0x400a6c7	      3857	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_45
0x400a6c7	          0x4885c0	                           test rax, rax	      3859	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_17
0x400a6ca	            0x7406	                            je 0x400a6d2	      3859	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_17
0x400a6cc	        0x4c8d7028	                   lea r14, [rax + 0x28]	      3860	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_17
0x400a6d0	            0xeb1f	                           jmp 0x400a6f1	      3860	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_17
0x400a6d2	      0x837c243c00	               cmp dword [rsp + 0x3c], 0	      3861	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18
0x400a6d7	            0x7536	                           jne 0x400a70f	      3861	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18
0x400a6d9	    0x488d9424a001	                  lea rdx, [rsp + 0x1a0]	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_46
0x400a6e1	      0xbe00000000	                              mov esi, 0	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_46
0x400a6e6	          0x4c89f7	                            mov rdi, r14	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_46
0x400a6e9	      0xe8787bffff	                      call sym.label_oid	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_46
0x400a6ee	          0x4989c6	                            mov r14, rax	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_46
0x400a6f1	          0x4d85f6	                           test r14, r14	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400a6f4	            0x7419	                            je 0x400a70f	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400a6f6	      0xbf00000000	                              mov edi, 0	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400a6fb	      0xb905000000	                              mov ecx, 5	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400a700	          0x4c89f6	                            mov rsi, r14	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400a703	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400a705	           0xf97c2	                                 seta dl	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400a708	           0xf92c0	                                 setb al	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400a70b	            0x38c2	                              cmp dl, al	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400a70d	            0x751f	                           jne 0x400a72e	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400a70f	          0x4c89e9	                            mov rcx, r13	        97	stdio2.h	CALL_575
0x400a712	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_575
0x400a717	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_575
0x400a71c	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_575
0x400a71f	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_575
0x400a724	      0xe800000000	                          call 0x400a729	        97	stdio2.h	CALL_575
0x400a729	      0xe980000000	                           jmp 0x400a7ae	        97	stdio2.h	CALL_575
0x400a72e	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	       164	strbuf.h	FUNCTION_177
0x400a73a	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	       165	strbuf.h	FUNCTION_177	IF_2
0x400a742	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_177	IF_2
0x400a748	            0x7405	                            je 0x400a74f	       165	strbuf.h	FUNCTION_177	IF_2
0x400a74a	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_177	IF_2
0x400a74d	            0xeb22	                           jmp 0x400a771	       166	strbuf.h	FUNCTION_177	IF_2
0x400a74f	    0x803d00000000	                cmp byte [0x0400a756], 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a756	            0x7419	                            je 0x400a771	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a758	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a75d	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a762	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a767	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a76c	      0xe800000000	                          call 0x400a771	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a771	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      3869	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_47
0x400a779	          0x4889de	                            mov rsi, rbx	      3869	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_47
0x400a77c	    0x488dbc242002	                  lea rdi, [rsp + 0x220]	      3869	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_47
0x400a784	      0xe800000000	                          call 0x400a789	      3869	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_47
0x400a789	    0x4c8b8c24b000	              mov r9, qword [rsp + 0xb0]	        97	stdio2.h	CALL_575
0x400a791	          0x4d89f0	                             mov r8, r14	        97	stdio2.h	CALL_575
0x400a794	          0x4c89e9	                            mov rcx, r13	        97	stdio2.h	CALL_575
0x400a797	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_575
0x400a79c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_575
0x400a7a1	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_575
0x400a7a4	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_575
0x400a7a9	      0xe800000000	                          call 0x400a7ae	        97	stdio2.h	CALL_575
0x400a7ae	      0x4c8b742458	            mov r14, qword [rsp + 0x58] 	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400a7b3	          0x4d85f6	                           test r14, r14	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400a7b6	     0xf8487000000	                            je 0x400a843	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400a7bc	          0x498b06	                    mov rax, qword [r14]	      3876	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400a7bf	        0x488d5804	                      lea rbx, [rax + 4]	      3876	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400a7c3	          0x4889de	                            mov rsi, rbx	      3877	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_48
0x400a7c6	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	      3877	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_48
0x400a7ce	      0xe800000000	                          call 0x400a7d3	      3877	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_48
0x400a7d3	          0x4885c0	                           test rax, rax	      3879	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_20
0x400a7d6	            0x741b	                            je 0x400a7f3	      3879	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_20
0x400a7d8	        0x488d4828	                   lea rcx, [rax + 0x28]	        97	stdio2.h	CALL_575
0x400a7dc	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_575
0x400a7e1	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_575
0x400a7e6	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_575
0x400a7e9	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_575
0x400a7ee	      0xe800000000	                          call 0x400a7f3	        97	stdio2.h	CALL_575
0x400a7f3	          0x4889de	                            mov rsi, rbx	      3881	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_49
0x400a7f6	    0x488dbc24a001	                  lea rdi, [rsp + 0x1a0]	      3881	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_49
0x400a7fe	      0xe800000000	                          call 0x400a803	      3881	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_49
0x400a803	          0x4885c0	                           test rax, rax	      3882	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_21
0x400a806	            0x741e	                            je 0x400a826	      3882	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_21
0x400a808	        0x4c8d4028	                    lea r8, [rax + 0x28]	        97	stdio2.h	CALL_575
0x400a80c	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_575
0x400a80f	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_575
0x400a814	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_575
0x400a819	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_575
0x400a81c	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_575
0x400a821	      0xe800000000	                          call 0x400a826	        97	stdio2.h	CALL_575
0x400a826	          0x4889de	                            mov rsi, rbx	      3885	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_50
0x400a829	    0x488dbc247001	                  lea rdi, [rsp + 0x170]	      3885	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_50
0x400a831	      0xe800000000	                          call 0x400a836	      3885	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_50
0x400a836	        0x4d8b7608	                mov r14, qword [r14 + 8]	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400a83a	          0x4d85f6	                           test r14, r14	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400a83d	     0xf8579ffffff	                           jne 0x400a7bc	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400a843	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      3888	sequencer.c	FUNCTION_96	FOR_4	CALL_51
0x400a848	      0xe800000000	                          call 0x400a84d	      3888	sequencer.c	FUNCTION_96	FOR_4	CALL_51
0x400a84d	        0x488b6d08	                mov rbp, qword [rbp + 8]	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400a851	          0x4885ed	                           test rbp, rbp	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400a854	     0xf858afdffff	                           jne 0x400a5e4	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400a85a	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      3891	sequencer.c	FUNCTION_96	CALL_52
0x400a85f	      0xe800000000	                          call 0x400a864	      3891	sequencer.c	FUNCTION_96	CALL_52
0x400a864	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      3892	sequencer.c	FUNCTION_96	CALL_53
0x400a869	      0xe800000000	                          call 0x400a86e	      3892	sequencer.c	FUNCTION_96	CALL_53
0x400a86e	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	      3894	sequencer.c	FUNCTION_96	CALL_54
0x400a876	      0xe800000000	                          call 0x400a87b	      3894	sequencer.c	FUNCTION_96	CALL_54
0x400a87b	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      3895	sequencer.c	FUNCTION_96	CALL_55
0x400a883	      0xe800000000	                          call 0x400a888	      3895	sequencer.c	FUNCTION_96	CALL_55
0x400a888	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      3896	sequencer.c	FUNCTION_96	CALL_56
0x400a890	      0xe800000000	                          call 0x400a895	      3896	sequencer.c	FUNCTION_96	CALL_56
0x400a895	      0xbe01000000	                              mov esi, 1	      3898	sequencer.c	FUNCTION_96	CALL_57
0x400a89a	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	      3898	sequencer.c	FUNCTION_96	CALL_57
0x400a8a2	      0xe800000000	                          call 0x400a8a7	      3898	sequencer.c	FUNCTION_96	CALL_57
0x400a8a7	      0xbe01000000	                              mov esi, 1	      3899	sequencer.c	FUNCTION_96	CALL_58
0x400a8ac	    0x488dbc24a001	                  lea rdi, [rsp + 0x1a0]	      3899	sequencer.c	FUNCTION_96	CALL_58
0x400a8b4	      0xe800000000	                          call 0x400a8b9	      3899	sequencer.c	FUNCTION_96	CALL_58
0x400a8b9	    0x488dbc24d001	                  lea rdi, [rsp + 0x1d0]	      3900	sequencer.c	FUNCTION_96	CALL_59
0x400a8c1	      0xbe01000000	                              mov esi, 1	      3900	sequencer.c	FUNCTION_96	CALL_59
0x400a8c6	      0xe800000000	                          call 0x400a8cb	      3900	sequencer.c	FUNCTION_96	CALL_59
0x400a8cb	    0x488dbc240002	                  lea rdi, [rsp + 0x200]	      3901	sequencer.c	FUNCTION_96	CALL_60
0x400a8d3	      0xe800000000	                          call 0x400a8d8	      3901	sequencer.c	FUNCTION_96	CALL_60
0x400a8d8	      0xb800000000	                              mov eax, 0	      3947	sequencer.c	FUNCTION_97	CALL_12
0x400a8dd	      0xe933010000	                           jmp 0x400aa15	      3947	sequencer.c	FUNCTION_97	CALL_12
0x400a8e2	          0x4889ef	                            mov rdi, rbp	      3950	sequencer.c	FUNCTION_97	WHILE_1	CALL_14
0x400a8e5	      0xe8de6cffff	       call sym.is_original_commit_empty	      3950	sequencer.c	FUNCTION_97	WHILE_1	CALL_14
0x400a8ea	            0x85c0	                           test eax, eax	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0x400a8ec	            0x750d	                           jne 0x400a8fb	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0x400a8ee	    0xf74500002000	                test dword [rbp], 0x2000	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0x400a8f5	     0xf85f2000000	                           jne 0x400a9ed	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0x400a8fb	    0x48c744246800	               mov qword [rsp + 0x68], 0	       164	strbuf.h	FUNCTION_177
0x400a904	      0x488b542470	            mov rdx, qword [rsp + 0x70] 	       165	strbuf.h	FUNCTION_177	IF_2
0x400a909	    0x4881fa000000	                              cmp rdx, 0	       165	strbuf.h	FUNCTION_177	IF_2
0x400a910	            0x7405	                            je 0x400a917	       165	strbuf.h	FUNCTION_177	IF_2
0x400a912	          0xc60200	                       mov byte [rdx], 0	       166	strbuf.h	FUNCTION_177	IF_2
0x400a915	            0xeb22	                           jmp 0x400a939	       166	strbuf.h	FUNCTION_177	IF_2
0x400a917	    0x803d00000000	                cmp byte [0x0400a91e], 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a91e	            0x7419	                            je 0x400a939	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a920	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a925	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a92a	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a92f	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a934	      0xe800000000	                          call 0x400a939	       168	strbuf.h	FUNCTION_177	CALL_2
0x400a939	      0x837c243800	               cmp dword [rsp + 0x38], 0	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0x400a93e	            0x751f	                           jne 0x400a95f	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0x400a940	            0x85c0	                           test eax, eax	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0x400a942	            0x741b	                            je 0x400a95f	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0x400a944	     0xfbe15000000	           movsx edx, byte [0x0400a94b] 	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0x400a94b	      0xbe00000000	                              mov esi, 0	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0x400a950	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0x400a955	      0xb800000000	                              mov eax, 0	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0x400a95a	      0xe800000000	                          call 0x400a95f	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0x400a95f	        0x488d7d04	                      lea rdi, [rbp + 4]	      3958	sequencer.c	FUNCTION_97	WHILE_1	CALL_17
0x400a963	      0xe800000000	                          call 0x400a968	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400a968	          0x4889c1	                            mov rcx, rax	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400a96b	          0x4889da	                            mov rdx, rbx	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400a96e	      0xbe00000000	                              mov esi, 0	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400a973	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400a978	      0xb800000000	                              mov eax, 0	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400a97d	      0xe800000000	                          call 0x400a982	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400a982	      0x488d542460	                   lea rdx, [rsp + 0x60]	      3959	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0x400a987	          0x4889ee	                            mov rsi, rbp	      3959	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0x400a98a	    0x488dbc242002	                  lea rdi, [rsp + 0x220]	      3959	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0x400a992	      0xe800000000	                          call 0x400a997	      3959	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0x400a997	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       141	strbuf.h	FUNCTION_176
0x400a99c	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_176
0x400a99f	            0x740b	                            je 0x400a9ac	       141	strbuf.h	FUNCTION_176
0x400a9a1	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x400a9a5	      0x4839442468	            cmp qword [rsp + 0x68], rax 	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x400a9aa	            0x750f	                           jne 0x400a9bb	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x400a9ac	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_178	CALL_2
0x400a9b1	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       228	strbuf.h	FUNCTION_178	CALL_2
0x400a9b6	      0xe800000000	                          call 0x400a9bb	       228	strbuf.h	FUNCTION_178	CALL_2
0x400a9bb	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       229	strbuf.h	FUNCTION_178
0x400a9c0	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_178
0x400a9c4	      0x4889542468	             mov qword [rsp + 0x68], rdx	       229	strbuf.h	FUNCTION_178
0x400a9c9	      0x488b542470	            mov rdx, qword [rsp + 0x70] 	       229	strbuf.h	FUNCTION_178
0x400a9ce	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_178
0x400a9d2	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       230	strbuf.h	FUNCTION_178
0x400a9d7	      0x488b542470	            mov rdx, qword [rsp + 0x70] 	       230	strbuf.h	FUNCTION_178
0x400a9dc	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_178
0x400a9e0	          0x4c89fe	                            mov rsi, r15	      3961	sequencer.c	FUNCTION_97	WHILE_1	CALL_20
0x400a9e3	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      3961	sequencer.c	FUNCTION_97	WHILE_1	CALL_20
0x400a9e8	      0xe800000000	                          call 0x400a9ed	      3961	sequencer.c	FUNCTION_97	WHILE_1	CALL_20
0x400a9ed	    0x488dbc24c002	                  lea rdi, [rsp + 0x2c0]	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_13
0x400a9f5	      0xe800000000	                          call 0x400a9fa	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_13
0x400a9fa	          0x4889c5	                            mov rbp, rax	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_13
0x400a9fd	          0x4885c0	                           test rax, rax	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_13
0x400aa00	     0xf85dcfeffff	                           jne 0x400a8e2	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_13
0x400aa06	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      3963	sequencer.c	FUNCTION_97	CALL_21
0x400aa0b	      0xe800000000	                          call 0x400aa10	      3963	sequencer.c	FUNCTION_97	CALL_21
0x400aa10	      0xb800000000	                              mov eax, 0	      3964	sequencer.c	FUNCTION_97
0x400aa15	    0x488b8c24780b	           mov rcx, qword [rsp + 0xb78] 	      3965	sequencer.c	FUNCTION_97
0x400aa1d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3965	sequencer.c	FUNCTION_97
0x400aa26	            0x747d	                            je 0x400aaa5	      3965	sequencer.c	FUNCTION_97
0x400aa28	            0xeb76	                           jmp 0x400aaa0	      3965	sequencer.c	FUNCTION_97
0x400aa2a	      0xba00000000	                              mov edx, 0	      3756	sequencer.c	FUNCTION_96	WHILE_1	IF_5
0x400aa2f	      0xbeac0e0000	                          mov esi, 0xeac	      3756	sequencer.c	FUNCTION_96	WHILE_1	IF_5
0x400aa34	      0xbf00000000	                              mov edi, 0	      3756	sequencer.c	FUNCTION_96	WHILE_1	IF_5
0x400aa39	      0xb800000000	                              mov eax, 0	      3756	sequencer.c	FUNCTION_96	WHILE_1	IF_5
0x400aa3e	      0xe800000000	                          call 0x400aa43	      3756	sequencer.c	FUNCTION_96	WHILE_1	IF_5
0x400aa43	    0x48c78424c800	               mov qword [rsp + 0xc8], 0	       164	strbuf.h	FUNCTION_177
0x400aa4f	    0x488b8424d000	            mov rax, qword [rsp + 0xd0] 	       165	strbuf.h	FUNCTION_177	IF_2
0x400aa57	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_177	IF_2
0x400aa5d	     0xf8534f7ffff	                           jne 0x400a197	       165	strbuf.h	FUNCTION_177	IF_2
0x400aa63	      0xe934f7ffff	                           jmp 0x400a19c	       165	strbuf.h	FUNCTION_177	IF_2
0x400aa68	      0xbe27000000	                           mov esi, 0x27	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400aa6d	      0xe800000000	                          call 0x400aa72	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400aa72	          0x4885c0	                           test rax, rax	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400aa75	     0xf8572f7ffff	                           jne 0x400a1ed	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400aa7b	      0xb800000000	                              mov eax, 0	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400aa80	      0xe9a5f7ffff	                           jmp 0x400a22a	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400aa85	      0xbe00000000	                              mov esi, 0	      3766	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400aa8a	          0x4889df	                            mov rdi, rbx	      3766	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400aa8d	      0xe800000000	                          call 0x400aa92	      3766	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400aa92	          0x4885c0	                           test rax, rax	      3765	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400aa95	     0xf85a9f7ffff	                           jne 0x400a244	      3765	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400aa9b	      0xe9cff7ffff	                           jmp 0x400a26f	      3765	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400aaa0	      0xe800000000	                          call 0x400aaa5	      3965	sequencer.c	FUNCTION_97
0x400aaa5	    0x4881c4880b00	                          add rsp, 0xb88	      3965	sequencer.c	FUNCTION_97
0x400aaac	              0x5b	                                 pop rbx	      3965	sequencer.c	FUNCTION_97
0x400aaad	              0x5d	                                 pop rbp	      3965	sequencer.c	FUNCTION_97
0x400aaae	            0x415c	                                 pop r12	      3965	sequencer.c	FUNCTION_97
0x400aab0	            0x415d	                                 pop r13	      3965	sequencer.c	FUNCTION_97
0x400aab2	            0x415e	                                 pop r14	      3965	sequencer.c	FUNCTION_97
0x400aab4	            0x415f	                                 pop r15	      3965	sequencer.c	FUNCTION_97
0x400aab6	              0xc3	                                     ret	      3965	sequencer.c	FUNCTION_97
git_sequencer_config	ELSE,4:IF,8:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,7:DO,0	120
0x40004e1	            0x4155	                                push r13	       148	sequencer.c	FUNCTION_1
0x40004e3	            0x4154	                                push r12	       148	sequencer.c	FUNCTION_1
0x40004e5	              0x55	                                push rbp	       148	sequencer.c	FUNCTION_1
0x40004e6	              0x53	                                push rbx	       148	sequencer.c	FUNCTION_1
0x40004e7	        0x4883ec18	                           sub rsp, 0x18	       148	sequencer.c	FUNCTION_1
0x40004eb	          0x4889fd	                            mov rbp, rdi	       148	sequencer.c	FUNCTION_1
0x40004ee	          0x4989f4	                            mov r12, rsi	       148	sequencer.c	FUNCTION_1
0x40004f1	          0x4989d5	                            mov r13, rdx	       148	sequencer.c	FUNCTION_1
0x40004f4	    0x64488b042528	                mov rax, qword fs:[0x28]	       148	sequencer.c	FUNCTION_1
0x40004fd	      0x4889442408	                mov qword [rsp + 8], rax	       148	sequencer.c	FUNCTION_1
0x4000502	            0x31c0	                            xor eax, eax	       148	sequencer.c	FUNCTION_1
0x4000504	      0xbf00000000	                              mov edi, 0	       152	sequencer.c	FUNCTION_1	IF_1
0x4000509	      0xb90f000000	                            mov ecx, 0xf	       152	sequencer.c	FUNCTION_1	IF_1
0x400050e	          0x4889ee	                            mov rsi, rbp	       152	sequencer.c	FUNCTION_1	IF_1
0x4000511	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       152	sequencer.c	FUNCTION_1	IF_1
0x4000513	           0xf97c2	                                 seta dl	       152	sequencer.c	FUNCTION_1	IF_1
0x4000516	           0xf92c0	                                 setb al	       152	sequencer.c	FUNCTION_1	IF_1
0x4000519	            0x38c2	                              cmp dl, al	       152	sequencer.c	FUNCTION_1	IF_1
0x400051b	     0xf85da000000	                           jne 0x40005fb	       152	sequencer.c	FUNCTION_1	IF_1
0x4000521	          0x4c89e2	                            mov rdx, r12	       155	sequencer.c	FUNCTION_1	IF_1	CALL_1
0x4000524	          0x4889ee	                            mov rsi, rbp	       155	sequencer.c	FUNCTION_1	IF_1	CALL_1
0x4000527	          0x4889e7	                            mov rdi, rsp	       155	sequencer.c	FUNCTION_1	IF_1	CALL_1
0x400052a	      0xe800000000	                          call 0x400052f	       155	sequencer.c	FUNCTION_1	IF_1	CALL_1
0x400052f	            0x89c3	                            mov ebx, eax	       155	sequencer.c	FUNCTION_1	IF_1	CALL_1
0x4000531	            0x85c0	                           test eax, eax	       156	sequencer.c	FUNCTION_1	IF_1	IF_2
0x4000533	     0xf852f010000	                           jne 0x4000668	       156	sequencer.c	FUNCTION_1	IF_1	IF_2
0x4000539	        0x488b2c24	                    mov rbp, qword [rsp]	       159	sequencer.c	FUNCTION_1	IF_1	IF_3
0x400053d	      0xbf00000000	                              mov edi, 0	       159	sequencer.c	FUNCTION_1	IF_1	IF_3
0x4000542	      0xb909000000	                              mov ecx, 9	       159	sequencer.c	FUNCTION_1	IF_1	IF_3
0x4000547	          0x4889ee	                            mov rsi, rbp	       159	sequencer.c	FUNCTION_1	IF_1	IF_3
0x400054a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       159	sequencer.c	FUNCTION_1	IF_1	IF_3
0x400054c	           0xf97c2	                                 seta dl	       159	sequencer.c	FUNCTION_1	IF_1	IF_3
0x400054f	           0xf92c0	                                 setb al	       159	sequencer.c	FUNCTION_1	IF_1	IF_3
0x4000552	            0x38c2	                              cmp dl, al	       159	sequencer.c	FUNCTION_1	IF_1	IF_3
0x4000554	            0x750d	                           jne 0x4000563	       159	sequencer.c	FUNCTION_1	IF_1	IF_3
0x4000556	    0x41c745380100	               mov dword [r13 + 0x38], 1	       160	sequencer.c	FUNCTION_1	IF_1	IF_3
0x400055e	      0xe905010000	                           jmp 0x4000668	       160	sequencer.c	FUNCTION_1	IF_1	IF_3
0x4000563	      0xbf00000000	                              mov edi, 0	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x4000568	      0xb90b000000	                            mov ecx, 0xb	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x400056d	          0x4889ee	                            mov rsi, rbp	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x4000570	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x4000572	           0xf97c2	                                 seta dl	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x4000575	           0xf92c0	                                 setb al	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x4000578	            0x38c2	                              cmp dl, al	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x400057a	            0x750d	                           jne 0x4000589	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x400057c	    0x41c745380000	               mov dword [r13 + 0x38], 0	       162	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x4000584	      0xe9df000000	                           jmp 0x4000668	       162	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x4000589	      0xbf00000000	                              mov edi, 0	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x400058e	      0xb906000000	                              mov ecx, 6	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x4000593	          0x4889ee	                            mov rsi, rbp	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x4000596	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x4000598	           0xf97c2	                                 seta dl	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x400059b	           0xf92c0	                                 setb al	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x400059e	            0x38c2	                              cmp dl, al	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x40005a0	            0x750d	                           jne 0x40005af	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x40005a2	    0x41c745380300	               mov dword [r13 + 0x38], 3	       164	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x40005aa	      0xe9b9000000	                           jmp 0x4000668	       164	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x40005af	      0xbf00000000	                              mov edi, 0	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6
0x40005b4	      0xb909000000	                              mov ecx, 9	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6
0x40005b9	          0x4889ee	                            mov rsi, rbp	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6
0x40005bc	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6
0x40005be	           0xf97c2	                                 seta dl	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6
0x40005c1	           0xf92c0	                                 setb al	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6
0x40005c4	            0x38c2	                              cmp dl, al	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6
0x40005c6	            0x750d	                           jne 0x40005d5	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6
0x40005c8	    0x41c745380000	               mov dword [r13 + 0x38], 0	       166	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6
0x40005d0	      0xe993000000	                           jmp 0x4000668	       166	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6
0x40005d5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40005da	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40005df	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40005e4	      0xe800000000	                          call 0x40005e9	        54	gettext.h	FUNCTION_118
0x40005e9	          0x4889ee	                            mov rsi, rbp	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_3
0x40005ec	          0x4889c7	                            mov rdi, rax	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_3
0x40005ef	      0xb800000000	                              mov eax, 0	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_3
0x40005f4	      0xe800000000	                          call 0x40005f9	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_3
0x40005f9	            0xeb6d	                           jmp 0x4000668	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_3
0x40005fb	      0xbf00000000	                              mov edi, 0	       174	sequencer.c	FUNCTION_1	IF_7
0x4000600	      0xb90f000000	                            mov ecx, 0xf	       174	sequencer.c	FUNCTION_1	IF_7
0x4000605	          0x4889ee	                            mov rsi, rbp	       174	sequencer.c	FUNCTION_1	IF_7
0x4000608	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       174	sequencer.c	FUNCTION_1	IF_7
0x400060a	           0xf97c3	                                 seta bl	       174	sequencer.c	FUNCTION_1	IF_7
0x400060d	           0xf92c0	                                 setb al	       174	sequencer.c	FUNCTION_1	IF_7
0x4000610	            0x29c3	                            sub ebx, eax	       174	sequencer.c	FUNCTION_1	IF_7
0x4000612	           0xfbedb	                           movsx ebx, bl	       174	sequencer.c	FUNCTION_1	IF_7
0x4000615	            0x85db	                           test ebx, ebx	       174	sequencer.c	FUNCTION_1	IF_7
0x4000617	            0x7527	                           jne 0x4000640	       174	sequencer.c	FUNCTION_1	IF_7
0x4000619	          0x4c89e6	                            mov rsi, r12	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x400061c	          0x4889ef	                            mov rdi, rbp	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x400061f	      0xe800000000	                          call 0x4000624	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x4000624	      0xba00000000	                              mov edx, 0	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x4000629	            0x85c0	                           test eax, eax	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x400062b	            0x740d	                            je 0x400063a	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x400062d	      0xbf00000000	                              mov edi, 0	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x4000632	      0xe800000000	                          call 0x4000637	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x4000637	          0x4889c2	                            mov rdx, rax	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x400063a	        0x49895530	             mov qword [r13 + 0x30], rdx	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x400063e	            0xeb28	                           jmp 0x4000668	       176	sequencer.c	FUNCTION_1	IF_7
0x4000640	      0xba00000000	                              mov edx, 0	       179	sequencer.c	FUNCTION_1	CALL_6
0x4000645	          0x4c89e6	                            mov rsi, r12	       179	sequencer.c	FUNCTION_1	CALL_6
0x4000648	          0x4889ef	                            mov rdi, rbp	       179	sequencer.c	FUNCTION_1	CALL_6
0x400064b	      0xe800000000	                          call 0x4000650	       179	sequencer.c	FUNCTION_1	CALL_6
0x4000650	            0x89c3	                            mov ebx, eax	       181	sequencer.c	FUNCTION_1	IF_8
0x4000652	            0x85c0	                           test eax, eax	       180	sequencer.c	FUNCTION_1	IF_8
0x4000654	            0x7512	                           jne 0x4000668	       180	sequencer.c	FUNCTION_1	IF_8
0x4000656	      0xba00000000	                              mov edx, 0	       183	sequencer.c	FUNCTION_1	CALL_7
0x400065b	          0x4c89e6	                            mov rsi, r12	       183	sequencer.c	FUNCTION_1	CALL_7
0x400065e	          0x4889ef	                            mov rdi, rbp	       183	sequencer.c	FUNCTION_1	CALL_7
0x4000661	      0xe800000000	                          call 0x4000666	       183	sequencer.c	FUNCTION_1	CALL_7
0x4000666	            0x89c3	                            mov ebx, eax	       183	sequencer.c	FUNCTION_1	CALL_7
0x4000668	            0x89d8	                            mov eax, ebx	       184	sequencer.c	FUNCTION_1
0x400066a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       184	sequencer.c	FUNCTION_1
0x400066f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       184	sequencer.c	FUNCTION_1
0x4000678	            0x7405	                            je 0x400067f	       184	sequencer.c	FUNCTION_1
0x400067a	      0xe800000000	                          call 0x400067f	       184	sequencer.c	FUNCTION_1
0x400067f	        0x4883c418	                           add rsp, 0x18	       184	sequencer.c	FUNCTION_1
0x4000683	              0x5b	                                 pop rbx	       184	sequencer.c	FUNCTION_1
0x4000684	              0x5d	                                 pop rbp	       184	sequencer.c	FUNCTION_1
0x4000685	            0x415c	                                 pop r12	       184	sequencer.c	FUNCTION_1
0x4000687	            0x415d	                                 pop r13	       184	sequencer.c	FUNCTION_1
0x4000689	              0xc3	                                     ret	       184	sequencer.c	FUNCTION_1
append_conflicts_hint	ELSE,0:IF,1:FOR,1:WHILE,1:SWITCH,0:functions,0:CALL,3:DO,0	74
0x4003bd1	            0x4157	                                push r15	       490	sequencer.c	FUNCTION_20
0x4003bd3	            0x4156	                                push r14	       490	sequencer.c	FUNCTION_20
0x4003bd5	            0x4155	                                push r13	       490	sequencer.c	FUNCTION_20
0x4003bd7	            0x4154	                                push r12	       490	sequencer.c	FUNCTION_20
0x4003bd9	              0x55	                                push rbp	       490	sequencer.c	FUNCTION_20
0x4003bda	              0x53	                                push rbx	       490	sequencer.c	FUNCTION_20
0x4003bdb	        0x4883ec08	                              sub rsp, 8	       490	sequencer.c	FUNCTION_20
0x4003bdf	          0x4989fd	                            mov r13, rdi	       490	sequencer.c	FUNCTION_20
0x4003be2	          0x488b07	                    mov rax, qword [rdi]	       141	strbuf.h	FUNCTION_176
0x4003be5	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_176
0x4003be8	            0x740a	                            je 0x4003bf4	       141	strbuf.h	FUNCTION_176
0x4003bea	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x4003bee	        0x483b4708	                cmp rax, qword [rdi + 8]	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x4003bf2	            0x750d	                           jne 0x4003c01	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x4003bf4	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_178	CALL_2
0x4003bf9	          0x4c89ef	                            mov rdi, r13	       228	strbuf.h	FUNCTION_178	CALL_2
0x4003bfc	      0xe800000000	                          call 0x4003c01	       228	strbuf.h	FUNCTION_178	CALL_2
0x4003c01	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	       229	strbuf.h	FUNCTION_178
0x4003c05	        0x498b4508	                mov rax, qword [r13 + 8]	       229	strbuf.h	FUNCTION_178
0x4003c09	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_178
0x4003c0d	        0x49894d08	                mov qword [r13 + 8], rcx	       229	strbuf.h	FUNCTION_178
0x4003c11	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_178
0x4003c15	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	       230	strbuf.h	FUNCTION_178
0x4003c19	        0x498b4508	                mov rax, qword [r13 + 8]	       230	strbuf.h	FUNCTION_178
0x4003c1d	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_178
0x4003c21	      0xbe00000000	                              mov esi, 0	       494	sequencer.c	FUNCTION_20	CALL_2
0x4003c26	          0x4c89ef	                            mov rdi, r13	       494	sequencer.c	FUNCTION_20	CALL_2
0x4003c29	      0xb800000000	                              mov eax, 0	       494	sequencer.c	FUNCTION_20	CALL_2
0x4003c2e	      0xe800000000	                          call 0x4003c33	       494	sequencer.c	FUNCTION_20	CALL_2
0x4003c33	      0xbb00000000	                              mov ebx, 0	       495	sequencer.c	FUNCTION_20	FOR_1
0x4003c38	            0xeb69	                           jmp 0x4003ca3	       495	sequencer.c	FUNCTION_20	FOR_1
0x4003c3a	        0x448d6301	                     lea r12d, [rbx + 1]	       496	sequencer.c	FUNCTION_20	FOR_1
0x4003c3e	          0x4863db	                         movsxd rbx, ebx	       496	sequencer.c	FUNCTION_20	FOR_1
0x4003c41	        0x488b3cda	            mov rdi, qword [rdx + rbx*8]	       496	sequencer.c	FUNCTION_20	FOR_1
0x4003c45	    0xf74738003000	        test dword [rdi + 0x38], 0x3000 	       497	sequencer.c	FUNCTION_20	FOR_1	IF_1
0x4003c4c	            0x7464	                            je 0x4003cb2	       497	sequencer.c	FUNCTION_20	FOR_1	IF_1
0x4003c4e	        0x488d6f58	                   lea rbp, [rdi + 0x58]	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x4003c52	          0x4889ea	                            mov rdx, rbp	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x4003c55	      0xbe00000000	                              mov esi, 0	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x4003c5a	          0x4c89ef	                            mov rdi, r13	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x4003c5d	      0xb800000000	                              mov eax, 0	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x4003c62	      0xe800000000	                          call 0x4003c67	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x4003c67	    0x448b35000000	           mov r14d, dword [0x04003c6e] 	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003c6e	          0x4539e6	                          cmp r14d, r12d	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003c71	            0x762d	                           jbe 0x4003ca0	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003c73	    0x4c8b3d000000	            mov r15, qword [0x04003c7a] 	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003c7a	          0x4489e3	                           mov ebx, r12d	       496	sequencer.c	FUNCTION_20	FOR_1
0x4003c7d	            0xeb08	                           jmp 0x4003c87	       496	sequencer.c	FUNCTION_20	FOR_1
0x4003c7f	          0x83c301	                              add ebx, 1	       501	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003c82	          0x4439f3	                           cmp ebx, r14d	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003c85	            0x731c	                           jae 0x4003ca3	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003c87	          0x4863c3	                         movsxd rax, ebx	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003c8a	        0x498b34c7	            mov rsi, qword [r15 + rax*8]	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003c8e	        0x4883c658	                           add rsi, 0x58	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003c92	          0x4889ef	                            mov rdi, rbp	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003c95	      0xe800000000	                          call 0x4003c9a	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003c9a	            0x85c0	                           test eax, eax	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003c9c	            0x74e1	                            je 0x4003c7f	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003c9e	            0xeb03	                           jmp 0x4003ca3	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003ca0	          0x4489e3	                           mov ebx, r12d	       496	sequencer.c	FUNCTION_20	FOR_1
0x4003ca3	    0x8b0500000000	            mov eax, dword [0x04003ca9] 	       495	sequencer.c	FUNCTION_20	FOR_1
0x4003ca9	    0x488b15000000	            mov rdx, qword [0x04003cb0] 	       496	sequencer.c	FUNCTION_20	FOR_1
0x4003cb0	            0xeb03	                           jmp 0x4003cb5	       496	sequencer.c	FUNCTION_20	FOR_1
0x4003cb2	          0x4489e3	                           mov ebx, r12d	       496	sequencer.c	FUNCTION_20	FOR_1
0x4003cb5	            0x39d8	                            cmp eax, ebx	       495	sequencer.c	FUNCTION_20	FOR_1
0x4003cb7	            0x7781	                            ja 0x4003c3a	       495	sequencer.c	FUNCTION_20	FOR_1
0x4003cb9	        0x4883c408	                              add rsp, 8	       504	sequencer.c	FUNCTION_20
0x4003cbd	              0x5b	                                 pop rbx	       504	sequencer.c	FUNCTION_20
0x4003cbe	              0x5d	                                 pop rbp	       504	sequencer.c	FUNCTION_20
0x4003cbf	            0x415c	                                 pop r12	       504	sequencer.c	FUNCTION_20
0x4003cc1	            0x415d	                                 pop r13	       504	sequencer.c	FUNCTION_20
0x4003cc3	            0x415e	                                 pop r14	       504	sequencer.c	FUNCTION_20
0x4003cc5	            0x415f	                                 pop r15	       504	sequencer.c	FUNCTION_20
0x4003cc7	              0xc3	                                     ret	       504	sequencer.c	FUNCTION_20
strbuf_read_file_or_whine	ELSE,0:IF,2:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,5:DO,0	46
0x4001132	            0x4154	                                push r12	      1953	sequencer.c	FUNCTION_59
0x4001134	              0x55	                                push rbp	      1953	sequencer.c	FUNCTION_59
0x4001135	              0x53	                                push rbx	      1953	sequencer.c	FUNCTION_59
0x4001136	          0x4889fb	                            mov rbx, rdi	      1953	sequencer.c	FUNCTION_59
0x4001139	          0x4989f4	                            mov r12, rsi	      1953	sequencer.c	FUNCTION_59
0x400113c	      0xbe00000000	                              mov esi, 0	        53	fcntl2.h	FUNCTION_215	IF_2	CALL_9
0x4001141	          0x4c89e7	                            mov rdi, r12	        53	fcntl2.h	FUNCTION_215	IF_2	CALL_9
0x4001144	      0xb800000000	                              mov eax, 0	        53	fcntl2.h	FUNCTION_215	IF_2	CALL_9
0x4001149	      0xe800000000	                          call 0x400114e	        53	fcntl2.h	FUNCTION_215	IF_2	CALL_9
0x400114e	            0x85c0	                           test eax, eax	      1958	sequencer.c	FUNCTION_59	IF_1
0x4001150	            0x792d	                           jns 0x400117f	      1958	sequencer.c	FUNCTION_59	IF_1
0x4001152	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4001157	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400115c	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4001161	      0xe800000000	                          call 0x4001166	        54	gettext.h	FUNCTION_118
0x4001166	          0x4c89e6	                            mov rsi, r12	      1959	sequencer.c	FUNCTION_59	CALL_2
0x4001169	          0x4889c7	                            mov rdi, rax	      1959	sequencer.c	FUNCTION_59	CALL_2
0x400116c	      0xb800000000	                              mov eax, 0	      1959	sequencer.c	FUNCTION_59	CALL_2
0x4001171	      0xe800000000	                          call 0x4001176	      1959	sequencer.c	FUNCTION_59	CALL_2
0x4001176	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      1959	sequencer.c	FUNCTION_59	CALL_2
0x400117d	            0xeb50	                           jmp 0x40011cf	      1959	sequencer.c	FUNCTION_59	CALL_2
0x400117f	            0x89c5	                            mov ebp, eax	      1959	sequencer.c	FUNCTION_59	CALL_2
0x4001181	      0xba00000000	                              mov edx, 0	      1960	sequencer.c	FUNCTION_59	CALL_3
0x4001186	            0x89c6	                            mov esi, eax	      1960	sequencer.c	FUNCTION_59	CALL_3
0x4001188	          0x4889df	                            mov rdi, rbx	      1960	sequencer.c	FUNCTION_59	CALL_3
0x400118b	      0xe800000000	                          call 0x4001190	      1960	sequencer.c	FUNCTION_59	CALL_3
0x4001190	          0x4889c3	                            mov rbx, rax	      1960	sequencer.c	FUNCTION_59	CALL_3
0x4001193	            0x89ef	                            mov edi, ebp	      1961	sequencer.c	FUNCTION_59	CALL_4
0x4001195	      0xe800000000	                          call 0x400119a	      1961	sequencer.c	FUNCTION_59	CALL_4
0x400119a	          0x4885db	                           test rbx, rbx	      1962	sequencer.c	FUNCTION_59	IF_2
0x400119d	            0x792d	                           jns 0x40011cc	      1962	sequencer.c	FUNCTION_59	IF_2
0x400119f	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40011a4	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40011a9	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40011ae	      0xe800000000	                          call 0x40011b3	        54	gettext.h	FUNCTION_118
0x40011b3	          0x4c89e6	                            mov rsi, r12	      1963	sequencer.c	FUNCTION_59	CALL_5
0x40011b6	          0x4889c7	                            mov rdi, rax	      1963	sequencer.c	FUNCTION_59	CALL_5
0x40011b9	      0xb800000000	                              mov eax, 0	      1963	sequencer.c	FUNCTION_59	CALL_5
0x40011be	      0xe800000000	                          call 0x40011c3	      1963	sequencer.c	FUNCTION_59	CALL_5
0x40011c3	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      1963	sequencer.c	FUNCTION_59	CALL_5
0x40011ca	            0xeb03	                           jmp 0x40011cf	      1963	sequencer.c	FUNCTION_59	CALL_5
0x40011cc	          0x4889d8	                            mov rax, rbx	      1964	sequencer.c	FUNCTION_59
0x40011cf	              0x5b	                                 pop rbx	      1965	sequencer.c	FUNCTION_59
0x40011d0	              0x5d	                                 pop rbp	      1965	sequencer.c	FUNCTION_59
0x40011d1	            0x415c	                                 pop r12	      1965	sequencer.c	FUNCTION_59
0x40011d3	              0xc3	                                     ret	      1965	sequencer.c	FUNCTION_59
append_signoff	ELSE,3:IF,8:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,12:DO,0	145
0x4004cc9	            0x4155	                                push r13	      3505	sequencer.c	FUNCTION_93
0x4004ccb	            0x4154	                                push r12	      3505	sequencer.c	FUNCTION_93
0x4004ccd	              0x55	                                push rbp	      3505	sequencer.c	FUNCTION_93
0x4004cce	              0x53	                                push rbx	      3505	sequencer.c	FUNCTION_93
0x4004ccf	        0x4883ec28	                           sub rsp, 0x28	      3505	sequencer.c	FUNCTION_93
0x4004cd3	          0x4889fb	                            mov rbx, rdi	      3505	sequencer.c	FUNCTION_93
0x4004cd6	            0x89f5	                            mov ebp, esi	      3505	sequencer.c	FUNCTION_93
0x4004cd8	    0x64488b042528	                mov rax, qword fs:[0x28]	      3505	sequencer.c	FUNCTION_93
0x4004ce1	      0x4889442418	             mov qword [rsp + 0x18], rax	      3505	sequencer.c	FUNCTION_93
0x4004ce6	            0x31c0	                            xor eax, eax	      3505	sequencer.c	FUNCTION_93
0x4004ce8	          0x83e201	                              and edx, 1	      3506	sequencer.c	FUNCTION_93
0x4004ceb	          0x4189d4	                           mov r12d, edx	      3506	sequencer.c	FUNCTION_93
0x4004cee	    0x48c704240000	                      mov qword [rsp], 0	      3507	sequencer.c	FUNCTION_93
0x4004cf6	    0x48c744240800	                  mov qword [rsp + 8], 0	      3507	sequencer.c	FUNCTION_93
0x4004cff	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3507	sequencer.c	FUNCTION_93
0x4004d08	      0xba0f000000	                            mov edx, 0xf	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004d0d	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004d12	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004d15	      0xe800000000	                          call 0x4004d1a	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004d1a	      0xbf00000000	                              mov edi, 0	      3512	sequencer.c	FUNCTION_93	CALL_5
0x4004d1f	      0xe800000000	                          call 0x4004d24	      3512	sequencer.c	FUNCTION_93	CALL_5
0x4004d24	          0x4989c5	                            mov r13, rax	      3512	sequencer.c	FUNCTION_93	CALL_5
0x4004d27	      0xbf00000000	                              mov edi, 0	      3511	sequencer.c	FUNCTION_93	CALL_4
0x4004d2c	      0xe800000000	                          call 0x4004d31	      3511	sequencer.c	FUNCTION_93	CALL_4
0x4004d31	          0x4c89ee	                            mov rsi, r13	      3511	sequencer.c	FUNCTION_93	CALL_4
0x4004d34	          0x4889c7	                            mov rdi, rax	      3511	sequencer.c	FUNCTION_93	CALL_4
0x4004d37	      0xe800000000	                          call 0x4004d3c	      3511	sequencer.c	FUNCTION_93	CALL_4
0x4004d3c	          0x4889c6	                            mov rsi, rax	      3511	sequencer.c	FUNCTION_93	CALL_4
0x4004d3f	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004d44	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004d4b	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004d4e	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004d50	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004d53	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004d57	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004d5a	      0xe800000000	                          call 0x4004d5f	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004d5f	        0x488b0424	                    mov rax, qword [rsp]	       141	strbuf.h	FUNCTION_176
0x4004d63	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_176
0x4004d66	            0x740b	                            je 0x4004d73	       141	strbuf.h	FUNCTION_176
0x4004d68	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x4004d6c	      0x4839442408	                cmp qword [rsp + 8], rax	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x4004d71	            0x750d	                           jne 0x4004d80	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x4004d73	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_178	CALL_2
0x4004d78	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_178	CALL_2
0x4004d7b	      0xe800000000	                          call 0x4004d80	       228	strbuf.h	FUNCTION_178	CALL_2
0x4004d80	      0x488b442408	                mov rax, qword [rsp + 8]	       229	strbuf.h	FUNCTION_178
0x4004d85	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_178
0x4004d89	      0x4889542408	                mov qword [rsp + 8], rdx	       229	strbuf.h	FUNCTION_178
0x4004d8e	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_178
0x4004d93	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_178
0x4004d97	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_178
0x4004d9c	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_178
0x4004da1	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_178
0x4004da5	            0x85ed	                           test ebp, ebp	      3515	sequencer.c	FUNCTION_93	IF_1
0x4004da7	            0x7552	                           jne 0x4004dfb	      3515	sequencer.c	FUNCTION_93	IF_1
0x4004da9	        0x488b4308	                mov rax, qword [rbx + 8]	       595	strbuf.h	FUNCTION_184	IF_1
0x4004dad	          0x4885c0	                           test rax, rax	       595	strbuf.h	FUNCTION_184	IF_1
0x4004db0	            0x7449	                            je 0x4004dfb	       595	strbuf.h	FUNCTION_184	IF_1
0x4004db2	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       595	strbuf.h	FUNCTION_184	IF_1
0x4004db6	      0x807c02ff0a	          cmp byte [rdx + rax - 1], 0xa 	       595	strbuf.h	FUNCTION_184	IF_1
0x4004dbb	            0x743e	                            je 0x4004dfb	       595	strbuf.h	FUNCTION_184	IF_1
0x4004dbd	          0x488b13	                    mov rdx, qword [rbx]	       141	strbuf.h	FUNCTION_176
0x4004dc0	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_176
0x4004dc3	            0x7409	                            je 0x4004dce	       141	strbuf.h	FUNCTION_176
0x4004dc5	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x4004dc9	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x4004dcc	            0x750d	                           jne 0x4004ddb	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x4004dce	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_178	CALL_2
0x4004dd3	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_178	CALL_2
0x4004dd6	      0xe800000000	                          call 0x4004ddb	       228	strbuf.h	FUNCTION_178	CALL_2
0x4004ddb	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_178
0x4004ddf	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_178
0x4004de3	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_178
0x4004de7	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_178
0x4004deb	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_178
0x4004def	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_178
0x4004df3	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_178
0x4004df7	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_178
0x4004dfb	          0x4c63ed	                         movsxd r13, ebp	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004dfe	        0x488b5308	                mov rdx, qword [rbx + 8]	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004e02	          0x4c29ea	                            sub rdx, r13	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004e05	      0x483b542408	                cmp rdx, qword [rsp + 8]	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004e0a	            0x7512	                           jne 0x4004e1e	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004e0c	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3523	sequencer.c	FUNCTION_93	IF_2
0x4004e10	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3523	sequencer.c	FUNCTION_93	IF_2
0x4004e15	      0xe800000000	                          call 0x4004e1a	      3523	sequencer.c	FUNCTION_93	IF_2
0x4004e1a	            0x85c0	                           test eax, eax	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004e1c	            0x745f	                            je 0x4004e7d	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004e1e	            0x89ea	                            mov edx, ebp	      3526	sequencer.c	FUNCTION_93	CALL_8
0x4004e20	          0x4889e6	                            mov rsi, rsp	      3526	sequencer.c	FUNCTION_93	CALL_8
0x4004e23	          0x4889df	                            mov rdi, rbx	      3526	sequencer.c	FUNCTION_93	CALL_8
0x4004e26	      0xe83ec6ffff	          call sym.has_conforming_footer	      3526	sequencer.c	FUNCTION_93	CALL_8
0x4004e2b	            0x85c0	                           test eax, eax	      3528	sequencer.c	FUNCTION_93	IF_3
0x4004e2d	            0x7521	                           jne 0x4004e50	      3528	sequencer.c	FUNCTION_93	IF_3
0x4004e2f	        0x488b7308	                mov rsi, qword [rbx + 8]	      3532	sequencer.c	FUNCTION_93	IF_3	IF_4
0x4004e33	          0x4c29ee	                            sub rsi, r13	      3532	sequencer.c	FUNCTION_93	IF_3	IF_4
0x4004e36	            0x745f	                            je 0x4004e97	      3532	sequencer.c	FUNCTION_93	IF_3	IF_4
0x4004e38	        0x4883fe01	                              cmp rsi, 1	      3538	sequencer.c	FUNCTION_93	IF_3	ELSE_2	IF_5
0x4004e3c	            0x7460	                            je 0x4004e9e	      3538	sequencer.c	FUNCTION_93	IF_3	ELSE_2	IF_5
0x4004e3e	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0x4004e42	      0xba00000000	                              mov edx, 0	      3550	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0x4004e47	      0x807c31fe0a	          cmp byte [rcx + rsi - 2], 0xa 	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0x4004e4c	            0x7555	                           jne 0x4004ea3	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0x4004e4e	            0xeb05	                           jmp 0x4004e55	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0x4004e50	          0x83f803	                              cmp eax, 3	      3558	sequencer.c	FUNCTION_93	IF_8
0x4004e53	            0x7428	                            je 0x4004e7d	      3558	sequencer.c	FUNCTION_93	IF_8
0x4004e55	          0x4585e4	                         test r12d, r12d	      3558	sequencer.c	FUNCTION_93	IF_8
0x4004e58	            0x7405	                            je 0x4004e5f	      3558	sequencer.c	FUNCTION_93	IF_8
0x4004e5a	          0x83f802	                              cmp eax, 2	      3558	sequencer.c	FUNCTION_93	IF_8
0x4004e5d	            0x741e	                            je 0x4004e7d	      3558	sequencer.c	FUNCTION_93	IF_8
0x4004e5f	        0x488b7308	                mov rsi, qword [rbx + 8]	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_11
0x4004e63	          0x4c29ee	                            sub rsi, r13	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_11
0x4004e66	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_11
0x4004e6b	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_11
0x4004e70	      0xba00000000	                              mov edx, 0	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_11
0x4004e75	          0x4889df	                            mov rdi, rbx	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_11
0x4004e78	      0xe800000000	                          call 0x4004e7d	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_11
0x4004e7d	          0x4889e7	                            mov rdi, rsp	      3562	sequencer.c	FUNCTION_93	CALL_12
0x4004e80	      0xe800000000	                          call 0x4004e85	      3562	sequencer.c	FUNCTION_93	CALL_12
0x4004e85	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3563	sequencer.c	FUNCTION_93
0x4004e8a	    0x644833042528	                xor rax, qword fs:[0x28]	      3563	sequencer.c	FUNCTION_93
0x4004e93	            0x7440	                            je 0x4004ed5	      3563	sequencer.c	FUNCTION_93
0x4004e95	            0xeb39	                           jmp 0x4004ed0	      3563	sequencer.c	FUNCTION_93
0x4004e97	      0xba00000000	                              mov edx, 0	      3537	sequencer.c	FUNCTION_93	IF_3	IF_4
0x4004e9c	            0xeb05	                           jmp 0x4004ea3	      3537	sequencer.c	FUNCTION_93	IF_3	IF_4
0x4004e9e	      0xba00000000	                              mov edx, 0	      3543	sequencer.c	FUNCTION_93	IF_3	ELSE_2	IF_5
0x4004ea3	      0xb800000000	                              mov eax, 0	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_9
0x4004ea8	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_9
0x4004eaf	          0x4889d7	                            mov rdi, rdx	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_9
0x4004eb2	            0xf2ae	              repne scasb al, byte [rdi]	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_9
0x4004eb4	          0x48f7d1	                                 not rcx	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_9
0x4004eb7	          0x4989c8	                             mov r8, rcx	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_9
0x4004eba	        0x4983e801	                               sub r8, 1	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_9
0x4004ebe	          0x4889d1	                            mov rcx, rdx	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_9
0x4004ec1	      0xba00000000	                              mov edx, 0	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_9
0x4004ec6	          0x4889df	                            mov rdi, rbx	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_9
0x4004ec9	      0xe800000000	                          call 0x4004ece	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_9
0x4004ece	            0xeb8f	                           jmp 0x4004e5f	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_9
0x4004ed0	      0xe800000000	                          call 0x4004ed5	      3563	sequencer.c	FUNCTION_93
0x4004ed5	        0x4883c428	                           add rsp, 0x28	      3563	sequencer.c	FUNCTION_93
0x4004ed9	              0x5b	                                 pop rbx	      3563	sequencer.c	FUNCTION_93
0x4004eda	              0x5d	                                 pop rbp	      3563	sequencer.c	FUNCTION_93
0x4004edb	            0x415c	                                 pop r12	      3563	sequencer.c	FUNCTION_93
0x4004edd	            0x415d	                                 pop r13	      3563	sequencer.c	FUNCTION_93
0x4004edf	              0xc3	                                     ret	      3563	sequencer.c	FUNCTION_93
label_oid	ELSE,1:IF,6:FOR,2:WHILE,0:SWITCH,0:functions,0:CALL,23:DO,0	259
0x4002266	            0x4157	                                push r15	      3589	sequencer.c	FUNCTION_95
0x4002268	            0x4156	                                push r14	      3589	sequencer.c	FUNCTION_95
0x400226a	            0x4155	                                push r13	      3589	sequencer.c	FUNCTION_95
0x400226c	            0x4154	                                push r12	      3589	sequencer.c	FUNCTION_95
0x400226e	              0x55	                                push rbp	      3589	sequencer.c	FUNCTION_95
0x400226f	              0x53	                                push rbx	      3589	sequencer.c	FUNCTION_95
0x4002270	        0x4883ec48	                           sub rsp, 0x48	      3589	sequencer.c	FUNCTION_95
0x4002274	          0x4989fe	                            mov r14, rdi	      3589	sequencer.c	FUNCTION_95
0x4002277	          0x4989f4	                            mov r12, rsi	      3589	sequencer.c	FUNCTION_95
0x400227a	          0x4889d3	                            mov rbx, rdx	      3589	sequencer.c	FUNCTION_95
0x400227d	    0x64488b042528	                mov rax, qword fs:[0x28]	      3589	sequencer.c	FUNCTION_95
0x4002286	      0x4889442438	             mov qword [rsp + 0x38], rax	      3589	sequencer.c	FUNCTION_95
0x400228b	            0x31c0	                            xor eax, eax	      3589	sequencer.c	FUNCTION_95
0x400228d	          0x4889fe	                            mov rsi, rdi	      3596	sequencer.c	FUNCTION_95	CALL_1
0x4002290	          0x4889d7	                            mov rdi, rdx	      3596	sequencer.c	FUNCTION_95	CALL_1
0x4002293	      0xe800000000	                          call 0x4002298	      3596	sequencer.c	FUNCTION_95	CALL_1
0x4002298	          0x4885c0	                           test rax, rax	      3597	sequencer.c	FUNCTION_95	IF_1
0x400229b	            0x7409	                            je 0x40022a6	      3597	sequencer.c	FUNCTION_95	IF_1
0x400229d	        0x4883c028	                           add rax, 0x28	      3598	sequencer.c	FUNCTION_95	IF_1
0x40022a1	      0xe9be030000	                           jmp 0x4002664	      3598	sequencer.c	FUNCTION_95	IF_1
0x40022a6	          0x4d85e4	                           test r12, r12	      3613	sequencer.c	FUNCTION_95	IF_2
0x40022a9	     0xf8518010000	                           jne 0x40023c7	      3613	sequencer.c	FUNCTION_95	IF_2
0x40022af	        0x488d7b60	                   lea rdi, [rbx + 0x60]	      3616	sequencer.c	FUNCTION_95	IF_2
0x40022b3	    0x48c743680000	               mov qword [rbx + 0x68], 0	       164	strbuf.h	FUNCTION_177
0x40022bb	        0x488b4370	            mov rax, qword [rbx + 0x70] 	       165	strbuf.h	FUNCTION_177	IF_2
0x40022bf	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_177	IF_2
0x40022c5	            0x7405	                            je 0x40022cc	       165	strbuf.h	FUNCTION_177	IF_2
0x40022c7	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_177	IF_2
0x40022ca	            0xeb22	                           jmp 0x40022ee	       166	strbuf.h	FUNCTION_177	IF_2
0x40022cc	    0x803d00000000	                cmp byte [0x040022d3], 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40022d3	            0x7419	                            je 0x40022ee	       168	strbuf.h	FUNCTION_177	CALL_2
0x40022d5	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40022da	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_177	CALL_2
0x40022df	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40022e4	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40022e9	      0xe800000000	                          call 0x40022ee	       168	strbuf.h	FUNCTION_177	CALL_2
0x40022ee	      0xbe28000000	                           mov esi, 0x28	      3617	sequencer.c	FUNCTION_95	IF_2	CALL_2
0x40022f3	      0xe800000000	                          call 0x40022f8	      3617	sequencer.c	FUNCTION_95	IF_2	CALL_2
0x40022f8	        0x4c8b6370	            mov r12, qword [rbx + 0x70] 	      3618	sequencer.c	FUNCTION_95	IF_2
0x40022fc	    0x8b1500000000	            mov edx, dword [0x04002302] 	      3620	sequencer.c	FUNCTION_95	IF_2	CALL_3
0x4002302	          0x4c89f6	                            mov rsi, r14	      3620	sequencer.c	FUNCTION_95	IF_2	CALL_3
0x4002305	          0x4c89e7	                            mov rdi, r12	      3620	sequencer.c	FUNCTION_95	IF_2	CALL_3
0x4002308	      0xe800000000	                          call 0x400230d	      3620	sequencer.c	FUNCTION_95	IF_2	CALL_3
0x400230d	          0x4c89e7	                            mov rdi, r12	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_5
0x4002310	      0xe800000000	                          call 0x4002315	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_5
0x4002315	        0x4c8d7b30	                   lea r15, [rbx + 0x30]	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_5
0x4002319	        0x89442418	             mov dword [rsp + 0x18], eax	       248	hashmap.h	FUNCTION_220
0x400231d	    0x48c744241000	               mov qword [rsp + 0x10], 0	       249	hashmap.h	FUNCTION_220
0x4002326	          0x4c89e2	                            mov rdx, r12	       308	hashmap.h	FUNCTION_222	CALL_2
0x4002329	      0x488d742410	                   lea rsi, [rsp + 0x10]	       308	hashmap.h	FUNCTION_222	CALL_2
0x400232e	          0x4c89ff	                            mov rdi, r15	       308	hashmap.h	FUNCTION_222	CALL_2
0x4002331	      0xe800000000	                          call 0x4002336	       308	hashmap.h	FUNCTION_222	CALL_2
0x4002336	          0x4885c0	                           test rax, rax	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_5
0x4002339	     0xf84fb010000	                            je 0x400253a	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_5
0x400233f	      0xb800000000	                              mov eax, 0	      3627	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0x4002344	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3627	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0x400234b	          0x4c89e7	                            mov rdi, r12	      3627	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0x400234e	            0xf2ae	              repne scasb al, byte [rdi]	      3627	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0x4002350	          0x48f7d1	                                 not rcx	      3627	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0x4002353	          0x4989cd	                            mov r13, rcx	      3627	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0x4002356	        0x488d69ff	                      lea rbp, [rcx - 1]	      3627	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0x400235a	          0x4c89f6	                            mov rsi, r14	      3629	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_7
0x400235d	          0x4c89e7	                            mov rdi, r12	      3629	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_7
0x4002360	      0xe800000000	                          call 0x4002365	      3629	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_7
0x4002365	        0x4983fd27	                           cmp r13, 0x27	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x4002369	     0xf87cb010000	                            ja 0x400253a	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400236f	          0x4c01e5	                            add rbp, r12	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x4002372	      0x498d442427	                   lea rax, [r12 + 0x27]	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x4002377	      0x4889442408	                mov qword [rsp + 8], rax	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400237c	      0x440fb66d01	              movzx r13d, byte [rbp + 1]	      3631	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x4002381	        0xc6450100	                   mov byte [rbp + 1], 0	      3632	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x4002385	          0x4c89e7	                            mov rdi, r12	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x4002388	      0xe800000000	                          call 0x400238d	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x400238d	        0x89442418	             mov dword [rsp + 0x18], eax	       248	hashmap.h	FUNCTION_220
0x4002391	    0x48c744241000	               mov qword [rsp + 0x10], 0	       249	hashmap.h	FUNCTION_220
0x400239a	          0x4c89e2	                            mov rdx, r12	       308	hashmap.h	FUNCTION_222	CALL_2
0x400239d	      0x488d742410	                   lea rsi, [rsp + 0x10]	       308	hashmap.h	FUNCTION_222	CALL_2
0x40023a2	          0x4c89ff	                            mov rdi, r15	       308	hashmap.h	FUNCTION_222	CALL_2
0x40023a5	      0xe800000000	                          call 0x40023aa	       308	hashmap.h	FUNCTION_222	CALL_2
0x40023aa	          0x4885c0	                           test rax, rax	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x40023ad	     0xf8487010000	                            je 0x400253a	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x40023b3	        0x44886d01	                mov byte [rbp + 1], r13b	      3636	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x40023b7	        0x4883c501	                              add rbp, 1	      3636	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x40023bb	      0x483b6c2408	                cmp rbp, qword [rsp + 8]	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x40023c0	            0x75ba	                           jne 0x400237c	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x40023c2	      0xe973010000	                           jmp 0x400253a	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x40023c7	      0xb800000000	                              mov eax, 0	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x40023cc	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x40023d3	          0x4c89e7	                            mov rdi, r12	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x40023d6	            0xf2ae	              repne scasb al, byte [rdi]	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x40023d8	          0x48f7d1	                                 not rcx	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x40023db	        0x488d69ff	                      lea rbp, [rcx - 1]	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x40023df	        0x4883fd14	                           cmp rbp, 0x14	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x40023e3	            0x7513	                           jne 0x40023f8	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x40023e5	      0x488d742420	                   lea rsi, [rsp + 0x20]	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0x40023ea	          0x4c89e7	                            mov rdi, r12	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0x40023ed	      0xe800000000	                          call 0x40023f2	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0x40023f2	            0x85c0	                           test eax, eax	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x40023f4	            0x743e	                            je 0x4002434	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x40023f6	            0xeb0d	                           jmp 0x4002405	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x40023f8	        0x4883fd01	                              cmp rbp, 1	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0x40023fc	            0x7507	                           jne 0x4002405	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0x40023fe	      0x41803c2423	                    cmp byte [r12], 0x23	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x4002403	            0x742f	                            je 0x4002434	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x4002405	          0x4c89e7	                            mov rdi, r12	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0x4002408	      0xe800000000	                          call 0x400240d	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0x400240d	        0x89442418	             mov dword [rsp + 0x18], eax	       248	hashmap.h	FUNCTION_220
0x4002411	    0x48c744241000	               mov qword [rsp + 0x10], 0	       249	hashmap.h	FUNCTION_220
0x400241a	        0x488d7b30	                   lea rdi, [rbx + 0x30]	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0x400241e	          0x4c89e2	                            mov rdx, r12	       308	hashmap.h	FUNCTION_222	CALL_2
0x4002421	      0x488d742410	                   lea rsi, [rsp + 0x10]	       308	hashmap.h	FUNCTION_222	CALL_2
0x4002426	      0xe800000000	                          call 0x400242b	       308	hashmap.h	FUNCTION_222	CALL_2
0x400242b	          0x4885c0	                           test rax, rax	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400242e	     0xf8406010000	                            je 0x400253a	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x4002434	        0x4c8d7b60	                   lea r15, [rbx + 0x60]	      3650	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x4002438	    0x48c743680000	               mov qword [rbx + 0x68], 0	       164	strbuf.h	FUNCTION_177
0x4002440	        0x488b4370	            mov rax, qword [rbx + 0x70] 	       165	strbuf.h	FUNCTION_177	IF_2
0x4002444	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_177	IF_2
0x400244a	            0x7405	                            je 0x4002451	       165	strbuf.h	FUNCTION_177	IF_2
0x400244c	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_177	IF_2
0x400244f	            0xeb22	                           jmp 0x4002473	       166	strbuf.h	FUNCTION_177	IF_2
0x4002451	    0x803d00000000	                cmp byte [0x04002458], 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x4002458	            0x7419	                            je 0x4002473	       168	strbuf.h	FUNCTION_177	CALL_2
0x400245a	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400245f	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_177	CALL_2
0x4002464	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x4002469	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400246e	      0xe800000000	                          call 0x4002473	       168	strbuf.h	FUNCTION_177	CALL_2
0x4002473	          0x4889ea	                            mov rdx, rbp	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x4002476	          0x4c89e6	                            mov rsi, r12	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x4002479	          0x4c89ff	                            mov rdi, r15	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x400247c	      0xe800000000	                          call 0x4002481	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x4002481	    0x41bd02000000	                             mov r13d, 2	      3655	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2
0x4002487	        0x488d4330	                   lea rax, [rbx + 0x30]	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x400248b	      0x4889442408	                mov qword [rsp + 8], rax	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x4002490	        0x488b4360	            mov rax, qword [rbx + 0x60] 	       162	strbuf.h	FUNCTION_177	IF_1
0x4002494	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_177	IF_1
0x4002498	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_177	IF_1
0x400249c	          0x4839c5	                            cmp rbp, rax	       162	strbuf.h	FUNCTION_177	IF_1
0x400249f	            0x760f	                           jbe 0x40024b0	       162	strbuf.h	FUNCTION_177	IF_1
0x40024a1	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_177	CALL_1
0x40024a6	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_177	CALL_1
0x40024ab	      0xe800000000	                          call 0x40024b0	       163	strbuf.h	FUNCTION_177	CALL_1
0x40024b0	        0x48896b68	             mov qword [rbx + 0x68], rbp	       164	strbuf.h	FUNCTION_177
0x40024b4	        0x488b4370	            mov rax, qword [rbx + 0x70] 	       165	strbuf.h	FUNCTION_177	IF_2
0x40024b8	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_177	IF_2
0x40024be	            0x7406	                            je 0x40024c6	       165	strbuf.h	FUNCTION_177	IF_2
0x40024c0	        0xc6042800	                 mov byte [rax + rbp], 0	       166	strbuf.h	FUNCTION_177	IF_2
0x40024c4	            0xeb22	                           jmp 0x40024e8	       166	strbuf.h	FUNCTION_177	IF_2
0x40024c6	    0x803d00000000	                cmp byte [0x040024cd], 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40024cd	            0x7419	                            je 0x40024e8	       168	strbuf.h	FUNCTION_177	CALL_2
0x40024cf	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40024d4	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_177	CALL_2
0x40024d9	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40024de	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40024e3	      0xe800000000	                          call 0x40024e8	       168	strbuf.h	FUNCTION_177	CALL_2
0x40024e8	          0x4489ea	                           mov edx, r13d	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x40024eb	      0xbe00000000	                              mov esi, 0	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x40024f0	          0x4c89ff	                            mov rdi, r15	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x40024f3	      0xb800000000	                              mov eax, 0	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x40024f8	      0xe800000000	                          call 0x40024fd	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x40024fd	        0x4c8b6370	            mov r12, qword [rbx + 0x70] 	      3659	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_18
0x4002501	          0x4c89e7	                            mov rdi, r12	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x4002504	      0xe800000000	                          call 0x4002509	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x4002509	        0x89442418	             mov dword [rsp + 0x18], eax	       248	hashmap.h	FUNCTION_220
0x400250d	    0x48c744241000	               mov qword [rsp + 0x10], 0	       249	hashmap.h	FUNCTION_220
0x4002516	          0x4c89e2	                            mov rdx, r12	       308	hashmap.h	FUNCTION_222	CALL_2
0x4002519	      0x488d742410	                   lea rsi, [rsp + 0x10]	       308	hashmap.h	FUNCTION_222	CALL_2
0x400251e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       308	hashmap.h	FUNCTION_222	CALL_2
0x4002523	      0xe800000000	                          call 0x4002528	       308	hashmap.h	FUNCTION_222	CALL_2
0x4002528	          0x4885c0	                           test rax, rax	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x400252b	            0x7409	                            je 0x4002536	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x400252d	        0x4183c501	                             add r13d, 1	      3655	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2
0x4002531	      0xe95affffff	                           jmp 0x4002490	      3662	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2
0x4002536	        0x4c8b6370	            mov r12, qword [rbx + 0x70] 	      3664	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400253a	      0xb800000000	                              mov eax, 0	      3667	sequencer.c	FUNCTION_95
0x400253f	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3667	sequencer.c	FUNCTION_95
0x4002546	          0x4c89e7	                            mov rdi, r12	      3667	sequencer.c	FUNCTION_95
0x4002549	            0xf2ae	              repne scasb al, byte [rdi]	      3667	sequencer.c	FUNCTION_95
0x400254b	          0x48f7d1	                                 not rcx	      3667	sequencer.c	FUNCTION_95
0x400254e	        0x488d69ff	                      lea rbp, [rcx - 1]	      3667	sequencer.c	FUNCTION_95
0x4002552	        0x4883fdef	             cmp rbp, 0xffffffffffffffef	       785	git-compat-util.h	FUNCTION_133	IF_1
0x4002556	            0x7612	                           jbe 0x400256a	       785	git-compat-util.h	FUNCTION_133	IF_1
0x4002558	          0x4889ea	                            mov rdx, rbp	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400255b	      0xbe10000000	                           mov esi, 0x10	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x4002560	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x4002565	      0xe800000000	                          call 0x400256a	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400256a	        0x4883fdef	             cmp rbp, 0xffffffffffffffef	       785	git-compat-util.h	FUNCTION_133	IF_1
0x400256e	            0x751b	                           jne 0x400258b	       785	git-compat-util.h	FUNCTION_133	IF_1
0x4002570	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x4002575	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400257c	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x4002581	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x4002586	      0xe800000000	                          call 0x400258b	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400258b	        0x488d7511	                   lea rsi, [rbp + 0x11]	      3667	sequencer.c	FUNCTION_95
0x400258f	      0xbf01000000	                              mov edi, 1	      3667	sequencer.c	FUNCTION_95
0x4002594	      0xe800000000	                          call 0x4002599	      3667	sequencer.c	FUNCTION_95
0x4002599	          0x4989c5	                            mov r13, rax	      3667	sequencer.c	FUNCTION_95
0x400259c	        0x488d7810	                   lea rdi, [rax + 0x10]	        53	string3.h	FUNCTION_186	CALL_3
0x40025a0	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_186	CALL_3
0x40025a3	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_186	CALL_3
0x40025a6	      0xe800000000	                          call 0x40025ab	        53	string3.h	FUNCTION_186	CALL_3
0x40025ab	          0x4c89e7	                            mov rdi, r12	      3668	sequencer.c	FUNCTION_95	CALL_20
0x40025ae	      0xe800000000	                          call 0x40025b3	      3668	sequencer.c	FUNCTION_95	CALL_20
0x40025b3	        0x41894508	                mov dword [r13 + 8], eax	       248	hashmap.h	FUNCTION_220
0x40025b7	    0x49c745000000	                      mov qword [r13], 0	       249	hashmap.h	FUNCTION_220
0x40025bf	        0x488d7b30	                   lea rdi, [rbx + 0x30]	      3669	sequencer.c	FUNCTION_95	CALL_21
0x40025c3	          0x4c89ee	                            mov rsi, r13	      3669	sequencer.c	FUNCTION_95	CALL_21
0x40025c6	      0xe800000000	                          call 0x40025cb	      3669	sequencer.c	FUNCTION_95	CALL_21
0x40025cb	      0xb800000000	                              mov eax, 0	      3671	sequencer.c	FUNCTION_95
0x40025d0	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3671	sequencer.c	FUNCTION_95
0x40025d7	          0x4c89e7	                            mov rdi, r12	      3671	sequencer.c	FUNCTION_95
0x40025da	            0xf2ae	              repne scasb al, byte [rdi]	      3671	sequencer.c	FUNCTION_95
0x40025dc	          0x48f7d1	                                 not rcx	      3671	sequencer.c	FUNCTION_95
0x40025df	        0x4c8d69ff	                      lea r13, [rcx - 1]	      3671	sequencer.c	FUNCTION_95
0x40025e3	        0x4983fdd7	             cmp r13, 0xffffffffffffffd7	       785	git-compat-util.h	FUNCTION_133	IF_1
0x40025e7	            0x7612	                           jbe 0x40025fb	       785	git-compat-util.h	FUNCTION_133	IF_1
0x40025e9	          0x4c89ea	                            mov rdx, r13	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x40025ec	      0xbe28000000	                           mov esi, 0x28	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x40025f1	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x40025f6	      0xe800000000	                          call 0x40025fb	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x40025fb	        0x4983fdd7	             cmp r13, 0xffffffffffffffd7	       785	git-compat-util.h	FUNCTION_133	IF_1
0x40025ff	            0x751b	                           jne 0x400261c	       785	git-compat-util.h	FUNCTION_133	IF_1
0x4002601	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x4002606	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400260d	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x4002612	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x4002617	      0xe800000000	                          call 0x400261c	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400261c	        0x498d7529	                   lea rsi, [r13 + 0x29]	      3671	sequencer.c	FUNCTION_95
0x4002620	      0xbf01000000	                              mov edi, 1	      3671	sequencer.c	FUNCTION_95
0x4002625	      0xe800000000	                          call 0x400262a	      3671	sequencer.c	FUNCTION_95
0x400262a	          0x4989c7	                            mov r15, rax	      3671	sequencer.c	FUNCTION_95
0x400262d	        0x488d6828	                   lea rbp, [rax + 0x28]	      3671	sequencer.c	FUNCTION_95
0x4002631	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_186	CALL_3
0x4002634	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_186	CALL_3
0x4002637	          0x4889ef	                            mov rdi, rbp	        53	string3.h	FUNCTION_186	CALL_3
0x400263a	      0xe800000000	                          call 0x400263f	        53	string3.h	FUNCTION_186	CALL_3
0x400263f	          0x498b16	                    mov rdx, qword [r14]	        53	string3.h	FUNCTION_186	CALL_3
0x4002642	        0x49895710	             mov qword [r15 + 0x10], rdx	        53	string3.h	FUNCTION_186	CALL_3
0x4002646	        0x498b5608	                mov rdx, qword [r14 + 8]	        53	string3.h	FUNCTION_186	CALL_3
0x400264a	        0x49895718	             mov qword [r15 + 0x18], rdx	        53	string3.h	FUNCTION_186	CALL_3
0x400264e	        0x418b5610	            mov edx, dword [r14 + 0x10] 	        53	string3.h	FUNCTION_186	CALL_3
0x4002652	        0x41895720	             mov dword [r15 + 0x20], edx	        53	string3.h	FUNCTION_186	CALL_3
0x4002656	          0x4c89fe	                            mov rsi, r15	      3673	sequencer.c	FUNCTION_95	CALL_23
0x4002659	          0x4889df	                            mov rdi, rbx	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400265c	      0xe800000000	                          call 0x4002661	      3673	sequencer.c	FUNCTION_95	CALL_23
0x4002661	          0x4889e8	                            mov rax, rbp	      3675	sequencer.c	FUNCTION_95
0x4002664	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      3676	sequencer.c	FUNCTION_95
0x4002669	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3676	sequencer.c	FUNCTION_95
0x4002672	            0x7405	                            je 0x4002679	      3676	sequencer.c	FUNCTION_95
0x4002674	      0xe800000000	                          call 0x4002679	      3676	sequencer.c	FUNCTION_95
0x4002679	        0x4883c448	                           add rsp, 0x48	      3676	sequencer.c	FUNCTION_95
0x400267d	              0x5b	                                 pop rbx	      3676	sequencer.c	FUNCTION_95
0x400267e	              0x5d	                                 pop rbp	      3676	sequencer.c	FUNCTION_95
0x400267f	            0x415c	                                 pop r12	      3676	sequencer.c	FUNCTION_95
0x4002681	            0x415d	                                 pop r13	      3676	sequencer.c	FUNCTION_95
0x4002683	            0x415e	                                 pop r14	      3676	sequencer.c	FUNCTION_95
0x4002685	            0x415f	                                 pop r15	      3676	sequencer.c	FUNCTION_95
0x4002687	              0xc3	                                     ret	      3676	sequencer.c	FUNCTION_95
fast_forward_to	ELSE,0:IF,2:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,15:DO,0	104
0x4003801	            0x4156	                                push r14	       458	sequencer.c	FUNCTION_19
0x4003803	            0x4155	                                push r13	       458	sequencer.c	FUNCTION_19
0x4003805	            0x4154	                                push r12	       458	sequencer.c	FUNCTION_19
0x4003807	              0x55	                                push rbp	       458	sequencer.c	FUNCTION_19
0x4003808	              0x53	                                push rbx	       458	sequencer.c	FUNCTION_19
0x4003809	        0x4883ec40	                           sub rsp, 0x40	       458	sequencer.c	FUNCTION_19
0x400380d	          0x4989fd	                            mov r13, rdi	       458	sequencer.c	FUNCTION_19
0x4003810	          0x4889f3	                            mov rbx, rsi	       458	sequencer.c	FUNCTION_19
0x4003813	          0x4189d6	                           mov r14d, edx	       458	sequencer.c	FUNCTION_19
0x4003816	          0x4889cd	                            mov rbp, rcx	       458	sequencer.c	FUNCTION_19
0x4003819	    0x64488b042528	                mov rax, qword fs:[0x28]	       458	sequencer.c	FUNCTION_19
0x4003822	      0x4889442438	             mov qword [rsp + 0x38], rax	       458	sequencer.c	FUNCTION_19
0x4003827	            0x31c0	                            xor eax, eax	       458	sequencer.c	FUNCTION_19
0x4003829	    0x48c704240000	                      mov qword [rsp], 0	       460	sequencer.c	FUNCTION_19
0x4003831	    0x48c744240800	                  mov qword [rsp + 8], 0	       460	sequencer.c	FUNCTION_19
0x400383a	    0x48c744241000	               mov qword [rsp + 0x10], 0	       460	sequencer.c	FUNCTION_19
0x4003843	    0x48c744242000	               mov qword [rsp + 0x20], 0	       461	sequencer.c	FUNCTION_19
0x400384c	    0x48c744242800	               mov qword [rsp + 0x28], 0	       461	sequencer.c	FUNCTION_19
0x4003855	    0x48c744243000	               mov qword [rsp + 0x30], 0	       461	sequencer.c	FUNCTION_19
0x400385e	      0xbf00000000	                              mov edi, 0	       463	sequencer.c	FUNCTION_19
0x4003863	      0xe800000000	                          call 0x4003868	       463	sequencer.c	FUNCTION_19
0x4003868	      0xba01000000	                              mov edx, 1	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x400386d	          0x4c89ee	                            mov rsi, r13	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x4003870	          0x4889df	                            mov rdi, rbx	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x4003873	      0xe800000000	                          call 0x4003878	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x4003878	    0x41bcffffffff	                    mov r12d, 0xffffffff	       465	sequencer.c	FUNCTION_19	IF_1
0x400387e	            0x85c0	                           test eax, eax	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x4003880	     0xf8502010000	                           jne 0x4003988	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x4003886	          0x4889ef	                            mov rdi, rbp	       467	sequencer.c	FUNCTION_19	CALL_5
0x4003889	      0xe826ceffff	                    call sym.action_name	       467	sequencer.c	FUNCTION_19	CALL_5
0x400388e	      0xbd00000000	                              mov ebp, 0	        53	gettext.h	FUNCTION_118	IF_1
0x4003893	          0x803800	                       cmp byte [rax], 0	        52	gettext.h	FUNCTION_118	IF_1
0x4003896	            0x7415	                            je 0x40038ad	        52	gettext.h	FUNCTION_118	IF_1
0x4003898	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400389d	          0x4889c6	                            mov rsi, rax	        54	gettext.h	FUNCTION_118
0x40038a0	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40038a5	      0xe800000000	                          call 0x40038aa	        54	gettext.h	FUNCTION_118
0x40038aa	          0x4889c5	                            mov rbp, rax	        54	gettext.h	FUNCTION_118
0x40038ad	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40038b2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40038b7	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40038bc	      0xe800000000	                          call 0x40038c1	        54	gettext.h	FUNCTION_118
0x40038c1	          0x4889ea	                            mov rdx, rbp	       467	sequencer.c	FUNCTION_19	CALL_5
0x40038c4	          0x4889c6	                            mov rsi, rax	       467	sequencer.c	FUNCTION_19	CALL_5
0x40038c7	          0x4889e7	                            mov rdi, rsp	       467	sequencer.c	FUNCTION_19	CALL_5
0x40038ca	      0xb800000000	                              mov eax, 0	       467	sequencer.c	FUNCTION_19	CALL_5
0x40038cf	      0xe800000000	                          call 0x40038d4	       467	sequencer.c	FUNCTION_19	CALL_5
0x40038d4	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       469	sequencer.c	FUNCTION_19	CALL_6
0x40038d9	      0xe800000000	                          call 0x40038de	       469	sequencer.c	FUNCTION_19	CALL_6
0x40038de	          0x4889c5	                            mov rbp, rax	       469	sequencer.c	FUNCTION_19	CALL_6
0x40038e1	          0x4885c0	                           test rax, rax	       470	sequencer.c	FUNCTION_19	IF_2
0x40038e4	            0x744d	                            je 0x4003933	       470	sequencer.c	FUNCTION_19	IF_2
0x40038e6	          0x4585f6	                         test r14d, r14d	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x40038e9	      0xb900000000	                              mov ecx, 0	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x40038ee	        0x480f44cb	                          cmove rcx, rbx	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x40038f2	        0x4883ec08	                              sub rsp, 8	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x40038f6	      0x488d442428	                   lea rax, [rsp + 0x28]	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x40038fb	              0x50	                                push rax	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x40038fc	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x4003901	    0x41b800000000	                              mov r8d, 0	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x4003907	          0x4c89ea	                            mov rdx, r13	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x400390a	      0xbe00000000	                              mov esi, 0	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x400390f	          0x4889ef	                            mov rdi, rbp	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x4003912	      0xe800000000	                          call 0x4003917	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x4003917	        0x4883c410	                           add rsp, 0x10	       470	sequencer.c	FUNCTION_19	IF_2
0x400391b	            0x85c0	                           test eax, eax	       470	sequencer.c	FUNCTION_19	IF_2
0x400391d	            0x7514	                           jne 0x4003933	       470	sequencer.c	FUNCTION_19	IF_2
0x400391f	      0x488d742420	                   lea rsi, [rsp + 0x20]	       474	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x4003924	          0x4889ef	                            mov rdi, rbp	       474	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x4003927	      0xe800000000	                          call 0x400392c	       474	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x400392c	          0x4189c4	                           mov r12d, eax	       474	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x400392f	            0x85c0	                           test eax, eax	       473	sequencer.c	FUNCTION_19	IF_2
0x4003931	            0x7436	                            je 0x4003969	       473	sequencer.c	FUNCTION_19	IF_2
0x4003933	          0x4889ef	                            mov rdi, rbp	       475	sequencer.c	FUNCTION_19	IF_2	CALL_9
0x4003936	      0xe800000000	                          call 0x400393b	       475	sequencer.c	FUNCTION_19	IF_2	CALL_9
0x400393b	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       476	sequencer.c	FUNCTION_19	IF_2
0x4003940	      0xbf00000000	                              mov edi, 0	       476	sequencer.c	FUNCTION_19	IF_2
0x4003945	      0xb800000000	                              mov eax, 0	       476	sequencer.c	FUNCTION_19	IF_2
0x400394a	      0xe800000000	                          call 0x400394f	       476	sequencer.c	FUNCTION_19	IF_2
0x400394f	          0x4889e7	                            mov rdi, rsp	       477	sequencer.c	FUNCTION_19	IF_2	CALL_10
0x4003952	      0xe800000000	                          call 0x4003957	       477	sequencer.c	FUNCTION_19	IF_2	CALL_10
0x4003957	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       478	sequencer.c	FUNCTION_19	IF_2	CALL_11
0x400395c	      0xe800000000	                          call 0x4003961	       478	sequencer.c	FUNCTION_19	IF_2	CALL_11
0x4003961	    0x41bcffffffff	                    mov r12d, 0xffffffff	       479	sequencer.c	FUNCTION_19	IF_2
0x4003967	            0xeb1f	                           jmp 0x4003988	       479	sequencer.c	FUNCTION_19	IF_2
0x4003969	          0x4889e7	                            mov rdi, rsp	       482	sequencer.c	FUNCTION_19	CALL_12
0x400396c	      0xe800000000	                          call 0x4003971	       482	sequencer.c	FUNCTION_19	CALL_12
0x4003971	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       483	sequencer.c	FUNCTION_19	CALL_13
0x4003976	      0xe800000000	                          call 0x400397b	       483	sequencer.c	FUNCTION_19	CALL_13
0x400397b	          0x4889ef	                            mov rdi, rbp	       484	sequencer.c	FUNCTION_19	CALL_14
0x400397e	      0xe800000000	                          call 0x4003983	       484	sequencer.c	FUNCTION_19	CALL_14
0x4003983	      0xe8e4fdffff	       call sym.update_abort_safety_file	       485	sequencer.c	FUNCTION_19	CALL_15
0x4003988	          0x4489e0	                           mov eax, r12d	       487	sequencer.c	FUNCTION_19
0x400398b	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	       487	sequencer.c	FUNCTION_19
0x4003990	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       487	sequencer.c	FUNCTION_19
0x4003999	            0x7405	                            je 0x40039a0	       487	sequencer.c	FUNCTION_19
0x400399b	      0xe800000000	                          call 0x40039a0	       487	sequencer.c	FUNCTION_19
0x40039a0	        0x4883c440	                           add rsp, 0x40	       487	sequencer.c	FUNCTION_19
0x40039a4	              0x5b	                                 pop rbx	       487	sequencer.c	FUNCTION_19
0x40039a5	              0x5d	                                 pop rbp	       487	sequencer.c	FUNCTION_19
0x40039a6	            0x415c	                                 pop r12	       487	sequencer.c	FUNCTION_19
0x40039a8	            0x415d	                                 pop r13	       487	sequencer.c	FUNCTION_19
0x40039aa	            0x415e	                                 pop r14	       487	sequencer.c	FUNCTION_19
0x40039ac	              0xc3	                                     ret	       487	sequencer.c	FUNCTION_19
template_untouched	ELSE,0:IF,3:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,5:DO,0	55
0x4003fb8	              0x55	                                push rbp	       827	sequencer.c	FUNCTION_29
0x4003fb9	              0x53	                                push rbx	       827	sequencer.c	FUNCTION_29
0x4003fba	        0x4883ec28	                           sub rsp, 0x28	       827	sequencer.c	FUNCTION_29
0x4003fbe	          0x4889fd	                            mov rbp, rdi	       827	sequencer.c	FUNCTION_29
0x4003fc1	            0x89d3	                            mov ebx, edx	       827	sequencer.c	FUNCTION_29
0x4003fc3	    0x64488b042528	                mov rax, qword fs:[0x28]	       827	sequencer.c	FUNCTION_29
0x4003fcc	      0x4889442418	             mov qword [rsp + 0x18], rax	       827	sequencer.c	FUNCTION_29
0x4003fd1	            0x31c0	                            xor eax, eax	       827	sequencer.c	FUNCTION_29
0x4003fd3	    0x48c704240000	                      mov qword [rsp], 0	       828	sequencer.c	FUNCTION_29
0x4003fdb	    0x48c744240800	                  mov qword [rsp + 8], 0	       828	sequencer.c	FUNCTION_29
0x4003fe4	    0x48c744241000	               mov qword [rsp + 0x10], 0	       828	sequencer.c	FUNCTION_29
0x4003fed	          0x83fa01	                              cmp edx, 1	       831	sequencer.c	FUNCTION_29	IF_1
0x4003ff0	            0x7507	                           jne 0x4003ff9	       831	sequencer.c	FUNCTION_29	IF_1
0x4003ff2	      0x48837f0800	                  cmp qword [rdi + 8], 0	       831	sequencer.c	FUNCTION_29	IF_1
0x4003ff7	            0x7571	                           jne 0x400406a	       831	sequencer.c	FUNCTION_29	IF_1
0x4003ff9	      0xb800000000	                              mov eax, 0	       835	sequencer.c	FUNCTION_29	IF_2
0x4003ffe	          0x4885f6	                           test rsi, rsi	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x4004001	            0x7467	                            je 0x400406a	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x4004003	      0xba00000000	                              mov edx, 0	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x4004008	          0x4889e7	                            mov rdi, rsp	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x400400b	      0xe800000000	                          call 0x4004010	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x4004010	          0x4889c2	                            mov rdx, rax	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x4004013	      0xb800000000	                              mov eax, 0	       835	sequencer.c	FUNCTION_29	IF_2
0x4004018	          0x4885d2	                           test rdx, rdx	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x400401b	            0x7e4d	                           jle 0x400406a	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x400401d	          0x83fb03	                              cmp ebx, 3	       837	sequencer.c	FUNCTION_29	CALL_2
0x4004020	        0x400f94c6	                                sete sil	       837	sequencer.c	FUNCTION_29	CALL_2
0x4004024	        0x400fb6f6	                          movzx esi, sil	       837	sequencer.c	FUNCTION_29	CALL_2
0x4004028	          0x4889e7	                            mov rdi, rsp	       837	sequencer.c	FUNCTION_29	CALL_2
0x400402b	      0xe800000000	                          call 0x4004030	       837	sequencer.c	FUNCTION_29	CALL_2
0x4004030	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x4004035	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x4004039	          0x4889cb	                            mov rbx, rcx	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x400403c	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x400403f	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x4004041	            0x7410	                            je 0x4004053	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x4004043	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4004047	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400404b	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400404e	            0x74ec	                            je 0x400403c	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4004050	          0x4889cb	                            mov rbx, rcx	       839	sequencer.c	FUNCTION_29	IF_3
0x4004053	          0x4889e7	                            mov rdi, rsp	       840	sequencer.c	FUNCTION_29	CALL_4
0x4004056	      0xe800000000	                          call 0x400405b	       840	sequencer.c	FUNCTION_29	CALL_4
0x400405b	          0x4889de	                            mov rsi, rbx	       841	sequencer.c	FUNCTION_29	CALL_5
0x400405e	        0x482b7510	             sub rsi, qword [rbp + 0x10]	       841	sequencer.c	FUNCTION_29	CALL_5
0x4004062	          0x4889ef	                            mov rdi, rbp	       841	sequencer.c	FUNCTION_29	CALL_5
0x4004065	      0xe81ec7ffff	                  call sym.rest_is_empty	       841	sequencer.c	FUNCTION_29	CALL_5
0x400406a	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       842	sequencer.c	FUNCTION_29
0x400406f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       842	sequencer.c	FUNCTION_29
0x4004078	            0x7405	                            je 0x400407f	       842	sequencer.c	FUNCTION_29
0x400407a	      0xe800000000	                          call 0x400407f	       842	sequencer.c	FUNCTION_29
0x400407f	        0x4883c428	                           add rsp, 0x28	       842	sequencer.c	FUNCTION_29
0x4004083	              0x5b	                                 pop rbx	       842	sequencer.c	FUNCTION_29
0x4004084	              0x5d	                                 pop rbp	       842	sequencer.c	FUNCTION_29
0x4004085	              0xc3	                                     ret	       842	sequencer.c	FUNCTION_29
short_commit_name	ELSE,0:IF,0:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,1:DO,0	6
0x40016b0	        0x4883ec08	                              sub rsp, 8	       311	sequencer.c	FUNCTION_10
0x40016b4	        0x4883c704	                              add rdi, 4	       312	sequencer.c	FUNCTION_10	CALL_1
0x40016b8	    0x8b3500000000	            mov esi, dword [0x040016be] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x40016be	      0xe800000000	                          call 0x40016c3	       312	sequencer.c	FUNCTION_10	CALL_1
0x40016c3	        0x4883c408	                              add rsp, 8	       313	sequencer.c	FUNCTION_10
0x40016c7	              0xc3	                                     ret	       313	sequencer.c	FUNCTION_10
get_item_line_offset	ELSE,0:IF,0:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,0:DO,0	10
0x4000040	          0x397720	            cmp dword [rdi + 0x20], esi 	      1937	sequencer.c	FUNCTION_56
0x4000043	            0x7e13	                           jle 0x4000058	      1937	sequencer.c	FUNCTION_56
0x4000045	          0x4863f6	                         movsxd rsi, esi	      1938	sequencer.c	FUNCTION_56
0x4000048	        0x488d0476	                  lea rax, [rsi + rsi*2]	      1938	sequencer.c	FUNCTION_56
0x400004c	        0x48c1e004	                              shl rax, 4	      1938	sequencer.c	FUNCTION_56
0x4000050	        0x48034718	             add rax, qword [rdi + 0x18]	      1938	sequencer.c	FUNCTION_56
0x4000054	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1937	sequencer.c	FUNCTION_56
0x4000057	              0xc3	                                     ret	      1937	sequencer.c	FUNCTION_56
0x4000058	          0x8b4708	                mov eax, dword [rdi + 8]	      1937	sequencer.c	FUNCTION_56
0x400005b	              0xc3	                                     ret	      1939	sequencer.c	FUNCTION_56
is_original_commit_empty	ELSE,1:IF,3:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,9:DO,0	63
0x40015c8	              0x55	                                push rbp	      1241	sequencer.c	FUNCTION_39
0x40015c9	              0x53	                                push rbx	      1241	sequencer.c	FUNCTION_39
0x40015ca	        0x4883ec08	                              sub rsp, 8	      1241	sequencer.c	FUNCTION_39
0x40015ce	          0x4889fb	                            mov rbx, rdi	      1241	sequencer.c	FUNCTION_39
0x40015d1	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_147	CALL_1
0x40015d6	      0xe800000000	                          call 0x40015db	        75	commit.h	FUNCTION_147	CALL_1
0x40015db	            0x85c0	                           test eax, eax	      1244	sequencer.c	FUNCTION_39	IF_1	CALL_1
0x40015dd	            0x743a	                            je 0x4001619	      1244	sequencer.c	FUNCTION_39	IF_1	CALL_1
0x40015df	        0x488d7b04	                      lea rdi, [rbx + 4]	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x40015e3	      0xe800000000	                          call 0x40015e8	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x40015e8	          0x4889c3	                            mov rbx, rax	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x40015eb	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40015f0	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40015f5	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40015fa	      0xe800000000	                          call 0x40015ff	        54	gettext.h	FUNCTION_118
0x40015ff	          0x4889de	                            mov rsi, rbx	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x4001602	          0x4889c7	                            mov rdi, rax	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x4001605	      0xb800000000	                              mov eax, 0	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x400160a	      0xe800000000	                          call 0x400160f	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x400160f	      0xb8ffffffff	                     mov eax, 0xffffffff	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x4001614	      0xe990000000	                           jmp 0x40016a9	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x4001619	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      1247	sequencer.c	FUNCTION_39	IF_2
0x400161d	          0x4885c0	                           test rax, rax	      1247	sequencer.c	FUNCTION_39	IF_2
0x4001620	            0x7458	                            je 0x400167a	      1247	sequencer.c	FUNCTION_39	IF_2
0x4001622	          0x488b28	                    mov rbp, qword [rax]	      1248	sequencer.c	FUNCTION_39	IF_2
0x4001625	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_147	CALL_1
0x400162a	          0x4889ef	                            mov rdi, rbp	        75	commit.h	FUNCTION_147	CALL_1
0x400162d	      0xe800000000	                          call 0x4001632	        75	commit.h	FUNCTION_147	CALL_1
0x4001632	            0x85c0	                           test eax, eax	      1249	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_4
0x4001634	            0x7437	                            je 0x400166d	      1249	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_4
0x4001636	        0x488d7d04	                      lea rdi, [rbp + 4]	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x400163a	      0xe800000000	                          call 0x400163f	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x400163f	          0x4889c3	                            mov rbx, rax	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4001642	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4001647	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400164c	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4001651	      0xe800000000	                          call 0x4001656	        54	gettext.h	FUNCTION_118
0x4001656	          0x4889de	                            mov rsi, rbx	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4001659	          0x4889c7	                            mov rdi, rax	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x400165c	      0xb800000000	                              mov eax, 0	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4001661	      0xe800000000	                          call 0x4001666	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4001666	      0xb8ffffffff	                     mov eax, 0xffffffff	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x400166b	            0xeb3c	                           jmp 0x40016a9	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x400166d	          0x4889ef	                            mov rdi, rbp	      1252	sequencer.c	FUNCTION_39	IF_2	CALL_7
0x4001670	      0xe800000000	                          call 0x4001675	      1252	sequencer.c	FUNCTION_39	IF_2	CALL_7
0x4001675	          0x4889c5	                            mov rbp, rax	      1252	sequencer.c	FUNCTION_39	IF_2	CALL_7
0x4001678	            0xeb0f	                           jmp 0x4001689	      1252	sequencer.c	FUNCTION_39	IF_2	CALL_7
0x400167a	    0x488b05000000	            mov rax, qword [0x04001681] 	      1254	sequencer.c	FUNCTION_39	ELSE_1
0x4001681	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1254	sequencer.c	FUNCTION_39	ELSE_1
0x4001685	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      1254	sequencer.c	FUNCTION_39	ELSE_1
0x4001689	          0x4889df	                            mov rdi, rbx	      1257	sequencer.c	FUNCTION_39	CALL_9
0x400168c	      0xe800000000	                          call 0x4001691	      1257	sequencer.c	FUNCTION_39	CALL_9
0x4001691	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_155	CALL_1
0x4001696	          0x4889c6	                            mov rsi, rax	       975	cache.h	FUNCTION_155	CALL_1
0x4001699	          0x4889ef	                            mov rdi, rbp	       975	cache.h	FUNCTION_155	CALL_1
0x400169c	      0xe800000000	                          call 0x40016a1	       975	cache.h	FUNCTION_155	CALL_1
0x40016a1	            0x85c0	                           test eax, eax	      1257	sequencer.c	FUNCTION_39	CALL_9
0x40016a3	           0xf94c0	                                 sete al	      1257	sequencer.c	FUNCTION_39	CALL_9
0x40016a6	           0xfb6c0	                           movzx eax, al	      1257	sequencer.c	FUNCTION_39	CALL_9
0x40016a9	        0x4883c408	                              add rsp, 8	      1258	sequencer.c	FUNCTION_39
0x40016ad	              0x5b	                                 pop rbx	      1258	sequencer.c	FUNCTION_39
0x40016ae	              0x5d	                                 pop rbp	      1258	sequencer.c	FUNCTION_39
0x40016af	              0xc3	                                     ret	      1258	sequencer.c	FUNCTION_39
update_abort_safety_file	ELSE,1:IF,2:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,8:DO,0	38
0x400376c	              0x53	                                push rbx	       443	sequencer.c	FUNCTION_18
0x400376d	        0x4883ec20	                           sub rsp, 0x20	       443	sequencer.c	FUNCTION_18
0x4003771	    0x64488b042528	                mov rax, qword fs:[0x28]	       443	sequencer.c	FUNCTION_18
0x400377a	      0x4889442418	             mov qword [rsp + 0x18], rax	       443	sequencer.c	FUNCTION_18
0x400377f	            0x31c0	                            xor eax, eax	       443	sequencer.c	FUNCTION_18
0x4003781	      0xe800000000	                          call 0x4003786	       447	sequencer.c	FUNCTION_18	IF_1	CALL_2
0x4003786	          0x4889c7	                            mov rdi, rax	       447	sequencer.c	FUNCTION_18	IF_1	CALL_2
0x4003789	      0xe800000000	                          call 0x400378e	       447	sequencer.c	FUNCTION_18	IF_1	CALL_2
0x400378e	            0x85c0	                           test eax, eax	       447	sequencer.c	FUNCTION_18	IF_1	CALL_2
0x4003790	            0x7454	                            je 0x40037e6	       447	sequencer.c	FUNCTION_18	IF_1	CALL_2
0x4003792	          0x4889e6	                            mov rsi, rsp	       450	sequencer.c	FUNCTION_18	IF_2	CALL_3
0x4003795	      0xbf00000000	                              mov edi, 0	       450	sequencer.c	FUNCTION_18	IF_2	CALL_3
0x400379a	      0xe800000000	                          call 0x400379f	       450	sequencer.c	FUNCTION_18	IF_2	CALL_3
0x400379f	            0x85c0	                           test eax, eax	       450	sequencer.c	FUNCTION_18	IF_2	CALL_3
0x40037a1	            0x7527	                           jne 0x40037ca	       450	sequencer.c	FUNCTION_18	IF_2	CALL_3
0x40037a3	          0x4889e7	                            mov rdi, rsp	       451	sequencer.c	FUNCTION_18	CALL_6
0x40037a6	      0xe800000000	                          call 0x40037ab	       451	sequencer.c	FUNCTION_18	CALL_6
0x40037ab	          0x4889c3	                            mov rbx, rax	       451	sequencer.c	FUNCTION_18	CALL_6
0x40037ae	      0xe852c9ffff	     call sym.git_path_abort_safety_file	       451	sequencer.c	FUNCTION_18	CALL_6
0x40037b3	          0x4889da	                            mov rdx, rbx	       451	sequencer.c	FUNCTION_18	CALL_6
0x40037b6	      0xbe00000000	                              mov esi, 0	       451	sequencer.c	FUNCTION_18	CALL_6
0x40037bb	          0x4889c7	                            mov rdi, rax	       451	sequencer.c	FUNCTION_18	CALL_6
0x40037be	      0xb800000000	                              mov eax, 0	       451	sequencer.c	FUNCTION_18	CALL_6
0x40037c3	      0xe800000000	                          call 0x40037c8	       451	sequencer.c	FUNCTION_18	CALL_6
0x40037c8	            0xeb1c	                           jmp 0x40037e6	       451	sequencer.c	FUNCTION_18	CALL_6
0x40037ca	      0xe836c9ffff	     call sym.git_path_abort_safety_file	       453	sequencer.c	FUNCTION_18	CALL_8
0x40037cf	      0xba00000000	                              mov edx, 0	       453	sequencer.c	FUNCTION_18	CALL_8
0x40037d4	      0xbe00000000	                              mov esi, 0	       453	sequencer.c	FUNCTION_18	CALL_8
0x40037d9	          0x4889c7	                            mov rdi, rax	       453	sequencer.c	FUNCTION_18	CALL_8
0x40037dc	      0xb800000000	                              mov eax, 0	       453	sequencer.c	FUNCTION_18	CALL_8
0x40037e1	      0xe800000000	                          call 0x40037e6	       453	sequencer.c	FUNCTION_18	CALL_8
0x40037e6	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       454	sequencer.c	FUNCTION_18
0x40037eb	    0x644833042528	                xor rax, qword fs:[0x28]	       454	sequencer.c	FUNCTION_18
0x40037f4	            0x7405	                            je 0x40037fb	       454	sequencer.c	FUNCTION_18
0x40037f6	      0xe800000000	                          call 0x40037fb	       454	sequencer.c	FUNCTION_18
0x40037fb	        0x4883c420	                           add rsp, 0x20	       454	sequencer.c	FUNCTION_18
0x40037ff	              0x5b	                                 pop rbx	       454	sequencer.c	FUNCTION_18
0x4003800	              0xc3	                                     ret	       454	sequencer.c	FUNCTION_18
record_in_rewritten	ELSE,0:IF,2:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,6:DO,0	30
0x40029ba	            0x4154	                                push r12	      1482	sequencer.c	FUNCTION_47
0x40029bc	              0x55	                                push rbp	      1482	sequencer.c	FUNCTION_47
0x40029bd	              0x53	                                push rbx	      1482	sequencer.c	FUNCTION_47
0x40029be	          0x4989fc	                            mov r12, rdi	      1482	sequencer.c	FUNCTION_47
0x40029c1	            0x89f5	                            mov ebp, esi	      1482	sequencer.c	FUNCTION_47
0x40029c3	      0xe8e1d9ffff	  call sym.rebase_path_rewritten_pending	      1483	sequencer.c	FUNCTION_47	CALL_2
0x40029c8	      0xbe00000000	                              mov esi, 0	      1483	sequencer.c	FUNCTION_47	CALL_2
0x40029cd	          0x4889c7	                            mov rdi, rax	      1483	sequencer.c	FUNCTION_47	CALL_2
0x40029d0	      0xe800000000	                          call 0x40029d5	      1483	sequencer.c	FUNCTION_47	CALL_2
0x40029d5	          0x4885c0	                           test rax, rax	      1485	sequencer.c	FUNCTION_47	IF_1
0x40029d8	            0x743a	                            je 0x4002a14	      1485	sequencer.c	FUNCTION_47	IF_1
0x40029da	          0x4889c3	                            mov rbx, rax	      1485	sequencer.c	FUNCTION_47	IF_1
0x40029dd	          0x4c89e7	                            mov rdi, r12	      1488	sequencer.c	FUNCTION_47	CALL_3
0x40029e0	      0xe800000000	                          call 0x40029e5	      1488	sequencer.c	FUNCTION_47	CALL_3
0x40029e5	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_575
0x40029e8	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_575
0x40029ed	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_575
0x40029f2	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_575
0x40029f5	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_575
0x40029fa	      0xe800000000	                          call 0x40029ff	        97	stdio2.h	CALL_575
0x40029ff	          0x4889df	                            mov rdi, rbx	      1489	sequencer.c	FUNCTION_47	CALL_4
0x4002a02	      0xe800000000	                          call 0x4002a07	      1489	sequencer.c	FUNCTION_47	CALL_4
0x4002a07	          0x83ed04	                              sub ebp, 4	      1491	sequencer.c	FUNCTION_47	IF_2	CALL_5
0x4002a0a	          0x83fd01	                              cmp ebp, 1	      1491	sequencer.c	FUNCTION_47	IF_2	CALL_5
0x4002a0d	            0x7605	                           jbe 0x4002a14	      1491	sequencer.c	FUNCTION_47	IF_2	CALL_5
0x4002a0f	      0xe8c0e7ffff	        call sym.flush_rewritten_pending	      1492	sequencer.c	FUNCTION_47	CALL_6
0x4002a14	              0x5b	                                 pop rbx	      1493	sequencer.c	FUNCTION_47
0x4002a15	              0x5d	                                 pop rbp	      1493	sequencer.c	FUNCTION_47
0x4002a16	            0x415c	                                 pop r12	      1493	sequencer.c	FUNCTION_47
0x4002a18	              0xc3	                                     ret	      1493	sequencer.c	FUNCTION_47
transform_todos	ELSE,3:IF,8:FOR,1:WHILE,0:SWITCH,0:functions,0:CALL,20:DO,0	189
0x400ac2b	            0x4157	                                push r15	      4008	sequencer.c	FUNCTION_99
0x400ac2d	            0x4156	                                push r14	      4008	sequencer.c	FUNCTION_99
0x400ac2f	            0x4155	                                push r13	      4008	sequencer.c	FUNCTION_99
0x400ac31	            0x4154	                                push r12	      4008	sequencer.c	FUNCTION_99
0x400ac33	              0x55	                                push rbp	      4008	sequencer.c	FUNCTION_99
0x400ac34	              0x53	                                push rbx	      4008	sequencer.c	FUNCTION_99
0x400ac35	    0x4881ec980000	                           sub rsp, 0x98	      4008	sequencer.c	FUNCTION_99
0x400ac3c	          0x4189fd	                           mov r13d, edi	      4008	sequencer.c	FUNCTION_99
0x400ac3f	    0x64488b042528	                mov rax, qword fs:[0x28]	      4008	sequencer.c	FUNCTION_99
0x400ac48	    0x488984248800	             mov qword [rsp + 0x88], rax	      4008	sequencer.c	FUNCTION_99
0x400ac50	            0x31c0	                            xor eax, eax	      4008	sequencer.c	FUNCTION_99
0x400ac52	      0xe86e56ffff	               call sym.rebase_path_todo	      4009	sequencer.c	FUNCTION_99	CALL_1
0x400ac57	          0x4889c6	                            mov rsi, rax	      4009	sequencer.c	FUNCTION_99	CALL_1
0x400ac5a	      0x4889442408	                mov qword [rsp + 8], rax	      4009	sequencer.c	FUNCTION_99	CALL_1
0x400ac5f	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      4010	sequencer.c	FUNCTION_99
0x400ac64	      0xb90b000000	                            mov ecx, 0xb	      4010	sequencer.c	FUNCTION_99
0x400ac69	      0xb800000000	                              mov eax, 0	      4010	sequencer.c	FUNCTION_99
0x400ac6e	          0xf348ab	              rep stosq qword [rdi], rax	      4010	sequencer.c	FUNCTION_99
0x400ac71	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4010	sequencer.c	FUNCTION_99
0x400ac7a	    0x48c744241000	               mov qword [rsp + 0x10], 0	      4011	sequencer.c	FUNCTION_99
0x400ac83	    0x48c744241800	               mov qword [rsp + 0x18], 0	      4011	sequencer.c	FUNCTION_99
0x400ac8c	    0x48c744242000	               mov qword [rsp + 0x20], 0	      4011	sequencer.c	FUNCTION_99
0x400ac95	      0xba00000000	                              mov edx, 0	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0x400ac9a	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0x400ac9f	      0xe800000000	                          call 0x400aca4	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0x400aca4	          0x4885c0	                           test rax, rax	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0x400aca7	            0x7930	                           jns 0x400acd9	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0x400aca9	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400acae	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400acb3	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x400acb8	      0xe800000000	                          call 0x400acbd	        54	gettext.h	FUNCTION_118
0x400acbd	      0x488b742408	                mov rsi, qword [rsp + 8]	      4016	sequencer.c	FUNCTION_99	CALL_3
0x400acc2	          0x4889c7	                            mov rdi, rax	      4016	sequencer.c	FUNCTION_99	CALL_3
0x400acc5	      0xb800000000	                              mov eax, 0	      4016	sequencer.c	FUNCTION_99	CALL_3
0x400acca	      0xe800000000	                          call 0x400accf	      4016	sequencer.c	FUNCTION_99	CALL_3
0x400accf	      0xb8ffffffff	                     mov eax, 0xffffffff	      4016	sequencer.c	FUNCTION_99	CALL_3
0x400acd4	      0xe942020000	                           jmp 0x400af1b	      4016	sequencer.c	FUNCTION_99	CALL_3
0x400acd9	      0x488d742430	                   lea rsi, [rsp + 0x30]	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_4
0x400acde	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_4
0x400ace3	      0xe8317dffff	              call sym.parse_insn_buffer	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_4
0x400ace8	            0x85c0	                           test eax, eax	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_4
0x400acea	            0x743a	                            je 0x400ad26	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_4
0x400acec	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      4019	sequencer.c	FUNCTION_99	IF_2	CALL_5
0x400acf1	      0xe89459ffff	              call sym.todo_list_release	      4019	sequencer.c	FUNCTION_99	IF_2	CALL_5
0x400acf6	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400acfb	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400ad00	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x400ad05	      0xe800000000	                          call 0x400ad0a	        54	gettext.h	FUNCTION_118
0x400ad0a	      0x488b742408	                mov rsi, qword [rsp + 8]	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400ad0f	          0x4889c7	                            mov rdi, rax	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400ad12	      0xb800000000	                              mov eax, 0	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400ad17	      0xe800000000	                          call 0x400ad1c	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400ad1c	      0xb8ffffffff	                     mov eax, 0xffffffff	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400ad21	      0xe9f5010000	                           jmp 0x400af1b	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400ad26	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400ad2b	      0x837c245000	               cmp dword [rsp + 0x50], 0	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400ad30	     0xf8ebe010000	                           jle 0x400aef4	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400ad36	      0xbd00000000	                              mov ebp, 0	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400ad3b	          0x4589ee	                          mov r14d, r13d	      4031	sequencer.c	FUNCTION_99	FOR_1	IF_4
0x400ad3e	        0x4183e604	                             and r14d, 4	      4031	sequencer.c	FUNCTION_99	FOR_1	IF_4
0x400ad42	        0x4183e502	                             and r13d, 2	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_12
0x400ad46	    0x49c7c7ffffff	             mov r15, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_179	CALL_2
0x400ad4d	            0x8b3b	                    mov edi, dword [rbx]	      4025	sequencer.c	FUNCTION_99	FOR_1	IF_3
0x400ad4f	          0x83ff0b	                            cmp edi, 0xb	      4025	sequencer.c	FUNCTION_99	FOR_1	IF_3
0x400ad52	            0x7620	                           jbe 0x400ad74	      4025	sequencer.c	FUNCTION_99	FOR_1	IF_3
0x400ad54	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400ad58	          0x8b5320	            mov edx, dword [rbx + 0x20] 	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400ad5b	      0xbe00000000	                              mov esi, 0	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400ad60	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400ad65	      0xb800000000	                              mov eax, 0	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400ad6a	      0xe800000000	                          call 0x400ad6f	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400ad6f	      0xe96f010000	                           jmp 0x400aee3	      4027	sequencer.c	FUNCTION_99	FOR_1	IF_3
0x400ad74	          0x4585f6	                         test r14d, r14d	      4031	sequencer.c	FUNCTION_99	FOR_1	IF_4
0x400ad77	            0x7467	                            je 0x400ade0	      4031	sequencer.c	FUNCTION_99	FOR_1	IF_4
0x400ad79	            0x89ff	                            mov edi, edi	      1351	sequencer.c	FUNCTION_42	IF_1
0x400ad7b	        0x48c1e704	                              shl rdi, 4	      1351	sequencer.c	FUNCTION_42	IF_1
0x400ad7f	    0x440fb6a70000	                  movzx r12d, byte [rdi]	      1351	sequencer.c	FUNCTION_42	IF_1
0x400ad87	          0x4584e4	                         test r12b, r12b	      1353	sequencer.c	FUNCTION_42
0x400ad8a	     0xfb605000000	           movzx eax, byte [0x0400ad91] 	      1353	sequencer.c	FUNCTION_42
0x400ad91	        0x440f44e0	                         cmove r12d, eax	      1353	sequencer.c	FUNCTION_42
0x400ad95	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       141	strbuf.h	FUNCTION_176
0x400ad9a	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_176
0x400ad9d	            0x740b	                            je 0x400adaa	       141	strbuf.h	FUNCTION_176
0x400ad9f	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x400ada3	      0x4839442418	            cmp qword [rsp + 0x18], rax 	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x400ada8	            0x750f	                           jne 0x400adb9	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x400adaa	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_178	CALL_2
0x400adaf	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       228	strbuf.h	FUNCTION_178	CALL_2
0x400adb4	      0xe800000000	                          call 0x400adb9	       228	strbuf.h	FUNCTION_178	CALL_2
0x400adb9	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       229	strbuf.h	FUNCTION_178
0x400adbe	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_178
0x400adc2	      0x4889542418	             mov qword [rsp + 0x18], rdx	       229	strbuf.h	FUNCTION_178
0x400adc7	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       229	strbuf.h	FUNCTION_178
0x400adcc	        0x44882402	              mov byte [rdx + rax], r12b	       229	strbuf.h	FUNCTION_178
0x400add0	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       230	strbuf.h	FUNCTION_178
0x400add5	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       230	strbuf.h	FUNCTION_178
0x400adda	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_178
0x400adde	            0xeb29	                           jmp 0x400ae09	       230	strbuf.h	FUNCTION_178
0x400ade0	      0xe81b59ffff	              call sym.command_to_string	      4034	sequencer.c	FUNCTION_99	FOR_1	CALL_11
0x400ade5	          0x4889c6	                            mov rsi, rax	      4034	sequencer.c	FUNCTION_99	FOR_1	CALL_11
0x400ade8	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x400aded	          0x4c89f9	                            mov rcx, r15	       279	strbuf.h	FUNCTION_179	CALL_2
0x400adf0	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_179	CALL_2
0x400adf3	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400adf5	          0x4889c8	                            mov rax, rcx	       279	strbuf.h	FUNCTION_179	CALL_2
0x400adf8	          0x48f7d0	                                 not rax	       279	strbuf.h	FUNCTION_179	CALL_2
0x400adfb	        0x488d50ff	                      lea rdx, [rax - 1]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400adff	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400ae04	      0xe800000000	                          call 0x400ae09	       279	strbuf.h	FUNCTION_179	CALL_2
0x400ae09	        0x488b7b08	                mov rdi, qword [rbx + 8]	      4037	sequencer.c	FUNCTION_99	FOR_1	IF_5
0x400ae0d	          0x4885ff	                           test rdi, rdi	      4037	sequencer.c	FUNCTION_99	FOR_1	IF_5
0x400ae10	            0x7467	                            je 0x400ae79	      4037	sequencer.c	FUNCTION_99	FOR_1	IF_5
0x400ae12	          0x4585ed	                         test r13d, r13d	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_12
0x400ae15	            0x740a	                            je 0x400ae21	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_12
0x400ae17	      0xe89468ffff	              call sym.short_commit_name	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_12
0x400ae1c	          0x4989c4	                            mov r12, rax	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_12
0x400ae1f	            0xeb0c	                           jmp 0x400ae2d	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_12
0x400ae21	        0x4883c704	                              add rdi, 4	      4040	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_13
0x400ae25	      0xe800000000	                          call 0x400ae2a	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_12
0x400ae2a	          0x4989c4	                            mov r12, rax	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_12
0x400ae2d	          0x833b09	                      cmp dword [rbx], 9	      4042	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6
0x400ae30	            0x7530	                           jne 0x400ae62	      4042	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6
0x400ae32	        0xf6431001	               test byte [rbx + 0x10], 1	      4043	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	IF_7
0x400ae36	            0x7416	                            je 0x400ae4e	      4043	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	IF_7
0x400ae38	      0xba03000000	                              mov edx, 3	       279	strbuf.h	FUNCTION_179	CALL_2
0x400ae3d	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x400ae42	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400ae47	      0xe800000000	                          call 0x400ae4c	       279	strbuf.h	FUNCTION_179	CALL_2
0x400ae4c	            0xeb14	                           jmp 0x400ae62	       279	strbuf.h	FUNCTION_179	CALL_2
0x400ae4e	      0xba03000000	                              mov edx, 3	       279	strbuf.h	FUNCTION_179	CALL_2
0x400ae53	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x400ae58	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400ae5d	      0xe800000000	                          call 0x400ae62	       279	strbuf.h	FUNCTION_179	CALL_2
0x400ae62	          0x4c89e2	                            mov rdx, r12	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_16
0x400ae65	      0xbe00000000	                              mov esi, 0	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_16
0x400ae6a	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_16
0x400ae6f	      0xb800000000	                              mov eax, 0	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_16
0x400ae74	      0xe800000000	                          call 0x400ae79	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_16
0x400ae79	          0x8b5320	            mov edx, dword [rbx + 0x20] 	      4053	sequencer.c	FUNCTION_99	FOR_1	IF_8
0x400ae7c	            0x85d2	                           test edx, edx	      4053	sequencer.c	FUNCTION_99	FOR_1	IF_8
0x400ae7e	            0x754b	                           jne 0x400aecb	      4053	sequencer.c	FUNCTION_99	FOR_1	IF_8
0x400ae80	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       141	strbuf.h	FUNCTION_176
0x400ae85	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_176
0x400ae88	            0x740b	                            je 0x400ae95	       141	strbuf.h	FUNCTION_176
0x400ae8a	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x400ae8e	      0x483b442418	            cmp rax, qword [rsp + 0x18] 	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x400ae93	            0x750f	                           jne 0x400aea4	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x400ae95	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_178	CALL_2
0x400ae9a	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       228	strbuf.h	FUNCTION_178	CALL_2
0x400ae9f	      0xe800000000	                          call 0x400aea4	       228	strbuf.h	FUNCTION_178	CALL_2
0x400aea4	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       229	strbuf.h	FUNCTION_178
0x400aea9	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_178
0x400aead	      0x4889542418	             mov qword [rsp + 0x18], rdx	       229	strbuf.h	FUNCTION_178
0x400aeb2	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       229	strbuf.h	FUNCTION_178
0x400aeb7	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_178
0x400aebb	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       230	strbuf.h	FUNCTION_178
0x400aec0	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       230	strbuf.h	FUNCTION_178
0x400aec5	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_178
0x400aec9	            0xeb18	                           jmp 0x400aee3	       230	strbuf.h	FUNCTION_178
0x400aecb	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_18
0x400aecf	      0xbe00000000	                              mov esi, 0	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_18
0x400aed4	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_18
0x400aed9	      0xb800000000	                              mov eax, 0	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_18
0x400aede	      0xe800000000	                          call 0x400aee3	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_18
0x400aee3	          0x83c501	                              add ebp, 1	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400aee6	        0x4883c330	                           add rbx, 0x30	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400aeea	        0x396c2450	            cmp dword [rsp + 0x50], ebp 	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400aeee	     0xf8f59feffff	                            jg 0x400ad4d	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400aef4	      0xb900000000	                              mov ecx, 0	      4059	sequencer.c	FUNCTION_99	CALL_19
0x400aef9	      0x488b542408	                mov rdx, qword [rsp + 8]	      4059	sequencer.c	FUNCTION_99	CALL_19
0x400aefe	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      4059	sequencer.c	FUNCTION_99	CALL_19
0x400af03	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      4059	sequencer.c	FUNCTION_99	CALL_19
0x400af08	      0xe8255dffff	                  call sym.write_message	      4059	sequencer.c	FUNCTION_99	CALL_19
0x400af0d	            0x89c3	                            mov ebx, eax	      4059	sequencer.c	FUNCTION_99	CALL_19
0x400af0f	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      4060	sequencer.c	FUNCTION_99	CALL_20
0x400af14	      0xe87157ffff	              call sym.todo_list_release	      4060	sequencer.c	FUNCTION_99	CALL_20
0x400af19	            0x89d8	                            mov eax, ebx	      4061	sequencer.c	FUNCTION_99
0x400af1b	    0x488bb4248800	            mov rsi, qword [rsp + 0x88] 	      4062	sequencer.c	FUNCTION_99
0x400af23	    0x644833342528	                xor rsi, qword fs:[0x28]	      4062	sequencer.c	FUNCTION_99
0x400af2c	            0x7405	                            je 0x400af33	      4062	sequencer.c	FUNCTION_99
0x400af2e	      0xe800000000	                          call 0x400af33	      4062	sequencer.c	FUNCTION_99
0x400af33	    0x4881c4980000	                           add rsp, 0x98	      4062	sequencer.c	FUNCTION_99
0x400af3a	              0x5b	                                 pop rbx	      4062	sequencer.c	FUNCTION_99
0x400af3b	              0x5d	                                 pop rbp	      4062	sequencer.c	FUNCTION_99
0x400af3c	            0x415c	                                 pop r12	      4062	sequencer.c	FUNCTION_99
0x400af3e	            0x415d	                                 pop r13	      4062	sequencer.c	FUNCTION_99
0x400af40	            0x415e	                                 pop r14	      4062	sequencer.c	FUNCTION_99
0x400af42	            0x415f	                                 pop r15	      4062	sequencer.c	FUNCTION_99
0x400af44	              0xc3	                                     ret	      4062	sequencer.c	FUNCTION_99
do_pick_commit	ELSE,12:IF,38:FOR,1:WHILE,0:SWITCH,0:functions,0:CALL,94:DO,0	1488
0x4004ee0	            0x4157	                                push r15	      1497	sequencer.c	FUNCTION_48
0x4004ee2	            0x4156	                                push r14	      1497	sequencer.c	FUNCTION_48
0x4004ee4	            0x4155	                                push r13	      1497	sequencer.c	FUNCTION_48
0x4004ee6	            0x4154	                                push r12	      1497	sequencer.c	FUNCTION_48
0x4004ee8	              0x55	                                push rbp	      1497	sequencer.c	FUNCTION_48
0x4004ee9	              0x53	                                push rbx	      1497	sequencer.c	FUNCTION_48
0x4004eea	    0x4881ec580100	                          sub rsp, 0x158	      1497	sequencer.c	FUNCTION_48
0x4004ef1	            0x89fd	                            mov ebp, edi	      1497	sequencer.c	FUNCTION_48
0x4004ef3	          0x4989f7	                            mov r15, rsi	      1497	sequencer.c	FUNCTION_48
0x4004ef6	          0x4889d3	                            mov rbx, rdx	      1497	sequencer.c	FUNCTION_48
0x4004ef9	        0x894c2434	             mov dword [rsp + 0x34], ecx	      1497	sequencer.c	FUNCTION_48
0x4004efd	    0x64488b042528	                mov rax, qword fs:[0x28]	      1497	sequencer.c	FUNCTION_48
0x4004f06	    0x488984244801	            mov qword [rsp + 0x148], rax	      1497	sequencer.c	FUNCTION_48
0x4004f0e	            0x31c0	                            xor eax, eax	      1497	sequencer.c	FUNCTION_48
0x4004f10	        0x837a0400	                  cmp dword [rdx + 4], 0	      1498	sequencer.c	FUNCTION_48
0x4004f14	     0xf84ec170000	                            je 0x4006706	      1498	sequencer.c	FUNCTION_48
0x4004f1a	    0xc74424300200	               mov dword [rsp + 0x30], 2	      1498	sequencer.c	FUNCTION_48
0x4004f22	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1499	sequencer.c	FUNCTION_48	CALL_1
0x4004f2b	    0x48c744247000	               mov qword [rsp + 0x70], 0	      1505	sequencer.c	FUNCTION_48
0x4004f34	    0x48c744247800	               mov qword [rsp + 0x78], 0	      1505	sequencer.c	FUNCTION_48
0x4004f3d	    0x48c784248000	               mov qword [rsp + 0x80], 0	      1505	sequencer.c	FUNCTION_48
0x4004f49	        0x837b0c00	                cmp dword [rbx + 0xc], 0	      1508	sequencer.c	FUNCTION_48	IF_1
0x4004f4d	            0x744a	                            je 0x4004f99	      1508	sequencer.c	FUNCTION_48	IF_1
0x4004f4f	      0xba00000000	                              mov edx, 0	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x4004f54	      0xbe00000000	                              mov esi, 0	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x4004f59	    0x488dbc24f000	                   lea rdi, [rsp + 0xf0]	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x4004f61	      0xe800000000	                          call 0x4004f66	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x4004f66	            0x85c0	                           test eax, eax	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x4004f68	     0xf849e000000	                            je 0x400500c	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x4004f6e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4004f73	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4004f78	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4004f7d	      0xe800000000	                          call 0x4004f82	        54	gettext.h	FUNCTION_118
0x4004f82	          0x4889c7	                            mov rdi, rax	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_3
0x4004f85	      0xb800000000	                              mov eax, 0	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_3
0x4004f8a	      0xe800000000	                          call 0x4004f8f	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_3
0x4004f8f	      0xb8ffffffff	                     mov eax, 0xffffffff	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_3
0x4004f94	      0xe951170000	                           jmp 0x40066ea	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_3
0x4004f99	    0x488db424f000	                   lea rsi, [rsp + 0xf0]	      1518	sequencer.c	FUNCTION_48	ELSE_1	CALL_4
0x4004fa1	      0xbf00000000	                              mov edi, 0	      1518	sequencer.c	FUNCTION_48	ELSE_1	CALL_4
0x4004fa6	      0xe800000000	                          call 0x4004fab	      1518	sequencer.c	FUNCTION_48	ELSE_1	CALL_4
0x4004fab	          0x4189c5	                           mov r13d, eax	      1518	sequencer.c	FUNCTION_48	ELSE_1	CALL_4
0x4004fae	      0xbf00000000	                              mov edi, 0	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x4004fb3	            0x85c0	                           test eax, eax	      1519	sequencer.c	FUNCTION_48	ELSE_1	IF_3
0x4004fb5	            0x7435	                            je 0x4004fec	      1519	sequencer.c	FUNCTION_48	ELSE_1	IF_3
0x4004fb7	    0x488b05000000	            mov rax, qword [0x04004fbe] 	      1520	sequencer.c	FUNCTION_48	ELSE_1	CALL_5
0x4004fbe	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1520	sequencer.c	FUNCTION_48	ELSE_1	CALL_5
0x4004fc2	        0x488b4038	            mov rax, qword [rax + 0x38] 	        53	string3.h	FUNCTION_186	CALL_3
0x4004fc6	          0x488b10	                    mov rdx, qword [rax]	        53	string3.h	FUNCTION_186	CALL_3
0x4004fc9	    0x48899424f000	             mov qword [rsp + 0xf0], rdx	        53	string3.h	FUNCTION_186	CALL_3
0x4004fd1	        0x488b5008	                mov rdx, qword [rax + 8]	        53	string3.h	FUNCTION_186	CALL_3
0x4004fd5	    0x48899424f800	             mov qword [rsp + 0xf8], rdx	        53	string3.h	FUNCTION_186	CALL_3
0x4004fdd	          0x8b4010	            mov eax, dword [rax + 0x10] 	        53	string3.h	FUNCTION_186	CALL_3
0x4004fe0	    0x898424000100	            mov dword [rsp + 0x100], eax	        53	string3.h	FUNCTION_186	CALL_3
0x4004fe7	      0xbf00000000	                              mov edi, 0	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x4004fec	      0xba00000000	                              mov edx, 0	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x4004ff1	      0xbe00000000	                              mov esi, 0	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x4004ff6	      0xe800000000	                          call 0x4004ffb	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x4004ffb	            0x85c0	                           test eax, eax	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x4004ffd	            0x7413	                            je 0x4005012	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x4004fff	          0x4889df	                            mov rdi, rbx	      1523	sequencer.c	FUNCTION_48	ELSE_1	CALL_7
0x4005002	      0xe8e0c2ffff	              call sym.error_dirty_index	      1523	sequencer.c	FUNCTION_48	ELSE_1	CALL_7
0x4005007	      0xe9de160000	                           jmp 0x40066ea	      1523	sequencer.c	FUNCTION_48	ELSE_1	CALL_7
0x400500c	    0x41bd00000000	                             mov r13d, 0	      1506	sequencer.c	FUNCTION_48
0x4005012	      0xbf00000000	                              mov edi, 0	      1525	sequencer.c	FUNCTION_48
0x4005017	      0xe800000000	                          call 0x400501c	      1525	sequencer.c	FUNCTION_48
0x400501c	        0x498b4730	            mov rax, qword [r15 + 0x30] 	      1527	sequencer.c	FUNCTION_48	IF_5
0x4005020	          0x4885c0	                           test rax, rax	      1527	sequencer.c	FUNCTION_48	IF_5
0x4005023	     0xf84e5170000	                            je 0x400680e	      1527	sequencer.c	FUNCTION_48	IF_5
0x4005029	      0x4883780800	                  cmp qword [rax + 8], 0	      1529	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x400502e	     0xf84b4000000	                            je 0x40050e8	      1529	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x4005034	        0x448b632c	           mov r12d, dword [rbx + 0x2c] 	      1534	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7
0x4005038	          0x4585e4	                         test r12d, r12d	      1534	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7
0x400503b	            0x7410	                            je 0x400504d	      1534	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7
0x400503d	      0xba01000000	                              mov edx, 1	      1539	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x4005042	        0x4183fc01	                             cmp r12d, 1	      1539	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x4005046	            0x753f	                           jne 0x4005087	      1539	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x4005048	      0xe996000000	                           jmp 0x40050e3	      1539	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x400504d	        0x498d7f04	                      lea rdi, [r15 + 4]	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x4005051	      0xe800000000	                          call 0x4005056	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x4005056	          0x4889c3	                            mov rbx, rax	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x4005059	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400505e	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4005063	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4005068	      0xe800000000	                          call 0x400506d	        54	gettext.h	FUNCTION_118
0x400506d	          0x4889de	                            mov rsi, rbx	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x4005070	          0x4889c7	                            mov rdi, rax	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x4005073	      0xb800000000	                              mov eax, 0	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x4005078	      0xe800000000	                          call 0x400507d	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x400507d	      0xb8ffffffff	                     mov eax, 0xffffffff	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x4005082	      0xe963160000	                           jmp 0x40066ea	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x4005087	        0x488b4008	                mov rax, qword [rax + 8]	      1541	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x400508b	          0x83c201	                              add edx, 1	      1540	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x400508e	          0x4139d4	                           cmp r12d, edx	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x4005091	           0xf95c1	                                setne cl	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x4005094	          0x4885c0	                           test rax, rax	      1539	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x4005097	            0x7404	                            je 0x400509d	      1539	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x4005099	            0x84c9	                             test cl, cl	      1539	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x400509b	            0x75ea	                           jne 0x4005087	      1539	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x400509d	          0x4885c0	                           test rax, rax	      1542	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8
0x40050a0	            0x7404	                            je 0x40050a6	      1542	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8
0x40050a2	            0x84c9	                             test cl, cl	      1542	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8
0x40050a4	            0x743d	                            je 0x40050e3	      1542	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8
0x40050a6	        0x498d7f04	                      lea rdi, [r15 + 4]	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x40050aa	      0xe800000000	                          call 0x40050af	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x40050af	          0x4889c3	                            mov rbx, rax	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x40050b2	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40050b7	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40050bc	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40050c1	      0xe800000000	                          call 0x40050c6	        54	gettext.h	FUNCTION_118
0x40050c6	          0x4489e2	                           mov edx, r12d	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x40050c9	          0x4889de	                            mov rsi, rbx	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x40050cc	          0x4889c7	                            mov rdi, rax	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x40050cf	      0xb800000000	                              mov eax, 0	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x40050d4	      0xe800000000	                          call 0x40050d9	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x40050d9	      0xb8ffffffff	                     mov eax, 0xffffffff	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x40050de	      0xe907160000	                           jmp 0x40066ea	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x40050e3	          0x4c8b20	                    mov r12, qword [rax]	      1545	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x40050e6	            0xeb43	                           jmp 0x400512b	      1545	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x40050e8	        0x837b2c00	               cmp dword [rbx + 0x2c], 0	      1546	sequencer.c	FUNCTION_48	ELSE_3	IF_9
0x40050ec	            0x7e3a	                           jle 0x4005128	      1546	sequencer.c	FUNCTION_48	ELSE_3	IF_9
0x40050ee	        0x498d7f04	                      lea rdi, [r15 + 4]	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x40050f2	      0xe800000000	                          call 0x40050f7	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x40050f7	          0x4889c3	                            mov rbx, rax	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x40050fa	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40050ff	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4005104	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4005109	      0xe800000000	                          call 0x400510e	        54	gettext.h	FUNCTION_118
0x400510e	          0x4889de	                            mov rsi, rbx	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x4005111	          0x4889c7	                            mov rdi, rax	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x4005114	      0xb800000000	                              mov eax, 0	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x4005119	      0xe800000000	                          call 0x400511e	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x400511e	      0xb8ffffffff	                     mov eax, 0xffffffff	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x4005123	      0xe9c2150000	                           jmp 0x40066ea	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x4005128	          0x4c8b20	                    mov r12, qword [rax]	      1550	sequencer.c	FUNCTION_48	ELSE_4
0x400512b	      0xe800000000	                          call 0x4005130	       320	sequencer.c	FUNCTION_11	CALL_2
0x4005130	          0x4889c2	                            mov rdx, rax	       320	sequencer.c	FUNCTION_11	CALL_2
0x4005133	      0xbe00000000	                              mov esi, 0	       320	sequencer.c	FUNCTION_11	CALL_2
0x4005138	          0x4c89ff	                            mov rdi, r15	       320	sequencer.c	FUNCTION_11	CALL_2
0x400513b	      0xe800000000	                          call 0x4005140	       320	sequencer.c	FUNCTION_11	CALL_2
0x4005140	        0x48890424	                    mov qword [rsp], rax	       320	sequencer.c	FUNCTION_11	CALL_2
0x4005144	          0x4c89ff	                            mov rdi, r15	       321	sequencer.c	FUNCTION_11	CALL_3
0x4005147	      0xe864c5ffff	              call sym.short_commit_name	       321	sequencer.c	FUNCTION_11	CALL_3
0x400514c	          0x4989c6	                            mov r14, rax	       321	sequencer.c	FUNCTION_11	CALL_3
0x400514f	    0x488db424d000	                   lea rsi, [rsp + 0xd0]	       323	sequencer.c	FUNCTION_11	CALL_4
0x4005157	        0x488b3c24	                    mov rdi, qword [rsp]	       323	sequencer.c	FUNCTION_11	CALL_4
0x400515b	      0xe800000000	                          call 0x4005160	       323	sequencer.c	FUNCTION_11	CALL_4
0x4005160	          0x4863f0	                         movsxd rsi, eax	       325	sequencer.c	FUNCTION_11	CALL_5
0x4005163	    0x488bbc24d000	            mov rdi, qword [rsp + 0xd0] 	       325	sequencer.c	FUNCTION_11	CALL_5
0x400516b	      0xe800000000	                          call 0x4005170	       325	sequencer.c	FUNCTION_11	CALL_5
0x4005170	      0x4889442418	             mov qword [rsp + 0x18], rax	       325	sequencer.c	FUNCTION_11	CALL_5
0x4005175	          0x4889c2	                            mov rdx, rax	       326	sequencer.c	FUNCTION_11	CALL_6
0x4005178	          0x4c89f6	                            mov rsi, r14	       326	sequencer.c	FUNCTION_11	CALL_6
0x400517b	      0xbf00000000	                              mov edi, 0	       326	sequencer.c	FUNCTION_11	CALL_6
0x4005180	      0xb800000000	                              mov eax, 0	       326	sequencer.c	FUNCTION_11	CALL_6
0x4005185	      0xe800000000	                          call 0x400518a	       326	sequencer.c	FUNCTION_11	CALL_6
0x400518a	      0x4889442408	                mov qword [rsp + 8], rax	       326	sequencer.c	FUNCTION_11	CALL_6
0x400518f	          0x4889c6	                            mov rsi, rax	       327	sequencer.c	FUNCTION_11	CALL_7
0x4005192	      0xbf00000000	                              mov edi, 0	       327	sequencer.c	FUNCTION_11	CALL_7
0x4005197	      0xb800000000	                              mov eax, 0	       327	sequencer.c	FUNCTION_11	CALL_7
0x400519c	      0xe800000000	                          call 0x40051a1	       327	sequencer.c	FUNCTION_11	CALL_7
0x40051a1	      0x4889442410	             mov qword [rsp + 0x10], rax	       327	sequencer.c	FUNCTION_11	CALL_7
0x40051a6	        0x837b1400	               cmp dword [rbx + 0x14], 0	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x40051aa	            0x746a	                            je 0x4005216	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x40051ac	          0x8d45fc	                      lea eax, [rbp - 4]	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x40051af	          0x83f801	                              cmp eax, 1	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x40051b2	            0x7662	                           jbe 0x4005216	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x40051b4	          0x4d85e4	                           test r12, r12	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x40051b7	     0xf8460150000	                            je 0x400671d	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x40051bd	      0x498d7c2404	                      lea rdi, [r12 + 4]	       975	cache.h	FUNCTION_155	CALL_1
0x40051c2	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_155	CALL_1
0x40051c7	    0x488db424f000	                   lea rsi, [rsp + 0xf0]	       975	cache.h	FUNCTION_155	CALL_1
0x40051cf	      0xe800000000	                          call 0x40051d4	       975	cache.h	FUNCTION_155	CALL_1
0x40051d4	            0x85c0	                           test eax, eax	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_18
0x40051d6	            0x7543	                           jne 0x400521b	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_18
0x40051d8	          0x833b02	                      cmp dword [rbx], 2	      1559	sequencer.c	FUNCTION_48	IF_11	IF_12	CALL_19
0x40051db	            0x7509	                           jne 0x40051e6	      1559	sequencer.c	FUNCTION_48	IF_11	IF_12	CALL_19
0x40051dd	        0x488b3c24	                    mov rdi, qword [rsp]	      1560	sequencer.c	FUNCTION_48	IF_11	CALL_20
0x40051e1	      0xe864c9ffff	            call sym.write_author_script	      1560	sequencer.c	FUNCTION_48	IF_11	CALL_20
0x40051e6	        0x498d7f04	                      lea rdi, [r15 + 4]	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_21
0x40051ea	          0x4889d9	                            mov rcx, rbx	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_21
0x40051ed	          0x4489ea	                           mov edx, r13d	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_21
0x40051f0	    0x488db424f000	                   lea rsi, [rsp + 0xf0]	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_21
0x40051f8	      0xe804e6ffff	                call sym.fast_forward_to	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_21
0x40051fd	          0x4189c6	                           mov r14d, eax	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_21
0x4005200	            0x85c0	                           test eax, eax	      1563	sequencer.c	FUNCTION_48	IF_11	IF_13
0x4005202	     0xf8594140000	                           jne 0x400669c	      1563	sequencer.c	FUNCTION_48	IF_11	IF_13
0x4005208	          0x83fd03	                              cmp ebp, 3	      1563	sequencer.c	FUNCTION_48	IF_11	IF_13
0x400520b	     0xf84bb160000	                            je 0x40068cc	      1563	sequencer.c	FUNCTION_48	IF_11	IF_13
0x4005211	      0xe986140000	                           jmp 0x400669c	      1563	sequencer.c	FUNCTION_48	IF_11	IF_13
0x4005216	          0x4d85e4	                           test r12, r12	      1569	sequencer.c	FUNCTION_48	IF_14	CALL_22
0x4005219	            0x7459	                            je 0x4005274	      1569	sequencer.c	FUNCTION_48	IF_14	CALL_22
0x400521b	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_147	CALL_1
0x4005220	          0x4c89e7	                            mov rdi, r12	        75	commit.h	FUNCTION_147	CALL_1
0x4005223	      0xe800000000	                          call 0x4005228	        75	commit.h	FUNCTION_147	CALL_1
0x4005228	            0x85c0	                           test eax, eax	      1569	sequencer.c	FUNCTION_48	IF_14	CALL_22
0x400522a	            0x7948	                           jns 0x4005274	      1569	sequencer.c	FUNCTION_48	IF_14	CALL_22
0x400522c	      0x498d7c2404	                      lea rdi, [r12 + 4]	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x4005231	      0xe800000000	                          call 0x4005236	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x4005236	          0x4989c4	                            mov r12, rax	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x4005239	            0x89ef	                            mov edi, ebp	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x400523b	      0xe8c0b4ffff	              call sym.command_to_string	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x4005240	          0x4889c3	                            mov rbx, rax	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x4005243	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4005248	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400524d	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4005252	      0xe800000000	                          call 0x4005257	        54	gettext.h	FUNCTION_118
0x4005257	          0x4c89e2	                            mov rdx, r12	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x400525a	          0x4889de	                            mov rsi, rbx	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x400525d	          0x4889c7	                            mov rdi, rax	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x4005260	      0xb800000000	                              mov eax, 0	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x4005265	      0xe800000000	                          call 0x400526a	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x400526a	      0xb8ffffffff	                     mov eax, 0xffffffff	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x400526f	      0xe976140000	                           jmp 0x40066ea	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x4005274	          0x83fd01	                              cmp ebp, 1	      1583	sequencer.c	FUNCTION_48	IF_15
0x4005277	     0xf8509010000	                           jne 0x4005386	      1583	sequencer.c	FUNCTION_48	IF_15
0x400527d	      0xba08000000	                              mov edx, 8	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005282	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005287	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400528c	      0xe800000000	                          call 0x4005291	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005291	    0x49c7c6ffffff	             mov r14, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005298	    0x41bd00000000	                             mov r13d, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x400529e	          0x4c89f1	                            mov rcx, r14	       279	strbuf.h	FUNCTION_179	CALL_2
0x40052a1	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       279	strbuf.h	FUNCTION_179	CALL_2
0x40052a6	          0x4489e8	                           mov eax, r13d	       279	strbuf.h	FUNCTION_179	CALL_2
0x40052a9	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_179	CALL_2
0x40052ab	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_179	CALL_2
0x40052ae	        0x4a8d1431	                    lea rdx, [rcx + r14]	       279	strbuf.h	FUNCTION_179	CALL_2
0x40052b2	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       279	strbuf.h	FUNCTION_179	CALL_2
0x40052b7	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       279	strbuf.h	FUNCTION_179	CALL_2
0x40052bc	      0xe800000000	                          call 0x40052c1	       279	strbuf.h	FUNCTION_179	CALL_2
0x40052c1	      0xba17000000	                           mov edx, 0x17	       279	strbuf.h	FUNCTION_179	CALL_2
0x40052c6	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x40052cb	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       279	strbuf.h	FUNCTION_179	CALL_2
0x40052d0	      0xe800000000	                          call 0x40052d5	       279	strbuf.h	FUNCTION_179	CALL_2
0x40052d5	        0x498d7f04	                      lea rdi, [r15 + 4]	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_30
0x40052d9	      0xe800000000	                          call 0x40052de	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_30
0x40052de	          0x4889c6	                            mov rsi, rax	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_30
0x40052e1	          0x4c89f1	                            mov rcx, r14	       279	strbuf.h	FUNCTION_179	CALL_2
0x40052e4	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_179	CALL_2
0x40052e7	          0x4489e8	                           mov eax, r13d	       279	strbuf.h	FUNCTION_179	CALL_2
0x40052ea	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_179	CALL_2
0x40052ec	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_179	CALL_2
0x40052ef	        0x4a8d1431	                    lea rdx, [rcx + r14]	       279	strbuf.h	FUNCTION_179	CALL_2
0x40052f3	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       279	strbuf.h	FUNCTION_179	CALL_2
0x40052f8	      0xe800000000	                          call 0x40052fd	       279	strbuf.h	FUNCTION_179	CALL_2
0x40052fd	        0x498b4730	            mov rax, qword [r15 + 0x30] 	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x4005301	          0x4885c0	                           test rax, rax	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x4005304	            0x7449	                            je 0x400534f	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x4005306	      0x4883780800	                  cmp qword [rax + 8], 0	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x400530b	            0x7442	                            je 0x400534f	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x400530d	      0xba1c000000	                           mov edx, 0x1c	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005312	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005317	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400531c	      0xe800000000	                          call 0x4005321	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005321	      0x498d7c2404	                      lea rdi, [r12 + 4]	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_33
0x4005326	      0xe800000000	                          call 0x400532b	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_33
0x400532b	          0x4889c6	                            mov rsi, rax	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_33
0x400532e	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005333	          0x4c89f1	                            mov rcx, r14	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005336	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005339	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400533b	          0x4889c8	                            mov rax, rcx	       279	strbuf.h	FUNCTION_179	CALL_2
0x400533e	          0x48f7d0	                                 not rax	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005341	        0x4a8d1430	                    lea rdx, [rax + r14]	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005345	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400534a	      0xe800000000	                          call 0x400534f	       279	strbuf.h	FUNCTION_179	CALL_2
0x400534f	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005354	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005359	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400535e	      0xe800000000	                          call 0x4005363	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005363	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005368	      0x4889442438	             mov qword [rsp + 0x38], rax	       279	strbuf.h	FUNCTION_179	CALL_2
0x400536d	      0x4c8b742408	                mov r14, qword [rsp + 8]	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005372	          0x4d89e5	                            mov r13, r12	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005375	          0x4d89fc	                            mov r12, r15	      1584	sequencer.c	FUNCTION_48	IF_15
0x4005378	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1503	sequencer.c	FUNCTION_48
0x4005381	      0xe9f3130000	                           jmp 0x4006779	      1503	sequencer.c	FUNCTION_48
0x4005386	    0x488db424d000	                   lea rsi, [rsp + 0xd0]	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_35
0x400538e	        0x488b3c24	                    mov rdi, qword [rsp]	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_35
0x4005392	      0xe800000000	                          call 0x4005397	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_35
0x4005397	            0x85c0	                           test eax, eax	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_35
0x4005399	            0x742a	                            je 0x40053c5	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_35
0x400539b	    0x488bb424d000	            mov rsi, qword [rsp + 0xd0] 	      1608	sequencer.c	FUNCTION_48	ELSE_5	CALL_36
0x40053a3	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x40053a8	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_179	CALL_2
0x40053af	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_179	CALL_2
0x40053b2	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_179	CALL_2
0x40053b4	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_179	CALL_2
0x40053b7	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_179	CALL_2
0x40053bb	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       279	strbuf.h	FUNCTION_179	CALL_2
0x40053c0	      0xe800000000	                          call 0x40053c5	       279	strbuf.h	FUNCTION_179	CALL_2
0x40053c5	        0x837b0800	                  cmp dword [rbx + 8], 0	      1610	sequencer.c	FUNCTION_48	ELSE_5	IF_18
0x40053c9	     0xf8423010000	                            je 0x40054f2	      1610	sequencer.c	FUNCTION_48	ELSE_5	IF_18
0x40053cf	      0x488b442478	            mov rax, qword [rsp + 0x78] 	       595	strbuf.h	FUNCTION_184	IF_1
0x40053d4	          0x4885c0	                           test rax, rax	       595	strbuf.h	FUNCTION_184	IF_1
0x40053d7	            0x745c	                            je 0x4005435	       595	strbuf.h	FUNCTION_184	IF_1
0x40053d9	    0x488b94248000	            mov rdx, qword [rsp + 0x80] 	       595	strbuf.h	FUNCTION_184	IF_1
0x40053e1	      0x807c02ff0a	          cmp byte [rdx + rax - 1], 0xa 	       595	strbuf.h	FUNCTION_184	IF_1
0x40053e6	            0x744d	                            je 0x4005435	       595	strbuf.h	FUNCTION_184	IF_1
0x40053e8	      0x488b542470	            mov rdx, qword [rsp + 0x70] 	       141	strbuf.h	FUNCTION_176
0x40053ed	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_176
0x40053f0	            0x7409	                            je 0x40053fb	       141	strbuf.h	FUNCTION_176
0x40053f2	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x40053f6	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x40053f9	            0x750f	                           jne 0x400540a	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x40053fb	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_178	CALL_2
0x4005400	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       228	strbuf.h	FUNCTION_178	CALL_2
0x4005405	      0xe800000000	                          call 0x400540a	       228	strbuf.h	FUNCTION_178	CALL_2
0x400540a	      0x488b442478	            mov rax, qword [rsp + 0x78] 	       229	strbuf.h	FUNCTION_178
0x400540f	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_178
0x4005413	      0x4889542478	             mov qword [rsp + 0x78], rdx	       229	strbuf.h	FUNCTION_178
0x4005418	    0x488b94248000	            mov rdx, qword [rsp + 0x80] 	       229	strbuf.h	FUNCTION_178
0x4005420	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_178
0x4005424	      0x488b442478	            mov rax, qword [rsp + 0x78] 	       230	strbuf.h	FUNCTION_178
0x4005429	    0x488b94248000	            mov rdx, qword [rsp + 0x80] 	       230	strbuf.h	FUNCTION_178
0x4005431	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_178
0x4005435	      0xba00000000	                              mov edx, 0	      1612	sequencer.c	FUNCTION_48	ELSE_5	IF_18	IF_19	CALL_38
0x400543a	      0xbe00000000	                              mov esi, 0	      1612	sequencer.c	FUNCTION_48	ELSE_5	IF_18	IF_19	CALL_38
0x400543f	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      1612	sequencer.c	FUNCTION_48	ELSE_5	IF_18	IF_19	CALL_38
0x4005444	      0xe820c0ffff	          call sym.has_conforming_footer	      1612	sequencer.c	FUNCTION_48	ELSE_5	IF_18	IF_19	CALL_38
0x4005449	            0x85c0	                           test eax, eax	      1612	sequencer.c	FUNCTION_48	ELSE_5	IF_18	IF_19	CALL_38
0x400544b	            0x754f	                           jne 0x400549c	      1612	sequencer.c	FUNCTION_48	ELSE_5	IF_18	IF_19	CALL_38
0x400544d	      0x488b442470	            mov rax, qword [rsp + 0x70] 	       141	strbuf.h	FUNCTION_176
0x4005452	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_176
0x4005455	            0x740b	                            je 0x4005462	       141	strbuf.h	FUNCTION_176
0x4005457	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x400545b	      0x4839442478	            cmp qword [rsp + 0x78], rax 	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x4005460	            0x750f	                           jne 0x4005471	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x4005462	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_178	CALL_2
0x4005467	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       228	strbuf.h	FUNCTION_178	CALL_2
0x400546c	      0xe800000000	                          call 0x4005471	       228	strbuf.h	FUNCTION_178	CALL_2
0x4005471	      0x488b442478	            mov rax, qword [rsp + 0x78] 	       229	strbuf.h	FUNCTION_178
0x4005476	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_178
0x400547a	      0x4889542478	             mov qword [rsp + 0x78], rdx	       229	strbuf.h	FUNCTION_178
0x400547f	    0x488b94248000	            mov rdx, qword [rsp + 0x80] 	       229	strbuf.h	FUNCTION_178
0x4005487	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_178
0x400548b	      0x488b442478	            mov rax, qword [rsp + 0x78] 	       230	strbuf.h	FUNCTION_178
0x4005490	    0x488b94248000	            mov rdx, qword [rsp + 0x80] 	       230	strbuf.h	FUNCTION_178
0x4005498	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_178
0x400549c	      0xba1b000000	                           mov edx, 0x1b	       279	strbuf.h	FUNCTION_179	CALL_2
0x40054a1	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x40054a6	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       279	strbuf.h	FUNCTION_179	CALL_2
0x40054ab	      0xe800000000	                          call 0x40054b0	       279	strbuf.h	FUNCTION_179	CALL_2
0x40054b0	        0x498d7f04	                      lea rdi, [r15 + 4]	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_42
0x40054b4	      0xe800000000	                          call 0x40054b9	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_42
0x40054b9	          0x4889c6	                            mov rsi, rax	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_42
0x40054bc	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x40054c1	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_179	CALL_2
0x40054c8	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_179	CALL_2
0x40054cb	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_179	CALL_2
0x40054cd	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_179	CALL_2
0x40054d0	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_179	CALL_2
0x40054d4	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       279	strbuf.h	FUNCTION_179	CALL_2
0x40054d9	      0xe800000000	                          call 0x40054de	       279	strbuf.h	FUNCTION_179	CALL_2
0x40054de	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_179	CALL_2
0x40054e3	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x40054e8	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       279	strbuf.h	FUNCTION_179	CALL_2
0x40054ed	      0xe800000000	                          call 0x40054f2	       279	strbuf.h	FUNCTION_179	CALL_2
0x40054f2	          0x8d45fc	                      lea eax, [rbp - 4]	      1618	sequencer.c	FUNCTION_48	ELSE_5	IF_20	CALL_44
0x40054f5	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1503	sequencer.c	FUNCTION_48
0x40054fe	          0x83f801	                              cmp eax, 1	      1618	sequencer.c	FUNCTION_48	ELSE_5	IF_20	CALL_44
0x4005501	            0x760e	                           jbe 0x4005511	      1618	sequencer.c	FUNCTION_48	ELSE_5	IF_20	CALL_44
0x4005503	        0x488b3c24	                    mov rdi, qword [rsp]	      1619	sequencer.c	FUNCTION_48	ELSE_5	CALL_45
0x4005507	      0xe869c0ffff	                     call sym.get_author	      1619	sequencer.c	FUNCTION_48	ELSE_5	CALL_45
0x400550c	      0x4889442420	             mov qword [rsp + 0x20], rax	      1619	sequencer.c	FUNCTION_48	ELSE_5	CALL_45
0x4005511	          0x83fd03	                              cmp ebp, 3	      1622	sequencer.c	FUNCTION_48	IF_21
0x4005514	     0xf8431120000	                            je 0x400674b	      1622	sequencer.c	FUNCTION_48	IF_21
0x400551a	          0x8d45fc	                      lea eax, [rbp - 4]	      1624	sequencer.c	FUNCTION_48	ELSE_6	IF_22	CALL_46
0x400551d	          0x83f801	                              cmp eax, 1	      1624	sequencer.c	FUNCTION_48	ELSE_6	IF_22	CALL_46
0x4005520	     0xf8741120000	                            ja 0x4006767	      1624	sequencer.c	FUNCTION_48	ELSE_6	IF_22	CALL_46
0x4005526	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	      1369	sequencer.c	FUNCTION_45
0x4005532	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	      1369	sequencer.c	FUNCTION_45
0x400553e	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	      1369	sequencer.c	FUNCTION_45
0x400554a	        0x837b7800	               cmp dword [rbx + 0x78], 0	      1373	sequencer.c	FUNCTION_45	IF_1
0x400554e	     0xf8e27010000	                           jle 0x400567b	      1373	sequencer.c	FUNCTION_45	IF_1
0x4005554	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	      1374	sequencer.c	FUNCTION_45	IF_1
0x4005560	    0x48c78424d800	               mov qword [rsp + 0xd8], 0	      1374	sequencer.c	FUNCTION_45	IF_1
0x400556c	    0x48c78424e000	               mov qword [rsp + 0xe0], 0	      1374	sequencer.c	FUNCTION_45	IF_1
0x4005578	      0xe810adffff	         call sym.rebase_path_squash_msg	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x400557d	      0xba09000000	                              mov edx, 9	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x4005582	          0x4889c6	                            mov rsi, rax	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x4005585	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x400558d	      0xe800000000	                          call 0x4005592	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x4005592	          0x4885c0	                           test rax, rax	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x4005595	            0x7f31	                            jg 0x40055c8	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x4005597	      0xe8f1acffff	         call sym.rebase_path_squash_msg	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x400559c	          0x4889c3	                            mov rbx, rax	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x400559f	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40055a4	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40055a9	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40055ae	      0xe800000000	                          call 0x40055b3	        54	gettext.h	FUNCTION_118
0x40055b3	          0x4889de	                            mov rsi, rbx	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x40055b6	          0x4889c7	                            mov rdi, rax	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x40055b9	      0xb800000000	                              mov eax, 0	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x40055be	      0xe800000000	                          call 0x40055c3	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x40055c3	      0xe963110000	                           jmp 0x400672b	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x40055c8	    0x4c8bac24c000	            mov r13, qword [rsp + 0xc0] 	      1381	sequencer.c	FUNCTION_45	IF_1
0x40055d0	    0x440fb6350000	          movzx r14d, byte [0x040055d8] 	      1381	sequencer.c	FUNCTION_45	IF_1
0x40055d8	        0x45387500	                    cmp byte [r13], r14b	      1382	sequencer.c	FUNCTION_45	IF_1
0x40055dc	            0x7510	                           jne 0x40055ee	      1382	sequencer.c	FUNCTION_45	IF_1
0x40055de	      0xbe0a000000	                            mov esi, 0xa	      1382	sequencer.c	FUNCTION_45	IF_1
0x40055e3	          0x4c89ef	                            mov rdi, r13	      1382	sequencer.c	FUNCTION_45	IF_1
0x40055e6	      0xe800000000	                          call 0x40055eb	      1382	sequencer.c	FUNCTION_45	IF_1
0x40055eb	          0x4989c5	                            mov r13, rax	      1382	sequencer.c	FUNCTION_45	IF_1
0x40055ee	        0x410fbed6	                         movsx edx, r14b	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_5
0x40055f2	      0xbe00000000	                              mov esi, 0	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_5
0x40055f7	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_5
0x40055ff	      0xb800000000	                              mov eax, 0	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_5
0x4005604	      0xe800000000	                          call 0x4005609	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_5
0x4005609	          0x8b4378	            mov eax, dword [rbx + 0x78] 	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x400560c	        0x448d7002	                     lea r14d, [rax + 2]	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x4005610	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4005615	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400561a	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x400561f	      0xe800000000	                          call 0x4005624	        54	gettext.h	FUNCTION_118
0x4005624	          0x4489f2	                           mov edx, r14d	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x4005627	          0x4889c6	                            mov rsi, rax	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x400562a	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x4005632	      0xb800000000	                              mov eax, 0	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x4005637	      0xe800000000	                          call 0x400563c	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x400563c	          0x4c89ea	                            mov rdx, r13	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x400563f	    0x482b9424c000	             sub rdx, qword [rsp + 0xc0]	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x4005647	    0x4c8b8424d800	              mov r8, qword [rsp + 0xd8]	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x400564f	    0x488b8c24e000	            mov rcx, qword [rsp + 0xe0] 	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x4005657	      0xbe00000000	                              mov esi, 0	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x400565c	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x4005664	      0xe800000000	                          call 0x4005669	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x4005669	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      1388	sequencer.c	FUNCTION_45	IF_1	CALL_9
0x4005671	      0xe800000000	                          call 0x4005676	      1388	sequencer.c	FUNCTION_45	IF_1	CALL_9
0x4005676	      0xe92f020000	                           jmp 0x40058aa	      1388	sequencer.c	FUNCTION_45	IF_1	CALL_9
0x400567b	    0x488db4243001	                  lea rsi, [rsp + 0x130]	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_10
0x4005683	      0xbf00000000	                              mov edi, 0	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_10
0x4005688	      0xe800000000	                          call 0x400568d	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_10
0x400568d	            0x85c0	                           test eax, eax	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_10
0x400568f	            0x7426	                            je 0x40056b7	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_10
0x4005691	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4005696	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400569b	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40056a0	      0xe800000000	                          call 0x40056a5	        54	gettext.h	FUNCTION_118
0x40056a5	          0x4889c7	                            mov rdi, rax	      1395	sequencer.c	FUNCTION_45	ELSE_1	CALL_11
0x40056a8	      0xb800000000	                              mov eax, 0	      1395	sequencer.c	FUNCTION_45	ELSE_1	CALL_11
0x40056ad	      0xe800000000	                          call 0x40056b2	      1395	sequencer.c	FUNCTION_45	ELSE_1	CALL_11
0x40056b2	      0xe974100000	                           jmp 0x400672b	      1395	sequencer.c	FUNCTION_45	ELSE_1	CALL_11
0x40056b7	    0x488dbc243001	                  lea rdi, [rsp + 0x130]	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_12
0x40056bf	      0xe800000000	                          call 0x40056c4	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_12
0x40056c4	          0x4989c6	                            mov r14, rax	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_12
0x40056c7	          0x4885c0	                           test rax, rax	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_12
0x40056ca	            0x7526	                           jne 0x40056f2	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_12
0x40056cc	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40056d1	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40056d6	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40056db	      0xe800000000	                          call 0x40056e0	        54	gettext.h	FUNCTION_118
0x40056e0	          0x4889c7	                            mov rdi, rax	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_13
0x40056e3	      0xb800000000	                              mov eax, 0	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_13
0x40056e8	      0xe800000000	                          call 0x40056ed	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_13
0x40056ed	      0xe939100000	                           jmp 0x400672b	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_13
0x40056f2	      0xbe00000000	                              mov esi, 0	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_14
0x40056f7	          0x4889c7	                            mov rdi, rax	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_14
0x40056fa	      0xe800000000	                          call 0x40056ff	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_14
0x40056ff	          0x4989c5	                            mov r13, rax	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_14
0x4005702	          0x4885c0	                           test rax, rax	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_14
0x4005705	            0x7526	                           jne 0x400572d	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_14
0x4005707	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400570c	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4005711	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4005716	      0xe800000000	                          call 0x400571b	        54	gettext.h	FUNCTION_118
0x400571b	          0x4889c7	                            mov rdi, rax	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_15
0x400571e	      0xb800000000	                              mov eax, 0	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_15
0x4005723	      0xe800000000	                          call 0x4005728	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_15
0x4005728	      0xe9fe0f0000	                           jmp 0x400672b	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_15
0x400572d	    0x488db424d000	                   lea rsi, [rsp + 0xd0]	      1401	sequencer.c	FUNCTION_45	ELSE_1	CALL_16
0x4005735	          0x4889c7	                            mov rdi, rax	      1401	sequencer.c	FUNCTION_45	ELSE_1	CALL_16
0x4005738	      0xe800000000	                          call 0x400573d	      1401	sequencer.c	FUNCTION_45	ELSE_1	CALL_16
0x400573d	      0xe813abffff	          call sym.rebase_path_fixup_msg	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4005742	          0x4889c2	                            mov rdx, rax	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4005745	    0x4c8b8424d000	              mov r8, qword [rsp + 0xd0]	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x400574d	      0xb800000000	                              mov eax, 0	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4005752	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4005759	          0x4c89c7	                             mov rdi, r8	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x400575c	            0xf2ae	              repne scasb al, byte [rdi]	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x400575e	          0x4889c8	                            mov rax, rcx	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4005761	          0x48f7d0	                                 not rax	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4005764	        0x488d70ff	                      lea rsi, [rax - 1]	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4005768	      0xb900000000	                              mov ecx, 0	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x400576d	          0x4c89c7	                             mov rdi, r8	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4005770	      0xe8bdb4ffff	                  call sym.write_message	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4005775	            0x85c0	                           test eax, eax	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4005777	            0x743c	                            je 0x40057b5	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4005779	          0x4c89ee	                            mov rsi, r13	      1404	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_20
0x400577c	          0x4c89f7	                            mov rdi, r14	      1404	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_20
0x400577f	      0xe800000000	                          call 0x4005784	      1404	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_20
0x4005784	      0xe8ccaaffff	          call sym.rebase_path_fixup_msg	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_21
0x4005789	          0x4889c3	                            mov rbx, rax	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_21
0x400578c	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4005791	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4005796	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x400579b	      0xe800000000	                          call 0x40057a0	        54	gettext.h	FUNCTION_118
0x40057a0	          0x4889de	                            mov rsi, rbx	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_21
0x40057a3	          0x4889c7	                            mov rdi, rax	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_21
0x40057a6	      0xb800000000	                              mov eax, 0	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_21
0x40057ab	      0xe800000000	                          call 0x40057b0	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_21
0x40057b0	      0xe9760f0000	                           jmp 0x400672b	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_21
0x40057b5	     0xfbe15000000	           movsx edx, byte [0x040057bc] 	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_23
0x40057bc	      0xbe00000000	                              mov esi, 0	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_23
0x40057c1	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_23
0x40057c9	      0xb800000000	                              mov eax, 0	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_23
0x40057ce	      0xe800000000	                          call 0x40057d3	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_23
0x40057d3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40057d8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40057dd	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40057e2	      0xe800000000	                          call 0x40057e7	        54	gettext.h	FUNCTION_118
0x40057e7	      0xba02000000	                              mov edx, 2	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_25
0x40057ec	          0x4889c6	                            mov rsi, rax	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_25
0x40057ef	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_25
0x40057f7	      0xb800000000	                              mov eax, 0	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_25
0x40057fc	      0xe800000000	                          call 0x4005801	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_25
0x4005801	     0xfbe15000000	           movsx edx, byte [0x04005808] 	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_26
0x4005808	      0xbe00000000	                              mov esi, 0	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_26
0x400580d	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_26
0x4005815	      0xb800000000	                              mov eax, 0	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_26
0x400581a	      0xe800000000	                          call 0x400581f	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_26
0x400581f	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4005824	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4005829	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x400582e	      0xe800000000	                          call 0x4005833	        54	gettext.h	FUNCTION_118
0x4005833	          0x4889c6	                            mov rsi, rax	        54	gettext.h	FUNCTION_118
0x4005836	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_179	CALL_2
0x400583d	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005840	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005845	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005847	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_179	CALL_2
0x400584a	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400584e	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005856	      0xe800000000	                          call 0x400585b	       279	strbuf.h	FUNCTION_179	CALL_2
0x400585b	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005860	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005865	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400586d	      0xe800000000	                          call 0x4005872	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005872	    0x488bb424d000	            mov rsi, qword [rsp + 0xd0] 	      1414	sequencer.c	FUNCTION_45	ELSE_1	CALL_30
0x400587a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005881	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005884	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005889	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400588b	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_179	CALL_2
0x400588e	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005892	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400589a	      0xe800000000	                          call 0x400589f	       279	strbuf.h	FUNCTION_179	CALL_2
0x400589f	          0x4c89ee	                            mov rsi, r13	      1416	sequencer.c	FUNCTION_45	ELSE_1	CALL_31
0x40058a2	          0x4c89f7	                            mov rdi, r14	      1416	sequencer.c	FUNCTION_45	ELSE_1	CALL_31
0x40058a5	      0xe800000000	                          call 0x40058aa	      1416	sequencer.c	FUNCTION_45	ELSE_1	CALL_31
0x40058aa	      0xbe00000000	                              mov esi, 0	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_32
0x40058af	          0x4c89ff	                            mov rdi, r15	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_32
0x40058b2	      0xe800000000	                          call 0x40058b7	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_32
0x40058b7	          0x4989c5	                            mov r13, rax	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_32
0x40058ba	          0x4885c0	                           test rax, rax	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_32
0x40058bd	            0x7535	                           jne 0x40058f4	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_32
0x40058bf	        0x498d7f04	                      lea rdi, [r15 + 4]	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x40058c3	      0xe800000000	                          call 0x40058c8	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x40058c8	          0x4889c3	                            mov rbx, rax	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x40058cb	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40058d0	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40058d5	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40058da	      0xe800000000	                          call 0x40058df	        54	gettext.h	FUNCTION_118
0x40058df	          0x4889de	                            mov rsi, rbx	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x40058e2	          0x4889c7	                            mov rdi, rax	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x40058e5	      0xb800000000	                              mov eax, 0	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x40058ea	      0xe800000000	                          call 0x40058ef	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x40058ef	      0xe9370e0000	                           jmp 0x400672b	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x40058f4	    0x488db424d000	                   lea rsi, [rsp + 0xd0]	      1422	sequencer.c	FUNCTION_45	CALL_35
0x40058fc	          0x4889c7	                            mov rdi, rax	      1422	sequencer.c	FUNCTION_45	CALL_35
0x40058ff	      0xe800000000	                          call 0x4005904	      1422	sequencer.c	FUNCTION_45	CALL_35
0x4005904	          0x83fd05	                              cmp ebp, 5	      1424	sequencer.c	FUNCTION_45	IF_8
0x4005907	     0xf85ae000000	                           jne 0x40059bb	      1424	sequencer.c	FUNCTION_45	IF_8
0x400590d	      0xe843a9ffff	          call sym.rebase_path_fixup_msg	      1425	sequencer.c	FUNCTION_45	IF_8	CALL_37
0x4005912	          0x4889c7	                            mov rdi, rax	      1425	sequencer.c	FUNCTION_45	IF_8	CALL_37
0x4005915	      0xe800000000	                          call 0x400591a	      1425	sequencer.c	FUNCTION_45	IF_8	CALL_37
0x400591a	     0xfbe15000000	           movsx edx, byte [0x04005921] 	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_38
0x4005921	      0xbe00000000	                              mov esi, 0	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_38
0x4005926	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_38
0x400592e	      0xb800000000	                              mov eax, 0	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_38
0x4005933	      0xe800000000	                          call 0x4005938	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_38
0x4005938	          0x8b4378	            mov eax, dword [rbx + 0x78] 	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x400593b	        0x448d7001	                     lea r14d, [rax + 1]	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x400593f	        0x44897378	            mov dword [rbx + 0x78], r14d	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x4005943	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4005948	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400594d	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4005952	      0xe800000000	                          call 0x4005957	        54	gettext.h	FUNCTION_118
0x4005957	          0x4489f2	                           mov edx, r14d	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x400595a	          0x4889c6	                            mov rsi, rax	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x400595d	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x4005965	      0xb800000000	                              mov eax, 0	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x400596a	      0xe800000000	                          call 0x400596f	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x400596f	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005974	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005979	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005981	      0xe800000000	                          call 0x4005986	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005986	    0x488bb424d000	            mov rsi, qword [rsp + 0xd0] 	      1430	sequencer.c	FUNCTION_45	IF_8	CALL_42
0x400598e	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005993	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_179	CALL_2
0x400599a	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_179	CALL_2
0x400599d	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400599f	          0x4889c8	                            mov rax, rcx	       279	strbuf.h	FUNCTION_179	CALL_2
0x40059a2	          0x48f7d0	                                 not rax	       279	strbuf.h	FUNCTION_179	CALL_2
0x40059a5	        0x488d50ff	                      lea rdx, [rax - 1]	       279	strbuf.h	FUNCTION_179	CALL_2
0x40059a9	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	       279	strbuf.h	FUNCTION_179	CALL_2
0x40059b1	      0xe800000000	                          call 0x40059b6	       279	strbuf.h	FUNCTION_179	CALL_2
0x40059b6	      0xe9cf000000	                           jmp 0x4005a8a	       279	strbuf.h	FUNCTION_179	CALL_2
0x40059bb	          0x83fd04	                              cmp ebp, 4	      1431	sequencer.c	FUNCTION_45	ELSE_2	IF_9
0x40059be	     0xf859e000000	                           jne 0x4005a62	      1431	sequencer.c	FUNCTION_45	ELSE_2	IF_9
0x40059c4	     0xfbe15000000	           movsx edx, byte [0x040059cb] 	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_43
0x40059cb	      0xbe00000000	                              mov esi, 0	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_43
0x40059d0	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_43
0x40059d8	      0xb800000000	                              mov eax, 0	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_43
0x40059dd	      0xe800000000	                          call 0x40059e2	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_43
0x40059e2	          0x8b4378	            mov eax, dword [rbx + 0x78] 	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x40059e5	        0x448d7001	                     lea r14d, [rax + 1]	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x40059e9	        0x44897378	            mov dword [rbx + 0x78], r14d	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x40059ed	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40059f2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40059f7	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40059fc	      0xe800000000	                          call 0x4005a01	        54	gettext.h	FUNCTION_118
0x4005a01	          0x4489f2	                           mov edx, r14d	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x4005a04	          0x4889c6	                            mov rsi, rax	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x4005a07	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x4005a0f	      0xb800000000	                              mov eax, 0	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x4005a14	      0xe800000000	                          call 0x4005a19	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x4005a19	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005a1e	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005a23	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005a2b	      0xe800000000	                          call 0x4005a30	       279	strbuf.h	FUNCTION_179	CALL_2
0x4005a30	    0x488bb424d000	            mov rsi, qword [rsp + 0xd0] 	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x4005a38	      0xb800000000	                              mov eax, 0	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x4005a3d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x4005a44	          0x4889f7	                            mov rdi, rsi	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x4005a47	            0xf2ae	              repne scasb al, byte [rdi]	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x4005a49	          0x4889c8	                            mov rax, rcx	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x4005a4c	          0x48f7d0	                                 not rax	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x4005a4f	        0x488d50ff	                      lea rdx, [rax - 1]	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x4005a53	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x4005a5b	      0xe800000000	                          call 0x4005a60	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x4005a60	            0xeb28	                           jmp 0x4005a8a	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x4005a62	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4005a67	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4005a6c	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4005a71	      0xe800000000	                          call 0x4005a76	        54	gettext.h	FUNCTION_118
0x4005a76	            0x89ee	                            mov esi, ebp	      1438	sequencer.c	FUNCTION_45	CALL_49
0x4005a78	          0x4889c7	                            mov rdi, rax	      1438	sequencer.c	FUNCTION_45	CALL_49
0x4005a7b	      0xb800000000	                              mov eax, 0	      1438	sequencer.c	FUNCTION_45	CALL_49
0x4005a80	      0xe800000000	                          call 0x4005a85	      1438	sequencer.c	FUNCTION_45	CALL_49
0x4005a85	      0xe9a10c0000	                           jmp 0x400672b	      1438	sequencer.c	FUNCTION_45	CALL_49
0x4005a8a	          0x4c89ee	                            mov rsi, r13	      1439	sequencer.c	FUNCTION_45	CALL_50
0x4005a8d	          0x4c89ff	                            mov rdi, r15	      1439	sequencer.c	FUNCTION_45	CALL_50
0x4005a90	      0xe800000000	                          call 0x4005a95	      1439	sequencer.c	FUNCTION_45	CALL_50
0x4005a95	      0xe8f3a7ffff	         call sym.rebase_path_squash_msg	      1441	sequencer.c	FUNCTION_45	CALL_52
0x4005a9a	      0xb900000000	                              mov ecx, 0	      1441	sequencer.c	FUNCTION_45	CALL_52
0x4005a9f	          0x4889c2	                            mov rdx, rax	      1441	sequencer.c	FUNCTION_45	CALL_52
0x4005aa2	    0x488bb424b800	            mov rsi, qword [rsp + 0xb8] 	      1441	sequencer.c	FUNCTION_45	CALL_52
0x4005aaa	    0x488bbc24c000	            mov rdi, qword [rsp + 0xc0] 	      1441	sequencer.c	FUNCTION_45	CALL_52
0x4005ab2	      0xe87bb1ffff	                  call sym.write_message	      1441	sequencer.c	FUNCTION_45	CALL_52
0x4005ab7	          0x4189c5	                           mov r13d, eax	      1441	sequencer.c	FUNCTION_45	CALL_52
0x4005aba	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      1442	sequencer.c	FUNCTION_45	CALL_53
0x4005ac2	      0xe800000000	                          call 0x4005ac7	      1442	sequencer.c	FUNCTION_45	CALL_53
0x4005ac7	          0x4585ed	                         test r13d, r13d	      1444	sequencer.c	FUNCTION_45	IF_10
0x4005aca	     0xf855b0c0000	                           jne 0x400672b	      1444	sequencer.c	FUNCTION_45	IF_10
0x4005ad0	        0x498d7f04	                      lea rdi, [r15 + 4]	      1448	sequencer.c	FUNCTION_45	IF_10	CALL_56
0x4005ad4	      0xe800000000	                          call 0x4005ad9	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4005ad9	          0x4989c5	                            mov r13, rax	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4005adc	            0x89ef	                            mov edi, ebp	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4005ade	      0xe81dacffff	              call sym.command_to_string	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4005ae3	      0x48837b6800	               cmp qword [rbx + 0x68], 0	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4005ae8	      0xb900000000	                              mov ecx, 0	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4005aed	      0xba00000000	                              mov edx, 0	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4005af2	        0x480f44d1	                          cmove rdx, rcx	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4005af6	        0x488d7b60	                   lea rdi, [rbx + 0x60]	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4005afa	          0x4d89e8	                             mov r8, r13	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4005afd	          0x4889c1	                            mov rcx, rax	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4005b00	      0xbe00000000	                              mov esi, 0	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4005b05	      0xb800000000	                              mov eax, 0	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4005b0a	      0xe800000000	                          call 0x4005b0f	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4005b0f	      0xe829a6ffff	     call sym.rebase_path_current_fixups	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_57
0x4005b14	        0x488b7368	            mov rsi, qword [rbx + 0x68] 	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_57
0x4005b18	        0x488b7b70	            mov rdi, qword [rbx + 0x70] 	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_57
0x4005b1c	      0xb900000000	                              mov ecx, 0	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_57
0x4005b21	          0x4889c2	                            mov rdx, rax	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_57
0x4005b24	      0xe809b1ffff	                  call sym.write_message	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_57
0x4005b29	            0x85c0	                           test eax, eax	      1625	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23	CALL_47
0x4005b2b	     0xf85b20b0000	                           jne 0x40066e3	      1625	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23	CALL_47
0x4005b31	      0x837c243400	               cmp dword [rsp + 0x34], 0	      1628	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_24
0x4005b36	            0x7514	                           jne 0x4005b4c	      1628	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_24
0x4005b38	      0x834c243004	                or dword [rsp + 0x30], 4	      1627	sequencer.c	FUNCTION_48	ELSE_6	IF_22
0x4005b3d	      0xe84ba7ffff	         call sym.rebase_path_squash_msg	      1629	sequencer.c	FUNCTION_48	ELSE_6	IF_22	CALL_48
0x4005b42	      0x4889442428	             mov qword [rsp + 0x28], rax	      1629	sequencer.c	FUNCTION_48	ELSE_6	IF_22	CALL_48
0x4005b47	      0xe9390c0000	                           jmp 0x4006785	      1629	sequencer.c	FUNCTION_48	ELSE_6	IF_22	CALL_48
0x4005b4c	      0xe804a7ffff	          call sym.rebase_path_fixup_msg	      1630	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_50
0x4005b51	          0x4889c7	                            mov rdi, rax	      1630	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_50
0x4005b54	      0xe800000000	                          call 0x4005b59	      1630	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_50
0x4005b59	            0x85c0	                           test eax, eax	      1630	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_50
0x4005b5b	            0x7414	                            je 0x4005b71	      1630	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_50
0x4005b5d	      0x834c24300c	              or dword [rsp + 0x30], 0xc	      1631	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25
0x4005b62	      0xe8eea6ffff	          call sym.rebase_path_fixup_msg	      1632	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_51
0x4005b67	      0x4889442428	             mov qword [rsp + 0x28], rax	      1632	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_51
0x4005b6c	      0xe9140c0000	                           jmp 0x4006785	      1632	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_51
0x4005b71	      0xe800000000	                          call 0x4005b76	      1634	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_52
0x4005b76	          0x4989c6	                            mov r14, rax	      1634	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_52
0x4005b79	      0x4889442428	             mov qword [rsp + 0x28], rax	      1634	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_52
0x4005b7e	          0x4889c7	                            mov rdi, rax	      1635	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_53
0x4005b81	      0xe800000000	                          call 0x4005b86	      1635	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_53
0x4005b86	      0xe802a7ffff	         call sym.rebase_path_squash_msg	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x4005b8b	      0xbab6010000	                          mov edx, 0x1b6	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x4005b90	          0x4889c6	                            mov rsi, rax	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x4005b93	          0x4c89f7	                            mov rdi, r14	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x4005b96	      0xe800000000	                          call 0x4005b9b	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x4005b9b	            0x85c0	                           test eax, eax	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x4005b9d	            0x743b	                            je 0x4005bda	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x4005b9f	      0xe8e9a6ffff	         call sym.rebase_path_squash_msg	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4005ba4	          0x4889c3	                            mov rbx, rax	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4005ba7	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4005bac	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4005bb1	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4005bb6	      0xe800000000	                          call 0x4005bbb	        54	gettext.h	FUNCTION_118
0x4005bbb	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4005bc0	          0x4889de	                            mov rsi, rbx	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4005bc3	          0x4889c7	                            mov rdi, rax	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4005bc6	      0xb800000000	                              mov eax, 0	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4005bcb	      0xe800000000	                          call 0x4005bd0	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4005bd0	      0xb8ffffffff	                     mov eax, 0xffffffff	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4005bd5	      0xe9100b0000	                           jmp 0x40066ea	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4005bda	      0xe800000000	                          call 0x4005bdf	      1639	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_59
0x4005bdf	          0x4889c7	                            mov rdi, rax	      1639	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_59
0x4005be2	      0xe800000000	                          call 0x4005be7	      1639	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_59
0x4005be7	    0xc74424300600	               mov dword [rsp + 0x30], 6	      1641	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8
0x4005bef	      0xe9910b0000	                           jmp 0x4006785	      1641	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8
0x4005bf4	          0x833b02	                      cmp dword [rbx], 2	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4005bf7	            0x7511	                           jne 0x4005c0a	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4005bf9	        0x488b3c24	                    mov rdi, qword [rsp]	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4005bfd	      0xe848bfffff	            call sym.write_author_script	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4005c02	            0x85c0	                           test eax, eax	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4005c04	     0xf8834010000	                            js 0x4005d3e	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4005c0a	        0x488b7340	            mov rsi, qword [rbx + 0x40] 	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x4005c0e	          0x4885f6	                           test rsi, rsi	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x4005c11	            0x7420	                            je 0x4005c33	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x4005c13	      0xbf00000000	                              mov edi, 0	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x4005c18	      0xb90a000000	                            mov ecx, 0xa	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x4005c1d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x4005c1f	           0xf97c0	                                 seta al	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x4005c22	           0xf92c2	                                 setb dl	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x4005c25	            0x29d0	                            sub eax, edx	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x4005c27	           0xfbec0	                           movsx eax, al	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x4005c2a	          0x83fd01	                              cmp ebp, 1	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x4005c2d	            0x7404	                            je 0x4005c33	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x4005c2f	            0x85c0	                           test eax, eax	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x4005c31	            0x755e	                           jne 0x4005c91	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x4005c33	        0x4883ec08	                              sub rsp, 8	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4005c37	              0x53	                                push rbx	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4005c38	    0x4c8d8c248000	                    lea r9, [rsp + 0x80]	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4005c40	    0x4c8d84240001	                   lea r8, [rsp + 0x100]	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4005c48	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4005c4d	          0x4c89f2	                            mov rdx, r14	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4005c50	          0x4c89ee	                            mov rsi, r13	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4005c53	          0x4c89e7	                            mov rdi, r12	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4005c56	      0xe86de0ffff	             call sym.do_recursive_merge	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4005c5b	          0x4189c6	                           mov r14d, eax	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4005c5e	        0x4883c410	                           add rsp, 0x10	      1653	sequencer.c	FUNCTION_48	ELSE_9	IF_29	IF_30
0x4005c62	            0x85c0	                           test eax, eax	      1653	sequencer.c	FUNCTION_48	ELSE_9	IF_29	IF_30
0x4005c64	     0xf88800a0000	                            js 0x40066ea	      1653	sequencer.c	FUNCTION_48	ELSE_9	IF_29	IF_30
0x4005c6a	      0xe800000000	                          call 0x4005c6f	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4005c6f	      0xb900000000	                              mov ecx, 0	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4005c74	          0x4889c2	                            mov rdx, rax	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4005c77	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4005c7c	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4005c84	      0xe8a9afffff	                  call sym.write_message	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4005c89	          0x4109c6	                            or r14d, eax	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4005c8c	      0xe9b3000000	                           jmp 0x4005d44	      1656	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_66
0x4005c91	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	      1658	sequencer.c	FUNCTION_48	ELSE_10
0x4005c9d	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	      1659	sequencer.c	FUNCTION_48	ELSE_10
0x4005ca9	      0xe800000000	                          call 0x4005cae	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_67
0x4005cae	      0xb900000000	                              mov ecx, 0	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_67
0x4005cb3	          0x4889c2	                            mov rdx, rax	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_67
0x4005cb6	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_67
0x4005cbb	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_67
0x4005cc3	      0xe86aafffff	                  call sym.write_message	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_67
0x4005cc8	          0x4189c6	                           mov r14d, eax	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_67
0x4005ccb	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	      1664	sequencer.c	FUNCTION_48	ELSE_10	CALL_69
0x4005cd3	          0x4c89e7	                            mov rdi, r12	      1664	sequencer.c	FUNCTION_48	ELSE_10	CALL_69
0x4005cd6	      0xe800000000	                          call 0x4005cdb	      1664	sequencer.c	FUNCTION_48	ELSE_10	CALL_69
0x4005cdb	    0x488db424d000	                   lea rsi, [rsp + 0xd0]	      1665	sequencer.c	FUNCTION_48	ELSE_10	CALL_70
0x4005ce3	          0x4c89ef	                            mov rdi, r13	      1665	sequencer.c	FUNCTION_48	ELSE_10	CALL_70
0x4005ce6	      0xe800000000	                          call 0x4005ceb	      1665	sequencer.c	FUNCTION_48	ELSE_10	CALL_70
0x4005ceb	    0x4c8ba424d000	            mov r12, qword [rsp + 0xd0] 	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x4005cf3	    0x488dbc24f000	                   lea rdi, [rsp + 0xf0]	      1668	sequencer.c	FUNCTION_48	ELSE_10	CALL_72
0x4005cfb	      0xe800000000	                          call 0x4005d00	      1668	sequencer.c	FUNCTION_48	ELSE_10	CALL_72
0x4005d00	          0x4989c0	                             mov r8, rax	      1668	sequencer.c	FUNCTION_48	ELSE_10	CALL_72
0x4005d03	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x4005d07	        0x488b7350	            mov rsi, qword [rbx + 0x50] 	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x4005d0b	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x4005d0f	          0x4d89e1	                             mov r9, r12	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x4005d12	    0x488b8c24b000	            mov rcx, qword [rsp + 0xb0] 	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x4005d1a	      0xe800000000	                          call 0x4005d1f	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x4005d1f	          0x4109c6	                            or r14d, eax	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x4005d22	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	      1669	sequencer.c	FUNCTION_48	ELSE_10	CALL_73
0x4005d2a	      0xe800000000	                          call 0x4005d2f	      1669	sequencer.c	FUNCTION_48	ELSE_10	CALL_73
0x4005d2f	    0x488bbc24d000	            mov rdi, qword [rsp + 0xd0] 	      1670	sequencer.c	FUNCTION_48	ELSE_10	CALL_74
0x4005d37	      0xe800000000	                          call 0x4005d3c	      1670	sequencer.c	FUNCTION_48	ELSE_10	CALL_74
0x4005d3c	            0xeb06	                           jmp 0x4005d44	      1670	sequencer.c	FUNCTION_48	ELSE_10	CALL_74
0x4005d3e	    0x41beffffffff	                    mov r14d, 0xffffffff	      1649	sequencer.c	FUNCTION_48	IF_28
0x4005d44	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      1672	sequencer.c	FUNCTION_48	CALL_75
0x4005d49	      0xe800000000	                          call 0x4005d4e	      1672	sequencer.c	FUNCTION_48	CALL_75
0x4005d4e	            0x85ed	                           test ebp, ebp	      1680	sequencer.c	FUNCTION_48	IF_31
0x4005d50	            0x7545	                           jne 0x4005d97	      1680	sequencer.c	FUNCTION_48	IF_31
0x4005d52	        0x837b0c00	                cmp dword [rbx + 0xc], 0	      1680	sequencer.c	FUNCTION_48	IF_31
0x4005d56	     0xf85400a0000	                           jne 0x400679c	      1680	sequencer.c	FUNCTION_48	IF_31
0x4005d5c	        0x4183fe01	                             cmp r14d, 1	      1680	sequencer.c	FUNCTION_48	IF_31
0x4005d60	     0xf87360a0000	                            ja 0x400679c	      1680	sequencer.c	FUNCTION_48	IF_31
0x4005d66	        0x498d5704	                      lea rdx, [r15 + 4]	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_76
0x4005d6a	    0x41b900000000	                              mov r9d, 0	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_76
0x4005d70	    0x41b801000000	                              mov r8d, 1	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_76
0x4005d76	      0xb900000000	                              mov ecx, 0	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_76
0x4005d7b	      0xbe00000000	                              mov esi, 0	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_76
0x4005d80	      0xbf00000000	                              mov edi, 0	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_76
0x4005d85	      0xe800000000	                          call 0x4005d8a	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_76
0x4005d8a	            0x85c0	                           test eax, eax	      1680	sequencer.c	FUNCTION_48	IF_31
0x4005d8c	     0xf85240b0000	                           jne 0x40068b6	      1680	sequencer.c	FUNCTION_48	IF_31
0x4005d92	      0xe9050a0000	                           jmp 0x400679c	      1680	sequencer.c	FUNCTION_48	IF_31
0x4005d97	          0x83fd01	                              cmp ebp, 1	      1684	sequencer.c	FUNCTION_48	IF_32
0x4005d9a	     0xf85350a0000	                           jne 0x40067d5	      1684	sequencer.c	FUNCTION_48	IF_32
0x4005da0	        0x837b0c00	                cmp dword [rbx + 0xc], 0	      1684	sequencer.c	FUNCTION_48	IF_32
0x4005da4	            0x7405	                            je 0x4005dab	      1684	sequencer.c	FUNCTION_48	IF_32
0x4005da6	          0x4585f6	                         test r14d, r14d	      1684	sequencer.c	FUNCTION_48	IF_32
0x4005da9	            0x740a	                            je 0x4005db5	      1684	sequencer.c	FUNCTION_48	IF_32
0x4005dab	        0x4183fe01	                             cmp r14d, 1	      1684	sequencer.c	FUNCTION_48	IF_32
0x4005daf	     0xf85050a0000	                           jne 0x40067ba	      1684	sequencer.c	FUNCTION_48	IF_32
0x4005db5	        0x498d5704	                      lea rdx, [r15 + 4]	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x4005db9	    0x41b900000000	                              mov r9d, 0	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x4005dbf	    0x41b801000000	                              mov r8d, 1	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x4005dc5	      0xb900000000	                              mov ecx, 0	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x4005dca	      0xbe00000000	                              mov esi, 0	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x4005dcf	      0xbf00000000	                              mov edi, 0	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x4005dd4	      0xe800000000	                          call 0x4005dd9	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x4005dd9	            0x85c0	                           test eax, eax	      1684	sequencer.c	FUNCTION_48	IF_32
0x4005ddb	     0xf85bf0a0000	                           jne 0x40068a0	      1684	sequencer.c	FUNCTION_48	IF_32
0x4005de1	      0xe9d4090000	                           jmp 0x40067ba	      1684	sequencer.c	FUNCTION_48	IF_32
0x4005de6	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4005deb	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4005df0	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4005df5	      0xe800000000	                          call 0x4005dfa	        54	gettext.h	FUNCTION_118
0x4005dfa	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_118
0x4005dfd	            0xeb17	                           jmp 0x4005e16	        54	gettext.h	FUNCTION_118
0x4005dff	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4005e04	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4005e09	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4005e0e	      0xe800000000	                          call 0x4005e13	        54	gettext.h	FUNCTION_118
0x4005e13	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_118
0x4005e16	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1690	sequencer.c	FUNCTION_48	IF_33
0x4005e1b	          0x4889ee	                            mov rsi, rbp	      1690	sequencer.c	FUNCTION_48	IF_33
0x4005e1e	      0xb800000000	                              mov eax, 0	      1690	sequencer.c	FUNCTION_48	IF_33
0x4005e23	      0xe800000000	                          call 0x4005e28	      1690	sequencer.c	FUNCTION_48	IF_33
0x4005e28	      0xbf00000000	                              mov edi, 0	       342	sequencer.c	FUNCTION_13	CALL_1
0x4005e2d	      0xe800000000	                          call 0x4005e32	       342	sequencer.c	FUNCTION_13	CALL_1
0x4005e32	          0x4885c0	                           test rax, rax	       344	sequencer.c	FUNCTION_13	IF_1
0x4005e35	            0x742d	                            je 0x4005e64	       344	sequencer.c	FUNCTION_13	IF_1
0x4005e37	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_575
0x4005e3a	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_575
0x4005e3f	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_575
0x4005e44	    0x488b3d000000	            mov rdi, qword [0x04005e4b] 	        97	stdio2.h	CALL_575
0x4005e4b	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_575
0x4005e50	      0xe800000000	                          call 0x4005e55	        97	stdio2.h	CALL_575
0x4005e55	      0xe800000000	                          call 0x4005e5a	       351	sequencer.c	FUNCTION_13	IF_1	CALL_3
0x4005e5a	          0x4889c7	                            mov rdi, rax	       351	sequencer.c	FUNCTION_13	IF_1	CALL_3
0x4005e5d	      0xe800000000	                          call 0x4005e62	       351	sequencer.c	FUNCTION_13	IF_1	CALL_3
0x4005e62	            0xeb50	                           jmp 0x4005eb4	       351	sequencer.c	FUNCTION_13	IF_1	CALL_3
0x4005e64	        0x4183fe01	                             cmp r14d, 1	       355	sequencer.c	FUNCTION_13	IF_2
0x4005e68	            0x754a	                           jne 0x4005eb4	       355	sequencer.c	FUNCTION_13	IF_2
0x4005e6a	        0x837b0c00	                cmp dword [rbx + 0xc], 0	       356	sequencer.c	FUNCTION_13	IF_2	IF_3
0x4005e6e	            0x7423	                            je 0x4005e93	       356	sequencer.c	FUNCTION_13	IF_2	IF_3
0x4005e70	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4005e75	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4005e7a	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4005e7f	      0xe800000000	                          call 0x4005e84	        54	gettext.h	FUNCTION_118
0x4005e84	          0x4889c7	                            mov rdi, rax	       357	sequencer.c	FUNCTION_13	IF_2	IF_3	CALL_5
0x4005e87	      0xb800000000	                              mov eax, 0	       357	sequencer.c	FUNCTION_13	IF_2	IF_3	CALL_5
0x4005e8c	      0xe800000000	                          call 0x4005e91	       357	sequencer.c	FUNCTION_13	IF_2	IF_3	CALL_5
0x4005e91	            0xeb21	                           jmp 0x4005eb4	       357	sequencer.c	FUNCTION_13	IF_2	IF_3	CALL_5
0x4005e93	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4005e98	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4005e9d	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4005ea2	      0xe800000000	                          call 0x4005ea7	        54	gettext.h	FUNCTION_118
0x4005ea7	          0x4889c7	                            mov rdi, rax	       360	sequencer.c	FUNCTION_13	IF_2	ELSE_1	CALL_7
0x4005eaa	      0xb800000000	                              mov eax, 0	       360	sequencer.c	FUNCTION_13	IF_2	ELSE_1	CALL_7
0x4005eaf	      0xe800000000	                          call 0x4005eb4	       360	sequencer.c	FUNCTION_13	IF_2	ELSE_1	CALL_7
0x4005eb4	          0x8b7b18	            mov edi, dword [rbx + 0x18] 	      1695	sequencer.c	FUNCTION_48	IF_33	CALL_82
0x4005eb7	      0xe800000000	                          call 0x4005ebc	      1695	sequencer.c	FUNCTION_48	IF_33	CALL_82
0x4005ebc	      0xe9e4070000	                           jmp 0x40066a5	      1696	sequencer.c	FUNCTION_48	IF_33
0x4005ec1	        0x837b1c00	               cmp dword [rbx + 0x1c], 0	      1277	sequencer.c	FUNCTION_40	IF_1
0x4005ec5	     0xf8411010000	                            je 0x4005fdc	      1277	sequencer.c	FUNCTION_40	IF_1
0x4005ecb	      0xb900000000	                              mov ecx, 0	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4005ed0	    0x488d94243001	                  lea rdx, [rsp + 0x130]	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4005ed8	      0xbe01000000	                              mov esi, 1	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4005edd	      0xbf00000000	                              mov edi, 0	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4005ee2	      0xe800000000	                          call 0x4005ee7	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4005ee7	          0x4885c0	                           test rax, rax	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4005eea	            0x7526	                           jne 0x4005f12	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4005eec	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4005ef1	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4005ef6	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4005efb	      0xe800000000	                          call 0x4005f00	        54	gettext.h	FUNCTION_118
0x4005f00	          0x4889c7	                            mov rdi, rax	       570	sequencer.c	FUNCTION_22	CALL_2
0x4005f03	      0xb800000000	                              mov eax, 0	       570	sequencer.c	FUNCTION_22	CALL_2
0x4005f08	      0xe800000000	                          call 0x4005f0d	       570	sequencer.c	FUNCTION_22	CALL_2
0x4005f0d	      0xe9ce080000	                           jmp 0x40067e0	       570	sequencer.c	FUNCTION_22	CALL_2
0x4005f12	    0x488dbc243001	                  lea rdi, [rsp + 0x130]	       572	sequencer.c	FUNCTION_22	CALL_3
0x4005f1a	      0xe800000000	                          call 0x4005f1f	       572	sequencer.c	FUNCTION_22	CALL_3
0x4005f1f	          0x4989c4	                            mov r12, rax	       572	sequencer.c	FUNCTION_22	CALL_3
0x4005f22	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_147	CALL_1
0x4005f27	          0x4889c7	                            mov rdi, rax	        75	commit.h	FUNCTION_147	CALL_1
0x4005f2a	      0xe800000000	                          call 0x4005f2f	        75	commit.h	FUNCTION_147	CALL_1
0x4005f2f	            0x85c0	                           test eax, eax	       582	sequencer.c	FUNCTION_22	IF_2	CALL_4
0x4005f31	     0xf85a9080000	                           jne 0x40067e0	       582	sequencer.c	FUNCTION_22	IF_2	CALL_4
0x4005f37	    0x48833d000000	               cmp qword [0x04005f3f], 0	       585	sequencer.c	FUNCTION_22	IF_3
0x4005f3f	            0x750c	                           jne 0x4005f4d	       585	sequencer.c	FUNCTION_22	IF_3
0x4005f41	      0xe800000000	                          call 0x4005f46	       586	sequencer.c	FUNCTION_22	CALL_5
0x4005f46	    0x488905000000	            mov qword [0x04005f4d], rax 	       586	sequencer.c	FUNCTION_22	CALL_5
0x4005f4d	    0x488b3d000000	            mov rdi, qword [0x04005f54] 	       588	sequencer.c	FUNCTION_22	IF_4	CALL_6
0x4005f54	      0xe800000000	                          call 0x4005f59	       588	sequencer.c	FUNCTION_22	IF_4	CALL_6
0x4005f59	            0x85c0	                           test eax, eax	       588	sequencer.c	FUNCTION_22	IF_4	CALL_6
0x4005f5b	            0x7539	                           jne 0x4005f96	       588	sequencer.c	FUNCTION_22	IF_4	CALL_6
0x4005f5d	      0xbe00000000	                              mov esi, 0	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_7
0x4005f62	      0xbf00000000	                              mov edi, 0	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_7
0x4005f67	      0xe800000000	                          call 0x4005f6c	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_7
0x4005f6c	            0x85c0	                           test eax, eax	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_7
0x4005f6e	            0x7426	                            je 0x4005f96	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_7
0x4005f70	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4005f75	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4005f7a	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4005f7f	      0xe800000000	                          call 0x4005f84	        54	gettext.h	FUNCTION_118
0x4005f84	          0x4889c7	                            mov rdi, rax	       590	sequencer.c	FUNCTION_22	IF_4	IF_5
0x4005f87	      0xb800000000	                              mov eax, 0	       590	sequencer.c	FUNCTION_22	IF_4	IF_5
0x4005f8c	      0xe800000000	                          call 0x4005f91	       590	sequencer.c	FUNCTION_22	IF_4	IF_5
0x4005f91	      0xe94a080000	                           jmp 0x40067e0	       590	sequencer.c	FUNCTION_22	IF_4	IF_5
0x4005f96	          0x4c89e7	                            mov rdi, r12	       593	sequencer.c	FUNCTION_22	CALL_10
0x4005f99	      0xe800000000	                          call 0x4005f9e	       593	sequencer.c	FUNCTION_22	CALL_10
0x4005f9e	    0x488b0d000000	            mov rcx, qword [0x04005fa5] 	       975	cache.h	FUNCTION_155	CALL_1
0x4005fa5	        0x488d7904	                      lea rdi, [rcx + 4]	       975	cache.h	FUNCTION_155	CALL_1
0x4005fa9	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_155	CALL_1
0x4005fae	          0x4889c6	                            mov rsi, rax	       975	cache.h	FUNCTION_155	CALL_1
0x4005fb1	      0xe800000000	                          call 0x4005fb6	       975	cache.h	FUNCTION_155	CALL_1
0x4005fb6	            0x85c0	                           test eax, eax	      1283	sequencer.c	FUNCTION_40	IF_3
0x4005fb8	            0x7522	                           jne 0x4005fdc	      1283	sequencer.c	FUNCTION_40	IF_3
0x4005fba	        0x837b2400	               cmp dword [rbx + 0x24], 0	      1286	sequencer.c	FUNCTION_40	IF_4
0x4005fbe	            0x7517	                           jne 0x4005fd7	      1286	sequencer.c	FUNCTION_40	IF_4
0x4005fc0	          0x4c89ff	                            mov rdi, r15	      1289	sequencer.c	FUNCTION_40	CALL_2
0x4005fc3	      0xe800b6ffff	       call sym.is_original_commit_empty	      1289	sequencer.c	FUNCTION_40	CALL_2
0x4005fc8	          0x4189c6	                           mov r14d, eax	      1289	sequencer.c	FUNCTION_40	CALL_2
0x4005fcb	            0x85c0	                           test eax, eax	      1290	sequencer.c	FUNCTION_40	IF_5
0x4005fcd	     0xf88d2060000	                            js 0x40066a5	      1290	sequencer.c	FUNCTION_40	IF_5
0x4005fd3	            0x85c0	                           test eax, eax	      1703	sequencer.c	FUNCTION_48	ELSE_11	IF_35
0x4005fd5	            0x7405	                            je 0x4005fdc	      1703	sequencer.c	FUNCTION_48	ELSE_11	IF_35
0x4005fd7	      0x834c243001	                or dword [rsp + 0x30], 1	      1704	sequencer.c	FUNCTION_48	ELSE_11	IF_35
0x4005fdc	        0x837b0c00	                cmp dword [rbx + 0xc], 0	      1705	sequencer.c	FUNCTION_48	IF_36
0x4005fe0	     0xf8539060000	                           jne 0x400661f	      1705	sequencer.c	FUNCTION_48	IF_36
0x4005fe6	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x4005fec	            0x7510	                           jne 0x4005ffe	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x4005fee	          0x83fd01	                              cmp ebp, 1	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x4005ff1	            0x740b	                            je 0x4005ffe	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x4005ff3	      0xf644243004	               test byte [rsp + 0x30], 4	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x4005ff8	     0xf84f5050000	                            je 0x40065f3	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x4005ffe	      0xf644243012	           test byte [rsp + 0x30], 0x12 	      1213	sequencer.c	FUNCTION_38	IF_1
0x4006003	     0xf85d4050000	                           jne 0x40065dd	      1213	sequencer.c	FUNCTION_38	IF_1
0x4006009	    0x48c784249000	               mov qword [rsp + 0x90], 0	      1215	sequencer.c	FUNCTION_38	IF_1
0x4006015	    0x48c784249800	               mov qword [rsp + 0x98], 0	      1215	sequencer.c	FUNCTION_38	IF_1
0x4006021	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	      1215	sequencer.c	FUNCTION_38	IF_1
0x400602d	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4006032	          0x4885c0	                           test rax, rax	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4006035	            0x7453	                            je 0x400608a	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4006037	      0xba00080000	                          mov edx, 0x800	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x400603c	          0x4889c6	                            mov rsi, rax	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x400603f	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4006047	      0xe800000000	                          call 0x400604c	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x400604c	    0x4c8da4249000	                   lea r12, [rsp + 0x90]	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_3
0x4006054	          0x4885c0	                           test rax, rax	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4006057	            0x7937	                           jns 0x4006090	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4006059	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400605e	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4006063	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4006068	      0xe800000000	                          call 0x400606d	        54	gettext.h	FUNCTION_118
0x400606d	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x4006072	          0x4889c7	                            mov rdi, rax	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x4006075	      0xb800000000	                              mov eax, 0	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x400607a	      0xe800000000	                          call 0x400607f	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x400607f	    0x41beffffffff	                    mov r14d, 0xffffffff	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x4006085	      0xe99b050000	                           jmp 0x4006625	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x400608a	    0x41bc00000000	                             mov r12d, 0	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_3
0x4006090	    0x48c744245800	               mov qword [rsp + 0x58], 0	      1108	sequencer.c	FUNCTION_37
0x4006099	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	      1110	sequencer.c	FUNCTION_37
0x40060a5	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	      1110	sequencer.c	FUNCTION_37
0x40060b1	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	      1110	sequencer.c	FUNCTION_37
0x40060bd	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	      1111	sequencer.c	FUNCTION_37
0x40060c9	    0x48c78424d800	               mov qword [rsp + 0xd8], 0	      1111	sequencer.c	FUNCTION_37
0x40060d5	    0x48c78424e000	               mov qword [rsp + 0xe0], 0	      1111	sequencer.c	FUNCTION_37
0x40060e1	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      1117	sequencer.c	FUNCTION_37	IF_1	CALL_1
0x40060e6	      0xe833aaffff	                     call sym.parse_head	      1117	sequencer.c	FUNCTION_37	IF_1	CALL_1
0x40060eb	            0x85c0	                           test eax, eax	      1117	sequencer.c	FUNCTION_37	IF_1	CALL_1
0x40060ed	     0xf8503070000	                           jne 0x40067f6	      1117	sequencer.c	FUNCTION_37	IF_1	CALL_1
0x40060f3	      0x448b742430	           mov r14d, dword [rsp + 0x30] 	      1120	sequencer.c	FUNCTION_37	IF_2
0x40060f8	        0x4183e604	                             and r14d, 4	      1120	sequencer.c	FUNCTION_37	IF_2
0x40060fc	     0xf8426010000	                            je 0x4006228	      1120	sequencer.c	FUNCTION_37	IF_2
0x4006102	    0x48c784243001	              mov qword [rsp + 0x130], 0	      1121	sequencer.c	FUNCTION_37	IF_2
0x400610e	    0x48c784243801	              mov qword [rsp + 0x138], 0	      1121	sequencer.c	FUNCTION_37	IF_2
0x400611a	      0xe800000000	                          call 0x400611f	      1122	sequencer.c	FUNCTION_37	IF_2	CALL_2
0x400611f	          0x4889c2	                            mov rdx, rax	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x4006122	      0xbe00000000	                              mov esi, 0	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x4006127	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x400612c	      0xe800000000	                          call 0x4006131	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x4006131	          0x4889c5	                            mov rbp, rax	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x4006134	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1113	sequencer.c	FUNCTION_37
0x400613d	          0x4d85e4	                           test r12, r12	      1126	sequencer.c	FUNCTION_37	IF_2	IF_3
0x4006140	            0x7554	                           jne 0x4006196	      1126	sequencer.c	FUNCTION_37	IF_2	IF_3
0x4006142	    0x48c744246000	               mov qword [rsp + 0x60], 0	      1127	sequencer.c	FUNCTION_37	IF_2	IF_3
0x400614b	      0x488d742460	                   lea rsi, [rsp + 0x60]	      1129	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_4
0x4006150	          0x4889c7	                            mov rdi, rax	      1129	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_4
0x4006153	      0xe800000000	                          call 0x4006158	      1129	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_4
0x4006158	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      1131	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_5
0x400615d	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x4006162	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_179	CALL_2
0x4006169	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_179	CALL_2
0x400616c	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400616e	          0x4889c8	                            mov rax, rcx	       279	strbuf.h	FUNCTION_179	CALL_2
0x4006171	          0x48f7d0	                                 not rax	       279	strbuf.h	FUNCTION_179	CALL_2
0x4006174	        0x488d50ff	                      lea rdx, [rax - 1]	       279	strbuf.h	FUNCTION_179	CALL_2
0x4006178	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	       279	strbuf.h	FUNCTION_179	CALL_2
0x4006180	      0xe800000000	                          call 0x4006185	       279	strbuf.h	FUNCTION_179	CALL_2
0x4006185	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1132	sequencer.c	FUNCTION_37	IF_2	IF_3
0x400618e	    0x4c8da424d000	                   lea r12, [rsp + 0xd0]	      1130	sequencer.c	FUNCTION_37	IF_2	IF_3
0x4006196	          0x4889ef	                            mov rdi, rbp	      1134	sequencer.c	FUNCTION_37	IF_2	CALL_6
0x4006199	      0xe8d7b3ffff	                     call sym.get_author	      1134	sequencer.c	FUNCTION_37	IF_2	CALL_6
0x400619e	          0x4989c5	                            mov r13, rax	      1134	sequencer.c	FUNCTION_37	IF_2	CALL_6
0x40061a1	      0x4889442440	             mov qword [rsp + 0x40], rax	      1134	sequencer.c	FUNCTION_37	IF_2	CALL_6
0x40061a6	          0x4889ee	                            mov rsi, rbp	      1135	sequencer.c	FUNCTION_37	IF_2	CALL_7
0x40061a9	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      1135	sequencer.c	FUNCTION_37	IF_2	CALL_7
0x40061ae	      0xe800000000	                          call 0x40061b3	      1135	sequencer.c	FUNCTION_37	IF_2	CALL_7
0x40061b3	          0x4d85ed	                           test r13, r13	      1136	sequencer.c	FUNCTION_37	IF_2	IF_4
0x40061b6	            0x753c	                           jne 0x40061f4	      1136	sequencer.c	FUNCTION_37	IF_2	IF_4
0x40061b8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40061bd	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40061c2	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40061c7	      0xe800000000	                          call 0x40061cc	        54	gettext.h	FUNCTION_118
0x40061cc	          0x4889c7	                            mov rdi, rax	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_8
0x40061cf	      0xb800000000	                              mov eax, 0	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_8
0x40061d4	      0xe800000000	                          call 0x40061d9	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_8
0x40061d9	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      1134	sequencer.c	FUNCTION_37	IF_2	CALL_6
0x40061de	      0x4889442438	             mov qword [rsp + 0x38], rax	      1134	sequencer.c	FUNCTION_37	IF_2	CALL_6
0x40061e3	    0x41beffffffff	                    mov r14d, 0xffffffff	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_8
0x40061e9	    0x41bd00000000	                             mov r13d, 0	      1109	sequencer.c	FUNCTION_37
0x40061ef	      0xe9af070000	                           jmp 0x40069a3	      1109	sequencer.c	FUNCTION_37
0x40061f4	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      1140	sequencer.c	FUNCTION_37	IF_2	CALL_9
0x40061f9	        0x488b7830	            mov rdi, qword [rax + 0x30] 	      1140	sequencer.c	FUNCTION_37	IF_2	CALL_9
0x40061fd	      0xe800000000	                          call 0x4006202	      1140	sequencer.c	FUNCTION_37	IF_2	CALL_9
0x4006202	      0x4889442458	             mov qword [rsp + 0x58], rax	      1140	sequencer.c	FUNCTION_37	IF_2	CALL_9
0x4006207	    0x488db4243001	                  lea rsi, [rsp + 0x130]	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x400620f	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x4006214	      0xe800000000	                          call 0x4006219	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x4006219	          0x4989c5	                            mov r13, rax	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x400621c	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      1134	sequencer.c	FUNCTION_37	IF_2	CALL_6
0x4006221	      0x4889442438	             mov qword [rsp + 0x38], rax	      1134	sequencer.c	FUNCTION_37	IF_2	CALL_6
0x4006226	            0xeb5a	                           jmp 0x4006282	      1134	sequencer.c	FUNCTION_37	IF_2	CALL_6
0x4006228	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      1142	sequencer.c	FUNCTION_37	ELSE_1	IF_5
0x400622d	          0x4885ff	                           test rdi, rdi	      1142	sequencer.c	FUNCTION_37	ELSE_1	IF_5
0x4006230	            0x742e	                            je 0x4006260	      1142	sequencer.c	FUNCTION_37	ELSE_1	IF_5
0x4006232	      0x488d742458	                   lea rsi, [rsp + 0x58]	      1143	sequencer.c	FUNCTION_37	ELSE_1	IF_5	CALL_11
0x4006237	      0xe800000000	                          call 0x400623c	      1143	sequencer.c	FUNCTION_37	ELSE_1	IF_5	CALL_11
0x400623c	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1143	sequencer.c	FUNCTION_37	ELSE_1	IF_5	CALL_11
0x4006241	      0x4889442440	             mov qword [rsp + 0x40], rax	      1143	sequencer.c	FUNCTION_37	ELSE_1	IF_5	CALL_11
0x4006246	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1113	sequencer.c	FUNCTION_37
0x400624f	    0x48c744243800	               mov qword [rsp + 0x38], 0	      1112	sequencer.c	FUNCTION_37
0x4006258	    0x41bd00000000	                             mov r13d, 0	      1109	sequencer.c	FUNCTION_37
0x400625e	            0xeb22	                           jmp 0x4006282	      1109	sequencer.c	FUNCTION_37
0x4006260	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1142	sequencer.c	FUNCTION_37	ELSE_1	IF_5
0x4006265	      0x4889442440	             mov qword [rsp + 0x40], rax	      1142	sequencer.c	FUNCTION_37	ELSE_1	IF_5
0x400626a	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1113	sequencer.c	FUNCTION_37
0x4006273	    0x48c744243800	               mov qword [rsp + 0x38], 0	      1112	sequencer.c	FUNCTION_37
0x400627c	    0x41bd00000000	                             mov r13d, 0	      1109	sequencer.c	FUNCTION_37
0x4006282	      0xba00000000	                              mov edx, 0	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_12
0x4006287	      0xbe00000000	                              mov esi, 0	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_12
0x400628c	    0x488dbc243001	                  lea rdi, [rsp + 0x130]	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_12
0x4006294	      0xe800000000	                          call 0x4006299	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_12
0x4006299	            0x85c0	                           test eax, eax	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_12
0x400629b	            0x742c	                            je 0x40062c9	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_12
0x400629d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40062a2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40062a7	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40062ac	      0xe800000000	                          call 0x40062b1	        54	gettext.h	FUNCTION_118
0x40062b1	          0x4889c7	                            mov rdi, rax	      1147	sequencer.c	FUNCTION_37	IF_6	CALL_13
0x40062b4	      0xb800000000	                              mov eax, 0	      1147	sequencer.c	FUNCTION_37	IF_6	CALL_13
0x40062b9	      0xe800000000	                          call 0x40062be	      1147	sequencer.c	FUNCTION_37	IF_6	CALL_13
0x40062be	    0x41beffffffff	                    mov r14d, 0xffffffff	      1147	sequencer.c	FUNCTION_37	IF_6	CALL_13
0x40062c4	      0xe9da060000	                           jmp 0x40069a3	      1147	sequencer.c	FUNCTION_37	IF_6	CALL_13
0x40062c9	      0xf644243001	               test byte [rsp + 0x30], 1	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x40062ce	            0x7531	                           jne 0x4006301	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x40062d0	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x40062d5	      0xb800000000	                              mov eax, 0	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x40062da	          0x4885ff	                           test rdi, rdi	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x40062dd	            0x7405	                            je 0x40062e4	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x40062df	      0xe800000000	                          call 0x40062e4	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x40062e4	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_155	CALL_1
0x40062e9	    0x488db4243001	                  lea rsi, [rsp + 0x130]	       975	cache.h	FUNCTION_155	CALL_1
0x40062f1	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_155	CALL_1
0x40062f4	      0xe800000000	                          call 0x40062f9	       975	cache.h	FUNCTION_155	CALL_1
0x40062f9	            0x85c0	                           test eax, eax	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x40062fb	     0xf8494060000	                            je 0x4006995	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4006301	      0xbf00000000	                              mov edi, 0	      1158	sequencer.c	FUNCTION_37	IF_8	CALL_16
0x4006306	      0xe800000000	                          call 0x400630b	      1158	sequencer.c	FUNCTION_37	IF_8	CALL_16
0x400630b	          0x4885c0	                           test rax, rax	      1158	sequencer.c	FUNCTION_37	IF_8	CALL_16
0x400630e	     0xf846c010000	                            je 0x4006480	      1158	sequencer.c	FUNCTION_37	IF_8	CALL_16
0x4006314	    0x48c744246000	               mov qword [rsp + 0x60], 0	       928	sequencer.c	FUNCTION_33
0x400631d	    0xc74424680000	               mov dword [rsp + 0x68], 0	       928	sequencer.c	FUNCTION_33
0x4006325	    0xc744246c0000	               mov dword [rsp + 0x6c], 0	       928	sequencer.c	FUNCTION_33
0x400632d	      0xe800000000	                          call 0x4006332	       932	sequencer.c	FUNCTION_33	CALL_1
0x4006332	          0x4889c5	                            mov rbp, rax	       932	sequencer.c	FUNCTION_33	CALL_1
0x4006335	      0x498b742408	                mov rsi, qword [r12 + 8]	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x400633a	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x400633f	      0xb900000000	                              mov ecx, 0	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x4006344	          0x4889c2	                            mov rdx, rax	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x4006347	      0xe8e6a8ffff	                  call sym.write_message	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x400634c	            0x85c0	                           test eax, eax	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x400634e	     0xf8597040000	                           jne 0x40067eb	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x4006354	      0xe800000000	                          call 0x4006359	       936	sequencer.c	FUNCTION_33	CALL_4
0x4006359	          0x4889c2	                            mov rdx, rax	       936	sequencer.c	FUNCTION_33	CALL_4
0x400635c	      0xbe00000000	                              mov esi, 0	       936	sequencer.c	FUNCTION_33	CALL_4
0x4006361	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       936	sequencer.c	FUNCTION_33	CALL_4
0x4006366	      0xb800000000	                              mov eax, 0	       936	sequencer.c	FUNCTION_33	CALL_4
0x400636b	      0xe800000000	                          call 0x4006370	       936	sequencer.c	FUNCTION_33	CALL_4
0x4006370	      0xbe00000000	                              mov esi, 0	       937	sequencer.c	FUNCTION_33	CALL_5
0x4006375	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       937	sequencer.c	FUNCTION_33	CALL_5
0x400637a	      0xe800000000	                          call 0x400637f	       937	sequencer.c	FUNCTION_33	CALL_5
0x400637f	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       938	sequencer.c	FUNCTION_33	IF_2
0x4006384	          0x4885c0	                           test rax, rax	       938	sequencer.c	FUNCTION_33	IF_2
0x4006387	            0x7427	                            je 0x40063b0	       938	sequencer.c	FUNCTION_33	IF_2
0x4006389	    0x41b900000000	                              mov r9d, 0	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x400638f	          0x4989c0	                             mov r8, rax	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x4006392	      0xb900000000	                              mov ecx, 0	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x4006397	          0x4889ea	                            mov rdx, rbp	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x400639a	      0xbe00000000	                              mov esi, 0	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x400639f	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x40063a4	      0xb800000000	                              mov eax, 0	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x40063a9	      0xe800000000	                          call 0x40063ae	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x40063ae	            0xeb22	                           jmp 0x40063d2	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x40063b0	    0x41b800000000	                              mov r8d, 0	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x40063b6	      0xb900000000	                              mov ecx, 0	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x40063bb	          0x4889ea	                            mov rdx, rbp	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x40063be	      0xbe00000000	                              mov esi, 0	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x40063c3	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x40063c8	      0xb800000000	                              mov eax, 0	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x40063cd	      0xe800000000	                          call 0x40063d2	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x40063d2	            0x85c0	                           test eax, eax	       944	sequencer.c	FUNCTION_33	IF_3
0x40063d4	     0xf841a050000	                            je 0x40068f4	       944	sequencer.c	FUNCTION_33	IF_3
0x40063da	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40063df	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40063e4	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40063e9	      0xe800000000	                          call 0x40063ee	        54	gettext.h	FUNCTION_118
0x40063ee	          0x4889c7	                            mov rdi, rax	       945	sequencer.c	FUNCTION_33	CALL_8
0x40063f1	      0xb800000000	                              mov eax, 0	       945	sequencer.c	FUNCTION_33	CALL_8
0x40063f6	      0xe800000000	                          call 0x40063fb	       945	sequencer.c	FUNCTION_33	CALL_8
0x40063fb	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       946	sequencer.c	FUNCTION_33	CALL_9
0x4006400	      0xe800000000	                          call 0x4006405	       946	sequencer.c	FUNCTION_33	CALL_9
0x4006405	          0x4c89ef	                            mov rdi, r13	      1200	sequencer.c	FUNCTION_37	CALL_30
0x4006408	      0xe800000000	                          call 0x400640d	      1200	sequencer.c	FUNCTION_37	CALL_30
0x400640d	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      1201	sequencer.c	FUNCTION_37	CALL_31
0x4006415	      0xe800000000	                          call 0x400641a	      1201	sequencer.c	FUNCTION_37	CALL_31
0x400641a	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      1202	sequencer.c	FUNCTION_37	CALL_32
0x4006422	      0xe800000000	                          call 0x4006427	      1202	sequencer.c	FUNCTION_37	CALL_32
0x4006427	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1203	sequencer.c	FUNCTION_37	CALL_33
0x400642c	      0xe800000000	                          call 0x4006431	      1203	sequencer.c	FUNCTION_37	CALL_33
0x4006431	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x4006439	      0xe800000000	                          call 0x400643e	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x400643e	    0x41beffffffff	                    mov r14d, 0xffffffff	       945	sequencer.c	FUNCTION_33	CALL_8
0x4006444	      0xe96e010000	                           jmp 0x40065b7	       945	sequencer.c	FUNCTION_33	CALL_8
0x4006449	      0xe800000000	                          call 0x400644e	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x400644e	          0x4889c5	                            mov rbp, rax	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4006451	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4006456	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400645b	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4006460	      0xe800000000	                          call 0x4006465	        54	gettext.h	FUNCTION_118
0x4006465	          0x4889ee	                            mov rsi, rbp	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4006468	          0x4889c7	                            mov rdi, rax	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x400646b	      0xb800000000	                              mov eax, 0	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4006470	      0xe800000000	                          call 0x4006475	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4006475	    0x41beffffffff	                    mov r14d, 0xffffffff	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x400647b	      0xe923050000	                           jmp 0x40069a3	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4006480	      0xf644243008	               test byte [rsp + 0x30], 8	      1172	sequencer.c	FUNCTION_37
0x4006485	            0x750a	                           jne 0x4006491	      1172	sequencer.c	FUNCTION_37
0x4006487	          0x8b6b38	            mov ebp, dword [rbx + 0x38] 	      1172	sequencer.c	FUNCTION_37
0x400648a	          0x83fd01	                              cmp ebp, 1	      1175	sequencer.c	FUNCTION_37	IF_11
0x400648d	            0x741a	                            je 0x40064a9	      1175	sequencer.c	FUNCTION_37	IF_11
0x400648f	            0xeb05	                           jmp 0x4006496	      1175	sequencer.c	FUNCTION_37	IF_11
0x4006491	      0xbd03000000	                              mov ebp, 3	      1172	sequencer.c	FUNCTION_37
0x4006496	          0x83fd03	                              cmp ebp, 3	      1176	sequencer.c	FUNCTION_37	CALL_22
0x4006499	        0x400f94c6	                                sete sil	      1176	sequencer.c	FUNCTION_37	CALL_22
0x400649d	        0x400fb6f6	                          movzx esi, sil	      1176	sequencer.c	FUNCTION_37	CALL_22
0x40064a1	          0x4c89e7	                            mov rdi, r12	      1176	sequencer.c	FUNCTION_37	CALL_22
0x40064a4	      0xe800000000	                          call 0x40064a9	      1176	sequencer.c	FUNCTION_37	CALL_22
0x40064a9	        0x837b2000	               cmp dword [rbx + 0x20], 0	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x40064ad	            0x7512	                           jne 0x40064c1	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x40064af	            0x89ee	                            mov esi, ebp	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x40064b1	          0x4c89e7	                            mov rdi, r12	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x40064b4	      0xe800000000	                          call 0x40064b9	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x40064b9	            0x85c0	                           test eax, eax	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x40064bb	     0xf85dc040000	                           jne 0x400699d	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x40064c1	      0xe800000000	                          call 0x40064c6	      1182	sequencer.c	FUNCTION_37	CALL_24
0x40064c6	      0x498b742408	                mov rsi, qword [r12 + 8]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x40064cb	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x40064d0	            0x4155	                                push r13	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x40064d2	          0xff7330	                 push qword [rbx + 0x30]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x40064d5	      0x4c8b4c2450	              mov r9, qword [rsp + 0x50]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x40064da	    0x4c8d84242001	                   lea r8, [rsp + 0x120]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x40064e2	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x40064e7	    0x488d94244001	                  lea rdx, [rsp + 0x140]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x40064ef	      0xe800000000	                          call 0x40064f4	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x40064f4	        0x4883c410	                           add rsp, 0x10	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x40064f8	            0x85c0	                           test eax, eax	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x40064fa	            0x742c	                            je 0x4006528	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x40064fc	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4006501	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4006506	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x400650b	      0xe800000000	                          call 0x4006510	        54	gettext.h	FUNCTION_118
0x4006510	          0x4889c7	                            mov rdi, rax	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_26
0x4006513	      0xb800000000	                              mov eax, 0	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_26
0x4006518	      0xe800000000	                          call 0x400651d	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_26
0x400651d	    0x41beffffffff	                    mov r14d, 0xffffffff	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_26
0x4006523	      0xe97b040000	                           jmp 0x40069a3	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_26
0x4006528	      0xbf00000000	                              mov edi, 0	      1191	sequencer.c	FUNCTION_37	IF_14	CALL_28
0x400652d	      0xe800000000	                          call 0x4006532	      1191	sequencer.c	FUNCTION_37	IF_14	CALL_28
0x4006532	    0x4c8d8424b000	                    lea r8, [rsp + 0xb0]	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x400653a	          0x4c89e1	                            mov rcx, r12	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x400653d	          0x4889c2	                            mov rdx, rax	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x4006540	    0x488db4241001	                  lea rsi, [rsp + 0x110]	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x4006548	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x400654d	      0xe800000000	                          call 0x4006552	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x4006552	            0x85c0	                           test eax, eax	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x4006554	            0x7422	                            je 0x4006578	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x4006556	    0x488bb424c000	            mov rsi, qword [rsp + 0xc0] 	      1192	sequencer.c	FUNCTION_37	IF_14
0x400655e	      0xbf00000000	                              mov edi, 0	      1192	sequencer.c	FUNCTION_37	IF_14
0x4006563	      0xb800000000	                              mov eax, 0	      1192	sequencer.c	FUNCTION_37	IF_14
0x4006568	      0xe800000000	                          call 0x400656d	      1192	sequencer.c	FUNCTION_37	IF_14
0x400656d	    0x41beffffffff	                    mov r14d, 0xffffffff	      1192	sequencer.c	FUNCTION_37	IF_14
0x4006573	      0xe92b040000	                           jmp 0x40069a3	      1192	sequencer.c	FUNCTION_37	IF_14
0x4006578	          0x4585f6	                         test r14d, r14d	      1196	sequencer.c	FUNCTION_37	IF_15
0x400657b	     0xf84ad030000	                            je 0x400692e	      1196	sequencer.c	FUNCTION_37	IF_15
0x4006581	    0x488db4241001	                  lea rsi, [rsp + 0x110]	      1197	sequencer.c	FUNCTION_37	CALL_29
0x4006589	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      1197	sequencer.c	FUNCTION_37	CALL_29
0x400658e	      0xe800000000	                          call 0x4006593	      1197	sequencer.c	FUNCTION_37	CALL_29
0x4006593	      0xe996030000	                           jmp 0x400692e	      1197	sequencer.c	FUNCTION_37	CALL_29
0x4006598	      0xba02000000	                              mov edx, 2	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x400659d	    0x488db4241001	                  lea rsi, [rsp + 0x110]	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x40065a5	      0xbf00000000	                              mov edi, 0	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x40065aa	      0xe800000000	                          call 0x40065af	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x40065af	    0x41be00000000	                             mov r14d, 0	      1231	sequencer.c	FUNCTION_38	IF_1	IF_3
0x40065b5	            0xeb6e	                           jmp 0x4006625	      1231	sequencer.c	FUNCTION_38	IF_1	IF_3
0x40065b7	        0x4183fe01	                             cmp r14d, 1	      1234	sequencer.c	FUNCTION_38	IF_5
0x40065bb	     0xf85e4000000	                           jne 0x40066a5	      1234	sequencer.c	FUNCTION_38	IF_5
0x40065c1	            0xeb1a	                           jmp 0x40065dd	      1234	sequencer.c	FUNCTION_38	IF_5
0x40065c3	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1503	sequencer.c	FUNCTION_48
0x40065cc	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1566	sequencer.c	FUNCTION_48	IF_11
0x40065d5	    0xc74424301600	           mov dword [rsp + 0x30], 0x16 	      1565	sequencer.c	FUNCTION_48	IF_11
0x40065dd	        0x8b542430	            mov edx, dword [rsp + 0x30] 	      1235	sequencer.c	FUNCTION_38	CALL_11
0x40065e1	          0x4889de	                            mov rsi, rbx	      1235	sequencer.c	FUNCTION_38	CALL_11
0x40065e4	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1235	sequencer.c	FUNCTION_38	CALL_11
0x40065e9	      0xe848b1ffff	                 call sym.run_git_commit	      1235	sequencer.c	FUNCTION_38	CALL_11
0x40065ee	          0x4189c6	                           mov r14d, eax	      1235	sequencer.c	FUNCTION_38	CALL_11
0x40065f1	            0xeb32	                           jmp 0x4006625	      1235	sequencer.c	FUNCTION_38	CALL_11
0x40065f3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40065f8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40065fd	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4006602	      0xe800000000	                          call 0x4006607	        54	gettext.h	FUNCTION_118
0x4006607	          0x4889c7	                            mov rdi, rax	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_85
0x400660a	      0xb800000000	                              mov eax, 0	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_85
0x400660f	      0xe800000000	                          call 0x4006614	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_85
0x4006614	    0x41beffffffff	                    mov r14d, 0xffffffff	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_85
0x400661a	      0xe986000000	                           jmp 0x40066a5	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_85
0x400661f	    0x41be00000000	                             mov r14d, 0	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_85
0x4006625	          0x4585f6	                         test r14d, r14d	      1713	sequencer.c	FUNCTION_48	IF_38
0x4006628	            0x757b	                           jne 0x40066a5	      1713	sequencer.c	FUNCTION_48	IF_38
0x400662a	      0x837c243400	               cmp dword [rsp + 0x34], 0	      1713	sequencer.c	FUNCTION_48	IF_38
0x400662f	            0x7474	                            je 0x40066a5	      1713	sequencer.c	FUNCTION_48	IF_38
0x4006631	      0xe81f9cffff	          call sym.rebase_path_fixup_msg	      1714	sequencer.c	FUNCTION_48	IF_38	CALL_87
0x4006636	          0x4889c7	                            mov rdi, rax	      1714	sequencer.c	FUNCTION_48	IF_38	CALL_87
0x4006639	      0xe800000000	                          call 0x400663e	      1714	sequencer.c	FUNCTION_48	IF_38	CALL_87
0x400663e	      0xe84a9cffff	         call sym.rebase_path_squash_msg	      1715	sequencer.c	FUNCTION_48	IF_38	CALL_89
0x4006643	          0x4889c7	                            mov rdi, rax	      1715	sequencer.c	FUNCTION_48	IF_38	CALL_89
0x4006646	      0xe800000000	                          call 0x400664b	      1715	sequencer.c	FUNCTION_48	IF_38	CALL_89
0x400664b	      0xe8ed9affff	     call sym.rebase_path_current_fixups	      1716	sequencer.c	FUNCTION_48	IF_38	CALL_91
0x4006650	          0x4889c7	                            mov rdi, rax	      1716	sequencer.c	FUNCTION_48	IF_38	CALL_91
0x4006653	      0xe800000000	                          call 0x4006658	      1716	sequencer.c	FUNCTION_48	IF_38	CALL_91
0x4006658	    0x48c743680000	               mov qword [rbx + 0x68], 0	       164	strbuf.h	FUNCTION_177
0x4006660	        0x488b4370	            mov rax, qword [rbx + 0x70] 	       165	strbuf.h	FUNCTION_177	IF_2
0x4006664	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_177	IF_2
0x400666a	            0x7405	                            je 0x4006671	       165	strbuf.h	FUNCTION_177	IF_2
0x400666c	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_177	IF_2
0x400666f	            0xeb22	                           jmp 0x4006693	       166	strbuf.h	FUNCTION_177	IF_2
0x4006671	    0x803d00000000	                cmp byte [0x04006678], 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x4006678	            0x7419	                            je 0x4006693	       168	strbuf.h	FUNCTION_177	CALL_2
0x400667a	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400667f	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_177	CALL_2
0x4006684	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x4006689	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x400668e	      0xe800000000	                          call 0x4006693	       168	strbuf.h	FUNCTION_177	CALL_2
0x4006693	    0xc74378000000	               mov dword [rbx + 0x78], 0	      1718	sequencer.c	FUNCTION_48	IF_38
0x400669a	            0xeb09	                           jmp 0x40066a5	      1718	sequencer.c	FUNCTION_48	IF_38
0x400669c	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1503	sequencer.c	FUNCTION_48
0x40066a5	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       334	sequencer.c	FUNCTION_12	CALL_1
0x40066aa	      0xe800000000	                          call 0x40066af	       334	sequencer.c	FUNCTION_12	CALL_1
0x40066af	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       335	sequencer.c	FUNCTION_12	CALL_2
0x40066b4	      0xe800000000	                          call 0x40066b9	       335	sequencer.c	FUNCTION_12	CALL_2
0x40066b9	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       336	sequencer.c	FUNCTION_12	CALL_3
0x40066be	      0xe800000000	                          call 0x40066c3	       336	sequencer.c	FUNCTION_12	CALL_3
0x40066c3	        0x488b3424	                    mov rsi, qword [rsp]	       337	sequencer.c	FUNCTION_12	CALL_4
0x40066c7	          0x4c89ff	                            mov rdi, r15	       337	sequencer.c	FUNCTION_12	CALL_4
0x40066ca	      0xe800000000	                          call 0x40066cf	       337	sequencer.c	FUNCTION_12	CALL_4
0x40066cf	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1723	sequencer.c	FUNCTION_48	CALL_93
0x40066d4	      0xe800000000	                          call 0x40066d9	      1723	sequencer.c	FUNCTION_48	CALL_93
0x40066d9	      0xe88ed0ffff	       call sym.update_abort_safety_file	      1724	sequencer.c	FUNCTION_48	CALL_94
0x40066de	          0x4489f0	                           mov eax, r14d	      1726	sequencer.c	FUNCTION_48
0x40066e1	            0xeb07	                           jmp 0x40066ea	      1726	sequencer.c	FUNCTION_48
0x40066e3	      0xb8ffffffff	                     mov eax, 0xffffffff	      1626	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23
0x40066e8	            0xeb00	                           jmp 0x40066ea	      1626	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23
0x40066ea	    0x488b9c244801	           mov rbx, qword [rsp + 0x148] 	      1727	sequencer.c	FUNCTION_48
0x40066f2	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1727	sequencer.c	FUNCTION_48
0x40066fb	     0xf84e5020000	                            je 0x40069e6	      1727	sequencer.c	FUNCTION_48
0x4006701	      0xe9db020000	                           jmp 0x40069e1	      1727	sequencer.c	FUNCTION_48
0x4006706	      0xe800000000	                          call 0x400670b	      1499	sequencer.c	FUNCTION_48	CALL_1
0x400670b	      0x4889442428	             mov qword [rsp + 0x28], rax	      1499	sequencer.c	FUNCTION_48	CALL_1
0x4006710	    0xc74424300000	               mov dword [rsp + 0x30], 0	      1498	sequencer.c	FUNCTION_48
0x4006718	      0xe90ee8ffff	                           jmp 0x4004f2b	      1498	sequencer.c	FUNCTION_48
0x400671d	          0x4585ed	                         test r13d, r13d	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_18
0x4006720	     0xf85b2eaffff	                           jne 0x40051d8	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_18
0x4006726	      0xe949ebffff	                           jmp 0x4005274	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_18
0x400672b	      0xb8ffffffff	                     mov eax, 0xffffffff	      1626	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23
0x4006730	            0xebb8	                           jmp 0x40066ea	      1626	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23
0x4006732	      0xba00000000	                              mov edx, 0	      1646	sequencer.c	FUNCTION_48	CALL_61
0x4006737	      0xbe00000000	                              mov esi, 0	      1646	sequencer.c	FUNCTION_48	CALL_61
0x400673c	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      1646	sequencer.c	FUNCTION_48	CALL_61
0x4006741	      0xe800000000	                          call 0x4006746	      1646	sequencer.c	FUNCTION_48	CALL_61
0x4006746	      0xe9a9f4ffff	                           jmp 0x4005bf4	      1646	sequencer.c	FUNCTION_48	CALL_61
0x400674b	      0x488b442408	                mov rax, qword [rsp + 8]	      1646	sequencer.c	FUNCTION_48	CALL_61
0x4006750	      0x4889442438	             mov qword [rsp + 0x38], rax	      1646	sequencer.c	FUNCTION_48	CALL_61
0x4006755	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      1646	sequencer.c	FUNCTION_48	CALL_61
0x400675a	          0x4d89fd	                            mov r13, r15	      1603	sequencer.c	FUNCTION_48	ELSE_5
0x400675d	    0xc74424301200	           mov dword [rsp + 0x30], 0x12 	      1623	sequencer.c	FUNCTION_48	IF_21
0x4006765	            0xeb12	                           jmp 0x4006779	      1623	sequencer.c	FUNCTION_48	IF_21
0x4006767	      0x488b442408	                mov rax, qword [rsp + 8]	      1623	sequencer.c	FUNCTION_48	IF_21
0x400676c	      0x4889442438	             mov qword [rsp + 0x38], rax	      1623	sequencer.c	FUNCTION_48	IF_21
0x4006771	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      1623	sequencer.c	FUNCTION_48	IF_21
0x4006776	          0x4d89fd	                            mov r13, r15	      1603	sequencer.c	FUNCTION_48	ELSE_5
0x4006779	        0x837b1000	               cmp dword [rbx + 0x10], 0	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x400677d	     0xf8471f4ffff	                            je 0x4005bf4	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4006783	            0xebad	                           jmp 0x4006732	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4006785	      0x488b442408	                mov rax, qword [rsp + 8]	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x400678a	      0x4889442438	             mov qword [rsp + 0x38], rax	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x400678f	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4006794	          0x4d89fd	                            mov r13, r15	      1603	sequencer.c	FUNCTION_48	ELSE_5
0x4006797	      0xe958f4ffff	                           jmp 0x4005bf4	      1603	sequencer.c	FUNCTION_48	ELSE_5
0x400679c	          0x4585f6	                         test r14d, r14d	      1689	sequencer.c	FUNCTION_48	IF_33
0x400679f	     0xf841cf7ffff	                            je 0x4005ec1	      1689	sequencer.c	FUNCTION_48	IF_33
0x40067a5	      0xe912010000	                           jmp 0x40068bc	      1689	sequencer.c	FUNCTION_48	IF_33
0x40067aa	          0x4c89ff	                            mov rdi, r15	      1690	sequencer.c	FUNCTION_48	IF_33
0x40067ad	      0xe8feaeffff	              call sym.short_commit_name	      1690	sequencer.c	FUNCTION_48	IF_33
0x40067b2	          0x4889c5	                            mov rbp, rax	      1690	sequencer.c	FUNCTION_48	IF_33
0x40067b5	      0xe92cf6ffff	                           jmp 0x4005de6	      1690	sequencer.c	FUNCTION_48	IF_33
0x40067ba	          0x4585f6	                         test r14d, r14d	      1689	sequencer.c	FUNCTION_48	IF_33
0x40067bd	     0xf84fef6ffff	                            je 0x4005ec1	      1689	sequencer.c	FUNCTION_48	IF_33
0x40067c3	            0xebe5	                           jmp 0x40067aa	      1689	sequencer.c	FUNCTION_48	IF_33
0x40067c5	          0x4c89ff	                            mov rdi, r15	      1690	sequencer.c	FUNCTION_48	IF_33
0x40067c8	      0xe8e3aeffff	              call sym.short_commit_name	      1690	sequencer.c	FUNCTION_48	IF_33
0x40067cd	          0x4889c5	                            mov rbp, rax	      1690	sequencer.c	FUNCTION_48	IF_33
0x40067d0	      0xe92af6ffff	                           jmp 0x4005dff	      1690	sequencer.c	FUNCTION_48	IF_33
0x40067d5	          0x4585f6	                         test r14d, r14d	      1689	sequencer.c	FUNCTION_48	IF_33
0x40067d8	     0xf84e3f6ffff	                            je 0x4005ec1	      1689	sequencer.c	FUNCTION_48	IF_33
0x40067de	            0xebe5	                           jmp 0x40067c5	      1689	sequencer.c	FUNCTION_48	IF_33
0x40067e0	    0x41beffffffff	                    mov r14d, 0xffffffff	      1689	sequencer.c	FUNCTION_48	IF_33
0x40067e6	      0xe9bafeffff	                           jmp 0x40066a5	      1689	sequencer.c	FUNCTION_48	IF_33
0x40067eb	    0x41beffffffff	                    mov r14d, 0xffffffff	       934	sequencer.c	FUNCTION_33	IF_1
0x40067f1	      0xe9ad010000	                           jmp 0x40069a3	       934	sequencer.c	FUNCTION_33	IF_1
0x40067f6	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x40067fe	      0xe800000000	                          call 0x4006803	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x4006803	    0x41beffffffff	                    mov r14d, 0xffffffff	      1118	sequencer.c	FUNCTION_37	IF_1
0x4006809	      0xe997feffff	                           jmp 0x40066a5	      1118	sequencer.c	FUNCTION_37	IF_1
0x400680e	      0xe800000000	                          call 0x4006813	       320	sequencer.c	FUNCTION_11	CALL_2
0x4006813	          0x4889c2	                            mov rdx, rax	       320	sequencer.c	FUNCTION_11	CALL_2
0x4006816	      0xbe00000000	                              mov esi, 0	       320	sequencer.c	FUNCTION_11	CALL_2
0x400681b	          0x4c89ff	                            mov rdi, r15	       320	sequencer.c	FUNCTION_11	CALL_2
0x400681e	      0xe800000000	                          call 0x4006823	       320	sequencer.c	FUNCTION_11	CALL_2
0x4006823	          0x4989c6	                            mov r14, rax	       320	sequencer.c	FUNCTION_11	CALL_2
0x4006826	        0x48890424	                    mov qword [rsp], rax	       320	sequencer.c	FUNCTION_11	CALL_2
0x400682a	          0x4c89ff	                            mov rdi, r15	       321	sequencer.c	FUNCTION_11	CALL_3
0x400682d	      0xe87eaeffff	              call sym.short_commit_name	       321	sequencer.c	FUNCTION_11	CALL_3
0x4006832	          0x4989c4	                            mov r12, rax	       321	sequencer.c	FUNCTION_11	CALL_3
0x4006835	    0x488db424d000	                   lea rsi, [rsp + 0xd0]	       323	sequencer.c	FUNCTION_11	CALL_4
0x400683d	          0x4c89f7	                            mov rdi, r14	       323	sequencer.c	FUNCTION_11	CALL_4
0x4006840	      0xe800000000	                          call 0x4006845	       323	sequencer.c	FUNCTION_11	CALL_4
0x4006845	          0x4863f0	                         movsxd rsi, eax	       325	sequencer.c	FUNCTION_11	CALL_5
0x4006848	    0x488bbc24d000	            mov rdi, qword [rsp + 0xd0] 	       325	sequencer.c	FUNCTION_11	CALL_5
0x4006850	      0xe800000000	                          call 0x4006855	       325	sequencer.c	FUNCTION_11	CALL_5
0x4006855	      0x4889442418	             mov qword [rsp + 0x18], rax	       325	sequencer.c	FUNCTION_11	CALL_5
0x400685a	          0x4889c2	                            mov rdx, rax	       326	sequencer.c	FUNCTION_11	CALL_6
0x400685d	          0x4c89e6	                            mov rsi, r12	       326	sequencer.c	FUNCTION_11	CALL_6
0x4006860	      0xbf00000000	                              mov edi, 0	       326	sequencer.c	FUNCTION_11	CALL_6
0x4006865	      0xb800000000	                              mov eax, 0	       326	sequencer.c	FUNCTION_11	CALL_6
0x400686a	      0xe800000000	                          call 0x400686f	       326	sequencer.c	FUNCTION_11	CALL_6
0x400686f	      0x4889442408	                mov qword [rsp + 8], rax	       326	sequencer.c	FUNCTION_11	CALL_6
0x4006874	          0x4889c6	                            mov rsi, rax	       327	sequencer.c	FUNCTION_11	CALL_7
0x4006877	      0xbf00000000	                              mov edi, 0	       327	sequencer.c	FUNCTION_11	CALL_7
0x400687c	      0xb800000000	                              mov eax, 0	       327	sequencer.c	FUNCTION_11	CALL_7
0x4006881	      0xe800000000	                          call 0x4006886	       327	sequencer.c	FUNCTION_11	CALL_7
0x4006886	      0x4889442410	             mov qword [rsp + 0x10], rax	       327	sequencer.c	FUNCTION_11	CALL_7
0x400688b	    0x41bc00000000	                             mov r12d, 0	      1528	sequencer.c	FUNCTION_48	IF_5
0x4006891	        0x837b1400	               cmp dword [rbx + 0x14], 0	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x4006895	     0xf8511e9ffff	                           jne 0x40051ac	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x400689b	      0xe9d4e9ffff	                           jmp 0x4005274	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x40068a0	          0x4c89ff	                            mov rdi, r15	      1690	sequencer.c	FUNCTION_48	IF_33
0x40068a3	      0xe808aeffff	              call sym.short_commit_name	      1690	sequencer.c	FUNCTION_48	IF_33
0x40068a8	          0x4889c5	                            mov rbp, rax	      1690	sequencer.c	FUNCTION_48	IF_33
0x40068ab	    0x41beffffffff	                    mov r14d, 0xffffffff	      1687	sequencer.c	FUNCTION_48	IF_32
0x40068b1	      0xe930f5ffff	                           jmp 0x4005de6	      1687	sequencer.c	FUNCTION_48	IF_32
0x40068b6	    0x41beffffffff	                    mov r14d, 0xffffffff	      1683	sequencer.c	FUNCTION_48	IF_31
0x40068bc	          0x4c89ff	                            mov rdi, r15	      1690	sequencer.c	FUNCTION_48	IF_33
0x40068bf	      0xe8ecadffff	              call sym.short_commit_name	      1690	sequencer.c	FUNCTION_48	IF_33
0x40068c4	          0x4889c5	                            mov rbp, rax	      1690	sequencer.c	FUNCTION_48	IF_33
0x40068c7	      0xe933f5ffff	                           jmp 0x4005dff	      1690	sequencer.c	FUNCTION_48	IF_33
0x40068cc	          0x83fd01	                              cmp ebp, 1	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x40068cf	     0xf84eefcffff	                            je 0x40065c3	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x40068d5	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1503	sequencer.c	FUNCTION_48
0x40068de	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1566	sequencer.c	FUNCTION_48	IF_11
0x40068e7	    0xc74424301600	           mov dword [rsp + 0x30], 0x16 	      1565	sequencer.c	FUNCTION_48	IF_11
0x40068ef	      0xe9fff6ffff	                           jmp 0x4005ff3	      1565	sequencer.c	FUNCTION_48	IF_11
0x40068f4	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       946	sequencer.c	FUNCTION_33	CALL_9
0x40068f9	      0xe800000000	                          call 0x40068fe	       946	sequencer.c	FUNCTION_33	CALL_9
0x40068fe	      0xe800000000	                          call 0x4006903	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x4006903	      0xba00080000	                          mov edx, 0x800	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x4006908	          0x4889c6	                            mov rsi, rax	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x400690b	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x4006913	      0xe800000000	                          call 0x4006918	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x4006918	          0x4885c0	                           test rax, rax	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x400691b	     0xf8828fbffff	                            js 0x4006449	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x4006921	    0x4c8da424d000	                   lea r12, [rsp + 0xd0]	      1169	sequencer.c	FUNCTION_37	IF_8
0x4006929	      0xe952fbffff	                           jmp 0x4006480	      1169	sequencer.c	FUNCTION_37	IF_8
0x400692e	          0x4c89ef	                            mov rdi, r13	      1200	sequencer.c	FUNCTION_37	CALL_30
0x4006931	      0xe800000000	                          call 0x4006936	      1200	sequencer.c	FUNCTION_37	CALL_30
0x4006936	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      1201	sequencer.c	FUNCTION_37	CALL_31
0x400693e	      0xe800000000	                          call 0x4006943	      1201	sequencer.c	FUNCTION_37	CALL_31
0x4006943	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      1202	sequencer.c	FUNCTION_37	CALL_32
0x400694b	      0xe800000000	                          call 0x4006950	      1202	sequencer.c	FUNCTION_37	CALL_32
0x4006950	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1203	sequencer.c	FUNCTION_37	CALL_33
0x4006955	      0xe800000000	                          call 0x400695a	      1203	sequencer.c	FUNCTION_37	CALL_33
0x400695a	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x4006962	      0xe800000000	                          call 0x4006967	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x4006967	      0xe800000000	                          call 0x400696c	      1226	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_6
0x400696c	          0x4889c7	                            mov rdi, rax	      1226	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_6
0x400696f	      0xe800000000	                          call 0x4006974	      1226	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_6
0x4006974	      0xe800000000	                          call 0x4006979	      1227	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_8
0x4006979	          0x4889c7	                            mov rdi, rax	      1227	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_8
0x400697c	      0xe800000000	                          call 0x4006981	      1227	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_8
0x4006981	    0x41be00000000	                             mov r14d, 0	      1231	sequencer.c	FUNCTION_38	IF_1	IF_3
0x4006987	          0x833b02	                      cmp dword [rbx], 2	      1228	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_9
0x400698a	     0xf8495fcffff	                            je 0x4006625	      1228	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_9
0x4006990	      0xe903fcffff	                           jmp 0x4006598	      1228	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_9
0x4006995	    0x41be01000000	                             mov r14d, 1	      1154	sequencer.c	FUNCTION_37	IF_7
0x400699b	            0xeb06	                           jmp 0x40069a3	      1154	sequencer.c	FUNCTION_37	IF_7
0x400699d	    0x41be01000000	                             mov r14d, 1	      1178	sequencer.c	FUNCTION_37	IF_12
0x40069a3	          0x4c89ef	                            mov rdi, r13	      1200	sequencer.c	FUNCTION_37	CALL_30
0x40069a6	      0xe800000000	                          call 0x40069ab	      1200	sequencer.c	FUNCTION_37	CALL_30
0x40069ab	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      1201	sequencer.c	FUNCTION_37	CALL_31
0x40069b3	      0xe800000000	                          call 0x40069b8	      1201	sequencer.c	FUNCTION_37	CALL_31
0x40069b8	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      1202	sequencer.c	FUNCTION_37	CALL_32
0x40069c0	      0xe800000000	                          call 0x40069c5	      1202	sequencer.c	FUNCTION_37	CALL_32
0x40069c5	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1203	sequencer.c	FUNCTION_37	CALL_33
0x40069ca	      0xe800000000	                          call 0x40069cf	      1203	sequencer.c	FUNCTION_37	CALL_33
0x40069cf	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x40069d7	      0xe800000000	                          call 0x40069dc	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x40069dc	      0xe9d6fbffff	                           jmp 0x40065b7	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x40069e1	      0xe800000000	                          call 0x40069e6	      1727	sequencer.c	FUNCTION_48
0x40069e6	    0x4881c4580100	                          add rsp, 0x158	      1727	sequencer.c	FUNCTION_48
0x40069ed	              0x5b	                                 pop rbx	      1727	sequencer.c	FUNCTION_48
0x40069ee	              0x5d	                                 pop rbp	      1727	sequencer.c	FUNCTION_48
0x40069ef	            0x415c	                                 pop r12	      1727	sequencer.c	FUNCTION_48
0x40069f1	            0x415d	                                 pop r13	      1727	sequencer.c	FUNCTION_48
0x40069f3	            0x415e	                                 pop r14	      1727	sequencer.c	FUNCTION_48
0x40069f5	            0x415f	                                 pop r15	      1727	sequencer.c	FUNCTION_48
0x40069f7	              0xc3	                                     ret	      1727	sequencer.c	FUNCTION_48
parse_head	ELSE,1:IF,4:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,9:DO,0	70
0x4000b1e	            0x4154	                                push r12	      1071	sequencer.c	FUNCTION_36
0x4000b20	              0x55	                                push rbp	      1071	sequencer.c	FUNCTION_36
0x4000b21	              0x53	                                push rbx	      1071	sequencer.c	FUNCTION_36
0x4000b22	        0x4883ec20	                           sub rsp, 0x20	      1071	sequencer.c	FUNCTION_36
0x4000b26	          0x4889fd	                            mov rbp, rdi	      1071	sequencer.c	FUNCTION_36
0x4000b29	    0x64488b042528	                mov rax, qword fs:[0x28]	      1071	sequencer.c	FUNCTION_36
0x4000b32	      0x4889442418	             mov qword [rsp + 0x18], rax	      1071	sequencer.c	FUNCTION_36
0x4000b37	            0x31c0	                            xor eax, eax	      1071	sequencer.c	FUNCTION_36
0x4000b39	          0x4889e6	                            mov rsi, rsp	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x4000b3c	      0xbf00000000	                              mov edi, 0	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x4000b41	      0xe800000000	                          call 0x4000b46	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x4000b46	      0xbb00000000	                              mov ebx, 0	      1076	sequencer.c	FUNCTION_36	IF_1
0x4000b4b	            0x85c0	                           test eax, eax	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x4000b4d	     0xf85b8000000	                           jne 0x4000c0b	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x4000b53	          0x4889e7	                            mov rdi, rsp	      1078	sequencer.c	FUNCTION_36	ELSE_1	CALL_2
0x4000b56	      0xe800000000	                          call 0x4000b5b	      1078	sequencer.c	FUNCTION_36	ELSE_1	CALL_2
0x4000b5b	          0x4889c3	                            mov rbx, rax	      1078	sequencer.c	FUNCTION_36	ELSE_1	CALL_2
0x4000b5e	          0x4885c0	                           test rax, rax	      1079	sequencer.c	FUNCTION_36	ELSE_1	IF_2
0x4000b61	            0x752b	                           jne 0x4000b8e	      1079	sequencer.c	FUNCTION_36	ELSE_1	IF_2
0x4000b63	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4000b68	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4000b6d	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4000b72	      0xe800000000	                          call 0x4000b77	        54	gettext.h	FUNCTION_118
0x4000b77	          0x4889c7	                            mov rdi, rax	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_3
0x4000b7a	      0xb800000000	                              mov eax, 0	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_3
0x4000b7f	      0xe800000000	                          call 0x4000b84	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_3
0x4000b84	      0xb8ffffffff	                     mov eax, 0xffffffff	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_3
0x4000b89	      0xe986000000	                           jmp 0x4000c14	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_3
0x4000b8e	        0x488d7004	                      lea rsi, [rax + 4]	       975	cache.h	FUNCTION_155	CALL_1
0x4000b92	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_155	CALL_1
0x4000b97	          0x4889e7	                            mov rdi, rsp	       975	cache.h	FUNCTION_155	CALL_1
0x4000b9a	      0xe800000000	                          call 0x4000b9f	       975	cache.h	FUNCTION_155	CALL_1
0x4000b9f	            0x85c0	                           test eax, eax	      1081	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_4
0x4000ba1	            0x742f	                            je 0x4000bd2	      1081	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_4
0x4000ba3	          0x4889e7	                            mov rdi, rsp	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x4000ba6	      0xe800000000	                          call 0x4000bab	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x4000bab	          0x4989c4	                            mov r12, rax	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x4000bae	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4000bb3	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4000bb8	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4000bbd	      0xe800000000	                          call 0x4000bc2	        54	gettext.h	FUNCTION_118
0x4000bc2	          0x4c89e6	                            mov rsi, r12	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x4000bc5	          0x4889c7	                            mov rdi, rax	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x4000bc8	      0xb800000000	                              mov eax, 0	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x4000bcd	      0xe800000000	                          call 0x4000bd2	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x4000bd2	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_147	CALL_1
0x4000bd7	          0x4889df	                            mov rdi, rbx	        75	commit.h	FUNCTION_147	CALL_1
0x4000bda	      0xe800000000	                          call 0x4000bdf	        75	commit.h	FUNCTION_147	CALL_1
0x4000bdf	            0x85c0	                           test eax, eax	      1085	sequencer.c	FUNCTION_36	ELSE_1	IF_4	CALL_8
0x4000be1	            0x7428	                            je 0x4000c0b	      1085	sequencer.c	FUNCTION_36	ELSE_1	IF_4	CALL_8
0x4000be3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4000be8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4000bed	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4000bf2	      0xe800000000	                          call 0x4000bf7	        54	gettext.h	FUNCTION_118
0x4000bf7	          0x4889c7	                            mov rdi, rax	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_9
0x4000bfa	      0xb800000000	                              mov eax, 0	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_9
0x4000bff	      0xe800000000	                          call 0x4000c04	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_9
0x4000c04	      0xb8ffffffff	                     mov eax, 0xffffffff	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_9
0x4000c09	            0xeb09	                           jmp 0x4000c14	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_9
0x4000c0b	        0x48895d00	                    mov qword [rbp], rbx	      1088	sequencer.c	FUNCTION_36
0x4000c0f	      0xb800000000	                              mov eax, 0	      1090	sequencer.c	FUNCTION_36
0x4000c14	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1091	sequencer.c	FUNCTION_36
0x4000c19	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1091	sequencer.c	FUNCTION_36
0x4000c22	            0x7405	                            je 0x4000c29	      1091	sequencer.c	FUNCTION_36
0x4000c24	      0xe800000000	                          call 0x4000c29	      1091	sequencer.c	FUNCTION_36
0x4000c29	        0x4883c420	                           add rsp, 0x20	      1091	sequencer.c	FUNCTION_36
0x4000c2d	              0x5b	                                 pop rbx	      1091	sequencer.c	FUNCTION_36
0x4000c2e	              0x5d	                                 pop rbp	      1091	sequencer.c	FUNCTION_36
0x4000c2f	            0x415c	                                 pop r12	      1091	sequencer.c	FUNCTION_36
0x4000c31	              0xc3	                                     ret	      1091	sequencer.c	FUNCTION_36
has_conforming_footer	ELSE,0:IF,5:FOR,1:WHILE,0:SWITCH,0:functions,0:CALL,2:DO,0	70
0x4001469	            0x4157	                                push r15	       219	sequencer.c	FUNCTION_6
0x400146b	            0x4156	                                push r14	       219	sequencer.c	FUNCTION_6
0x400146d	            0x4155	                                push r13	       219	sequencer.c	FUNCTION_6
0x400146f	            0x4154	                                push r12	       219	sequencer.c	FUNCTION_6
0x4001471	              0x55	                                push rbp	       219	sequencer.c	FUNCTION_6
0x4001472	              0x53	                                push rbx	       219	sequencer.c	FUNCTION_6
0x4001473	        0x4883ec48	                           sub rsp, 0x48	       219	sequencer.c	FUNCTION_6
0x4001477	          0x4989f4	                            mov r12, rsi	       219	sequencer.c	FUNCTION_6
0x400147a	    0x64488b042528	                mov rax, qword fs:[0x28]	       219	sequencer.c	FUNCTION_6
0x4001483	      0x4889442438	             mov qword [rsp + 0x38], rax	       219	sequencer.c	FUNCTION_6
0x4001488	            0x31c0	                            xor eax, eax	       219	sequencer.c	FUNCTION_6
0x400148a	        0x488b7710	            mov rsi, qword [rdi + 0x10] 	       224	sequencer.c	FUNCTION_6	CALL_1
0x400148e	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       224	sequencer.c	FUNCTION_6	CALL_1
0x4001493	      0xe800000000	                          call 0x4001498	       224	sequencer.c	FUNCTION_6	CALL_1
0x4001498	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       226	sequencer.c	FUNCTION_6	IF_1
0x400149d	      0x4839442418	            cmp qword [rsp + 0x18], rax 	       226	sequencer.c	FUNCTION_6	IF_1
0x40014a2	     0xf8491000000	                            je 0x4001539	       226	sequencer.c	FUNCTION_6	IF_1
0x40014a8	      0x4c8b6c2430	            mov r13, qword [rsp + 0x30] 	       229	sequencer.c	FUNCTION_6	FOR_1
0x40014ad	          0x4d85ed	                           test r13, r13	       229	sequencer.c	FUNCTION_6	FOR_1
0x40014b0	     0xf849a000000	                            je 0x4001550	       229	sequencer.c	FUNCTION_6	FOR_1
0x40014b6	      0x4c8b7c2428	            mov r15, qword [rsp + 0x28] 	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2
0x40014bb	      0xbb00000000	                              mov ebx, 0	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2
0x40014c0	    0x41be00000000	                             mov r14d, 0	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2
0x40014c6	    0xc74424040000	                  mov dword [rsp + 4], 0	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2
0x40014ce	      0xbd00000000	                              mov ebp, 0	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2
0x40014d3	        0x498d45ff	                      lea rax, [r13 - 1]	       232	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0x40014d7	      0x4889442408	                mov qword [rsp + 8], rax	       232	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0x40014dc	          0x4d85e4	                           test r12, r12	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2
0x40014df	            0x742d	                            je 0x400150e	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2
0x40014e1	      0x498b542408	                mov rdx, qword [r12 + 8]	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2
0x40014e6	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2
0x40014eb	        0x498b3cdf	            mov rdi, qword [r15 + rbx*8]	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2
0x40014ef	      0xe800000000	                          call 0x40014f4	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2
0x40014f4	            0x85c0	                           test eax, eax	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2
0x40014f6	            0x7516	                           jne 0x400150e	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2
0x40014f8	      0x48395c2408	                cmp qword [rsp + 8], rbx	       233	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0x40014fd	      0xb801000000	                              mov eax, 1	       233	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0x4001502	        0x440f44f0	                         cmove r14d, eax	       233	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0x4001506	    0xc74424040100	                  mov dword [rsp + 4], 1	       233	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0x400150e	          0x83c501	                              add ebp, 1	       229	sequencer.c	FUNCTION_6	FOR_1
0x4001511	          0x4863dd	                         movsxd rbx, ebp	       229	sequencer.c	FUNCTION_6	FOR_1
0x4001514	          0x4c39eb	                            cmp rbx, r13	       229	sequencer.c	FUNCTION_6	FOR_1
0x4001517	            0x72c3	                            jb 0x40014dc	       229	sequencer.c	FUNCTION_6	FOR_1
0x4001519	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       236	sequencer.c	FUNCTION_6	CALL_2
0x400151e	      0xe800000000	                          call 0x4001523	       236	sequencer.c	FUNCTION_6	CALL_2
0x4001523	      0xb803000000	                              mov eax, 3	       239	sequencer.c	FUNCTION_6	IF_4
0x4001528	          0x4585f6	                         test r14d, r14d	       238	sequencer.c	FUNCTION_6	IF_4
0x400152b	            0x7511	                           jne 0x400153e	       238	sequencer.c	FUNCTION_6	IF_4
0x400152d	      0x837c240401	                  cmp dword [rsp + 4], 1	       242	sequencer.c	FUNCTION_6
0x4001532	            0x19c0	                            sbb eax, eax	       242	sequencer.c	FUNCTION_6
0x4001534	          0x83c002	                              add eax, 2	       242	sequencer.c	FUNCTION_6
0x4001537	            0xeb05	                           jmp 0x400153e	       242	sequencer.c	FUNCTION_6
0x4001539	      0xb800000000	                              mov eax, 0	       227	sequencer.c	FUNCTION_6	IF_1
0x400153e	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       243	sequencer.c	FUNCTION_6
0x4001543	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       243	sequencer.c	FUNCTION_6
0x400154c	            0x7418	                            je 0x4001566	       243	sequencer.c	FUNCTION_6
0x400154e	            0xeb11	                           jmp 0x4001561	       243	sequencer.c	FUNCTION_6
0x4001550	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       236	sequencer.c	FUNCTION_6	CALL_2
0x4001555	      0xe800000000	                          call 0x400155a	       236	sequencer.c	FUNCTION_6	CALL_2
0x400155a	      0xb801000000	                              mov eax, 1	       242	sequencer.c	FUNCTION_6
0x400155f	            0xebdd	                           jmp 0x400153e	       242	sequencer.c	FUNCTION_6
0x4001561	      0xe800000000	                          call 0x4001566	       243	sequencer.c	FUNCTION_6
0x4001566	        0x4883c448	                           add rsp, 0x48	       243	sequencer.c	FUNCTION_6
0x400156a	              0x5b	                                 pop rbx	       243	sequencer.c	FUNCTION_6
0x400156b	              0x5d	                                 pop rbp	       243	sequencer.c	FUNCTION_6
0x400156c	            0x415c	                                 pop r12	       243	sequencer.c	FUNCTION_6
0x400156e	            0x415d	                                 pop r13	       243	sequencer.c	FUNCTION_6
0x4001570	            0x415e	                                 pop r14	       243	sequencer.c	FUNCTION_6
0x4001572	            0x415f	                                 pop r15	       243	sequencer.c	FUNCTION_6
0x4001574	              0xc3	                                     ret	       243	sequencer.c	FUNCTION_6
todo_list_release	ELSE,0:IF,0:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,1:DO,0	10
0x400068a	              0x53	                                push rbx	      1790	sequencer.c	FUNCTION_51
0x400068b	          0x4889fb	                            mov rbx, rdi	      1790	sequencer.c	FUNCTION_51
0x400068e	      0xe800000000	                          call 0x4000693	      1791	sequencer.c	FUNCTION_51	CALL_1
0x4000693	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1792	sequencer.c	FUNCTION_51
0x4000697	      0xe800000000	                          call 0x400069c	      1792	sequencer.c	FUNCTION_51
0x400069c	    0x48c743180000	               mov qword [rbx + 0x18], 0	      1792	sequencer.c	FUNCTION_51
0x40006a4	    0xc74324000000	               mov dword [rbx + 0x24], 0	      1793	sequencer.c	FUNCTION_51
0x40006ab	    0xc74320000000	               mov dword [rbx + 0x20], 0	      1793	sequencer.c	FUNCTION_51
0x40006b2	              0x5b	                                 pop rbx	      1794	sequencer.c	FUNCTION_51
0x40006b3	              0xc3	                                     ret	      1794	sequencer.c	FUNCTION_51
intend_to_amend	ELSE,0:IF,1:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,6:DO,0	40
0x4000d9f	              0x53	                                push rbx	      2450	sequencer.c	FUNCTION_75
0x4000da0	        0x4883ec20	                           sub rsp, 0x20	      2450	sequencer.c	FUNCTION_75
0x4000da4	    0x64488b042528	                mov rax, qword fs:[0x28]	      2450	sequencer.c	FUNCTION_75
0x4000dad	      0x4889442418	             mov qword [rsp + 0x18], rax	      2450	sequencer.c	FUNCTION_75
0x4000db2	            0x31c0	                            xor eax, eax	      2450	sequencer.c	FUNCTION_75
0x4000db4	          0x4889e6	                            mov rsi, rsp	      2454	sequencer.c	FUNCTION_75	IF_1	CALL_1
0x4000db7	      0xbf00000000	                              mov edi, 0	      2454	sequencer.c	FUNCTION_75	IF_1	CALL_1
0x4000dbc	      0xe800000000	                          call 0x4000dc1	      2454	sequencer.c	FUNCTION_75	IF_1	CALL_1
0x4000dc1	            0x85c0	                           test eax, eax	      2454	sequencer.c	FUNCTION_75	IF_1	CALL_1
0x4000dc3	            0x7428	                            je 0x4000ded	      2454	sequencer.c	FUNCTION_75	IF_1	CALL_1
0x4000dc5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4000dca	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4000dcf	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4000dd4	      0xe800000000	                          call 0x4000dd9	        54	gettext.h	FUNCTION_118
0x4000dd9	          0x4889c7	                            mov rdi, rax	      2455	sequencer.c	FUNCTION_75	CALL_2
0x4000ddc	      0xb800000000	                              mov eax, 0	      2455	sequencer.c	FUNCTION_75	CALL_2
0x4000de1	      0xe800000000	                          call 0x4000de6	      2455	sequencer.c	FUNCTION_75	CALL_2
0x4000de6	      0xb8ffffffff	                     mov eax, 0xffffffff	      2455	sequencer.c	FUNCTION_75	CALL_2
0x4000deb	            0xeb38	                           jmp 0x4000e25	      2455	sequencer.c	FUNCTION_75	CALL_2
0x4000ded	          0x4889e7	                            mov rdi, rsp	      2457	sequencer.c	FUNCTION_75	CALL_3
0x4000df0	      0xe800000000	                          call 0x4000df5	      2457	sequencer.c	FUNCTION_75	CALL_3
0x4000df5	          0x4889c3	                            mov rbx, rax	      2457	sequencer.c	FUNCTION_75	CALL_3
0x4000df8	      0xe820f4ffff	              call sym.rebase_path_amend	      2458	sequencer.c	FUNCTION_75	CALL_6
0x4000dfd	          0x4889c2	                            mov rdx, rax	      2458	sequencer.c	FUNCTION_75	CALL_6
0x4000e00	      0xb800000000	                              mov eax, 0	      2458	sequencer.c	FUNCTION_75	CALL_6
0x4000e05	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2458	sequencer.c	FUNCTION_75	CALL_6
0x4000e0c	          0x4889df	                            mov rdi, rbx	      2458	sequencer.c	FUNCTION_75	CALL_6
0x4000e0f	            0xf2ae	              repne scasb al, byte [rdi]	      2458	sequencer.c	FUNCTION_75	CALL_6
0x4000e11	          0x48f7d1	                                 not rcx	      2458	sequencer.c	FUNCTION_75	CALL_6
0x4000e14	        0x488d71ff	                      lea rsi, [rcx - 1]	      2458	sequencer.c	FUNCTION_75	CALL_6
0x4000e18	      0xb901000000	                              mov ecx, 1	      2458	sequencer.c	FUNCTION_75	CALL_6
0x4000e1d	          0x4889df	                            mov rdi, rbx	      2458	sequencer.c	FUNCTION_75	CALL_6
0x4000e20	      0xe80dfeffff	                  call sym.write_message	      2458	sequencer.c	FUNCTION_75	CALL_6
0x4000e25	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      2459	sequencer.c	FUNCTION_75
0x4000e2a	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2459	sequencer.c	FUNCTION_75
0x4000e33	            0x7405	                            je 0x4000e3a	      2459	sequencer.c	FUNCTION_75
0x4000e35	      0xe800000000	                          call 0x4000e3a	      2459	sequencer.c	FUNCTION_75
0x4000e3a	        0x4883c420	                           add rsp, 0x20	      2459	sequencer.c	FUNCTION_75
0x4000e3e	              0x5b	                                 pop rbx	      2459	sequencer.c	FUNCTION_75
0x4000e3f	              0xc3	                                     ret	      2459	sequencer.c	FUNCTION_75
error_with_patch	ELSE,1:IF,4:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,4:DO,0	58
0x40036b7	            0x4157	                                push r15	      2464	sequencer.c	FUNCTION_76
0x40036b9	            0x4156	                                push r14	      2464	sequencer.c	FUNCTION_76
0x40036bb	            0x4155	                                push r13	      2464	sequencer.c	FUNCTION_76
0x40036bd	            0x4154	                                push r12	      2464	sequencer.c	FUNCTION_76
0x40036bf	              0x55	                                push rbp	      2464	sequencer.c	FUNCTION_76
0x40036c0	              0x53	                                push rbx	      2464	sequencer.c	FUNCTION_76
0x40036c1	        0x4883ec08	                              sub rsp, 8	      2464	sequencer.c	FUNCTION_76
0x40036c5	          0x4889fd	                            mov rbp, rdi	      2464	sequencer.c	FUNCTION_76
0x40036c8	          0x4989f6	                            mov r14, rsi	      2464	sequencer.c	FUNCTION_76
0x40036cb	          0x4189d5	                           mov r13d, edx	      2464	sequencer.c	FUNCTION_76
0x40036ce	          0x4989cc	                            mov r12, rcx	      2464	sequencer.c	FUNCTION_76
0x40036d1	          0x4489c3	                            mov ebx, r8d	      2464	sequencer.c	FUNCTION_76
0x40036d4	          0x4589cf	                           mov r15d, r9d	      2464	sequencer.c	FUNCTION_76
0x40036d7	          0x4889ce	                            mov rsi, rcx	      2465	sequencer.c	FUNCTION_76	IF_1	CALL_1
0x40036da	      0xe826fdffff	                     call sym.make_patch	      2465	sequencer.c	FUNCTION_76	IF_1	CALL_1
0x40036df	            0x85c0	                           test eax, eax	      2465	sequencer.c	FUNCTION_76	IF_1	CALL_1
0x40036e1	            0x7575	                           jne 0x4003758	      2465	sequencer.c	FUNCTION_76	IF_1	CALL_1
0x40036e3	          0x4585ff	                         test r15d, r15d	      2468	sequencer.c	FUNCTION_76	IF_2
0x40036e6	            0x743a	                            je 0x4003722	      2468	sequencer.c	FUNCTION_76	IF_2
0x40036e8	      0xe8b2d6ffff	                call sym.intend_to_amend	      2469	sequencer.c	FUNCTION_76	IF_2	IF_3	CALL_2
0x40036ed	            0x89c2	                            mov edx, eax	      2469	sequencer.c	FUNCTION_76	IF_2	IF_3	CALL_2
0x40036ef	      0xb8ffffffff	                     mov eax, 0xffffffff	      2470	sequencer.c	FUNCTION_76	IF_2	IF_3
0x40036f4	            0x85d2	                           test edx, edx	      2469	sequencer.c	FUNCTION_76	IF_2	IF_3	CALL_2
0x40036f6	            0x7565	                           jne 0x400375d	      2469	sequencer.c	FUNCTION_76	IF_2	IF_3	CALL_2
0x40036f8	          0x4c89e7	                            mov rdi, r12	      2472	sequencer.c	FUNCTION_76	IF_2
0x40036fb	      0xe8c8dfffff	            call sym.gpg_sign_opt_quoted	      2472	sequencer.c	FUNCTION_76	IF_2
0x4003700	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_575
0x4003703	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_575
0x4003708	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_575
0x400370d	    0x488b3d000000	            mov rdi, qword [0x04003714] 	        97	stdio2.h	CALL_575
0x4003714	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_575
0x4003719	      0xe800000000	                          call 0x400371e	        97	stdio2.h	CALL_575
0x400371e	            0x89d8	                            mov eax, ebx	      2483	sequencer.c	FUNCTION_76
0x4003720	            0xeb3b	                           jmp 0x400375d	      2483	sequencer.c	FUNCTION_76
0x4003722	            0x89d8	                            mov eax, ebx	      2483	sequencer.c	FUNCTION_76
0x4003724	            0x85db	                           test ebx, ebx	      2479	sequencer.c	FUNCTION_76	ELSE_1	IF_4
0x4003726	            0x7435	                            je 0x400375d	      2479	sequencer.c	FUNCTION_76	ELSE_1	IF_4
0x4003728	          0x4889ef	                            mov rdi, rbp	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4
0x400372b	      0xe880dfffff	              call sym.short_commit_name	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4
0x4003730	          0x4d89f1	                             mov r9, r14	        97	stdio2.h	CALL_575
0x4003733	          0x4589e8	                           mov r8d, r13d	        97	stdio2.h	CALL_575
0x4003736	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_575
0x4003739	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_575
0x400373e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_575
0x4003743	    0x488b3d000000	            mov rdi, qword [0x0400374a] 	        97	stdio2.h	CALL_575
0x400374a	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_575
0x400374f	      0xe800000000	                          call 0x4003754	        97	stdio2.h	CALL_575
0x4003754	            0x89d8	                            mov eax, ebx	      2483	sequencer.c	FUNCTION_76
0x4003756	            0xeb05	                           jmp 0x400375d	      2483	sequencer.c	FUNCTION_76
0x4003758	      0xb8ffffffff	                     mov eax, 0xffffffff	      2466	sequencer.c	FUNCTION_76	IF_1
0x400375d	        0x4883c408	                              add rsp, 8	      2484	sequencer.c	FUNCTION_76
0x4003761	              0x5b	                                 pop rbx	      2484	sequencer.c	FUNCTION_76
0x4003762	              0x5d	                                 pop rbp	      2484	sequencer.c	FUNCTION_76
0x4003763	            0x415c	                                 pop r12	      2484	sequencer.c	FUNCTION_76
0x4003765	            0x415d	                                 pop r13	      2484	sequencer.c	FUNCTION_76
0x4003767	            0x415e	                                 pop r14	      2484	sequencer.c	FUNCTION_76
0x4003769	            0x415f	                                 pop r15	      2484	sequencer.c	FUNCTION_76
0x400376b	              0xc3	                                     ret	      2484	sequencer.c	FUNCTION_76
sequencer_add_exec_commands	ELSE,0:IF,3:FOR,1:WHILE,0:SWITCH,0:functions,0:CALL,11:DO,0	100
0x400aab7	            0x4157	                                push r15	      3972	sequencer.c	FUNCTION_98
0x400aab9	            0x4156	                                push r14	      3972	sequencer.c	FUNCTION_98
0x400aabb	            0x4155	                                push r13	      3972	sequencer.c	FUNCTION_98
0x400aabd	            0x4154	                                push r12	      3972	sequencer.c	FUNCTION_98
0x400aabf	              0x55	                                push rbp	      3972	sequencer.c	FUNCTION_98
0x400aac0	              0x53	                                push rbx	      3972	sequencer.c	FUNCTION_98
0x400aac1	        0x4883ec68	                           sub rsp, 0x68	      3972	sequencer.c	FUNCTION_98
0x400aac5	          0x4989fd	                            mov r13, rdi	      3972	sequencer.c	FUNCTION_98
0x400aac8	    0x64488b042528	                mov rax, qword fs:[0x28]	      3972	sequencer.c	FUNCTION_98
0x400aad1	      0x4889442458	             mov qword [rsp + 0x58], rax	      3972	sequencer.c	FUNCTION_98
0x400aad6	            0x31c0	                            xor eax, eax	      3972	sequencer.c	FUNCTION_98
0x400aad8	      0xe8e857ffff	               call sym.rebase_path_todo	      3973	sequencer.c	FUNCTION_98	CALL_1
0x400aadd	          0x4989c6	                            mov r14, rax	      3973	sequencer.c	FUNCTION_98	CALL_1
0x400aae0	          0x4889e7	                            mov rdi, rsp	      3974	sequencer.c	FUNCTION_98
0x400aae3	      0xb90b000000	                            mov ecx, 0xb	      3974	sequencer.c	FUNCTION_98
0x400aae8	      0xb800000000	                              mov eax, 0	      3974	sequencer.c	FUNCTION_98
0x400aaed	          0xf348ab	              rep stosq qword [rdi], rax	      3974	sequencer.c	FUNCTION_98
0x400aaf0	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3974	sequencer.c	FUNCTION_98
0x400aaf9	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3977	sequencer.c	FUNCTION_98	CALL_2
0x400ab00	          0x4c89ef	                            mov rdi, r13	      3977	sequencer.c	FUNCTION_98	CALL_2
0x400ab03	            0xf2ae	              repne scasb al, byte [rdi]	      3977	sequencer.c	FUNCTION_98	CALL_2
0x400ab05	          0x48f7d1	                                 not rcx	      3977	sequencer.c	FUNCTION_98	CALL_2
0x400ab08	        0x4c8d61ff	                      lea r12, [rcx - 1]	      3977	sequencer.c	FUNCTION_98	CALL_2
0x400ab0c	      0xba00000000	                              mov edx, 0	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0x400ab11	          0x4c89f6	                            mov rsi, r14	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0x400ab14	          0x4889e7	                            mov rdi, rsp	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0x400ab17	      0xe800000000	                          call 0x400ab1c	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0x400ab1c	          0x4885c0	                           test rax, rax	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0x400ab1f	            0x792e	                           jns 0x400ab4f	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0x400ab21	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400ab26	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400ab2b	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x400ab30	      0xe800000000	                          call 0x400ab35	        54	gettext.h	FUNCTION_118
0x400ab35	          0x4c89f6	                            mov rsi, r14	      3981	sequencer.c	FUNCTION_98	CALL_4
0x400ab38	          0x4889c7	                            mov rdi, rax	      3981	sequencer.c	FUNCTION_98	CALL_4
0x400ab3b	      0xb800000000	                              mov eax, 0	      3981	sequencer.c	FUNCTION_98	CALL_4
0x400ab40	      0xe800000000	                          call 0x400ab45	      3981	sequencer.c	FUNCTION_98	CALL_4
0x400ab45	      0xb8ffffffff	                     mov eax, 0xffffffff	      3981	sequencer.c	FUNCTION_98	CALL_4
0x400ab4a	      0xe9b8000000	                           jmp 0x400ac07	      3981	sequencer.c	FUNCTION_98	CALL_4
0x400ab4f	          0x4889e6	                            mov rsi, rsp	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_5
0x400ab52	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_5
0x400ab57	      0xe8bd7effff	              call sym.parse_insn_buffer	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_5
0x400ab5c	            0x85c0	                           test eax, eax	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_5
0x400ab5e	            0x7433	                            je 0x400ab93	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_5
0x400ab60	          0x4889e7	                            mov rdi, rsp	      3984	sequencer.c	FUNCTION_98	IF_2	CALL_6
0x400ab63	      0xe8225bffff	              call sym.todo_list_release	      3984	sequencer.c	FUNCTION_98	IF_2	CALL_6
0x400ab68	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400ab6d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400ab72	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x400ab77	      0xe800000000	                          call 0x400ab7c	        54	gettext.h	FUNCTION_118
0x400ab7c	          0x4c89f6	                            mov rsi, r14	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400ab7f	          0x4889c7	                            mov rdi, rax	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400ab82	      0xb800000000	                              mov eax, 0	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400ab87	      0xe800000000	                          call 0x400ab8c	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400ab8c	      0xb8ffffffff	                     mov eax, 0xffffffff	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400ab91	            0xeb74	                           jmp 0x400ac07	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400ab93	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400ab98	      0xbd00000000	                              mov ebp, 0	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400ab9d	    0x41bf00000000	                             mov r15d, 0	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400aba3	      0x837c242000	               cmp dword [rsp + 0x20], 0	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400aba8	            0x7f1f	                            jg 0x400abc9	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400abaa	            0xeb2a	                           jmp 0x400abd6	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400abac	          0x833b00	                      cmp dword [rbx], 0	      3991	sequencer.c	FUNCTION_98	FOR_1	IF_3
0x400abaf	            0x7518	                           jne 0x400abc9	      3991	sequencer.c	FUNCTION_98	FOR_1	IF_3
0x400abb1	          0x4c89fe	                            mov rsi, r15	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400abb4	        0x48037328	             add rsi, qword [rbx + 0x28]	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400abb8	          0x4c89e1	                            mov rcx, r12	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400abbb	          0x4c89ea	                            mov rdx, r13	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400abbe	          0x4889e7	                            mov rdi, rsp	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400abc1	      0xe800000000	                          call 0x400abc6	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400abc6	          0x4d01e7	                            add r15, r12	      3994	sequencer.c	FUNCTION_98	FOR_1	IF_3
0x400abc9	          0x83c501	                              add ebp, 1	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400abcc	        0x4883c330	                           add rbx, 0x30	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400abd0	        0x396c2420	            cmp dword [rsp + 0x20], ebp 	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400abd4	            0x7fd6	                            jg 0x400abac	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400abd6	          0x4c89e2	                            mov rdx, r12	      4000	sequencer.c	FUNCTION_98	CALL_9
0x400abd9	          0x4c89ee	                            mov rsi, r13	      4000	sequencer.c	FUNCTION_98	CALL_9
0x400abdc	          0x4889e7	                            mov rdi, rsp	      4000	sequencer.c	FUNCTION_98	CALL_9
0x400abdf	      0xe800000000	                          call 0x400abe4	      4000	sequencer.c	FUNCTION_98	CALL_9
0x400abe4	      0xb900000000	                              mov ecx, 0	      4002	sequencer.c	FUNCTION_98	CALL_10
0x400abe9	          0x4c89f2	                            mov rdx, r14	      4002	sequencer.c	FUNCTION_98	CALL_10
0x400abec	      0x488b742408	                mov rsi, qword [rsp + 8]	      4002	sequencer.c	FUNCTION_98	CALL_10
0x400abf1	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4002	sequencer.c	FUNCTION_98	CALL_10
0x400abf6	      0xe83760ffff	                  call sym.write_message	      4002	sequencer.c	FUNCTION_98	CALL_10
0x400abfb	            0x89c3	                            mov ebx, eax	      4002	sequencer.c	FUNCTION_98	CALL_10
0x400abfd	          0x4889e7	                            mov rdi, rsp	      4003	sequencer.c	FUNCTION_98	CALL_11
0x400ac00	      0xe8855affff	              call sym.todo_list_release	      4003	sequencer.c	FUNCTION_98	CALL_11
0x400ac05	            0x89d8	                            mov eax, ebx	      4004	sequencer.c	FUNCTION_98
0x400ac07	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      4005	sequencer.c	FUNCTION_98
0x400ac0c	    0x644833142528	                xor rdx, qword fs:[0x28]	      4005	sequencer.c	FUNCTION_98
0x400ac15	            0x7405	                            je 0x400ac1c	      4005	sequencer.c	FUNCTION_98
0x400ac17	      0xe800000000	                          call 0x400ac1c	      4005	sequencer.c	FUNCTION_98
0x400ac1c	        0x4883c468	                           add rsp, 0x68	      4005	sequencer.c	FUNCTION_98
0x400ac20	              0x5b	                                 pop rbx	      4005	sequencer.c	FUNCTION_98
0x400ac21	              0x5d	                                 pop rbp	      4005	sequencer.c	FUNCTION_98
0x400ac22	            0x415c	                                 pop r12	      4005	sequencer.c	FUNCTION_98
0x400ac24	            0x415d	                                 pop r13	      4005	sequencer.c	FUNCTION_98
0x400ac26	            0x415e	                                 pop r14	      4005	sequencer.c	FUNCTION_98
0x400ac28	            0x415f	                                 pop r15	      4005	sequencer.c	FUNCTION_98
0x400ac2a	              0xc3	                                     ret	      4005	sequencer.c	FUNCTION_98
reset_for_rollback	ELSE,0:IF,0:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,2:DO,0	18
0x4000861	        0x4883ec38	                           sub rsp, 0x38	      2252	sequencer.c	FUNCTION_69
0x4000865	    0x64488b042528	                mov rax, qword fs:[0x28]	      2252	sequencer.c	FUNCTION_69
0x400086e	      0x4889442428	             mov qword [rsp + 0x28], rax	      2252	sequencer.c	FUNCTION_69
0x4000873	            0x31c0	                            xor eax, eax	      2252	sequencer.c	FUNCTION_69
0x4000875	    0x48c704240000	                      mov qword [rsp], 0	      2255	sequencer.c	FUNCTION_69
0x400087d	    0x48c744240800	                  mov qword [rsp + 8], 0	      2256	sequencer.c	FUNCTION_69
0x4000886	      0xe800000000	                          call 0x400088b	      2257	sequencer.c	FUNCTION_69	CALL_1
0x400088b	      0x4889442410	             mov qword [rsp + 0x10], rax	      2257	sequencer.c	FUNCTION_69	CALL_1
0x4000890	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2258	sequencer.c	FUNCTION_69
0x4000899	      0xbe02000000	                              mov esi, 2	      2259	sequencer.c	FUNCTION_69	CALL_2
0x400089e	          0x4889e7	                            mov rdi, rsp	      2259	sequencer.c	FUNCTION_69	CALL_2
0x40008a1	      0xe800000000	                          call 0x40008a6	      2259	sequencer.c	FUNCTION_69	CALL_2
0x40008a6	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      2260	sequencer.c	FUNCTION_69
0x40008ab	    0x644833142528	                xor rdx, qword fs:[0x28]	      2260	sequencer.c	FUNCTION_69
0x40008b4	            0x7405	                            je 0x40008bb	      2260	sequencer.c	FUNCTION_69
0x40008b6	      0xe800000000	                          call 0x40008bb	      2260	sequencer.c	FUNCTION_69
0x40008bb	        0x4883c438	                           add rsp, 0x38	      2260	sequencer.c	FUNCTION_69
0x40008bf	              0xc3	                                     ret	      2260	sequencer.c	FUNCTION_69
gpg_sign_opt_quoted	ELSE,0:IF,1:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,1:DO,0	24
0x40016c8	        0x4883ec08	                              sub rsp, 8	       246	sequencer.c	FUNCTION_7
0x40016cc	    0x48c705000000	               mov qword [0x040016d7], 0	       164	strbuf.h	FUNCTION_177
0x40016d7	    0x488b05000000	            mov rax, qword [0x040016de] 	       165	strbuf.h	FUNCTION_177	IF_2
0x40016de	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_177	IF_2
0x40016e4	            0x7405	                            je 0x40016eb	       165	strbuf.h	FUNCTION_177	IF_2
0x40016e6	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_177	IF_2
0x40016e9	            0xeb22	                           jmp 0x400170d	       166	strbuf.h	FUNCTION_177	IF_2
0x40016eb	    0x803d00000000	                cmp byte [0x040016f2], 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40016f2	            0x7419	                            je 0x400170d	       168	strbuf.h	FUNCTION_177	CALL_2
0x40016f4	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40016f9	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_177	CALL_2
0x40016fe	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x4001703	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x4001708	      0xe800000000	                          call 0x400170d	       168	strbuf.h	FUNCTION_177	CALL_2
0x400170d	        0x488b5730	            mov rdx, qword [rdi + 0x30] 	       250	sequencer.c	FUNCTION_7	IF_1
0x4001711	          0x4885d2	                           test rdx, rdx	       250	sequencer.c	FUNCTION_7	IF_1
0x4001714	            0x7414	                            je 0x400172a	       250	sequencer.c	FUNCTION_7	IF_1
0x4001716	      0xbe00000000	                              mov esi, 0	       251	sequencer.c	FUNCTION_7	CALL_1
0x400171b	      0xbf00000000	                              mov edi, 0	       251	sequencer.c	FUNCTION_7	CALL_1
0x4001720	      0xb800000000	                              mov eax, 0	       251	sequencer.c	FUNCTION_7	CALL_1
0x4001725	      0xe800000000	                          call 0x400172a	       251	sequencer.c	FUNCTION_7	CALL_1
0x400172a	    0x488b05000000	            mov rax, qword [0x04001731] 	       253	sequencer.c	FUNCTION_7
0x4001731	        0x4883c408	                              add rsp, 8	       253	sequencer.c	FUNCTION_7
0x4001735	              0xc3	                                     ret	       253	sequencer.c	FUNCTION_7
check_todo_list	ELSE,0:IF,8:FOR,2:WHILE,0:SWITCH,0:functions,0:CALL,19:DO,0	206
0x400af45	            0x4157	                                push r15	      4091	sequencer.c	FUNCTION_101
0x400af47	            0x4156	                                push r14	      4091	sequencer.c	FUNCTION_101
0x400af49	            0x4155	                                push r13	      4091	sequencer.c	FUNCTION_101
0x400af4b	            0x4154	                                push r12	      4091	sequencer.c	FUNCTION_101
0x400af4d	              0x55	                                push rbp	      4091	sequencer.c	FUNCTION_101
0x400af4e	              0x53	                                push rbx	      4091	sequencer.c	FUNCTION_101
0x400af4f	    0x4881ecb80000	                           sub rsp, 0xb8	      4091	sequencer.c	FUNCTION_101
0x400af56	    0x64488b042528	                mov rax, qword fs:[0x28]	      4091	sequencer.c	FUNCTION_101
0x400af5f	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      4091	sequencer.c	FUNCTION_101
0x400af67	            0x31c0	                            xor eax, eax	      4091	sequencer.c	FUNCTION_101
0x400af69	      0x488d742450	                   lea rsi, [rsp + 0x50]	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400af6e	      0xbf00000000	                              mov edi, 0	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400af73	      0xe800000000	                          call 0x400af78	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400af78	    0x41bd00000000	                             mov r13d, 0	      4074	sequencer.c	FUNCTION_100	IF_1
0x400af7e	            0x85c0	                           test eax, eax	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400af80	            0x756e	                           jne 0x400aff0	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400af82	      0x488b5c2450	            mov rbx, qword [rsp + 0x50] 	      4073	sequencer.c	FUNCTION_100	IF_1	CALL_2
0x400af87	          0x4889de	                            mov rsi, rbx	      4073	sequencer.c	FUNCTION_100	IF_1	CALL_2
0x400af8a	      0xbf00000000	                              mov edi, 0	      4073	sequencer.c	FUNCTION_100	IF_1	CALL_2
0x400af8f	      0xe800000000	                          call 0x400af94	      4073	sequencer.c	FUNCTION_100	IF_1	CALL_2
0x400af94	            0x85c0	                           test eax, eax	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400af96	            0x7458	                            je 0x400aff0	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400af98	          0x4889de	                            mov rsi, rbx	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0x400af9b	      0xbf00000000	                              mov edi, 0	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0x400afa0	      0xe800000000	                          call 0x400afa5	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0x400afa5	    0x41bd01000000	                             mov r13d, 1	      4076	sequencer.c	FUNCTION_100	IF_2
0x400afab	            0x85c0	                           test eax, eax	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0x400afad	            0x7441	                            je 0x400aff0	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0x400afaf	          0x4889de	                            mov rsi, rbx	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0x400afb2	      0xbf00000000	                              mov edi, 0	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0x400afb7	      0xe800000000	                          call 0x400afbc	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0x400afbc	    0x41bd02000000	                             mov r13d, 2	      4078	sequencer.c	FUNCTION_100	IF_3
0x400afc2	            0x85c0	                           test eax, eax	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0x400afc4	            0x742a	                            je 0x400aff0	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0x400afc6	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400afcb	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400afd0	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x400afd5	      0xe800000000	                          call 0x400afda	        54	gettext.h	FUNCTION_118
0x400afda	          0x4889de	                            mov rsi, rbx	      4079	sequencer.c	FUNCTION_100	CALL_6
0x400afdd	          0x4889c7	                            mov rdi, rax	      4079	sequencer.c	FUNCTION_100	CALL_6
0x400afe0	      0xb800000000	                              mov eax, 0	      4079	sequencer.c	FUNCTION_100	CALL_6
0x400afe5	      0xe800000000	                          call 0x400afea	      4079	sequencer.c	FUNCTION_100	CALL_6
0x400afea	    0x41bd00000000	                             mov r13d, 0	      4081	sequencer.c	FUNCTION_100
0x400aff0	    0x48c744241000	               mov qword [rsp + 0x10], 0	      4093	sequencer.c	FUNCTION_101
0x400aff9	    0x48c744241800	               mov qword [rsp + 0x18], 0	      4093	sequencer.c	FUNCTION_101
0x400b002	    0x48c744242000	               mov qword [rsp + 0x20], 0	      4093	sequencer.c	FUNCTION_101
0x400b00b	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      4094	sequencer.c	FUNCTION_101
0x400b010	      0xb90b000000	                            mov ecx, 0xb	      4094	sequencer.c	FUNCTION_101
0x400b015	      0xb800000000	                              mov eax, 0	      4094	sequencer.c	FUNCTION_101
0x400b01a	          0xf348ab	              rep stosq qword [rdi], rax	      4094	sequencer.c	FUNCTION_101
0x400b01d	    0x48c744246000	               mov qword [rsp + 0x60], 0	      4094	sequencer.c	FUNCTION_101
0x400b026	    0x48c744243000	               mov qword [rsp + 0x30], 0	      4095	sequencer.c	FUNCTION_101
0x400b02f	    0x48c744243800	               mov qword [rsp + 0x38], 0	      4095	sequencer.c	FUNCTION_101
0x400b038	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4095	sequencer.c	FUNCTION_101
0x400b041	      0xe87f52ffff	               call sym.rebase_path_todo	      4098	sequencer.c	FUNCTION_101	CALL_3
0x400b046	          0x4889c6	                            mov rsi, rax	      4098	sequencer.c	FUNCTION_101	CALL_3
0x400b049	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x400b04e	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_179	CALL_2
0x400b055	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_179	CALL_2
0x400b058	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400b05a	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_179	CALL_2
0x400b05d	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400b061	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400b066	      0xe800000000	                          call 0x400b06b	       279	strbuf.h	FUNCTION_179	CALL_2
0x400b06b	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      4099	sequencer.c	FUNCTION_101	IF_1	CALL_4
0x400b070	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      4099	sequencer.c	FUNCTION_101	IF_1	CALL_4
0x400b075	      0xe8b860ffff	      call sym.strbuf_read_file_or_whine	      4099	sequencer.c	FUNCTION_101	IF_1	CALL_4
0x400b07a	          0x4885c0	                           test rax, rax	      4099	sequencer.c	FUNCTION_101	IF_1	CALL_4
0x400b07d	     0xf8819020000	                            js 0x400b29c	      4099	sequencer.c	FUNCTION_101	IF_1	CALL_4
0x400b083	      0x488d742450	                   lea rsi, [rsp + 0x50]	      4103	sequencer.c	FUNCTION_101
0x400b088	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      4103	sequencer.c	FUNCTION_101
0x400b08d	      0xe88779ffff	              call sym.parse_insn_buffer	      4103	sequencer.c	FUNCTION_101
0x400b092	          0x4189c4	                           mov r12d, eax	      4103	sequencer.c	FUNCTION_101
0x400b095	            0x85c0	                           test eax, eax	      4106	sequencer.c	FUNCTION_101	IF_2
0x400b097	     0xf8596010000	                           jne 0x400b233	      4106	sequencer.c	FUNCTION_101	IF_2
0x400b09d	          0x4585ed	                         test r13d, r13d	      4106	sequencer.c	FUNCTION_101	IF_2
0x400b0a0	     0xf848d010000	                            je 0x400b233	      4106	sequencer.c	FUNCTION_101	IF_2
0x400b0a6	      0x837c247000	               cmp dword [rsp + 0x70], 0	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400b0ab	            0x7e2f	                           jle 0x400b0dc	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400b0ad	      0xba00000000	                              mov edx, 0	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400b0b2	          0x4863c2	                         movsxd rax, edx	      4111	sequencer.c	FUNCTION_101	FOR_1
0x400b0b5	        0x488d0440	                  lea rax, [rax + rax*2]	      4111	sequencer.c	FUNCTION_101	FOR_1
0x400b0b9	        0x48c1e004	                              shl rax, 4	      4111	sequencer.c	FUNCTION_101	FOR_1
0x400b0bd	      0x4803442468	             add rax, qword [rsp + 0x68]	      4111	sequencer.c	FUNCTION_101	FOR_1
0x400b0c2	        0x488b4008	                mov rax, qword [rax + 8]	      4111	sequencer.c	FUNCTION_101	FOR_1
0x400b0c6	          0x4885c0	                           test rax, rax	      4112	sequencer.c	FUNCTION_101	FOR_1	IF_3
0x400b0c9	            0x7408	                            je 0x400b0d3	      4112	sequencer.c	FUNCTION_101	FOR_1	IF_3
0x400b0cb	    0x48c740180100	               mov qword [rax + 0x18], 1	      4113	sequencer.c	FUNCTION_101	FOR_1	IF_3
0x400b0d3	          0x83c201	                              add edx, 1	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400b0d6	        0x39542470	            cmp dword [rsp + 0x70], edx 	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400b0da	            0x7fd6	                            jg 0x400b0b2	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400b0dc	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      4116	sequencer.c	FUNCTION_101	CALL_6
0x400b0e1	      0xe8a455ffff	              call sym.todo_list_release	      4116	sequencer.c	FUNCTION_101	CALL_6
0x400b0e6	      0xba07000000	                              mov edx, 7	       279	strbuf.h	FUNCTION_179	CALL_2
0x400b0eb	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x400b0f0	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400b0f5	      0xe800000000	                          call 0x400b0fa	       279	strbuf.h	FUNCTION_179	CALL_2
0x400b0fa	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      4118	sequencer.c	FUNCTION_101	IF_4	CALL_8
0x400b0ff	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      4118	sequencer.c	FUNCTION_101	IF_4	CALL_8
0x400b104	      0xe82960ffff	      call sym.strbuf_read_file_or_whine	      4118	sequencer.c	FUNCTION_101	IF_4	CALL_8
0x400b109	          0x4885c0	                           test rax, rax	      4118	sequencer.c	FUNCTION_101	IF_4	CALL_8
0x400b10c	     0xf8826010000	                            js 0x400b238	      4118	sequencer.c	FUNCTION_101	IF_4	CALL_8
0x400b112	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      4122	sequencer.c	FUNCTION_101	CALL_9
0x400b117	      0xe800000000	                          call 0x400b11c	      4122	sequencer.c	FUNCTION_101	CALL_9
0x400b11c	      0x488d742450	                   lea rsi, [rsp + 0x50]	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400b121	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400b126	      0xe8ee78ffff	              call sym.parse_insn_buffer	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400b12b	            0x85c0	                           test eax, eax	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400b12d	        0x410f95c6	                              setne r14b	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400b131	        0x450fb6f6	                        movzx r14d, r14b	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400b135	        0x8b5c2470	            mov ebx, dword [rsp + 0x70] 	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400b139	          0x83eb01	                              sub ebx, 1	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400b13c	            0x7861	                            js 0x400b19f	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400b13e	          0x4863c3	                         movsxd rax, ebx	      4127	sequencer.c	FUNCTION_101	FOR_2
0x400b141	        0x488d0440	                  lea rax, [rax + rax*2]	      4127	sequencer.c	FUNCTION_101	FOR_2
0x400b145	        0x48c1e004	                              shl rax, 4	      4127	sequencer.c	FUNCTION_101	FOR_2
0x400b149	      0x4803442468	             add rax, qword [rsp + 0x68]	      4127	sequencer.c	FUNCTION_101	FOR_2
0x400b14e	        0x488b6808	                mov rbp, qword [rax + 8]	      4128	sequencer.c	FUNCTION_101	FOR_2
0x400b152	          0x4885ed	                           test rbp, rbp	      4129	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400b155	            0x7440	                            je 0x400b197	      4129	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400b157	      0x48837d1800	               cmp qword [rbp + 0x18], 0	      4129	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400b15c	            0x7539	                           jne 0x400b197	      4129	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400b15e	        0x4c8b7818	            mov r15, qword [rax + 0x18] 	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400b162	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400b165	        0x8944240c	              mov dword [rsp + 0xc], eax	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400b169	          0x4889ef	                            mov rdi, rbp	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400b16c	      0xe83f65ffff	              call sym.short_commit_name	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400b171	          0x4d89f8	                             mov r8, r15	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400b174	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400b178	          0x4889c2	                            mov rdx, rax	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400b17b	      0xbe00000000	                              mov esi, 0	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400b180	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400b185	      0xb800000000	                              mov eax, 0	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400b18a	      0xe800000000	                          call 0x400b18f	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400b18f	    0x48c745180100	               mov qword [rbp + 0x18], 1	      4133	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400b197	          0x83eb01	                              sub ebx, 1	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400b19a	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400b19d	            0x759f	                           jne 0x400b13e	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400b19f	    0x48837c243800	               cmp qword [rsp + 0x38], 0	      4138	sequencer.c	FUNCTION_101	IF_6
0x400b1a5	     0xf8493000000	                            je 0x400b23e	      4138	sequencer.c	FUNCTION_101	IF_6
0x400b1ab	        0x4183fd02	                             cmp r13d, 2	      4142	sequencer.c	FUNCTION_101	IF_7
0x400b1af	      0xb801000000	                              mov eax, 1	      4142	sequencer.c	FUNCTION_101	IF_7
0x400b1b4	        0x440f44f0	                         cmove r14d, eax	      4142	sequencer.c	FUNCTION_101	IF_7
0x400b1b8	        0x440f44e0	                         cmove r12d, eax	      4142	sequencer.c	FUNCTION_101	IF_7
0x400b1bc	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400b1c1	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400b1c6	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x400b1cb	      0xe800000000	                          call 0x400b1d0	        54	gettext.h	FUNCTION_118
0x400b1d0	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_575
0x400b1d3	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_575
0x400b1d8	    0x488b3d000000	            mov rdi, qword [0x0400b1df] 	        97	stdio2.h	CALL_575
0x400b1df	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_575
0x400b1e4	      0xe800000000	                          call 0x400b1e9	        97	stdio2.h	CALL_575
0x400b1e9	    0x488b35000000	            mov rsi, qword [0x0400b1f0] 	      4149	sequencer.c	FUNCTION_101	CALL_14
0x400b1f0	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      4149	sequencer.c	FUNCTION_101	CALL_14
0x400b1f5	      0xe800000000	                          call 0x400b1fa	      4149	sequencer.c	FUNCTION_101	CALL_14
0x400b1fa	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      4150	sequencer.c	FUNCTION_101	CALL_15
0x400b1ff	      0xe800000000	                          call 0x400b204	      4150	sequencer.c	FUNCTION_101	CALL_15
0x400b204	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400b209	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400b20e	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x400b213	      0xe800000000	                          call 0x400b218	        54	gettext.h	FUNCTION_118
0x400b218	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_575
0x400b21b	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_575
0x400b220	    0x488b3d000000	            mov rdi, qword [0x0400b227] 	        97	stdio2.h	CALL_575
0x400b227	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_575
0x400b22c	      0xe800000000	                          call 0x400b231	        97	stdio2.h	CALL_575
0x400b231	            0xeb0b	                           jmp 0x400b23e	        97	stdio2.h	CALL_575
0x400b233	          0x4589e6	                          mov r14d, r12d	      4103	sequencer.c	FUNCTION_101
0x400b236	            0xeb06	                           jmp 0x400b23e	      4103	sequencer.c	FUNCTION_101
0x400b238	    0x41beffffffff	                    mov r14d, 0xffffffff	      4119	sequencer.c	FUNCTION_101	IF_4
0x400b23e	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      4159	sequencer.c	FUNCTION_101	CALL_17
0x400b243	      0xe800000000	                          call 0x400b248	      4159	sequencer.c	FUNCTION_101	CALL_17
0x400b248	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      4160	sequencer.c	FUNCTION_101	CALL_18
0x400b24d	      0xe83854ffff	              call sym.todo_list_release	      4160	sequencer.c	FUNCTION_101	CALL_18
0x400b252	          0x4585e4	                         test r12d, r12d	      4162	sequencer.c	FUNCTION_101	IF_8
0x400b255	            0x742d	                            je 0x400b284	      4162	sequencer.c	FUNCTION_101	IF_8
0x400b257	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400b25c	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400b261	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x400b266	      0xe800000000	                          call 0x400b26b	        54	gettext.h	FUNCTION_118
0x400b26b	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_575
0x400b26e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_575
0x400b273	    0x488b3d000000	            mov rdi, qword [0x0400b27a] 	        97	stdio2.h	CALL_575
0x400b27a	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_575
0x400b27f	      0xe800000000	                          call 0x400b284	        97	stdio2.h	CALL_575
0x400b284	          0x4489f0	                           mov eax, r14d	      4170	sequencer.c	FUNCTION_101
0x400b287	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	      4170	sequencer.c	FUNCTION_101
0x400b28f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4170	sequencer.c	FUNCTION_101
0x400b298	            0x7423	                            je 0x400b2bd	      4170	sequencer.c	FUNCTION_101
0x400b29a	            0xeb1c	                           jmp 0x400b2b8	      4170	sequencer.c	FUNCTION_101
0x400b29c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      4159	sequencer.c	FUNCTION_101	CALL_17
0x400b2a1	      0xe800000000	                          call 0x400b2a6	      4159	sequencer.c	FUNCTION_101	CALL_17
0x400b2a6	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      4160	sequencer.c	FUNCTION_101	CALL_18
0x400b2ab	      0xe8da53ffff	              call sym.todo_list_release	      4160	sequencer.c	FUNCTION_101	CALL_18
0x400b2b0	    0x41beffffffff	                    mov r14d, 0xffffffff	      4100	sequencer.c	FUNCTION_101	IF_1
0x400b2b6	            0xebcc	                           jmp 0x400b284	      4100	sequencer.c	FUNCTION_101	IF_1
0x400b2b8	      0xe800000000	                          call 0x400b2bd	      4170	sequencer.c	FUNCTION_101
0x400b2bd	    0x4881c4b80000	                           add rsp, 0xb8	      4170	sequencer.c	FUNCTION_101
0x400b2c4	              0x5b	                                 pop rbx	      4170	sequencer.c	FUNCTION_101
0x400b2c5	              0x5d	                                 pop rbp	      4170	sequencer.c	FUNCTION_101
0x400b2c6	            0x415c	                                 pop r12	      4170	sequencer.c	FUNCTION_101
0x400b2c8	            0x415d	                                 pop r13	      4170	sequencer.c	FUNCTION_101
0x400b2ca	            0x415e	                                 pop r14	      4170	sequencer.c	FUNCTION_101
0x400b2cc	            0x415f	                                 pop r15	      4170	sequencer.c	FUNCTION_101
0x400b2ce	              0xc3	                                     ret	      4170	sequencer.c	FUNCTION_101
read_oneliner	ELSE,0:IF,5:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,4:DO,0	58
0x40013a8	            0x4155	                                push r13	       401	sequencer.c	FUNCTION_15
0x40013aa	            0x4154	                                push r12	       401	sequencer.c	FUNCTION_15
0x40013ac	              0x55	                                push rbp	       401	sequencer.c	FUNCTION_15
0x40013ad	              0x53	                                push rbx	       401	sequencer.c	FUNCTION_15
0x40013ae	        0x4883ec08	                              sub rsp, 8	       401	sequencer.c	FUNCTION_15
0x40013b2	          0x4889fb	                            mov rbx, rdi	       401	sequencer.c	FUNCTION_15
0x40013b5	          0x4889f5	                            mov rbp, rsi	       401	sequencer.c	FUNCTION_15
0x40013b8	          0x4189d5	                           mov r13d, edx	       401	sequencer.c	FUNCTION_15
0x40013bb	        0x4c8b6708	                mov r12, qword [rdi + 8]	       402	sequencer.c	FUNCTION_15
0x40013bf	          0x4889f7	                            mov rdi, rsi	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x40013c2	      0xe800000000	                          call 0x40013c7	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x40013c7	            0x85c0	                           test eax, eax	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x40013c9	     0xf848f000000	                            je 0x400145e	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x40013cf	      0xba00000000	                              mov edx, 0	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x40013d4	          0x4889ee	                            mov rsi, rbp	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x40013d7	          0x4889df	                            mov rdi, rbx	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x40013da	      0xe800000000	                          call 0x40013df	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x40013df	          0x4885c0	                           test rax, rax	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x40013e2	            0x792b	                           jns 0x400140f	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x40013e4	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40013e9	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40013ee	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40013f3	      0xe800000000	                          call 0x40013f8	        54	gettext.h	FUNCTION_118
0x40013f8	          0x4889ee	                            mov rsi, rbp	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x40013fb	          0x4889c7	                            mov rdi, rax	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x40013fe	      0xb800000000	                              mov eax, 0	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x4001403	      0xe800000000	                          call 0x4001408	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x4001408	      0xb800000000	                              mov eax, 0	       409	sequencer.c	FUNCTION_15	IF_2
0x400140d	            0xeb4f	                           jmp 0x400145e	       409	sequencer.c	FUNCTION_15	IF_2
0x400140f	        0x488b4308	                mov rax, qword [rbx + 8]	       412	sequencer.c	FUNCTION_15	IF_3
0x4001413	          0x4d63e4	                        movsxd r12, r12d	       412	sequencer.c	FUNCTION_15	IF_3
0x4001416	          0x4c39e0	                            cmp rax, r12	       412	sequencer.c	FUNCTION_15	IF_3
0x4001419	            0x762f	                           jbe 0x400144a	       412	sequencer.c	FUNCTION_15	IF_3
0x400141b	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       412	sequencer.c	FUNCTION_15	IF_3
0x400141f	        0x488d48ff	                      lea rcx, [rax - 1]	       412	sequencer.c	FUNCTION_15	IF_3
0x4001423	      0x807c02ff0a	          cmp byte [rdx + rax - 1], 0xa 	       412	sequencer.c	FUNCTION_15	IF_3
0x4001428	            0x7520	                           jne 0x400144a	       412	sequencer.c	FUNCTION_15	IF_3
0x400142a	        0x48894b08	                mov qword [rbx + 8], rcx	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400142e	          0x4939cc	                            cmp r12, rcx	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4001431	            0x730f	                           jae 0x4001442	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4001433	        0x488d48fe	                      lea rcx, [rax - 2]	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4001437	      0x807c02fe0d	          cmp byte [rdx + rax - 2], 0xd 	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400143c	            0x7504	                           jne 0x4001442	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400143e	        0x48894b08	                mov qword [rbx + 8], rcx	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4001442	        0x488b4308	                mov rax, qword [rbx + 8]	       415	sequencer.c	FUNCTION_15	IF_3
0x4001446	        0xc6040200	                 mov byte [rdx + rax], 0	       415	sequencer.c	FUNCTION_15	IF_3
0x400144a	      0xb801000000	                              mov eax, 1	       421	sequencer.c	FUNCTION_15
0x400144f	          0x4585ed	                         test r13d, r13d	       418	sequencer.c	FUNCTION_15	IF_5
0x4001452	            0x740a	                            je 0x400145e	       418	sequencer.c	FUNCTION_15	IF_5
0x4001454	        0x4c396308	                cmp qword [rbx + 8], r12	       405	sequencer.c	FUNCTION_15	IF_1
0x4001458	           0xf95c0	                                setne al	       405	sequencer.c	FUNCTION_15	IF_1
0x400145b	           0xfb6c0	                           movzx eax, al	       405	sequencer.c	FUNCTION_15	IF_1
0x400145e	        0x4883c408	                              add rsp, 8	       422	sequencer.c	FUNCTION_15
0x4001462	              0x5b	                                 pop rbx	       422	sequencer.c	FUNCTION_15
0x4001463	              0x5d	                                 pop rbp	       422	sequencer.c	FUNCTION_15
0x4001464	            0x415c	                                 pop r12	       422	sequencer.c	FUNCTION_15
0x4001466	            0x415d	                                 pop r13	       422	sequencer.c	FUNCTION_15
0x4001468	              0xc3	                                     ret	       422	sequencer.c	FUNCTION_15
rearrange_squash	ELSE,4:IF,16:FOR,5:WHILE,2:SWITCH,0:functions,0:CALL,42:DO,0	432
0x400b663	            0x4157	                                push r15	      4289	sequencer.c	FUNCTION_105
0x400b665	            0x4156	                                push r14	      4289	sequencer.c	FUNCTION_105
0x400b667	            0x4155	                                push r13	      4289	sequencer.c	FUNCTION_105
0x400b669	            0x4154	                                push r12	      4289	sequencer.c	FUNCTION_105
0x400b66b	              0x55	                                push rbp	      4289	sequencer.c	FUNCTION_105
0x400b66c	              0x53	                                push rbx	      4289	sequencer.c	FUNCTION_105
0x400b66d	    0x4881ecf80000	                           sub rsp, 0xf8	      4289	sequencer.c	FUNCTION_105
0x400b674	    0x64488b042528	                mov rax, qword fs:[0x28]	      4289	sequencer.c	FUNCTION_105
0x400b67d	    0x48898424e800	             mov qword [rsp + 0xe8], rax	      4289	sequencer.c	FUNCTION_105
0x400b685	            0x31c0	                            xor eax, eax	      4289	sequencer.c	FUNCTION_105
0x400b687	      0xe8394cffff	               call sym.rebase_path_todo	      4290	sequencer.c	FUNCTION_105	CALL_1
0x400b68c	          0x4889c6	                            mov rsi, rax	      4290	sequencer.c	FUNCTION_105	CALL_1
0x400b68f	      0x4889442418	             mov qword [rsp + 0x18], rax	      4290	sequencer.c	FUNCTION_105	CALL_1
0x400b694	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      4291	sequencer.c	FUNCTION_105
0x400b69c	      0xb90b000000	                            mov ecx, 0xb	      4291	sequencer.c	FUNCTION_105
0x400b6a1	      0xb800000000	                              mov eax, 0	      4291	sequencer.c	FUNCTION_105
0x400b6a6	          0xf348ab	              rep stosq qword [rdi], rax	      4291	sequencer.c	FUNCTION_105
0x400b6a9	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	      4291	sequencer.c	FUNCTION_105
0x400b6b5	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      4296	sequencer.c	FUNCTION_105	IF_1	CALL_2
0x400b6bd	      0xe8705affff	      call sym.strbuf_read_file_or_whine	      4296	sequencer.c	FUNCTION_105	IF_1	CALL_2
0x400b6c2	          0x4885c0	                           test rax, rax	      4296	sequencer.c	FUNCTION_105	IF_1	CALL_2
0x400b6c5	     0xf883c060000	                            js 0x400bd07	      4296	sequencer.c	FUNCTION_105	IF_1	CALL_2
0x400b6cb	    0x488db4249000	                   lea rsi, [rsp + 0x90]	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0x400b6d3	    0x488bbc24a000	            mov rdi, qword [rsp + 0xa0] 	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0x400b6db	      0xe83973ffff	              call sym.parse_insn_buffer	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0x400b6e0	            0x85c0	                           test eax, eax	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0x400b6e2	            0x7917	                           jns 0x400b6fb	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0x400b6e4	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      4299	sequencer.c	FUNCTION_105	IF_2	CALL_4
0x400b6ec	      0xe8994fffff	              call sym.todo_list_release	      4299	sequencer.c	FUNCTION_105	IF_2	CALL_4
0x400b6f1	      0xb8ffffffff	                     mov eax, 0xffffffff	      4300	sequencer.c	FUNCTION_105	IF_2
0x400b6f6	      0xe911060000	                           jmp 0x400bd0c	      4300	sequencer.c	FUNCTION_105	IF_2
0x400b6fb	    0x48638c24b000	         movsxd rcx, dword [rsp + 0xb0] 	      4312	sequencer.c	FUNCTION_105	CALL_5
0x400b703	      0xba00000000	                              mov edx, 0	      4312	sequencer.c	FUNCTION_105	CALL_5
0x400b708	      0xbe00000000	                              mov esi, 0	      4312	sequencer.c	FUNCTION_105	CALL_5
0x400b70d	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      4312	sequencer.c	FUNCTION_105	CALL_5
0x400b712	      0xe800000000	                          call 0x400b717	      4312	sequencer.c	FUNCTION_105	CALL_5
0x400b717	    0x48639424b000	         movsxd rdx, dword [rsp + 0xb0] 	      4314	sequencer.c	FUNCTION_105
0x400b71f	    0x48b8ffffffff	         movabs rax, 0x3fffffffffffffff 	       795	git-compat-util.h	FUNCTION_134	IF_1
0x400b729	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_134	IF_1
0x400b72c	            0x7614	                           jbe 0x400b742	       795	git-compat-util.h	FUNCTION_134	IF_1
0x400b72e	      0xbe04000000	                              mov esi, 4	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x400b733	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x400b738	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x400b73d	      0xe800000000	                          call 0x400b742	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x400b742	    0x488d3c950000	                        lea rdi, [rdx*4]	      4314	sequencer.c	FUNCTION_105
0x400b74a	      0xe800000000	                          call 0x400b74f	      4314	sequencer.c	FUNCTION_105
0x400b74f	          0x4989c7	                            mov r15, rax	      4314	sequencer.c	FUNCTION_105
0x400b752	    0x48639424b000	         movsxd rdx, dword [rsp + 0xb0] 	      4315	sequencer.c	FUNCTION_105
0x400b75a	    0x48b8ffffffff	         movabs rax, 0x3fffffffffffffff 	       795	git-compat-util.h	FUNCTION_134	IF_1
0x400b764	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_134	IF_1
0x400b767	            0x7614	                           jbe 0x400b77d	       795	git-compat-util.h	FUNCTION_134	IF_1
0x400b769	      0xbe04000000	                              mov esi, 4	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x400b76e	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x400b773	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x400b778	      0xe800000000	                          call 0x400b77d	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x400b77d	    0x488d3c950000	                        lea rdi, [rdx*4]	      4315	sequencer.c	FUNCTION_105
0x400b785	      0xe800000000	                          call 0x400b78a	      4315	sequencer.c	FUNCTION_105
0x400b78a	        0x48890424	                    mov qword [rsp], rax	      4315	sequencer.c	FUNCTION_105
0x400b78e	    0x48639424b000	         movsxd rdx, dword [rsp + 0xb0] 	      4316	sequencer.c	FUNCTION_105
0x400b796	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_134	IF_1
0x400b7a0	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_134	IF_1
0x400b7a3	            0x7614	                           jbe 0x400b7b9	       795	git-compat-util.h	FUNCTION_134	IF_1
0x400b7a5	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x400b7aa	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x400b7af	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x400b7b4	      0xe800000000	                          call 0x400b7b9	       796	git-compat-util.h	FUNCTION_134	IF_1	CALL_1
0x400b7b9	    0x488d3cd50000	                        lea rdi, [rdx*8]	      4316	sequencer.c	FUNCTION_105
0x400b7c1	      0xe800000000	                          call 0x400b7c6	      4316	sequencer.c	FUNCTION_105
0x400b7c6	      0x4889442408	                mov qword [rsp + 8], rax	      4316	sequencer.c	FUNCTION_105
0x400b7cb	    0x83bc24b00000	               cmp dword [rsp + 0xb0], 0	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400b7d3	     0xf8ec2040000	                           jle 0x400bc9b	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400b7d9	    0x41bc00000000	                             mov r12d, 0	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400b7df	    0xc74424140000	               mov dword [rsp + 0x14], 0	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400b7e7	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4318	sequencer.c	FUNCTION_105	FOR_1
0x400b7f0	    0x48c744244800	               mov qword [rsp + 0x48], 0	      4318	sequencer.c	FUNCTION_105	FOR_1
0x400b7f9	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4318	sequencer.c	FUNCTION_105	FOR_1
0x400b802	          0x4963dc	                        movsxd rbx, r12d	      4319	sequencer.c	FUNCTION_105	FOR_1
0x400b805	        0x4c8d2c5b	                  lea r13, [rbx + rbx*2]	      4319	sequencer.c	FUNCTION_105	FOR_1
0x400b809	        0x49c1e504	                              shl r13, 4	      4319	sequencer.c	FUNCTION_105	FOR_1
0x400b80d	          0x4c89ed	                            mov rbp, r13	      4319	sequencer.c	FUNCTION_105	FOR_1
0x400b810	    0x4803ac24a800	             add rbp, qword [rsp + 0xa8]	      4319	sequencer.c	FUNCTION_105	FOR_1
0x400b818	        0x488b0424	                    mov rax, qword [rsp]	      4325	sequencer.c	FUNCTION_105	FOR_1
0x400b81c	    0xc70498ffffff	    mov dword [rax + rbx*4], 0xffffffff 	      4325	sequencer.c	FUNCTION_105	FOR_1
0x400b823	    0x41c7049fffff	    mov dword [r15 + rbx*4], 0xffffffff 	      4325	sequencer.c	FUNCTION_105	FOR_1
0x400b82b	        0x488b5508	                mov rdx, qword [rbp + 8]	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400b82f	          0x4885d2	                           test rdx, rdx	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400b832	            0x7408	                            je 0x400b83c	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400b834	          0x8b4500	                    mov eax, dword [rbp]	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400b837	          0x83f80b	                            cmp eax, 0xb	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400b83a	            0x7512	                           jne 0x400b84e	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400b83c	      0x488b442408	                mov rax, qword [rsp + 8]	      4327	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400b841	    0x48c704d80000	              mov qword [rax + rbx*8], 0	      4327	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400b849	      0xe9e3020000	                           jmp 0x400bb31	      4327	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400b84e	          0x83e804	                              sub eax, 4	      4331	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_6
0x400b851	          0x83f801	                              cmp eax, 1	      4331	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_6
0x400b854	            0x7738	                            ja 0x400b88e	      4331	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_6
0x400b856	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      4332	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_7
0x400b85e	      0xe8274effff	              call sym.todo_list_release	      4332	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_7
0x400b863	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400b868	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400b86d	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x400b872	      0xe800000000	                          call 0x400b877	        54	gettext.h	FUNCTION_118
0x400b877	          0x4889c7	                            mov rdi, rax	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_8
0x400b87a	      0xb800000000	                              mov eax, 0	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_8
0x400b87f	      0xe800000000	                          call 0x400b884	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_8
0x400b884	      0xb8ffffffff	                     mov eax, 0xffffffff	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_8
0x400b889	      0xe97e040000	                           jmp 0x400bd0c	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_8
0x400b88e	        0x48896a18	             mov qword [rdx + 0x18], rbp	      4336	sequencer.c	FUNCTION_105	FOR_1
0x400b892	        0x488b7d08	                mov rdi, qword [rbp + 8]	        75	commit.h	FUNCTION_147	CALL_1
0x400b896	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_147	CALL_1
0x400b89b	      0xe800000000	                          call 0x400b8a0	        75	commit.h	FUNCTION_147	CALL_1
0x400b8a0	        0x488b7d08	                mov rdi, qword [rbp + 8]	      4339	sequencer.c	FUNCTION_105	FOR_1	CALL_10
0x400b8a4	      0xbe00000000	                              mov esi, 0	      4339	sequencer.c	FUNCTION_105	FOR_1	CALL_10
0x400b8a9	      0xe800000000	                          call 0x400b8ae	      4339	sequencer.c	FUNCTION_105	FOR_1	CALL_10
0x400b8ae	          0x4989c6	                            mov r14, rax	      4339	sequencer.c	FUNCTION_105	FOR_1	CALL_10
0x400b8b1	      0x488d742420	                   lea rsi, [rsp + 0x20]	      4340	sequencer.c	FUNCTION_105	FOR_1	CALL_11
0x400b8b6	          0x4889c7	                            mov rdi, rax	      4340	sequencer.c	FUNCTION_105	FOR_1	CALL_11
0x400b8b9	      0xe800000000	                          call 0x400b8be	      4340	sequencer.c	FUNCTION_105	FOR_1	CALL_11
0x400b8be	      0xba00000000	                              mov edx, 0	      4341	sequencer.c	FUNCTION_105	FOR_1	CALL_12
0x400b8c3	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      4341	sequencer.c	FUNCTION_105	FOR_1	CALL_12
0x400b8c8	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      4341	sequencer.c	FUNCTION_105	FOR_1	CALL_12
0x400b8cd	      0xe800000000	                          call 0x400b8d2	      4341	sequencer.c	FUNCTION_105	FOR_1	CALL_12
0x400b8d2	      0x488b442408	                mov rax, qword [rsp + 8]	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400b8d7	        0x488d1cd8	                  lea rbx, [rax + rbx*8]	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400b8db	      0x488d742428	                   lea rsi, [rsp + 0x28]	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400b8e0	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400b8e5	      0xe800000000	                          call 0x400b8ea	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400b8ea	          0x488903	                    mov qword [rbx], rax	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400b8ed	      0x4889442420	             mov qword [rsp + 0x20], rax	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400b8f2	        0x488b7d08	                mov rdi, qword [rbp + 8]	      4343	sequencer.c	FUNCTION_105	FOR_1	CALL_14
0x400b8f6	          0x4c89f6	                            mov rsi, r14	      4343	sequencer.c	FUNCTION_105	FOR_1	CALL_14
0x400b8f9	      0xe800000000	                          call 0x400b8fe	      4343	sequencer.c	FUNCTION_105	FOR_1	CALL_14
0x400b8fe	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_15
0x400b903	          0x4889cb	                            mov rbx, rcx	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_15
0x400b906	      0xb800000000	                              mov eax, 0	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_15
0x400b90b	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x400b90e	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x400b910	            0x7440	                            je 0x400b952	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x400b912	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400b916	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400b91a	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400b91d	            0x74ec	                            je 0x400b90b	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400b91f	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400b924	            0xeb05	                           jmp 0x400b92b	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400b926	          0x4889cb	                            mov rbx, rcx	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x400b929	            0xeb27	                           jmp 0x400b952	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x400b92b	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x400b92e	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x400b930	            0x74f4	                            je 0x400b926	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x400b932	        0x4883c101	                              add rcx, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400b936	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400b93a	          0x3a51ff	                  cmp dl, byte [rcx - 1]	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400b93d	            0x74ec	                            je 0x400b92b	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400b93f	      0xe931010000	                           jmp 0x400ba75	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400b944	        0x4883c301	                              add rbx, 1	      4350	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400b948	            0xeb08	                           jmp 0x400b952	      4350	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400b94a	          0x4889d3	                            mov rbx, rdx	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x400b94d	            0xeb03	                           jmp 0x400b952	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x400b94f	          0x4889d3	                            mov rbx, rdx	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x400b952	           0xfb603	                   movzx eax, byte [rbx]	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400b955	    0xf68000000000	                      test byte [rax], 1	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400b95c	            0x75e6	                           jne 0x400b944	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400b95e	          0x4889da	                            mov rdx, rbx	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400b961	      0xb800000000	                              mov eax, 0	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400b966	           0xfb608	                   movzx ecx, byte [rax]	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x400b969	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x400b96b	            0x74dd	                            je 0x400b94a	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x400b96d	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400b971	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400b975	          0x3a4aff	                  cmp cl, byte [rdx - 1]	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400b978	            0x74ec	                            je 0x400b966	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400b97a	          0x4889da	                            mov rdx, rbx	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400b97d	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400b982	           0xfb608	                   movzx ecx, byte [rax]	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x400b985	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x400b987	            0x74c6	                            je 0x400b94f	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x400b989	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400b98d	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400b991	          0x3a4aff	                  cmp cl, byte [rdx - 1]	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400b994	            0x74ec	                            je 0x400b982	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400b996	      0xe986030000	                           jmp 0x400bd21	       488	git-compat-util.h	FUNCTION_126	DO_1
0x400b99b	          0x8b6810	            mov ebp, dword [rax + 0x10] 	      4359	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7
0x400b99e	            0xeb7a	                           jmp 0x400ba1a	      4359	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7
0x400b9a0	      0xbe20000000	                           mov esi, 0x20	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400b9a5	          0x4889df	                            mov rdi, rbx	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400b9a8	      0xe800000000	                          call 0x400b9ad	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400b9ad	          0x4885c0	                           test rax, rax	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400b9b0	            0x7516	                           jne 0x400b9c8	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400b9b2	          0x4889df	                            mov rdi, rbx	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400b9b5	      0xe800000000	                          call 0x400b9ba	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400b9ba	          0x4885c0	                           test rax, rax	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400b9bd	            0x7409	                            je 0x400b9c8	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400b9bf	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4363	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400b9c3	          0x4885c0	                           test rax, rax	      4362	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_21
0x400b9c6	            0x7514	                           jne 0x400b9dc	      4362	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_21
0x400b9c8	      0x4c8b742408	                mov r14, qword [rsp + 8]	      4362	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_21
0x400b9cd	      0xbd00000000	                              mov ebp, 0	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400b9d2	          0x4585e4	                         test r12d, r12d	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400b9d5	            0x7f1c	                            jg 0x400b9f3	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400b9d7	      0xe9a7030000	                           jmp 0x400bd83	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400b9dc	    0x482b8424a800	             sub rax, qword [rsp + 0xa8]	      4365	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400b9e4	          0x4889c5	                            mov rbp, rax	      4365	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400b9e7	        0x48c1fd04	                              sar rbp, 4	      4365	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400b9eb	    0x69edabaaaaaa	               imul ebp, ebp, 0xaaaaaaab	      4365	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400b9f1	            0xeb27	                           jmp 0x400ba1a	      4365	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400b9f3	          0x498b3e	                    mov rdi, qword [r14]	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400b9f6	          0x4885ff	                           test rdi, rdi	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400b9f9	            0x740c	                            je 0x400ba07	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400b9fb	          0x4889de	                            mov rsi, rbx	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_22
0x400b9fe	      0xe800000000	                          call 0x400ba03	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_22
0x400ba03	            0x85c0	                           test eax, eax	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400ba05	            0x750e	                           jne 0x400ba15	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400ba07	          0x83c501	                              add ebp, 1	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400ba0a	        0x4983c608	                              add r14, 8	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400ba0e	          0x4439e5	                           cmp ebp, r12d	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400ba11	            0x75e0	                           jne 0x400b9f3	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400ba13	            0xeb60	                           jmp 0x400ba75	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400ba15	          0x4139ec	                           cmp r12d, ebp	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400ba18	            0x745b	                            je 0x400ba75	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400ba1a	            0x85ed	                           test ebp, ebp	      4377	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400ba1c	            0x7857	                            js 0x400ba75	      4377	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400ba1e	    0x4c03ac24a800	             add r13, qword [rsp + 0xa8]	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400ba26	      0xbe00000000	                              mov esi, 0	      4380	sequencer.c	FUNCTION_105	FOR_1	IF_11	CALL_23
0x400ba2b	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      4380	sequencer.c	FUNCTION_105	FOR_1	IF_11	CALL_23
0x400ba30	      0xe800000000	                          call 0x400ba35	      4380	sequencer.c	FUNCTION_105	FOR_1	IF_11	CALL_23
0x400ba35	          0x83f801	                              cmp eax, 1	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400ba38	            0x19c0	                            sbb eax, eax	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400ba3a	            0xf7d0	                                 not eax	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400ba3c	          0x83c005	                              add eax, 5	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400ba3f	        0x41894500	                    mov dword [r13], eax	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400ba43	          0x4863ed	                         movsxd rbp, ebp	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400ba46	        0x498d04af	                  lea rax, [r15 + rbp*4]	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400ba4a	          0x833800	                      cmp dword [rax], 0	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400ba4d	            0x7905	                           jns 0x400ba54	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400ba4f	          0x448920	                   mov dword [rax], r12d	      4383	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400ba52	            0xeb0c	                           jmp 0x400ba60	      4383	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400ba54	        0x488b0424	                    mov rax, qword [rsp]	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400ba58	        0x486304a8	         movsxd rax, dword [rax + rbp*4]	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400ba5c	        0x45892487	           mov dword [r15 + rax*4], r12d	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400ba60	        0x488b0424	                    mov rax, qword [rsp]	      4386	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400ba64	        0x448924a8	           mov dword [rax + rbp*4], r12d	      4386	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400ba68	    0xc74424140100	               mov dword [rsp + 0x14], 1	      4378	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400ba70	      0xe9bc000000	                           jmp 0x400bb31	      4378	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400ba75	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_24
0x400ba7a	          0x4889df	                            mov rdi, rbx	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_24
0x400ba7d	      0xe800000000	                          call 0x400ba82	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_24
0x400ba82	        0x89442438	             mov dword [rsp + 0x38], eax	       248	hashmap.h	FUNCTION_220
0x400ba86	    0x48c744243000	               mov qword [rsp + 0x30], 0	       249	hashmap.h	FUNCTION_220
0x400ba8f	          0x4889da	                            mov rdx, rbx	       308	hashmap.h	FUNCTION_222	CALL_2
0x400ba92	      0x488d742430	                   lea rsi, [rsp + 0x30]	       308	hashmap.h	FUNCTION_222	CALL_2
0x400ba97	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       308	hashmap.h	FUNCTION_222	CALL_2
0x400ba9c	      0xe800000000	                          call 0x400baa1	       308	hashmap.h	FUNCTION_222	CALL_2
0x400baa1	          0x4885c0	                           test rax, rax	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_24
0x400baa4	     0xf8587000000	                           jne 0x400bb31	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_24
0x400baaa	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400baaf	        0x4883fbe7	             cmp rbx, 0xffffffffffffffe7	       785	git-compat-util.h	FUNCTION_133	IF_1
0x400bab3	            0x7612	                           jbe 0x400bac7	       785	git-compat-util.h	FUNCTION_133	IF_1
0x400bab5	          0x4889da	                            mov rdx, rbx	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400bab8	      0xbe18000000	                           mov esi, 0x18	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400babd	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400bac2	      0xe800000000	                          call 0x400bac7	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400bac7	        0x4883fbe7	             cmp rbx, 0xffffffffffffffe7	       785	git-compat-util.h	FUNCTION_133	IF_1
0x400bacb	            0x751b	                           jne 0x400bae8	       785	git-compat-util.h	FUNCTION_133	IF_1
0x400bacd	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400bad2	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400bad9	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400bade	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400bae3	      0xe800000000	                          call 0x400bae8	       786	git-compat-util.h	FUNCTION_133	IF_1	CALL_1
0x400bae8	        0x488d7319	                   lea rsi, [rbx + 0x19]	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400baec	      0xbf01000000	                              mov edi, 1	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400baf1	      0xe800000000	                          call 0x400baf6	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400baf6	          0x4889c5	                            mov rbp, rax	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400baf9	        0x4c8d6814	                   lea r13, [rax + 0x14]	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400bafd	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_186	CALL_3
0x400bb00	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_186	CALL_3
0x400bb05	          0x4c89ef	                            mov rdi, r13	        53	string3.h	FUNCTION_186	CALL_3
0x400bb08	      0xe800000000	                          call 0x400bb0d	        53	string3.h	FUNCTION_186	CALL_3
0x400bb0d	        0x44896510	           mov dword [rbp + 0x10], r12d 	      4390	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400bb11	          0x4c89ef	                            mov rdi, r13	      4391	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_27
0x400bb14	      0xe800000000	                          call 0x400bb19	      4391	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_27
0x400bb19	          0x894508	                mov dword [rbp + 8], eax	       248	hashmap.h	FUNCTION_220
0x400bb1c	    0x48c745000000	                      mov qword [rbp], 0	       249	hashmap.h	FUNCTION_220
0x400bb24	          0x4889ee	                            mov rsi, rbp	      4392	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_28
0x400bb27	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      4392	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_28
0x400bb2c	      0xe800000000	                          call 0x400bb31	      4392	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_28
0x400bb31	        0x4183c401	                             add r12d, 1	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400bb35	    0x8b8424b00000	            mov eax, dword [rsp + 0xb0] 	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400bb3c	          0x4439e0	                           cmp eax, r12d	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400bb3f	     0xf8fa2fcffff	                            jg 0x400b7e7	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400bb45	      0xbb00000000	                              mov ebx, 0	      4293	sequencer.c	FUNCTION_105
0x400bb4a	      0x837c241400	               cmp dword [rsp + 0x14], 0	      4396	sequencer.c	FUNCTION_105	IF_14
0x400bb4f	     0xf844b010000	                            je 0x400bca0	      4396	sequencer.c	FUNCTION_105	IF_14
0x400bb55	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4397	sequencer.c	FUNCTION_105	IF_14
0x400bb5e	    0x48c744244800	               mov qword [rsp + 0x48], 0	      4397	sequencer.c	FUNCTION_105	IF_14
0x400bb67	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4397	sequencer.c	FUNCTION_105	IF_14
0x400bb70	            0x85c0	                           test eax, eax	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400bb72	     0xf8e01010000	                           jle 0x400bc79	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400bb78	    0x41bc00000000	                             mov r12d, 0	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400bb7e	    0x49c7c6ffffff	             mov r14, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_179	CALL_2
0x400bb85	          0x4963dc	                        movsxd rbx, r12d	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400bb88	        0x488d045b	                  lea rax, [rbx + rbx*2]	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400bb8c	        0x48c1e004	                              shl rax, 4	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400bb90	    0x48038424a800	             add rax, qword [rsp + 0xa8]	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400bb98	            0x8b00	                    mov eax, dword [rax]	      4407	sequencer.c	FUNCTION_105	IF_14	FOR_4	IF_15	CALL_29
0x400bb9a	          0x83e804	                              sub eax, 4	      4407	sequencer.c	FUNCTION_105	IF_14	FOR_4	IF_15	CALL_29
0x400bb9d	          0x83f801	                              cmp eax, 1	      4407	sequencer.c	FUNCTION_105	IF_14	FOR_4	IF_15	CALL_29
0x400bba0	     0xf86c1000000	                           jbe 0x400bc67	      4407	sequencer.c	FUNCTION_105	IF_14	FOR_4	IF_15	CALL_29
0x400bba6	          0x4585e4	                         test r12d, r12d	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bba9	     0xf89a7010000	                           jns 0x400bd56	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bbaf	      0xe9b3000000	                           jmp 0x400bc67	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bbb4	            0x89de	                            mov esi, ebx	      4411	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bbb6	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      4411	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bbbe	      0xe89944ffff	                  call sym.get_item_line	      4411	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bbc3	          0x4889c5	                            mov rbp, rax	      4411	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bbc6	          0x8d7301	                      lea esi, [rbx + 1]	      4413	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bbc9	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      4413	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bbd1	      0xe88644ffff	                  call sym.get_item_line	      4413	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bbd6	          0x4989c5	                            mov r13, rax	      4413	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bbd9	          0x4863db	                         movsxd rbx, ebx	      4417	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bbdc	        0x488d045b	                  lea rax, [rbx + rbx*2]	      4417	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bbe0	        0x48c1e004	                              shl rax, 4	      4417	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bbe4	    0x48038424a800	             add rax, qword [rsp + 0xa8]	      4417	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bbec	            0x8b00	                    mov eax, dword [rax]	      4417	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bbee	          0x8d50fc	                      lea edx, [rax - 4]	      4418	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_32
0x400bbf1	          0x83fa01	                              cmp edx, 1	      4418	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_32
0x400bbf4	            0x7752	                            ja 0x400bc48	      4418	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_32
0x400bbf6	            0x89c0	                            mov eax, eax	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_33
0x400bbf8	        0x48c1e004	                              shl rax, 4	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_33
0x400bbfc	    0x488bb0000000	                    mov rsi, qword [rax]	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_33
0x400bc03	          0x4c89f1	                            mov rcx, r14	       279	strbuf.h	FUNCTION_179	CALL_2
0x400bc06	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_179	CALL_2
0x400bc09	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x400bc0e	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400bc10	          0x4889ca	                            mov rdx, rcx	       279	strbuf.h	FUNCTION_179	CALL_2
0x400bc13	          0x48f7d2	                                 not rdx	       279	strbuf.h	FUNCTION_179	CALL_2
0x400bc16	        0x4883ea01	                              sub rdx, 1	       279	strbuf.h	FUNCTION_179	CALL_2
0x400bc1a	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       279	strbuf.h	FUNCTION_179	CALL_2
0x400bc1f	      0xe800000000	                          call 0x400bc24	       279	strbuf.h	FUNCTION_179	CALL_2
0x400bc24	         0xfb64500	                   movzx eax, byte [rbp]	       961	string2.h	FUNCTION_234	WHILE_1
0x400bc28	            0xa8df	                           test al, 0xdf	       961	string2.h	FUNCTION_234	WHILE_1
0x400bc2a	            0x741c	                            je 0x400bc48	       961	string2.h	FUNCTION_234	WHILE_1
0x400bc2c	            0x3c09	                               cmp al, 9	       962	string2.h	FUNCTION_234	WHILE_1
0x400bc2e	            0x7418	                            je 0x400bc48	       962	string2.h	FUNCTION_234	WHILE_1
0x400bc30	        0x488d4501	                      lea rax, [rbp + 1]	       962	string2.h	FUNCTION_234	WHILE_1
0x400bc34	          0x4889c5	                            mov rbp, rax	       961	string2.h	FUNCTION_234	WHILE_1
0x400bc37	           0xfb610	                   movzx edx, byte [rax]	       961	string2.h	FUNCTION_234	WHILE_1
0x400bc3a	          0xf6c2df	                           test dl, 0xdf	       961	string2.h	FUNCTION_234	WHILE_1
0x400bc3d	            0x7409	                            je 0x400bc48	       961	string2.h	FUNCTION_234	WHILE_1
0x400bc3f	        0x4883c001	                              add rax, 1	       961	string2.h	FUNCTION_234	WHILE_1
0x400bc43	          0x80fa09	                               cmp dl, 9	       962	string2.h	FUNCTION_234	WHILE_1
0x400bc46	            0x75ec	                           jne 0x400bc34	       962	string2.h	FUNCTION_234	WHILE_1
0x400bc48	          0x4c89ea	                            mov rdx, r13	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_34
0x400bc4b	          0x4829ea	                            sub rdx, rbp	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_34
0x400bc4e	          0x4889ee	                            mov rsi, rbp	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_34
0x400bc51	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_34
0x400bc56	      0xe800000000	                          call 0x400bc5b	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_34
0x400bc5b	        0x418b1c9f	            mov ebx, dword [r15 + rbx*4]	      4426	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bc5f	            0x85db	                           test ebx, ebx	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bc61	     0xf894dffffff	                           jns 0x400bbb4	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bc67	        0x4183c401	                             add r12d, 1	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400bc6b	    0x4439a424b000	           cmp dword [rsp + 0xb0], r12d 	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400bc73	     0xf8f0cffffff	                            jg 0x400bb85	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400bc79	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      4430	sequencer.c	FUNCTION_105	IF_14	CALL_35
0x400bc7e	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	      4430	sequencer.c	FUNCTION_105	IF_14	CALL_35
0x400bc83	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4430	sequencer.c	FUNCTION_105	IF_14	CALL_35
0x400bc88	      0xe8b351ffff	                   call sym.rewrite_file	      4430	sequencer.c	FUNCTION_105	IF_14	CALL_35
0x400bc8d	            0x89c3	                            mov ebx, eax	      4430	sequencer.c	FUNCTION_105	IF_14	CALL_35
0x400bc8f	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      4431	sequencer.c	FUNCTION_105	IF_14	CALL_36
0x400bc94	      0xe800000000	                          call 0x400bc99	      4431	sequencer.c	FUNCTION_105	IF_14	CALL_36
0x400bc99	            0xeb05	                           jmp 0x400bca0	      4431	sequencer.c	FUNCTION_105	IF_14	CALL_36
0x400bc9b	      0xbb00000000	                              mov ebx, 0	      4293	sequencer.c	FUNCTION_105
0x400bca0	          0x4c89ff	                            mov rdi, r15	      4434	sequencer.c	FUNCTION_105	CALL_37
0x400bca3	      0xe800000000	                          call 0x400bca8	      4434	sequencer.c	FUNCTION_105	CALL_37
0x400bca8	        0x488b3c24	                    mov rdi, qword [rsp]	      4435	sequencer.c	FUNCTION_105	CALL_38
0x400bcac	      0xe800000000	                          call 0x400bcb1	      4435	sequencer.c	FUNCTION_105	CALL_38
0x400bcb1	    0x83bc24b00000	               cmp dword [rsp + 0xb0], 0	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400bcb9	            0x7e22	                           jle 0x400bcdd	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400bcbb	      0xbd00000000	                              mov ebp, 0	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400bcc0	          0x4863c5	                         movsxd rax, ebp	      4437	sequencer.c	FUNCTION_105	CALL_39
0x400bcc3	      0x488b742408	                mov rsi, qword [rsp + 8]	      4437	sequencer.c	FUNCTION_105	CALL_39
0x400bcc8	        0x488b3cc6	            mov rdi, qword [rsi + rax*8]	      4437	sequencer.c	FUNCTION_105	CALL_39
0x400bccc	      0xe800000000	                          call 0x400bcd1	      4437	sequencer.c	FUNCTION_105	CALL_39
0x400bcd1	          0x83c501	                              add ebp, 1	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400bcd4	    0x39ac24b00000	            cmp dword [rsp + 0xb0], ebp 	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400bcdb	            0x7fe3	                            jg 0x400bcc0	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400bcdd	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4438	sequencer.c	FUNCTION_105	CALL_40
0x400bce2	      0xe800000000	                          call 0x400bce7	      4438	sequencer.c	FUNCTION_105	CALL_40
0x400bce7	      0xbe01000000	                              mov esi, 1	      4439	sequencer.c	FUNCTION_105	CALL_41
0x400bcec	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      4439	sequencer.c	FUNCTION_105	CALL_41
0x400bcf1	      0xe800000000	                          call 0x400bcf6	      4439	sequencer.c	FUNCTION_105	CALL_41
0x400bcf6	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      4440	sequencer.c	FUNCTION_105	CALL_42
0x400bcfe	      0xe88749ffff	              call sym.todo_list_release	      4440	sequencer.c	FUNCTION_105	CALL_42
0x400bd03	            0x89d8	                            mov eax, ebx	      4442	sequencer.c	FUNCTION_105
0x400bd05	            0xeb05	                           jmp 0x400bd0c	      4442	sequencer.c	FUNCTION_105
0x400bd07	      0xb8ffffffff	                     mov eax, 0xffffffff	      4297	sequencer.c	FUNCTION_105	IF_1
0x400bd0c	    0x488bb424e800	            mov rsi, qword [rsp + 0xe8] 	      4443	sequencer.c	FUNCTION_105
0x400bd14	    0x644833342528	                xor rsi, qword fs:[0x28]	      4443	sequencer.c	FUNCTION_105
0x400bd1d	            0x747c	                            je 0x400bd9b	      4443	sequencer.c	FUNCTION_105
0x400bd1f	            0xeb75	                           jmp 0x400bd96	      4443	sequencer.c	FUNCTION_105
0x400bd21	          0x4889df	                            mov rdi, rbx	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_19
0x400bd24	      0xe800000000	                          call 0x400bd29	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_19
0x400bd29	        0x89442438	             mov dword [rsp + 0x38], eax	       248	hashmap.h	FUNCTION_220
0x400bd2d	    0x48c744243000	               mov qword [rsp + 0x30], 0	       249	hashmap.h	FUNCTION_220
0x400bd36	          0x4889da	                            mov rdx, rbx	       308	hashmap.h	FUNCTION_222	CALL_2
0x400bd39	      0x488d742430	                   lea rsi, [rsp + 0x30]	       308	hashmap.h	FUNCTION_222	CALL_2
0x400bd3e	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       308	hashmap.h	FUNCTION_222	CALL_2
0x400bd43	      0xe800000000	                          call 0x400bd48	       308	hashmap.h	FUNCTION_222	CALL_2
0x400bd48	          0x4885c0	                           test rax, rax	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_19
0x400bd4b	     0xf854afcffff	                           jne 0x400b99b	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_19
0x400bd51	      0xe94afcffff	                           jmp 0x400b9a0	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_19
0x400bd56	          0x4489e6	                           mov esi, r12d	      4411	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bd59	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      4411	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bd61	      0xe8f642ffff	                  call sym.get_item_line	      4411	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bd66	          0x4889c5	                            mov rbp, rax	      4411	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bd69	      0x418d742401	                      lea esi, [r12 + 1]	      4413	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bd6e	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      4413	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bd76	      0xe8e142ffff	                  call sym.get_item_line	      4413	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bd7b	          0x4989c5	                            mov r13, rax	      4413	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bd7e	      0xe9c5feffff	                           jmp 0x400bc48	      4413	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400bd83	          0x4585e4	                         test r12d, r12d	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400bd86	     0xf84e9fcffff	                            je 0x400ba75	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400bd8c	      0xbd00000000	                              mov ebp, 0	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400bd91	      0xe988fcffff	                           jmp 0x400ba1e	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400bd96	      0xe800000000	                          call 0x400bd9b	      4443	sequencer.c	FUNCTION_105
0x400bd9b	    0x4881c4f80000	                           add rsp, 0xf8	      4443	sequencer.c	FUNCTION_105
0x400bda2	              0x5b	                                 pop rbx	      4443	sequencer.c	FUNCTION_105
0x400bda3	              0x5d	                                 pop rbp	      4443	sequencer.c	FUNCTION_105
0x400bda4	            0x415c	                                 pop r12	      4443	sequencer.c	FUNCTION_105
0x400bda6	            0x415d	                                 pop r13	      4443	sequencer.c	FUNCTION_105
0x400bda8	            0x415e	                                 pop r14	      4443	sequencer.c	FUNCTION_105
0x400bdaa	            0x415f	                                 pop r15	      4443	sequencer.c	FUNCTION_105
0x400bdac	              0xc3	                                     ret	      4443	sequencer.c	FUNCTION_105
sequencer_rollback	ELSE,1:IF,7:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,24:DO,0	247
0x400486a	            0x4154	                                push r12	      2277	sequencer.c	FUNCTION_71
0x400486c	              0x55	                                push rbp	      2277	sequencer.c	FUNCTION_71
0x400486d	              0x53	                                push rbx	      2277	sequencer.c	FUNCTION_71
0x400486e	    0x4881ecb00000	                           sub rsp, 0xb0	      2277	sequencer.c	FUNCTION_71
0x4004875	          0x4889fd	                            mov rbp, rdi	      2277	sequencer.c	FUNCTION_71
0x4004878	    0x64488b042528	                mov rax, qword fs:[0x28]	      2277	sequencer.c	FUNCTION_71
0x4004881	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      2277	sequencer.c	FUNCTION_71
0x4004889	            0x31c0	                            xor eax, eax	      2277	sequencer.c	FUNCTION_71
0x400488b	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2280	sequencer.c	FUNCTION_71
0x4004894	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2280	sequencer.c	FUNCTION_71
0x400489d	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2280	sequencer.c	FUNCTION_71
0x40048a6	      0xe822b8ffff	             call sym.git_path_head_file	      2283	sequencer.c	FUNCTION_71	CALL_1
0x40048ab	      0xbe00000000	                              mov esi, 0	      2283	sequencer.c	FUNCTION_71	CALL_1
0x40048b0	          0x4889c7	                            mov rdi, rax	      2283	sequencer.c	FUNCTION_71	CALL_1
0x40048b3	      0xe800000000	                          call 0x40048b8	      2283	sequencer.c	FUNCTION_71	CALL_1
0x40048b8	          0x4885c0	                           test rax, rax	      2284	sequencer.c	FUNCTION_71	IF_1
0x40048bb	     0xf8534010000	                           jne 0x40049f5	      2284	sequencer.c	FUNCTION_71	IF_1
0x40048c1	      0xe800000000	                          call 0x40048c6	      2284	sequencer.c	FUNCTION_71	IF_1
0x40048c6	          0x833802	                      cmp dword [rax], 2	      2284	sequencer.c	FUNCTION_71	IF_1
0x40048c9	     0xf85f0000000	                           jne 0x40049bf	      2284	sequencer.c	FUNCTION_71	IF_1
0x40048cf	      0xe800000000	                          call 0x40048d4	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x40048d4	          0x4889c7	                            mov rdi, rax	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x40048d7	      0xe800000000	                          call 0x40048dc	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x40048dc	            0x85c0	                           test eax, eax	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x40048de	            0x753c	                           jne 0x400491c	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x40048e0	      0xe800000000	                          call 0x40048e5	      2267	sequencer.c	FUNCTION_70	IF_1	CALL_4
0x40048e5	          0x4889c7	                            mov rdi, rax	      2267	sequencer.c	FUNCTION_70	IF_1	CALL_4
0x40048e8	      0xe800000000	                          call 0x40048ed	      2267	sequencer.c	FUNCTION_70	IF_1	CALL_4
0x40048ed	            0x85c0	                           test eax, eax	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x40048ef	            0x752b	                           jne 0x400491c	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x40048f1	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40048f6	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40048fb	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4004900	      0xe800000000	                          call 0x4004905	        54	gettext.h	FUNCTION_118
0x4004905	          0x4889c7	                            mov rdi, rax	      2268	sequencer.c	FUNCTION_70	CALL_5
0x4004908	      0xb800000000	                              mov eax, 0	      2268	sequencer.c	FUNCTION_70	CALL_5
0x400490d	      0xe800000000	                          call 0x4004912	      2268	sequencer.c	FUNCTION_70	CALL_5
0x4004912	      0xb8ffffffff	                     mov eax, 0xffffffff	      2268	sequencer.c	FUNCTION_70	CALL_5
0x4004917	      0xe989030000	                           jmp 0x4004ca5	      2268	sequencer.c	FUNCTION_70	CALL_5
0x400491c	      0xb900000000	                              mov ecx, 0	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x4004921	    0x488d94249000	                   lea rdx, [rsp + 0x90]	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x4004929	      0xbe00000000	                              mov esi, 0	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x400492e	      0xbf00000000	                              mov edi, 0	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x4004933	      0xe800000000	                          call 0x4004938	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x4004938	            0x85c0	                           test eax, eax	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x400493a	            0x742b	                            je 0x4004967	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x400493c	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4004941	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4004946	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x400494b	      0xe800000000	                          call 0x4004950	        54	gettext.h	FUNCTION_118
0x4004950	          0x4889c7	                            mov rdi, rax	      2270	sequencer.c	FUNCTION_70	CALL_7
0x4004953	      0xb800000000	                              mov eax, 0	      2270	sequencer.c	FUNCTION_70	CALL_7
0x4004958	      0xe800000000	                          call 0x400495d	      2270	sequencer.c	FUNCTION_70	CALL_7
0x400495d	      0xb8ffffffff	                     mov eax, 0xffffffff	      2270	sequencer.c	FUNCTION_70	CALL_7
0x4004962	      0xe93e030000	                           jmp 0x4004ca5	      2270	sequencer.c	FUNCTION_70	CALL_7
0x4004967	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_155	CALL_1
0x400496c	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_155	CALL_1
0x4004971	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       975	cache.h	FUNCTION_155	CALL_1
0x4004979	      0xe800000000	                          call 0x400497e	       975	cache.h	FUNCTION_155	CALL_1
0x400497e	            0x85c0	                           test eax, eax	      2271	sequencer.c	FUNCTION_70	IF_3	CALL_8
0x4004980	            0x752b	                           jne 0x40049ad	      2271	sequencer.c	FUNCTION_70	IF_3	CALL_8
0x4004982	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4004987	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400498c	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4004991	      0xe800000000	                          call 0x4004996	        54	gettext.h	FUNCTION_118
0x4004996	          0x4889c7	                            mov rdi, rax	      2272	sequencer.c	FUNCTION_70	CALL_9
0x4004999	      0xb800000000	                              mov eax, 0	      2272	sequencer.c	FUNCTION_70	CALL_9
0x400499e	      0xe800000000	                          call 0x40049a3	      2272	sequencer.c	FUNCTION_70	CALL_9
0x40049a3	      0xb8ffffffff	                     mov eax, 0xffffffff	      2272	sequencer.c	FUNCTION_70	CALL_9
0x40049a8	      0xe9f8020000	                           jmp 0x4004ca5	      2272	sequencer.c	FUNCTION_70	CALL_9
0x40049ad	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      2273	sequencer.c	FUNCTION_70	CALL_10
0x40049b5	      0xe8a7beffff	             call sym.reset_for_rollback	      2273	sequencer.c	FUNCTION_70	CALL_10
0x40049ba	      0xe9e6020000	                           jmp 0x4004ca5	      2290	sequencer.c	FUNCTION_71	IF_1	CALL_2
0x40049bf	      0xe809b7ffff	             call sym.git_path_head_file	      2293	sequencer.c	FUNCTION_71	CALL_4
0x40049c4	          0x4889c3	                            mov rbx, rax	      2293	sequencer.c	FUNCTION_71	CALL_4
0x40049c7	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40049cc	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40049d1	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40049d6	      0xe800000000	                          call 0x40049db	        54	gettext.h	FUNCTION_118
0x40049db	          0x4889de	                            mov rsi, rbx	      2293	sequencer.c	FUNCTION_71	CALL_4
0x40049de	          0x4889c7	                            mov rdi, rax	      2293	sequencer.c	FUNCTION_71	CALL_4
0x40049e1	      0xb800000000	                              mov eax, 0	      2293	sequencer.c	FUNCTION_71	CALL_4
0x40049e6	      0xe800000000	                          call 0x40049eb	      2293	sequencer.c	FUNCTION_71	CALL_4
0x40049eb	      0xb8ffffffff	                     mov eax, 0xffffffff	      2293	sequencer.c	FUNCTION_71	CALL_4
0x40049f0	      0xe9b0020000	                           jmp 0x4004ca5	      2293	sequencer.c	FUNCTION_71	CALL_4
0x40049f5	          0x4889c3	                            mov rbx, rax	      2293	sequencer.c	FUNCTION_71	CALL_4
0x40049f8	          0x4889c6	                            mov rsi, rax	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_5
0x40049fb	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_5
0x4004a00	      0xe800000000	                          call 0x4004a05	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_5
0x4004a05	            0x85c0	                           test eax, eax	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_5
0x4004a07	            0x7470	                            je 0x4004a79	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_5
0x4004a09	          0x4889df	                            mov rdi, rbx	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004a0c	      0xe800000000	                          call 0x4004a11	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004a11	            0x85c0	                           test eax, eax	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004a13	            0x7411	                            je 0x4004a26	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004a15	      0xe800000000	                          call 0x4004a1a	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004a1a	            0x8b38	                    mov edi, dword [rax]	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004a1c	      0xe800000000	                          call 0x4004a21	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004a21	          0x4989c4	                            mov r12, rax	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004a24	            0xeb17	                           jmp 0x4004a3d	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004a26	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4004a2b	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4004a30	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4004a35	      0xe800000000	                          call 0x4004a3a	        54	gettext.h	FUNCTION_118
0x4004a3a	          0x4989c4	                            mov r12, rax	        54	gettext.h	FUNCTION_118
0x4004a3d	      0xe88bb6ffff	             call sym.git_path_head_file	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004a42	          0x4889c5	                            mov rbp, rax	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004a45	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4004a4a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4004a4f	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4004a54	      0xe800000000	                          call 0x4004a59	        54	gettext.h	FUNCTION_118
0x4004a59	          0x4c89e2	                            mov rdx, r12	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004a5c	          0x4889ee	                            mov rsi, rbp	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004a5f	          0x4889c7	                            mov rdi, rax	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004a62	      0xb800000000	                              mov eax, 0	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004a67	      0xe800000000	                          call 0x4004a6c	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004a6c	          0x4889df	                            mov rdi, rbx	      2297	sequencer.c	FUNCTION_71	IF_3	CALL_11
0x4004a6f	      0xe800000000	                          call 0x4004a74	      2297	sequencer.c	FUNCTION_71	IF_3	CALL_11
0x4004a74	      0xe91d020000	                           jmp 0x4004c96	      2298	sequencer.c	FUNCTION_71	IF_3
0x4004a79	          0x4889df	                            mov rdi, rbx	      2300	sequencer.c	FUNCTION_71	CALL_12
0x4004a7c	      0xe800000000	                          call 0x4004a81	      2300	sequencer.c	FUNCTION_71	CALL_12
0x4004a81	      0x488d542408	                      lea rdx, [rsp + 8]	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x4004a86	      0x488d742450	                   lea rsi, [rsp + 0x50]	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x4004a8b	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x4004a90	      0xe800000000	                          call 0x4004a95	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x4004a95	            0x85c0	                           test eax, eax	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x4004a97	            0x750a	                           jne 0x4004aa3	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x4004a99	      0x488b442408	                mov rax, qword [rsp + 8]	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x4004a9e	          0x803800	                       cmp byte [rax], 0	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x4004aa1	            0x7431	                            je 0x4004ad4	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x4004aa3	      0xe825b6ffff	             call sym.git_path_head_file	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x4004aa8	          0x4889c3	                            mov rbx, rax	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x4004aab	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4004ab0	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4004ab5	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4004aba	      0xe800000000	                          call 0x4004abf	        54	gettext.h	FUNCTION_118
0x4004abf	          0x4889de	                            mov rsi, rbx	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x4004ac2	          0x4889c7	                            mov rdi, rax	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x4004ac5	      0xb800000000	                              mov eax, 0	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x4004aca	      0xe800000000	                          call 0x4004acf	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x4004acf	      0xe9c2010000	                           jmp 0x4004c96	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x4004ad4	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_155	CALL_1
0x4004ad9	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_155	CALL_1
0x4004ade	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       975	cache.h	FUNCTION_155	CALL_1
0x4004ae3	      0xe800000000	                          call 0x4004ae8	       975	cache.h	FUNCTION_155	CALL_1
0x4004ae8	            0x85c0	                           test eax, eax	      2306	sequencer.c	FUNCTION_71	IF_5	CALL_16
0x4004aea	            0x7526	                           jne 0x4004b12	      2306	sequencer.c	FUNCTION_71	IF_5	CALL_16
0x4004aec	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4004af1	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4004af6	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4004afb	      0xe800000000	                          call 0x4004b00	        54	gettext.h	FUNCTION_118
0x4004b00	          0x4889c7	                            mov rdi, rax	      2307	sequencer.c	FUNCTION_71	IF_5	CALL_17
0x4004b03	      0xb800000000	                              mov eax, 0	      2307	sequencer.c	FUNCTION_71	IF_5	CALL_17
0x4004b08	      0xe800000000	                          call 0x4004b0d	      2307	sequencer.c	FUNCTION_71	IF_5	CALL_17
0x4004b0d	      0xe984010000	                           jmp 0x4004c96	      2307	sequencer.c	FUNCTION_71	IF_5	CALL_17
0x4004b12	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2229	sequencer.c	FUNCTION_68
0x4004b1b	    0x48c744243800	               mov qword [rsp + 0x38], 0	      2229	sequencer.c	FUNCTION_68
0x4004b24	    0x48c744244000	               mov qword [rsp + 0x40], 0	      2229	sequencer.c	FUNCTION_68
0x4004b2d	      0xe8d3b5ffff	     call sym.git_path_abort_safety_file	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x4004b32	      0xba00000000	                              mov edx, 0	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x4004b37	          0x4889c6	                            mov rsi, rax	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x4004b3a	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x4004b3f	      0xe800000000	                          call 0x4004b44	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x4004b44	          0x4885c0	                           test rax, rax	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x4004b47	            0x785f	                            js 0x4004ba8	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x4004b49	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2233	sequencer.c	FUNCTION_68	IF_1	CALL_3
0x4004b4e	      0xe800000000	                          call 0x4004b53	      2233	sequencer.c	FUNCTION_68	IF_1	CALL_3
0x4004b53	      0x488d742470	                   lea rsi, [rsp + 0x70]	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x4004b58	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x4004b5d	      0xe800000000	                          call 0x4004b62	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x4004b62	            0x85c0	                           test eax, eax	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x4004b64	            0x7436	                            je 0x4004b9c	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x4004b66	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2235	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_5
0x4004b6b	      0xe800000000	                          call 0x4004b70	      2235	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_5
0x4004b70	      0xe890b5ffff	     call sym.git_path_abort_safety_file	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x4004b75	          0x4889c3	                            mov rbx, rax	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x4004b78	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4004b7d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4004b82	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4004b87	      0xe800000000	                          call 0x4004b8c	        54	gettext.h	FUNCTION_118
0x4004b8c	          0x4889de	                            mov rsi, rbx	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x4004b8f	          0x4889c7	                            mov rdi, rax	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x4004b92	      0xb800000000	                              mov eax, 0	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x4004b97	      0xe800000000	                          call 0x4004b9c	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x4004b9c	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2238	sequencer.c	FUNCTION_68	IF_1	CALL_9
0x4004ba1	      0xe800000000	                          call 0x4004ba6	      2238	sequencer.c	FUNCTION_68	IF_1	CALL_9
0x4004ba6	            0xeb55	                           jmp 0x4004bfd	      2238	sequencer.c	FUNCTION_68	IF_1	CALL_9
0x4004ba8	      0xe800000000	                          call 0x4004bad	      2240	sequencer.c	FUNCTION_68	ELSE_1	IF_3
0x4004bad	          0x833802	                      cmp dword [rax], 2	      2240	sequencer.c	FUNCTION_68	ELSE_1	IF_3
0x4004bb0	            0x751f	                           jne 0x4004bd1	      2240	sequencer.c	FUNCTION_68	ELSE_1	IF_3
0x4004bb2	    0x48c744247000	               mov qword [rsp + 0x70], 0	        90	string3.h	FUNCTION_189	CALL_5
0x4004bbb	    0x48c744247800	               mov qword [rsp + 0x78], 0	        90	string3.h	FUNCTION_189	CALL_5
0x4004bc4	    0xc78424800000	               mov dword [rsp + 0x80], 0	        90	string3.h	FUNCTION_189	CALL_5
0x4004bcf	            0xeb2c	                           jmp 0x4004bfd	        90	string3.h	FUNCTION_189	CALL_5
0x4004bd1	      0xe82fb5ffff	     call sym.git_path_abort_safety_file	      2243	sequencer.c	FUNCTION_68	CALL_13
0x4004bd6	          0x4889c3	                            mov rbx, rax	      2243	sequencer.c	FUNCTION_68	CALL_13
0x4004bd9	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4004bde	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4004be3	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4004be8	      0xe800000000	                          call 0x4004bed	        54	gettext.h	FUNCTION_118
0x4004bed	          0x4889de	                            mov rsi, rbx	      2243	sequencer.c	FUNCTION_68	CALL_13
0x4004bf0	          0x4889c7	                            mov rdi, rax	      2243	sequencer.c	FUNCTION_68	CALL_13
0x4004bf3	      0xb800000000	                              mov eax, 0	      2243	sequencer.c	FUNCTION_68	CALL_13
0x4004bf8	      0xe800000000	                          call 0x4004bfd	      2243	sequencer.c	FUNCTION_68	CALL_13
0x4004bfd	    0x488db4249000	                   lea rsi, [rsp + 0x90]	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x4004c05	      0xbf00000000	                              mov edi, 0	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x4004c0a	      0xe800000000	                          call 0x4004c0f	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x4004c0f	            0x85c0	                           test eax, eax	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x4004c11	            0x7423	                            je 0x4004c36	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x4004c13	    0x48c784249000	               mov qword [rsp + 0x90], 0	        90	string3.h	FUNCTION_189	CALL_5
0x4004c1f	    0x48c784249800	               mov qword [rsp + 0x98], 0	        90	string3.h	FUNCTION_189	CALL_5
0x4004c2b	    0xc78424a00000	               mov dword [rsp + 0xa0], 0	        90	string3.h	FUNCTION_189	CALL_5
0x4004c36	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_155	CALL_1
0x4004c3b	      0x488d742470	                   lea rsi, [rsp + 0x70]	       975	cache.h	FUNCTION_155	CALL_1
0x4004c40	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       975	cache.h	FUNCTION_155	CALL_1
0x4004c48	      0xe800000000	                          call 0x4004c4d	       975	cache.h	FUNCTION_155	CALL_1
0x4004c4d	            0x85c0	                           test eax, eax	      2311	sequencer.c	FUNCTION_71	IF_6	CALL_18
0x4004c4f	            0x7423	                            je 0x4004c74	      2311	sequencer.c	FUNCTION_71	IF_6	CALL_18
0x4004c51	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4004c56	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4004c5b	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4004c60	      0xe800000000	                          call 0x4004c65	        54	gettext.h	FUNCTION_118
0x4004c65	          0x4889c7	                            mov rdi, rax	      2313	sequencer.c	FUNCTION_71	IF_6	CALL_20
0x4004c68	      0xb800000000	                              mov eax, 0	      2313	sequencer.c	FUNCTION_71	IF_6	CALL_20
0x4004c6d	      0xe800000000	                          call 0x4004c72	      2313	sequencer.c	FUNCTION_71	IF_6	CALL_20
0x4004c72	            0xeb0e	                           jmp 0x4004c82	      2313	sequencer.c	FUNCTION_71	IF_6	CALL_20
0x4004c74	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      2316	sequencer.c	FUNCTION_71	ELSE_1	IF_7	CALL_21
0x4004c79	      0xe8e3bbffff	             call sym.reset_for_rollback	      2316	sequencer.c	FUNCTION_71	ELSE_1	IF_7	CALL_21
0x4004c7e	            0x85c0	                           test eax, eax	      2316	sequencer.c	FUNCTION_71	ELSE_1	IF_7	CALL_21
0x4004c80	            0x7514	                           jne 0x4004c96	      2316	sequencer.c	FUNCTION_71	ELSE_1	IF_7	CALL_21
0x4004c82	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2318	sequencer.c	FUNCTION_71	CALL_22
0x4004c87	      0xe800000000	                          call 0x4004c8c	      2318	sequencer.c	FUNCTION_71	CALL_22
0x4004c8c	          0x4889ef	                            mov rdi, rbp	      2319	sequencer.c	FUNCTION_71	CALL_23
0x4004c8f	      0xe800000000	                          call 0x4004c94	      2319	sequencer.c	FUNCTION_71	CALL_23
0x4004c94	            0xeb0f	                           jmp 0x4004ca5	      2319	sequencer.c	FUNCTION_71	CALL_23
0x4004c96	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2321	sequencer.c	FUNCTION_71	CALL_24
0x4004c9b	      0xe800000000	                          call 0x4004ca0	      2321	sequencer.c	FUNCTION_71	CALL_24
0x4004ca0	      0xb8ffffffff	                     mov eax, 0xffffffff	      2322	sequencer.c	FUNCTION_71
0x4004ca5	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	      2323	sequencer.c	FUNCTION_71
0x4004cad	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2323	sequencer.c	FUNCTION_71
0x4004cb6	            0x7405	                            je 0x4004cbd	      2323	sequencer.c	FUNCTION_71
0x4004cb8	      0xe800000000	                          call 0x4004cbd	      2323	sequencer.c	FUNCTION_71
0x4004cbd	    0x4881c4b00000	                           add rsp, 0xb0	      2323	sequencer.c	FUNCTION_71
0x4004cc4	              0x5b	                                 pop rbx	      2323	sequencer.c	FUNCTION_71
0x4004cc5	              0x5d	                                 pop rbp	      2323	sequencer.c	FUNCTION_71
0x4004cc6	            0x415c	                                 pop r12	      2323	sequencer.c	FUNCTION_71
0x4004cc8	              0xc3	                                     ret	      2323	sequencer.c	FUNCTION_71
get_author	ELSE,0:IF,1:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,2:DO,0	20
0x4001575	        0x4883ec18	                           sub rsp, 0x18	       674	sequencer.c	FUNCTION_25
0x4001579	    0x64488b042528	                mov rax, qword fs:[0x28]	       674	sequencer.c	FUNCTION_25
0x4001582	      0x4889442408	                mov qword [rsp + 8], rax	       674	sequencer.c	FUNCTION_25
0x4001587	            0x31c0	                            xor eax, eax	       674	sequencer.c	FUNCTION_25
0x4001589	          0x4889e2	                            mov rdx, rsp	       678	sequencer.c	FUNCTION_25	CALL_1
0x400158c	      0xbe00000000	                              mov esi, 0	       678	sequencer.c	FUNCTION_25	CALL_1
0x4001591	      0xe800000000	                          call 0x4001596	       678	sequencer.c	FUNCTION_25	CALL_1
0x4001596	          0x4885c0	                           test rax, rax	       679	sequencer.c	FUNCTION_25	IF_1
0x4001599	            0x740e	                            je 0x40015a9	       679	sequencer.c	FUNCTION_25	IF_1
0x400159b	        0x488b3424	                    mov rsi, qword [rsp]	       680	sequencer.c	FUNCTION_25	CALL_2
0x400159f	          0x4889c7	                            mov rdi, rax	       680	sequencer.c	FUNCTION_25	CALL_2
0x40015a2	      0xe800000000	                          call 0x40015a7	       680	sequencer.c	FUNCTION_25	CALL_2
0x40015a7	            0xeb05	                           jmp 0x40015ae	       680	sequencer.c	FUNCTION_25	CALL_2
0x40015a9	      0xb800000000	                              mov eax, 0	       682	sequencer.c	FUNCTION_25
0x40015ae	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       683	sequencer.c	FUNCTION_25
0x40015b3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       683	sequencer.c	FUNCTION_25
0x40015bc	            0x7405	                            je 0x40015c3	       683	sequencer.c	FUNCTION_25
0x40015be	      0xe800000000	                          call 0x40015c3	       683	sequencer.c	FUNCTION_25
0x40015c3	        0x4883c418	                           add rsp, 0x18	       683	sequencer.c	FUNCTION_25
0x40015c7	              0xc3	                                     ret	       683	sequencer.c	FUNCTION_25
get_todo_path	ELSE,0:IF,1:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,3:DO,0	14
0x40002fd	        0x4883ec08	                              sub rsp, 8	       205	sequencer.c	FUNCTION_5
0x4000301	          0x833f02	                      cmp dword [rdi], 2	       206	sequencer.c	FUNCTION_5	IF_1	CALL_1
0x4000304	            0x7507	                           jne 0x400030d	       206	sequencer.c	FUNCTION_5	IF_1	CALL_1
0x4000306	      0xe8baffffff	               call sym.rebase_path_todo	       207	sequencer.c	FUNCTION_5	CALL_2
0x400030b	            0xeb27	                           jmp 0x4000334	       207	sequencer.c	FUNCTION_5	CALL_2
0x400030d	    0x48833d000000	               cmp qword [0x04000315], 0	        40	sequencer.c	CALL_3
0x4000315	            0x7516	                           jne 0x400032d	        40	sequencer.c	CALL_3
0x4000317	      0xbf00000000	                              mov edi, 0	        40	sequencer.c	CALL_3
0x400031c	      0xb800000000	                              mov eax, 0	        40	sequencer.c	CALL_3
0x4000321	      0xe800000000	                          call 0x4000326	        40	sequencer.c	CALL_3
0x4000326	    0x488905000000	            mov qword [0x0400032d], rax 	        40	sequencer.c	CALL_3
0x400032d	    0x488b05000000	            mov rax, qword [0x04000334] 	        40	sequencer.c	CALL_3
0x4000334	        0x4883c408	                              add rsp, 8	       209	sequencer.c	FUNCTION_5
0x4000338	              0xc3	                                     ret	       209	sequencer.c	FUNCTION_5
error_dirty_index	ELSE,0:IF,2:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,8:DO,0	49
0x40012e7	              0x53	                                push rbx	       430	sequencer.c	FUNCTION_17
0x40012e8	          0x4889fb	                            mov rbx, rdi	       430	sequencer.c	FUNCTION_17
0x40012eb	      0xbf00000000	                              mov edi, 0	       431	sequencer.c	FUNCTION_17	IF_1
0x40012f0	      0xe800000000	                          call 0x40012f5	       431	sequencer.c	FUNCTION_17	IF_1
0x40012f5	            0x85c0	                           test eax, eax	       431	sequencer.c	FUNCTION_17	IF_1
0x40012f7	            0x742e	                            je 0x4001327	       431	sequencer.c	FUNCTION_17	IF_1
0x40012f9	          0x4889df	                            mov rdi, rbx	       432	sequencer.c	FUNCTION_17	CALL_3
0x40012fc	      0xe8b3f3ffff	                    call sym.action_name	       432	sequencer.c	FUNCTION_17	CALL_3
0x4001301	      0xbf00000000	                              mov edi, 0	        53	gettext.h	FUNCTION_118	IF_1
0x4001306	          0x803800	                       cmp byte [rax], 0	        52	gettext.h	FUNCTION_118	IF_1
0x4001309	            0x7415	                            je 0x4001320	        52	gettext.h	FUNCTION_118	IF_1
0x400130b	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4001310	          0x4889c6	                            mov rsi, rax	        54	gettext.h	FUNCTION_118
0x4001313	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4001318	      0xe800000000	                          call 0x400131d	        54	gettext.h	FUNCTION_118
0x400131d	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_118
0x4001320	      0xe800000000	                          call 0x4001325	       432	sequencer.c	FUNCTION_17	CALL_3
0x4001325	            0xeb7f	                           jmp 0x40013a6	       432	sequencer.c	FUNCTION_17	CALL_3
0x4001327	          0x4889df	                            mov rdi, rbx	       434	sequencer.c	FUNCTION_17	CALL_4
0x400132a	      0xe885f3ffff	                    call sym.action_name	       434	sequencer.c	FUNCTION_17	CALL_4
0x400132f	      0xbb00000000	                              mov ebx, 0	        53	gettext.h	FUNCTION_118	IF_1
0x4001334	          0x803800	                       cmp byte [rax], 0	        52	gettext.h	FUNCTION_118	IF_1
0x4001337	            0x7415	                            je 0x400134e	        52	gettext.h	FUNCTION_118	IF_1
0x4001339	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400133e	          0x4889c6	                            mov rsi, rax	        54	gettext.h	FUNCTION_118
0x4001341	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4001346	      0xe800000000	                          call 0x400134b	        54	gettext.h	FUNCTION_118
0x400134b	          0x4889c3	                            mov rbx, rax	        54	gettext.h	FUNCTION_118
0x400134e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4001353	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4001358	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x400135d	      0xe800000000	                          call 0x4001362	        54	gettext.h	FUNCTION_118
0x4001362	          0x4889de	                            mov rsi, rbx	       434	sequencer.c	FUNCTION_17	CALL_4
0x4001365	          0x4889c7	                            mov rdi, rax	       434	sequencer.c	FUNCTION_17	CALL_4
0x4001368	      0xb800000000	                              mov eax, 0	       434	sequencer.c	FUNCTION_17	CALL_4
0x400136d	      0xe800000000	                          call 0x4001372	       434	sequencer.c	FUNCTION_17	CALL_4
0x4001372	      0xb8ffffffff	                     mov eax, 0xffffffff	       439	sequencer.c	FUNCTION_17
0x4001377	    0x833d00000000	               cmp dword [0x0400137e], 0	       437	sequencer.c	FUNCTION_17	IF_2
0x400137e	            0x7426	                            je 0x40013a6	       437	sequencer.c	FUNCTION_17	IF_2
0x4001380	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4001385	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400138a	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x400138f	      0xe800000000	                          call 0x4001394	        54	gettext.h	FUNCTION_118
0x4001394	          0x4889c7	                            mov rdi, rax	       438	sequencer.c	FUNCTION_17	CALL_8
0x4001397	      0xb800000000	                              mov eax, 0	       438	sequencer.c	FUNCTION_17	CALL_8
0x400139c	      0xe800000000	                          call 0x40013a1	       438	sequencer.c	FUNCTION_17	CALL_8
0x40013a1	      0xb8ffffffff	                     mov eax, 0xffffffff	       439	sequencer.c	FUNCTION_17
0x40013a6	              0x5b	                                 pop rbx	       440	sequencer.c	FUNCTION_17
0x40013a7	              0xc3	                                     ret	       440	sequencer.c	FUNCTION_17
action_name	ELSE,0:IF,0:FOR,0:WHILE,0:SWITCH,1:functions,0:CALL,2:DO,0	24
0x40006b4	              0x53	                                push rbx	       291	sequencer.c	FUNCTION_9
0x40006b5	            0x8b1f	                    mov ebx, dword [rdi]	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x40006b7	          0x83fb01	                              cmp ebx, 1	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x40006ba	            0x740c	                            je 0x40006c8	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x40006bc	          0x83fb01	                              cmp ebx, 1	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x40006bf	            0x7231	                            jb 0x40006f2	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x40006c1	          0x83fb02	                              cmp ebx, 2	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x40006c4	            0x7433	                            je 0x40006f9	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x40006c6	            0xeb07	                           jmp 0x40006cf	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x40006c8	      0xb800000000	                              mov eax, 0	       296	sequencer.c	FUNCTION_9	SWITCH_1
0x40006cd	            0xeb2f	                           jmp 0x40006fe	       296	sequencer.c	FUNCTION_9	SWITCH_1
0x40006cf	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40006d4	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40006d9	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40006de	      0xe800000000	                          call 0x40006e3	        54	gettext.h	FUNCTION_118
0x40006e3	            0x89de	                            mov esi, ebx	       300	sequencer.c	FUNCTION_9	CALL_2
0x40006e5	          0x4889c7	                            mov rdi, rax	       300	sequencer.c	FUNCTION_9	CALL_2
0x40006e8	      0xb800000000	                              mov eax, 0	       300	sequencer.c	FUNCTION_9	CALL_2
0x40006ed	      0xe800000000	                          call 0x40006f2	       300	sequencer.c	FUNCTION_9	CALL_2
0x40006f2	      0xb800000000	                              mov eax, 0	       294	sequencer.c	FUNCTION_9	SWITCH_1
0x40006f7	            0xeb05	                           jmp 0x40006fe	       294	sequencer.c	FUNCTION_9	SWITCH_1
0x40006f9	      0xb800000000	                              mov eax, 0	       298	sequencer.c	FUNCTION_9	SWITCH_1
0x40006fe	              0x5b	                                 pop rbx	       301	sequencer.c	FUNCTION_9
0x40006ff	              0xc3	                                     ret	       301	sequencer.c	FUNCTION_9
do_recursive_merge	ELSE,0:IF,6:FOR,1:WHILE,0:SWITCH,0:functions,0:CALL,20:DO,0	173
0x4003cc8	            0x4157	                                push r15	       510	sequencer.c	FUNCTION_21
0x4003cca	            0x4156	                                push r14	       510	sequencer.c	FUNCTION_21
0x4003ccc	            0x4155	                                push r13	       510	sequencer.c	FUNCTION_21
0x4003cce	            0x4154	                                push r12	       510	sequencer.c	FUNCTION_21
0x4003cd0	              0x55	                                push rbp	       510	sequencer.c	FUNCTION_21
0x4003cd1	              0x53	                                push rbx	       510	sequencer.c	FUNCTION_21
0x4003cd2	    0x4881ecc80400	                          sub rsp, 0x4c8	       510	sequencer.c	FUNCTION_21
0x4003cd9	          0x4989fc	                            mov r12, rdi	       510	sequencer.c	FUNCTION_21
0x4003cdc	          0x4989f5	                            mov r13, rsi	       510	sequencer.c	FUNCTION_21
0x4003cdf	          0x4889d5	                            mov rbp, rdx	       510	sequencer.c	FUNCTION_21
0x4003ce2	          0x4989cf	                            mov r15, rcx	       510	sequencer.c	FUNCTION_21
0x4003ce5	          0x4d89c6	                             mov r14, r8	       510	sequencer.c	FUNCTION_21
0x4003ce8	      0x4c894c2408	                 mov qword [rsp + 8], r9	       510	sequencer.c	FUNCTION_21
0x4003ced	    0x488b9c240005	           mov rbx, qword [rsp + 0x500] 	       510	sequencer.c	FUNCTION_21
0x4003cf5	    0x64488b042528	                mov rax, qword fs:[0x28]	       510	sequencer.c	FUNCTION_21
0x4003cfe	    0x48898424b804	            mov qword [rsp + 0x4b8], rax	       510	sequencer.c	FUNCTION_21
0x4003d06	            0x31c0	                            xor eax, eax	       510	sequencer.c	FUNCTION_21
0x4003d08	    0x48c744241000	               mov qword [rsp + 0x10], 0	       515	sequencer.c	FUNCTION_21
0x4003d11	      0xbe04000000	                              mov esi, 4	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x4003d16	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x4003d1b	      0xe800000000	                          call 0x4003d20	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x4003d20	            0x85c0	                           test eax, eax	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x4003d22	     0xf88a8010000	                            js 0x4003ed0	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x4003d28	      0xbf00000000	                              mov edi, 0	       520	sequencer.c	FUNCTION_21
0x4003d2d	      0xe800000000	                          call 0x4003d32	       520	sequencer.c	FUNCTION_21
0x4003d32	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       522	sequencer.c	FUNCTION_21	CALL_2
0x4003d37	      0xe800000000	                          call 0x4003d3c	       522	sequencer.c	FUNCTION_21	CALL_2
0x4003d3c	          0x4d85e4	                           test r12, r12	       523	sequencer.c	FUNCTION_21
0x4003d3f	      0xb800000000	                              mov eax, 0	       523	sequencer.c	FUNCTION_21
0x4003d44	        0x480f44e8	                          cmove rbp, rax	       523	sequencer.c	FUNCTION_21
0x4003d48	      0x48896c2420	             mov qword [rsp + 0x20], rbp	       523	sequencer.c	FUNCTION_21
0x4003d4d	    0x48c744242800	               mov qword [rsp + 0x28], 0	       524	sequencer.c	FUNCTION_21
0x4003d56	          0x4d85ed	                           test r13, r13	       525	sequencer.c	FUNCTION_21
0x4003d59	     0xf85aa010000	                           jne 0x4003f09	       525	sequencer.c	FUNCTION_21
0x4003d5f	      0xe9c9010000	                           jmp 0x4003f2d	       525	sequencer.c	FUNCTION_21
0x4003d64	          0x4c89ef	                            mov rdi, r13	       531	sequencer.c	FUNCTION_21	CALL_6
0x4003d67	      0xe800000000	                          call 0x4003d6c	       531	sequencer.c	FUNCTION_21	CALL_6
0x4003d6c	          0x4989c5	                            mov r13, rax	       531	sequencer.c	FUNCTION_21	CALL_6
0x4003d6f	            0xeb17	                           jmp 0x4003d88	       531	sequencer.c	FUNCTION_21	CALL_6
0x4003d71	    0x488b05000000	            mov rax, qword [0x04003d78] 	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003d78	        0x488b4058	            mov rax, qword [rax + 0x58] 	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003d7c	        0x488b7838	            mov rdi, qword [rax + 0x38] 	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003d80	      0xe800000000	                          call 0x4003d85	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003d85	          0x4989c5	                            mov r13, rax	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003d88	          0x4d85e4	                           test r12, r12	       532	sequencer.c	FUNCTION_21	CALL_8
0x4003d8b	            0x740d	                            je 0x4003d9a	       532	sequencer.c	FUNCTION_21	CALL_8
0x4003d8d	          0x4c89e7	                            mov rdi, r12	       532	sequencer.c	FUNCTION_21	CALL_8
0x4003d90	      0xe800000000	                          call 0x4003d95	       532	sequencer.c	FUNCTION_21	CALL_8
0x4003d95	          0x4989c4	                            mov r12, rax	       532	sequencer.c	FUNCTION_21	CALL_8
0x4003d98	            0xeb17	                           jmp 0x4003db1	       532	sequencer.c	FUNCTION_21	CALL_8
0x4003d9a	    0x488b05000000	            mov rax, qword [0x04003da1] 	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003da1	        0x488b4058	            mov rax, qword [rax + 0x58] 	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003da5	        0x488b7838	            mov rdi, qword [rax + 0x38] 	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003da9	      0xe800000000	                          call 0x4003dae	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003dae	          0x4989c4	                            mov r12, rax	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003db1	        0x488b6b48	            mov rbp, qword [rbx + 0x48] 	       534	sequencer.c	FUNCTION_21	FOR_1
0x4003db5	        0x488b4350	            mov rax, qword [rbx + 0x50] 	       534	sequencer.c	FUNCTION_21	FOR_1
0x4003db9	        0x48c1e003	                              shl rax, 3	       534	sequencer.c	FUNCTION_21	FOR_1
0x4003dbd	          0x4885c0	                           test rax, rax	       534	sequencer.c	FUNCTION_21	FOR_1
0x4003dc0	            0x7423	                            je 0x4003de5	       534	sequencer.c	FUNCTION_21	FOR_1
0x4003dc2	        0x488b7500	                    mov rsi, qword [rbp]	       535	sequencer.c	FUNCTION_21	CALL_9
0x4003dc6	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       535	sequencer.c	FUNCTION_21	CALL_9
0x4003dcb	      0xe800000000	                          call 0x4003dd0	       535	sequencer.c	FUNCTION_21	CALL_9
0x4003dd0	        0x4883c508	                              add rbp, 8	       534	sequencer.c	FUNCTION_21	FOR_1
0x4003dd4	        0x488b5350	            mov rdx, qword [rbx + 0x50] 	       534	sequencer.c	FUNCTION_21	FOR_1
0x4003dd8	        0x488b4348	            mov rax, qword [rbx + 0x48] 	       534	sequencer.c	FUNCTION_21	FOR_1
0x4003ddc	        0x488d04d0	                  lea rax, [rax + rdx*8]	       534	sequencer.c	FUNCTION_21	FOR_1
0x4003de0	          0x4839c5	                            cmp rbp, rax	       534	sequencer.c	FUNCTION_21	FOR_1
0x4003de3	            0x75dd	                           jne 0x4003dc2	       534	sequencer.c	FUNCTION_21	FOR_1
0x4003de5	      0x4c8d442418	                    lea r8, [rsp + 0x18]	       537	sequencer.c	FUNCTION_21	CALL_10
0x4003dea	          0x4c89e1	                            mov rcx, r12	       537	sequencer.c	FUNCTION_21	CALL_10
0x4003ded	          0x4c89ea	                            mov rdx, r13	       537	sequencer.c	FUNCTION_21	CALL_10
0x4003df0	          0x4c89f6	                            mov rsi, r14	       537	sequencer.c	FUNCTION_21	CALL_10
0x4003df3	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       537	sequencer.c	FUNCTION_21	CALL_10
0x4003df8	      0xe800000000	                          call 0x4003dfd	       537	sequencer.c	FUNCTION_21	CALL_10
0x4003dfd	            0x89c5	                            mov ebp, eax	       537	sequencer.c	FUNCTION_21	CALL_10
0x4003dff	          0x833b02	                      cmp dword [rbx], 2	       540	sequencer.c	FUNCTION_21	IF_3	CALL_11
0x4003e02	            0x7518	                           jne 0x4003e1c	       540	sequencer.c	FUNCTION_21	IF_3	CALL_11
0x4003e04	            0x85c0	                           test eax, eax	       540	sequencer.c	FUNCTION_21	IF_3	CALL_11
0x4003e06	            0x7f14	                            jg 0x4003e1c	       540	sequencer.c	FUNCTION_21	IF_3	CALL_11
0x4003e08	    0x488b35000000	            mov rsi, qword [0x04003e0f] 	       541	sequencer.c	FUNCTION_21	CALL_12
0x4003e0f	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	       541	sequencer.c	FUNCTION_21	CALL_12
0x4003e17	      0xe800000000	                          call 0x4003e1c	       541	sequencer.c	FUNCTION_21	CALL_12
0x4003e1c	      0x488d7c2478	                   lea rdi, [rsp + 0x78]	       542	sequencer.c	FUNCTION_21	CALL_13
0x4003e21	      0xe800000000	                          call 0x4003e26	       542	sequencer.c	FUNCTION_21	CALL_13
0x4003e26	      0xba00000000	                              mov edx, 0	       543	sequencer.c	FUNCTION_21	CALL_14
0x4003e2b	        0x8b74246c	            mov esi, dword [rsp + 0x6c] 	       543	sequencer.c	FUNCTION_21	CALL_14
0x4003e2f	      0xbf00000000	                              mov edi, 0	       543	sequencer.c	FUNCTION_21	CALL_14
0x4003e34	      0xe800000000	                          call 0x4003e39	       543	sequencer.c	FUNCTION_21	CALL_14
0x4003e39	            0x85ed	                           test ebp, ebp	       544	sequencer.c	FUNCTION_21	IF_4
0x4003e3b	            0x7911	                           jns 0x4003e4e	       544	sequencer.c	FUNCTION_21	IF_4
0x4003e3d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       304	lockfile.h	FUNCTION_115	CALL_1
0x4003e42	      0xe800000000	                          call 0x4003e47	       304	lockfile.h	FUNCTION_115	CALL_1
0x4003e47	            0x89e8	                            mov eax, ebp	       546	sequencer.c	FUNCTION_21	IF_4
0x4003e49	      0xe987000000	                           jmp 0x4003ed5	       546	sequencer.c	FUNCTION_21	IF_4
0x4003e4e	      0xba03000000	                              mov edx, 3	       549	sequencer.c	FUNCTION_21	IF_5	CALL_16
0x4003e53	      0x488d742410	                   lea rsi, [rsp + 0x10]	       549	sequencer.c	FUNCTION_21	IF_5	CALL_16
0x4003e58	      0xbf00000000	                              mov edi, 0	       549	sequencer.c	FUNCTION_21	IF_5	CALL_16
0x4003e5d	      0xe800000000	                          call 0x4003e62	       549	sequencer.c	FUNCTION_21	IF_5	CALL_16
0x4003e62	            0x85c0	                           test eax, eax	       549	sequencer.c	FUNCTION_21	IF_5	CALL_16
0x4003e64	            0x7452	                            je 0x4003eb8	       549	sequencer.c	FUNCTION_21	IF_5	CALL_16
0x4003e66	          0x4889df	                            mov rdi, rbx	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4003e69	      0xe846c8ffff	                    call sym.action_name	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4003e6e	      0xbb00000000	                              mov ebx, 0	        53	gettext.h	FUNCTION_118	IF_1
0x4003e73	          0x803800	                       cmp byte [rax], 0	        52	gettext.h	FUNCTION_118	IF_1
0x4003e76	            0x7415	                            je 0x4003e8d	        52	gettext.h	FUNCTION_118	IF_1
0x4003e78	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4003e7d	          0x4889c6	                            mov rsi, rax	        54	gettext.h	FUNCTION_118
0x4003e80	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4003e85	      0xe800000000	                          call 0x4003e8a	        54	gettext.h	FUNCTION_118
0x4003e8a	          0x4889c3	                            mov rbx, rax	        54	gettext.h	FUNCTION_118
0x4003e8d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4003e92	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4003e97	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4003e9c	      0xe800000000	                          call 0x4003ea1	        54	gettext.h	FUNCTION_118
0x4003ea1	          0x4889de	                            mov rsi, rbx	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4003ea4	          0x4889c7	                            mov rdi, rax	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4003ea7	      0xb800000000	                              mov eax, 0	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4003eac	      0xe800000000	                          call 0x4003eb1	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4003eb1	      0xb8ffffffff	                     mov eax, 0xffffffff	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4003eb6	            0xeb1d	                           jmp 0x4003ed5	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4003eb8	            0x85ed	                           test ebp, ebp	       558	sequencer.c	FUNCTION_21	IF_6
0x4003eba	            0x750a	                           jne 0x4003ec6	       558	sequencer.c	FUNCTION_21	IF_6
0x4003ebc	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       559	sequencer.c	FUNCTION_21	CALL_20
0x4003ec1	      0xe800000000	                          call 0x4003ec6	       559	sequencer.c	FUNCTION_21	CALL_20
0x4003ec6	            0x85ed	                           test ebp, ebp	       561	sequencer.c	FUNCTION_21
0x4003ec8	           0xf94c0	                                 sete al	       561	sequencer.c	FUNCTION_21
0x4003ecb	           0xfb6c0	                           movzx eax, al	       561	sequencer.c	FUNCTION_21
0x4003ece	            0xeb05	                           jmp 0x4003ed5	       561	sequencer.c	FUNCTION_21
0x4003ed0	      0xb8ffffffff	                     mov eax, 0xffffffff	       518	sequencer.c	FUNCTION_21	IF_1
0x4003ed5	    0x488b8c24b804	           mov rcx, qword [rsp + 0x4b8] 	       562	sequencer.c	FUNCTION_21
0x4003edd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       562	sequencer.c	FUNCTION_21
0x4003ee6	     0xf8496000000	                            je 0x4003f82	       562	sequencer.c	FUNCTION_21
0x4003eec	      0xe98c000000	                           jmp 0x4003f7d	       562	sequencer.c	FUNCTION_21
0x4003ef1	    0xc74424700100	               mov dword [rsp + 0x70], 1	       528	sequencer.c	FUNCTION_21
0x4003ef9	          0x4c89f7	                            mov rdi, r14	       530	sequencer.c	FUNCTION_21	CALL_4
0x4003efc	      0xe800000000	                          call 0x4003f01	       530	sequencer.c	FUNCTION_21	CALL_4
0x4003f01	          0x4989c6	                            mov r14, rax	       530	sequencer.c	FUNCTION_21	CALL_4
0x4003f04	      0xe95bfeffff	                           jmp 0x4003d64	       530	sequencer.c	FUNCTION_21	CALL_4
0x4003f09	      0x4c897c2430	             mov qword [rsp + 0x30], r15	       525	sequencer.c	FUNCTION_21
0x4003f0e	          0x833b02	                      cmp dword [rbx], 2	       526	sequencer.c	FUNCTION_21	IF_2	CALL_3
0x4003f11	            0x75de	                           jne 0x4003ef1	       526	sequencer.c	FUNCTION_21	IF_2	CALL_3
0x4003f13	            0xeb28	                           jmp 0x4003f3d	       526	sequencer.c	FUNCTION_21	IF_2	CALL_3
0x4003f15	    0xc74424700100	               mov dword [rsp + 0x70], 1	       528	sequencer.c	FUNCTION_21
0x4003f1d	          0x4c89f7	                            mov rdi, r14	       530	sequencer.c	FUNCTION_21	CALL_4
0x4003f20	      0xe800000000	                          call 0x4003f25	       530	sequencer.c	FUNCTION_21	CALL_4
0x4003f25	          0x4989c6	                            mov r14, rax	       530	sequencer.c	FUNCTION_21	CALL_4
0x4003f28	      0xe944feffff	                           jmp 0x4003d71	       530	sequencer.c	FUNCTION_21	CALL_4
0x4003f2d	    0x48c744243000	               mov qword [rsp + 0x30], 0	       525	sequencer.c	FUNCTION_21
0x4003f36	          0x833b02	                      cmp dword [rbx], 2	       526	sequencer.c	FUNCTION_21	IF_2	CALL_3
0x4003f39	            0x75da	                           jne 0x4003f15	       526	sequencer.c	FUNCTION_21	IF_2	CALL_3
0x4003f3b	            0xeb20	                           jmp 0x4003f5d	       526	sequencer.c	FUNCTION_21	IF_2	CALL_3
0x4003f3d	    0xc74424480200	               mov dword [rsp + 0x48], 2	       527	sequencer.c	FUNCTION_21	IF_2
0x4003f45	    0xc74424700100	               mov dword [rsp + 0x70], 1	       528	sequencer.c	FUNCTION_21
0x4003f4d	          0x4c89f7	                            mov rdi, r14	       530	sequencer.c	FUNCTION_21	CALL_4
0x4003f50	      0xe800000000	                          call 0x4003f55	       530	sequencer.c	FUNCTION_21	CALL_4
0x4003f55	          0x4989c6	                            mov r14, rax	       530	sequencer.c	FUNCTION_21	CALL_4
0x4003f58	      0xe907feffff	                           jmp 0x4003d64	       530	sequencer.c	FUNCTION_21	CALL_4
0x4003f5d	    0xc74424480200	               mov dword [rsp + 0x48], 2	       527	sequencer.c	FUNCTION_21	IF_2
0x4003f65	    0xc74424700100	               mov dword [rsp + 0x70], 1	       528	sequencer.c	FUNCTION_21
0x4003f6d	          0x4c89f7	                            mov rdi, r14	       530	sequencer.c	FUNCTION_21	CALL_4
0x4003f70	      0xe800000000	                          call 0x4003f75	       530	sequencer.c	FUNCTION_21	CALL_4
0x4003f75	          0x4989c6	                            mov r14, rax	       530	sequencer.c	FUNCTION_21	CALL_4
0x4003f78	      0xe9f4fdffff	                           jmp 0x4003d71	       530	sequencer.c	FUNCTION_21	CALL_4
0x4003f7d	      0xe800000000	                          call 0x4003f82	       562	sequencer.c	FUNCTION_21
0x4003f82	    0x4881c4c80400	                          add rsp, 0x4c8	       562	sequencer.c	FUNCTION_21
0x4003f89	              0x5b	                                 pop rbx	       562	sequencer.c	FUNCTION_21
0x4003f8a	              0x5d	                                 pop rbp	       562	sequencer.c	FUNCTION_21
0x4003f8b	            0x415c	                                 pop r12	       562	sequencer.c	FUNCTION_21
0x4003f8d	            0x415d	                                 pop r13	       562	sequencer.c	FUNCTION_21
0x4003f8f	            0x415e	                                 pop r14	       562	sequencer.c	FUNCTION_21
0x4003f91	            0x415f	                                 pop r15	       562	sequencer.c	FUNCTION_21
0x4003f93	              0xc3	                                     ret	       562	sequencer.c	FUNCTION_21
message_is_empty	ELSE,0:IF,1:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,1:DO,0	10
0x4003f94	        0x4883ec08	                              sub rsp, 8	       815	sequencer.c	FUNCTION_28
0x4003f98	          0x83fe01	                              cmp esi, 1	       816	sequencer.c	FUNCTION_28	IF_1
0x4003f9b	            0x750c	                           jne 0x4003fa9	       816	sequencer.c	FUNCTION_28	IF_1
0x4003f9d	      0xb800000000	                              mov eax, 0	       817	sequencer.c	FUNCTION_28	IF_1
0x4003fa2	      0x48837f0800	                  cmp qword [rdi + 8], 0	       816	sequencer.c	FUNCTION_28	IF_1
0x4003fa7	            0x750a	                           jne 0x4003fb3	       816	sequencer.c	FUNCTION_28	IF_1
0x4003fa9	      0xbe00000000	                              mov esi, 0	       818	sequencer.c	FUNCTION_28	CALL_1
0x4003fae	      0xe8d5c7ffff	                  call sym.rest_is_empty	       818	sequencer.c	FUNCTION_28	CALL_1
0x4003fb3	        0x4883c408	                              add rsp, 8	       819	sequencer.c	FUNCTION_28
0x4003fb7	              0xc3	                                     ret	       819	sequencer.c	FUNCTION_28
skip_unnecessary_picks	ELSE,0:IF,15:FOR,1:WHILE,0:SWITCH,0:functions,0:CALL,35:DO,0	218
0x400b2cf	            0x4157	                                push r15	      4187	sequencer.c	FUNCTION_103
0x400b2d1	            0x4156	                                push r14	      4187	sequencer.c	FUNCTION_103
0x400b2d3	            0x4155	                                push r13	      4187	sequencer.c	FUNCTION_103
0x400b2d5	            0x4154	                                push r12	      4187	sequencer.c	FUNCTION_103
0x400b2d7	              0x55	                                push rbp	      4187	sequencer.c	FUNCTION_103
0x400b2d8	              0x53	                                push rbx	      4187	sequencer.c	FUNCTION_103
0x400b2d9	    0x4881eca80000	                           sub rsp, 0xa8	      4187	sequencer.c	FUNCTION_103
0x400b2e0	    0x64488b042528	                mov rax, qword fs:[0x28]	      4187	sequencer.c	FUNCTION_103
0x400b2e9	    0x488984249800	             mov qword [rsp + 0x98], rax	      4187	sequencer.c	FUNCTION_103
0x400b2f1	            0x31c0	                            xor eax, eax	      4187	sequencer.c	FUNCTION_103
0x400b2f3	      0xe8cd4fffff	               call sym.rebase_path_todo	      4188	sequencer.c	FUNCTION_103	CALL_1
0x400b2f8	          0x4889c3	                            mov rbx, rax	      4188	sequencer.c	FUNCTION_103	CALL_1
0x400b2fb	    0x48c704240000	                      mov qword [rsp], 0	      4189	sequencer.c	FUNCTION_103
0x400b303	    0x48c744240800	                  mov qword [rsp + 8], 0	      4189	sequencer.c	FUNCTION_103
0x400b30c	    0x48c744241000	               mov qword [rsp + 0x10], 0	      4189	sequencer.c	FUNCTION_103
0x400b315	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      4190	sequencer.c	FUNCTION_103
0x400b31a	      0xb90b000000	                            mov ecx, 0xb	      4190	sequencer.c	FUNCTION_103
0x400b31f	      0xb800000000	                              mov eax, 0	      4190	sequencer.c	FUNCTION_103
0x400b324	          0xf348ab	              rep stosq qword [rdi], rax	      4190	sequencer.c	FUNCTION_103
0x400b327	    0x48c744243000	               mov qword [rsp + 0x30], 0	      4190	sequencer.c	FUNCTION_103
0x400b330	      0xe8e450ffff	               call sym.rebase_path_onto	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0x400b335	      0xba00000000	                              mov edx, 0	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0x400b33a	          0x4889c6	                            mov rsi, rax	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0x400b33d	          0x4889e7	                            mov rdi, rsp	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0x400b340	      0xe86360ffff	                  call sym.read_oneliner	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0x400b345	            0x85c0	                           test eax, eax	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0x400b347	            0x752c	                           jne 0x400b375	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0x400b349	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400b34e	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400b353	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x400b358	      0xe800000000	                          call 0x400b35d	        54	gettext.h	FUNCTION_118
0x400b35d	          0x4889c7	                            mov rdi, rax	      4195	sequencer.c	FUNCTION_103	CALL_4
0x400b360	      0xb800000000	                              mov eax, 0	      4195	sequencer.c	FUNCTION_103	CALL_4
0x400b365	      0xe800000000	                          call 0x400b36a	      4195	sequencer.c	FUNCTION_103	CALL_4
0x400b36a	    0x41bdffffffff	                    mov r13d, 0xffffffff	      4195	sequencer.c	FUNCTION_103	CALL_4
0x400b370	      0xe9c1020000	                           jmp 0x400b636	      4195	sequencer.c	FUNCTION_103	CALL_4
0x400b375	    0x488db4248000	                   lea rsi, [rsp + 0x80]	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_5
0x400b37d	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_5
0x400b382	      0xe800000000	                          call 0x400b387	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_5
0x400b387	          0x4189c5	                           mov r13d, eax	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_5
0x400b38a	            0x85c0	                           test eax, eax	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_5
0x400b38c	            0x7434	                            je 0x400b3c2	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_5
0x400b38e	          0x4889e7	                            mov rdi, rsp	      4197	sequencer.c	FUNCTION_103	IF_2	CALL_6
0x400b391	      0xe800000000	                          call 0x400b396	      4197	sequencer.c	FUNCTION_103	IF_2	CALL_6
0x400b396	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400b39b	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400b3a0	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x400b3a5	      0xe800000000	                          call 0x400b3aa	        54	gettext.h	FUNCTION_118
0x400b3aa	          0x4889c7	                            mov rdi, rax	      4198	sequencer.c	FUNCTION_103	IF_2	CALL_7
0x400b3ad	      0xb800000000	                              mov eax, 0	      4198	sequencer.c	FUNCTION_103	IF_2	CALL_7
0x400b3b2	      0xe800000000	                          call 0x400b3b7	      4198	sequencer.c	FUNCTION_103	IF_2	CALL_7
0x400b3b7	    0x41bdffffffff	                    mov r13d, 0xffffffff	      4198	sequencer.c	FUNCTION_103	IF_2	CALL_7
0x400b3bd	      0xe974020000	                           jmp 0x400b636	      4198	sequencer.c	FUNCTION_103	IF_2	CALL_7
0x400b3c2	          0x4889e7	                            mov rdi, rsp	      4200	sequencer.c	FUNCTION_103	CALL_8
0x400b3c5	      0xe800000000	                          call 0x400b3ca	      4200	sequencer.c	FUNCTION_103	CALL_8
0x400b3ca	          0x4889de	                            mov rsi, rbx	      4202	sequencer.c	FUNCTION_103	IF_3	CALL_9
0x400b3cd	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      4202	sequencer.c	FUNCTION_103	IF_3	CALL_9
0x400b3d2	      0xe85b5dffff	      call sym.strbuf_read_file_or_whine	      4202	sequencer.c	FUNCTION_103	IF_3	CALL_9
0x400b3d7	          0x4885c0	                           test rax, rax	      4202	sequencer.c	FUNCTION_103	IF_3	CALL_9
0x400b3da	     0xf8850020000	                            js 0x400b630	      4202	sequencer.c	FUNCTION_103	IF_3	CALL_9
0x400b3e0	      0x488d742420	                   lea rsi, [rsp + 0x20]	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_10
0x400b3e5	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_10
0x400b3ea	      0xe82a76ffff	              call sym.parse_insn_buffer	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_10
0x400b3ef	            0x85c0	                           test eax, eax	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_10
0x400b3f1	            0x7814	                            js 0x400b407	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_10
0x400b3f3	      0x837c244000	               cmp dword [rsp + 0x40], 0	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400b3f8	            0x7f22	                            jg 0x400b41c	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400b3fa	    0x4c8da4248000	                   lea r12, [rsp + 0x80]	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400b402	      0xe90d020000	                           jmp 0x400b614	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400b407	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      4205	sequencer.c	FUNCTION_103	IF_4	CALL_11
0x400b40c	      0xe87952ffff	              call sym.todo_list_release	      4205	sequencer.c	FUNCTION_103	IF_4	CALL_11
0x400b411	    0x41bdffffffff	                    mov r13d, 0xffffffff	      4206	sequencer.c	FUNCTION_103	IF_4
0x400b417	      0xe91a020000	                           jmp 0x400b636	      4206	sequencer.c	FUNCTION_103	IF_4
0x400b41c	      0xbd00000000	                              mov ebp, 0	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400b421	    0x4c8da4248000	                   lea r12, [rsp + 0x80]	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400b429	          0x4863c5	                         movsxd rax, ebp	      4210	sequencer.c	FUNCTION_103	FOR_1
0x400b42c	        0x488d1c40	                  lea rbx, [rax + rax*2]	      4210	sequencer.c	FUNCTION_103	FOR_1
0x400b430	        0x48c1e304	                              shl rbx, 4	      4210	sequencer.c	FUNCTION_103	FOR_1
0x400b434	      0x48035c2438	             add rbx, qword [rsp + 0x38]	      4210	sequencer.c	FUNCTION_103	FOR_1
0x400b439	            0x8b03	                    mov eax, dword [rbx]	      4212	sequencer.c	FUNCTION_103	FOR_1	IF_5
0x400b43b	          0x83f809	                              cmp eax, 9	      4212	sequencer.c	FUNCTION_103	FOR_1	IF_5
0x400b43e	     0xf8793000000	                            ja 0x400b4d7	      4212	sequencer.c	FUNCTION_103	FOR_1	IF_5
0x400b444	            0x85c0	                           test eax, eax	      4214	sequencer.c	FUNCTION_103	FOR_1	IF_6
0x400b446	     0xf8598000000	                           jne 0x400b4e4	      4214	sequencer.c	FUNCTION_103	FOR_1	IF_6
0x400b44c	        0x488b7b08	                mov rdi, qword [rbx + 8]	        75	commit.h	FUNCTION_147	CALL_1
0x400b450	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_147	CALL_1
0x400b455	      0xe800000000	                          call 0x400b45a	        75	commit.h	FUNCTION_147	CALL_1
0x400b45a	            0x85c0	                           test eax, eax	      4216	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_12
0x400b45c	            0x7449	                            je 0x400b4a7	      4216	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_12
0x400b45e	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      4217	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_13
0x400b463	      0xe82252ffff	              call sym.todo_list_release	      4217	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_13
0x400b468	        0x488b7b08	                mov rdi, qword [rbx + 8]	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400b46c	        0x4883c704	                              add rdi, 4	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400b470	      0xe800000000	                          call 0x400b475	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400b475	          0x4889c3	                            mov rbx, rax	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400b478	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400b47d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400b482	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x400b487	      0xe800000000	                          call 0x400b48c	        54	gettext.h	FUNCTION_118
0x400b48c	          0x4889de	                            mov rsi, rbx	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400b48f	          0x4889c7	                            mov rdi, rax	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400b492	      0xb800000000	                              mov eax, 0	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400b497	      0xe800000000	                          call 0x400b49c	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400b49c	    0x41bdffffffff	                    mov r13d, 0xffffffff	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400b4a2	      0xe98f010000	                           jmp 0x400b636	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400b4a7	        0x488b5b08	                mov rbx, qword [rbx + 8]	      4221	sequencer.c	FUNCTION_103	FOR_1	IF_8
0x400b4ab	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      4221	sequencer.c	FUNCTION_103	FOR_1	IF_8
0x400b4af	          0x4885c0	                           test rax, rax	      4221	sequencer.c	FUNCTION_103	FOR_1	IF_8
0x400b4b2	            0x7430	                            je 0x400b4e4	      4221	sequencer.c	FUNCTION_103	FOR_1	IF_8
0x400b4b4	      0x4883780800	                  cmp qword [rax + 8], 0	      4223	sequencer.c	FUNCTION_103	FOR_1	IF_9
0x400b4b9	            0x7529	                           jne 0x400b4e4	      4223	sequencer.c	FUNCTION_103	FOR_1	IF_9
0x400b4bb	          0x488b38	                    mov rdi, qword [rax]	       975	cache.h	FUNCTION_155	CALL_1
0x400b4be	        0x4883c704	                              add rdi, 4	       975	cache.h	FUNCTION_155	CALL_1
0x400b4c2	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_155	CALL_1
0x400b4c7	          0x4c89e6	                            mov rsi, r12	       975	cache.h	FUNCTION_155	CALL_1
0x400b4ca	      0xe800000000	                          call 0x400b4cf	       975	cache.h	FUNCTION_155	CALL_1
0x400b4cf	            0x85c0	                           test eax, eax	      4226	sequencer.c	FUNCTION_103	FOR_1	IF_10	CALL_16
0x400b4d1	            0x7511	                           jne 0x400b4e4	      4226	sequencer.c	FUNCTION_103	FOR_1	IF_10	CALL_16
0x400b4d3	        0x4c8d6304	                      lea r12, [rbx + 4]	      4228	sequencer.c	FUNCTION_103	FOR_1
0x400b4d7	          0x83c501	                              add ebp, 1	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400b4da	        0x396c2440	            cmp dword [rsp + 0x40], ebp 	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400b4de	     0xf8f45ffffff	                            jg 0x400b429	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400b4e4	            0x85ed	                           test ebp, ebp	      4230	sequencer.c	FUNCTION_103	IF_11
0x400b4e6	     0xf8e28010000	                           jle 0x400b614	      4230	sequencer.c	FUNCTION_103	IF_11
0x400b4ec	            0x89ee	                            mov esi, ebp	      4231	sequencer.c	FUNCTION_103	IF_11	CALL_17
0x400b4ee	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      4231	sequencer.c	FUNCTION_103	IF_11	CALL_17
0x400b4f3	      0xe8484bffff	           call sym.get_item_line_offset	      4231	sequencer.c	FUNCTION_103	IF_11	CALL_17
0x400b4f8	            0x89c3	                            mov ebx, eax	      4231	sequencer.c	FUNCTION_103	IF_11	CALL_17
0x400b4fa	      0xe83a4effff	               call sym.rebase_path_done	      4232	sequencer.c	FUNCTION_103	IF_11	CALL_18
0x400b4ff	          0x4989c7	                            mov r15, rax	      4232	sequencer.c	FUNCTION_103	IF_11	CALL_18
0x400b502	      0xbab6010000	                          mov edx, 0x1b6	        53	fcntl2.h	FUNCTION_215	IF_2	CALL_9
0x400b507	      0xbe41040000	                          mov esi, 0x441	        53	fcntl2.h	FUNCTION_215	IF_2	CALL_9
0x400b50c	          0x4889c7	                            mov rdi, rax	        53	fcntl2.h	FUNCTION_215	IF_2	CALL_9
0x400b50f	      0xb800000000	                              mov eax, 0	        53	fcntl2.h	FUNCTION_215	IF_2	CALL_9
0x400b514	      0xe800000000	                          call 0x400b519	        53	fcntl2.h	FUNCTION_215	IF_2	CALL_9
0x400b519	          0x4189c6	                           mov r14d, eax	        53	fcntl2.h	FUNCTION_215	IF_2	CALL_9
0x400b51c	            0x85c0	                           test eax, eax	      4235	sequencer.c	FUNCTION_103	IF_11	IF_12
0x400b51e	            0x7939	                           jns 0x400b559	      4235	sequencer.c	FUNCTION_103	IF_11	IF_12
0x400b520	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400b525	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400b52a	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x400b52f	      0xe800000000	                          call 0x400b534	        54	gettext.h	FUNCTION_118
0x400b534	          0x4c89fe	                            mov rsi, r15	      4236	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_20
0x400b537	          0x4889c7	                            mov rdi, rax	      4236	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_20
0x400b53a	      0xb800000000	                              mov eax, 0	      4236	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_20
0x400b53f	      0xe800000000	                          call 0x400b544	      4236	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_20
0x400b544	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      4238	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_21
0x400b549	      0xe83c51ffff	              call sym.todo_list_release	      4238	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_21
0x400b54e	    0x41bdffffffff	                    mov r13d, 0xffffffff	      4239	sequencer.c	FUNCTION_103	IF_11	IF_12
0x400b554	      0xe9dd000000	                           jmp 0x400b636	      4239	sequencer.c	FUNCTION_103	IF_11	IF_12
0x400b559	          0x4863db	                         movsxd rbx, ebx	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400b55c	          0x4889da	                            mov rdx, rbx	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400b55f	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400b564	            0x89c7	                            mov edi, eax	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400b566	      0xe800000000	                          call 0x400b56b	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400b56b	          0x4885c0	                           test rax, rax	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400b56e	            0x7941	                           jns 0x400b5b1	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400b570	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400b575	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400b57a	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x400b57f	      0xe800000000	                          call 0x400b584	        54	gettext.h	FUNCTION_118
0x400b584	          0x4c89fe	                            mov rsi, r15	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_23
0x400b587	          0x4889c7	                            mov rdi, rax	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_23
0x400b58a	      0xb800000000	                              mov eax, 0	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_23
0x400b58f	      0xe800000000	                          call 0x400b594	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_23
0x400b594	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      4243	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_24
0x400b599	      0xe8ec50ffff	              call sym.todo_list_release	      4243	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_24
0x400b59e	          0x4489f7	                           mov edi, r14d	      4244	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_25
0x400b5a1	      0xe800000000	                          call 0x400b5a6	      4244	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_25
0x400b5a6	    0x41bdffffffff	                    mov r13d, 0xffffffff	      4245	sequencer.c	FUNCTION_103	IF_11	IF_13
0x400b5ac	      0xe985000000	                           jmp 0x400b636	      4245	sequencer.c	FUNCTION_103	IF_11	IF_13
0x400b5b1	          0x4489f7	                           mov edi, r14d	      4247	sequencer.c	FUNCTION_103	IF_11	CALL_26
0x400b5b4	      0xe800000000	                          call 0x400b5b9	      4247	sequencer.c	FUNCTION_103	IF_11	CALL_26
0x400b5b9	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400b5be	          0x4929de	                            sub r14, rbx	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400b5c1	      0x48035c2430	             add rbx, qword [rsp + 0x30]	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400b5c6	      0xe8fa4cffff	               call sym.rebase_path_todo	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400b5cb	          0x4c89f2	                            mov rdx, r14	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400b5ce	          0x4889de	                            mov rsi, rbx	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400b5d1	          0x4889c7	                            mov rdi, rax	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400b5d4	      0xe86758ffff	                   call sym.rewrite_file	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400b5d9	            0x85c0	                           test eax, eax	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400b5db	            0x7912	                           jns 0x400b5ef	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400b5dd	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      4251	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_29
0x400b5e2	      0xe8a350ffff	              call sym.todo_list_release	      4251	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_29
0x400b5e7	    0x41bdffffffff	                    mov r13d, 0xffffffff	      4252	sequencer.c	FUNCTION_103	IF_11	IF_14
0x400b5ed	            0xeb47	                           jmp 0x400b636	      4252	sequencer.c	FUNCTION_103	IF_11	IF_14
0x400b5ef	        0x896c2448	             mov dword [rsp + 0x48], ebp	      4255	sequencer.c	FUNCTION_103	IF_11
0x400b5f3	      0xbe00000000	                              mov esi, 0	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400b5f8	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400b5fd	      0xe80e7dffff	                   call sym.peek_command	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400b602	          0x8d50fc	                      lea edx, [rax - 4]	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400b605	          0x83fa01	                              cmp edx, 1	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400b608	            0x770a	                            ja 0x400b614	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400b60a	            0x89c6	                            mov esi, eax	      4257	sequencer.c	FUNCTION_103	IF_11	CALL_33
0x400b60c	          0x4c89e7	                            mov rdi, r12	      4257	sequencer.c	FUNCTION_103	IF_11	CALL_33
0x400b60f	      0xe8a673ffff	            call sym.record_in_rewritten	      4257	sequencer.c	FUNCTION_103	IF_11	CALL_33
0x400b614	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      4260	sequencer.c	FUNCTION_103	CALL_34
0x400b619	      0xe86c50ffff	              call sym.todo_list_release	      4260	sequencer.c	FUNCTION_103	CALL_34
0x400b61e	          0x4c89e7	                            mov rdi, r12	      4261	sequencer.c	FUNCTION_103	CALL_35
0x400b621	      0xe800000000	                          call 0x400b626	      4261	sequencer.c	FUNCTION_103	CALL_35
0x400b626	          0x4889c7	                            mov rdi, rax	       104	stdio2.h	CALL_578
0x400b629	      0xe800000000	                          call 0x400b62e	       104	stdio2.h	CALL_578
0x400b62e	            0xeb06	                           jmp 0x400b636	      4263	sequencer.c	FUNCTION_103
0x400b630	    0x41bdffffffff	                    mov r13d, 0xffffffff	      4203	sequencer.c	FUNCTION_103	IF_3
0x400b636	          0x4489e8	                           mov eax, r13d	      4264	sequencer.c	FUNCTION_103
0x400b639	    0x488b8c249800	            mov rcx, qword [rsp + 0x98] 	      4264	sequencer.c	FUNCTION_103
0x400b641	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4264	sequencer.c	FUNCTION_103
0x400b64a	            0x7405	                            je 0x400b651	      4264	sequencer.c	FUNCTION_103
0x400b64c	      0xe800000000	                          call 0x400b651	      4264	sequencer.c	FUNCTION_103
0x400b651	    0x4881c4a80000	                           add rsp, 0xa8	      4264	sequencer.c	FUNCTION_103
0x400b658	              0x5b	                                 pop rbx	      4264	sequencer.c	FUNCTION_103
0x400b659	              0x5d	                                 pop rbp	      4264	sequencer.c	FUNCTION_103
0x400b65a	            0x415c	                                 pop r12	      4264	sequencer.c	FUNCTION_103
0x400b65c	            0x415d	                                 pop r13	      4264	sequencer.c	FUNCTION_103
0x400b65e	            0x415e	                                 pop r14	      4264	sequencer.c	FUNCTION_103
0x400b660	            0x415f	                                 pop r15	      4264	sequencer.c	FUNCTION_103
0x400b662	              0xc3	                                     ret	      4264	sequencer.c	FUNCTION_103
safe_append	ELSE,0:IF,4:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,17:DO,0	141
0x4001feb	            0x4154	                                push r12	      2545	sequencer.c	FUNCTION_79
0x4001fed	              0x55	                                push rbp	      2545	sequencer.c	FUNCTION_79
0x4001fee	              0x53	                                push rbx	      2545	sequencer.c	FUNCTION_79
0x4001fef	    0x4881ec000100	                          sub rsp, 0x100	      2545	sequencer.c	FUNCTION_79
0x4001ff6	          0x4889fb	                            mov rbx, rdi	      2545	sequencer.c	FUNCTION_79
0x4001ff9	          0x4989f4	                            mov r12, rsi	      2545	sequencer.c	FUNCTION_79
0x4001ffc	      0x4889542460	             mov qword [rsp + 0x60], rdx	      2545	sequencer.c	FUNCTION_79
0x4002001	      0x48894c2468	             mov qword [rsp + 0x68], rcx	      2545	sequencer.c	FUNCTION_79
0x4002006	      0x4c89442470	              mov qword [rsp + 0x70], r8	      2545	sequencer.c	FUNCTION_79
0x400200b	      0x4c894c2478	              mov qword [rsp + 0x78], r9	      2545	sequencer.c	FUNCTION_79
0x4002010	            0x84c0	                             test al, al	      2545	sequencer.c	FUNCTION_79
0x4002012	            0x7440	                            je 0x4002054	      2545	sequencer.c	FUNCTION_79
0x4002014	     0xf2984248000	       movaps xmmword [rsp + 0x80], xmm0	      2545	sequencer.c	FUNCTION_79
0x400201c	     0xf298c249000	       movaps xmmword [rsp + 0x90], xmm1	      2545	sequencer.c	FUNCTION_79
0x4002024	     0xf299424a000	       movaps xmmword [rsp + 0xa0], xmm2	      2545	sequencer.c	FUNCTION_79
0x400202c	     0xf299c24b000	       movaps xmmword [rsp + 0xb0], xmm3	      2545	sequencer.c	FUNCTION_79
0x4002034	     0xf29a424c000	       movaps xmmword [rsp + 0xc0], xmm4	      2545	sequencer.c	FUNCTION_79
0x400203c	     0xf29ac24d000	       movaps xmmword [rsp + 0xd0], xmm5	      2545	sequencer.c	FUNCTION_79
0x4002044	     0xf29b424e000	       movaps xmmword [rsp + 0xe0], xmm6	      2545	sequencer.c	FUNCTION_79
0x400204c	     0xf29bc24f000	       movaps xmmword [rsp + 0xf0], xmm7	      2545	sequencer.c	FUNCTION_79
0x4002054	    0x64488b042528	                mov rax, qword fs:[0x28]	      2545	sequencer.c	FUNCTION_79
0x400205d	      0x4889442448	             mov qword [rsp + 0x48], rax	      2545	sequencer.c	FUNCTION_79
0x4002062	            0x31c0	                            xor eax, eax	      2545	sequencer.c	FUNCTION_79
0x4002064	    0x48c704240000	                      mov qword [rsp], 0	      2547	sequencer.c	FUNCTION_79
0x400206c	      0xb900000000	                              mov ecx, 0	       175	lockfile.h	FUNCTION_106	CALL_1
0x4002071	      0xba04000000	                              mov edx, 4	       175	lockfile.h	FUNCTION_106	CALL_1
0x4002076	          0x4889de	                            mov rsi, rbx	       175	lockfile.h	FUNCTION_106	CALL_1
0x4002079	          0x4889e7	                            mov rdi, rsp	       175	lockfile.h	FUNCTION_106	CALL_1
0x400207c	      0xe800000000	                          call 0x4002081	       175	lockfile.h	FUNCTION_106	CALL_1
0x4002081	            0x89c5	                            mov ebp, eax	       175	lockfile.h	FUNCTION_106	CALL_1
0x4002083	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2550	sequencer.c	FUNCTION_79
0x400208c	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2550	sequencer.c	FUNCTION_79
0x4002095	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2550	sequencer.c	FUNCTION_79
0x400209e	            0x85c0	                           test eax, eax	      2552	sequencer.c	FUNCTION_79	IF_1
0x40020a0	     0xf889a010000	                            js 0x4002240	      2552	sequencer.c	FUNCTION_79	IF_1
0x40020a6	      0xba00000000	                              mov edx, 0	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x40020ab	          0x4889de	                            mov rsi, rbx	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x40020ae	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x40020b3	      0xe800000000	                          call 0x40020b8	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x40020b8	          0x4885c0	                           test rax, rax	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x40020bb	            0x7940	                           jns 0x40020fd	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x40020bd	      0xe800000000	                          call 0x40020c2	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x40020c2	          0x833802	                      cmp dword [rax], 2	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x40020c5	            0x7436	                            je 0x40020fd	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x40020c7	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40020cc	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40020d1	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40020d6	      0xe800000000	                          call 0x40020db	        54	gettext.h	FUNCTION_118
0x40020db	          0x4889de	                            mov rsi, rbx	      2556	sequencer.c	FUNCTION_79	IF_2	CALL_3
0x40020de	          0x4889c7	                            mov rdi, rax	      2556	sequencer.c	FUNCTION_79	IF_2	CALL_3
0x40020e1	      0xb800000000	                              mov eax, 0	      2556	sequencer.c	FUNCTION_79	IF_2	CALL_3
0x40020e6	      0xe800000000	                          call 0x40020eb	      2556	sequencer.c	FUNCTION_79	IF_2	CALL_3
0x40020eb	          0x4889e7	                            mov rdi, rsp	       304	lockfile.h	FUNCTION_115	CALL_1
0x40020ee	      0xe800000000	                          call 0x40020f3	       304	lockfile.h	FUNCTION_115	CALL_1
0x40020f3	      0xb8ffffffff	                     mov eax, 0xffffffff	      2558	sequencer.c	FUNCTION_79	IF_2
0x40020f8	      0xe948010000	                           jmp 0x4002245	      2558	sequencer.c	FUNCTION_79	IF_2
0x40020fd	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       595	strbuf.h	FUNCTION_184	IF_1
0x4002102	          0x4885c0	                           test rax, rax	       595	strbuf.h	FUNCTION_184	IF_1
0x4002105	            0x7453	                            je 0x400215a	       595	strbuf.h	FUNCTION_184	IF_1
0x4002107	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       595	strbuf.h	FUNCTION_184	IF_1
0x400210c	      0x807c02ff0a	          cmp byte [rdx + rax - 1], 0xa 	       595	strbuf.h	FUNCTION_184	IF_1
0x4002111	            0x7447	                            je 0x400215a	       595	strbuf.h	FUNCTION_184	IF_1
0x4002113	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       141	strbuf.h	FUNCTION_176
0x4002118	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_176
0x400211b	            0x7409	                            je 0x4002126	       141	strbuf.h	FUNCTION_176
0x400211d	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x4002121	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x4002124	            0x750f	                           jne 0x4002135	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x4002126	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_178	CALL_2
0x400212b	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       228	strbuf.h	FUNCTION_178	CALL_2
0x4002130	      0xe800000000	                          call 0x4002135	       228	strbuf.h	FUNCTION_178	CALL_2
0x4002135	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       229	strbuf.h	FUNCTION_178
0x400213a	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_178
0x400213e	      0x4889542418	             mov qword [rsp + 0x18], rdx	       229	strbuf.h	FUNCTION_178
0x4002143	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       229	strbuf.h	FUNCTION_178
0x4002148	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_178
0x400214c	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       230	strbuf.h	FUNCTION_178
0x4002151	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       230	strbuf.h	FUNCTION_178
0x4002156	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_178
0x400215a	    0xc74424301000	           mov dword [rsp + 0x30], 0x10 	      2561	sequencer.c	FUNCTION_79	CALL_6
0x4002162	    0xc74424343000	           mov dword [rsp + 0x34], 0x30 	      2561	sequencer.c	FUNCTION_79	CALL_6
0x400216a	    0x488d84242001	                  lea rax, [rsp + 0x120]	      2561	sequencer.c	FUNCTION_79	CALL_6
0x4002172	      0x4889442438	             mov qword [rsp + 0x38], rax	      2561	sequencer.c	FUNCTION_79	CALL_6
0x4002177	      0x488d442450	                   lea rax, [rsp + 0x50]	      2561	sequencer.c	FUNCTION_79	CALL_6
0x400217c	      0x4889442440	             mov qword [rsp + 0x40], rax	      2561	sequencer.c	FUNCTION_79	CALL_6
0x4002181	      0x488d542430	                   lea rdx, [rsp + 0x30]	      2562	sequencer.c	FUNCTION_79	CALL_7
0x4002186	          0x4c89e6	                            mov rsi, r12	      2562	sequencer.c	FUNCTION_79	CALL_7
0x4002189	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2562	sequencer.c	FUNCTION_79	CALL_7
0x400218e	      0xe800000000	                          call 0x4002193	      2562	sequencer.c	FUNCTION_79	CALL_7
0x4002193	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2565	sequencer.c	FUNCTION_79	IF_3	CALL_9
0x4002198	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      2565	sequencer.c	FUNCTION_79	IF_3	CALL_9
0x400219d	            0x89ef	                            mov edi, ebp	      2565	sequencer.c	FUNCTION_79	IF_3	CALL_9
0x400219f	      0xe800000000	                          call 0x40021a4	      2565	sequencer.c	FUNCTION_79	IF_3	CALL_9
0x40021a4	          0x4885c0	                           test rax, rax	      2565	sequencer.c	FUNCTION_79	IF_3	CALL_9
0x40021a7	            0x793d	                           jns 0x40021e6	      2565	sequencer.c	FUNCTION_79	IF_3	CALL_9
0x40021a9	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40021ae	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40021b3	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40021b8	      0xe800000000	                          call 0x40021bd	        54	gettext.h	FUNCTION_118
0x40021bd	          0x4889de	                            mov rsi, rbx	      2566	sequencer.c	FUNCTION_79	IF_3	CALL_10
0x40021c0	          0x4889c7	                            mov rdi, rax	      2566	sequencer.c	FUNCTION_79	IF_3	CALL_10
0x40021c3	      0xb800000000	                              mov eax, 0	      2566	sequencer.c	FUNCTION_79	IF_3	CALL_10
0x40021c8	      0xe800000000	                          call 0x40021cd	      2566	sequencer.c	FUNCTION_79	IF_3	CALL_10
0x40021cd	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2567	sequencer.c	FUNCTION_79	IF_3	CALL_11
0x40021d2	      0xe800000000	                          call 0x40021d7	      2567	sequencer.c	FUNCTION_79	IF_3	CALL_11
0x40021d7	          0x4889e7	                            mov rdi, rsp	       304	lockfile.h	FUNCTION_115	CALL_1
0x40021da	      0xe800000000	                          call 0x40021df	       304	lockfile.h	FUNCTION_115	CALL_1
0x40021df	      0xb8ffffffff	                     mov eax, 0xffffffff	      2569	sequencer.c	FUNCTION_79	IF_3
0x40021e4	            0xeb5f	                           jmp 0x4002245	      2569	sequencer.c	FUNCTION_79	IF_3
0x40021e6	          0x4889e7	                            mov rdi, rsp	      2571	sequencer.c	FUNCTION_79	IF_4	CALL_13
0x40021e9	      0xe800000000	                          call 0x40021ee	      2571	sequencer.c	FUNCTION_79	IF_4	CALL_13
0x40021ee	            0x85c0	                           test eax, eax	      2571	sequencer.c	FUNCTION_79	IF_4	CALL_13
0x40021f0	            0x793d	                           jns 0x400222f	      2571	sequencer.c	FUNCTION_79	IF_4	CALL_13
0x40021f2	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2572	sequencer.c	FUNCTION_79	IF_4	CALL_14
0x40021f7	      0xe800000000	                          call 0x40021fc	      2572	sequencer.c	FUNCTION_79	IF_4	CALL_14
0x40021fc	          0x4889e7	                            mov rdi, rsp	       304	lockfile.h	FUNCTION_115	CALL_1
0x40021ff	      0xe800000000	                          call 0x4002204	       304	lockfile.h	FUNCTION_115	CALL_1
0x4002204	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4002209	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400220e	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4002213	      0xe800000000	                          call 0x4002218	        54	gettext.h	FUNCTION_118
0x4002218	          0x4889de	                            mov rsi, rbx	      2574	sequencer.c	FUNCTION_79	IF_4	CALL_16
0x400221b	          0x4889c7	                            mov rdi, rax	      2574	sequencer.c	FUNCTION_79	IF_4	CALL_16
0x400221e	      0xb800000000	                              mov eax, 0	      2574	sequencer.c	FUNCTION_79	IF_4	CALL_16
0x4002223	      0xe800000000	                          call 0x4002228	      2574	sequencer.c	FUNCTION_79	IF_4	CALL_16
0x4002228	      0xb8ffffffff	                     mov eax, 0xffffffff	      2574	sequencer.c	FUNCTION_79	IF_4	CALL_16
0x400222d	            0xeb16	                           jmp 0x4002245	      2574	sequencer.c	FUNCTION_79	IF_4	CALL_16
0x400222f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2577	sequencer.c	FUNCTION_79	CALL_17
0x4002234	      0xe800000000	                          call 0x4002239	      2577	sequencer.c	FUNCTION_79	CALL_17
0x4002239	      0xb800000000	                              mov eax, 0	      2578	sequencer.c	FUNCTION_79
0x400223e	            0xeb05	                           jmp 0x4002245	      2578	sequencer.c	FUNCTION_79
0x4002240	      0xb8ffffffff	                     mov eax, 0xffffffff	      2553	sequencer.c	FUNCTION_79	IF_1
0x4002245	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      2579	sequencer.c	FUNCTION_79
0x400224a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2579	sequencer.c	FUNCTION_79
0x4002253	            0x7405	                            je 0x400225a	      2579	sequencer.c	FUNCTION_79
0x4002255	      0xe800000000	                          call 0x400225a	      2579	sequencer.c	FUNCTION_79
0x400225a	    0x4881c4000100	                          add rsp, 0x100	      2579	sequencer.c	FUNCTION_79
0x4002261	              0x5b	                                 pop rbx	      2579	sequencer.c	FUNCTION_79
0x4002262	              0x5d	                                 pop rbp	      2579	sequencer.c	FUNCTION_79
0x4002263	            0x415c	                                 pop r12	      2579	sequencer.c	FUNCTION_79
0x4002265	              0xc3	                                     ret	      2579	sequencer.c	FUNCTION_79
reflog_message	ELSE,0:IF,2:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,7:DO,0	76
0x4001e86	              0x55	                                push rbp	      2959	sequencer.c	FUNCTION_86
0x4001e87	              0x53	                                push rbx	      2959	sequencer.c	FUNCTION_86
0x4001e88	    0x4881ecd80000	                           sub rsp, 0xd8	      2959	sequencer.c	FUNCTION_86
0x4001e8f	          0x4889f5	                            mov rbp, rsi	      2959	sequencer.c	FUNCTION_86
0x4001e92	          0x4889d3	                            mov rbx, rdx	      2959	sequencer.c	FUNCTION_86
0x4001e95	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      2959	sequencer.c	FUNCTION_86
0x4001e9a	      0x4c89442440	              mov qword [rsp + 0x40], r8	      2959	sequencer.c	FUNCTION_86
0x4001e9f	      0x4c894c2448	              mov qword [rsp + 0x48], r9	      2959	sequencer.c	FUNCTION_86
0x4001ea4	            0x84c0	                             test al, al	      2959	sequencer.c	FUNCTION_86
0x4001ea6	            0x7437	                            je 0x4001edf	      2959	sequencer.c	FUNCTION_86
0x4001ea8	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	      2959	sequencer.c	FUNCTION_86
0x4001ead	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	      2959	sequencer.c	FUNCTION_86
0x4001eb2	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	      2959	sequencer.c	FUNCTION_86
0x4001eb7	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	      2959	sequencer.c	FUNCTION_86
0x4001ebf	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	      2959	sequencer.c	FUNCTION_86
0x4001ec7	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	      2959	sequencer.c	FUNCTION_86
0x4001ecf	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	      2959	sequencer.c	FUNCTION_86
0x4001ed7	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	      2959	sequencer.c	FUNCTION_86
0x4001edf	    0x64488b042528	                mov rax, qword fs:[0x28]	      2959	sequencer.c	FUNCTION_86
0x4001ee8	      0x4889442418	             mov qword [rsp + 0x18], rax	      2959	sequencer.c	FUNCTION_86
0x4001eed	            0x31c0	                            xor eax, eax	      2959	sequencer.c	FUNCTION_86
0x4001eef	    0xc70424180000	                   mov dword [rsp], 0x18	      2963	sequencer.c	FUNCTION_86	CALL_1
0x4001ef6	    0xc74424043000	               mov dword [rsp + 4], 0x30	      2963	sequencer.c	FUNCTION_86	CALL_1
0x4001efe	    0x488d8424f000	                   lea rax, [rsp + 0xf0]	      2963	sequencer.c	FUNCTION_86	CALL_1
0x4001f06	      0x4889442408	                mov qword [rsp + 8], rax	      2963	sequencer.c	FUNCTION_86	CALL_1
0x4001f0b	      0x488d442420	                   lea rax, [rsp + 0x20]	      2963	sequencer.c	FUNCTION_86	CALL_1
0x4001f10	      0x4889442410	             mov qword [rsp + 0x10], rax	      2963	sequencer.c	FUNCTION_86	CALL_1
0x4001f15	    0x48c705000000	               mov qword [0x04001f20], 0	       164	strbuf.h	FUNCTION_177
0x4001f20	    0x488b05000000	            mov rax, qword [0x04001f27] 	       165	strbuf.h	FUNCTION_177	IF_2
0x4001f27	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_177	IF_2
0x4001f2d	            0x7405	                            je 0x4001f34	       165	strbuf.h	FUNCTION_177	IF_2
0x4001f2f	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_177	IF_2
0x4001f32	            0xeb22	                           jmp 0x4001f56	       166	strbuf.h	FUNCTION_177	IF_2
0x4001f34	    0x803d00000000	                cmp byte [0x04001f3b], 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x4001f3b	            0x7419	                            je 0x4001f56	       168	strbuf.h	FUNCTION_177	CALL_2
0x4001f3d	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x4001f42	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_177	CALL_2
0x4001f47	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x4001f4c	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x4001f51	      0xe800000000	                          call 0x4001f56	       168	strbuf.h	FUNCTION_177	CALL_2
0x4001f56	      0xe859e7ffff	                    call sym.action_name	      2965	sequencer.c	FUNCTION_86	CALL_3
0x4001f5b	          0x4889c6	                            mov rsi, rax	      2965	sequencer.c	FUNCTION_86	CALL_3
0x4001f5e	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001f63	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001f6a	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001f6d	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001f6f	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001f72	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001f76	      0xbf00000000	                              mov edi, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001f7b	      0xe800000000	                          call 0x4001f80	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001f80	          0x4885ed	                           test rbp, rbp	      2966	sequencer.c	FUNCTION_86	IF_1
0x4001f83	            0x7417	                            je 0x4001f9c	      2966	sequencer.c	FUNCTION_86	IF_1
0x4001f85	          0x4889ea	                            mov rdx, rbp	      2967	sequencer.c	FUNCTION_86	CALL_4
0x4001f88	      0xbe00000000	                              mov esi, 0	      2967	sequencer.c	FUNCTION_86	CALL_4
0x4001f8d	      0xbf00000000	                              mov edi, 0	      2967	sequencer.c	FUNCTION_86	CALL_4
0x4001f92	      0xb800000000	                              mov eax, 0	      2967	sequencer.c	FUNCTION_86	CALL_4
0x4001f97	      0xe800000000	                          call 0x4001f9c	      2967	sequencer.c	FUNCTION_86	CALL_4
0x4001f9c	          0x4885db	                           test rbx, rbx	      2968	sequencer.c	FUNCTION_86	IF_2
0x4001f9f	            0x7424	                            je 0x4001fc5	      2968	sequencer.c	FUNCTION_86	IF_2
0x4001fa1	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001fa6	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001fab	      0xbf00000000	                              mov edi, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001fb0	      0xe800000000	                          call 0x4001fb5	       279	strbuf.h	FUNCTION_179	CALL_2
0x4001fb5	          0x4889e2	                            mov rdx, rsp	      2970	sequencer.c	FUNCTION_86	IF_2	CALL_6
0x4001fb8	          0x4889de	                            mov rsi, rbx	      2970	sequencer.c	FUNCTION_86	IF_2	CALL_6
0x4001fbb	      0xbf00000000	                              mov edi, 0	      2970	sequencer.c	FUNCTION_86	IF_2	CALL_6
0x4001fc0	      0xe800000000	                          call 0x4001fc5	      2970	sequencer.c	FUNCTION_86	IF_2	CALL_6
0x4001fc5	    0x488b05000000	            mov rax, qword [0x04001fcc] 	      2975	sequencer.c	FUNCTION_86
0x4001fcc	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      2975	sequencer.c	FUNCTION_86
0x4001fd1	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2975	sequencer.c	FUNCTION_86
0x4001fda	            0x7405	                            je 0x4001fe1	      2975	sequencer.c	FUNCTION_86
0x4001fdc	      0xe800000000	                          call 0x4001fe1	      2975	sequencer.c	FUNCTION_86
0x4001fe1	    0x4881c4d80000	                           add rsp, 0xd8	      2975	sequencer.c	FUNCTION_86
0x4001fe8	              0x5b	                                 pop rbx	      2975	sequencer.c	FUNCTION_86
0x4001fe9	              0x5d	                                 pop rbp	      2975	sequencer.c	FUNCTION_86
0x4001fea	              0xc3	                                     ret	      2975	sequencer.c	FUNCTION_86
sequencer_init_config	ELSE,0:IF,0:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,1:DO,0	7
0x40039ad	        0x4883ec08	                              sub rsp, 8	       187	sequencer.c	FUNCTION_2
0x40039b1	          0x4889fe	                            mov rsi, rdi	       187	sequencer.c	FUNCTION_2
0x40039b4	    0xc74738010000	               mov dword [rdi + 0x38], 1	       188	sequencer.c	FUNCTION_2
0x40039bb	      0xbf00000000	                              mov edi, 0	       189	sequencer.c	FUNCTION_2	CALL_1
0x40039c0	      0xe800000000	                          call 0x40039c5	       189	sequencer.c	FUNCTION_2	CALL_1
0x40039c5	        0x4883c408	                              add rsp, 8	       190	sequencer.c	FUNCTION_2
0x40039c9	              0xc3	                                     ret	       190	sequencer.c	FUNCTION_2
parse_insn_buffer	ELSE,2:IF,5:FOR,1:WHILE,0:SWITCH,0:functions,0:CALL,9:DO,0	363
0x4002a19	            0x4157	                                push r15	      1891	sequencer.c	FUNCTION_54
0x4002a1b	            0x4156	                                push r14	      1891	sequencer.c	FUNCTION_54
0x4002a1d	            0x4155	                                push r13	      1891	sequencer.c	FUNCTION_54
0x4002a1f	            0x4154	                                push r12	      1891	sequencer.c	FUNCTION_54
0x4002a21	              0x55	                                push rbp	      1891	sequencer.c	FUNCTION_54
0x4002a22	              0x53	                                push rbx	      1891	sequencer.c	FUNCTION_54
0x4002a23	        0x4883ec58	                           sub rsp, 0x58	      1891	sequencer.c	FUNCTION_54
0x4002a27	          0x4989fe	                            mov r14, rdi	      1891	sequencer.c	FUNCTION_54
0x4002a2a	      0x4889742420	             mov qword [rsp + 0x20], rsi	      1891	sequencer.c	FUNCTION_54
0x4002a2f	    0x64488b042528	                mov rax, qword fs:[0x28]	      1891	sequencer.c	FUNCTION_54
0x4002a38	      0x4889442448	             mov qword [rsp + 0x48], rax	      1891	sequencer.c	FUNCTION_54
0x4002a3d	            0x31c0	                            xor eax, eax	      1891	sequencer.c	FUNCTION_54
0x4002a3f	      0xe8f5d8ffff	               call sym.rebase_path_done	      1894	sequencer.c	FUNCTION_54	CALL_2
0x4002a44	          0x4889c7	                            mov rdi, rax	      1894	sequencer.c	FUNCTION_54	CALL_2
0x4002a47	      0xe800000000	                          call 0x4002a4c	      1894	sequencer.c	FUNCTION_54	CALL_2
0x4002a4c	        0x8944240c	              mov dword [rsp + 0xc], eax	      1894	sequencer.c	FUNCTION_54	CALL_2
0x4002a50	        0x41803e00	                       cmp byte [r14], 0	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4002a54	     0xf841f040000	                            je 0x4002e79	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4002a5a	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4002a62	    0xc74424280100	               mov dword [rsp + 0x28], 1	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4002a6a	            0xeb03	                           jmp 0x4002a6f	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4002a6c	          0x4d89fe	                            mov r14, r15	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4002a6f	      0xbe0a000000	                            mov esi, 0xa	      1897	sequencer.c	FUNCTION_54	FOR_1
0x4002a74	          0x4c89f7	                            mov rdi, r14	      1897	sequencer.c	FUNCTION_54	FOR_1
0x4002a77	      0xe800000000	                          call 0x4002a7c	      1897	sequencer.c	FUNCTION_54	FOR_1
0x4002a7c	          0x4989c4	                            mov r12, rax	      1897	sequencer.c	FUNCTION_54	FOR_1
0x4002a7f	          0x803801	                       cmp byte [rax], 1	      1899	sequencer.c	FUNCTION_54	FOR_1
0x4002a82	          0x4989c7	                            mov r15, rax	      1899	sequencer.c	FUNCTION_54	FOR_1
0x4002a85	        0x4983dfff	             sbb r15, 0xffffffffffffffff	      1899	sequencer.c	FUNCTION_54	FOR_1
0x4002a89	          0x4c39f0	                            cmp rax, r14	      1901	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x4002a8c	            0x740f	                            je 0x4002a9d	      1901	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x4002a8e	        0x8078ff0d	                 cmp byte [rax - 1], 0xd	      1902	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x4002a92	           0xf94c0	                                 sete al	      1902	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x4002a95	           0xfb6c0	                           movzx eax, al	      1902	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x4002a98	          0x4929c4	                            sub r12, rax	      1902	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x4002a9b	            0xeb03	                           jmp 0x4002aa0	      1902	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x4002a9d	          0x4d89f4	                            mov r12, r14	      1897	sequencer.c	FUNCTION_54	FOR_1
0x4002aa0	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      1904	sequencer.c	FUNCTION_54	FOR_1	CALL_3
0x4002aa5	          0x4889df	                            mov rdi, rbx	      1904	sequencer.c	FUNCTION_54	FOR_1	CALL_3
0x4002aa8	      0xe8f3dfffff	                call sym.append_new_todo	      1904	sequencer.c	FUNCTION_54	FOR_1	CALL_3
0x4002aad	          0x4989c5	                            mov r13, rax	      1904	sequencer.c	FUNCTION_54	FOR_1	CALL_3
0x4002ab0	      0x4c89742410	             mov qword [rsp + 0x10], r14	      1905	sequencer.c	FUNCTION_54	FOR_1
0x4002ab5	          0x4c89f0	                            mov rax, r14	      1905	sequencer.c	FUNCTION_54	FOR_1
0x4002ab8	        0x482b4310	             sub rax, qword [rbx + 0x10]	      1905	sequencer.c	FUNCTION_54	FOR_1
0x4002abc	        0x49894528	             mov qword [r13 + 0x28], rax	      1905	sequencer.c	FUNCTION_54	FOR_1
0x4002ac0	    0x41c745100000	               mov dword [r13 + 0x10], 0	      1808	sequencer.c	FUNCTION_53
0x4002ac8	        0x410fb60e	                   movzx ecx, byte [r14]	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002acc	           0xfbec1	                           movsx eax, cl	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002acf	          0x83f809	                              cmp eax, 9	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ad2	            0x7405	                            je 0x4002ad9	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ad4	          0x83f820	                           cmp eax, 0x20	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ad7	            0x751d	                           jne 0x4002af6	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ad9	        0x498d4601	                      lea rax, [r14 + 1]	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002add	          0x4889c6	                            mov rsi, rax	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ae0	           0xfb608	                   movzx ecx, byte [rax]	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ae3	           0xfbed1	                           movsx edx, cl	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ae6	        0x4883c001	                              add rax, 1	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002aea	          0x83fa20	                           cmp edx, 0x20	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002aed	            0x74ee	                            je 0x4002add	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002aef	          0x83fa09	                              cmp edx, 9	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002af2	            0x74e9	                            je 0x4002add	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002af4	            0xeb03	                           jmp 0x4002af9	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002af6	          0x4c89f6	                            mov rsi, r14	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002af9	          0x80f90d	                             cmp cl, 0xd	      1813	sequencer.c	FUNCTION_53	IF_1
0x4002afc	            0x740d	                            je 0x4002b0b	      1813	sequencer.c	FUNCTION_53	IF_1
0x4002afe	          0x4939f4	                            cmp r12, rsi	      1813	sequencer.c	FUNCTION_53	IF_1
0x4002b01	            0x7408	                            je 0x4002b0b	      1813	sequencer.c	FUNCTION_53	IF_1
0x4002b03	    0x380d00000000	               cmp byte [0x04002b09], cl	      1813	sequencer.c	FUNCTION_53	IF_1
0x4002b09	            0x7520	                           jne 0x4002b2b	      1813	sequencer.c	FUNCTION_53	IF_1
0x4002b0b	    0x41c745000c00	                    mov dword [r13], 0xc	      1814	sequencer.c	FUNCTION_53	IF_1
0x4002b13	    0x49c745080000	                  mov qword [r13 + 8], 0	      1815	sequencer.c	FUNCTION_53	IF_1
0x4002b1b	        0x49897518	             mov qword [r13 + 0x18], rsi	      1816	sequencer.c	FUNCTION_53	IF_1
0x4002b1f	          0x4929f4	                            sub r12, rsi	      1817	sequencer.c	FUNCTION_53	IF_1
0x4002b22	        0x45896520	            mov dword [r13 + 0x20], r12d	      1817	sequencer.c	FUNCTION_53	IF_1
0x4002b26	      0xe9e6020000	                           jmp 0x4002e11	      1817	sequencer.c	FUNCTION_53	IF_1
0x4002b2b	      0xb900000000	                              mov ecx, 0	      1817	sequencer.c	FUNCTION_53	IF_1
0x4002b30	    0x41b900000000	                              mov r9d, 0	      1817	sequencer.c	FUNCTION_53	IF_1
0x4002b36	      0xbf00000000	                              mov edi, 0	      1813	sequencer.c	FUNCTION_53	IF_1
0x4002b3b	          0x4989c8	                             mov r8, rcx	      1813	sequencer.c	FUNCTION_53	IF_1
0x4002b3e	          0x488b01	                    mov rax, qword [rcx]	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_1
0x4002b41	          0x4889f3	                            mov rbx, rsi	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_1
0x4002b44	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x4002b47	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x4002b49	     0xf8448030000	                            je 0x4002e97	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x4002b4f	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4002b53	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4002b57	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4002b5a	            0x74e8	                            je 0x4002b44	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4002b5c	      0xe93f030000	                           jmp 0x4002ea0	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4002b61	      0x410fb640f8	                movzx eax, byte [r8 - 8]	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x4002b66	            0x3806	                      cmp byte [rsi], al	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x4002b68	            0x750a	                           jne 0x4002b74	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x4002b6a	        0x488d5e01	                      lea rbx, [rsi + 1]	      1826	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x4002b6e	        0x41897d00	                    mov dword [r13], edi	      1827	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x4002b72	            0xeb11	                           jmp 0x4002b85	      1827	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x4002b74	          0x83c701	                              add edi, 1	      1821	sequencer.c	FUNCTION_53	FOR_1
0x4002b77	        0x4883c110	                           add rcx, 0x10	      1821	sequencer.c	FUNCTION_53	FOR_1
0x4002b7b	          0x4c39c9	                             cmp rcx, r9	      1821	sequencer.c	FUNCTION_53	FOR_1
0x4002b7e	            0x75bb	                           jne 0x4002b3b	      1821	sequencer.c	FUNCTION_53	FOR_1
0x4002b80	      0xe940020000	                           jmp 0x4002dc5	      1821	sequencer.c	FUNCTION_53	FOR_1
0x4002b85	          0x83ff0b	                            cmp edi, 0xb	      1830	sequencer.c	FUNCTION_53	IF_4
0x4002b88	     0xf8f37020000	                            jg 0x4002dc5	      1830	sequencer.c	FUNCTION_53	IF_4
0x4002b8e	           0xfbe03	                   movsx eax, byte [rbx]	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002b91	          0x83f809	                              cmp eax, 9	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002b94	            0x7409	                            je 0x4002b9f	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002b96	          0x83f820	                           cmp eax, 0x20	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002b99	     0xf8510030000	                           jne 0x4002eaf	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002b9f	      0xb800000000	                              mov eax, 0	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ba4	        0x4883c001	                              add rax, 1	      1040	string2.h	FUNCTION_237	WHILE_1
0x4002ba8	         0xfbe1403	             movsx edx, byte [rbx + rax]	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002bac	          0x83fa20	                           cmp edx, 0x20	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002baf	            0x74f3	                            je 0x4002ba4	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002bb1	          0x83fa09	                              cmp edx, 9	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002bb4	            0x74ee	                            je 0x4002ba4	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002bb6	          0x4863d0	                         movsxd rdx, eax	      1835	sequencer.c	FUNCTION_53
0x4002bb9	          0x4801d3	                            add rbx, rdx	      1835	sequencer.c	FUNCTION_53
0x4002bbc	        0x418b7d00	                    mov edi, dword [r13]	      1837	sequencer.c	FUNCTION_53	IF_5
0x4002bc0	          0x83ff0a	                            cmp edi, 0xa	      1837	sequencer.c	FUNCTION_53	IF_5
0x4002bc3	            0x7557	                           jne 0x4002c1c	      1837	sequencer.c	FUNCTION_53	IF_5
0x4002bc5	          0x4939dc	                            cmp r12, rbx	      1838	sequencer.c	FUNCTION_53	IF_5	IF_6
0x4002bc8	            0x7439	                            je 0x4002c03	      1838	sequencer.c	FUNCTION_53	IF_5	IF_6
0x4002bca	      0xbf0a000000	                            mov edi, 0xa	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_2
0x4002bcf	      0xe82cdbffff	              call sym.command_to_string	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_2
0x4002bd4	          0x4889c5	                            mov rbp, rax	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_2
0x4002bd7	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4002bdc	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4002be1	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4002be6	      0xe800000000	                          call 0x4002beb	        54	gettext.h	FUNCTION_118
0x4002beb	          0x4889da	                            mov rdx, rbx	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_2
0x4002bee	          0x4889ee	                            mov rsi, rbp	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_2
0x4002bf1	          0x4889c7	                            mov rdi, rax	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_2
0x4002bf4	      0xb800000000	                              mov eax, 0	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_2
0x4002bf9	      0xe800000000	                          call 0x4002bfe	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_2
0x4002bfe	      0xe9c2010000	                           jmp 0x4002dc5	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_2
0x4002c03	    0x49c745080000	                  mov qword [r13 + 8], 0	      1841	sequencer.c	FUNCTION_53	IF_5
0x4002c0b	        0x4d896518	             mov qword [r13 + 0x18], r12	      1842	sequencer.c	FUNCTION_53	IF_5
0x4002c0f	    0x41c745200000	               mov dword [r13 + 0x20], 0	      1843	sequencer.c	FUNCTION_53	IF_5
0x4002c17	      0xe9f5010000	                           jmp 0x4002e11	      1843	sequencer.c	FUNCTION_53	IF_5
0x4002c1c	            0x85c0	                           test eax, eax	      1847	sequencer.c	FUNCTION_53	IF_7
0x4002c1e	            0x7531	                           jne 0x4002c51	      1847	sequencer.c	FUNCTION_53	IF_7
0x4002c20	      0xe8dbdaffff	              call sym.command_to_string	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_4
0x4002c25	          0x4889c3	                            mov rbx, rax	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_4
0x4002c28	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4002c2d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4002c32	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4002c37	      0xe800000000	                          call 0x4002c3c	        54	gettext.h	FUNCTION_118
0x4002c3c	          0x4889de	                            mov rsi, rbx	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_4
0x4002c3f	          0x4889c7	                            mov rdi, rax	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_4
0x4002c42	      0xb800000000	                              mov eax, 0	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_4
0x4002c47	      0xe800000000	                          call 0x4002c4c	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_4
0x4002c4c	      0xe974010000	                           jmp 0x4002dc5	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_4
0x4002c51	          0x8d47fa	                      lea eax, [rdi - 6]	      1851	sequencer.c	FUNCTION_53	IF_8
0x4002c54	          0x83f802	                              cmp eax, 2	      1851	sequencer.c	FUNCTION_53	IF_8
0x4002c57	            0x7718	                            ja 0x4002c71	      1851	sequencer.c	FUNCTION_53	IF_8
0x4002c59	    0x49c745080000	                  mov qword [r13 + 8], 0	      1853	sequencer.c	FUNCTION_53	IF_8
0x4002c61	        0x49895d18	             mov qword [r13 + 0x18], rbx	      1854	sequencer.c	FUNCTION_53	IF_8
0x4002c65	          0x4929dc	                            sub r12, rbx	      1855	sequencer.c	FUNCTION_53	IF_8
0x4002c68	        0x45896520	            mov dword [r13 + 0x20], r12d	      1855	sequencer.c	FUNCTION_53	IF_8
0x4002c6c	      0xe9a0010000	                           jmp 0x4002e11	      1855	sequencer.c	FUNCTION_53	IF_8
0x4002c71	          0x83ff09	                              cmp edi, 9	      1859	sequencer.c	FUNCTION_53	IF_9
0x4002c74	     0xf8583000000	                           jne 0x4002cfd	      1859	sequencer.c	FUNCTION_53	IF_9
0x4002c7a	          0x4889d8	                            mov rax, rbx	      1859	sequencer.c	FUNCTION_53	IF_9
0x4002c7d	      0xba00000000	                              mov edx, 0	      1859	sequencer.c	FUNCTION_53	IF_9
0x4002c82	           0xfb60a	                   movzx ecx, byte [rdx]	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x4002c85	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x4002c87	     0xf8434020000	                            je 0x4002ec1	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x4002c8d	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4002c91	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4002c95	          0x3a48ff	                  cmp cl, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4002c98	            0x74e8	                            je 0x4002c82	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4002c9a	          0x4889d8	                            mov rax, rbx	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4002c9d	      0xba00000000	                              mov edx, 0	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4002ca2	            0xeb16	                           jmp 0x4002cba	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4002ca4	          0x4889c3	                            mov rbx, rax	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ca7	           0xfbe10	                   movsx edx, byte [rax]	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002caa	        0x4883c001	                              add rax, 1	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002cae	          0x83fa20	                           cmp edx, 0x20	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002cb1	            0x74f1	                            je 0x4002ca4	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002cb3	          0x83fa09	                              cmp edx, 9	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002cb6	            0x74ec	                            je 0x4002ca4	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002cb8	            0xeb43	                           jmp 0x4002cfd	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002cba	           0xfb60a	                   movzx ecx, byte [rdx]	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x4002cbd	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x4002cbf	     0xf8416020000	                            je 0x4002edb	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x4002cc5	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4002cc9	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4002ccd	          0x3a48ff	                  cmp cl, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4002cd0	            0x74e8	                            je 0x4002cba	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4002cd2	      0xe91e020000	                           jmp 0x4002ef5	       488	git-compat-util.h	FUNCTION_126	DO_1
0x4002cd7	          0x4889c3	                            mov rbx, rax	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002cda	           0xfbe10	                   movsx edx, byte [rax]	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002cdd	        0x4883c001	                              add rax, 1	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ce1	          0x83fa09	                              cmp edx, 9	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ce4	            0x74f1	                            je 0x4002cd7	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ce6	          0x83fa20	                           cmp edx, 0x20	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ce9	            0x74ec	                            je 0x4002cd7	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ceb	            0xeb03	                           jmp 0x4002cf0	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ced	          0x4889c3	                            mov rbx, rax	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002cf0	    0x41c745100100	               mov dword [r13 + 0x10], 1	      1864	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11
0x4002cf8	            0xeb03	                           jmp 0x4002cfd	      1864	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11
0x4002cfa	          0x4889c3	                            mov rbx, rax	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002cfd	           0xfb62b	                   movzx ebp, byte [rbx]	       974	string2.h	FUNCTION_235	WHILE_1
0x4002d00	          0x4084ed	                           test bpl, bpl	       974	string2.h	FUNCTION_235	WHILE_1
0x4002d03	     0xf840c020000	                            je 0x4002f15	       974	string2.h	FUNCTION_235	WHILE_1
0x4002d09	          0x8d45f7	                      lea eax, [rbp - 9]	       975	string2.h	FUNCTION_235	WHILE_1
0x4002d0c	            0x3c01	                               cmp al, 1	       975	string2.h	FUNCTION_235	WHILE_1
0x4002d0e	            0x7632	                           jbe 0x4002d42	       975	string2.h	FUNCTION_235	WHILE_1
0x4002d10	        0x4080fd20	                           cmp bpl, 0x20	       975	string2.h	FUNCTION_235	WHILE_1
0x4002d14	            0x742c	                            je 0x4002d42	       975	string2.h	FUNCTION_235	WHILE_1
0x4002d16	        0x488d4301	                      lea rax, [rbx + 1]	       975	string2.h	FUNCTION_235	WHILE_1
0x4002d1a	          0x4889c1	                            mov rcx, rax	       974	string2.h	FUNCTION_235	WHILE_1
0x4002d1d	           0xfb628	                   movzx ebp, byte [rax]	       974	string2.h	FUNCTION_235	WHILE_1
0x4002d20	          0x4084ed	                           test bpl, bpl	       974	string2.h	FUNCTION_235	WHILE_1
0x4002d23	     0xf8409020000	                            je 0x4002f32	       974	string2.h	FUNCTION_235	WHILE_1
0x4002d29	        0x4883c001	                              add rax, 1	       974	string2.h	FUNCTION_235	WHILE_1
0x4002d2d	          0x8d55f7	                      lea edx, [rbp - 9]	       975	string2.h	FUNCTION_235	WHILE_1
0x4002d30	          0x80fa01	                               cmp dl, 1	       975	string2.h	FUNCTION_235	WHILE_1
0x4002d33	            0x7614	                           jbe 0x4002d49	       975	string2.h	FUNCTION_235	WHILE_1
0x4002d35	        0x4080fd20	                           cmp bpl, 0x20	       975	string2.h	FUNCTION_235	WHILE_1
0x4002d39	            0x75df	                           jne 0x4002d1a	       975	string2.h	FUNCTION_235	WHILE_1
0x4002d3b	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       975	string2.h	FUNCTION_235	WHILE_1
0x4002d40	            0xeb0c	                           jmp 0x4002d4e	       975	string2.h	FUNCTION_235	WHILE_1
0x4002d42	      0x48895c2418	             mov qword [rsp + 0x18], rbx	       974	string2.h	FUNCTION_235	WHILE_1
0x4002d47	            0xeb05	                           jmp 0x4002d4e	       974	string2.h	FUNCTION_235	WHILE_1
0x4002d49	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       974	string2.h	FUNCTION_235	WHILE_1
0x4002d4e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1876	sequencer.c	FUNCTION_53
0x4002d53	          0xc60000	                       mov byte [rax], 0	      1876	sequencer.c	FUNCTION_53
0x4002d56	      0x488d742430	                   lea rsi, [rsp + 0x30]	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4002d5b	          0x4889df	                            mov rdi, rbx	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4002d5e	      0xe800000000	                          call 0x4002d63	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4002d63	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1878	sequencer.c	FUNCTION_53
0x4002d68	          0x40882f	                     mov byte [rdi], bpl	      1878	sequencer.c	FUNCTION_53
0x4002d6b	        0x400fbeed	                          movsx ebp, bpl	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002d6f	          0x83fd09	                              cmp ebp, 9	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002d72	            0x7405	                            je 0x4002d79	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002d74	          0x83fd20	                           cmp ebp, 0x20	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002d77	            0x7522	                           jne 0x4002d9b	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002d79	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002d7e	        0x4883c201	                              add rdx, 1	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002d82	          0x4889d6	                            mov rsi, rdx	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002d85	           0xfbe0a	                   movsx ecx, byte [rdx]	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002d88	        0x4883c201	                              add rdx, 1	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002d8c	          0x83f909	                              cmp ecx, 9	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002d8f	            0x74f1	                            je 0x4002d82	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002d91	          0x83f920	                           cmp ecx, 0x20	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002d94	            0x74ec	                            je 0x4002d82	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002d96	      0x4889742418	             mov qword [rsp + 0x18], rsi	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002d9b	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1880	sequencer.c	FUNCTION_53
0x4002da0	        0x49897d18	             mov qword [r13 + 0x18], rdi	      1880	sequencer.c	FUNCTION_53
0x4002da4	          0x4c89e2	                            mov rdx, r12	      1881	sequencer.c	FUNCTION_53
0x4002da7	          0x4829fa	                            sub rdx, rdi	      1881	sequencer.c	FUNCTION_53
0x4002daa	        0x41895520	             mov dword [r13 + 0x20], edx	      1881	sequencer.c	FUNCTION_53
0x4002dae	            0x85c0	                           test eax, eax	      1883	sequencer.c	FUNCTION_53	IF_12
0x4002db0	            0x7813	                            js 0x4002dc5	      1883	sequencer.c	FUNCTION_53	IF_12
0x4002db2	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1886	sequencer.c	FUNCTION_53	CALL_9
0x4002db7	      0xe800000000	                          call 0x4002dbc	      1886	sequencer.c	FUNCTION_53	CALL_9
0x4002dbc	        0x49894508	                mov qword [r13 + 8], rax	      1886	sequencer.c	FUNCTION_53	CALL_9
0x4002dc0	          0x4885c0	                           test rax, rax	      1906	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_4
0x4002dc3	            0x754c	                           jne 0x4002e11	      1906	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_4
0x4002dc5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4002dca	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4002dcf	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4002dd4	      0xe800000000	                          call 0x4002dd9	        54	gettext.h	FUNCTION_118
0x4002dd9	          0x4c89e2	                            mov rdx, r12	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4002ddc	      0x482b542410	             sub rdx, qword [rsp + 0x10]	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4002de1	          0x4c89f1	                            mov rcx, r14	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4002de4	        0x8b742428	            mov esi, dword [rsp + 0x28] 	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4002de8	          0x4889c7	                            mov rdi, rax	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4002deb	      0xb800000000	                              mov eax, 0	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4002df0	      0xe800000000	                          call 0x4002df5	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4002df5	    0x41c745000a00	                    mov dword [r13], 0xa	      1909	sequencer.c	FUNCTION_54	FOR_1	IF_2
0x4002dfd	    0xc744242cffff	     mov dword [rsp + 0x2c], 0xffffffff 	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4002e05	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      1912	sequencer.c	FUNCTION_54	FOR_1	IF_3
0x4002e0a	            0x7558	                           jne 0x4002e64	      1912	sequencer.c	FUNCTION_54	FOR_1	IF_3
0x4002e0c	      0xe942010000	                           jmp 0x4002f53	      1912	sequencer.c	FUNCTION_54	FOR_1	IF_3
0x4002e11	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      1912	sequencer.c	FUNCTION_54	FOR_1	IF_3
0x4002e16	            0x754c	                           jne 0x4002e64	      1912	sequencer.c	FUNCTION_54	FOR_1	IF_3
0x4002e18	        0x418b7d00	                    mov edi, dword [r13]	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_6
0x4002e1c	          0x8d47fc	                      lea eax, [rdi - 4]	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_6
0x4002e1f	          0x83f801	                              cmp eax, 1	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_6
0x4002e22	            0x7733	                            ja 0x4002e57	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_6
0x4002e24	      0xe8d7d8ffff	              call sym.command_to_string	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x4002e29	          0x4889c3	                            mov rbx, rax	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x4002e2c	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4002e31	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4002e36	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4002e3b	      0xe800000000	                          call 0x4002e40	        54	gettext.h	FUNCTION_118
0x4002e40	          0x4889de	                            mov rsi, rbx	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x4002e43	          0x4889c7	                            mov rdi, rax	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x4002e46	      0xb800000000	                              mov eax, 0	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x4002e4b	      0xe800000000	                          call 0x4002e50	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x4002e50	      0xb8ffffffff	                     mov eax, 0xffffffff	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x4002e55	            0xeb27	                           jmp 0x4002e7e	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x4002e57	          0x83ff09	                              cmp edi, 9	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x4002e5a	           0xf96c0	                                setbe al	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x4002e5d	           0xfb6c0	                           movzx eax, al	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x4002e60	        0x8944240c	              mov dword [rsp + 0xc], eax	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x4002e64	      0x8344242801	               add dword [rsp + 0x28], 1	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4002e69	        0x41803f00	                       cmp byte [r15], 0	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4002e6d	     0xf85f9fbffff	                           jne 0x4002a6c	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4002e73	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4002e77	            0xeb05	                           jmp 0x4002e7e	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4002e79	      0xb800000000	                              mov eax, 0	      1894	sequencer.c	FUNCTION_54	CALL_2
0x4002e7e	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      1922	sequencer.c	FUNCTION_54
0x4002e83	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1922	sequencer.c	FUNCTION_54
0x4002e8c	     0xf84d7000000	                            je 0x4002f69	      1922	sequencer.c	FUNCTION_54
0x4002e92	      0xe9cd000000	                           jmp 0x4002f64	      1922	sequencer.c	FUNCTION_54
0x4002e97	        0x41897d00	                    mov dword [r13], edi	      1823	sequencer.c	FUNCTION_53	FOR_1	IF_2
0x4002e9b	      0xe9e5fcffff	                           jmp 0x4002b85	      1823	sequencer.c	FUNCTION_53	FOR_1	IF_2
0x4002ea0	        0x807e0120	                cmp byte [rsi + 1], 0x20	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x4002ea4	     0xf85cafcffff	                           jne 0x4002b74	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x4002eaa	      0xe9b2fcffff	                           jmp 0x4002b61	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x4002eaf	        0x418b7d00	                    mov edi, dword [r13]	      1837	sequencer.c	FUNCTION_53	IF_5
0x4002eb3	          0x83ff0a	                            cmp edi, 0xa	      1837	sequencer.c	FUNCTION_53	IF_5
0x4002eb6	     0xf8409fdffff	                            je 0x4002bc5	      1837	sequencer.c	FUNCTION_53	IF_5
0x4002ebc	      0xe95ffdffff	                           jmp 0x4002c20	      1837	sequencer.c	FUNCTION_53	IF_5
0x4002ec1	           0xfbe10	                   movsx edx, byte [rax]	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ec4	          0x83fa09	                              cmp edx, 9	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ec7	            0x7409	                            je 0x4002ed2	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ec9	          0x83fa20	                           cmp edx, 0x20	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ecc	     0xf8528feffff	                           jne 0x4002cfa	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ed2	        0x4883c001	                              add rax, 1	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ed6	      0xe9c9fdffff	                           jmp 0x4002ca4	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002edb	           0xfbe10	                   movsx edx, byte [rax]	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ede	          0x83fa09	                              cmp edx, 9	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ee1	            0x7409	                            je 0x4002eec	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ee3	          0x83fa20	                           cmp edx, 0x20	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ee6	     0xf8501feffff	                           jne 0x4002ced	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002eec	        0x4883c001	                              add rax, 1	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ef0	      0xe9e2fdffff	                           jmp 0x4002cd7	      1039	string2.h	FUNCTION_237	WHILE_1
0x4002ef5	    0x41c745100100	               mov dword [r13 + 0x10], 1	      1866	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4002efd	    0x49c745080000	                  mov qword [r13 + 8], 0	      1867	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4002f05	        0x49895d18	             mov qword [r13 + 0x18], rbx	      1868	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4002f09	          0x4929dc	                            sub r12, rbx	      1869	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4002f0c	        0x45896520	            mov dword [r13 + 0x20], r12d	      1869	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4002f10	      0xe9fcfeffff	                           jmp 0x4002e11	      1869	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4002f15	          0xc60300	                       mov byte [rbx], 0	      1876	sequencer.c	FUNCTION_53
0x4002f18	      0x488d742430	                   lea rsi, [rsp + 0x30]	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4002f1d	          0x4889df	                            mov rdi, rbx	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4002f20	      0xe800000000	                          call 0x4002f25	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4002f25	          0xc60300	                       mov byte [rbx], 0	      1878	sequencer.c	FUNCTION_53
0x4002f28	      0x48895c2418	             mov qword [rsp + 0x18], rbx	       974	string2.h	FUNCTION_235	WHILE_1
0x4002f2d	      0xe969feffff	                           jmp 0x4002d9b	       974	string2.h	FUNCTION_235	WHILE_1
0x4002f32	          0x4889c5	                            mov rbp, rax	       974	string2.h	FUNCTION_235	WHILE_1
0x4002f35	      0x4889442418	             mov qword [rsp + 0x18], rax	       974	string2.h	FUNCTION_235	WHILE_1
0x4002f3a	          0xc60000	                       mov byte [rax], 0	      1876	sequencer.c	FUNCTION_53
0x4002f3d	      0x488d742430	                   lea rsi, [rsp + 0x30]	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4002f42	          0x4889df	                            mov rdi, rbx	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4002f45	      0xe800000000	                          call 0x4002f4a	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4002f4a	        0xc6450000	                       mov byte [rbp], 0	      1878	sequencer.c	FUNCTION_53
0x4002f4e	      0xe948feffff	                           jmp 0x4002d9b	      1878	sequencer.c	FUNCTION_53
0x4002f53	        0x418b7d00	                    mov edi, dword [r13]	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_6
0x4002f57	    0xc744242cffff	     mov dword [rsp + 0x2c], 0xffffffff 	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4002f5f	      0xe9f3feffff	                           jmp 0x4002e57	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4002f64	      0xe800000000	                          call 0x4002f69	      1922	sequencer.c	FUNCTION_54
0x4002f69	        0x4883c458	                           add rsp, 0x58	      1922	sequencer.c	FUNCTION_54
0x4002f6d	              0x5b	                                 pop rbx	      1922	sequencer.c	FUNCTION_54
0x4002f6e	              0x5d	                                 pop rbp	      1922	sequencer.c	FUNCTION_54
0x4002f6f	            0x415c	                                 pop r12	      1922	sequencer.c	FUNCTION_54
0x4002f71	            0x415d	                                 pop r13	      1922	sequencer.c	FUNCTION_54
0x4002f73	            0x415e	                                 pop r14	      1922	sequencer.c	FUNCTION_54
0x4002f75	            0x415f	                                 pop r15	      1922	sequencer.c	FUNCTION_54
0x4002f77	              0xc3	                                     ret	      1922	sequencer.c	FUNCTION_54
commit_post_rewrite	ELSE,0:IF,1:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,4:DO,0	80
0x400421c	            0x4154	                                push r12	       914	sequencer.c	FUNCTION_32
0x400421e	              0x55	                                push rbp	       914	sequencer.c	FUNCTION_32
0x400421f	              0x53	                                push rbx	       914	sequencer.c	FUNCTION_32
0x4004220	    0x4881eca00000	                           sub rsp, 0xa0	       914	sequencer.c	FUNCTION_32
0x4004227	          0x4889fd	                            mov rbp, rdi	       914	sequencer.c	FUNCTION_32
0x400422a	          0x4989f4	                            mov r12, rsi	       914	sequencer.c	FUNCTION_32
0x400422d	    0x64488b042528	                mov rax, qword fs:[0x28]	       914	sequencer.c	FUNCTION_32
0x4004236	    0x488984249800	             mov qword [rsp + 0x98], rax	       914	sequencer.c	FUNCTION_32
0x400423e	            0x31c0	                            xor eax, eax	       914	sequencer.c	FUNCTION_32
0x4004240	      0xbf00000000	                              mov edi, 0	       917	sequencer.c	FUNCTION_32	CALL_1
0x4004245	      0xe800000000	                          call 0x400424a	       917	sequencer.c	FUNCTION_32	CALL_1
0x400424a	          0x4885c0	                           test rax, rax	       918	sequencer.c	FUNCTION_32	IF_1
0x400424d	            0x741f	                            je 0x400426e	       918	sequencer.c	FUNCTION_32	IF_1
0x400424f	          0x4889c3	                            mov rbx, rax	       918	sequencer.c	FUNCTION_32	IF_1
0x4004252	        0x488d7504	                      lea rsi, [rbp + 4]	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x4004256	          0x4c89e2	                            mov rdx, r12	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x4004259	          0x4889c7	                            mov rdi, rax	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x400425c	      0xe800000000	                          call 0x4004261	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x4004261	      0xbe00000000	                              mov esi, 0	       921	sequencer.c	FUNCTION_32	IF_1	CALL_3
0x4004266	          0x4889df	                            mov rdi, rbx	       921	sequencer.c	FUNCTION_32	IF_1	CALL_3
0x4004269	      0xe800000000	                          call 0x400426e	       921	sequencer.c	FUNCTION_32	IF_1	CALL_3
0x400426e	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       884	sequencer.c	FUNCTION_31
0x4004273	      0xb90c000000	                            mov ecx, 0xc	       884	sequencer.c	FUNCTION_31
0x4004278	      0xb800000000	                              mov eax, 0	       884	sequencer.c	FUNCTION_31
0x400427d	          0xf348ab	              rep stosq qword [rdi], rax	       884	sequencer.c	FUNCTION_31
0x4004280	    0x48c744242800	               mov qword [rsp + 0x28], 0	       884	sequencer.c	FUNCTION_31
0x4004289	    0x48c744243800	               mov qword [rsp + 0x38], 0	       884	sequencer.c	FUNCTION_31
0x4004292	    0x48c704240000	                      mov qword [rsp], 0	       887	sequencer.c	FUNCTION_31
0x400429a	    0x48c744240800	                  mov qword [rsp + 8], 0	       887	sequencer.c	FUNCTION_31
0x40042a3	    0x48c744241000	               mov qword [rsp + 0x10], 0	       887	sequencer.c	FUNCTION_31
0x40042ac	      0xbf00000000	                              mov edi, 0	       889	sequencer.c	FUNCTION_31	CALL_1
0x40042b1	      0xe800000000	                          call 0x40042b6	       889	sequencer.c	FUNCTION_31	CALL_1
0x40042b6	    0x488984248000	             mov qword [rsp + 0x80], rax	       889	sequencer.c	FUNCTION_31	CALL_1
0x40042be	          0x4885c0	                           test rax, rax	       890	sequencer.c	FUNCTION_31	IF_1
0x40042c1	     0xf84b3000000	                            je 0x400437a	       890	sequencer.c	FUNCTION_31	IF_1
0x40042c7	    0x48c784248800	               mov qword [rsp + 0x88], 0	       893	sequencer.c	FUNCTION_31
0x40042d3	    0x48c784249000	               mov qword [rsp + 0x90], 0	       894	sequencer.c	FUNCTION_31
0x40042df	    0x488d84248000	                   lea rax, [rsp + 0x80]	       896	sequencer.c	FUNCTION_31
0x40042e7	      0x4889442420	             mov qword [rsp + 0x20], rax	       896	sequencer.c	FUNCTION_31
0x40042ec	    0xc744244cffff	     mov dword [rsp + 0x4c], 0xffffffff 	       897	sequencer.c	FUNCTION_31
0x40042f4	      0x804c246820	              or byte [rsp + 0x68], 0x20	       898	sequencer.c	FUNCTION_31
0x40042f9	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       900	sequencer.c	FUNCTION_31	CALL_2
0x40042fe	      0xe800000000	                          call 0x4004303	       900	sequencer.c	FUNCTION_31	CALL_2
0x4004303	            0x85c0	                           test eax, eax	       901	sequencer.c	FUNCTION_31	IF_2
0x4004305	            0x7573	                           jne 0x400437a	       901	sequencer.c	FUNCTION_31	IF_2
0x4004307	          0x4c89e7	                            mov rdi, r12	       903	sequencer.c	FUNCTION_31	CALL_5
0x400430a	      0xe800000000	                          call 0x400430f	       903	sequencer.c	FUNCTION_31	CALL_5
0x400430f	          0x4889c3	                            mov rbx, rax	       903	sequencer.c	FUNCTION_31	CALL_5
0x4004312	        0x488d7d04	                      lea rdi, [rbp + 4]	       923	sequencer.c	FUNCTION_32	CALL_4
0x4004316	      0xe800000000	                          call 0x400431b	       903	sequencer.c	FUNCTION_31	CALL_5
0x400431b	          0x4889d9	                            mov rcx, rbx	       903	sequencer.c	FUNCTION_31	CALL_5
0x400431e	          0x4889c2	                            mov rdx, rax	       903	sequencer.c	FUNCTION_31	CALL_5
0x4004321	      0xbe00000000	                              mov esi, 0	       903	sequencer.c	FUNCTION_31	CALL_5
0x4004326	          0x4889e7	                            mov rdi, rsp	       903	sequencer.c	FUNCTION_31	CALL_5
0x4004329	      0xb800000000	                              mov eax, 0	       903	sequencer.c	FUNCTION_31	CALL_5
0x400432e	      0xe800000000	                          call 0x4004333	       903	sequencer.c	FUNCTION_31	CALL_5
0x4004333	      0xbe01000000	                              mov esi, 1	       904	sequencer.c	FUNCTION_31	CALL_6
0x4004338	      0xbf0d000000	                            mov edi, 0xd	       904	sequencer.c	FUNCTION_31	CALL_6
0x400433d	      0xe800000000	                          call 0x4004342	       904	sequencer.c	FUNCTION_31	CALL_6
0x4004342	      0x488b542408	                mov rdx, qword [rsp + 8]	       905	sequencer.c	FUNCTION_31	CALL_7
0x4004347	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       905	sequencer.c	FUNCTION_31	CALL_7
0x400434c	        0x8b7c244c	            mov edi, dword [rsp + 0x4c] 	       905	sequencer.c	FUNCTION_31	CALL_7
0x4004350	      0xe800000000	                          call 0x4004355	       905	sequencer.c	FUNCTION_31	CALL_7
0x4004355	        0x8b7c244c	            mov edi, dword [rsp + 0x4c] 	       906	sequencer.c	FUNCTION_31	CALL_8
0x4004359	      0xe800000000	                          call 0x400435e	       906	sequencer.c	FUNCTION_31	CALL_8
0x400435e	          0x4889e7	                            mov rdi, rsp	       907	sequencer.c	FUNCTION_31	CALL_9
0x4004361	      0xe800000000	                          call 0x4004366	       907	sequencer.c	FUNCTION_31	CALL_9
0x4004366	      0xbf0d000000	                            mov edi, 0xd	       908	sequencer.c	FUNCTION_31	CALL_10
0x400436b	      0xe800000000	                          call 0x4004370	       908	sequencer.c	FUNCTION_31	CALL_10
0x4004370	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       909	sequencer.c	FUNCTION_31	CALL_11
0x4004375	      0xe800000000	                          call 0x400437a	       909	sequencer.c	FUNCTION_31	CALL_11
0x400437a	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	       924	sequencer.c	FUNCTION_32
0x4004382	    0x644833042528	                xor rax, qword fs:[0x28]	       924	sequencer.c	FUNCTION_32
0x400438b	            0x7405	                            je 0x4004392	       924	sequencer.c	FUNCTION_32
0x400438d	      0xe800000000	                          call 0x4004392	       924	sequencer.c	FUNCTION_32
0x4004392	    0x4881c4a00000	                           add rsp, 0xa0	       924	sequencer.c	FUNCTION_32
0x4004399	              0x5b	                                 pop rbx	       924	sequencer.c	FUNCTION_32
0x400439a	              0x5d	                                 pop rbp	       924	sequencer.c	FUNCTION_32
0x400439b	            0x415c	                                 pop r12	       924	sequencer.c	FUNCTION_32
0x400439d	              0xc3	                                     ret	       924	sequencer.c	FUNCTION_32
command_to_string	ELSE,0:IF,1:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,1:DO,0	11
0x4000700	          0x83ff0b	                            cmp edi, 0xb	      1344	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4000703	            0x7615	                           jbe 0x400071a	      1344	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4000705	        0x4883ec08	                              sub rsp, 8	      1343	sequencer.c	ELSE_1	FUNCTION_41
0x4000709	            0x89fe	                            mov esi, edi	      1343	sequencer.c	ELSE_1	FUNCTION_41
0x400070b	      0xbf00000000	                              mov edi, 0	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
0x4000710	      0xb800000000	                              mov eax, 0	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
0x4000715	      0xe800000000	                          call 0x400071a	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
0x400071a	            0x89ff	                            mov edi, edi	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x400071c	        0x48c1e704	                              shl rdi, 4	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4000720	    0x488b87000000	                    mov rax, qword [rdi]	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4000727	              0xc3	                                     ret	      1347	sequencer.c	ELSE_1	FUNCTION_41
rewrite_file	ELSE,0:IF,3:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,6:DO,0	61
0x4000e40	            0x4155	                                push r13	      4173	sequencer.c	FUNCTION_102
0x4000e42	            0x4154	                                push r12	      4173	sequencer.c	FUNCTION_102
0x4000e44	              0x55	                                push rbp	      4173	sequencer.c	FUNCTION_102
0x4000e45	              0x53	                                push rbx	      4173	sequencer.c	FUNCTION_102
0x4000e46	        0x4883ec08	                              sub rsp, 8	      4173	sequencer.c	FUNCTION_102
0x4000e4a	          0x4889fd	                            mov rbp, rdi	      4173	sequencer.c	FUNCTION_102
0x4000e4d	          0x4989f4	                            mov r12, rsi	      4173	sequencer.c	FUNCTION_102
0x4000e50	          0x4989d5	                            mov r13, rdx	      4173	sequencer.c	FUNCTION_102
0x4000e53	      0xbe01020000	                          mov esi, 0x201	        53	fcntl2.h	FUNCTION_215	IF_2	CALL_9
0x4000e58	      0xb800000000	                              mov eax, 0	        53	fcntl2.h	FUNCTION_215	IF_2	CALL_9
0x4000e5d	      0xe800000000	                          call 0x4000e62	        53	fcntl2.h	FUNCTION_215	IF_2	CALL_9
0x4000e62	            0x85c0	                           test eax, eax	      4176	sequencer.c	FUNCTION_102	IF_1
0x4000e64	            0x792b	                           jns 0x4000e91	      4176	sequencer.c	FUNCTION_102	IF_1
0x4000e66	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4000e6b	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4000e70	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4000e75	      0xe800000000	                          call 0x4000e7a	        54	gettext.h	FUNCTION_118
0x4000e7a	          0x4889ee	                            mov rsi, rbp	      4177	sequencer.c	FUNCTION_102	CALL_2
0x4000e7d	          0x4889c7	                            mov rdi, rax	      4177	sequencer.c	FUNCTION_102	CALL_2
0x4000e80	      0xb800000000	                              mov eax, 0	      4177	sequencer.c	FUNCTION_102	CALL_2
0x4000e85	      0xe800000000	                          call 0x4000e8a	      4177	sequencer.c	FUNCTION_102	CALL_2
0x4000e8a	      0xb8ffffffff	                     mov eax, 0xffffffff	      4177	sequencer.c	FUNCTION_102	CALL_2
0x4000e8f	            0xeb7a	                           jmp 0x4000f0b	      4177	sequencer.c	FUNCTION_102	CALL_2
0x4000e91	            0x89c3	                            mov ebx, eax	      4177	sequencer.c	FUNCTION_102	CALL_2
0x4000e93	          0x4c89ea	                            mov rdx, r13	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_3
0x4000e96	          0x4c89e6	                            mov rsi, r12	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_3
0x4000e99	            0x89c7	                            mov edi, eax	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_3
0x4000e9b	      0xe800000000	                          call 0x4000ea0	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_3
0x4000ea0	          0x4885c0	                           test rax, rax	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_3
0x4000ea3	            0x7932	                           jns 0x4000ed7	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_3
0x4000ea5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4000eaa	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4000eaf	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4000eb4	      0xe800000000	                          call 0x4000eb9	        54	gettext.h	FUNCTION_118
0x4000eb9	          0x4889ee	                            mov rsi, rbp	      4179	sequencer.c	FUNCTION_102	CALL_4
0x4000ebc	          0x4889c7	                            mov rdi, rax	      4179	sequencer.c	FUNCTION_102	CALL_4
0x4000ebf	      0xb800000000	                              mov eax, 0	      4179	sequencer.c	FUNCTION_102	CALL_4
0x4000ec4	      0xe800000000	                          call 0x4000ec9	      4179	sequencer.c	FUNCTION_102	CALL_4
0x4000ec9	            0x89df	                            mov edi, ebx	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x4000ecb	      0xe800000000	                          call 0x4000ed0	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x4000ed0	      0xb8ffffffff	                     mov eax, 0xffffffff	      4179	sequencer.c	FUNCTION_102	CALL_4
0x4000ed5	            0xeb34	                           jmp 0x4000f0b	      4179	sequencer.c	FUNCTION_102	CALL_4
0x4000ed7	            0x89df	                            mov edi, ebx	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x4000ed9	      0xe800000000	                          call 0x4000ede	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x4000ede	            0x85c0	                           test eax, eax	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x4000ee0	            0x7429	                            je 0x4000f0b	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x4000ee2	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4000ee7	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4000eec	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4000ef1	      0xe800000000	                          call 0x4000ef6	        54	gettext.h	FUNCTION_118
0x4000ef6	          0x4889ee	                            mov rsi, rbp	      4181	sequencer.c	FUNCTION_102	CALL_6
0x4000ef9	          0x4889c7	                            mov rdi, rax	      4181	sequencer.c	FUNCTION_102	CALL_6
0x4000efc	      0xb800000000	                              mov eax, 0	      4181	sequencer.c	FUNCTION_102	CALL_6
0x4000f01	      0xe800000000	                          call 0x4000f06	      4181	sequencer.c	FUNCTION_102	CALL_6
0x4000f06	      0xb8ffffffff	                     mov eax, 0xffffffff	      4181	sequencer.c	FUNCTION_102	CALL_6
0x4000f0b	        0x4883c408	                              add rsp, 8	      4183	sequencer.c	FUNCTION_102
0x4000f0f	              0x5b	                                 pop rbx	      4183	sequencer.c	FUNCTION_102
0x4000f10	              0x5d	                                 pop rbp	      4183	sequencer.c	FUNCTION_102
0x4000f11	            0x415c	                                 pop r12	      4183	sequencer.c	FUNCTION_102
0x4000f13	            0x415d	                                 pop r13	      4183	sequencer.c	FUNCTION_102
0x4000f15	              0xc3	                                     ret	      4183	sequencer.c	FUNCTION_102
subject2item_cmp	ELSE,0:IF,0:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,0:DO,0	13
0x40004b5	        0x4883ec08	                              sub rsp, 8	      4275	sequencer.c	FUNCTION_104
0x40004b9	          0x4885c9	                           test rcx, rcx	      4276	sequencer.c	FUNCTION_104
0x40004bc	            0x740e	                            je 0x40004cc	      4276	sequencer.c	FUNCTION_104
0x40004be	        0x488d7e14	                   lea rdi, [rsi + 0x14]	      4276	sequencer.c	FUNCTION_104
0x40004c2	          0x4889ce	                            mov rsi, rcx	      4276	sequencer.c	FUNCTION_104
0x40004c5	      0xe800000000	                          call 0x40004ca	      4276	sequencer.c	FUNCTION_104
0x40004ca	            0xeb10	                           jmp 0x40004dc	      4276	sequencer.c	FUNCTION_104
0x40004cc	        0x4883c214	                           add rdx, 0x14	      4276	sequencer.c	FUNCTION_104
0x40004d0	        0x488d7e14	                   lea rdi, [rsi + 0x14]	      4276	sequencer.c	FUNCTION_104
0x40004d4	          0x4889d6	                            mov rsi, rdx	      4276	sequencer.c	FUNCTION_104
0x40004d7	      0xe800000000	                          call 0x40004dc	      4276	sequencer.c	FUNCTION_104
0x40004dc	        0x4883c408	                              add rsp, 8	      4277	sequencer.c	FUNCTION_104
0x40004e0	              0xc3	                                     ret	      4277	sequencer.c	FUNCTION_104
get_dir	ELSE,0:IF,1:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,3:DO,0	14
0x40033c9	        0x4883ec08	                              sub rsp, 8	       198	sequencer.c	FUNCTION_4
0x40033cd	          0x833f02	                      cmp dword [rdi], 2	       199	sequencer.c	FUNCTION_4	IF_1	CALL_1
0x40033d0	            0x7529	                           jne 0x40033fb	       199	sequencer.c	FUNCTION_4	IF_1	CALL_1
0x40033d2	    0x48833d000000	               cmp qword [0x040033da], 0	        45	sequencer.c	CALL_7
0x40033da	            0x7516	                           jne 0x40033f2	        45	sequencer.c	CALL_7
0x40033dc	      0xbf00000000	                              mov edi, 0	        45	sequencer.c	CALL_7
0x40033e1	      0xb800000000	                              mov eax, 0	        45	sequencer.c	CALL_7
0x40033e6	      0xe800000000	                          call 0x40033eb	        45	sequencer.c	CALL_7
0x40033eb	    0x488905000000	            mov qword [0x040033f2], rax 	        45	sequencer.c	CALL_7
0x40033f2	    0x488b05000000	            mov rax, qword [0x040033f9] 	        45	sequencer.c	CALL_7
0x40033f9	            0xeb05	                           jmp 0x4003400	       200	sequencer.c	FUNCTION_4	CALL_2
0x40033fb	      0xe800000000	                          call 0x4003400	       201	sequencer.c	FUNCTION_4	CALL_3
0x4003400	        0x4883c408	                              add rsp, 8	       202	sequencer.c	FUNCTION_4
0x4003404	              0xc3	                                     ret	       202	sequencer.c	FUNCTION_4
sequencer_remove_state	ELSE,0:IF,4:FOR,1:WHILE,1:SWITCH,0:functions,0:CALL,15:DO,0	125
0x40039ca	            0x4154	                                push r12	       256	sequencer.c	FUNCTION_8
0x40039cc	              0x55	                                push rbp	       256	sequencer.c	FUNCTION_8
0x40039cd	              0x53	                                push rbx	       256	sequencer.c	FUNCTION_8
0x40039ce	        0x4883ec20	                           sub rsp, 0x20	       256	sequencer.c	FUNCTION_8
0x40039d2	          0x4889fd	                            mov rbp, rdi	       256	sequencer.c	FUNCTION_8
0x40039d5	    0x64488b042528	                mov rax, qword fs:[0x28]	       256	sequencer.c	FUNCTION_8
0x40039de	      0x4889442418	             mov qword [rsp + 0x18], rax	       256	sequencer.c	FUNCTION_8
0x40039e3	            0x31c0	                            xor eax, eax	       256	sequencer.c	FUNCTION_8
0x40039e5	    0x48c704240000	                      mov qword [rsp], 0	       257	sequencer.c	FUNCTION_8
0x40039ed	    0x48c744240800	                  mov qword [rsp + 8], 0	       257	sequencer.c	FUNCTION_8
0x40039f6	    0x48c744241000	               mov qword [rsp + 0x10], 0	       257	sequencer.c	FUNCTION_8
0x40039ff	          0x833f02	                      cmp dword [rdi], 2	       260	sequencer.c	FUNCTION_8	IF_1	CALL_1
0x4003a02	            0x756b	                           jne 0x4003a6f	       260	sequencer.c	FUNCTION_8	IF_1	CALL_1
0x4003a04	      0xe88cc6ffff	     call sym.rebase_path_refs_to_delete	       261	sequencer.c	FUNCTION_8	IF_1	CALL_3
0x4003a09	      0xba00000000	                              mov edx, 0	       261	sequencer.c	FUNCTION_8	IF_1	CALL_3
0x4003a0e	          0x4889c6	                            mov rsi, rax	       261	sequencer.c	FUNCTION_8	IF_1	CALL_3
0x4003a11	          0x4889e7	                            mov rdi, rsp	       261	sequencer.c	FUNCTION_8	IF_1	CALL_3
0x4003a14	      0xe800000000	                          call 0x4003a19	       261	sequencer.c	FUNCTION_8	IF_1	CALL_3
0x4003a19	          0x4885c0	                           test rax, rax	       260	sequencer.c	FUNCTION_8	IF_1	CALL_1
0x4003a1c	            0x7e51	                           jle 0x4003a6f	       260	sequencer.c	FUNCTION_8	IF_1	CALL_1
0x4003a1e	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	       262	sequencer.c	FUNCTION_8	IF_1
0x4003a23	      0x41803c2400	                       cmp byte [r12], 0	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4003a28	            0x7445	                            je 0x4003a6f	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4003a2a	      0xbe0a000000	                            mov esi, 0xa	       264	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4003a2f	          0x4c89e7	                            mov rdi, r12	       264	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4003a32	      0xe800000000	                          call 0x4003a37	       264	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4003a37	          0x4889c3	                            mov rbx, rax	       264	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4003a3a	          0x4885c0	                           test rax, rax	       265	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_2
0x4003a3d	     0xf840e010000	                            je 0x4003b51	       265	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_2
0x4003a43	          0xc60000	                       mov byte [rax], 0	       266	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_2
0x4003a46	      0xb900000000	                              mov ecx, 0	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x4003a4b	      0xba00000000	                              mov edx, 0	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x4003a50	          0x4c89e6	                            mov rsi, r12	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x4003a53	      0xbf00000000	                              mov edi, 0	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x4003a58	      0xe800000000	                          call 0x4003a5d	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x4003a5d	            0x85c0	                           test eax, eax	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x4003a5f	     0xf880c010000	                            js 0x4003b71	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x4003a65	        0x4c8d6301	                      lea r12, [rbx + 1]	       271	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4003a69	        0x807b0100	                   cmp byte [rbx + 1], 0	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4003a6d	            0x75bb	                           jne 0x4003a2a	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4003a6f	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	       275	sequencer.c	FUNCTION_8	CALL_7
0x4003a73	      0xe800000000	                          call 0x4003a78	       275	sequencer.c	FUNCTION_8	CALL_7
0x4003a78	        0x488b7d40	            mov rdi, qword [rbp + 0x40] 	       276	sequencer.c	FUNCTION_8	CALL_8
0x4003a7c	      0xe800000000	                          call 0x4003a81	       276	sequencer.c	FUNCTION_8	CALL_8
0x4003a81	      0x48837d5000	               cmp qword [rbp + 0x50], 0	       277	sequencer.c	FUNCTION_8	FOR_1
0x4003a86	            0x7423	                            je 0x4003aab	       277	sequencer.c	FUNCTION_8	FOR_1
0x4003a88	      0xb800000000	                              mov eax, 0	       277	sequencer.c	FUNCTION_8	FOR_1
0x4003a8d	      0xbb00000000	                              mov ebx, 0	       277	sequencer.c	FUNCTION_8	FOR_1
0x4003a92	        0x488b5548	            mov rdx, qword [rbp + 0x48] 	       278	sequencer.c	FUNCTION_8	CALL_9
0x4003a96	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	       278	sequencer.c	FUNCTION_8	CALL_9
0x4003a9a	      0xe800000000	                          call 0x4003a9f	       278	sequencer.c	FUNCTION_8	CALL_9
0x4003a9f	          0x83c301	                              add ebx, 1	       277	sequencer.c	FUNCTION_8	FOR_1
0x4003aa2	          0x4863c3	                         movsxd rax, ebx	       277	sequencer.c	FUNCTION_8	FOR_1
0x4003aa5	        0x483b4550	            cmp rax, qword [rbp + 0x50] 	       277	sequencer.c	FUNCTION_8	FOR_1
0x4003aa9	            0x72e7	                            jb 0x4003a92	       277	sequencer.c	FUNCTION_8	FOR_1
0x4003aab	        0x488b7d48	            mov rdi, qword [rbp + 0x48] 	       279	sequencer.c	FUNCTION_8	CALL_10
0x4003aaf	      0xe800000000	                          call 0x4003ab4	       279	sequencer.c	FUNCTION_8	CALL_10
0x4003ab4	        0x488d7d60	                   lea rdi, [rbp + 0x60]	       280	sequencer.c	FUNCTION_8	CALL_11
0x4003ab8	      0xe800000000	                          call 0x4003abd	       280	sequencer.c	FUNCTION_8	CALL_11
0x4003abd	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_177
0x4003ac6	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_177	IF_2
0x4003acb	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_177	IF_2
0x4003ad1	            0x7405	                            je 0x4003ad8	       165	strbuf.h	FUNCTION_177	IF_2
0x4003ad3	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_177	IF_2
0x4003ad6	            0xeb22	                           jmp 0x4003afa	       166	strbuf.h	FUNCTION_177	IF_2
0x4003ad8	    0x803d00000000	                cmp byte [0x04003adf], 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x4003adf	            0x7419	                            je 0x4003afa	       168	strbuf.h	FUNCTION_177	CALL_2
0x4003ae1	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x4003ae6	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_177	CALL_2
0x4003aeb	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x4003af0	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x4003af5	      0xe800000000	                          call 0x4003afa	       168	strbuf.h	FUNCTION_177	CALL_2
0x4003afa	          0x4889ef	                            mov rdi, rbp	       283	sequencer.c	FUNCTION_8	CALL_13
0x4003afd	      0xe8c7f8ffff	                        call sym.get_dir	       283	sequencer.c	FUNCTION_8	CALL_13
0x4003b02	          0x4889c6	                            mov rsi, rax	       283	sequencer.c	FUNCTION_8	CALL_13
0x4003b05	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x4003b0a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_179	CALL_2
0x4003b11	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_179	CALL_2
0x4003b14	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_179	CALL_2
0x4003b16	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_179	CALL_2
0x4003b19	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_179	CALL_2
0x4003b1d	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_179	CALL_2
0x4003b20	      0xe800000000	                          call 0x4003b25	       279	strbuf.h	FUNCTION_179	CALL_2
0x4003b25	      0xbe00000000	                              mov esi, 0	       284	sequencer.c	FUNCTION_8	CALL_14
0x4003b2a	          0x4889e7	                            mov rdi, rsp	       284	sequencer.c	FUNCTION_8	CALL_14
0x4003b2d	      0xe800000000	                          call 0x4003b32	       284	sequencer.c	FUNCTION_8	CALL_14
0x4003b32	          0x4889e7	                            mov rdi, rsp	       285	sequencer.c	FUNCTION_8	CALL_15
0x4003b35	      0xe800000000	                          call 0x4003b3a	       285	sequencer.c	FUNCTION_8	CALL_15
0x4003b3a	      0xb800000000	                              mov eax, 0	       288	sequencer.c	FUNCTION_8
0x4003b3f	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       288	sequencer.c	FUNCTION_8
0x4003b44	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       288	sequencer.c	FUNCTION_8
0x4003b4d	            0x7479	                            je 0x4003bc8	       288	sequencer.c	FUNCTION_8
0x4003b4f	            0xeb72	                           jmp 0x4003bc3	       288	sequencer.c	FUNCTION_8
0x4003b51	      0xb900000000	                              mov ecx, 0	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x4003b56	      0xba00000000	                              mov edx, 0	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x4003b5b	          0x4c89e6	                            mov rsi, r12	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x4003b5e	      0xbf00000000	                              mov edi, 0	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x4003b63	      0xe800000000	                          call 0x4003b68	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x4003b68	            0x85c0	                           test eax, eax	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x4003b6a	            0x782e	                            js 0x4003b9a	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x4003b6c	      0xe9fefeffff	                           jmp 0x4003a6f	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x4003b71	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4003b76	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4003b7b	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4003b80	      0xe800000000	                          call 0x4003b85	        54	gettext.h	FUNCTION_118
0x4003b85	          0x4c89e6	                            mov rsi, r12	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x4003b88	          0x4889c7	                            mov rdi, rax	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x4003b8b	      0xb800000000	                              mov eax, 0	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x4003b90	      0xe800000000	                          call 0x4003b95	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x4003b95	      0xe9cbfeffff	                           jmp 0x4003a65	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x4003b9a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4003b9f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4003ba4	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4003ba9	      0xe800000000	                          call 0x4003bae	        54	gettext.h	FUNCTION_118
0x4003bae	          0x4c89e6	                            mov rsi, r12	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x4003bb1	          0x4889c7	                            mov rdi, rax	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x4003bb4	      0xb800000000	                              mov eax, 0	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x4003bb9	      0xe800000000	                          call 0x4003bbe	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x4003bbe	      0xe9acfeffff	                           jmp 0x4003a6f	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x4003bc3	      0xe800000000	                          call 0x4003bc8	       288	sequencer.c	FUNCTION_8
0x4003bc8	        0x4883c420	                           add rsp, 0x20	       288	sequencer.c	FUNCTION_8
0x4003bcc	              0x5b	                                 pop rbx	       288	sequencer.c	FUNCTION_8
0x4003bcd	              0x5d	                                 pop rbp	       288	sequencer.c	FUNCTION_8
0x4003bce	            0x415c	                                 pop r12	       288	sequencer.c	FUNCTION_8
0x4003bd0	              0xc3	                                     ret	       288	sequencer.c	FUNCTION_8
print_commit_summary	ELSE,1:IF,9:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,37:DO,0	267
0x400439e	            0x4157	                                push r15	       994	sequencer.c	FUNCTION_35
0x40043a0	            0x4156	                                push r14	       994	sequencer.c	FUNCTION_35
0x40043a2	            0x4155	                                push r13	       994	sequencer.c	FUNCTION_35
0x40043a4	            0x4154	                                push r12	       994	sequencer.c	FUNCTION_35
0x40043a6	              0x55	                                push rbp	       994	sequencer.c	FUNCTION_35
0x40043a7	              0x53	                                push rbx	       994	sequencer.c	FUNCTION_35
0x40043a8	    0x4881ece80900	                          sub rsp, 0x9e8	       994	sequencer.c	FUNCTION_35
0x40043af	          0x4889fb	                            mov rbx, rdi	       994	sequencer.c	FUNCTION_35
0x40043b2	          0x4189d4	                           mov r12d, edx	       994	sequencer.c	FUNCTION_35
0x40043b5	    0x64488b042528	                mov rax, qword fs:[0x28]	       994	sequencer.c	FUNCTION_35
0x40043be	    0x48898424d809	            mov qword [rsp + 0x9d8], rax	       994	sequencer.c	FUNCTION_35
0x40043c6	            0x31c0	                            xor eax, eax	       994	sequencer.c	FUNCTION_35
0x40043c8	    0x48c704240000	                      mov qword [rsp], 0	       997	sequencer.c	FUNCTION_35
0x40043d0	    0x48c744240800	                  mov qword [rsp + 8], 0	       997	sequencer.c	FUNCTION_35
0x40043d9	    0x48c744241000	               mov qword [rsp + 0x10], 0	       997	sequencer.c	FUNCTION_35
0x40043e2	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       999	sequencer.c	FUNCTION_35
0x40043ea	      0xb914000000	                           mov ecx, 0x14	       999	sequencer.c	FUNCTION_35
0x40043ef	          0xf348ab	              rep stosq qword [rdi], rax	       999	sequencer.c	FUNCTION_35
0x40043f2	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1000	sequencer.c	FUNCTION_35
0x40043fb	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1000	sequencer.c	FUNCTION_35
0x4004404	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1000	sequencer.c	FUNCTION_35
0x400440d	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1001	sequencer.c	FUNCTION_35
0x4004416	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1001	sequencer.c	FUNCTION_35
0x400441f	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1001	sequencer.c	FUNCTION_35
0x4004428	          0x4889f7	                            mov rdi, rsi	      1003	sequencer.c	FUNCTION_35	CALL_1
0x400442b	      0xe800000000	                          call 0x4004430	      1003	sequencer.c	FUNCTION_35	CALL_1
0x4004430	          0x4885c0	                           test rax, rax	      1004	sequencer.c	FUNCTION_35	IF_1
0x4004433	            0x7521	                           jne 0x4004456	      1004	sequencer.c	FUNCTION_35	IF_1
0x4004435	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400443a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400443f	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4004444	      0xe800000000	                          call 0x4004449	        54	gettext.h	FUNCTION_118
0x4004449	          0x4889c7	                            mov rdi, rax	      1005	sequencer.c	FUNCTION_35	CALL_3
0x400444c	      0xb800000000	                              mov eax, 0	      1005	sequencer.c	FUNCTION_35	CALL_3
0x4004451	      0xe800000000	                          call 0x4004456	      1005	sequencer.c	FUNCTION_35	CALL_3
0x4004456	          0x4889c5	                            mov rbp, rax	      1005	sequencer.c	FUNCTION_35	CALL_3
0x4004459	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_147	CALL_1
0x400445e	          0x4889c7	                            mov rdi, rax	        75	commit.h	FUNCTION_147	CALL_1
0x4004461	      0xe800000000	                          call 0x4004466	        75	commit.h	FUNCTION_147	CALL_1
0x4004466	            0x85c0	                           test eax, eax	      1006	sequencer.c	FUNCTION_35	IF_2	CALL_4
0x4004468	            0x7421	                            je 0x400448b	      1006	sequencer.c	FUNCTION_35	IF_2	CALL_4
0x400446a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400446f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4004474	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4004479	      0xe800000000	                          call 0x400447e	        54	gettext.h	FUNCTION_118
0x400447e	          0x4889c7	                            mov rdi, rax	      1007	sequencer.c	FUNCTION_35	CALL_6
0x4004481	      0xb800000000	                              mov eax, 0	      1007	sequencer.c	FUNCTION_35	CALL_6
0x4004486	      0xe800000000	                          call 0x400448b	      1007	sequencer.c	FUNCTION_35	CALL_6
0x400448b	      0xba0d000000	                            mov edx, 0xd	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004490	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004495	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004498	      0xe800000000	                          call 0x400449d	       279	strbuf.h	FUNCTION_179	CALL_2
0x400449d	    0x488d8c248000	                   lea rcx, [rsp + 0x80]	      1011	sequencer.c	FUNCTION_35	CALL_8
0x40044a5	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1011	sequencer.c	FUNCTION_35	CALL_8
0x40044aa	      0xbe00000000	                              mov esi, 0	      1011	sequencer.c	FUNCTION_35	CALL_8
0x40044af	          0x4889ef	                            mov rdi, rbp	      1011	sequencer.c	FUNCTION_35	CALL_8
0x40044b2	      0xe800000000	                          call 0x40044b7	      1011	sequencer.c	FUNCTION_35	CALL_8
0x40044b7	    0x488d8c248000	                   lea rcx, [rsp + 0x80]	      1012	sequencer.c	FUNCTION_35	CALL_9
0x40044bf	      0x488d542440	                   lea rdx, [rsp + 0x40]	      1012	sequencer.c	FUNCTION_35	CALL_9
0x40044c4	      0xbe00000000	                              mov esi, 0	      1012	sequencer.c	FUNCTION_35	CALL_9
0x40044c9	          0x4889ef	                            mov rdi, rbp	      1012	sequencer.c	FUNCTION_35	CALL_9
0x40044cc	      0xe800000000	                          call 0x40044d1	      1012	sequencer.c	FUNCTION_35	CALL_9
0x40044d1	      0x488d742440	                   lea rsi, [rsp + 0x40]	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x40044d6	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x40044db	      0xe800000000	                          call 0x40044e0	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x40044e0	            0x85c0	                           test eax, eax	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x40044e2	            0x741f	                            je 0x4004503	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x40044e4	      0xba0a000000	                            mov edx, 0xa	       279	strbuf.h	FUNCTION_179	CALL_2
0x40044e9	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x40044ee	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_179	CALL_2
0x40044f1	      0xe800000000	                          call 0x40044f6	       279	strbuf.h	FUNCTION_179	CALL_2
0x40044f6	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1015	sequencer.c	FUNCTION_35	IF_3	CALL_12
0x40044fb	          0x4889e7	                            mov rdi, rsp	      1015	sequencer.c	FUNCTION_35	IF_3	CALL_12
0x40044fe	      0xe800000000	                          call 0x4004503	      1015	sequencer.c	FUNCTION_35	IF_3	CALL_12
0x4004503	        0x41f6c402	                            test r12b, 2	      1017	sequencer.c	FUNCTION_35	IF_4
0x4004507	            0x745e	                            je 0x4004567	      1017	sequencer.c	FUNCTION_35	IF_4
0x4004509	    0x48c744246000	               mov qword [rsp + 0x60], 0	      1018	sequencer.c	FUNCTION_35	IF_4
0x4004512	    0x48c744246800	               mov qword [rsp + 0x68], 0	      1018	sequencer.c	FUNCTION_35	IF_4
0x400451b	    0x48c744247000	               mov qword [rsp + 0x70], 0	      1018	sequencer.c	FUNCTION_35	IF_4
0x4004524	    0x488d8c248000	                   lea rcx, [rsp + 0x80]	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x400452c	      0x488d542460	                   lea rdx, [rsp + 0x60]	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x4004531	      0xbe00000000	                              mov esi, 0	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x4004536	          0x4889ef	                            mov rdi, rbp	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x4004539	      0xe800000000	                          call 0x400453e	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x400453e	      0xba08000000	                              mov edx, 8	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004543	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004548	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_179	CALL_2
0x400454b	      0xe800000000	                          call 0x4004550	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004550	      0x488d742460	                   lea rsi, [rsp + 0x60]	      1022	sequencer.c	FUNCTION_35	IF_4	CALL_15
0x4004555	          0x4889e7	                            mov rdi, rsp	      1022	sequencer.c	FUNCTION_35	IF_4	CALL_15
0x4004558	      0xe800000000	                          call 0x400455d	      1022	sequencer.c	FUNCTION_35	IF_4	CALL_15
0x400455d	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      1023	sequencer.c	FUNCTION_35	IF_4	CALL_16
0x4004562	      0xe800000000	                          call 0x4004567	      1023	sequencer.c	FUNCTION_35	IF_4	CALL_16
0x4004567	      0xe800000000	                          call 0x400456c	      1025	sequencer.c	FUNCTION_35	IF_5	CALL_17
0x400456c	            0x85c0	                           test eax, eax	      1025	sequencer.c	FUNCTION_35	IF_5	CALL_17
0x400456e	     0xf8514010000	                           jne 0x4004688	      1025	sequencer.c	FUNCTION_35	IF_5	CALL_17
0x4004574	      0xba0d000000	                            mov edx, 0xd	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004579	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x400457e	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004581	      0xe800000000	                          call 0x4004586	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004586	      0x488d742440	                   lea rsi, [rsp + 0x40]	      1027	sequencer.c	FUNCTION_35	IF_5	CALL_19
0x400458b	          0x4889e7	                            mov rdi, rsp	      1027	sequencer.c	FUNCTION_35	IF_5	CALL_19
0x400458e	      0xe800000000	                          call 0x4004593	      1027	sequencer.c	FUNCTION_35	IF_5	CALL_19
0x4004593	    0x833d00000000	               cmp dword [0x0400459a], 0	      1028	sequencer.c	FUNCTION_35	IF_5	IF_6
0x400459a	     0xf84e8000000	                            je 0x4004688	      1028	sequencer.c	FUNCTION_35	IF_5	IF_6
0x40045a0	        0x488b0424	                    mov rax, qword [rsp]	       141	strbuf.h	FUNCTION_176
0x40045a4	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_176
0x40045a7	            0x740b	                            je 0x40045b4	       141	strbuf.h	FUNCTION_176
0x40045a9	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x40045ad	      0x4839442408	                cmp qword [rsp + 8], rax	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x40045b2	            0x750d	                           jne 0x40045c1	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x40045b4	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_178	CALL_2
0x40045b9	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_178	CALL_2
0x40045bc	      0xe800000000	                          call 0x40045c1	       228	strbuf.h	FUNCTION_178	CALL_2
0x40045c1	      0x488b442408	                mov rax, qword [rsp + 8]	       229	strbuf.h	FUNCTION_178
0x40045c6	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_178
0x40045ca	      0x4889542408	                mov qword [rsp + 8], rdx	       229	strbuf.h	FUNCTION_178
0x40045cf	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_178
0x40045d4	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_178
0x40045d8	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_178
0x40045dd	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_178
0x40045e2	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_178
0x40045e6	      0xbe00000000	                              mov esi, 0	       978	sequencer.c	FUNCTION_34	CALL_1
0x40045eb	      0xbf00000000	                              mov edi, 0	       978	sequencer.c	FUNCTION_34	CALL_1
0x40045f0	      0xe800000000	                          call 0x40045f5	       978	sequencer.c	FUNCTION_34	CALL_1
0x40045f5	          0x4989c5	                            mov r13, rax	       978	sequencer.c	FUNCTION_34	CALL_1
0x40045f8	      0xbf00000000	                              mov edi, 0	       979	sequencer.c	FUNCTION_34	CALL_2
0x40045fd	      0xe800000000	                          call 0x4004602	       979	sequencer.c	FUNCTION_34	CALL_2
0x4004602	          0x4989c6	                            mov r14, rax	       979	sequencer.c	FUNCTION_34	CALL_2
0x4004605	          0x4c89ef	                            mov rdi, r13	       980	sequencer.c	FUNCTION_34	CALL_4
0x4004608	      0xe800000000	                          call 0x400460d	       980	sequencer.c	FUNCTION_34	CALL_4
0x400460d	            0x85c0	                           test eax, eax	       980	sequencer.c	FUNCTION_34	CALL_4
0x400460f	     0xf8529020000	                           jne 0x400483e	       980	sequencer.c	FUNCTION_34	CALL_4
0x4004615	          0x4c89f7	                            mov rdi, r14	       980	sequencer.c	FUNCTION_34	CALL_4
0x4004618	      0xe800000000	                          call 0x400461d	       980	sequencer.c	FUNCTION_34	CALL_4
0x400461d	          0x4189c7	                           mov r15d, eax	       980	sequencer.c	FUNCTION_34	CALL_4
0x4004620	          0x4c89ef	                            mov rdi, r13	       982	sequencer.c	FUNCTION_34	CALL_5
0x4004623	      0xe800000000	                          call 0x4004628	       982	sequencer.c	FUNCTION_34	CALL_5
0x4004628	          0x4c89f7	                            mov rdi, r14	       983	sequencer.c	FUNCTION_34	CALL_6
0x400462b	      0xe800000000	                          call 0x4004630	       983	sequencer.c	FUNCTION_34	CALL_6
0x4004630	          0x4585ff	                         test r15d, r15d	       985	sequencer.c	FUNCTION_34	IF_1
0x4004633	            0x7419	                            je 0x400464e	       985	sequencer.c	FUNCTION_34	IF_1
0x4004635	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400463a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400463f	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4004644	      0xe800000000	                          call 0x4004649	        54	gettext.h	FUNCTION_118
0x4004649	          0x4889c6	                            mov rsi, rax	        54	gettext.h	FUNCTION_118
0x400464c	            0xeb17	                           jmp 0x4004665	        54	gettext.h	FUNCTION_118
0x400464e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4004653	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4004658	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x400465d	      0xe800000000	                          call 0x4004662	        54	gettext.h	FUNCTION_118
0x4004662	          0x4889c6	                            mov rsi, rax	        54	gettext.h	FUNCTION_118
0x4004665	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x400466a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004671	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004674	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004676	          0x4889c8	                            mov rax, rcx	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004679	          0x48f7d0	                                 not rax	       279	strbuf.h	FUNCTION_179	CALL_2
0x400467c	        0x488d50ff	                      lea rdx, [rax - 1]	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004680	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004683	      0xe800000000	                          call 0x4004688	       279	strbuf.h	FUNCTION_179	CALL_2
0x4004688	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1033	sequencer.c	FUNCTION_35	CALL_23
0x400468d	      0xe800000000	                          call 0x4004692	      1033	sequencer.c	FUNCTION_35	CALL_23
0x4004692	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1034	sequencer.c	FUNCTION_35	CALL_24
0x4004697	      0xe800000000	                          call 0x400469c	      1034	sequencer.c	FUNCTION_35	CALL_24
0x400469c	          0x4889de	                            mov rsi, rbx	      1036	sequencer.c	FUNCTION_35	CALL_25
0x400469f	    0x488dbc242001	                  lea rdi, [rsp + 0x120]	      1036	sequencer.c	FUNCTION_35	CALL_25
0x40046a7	      0xe800000000	                          call 0x40046ac	      1036	sequencer.c	FUNCTION_35	CALL_25
0x40046ac	      0xb900000000	                              mov ecx, 0	      1037	sequencer.c	FUNCTION_35	CALL_26
0x40046b1	    0x488d94242001	                  lea rdx, [rsp + 0x120]	      1037	sequencer.c	FUNCTION_35	CALL_26
0x40046b9	      0xbe00000000	                              mov esi, 0	      1037	sequencer.c	FUNCTION_35	CALL_26
0x40046be	      0xbf00000000	                              mov edi, 0	      1037	sequencer.c	FUNCTION_35	CALL_26
0x40046c3	      0xe800000000	                          call 0x40046c8	      1037	sequencer.c	FUNCTION_35	CALL_26
0x40046c8	    0xc78424780600	          mov dword [rsp + 0x678], 0x28 	      1040	sequencer.c	FUNCTION_35
0x40046d3	     0xfb684249901	          movzx eax, byte [rsp + 0x199] 	      1044	sequencer.c	FUNCTION_35
0x40046db	          0x83c815	                            or eax, 0x15	      1044	sequencer.c	FUNCTION_35
0x40046de	    0x888424990100	              mov byte [rsp + 0x199], al	      1044	sequencer.c	FUNCTION_35
0x40046e5	    0x488db4242001	                  lea rsi, [rsp + 0x120]	      1045	sequencer.c	FUNCTION_35	CALL_27
0x40046ed	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1045	sequencer.c	FUNCTION_35	CALL_27
0x40046f2	      0xe800000000	                          call 0x40046f7	      1045	sequencer.c	FUNCTION_35	CALL_27
0x40046f7	    0x80a4249a0100	            and byte [rsp + 0x19a], 0xfe	      1046	sequencer.c	FUNCTION_35
0x40046ff	    0xc78424680600	              mov dword [rsp + 0x668], 1	      1047	sequencer.c	FUNCTION_35
0x400470a	    0xc78424640600	              mov dword [rsp + 0x664], 0	      1048	sequencer.c	FUNCTION_35
0x4004715	    0x488dbc241806	                  lea rdi, [rsp + 0x618]	      1049	sequencer.c	FUNCTION_35	CALL_28
0x400471d	      0xe800000000	                          call 0x4004722	      1049	sequencer.c	FUNCTION_35	CALL_28
0x4004722	      0xb900000000	                              mov ecx, 0	      1051	sequencer.c	FUNCTION_35	CALL_29
0x4004727	      0xba00000000	                              mov edx, 0	      1051	sequencer.c	FUNCTION_35	CALL_29
0x400472c	      0xbe00000000	                              mov esi, 0	      1051	sequencer.c	FUNCTION_35	CALL_29
0x4004731	      0xbf00000000	                              mov edi, 0	      1051	sequencer.c	FUNCTION_35	CALL_29
0x4004736	      0xe800000000	                          call 0x400473b	      1051	sequencer.c	FUNCTION_35	CALL_29
0x400473b	          0x4885c0	                           test rax, rax	      1052	sequencer.c	FUNCTION_35	IF_7
0x400473e	            0x7521	                           jne 0x4004761	      1052	sequencer.c	FUNCTION_35	IF_7
0x4004740	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4004745	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400474a	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x400474f	      0xe800000000	                          call 0x4004754	        54	gettext.h	FUNCTION_118
0x4004754	          0x4889c7	                            mov rdi, rax	      1053	sequencer.c	FUNCTION_35	CALL_31
0x4004757	      0xb800000000	                              mov eax, 0	      1053	sequencer.c	FUNCTION_35	CALL_31
0x400475c	      0xe800000000	                          call 0x4004761	      1053	sequencer.c	FUNCTION_35	CALL_31
0x4004761	      0xbf00000000	                              mov edi, 0	      1054	sequencer.c	FUNCTION_35	IF_8
0x4004766	      0xb905000000	                              mov ecx, 5	      1054	sequencer.c	FUNCTION_35	IF_8
0x400476b	          0x4889c6	                            mov rsi, rax	      1054	sequencer.c	FUNCTION_35	IF_8
0x400476e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1054	sequencer.c	FUNCTION_35	IF_8
0x4004770	        0x400f97c6	                                seta sil	      1054	sequencer.c	FUNCTION_35	IF_8
0x4004774	           0xf92c1	                                 setb cl	      1054	sequencer.c	FUNCTION_35	IF_8
0x4004777	          0x4889c3	                            mov rbx, rax	      1054	sequencer.c	FUNCTION_35	IF_8
0x400477a	      0xba00000000	                              mov edx, 0	      1054	sequencer.c	FUNCTION_35	IF_8
0x400477f	          0x4038ce	                             cmp sil, cl	      1054	sequencer.c	FUNCTION_35	IF_8
0x4004782	            0x7519	                           jne 0x400479d	      1054	sequencer.c	FUNCTION_35	IF_8
0x4004784	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4004789	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400478e	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4004793	      0xe800000000	                          call 0x4004798	        54	gettext.h	FUNCTION_118
0x4004798	          0x4889c3	                            mov rbx, rax	        54	gettext.h	FUNCTION_118
0x400479b	            0xeb17	                           jmp 0x40047b4	        54	gettext.h	FUNCTION_118
0x400479d	           0xfb60a	                   movzx ecx, byte [rdx]	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x40047a0	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x40047a2	            0x7410	                            je 0x40047b4	       484	git-compat-util.h	FUNCTION_126	DO_1	IF_1
0x40047a4	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x40047a8	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_126	DO_1
0x40047ac	          0x3a4bff	                  cmp cl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_126	DO_1
0x40047af	            0x74ec	                            je 0x400479d	       488	git-compat-util.h	FUNCTION_126	DO_1
0x40047b1	          0x4889c3	                            mov rbx, rax	      1051	sequencer.c	FUNCTION_35	CALL_29
0x40047b4	      0xb900000000	                              mov ecx, 0	      1058	sequencer.c	FUNCTION_35
0x40047b9	        0x41f6c401	                            test r12b, 1	      1058	sequencer.c	FUNCTION_35
0x40047bd	            0x7417	                            je 0x40047d6	      1058	sequencer.c	FUNCTION_35
0x40047bf	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40047c4	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40047c9	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40047ce	      0xe800000000	                          call 0x40047d3	        54	gettext.h	FUNCTION_118
0x40047d3	          0x4889c1	                            mov rcx, rax	        54	gettext.h	FUNCTION_118
0x40047d6	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_578
0x40047d9	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_578
0x40047de	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_578
0x40047e3	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_578
0x40047e8	      0xe800000000	                          call 0x40047ed	       104	stdio2.h	CALL_578
0x40047ed	          0x4889ee	                            mov rsi, rbp	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_35
0x40047f0	    0x488dbc242001	                  lea rdi, [rsp + 0x120]	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_35
0x40047f8	      0xe800000000	                          call 0x40047fd	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_35
0x40047fd	            0x85c0	                           test eax, eax	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_35
0x40047ff	            0x7520	                           jne 0x4004821	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_35
0x4004801	    0x808c249a0100	                or byte [rsp + 0x19a], 1	      1062	sequencer.c	FUNCTION_35	IF_9
0x4004809	    0x808c249b0100	                or byte [rsp + 0x19b], 8	      1063	sequencer.c	FUNCTION_35	IF_9
0x4004811	          0x4889ee	                            mov rsi, rbp	      1064	sequencer.c	FUNCTION_35	IF_9	CALL_36
0x4004814	    0x488dbc242001	                  lea rdi, [rsp + 0x120]	      1064	sequencer.c	FUNCTION_35	IF_9	CALL_36
0x400481c	      0xe800000000	                          call 0x4004821	      1064	sequencer.c	FUNCTION_35	IF_9	CALL_36
0x4004821	          0x4889e7	                            mov rdi, rsp	      1067	sequencer.c	FUNCTION_35	CALL_37
0x4004824	      0xe800000000	                          call 0x4004829	      1067	sequencer.c	FUNCTION_35	CALL_37
0x4004829	    0x488b8424d809	           mov rax, qword [rsp + 0x9d8] 	      1068	sequencer.c	FUNCTION_35
0x4004831	    0x644833042528	                xor rax, qword fs:[0x28]	      1068	sequencer.c	FUNCTION_35
0x400483a	            0x741c	                            je 0x4004858	      1068	sequencer.c	FUNCTION_35
0x400483c	            0xeb15	                           jmp 0x4004853	      1068	sequencer.c	FUNCTION_35
0x400483e	          0x4c89ef	                            mov rdi, r13	       982	sequencer.c	FUNCTION_34	CALL_5
0x4004841	      0xe800000000	                          call 0x4004846	       982	sequencer.c	FUNCTION_34	CALL_5
0x4004846	          0x4c89f7	                            mov rdi, r14	       983	sequencer.c	FUNCTION_34	CALL_6
0x4004849	      0xe800000000	                          call 0x400484e	       983	sequencer.c	FUNCTION_34	CALL_6
0x400484e	      0xe9e2fdffff	                           jmp 0x4004635	       983	sequencer.c	FUNCTION_34	CALL_6
0x4004853	      0xe800000000	                          call 0x4004858	      1068	sequencer.c	FUNCTION_35
0x4004858	    0x4881c4e80900	                          add rsp, 0x9e8	      1068	sequencer.c	FUNCTION_35
0x400485f	              0x5b	                                 pop rbx	      1068	sequencer.c	FUNCTION_35
0x4004860	              0x5d	                                 pop rbp	      1068	sequencer.c	FUNCTION_35
0x4004861	            0x415c	                                 pop r12	      1068	sequencer.c	FUNCTION_35
0x4004863	            0x415d	                                 pop r13	      1068	sequencer.c	FUNCTION_35
0x4004865	            0x415e	                                 pop r14	      1068	sequencer.c	FUNCTION_35
0x4004867	            0x415f	                                 pop r15	      1068	sequencer.c	FUNCTION_35
0x4004869	              0xc3	                                     ret	      1068	sequencer.c	FUNCTION_35
peek_command	ELSE,0:IF,1:FOR,1:WHILE,0:SWITCH,0:functions,0:CALL,1:DO,0	24
0x4003310	           0x37728	             add esi, dword [rdi + 0x28]	      2906	sequencer.c	FUNCTION_84	FOR_1
0x4003313	          0x8b5720	            mov edx, dword [rdi + 0x20] 	      2906	sequencer.c	FUNCTION_84	FOR_1
0x4003316	      0xb8ffffffff	                     mov eax, 0xffffffff	      2910	sequencer.c	FUNCTION_84
0x400331b	            0x39d6	                            cmp esi, edx	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400331d	            0x7d38	                           jge 0x4003357	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400331f	        0x488b4f18	            mov rcx, qword [rdi + 0x18] 	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4003323	          0x4863c6	                         movsxd rax, esi	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4003326	        0x488d0440	                  lea rax, [rax + rax*2]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400332a	        0x48c1e004	                              shl rax, 4	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400332e	          0x8b0401	              mov eax, dword [rcx + rax]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4003331	          0x83f809	                              cmp eax, 9	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4003334	            0x7715	                            ja 0x400334b	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4003336	            0xf3c3	                                     ret	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4003338	          0x4863c6	                         movsxd rax, esi	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400333b	        0x488d0440	                  lea rax, [rax + rax*2]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400333f	        0x48c1e004	                              shl rax, 4	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4003343	          0x8b0401	              mov eax, dword [rcx + rax]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4003346	          0x83f809	                              cmp eax, 9	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4003349	            0x760c	                           jbe 0x4003357	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400334b	          0x83c601	                              add esi, 1	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400334e	            0x39d6	                            cmp esi, edx	      2906	sequencer.c	FUNCTION_84	FOR_1
0x4003350	            0x7ce6	                            jl 0x4003338	      2906	sequencer.c	FUNCTION_84	FOR_1
0x4003352	      0xb8ffffffff	                     mov eax, 0xffffffff	      2910	sequencer.c	FUNCTION_84
0x4003357	            0xf3c3	                                     ret	      2911	sequencer.c	FUNCTION_84
rest_is_empty	ELSE,1:IF,3:FOR,1:WHILE,1:SWITCH,0:functions,0:CALL,3:DO,0	70
0x4000788	            0x4156	                                push r14	       784	sequencer.c	FUNCTION_27
0x400078a	            0x4155	                                push r13	       784	sequencer.c	FUNCTION_27
0x400078c	            0x4154	                                push r12	       784	sequencer.c	FUNCTION_27
0x400078e	              0x55	                                push rbp	       784	sequencer.c	FUNCTION_27
0x400078f	              0x53	                                push rbx	       784	sequencer.c	FUNCTION_27
0x4000790	          0x4889fd	                            mov rbp, rdi	       784	sequencer.c	FUNCTION_27
0x4000793	          0x4189f4	                           mov r12d, esi	       784	sequencer.c	FUNCTION_27
0x4000796	          0x4863c6	                         movsxd rax, esi	       789	sequencer.c	FUNCTION_27	FOR_1
0x4000799	        0x488b5f08	                mov rbx, qword [rdi + 8]	       789	sequencer.c	FUNCTION_27	FOR_1
0x400079d	          0x4839d8	                            cmp rax, rbx	       789	sequencer.c	FUNCTION_27	FOR_1
0x40007a0	     0xf839f000000	                           jae 0x4000845	       789	sequencer.c	FUNCTION_27	FOR_1
0x40007a6	        0x4c8b7510	            mov r14, qword [rbp + 0x10] 	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x40007aa	        0x4d8d2c06	                    lea r13, [r14 + rax]	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x40007ae	          0x4889da	                            mov rdx, rbx	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x40007b1	          0x4829c2	                            sub rdx, rax	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x40007b4	      0xbe0a000000	                            mov esi, 0xa	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x40007b9	          0x4c89ef	                            mov rdi, r13	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x40007bc	      0xe800000000	                          call 0x40007c1	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x40007c1	            0x89c2	                            mov edx, eax	       792	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x40007c3	          0x4429f2	                           sub edx, r14d	       792	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x40007c6	          0x4885c0	                           test rax, rax	       792	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x40007c9	           0xf45da	                         cmovne ebx, edx	       792	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x40007cc	            0x89d8	                            mov eax, ebx	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x40007ce	          0x4429e0	                           sub eax, r12d	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x40007d1	            0x4898	                                    cdqe	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x40007d3	        0x4883f80e	                            cmp rax, 0xe	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x40007d7	            0x762d	                           jbe 0x4000806	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x40007d9	      0xbe00000000	                              mov esi, 0	       797	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_3
0x40007de	          0x4c89ef	                            mov rdi, r13	       797	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_3
0x40007e1	      0xe800000000	                          call 0x40007e6	       797	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_3
0x40007e6	            0x85c0	                           test eax, eax	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x40007e8	            0x7540	                           jne 0x400082a	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x40007ea	            0xeb1a	                           jmp 0x4000806	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x40007ec	          0x8d5001	                      lea edx, [rax + 1]	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x40007ef	            0x4898	                                    cdqe	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x40007f1	         0xfb60401	             movzx eax, byte [rcx + rax]	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x40007f5	    0xf68000000000	                      test byte [rax], 1	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x40007fc	            0x744e	                            je 0x400084c	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x40007fe	            0x89d0	                            mov eax, edx	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4000800	            0x39c3	                            cmp ebx, eax	       801	sequencer.c	FUNCTION_27	FOR_1	WHILE_1
0x4000802	            0x75e8	                           jne 0x40007ec	       801	sequencer.c	FUNCTION_27	FOR_1	WHILE_1
0x4000804	            0xeb24	                           jmp 0x400082a	       801	sequencer.c	FUNCTION_27	FOR_1	WHILE_1
0x4000806	          0x4439e3	                           cmp ebx, r12d	       801	sequencer.c	FUNCTION_27	FOR_1	WHILE_1
0x4000809	            0x7e1c	                           jle 0x4000827	       801	sequencer.c	FUNCTION_27	FOR_1	WHILE_1
0x400080b	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x400080f	      0x418d442401	                      lea eax, [r12 + 1]	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4000814	          0x4d63e4	                        movsxd r12, r12d	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4000817	      0x420fb61421	             movzx edx, byte [rcx + r12]	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x400081c	    0xf68200000000	                      test byte [rdx], 1	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4000823	            0x75db	                           jne 0x4000800	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4000825	            0xeb2c	                           jmp 0x4000853	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4000827	          0x4489e3	                           mov ebx, r12d	       801	sequencer.c	FUNCTION_27	FOR_1	WHILE_1
0x400082a	        0x448d6301	                     lea r12d, [rbx + 1]	       789	sequencer.c	FUNCTION_27	FOR_1
0x400082e	          0x4963c4	                        movsxd rax, r12d	       789	sequencer.c	FUNCTION_27	FOR_1
0x4000831	        0x488b5d08	                mov rbx, qword [rbp + 8]	       789	sequencer.c	FUNCTION_27	FOR_1
0x4000835	          0x4839d8	                            cmp rax, rbx	       789	sequencer.c	FUNCTION_27	FOR_1
0x4000838	     0xf8268ffffff	                            jb 0x40007a6	       789	sequencer.c	FUNCTION_27	FOR_1
0x400083e	      0xb801000000	                              mov eax, 1	       806	sequencer.c	FUNCTION_27
0x4000843	            0xeb13	                           jmp 0x4000858	       806	sequencer.c	FUNCTION_27
0x4000845	      0xb801000000	                              mov eax, 1	       806	sequencer.c	FUNCTION_27
0x400084a	            0xeb0c	                           jmp 0x4000858	       806	sequencer.c	FUNCTION_27
0x400084c	      0xb800000000	                              mov eax, 0	       803	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4000851	            0xeb05	                           jmp 0x4000858	       803	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4000853	      0xb800000000	                              mov eax, 0	       803	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4000858	              0x5b	                                 pop rbx	       807	sequencer.c	FUNCTION_27
0x4000859	              0x5d	                                 pop rbp	       807	sequencer.c	FUNCTION_27
0x400085a	            0x415c	                                 pop r12	       807	sequencer.c	FUNCTION_27
0x400085c	            0x415d	                                 pop r13	       807	sequencer.c	FUNCTION_27
0x400085e	            0x415e	                                 pop r14	       807	sequencer.c	FUNCTION_27
0x4000860	              0xc3	                                     ret	       807	sequencer.c	FUNCTION_27
save_todo	ELSE,0:IF,8:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,18:DO,0	140
0x4000f16	            0x4156	                                push r14	      2326	sequencer.c	FUNCTION_72
0x4000f18	            0x4155	                                push r13	      2326	sequencer.c	FUNCTION_72
0x4000f1a	            0x4154	                                push r12	      2326	sequencer.c	FUNCTION_72
0x4000f1c	              0x55	                                push rbp	      2326	sequencer.c	FUNCTION_72
0x4000f1d	              0x53	                                push rbx	      2326	sequencer.c	FUNCTION_72
0x4000f1e	        0x4883ec10	                           sub rsp, 0x10	      2326	sequencer.c	FUNCTION_72
0x4000f22	          0x4889fd	                            mov rbp, rdi	      2326	sequencer.c	FUNCTION_72
0x4000f25	          0x4989f4	                            mov r12, rsi	      2326	sequencer.c	FUNCTION_72
0x4000f28	    0x64488b042528	                mov rax, qword fs:[0x28]	      2326	sequencer.c	FUNCTION_72
0x4000f31	      0x4889442408	                mov qword [rsp + 8], rax	      2326	sequencer.c	FUNCTION_72
0x4000f36	            0x31c0	                            xor eax, eax	      2326	sequencer.c	FUNCTION_72
0x4000f38	    0x48c704240000	                      mov qword [rsp], 0	      2327	sequencer.c	FUNCTION_72
0x4000f40	          0x4889f7	                            mov rdi, rsi	      2328	sequencer.c	FUNCTION_72	CALL_1
0x4000f43	      0xe8b5f3ffff	                  call sym.get_todo_path	      2328	sequencer.c	FUNCTION_72	CALL_1
0x4000f48	          0x4989c6	                            mov r14, rax	      2328	sequencer.c	FUNCTION_72	CALL_1
0x4000f4b	      0x41833c2402	                      cmp dword [r12], 2	      2336	sequencer.c	FUNCTION_72	IF_1
0x4000f50	           0xf94c3	                                 sete bl	      2336	sequencer.c	FUNCTION_72	IF_1
0x4000f53	           0xfb6db	                           movzx ebx, bl	      2336	sequencer.c	FUNCTION_72	IF_1
0x4000f56	           0x35d28	             add ebx, dword [rbp + 0x28]	      2336	sequencer.c	FUNCTION_72	IF_1
0x4000f59	      0xb900000000	                              mov ecx, 0	       175	lockfile.h	FUNCTION_106	CALL_1
0x4000f5e	      0xba00000000	                              mov edx, 0	       175	lockfile.h	FUNCTION_106	CALL_1
0x4000f63	          0x4889c6	                            mov rsi, rax	       175	lockfile.h	FUNCTION_106	CALL_1
0x4000f66	          0x4889e7	                            mov rdi, rsp	       175	lockfile.h	FUNCTION_106	CALL_1
0x4000f69	      0xe800000000	                          call 0x4000f6e	       175	lockfile.h	FUNCTION_106	CALL_1
0x4000f6e	            0x85c0	                           test eax, eax	      2339	sequencer.c	FUNCTION_72	IF_2
0x4000f70	            0x792e	                           jns 0x4000fa0	      2339	sequencer.c	FUNCTION_72	IF_2
0x4000f72	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4000f77	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4000f7c	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4000f81	      0xe800000000	                          call 0x4000f86	        54	gettext.h	FUNCTION_118
0x4000f86	          0x4c89f6	                            mov rsi, r14	      2340	sequencer.c	FUNCTION_72	CALL_4
0x4000f89	          0x4889c7	                            mov rdi, rax	      2340	sequencer.c	FUNCTION_72	CALL_4
0x4000f8c	      0xb800000000	                              mov eax, 0	      2340	sequencer.c	FUNCTION_72	CALL_4
0x4000f91	      0xe800000000	                          call 0x4000f96	      2340	sequencer.c	FUNCTION_72	CALL_4
0x4000f96	      0xb8ffffffff	                     mov eax, 0xffffffff	      2340	sequencer.c	FUNCTION_72	CALL_4
0x4000f9b	      0xe970010000	                           jmp 0x4001110	      2340	sequencer.c	FUNCTION_72	CALL_4
0x4000fa0	          0x4189c5	                           mov r13d, eax	      2340	sequencer.c	FUNCTION_72	CALL_4
0x4000fa3	            0x89de	                            mov esi, ebx	      2341	sequencer.c	FUNCTION_72	CALL_5
0x4000fa5	          0x4889ef	                            mov rdi, rbp	      2341	sequencer.c	FUNCTION_72	CALL_5
0x4000fa8	      0xe893f0ffff	           call sym.get_item_line_offset	      2341	sequencer.c	FUNCTION_72	CALL_5
0x4000fad	            0x4898	                                    cdqe	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x4000faf	        0x488b5508	                mov rdx, qword [rbp + 8]	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x4000fb3	          0x4829c2	                            sub rdx, rax	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x4000fb6	        0x48034510	             add rax, qword [rbp + 0x10]	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x4000fba	          0x4889c6	                            mov rsi, rax	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x4000fbd	          0x4489ef	                           mov edi, r13d	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x4000fc0	      0xe800000000	                          call 0x4000fc5	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x4000fc5	          0x4885c0	                           test rax, rax	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x4000fc8	            0x792e	                           jns 0x4000ff8	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x4000fca	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4000fcf	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4000fd4	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4000fd9	      0xe800000000	                          call 0x4000fde	        54	gettext.h	FUNCTION_118
0x4000fde	          0x4c89f6	                            mov rsi, r14	      2344	sequencer.c	FUNCTION_72	CALL_7
0x4000fe1	          0x4889c7	                            mov rdi, rax	      2344	sequencer.c	FUNCTION_72	CALL_7
0x4000fe4	      0xb800000000	                              mov eax, 0	      2344	sequencer.c	FUNCTION_72	CALL_7
0x4000fe9	      0xe800000000	                          call 0x4000fee	      2344	sequencer.c	FUNCTION_72	CALL_7
0x4000fee	      0xb8ffffffff	                     mov eax, 0xffffffff	      2344	sequencer.c	FUNCTION_72	CALL_7
0x4000ff3	      0xe918010000	                           jmp 0x4001110	      2344	sequencer.c	FUNCTION_72	CALL_7
0x4000ff8	          0x4889e7	                            mov rdi, rsp	      2345	sequencer.c	FUNCTION_72	IF_4	CALL_8
0x4000ffb	      0xe800000000	                          call 0x4001000	      2345	sequencer.c	FUNCTION_72	IF_4	CALL_8
0x4001000	            0x85c0	                           test eax, eax	      2345	sequencer.c	FUNCTION_72	IF_4	CALL_8
0x4001002	            0x792e	                           jns 0x4001032	      2345	sequencer.c	FUNCTION_72	IF_4	CALL_8
0x4001004	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x4001009	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x400100e	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4001013	      0xe800000000	                          call 0x4001018	        54	gettext.h	FUNCTION_118
0x4001018	          0x4c89f6	                            mov rsi, r14	      2346	sequencer.c	FUNCTION_72	CALL_9
0x400101b	          0x4889c7	                            mov rdi, rax	      2346	sequencer.c	FUNCTION_72	CALL_9
0x400101e	      0xb800000000	                              mov eax, 0	      2346	sequencer.c	FUNCTION_72	CALL_9
0x4001023	      0xe800000000	                          call 0x4001028	      2346	sequencer.c	FUNCTION_72	CALL_9
0x4001028	      0xb8ffffffff	                     mov eax, 0xffffffff	      2346	sequencer.c	FUNCTION_72	CALL_9
0x400102d	      0xe9de000000	                           jmp 0x4001110	      2346	sequencer.c	FUNCTION_72	CALL_9
0x4001032	      0x41833c2402	                      cmp dword [r12], 2	      2348	sequencer.c	FUNCTION_72	IF_5	CALL_10
0x4001037	     0xf85ca000000	                           jne 0x4001107	      2348	sequencer.c	FUNCTION_72	IF_5	CALL_10
0x400103d	            0x85db	                           test ebx, ebx	      2348	sequencer.c	FUNCTION_72	IF_5	CALL_10
0x400103f	     0xf8ec2000000	                           jle 0x4001107	      2348	sequencer.c	FUNCTION_72	IF_5	CALL_10
0x4001045	      0xe8eff2ffff	               call sym.rebase_path_done	      2349	sequencer.c	FUNCTION_72	IF_5	CALL_11
0x400104a	          0x4989c5	                            mov r13, rax	      2349	sequencer.c	FUNCTION_72	IF_5	CALL_11
0x400104d	      0xbab6010000	                          mov edx, 0x1b6	        53	fcntl2.h	FUNCTION_215	IF_2	CALL_9
0x4001052	      0xbe41040000	                          mov esi, 0x441	        53	fcntl2.h	FUNCTION_215	IF_2	CALL_9
0x4001057	          0x4889c7	                            mov rdi, rax	        53	fcntl2.h	FUNCTION_215	IF_2	CALL_9
0x400105a	      0xb800000000	                              mov eax, 0	        53	fcntl2.h	FUNCTION_215	IF_2	CALL_9
0x400105f	      0xe800000000	                          call 0x4001064	        53	fcntl2.h	FUNCTION_215	IF_2	CALL_9
0x4001064	          0x4189c4	                           mov r12d, eax	        53	fcntl2.h	FUNCTION_215	IF_2	CALL_9
0x4001067	      0xb800000000	                              mov eax, 0	      2354	sequencer.c	FUNCTION_72	IF_5	IF_6
0x400106c	          0x4585e4	                         test r12d, r12d	      2353	sequencer.c	FUNCTION_72	IF_5	IF_6
0x400106f	     0xf889b000000	                            js 0x4001110	      2353	sequencer.c	FUNCTION_72	IF_5	IF_6
0x4001075	          0x83eb01	                              sub ebx, 1	      2356	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_15
0x4001078	            0x89de	                            mov esi, ebx	      2356	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_15
0x400107a	          0x4889ef	                            mov rdi, rbp	      2356	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_15
0x400107d	      0xe8ebefffff	           call sym.get_item_line_length	      2356	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_15
0x4001082	          0x4189c6	                           mov r14d, eax	      2356	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_15
0x4001085	            0x89de	                            mov esi, ebx	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x4001087	          0x4889ef	                            mov rdi, rbp	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x400108a	      0xe8cdefffff	                  call sym.get_item_line	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x400108f	          0x4963d6	                        movsxd rdx, r14d	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x4001092	          0x4889c6	                            mov rsi, rax	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x4001095	          0x4489e7	                           mov edi, r12d	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x4001098	      0xe800000000	                          call 0x400109d	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x400109d	      0xbb00000000	                              mov ebx, 0	      2351	sequencer.c	FUNCTION_72	IF_5
0x40010a2	          0x4885c0	                           test rax, rax	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x40010a5	            0x7929	                           jns 0x40010d0	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x40010a7	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40010ac	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40010b1	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40010b6	      0xe800000000	                          call 0x40010bb	        54	gettext.h	FUNCTION_118
0x40010bb	          0x4c89ee	                            mov rsi, r13	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x40010be	          0x4889c7	                            mov rdi, rax	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x40010c1	      0xb800000000	                              mov eax, 0	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x40010c6	      0xe800000000	                          call 0x40010cb	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x40010cb	      0xbbffffffff	                     mov ebx, 0xffffffff	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x40010d0	          0x4489e7	                           mov edi, r12d	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_17
0x40010d3	      0xe800000000	                          call 0x40010d8	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_17
0x40010d8	            0x85c0	                           test eax, eax	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_17
0x40010da	            0x7932	                           jns 0x400110e	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_17
0x40010dc	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40010e1	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40010e6	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40010eb	      0xe800000000	                          call 0x40010f0	        54	gettext.h	FUNCTION_118
0x40010f0	          0x4c89ee	                            mov rsi, r13	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_18
0x40010f3	          0x4889c7	                            mov rdi, rax	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_18
0x40010f6	      0xb800000000	                              mov eax, 0	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_18
0x40010fb	      0xe800000000	                          call 0x4001100	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_18
0x4001100	      0xb8ffffffff	                     mov eax, 0xffffffff	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_18
0x4001105	            0xeb09	                           jmp 0x4001110	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_18
0x4001107	      0xb800000000	                              mov eax, 0	      2363	sequencer.c	FUNCTION_72
0x400110c	            0xeb02	                           jmp 0x4001110	      2363	sequencer.c	FUNCTION_72
0x400110e	            0x89d8	                            mov eax, ebx	      2363	sequencer.c	FUNCTION_72
0x4001110	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2364	sequencer.c	FUNCTION_72
0x4001115	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2364	sequencer.c	FUNCTION_72
0x400111e	            0x7405	                            je 0x4001125	      2364	sequencer.c	FUNCTION_72
0x4001120	      0xe800000000	                          call 0x4001125	      2364	sequencer.c	FUNCTION_72
0x4001125	        0x4883c410	                           add rsp, 0x10	      2364	sequencer.c	FUNCTION_72
0x4001129	              0x5b	                                 pop rbx	      2364	sequencer.c	FUNCTION_72
0x400112a	              0x5d	                                 pop rbp	      2364	sequencer.c	FUNCTION_72
0x400112b	            0x415c	                                 pop r12	      2364	sequencer.c	FUNCTION_72
0x400112d	            0x415d	                                 pop r13	      2364	sequencer.c	FUNCTION_72
0x400112f	            0x415e	                                 pop r14	      2364	sequencer.c	FUNCTION_72
0x4001131	              0xc3	                                     ret	      2364	sequencer.c	FUNCTION_72
get_item_line_length	ELSE,0:IF,0:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,2:DO,0	17
0x400006d	            0x4154	                                push r12	      1947	sequencer.c	FUNCTION_58
0x400006f	              0x55	                                push rbp	      1947	sequencer.c	FUNCTION_58
0x4000070	              0x53	                                push rbx	      1947	sequencer.c	FUNCTION_58
0x4000071	          0x4889fd	                            mov rbp, rdi	      1947	sequencer.c	FUNCTION_58
0x4000074	          0x4189f4	                           mov r12d, esi	      1947	sequencer.c	FUNCTION_58
0x4000077	          0x8d7601	                      lea esi, [rsi + 1]	      1948	sequencer.c	FUNCTION_58	CALL_1
0x400007a	      0xe8c1ffffff	           call sym.get_item_line_offset	      1948	sequencer.c	FUNCTION_58	CALL_1
0x400007f	            0x89c3	                            mov ebx, eax	      1948	sequencer.c	FUNCTION_58	CALL_1
0x4000081	          0x4489e6	                           mov esi, r12d	      1949	sequencer.c	FUNCTION_58	CALL_2
0x4000084	          0x4889ef	                            mov rdi, rbp	      1949	sequencer.c	FUNCTION_58	CALL_2
0x4000087	      0xe8b4ffffff	           call sym.get_item_line_offset	      1949	sequencer.c	FUNCTION_58	CALL_2
0x400008c	            0x29c3	                            sub ebx, eax	      1948	sequencer.c	FUNCTION_58	CALL_1
0x400008e	            0x89d8	                            mov eax, ebx	      1948	sequencer.c	FUNCTION_58	CALL_1
0x4000090	              0x5b	                                 pop rbx	      1950	sequencer.c	FUNCTION_58
0x4000091	              0x5d	                                 pop rbp	      1950	sequencer.c	FUNCTION_58
0x4000092	            0x415c	                                 pop r12	      1950	sequencer.c	FUNCTION_58
0x4000094	              0xc3	                                     ret	      1950	sequencer.c	FUNCTION_58
update_head_with_reflog	ELSE,1:IF,3:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,10:DO,0	108
0x4004086	            0x4156	                                push r14	       848	sequencer.c	FUNCTION_30
0x4004088	            0x4155	                                push r13	       848	sequencer.c	FUNCTION_30
0x400408a	            0x4154	                                push r12	       848	sequencer.c	FUNCTION_30
0x400408c	              0x55	                                push rbp	       848	sequencer.c	FUNCTION_30
0x400408d	              0x53	                                push rbx	       848	sequencer.c	FUNCTION_30
0x400408e	        0x4883ec20	                           sub rsp, 0x20	       848	sequencer.c	FUNCTION_30
0x4004092	          0x4989fc	                            mov r12, rdi	       848	sequencer.c	FUNCTION_30
0x4004095	          0x4989f5	                            mov r13, rsi	       848	sequencer.c	FUNCTION_30
0x4004098	          0x4989ce	                            mov r14, rcx	       848	sequencer.c	FUNCTION_30
0x400409b	          0x4c89c3	                             mov rbx, r8	       848	sequencer.c	FUNCTION_30
0x400409e	    0x64488b042528	                mov rax, qword fs:[0x28]	       848	sequencer.c	FUNCTION_30
0x40040a7	      0x4889442418	             mov qword [rsp + 0x18], rax	       848	sequencer.c	FUNCTION_30
0x40040ac	            0x31c0	                            xor eax, eax	       848	sequencer.c	FUNCTION_30
0x40040ae	    0x48c704240000	                      mov qword [rsp], 0	       850	sequencer.c	FUNCTION_30
0x40040b6	    0x48c744240800	                  mov qword [rsp + 8], 0	       850	sequencer.c	FUNCTION_30
0x40040bf	    0x48c744241000	               mov qword [rsp + 0x10], 0	       850	sequencer.c	FUNCTION_30
0x40040c8	          0x4885d2	                           test rdx, rdx	       854	sequencer.c	FUNCTION_30	IF_1
0x40040cb	            0x7430	                            je 0x40040fd	       854	sequencer.c	FUNCTION_30	IF_1
0x40040cd	          0x4889d6	                            mov rsi, rdx	       854	sequencer.c	FUNCTION_30	IF_1
0x40040d0	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_179	CALL_2
0x40040d7	          0x4889d7	                            mov rdi, rdx	       279	strbuf.h	FUNCTION_179	CALL_2
0x40040da	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_179	CALL_2
0x40040dc	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_179	CALL_2
0x40040df	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_179	CALL_2
0x40040e3	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_179	CALL_2
0x40040e6	      0xe800000000	                          call 0x40040eb	       279	strbuf.h	FUNCTION_179	CALL_2
0x40040eb	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_179	CALL_2
0x40040f0	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_179	CALL_2
0x40040f5	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_179	CALL_2
0x40040f8	      0xe800000000	                          call 0x40040fd	       279	strbuf.h	FUNCTION_179	CALL_2
0x40040fd	        0x498b6e10	            mov rbp, qword [r14 + 0x10] 	       859	sequencer.c	FUNCTION_30
0x4004101	      0xbe0a000000	                            mov esi, 0xa	       859	sequencer.c	FUNCTION_30
0x4004106	          0x4889ef	                            mov rdi, rbp	       859	sequencer.c	FUNCTION_30
0x4004109	      0xe800000000	                          call 0x400410e	       859	sequencer.c	FUNCTION_30
0x400410e	          0x4885c0	                           test rax, rax	       860	sequencer.c	FUNCTION_30	IF_2
0x4004111	            0x7414	                            je 0x4004127	       860	sequencer.c	FUNCTION_30	IF_2
0x4004113	        0x488d5001	                      lea rdx, [rax + 1]	       861	sequencer.c	FUNCTION_30	IF_2	CALL_3
0x4004117	          0x4829ea	                            sub rdx, rbp	       861	sequencer.c	FUNCTION_30	IF_2	CALL_3
0x400411a	          0x4889ee	                            mov rsi, rbp	       861	sequencer.c	FUNCTION_30	IF_2	CALL_3
0x400411d	          0x4889e7	                            mov rdi, rsp	       861	sequencer.c	FUNCTION_30	IF_2	CALL_3
0x4004120	      0xe800000000	                          call 0x4004125	       861	sequencer.c	FUNCTION_30	IF_2	CALL_3
0x4004125	            0xeb51	                           jmp 0x4004178	       861	sequencer.c	FUNCTION_30	IF_2	CALL_3
0x4004127	          0x4c89f6	                            mov rsi, r14	       863	sequencer.c	FUNCTION_30	ELSE_1	CALL_4
0x400412a	          0x4889e7	                            mov rdi, rsp	       863	sequencer.c	FUNCTION_30	ELSE_1	CALL_4
0x400412d	      0xe800000000	                          call 0x4004132	       863	sequencer.c	FUNCTION_30	ELSE_1	CALL_4
0x4004132	        0x488b0424	                    mov rax, qword [rsp]	       141	strbuf.h	FUNCTION_176
0x4004136	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_176
0x4004139	            0x740b	                            je 0x4004146	       141	strbuf.h	FUNCTION_176
0x400413b	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x400413f	      0x4839442408	                cmp qword [rsp + 8], rax	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x4004144	            0x750d	                           jne 0x4004153	       227	strbuf.h	FUNCTION_178	IF_1	CALL_1
0x4004146	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_178	CALL_2
0x400414b	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_178	CALL_2
0x400414e	      0xe800000000	                          call 0x4004153	       228	strbuf.h	FUNCTION_178	CALL_2
0x4004153	      0x488b442408	                mov rax, qword [rsp + 8]	       229	strbuf.h	FUNCTION_178
0x4004158	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_178
0x400415c	      0x4889542408	                mov qword [rsp + 8], rdx	       229	strbuf.h	FUNCTION_178
0x4004161	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_178
0x4004166	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_178
0x400416a	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_178
0x400416f	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_178
0x4004174	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_178
0x4004178	          0x4889df	                            mov rdi, rbx	       867	sequencer.c	FUNCTION_30	CALL_6
0x400417b	      0xe800000000	                          call 0x4004180	       867	sequencer.c	FUNCTION_30	CALL_6
0x4004180	          0x4889c5	                            mov rbp, rax	       867	sequencer.c	FUNCTION_30	CALL_6
0x4004183	          0x4885c0	                           test rax, rax	       868	sequencer.c	FUNCTION_30	IF_3
0x4004186	            0x7459	                            je 0x40041e1	       868	sequencer.c	FUNCTION_30	IF_3
0x4004188	      0x498d442404	                      lea rax, [r12 + 4]	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x400418d	          0x4d85e4	                           test r12, r12	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x4004190	      0xb900000000	                              mov ecx, 0	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x4004195	        0x480f45c8	                         cmovne rcx, rax	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x4004199	        0x4883ec08	                              sub rsp, 8	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x400419d	              0x53	                                push rbx	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x400419e	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x40041a3	    0x41b800000000	                              mov r8d, 0	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x40041a9	          0x4c89ea	                            mov rdx, r13	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x40041ac	      0xbe00000000	                              mov esi, 0	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x40041b1	          0x4889ef	                            mov rdi, rbp	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x40041b4	      0xe800000000	                          call 0x40041b9	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x40041b9	        0x4883c410	                           add rsp, 0x10	       868	sequencer.c	FUNCTION_30	IF_3
0x40041bd	    0x41bcffffffff	                    mov r12d, 0xffffffff	       873	sequencer.c	FUNCTION_30	IF_3
0x40041c3	            0x85c0	                           test eax, eax	       868	sequencer.c	FUNCTION_30	IF_3
0x40041c5	            0x7520	                           jne 0x40041e7	       868	sequencer.c	FUNCTION_30	IF_3
0x40041c7	          0x4889de	                            mov rsi, rbx	       872	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x40041ca	          0x4889ef	                            mov rdi, rbp	       872	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x40041cd	      0xe800000000	                          call 0x40041d2	       872	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x40041d2	            0x85c0	                           test eax, eax	       871	sequencer.c	FUNCTION_30	IF_3
0x40041d4	        0x410f95c4	                              setne r12b	       871	sequencer.c	FUNCTION_30	IF_3
0x40041d8	        0x450fb6e4	                        movzx r12d, r12b	       871	sequencer.c	FUNCTION_30	IF_3
0x40041dc	          0x41f7dc	                                neg r12d	       871	sequencer.c	FUNCTION_30	IF_3
0x40041df	            0xeb06	                           jmp 0x40041e7	       871	sequencer.c	FUNCTION_30	IF_3
0x40041e1	    0x41bcffffffff	                    mov r12d, 0xffffffff	       873	sequencer.c	FUNCTION_30	IF_3
0x40041e7	          0x4889ef	                            mov rdi, rbp	       875	sequencer.c	FUNCTION_30	CALL_9
0x40041ea	      0xe800000000	                          call 0x40041ef	       875	sequencer.c	FUNCTION_30	CALL_9
0x40041ef	          0x4889e7	                            mov rdi, rsp	       876	sequencer.c	FUNCTION_30	CALL_10
0x40041f2	      0xe800000000	                          call 0x40041f7	       876	sequencer.c	FUNCTION_30	CALL_10
0x40041f7	          0x4489e0	                           mov eax, r12d	       879	sequencer.c	FUNCTION_30
0x40041fa	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       879	sequencer.c	FUNCTION_30
0x40041ff	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       879	sequencer.c	FUNCTION_30
0x4004208	            0x7405	                            je 0x400420f	       879	sequencer.c	FUNCTION_30
0x400420a	      0xe800000000	                          call 0x400420f	       879	sequencer.c	FUNCTION_30
0x400420f	        0x4883c420	                           add rsp, 0x20	       879	sequencer.c	FUNCTION_30
0x4004213	              0x5b	                                 pop rbx	       879	sequencer.c	FUNCTION_30
0x4004214	              0x5d	                                 pop rbp	       879	sequencer.c	FUNCTION_30
0x4004215	            0x415c	                                 pop r12	       879	sequencer.c	FUNCTION_30
0x4004217	            0x415d	                                 pop r13	       879	sequencer.c	FUNCTION_30
0x4004219	            0x415e	                                 pop r14	       879	sequencer.c	FUNCTION_30
0x400421b	              0xc3	                                     ret	       879	sequencer.c	FUNCTION_30
make_patch	ELSE,1:IF,4:FOR,0:WHILE,0:SWITCH,0:functions,0:CALL,21:DO,0	151
0x4003405	            0x4154	                                push r12	      2406	sequencer.c	FUNCTION_74
0x4003407	              0x55	                                push rbp	      2406	sequencer.c	FUNCTION_74
0x4003408	              0x53	                                push rbx	      2406	sequencer.c	FUNCTION_74
0x4003409	    0x4881ecf00800	                          sub rsp, 0x8f0	      2406	sequencer.c	FUNCTION_74
0x4003410	          0x4889fb	                            mov rbx, rdi	      2406	sequencer.c	FUNCTION_74
0x4003413	          0x4989f4	                            mov r12, rsi	      2406	sequencer.c	FUNCTION_74
0x4003416	    0x64488b042528	                mov rax, qword fs:[0x28]	      2406	sequencer.c	FUNCTION_74
0x400341f	    0x48898424e808	            mov qword [rsp + 0x8e8], rax	      2406	sequencer.c	FUNCTION_74
0x4003427	            0x31c0	                            xor eax, eax	      2406	sequencer.c	FUNCTION_74
0x4003429	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2407	sequencer.c	FUNCTION_74
0x4003432	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2407	sequencer.c	FUNCTION_74
0x400343b	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2407	sequencer.c	FUNCTION_74
0x4003444	      0xe867e2ffff	              call sym.short_commit_name	      2412	sequencer.c	FUNCTION_74	CALL_1
0x4003449	          0x4889c5	                            mov rbp, rax	      2412	sequencer.c	FUNCTION_74	CALL_1
0x400344c	      0xe820cfffff	        call sym.rebase_path_stopped_sha	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4003451	          0x4889c2	                            mov rdx, rax	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4003454	      0xb800000000	                              mov eax, 0	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4003459	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4003460	          0x4889ef	                            mov rdi, rbp	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4003463	            0xf2ae	              repne scasb al, byte [rdi]	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4003465	          0x48f7d1	                                 not rcx	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4003468	        0x488d71ff	                      lea rsi, [rcx - 1]	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x400346c	      0xb901000000	                              mov ecx, 1	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4003471	          0x4889ef	                            mov rdi, rbp	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4003474	      0xe8b9d7ffff	                  call sym.write_message	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4003479	            0x85c0	                           test eax, eax	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x400347b	     0xf880d020000	                            js 0x400368e	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4003481	        0x488d5304	                      lea rdx, [rbx + 4]	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x4003485	    0x41b900000000	                              mov r9d, 0	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x400348b	    0x41b801000000	                              mov r8d, 1	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x4003491	      0xb900000000	                              mov ecx, 0	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x4003496	      0xbe00000000	                              mov esi, 0	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x400349b	      0xbf00000000	                              mov edi, 0	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x40034a0	      0xe800000000	                          call 0x40034a5	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x40034a5	      0xbd00000000	                              mov ebp, 0	      2410	sequencer.c	FUNCTION_74
0x40034aa	            0x85c0	                           test eax, eax	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x40034ac	            0x742b	                            je 0x40034d9	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x40034ae	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x40034b3	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x40034b8	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x40034bd	      0xe800000000	                          call 0x40034c2	        54	gettext.h	FUNCTION_118
0x40034c2	      0xbe00000000	                              mov esi, 0	      2417	sequencer.c	FUNCTION_74	CALL_6
0x40034c7	          0x4889c7	                            mov rdi, rax	      2417	sequencer.c	FUNCTION_74	CALL_6
0x40034ca	      0xb800000000	                              mov eax, 0	      2417	sequencer.c	FUNCTION_74	CALL_6
0x40034cf	      0xe800000000	                          call 0x40034d4	      2417	sequencer.c	FUNCTION_74	CALL_6
0x40034d4	      0xbdffffffff	                     mov ebp, 0xffffffff	      2417	sequencer.c	FUNCTION_74	CALL_6
0x40034d9	          0x4c89e7	                            mov rdi, r12	      2419	sequencer.c	FUNCTION_74	CALL_8
0x40034dc	      0xe8e8feffff	                        call sym.get_dir	      2419	sequencer.c	FUNCTION_74	CALL_8
0x40034e1	          0x4889c2	                            mov rdx, rax	      2419	sequencer.c	FUNCTION_74	CALL_8
0x40034e4	      0xbe00000000	                              mov esi, 0	      2419	sequencer.c	FUNCTION_74	CALL_8
0x40034e9	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2419	sequencer.c	FUNCTION_74	CALL_8
0x40034ee	      0xb800000000	                              mov eax, 0	      2419	sequencer.c	FUNCTION_74	CALL_8
0x40034f3	      0xe800000000	                          call 0x40034f8	      2419	sequencer.c	FUNCTION_74	CALL_8
0x40034f8	      0x488d542430	                   lea rdx, [rsp + 0x30]	        90	string3.h	FUNCTION_189	CALL_5
0x40034fd	      0xb916010000	                          mov ecx, 0x116	        90	string3.h	FUNCTION_189	CALL_5
0x4003502	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_189	CALL_5
0x4003507	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_189	CALL_5
0x400350a	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_189	CALL_5
0x400350d	      0xbe00000000	                              mov esi, 0	      2421	sequencer.c	FUNCTION_74	CALL_9
0x4003512	          0x4889d7	                            mov rdi, rdx	      2421	sequencer.c	FUNCTION_74	CALL_9
0x4003515	      0xe800000000	                          call 0x400351a	      2421	sequencer.c	FUNCTION_74	CALL_9
0x400351a	    0xc78424d00000	               mov dword [rsp + 0xd0], 0	      2422	sequencer.c	FUNCTION_74
0x4003525	    0xc78424880500	          mov dword [rsp + 0x588], 0x10 	      2424	sequencer.c	FUNCTION_74
0x4003530	    0x808c24ab0000	              or byte [rsp + 0xab], 0x80	      2425	sequencer.c	FUNCTION_74
0x4003538	     0xfb68424a900	           movzx eax, byte [rsp + 0xa9] 	      2426	sequencer.c	FUNCTION_74
0x4003540	          0x83c809	                               or eax, 9	      2426	sequencer.c	FUNCTION_74
0x4003543	    0x888424a90000	               mov byte [rsp + 0xa9], al	      2426	sequencer.c	FUNCTION_74
0x400354a	      0xbe00000000	                              mov esi, 0	      2427	sequencer.c	FUNCTION_74
0x400354f	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2427	sequencer.c	FUNCTION_74
0x4003554	      0xe800000000	                          call 0x4003559	      2427	sequencer.c	FUNCTION_74
0x4003559	    0x488984242806	            mov qword [rsp + 0x628], rax	      2427	sequencer.c	FUNCTION_74
0x4003561	    0xc78424680500	              mov dword [rsp + 0x568], 0	      2428	sequencer.c	FUNCTION_74
0x400356c	          0x4885c0	                           test rax, rax	      2429	sequencer.c	FUNCTION_74	IF_3
0x400356f	            0x7530	                           jne 0x40035a1	      2429	sequencer.c	FUNCTION_74	IF_3
0x4003571	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	      2430	sequencer.c	FUNCTION_74	CALL_10
0x4003576	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_118
0x400357b	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_118
0x4003580	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_118
0x4003585	      0xe800000000	                          call 0x400358a	        54	gettext.h	FUNCTION_118
0x400358a	          0x4889ee	                            mov rsi, rbp	      2430	sequencer.c	FUNCTION_74	CALL_10
0x400358d	          0x4889c7	                            mov rdi, rax	      2430	sequencer.c	FUNCTION_74	CALL_10
0x4003590	      0xb800000000	                              mov eax, 0	      2430	sequencer.c	FUNCTION_74	CALL_10
0x4003595	      0xe800000000	                          call 0x400359a	      2430	sequencer.c	FUNCTION_74	CALL_10
0x400359a	      0xbdffffffff	                     mov ebp, 0xffffffff	      2430	sequencer.c	FUNCTION_74	CALL_10
0x400359f	            0xeb1c	                           jmp 0x40035bd	      2430	sequencer.c	FUNCTION_74	CALL_10
0x40035a1	          0x4889de	                            mov rsi, rbx	      2432	sequencer.c	FUNCTION_74	ELSE_1	CALL_11
0x40035a4	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2432	sequencer.c	FUNCTION_74	ELSE_1	CALL_11
0x40035a9	      0xe800000000	                          call 0x40035ae	      2432	sequencer.c	FUNCTION_74	ELSE_1	CALL_11
0x40035ae	             0x9c5	                             or ebp, eax	      2432	sequencer.c	FUNCTION_74	ELSE_1	CALL_11
0x40035b0	    0x488bbc242806	           mov rdi, qword [rsp + 0x628] 	      2433	sequencer.c	FUNCTION_74	ELSE_1	CALL_12
0x40035b8	      0xe800000000	                          call 0x40035bd	      2433	sequencer.c	FUNCTION_74	ELSE_1	CALL_12
0x40035bd	    0x48c744241800	               mov qword [rsp + 0x18], 0	       164	strbuf.h	FUNCTION_177
0x40035c6	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       165	strbuf.h	FUNCTION_177	IF_2
0x40035cb	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_177	IF_2
0x40035d1	            0x7405	                            je 0x40035d8	       165	strbuf.h	FUNCTION_177	IF_2
0x40035d3	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_177	IF_2
0x40035d6	            0xeb22	                           jmp 0x40035fa	       166	strbuf.h	FUNCTION_177	IF_2
0x40035d8	    0x803d00000000	                cmp byte [0x040035df], 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40035df	            0x7419	                            je 0x40035fa	       168	strbuf.h	FUNCTION_177	CALL_2
0x40035e1	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40035e6	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_177	CALL_2
0x40035eb	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40035f0	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_177	CALL_2
0x40035f5	      0xe800000000	                          call 0x40035fa	       168	strbuf.h	FUNCTION_177	CALL_2
0x40035fa	          0x4c89e7	                            mov rdi, r12	      2437	sequencer.c	FUNCTION_74	CALL_14
0x40035fd	      0xe8c7fdffff	                        call sym.get_dir	      2437	sequencer.c	FUNCTION_74	CALL_14
0x4003602	          0x4889c2	                            mov rdx, rax	      2437	sequencer.c	FUNCTION_74	CALL_14
0x4003605	      0xbe00000000	                              mov esi, 0	      2437	sequencer.c	FUNCTION_74	CALL_14
0x400360a	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2437	sequencer.c	FUNCTION_74	CALL_14
0x400360f	      0xb800000000	                              mov eax, 0	      2437	sequencer.c	FUNCTION_74	CALL_14
0x4003614	      0xe800000000	                          call 0x4003619	      2437	sequencer.c	FUNCTION_74	CALL_14
0x4003619	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2438	sequencer.c	FUNCTION_74	IF_4	CALL_15
0x400361e	      0xe800000000	                          call 0x4003623	      2438	sequencer.c	FUNCTION_74	IF_4	CALL_15
0x4003623	            0x85c0	                           test eax, eax	      2438	sequencer.c	FUNCTION_74	IF_4	CALL_15
0x4003625	            0x7559	                           jne 0x4003680	      2438	sequencer.c	FUNCTION_74	IF_4	CALL_15
0x4003627	      0xbe00000000	                              mov esi, 0	      2439	sequencer.c	FUNCTION_74	IF_4	CALL_16
0x400362c	          0x4889df	                            mov rdi, rbx	      2439	sequencer.c	FUNCTION_74	IF_4	CALL_16
0x400362f	      0xe800000000	                          call 0x4003634	      2439	sequencer.c	FUNCTION_74	IF_4	CALL_16
0x4003634	          0x4989c4	                            mov r12, rax	      2439	sequencer.c	FUNCTION_74	IF_4	CALL_16
0x4003637	      0x488d742408	                      lea rsi, [rsp + 8]	      2440	sequencer.c	FUNCTION_74	IF_4	CALL_17
0x400363c	          0x4889c7	                            mov rdi, rax	      2440	sequencer.c	FUNCTION_74	IF_4	CALL_17
0x400363f	      0xe800000000	                          call 0x4003644	      2440	sequencer.c	FUNCTION_74	IF_4	CALL_17
0x4003644	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x4003649	      0xb800000000	                              mov eax, 0	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x400364e	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x4003655	          0x4c89c7	                             mov rdi, r8	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x4003658	            0xf2ae	              repne scasb al, byte [rdi]	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x400365a	          0x48f7d1	                                 not rcx	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x400365d	        0x488d71ff	                      lea rsi, [rcx - 1]	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x4003661	      0xb901000000	                              mov ecx, 1	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x4003666	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x400366b	          0x4c89c7	                             mov rdi, r8	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x400366e	      0xe8bfd5ffff	                  call sym.write_message	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x4003673	             0x9c5	                             or ebp, eax	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x4003675	          0x4c89e6	                            mov rsi, r12	      2442	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x4003678	          0x4889df	                            mov rdi, rbx	      2442	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x400367b	      0xe800000000	                          call 0x4003680	      2442	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x4003680	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2444	sequencer.c	FUNCTION_74	CALL_21
0x4003685	      0xe800000000	                          call 0x400368a	      2444	sequencer.c	FUNCTION_74	CALL_21
0x400368a	            0x89e8	                            mov eax, ebp	      2446	sequencer.c	FUNCTION_74
0x400368c	            0xeb05	                           jmp 0x4003693	      2446	sequencer.c	FUNCTION_74
0x400368e	      0xb8ffffffff	                     mov eax, 0xffffffff	      2414	sequencer.c	FUNCTION_74	IF_1
0x4003693	    0x488b9c24e808	           mov rbx, qword [rsp + 0x8e8] 	      2447	sequencer.c	FUNCTION_74
0x400369b	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2447	sequencer.c	FUNCTION_74
0x40036a4	            0x7405	                            je 0x40036ab	      2447	sequencer.c	FUNCTION_74
0x40036a6	      0xe800000000	                          call 0x40036ab	      2447	sequencer.c	FUNCTION_74
0x40036ab	    0x4881c4f00800	                          add rsp, 0x8f0	      2447	sequencer.c	FUNCTION_74
0x40036b2	              0x5b	                                 pop rbx	      2447	sequencer.c	FUNCTION_74
0x40036b3	              0x5d	                                 pop rbp	      2447	sequencer.c	FUNCTION_74
0x40036b4	            0x415c	                                 pop r12	      2447	sequencer.c	FUNCTION_74
0x40036b6	              0xc3	                                     ret	      2447	sequencer.c	FUNCTION_74
flush_rewritten_pending	ELSE,0:IF,2:FOR,0:WHILE,1:SWITCH,0:functions,0:CALL,10:DO,0	68
0x40011d4	            0x4154	                                push r12	      1457	sequencer.c	FUNCTION_46
0x40011d6	              0x55	                                push rbp	      1457	sequencer.c	FUNCTION_46
0x40011d7	              0x53	                                push rbx	      1457	sequencer.c	FUNCTION_46
0x40011d8	        0x4883ec40	                           sub rsp, 0x40	      1457	sequencer.c	FUNCTION_46
0x40011dc	    0x64488b042528	                mov rax, qword fs:[0x28]	      1457	sequencer.c	FUNCTION_46
0x40011e5	      0x4889442438	             mov qword [rsp + 0x38], rax	      1457	sequencer.c	FUNCTION_46
0x40011ea	            0x31c0	                            xor eax, eax	      1457	sequencer.c	FUNCTION_46
0x40011ec	    0x48c704240000	                      mov qword [rsp], 0	      1458	sequencer.c	FUNCTION_46
0x40011f4	    0x48c744240800	                  mov qword [rsp + 8], 0	      1458	sequencer.c	FUNCTION_46
0x40011fd	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1458	sequencer.c	FUNCTION_46
0x4001206	      0xe89ef1ffff	  call sym.rebase_path_rewritten_pending	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x400120b	      0xba52000000	                           mov edx, 0x52	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x4001210	          0x4889c6	                            mov rsi, rax	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x4001213	          0x4889e7	                            mov rdi, rsp	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x4001216	      0xe800000000	                          call 0x400121b	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x400121b	          0x4885c0	                           test rax, rax	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x400121e	     0xf8e9d000000	                           jle 0x40012c1	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x4001224	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x4001229	      0xbf00000000	                              mov edi, 0	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x400122e	      0xe800000000	                          call 0x4001233	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x4001233	            0x85c0	                           test eax, eax	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x4001235	     0xf8586000000	                           jne 0x40012c1	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x400123b	      0xe8a1f1ffff	     call sym.rebase_path_rewritten_list	      1464	sequencer.c	FUNCTION_46	IF_1	CALL_5
0x4001240	      0xbe00000000	                              mov esi, 0	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x4001245	          0x4889c7	                            mov rdi, rax	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x4001248	      0xe800000000	                          call 0x400124d	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x400124d	          0x4989c4	                            mov r12, rax	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x4001250	          0x4885c0	                           test rax, rax	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x4001253	            0x746c	                            je 0x40012c1	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x4001255	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	      1465	sequencer.c	FUNCTION_46	IF_1
0x400125a	        0x807d0000	                       cmp byte [rbp], 0	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x400125e	            0x744c	                            je 0x40012ac	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x4001260	      0xbe0a000000	                            mov esi, 0xa	      1468	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x4001265	          0x4889ef	                            mov rdi, rbp	      1468	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x4001268	      0xe800000000	                          call 0x400126d	      1468	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x400126d	          0x4889c3	                            mov rbx, rax	      1468	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x4001270	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x4001275	      0xe800000000	                          call 0x400127a	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x400127a	          0x4989c1	                             mov r9, rax	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x400127d	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_575
0x4001280	          0x4829e9	                            sub rcx, rbp	        97	stdio2.h	CALL_575
0x4001283	          0x4989e8	                             mov r8, rbp	        97	stdio2.h	CALL_575
0x4001286	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_575
0x400128b	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_575
0x4001290	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_575
0x4001293	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_575
0x4001298	      0xe800000000	                          call 0x400129d	        97	stdio2.h	CALL_575
0x400129d	          0x803b00	                       cmp byte [rbx], 0	      1471	sequencer.c	FUNCTION_46	IF_1	WHILE_1	IF_2
0x40012a0	            0x740a	                            je 0x40012ac	      1471	sequencer.c	FUNCTION_46	IF_1	WHILE_1	IF_2
0x40012a2	        0x488d6b01	                      lea rbp, [rbx + 1]	      1473	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x40012a6	        0x807b0100	                   cmp byte [rbx + 1], 0	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x40012aa	            0x75b4	                           jne 0x4001260	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x40012ac	          0x4c89e7	                            mov rdi, r12	      1475	sequencer.c	FUNCTION_46	IF_1	CALL_7
0x40012af	      0xe800000000	                          call 0x40012b4	      1475	sequencer.c	FUNCTION_46	IF_1	CALL_7
0x40012b4	      0xe8f0f0ffff	  call sym.rebase_path_rewritten_pending	      1476	sequencer.c	FUNCTION_46	IF_1	CALL_9
0x40012b9	          0x4889c7	                            mov rdi, rax	      1476	sequencer.c	FUNCTION_46	IF_1	CALL_9
0x40012bc	      0xe800000000	                          call 0x40012c1	      1476	sequencer.c	FUNCTION_46	IF_1	CALL_9
0x40012c1	          0x4889e7	                            mov rdi, rsp	      1478	sequencer.c	FUNCTION_46	CALL_10
0x40012c4	      0xe800000000	                          call 0x40012c9	      1478	sequencer.c	FUNCTION_46	CALL_10
0x40012c9	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1479	sequencer.c	FUNCTION_46
0x40012ce	    0x644833042528	                xor rax, qword fs:[0x28]	      1479	sequencer.c	FUNCTION_46
0x40012d7	            0x7405	                            je 0x40012de	      1479	sequencer.c	FUNCTION_46
0x40012d9	      0xe800000000	                          call 0x40012de	      1479	sequencer.c	FUNCTION_46
0x40012de	        0x4883c440	                           add rsp, 0x40	      1479	sequencer.c	FUNCTION_46
0x40012e2	              0x5b	                                 pop rbx	      1479	sequencer.c	FUNCTION_46
0x40012e3	              0x5d	                                 pop rbp	      1479	sequencer.c	FUNCTION_46
0x40012e4	            0x415c	                                 pop r12	      1479	sequencer.c	FUNCTION_46
0x40012e6	              0xc3	                                     ret	      1479	sequencer.c	FUNCTION_46
