remove_junk	FOR,0:SWITCH,0:IF,3:ELSE,0:CALL,6:functions,0:WHILE,0:DO,0	61
0x400010f	        0x4883ec28	                           sub rsp, 0x28	       172	worktree.c	FUNCTION_5
0x4000113	    0x64488b042528	                mov rax, qword fs:[0x28]	       172	worktree.c	FUNCTION_5
0x400011c	      0x4889442418	             mov qword [rsp + 0x18], rax	       172	worktree.c	FUNCTION_5
0x4000121	            0x31c0	                            xor eax, eax	       172	worktree.c	FUNCTION_5
0x4000123	    0x48c704240000	                      mov qword [rsp], 0	       173	worktree.c	FUNCTION_5
0x400012b	    0x48c744240800	                  mov qword [rsp + 8], 0	       173	worktree.c	FUNCTION_5
0x4000134	    0x48c744241000	               mov qword [rsp + 0x10], 0	       173	worktree.c	FUNCTION_5
0x400013d	    0x833d00000000	               cmp dword [0x04000144], 0	       174	worktree.c	FUNCTION_5	IF_1	CALL_1
0x4000144	     0xf84c8000000	                            je 0x4000212	       174	worktree.c	FUNCTION_5	IF_1	CALL_1
0x400014a	      0xe800000000	                          call 0x400014f	       174	worktree.c	FUNCTION_5	IF_1	CALL_1
0x400014f	    0x3b0500000000	            cmp eax, dword [0x04000155] 	       174	worktree.c	FUNCTION_5	IF_1	CALL_1
0x4000155	     0xf85b7000000	                           jne 0x4000212	       174	worktree.c	FUNCTION_5	IF_1	CALL_1
0x400015b	    0x488b35000000	            mov rsi, qword [0x04000162] 	       176	worktree.c	FUNCTION_5	IF_2
0x4000162	          0x4885f6	                           test rsi, rsi	       176	worktree.c	FUNCTION_5	IF_2
0x4000165	            0x746a	                            je 0x40001d1	       176	worktree.c	FUNCTION_5	IF_2
0x4000167	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_29	CALL_2
0x400016c	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000173	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000176	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000178	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_29	CALL_2
0x400017b	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_29	CALL_2
0x400017f	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000182	      0xe800000000	                          call 0x4000187	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000187	      0xbe00000000	                              mov esi, 0	       178	worktree.c	FUNCTION_5	IF_2	CALL_3
0x400018c	          0x4889e7	                            mov rdi, rsp	       178	worktree.c	FUNCTION_5	IF_2	CALL_3
0x400018f	      0xe800000000	                          call 0x4000194	       178	worktree.c	FUNCTION_5	IF_2	CALL_3
0x4000194	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_27
0x400019d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_27	IF_2
0x40001a2	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_27	IF_2
0x40001a8	            0x7405	                            je 0x40001af	       165	strbuf.h	FUNCTION_27	IF_2
0x40001aa	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_27	IF_2
0x40001ad	            0xeb22	                           jmp 0x40001d1	       166	strbuf.h	FUNCTION_27	IF_2
0x40001af	    0x803d00000000	                cmp byte [0x040001b6], 0	       168	strbuf.h	FUNCTION_27	CALL_2
0x40001b6	            0x7419	                            je 0x40001d1	       168	strbuf.h	FUNCTION_27	CALL_2
0x40001b8	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_27	CALL_2
0x40001bd	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_27	CALL_2
0x40001c2	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_27	CALL_2
0x40001c7	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_27	CALL_2
0x40001cc	      0xe800000000	                          call 0x40001d1	       168	strbuf.h	FUNCTION_27	CALL_2
0x40001d1	    0x488b35000000	            mov rsi, qword [0x040001d8] 	       181	worktree.c	FUNCTION_5	IF_3
0x40001d8	          0x4885f6	                           test rsi, rsi	       181	worktree.c	FUNCTION_5	IF_3
0x40001db	            0x742d	                            je 0x400020a	       181	worktree.c	FUNCTION_5	IF_3
0x40001dd	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_29	CALL_2
0x40001e2	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_29	CALL_2
0x40001e9	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_29	CALL_2
0x40001ec	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_29	CALL_2
0x40001ee	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_29	CALL_2
0x40001f1	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_29	CALL_2
0x40001f5	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_29	CALL_2
0x40001f8	      0xe800000000	                          call 0x40001fd	       279	strbuf.h	FUNCTION_29	CALL_2
0x40001fd	      0xbe00000000	                              mov esi, 0	       183	worktree.c	FUNCTION_5	IF_3	CALL_5
0x4000202	          0x4889e7	                            mov rdi, rsp	       183	worktree.c	FUNCTION_5	IF_3	CALL_5
0x4000205	      0xe800000000	                          call 0x400020a	       183	worktree.c	FUNCTION_5	IF_3	CALL_5
0x400020a	          0x4889e7	                            mov rdi, rsp	       185	worktree.c	FUNCTION_5	CALL_6
0x400020d	      0xe800000000	                          call 0x4000212	       185	worktree.c	FUNCTION_5	CALL_6
0x4000212	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       186	worktree.c	FUNCTION_5
0x4000217	    0x644833042528	                xor rax, qword fs:[0x28]	       186	worktree.c	FUNCTION_5
0x4000220	            0x7405	                            je 0x4000227	       186	worktree.c	FUNCTION_5
0x4000222	      0xe800000000	                          call 0x4000227	       186	worktree.c	FUNCTION_5
0x4000227	        0x4883c428	                           add rsp, 0x28	       186	worktree.c	FUNCTION_5
0x400022b	              0xc3	                                     ret	       186	worktree.c	FUNCTION_5
git_worktree_config	FOR,0:SWITCH,0:IF,1:ELSE,0:CALL,3:functions,0:WHILE,0:DO,0	25
0x4000040	              0x53	                                push rbx	        40	worktree.c	FUNCTION_1
0x4000041	          0x4889f8	                            mov rax, rdi	        40	worktree.c	FUNCTION_1
0x4000044	          0x4989f0	                             mov r8, rsi	        40	worktree.c	FUNCTION_1
0x4000047	      0xbf00000000	                              mov edi, 0	        41	worktree.c	FUNCTION_1	IF_1	CALL_1
0x400004c	      0xb915000000	                           mov ecx, 0x15	        41	worktree.c	FUNCTION_1	IF_1	CALL_1
0x4000051	          0x4889c6	                            mov rsi, rax	        41	worktree.c	FUNCTION_1	IF_1	CALL_1
0x4000054	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        41	worktree.c	FUNCTION_1	IF_1	CALL_1
0x4000056	           0xf97c3	                                 seta bl	        41	worktree.c	FUNCTION_1	IF_1	CALL_1
0x4000059	           0xf92c1	                                 setb cl	        41	worktree.c	FUNCTION_1	IF_1	CALL_1
0x400005c	            0x29cb	                            sub ebx, ecx	        41	worktree.c	FUNCTION_1	IF_1	CALL_1
0x400005e	           0xfbedb	                           movsx ebx, bl	        41	worktree.c	FUNCTION_1	IF_1	CALL_1
0x4000061	            0x85db	                           test ebx, ebx	        41	worktree.c	FUNCTION_1	IF_1	CALL_1
0x4000063	            0x7513	                           jne 0x4000078	        41	worktree.c	FUNCTION_1	IF_1	CALL_1
0x4000065	          0x4c89c6	                             mov rsi, r8	        42	worktree.c	FUNCTION_1	IF_1	CALL_2
0x4000068	          0x4889c7	                            mov rdi, rax	        42	worktree.c	FUNCTION_1	IF_1	CALL_2
0x400006b	      0xe800000000	                          call 0x4000070	        42	worktree.c	FUNCTION_1	IF_1	CALL_2
0x4000070	    0x890500000000	            mov dword [0x04000076], eax 	        42	worktree.c	FUNCTION_1	IF_1	CALL_2
0x4000076	            0xeb0d	                           jmp 0x4000085	        43	worktree.c	FUNCTION_1	IF_1
0x4000078	          0x4c89c6	                             mov rsi, r8	        46	worktree.c	FUNCTION_1	CALL_3
0x400007b	          0x4889c7	                            mov rdi, rax	        46	worktree.c	FUNCTION_1	CALL_3
0x400007e	      0xe800000000	                          call 0x4000083	        46	worktree.c	FUNCTION_1	CALL_3
0x4000083	            0x89c3	                            mov ebx, eax	        46	worktree.c	FUNCTION_1	CALL_3
0x4000085	            0x89d8	                            mov eax, ebx	        47	worktree.c	FUNCTION_1
0x4000087	              0x5b	                                 pop rbx	        47	worktree.c	FUNCTION_1
0x4000088	              0xc3	                                     ret	        47	worktree.c	FUNCTION_1
validate_no_submodules	FOR,1:SWITCH,0:IF,3:ELSE,0:CALL,7:functions,0:WHILE,0:DO,0	63
0x4000244	              0x55	                                push rbp	       667	worktree.c	FUNCTION_18
0x4000245	              0x53	                                push rbx	       667	worktree.c	FUNCTION_18
0x4000246	    0x4881ece80000	                           sub rsp, 0xe8	       667	worktree.c	FUNCTION_18
0x400024d	          0x4889fb	                            mov rbx, rdi	       667	worktree.c	FUNCTION_18
0x4000250	    0x64488b042528	                mov rax, qword fs:[0x28]	       667	worktree.c	FUNCTION_18
0x4000259	    0x48898424d800	             mov qword [rsp + 0xd8], rax	       667	worktree.c	FUNCTION_18
0x4000261	            0x31c0	                            xor eax, eax	       667	worktree.c	FUNCTION_18
0x4000263	          0x4889e7	                            mov rdi, rsp	       668	worktree.c	FUNCTION_18
0x4000266	      0xb91a000000	                           mov ecx, 0x1a	       668	worktree.c	FUNCTION_18
0x400026b	          0xf348ab	              rep stosq qword [rdi], rax	       668	worktree.c	FUNCTION_18
0x400026e	          0x4889df	                            mov rdi, rbx	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x4000271	      0xe800000000	                          call 0x4000276	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x4000276	          0x4889c5	                            mov rbp, rax	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x4000279	      0xbe00000000	                              mov esi, 0	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x400027e	          0x4889df	                            mov rdi, rbx	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x4000281	      0xb800000000	                              mov eax, 0	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x4000286	      0xe800000000	                          call 0x400028b	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x400028b	          0x4889ea	                            mov rdx, rbp	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x400028e	          0x4889c6	                            mov rsi, rax	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x4000291	          0x4889e7	                            mov rdi, rsp	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x4000294	      0xe800000000	                          call 0x4000299	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x4000299	            0x85c0	                           test eax, eax	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x400029b	            0x7e6f	                           jle 0x400030c	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x400029d	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	       673	worktree.c	FUNCTION_18	IF_1	FOR_1
0x40002a1	            0x85c9	                           test ecx, ecx	       673	worktree.c	FUNCTION_18	IF_1	FOR_1
0x40002a3	            0x7467	                            je 0x400030c	       673	worktree.c	FUNCTION_18	IF_1	FOR_1
0x40002a5	        0x488b3424	                    mov rsi, qword [rsp]	       674	worktree.c	FUNCTION_18	IF_1	FOR_1
0x40002a9	          0x488b06	                    mov rax, qword [rsi]	       676	worktree.c	FUNCTION_18	IF_1	FOR_1	IF_2	CALL_4
0x40002ac	          0x8b4034	            mov eax, dword [rax + 0x34] 	       676	worktree.c	FUNCTION_18	IF_1	FOR_1	IF_2	CALL_4
0x40002af	      0x2500f00000	                         and eax, 0xf000	       676	worktree.c	FUNCTION_18	IF_1	FOR_1	IF_2	CALL_4
0x40002b4	      0x3d00e00000	                         cmp eax, 0xe000	       676	worktree.c	FUNCTION_18	IF_1	FOR_1	IF_2	CALL_4
0x40002b9	            0x7428	                            je 0x40002e3	       676	worktree.c	FUNCTION_18	IF_1	FOR_1	IF_2	CALL_4
0x40002bb	      0xb800000000	                              mov eax, 0	       676	worktree.c	FUNCTION_18	IF_1	FOR_1	IF_2	CALL_4
0x40002c0	            0xeb18	                           jmp 0x40002da	       676	worktree.c	FUNCTION_18	IF_1	FOR_1	IF_2	CALL_4
0x40002c2	          0x4863d0	                         movsxd rdx, eax	       674	worktree.c	FUNCTION_18	IF_1	FOR_1
0x40002c5	        0x488b14d6	            mov rdx, qword [rsi + rdx*8]	       676	worktree.c	FUNCTION_18	IF_1	FOR_1	IF_2	CALL_4
0x40002c9	          0x8b5234	            mov edx, dword [rdx + 0x34] 	       676	worktree.c	FUNCTION_18	IF_1	FOR_1	IF_2	CALL_4
0x40002cc	    0x81e200f00000	                         and edx, 0xf000	       676	worktree.c	FUNCTION_18	IF_1	FOR_1	IF_2	CALL_4
0x40002d2	    0x81fa00e00000	                         cmp edx, 0xe000	       676	worktree.c	FUNCTION_18	IF_1	FOR_1	IF_2	CALL_4
0x40002d8	            0x7409	                            je 0x40002e3	       676	worktree.c	FUNCTION_18	IF_1	FOR_1	IF_2	CALL_4
0x40002da	          0x83c001	                              add eax, 1	       673	worktree.c	FUNCTION_18	IF_1	FOR_1
0x40002dd	            0x39c8	                            cmp eax, ecx	       673	worktree.c	FUNCTION_18	IF_1	FOR_1
0x40002df	            0x75e1	                           jne 0x40002c2	       673	worktree.c	FUNCTION_18	IF_1	FOR_1
0x40002e1	            0xeb29	                           jmp 0x400030c	       673	worktree.c	FUNCTION_18	IF_1	FOR_1
0x40002e3	          0x4889e7	                            mov rdi, rsp	       682	worktree.c	FUNCTION_18	CALL_5
0x40002e6	      0xe800000000	                          call 0x40002eb	       682	worktree.c	FUNCTION_18	CALL_5
0x40002eb	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_38
0x40002f0	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_38
0x40002f5	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_38
0x40002fa	      0xe800000000	                          call 0x40002ff	        54	gettext.h	FUNCTION_38
0x40002ff	          0x4889c7	                            mov rdi, rax	       685	worktree.c	FUNCTION_18	CALL_7
0x4000302	      0xb800000000	                              mov eax, 0	       685	worktree.c	FUNCTION_18	CALL_7
0x4000307	      0xe800000000	                          call 0x400030c	       685	worktree.c	FUNCTION_18	CALL_7
0x400030c	          0x4889e7	                            mov rdi, rsp	       682	worktree.c	FUNCTION_18	CALL_5
0x400030f	      0xe800000000	                          call 0x4000314	       682	worktree.c	FUNCTION_18	CALL_5
0x4000314	    0x488b8424d800	            mov rax, qword [rsp + 0xd8] 	       686	worktree.c	FUNCTION_18
0x400031c	    0x644833042528	                xor rax, qword fs:[0x28]	       686	worktree.c	FUNCTION_18
0x4000325	            0x7405	                            je 0x400032c	       686	worktree.c	FUNCTION_18
0x4000327	      0xe800000000	                          call 0x400032c	       686	worktree.c	FUNCTION_18
0x400032c	    0x4881c4e80000	                           add rsp, 0xe8	       686	worktree.c	FUNCTION_18
0x4000333	              0x5b	                                 pop rbx	       686	worktree.c	FUNCTION_18
0x4000334	              0x5d	                                 pop rbp	       686	worktree.c	FUNCTION_18
0x4000335	              0xc3	                                     ret	       686	worktree.c	FUNCTION_18
worktree_basename	FOR,1:SWITCH,0:IF,1:ELSE,0:CALL,1:functions,0:WHILE,1:DO,0	43
0x4000089	          0x4989f8	                             mov r8, rdi	       196	worktree.c	FUNCTION_7
0x400008c	      0xb800000000	                              mov eax, 0	       200	worktree.c	FUNCTION_7	CALL_1
0x4000091	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       200	worktree.c	FUNCTION_7	CALL_1
0x4000098	            0xf2ae	              repne scasb al, byte [rdi]	       200	worktree.c	FUNCTION_7	CALL_1
0x400009a	          0x48f7d1	                                 not rcx	       200	worktree.c	FUNCTION_7	CALL_1
0x400009d	        0x4883e901	                              sub rcx, 1	       200	worktree.c	FUNCTION_7	CALL_1
0x40000a1	            0x89ca	                            mov edx, ecx	       200	worktree.c	FUNCTION_7	CALL_1
0x40000a3	            0x85c9	                           test ecx, ecx	       201	worktree.c	FUNCTION_7	WHILE_1
0x40000a5	            0x741d	                            je 0x40000c4	       201	worktree.c	FUNCTION_7	WHILE_1
0x40000a7	          0x4863c9	                         movsxd rcx, ecx	       201	worktree.c	FUNCTION_7	WHILE_1
0x40000aa	    0x41807c08ff2f	          cmp byte [r8 + rcx - 1], 0x2f 	       201	worktree.c	FUNCTION_7	WHILE_1
0x40000b0	            0x754d	                           jne 0x40000ff	       201	worktree.c	FUNCTION_7	WHILE_1
0x40000b2	          0x83ea01	                              sub edx, 1	       201	worktree.c	FUNCTION_7	WHILE_1
0x40000b5	            0x740d	                            je 0x40000c4	       201	worktree.c	FUNCTION_7	WHILE_1
0x40000b7	          0x4863c2	                         movsxd rax, edx	       201	worktree.c	FUNCTION_7	WHILE_1
0x40000ba	    0x41807c00ff2f	          cmp byte [r8 + rax - 1], 0x2f 	       201	worktree.c	FUNCTION_7	WHILE_1
0x40000c0	            0x74f0	                            je 0x40000b2	       201	worktree.c	FUNCTION_7	WHILE_1
0x40000c2	            0xeb3b	                           jmp 0x40000ff	       201	worktree.c	FUNCTION_7	WHILE_1
0x40000c4	        0x498d40ff	                       lea rax, [r8 - 1]	       204	worktree.c	FUNCTION_7	FOR_1
0x40000c8	          0x4939c0	                             cmp r8, rax	       204	worktree.c	FUNCTION_7	FOR_1
0x40000cb	            0x732b	                           jae 0x40000f8	       204	worktree.c	FUNCTION_7	FOR_1
0x40000cd	      0x418078ff2f	                 cmp byte [r8 - 1], 0x2f	       205	worktree.c	FUNCTION_7	FOR_1	IF_1
0x40000d2	            0x740e	                            je 0x40000e2	       205	worktree.c	FUNCTION_7	FOR_1	IF_1
0x40000d4	      0xba00000000	                              mov edx, 0	       205	worktree.c	FUNCTION_7	FOR_1	IF_1
0x40000d9	            0xeb12	                           jmp 0x40000ed	       205	worktree.c	FUNCTION_7	FOR_1	IF_1
0x40000db	          0x80382f	                    cmp byte [rax], 0x2f	       205	worktree.c	FUNCTION_7	FOR_1	IF_1
0x40000de	            0x750d	                           jne 0x40000ed	       205	worktree.c	FUNCTION_7	FOR_1	IF_1
0x40000e0	            0xeb05	                           jmp 0x40000e7	       205	worktree.c	FUNCTION_7	FOR_1	IF_1
0x40000e2	      0xba00000000	                              mov edx, 0	       205	worktree.c	FUNCTION_7	FOR_1	IF_1
0x40000e7	        0x4883c001	                              add rax, 1	       206	worktree.c	FUNCTION_7	FOR_1	IF_1
0x40000eb	            0xeb1f	                           jmp 0x400010c	       207	worktree.c	FUNCTION_7	FOR_1	IF_1
0x40000ed	        0x4883e801	                              sub rax, 1	       204	worktree.c	FUNCTION_7	FOR_1
0x40000f1	          0x4939c0	                             cmp r8, rax	       204	worktree.c	FUNCTION_7	FOR_1
0x40000f4	            0x72e5	                            jb 0x40000db	       204	worktree.c	FUNCTION_7	FOR_1
0x40000f6	            0xeb14	                           jmp 0x400010c	       204	worktree.c	FUNCTION_7	FOR_1
0x40000f8	      0xba00000000	                              mov edx, 0	       204	worktree.c	FUNCTION_7	FOR_1
0x40000fd	            0xeb0d	                           jmp 0x400010c	       204	worktree.c	FUNCTION_7	FOR_1
0x40000ff	          0x4863c2	                         movsxd rax, edx	       204	worktree.c	FUNCTION_7	FOR_1
0x4000102	      0x498d4400ff	                 lea rax, [r8 + rax - 1]	       204	worktree.c	FUNCTION_7	FOR_1
0x4000107	          0x4939c0	                             cmp r8, rax	       204	worktree.c	FUNCTION_7	FOR_1
0x400010a	            0x72e1	                            jb 0x40000ed	       204	worktree.c	FUNCTION_7	FOR_1
0x400010c	            0x8916	                    mov dword [rsi], edx	       210	worktree.c	FUNCTION_7
0x400010e	              0xc3	                                     ret	       212	worktree.c	FUNCTION_7
remove_junk_on_signal	FOR,0:SWITCH,0:IF,0:ELSE,0:CALL,3:functions,0:WHILE,0:DO,0	9
0x400022c	              0x53	                                push rbx	       189	worktree.c	FUNCTION_6
0x400022d	            0x89fb	                            mov ebx, edi	       189	worktree.c	FUNCTION_6
0x400022f	      0xe8dbfeffff	                    call sym.remove_junk	       190	worktree.c	FUNCTION_6	CALL_1
0x4000234	            0x89df	                            mov edi, ebx	       191	worktree.c	FUNCTION_6	CALL_2
0x4000236	      0xe800000000	                          call 0x400023b	       191	worktree.c	FUNCTION_6	CALL_2
0x400023b	            0x89df	                            mov edi, ebx	       192	worktree.c	FUNCTION_6	CALL_3
0x400023d	      0xe800000000	                          call 0x4000242	       192	worktree.c	FUNCTION_6	CALL_3
0x4000242	              0x5b	                                 pop rbx	       193	worktree.c	FUNCTION_6
0x4000243	              0xc3	                                     ret	       193	worktree.c	FUNCTION_6
