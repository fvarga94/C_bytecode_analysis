argv_array_pushv	DO,0:ELSE,0:CALL,1:SWITCH,0:WHILE,0:FOR,1:functions,0:IF,0	21
0x40002f0	              0x55	                                push rbp	        53	argv-array.c	FUNCTION_6
0x40002f1	              0x53	                                push rbx	        53	argv-array.c	FUNCTION_6
0x40002f2	          0x4889fd	                            mov rbp, rdi	        53	argv-array.c	FUNCTION_6
0x40002f5	        0x4883ec08	                              sub rsp, 8	        53	argv-array.c	FUNCTION_6
0x40002f9	          0x488b3e	                    mov rdi, qword [rsi]	        54	argv-array.c	FUNCTION_6	FOR_1
0x40002fc	          0x4885ff	                           test rdi, rdi	        54	argv-array.c	FUNCTION_6	FOR_1
0x40002ff	            0x7423	                            je 0x4000324	        54	argv-array.c	FUNCTION_6	FOR_1
0x4000301	          0x4889f3	                            mov rbx, rsi	        54	argv-array.c	FUNCTION_6	FOR_1
0x4000304	         0xf1f4000	                         nop dword [rax]	        54	argv-array.c	FUNCTION_6	FOR_1
0x4000308	      0xe800000000	                          call 0x400030d	        26	argv-array.c	FUNCTION_3	CALL_2
0x400030d	        0x4883c308	                              add rbx, 8	        54	argv-array.c	FUNCTION_6	FOR_1
0x4000311	          0x4889ef	                            mov rdi, rbp	        26	argv-array.c	FUNCTION_3	CALL_2
0x4000314	          0x4889c6	                            mov rsi, rax	        26	argv-array.c	FUNCTION_3	CALL_2
0x4000317	      0xe824fdffff	          call sym.argv_array_push_nodup	        26	argv-array.c	FUNCTION_3	CALL_2
0x400031c	          0x488b3b	                    mov rdi, qword [rbx]	        54	argv-array.c	FUNCTION_6	FOR_1
0x400031f	          0x4885ff	                           test rdi, rdi	        54	argv-array.c	FUNCTION_6	FOR_1
0x4000322	            0x75e4	                           jne 0x4000308	        54	argv-array.c	FUNCTION_6	FOR_1
0x4000324	        0x4883c408	                              add rsp, 8	        56	argv-array.c	FUNCTION_6
0x4000328	              0x5b	                                 pop rbx	        56	argv-array.c	FUNCTION_6
0x4000329	              0x5d	                                 pop rbp	        56	argv-array.c	FUNCTION_6
0x400032a	              0xc3	                                     ret	        56	argv-array.c	FUNCTION_6
argv_array_split	DO,0:ELSE,0:CALL,5:SWITCH,0:WHILE,3:FOR,1:functions,0:IF,1	58
0x4000370	              0x55	                                push rbp	        68	argv-array.c	FUNCTION_8
0x4000371	              0x53	                                push rbx	        68	argv-array.c	FUNCTION_8
0x4000372	          0x4889fd	                            mov rbp, rdi	        68	argv-array.c	FUNCTION_8
0x4000375	          0x4889f7	                            mov rdi, rsi	        68	argv-array.c	FUNCTION_8
0x4000378	        0x4883ec08	                              sub rsp, 8	        68	argv-array.c	FUNCTION_8
0x400037c	           0xfb606	                   movzx eax, byte [rsi]	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x400037f	          0x4863c8	                         movsxd rcx, eax	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x4000382	            0x89c2	                            mov edx, eax	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x4000384	    0xf68100000000	                      test byte [rcx], 1	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x400038b	            0x7418	                            je 0x40003a5	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x400038d	           0xf1f00	                         nop dword [rax]	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x4000390	        0x4883c701	                              add rdi, 1	        70	argv-array.c	FUNCTION_8	WHILE_1
0x4000394	           0xfb607	                   movzx eax, byte [rdi]	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x4000397	          0x4863c8	                         movsxd rcx, eax	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x400039a	            0x89c2	                            mov edx, eax	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x400039c	    0xf68100000000	                      test byte [rcx], 1	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x40003a3	            0x75eb	                           jne 0x4000390	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x40003a5	            0x84d2	                             test dl, dl	        74	argv-array.c	FUNCTION_8	FOR_1	IF_1
0x40003a7	            0x7470	                            je 0x4000419	        74	argv-array.c	FUNCTION_8	FOR_1	IF_1
0x40003a9	     0xf1f80000000	                         nop dword [rax]	        74	argv-array.c	FUNCTION_8	FOR_1	IF_1
0x40003b0	            0x4898	                                    cdqe	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x40003b2	          0x4889fb	                            mov rbx, rdi	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x40003b5	    0xf68000000000	                      test byte [rax], 1	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x40003bc	            0x740b	                            je 0x40003c9	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x40003be	            0xeb60	                           jmp 0x4000420	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x40003c0	    0xf68000000000	                      test byte [rax], 1	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x40003c7	            0x750b	                           jne 0x40003d4	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x40003c9	        0x4883c301	                              add rbx, 1	        78	argv-array.c	FUNCTION_8	FOR_1	WHILE_2
0x40003cd	           0xfb603	                   movzx eax, byte [rbx]	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x40003d0	            0x84c0	                             test al, al	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x40003d2	            0x75ec	                           jne 0x40003c0	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x40003d4	          0x4889de	                            mov rsi, rbx	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x40003d7	          0x4829fe	                            sub rsi, rdi	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x40003da	      0xe800000000	                          call 0x40003df	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_4
0x40003df	          0x4889ef	                            mov rdi, rbp	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_4
0x40003e2	          0x4889c6	                            mov rsi, rax	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_4
0x40003e5	      0xe856fcffff	          call sym.argv_array_push_nodup	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_4
0x40003ea	           0xfb603	                   movzx eax, byte [rbx]	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x40003ed	          0x4889df	                            mov rdi, rbx	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x40003f0	          0x4863c8	                         movsxd rcx, eax	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x40003f3	            0x89c2	                            mov edx, eax	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x40003f5	    0xf68100000000	                      test byte [rcx], 1	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x40003fc	            0x74a7	                            je 0x40003a5	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x40003fe	            0x6690	                                     nop	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x4000400	        0x4883c701	                              add rdi, 1	        82	argv-array.c	FUNCTION_8	FOR_1	WHILE_3
0x4000404	           0xfb607	                   movzx eax, byte [rdi]	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x4000407	          0x4863c8	                         movsxd rcx, eax	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x400040a	            0x89c2	                            mov edx, eax	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x400040c	    0xf68100000000	                      test byte [rcx], 1	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x4000413	            0x75eb	                           jne 0x4000400	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x4000415	            0x84d2	                             test dl, dl	        74	argv-array.c	FUNCTION_8	FOR_1	IF_1
0x4000417	            0x7597	                           jne 0x40003b0	        74	argv-array.c	FUNCTION_8	FOR_1	IF_1
0x4000419	        0x4883c408	                              add rsp, 8	        85	argv-array.c	FUNCTION_8
0x400041d	              0x5b	                                 pop rbx	        85	argv-array.c	FUNCTION_8
0x400041e	              0x5d	                                 pop rbp	        85	argv-array.c	FUNCTION_8
0x400041f	              0xc3	                                     ret	        85	argv-array.c	FUNCTION_8
0x4000420	            0x31f6	                            xor esi, esi	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x4000422	            0xebb6	                           jmp 0x40003da	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
argv_array_push_nodup	DO,0:ELSE,0:CALL,1:SWITCH,0:WHILE,0:FOR,0:functions,0:IF,1	52
0x4000040	              0x55	                                push rbp	        15	argv-array.c	FUNCTION_2
0x4000041	              0x53	                                push rbx	        15	argv-array.c	FUNCTION_2
0x4000042	          0x4889f5	                            mov rbp, rsi	        15	argv-array.c	FUNCTION_2
0x4000045	          0x4889fb	                            mov rbx, rdi	        15	argv-array.c	FUNCTION_2
0x4000048	        0x4883ec08	                              sub rsp, 8	        15	argv-array.c	FUNCTION_2
0x400004c	    0x48813f000000	                      cmp qword [rdi], 0	        16	argv-array.c	FUNCTION_2	IF_1
0x4000053	     0xf847f000000	                            je 0x40000d8	        16	argv-array.c	FUNCTION_2	IF_1
0x4000059	        0x48637b08	            movsxd rdi, dword [rbx + 8] 	        19	argv-array.c	FUNCTION_2	CALL_1
0x400005d	          0x8b430c	              mov eax, dword [rbx + 0xc]	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000060	          0x8d4f01	                      lea ecx, [rdi + 1]	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000063	            0x39c1	                            cmp ecx, eax	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000065	            0x7c69	                            jl 0x40000d0	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000067	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	        19	argv-array.c	FUNCTION_2	CALL_1
0x400006b	            0x89c2	                            mov edx, eax	        19	argv-array.c	FUNCTION_2	CALL_1
0x400006d	          0xc1ea1f	                           shr edx, 0x1f	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000070	             0x1c2	                            add edx, eax	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000072	            0xd1fa	                              sar edx, 1	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000074	            0x39d1	                            cmp ecx, edx	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000076	            0x7d50	                           jge 0x40000c8	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000078	          0x89530c	              mov dword [rbx + 0xc], edx	        19	argv-array.c	FUNCTION_2	CALL_1
0x400007b	          0x4863d2	                         movsxd rdx, edx	        19	argv-array.c	FUNCTION_2	CALL_1
0x400007e	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x4000088	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x400008b	            0x7757	                            ja 0x40000e4	       795	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x400008d	          0x488b3b	                    mov rdi, qword [rbx]	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000090	    0x488d34d50000	                        lea rsi, [rdx*8]	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000098	      0xe800000000	                          call 0x400009d	        19	argv-array.c	FUNCTION_2	CALL_1
0x400009d	        0x48637b08	            movsxd rdi, dword [rbx + 8] 	        19	argv-array.c	FUNCTION_2	CALL_1
0x40000a1	          0x488903	                    mov qword [rbx], rax	        19	argv-array.c	FUNCTION_2	CALL_1
0x40000a4	          0x8d4f01	                      lea ecx, [rdi + 1]	        19	argv-array.c	FUNCTION_2	CALL_1
0x40000a7	          0x894b08	                mov dword [rbx + 8], ecx	        20	argv-array.c	FUNCTION_2
0x40000aa	        0x48892cf8	            mov qword [rax + rdi*8], rbp	        20	argv-array.c	FUNCTION_2
0x40000ae	          0x4863c9	                         movsxd rcx, ecx	        21	argv-array.c	FUNCTION_2
0x40000b1	          0x488b03	                    mov rax, qword [rbx]	        21	argv-array.c	FUNCTION_2
0x40000b4	    0x48c704c80000	              mov qword [rax + rcx*8], 0	        21	argv-array.c	FUNCTION_2
0x40000bc	        0x4883c408	                              add rsp, 8	        22	argv-array.c	FUNCTION_2
0x40000c0	              0x5b	                                 pop rbx	        22	argv-array.c	FUNCTION_2
0x40000c1	              0x5d	                                 pop rbp	        22	argv-array.c	FUNCTION_2
0x40000c2	              0xc3	                                     ret	        22	argv-array.c	FUNCTION_2
0x40000c3	       0xf1f440000	                   nop dword [rax + rax]	        22	argv-array.c	FUNCTION_2
0x40000c8	          0x8d5702	                      lea edx, [rdi + 2]	        19	argv-array.c	FUNCTION_2	CALL_1
0x40000cb	          0x89530c	              mov dword [rbx + 0xc], edx	        19	argv-array.c	FUNCTION_2	CALL_1
0x40000ce	            0xebab	                           jmp 0x400007b	        19	argv-array.c	FUNCTION_2	CALL_1
0x40000d0	          0x488b03	                    mov rax, qword [rbx]	        19	argv-array.c	FUNCTION_2	CALL_1
0x40000d3	            0xebd2	                           jmp 0x40000a7	        19	argv-array.c	FUNCTION_2	CALL_1
0x40000d5	           0xf1f00	                         nop dword [rax]	        19	argv-array.c	FUNCTION_2	CALL_1
0x40000d8	    0x48c707000000	                      mov qword [rdi], 0	        17	argv-array.c	FUNCTION_2	IF_1
0x40000df	      0xe975ffffff	                           jmp 0x4000059	        17	argv-array.c	FUNCTION_2	IF_1
0x40000e4	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x40000e9	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x40000ee	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x40000f0	      0xe800000000	                          call 0x40000f5	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
argv_array_pushf	DO,0:ELSE,0:CALL,5:SWITCH,0:WHILE,0:FOR,0:functions,0:IF,0	45
0x4000140	              0x53	                                push rbx	        30	argv-array.c	FUNCTION_4
0x4000141	          0x4889fb	                            mov rbx, rdi	        30	argv-array.c	FUNCTION_4
0x4000144	    0x4881ecf00000	                           sub rsp, 0xf0	        30	argv-array.c	FUNCTION_4
0x400014b	            0x84c0	                             test al, al	        30	argv-array.c	FUNCTION_4
0x400014d	      0x4889542450	             mov qword [rsp + 0x50], rdx	        30	argv-array.c	FUNCTION_4
0x4000152	      0x48894c2458	             mov qword [rsp + 0x58], rcx	        30	argv-array.c	FUNCTION_4
0x4000157	      0x4c89442460	              mov qword [rsp + 0x60], r8	        30	argv-array.c	FUNCTION_4
0x400015c	      0x4c894c2468	              mov qword [rsp + 0x68], r9	        30	argv-array.c	FUNCTION_4
0x4000161	            0x743d	                            je 0x40001a0	        30	argv-array.c	FUNCTION_4
0x4000163	       0xf29442470	       movaps xmmword [rsp + 0x70], xmm0	        30	argv-array.c	FUNCTION_4
0x4000168	     0xf298c248000	       movaps xmmword [rsp + 0x80], xmm1	        30	argv-array.c	FUNCTION_4
0x4000170	     0xf2994249000	       movaps xmmword [rsp + 0x90], xmm2	        30	argv-array.c	FUNCTION_4
0x4000178	     0xf299c24a000	       movaps xmmword [rsp + 0xa0], xmm3	        30	argv-array.c	FUNCTION_4
0x4000180	     0xf29a424b000	       movaps xmmword [rsp + 0xb0], xmm4	        30	argv-array.c	FUNCTION_4
0x4000188	     0xf29ac24c000	       movaps xmmword [rsp + 0xc0], xmm5	        30	argv-array.c	FUNCTION_4
0x4000190	     0xf29b424d000	       movaps xmmword [rsp + 0xd0], xmm6	        30	argv-array.c	FUNCTION_4
0x4000198	     0xf29bc24e000	       movaps xmmword [rsp + 0xe0], xmm7	        30	argv-array.c	FUNCTION_4
0x40001a0	    0x64488b042528	                mov rax, qword fs:[0x28]	        30	argv-array.c	FUNCTION_4
0x40001a9	      0x4889442438	             mov qword [rsp + 0x38], rax	        30	argv-array.c	FUNCTION_4
0x40001ae	            0x31c0	                            xor eax, eax	        30	argv-array.c	FUNCTION_4
0x40001b0	    0x488d84240001	                  lea rax, [rsp + 0x100]	        34	argv-array.c	FUNCTION_4	CALL_1
0x40001b8	      0x488d542420	                   lea rdx, [rsp + 0x20]	        35	argv-array.c	FUNCTION_4	CALL_2
0x40001bd	          0x4889e7	                            mov rdi, rsp	        35	argv-array.c	FUNCTION_4	CALL_2
0x40001c0	      0x4889442428	             mov qword [rsp + 0x28], rax	        34	argv-array.c	FUNCTION_4	CALL_1
0x40001c5	      0x488d442440	                   lea rax, [rsp + 0x40]	        34	argv-array.c	FUNCTION_4	CALL_1
0x40001ca	    0x48c704240000	                      mov qword [rsp], 0	        32	argv-array.c	FUNCTION_4
0x40001d2	    0x48c744240800	                  mov qword [rsp + 8], 0	        32	argv-array.c	FUNCTION_4
0x40001db	    0x48c744241000	               mov qword [rsp + 0x10], 0	        32	argv-array.c	FUNCTION_4
0x40001e4	      0x4889442430	             mov qword [rsp + 0x30], rax	        34	argv-array.c	FUNCTION_4	CALL_1
0x40001e9	    0xc74424201000	           mov dword [rsp + 0x20], 0x10 	        34	argv-array.c	FUNCTION_4	CALL_1
0x40001f1	    0xc74424243000	           mov dword [rsp + 0x24], 0x30 	        34	argv-array.c	FUNCTION_4	CALL_1
0x40001f9	      0xe800000000	                          call 0x40001fe	        35	argv-array.c	FUNCTION_4	CALL_2
0x40001fe	            0x31f6	                            xor esi, esi	        38	argv-array.c	FUNCTION_4	CALL_5
0x4000200	          0x4889e7	                            mov rdi, rsp	        38	argv-array.c	FUNCTION_4	CALL_5
0x4000203	      0xe800000000	                          call 0x4000208	        38	argv-array.c	FUNCTION_4	CALL_5
0x4000208	          0x4889df	                            mov rdi, rbx	        38	argv-array.c	FUNCTION_4	CALL_5
0x400020b	          0x4889c6	                            mov rsi, rax	        38	argv-array.c	FUNCTION_4	CALL_5
0x400020e	      0xe82dfeffff	          call sym.argv_array_push_nodup	        38	argv-array.c	FUNCTION_4	CALL_5
0x4000213	      0x488b442438	            mov rax, qword [rsp + 0x38] 	        39	argv-array.c	FUNCTION_4
0x4000218	    0x644833042528	                xor rax, qword fs:[0x28]	        39	argv-array.c	FUNCTION_4
0x4000221	            0x7509	                           jne 0x400022c	        39	argv-array.c	FUNCTION_4
0x4000223	    0x4881c4f00000	                           add rsp, 0xf0	        39	argv-array.c	FUNCTION_4
0x400022a	              0x5b	                                 pop rbx	        39	argv-array.c	FUNCTION_4
0x400022b	              0xc3	                                     ret	        39	argv-array.c	FUNCTION_4
0x400022c	      0xe800000000	                          call 0x4000231	        39	argv-array.c	FUNCTION_4
argv_array_pop	DO,0:ELSE,0:CALL,1:SWITCH,0:WHILE,0:FOR,0:functions,0:IF,1	18
0x4000330	        0x48634708	            movsxd rax, dword [rdi + 8] 	        60	argv-array.c	FUNCTION_7	IF_1
0x4000334	            0x85c0	                           test eax, eax	        60	argv-array.c	FUNCTION_7	IF_1
0x4000336	            0x7508	                           jne 0x4000340	        60	argv-array.c	FUNCTION_7	IF_1
0x4000338	              0xc3	                                     ret	        65	argv-array.c	FUNCTION_7
0x4000339	     0xf1f80000000	                         nop dword [rax]	        65	argv-array.c	FUNCTION_7
0x4000340	              0x53	                                push rbx	        59	argv-array.c	FUNCTION_7
0x4000341	          0x488b17	                    mov rdx, qword [rdi]	        62	argv-array.c	FUNCTION_7	CALL_1
0x4000344	          0x4889fb	                            mov rbx, rdi	        62	argv-array.c	FUNCTION_7	CALL_1
0x4000347	      0x488b7cc2f8	        mov rdi, qword [rdx + rax*8 - 8]	        62	argv-array.c	FUNCTION_7	CALL_1
0x400034c	      0xe800000000	                          call 0x4000351	        62	argv-array.c	FUNCTION_7	CALL_1
0x4000351	        0x48634b08	            movsxd rcx, dword [rbx + 8] 	        63	argv-array.c	FUNCTION_7
0x4000355	          0x488b13	                    mov rdx, qword [rbx]	        63	argv-array.c	FUNCTION_7
0x4000358	          0x4889c8	                            mov rax, rcx	        63	argv-array.c	FUNCTION_7
0x400035b	    0x48c744caf800	          mov qword [rdx + rcx*8 - 8], 0	        63	argv-array.c	FUNCTION_7
0x4000364	          0x83e801	                              sub eax, 1	        64	argv-array.c	FUNCTION_7
0x4000367	          0x894308	                mov dword [rbx + 8], eax	        64	argv-array.c	FUNCTION_7
0x400036a	              0x5b	                                 pop rbx	        65	argv-array.c	FUNCTION_7
0x400036b	              0xc3	                                     ret	        65	argv-array.c	FUNCTION_7
argv_array_clear	DO,0:ELSE,0:CALL,3:SWITCH,0:WHILE,0:FOR,1:functions,0:IF,1	27
0x4000430	            0x4154	                                push r12	        88	argv-array.c	FUNCTION_9
0x4000432	          0x4989fc	                            mov r12, rdi	        88	argv-array.c	FUNCTION_9
0x4000435	              0x55	                                push rbp	        88	argv-array.c	FUNCTION_9
0x4000436	              0x53	                                push rbx	        88	argv-array.c	FUNCTION_9
0x4000437	          0x488b3f	                    mov rdi, qword [rdi]	        89	argv-array.c	FUNCTION_9	IF_1
0x400043a	    0x4881ff000000	                              cmp rdi, 0	        89	argv-array.c	FUNCTION_9	IF_1
0x4000441	            0x742d	                            je 0x4000470	        89	argv-array.c	FUNCTION_9	IF_1
0x4000443	      0x418b442408	                mov eax, dword [r12 + 8]	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x4000448	            0x85c0	                           test eax, eax	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x400044a	            0x7e1f	                           jle 0x400046b	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x400044c	            0x31ed	                            xor ebp, ebp	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x400044e	            0x31db	                            xor ebx, ebx	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x4000450	        0x488b3c2f	              mov rdi, qword [rdi + rbp]	        92	argv-array.c	FUNCTION_9	IF_1	CALL_1
0x4000454	          0x83c301	                              add ebx, 1	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x4000457	        0x4883c508	                              add rbp, 8	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x400045b	      0xe800000000	                          call 0x4000460	        92	argv-array.c	FUNCTION_9	IF_1	CALL_1
0x4000460	      0x41395c2408	                cmp dword [r12 + 8], ebx	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x4000465	        0x498b3c24	                    mov rdi, qword [r12]	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x4000469	            0x7fe5	                            jg 0x4000450	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x400046b	      0xe800000000	                          call 0x4000470	        93	argv-array.c	FUNCTION_9	IF_1	CALL_2
0x4000470	              0x5b	                                 pop rbx	        96	argv-array.c	FUNCTION_9
0x4000471	    0x49c704240000	                      mov qword [r12], 0	         9	argv-array.c	FUNCTION_1
0x4000479	    0x41c744240800	                  mov dword [r12 + 8], 0	        10	argv-array.c	FUNCTION_1
0x4000482	    0x41c744240c00	                mov dword [r12 + 0xc], 0	        11	argv-array.c	FUNCTION_1
0x400048b	              0x5d	                                 pop rbp	        96	argv-array.c	FUNCTION_9
0x400048c	            0x415c	                                 pop r12	        96	argv-array.c	FUNCTION_9
0x400048e	              0xc3	                                     ret	        96	argv-array.c	FUNCTION_9
argv_array_pushl	DO,0:ELSE,0:CALL,4:SWITCH,0:WHILE,1:FOR,0:functions,0:IF,0	45
0x4000240	              0x53	                                push rbx	        42	argv-array.c	FUNCTION_5
0x4000241	          0x4889fb	                            mov rbx, rdi	        42	argv-array.c	FUNCTION_5
0x4000244	        0x4883ec50	                           sub rsp, 0x50	        42	argv-array.c	FUNCTION_5
0x4000248	    0x64488b042528	                mov rax, qword fs:[0x28]	        42	argv-array.c	FUNCTION_5
0x4000251	      0x4889442418	             mov qword [rsp + 0x18], rax	        42	argv-array.c	FUNCTION_5
0x4000256	            0x31c0	                            xor eax, eax	        42	argv-array.c	FUNCTION_5
0x4000258	      0x488d442460	                   lea rax, [rsp + 0x60]	        46	argv-array.c	FUNCTION_5	CALL_1
0x400025d	      0x4889742428	             mov qword [rsp + 0x28], rsi	        42	argv-array.c	FUNCTION_5
0x4000262	      0x4889542430	             mov qword [rsp + 0x30], rdx	        42	argv-array.c	FUNCTION_5
0x4000267	      0x48894c2438	             mov qword [rsp + 0x38], rcx	        42	argv-array.c	FUNCTION_5
0x400026c	      0x4c89442440	              mov qword [rsp + 0x40], r8	        42	argv-array.c	FUNCTION_5
0x4000271	      0x4889442408	                mov qword [rsp + 8], rax	        46	argv-array.c	FUNCTION_5	CALL_1
0x4000276	      0x488d442420	                   lea rax, [rsp + 0x20]	        46	argv-array.c	FUNCTION_5	CALL_1
0x400027b	      0x4c894c2448	              mov qword [rsp + 0x48], r9	        42	argv-array.c	FUNCTION_5
0x4000280	    0xc70424080000	                      mov dword [rsp], 8	        46	argv-array.c	FUNCTION_5	CALL_1
0x4000287	      0x4889442410	             mov qword [rsp + 0x10], rax	        46	argv-array.c	FUNCTION_5	CALL_1
0x400028c	            0xeb27	                           jmp 0x40002b5	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x400028e	            0x6690	                                     nop	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x4000290	            0x89c2	                            mov edx, eax	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x4000292	      0x4803542410	             add rdx, qword [rsp + 0x10]	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x4000297	          0x83c008	                              add eax, 8	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x400029a	          0x890424	                    mov dword [rsp], eax	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x400029d	          0x488b3a	                    mov rdi, qword [rdx]	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x40002a0	          0x4885ff	                           test rdi, rdi	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x40002a3	            0x742e	                            je 0x40002d3	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x40002a5	      0xe800000000	                          call 0x40002aa	        26	argv-array.c	FUNCTION_3	CALL_2
0x40002aa	          0x4889df	                            mov rdi, rbx	        26	argv-array.c	FUNCTION_3	CALL_2
0x40002ad	          0x4889c6	                            mov rsi, rax	        26	argv-array.c	FUNCTION_3	CALL_2
0x40002b0	      0xe88bfdffff	          call sym.argv_array_push_nodup	        26	argv-array.c	FUNCTION_3	CALL_2
0x40002b5	          0x8b0424	                    mov eax, dword [rsp]	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x40002b8	          0x83f82f	                           cmp eax, 0x2f	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x40002bb	            0x76d3	                           jbe 0x4000290	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x40002bd	      0x488b542408	                mov rdx, qword [rsp + 8]	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x40002c2	          0x488b3a	                    mov rdi, qword [rdx]	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x40002c5	        0x488d4208	                      lea rax, [rdx + 8]	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x40002c9	      0x4889442408	                mov qword [rsp + 8], rax	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x40002ce	          0x4885ff	                           test rdi, rdi	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x40002d1	            0x75d2	                           jne 0x40002a5	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x40002d3	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        50	argv-array.c	FUNCTION_5
0x40002d8	    0x644833042528	                xor rax, qword fs:[0x28]	        50	argv-array.c	FUNCTION_5
0x40002e1	            0x7506	                           jne 0x40002e9	        50	argv-array.c	FUNCTION_5
0x40002e3	        0x4883c450	                           add rsp, 0x50	        50	argv-array.c	FUNCTION_5
0x40002e7	              0x5b	                                 pop rbx	        50	argv-array.c	FUNCTION_5
0x40002e8	              0xc3	                                     ret	        50	argv-array.c	FUNCTION_5
0x40002e9	      0xe800000000	                          call 0x40002ee	        50	argv-array.c	FUNCTION_5
argv_array_detach	DO,0:ELSE,1:CALL,2:SWITCH,0:WHILE,0:FOR,0:functions,0:IF,1	11
0x4000490	          0x488b07	                    mov rax, qword [rdi]	       100	argv-array.c	FUNCTION_10	IF_1
0x4000493	    0x483d00000000	                              cmp rax, 0	       100	argv-array.c	FUNCTION_10	IF_1
0x4000499	            0x741d	                            je 0x40004b8	       100	argv-array.c	FUNCTION_10	IF_1
0x400049b	    0x48c707000000	                      mov qword [rdi], 0	         9	argv-array.c	FUNCTION_1
0x40004a2	    0xc74708000000	                  mov dword [rdi + 8], 0	        10	argv-array.c	FUNCTION_1
0x40004a9	    0xc7470c000000	                mov dword [rdi + 0xc], 0	        11	argv-array.c	FUNCTION_1
0x40004b0	              0xc3	                                     ret	       107	argv-array.c	FUNCTION_10
0x40004b1	     0xf1f80000000	                         nop dword [rax]	       107	argv-array.c	FUNCTION_10
0x40004b8	      0xbe08000000	                              mov esi, 8	       101	argv-array.c	FUNCTION_10	CALL_1
0x40004bd	      0xbf01000000	                              mov edi, 1	       101	argv-array.c	FUNCTION_10	CALL_1
0x40004c2	      0xe900000000	                   jmp section_end..data	       101	argv-array.c	FUNCTION_10	CALL_1
